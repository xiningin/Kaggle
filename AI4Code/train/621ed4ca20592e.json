{"cell_type":{"83bb426d":"code","e2fdec3f":"code","a76f0e24":"code","86b94aad":"code","f977a60c":"code","a5fde620":"code","bdf162ff":"code","6091f0c5":"code","ad0bd779":"code","90be0102":"code","713fa0fa":"code","39593422":"code","79fbba73":"code","5e82fe41":"code","5fd3c74e":"code","36a97d7f":"code","f4878b9a":"code","8f4415fc":"code","f928d7e6":"code","4ca55f6d":"code","bb9de47a":"markdown","4bdc19f2":"markdown","1e0ae9fa":"markdown","2c4569ad":"markdown","ca95a314":"markdown","945c1617":"markdown","5d6572fb":"markdown","70a03e8b":"markdown","fb34c4c0":"markdown","76985d9a":"markdown","97cae003":"markdown","b03358c8":"markdown","1be2d49c":"markdown","9b791b8b":"markdown","664f37dc":"markdown","4fe17562":"markdown","5ef925b6":"markdown","67589b63":"markdown","67f8b846":"markdown","db5e9a3d":"markdown","fae6dc46":"markdown","445b6c16":"markdown","53aceda5":"markdown","34505135":"markdown"},"source":{"83bb426d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport IPython.display\nfrom IPython.core.display import display, HTML, Javascript\n\nimport matplotlib.pyplot as plt\nimport plotly as py\nimport plotly.express as px\n\nimport plotly.graph_objects as go \nimport plotly.figure_factory as ff\nfrom plotly import subplots\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\n\nimport warnings \nwarnings.filterwarnings('ignore')\n%matplotlib inline","e2fdec3f":"html_p3 = \"\"\"<!DOCTYPE html><meta charset=\"utf-8\">\n<style> \n\nbody {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n.element {\n  align-items: center;\n  background-color:#f2e9e4;\n  border-radius: 50px;\n  display: flex;\n  justify-content: center;\n  margin-right: 4rem;\n  \n  color:#355070;font-family:Eurostile;\n               font-weight:600;\n               font-size:29px;\n}\n\n.element-1 {\n  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\n}\n\n <\/style>\n \n<div class=\"element element-1\">TABLE OF CONTENTS<\/div>\n\"\"\"\n\n\nhtml_p1 = \"\"\"<!DOCTYPE html><meta charset=\"utf-8\">\n<style>ol {\n    counter-reset: li; \/* Initiate a counter *\/\n    list-style:none;\n    *list-style: decimal; \n    padding: 0;\n    margin-bottom: 4em;\n  }\n    ol ol {\n    margin: 0 0 0 2em; \/* Add some left margin for inner lists *\/\n  }\n.rounded-list a{\n    position: relative;\n    display: block;\n    padding: .4em .4em .4em 4em;\n    margin: .3em 0;\n    font: 24px 'Eurostile';\n    font-weight: 600;\n    background: #f2e9e4;\n    margin-right: 4rem;\n    color: #355070;\n    text-decoration: none;\n    border-radius: .8em;\n    transition: all .3s ease-out;\n  }\n\n  .rounded-list a:hover{\n    background: #355070;\n  }\n\n  .rounded-list a:hover:before{\n    transform: rotate(360deg);\n  }\n\n  .rounded-list a:before{\n    content: counter(li);\n    counter-increment: li;\n    position: absolute;\n    left: -1.1em;\n    top: 50%;\n    margin-top: -1.3em;\n    background: #355070;\n    height: 2.4em;\n    width: 2.4em;\n    line-height: 2em;\n    border: .3em solid #fff;\n    text-align: center;\n    border-radius: 4em;\n    transition: all .3s ease-out;\n  } \n  .element-1 {\n  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\n}\n<\/style>\n<ol class=\"rounded-list\">\n    <li ><a href='#1' id='1b' hred='#' style='color:white;'>Introduction<\/a><\/li>\n    <li ><a href='#2' id='2b' hred='#' style='color:white;'>Before Digging Into The EDA<\/a><\/li>\n    <li ><a href='#3' id='3b' hred='#' style='color:white;'>A Little About Me ...<\/a><\/li>\n    <li ><a href='#4' id='4b' hred='#' style='color:white;'>Finding \"Geeks Like Me\"<\/a><\/li>\n    <li ><a href='#5' id='5b' hred='#' style='color:white;'>Finding my \"Dream Girl\"<\/a><\/li>\n    <li ><a href='#6' id='6b' hred='#' style='color:white;'>Rethinking Personalized Results<\/a><\/li>\n    <li ><a href='#7' id='7b' hred='#' style='color:white;'>To Learn More ...<\/a><\/li>\n  <\/ol>\n  \"\"\"\nh = display(HTML(html_p3))\nh = display(HTML(html_p1))","a76f0e24":"html_p2 = \"\"\"<!DOCTYPE html><meta charset=\"utf-8\">\n<style>\n<style>ol {\n    counter-reset: li; \/* Initiate a counter *\/\n    list-style:none;\n    *list-style: decimal; \n    padding: 0;\n    margin-bottom: 2em;\n  }\n    ol ol {\n    margin: 0 0 0 2em; \/* Add some left margin for inner lists *\/\n  }\n  \n  .rectangle-list a{\n    position: relative;\n    display: block;\n    padding: .2em .2em .2em .6em;\n    margin: .2em 0 .2em 1em;\n    background: #f2e9e4;\n    color: #4a5759;\n    text-decoration: none;\n    transition: all .3s ease-out;\n  }\n  .rectangle-list a:hover{\n    background: #355070;\n  }\n  .rectangle-list a:before{\n    content: counter(li);\n    counter-increment: li;\n    position: absolute;\n    left: -2.6em;\n    top: 50%;\n    margin-top: -1em;\n    background: #355070;\n    height: 2em;\n    width: 2em;\n    line-height: 2em;\n    text-align: center;\n    font-weight: bold;\n  }\n  .rectangle-list a:after{\n    position: absolute;\n    border: .5em solid transparent;\n    left: -1em;\n    top: 50%;\n    margin-top: -.5em;\n    transition: all .3s ease-out;\n  }\n\n  .rectangle-list a:hover:after{\n    left: -.5em;\n    border-left-color: #4a5759;\n  } <\/style>\n  \n<ol class=\"rectangle-list\">\n     <li href=\"\" style='color:white;background-color:#355070;padding:0.2em;font-family:Eurostile;\n               font-weight:600;\n               font-size:22px;'>Main Survey<\/li><ol>\n    <a href=\"\" style='color:white; background-color:#355070;'>Q1:  What is your age (# years) ?<\/a>\n    <a href=\"\" style='color:white; background-color:#355070;'>Q2:  What is your gender ?<\/a>\n    <a href=\"\" style='color:white; background-color:#355070;'>Q3:  In which country do you currently reside ? <\/a>\n    <a href=\"\" style='color:white; '>Q4:  What is the highest level of formal education that you have attained or plan to attain within the next 2 years ?<\/a>\n    <a href=\"\" style='color:white; background-color:#355070;'>Q5:  Select the title most similar to your current role ( or most recent title if retired): <\/a>\n    <a href=\"\" style='color:white;'>Q6:  For how many years have you been writing code and\/or programming ?<\/a>\n    <a href=\"\" style='color:white;'>Q7:  What programming languages do you use on a regular basis ?<\/a>\n    <a href=\"\" style='color:white;'>Q8:  What programming languages would you recommend an asipring data scientist to learn first? <\/a>\n    <a href=\"\" style='color:white;'>Q9:  Which of the following integrated development environments (IDE's) do you use on a regular basis?(Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q10: Which of the following hosted notebook products do you use on a regular basis? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q11: Which type of computing platform do you use most often for your data science projects ?<\/a>\n    <a href=\"\" style='color:white;'>Q12: Which types of specialized hardware do you use on a regular basis ?<\/a>\n    <a href=\"\" style='color:white;'>Q13: Approximately how many times have you used a TPU (tensor processing unit) ?<\/a>\n    <a href=\"\" style='color:white;'>Q14: What data visualization libraries or tools do you use on a regular basis ? (Select all that apply) <\/a>\n    <a href=\"\" style='color:white;'>Q15: For how many years have you used machine learning methods ?<\/a>\n    <a href=\"\" style='color:white;'>Q16: Which of the folowing machine learning frameworks do you use on a regular basis ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q17: Which of the following ML algorithms do you use on a regular basis ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q18: Which categories of computer vision methods do you use on a regular basis ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q19: Which of the following natural language processing (NLP) methods do you use on a regular basis ? (Select all that apply) <\/a>\n    <a href=\"\" style='color:white;'>Q20: In what industry is your current empployer\/contract (or your most recent employer if retired) ?<\/a>\n    <a href=\"\" style='color:white;'>Q21: What is the size of the company where you are employed s?<\/a>\n    <a href=\"\" style='color:white;'>Q22: Approximately how many individuals are responsible for data science workloads at your place of business ?<\/a>\n    <a href=\"\" style='color:white;'>Q23: Does your current employer incorporate machine learning methods into their business ?<\/a>\n    <a href=\"\" style='color:white;'>Q24: Select any activities that make up an important part of your role at work:<\/a>\n    <a href=\"\" style='color:white; background-color:#355070;'>Q25: What is your current yearly compensation (approcimate $USD) ?<\/a>\n    <a href=\"\" style='color:white;'>Q26: Approcimately how much money have you (or your team ) spent on machine learning and\/or cloud computing services at home ( or at work) in the past 5 years (approximate $USD) <\/a><\/li>\n    <a href=\"\" style='color:white;'>Q27-A: Which of the following cloud computing platforms do you use on a regular basis ?<\/a>\n    <a href=\"\" style='color:white;'>Q28: Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use) ?<\/a>\n    <a href=\"\" style='color:white;'>Q29-A: Do you use any of the following cloud computing products on a regular basis ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q30-A: Do you use any of the following data storage products on a regular basis ? (Slect all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q31-A: Do you use any of the following managed machne learning producs on a regular basis ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q32-A: Which of the following big data products do you use on a regular basis ?(Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q33: Which of the following big data products (rational databse, data warehouse, data lake, or similar) do you use most often?<\/a>\n    <a href=\"\" style='color:white;'>Q34: Which of the following business intelligence tools do you use on a regular basis? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q35: Which of the following buisness intelligence tools do you use most often ?<\/a>\n    <a href=\"\" style='color:white;'>Q36-A: Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q37-A: Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q38-A: Do you use any tools to help manage machine learning experiments ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q39: Where do you publicly share or deploy your data analysis or machine learning applications ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q40: On which platforms have you begun or completed data sience courses? (Select all that aplly)<\/a>\n    <a href=\"\" style='color:white;'>Q41: What is the primary tool that you use at work or school to analyze data? (Include text response)<\/a>\n    <a href=\"\" style='color:white;'>Q42: Who\/What are your favorite media sources that report on data science topics (Select all that apply)<\/a>\n    <\/ol>\n    <li href=\"\" style='color:white; background-color:#355070; padding:0.2em;font-family:Eurostile;\n               font-weight:600;\n               font-size:22px;'>Supplementary Questions<\/li><ol>\n    <a href=\"\" style='color:white;'>Q27-B: Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years ?<\/a>\n    <a href=\"\" style='color:white;'>Q29-B: In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q30-B: In the next 2 years, do you hope to become more familiar with any of these specific data storage products? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q31-B: In the next 2 years, do you hope to become more familiar with any of these managed machine learning products ? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q32-B: Which of the following big data products (rational databases, data warehouses, data lakes, or similar) do you hope to become more famaliar with in the next 2 years? (Select all that apply)<\/a>\n    <a href=\"\" style='color:white;'>Q34-B: Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years ?(Select all that apply)<\/a>    \n      <\/ol>\n  <\/ol>\n  \"\"\"\nh = display(HTML(html_p2))","86b94aad":"survey_2021=pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\ndescriptions = survey_2021.iloc[0,:]  \nsurvey_2021 = survey_2021.iloc[1:,:]  \nprint(\"There is a total of %d participants participated the survey, which contains of %d questions.\"%(survey_2021.shape[0], survey_2021.shape[1]))","f977a60c":"# define color palettes\n\nprimary_blue='#355070'\nprimary_purple='#b56576'\nprimary_red='#e56b6f'\nprimary_beige='#f2e9e4'\nprimary_blue_red='#6d597a'\nprimary_clam='#c9ada7'\n\nclass bcolors:\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKCYAN = '\\033[96m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'","a5fde620":"# redefine the age group according to the same scale\ndf_q5_q1=survey_2021.copy()\ndf_q5_q1['Q1'].replace(['18-21','22-24','25-29'],'18-29',inplace=True)\ndf_q5_q1['Q1'].replace(['30-34','35-39'],'30-39',inplace=True)\ndf_q5_q1['Q1'].replace(['40-44','45-49'],'40-49',inplace=True)\ndf_q5_q1['Q1'].replace(['50-54','55-59'],'50-59',inplace=True)\n\nq5_df = survey_2021['Q5'].value_counts()\nbar_color=([primary_blue]*q5_df.shape[0])\nbar_color[5]=primary_red\nq5_df=q5_df\/sum(q5_df)\n# basic graph\nfig = go.Figure()\nfig.add_trace(go.Bar(x = q5_df.values,y =q5_df.index,marker=dict(\n        color=bar_color,\n        line=dict(color=primary_blue, width=1.5)\n    ),orientation='h'))\n# styling changes\nfig.update_layout(plot_bgcolor =primary_beige,\n                  barmode='stack',\n                  hovermode = 'y unified',\n                  clickmode='event+select',\n                 font  = dict(color = \"#355070\", family='Eurostile'), \n                 title = dict(text=\"<span style='font-size:29px; font-family:Eurostile,'><b>7.65%<\/b> of Kaggle Survey 2021 Participants <br> also answered <b>Unemployed<\/b><\/span>\",x=0.5, y=0.903),\n                 xaxis = dict(title = \"<span style='font-size:18px; font-family:Eurostile;'>Current role<\/span>\", linecolor = \"#355070\",tickformat = '.2%'), \n                 yaxis = dict(title = \"<span style='font-size:18px; font-family:Eurostile;'>Number of Participants<\/span>\", linecolor = \"#355070\",categoryorder='array',\n           categoryarray=q5_df.sort_values(ascending=True).keys()))\nfig.update_layout(\n    width=800, height=400,\n    margin=dict(l=10, r=10, t=80, b=20),\n    paper_bgcolor=primary_beige,\n)\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q5=(df_q5_q1['Q5']=='Currently not employed') \nmain_annot_format = \"<span style='font-size:11px; font-family:Eurostile;'> %s <\/span>\"\nfig.add_annotation(dict(\n        x=0.145,\n        y=.63,\n        text=\"\",\n        ax=\"290\",\n        ay=\"25\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.665,\n        y=0.56,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>I'M HERE! In a group of <b>\"+ str(df_q5_q1[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are <b>Currently Not Employed <\/b><br> in Kaggle Survey 2021.<\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\n\n\n\nfig.show()","bdf162ff":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\nage_df = pd.DataFrame()\n\nfor title in df_q5_q1['Q5'].value_counts().keys().sort_values(ascending=True):\n    age_df[title] = df_q5_q1[df_q5_q1[\"Q5\"]==title][\"Q1\"].value_counts()\n     \nage_df.dropna(inplace = True)\nage_df = age_df\/sum(age_df.sum(axis=1))\nage_df=age_df.sort_index()\n\nbar_color=([primary_blue]*age_df.shape[1])\nbar_color[list(age_df.columns).index('Currently not employed')]=primary_red\n\n# create a list of trace based on the age groups\nfor i in range(age_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=age_df.columns,\n        x=age_df.iloc[i],\n        name=age_df.iloc[i].name,\n        marker=dict(color=bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=age_df.columns,\n        x=age_df.iloc[i],\n        name=age_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nlayout = dict(\n    title = dict(text =\"<span style='font-size:29px; font-family:Eurostile'><b>4.23%<\/b> of Kaggle Survey 2021 Participants <br> also answered <b>Unemployed, Age 18-29<\/b><\/span>\",x=0.5, y=0.953),\n    margin = dict(t=80, l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, domain=[0,0.95], showticklabels = False),\n    xaxis2 = dict(domain=[0,1], tickformat = '.2%'),\n    yaxis = dict(domain=[0.85,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.83]\n           },\n    barmode = \"stack\",\n    hovermode = \"y unified\",\n    clickmode='event+select',\n    bargap = 0.08,\n    showlegend = False,\n    width = 800,\n    height = 600,\n    paper_bgcolor=primary_beige,\n    plot_bgcolor = primary_beige\n)\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)]],\n    font_colors = [primary_beige]*6,\n    colorscale= color_list,\n    xgap = 1.5,\n    showscale = False\n)\n\ndata=[]\nfor i in range (age_df.shape[0]):\n    data.append(globals()['trace%s' % i])\n# plotting stacked bar charts     \nfig = subplots.make_subplots(\n    rows=2, \n    cols=1, \n    shared_yaxes=True, \n    shared_xaxes=False, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.01\n)\nfig.append_trace(colorscale.data[0],1,1); \nfor i in range(age_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1,);\n\n\nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q5=(df_q5_q1['Q1']=='18-29')\\\n                    &(df_q5_q1['Q5']=='Currently not employed') \nfig.add_annotation(dict(\n        x=0.145,\n        y=.58,\n        text=\"\",\n        ax=\"290\",\n        ay=\"5\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.665,\n        y=0.56,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>I'M HERE! In a group of <b>\"+ str(df_q5_q1[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are <b> Age 18 - 29, <br>Currently Not Employed <\/b><br> in Kaggle Survey 2021.<\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\n\n\niplot(fig)","6091f0c5":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\nage_df = pd.DataFrame()\n# redefine the age group according to the same scale\ndf_q5_q1=survey_2021.copy()\ndf_q5_q1['Q1'].replace(['18-21','22-24','25-29'],'18-29',inplace=True)\ndf_q5_q1['Q1'].replace(['30-34','35-39'],'30-39',inplace=True)\ndf_q5_q1['Q1'].replace(['40-44','45-49'],'40-49',inplace=True)\ndf_q5_q1['Q1'].replace(['50-54','55-59'],'50-59',inplace=True)\n\nfor title in df_q5_q1['Q5'].value_counts().keys().sort_values(ascending=True):\n    age_df[title] = df_q5_q1[df_q5_q1[\"Q5\"]==title][\"Q1\"].value_counts()\n     \nage_df.dropna(inplace = True)\nage_df = age_df\/age_df.sum()\nage_df=age_df.sort_index()\n\nbar_color=([primary_blue]*age_df.shape[1])\nbar_color[list(age_df.columns).index('Currently not employed')]=primary_red\n\n# create a list of trace based on the age groups\nfor i in range(age_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=age_df.columns,\n        x=age_df.iloc[i],\n        name=age_df.iloc[i].name,\n        marker=dict(color=bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=age_df.columns,\n        x=age_df.iloc[i],\n        name=age_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nlayout = dict(\n    title = dict(text =\"<span style='font-size:29px; font-family:Eurostile'><b>55%<\/b> Participants Who Are <b>Currently Not Employed <\/b> <br> are <b> Age 18-29<\/b><\/span>\",x=0.5, y=0.953),\n    margin = dict(t=80, l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, domain=[0,0.95], showticklabels = False),\n    xaxis2 = dict(domain=[0,1], tickformat = '%'),\n    yaxis = dict(domain=[0.85,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.83]\n           },\n    barmode = \"stack\",\n    hovermode = 'y unified',\n    clickmode='event+select',\n    bargap = 0.08,\n    showlegend = False,\n    width = 800,\n    height = 600,\n    paper_bgcolor=primary_beige,\n    plot_bgcolor = primary_beige\n)\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)]],\n    font_colors = [primary_beige]*6,\n    colorscale= color_list,\n    xgap = 1.5,\n    showscale = False\n)\n\ndata=[]\nfor i in range (age_df.shape[0]):\n    data.append(globals()['trace%s' % i])\n# plotting stacked bar charts     \nfig = subplots.make_subplots(\n    rows=2, \n    cols=1, \n    shared_yaxes=True, \n    shared_xaxes=False, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.01\n)\nfig.append_trace(colorscale.data[0],1,1); \nfor i in range(age_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1,);\n\n\nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \n\nfig.update_layout(layout)\n\niplot(fig)","ad0bd779":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\ndu_color_list=[\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]+(color_list)\n# redefine the age group according to the same scale\ndf_q5_q1_q2=df_q5_q1.copy()\n\n# Creating df for students\ngender_df_1 = df_q5_q1[df_q5_q1[\"Q2\"]==\"Man\"]\ngender_df_2= df_q5_q1[df_q5_q1[\"Q2\"]==\"Woman\"]\n\nmale_df= pd.DataFrame()\nfemale_df = pd.DataFrame()\n\nfor title in (gender_df_1['Q5'].value_counts().keys().sort_values(ascending=True)):\n    male_df[title] = gender_df_1[gender_df_1[\"Q5\"]==title][\"Q1\"].value_counts()\n    female_df[title] = gender_df_2[gender_df_2[\"Q5\"]==title][\"Q1\"].value_counts()\n\nmale_df.dropna(inplace = True)\nmale_df = male_df\/male_df.sum()\nmale_df=male_df.sort_index()\n\nfemale_df.dropna(inplace = True)\nfemale_df = female_df\/female_df.sum()\nfemale_df=female_df.sort_index()\n\n\nmale_bar_color=([primary_blue]*male_df.shape[1])\nfemale_bar_color=([primary_blue]*female_df.shape[1])\nfemale_bar_color[list(female_df.columns).index('Currently not employed')]=primary_red\n\n# create a list of trace based on the age groups\nfor i in range(female_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=-female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=female_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=-female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nfor i in range(male_df.shape[0]):\n    if i ==0:\n        globals()['male_trace%s' % i]=go.Bar(\n        y=male_df.columns,\n        x=male_df.iloc[i],\n        name=male_df.iloc[i].name,\n        marker=dict(color=male_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['male_trace%s' % i]=go.Bar(\n        y=male_df.columns,\n        x=male_df.iloc[i],\n        name=male_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\ntitle2=\"<span style='font-size:24px; font-family:Eurostile;'><b>53%<\/b>Participants Who Are <b>Currently Not Employed,Women <\/b> are <b>Age 18-29 <\/b><\/span>\"\ntitle1=\"<span style='font-size:29px; font-family:Eurostile;'>Age Demographic Breakdown of <b>Women vs.Man<\/b><\/span>\"      \nlayout = dict(\n    title = dict(text=title1+'<br>'+title2,x=0.5,y=0.96),\n    plot_bgcolor=primary_beige,\n    margin = dict(t=80,l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, showticklabels = False,domain=[0.05,0.95]),\n    xaxis2 = dict(domain=[0,1], tickformat = '.3%'),\n    yaxis = dict(domain=[0.89,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.89]\n           },\n    barmode=\"stack\",\n    hovermode = 'y unified',\n    clickmode='event+select',\n    bargap = 0.03,\n    showlegend = False,\n    width = 1000,\n    height = 500,\n    paper_bgcolor=primary_beige\n)\n\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6,7,8,9,10,11,12]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in (df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=False).append(df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)))]],\n    font_colors = [primary_beige]*12,\n    colorscale= du_color_list,\n    xgap = 1.5,\n    showscale =False\n)\n\ndata=[]\nfor i in range (male_df.shape[0]):\n    data.append(globals()['male_trace%s' % i])\nfor i in range (female_df.shape[0]):\n    data.append(globals()['trace%s' % i])   \n# plotting stacked bar charts     \n\nfig= subplots.make_subplots(\n    rows=2, \n    cols=2,\n    row_heights=[.01, 0.9],\n    column_widths=[0.5,0.5],\n    shared_yaxes=True, \n    shared_xaxes=False,\n    horizontal_spacing = 0.001, \n    vertical_spacing = 0.15\n)\n\nfig.append_trace(colorscale.data[0],1,1);\n\nfor i in range (female_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1)  \nfor i in range (male_df.shape[0]):\n    fig.append_trace(globals()['male_trace%s' % i],2,2)\n\n    \nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\niplot(fig)\n\n","90be0102":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\ndu_color_list=[\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]+(color_list)\n# redefine the age group according to the same scale\ndf_q5_q1_q2=df_q5_q1.copy()\n\n# Creating df for students\ngender_df_1 = df_q5_q1[df_q5_q1[\"Q2\"]==\"Man\"]\ngender_df_2= df_q5_q1[df_q5_q1[\"Q2\"]==\"Woman\"]\n\nmale_df= pd.DataFrame()\nfemale_df = pd.DataFrame()\n\nfor title in (gender_df_1['Q5'].value_counts().keys().sort_values(ascending=True)):\n    male_df[title] = gender_df_1[gender_df_1[\"Q5\"]==title][\"Q1\"].value_counts()\n    female_df[title] = gender_df_2[gender_df_2[\"Q5\"]==title][\"Q1\"].value_counts()\n\nmale_df.dropna(inplace = True)\nmale_df = male_df\/sum(df_q5_q1[\"Q2\"].value_counts())\nmale_df=male_df.sort_index()\n\nfemale_df.dropna(inplace = True)\nfemale_df = female_df\/sum(df_q5_q1[\"Q2\"].value_counts())\nfemale_df=female_df.sort_index()\n\n\nmale_bar_color=([primary_blue]*male_df.shape[1])\nfemale_bar_color=([primary_blue]*female_df.shape[1])\nfemale_bar_color[list(female_df.columns).index('Currently not employed')]=primary_red\n\n# create a list of trace based on the age groups\nfor i in range(female_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=-female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=female_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=-female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nfor i in range(male_df.shape[0]):\n    if i ==0:\n        globals()['male_trace%s' % i]=go.Bar(\n        y=male_df.columns,\n        x=male_df.iloc[i],\n        name=male_df.iloc[i].name,\n        marker=dict(color=male_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['male_trace%s' % i]=go.Bar(\n        y=male_df.columns,\n        x=male_df.iloc[i],\n        name=male_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\ntitle2=\"<span style='font-size:22px; font-family:Eurostile;'><b>0.9%<\/b> of Kaggle Survey 2021 Participants Are <b>Currently Not Employed,Women,Age 18-29 <\/b><\/span>\"\ntitle1=\"<span style='font-size:26px; font-family:Eurostile;'>Age Demographic Breakdown of <b>Women vs.Man<\/b><\/span>\"      \nlayout = dict(\n    title = dict(text=title1+'<br>'+title2,x=0.5,y=0.96),\n    plot_bgcolor=primary_beige,\n    margin = dict(t=80,l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, showticklabels = False,domain=[0.05,0.95]),\n    xaxis2 = dict(domain=[0,1], tickformat = '.3%'),\n    yaxis = dict(domain=[0.89,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.89]\n           },\n    barmode=\"stack\",\n    hovermode = 'y unified',\n    clickmode='event+select',\n    bargap = 0.03,\n    showlegend = False,\n    width = 1000,\n    height = 500,\n    paper_bgcolor=primary_beige\n)\n\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6,7,8,9,10,11,12]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in (df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=False).append(df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)))]],\n    font_colors = [primary_beige]*12,\n    colorscale= du_color_list,\n    xgap = 1.5,\n    showscale =False\n)\n\ndata=[]\nfor i in range (male_df.shape[0]):\n    data.append(globals()['male_trace%s' % i])\nfor i in range (female_df.shape[0]):\n    data.append(globals()['trace%s' % i])   \n# plotting stacked bar charts     \n\nfig= subplots.make_subplots(\n    rows=2, \n    cols=2,\n    row_heights=[.01, 0.9],\n    column_widths=[0.5,0.5],\n    shared_yaxes=True, \n    shared_xaxes=False,\n    horizontal_spacing = 0.001, \n    vertical_spacing = 0.15\n)\n\nfig.append_trace(colorscale.data[0],1,1);\n\nfor i in range (female_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1)  \nfor i in range (male_df.shape[0]):\n    fig.append_trace(globals()['male_trace%s' % i],2,2)\n\n    \nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\n\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q2_Q5=(df_q5_q1['Q1']=='18-29')\\\n                    &(df_q5_q1['Q2']=='Woman')\\\n                    &(df_q5_q1['Q5']=='Currently not employed') \n\nmain_annot_format = \"<span style='font-size:11px; font-family:Eurostile;'> %s <\/span>\"\nfig.add_annotation(dict(\n        x=0.435,\n        y=.092,\n        text=\"\",\n        ax=\"-130\",\n        ay=\"-15\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.18,\n        y=0.23,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>I'M HERE! In a group of <b>\"+ str(df_q5_q1[my_answers_Q1_Q2_Q5].shape[0])+ \"<\/b> participants<br> who are <b> Age 18 - 29, woman, <br>Currently Not Employed.<\/b><\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\n\nfig.add_annotation(dict(\n        x=0,\n        y=-0.06,\n        xref =\"paper\",\n        yref =\"paper\",\n        text=\"                                                                                          \",\n        ax=0, ay=0,\n        showarrow = False,\n        align=\"center\",\n        bordercolor=primary_blue,\n    font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        borderwidth=2,\n        borderpad=5,\n        opacity=0.3,\n        bgcolor=primary_beige\n))\n\nfig.add_annotation(dict(\n        x=1,\n        y=-0.06,\n        xref =\"paper\",\n        yref =\"paper\",\n        text=\"                                                                                          \",\n        ax=0, ay=0,\n        showarrow = False,\n        bordercolor=primary_red,\n    font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        borderwidth=2,\n        borderpad=5,\n        opacity=0.4,\n        bgcolor=primary_beige\n))\n\nfig.add_annotation(dict(\n        x=0.8,\n        y=0.02,\n        xref =\"paper\",\n        yref =\"paper\",\n        text=\" Different Scale  \",\n        ax=0, ay=-80,\n        showarrow = True,\n        arrowhead=2,\n        arrowwidth=2,\n        arrowcolor=primary_red,\n        font=dict(\n            family=\"Eurostile\",\n            size=24,\n            color=primary_red,\n            ),\n        opacity=1\n))\nfig.add_annotation(dict(\n        x=0.92,\n        y=0.16,\n        xref =\"paper\",\n        yref =\"paper\",\n        text=\" Different Scale  \",\n        ax=0, ay=0,\n        showarrow = False,\n        font=dict(\n            family=\"Eurostile\",\n            size=14,\n            color=primary_blue,\n            ),\n        opacity=0.5\n))\nfig.add_annotation(dict(\n        x=0.3,\n        y=0.02,\n        xref =\"paper\",\n        yref =\"paper\",\n        text=\"\",\n        ax=397, ay=-68,\n        showarrow = True,\n        arrowhead=2,\n        arrowwidth=1,\n        opacity=0.4,\n        arrowcolor=primary_blue\n))\niplot(fig)\n","713fa0fa":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\n\ngender_df_2= df_q5_q1[df_q5_q1[\"Q2\"]==\"Woman\"]\n\nmale_df= pd.DataFrame()\nfemale_df = pd.DataFrame()\n\nfor title in (gender_df_1['Q5'].value_counts().keys().sort_values(ascending=True)):\n    female_df[title] = gender_df_2[gender_df_2[\"Q5\"]==title][\"Q1\"].value_counts()\n\nfemale_df.dropna(inplace = True)\nfemale_df = female_df\/sum(df_q5_q1[\"Q2\"].value_counts())\nfemale_df=female_df.sort_index()\n\nfemale_bar_color=([primary_blue]*female_df.shape[1])\nfemale_bar_color[list(female_df.columns).index('Currently not employed')]=primary_red\n\n# create a list of trace based on the age groups\nfor i in range(female_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=female_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nlayout = dict(\n    title = dict(text =\"<span style='font-size:22px; font-family:Eurostile;'><b>0.9%<\/b> of Kaggle Survey 2021 Participants Are <br><b>Currently Not Employed,Women,Age 18-29 <\/b><\/span>\",x=0.5, y=0.953),\n    margin = dict(t=80, l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, domain=[0,0.95], showticklabels = False),\n    xaxis2 = dict(domain=[0,1], tickformat = '.2%'),\n    yaxis = dict(domain=[0.85,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.83]\n           },\n    barmode = \"stack\",\n    hovermode = \"y unified\",\n    clickmode='event+select',\n    bargap = 0.08,\n    showlegend = False,\n    width = 800,\n    height = 600,\n    paper_bgcolor=primary_beige,\n    plot_bgcolor = primary_beige\n)\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)]],\n    font_colors = [primary_beige]*6,\n    colorscale= color_list,\n    xgap = 1.5,\n    showscale = False\n)\n\ndata=[]\nfor i in range (female_df.shape[0]):\n    data.append(globals()['trace%s' % i])\n# plotting stacked bar charts     \nfig = subplots.make_subplots(\n    rows=2, \n    cols=1, \n    shared_yaxes=True, \n    shared_xaxes=False, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.01\n)\nfig.append_trace(colorscale.data[0],1,1); \nfor i in range(female_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1,);\n\n\nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q5=(df_q5_q1['Q1']=='18-29')\\\n                 &(df_q5_q1['Q2']=='Woman') \\\n                    &(df_q5_q1['Q5']=='Currently not employed') \n\nmain_annot_format = \"<span style='font-size:11px; font-family:Eurostile;'> %s <\/span>\"\nfig.add_annotation(dict(\n        x=0.128,\n        y=.7,\n        text=\"\",\n        ax=\"230\",\n        ay=\"80\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.665,\n        y=0.56,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>I'M HERE! In a group of <b>\"+ str(df_q5_q1[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are <b> Age 18 - 29, <br>Currently Not Employed.<\/b><\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\n\n\niplot(fig)","39593422":"#Apparently my own group make $0 income\nprint(df_q5_q1[(df_q5_q1['Q1']=='18-29')\\\n                 &(df_q5_q1['Q2']=='Woman') \\\n                &(df_q5_q1['Q3']=='United States of America') \\\n                &(df_q5_q1['Q5']=='Currently not employed')]['Q25'])","79fbba73":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\n\ngender_df_2= df_q5_q1[(df_q5_q1['Q2']=='Woman')&(df_q5_q1['Q3']=='United States of America')] \nfemale_world=df_q5_q1[(df_q5_q1['Q2']=='Woman')]\nfemale_df = pd.DataFrame()\n\nfor title in (gender_df_2['Q5'].value_counts().keys().sort_values(ascending=True)):\n    female_df[title] = gender_df_2[gender_df_2[\"Q5\"]==title][\"Q1\"].value_counts()\n\nfemale_df=female_df.fillna(0)\nfemale_df = female_df\/sum(df_q5_q1[\"Q2\"].value_counts())\nfemale_df=female_df.sort_index()\n\nfemale_bar_color=([primary_blue]*female_df.shape[1])\nfemale_bar_color[list(female_df.columns).index('Currently not employed')]=primary_red\n\n# create a list of trace based on the age groups\nfor i in range(female_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=female_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nlayout = dict(\n    title = dict(text =\"<span style='font-size:22px; font-family:Eurostile;'><b>0.05%<\/b> of Kaggle Survey 2021 Participants Are <br><b>Currently Not Employed,Women,Age 18-29, Reside in the United States <\/b><\/span>\",x=0.5, y=0.953),\n    margin = dict(t=80, l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, domain=[0,0.95], showticklabels = False),\n    xaxis2 = dict(domain=[0,1], tickformat = '.2%'),\n    yaxis = dict(domain=[0.85,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.83]\n           },\n    barmode = \"stack\",\n    hovermode = \"y unified\",\n    clickmode='event+select',\n    bargap = 0.08,\n    showlegend = False,\n    width = 800,\n    height = 600,\n    paper_bgcolor=primary_beige,\n    plot_bgcolor = primary_beige\n)\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)]],\n    font_colors = [primary_beige]*6,\n    colorscale= color_list,\n    xgap = 1.5,\n    showscale = False\n)\n\ndata=[]\nfor i in range (female_df.shape[0]):\n    data.append(globals()['trace%s' % i])\n# plotting stacked bar charts     \nfig = subplots.make_subplots(\n    rows=2, \n    cols=1, \n    shared_yaxes=True, \n    shared_xaxes=False, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.01\n)\nfig.append_trace(colorscale.data[0],1,1); \nfor i in range(female_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1,);\n\n\nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q5=(df_q5_q1['Q1']=='18-29')\\\n                 &(df_q5_q1['Q2']=='Woman') \\\n                &(df_q5_q1['Q3']=='United States of America') \\\n                    &(df_q5_q1['Q5']=='Currently not employed') \n\nmain_annot_format = \"<span style='font-size:11px; font-family:Eurostile;'> %s <\/span>\"\nfig.add_annotation(dict(\n        x=0.06,\n        y=.6,\n        text=\"\",\n        ax=\"300\",\n        ay=\"95\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.65,\n        y=0.31,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>I'M HERE! In a group of <b>\"+ str(df_q5_q1[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are <b> Age 18 - 29,Currently Not Employed,<br> Reside in the United States<\/b><br>  who apparently make $0 income.<\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\n\n\niplot(fig)","5e82fe41":"# redefine the age group according to the same scale\n\nq5_df = survey_2021['Q5'].value_counts()\nbar_color=([primary_blue]*q5_df.shape[0])\nbar_color[1]=primary_clam\nbar_color[4]=primary_clam\nbar_color[5]=primary_red\nbar_color[6]=primary_clam\nbar_color[7]=primary_clam\nq5_df=q5_df\/sum(q5_df)\n\n# basic graph\nfig = go.Figure()\nfig.add_trace(go.Bar(x = q5_df.values,y =q5_df.index,marker=dict(\n        color=bar_color,\n        line=dict(color=primary_blue, width=1.5)\n    ),orientation='h'))\n# styling changes\nfig.update_layout(plot_bgcolor =primary_beige,\n                  barmode='stack',\n                  hovermode = 'y unified',\n                  clickmode='event+select',\n                 font  = dict(color = \"#355070\", family='Eurostile'), \n                 title = dict(text=\"<span style='font-size:22px; font-family:Eurostile,'><b>34.47%<\/b> of Kaggle Survey 2021 Participants <br> are currently <b>Data Analyst, Data Scientist,<br> Machine Learning Engineer, Research Scientist<\/b><\/span>\",x=0.5, y=0.933),\n                 xaxis = dict(title = \"<span style='font-size:18px; font-family:Eurostile;'>Current role<\/span>\", linecolor = \"#355070\",tickformat = '.2%'), \n                 yaxis = dict(title = \"<span style='font-size:18px; font-family:Eurostile;'>Number of Participants<\/span>\", linecolor = \"#355070\",categoryorder='array',\n           categoryarray=q5_df.sort_values(ascending=True).keys()))\nfig.update_layout(\n    width=800, height=410,\n    margin=dict(l=10, r=10, t=80, b=20),\n    paper_bgcolor=primary_beige,\n)\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q5=(survey_2021['Q5'].isin(['Data Scientist','Data Analyst','Machine Learning Engineer','Research Scientist']))\n\nmain_annot_format = \"<span style='font-size:11px; font-family:Eurostile;'> %s <\/span>\"\n\nfig.add_annotation(dict(\n        x=0.665,\n        y=0.56,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>There are a total of <b>\"+ str(survey_2021[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are <b>Data Analyst, Data Scientist,<br> Machine Learning Engineer, Research Scientist,<\/b><br> in Kaggle Survey 2021.<\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\nfig.add_annotation(dict(\n        x=0.195,\n        y=.90,\n        text=\"\",\n        ax=\"180\",\n        ay=\"55\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.195,\n        y=.70,\n        text=\"\",\n        ax=\"180\",\n        ay=\"0\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.16,\n        y=.5,\n        text=\"\",\n        ax=\"200\",\n        ay=\"-30\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.164,\n        y=.57,\n        text=\"\",\n        ax=\"200\",\n        ay=\"-26\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.show()","5fd3c74e":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \n\nage_df = pd.DataFrame()\n\nfor title in df_q5_q1['Q5'].value_counts().keys().sort_values(ascending=True):\n    age_df[title] = df_q5_q1[df_q5_q1[\"Q5\"]==title][\"Q1\"].value_counts()\n     \nage_df.dropna(inplace = True)\nage_df = age_df\/sum(age_df.sum(axis=1))\nage_df=age_df.sort_index()\n\nbar_color=([primary_blue]*age_df.shape[1])\nbar_color[list(age_df.columns).index('Currently not employed')]=primary_red\nbar_color[list(age_df.columns).index('Data Scientist')]=primary_clam\nbar_color[list(age_df.columns).index('Data Analyst')]=primary_clam\nbar_color[list(age_df.columns).index('Machine Learning Engineer')]=primary_clam\nbar_color[list(age_df.columns).index('Research Scientist')]=primary_clam\n\n# create a list of trace based on the age groups\nfor i in range(age_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=age_df.columns,\n        x=age_df.iloc[i],\n        name=age_df.iloc[i].name,\n        marker=dict(color=bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=age_df.columns,\n        x=age_df.iloc[i],\n        name=age_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nlayout = dict(\n    title = dict(text =\"<span style='font-size:24px; font-family:Eurostile'><b>16.87%<\/b> of Kaggle Survey 2021 Participants <br> who are <b>Data Scientist, Data Analyst, <br>Machine Learning Engineer, and Research Sicentist,  Age 18-29<\/b><\/span>\",x=0.5, y=0.963),\n    margin = dict(t=100, l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, domain=[0,0.95], showticklabels = False),\n    xaxis2 = dict(domain=[0,1], tickformat = '.2%'),\n    yaxis = dict(domain=[0.85,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.83]\n           },\n    barmode = \"stack\",\n    hovermode = \"y unified\",\n    clickmode='event+select',\n    bargap = 0.08,\n    showlegend = False,\n    width = 820,\n    height = 600,\n    paper_bgcolor=primary_beige,\n    plot_bgcolor = primary_beige\n)\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)]],\n    font_colors = [primary_beige]*6,\n    colorscale= color_list,\n    xgap = 1.5,\n    showscale = False\n)\n\ndata=[]\nfor i in range (age_df.shape[0]):\n    data.append(globals()['trace%s' % i])\n# plotting stacked bar charts     \nfig = subplots.make_subplots(\n    rows=2, \n    cols=1, \n    shared_yaxes=True, \n    shared_xaxes=False, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.01\n)\nfig.append_trace(colorscale.data[0],1,1); \nfor i in range(age_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1,);\n\n\nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q5=(df_q5_q1['Q1']=='18-29')&(survey_2021['Q5'].isin(['Data Scientist','Data Analyst','Machine Learning Engineer','Research Scientist']))\n\nfig.add_annotation(dict(\n        x=0.665,\n        y=0.56,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>There are a total of <b>\"+ str(survey_2021[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are Age 18-29, <b>Data Analyst, Data Scientist,<br> Machine Learning Engineer, Research Scientist.<\/b><\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\nfig.add_annotation(dict(\n        x=0.195,\n        y=.76,\n        text=\"\",\n        ax=\"180\",\n        ay=\"65\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.105,\n        y=.7,\n        text=\"\",\n        ax=\"240\",\n        ay=\"40\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.06,\n        y=.53,\n        text=\"\",\n        ax=\"250\",\n        ay=\"-29\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.04,\n        y=.42,\n        text=\"\",\n        ax=\"260\",\n        ay=\"-49\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\n\niplot(fig)","36a97d7f":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\n\ngender_df_2= df_q5_q1[df_q5_q1[\"Q2\"]==\"Woman\"]\n\nmale_df= pd.DataFrame()\nfemale_df = pd.DataFrame()\n\nfor title in (gender_df_1['Q5'].value_counts().keys().sort_values(ascending=True)):\n    female_df[title] = gender_df_2[gender_df_2[\"Q5\"]==title][\"Q1\"].value_counts()\n\nfemale_df.dropna(inplace = True)\nfemale_df = female_df\/sum(df_q5_q1[\"Q2\"].value_counts())\nfemale_df=female_df.sort_index()\n\nfemale_bar_color=([primary_blue]*female_df.shape[1])\nfemale_bar_color[list(female_df.columns).index('Currently not employed')]=primary_red\nfemale_bar_color[list(female_df.columns).index('Data Scientist')]=primary_clam\nfemale_bar_color[list(female_df.columns).index('Data Analyst')]=primary_clam\nfemale_bar_color[list(female_df.columns).index('Machine Learning Engineer')]=primary_clam\nfemale_bar_color[list(female_df.columns).index('Research Scientist')]=primary_clam\n\n# create a list of trace based on the age groups\nfor i in range(female_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=female_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nlayout = dict(\n    title = dict(text =\"<span style='font-size:22px; font-family:Eurostile;'><b>3.13%<\/b> of Kaggle Survey 2021 Participants Are <br><b>Women,Age 18-29,Data Analyst, Data Scientist,<br> Machine Learning Engineer, Research Scientist.<\/b><\/span>\",x=0.5, y=0.963),\n    margin = dict(t=100, l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, domain=[0,0.95], showticklabels = False),\n    xaxis2 = dict(domain=[0,1], tickformat = '.2%'),\n    yaxis = dict(domain=[0.85,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.83]\n           },\n    barmode = \"stack\",\n    hovermode = \"y unified\",\n    clickmode='event+select',\n    bargap = 0.08,\n    showlegend = False,\n    width = 820,\n    height = 600,\n    paper_bgcolor=primary_beige,\n    plot_bgcolor = primary_beige\n)\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)]],\n    font_colors = [primary_beige]*6,\n    colorscale= color_list,\n    xgap = 1.5,\n    showscale = False\n)\n\ndata=[]\nfor i in range (female_df.shape[0]):\n    data.append(globals()['trace%s' % i])\n# plotting stacked bar charts     \nfig = subplots.make_subplots(\n    rows=2, \n    cols=1, \n    shared_yaxes=True, \n    shared_xaxes=False, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.01\n)\nfig.append_trace(colorscale.data[0],1,1); \nfor i in range(female_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1,);\n\n\nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\n\nmy_answers_Q1_Q5=(df_q5_q1['Q1']=='18-29')\\\n                 &(df_q5_q1['Q2']=='Woman') \\\n                &(survey_2021['Q5'].isin(['Data Scientist','Data Analyst','Machine Learning Engineer','Research Scientist']))\n\nmain_annot_format = \"<span style='font-size:11px; font-family:Eurostile;'> %s <\/span>\"\n\nfig.add_annotation(dict(\n        x=0.665,\n        y=0.56,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>There are <b>\"+ str(df_q5_q1[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are women, Age 18-29 <b>Data Analyst, Data Scientist,<br> Machine Learning Engineer, Research Scientist.<\/b><\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\n\nfig.add_annotation(dict(\n        x=0.105,\n        y=.7,\n        text=\"\",\n        ax=\"240\",\n        ay=\"40\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.06,\n        y=.53,\n        text=\"\",\n        ax=\"250\",\n        ay=\"-29\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.04,\n        y=.42,\n        text=\"\",\n        ax=\"260\",\n        ay=\"-49\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.148,\n        y=.75,\n        text=\"\",\n        ax=\"235\",\n        ay=\"65\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\niplot(fig)","f4878b9a":"# Ages of professionals by title\n# Create a color_list palette for the stacked bar chart \ncolor_list=list(reversed([\"#eaac8b\",\"#e5989b\",\"#b56576\",\"#9a8c98\",\"#6d6875\",primary_blue]))\n\ngender_df_2= df_q5_q1[(df_q5_q1['Q2']=='Woman')&(df_q5_q1['Q3']=='United States of America')] \nfemale_world=df_q5_q1[(df_q5_q1['Q2']=='Woman')]\nfemale_df = pd.DataFrame()\n\nfor title in (gender_df_2['Q5'].value_counts().keys().sort_values(ascending=True)):\n    female_df[title] = gender_df_2[gender_df_2[\"Q5\"]==title][\"Q1\"].value_counts()\n\nfemale_df=female_df.fillna(0)\nfemale_df = female_df\/sum(df_q5_q1[\"Q2\"].value_counts())\nfemale_df=female_df.sort_index()\n\nfemale_bar_color=([primary_blue]*female_df.shape[1])\nfemale_bar_color[list(female_df.columns).index('Currently not employed')]=primary_red\nfemale_bar_color[list(female_df.columns).index('Data Scientist')]=primary_clam\nfemale_bar_color[list(female_df.columns).index('Data Analyst')]=primary_clam\nfemale_bar_color[list(female_df.columns).index('Machine Learning Engineer')]=primary_clam\nfemale_bar_color[list(female_df.columns).index('Research Scientist')]=primary_clam\n\n# create a list of trace based on the age groups\nfor i in range(female_df.shape[0]):\n    if i ==0:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=female_bar_color),\n        orientation = \"h\")\n    else:\n        globals()['trace%s' % i]=go.Bar(\n        y=female_df.columns,\n        x=female_df.iloc[i],\n        name=female_df.iloc[i].name,\n        marker=dict(color=color_list[i]),\n        orientation = \"h\")    \n\nlayout = dict(\n    title = dict(text =\"<span style='font-size:22px; font-family:Eurostile;'><b>0.19%<\/b> of Kaggle Survey 2021 Participants Are <br><b>Women,Age 18-29, Reside in the United States,Data Analyst, Data Scientist,<br> Machine Learning Engineer, Research Scientist. <\/b><\/span>\",x=0.5, y=0.963),\n    margin = dict(t=100, l=15,b=15,r=15),\n    xaxis = dict(title=\"<span style='font-size:13px; font-family:Eurostile'><b>Color Key: <\/b>Age Groups<\/span>\", side=\"top\",title_standoff=0, domain=[0,0.95], showticklabels = False),\n    xaxis2 = dict(domain=[0,1], tickformat = '.2%'),\n    yaxis = dict(domain=[0.85,1], showticklabels = False),\n    yaxis2={'categoryorder':'array',\n           'categoryarray': age_df.loc[\"18-29\"].sort_values(ascending=True).keys(),\n            'domain':[0,0.83]\n           },\n    barmode = \"stack\",\n    hovermode = \"y unified\",\n    clickmode='event+select',\n    bargap = 0.08,\n    showlegend = False,\n    width = 830,\n    height = 600,\n    paper_bgcolor=primary_beige,\n    plot_bgcolor = primary_beige\n)\ncolorscale = ff.create_annotated_heatmap(\n    z=[[1,2,3,4,5,6]],\n    annotation_text =[[\"<span style='font-size:16px; font-family: Eurostile'>\"+text+\"<\/span>\" for text in df_q5_q1[\"Q1\"].value_counts().keys().sort_values(ascending=True)]],\n    font_colors = [primary_beige]*6,\n    colorscale= color_list,\n    xgap = 1.5,\n    showscale = False\n)\n\ndata=[]\nfor i in range (female_df.shape[0]):\n    data.append(globals()['trace%s' % i])\n# plotting stacked bar charts     \nfig = subplots.make_subplots(\n    rows=2, \n    cols=1, \n    shared_yaxes=True, \n    shared_xaxes=False, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.01\n)\nfig.append_trace(colorscale.data[0],1,1); \nfor i in range(female_df.shape[0]):\n    fig.append_trace(globals()['trace%s' % i],2,1,);\n\n\nannot1 = list(colorscale.layout.annotations)\nfor k in range(len(annot1)):\n    annot1[k]['xref'] = 'x'\n    annot1[k]['yref'] = 'y'\nfig.update_layout(annotations=annot1) \nfig.update_layout(layout)\n\n## Select the subset of individuals with the same answers from Q1, Q2, Q5\nmy_answers_Q1_Q5=(df_q5_q1['Q1']=='18-29')\\\n                 &(df_q5_q1['Q2']=='Woman') \\\n                &(df_q5_q1['Q3']=='United States of America') \\\n                &(survey_2021['Q5'].isin(['Data Scientist','Data Analyst','Machine Learning Engineer','Research Scientist']))\n\nmain_annot_format = \"<span style='font-size:11px; font-family:Eurostile;'> %s <\/span>\"\n\nfig.add_annotation(dict(\n        x=0.6,\n        y=0.28,\n        xref = \"paper\",\n        yref = \"paper\",\n        text= main_annot_format % (\"<span>There are <b>\"+ str(df_q5_q1[my_answers_Q1_Q5].shape[0])+ \"<\/b> participants<br> who are <b> Age 18 - 29, Data Analyst, Data Scientist,<br> Machine Learning Engineer, Research Scientist,<br> Reside in the United States.<\/b><\/span>\"),\n        ax=0, ay=0,\n        showarrow = True,\n        font=dict(\n            family=\"Eurostile\",\n            size=18,\n            color=primary_beige,\n            ),\n        align=\"center\",\n        bordercolor=primary_beige,\n        borderwidth=2,\n        borderpad=4,\n        bgcolor=primary_blue\n))\n\nfig.add_annotation(dict(\n        x=0.01,\n        y=.52,\n        text=\"\",\n        ax=\"300\",\n        ay=\"77\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.02,\n        y=.41,\n        text=\"\",\n        ax=\"250\",\n        ay=\"60\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.04,\n        y=.7,\n        text=\"\",\n        ax=\"260\",\n        ay=\"189\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\nfig.add_annotation(dict(\n        x=0.04,\n        y=.75,\n        text=\"\",\n        ax=\"290\",\n        ay=\"195\",\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = True,\n        arrowhead = 2,\n        arrowwidth = 2\n))\niplot(fig)","8f4415fc":"dream_girl_condition=(df_q5_q1['Q1']=='18-29')\\\n                         &(df_q5_q1['Q2']=='Woman') \\\n                        &(df_q5_q1['Q3']=='United States of America') \\\n                        &(survey_2021['Q5'].isin(['Data Scientist','Data Analyst','Machine Learning Engineer','Research Scientist']))\ndream_girl_df=df_q5_q1[dream_girl_condition][['Q5','Q25']].dropna()","f928d7e6":"# redefine the age group according to the same scale\nq5_df=dream_girl_df.copy()\nq5_df['new_Q25'] = pd.Categorical(\n    q5_df['Q25'], \n    categories=['$0-999', '1,000-1,999', '2,000-2,999', '3,000-3,999', '4,000-4,999',\n         '5,000-7,499', '7,500-9,999', '10,000-14,999',  '15,000-19,999',\n         '20,000-24,999', '25,000-29,999', '30,000-39,999', '40,000-49,999', \n         '50,000-59,999', '60,000-69,999', '70,000-79,999', '80,000-89,999',\n         '90,000-99,999', '100,000-124,999', '125,000-149,999', '150,000-199,999', \n         '200,000-249,999', '250,000-299,999', '300,000-500,000', '> $500,000'],\n    ordered=True)\n\nq5_df=q5_df.sort_values('new_Q25')\ns_df=pd.DataFrame()\nfor title in (q5_df['Q5'].value_counts().keys().sort_values(ascending=True)):\n    s_df[title] = q5_df[q5_df[\"Q5\"]==title][\"new_Q25\"].value_counts()\n\nbar_color=([primary_clam]*s_df.shape[1])\ns_df=s_df.sort_index()\ns_df","4ca55f6d":"ds_df = s_df['Data Scientist']\nda_df= s_df['Data Analyst']\nml_df = s_df['Machine Learning Engineer']\nrs_df= s_df['Research Scientist']\n\ntrace1 = go.Bar(\n    x = ds_df.keys(),\n    y = ds_df.values,\n    name = \"Data Sientist\",\n    marker=dict(\n        color=primary_blue,\n        line=dict(color=primary_blue, width=1)\n    ),\n    text = ds_df[ds_df.keys()],\n    textposition = \"outside\"\n)\n\ntrace2 = go.Bar(\n    x = da_df.keys(),\n    y = da_df[da_df.keys()],\n    name = \"Data Analyst\",\n    marker=dict(\n        color=\"#6d597a\",\n        line=dict(color=\"#6d597a\", width=1)\n    ),\n    text = da_df[da_df.keys()],\n    textposition = \"outside\",\n)\n\ntrace3 = go.Bar(\n    x = ml_df.keys(),\n    y = ml_df.values,\n    name = \"Machine Learning Engineer\",\n    marker=dict(\n        color=\"#e5989b\",\n        line=dict(color=\"#e5989b\", width=1)\n    ),\n    text = ml_df[ml_df.keys()],\n    textposition = \"outside\"\n)\n\ntrace4 = go.Bar(\n    x = rs_df.keys(),\n    y = rs_df[rs_df.keys()],\n    name = \"Research Scientist\",\n    marker=dict(\n        color=\"#b56576\",\n        line=dict(color=\"#b56576\",width=1)\n    ),\n    text = rs_df[rs_df.keys()],\n    textposition = \"outside\",\n)\n\nlayout = dict(\n    title = \"<span style='font-size:24px; font-family:Eurostile;'>Income Breakdown of 'Dream Girls List'<\/span>\",\n    plot_bgcolor=primary_beige,\n    margin = dict(t=50, l=0, r=0),\n    legend=dict(title=\"  Color Key:\", yanchor='top',xanchor='right', x=0.96, y=0.97, font=dict(family=\"Eurostile\", size= 14),traceorder='normal', bordercolor=\"#4d4d4d\", borderwidth=0.3),\n    xaxis = dict(domain=[0,1]),\n    yaxis = dict(showticklabels = False, zeroline=True, zerolinecolor=\"#4d4d4d\", zerolinewidth=0.5, showgrid=False),\n    barmode=\"group\",\n    hovermode = 'y unified',\n    clickmode='event+select',\n    bargap = 0.2,\n    width = 765\n)\ndata = [trace1, trace2,trace3,trace4]\nfig = go.Figure(data = data, layout = layout)\n\nfig['layout'].update(layout)\n\n\nfig.update_layout(\n    width=1000, height=400,\n    margin=dict(l=60, r=20, t=80, b=20),\n    paper_bgcolor=primary_beige)\n\n\niplot(fig)","bb9de47a":"<p style='font-size:18px;text-align:justify;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'>\n    After plotting the above stacked bar chart, I realized there are two differnt scales between male group and female group. It is hard for us to intuitively make right statements about the comparison. Thus, I simply made another stacked bar chart with female group dataset. <\/p>","4bdc19f2":"<p style='font-size:18px;text-align:justify;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> Perhaps the first step to find other \"geeks like me\" is to show up as myself. <br><br>\n    I am a Biomedical Data Scientist, currently unemployeed. 28 years old, female, reside in the United States, have intermediate skills in SQL, Python, R, etc. Just moved from Miami to NYC this September. I also have a hobby in 3d modeling, please check my <a href=\"https:\/\/dribbble.com\/HaibinGuan\">Dribbble profile<\/a>.<br>\n<\/p>","1e0ae9fa":"<h1 style=\"    text-align:left;               \n               bottom:0;                         \n               left:30; \n               font-family:Eurostile;\n               font-weight:700;\n               font-size:28px;\">\n    <a id='1' hred='#' href=\"#1b\" style=\"text-decoration:none;\"> \n    <mark display: inline-block;\n          line-height: 0em;\n          style=\"background-color:#f2e9e4;\n          color:  #355070;\n          border-radius: .8em;\n                 padding:0.3em;\n                  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\"\n          padding-bottom: 0.5em;>Introduction<\/mark> \n    <\/a> \n<\/h1>","2c4569ad":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'>As someone who has applied to several Data Science roles over the past year, I have been shocked by the range in salary for this position which is why I'm not surprised by the pattern I've plot above. Althought we could not conclude if the salary cross different positions cause various income, it is also critical to be aware of what type of role I'm pursuing. <\/p>","ca95a314":"<h1 style=\"    text-align:left;               \n               bottom:0;                         \n               left:30; \n               font-family:Eurostile;\n               font-weight:700;\n               font-size:28px;\">\n    <a id='6' hred='#' href=\"#6b\" style=\"text-decoration:none;\"> \n    <mark display: inline-block;\n          line-height: 0em;\n          style=\"background-color:#f2e9e4;\n          color:  #355070; border-radius: .8em;\n                 padding:0.3em;\n                  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\"\n          padding-bottom: 0.5em;>Rethinking Personalized results...\n        <\/mark> \n    <\/a> \n<\/h1>","945c1617":"![kaggle_survey_9.png](attachment:bd5607c3-eace-44a2-a3f4-fa67f5b80d3d.png)\n<cite style=\"color: #4a5759;font-family:Eurostile; text-align:center; display: block;\">\nImage by <a href='https:\/\/dribbble.com\/HaibinGuan'>Haibin Guan<\/a>\n<\/cite>","5d6572fb":"<blockquote style='font-size:20px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif; opacity:80%;'>The Process of visually exploring data can be summarized in a single sentence: <b style='font-weight:bold;'>find patterns and trends lucking in the data and then observe the deviations from those patterns.<\/b>  Interesting stories may arise from both the norm-also calledd the smooth -- and the <mark style=\"background-color:#f08080;\">exceptions<\/mark>.<br> \n    <cite style='font-weight:bold; \n                 font-family:Times New Roman; \n                 display:block-inline;\n                 float:right;\n                 text-align: right; '>  \n   &mdash;&mdash; Alberto Cairo <b style='font-style:italic;'>The Truthful Art: Data, Charts, and Maps for Communication<\/b><\/cite>\n<\/blockquote>","70a03e8b":"<h1 style=\"    text-align:left;               \n               bottom:0;                         \n               left:30; \n               font-family:Eurostile;\n               font-weight:700;\n               font-size:28px;\">\n    <a id='2' hred='#' href=\"#2b\" style=\"text-decoration:none;\"> \n    <mark display: inline-block;\n          line-height: 0em;\n          style=\"background-color:#f2e9e4;\n          color:  #355070;border-radius: .8em;\n                 padding:0.3em;\n                  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\"\n          padding-bottom: 0.5em;>Before Digging Into The EDA\n        <\/mark> \n    <\/a> \n<\/h1>","fb34c4c0":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> Unfortunately, there are three particiants in my \"Dream Girl\" list didn't provide Salary and I have to let them go. Thus, there are <mark style='background-color:#c9ada7;'> 47 in my final \"Dream Girl\" list.<\/mark> <\/p>","76985d9a":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'>As B.H. Erickson and T.A. Nosanchuk wrote in their book <b style=\"font-style:italic\">Understanding Data<\/b>, when exploring variables like salaries and incomes, you shouln't focus on how much people earn on average but on <b>how much the average person earns. <\/b><br> \n     <br> In this case, we only have 47 participants who are in the 'list', which is not ideal to calculate mean salary. Therefore, I decided to plot the histogram of all of 47 indivuals's salary. <\/p> ","97cae003":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> In this notebook, I will solely use stacked bar chart through the whole exploration.<br> Now, Let's roll up sleeves and get hands dirty, and let my answers speak. \n<\/p> ","b03358c8":"<h1 style=\"    text-align:left;               \n               bottom:0;                         \n               left:30; \n               font-family:Eurostile;\n               font-weight:700;\n               font-size:28px;\">\n    <a id='5' hred='#' href=\"#5b\" style=\"text-decoration:none;\"> \n    <mark display: inline-block;\n          line-height: 0em;\n          style=\"background-color:#f2e9e4;\n          color:  #355070; border-radius: .8em;\n                 padding:0.3em;\n                  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\"\n          padding-bottom: 0.5em;>Finding My Dream Girl\n        <\/mark> \n    <\/a> \n<\/h1>","1be2d49c":"<h1 style=\"    text-align:left;               \n               bottom:0;                         \n               left:30; \n               font-family:Eurostile;\n               font-weight:700;\n               font-size:28px;\">\n    <a id='3' hred='#' href=\"#3b\" style=\"text-decoration:none;\"> \n    <mark display: inline-block;\n          line-height: 0em;\n          style=\"background-color:#f2e9e4;\n          color:  #355070;\n                  border-radius: .8em;\n                 padding:0.3em;\n                  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\"\n          padding-bottom: 0.5em;>A Little About Me ... \n        <\/mark> \n    <\/a> \n<\/h1>","9b791b8b":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'>\nWhile kaggle surveys can yield amazing insights of data sicentists and others into the field of data science and machine learning, they can also be ineffective if the survey questionnaire is poorly designed. <br><br> For instance, the kaggle survey 2021 <b>Q4: What is the highest level of formal education that you have attained or plan to attain within the next 2 years ? <\/b>. <img src='https:\/\/miro.medium.com\/max\/1000\/1*DLCFW8We3FARkFMKOHYNXg.png' width='400' align=\"left\" height=\"500\">  It is actually a <a href=\"https:\/\/en.wikipedia.org\/wiki\/Double-barreled_question\">double-barrelled question <\/a>, which may result in inaccuracies in the attitudes being measured for the question, as the respondent can answer only one of the two questions, and we cannot indicate which one is being answered. In my case, my highest level of formal education that I have attained is Master's degree while I still plan to attain a Doctoral degree within the next 2 years. Should I pick Master's degree or Doctoral degree? If the participant picked Master's degree, do you think that means his\/her highest formal education is Master's degree or he\/she plans to  attain it within the next 2 years? And Yet there are still so many people think it's able to deliver helpful information based on the answers collected based on this questions, such as this histogram chart with the figure title <b> <a href='https:\/\/towardsdatascience.com\/data-science-trends-based-on-4-years-of-kaggle-surveys-60878d68551f'>The distribution of highest degrees obtained for survey respondents whose job title was \"data scientist\"<\/a><\/b>. \n    If we have a second thought, what if 50% of people who answered \"Master's Degree\" for Q4 who actually have attained \"Bachelor's Degree\" but would like to attain \"Master's Degree\" within next 2 years. If we just ask for the highest formal education participarnts have attained, this histogram will look totally different but actually more meaningful.\n    <br><br>Another type of terrible survey question is subjective verbiage question. For example, for <b>Q6:For how many years have you been writing code and\/or programming ?<\/b> What if I wrote one line of Python 3 years ago, but never coded again after that, does that mean I have programed for 3 years? If you think this case is too extreme, how about I had written code when I was back in college for some software engineering classes, but I decided to sell cars after graduated 5 years ago and never touched the keyboard since then, what should I do with Q6? How about Q15?<br><br>\n    Now let's take a look at <b>Q7: What programming languages do you use on a regular basis ? <\/b>How often is 'regular basis'? Once a day? Once a week? The programming language that we are forced to learn and use for the assignments\/projects for the Data Mining class for last semester, yet have no chance to use it for the daily job tasks? Does the programming language that I used quite a lot for last project two month ago but it is not being used for current project count? There are plenty questions in this kaggle survey asked in such way, including Q9, Q10, Q12, Q14, Q16, Q17, Q18, Q19, Q27-A, Q29-A, Q30-A, Q31-A, Q32-A, Q34-A, Q36-A, and Q37-A.\n   <br><br> Questions like these should be avoid in a reliable survey. If we try to make sense of responses to a messy questionnaire, i.e., if we have garbage in questionnaire design, there is huge chance that we get garbage out which makes it impossible to derive meaningful conclusions.  <br><br>\n    Therefore, in the following EDA, I would like to pick out those answers to the relatively useful questions, basically, just the \"Demographics\" related questions and <mark style='background-color:#c9ada7;'>\"Q25\"<\/mark>.  \n<\/p>","664f37dc":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> This 100% Stack Bar chart shows the percentage-of-the-whole of each \"job title\" group and are plotted by the percentage of each value to the total amount in each group. This makes it clearer to see the relative differences between quantities in each group. \n    What if I want to compare the Female group and Male group in one chart by using 100% stack bar chart? Let's find out! <\/p>","4fe17562":"<h1 style=\"    text-align:left;               \n               bottom:0;                         \n               left:30; \n               font-family:Eurostile;\n               font-weight:700;\n               font-size:28px;\">\n    <a id='4' hred='#' href=\"#4b\" style=\"text-decoration:none;\"> \n    <mark display: inline-block;\n          line-height: 0em;\n          style=\"background-color:#f2e9e4;\n          color:  #355070;border-radius: .8em;\n                 padding:0.3em;\n                  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\"\n          padding-bottom: 0.5em;>Finding \"Geeks Like Me\"\n        <\/mark> \n    <\/a> \n<\/h1>","5ef925b6":"<h1 style=\"    text-align:left;               \n               bottom:0;                         \n               left:30; \n               font-family:Eurostile;\n               font-weight:700;\n               font-size:28px;\">\n    <a id='7' hred='#' href=\"#7b\" style=\"text-decoration:none;\"> \n    <mark display: inline-block;\n          line-height: 0em;\n          style=\"background-color:#f2e9e4;\n          color:  #355070; border-radius: .8em;\n                 padding:0.3em;\n                  box-shadow: \n    12px 12px 16px 0 rgba(0, 0, 0, 0.25),\n    -8px -8px 12px 0 rgba(255, 255, 255, 0.3);\"\n          padding-bottom: 0.5em;>To Learn More ...\n        <\/mark> \n    <\/a> \n<\/h1> \n\n    \n<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'>\n    1. Useful data is data that tells a story. It's not only about collecting lots of it, but getting the right data and letting it paint its picture. \n    <a href='https:\/\/www.surveymonkey.com\/mp\/5-common-survey-mistakes-ruin-your-data\/'> How can we overcome a poor survey qustionnaire design?<\/a> <br>\n2. <a href='https:\/\/datavizcatalogue.com\/methods\/stacked_bar_graph.html'> To learn more about the difference between the Simple Stacked Bar Charts and 100% Stacked Bar Charts <\/a>\n<\/p>\n    ","67589b63":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> After completing the survey, I showed the number of questions I responded to and detailed visualizations that compare my answers to those of others. <br>\n    <\/p>\n   <blockquote style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif; opacity:80%;'>There are no graphic forms that are intrinsically good or bad but graphic forms that are more or less effective. <br> \n    <cite style='font-weight:bold; \n                 float:right;\n                 font-family:Times New Roman; \n                 display:block-inline;\n                 text-align: right; '>  \n   &mdash;&mdash; Alberto Cairo, <b style='font-style:italic;'>The Truthful Art: Data, Charts, and Maps for Communication<\/b><\/cite>\n<\/blockquote>","67f8b846":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> Well, there goes my survey results! <br> This isn't like other survey report. Personalized results allow me to gain deeper insights into how my experiences relate to others. <br><mark style='background-color: #f08080;'> I designed it to clarify my own messy ideas, so it is a visual model to improve just my own mental model. It led me to the key takeaway of this challenge. <\/mark>\nIn conclusion, there were quite a few of people more or less have similar traits, among which, there are 9 are in the exactly same situation as I amm. <br>\nI figured that this kaggle survey is a great place for me to start pursuing my career. <br><br>\nThanks for readying this. I hope you found something intersting here:<\/p>\n","db5e9a3d":"<p style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> Enven though I love how neat and beautiful the 100% Stack Bar Graphs is, they actually become harder to read the more segments each bar has. Also comparing each segment to each other is difficult, as they're not aligned on a common baseline. <\/p>","fae6dc46":"<center><img src=\"https:\/\/ideas.ted.com\/wp-content\/uploads\/sites\/3\/2017\/08\/featured_art_istock_onlyness.jpg?resize=1536,922\" width='700'>\n<cite style=\"color: #4a5759;font-family:Eurostile; text-align:justyfy; display: block;\">\nImage by <a href='https:\/\/ideas.ted.com\/wp-content\/uploads\/sites\/3\/2017\/08\/featured_art_istock_onlyness.jpg?resize=1536,922'>TED Idea<\/a>\n<\/cite><\/center>","445b6c16":"<blockquote style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif; opacity:80%;'>If you tortue your data long enough, nature will confess to anything. <br> \n    <cite style='font-weight:bold; \n                 float:right;\n                 font-family:Times New Roman; \n                 display:block-inline;\n                 text-align: right; '>  \n   &mdash;&mdash; Ronald H. Coasse, Economist <\/cite>\n<\/blockquote>\n\n","53aceda5":"<p style='font-size:18px;text-align:justify;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif;'> After finding those 9 participants who are in the similar situation as me, I call <mark style=\"background-color:#f08080;\"> my own people<\/mark> I want to investigate how the other \"more succesfuly\" (who at least make some income, being financially independet) communities doing. I would like know more about the women who are at my age, residing in the United States, currently are on positions like <mark style=\"background-color:#c9ada7;\"> Data Analyst, Data Scientist, Machine Learning Engineer, Research Scientist.<\/mark> Let's find out how many of them are out there and how much they make:) <\/p> ","34505135":"<blockquote style='font-size:18px;font-family: charter, Georgia, Cambria, \"Times New Roman\", Times, serif; opacity:80%;'>You must go on adventures to find out where you belong. <br> \n    <cite style='font-weight:bold; \n                 float:right;\n                 font-family:Times New Roman; \n                 display:block-inline;\n                 text-align: right; '>  \n   &mdash;&mdash; Sue Fitzmaurice, Author <\/cite>\n<\/blockquote>"}}