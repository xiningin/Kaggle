{"cell_type":{"fe5fadda":"code","efc956a7":"code","1a06ab84":"code","52ae22f4":"code","81b7d079":"code","fd4c6109":"markdown","80accc45":"markdown"},"source":{"fe5fadda":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport cv2\nimport os\nimport matplotlib.pyplot as plt\n%matplotlib inline\nDATA_FILE = [os.path.join(dirname, filename) for dirname, _, filenames in os.walk('\/kaggle\/input') for filename in filenames]","efc956a7":"_defocus = [image_path for image_path in DATA_FILE if \"dataset\/defocused_blurred\/\" in image_path][:5]\n_motionblur= [image_path for image_path in DATA_FILE if \"dataset\/motion_blurred\/\" in image_path][:5]\n_sharp = [image_path for image_path in DATA_FILE if \"dataset\/sharp\/\" in image_path][:5]","1a06ab84":"for image in _defocus:\n    _array = cv2.imread(image)\n    gray = cv2.cvtColor(_array, cv2.COLOR_BGR2GRAY)\n    score_gray = cv2.Laplacian(gray, cv2.CV_64F).var()\n    score = cv2.Laplacian(_array, cv2.CV_64F).var()\n    print(score, score_gray)\n    plt.imshow(_array)\n    plt.show()","52ae22f4":"for image in _motionblur:\n    _array = cv2.imread(image)\n    gray = cv2.cvtColor(_array, cv2.COLOR_BGR2GRAY)\n    score_gray = cv2.Laplacian(gray, cv2.CV_64F).var()\n    score = cv2.Laplacian(_array, cv2.CV_64F).var()\n    print(score, score_gray)\n    plt.imshow(_array)\n    plt.show()","81b7d079":"for image in _sharp:\n    _array = cv2.imread(image)\n    gray = cv2.cvtColor(_array, cv2.COLOR_BGR2GRAY)\n    score_gray = cv2.Laplacian(gray, cv2.CV_64F).var()\n    score = cv2.Laplacian(_array, cv2.CV_64F).var()\n    print(score, score_gray)\n    plt.imshow(_array)\n    plt.show()","fd4c6109":"**We could see that the opencv laplacian method is much usefull.**","80accc45":"**using opencv laplacian method**"}}