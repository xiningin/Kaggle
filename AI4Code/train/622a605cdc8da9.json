{"cell_type":{"482ca281":"code","e09f8296":"code","8dec6dd1":"code","b55d6d51":"code","96ceb942":"code","fe29bb0e":"code","14f01087":"code","89971c89":"code","d5cbc9fc":"code","39324d3f":"code","4f73c61e":"code","89318657":"code","548f4a22":"code","db4135de":"code","b742f4b7":"code","9b1c0dc5":"code","821a93a2":"code","a6f4e783":"code","c984a20a":"code","8d366cb1":"code","d67a2981":"code","d23cf441":"code","92e23f7c":"code","75c1659d":"code","16a7a5ad":"code","06f788c7":"code","86728aa6":"code","fd492e5b":"code","22bb707c":"code","4279cbff":"code","7687874f":"code","8ae17ee4":"code","e92f3f17":"code","3f83c818":"code","f6b5dc56":"code","8ade26bf":"code","9771cb78":"code","99a06ceb":"code","57f0bebb":"code","5da51ef9":"code","b4816159":"markdown","78ad4a36":"markdown","8a8bd956":"markdown","57de3952":"markdown","86cd0b63":"markdown","31c1eb6f":"markdown","5dadc2a1":"markdown","8ce23ea3":"markdown","b3628c9e":"markdown","e1d59d3f":"markdown","1dda21a7":"markdown","7285a480":"markdown","ed2f61ef":"markdown","d8fbecb5":"markdown","81060ddf":"markdown","e41a8943":"markdown","bca2df27":"markdown","8ffa410e":"markdown","3cd2c871":"markdown","54dd9e53":"markdown"},"source":{"482ca281":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e09f8296":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom pandas import plotting\n\n#plotly \nimport plotly.offline as py\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\ninit_notebook_mode(connected=True)\nimport plotly.figure_factory as ff\nimport plotly.express as px\n# Styling \nplt.style.use('fivethirtyeight')\n","8dec6dd1":"df=pd.read_csv('..\/input\/delhi-crime-data\/Delhi Accident Data.csv')\ndf.head()","b55d6d51":"df=df.drop([\"Unnamed: 7\",\"Unnamed: 8\",\"Unnamed: 9\"], axis=1)\n","96ceb942":"k= pd.DataFrame()\nk['df']= df.isnull().sum()\nk.T","fe29bb0e":"df.shape","14f01087":"victim=['PEDESTRIAN', 'S\/C & M\/C', 'CAR']\nyear=[2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017]\ndistricts=[\"SOUTH EAST DELHI\",\n\"NEW DELHI\",\n\"NORTH DELHI(ROHINI)\",\n\"CENTRAL DELHI\",\n\"SOUTH WEST DELHI\",\n\"WEST DELHI\",\n\"NORTH WEST DELHI\",\n\"EAST DELHI\",\n\"SHAHDARA\",\n\"SOUTH DELHI\",\n\"NORTH EAST DELHI\",\n\"UNK\",\n\"OUTER\"]\nvehichle_at_fault=['PVT CAR', 'UNKNOWN', 'S\/C&M\/C','HTV\/GDS']","89971c89":"Probability_of_fatalities=[0.2780847145,0.2798742138,0.3129689175,0.3182332956,0.283847981,0.2616136919,0.1974584555,\n0.1856710394,0.2284730195,0.2301480485]\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=year, y=Probability_of_fatalities, name=\"NEW DELHI\", line=dict(color='firebrick', width=1,dash='dash')))\nfig.update_layout(title='Fatality rate across the different Districts across the Given Year Given district',\n                   xaxis_title='Years',\n                   yaxis_title='Probability of Fality')\n\nfig.show()","d5cbc9fc":"x=df[df['VEHICLE AT FAULT']==vehichle_at_fault[0]]\nprint(vehichle_at_fault[0])\nfor z in year:\n    xx=x[x['YEAR']==z]\n    a=xx['TYPE OF ACCIDENT'].value_counts()\n    \n    print(z)\n    print(a)","39324d3f":"Probability_of_fatalities=[0.1049723757,0.1282191781,0.170212766,0.1519486926,0.147183847,0.1167915381,0.1059273423,0.1132145509,0.1140734266,0.1427842937]\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=year, y=Probability_of_fatalities, name=\"PVT CAR\", line=dict(color='firebrick', width=1,dash='dash')))\nfig.update_layout(title='Fatality rate across the different year across the Given Year Given vehicle at fault',\n                   xaxis_title='Years',\n                   yaxis_title='Probability of Fality')\n\nfig.show()\n","4f73c61e":"Probability_of_fatalities1=[0.2780847145,0.2798742138,0.3129689175,0.3182332956,0.283847981,0.2616136919,0.1974584555,\n0.1856710394,0.2284730195,0.2301480485]","89318657":"plt.figure(figsize=(10,5))\nplt.plot(year, Probability_of_fatalities1, label=\"District-New delhi\")\nplt.plot(year, Probability_of_fatalities, label=\"Vehicle at Fault-PVT Car\")\nplt.ylabel(\"Probabilities of Fatalities\")\nplt.xlabel(\"Year\")\nplt.title(\"Fatality rate across the different year across the Given Year Given vehicle at fault\")\nplt.legend()\nplt.show()","548f4a22":"x=df[df['VICTIM']==victim[0]]\nprint(victim[0])\nfor z in year:\n    xx=x[x['YEAR']==z]\n    a=xx['TYPE OF ACCIDENT'].value_counts()\n    \n    print(z)\n    print(a)","db4135de":"Probability_of_fatalities2=[0.2697127937,0.3325668295,0.3025936599,0.313965005,0.2822719449,0.2461945731,0.2132183908,0.2073434125,0.2242063492,0.2559328222]\n","b742f4b7":"plt.figure(figsize=(10,5))\nplt.plot(year, Probability_of_fatalities1, label=\"District-New delhi\")\nplt.plot(year, Probability_of_fatalities, label=\"Vehicle at Fault-PVT Car\")\nplt.plot(year, Probability_of_fatalities2, label=\"Victim-PEDESTRAIN\")\n\nplt.ylabel(\"Probabilities of Fatalities\")\nplt.xlabel(\"Year\")\nplt.title(\"Fatality rate across the different year across the Given Year Given Condition\")\nplt.ylim(0.05, 0.7)\nplt.legend()\nplt.show()","9b1c0dc5":"probability_central=[0.277537797,0.3454960091,0.3504273504,0.3268072289,0.2630057803,0.2479041916,0.2022346369,\n                     0.1986379115,0.2235142119,0.2190352021]","821a93a2":"probability_south=[0.2469470828,0.3323863636,0.2574102964,0.3078101072,0.2693498452,0.2327044025,\n0.1848837209,0.2022756005,0.2157360406,0.25066313]","a6f4e783":"probability_west=[0.275,0.3136729223,0.3563049853,0.3095577746,0.3369905956,0.2770919067,0.2234299517,\n0.2196078431,0.2254098361,0.2666666667]","c984a20a":"probability_north=[0.2311435523,0.2968536252,0.2687861272,0.270096463,0.234948605,0.2341325811,\n0.1958128079,0.1985185185,0.2260726073,0.2513863216]","8d366cb1":"probility_east=[0.1913875598,0.2347670251,0.1606557377,0.2092257002,0.267961165,0.2209072978,0.1469594595,\n0.1658119658,0.1459694989,0.2284382284]","d67a2981":"prob_sha=[0.1706730769,0.2808716707,0.2480620155,0.2411067194,0.2036199095,0.1669865643,0.1572212066,0.1542857143\n,0.1439688716,0.1834170854]","d23cf441":"prob_sou_delhi=[0.2276029056,0.2971246006,0.3315363881,0.2532637076,0.2608695652,0.2206303725,0.1497695853\n,0.1266666667,0.1647398844,0.1597444089]","92e23f7c":"prob_nor_eas_delhi=[0.2382133995,0.3174603175,0.2903225806,0.2204472843,0.2795698925,0.1901639344,0.1445783133\n,0.2037037037,0.1719745223,0.1517027864]","75c1659d":"plt.figure(figsize=(15,10))\nplt.plot(year, Probability_of_fatalities, label=\"New delhi\")\nplt.plot(year, probability_central, label=\"Central Delhi\")\nplt.plot(year, probability_south, label=\"SOuth Delhi\")\nplt.plot(year, probability_west, label=\"WEST DELHI\")\nplt.plot(year, probability_north, label=\"NORTH WEST DELHI\")\nplt.plot(year, probility_east, label=\"EAST DELHI\")\nplt.plot(year, prob_sha, label=\"SHAHDARA\")\nplt.plot(year, prob_sou_delhi, label=\"SOUTH DELHI\")\nplt.plot(year, prob_nor_eas_delhi, label=\"NORTH EAST DELHI\")\n\n\nplt.ylabel(\"Probabilities of Fatalities\")\nplt.xlabel(\"Year\")\nplt.title(\"Fatality rate across the different year across the Given Year Given DIstricts\")\nplt.ylim(0.05, 0.5)\nplt.legend()\nplt.show()","16a7a5ad":"vehichle_at_fault","06f788c7":"x=df[df['VEHICLE AT FAULT']==vehichle_at_fault[1]]\nprint(vehichle_at_fault[1])\nfor z in year:\n    xx=x[x['YEAR']==z]\n    a=xx['TYPE OF ACCIDENT'].value_counts()\n    \n    print(z)\n    print(a)","86728aa6":"pro_unkn=[ 0.3850117096,0.4987277354,0.421107628,0.4549450549,0.3877777778,0.3926585095,0.3007723762,0.314825415,0.3345398139\n,0.3878116343]","fd492e5b":"x=df[df['VEHICLE AT FAULT']==vehichle_at_fault[2]]\nprint(vehichle_at_fault[2])\nfor z in year:\n    xx=x[x['YEAR']==z]\n    a=xx['TYPE OF ACCIDENT'].value_counts()\n    \n    print(z)\n    print(a)","22bb707c":"pro_scmc=[0.1247833622,0.1750245821,0.1552604699,0.1660039761,0.1870428422,0.1450729927,0.1058732612,0.1253776435\n,0.1381461676,0.1386138614]","4279cbff":"x=df[df['VEHICLE AT FAULT']==vehichle_at_fault[3]]\nprint(vehichle_at_fault[3])\nfor z in year:\n    xx=x[x['YEAR']==z]\n    a=xx['TYPE OF ACCIDENT'].value_counts()\n    \n    print(z)\n    print(a)","7687874f":"vehichle_at_fault","8ae17ee4":"pro_htv=[0.4145985401,0.4292929293,0.4295190713,0.460035524,0.4103942652,0.4146730463,0.3542757417,0.3944636678\n,0.3588621444,0.3829268293]","e92f3f17":"plt.figure(figsize=(10,5))\nplt.plot(year, Probability_of_fatalities, label=\"PVT CAR\")\nplt.plot(year, pro_unkn, label=\"UNKNOWN\")\nplt.plot(year, pro_scmc, label=\"S\/C&M\/C\")\nplt.plot(year, pro_htv, label=\"HTV\/GDS\")\n\nplt.ylabel(\"Probabilities of Fatalities\")\nplt.xlabel(\"Year\")\nplt.title(\"Fatality rate across the different year across the Given Year Given Vehicle at Fault\")\nplt.ylim(0.05, 0.7)\nplt.legend()\nplt.show()","3f83c818":"victim","f6b5dc56":"x=df[df['VICTIM']==victim[1]]\nprint(victim[1])\nfor z in year:\n    xx=x[x['YEAR']==z]\n    a=xx['TYPE OF ACCIDENT'].value_counts()\n    \n    print(z)\n    print(a)","8ade26bf":"pro_vi_scmc=[0.2445956765,0.284556314,0.2835390947,0.2646579805,0.2417962003,0.2216437337,0.1800194616,0.1878583474,0.1959054006\n,0.2143134967]","9771cb78":"x=df[df['VICTIM']==victim[2]]\nprint(victim[2])\nfor z in year:\n    xx=x[x['YEAR']==z]\n    a=xx['TYPE OF ACCIDENT'].value_counts()\n    \n    print(z)\n    print(a)","99a06ceb":"victim","57f0bebb":"pro_vi_car=[0.06153846154,0.1451187335,0.1382352941,0.1904761905,0.1478696742,0.1488469602,0.09659090909\n,0.129740519,0.1345646438,0.1540785498]","5da51ef9":"plt.figure(figsize=(10,5))\nplt.plot(year, Probability_of_fatalities2, label=\"PEDESTRIAN\")\nplt.plot(year, pro_vi_scmc, label=\"S\/C & M\/C\")\nplt.plot(year, pro_vi_car, label=\"CAR\")\n\nplt.ylabel(\"Probabilities of Fatalities\")\nplt.xlabel(\"Year\")\nplt.title(\"Fatality rate across the different year across the Given Year Given Victim\")\nplt.ylim(0.05, 0.7)\nplt.legend()\nplt.show()","b4816159":"# SHAHDARA","78ad4a36":"# Vehicle At Fault\tHTV\/GDS","8a8bd956":"# Vehicle At Fault\tUNKNOWN","57de3952":"# Victime type","86cd0b63":"# Explanatory variable\n* VEHICLE AT FAULT and Year are taken as explanatory variables","31c1eb6f":"# EAST DELHI","5dadc2a1":"# District -WEST DELHI","8ce23ea3":"# VIctim\tS\/C & M\/C","b3628c9e":"# Dataset detais\n* YEAR- it is showing the year when data was recorded\n* DISTRICT- Districts of Delhi\n* VEHICLE AT FAULT-\n* VICTIM- Those whe were hit\n* TYPE OF ACCIDENT- Accident is fata or not\n* No OF INJURED- Number of injuries during the accident\n* NO OF KILLED- Number of persons were killed after the accidents","e1d59d3f":"# Vehicle at fault","1dda21a7":"# NORTH WEST DELHI","7285a480":"# Vehicle At Fault\tS\/C&M\/C","ed2f61ef":"# PLotting the probability fatality of the Vehicle at faults","d8fbecb5":"# Missing Value","81060ddf":"# Calculating the fatal acident count of different districts\n* Districts- CENTRAL DELHI","e41a8943":"# Obs\n* No missing value we encounter here","bca2df27":"# SOUTH DELHI","8ffa410e":"# NORTH EAST DELHI","3cd2c871":"# VIctim\tCAR","54dd9e53":"# District- SOUTH WEST DELHI"}}