{"cell_type":{"4e3bda2f":"code","8e086f12":"code","cd23dc06":"code","a9e15fd3":"code","066df14f":"code","6a22728f":"code","256b386c":"code","bb56ae69":"code","9c2a3797":"code","a23cf026":"code","a1f562e4":"code","070ad749":"code","b8562c32":"code","2671effb":"code","a9bcd029":"code","21fd5077":"code","322b3e42":"code","037a247f":"code","4a194e8b":"code","41d90949":"code","756af976":"code","56398c37":"code","6ca5a0a2":"code","f503e6cf":"code","6bbd1eab":"code","d940376c":"code","e8dc1785":"code","458d7061":"code","3f8b530c":"code","c9bf3ecf":"code","17c148e5":"code","e23c8bfb":"code","e5ee77d9":"code","a46f9c29":"code","ae8956f7":"code","dccfcfd7":"code","5112eb61":"code","e32fb0a0":"code","3f75d0c1":"code","5a67bcbb":"code","32afa16e":"code","4f21cef6":"code","ede1837d":"code","0e8a0f2a":"code","ebe68263":"code","8b3b5789":"code","0311840f":"code","433e2373":"code","e6302622":"code","e0a19d93":"code","90a6b7c1":"code","db3cbbe5":"code","59ea782b":"code","f077f3b5":"code","0035913f":"code","2c2dd18f":"code","659f4e95":"code","933c74ab":"code","5e3a3159":"code","af7e4a9d":"code","74df674b":"code","27627878":"code","b87fa309":"code","ec5f2b04":"code","9fb659d7":"code","acc3122c":"markdown","c59ca654":"markdown","4d517495":"markdown","2de610a0":"markdown","b0ddae87":"markdown","5d571e29":"markdown","d604d71b":"markdown","9446678b":"markdown","badc7df3":"markdown","a827c7e1":"markdown","10b51a50":"markdown","dd0ae101":"markdown","55df154e":"markdown","be7e0437":"markdown","6e010efd":"markdown","ce693d7b":"markdown","8b74a3e9":"markdown","7f41972c":"markdown","93cdc9e3":"markdown","94fab112":"markdown","073ec490":"markdown","ec3ff881":"markdown","b81d9502":"markdown","4473e73a":"markdown","b82501d5":"markdown","5fcca41d":"markdown","97a61080":"markdown","e2d656fb":"markdown","385fbdec":"markdown","38903642":"markdown"},"source":{"4e3bda2f":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8e086f12":"sns.__version__","cd23dc06":"#If running on Kaggle\n# path = \"..\/input\/titanic\/train.csv\"\n\n#If Running anywhere else\npath = \"https:\/\/github.com\/datasciencedojo\/datasets\/raw\/master\/titanic.csv\"\n\ndf = pd.read_csv(path)","a9e15fd3":"df.head()","066df14f":"df.info()","6a22728f":"df.describe()","256b386c":"df.dtypes","bb56ae69":"#Find count of nulls in each column\ndf.isna().sum()","9c2a3797":"#Find % of null values in each column\n(df.isna().sum() \/ df.shape[0]) * 100","a23cf026":"target_column = 'Survived'","a1f562e4":"df[[target_column]].describe().transpose()","070ad749":"df[[target_column]].astype('object').describe().T","b8562c32":"sns.countplot(data=df, x=target_column)","2671effb":"df.select_dtypes(include=np.number).columns","a9bcd029":"numeric_columns = ['Age', 'SibSp', 'Fare', 'Pclass']","21fd5077":"df[numeric_columns].head()","322b3e42":"df[numeric_columns].describe()","037a247f":"sns.displot(data=df, x='Age', hue='Survived')","4a194e8b":"sns.scatterplot(data=df, x='Age', y='Fare')","41d90949":"sns.jointplot(data=df, x='Age', y='Fare')","756af976":"sns.pairplot(df[numeric_columns])","56398c37":"sns.displot(data=df, x='Fare', hue=target_column, kind='kde')","6ca5a0a2":"sns.displot(data=df, x='Age', hue=target_column, kind='kde')","f503e6cf":"df.head()","6bbd1eab":"df.columns","d940376c":"df.select_dtypes(include=np.object).columns","e8dc1785":"categorical_columns = ['Pclass', 'Sex', 'SibSp', 'Embarked']","458d7061":"df[categorical_columns].head()","3f8b530c":"df[categorical_columns].astype(np.object).describe()","c9bf3ecf":"sns.countplot(data=df, x='Pclass', hue=target_column)","17c148e5":"sns.countplot(data=df, hue='Pclass', x=target_column)","e23c8bfb":"sns.countplot(data=df, x='Sex', hue=target_column)","e5ee77d9":"sns.countplot(data=df, hue='Sex', x=target_column)","a46f9c29":"sns.countplot(data=df, x='Embarked', hue=target_column)","ae8956f7":"sns.countplot(data=df, x='SibSp', hue=target_column)","dccfcfd7":"target_column = 'Survived'\n\n#Manually selecting relavent features based on EDA\nfeature_columns = ['Age', 'Fare', 'Pclass', 'Sex', 'Embarked']\n\nkeep_columns = [target_column] + feature_columns","5112eb61":"df = df[keep_columns]","e32fb0a0":"df.head()","3f75d0c1":"df['Age'].median()","5a67bcbb":"df['Age'] = df['Age'].fillna(df['Age'].median())","32afa16e":"df['Embarked'].mode()","4f21cef6":"df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode())","ede1837d":"df = pd.get_dummies(df)","0e8a0f2a":"df.head()","ebe68263":"df.columns","8b3b5789":"X = df[['Age', 'Fare', 'Pclass', 'Sex_female', 'Sex_male']]\n# X = df[['Age', 'Fare', 'Pclass', 'Sex']]\ny = df[target_column]","0311840f":"X","433e2373":"y","e6302622":"from sklearn.model_selection import train_test_split","e0a19d93":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","90a6b7c1":"X_train","db3cbbe5":"y_train","59ea782b":"from sklearn.linear_model import LogisticRegression","f077f3b5":"model = LogisticRegression(solver='liblinear', random_state=0)\n\nmodel.fit(X_train,y_train)","0035913f":"y_pred = model.predict(X_test)","2c2dd18f":"y_pred","659f4e95":"df_test = X_test.copy()\ndf_test['y_actual'] = y_test\ndf_test['y_pred'] = y_pred\n\ndf_test.head()","933c74ab":"from sklearn.metrics import classification_report","5e3a3159":"print(classification_report(y_test, y_pred))","af7e4a9d":"eval_report = classification_report(y_test, y_pred, \n                      target_names=['0: Not-Survived', '1: Survived'],\n                      output_dict=True\n                     )\n\npd.DataFrame(eval_report).T","74df674b":"from sklearn.metrics import confusion_matrix","27627878":"cf_matrix = confusion_matrix(y_test, y_pred)","b87fa309":"sns.heatmap(cf_matrix, annot=True)","ec5f2b04":"sns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='Blues')","9fb659d7":"#TODO","acc3122c":"#### Observations\n1. Age column has around 20% null values","c59ca654":"### Target Column","4d517495":"### Find Data Types","2de610a0":"### Find Null Counts","b0ddae87":"### Categorical Columns","5d571e29":"### Numeric Columns","d604d71b":"#### Confusion Matrix","9446678b":"### Fill Null Values","badc7df3":"#### Observations\n1. There are 2 categories for target column\n1. The target column is numeric with 0 representing a non-survived passenger and 1 a survived passenger\n1. Ratio of of non-survived to survived is around 6:4\n","a827c7e1":"## Data Preparation","10b51a50":"## Model Training & Evaluation","dd0ae101":"## Machine Learning Workflow Components\n\n0. **Data Description, Tasks & Observations**\n0. **Import Libararies** & other settings\n1. **Data Import**\n2. **Exploratory Data Analysis (EDA)**\n3. **Data Preparation**\n4. **Model Training**\n5. **Model Evaluation**\n5. **Save Model**","55df154e":"#### Observations\n1. Sex, Pclass and Embarked seem the most relavent for prediction\n2. Female passenger have a higher survivor rate than male passengers\n2. Passenger in Embarked C have higher survivor rate than other Embarked values\n2. The lower the number for Pclass the higher the rate survivor rate","be7e0437":"### Read CSV File to Dataframe","6e010efd":"### Train Test Split","ce693d7b":"### Model Training","8b74a3e9":"### One-Hot Encoding of Text Columns","7f41972c":"## Save Model","93cdc9e3":"## Exploratory Data Analysis (EDA)","94fab112":"# Machine Learning Workflow - Basic\n\nBasic Machine learning workflow. Starting from data set understanding, up until machine learning model training and evaluation.","073ec490":"### Basic Dataset Information","ec3ff881":"### Model Evaluation","b81d9502":"### Create X & y","4473e73a":"#### Classification Report","b82501d5":"### Model Predictions on Test Data","5fcca41d":"## Feature Selection","97a61080":"## Data Import","e2d656fb":"## Data Description, Tasks & Observations\n\n### Data Description\n**Dataset Summary**: Titanic passenger details, including a column if the survived passenger survived or not.  \n**Index Column** *Instance of what we want to predict for*: `PassengerId`  \n**Target Column** *What we want to predict for each element in Index Column*: `Survived`  \n**Features**: Remaining Columns  \n**Data Source**: Kaggle Competetion Dataset  \n**Other Comments**: ???\n\n### Tasks:\n1. Understand data and select columns to be used as features\n1. Preparing Data for model\n2. Train basic model to predict if a passenger survived\n3. Evaluate model \n4. Save best performing model\n\n### Observations:\n1. *Will be filled as we go through workflow*","385fbdec":"## Import Libraries","38903642":"#### Observations\n1. SibSp seems to behave more like a categorical column than a numeric column\n1. Both Age and Fare seem relavent \n1. A higher Fare generally shows a higher chance of survival\n1. A lower age generally shows a higher chance of survival"}}