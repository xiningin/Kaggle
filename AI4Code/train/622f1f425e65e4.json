{"cell_type":{"03c8b22d":"code","363c7c3f":"code","cd440067":"code","a92bcd83":"code","47ada8fe":"code","d3fc735c":"code","5792d3d2":"code","6480517d":"code","d6aa4c9f":"code","87f0f6d9":"code","4c52ea46":"code","b41ca515":"code","7a55649f":"code","e51fa3c2":"code","e799d0ec":"code","0bb1cc84":"code","a3c44dce":"code","5e1c0975":"code","b66d606f":"code","da8c8ef7":"code","d32e4943":"code","6eb73136":"code","cd2ad8bf":"code","a604d0c1":"code","681f5a53":"code","eb87cd65":"code","9a998ff8":"code","089a5300":"code","b039158f":"code","fea2d582":"code","6fb2756c":"code","f4dd132f":"code","256f2797":"code","7ffcd757":"code","284848a8":"code","03c62d7a":"code","2a1c0b70":"code","121ad0ba":"code","d5b2a812":"code","e1ff8249":"code","bfacdae4":"code","12a3ee6c":"code","c2cf337d":"code","ded43155":"code","8121d82c":"code","c1bb8455":"code","e8c512ef":"code","fae6a414":"code","8a62ac05":"code","30a2d871":"code","d57f032b":"code","9f3a2ff2":"code","d0434cba":"code","76fb81f6":"code","d95a7cd0":"code","a2e4f4f6":"code","d04e9bd2":"code","dae0f0ca":"code","991d69e9":"code","4e618924":"code","bda5bb4b":"code","6d8aa45a":"code","aa58f39e":"code","99dc0106":"markdown","9407d7bb":"markdown","09eecca5":"markdown","0905e53c":"markdown","11127612":"markdown","84416eb9":"markdown","b441be7d":"markdown","f52d26de":"markdown","79a15c78":"markdown","233e0a4d":"markdown","2d205ac1":"markdown","e9b117c4":"markdown","8978b8fe":"markdown","b5165df8":"markdown","0e1a9fe9":"markdown","4dafa8cb":"markdown","17e9f622":"markdown","94323480":"markdown","b31f1e41":"markdown","ae0f9688":"markdown","831d0d84":"markdown","d8e1606c":"markdown","61e651e7":"markdown","489ebc7d":"markdown","ceac49e8":"markdown","34a35234":"markdown"},"source":{"03c8b22d":"import numpy as np\nimport pandas as pd","363c7c3f":"a=np.array([34,43,43,434,2,4,4])","cd440067":"print('mean of a:',a.mean())\nprint('size of a:',a.size)\nprint('shape of a:',a.shape )\nprint('dinmension of a:',a.ndim)","a92bcd83":"a.astype(float)","47ada8fe":"b=np.arange(1,21)","d3fc735c":"b","5792d3d2":"print('Shape:',b.shape)\nprint('Size:',b.size)\nprint('dimension:',b.ndim)","6480517d":"b1=b.reshape(5,4) #5 rows and 4 columns\nb2=b.reshape(4,5) #4 rows and 5 columns\n\nprint(\"b1:\\n\",b1)\nprint(\"\\nb2:\\n\",b2)","d6aa4c9f":"b1*10","87f0f6d9":"b1+10","4c52ea46":"b1.dot(b2)","b41ca515":"b1.dot(a)","7a55649f":"print('b1:\\n',b1)\nprint('Transpose:\\n',b1.transpose())","e51fa3c2":"c=np.array([[1.,2.],[3.,4.]])","e799d0ec":"c","0bb1cc84":"np.linalg.inv(c)","a3c44dce":"d=np.array(np.arange(9).reshape(3,3),dtype=float)","5e1c0975":"d","b66d606f":"#print 1.,4.,7.\n#d[:,-2]\nd[:,1]\n","da8c8ef7":"#print 1,2,4,5\nd[:2,1:]","d32e4943":"#print 1,2,4,5,7,8\n#d[:,1:]\nd[:,-2:]","6eb73136":"#print 3,4,6,7\nd[1:3,0:2]","cd2ad8bf":"d[d>5]","a604d0c1":"e=[23,3,4,34,34,3,43,43,4]","681f5a53":"e[6:]","eb87cd65":"e[-3:]","9a998ff8":"np.zeros(10)","089a5300":"np.ones(10)","b039158f":"(np.ones(25)*5).reshape(5,5)","fea2d582":"np.ones(25).reshape(5,5)*5","6fb2756c":"np.zeros(25).reshape(5,5)+5","f4dd132f":"Name_Age={'name':['Raghav','Sharmi','Ishaan'],'Age':[28,28,1]}","256f2797":"type(Name_Age)","7ffcd757":"family=pd.DataFrame(Name_Age)","284848a8":"family\n#By default, row labels(Index) are from the range(0-3) as we have 3 records","03c62d7a":"type(family)","2a1c0b70":"new_data=np.arange(150)\n\nnew_col={'new_column':new_data,'sex':'M'}\n\nnew_column=pd.DataFrame(new_col)","121ad0ba":"new_column.head(5)","d5b2a812":"new_column.tail(5)","e1ff8249":"#change the column index and Column name\n\nnew_column.index=np.arange(150,300)","bfacdae4":"new_column.columns=['numbers','gender']","12a3ee6c":"new_column.head(5)","c2cf337d":"test_dataA={'Id':[100,101,102,103,104],'First_Name':['Raghav','Sankar','Akhil','Deepa','Sufiya'],'Last_Name':['v','Jayaram','Vijayan','Nayak','Taranam']}","ded43155":"df1=pd.DataFrame(test_dataA,columns=['Id','First_Name','Last_Name'])","8121d82c":"test_dataB={'Id':[105,106,107,108,109],'First_Name':['Renju','Saurabh','Pradeep','Joshua','Mythreyi'],'Last_Name':['Nair','Indulkar','Bhat','Singh','Matada']}","c1bb8455":"df2=pd.DataFrame(test_dataB,columns=['Id','First_Name','Last_Name'])","e8c512ef":"df1","fae6a414":"df2","8a62ac05":"df_join=pd.concat([df1,df2])","30a2d871":"df_join","d57f032b":"testdataC={'Id':[100,101,102,103,104,105,106,107,108,109],'Expense_Id':[100,200,260,500,490,600,390,290,340,111]}","9f3a2ff2":"df3=pd.DataFrame(testdataC,columns=['Id','Expense_Id'])","d0434cba":"df3","76fb81f6":"pd.merge(df_join,df3,on='Id')","d95a7cd0":"string='India is my country'","a2e4f4f6":"#capitalize() helps to change the first letter of the string to capitalize\n\nuppercase= string.capitalize()","d04e9bd2":"uppercase","dae0f0ca":"#islower() helps to check whether the full string has lower case or not.. Returns TRUE or FALSE \n\nstring.islower()","991d69e9":"#isupper() helps to check whether the full string has upper case or not.. Returns TRUE or FALSE \n\nstring.isupper()","4e618924":"#len() helps to find the count of the letters available in the string.. returns 'int' datatype\n\nlen(string)","bda5bb4b":"#lower() helps to lower all the letters available in the string.\n#upper() helps to upper all the letters available in the string.\n\nstring.lower()","6d8aa45a":"#title() helps to capitalise the first letter of all the words in a string. \n\nstring.title()","aa58f39e":"#swapcase() helps to convert all the letters available in the sring to convert to reversecase\n\nstring.swapcase()","99dc0106":"### Happieeeee Learning... ","9407d7bb":"Transpose is possible","09eecca5":"creating a 2*2 array and reshaping it for further operations","0905e53c":"Importing the numpy and Pandas into the notebook","11127612":"### Thanks.. ","84416eb9":"#### Constructing a Dataframe from a Dictionary","b441be7d":"Assiging an array to a variable using np","f52d26de":"Using the reshape attribute to change the shape of the variable","79a15c78":"create an array of zeroes and ones from numpy","233e0a4d":"Multiplication is not possible as b1 has 5*4 and a has 1 dimension","2d205ac1":"## Playing with Numpy & Pandas","e9b117c4":"#### String Manipulation","8978b8fe":"#### Scalar operations","b5165df8":"Can also view the vairable as different datatype ","0e1a9fe9":"Can assign a random list(array) of items to a variable using numpy ","4dafa8cb":"Create multiple Dataframes for different datasets\n\n\n\nUse concat\/Merge to join the datasets. ","17e9f622":"Create a 2*2 matrix using numpy array","94323480":"#### Broadcasting with a dictionary","b31f1e41":"### We shall discuss more on the other topics later.. Keep following... \n","ae0f9688":"Finding the size,shape and dimensions of the variable created using the attributes of numpy","831d0d84":"Multiplication is possible as b1 has 5*4 and b2 has 4*5.. Thus resulting a 5*5 matrix","d8e1606c":"#### Combining and Merging DataSets","61e651e7":"Create 5*5 matirix with 5 using numpy.ones and numpy.zeros","489ebc7d":"Finding the mean,size,shape and dimensions of the variable assigned using the attributes of numpy. ","ceac49e8":"Inverse of an array\/matrix can be found using this attribute","34a35234":"create an 1d array by simmply assiging a list of items to a variable"}}