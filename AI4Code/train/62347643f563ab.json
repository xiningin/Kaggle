{"cell_type":{"292de6fb":"code","83536d79":"code","2478a676":"code","40f4a0ea":"code","66ccb45b":"code","db59ee63":"code","608ed2c5":"code","5bfdaf9e":"code","819e4ac0":"code","0de9438f":"code","c7d8f4f4":"code","4ce0c60a":"code","665b0970":"markdown","a45e079e":"markdown","be0ef61a":"markdown","b7729fe2":"markdown","94eb2779":"markdown","a6b7b342":"markdown","61282632":"markdown","ca5bd3ff":"markdown","b609913a":"markdown","64549513":"markdown","366eabb3":"markdown","11dce2bc":"markdown","4570ec67":"markdown"},"source":{"292de6fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom google.cloud import bigquery\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83536d79":"# BigQuery\nclient = bigquery.Client(project='broadband-data')\ndataset_ref = client.dataset('census_data')\ndataset = client.get_dataset(dataset_ref)","2478a676":"ruca_table_ref = dataset_ref.table(\"ruca_original\")\nruca_table = client.get_table(ruca_table_ref)\nruca_data_table = client.list_rows(ruca_table).to_dataframe()\n\n","40f4a0ea":"ruca_data_table.info()","66ccb45b":"ruca_data_table[\"tractcode\"] = ruca_data_table[\"geoid\"].astype(str)\nruca_data_table[\"tractcode\"] = ruca_data_table[\"tractcode\"].str.replace(r'^1400000US', '')\nruca_data_table\n","db59ee63":"census_tracts_exclude = ['02','15','72','60','66','78','69']\n\nfor census_tract in census_tracts_exclude:\n    ruca_data_table = ruca_data_table[~ruca_data_table['tractcode'].astype(str).str.startswith(census_tract)]\n\nruca_data_table.info()\n","608ed2c5":"ruca_data_table.isnull().values.any()","5bfdaf9e":"#index = ruca_data_table[ruca_data_table['ruca'] == 99].index\n#ruca_data_table.drop(index, inplace = True)\n#ruca_data_table","819e4ac0":"def recode(number):\n    if number == 1 or number == 4 or number == 7:\n        return \"core\"\n    elif number == 2 or number == 5 or number == 8:\n        return \"suburb\"\n    elif number == 3 or number == 6 or number == 9:\n        return \"exurb\"\n    elif number == 10 or number == 99:\n        return \"rural\"\n        \nruca_data_table[\"cser\"] = ruca_data_table[\"ruca\"].apply(recode)","0de9438f":"res_high_speed = pd.read_csv('..\/input\/fcc-form477-residential-fixed-connections-10x1\/fcc_form477_residential_fixed_connections_10x1_2015_2018_updated.csv', converters = {'tractcode': lambda x: str(x)})\ncombined_dataframes = pd.merge(res_high_speed, ruca_data_table)\ncombined_dataframes","c7d8f4f4":"combined_dataframes.dropna\ncombined_dataframes.isnull().values.any()\n","4ce0c60a":"combined_dataframes.to_csv('\/kaggle\/working\/RUCA_fcc_form477_residential_fixed_connections.csv', index = False, header=True)","665b0970":"No missing values","a45e079e":"Tasks:\n\n1. Obtain RUCA table from Google Cloud.  \n2. Extract census tracts from RUCA dataset.\n3. Drop census tracts associated with areas outside of continental US (CONUS)\n4. Create a dataframe that is suitable for merging with combined dataset for Residential Fixed High-Speed Connections (at least 10 Mbps downstream and at least 1 Mbps upstream per 1000 Households). \n5. Merge with combined dataset for Residential Fixed High-Speed Connections (at least 10 Mbps downstream and at least 1 Mbps upstream per 1000 Households).\n\nGoal: Create a dataset where we can look at the association between how urban\/rural a census tract is and changes in high speed internet access in that census tract over time.","be0ef61a":"We dropped rows where the column 'ruca' is equal to 99 because a code of 99 means that. the census tract has zero population and no rural-urban identifier information: https:\/\/www.ers.usda.gov\/data-products\/rural-urban-commuting-area-codes\/documentation\/","b7729fe2":"Merged res_high_speed and ruca_data_table dataframes into one dataframe.","94eb2779":"Drop missing values and check for missing values. We have none","a6b7b342":"Now, we have a combined dataset with which we can view changes in Residential Fixed High-Speed Connections (at least 10 Mbps downstream and at least 1 Mbps upstream per 1000 Households) in a certain census tract in the continental United States (CONUS) for multiple periods in time AND RUCA codes for those census tracts.\n\nHere are the following codes for measuring Residential Fixed High-Speed Connections in a certain census tract (columns Jun_2015-Dec_2018):  \n0 == 0 connections per 1000 households  \n1 == 0 < x <=200 connections per 1000 households  \n2 == 200 < x <=400 connections per 1000 households  \n3 == 400 < x <=600 connections per 1000 households  \n4 == 600 < x <=800 connections per 1000 households  \n5 == 800 < x connections per 1000 households  \n\nRUCA codes:   \n1 == Metropolitan area core: primary flow within an urbanized area (UA)  \n2 == Metropolitan area high commuting: primary flow 30% or more to a UA  \n3 == Metropolitan area low commuting: primary flow 10% to 30% to a UA  \n4 == Micropolitan area core: primary flow within an urban cluster of 10,000 to 49,999 (large UC)  \n5 == Micropolitan high commuting: primary flow 30% or more to a large UC  \n6 == Micropolitan low commuting: primary flow 10% to 30% to a large UC  \n7 == Small town core: primary flow within an urban cluster of 2,500 to 9,999 (small UC)  \n8 == Small town high commuting: primary flow 30% or more to a small UC  \n9 == Small town low commuting: primary flow 10% to 30% to a small UC  \n10 == Rural areas: primary flow to a tract outside a UA or UC  \n99 == Not coded: Census tract has zero population and no rural-urban identifier information  ","61282632":"Save as CSV","ca5bd3ff":"Obtaining RUCA table","b609913a":"Create BigQuery client to analyse census data","64549513":"Created extra column named \"cser\" -- an indicator variable that categorizes census tracts by commuting patterns.  RUCA codes 1, 4 and 7 would be viewed as the \"core\" of a larger surrounding community, regardless of its size ('metropolitan', 'micropolitan' and 'small town'). Codes 2, 5 and 8 would be viewed as so-called \"suburbs.\" Codes 3, 6 and 9 would be considered so-called \"exurbs.\" Codes 10 and 99 would be bucketed together and considered as rural or remote areas ","366eabb3":"Created extra \"tractcode\" column for US Census tract codes in dataframe by extracting values from the \"geoid\" column.  Census tract codes are already embedded within the geoid and comprise of all the digits that follow \"1400000US\" in the geoid column","11dce2bc":"Obtaining characteristics of the RUCA table","4570ec67":"Census tract codes are set up so that the first 2 digits in the census tract represent the state. As such, any census tract that starts in \"01\" means it's an Alabama census tract, \"02\" is an Alaska census tract, etc.\n\nWe are dropping the census tracts starting with the following:  \n02 - Alaska  \n15 - Hawaii  \n72 - Puerto Rico  \n60 - American Samoa  \n66 - Guam  \n78 - US Virgin Islands  \n69 - Northern Marinara Islands  "}}