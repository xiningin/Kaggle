{"cell_type":{"cd6e11e6":"code","5144fc70":"code","cf5bbda6":"code","c4d3f1fe":"code","0ed3df61":"code","f9254bf9":"code","1a400888":"code","7c101fb3":"code","70fd5c7b":"code","e7a4dd26":"code","dffbf7fc":"code","18f42861":"code","d1cf08fc":"code","12395956":"code","48596eb5":"code","0edc3e37":"code","d63509b6":"code","0bb75ce4":"code","75983a5e":"code","2a89ce23":"code","a611f083":"code","ec17d419":"code","c752971a":"code","8c7f50e1":"code","e3f7e895":"code","f53bbe4b":"code","a3f7f2a9":"code","593dc71e":"code","db2f2298":"code","2fa1259b":"code","b1e11085":"code","ec82d48c":"code","ba25efd0":"code","f9af1d77":"code","4cd38d4a":"code","defbf588":"code","b4f13baa":"code","d71e8ed7":"code","cb56f453":"code","e3440d0a":"code","f68db674":"code","38bd3ba1":"code","1d89f3a5":"code","2736afdc":"code","cffbe5fd":"code","777df4db":"code","adce458e":"code","64c527c7":"code","6ce03654":"code","ce63191f":"code","cca50f6f":"code","32c0a805":"code","4b2d2eba":"code","3cb5bc58":"code","c30ceafd":"code","316ac53f":"code","0b408456":"code","6427ed61":"code","3bd7b230":"code","9c9e75ea":"code","768c8b40":"code","4c7d36ca":"code","28f95cc5":"code","3dee8f1d":"code","6e40a0dd":"code","3b581c00":"code","4a0ad2d5":"code","ad7fff24":"code","0b573363":"code","a4ede5f3":"code","31b9ae39":"code","9381cde6":"code","0066090d":"code","fec91328":"code","58baa4f3":"code","d6d4600d":"code","003084a0":"code","ac014e92":"code","7c188e7a":"code","425e2e85":"code","14afcbf6":"code","b6c42165":"code","e6080058":"code","1fa3052e":"code","122f7964":"code","8d9ecea9":"code","58a0fd45":"code","7cfa32a1":"code","489a4da0":"code","2998298f":"code","16129d4d":"code","702d4a20":"code","4e514f0e":"code","959ba4d8":"markdown","ae0a90a8":"markdown","938ada2c":"markdown","781f3b30":"markdown","287124bd":"markdown","82897a94":"markdown","a7db1309":"markdown","2a0f2f19":"markdown","7ff89848":"markdown","f878a289":"markdown","0e392d50":"markdown","7f709ab9":"markdown","014c0394":"markdown","f5e64de1":"markdown"},"source":{"cd6e11e6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.style.use(\"ggplot\")\n%matplotlib inline","5144fc70":"data_path = '..\/input\/titanic\/train.csv'","cf5bbda6":"df = pd.read_csv(data_path)","c4d3f1fe":"df.head()","0ed3df61":"df.shape","f9254bf9":"df.dtypes","1a400888":"df.describe()","7c101fb3":"177\/891*100","70fd5c7b":"#misssing value handling:\ndf[\"Age\"].mean()","e7a4dd26":"temp_df = df[df[\"Age\"].isna()]","dffbf7fc":"temp_df.Cabin.isna().sum()","18f42861":"temp_df.shape","d1cf08fc":"temp_df[temp_df[\"Cabin\"].notna()][\"Cabin\"]","12395956":"177-158","48596eb5":"indices = []\nfor ind, i in enumerate(temp_df[temp_df[\"Cabin\"].notna()][\"Cabin\"].values):\n    if i.startswith(\"C\"):\n        indices.append(ind)\nindices","0edc3e37":"indic = []\nfor (i,ind) in list(zip(df[df[\"Cabin\"].notna()][\"Cabin\"],df[df[\"Cabin\"].notna()][\"Cabin\"].index)):\n    if i.startswith(\"C\"):\n        indic.append(ind)","d63509b6":"indic","0bb75ce4":"B_fill = int(df[df[\"Cabin\"].notna()].loc[indic][\"Age\"].mean())","75983a5e":"B_fill","2a89ce23":"indices","a611f083":"rt = df[df[\"Age\"].isna()]\nind = rt[rt[\"Cabin\"].notna()].iloc[indices].index","ec17d419":"ind","c752971a":"df.loc[ind] = df.loc[ind].fillna(B_fill)","8c7f50e1":"df.loc[ind]","e3f7e895":"df[df[\"Age\"].isna()]","f53bbe4b":"(158\/df.shape[0])*100","a3f7f2a9":"notna_df = df[df[\"Age\"].notna()]","593dc71e":"p_fill = int(notna_df[notna_df[\"Pclass\"]==3][\"Age\"].mean())","db2f2298":"p_fill","2fa1259b":"na_age_df = df[df[\"Age\"].isna()]","b1e11085":"ind = na_age_df[na_age_df[\"Pclass\"] == 3].index","ec82d48c":"df.loc[ind,\"Age\"] = p_fill","ba25efd0":"df.loc[ind]","f9af1d77":"notna_df = df[df[\"Age\"].notna()]","4cd38d4a":"p_fill = int(notna_df[notna_df[\"Pclass\"] == 1][\"Age\"].mean())","defbf588":"na_age_df = df[df[\"Age\"].isna()]","b4f13baa":"ind = na_age_df[na_age_df[\"Pclass\"] == 1].index","d71e8ed7":"df.loc[ind,\"Age\"] = p_fill","cb56f453":"df.loc[ind]","e3440d0a":"notna_df = df[df[\"Age\"].notna()]","f68db674":"p_fill = int(notna_df[notna_df[\"Pclass\"] == 2][\"Age\"].mean())","38bd3ba1":"na_age_df = df[df[\"Age\"].isna()]","1d89f3a5":"ind = na_age_df[na_age_df[\"Pclass\"] == 2].index","2736afdc":"df.loc[ind,\"Age\"] = p_fill","cffbe5fd":"(687\/df.shape[0])*100","777df4db":"df.drop(\"Cabin\", axis=1,inplace=True)","adce458e":"df.head()","64c527c7":"df.isna().sum()","6ce03654":"df.dropna(axis=0, inplace=True)","ce63191f":"df.isna().sum()","cca50f6f":"df.isna().sum()","32c0a805":"fill_val = int(df[\"Age\"].mean())","4b2d2eba":"df[\"Age\"].fillna(fill_val, inplace=True)","3cb5bc58":"df.drop(\"Cabin\", axis =1, inplace=True)\ndf.dropna(axis=0, inplace=True)","c30ceafd":"df.isna().sum()","316ac53f":"df.columns","0b408456":"df[\"Survived\"].value_counts()","6427ed61":"sns.barplot(df[\"Survived\"].value_counts().index, df[\"Survived\"].value_counts().values)\nplt.title(\" Survived column \")\nplt.show()","3bd7b230":"df[\"Pclass\"].value_counts()","9c9e75ea":"plt.barh(df[\"Pclass\"].value_counts().index, df[\"Pclass\"].value_counts().values)\nplt.yticks(sorted(df[\"Pclass\"].value_counts().index))\nplt.title(\"Pclass\")\nplt.show()","768c8b40":"df[\"Sex\"].value_counts()","4c7d36ca":"plt.bar(df[\"Sex\"].value_counts().index, df[\"Sex\"].value_counts().values)\nplt.title(\"Sex\")\nplt.show()","28f95cc5":"df = df.astype({\"Age\":\"int\"})","3dee8f1d":"df[\"Age\"].value_counts()","6e40a0dd":"plt.figure(figsize=(19,5))\nplt.bar(df[\"Age\"].value_counts().index, df[\"Age\"].value_counts().values)","3b581c00":"fig = plt.figure()\nax = fig.add_axes([0,0,15,15])\nax.axis('equal')\nax.pie(df[\"Age\"].value_counts().values, labels= df[\"Age\"].value_counts().index, autopct='%1.1f%%',textprops={'fontsize': 85})\nplt.show()\n","4a0ad2d5":"df[\"SibSp\"].value_counts()","ad7fff24":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1.3])\nax.axis('equal')\nplt.pie(df[\"SibSp\"].value_counts().values,labels = df[\"SibSp\"].value_counts().index,\n        autopct='%1.1f%%',textprops={'fontsize': 15})\nplt.tight_layout()\nplt.legend()\nplt.show()","0b573363":"df['Parch'].value_counts()","a4ede5f3":"explode = np.zeros(len(df['Parch'].value_counts()))\nexplode","31b9ae39":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1.3])\nax.axis('equal')\n\nax.pie(df['Parch'].value_counts().values ,labels = df['Parch'].value_counts().index ,\n        explode= explode,\n        autopct='%1.1f%%',textprops={'fontsize': 10})\n\ncentre_circle = plt.Circle((0,0),0.75,color='black', fc='white',linewidth=1.25)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n\nplt.axis('equal')\n\nplt.legend()\nplt.show()","9381cde6":"df[\"Fare\"].value_counts()","0066090d":"plt.figure(figsize=(15,6))\nsns.boxplot(df[\"Fare\"])\nplt.xticks(np.arange(0,600,15))\nplt.show()","fec91328":"plt.figure(figsize=(15,6))\nsns.violinplot(y= df[\"Fare\"])\nplt.show()","58baa4f3":"df[\"Embarked\"].value_counts()","d6d4600d":"plt.bar(df[\"Embarked\"].value_counts().index, df[\"Embarked\"].value_counts().values)\nplt.show()","003084a0":"df.columns","ac014e92":"sns.catplot('Embarked',data=df,hue='Pclass',kind='count')","7c188e7a":"sns.catplot('Pclass',data=df,hue='Survived',kind='count')","425e2e85":"sns.catplot('Sex',data=df,hue='Survived',kind='count')","14afcbf6":"plt.figure(figsize=(15,8))\nsns.boxplot( data=df, x= \"Survived\", y= \"Age\")","b6c42165":"df.columns","e6080058":"sns.catplot(x = \"Pclass\", col=\"Embarked\", data = df, kind='count')","1fa3052e":"sns.catplot(x = 'Age',y ='Sex' , hue ='Survived',data = df, kind='bar')","122f7964":"df = df.astype({\"Age\":\"int\"})","8d9ecea9":"df[\"age_grouping\"] = df[\"Age\"].apply(lambda x: \"0-25\" if x <=25 else \"25-50\" if x > 25 and x <= 50 else \"above50\")","58a0fd45":"df.head()","7cfa32a1":"sns.catplot(x = \"age_grouping\", col=\"Sex\", data= df, kind='count')","489a4da0":"sns.catplot(x = \"age_grouping\", col=\"Survived\", data= df, kind='count')","2998298f":"fig, ax = plt.subplots(2,1)\n\nfig.set_figheight(10)\nfig.set_figwidth(9)\n\nax[0].bar(df[\"Embarked\"].value_counts().index, df[\"Embarked\"].value_counts().values)\nax[1].bar(df[\"Pclass\"].value_counts().index, df[\"Pclass\"].value_counts().values)","16129d4d":"col = ['Pclass', 'Sex', 'SibSp','Parch', 'Embarked', 'age_grouping']","702d4a20":"\nfor i in col:\n    sns.catplot(x = i, col ='Survived',data = df, kind='count')\n    plt.title(i)\n    plt.show()","4e514f0e":"sns.catplot(x = \"age_grouping\", col=\"Sex\", data= df, kind='count')\nsns.catplot(x = \"age_grouping\", col=\"Survived\", data= df, kind='count')","959ba4d8":"#### Feature Engineering and creating additional feature wrt Age column","ae0a90a8":"**rest of it are dropped and also dropped cabin column as it has missing value more than 78%**","938ada2c":"## Other way to fill missing values:","781f3b30":"* i have done this process single value \"C\", you can also do rest of it unique values in cabin column.\n* repeat this process until you those 19 values done.","287124bd":"## Multi-Varient Analysis:","82897a94":"## Filling Age column leftover one with Pclass","a7db1309":"## Univarient analysis:","2a0f2f19":"* out of 890 people, 580 were male and rest are female\n* out of 890 people, 520 were age group belongs 25-50","7ff89848":"## filling Age column missing value wrt cabin Feature","f878a289":"### EDA v2","0e392d50":"#### using sub plots","7f709ab9":"# Visualization","014c0394":"* these plot shows people survived and not survived","f5e64de1":"* in 890 people , 330 people were not survived 37% of people in the ship they were of age group 25-50 \n* in 890 people , 180 people were not survived 20% of people in the ship they were of age group 0-25\n* in 890 people , 40 people were not survived 4% of people in the ship they were of age group above50\n* in 890 people , 195 people were survived 21% of people in the ship they were age group 25-50\n* in 890 people , 125 people were survived 14% of people in the ship they were age group 0-25\n* in 890 people , 20 people were survived 2% of people in the ship they were age group above50"}}