{"cell_type":{"cbc453ec":"code","d0188c0d":"code","8e421a68":"code","508d658b":"code","bc2f1e41":"code","3572076f":"code","75419890":"code","59bd20e6":"code","35fc2147":"code","433d89fd":"code","87d3d8ab":"code","ccee087d":"code","67a41849":"code","308bdae1":"code","d3a7a981":"code","4190cea8":"code","9a433d45":"code","22c580b5":"code","500dc702":"code","2277ac73":"code","ab8015ef":"code","c64961b4":"code","9c00906b":"code","e9c6e959":"code","ab612b5a":"code","a0faf754":"code","59c9b107":"code","2a3f9036":"code","e55507a7":"code","66ce519c":"code","c682f186":"code","45b7eaf7":"code","b6a2c73c":"code","2c786e27":"code","b2169b86":"code","cc8affc7":"code","6892d247":"code","547404ed":"markdown","f9de1702":"markdown","fec3f2ba":"markdown","b59a5059":"markdown","8e9150a8":"markdown","e52f13e5":"markdown","f4cd304e":"markdown","4392ea9c":"markdown","38522cab":"markdown","8fb9e1b5":"markdown","6e3b955d":"markdown","64c45e6a":"markdown","e497c712":"markdown","8e0cd0a1":"markdown","a719223c":"markdown","bc516c94":"markdown","377e3bd7":"markdown","85fc3f8a":"markdown","25bbaf29":"markdown","cd79794f":"markdown","d55adad6":"markdown","35fb4a6e":"markdown","7ee51775":"markdown","f790a37d":"markdown"},"source":{"cbc453ec":"import os\nimport pandas as pd\nimport numpy as np\nimport seaborn as sbn\nimport matplotlib.pyplot as plt\nfrom matplotlib.font_manager import FontProperties \nfrom matplotlib.ticker import AutoMinorLocator\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix, accuracy_score, recall_score, precision_score\nfrom sklearn.linear_model import LogisticRegression, LinearRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import MinMaxScaler","d0188c0d":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nData = pd.read_csv('\/kaggle\/input\/heart-disease-prediction-using-logistic-regression\/framingham.csv')\npd.set_option(\"display.max_columns\", 16) # Show all columns of Pandas Dataframe\nData.head()","8e421a68":"Data.shape","508d658b":"Missing_values_percent = 100*(Data.isnull().sum()\/len(Data[\"male\"]))\nprint(Missing_values_percent)","bc2f1e41":"Data[\"education\"].fillna(Data[\"education\"].median(), inplace = True)\nData[\"cigsPerDay\"].fillna(Data[\"cigsPerDay\"].median(), inplace = True)\nData[\"BPMeds\"].fillna(Data[\"BPMeds\"].median(), inplace = True)\nData[\"totChol\"].fillna(Data[\"totChol\"].median(), inplace = True)\nData[\"BMI\"].fillna(Data[\"BMI\"].median(), inplace = True)\nData[\"heartRate\"].fillna(Data[\"heartRate\"].median(), inplace = True)\nData[\"glucose\"].fillna(Data[\"glucose\"].median(), inplace = True)","3572076f":"Missing_values_percent = 100*(Data.isnull().sum()\/len(Data[\"male\"]))\nprint(Missing_values_percent)","75419890":"Data.dtypes","59bd20e6":"plt.figure(figsize = (25, 25))\nsbn.pairplot(Data[[\"male\", \"age\", \"currentSmoker\", \"cigsPerDay\", \"TenYearCHD\"]], hue = \"TenYearCHD\")\nplt.show()","35fc2147":"Datacopy=Data.copy()\nDatacopy.rename(columns={'male': 'Sex'}, inplace = True)\nDatacopy['Sex'] = Datacopy['Sex'].replace({0:'Female',1:'Male'})\nsbn.countplot(x=\"Sex\", hue=\"TenYearCHD\", data=Datacopy)\nplt.show()","433d89fd":"plt.figure(figsize = (12, 10))\nsbn.heatmap(Data[[\"male\", \"age\", \"currentSmoker\", \"cigsPerDay\", \"TenYearCHD\"]].corr(), vmin = 0, annot = True, cmap = \"coolwarm\")\nplt.show()","87d3d8ab":"plt.figure(figsize = (12, 10))\nsbn.heatmap(Data[[\"BPMeds\", \"prevalentStroke\", \"prevalentHyp\", \"diabetes\", \"TenYearCHD\"]].corr(), vmin = 0, annot = True, cmap = \"coolwarm\")\nplt.show()","ccee087d":"plt.figure(figsize = (25, 25))\nsbn.pairplot(Data[[\"totChol\", \"sysBP\", \"diaBP\", \"BMI\", \"heartRate\", \"glucose\", \"TenYearCHD\"]], hue = \"TenYearCHD\")\nplt.show()","67a41849":"plt.figure(figsize = (14,12))\nsbn.heatmap(Data[[\"totChol\", \"sysBP\", \"diaBP\", \"BMI\", \"heartRate\", \"glucose\", \"TenYearCHD\"]].corr(), vmin = 0, annot = True, cmap = \"coolwarm\")\nplt.show()","308bdae1":"diaBP = np.array(Data[\"diaBP\"], dtype = float)\nsysBP = np.array(Data[\"sysBP\"], dtype = float)\ndiaBP = diaBP.reshape(-1, 1)\nModeloLinearR = LinearRegression()\nModeloLinearR.fit(diaBP, sysBP)","d3a7a981":"Font = {'family': 'serif', 'color': 'black', 'weight': 'normal', 'size': 16}\nFont3 = FontProperties(family=\"serif\", weight='normal', style='normal', size=16)\nfig, ax = plt.subplots(figsize = (7,7))\nax.scatter(diaBP, sysBP, color = \"darkblue\", marker = \".\", s = 40)\nplt.plot(diaBP,diaBP*ModeloLinearR.coef_ + ModeloLinearR.intercept_, color = \"red\", label= 'Linear Regression', linewidth=4)\nplt.xlabel(\"diaBP\", fontdict = Font)\nplt.ylabel(\"sysBP\", fontdict = Font)\nplt.ylim(65, 315)\nax.xaxis.set_minor_locator(AutoMinorLocator())\nax.yaxis.set_minor_locator(AutoMinorLocator())\nax.tick_params(axis = \"both\", direction = \"in\", labelcolor='black', labelsize=16, top = True, right = True)\nax.tick_params(which='major', direction = \"in\", color='black', length=7, width = 3)\nax.tick_params(which='minor', direction = \"in\", length=4, color='black', width = 2, top = True, right = True)\nfor axis in ['top','bottom','left','right']:\n    ax.spines[axis].set_color(\"black\")\nfor axis in [\"top\", \"bottom\", \"left\", \"right\"]:\n    ax.spines[axis].set_linewidth(1.3)\nplt.legend(frameon = False, prop = Font3, bbox_to_anchor = (0.03,0.97), loc = \"upper left\")\nplt.show()","4190cea8":"# feature and target variables\ny = Data[\"TenYearCHD\"] # target\n# Create normalised data feature\nnorm = MinMaxScaler(feature_range = (0, 1))\nx = Data.drop([\"TenYearCHD\"], axis = 1)\nx = norm.fit_transform(x)","9a433d45":"# train - test split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 45)","22c580b5":"# $\\large{\\color{darkred}{4.}}$ $\\large{\\color{darkblue}{\\textbf{Models}}}$ $\\color{red}{\u2713}$","500dc702":"LogisticR = LogisticRegression(C = 0.1, penalty = \"l2\")","2277ac73":"LogisticR.fit(x_train, y_train)","ab8015ef":"y_pred = LogisticR.predict(x_test)","c64961b4":"ModelKNN = KNeighborsClassifier()","9c00906b":"# fine-tuning\nK_values = np.array([2, 3, 5, 7, 9, 11])\nmetric = [\"minkowski\", \"chebyshev\"]\np = np.array([1, 2, 3, 4])\nparam_grid = {\"n_neighbors\":K_values, \"metric\":metric, \"p\":p}\nGridKNN = GridSearchCV(estimator = ModelKNN, param_grid = param_grid, cv = 5)\nGridKNN.fit(x_train, y_train)","e9c6e959":"print(GridKNN.best_score_)\nprint(GridKNN.best_estimator_.n_neighbors)\nprint(GridKNN.best_estimator_.metric)\nprint(GridKNN.best_estimator_.p)","ab612b5a":"ModelKNN = KNeighborsClassifier(n_neighbors = 11, metric = \"minkowski\", p = 2)\nModelKNN.fit(x_train, y_train)","a0faf754":"y_predKNN = ModelKNN.predict(x_test)","59c9b107":"ModelNB = GaussianNB()\nModelNB.fit(x_train, y_train)","2a3f9036":"y_predNB = ModelNB.predict(x_test)","e55507a7":"Matrix = confusion_matrix(y_test, y_pred) \nprint(Matrix)","66ce519c":"plt.figure(figsize = (7,7))\nsbn.heatmap(Matrix, annot = True, cmap = \"coolwarm\")\nplt.show()","c682f186":"print(f\"Accuracy_score = {accuracy_score(y_test, y_pred):.3f}\")\nprint(f\"Recall_score = {recall_score(y_test, y_pred):.3f}\")\nprint(f\"Precision_score = {precision_score(y_test, y_pred):.3f}\")","45b7eaf7":"MatrixKNN = confusion_matrix(y_test, y_predKNN) \nprint(Matrix)","b6a2c73c":"plt.figure(figsize = (7,7))\nsbn.heatmap(MatrixKNN, annot = True, cmap = \"coolwarm\")\nplt.show()","2c786e27":"print(f\"Accuracy_score = {accuracy_score(y_test, y_predKNN):.3f}\")\nprint(f\"Recall_score = {recall_score(y_test, y_predKNN):.3f}\")\nprint(f\"Precision_score = {precision_score(y_test, y_predKNN):.3f}\")","b2169b86":"MatrixNB = confusion_matrix(y_test, y_predNB) \nprint(Matrix)","cc8affc7":"plt.figure(figsize = (7,7))\nsbn.heatmap(MatrixNB, annot = True, cmap = \"coolwarm\")\nplt.show()","6892d247":"print(f\"Accuracy_score = {accuracy_score(y_test, y_predNB):.3f}\")\nprint(f\"Recall_score = {recall_score(y_test, y_predNB):.3f}\")\nprint(f\"Precision_score = {precision_score(y_test, y_predNB):.3f}\")","547404ed":"${\\color{darkred}{\\textbf{Medium (.3 to .5) correlation+: cigsPerDay and male}}}$\n\n${\\color{darkred}{\\textbf{Large (.5 to 1.0) correlation+: cigsPerDay and currentSmoker}}}$","f9de1702":"# $\\large{\\color{darkred}{1.}}$ $\\large{\\color{darkblue}{\\textbf{Importing Libraries}}}$ $\\color{red}{\u2713}$","fec3f2ba":"# $\\Large{\\color{darkblue}{\\textbf{Logistic regression vs KNN vs Naive Bayes}}}$","b59a5059":"${\\color{darkblue}{\\textbf{Heatmap 3}}}$","8e9150a8":"# $\\large{\\color{darkred}{4.3}}$ $\\large{\\color{darkblue}{\\textbf{Naive Bayes}}}$ $\\color{red}{\u2713}$","e52f13e5":"${\\color{darkblue}{\\textbf{Prediction}}}$","f4cd304e":"# $\\large{\\color{darkred}{2.}}$ $\\large{\\color{darkblue}{\\textbf{Reading the data}}}$ $\\color{red}{\u2713}$","4392ea9c":"# ${\\color{darkred}{3.4.}}$ ${\\color{darkblue}{\\textbf{Data split}}}$ $\\color{red}{\u2713}$","38522cab":"${\\color{darkblue}{\\textbf{Prediction}}}$","8fb9e1b5":"# $\\large{\\color{darkred}{4.1}}$ $\\large{\\color{darkblue}{\\textbf{Logistic Regression}}}$ $\\color{red}{\u2713}$","6e3b955d":"# ${\\color{darkred}{4.1}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","64c45e6a":"${\\color{darkblue}{\\textbf{Heatmap 1}}}$","e497c712":"# $\\large{\\color{darkred}{4.2}}$ $\\large{\\color{darkblue}{\\textbf{KNN}}}$ $\\color{red}{\u2713}$","8e0cd0a1":"# ${\\color{darkred}{3.3.}}$ ${\\color{darkblue}{\\textbf{Correlation}}}$ $\\color{red}{\u2713}$","a719223c":"${\\color{darkblue}{\\textbf{Prediction}}}$","bc516c94":"# ${\\color{darkred}{3.2.}}$ ${\\color{darkblue}{\\textbf{dtypes}}}$ $\\color{red}{\u2713}$","377e3bd7":"# ${\\color{darkred}{4.1.1.}}$ ${\\color{darkblue}{\\textbf{Logistic Regression}}}$ $\\color{red}{\u2713}$","85fc3f8a":"${\\color{darkred}{\\textbf{Medium (.3 to .5) correlation+: sysBP and BMI - diaBP and BMI}}}$\n\n${\\color{darkred}{\\textbf{Large (.5 to 1.0) correlation+: sysBP and diaBP}}}$","25bbaf29":"${\\color{darkblue}{\\textbf{diaBP x sysBP}}}$","cd79794f":"# ${\\color{darkred}{4.2.1.}}$ ${\\color{darkblue}{\\textbf{Naive Bayes}}}$ $\\color{red}{\u2713}$","d55adad6":"# ${\\color{darkred}{3.1.}}$ ${\\color{darkblue}{\\textbf{Missing Values Treatment}}}$  $\\color{red}{\u2713}$","35fb4a6e":"# $\\large{\\color{darkred}{3.}}$ $\\large{\\color{darkblue}{\\textbf{Data Preprocessing}}}$","7ee51775":"${\\color{darkblue}{\\textbf{Heatmap 2}}}$","f790a37d":"# ${\\color{darkred}{4.2.1.}}$ ${\\color{darkblue}{\\textbf{KNN}}}$ $\\color{red}{\u2713}$"}}