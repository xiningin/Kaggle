{"cell_type":{"fd4f9848":"code","98976887":"code","4bf24c96":"code","adb79894":"code","b81d43ef":"code","d9e9ee4f":"code","984d1b39":"code","28f90a64":"code","adcf295d":"code","906fe54e":"code","4208868f":"code","1f9933f0":"code","4298115c":"code","4ab9d97d":"code","5f9e9921":"code","03e6f3a6":"code","1ffb9fd5":"code","4eeaac35":"code","73624153":"code","667842e0":"code","3601df57":"markdown","dd831c43":"markdown","9940473d":"markdown","079b4def":"markdown","98af6270":"markdown"},"source":{"fd4f9848":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \npd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\n\n\ntrain=pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/train.csv')\ntest=pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/test.csv')","98976887":"train.info()","4bf24c96":"train.head()","adb79894":"\ndata = train.copy()\ndata = data[data['Cover_Type'] < train['Cover_Type'].quantile(0.99)]\nplt.figure(figsize=(15,10))\nplt.title(\"Cover_Type\",fontsize=15)\nsns.distplot(data['Cover_Type'])\nplt.show()","b81d43ef":"plt.figure(figsize=(14,5))\ntarget_values = train['Cover_Type'].value_counts()\nsns.barplot(x=target_values.index, y=target_values.values,linewidth=1.5, facecolor='blue',\n                 errcolor=\".2\", edgecolor=\".2\")\nplt.title(\"Target unique values\", fontdict={'fontsize':20})\nplt.show()","d9e9ee4f":"test.shape,train.shape","984d1b39":"train['Cover_Type'].unique()","28f90a64":"train[train['Cover_Type']==1].shape,train[train['Cover_Type']==2].shape,train[train['Cover_Type']==3].shape","adcf295d":"train[train['Cover_Type']==6].shape,train[train['Cover_Type']==7].shape,train[train['Cover_Type']==4].shape,train[train['Cover_Type']==5].shape","906fe54e":"train.describe()","4208868f":"k = 10\nf,ax = plt.subplots(figsize=(11, 11))\ncols = train.corr().nlargest(k, 'Cover_Type')['Cover_Type'].index\ncm = np.corrcoef(train[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","1f9933f0":"train.isnull().sum()","4298115c":"y=train.pop('Cover_Type')\nid_=train.pop('Id')\nid_test=test.pop('Id')","4ab9d97d":"from tqdm import tqdm\ntr_te = pd.concat([train,test])\n\nnum_cols = [c for c in train.columns]\n\nfor f in tqdm(num_cols):\n    tr_te[f+'_counts'] = tr_te[f].map(pd.concat([train[f], test[f]], axis=0).value_counts().to_dict(), na_action='ignore')\n    tr_te[f+'_counts'] = tr_te[f+'_counts'].fillna(1)\n","5f9e9921":"train_df = tr_te[0:train.shape[0]]\ntest_df = tr_te[train.shape[0]:]","03e6f3a6":"del train,test","1ffb9fd5":"train_df.head(2)","4eeaac35":"cat_params = {\n    'iterations': 15000,\n    'learning_rate': 0.03,\n    'od_wait': 1000,\n    'depth': 7,\n    'task_type' : 'GPU',\n    'devices' : '0',\n    'verbose' : 1000\n}","73624153":"from catboost import CatBoostClassifier\nmodel = CatBoostClassifier( **cat_params)\nmodel.fit(train_df, y)\n\n\n","667842e0":"sub = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv')\nsub['Cover_Type'] =model.predict(test_df)\nsub.to_csv(\"submission.csv\",index=False)\nsub.head()","3601df57":"\n<a id=\"2.\"><\/a>\n## 2. drop + value_counts","dd831c43":"\n<a id=\"4.\"><\/a>\n## 4. submission","9940473d":"\n\n* [1. EDA](#1.)\n* [2. drop + value_counts](#2.)\n* [3. train](#3.)\n* [4. sub](#4.)\n\n\n","079b4def":"<a id=\"1.\"><\/a>\n## 1. EDA","98af6270":"\n<a id=\"3.\"><\/a>\n## 3. train"}}