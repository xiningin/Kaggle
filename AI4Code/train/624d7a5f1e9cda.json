{"cell_type":{"dbd6614a":"code","3716b9b3":"code","5d1b4a9d":"code","5aadd574":"code","0dfe680d":"code","4a946cd2":"code","31d96068":"code","cb63cd3e":"code","7dd2b761":"code","c80ae2ca":"code","32ff6adc":"code","dc186f14":"code","0c406506":"code","95ff939a":"code","b8ab19db":"code","d94118f6":"code","8389318a":"code","185a460b":"code","7a7c56a8":"code","0705e9fe":"markdown","95340085":"markdown","25ef2236":"markdown"},"source":{"dbd6614a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3716b9b3":"X_train =pd.read_csv('\/kaggle\/input\/ecommerce-shipping-data-competition-form\/X_train.csv')\nX_test = pd.read_csv('\/kaggle\/input\/ecommerce-shipping-data-competition-form\/X_test.csv')\ny_train = pd.read_csv('\/kaggle\/input\/ecommerce-shipping-data-competition-form\/y_train.csv')\n\nX_train.shape,X_test.shape","5d1b4a9d":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier","5aadd574":"X_train.head()","0dfe680d":"for col in X_train.select_dtypes(include= object):\n    target = X_train[col]\n    print('------')\n    print(col)\n    print(target.nunique())\n    print(target.value_counts())","4a946cd2":"X_train['Customer_care_calls'] = X_train['Customer_care_calls'].map(lambda x: x.replace('$','')).astype('int')\nX_train['Customer_care_calls'].value_counts()","31d96068":"X_test['Customer_care_calls'] = X_test['Customer_care_calls'].map(lambda x: x.replace('$','')).astype('int')\nX_test['Customer_care_calls'].value_counts()","cb63cd3e":"drop_col = ['ID']\ntarget_col = 'Reached.on.Time_Y.N'\n\nX_train_drop = X_train.drop(columns = drop_col)\nX_test_drop = X_test.drop(columns = drop_col)\ny      = y_train[target_col]","7dd2b761":"dumcol = pd.get_dummies(X_train_drop).columns","c80ae2ca":"train_dum = pd.get_dummies(X_train_drop)\ndumcol = train_dum.columns\n\ntest_dum = pd.get_dummies(X_test_drop)[dumcol]","32ff6adc":"X_train_model, X_validation, y_train_model, y_validation = train_test_split(train_dum, y, test_size=0.33, random_state=42,stratify=y)","dc186f14":"rf =RandomForestClassifier(random_state =30)","0c406506":"rf.fit(X_train_model,y_train_model)","95ff939a":"pred_proba = rf.predict_proba(X_validation)[:,1]","b8ab19db":"from sklearn.metrics import roc_auc_score","d94118f6":"roc_auc_score(y_validation,pred_proba)","8389318a":"test_predict_proba = rf.predict_proba(test_dum)[:,1]","185a460b":"# pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)\n\nsave_name = '003000000.csv'\n\nsubmission=pd.DataFrame({'ID': X_test['ID'], 'Reached.on.Time_Y.N': test_predict_proba})\nsubmission.to_csv(save_name, index=False)","7a7c56a8":"\ndef check_test_label(submission):\n    testlabel = pd.read_csv('\/kaggle\/input\/ecommerce-shipping-data-competition-form\/test_label\/y_test.csv')\n    Truelabel = testlabel['Reached.on.Time_Y.N']\n    guessLabel = submission['Reached.on.Time_Y.N']\n    \n    print('Test AUC score : ',roc_auc_score(Truelabel,guessLabel))\n\ncheck_test_label(submission)\n    ","0705e9fe":"# check test label AUC score","95340085":"## Noise data in *Customer_care_calls* columns","25ef2236":"# Submission"}}