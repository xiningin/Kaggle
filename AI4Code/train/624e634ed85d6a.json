{"cell_type":{"cae87396":"code","e512562d":"code","18ee781d":"code","96378b0d":"code","46588bd8":"code","8565140a":"code","2d6b2955":"code","b54033d9":"markdown","6fbf16ca":"markdown","b058f88a":"markdown","69df3a0a":"markdown"},"source":{"cae87396":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e512562d":"data=pd.read_csv('..\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')\ndata.head()","18ee781d":"data.info()","96378b0d":"unique_countries = data.country.unique()\nunique_countries","46588bd8":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nsns.set(style='whitegrid')\nplt.figure(figsize=(50,50))\ncount=1\nfor country in unique_countries:\n    plt.subplot(5,3,count)\n    count+=1\n    col=\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n    sns.lineplot(data[data.country==country]['year'],data[data.country==country]['exch_usd'], label=country,color=col)\n    \n    plt.scatter(data[data.country==country]['year'],data[data.country==country]['exch_usd'], color=col, s=28)\n    \n    plt.plot([np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),np.min(data[np.logical_and(data.country==country,data.independence==1)]\n             ['year'])],[0,np.max(data[data.country==country]['exch_usd'])],color='black', linestyle='dotted',alpha=0.8)\n    plt.text(np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']), \n             np.max(data[data.country==country]['exch_usd'])\/2, 'Independence',rotation=-90)\n    plt.scatter(x=np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),y=0,s=50)\n    plt.title(country)\nplt.tight_layout()\nplt.show()","8565140a":"\nsns.set(style=\"whitegrid\")\ncols=['systemic_crisis','domestic_debt_in_default','sovereign_external_debt_default','currency_crises','inflation_crises','banking_crisis']\nplt.figure(figsize=(20,20))\ncount=1\nfor col in cols:\n    plt.subplot(3,2,count)\n    count+=1\n    sns.countplot(y=data.country,hue=data[col],palette=\"RdBu\")\n    plt.legend(loc=0)\n    plt.title(col)\nplt.tight_layout()\nplt.show()","2d6b2955":"sns.set(style='whitegrid')\nplt.figure(figsize=(30,30))\ncount=1\nfor country in unique_countries:\n    plt.subplot(5,3,count)\n    count+=1\n    col=\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n    sns.lineplot(data[data.country==country]['year'],\n                 data[data.country==country]['inflation_annual_cpi'],label=country,color=col)\n    plt.scatter(data[data.country==country]['year'],\n                data[data.country==country]['inflation_annual_cpi'],color=col,s=28)\n    plt.plot([np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n              np.min(data[np.logical_and(data.country==country,data.independence==1)]['year'])],\n             [np.min(data[data.country==country]['inflation_annual_cpi']),\n              np.max(data[data.country==country]['inflation_annual_cpi'])],color='black',linestyle='dotted',alpha=0.8)\n    plt.text(np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n             np.max(data[data.country==country]['inflation_annual_cpi'])\/2,'Independence',rotation=-90)\n    plt.scatter(x=np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n                y=np.min(data[data.country==country]['inflation_annual_cpi']),\n                s=50)\n    plt.title(country)\nplt.tight_layout()\nplt.show()","b54033d9":"1. **Year wise average usd exchange rate of each country**","6fbf16ca":"* **Average year wise inflation**","b058f88a":"* **Different debt count of each country**","69df3a0a":"**List of countries**"}}