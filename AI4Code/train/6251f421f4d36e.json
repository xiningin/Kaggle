{"cell_type":{"33cd1da9":"code","2c0b0b84":"code","3b00d693":"code","7e7f8cc8":"code","c8fdaa3a":"code","78c0c7dc":"code","72c4408a":"code","4287dcb0":"code","561371b2":"code","2aa8383d":"code","377901fd":"code","36bddf64":"code","7ede27e2":"code","d99ad6de":"code","471d1a5e":"code","e9862dad":"code","bed2eaa3":"code","e9e6ebc4":"code","82aa220c":"code","96688273":"code","76b17105":"code","d70d49ca":"code","8de6e6e3":"code","f16ff70c":"code","c43c308d":"code","b5eed3e1":"code","a704697c":"code","3468436c":"code","e0b43d2f":"code","21092f47":"code","be7c6ab9":"code","b8a960cb":"code","c28d4c8d":"code","10c0d50b":"code","8bbc2497":"code","c2043e6f":"code","32c6f5d6":"code","ba4a959e":"code","f192c73c":"code","695d5d82":"code","d61f08d4":"code","90437246":"code","a42a7b22":"code","e8d0b024":"code","87164ed9":"code","0a645360":"code","6739d8f6":"code","5c8d9825":"code","52ffa5c9":"code","a2db0e1f":"code","cfc1ddf0":"code","4c5c60f9":"code","c32849c5":"code","6324832d":"code","f0d1a360":"code","6d923ebe":"code","fa1a7f2b":"code","65e92ba2":"code","e2821793":"code","8ef83608":"code","5511b726":"code","264ea3c4":"code","a386189d":"code","a5c030c8":"code","f2b4c42c":"code","8fce8069":"code","96a88190":"code","e99c6d84":"code","da6584bd":"code","d772d794":"code","7665adb1":"code","44514b52":"code","611569e1":"code","848fd3ad":"code","0fb4e4e0":"code","5e200588":"code","067e3bfa":"code","d05a6884":"code","b24f6959":"code","abd44f09":"code","4f44c7ed":"code","570fe4d3":"code","82c8a72b":"code","b38d06c3":"code","9dae9a1e":"code","ba0bc22b":"code","b368ee72":"code","50f2017a":"code","4bf48a73":"code","adf6b8cd":"code","d6999f62":"code","160ba20a":"code","8de2ab4b":"code","c75f5c50":"markdown"},"source":{"33cd1da9":"import pandas as pd\nimport sklearn","2c0b0b84":"adult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","3b00d693":"adult.shape","7e7f8cc8":"adult.head()","c8fdaa3a":"adult[\"Country\"].value_counts()","78c0c7dc":"import matplotlib.pyplot as plt","72c4408a":"adult[\"Age\"].value_counts().plot(kind=\"bar\")","4287dcb0":"adult[\"Sex\"].value_counts().plot(kind=\"bar\")","561371b2":"adult[\"Education\"].value_counts().plot(kind=\"bar\")","2aa8383d":"adult[\"Occupation\"].value_counts().plot(kind=\"bar\")","377901fd":"nadult = adult.dropna()","36bddf64":"nadult","7ede27e2":"nadult.drop('Id',axis=0,inplace=True)\nnadult","d99ad6de":"testAdult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","471d1a5e":"nTestAdult = testAdult.dropna()","e9862dad":"Xadult = nadult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]","bed2eaa3":"Yadult = nadult.Target","e9e6ebc4":"XtestAdult = nTestAdult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]","82aa220c":"YtestAdult = nTestAdult.Target","96688273":"from sklearn.ensemble import RandomForestClassifier","76b17105":"RFC = RandomForestClassifier(n_estimators = 10)","d70d49ca":"from sklearn.model_selection import cross_val_score","8de6e6e3":"scores = cross_val_score(RFC, Xadult, Yadult, cv=10)","f16ff70c":"scores","c43c308d":"RFC.fit(Xadult,Yadult)\nXtestAdult","b5eed3e1":"XtestAdult.drop('Id',axis=0,inplace=True)\nXtestAdult","a704697c":"YtestAdult.drop('Id',axis=0,inplace=True)\nYtestAdult","3468436c":"YtestPred = RFC.predict(XtestAdult)","e0b43d2f":"YtestPred","21092f47":"from sklearn.metrics import accuracy_score","be7c6ab9":"accuracy_score(YtestAdult,YtestPred)","b8a960cb":"import pandas as pd\nimport sklearn","c28d4c8d":"adult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","10c0d50b":"adult.shape","8bbc2497":"adult.head()","c2043e6f":"adult[\"Country\"].value_counts()","32c6f5d6":"import matplotlib.pyplot as plt","ba4a959e":"adult[\"Age\"].value_counts().plot(kind=\"bar\")","f192c73c":"adult[\"Sex\"].value_counts().plot(kind=\"bar\")","695d5d82":"adult[\"Education\"].value_counts().plot(kind=\"bar\")","d61f08d4":"adult[\"Occupation\"].value_counts().plot(kind=\"bar\")","90437246":"nadult = adult.dropna()","a42a7b22":"nadult","e8d0b024":"nadult.drop('Id',axis=0,inplace=True)\nnadult","87164ed9":"testAdult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","0a645360":"nTestAdult = testAdult.dropna()","6739d8f6":"Xadult = nadult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]","5c8d9825":"Yadult = nadult.Target","52ffa5c9":"XtestAdult = nTestAdult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]","a2db0e1f":"YtestAdult = nTestAdult.Target","cfc1ddf0":"from sklearn.naive_bayes import BernoulliNB","4c5c60f9":"BernNB = BernoulliNB(binarize = True)","c32849c5":"from sklearn.model_selection import cross_val_score","6324832d":"scores = cross_val_score(BernNB, Xadult, Yadult, cv=10)","f0d1a360":"scores","6d923ebe":"BernNB.fit(Xadult,Yadult)\nXtestAdult","fa1a7f2b":"XtestAdult.drop('Id',axis=0,inplace=True)\nXtestAdult","65e92ba2":"YtestAdult.drop('Id',axis=0,inplace=True)\nYtestAdult","e2821793":"YtestPred = BernNB.predict(XtestAdult)","8ef83608":"YtestPred","5511b726":"from sklearn.metrics import accuracy_score","264ea3c4":"accuracy_score(YtestAdult,YtestPred)","a386189d":"import pandas as pd\nimport sklearn","a5c030c8":"adult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","f2b4c42c":"adult.shape","8fce8069":"adult.head()","96a88190":"adult[\"Country\"].value_counts()","e99c6d84":"import matplotlib.pyplot as plt","da6584bd":"adult[\"Age\"].value_counts().plot(kind=\"bar\")","d772d794":"adult[\"Sex\"].value_counts().plot(kind=\"bar\")","7665adb1":"adult[\"Education\"].value_counts().plot(kind=\"bar\")","44514b52":"adult[\"Occupation\"].value_counts().plot(kind=\"bar\")","611569e1":"nadult = adult.dropna()","848fd3ad":"nadult","0fb4e4e0":"nadult.drop('Id',axis=0,inplace=True)\nnadult","5e200588":"testAdult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","067e3bfa":"nTestAdult = testAdult.dropna()","d05a6884":"Xadult = nadult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]","b24f6959":"Yadult = nadult.Target","abd44f09":"XtestAdult = nTestAdult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]","4f44c7ed":"YtestAdult = nTestAdult.Target","570fe4d3":"from sklearn.neighbors import KNeighborsClassifier","82c8a72b":"knn = KNeighborsClassifier(n_neighbors=3)","b38d06c3":"from sklearn.model_selection import cross_val_score","9dae9a1e":"scores = cross_val_score(knn, Xadult, Yadult, cv=10)","ba0bc22b":"scores","b368ee72":"knn.fit(Xadult,Yadult)\nXtestAdult","50f2017a":"XtestAdult.drop('Id',axis=0,inplace=True)\nXtestAdult","4bf48a73":"YtestAdult.drop('Id',axis=0,inplace=True)\nYtestAdult","adf6b8cd":"YtestPred = knn.predict(XtestAdult)","d6999f62":"YtestPred","160ba20a":"from sklearn.metrics import accuracy_score","8de2ab4b":"accuracy_score(YtestAdult,YtestPred)","c75f5c50":"PMR3508\tHASH 73\t\nNome: Paulo Mateus Corr\u00eaa Vianna\t\nNusp: 10772741\n\nTrabalho 2\n\nOs classificadores escolhidos foram Naive Bayes, KNN e Random Forests.\n\nNaive Bayes foi o pior dos 3 classificadores, com score de 0.773. Ele \u00e9 ideal para problemas de classifica\u00e7\u00e3o em grande escala nos quais h\u00e1 dificuldade de executar o conjunto completo de treinamento, por ser um m\u00e9todo mais simplificado que os outros dois utilizados. Entretanto, a base que estamos utilizando (adult) n\u00e3o \u00e9 t\u00e3o grande a ponto de se precisar de um m\u00e9todo como Bayes, o que faz com que ele tenha alcan\u00e7ado uma baixa acur\u00e1cia.\n\nKNN foi o mesmo classificador utilizado no primeiro trabalho, alcan\u00e7ando um score de 0.849. Apesar de ter uma estrutura mais simples de ser compreendida do que os outros dois, sua acur\u00e1cia obteve pontua\u00e7\u00e3o m\u00e9dia. Isso se d\u00e1 pelo fato de mesmo a interpreta\u00e7\u00e3o do funcionamento desde m\u00e9todo ser mais f\u00e1cil, ele ainda \u00e9 relativamente complexo dependendo do n\u00famero de vizinhos que tem de ser analisado.\n\nO melhor classificador foi o de Random Forests, com score de 0.876. Ele obteve maior acur\u00e1cia dentre todos os outros utilizados. Esse resultado se deve ao fato de ser uma t\u00e9cnica mais completa que as demais que \u00e9 mais dif\u00edcil de ser gerada, o que tamb\u00e9m faz com que tenha um tempo de processamento um pouco mais elevado.\nPor fim, observamos que todos os classificadores alcan\u00e7aram scores suficientemente razo\u00e1veis, com valores acima de 0.75. Entretanto, para um conjunto de dados de pequeno-m\u00e9dio aporte como a base pedida, o Random Forest se destaca por sua complexidade gerar resultados mais precisos e, portanto, \u00e9 a melhor escolha de classificador.\n"}}