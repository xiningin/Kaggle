{"cell_type":{"4a66fc8d":"code","bdbde490":"code","3428543c":"code","fed74bee":"code","549ff110":"code","a7ca913b":"code","1d48be1e":"code","bb631d32":"code","4abc32e6":"code","411ac7a4":"code","4c1994f6":"code","c25a0d92":"markdown"},"source":{"4a66fc8d":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.model_selection import KFold,train_test_split\nfrom sklearn.metrics import roc_auc_score\n\nimport optuna","bdbde490":"train = pd.read_csv(r'..\/input\/tabular-playground-series-oct-2021\/train.csv')\ntest = pd.read_csv(r'..\/input\/tabular-playground-series-oct-2021\/test.csv')\nsample_submission = pd.read_csv(r'..\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')","3428543c":"train['std'] = train.std(axis=1)\ntrain['min'] = train.min(axis=1)\ntrain['max'] = train.max(axis=1)\n\ntest['std'] = test.std(axis=1)\ntest['min'] = test.min(axis=1)\ntest['max'] = test.max(axis=1)","fed74bee":"train.head()","549ff110":"continous_cols= ['f'+str(i) for i in range(242)] + ['std']\ncontinous_cols.remove('f22')\ncontinous_cols.remove('f43')\ncategorical_cols = ['f'+str(i) for i in range(242,285)]+['f22','f43','min', 'max']\ncols = continous_cols + categorical_cols","a7ca913b":"from sklearn.preprocessing import RobustScaler\nscaler = RobustScaler()\ntrain[continous_cols] = scaler.fit_transform(train[continous_cols])\ntest[continous_cols] = scaler.transform(test[continous_cols])","1d48be1e":"params={'reg_alpha': 8.158768860412389, 'reg_lambda': 8.793022151019823, 'colsample_bytree': 0.2, 'subsample': 0.4, 'learning_rate': 0.05,\n   'max_depth': 100, 'num_leaves': 12, 'min_child_samples': 68, 'cat_smooth': 91,'objective': 'binary',  \n            'random_state': 48,'n_estimators': 20000,'n_jobs': -1}","bb631d32":"import random\nimport gc\nfrom sklearn.model_selection import KFold,StratifiedKFold\nfrom lightgbm import LGBMClassifier\nfrom sklearn import preprocessing","4abc32e6":"preds = np.zeros(test.shape[0])\nkf = StratifiedKFold(n_splits=5,random_state=48,shuffle=True)\nauc=[]  # list contains auc for each fold\nn=0\nfor trn_idx, test_idx in kf.split(train[cols],train['target']):\n    X_tr,X_val=train[cols].iloc[trn_idx],train[cols].iloc[test_idx]\n    y_tr,y_val=train['target'].iloc[trn_idx],train['target'].iloc[test_idx]\n    model = LGBMClassifier(**params)\n    model.fit(X_tr,y_tr,eval_set=[(X_val,y_val)],early_stopping_rounds=100,eval_metric=\"auc\",verbose=False)\n    preds += model.predict_proba(test[cols])[:,1]\/kf.n_splits\n    auc.append(roc_auc_score(y_val, model.predict_proba(X_val)[:, 1]))\n    gc.collect()\n    print(f\"fold: {n+1}, auc: {auc[n]}\")\n    n+=1  ","411ac7a4":"np.mean(auc)","4c1994f6":"sample_submission['target']=preds\nsample_submission.to_csv('submission.csv', index=False)","c25a0d92":"Thanks to the author of this notebook https:\/\/www.kaggle.com\/hamzaghanmi\/tps-oct-lightgbm\nI've included three more features in this."}}