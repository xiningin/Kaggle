{"cell_type":{"d7c9fd10":"code","0bcb4e03":"code","93771cb8":"code","e0073555":"code","e1609595":"code","32cb9106":"code","a2096705":"code","08800bef":"code","19d911c2":"code","37266290":"code","70c72e05":"code","16cb9a37":"code","2b1da562":"code","7f15e82b":"code","fe2ac8e3":"code","0edec058":"code","15489f73":"code","6e44933c":"code","1ad87235":"code","84f29a5f":"code","8c8094b3":"code","54828095":"code","382a7a7b":"code","15b91e4f":"code","4a495f8e":"code","4f25500e":"code","96d51b8d":"code","aa52ba92":"code","cd813abc":"code","d64a332d":"code","bc5a4bbb":"code","a1876af8":"code","b73bba07":"code","ed972e40":"code","54e3a9de":"code","b63b77af":"code","cc6b936b":"markdown","1a9439a9":"markdown","473b432b":"markdown","374a2871":"markdown","9691f0c2":"markdown","445db017":"markdown","c6cf49ed":"markdown","096acc76":"markdown","612a4fc4":"markdown","fe3889b4":"markdown","bc0d20ba":"markdown","5320050a":"markdown","964a8627":"markdown","b6e06640":"markdown","69262799":"markdown","0beea05e":"markdown","bdafcca1":"markdown","e2d66a61":"markdown","013d04ae":"markdown","2ad2f082":"markdown","7abaa9d6":"markdown","0935cb02":"markdown","0f159ec3":"markdown","49aeca51":"markdown","3a445edc":"markdown","6a6824e3":"markdown","d6690293":"markdown","3ebbf093":"markdown","af9c83d0":"markdown","37a6833b":"markdown","bfdc0f4e":"markdown","b9dc1103":"markdown","55e2eeb9":"markdown","de6afbb8":"markdown","cab82c1a":"markdown","dd407aac":"markdown","2ddb6d16":"markdown","9471c74b":"markdown","cdc14a1c":"markdown","1ec73d41":"markdown","11324c0b":"markdown","ba86d8b6":"markdown","3392cc51":"markdown","433e6490":"markdown","21a9cad6":"markdown","c1c55c56":"markdown","e3b06dd5":"markdown","79657513":"markdown","2347b183":"markdown","5ed5c6b7":"markdown","3e7925f8":"markdown","63b25311":"markdown","0a9ab1c6":"markdown","11d8c082":"markdown","2f9bbabd":"markdown","1b1b06e2":"markdown","9a1fda97":"markdown","03d02909":"markdown","fe64d57a":"markdown","0cf60159":"markdown","a63f5841":"markdown","c1733aa7":"markdown","c1aab6dd":"markdown","64169254":"markdown","698181e4":"markdown","c2945ec3":"markdown","7cabe9c8":"markdown","ddc0b874":"markdown","2c92530e":"markdown","642252b0":"markdown","20fc2a36":"markdown","85e2ac52":"markdown","362eaaf7":"markdown","99593bf6":"markdown","ff3955ec":"markdown"},"source":{"d7c9fd10":"# Importing the necessary libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfrom plotly.offline import download_plotlyjs, iplot, init_notebook_mode\nimport plotly.graph_objs as go\nimport plotly.plotly as py\nimport cufflinks as cf\ninit_notebook_mode(connected=True)\ncf.go_offline()\n\n%matplotlib inline\nplt.style.use('ggplot')","0bcb4e03":"# Let's see the number of dataset and their name we have\ntry:\n    dataset = os.listdir('input')\n    for var in dataset:\n        print(var)\nexcept Exception as e :\n    dataset = os.listdir('..\/input')\n    for var in dataset:\n        print(var)","93771cb8":"# loading datasets\n\ntry:\n    df_kiva_loans = pd.read_csv('input\/kiva_loans.csv')\n    df_kiva_mpi = pd.read_csv('input\/kiva_mpi_region_locations.csv')\n    df_loan_region = pd.read_csv('input\/loan_themes_by_region.csv')\n    df_loan_ids = pd.read_csv('input\/loan_theme_ids.csv')\n\nexcept Exception as e:\n    df_kiva_loans = pd.read_csv('..\/input\/kiva_loans.csv')\n    df_kiva_mpi = pd.read_csv('..\/input\/kiva_mpi_region_locations.csv')\n    df_loan_region = pd.read_csv('..\/input\/loan_themes_by_region.csv')\n    df_loan_ids = pd.read_csv('..\/input\/loan_theme_ids.csv')","e0073555":"# let's see the kiva_loan dataset.\ndf_kiva_loans.head()","e1609595":"# let's see the kiva_mpi_region_location dataset.\ndf_kiva_mpi.head()","32cb9106":"# let's see the kiva_loan_theme_id dataset.\ndf_loan_ids.head()","a2096705":"# let's see the kiva_loan_theme_by_region dataset.\n\ndf_loan_region.head()","08800bef":"\ndf_kiva_loans.describe()","19d911c2":"df_kiva_loans.describe(include=[np.object])","37266290":"\nnull = df_kiva_loans.isnull().sum()\nnull_per = (null\/len(df_kiva_loans))*100\nnull_per = pd.DataFrame(data={'Columns':null.index,'Number of Null values':null.values, 'Percentage of null value':null_per.values})\nnull_per","70c72e05":"\ndf_kiva_loans['country'].value_counts()[:10].plot(kind='bar', figsize=(11,6))\nplt.title('Top 10 Countires that got maximum number of times Loan')\nplt.xlabel('Country')\nplt.ylabel('Number of Times')\nplt.show()","16cb9a37":"from wordcloud import WordCloud\n\nnames = df_kiva_loans['country'][pd.notnull(df_kiva_loans['country'])]\nwc = WordCloud(width=600, height=400, max_font_size=50).generate(' '.join(names))\nplt.figure(figsize=(16,8))\nplt.title('Wordcloud for Countries', fontsize=35)\nplt.imshow(wc)\nplt.axis('off')\nplt.show()","2b1da562":"# Using groupby function here.\ncountry = df_kiva_loans.groupby('country')['funded_amount'].sum().reset_index()\ncountry.sort_values('funded_amount',ascending=False, inplace=True)\ncountry = country[:10]\ncountry.set_index('country', drop=True, inplace=True,)\n\ncountry.plot(kind='bar', figsize=(12,6), title='Top 10 countries that got maximum amount of total Loan')\n\nplt.show()","7f15e82b":"# Using groupby function here.\n\nsector = df_kiva_loans.groupby('sector')['funded_amount'].sum().reset_index()\nsector.sort_values('funded_amount',ascending=False, inplace=True)\nsector = sector[:10]\nsector.set_index('sector', drop=True, inplace=True,)\n\n\nsector.plot(kind='bar',title='Top 10 Sectors that got maximum amount of total loan.', figsize=(12,6))\nplt.show()\nsector.plot(kind='pie',title='Top 10 Sectors that got maximum amount of total loan.',subplots=True, \n            figsize=(12,6), autopct='%.f%%') \nplt.show()","fe2ac8e3":"# Using groupby function here.\n\nactivity = df_kiva_loans.groupby('activity')['funded_amount'].sum().reset_index()\nactivity.sort_values('funded_amount',ascending=False, inplace=True)\nactivity = activity[:10]\n\n# iplot for interactive plots.\nactivity.iplot(kind='bar',x='activity', y='funded_amount',\n             title='Top 10 activity that got maximum amount of total loan.', xTitle='activity', yTitle='Amount' )\nplt.show()\nactivity.iplot(kind='pie',title='Top 10 activity that got maximum amount of total loan.',\n             labels='activity', values='funded_amount', pull=0.2, hole=0.2) \nplt.show()","0edec058":"df_kiva_loans['funded_amount'].plot(kind='hist', bins=50, figsize=(12,6))\nplt.xlabel('Funded Amount')\nplt.title('Funded Amount Distribution')\nplt.show()","15489f73":"temp_df = df_kiva_loans[df_kiva_loans['funded_amount']<10000]\ntemp_df['funded_amount'].plot(kind='hist', figsize=(12,6), bins=55)\nplt.xlabel('Funded Amount')\nplt.title('Loan Amount Distribution')\nplt.show()","6e44933c":"new_df = df_kiva_loans['repayment_interval'].value_counts().reset_index()\nnew_df.set_index('index', inplace=True, drop=True)\nnew_df.plot(kind='pie', subplots=True, title='Repayment Interval', autopct='%.f%%', figsize=(12,6))\nplt.show()","1ad87235":"lender = df_kiva_loans[df_kiva_loans['lender_count']<200]\nlender['lender_count'].plot(kind='box', figsize=(12,6), title='Lender count Distribution')\nplt.show()","84f29a5f":"gender = df_kiva_loans['borrower_genders'].value_counts()[:2].reset_index()\ngender.iplot(kind='pie', labels='index', values='borrower_genders', title='Gender Distribution of Borrower')\nplt.show()","8c8094b3":"months = df_kiva_loans['term_in_months'].value_counts()[:10].reset_index()\n \nmonths.columns = ['Terms in Months','Frequency']\nmonths.iplot(kind='bar', x='Terms in Months', y= 'Frequency', title='Terms of Months', \n             xTitle='Terms of Month', yTitle='Number of times')","54828095":"high_mpi = df_kiva_mpi.sort_values('MPI', ascending=False)[:10]\nhigh_mpi.iplot(kind='bar', x='LocationName', y='MPI', title='Top 10 Countries with highest MPI', \n              xTitle='Country', yTitle='MPI')","382a7a7b":"low_mpi = df_kiva_mpi.sort_values('MPI', )[:10]\nlow_mpi.iplot(kind='bar', x='LocationName', y='MPI', title='Top 10 Countries with Low MPI', \n              xTitle='Country', yTitle='MPI')","15b91e4f":"data = [{'lat': df_kiva_mpi['lat'] ,\n  'lon': df_kiva_mpi['lon'] ,       \n  'marker': {'color': df_kiva_mpi['MPI'] ,\n   'line': {'color': 'rgb(40,40,40)', 'width': 0.5},\n   'size': 5,\n   'sizemode': 'diameter',\n    'colorbar': dict(\n            title = 'MPI', \n            thickness = 10,           \n            outlinecolor = \"rgba(68, 68, 68, 0)\",            \n            ticklen = 3,                       \n            dtick = 0.1      )        },\n  'text': df_kiva_mpi['LocationName'].astype(str) + '  ->  ' + df_kiva_mpi['MPI'].astype(str) + '  MPI' ,\n  'type': 'scattergeo',\n  \n      }]\n\n\nlayout = go.Layout(\n    title = 'MPI',\n    showlegend = True,\n    geo = dict(\n            scope='world',\n            projection=dict( type = 'natural earth'),\n            showland = True,\n            landcolor = 'rgb(217, 217, 217)',\n            subunitwidth=1,\n            countrywidth=1,\n            subunitcolor=\"rgb(255, 255, 255)\",\n            countrycolor=\"rgb(255, 255, 255)\"\n        ),)\n\nfig =  go.Figure(layout=layout, data=data)\niplot( fig, validate=False)","4a495f8e":"df_kiva_loans['date'] = pd.to_datetime(df_kiva_loans['date'])\ntemp_df = df_kiva_loans[['date','funded_amount']]\ntemp_df.set_index('date', drop=True, inplace=True)\ntemp_df.plot(figsize=(15,6))\nplt.show()","4f25500e":"neighbour = ['India' ,'Pakistan', 'China', 'Nepal', 'Bangladesh', 'Bhutan', 'Myanmar (Burma)', 'Afghanistan', 'Sri Lanka', ]\ndf_india = df_kiva_loans[df_kiva_loans['country'].isin(neighbour)]\nprint(df_india['country'].unique())\nprint(\"The data of Sri Lanka and Bangladesh is not there in kiva's dataset.\")","96d51b8d":"plt.figure(figsize=(15,8))\nsns.boxplot(data=df_india, x='country', y='funded_amount')\nplt.xlabel('Country', fontsize=25)\nplt.show()","aa52ba92":"temp_df = df_india[df_india['country']=='India']\ntemp_df = temp_df['sector'].value_counts().reset_index()[:10]\ntemp_df.iplot(kind='pie', labels='index', values='sector', hole=0.2, pull=0.2, title='Top 10 Sectors')\nplt.show()","cd813abc":"activity = df_india[df_india['country']=='India']\nactivity = activity['activity'].value_counts().reset_index()[:10]\nactivity.iplot(kind='pie', labels='index', values='activity', hole=0.2, pull=0.2, title='Top1 10 Activity')\nplt.show()","d64a332d":"cities = df_india[df_india['country']=='India']\ncities = cities['region'].value_counts().reset_index()[:10]\ncities.iplot(kind='pie', labels='index', values='region', hole=0.2, pull=0.2, title='Top 10 City in India')\nplt.show()","bc5a4bbb":"top_cities = cities['index']\ntop_cities = top_cities.values\ntop_cities\nnew_df = df_loan_region[df_loan_region['region'].isin(top_cities)]\nnew_df['region'].unique()\nlon = new_df['lon'].unique()\nlon = np.append(lon,88.8215)\nlat = new_df['lat'].unique()\nlat = np.append(lat,26.5738)\nnames = new_df['region'].unique()\ndata = [{'lat': lat ,\n  'lon': lon , \n  'locationmode':'country names' ,      \n  'marker': {\n   'line': {'color': 'rgb(40,40,40)', 'width': 0.5},\n   'size': 5,\n   'sizemode': 'diameter',\n            },\n  'text': names ,\n  'type': 'scattergeo',\n  \n      }]\n\n\nlayout = go.Layout(\n    title = 'Top 10 City in India',\n    showlegend = True,\n    geo = dict(\n            scope='asia' ,\n            projection=dict( type = 'natural earth'),\n            showland = True,\n            landcolor = 'rgb(217, 217, 217)',\n            subunitwidth=1,\n            countrywidth=1,\n            subunitcolor=\"rgb(255, 255, 255)\",\n            countrycolor=\"rgb(255, 255, 255)\"\n        ),)\n\nfig =  go.Figure(layout=layout, data=data)\niplot( fig, validate=False)","a1876af8":"temp_df = df_india[df_india['country']=='India']\ntemp_df = temp_df[temp_df['borrower_genders'].isin(['female', 'male']) ]\ntemp_df = temp_df['borrower_genders'].value_counts().reset_index()\ntemp_df.iplot(kind='pie', labels='index', values='borrower_genders', \n              hole=0.2, pull=0.2, title='Gender Distribution of India')\nplt.show()","b73bba07":"count = df_india['country'].value_counts().reset_index()\ncount.iplot(kind='pie', labels='index', values='country', pull=0.2, hole=0.2,\n            title=\"Frequency of Loan to India and it's neighbour\")\nplt.show()","ed972e40":"rep_pay = df_india[df_india['country']=='India']\nrep_pay = rep_pay['repayment_interval'].value_counts().reset_index()\nrep_pay.iplot(kind='pie', labels='index', values='repayment_interval', pull=0.2, hole=0.2, \n             title='Repayment Interval of Loan of India')","54e3a9de":"region = df_india['region'].value_counts().reset_index()[:10]\nregion.iplot(kind='bar', x='index', y='region', title='Top 10 Region',\n             xTitle='Region', yTitle='Number of times they got Loan')\n","b63b77af":"india = df_india[df_india['country']=='India']\nregion = india['region'].unique()\ntemp_df = df_loan_region[df_loan_region['region'].isin(region)]\n\n# Getting latitude, longitude and names of regions\nlat = temp_df['lat'].unique()\nlon = temp_df['lon'].unique()\nnames = temp_df['region'].unique()\n\n# Ploting India's map\ndata = [{'lat': lat ,\n  'lon': lon , \n  'locationmode':'country names' ,      \n  'marker': {\n   'line': {'color': 'rgb(40,40,40)', 'width': 0.5},\n   'size': 5,\n   'sizemode': 'diameter',\n            },\n  'text': names ,\n  'type': 'scattergeo',\n  \n      }]\n\n\nlayout = go.Layout(\n    title = 'Regions of India',\n    showlegend = True,\n    geo = dict(\n            scope='asia' ,\n            projection=dict( type = 'natural earth'),\n            showland = True,\n            landcolor = 'rgb(217, 217, 217)',\n            subunitwidth=1,\n            countrywidth=1,\n            subunitcolor=\"rgb(255, 255, 255)\",\n            countrycolor=\"rgb(255, 255, 255)\"\n        ),)\n\nfig =  go.Figure(layout=layout, data=data)\niplot( fig, validate=False)","cc6b936b":"#### ====================================================================================================","1a9439a9":"### Q 14). Time Series Analysis of funded amount.","473b432b":"### Q4). Top 10 Sectors that got maximum amount of total loan.","374a2871":"* It's good to see agriculture sector and food sector on top 10, means they are getting good quantity of loan.\n* Farmers can opt this method also to get loan.","9691f0c2":"#### ===================================================================================================","445db017":"### Q2). Let's create wordcloud for the countries according to the number of times they got loan.","c6cf49ed":"* Maximum number of activities are related to farming and agriculture.\n","096acc76":"### Q10). For which durations(month) maximum number of loans are there.","612a4fc4":"#### Let's get the information about the missing values.","fe3889b4":"# TIME ANALYSIS","bc0d20ba":"#### Let's see the statistical information about numerical values","5320050a":"#### =====================================================================================================","964a8627":"* Maximum number of lenders are in the range of 0 to 200, so I am only checking the distribution of those only.\n* Others may be treated as outliers.","b6e06640":"* Participation of females much higher than males.\n* Female with 76% and male with 24%","69262799":"### Q16). Top 10 sectors , that got maximum amount of loan in India. ","0beea05e":"#### ==================================================================================================","bdafcca1":"* From this interactive graph one can say maximum number of times loans are in the range of 200 to 300 dollars.","e2d66a61":"#### ===================================================================================================","013d04ae":"# About Notebook:-\n#### In this notebook I'm analysising Kiva Dataset. Kiva.org is an online crowdfunding platform to extend financial services to  poor and financially excluded people around the world. Kiva lenders have provided over 1 billion dollars in loans to over 2 million people. In order to set investment priorities, help inform lenders, and understand their target communities, knowing the level of poverty of each borrower is critical. However, this requires inference based on a limited set of information for each borrower.\n#### There are some questions, which I'm analysising, are given below:-\n\n* Q1). Top 10 Countires that got maximum number of times Loan.\n* Q2). Let's create wordcloud for the countries according to the number of times they got loan.\n* Q3). Top 10 Countries that got maximum amount of total loan.\n* Q4). Top 10 Sectors that got maximum amount of total loan.\n* Q5). Top 10 Activity that got maximum amount of total loan.\n* Q6). Loan Amount Distribution.\n* Q7). Let's get insight about the Repayment interval of loans.\n* Q8). Let's get information about the lender count.\n* Q9). Gender Distribution of Borrower.\n* Q10). For which durations(month) maximum number of loans are there.\n* Q11). Top 10 Countries with highest MPI (Multidimentional Poverty Index).\n* Q12). Top 10 Countries with low MPI (Multidimentional Poverty Index).\n* Q13). MPI on World Map.\n* Q14). Time Series Analysis of funded amount.\n* Q15). India's Loan distribution with neighbour countries.\n* Q16). Top 10 sectors , that got maximum amount of loan in India.\n* Q17). Top 10 Activities , that got maximum amount of loan in India.\n* Q18). Top 10 Cities , that got maximum amount of loan in India.\n* Q19). Gender Distribution for borrower in India.\n* Q20). Number of Times Loans were given to India and it's neighbour.\n* Q21). Repayment Interval of Loans to India.\n* Q22). Top 10 Cities that got maximum number of times loan from India and it's neighbour.\n* Q23). Regions of India that got loans, Ploting on map.","2ad2f082":"#### The conclusions from graph:-\n* Pakistan got maximum number of times loan followed by India.\n* China got very less number of times loan.\n* People from Pakistan and India are giving more participation in their economy.","7abaa9d6":"#### ==================================================================================================","0935cb02":"#### =====================================================================================================","0f159ec3":"#### ====================================================================================================","49aeca51":"* As one can see Philippines got maximum number of times loan followed by Kenya and then by El Salvador.\n* India's neighbourer Pakisthan is also in the list at 5th position.\n","3a445edc":"### Q23). Regions of India that got loans, Ploting on map.","6a6824e3":"### Q13). MPI on World Map.","d6690293":"#### ====================================================================================================","3ebbf093":"* 51% are related to monthlt interval followed by 38% from irregular.","af9c83d0":"### Q17). Top 10 Activities , that got maximum amount of loan in India. ","37a6833b":"#### =====================================================================================================","bfdc0f4e":"#### Let's plot them on India's map","b9dc1103":"### Q 22). Top 10 Cities that got maximum number of times loan from India and it's neighbour.","55e2eeb9":"#### The conclusions from the graph:- \n* As one can see there are some outliers in the distribution of funded amount.\n* First we will remove this outliers.\n* We will take funded amount in the range of 0 to 10000 dollar to see the distribution of funded amount.","de6afbb8":"#### ====================================================================================================","cab82c1a":"#### =====================================================================================================","dd407aac":"#### ====================================================================================================","2ddb6d16":"# -> If you this kernel is useful, then Please UPVOTE\n<img src='https:\/\/drive.google.com\/uc?id=1TEz_J-UVI5oqOtSk7ykwX5TBHE3R043T' width=600>","9471c74b":"### Q18). Top 10 Cities , that got maximum amount of loan in India. ","cdc14a1c":"#### ====================================================================================================","1ec73d41":"#### ===================================================================================================","11324c0b":"#### Creating new DataFrame which only contains data of India and it's neighbour.","ba86d8b6":"<img src='https:\/\/drive.google.com\/uc?id=1x9xLpLMbMDwInwoaeiE977Jd3VJXZ65K' width=1000 >","3392cc51":"#### =====================================================================================================","433e6490":"#### The conclusions from graph:-\n* 97% are female from India.\n* Female participation is high in India.\n* Beti Bachao Beti Padhao.","21a9cad6":"# KIVA DATA ANALYSIS + INDIA'S STORY WITH NEIGHBOURS","c1c55c56":"#### ===================================================================================================","e3b06dd5":"### Q 21). Repayment Interval of Loans of  India.","79657513":"### Q 20). Number of Times Loans were given to India and it's neighbour.","2347b183":"<img src='https:\/\/drive.google.com\/uc?id=114MGjz5H6M5ABY2zIq4LxWQVX2aXvVbN' width=500>","5ed5c6b7":"### Q1). Top 10 Countires that got maximum number of times Loan.","3e7925f8":"#### Let's see the statistical information about categorical values","63b25311":"### Q9). Gender Distribution of Borrower.","0a9ab1c6":"#### ==================================================================================================","11d8c082":"#### =====================================================================================================","2f9bbabd":"#### ====================================================================================================","1b1b06e2":"#### ===================================================================================================\n#### ===================================================================================================\n#### ===================================================================================================\n#### ===================================================================================================","9a1fda97":"### Q6). Loan Amount Distribution.","03d02909":"### Q15). India's Loan distribution with neighbour countries.","fe64d57a":"### Q 19). Gender Distribution for borrower in India.","0cf60159":"* High MPI means high Poverty.\n* 6 regions from Chad are in high MPI means they are highly poor regions.\n","a63f5841":"#### =====================================================================================================","c1733aa7":"* Maximum Number of times terms of loan is 14 or 8 in months.\n* Approximately for 1 year.","c1aab6dd":"# LOAN ANALYSIS","64169254":"### Q11). Top 10 Countries with highest MPI (Multidimentional Poverty Index).","698181e4":"### 7). Let's get insight about the Repayment interval of loans.","c2945ec3":"### Q12). Top 10 Countries with low MPI (Multidimentional Poverty Index).","7cabe9c8":"# INDIA AND IT'S NEIGHBOURS ANALYSIS","ddc0b874":"#### ==================================================================================================","2c92530e":"### Q3). Top 10 Countries that got maximum amount of total loan.\n","642252b0":"### Q5). Top 10 Activity that got maximum amount of total loan.","20fc2a36":"# MPI ANALYSIS","85e2ac52":"### Q8). Let's get information about the lender count.\n#### lender count = number of lender giving loan to a borrower.","362eaaf7":"#### ====================================================================================================","99593bf6":"<img src='https:\/\/drive.google.com\/uc?id=1MKwL5jSoIEkCe1wS-hUCtgBmv97OckY7' width=700>","ff3955ec":"* As one can see 25% null values, which is maximum, is in tags column.\n* Other columns have less than 10% null values.\n* No need to remove null values."}}