{"cell_type":{"56964169":"code","4bb50ed8":"code","20fa916b":"code","ca89281f":"code","f7af4d08":"code","5887d77c":"code","0f368f8a":"code","b126df6e":"code","f17ffe94":"code","f2cae49d":"code","58ef92cb":"code","7ddf9d40":"code","781232e4":"code","3027ffe3":"code","6bdb1497":"code","ef2505b3":"code","4da572ac":"code","69c80b53":"code","f977104c":"code","a1b1aea8":"markdown","023b593f":"markdown","1837570e":"markdown","022365e4":"markdown","432dc315":"markdown","1b3953d7":"markdown","3299fd40":"markdown","cc02de97":"markdown","74d43f83":"markdown","43e2865b":"markdown","0bab9651":"markdown","57781996":"markdown","9479cf28":"markdown","dc0c45d4":"markdown","c028c69b":"markdown","a08aee52":"markdown"},"source":{"56964169":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns # seaborn package\nimport matplotlib.pyplot as plt # matplotlib library\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4bb50ed8":"os.chdir('..\/input')\ndf = pd.read_csv('2004-2019.tsv', sep='\\t',parse_dates=[1,2])","20fa916b":"df.shape","ca89281f":"df2 = df.drop(\"Unnamed: 0\", axis=1)","f7af4d08":"df2.rename(\n    columns={\n        \"DATA INICIAL\": \"start_date\",\n        \"DATA FINAL\": \"end_date\",\n        \"REGI\u00c3O\": \"region\",\n        \"ESTADO\": \"state\",\n        \"PRODUTO\": \"product\",\n        \"N\u00daMERO DE POSTOS PESQUISADOS\": \"no_gas_stations\",\n        \"UNIDADE DE MEDIDA\": \"unit\",\n        \"PRE\u00c7O M\u00c9DIO REVENDA\": \"avg_price\",\n        \"DESVIO PADR\u00c3O REVENDA\": \"sd_price\",\n        \"PRE\u00c7O M\u00cdNIMO REVENDA\": \"min_price\",\n        \"PRE\u00c7O M\u00c1XIMO REVENDA\": \"max_price\",\n        \"MARGEM M\u00c9DIA REVENDA\": \"avg_price_margin\",\n        \"ANO\": \"year\",\n        \"M\u00caS\": \"month\",\n        \"COEF DE VARIA\u00c7\u00c3O DISTRIBUI\u00c7\u00c3O\": \"coef_dist\",\n        \"PRE\u00c7O M\u00c1XIMO DISTRIBUI\u00c7\u00c3O\": \"dist_max_price\",\n        \"PRE\u00c7O M\u00cdNIMO DISTRIBUI\u00c7\u00c3O\": \"dist_min_price\",\n        \"DESVIO PADR\u00c3O DISTRIBUI\u00c7\u00c3O\": \"dist_sd_price\",\n        \"PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O\": \"dist_avg_price\",\n        \"COEF DE VARIA\u00c7\u00c3O REVENDA\": \"coef_price\"\n    },\n    inplace=True\n)\ndf2.dtypes","5887d77c":"for col in ['avg_price_margin', 'dist_avg_price', 'dist_sd_price', 'dist_min_price', 'dist_max_price', 'coef_dist']:\n    df2[col] = pd.to_numeric(df2[col], errors='coerce')\ndf2.dtypes","0f368f8a":"df2.query('year!=2019 & product in [\"GLV\",\"GNV\"]').groupby(['year', 'region'])['avg_price'].agg('sum')","b126df6e":"# plot Regionwise Yearwise Average Price data\nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019 & product in [\"GLV\",\"GNV\"]').groupby(['year','region']).sum()['avg_price'].unstack().plot(ax=ax)\nplt.grid(True)","f17ffe94":"# plot Regionwise Yearwise Average Price Changes (% wise) data \nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019 & product in [\"GLV\",\"GNV\"]').groupby(['year','region']).sum()['avg_price'].pct_change().unstack().plot(ax=ax)\nplt.grid(True)","f2cae49d":"df2.query('year!=2019 & region in [\"NORDESTE\"]').groupby(['year', 'state'])['avg_price'].agg('sum')","58ef92cb":"# plot Regionwise Yearwise Average Price data\nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019 & region in [\"NORDESTE\"]').groupby(['year', 'state'])['avg_price'].agg('sum').unstack().plot(ax=ax)\nplt.grid(True)","7ddf9d40":"# plot Regionwise Yearwise Average Price Changes (% wise) data \nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019 & region in [\"NORDESTE\"]').groupby(['year', 'state'])['avg_price'].agg('sum').pct_change().unstack().plot(ax=ax)\nplt.grid(True)","781232e4":"df2.query('year!=2019 & region in [\"CENTRO OESTE\"]').groupby(['year', 'state'])['avg_price'].agg('sum')","3027ffe3":"# plot Regionwise Yearwise Average Price data\nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019 & region in [\"CENTRO OESTE\"]').groupby(['year', 'state'])['avg_price'].agg('sum').unstack().plot(ax=ax)\nplt.grid(True)","6bdb1497":"# plot Regionwise Yearwise Average Price Changes (% wise) data \nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019 & region in [\"CENTRO OESTE\"]').groupby(['year', 'state'])['avg_price'].agg('sum').pct_change().unstack().plot(ax=ax)\nplt.grid(True)","ef2505b3":"# plot Regionwise Yearwise Average Price Changes (% wise) data \nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019').groupby(['year','region']).sum()['avg_price'].pct_change().unstack().plot(ax=ax)\nplt.grid(True)","4da572ac":"df2.query('year!=2019').groupby(['year', 'state', 'product'])['avg_price'].agg('sum')","69c80b53":"# plot Statewise Yearwise Most Expensive Product (GLP) Price data \nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019').groupby(['state','product'])['max_price'].agg('sum').unstack().plot(kind='bar',ax=ax)\nplt.grid(True)","f977104c":"# plot Statewise Yearwise Most Expensive Product (GLP) Price data \nfig, ax = plt.subplots(figsize=(15,7))\ndf2.query('year!=2019').groupby(['state','product'])['min_price'].agg('sum').unstack().plot(kind='bar',ax=ax)\nplt.grid(True)","a1b1aea8":"# Problem Statement:\n1. How *different regions* of Brazil saw their *gas prices change*?\n1. Within a *region*, which *states increased more* their *prices*?\n1. Which *states* are the *cheapest* (or *most expensive*) for *different types of fuels*?","023b593f":"# Step 06: Data Mapping & Visualization (Problem 03)\n\nNow let's solve the problem by running necessary queries and plot the columns to see the desired insights","1837570e":"# Happy Ending!","022365e4":"# Step 01: Data Load\n\nLet's load the data from raw file with preprocessing of date field","432dc315":"# Step 03: Data Cleaning (Phase 01)\n\nLet's remove the unnecessary serial column of *Unnamed: 0*","1b3953d7":"# Solution 02 (Part 01)\nIn **NORDESTE** region **CEARA** state increased price mostly ~15% followed by **SERGIPE** with ~10%","3299fd40":"# Solution 02 (Part 02)\nIn **CENTRO OESTE** region **MATO GROSSO** state increased price mostly ~30% followed by **DISTRITO FEDERAL** with ~2%","cc02de97":"# Step 00: Loading Libraries\n\nHere we will load all necessary python libraries to solve the problem","74d43f83":"# Step 04: Data Mapping & Visualization (Problem 01)\n\nNow let's solve the problem by running necessary queries and plot the columns to see the desired insights","43e2865b":"# Step 03: Data Cleaning (Phase 03)\n\nNow there are some mismatched values (~3%) on some columns and let's convert the *dtype* of those columns where necessary to work properly","0bab9651":"# Step 02: Data Verification\n\nLet's check the shape of the DataFrame","57781996":"# Step 03: Data Cleaning (Phase 02)\n\nLet's rename all columns with English meaning for better understanding","9479cf28":"# Step 05: Data Mapping & Visualization (Problem 02)\n\nNow let's solve the problem by running necessary queries and plot the columns to see the desired insights","dc0c45d4":"**As these two regions showed most of the price hike so we won't explore further to other regions. **","c028c69b":"# Solution 03\n* For **GLP** state **MATO GROSSO** is most expensive and **BAHIA** is the cheapest. \n* For **GNV** state **RIO GRANDE DO SUL** is most expensive and **DISTRITO FEDERAL** is the cheapest.    \n* For **GASOLINA COMUM** state **ACRE** is most expensive and **SAO PAULO** is the cheapest. \n* For **ETANOL HIDRATADO** state **PARA** is most expensive and **SAO PAULO** is the cheapest.   \n* For **\u00d3LEO DIESEL** state **ACRE** is most expensive and **SAO PAULO** is the cheapest. \n* For **\u00d3LEO DIESEL S10** state **ACRE** is most expensive and **SAO PAULO** is the cheapest.    ","a08aee52":"# Solution 01\n**NORDESTE** and **SUDESTE** regions are facing the massive increase on gas price ~500%"}}