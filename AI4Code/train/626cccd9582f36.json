{"cell_type":{"4f9ba0dc":"code","7a01c0f5":"code","2e19424f":"code","4657bcfc":"code","9b2bb18a":"code","61da4ea5":"code","895ab380":"code","99be1714":"code","db212cf7":"code","b66e63e1":"code","88047c8b":"code","28e2df4e":"code","8700f4d8":"code","05318a02":"code","da87f108":"code","2013a26b":"code","33ea2ab9":"code","ec1467a3":"code","eed553f7":"code","be2b9d1e":"code","dc9536d3":"code","32ea3fe9":"code","f217d2b5":"code","f3bf236e":"code","d6ec549e":"code","1325a463":"code","dca74713":"code","f1d5c15c":"code","01a459f7":"code","fe13b25d":"code","d62fb97c":"code","53ec2f50":"code","daac3899":"code","751dfc06":"code","5ad2d2a1":"code","93a4bd1d":"code","8dcafb11":"code","fcb82b0a":"code","277a5460":"code","fa81d598":"code","25a1f04c":"markdown","4648f3db":"markdown","5935943d":"markdown","374b4a10":"markdown","49cfd176":"markdown","c0d11f6a":"markdown","1d68b8b9":"markdown","e3d7660d":"markdown","1b111537":"markdown","39c5dc56":"markdown","7e66cf96":"markdown"},"source":{"4f9ba0dc":"import pandas as pd \nimport numpy as np\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n%matplotlib inline","7a01c0f5":"data=pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/Country-data.csv')\n","2e19424f":"data.shape","4657bcfc":"data.head()","9b2bb18a":"for feature in data.columns :\n    if feature!='country' :\n        sns.histplot(data[feature],bins=20)\n        plt.show()","61da4ea5":"for feature in data.columns :\n    if feature!='country' :\n        sns.boxplot(data[feature])\n        plt.show()","895ab380":"sns.scatterplot(x='income',y='imports',data=data)","99be1714":" sns.scatterplot(x='income',y='gdpp',data=data)","db212cf7":"sns.scatterplot(x='income',y='exports',data=data)","b66e63e1":"plt.figure(figsize=(8,8))\nsns.heatmap(data.corr(),annot=True)","88047c8b":"df=data['country']","28e2df4e":"from sklearn import preprocessing\nencoder = preprocessing.LabelEncoder()\ndata['country']=encoder.fit_transform(data['country'])\ndata_h=data.copy()","8700f4d8":"# removing higly correlated columns \ndata.drop('gdpp',axis=1,inplace=True)\ndata.drop('child_mort',axis=1,inplace=True)\ndata.head()","05318a02":"#### Lets compute the Interquantile range to calculate the boundaries\nIQR=data.income.quantile(0.75)-data.income.quantile(0.25)\nlower_bridge=data['income'].quantile(0.25)-(IQR*1.5)\nupper_bridge=data['income'].quantile(0.75)+(IQR*1.5)\nprint(lower_bridge), print(upper_bridge)","da87f108":"data.loc[data['income']>=51967,'income']=51967\nsns.boxplot(data['income'])","2013a26b":"scaler = preprocessing.StandardScaler()","33ea2ab9":"scaled_data= pd.DataFrame(scaler.fit_transform(data), columns=data.columns)\nscaled_data","ec1467a3":"from sklearn.cluster import KMeans\nSum_of_squared_distances = []\nfor k in range(1,20):\n    km = KMeans(n_clusters=k)\n    km = km.fit(scaled_data)\n    Sum_of_squared_distances.append(km.inertia_)","eed553f7":"plt.figure(figsize=(7, 5))\nplt.plot(range(1,20), Sum_of_squared_distances, 'b--')\nplt.xlabel('K values')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()\n","be2b9d1e":"from yellowbrick.cluster import SilhouetteVisualizer\nfor i in [2,3,4,5,6,7]:\n    km = KMeans(n_clusters=i, init='k-means++', n_init=10, max_iter=100, random_state=42)\n    visualizer = SilhouetteVisualizer(km, colors='yellowbrick')\n    print(\"Silhouette score for k= \"+str(i))\n    visualizer.fit(scaled_data) \n    visualizer.show()\n","dc9536d3":"from sklearn.metrics  import silhouette_score\nfor i in [2,3,4,5,6,7] :\n    cluster = KMeans(n_clusters=i,random_state=42)\n    cluster_labels = cluster.fit_predict(scaled_data)\n    score = silhouette_score(scaled_data, cluster_labels)\n    print(\"Score for k= {} is {}\".format(i,score))","32ea3fe9":"cluster = KMeans(n_clusters=2)\ncluster_labels = cluster.fit_predict(scaled_data)","f217d2b5":"cluster.cluster_centers_","f3bf236e":"scaled_data['clusters']=cluster_labels\nscaled_data.head()","d6ec549e":"from sklearn.decomposition import PCA\npca=PCA(n_components=2)","1325a463":"reduced_data=pd.DataFrame(pca.fit_transform(scaled_data),columns=['PCA1','PCA2'])","dca74713":"reduced_data['cluster']=cluster_labels ","f1d5c15c":"reduced_data.shape","01a459f7":"plt.figure(figsize=(7,7))\n\nplt.scatter(reduced_data[reduced_data['cluster'] == 0].loc[:, 'PCA1'], reduced_data[reduced_data['cluster'] == 0].loc[:, 'PCA2'], color='red')\nplt.scatter(reduced_data[reduced_data['cluster'] == 1].loc[:, 'PCA1'], reduced_data[reduced_data['cluster'] == 1].loc[:, 'PCA2'], color='blue')\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\n\nplt.show()","fe13b25d":"for feature in scaled_data :\n    if feature!='country' and feature!='clusters':\n        sns.barplot(x='clusters',y=feature,data=scaled_data)\n        plt.show()","d62fb97c":"data_ff={'country':np.array(df),'cluster':np.array(scaled_data['clusters'])}\ncountry=pd.DataFrame(data=data_ff)","53ec2f50":"country","daac3899":"countries=country[country['cluster']==0]","751dfc06":"countries","5ad2d2a1":"data_red=reduced_data.copy()\ndata_red.drop('cluster',axis=1,inplace=True)","93a4bd1d":"import scipy.cluster.hierarchy as shc  \ndendro = shc.dendrogram(shc.linkage(data_red, method=\"ward\"))  \nplt.title(\"Dendrogrma Plot\")  \nplt.ylabel(\"Euclidean Distances\")  \nplt.xlabel(\"Countries\")  \nplt.show()  ","8dcafb11":"from sklearn.cluster import AgglomerativeClustering  \nhc=AgglomerativeClustering(n_clusters=2, affinity='euclidean', linkage='ward')  ","fcb82b0a":" hc.fit_predict(data_red)  ","277a5460":"data_red['cluster']=hc.labels_\ndata_red.head()","fa81d598":"plt.figure(figsize=(7,7))\n\nplt.scatter(data_red[data_red['cluster'] == 0].loc[:, 'PCA1'], data_red[data_red['cluster'] == 0].loc[:, 'PCA2'], color='yellow')\nplt.scatter(data_red[data_red['cluster'] == 1].loc[:, 'PCA1'], data_red[data_red['cluster'] == 1].loc[:, 'PCA2'], color='pink')\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\n\nplt.show()","25a1f04c":"***Explotary Data Analysis***","4648f3db":"***From both the clusters w ecan suggest country names to be laid more focus on for providing aid.***","5935943d":"**Hierarchical Clustering**","374b4a10":"***Data Preprocessing***","49cfd176":"**K Means Clustering**\n\n Depict  k value from elbow method  ","c0d11f6a":"**According to elbow method and silhouette visualization k=2 is considered optimal value with good silhouette score**","1d68b8b9":"**Observations**\n\n1. Data has outliers.\n\n2. Data is right skewed and need to  be scaled .\n\n3. There  is very high realtion between some columns need to be removed.\n\n4. The increase in income showed increase in gdpp.","e3d7660d":"**Visualizing**\n\nAs we have 10 features we cannot plot them on graph to see clusters so we need to do Principal component Analysis to convert 10 features to 2 features to be plotted on 2-D graph","1b111537":"**Observations**\n\n1. The countries in cluster 0 is having high child_mort.\n\n2. The countries in cluster 0 is having low  gdpp and low income.\n\n","39c5dc56":"Based on dendogram i choosed 2 cluster","7e66cf96":"****Standarad Scaler does not perform well with outliers so outliers handled****"}}