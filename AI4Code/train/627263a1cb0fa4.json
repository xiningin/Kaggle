{"cell_type":{"459bf3c6":"code","43bb7e3a":"code","dc8a5a44":"code","30c22213":"code","4f3656dc":"code","1abc110f":"code","dd42d8c1":"code","58ebea78":"code","a8731e3a":"code","b3316079":"code","163965e5":"code","64baf236":"code","3ebaf862":"code","0234df3b":"code","0e8cca8e":"code","1b9175ab":"code","32f571bb":"code","b27bac9e":"code","a7643ccd":"code","c1a64f4a":"code","73548483":"code","11916726":"code","1fe898d5":"markdown","4a8ee626":"markdown","347f6993":"markdown","6639f0fe":"markdown","56ceb294":"markdown","fac8527f":"markdown","3b63c00f":"markdown","1642ef52":"markdown","08f35ade":"markdown"},"source":{"459bf3c6":"# Imports\nimport matplotlib.pyplot as plt \nimport matplotlib\nimport plotly\nimport plotly.offline as py\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.graph_objs as go\nfrom plotly.tools import make_subplots\nimport plotly.figure_factory as ff\ninit_notebook_mode()\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport pandas as pd\nimport numpy as np\n\nimport pendulum\nimport datetime","43bb7e3a":"# Read data\nresults = pd.read_csv('..\/input\/marathon_results.csv')\nresults[:5]","dc8a5a44":"# Add new column with finish time in seconds\nresults['Finish_time[m]'] = 0\nstart = pendulum.datetime(2018, 10, 14, 9, 0, 0)\n\ndef finish_time_in_min(df):\n    for i in range(0, len(df)):\n        end = pendulum.parse(df.iloc[i,15])\n        delta = end - start\n        df.iloc[i,18] = delta.total_minutes()\n    return df\n\nresults = finish_time_in_min(results)","30c22213":"#Check categories\nprint(results.Cat.unique())","4f3656dc":"# Histogram\nx1 = results['Finish_time[m]'][results['Sex'] == 'K']\nx0 = results['Finish_time[m]'][results['Sex'] != 'K']\n\ntrace1 = go.Histogram(\n    x=x0,\n    name='M',\n    xbins=dict(\n        start=130,\n        end=420,\n        size= 'M33'),\n    autobinx = False,\n    opacity=0.6,\n    marker=dict(\n        color='#90BCC6'\n    ),\n)\ntrace2 = go.Histogram(\n    x=x1,\n    name='F',\n    xbins=dict(\n        start=130,\n        end=420,\n        size= 'M33'),\n    autobinx = False,\n    opacity=0.6,\n    marker=dict(\n        color='#9a90c6'\n    )\n)\n\nlayout=go.Layout(\n    title='Finish line time vs. # of runners.',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    barmode='overlay',\n    yaxis=dict(\n        title='No. of runners',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        gridcolor='rgb(255, 255, 255)',\n        gridwidth=1,\n        zerolinecolor='rgb(255, 255, 255)',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)'\n    ),\n    xaxis=dict(\n        title='Finish time [minutes]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        tickmode='array',\n        tickvals=[150, 180, 210, 240, 270, 300, 330, 360, 390],\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)',\n    ),\n    legend=dict(\n        orientation='h',\n        font=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        x=0.8,\n        y=0.94,\n    ),\n    shapes=[\n        dict(\n            layer='below',\n            type='line',\n            x0=180,\n            y0=70,\n            x1=180,\n            y1=0,\n            line=dict(\n                color='#335b66',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0=210,\n            y0=70,\n            x1=210,\n            y1=0,\n            line=dict(\n                color='#335b66',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0=240,\n            y0=70,\n            x1=240,\n            y1=0,\n            line=dict(\n                color='#335b66',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0=255,\n            y0=70,\n            x1=255,\n            y1=0,\n            line=dict(\n                color='#335b66',\n                width=1,\n            ),\n        ),\n    ],\n    annotations=[\n        dict(\n            x=173,\n            y=68,\n            xref='x',\n            yref='y',\n            text='3:00h',\n            showarrow=False,\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            x=203,\n            y=68,\n            xref='x',\n            yref='y',\n            text='3:30h',\n            showarrow=False,\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            x=233,\n            y=68,\n            xref='x',\n            yref='y',\n            text='4:00h',\n            showarrow=False,\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            x=262,\n            y=68,\n            xref='x',\n            yref='y',\n            text='4:15h',\n            showarrow=False,\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        \n    ],\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\n\ndata = [trace1, trace2]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","1abc110f":"# Find median for men & women\nf_median = results['Finish_time[m]'][results['Sex'] == 'K'].median()\nm_median = results['Finish_time[m]'][results['Sex'] != 'K'].median()\nprint(f'Median finish time for women is {round(f_median, 2)} minutes and for men is {round(m_median, 2)} minutes.')","dd42d8c1":"# Stacked histogram - women\nfemale18 = results['Finish_time[m]'][results['Cat'] == 'K18']\nfemale30 = results['Finish_time[m]'][results['Cat'] == 'K30']\nfemale40 = results['Finish_time[m]'][results['Cat'] == 'K40']\nfemale45 = results['Finish_time[m]'][results['Cat'] == 'K45']\nfemale50 = results['Finish_time[m]'][results['Cat'] == 'K50']\nfemale55 = results['Finish_time[m]'][results['Cat'] == 'K55']\nfemale60 = results['Finish_time[m]'][results['Cat'] == 'K60']\nfemale65 = results['Finish_time[m]'][results['Cat'] == 'K65']\nfemale70 = results['Finish_time[m]'][results['Cat'] == 'K70']\n\n\ntrace1 = go.Histogram(\n    x=female18,\n    name='F18',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#1e1c27'\n    ),\n)\ntrace2 = go.Histogram(\n    x=female30,\n    name='F30',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#3d394f'\n    ),\n)\ntrace3 = go.Histogram(\n    x=female40,\n    name='F40',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#5c5676'\n    ),\n)\ntrace4 = go.Histogram(\n    x=female45,\n    name='F45',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#7b739e'\n    ),\n)\ntrace5 = go.Histogram(\n    x=female50,\n    name='F50',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size= 'M33'\n    ),\n    autobinx = False,\n    marker=dict(\n        color='#9a90c6'\n    ),\n)\ntrace6 = go.Histogram(\n    x=female55,\n    name='F55',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx = False,\n    marker=dict(\n        color='#aea6d1'\n    ),\n)\ntrace7 = go.Histogram(\n    x=female60,\n    name='F60',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#c2bcdc'\n    ),\n)\ntrace8 = go.Histogram(\n    x=female65,\n    name='F65',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#d6d2e8'\n    ),\n)\ntrace0 = go.Histogram(\n    x=female70,\n    name='F70',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#eae8f3'\n    ),\n)\n\ndata = [trace1, trace2, trace3, trace4,\n        trace5, trace6, trace7, trace8,\n        trace0]\n\nlayout = go.Layout(\n    title='Finish line time vs. # of women runners.',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    barmode='stack',\n    yaxis=dict(\n        title='No. of runners',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        gridcolor='rgb(255, 255, 255)',\n        gridwidth=1,\n        zerolinecolor='rgb(255, 255, 255)',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)'\n    ),\n    xaxis=dict(\n        title='Finish time [minutes]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        tickmode='array',\n        tickvals=[150, 180, 210, 240, 270, 300, 330, 360, 390],\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)',\n    ),\n    legend=dict(\n        orientation='v',\n        font=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        x=0.92,\n        y=1,\n    ),\n    shapes=[\n        dict(\n            layer='below',\n            type='line',\n            x0=eval(str(round(f_median, 2))),\n            y0=20,\n            x1=eval(str(round(f_median, 2))),\n            y1=0,\n            line=dict(\n                color='#335b66',\n                width=1,\n            ),\n        ),\n    ],\n    annotations=[\n        dict(\n            visible=True,\n            x=266,\n            y=19,\n            xref='x',\n            yref='y',\n            text='median',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n    ],\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","58ebea78":"# Stacked men\nmale18 = results['Finish_time[m]'][results['Cat'] == 'M18']\nmale30 = results['Finish_time[m]'][results['Cat'] == 'M30']\nmale40 = results['Finish_time[m]'][results['Cat'] == 'M40']\nmale45 = results['Finish_time[m]'][results['Cat'] == 'M45']\nmale50 = results['Finish_time[m]'][results['Cat'] == 'M50']\nmale55 = results['Finish_time[m]'][results['Cat'] == 'M55']\nmale60 = results['Finish_time[m]'][results['Cat'] == 'M60']\nmale65 = results['Finish_time[m]'][results['Cat'] == 'M65']\nmale70 = results['Finish_time[m]'][results['Cat'] == 'M70']\nmale75 = results['Finish_time[m]'][results['Cat'] == 'M75']\n\n\ntrace0 = go.Histogram(\n    x=male18,\n    name='M18',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#1c2527'\n    ),\n)\ntrace1 = go.Histogram(\n    x=male30,\n    name='M30',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#394b4f'\n    ),\n)\ntrace2 = go.Histogram(\n    x=male40,\n    name='M40',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#567076'\n    ),\n)\ntrace3 = go.Histogram(\n    x=male45,\n    name='M45',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#73969e'\n    ),\n)\ntrace4 = go.Histogram(\n    x=male50,\n    name='M50',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size= 'M33'\n    ),\n    autobinx = False,\n    marker=dict(\n        color='#90bcc6'\n    ),\n)\ntrace5 = go.Histogram(\n    x=male55,\n    name='M55',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx = False,\n    marker=dict(\n        color='#9bc2cb'\n    ),\n)\ntrace6 = go.Histogram(\n    x=male60,\n    name='M60',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#b1d0d7'\n    ),\n)\ntrace7 = go.Histogram(\n    x=male65,\n    name='M65',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#c7dde2'\n    ),\n)\ntrace8 = go.Histogram(\n    x=male70,\n    name='M70',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#ddeaed'\n    ),\n)\ntrace9 = go.Histogram(\n    x=male75,\n    name='M75',\n    opacity=0.6,\n    xbins=dict(\n        start=130,\n        end=420,\n        size='M33'\n    ),\n    autobinx=False,\n    marker=dict(\n        color='#e8f1f3'\n    ),\n)\n\ndata = [trace0, trace1, trace2, trace3, trace4,\n        trace5, trace6, trace7, trace8, trace9]\n\nlayout = go.Layout(\n    title='Finish line time vs. # of men runners.',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    barmode='stack',\n    yaxis=dict(\n        title='No. of runners',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        gridcolor='rgb(255, 255, 255)',\n        gridwidth=1,\n        zerolinecolor='rgb(255, 255, 255)',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)'\n    ),\n    xaxis=dict(\n        title='Finish time [minutes]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        tickmode='array',\n        tickvals=[150, 180, 210, 240, 270, 300, 330, 360, 390],\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)',\n    ),\n    legend=dict(\n        orientation='v',\n        font=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        x=0.92,\n        y=1,\n    ),\n    shapes=[\n        dict(\n            layer='below',\n            type='line',\n            x0=eval(str(round(m_median, 2))),\n            y0=70,\n            x1=eval(str(round(m_median, 2))),\n            y1=0,\n            line=dict(\n                color='#335b66',\n                width=1,\n            ),\n        ),\n    ],\n    annotations=[\n        dict(\n            visible=True,\n            x=254,\n            y=66,\n            xref='x',\n            yref='y',\n            text='median',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n    ],\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","a8731e3a":"#Normalized histogram\ntrace0 = go.Histogram(\n    x=x0,\n    name='M',\n    xbins=dict(\n        start=130,\n        end=420,\n        size= 'M33'),\n    autobinx = False,\n    opacity=0.5,\n    marker=dict(\n        color='#90BCC6'\n    ),\n    histnorm='percent',\n    orientation='v',\n)\ntrace1 = go.Histogram(\n    x=x1,\n    name='F',\n    xbins=dict(\n        start=130,\n        end=420,\n        size= 'M33'),\n    autobinx = False,\n    opacity=0.5,\n    marker=dict(\n        color='#9a90c6'\n    ), \n    histnorm='percent',\n    orientation='v',\n)\n\nlayout=go.Layout(\n    title='Finish line time vs. % # of runners.',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    barmode='overlay',\n    yaxis=dict(\n        title='%',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        gridcolor='rgb(255, 255, 255)',\n        gridwidth=1,\n        zerolinecolor='rgb(255, 255, 255)',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)'\n    ),\n    xaxis=dict(\n        title='Finish time [minutes]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        tickmode='array',\n        tickvals=[150, 180, 210, 240, 270, 300, 330, 360, 390],\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)',\n    ),\n    legend=dict(\n        orientation='h',\n        font=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        x=0.8,\n        y=0.94,\n    ),\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\n\ndata = [trace0, trace1]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","b3316079":"# Distplot with normal distribution\ndata = [x0, x1]\nlabels = ['M', 'F']\ncolors = ['#90BCC6', '#9a90c6']\n\nfig = ff.create_distplot(data, labels, show_hist=False, curve_type='normal', colors=colors)\n\nfig['layout'].update(\n    title='Normal distribution curve',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    yaxis=dict(\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        gridcolor='rgb(255, 255, 255)',\n        gridwidth=1,\n        zerolinecolor='rgb(255, 255, 255)',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)'\n    ),\n    xaxis=dict(\n        title='Finish time [minutes]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        gridcolor='rgb(255, 255, 255)',\n        gridwidth=1,\n        tickmode='array',\n        tickvals=[150, 180, 210, 240, 270, 300, 330, 360, 390],\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)',\n    ),\n    legend=dict(\n        orientation='v',\n        font=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        x=0.83,\n        y=0.89,\n    ),\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\n\n\npy.iplot(fig)","163965e5":"# Halves\nhalf_results = results[['Sex', '21.1KM', 'Finish','Finish_time[m]']]\nhalf_results['delta_1'] = 0\nhalf_results['delta_2'] = 0\nhalf_results['%_diff'] = 0\n\ndef find_halves_diff(df):\n    for i in range(0, len(df)):\n        end_1 = pendulum.parse(df.iloc[i,1])\n        end_2 = pendulum.parse(df.iloc[i,2])\n        d_1 = end_1 - start\n        d_2 = end_2 - end_1\n        df.iloc[i,4] = d_1.total_minutes()\n        df.iloc[i,5] = d_2.total_minutes()\n        df.iloc[i,6] = ((df.iloc[i,4] - df.iloc[i,5]) \/ df.iloc[i,4])*100\n    return df\n\nhalf_results = find_halves_diff(half_results)  \n# half_results[:5]","64baf236":"#Scatter plot\ntrace0 = go.Scatter(\n    x = half_results['Finish_time[m]'][half_results['Sex']=='K'],\n    y = half_results['%_diff'][half_results['Sex']=='K'],\n    name = 'F',\n    mode = 'markers',\n    marker = dict(\n        opacity=0.35,\n        size = 9,\n        color = '#9a90c6',\n    ),\n    hoverinfo='y',\n)\n\ntrace1 = go.Scatter(\n    x = half_results['Finish_time[m]'][half_results['Sex'] != 'K'],\n    y = half_results['%_diff'][half_results['Sex'] != 'K'],\n    name = 'M',\n    mode = 'markers',\n    marker = dict(\n        size = 9,\n        opacity=0.35,\n        color = '#90BCC6',\n    ),\n    hoverinfo='y',\n   \n)\n\ndata = [trace1, trace0]\n\nlayout = dict(\n    title = 'Finish line time vs. % difference between halves',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zerolinecolor='#3B5F6D',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)',\n        ticksuffix=' %',\n        showticksuffix='first'\n    ),\n    xaxis=dict(\n        title='Finish time [minutes]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        showgrid=False,\n        tickmode='array',\n        tickvals=[150, 180, 210, 240, 270, 300, 330, 360, 390],\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='rgb(243, 243, 243)',\n        ticksuffix=' mins',\n        showticksuffix='first'\n    ),\n    legend=dict(\n        orientation='v',\n        font=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        x=0.83,\n        y=0.89,\n    ),\n    annotations=[\n        dict(\n            visible=True,\n            x=145,\n            y=50,\n            xref='x',\n            yref='y',\n            text='second half faster',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            visible=True,\n            x=145,\n            y=-50,\n            xref='x',\n            yref='y',\n            text='second half slower',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n    ],\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig)","3ebaf862":"# Calculate %s\nsecond_slower_all = (half_results['%_diff'][half_results['%_diff']<0].count())\/len(half_results)\nsecond_slower_men = (half_results['%_diff'][(half_results['%_diff']<0) & (half_results['Sex']!='K')]\n                    .count())\/len(half_results['Sex'][half_results['Sex']!='K'])\nsecond_slower_women = (half_results['%_diff'][(half_results['%_diff']<0) & (half_results['Sex']=='K')]\n                    .count())\/len(half_results['Sex'][half_results['Sex']=='K'])\nsecond_faster_all = 1.0 - second_slower_all\nsecond_faster_men = 1.0 - second_slower_men\nsecond_faster_women = 1.0 - second_slower_women\n\nprint(f'{round(second_slower_all * 100, 1)}% of all runners run second half slower. Divided into\\\n categories: {round(second_slower_men * 100, 1)}% of all men and {round(second_slower_women * 100, 1)}% \\\nof all women slowed down during second half of a distance.')#, second_slower_men, second_slower_women, second_faster_all, second_faster_men, second_faster_women)","0234df3b":"# Make a df with paces between measurement points\nsec_df = results[['Sex', '5KM', '10KM', '15KM',\n                  '20KM', '21.1KM', '25KM',\n                  '30KM', '35KM', '40KM', 'Finish']]\nsec_dist = [5, 5, 5, 5, 1.092, 3.908, 5, 5, 5, 2.195]\n\ndef all_paces():\n    for column in range(1, len(sec_df.columns)):\n        for i in range(len(results)):\n            end = pendulum.parse(results.iloc[i, column+5])\n            if column==1:\n                start = pendulum.datetime(2018, 10, 14, 9, 0, 0)\n            else:\n                start = pendulum.parse(results.iloc[i, column+4])\n            delta = end - start\n            sec_df.iloc[i,column] = (delta.total_minutes()\/sec_dist[column-1])\n    return sec_df\n\nsec_df = all_paces()","0e8cca8e":"sec_df[:5]","1b9175ab":"# Find average tempo for women and men between contorl points.\nf_sec_tempo = []\nm_sec_tempo = []\n\ndef find_mean_tempo():\n    for column in range(1, len(sec_df.columns)):\n        f_sec_tempo.append(sec_df.iloc[:,column][sec_df['Sex']=='K'].mean())\n        m_sec_tempo.append(sec_df.iloc[:,column][sec_df['Sex']!='K'].mean())\n    return f_sec_tempo, m_sec_tempo\n\nf_sec_tempo, m_sec_tempo = find_mean_tempo()\nprint(f\"Womens sections tempo {f_sec_tempo}, and mens sections tempo {m_sec_tempo}\")","32f571bb":"# Prepare df for plotting\nl=list(sec_df)[1:11]\nsec_df = sec_df[['5KM', '10KM', '15KM', '20KM', '21.1KM', '25KM',\n                 '30KM', '35KM', '40KM', 'Finish']]\n","b27bac9e":"# Pace chart\ntraces = []\n\nfor row in sec_df.itertuples(index=False):\n    traces.append(go.Scatter(\n        x=l,\n        y=list(row),\n        mode='lines',\n        line=dict(\n            width=0.1, \n            color='black',\n        ),\n        opacity=0.2,\n        hoverinfo='none'\n    ))\n    \n    \nlayout = go.Layout(\n    title='Runners pace on selected points',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    xaxis=dict(\n        showline=False,\n        title='Time measurement point',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        showgrid=False,\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='#3B5F6D',\n    ),\n    yaxis=dict(\n        range=[10,3],\n        title='Pace [min\/km]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        showgrid=False,\n        zerolinecolor='#3B5F6D',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='#3B5F6D',\n    ),\n    showlegend=False,\n    shapes=[\n        dict(\n            layer='below',\n            type='line',\n            x0='5KM',\n            y0=6.043,\n            x1='Finish',\n            y1=6.043,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0='5KM',\n            y0=5.688,\n            x1='Finish',\n            y1=5.688,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0='5KM',\n            y0=4.967,\n            x1='Finish',\n            y1=4.967,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0='5KM',\n            y0=4.266,\n            x1='Finish',\n            y1=4.266,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n    ],\n    annotations=[\n        dict(\n            visible=True,\n            x=8.5,\n            y=4.116,\n            xref='x',\n            yref='y',\n            text='3:00h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            visible=True,\n            x=8.5,\n            y=4.817,\n            xref='x',\n            yref='y',\n            text='3:30h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            visible=True,\n            x=8.5,\n            y=5.538,\n            xref='x',\n            yref='y',\n            text='4:00h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            visible=True,\n            x=8.5,\n            y=5.893,\n            xref='x',\n            yref='y',\n            text='4:15h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n    ],\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\nfig = go.Figure(data=traces, layout=layout)\npy.iplot(fig)","a7643ccd":"# Add column with the net start time\n\ndef add_net_start_time(df):\n    df['start_time_net'] = 0\n    for i in range(0, len(df)):\n        net_time = pendulum.parse(df.iloc[i,16], exact=True)\n        gross_time = pendulum.parse(df.iloc[i,17], exact=True)\n        delta_net_gross = gross_time - net_time\n        df.iloc[i,19] = delta_net_gross\n    return df\n\nresults = add_net_start_time(results)\n#print(results['start_time_net'][:5])","c1a64f4a":"# Prepare data to plot new pace\nresults_net = results[['5KM', '10KM', '15KM','20KM', '25KM',\n                       '30KM', '35KM', '40KM', 'Finish', 'start_time_net']]\nresults_dist = [5, 5, 5, 5, 5, 5, 5, 5, 2.195]\n\nresults_net_copy = results_net.copy() # to avoid overwrite data in results_net","73548483":"# Create df with new net paces\n\ndef all_paces_net():\n    for column in range(len(results_net_copy.columns)-1):\n        for i in range(len(results_net_copy)):\n            end = pendulum.parse(results_net.iloc[i, column])\n            if column==0:\n                start = pendulum.datetime(2018, 10, 14, 9, 0, 0) + results_net['start_time_net'][i]\n            else:\n                start = pendulum.parse(results_net.iloc[i, column-1])\n            delta = end - start\n            results_net_copy.iloc[i,column] = (delta.total_minutes()\/results_dist[column])\n    return results_net_copy\n\nresults_net_copy = all_paces_net()\n#results_net_copy[:5]","11916726":"# Pace chart\ntraces = []\n\nresults_net_copy = results_net_copy[['5KM', '10KM', '15KM', '20KM', '25KM',\n                                     '30KM', '35KM', '40KM', 'Finish']]\nl = [5, 10, 15, 20, 25, 30, 35, 40, 42.195]\nlabels = ['5KM', '10KM', '15KM', '20KM',\n          '25KM', '30KM', '35KM', '40KM', 'Finish']\n\n\nfor row in results_net_copy.itertuples(index=False):\n    traces.append(go.Scatter(\n        x=l,\n        y=list(row),\n        mode='lines',\n        line=dict(\n            width=0.1, \n            color='black',\n        ),\n        opacity=0.2,\n        hoverinfo='none'\n    ))\n    \n    \nlayout = go.Layout(\n    title='Runners pace on selected points',\n    titlefont=dict(\n        size=20,\n        family='Droid Serif',\n        color='#3B5F6D',\n    ),\n    xaxis=dict(\n        showline=False,\n        title='Time measurement point',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        showgrid=False,\n        tickvals=l,\n        ticktext=labels,\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='#3B5F6D',\n    ),\n    yaxis=dict(\n        range=[10,3],\n        title='Pace [min\/km]',\n        titlefont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D'\n        ),\n        showgrid=False,\n        zerolinecolor='#3B5F6D',\n        tickfont=dict(\n            size=14,\n            family='Droid Serif',\n            color='#3B5F6D',\n        ),\n        ticks='outside',\n        ticklen=8,\n        tickcolor='#3B5F6D',\n    ),\n    showlegend=False,\n    shapes=[\n        dict(\n            layer='below',\n            type='line',\n            x0=5,\n            y0=6.043,\n            x1=44,\n            y1=6.043,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0=5,\n            y0=5.688,\n            x1=44,\n            y1=5.688,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0=5,\n            y0=4.967,\n            x1=44,\n            y1=4.967,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n        dict(\n            layer='below',\n            type='line',\n            x0=5,\n            y0=4.266,\n            x1=44,\n            y1=4.266,\n            line=dict(\n                color='#ECA400',\n                width=1,\n            ),\n        ),\n    ],\n    annotations=[\n        dict(\n            visible=True,\n            x=43,\n            y=4.116,\n            xref='x',\n            yref='y',\n            text='3:00h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            visible=True,\n            x=43,\n            y=4.817,\n            xref='x',\n            yref='y',\n            text='3:30h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            visible=True,\n            x=43,\n            y=5.538,\n            xref='x',\n            yref='y',\n            text='4:00h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n        dict(\n            visible=True,\n            x=43,\n            y=5.893,\n            xref='x',\n            yref='y',\n            text='4:15h',\n            ax=0,\n            ay=0,\n            font=dict(\n                size=12,\n                family='Droid Serif',\n                color='#3B5F6D',\n            ),\n        ),\n    ],\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\nfig = go.Figure(data=traces, layout=layout)\npy.iplot(fig)","1fe898d5":"#### Check runners age categories.","4a8ee626":"#### Average tempos between control points for men and women","347f6993":"#### Data frame with results are from [previous kernel](https:\/\/www.kaggle.com\/mihalw28\/scrap-marathon-results)","6639f0fe":"#### Let's find median time for men and women","56ceb294":"#### Show pace for all runners","fac8527f":"#### Find pace changes between 5k sections","3b63c00f":"1. There is a bunch of issues which could cause misunderstanding above chart. Let's point them and replot the chart.\n1. Pace between start and 6km (_'5KM'_ value on categorical x axis) is much lower (values are higher) comparing to next few control points. This is a result of calculating the same start time for all runners. Solution: calculate net time instead of gross.\n2. To make chart more clear let's change x axis into linear type and delete _'21.1KM'_ point. Between _'20KM'_ and _'21.1KM'_ there is a significant dissection of dark dense lines. This could be caused by route profile, to be precise by downhill type of this section.\n\nTo do:\n* calculate values using net time,\n* delete _'21.1KM'_ control point,\n* change x axis type from categorical to linear.","1642ef52":"#### How many runners ran slower\/faster?","08f35ade":"#### This notebook contains few basic charts showing analysis of marathon results."}}