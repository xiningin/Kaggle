{"cell_type":{"89a8cfc7":"code","458b4789":"code","02b1ec72":"code","7b598274":"code","d92063f5":"code","c4655308":"code","fd9d0bda":"code","31e5fffa":"code","6701f4ff":"code","29263d83":"code","0250478d":"markdown"},"source":{"89a8cfc7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/tps-02-21-feature-importance-with-xgboost-and-shap'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\nfor dirname, _, filenames in os.walk('..\/input\/tps-feb-2021-with-lgbmregressor'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","458b4789":"train = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')","02b1ec72":"target = train['target'].values","7b598274":"train_oof_lgb = np.load('..\/input\/tps-feb-2021-with-lgbmregressor\/train_oof.npy')\ntest_preds_lgb = np.load('..\/input\/tps-feb-2021-with-lgbmregressor\/test_preds.npy')\n\ntrain_oof_xgb = np.load('..\/input\/tps-02-21-feature-importance-with-xgboost-and-shap\/train_oof.npy')\ntest_preds_xgb = np.load('..\/input\/tps-02-21-feature-importance-with-xgboost-and-shap\/test_preds.npy')\n\nlgbm_goes_brrr = pd.read_csv('..\/input\/lgbm-goes-brrr\/submission.csv')","d92063f5":"print(mean_squared_error(train_oof_lgb, target, squared=False))\nprint(mean_squared_error(train_oof_xgb, target, squared=False))\n","c4655308":"print(mean_squared_error(0.75*train_oof_lgb+0.25*train_oof_xgb, target, squared=False))\n","fd9d0bda":"sub['target'] = 0.75*test_preds_lgb+0.25*test_preds_xgb\nsub.to_csv('submission.csv', index=False)\nsub.head()","31e5fffa":"sub['target'] = 0.675*test_preds_lgb+0.225*test_preds_xgb+0.1*lgbm_goes_brrr['target'].values\nsub.to_csv('submission_2.csv', index=False)\nsub.head()","6701f4ff":"sub['target'] = 0.6*test_preds_lgb+0.2*test_preds_xgb+0.2*lgbm_goes_brrr['target'].values\nsub.to_csv('submission_3.csv', index=False)\nsub.head()","29263d83":"sub['target'] = 0.525*test_preds_lgb+0.175*test_preds_xgb+0.3*lgbm_goes_brrr['target'].values\nsub.to_csv('submission_4.csv', index=False)\nsub.head()","0250478d":"In this notebook we'll make a gentle introduction to ensembling. We'll first take a look at soem simple blends of top solutions, and then use soem more advanced stackign techniques. \n\nWe'll take use of the base models that can be found in the following notebooks:\n\nLightGBM: https:\/\/www.kaggle.com\/tunguz\/tps-feb-2021-with-lgbmregressor\n\nXGBoost: https:\/\/www.kaggle.com\/tunguz\/tps-02-21-feature-importance-with-xgboost-and-shap\n\nLightGBM goes brrrr: https:\/\/www.kaggle.com\/maunish\/lgbm-goes-brrr"}}