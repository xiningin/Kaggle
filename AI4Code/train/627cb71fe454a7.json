{"cell_type":{"036c60ad":"code","92966d42":"code","9d84757d":"code","8006445a":"code","f25637c1":"code","78aab32b":"code","824c951a":"code","03f44b89":"code","58456b39":"code","7c5b8798":"code","904e6f43":"code","e84b8d44":"code","854dc4d3":"code","a1b46e1b":"code","77256378":"code","4c7928a6":"code","462c9ba7":"code","d49d2961":"code","ba55e968":"code","a5603a4c":"code","83b58ff8":"code","71c28dbd":"code","1ed228ae":"code","7c298d8d":"code","4596a795":"code","f179cd3f":"code","2cc7b0e4":"code","c24fc791":"code","a94fbc04":"markdown","3fe99e33":"markdown","edd76b81":"markdown","3fd35255":"markdown","a7d82da7":"markdown","ad905bc3":"markdown","67ee689c":"markdown","47373d4a":"markdown","0158172b":"markdown","7fbfe580":"markdown","f0c4e7cb":"markdown","ca474567":"markdown","3338e0c2":"markdown","05fbfc19":"markdown","749f1529":"markdown","16fafa1f":"markdown","07a31bed":"markdown","f356411b":"markdown","ee16dec2":"markdown","62d6845d":"markdown","f05751b1":"markdown","24479784":"markdown","faac3418":"markdown","f4fdbf0e":"markdown","8a425c63":"markdown","b507238e":"markdown","711c46df":"markdown","4f447f4d":"markdown"},"source":{"036c60ad":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport seaborn as sns \nimport random\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os, glob\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename)) ","92966d42":"#We first import the data (copy-paste of the input files' paths)\ndf_data =pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ndf_ts_confirmed = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\ndf_ts_recovered = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv\")\ndf_ts_confirmed_us = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed_US.csv\")\ndf_ts_deaths = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\")\ndf_ts_death_us = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths_US.csv\")\ndf_ll = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/COVID19_line_list_data.csv\")\ndf_oll = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/COVID19_open_line_list.csv\")","9d84757d":"#We will first look at the Covid 'data'\ndf_data.head(3)","8006445a":"df_data[['Confirmed','Deaths','Recovered']]=df_data[['Confirmed','Deaths','Recovered']].astype(int) #To convert a float into an int\n\n#Next we want to plot the number of deaths\/recovered\/confirmed cases according to the date \n#So we sum all the confirmed\/deaths\/recovered cases grouped by the date\ndf_plot = df_data.groupby([\"ObservationDate\"])['Confirmed','Deaths','Recovered'].sum().reset_index().sort_values(\"ObservationDate\",ascending=True)\ndf_plot.head()","f25637c1":"#We keep just some dates to have a better looking graph (else there is too much x labels to see something) :\nL=np.linspace(0,219,150).astype(int)\ndf_plot_reduced=df_plot\nfor i in L :\n    df_plot_reduced = df_plot_reduced.drop(i) \ndf_plot_reduced.head()","78aab32b":"#Graph that shows the number of confirmed cases according to the date\nplt.figure(figsize=(20,5))\nax = sns.barplot(x=df_plot_reduced['ObservationDate'],\n                 y=df_plot_reduced['Confirmed'],\n                 data = df_plot_reduced, \n                 palette = sns.cubehelix_palette(86,start = 2.5)) #Palette of color purple\/blue\n\nax.set(xlabel='Date',\n       ylabel='Number of confirmed cases',\n      title='Number of covid-19 confirmed cases')\n\n#To be able to read the x-axis, we rotate the labels\nax.set_xticklabels(ax.get_xticklabels(),\n                   rotation = 90, \n                   horizontalalignment='right');","824c951a":"#Number of recovery cases :\nplt.figure(figsize=(20,5))\nax = sns.barplot(x=df_plot_reduced['ObservationDate'],y=df_plot_reduced['Recovered'],data = df_plot_reduced, palette = sns.cubehelix_palette(86,start =1.6,rot=0.1))\n\nax.set(xlabel='Date',\n       ylabel='Number of recovered cases',\n      title='Number of covid-19 recovered cases')\n\n#To be able to read the x-axis, we rotate the labels\nax.set_xticklabels(ax.get_xticklabels(),\n                   rotation = 90, \n                   horizontalalignment='right');","03f44b89":"#Number of deaths :\nplt.figure(figsize=(20,5))\nax = sns.barplot(x=df_plot_reduced['ObservationDate'],y=df_plot_reduced['Deaths'],data = df_plot_reduced, palette = sns.cubehelix_palette(86,start=1.1,rot=0.1))\n\nax.set(xlabel='Date',\n       ylabel='Number of deaths',\n      title='Number of covid-19 deaths')\n\n#To be able to read the x-axis, we rotate the labels\nax.set_xticklabels(ax.get_xticklabels(),\n                   rotation = 90, \n                   horizontalalignment='right');","58456b39":"#Dataframe with just the last day of the month, in order to find later the number of confirmed\/deaths\/recovered per month (and not the cumulate number)\nlabels=['01\/31\/2020','02\/29\/2020','03\/31\/2020','04\/30\/2020','05\/31\/2020','06\/30\/2020','07\/31\/2020','08\/31\/2020']\n\ndf_month = pd.DataFrame() #New DataFrame\nfor date in labels: #We just want the last day of the different months, and we concatenate the dataframe with its previous version for each month\n    df_month = pd.concat(\n        [df_plot.loc[df_plot['ObservationDate']==date] , df_month], \n        ignore_index=True)\n    \ndf_month = df_month.sort_values(by='ObservationDate',ascending=False) #The frist line is for August, not necessary\ndf_month.head(10) #Number of total confirmed\/deaths\/recovered cases at the end pf each month","7c5b8798":"#Number of confirmed cases\/recovered\/deaths per month\n#For example : Number in August = (number on 8\/29\/20) - (number on 7\/31\/20)\n\ndf_month.loc['August'] = df_month.loc[0][['Confirmed','Deaths','Recovered']] - df_month.loc[1][['Confirmed','Deaths','Recovered']]\ndf_month.loc['July'] = df_month.loc[1][['Confirmed','Deaths','Recovered']] - df_month.loc[2][['Confirmed','Deaths','Recovered']]\ndf_month.loc['June'] = df_month.loc[2][['Confirmed','Deaths','Recovered']] - df_month.loc[3][['Confirmed','Deaths','Recovered']]\ndf_month.loc['May'] = df_month.loc[3][['Confirmed','Deaths','Recovered']] - df_month.loc[4][['Confirmed','Deaths','Recovered']]\ndf_month.loc['April'] = df_month.loc[4][['Confirmed','Deaths','Recovered']] - df_month.loc[5][['Confirmed','Deaths','Recovered']]\ndf_month.loc['March'] = df_month.loc[5][['Confirmed','Deaths','Recovered']] - df_month.loc[6][['Confirmed','Deaths','Recovered']]\ndf_month.loc['February'] = df_month.loc[6][['Confirmed','Deaths','Recovered']] - df_month.loc[7][['Confirmed','Deaths','Recovered']]\ndf_month.loc['January'] = df_month.loc[7][['Confirmed','Deaths','Recovered']]\n\n#We keep just the monthly cases and use iloc to sort it the right way\ndf_month = df_month.drop([i for i in range(0,8)]).drop('ObservationDate',axis=1).iloc[::-1]\ndf_month.head(8)","904e6f43":"labels=['January','February','March','April','May','June','July','August'] #x label as well as the name of the df_month lines\n\nfig, axs= plt.subplots(ncols=3,figsize=(21,5)) #Several charts on one figure\nax1=sns.barplot(x=labels,\n                y=df_month['Confirmed'],\n                data=df_month,\n                ax=axs[0], #First chart\n                palette = 'Blues')\nax1.set(xlabel='Month',ylabel='Number of confirmed cases',title='Number of covid-19 confirmed cases per month');\n\nax2=sns.barplot(x=labels,\n                y=df_month['Deaths'],\n                data=df_month,\n                ax=axs[1], #Second chart\n                color='Grey')\nax2.set(xlabel='Month',ylabel='Number of deaths cases',title='Number of covid-19 deaths per month');\n\nax3=sns.barplot(x=labels,\n                y=df_month['Recovered'],\n                data=df_month,\n                ax=axs[2], #Third chart\n                palette = 'Greens')\nax3.set(xlabel='Month',ylabel='Number of recovered cases',title='Number of covid-19 recovered cases per month');","e84b8d44":"df_ts_confirmed.head() #To see this dataframe","854dc4d3":"df_confirmed_top20 = df_ts_confirmed.sort_values(by='8\/31\/20',ascending=False).head(20) #because we want the 20 countries where there is the most recovered cases\n\nplt.figure(figsize=(20,5)) #To have a bigger figure\nax=sns.barplot(\n    x='Country\/Region',\n    y='8\/31\/20',\n    data=df_confirmed_top20, \n    palette = \"Blues_d\"\n)\n\nax.set(xlabel='Country',\n       ylabel='Number of cases',\n       title='Top 20 countries with the most confirmed cases on 8\/31\/2020');\n","a1b46e1b":"#Scatter graph using plotly\nfig = go.Figure(data=[go.Scatter(\n    x=df_confirmed_top20['Country\/Region'],\n    y=df_confirmed_top20['8\/31\/20'],\n    mode='markers',\n    marker=dict(size=(df_confirmed_top20['8\/31\/20']\/30000))\n)])\n\nfig.update_layout(title='Top 20 countries with the most confirmed cases on 8\/31\/2020',\n    xaxis_title=\"Country\",\n    yaxis_title=\"Confirmed Cases\"\n)\nfig.show()","77256378":"df_recovered_top20 = df_ts_recovered.sort_values(by='8\/31\/20',ascending=False).head(20) #because we want the 20 countries where there is the most recovered cases\n\nplt.figure(figsize=(20,5)) #To have a bigger figure\nax=sns.barplot(\n    x='Country\/Region',\n    y='8\/31\/20',\n    data=df_recovered_top20,\n    palette = \"Greens_d\"\n)\n\nax.set(xlabel='Country',\n       ylabel='Number of cases',\n       title='Top 20 countries with the most recovered cases on 8\/31\/2020');","4c7928a6":"df_deaths_top20 = df_ts_deaths.sort_values(by='8\/31\/20',ascending=False).head(20) #because we want the 20 countries where there is the most deaths cases\n\nplt.figure(figsize=(20,5)) #To have a bigger figure\nax=sns.barplot(\n    x='Country\/Region',\n    y='8\/31\/20',\n    data=df_deaths_top20,\n    palette = 'Greys_d'\n)\n\nax.set(xlabel='Country',\n       ylabel='Number of cases',\n       title='Top 20 countries with the most recovered cases on 8\/31\/2020');","462c9ba7":"#We first create a new Dataframe\ndf_ratio = pd.DataFrame() \n\ndf_ratio['Country\/Region'] = df_ts_confirmed['Country\/Region'] #To have the countries\ndf_ratio['Ratio deaths\/confirmed'] = (df_ts_deaths.loc[df_ts_deaths['Province\/State'].isnull()]['8\/31\/20']\/df_ts_confirmed.loc[df_ts_confirmed['Province\/State'].isnull()]['8\/31\/20'] ) * 100 # Deaths\/confirmed percentage ratio\ndf_ratio = df_ratio.sort_values(by='Ratio deaths\/confirmed',ascending = False).head(20)\ndf_ratio.head()","d49d2961":"plt.figure(figsize=(20,5)) #To have a bigger figure\nax=sns.barplot(\n    x='Country\/Region',\n    y='Ratio deaths\/confirmed',\n    data=df_ratio,\n    palette='Reds_d'\n)\n\nax.set(xlabel='Country',\n       ylabel='Percentage',\n       title='Top 20 countries with the highest deaths\/confirmed cases on 8\/31\/2020')\n\nax.set_xticklabels(ax.get_xticklabels(),\n                   rotation = 90, \n                   horizontalalignment='right');","ba55e968":"#We will create a new dataframe which contains the number of confirmed cases per month\ndf_new_confirmed = pd.DataFrame() #Cretaion of the dataframe\n\ndf_new_confirmed['Country\/Region'] = df_ts_confirmed['Country\/Region'] #We copy the country column\n\n#We calculate the number of confirmed cases for each month\ndf_new_confirmed['Number of new confirmed cases in August'] = df_ts_confirmed['8\/31\/20']-df_ts_confirmed['8\/1\/20']\ndf_new_confirmed['Number of new confirmed cases in July'] = df_ts_confirmed['7\/31\/20']-df_ts_confirmed['7\/1\/20']\ndf_new_confirmed['Number of new confirmed cases in June'] = df_ts_confirmed['6\/30\/20']-df_ts_confirmed['6\/1\/20']\ndf_new_confirmed['Number of new confirmed cases in May'] =df_ts_confirmed['5\/31\/20']-df_ts_confirmed['5\/1\/20']\ndf_new_confirmed['Number of new confirmed cases in April'] = df_ts_confirmed['4\/30\/20']-df_ts_confirmed['4\/1\/20']\ndf_new_confirmed['Number of new confirmed cases in March'] = df_ts_confirmed['3\/31\/20']-df_ts_confirmed['3\/1\/20']\ndf_new_confirmed['Number of new confirmed cases in February'] = df_ts_confirmed['2\/29\/20']-df_ts_confirmed['2\/1\/20']\ndf_new_confirmed['Number of new confirmed cases in January'] = df_ts_confirmed['1\/31\/20']-df_ts_confirmed['1\/22\/20']\ndf_new_confirmed.head()","a5603a4c":"#Graph that shows the 5 counties with the most number of confirmed cases due of covid-19 per month\nfig, axs=plt.subplots(nrows=2,ncols=4,figsize = (25,15))\n\nax1=sns.barplot(x='Country\/Region',\n                y='Number of new confirmed cases in January',\n                data=df_new_confirmed.sort_values(by='Number of new confirmed cases in January',ascending=False).head(5), #Top 5 countries\n                ax=axs[0][0],\n                palette=\"Blues_d\")\nax1.set(xlabel='Country',\n        ylabel='Number of confirmed cases',\n        title='The number of confirmed cases in January')\n\nax2=sns.barplot(x='Country\/Region',y='Number of new confirmed cases in February',data=df_new_confirmed.sort_values(by='Number of new confirmed cases in February',ascending=False).head(5),ax=axs[0][1],palette=\"Blues_d\")\nax2.set(xlabel='Country',ylabel='',title='The number of confirmed cases in February')\n\nax3=sns.barplot(x='Country\/Region',y='Number of new confirmed cases in March',data=df_new_confirmed.sort_values(by='Number of new confirmed cases in March',ascending=False).head(5),ax=axs[0][2],palette=\"Blues_d\")\nax3.set(xlabel='Country',ylabel='',title='The number of confirmed cases in March')\n\nax4=sns.barplot(x='Country\/Region',y='Number of new confirmed cases in April',data=df_new_confirmed.sort_values(by='Number of new confirmed cases in April',ascending=False).head(5),ax=axs[0][3],palette=\"Blues_d\")\nax4.set(xlabel='Country',ylabel='',title='The number of confirmed cases in April')\n\nax5=sns.barplot(x='Country\/Region',y='Number of new confirmed cases in May',data=df_new_confirmed.sort_values(by='Number of new confirmed cases in May',ascending=False).head(5),ax=axs[1][0],palette=\"Blues_d\")\nax5.set(xlabel='Country',ylabel='Number of confirmed cases',title='The number of confirmed cases in May')\n\nax6=sns.barplot(x='Country\/Region',y='Number of new confirmed cases in June',data=df_new_confirmed.sort_values(by='Number of new confirmed cases in June',ascending=False).head(5),ax=axs[1][1],palette=\"Blues_d\")\nax6.set(xlabel='Country',ylabel='',title='The number of confirmed cases in June')\n\nax7=sns.barplot(x='Country\/Region',y='Number of new confirmed cases in July',data=df_new_confirmed.sort_values(by='Number of new confirmed cases in July',ascending=False).head(5),ax=axs[1][2],palette=\"Blues_d\")\nax7.set(xlabel='Country',ylabel='',title='The number of confirmed cases in July')\n\nax8=sns.barplot(x='Country\/Region',y='Number of new confirmed cases in August',data=df_new_confirmed.sort_values(by='Number of new confirmed cases in August',ascending=False).head(5),ax=axs[1][3],palette=\"Blues_d\")\nax8.set(xlabel='Country',ylabel='',title='The number of confirmed cases in August')\n\nplt.show()\n","83b58ff8":"#Again we create a new dataframe (because the 'Country\/Region' may not be in the same order between the confirmed and the deaths database )\ndf_new_deaths = pd.DataFrame()\ndf_new_deaths['Country\/Region'] = df_ts_deaths['Country\/Region']\n\ndf_new_deaths['Number of deaths in August'] = df_ts_deaths['8\/31\/20']-df_ts_deaths['8\/1\/20']\ndf_new_deaths['Number of deaths in July'] = df_ts_deaths['7\/31\/20']-df_ts_deaths['7\/1\/20']\ndf_new_deaths['Number of deaths in June'] = df_ts_deaths['6\/30\/20']-df_ts_deaths['6\/1\/20']\ndf_new_deaths['Number of deaths in May'] = df_ts_deaths['5\/31\/20']-df_ts_deaths['5\/1\/20']\ndf_new_deaths['Number of deaths in April'] = df_ts_deaths['4\/30\/20']-df_ts_deaths['4\/1\/20']\ndf_new_deaths['Number of deaths in March'] = df_ts_deaths['3\/31\/20']-df_ts_deaths['3\/1\/20']\ndf_new_deaths['Number of deaths in February'] = df_ts_deaths['2\/29\/20']-df_ts_deaths['2\/1\/20']\ndf_new_deaths['Number of deaths in January'] = df_ts_deaths['1\/31\/20']-df_ts_deaths['1\/22\/20']\ndf_new_deaths.head()","71c28dbd":"#Graph that shows the 5 countries with the most number of deaths due to the covid-19 per month\nfig, axs=plt.subplots(nrows=2,ncols=4,figsize = (25,15))\n\nax1=sns.barplot(x='Country\/Region',y='Number of deaths in January',data=df_new_deaths.sort_values(by='Number of deaths in January',ascending=False).head(5),ax=axs[0][0],palette=sns.dark_palette('white'))\nax1.set(xlabel='Country',ylabel='Number of deaths',title='The number of deaths in January')\n\nax2=sns.barplot(x='Country\/Region',y='Number of deaths in February',data=df_new_deaths.sort_values(by='Number of deaths in February',ascending=False).head(5),ax=axs[0][1],palette=sns.dark_palette('white'))\nax2.set(xlabel='Country',ylabel='',title='The number of deaths in February')\n\nax3=sns.barplot(x='Country\/Region',y='Number of deaths in March',data=df_new_deaths.sort_values(by='Number of deaths in March',ascending=False).head(5),ax=axs[0][2],palette=sns.dark_palette('white'))\nax3.set(xlabel='Country',ylabel='',title='The number of deaths in March')\n\nax4=sns.barplot(x='Country\/Region',y='Number of deaths in April',data=df_new_deaths.sort_values(by='Number of deaths in April',ascending=False).head(5),ax=axs[0][3],palette=sns.dark_palette('white'))\nax4.set(xlabel='Country',ylabel='',title='The number of deaths in April')\n\nax5=sns.barplot(x='Country\/Region',y='Number of deaths in May',data=df_new_deaths.sort_values(by='Number of deaths in May',ascending=False).head(5),ax=axs[1][0],palette=sns.dark_palette('white'))\nax5.set(xlabel='Country',ylabel='Number of deaths',title='The number of deaths in May')\n\nax6=sns.barplot(x='Country\/Region',y='Number of deaths in June',data=df_new_deaths.sort_values(by='Number of deaths in June',ascending=False).head(5),ax=axs[1][1],palette=sns.dark_palette('white'))\nax6.set(xlabel='Country',ylabel='',title='The number of deaths in June')\n\nax7=sns.barplot(x='Country\/Region',y='Number of deaths in July',data=df_new_deaths.sort_values(by='Number of deaths in July',ascending=False).head(5),ax=axs[1][2],palette=sns.dark_palette('white'))\nax7.set(xlabel='Country',ylabel='',title='The number of deaths in July')\n\nax8=sns.barplot(x='Country\/Region',y='Number of deaths in August',data=df_new_deaths.sort_values(by='Number of deaths in August',ascending=False).head(5),ax=axs[1][3],palette=sns.dark_palette('white'))\nax8.set(xlabel='Country',ylabel='',title='The number of deaths in August')\n\nplt.show()","1ed228ae":"#Same thing as before but with the recovered database\ndf_new_recovered = pd.DataFrame()\ndf_new_recovered['Country\/Region'] = df_ts_recovered['Country\/Region']\ndf_new_recovered['Number of recovery cases in August']= df_ts_recovered['8\/31\/20']-df_ts_recovered['8\/1\/20']\ndf_new_recovered['Number of recovery cases in July']= df_ts_recovered['7\/31\/20']-df_ts_recovered['7\/1\/20']\ndf_new_recovered['Number of recovery cases in June']= df_ts_recovered['6\/30\/20']-df_ts_recovered['6\/1\/20']\ndf_new_recovered['Number of recovery cases in May']= df_ts_recovered['5\/31\/20']-df_ts_recovered['5\/1\/20']\ndf_new_recovered['Number of recovery cases in April']= df_ts_recovered['4\/30\/20']-df_ts_recovered['4\/1\/20']\ndf_new_recovered['Number of recovery cases in March']= df_ts_recovered['3\/31\/20']-df_ts_recovered['3\/1\/20']\ndf_new_recovered['Number of recovery cases in February']= df_ts_recovered['2\/29\/20']-df_ts_recovered['2\/1\/20']\ndf_new_recovered['Number of recovery cases in January']= df_ts_recovered['1\/31\/20']-df_ts_recovered['1\/22\/20']\ndf_new_recovered.head()\n","7c298d8d":"#Graph that shows the 5 countries with the most number of recovery cases of covid-19 per month\nfig, axs=plt.subplots(nrows=2,ncols=4,figsize = (25,15))\nax1=sns.barplot(x='Country\/Region',y='Number of recovery cases in January',data=df_new_recovered.sort_values(by='Number of recovery cases in January',ascending=False).head(5),ax=axs[0][0],palette=sns.light_palette('green'))\nax1.set(xlabel='Country',ylabel='Number of recovery cases',title='The number of recovery cases in January')\n\nax2=sns.barplot(x='Country\/Region',y='Number of recovery cases in February',data=df_new_recovered.sort_values(by='Number of recovery cases in February',ascending=False).head(5),ax=axs[0][1],palette=sns.light_palette('green'))\nax2.set(xlabel='Country',ylabel='',title='The number of recovery cases in February')\n\nax3=sns.barplot(x='Country\/Region',y='Number of recovery cases in March',data=df_new_recovered.sort_values(by='Number of recovery cases in March',ascending=False).head(5),ax=axs[0][2],palette=sns.light_palette('green'))\nax3.set(xlabel='Country',ylabel='',title='The number of recovery cases in March')\n\nax4=sns.barplot(x='Country\/Region',y='Number of recovery cases in April',data=df_new_recovered.sort_values(by='Number of recovery cases in April',ascending=False).head(5),ax=axs[0][3],palette=sns.light_palette('green'))\nax4.set(xlabel='Country',ylabel='',title='The number of recovery cases in April')\n\nax5=sns.barplot(x='Country\/Region',y='Number of recovery cases in May',data=df_new_recovered.sort_values(by='Number of recovery cases in May',ascending=False).head(5),ax=axs[1][0],palette=sns.light_palette('green'))\nax5.set(xlabel='Country',ylabel='Number of recovery cases',title='The number of recovery cases in May')\n\nax6=sns.barplot(x='Country\/Region',y='Number of recovery cases in June',data=df_new_recovered.sort_values(by='Number of recovery cases in June',ascending=False).head(5),ax=axs[1][1],palette=sns.light_palette('green'))\nax6.set(xlabel='Country',ylabel='',title='The number of recovery cases in June')\n\nax7=sns.barplot(x='Country\/Region',y='Number of recovery cases in July',data=df_new_recovered.sort_values(by='Number of recovery cases in July',ascending=False).head(5),ax=axs[1][2],palette=sns.light_palette('green'))\nax7.set(xlabel='Country',ylabel='',title='The number of recovery cases in July')\n\nax8=sns.barplot(x='Country\/Region',y='Number of recovery cases in August',data=df_new_recovered.sort_values(by='Number of recovery cases in August',ascending=False).head(5),ax=axs[1][3],palette=sns.light_palette('green'))\nax8.set(xlabel='Country',ylabel='',title='The number of recovery cases in August')\nplt.show()","4596a795":"#In this section we will try to re-create a DataFrame with the lines being the months and the columns being confirmed, deaths and recovered cases\n\n#First we find the 'France' line for the data base 'df_data'\ndf_fr_date = df_data.loc[df_data['Country\/Region']=='France'].sort_values(by='ObservationDate',ascending=False).loc[df_data['Province\/State'].isnull()]\ndf_fr_date = df_fr_date.drop(df_fr_date.columns[[0,2,3,4]],axis=1)\ndf_fr_date.head()","f179cd3f":"#Dataframe with just the last day of the month, in order to find later the number of confirmed\/deaths\/recovered per month (and not the cumulate number)\nlabels=['01\/31\/2020','02\/29\/2020','03\/31\/2020','04\/30\/2020','05\/31\/2020','06\/30\/2020','07\/31\/2020','08\/31\/2020']\n\ndf_fr= pd.DataFrame() #New DataFrame\nfor date in labels: #We just want the last day of the different months, and we concatenate the dataframe with its previous version for each month\n    df_fr = pd.concat(\n        [df_fr_date.loc[df_fr_date['ObservationDate']==date] , df_fr], \n        ignore_index=True)\n    \ndf_fr = df_fr.sort_values(by='ObservationDate',ascending=False) #The frist line is for August, not necessary\ndf_fr.head(10) #Number of total confirmed\/deaths\/recovered cases at the end pf each month","2cc7b0e4":"#Number of confirmed cases\/recovered\/deaths per month\n#For example : Number in August = (number on 8\/29\/20) - (number on 7\/31\/20)\n\ndf_fr.loc['August'] = df_fr.loc[0][['Confirmed','Deaths','Recovered']] - df_fr.loc[1][['Confirmed','Deaths','Recovered']]\ndf_fr.loc['July'] = df_fr.loc[1][['Confirmed','Deaths','Recovered']] - df_fr.loc[2][['Confirmed','Deaths','Recovered']]\ndf_fr.loc['June'] = df_fr.loc[2][['Confirmed','Deaths','Recovered']] - df_fr.loc[3][['Confirmed','Deaths','Recovered']]\ndf_fr.loc['May'] = df_fr.loc[3][['Confirmed','Deaths','Recovered']] - df_fr.loc[4][['Confirmed','Deaths','Recovered']]\ndf_fr.loc['April'] = df_fr.loc[4][['Confirmed','Deaths','Recovered']] - df_fr.loc[5][['Confirmed','Deaths','Recovered']]\ndf_fr.loc['March'] = df_fr.loc[5][['Confirmed','Deaths','Recovered']] - df_fr.loc[6][['Confirmed','Deaths','Recovered']]\ndf_fr.loc['February'] = df_fr.loc[6][['Confirmed','Deaths','Recovered']] - df_fr.loc[7][['Confirmed','Deaths','Recovered']]\ndf_fr.loc['January'] = df_fr.loc[7][['Confirmed','Deaths','Recovered']]\n\n#We keep just the monthly cases and use iloc to sort it the right way\ndf_fr = df_fr.drop([i for i in range(0,8)]).drop('ObservationDate',axis=1).iloc[::-1]\ndf_fr.head(8) #There is some errors in the database fot the recovered cases","c24fc791":"labels=['January','February','March','April','May','June','July','August'] #x label as well as the name of the df_month lines\n\nfig, axs= plt.subplots(ncols=3,figsize=(21,5)) #Several charts on one figure\nax1=sns.barplot(x=labels,\n                y=df_fr['Confirmed'],\n                data=df_fr,\n                ax=axs[0], #First chart\n                palette = 'Blues')\nax1.set(xlabel='Month',ylabel='Number of confirmed cases',title='Number of covid-19 confirmed cases per month in France');\n\nax2=sns.barplot(x=labels,\n                y=df_fr['Deaths'],\n                data=df_fr,\n                ax=axs[1], #Second chart\n                color='Grey')\nax2.set(xlabel='Month',ylabel='Number of deaths cases',title='Number of covid-19 deaths per month in France');\n\nax3=sns.barplot(x=labels,\n                y=df_fr['Recovered'],\n                data=df_fr,\n                ax=axs[2], #Third chart\n                palette = 'Greens')\nax3.set(xlabel='Month',ylabel='Number of recovered cases',title='Number of covid-19 recovered cases per month in France');","a94fbc04":"- The 5 countries with the most recovered cases per month","3fe99e33":"# **Coronavirus study**\n\n**Introduction**\n\nThe coronavirus disease 2019 (COVID-19) was first identified in December 2019 in Wuhan, China, and has caused an ongoing pandemic. It is a contagious disease which spread very fast, so that more than 20 million cases were confirmed, causing more than 800,000 deaths at the end of August.\n\n**Motivation**\n\nI am a student and i first got interested by data science early this year. I decided to learn it so i watched videos and i went on specialized websites but i figured out the best way to learn it was to make my own project. This is when the idea of a second lockdown due to the covid-19 came on the news in France. This reminded me that there is a lot of data on this disease, and i also wanted to check the pure data to see if this was a good idea.\n\nIn this kernel, we will first see the global situation of the virus, then we'll see which countries have the most number of cases and finally we will conclude on the relevance of a second lockdown in France. It's a short kernel.\n\n**PS :** The following study do not take into account the values after the 08\/31\/2020 for the study 'per month' and 'per country'. The dataset is updated each day.\n\nAs a beginner, I hope this kernel can help other beginners on the use of Seaborn as well as Dataframe Manipulation. I tried to comment my code.\n","edd76b81":"The recovered chart has almost the same shape as the confirmed one, therefore we can think that it's the number of tests which is rising slowly.","3fd35255":"# **Global Study**\n\n1. Confirmed\/deaths\/recovered covid-19 cases according to the date","a7d82da7":"The number of confirmed cases increased exponentially till late August and then it tends to stagnate. Therefore either the number of tests is becoming stable, or the measures in most countries (social distancing, wear of masks) are well respected and efficient.","ad905bc3":"# Documentation\n\n- Go see this wonderful kernel from Fedi Ben Messaoud : https:\/\/www.kaggle.com\/fedi1996\/covid-19-analysis-visualization-and-comparaisons . He inspired me with his sum operation on the 'df_data' dataframe and on the scatter plot using plotly\n\n- Plotting data using Seaborn : https:\/\/seaborn.pydata.org\/api.html\n- Operations on DataFrames columns : https:\/\/queirozf.com\/entries\/pandas-dataframe-examples-column-operations#add-new-column\n- Rotate x or y label : https:\/\/www.drawingfromdata.com\/how-to-rotate-axis-labels-in-seaborn-and-matplotlib\n","67ee689c":"# The impact of the virus per country \n\nIn this section we will first see the situation on 08\/31\/2020 : which countries have the most confirmed\/deaths\/recovered cases ?\n\nThen we will show the top 5 countries with the most confirmed\/deaths\/recovered cases per month.\n\n**1. Situation on 08\/31\/2020**","47373d4a":"- Number of recovery cases according to the date","0158172b":"The US is in first position in most month because the virus touches many people and they make many tests. We can see that in March and April, the virus was circulating more in Europe. Then South America, India became the center of the pandemic.","7fbfe580":"- We can see that even if there is a growth in confirmed covid-19 cases, the number of recovered cases rise the same way so the number of deaths tend to stagnate\n- We can also see that the global lockdown of people is effective : The number of deaths decreased between April and May, the lockdown being in place during April or May in most countries. And it tends to slightly re-raise since the lockdown has been removed. Plus, the timing of the lockdown decision seems to be correct because the number of deaths went skyrocket in April","f0c4e7cb":"Scatter graph :","ca474567":"- The 20 countries with the most covid-19 deaths","3338e0c2":"Number of confirmed\/deaths\/recovered covid-19 cases per month :","05fbfc19":"# Other ideas that can provide some useful information :\n\n* First we can see in which countries the confirmed\/deaths\/recovered cases have gotten higher between two consecutive months\n* We can plot charts per population in the country, to see the proportion of the virus according to the country's population, but this information is not a part of the dataset\n* We can plot charts per number of tests per country","749f1529":"2.  Global study per month","16fafa1f":"First, we can see that the lockdown has been very efficient in France (the lockdown was in place from the 17th of March to the 11th of May).\n\nIn August, the number of confirmed cases went skyrocket, but the number of deaths is very low (compared to the other month), so with this data, we can think that the idea of a second lockdown is a bit exagirated because the rise of confirmed cases in August may be caused by a rise of tests.\n\nSo i searched a litlle bit of info on this matter especially on this website : https:\/\/www.cascoronavirus.fr\/test-depistage\/france\n\nWe see that around 4% of the tests are positive in late August whereas only 1-2% of them was positive in June-July. \n\nTo conclude, the idea of a second lockdown in France is founded, maybe too early, but scaring.","07a31bed":"- The 20 countries with the highest (deaths \/ confirmed cases) ratio on 08\/29\/2020","f356411b":"MS Zaandam boat is 2nd because of the low number of passengers.\n\nWe can see that the highest ratios are located in Europe, therefore we can try to make some conclusions :\n   - People in Europe are more sensitive to the virus (surely this is not the case)\n   - Countries in Europe don't make as many tests as some other big countries : making more tests will result in more recovered cases so the ratio will decrease\n   - In these countries the virus infected more sensitive people (aged people for example)\n    \n    \nIt would be nice to divide these values by the population of each country or by the number of tests in each country to make reliable conclusions.","ee16dec2":"Number of confirmed\/deaths\/recovered covid-19 cases per month in France :","62d6845d":"- Number of covid-19 confirmed cases according to the date","f05751b1":"- The 5 countries with the most confirmed cases per month","24479784":"# Coronavirus in France\n\nSo let's see if the idea of a new lockdown is a good idea","faac3418":"# Thanks for your interest !","f4fdbf0e":"- First we want to see which countries have the most confirmed cases on 8\/31\/2020 :","8a425c63":"2. Top 5 countries with the most confirmed\/deaths\/recovered cases per month","b507238e":"- Number of deaths according to the date","711c46df":"- Top 20 countries with the most recovered cases","4f447f4d":"- The 5 countries with the most deaths per month"}}