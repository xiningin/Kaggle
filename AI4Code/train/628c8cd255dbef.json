{"cell_type":{"a3510031":"code","e8fbad5a":"code","e389f838":"code","01f84dc3":"code","e0099f4b":"code","0a8ae4aa":"code","ba9048c3":"code","5961d6b3":"code","3d7fa79a":"code","a9b532ba":"code","1ef3a3ab":"code","00fd38a7":"code","2c696baf":"code","bde207bb":"markdown","b145cf17":"markdown","8c1c7f76":"markdown","aef77a8d":"markdown","f2d905ea":"markdown","591807d4":"markdown","5f14cb8f":"markdown","8612f588":"markdown","7f46cf88":"markdown","2031f87a":"markdown","60cb0dd6":"markdown","397e5823":"markdown","a8b94797":"markdown","e13eafef":"markdown","6ba5e36f":"markdown"},"source":{"a3510031":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom sklearn.metrics import mean_squared_error, r2_score\nimport warnings\nwarnings.filterwarnings('ignore')","e8fbad5a":"data = pd.read_csv('\/kaggle\/input\/covid19-india-cases-marchmay-2020\/data_16June.csv')\nd = data.values\ndates = d[:,0]\ndays = np.array(d[:,1],dtype='int16')\ncummulative_cases = np.array(d[:,2], dtype='float64')\ncummulative_deaths = np.array(d[:,3], dtype='float64')\ncummulative_recovered = np.array(d[:,4], dtype='float64')","e389f838":"def daily_data (y):\n  daily = [None]*len(y)\n  daily[0] = y[0]\n  for i in range(1,len(y)):\n    daily[i] = y[i]-y[i-1]\n  return np.array(daily)\n\ndaily_new_cases = daily_data(cummulative_cases)\ndaily_new_deaths = daily_data(cummulative_deaths)\ndaily_new_recovered = daily_data(cummulative_recovered)","01f84dc3":"def proportion (x,y):\n  prop = [None]*len(y)\n  for i in range(len(y)):\n    prop[i] = (y[i]\/x[i])*100\n  return np.array(prop)\n\nprop_death = proportion (cummulative_cases, cummulative_deaths)\nprop_recovered = proportion (cummulative_cases, cummulative_recovered)","e0099f4b":"def fit (x,y):\n  for i in range (0,101,5):\n    f = np.polyfit(x,y,deg=i)\n    fval = np.polyval(f,x)\n    print('Degree = %d \\tMSE = %10.2f \\t R^2 Score = %10.6f' %(i,mean_squared_error(y,fval),r2_score(y,fval)))","0a8ae4aa":"def my_plot(x,y,dates,n):\n  f = np.polyfit(x,y,deg=n)\n  fval = np.polyval(f,x)\n\n  date_list = []\n  pos = []\n  for i in range(len(dates)):\n    if i%5 == 0:\n        date_list.append(str(dates[i]).split()[0])\n        pos.append(i)\n\n  plt.plot(y,'ro',markersize=2)\n  plt.plot(fval,'g',linewidth=1)\n  plt.xticks(ticks=pos, rotation='vertical',labels=date_list)\n  plt.grid(which = 'both',axis='both')\n  plt.text(days[-1],y[-1],str(int(y[-1])))\n  plt.ylabel('Number of Cases')\n  plt.legend(['Actual Data (https:\/\/www.mohfw.gov.in\/)','Fitted curve'])\n  if n == 1:\n    print('\\nFitted curve for degree %d is Y = %fx + %f\\n' %(n,f[0],f[1]))\n  elif n == 2:\n    print('\\nFitted curve for degree %d is Y = %fx^2 + %fx + %f\\n' %(n,f[0],f[1],f[2]))\n  elif n == 3:\n    print('\\nFitted curve for degree %d is Y = %fx^3 + %fx^2 + %fx + %f\\n' %(n,f[0],f[1],f[2],f[3]))\n  elif n == 4:\n    print('\\nFitted curve for degree %d is Y = %fx^4 + %fx^3 + %fx^2 + %fx + %f\\n' %(n,f[0],f[1],f[2],f[3],f[4]))\n  elif n == 5:\n    print('\\nFitted curve for degree %d is Y = %fx^5 + %fx^4 + %fx^3 + %fx^2 + %fx + %f\\n' %(n,f[0],f[1],f[2],f[3],f[4],f[5]))\n  else:\n    pass","ba9048c3":"fit (days, cummulative_cases)\nmy_plot(days, cummulative_cases, dates, 5)\nplt.title('Cummulative cases of COVID-19 cases in India Mar-May 2020')\nplt.show()","5961d6b3":"fit (days, cummulative_deaths)\nmy_plot(days, cummulative_deaths, dates, 5)\nplt.title('Cummulative Deaths of COVID-19 in India Mar-May 2020')\nplt.show()","3d7fa79a":"fit (days, cummulative_recovered)\nmy_plot(days, cummulative_recovered, dates, 5)\nplt.title('Cummulative recovered cases of COVID-19 in India Mar-May 2020')\nplt.show()","a9b532ba":"fit (days, daily_new_cases)\nmy_plot (days, daily_new_cases, dates, 5)\nplt.title('Daily new cases of COVID-19 in India Mar-May 2020')\nplt.show()","1ef3a3ab":"fit (days, daily_new_deaths)\nmy_plot (days, daily_new_deaths, dates, 5)\nplt.title('Daily new deaths of COVID-19 in India Mar-May 2020')\nplt.show()","00fd38a7":"fit (days, daily_new_recovered)\nmy_plot (days, daily_new_recovered, dates, 5)\nplt.title('Daily new recovered cases of COVID-19 in India Mar-May 2020')\nplt.show()","2c696baf":"date_list = []\npos = []\nfor i in range(len(dates)):\n  if i%5==0:\n      date_list.append(str(dates[i]).split()[0])\n      pos.append(i)\n\nplt.plot(prop_death, 'r')\nplt.text(len(prop_death)-6,prop_death[-1],str(round(prop_death[-1],2)))\nplt.plot(prop_recovered, 'g')\nplt.text(len(prop_recovered)-6,prop_recovered[-1],str(round(prop_recovered[-1],2)))\nplt.legend(['Proportion of Death','Proportion of Recovered'])\nplt.ylabel('Proportion (%)')\nplt.grid(which='both',axis='both')\nplt.ylim([0,100])\nplt.title('Proportion of deaths and recovered cases COVID-19 in India Mar-May 2020')\nplt.xticks(ticks=pos, rotation='vertical',labels=date_list)\nplt.show()","bde207bb":"# 14. Comparison of proportions of deaths and recovered cases\n\nWe can observe that Recovery rate has begun to increase since mid april. Death rate is still constant around 3 and slightly decreasing. These are good signs.","b145cf17":"# 13. Analysis of daily new recovered","8c1c7f76":"# 10. Analysis of Cummulative Recovered cases","aef77a8d":"# 5. Determining proportion of deaths and recovered cases","f2d905ea":"# 4. Generating daily data from the cummulative data","591807d4":"# 11. Analysis of daily new cases","5f14cb8f":"# 7. Function to plot data and fitted data\n\nThis function plots the given data and the fitted data. Given data is considered from the uploaded data file. Fitted data is generated using $n$ degree polynomial.","8612f588":"# 2. Importing necessary modules","7f46cf88":"# 3. Extracting data from file","2031f87a":"# 8. Analysis of Cummulative Cases\nIt can be observed that after first week of april, the rate of increament of the cases shoot up.","60cb0dd6":"# 1. Introduction\n\nJupyter Notebook Created by Shardav Bhatt\n\nData reference: https:\/\/www.mohfw.gov.in\/ (upto 17 June 2020)\n\nIn this notebook, I have considered data of COVID-19 cases in India to perform curve fitting on it. The graphs given data and fitted data are shown. Separate graphs of number of cases, number of deaths and number of recovered are shown for cummulative data as well as daily data. The curve fitting is in terms of polynomial fitting based on method of least square.","397e5823":"# 6. Funtion to check best degreee of polynomial\nHere I am trying different degrees of polynomial and checking accuracy of it using Mean Squared Error and $R^2$ score. I am trying polynomials upto degree 100 to check which degree is best.","a8b94797":"# 9. Analysis of Cummulative deaths","e13eafef":"# 12. Analysis of daily new deaths","6ba5e36f":"# Curve fitting of COVID-19 cases of India\n\nCreated by (c) Shardav Bhatt on 17 June 2020\n"}}