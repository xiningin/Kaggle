{"cell_type":{"321ae25c":"code","8f06637f":"code","00f75776":"code","0f9b1efd":"code","6a327ca6":"code","fed9f809":"code","e293940a":"code","1d474a7a":"code","c516a4f0":"code","1c4eb4de":"code","911076fc":"code","01324357":"code","76a30cab":"code","e20fb78a":"code","ba18a91f":"code","47443761":"markdown","b737ecbb":"markdown","95af40ec":"markdown","45e3b2bc":"markdown","e3c0fedf":"markdown","32318e73":"markdown","0f4c44f4":"markdown","5b4b0dc4":"markdown","ae0530cc":"markdown","cadf5889":"markdown"},"source":{"321ae25c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","8f06637f":"df = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")","00f75776":"df.head()","0f9b1efd":"df.info()","6a327ca6":"from sklearn.preprocessing import LabelEncoder\n\nfor col in df.columns: # Consider each column (except 'y' column, we deal with that separately)\n    \n    # Generate labels for each value in column\n    le = LabelEncoder();\n    le.fit(df[col].unique());\n    \n    # Print labels\n    print('\\n' + col + ':');\n    for val in df[col].unique():\n        print(val, int(le.transform([val])));\n        \n    # Transform data    \n    df[col] = le.transform(df[col]);\n    \nprint('\\n Sample of transformed data-frame:');\n","fed9f809":"df.head()","e293940a":"X=df.iloc[:,1:]\ny=df.iloc[:,0]","1d474a7a":"X","c516a4f0":"y","1c4eb4de":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)","911076fc":"from sklearn.neural_network import MLPClassifier\n\nnn = MLPClassifier().fit(X_train, y_train);","01324357":"from sklearn.svm import SVC\n\nsvm = SVC(gamma = 'auto').fit(X_train, y_train);","76a30cab":"from sklearn import tree\n\ndt = tree.DecisionTreeClassifier().fit(X_train, y_train);","e20fb78a":"print(\"Accuracy for nn\");\nprint(\"Accuracy on train-set:\", \"%.2f\" %(nn.score(X_train, y_train)*100), '%');\nprint(\"Accuracy on test-set:\", \"%.2f\" %(nn.score(X_test, y_test)*100), '%');\nprint(\"Accuracy for svm\");\nprint(\"Accuracy on train-set:\", \"%.2f\" %(svm.score(X_train, y_train)*100), '%');\nprint(\"Accuracy on test-set:\", \"%.2f\" %(svm.score(X_test, y_test)*100), '%')\nprint(\"Accuracy for dtc\");\nprint(\"Accuracy on train-set:\", \"%.2f\" %(dt.score(X_train, y_train)*100), '%');\nprint(\"Accuracy on test-set:\", \"%.2f\" %(dt.score(X_test, y_test)*100), '%');\n","ba18a91f":"from sklearn.ensemble import RandomForestClassifier\nrand_clf = RandomForestClassifier(random_state=0)\nrand_clf.fit(X_train,y_train)\n\nrand_clf.score(X_test,y_test)","47443761":"Accuracy of models","b737ecbb":"SVMs","95af40ec":"READING THE DATA","45e3b2bc":"Machine learning","e3c0fedf":"DATA PRE PROCESSING ","32318e73":"Random forest classifier","0f4c44f4":"*THIS NOTEBOOK GIVES FEW MACHINE LEARNING MODELS FOR CLASSIFYING THE DIFFERENT TYPES OF MUSHROOM.*","5b4b0dc4":"neural networks","ae0530cc":"Decision trees","cadf5889":"# CLASSIFICATION OF MUSHROOMS."}}