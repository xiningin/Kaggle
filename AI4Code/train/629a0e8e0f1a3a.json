{"cell_type":{"7169c29b":"code","e45da994":"code","9dcd77e6":"code","aceae5ef":"code","2dcbfb4d":"code","18fdc47f":"code","b0f5a552":"code","37f59cd3":"code","5ffb223c":"code","cda7e964":"code","b9a6c386":"code","43094000":"code","e1138270":"code","90c53f09":"code","478db8d6":"code","629f6334":"code","0f689ec2":"code","7f37f46c":"code","0a63d4b3":"markdown","6435d60e":"markdown","32e85fbf":"markdown","7eafb7de":"markdown","b649233f":"markdown","e67f0363":"markdown","87984c4f":"markdown","ac577143":"markdown","506a68dd":"markdown","d2e90949":"markdown","2e6f376b":"markdown","f70f30c2":"markdown","7111b435":"markdown"},"source":{"7169c29b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e45da994":"# Read the data\ndata_df=pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")\n\n# See sample data\ndata_df.head()","9dcd77e6":"# Check for the dtypes & nulls\ndata_df.info()","aceae5ef":"# Just being doubly sure\ndata_df.isnull().sum()","2dcbfb4d":"# Getting some stats about the data\ndata_df.describe()","18fdc47f":"# Getting the numerical columns first\ndata_df.describe().columns","b0f5a552":"# Separating numerical and categorical data\ndf_num = data_df[['age','bmi','children','charges']]\ndf_cat = data_df[['sex','smoker','region']]","37f59cd3":"# Converting the categorical data into numeric data.\n# One hot enconding the categorical data\ndf1 = pd.get_dummies(df_cat)\ndf1","5ffb223c":"# Concatenating the categorical and numerical data to form our data set.\ndata = pd.concat([df_num,df1], axis=1)\ndata","cda7e964":"# Finding out the correlation between the features\ndata.corr()","b9a6c386":"# Heatmap to show correlation\nsns.heatmap(data.corr(), cmap='RdBu')","43094000":"# Correlation between charges and the other features.\ndata.corr()['charges'].sort_values()","e1138270":"# Graph showing the min and maximum charges\ncount, bin_edges = np.histogram(data['charges'])\ndata['charges'].plot(kind='hist', xticks=bin_edges, figsize=(20,12))\nplt.title(\"Patient Charges\")\nplt.show()","90c53f09":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","478db8d6":"x = data.drop(['charges'], axis = 1)\ny = data['charges']\n\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size=0.3, random_state = 0)\nlr = LinearRegression().fit(x_train,y_train)","629f6334":"y_train_pred = lr.predict(x_train)\ny_test_pred = lr.predict(x_test)\n\nprint(lr.score(x_test,y_test))","0f689ec2":"from sklearn.metrics import r2_score,mean_squared_error","7f37f46c":"print('MSE train data:' , mean_squared_error(y_train,y_train_pred))\nprint('MSE test data:' , mean_squared_error(y_test,y_test_pred))\n\nprint('R2 train data:', r2_score(y_train,y_train_pred))\nprint('R2 test data:' , r2_score(y_test,y_test_pred))","0a63d4b3":"our basic linear regression model predicting the cost of treatment looks good.","6435d60e":"## Import Data","32e85fbf":"## Motivation\nHi all, This is my first notebook. I am trying to perform a linear regression on personal health data set end to end. Any feedback and constuctive feedback is appreciated.","7eafb7de":"### Model fitting","b649233f":"## Model Building","e67f0363":"## Exploratory Data Analysis","87984c4f":"## Model Evaluation","ac577143":"From this we can see the following observations:\n\n1. Strong correlation between charges and smoker_yes.\n2. Weak correlation between charges and age.\n2. Weak correlation between charges and bmi. \n3. Weak correlation between bmi and region_southeast.\n\nSince the values for the weak correlations are less than 0.5 we can term them as insignificant and drop them","506a68dd":"We begin to predict the charges with the help of the other features.","d2e90949":"### Model prediction","2e6f376b":"The closely matching results between training and test data means that our model is accurate.","f70f30c2":"## Preprocessing the data","7111b435":"## Sampling the data"}}