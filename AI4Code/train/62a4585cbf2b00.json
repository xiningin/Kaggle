{"cell_type":{"82ef2351":"code","25f2263d":"code","32c8d412":"code","a5f6d11c":"code","b597cb6a":"code","deac6f3f":"markdown","31f9c0a7":"markdown","902b68d8":"markdown","a66adfc0":"markdown"},"source":{"82ef2351":"string = \"XXY YY ZZZ123ZZZ AAA BB C\"\nstring = sorted(string)\nletters = {}\nfor char in string:\n    if char.isupper() and char.isalpha():\n        if char in letters:\n            letters[char] += 1\n        else:\n            letters[char] = 1\nwhile any(value > 0 for key, value in letters.items()):\n    for key, value in letters.items():\n        max_len = max(letters.values())\n        if value == max_len:\n            # PROBLEM PRINTING HISTOGRAM VERTICALLY\n            letters[key] -= 1\nprint(' '.join([k for k in letters.keys()]))\n","25f2263d":"string = \"XXY YY ZZZ123ZZZ AAA BB C\"\nstring = sorted(string)\nletters = {}\nfor char in string:\n    if char.isupper() and char.isalpha():\n        if char in letters:\n            letters[char] += 1\n        else:\n            letters[char] = 1\nprint(letters)","32c8d412":"this_row = list()\nfor key, value in letters.items():\n    if value >=6:\n        this_row.append('*')\n    else:\n        this_row.append(' ')\nprint(''.join(this_row))","a5f6d11c":"def build_a_row(distribution_dict, height):\n    this_row = list()\n    for key, value in distribution_dict.items():\n        if value >= height:\n            this_row.append('*')\n        else:\n            this_row.append(' ')\n    return ''.join(this_row)\n\nfor count in range(max(letters.values()),0,-1):\n    print(build_a_row(letters, count))\n\nprint(''.join(letters.keys()))","b597cb6a":"max([x for x in letters.values()])","deac6f3f":"Asked by Travis:  Printing Vertical histogram\nThe code accepts a string of various characters and white spaces. The only thing that matters is the Capital Letters. The purpose is to count the number of capital letters and print them in alphabetical order as a VERTICAL histogram where a '*' is equal to a single count.\nExample: \"XXY YY ZZZ123ZZZ AAA BB C\"\nProduces (roughly this):\n```\n            *\n            *\n            *\n*         * *\n* *   * * *\n* * * * * *\nA B C X Y Z\n```\nHere is my code currently.  Any guidance would be appreciated. Thank you.","31f9c0a7":"#### Great!  It works for the top row.\nLet's convert the above into a function then count down from 6 to 1.\nFinally, print the \"keys\" which are the characters:","902b68d8":"Let's begin by confirming that the distribution is calculated properly:","a66adfc0":"Yes!  So the problem is only to print a vertical histogram.\nLet's only think about the very first line.  What is the correct thing to print on the first line?  Well since Z has the most characters you should print a \"*\" for it.  To indent properly, you should print spaces for the other characters.\n#### For the first line, what is a good algorithm?\nHow about \"Scan through each letter.  If its count is >= 6 then print \"*\", otherwise print \" \""}}