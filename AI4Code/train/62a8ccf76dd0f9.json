{"cell_type":{"b4ec63cd":"code","4e1fd580":"code","1cf8b6a4":"code","992be697":"code","5246b86c":"code","2b278a76":"code","269ca1a4":"code","55537cee":"code","fb76e38c":"code","16d15a4a":"code","dfa26af8":"code","4fdae0c0":"code","911e7a43":"markdown"},"source":{"b4ec63cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4e1fd580":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","1cf8b6a4":"df=pd.read_csv('..\/input\/Mall_Customers.csv')","992be697":"df.info()","5246b86c":"x=df.iloc[:,[3,4]].values\ny=df.iloc[:,1].values","2b278a76":"from sklearn.cluster import KMeans\nvalue=[]\nfor i in range(1,11):\n    cluster=KMeans(n_clusters=i)\n    cluster.fit(x)\n    value.append(cluster.inertia_)\nprint(value)\nplt.plot(value)\nplt.title('Elbow Method')\nplt.xlabel('No.of clusters')\nplt.ylabel('wcss value')","269ca1a4":"cluster=KMeans(n_clusters=5)\ngroup=cluster.fit_predict(x)","55537cee":"plt.figure(figsize=(10,6))\nplt.scatter(x[group==0,0],x[group==0,1],color='red',label='people who spend wisely')\nplt.scatter(x[group==1,0],x[group==1,1],color='black',label='rich people')\nplt.scatter(x[group==2,0],x[group==2,1],color='green',label='people who love to shop')\nplt.scatter(x[group==3,0],x[group==3,1],color='blue',label='people with lot of savings')\nplt.scatter(x[group==4,0],x[group==4,1],color='yellow',label='people who dont shop alot')\nplt.title('Groups of different people')\nplt.xlabel('Income')\nplt.ylabel('Score')\nplt.legend()\nplt.show()","fb76e38c":"from sklearn.preprocessing import LabelEncoder\nlabel_x=LabelEncoder()\ny=label_x.fit_transform(y)","16d15a4a":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)","dfa26af8":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nclassifier=DecisionTreeClassifier(criterion='entropy')\nclassifier.fit(x_train,y_train)\ny_pred=classifier.predict(x_test)\ncm=confusion_matrix(y_test,y_pred)\nscore=accuracy_score(y_test,y_pred)\nprint(cm)\nprint(\"Decision Tree Classifier accuracy score is \",score)","4fdae0c0":"from sklearn.ensemble import RandomForestClassifier\nclassifier= RandomForestClassifier(n_estimators=100)\nclassifier.fit(x_train,y_train)\ny_pred=classifier.predict(x_test)\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\nscore=accuracy_score(y_test,y_pred)\nprint(\"Random Forest Classifier accuracy score is \",score)","911e7a43":"# Data Information\n*Given data shows the information about the customers who visited mall and tells how good they were in shopping.The data has 5 coloumns, and each column has 200 entries.*\n  \n   * **CustomerID:** It specifies about the ID number of a specific customer. \n   * **Genre:** Tells about the gender of a person.\n   * **Age:** Gives us the age of a specific person\n   * **Annual Income:** Shows the salary of the customer per year.\n   * **Spending Score:** This is one of the important column which tells about the score of a customer. This score is given based on the factors like\n        * How much money is he\/she spending ?\n        * How frequently is he visiting the mall ?"}}