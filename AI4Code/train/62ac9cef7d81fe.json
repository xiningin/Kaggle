{"cell_type":{"4207f403":"code","45f6213a":"code","f399269c":"code","a73ca0e5":"code","6a50f04d":"code","bd68cc8d":"code","3c195ee5":"code","69a6ac3e":"code","f99051cb":"code","c4018a0e":"code","5699ffca":"code","86c467a3":"code","338692b1":"code","a1305561":"code","1de77c97":"code","f1eae902":"code","865e0c67":"code","e7b324e5":"code","7377eb2a":"code","b37179fe":"code","df27786e":"code","24b999f8":"code","ca52c721":"code","d82103a3":"code","6734a529":"code","1e857dd0":"code","9f446486":"code","7b12aefb":"code","ae54ae96":"code","63d028a7":"code","e3dae17e":"code","dff9517e":"code","74f18b12":"code","4e959956":"code","2af157b7":"code","047afaa6":"code","7aab8ec1":"code","0a7fe0ba":"code","0ea0056f":"code","98cd9c49":"code","a6ae25e2":"code","a5438619":"code","d055804e":"code","021b8c34":"code","f6dd85c1":"code","ea47af19":"code","b2b710af":"code","caa55227":"code","40228736":"code","f9934fd3":"code","ee4f0a66":"code","a548bbd8":"code","0a8358e0":"code","c639d669":"code","cae5879f":"code","9cf3cbd2":"code","8fe52bdb":"code","a010c9df":"code","8487f974":"markdown","d4e37e91":"markdown","13b79339":"markdown","f80a38c8":"markdown","a2a80237":"markdown","402d349a":"markdown","1df63d00":"markdown","d324c192":"markdown","5630b7a9":"markdown","ae7a663e":"markdown","7c9f4bdc":"markdown","7ac2d7cf":"markdown","3a3fb2f7":"markdown","6b962068":"markdown","6ad05601":"markdown","50a8bc80":"markdown"},"source":{"4207f403":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","45f6213a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","f399269c":"df=pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","a73ca0e5":"df.head()","6a50f04d":"df.info()","bd68cc8d":"df.isnull().sum()","3c195ee5":"df['bmi'].nunique()","69a6ac3e":"df['bmi'].mode()","f99051cb":"df['bmi']=df['bmi'].fillna(df['bmi']. mode()[0])","c4018a0e":"df.isnull().sum()","5699ffca":"df['smoking_status'].unique()","86c467a3":"df['smoking_status'].replace(to_replace='Unknown',value=df['smoking_status'].mode()[0],inplace=True)","338692b1":"df['smoking_status'].unique()","a1305561":"df['smoking_status'].value_counts()","1de77c97":"def diagram(variable):\n    plt.figure(figsize=(5,5))\n    sns.countplot(df[variable])","f1eae902":"diagram('work_type')","865e0c67":"diagram('gender')","e7b324e5":"diagram('hypertension')","7377eb2a":"diagram('heart_disease')","b37179fe":"diagram('ever_married')","df27786e":"diagram('Residence_type')","24b999f8":"diagram('smoking_status')","ca52c721":"diagram('stroke')","d82103a3":"df[\"stroke\"].nunique()","6734a529":"df['stroke'].value_counts()","1e857dd0":"## one hot encoding","9f446486":"df.info()","7b12aefb":"categorical=df.dtypes[df.dtypes=='object'].index","ae54ae96":"categorical","63d028a7":"cat=df[categorical]","e3dae17e":"cat.shape","dff9517e":"cat = pd.get_dummies(cat, drop_first=True)","74f18b12":"cat.head()","4e959956":"cat.shape","2af157b7":"numerical=df.dtypes[df.dtypes!='object'].index","047afaa6":"numerical","7aab8ec1":"num=df[numerical]","0a7fe0ba":"num.head()","0ea0056f":"## combining both numrical and catagorical","98cd9c49":"df1=pd.concat([cat,num],axis=1)","a6ae25e2":"df1","a5438619":"df1=df1.drop('id',axis=1)","d055804e":"df1","021b8c34":"X=df1.drop(\"stroke\", axis=1)","f6dd85c1":"y=df1.stroke","ea47af19":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.7)","b2b710af":"\nfrom imblearn.under_sampling import NearMiss","caa55227":"y_train.value_counts()","40228736":"from collections import Counter\nns=NearMiss(0.8)\nX_train_ns,y_train_ns=ns.fit_resample(X_train,y_train)\nprint(\"The number of classes before fit {}\".format(Counter(y_train)))\nprint(\"The number of classes after fit {}\".format(Counter(y_train_ns)))","f9934fd3":"## randam forest\nfrom sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier()\nclassifier.fit(X_train_ns,y_train_ns)","ee4f0a66":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\ny_pred=classifier.predict(X_test)\nprint(confusion_matrix(y_test,y_pred))\nprint(accuracy_score(y_test,y_pred))\nprint(classification_report(y_test,y_pred))","a548bbd8":"from imblearn.over_sampling import RandomOverSampler\nos=RandomOverSampler(0.75)\nX_train_ns,y_train_ns=os.fit_resample(X_train,y_train)\nprint(\"The number of classes before fit {}\".format(Counter(y_train)))\nprint(\"The number of classes after fit {}\".format(Counter(y_train_ns)))","0a8358e0":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier()\nclassifier.fit(X_train_ns,y_train_ns)","c639d669":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\ny_pred=classifier.predict(X_test)\nprint(confusion_matrix(y_test,y_pred))\nprint(accuracy_score(y_test,y_pred))\nprint(classification_report(y_test,y_pred))","cae5879f":"from imblearn.combine import SMOTETomek","9cf3cbd2":"st=SMOTETomek(0.75)\nX_train_ns,y_train_ns=st.fit_resample(X_train,y_train)\nprint(\"The number of classes before fit {}\".format(Counter(y_train)))\nprint(\"The number of classes after fit {}\".format(Counter(y_train_ns)))","8fe52bdb":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier()\nclassifier.fit(X_train_ns,y_train_ns)","a010c9df":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\ny_pred=classifier.predict(X_test)\nprint(confusion_matrix(y_test,y_pred))\nprint(accuracy_score(y_test,y_pred))\nprint(classification_report(y_test,y_pred))","8487f974":"### Read the data","d4e37e91":"### Import the packages","13b79339":"From the value count we came to know that the data is imbalanced","f80a38c8":"### Checking for the null values","a2a80237":"## Seperating the dependent and independent variable","402d349a":"## Train test split","1df63d00":"# Under sampling","d324c192":"## Checking the target variable","5630b7a9":"unknown values is treated as a null values hence we are replacing the unknow with the mode","ae7a663e":"### visualization","7c9f4bdc":"### seperating the catagorical data","7ac2d7cf":"## Seperating the numerical data","3a3fb2f7":"## one hot encoding","6b962068":"### Treating the null values","6ad05601":"# Smote","50a8bc80":"# over sampling\n"}}