{"cell_type":{"31387160":"code","95098e1b":"code","6dbc44a1":"code","b6e5be1e":"code","446f86c6":"code","943e3197":"code","7f952af7":"code","680f86fb":"code","1e69effb":"code","66507491":"code","a50df472":"code","b77da5af":"code","b96e9549":"code","b33c218d":"code","f8558fa0":"code","407e81f9":"code","f23f6842":"code","73b52c92":"code","6bef9cb1":"code","621825c4":"code","c0eeb68e":"code","9700b7a0":"markdown","11709566":"markdown","b52df215":"markdown","bbefbacd":"markdown","ce360dcf":"markdown","da72745c":"markdown","b16b4149":"markdown"},"source":{"31387160":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","95098e1b":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import linear_model\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\nimport numpy as np\n\ndata_frame = pd.read_csv('..\/input\/bike_share.csv')\ndata_frame.head()","6dbc44a1":"holidays_1 = data_frame['holiday'].values\nworking_days_1 = data_frame['workingday'].values\n\nweekend_1 = []\nfor i in range(len(holidays_1)):\n    if working_days_1[i] == 0 and holidays_1[i] == 0:\n        weekend_1.append(1)\n    else:\n        weekend_1.append(0)\n\ndata_frame['weekend'] = weekend_1\ndata_frame.head()","b6e5be1e":"data_frame_1 = data_frame.drop(columns=[\"registered\", \"count\"])\ndata_frame_2 = data_frame.drop(columns=[\"casual\", \"count\"])","446f86c6":"pd.set_option('display.max_columns', None)\npd.set_option('display.expand_frame_repr', False)\npd.set_option('max_colwidth', -1)\nprint(\"Co-relation coefficient for casual bikes\")\nprint(data_frame_1.corr())\n","943e3197":"print(\"Co-relation coefficient for registered bikes\")\nprint(data_frame_2.corr())","7f952af7":"plt.scatter(data_frame_1['weekend'], data_frame_1['casual'])\nplt.xlabel('Weekend')\nplt.ylabel('Number of casual bikes')\nplt.show()","680f86fb":"plt.scatter(data_frame_1['humidity'], data_frame_1['casual'], c='r')\nplt.xlabel('Humidity')\nplt.ylabel('Number of casual bikes')\nplt.show()","1e69effb":"plt.scatter(data_frame_1['atemp'], data_frame_1['casual'], c='r')\nplt.xlabel('feel_temperature')\nplt.ylabel('Number of casual bikes')\nplt.show()","66507491":"plt.scatter(data_frame_1['workingday'], data_frame_1['casual'])\nplt.xlabel('working_day')\nplt.ylabel('Number of casual bikes')\nplt.show()\n","a50df472":"plt.scatter(data_frame_2['humidity'], data_frame_2['registered'])\nplt.xlabel('humidity')\nplt.ylabel('Number of registered bikes')\nplt.show()","b77da5af":"plt.scatter(data_frame_2['atemp'], data_frame_2['registered'])\nplt.xlabel('feel_temperature')\nplt.ylabel('Number of registered bikes')\nplt.show()","b96e9549":"x1 = data_frame_1[['humidity', 'weekend', 'atemp', 'workingday']].values\ny1 = data_frame_1['casual'].values\n\nx2 = data_frame_1[['humidity', 'atemp']].values\ny2 = data_frame_2['registered'].values\n\ntrain_x1, test_x1, train_y1, test_y1 = train_test_split(x1, y1, test_size=0.2, random_state=4)\ntrain_x2, test_x2, train_y2, test_y2 = train_test_split(x2, y2, test_size=0.2, random_state=4)","b33c218d":"model_casual = linear_model.LinearRegression()\nmodel_casual.fit(train_x1, train_y1)\n\nmodel_registered = linear_model.LinearRegression()\nmodel_registered.fit(train_x2, train_y2)","f8558fa0":"predict_casual = model_casual.predict(test_x1)\npredict_registered = model_registered.predict(test_x2)","407e81f9":"print(\"For number of casual bikes\")\ntest_MSE_1 = mean_squared_error(test_y1, predict_casual)\ntest_MAE_1 = mean_absolute_error(test_y1, predict_casual)\nr2_value_1 = r2_score(test_y1, predict_casual)\nprint('test_MSE', test_MSE_1, 'test_MAE', test_MAE_1, 'r2_score', r2_value_1)","f23f6842":"plot_y_1 = np.vstack((test_y1, predict_casual))\nplot_y_1 = plot_y_1.T\nplot_y_1 = plot_y_1[np.argsort(plot_y_1[:, 1])]\nplot_x_1 = [i for i in range(len(test_y1))]\nplt.scatter(plot_x_1, plot_y_1[:, 0], c='r', label='true_value')\nplt.plot(plot_x_1, plot_y_1[:, 1], c='b', label='predicted_value')\nplt.show()","73b52c92":"print(\"For number of registered bikes\")\ntest_MSE_2 = mean_squared_error(test_y2, predict_registered)\ntest_MAE_2 = mean_absolute_error(test_y2, predict_registered)\nr2_value_2 = r2_score(test_y2, predict_registered)\nprint('test_MSE', test_MSE_2, 'test_MAE', test_MAE_2, 'r2_score', r2_value_2)","6bef9cb1":"plot_y_2 = np.vstack((test_y2, predict_registered))\nplot_y_2 = plot_y_2.T\nplot_y_2 = plot_y_2[np.argsort(plot_y_2[:, 1])]\nplot_x_2 = [i for i in range(len(test_y2))]\nplt.scatter(plot_x_2, plot_y_2[:, 0], c='r', label='true_value')\nplt.plot(plot_x_2, plot_y_2[:, 1], c='b', label='predicted_value')\nplt.show()","621825c4":"y_true_f = np.add(test_y1, test_y2)\ny_pred_f = np.add(predict_registered, predict_casual)\n\nMAE = mean_absolute_error(y_true_f, y_pred_f)\nMSE = mean_squared_error(y_true_f, y_pred_f)\nprint(\"Mean absolute error\", MAE)\nprint(\"Mean Squared error\", MSE)","c0eeb68e":"plot_y = np.vstack((y_true_f, y_pred_f))\nplot_y = plot_y.T\nplot_y = plot_y[np.argsort(plot_y[:, 1])]\nplot_x = [i for i in range(len(y_true_f))]\nplt.scatter(plot_x, plot_y[:, 0], c='r', label='true_value')\nplt.plot(plot_x, plot_y[:, 1], c='b', label='predicted_value')\nplt.show()","9700b7a0":"Co-relation coefficient measures the strength of the relationship between two variables. For this analysis, features having co-relation coefficient less than 0.2 are dropped or not considered while modelling.(Since, their relationship strength is too weak).\n\nNote: The number of casual bikes have four features (weekend, humidity, workingday, atemp) which have co-relational coefficient greater than 0.2, while number of registered bikes have only two feature with co-relational coefficient greater than 0.2 (atemp and humidty).","11709566":"The number of registered bikes as can be seen from the plot above isn't measured accurately using the features present in the data-set. Mean absolute error is around 99 and r2 score for the fit line is close to 0.17, which suggests a poorly fitted regresion line.\n\nThis suggests that to predict number of registered bikes, we certainly need more features and linear regression model isn't entirely collect for its prediction. ","b52df215":"Data_Visualisation for number of registered bikes.","bbefbacd":"In the above data-set, we notice a column for week-end is missing. Apart from holidays and working-days, a third parameter for week-end is added to the data-frame.","ce360dcf":"Data_Visualisation for number of casual bikes.","da72745c":"Mean absolute error for the number of casual bikes is around 25, whereas r2 score is 0.44. The above plot shows the scatter plot of true values and fit line.","b16b4149":"Total number of bikes (count) is the sum of number of registered and casual bikes. On any random day, the registered bikes used and casual bikes used would be independent of each other. Also, it can be intutively concluded that number of registered bikes and number of casual bikes used on a random day would depend differently on the features listed in the data-set.\n\nOne such example,it maybe possible that on a working-day the number of casual bikes used would be less while number of registered bikes used would be greater. This example on an intutive level seems plausible, since people on working day are less likely to casually use bikes for some work.\n\nSo we model this using linear regression. First on any random day, we calculate number of casual bikes used based on the features in the data-set. And then we calculate the number of registered bikes used. The summation of these two predict the values of total number of bikes used."}}