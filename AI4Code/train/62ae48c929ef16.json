{"cell_type":{"0d35c769":"code","d5b129df":"code","e1086b53":"code","550269bd":"code","b5215142":"code","db405966":"code","21a53bd1":"code","692410de":"code","e80562bc":"code","1db19ecc":"code","29ba7b92":"code","7778bad6":"markdown","7a46e2b2":"markdown","cf0dc312":"markdown","fa2af017":"markdown"},"source":{"0d35c769":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d5b129df":"import matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression","e1086b53":"df = pd.read_csv('\/kaggle\/input\/salary\/Salary.csv')\ndf.head()","550269bd":"X = df.iloc[:, :-1].values    # Features => Years of experience => Independent Variable\ny = df.iloc[:, -1].values     # Target => Salary => Dependent Variable\n\nX","b5215142":"y","db405966":"# divide the dataset in some amount of training and testing data\nfrom sklearn.model_selection import train_test_split\n\n# random_state => seed value used by random number generator\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","21a53bd1":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)","692410de":"predictions = model.predict(X_test)\npredictions","e80562bc":"y_test","1db19ecc":"import seaborn as sns\nsns.distplot(predictions-y_test)","29ba7b92":"plt.scatter(X_train, y_train, color='red')\nplt.plot(X_train, model.predict(X_train))","7778bad6":"### Plotting the Best-fit Linear Regression Graph\n\n* Formula for the Linear Regression : Salary = B0 + B1*(Experience)\n* B0 = intercept => salary when experience is 0, B1 = slope => increase in salary with unit increase in salary","7a46e2b2":"### Implement Classifier based on Simple Linear Regression","cf0dc312":"### Divide the complete dataset into training and testing data","fa2af017":"### Split the dataset into Independent(X) and Dependent(y) Variables"}}