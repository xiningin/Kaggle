{"cell_type":{"9fe6edbd":"code","14d52a81":"code","ed547e70":"code","fcd0fafe":"code","2b2aa370":"code","283c683b":"code","ad183f13":"code","9ec2456d":"code","9b5338a9":"code","2ebda71e":"code","134fadd7":"code","82690537":"code","f2cc16e5":"code","8003d224":"code","b81cdfbd":"code","7d49fd98":"code","b99ca7bb":"code","3516e1ea":"code","0f1932d4":"code","33da2869":"code","a2d4e87f":"code","62b53906":"code","f2d0c9ac":"code","7137ea68":"code","352a266d":"code","e140831b":"code","b85b55b2":"code","ed51408f":"code","cc79d313":"code","c118c62e":"code","33b99dba":"code","bd76fed9":"code","d06b2737":"code","d0900ed3":"code","4201fbae":"code","e462299a":"code","07248e12":"code","c09d8b70":"code","0f43afb8":"code","645be3cc":"code","1761592f":"code","d2ef582b":"code","e0fd040b":"code","cd7bd8bf":"markdown","63bbda0e":"markdown","1f95b6fe":"markdown","f124233f":"markdown","afc76a54":"markdown","d673f431":"markdown","b92f6575":"markdown","e13a0357":"markdown","ec2b8ea6":"markdown","772fc9f0":"markdown","a05566d3":"markdown","6fb2f89b":"markdown","2eabd986":"markdown","17b80780":"markdown","29246e82":"markdown","ed76bbf5":"markdown","ea03f7e2":"markdown","1b15d50b":"markdown","db7a60e7":"markdown"},"source":{"9fe6edbd":"import pandas as pd \npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('dark')\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","14d52a81":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head()","ed547e70":"test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","fcd0fafe":"train.info()","2b2aa370":"test.info()","283c683b":"train[\"Survived\"].value_counts(normalize=True)","ad183f13":"g=sns.countplot(x=train[\"Survived\"]).set_title(\"Survivor Count\")","9ec2456d":"a=sns.countplot(train[\"Sex\"]).set_title(\"Passenger count by Sex\")","9b5338a9":"plt.title(\"Survival Rate by Sex\")\nb=sns.barplot(x='Sex',y='Survived',data=train).set_ylabel(\"Survival Rate\")","2ebda71e":"train.groupby('Pclass').Survived.mean()","134fadd7":"a = sns.countplot(x='Pclass', hue='Survived', data=train).set_title('Survivors by class')","82690537":"plt.title(\"Survival Rate by Pclass\")\nb = sns.barplot(x='Pclass', y='Survived', data=train).set_ylabel('Survival Rate')","f2cc16e5":"train.groupby(['Pclass','Sex']).Survived.mean()","8003d224":"plt.title(\"Survival Rate by Pclass and Sex\")\ng=sns.barplot(x='Pclass',y='Survived',hue='Sex',data=train).set_ylabel(\"Survival Rate\")","b81cdfbd":"fig, axarr = plt.subplots(1,2,figsize=(12,6))\naxarr[0].set_title('Age distribution')\nf = sns.distplot(train['Age'], color='red', bins=40, ax=axarr[0])\naxarr[1].set_title('Age distribution for the two subpopulations')\ng = sns.kdeplot(train['Age'].loc[train['Survived'] == 1], \n                shade= True, ax=axarr[1], label='Survived').set_xlabel('Age')\ng = sns.kdeplot(train['Age'].loc[train['Survived'] == 0], \n                shade=True, ax=axarr[1], label='Not Survived')","7d49fd98":"g = sns.swarmplot(y='Sex', x='Age', hue='Survived', data=train).set_title('Survived by age and sex')","b99ca7bb":"train.Fare.describe()","3516e1ea":"f = sns.distplot(train.Fare, color='b').set_title('Fare distribution')\nfare_ranges = pd.qcut(train.Fare, 4, labels = ['Low', 'Mid', 'High', 'Very high'])","0f1932d4":"g = sns.barplot(x=fare_ranges, y=train.Survived).set_ylabel('Survival rate')","33da2869":"a = sns.swarmplot(x='Sex', y='Fare', hue='Survived',data=train).set_title('Survived by fare and sex')","a2d4e87f":"sns.countplot(train['Embarked']).set_title('Passengers count by boarding point')","62b53906":"p = sns.countplot(x = 'Embarked', hue = 'Survived', data = train).set_title('Survivors by boarding point')","f2d0c9ac":"g = sns.countplot(data=train, x='Embarked', hue='Pclass').set_title('Pclass count by boarding point')","7137ea68":"train['Title'] = train['Name'].apply(lambda x: x.split(',')[1].split('.')[0].strip())\ntest['Title'] = test['Name'].apply(lambda x: x.split(',')[1].split('.')[0].strip())","352a266d":"train['Title'].value_counts()","e140831b":"test['Title'].value_counts()","b85b55b2":"train['Title'].replace(['Mme', 'Ms', 'Lady', 'Mlle', 'the Countess', 'Dona'], 'Miss', inplace=True)\ntest['Title'].replace(['Mme', 'Ms', 'Lady', 'Mlle', 'the Countess', 'Dona'], 'Miss', inplace=True)\n\ntrain['Title'].replace(['Major', 'Col', 'Capt', 'Don', 'Sir', 'Jonkheer'], 'Mr', inplace=True)\ntest['Title'].replace(['Major', 'Col', 'Capt', 'Don', 'Sir', 'Jonkheer'], 'Mr', inplace=True)","ed51408f":"train.groupby('Title').Survived.mean()","cc79d313":"plt.title('Survival rate by Title')\ng = sns.barplot(x='Title', y='Survived', data=train).set_ylabel('Survival rate')","c118c62e":"fig, axarr = plt.subplots(1,2,figsize=(12,6))\na = sns.countplot(train['SibSp'], ax=axarr[0]).set_title('Passengers count by SibSp')\naxarr[1].set_title('Survival rate by SibSp')\nb = sns.barplot(x='SibSp', y='Survived', data=train, ax=axarr[1]).set_ylabel('Survival rate')","33b99dba":"fig, axarr = plt.subplots(1,2,figsize=(12,6))\na = sns.countplot(train['Parch'], ax=axarr[0]).set_title('Passengers count by Parch')\naxarr[1].set_title('Survival rate by Parch')\nb = sns.barplot(x='Parch', y='Survived', data=train, ax=axarr[1]).set_ylabel('Survival rate')","bd76fed9":"g  = sns.catplot(x=\"Parch\",y=\"Survived\",data=train, height = 8)\ng = g.set_ylabels(\"Survival Percentage\")","d06b2737":"g  = sns.catplot(x=\"SibSp\",y=\"Survived\",data=train, height = 8)\ng = g.set_ylabels(\"Survival Percentage\")","d0900ed3":"train['Fam_size'] = train['SibSp'] + train['Parch'] + 1\ntest['Fam_size'] = test['SibSp'] + test['Parch'] + 1","4201fbae":"plt.title('Survival rate by family size')\ng = sns.barplot(x=train.Fam_size, y=train.Survived).set_ylabel('Survival rate')","e462299a":"g  = sns.catplot(x=\"Fam_size\",y=\"Survived\",data=train, height = 8)\ng = g.set_ylabels(\"Survival Percentage\")","07248e12":"train['Fam_type'] = pd.cut(train.Fam_size, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])\ntest['Fam_type'] = pd.cut(test.Fam_size, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])","c09d8b70":"plt.title('Survival rate by family type')\ng = sns.barplot(x=train.Fam_type, y=train.Survived).set_ylabel('Survival rate')","0f43afb8":"y = train['Survived']\nfeatures = ['Pclass', 'Sex', 'Fare', 'Title', 'Embarked', 'Fam_type']\nX = train[features]\nX.head()","645be3cc":"numerical_cols = ['Fare']\ncategorical_cols = ['Pclass', 'Sex', 'Title', 'Embarked', 'Fam_type']\n\n# Preprocessing for numerical data\nnumerical_transformer = SimpleImputer(strategy='median')\n\n# Preprocessing for categorical data\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder())\n])\n\n# Bundle preprocessing for numerical and categorical data\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numerical_transformer, numerical_cols),\n        ('cat', categorical_transformer, categorical_cols)\n    ])\n\n# Bundle preprocessing and modeling code \ntitanic_pipeline = Pipeline(steps=[('preprocessor', preprocessor),\n                              ('model', RandomForestClassifier(random_state=0, \n                                                               n_estimators=500, max_depth=5))\n                             ])\n\n# Preprocessing of training data, fit model \ntitanic_pipeline.fit(X,y)\n\nprint('Cross validation score: {:.3f}'.format(cross_val_score(titanic_pipeline, X, y, cv=10).mean()))","1761592f":"X_test = test[features]\nX_test.head()","d2ef582b":"predictions = titanic_pipeline.predict(X_test)","e0fd040b":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint('Your submission was successfully saved!')","cd7bd8bf":"**The survival rate is higher for people who spent more**","63bbda0e":"From class 3 only around 24% of them survived whereas the people from the higher class easily survived<br>\nThe visualisation will give a clearer picture","1f95b6fe":"There is a higher proportion of first and second class passengers from Cherbourg and Queenstown than in Sounthampton where there is a majority of people from third class","f124233f":"The majority of people on the Titanic embarked from Southampton which makes sense since that's where it started from<br>\nLooking by survivors, more people who embarked at Cherbourg survived that died.<br>\nOne its own, we can't derive anything but when coupled with Pclass","afc76a54":"**SibSp and Parch**","d673f431":"**Missing values**: Age, Fare, Cabin, Embarked","b92f6575":"Only 38.3 % survived in the train data","e13a0357":"**Name**<br>\nThis is one of the features I never considered till now","ec2b8ea6":"****Passenger Class(Pclass)****<br>\nThere were 3 classes on the ship and survival of the passengers from each class is shown below","772fc9f0":"**With such a huge difference between 75% to max, it shows that this distribution is positively skewed**<br>\nAnother thing to note would be that people who paid more fare survived","a05566d3":"**Modelling**","6fb2f89b":"****Fare****","2eabd986":"**What about the gender and class correlation???**","17b80780":"****Feature Analysis****<br>\nI learnt the features to consider from this notebook majorly ->[https:\/\/www.kaggle.com\/mviola\/titanic-eda-simple-model-0-80861?rvi=1](http:\/\/)","29246e82":"**Age**<br>\nFrom the training data alone there are 177 missing values that are present but this is always a good feature to use in some of my previous models that I tried","ed76bbf5":"**Most of the people from ages 20 till 30 atleast have survived. Other than that nothing else can be derived**<br>\nIf we consider the gender feature","ea03f7e2":"From this we can see that most of the male survivors were below around 11 or 12 whereas for females there is no such thing","1b15d50b":"****96.8% of females from Class 1 and 92.1% from Class 2 survived but this drops all the way to 50% for Class 3 women****","db7a60e7":"****Embarked****<br>\nThere are three destinations that are present in the dataset<br>\n* Southampton(S)\n* Cherbourg(C)\n* Queenstown(Q)<br>\nFirst let's see how the survivors count is from each point"}}