{"cell_type":{"7cb669ce":"code","52ce6c33":"code","aa9166b7":"code","6e23f901":"code","b4a0e7b3":"code","521c03ee":"code","263c8cf6":"code","867957da":"code","cdb6c33f":"code","87ea7f02":"code","dfca6e26":"code","2e9aa412":"code","0731a2ea":"code","43641e46":"code","abb4de82":"code","aace8efb":"code","5fb96c7d":"code","cbbcf587":"code","4d6f63cf":"code","a2fb620f":"code","c3b61cda":"code","80cdfb87":"code","69fdf236":"code","cadabbb7":"code","8c07ce00":"code","58d8da7a":"code","3dde00ec":"code","314cf583":"code","a4278ec3":"code","600c3380":"code","d3279f15":"code","bf3d0d94":"code","4723db20":"code","b8398405":"code","291fb307":"code","cd3cc568":"code","441a05cd":"markdown"},"source":{"7cb669ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.model_selection import StratifiedShuffleSplit\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import randint\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","52ce6c33":"df = pd.read_csv('..\/input\/motorcycle-dataset\/BIKE DETAILS.csv')\ndf.head()","aa9166b7":"df.info()","6e23f901":"for i in df.select_dtypes(include='object'):\n    print(df[i].value_counts(), end='\\n'*3)","b4a0e7b3":"df.replace({'1st owner':1, '2nd owner':2, '3rd owner':3, '4th owner':4}, inplace=True)\ndf.rename(columns = {'owner':'prev_owners'}, inplace=True)","521c03ee":"current_year = 2020\ndf['age'] = current_year - df['year']","263c8cf6":"df.drop(['year','name'], axis=1, inplace=True)","867957da":"df_2 = df.copy()\nnew_df = df.dropna().copy()","cdb6c33f":"impute = SimpleImputer(strategy = 'median')\n\ndf_2_num = df_2.select_dtypes(exclude='object')\ndf_2_cat = df_2['seller_type']\nx = impute.fit_transform(df_2_num)","87ea7f02":"df_2 = pd.DataFrame(x, columns=df_2.select_dtypes(exclude='object').columns).copy()\n\ndf_2['seller_type'] = df_2_cat","dfca6e26":"new_df.head()","2e9aa412":"new_df.hist(figsize=(20,15), grid=0, bins=20);","0731a2ea":"new_df[new_df.selling_price>100000]","43641e46":"new_df['price_category'] = pd.cut(new_df['selling_price'], bins=[0,50000,100000,np.inf],labels=[1,2,3])","abb4de82":"split = StratifiedShuffleSplit(random_state=42, n_splits=1, test_size=0.25)\n\nfor i,j in split.split(new_df, new_df['price_category']):\n    new_df_train = new_df.iloc[i]\n    new_df_test = new_df.iloc[j]","aace8efb":"for i in (new_df_train, new_df_test):\n    i.drop('price_category', axis=1, inplace=True)","5fb96c7d":"new_df_train.corr()","cbbcf587":"sns.pairplot(new_df_train);","4d6f63cf":"new_df_train_labels = new_df_train['selling_price']\nnew_df_train.drop('selling_price', axis=1, inplace=True)","a2fb620f":"num = new_df_train.select_dtypes(exclude='object').columns\ncat = new_df_train.select_dtypes(include='object').columns","c3b61cda":"col_transformer = ColumnTransformer([('num',StandardScaler(), num),('cat', OneHotEncoder(), cat)])\ncol_transformer","80cdfb87":"new_df_train_prepared = col_transformer.fit_transform(new_df_train)\nnew_df_train_prepared","69fdf236":"new_df_train_prepared = pd.DataFrame(new_df_train_prepared)\nnew_df_train_prepared","cadabbb7":"new_df_train_prepared.drop(5, axis=1, inplace=True)","8c07ce00":"lr = LinearRegression()\nlr.fit(new_df_train_prepared, new_df_train_labels)","58d8da7a":"def pred_and_score(model, df, labels):\n    pred = model.predict(df)\n    mse = mean_squared_error(labels, pred)\n    rmse = np.sqrt(mse)\n    r2 = r2_score(labels, pred)\n    mae = mean_absolute_error(labels, pred)\n\n    print(f\"RMSE: {rmse}\\nr2_score: {r2}\\nMAE: {mae}\")","3dde00ec":"pred_and_score(lr, new_df_train_prepared, new_df_train_labels)","314cf583":"custom_train = new_df_train_prepared[[1,2,3]].copy()","a4278ec3":"lr2 = LinearRegression()\nlr2.fit(custom_train, new_df_train_labels)","600c3380":"pred_and_score(lr2, custom_train, new_df_train_labels)","d3279f15":"dt = DecisionTreeRegressor(random_state=42)\ndt.fit(new_df_train_prepared, new_df_train_labels)\n\npred_and_score(dt, new_df_train_prepared, new_df_train_labels)","bf3d0d94":"x_test = new_df_test.drop('selling_price', axis=1)\ny_test = new_df_test['selling_price']","4723db20":"test_prepared = col_transformer.transform(x_test)\ntest_prepared","b8398405":"test_prepared = pd.DataFrame(test_prepared).drop(5, axis=1)","291fb307":"pred_and_score(dt, test_prepared, y_test)","cd3cc568":"pred_and_score(lr, test_prepared, y_test)","441a05cd":"# On test data"}}