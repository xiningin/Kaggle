{"cell_type":{"d10104b7":"code","13d5821d":"code","e0d215b3":"code","567c8611":"code","fa7ff83f":"code","2917dd12":"code","ff56f403":"code","08df5d15":"code","1eced181":"code","7ededcc3":"code","6c0096be":"code","d004f196":"code","ea7fb12e":"code","2c919ed0":"code","2c713e2f":"code","0226e031":"code","1a06763b":"code","2f70c83c":"code","f75a1a92":"code","864f4d53":"code","9d8fbd80":"code","3347320a":"code","a1bf7258":"code","adc7ee0e":"code","4980f2a0":"code","e7dba14b":"code","3dd6226b":"code","26a20ac3":"code","0d858f7e":"code","4e22695d":"code","598e4de8":"code","bb6d2ca7":"code","94122164":"code","b68fc8aa":"code","49ab25eb":"code","9e01afff":"code","d08bd5f2":"code","593a0c62":"code","4d1023ba":"code","a8cd7867":"code","15132839":"code","3f356b1f":"code","ea9210b9":"code","c9468c73":"code","e8f2e061":"code","59e59870":"code","171b6df2":"code","8c511f3a":"code","59766bda":"markdown","662abdf4":"markdown","3bd77750":"markdown","39c48546":"markdown","25fe075b":"markdown","caf41b78":"markdown","991656f5":"markdown","9700e1cd":"markdown","c246285a":"markdown","c15b2774":"markdown","92bbccbb":"markdown","81a9c5cc":"markdown","51a2c22c":"markdown","66cb8b1b":"markdown"},"source":{"d10104b7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","13d5821d":"train=pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.head()","e0d215b3":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest.head()","567c8611":"train.describe()","fa7ff83f":"sns.heatmap(train.isnull(),cbar=False,yticklabels=False,cmap='viridis')","2917dd12":"sns.heatmap(test.isnull(),cbar=False,yticklabels=False,cmap='viridis')","ff56f403":"train.info()","08df5d15":"test.info()","1eced181":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train)","7ededcc3":"sns.countplot(x='Survived',data=train,hue='Sex')","6c0096be":"sns.countplot(x='Survived',data=train,hue='Sex')","d004f196":"sns.countplot(x='Survived',data=train,hue='Pclass')","ea7fb12e":"sns.distplot(train['Age'].dropna(),kde=False,color='blue')","2c919ed0":"sns.countplot(x='SibSp',data=train)","2c713e2f":"train['Fare'].hist(color='green',bins=40,figsize=(8,4))","0226e031":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass',y='Age',data=train)","1a06763b":"class_group=train.groupby('Pclass')\nclass_group.mean()","2f70c83c":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 38.2\n\n        elif Pclass == 2:\n            return 29.8\n\n        else:\n            return 25.1\n\n    else:\n        return Age","f75a1a92":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","864f4d53":"sns.heatmap(train.isnull(),cbar=False,yticklabels=False,cmap='viridis')","9d8fbd80":"train.drop('Cabin',axis=1,inplace=True)","3347320a":"train.dropna(inplace=True)","a1bf7258":"train.info()","adc7ee0e":"class_group=test.groupby('Pclass')\nclass_group.mean()","4980f2a0":"def fill_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 40.6\n\n        elif Pclass == 2:\n            return 28.8\n\n        else:\n            return 24.3\n\n    else:\n        return Age","e7dba14b":"test['Age'] = test[['Age','Pclass']].apply(fill_age,axis=1)","3dd6226b":"test.drop('Cabin',axis=1,inplace=True)","26a20ac3":"test[test['Fare'].isnull()]","0d858f7e":"test.fillna(value=12.4,inplace=True)","4e22695d":"test.info()","598e4de8":"train['Sex']=train['Sex'].map({'female':0, 'male':1}).astype(int)","bb6d2ca7":"train['Embarked'] = train['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)","94122164":"test['Sex']=test['Sex'].map({'female':0, 'male':1}).astype(int)","b68fc8aa":"test['Embarked'] = test['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)","49ab25eb":"train.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","9e01afff":"test.drop(['Name','Ticket'],axis=1,inplace=True)","d08bd5f2":"x_train=train.drop('Survived',axis=1)\ny_train=train['Survived']\nx_test=test.drop('PassengerId',axis=1)","593a0c62":"from sklearn.linear_model import LogisticRegression","4d1023ba":"logmodel=LogisticRegression(max_iter=1000)\nlogmodel.fit(x_train,y_train)","a8cd7867":"predictions=logmodel.predict(x_test)","15132839":"logmodel.score(x_train,y_train)","3f356b1f":"from sklearn.tree import DecisionTreeClassifier","ea9210b9":"dtree=DecisionTreeClassifier()","c9468c73":"dtree.fit(x_train,y_train)","e8f2e061":"Tpredictions=dtree.predict(x_test)","59e59870":"dtree.score(x_train,y_train)","171b6df2":"df=pd.DataFrame({'PassengerId': test['PassengerId'],\n                  'Predictions': Tpredictions  })","8c511f3a":"df.to_csv('submission1.csv',index=False)","59766bda":"Repeat the same procedure for test data also","662abdf4":"Now let's check that heat map again!","3bd77750":"Great! Our data is ready for our model!\n\n# Building Machine Learning models\n\nLet's start by splitting our data into a training set and test set","39c48546":"Now apply that function!","25fe075b":"Let's continue on by visualizing some more of the data!","caf41b78":"# Exploratory Data Analysis\n\nLet's begin some exploratory data analysis! We'll start by checking out missing data!\n","991656f5":"## Logistic Regression model","9700e1cd":"Great! Let's go ahead and drop the Cabin column and the row in Embarked that is NaN.","c246285a":"## The Data\n\nLet's start by reading the train.csv and test.csv file into a pandas dataframe.","c15b2774":"##  DecisionTreeClassifier","92bbccbb":"## Data Cleaning\nWe want to fill in missing age data instead of just dropping the missing age data rows. One way to do this is by filling in the mean age of all the passengers.\n\ncheck the average age by passenger class, For example:\n","81a9c5cc":"## Converting Categorical Features \n\nWe'll need to convert categorical features to dummy variables using pandas! Otherwise our machine learning algorithm won't be able to directly take in those features as inputs.","51a2c22c":"# Titanic EDA and ML Modeling\n\nLet's import some libraries to get started!","66cb8b1b":"Roughly 20 percent of the Age data is missing. The proportion of Age missing is likely small enough for reasonable replacement with some form of imputation. Looking at the Cabin column, it looks like we are just missing too much of that data to do something useful with at a basic level. We'll probably drop this later"}}