{"cell_type":{"32477880":"code","483654df":"code","215a3a62":"code","6620327f":"code","cb1a6ef3":"code","262e6e4b":"code","f5a3ec6b":"code","a5badbf8":"code","f16d5deb":"code","6a68308b":"code","517e7128":"code","db37a8ff":"code","8262e318":"code","a81e26bd":"code","21ad5ed8":"markdown","f0692b5e":"markdown","babbcddd":"markdown","555f5596":"markdown","ca2ca39e":"markdown","1582b15f":"markdown","73ce2b2d":"markdown","3fa3c578":"markdown"},"source":{"32477880":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nimport matplotlib.pyplot as plt\nimport numpy as np \nimport seaborn as sns","483654df":"\n\ndf= pd.read_csv(\"..\/input\/winequality-red.csv\")\n","215a3a62":"correlation=df.corr()\nfig=plt.subplots(figsize=(10,10))\nsns.heatmap(correlation,vmax=1,square=True, annot=True,cmap='Reds')","6620327f":"def get_features(correlation_threshold):\n    abs_corrs = correlation.abs()\n    high_correlations= abs_corrs[abs_corrs > correlation_threshold].index.values.tolist()\n    return high_correlations","cb1a6ef3":"features=get_features(0.05)\nprint(features)\nx=df[features]\ny=df['quality']","262e6e4b":"x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=3)","f5a3ec6b":"regressor=LinearRegression()\nregressor.fit(x_train,y_train)\nprint(regressor.coef_)\n","a5badbf8":"train_pred=regressor.predict(x_train)\nprint(train_pred)\ntest_pred =regressor.predict(x_test)\nprint(test_pred)","f16d5deb":"\ntrain_rmse = mean_squared_error(train_pred, y_train) ** 0.5\ntrain_rmse\n","6a68308b":"test_rmse=(mean_squared_error(test_pred, y_test) ** 0.5)\ntest_rmse","517e7128":"train_rmse=(mean_squared_error(train_pred, y_train) ** 0.5)\ntrain_rmse","db37a8ff":"predicted_data=np.round(test_pred)\nprint(predicted_data)","8262e318":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, test_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, test_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, test_pred)))","a81e26bd":"coeffecients = pd.DataFrame(regressor.coef_,features) \ncoeffecients.columns = ['Coeffecient'] \nprint(coeffecients)","21ad5ed8":"Calculating Root mean squared error","f0692b5e":"# Wine Quality Prediction using LinearRegression","babbcddd":"Define a function get_features()which outputs only those features whose correlation is above a threshold value","555f5596":"Training the dataset to the model","ca2ca39e":"taking features with correlation more than 0.05 as input x and quality as target variable y ","1582b15f":"fitting linear regression to training data","73ce2b2d":"To predict the quality of wine with this model, use predict().","3fa3c578":"rounding off the predicted values for test set"}}