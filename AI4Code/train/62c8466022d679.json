{"cell_type":{"c990c600":"code","ceabbd12":"code","64e7f0bf":"code","43a0cecf":"code","8ac89087":"code","827da318":"code","ab3a84d5":"code","5cc1a2dc":"code","d26bde43":"code","d546f550":"code","86c9ca53":"code","c510de5f":"code","7b20fdf3":"code","fff42cfb":"code","1a149da1":"code","d6b04c0c":"code","e354efb0":"code","7d8cf070":"code","14ce0452":"code","0eaadca4":"code","1c64ee93":"code","aca7de57":"code","3c29da91":"markdown","3212601e":"markdown","a91033f7":"markdown"},"source":{"c990c600":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import KFold\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\ndata_csv = \"..\/input\/logistic_regression_predictions.csv\"\ndata = pd.read_csv(data_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ceabbd12":"data.head() # ilk 5 sat\u0131r","64e7f0bf":"data.tail() # son 5 sat\u0131r","43a0cecf":"data.shape # sat\u0131r ve s\u00fctun say\u0131s\u0131","8ac89087":"data.info() # bellek kullan\u0131m\u0131 ve veri t\u00fcrleri","827da318":"data.describe() # basit istatistikler","ab3a84d5":"data.isnull().any() # null veri varm\u0131","5cc1a2dc":"num_bins=10\ndata.hist(bins=num_bins, figsize=(20,15)) # veri g\u00f6rselle\u015ftirme - histogram grafi\u011fi","d26bde43":"plt.matshow(data.corr()) # Korelasyon grafik","d546f550":"# seaborn \u0131s\u0131 haritas\u0131\nimport seaborn as sns\ncorr = data.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","86c9ca53":"data.corr() # Koralasyon istatistik","c510de5f":"# Veri b\u00f6lme i\u015flemi (train & test split)\nX = data.iloc[:, 0:1] \nY = data.iloc[:, 1]","7b20fdf3":"# b\u00f6l\u00fcnen veriler ile train & test i\u015flemi\nfrom sklearn.model_selection import train_test_split  \nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=0)  ","fff42cfb":"# train i\u015fleminden \u00e7\u0131kan veriler ile 1. Model olu\u015fturma\nfrom sklearn.linear_model import LinearRegression  \nmodel = LinearRegression()  \nmodel.fit(X_train, y_train) ","1a149da1":"print(\"Kesim noktas\u0131:\", model.intercept_)  ","d6b04c0c":"# Modeli test etme i\u015flemi\nfrom sklearn.model_selection import train_test_split \nfrom sklearn import metrics\nfrom sklearn.naive_bayes import GaussianNB\n\nmodel = GaussianNB()\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.4, random_state = 100)\n\nmodel = model.fit(X_train, Y_train)\nY_pred = model.predict(X_test)\n\nresult = metrics.accuracy_score(Y_test, Y_pred)*100\n#Accuracy de\u011feri \nprint(\"Ka\u00e7 ki\u015fi \u00f6ld\u00fc : ACC: %%%.2f\" %result)\nprint(\"Ka\u00e7 ki\u015fi kurtuldu: ACC: %%%.2f\" %(100-result))","e354efb0":"validation_size = 0.20\nseed = 7\nX_train, X_validation, Y_train, Y_validation = train_test_split(X, Y, test_size=validation_size, random_state=seed)","7d8cf070":"#Naive Bayes modelinin olu\u015fturulmas\u0131 2. Model\nfrom sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()","14ce0452":"#NB modelinin K-katlamal\u0131 \u00e7apraz do\u011frulama ile ACC de\u011ferinin hesaplanmas\u0131\nfrom sklearn.model_selection import cross_val_score\nscoring = 'accuracy'\nkfold = KFold(n_splits=10, random_state=seed)\ncv_results = cross_val_score(model, X_train, Y_train, cv=kfold, scoring=scoring)","0eaadca4":"cv_results","1c64ee93":"msg = \"%f (%f)\" % (cv_results.mean(), cv_results.std())\nmsg","aca7de57":"# 2. Modelin testi\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import roc_curve, roc_auc_score\nfrom sklearn import model_selection\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)\n\nmodel.fit(X_train, Y_train)\n\nY_pred = model.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(Y_test, Y_pred))\nprint(confusion_matrix(Y_test, Y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\n\nresult2 = accuracy_score(Y_pred,Y_test)\nprint(\"Ka\u00e7 ki\u015fi \u00f6ld\u00fc : ACC: \",result2)\nprint(\"Ka\u00e7 ki\u015fi kurtludu: ACC: \",0.99-result2)\n","3c29da91":"**Veri Ke\u015ffi **","3212601e":"**Veri G\u00f6rselle\u015ftirme**","a91033f7":"***Titanik kazas\u0131ndan \u00f6len ve kurtulan yolcular\u0131n tahminini y\u00fcr\u00fcten, makine \u00f6\u011frenme algoritmalar\u0131 kullan\u0131larak ger\u00e7ekle\u015ftirilmi\u015ftir.***"}}