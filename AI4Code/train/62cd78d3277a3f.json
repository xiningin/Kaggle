{"cell_type":{"31d7697c":"code","71bb3ce8":"code","7abb93d9":"code","d82137f9":"code","504d5a8e":"code","e6895b96":"code","62e90f76":"code","89b7f41d":"code","c86f2577":"code","8eea37f9":"code","5d617a56":"code","08282950":"code","b0aa2fb2":"code","0f84d588":"code","2249da62":"code","995ea329":"code","58d58038":"code","716094c8":"code","8e530a5d":"code","6ac7faf7":"code","9e897d98":"code","46559da5":"code","d3b1243e":"code","261f12b5":"code","888248b0":"code","1200f155":"code","a2bc7d55":"code","08d80763":"code","3c1ecb48":"code","3e769560":"code","70851b83":"code","ae165d45":"markdown","e94f4047":"markdown","2a583e2a":"markdown","a6874f96":"markdown","ae94697a":"markdown","e69409e3":"markdown","07924407":"markdown","4bed2128":"markdown","c4466f5d":"markdown","b495db53":"markdown","432c6966":"markdown","dcda6859":"markdown"},"source":{"31d7697c":"# IMport Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\n\n\nimport PIL\nimport tensorflow as tf\nimport matplotlib.image as image\nimport seaborn as sns\nimport pickle \n\nfrom matplotlib.pyplot import figure, imshow, axis\nfrom matplotlib.image import imread\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.model_selection import train_test_split\n\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.layers import Input, Conv2D, MaxPool2D, Dropout, Dense, BatchNormalization\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.models import Sequential\nimport random\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.preprocessing import image\n\nimport warnings\nwarnings.filterwarnings('ignore')","71bb3ce8":"#reading the styles.csv file\ndf = pd.read_csv('\/kaggle\/input\/fashion-product-images-small\/styles.csv', header = 'infer',error_bad_lines = False)\ndf = df[['id','masterCategory']] # filtering to 2 columns of our interest","7abb93d9":"df","d82137f9":"df['masterCategory'].value_counts()","504d5a8e":"df['masterCategory'].value_counts().plot.barh()","e6895b96":"ind=df[df['masterCategory']=='Home'].index\ndf.drop(ind,inplace=True)","62e90f76":"df=df.sample(frac=0.5)","89b7f41d":"df['masterCategory'].value_counts()","c86f2577":"base_path='..\/input\/fashion-product-images-small\/images\/'","8eea37f9":"df['path']=df['id'].apply(lambda x: str(base_path + str(x)+ '.jpg'))","5d617a56":"df=df.reset_index()","08282950":"image.load_img(df['path'][0])","b0aa2fb2":"train_df, test_df = train_test_split(df, test_size=0.2, random_state=2022)","0f84d588":"test_df['masterCategory'].value_counts()","2249da62":"pics = 6 #set the number of pics\nfig,ax = plt.subplots(int(pics\/\/2),2,figsize=(15,15))\nplt.suptitle('Images with Fire')\nax = ax.ravel()\nfor i in range((pics\/\/2)*2):\n    path = df.sample(1).loc[:,'path'].to_numpy()[0]\n    img = image.load_img(path)\n    img = image.img_to_array(img)\/255\n    print(img.shape)\n    ax[i].imshow(img)\n    ax[i].axes.xaxis.set_visible(False)\n    ax[i].axes.yaxis.set_visible(False)","995ea329":"generator = ImageDataGenerator(\n    rescale = 1\/255,\n    validation_split=0.2,\n)","58d58038":"test_generator=ImageDataGenerator(\n    rescale = 1\/255\n)","716094c8":"train_gen = generator.flow_from_dataframe(train_df,x_col='path',y_col='masterCategory',\n                                          target_size=(80,60),\n                                          batch_size=32,\n                                          subset='training')\nval_gen = generator.flow_from_dataframe(train_df,x_col='path',y_col='masterCategory',\n                                        target_size=(80,60),\n                                        batch_size=32,\n                                        subset='validation')","8e530a5d":"test_gen = test_generator.flow_from_dataframe(test_df,x_col='path',y_col='masterCategory',\n                                              target_size=(80,60),\n                                              batch_size=32\n                                             )","6ac7faf7":"model = tf.keras.Sequential([\n    Flatten(input_shape=(80, 60, 3)),\n    Dense(128, activation='relu'),\n    BatchNormalization(),\n    Dense(128, activation='relu'),\n    BatchNormalization(),\n    Dense(64, activation='relu'),\n    Dense(6,activation='softmax')\n])","9e897d98":"model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4),\n              loss=tf.keras.losses.CategoricalCrossentropy(from_logits=False),\n              metrics=['accuracy']\n              )","46559da5":"history=model.fit(\n        train_gen,\n        epochs=15,\n        validation_data=val_gen\n        )","d3b1243e":"hist=history.history\nplt.plot(hist[\"accuracy\"],color=\"b\",label=\"train_accuracy\")\nplt.plot(hist[\"val_accuracy\"],color=\"g\",label=\"val_accuracy\")\nplt.legend(loc=\"lower right\")\nplt.show()","261f12b5":"model.evaluate(val_gen)","888248b0":"model.evaluate(test_gen)","1200f155":"input_layer=Input(shape=(80,60,3))\nlayer=Conv2D(filters=32,kernel_size=(3,3),activation=\"relu\",padding=\"valid\")(input_layer)\nlayer=MaxPool2D(pool_size=(2,2),strides=(1,1))(layer)\nlayer=BatchNormalization()(layer)\n\nlayer=Conv2D(filters=16,kernel_size=(3,3),activation=\"relu\",padding=\"valid\")(input_layer)\nlayer=MaxPool2D(pool_size=(2,2),strides=(1,1))(layer)\nlayer=BatchNormalization()(layer)\n\nlayer=Flatten()(layer)\n\nlayer=Dense(64,activation=\"relu\")(layer)\nlayer=BatchNormalization()(layer)\n\nlayer=Dense(32,activation=\"relu\")(layer)\noutput_layer=Dense(6,activation=\"softmax\")(layer)\nmodel2=Model(inputs=input_layer,outputs=output_layer)\nmodel2.summary()","a2bc7d55":"model2.compile(loss='categorical_crossentropy',\n       optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4),\n       metrics=['accuracy'])","08d80763":"history2 = model2.fit(\n    train_gen,\n    epochs=15,\n    validation_data=val_gen)","3c1ecb48":"hist=history2.history\nplt.plot(hist[\"accuracy\"],color=\"b\",label=\"train_accuracy\")\nplt.plot(hist[\"val_accuracy\"],color=\"g\",label=\"val_accuracy\")\nplt.legend(loc=\"lower right\")\nplt.show()","3e769560":"model2.evaluate(val_gen)","70851b83":"model2.evaluate(test_gen)","ae165d45":"# Train validation split","e94f4047":"# Visualizing some images","2a583e2a":"# Evaluating ANN On validation and test set","a6874f96":"Creating the training and test generator\n\nWe will use the flow_from_dataframe method of the ImageDataGenerator class. It will take the path of the images from the dataframe along with their labels. We construct two generators, one for training and the other for validation.","ae94697a":"# Training Curve for NN","e69409e3":"# Training Neural Network","07924407":"we have 6 classss now","4bed2128":"Since there is only 1 category of Home category so let's delete it.","c4466f5d":"# Convolution Neural Nets","b495db53":"# Types of masterCategory","432c6966":"# Training curve for CNN","dcda6859":"# Evaluating CNN On validation and test set"}}