{"cell_type":{"3e98f028":"code","f0fd9183":"code","68b82b49":"code","b0695acc":"code","08e8e0d8":"code","7850c566":"code","1c5fbc20":"code","4c255e66":"code","35d3cee3":"code","a60e2cc8":"code","cfbe6166":"code","8afa517c":"code","98b05232":"code","23304b19":"code","d0f4e5c5":"code","ad6d4191":"code","5f8930bd":"code","6249510c":"code","e0aced0e":"code","9e4431ad":"code","773db016":"markdown","d05da1a6":"markdown","59e884a3":"markdown","22252094":"markdown","0337a58e":"markdown","fa5840d8":"markdown","d995cb70":"markdown","9ae06856":"markdown","d92cbf2b":"markdown","65a7afcd":"markdown","a4c22677":"markdown","ddbbcf0e":"markdown","d7f63a21":"markdown","c33d3af9":"markdown","486fc7a5":"markdown","c7899a39":"markdown","8a323a2a":"markdown","b8dbef95":"markdown","86e505a0":"markdown","9797ae66":"markdown","1e2f0e03":"markdown"},"source":{"3e98f028":"import pandas as pd\nfrom plotly.offline import init_notebook_mode, plot, iplot\nimport plotly.graph_objs as go\n\ninit_notebook_mode(connected=True)","f0fd9183":"df = pd.read_csv(\"..\/input\/news_collection.csv\", parse_dates=[\"date\"])\ndf.sample(5)","68b82b49":"f\"Number of entries: {df.shape[0]:,d}\"","b0695acc":"df[df.duplicated([\"title\", \"desc\", \"image\", \"url\", \"source\"], keep=False)].sort_values([\"url\", \"date\"]).head()","08e8e0d8":"df[\n    df.duplicated([\"title\", \"desc\", \"image\", \"url\", \"source\"], keep=False)\n].groupby([\"title\", \"url\", \"source\"]).size().to_frame(\"cnt\").sort_values(\"cnt\", ascending=False).head()","7850c566":"blacklists = [\n    \"https:\/\/www.sgsme.sg\/\", \"https:\/\/www.voachinese.com\/\", \"https:\/\/www.voachinese.com\/z\/5102\", \n    \"https:\/\/www.instagram.com\/voachinese\/\", \"https:\/\/cn.wsj.com\/\"\n]","1c5fbc20":"df = df[~df.duplicated([\"title\", \"desc\", \"image\", \"url\", \"source\"], keep=\"first\")]\ndf.shape[0]","4c255e66":"df = df[~df.url.isin(blacklists)]\ndf.shape[0]","35d3cee3":"df = df[~df.url.str.startswith(\"https:\/\/www.youtube.com\")]\ndf.shape[0]","a60e2cc8":"source_counts = df.source.value_counts()\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            x=source_counts.index,\n            y=source_counts.values\n        )\n    ], \n    layout=go.Layout(\n        title='Article Counts by Source',\n        width=800, height=400, template=\"plotly_white\"\n    )\n))","cfbe6166":"date_counts = df.date.value_counts()\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            x=date_counts.index.strftime(\"%Y-%m-%d\"),\n            y=date_counts.values\n        )\n    ], \n    layout=go.Layout(\n        title='Article Counts by Date',\n        width=800, height=400, template=\"plotly_white\"\n    )\n))","8afa517c":"date_counts = df[df.source == \"NYTimes\"].date.value_counts()\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            x=date_counts.index.strftime(\"%Y-%m-%d\"),\n            y=date_counts.values\n        )\n    ], \n    layout=go.Layout(\n        title='New York Times (CN) Article Counts by Date',\n        width=800, height=400, template=\"plotly_white\"\n    )\n))","98b05232":"df[\"trump\"] = (\n    df.title.str.contains(\"\u5ddd\u666e\") |\n    df.title.str.contains(\"\u7279\u6717\u666e\")\n)\nf'% of titles mentioning Trump: {df[\"trump\"].sum() \/ df.shape[0] * 100:.2f}%'","23304b19":"trump_perc_by_source = df.groupby(\"source\")[\"trump\"] .mean().sort_values() * 100\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            y=trump_perc_by_source.index,\n            x=trump_perc_by_source.values,\n            orientation = 'h'\n        )\n    ], \n    layout=go.Layout(\n        title='Percentage of Titles mentioning Trump by Sources',\n        xaxis=dict(\n            title='%',\n        ),\n        width=800, height=400, template=\"plotly_white\"\n    )\n))","d0f4e5c5":"turmp_perc_by_date = df.groupby(\"date\")[\"trump\"] .mean().sort_values() * 100\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            x=turmp_perc_by_date.index.strftime(\"%Y-%m-%d\"),\n            y=turmp_perc_by_date.values\n        )\n    ], \n    layout=go.Layout(\n        title='Percentage of Titles mentiong Trump by Date',\n        yaxis=dict(\n            title='%',\n        ),\n        width=800, height=400, template=\"plotly_white\"\n    )\n))","ad6d4191":"df[\"xi\"] = (\n    df.title.str.contains(\"\u7fd2\u8fd1\u5e73\") |\n    df.title.str.contains(\"\u4e60\u8fd1\u5e73\")\n)\nf'% of titles mentioning Xi: {df[\"xi\"].sum() \/ df.shape[0] * 100:.2f}%'","5f8930bd":"xi_perc_by_source = df.groupby(\"source\")[\"xi\"] .mean().sort_values() * 100\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            y=xi_perc_by_source.index,\n            x=xi_perc_by_source.values,\n            orientation = 'h'\n        )\n    ], \n    layout=go.Layout(\n        title='Percentage of Titles mentioning Xi by Sources',\n        xaxis=dict(\n            title='%',\n        ),\n        width=800, height=400, template=\"plotly_white\"\n    )\n))","6249510c":"xi_perc_by_source = df.groupby(\"source\")[\"xi\"] .mean().sort_values() * 100\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            y=trump_perc_by_source.index,\n            x=trump_perc_by_source.values,\n            orientation = 'h',\n            name=\"Trump\"\n        ),\n        go.Bar(\n            y=xi_perc_by_source.index,\n            x=xi_perc_by_source.values,\n            orientation = 'h',\n            name=\"Xi\"\n        ),        \n    ], \n    layout=go.Layout(\n        title='Percentage of Titles mentioning Xi and Trump by Sources',\n        xaxis=dict(\n            title='%',\n        ),\n        width=800, height=600, template=\"plotly_white\"\n    )\n))","e0aced0e":"xi_perc_by_date = df.groupby(\"date\")[\"xi\"] .mean().sort_values() * 100\n\niplot(go.Figure(\n    data=[\n        go.Bar(\n            x=xi_perc_by_date.index.strftime(\"%Y-%m-%d\"),\n            y=xi_perc_by_date.values\n        )\n    ], \n    layout=go.Layout(\n        title='Percentage of Titles mentiong Xi by Date',\n        yaxis=dict(\n            title='%',\n        ),\n        width=800, height=400, template=\"plotly_white\"\n    ),\n))","9e4431ad":"df[(df.date == \"2019-01-03\") & df.xi][[\"title\", \"desc\", \"source\"]].sample(5)","773db016":"**April 9, 2019 Update:**\n\n1. Use the new [plotly theme](https:\/\/medium.com\/@plotlygraphs\/introducing-plotly-py-theming-b644109ac9c7) (plotly_white).\n2. Explicitly set widht and height properties of the plots.\n3. Add [a new notebook([YACND] Starter Notebook v2)](https:\/\/www.kaggle.com\/ceshine\/yacnd-starter-notebook-v2) using Plotly Express and experimenting with language detection.","d05da1a6":"Deduplicate:","59e884a3":"Note: this dataset does not guarantee full coverage. So the following seciont is not necessarily an accurate account of the coverage on Trump and Xi. It just serves as an simpe example.","22252094":"We can combine the two bar charts (the readibility still need some work, though): ","0337a58e":"Examine the most frequent entries:","fa5840d8":"Remove those in the blacklist:","d995cb70":"## Cleaning the Data","9ae06856":"Remove youtube videos:","d92cbf2b":"There are some duplicates in the dataset:","65a7afcd":"## The End","a4c22677":"### Trump","ddbbcf0e":"Now we repeat the same process with Chinese president Xi:","d7f63a21":"### Xi Jinping","c33d3af9":"Percentage of titles mentioning Trump by Sources:","486fc7a5":"## Reading in Data","c7899a39":"## Simple Visualizations","8a323a2a":"We see that some entries are not really news, but links to websites, instagram accounts, youtube, and online surveys.","b8dbef95":"# Data Cleaning and Basic Exploration","86e505a0":"This is the end of this simple starter notebook. Hopefully you'll find this dataset interesting.\n\nThere are some issues that was not covered here, but might be of interest to you:\n\n1. The conversion of Traditional and Simplified Chinese.\n2. The overabundance of contents from some sources. That could mean a lot of short breaking news pieces, or even just some low-quality contents. Might need some investigation.\n3. The summary field of some sources are just truncated version of the full article. The final sentence are usually not complete. You might want to remove that sentence.","9797ae66":"## Check the Mentioning of People in the Titles","1e2f0e03":"A lot of Xi titles on Jan 3rd. We can take a look at what that's about:"}}