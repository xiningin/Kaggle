{"cell_type":{"0acd6381":"code","b73e26a4":"code","477557b3":"code","e5e66e79":"code","c339a4df":"code","4c82f478":"code","66df177e":"code","4cbaf2de":"code","8161b34f":"code","0f853b17":"code","9bc70d18":"code","23e20c02":"code","084650ec":"code","e54ec546":"code","08ddf094":"code","f7773d73":"code","a60f7cf2":"code","a2d307f4":"code","908e90d8":"code","e132085d":"code","d4e9129e":"code","7f3f2068":"code","e0bfbd8d":"code","e20074c4":"code","e76b7172":"code","3009b034":"code","423bec0c":"code","0414e39e":"code","c0ce2866":"code","bdd056f0":"code","151e4fb8":"code","a7aa265d":"code","68546b71":"code","ef55fa5c":"code","1f0850cf":"code","25c46b0f":"code","0896cff9":"code","31690f80":"code","e762aa9b":"code","1175c92d":"code","b00a13b7":"code","54263ace":"code","fcb411cb":"code","67c3c144":"code","ed7472e9":"code","6e130397":"code","2533d491":"code","7e51670b":"code","7a73b7c8":"code","a0e977a7":"code","028d0cdf":"code","676ff9aa":"code","f86e906c":"code","54b57339":"code","6b7988e6":"code","8c7008e3":"code","5c524227":"code","781cad2b":"code","1affb94b":"code","17bc5e63":"code","38238d53":"code","cefd5abb":"code","53070699":"code","40b02c17":"code","47c81c1b":"code","ca5ec05e":"code","162af873":"code","61cc1b26":"code","884dfb8f":"code","05faaacb":"code","d7b9a697":"code","33f34a59":"code","c05e0409":"code","236e13e3":"code","037ebfcb":"code","072677bc":"code","9a0afec9":"code","6bca252a":"code","71716821":"code","711e54d6":"code","6dcbb617":"code","35d4de47":"code","665f054c":"code","8486bfcc":"code","5d3b7947":"markdown","dc8abee8":"markdown","847d5bc6":"markdown","f9ff879a":"markdown","4c872f07":"markdown","25fbb7e2":"markdown","402944ca":"markdown","ea074314":"markdown","94ba741f":"markdown","918d26ba":"markdown","166292e6":"markdown","6613f8e6":"markdown","3db76b9b":"markdown","9e2e7611":"markdown","6c4341ee":"markdown","6f91022f":"markdown","ec2a8711":"markdown","b67114c3":"markdown","4564a9d5":"markdown","acfab060":"markdown","74d3533f":"markdown","6970216d":"markdown"},"source":{"0acd6381":"# importing all the required libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b73e26a4":"# Creating rounds and companies dataframe\nrounds = pd.read_csv(\"..\/input\/investment\/rounds2.csv\", encoding = \"ISO-8859-1\")\ncompanies = pd.read_csv(\"..\/input\/investment\/companies.csv\", encoding = \"ISO-8859-1\")","477557b3":"rounds.head()","e5e66e79":"# Inspecting the round dataframe\nprint(rounds.info(),\"\\n\")\nprint(rounds.shape)","c339a4df":"# Companies head \ncompanies.head()","4c82f478":"# Ispecting the companies dataframe\nprint(companies.info(),\"\\n\")\nprint(companies.shape)","66df177e":"#let's verify the uniqueness of Permalink column\nlen(companies.permalink.unique())","4cbaf2de":"companies['permalink'] = companies['permalink'].str.lower()\ncompanies.head()","8161b34f":"len(companies.permalink.unique())","0f853b17":"#let's analyse the round dataframe in the same way\nlen(rounds.company_permalink.unique())","9bc70d18":"rounds['company_permalink'] = rounds['company_permalink'].str.lower()\nrounds.head()","23e20c02":"len(rounds.company_permalink.unique())","084650ec":"#companies present in rounds df but not in companies df\nrounds.loc[~rounds['company_permalink'].isin(companies['permalink']),:]","e54ec546":"# Let's try with different encoding, to avoid encoding issue\nrounds['company_permalink'] = rounds.company_permalink.str.encode('utf-8').str.decode('ascii','ignore')\nrounds.loc[~rounds['company_permalink'].isin(companies['permalink']),:]","08ddf094":"len(rounds.company_permalink.unique())","f7773d73":"# companies present in companies df but not in rounds df.\ncompanies.loc[~companies['permalink'].isin(rounds['company_permalink']),:]","a60f7cf2":"#encoding\ncompanies['permalink'] = companies.permalink.str.encode('utf-8').str.decode('ascii','ignore')","a2d307f4":"# companies present in companies df but not in rounds df.\ncompanies.loc[~companies['permalink'].isin(rounds['company_permalink']),:]","908e90d8":"# !ls","e132085d":"print(len(rounds.company_permalink.unique()))\nprint(len(companies.permalink.unique()))\n\nprint(len(rounds.loc[~rounds['company_permalink'].isin(companies['permalink']),:]))","d4e9129e":"# missing values in companies df\ncompanies.isnull().sum()","7f3f2068":"# missing values in rounds df\nrounds.isnull().sum()","e0bfbd8d":"help(pd.merge)","e20074c4":"# merging the two dfs\nmaster_frame = pd.merge(companies, rounds, how =\"inner\", left_on=\"permalink\", right_on=\"company_permalink\")\nmaster_frame.head()","e76b7172":"master_frame.columns","3009b034":"# removing redundant columns\nmaster_frame = master_frame.drop([\"company_permalink\"], axis = 1)","423bec0c":"master_frame.columns","0414e39e":"# checking shape of the df\nmaster_frame.shape","c0ce2866":"# column-wise missing values\nmaster_frame.isnull().sum()","bdd056f0":"# column-wise percentage of null values\nround(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","151e4fb8":"# Dropping the columns which contains significant amount of missing values and those which is not applicable for our analysis.\nmaster_frame = master_frame.drop(['funding_round_code', 'homepage_url', 'founded_at','state_code','region','city'], axis=1)\nmaster_frame.head()","a7aa265d":"# checking the column-wise null percentage\nround(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","68546b71":"# Summary stats of raised_amount_usd\nmaster_frame['raised_amount_usd'].describe()","ef55fa5c":"# Removing NaNs from raised-amount_usd\nmaster_frame = master_frame[~np.isnan(master_frame['raised_amount_usd'])]\nround(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","1f0850cf":"country_codes = master_frame['country_code'].astype('category')\ncountry_codes.value_counts()","25c46b0f":"# checking the fractions of counts of country_codes \n100*(master_frame['country_code'].value_counts()\/len(master_frame.index))","0896cff9":"# removing rows with missing country_code values\nmaster_frame = master_frame[~pd.isnull(master_frame['country_code'])]\n\nround(100*(master_frame['country_code'].value_counts()\/len(master_frame.index)),2)","31690f80":"# removing rows with missing category_list values\nmaster_frame = master_frame[~pd.isnull(master_frame['category_list'])]\n\nround(100*(master_frame.isnull().sum()\/len(master_frame.index)),2)","e762aa9b":"master_frame.info()","1175c92d":"# Percentage of Data retained\n100*(len(master_frame.index)\/len(rounds.index))","b00a13b7":"#lets filter the df so it only contains the four specified funding types\nmaster_frame = master_frame[(master_frame.funding_round_type == \"venture\") | \n        (master_frame.funding_round_type == \"angel\") | \n        (master_frame.funding_round_type == \"seed\") | \n        (master_frame.funding_round_type == \"private_equity\") ]","54263ace":"# distribution of raised_amount_usd\nsns.boxplot(y=master_frame['raised_amount_usd'])\nplt.yscale('log')\nplt.show()","fcb411cb":"# Summart stats on raised_amount_usd\nmaster_frame['raised_amount_usd'].describe()","67c3c144":"# comparing summary stats across four categories\nsns.boxplot(x='funding_round_type', y='raised_amount_usd', data=master_frame)\nplt.yscale('log')\nplt.show()","ed7472e9":"# comparing the mean and median values across categories\nmaster_frame.pivot_table(values ='raised_amount_usd', columns = 'funding_round_type', aggfunc = [np.median, np.mean])","6e130397":"# comparing the median investment amount across the types\nmaster_frame.groupby('funding_round_type')['raised_amount_usd'].median().sort_values(ascending = False)","2533d491":"# filter the df for venture type investments\nmaster_frame = master_frame[master_frame.funding_round_type == 'venture']\n\n#group by country codes and compare the total funding amounts\ncountry_wise_total = master_frame.groupby('country_code')['raised_amount_usd'].sum().sort_values(ascending = False)\nprint(country_wise_total)","7e51670b":"master_frame[\"country_code\"].value_counts()","7a73b7c8":"# top 9 countries\ntop_9_countries = country_wise_total[:9]\ntop_9_countries","a0e977a7":"# filterring the top 3 countries\nmaster_frame = master_frame[(master_frame.country_code=='USA') | (master_frame.country_code=='GBR') | (master_frame.country_code=='IND')]\nmaster_frame.head()","028d0cdf":"master_frame.info()","676ff9aa":"# box plot to see the funding across the different countries\nplt.figure(figsize = (10,10))\nsns.boxplot(x='country_code', y='raised_amount_usd',data=master_frame)\nplt.yscale('log')\nplt.show()","f86e906c":"master_frame.describe()","54b57339":"# Deriving main_category as asked in problem statement\nmaster_frame.loc[:,'main_category'] = master_frame['category_list'].apply(lambda x:x.split(\"|\")[0])\nmaster_frame.head()","6b7988e6":"# drop the redundant column\nmaster_frame =master_frame.drop('category_list',axis=1)\nmaster_frame.head()","8c7008e3":"# creating mapping df\nmapping = pd.read_csv('..\/input\/investment\/mapping.csv', sep=\",\")","5c524227":"mapping.head()","781cad2b":"# inspecting the null values\nmapping.isnull().sum()","1affb94b":"mapping = mapping[~pd.isnull(mapping['category_list'])]\nmapping.isnull().sum()","17bc5e63":"# converting common columns to lower case\nmapping['category_list'] = mapping['category_list'].str.lower()\nmaster_frame['main_category'] = master_frame['main_category'].str.lower()","38238d53":"print(mapping.head())","cefd5abb":"print(master_frame.head())","53070699":"mapping['category_list']","40b02c17":"# keeping those category only those which is lying in the category_list\nmaster_frame[~master_frame['main_category'].isin(mapping['category_list'])]","47c81c1b":"mapping[~mapping['category_list'].isin(master_frame['main_category'])]","ca5ec05e":"# correcting sector names\nmapping['category_list'] = mapping['category_list'].apply(lambda x:x.replace('0','na'))\nprint(mapping['category_list'])","162af873":"# Merging mapping df into master df\nmaster_frame = pd.merge(master_frame, mapping, how='inner',left_on = 'main_category', right_on = 'category_list')","61cc1b26":"master_frame.head()","884dfb8f":"master_frame.columns","05faaacb":"master_frame.info()","d7b9a697":"help(pd.melt)","33f34a59":"# converting from wide to long\n# store the value variable in one series\nvalue_vars = master_frame.columns[9:18]\n\n# take the setdiff() to get the rest of the variables\nid_vars = np.setdiff1d(master_frame.columns, value_vars)\n\nprint(value_vars, \"\\n\")\nprint(id_vars)","c05e0409":"# convert into long\nlong_df = pd.melt(master_frame,\n                  id_vars = list(id_vars),\n                  value_vars = list(value_vars))\nlong_df.head()","236e13e3":"# remove rows having value = 0\nlong_df = long_df[long_df['value']==1]\nlong_df = long_df.drop('value', axis=1)","037ebfcb":"long_df.head()\nlen(long_df)","072677bc":"#remaining the 'variable' column\nlong_df = long_df.rename(columns = {'variable':'sector'})","9a0afec9":"#info\nlong_df.info()","6bca252a":"# summarising the sector-wise number and sum of venture investments across three countries\n\n# first, Let's also filter for investment range between 5 to 15 million dollars.\nmaster_frame = long_df[(long_df['raised_amount_usd']>=5000000) & (long_df['raised_amount_usd']<=15000000)]","71716821":"master_frame.groupby(['country_code'])['sector'].count()","711e54d6":"master_frame.groupby(['country_code'])['raised_amount_usd'].sum()","6dcbb617":"# groupby country, sector and compute the count and sum\nmaster_frame.groupby(['country_code','sector']).raised_amount_usd.agg(['count','sum'])","35d4de47":"master_frame.columns","665f054c":"top_company=master_frame.groupby(['sector']).max()\ntop_company","8486bfcc":"# plotting sector-wise count and sum of investments in the three countries\nplt.figure(figsize=(16,14))\n\nplt.subplot(2,1,1)\np =sns.barplot(x='sector', y='raised_amount_usd', hue='country_code', data=master_frame, estimator =np.sum)\np.set_xticklabels(p.get_xticklabels(), rotation = 30)\nplt.title(\"Total Invested Amount (USD\")\nplt.show()\n\nplt.figure(figsize=(16,14))\nplt.subplot(2,1,1)\nq = sns.countplot(x='sector', hue ='country_code', data =master_frame)\nq.set_xticklabels(q.get_xticklabels(), rotation = 30)\nplt.title(\"Number of Investments\")\n\nplt.show()","5d3b7947":"Now, there are 66368 unique companies in both the `rounds` and `companies` dataframes","dc8abee8":"After converting it to lowercase, the number of unique `company_permalink` got reduced from 90247 to 66370.\n\nHowever, in round dataframe there are 2 extra `company_permalink` when compared to `permalink` parameter of companies dataframe.","847d5bc6":"#ANALYSIS\n\nIn this section, we are asked to perform three types of analysis:\n1) Funding type\n2) Country Analysis\n3) Sector Analysis\n","f9ff879a":"The dataframe now contains only venture type investments in countries USA, IND and GBR, and we have mapped each company to one of the eight main sectors.","4c872f07":"#Data Cleaning\n","25fbb7e2":"In case if we do not want to consider 'Others' as a sector.\n'News, Search and Messaging' is the next best sector.","402944ca":"permalink column of companies dataframe contains unique_key of the","ea074314":"Thus, USA is the top country in terms of numbers of investments.\nThe sectors 'Others','Social, Finance, Analytics and Advertising' and 'Cleantech\/Semiconductors' are the heavily invested ones.\n","94ba741f":"Now, lets plot the above to understand it more clearly.\n","918d26ba":"We can now compute the sector-wise number and the amount of investment in the three countries.","166292e6":"So, `companies` df also contains special character, let's fix that as well.","6613f8e6":"Among top 9: USA, GBR and IND are the top three countries","3db76b9b":"As we know that Spark funds want to invest 5 to upto 15 million dollar only.\nThus, private_equity can be eliminated.\n\n\nHence, the 'Venture' type investment is most suited for SPARK FUNDS.","9e2e7611":"We have shortlisted the three countries: USA, GBR and IND (English).","6c4341ee":"both country_code and raised_amount_usd contains missing values and these are important for our analysis, hence needs to be treated carefully.","6f91022f":"#Sector Analysis","ec2a8711":"There is no change in the unique permalink, even after converting all the elements to lowercase","b67114c3":"####Funding Type Analysis","4564a9d5":"# Country Analysis","acfab060":"Let's do some data cleaning before merging these two files","74d3533f":"Also, let's convert all the entries to lowercase for uniformity.","6970216d":"'funding_amount_usd' and 'raised_amount_usd' variables contains some missing values."}}