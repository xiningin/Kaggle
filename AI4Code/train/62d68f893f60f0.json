{"cell_type":{"3c660faf":"code","6ba1ca20":"code","bb5d8f93":"code","86aa58c3":"code","67fa987e":"code","bbd7bae7":"code","0450e17a":"code","501efe49":"code","8a131e65":"code","3570ad31":"code","bd8bee5b":"code","a87a5342":"code","1ae086e1":"code","08c37405":"code","58e90eaa":"code","6fbebc03":"code","5e42c096":"code","149aecd7":"code","54add7aa":"code","d3e3b475":"code","dbb9c086":"code","14b93fa4":"code","687bd86d":"code","3e963d9e":"code","5eaf4f86":"code","d5aee585":"code","1554105c":"code","a5f1dc18":"code","cb76cfcb":"code","a85acf80":"code","8c655dbc":"code","c0eb25a8":"code","d878d281":"code","83b0a91e":"code","e03ae2cb":"code","fa850bc9":"code","53807faa":"code","7ed55f6b":"code","4cf83681":"code","63a7d810":"code","724a5cd9":"code","2e9c6bd9":"code","9e14d927":"code","f81fff82":"code","3c8722e8":"code","be486310":"code","7ac2d8e9":"code","8091d6d3":"markdown","3f50f910":"markdown","84a7464d":"markdown","5a080977":"markdown","3d3c4168":"markdown","683c691a":"markdown","a34d5857":"markdown","a9af443c":"markdown","438cc950":"markdown","11cc4bbe":"markdown","f51ffcd5":"markdown","3a6e1e8b":"markdown","9c7381b5":"markdown","18502e27":"markdown","cf6c0adb":"markdown","40477414":"markdown","76fe9145":"markdown","81d57ad3":"markdown","0beb9d5c":"markdown","ca80124b":"markdown","18e88bd1":"markdown","0a34b58a":"markdown","99cee12a":"markdown","8d7d5fb0":"markdown","3f66514a":"markdown","cd3d5d54":"markdown","3312e3ee":"markdown","262075e1":"markdown","d1c4dde0":"markdown","59d0ab2a":"markdown","64df7db8":"markdown","ed570085":"markdown","8588eb75":"markdown","6746b3fe":"markdown","77c5bde0":"markdown","35f9ecad":"markdown","b272d117":"markdown","d46c8062":"markdown"},"source":{"3c660faf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","6ba1ca20":"df_train = pd.read_csv(\"..\/input\/atividade-regressao-PMR3508\/train.csv\", na_values = \"NaN\")\ndf_test = pd.read_csv(\"..\/input\/atividade-regressao-PMR3508\/test.csv\", na_values = \"NaN\")","bb5d8f93":"df_train.head()","86aa58c3":"df_test.head()","67fa987e":"train_shape = df_train.shape\nprint(\"N\u00famero de Linhas do train.csv:\", train_shape[0])\nprint(\"N\u00famero de colunas do train.csv:\", train_shape[1])\n\nprint(\"\\n\")\n\ntest_shape = df_test.shape\nprint(\"N\u00famero de Linhas do test.csv:\", test_shape[0])\nprint(\"N\u00famero de colunas do test.csv:\", test_shape[1])","bbd7bae7":"df_train.describe()","0450e17a":"df_test.describe()","501efe49":"\"\"\"\nFun\u00e7\u00e3o para descobrir a quantidade de dados faltantes em cada coluna\nRecebe pandas.dataFrame\nRetorna pd.dataFrame com quantidade de dados faltantes por coluna\n\"\"\"\ndef missing_data(dataFrame):\n    quantity = pd.Series(dataFrame.isnull().sum(), name='qty')\n    frequency = pd.Series(100*quantity\/(dataFrame.count() + quantity), name = 'freq', dtype='float16')\n    missingData = pd.concat([quantity, frequency], axis=1)\n    return missingData","8a131e65":"missing_data(df_train)","3570ad31":"missing_data(df_test)","bd8bee5b":"correlation = df_train.corr()\n\nplt.figure(figsize=(16,16))\nmatrix = np.triu(correlation)\nsns.heatmap(correlation, annot=True, mask = matrix, vmin = -0.5, vmax = 0.5, center = 0, cmap= 'coolwarm')","a87a5342":"# Importar package\nfrom sklearn.linear_model import LinearRegression","1ae086e1":"# Obter entradas\nentradas = [\"longitude\", \"latitude\", \"total_rooms\", \"population\", \"households\", \"median_income\"]\ndf_x = df_train[entradas]\n\n# Obter sa\u00edda\ndf_y = df_train[\"median_house_value\"]","08c37405":"# Criar modelo\nmodel_simple = LinearRegression()\n\n# Alocar dados no modelo\nmodel_simple.fit(df_x, df_y)","58e90eaa":"# Obten\u00e7\u00e3o do coeficiente R**2\nr_sq = model_simple.score(df_x, df_y)\nprint('coefficient of determination:', r_sq)","6fbebc03":"# Importar package\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures","5e42c096":"# Obter entradas\nentradas = [\"longitude\", \"latitude\", \"total_rooms\", \"population\", \"households\", \"median_income\"]\ndf_x = df_train[entradas]\nx_ = PolynomialFeatures(degree=2, include_bias=False).fit_transform(df_x)\n\n# Obter sa\u00edda\ndf_y = df_train[\"median_house_value\"]","149aecd7":"# Criar modelo\nmodel_multiple = LinearRegression().fit(x_, df_y)\nr_sq = model_multiple.score(x_, df_y)\nintercept, coefficients = model_multiple.intercept_, model_multiple.coef_","54add7aa":"print('coefficient of determination:', r_sq)\nprint('intercept:', intercept)\nprint('coefficients:', coefficients, sep='\\n')","d3e3b475":"from geopy.geocoders import Nominatim","dbb9c086":"def get_county(coordinates):\n    geolocator = Nominatim(user_agent=\"California Housing EP\")\n    location = geolocator.reverse(coordinates)\n    address = location.raw['address']\n    county = address.get('county', '')\n    # print(county)\n    return county","14b93fa4":"# Como \u00e9 um processo demorado a transforma\u00e7\u00e3o das coordenadas em endere\u00e7os, foi utilizado um arquivo .xlsx processado no meu computador\n# com os dados j\u00e1 processados\n\n# df_trainn = pd.read_csv(\"..\/input\/atividade-regressao-PMR3508\/train.csv\", na_values = \"NaN\")\n# df_trainn[\"county\"] = df_trainn[[\"latitude\",\"longitude\"]].apply(get_county,axis=1)\n\ndf_trainn = pd.read_csv(\"..\/input\/file-name\/File_name.csv\", na_values = \"NaN\")","687bd86d":"def string2int(columns_name, df_analyse):\n    for i in range(len(columns_name)):\n        curr_column = df_analyse[columns_name[i]].unique().tolist()\n        mapping = dict(zip(curr_column, range(len(curr_column))))\n        df_analyse.replace({columns_name[i]: mapping}, inplace = True)\n    return df_analyse\n\n# Trocar String county por inteiro\ncolumns_name = [\"county\"]\ndf_analyse = df_trainn.copy()\ndf_analyse = string2int(columns_name, df_analyse)\ndf_trainn = string2int(columns_name, df_trainn)","3e963d9e":"# Guardar resultados\n# df_trainn.to_excel(r'.\/County_results.xlsx', index = False)","5eaf4f86":"def rooms_per_house(house):\n    total_rooms = house[0]\n    households = house[1]\n    return total_rooms\/households\n\ndef house_per_population(house):\n    households = house[0]\n    population = house[1]\n    return households\/population\n\ndef bedroom_per_room(house):\n    total_bedrooms = house[0]\n    total_rooms = house[1]\n    return total_bedrooms\/total_rooms\n\ndef extra_rooms(house):\n    total_bedrooms = house[0]\n    total_rooms = house[1]\n    return total_rooms - total_bedrooms\n\ndf_trainn[\"rooms_per_house\"] = df_trainn[[\"total_rooms\", \"households\"]].apply(rooms_per_house,axis=1)\ndf_trainn[\"house_per_population\"] = df_trainn[[\"households\", \"population\"]].apply(house_per_population,axis=1)\ndf_trainn[\"bedroom_per_room\"] = df_trainn[[\"total_bedrooms\", \"total_rooms\"]].apply(bedroom_per_room,axis=1)\ndf_trainn[\"extra_rooms\"] = df_trainn[[\"total_bedrooms\", \"total_rooms\"]].apply(extra_rooms,axis=1)","d5aee585":"correlation = df_analyse.corr()\n\nplt.figure(figsize=(16,16))\nmatrix = np.triu(correlation)\nsns.heatmap(correlation, annot=True, mask = matrix, vmin = -0.5, vmax = 0.5, center = 0, cmap= 'coolwarm')","1554105c":"import seaborn\nplt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"median_income\",y=\"median_house_value\")","a5f1dc18":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"median_age\",y=\"median_house_value\")","cb76cfcb":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"total_rooms\",y=\"median_house_value\")","a85acf80":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"total_bedrooms\",y=\"median_house_value\")","8c655dbc":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"population\",y=\"median_house_value\")","c0eb25a8":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"households\",y=\"median_house_value\")","d878d281":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"rooms_per_house\",y=\"median_house_value\")","83b0a91e":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"house_per_population\",y=\"median_house_value\")","e03ae2cb":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"bedroom_per_room\",y=\"median_house_value\")","fa850bc9":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_trainn,x=\"extra_rooms\",y=\"median_house_value\")","53807faa":"plt.figure(figsize=(15, 7))\nseaborn.scatterplot(data=df_analyse,x=\"county\",y=\"median_house_value\")","7ed55f6b":"# Trocar String county por inteiro\ncolumns_name = [\"county\"]\n#df_trainn = string2int(columns_name, df_trainn)\n\n# Obter entradas\nentradas = [\"county\", \"total_rooms\", \"population\", \"households\", \"median_income\", \"median_age\", \"bedroom_per_room\"]\ndf_xn = df_trainn[entradas]\n\n# Obter sa\u00edda\ndf_y = df_trainn[\"median_house_value\"]","4cf83681":"df_trainn","63a7d810":"# Criar modelo\nmodel_simple = LinearRegression()\n\n# Alocar dados no modelo\nmodel_simple.fit(df_xn, df_y)","724a5cd9":"# Obten\u00e7\u00e3o do coeficiente R**2\nr_sq = model_simple.score(df_xn, df_y)\nprint('coefficient of determination:', r_sq)","2e9c6bd9":"xn_ = PolynomialFeatures(degree=2, include_bias=False).fit_transform(df_xn)\n\n# Obter sa\u00edda\ndf_y = df_train[\"median_house_value\"]\n\n# Criar modelo\nmodel_multiple = LinearRegression().fit(xn_, df_y)\nr_sq = model_multiple.score(xn_, df_y)\nintercept, coefficients = model_multiple.intercept_, model_multiple.coef_\n\nprint('coefficient of determination:', r_sq)\nprint('intercept:', intercept)\nprint('coefficients:', coefficients, sep='\\n')","9e14d927":"# Como \u00e9 um processo demorado a transforma\u00e7\u00e3o das coordenadas em endere\u00e7os, foi utilizado um arquivo .xlsx processado no meu computador\n# com os dados j\u00e1 processados\n\n# df_test[\"county\"] = df_test[[\"latitude\",\"longitude\"]].apply(get_county,axis=1)\n\ndf_test = pd.read_csv(\"..\/input\/test-name\/test_name.csv\", na_values = \"NaN\")","f81fff82":"columns_name = [\"county\"]\ndf_test = string2int(columns_name, df_test)","3c8722e8":"df_test[\"rooms_per_house\"] = df_test[[\"total_rooms\", \"households\"]].apply(rooms_per_house,axis=1)\ndf_test[\"house_per_population\"] = df_test[[\"households\", \"population\"]].apply(house_per_population,axis=1)\ndf_test[\"bedroom_per_room\"] = df_test[[\"total_bedrooms\", \"total_rooms\"]].apply(bedroom_per_room,axis=1)\ndf_test[\"extra_rooms\"] = df_test[[\"total_bedrooms\", \"total_rooms\"]].apply(extra_rooms,axis=1)","be486310":"# df_test.to_excel(r'Test_County_results.xlsx', index = False)","7ac2d8e9":"entradas = [\"county\", \"total_rooms\", \"population\", \"households\", \"median_income\", \"median_age\", \"bedroom_per_room\"]\ny_pred = model_simple.predict(df_test[entradas])\n\ndf_pred = pd.DataFrame({'Id': df_test[\"Id\"], 'median_house_value': y_pred})\n\n# Salvar resultados\ndf_pred.to_csv(\"submission.csv\", index = False)\n#print('predicted response:', y_pred, sep='\\n')","8091d6d3":"### Passo 3 - Verificar formata\u00e7\u00e3o da tabela \n**3.1 Levantar informa\u00e7\u00f5es sobre os dados da tabela**","3f50f910":"# PMR3508 - Aprendizado de M\u00e1quina e Reconhecimento de Padr\u00f5es\n\n## Atividade Regress\u00e3o PMR3508: California Housing\n\nData: Outubro de 2020\n\nAluno: Henrique I. Wang\n\n**Enunciado:** Produce a linear regressor to predict the value of a house (variable median_house_value). You must use the Jupyter system to produce a notebook with your solution. ","84a7464d":"#### 7.1 - Heatmap","5a080977":"* Households","3d3c4168":"#### 5.1 - Escolha de vari\u00e1veis\n\nAnalisando o heatmap apresentado no **Passo 4.1**, as colunas que ser\u00e3o utilizadas para alimento o nosso modelo s\u00e3o: **longitude, latitude, total_rooms, population, median_income e households**.","683c691a":"#### 8.2 - Regress\u00e3o Polinomial","a34d5857":"### Passo 2 - Importa\u00e7\u00e3o de dados\n**Nome das colunas da tabela:** \\\nId | longitude | latitude | median_age | total_rooms | total_bedrooms | population | households | median_income \\\n**Biblioteca utilizada para ler os dados:** pandas \\\n**Arquivos lidos:** train.csv & test.csv","a9af443c":"### Passo 8 - Cria\u00e7\u00e3o de novos modelos\n\n####  8.1 - Regress\u00e3o Linear","438cc950":"* Total_bedrooms","11cc4bbe":"* Median_age \\\nEnxerga-se que para determinadis median_age n\u00e3o h\u00e1 alguns valores de median_house_value. Entretanto, como essas faixas s\u00e3o pequenas, n\u00e3o se pode ter certeza se essa propriedade ajudar\u00e1 ou atrapalhar\u00e1 nosso modelo.","f51ffcd5":"* County \\\nCom a troca da latitude e longitude pelo munic\u00edpio, percebe-se faixas de pre\u00e7o bem definidas para cada regi\u00e3o.","3a6e1e8b":"### Passo 7 - Nova an\u00e1lise do dados","9c7381b5":"* Extra_rooms","18502e27":"**3.3 Verifica\u00e7\u00e3o de dados faltantes**","cf6c0adb":"### Passo 4 - An\u00e1lise de dados\n\nPara um primeiro momento, ser\u00e3o utilizados apenas os dados \"crus\" apresentados na tabela para fazer uma an\u00e1lise da import\u00e2ncia de cada propriedade e a modelagem do sistema ","40477414":"Um fato que chamou muita aten\u00e7\u00e3o \u00e9 que as propriedades **house_holds, population, total_bedrooms e total_rooms** est\u00e3o altamente interligados. Al\u00e9m disso, pode-se perceber que tanto a latitude, quanto a longitude n\u00e3o t\u00eam tanto impacto sobre o median_house_value segundo o heatmap. Isto pode ter acontecido devido ao alto grau de especifica\u00e7\u00e3o da posi\u00e7\u00e3o de cada casa, dificultando o modelo. Dessa forma, a melhor solu\u00e7\u00e3o seria transformar essas coordenadas em endere\u00e7os, e utilizar o seu bairro ou cidade para melhorar a precis\u00e3o do modelo que ser\u00e1 constru\u00eddo. Entretanto, para um primeiro momento, isto n\u00e3o ser\u00e1 feito.","76fe9145":"**3.2 Verificar valida\u00e7\u00e3o dos dados**","81d57ad3":"#### 6.1 - Transforma\u00e7\u00e3o de coordenadas em endere\u00e7o\n\nSer\u00e1 utilizada a biblioteca geopy para fazer tal transforma\u00e7\u00e3o","0beb9d5c":"**2.2 Verificar se importa\u00e7\u00e3o dos dados ocorreram com sucesso**","ca80124b":"#### 5.3 - Aplica\u00e7\u00e3o de Regress\u00e3o Polinomial","18e88bd1":"### Passo 5 - Cria\u00e7\u00e3o do modelo","0a34b58a":"### Passo 9 - Previs\u00e3o do median_house_value\n\nComo foi pedido no enunciado, ser\u00e1 utilizado a t\u00e9cnica da Regressao Linear para prever os valores de median_house_value a partir dos dados obtidos no arquivo test.csv.\n\n#### 9.1 - Formatar os dados do arquivo test.csv","99cee12a":"**Conclus\u00e3o:** Analisando os dados apresentados logo acima, percebe-se que todos as informa\u00e7\u00f5es est\u00e3o condizentes com a realidade. Os valores da latitude e longitude est\u00e3o entre \u00b1 90 \u00b0 e \u00b1 180 \u00b0 respectivamente, e aparentemente n\u00e3o h\u00e1 nenhum valor fora do comum nas outras colunas.","8d7d5fb0":"#### 6.2 - Obten\u00e7\u00e3o de novos dados atrav\u00e9s das informa\u00e7\u00f5es j\u00e1 apresentadas\n\nPode-se criar obter novos atributos atrav\u00e9s dos dados existentes.\nSer\u00e3o desenvolvidos dois novos atributos:\n1. total_rooms\/households - pode dar uma no\u00e7\u00e3o do tamanho m\u00e9dio da casa (quanto mais quartos por casa, mais luxuosa)\n2. households\/population\n3. bedroom_per_room","3f66514a":"* Rooms_per_house \\\nPode-se excluir essa propriedade, uma vez que para uma mesma faixa de rooms_per_house apresentou diversos valores para median_house_value.","cd3d5d54":"**2.1 Importar dados dos arquivos .csv** \\\nDados faltantes est\u00e3o representados pelo s\u00edmbolo 'NaN' no aquivo .csv","3312e3ee":"* Bedroom_per_room","262075e1":"**5.2 - Aplica\u00e7\u00e3o da Regress\u00e3o Linear Simples**","d1c4dde0":"**4.1 - Heatmap**\n\nO uso de um Heatmap auxiliar\u00e1 observar o n\u00edvel de correla\u00e7\u00e3o entre as propriedades dispon\u00edveis. \n\nComo pode-se observar logo abaixo, o principal fator que atinge o \"median_house_value\" - atributo que desejamos estimar seu valores - \u00e9 o \"**median_income**\". Tal fato faz muito sentido, uma vez que quanto maior o sal\u00e1rio m\u00e9dio de uma popula\u00e7\u00e3o, maior \u00e9 o poder de compra dela. Logo, a tend\u00eancia \u00e9 que as pessoas comprem casas mais luxuosas.","59d0ab2a":"* Population","64df7db8":"#### 7.2 - An\u00e1lise individual\n\n* Median_income \\\nPode-se observar uma tend\u00eancia: quanto maior o media_income, maior \u00e9 o median_house_value","ed570085":"* Total_rooms","8588eb75":"### Passo 6 - \"Cozimento\" dos dados","6746b3fe":"#### 9.2 - Realizar as previs\u00f5es e salvar resultados","77c5bde0":"**Conclus\u00e3o:** N\u00e3o h\u00e1 nenhum dado faltante em ambos os documentos.","35f9ecad":"#### 5.4 - Compara\u00e7\u00e3o entre os dois modelos\n\nPode-se perceber que o modelo obtido com a Regress\u00e3o Polinomial foi melhor do que o da Regress\u00e3o Linear, uma vez que o seu R^2 \u00e9 maior.","b272d117":"* House_per_population","d46c8062":"### Passo 1 - Importa\u00e7\u00e3o de bibliotecas b\u00e1sicas"}}