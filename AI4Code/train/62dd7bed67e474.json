{"cell_type":{"19823d02":"code","7b22736d":"code","bea0a0b7":"code","3cf08ecf":"code","30c3b442":"code","81d69409":"code","ab3ab4e7":"code","4f00bc53":"code","7e31e9e1":"code","3c0e7da4":"code","88790b1e":"code","b76f0c5b":"code","53ff55ce":"code","32bb77ac":"code","781b24d9":"code","9df15c92":"code","06eee6a8":"code","d4ab6e00":"code","fb840630":"code","3261576d":"code","824d6ffa":"code","d8026561":"code","d2329d2d":"code","0c2bb14d":"code","7201c1cc":"code","0f795430":"code","ee2bf0a7":"code","5d07751b":"code","6fd9b2d5":"code","7e9a91b7":"code","913b5620":"code","36cb9572":"code","3c1730c9":"code","59cb0106":"code","b9948f40":"code","107e84e8":"code","378db3bc":"code","c58286ea":"markdown","4cadffe9":"markdown","3d53ef13":"markdown","5e5b887a":"markdown","2e67c250":"markdown","e0992c06":"markdown","c3af029a":"markdown","4918977c":"markdown","20a84834":"markdown","d201d41a":"markdown","2ac8927f":"markdown","0e548471":"markdown","65b19e5f":"markdown","27265d78":"markdown","b86f9c6e":"markdown","b0051bda":"markdown","6767af7d":"markdown","c7e36b20":"markdown","c72b3ad4":"markdown","6bebba4c":"markdown","fd598a15":"markdown","d7626573":"markdown","f61079d1":"markdown","82909d0b":"markdown","c980f959":"markdown","95131973":"markdown","39b13e8e":"markdown","bb825575":"markdown","b9c39ece":"markdown","c8deca3b":"markdown","9d1fb531":"markdown","52f736bb":"markdown"},"source":{"19823d02":"# Import all of the necessary packages.\nimport numpy as np\nimport pandas as pd\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nfrom matplotlib.pyplot import stackplot\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","7b22736d":"# Read in the data from CSV file.\ndf = pd.read_csv(\"..\/input\/axial-age-dataset\/AxialAgeDataset.csv\")","bea0a0b7":"df.head()","3cf08ecf":"df.shape","30c3b442":"df.info()","81d69409":"df.describe()","ab3ab4e7":"# Visualize missing values as a matrix\nmsno.matrix(df);","4f00bc53":"# Visualize the number of missing values as a bar chart\nmsno.bar(df);","7e31e9e1":"# Visualize the correlation between the number of missing values in different columns as a heatmap\nmsno.heatmap(df);","3c0e7da4":"msno.dendrogram(df);","88790b1e":"for i in df.columns:\n    null_rate = df[i].isna().sum() \/ len(df) * 100 \n    if null_rate > 0 :\n        print(\"{}'s null rate :{}%\".format(i,round(null_rate,2)))","b76f0c5b":"#Detect missing values\ndf.isna().sum()","53ff55ce":"# Create a text preprocessing function\n\n\ndef text_preprocess(str):\n    \"\"\" This function removes numbers and periods, \n    replaces spaces and dashes with underscores, and lowercases letters\n    for easier coding and top keep text in compliance with PEP-8 formatting.\n    \n    Parameters:\n    INPUTS:\n    str (str): This is the text to be preprocessed.\n    \n    OUTPUTS:\n    str : This is the fully preprocessed string.\n    \"\"\"\n    \n    str = str.lstrip('0123456789. ')\n    str = re.sub(r\"\\s+\", '_', str)\n    str = re.sub(r\"[\\-.]\", '_', str)\n    str = str.lower()\n    return str\n\n\n# Apply the text preprocessing tool to column names and the contents\n# of the nga column.\ndf.columns = df.columns.to_series().apply(text_preprocess)\ndf[\"nga\"] = df[\"nga\"].map(text_preprocess)\n\n# Check that the preprocessing worked.\nprint(\"RegExed Columns:\\n\" + str(df.columns))\nprint(\"\\nRegExed NGAs:\\n\" + str(df.nga.unique()))","32bb77ac":"# Replace NaN values in the dataframe with 0.\ndf = df.fillna(0)","781b24d9":"df.isna().sum()","9df15c92":"df.dtypes","06eee6a8":"df.describe()","d4ab6e00":"# Check the summary statistics of the date_from column.\ndf_subset=df[\"date_from\"]\ndf_subset.describe()","fb840630":"sns.set_context(\"notebook\",font_scale=1)\nsns.set_palette(\"pastel\")","3261576d":"plt.figure(figsize=(20,10))\nsns.lineplot(data=df, y=\"date_from\",x='nga')\nplt.title('Relation betwwen time and nga');","824d6ffa":"def chart_over_time(title, xlabel = \"Years CE\"):\n    \n    \"\"\"This function sets the title size to 20 and the X-axis label \n    to 15, standardizing the format of many of my graphs.\n    \n    Parameters:\n    INPUTS:\n    title (str): This is a string of what the graph's title will be.\n    \n    xlabel (str): This is a string of what the graph's x-axis label\n    will be. The default label is \"Years CE\" unless otherwise specified.\n    \"\"\"\n    \n    plt.title(title, fontsize=18, fontweight='bold')\n    plt.xlabel(xlabel, fontsize = 15)\n    \n    \ndef set_plotsize(w, h):\n    \n    \"\"\"This function just shortens the plt.figure(figsize=(x, y))\n    function in a couple places for readability.\n    \n    Parameters:\n    INPUTS:\n    w (int): This is the final plot's width.\n    \n    h (int): This is the final plot's height.\n    \"\"\"\n    \n    plt.figure(figsize=(w, h))\n    \n    \ndef compile_superplot(title):\n    \n    \"\"\"This function automates a lot of the post-formating for\n    subplots. It sets standard padding and a standard title\n    size.\n    \n    Parameters:\n    INPUTS:\n    title (str): This is the superplot's title.\n    \"\"\"\n    \n    fig.suptitle(title, fontsize = 20, fontweight='bold')\n    fig.tight_layout(rect=[0, 0.03, 1, 0.97])\n    fig.show()","d8026561":"plt.figure(figsize=(14, 7))\ndf.date_from.plot(kind=\"hist\", color = 'lightblue');\nchart_over_time(\"Historical Years Represented\")","d2329d2d":"sns.set_palette(\"plasma\")\ndf.plot(subplots=True, figsize=(10,14))\nplt.show()","0c2bb14d":"from pandas.plotting import autocorrelation_plot\nplt.figure(figsize=(14, 7))\n\nautocorrelation_plot(df['sum'])\nplt.show()","7201c1cc":"\nnga_list = df.nga.unique()\n","0f795430":"# Plot total observations by feature over time.\ndf_date_list = df.date_from.unique()\ndf_date_list = sorted(df_date_list)\n# Create a list of non-time, non-geographic, and non-aggregate\n# features in the dataset.\ncol_list = (list(df))\nnew_col_list = (col_list[2:-1])\n\n# Create a dataframe for the plot.\nfeature_adoption=[]\nfor i in df_date_list:\n    date_dict = {}\n    date_dict[\"year\"] = i\n    df_years = df.loc[df['date_from'] == i]\n    for j in new_col_list:\n        df_feature = df_years[[\"date_from\", j]]\n        total = df_feature[j].sum()\n        date_dict[j] = total\n    feature_adoption.append(date_dict)    \nadoptiondf = pd.DataFrame(feature_adoption)\n\n# Plot subplots of features over time. \nfig = plt.figure(figsize=(10,20))\nnum = 1\nfor i in range(1,12):    \n    ax = fig.add_subplot(6,2,num)\n    adoptiondf.plot(x='year', y=new_col_list[i-1], \n                    ax = ax, legend = False, color = \"red\")\n    chart_over_time(\"Total {}\\nSums Over Time\".format(new_col_list[i-1]))\n    plt.ylim(0, 11)\n    num += 1  \n    \ncompile_superplot(\"Features Over Time\")","ee2bf0a7":"\n(sns.FacetGrid(df,hue=\"nga\", height=5,xlim = (0,20)).map(sns.kdeplot, \"sum\").add_legend())\nplt.title('Sum Distribution w.r.t. NGA',fontsize=15, fontweight='bold')\n\nplt.show()","5d07751b":"\n\nsns.catplot(x=\"nga\", y=\"sum\", kind=\"boxen\",\n            data=df.sort_values(\"nga\"))\nplt.title('NGA vs Sum',fontsize=15, fontweight='bold')\nplt.xticks(rotation=90)\nplt.show()","6fd9b2d5":"df.dtypes","7e9a91b7":"sns.set_palette(\"Dark2\")\nplt.figure(figsize=(14, 7))\nsns.set_context(\"notebook\",font_scale=1)\nsns.kdeplot(\n    data=df, x=\"moralizing_norms\", hue=\"nga\",\n    cumulative=True, common_norm=False, common_grid=True,\n)\nplt.title('Moralizing Norms vs NGA',fontsize=15, fontweight='bold')\n\nplt.show()","913b5620":"\nsns.catplot(x=\"nga\", y=\"moralistic_punishment\", \n            kind=\"violin\", inner=\"stick\", split=True,\n            palette=\"tab10\", data=df)\nplt.title('Moralistic Punishment Distribution vs NGA',fontsize=15, fontweight='bold')\nplt.xticks(rotation=60)\nplt.show()","36cb9572":"nga_list","3c1730c9":"# Calculate the sum of each feature over time within each nga.\nnga_sum = df.groupby([\"nga\"]).sum()\nnga_sum = nga_sum.drop('date_from', axis = 1)\n\n# Calculate the mean of each feature over time with each nga.\nnga_mean = df.groupby([\"nga\"]).mean()\nnga_mean = nga_mean.drop('date_from', axis = 1)\nnga_mean","59cb0106":"# Transpose the nga_mean dataframe to plot mean \n# feature values observed within ngas.\nsns.set_palette(\"pastel\")\nnga_mean_transposed = nga_mean.drop('sum', axis = 1)\nnga_mean_transposed = nga_mean_transposed.transpose()","b9948f40":"for i in nga_list:\n    nga_subdf = df[df['nga'] == i]\n    nga_subdf = nga_subdf.drop(['nga', 'sum'], axis = 1)\n    fig, ax = plt.subplots(figsize=(20,5))\n    ax.stackplot(nga_subdf['date_from'], \n                 nga_subdf['moralistic_punishment'], \n                 nga_subdf['moralizing_norms'], \n                 nga_subdf['promotion_of_prosociality'], \n                 nga_subdf['omniscient_supernatural_beings'],\n                 nga_subdf['rulers_not_gods'], \n                 nga_subdf['equating_elites_and_commoners'],\n                 nga_subdf['equating_rulers_and_commoners'],\n                 nga_subdf['formal_legal_code'],\n                 nga_subdf['general_applicability_of_law'],\n                 nga_subdf['constraint_on_executive'],\n                 nga_subdf['full_time_bureaucrats'],\n                 nga_subdf['impeachment'], \n                 labels = new_col_list)\n    ax.set_xlim(-4000, 1800)\n    chart_over_time(\"Features Over Time\\nin {}\".format(i))\n    ax.legend(loc=2)\n    ax.axes.get_yaxis().set_visible(False)","107e84e8":"# Plot mean values for each feature observed in a given nga.\nfig = plt.figure(figsize=(10,30))\nnum = 1\ncolor_idx = 0\ncolorrr=['crimson', 'lightblue', 'PaleVioletRed', 'MediumSeaGreen', 'YellowGreen', 'Orange', 'DodgerBlue', 'SlateBlue', 'orchid', 'DarkCyan', 'aqua']\nfor i in nga_mean_transposed:\n    color = colorrr[color_idx]\n    subdf = nga_mean_transposed[[i]]\n    ax = fig.add_subplot(5,2,num)\n    subdf.plot.bar(ax = ax, legend = False,\n                   title = \"Total Mean of Features\\nOver Time in {}\".format(i),\n                   color = color)\n    color_idx += 1\n    num += 1\n\n# Set the figure superparameters.\ncompile_superplot(\"Features by Society\")","378db3bc":"# Separate out features from the dataframe and run a correlation matrix.\nfeatures_df = df.iloc[:,1:14]\ncorr = features_df.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)\n\ncorrelations = corr.unstack()\nsorted_correlations = correlations.sort_values()\nplt.title(\"Correlation\", fontsize = 20)\nplt.show()","c58286ea":"# <span style=\"font-family:serif; font-size:28px;\"> 3. Visualize missing values <\/span>\n","4cadffe9":"> **The dendrogram allows you to more fully correlate variable completion, revealing trends deeper than the pairwise ones visible in the correlation heatmap. To interpret this graph, read it from a top-down perspective. Cluster leaves which linked together at a distance of zero fully predict one another's presence\u2014one variable might always be empty when another is filled, or they might always both be filled or both empty, and so on. The height of the cluster leaf tells you, in absolute terms, how often the records are \"mismatched\" or incorrectly filed\u2014that is, how many values you would have to fill in or drop, if you are so inclined.**","3d53ef13":"Let's replace the NaN values in the dataset with zero since that seems the most appropriate\nfor overall data.","5e5b887a":"### Let's check the clean data","2e67c250":"______","e0992c06":"We continue to observe a general upward trend for most features over time. However, the trends are much less smooth, owing to specific changes in specific NGAs.","c3af029a":"# <span style=\"font-family:serif; font-size:28px;\"> 4. Data Cleaning <\/span>","4918977c":"# <span style=\"font-family:serif; font-size:28px;\"> 2. Quick look at the data<\/span>","20a84834":"We can see that some of the columns have similar graph shape","d201d41a":"### **So What Was the Axial Age?**\nThe Axial Age (also known as the Axis Age) is the era when the  great intellectual, philosophical, and religious systems that came to form subsequent human civilization and culture appeared, much of the inhabited world at about the same time.","2ac8927f":"<span style=\"color:crimson;font-family:serif; font-size:20px;\">  Please upvote if you liked the kernel! \ud83d\ude00\n    <p style=\"color:royalblue;font-family:serif; font-size:20px;\">KEEP KAGGLING!<\/p> \n<\/span>","0e548471":"# <span style=\"font-family:serif; font-size:28px;\"> 4. Data Visualization <\/span>","65b19e5f":"> **Using this matrix you can very quickly find the pattern of missingness in the dataset.\nFrom the above visualisation we can observe that this particular dataset has a lot of missing  values. Looking at the pattern, we can see that most columns have similar pattern of missingness except for Equating elites and commoners and Equating rulers and commoners columns.**","27265d78":"**In relation to one another, what sociopolitical norms did various societies around the Mediterranean and Asia evolve over time?**\n\n* Moralistic punishment and belief in omniscient supernatural beings were prevalent throughout the Classical world, with the exception of Cambodia and the Kachi Plain, respectively.\n* Moralizing norms, and to a lesser extent, prosociality promotion, the belief that rulers were not gods, a formal legal code, general applicability of law, constraints on the executive, and full-time bureaucrats were features shared by all NGAs except Kansai, possibly due to the NGA's high value of null values.\n* Galilee, the Kachi Plain, the Konya Plain, Susiana, Upper Egypt, and Crete(to a lesser extent) performed significantly better in terms of equating rulers and commoners with elites.\n* The Yellow River Valley did have a marginally greater instance of impeachment than Upper Egypt.\n* With the exception of Kansai, every NGA has a much significant number of full-time bureaucrats than Latium.","b86f9c6e":"We can see that we have 428 rows and 15 columns. We can also take a glance at the Data types of all the columns. If you notice the Not Null Count, we can observe that we definately have missing values in our data. Let's dive deeper into the missing values and analyse them.","b0051bda":"> **Heatmap shows the correlation of missingness between every 2 columns. A value near 0 means there is no dependence between the occurrence of missing values of two variables.**","6767af7d":"___","c7e36b20":"**<center> <span style=\"color:green;font-family:serif; font-size:32px;\">History Of Ancient Empires \ud83c\udf0f\ud83d\udcca<\/span> <\/center>**","c72b3ad4":"The Axial Age dataset tracks a variety of sociopolitical norms and their development across key areas in Afro-Eurasia. The specific scores for each sociopolitical norm for each date (varying time spans between 5300 BCE and 1800 CE in 100 year increments) within 10 NGAs (natural geographic area) were agreed-upon by a group of experts and compiled into the dataset.","6bebba4c":"> **This bar chart gives you an idea about how many missing values are there in each column.**\n","fd598a15":"Lets check how many null values are there in the data","d7626573":"___","f61079d1":"___","82909d0b":"___","c980f959":"I confirmed my earlier suspicion that not all NGAs are represented for all time periods. This skewedness in seen in both the summary statistics and histogram below. The distribution of dates indicated that NGAs began to be represented at varying starting times and tended to continue to be observed until about 1800. Breaking this down by nga with the groupby function, this suspicion is confirmed with starting years ranging from 5300 BCE to 200 CE and four NGAs ceasings observations in 1600 or 1700.","95131973":"# <span style=\"font-family:serif; font-size:28px;\"> 1. Importing libraries and reading data<\/span>","39b13e8e":"![ancient-civilizations-1080P-wallpaper.jpg](attachment:f88d22a2-e1b4-46b4-a310-65b90236b2ca.jpg)","bb825575":"___","b9c39ece":"Autocorrelation plots are a commonly used tool for checking randomness in a data set. This randomness is ascertained by computing autocorrelations for data values at varying time lags.\nAn autocorrelation of +1 indicates that if the time series one increases in value the time series 2 also increases in proportion to the change in time series 1.\nAn autocorrelation of -1 indicates that if the time series one increases in value the time series 2 decreases in proportion to the change in time series 1.","c8deca3b":"### **Could an Axial Age Happen Again?**\nSome say that we may be on the verge of a new one now. There is no doubt that technology has changed the way people live their lives, connect with society, communicate, and view the world around them, both individually and collectively. The first axial age marked a discovery of transcendence. Let's see what the future holds. =)","9d1fb531":"**Which of these norms were most and least likely to be observed in the same place and time?**\n\n* A formal legal code, prosociality promotion, and general applicability of law were the most likely to be observed together quantitatively, with a clear possible correlation in the results. Impeachment was the least likely trait to co-occur with equating elites and commoners, all of which had a mild negative association.\n\n* Impeachment was also correlated to the involvement of full-time bureaucrats, though the connection was much weaker.\n\n* Impeachment and an omniscient supernatural being, the promotion of prosociality, and moralistic punishment were the least correlated traits, implying that the latter three did not correlate with the presence or absence of the former in any substantive way.","52f736bb":"Societies seem to accumulate cultural features over time rather than having attributes appear and disappear evenly.\nWe can note that from 5300 BCE to 4000 BCE there were zero positive cultural feature observations. The general cumulative trend elsewhere was generally positive."}}