{"cell_type":{"ead7fb54":"code","51bad851":"code","0d947264":"code","ee1a090f":"code","2e4a7059":"code","ef2d423d":"code","e702a787":"code","2ba6313e":"code","a9d4f4d7":"code","6923e125":"code","b068b54f":"code","e999ad13":"code","df4ba080":"code","f0765c78":"code","2a1bc3fb":"code","28d35168":"code","281d67a5":"code","40e690a8":"code","75e51873":"code","cf04b4cf":"code","616d0e52":"code","5cb1dc1f":"code","4f5fc07e":"code","54f2deb6":"code","638a542a":"code","9feee4ac":"code","11630423":"code","2fe75802":"markdown","acc83060":"markdown","5244eff5":"markdown","bb05dba1":"markdown","2d7b648f":"markdown"},"source":{"ead7fb54":"#Goal : create word vector from Game of Throne dataset\n\nfrom __future__ import absolute_import, division, print_function # for dependency python 2 to 3\n# For word encoding\nimport codecs\n# Regex\nimport glob\n# Concurrency\nimport multiprocessing\n# Dealing with operating system like reading files\nimport os\n# Regular Expression\nimport re\n# Natural Language  Toolkit\nimport nltk\nfrom nltk.corpus import stopwords\n# WOrd 2 vec\nfrom gensim.models import Word2Vec\n# Dimensional Reductionality\nimport sklearn.manifold\n#math\nimport numpy as np\n#plotting\nimport matplotlib.pyplot as plt\n#data processing \nimport pandas as pd\n# Data Visualization\nimport seaborn as sns\n\n%matplotlib inline","51bad851":"# logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO)","0d947264":"# nltk.download(\"punkt\") #Pretrained Tokenizer\n# nltk.download(\"stopwords\") #Words like a, the, an, of etc","ee1a090f":"\nbook_filenames = sorted(glob.glob(\"..\/input\/*.txt\"))\n# book_filenames = sorted(glob.glob(\"data\/*.txt\"))","2e4a7059":"print(\"Books Found :\")\nbook_filenames","ef2d423d":"corpus_raw = u\"\"\nfor book_filename in book_filenames:\n    print(\"Reading '{0}'...\".format(book_filename))\n    with codecs.open(book_filename, \"r\", \"UTF-8\") as book_file:\n        corpus_raw += book_file.read()\n    \n    print(\"Corpus is now {0} characters long\". format(len(corpus_raw)))\n    print()","e702a787":"text = corpus_raw\n# Preprocessing the data\ntext = re.sub(r'\\[[0-9]*\\]',' ',text)\ntext = re.sub(r'\\s+',' ',text)\ntext = text.lower()\ntext = text.strip()\ntext = re.sub(r'\\d',' ',text)\ntext = re.sub(r'\\s+',' ',text)\n\n","2ba6313e":"# Preparing the dataset\nsentences = nltk.sent_tokenize(text)","a9d4f4d7":"sentences","6923e125":"sentences = [nltk.word_tokenize(sentence) for sentence in sentences]","b068b54f":"sentences","e999ad13":"for i in range(len(sentences)):\n    sentences[i] = [word for word in sentences[i] if word not in stopwords.words('english')]","df4ba080":"sentences","f0765c78":"# Training the Word2Vec model\nmodel = Word2Vec(sentences, min_count=1)","2a1bc3fb":"model","28d35168":"words = model.wv.vocab","281d67a5":"words","40e690a8":"# Finding Word Vectors\nvector = model.wv['khaleesi']","75e51873":"vector","cf04b4cf":"# Most similar words\nmodel.wv.most_similar(\"khaleesi\")","616d0e52":"model.wv.most_similar(\"aerys\")","5cb1dc1f":"model.wv.most_similar(\"direwolf\")","4f5fc07e":"#distance, similarity, and ranking\ndef nearest_similarity_cosmul(start1, end1, end2):\n    similarities = model.wv.most_similar_cosmul(\n        positive=[end2, start1],\n        negative=[end1]\n    )\n    start2 = similarities[0][0]\n    print(\"{start1} is related to {end1}, as {start2} is related to {end2}\".format(**locals()))\n    return start2","54f2deb6":"nearest_similarity_cosmul(\"stark\", \"winterfell\", \"riverrun\")\nnearest_similarity_cosmul(\"jaime\", \"sword\", \"wine\")\nnearest_similarity_cosmul(\"arya\", \"nymeria\", \"dragons\")","638a542a":"X = model[model.wv.vocab]","9feee4ac":"from sklearn.decomposition import PCA\npca = PCA(n_components=2)\nresult = pca.fit_transform(X)\nplt.scatter(result[:, 0], result[:, 1])","11630423":"words = list(model.wv.vocab)\nplt.figure(figsize=(12,5))\nfor i, word in enumerate(words):\n    plt.annotate(word, xy=(result[i, 0], result[i, 1]))\nplt.show()","2fe75802":"**Combine the books into one string**","acc83060":"# Setting Up Logging","5244eff5":"# Import","bb05dba1":"**Load books from files**","2d7b648f":"# Prepare Corpus"}}