{"cell_type":{"dded61a2":"code","b240cc27":"code","24f1dd58":"code","75080f43":"code","0b41a39f":"code","4d4bc836":"code","aff20c9b":"code","078f5d53":"code","c0cdde1e":"code","f5924e82":"code","1a6ffe1b":"code","6269d668":"code","96ef5dc1":"code","2abba4d4":"code","f4d36b16":"code","ffe97e79":"code","ffab0125":"code","26f26fc9":"code","9acd0f96":"code","171ad5ab":"code","2967eca1":"code","c38f8075":"code","99d4c354":"code","faf4502d":"code","90ba393c":"code","93ae77c2":"code","9732a867":"code","20845597":"code","368632b2":"code","9325a865":"code","7f41676f":"code","173f1799":"code","3572f990":"code","83f23199":"code","0efc3cd7":"code","32688ced":"code","8880d179":"code","fcff9d22":"code","6496a131":"code","63f21624":"code","e827a70b":"code","5585d96c":"code","9764b36c":"code","775b2399":"code","cfec858c":"code","075f2fcc":"code","3314ee9c":"code","dbbb2dba":"code","feab2397":"code","818ca63d":"code","c297a7b7":"code","8ef2c0c2":"code","4c9ba293":"code","c9946876":"code","ffdd02ea":"code","da52ad47":"code","ea975ab3":"code","fc633c0e":"code","9bbf87b3":"code","ad3bf6af":"code","b1edc5f1":"code","4d0c9237":"code","e17f6c06":"code","05837bee":"code","8b15691d":"code","d32a911a":"code","79e7a4bb":"code","f3259e3f":"code","f517ba95":"code","4ccc59ae":"code","23dbabd9":"code","d12ec847":"code","854f67fe":"markdown","4e4f2a87":"markdown","22503bf3":"markdown","172dc889":"markdown","b7fd57fd":"markdown","f6cb3d22":"markdown","8b9327d8":"markdown","eea0d1d6":"markdown","95481e37":"markdown","3c4c47d7":"markdown","bba11ba2":"markdown","a6e3d126":"markdown","70c60dec":"markdown","ed90c79e":"markdown","68bf6315":"markdown","9009a653":"markdown","8b7f469d":"markdown","da8700a9":"markdown","41028260":"markdown","5a3e5b6f":"markdown","d9cf99ad":"markdown","dc4a53db":"markdown","39425c56":"markdown","c4b10a6f":"markdown","8c2e44e8":"markdown","259ace6d":"markdown","71535bec":"markdown","66bdb0f8":"markdown","9de7c195":"markdown","a0bdfa51":"markdown","21bb17cc":"markdown","66d6bd6f":"markdown","9b6dff94":"markdown","0c466a71":"markdown"},"source":{"dded61a2":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","b240cc27":"df_Train = pd.read_csv('..\/input\/d\/rahulsah06\/titanic\/train.csv')\ndf_test=pd.read_csv('..\/input\/d\/rahulsah06\/titanic\/test.csv')\ndf_survived=pd.read_csv('..\/input\/d\/rahulsah06\/titanic\/gender_submission.csv')","24f1dd58":"df_test.head()","75080f43":"df_survived.head()","0b41a39f":"df_survived.drop(['PassengerId'],axis=1)","4d4bc836":"df_test['Survived']=df_survived['Survived']","aff20c9b":"df_survived.head()","078f5d53":"df_test.head()","c0cdde1e":"df_Train.head()","f5924e82":"df=pd.concat([df_test,df_Train])","1a6ffe1b":"df.head()","6269d668":"df.info()","96ef5dc1":"df.corr()['Survived'].sort_values()","2abba4d4":"sns.scatterplot(data=df , x='Survived', y='Fare')","f4d36b16":"sns.boxplot(data=df , x='Survived', y='Fare')","ffe97e79":"df[(df['Survived']==1)&(df['Fare']>400)][['Survived','Fare']]","ffab0125":"index_drop=df[(df['Fare']>400) & (df['Survived']==1) ].index\ndf=df.drop(index_drop, axis=0)","26f26fc9":"sns.scatterplot(data=df_Train , x='Survived', y='Fare')","9acd0f96":"sns.boxplot(data=df , x='Survived', y='Fare')","171ad5ab":"df.isnull().any()","2967eca1":"df=df.drop(['Name'],axis=1)","c38f8075":"df.isnull().sum()","99d4c354":"100*(df.isnull().sum()\/len(df))","faf4502d":"def missing_percent(df):\n    nan_percent= 100*(df.isnull().sum()\/len(df))\n    nan_percent= nan_percent[nan_percent>0].sort_values()\n    return nan_percent","90ba393c":"nan_percent= missing_percent(df)","93ae77c2":"sns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","9732a867":"sns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0,1)","20845597":"df[df['Fare'].isnull()]","368632b2":"df= df.dropna(axis=0, subset=['Fare'])","9325a865":"df[df['Embarked'].isnull()]","7f41676f":"df= df.dropna(axis=0, subset=['Embarked'])","173f1799":"nan_percent= missing_percent(df)\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","3572f990":"df[df['Age'].isnull()]","83f23199":"sns.kdeplot(data=df['Age'])","0efc3cd7":"df['Age'] = df['Age'].fillna(df['Age'].mean())\n\nmissing_percent(df)","32688ced":"df= df.drop(['Cabin'], axis=1)","8880d179":"df.isnull().any()","fcff9d22":"df=df.drop(['Ticket'],axis=1)","6496a131":"df.head()","63f21624":"sns.barplot(data=df,x='Survived',y='Fare',color='c')","e827a70b":"sns.barplot(data=df,x='Survived',y='Age',color='c')","5585d96c":"sns.barplot(data=df,y='Survived',x='Sex',color='c')","9764b36c":"sns.heatmap(data=df.corr(),annot=True,cmap=\"Blues\")","775b2399":"sns.barplot(x=\"Survived\", y=\"Fare\", hue=\"Pclass\", data=df,palette=\"Blues_d\")","cfec858c":"df.info()","075f2fcc":"df.head()","3314ee9c":"df['Survived'] = df['Survived'].apply(str)\ndf['Pclass'] = df['Pclass'].apply(str)","dbbb2dba":"df.info()","feab2397":"df_num= df.select_dtypes(exclude='object')\ndf_obj= df.select_dtypes(include='object')","818ca63d":"df_num.info()","c297a7b7":"df_obj.info()","8ef2c0c2":"# Converting objects to number by one-hot encoding(drop_first=True:removes multi-collinearity)\ndf_obj= pd.get_dummies(df_obj, drop_first=True)","4c9ba293":"Final_df= pd.concat([df_num, df_obj], axis=1)","c9946876":"Final_df.head()","ffdd02ea":"Final_df['Survived_1'].value_counts()","da52ad47":"sns.countplot(data=Final_df, x='Survived_1')","ea975ab3":"X= Final_df.drop('Survived_1', axis=1)\ny= Final_df['Survived_1']","fc633c0e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=101)","9bbf87b3":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()","ad3bf6af":"scaler.fit(X_train)\nscaled_X_train= scaler.transform(X_train)\nscaled_X_test= scaler.transform(X_test)","b1edc5f1":"from sklearn.linear_model import LogisticRegression\nlog_model= LogisticRegression()","4d0c9237":"log_model.fit(scaled_X_train, y_train)","e17f6c06":"#Model Coeficient:\nlog_model.coef_","05837bee":"y_pred= log_model.predict(scaled_X_test)","8b15691d":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, plot_confusion_matrix","d32a911a":"accuracy_score(y_test, y_pred)","79e7a4bb":"confusion_matrix(y_test, y_pred)","f3259e3f":"plot_confusion_matrix(log_model, scaled_X_test, y_test)","f517ba95":"print(classification_report(y_test, y_pred))","4ccc59ae":"from sklearn.metrics import precision_recall_curve, plot_precision_recall_curve, plot_roc_curve","23dbabd9":"plot_precision_recall_curve(log_model, scaled_X_test, y_test)","d12ec847":"plot_roc_curve(log_model, scaled_X_test, y_test)","854f67fe":"# ROC Curve\n\n\n**AUC(Average Under Curve): based on this we can comparethe perfomance between algorithms but this is not enough and we have to make decision base on Statistical hypothesis testing(H0 & H1)**\n\n**we can use antoher curve Recall-Precision to show the trade-off between them**","4e4f2a87":"**Evaluating the Model**","22503bf3":"**it seems age didn't affected on this issue**","172dc889":"# EDA & Data Cleaning:","b7fd57fd":"**Step5: Determine the Features & Target Variable**","f6cb3d22":"**we almost don't have any data about Cabin(missing=77%) so we drop it**","8b9327d8":"**ticket column doesn't help us in model buillding so we drop it**","eea0d1d6":"**as it shows people with more fare and the high Pclass had more chance to survive**","95481e37":"**now the data set is ready**","3c4c47d7":"# dealing with categorical data","bba11ba2":"**\"Survived\" and \"Pclass\" are categorical but now they are Int. we have to change them to object**","a6e3d126":"**Predicting Test Data**","70c60dec":"**Scaling the Features**","ed90c79e":"# EDA","68bf6315":"**we don't have any missing value**","9009a653":"# Performance Metrics\n\n### Accuracy(How often is the model correct?)\n\n**Acc=(TP+TN)\/Total**\n\n**be aware of accuracy paradox(for imbalanced classes)**\n\n### Recall(when it actually is a positive case, how often is it correct?)\n\n**recal=(TP)\/Total Actual Positives**\n\n**it is good for imbalanced classes**\n\n### Precision(when prediction is positive,how often is it correct?)\n\n**Precision=(TP)\/Total predicted positive**\n\n### F1 Score\n\n![download.png](attachment:68d3cccf-90ab-4ae4-a54f-393c953ca11a.png)","8b7f469d":"**we have passenger Id so we can drop the names because it can not help us for our model building**","da8700a9":"**since missing ages are not neglectable,we replace them with mean.**","41028260":"**the more they paid for Fare the more they survived**","5a3e5b6f":"### checking for outliers:","d9cf99ad":"**Train the Model**","dc4a53db":"### Checking for missing data:","39425c56":"**most of the survivors were female**","c4b10a6f":"**Dummy Variables:**","8c2e44e8":"# Logistic Regression","259ace6d":"**this algorithm is one of the classification algorithm(for categorical labels)**\n\n**note that: sometimes we can convert continous terget to discrete labels.**\n\n**this algorithm is basis of Neural Networks**\n\n**It predicts base on probability for new commers in data set.**\n\n**It uses sigmoid activation function**\n\n![LogReg_1.png](attachment:be856a65-2e98-4d7f-8285-3b225059e4b7.png)\n\n","71535bec":"### first consider these possibilties:\n\n**Sensitivity (True Positive Rate): infected person tests positive.** \n\n**Specificity (True Negative Rate): healthy person tests negative.**\n\n[https:\/\/en.wikipedia.org\/wiki\/Sensitivity_and_specificity#Sensitivity](http:\/\/)\n\n**False negative: infected tests negative**\n\n**False positive: healthy person tests positive**\n\n","66bdb0f8":"**Evaluating Curves and AUC**","9de7c195":"**Split the Dataset to Tain & Test set**","a0bdfa51":"the problem is almost balance","21bb17cc":"**here I am using Logistic regresion to create a model that predicts which passengers survived the Titanic shipwreck.**\n\n**In this challenge, we asked to build a predictive model that answers the question: \u201cwhat sorts of people were more likely to survive?\u201d using passenger data (ie name, age, gender, socio-economic class, etc).**","66d6bd6f":"**Fare value had the most impact on surviving**","9b6dff94":"# Logistic Regression","0c466a71":"### Confusion matrix:\n![1_fxiTNIgOyvAombPJx5KGeA.png](attachment:b747175a-379b-4242-aa8f-930316290691.png)"}}