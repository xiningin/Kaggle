{"cell_type":{"3c7d67bd":"code","db86a325":"code","c2ab52a4":"code","3b249f10":"code","aa682061":"code","e3f62c5b":"code","6fea7d12":"code","15cf52be":"code","b8e330c9":"code","7458f246":"code","8c6f64f5":"code","dbf0e80f":"code","269dfb97":"code","00e80e98":"code","5cef0ec0":"code","752e6082":"code","8258a6e7":"code","f4d236b0":"code","85b30eac":"code","70a73b3c":"code","dc5a960c":"code","245931fa":"code","0730fbff":"code","a3fe67c0":"code","d2cc64c9":"code","c5c3248f":"code","dbd29772":"code","57ff7c32":"code","af26996f":"code","c041814d":"code","391ac5f7":"code","00f5900c":"code","70f4b9b0":"code","bf3ffcac":"markdown","2738ce15":"markdown","46245891":"markdown","a036a33c":"markdown","bd8cd8d6":"markdown","5faf85dc":"markdown","9e2bc5f7":"markdown","11d68474":"markdown","fb53d464":"markdown","37eb1170":"markdown","08a6f2f7":"markdown","901d1a2a":"markdown","e8b269fd":"markdown","b1739d13":"markdown","b6d49825":"markdown","3af622da":"markdown"},"source":{"3c7d67bd":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","db86a325":"import matplotlib.pyplot as plt\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns \n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","c2ab52a4":"data=pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","3b249f10":"print(data.shape)\ndata.head()","aa682061":"data.describe()","e3f62c5b":"data.info()","6fea7d12":"data.isnull().sum()","15cf52be":"data.quality.value_counts()","b8e330c9":"plt.figure(figsize=(20,15))\nsns.heatmap(data.corr(), annot=True, cmap='viridis')","7458f246":"data['pH'].plot.hist()","8c6f64f5":"sns.pairplot(data=data)","dbf0e80f":"plt.figure(figsize=(15,10))\nsns.boxplot(data=data)","269dfb97":"sns.boxplot(data['total sulfur dioxide'])","00e80e98":"data['residual sugar'].plot.hist()","5cef0ec0":"lower,upper=data['free sulfur dioxide'].mean() - 3*data['free sulfur dioxide'].std(), data['free sulfur dioxide'].mean() + 3*data['free sulfur dioxide'].std()\nprint(lower, upper)\ndata1=data[(data['free sulfur dioxide']>lower) & (data['free sulfur dioxide']<upper)]\ndata.shape[0] - data1.shape[0]","752e6082":"lower,upper=data1['total sulfur dioxide'].mean() - 3*data1['total sulfur dioxide'].std(), data1['total sulfur dioxide'].mean() + 3*data1['total sulfur dioxide'].std()\nprint(lower, upper)\ndata2=data1[(data1['total sulfur dioxide']>lower) & (data1['total sulfur dioxide']<upper)]\ndata1.shape[0] - data2.shape[0]","8258a6e7":"lower,upper=data2['residual sugar'].mean() - 3*data2['residual sugar'].std(), data2['residual sugar'].mean() + 3*data2['residual sugar'].std()\nprint(lower, upper)\ndata3=data2[(data2['residual sugar']>lower) & (data2['residual sugar']<upper)]\ndata2.shape[0] - data3.shape[0]","f4d236b0":"lower,upper=data3['fixed acidity'].mean() - 3*data3['fixed acidity'].std(), data3['fixed acidity'].mean() + 3*data3['fixed acidity'].std()\nprint(lower, upper)\ndata4=data3[(data3['fixed acidity']>lower) & (data3['fixed acidity']<upper)]\ndata3.shape[0] - data4.shape[0]","85b30eac":"sns.countplot(data4['quality'])","70a73b3c":"data4['quality']=[1 if x>6 else 0 for x in data4['quality']]","dc5a960c":"data4['quality'].value_counts()","245931fa":"X=data4.drop('quality', axis=1)\ny=data4['quality']","0730fbff":"from sklearn.model_selection import train_test_split\nx_train , x_test  ,y_train , y_test=train_test_split(X, y, test_size=0.3, random_state=1)\nx_train.shape, x_test.shape, y_train.shape, y_test.shape","a3fe67c0":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()\nx_train_scaler=scaler.fit_transform(x_train)\nx_test_scaler=scaler.fit_transform(x_test)","d2cc64c9":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report","c5c3248f":"model1=LogisticRegression(C=0.01)\nmodel1.fit(x_train ,y_train)\npred1=model1.predict(x_test)\nprint(\"trainin set score :{}\".format(model1.score(x_train , y_train)))\nprint(\"testing set score :{}\".format(model1.score(x_test, y_test)))\n","dbd29772":"model1=LogisticRegression(C=1)\nmodel1.fit(x_train_scaler ,y_train)\npred1=model1.predict(x_test_scaler)\nprint(\"trainin set score :{}\".format(model1.score(x_train_scaler , y_train)))\nprint(\"testing set score :{}\".format(model1.score(x_test_scaler, y_test)))\n","57ff7c32":"model2=KNeighborsClassifier()\nmodel2.fit(x_train ,y_train)\npred2=model2.predict(x_test)\nprint(\"trainin set score :{}\".format(model2.score(x_train , y_train)))\nprint(\"testing set score :{}\".format(model2.score(x_test, y_test)))\nprint(\"accuracy score : {}\".format(confusion_matrix(y_test, pred2)))","af26996f":"model2=KNeighborsClassifier(n_neighbors=3)\nmodel2.fit(x_train_scaler ,y_train)\npred2=model2.predict(x_test_scaler)\nprint(\"trainin set score :{}\".format(model2.score(x_train_scaler , y_train)))\nprint(\"testing set score :{}\".format(model2.score(x_test_scaler, y_test)))\nprint(\"accuracy score : {}\".format(confusion_matrix(y_test, pred2)))","c041814d":"model3=DecisionTreeClassifier(random_state=0, max_depth=3)\nmodel3.fit(x_train ,y_train)\npred3=model3.predict(x_test)\nprint(\"trainin set score :{}\".format(model3.score(x_train , y_train)))\nprint(\"testing set score :{}\".format(model3.score(x_test, y_test)))\nprint(\"accuracy score : {}\".format(confusion_matrix(y_test, pred3)))","391ac5f7":"model4=SVC()\nmodel4.fit(x_train ,y_train)\npred4=model4.predict(x_test)\nprint(\"trainin set score :{}\".format(model4.score(x_train , y_train)))\nprint(\"testing set score :{}\".format(model4.score(x_test, y_test)))\nprint(\"accuracy score : {}\".format(confusion_matrix(y_test, pred4)))","00f5900c":"model5=RandomForestClassifier(random_state=1, max_depth=7)\nmodel5.fit(x_train ,y_train)\npred5=model5.predict(x_test)\nprint(\"trainin set score :{}\".format(model5.score(x_train , y_train)))\nprint(\"testing set score :{}\".format(model5.score(x_test, y_test)))\nprint(\"accuracy score : {}\".format(confusion_matrix(y_test, pred5)))\n","70f4b9b0":"## in randomForest classifer max_depth is used to control the underfitting and overfitting problem .In this data when we increase the depth accuracy increase but at a certain \n## iteration model are overfitting.","bf3ffcac":"check for the residual sugar","2738ce15":"### for the free sulfur dioxide ","46245891":"## read the data","a036a33c":"## Wine Quality prediction\n- Attribute Information:\n\n- For more information, read\n- Input variables (based on physicochemical tests):\n   1. fixed acidity\n   2.  volatile acidity\n   3. citric acid\n   4. residual sugar\n   5. chlorides\n   6. free sulfur dioxide\n   7.  total sulfur dioxide\n   8.  density\n   9.  pH\n 10.  sulphates\n 11.  alcohol\n  - Output variable (based on sensory data):\n  12.  quality (score between 0 and 10)\n  \n  - all attribute are numerical .We will found out the quality of the wine\n  - quality>6.5 -> good\n  - quality<6.5 -> bad ","bd8cd8d6":"## split the data into training and test data","5faf85dc":"## Load the library","9e2bc5f7":"## for the total sulfur dioxide","11d68474":"there are no null value present in the dataset","fb53d464":"## To handle the outlier we use the standard deviation method\n","37eb1170":"## check the outlier ","08a6f2f7":"## convert the data into dependent and independent data set","901d1a2a":"To more clear the outlier we check for he single feature","e8b269fd":"## now convert the quality into two  part \n- quality >6.5 -> good\n- quality<6.5 -> bad","b1739d13":"## check for the fixed acidity","b6d49825":"## Logistic regression","3af622da":"## Data analysis"}}