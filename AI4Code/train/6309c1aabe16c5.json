{"cell_type":{"2c3dc718":"code","89924a3b":"code","df8e0d28":"code","90798601":"code","ef1a2189":"code","87b6be92":"code","1f10dc6b":"code","5da2f76a":"code","28d3fef1":"code","eeaac4eb":"code","bd93f33f":"code","064423aa":"code","08c6615e":"code","d46a6592":"code","1bb65c94":"code","bc3b2210":"code","0a6df0e3":"code","95ef5739":"code","350027e5":"code","cc1cc759":"code","2e37bbd3":"code","fb16d182":"code","e97f82a5":"markdown","04857311":"markdown","2b7c2fe1":"markdown","18e392c5":"markdown","3c9ecf82":"markdown","34528c26":"markdown","a73b11fb":"markdown","0c88e4fa":"markdown","f543a19c":"markdown","aaed533c":"markdown","a65ef66e":"markdown"},"source":{"2c3dc718":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# for data visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\n\n\n\n\n\n","89924a3b":"heart = pd.read_csv('..\/input\/heart.csv')\nsns.set()\n# getting the shape\nheart.info()\nheart.head(10)\nheart.describe()\nheart.shape\nheart.dtypes","df8e0d28":"\nheart.isnull().sum()","90798601":"sns.countplot(x=\"target\", data=heart, palette=\"bwr\")\nplt.title('Distibution Patient and Non-Patient')\nplt.show()","ef1a2189":"heart.sex[heart.sex == 1] = 'male'\nheart.sex[heart.sex == 0] = 'female'\n\n","87b6be92":"plt.title('Distibution by age: blue=heart disease')\nheart[heart.target==1].age.hist(bins=20);\nheart[heart.target==0].age.hist(bins=20);","1f10dc6b":"heart[heart.sex==1].age.hist(bins=10);\nheart[heart.sex==0].age.hist(bins=10);","5da2f76a":"heart.hist(column=[\"trestbps\", \"age\",\"oldpeak\",\"chol\"],bins=40)  # Plot specific columns\n\n","28d3fef1":"\nfig, ax = plt.subplots(2,2, figsize=(32,32))\nsns.distplot(heart.age, bins = 20, ax=ax[0,0]) \nsns.distplot(heart.oldpeak, bins = 20, ax=ax[0,1]) \nsns.distplot(heart.trestbps, bins = 20, ax=ax[1,0]) \nsns.distplot(heart.chol, bins = 20, ax=ax[1,1]) \n\n\n\n ","eeaac4eb":"# Add labels\nplt.title('Correlation between Oldpeak and Cholesteral')\nplt.xlabel('OldPeak')\nplt.ylabel('CHOL')\n# Custom the histogram:\nsns.jointplot(x=heart[\"oldpeak\"], y=heart[\"chol\"], kind='hex', marginal_kws=dict(bins=5, rug=True))\n\n","bd93f33f":"#hset.boxplot()\n# Use a color palette\n#hset.boxplot( x=hset[\"target\"], y=hset[\"sex\"])\n#sns.plt.show()\nsns.boxplot(y='trestbps', x='sex', \n                 data=heart, \n                 palette=\"colorblind\",\n                 hue='target')\n\n","064423aa":"sns.violinplot(y='trestbps', x='sex', \n                 data=heart, \n                 palette=\"colorblind\",\n                 hue='target',\n                 linewidth=1,\n                 width=0.5)\n","08c6615e":"\nsns.countplot(heart['target'],label=\"Count Distribution\")","d46a6592":"sns.catplot(x=\"sex\", y=\"thalach\", hue=\"target\", inner=\"quart\", kind=\"violin\", split=True, data=heart)\n\nsns.catplot(x=\"sex\", y=\"age\", hue=\"target\", inner=\"quart\", kind=\"violin\", split=True, data=heart)\n\nsns.catplot(x=\"sex\", y=\"chol\", hue=\"target\", inner=\"quart\", kind=\"violin\", split=True, data=heart)\n\nsns.catplot(x=\"sex\", y=\"trestbps\", hue=\"target\", inner=\"quart\", kind=\"violin\", split=True, data=heart)\n\nsns.catplot(x=\"sex\", y=\"cp\", hue=\"target\", inner=\"quart\", kind=\"violin\", split=True, data=heart)","1bb65c94":"\n\nfrom sklearn.model_selection import train_test_split\n# Split our data\n\nfeatures = heart[heart.columns[0:13]]\ntarget = heart['target']\n#features_train, features_test, target_train, target_test = train_test_split(features,\n                                                                           # target, test_size = 0.25, random_state = 10)\ntrain, test = train_test_split(heart, test_size=0.25)\n\n","bc3b2210":"# getting the shape\ntrain.head(10)\ntrain.describe()\ntrain.shape\ntrain.dtypes","0a6df0e3":"#corelation matrix\nplt.figure(figsize=(11,7))\nsns.heatmap(cbar=False,annot=True,data=heart.corr()*100,cmap='coolwarm')\nplt.title('% Corelation Matrix')\nplt.show()","95ef5739":"#boxplot of \nplt.figure(figsize=(10,6))\nsns.boxplot(data=heart,x='slope',y='thalach',palette='viridis')\nplt.plot()","350027e5":"plt.figure(figsize=(10,6))\nsns.boxplot(data=heart,x='cp',y='chol',palette='viridis')\nplt.plot()","cc1cc759":"plt.figure(figsize=(10,6))\nsns.boxplot(data=heart,x='target',y='chol',palette='viridis')\nplt.plot()","2e37bbd3":"# basic plot\nplt.xlabel(ax.set_xlabel(), rotation=90)\nheart.boxplot()\n\n\n# Draw a graph with pandas and keep what's returned\nax = df.plot(kind='boxplot', x='target', y='chol')\n\n# Set the x scale because otherwise it goes into weird negative numbers\nax.set_xlim((0, 1000))\n\n# Set the x-axis label\nax.set_xlabel(\"Target\")\n\n# Set the y-axis label\nax.set_ylabel(\"Cholesterol\")","fb16d182":"p.xaxis.major_label_orientation = \"vertical\"\nheart.plot(kind='bar',alpha=0.75)\n","e97f82a5":"Age distribution by gender","04857311":"    Heart disease distribution by gender","2b7c2fe1":"Correlations","18e392c5":"Checking for missing value","3c9ecf82":"Fasting blood sugar FBS. higher than 120 mg\/dl = 1, else 0.","34528c26":"Exploratory","a73b11fb":"    Distribution of survey pool","0c88e4fa":"    Box plot","f543a19c":"    Change sex to categorical gender","aaed533c":"    splitting dataset","a65ef66e":" information about the data types of the individual variables within the dataframe\n \n The dataset contains the following features:\n1. age(in years)\n2. sex: (1 = male; 0 = female)\n3. cp: chest pain type\n4. trestbps: resting blood pressure (in mm Hg on admission to the hospital)\n5. chol: serum cholestoral in mg\/dl\n6. fbs: (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n7. restecg: resting electrocardiographic results\n8. thalach: maximum heart rate achieved\n9. exang: exercise induced angina (1 = yes; 0 = no)\n10. oldpeak: ST depression induced by exercise relative to rest\n11. slope: the slope of the peak exercise ST segment\n12. ca: number of major vessels (0-3) colored by flourosopy\n13. thal: 3 = normal; 6 = fixed defect; 7 = reversable defect\n    14. target: 1 or 0 \n "}}