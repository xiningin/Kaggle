{"cell_type":{"7da69bd0":"code","2e7c06ed":"code","9595f4aa":"code","f75e05b0":"code","f66194aa":"code","4211cce0":"code","947dc00c":"code","d0578c36":"code","53fdd40b":"code","a48cf42e":"code","5ecd1c2a":"code","739e06f3":"code","d80043c9":"code","e7f5c2a8":"code","00d1ea23":"code","372a7c86":"code","4a017664":"code","d5111bb9":"markdown"},"source":{"7da69bd0":"# import all libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2e7c06ed":"# load dataset\ndf = pd.read_csv(\"\/kaggle\/input\/shopping\/shopping.csv\")","9595f4aa":"# print all data\ndf","f75e05b0":"# First 5 records\ndf.head(5)","f66194aa":"# Last 5 records\ndf.tail(5)","4211cce0":"# rows and columns\ndf.shape","947dc00c":"#Rows\ndf.shape[0]","d0578c36":"#Column\ndf.shape[1]","53fdd40b":"# Encode string values (Label Encoder)\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nday_encoded = pd.Series(le.fit_transform(df['Day']))\ndis_encoded = pd.Series(le.fit_transform(df['Discount']))\ndel_encoded = pd.Series(le.fit_transform(df['FreeDelivery']))\npur_encoded = pd.Series(le.fit_transform(df['Purchase']))\ndf = pd.concat([day_encoded, dis_encoded, del_encoded, pur_encoded], axis=1)\ndf","a48cf42e":"# find X and Y\nY = df[3].values\nX = df.drop(3, axis=1).values","5ecd1c2a":"# Split data into 70:30\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state = 0)","739e06f3":"#Prepare model\nfrom sklearn.naive_bayes import GaussianNB","d80043c9":"# Fit the data\nmodel = GaussianNB().fit(x_train,y_train)","e7f5c2a8":"#predict the result\ny_pred = model.predict(x_test)","00d1ea23":"# Classification report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","372a7c86":"# Confusion matrix\nfrom sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test,y_pred)","4a017664":"#Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,y_pred))","d5111bb9":"# Gaussian Naive Bayes classifier "}}