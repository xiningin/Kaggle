{"cell_type":{"5fe2bc67":"code","ba01e640":"code","9115e1e2":"code","ef9151de":"code","3e910b21":"code","ce10da89":"code","e8e7dbf5":"code","a3bce214":"code","02fbb30b":"code","2c525d1a":"code","17d06f07":"code","a3b2808a":"code","e7ba7396":"code","65e6078d":"code","26dac229":"code","f6562905":"code","4313b519":"code","9039b901":"code","73c7c8fd":"markdown","c7727339":"markdown","3f4c1445":"markdown","32cc244c":"markdown","ae29d62b":"markdown","63240c3e":"markdown","242b3606":"markdown","23021d5f":"markdown","362a6dfc":"markdown","de6a14b1":"markdown"},"source":{"5fe2bc67":"import numpy as np \nimport pandas as pd \n\n\ndf = pd.read_excel('\/kaggle\/input\/covid19\/dataset.xlsx')\ndf.columns\n","ba01e640":"len(df)","9115e1e2":"df.head()","ef9151de":"df.tail()","3e910b21":"df_count_nan = pd.DataFrame(df.isnull().sum())\ndf_count_nan.rename(columns={df_count_nan.columns[0]: 'nan_count'}, inplace=True)\ndf_count_nan1 = df_count_nan.loc[df_count_nan['nan_count'] != 0]\ndf_count_notnan = df_count_nan.loc[df_count_nan['nan_count'] == 0]\n","ce10da89":"df_count_notnan.index","e8e7dbf5":"df1 = df.copy()\ndf1[list(df_count_notnan.index)].hist()","a3bce214":"df1['count'] = 1\ndf1.groupby('SARS-Cov-2 exam result').agg({'count': 'sum'})\n","02fbb30b":"df1.groupby(\"Patient addmited to regular ward (1=yes, 0=no)\").agg({'count': 'sum'})","2c525d1a":"df1.groupby(\"Patient addmited to semi-intensive unit (1=yes, 0=no)\").agg({'count': 'sum'})","17d06f07":"df1.groupby(\"Patient addmited to intensive care unit (1=yes, 0=no)\").agg({'count': 'sum'})","a3b2808a":"import seaborn as sns\nsns.catplot(x='SARS-Cov-2 exam result', y=\"Patient age quantile\", data=df1);","e7ba7396":"sns.catplot(x='Patient addmited to regular ward (1=yes, 0=no)', y=\"Patient age quantile\", hue=\"SARS-Cov-2 exam result\", data=df1);","65e6078d":"sns.catplot(x='Patient addmited to semi-intensive unit (1=yes, 0=no)', y=\"Patient age quantile\", hue=\"SARS-Cov-2 exam result\", data=df1);","26dac229":"sns.catplot(x='Patient addmited to intensive care unit (1=yes, 0=no)', y=\"Patient age quantile\", hue=\"SARS-Cov-2 exam result\", data=df1);","f6562905":"df2 = df1.iloc[:,6:]\nlen(df2)","4313b519":"df2_notnan = df2.dropna(how='all')\nlen(df2_notnan)","9039b901":"df2_notnan.head()","73c7c8fd":"The data is full of NaN values...","c7727339":"Only 6 columns are free of any NaN values...","3f4c1445":"The number of possible positive tested patients is equally distributed across age quantiles, except for the first two quantiles.","32cc244c":"Remarks until here: It appears to me that using the above variables to predict covid test results does not adds much value to the hospital. I think the most important question is how to indentify the patients covid test using preliminary and cheap information BEFORE they need to be admitted to anyt of the above options. Therefore, the other variables should be more usefull.","ae29d62b":"Ways to proceed:\n\n1. Use statistical methods that can handle NaN values\n2. Fill NaN with the median, mean etc\n3. Fill all NaN with zeros and use statistical methods that can handle sparce matrix\n","63240c3e":"Lets break down the original dataframe taking out the \"admitted\" type variables, \"patient id\" and \"age quantiles\".","242b3606":"It is important to drop patients that does not have any information for the columns selected.\n\nWe can see that there is at least one row without NaN for each column.","23021d5f":"The data is unbalanced (approximatly 90%-10% negative-positive), which will bias any statistical model.","362a6dfc":"The same applies to patients that were admitted to semi-intensive and intensive units.","de6a14b1":"Most of the patients were not admitted to the regular ward, which is expected. On the other hand, most of the patients that were admitted to the regular ward are older and most them tested positive."}}