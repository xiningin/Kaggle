{"cell_type":{"f67a87de":"code","46dba4e1":"code","586b8f4f":"code","4792681b":"code","b82573a6":"code","ea7f3e99":"code","14ed04af":"code","ee31a77b":"markdown"},"source":{"f67a87de":"from IPython.display import clear_output\n!pip3 install rx \nclear_output()","46dba4e1":"from rx import just","586b8f4f":"DATA1 = just([1,2,3,4,5])\nDATA2 = just(100)\nDATA3 = just(\"Hello rxPy\")\nDATA4 = just([\"Hello rxPy\",\"RxPy is very good\"])","4792681b":"DATA1.subscribe(\n   lambda x: print(\"result = {0}\".format(x)),\n   on_error = lambda e: print(\"Error : {0}\".format(e)),\n   on_completed = lambda: print(\"Completed\")\n)","b82573a6":"DATA2.subscribe(\n   lambda x: print(\"result = {0}\".format(x)),\n   on_error = lambda e: print(\"Error : {0}\".format(e)),\n   on_completed = lambda: print(\"Completed\")\n)","ea7f3e99":"DATA3.subscribe(\n   lambda x: print(\"result = {0}\".format(x)),\n   on_error = lambda e: print(\"Error : {0}\".format(e)),\n   on_completed = lambda: print(\"Completed\")\n)","14ed04af":"DATA4.subscribe(\n   lambda x: print(\"result = {0}\".format(x)),\n   on_error = lambda e: print(\"Error : {0}\".format(e)),\n   on_completed = lambda: print(\"Completed\")\n)","ee31a77b":"# just (one value)\n\nThis method will convert \n\n### given value \n\n### into an observable."}}