{"cell_type":{"47e6e74a":"code","3adbbc7d":"code","4fc3ddb4":"code","e8f988a7":"code","924e17e2":"code","81c50a17":"code","4df62cac":"code","3a918d5a":"code","d5854e6d":"code","8804539b":"code","fb445449":"code","a30f481c":"code","0f8bb20f":"code","bf8f6132":"code","4de0f0bc":"code","934268e4":"code","1bb57ee6":"code","322ea3fc":"code","633bae4c":"code","b3f89577":"code","92d9c10e":"code","a847ded3":"code","7c00386e":"code","1f900c68":"code","b7d3f171":"code","133b144c":"code","a948e1b2":"code","5c8f32c0":"code","b81e075f":"code","f9a5ac70":"code","8bffd8a0":"code","41f00e9a":"code","6a3a3c6c":"markdown","991aed7c":"markdown","fefd7a3a":"markdown","083fc263":"markdown","4c5c3be6":"markdown","e6ba4152":"markdown","ce373eda":"markdown","6ad873b2":"markdown","558b40d8":"markdown","2be97da8":"markdown","8de9c715":"markdown","1098c99e":"markdown","1e248ed1":"markdown","ad30cfec":"markdown","1d496332":"markdown","5467df75":"markdown","c49e7e90":"markdown","ea6eac6c":"markdown","3890087b":"markdown","f7176f4d":"markdown","c7865992":"markdown","7bcc6fe7":"markdown","be0c32d7":"markdown","b90ebdb6":"markdown","1c07eb0e":"markdown","6942827c":"markdown","9311be0d":"markdown","d34cb270":"markdown","5bb516ae":"markdown","747b94e6":"markdown","93294115":"markdown","2ae4c352":"markdown","028adbdd":"markdown","8ab67145":"markdown","28d33eff":"markdown","bb3c9ae0":"markdown","864b1c75":"markdown","d6d8b71d":"markdown","3fc22f5e":"markdown"},"source":{"47e6e74a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler,PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n%matplotlib inline","3adbbc7d":"file_name= '..\/input\/kc-house-data-nancsv\/kc_house_data_NaN.csv'\ndf = pd.read_csv(file_name)","4fc3ddb4":"df.head()","e8f988a7":"df.dtypes","924e17e2":"df.describe()","81c50a17":"df.drop(columns={\"id\",\"Unnamed: 0\"}, inplace=True);\ndf.describe()","4df62cac":"print(\"number of NaN values for the column bedrooms :\", df['bedrooms'].isnull().sum())\nprint(\"number of NaN values for the column bathrooms :\", df['bathrooms'].isnull().sum())\n","3a918d5a":"mean=df['bedrooms'].mean()\ndf['bedrooms'].replace(np.nan,mean, inplace=True)\n\nmean=df['bathrooms'].mean()\ndf['bathrooms'].replace(np.nan,mean, inplace=True)\n\nprint(\"number of NaN values for the column bedrooms :\", df['bedrooms'].isnull().sum())\nprint(\"number of NaN values for the column bathrooms :\", df['bathrooms'].isnull().sum())","d5854e6d":"df['floors'].value_counts().to_frame()","8804539b":"plt.figure(figsize = (12,8))\ng= sns.boxplot(x = 'waterfront', y = 'price', data = df)\ndf.waterfront.value_counts()","fb445449":"plt.figure(figsize = (12,8))\nsns.regplot(x='sqft_above', y='price', data=df)\nplt.ylim(0,)","a30f481c":"dt=df.corr()['price'].sort_values()\ndt","0f8bb20f":"corr = df[['bathrooms', 'bedrooms', 'sqft_living','sqft_above', 'sqft_lot', 'floors', 'grade', 'price']]\nplt.figure(figsize=(10,10))\nplt.title('Correlation of variables')\nsns.heatmap(corr.astype(float).corr(),vmax=1.0,  annot=True, cmap='Greens', cbar=True, square= True, fmt='.1f', annot_kws={'size':15})\nplt.show()","bf8f6132":"X = df[['long']]\nY = df['price']\nlm = LinearRegression()\nlm.fit(X,Y)\nlm.score(X, Y)","4de0f0bc":"X = df[['sqft_living']]\nY = df['price']\nlm = LinearRegression()\nlm.fit(X,Y)\nlm.score(X, Y)","934268e4":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]\nX = df[features]\nY = df['price']\nlm.fit(X,Y)\nlm.score(X,Y)","1bb57ee6":"Input=[('scale',StandardScaler()),('polynomial', PolynomialFeatures(include_bias=False)),('model',LinearRegression())]\n\npipe= Pipeline(Input)\npipe.fit(X,Y)\npipe.score(X,Y)","322ea3fc":"from sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nprint(\"done\")","633bae4c":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]    \nX = df[features]\nY = df['price']\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=4)\n\n\nprint(\"number of test samples:\", x_test.shape[0])\nprint(\"number of training samples:\",x_train.shape[0])","b3f89577":"from sklearn.linear_model import Ridge\nfrom sklearn import metrics\nridgeModel= Ridge(alpha=0.1)\nridgeModel.fit(x_train,y_train)\nridgeModel.score(x_train,y_train)","92d9c10e":"pr = PolynomialFeatures(degree=2)\nx_train_pr = pr.fit_transform(x_train)\nx_test_pr = pr.fit_transform(x_test)\n\nRigeModel=Ridge(alpha=0.1)\nRigeModel.fit(x_train_pr, y_train)\nacc_linreg=RigeModel.score(x_test_pr, y_test)\nacc_linreg","a847ded3":"# Import XGBoost Regressor\nfrom xgboost import XGBRegressor\nfrom sklearn import metrics\n#Create a XGBoost Regressor\nreg = XGBRegressor()\n\n# Train the model using the training sets \nreg.fit(x_train, y_train)","7c00386e":"y_pred = reg.predict(x_train)","1f900c68":"# Model Evaluation\nprint('R^2:',metrics.r2_score(y_train, y_pred))\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_train, y_pred))*(len(y_train)-1)\/(len(y_train)-x_train.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_train, y_pred))\nprint('MSE:',metrics.mean_squared_error(y_train, y_pred))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_train, y_pred)))\n","b7d3f171":"#Predicting Test data with the model\ny_test_pred = reg.predict(x_test)","133b144c":"# Model Evaluation\nacc_xgb = metrics.r2_score(y_test, y_test_pred)\nprint('R^2:', acc_xgb)\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_test, y_test_pred))*(len(y_test)-1)\/(len(y_test)-x_test.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_test, y_test_pred))\nprint('MSE:',metrics.mean_squared_error(y_test, y_test_pred))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_test, y_test_pred)))","a948e1b2":"# Import Random Forest Regressor\nfrom sklearn.ensemble import RandomForestRegressor\n\n# Create a Random Forest Regressor\nreg = RandomForestRegressor()\n\n# Train the model using the training sets \nreg.fit(x_train, y_train)","5c8f32c0":"# Model prediction on train data\ny_pred = reg.predict(x_train)","b81e075f":"# Model Evaluation\nprint('R^2:',metrics.r2_score(y_train, y_pred))\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_train, y_pred))*(len(y_train)-1)\/(len(y_train)-x_train.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_train, y_pred))\nprint('MSE:',metrics.mean_squared_error(y_train, y_pred))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_train, y_pred)))","f9a5ac70":"# Predicting Test data with the model\ny_test_pred = reg.predict(x_test) ","8bffd8a0":"# Model Evaluation\nacc_rf = metrics.r2_score(y_test, y_test_pred)\nprint('R^2:', acc_rf)\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_test, y_test_pred))*(len(y_test)-1)\/(len(y_test)-x_test.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_test, y_test_pred))\nprint('MSE:',metrics.mean_squared_error(y_test, y_test_pred))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_test, y_test_pred)))","41f00e9a":"models = pd.DataFrame({\n    'Model': ['Linear Regression','Random Forest', 'XGBoost'],\n    'R-squared Score': [acc_linreg*100, acc_rf*100, acc_xgb*100]})\nmodels.sort_values(by='R-squared Score', ascending=False)","6a3a3c6c":"**Fit a linear regression model to predict the 'price' using the feature 'sqft_living' then calculate the R^2**","991aed7c":"**Fit a linear regression model using the longitude feature 'long' and calculate the R-squared (R^2)**","fefd7a3a":"# House Sales in King County, USA","083fc263":"**Create and fit a Ridge regression object using the training data with the regularization parameter set to 0.1, and calculate the R^2 using the test data**","4c5c3be6":"**Display the data types of each column**","e6ba4152":"**For test data**","ce373eda":"# Linear Regression Model Development","6ad873b2":"**For test data**","558b40d8":"**Using the regplot visual to determine if the feature sqft_above is negatively or positively correlated with price.**","2be97da8":"**Importing the needed libraries**","8de9c715":"**Count the number of houses with unique floor values and to convert it to a dataframe**","1098c99e":"**Using boxplot to visualize determine whether houses with or without a waterfront view have more price outliers.**","1e248ed1":"**Model Evaluation**","ad30cfec":"**Reading the dataset into a pandas dataframe**","1d496332":"# Unexplored Options:\n* Other learning algorithms might provide better accuracy and should be tested\n* We can also explore more relationship between various features","5467df75":"# Evaluation and comparision of all the models","c49e7e90":"\n\n* \ud835\udc45^2 : It is a measure of the linear relationship between X and Y. It is interpreted as the proportion of the variance in the dependent variable that is predictable from the independent variable.\n\n* Adjusted \ud835\udc45^2 :The adjusted R-squared compares the explanatory power of regression models that contain different numbers of predictors.\n\n* MAE : It is the mean of the absolute value of the errors. It measures the difference between two continuous variables, here actual and predicted values of y. \n\n* MSE: The mean square error (MSE) is just like the MAE, it measures the average of the squares of the errors; that is, the average squared difference between the estimated values and the actual value.\n\n* RMSE: The root mean square error (RMSE) is the standard deviation of the residuals (prediction errors). Residuals are a measure of how far from the regression line the data points are.","ea6eac6c":"**Display a statistical summary of the dataframe**","3890087b":"**Remove missing values in the bedrooms and bathrooms columns**","f7176f4d":"\n# Random Forest Regressor Model Development and Evaluation\n**Train the model**","c7865992":"**Check for missing values in the bedrooms and bathrooms columns**","7bcc6fe7":"**Perform a second order polynomial transform on both the training data and testing data. Create and fit a Ridge regression object using the training data, set the regularisation parameter to 0.1, and calculate the R^2 utilising the test data provided.**","be0c32d7":"**Inference**\n\n**from the above we can see that; Square footage of house apart from basement (sqft_above), overall grade given to the housing unit, based on King County grading system (grade) and Square footage of the home (sqft_living) are the features that are most correlated with the price of the houses**","b90ebdb6":"# Correlation matrix","1c07eb0e":"**Split the data into training and testing sets**","6942827c":"## This dataset contains house sale prices for King County, which includes Seattle. It includes homes sold between May 2014 and May 2015.","9311be0d":"**Fit a linear regression model to predict the 'price' using the list of features and calculate the R^2**","d34cb270":"# Inference:\n* With Linear Regression : 73.1% Accuracy\n* With XGBoost Regression : 81.1% Accuracy\n* With Random Forest Regression: 81.5% Accuracy\n\n**Hence Random Forest Regression works best for this dataset**","5bb516ae":"**Create a list of tuples then use the list to create a pipeline object to predict the 'price' and then, fit the object using the features in the list features, and calculate the R^2.**","747b94e6":"**Import the necessary modules**","93294115":"**Using the Pandas method corr() to find other features that are most correlated with price**","2ae4c352":"**Inference**\n\n**We can clearly see that there is a positive correlation between Square footage of house apart from basement (sqft_above) and Price**\n","028adbdd":"# Linear Regression Model Evaluation and Refinement with Rigid Regression","8ab67145":"***Meaning of abbrevations in the dataset***\n\n| Variable      | Description                                                                                                 |\n| ------------- | ----------------------------------------------------------------------------------------------------------- |\n| id            | A notation for a house                                                                                      |\n| date          | Date house was sold                                                                                         |\n| price         | Price is prediction target                                                                                  |\n| bedrooms      | Number of bedrooms                                                                                          |\n| bathrooms     | Number of bathrooms                                                                                         |\n| sqft_living   | Square footage of the home                                                                                  |\n| sqft_lot      | Square footage of the lot                                                                                   |\n| floors        | Total floors (levels) in house                                                                              |\n| waterfront    | House which has a view to a waterfront                                                                      |\n| view          | Has been viewed                                                                                             |\n| condition     | How good the condition is overall                                                                           |\n| grade         | overall grade given to the housing unit, based on King County grading system                                |\n| sqft_above    | Square footage of house apart from basement                                                                 |\n| sqft_basement | Square footage of the basement                                                                              |\n| yr_built      | Built Year                                                                                                  |\n| yr_renovated  | Year when house was renovated                                                                               |\n| zipcode       | Zip code                                                                                                    |\n| lat           | Latitude coordinate                                                                                         |\n| long          | Longitude coordinate                                                                                        |\n| sqft_living15 | Living room area in 2015(implies-- some renovations) This might or might not have affected the lotsize area |\n| sqft_lot15    | LotSize area in 2015(implies-- some renovations)                                                            |\n","28d33eff":"# Exploratory Data Analysis","bb3c9ae0":"\n# XGBoost Regressor Model Development and Evaluation\n**Training the model**","864b1c75":"# Data Wrangling\n\n**Drop the columns \"id\" and \"Unnamed: 0\" from the dataframe**","d6d8b71d":"**Display the first 5 columns of the dataframe**","3fc22f5e":"**Model Evaluation on training data**"}}