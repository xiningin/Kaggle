{"cell_type":{"5f144372":"code","2f41d7f0":"code","7df05ff7":"code","00a672a5":"code","102feec7":"code","807532cb":"code","a3f5ce2a":"code","c14e0a5c":"code","31132f46":"code","a9e0ff24":"markdown","e25bdf89":"markdown","fb3c2372":"markdown","467dd068":"markdown","fc7fc6e1":"markdown","3bf26174":"markdown","093a6cf2":"markdown","0994735c":"markdown","c9c61e72":"markdown","fcdedf42":"markdown"},"source":{"5f144372":"import bq_helper\nfrom bq_helper import BigQueryHelper\n# https:\/\/www.kaggle.com\/sohier\/introduction-to-the-bq-helper-package\nchromeUXreport = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",\n                                   dataset_name=\"chrome-ux-report.all\")\nchromeUXreportUS = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",\n                                   dataset_name=\"chrome-ux-report.country_us\")\nchromeUXreportIN = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",\n                                   dataset_name=\"chrome-ux-report.country_in\")","2f41d7f0":"query1 = \"\"\"SELECT DISTINCT origin\nFROM `chrome-ux-report.all.201710`\nWHERE origin LIKE '%:\/\/example.com';\n        \"\"\"\nresponse1 = chromeUXreport.query_to_pandas_safe(query1)\nresponse1.head(20)","7df05ff7":"query2 = \"\"\"SELECT\n    bin.start,\n    SUM(bin.density) AS density\nFROM\n    `chrome-ux-report.all.201710`,\n    UNNEST(first_contentful_paint.histogram.bin) AS bin\nWHERE\n    origin = 'http:\/\/example.com'\nGROUP BY\n    bin.start\nORDER BY\n    bin.start;\n        \"\"\"\nresponse2 = chromeUXreport.query_to_pandas_safe(query2)\nresponse2.head(20)","00a672a5":"import numpy as np \nimport pandas as pd \nimport os\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)\n\nresult1 = response2.head(10)\ntrace1 = go.Bar(\n                x = result1.start,\n                y = result1.density,\n                name = \"citations\",\n                marker = dict(color = 'rgba(0, 0, 255, 0.8)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = result1.start)\ndata = [trace1]\nlayout = go.Layout(barmode = \"group\",title='Density Per Bin', xaxis = dict(title='Start (ms)'), yaxis = dict(title='Density'))\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","102feec7":"query3 = \"\"\"SELECT\n    SUM(bin.density) AS density\nFROM\n    `chrome-ux-report.all.201710`,\n    UNNEST(first_contentful_paint.histogram.bin) AS bin\nWHERE\n    bin.start < 1000 AND\n    origin = 'http:\/\/example.com';\n        \"\"\"\nresponse3 = chromeUXreport.query_to_pandas_safe(query3)\nresponse3.head(20)","807532cb":"query4 = \"\"\"#standardSQL\nSELECT\n    effective_connection_type.name AS ect,\n    SUM(bin.density) AS density\nFROM\n    `chrome-ux-report.all.201710`,\n    UNNEST(first_contentful_paint.histogram.bin) AS bin\nWHERE\n    bin.end <= 1000 AND\n    origin = 'http:\/\/example.com'\nGROUP BY\n    ect\nORDER BY\n    density DESC;\n        \"\"\"\nresponse4 = chromeUXreport.query_to_pandas_safe(query4)\nresponse4.head(20)","a3f5ce2a":"query5 = \"\"\"WITH\n    countries AS (\n      SELECT *, 'All' AS country FROM `chrome-ux-report.all.201712`)\n\nSELECT\n    country,\n    effective_connection_type.name AS ect,\n    SUM(bin.density) AS density\nFROM\n    countries,\n    UNNEST(first_contentful_paint.histogram.bin) AS bin\nWHERE\n    bin.end <= 1000 AND\n    origin = 'http:\/\/example.com'\nGROUP BY\n    country,\n    ect\nORDER BY\n    density DESC;\n        \"\"\"\nresponse5 = chromeUXreport.query_to_pandas_safe(query5, max_gb_scanned=10)\nresponse5.head(20)","c14e0a5c":"query6 = \"\"\"WITH\n    countries AS (\n      SELECT *, 'USA' AS country FROM `chrome-ux-report.country_us.201712`)\n\nSELECT\n    country,\n    effective_connection_type.name AS ect,\n    SUM(bin.density) AS density\nFROM\n    countries,\n    UNNEST(first_contentful_paint.histogram.bin) AS bin\nWHERE\n    bin.end <= 1000 AND\n    origin = 'http:\/\/example.com'\nGROUP BY\n    country,\n    ect\nORDER BY\n    density DESC;\n        \"\"\"\nresponse6 = chromeUXreportUS.query_to_pandas_safe(query6, max_gb_scanned=10)\nresponse6.head(20)","31132f46":"query7 = \"\"\"WITH\n    countries AS (\n      SELECT *, 'India' AS country FROM `chrome-ux-report.country_in.201712`)\n\nSELECT\n    country,\n    effective_connection_type.name AS ect,\n    SUM(bin.density) AS density\nFROM\n    countries,\n    UNNEST(first_contentful_paint.histogram.bin) AS bin\nWHERE\n    bin.end <= 1000 AND\n    origin = 'http:\/\/example.com'\nGROUP BY\n    country,\n    ect\nORDER BY\n    density DESC;\n        \"\"\"\nresponse7 = chromeUXreportIN.query_to_pandas_safe(query7, max_gb_scanned=10)\nresponse7.head(20)","a9e0ff24":"India Only","e25bdf89":"Calculate how the above experience varies for users with different connection speeds.","fb3c2372":"Compute the density sum for bins less than 1000ms.","467dd068":"Let\u2019s start with a basic query to see if a particular origin is available in the dataset. ","fc7fc6e1":"The result is 0.7537, which indicates that ~75.4% of page loads experience the FCP in under a second.","3bf26174":"**How to Query the Chrome UX Report Data (BigQuery Dataset)**","093a6cf2":"Credit: These functions are adaptations from the following [tutorial](https:\/\/developers.google.com\/web\/tools\/chrome-user-experience-report\/getting-started).","0994735c":"USA Only","c9c61e72":"Visualize the distribution of the histogram.","fcdedf42":"Slice the results above even further by making use of the per-country datasets"}}