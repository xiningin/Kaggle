{"cell_type":{"cbc891dc":"code","0917e088":"code","1aeb8ee8":"code","d394f466":"code","4e993411":"code","7f624b75":"code","1afe0229":"code","e0dbdeb6":"code","d8aea095":"code","d6f59043":"code","c7749590":"code","637dab90":"code","9fff4116":"code","cd80cae5":"code","c2165458":"code","64721da7":"code","19421086":"code","7780f7fc":"code","835042cf":"code","b64e3621":"code","6fb56b5a":"code","c6613d49":"code","494d55f0":"code","1c257e5a":"code","2b36fe50":"code","9b73b6b8":"code","453b3990":"code","b044dfc1":"code","164bfbad":"code","970bc6b8":"code","6ee6cf56":"code","33ba3fa4":"code","a600a306":"code","04627cbe":"code","94f77099":"code","2d1578a5":"code","bf1b2a2f":"code","9d5e75e9":"markdown","aa81a58f":"markdown","ba6bbd01":"markdown","902ac174":"markdown"},"source":{"cbc891dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0917e088":"df=pd.read_csv('\/kaggle\/input\/bajaj-finance\/BAJFINANCE.csv')\ndf.head()","1aeb8ee8":"df.set_index('Date', inplace=True)","d394f466":"df['VWAP'].plot()","4e993411":"df.shape","7f624b75":"df.isna().sum()","1afe0229":"df.head().mean()","e0dbdeb6":"df.dropna(inplace=True)\ndf.isna().sum()","d8aea095":"df.shape","d6f59043":"data = df.copy()","c7749590":"data.dtypes","637dab90":"data.columns","9fff4116":"lag_features=['High','Low','Volume','Turnover','Trades']\nwindow1 = 3\nwindow2 = 7","cd80cae5":"for feature in lag_features:\n    data[feature+'rolling_mean_3']=data[feature].rolling(window=window1).mean()\n    data[feature+'rolling_mean_7']=data[feature].rolling(window=window2).mean()","c2165458":"for feature in lag_features:\n    data[feature+'rolling_std_3']=data[feature].rolling(window=window1).std()\n    data[feature+'rolling_std_7']=data[feature].rolling(window=window2).std()","64721da7":"data.head()","19421086":"data.columns","7780f7fc":"data.shape","835042cf":"data.isna().sum()","b64e3621":"data.dropna(inplace=True)\ndata.isna().sum()","6fb56b5a":"data.columns","c6613d49":"independent_features=['Highrolling_mean_3', 'Highrolling_mean_7',\n       'Lowrolling_mean_3', 'Lowrolling_mean_7', 'Volumerolling_mean_3',\n       'Volumerolling_mean_7', 'Turnoverrolling_mean_3',\n       'Turnoverrolling_mean_7', 'Tradesrolling_mean_3',\n       'Tradesrolling_mean_7', 'Highrolling_std_3', 'Highrolling_std_7',\n       'Lowrolling_std_3', 'Lowrolling_std_7', 'Volumerolling_std_3',\n       'Volumerolling_std_7', 'Turnoverrolling_std_3', 'Turnoverrolling_std_7',\n       'Tradesrolling_std_3', 'Tradesrolling_std_7']","494d55f0":"training_data = data[0:1800]\ntest_data = data[1800:]","1c257e5a":"training_data","2b36fe50":"test_data","9b73b6b8":"!pip install pmdarima","453b3990":"from pmdarima import auto_arima","b044dfc1":"import warnings\nwarnings.filterwarnings('ignore')","164bfbad":"model = auto_arima(y = training_data['VWAP'],exogenous=training_data[independent_features],trace=True)","970bc6b8":"model.fit(training_data['VWAP'],training_data[independent_features])","6ee6cf56":"forecast = model.predict(n_periods=len(test_data), exogenous=test_data[independent_features])","33ba3fa4":"forecast","a600a306":"test_data['Forecast_ARIMA'] = forecast","04627cbe":"test_data[['VWAP','Forecast_ARIMA']].plot(figsize=(15,9))","94f77099":"from sklearn.metrics import mean_absolute_error, mean_squared_error, accuracy_score","2d1578a5":"np.sqrt(mean_squared_error(test_data['VWAP'],test_data['Forecast_ARIMA']))","bf1b2a2f":"mean_absolute_error(test_data['VWAP'],test_data['Forecast_ARIMA'])","9d5e75e9":"### Reading the market data of BAJAJFINSV stock and preparing a training dataset and validation dataset.","aa81a58f":"### Plotting the target variable VWAP over time","ba6bbd01":"### Data Pre-Processing","902ac174":"### Checking Accuracy of our model"}}