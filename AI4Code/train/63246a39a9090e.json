{"cell_type":{"0f59b5a2":"code","9da6197d":"code","e7519a73":"code","3bc58586":"code","ff3f55d7":"code","8e4f54e9":"code","31446be3":"code","f996a9f0":"code","a995a8f2":"code","599d2e0c":"code","22025915":"code","c6f310be":"code","211c5ed9":"code","cba02b3a":"code","543e085c":"code","0099a43b":"code","cc980909":"code","7f71154a":"code","166b6dfb":"code","f4467806":"code","5dea3dac":"code","f5588764":"code","d65bd093":"code","c9395169":"code","df06ec69":"code","8e72ca92":"code","b5d5a83c":"code","9312018a":"code","16e8ee31":"code","e139c8ab":"code","a60774b6":"code","02571368":"code","e55d1d94":"code","19d838af":"code","6fe02d4b":"code","32eac45f":"code","2006882f":"code","85297090":"markdown","fdc62f4d":"markdown","48ff2fee":"markdown","3fcdc69d":"markdown","f5540b6c":"markdown","03b65a23":"markdown","ef5eb009":"markdown","2a9e8132":"markdown","c5337308":"markdown","7f20861e":"markdown","9538cf27":"markdown","08a13f56":"markdown","45f61f85":"markdown","79b92717":"markdown","822c33da":"markdown","a84ced68":"markdown","6ae83da3":"markdown","73cb706f":"markdown","f63c4e71":"markdown","aacd2a66":"markdown","96d60679":"markdown","082c23f2":"markdown","c82d319f":"markdown","9a085449":"markdown","75958334":"markdown"},"source":{"0f59b5a2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.offline as po\nimport plotly.graph_objs as go\nfrom pandas_profiling import ProfileReport\nimport plotly.express as px\n\n# from plotly.offline import init_notebook_mode,iplot,plot\n# init_notebook_mode(connected=True)","9da6197d":"who_covid_data28 = pd.read_csv(\"..\/input\/who-covid19-data-tabe\/WHO-COVID-19-global-table-data 08-28-21.csv\")\nwho_covid_data28 = who_covid_data28.reset_index()\nwho_covid_data28","e7519a73":"old_columns = list(who_covid_data28.columns)\nnew_columns = ['Country', 'Continent']\nnew_columns.extend(old_columns[3:])\nnew_columns\ncolumn_dict = dict(zip(old_columns, new_columns))\ncolumn_dict\nwho_covid_data28.rename(columns = column_dict, inplace = True)\n# Drop last column of a dataframe\nwho_covid_data28 = who_covid_data28.iloc[: , :-1]\nwho_covid_data28","3bc58586":"who_covid_data28.info()","ff3f55d7":"who_covid_data31 = pd.read_csv(\"..\/input\/who-covid19-data-tabe\/WHO-COVID-19-global-table-data-31-08-21.csv\")\nwho_covid_data31 = who_covid_data31.reset_index()\nwho_covid_data31.rename(columns = column_dict, inplace = True)\n# Drop last column of a dataframe\nwho_covid_data31 = who_covid_data31.iloc[: , :-1]\nwho_covid_data31","8e4f54e9":"who_covid_data31.info()","31446be3":"who_covid_data28.isnull().sum()\nsns.heatmap(who_covid_data28.isnull(),yticklabels=False,cbar=False,cmap='viridis')","f996a9f0":"who_covid_data31.isnull().sum()\nsns.heatmap(who_covid_data31.isnull(),yticklabels=False,cbar=False,cmap='viridis')","a995a8f2":"who_covid_data28 = who_covid_data28.dropna()\nwho_covid_data31 = who_covid_data31.dropna()","599d2e0c":"def replace_value(data):\n    old_country =['United States of America', 'Russian Federation', 'The United Kingdom' , 'Iran (Islamic Republic of)' , 'Czechia' ,\n                  'occupied Palestinian territory, including east Jerusalem' , \n                 'Republic of Moldova' , 'Viet Nam' , 'Bolivia (Plurinational State of)' , 'Venezuela (Bolivarian Republic of)' , \n                  'Republic of Korea' , 'Kosovo[1]',\n                  'Syrian Arab Republic', 'United Republic of Tanzania']\n    new_country = ['United States', 'Russian', 'United Kingdom', 'Iran', 'Czech Republic', 'Palestine, State of',\n                   'Moldova', 'Vietnam', 'Bolivia', 'Venezuela', 'Korea, Republic of', 'Kosovo', 'Syria', 'Tanzania']\n    for i in range(0,len(old_country)):\n        data['Country']= data['Country'].replace(old_country[i], new_country[i])\n    return data\n\nwho_covid_data28 = replace_value(who_covid_data28)\nwho_covid_data31 = replace_value(who_covid_data31)","22025915":"covid_data28 = pd.DataFrame()\ncovid_data28['Country'] = who_covid_data28['Country']\ncovid_data28['Continent'] = who_covid_data28['Continent']\ncovid_data28['Recovered cumulative total'] = who_covid_data28['Cases - cumulative total'] - who_covid_data28['Deaths - cumulative total']\ncovid_data28['Recovered cumulative total per 100000 population'] = who_covid_data28['Cases - cumulative total per 100000 population'] - who_covid_data28['Deaths - cumulative total per 100000 population']\ncovid_data28['Recovered newly reported in last 7 days'] = who_covid_data28['Cases - newly reported in last 7 days'] - who_covid_data28['Deaths - newly reported in last 7 days']\ncovid_data28['Recovered newly reported in last 7 days per 100000 population'] = who_covid_data28['Cases - newly reported in last 7 days per 100000 population'] - who_covid_data28['Deaths - newly reported in last 7 days per 100000 population']\ncovid_data28['Recovered newly reported in last 24 hours'] = who_covid_data28['Cases - newly reported in last 24 hours'] - who_covid_data28['Deaths - newly reported in last 24 hours']\ncovid_data28","c6f310be":"covid_data31 = pd.DataFrame()\ncovid_data31['Country'] = who_covid_data31['Country']\ncovid_data31['Continent'] = who_covid_data31['Continent']\ncovid_data31['Recovered cumulative total'] = who_covid_data31['Cases - cumulative total'] - who_covid_data31['Deaths - cumulative total']\ncovid_data31['Recovered cumulative total per 100000 population'] = who_covid_data31['Cases - cumulative total per 100000 population'] - who_covid_data31['Deaths - cumulative total per 100000 population']\ncovid_data31['Recovered newly reported in last 7 days'] = who_covid_data31['Cases - newly reported in last 7 days'] - who_covid_data31['Deaths - newly reported in last 7 days']\ncovid_data31['Recovered newly reported in last 7 days per 100000 population'] = who_covid_data31['Cases - newly reported in last 7 days per 100000 population'] - who_covid_data31['Deaths - newly reported in last 7 days per 100000 population']\ncovid_data31['Recovered newly reported in last 24 hours'] = who_covid_data31['Cases - newly reported in last 24 hours'] - who_covid_data31['Deaths - newly reported in last 24 hours']\ncovid_data31","211c5ed9":"who_covid_data_diff = pd.DataFrame()\nwho_covid_data_diff['Country'] = covid_data28['Country']\nwho_covid_data_diff['Continent'] = covid_data28['Continent']\ncolumns = list(covid_data28.columns)\nfor i in range(2,len(columns)):\n    who_covid_data_diff[columns[i]] = covid_data31[columns[i]] - covid_data28[columns[i]]  \n\nwho_covid_data_diff","cba02b3a":"covid_data28 = covid_data28.sort_values('Recovered cumulative total')\n# covid_data31 = covid_data31.sort_values('Recovered cumulative total')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered cumulative total dated 28-08-2021', y = covid_data28['Country'], x = covid_data28['Recovered cumulative total'], orientation = 'h'),\n    go.Bar(name='Recovered cumulative total dated 31-08-2021', y = covid_data31['Country'], x = covid_data31['Recovered cumulative total'], orientation = 'h')\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 2000)\n\nfig.show()","543e085c":"who_covid_data_diff.sort_values('Recovered cumulative total').tail(5)","0099a43b":"covid_data28 = covid_data28.sort_values('Recovered cumulative total per 100000 population')\n# covid_data31 = covid_data31.sort_values('Recovered cumulative total per 100000 population')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered cumulative total per 100000 population dated 28-08-2021', y = covid_data28['Country'], x = covid_data28['Recovered cumulative total per 100000 population'], orientation = 'h'),\n    go.Bar(name='Recovered cumulative total per 100000 population dated 31-08-2021', y = covid_data31['Country'], x = covid_data31['Recovered cumulative total per 100000 population'], orientation = 'h')\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 2000)\n\nfig.show()","cc980909":"who_covid_data_diff.sort_values('Recovered cumulative total per 100000 population').tail(5)","7f71154a":"covid_data28 = covid_data28.sort_values('Recovered newly reported in last 7 days')\n# covid_data31 = covid_data31.sort_values('Recovered newly reported in last 7 days')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered newly reported in last 7 days dated 28-08-2021', y = covid_data28['Country'], x = covid_data28['Recovered newly reported in last 7 days'], orientation = 'h'),\n    go.Bar(name='Recovered newly reported in last 7 days dated 31-08-2021', y = covid_data31['Country'], x = covid_data31['Recovered newly reported in last 7 days'], orientation = 'h')\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 2000)\n\nfig.show()","166b6dfb":"who_covid_data_diff.sort_values('Recovered newly reported in last 7 days').tail(5)","f4467806":"covid_data28 = covid_data28.sort_values('Recovered newly reported in last 7 days per 100000 population')\n# covid_data31 = covid_data31.sort_values('Recovered newly reported in last 7 days per 100000 population')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered newly reported in last 7 days per 100000 population dated 28-08-2021', y = covid_data28['Country'], x = covid_data28['Recovered newly reported in last 7 days per 100000 population'], orientation = 'h'),\n    go.Bar(name='Recovered newly reported in last 7 days per 100000 population dated 31-08-2021', y = covid_data31['Country'], x = covid_data31['Recovered newly reported in last 7 days per 100000 population'], orientation = 'h')\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 2000)\n\nfig.show()","5dea3dac":"who_covid_data_diff.sort_values('Recovered newly reported in last 7 days per 100000 population').tail(5)","f5588764":"covid_data28 = covid_data28.sort_values('Recovered newly reported in last 24 hours')\n# covid_data31 = covid_data31.sort_values('Recovered newly reported in last 24 hours')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered newly reported in last 24 hours dated 28-08-2021', y = covid_data28['Country'], x = covid_data28['Recovered newly reported in last 24 hours'], orientation = 'h'),\n    go.Bar(name='Recovered newly reported in last 24 hours dated 31-08-2021', y = covid_data31['Country'], x = covid_data31['Recovered newly reported in last 24 hours'], orientation = 'h')\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 2000)\n\nfig.show()","d65bd093":"who_covid_data_diff.sort_values('Recovered newly reported in last 24 hours').tail(5)","c9395169":"GroupedByContinents28 = covid_data28.groupby('Continent').sum()\nGroupedByContinents28","df06ec69":"GroupedByContinents31 = covid_data31.groupby('Continent').sum()\nGroupedByContinents31","8e72ca92":"GroupedByContinents28 = GroupedByContinents28.sort_values(by='Recovered cumulative total')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered cumulative total', x=GroupedByContinents28.index, y=GroupedByContinents28['Recovered cumulative total']),\n    go.Bar(name='Recovered cumulative total', x=GroupedByContinents31.index, y=GroupedByContinents31['Recovered cumulative total'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 600)\n\nfig.show()","b5d5a83c":"from plotly.subplots import make_subplots\n\nlabels = list(GroupedByContinents28.index)\nlabels\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents28['Recovered cumulative total'], name=\"Recovered cumulative total\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents31['Recovered cumulative total'], name=\"Recovered cumulative total\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.6, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Covid-19 Recovered cumulative total per Continet\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Recovered cumulative', x=0.12, y=0.5, font_size=12, showarrow=False),\n                 dict(text='total 28-08-2021', x=0.14, y=0.4, font_size=12, showarrow=False),\n                 dict(text='Recovered cumulative', x=0.88, y=0.5, font_size=12, showarrow=False),\n                 dict(text='total 31-08-2021', x=0.85, y=0.4, font_size=12, showarrow=False)])\nfig.show()","9312018a":"GroupedByContinents28 = GroupedByContinents28.sort_values(by='Recovered cumulative total per 100000 population')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered cumulative total per 100000 population', x=GroupedByContinents28.index, y=GroupedByContinents28['Recovered cumulative total per 100000 population']),\n    go.Bar(name='Recovered cumulative total per 100000 population', x=GroupedByContinents31.index, y=GroupedByContinents31['Recovered cumulative total per 100000 population'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 600)\n\nfig.show()","16e8ee31":"from plotly.subplots import make_subplots\n\nlabels = list(GroupedByContinents28.index)\nlabels\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents28['Recovered cumulative total per 100000 population'], name=\"Recovered cumulative total per 100000 population\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents31['Recovered cumulative total per 100000 population'], name=\"Recovered cumulative total per 100000 population\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.6, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Covid-19 Recovered cumulative total per Continet\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Recovered cumulative', x=0.13, y=0.6, font_size=12, showarrow=False),\n                 dict(text='total per 100000 population', x=0.105, y=0.5, font_size=12, showarrow=False),\n                 dict(text='28-08-2021', x=0.16, y=0.4, font_size=12, showarrow=False),\n                 dict(text='Recovered cumulative', x=0.88, y=0.6, font_size=12, showarrow=False),\n                 dict(text='total per100000 population', x=0.90, y=0.5, font_size=12, showarrow=False),\n                 dict(text='31-08-2021', x=0.84, y=0.4, font_size=12, showarrow=False)])\nfig.show()","e139c8ab":"GroupedByContinents28 = GroupedByContinents28.sort_values(by='Recovered newly reported in last 7 days')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered newly reported in last 7 days 28-08-2021', x=GroupedByContinents28.index, y=GroupedByContinents28['Recovered newly reported in last 7 days']),\n    go.Bar(name='Recovered newly reported in last 7 days 31-08-2021', x=GroupedByContinents31.index, y=GroupedByContinents31['Recovered newly reported in last 7 days'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 600)\n\nfig.show()","a60774b6":"from plotly.subplots import make_subplots\n\nlabels = list(GroupedByContinents28.index)\nlabels\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents28['Recovered newly reported in last 7 days'], name=\"Recovered newly reported in last 7 days\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents31['Recovered newly reported in last 7 days'], name=\"Recovered newly reported in last 7 days\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.6, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Covid-19 Recovered newly reported in last 7 days per Continet\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Recovered newly', x=0.13, y=0.6, font_size=12, showarrow=False),\n                 dict(text='reportedin last 7 days', x=0.105, y=0.5, font_size=12, showarrow=False),\n                 dict(text='28-08-2021', x=0.16, y=0.4, font_size=12, showarrow=False),\n                 dict(text='Recovered newly', x=0.88, y=0.6, font_size=12, showarrow=False),\n                 dict(text='reported in last 7 days', x=0.90, y=0.5, font_size=12, showarrow=False),\n                 dict(text='31-08-2021', x=0.84, y=0.4, font_size=12, showarrow=False)])\nfig.show()","02571368":"GroupedByContinents28 = GroupedByContinents28.sort_values(by='Recovered newly reported in last 7 days per 100000 population')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered newly reported in last 7 days per 100000 population', x = GroupedByContinents28.index, y = GroupedByContinents28['Recovered newly reported in last 7 days per 100000 population']),\n    go.Bar(name='Recovered newly reported in last 7 days per 100000 population', x = GroupedByContinents31.index, y = GroupedByContinents31['Recovered newly reported in last 7 days per 100000 population'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 600)\n\nfig.show()","e55d1d94":"from plotly.subplots import make_subplots\n\nlabels = list(GroupedByContinents28.index)\nlabels\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents28['Recovered newly reported in last 7 days per 100000 population'], name=\"Recovered newly reported in last 7 days per 100000 population\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents31['Recovered newly reported in last 7 days per 100000 population'], name=\"Recovered newly reported in last 7 days per 100000 population\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.6, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Covid-19 Recovered newly reported in last 7 days per 100000 population per Continet\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Recovered newly reported', x=0.11, y=0.6, font_size=12, showarrow=False),\n                 dict(text='in last 7 days per 100000', x=0.105, y=0.5, font_size=12, showarrow=False),\n                 dict(text='population 28-08-2021', x=0.13, y=0.4, font_size=12, showarrow=False),\n                 dict(text='Recovered newly reported', x=0.895, y=0.6, font_size=12, showarrow=False),\n                 dict(text='in last 7 days per 100000', x=0.90, y=0.5, font_size=12, showarrow=False),\n                 dict(text='population 31-08-2021', x=0.89, y=0.4, font_size=12, showarrow=False)])\nfig.show()","19d838af":"GroupedByContinents28 = GroupedByContinents28.sort_values(by='Recovered newly reported in last 24 hours')\nfig = go.Figure(data=[\n    go.Bar(name='Recovered newly reported in last 24 hours', x=GroupedByContinents28.index, y=GroupedByContinents28['Recovered newly reported in last 24 hours']),\n    go.Bar(name='Recovered newly reported in last 24 hours', x=GroupedByContinents31.index, y=GroupedByContinents31['Recovered newly reported in last 24 hours'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group', width = 1000, height = 600)\n\nfig.show()","6fe02d4b":"from plotly.subplots import make_subplots\n\nlabels = list(GroupedByContinents28.index)\nlabels\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents28['Recovered newly reported in last 24 hours'], name=\"Recovered newly reported in last 24 hours\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=GroupedByContinents31['Recovered newly reported in last 24 hours'], name=\"Recovered newly reported in last 24 hours\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.6, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Covid-19 Recovered newly reported in last 24 hours per Continet\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Recovered newly', x=0.13, y=0.6, font_size=12, showarrow=False),\n                 dict(text='reportedin last 24 hours', x=0.105, y=0.5, font_size=12, showarrow=False),\n                 dict(text='28-08-2021', x=0.16, y=0.4, font_size=12, showarrow=False),\n                 dict(text='Recovered newly', x=0.88, y=0.6, font_size=12, showarrow=False),\n                 dict(text='reported in last 24 hours', x=0.90, y=0.5, font_size=12, showarrow=False),\n                 dict(text='31-08-2021', x=0.84, y=0.4, font_size=12, showarrow=False)])\nfig.show()","32eac45f":"GroupedByContinents_diff = pd.DataFrame()\nGroupedByContinents_diff['Continent'] = GroupedByContinents28.index\ncolumns = list(GroupedByContinents28.columns)\nGroupedByContinents_diff['Recovery rate cumulative total'] = GroupedByContinents31['Recovered cumulative total'] - GroupedByContinents28['Recovered cumulative total']\nGroupedByContinents_diff['Recovery rate cumulative total per 100000 population'] = GroupedByContinents31['Recovered cumulative total per 100000 population'] - GroupedByContinents28['Recovered cumulative total per 100000 population']\nfor col in columns:\n    GroupedByContinents28['Differentiated '+col] = GroupedByContinents31[col] - GroupedByContinents28[col]\n\nGroupedByContinents_diff = pd.DataFrame()\nGroupedByContinents_diff['Continent'] = GroupedByContinents28.index\nGroupedByContinents_diff= GroupedByContinents28.iloc[:,-5:]\nGroupedByContinents_diff = GroupedByContinents_diff.reset_index()\nGroupedByContinents_diff","2006882f":"columns = list(GroupedByContinents_diff.columns)\nresult_df = pd.DataFrame(columns = columns[1:], index = GroupedByContinents28.index)\nresult_df = result_df.reset_index()\n\nfor col in columns[1:]:\n    result_df[col] = GroupedByContinents_diff[col].apply(lambda x: 'Increase' if x >= 0 else 'Decline')\nresult_df\n\n","85297090":"<b>Above bar plot shows that there is a decrease in the count of recovered newly reported on 31-08-2021 in last 7 days than that of the count of recovered newly reported on 28-08-2021 in last 7 days in the continents Americas, Europe and Africa. Hence, safety measures and preventive action should be taken to increase this count.<\/b>","fdc62f4d":"<b>But when we study above bar plot, it shows that Americas has a drastic progress in the count of recovered cases newly reported on 31-08-2021 in last 7 day per 100000 population than that reported in 28-08-2021. In case of Africa, Western Pacific and Europe, this count is reduced. It is very essential to take desired action and improve the count.<\/b>","48ff2fee":"### 3. Analysis of Recovered newly reported in last 7 days","3fcdc69d":"### 2. Analysis of Recovered cumulative total per 100000 population in each Continet","f5540b6c":"<b>Top 5 countries containing highest Recovered newly reported in last 24 hours\n1. Colombia\n2. Czech Republic\t\n3. Netherlands\n4. Belgium\n5. Kuwait.<\/b>","03b65a23":"### 5. Analysis of Recovered newly reported in last 24 hours","ef5eb009":"<b>Q. Is there increase in Recovered cumulative total of continents?<\/b> <br>\nThere is a slight increase in Recovered cumulative total of continents.","2a9e8132":"<b>In both datasets, <i>'Deaths - newly reported in last 24 hours'<\/i> column contain only null values. Hence, it is better to drop that column.<\/b>","c5337308":"## Comparative analysis of datasets Country-wise\n\n### 1. Analysis of Recovered cumulative total","7f20861e":"### 5. Analysis of Recovered newly reported in last 24 hours","9538cf27":"<b>Top 5 countries containing highest Recovered cumulative total per 100000 population:\n1. Timor-Leste\t\n2. Ghana\n3. Tanzania\n4. Burkina Faso\n5. Saudi Arabia<\/b>","08a13f56":"### 2. Analysis of Recovered cumulative total per 100000 population","45f61f85":"### 4. Analysis of Recovered newly reported in last 7 days per 100000 population","79b92717":"<b>Top 5 countries containing highest Recovered cumulative total per 100000 population:\n1. Trinidad and Tobago\n2. Ghana\n3. Saudi Arabia\n4. Guadeloupe\n5. Albania<\/b>","822c33da":"<b>Europe has the highest recovery cumulative total per 100000 population, whereas South-East Asia has the lowest recovery cumulative total per 100000 population. It indicates South-East Asia is risky.<\/b>","a84ced68":"### 3. Analysis of Recovered - newly reported in last 7 days in each Continet","6ae83da3":"<b>Top 5 countries as per Recovered cumulative total:\n1. United States\n2. India\n3. United Kingdom\n4. Brazil\n5. Japan<\/b>","73cb706f":"## Covid-19 cases analysis by continent","f63c4e71":"## Comparative analysis of datasets Continent-wise\n### 1. Analysis of Recovered cumulative total","aacd2a66":"# Title of Project: WHO(World Health Org.) COVID-19 data","96d60679":"### 4. Analysis of Recovered - newly reported in last 7 days per 100000 population in each Continent","082c23f2":"<b>Above bar plot shows that there is a decrease in the count of recovered newly reported on 31-08-2021 in last 24 hours than that of the count of recovered newly reported on 28-08-2021 in last 24 hours in the continents Americas, Europe, Eastern Mediterranean and Africa.<\/b>","c82d319f":"### Find the difference between datasets and analyze","9a085449":"# Conclusion\n\n1. Recovered cumulative total and Recovered cumulative total per 100000 population is increased in all continents from 28-08-2021 to 31-08-2021.\n2. Recovered count newly reported in last 7 days is decreased in Africa, Europe and Americas continents. In these continents, safety measures and preventive action should be taken on urgent basis.\n3. Recovered newly reported in last 7 days per 100000 population is declined in continents: Africa, Western Pacific and Europe.\n4. Recovered newly reported in last 24 hours is decreased in Africa, Eastern, Europe and Americas continents.","75958334":"<b>Top 5 countries containing highest Recovered cumulative total per 100000 population:\n1. Colombia\n2. Czech Republic\n3. Belgium\n4. Netherlands\n5. Kuwait<\/b>"}}