{"cell_type":{"9bdd8c9d":"code","a4d0ef3e":"code","a96c6f24":"code","7784c222":"code","eac865ba":"code","7a7af3d8":"code","9cc31d6c":"code","7e9a063e":"code","f89d3609":"code","a788ca4c":"code","0784f06b":"code","25186816":"code","5aa10d78":"code","e95ce23f":"code","65aa064d":"code","003150be":"code","8472b01c":"code","196fd08a":"code","2eec5984":"code","0b0ebeb0":"code","3a1602e8":"code","8b4662fe":"code","be0d559b":"code","c04129ba":"code","79cc1d2f":"code","be0dc608":"code","a04a04ff":"code","716ba2c3":"code","a6c20ce5":"code","b53eea0e":"code","15853d51":"code","35bae658":"code","a5095a77":"code","66b8ded9":"code","09dfb1ae":"code","3e41e737":"code","6aeedaec":"code","4f28289a":"code","c7290f8a":"code","d0019b55":"code","456878d9":"code","eb6fcc7b":"markdown","c383e257":"markdown","f135d531":"markdown","098c4849":"markdown","47aabc15":"markdown","a5d48a6c":"markdown","664dc86f":"markdown","1a2a6eb6":"markdown","95e3dab3":"markdown","82e4c449":"markdown","7cea4e09":"markdown","7f6802ba":"markdown","4a927420":"markdown","b55e0ee3":"markdown","09f92c58":"markdown","e09e9c71":"markdown","061b314c":"markdown","ed45141d":"markdown","ff70983b":"markdown","d15b899d":"markdown","18ada543":"markdown","16320b4e":"markdown","59e49278":"markdown","e70390b6":"markdown","8fb71dda":"markdown","42a6a8c4":"markdown","2aa39177":"markdown","9f56bb93":"markdown","d1facd33":"markdown","4204d8ab":"markdown","c820926e":"markdown","bd53c0cf":"markdown","3983bd7e":"markdown","fc108ea9":"markdown","eeb1acc8":"markdown","3911263e":"markdown","0d455aca":"markdown","0d87b978":"markdown"},"source":{"9bdd8c9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np  # linear algebra\nimport pandas as pd  # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import r2_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import export_graphviz\nfrom sklearn.model_selection import KFold\nfrom sklearn.ensemble import RandomForestRegressor\n\nsns.set(); # \u0431\u043e\u043b\u0435\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u044b\u0439 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0432\u0438\u0434 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a4d0ef3e":"df = pd.read_csv('\/kaggle\/input\/online-news-popularity-dataset\/OnlineNewsPopularityReduced.csv', sep=',')\ndf.head()","a96c6f24":"target = df['shares']\nprint(target)","7784c222":"df[\"shares\"].hist(bins = 100)","eac865ba":"df['shares_log'] = np.log(df['shares'])\ndf['shares_log'].hist(bins = 100)","7a7af3d8":"df.info()","9cc31d6c":"df1 = df.drop('url', axis=1)\ndf1","7e9a063e":"df2 = df1.drop('shares', axis=1)\ndf2","f89d3609":"X = df2.drop('shares_log', axis=1)\ny = df2['shares_log']\nX.head()\n","a788ca4c":"scaler = StandardScaler()\nX_new = scaler.fit_transform(X)","0784f06b":"X_train, X_valid, y_train, y_valid = train_test_split(X_new, y, test_size = 0.25, random_state = 19)\nprint(y_train)","25186816":"tree = DecisionTreeRegressor(max_depth=3, random_state=19)\ntree.fit(X_train, y_train)","5aa10d78":"y_pred = tree.predict(X_valid)\nmean_squared_error(y_valid, y_pred)","e95ce23f":"r2_score(y_valid, y_pred)","65aa064d":"tree.score(X_valid, y_valid)","003150be":"kf = KFold(n_splits=5, shuffle=True, random_state=30)","8472b01c":"tree_params_depth = {'max_depth': np.arange(2, 11)}\ntree_grid_depth = GridSearchCV(tree, tree_params_depth, cv=5, scoring='r2', n_jobs=-1)\ntree_grid_depth.fit(X_train, y_train)\nprint(tree_grid_depth.best_params_)\nprint(tree_grid_depth.best_score_)","196fd08a":"tree = DecisionTreeRegressor(max_depth=3)\ntree_params_split = {'min_samples_split': np.arange(2, 21)}\ntree_grid_split = GridSearchCV(tree, tree_params_split, cv=5, scoring='r2', n_jobs=-1)\ntree_grid_split.fit(X_train, y_train)\nprint(tree_grid_split.best_params_)\nprint(tree_grid_split.best_score_)","2eec5984":"tree = DecisionTreeRegressor(max_depth=3, min_samples_split=14)\ntree_params_leaf = {'min_samples_leaf': np.arange(2, 21)}\ntree_grid_leaf = GridSearchCV(tree, tree_params_leaf, cv=5, scoring='r2', n_jobs=-1)\ntree_grid_leaf.fit(X_train, y_train)\nprint(tree_grid_leaf.best_params_)\nprint(tree_grid_leaf.best_score_)","0b0ebeb0":"tree = DecisionTreeRegressor(max_depth=3, min_samples_split=14, min_samples_leaf=16)\ntree_params_features = {'max_features': np.arange(2, 21)}\ntree_grid_features = GridSearchCV(tree, tree_params_features, cv=5, scoring='r2', n_jobs=-1)\ntree_grid_features.fit(X_train, y_train)\nprint(tree_grid_features.best_params_)\nprint(tree_grid_features.best_score_)","3a1602e8":"fig, ax = plt.subplots(2, 2, figsize=(10, 10))\nax[0, 0].set_xlabel(\"Max depth\")\nax[0, 0].set_ylabel(\"Score\")\nax[0, 0].plot(tree_params_depth['max_depth'], tree_grid_depth.cv_results_[\"mean_test_score\"])\nax[0, 1].set_xlabel(\"Min samples split\")\nax[0, 1].set_ylabel(\"Score\")\nax[0, 1].plot(tree_params_split[\"min_samples_split\"], tree_grid_split.cv_results_[\"mean_test_score\"])\nax[1, 0].set_xlabel(\"Min samples leaf\")\nax[1, 0].set_ylabel(\"Score\")\nax[1, 0].plot(tree_params_leaf[\"min_samples_leaf\"],tree_grid_leaf.cv_results_[\"mean_test_score\"])\nax[1, 1].set_xlabel(\"Max features\")\nax[1, 1].set_ylabel(\"Score\")\nax[1, 1].plot(tree_params_features[\"max_features\"], tree_grid_features.cv_results_[\"mean_test_score\"])","8b4662fe":"tree = DecisionTreeRegressor(max_depth=3, min_samples_split=14, min_samples_leaf=16, max_features=15, random_state=19)\ntree.fit(X_train, y_train)","be0d559b":"r2_score(y_valid, y_pred)","c04129ba":"export_graphviz(tree, out_file='tree.dot', feature_names=X.columns)\nprint(open('tree.dot').read())","79cc1d2f":"features = {'f' + str(i + 1): name for (i, name) in zip(range(len(df2.columns)), df2.columns)}\nimportances = tree.feature_importances_\nindices = np.argsort(importances)[:: -1]\nnum_to_plot = 10\nfeature_indices = [ind + 1 for ind in indices[:num_to_plot]]\nprint(\"Feature ranking:\")\nfor f in range(num_to_plot):\n    print(f + 1, features[\"f\" + str(feature_indices[f])], importances[indices[f]])\n","be0dc608":"plt.figure(figsize=(15, 5))\nplt.title(\"Feature importances\")\nbars = plt.bar(range(num_to_plot),\n               importances[indices[:num_to_plot]],\n               color=([str(i \/ float(num_to_plot + 1)) for i in range(num_to_plot)]),\n               align=\"center\")\nticks = plt.xticks(range(num_to_plot), feature_indices)\nplt.xlim([-1, num_to_plot])\nplt.legend(bars, [u''.join(features[\"f\" + str(i)]) for i in feature_indices])","a04a04ff":"rf = RandomForestRegressor(random_state=19)\nrf.fit(X_train, y_train)\ny_pred = rf.predict(X_valid)\nmean_squared_error(y_valid, y_pred)","716ba2c3":"r2_score(y_valid, y_pred)","a6c20ce5":"rf_params_estimators = {'n_estimators': [300, 350, 400, 450, 500, 550]}\nrf_grid_estimators = GridSearchCV(rf, rf_params_estimators, cv=kf, scoring='r2', n_jobs=-1)\nrf_grid_estimators.fit(X_train, y_train)\n","b53eea0e":"print(rf_grid_estimators.best_params_)\nprint(rf_grid_estimators.best_score_)","15853d51":"rf = RandomForestRegressor(random_state=19, n_estimators=500)\nrf_params_depth = {'max_depth': np.arange(2, 11)}\nrf_grid_depth = GridSearchCV(rf, rf_params_depth, cv=kf, scoring='r2', n_jobs=-1)\nrf_grid_depth.fit(X_train, y_train)","35bae658":"print(rf_grid_depth.best_params_)\nprint(rf_grid_depth.best_score_)","a5095a77":"rf = RandomForestRegressor(random_state=19, n_estimators=500, max_depth=9)\nrf_params_split = {'min_samples_split': np.arange(20, 31)}\nrf_grid_split = GridSearchCV(rf, rf_params_split, cv=kf, scoring='r2', n_jobs=-1)\nrf_grid_split.fit(X_train, y_train)","66b8ded9":"print(rf_grid_split.best_params_)\nprint(rf_grid_split.best_score_)\n","09dfb1ae":"rf = RandomForestRegressor(random_state=19, n_estimators=500, max_depth=9, min_samples_split=29)\nrf_params_leaf = {'min_samples_leaf': np.arange(18, 31)}\nrf_grid_leaf = GridSearchCV(rf, rf_params_leaf, cv=kf, scoring='r2', n_jobs=-1)\nrf_grid_leaf.fit(X_train, y_train)","3e41e737":"print(rf_grid_leaf.best_params_)\nprint(rf_grid_leaf.best_score_)\n","6aeedaec":"rf = RandomForestRegressor(random_state=19, n_estimators=500, max_depth=9, min_samples_split=29, min_samples_leaf=20)\nrf_params_features = {'max_features': np.arange(18, 31)}\nrf_grid_features = GridSearchCV(rf, rf_params_features, cv=kf, scoring='r2', n_jobs=-1)\nrf_grid_features.fit(X_train, y_train)","4f28289a":"print(rf_grid_features.best_params_)\nprint(rf_grid_features.best_score_)","c7290f8a":"fig, ax = plt.subplots(2, 3, figsize=(15 , 15))\nax[0, 0].set_xlabel(\"Max depth\")\nax[0, 0].set_ylabel(\"Score\")\nax[0, 0].plot(rf_params_depth['max_depth'], rf_grid_depth.cv_results_[\"mean_test_score\"])\nax[0, 1].set_xlabel(\"Min samples split\")\nax[0, 1].set_ylabel(\"Score\")\nax[0, 1].plot(rf_params_split[\"min_samples_split\"], rf_grid_split.cv_results_[\"mean_test_score\"])\nax[0, 2].set_xlabel(\"Min samples leaf\")\nax[0, 2].set_ylabel(\"Score\")\nax[0, 2].plot(rf_params_leaf[\"min_samples_leaf\"],rf_grid_leaf.cv_results_[\"mean_test_score\"])\nax[1, 0].set_xlabel(\"Max features\")\nax[1, 0].set_ylabel(\"Score\")\nax[1, 0].plot(rf_params_features[\"max_features\"], rf_grid_features.cv_results_[\"mean_test_score\"])\nax[1, 1].set_xlabel(\"N Estimators\")\nax[1, 1].set_ylabel(\"Score\")\nax[1, 1].plot(rf_params_estimators[\"n_estimators\"], rf_grid_estimators.cv_results_[\"mean_test_score\"])","d0019b55":"features = {'f' + str(i + 1): name for (i, name) in zip(range(len(df2.columns)), df2.columns)}\nimportances = tree.feature_importances_\nindices = np.argsort(importances)[:: -1]\nnum_to_plot = 10\nfeature_indices = [ind + 1 for ind in indices[:num_to_plot]]\nprint(\"Feature ranking:\")\nfor f in range(num_to_plot):\n    print(f + 1, features[\"f\" + str(feature_indices[f])], importances[indices[f]])","456878d9":"plt.figure(figsize=(15 , 5))\nplt.title(\"Feature importances\")\nbars = plt.bar(range(num_to_plot),\n               importances[indices[:num_to_plot]],\n               color=([str(i \/ float(num_to_plot + 1)) for i in range(num_to_plot)]),\n               align=\"center\")\nticks = plt.xticks(range(num_to_plot), feature_indices)\nplt.xlim([-1, num_to_plot])\nplt.legend(bars, [u''.join(features[\"f\" + str(i)]) for i in feature_indices])","eb6fcc7b":"\u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0435 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u043e \u043f\u0440\u043e\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0442\u0430\u0440\u0433\u0435\u0440-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439. \u0414\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u043e\u0433\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u043d\u0443\u0436\u043d\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c.","c383e257":"**\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u0441\u044c \u043a \u043e\u0434\u043d\u043e\u043c\u0443 \u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 Kaggle. \u0420\u0430\u0437\u0431\u0435\u0440\u0438\u0442\u0435\u0441\u044c \u0432 \u0442\u043e\u043c, \u043a\u0430\u043a \u0443\u0441\u0442\u0440\u043e\u0435\u043d \u0432\u0430\u0448 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0438 \u043a\u0430\u043a\u043e\u0432\u0430 \u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0434\u0430\u0447\u0438.**","f135d531":"\u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0441\u044b\u043b\u043a\u0438 ('url'), \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0438 \u043d\u0435 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u0438 \u0432\u043e\u0432\u0441\u0435 \u043f\u043e\u0447\u0442\u0438 \u043d\u0435 \u043d\u0435\u0441\u0443\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u0440\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u0441\u0442\u0430\u0442\u044c\u0438.","098c4849":"\u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 'shares', \u0442\u0430\u043a \u043a\u0430\u043a \u0440\u0430\u043d\u0435\u0435 \u043c\u044b \u043f\u0440\u043e\u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0442\u0430\u0440\u0433\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u044b\u043b\u043e \u0441\u043a\u043e\u0448\u0435\u043d\u043e \u0432\u043b\u0435\u0432\u043e.","47aabc15":"**\u041f\u0440\u043e\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0443\u044e \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 (preprocessing). \u0414\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430\u043c\u0438.**","a5d48a6c":"**\u041f\u043e\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u043b\u0435\u0441\u0430 \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u0441 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u043e\u0446\u0435\u043d\u0438\u0442\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0438.**","664dc86f":"\u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e score \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0432\u044b\u0441\u043e\u043a -> \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u0430\u044f.","1a2a6eb6":"\u0418\u043c\u0435\u0435\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043d\u043e\u0432\u043e\u0441\u0442\u043d\u044b\u0445 \u043e\u043d\u043b\u0430\u0439\u043d-\u0441\u0442\u0430\u0442\u0435\u0439. \u0426\u0435\u043b\u0435\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \"Shares\". \u0426\u0435\u043b\u044c \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 - \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438.","95e3dab3":"\u0418\u043d\u0442\u0435\u0440\u0432\u0432\u0430\u043b\u044b \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u043b\u0438\u0441\u044c \u0442\u0430\u043a: \u043a\u043e\u0433\u0434\u0430 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u043d\u0430 \u0441\u0430\u043c\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435, \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b \u043f\u043e\u0434\u0432\u0438\u0433\u0430\u043b\u0441\u044f \u0432 \u043e\u0434\u043d\u0443 \u0438\u0437 \u0441\u0442\u043e\u0440\u043e\u043d. \u0422\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0434\u043e\u043b\u0433\u043e, \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u044b \u0441 \u0441\u0430\u043c\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e.\n\n\u041d\u0430\u0431\u043e\u0440 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432:\n\n* n_estimators = 500\n* max_depth = 9\n* min_samples_split = 29\n* min_samples_leaf = 20\n* max_features = 29","82e4c449":"# \u21163","7cea4e09":"\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0442\u0430\u0440\u0433\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:","7f6802ba":"**\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u0435 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u043f\u043e\u0434\u0431\u043e\u0440\u0430 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.**","4a927420":"\u041c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c, \u0447\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u043c.","b55e0ee3":"**\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u0435 \u043f\u043e\u0434\u0431\u043e\u0440 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438.**","09f92c58":"\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f:","e09e9c71":"\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442. \u041d\u0430\u0439\u0434\u0435\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u0434\u0435\u0442\u0435\u0440\u043c\u0438\u043d\u0430\u0446\u0438\u0438 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c score.","061b314c":"![image.png](attachment:7d7aa527-aa8f-411e-8f2e-31164066b37b.png)","ed45141d":"**\u0421\u0440\u0430\u0432\u043d\u0438\u0442\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043c\u0435\u0442\u043e\u0434\u0430 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439, \u0434\u0435\u0440\u0435\u0432\u0430 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u043b\u0435\u0441\u0430. \u0421\u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u044b\u0432\u043e\u0434\u044b.**","ff70983b":"\u041d\u0430\u0431\u043e\u0440 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432:\n* max_depth = 3\n* min_samples_split = 14\n* min_samples_leaf = 16\n* max_features = 15\n","d15b899d":"**\u0421\u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u044b\u0432\u043e\u0434\u044b.**","18ada543":"\u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u043b\u0430\u0441\u044c -> \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u043e\u0441\u044c.","16320b4e":"**\u041f\u043e\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043a\u0440\u0438\u0432\u044b\u0435. \u0421\u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u0432\u044b\u0432\u043e\u0434\u044b.**","59e49278":"**\u041e\u0446\u0435\u043d\u0438\u0442\u0435 \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438. \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0442\u043e\u043f-10 \u0441\u0430\u043c\u044b\u0445 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.**","e70390b6":"**\u041a\u0430\u043a\u043e\u0432\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 target-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439? \u041f\u043e\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0443\u044e \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e. \u041f\u0440\u043e\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.**","8fb71dda":"**\u041f\u043e\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043a\u0440\u0438\u0432\u044b\u0435 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.**","42a6a8c4":"# \u21162 ","2aa39177":"**\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0439, \u043f\u043e\u043c\u0435\u0448\u0438\u0432\u0430\u044e\u0449\u0438\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0431\u043b\u043e\u043a\u043e\u0432. \u0427\u0438\u0441\u043b\u043e \u0431\u043b\u043e\u043a\u043e\u0432 \u0440\u0430\u0432\u043d\u043e 5.**","9f56bb93":"\u0422\u0430\u043a \u043a\u0430\u043a \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u0435\u043d, \u043d\u0443\u0436\u043d\u043e \u0440\u0435\u0448\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438.","d1facd33":"**\u0420\u0430\u0437\u0431\u0435\u0439\u0442\u0435 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e (\u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e) \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 train_test_split.**","4204d8ab":"\u041d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \"shares\" \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432\u043b\u0438\u044f\u044e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\n* \u041a\u0430\u043a \u0434\u0430\u0432\u043d\u043e \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u044f \u0431\u044b\u043b\u0430 \u0432\u044b\u043b\u043e\u0436\u0435\u043d\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442\n* \u041f\u0440\u0438\u0437\u043d\u0430\u043a 'kw_avg_avg' \n\u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043b\u0438\u0431\u043e \u0432\u043b\u0438\u044f\u044e\u0442 \u043e\u0447\u0435\u043d\u044c \u043e\u0447\u0435\u043d\u044c \u0441\u043b\u0430\u0431\u043e, \u043b\u0438\u0431\u043e \u043d\u0435 \u0432\u043b\u0438\u044f\u044e\u0442 \u0432\u043e\u0432\u0441\u0435.","c820926e":"# \u21161","bd53c0cf":"**\u0418\u0437\u0432\u043b\u0435\u043a\u0438\u0442\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a (target). \u041a\u0430\u043a\u0430\u044f \u0438\u0437 \u0437\u0430\u0434\u0430\u0447 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0441 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u2013\u2013 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438\u043b\u0438 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f?**","3983bd7e":"**\u041f\u043e\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0434\u0435\u0440\u0435\u0432\u043e. \u041e\u0446\u0435\u043d\u0438\u0442\u0435 \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.**","fc108ea9":"\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0442\u0435 \u0436\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0447\u0442\u043e \u0438 \u0434\u043b\u044f \u0434\u0435\u0440\u0435\u0432\u0430 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 - 'timedelta' \u0438 'kw_avg_avg'.","eeb1acc8":"\u041d\u0435\u043b\u044c\u0437\u044f \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0435\u0440\u0435\u0432\u0430 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u043e\u0442\u043b\u0438\u0447\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c, \u043d\u043e \u0432\u0441\u0435 \u0436\u0435 \u043e\u043d\u0430 \u043b\u0443\u0447\u0448\u0435 \u0447\u0435\u043c \u0432 \u0441\u043b\u0443\u0447\u0430\u0435\n\u043c\u0435\u0442\u043e\u0434\u0430 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439. \u0422\u0430\u043a \u0436\u0435 \u0434\u0435\u0440\u0435\u0432\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0435\u0435 \u0438 \u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c.\n\n\u0412 \u0445\u043e\u0434\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u043d\u0430\u0439\u0434\u0435\u043d \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043d\u0430\u0431\u043e\u0440 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u0447\u0442\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u0430\u0436\u043d\u044b\u043c\u0438 \u0444\u0430\u043a\u0442\u043e\u0440\u0430\u043c\u0438, \u0432\u043b\u0438\u044f\u044e\u0449\u0438\u043c\u0438 \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \"shares\" \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f:\n* \u0432\u0440\u0435\u043c\u044f \u0441 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432\u044b\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u043d\u0438\u044f \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u043d\u0430 \u0441\u0430\u0439\u0442; \n* 'kw_avg_avg'.","3911263e":"* KNN \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u0441\u0430\u043c\u044b\u043c \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u043c, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u0431\u044b\u043b\u043e \u0445\u0443\u0434\u0448\u0438\u043c \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445. \n* \u0414\u0435\u0440\u0435\u0432\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0431\u044b\u043b\u043e \u043e\u0447\u0435\u043d\u044c \u0431\u044b\u0441\u0442\u0440\u044b\u043c, \u043c\u043e\u0434\u0435\u043b\u044c \u043e\u043a\u0430\u0437\u0430\u043b\u0430\u0441\u044c \u043b\u0443\u0447\u0448\u0435 \u0447\u0435\u043c \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 kNN, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f.\n* \u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u043b \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0443\u0447\u0448\u0435 \u0447\u0435\u043c kNN \u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a\u0443\u044e \u0436\u0435 \u043a\u0430\u043a \u0434\u0435\u0440\u0435\u0432\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0439, \u043f\u0440\u0438 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 \u043e\u043d \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u043b\u0433\u043e.\n\n","0d455aca":"\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0431\u044b\u043b\u0430 \u0432\u044b\u0431\u0440\u0430\u043d\u0430 r2.\n\u0422\u0430\u043a \u043a\u0430\u043a \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u0442\u044c 4 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u043b\u0433\u043e, \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u0442\u044c \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e.","0d87b978":"**\u041e\u0431\u0443\u0447\u0438\u0442\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438 DesicionTreeRegressor. \u041e\u0446\u0435\u043d\u0438\u0442\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0438.**"}}