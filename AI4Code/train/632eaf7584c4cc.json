{"cell_type":{"a1da9395":"code","3665ef47":"code","ff8e53fe":"code","2dc567f9":"code","20f1a6f3":"code","69de5d17":"code","abeb844e":"code","4104f63e":"code","417f4eb1":"code","80d73b99":"code","465d758f":"code","3ff7b81a":"code","233a31a0":"code","bddd1e55":"code","24c14348":"code","06dc9614":"code","119cedf0":"code","2d195fb2":"code","67f033e7":"code","4b025c06":"code","907b30c8":"code","30c1a881":"code","8d92009f":"code","0dfd2710":"code","7abc1c14":"code","f3a2b09f":"code","48d49aa2":"code","e2adfcfb":"code","7a6db855":"code","cb3532e6":"code","da693a12":"code","b017d002":"code","3beabf15":"code","0180fcbb":"code","18ddde7d":"code","62e8e800":"code","bfa471fa":"code","87405f1f":"code","e7f57649":"code","ab1f5b60":"code","b36f8197":"code","2b0d7525":"code","5f3b1c07":"code","e8f0cbbf":"code","0ea62150":"code","42eb2997":"code","25f48d53":"markdown","718caf50":"markdown","56403cb0":"markdown","cf6a3d53":"markdown","6080cda4":"markdown","60b94e81":"markdown","bf4d1a61":"markdown","111febae":"markdown"},"source":{"a1da9395":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas import set_option\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import precision_score, recall_score, confusion_matrix, accuracy_score\nfrom sklearn.metrics import classification_report, f1_score,roc_auc_score,cohen_kappa_score\nimport os","3665ef47":"dataset = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\n","ff8e53fe":"dataset = pd.DataFrame(dataset)\ndataset.head()","2dc567f9":"types=dataset.dtypes\nprint(types)","20f1a6f3":"set_option ('display.width',100)\nset_option ('precision',3)\ndescription = dataset.describe()\nprint(description)","69de5d17":"dataset.isnull().sum()","abeb844e":"hastalikdurumu_counts = dataset.groupby('target').size()\nprint(hastalikdurumu_counts)","4104f63e":"set_option('display.width',100)\nset_option('precision',3)\ncorrelations = dataset.corr(method='pearson')\nprint(correlations)","417f4eb1":"\ndataset.hist(figsize=(10,10))\nplt.show()","80d73b99":"dataset.hist(column='age', bins=15, grid=False, figsize=(10,10), color='#000000', zorder=2, rwidth=0.9)","465d758f":"dataset.plot(kind='density', subplots=True, figsize=(10,10), layout=(4,4), sharex=False)\nplt.show()","3ff7b81a":"j=dataset.corr()\nf, ax = plt.subplots(figsize=(10,5))\nsns.heatmap(j, annot=True, linewidths=.5, ax=ax)","233a31a0":"dataset.head()","bddd1e55":"cat_col =[\"sex\",\"cp\",\"fbs\",\"restecg\",\"exang\",\"slope\",\"ca\",\"thal\"]\ndataset = pd.get_dummies(dataset, columns = cat_col)","24c14348":"dataset.columns","06dc9614":"dataset = dataset.drop([\"sex_0\",\"cp_0\",\"fbs_0\",\"restecg_0\",\n            \"exang_0\",\"slope_0\",\"ca_0\",\"thal_0\"],axis = 1)","119cedf0":"dataset.head()","2d195fb2":"dataset.columns","67f033e7":"j=dataset.corr()\nf, ax = plt.subplots(figsize=(15,10))\nsns.heatmap(j, annot=True, linewidths=1, ax=ax)","4b025c06":"dataset = dataset.drop([\"slope_2\",\"thal_2\"],axis=1)","907b30c8":"j=dataset.corr()\nf, ax = plt.subplots(figsize=(15,10))\nsns.heatmap(j, annot=True, linewidths=1, ax=ax)","30c1a881":"dataset.columns","8d92009f":"dataset.head()","0dfd2710":"X = dataset.drop([\"target\"], axis=1)\nY = dataset[\"target\"]","7abc1c14":"x_train,x_test,y_train,y_test= train_test_split(X,Y,\n                                                test_size=0.25,\n                                                random_state=42)","f3a2b09f":"print(x_train)","48d49aa2":"model = KNeighborsClassifier()\nmodel.fit(x_train, y_train)\n\ny_pred = model.predict(x_test)\ny_pred1 = model.predict(x_train)","e2adfcfb":"print('e\u011fitim verisi i\u00e7in do\u011fruluk oran\u0131: ',accuracy_score(y_pred1,y_train))\nprint('test verisi i\u00e7in do\u011fruluk: ',accuracy_score(y_pred, y_test))","7a6db855":"sc = StandardScaler()\nx_train_std = sc.fit_transform(x_train)\nx_test_std = sc.fit_transform (x_test)\nx_train_std[0:5]","cb3532e6":"from sklearn.decomposition import PCA\npca = PCA(n_components=None, random_state=42)\npca.fit_transform(x_train_std)\npca.fit_transform(x_test_std)\nexp_var = pca.explained_variance_ratio_\nnp.set_printoptions(suppress=True)\nprint(exp_var)","da693a12":"exp_var = np.round(pca.explained_variance_ratio_*100, decimals=1 )\nlabels = ['PC'+ str(x) for x in range(1, len(exp_var)+1)]","b017d002":"plt.bar(x=range(1,len(exp_var)+1),height = exp_var, tick_label=labels)\nplt.ylabel(\"percentage of variance explained\")\nplt.xlabel(\"principal component\")\nplt.show()","3beabf15":"from sklearn.decomposition import PCA\npca = PCA(n_components=14, random_state=42)\n\nx_train_pca = pca.fit_transform(x_train_std)\nx_test_pca = pca.fit_transform(x_test_std)\nexp_var = pca.explained_variance_ratio_\n\nnp.set_printoptions(suppress=True)\nprint(exp_var)","0180fcbb":"print(x_train_pca)","18ddde7d":"#?KNeighborsClassifier","62e8e800":"knc = KNeighborsClassifier()","bfa471fa":"knc_params = {\"n_neighbors\":np.arange(1,50),\n             \"leaf_size\":[2,5,10,20,30,50,80,100]}","87405f1f":"knc_tuned = GridSearchCV(knc, knc_params, cv=10, n_jobs=-1, verbose=2, scoring=\"accuracy\").fit(x_train_pca, y_train)","e7f57649":"knc_tuned.best_score_","ab1f5b60":"knc_tuned.best_params_","b36f8197":"knc_final = KNeighborsClassifier(n_neighbors=25, leaf_size=2).fit(x_train_pca, y_train)\ny_pred = knc_final.predict(x_test_pca)\naccuracy_score(y_test, y_pred)","2b0d7525":"print(\"Precision:\", precision_score(y_test,y_pred))\nprint(\"Recall:\",recall_score(y_test, y_pred))\n","5f3b1c07":"print(confusion_matrix(y_test, y_pred))","e8f0cbbf":"print('test')\ncm=confusion_matrix(y_test, y_pred)\nsns.heatmap(cm,center=True,annot=True,fmt='d')","0ea62150":"print(classification_report(y_test, y_pred))","42eb2997":"print('ROC e\u011frisindeki alan\u0131:',roc_auc_score(y_test, y_pred))\nprint(\"f1 score\",f1_score(y_test, y_pred))\nprint('cohen kappa test',cohen_kappa_score(y_test, y_pred))\n","25f48d53":"# KNeighborsClassifier","718caf50":"# Parameter Optimization","56403cb0":"# Precision and Recall ","cf6a3d53":"# Feature Extraction - PCA(Principal Component Analysis)","6080cda4":"### Editing Categorical Variables","60b94e81":"### Preparing Training and Test Data","bf4d1a61":"# Standardization","111febae":"# Preparing Data for Machine Learning"}}