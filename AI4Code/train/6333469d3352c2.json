{"cell_type":{"e68383bd":"code","803f2c46":"code","19f70a02":"code","b66f3934":"code","421f513d":"code","c14de1c5":"code","218f4ffe":"code","57f8191c":"code","a0cd2481":"code","a4acf96a":"code","add6257a":"code","8de93ff0":"code","e5e76481":"code","a85f0b7a":"code","e74507b0":"code","7158f958":"code","f4292a48":"code","352d0654":"code","f13843e2":"code","94d4e014":"code","cf113376":"code","568fdf74":"code","6c7e065f":"code","cb9947b7":"code","e15bea7b":"code","e49b7290":"code","d168fa3b":"code","c06a193b":"code","ca4b6f80":"code","60df28c0":"code","6deb1ad4":"code","b7ee3b55":"code","59adeef5":"code","d95c5671":"code","5ede781e":"code","2762be35":"code","7aaf04fd":"code","d17681ee":"code","d5fb41e3":"code","a1848b07":"code","cef5cd5c":"code","261ea42a":"code","51618925":"code","5a35ec5e":"code","f6e1f71a":"code","02b71c56":"code","ce1174ac":"code","c1c5aa30":"markdown","41d0f915":"markdown","0616fc4a":"markdown","23a5768c":"markdown","2207790e":"markdown","8e37df66":"markdown","f0386f3c":"markdown","edfabf29":"markdown","1c1b3039":"markdown","4ec47f21":"markdown","93365d67":"markdown","0e185ca1":"markdown","5dcb0fda":"markdown","cc671c7b":"markdown","d9b2d253":"markdown","321c970d":"markdown","d1c09a3c":"markdown","8985abcf":"markdown","f3ccb7ba":"markdown","09f2a3d7":"markdown","cfac4ac4":"markdown","3b6b2bd5":"markdown","06f358fa":"markdown","aba834eb":"markdown","af420eb5":"markdown"},"source":{"e68383bd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","803f2c46":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n\n\nfrom sklearn import svm","19f70a02":"data = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv',index_col='id')","b66f3934":"data.head()","421f513d":"data.shape","c14de1c5":"data.info()","218f4ffe":"data.describe()","57f8191c":"data.isnull().sum()","a0cd2481":"sns.heatmap(data.isnull())","a4acf96a":"data['bmi'].fillna(data['bmi'].mean(),inplace=True)","add6257a":"data.isnull().sum()","8de93ff0":"sns.heatmap(data.isnull())","e5e76481":"sns.catplot('stroke','age',data=data,kind='violin')\nplt.title('relationship between age and stroke')","a85f0b7a":"data[['Residence_type','bmi']].groupby('Residence_type').mean('bmi').plot(kind='bar')","e74507b0":"data[['work_type','avg_glucose_level']].groupby('work_type').mean('avg_glucose_level').plot(kind='bar')\nplt.ylabel('average glucose level')\nplt.title('relationship between glucose level and work type')","7158f958":"data[['stroke','avg_glucose_level','bmi']].groupby('stroke').mean(['bmi','avg_glucose_level']).plot(kind='bar')","f4292a48":"data.drop('bmi',axis=1, inplace=True)","352d0654":"data.columns","f13843e2":"data['gender'].value_counts()","94d4e014":"data[data['gender'] == 'Other']","cf113376":"data['gender'].replace('Other','Female',inplace=True)","568fdf74":"data['gender'].value_counts()","6c7e065f":"data['ever_married'].value_counts()","cb9947b7":"data['work_type'].value_counts()","e15bea7b":"data['smoking_status'].value_counts()","e49b7290":"data['smoking_status'].value_counts(normalize=True)","d168fa3b":"data.drop('smoking_status',axis=1,inplace=True)","c06a193b":"data.columns","ca4b6f80":"data['hypertension'].value_counts()","60df28c0":"data.dtypes","6deb1ad4":"data = pd.get_dummies(data)","b7ee3b55":"data.head()","59adeef5":"data.shape","d95c5671":"X = data.drop('stroke',axis=1)\nY = data['stroke']","5ede781e":"X","2762be35":"Y","7aaf04fd":"X.shape","d17681ee":"Y.shape","d5fb41e3":"X_train, X_test, y_train, y_test = train_test_split(X,Y, test_size=0.3)","a1848b07":"X_train.shape","cef5cd5c":"y_train.shape","261ea42a":"X_test.shape","51618925":"y_test.shape","5a35ec5e":"svm = svm.SVC(gamma='auto',C=10,kernel='linear')\nsvm = svm.fit(X_train,y_train)\nac_svm = accuracy_score(y_test,svm.predict(X_test))\nprint('Accuracy is: ',round(ac_svm*100), ' %')\ncm_svm = confusion_matrix(y_test,svm.predict(X_test))\nsns.heatmap(cm_svm,annot=True,fmt=\"d\")","f6e1f71a":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators = 100)\nrfc.fit(X_train,y_train)","02b71c56":"RFC_Score = rfc.score(X_test, y_test)\nprint(\"Accuracy obtained by Random Forest Classifier model:\",round(RFC_Score*100), '%')","ce1174ac":"rfc_conf = confusion_matrix(y_test,rfc.predict(X_test))\nsns.heatmap(rfc_conf,annot=True,fmt=\"d\")","c1c5aa30":"# Random Forest Classier","41d0f915":"##### As bmi has less number of missing values we will not drop the column, rather we will fill the missing values with its mean values","0616fc4a":"Here, smoking status as Unknown have taken a large percentage of total column. So, we can drop the smoking_status column","23a5768c":"# Handle the categorical variables","2207790e":"#### again check for missing values","8e37df66":"# Exploratotry Data Analysis","f0386f3c":"## Ever married column","edfabf29":"# Import libararies","1c1b3039":"![robina-weermeijer-z8_-Fmfz06c-unsplash.jpg](attachment:386f0e9e-03c0-4382-98bf-a78a2c43a05a.jpg)","4ec47f21":"# Determine training and Testing data","93365d67":"### checking bmi and avg glucose level with respect to stroke","0e185ca1":"![joshua-hoehne-Nsaqv7v2V7Q-unsplash (1).jpg](attachment:9fa01a2b-7f4d-4751-aaba-9ad6fb338cbc.jpg)","5dcb0fda":"# Explore categorical features","cc671c7b":"#### here we can see average glucose level plays a significant role for storke. bmi stays about the same for both categories. we can drop the bmi column as it does not plays a huge role for predicting stroke","d9b2d253":"Here, we can see normally people who are aged above 40 years age normally have more number of stroke ","321c970d":"There is an other gender on the data. We can replace it with female gender","d1c09a3c":"## Work Type column","8985abcf":"### See the relationship between age and stroke","f3ccb7ba":"### gender column","09f2a3d7":"## Somking Status Column","cfac4ac4":">According to the World Health Organization (WHO) stroke is the 2nd leading cause of death globally, responsible for approximately 11% of total deaths.This dataset is used to predict whether a patient is likely to get stroke based on the input parameters like gender, age, various diseases, and smoking status. Each row in the data provides relavant information about the patient.","3b6b2bd5":"## see heatmap of missing values","06f358fa":"# import Dataconfusion_matrix","aba834eb":"# Support Vector Machine","af420eb5":"##### all the missing values has been handled"}}