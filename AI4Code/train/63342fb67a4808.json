{"cell_type":{"6905cd13":"code","9b867cee":"code","56198e4d":"code","d6a1943e":"code","f6478b1f":"code","a54820bf":"code","a1e12683":"code","ace4ccf0":"code","70485bcd":"code","fd8697ed":"code","a0097fdc":"code","ad9e8ee0":"markdown","27f4abc3":"markdown","b5934454":"markdown","d2c47177":"markdown","d423a055":"markdown","3584ec3b":"markdown","b711958a":"markdown","881b4e4e":"markdown","248f2aff":"markdown","b0e7b7a5":"markdown","64be780d":"markdown","18871231":"markdown"},"source":{"6905cd13":"\nimport numpy as np \nimport pandas as pd \nimport plotly.graph_objs as go\nfrom plotly.offline import iplot,plot,init_notebook_mode\ninit_notebook_mode(connected = True)\nimport sqlite3 as sq\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set()\n","9b867cee":"conn=sq.connect('\/kaggle\/input\/us-baby-names\/database.sqlite')\n","56198e4d":"pd.read_sql(\"SELECT name FROM sqlite_master WHERE type='table';\",conn)\n","d6a1943e":"df_female=pd.read_sql(\"SELECT COUNT(name) AS Count, year FROM NationalNames WHERE gender='F' AND year BETWEEN 2000 AND 2008 GROUP BY year;\",conn)\ndf_male=pd.read_sql(\"SELECT COUNT(name) AS Count, year FROM NationalNames WHERE gender='M' AND year BETWEEN 2000 AND 2008 GROUP BY year;\",conn)\n\nstep1=go.Bar(x=df_female['Year'],y=df_female['Count'],name='Female',orientation='v',text=df_female['Count'],textposition='auto',marker=dict(color='#FF6361'))\nstep2=go.Bar(x=df_male['Year'],y=df_male['Count'],name='Male',orientation='v',text=df_male['Count'],textposition='auto',marker=dict(color='#003F5C'))\nd=[step1,step2]\nlayout = go.Layout(title ='Female-Male Entries from the years 2000 to 2008',xaxis=dict(tickangle=-25),\n   barmode='group')\nfig = go.Figure(data = d, layout = layout)\niplot(fig)","f6478b1f":"df=pd.read_sql(\"SELECT DISTINCT(name) FROM NationalNames WHERE gender='M' AND year='1998';\",conn)\ndf","a54820bf":"df=pd.read_sql(\"\"\"SELECT name,count FROM NationalNames WHERE year='2013' ORDER BY count DESC;\"\"\",conn)\ndata=go.Bar(x=df['Name'][:10],y=df['Count'][:10],orientation='v',text=df['Count'],textposition='auto',name='Top 10 famous Names in the year 2013',marker=dict(color='#003F5C'))\nlayout=go.Layout(title='Top 10 famous Names in the year 2013',xaxis=dict(tickangle=-25),barmode='group')\nfig=go.Figure(data=data,layout=layout)\niplot(fig)\n","a1e12683":"df=pd.read_sql(\"SELECT count,year,gender FROM NationalNames WHERE name='Noah' GROUP BY year;\",conn)\n#df_female=pd.read_sql(\"SELECT count,year,gender FROM NationalNames WHERE name='Sydney' AND gender='F' GROUP BY year;\",conn)\nfig,ax=plt.subplots()\nfig.set_figwidth(16)\nfig.set_figheight(8)\nax=sns.lineplot(x='Year',y='Count',hue='Gender',data=df)\nax.set_title(\"Usage of the name 'Noah' for male and female\")\nplt.show()","ace4ccf0":"pd.read_sql(\"SELECT UPPER(name) AS Name,LOWER(gender) AS gender FROM NationalNames WHERE name LIKE 'Y%' AND year=1885;\",conn)","70485bcd":"pd.read_sql(\"SELECT name, REPLACE(name,'Sy','Ki')New_Name FROM NationalNames WHERE name='Sydney' LIMIT 5;\",conn)","fd8697ed":"pd.read_sql(\"SELECT name, MIN(count) FROM(SELECT count,name FROM NationalNames WHERE gender='F' AND year=2002 ORDER BY count DESC LIMIT 3);\",conn)","a0097fdc":"pd.read_sql(\"SELECT name,MAX(LENGTH(name))Length,year,count FROM NationalNames WHERE name LIKE 'L%a';\",conn)","ad9e8ee0":"### Fetching the third most used female name in the year 2002","27f4abc3":"### Replacing the names Sydeny with Kidney","b5934454":"### Connecting to the database","d2c47177":"### Fetching Top 10 famous names in the year 2013","d423a055":"### Printing the longest name starting with letter L and ending with a","3584ec3b":"### Selecting all the distinct male names in the year 1998.","b711958a":"Practicing some SQL commands and also performing some analysis through this notebook on the US Baby Names database.\nAny kind of feedback is appreciated. Thank you :)","881b4e4e":"### Counting and Plotting Male and Female entries in the NationalNames table from the year 2000-2008","248f2aff":"### Plotting the usage of the name 'Noah' for male and female from 1880 to 2000","b0e7b7a5":"### Importing all the libraries","64be780d":"### Fetching names of the tables in the database","18871231":"### Converting Names Starting with Y to Upper Case and Gender to Lower Case"}}