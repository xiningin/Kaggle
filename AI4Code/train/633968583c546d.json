{"cell_type":{"8c39a9f7":"code","36a8d2ab":"code","45265633":"code","257882f2":"code","b032d11a":"code","d9a77a9d":"code","a0cf7449":"code","2f1d3cb5":"code","0cd50e60":"code","3aaf37d8":"code","85078117":"code","ec889587":"code","25b652d6":"code","89f8350c":"code","f4f5eb6e":"code","2fbdd403":"code","201cd2b3":"code","4b629bdc":"code","499151db":"markdown","932826ff":"markdown","d0703dfc":"markdown","7018d831":"markdown","3466d0e4":"markdown","e6c3c3d1":"markdown","494c68ef":"markdown","afa05734":"markdown","c5740631":"markdown","dd9957fa":"markdown","6e2cbfc7":"markdown","6dd6a8b9":"markdown","db221ab1":"markdown"},"source":{"8c39a9f7":"# https:\/\/www.kaggle.com\/biphili\/university-admission-in-era-of-nano-degrees\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","36a8d2ab":"dataset = pd.read_csv(\"\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")","45265633":"dataset.head()","257882f2":"dataset.drop(['Serial No.'], axis=1,  inplace=True)","b032d11a":"column_names = {'GRE Score': 'gre_score', 'TOEFL Score': 'toefl_score', 'University Rating': 'university_rating', \\\n                'SOP': 'sop', 'LOR': 'lor', 'CGPA': 'cgpa',\\\n                'Research': 'research', 'Chance of Admit ': 'chance_of_admit'}","d9a77a9d":"dataset = dataset.rename(columns = column_names)\ndataset.head()","a0cf7449":"dataset.tail()","2f1d3cb5":"dataset.shape","0cd50e60":"dataset.dtypes","3aaf37d8":"for data in dataset.columns:\n    print(data)\n    print(dataset[data].unique())\n    print(\"=\"*80)","85078117":"dataset.describe()","ec889587":"dataset.isnull().any()","25b652d6":"plt.subplots(figsize=(10, 5))\nsns.heatmap(dataset.corr(), cmap=\"YlGnBu\", annot=True, fmt= '.0%')\nplt.show()","89f8350c":"plt.subplots(figsize=(10, 5))\ndataset.corr().loc['chance_of_admit'].sort_values(ascending=False).plot(kind='bar')","f4f5eb6e":"sns.pairplot(dataset, corner=True, diag_kind=\"kde\")","2fbdd403":"print(f\"{dataset['research'].value_counts()\/len(dataset)}\")\nprint(\"=\"*80)\nsns.countplot(dataset['research'])","201cd2b3":"sns.scatterplot(y=\"cgpa\", x=\"gre_score\", hue=\"university_rating\", data=dataset)","4b629bdc":"sns.scatterplot(y=\"cgpa\", x=\"gre_score\", hue=\"research\", data=dataset)","499151db":"#### Size of dataset","932826ff":"#### Reviewing 1st five data in the dataset","d0703dfc":"#### How important is Research to get an Admission?","7018d831":"#### Reviewing last five data in the dataset","3466d0e4":"#### Checking for any null value in dataset","e6c3c3d1":"#### Removig Serial No. column bcoz its not adding any value to datatset. ","494c68ef":"#### Ploting correlation bar graph based on target variable in ascending order. ","afa05734":"#### Five point summury of dataset","c5740631":"#### CGPA vs GRE Score Analysis","dd9957fa":"#### Changing column names","6e2cbfc7":"## Knowing the dataset","6dd6a8b9":"## Model building\n#### Create the x and y variable for linear regression problem solving\n#### Import the standard scaler library and scale the x data\n#### Import the train test split function frm sklearn and create train and test variable with 30% hold out dataset\n#### Initialize and fit the linear regression\n#### Predict the values from tet dataset\n#### Plot the predicated and relevent actual values\n#### Create a hitogram of residuals\n#### What is R^2 value and what is the interpretation of it\n#### Create a small dataset with column and their respective coefficient values\n#### Create a datset with predication, target, and residual","db221ab1":"#### Ploting histogram on dataset"}}