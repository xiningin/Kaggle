{"cell_type":{"a307f161":"code","609223c2":"code","a21500f5":"code","8dd5643a":"code","d745899d":"code","30ffb777":"code","761f343c":"code","d3aa827a":"code","2952281b":"code","abeed1ae":"code","e3e5a531":"code","161e1d09":"code","97717444":"code","433ce4dc":"code","e1c914bc":"code","2a80f8fa":"code","8e588bf9":"code","f398ced5":"code","2f5db23f":"code","7e88c24d":"code","2f95f6b2":"code","d69c4c9f":"code","e24b490d":"code","32d0a27f":"code","e9547bb3":"code","94593570":"code","99298bd3":"code","2f8c3bf6":"code","51d0fd46":"code","d8c00c27":"code","9739e3ca":"code","0d30ac66":"code","7fc4f396":"code","2dbb4889":"code","106acc8a":"code","7efcc8da":"code","8e9e5834":"code","9a3744c2":"code","c676c40d":"code","3666782e":"code","9d6e7e12":"code","67c9c20e":"code","60111dd1":"code","afc6771c":"code","f5158dfa":"code","ea05c63e":"code","8908db56":"code","646d1410":"code","588af607":"code","6cbbdcd6":"code","930e9130":"code","768afe46":"code","5be6ea0f":"code","d56b2543":"code","ca1e336f":"code","f9ad29da":"code","ba1570f3":"code","e75da639":"code","ac56cf7d":"code","b7c6f4f5":"code","653726f8":"code","20f13ac2":"code","b30f558c":"code","2eeaee53":"code","1c1c4408":"code","b099a147":"code","aa43b53d":"code","0566169b":"code","de402e3d":"code","3a543d51":"code","f61d02ff":"code","3dd938c9":"code","30e28ef6":"code","7ca75508":"code","c4ccd456":"markdown","f06c3cdd":"markdown","cd12d6ec":"markdown","09b3e146":"markdown","05ff60be":"markdown","28810855":"markdown","c97a440e":"markdown","d307596a":"markdown","d084b801":"markdown","abb1e3b3":"markdown","b718fa3d":"markdown","e43744c4":"markdown","842bdc9d":"markdown","4630e40d":"markdown","a78c0cb2":"markdown","b189bb7b":"markdown","645c664a":"markdown","f7fae69e":"markdown","564fb393":"markdown","b98fc89a":"markdown","ff8813a2":"markdown"},"source":{"a307f161":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport pydot\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom tensorflow import keras\nfrom keras import layers\nfrom keras import models\nfrom sklearn.preprocessing import LabelEncoder\nfrom keras import regularizers\nfrom keras.metrics import mean_squared_logarithmic_error\nfrom sklearn.model_selection import KFold\nfrom keras import optimizers\nfrom sklearn.preprocessing import normalize\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Activation\nfrom keras.optimizers import SGD\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","609223c2":"df = pd.read_csv('..\/input\/houseprices\/HousePrice.csv')","a21500f5":"df.head()","8dd5643a":"df.shape","d745899d":"df.describe()","30ffb777":"sns.jointplot(x='n_hot_rooms', y='price', data=df)","761f343c":"sns.jointplot(x='rainfall', y='price', data=df)","d3aa827a":"df.head(5)","2952281b":"sns.countplot(x='airport', data=df)","abeed1ae":"sns.countplot(x='waterbody', data=df)","e3e5a531":"sns.countplot(x='bus_ter', data=df)","161e1d09":"df.info()","97717444":"np.percentile(df.n_hot_rooms,[99])","433ce4dc":"np.percentile(df.n_hot_rooms,[99])[0]","e1c914bc":"nv = np.percentile(df.n_hot_rooms,[99])[0]","2a80f8fa":"df[(df.n_hot_rooms > nv)]","8e588bf9":"df.n_hot_rooms[(df.n_hot_rooms > 3 * nv)] = 3 * nv","f398ced5":"df[(df.n_hot_rooms > nv)]","2f5db23f":"np.percentile(df.rainfall,[1])[0]","7e88c24d":"lv = np.percentile(df.rainfall,[1])[0]","2f95f6b2":"df[(df.rainfall < lv)]","d69c4c9f":"df.rainfall[(df.rainfall < 0.3 * lv)] = 0.3 * lv","e24b490d":"df[(df.rainfall < lv)]","32d0a27f":"#sns.jointplot(x=\"crime_rate\", y=\"price\", data=df)","e9547bb3":"df.info()","94593570":"#Impute Missing values for 1 columns\ndf.n_hos_beds = df.n_hos_beds.fillna(df.n_hos_beds.mean())\n# For all columns : df = df.fillna(df.mean())","99298bd3":"df.info()","2f8c3bf6":"df.head()","51d0fd46":"df['avg_dist'] = (df.dist1 + df.dist2 + df.dist3 + df.dist4) \/ 4","d8c00c27":"df.describe()","9739e3ca":"del df['dist1']","0d30ac66":"del df['dist2']","7fc4f396":"del df['dist3']","2dbb4889":"del df['dist4']","106acc8a":"df.head()","7efcc8da":"del df['bus_ter']","8e9e5834":"df.head()","9a3744c2":"df = pd.get_dummies(df)","c676c40d":"df.head()","3666782e":"del df['airport_NO']","9d6e7e12":"del df['waterbody_None']","67c9c20e":"df.head()","60111dd1":"df.corr()","afc6771c":"del df['parks']","f5158dfa":"df.head()","ea05c63e":"import statsmodels.api as sn","8908db56":"X = sn.add_constant(df['room_num'])","646d1410":"lin_model = sn.OLS(df['price'], X).fit()","588af607":"lin_model.summary()","6cbbdcd6":"y = df['price']","930e9130":"X = df[['room_num']]","768afe46":"lin_model2 = LinearRegression()","5be6ea0f":"# Fit the Model\nlin_model2.fit(X,y)","d56b2543":"print(lin_model2.intercept_, lin_model2.coef_)","ca1e336f":"#help(lin_model2)","f9ad29da":"# Make the Price Prediction\nlin_model2.predict(X)","ba1570f3":"pricepredic = lin_model2.predict(X)\nSubmission = pd.DataFrame({\"Predicted Price\" : pricepredic}).to_csv(\"submission_SLR.csv\")","e75da639":"submission = pd.read_csv('submission_SLR.csv', index_col=0)\nsubmission.head(15)","ac56cf7d":"# plot de prediction \nsns.jointplot(x = df['room_num'], y = df['price'], data = df, kind = \"reg\")","b7c6f4f5":"df.head()","653726f8":"X_multi = df.drop(\"price\", axis = 1)","20f13ac2":"X_multi.head(2)","b30f558c":"y_multi = df['price']","2eeaee53":"y_multi","1c1c4408":"X_multi_cons = sn.add_constant(X_multi)","b099a147":"X_multi_cons.head()","aa43b53d":"# Create Model\nlm_multi = sn.OLS(y_multi, X_multi_cons).fit()","0566169b":"lm_multi.summary()","de402e3d":"lin_model3 = LinearRegression()","3a543d51":"lin_model3.fit(X_multi, y_multi)","f61d02ff":"print(lin_model3.intercept_, lin_model3.coef_)","3dd938c9":"lin_model3.predict(X_multi)","30e28ef6":"pricepredic2 = lin_model3.predict(X_multi)\nSubmission2 = pd.DataFrame({\"Predicted Price\" : pricepredic}).to_csv(\"submission_MLR.csv\")","7ca75508":"submission2 = pd.read_csv('submission_MLR.csv', index_col=0)\nsubmission.head(15)","c4ccd456":"Thanks.","f06c3cdd":"We are going to create dummy variable for categorical variables","cd12d6ec":"We have 3 Categorical variables : airport, Waterbody and bus terminal","09b3e146":"We have missing values in n_hos_beds variable","05ff60be":"Create a variable for dist1, dist2, dist3 and dist4","28810855":"Now we can delete the variable dist1, dist2, dist3 and dist4","c97a440e":"Observations :\n1. Missing Values in n_hos_beds\n2. Skewness or outliers on crime rate\n3. Outliers in n_hot_rooms and rainfall\n4. Bus_ter has only 'YES' values","d307596a":"2.2. Missing values Imputation","d084b801":"We got all the values of n_hot_rooms greater than percentile value.\n\nreplace the value of 101.12 and 81.12 by values close to 15.399519999999","abb1e3b3":"2.1. Outlier Treatment","b718fa3d":"2.5. Correlation Analysis","e43744c4":"2.4. Dummy variable creation","842bdc9d":"# 4. Multiple Linear Regression","4630e40d":"# 2. Extended Data Dictionary on the Data","a78c0cb2":"Identifying Categorical Variables","b189bb7b":"# 1. Loading the Dataset","645c664a":"Let's plot the distribution of rainfall and the price","f7fae69e":"2.3. Variable Transformation and deletion","564fb393":"Le's plot the distribution of Hot Room and the price","b98fc89a":"# 3. Simple Linear Regression","ff8813a2":"Delete the variable with the high negative correlation with price"}}