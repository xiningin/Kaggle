{"cell_type":{"83d347f4":"code","4358ea07":"code","33276c31":"code","f375b530":"code","813575be":"code","6456b052":"code","53aeb92b":"code","b2168d25":"code","1c713ef7":"code","d35dcf61":"code","75a2b442":"code","f73baeb1":"code","5c2a925d":"code","8f7d52ea":"code","f870e0f6":"code","ebd65a26":"code","490f8ea6":"code","21c9715a":"markdown","ca9c6b2c":"markdown","f21ee6ec":"markdown","6ff248db":"markdown","68f1bfb7":"markdown","0cc2cdd1":"markdown","f525c649":"markdown","9338c9c6":"markdown","3fe2259e":"markdown","684db92d":"markdown","cbad6775":"markdown","8ead794c":"markdown","0d235451":"markdown"},"source":{"83d347f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nprint('Ready.')","4358ea07":"SIZE = 100\nx = np.array(list(range(SIZE)))\ny = x * 2 + 100 * np.random.random((SIZE,))\nz = x * 3 + 200 * np.random.random((SIZE,))\nrand1 = np.where(np.random.random((SIZE,)) > 0.5, 1 ,0)\nrand2 = np.where(np.random.random((SIZE,)) > 0.5, 1 ,0)\ndata = pd.DataFrame({'y':y, 'z':z, 'random':rand1, 'random2':rand2}, index=x)","33276c31":"plt.figure(figsize=(10,6))\nsns.lineplot(data=data)","f375b530":"plt.figure(figsize=(10,6))\nsns.lineplot(x=data.index, y='random', data=data)","813575be":"plt.figure(figsize=(10,6))\nsns.barplot(x='y', y='z', data=data)\n# sns.barplot(x=data['y'], y=data['z'])","6456b052":"plt.figure(figsize=(10,6))\nsns.heatmap(data=data)","53aeb92b":"plt.figure(figsize=(10,6))\nsns.scatterplot(x='y', y='z', data=data)","b2168d25":"plt.figure(figsize=(10,6))\nsns.scatterplot(x='y', y='z', hue='random', data=data)","1c713ef7":"plt.figure(figsize=(10,6))\nsns.regplot(x='y', y='z', data=data)","d35dcf61":"plt.figure(figsize=(10,6))\nsns.lmplot(x='y', y='z', hue='random', data=data)","75a2b442":"plt.figure(figsize=(10,6))\nsns.swarmplot(x='random', y='z', data=data)","f73baeb1":"plt.figure(figsize=(10,6))\nsns.distplot(data['y'], kde=True)","5c2a925d":"plt.figure(figsize=(10,6))\nsns.kdeplot(data['y'], shade=True)","8f7d52ea":"plt.figure(figsize=(10,6))\nsns.jointplot(x='y', y='z', data=data, kind='kde')","f870e0f6":"plt.figure(figsize=(10,6))\n\nsns.distplot(data['y'], kde=True, label='y')\nsns.distplot(data['z'], kde=True, label='z')\n\n# Add title\nplt.title(\"Histogram\")\n\n# Force legend to appear\nplt.legend()","ebd65a26":"plt.figure(figsize=(10,6))\nstyle = ['darkgrid', 'whitegrid', 'dark', 'white', 'ticks']\nsns.set_style(style[0])\nsns.lineplot(data=data)","490f8ea6":"plt.figure(figsize=(10,6))\nsns.countplot(x='random', hue='random2', data=data)","21c9715a":"\n## Trends\nA trend is defined as a pattern of change.\n- sns.lineplot - Line charts are best to show trends over a period of time, and multiple lines can be used to show trends in more than one group.\n***\n## Relationship\nThere are many different chart types that you can use to understand relationships between variables in your data.\n- sns.barplot - Bar charts are useful for comparing quantities corresponding to different groups.\n- sns.heatmap - Heatmaps can be used to find color-coded patterns in tables of numbers.\n- sns.scatterplot - Scatter plots show the relationship between two continuous variables; if color-coded, we can also show the relationship with a third categorical variable.\n- sns.regplot - Including a regression line in the scatter plot makes it easier to see any linear relationship between two variables.\n- sns.lmplot - This command is useful for drawing multiple regression lines, if the scatter plot contains multiple, color-coded groups.\n- sns.swarmplot - Categorical scatter plots show the relationship between a continuous variable and a categorical variable.\n***\n## Distribution\nWe visualize distributions to show the possible values that we can expect to see in a variable, along with how likely they are.\n- sns.distplot - Histograms show the distribution of a single numerical variable.\n- sns.kdeplot - KDE plots (or 2D KDE plots) show an estimated, smooth distribution of a single numerical variable (or two numerical variables).\n- sns.jointplot - This command is useful for simultaneously displaying a 2D KDE plot with the corresponding KDE plots for each individual variable.","ca9c6b2c":"# Others\n\u4f7f\u3044\u305d\u3046\u306a\u3082\u306e\u307e\u3068\u3081\n## sns.countplot","f21ee6ec":"# Distribution\n## sns.distplot\nhistogram","6ff248db":"## sns.jointplot\n2-D KDE plot","68f1bfb7":"## sns.heatmap","0cc2cdd1":"## sns.regplot","f525c649":"# scatterplot\n## sns.scatterplot\nhttps:\/\/seaborn.pydata.org\/generated\/seaborn.scatterplot.html","9338c9c6":"## sns.lmplot","3fe2259e":"# barplot and heatmap\n## sns.barplot","684db92d":"## sns.swarmplot\n\u7bb1\u3072\u3052\u56f3\u306e\u3088\u3046\u306a\u3082\u306e\n\n\nhttps:\/\/seaborn.pydata.org\/generated\/seaborn.swarmplot.html","cbad6775":"## sns.kdeplot\nsmooth histogram","8ead794c":"# lineplot\n## sns.lineplot\n### \u4f7f\u3044\u65b9(\u4ed6\u306eplot\u3082\u5171\u901a)\n```\nsns.lineplot(data=data)\nsns.lineplot(x=data['x'], y=data['y'])\nsns.lineplot(x='x', y='y', data=data)\n```","0d235451":"# Theme\n(1)\"darkgrid\", (2)\"whitegrid\", (3)\"dark\", (4)\"white\", and (5)\"ticks\""}}