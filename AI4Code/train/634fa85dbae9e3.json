{"cell_type":{"35ffe4c7":"code","8100afd2":"code","15cb9ce3":"code","483c89fc":"code","73ecd1d0":"code","94effa3b":"code","4b5ae4ee":"code","7cf50015":"code","61fba688":"code","2726c558":"code","bddf506a":"code","c0b8e5c6":"code","9077bc5d":"code","0dfcd315":"code","835afade":"code","e75ad433":"code","4be96be5":"code","02094181":"code","09fd540b":"code","61c7ba75":"code","77d96169":"code","68f19f47":"code","d488dcc2":"code","f6dd3217":"code","a18747a0":"markdown","981f02c9":"markdown","b8f8a9d6":"markdown","9f6f8748":"markdown","03fde731":"markdown"},"source":{"35ffe4c7":"!pip install fastai2>=0.0.11 graphviz ipywidgets matplotlib nbdev>=0.2.12 pandas scikit_learn azure-cognitiveservices-search-imagesearch sentencepiece","8100afd2":"!pip install --upgrade fastprogress","15cb9ce3":"from fastai2.vision.all import *\nfrom sklearn.metrics import roc_auc_score","483c89fc":"data_path = Path(\"..\/input\/plant-pathology-2020-fgvc7\/\")","73ecd1d0":"df = pd.read_csv(data_path\/\"train.csv\")","94effa3b":"df.head()","4b5ae4ee":"df.iloc[:, 1:].sum(axis=1).value_counts()","7cf50015":"imglabels = list(df.columns[1:])","61fba688":"df[\"labels\"] = df.apply(lambda x: imglabels[x.values[1:].argmax()], axis=1)","2726c558":"df.head()","bddf506a":"dls = ImageDataLoaders.from_df(df,\n                               path=data_path, \n                               suff=\".jpg\", \n                               folder=\"images\",\n                               label_col=\"labels\",\n                               item_tfms=RandomResizedCrop(512, min_scale=0.5), # note that we use a bigger image size\n                               batch_tfms=aug_transforms(),\n                               valid_pct=0.05,\n                               bs=16,\n                               val_bs=16\n                               )","c0b8e5c6":"dls.show_batch()","9077bc5d":"def mean_roc_auc(preds, targets, num_cols=4):\n    \"\"\"The competition metric\n    \n    Quoting: 'Submissions are evaluated on mean column-wise ROC AUC. \n    In other words, the score is the average of the individual AUCs \n    of each predicted column. '\n    \n    Unfortunately, we cannot use in validation, as it can happen that\n    all files in a batch has the same label, and ROC is undefined\n    \"\"\"\n    aucs = []\n    preds = preds.detach().cpu().numpy()\n    targets = targets.detach().cpu().numpy()\n    \n    for i in range(num_cols):\n        # grab a column from the networks output\n        cpreds = preds[:, i]\n        # see which objects have the i-th label\n        ctargets = [x == i for x in targets]\n        aucs.append(roc_auc_score(ctargets, cpreds))\n    return sum(aucs) \/ num_cols","0dfcd315":"learn = cnn_learner(dls, resnet50, metrics=[accuracy], model_dir=\"\/kaggle\/working\")","835afade":"learn.lr_find()","e75ad433":"learn.fit(4, lr=1e-3)","4be96be5":"learn.unfreeze()","02094181":"learn.lr_find()","09fd540b":"learn.save(\"model\")","61c7ba75":"learn.fit_one_cycle(16, lr_max=slice(1e-6,1e-5), cbs=[SaveModelCallback(every='epoch', monitor=\"accuracy\")])","77d96169":"learn.load(\"model\")","68f19f47":"test_image_ids = [img.split(\".\")[0] for img in os.listdir(data_path\/\"images\") if img.startswith(\"Test\")]\ntest_images = [data_path\/\"images\"\/f\"{img}.jpg\" for img in test_image_ids]\npreds = learn.get_preds(dl=dls.test_dl(test_images, shuffle=False, drop_last=False))","d488dcc2":"# ensure that the order of columns in preds matches the imglabels\npreds = preds[0].cpu().numpy()\nvocab = list(dls[0].dataset.vocab)\ncolumn_permutation = [vocab.index(l) for l in imglabels]\npreds = preds[:, column_permutation]\n\nsubmission = pd.DataFrame()\nsubmission[\"image_id\"] = test_image_ids\nfor i in range(len(imglabels)):\n    submission[imglabels[i]] = preds[:, i]\nsubmission.to_csv(\"submission.csv\", index=False)","f6dd3217":"submission.head(10)","a18747a0":"Aaand prediction time!","981f02c9":"A funny thing is that it is single-label classification task, not a multi-label, which can be checked like this:","b8f8a9d6":"We now know a bit more about setting a correct learning rate, so let's do it by finding a good LR with the learning rate finder technique.","9f6f8748":"Great. Now let's unfreeze the lower layers and look at the suggested LR again.","03fde731":"# fastai v2 example\n\nHow far does one lecture of fastai takes you? Or two? This notebook will be improved with some new stuff as lectures go on."}}