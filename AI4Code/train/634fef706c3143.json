{"cell_type":{"96ab23a3":"code","1b4865c7":"code","5eb98b92":"code","62ed4537":"code","76318505":"code","08e30cf6":"code","f1945965":"code","d754e2df":"code","e2f758c1":"code","9fa4c1f2":"code","ac8a187d":"code","3d490187":"code","8cfe1bb5":"code","5a86e131":"code","a21de347":"code","cce55fc0":"code","bf39df6d":"code","fa733e7e":"code","641cb274":"code","e2cac6eb":"code","1c36cec1":"code","09efbda9":"code","7797a961":"code","0389305c":"markdown","8f236f25":"markdown","eab88599":"markdown","5f93b5a7":"markdown","d9cc1c12":"markdown","cdd27751":"markdown","89396e54":"markdown","4d30b6b1":"markdown","3a6ee11b":"markdown","c39e3618":"markdown","51957647":"markdown","fd02eb4c":"markdown","016230c5":"markdown","e05c8e6c":"markdown","400de624":"markdown","1e53dfa5":"markdown"},"source":{"96ab23a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt # matplotlib for plotting charts\nimport seaborn as sns # seaborn for plotting charts\nimport re # regular expression\nfrom wordcloud import WordCloud, STOPWORDS # word clouds\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1b4865c7":"#Leitura da lista\nlistdf1 = pd.read_csv('\/kaggle\/input\/airbnbpb\/listings.csv')\n\n#Leitura das reviews\nreviewdf1 = pd.read_csv('\/kaggle\/input\/airbnbpb\/reviews.csv')\n\n#Leitura do calend\u00e1rio\ncalendardf1 = pd.read_csv('\/kaggle\/input\/airbnbpb\/calendar.csv')\n\n#prahadf1 = pd.merge(listdf1, calendardf1, left_on=['id','last_scraped'], right_on=['listing_id','date'], how='left')\nprahadf1 = listdf1\nprint('Li os dados dos arquivos relativos \u00e0 Praga e mesclei a lista de an\u00fancios com a planilha calend\u00e1rio')\nprint('O dataframe com os dados de Praga possui {} linhas e {} colunas, que representam {} atributos.'.format(prahadf1.shape[0], prahadf1.shape[1], prahadf1.shape[1]-1))\nprint()\nprint('A partir do resumo abaixo, observa-se que algumas colunas t\u00eam valores nulos.')\nprint(prahadf1.info())\ncolnulas = [c for c in prahadf1.columns if prahadf1[c].isna().all()]\nprint()\nprint()\nprint('Inclusive, algumas delas somente tem valores nulos. S\u00e3o elas: {}'.format(colnulas))\nprint('Haja vista que elas n\u00e3o possuem nenhuma informa\u00e7\u00e3o sobre os dados, ser\u00e3o desconsideradas na an\u00e1lise.')\n\n# Retirar colunas com urls\ncol_urls = ['listing_url', 'picture_url', 'host_url', 'host_thumbnail_url', 'host_picture_url']\ncolretiradas = colnulas + col_urls\nprahadf2 = prahadf1.drop(columns=colretiradas)\n\nprint('Contem dados de {} at\u00e9 {}.'.format(min(prahadf2.last_scraped),max(prahadf2.last_scraped)))\nprint('Dessa forma,mesmo com um conjunto de dados significativo, essa an\u00e1lise explorat\u00f3ria ser\u00e1 feita com base na amostra usada.')\nprint('Para facilitar, ao inv\u00e9s de usar amostra de an\u00fancios, vou me referir simplesmente aos an\u00fancios, por\u00e9m sem pretens\u00e3o de generalizar os resultados e conclus\u00f5es dessa an\u00e1lise para os an\u00fancios do AirBnB de Praga em geral.')\n#print(prahadf2.info())\n#print(prahadf2.duplicated().sum())\n#print(prahadf2.host_response_time[:10])","5eb98b92":"#Verifica\u00e7\u00e3o dos dados de cada coluna\nprint('Classifica\u00e7\u00e3o do host_response_time:')\nprint(prahadf2.host_response_time.unique())\nprint()\nprint('Observa-se que as colunas \"host_acceptance_rate\" e \"host_response_rate\" apresentam strings que na verdade s\u00e3o valores percentuais.')\nresp_rate_na = prahadf2.host_response_rate.isna().sum() \/ prahadf2.shape[0] * 100\naccep_rate_na = prahadf2.host_acceptance_rate.isna().sum() \/ prahadf2.shape[0] * 100\nprint('Por\u00e9m, observa-se tamb\u00e9m que {:.1f}% dos dados de response rate est\u00e3o faltando.'.format(resp_rate_na))\nprint('Da mesma forma, {:.1f}% dos dados de acceptance rate est\u00e3o faltando.'.format(accep_rate_na))\n#print(prahadf2.host_acceptance_rate.unique())\n#print(prahadf2.host_acceptance_rate.isna().sum())\nprint()\nprint('Classifica\u00e7\u00e3o do host_is_superhost:')\nprint(prahadf2.host_is_superhost.unique())\nprint()\nprint('As colunas de vizinhan\u00e7a do apartamento s\u00e3o bastante importantes.')\n#print(prahadf2.host_neighbourhood.unique())\nprint(prahadf2.neighbourhood_cleansed.unique())\nprint()\n#print(prahadf2.property_type.unique())\nprint('A coluna de room type possui somente {} tipos, mas \u00e9 um indicador mais \u00fatil em uma primeira an\u00e1lise do que property_type.'.format(prahadf2.room_type.nunique()))\nprint('S\u00e3o eles:')\nprint(prahadf2.room_type.unique())\nprint()\nprint('A coluna accommodates deveria ser num\u00e9rica, pois representa o n\u00famero de pessoas que a casa acomoda.')\n#print(prahadf2.accommodates.unique())\nprahadf2.accommodates = prahadf2.accommodates.astype('float')\n#print(prahadf2.bathrooms_text.unique())\nprint()\nprint('Tamb\u00e9m \u00e9 necess\u00e1rio converter os pre\u00e7os para valor num\u00e9rico.')\nprahadf2.price = prahadf2.price.replace('[$,.]','', regex=True).astype('float')\n#print(prahadf2.amenities.unique())\n#print(prahadf2.host_listings_count[:10])\nprint('Nas colunas de n\u00famero de noites considerar somente o m\u00ednimo e o m\u00e1ximo de noites. N\u00e3o est\u00e1 claro se as demais colunas ser\u00e3o necess\u00e1rias.')\nprint()\nprint('Classifica\u00e7\u00e3o da coluna has_availability:')\nprint(prahadf2.has_availability.unique())","62ed4537":"#Verificando o numero de registros distintos por coluna\ndistintos = prahadf2.nunique(axis=0)\nregunico = distintos[distintos == 1].index\n\n# Retirando colunas que so apresentam um valor\nprahadf3 = prahadf2.drop(columns=regunico)\nprint(prahadf3.info())","76318505":"print('Conforme j\u00e1 mencionado existem colunas com dados faltantes, entre as quais \"host_response_rate\" e \"host_acceptance_rate\", com elevado n\u00famero de dados faltantes.')\nprint('A coluna neighborhood_overview tamb\u00e9m possui {} dados faltantes.'.format(prahadf3.neighborhood_overview.isna().sum()))\np_neigh_missing = prahadf3.neighborhood_overview.isna().sum() \/ prahadf3.shape[0] * 100\nprint('Nesse caso cerca de {:.0f}% dos dados n\u00e3o foram informados.'.format(p_neigh_missing))\nprint('Imputar esse tipo de dado requer que sejam encontrados dados similares, o que extrapola esse exerc\u00edcio.')\nprint('Com rela\u00e7\u00e3o aos dados de \"host_neighbourhood\", existem dados faltantes, mas como eles n\u00e3o est\u00e3o relacionados \u00e0 vizinhan\u00e7a do im\u00f3vel, mas do locador, n\u00e3o parecem ser importantes.')\nprint('Outro dado faltante \u00e9 \"neighbourhood\", mas esse dado pode ser convenientemente substitu\u00eddo pela coluna \"neighbourhood_cleansed\", que a princ\u00edpio parece ser mais importante para a an\u00e1lise.')\nprint('Os dados de \"bedrooms\" tamb\u00e9m est\u00e3o faltando e esses dados podem ser \u00fateis e, at\u00e9, necess\u00e1rios para estimativas.')\nprint('Para o n\u00famero de quartos algumas estrat\u00e9gias para imputar dados s\u00e3o poss\u00edveis, como o uso de knn, para dados muito pr\u00f3ximos em outras dimens\u00f5es. Todavia, como n\u00e3o se identifica necessidade imediata de imputar esses dados, isso n\u00e3o ser\u00e1 feito.')\nprint('Outros dados faltantes se referem \u00e0s colunas de review.')","08e30cf6":"#dat_num = ['host_listings_count', 'host_total_listings_count', 'latitude', 'longitude', 'accommodates', 'bedrooms', 'beds', 'price', 'minimum_nights', 'maximum_nights']\n#d_num_reviews = ['number_of_reviews', 'number_of_reviews_ltm', 'number_of_reviews_l30d', 'review_scores_rating', 'review_scores_accuracy', 'review_scores_cleanliness']\n#praha_num = prahadf3.iloc[:,np.r_[14:16,21:23,25,27:29,30,37:39,44:47,49:56,57:62]]\n#teste = praha_num.iloc[:,:6]\nprint(prahadf3.describe())\nresumo = prahadf3.describe()\nprint()\nprint('Existem dois registro com a vari\u00e1vel host_listings_count que parece outliers. Todavia, por enquanto isso n\u00e3o representa problema.')\nprint('O mesmo ocorre com o atribuito host_total_listing_count')\nout_acc = prahadf3.accommodates > 10\nprint('Tamb\u00e9m se observa que \u00e9 pouco usual que um local consiga acomodar muitas pessoas.')\naccnulo = prahadf3.accommodates == 0\nprint('Ressalte-se que tamb\u00e9m foram encontrados {} registros com capacidade nula de h\u00f3spedes, o que deve ser um erro no an\u00fancio.'.format(accnulo.sum()))\nprint('Somente {:.0f}% dos registros possuem locais com capacidade para dez h\u00f3spedes ou mais.'.format(out_acc.sum()\/prahadf3.shape[0]*100))\nplt.boxplot(prahadf3.accommodates)\nplt.title('Boxplot de n\u00famero de h\u00f3spedes por an\u00fancio')\nplt.show()\nprint()\nprint()\nfiveplusbedrooms = prahadf3.bedrooms > 4\nprint('Somente {:.0f}% dos an\u00fancios tem cinco quartos ou mais.'.format(fiveplusbedrooms.sum()\/prahadf3.shape[0]*100))\nlessthan5 = prahadf3[prahadf3.bedrooms < 5]\nprint()\nplt.boxplot(lessthan5.bedrooms)\nplt.title('N\u00famero de quartos informadas por an\u00fancio')\nplt.show()\nprint()\nlessthan10beds = prahadf3[prahadf3.beds < 10]\nprint('Da mesma, forma deve estar relacionado ao n\u00famero de camas no an\u00fancio.')\nplt.boxplot(lessthan10beds.beds)\nplt.title('N\u00famero de camas informadas por an\u00fancio')\nplt.show()\nprint('Isso tamb\u00e9m pode estar relacionado aos pre\u00e7os. Assim, vamos relacionar observar gr\u00e1ficos de dispers\u00e3o das vari\u00e1veis n\u00famero de h\u00f3spedes, n\u00famero de quartos, n\u00famero de camas e pre\u00e7o.')\nnooutliers = (prahadf3.bedrooms < 5) & (prahadf3.beds < 10) & (prahadf3.price < 1e6)\nnooutliersdf = prahadf3[nooutliers]\nabbp = nooutliersdf[['accommodates','bedrooms','beds','price']]\nsns.pairplot(abbp)\nprint()\nprint('A rela\u00e7\u00e3o entre as vari\u00e1veis n\u00e3o est\u00e1 clara. Imaginava que, n\u00famero de camas e n\u00famero de h\u00f3spedes fossem correlacionados, mas n\u00e3o \u00e9 poss\u00edvel perceber isso visualmente.')\nprint('Mais a frente tentarei quantificar a correla\u00e7\u00e3o entre essas vari\u00e1veis.')","f1945965":"print('As vari\u00e1veis de review contem notas de 1 a 5 e, portanto, n\u00e3o possuem outliers.')\nmorethan9reviews = prahadf3.reviews_per_month > 9\nprint(morethan9reviews.sum())\nlessthan10reviewsdf = prahadf3[prahadf3.reviews_per_month < 10]\nplt.boxplot(lessthan10reviewsdf.reviews_per_month)\nplt.title('N\u00famero de reviews mensais')\nplt.show()\nprint()\nprint('Contudo, existem outliers no n\u00famero de reviews mensais.')\n","d754e2df":"#prahadf3.host_response_time = prahadf3.host_response_time.astype('category')\nprahadf3['host_response_time'].value_counts().plot(kind='barh',title='Frequ\u00eancia do tempo de resposta do anfitri\u00e3o')\nplt.show()\nprint()\nprint('A expressiva maioria dos anfitri\u00f5es respondem em at\u00e9 uma hora.')\n","e2f758c1":"prahadf3.host_is_superhost.value_counts().plot(kind='barh', title='Frequencia de super anfitri\u00e3o')\nplt.show()\nprint('As respostas indicam que cerca de 2000 anfitri\u00f5es s\u00e3o classificados como superfitri\u00f5es, enquanto mais de 4000 mil n\u00e3o o s\u00e3o.')","9fa4c1f2":"print('Existem {} vizinhan\u00e7as na lista de an\u00fancios.'.format(prahadf3.neighbourhood_cleansed.nunique()))\nprint('Para facilitar a leitura do gr\u00e1fico somente ser\u00e3o exibidas localidades com mais de 20 an\u00fancios.')\nanporlocal = prahadf3.neighbourhood_cleansed.value_counts()\nlocaisescolhidos = anporlocal[anporlocal > 20].index\ndflocescolhidos = prahadf3[prahadf3.neighbourhood_cleansed.isin(locaisescolhidos)]\nprint()\ndflocescolhidos.neighbourhood_cleansed.value_counts().plot(kind='barh', title='N\u00famero de an\u00fancios por localidade')\nplt.show()\nprint()\npraha1 = prahadf3[prahadf3.neighbourhood_cleansed == 'Praha 1'].shape[0]\npraha2 = prahadf3[prahadf3.neighbourhood_cleansed == 'Praha 2'].shape[0]\nprint('Nota-se que Praha 1 tem {} an\u00fancios, seguido de Praha 2 com {} an\u00fancios.'.format(praha1, praha2))\nprint('Praha 3, Praha 5, Praha 8, Praha 7, Praha 6, Praha 4 e Praha 10 tamb\u00e9m t\u00eam um n\u00famero relevante de an\u00fancios.')","ac8a187d":"prahadf3.room_type.value_counts().plot(kind='barh', title='N\u00famero de an\u00fancios por tipo de quarto')\nplt.show()\nprint()\nprint('A expressiva maioria dos an\u00fancios \u00e9 para o aluguel do apartamento e\/ou casa inteira.')","3d490187":"prahadf3.accommodates.plot(kind='hist', title='Histograma da capacidade de h\u00f3spedes por an\u00fancio')\nplt.show()\nnozeroacc = prahadf3[prahadf3.accommodates > 0]\nresumo = nozeroacc.accommodates.describe()\nprint()\nprint(resumo)","8cfe1bb5":"lessthan5.bedrooms.plot(kind='hist', bins=4, title = 'Histograma do n\u00famero de quartos de cada an\u00fancio')\nplt.show()\nprint()\nprint(lessthan5.bedrooms.describe())","5a86e131":"lessthan10beds.beds.plot(kind='hist', title = 'Histograma do n\u00famero de camas de cada an\u00fancio')\nplt.show()\nprint()\nprint(lessthan10beds.beds.describe())","a21de347":"pricerev = prahadf3[prahadf3.price < 0.8e6]\npricerev.price.plot(kind='hist', bins=20, title = 'Histograma da di\u00e1ria em coroa tcheca')\nplt.show()\nprint()\nprint(pricerev.price.describe())","cce55fc0":"print('Todas as notas apresentam forte assimetria \u00e0 esquerda com muitos an\u00fancios classificados com notas entre 4 e 5.')\nprint()\nreviewscores = prahadf3[['review_scores_rating','review_scores_accuracy', 'review_scores_checkin', 'review_scores_cleanliness', 'review_scores_communication', 'review_scores_location', 'review_scores_value']].describe()\nreviewscores.columns = ['Geral', 'Acur\u00e1cia', 'Checkin', 'Limpeza', 'Comunica\u00e7\u00e3o', 'Localiza\u00e7\u00e3o', 'Valor']\nprint(reviewscores)\nprint()\nprahadf3.review_scores_rating.plot(kind='hist', title='Notas recebidas pelos an\u00fancios', bins=5)\nplt.show()\nprint()\nprahadf3.review_scores_accuracy.plot(kind='hist', title='Acur\u00e1cia dos an\u00fancios', bins=5)\nplt.show()\nprint()\nprahadf3.review_scores_checkin.plot(kind='hist', title='Nota do checkin', bins=5)\nplt.show()\nprint()\nprahadf3.review_scores_cleanliness.plot(kind='hist', title='Nota da limpeza', bins=5)\nplt.show()\nprint()\nprahadf3.review_scores_communication.plot(kind='hist', title='Nota da comunica\u00e7\u00e3o', bins=5)\nplt.show()\nprint()\nprahadf3.review_scores_location.plot(kind='hist', title='Nota da localiza\u00e7\u00e3o', bins=5)\nplt.show()\nprint()\nprahadf3.review_scores_value.plot(kind='hist', title='Nota de valor (beneficio custo)', bins=5)\nplt.show()","bf39df6d":"print('Retirando os outliers, observa-se que a hospedagem m\u00ednima \u00e9 de 1 ou 2 noites na expressiva maioria dos an\u00fancios.')\nminnights = prahadf3[prahadf3.minimum_nights < 7]\nminnights.minimum_nights.plot(kind='hist',bins=5, title = 'Histograma do m\u00ednimo de noites de hospedagem.')\nplt.show()\nprint()\nmaxnights = prahadf3[prahadf3.maximum_nights < 1460]\nprint('\u00c9 curioso que a expressiva maioria dos an\u00fancios permita um n\u00famero t\u00e3o elevado de noites de hospedagem.')\nprint('Como mais de 50% dos an\u00fancios possuem o mesmo n\u00famero elevados de noite de hospedagens, \u00e9 poss\u00edvel que esse seja o n\u00famero m\u00e1ximo default do aplicativo, quando o anfitri\u00e3o n\u00e3o coloca um n\u00famero m\u00e1ximo de noites de hospedagem.')\nmaxnights.maximum_nights.plot(kind='hist', title = 'Histograma do n\u00famero m\u00e1ximo de noites de hospedagem.')\nplt.show()\nprint(maxnights.maximum_nights.describe())","fa733e7e":"abbp.columns = ['Num de hospedes', 'Num de quartos', 'Num de camas', 'Diaria']\nabbpcorr = abbp.corr()\nprint('Numero de h\u00f3spedes apresentam uma correla\u00e7\u00e3o positiva relativamente forte e positiva com o n\u00famero de quartos e o n\u00famero de camas, mas uma correla\u00e7\u00e3o positiva moderada com as di\u00e1rias.')\nabbpcorr.style.background_gradient(cmap='coolwarm').set_precision(2)","641cb274":"print('Esses resultados s\u00e3o coerentes com os gr\u00e1ficos abaixo, onde n\u00e3o h\u00e1 uma rela\u00e7\u00e3o linear n\u00edtida entre as vari\u00e1veis, por\u00e9m ela parece ser positiva.')\nsns.pairplot(abbp)","e2cac6eb":"print('A di\u00e1ria tem mais rela\u00e7\u00e3o com localiza\u00e7\u00e3o por exemplo, do que propriamente com o n\u00famero de camas de um apartamento.')\nprice = prahadf3[['neighbourhood_cleansed','price']]\nselecao = price[price.neighbourhood_cleansed.isin(locaisescolhidos)]\nselecaodf = selecao[selecao.price < 400000]\nselecaodf.neighbourhood_cleansed = selecaodf.neighbourhood_cleansed.astype('category')\nsns.boxplot(x=selecaodf.price, y=selecaodf.neighbourhood_cleansed, orient='h')\nprint('Verifica-se que Praha 1 apresenta uma diaria mediana e um terceiro quartil maior que as demais vizinhancas, o que se justifica por estar localizada no cora\u00e7\u00e3o da \u00e1rea hist\u00f3rica.')\nprint('Observa-se o mesmo efeito, por\u00e9m de forma menos acentuada em Praha 2.')\nprint('Por outro lado, observa-se que a menor mediana e o menor terceiro quartil est\u00e3o em Praha 4.')","1c36cec1":"print('Haja vista a grande dispers\u00e3o no valor das di\u00e1rias, \u00e9 razo\u00e1vel que os an\u00fancios com valores de di\u00e1rias no primeiro quartil tenham descri\u00e7\u00f5es bastante diferentes de an\u00fancios no \u00faltimo quartil.')\nprint('Ser\u00e1 que \u00e9 poss\u00edvel perceber isso nesse conjunto de an\u00fancios?')\nq3 = np.percentile(prahadf3.price,75)\nq1 = np.percentile(prahadf3.price,25)\nlistingsq4 = prahadf3[prahadf3.price < q1]\nlistingsq1 = prahadf3[prahadf3.price > q3]\ndescq4l = listingsq4.description.tolist()\ndescq4 = ' '.join(map(str,descq4l))\ntextoq4 = re.sub(r'<\\\/*[\\w]+\\s*\\\/*>','', descq4)\nprint()\nprint()\nwordcloud = WordCloud(width= 3000, height = 2000, random_state=1, background_color='black', colormap='Set1', collocations=False, stopwords = STOPWORDS).generate(textoq4)\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud)\nplt.title('Wordcloud de an\u00fancios do quarto quartil de di\u00e1rias')\nplt.axis('off')\nplt.show()\nprint()\nprint()\ndescq1l = listingsq1.description.tolist()\ndescq1 = ' '.join(map(str, descq1l))\ntextoq1 = re.sub(r'<\\\/*[\\w]+\\s*\\\/*>','', descq1)\nwordcloud = WordCloud(width= 3000, height = 2000, random_state=1, background_color='black', colormap='Set1', collocations=False, stopwords = STOPWORDS).generate(textoq1)\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud)\nplt.title('Wordcloud de an\u00fancios do primeiro quartil de di\u00e1rias')\nplt.axis('off')\nplt.show()\nprint()\nprint()\nprint('Embora os wordclouds sejam diferentes, n\u00e3o \u00e9 poss\u00edvel estabelecer diferen\u00e7as entre as descri\u00e7\u00f5es do primeiro e do \u00faltimo quartil no valor das di\u00e1rias.')\nprint('Talvez com um trabalho maior para criar bigramas como \"Old Square\", por exemplo, seria poss\u00edvel estabelecer diferen\u00e7as entre os wordclouds.')","09efbda9":"print('Com rela\u00e7\u00e3o aos reviews, apesar da forte assimetria prejudicar uma an\u00e1lise visual da dispers\u00e3o das avalia\u00e7\u00f5es, observa-se uma correla\u00e7\u00e3o positiva.')\nreviews = prahadf3[['review_scores_rating','review_scores_accuracy', 'review_scores_checkin', 'review_scores_cleanliness', 'review_scores_communication', 'review_scores_location', 'review_scores_value']]\nreviews.columns = ['Geral', 'Acur\u00e1cia', 'Checkin', 'Limpeza', 'Comunica\u00e7\u00e3o', 'Localiza\u00e7\u00e3o', 'Valor']\nsns.pairplot(reviews)","7797a961":"print('Assim, de forma geral, notas altas em um atributo est\u00e3o relacionadas a notas altas em outros atributos, conforme pode ser confirmado pelos coeficientes de correla\u00e7\u00e3o.')\nprint('A nota de localiza\u00e7\u00e3o \u00e9 a \u00fanica que apresenta uma correla\u00e7\u00e3o mais baixa com as demais, por\u00e9m ainda positiva.')\nrevcorr = reviews.corr()\nrevcorr.style.background_gradient(cmap='coolwarm').set_precision(2)","0389305c":"### Roteiro de an\u00e1lise\n\nSer\u00e3o verificados os seguintes itens:\n1. Verificar a necessidade de ajuste no tipo dos dados\n2. Verificar dados faltantes\n3. Avaliar outliers\n4. Distribui\u00e7\u00e3o de atributos selecionados\n5. Rela\u00e7\u00f5es entre atributos selecionados","8f236f25":"#### 1. Verificar a necessidade de ajuste do tipo dos dados","eab88599":"##### 4.3. Vizinhan\u00e7a","5f93b5a7":"##### 4.8. Di\u00e1ria em moeda local","d9cc1c12":"##### 4.5. Capacidade de h\u00f3spedes","cdd27751":"#### 4. Distribui\u00e7\u00e3o de atributos selecionados\n\n##### 4.1.Host response time","89396e54":"##### 4.7. N\u00famero de camas","4d30b6b1":"##### 4.4. Tipo do quarto","3a6ee11b":"##### 4.10. N\u00fameros m\u00ednimo e m\u00e1ximo de noites","c39e3618":"##### 4.2. Super anfitri\u00e3o","51957647":"## An\u00e1lise explorat\u00f3ria de dados do AirBnB para Praga","fd02eb4c":"#### 3. Avaliar outliers\n\nPara avaliar outliers, \u00e9 necess\u00e1rio primeiro identificar as colunas com dados num\u00e9ricos.","016230c5":"#### 2. Verificar dados faltantes","e05c8e6c":"##### 4.6. N\u00famero de quartos","400de624":"##### 4.9. Notas de reviews","1e53dfa5":"#### 5. Rela\u00e7\u00f5es entre atributos selecionados"}}