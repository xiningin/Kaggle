{"cell_type":{"dec7679c":"code","0d6a76a1":"code","a687c175":"code","7c102115":"code","857d2677":"code","216d7f1b":"code","28037bf9":"code","3e9d4e47":"code","1787f9e9":"code","c9ff5013":"code","acb71796":"code","866ac272":"code","d18806c3":"code","a9959ceb":"code","c352b76a":"code","16d9f0e7":"code","31834b69":"code","28dec90a":"code","c675de77":"code","e544ade1":"code","d90ee0a5":"code","54f79f7d":"code","9844969f":"code","9302db2d":"code","45dd7460":"markdown","5e4e5c77":"markdown","ff49dd4f":"markdown","17bb85cb":"markdown","11891054":"markdown","75a6193b":"markdown","9665c00a":"markdown","e6b06e3f":"markdown","cd8d3e1f":"markdown"},"source":{"dec7679c":"# Importing all libraries to be used. \nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd","0d6a76a1":"mpl.style.use('bmh') # With this instruction, we are going to use bmh style, the one providing background. ","a687c175":"# Declaring 2 lists, and plotting using \"Status Oriented Interphase\"\nx = [1,3]\ny = [2,4]\nplt.plot(x,y) # Status orientes Interphase ","7c102115":"# Plotting the same lists, but now using the \"Object Orientes Interphase\". Recommended and to be used with graphs are complex\nfig, ax = plt.subplots()\nax.plot(x,y)","857d2677":"# Now let's play with real data\ndf_rain = pd.read_csv('..\/input\/precipitation-data-of-pune-from-1965-to-2002\/pune_1965_to_2002.csv')\ndf_rain.head()","216d7f1b":"df_rain = df_rain.set_index('Year')","28037bf9":"df_rain.head()","3e9d4e47":"x = df_rain.index","1787f9e9":"y = df_rain.sum(axis='columns')","c9ff5013":"fig, ax = plt.subplots(figsize=(12,4)) # Square figure 12x4\nax.plot(x,y,label='Accumulated Rainfall')\nax.set_xlabel('Year')\nax.set_ylabel('Accumulated Rainfall (mm.)')\nax.set_title('Accumulated Rainfall by Year')\nax.legend(loc='upper right') # Force legend to be displayed in the upper right corner ","acb71796":"# Refreshing memories> if we want to access to method documentation, we should type '?' right after the method name. Example>\nax.legend?","866ac272":"fig, ax = plt.subplots(figsize=(12,4)) \nax.plot(x,y,label='Accumulated Rainfall')\nax.set_xlabel('Year')\nax.set_ylabel('Accumulated Rainfall (mm.)')\nax.set_title('Accumulated Rainfall by Year')\nax.legend(loc='upper right')\nax.set_xlim(df_rain.index[0],df_rain.index[-1]) # NEW> Fill out empty spaces in between borders ","d18806c3":"# Exporting Graphs\n#fig.savefig('rainfalls_year.pdf')","a9959ceb":"fig, ax = plt.subplots()\nax.plot([0, 1, 2, 3, 4, 5, 6], [1, 5, 2, 4, 8, 9, 2])","c352b76a":"fig, ax = plt.subplots()\nax.plot([1, 5, 2, 4, 8, 9, 2])","16d9f0e7":"pesos = [42.8, 43.3, 42. , 44. , 44.1, 43.5, 48.1, 48.9, 47.7,46.9,50.4,\n       52.7, 51.8, 54.5, 54.2, 56.9, 55.4, 55.5, 57.1, 58.3, 63.7, 58.8,\n       64.6, 60.2, 64. , 63.8, 61.4, 66.3, 64.7, 63.9, 69.3, 67.9, 65.2,\n       70.8, 70.5, 69.3, 75.3, 75.5, 78.2, 78. , 73.2, 78. , 80.1, 78.2,\n       76. , 81.5, 79.4, 81.8, 81.8, 84.1]\nalturas = [149. , 149. , 149.9, 156.8, 150.6, 155.4, 151. , 162. , 165.,\n       157.8, 164.4, 160.1, 160.8, 163.8, 175.2, 162. , 159.5, 159.2,\n       169.8, 166.7, 179.4, 180.6, 163.3, 178.8, 176.3, 184.8, 181. ,\n       170.5, 184.1, 187.1, 187.1, 177.7, 184.5, 190.3, 196. , 192.1,\n       200.4, 201.8, 187.5, 202.1, 200.3, 208.8, 204.6, 193.5, 200.9,\n       196.8, 213.1, 204.8, 215.5, 210.2] ","31834b69":"fig, ax = plt.subplots()\nax.scatter(alturas, pesos, alpha=0.7)\nax.set_title('Altura vs. Peso de 50 alumnos')\nax.set_xlabel('Altura (cm.)')\nax.set_ylabel('Peso (kg.)')","28dec90a":"# \u00bfGuardar\u00e1n alg\u00fan tipo de relaci\u00f3n las precipitaciones de Agosto respecto de las de septiembre? \ud83e\udd14\nfig, ax = plt.subplots()  \nmapeo_colores = ax.scatter(df_rain['Aug'], df_rain['Sep'], c=df_rain.index)\nfig.colorbar(mapeo_colores)\nax.set_title('Precipitaciones Agosto-Septiembre')\nax.set_xlabel('Precipitaciones en Agosto (mm.)')\nax.set_ylabel('Precipitaciones en Septiembre (mm.)')","c675de77":"accumulated_rainfall = df_rain.sum()\naccumulated_rainfall","e544ade1":"fig, ax = plt.subplots(figsize=(8,4))\naccumulated_rainfall = df_rain.sum()\nax.bar(df_rain.columns, accumulated_rainfall)\nax.set_title('Precipitaciones acumuladas desde 1965 a 2002, seg\u00fan el mes')\nax.set_ylabel('Precipitaci\u00f3n total (mm.)')\nax.set_xlabel('Mes')","d90ee0a5":"# Aplanemos los valores del Data Frame con el m\u00e9todo flatten\n#df_rain.values.flatten()\nfig, ax = plt.subplots(figsize=(8, 4))\nax.hist(df_rain.values.flatten(), bins=10)\nax.set_title('Histograma de precipitaciones')\nax.set_xlabel('Intervalos de precipitaciones (mm.)')\nax.set_ylabel('Frecuencia absoluta')","54f79f7d":"# Comparing rainfall January and February in the same ax Object\nfig, ax = plt.subplots(figsize=(12, 3))  \nax.plot(df_rain.index, df_rain['Jan'], label='Precipitaciones de enero')\nax.plot(df_rain.index, df_rain['Feb'], label='Precipitaciones de febrero', color='red')\n","9844969f":"# Calculating and showing Max\nmaximo_jan = df_rain['Jan'].max()\nmaximo_feb = df_rain['Feb'].max()","9302db2d":"# El m\u00e9todo axhline permite graficar l\u00edneas horizontales. Usemos esto para resaltar los m\u00e1ximos de cada serie de tiempo\nfig, ax = plt.subplots(figsize=(12, 3))  \nax.plot(df_rain.index, df_rain['Jan'], label='Precipitaciones de enero')\nax.plot(df_rain.index, df_rain['Feb'], label='Precipitaciones de febrero', color='red')\nax.axhline(maximo_jan, color='red', linestyle='--', alpha=0.5,    linewidth=3, label='M\u00e1xima de enero')\nax.axhline(maximo_feb, color='red', linestyle=':', alpha=0.5, linewidth=3, label='M\u00e1xima de febrero')\nax.set_xlabel('A\u00f1o')  \nax.set_ylabel('Precipitaci\u00f3n (mm.)') \nax.set_title('Precipitaciones de enero y febrero') \t\nax.set_xlim(df_rain.index[0], df_rain.index[-1])\nax.legend()","45dd7460":"***MULTIPLE ELEMENTS***\n* En ocasiones necesitamos resaltar ciertas caracter\u00edsticas de los datos. \n* Por ejemplo, \u00bfQu\u00e9 pasa si quisi\u00e9ramos resaltar el punto m\u00e1ximo en una serie de tiempo?\n* Podemos cargar al objeto ax con m\u00faltiples elementos para que los muestre todos juntos?","5e4e5c77":"---\n**BAR GRAPHS**\n* Permiten comparar y poner en perspectiva los valores de distintas variables categ\u00f3ricas. Por ejemplo, las precipitaciones seg\u00fan el mes del a\u00f1o. \n* Para el ejemplo, acumulemos las precipitaciones para los distintos meses a lo largo de los a\u00f1os.\n","ff49dd4f":"**HISTOGRAMS**\n* La altura de cada barra representa la **proporci\u00f3n o cantidad** de los distintos valores de una **variable num\u00e9rica**.\n* Requiere **clasificar** a los datos en intervalos de clase.\n* Permiten comparar la **frecuencia relativa** o **absoluta** de cada intervalo.\n* Se construyen con ax.hist, que recibe como par\u00e1metro:\n * El **arreglo de valores**. \n * **bins**, que representa la cantidad de intervalos a construir.","17bb85cb":"---\n**SOME EXAMPLES**\n* Son adecuados para visualizar datos con secuencialidad temporal, como las series de tiempo.\n* Se grafican con el m\u00e9todo  ax.plot(x, y)\n* En caso de no especificarse x, matplotlib toma como coordenadas en x al arreglo de n\u00fameros enteros [0, 1, 2, \u2026, n]","11891054":"**NOTICE**\n* El eje x representa categor\u00edas. La altura de cada barra en el eje y representa la cantidad de elementos para la categor\u00eda correspondiente.\n* Se grafican con ax.bar,que recibe como par\u00e1metros:\n * las etiquetas para el eje x\n * la altura de la barra para cada etiqueta\n\n---","75a6193b":"---\n# 7 - VISUALIZATION WITH PYTHON\n---\n### MATPLOTLIB\n\n* Intro to Matplotlib\n * Interphases\n * Common Graphs (Lines, Dots, Bars, Histograms)\n * Sub-graphs\n\nLecture notes and excercises by Pedro Ciancaglini \n\n---","9665c00a":"* Para poder visualizar la relaci\u00f3n, los valores de los arreglos que se emparejan deben guardar correspondencia entre s\u00ed. El peso de la primera persona debe estar junto con la altura de la misma persona.\n* El par\u00e1metro alpha permite cambiar la transparencia de los puntos. Muy \u00fatil cuando graficamos muchos puntos.\n * alpha = 1              puntos s\u00f3lidos\n * alpha = 0.01         puntos casi transparentes\n","e6b06e3f":"***NOTICE***\n* La forma del histograma depende del n\u00famero de intervalos de clase que pasemos al par\u00e1metro bins.\n* En el ejemplo se represent\u00f3 la frecuencia absoluta de los intervalos.\n* Tambi\u00e9n se puede representar la frecuencia relativa de cada intervalo o el porcentaje respecto del total.\n\n\n--------\n","cd8d3e1f":"---\n**GRAFICOS DE PUNTOS**\n* \u00datiles cuando se tienen una gran cantidad de datos num\u00e9ricos emparejados\n* Permiten visualizar la relaci\u00f3n entre las variables por medio de la nube de puntos\n * Nube de puntos \u201calineada\u201d          relaci\u00f3n fuerte\n * Nube de puntos \u201cdispersa\u201d          relaci\u00f3n d\u00e9bil o nula\n\n* Se grafican con ax.scatter"}}