{"cell_type":{"4e70ec1b":"code","0be1374f":"code","29520d23":"code","072d9404":"code","661f4523":"code","66790303":"code","aab696f2":"code","a0af4260":"code","61c05d57":"code","d926c220":"code","6bf49444":"code","56ac50ff":"code","4fc2406d":"code","e81f28c6":"code","9f5a5d49":"code","d39013ff":"code","c85e0ae0":"code","1d0e99df":"code","8ac1cfcf":"code","efd40981":"code","a0a170b7":"code","ee770dab":"code","8aea1689":"code","323a3a0b":"code","b66d132a":"code","091fe949":"code","2fe23684":"code","273d6d35":"code","e23c3a76":"code","997550f5":"code","0fd2d68e":"code","22965ac0":"code","e257ecfc":"code","afdead17":"code","65f61111":"code","5142faeb":"code","4849edb5":"code","fba07481":"code","82aa746d":"code","2c8a6cba":"code","10031673":"code","5538fc03":"code","a799653e":"code","f3c3f0a6":"code","05cc0145":"code","ea39ee38":"code","2170c7ad":"code","5c6cc8c1":"code","8763d3ca":"code","5c5bc729":"code","1882c411":"markdown"},"source":{"4e70ec1b":"import numpy as np\nimport pandas as pd","0be1374f":"import matplotlib.pyplot as plt","29520d23":"df=pd.read_csv(\"..\/input\/pune-house-data\/Pune house data.csv\")","072d9404":"df","661f4523":"df.head()","66790303":"df.tail()","aab696f2":"df.size","a0af4260":"df.shape","61c05d57":"df.info()","d926c220":"df.describe()","6bf49444":"df.isnull()","56ac50ff":"df.isnull().sum()","4fc2406d":"df[df['site_location'].isnull()].index.tolist()","e81f28c6":"df[df['bath'].isnull()].index.tolist()","9f5a5d49":"df['site_location'].drop([1728],axis=0,inplace=True)","d39013ff":"df","c85e0ae0":"df.dropna()","1d0e99df":"df.dropna(how='any',axis=0,inplace=True)","8ac1cfcf":"df.isnull().sum()","efd40981":"df.info()","a0a170b7":"df","ee770dab":"df['area_type']","8aea1689":"a=list(df['area_type'])","323a3a0b":"df['area_type'].unique()","b66d132a":"df['area_type'].value_counts()","091fe949":"df['area_type']=df['area_type'].replace(['Super built-up  Area'],0)\ndf['area_type']=df['area_type'].replace(['Built-up  Area'],1)\ndf['area_type']=df['area_type'].replace(['Plot  Area'],2)\ndf['area_type']=df['area_type'].replace(['Carpet  Area'],3)","2fe23684":"df","273d6d35":"df.info()","e23c3a76":"df['availability'].value_counts()","997550f5":"df['society'].value_counts()","0fd2d68e":"df.drop(['availability'],axis=1,inplace=True)","22965ac0":"df","e257ecfc":"df['size']=df['size'].apply(lambda x: int(x.split(' ')[0]))","afdead17":"df['size'].unique()","65f61111":"df.drop(['society'],axis=1,inplace=True)","5142faeb":"df\n","4849edb5":"def isFloat(x):\n    try:\n        Float(x)\n    except:\n        return False\n    return True\n    ","fba07481":"df[~df['total_sqft'].apply(isFloat)]","82aa746d":"def convert_sqft_to_num(x):\n    tokens=x.split('_')\n    if len(tokens)==2:\n        return (float(tokens[0])+float(tokens[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None","2c8a6cba":"df['new_total_sqft']=df.total_sqft.apply(convert_sqft_to_num)\ndf=df.drop('total_sqft',axis='columns')\ndf.head()","10031673":"df.info()","5538fc03":"final=pd.get_dummies(df)","a799653e":"final","f3c3f0a6":"final.info()","05cc0145":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\n","ea39ee38":"fig, ax = plt.subplots()  # Create a figure containing a single axes.\nax.plot([1, 2, 3, 4], [1, 4, 2, 3]);","2170c7ad":"x = np.linspace(0, 2, 100)  # Sample data.\n\n# Note that even in the OO-style, we use `.pyplot.figure` to create the Figure.\nfig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\nax.plot(x, x, label='linear')  # Plot some data on the axes.\nax.plot(x, x**2, label='quadratic')  # Plot more data on the axes...\nax.plot(x, x**3, label='cubic')  # ... and some more.\nax.set_xlabel('x label')  # Add an x-label to the axes.\nax.set_ylabel('y label')  # Add a y-label to the axes.\nax.set_title(\"Simple Plot\")  # Add a title to the axes.\nax.legend();  # Add a legend.","5c6cc8c1":"x = np.linspace(0, 2, 100)  # Sample data.\n\nplt.figure(figsize=(5, 2.7), layout='constrained')\nplt.plot(x, x, label='linear')  # Plot some data on the (implicit) axes.\nplt.plot(x, x**2, label='quadratic')  # etc.\nplt.plot(x, x**3, label='cubic')\nplt.xlabel('x label')\nplt.ylabel('y label')\nplt.title(\"Simple Plot\")\nplt.legend();\n","8763d3ca":"import matplotlib.pyplot as plt\nplt.plot([1,2,3,4])\nplt.ylabel('some number')\nplt.show()","5c5bc729":"x=np.arange(0,21)\ny=(2*x)\nplt.plot(x,label='techsnap')\nplt.plot(y,label='power')\nplt.xlabel('x label')\nplt.ylabel('y label')\nplt.title('timespend')\nplt.legend(loc=\"upper right\");","1882c411":"[](http:\/\/)"}}