{"cell_type":{"1a63b2d1":"code","a7e8427a":"code","92b61cef":"code","37edaa9d":"code","e7d09b27":"code","b6e6506a":"code","817f7611":"code","630a5530":"code","32dd5df6":"code","37814b80":"code","cad91cf9":"code","cd9dee17":"code","02cfc429":"code","f6d16648":"code","8ad707f4":"code","00a609be":"code","c0ca94d8":"code","4c4ef2ae":"code","9e1ab439":"code","0438de77":"code","5f95e06f":"code","84feb933":"code","09a69ec2":"code","ca6bfd72":"markdown","e62702b5":"markdown","54120b1f":"markdown","2141d5e6":"markdown","34b30e31":"markdown","82811281":"markdown","ec993bb7":"markdown","205ed89a":"markdown","2c28dd2b":"markdown","7838255a":"markdown","3163dcba":"markdown","afaa1a9b":"markdown"},"source":{"1a63b2d1":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px","a7e8427a":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","92b61cef":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\nprint(train_df.shape)\ntrain_df['Died'] = (1 - train_df['Survived'])\ntrain_df.head(10)","37edaa9d":"train_df.convert_dtypes().dtypes","e7d09b27":"train_df.info()","b6e6506a":"train_df.describe()","817f7611":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nprint(test_data.shape)\ntest_data.head(10)","630a5530":"test_data.info()","32dd5df6":"gender_df = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\ngender_df.head()","37814b80":"df = train_df.Pclass.value_counts()\ncolors = [\"gold\", \"mediumturquoise\", \"darkorange\", \"lightgreen\"]\nfig = px.pie(df, df.index, df.values, labels={\"index\": \"Categories\"})\nfig.update_traces(\n    hoverinfo=\"label+percent\",\n    textinfo=\"value\",\n    textfont_size=20,\n    marker=dict(colors=colors, line=dict(color=\"#000000\", width=2)),\n)\nfig.update_layout(title=\"No of people in each class of Titanic: Pclass\")\n\nfig.show()","cad91cf9":"df = train_df.Sex.value_counts()\ncolors = [\"gold\", \"mediumturquoise\", \"darkorange\", \"lightgreen\"]\nfig = px.pie(df, df.index, df.values, labels={\"index\": \"Categories\"})\nfig.update_traces(\n    hoverinfo=\"label+percent\",\n    textinfo=\"value\",\n    textfont_size=20,\n    marker=dict(colors=colors, line=dict(color=\"#000000\", width=2)),\n)\nfig.update_layout(title=\"No of people in each class of Titanic: Sex\")\n\nfig.show()","cd9dee17":"df = train_df.SibSp.value_counts()\ncolors = [\"gold\", \"mediumturquoise\", \"darkorange\", \"lightgreen\"]\nfig = px.pie(df, df.index, df.values, labels={\"index\": \"Categories\"})\nfig.update_traces(\n    hoverinfo=\"label+percent\",\n    textinfo=\"value\",\n    textfont_size=20,\n    marker=dict(colors=colors, line=dict(color=\"#000000\", width=2)),\n)\nfig.update_layout(title=\"No of people in each class of Titanic: SibCP\")\n\nfig.show()","02cfc429":"df = train_df.Parch.value_counts()\ncolors = [\"gold\", \"mediumturquoise\", \"darkorange\", \"lightgreen\"]\nfig = px.pie(df, df.index, df.values, labels={\"index\": \"Categories\"})\nfig.update_traces(\n    hoverinfo=\"label+percent\",\n    textinfo=\"value\",\n    textfont_size=20,\n    marker=dict(colors=colors, line=dict(color=\"#000000\", width=2)),\n)\nfig.update_layout(title=\"No of people in each class of Titanic: SibCP\")\n\nfig.show()","f6d16648":"df = train_df.Survived.value_counts()\ndf.head()\nfig = px.pie(df, df.index, df.values, labels={\"index\": \"Survived\/Not survived\"})\nfig.show()","8ad707f4":"train_df.pivot_table(values=['Survived', 'Died'], index=['Pclass'],aggfunc=np.sum)","00a609be":"train_df.pivot_table(values=['Survived', 'Died'], index=['Cabin'])","c0ca94d8":"train_df.pivot_table(values=['Survived', 'Died'], index=['SibSp'])","4c4ef2ae":"train_df.pivot_table(values=['Survived', 'Died'], index=['SibSp'], aggfunc=np.sum)","9e1ab439":"train_df.pivot_table(values=['Survived', 'Died'], index=['Parch'], aggfunc=np.sum)","0438de77":"#ax.set_yscale('log')\ntrain_df.boxplot(column=\"Fare\",by=\"Survived\")","5f95e06f":"train_df.hist(column=\"Fare\",by=\"Survived\",bins=30)","84feb933":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_df[\"Survived\"]\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_df[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)","09a69ec2":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\noutput.head()","ca6bfd72":"## Peeking at the data","e62702b5":"# Modelling\n\n","54120b1f":"## Fare with number of people who survived","2141d5e6":"## Model-1\n\nfrom Alex cooks starter notebook\n\nWe used all the features which had no missing value in both training and test dataset.\n\nTarget variable = Survived\n\nNon missing - features = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]","34b30e31":"## how many people with siblings died","82811281":"## About Data columns\n\n1. survival   Survival                  Categorical - 0 = No, 1 = Yes\n2. pclass     Ticket class              Categorical - 1 = 1st, 2 = 2nd, 3 = 3rd\n3. sex        Sex                       Categorical - male, female\n4. embarked   Port of Embarkation       Categorical - C = Cherbourg, Q = Queenstown, S = Southampton\n\n5. Age        Age in years              Numerical (is poluted)  \n\na) If less than 1 Age is fractional\nb) If the age is estimated, is it in the form of xx.5\n\n6. sibsp: Number of Siblings\/Spouses Aboard\n```\nSibling = brother, sister, stepbrother, stepsister\nSpouse = husband, wife (mistresses and fianc\u00e9s were ignored)\n```\n\n7. parch: Number of Parents\/Children Aboard \n\n```\n Parent = mother, father\n\n Child = daughter, son, stepdaughter, stepson\n\n Some children travelled only with a nanny, therefore parch=0 for them.\n ```\n \n8. Ticket - The ticket number of passenger\n9. Fare - the money paid to board titanic\n10. Embarked - the location from where passenger joined crew\n11. Cabin - which cabin person boarded","ec993bb7":"## Reference Notebooks\n\n- [Ashley Smart](https:\/\/github.com\/ashleysmart\/mlgym\/blob\/master\/tuts\/Onboarding_Fundementals.ipynb)\n- [Neomatrix notebook](https:\/\/www.kaggle.com\/neomatrix369\/chaieda-sessions-titanic)","205ed89a":"- People with parch=0 and parch>4 had more probability to die","2c28dd2b":"## how many people with parents died?","7838255a":"- people with just 1 siblings survived more that no of people who died\n- THe company will have a hard time explaining how various folks died during tragedy","3163dcba":"\n**Interesting insights from various discussion during Chai EDA session**\n\n- 3rd class females remained an outlier\n- 3rd class females Embarked from southampton had lower fortune\n- distplot of ages from Robert analysis\n- titles(what extra details?)\n","afaa1a9b":"## Questions as a buisness person\n\n- Who all may have died?\n- What are traits of people who died and lived?\n- If they had family member on ship, what question will they ask?\n"}}