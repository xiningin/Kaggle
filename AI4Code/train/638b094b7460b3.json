{"cell_type":{"c5b8e7c2":"code","6199b928":"code","8df57ec9":"code","a9280331":"code","a6915a67":"code","965f5cbf":"code","43299e45":"code","29671215":"code","a02a8bee":"code","338d1c90":"code","7fb2afd4":"code","14800b7e":"code","c9f9dad5":"code","91869c09":"code","d305f83c":"code","823bf475":"code","fe599f57":"code","325bac29":"code","48767f23":"code","143a2367":"code","a69a4d45":"code","ba6b8a2b":"code","eec70623":"code","422f051b":"code","af8a7db0":"code","60e3a8f2":"code","f7cccac6":"code","139d2b74":"code","5f7fd652":"code","7fccc17e":"code","61c0373b":"code","8fc6b2ee":"code","ba5420d7":"code","d2f467e7":"code","24b91922":"code","1165ee64":"code","9ffd48d0":"code","86c156ef":"code","152a53ae":"code","914deeda":"code","2857a0c1":"code","8e559d3b":"code","c3ca0938":"code","7c21b5a1":"code","137a6bf0":"code","9beaed40":"code","b876ed06":"code","79ff90bb":"code","0cd5137c":"code","981ecd00":"code","51730696":"code","e782c270":"code","727ae050":"code","4c6f73af":"code","fc6ed70b":"code","ad470cef":"code","dda74583":"code","8797f288":"code","8cbacc93":"code","4844c3dc":"code","17e9ca5d":"code","a28dd5bd":"code","b13115fa":"code","d3462a24":"markdown","41c44cdc":"markdown","bef5221d":"markdown","83af89e6":"markdown","ffae483f":"markdown","fa0e3028":"markdown","3f801e7e":"markdown","ef3bf24b":"markdown","053a749e":"markdown","7a91f288":"markdown","8ccbba64":"markdown","aa76528b":"markdown","3eeb19a4":"markdown","9df65b10":"markdown","62047e4e":"markdown","f3d1ad2c":"markdown","f4c15ca2":"markdown","8970ae33":"markdown","c10820d5":"markdown","e43d099e":"markdown","f87a9eee":"markdown","7e974f6c":"markdown","4364c082":"markdown","c931bf3b":"markdown","4bb98861":"markdown","15e64beb":"markdown","86f5ea52":"markdown","1dcb1346":"markdown","9514a9e1":"markdown","725d1c8d":"markdown","7ebcb235":"markdown","9ae2e2f1":"markdown","bea1e588":"markdown","fb2c0c6b":"markdown","932a916f":"markdown","72f6e6ac":"markdown","76b1f635":"markdown","67c5624c":"markdown","6371cd31":"markdown","0c8f931a":"markdown","088379f5":"markdown","57147d02":"markdown","46de55c0":"markdown","b3b2bb39":"markdown","cfc2a51f":"markdown","5aa4ed12":"markdown","9a314bbf":"markdown","9a5b2d6a":"markdown"},"source":{"c5b8e7c2":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib \nmatplotlib.rcParams[\"figure.figsize\"] = (15,8) # setting figsize","6199b928":"df = pd.read_csv(\"..\/input\/bangalore-house-price-dataset\/blr_house_dataset.csv\")\ndf.head(10)","8df57ec9":"df.info()","a9280331":"df['price'].describe()","a6915a67":"df.shape","965f5cbf":"df.columns","43299e45":"df['area_type'].unique()","29671215":"df['area_type'].value_counts()","a02a8bee":"df_drop_useless = df.drop(['area_type','society','balcony','availability'],axis='columns')\ndf_drop_useless.shape","338d1c90":"df_drop_useless.isnull().sum()","7fb2afd4":"df_drop_useless.shape","14800b7e":"df_drop_nan = df_drop_useless.dropna()\ndf_drop_nan.isnull().sum()","c9f9dad5":"df_drop_nan.shape","91869c09":"df_drop_nan.info()","d305f83c":"df_drop_nan['bhk'] = df_drop_nan['size'].apply(lambda x: int(x.split(' ')[0])) # accessing first digit \ndf_drop_nan['bhk'].unique()","823bf475":"def is_float(n):\n    '''to check that the total_sqft is float'''\n    try:\n        float(n)\n    except:\n        return False\n    return True","fe599f57":"df_drop_nan[~df_drop_nan['total_sqft'].apply(is_float)].head()","325bac29":"def sqft_to_float(n):\n    area = n.split('-')\n    if len(area) == 2:\n        return (float(area[0])+float(area[1]))\/2\n    try:\n        return float(n)\n    except:\n        return None   ","48767f23":"df_clean_copy = df_drop_nan.copy()\ndf_clean_copy['total_sqft'] = df_clean_copy['total_sqft'].apply(sqft_to_float)\ndf_clean_copy = df_clean_copy[df_clean_copy['total_sqft'].notnull()]\ndf_clean_copy.head(5)","143a2367":"df_clean = df_clean_copy.copy()\ndf_clean['price_per_sqft'] = df_clean['price']*100000\/df_clean['total_sqft']\ndf_clean.head()","a69a4d45":"df_clean_describe = df_clean['price_per_sqft'].describe()\ndf_clean_describe","ba6b8a2b":"df_clean.to_csv(\"fea_eng_blr_data.csv\",index=False)","eec70623":"df_clean['location'] = df_clean['location'].apply(lambda x: x.strip())\nlocation_count = df_clean['location'].value_counts(ascending=False)\nlocation_count","422f051b":"location_less_10 = location_count[location_count<=10]\nlocation_less_10","af8a7db0":"df_clean['location'] = df_clean['location'].apply(lambda x: 'discard' if x in location_less_10 else x)\nlen(df_clean.location.unique())","60e3a8f2":"df_clean.head(10)","f7cccac6":"df_clean[df_clean['total_sqft']\/df_clean['bhk']<300].head()","139d2b74":"df_clean.shape","5f7fd652":"df_min_thresh = df_clean[~(df_clean['total_sqft']\/df_clean['bhk']<300)]\ndf_min_thresh","7fccc17e":"df_min_thresh['price_per_sqft'].describe()","61c0373b":"def treat_outliers(df):\n    df_new = pd.DataFrame()\n    for key, df_group in df.groupby('location'):\n        std = np.std(df_group['price_per_sqft'])\n        mu = np.mean(df_group['price_per_sqft'])\n        df_optimized = df_group[(df_group['price_per_sqft'] > (mu-std)) & (df_group['price_per_sqft'] <= (mu+std))]\n        df_new = pd.concat([df_new,df_optimized], ignore_index=True)\n    return df_new\ndf_plot_bhk = treat_outliers(df_min_thresh)\ndf_plot_bhk.shape","8fc6b2ee":"def plot_scatter_chart(df,location):\n    df_2_bhk = df[(df['location']==location) & (df['bhk']==2)]\n    df_3_bhk = df[(df['location']==location) & (df['bhk']==3)]\n    matplotlib.rcParams['figure.figsize'] = (20,10)\n    plt.scatter(df_2_bhk['total_sqft'],df_2_bhk['price'],color='magenta',label='2 BHK', s=50)\n    plt.scatter(df_3_bhk['total_sqft'],df_3_bhk['price'], color='seagreen',label='3 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(location)\n    plt.legend()","ba5420d7":"plot_scatter_chart(df_plot_bhk,\"Thanisandra\")","d2f467e7":"plot_scatter_chart(df_plot_bhk,\"Sarjapur  Road\")","24b91922":"def treat_bhk_error(df):\n    index_to_ignore = np.array([])\n    for location, location_df in df.groupby('location'):\n        bhk_collection = {}\n        for bhk, df_bhk in location_df.groupby('bhk'):\n            bhk_collection[bhk] = {\n                'mean': np.mean(df_bhk['price_per_sqft']),\n                'std': np.std(df_bhk['price_per_sqft']),\n                'count': df_bhk.shape[0]\n            }\n        for bhk, df_bhk in location_df.groupby('bhk'):\n            collection = bhk_collection.get(bhk-1)\n            if collection and collection['count']>5:\n                index_to_ignore = np.append(index_to_ignore, df_bhk[df_bhk['price_per_sqft']<(collection['mean'])].index.values)\n    return df.drop(index_to_ignore,axis='index')","1165ee64":"df_bhk_error_removed = treat_bhk_error(df_plot_bhk)\ndf8 = df_bhk_error_removed.copy()\ndf8.shape","9ffd48d0":"plot_scatter_chart(df_bhk_error_removed,\"Thanisandra\")\nplt.show()","86c156ef":"plot_scatter_chart(df_bhk_error_removed,\"Sarjapur  Road\")\nplt.show()","152a53ae":"import matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (15,8)\nplt.hist(df_bhk_error_removed['price_per_sqft'],rwidth=0.8)\nplt.xlabel(\"Price Per Square Feet\")\nplt.ylabel(\"Count\")\nplt.show()","914deeda":"df_bhk_error_removed['bath'].unique()","2857a0c1":"sns.distplot(df_bhk_error_removed['bath'],kde=False,color='seagreen', bins=20)\nplt.xlabel(\"Number of bathrooms\")\nplt.ylabel(\"Count\")","8e559d3b":"df_bhk_error_removed[df_bhk_error_removed['bath']>10]","c3ca0938":"df_bhk_error_removed[df_bhk_error_removed['bath']>df_bhk_error_removed['bhk']+2]","7c21b5a1":"df_optimised_data = df_bhk_error_removed[df_bhk_error_removed['bath']<df_bhk_error_removed['bhk']+2]\ndf_optimised_data.shape","137a6bf0":"df_optimised_data.head(2)","9beaed40":"df_useful_features = df_optimised_data.drop(['size','price_per_sqft'], axis='columns')\ndf_useful_features.head(5)","b876ed06":"dummies = pd.get_dummies(df_useful_features.location)\ndummies.head(10)","79ff90bb":"df_integrated_with_location = pd.concat([df_useful_features,dummies.drop('discard',axis='columns')],axis='columns')\ndf_integrated_with_location.head()","0cd5137c":"df_integrated = df_integrated_with_location.drop('location',axis='columns')\ndf_integrated.head(15)","981ecd00":"df_integrated.shape","51730696":"X = df_integrated.drop(['price'],axis='columns')\nX.head()","e782c270":"X.shape","727ae050":"y = df_integrated.price\ny.head()","4c6f73af":"len(y)","fc6ed70b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=10)","ad470cef":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(X_train,y_train)\nlr_clf.score(X_test,y_test)","dda74583":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n\ncross_val_score(LinearRegression(), X, y, cv=cv)","8797f288":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef best_gridsearchcv(X,y):\n    '''The function for finding which model is best using GridSearchCV'''\n    models = {'linear_regression' : {'model': LinearRegression(),'params': {'normalize': [True, False]}},\n        'decision_tree': {'model': DecisionTreeRegressor(),'params': {'criterion' : ['mse','friedman_mse'],\n                                                                      'splitter': ['best','random']}}\n             }\n    \n    result = []\n    \n    coeff = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n    for model_name, config in models.items():\n        GridSea =GridSearchCV(config['model'],  config['params'],cv=coeff, return_train_score=False)\n        GridSea.fit(X,y)\n        result.append({'model_used': model_name,'result_score': GridSea.best_score_,'final_best_params': GridSea.best_params_})\n\n    return pd.DataFrame(result,columns=['model_used','result_score','final_best_params'])\n\nbest_gridsearchcv(X,y)","8cbacc93":"def prediction(location,sqft,bath,bhk):    \n    loc_index = np.where(X.columns==location)[0][0]\n\n    x = np.zeros(len(X.columns))\n    x[0] = sqft\n    x[1] = bath\n    x[2] = bhk\n    if loc_index >= 0:\n        x[loc_index] = 1\n\n    return lr_clf.predict([x])[0]","4844c3dc":"prediction('Vittasandra',1000, 2, 2)","17e9ca5d":"prediction(\"Sarjapur  Road\",1000, 3, 3)","a28dd5bd":"prediction('2nd Stage Nagarbhavi',1000, 2, 3)","b13115fa":"prediction(\"Vijayanagar\",1000, 2, 3)","d3462a24":"##### Model Building","41c44cdc":"##### Cross Validating (K Fold) to check the accuracy of Linear Regression Model  ","bef5221d":"##### Count less than 10 for any location will be labeled as \"discard\" location. The toal number of categories can be reduced at greater extent. ","83af89e6":"##### It will help us with having fewer dummy columns","ffae483f":"##### the above array has wide spread of values of bathroom feature. We will first look at the spread of values and existence of them in the dataset and then we will decide that which values to be skipped to get the optimised dataset.","fa0e3028":"##### It is unusual to have 2 more bathrooms than number of bedrooms in a home","3f801e7e":"##### Count of each type of area of house","ef3bf24b":"##### The above metrics tell us that, some of the total_sqft and size is not practically matching. We will clearly maintain the data will remove the errors in it.","053a749e":"##### Dimensions of Dataset after dropping some features","7a91f288":"##### Statistical Description of Data","8ccbba64":"##### Dimensions of Dataset after dropping some features and dropping null values","aa76528b":"##### Outlier Removal Using Bathrooms Feature","3eeb19a4":"##### Converting and exploring total_sqft feature","9df65b10":"##### Some data points in above visualizations says that, the price of 3 BHK is less than 2 BHK with around equivalent sqft area. We should remove such data points as for location.nWhat we will do is for a given location, we will build a dictionary of stats per bhk, i.e. Also, Now we can remove those 2 BHK apartments whose price_per_sqft is less than mean price_per_sqft of 1 BHK apartment**\n```\n{\n'1' : {'mean': 4000,'std: 2000,'count': 34},\n'2' : {'mean': 4300,'std: 2300,'count': 22},    \n}```","62047e4e":"##### One Hot Encoding For Location","f3d1ad2c":"##### Knowing the no. of records in each feature and dtypes of features","f4c15ca2":"##### Drop features that are not required or not useful to build our model","8970ae33":"##### Handling Null Values","c10820d5":"#### Dimentionality Reduction","e43d099e":"Dataset source >>> https:\/\/www.kaggle.com\/amitabhajoy\/bengaluru-house-price-data","f87a9eee":"##### Loading Dataset","7e974f6c":"#### Feature Engineering","4364c082":"##### We got a score above 80% in all the iterations. This result is good and even some regression models get more accuracy than this.","c931bf3b":"##### As simple interpretation, we will treat this feature first and will try to get the float values at the place of that object values of current feature.","4bb98861":"##### Testing the model","15e64beb":"##### The above metrics tells us that the LinearRegression ahs the best score amongst two, with compared with DecisionTree. Hence, We will use LinearRegression ","86f5ea52":"#### Outlier Removal Using Business Logic","1dcb1346":"##### Dimensions of Original Dataset","9514a9e1":"##### Importing Libraries","725d1c8d":"##### Add new feature called price per square feet","7ebcb235":"##### Getting count of number of houses at each location and using dimensionality reduction technique to minimise number of locations","9ae2e2f1":"##### Add new feature(integer) for bhk (Bedrooms Hall Kitchen)","bea1e588":"## Feature Engineering","fb2c0c6b":"##### business manager or domain expert, will explain that generally square ft per bedroom is 300. We will remove outliers by keeping our minimum thresold per bhk to be 300 sqft","932a916f":"##### Outlier Removal Using Standard Deviation and Mean","72f6e6ac":"##### Let's the dimension of data after setting threshold per bhk to be 300 sqft","76b1f635":"##### After observing the histogram, we can remove the records having bathroom feature more than 10. ","67c5624c":"##### Quantify which model is best using GridSearchCV","6371cd31":"**Let's check if for a given location how does the 2 BHK and 3 BHK property prices look like**","0c8f931a":"##### Dropping Null Values","088379f5":"##### Again the business manager told that if you have 4 bedroom home and even if you have bathroom in all 4 rooms plus one guest bathroom, you will have total bath = total bed + 1 max. Anything above that is an outlier or a data error and can be removed","57147d02":"##### Columns of the datasets","46de55c0":"##### The total_sqft  is a object and not numbers; actually it is the range of total_sqft within those two values as min and max value. Taking average of both the values will give approximately equivalent value. ","b3b2bb39":"**Plot same scatter chart again to visualize price_per_sqft for 2 BHK and 3 BHK properties**","cfc2a51f":"<h1 style='color:seagreen' align='center'>Data Science Regression Project: Predicting Home Prices in Banglore<\/h1>","5aa4ed12":"##### Checking the count of data and dtypes of features","9a314bbf":"##### Checking unique types of area ","9a5b2d6a":"##### As our data is widely spread, we can take look on minimum price per sqft is 267 rs\/sqft and comparing to that maximum is 12000000 rs\/sqft. Using mean and one standard deviation we will remove ouliers per location."}}