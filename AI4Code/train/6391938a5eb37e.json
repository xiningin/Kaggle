{"cell_type":{"580bd0f6":"code","f3295d96":"code","49dc433d":"code","cb2ddcc7":"code","9b27a550":"code","dfc4f798":"code","57a13d05":"code","4636a676":"code","edfeb125":"code","22eeff0f":"code","5bfcf7fe":"code","9daabb65":"code","81b21003":"code","8496c309":"code","5052ac0d":"code","233ef86d":"code","6529ef67":"code","86924954":"code","2c771b1f":"code","6d49f1ee":"code","f7cbb5c2":"code","5bafeb60":"code","d9a1be98":"code","2fdce0ac":"code","62be513d":"code","1c2fde40":"code","f6fe5f1b":"code","fd170ab7":"markdown","abb078a9":"markdown","4c0840a0":"markdown","64809835":"markdown","972b568d":"markdown","98b5d17c":"markdown","758a0c2f":"markdown","dac37642":"markdown","a2939e2f":"markdown","8c3796c2":"markdown","432bdcc5":"markdown","3cfbf112":"markdown","d5cdfbc3":"markdown","909ff314":"markdown","f2de1c3c":"markdown","b9e76565":"markdown","0f93b1fe":"markdown","17a6874a":"markdown","97eaa5d3":"markdown"},"source":{"580bd0f6":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use(\"seaborn\")\nimport seaborn as sns\nfrom datetime import datetime\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import SimpleRNN\nfrom keras.layers import Dropout\n\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import GridSearchCV","f3295d96":"item_categ = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")\nitems = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/items.csv\")\nsales_train = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\nsample_sub = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\nshops = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/shops.csv\")\ntest = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")","49dc433d":"sample_sub.info()\nsample_sub.head(10)","cb2ddcc7":"test.info()\ntest.head()","9b27a550":"magaza_id=test[\"shop_id\"].value_counts().shape  #ka\u00e7 farkl\u0131 ma\u011faza id'si oldu\u011funu g\u00f6sterir\nprint(\"Ma\u011faza \u0130d\",magaza_id)\nurun_id=test[\"item_id\"].value_counts().shape  #ka\u00e7 farkl\u0131 ma\u011faza id'si oldu\u011funu g\u00f6sterir\nprint(\"\u00dcr\u00fcn \u0130d \",urun_id)","dfc4f798":"plt.plot(test.shop_id,test.item_id) \n\nplt.title(\"shop_id - item_id Grafi\u011fi\")\n\nplt.xlabel(\"shop_id\")\n\nplt.ylabel(\"item_id\")\nplt.show()","57a13d05":"items.info()\nitems.head()","4636a676":"urun_adi=items[\"item_name\"].value_counts().shape  #ka\u00e7 farkl\u0131 \u00fcr\u00fcn \u00e7e\u015fidi oldu\u011funu g\u00f6sterir\nprint(\"\u00dcr\u00fcn \u00c7e\u015fidi\",urun_adi)\nurun_kategori=items[\"item_category_id\"].value_counts().shape  #ka\u00e7 farkl\u0131 \u00fcr\u00fcn kategorisi oldu\u011funu g\u00f6sterir\nprint(\"\u00dcr\u00fcn Kategori Say\u0131s\u0131\",urun_kategori)","edfeb125":"item_categ.info()\nitem_categ.head()","22eeff0f":"shops.info()\nshops.head()","5bfcf7fe":"sales_train.info()\nsales_train.head()","9daabb65":"sales_train['year'] = pd.to_datetime(sales_train['date']).dt.strftime('%Y')\nsales_train['month'] = sales_train.date.apply(lambda x: datetime.strptime(x,'%d.%m.%Y').strftime('%m')) \nsales_train.head()","81b21003":"yil=sales_train[\"year\"].value_counts().shape  \nprint(\"yil\",yil)\nyil = sales_train['year'].unique() \nyil","8496c309":"yil1=sales_train[sales_train[\"year\"]==\"2013\"][\"item_id\"] #red\nyil2=sales_train[sales_train[\"year\"]==\"2014\"][\"item_id\"] #green\nyil3=sales_train[sales_train[\"year\"]==\"2015\"][\"item_id\"] #blue\n\nplt.figure(figsize=(15,5))\nsns.distplot(yil1,color=\"red\") #da\u011f\u0131l\u0131m grafi\u011fi\nsns.distplot(yil2,color=\"green\")\nsns.distplot(yil3,color=\"blue\")","5052ac0d":"new_data = sales_train.copy()\n\nnew_data = new_data.pivot_table(index=['shop_id', 'item_id'],values=['item_cnt_day'],columns=['date_block_num'],  fill_value=0, aggfunc='sum').reset_index()\n\nnew_data.head()","233ef86d":"new_data = pd.merge(test,new_data,on = ['item_id','shop_id'],how = 'left')\nnew_data.head()","6529ef67":"new_data.fillna(0,inplace = True)\nnew_data.head()","86924954":"new_data.drop(['shop_id','item_id','ID'],inplace = True, axis = 1)\nnew_data.head() ","2c771b1f":"# X e\u011fitim veri k\u00fcmesini new_datan\u0131n son s\u00fctunu olarak al\u0131yoruz\nX_train = np.expand_dims(new_data.values[:,:-1],axis = 2)\n# son s\u00fctun etiketimiz\ny_train = new_data.values[:,-1:]\n# X test veri k\u00fcmesi i\u00e7in new_datan\u0131n ilk s\u00fctunu olarak al\u0131yoruz\nX_test = np.expand_dims(new_data.values[:,1:],axis = 2)\n\nprint(X_train.shape,y_train.shape,X_test.shape)","6d49f1ee":"regressor = Sequential()\n\nregressor.add(SimpleRNN(units= 64, activation='relu', use_bias= True, return_sequences = True, input_shape = (X_train.shape[1], 1)))\nregressor.add(Dropout(0.2))\n\nregressor.add(SimpleRNN(units= 64, activation='relu', use_bias= True, return_sequences = True))\nregressor.add(Dropout(0.2))\n\nregressor.add(SimpleRNN(units= 64, activation='relu', use_bias= True, return_sequences = True))\nregressor.add(Dropout(0.2))\n\nregressor.add(SimpleRNN(units= 64))\nregressor.add(Dropout(0.2))\n\nregressor.add(Dense(units =1))\n\nregressor.compile(optimizer = 'adam', loss ='mean_squared_error', metrics=['accuracy'])\n\nregressor.summary()","f7cbb5c2":"training_model=regressor.fit(X_train, y_train, validation_split=0.3, epochs = 5, batch_size = 4096)","5bafeb60":"y_predict = regressor.predict(X_test)","d9a1be98":"def create_hyperparams_grid(optimizer):\n    grid_model = Sequential()\n    grid_model.add(SimpleRNN(units= 64, activation='relu', use_bias= True, return_sequences = True, input_shape = (X_train.shape[1], 1)))\n    grid_model.add(Dropout(0.2))\n    grid_model.add(SimpleRNN(units= 64, activation='relu', use_bias= True, return_sequences = True))\n    grid_model.add(Dropout(0.2))\n    grid_model.add(SimpleRNN(units= 64, activation='relu', use_bias= True, return_sequences = True))\n    grid_model.add(Dropout(0.2))\n    grid_model.add(SimpleRNN(units= 64))\n    grid_model.add(Dropout(0.2))\n    grid_model.add(Dense(1))\n  \n    grid_model.compile(loss = 'mse',optimizer = optimizer, metrics = ['accuracy'])\n    \n    return regressor\n\ngrid_model = KerasClassifier(build_fn=create_hyperparams_grid)\n\nparameters = {'batch_size' : [4000,4096],'epochs' : [5,10],'optimizer' : ['adam','Adadelta'] }\n\ngrid_search  = GridSearchCV(estimator = grid_model,param_grid = parameters,scoring = 'accuracy',cv = 2)","2fdce0ac":"grid_search = grid_search.fit(X_train,y_train)","62be513d":"best_parameters = grid_search.best_params_\nbest_accuracy = grid_search.best_score_\nprint(\"En iyi parametreler:\", best_parameters)\nprint(\"En iyi do\u011fruluk de\u011feri:\", best_accuracy)","1c2fde40":"y_predict = y_predict.clip(0,20)\n \nsonuc = pd.DataFrame({'ID':test['ID'],'item_cnt_month':y_predict.ravel()})\nsonuc.head()","f6fe5f1b":"sonuc.to_csv('sonuc_tahmin.csv',index = False)","fd170ab7":"* value_counts().shape methodu ile ka\u00e7 farkl\u0131 y\u0131la ait verilerin oldu\u011fu d\u00f6nd\u00fcr\u00fcl\u00fcr\n\n* unique() methodu ile benzersiz olanlar dizisi g\u00f6r\u00fcnt\u00fclenir","abb078a9":"** Bir sonuc ad\u0131nda bir de\u011fi\u015fken olu\u015ftur ve i\u00e7ine ID ve item_cnt_mounth s\u00fctunlar\u0131n\u0131 grupland\u0131rd\u0131\u011f\u0131n test veri k\u00fcmesinden gelen tahmin de\u011ferlerini atan\u0131r\n","4c0840a0":"** Tahminler csv dosyas\u0131na \u00e7\u0131kt\u0131 olarak aktar\u0131l\u0131r","64809835":"** sales_train veri k\u00fcmesi i\u00e7indeki date de\u011fi\u015fkeninde belirtilen tarihleri ay ve y\u0131la g\u00f6re s\u0131n\u0131fland\u0131rma i\u015flemi yap\u0131l\u0131r","972b568d":"** Gerekli veri k\u00fcmeleri eklenir","98b5d17c":"** test datas\u0131 ile new_data merge() methodu ile  birle\u015ftirilir ve d\u00fczenlenilir","758a0c2f":"** GridSearch ile en iyi \u00e7al\u0131\u015fan parametreler bulunur","dac37642":"* Y\u0131llara ait da\u011f\u0131l\u0131m grafi\u011fi g\u00f6sterilir","a2939e2f":"* fillna() methodu ile t\u00fcm NaN de\u011ferleri 0 ile doldurulur","8c3796c2":"# B\u00fcy\u00fck Veri Final Projesi","432bdcc5":"** K\u00fct\u00fcphaneler import edilir","3cfbf112":"** training_model ad\u0131nda bir nesne olu\u015fturulur ve olu\u015fturulan bu nesne modeli SimpleRnn ile e\u011fitilir","d5cdfbc3":"* En iyi parametreler se\u00e7ilir","909ff314":"** Veri k\u00fcmesi e\u011fitimi i\u00e7in Sequential ad\u0131nda bir nesne olu\u015ftularak RNN ba\u015flat\u0131l\u0131r ve katmanlar eklenir son olarak derleme yap\u0131l\u0131r","f2de1c3c":"* drop() methodu ile istenilen etiketler sat\u0131r ve s\u00fctunlardan \u00e7\u0131kar\u0131l\u0131r","b9e76565":"** Veri k\u00fcmesi e\u011fitim ve test veri k\u00fcmeleri olarak ayr\u0131l\u0131r ","0f93b1fe":"** new_data ad\u0131nda bir nesne olu\u015fturulur ve sales_train veri k\u00fcmesi de\u011fi\u015fkenleri yeni olu\u015fturulan nesneye atan\u0131r\n\n*pivot_table() verileri grupland\u0131rmak i\u00e7in kullan\u0131l\u0131r*\n\n*>index: gruplama \u00f6l\u00e7\u00fctleri*\n\n*>values: toplanacak s\u00fctun*\n      \n*>columns: gruplay\u0131c\u0131*   \n\n*>fill_value: eksik de\u011ferlere 0 atar*\n\n*>aggfunc: i\u015flev*\n\n*>reset.index: data.frame dizinini s\u0131f\u0131rlama*","17a6874a":"* value_counts() methodu, s\u00fctundaki NaN olmayan her bir unique de\u011ferin ka\u00e7 kez kullan\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6steren bir seri d\u00f6nd\u00fcr\u00fcr\n\n* shape ise bu seri dizisinin \u015feklini d\u00f6nd\u00fcr\u00fcr","97eaa5d3":"* info() methodu ile, girdi say\u0131s\u0131, her bir s\u00fctundaki null olmayan girdi say\u0131s\u0131 ve s\u00fctunun veri tipi bilgilerine eri\u015filir.\n\n* head() methodu ile, veri k\u00fcmesi i\u00e7eri\u011fi g\u00f6r\u00fcnt\u00fclenme sa\u011flan\u0131r."}}