{"cell_type":{"7eb25025":"code","f437a964":"code","9feafefd":"code","9665c404":"code","e2dbaf02":"code","a3b4ab44":"code","2a0d0e68":"code","92958868":"code","e4c7f507":"code","45af18dc":"code","958b4aa2":"code","3cfbaea0":"code","51650743":"code","7860d556":"code","959a97fd":"code","ee3905cd":"code","bf32bf1d":"markdown","fcbb06fc":"markdown","6adfd276":"markdown","c897852b":"markdown","2e140739":"markdown"},"source":{"7eb25025":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f437a964":"pip install openpyxl","9feafefd":"athletes_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\nEntriesGender_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\nTeams_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\nCoaches_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\nMedals_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx')","9665c404":"athletes_df.head()\n","e2dbaf02":"EntriesGender_df.head()\n","a3b4ab44":"Teams_df.head()\n","2a0d0e68":"Coaches_df.head()\n","92958868":"Medals_df.head()","e4c7f507":"import seaborn as sns\nimport matplotlib.pyplot as plt","45af18dc":"EntriesGender_df = EntriesGender_df.sort_values('Total', ascending = False)","958b4aa2":"EntriesGender_df.head()","3cfbaea0":"import matplotlib.pyplot as plt\n%matplotlib inline\nfig = plt.figure(figsize = (20, 40))\n \n# creating the bar plot for Male and Female participant\nplt.barh(EntriesGender_df.Discipline,EntriesGender_df.Male.sort_values() , alpha = 0.7)\nplt.barh(EntriesGender_df.Discipline,EntriesGender_df.Female.sort_values(), height= 0.4)\ncolors = {'Female':'#D95319', 'Male':'#4DBEEE'}         \nlabels = list(colors.keys())\nhandles = [plt.Rectangle((0,0),1,1, color=colors[label]) for label in labels]\nplt.legend(handles, labels)\nplt.ylabel('Discipline', fontsize = 20)\nplt.xlabel('Total Participants', fontsize = 20)","51650743":"top_10 = Medals_df.sort_values('Rank by Total').head(10)\nfig = plt.figure(figsize = (10, 10))\nplt.bar(top_10['Team\/NOC'], top_10['Total'], width=0.8, color='green')\n#plt.title('TOP 10 COUNTRIES WITH HIGHEST TOTAL MEDALS', fontsize=20)\nplt.xlabel('Countries')\nplt.xticks(rotation=90)\nplt.ylabel('No. of medals')\nplt.show()","7860d556":"fig = plt.figure()\nfig.set_facecolor('White')\nplt.pie(Medals_df['Total'], labels=Medals_df['Team\/NOC'], radius=5, rotatelabels=90)\nplt.show()","959a97fd":"fem = sum(EntriesGender_df['Female'])\nmale = sum(EntriesGender_df['Male'])\nseries = [fem, male]\nnames=['Female', 'Male']\nfig=plt.figure()\nfig =  plt.figure(figsize = (10, 10))\nfig.set_facecolor('White')\nplt.pie(series, labels=names, wedgeprops={'edgecolor':'black', 'linewidth': '2'}, autopct='%1.1f%%')\n\n#plt.line(final , x = 'Year' , y = [ 'Male' , 'Female' ])\nplt.show()","ee3905cd":"num_coa = Coaches_df.groupby('NOC').size()\nnum_coa=num_coa.to_frame('Count') \nfig =  plt.figure(figsize = (10, 10))\nnum_coa=num_coa.sort_values('Count', ascending=False).head(15)\nplt.bar(num_coa.index.values, num_coa['Count'], color='Blue')\n#plt.title('COUNTRIES WITH THE HIGHEST NUMBER OF COACHES', fontsize=20)\nplt.xlabel('Countries')\nplt.ylabel('Coach Count')\nplt.xticks(rotation=90)\nplt.show()","bf32bf1d":"# Male and Female Participating in events","fcbb06fc":"# COUNTRIES WITH THE HIGHEST NUMBER OF COACHES","6adfd276":"# TOP 10 COUNTRIES WITH HIGHEST TOTAL MEDALS","c897852b":"# Female to male participation","2e140739":"# Overall medal distribution"}}