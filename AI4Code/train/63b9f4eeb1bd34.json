{"cell_type":{"1e97a673":"code","6bc4f8ad":"code","79b85f63":"code","29bc37f6":"code","4d6931d2":"code","1b24da91":"code","69a0b0ea":"code","e09379be":"code","6141e344":"code","fe20b432":"code","5da323a9":"code","dfc8d39c":"code","53a36241":"code","82ed560c":"code","236838c9":"code","50da6c70":"code","613625f5":"code","117c1af8":"code","706278bd":"code","b146352e":"code","83300e0b":"code","5898e328":"code","faf2388d":"code","3c26be13":"code","13b23e1d":"code","71304202":"code","bd083ed2":"code","37a75b40":"code","05e4c5ab":"code","281eb4b9":"code","16904823":"code","ba9ff56f":"code","e307db45":"code","feb83fa9":"code","61f0bdfe":"code","59ad99c0":"code","f55496d4":"code","a7cd5053":"code","04a23815":"code","14d7d9ba":"code","71018668":"code","f3fd1745":"code","f39d4769":"code","755d822c":"code","826604ce":"code","1e8fce61":"code","7442d635":"markdown"},"source":{"1e97a673":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6bc4f8ad":"data = pd.read_csv('\/kaggle\/input\/bank-marketing-campaigns-dataset\/bank-additional-full.csv',sep=\";\")\ndata","79b85f63":"import seaborn as sns\nsns.heatmap(data.isnull())","29bc37f6":"data.age","4d6931d2":"sns.boxplot(data.age)","1b24da91":"data.age.quantile(0.05) ","69a0b0ea":"data.age.quantile(0.95)","e09379be":"data[(data.age>data.age.quantile(0.05))&(data.age<data.age.quantile(0.95))]","6141e344":" data[(data.age>data.age.quantile(0.05))|(data.age<data.age.quantile(0.95))]","fe20b432":"data['z_score'] = data['age']\ndata.head()","5da323a9":"data.z_score = (data.age>data.age.mean())\/data.age.std()\ndata[['z_score']]","dfc8d39c":"data[(data.z_score>-3)&(data.z_score<3)]","53a36241":"data[(data.z_score>-3)|(data.z_score<3)]","82ed560c":"data[data.age>data.age.mean()+ 3*data.age.std()]\n","236838c9":"data.dtypes","50da6c70":"x = data.iloc[:,0:20]\ny = data['y']","613625f5":"x","117c1af8":"y","706278bd":"x.dtypes","b146352e":"x.iloc[:,1].unique()","83300e0b":"nom_col = [1,2,3,8,9,14]\nordinal_col = [4,5,6,7]\nkbins_col = [18]\nBina_col = [0]","5898e328":"from sklearn.preprocessing import OneHotEncoder,OrdinalEncoder,KBinsDiscretizer,Binarizer\nfrom sklearn.compose import make_column_transformer\nfrom sklearn import set_config\ntrans = make_column_transformer((OneHotEncoder(sparse = False),nom_col),\n                                (OrdinalEncoder(),ordinal_col),\n                                (KBinsDiscretizer(),kbins_col),\n                                (Binarizer(threshold = 55),Bina_col),\n                                 remainder = 'passthrough')\nset_config(display = 'diagram')\ntrans","faf2388d":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3) ","3c26be13":"x_train.shape","13b23e1d":"y_train.shape","71304202":"x_test.shape","bd083ed2":"y_test.shape","37a75b40":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import make_pipeline\nKNN = KNeighborsClassifier(7)\npipe1_KNN = make_pipeline(trans,KNN)\npipe1_KNN","05e4c5ab":"pipe1_KNN.fit(x_train,y_train)","281eb4b9":"pred_KNN = pipe1_KNN.predict(x_test)\npred_KNN","16904823":"from sklearn.metrics import accuracy_score\naccuracy_score(pred_KNN,y_test)*100","ba9ff56f":"sns.countplot(data.y)","e307db45":"from imblearn.over_sampling import RandomOverSampler,SMOTE\nover = RandomOverSampler()\no_x,o_y = over.fit_resample(x,y)\no_y.value_counts()","feb83fa9":"from imblearn.pipeline import make_pipeline\ns = SMOTE()\npipe_s = make_pipeline(trans,s,KNN)\npipe_s","61f0bdfe":"pipe_s.fit(x_train,y_train)","59ad99c0":"pred_s = pipe_s.predict(x_test)\npred_s","f55496d4":"accuracy_score(pred_s,y_test)*100","a7cd5053":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(solver = 'liblinear')\npipe_lr = make_pipeline(trans,lr)\npipe_lr","04a23815":"pipe_lr.fit(x_train,y_train)","14d7d9ba":"pred_lr = pipe_lr.predict(x_test)\npred_lr","71018668":"accuracy_score(pred_lr,y_test)*100","f3fd1745":"from sklearn.ensemble import VotingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import make_pipeline\nKNN = KNeighborsClassifier(3)\nsv = SVC(kernel = 'linear')\nDT = DecisionTreeClassifier()\nLr = LogisticRegression(solver = 'liblinear')\nmodel_v = VotingClassifier(estimators = [('x1',KNN),('x2',sv),('x3',DT)],voting = 'hard',verbose = True)\npipe_v = make_pipeline(trans,model_v)","f39d4769":"pipe_v","755d822c":"pipe_v.fit(x_train,y_train)","826604ce":"pred_v = pipe_v.predict(x_test)\npred_v","1e8fce61":"accuracy_score(pred_v,y_test)*100","7442d635":"Removal of outlie from box plot"}}