{"cell_type":{"dbf8012f":"code","35ddf9e8":"code","bb8ed16a":"code","42c9a946":"code","2b34c596":"code","f490577b":"code","aa63b88d":"code","0e18ea2e":"code","399133b8":"code","e8399a41":"code","e4ece50e":"code","e7975f82":"code","700877c1":"code","47500afc":"code","7f3d5b35":"code","f0604160":"code","97801b59":"code","9612ca8f":"code","c0f8902a":"code","ecda854f":"code","2482d322":"code","ad123ba6":"code","1e535b5a":"code","5a65cef4":"code","2294fe94":"code","31e3de95":"code","8d6438de":"code","c6cf5567":"code","842e0be5":"code","79b2d7e4":"code","9b9d760e":"code","6b48bb8a":"code","4b213f03":"code","4b27b759":"markdown","569988a7":"markdown","6af21d37":"markdown","1319d734":"markdown","6acb82eb":"markdown","334a52f7":"markdown"},"source":{"dbf8012f":"import pandas as pd\nimport numpy as np\nfrom pathlib import Path\nfrom datetime import datetime\nimport time\nimport matplotlib.pyplot as plt\nplt.rcParams[\"figure.figsize\"]=(20,8)\nINPUT=Path(\"..\/input\/g-research-crypto-forecasting\")","35ddf9e8":"def ResidualizeMarket(df, mktColumn, window):\n  if mktColumn not in df.columns:\n    return df\n\n  mkt = df[mktColumn]\n\n  num = df.multiply(mkt.values, axis=0).rolling(window).mean().values  #numerator of linear regression coefficient\n  denom = mkt.multiply(mkt.values, axis=0).rolling(window).mean().values  #denominator of linear regression coefficient\n  beta = np.nan_to_num( num.T \/ denom, nan=0., posinf=0., neginf=0.)  #if regression fell over, use beta of 0\n\n  resultRet = df - (beta * mkt.values).T  #perform residualization\n  resultBeta = 0.*df + beta.T  #shape beta\n\n  return resultRet.drop(columns=[mktColumn]), resultBeta.drop(columns=[mktColumn])","bb8ed16a":"# Function log_return_ahead computes R_t = log(P_{t+16} \/ P_{t+1})\ndef log_return_ahead(series, periods=1): \n    return -np.log(series).diff(periods=-periods).shift(-1)","42c9a946":"%%time\ntrain_df = pd.read_csv(INPUT\/\"train.csv\")\ntrain_df.head()","2b34c596":"prices = train_df.pivot(index=[\"timestamp\"], columns=[\"Asset_ID\"], values=[\"Close\"])","f490577b":"prices.columns = [f\"A{a}\" for a in range(14)]","aa63b88d":"prices = prices.reindex(range(prices.index[0], prices.index[-1]+60,60), method='pad')","0e18ea2e":"prices.info()","399133b8":"prices.index = prices.index.map(lambda x: datetime.fromtimestamp(x))","e8399a41":"prices.sort_index(inplace=True)","e4ece50e":"prices.tail()","e7975f82":"log_returns_15min = log_return_ahead(prices, periods=15)","700877c1":"log_returns_15min.info()","47500afc":"log_returns_15min.tail()","7f3d5b35":"log_returns_15min[-200:].plot(grid=True)","f0604160":"assets_df = pd.read_csv(INPUT\/\"asset_details.csv\", index_col = \"Asset_ID\")\nassets_df.sort_index(inplace=True)\nassets_df","97801b59":"weights = assets_df.Weight.values\nweights","9612ca8f":"weighted_avg_market_log_returns = log_returns_15min.mul(weights, axis='columns').mean(axis=1)","c0f8902a":"log_returns_15min.mul(weights, axis='columns')[-200:].plot()\nweighted_avg_market_log_returns[-200:].plot(style=\"k8\", grid=True)","ecda854f":"log_returns_15min[\"market\"] = weighted_avg_market_log_returns\nresidualized_market_returns, beta = ResidualizeMarket(log_returns_15min, \"market\", window=3750)","2482d322":"residualized_market_returns[-200:].plot(grid=True)","ad123ba6":"target = train_df.pivot(index=[\"timestamp\"], columns=[\"Asset_ID\"], values=[\"Target\"])","1e535b5a":"target.columns = [f\"A{a}\" for a in range(14)]","5a65cef4":"target = target.reindex(range(target.index[0], target.index[-1]+60,60), method='pad')","2294fe94":"target.index = target.index.map(lambda x: datetime.fromtimestamp(x))","31e3de95":"target.sort_index(inplace=True)","8d6438de":"target[-200:].plot(grid=True)","c6cf5567":"residualized_market_returns[\"A0\"][-200:].plot(grid=True)\ntarget[\"A0\"][-200:].plot(style='r--', grid=True)","842e0be5":"residualized_market_returns[\"A1\"][-200:].plot()\ntarget[\"A1\"][-200:].plot(style='r--',grid=True)","79b2d7e4":"target_diffs = residualized_market_returns - target","9b9d760e":"target_diffs.dropna(inplace=True)","6b48bb8a":"np.quantile(target_diffs, [0.025, 0.975])","4b213f03":"plt.hist(target_diffs.values.reshape(-1), bins=1000)\nplt.xlim((-0.01,0.01))\nplt.grid()\nplt.show()","4b27b759":"### Conclusion\n\nThe targets provided in `train.csv` are very close to the values computed by ```ResidualizeMarket``` function provided here https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting\/discussion\/286778.\n","569988a7":"### Compare computed with provided target","6af21d37":"### Log Returns over 15 Minutes\n\n$$R^a(t) = log (P^a(t+16)\\ \/\\ P^a(t+1))$$\n","1319d734":"### Weighted Average Market Returns\n\n$$M(t) = \\frac{\\sum_a w^a R^a(t)}{\\sum_a w^a}  $$","6acb82eb":"### Price of assets\n$$P^a$$","334a52f7":"## Target Computation\n\nThis notebook attempts to compute target as described here:\n\nhttps:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting\/discussion\/286778\n\nVersion 2.0 improves readability by avoiding some unnecessary shift operations."}}