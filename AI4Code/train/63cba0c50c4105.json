{"cell_type":{"9069b1a2":"code","fe7af658":"code","7cc00dde":"code","e45c3b3c":"code","0f1e3301":"code","9bef62d7":"code","8f7b50c6":"code","63ec2de3":"code","b54f6e26":"code","826ba9c5":"code","adfc006e":"code","f64757e7":"code","70c048b2":"code","edff651d":"code","6fc11e63":"code","d28538f7":"code","555eff67":"code","86b923fc":"code","b113f8d7":"code","e0c85ea8":"code","5a49a096":"code","480155f8":"code","bdfc88da":"code","a1e8ad82":"code","13242055":"code","32b60d03":"code","767ebeea":"code","d9f8ea09":"code","dabf8e4b":"code","5d99ebf3":"code","5f38a749":"code","c2614fe4":"code","592e372f":"code","e48fb8e5":"code","f3fcc48d":"code","d3877879":"code","34108c5e":"code","8dd4c789":"code","c37402b6":"code","c2024258":"code","dac197ab":"code","e1b5ec04":"code","4d22023a":"code","0f1511d1":"code","d1f57fb3":"code","7fd2ce3e":"code","99dc184c":"code","62227e93":"code","84c2bf0c":"code","7893cd55":"code","0e98cc49":"code","8907f4f7":"code","4a2bb83e":"code","338763ef":"code","75a9c638":"code","cd24a93d":"code","803f1208":"code","856e7f5b":"code","30054191":"code","3abc7935":"code","e7e2a3b9":"code","aba0b9e0":"code","060aed62":"code","2dd4abcd":"code","70620011":"code","91815898":"code","d81eaca4":"code","dd74cada":"code","6ac4699b":"code","349007da":"code","5ab1e5c6":"code","6a887089":"code","9aafabe4":"code","6c0a51ea":"code","a4e23dc5":"code","dbb87196":"code","31483047":"code","93a864b2":"code","c5bffe2e":"code","7e03cf13":"code","25478cc0":"code","1cd24cfb":"code","2adff130":"markdown","ebd4453e":"markdown","313788cd":"markdown","d5dc0a08":"markdown","d372621a":"markdown","84a436eb":"markdown","95cb8182":"markdown","6718d140":"markdown","ac16327a":"markdown","8d39dcbc":"markdown","27fb144c":"markdown","9c8c7127":"markdown","aa07c080":"markdown","43b0defa":"markdown","3a9303d3":"markdown"},"source":{"9069b1a2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","fe7af658":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7cc00dde":"import numpy as np\nimport pandas as pd\npd.set_option('mode.chained_assignment', None)\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\nsns.set()","e45c3b3c":"# load the preprocessed CSV data\ndata = pd.read_csv('\/kaggle\/input\/credit-card-customers\/BankChurners.csv')","0f1e3301":"# We have 2 Columns that need to be droped as adviced \n# \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\"\n# & \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\"","9bef62d7":"bc_data=data.drop(['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1','Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'], axis=1)","8f7b50c6":"# eyeball the data\nbc_data.describe(include='all')","63ec2de3":"# Total records 10,127\n# No nulls in any field\n# Most of the Clients are:\n#  Females (5,358 Clients) \n#  Graduates (3,128 Clients)\n#  Married (4,687 Clients)\n#  Income < $40K (3,561 Clients)\n#  Holding Blue Credit Card (9,436 Clients)\n# 8,500 out of 10,127 Clients are still Existing","b54f6e26":"bc_data.info()","826ba9c5":"fig, axes = plt.subplots(figsize=(15,15),nrows=3, ncols=2)\nsns.histplot(bc_data['Customer_Age'],ax=axes[0,0])\nsns.histplot(bc_data['Gender'],ax=axes[1,0])\nsns.histplot(bc_data['Marital_Status'],ax=axes[2,0])\nsns.histplot(bc_data['Card_Category'],ax=axes[0,1])\nvis_ed=sns.histplot(bc_data['Education_Level'],ax=axes[1,1])\nvis_inc=sns.histplot(bc_data['Income_Category'],ax=axes[2,1])\nfig.tight_layout()","adfc006e":"# Most Clients are middle age (between 40 and 55)\n\n# As mentioned above most Clients are having the Blue Credit Card Category. Very few holding Gold, Silver, or Platinum\n\n# We have a bit more Female Clients than Males\n\n# We have around 1500 Clients, where their education level is \"Unknown\"!\n# Those with High School, Gradute education level or still in College along with the Uneducated Clients \n# are representing 65% of Credit Card holders\n\n# There is no huge difference between Married and Single Clients, however we have aprox. 1000 more Married Clients\n# 600-800 Clients are with unknown Marital Status and almost the same as Divorced\n\n# We have around 1100 Clients with Unknown income range.","f64757e7":"# Yes we do not have NULLS in datset, however we have alot of uknown information about our Clients in \n# education level, income range, and marital status.\n# We will do further investigation, to see if we can find practical approach to assume these unkonw fields.\n# First let us try to know more about our Clients","70c048b2":"bc_data['Marital_Status'].unique()","edff651d":"bc_data['Education_Level'].unique()","6fc11e63":"bc_data['Income_Category'].unique()","d28538f7":"sns.set(font_scale = 1.5)\nhue_order=['Married', 'Single', 'Divorced','Unknown']\nrow_order=['Doctorate','Post-Graduate','Graduate','College','High School','Uneducated','Unknown']\norder=['Less than $40K','$40K - $60K','$60K - $80K','$80K - $120K','$120K +','Unknown']\ng=sns.catplot(x=\"Income_Category\", y='Customer_Age', col=\"Gender\", row=\"Education_Level\", hue=\"Marital_Status\",\n              order=order,hue_order=hue_order,row_order=row_order, kind=\"boxen\", data=bc_data, height=5, aspect=20\/10)\ng.set_xticklabels(rotation=30)","555eff67":"## I will visualize all males with different education level (except those unkown) against their income range\n## I will also visualize all males with unkown education level against their income range\n## I will then see the highest probability for each group and assign them to the corresponding education level","86b923fc":"M_EL=pd.DataFrame\nM_EL=M_EL({'count' : bc_data.groupby( [\"Income_Category\",'Education_Level',\"Gender\"] ).count()[\"CLIENTNUM\"]}).reset_index().sort_values(by='count',ascending=True)\nM_EL=M_EL[(M_EL[\"Income_Category\"]!=\"Unknown\") & (M_EL[\"Education_Level\"]!=\"Unknown\") & (M_EL[\"Gender\"]==\"M\")]\nM_EL.reset_index(inplace=True)\nouter = M_EL.groupby('Education_Level').sum()[\"count\"]\ninner = M_EL.groupby(['Education_Level', 'Income_Category']).sum()[\"count\"]\ninner_labels = inner.index.get_level_values(1)\n\nfig, ax = plt.subplots(figsize=(15,15))\n\nsize = 0.3\n\nax.pie(outer.values.flatten(), radius=1,\n       labels=outer.index,\n       autopct='%1.0f%%',\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.pie(inner.values.flatten(), radius=0.75, \n       labels = inner_labels,\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.set(aspect=\"equal\", title='Nested Pie - Males Education Level + Income Range')\nplt.show()\ninner","b113f8d7":"M_EL_UK=pd.DataFrame\nM_EL_UK=M_EL_UK({'count' : bc_data.groupby( [\"Income_Category\",'Education_Level',\"Gender\"] ).count()[\"CLIENTNUM\"]}).reset_index().sort_values(by='count',ascending=True)\nM_EL_UK=M_EL_UK[(M_EL_UK[\"Education_Level\"]==\"Unknown\") & (M_EL_UK[\"Gender\"]==\"M\")]\nM_EL_UK.reset_index(inplace=True)\nouter = M_EL_UK.groupby('Education_Level').sum()[\"count\"]\ninner = M_EL_UK.groupby(['Education_Level', 'Income_Category']).sum()[\"count\"]\ninner_labels = inner.index.get_level_values(1)\n\nfig, ax = plt.subplots(figsize=(10,10))\n\nsize = 0.3\n\nax.pie(outer.values.flatten(), radius=1,\n       labels=outer.index,\n       autopct='%1.0f%%',\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.pie(inner.values.flatten(), radius=0.75, \n       labels = inner_labels,\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.set(aspect=\"equal\", title='Nested Pie - Males Unknown Education Level + Income Range')\nplt.show()\ninner","e0c85ea8":"## 36% of Male Clients are Graduates, with the highest income range probability.\n## I have no other way other than assigning all Male with unknow education level to Graduates.\n## This is not a very reliable approach, however I can not find any other relevant factor or approaches to use. \n## Appreciate to receive your thoughts or feedback about other possible approaches","5a49a096":"bc_data['Estimated']='N'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Education_Level == 'Unknown'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Education_Level == 'Unknown'),'Education_Level'] = 'Graduate'","480155f8":"## I will visualize all females with different education level (except those unkown) against their income range\n## I will also visualize all females with unkown education level against their income range\n## I will then see the highest probability for each group and assign them to the corresponding education level","bdfc88da":"F_EL=pd.DataFrame\nF_EL=F_EL({'count' : bc_data.groupby( [\"Income_Category\",'Education_Level',\"Gender\"] ).count()[\"CLIENTNUM\"]}).reset_index().sort_values(by='count',ascending=True)\nF_EL=F_EL[(F_EL[\"Income_Category\"]!=\"Unknown\") & (F_EL[\"Education_Level\"]!=\"Unknown\") & (F_EL[\"Gender\"]==\"F\")]\nF_EL.reset_index(inplace=True)\nouter = F_EL.groupby('Education_Level').sum()[\"count\"]\ninner = F_EL.groupby(['Education_Level', 'Income_Category']).sum()[\"count\"]\ninner_labels = inner.index.get_level_values(1)\n\nfig, ax = plt.subplots(figsize=(15,15))\n\nsize = 0.3\n\nax.pie(outer.values.flatten(), radius=1,\n       labels=outer.index,\n       autopct='%1.0f%%',\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.pie(inner.values.flatten(), radius=0.75, \n       labels = inner_labels,\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.set(aspect=\"equal\", title='nested pie')\nplt.show()\ninner","a1e8ad82":"F_EL_UK=pd.DataFrame\nF_EL_UK=F_EL_UK({'count' : bc_data.groupby( [\"Income_Category\",'Education_Level',\"Gender\"] ).count()[\"CLIENTNUM\"]}).reset_index().sort_values(by='count',ascending=True)\nF_EL_UK=F_EL_UK[(F_EL_UK[\"Education_Level\"]==\"Unknown\") & (F_EL_UK[\"Gender\"]==\"F\")]\nF_EL_UK.reset_index(inplace=True)\nouter = F_EL_UK.groupby('Education_Level').sum()[\"count\"]\ninner = F_EL_UK.groupby(['Education_Level', 'Income_Category']).sum()[\"count\"]\ninner_labels = inner.index.get_level_values(1)\n\nfig, ax = plt.subplots(figsize=(10,10))\n\nsize = 0.3\n\nax.pie(outer.values.flatten(), radius=1,\n       labels=outer.index,\n       autopct='%1.0f%%',\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.pie(inner.values.flatten(), radius=0.75, \n       labels = inner_labels,\n       wedgeprops=dict(width=size, edgecolor='w'))\n\nax.set(aspect=\"equal\", title='nested pie')\nplt.show()\ninner","13242055":"## 37% of Female Clients are Graduates, with the highest income range probability.\n## I have no other  way other than assigning all Male with unknow education level to Graduates.\n## This is not a very reliable approach, however I can not find any other relevant factor or approaches to use. \n## Appreciate to receive your thoughts or feedback about other possible approaches","32b60d03":"bc_data.loc[(bc_data.Gender == 'F') & (bc_data.Education_Level == 'Unknown'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'F') & (bc_data.Education_Level == 'Unknown'),'Education_Level'] = 'Graduate'","767ebeea":"M_MS=bc_data[(bc_data[\"Marital_Status\"]==\"Unknown\") & (bc_data[\"Dependent_count\"]>1) \n                  & (bc_data[\"Gender\"]==\"M\")]\nA_M_MS=bc_data[(bc_data[\"Marital_Status\"]!=\"Unknown\") & (bc_data[\"Gender\"]==\"M\")]\nfig, axes = plt.subplots(2,figsize=(25, 35))\nsns.histplot(x=\"Dependent_count\", hue=\"Customer_Age\",data=M_MS,ax=axes[0])\nsns.stripplot(x=\"Dependent_count\",y=\"Customer_Age\",hue=\"Marital_Status\", dodge=True, data=A_M_MS,ax=axes[1])\nsns.violinplot(x=\"Dependent_count\", y=\"Customer_Age\", hue=\"Marital_Status\", inner=None,color=\".8\",data=A_M_MS,ax=axes[1])\nplt.show()","d9f8ea09":"F_MS=bc_data[(bc_data[\"Marital_Status\"]==\"Unknown\") & (bc_data[\"Dependent_count\"]>1) \n                  & (bc_data[\"Gender\"]==\"F\")]\nA_F_MS=bc_data[(bc_data[\"Marital_Status\"]!=\"Unknown\") & (bc_data[\"Gender\"]==\"F\")]\nfig, axes = plt.subplots(2,figsize=(25, 35))\nsns.histplot(x=\"Dependent_count\", hue=\"Customer_Age\",data=F_MS,ax=axes[0])\nsns.stripplot(x=\"Dependent_count\",y=\"Customer_Age\",hue=\"Marital_Status\", dodge=True, data=A_F_MS,ax=axes[1])\nsns.violinplot(x=\"Dependent_count\", y=\"Customer_Age\", hue=\"Marital_Status\", inner=None,color=\".8\",data=A_F_MS,ax=axes[1])\nplt.show()","dabf8e4b":"## Unfortunately, I cannot find any obvious patterns. \n## I will simply drop all unkown Marital Status","5d99ebf3":"bc_data= bc_data[bc_data.Marital_Status!= 'Unknown']","5f38a749":"# Let's go through Female Clients first as it is more clearer\n# Speaking of clarity, it is so obvious that all Female Clients have 60K or less Income Salary at all Levels Eductation?!!\n# However, it appears that most of the Unknow Income Category are Females?!!","c2614fe4":"from plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as g\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nfrom statsmodels.formula.api import ols\nimport plotly.graph_objects as go","592e372f":"F_D_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_P_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_G_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_C_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_H_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_U_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nT_F_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Gender\"]==\"F\")]\n\n## labels and values:\nlabels = ['Doctrate','Post-Graduate','Graduate','College','High School','Uneducated']\nvalues = [len(F_D_IncUK),len(F_P_IncUK),len(F_G_IncUK),len(F_C_IncUK),len(F_H_IncUK),len(F_U_IncUK)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Female - Unknow Income Range\")\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()\n\nprint(\"Count of Female-Doctrate-Unknown Income=\",len(F_D_IncUK),\n      '\\n'\"Count of Female-Post-Graduate-Unknown Income=\",len(F_P_IncUK),\n      '\\n'\"Count of Female-Graduate-Unknown Income=\",len(F_G_IncUK),\n      '\\n'\"Count of Female-College-Unknown Income=\",len(F_C_IncUK),\n      '\\n'\"Count of Female-High School-Unknown Income=\",len(F_H_IncUK),\n      '\\n'\"Count of Female-Uneducated-Unknown Income=\",len(F_U_IncUK),\n      '\\n','\\n'\"Total of Female with Unknown Income=\",len(T_F_IncUK))","e48fb8e5":"## I will explore the count percentage of females with known income ranges to see which income range is more likely for \n## for females with unkown income range to be.","f3fcc48d":"F_D_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_D_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K']\nvalues = [len(F_D_Inc40),len(F_D_Inc60)]\n\nfig = px.pie(bc_data, values=values, names=labels, color=labels,\n             color_discrete_map={'Female-Doctrate-Income < 40K':'lightcyan','Female-Doctrate-Income 40to60K':'cyan'})\n\nfig.update_layout(title_text=\"Odds of Income Range - Females & Doctorate\")\nfig.show()\n\nprint(\"Count of Female-Doctorates-Income < 40K=\",len(F_D_Inc40),\n      '\\n'\"Count of Female-Doctorate-Income 40to60K=\",len(F_D_Inc60))","d3877879":"# For \"Females-Doctorates-Unkown Income\" condition, they are 77% more likely to earn less than 40K annually\n# Accordingly, \"Female-Doctrate with Unkown Income\" will be added to \"Less Than 40K Annual Income\" group range.","34108c5e":"F_P_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_P_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K']\nvalues = [len(F_P_Inc40),len(F_P_Inc60)]\n\nfig = px.pie(bc_data, values=values, names=labels, color=labels,\n             color_discrete_map={'Female-Post-Graduate-Income < 40K':'lightcyan','Female-Post-Graduate-Income 40to60K':'cyan'})\n\nfig.update_layout(title_text=\"Odds of Income Range - Females & Post-Graduate\")\nfig.show()\n\nprint(\"Count of Female-Post-Graduate-Income < 40K=\",len(F_P_Inc40),\n      '\\n'\"Count of Female-Post-Graduate-Income 40to60K=\",len(F_P_Inc60))","8dd4c789":"# For \"Females-Post Graduate-Unkown Income\" condition, they are 72% more likely to earn less than 40K annually\n# Accordingly, \"Female-Post Graduate with Unkown Income\" will be added to \"Less Than 40K Annual Income\" group range.","c37402b6":"F_G_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_G_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"F\")]\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K']\nvalues = [len(F_G_Inc40),len(F_G_Inc60)]\n\nfig = px.pie(bc_data, values=values, names=labels, color=labels,\n             color_discrete_map={'Female-Graduate-Income < 40K':'lightcyan','Female-Graduate-Income 40to60K':'cyan'})\n\nfig.update_layout(title_text=\"Odds of Income Range - Females & Graduate\")\nfig.show()\n\nprint(\"Count of Female-Graduate-Income < 40K=\",len(F_G_Inc40),\n      '\\n'\"Count of Female-Graduate-Income 40to60K=\",len(F_G_Inc60))","c2024258":"# For \"Females-Graduate-Unkown Income\" condition, they are 76% more likely to earn less than 40K annually\n# Accordingly, \"Female-Graduate with Unkown Income\" will be added to \"Less Than 40K Annual Income\" group range.","dac197ab":"F_C_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_C_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"F\")]\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K']\nvalues = [len(F_C_Inc40),len(F_C_Inc60)]\n\nfig = px.pie(bc_data, values=values, names=labels, color=labels,\n             color_discrete_map={'Female-College-Income < 40K':'lightcyan','Female-College-Income 40to60K':'cyan'})\n\nfig.update_layout(title_text=\"Odds of Income Range - Females & College\")\nfig.show()\n\nprint(\"Count of Female-College-Income < 40K=\",len(F_C_Inc40),\n      '\\n'\"Count of Female-College-Income 40to60K=\",len(F_C_Inc60))","e1b5ec04":"# For \"Females-College-Unkown Income\" condition, they are 75% more likely to earn less than 40K annually\n# Accordingly, \"Female-College with Unkown Income\" will be added to \"Less Than 40K Annual Income\" group range.","4d22023a":"F_H_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_H_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"F\")]\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K']\nvalues = [len(F_H_Inc40),len(F_H_Inc60)]\n\nfig = px.pie(bc_data, values=values, names=labels, color=labels,\n             color_discrete_map={'Female-High School-Income < 40K':'lightcyan','Female-High School-Income 40to60K':'cyan'})\n\nfig.update_layout(title_text=\"Odds of Income Range - Females & High School\")\nfig.show()\n\nprint(\"Count of Female-High School-Income < 40K=\",len(F_H_Inc40),\n      '\\n'\"Count of Female-High School-Income 40to60K=\",len(F_H_Inc60))","0f1511d1":"# For \"Females-High School-Unkown Income\" condition, they are 76% more likely to earn less than 40K annually\n# Accordingly, \"Female-High School with Unkown Income\" will be added to \"Less Than 40K Annual Income\" group range.","d1f57fb3":"F_U_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"F\")]\nF_U_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"F\")]\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K']\nvalues = [len(F_U_Inc40),len(F_U_Inc60)]\n\nfig = px.pie(bc_data, values=values, names=labels, color=labels,\n             color_discrete_map={'Female-Uneducated-Income < 40K':'lightcyan','Female-Uneducated-Income 40to60K':'cyan'})\n\nfig.update_layout(title_text=\"Odds of Income Range - Females & Uneducated\")\nfig.show()\n\nprint(\"Count of Female-Uneducated-Income < 40K=\",len(F_U_Inc40),\n      '\\n'\"Count of Female-Uneducated-Income 40to60K=\",len(F_U_Inc60))","7fd2ce3e":"# For \"Females-Uneducated-Unkown Income\" condition, they are 78% more likely to earn less than 40K annually\n# Accordingly, \"Female-Uneducated with Unkown Income\" will be added to \"Less Than 40K Annual Income\" group range.","99dc184c":"# Conclusion: \n#    All Females with unknow income will be added to \"Less Than 40K Annual Income\" group range as around 76% (avg) \n#    of Females are in this group.","62227e93":"bc_data.loc[(bc_data.Gender == 'F') & (bc_data.Income_Category == 'Unknown'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'F') & (bc_data.Income_Category == 'Unknown'),'Income_Category'] = 'Less than $40K'","84c2bf0c":"# Let's go through Male Clients\n# Male Clients are spread over the all different income ranges with much more spreading over age range as well.\n# Since we saw that total Clients with unkown income is approx 1100, while Females only were 1060, then we do have very\n# few Male Clients are with unknown income range","7893cd55":"M_D_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_P_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_G_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_C_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_H_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_U_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_K_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Unknown\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nT_M_IncUK=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Gender\"]==\"M\")]\n\n## labels and values:\nlabels = ['Doctrate','Post-Graduate','Graduate','College','High School','Uneducated','Unknown']\nvalues = [len(M_D_IncUK),len(M_P_IncUK),len(M_G_IncUK),len(M_C_IncUK),len(M_H_IncUK),len(M_U_IncUK),len(M_K_IncUK)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Male - Unknow Income Range\")\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()\n\nprint(\"Count of Male-Doctrate-Unkown Income=\",len(M_D_IncUK),\n      '\\n'\"Count of Male-Post-Graduate-Unkown Income=\",len(M_P_IncUK),\n      '\\n'\"Count of Male-Graduate-Unkown Income=\",len(M_G_IncUK),\n      '\\n'\"Count of Male-College-Unkown Income=\",len(M_C_IncUK),\n      '\\n'\"Count of Male-High School-Unkown Income=\",len(M_H_IncUK),\n      '\\n'\"Count of Male-Uneducated-Unkown Income=\",len(M_U_IncUK),\n      '\\n'\"Count of Male-Unknown-Unkown Income=\",len(M_K_IncUK),\n      '\\n','\\n'\"Total of Male with Unkown Income=\",len(T_M_IncUK))","0e98cc49":"# As mentioned above we have total 1030 Client with Unkown income range, 50 are males (VERY FEW) - GOOD\n# Let us do the same again for Males","8907f4f7":"M_D_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_D_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_D_Inc80=bc_data[(bc_data[\"Income_Category\"]==\"$60K - $80K\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_D_Inc120=bc_data[(bc_data[\"Income_Category\"]==\"$80K - $120K\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_D_Inc120P=bc_data[(bc_data[\"Income_Category\"]==\"$120K +\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\n\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K','Income 60 to 80K','Income 80 to 120K','Income 120+']\nvalues = [len(M_D_Inc40),len(M_D_Inc60),len(M_D_Inc80),len(M_D_Inc120),len(M_D_Inc120P)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Odds of Income Range - Males & Doctorate\")\nfig.show()\n\nprint(\"Count of Male-Doctrates-Income < 40K=\",len(M_D_Inc40),\n      '\\n'\"Count of Male-Doctrate-Income 40to60K=\",len(M_D_Inc60),\n      '\\n'\"Count of Male-Doctrate-Income 60to80K=\",len(M_D_Inc80),\n      '\\n'\"Count of Male-Doctrate-Income 80to120K=\",len(M_D_Inc120),\n      '\\n'\"Count of Male-Doctrate-Income 120+=\",len(M_D_Inc120P))","4a2bb83e":"# For \"Males-Doctrate-Unkown Income\" condition, they are 60% more likely to earn between 60K and 120K, however, around 20% \n# are above 120K while 20% are below 60K.\n# The odds are not as significant as in females to be able to determine the income range.\n# We have to find another approach\n# Let us check other information about those three clients, like their credit limit have \n# some figures that would allow us to have better assumption of their Income Range","338763ef":"M_D_CL=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n             & (bc_data[\"Gender\"]==\"M\")]\nA_M_D_CL=bc_data[(bc_data[\"Income_Category\"]!=\"Unknown\") & (bc_data[\"Education_Level\"]==\"Doctorate\") \n               & (bc_data[\"Gender\"]==\"M\")]\nA_M_D_CL['AGE'] = A_M_D_CL[\"Customer_Age\"].round(-1)\nfig, axes = plt.subplots(3,figsize=(35, 35))\nsns.barplot(x=\"CLIENTNUM\", y=\"Credit_Limit\",data=M_D_CL,ax=axes[0])\nsns.stripplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", dodge=True,data=A_M_D_CL,ax=axes[1])\nsns.violinplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", inner=None,color=\".8\",data=A_M_D_CL,ax=axes[1])\nsns.histplot(x=\"Income_Category\", y=\"AGE\", hue=\"Income_Category\", data=A_M_D_CL,ax=axes[2])\nplt.show()\nprint(M_D_CL[['CLIENTNUM', 'Customer_Age']])","75a9c638":"## We have only 3 Doctorate Grade Clients with unknown income range\n## For the 2nd Chart I rounded Age to nearest tens, for better visualiztions and decision taking\n\n## We have two clients above 60 but with different credit limit, and as per the 2nd chart for those with credit limit above 20K\n## we have 2 CLients with Income 80K-120K against 1 with Income 120K+\n## In the 3rd chart 80K-120K looks more dense in color for Client @60s\n## As per piechart above 80K-120K is 29.4%\n## Decision: Client 716823408 --> 80K-120K\n\n## For the 2nd Client 817332483 and despite of lower credit limit it seems the same decision applies.\n\n## We have one client above Age 40, and as per the 2nd chart for those with credit limit between 15K and 20K\n## we have 2 CLients with Income 60K-80K and Income 80K-120K equally\n## In the 3rd chart both 60K-80K and 80K-120K are dense in color for Clients @40s as well as 120K+\n## As per piechart above 60K-80K is 30.9%, 80K-120K is 29.4%, and 120K+ is 19.4%\n## Decision: Client 779906658 --> 60K-80K","cd24a93d":"bc_data.loc[(bc_data.CLIENTNUM == 716823408),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 716823408),'Income_Category'] = '$80K - $120K'\n\nbc_data.loc[(bc_data.CLIENTNUM == 817332483),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 817332483),'Income_Category'] = '$80K - $120K'\n\nbc_data.loc[(bc_data.CLIENTNUM == 779906658),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 779906658),'Income_Category'] = '$60K - $80K'","803f1208":"M_P_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_P_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_P_Inc80=bc_data[(bc_data[\"Income_Category\"]==\"$60K - $80K\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_P_Inc120=bc_data[(bc_data[\"Income_Category\"]==\"$80K - $120K\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_P_Inc120P=bc_data[(bc_data[\"Income_Category\"]==\"$120K +\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\n\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K','Income 60 to 80K','Income 80 to 120K','Income 120+']\nvalues = [len(M_P_Inc40),len(M_P_Inc60),len(M_P_Inc80),len(M_P_Inc120),len(M_P_Inc120P)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Odds of Income Range - Males & Post-Graduate\")\nfig.show()\n\nprint(\"Count of Male-Post-Graduate-Income < 40K=\",len(M_P_Inc40),\n      '\\n'\"Count of Male-Post-Graduate-Income 40to60K=\",len(M_P_Inc60),\n      '\\n'\"Count of Male-Post-Graduate-Income 60to80K=\",len(M_P_Inc80),\n      '\\n'\"Count of Male-Post-Graduate-Income 80to120K=\",len(M_P_Inc120),\n      '\\n'\"Count of Male-Post-Graduate-Income 120+=\",len(M_P_Inc120P))","856e7f5b":"M_P_CL=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Post-Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nA_M_P_CL=bc_data[(bc_data[\"Income_Category\"]!=\"Unknown\") &\n                 (bc_data[\"Credit_Limit\"]>0) & \n                 (bc_data[\"Credit_Limit\"]<50000) & \n                 (bc_data[\"Education_Level\"]==\"Post-Graduate\") &\n                 (bc_data[\"Gender\"]==\"M\")]\nA_M_P_CL['AGE'] = A_M_P_CL[\"Customer_Age\"].round(-1)\nfig, axes = plt.subplots(3,figsize=(35, 35))\nsns.barplot(x=\"CLIENTNUM\", y=\"Credit_Limit\",data=M_P_CL,ax=axes[0])\nsns.stripplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", dodge=True,data=A_M_P_CL,ax=axes[1])\nsns.violinplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", inner=None,color=\".8\",data=A_M_P_CL,ax=axes[1])\nsns.histplot(x=\"Income_Category\", y=\"AGE\", hue=\"Income_Category\", data=A_M_P_CL,ax=axes[2])\nplt.show()\nprint(M_P_CL[['CLIENTNUM', 'Customer_Age']])","30054191":"## We have only 5 Post-Graduate Clients with unknown income range\n\n## We have one client above 60 with credit limit approx 15K and as per the 2nd chart\n## we have 2 CLients with Income 120K+ against 1 with Income 40K-60K\n## In the 3rd chart it is not so clear which is more dense than the other\n## As per piechart above 40K-60K is 20.2% while 120K+ is 12.1%\n## Decision: Client 713989233 --> it is confusing but I will go for odds resulted from 2nd chart to be 120K+\n\n## We have 3 clients late 20s but with different credit limit range, below 5K, between 5K-10K, and 20K.\n## As per the 2nd chart for those with credit limit below 5K\n## it is not clear which category is most propable, but the least are the 120k+ and 60k-80k\n## In the 3rd chart it is not clear as well\n## As per piechart above 40K-60K is 20%, 80K-120K is 32%, and <40K is 4%\n## Decision: Client 715968858 --> 80K-120K\n\n# As per the 2nd chart for those with credit limit between 5K-10K\n## It is 1 120k+ against 2 or even 3 60k-80k\n## In the 3rd chart it is not clear as well\n## As per piechart above 60K-80K is 31% and 120K+ is 12%\n## Decision: Client 807275733 --> 60K-80K\n\n# As per the 2nd chart for those with credit limit between 20K\n## It is 80k-120k\n## Decision: Client 711663858 --> 80k-120k","3abc7935":"bc_data.loc[(bc_data.CLIENTNUM == 713989233),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 713989233),'Income_Category'] = '$120K +'\n\nbc_data.loc[(bc_data.CLIENTNUM == 715968858),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 715968858),'Income_Category'] = '$80K - $120K'\n\nbc_data.loc[(bc_data.CLIENTNUM == 807275733),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 807275733),'Income_Category'] = '$60K - $80K'\n\nbc_data.loc[(bc_data.CLIENTNUM == 711663858),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 711663858),'Income_Category'] = '$80K - $120K'","e7e2a3b9":"M_G_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_G_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_G_Inc80=bc_data[(bc_data[\"Income_Category\"]==\"$60K - $80K\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_G_Inc120=bc_data[(bc_data[\"Income_Category\"]==\"$80K - $120K\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_G_Inc120P=bc_data[(bc_data[\"Income_Category\"]==\"$120K +\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\n\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K','Income 60 to 80K','Income 80 to 120K','Income 120+']\nvalues = [len(M_G_Inc40),len(M_G_Inc60),len(M_G_Inc80),len(M_G_Inc120),len(M_G_Inc120P)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Odds of Income Range - Males & Graduate\")\nfig.show()\n\nprint(\"Count of Male-Graduate-Income < 40K=\",len(M_G_Inc40),\n      '\\n'\"Count of Male-Graduate-Income 40to60K=\",len(M_G_Inc60),\n      '\\n'\"Count of Male-Graduate-Income 60to80K=\",len(M_G_Inc80),\n      '\\n'\"Count of Male-Graduate-Income 80to120K=\",len(M_G_Inc120),\n      '\\n'\"Count of Male-Graduate-Income 120+=\",len(M_G_Inc120P))","aba0b9e0":"M_G_CL=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Graduate\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nA_M_G_CL=bc_data[(bc_data[\"Income_Category\"]!=\"Unknown\") &\n                 (bc_data[\"Education_Level\"]==\"Graduate\") &\n                 (bc_data[\"Gender\"]==\"M\")]\n\nA_M_G_CL['AGE'] = A_M_G_CL[\"Customer_Age\"].round(-1)\nfig, axes = plt.subplots(3,figsize=(35, 35))\nsns.barplot(x=\"CLIENTNUM\", y=\"Credit_Limit\",data=M_G_CL,ax=axes[0])\nsns.stripplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", dodge=True,data=A_M_G_CL,ax=axes[1])\nsns.violinplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", inner=None,color=\".8\",data=A_M_G_CL,ax=axes[1])\nsns.histplot(x=\"Income_Category\", y=\"AGE\", hue=\"Income_Category\", data=A_M_G_CL,ax=axes[2])\nplt.show()\nM_G_CL_b15=pd.DataFrame\nM_G_CL_a15=pd.DataFrame\nM_G_CL_b15=M_G_CL[(M_G_CL[\"Credit_Limit\"]<15000)]\nM_G_CL_a15=M_G_CL[(M_G_CL[\"Credit_Limit\"]>15000)]\nprint(\"Below 15K\",'\\n',M_G_CL_b15[['CLIENTNUM', 'Customer_Age', 'Credit_Limit']].sort_values('Customer_Age'),'\\n',\n      '\\n'\"Above 15K\",'\\n',M_G_CL_a15[['CLIENTNUM', 'Customer_Age', 'Credit_Limit']].sort_values('Customer_Age'))","060aed62":"## Since we have many Clients with unkown category in this group (20 Clients), I will group them based on the following:\n## X0s AGE with credit limit <15K and X0s AGE with credit limit >15K \n\n## Group 1: 30s <15K --> No. of Clients= 2\n## <40K and 40k-60K income ranges seems to be more likely\n## <40K 6.95% and 40k-60K 16.3%, 60K-80K 29.3%\n## Decision: 40k-60K\n\n## Group 2: 30s >15K --> No. of Clients= 2\n## 80K-120K income range seems to be more likely while 40K-60K is unlikely to happen\n## Decision: 80k-120K\n\n## Group 3: 40s <15K --> No. of Clients= 2\n## 40k-60K, 60K-80K, and 80K-120K income ranges seems to be more likely\n## 40k-60K 16.3%, 60K-80K 29.3%, and 80K-120K 33.2%\n## Decision: 80K-120K\n\n## Group 4: 40s >15K --> No. of Clients= 1\n## 60K-80K, and 80K-120K income ranges seems to be more likely, and again 40K-60K is unlikely to happen\n## 60K-80K 29.3%, and 80K-120K 33.2%\n## Decision: 80K-120K\n\n## Group 5: 60s <15K --> No. of Clients= 11\n## <40K and 40k-60K as well as 60K-80K income ranges seems to be more likely\n## <40K 6.95% and 40k-60K 16.3%, 60K-80K 29.3%\n## Decision: 60K-80K\n\n## Group 6: 60s >15K --> No. of Clients= 2\n## 80K-120K and 120K+ income ranges seems to be more likely\n## 80K-120K 33.2% and 120K+ 14.2%\n## Decision: 80K-120K","2dd4abcd":"bc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <35) & (bc_data.Credit_Limit <15000)\n            & (bc_data.Education_Level == 'Graduate'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <35) \n            & (bc_data.Credit_Limit <15000) & (bc_data.Education_Level == 'Graduate'),'Income_Category'] = '$40K - $60K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <35) & (bc_data.Credit_Limit >15000)\n            & (bc_data.Education_Level == 'Graduate'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <35) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'Graduate'),'Income_Category'] = '$80K - $120K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <45) & (bc_data.Customer_Age >34) \n            & (bc_data.Credit_Limit <15000) & (bc_data.Education_Level == 'Graduate'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <45)  & (bc_data.Customer_Age >34) \n            & (bc_data.Credit_Limit <15000) & (bc_data.Education_Level == 'Graduate'),'Income_Category'] = '$80K - $120K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <45) & (bc_data.Customer_Age >34) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'Graduate'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <45)  & (bc_data.Customer_Age >34) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'Graduate'),'Income_Category'] = '$80K - $120K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <70) & (bc_data.Customer_Age >54) \n            & (bc_data.Credit_Limit <15000) & (bc_data.Education_Level == 'Graduate'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <70)  & (bc_data.Customer_Age >54) \n            & (bc_data.Credit_Limit <15000) & (bc_data.Education_Level == 'Graduate'),'Income_Category'] = '$60K - $80K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <70) & (bc_data.Customer_Age >54) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'Graduate'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <70)  & (bc_data.Customer_Age >54) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'Graduate'),'Income_Category'] = '$80K - $120K'","70620011":"M_C_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_C_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_C_Inc80=bc_data[(bc_data[\"Income_Category\"]==\"$60K - $80K\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_C_Inc120=bc_data[(bc_data[\"Income_Category\"]==\"$80K - $120K\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_C_Inc120P=bc_data[(bc_data[\"Income_Category\"]==\"$120K +\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"M\")]\n\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K','Income 60 to 80K','Income 80 to 120K','Income 120+']\nvalues = [len(M_C_Inc40),len(M_C_Inc60),len(M_C_Inc80),len(M_C_Inc120),len(M_C_Inc120P)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Odds of Income Range - Males & College\")\nfig.show()\n\nprint(\"Count of Male-College-Income < 40K=\",len(M_C_Inc40),\n      '\\n'\"Count of Male-College-Income 40to60K=\",len(M_C_Inc60),\n      '\\n'\"Count of Male-College-Income 60to80K=\",len(M_C_Inc80),\n      '\\n'\"Count of Male-College-Income 80to120K=\",len(M_C_Inc120),\n      '\\n'\"Count of Male-College-Income 120+=\",len(M_C_Inc120P))","91815898":"M_C_CL=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"College\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nA_M_C_CL=bc_data[(bc_data[\"Income_Category\"]!=\"Unknown\") &\n                 (bc_data[\"Credit_Limit\"]>0) & \n                 (bc_data[\"Credit_Limit\"]<50000) & \n                 (bc_data[\"Education_Level\"]==\"College\") &\n                 (bc_data[\"Gender\"]==\"M\")]\nA_M_C_CL['AGE'] = A_M_C_CL[\"Customer_Age\"].round(-1)\nfig, axes = plt.subplots(3,figsize=(35, 35))\nsns.barplot(x=\"CLIENTNUM\", y=\"Credit_Limit\",data=M_C_CL,ax=axes[0])\nsns.stripplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", dodge=True,data=A_M_C_CL,ax=axes[1])\nsns.violinplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", inner=None,color=\".8\",data=A_M_C_CL,ax=axes[1])\nsns.histplot(x=\"Income_Category\", y=\"AGE\", hue=\"Income_Category\", data=A_M_C_CL,ax=axes[2])\nplt.show()\nprint(M_C_CL[['CLIENTNUM', 'Customer_Age']])","d81eaca4":"## CLIENT#719293533-Age30 with credit limit 22K:\n## 60K-80K and 80K-120K income ranges seems to be more likely\n## 60K-80K (27.6%) - 80K-120K (36.6%%)\n## Decesion: CLIENT#719293533-Age30 Income Range is 80K-120K \n\n## CLIENT#719415858-Age29 and CLIENT#787509408-Age26, with credit limit <5K:\n## 40K-60K and <40K income ranges seems to be more likely\n## 40K-60K (15.7%) , <40K (5.44%)\n## Decesion: CLIENT#719415858-Age29 and CLIENT#787509408-Age26 Income Range is 40K-60K","dd74cada":"bc_data.loc[(bc_data.CLIENTNUM == 719293533),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 719293533),'Income_Category'] = '$80K - $120K'\nbc_data.loc[(bc_data.CLIENTNUM == 719415858),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 719415858),'Income_Category'] = '$40K - $60K'\nbc_data.loc[(bc_data.CLIENTNUM == 787509408),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.CLIENTNUM == 787509408),'Income_Category'] = '$40K - $60K'","6ac4699b":"M_H_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_H_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_H_Inc80=bc_data[(bc_data[\"Income_Category\"]==\"$60K - $80K\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_H_Inc120=bc_data[(bc_data[\"Income_Category\"]==\"$80K - $120K\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_H_Inc120P=bc_data[(bc_data[\"Income_Category\"]==\"$120K +\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"M\")]\n\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K','Income 60 to 80K','Income 80 to 120K','Income 120+']\nvalues = [len(M_H_Inc40),len(M_H_Inc60),len(M_H_Inc80),len(M_H_Inc120),len(M_H_Inc120P)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Odds of Income Range - Males & High-School\")\nfig.show()\n\nprint(\"Count of Male-High-School-Income < 40K=\",len(M_H_Inc40),\n      '\\n'\"Count of Male-High-School-Income 40to60K=\",len(M_H_Inc60),\n      '\\n'\"Count of Male-High-School-Income 60to80K=\",len(M_H_Inc80),\n      '\\n'\"Count of Male-High-School-Income 80to120K=\",len(M_H_Inc120),\n      '\\n'\"Count of Male-High-School-Income 120+=\",len(M_H_Inc120P))","349007da":"M_H_CL=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"High School\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nA_M_H_CL=bc_data[(bc_data[\"Income_Category\"]!=\"Unknown\") &\n                 (bc_data[\"Education_Level\"]==\"High School\") &\n                 (bc_data[\"Gender\"]==\"M\")]\nA_M_H_CL['AGE'] = A_M_H_CL[\"Customer_Age\"].round(-1)\nfig, axes = plt.subplots(3,figsize=(35, 35))\nsns.barplot(x=\"CLIENTNUM\", y=\"Credit_Limit\",data=M_H_CL,ax=axes[0])\nsns.stripplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", dodge=True,data=A_M_H_CL,ax=axes[1])\nsns.violinplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", inner=None,color=\".8\",data=A_M_H_CL,ax=axes[1])\nsns.histplot(x=\"Income_Category\", y=\"AGE\", hue=\"Income_Category\", data=A_M_H_CL,ax=axes[2])\nplt.show()\nM_H_CL_b15=pd.DataFrame\nM_H_CL_a15=pd.DataFrame\nM_H_CL_b15=M_H_CL[(M_H_CL[\"Credit_Limit\"]<15000)]\nM_H_CL_a15=M_H_CL[(M_H_CL[\"Credit_Limit\"]>15000)]\nprint(\"Below 15K\",'\\n',M_H_CL_b15[['CLIENTNUM', 'Customer_Age', 'Credit_Limit']].sort_values('Customer_Age'),'\\n',\n      '\\n'\"Above 15K\",'\\n',M_H_CL_a15[['CLIENTNUM', 'Customer_Age', 'Credit_Limit']].sort_values('Customer_Age'))","5ab1e5c6":"## Since we have many Clients with unkown category in this group (9 Clients), I have changed 1st Chart to scatter in order to \n## select groups. I will define seven (7) groups\n\n## Group#1-Age<30-Credit Limit<15 [1 Clients]\n## 2nd Chart: this group is mostly populated by Income Category <40K and 60K-80K\n## 3rd Chart: Income Category <40K, 40K-60K, and 60K-80K\n## Odds of Income Chart: <40K(5.53%), 40K-60K(16.4%), and 60K-80K(31.5%)\n## Decesion: I will go for <40K\n\n## Group#2-Age<30-Credit Limit>15 [1 Clients]\n## 2nd Chart: this group is mostly populated by Income Category 40-60K and 60K-80K\n## 3rd Chart: Income Category 40K-60K, and 60K-80K\n## Odds of Income Chart: 40K-60K(16.4%), and 60K-80K(31.5%)\n## Decesion: I will go for 60K-80K\n\n## Group#3-Age>30&<35-Credit Limit>15 [2 Clients]\n## 2nd Chart: this group is mostly populated by Income Category 60K-80K and 120K+\n## 3rd Chart: Not Clear\n## Odds of Income Chart: 60K-80K (29.3%), and 120K+ (15.1%)\n## Decesion: I will go for 120K+\n\n## Group#4-Age>45&<50-Credit Limit<5 [1 Clients]\n## 2nd Chart: this group is mostly populated by Income Category <40K and 120K+!!\n## 3rd Chart: Not Clear\n## Odds of Income Chart: <40K (5.53%) \/ 120K+ (15.1%)\n## Decesion: <40K?\n\n## Group#5-Age>45&<50-Credit Limit>15 [1 Clients]\n## 2nd Chart: this group is mostly populated by Income Category 80-120K and 120K+\n## 3rd Chart: Not Clear\n## Odds of Income Chart: 80K-120K (31.6%) \/ 120K+ (15.1%)\n## Decesion: 80K-120K\n\n## Group#6-Age>60-Credit Limit<5 [2 Clients]\n## 2nd Chart: this group is mostly populated by Income Category <40K\n## 3rd Chart: Not Clear\n## Odds of Income Chart: <40K(5.53%)\n## Decesion: <40K\n\n## Group#7-Age>60-Credit Limit>15 [1 Clients]\n## 2nd Chart: this group is mostly populated by Income Category 60K-80K\n## 3rd Chart: Not Clear\n## Odds of Income Chart: 60K-80K (29.3%)\n## Decesion: 60K-80K","6a887089":"bc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <30) & (bc_data.Credit_Limit <15000)\n            & (bc_data.Education_Level == 'High School'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <30) \n            & (bc_data.Credit_Limit <15000) & (bc_data.Education_Level == 'High School'),'Income_Category'] = 'Less than $40K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <30) & (bc_data.Credit_Limit >15000)\n            & (bc_data.Education_Level == 'High School'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <30) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'High School'),'Income_Category'] = '$60K - $80K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <35) & (bc_data.Customer_Age >30) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'High School'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <35)  & (bc_data.Customer_Age >30) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'High School'),'Income_Category'] = '$120K +'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <50) & (bc_data.Customer_Age >45) \n            & (bc_data.Credit_Limit <5000) & (bc_data.Education_Level == 'High School'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <50)  & (bc_data.Customer_Age >45) \n            & (bc_data.Credit_Limit <5000) & (bc_data.Education_Level == 'High School'),'Income_Category'] = 'Less than $40K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <50) & (bc_data.Customer_Age >45) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'High School'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <50)  & (bc_data.Customer_Age >45) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'High School'),'Income_Category'] = '$80K - $120K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age >=60) \n            & (bc_data.Credit_Limit <5000) & (bc_data.Education_Level == 'High School'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age >=60) \n            & (bc_data.Credit_Limit <5000) & (bc_data.Education_Level == 'High School'),'Income_Category'] = 'Less than $40K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age >=60) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'High School'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age >=60) \n            & (bc_data.Credit_Limit >15000) & (bc_data.Education_Level == 'High School'),'Income_Category'] = '$60K - $80K'","9aafabe4":"M_U_Inc40=bc_data[(bc_data[\"Income_Category\"]==\"Less than $40K\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_U_Inc60=bc_data[(bc_data[\"Income_Category\"]==\"$40K - $60K\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_U_Inc80=bc_data[(bc_data[\"Income_Category\"]==\"$60K - $80K\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_U_Inc120=bc_data[(bc_data[\"Income_Category\"]==\"$80K - $120K\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nM_U_Inc120P=bc_data[(bc_data[\"Income_Category\"]==\"$120K +\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"M\")]\n\n      \n## labels and values:\nlabels = ['Income < 40K','Income 40 to 60K','Income 60 to 80K','Income 80 to 120K','Income 120+']\nvalues = [len(M_U_Inc40),len(M_U_Inc60),len(M_U_Inc80),len(M_U_Inc120),len(M_U_Inc120P)]\n\nfig = px.pie(bc_data, values=values, names=labels)\n\nfig.update_layout(title_text=\"Odds of Income Range - Males & Uneducated\")\nfig.show()\n\nprint(\"Count of Male-Uneduated-Income < 40K=\",len(M_U_Inc40),\n      '\\n'\"Count of Male-Uneducated-Income 40to60K=\",len(M_U_Inc60),\n      '\\n'\"Count of Male-Uneducated-Income 60to80K=\",len(M_U_Inc80),\n      '\\n'\"Count of Male-Uneducated-Income 80to120K=\",len(M_U_Inc120),\n      '\\n'\"Count of Male-Uneducated-Income 120+=\",len(M_U_Inc120P))","6c0a51ea":"M_U_CL=bc_data[(bc_data[\"Income_Category\"]==\"Unknown\") & (bc_data[\"Education_Level\"]==\"Uneducated\") \n                  & (bc_data[\"Gender\"]==\"M\")]\nA_M_U_CL=bc_data[(bc_data[\"Income_Category\"]!=\"Unknown\") &\n                 (bc_data[\"Credit_Limit\"]>0) & \n                 (bc_data[\"Credit_Limit\"]<50000) & \n                 (bc_data[\"Education_Level\"]==\"Uneducated\") &\n                 (bc_data[\"Gender\"]==\"M\")]\nA_M_U_CL['AGE'] = A_M_U_CL[\"Customer_Age\"].round(-1)\nfig, axes = plt.subplots(3,figsize=(35, 35))\nsns.barplot(x=\"CLIENTNUM\", y=\"Credit_Limit\",data=M_U_CL,ax=axes[0])\nsns.stripplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", dodge=True,data=A_M_U_CL,ax=axes[1])\nsns.violinplot(x=\"AGE\", y=\"Credit_Limit\", hue=\"Income_Category\", inner=None,color=\".8\",data=A_M_U_CL,ax=axes[1])\nsns.histplot(x=\"Income_Category\", y=\"AGE\", hue=\"Income_Category\", data=A_M_U_CL,ax=axes[2])\nplt.show()\nM_U_CL_b15=pd.DataFrame\nM_U_CL_a15=pd.DataFrame\nM_U_CL_b15=M_U_CL[(M_U_CL[\"Credit_Limit\"]<15000)]\nM_U_CL_a15=M_U_CL[(M_U_CL[\"Credit_Limit\"]>15000)]\nprint(\"Below 15K\",'\\n',M_U_CL_b15[['CLIENTNUM', 'Customer_Age', 'Credit_Limit']].sort_values('Customer_Age'),'\\n',\n      '\\n'\"Above 15K\",'\\n',M_U_CL_a15[['CLIENTNUM', 'Customer_Age', 'Credit_Limit']].sort_values('Customer_Age'))","a4e23dc5":"## Since we have many Clients with unkown category in this group (8 Clients), I have changed 1st Chart to scatter in order to \n## select groups. I will define four (4) groups\n\n## Group#1-Age28&30-Credit Limit approx. 15 [1 Client]\n## 2nd Chart: this group is mostly populated by Income Category 120K+ and 60K-80K\n## Decesion: 60K-80K\n\n## Group#2-Age40s-Credit Limit<10 [2 Clients]\n## 2nd Chart: Most likely all except 120K+\n## 3rd Chart: 80K-120K and 40K-60K are the most dense\n## Decesion: 40K-60K\n\n## Group#3-Age60s-Credit Limit<=10 [2 Clients]\n## 2nd Chart: 40K-60K, 60K-80K, and 80K-120K\n## 3rd Chart: same conclusion\n## Decesion: 80K-120K","dbb87196":"bc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <=30) & (bc_data.Credit_Limit <17000)\n            & (bc_data.Education_Level == 'Uneducated'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <=30) \n            & (bc_data.Credit_Limit <17000) & (bc_data.Education_Level == 'Uneducated'),'Income_Category'] = '$60K - $80K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <40) & (bc_data.Customer_Age >30) \n            & (bc_data.Credit_Limit <10000) & (bc_data.Education_Level == 'Uneducated'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <40)  & (bc_data.Customer_Age >30) \n            & (bc_data.Credit_Limit <10000) & (bc_data.Education_Level == 'Uneducated'),'Income_Category'] = '$40K - $60K'\n\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <=65) & (bc_data.Customer_Age >60) \n            & (bc_data.Credit_Limit <11000) & (bc_data.Education_Level == 'Uneducated'),'Estimated'] = 'Y'\nbc_data.loc[(bc_data.Gender == 'M') & (bc_data.Customer_Age <=65)  & (bc_data.Customer_Age >60) \n            & (bc_data.Credit_Limit <11000) & (bc_data.Education_Level == 'Uneducated'),'Income_Category'] = '$80K - $120K'","31483047":"sns.set(font_scale = 1.5)\nhue_order=['Married', 'Single', 'Divorced']\nrow_order=['Doctorate','Post-Graduate','Graduate','College','High School','Uneducated']\norder=['Less than $40K','$40K - $60K','$60K - $80K','$80K - $120K','$120K +']\ng=sns.catplot(x=\"Income_Category\", y='Customer_Age', col=\"Gender\", row=\"Education_Level\", hue=\"Marital_Status\",\n              order=order,hue_order=hue_order,row_order=row_order, kind=\"boxen\", data=bc_data, height=5, aspect=20\/10)\ng.set_xticklabels(rotation=30)","93a864b2":"bc_data.describe(include='all')","c5bffe2e":"# Exporting CSV file with all unknows defined\nbc_data.to_csv('bc_data_nuk.csv', index=False)","7e03cf13":"# Exporting CSV file after dropping all unknown files\ndata1 = pd.read_csv('\/kaggle\/input\/credit-card-customers\/BankChurners.csv')\ndata1.drop(data1.index[data1['Education_Level'] == 'Unknown'], inplace = True)\ndata1.drop(data1.index[data1['Marital_Status'] == 'Unknown'], inplace = True)\ndata1.drop(data1.index[data1['Income_Category'] == 'Unknown'], inplace = True)\ndata1.to_csv('bc_data_duk.csv', index=False)","25478cc0":"data1.describe(include='all')","1cd24cfb":"## IF YOU WANT TO CHECK FOR THE LOGISTIC MODELS CREATED USING BOTH PROCESSED DATASETS CREATED, PLEASE USE BELOW LINKS:\n## \"https:\/\/www.kaggle.com\/enginsights\/bank-churners-logistic-oversampled-unknows-defined\"\n## \"https:\/\/www.kaggle.com\/enginsights\/bankchurners-logistic-undersampled-unknows-defined\"\n## \"https:\/\/www.kaggle.com\/enginsights\/bank-churners-logistic-oversampled-unknows-dropped\"\n## \"https:\/\/www.kaggle.com\/enginsights\/bankchurners-logistic-undersampled-unknows-dropped\"","2adff130":"#### Females","ebd4453e":"#### Females with Unkown Income Range","313788cd":"# Data Loading","d5dc0a08":"# Exploring Data","d372621a":"#### Females Education Level","84a436eb":"## Exporting Data","95cb8182":"### Education Level","6718d140":"#### Males with Unkown Income Range","ac16327a":"# Importing Packages","8d39dcbc":"#### Males Education Level","27fb144c":"### Unknow Marital Status","9c8c7127":"#### Males","aa07c080":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Importing Data from Kaggle","43b0defa":"### Unknow Income Range","3a9303d3":"## Investigating The Unkowns"}}