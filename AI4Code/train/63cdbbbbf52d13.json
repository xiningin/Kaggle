{"cell_type":{"f83f8a1b":"code","3a112624":"code","6cc60dcc":"code","eaa75dc8":"code","286cbe44":"code","b94034ae":"code","91e481e2":"code","61ee3933":"code","04a14edc":"code","02a8cbb3":"code","16a211d1":"code","f51cc216":"code","4128a51b":"code","a9af3798":"code","1e736f1b":"code","2011e43a":"code","963ddc71":"code","54882ed6":"code","d23918af":"code","455fbfc9":"code","3cae5e28":"code","e35400b0":"code","b048f949":"code","9909ab81":"code","a25d99ec":"code","8967fab7":"code","9cc2bccc":"code","a1360365":"code","887501e3":"code","25e27148":"code","fe983a21":"code","689be93a":"code","f79baf5c":"code","7b316b06":"code","62f14bd8":"code","23a67745":"code","b9c5b091":"code","2d918ee0":"code","869be35f":"code","1765d11b":"code","a8e86fa3":"code","8e3ac32c":"code","f6f38d40":"code","673d3842":"code","2871e88a":"code","7f902a04":"code","8ae4a633":"code","9a924368":"code","c2b84271":"code","fa1b6e15":"code","2705f760":"code","2a82e2a4":"code","d87dc1b3":"code","34c4ead5":"code","0cdf4c7b":"code","82f1f819":"code","040f44b0":"code","3afea9a0":"code","54d35e28":"code","7bd052c9":"code","3e2c94f2":"code","8f565f12":"code","896d57f8":"code","172bdf70":"code","0f7010ca":"code","3ee379cb":"code","6294d595":"code","e827f134":"code","82f63524":"code","6be3d74b":"code","1fdd03ec":"code","984b896a":"code","0e73315b":"code","acf1a72f":"code","9a27f739":"code","394e1f1a":"code","212cddf0":"code","06409a2f":"code","69cea7eb":"code","c4c83a43":"code","27d79aea":"code","c0619715":"code","f1063ddf":"code","b90722aa":"code","063e918f":"code","afe42e43":"code","3f1c855c":"code","08767a0c":"code","5751de8a":"code","130446de":"code","81ce5f71":"code","e06e2b22":"code","55b3ed83":"code","f2aa85e2":"code","4a2b1632":"markdown","01a28067":"markdown","fdea8a81":"markdown","43773c85":"markdown","03623787":"markdown","b33f92b7":"markdown","e9771ffe":"markdown","31d3d726":"markdown","7fa10464":"markdown","437f0848":"markdown","a748dbb1":"markdown"},"source":{"f83f8a1b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv\nfrom xgboost import XGBRegressor\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import RandomizedSearchCV,cross_val_score\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import make_scorer\nfrom itertools import product\nimport re\nimport nltk\nfrom nltk import word_tokenize\nfrom nltk.corpus import stopwords\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# Any results you write to the current directory are saved as output.","3a112624":"!pip install pymorphy2\n!pip install pymorphy2-dicts\n!pip install DAWG-Python","6cc60dcc":"import pymorphy2","eaa75dc8":"sample_submissions=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\nsales_train_df=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\ntest_df=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")\nitems_df=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/items.csv\")\nshops_df=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/shops.csv\")\nitem_categories_df=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")","286cbe44":"sample_submissions.head()","b94034ae":"sales_train_df.head()","91e481e2":"sales_train_df.info()","61ee3933":"test_df.head()","04a14edc":"test_df.info()","02a8cbb3":"sales_train_df.describe()","16a211d1":"test_df.describe()","f51cc216":"# Reduce data size if running on kernel\nimport os\n\ndef debug_mode():\n    kaggle_kernel_run_type = os.environ.get('KAGGLE_KERNEL_RUN_TYPE','')\n\n    if kaggle_kernel_run_type == 'Batch':\n        debug_mode = False\n    elif kaggle_kernel_run_type == 'Interactive':\n        debug_mode = True\n    elif kaggle_kernel_run_type == '':\n        debug_mode = True\n    return debug_mode\n\ndebug_mode = debug_mode()","4128a51b":"if debug_mode:\n    frac = 0.001\n    #frac = 1.0\n    sales_train_df = sales_train_df.sample(frac=frac, random_state=42)\n    print(sales_train_df.shape)","a9af3798":"sales_train_df=sales_train_df.join(shops_df.set_index(\"shop_id\"),on=\"shop_id\",how=\"left\").join(\nitems_df.set_index(\"item_id\"),on=\"item_id\",how=\"left\").join(item_categories_df.set_index(\"item_category_id\")\n                                                              ,on=\"item_category_id\",how=\"left\")","1e736f1b":"test_df=test_df.join(shops_df.set_index(\"shop_id\"),on=\"shop_id\",how=\"left\").join(\nitems_df.set_index(\"item_id\"),on=\"item_id\",how=\"left\").join(item_categories_df.set_index(\"item_category_id\")\n                                                              ,on=\"item_category_id\",how=\"left\")\ntest_df.head().T","2011e43a":"plt.figure(figsize=(20,6))\nsales_train_df[\"item_category_id\"].hist(bins=84)","963ddc71":"plt.figure(figsize=(20,6))\ntest_df[\"item_category_id\"].hist(bins=84)","54882ed6":"sns.relplot(x=\"item_price\",y=\"item_cnt_day\",height=9,aspect=1,data=sales_train_df)","d23918af":"sales_train_df[sales_train_df.item_cnt_day>2000]","455fbfc9":"sales_train_df[sales_train_df.item_category_id==9][\"item_cnt_day\"].mean()","3cae5e28":"sales_train_df[sales_train_df.item_id==11373][\"item_cnt_day\"].mean()","e35400b0":"sales_train_df[(sales_train_df.shop_id==12)&(sales_train_df.item_id==11373)][\"item_cnt_day\"].mean()","b048f949":"sales_train_df=sales_train_df[~sales_train_df.isin(sales_train_df[sales_train_df.item_cnt_day>2000])]","9909ab81":"sales_train_df[sales_train_df.item_price>50000]","a25d99ec":"sales_train_df=sales_train_df[~sales_train_df.isin(sales_train_df[sales_train_df.item_price>50000])]","8967fab7":"sales_train_df[sales_train_df.item_cnt_day>800]","9cc2bccc":"sales_train_df[sales_train_df.item_id==20949][\"item_cnt_day\"].mean()","a1360365":"sales_train_df[(sales_train_df.shop_id==12)&(sales_train_df.item_id==20949)][\"item_cnt_day\"].mean()","887501e3":"sales_train_df=sales_train_df[~sales_train_df.isin(sales_train_df[sales_train_df.item_cnt_day>800])]","25e27148":"item_id_uniq=pd.unique(sales_train_df[\"item_id\"])","fe983a21":"test_unique_items=test_df[~test_df[\"item_id\"].isin(item_id_uniq)]\ntest_unique_items.head()","689be93a":"%%time\ntrain=[]\ncol=[\"date_block_num\",\"shop_id\",\"item_id\"]\nfor i in range(34):\n  sales=sales_train_df[sales_train_df.date_block_num==i]\n  train.append(np.array(list(product([i],sales.shop_id.unique(),sales.item_id.unique())),dtype=\"int16\"))\ntrain=pd.DataFrame(np.vstack(train),columns=col)\ntrain[\"date_block_num\"]=train[\"date_block_num\"].astype(np.int8)\ntrain[\"shop_id\"]=train[\"shop_id\"].astype(np.int8)\ntrain[\"item_id\"]=train[\"item_id\"].astype(np.int16)","f79baf5c":"month_df=sales_train_df[[\"date_block_num\",\"shop_id\",\"item_id\",\"item_cnt_day\"]].groupby([\"date_block_num\",\"shop_id\",\"item_id\"]).sum()","7b316b06":"date_block_total=month_df.reset_index()\ndate_block_total_group=date_block_total[[\"date_block_num\",\"item_cnt_day\"]].groupby(\"date_block_num\",as_index=False).sum()","62f14bd8":"date_block_total[\"year\"]=date_block_total.date_block_num.apply(lambda x:((x\/\/12)+2013))\ndate_block_total[\"month\"]=date_block_total.date_block_num.apply(lambda x: (x%12))","23a67745":"total_month=date_block_total[[\"month\",\"item_cnt_day\"]].groupby(\"month\",as_index=False).sum()","b9c5b091":"total_year=date_block_total[[\"year\",\"item_cnt_day\"]].groupby(\"year\",as_index=False).sum()","2d918ee0":"train[\"year\"]=train.date_block_num.apply(lambda x:((x\/\/12)+2013))\ntrain[\"month\"]=train.date_block_num.apply(lambda x: (x%12))\ntrain[\"year\"]=train[\"year\"].astype(np.int16)\ntrain[\"month\"]=train[\"month\"].astype(np.int8)\ntrain.head()","869be35f":"test_df=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")\ntest_df[\"date_block_num\"]=34 # treat test set as 34th-month\ntest_df[\"year\"]=((34\/\/12)+2013)\ntest_df[\"month\"]=(34%12)\ntest_df[\"date_block_num\"]=test_df[\"date_block_num\"].astype(np.int8)\ntest_df[\"shop_id\"]=test_df[\"shop_id\"].astype(np.int8)\ntest_df[\"item_id\"]=test_df[\"item_id\"].astype(np.int16)\ntest_df[\"year\"]=test_df[\"year\"].astype(np.int16)\ntest_df[\"month\"]=test_df[\"month\"].astype(np.int8)\ntest_df.head()","1765d11b":"# Save categorical cols for later label encoding\ncategorical=[\"year\",\"month\"]","a8e86fa3":"train=train.join(month_df,on=[\"date_block_num\",\"shop_id\",\"item_id\"],how=\"left\")\ntrain[\"item_cnt_day\"]=train[\"item_cnt_day\"].fillna(0).clip(0,20).astype(np.float16)","8e3ac32c":"train=pd.concat([train,test_df],ignore_index=True,sort=False,keys=col)\ntrain.fillna(0,inplace=True)","f6f38d40":"def create_lag_features(df,feature):\n    numeric_features=[]\n    for i in range(1,7):\n        lagged=df.copy()\n        lagged=lagged[[\"date_block_num\",\"shop_id\",\"item_id\",feature]]\n        lagged.columns=[\"date_block_num\",\"shop_id\",\"item_id\",feature+\"_lag_\"+str(i)]\n        numeric_features.append(feature+\"_lag_\"+str(i))\n        lagged[\"date_block_num\"]+=i\n        df=df.join(lagged.set_index([\"date_block_num\",\"shop_id\",\"item_id\"]),on=[\"date_block_num\",\"shop_id\",\"item_id\"],how=\"left\")\n    return df,numeric_features","673d3842":"%%time\ntrain,n_col=create_lag_features(train,\"item_cnt_day\")\ntrain=train.fillna(0)\nnumeric=n_col","2871e88a":"total_cnt_for_items=sales_train_df[[\"date_block_num\",\"item_id\",\"item_cnt_day\"]].groupby([\"date_block_num\",\"item_id\"]).sum()\ntotal_cnt_for_items.columns=[\"total_cnt_for_items\"]","7f902a04":"train=train.join(total_cnt_for_items,on=[\"date_block_num\",\"item_id\"],how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"total_cnt_for_items\"]=train[\"total_cnt_for_items\"].astype(np.float16)","8ae4a633":"%%time\ntrain,n_col=create_lag_features(train,\"total_cnt_for_items\")\ntrain=train.fillna(0)\ntrain=train.drop([\"total_cnt_for_items\"],axis=1)\nnumeric=numeric+n_col","9a924368":"total_cnt_for_shops=sales_train_df[[\"date_block_num\",\"shop_id\",\"item_cnt_day\"]].groupby([\"date_block_num\",\"shop_id\"]).sum()\ntotal_cnt_for_shops.columns=[\"total_cnt_for_shops\"]","c2b84271":"sum_cnt_shops=total_cnt_for_shops.reset_index()\ncnt_shops=sum_cnt_shops[[\"shop_id\",\"total_cnt_for_shops\"]].groupby(\"shop_id\",as_index=False).mean()\ncnt_shops=cnt_shops.join(shops_df.set_index([\"shop_id\"]),on=\"shop_id\",how=\"left\")","fa1b6e15":"cnt_shops.loc[cnt_shops.shop_name == '\u0421\u0435\u0440\u0433\u0438\u0435\u0432 \u041f\u043e\u0441\u0430\u0434 \u0422\u0426 \"7\u042f\"', 'shop_name'] = '\u0421\u0435\u0440\u0433\u0438\u0435\u0432\u041f\u043e\u0441\u0430\u0434 \u0422\u0426 \"7\u042f\"'\ncnt_shops['shop_city'] = cnt_shops['shop_name'].str.split(' ').map(lambda x: x[0])\ncnt_shops.loc[cnt_shops.shop_city == '!\u042f\u043a\u0443\u0442\u0441\u043a', 'shop_city'] = '\u042f\u043a\u0443\u0442\u0441\u043a'\ncnt_shops['shop_type'] = cnt_shops['shop_name'].str.split(' ').map(lambda x: x[1])","2705f760":"sum_cnt_shop_city=cnt_shops[[\"shop_city\",\"total_cnt_for_shops\"]].groupby(\"shop_city\",as_index=False).sum()","2a82e2a4":"sum_cnt_shop_type=cnt_shops[[\"shop_type\",\"total_cnt_for_shops\"]].groupby(\"shop_type\",as_index=False).mean()","d87dc1b3":"train=train.join(cnt_shops[[\"shop_id\",\"shop_city\",\"shop_type\"]].set_index([\"shop_id\"]),on=\"shop_id\",how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"shop_city\"]=train[\"shop_city\"].astype(str)\ntrain[\"shop_type\"]=train[\"shop_type\"].astype(str)","34c4ead5":"categorical=categorical+[\"shop_city\",\"shop_type\"]","0cdf4c7b":"train=train.join(total_cnt_for_shops,on=[\"date_block_num\",\"shop_id\"],how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"total_cnt_for_shops\"]=train[\"total_cnt_for_shops\"].astype(np.float16)","82f1f819":"%%time\ntrain,n_col=create_lag_features(train,\"total_cnt_for_shops\")\ntrain=train.fillna(0)\ntrain=train.drop([\"total_cnt_for_shops\"],axis=1)\nnumeric=numeric+n_col","040f44b0":"total_cnt_for_item_categories=sales_train_df[[\"date_block_num\",\"item_category_id\",\"item_cnt_day\"]].groupby([\"date_block_num\",\"item_category_id\"]).sum()\ntotal_cnt_for_item_categories.columns=[\"total_cnt_for_item_categories\"]","3afea9a0":"sum_cnt_for_item_category=total_cnt_for_item_categories.reset_index()\nsum_cnt_for_item_category=sum_cnt_for_item_category[[\"item_category_id\",\"total_cnt_for_item_categories\"]].groupby(\"item_category_id\",as_index=False).sum()\nsum_cnt_for_item_category=sum_cnt_for_item_category.join(item_categories_df.set_index(\"item_category_id\"),on=[\"item_category_id\"],how=\"left\")","54d35e28":"sum_cnt_for_item_category[\"category\"]=sum_cnt_for_item_category.item_category_name.str.split(\"-\").str[0]\nsum_cnt_for_item_category[\"subcategory\"]=sum_cnt_for_item_category.item_category_name.str.split(\"-\").str[1]","7bd052c9":"sum_cnt_category=sum_cnt_for_item_category[[\"category\",\"total_cnt_for_item_categories\"]].groupby(\"category\",as_index=False).sum()","3e2c94f2":"sum_cnt_subcategory=sum_cnt_for_item_category[[\"subcategory\",\"total_cnt_for_item_categories\"]].groupby(\"subcategory\",as_index=False).sum()","8f565f12":"train=train.join(items_df.set_index([\"item_id\"]),on=[\"item_id\"],how=\"left\")\ntrain=train.join(sum_cnt_for_item_category[[\"item_category_id\",\"category\",\"subcategory\"]].set_index([\"item_category_id\"]),on=[\"item_category_id\"],how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"category\"]=train[\"category\"].astype(str)\ntrain[\"subcategory\"]=train[\"subcategory\"].astype(str)","896d57f8":"categorical=categorical+[\"category\",\"subcategory\"]","172bdf70":"train=train.join(total_cnt_for_item_categories,on=[\"date_block_num\",\"item_category_id\"],how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"total_cnt_for_item_categories\"]=train[\"total_cnt_for_item_categories\"].astype(np.float16)","0f7010ca":"%%time\ntrain,n_col=create_lag_features(train,\"total_cnt_for_item_categories\")\ntrain=train.fillna(0)\ntrain=train.drop([\"total_cnt_for_item_categories\"],axis=1)\nnumeric=numeric+n_col","3ee379cb":"mean_price=sales_train_df[[\"date_block_num\",\"shop_id\",\"item_id\",\"item_price\"]].groupby([\"date_block_num\",\"shop_id\",\"item_id\"]).mean()\nmean_price.columns=[\"mean_price\"]","6294d595":"train=train.join(mean_price,on=[\"date_block_num\",\"shop_id\",\"item_id\"],how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"mean_price\"]=train[\"mean_price\"].astype(np.float16)","e827f134":"%%time\ntrain,n_col=create_lag_features(train,\"mean_price\")\ntrain=train.fillna(0)\ntrain=train.drop([\"mean_price\"],axis=1)\nnumeric=numeric+n_col","82f63524":"mean_price_for_items=sales_train_df[[\"date_block_num\",\"item_id\",\"item_price\"]].groupby([\"date_block_num\",\"item_id\"]).mean()\nmean_price_for_items.columns=[\"mean_price_for_items\"]","6be3d74b":"train=train.join(mean_price_for_items,on=[\"date_block_num\",\"item_id\"],how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"mean_price_for_items\"]=train[\"mean_price_for_items\"].astype(np.float16)","1fdd03ec":"%%time\ntrain,n_col=create_lag_features(train,\"mean_price_for_items\")\ntrain=train.fillna(0)\ntrain=train.drop([\"mean_price_for_items\"],axis=1)\nnumeric=numeric+n_col","984b896a":"mean_price_for_item_categories=sales_train_df[[\"date_block_num\",\"item_category_id\",\"item_price\"]].groupby([\"date_block_num\",\"item_category_id\"]).mean()\nmean_price_for_item_categories.columns=[\"mean_price_for_item_categories\"]","0e73315b":"train=train.join(mean_price_for_item_categories,on=[\"date_block_num\",\"item_category_id\"],how=\"left\")\ntrain.fillna(0,inplace=True)\ntrain[\"mean_price_for_item_categories\"]=train[\"mean_price_for_item_categories\"].astype(np.float16)","acf1a72f":"%%time\ntrain,n_col=create_lag_features(train,\"mean_price_for_item_categories\")\ntrain=train.fillna(0)\ntrain=train.drop([\"mean_price_for_item_categories\"],axis=1)\nnumeric=numeric+n_col","9a27f739":"sales_train_df[\"revenue\"]=sales_train_df[\"item_price\"]*sales_train_df[\"item_cnt_day\"]\ntotal_revenue=sales_train_df[[\"date_block_num\",\"shop_id\",\"revenue\"]].groupby([\"date_block_num\",\"shop_id\"]).sum()\ntotal_revenue.columns=[\"total_shop_revenue\"]","394e1f1a":"train=train.join(total_revenue,on=[\"date_block_num\",\"shop_id\"],how=\"left\")\ntrain[\"total_shop_revenue\"]=train[\"total_shop_revenue\"].astype(np.float32)\ntrain.fillna(0,inplace=True)","212cddf0":"%%time\ntrain,n_col=create_lag_features(train,\"total_shop_revenue\")\ntrain=train.fillna(0.0)\ntrain=train.drop([\"total_shop_revenue\"],axis=1)\nnumeric=numeric+n_col","06409a2f":"test_df=train[train.date_block_num==34]\ntrain=train[train.date_block_num<34]\ntrain=train[~train[\"date_block_num\"].isin([0,1,2,3,4,5])].reset_index(drop=True)\ntrain.head().T","69cea7eb":"groups = train.groupby(train.date_block_num).groups\nsorted_groups = [value for (key, value) in sorted(groups.items())]\ncv=[(np.concatenate(sorted_groups[:8]),np.concatenate(sorted_groups[8:])),\n    (np.concatenate(sorted_groups[:16]),np.concatenate(sorted_groups[16:])),\n    (np.concatenate(sorted_groups[:24]),np.concatenate(sorted_groups[24:]))]","c4c83a43":"y_train=train[\"item_cnt_day\"]","27d79aea":"X_train_categorical=train[categorical]\nX_test_categorical=test_df[categorical]\nX_train_categorical[\"subcategory\"]=X_train_categorical[\"subcategory\"].astype(str)\nX_test_categorical[\"subcategory\"]=X_test_categorical[\"subcategory\"].astype(str)\nX_test_categorical[\"year\"]=X_test_categorical[\"year\"].astype(np.int16)\nX_test_categorical[\"month\"]=X_test_categorical[\"month\"].astype(np.int8)\nX_test_categorical.loc[X_test_categorical.category==\"PC \",\"category\"]=\"\u0418\u0433\u0440\u044b PC \"\nX_test_categorical.loc[X_test_categorical.subcategory==\" \u0413\u0430\u0440\u043d\u0438\u0442\u0443\u0440\u044b\/\u041d\u0430\u0443\u0448\u043d\u0438\u043a\u0438\",\"subcategory\"]=\" \u0410\u043a\u0441\u0435\u0441\u0441\u0443\u0430\u0440\u044b \u0434\u043b\u044f \u0438\u0433\u0440\"","c0619715":"# Note: Make sure test set doesn't contain unseen labels in train set!\nfor feature in categorical:\n    le=LabelEncoder()\n    print(feature)\n    X_train_categorical[feature]=le.fit_transform(X_train_categorical[feature])\n    X_test_categorical[feature]=le.transform(X_test_categorical[feature])","f1063ddf":"X_train_numeric=train[numeric]\nX_test_numeric=test_df[numeric]","b90722aa":"label_cat_not_num_train=pd.concat([X_train_categorical,X_train_numeric],axis=1)\nlabel_cat_not_num_train.head().T","063e918f":"label_cat_not_num_test=pd.concat([X_test_categorical,X_test_numeric],axis=1)\nlabel_cat_not_num_test.head().T","afe42e43":"label_cat_not_num_train.shape","3f1c855c":"def downcast_type(df):\n    for feature in categorical:\n        df[feature]=df[feature].astype(np.int8)","08767a0c":"downcast_type(label_cat_not_num_train)\nlabel_cat_not_num_train.info()","5751de8a":"def RMSE(y,predictions):\n    return  np.sqrt(mean_squared_error(y,predictions))\nscorer=make_scorer(RMSE,False)","130446de":"'''\n%%time \nbaseline = -cross_val_score(\n    XGBRegressor(max_depth=10,\n                 subsample=0.8,\n                 colsample_bytree=0.9,\n                 colsample_bylevel=0.7,\n                 min_child_weight=200,\n                 n_estimators=1000,\n                 learning_rate=0.025,\n                 objective=\"reg:squarederror\",\n                 tree_method=\"hist\"), label_cat_not_num_train, y_train, scoring=scorer,cv=cv\n).mean()\nprint(baseline)\n'''","81ce5f71":"%%time\nestimator=XGBRegressor(max_depth=10,\n                       subsample=0.8,\n                       colsample_bytree=0.9,\n                       colsample_bylevel=0.7,\n                       min_child_weight=200,\n                       n_estimators=1000,\n                       learning_rate=0.025,\n                       objective=\"reg:squarederror\",\n                       tree_method=\"hist\")\nestimator.fit(label_cat_not_num_train,y_train)\nimportances=estimator.feature_importances_\npredictions=estimator.predict(label_cat_not_num_test)","e06e2b22":"estimator.save_model('best_model.json')","55b3ed83":"importances","f2aa85e2":"sample_submissions[\"item_cnt_month\"] = predictions.clip(0, 20)\nsample_submissions.to_csv(f\"submission.csv\",index=False)\nsample_submissions.head()","4a2b1632":"# Feature Engineering","01a28067":"Two variable categories and a sibcategory can be extracted from the category name.","fdea8a81":"# Initialize","43773c85":"Overview on data","03623787":"We will add pairs (item, shop) to each month and encode them using the median of sales for the category, \nwhich this item belongs in the corresponding month. \nFirst, join all the datasets with each other.","b33f92b7":"From this graph we see that in the dataset there are two points that can be outliers. One with sales over 2000. Another with a price of over 50000.","e9771ffe":"## Merge input dfs","31d3d726":"## Target based features","7fa10464":"It seems that this point is really an outlier.","437f0848":"The graphs show that to build a test set for each shop, we took all all the item-shop pairs that are present in the test dataset. You can build such a dataset from the training set by taking for each month all the unique item-shop pairs present in the test dataset.","a748dbb1":"Create Features For item_price"}}