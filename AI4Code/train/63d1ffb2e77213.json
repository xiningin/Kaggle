{"cell_type":{"b376ac33":"code","99ab280a":"code","0bef34c6":"code","8e226e42":"code","b001f3df":"code","f472bfcf":"code","e6a16f34":"code","6b205356":"code","32b57098":"code","e75640af":"code","2fb31cc1":"code","ffac9497":"code","6036a761":"code","afba3aee":"code","bdd0570b":"code","61853e16":"code","552f8605":"code","eeb39fd4":"code","7cf31882":"code","3c3f42df":"code","4c8e2d00":"code","0d1cfdde":"code","b4a2fa69":"code","d343ccb4":"markdown","ab2e3239":"markdown","6afedbc1":"markdown","2eab71f9":"markdown","b0a7e0e9":"markdown"},"source":{"b376ac33":"# importing libraries\nimport os # to work with dirs and paths \nimport numpy as np #data manipulation \nimport pandas as pd #reading, storing data \n\n#importing visualization libraries \nimport matplotlib.pyplot as plt \nimport seaborn as sns # i feel plots from seaborn as more aesthetic ","99ab280a":"#getting current working directory -- this is my first time using kaggle inbuilt notebook \nos.getcwd()","0bef34c6":"# getting all the file names present in the input directory\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8e226e42":"#reading the data present in the input dir\nnetflix_data = pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\") ","b001f3df":"# Viewing the content of the dataframe\ndisplay(netflix_data.head(10))","f472bfcf":"# getting the details about the data such as number of rows, columns, non null values and data type \nnetflix_data.info()","e6a16f34":"# calculating the null percentage for each column\n\n((netflix_data.isnull() | netflix_data.isna()).sum() * 100 \/ netflix_data.index.size).round(2)","6b205356":"# getting distribution information for numerical columns \nnetflix_data.describe()","32b57098":"# getting distribution information for columns with data type object which same as factors in r \nnetflix_data.describe(include= np.object)","e75640af":"# getting the unique values present in each column of the data : to understand the level of the data \nnetflix_data.nunique()","2fb31cc1":"# getting the total count of shows across countries\n# there are upto 11 countries stored in a cell value in the dataframe \n\nnetflix_data[['0','1','2','3','4','5','6','7','8','9','10','11']] = netflix_data.country.str.split(',', expand = True)","ffac9497":"#Viewing data with the new columns \ndisplay(netflix_data[~netflix_data[\"10\"].isnull()].head(2))","6036a761":"# distribution of shows within tv and movies \n# netflix_data[\"type\"].value_counts().plot(kind = [\"bar\"])","afba3aee":"# the frequency of movies and tv shows on netflix \ntype_df = netflix_data.groupby([\"type\"], as_index = False).agg({'show_id':'count'})\nsns.barplot(x = type_df[\"type\"], y = type_df[\"show_id\"])","bdd0570b":"# getting the trend of movies and tv shows based on their release year \ntrend_release_year = netflix_data.groupby([\"release_year\",\"type\"], as_index = False).agg({'show_id':'count'})\n\nplt.figure(figsize = (20,12))\nsns.barplot( x = trend_release_year[\"release_year\"], y = trend_release_year[\"show_id\"], hue = trend_release_year[\"type\"])","61853e16":"# getting the year added to plot over the years the frequency of movies and tv shows on netflix \nnetflix_data[\"year_added\"] = pd.to_datetime(netflix_data[\"date_added\"]).dt.year\ntrend_mov_tv = netflix_data.groupby([\"year_added\",\"type\"], as_index = False).agg({'show_id':'count'})","552f8605":"plt.figure(figsize = (15,8))\nsns.barplot( x = trend_mov_tv[\"year_added\"], y = trend_mov_tv[\"show_id\"], hue = trend_mov_tv[\"type\"], color= \"purple\")","eeb39fd4":"# show count across countries  \ncountry_cnt = netflix_data.groupby([\"0\"], as_index = False).agg({'show_id':'count'})\n\ncountry_cnt[country_cnt[\"show_id\"] > 2].sort_values(\"show_id\", ascending = False).reset_index(drop = True)","7cf31882":"# show count across countries  \ncountry2_cnt = netflix_data.groupby([\"1\"], as_index = False).agg({'show_id':'count'})\n\ncountry2_cnt[\"1\"] =country2_cnt[\"1\"].str.lstrip()\n\ncountry2_cnt[country2_cnt[\"show_id\"] > 2].sort_values(\"show_id\", ascending = False).reset_index(drop = True)","3c3f42df":"country12 = country_cnt.merge(country2_cnt, left_on = [\"0\"], right_on = [\"1\"], how = \"outer\")\ncountry12","4c8e2d00":"country12.fillna(0, inplace= True)\n\ncountry12[\"total_shows_count\"] = country12[\"show_id_x\"] + country12[\"show_id_y\"]","0d1cfdde":"country12[country12[\"total_shows_count\"] > 2].sort_values(\"total_shows_count\", ascending= False).reset_index(drop = True)","b4a2fa69":"netflix_data[\"duration\"].unique()","d343ccb4":"## In this notebook you will find techniques for: \n\n#### 1. Gathering Data\n#### 2. EDA (using visuals) \n","ab2e3239":"#### You will realize there are no null values in 9 of the 12 variables present. For the rest we can either remove the null rows from the analysis based on the null percentage ","6afedbc1":"> > ## EDA","2eab71f9":"### You will notice that the number of movies in 2020 compared to 2019 have gone down where as number of tv shows show an upward trend  ","b0a7e0e9":"### Getting the data ready "}}