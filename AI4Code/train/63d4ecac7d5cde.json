{"cell_type":{"d9b8f137":"code","6b969802":"code","264ee7c5":"code","468deaac":"code","3cc63616":"code","969b2a98":"code","c907c8ed":"code","bfbc8acc":"code","548b565d":"code","7992ca1d":"code","761cf90d":"code","44c1a477":"code","4f7ffa9f":"code","ab62f4c9":"code","30763c11":"code","f6623707":"code","f45f3aba":"code","11fb6030":"code","4474925f":"code","e3966cc3":"code","da4ef362":"markdown","871b7c88":"markdown","6d95493e":"markdown","2d2f8a21":"markdown","fda28d07":"markdown","8a54a345":"markdown","295514e6":"markdown","c59c4314":"markdown","00f64bde":"markdown","48a9c892":"markdown","dc106a26":"markdown"},"source":{"d9b8f137":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6b969802":"base = pd.read_csv(\"\/kaggle\/input\/moneyball-mlb-stats-19622012\/baseball.csv\")\nbase.head()","264ee7c5":"base.count()","468deaac":"dpyears = base[base.Year < 2002]  \ndpyears.head()","3cc63616":"dpyears.count() #number of observations decreased because of year range","969b2a98":"# check = base[base.Year == 2002]\n# teamcount = check['Team'].count()\n# teamcount = base[base.Year == 2001][base.Playoffs == 1]['Team'].count()\nteamcount = base[base.Year == 2001]['Team'].count()\nteamcount","c907c8ed":"teams = base.Team.value_counts()\nteams","bfbc8acc":"qualifiedwins = base[base.Year < 2002]\n# qualifiedwins\nqualifiedwinsnew = qualifiedwins[['Team','Year','W','Playoffs']]\n# qualifiedwinsnew = qualifiedwinsnew[qualifiedwinsnew.Playoffs == 1]\nqualifiedwinsnew","548b565d":"import seaborn as sns; \nimport matplotlib.pyplot as plt\n# tips = sns.load_dataset(\"qualifiedwinsnew\")\nplt.figure(figsize=(10,9))\nax = sns.scatterplot(x=\"W\", y=\"Team\", hue=\"Playoffs\",data=qualifiedwinsnew)\nplt.plot(95, 0, color='r')","7992ca1d":"runs = base[base.Year < 2002]\nruns.info()","761cf90d":"runs['RD'] = runs['RS'] - runs['RA']\nruns.info()","44c1a477":"sns.lmplot(x =\"RD\", y =\"W\", data = runs, order = 2, ci = None)","4f7ffa9f":"from sklearn import preprocessing, svm \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression \n\nX = np.array(runs['RD']).reshape(-1, 1) \ny = np.array(runs['W']).reshape(-1, 1) \n  \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25) \n  \n# Splitting the data into training and testing data \nregr = LinearRegression() \n  \nm = regr.fit(X_train, y_train)\nm.get_params()","ab62f4c9":"print(regr.score(X_test, y_test))","30763c11":"regr.predict(np.array(133).reshape(-1, 1))","f6623707":"import statsmodels.formula.api as smf\nsmf.ols(formula ='W ~ RD',data=runs).fit().summary()","f45f3aba":"# runscored = runs[runs.Year == 2001]\nsmf.ols(formula ='RS ~ OBP + SLG',data=runs).fit().summary()","11fb6030":"obp = runs[runs.Year == 2001][runs.Team == 'OAK'][['Team','OBP','SLG']]\nobp","4474925f":"smf.ols(formula ='RA ~ OOBP + OSLG',data=runs).fit().summary()","e3966cc3":"oobp = runs[runs.Year == 2001][runs.Team == 'OAK'][['Team','OOBP','OSLG']]\noobp","da4ef362":"Plot shows DePodesta might be right. But lets be certain.","871b7c88":"635 runs.\n\nNow if we put these values of RS and RA we can predict wins in 2002.\n\nWins = 80.8814 + 0.1058 * RD\n\nWins = 102\n\nWhich is very close to the actual wins (103)!!!!","6d95493e":"We have linear regression relationship:\n\nWins = 80.8814 + 0.1058*RD\n\nSo if wins are 95 the run difference is calculated as \n\nRD = (95 - 80.8814)\/0.1058 ~ 133\n\nClose Enough!!!","2d2f8a21":"Now we know you 95 wins in a season to make the playoffs!\n\nBut how much more do you score than give away?\n\nDePodesta predicted 135 runs difference to make the playoffs with 95 wins. Let's see!","fda28d07":"RA = -837.3779 + 2913.6(OOBP) + 1514.3(OSLG)\n","8a54a345":"If we put these values in we get that they will score close to 835 runs.  \n\nSimilarly, for Run Allowed. ","295514e6":"Now how to get there? \n\nFor this he used 2001 data. He found out that On Base Percentage and Slugging Rate are the most important attributes to predict the runs scored.  ","c59c4314":"DePodesta predicted 2002 season strategy using 1962-2001 data.","00f64bde":"Equation is\nRS = -804.6271 + 2737.7680(OBP) + 1584.9086(SLG)\n\nSo if put in 2001 values of Oakland Athletics we get ","48a9c892":"Number of Teams in MLB!","dc106a26":"DePodesta predicted that if can win 95 in a season you are almost certainly qualified for the Playoffs!!  "}}