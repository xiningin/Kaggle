{"cell_type":{"1dc41016":"code","634447f4":"code","4047f229":"code","63f9b96a":"code","5ec1f5aa":"code","0978b858":"code","a6dbb596":"code","71a9432f":"code","93be1b2f":"code","00946f6e":"code","081eaffa":"code","bcf9742b":"code","7ed4c8c6":"code","4e73a4a4":"code","25cebc86":"code","62f6ec02":"code","887fb68d":"code","6e438ccc":"code","c6b276ac":"code","f5f3fb66":"markdown","42cd11dc":"markdown","29d7d28f":"markdown","d0379e19":"markdown","cb0d8555":"markdown","bf0f4bfc":"markdown","60980c45":"markdown","320b84ac":"markdown","861552d7":"markdown","0344fd8b":"markdown","4061d31a":"markdown","f6ddc19b":"markdown","083cec8f":"markdown","c9ae2795":"markdown","88461c43":"markdown","7281a0e4":"markdown","bc2d2bf4":"markdown","b80db568":"markdown","33990dce":"markdown","7d9d3dfe":"markdown","3e96b9c4":"markdown","06d4e41a":"markdown","993364a1":"markdown","e00bf8fa":"markdown","efb10132":"markdown","346d75c4":"markdown","aaecdec5":"markdown"},"source":{"1dc41016":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","634447f4":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/Top Ten authors.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","4047f229":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/Top ten Journals.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","63f9b96a":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/Top Ten license.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","5ec1f5aa":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/Top Ten publish time.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","0978b858":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/Top sources.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","a6dbb596":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/text_corpus.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","71a9432f":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/Titles_Words.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","93be1b2f":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/abstract_words.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((5000,4000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()","00946f6e":"import matplotlib.image as mpimg \nimport matplotlib.pyplot as plt \n  \nfrom PIL import Image, ImageOps\n\nfrom matplotlib import image\nfrom matplotlib import pyplot\n# load the image\nimage = Image.open('\/kaggle\/input\/summarydata\/elbow_plot.png')\n# report the size of the image\n# resize image and ignore original aspect ratio\nimg_resized = image.resize((1000,1000))\n\n# report the size of the thumbnail\n#print(img_resized.size) \n\n\n# display the array of pixels as an image\npyplot.imshow(img_resized)\npyplot.show()\n\n","081eaffa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks1 = pd.read_csv('\/kaggle\/input\/summarydata\/Task1.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks1_table=HTML(Tasks1.to_html(escape=False,index=False))\ndisplay(Tasks1_table)","bcf9742b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks2 = pd.read_csv('\/kaggle\/input\/summarydata\/Task2.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks2_table=HTML(Tasks2.to_html(escape=False,index=False))\ndisplay(Tasks2_table)","7ed4c8c6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks3 = pd.read_csv('\/kaggle\/input\/summarydata\/Task3.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks3_table=HTML(Tasks3.to_html(escape=False,index=False))\ndisplay(Tasks3_table)","4e73a4a4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks4 = pd.read_csv('\/kaggle\/input\/summarydata\/Task4.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks4_table=HTML(Tasks4.to_html(escape=False,index=False))\ndisplay(Tasks4_table)","25cebc86":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks5 = pd.read_csv('\/kaggle\/input\/summarydata\/Task5.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks5_table=HTML(Tasks5.to_html(escape=False,index=False))\ndisplay(Tasks5_table)","62f6ec02":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks6 = pd.read_csv('\/kaggle\/input\/summarydata\/Task6.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks6_table=HTML(Tasks6.to_html(escape=False,index=False))\ndisplay(Tasks6_table)","887fb68d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks7 = pd.read_csv('\/kaggle\/input\/summarydata\/Task7.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks7_table=HTML(Tasks7.to_html(escape=False,index=False))\ndisplay(Tasks7_table)","6e438ccc":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks8 = pd.read_csv('\/kaggle\/input\/summarydata\/Task8.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks8_table=HTML(Tasks8.to_html(escape=False,index=False))\ndisplay(Tasks8_table)","c6b276ac":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport functools\nfrom IPython.core.display import display, HTML\nTasks9 = pd.read_csv('\/kaggle\/input\/summarydata\/Task9.csv')\n#pd.set_option('display.max_rows', None)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.width', None)\n#pd.set_option('display.max_colwidth', 500)\nTasks9_table=HTML(Tasks9.to_html(escape=False,index=False))\ndisplay(Tasks9_table)","f5f3fb66":"### We Will follow the below chart for our CombinedData and our tasks for text preprocessing and data visualization:\n#### 1-Articles , which we have collected from Json Files.\n#### 2-Tasks , Which we will Combine together as we will see below\n![image.png](attachment:image.png)","42cd11dc":"### 4.2.2.1   Word Cloud for Words in Texts","29d7d28f":"## 2.1 Fetching Data","d0379e19":"# The Fifth Task : What do we know about non-pharmaceutical interventions?","cb0d8555":"## 4.2 Data Visualization and analysis (Text Preprocessing)","bf0f4bfc":"# The Sixth Task : What do we know about diagnostics and surveillance?","60980c45":"# The Seventh Task : What has been published about medical care?","320b84ac":"## 4.2.3 Creating Bag of Words \n## 4.2.4 Creating TF-IDF\n## 4.2.5 Creating Cosine Similarity\n","861552d7":"## We are Working on Unsupervised learning peoblem . Developing text and data mining tools that can help the medical community develop answers to high priority scientific questions. The CORD-19 dataset represents the most extensive machine-readable coronavirus literature collection available for data mining to date. That will allow us to apply text and data mining approaches to find answers to the below tasks:\n1. What is known about transmission, incubation, and environmental stability?\n1. What do we know about COVID-19 risk factors?\n1. What do we know about virus genetics, origin, and evolution?\n1. What do we know about vaccines and therapeutics?\n1. What do we know about non-pharmaceutical interventions?\n1. What do we know about diagnostics and surveillance?\n1. What has been published about medical care?\n1. What has been published about information sharing and inter-sectoral collaboration?\n1. What has been published about ethical and social science considerations?\n","0344fd8b":"## 3.  Data Cleaning and Visualization","4061d31a":"## K-Means Model","f6ddc19b":"![image.png](attachment:image.png)","083cec8f":"### 4.2.2.3 Word Cloud for Words in abstract","c9ae2795":"# The Fourth Task : What do we know about vaccines and therapeutics?","88461c43":"## Conclusion\n1. -This scatter plot is generated from Articles text , each article text is a feature. \n1. -usinig features vector TfidfVectorizer. \n1. -Dimensionality Reduction using PCA.\n1. -generating clustering using k-Means where k=15 (the best value as elbow plot).\n1. -Topic Modeling is done on each cluster to get the keywords per cluster. ","7281a0e4":"# 2. Problem Solving\n## We Will Follow the below Flow Charts  in our Problem Solving:\n## 1st Flow chart for Unsupervised Machine Learning algorithm that we will apply to Articles Words to group them in Clusters depending on theier similarities , and reaching to the optimum number of Clusters. \n![image.png](attachment:image.png)\n\n## 2nd Flow Chart showing how to filter the all Articles that we have around (29,323) Article , and Filtering them according to our Tasks(9 Tasks) , by applying NLP Techniques as shown Below:\n\n\n","bc2d2bf4":"## 6. Model Evaluation ","b80db568":"# The Eighth Task : What has been published about information sharing and inter-sectoral collaboration?","33990dce":"# The Nineth Task : What has been published about ethical and social science considerations?","7d9d3dfe":" # The First Task: What is known about transmission, incubation, and environmental stability?","3e96b9c4":"### We have more than 77,590,638 Words in our Articles ","06d4e41a":"![image.png](attachment:image.png)","993364a1":"# Tasks Filtering (We will show the first 100 most coorelated  Articles for each task)\n# See how is the close coorelation between tasks and related articles.","e00bf8fa":"# The Third Task : What do we know about virus genetics, origin, and evolution?","efb10132":"### 4.2.2.2 Word Cloud for Words in Titles","346d75c4":"# 1. Problem Statement","aaecdec5":"# The Second Task : What do we know about COVID-19 risk factors?"}}