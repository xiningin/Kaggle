{"cell_type":{"d3f05723":"code","e858559d":"code","6ecde1f5":"code","e33d8309":"code","5f45757e":"code","ffc97915":"code","499ab06f":"code","02783ebb":"code","7ffd987b":"code","bd19dfa3":"code","bf622cd5":"code","9ad4aa84":"code","911d71f8":"code","15db80b2":"code","622f5fcf":"code","8a741564":"code","c06b8d33":"markdown"},"source":{"d3f05723":"#Import all the necessary packages\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#This lines is used to display the diagram inside the notebook\n%matplotlib inline \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","e858559d":"#Read the data from csv\ncars_info = pd.read_csv(\"\/kaggle\/input\/car-price-prediction\/CarPrice_Assignment.csv\")\ncars_info","6ecde1f5":"#Check the basic information\ncars_info.info()","e33d8309":"cars_info.describe()","5f45757e":"#Check the the data has any null values\ncars_info.isnull().sum()","ffc97915":"#Check the correlation between each of the columns\ncars_info.corr()","499ab06f":"#Better to visualize the correlation using a heatMap\nplt.figure(figsize=(14,7))\nsns.heatmap(cars_info.corr(),annot=True,cmap='coolwarm')","02783ebb":"#The higest correaltion we see is with engine size for Price, Let plot the same\nplt.figure(figsize=(14,7))\nsns.scatterplot(x='price',y='enginesize',data=cars_info)\n","7ffd987b":"# Find the number of unique columns in data\nfor car in cars_info:\n    print(f\"{car} - {cars_info[car].nunique()}\")","bd19dfa3":"# We need to convert strings to numbers in order to use it in the model\n#Looking at the above unique values we can drop car ID and name\n\ncars_info.drop(['car_ID','CarName','fuelsystem','enginetype'],axis=1,inplace=True)","bf622cd5":"#We can map the below values \n\ncars_info['fueltype'] = cars_info['fueltype'].map({'gas':'0','diesel':'1'})\ncars_info['aspiration'] = cars_info['aspiration'].map({'std':'0','turbo':'1'})\ncars_info['doornumber'] = cars_info['doornumber'].map({'two':'2','four':'4'})\ncars_info['carbody'] = cars_info['carbody'].map({'convertible':'0','hatchback':'1','sedan':'2','wagon':'3','hardtop':'4'})\ncars_info['drivewheel'] = cars_info['drivewheel'].map({'rwd':'0','fwd':'1','4wd':'2'})\ncars_info['enginelocation'] = cars_info['enginelocation'].map({'front':'0','rear':'1'})\ncars_info['cylindernumber'] = cars_info['cylindernumber'].map({'four':'4','six':'6','five':'5','three':'3','twelve':'12','two':'2','eight':'8'})","9ad4aa84":"cars_info.head()","911d71f8":"#From the above scatter plot we can be sure that based on engine size the prices go up\n#Lets split our data to train and test \nfrom sklearn.model_selection import train_test_split\n\nX = cars_info.drop('price',axis=1)\ny= cars_info['price']\n\nX_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.3,random_state=55)","15db80b2":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train,y_train)\n","622f5fcf":"prediction = lr.predict(X_test)","8a741564":"#Now lets see if our model is good\nfrom sklearn.metrics import r2_score\nprint(r2_score(y_test,prediction))","c06b8d33":"The accuracy is 78%"}}