{"cell_type":{"2c5251cb":"code","ab644303":"code","fa1fcb8c":"code","dbd7cce6":"code","8c28edc6":"code","d4ae852d":"code","ebf155e4":"code","3f7faf94":"code","f0d9a69c":"markdown","bbec511b":"markdown","d8ddb12f":"markdown"},"source":{"2c5251cb":"# Import the dependencies\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ab644303":"import pandas as pd\ndf = pd.read_csv(\"..\/input\/ufcdata\/data.csv\")","fa1fcb8c":"#Prepare the training set and selecting features\n#Dropped na values and columns that is not significant\ndf.dropna(inplace = True)\ndf.drop(df[df['Winner'] == 'Draw' ].index, inplace = True)\nx_clean = df.drop(['Winner','R_fighter','B_fighter','Referee','date','location','R_Stance', 'B_Stance','weight_class'], axis=1)\n\nx = x_clean # x = feature values\n\n\n# Target value\ny = df.loc[:, df.columns == 'Winner']","dbd7cce6":"x.head()","8c28edc6":"y.head()","d4ae852d":"#Split the data into 80% training and 20% testing\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)","ebf155e4":"#Train the model\nmodel = GaussianNB()\nmodel.fit(x_train, y_train) #Training the model","3f7faf94":"#Test the model\npredictions = model.predict(x_test)\n\n#Check precision, recall, f1-score\nprint(classification_report(y_test, predictions) )\n","f0d9a69c":"# Model","bbec511b":"# Import Dataset","d8ddb12f":"# Gaussian Naive Bayes"}}