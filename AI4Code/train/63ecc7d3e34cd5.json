{"cell_type":{"2b8f206f":"code","9078c6c4":"code","f009f2d5":"code","38a067dd":"code","7a5b1e7e":"code","0e196969":"code","c8e4c5e1":"code","54f38a5b":"code","e9ac662a":"code","d537adc0":"code","6fd2cab8":"code","589e92b6":"code","99500a84":"code","f3cdbf78":"code","f37e4aa0":"code","727bad3c":"code","7f43ed0b":"code","0662a6a0":"code","1a4e31d4":"code","29b62aed":"code","d1de5b2e":"code","b6eb08ba":"code","b78e6ebb":"code","bb1f9597":"code","240f3ce6":"code","b2dd562d":"code","8250afac":"code","b981696a":"code","7bfa9ffb":"code","f60aac5f":"code","acd9c4d9":"code","a49b1201":"code","7e75342f":"code","e6535348":"code","98733c30":"code","9eb8c758":"code","32bf7a6d":"code","37f38563":"code","4e330331":"code","06837d38":"code","201356c4":"code","42b97914":"code","9f89b452":"code","c2927903":"markdown","dbc4197f":"markdown","bde6f0b6":"markdown","59e22e11":"markdown","cf737f57":"markdown"},"source":{"2b8f206f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9078c6c4":"import nltk\n#nltk.download_shell()\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f009f2d5":" messages = [line.rstrip() for line  in open(\"\/kaggle\/input\/spam-datasets\/SMSSpamCollection\")]","38a067dd":"print(len(messages))","7a5b1e7e":"messages[0:5]\n","0e196969":"for mesg_num,message in enumerate(messages[0:5]):\n    print(mesg_num, message)\n    print(\"\\n\")\n    \n#tab seperated file \\t","c8e4c5e1":"messages = pd.read_csv(\"\/kaggle\/input\/spam-datasets\/SMSSpamCollection\",sep=\"\\t\",names=[\"label\",\"message\"])","54f38a5b":"messages.describe()","e9ac662a":"messages.groupby(by='label').describe()","d537adc0":"messages[\"length\"] = messages[\"message\"].apply(len)","6fd2cab8":"messages.head()","589e92b6":"messages[\"length\"].hist(bins=120)    ","99500a84":"messages[\"length\"].describe()","f3cdbf78":"messages[messages[\"length\"]==910][\"message\"].iloc[0]       #to show whole mesg","f37e4aa0":"messages.hist(column=\"length\",by=\"label\",bins=60,figsize=(12,4))","727bad3c":"#Text preprocessing for classification\n#remove stop words (general words)\n\nimport string\nmessage = \"sample text! with,& punctuation.\"\n#remove punctuation  sring.punctuiation\n\nnon_punctuation = [c for c in message if c not in string.punctuation]\nnon_punctuation = \"\".join(non_punctuation)\n","7f43ed0b":"from nltk.corpus import stopwords\n\nstopwords.words(\"english\")       #useless words fot classification\n","0662a6a0":"non_punctuation.split() #split into words","1a4e31d4":"clean_message = [word for word in non_punctuation.split() if word.lower() not in stopwords.words(\"english\") ]","29b62aed":"clean_message","d1de5b2e":"import string\nfrom nltk.corpus import stopwords\ndef text_process(message):\n    non_punctuation = [char for char in message if char not in string.punctuation]       # remove punctuation\n    non_punctuation = \"\".join(non_punctuation)\n    clean_message = [word for word in non_punctuation.split() if word.lower() not in stopwords.words(\"english\") ]\n    return clean_message    ","b6eb08ba":"messages.head()","b78e6ebb":"messages[\"message\"].head(5).apply(text_process)                #TOKENIZED","bb1f9597":"messages.head()","240f3ce6":"from sklearn.feature_extraction.text import CountVectorizer\n","b2dd562d":"bow_transformer = CountVectorizer(analyzer = text_process)\nbow_transformer.fit(messages[\"message\"])\n\n# use our own custom function text_process defined above inside the count vectorizer","8250afac":"len(bow_transformer.vocabulary_)","b981696a":"messages_bow = bow_transformer.transform(messages[\"message\"])","7bfa9ffb":"messages_bow.shape","f60aac5f":"messages_bow.nnz              #no of Non zeroes ","acd9c4d9":"#sparsity\n\nsparsity = 100*messages_bow.nnz\/(messages_bow.shape[0]*messages_bow.shape[1])\nformat(sparsity)","a49b1201":"from sklearn.feature_extraction.text import TfidfTransformer\n\ntfidf_transformer = TfidfTransformer()\ntfidf_transformer.fit_transform(messages_bow)\nmessages_tfidf = tfidf_transformer.transform(messages_bow)","7e75342f":"print(tfidf_transformer.idf_[bow_transformer.vocabulary_['u']])\nprint(tfidf_transformer.idf_[bow_transformer.vocabulary_['university']])","e6535348":"from sklearn.naive_bayes import MultinomialNB\nspam_detection = MultinomialNB().fit(messages_tfidf,messages[\"label\"])\n","98733c30":"all_pred = spam_detection.predict(messages_tfidf)","9eb8c758":"all_pred","32bf7a6d":"from sklearn.model_selection import train_test_split\nmsg_train,msg_test,label_train,label_test = train_test_split(messages[\"message\"],messages[\"label\"],test_size=0.3)","37f38563":"from sklearn.pipeline import Pipeline\npipeline =Pipeline([(\"bow\",CountVectorizer(analyzer=text_process)),\n                    (\"tfidf\",TfidfTransformer()),\n                     (\"clf\",MultinomialNB())\n                    ])","4e330331":"label_train","06837d38":"msg_train","201356c4":"pipeline.fit(msg_train,label_train)","42b97914":"predictions = pipeline.predict(msg_test)","9f89b452":"from sklearn.metrics import classification_report\nprint(classification_report(label_test,predictions))","c2927903":"# Weights calculated by TF-IDF","dbc4197f":"BAG OF WORDS MODEL","bde6f0b6":"Use stemming to club similar words wrt dictionary if needed\nSTEMMING - not great for shortform messages need full words","59e22e11":"# **Spam messages seem to have more characters**","cf737f57":"# Building function with above functionality (Tokenization)\n\nTokenization is cleaning the text of punctuation and other common words to make the text more useful\n"}}