{"cell_type":{"c615da4c":"code","c21748b7":"code","d7cc4083":"code","5cb060fe":"code","538700d3":"markdown","047478e2":"markdown"},"source":{"c615da4c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\nimport matplotlib.pyplot as plt\nfrom IPython.display import display, HTML\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c21748b7":"input_file = \"\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\"\ndf_survey = pd.read_csv(input_file)\n","d7cc4083":"dict_input= [\n              {\"column\": \"Q9\",\n               \"title\": \"<h2><u>Companies in IDE<\/u><\/h2>\",\n               \"description\": \"<p><h5>This graph shows companies which are dominated in IDE's. Jupyter is clearly dominating in this space.<\/h5><\/p><br\/>\",\n               \"company_mapping\": {\"Q9_Part_1\":\"JetBrains\",\"Q9_Part_2\":\"RStudio\",\"Q9_Part_3\":\"Microsoft\",\"Q9_Part_4\":\"Microsoft\",\"Q9_Part_5\":\"JetBrains\",\"Q9_Part_6\":\"Spyder\",\"Q9_Part_7\":\"Notepad++\",\"Q9_Part_8\":\"Sublime Text\",\"Q9_Part_9\":\"Vim\",\"Q9_Part_10\":\"MATLAB\",\"Q9_Part_11\":\"JetBrains\",\"Q9_Part_12\":\"None\",\"Q9_OTHER\":\"Other\"}\n              },\n              {\"column\": \"Q10\",\n               \"title\": \"<h2><u>Hosted Notebook Products Companies<\/u><\/h2>\",\n               \"description\": \"<p><h5>This graph shows companies which are dominated in Hosted Notebook products. Google (Kaggle Notebooks, Colab Notebooks, Google Cloud Notebooks (AI Platform \/ Vertex AI), Google Cloud Datalab)) is clearly dominating in this space.<\/h5><\/p><br\/>\",\n               \"company_mapping\": {\"Q10_Part_1\":\"Google\",\"Q10_Part_2\":\"Google\",\"Q10_Part_3\":\"Microsoft\",\"Q10_Part_4\":\"Gradient\",\"Q10_Part_5\":\"Binder\",\"Q10_Part_6\":\"Code Ocean\",\"Q10_Part_7\":\"IBM\",\"Q10_Part_8\":\"Amazon\",\"Q10_Part_9\":\"Amazon\",\"Q10_Part_10\":\"Google\",\"Q10_Part_11\":\"Google\",\"Q10_Part_12\":\"Databricks\",\"Q10_Part_13\":\"Zeppelin\",\"Q10_Part_14\":\"Deepnote\",\"Q10_Part_15\":\"Observable\",\"Q10_Part_16\":\"NA\",\"Q10_OTHER\":\"NA\"}\n              },\n              {\"column\": \"Q12\",\n               \"title\": \"<h2><u>Specialized Hardware Companies<\/u><\/h2>\",\n               \"description\": \"<p><h5>This graph shows companies which are dominated in specialized hardware. It is interesting to see 50% of ML practitioners do not have access to specialized hardware.<\/h5><\/p><br\/>\",\n               \"company_mapping\": {\"Q12_Part_1\":\"NVIDIA GPUs\",\"Q12_Part_2\":\"Google Cloud TPUs\",\"Q12_Part_3\":\"AWS Trainium Chips\",\"Q12_Part_4\":\"AWS Inferentia Chips\",\"Q12_Part_5\":\"None\",\"Q12_OTHER\":\"Other\"}\n              },\n             {\"column\": \"Q27_A\",\n               \"title\": \"<h2><u>Popular Cloud Computing Platforms<\/u><\/h2>\",\n               \"description\": \"<p><h5>This graph shows companies which are dominated in Cloud Computing Platforms. Google and Amazon are clear winner. But 18% population cannot afford or do not have access to Cloud Computing Platforms.<\/h5><\/p><br\/>\",\n               \"company_mapping\": {\"Q27_A_Part_1\":\"Amazon Web Services (AWS)\",\"Q27_A_Part_2\":\"Microsoft Azure\",\"Q27_A_Part_3\":\"Google Cloud Platform (GCP)\",\"Q27_A_Part_4\":\"IBM Cloud \/ Red Hat\",\"Q27_A_Part_5\":\"Oracle Cloud\",\"Q27_A_Part_6\":\"SAP Cloud\",\"Q27_A_Part_7\":\"Salesforce Cloud\",\"Q27_A_Part_8\":\"VMware Cloud\",\"Q27_A_Part_9\":\"Alibaba Cloud\",\"Q27_A_Part_10\":\"Tencent Cloud\",\"Q27_A_Part_11\":\"None\",\"Q27_A_OTHER\":\"Other\"}\n              },\n            {\"column\": \"Q31_A\",\n               \"title\": \"<h2><u>Popular Managed Machine Learning Products<\/u><\/h2>\",\n               \"description\": \"<p><h5>Around 56% of participants prefer to write own code rather to use platforms. There is major scope in platform development.<\/h5><\/p><br\/>\",\n               \"company_mapping\": {\"Q31_A_Part_1\":\"Amazon SageMaker\",\"Q31_A_Part_2\":\"Azure Machine Learning Studio\",\"Q31_A_Part_3\":\"Google Cloud Vertex AI\",\"Q31_A_Part_4\":\"DataRobot\",\"Q31_A_Part_5\":\"Databricks\",\"Q31_A_Part_6\":\"Dataiku\",\"Q31_A_Part_7\":\"Alteryx\",\"Q31_A_Part_8\":\"Rapidminer\",\"Q31_A_Part_9\":\"No \/ None\",\"Q31_A_OTHER\":\"Other\"}\n              },\n            {\"column\": \"Q32_A\",\n               \"title\": \"<h2><u>Popular Big Data Products Companies<\/u><\/h2>\",\n               \"description\": \"In Big data DB space Oracle and Microsoft are still dominant players. Still 10% people cannot use any DB service.<\/h5><\/p><br\/>\",\n               \"company_mapping\": {\"Q32_A_Part_1\":\"Oracle\",\"Q32_A_Part_2\":\"PostgreSQL\",\"Q32_A_Part_3\":\"SQLite\",\"Q32_A_Part_4\":\"Oracle\",\"Q32_A_Part_5\":\"MongoDB\",\"Q32_A_Part_6\":\"Snowflake\",\"Q32_A_Part_7\":\"IBM Db2\",\"Q32_A_Part_8\":\"Microsoft\",\"Q32_A_Part_9\":\"Microsoft\",\"Q32_A_Part_10\":\"Microsoft\",\"Q32_A_Part_11\":\"Amazon\",\"Q32_A_Part_12\":\"Amazon\",\"Q32_A_Part_13\":\"Amazon\",\"Q32_A_Part_14\":\"Amazon\",\"Q32_A_Part_15\":\"Google\",\"Q32_A_Part_16\":\"Google\",\"Q32_A_Part_17\":\"Google\",\"Q32_A_Part_18\":\"Google\",\"Q32_A_Part_19\":\"Google\",\"Q32_A_Part_20\":\"None\",\"Q32_A_OTHER\":\"Other\"}\n              }\n            ]","5cb060fe":"headings = df_survey.columns.values.tolist()\nheadings_description = df_survey.values[0]\nunique_fields = [value for value in headings if \"_\" not in value]\ndf_survey_without_desc = df_survey.drop(df_survey.index[[0]])\n\nfor dict in dict_input:\n    r1 = re.compile(dict[\"column\"])\n\n    question_wise_headings = list(filter(r1.match, headings))  # Columns for each question\n    # print(question_wise_headings)\n\n    df_topic = df_survey_without_desc[question_wise_headings]\n    topic_cnt = df_topic.count()\n\n    topic_cnt = topic_cnt.rename(dict[\"company_mapping\"], axis=1)\n    df_topic_cnt = topic_cnt.to_frame()\n    # print(df_topic_cnt)\n    df_topic_cnt['index'] = df_topic_cnt.index\n    df_topic_cnt = df_topic_cnt.rename({0: \"Percentage Share\"}, axis=1)\n    df_topic_cnt_sum = df_topic_cnt.groupby(level=0).sum()  # .rename({0: \"count_1\"}, axis=1)\n    d_percentage = round((df_topic_cnt_sum \/ df_topic_cnt_sum.sum()) * 100, 2)\n    d_percentage_display = d_percentage.copy()\n    d_percentage_display['Company Name'] = d_percentage.index\n    d_percentage_display = d_percentage_display[[\"Company Name\", \"Percentage Share\"]]\n    \n    display(HTML(dict[\"title\"]))\n    display(HTML(dict[\"description\"]))\n\n    d_percentage.plot(kind='pie', subplots=True, textprops={'fontsize': 5}, ylabel='')\n    plt.legend(loc='upper left', bbox_to_anchor=(1.1, 1.0))\n    plt.show()\n    \n    display(HTML(\"<br\/><h5><u>Data<\/u><h5>\"))\n    display(HTML(d_percentage_display.sort_values(by='Percentage Share', ascending=False).to_html(index=False)))\n\n    \n\n    if (dict[\"column\"] == \"Q27_A\"):\n        df_27_A = df_survey_without_desc[[\"Q5\", \"Q27_A_Part_11\"]].copy()        \n        topic_cnt_sum_27_A = df_27_A.groupby([\"Q5\", \"Q27_A_Part_11\"]).size()\n        \n        df_topic_cnt_sum_27_A = topic_cnt_sum_27_A.to_frame()\n        df_topic_cnt_sum_27_A['index'] = [v[0] for v in df_topic_cnt_sum_27_A.index if 'None' in v] #df_topic_cnt_sum_27_A.index.levels[0].values\n        df_topic_cnt_sum_27_A = df_topic_cnt_sum_27_A.rename({0: \"Count\"}, axis=1)\n        \n        lst_percentage_27_A = (df_topic_cnt_sum_27_A[\"Count\"].values \/ df_topic_cnt_sum_27_A.sum().values[0] * 100)\n        df_percentage_display_27_A = pd.DataFrame()\n        df_percentage_display_27_A[\"Profession\"] = df_topic_cnt_sum_27_A['index'].values\n        df_percentage_display_27_A[\"Count\"] = df_topic_cnt_sum_27_A[\"Count\"].values\n        df_percentage_display_27_A[\"Percentage Share\"] = lst_percentage_27_A\n\n        display(HTML(\"<h3>Availability of infrastructure to Students<h3>\"))\n        display(HTML(\"<h5>Following analysis shows that Students have complete access to infrastucture. Zero students in 'None' category.\" +\n                     \" Good investment in infrastructure in education sector is really admirable.<\/h5>\")) \n        \n        display(HTML(df_percentage_display_27_A.sort_values(by='Percentage Share', ascending=False).to_html(index=False)))\n        \n        \n        df_27_A = df_survey_without_desc[[\"Q1\", \"Q27_A_Part_11\"]].copy()        \n        topic_cnt_sum_27_A = df_27_A.groupby([\"Q1\", \"Q27_A_Part_11\"]).size()\n        \n        df_topic_cnt_sum_27_A = topic_cnt_sum_27_A.to_frame()\n        df_topic_cnt_sum_27_A['index'] = [v[0] for v in df_topic_cnt_sum_27_A.index if 'None' in v] #df_topic_cnt_sum_27_A.index.levels[0].values\n        df_topic_cnt_sum_27_A = df_topic_cnt_sum_27_A.rename({0: \"Count\"}, axis=1)\n        \n        lst_percentage_27_A = (df_topic_cnt_sum_27_A[\"Count\"].values \/ df_topic_cnt_sum_27_A.sum().values[0] * 100)\n        df_percentage_display_27_A = pd.DataFrame()\n        df_percentage_display_27_A[\"Age Group\"] = df_topic_cnt_sum_27_A['index'].values\n        df_percentage_display_27_A[\"Count\"] = df_topic_cnt_sum_27_A[\"Count\"].values\n        df_percentage_display_27_A[\"Percentage Share\"] = lst_percentage_27_A\n\n        display(HTML(\"<h3>Availability of infrastructure to Youth<h3>\"))\n        display(HTML(\"<h5>Following analysis shows that majority youth of age 22 to 35 (approx 49% in None category) donot have access to Cloud Computing Platforms. <\/h5>\"))\n        display(HTML(df_percentage_display_27_A.sort_values(by='Percentage Share', ascending=False).to_html(index=False)))\n        \n    if (dict[\"column\"] == \"Q32_A\"):\n        df_32_A = df_survey_without_desc[[\"Q5\", \"Q32_A_Part_20\"]].copy()\n        topic_cnt_sum_32_A = df_32_A.groupby([\"Q5\", \"Q32_A_Part_20\"]).size()\n        df_topic_cnt_sum_32_A = topic_cnt_sum_32_A.to_frame()\n        df_topic_cnt_sum_32_A['index'] = [v[0] for v in df_topic_cnt_sum_32_A.index if 'None' in v] #df_topic_cnt_sum_32_A.index.levels[0].values\n        df_topic_cnt_sum_32_A = df_topic_cnt_sum_32_A.rename({0: \"Count\"}, axis=1)\n        \n        lst_percentage_32_A = (df_topic_cnt_sum_32_A[\"Count\"].values \/ df_topic_cnt_sum_32_A.sum().values[0] * 100)\n        df_percentage_display_32_A = pd.DataFrame()\n        df_percentage_display_32_A[\"Profession\"] = df_topic_cnt_sum_32_A['index'].values\n        df_percentage_display_32_A[\"Count\"] = df_topic_cnt_sum_32_A[\"Count\"].values\n        df_percentage_display_32_A[\"Percentage Share\"] = lst_percentage_32_A\n\n        display(HTML(\"<h3>Availability of Big Data Products to Students<h3>\"))\n        display(HTML(\"<h5>Following analysis shows that Students have complete access to Big Data Products. Zero students in 'None' category.\" +\n                     \" Good investment in Big Data infrastructure in education sector is really admirable<\/h5>\"))        \n        display(HTML(df_percentage_display_32_A.sort_values(by='Percentage Share', ascending=False).to_html(index=False)))\n        \n        df_32_A = df_survey_without_desc[[\"Q1\", \"Q32_A_Part_20\"]].copy()\n        topic_cnt_sum_32_A = df_32_A.groupby([\"Q1\", \"Q32_A_Part_20\"]).size()\n        df_topic_cnt_sum_32_A = topic_cnt_sum_32_A.to_frame()\n        df_topic_cnt_sum_32_A['index'] = [v[0] for v in df_topic_cnt_sum_32_A.index if 'None' in v] #df_topic_cnt_sum_32_A.index.levels[0].values\n        df_topic_cnt_sum_32_A = df_topic_cnt_sum_32_A.rename({0: \"Count\"}, axis=1)\n        \n        lst_percentage_32_A = (df_topic_cnt_sum_32_A[\"Count\"].values \/ df_topic_cnt_sum_32_A.sum().values[0] * 100)\n        df_percentage_display_32_A = pd.DataFrame()\n        df_percentage_display_32_A[\"Age Group\"] = df_topic_cnt_sum_32_A['index'].values\n        df_percentage_display_32_A[\"Count\"] = df_topic_cnt_sum_32_A[\"Count\"].values\n        df_percentage_display_32_A[\"Percentage Share\"] = lst_percentage_32_A\n\n        display(HTML(\"<h3>Availability of Big Data Products to Youth<h3>\"))\n        display(HTML(\"<h5>Following analysis shows that majority youth of age 22 to 35 (approx. 49% in None category) do not have access to Big Data Products. <\/h5>\"))\n        display(HTML(df_percentage_display_32_A.sort_values(by='Percentage Share', ascending=False).to_html(index=False)))\n        \n    display(HTML('<hr\/>'))","538700d3":"This is very interesting survey. Survey questions are touching majority parts of Machine Learning (ML) world. \n\nMachine Learning world is now becoming more API oriented or more of like managed services. \n\nBased on data each question has its own analysis and insight which is quite straight forward for example what is count based on age group, country. Which is most favourite ML library or tool? \n\nBut if we try to see in depth, this survey will provide inputs on current mindset of ML world. How much completely new innovative approach people are taking. This new approach will decide growth of over of Information Technology.\n","047478e2":"# **Conclusion**\n\nAbove analysis shows that Google, Microsoft and Amazon are major players in ML space. \nIt is also interesting to observe that students are getting good infrastructure support. In future we can except increase in efficiency, innovation because while studying students are getting infrastructure support.\n\nBut after completion of education, majority of youth is facing infrastructure challenges. To promote start up culture, for more employment and for more innovation, youth should get more access to hi-tech infrastructure. \n\nThere is huge opportunity for ML based products because 56% is custom development.\n\nThis Survey shows that in coming future we can see more growth in ML and ML related technologies if hi-tech infrastructure access is given to youth. \n "}}