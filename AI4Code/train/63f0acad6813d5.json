{"cell_type":{"cf8a8204":"code","1305ac8b":"code","e4cf6c46":"code","075d7f9c":"code","34b5058e":"code","3cb1bf05":"code","e3e66d95":"code","daf0b86f":"code","6b4a28fd":"code","62fbef8b":"code","228818c4":"code","4421203e":"code","30ed1a07":"code","2ff83ef9":"code","67a59fed":"code","29654ecf":"code","1923e972":"code","59f489b1":"code","2daf36df":"code","4122e128":"code","80efe025":"code","699b2453":"code","a3ff4bec":"code","bf52b269":"code","d820dc49":"code","70df46d0":"code","b193c157":"code","c36b7d83":"code","584e8613":"code","ce1c8ee9":"code","0de62227":"code","641d4b5e":"code","3e3e080c":"code","4f304ba9":"code","8ccd554d":"code","61d80cbb":"code","64a580f9":"code","72c3ee8f":"code","d79ab8bc":"code","980cc607":"markdown","2c391b51":"markdown","2647e0fa":"markdown","2e3cc2f6":"markdown","7615ba7b":"markdown","c67cf391":"markdown","6df0e336":"markdown","addd0342":"markdown","b0444127":"markdown","291728d0":"markdown","0afcd14d":"markdown","00b3765e":"markdown","a62fb31b":"markdown","cda1491c":"markdown","59544bad":"markdown","e74333e1":"markdown","a683d14b":"markdown","97667a1a":"markdown","99b32684":"markdown","a39f195e":"markdown","bc2013ca":"markdown"},"source":{"cf8a8204":"import warnings\nwarnings.filterwarnings('ignore')","1305ac8b":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"hacker_news\" dataset\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"full\" table\ntable_ref = dataset_ref.table(\"full\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the table\nclient.list_rows(table, max_results=5).to_dataframe()","e4cf6c46":"import bq_helper\nfrom bq_helper import BigQueryHelper\nbq_assistant = BigQueryHelper(\"bigquery-public-data\", \"hacker_news\")","075d7f9c":"bq_assistant.table_schema(\"full\")","34b5058e":"def show_amount_of_data_scanned(query):\n    # dry_run lets us see how much data the query uses without running it\n    dry_run_config = bigquery.QueryJobConfig(dry_run=True)\n    query_job = client.query(query, job_config=dry_run_config)\n    print('Data processed: {} GB'.format(round(query_job.total_bytes_processed \/ 10**9, 3)))","3cb1bf05":"print(\"SCHEMA field for the 'type' column:\\n\")\nprint(table.schema[8])","e3e66d95":"import pandas as pd\n\ntype_query = \"\"\"\nSELECT type,COUNT(id) AS count\nFROM `bigquery-public-data.hacker_news.full`\nWHERE EXTRACT (DATE FROM timestamp) > '2020-12-31'\nGROUP BY type\nORDER BY count DESC\n\"\"\"\n\ntypes = client.query(type_query).result().to_dataframe()\ntypes","daf0b86f":"contributors = \"\"\"\n            SELECT COUNT (DISTINCT `by`) AS contributors\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31'\n            \"\"\"\n\nauthors = client.query(contributors).result().to_dataframe()\nauthors","6b4a28fd":"contributors_query = \"\"\"\nSELECT DISTINCT `by` AS authors, COUNT (*) as posts\nFROM `bigquery-public-data.hacker_news.full`\nWHERE EXTRACT(DATE FROM timestamp) > '2020-12-31'\nGROUP BY authors\nORDER BY posts DESC\n\"\"\"\nshow_amount_of_data_scanned(contributors_query)","62fbef8b":"all_contributors = client.query(contributors_query).result().to_dataframe()\nall_contributors.head()","228818c4":"posts = \"\"\"\n        SELECT COUNT (id) as posts\n        FROM `bigquery-public-data.hacker_news.full`\n        WHERE EXTRACT(DATE FROM timestamp) > '2020-12-31' AND `by` != 'None'\n        \"\"\"\npostings = client.query(posts).result().to_dataframe()\npostings.head()","4421203e":"all_contributors","30ed1a07":"all_contributors = all_contributors.mask(all_contributors.eq('None')).dropna()\nall_contributors","2ff83ef9":"all_contributors.posts.describe()","67a59fed":"all_contributors.median()","29654ecf":"items_distribution = all_contributors.groupby('posts').posts.count()\nitems_distribution","1923e972":"top1 = authors.loc[:1, 'contributors'].sum() \/ 100\ntop1int = top1.round().astype('int64')\ntop1int","59f489b1":"total_1percent = all_contributors.loc[:top1int, 'posts'].sum()\ntotal_1percent","2daf36df":"print(\"Die Zahl von Stories gepostet von 1% der aktivsten Benutzer: {}\".format(total_1percent))","4122e128":"total_posted = postings.loc[:1, 'posts'].sum()\ntotal_posted","80efe025":"print(\"Prozent von Stories gepostet von 1% der aktivsten Benutzer: {}%\".format(round(total_1percent*100\/total_posted), 2))","699b2453":"ycombinator = \"\"\"\n            SELECT score, title\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND REGEXP_CONTAINS(title, r\"Y Combinator|YCombinator|YC\")\n            ORDER BY score  DESC\n            \"\"\"\n\nshow_amount_of_data_scanned(ycombinator)","a3ff4bec":"ycombinator = \"\"\"\n            SELECT score, title\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND REGEXP_CONTAINS(title, r\"Y Combinator|YCombinator|YC\")\n            ORDER BY score  DESC\n            \"\"\"\n\nycombinator_data = client.query(ycombinator).result().to_dataframe()\nycombinator_data.head()","bf52b269":"print(\"Die Gesamtzahl von Stories \u00fcber YCombinator: {}\".format(len(ycombinator_data)))\nprint(\"Der Durchschnittsscore von Stories \u00fcber YCombinator: {}\".format(round(ycombinator_data.score.mean(), 2)))","d820dc49":"rest = \"\"\"\nSELECT AVG(score) as avg_score\nFROM `bigquery-public-data.hacker_news.full`\nWHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND id NOT IN (SELECT id FROM `bigquery-public-data.hacker_news.full` WHERE REGEXP_CONTAINS(title, r\"Y Combinator|YCombinator|YC\")) \n\"\"\"\n\nshow_amount_of_data_scanned(rest)","70df46d0":"rest = \"\"\"\nSELECT FORMAT('%3.2f',AVG(score)) as avg_score\nFROM `bigquery-public-data.hacker_news.full`\nWHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND id NOT IN (SELECT id FROM `bigquery-public-data.hacker_news.full` WHERE REGEXP_CONTAINS(title, r\"Y Combinator|YCombinator|YC\")) \n\"\"\"\nrest_data = client.query(rest).result().to_dataframe()\nrest_data","b193c157":"google = \"\"\"\n            SELECT score, title\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND REGEXP_CONTAINS(title, r\"Google|google\")\n            ORDER BY score  DESC\n            \"\"\"\nshow_amount_of_data_scanned(google)","c36b7d83":"google = \"\"\"\n            SELECT score, title\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND REGEXP_CONTAINS(title, r\"(G|g)oogle\")\n            ORDER BY score  DESC\n            \"\"\"\ngoogle_data = client.query(google).result().to_dataframe()\ngoogle_data.head()","584e8613":"print(\"Die Gesamtzahl von Stories \u00fcber Google: {}\".format(len(google_data)))\nprint(\"Der Durchschnittsscore von Stories \u00fcber Google: {}\".format(round(google_data.score.mean(), 2)))","ce1c8ee9":"kaggle = \"\"\"\n            SELECT score, title\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND REGEXP_CONTAINS(title, r\"(K|k)aggle\")\n            ORDER BY score  DESC\n            \"\"\"\nkaggle_data = client.query(kaggle).result().to_dataframe()\nkaggle_data.head()","0de62227":"print(\"Die Gesamtzahl von Stories \u00fcber Kaggle: {}\".format(len(kaggle_data)))\nprint(\"Der Durchschnittsscore von Stories \u00fcber Kaggle: {}\".format(round(kaggle_data.score.mean(), 2)))","641d4b5e":"microsoft = \"\"\"\n            SELECT score, title\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND REGEXP_CONTAINS(title, r\"(M|m)icrosoft\")\n            ORDER BY score  DESC\n            \"\"\"\nmicrosoft_data = client.query(microsoft).result().to_dataframe()\nmicrosoft_data.head()","3e3e080c":"print(\"Die Gesamtzahl von Stories \u00fcber Microsoft: {}\".format(len(microsoft_data)))\nprint(\"Der Durchschnittsscore von Stories \u00fcber Microsoft: {}\".format(round(microsoft_data.score.mean(), 2)))","4f304ba9":"tinder = \"\"\"\n            SELECT score, title\n            FROM `bigquery-public-data.hacker_news.full`\n            WHERE EXTRACT (DATE FROM timestamp) > '2020-12-31' AND type = 'story' AND REGEXP_CONTAINS(title, r\"(T|t)inder\")\n            ORDER BY score  DESC\n            \"\"\"\ntinder_data = client.query(tinder).result().to_dataframe()\ntinder_data.head()","8ccd554d":"print(\"Die Gesamtzahl von Stories \u00fcber Tinder: {}\".format(len(tinder_data)))\nprint(\"Der Durchschnittsscore von Stories \u00fcber Tinder: {}\".format(round(tinder_data.score.mean(), 2)))","61d80cbb":"df = pd.DataFrame([(len(ycombinator_data), ycombinator_data.score.mean()),\n\n                   (len(google_data), google_data.score.mean()),\n\n                   (len(microsoft_data), microsoft_data.score.mean()),\n\n                   (len(tinder_data), tinder_data.score.mean()),\n                   (len(kaggle_data), kaggle_data.score.mean())],\n\n                  index=['YCombinator', 'Google', 'Microsoft', 'Tinder', 'Kaggle'],\n\n                  columns=('number_of_stories', 'avg_score'))","64a580f9":"df","72c3ee8f":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nsns.barplot(x=df.index, y=df['number_of_stories'])\n","d79ab8bc":"sns.barplot(x=df.index, y=df['avg_score'])","980cc607":"Import libraries for data visualiazation.\n\n***Bibliotheken** f\u00fcr die **graphische Darstellung** importieren.*","2c391b51":"![](https:\/\/images.unsplash.com\/photo-1504639725590-34d0984388bd?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80)","2647e0fa":"We see that the most authors posted only once or twice.\n\n*Die allermeisten Autoren haben nur 1-2 Postings.*","2e3cc2f6":"How many posts have 1% of authors posted? At first we should answer, how many authors are there in the first 1%?\n\n*Wie viele Postings haben **1%** von Autoren publiziert? Erst m\u00fcssen wir berechnen, wie viele Benutzer sind 1%.*","7615ba7b":"Calculate the average score for all stories to compare it with the average score of YCombinator stories.\n\n*Berechne den Durchschnittsscore f\u00fcr alle Stories, um mit dem Durchschnittsscore von Stories \u00fcber YCombinator zu vergleichen.*","c67cf391":"We can guess that Hacker News is indeed biased towards YCombinator and YCombinator startups are given a push. Stories about YCombinator has a high average score and although the number of stories about YCombinator is a bit smaller than about giants like Google or Microsoft, but still it's much bigger than the number of stories about other well-known brands like Tinder or Kaggle.\n\n*Wir k\u00f6nnen vermuten, dass Hacker News ihren Gr\u00fcnder **YCombinator** doch **favorisiert** und die **Start-Ups** von **YCombinator gepusht** werden. Stories \u00fcber YCombinator werden **\u00fcberdurchschnittlich gut bewertet** und **die Zahl der Stories** stellt YCombinator zwar leicht unter die Giganten wie Google und Microsoft, aber deutlich h\u00f6her als z.B. Tinder oder Kaggle.*","6df0e336":"The result of an all_contributors query as Pandas DataFrame.\n\n*Die Ergebnisse von der all_contributors Abfrage als Pandas **DataFrame**.*","addd0342":"Introduce a function, which lets us see how much data the query uses without running it.\n\n*Eine Funktion einf\u00fchren, die **die Gr\u00f6\u00dfe der SQL-Abfragen \u00fcberpr\u00fcft**.*","b0444127":"Let's summarize our calculations in a small DataFrame.\n\n*Sammeln wir unsere Funktionen in einem kleinen DataFrame.*","291728d0":"In the first part of this notebook we'll see if Hacker News is dominated by a very small fraction of users. In the second part we'll check if the site is biased towards YCombinator startups. But let's start by importing necessary tools from biquery and bq_helper and looking at the description of columns, I'll comment my work in both English and German.\n\n*Die meisten Foren werden von dem kleinen Teil der Benutzer dominiert. Im ersten Teil werden wir sehen, ob es im Fall von Hacker News stimmt. Im zweiten Teil antworten wir auf die Frage, ob Hacker News die YCombinator Startups favorisiert?. Aber wir starten mit dem Importieren von Werkzeuge aus bigquery und bq_helper. Unterwegs mache ich Kommentare auf Deutsch und Englisch.*","0afcd14d":"What categories do we have in the column \"type\"?\n\n*In welchen **Kategorien** werden Texte in der Spalte \"**type**\" sortiert?*","00b3765e":"Delete all rows where the author is None.\n\n***L\u00f6schen** alle Zeilen, wo der Autor '**None**' hei\u00dft.*","a62fb31b":"Import pandas and save the result of an SQL-query as a DataFrame.\n\n*Pandas importieren und die SQL-Abfrage als **DataFrame** speichern und darstellen.*","cda1491c":"How much is it then in percent from all posts?\n\n*Wie viel ist es dann im **Prozent** von allen Postings?*","59544bad":"How many posts did every user make?\n\n*Wie viel hat jeder Benutzer gepostet?*","e74333e1":"At first we should check, how many stories about YCombinator are published and what their average score is. We use a REGEXP_CONTAINS function for this with a vertical bar between three possible spellings of YCombinator.\n\n*Erst m\u00fcssen wir sehen, **wie viele Stories** \u00fcber YCombinator publiziert werden und wie hoch der **Durschnittsscore** ist.*","a683d14b":"# Part 2 \/ Teil 2\n\n**Is Hacker News biased towards Y Combinator startups?**\n\n***Favorisiert Hacker News die Y Combinator Startups?***","97667a1a":"How many posts are there? Posts by None-users are ignored.\n\n*Wie viele Postings werden von Benutzer publiziert? None-Benutzer werden ignoriert.*","99b32684":"We have authors in the \"by\" column and BY is a KEYWORD in SQL, that's why I have to use backticks for this column name.\n\n*Autoren werden in der Spalte \"**by**\" aufgelistet und BY ist ein KEYWORD in SQL, deswegen muss ich f\u00fcr diese Spalte **Backticks** benutzen.*","a39f195e":"Although it means, that some users are much more active than others, but do they dominate the site? I would say yes if the Top 1% had published a half of all posts. If it's less, my answer to the question is no.\n\n*Es bedeutet zwar, dass manche Benutzer viel aktiver sind als die anderen, aber **f\u00fcrs Dominieren reicht es wahrsheinlich nicht**. Ich w\u00fcrde \u00fcbers Dominieren reden, wenn die Top 1% die H\u00e4lfte aller Postings publiziert h\u00e4tten. Jetzt k\u00f6nnen wir uns mit der zweiten Frage besch\u00e4ftigen.*","bc2013ca":"# Part 1 \/ Teil 1\n\nIs Hacker News dominated by a very small fraction of users?\n\n*Die meisten Foren werden von dem kleinen Teil der Benutzer dominiert. Stimmt es im Fall von Hacker News?*"}}