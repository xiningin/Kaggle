{"cell_type":{"34ed9331":"code","34bf179b":"code","e28c9842":"code","3751b4f6":"code","f33e87e1":"code","4de8354c":"code","7ea6461e":"code","79969644":"code","1da467e1":"code","7dcb1732":"markdown","767e8bce":"markdown","46a23cf7":"markdown","7554f6ea":"markdown","d5a68d2a":"markdown","92f5baab":"markdown","0231e33f":"markdown","61c98c6e":"markdown","12c6fee4":"markdown","4fe18b6c":"markdown","b769603a":"markdown","7a6adbd0":"markdown","3a935332":"markdown","ec634731":"markdown","2fbffbb7":"markdown","1e6c1526":"markdown","a7ca8ab3":"markdown","189f1ae9":"markdown"},"source":{"34ed9331":"from plotly.offline import init_notebook_mode, iplot\nfrom plotly.subplots import make_subplots\nfrom IPython.display import display, HTML\nimport matplotlib.pyplot as plt\nfrom collections import Counter \nimport plotly.graph_objs as go\nfrom plotly import tools\nimport plotly\nimport seaborn as sns\nimport pandas as pd \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport json\nfrom IPython.core.display import display, HTML, Javascript\nfrom string import Template\nimport pandas as pd\nimport numpy as np\nimport json, random\nimport IPython.display\nimport warnings\neps = pd.read_csv('..\/input\/chai-time-data-science\/Episodes.csv')","34bf179b":"from collections import Counter \ndef parse(col):\n    bigtxt = \";\".join(eps[col].dropna())\n    wrds = bigtxt.split(\";\")\n    wrds = Counter(wrds).most_common()\n    resp = {'name' : col, \"children\" : [], \"size\":\"\"}\n    for wrd in wrds:\n        doc = {'name' : wrd[0], \"size\": wrd[1]}\n        resp['children'].append(doc)\n    return resp\nresults = {'name' : 'flare', \"children\" : [], \"size\":\"\"}\nlanguages = parse('heroes_gender')\nresults['children'].append(languages)\nframeworks = parse('heroes_location')\nresults['children'].append(frameworks)\nframeworks = parse('heroes_nationality')\nresults['children'].append(frameworks)\nframeworks = parse('heroes_kaggle_username')\nresults['children'].append(frameworks)\nframeworks = parse('heroes_twitter_handle')\nresults['children'].append(frameworks)\nframeworks = parse('category')\nresults['children'].append(frameworks)\nframeworks = parse('flavour_of_tea')\nresults['children'].append(frameworks)\nwith open('output.json', 'w') as outfile:  \n    json.dump(results, outfile)\n    \nhtml_string = \"\"\"\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.node {\n  cursor: pointer;\n}\n\n.node:hover {\n  stroke: #000;\n  stroke-width: 1.5px;\n}\n\n.node--leaf {\n  fill: white;\n}\n\n.label {\n  font: 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  text-anchor: middle;\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff, 0 -1px 0 #fff;\n}\n\n.label,\n.node--root,\n.node--leaf {\n  pointer-events: none;\n}\n\n<\/style>\n<svg width=\"800\" height=\"800\"><\/svg>\n\"\"\"\n\njs_string=\"\"\"\n require.config({\n    paths: {\n        d3: \"https:\/\/d3js.org\/d3.v4.min\"\n     }\n });\n\n  require([\"d3\"], function(d3) {\n\n   console.log(d3);\n\nvar svg = d3.select(\"svg\"),\n    margin = 20,\n    diameter = +svg.attr(\"width\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + diameter \/ 2 + \",\" + diameter \/ 2 + \")\");\n\nvar color = d3.scaleSequential(d3.interpolatePlasma)\n    .domain([-4, 4]);\n\nvar pack = d3.pack()\n    .size([diameter - margin, diameter - margin])\n    .padding(2);\n\nd3.json(\"output.json\", function(error, root) {\n  if (error) throw error;\n\n  root = d3.hierarchy(root)\n      .sum(function(d) { return d.size; })\n      .sort(function(a, b) { return b.value - a.value; });\n\n  var focus = root,\n      nodes = pack(root).descendants(),\n      view;\n\n  var circle = g.selectAll(\"circle\")\n    .data(nodes)\n    .enter().append(\"circle\")\n      .attr(\"class\", function(d) { return d.parent ? d.children ? \"node\" : \"node node--leaf\" : \"node node--root\"; })\n      .style(\"fill\", function(d) { return d.children ? color(d.depth) : null; })\n      .on(\"click\", function(d) { if (focus !== d) zoom(d), d3.event.stopPropagation(); });\n\n  var text = g.selectAll(\"text\")\n    .data(nodes)\n    .enter().append(\"text\")\n      .attr(\"class\", \"label\")\n      .style(\"fill-opacity\", function(d) { return d.parent === root ? 1 : 0; })\n      .style(\"display\", function(d) { return d.parent === root ? \"inline\" : \"none\"; })\n      .text(function(d) { return d.data.name; });\n\n  var node = g.selectAll(\"circle,text\");\n\n  svg\n      .style(\"background\", color(-1))\n      .on(\"click\", function() { zoom(root); });\n\n  zoomTo([root.x, root.y, root.r * 2 + margin]);\n\n  function zoom(d) {\n    var focus0 = focus; focus = d;\n\n    var transition = d3.transition()\n        .duration(d3.event.altKey ? 7500 : 750)\n        .tween(\"zoom\", function(d) {\n          var i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2 + margin]);\n          return function(t) { zoomTo(i(t)); };\n        });\n\n    transition.selectAll(\"text\")\n      .filter(function(d) { return d.parent === focus || this.style.display === \"inline\"; })\n        .style(\"fill-opacity\", function(d) { return d.parent === focus ? 1 : 0; })\n        .on(\"start\", function(d) { if (d.parent === focus) this.style.display = \"inline\"; })\n        .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n  }\n\n  function zoomTo(v) {\n    var k = diameter \/ v[2]; view = v;\n    node.attr(\"transform\", function(d) { return \"translate(\" + (d.x - v[0]) * k + \",\" + (d.y - v[1]) * k + \")\"; });\n    circle.attr(\"r\", function(d) { return d.r * k; });\n  }\n});\n  });\n \"\"\"\nfrom IPython.core.display import display, HTML, Javascript\nh = display(HTML(html_string))\nj = IPython.display.Javascript(js_string)\nIPython.display.display_javascript(j)\n","e28c9842":"eps_copy = pd.DataFrame(eps['heroes_nationality'].value_counts())\ncolors = ['#fad46b']*len(eps_copy)\neps_copy['idx'] = eps_copy.index\nannotations = []\n    \nfig = go.Figure(data=[go.Bar(name='', y=eps_copy['idx'], x=eps_copy['heroes_nationality'], orientation='h', marker=dict(color=colors, opacity=0.6))], \n                    layout = go.Layout(title=\"Nationality of our heroes\", plot_bgcolor='#fff', paper_bgcolor='#fff', margin=dict(l=100), \n                                       width=900, height=500, legend=dict(orientation=\"h\", x=0.1, y=1.1)))\nfig.update_layout(barmode='group')\nfig.update_layout(annotations=annotations)\nfig.update_xaxes(showgrid=False, zeroline=False, title=\"% of respondents\")\nfig.update_yaxes(showgrid=False, zeroline=False)\nfig.add_shape(go.layout.Shape(type=\"rect\", xref=\"x\", yref=\"paper\", x0=5, x1=28.6, y0=0.4, y1=0, fillcolor=\"gray\", opacity=0.2, layer=\"below\", line_width=0))\nfig.show()\n","3751b4f6":"plotly.io.templates.default = \"none\"\n\neps_copy1 = pd.DataFrame(eps[eps[\"category\"] == \"Kaggle\"]['heroes_nationality'].value_counts())\neps_copy1['idx'] = eps_copy1.index\n\neps_copy2 = pd.DataFrame(eps[eps[\"category\"] == \"Other\"]['heroes_nationality'].value_counts())\neps_copy2['idx'] = eps_copy2.index\n\neps_copy3 = pd.DataFrame(eps[eps[\"category\"] == \"Industry\"]['heroes_nationality'].value_counts())\neps_copy3['idx'] = eps_copy3.index\n\neps_copy4 = pd.DataFrame(eps[eps[\"category\"] == \"Research\"]['heroes_nationality'].value_counts())\neps_copy4['idx'] = eps_copy4.index\n\ntrace1 = go.Bar(y=eps_copy1['idx'], x=eps_copy1['heroes_nationality'], name=\"\", orientation=\"h\", marker=dict(color=colors, opacity=0.6))\ntrace2 = go.Bar(y=eps_copy2['idx'], x=eps_copy2['heroes_nationality'], name=\"\", orientation=\"h\", marker=dict(color=colors, opacity=0.6))\ntrace3 = go.Bar(y=eps_copy3['idx'], x=eps_copy3['heroes_nationality'], name=\"\", orientation=\"h\", marker=dict(color=colors, opacity=0.6))\ntrace4 = go.Bar(y=eps_copy4['idx'], x=eps_copy4['heroes_nationality'], name=\"\", orientation=\"h\", marker=dict(color=colors, opacity=0.6))\nfig = make_subplots(rows=3, cols=1, subplot_titles=(\"<b>kagglers by nationality<\/b>\", \"<b>Industry DS by nationality<\/b>\", \"<b>Research DS by nationality\"))\nfig.add_trace(trace1, 1, 1)\nfig.add_trace(trace3, 2, 1)\nfig.add_trace(trace4, 3, 1)\nfig.update_xaxes(showgrid=False, zeroline=False)\nfig.update_yaxes(showgrid=False, zeroline=False)\nfig.show()","f33e87e1":"df = eps\nkey1 = \"Male\"\ndf1 = df[df['heroes_gender'] == key1]\ndf2 = df[df['heroes_gender'] != key1]\n\nnations = eps[\"heroes_nationality\"].dropna().unique()\nplt.figure(figsize=(18,12))\n\nvals = []\nfor i, j in enumerate(nations):\n    country = nations[i]\n    country_df = df[df['heroes_nationality'] == country]\n    ddf1 = country_df[country_df['heroes_gender'] == key1]\n    ddf2 = country_df[country_df['heroes_gender'] != key1]\n    plt.subplot(3, 7, i+1)\n    \n    if i < 4:\n        colors = [\"#60cfe6\", \"#ff8ce0\"]\n    elif i < 8:\n        colors = [\"#60cfe6\", \"#ff8ce0\"]\n    else:\n        colors = [\"#60cfe6\", \"#ff8ce0\"]\n    \n    vals.append(len(ddf1) \/ (len(ddf1) + len(ddf2)))    \n    plt.pie([len(ddf1), len(ddf2)],\n            labels=[\"M\", \"F\"],\n            autopct=\"%1.0f%%\", \n            colors=colors,\n            wedgeprops={\"linewidth\":5,\"edgecolor\":\"white\"})\n    plt.title(r\"$\\bf{\" + country + \"}$\")","4de8354c":"gender = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndf = gender[gender[\"Q5\"] == \"Data Scientist\"]\nkey1 = \"Male\"\ndf = df.tail(19717)\ndf1 = df[df['Q2'] == key1]\ndf2 = df[df['Q2'] != key1]\nnation_map = {\"United States of America\" : \"USA\", \"United Kingdom of Great Britain and Northern Ireland\" : \"UK\"}\nnations = df[\"Q3\"].dropna().unique()\nplt.figure(figsize=(18,12))\n\nvals = []\nfor i, j in enumerate(nations):\n    country = nations[i]\n    country_df = df[df['Q3'] == country]\n    ddf1 = country_df[country_df['Q2'] == key1]\n    ddf2 = country_df[country_df['Q2'] != key1]\n    plt.subplot(6, 10, i+1)\n    \n    if i < 30:\n        colors = [\"#60cfe6\", \"#ff8ce0\"]\n    else:\n        colors = [\"#827ec4\", \"#ff8ce0\"]\n    \n    vals.append(len(ddf1) \/ (len(ddf1) + len(ddf2)))    \n    plt.pie([len(ddf1), len(ddf2)],\n            labels=[\"M\", \"F\"],\n            autopct=\"%1.0f%%\", \n            colors=colors,\n            wedgeprops={\"linewidth\":5,\"edgecolor\":\"white\"})\n    if country in nation_map:\n        country = nation_map[country]\n    plt.title(r\"$\\bf{\" + country + \"}$\")","7ea6461e":"inter = pd.read_csv('..\/input\/chai-time-data-science\/Cleaned Subtitles\/E59.csv')","79969644":"s1inter = inter[inter['Speaker'] == 'Suzana']\ns2inter = inter[inter['Speaker'] == 'Sanyam Bhutani']\nfrom wordcloud import WordCloud ,STOPWORDS;stopword=set(STOPWORDS)\n\nsubset=s1inter\ntext=subset.Text.values\nwc= WordCloud(background_color=\"black\",max_words=2000,mask=None,stopwords=stopword)\nwc.generate(\" \".join(text))\nplt.figure(figsize=(20,10))\nplt.subplot(121)\nplt.axis(\"off\")\nplt.title(\"Words frequented in Suzana's Comments\", fontsize=20)\nplt.imshow(wc.recolor(colormap= 'viridis' , random_state=17), alpha=0.98)\nsubset=s2inter\ntext=subset.Text.values\nplt.subplot(122)\nwc= WordCloud(background_color=\"black\",max_words=2000,mask=None,stopwords=stopword)\nwc.generate(\" \".join(text))\nplt.axis(\"off\")\nplt.title(\"Words frequented in Sanyam's Comments\", fontsize=20)\nplt.imshow(wc.recolor(colormap= 'viridis' , random_state=17), alpha=0.98)\nplt.show()","1da467e1":"df = eps\nkey1 = \"Kaggle\"\nkey2 = \"Industry\"\nkey3 = \"Research\"\ndf1 = df[df['category'] == key1]\ndf2 = df[df['category'] == key2]\ndf3 = df[df['category'] == key3]\n\nnations = eps[\"heroes_nationality\"].dropna().unique()\nplt.figure(figsize=(18,12))\n\nvals = []\nfor i, j in enumerate(nations):\n    country = nations[i]\n    country_df = df[df['heroes_nationality'] == country]\n    ddf1 = country_df[country_df['category'] == key1]\n    ddf2 = country_df[country_df['category'] == key2]\n    ddf3 = country_df[country_df['category'] == key3]                \n    plt.subplot(3, 7, i+1)\n    \n    if i < 4:\n        colors = [\"#60cfe6\", \"#ff8ce0\", \"#827ec4\"]\n    elif i < 8:\n        colors = [\"#60cfe6\", \"#ff8ce0\", \"#827ec4\"]\n    else:\n        colors = [\"#60cfe6\", \"#ff8ce0\", \"#827ec4\"]\n    \n    plt.pie([len(ddf1), len(ddf2), len(ddf3)],\n            labels=[\"K\", \"I\", \"R\"],\n            autopct=\"%1.0f%%\", \n            colors=colors,\n            wedgeprops={\"linewidth\":5,\"edgecolor\":\"white\"})\n    plt.title(r\"$\\bf{\" + country + \"}$\")","7dcb1732":"Sanyam Bhutani (@init27) is perhaps one of the most famous DS and ML bloggers out there - and his podcast is by no means an exception. So, well, we might need to figure out the magic Sanyam has put in his chai so we can be equally successful ;-).","767e8bce":"It seems like we have a lot of female respondents living in the United States of America with the same being true for the male respondents. In Kaggle's older Kaggle ML and DS Survey challenges, it was heavily outlined that the United States of America was the place to be for aspiring data scientists (see [\ud83d\udcc8 2019 Data Science Trends by Fatih Bilgin\n](https:\/\/www.kaggle.com\/fatihbilgin\/2019-data-science-trends#Country-Distribution) for an example) with the European nations too producing some absolutely brilliant data scientists like CPMP (formerly directed ML operations at IBM).\n\nIt seems like male respondents are in a wide variety of countries, although that could just be an effect of the distribution of male and female heroes. However Africa is one place where we have a female hero and we do not have a male hero. ","46a23cf7":"# 1. Geographical analysis","7554f6ea":"As an example, let's take the interview of Suzana Illi\u0107\t(CTDS episode number 59). Suzana Illi\u0107 is from Austria, a nation which has a male-to-female ratoi of 88:12 in the data science industry (as showcased by the above plots).","d5a68d2a":"So it seems like Sanyam's words are more ML-oriented in a way, whereas Suzana's are much more related to the work she does (democratizing AI). Time to move on to our next segment: *the war between Research, Kaggle and Industry.*","92f5baab":"Let's analyze most frequent words per speaker.","0231e33f":"+ We have a lot of males as opposed to females (unfortunately so). \n+ As we have seen in the last few years, we have had a lot of Americans and Indians in the interview which reflects the overall trend in data science right now.","61c98c6e":"# 50 shades of Chai - with d3.js!","12c6fee4":"We have three distinct types of people that Sanyam has interviewed till date based on their field of expertise which are respectively <mark>those who work in research, those who are kagglers and those who are in industry.<\/mark>","4fe18b6c":"As you see here, even our small sample is highly representative of the population except with a few edge cases which have rather subverted my expectations quite a bit:\n+ Romania is the most progressive nation here, with an almost equal distribution of male and female data scientists. CTDS Show, please interview someone from Romania to explain their progressiveness first hand (preferably a Kaggler\/).\n+ Philippines and Tunisia too are very progressive (or atleast somewhat better than the other nations) when it comes to gender, performing considerably better than their first world comrades when it comes to the gender distribution.","b769603a":"As we stated earlier, there is a huge imbalance among the genders present in the show. However, it is also established that our current small sample, no matter how exemplary the people interviewd are, are very similar to the larger population. \n\nWe are now going to use the data from the 2019 Kaggle ML and DS survey to check whether the distribution of gender here is similar to the distribution of gender in the Kaggle ML and DS survey.","7a6adbd0":"So, well, we have a lot of people over here, but how about a breakdown by gender?","3a935332":"As we see, we have a majority of Kagglers who dominate the country (or maybe Sanyam has not interviewed them yet) they reside in: Gilberto Titericz (or Giba as you may know him) in Brazil, Yauhen Babakin (b.e.s) in Belarus and many others.","ec634731":"Now this is actually pretty interesting. If we can take note here:\n+ USA is leading by a huge margin. This is important because most of the people involved here (like Vladimir Iglovikov for example) are originally from Russia but are in possession of a USA passport, making them USA citizens.\n+ Somehow India is not very popular when it comes to nationality, probably because of NRIs (Non Registered Indians) being prominent as many Indians are now living in foreign countries.","2fbffbb7":"# 3. The War between Research, Kaggle and Industry","1e6c1526":"So we can see that the interviews by country are heavily male dominant - as our earlier plots said, this could be that the people interviewed by Sanyam are a sample size representative of a larger population. Looking at 2019's ML and DS survey results further reinforce the statement that the field is dominated by primarily males.\n\nHowever, we will need to analyze this gender representation further in the next segment of our exploratory data analysis - which is primarily going to focus on the gender discrepancy.","a7ca8ab3":"# 2. The gender discrepancy","189f1ae9":"This is the highly anticipated d3.js you all heard about - I hope it does not disappoint you. "}}