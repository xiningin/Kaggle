{"cell_type":{"5869a999":"code","a739ddf4":"code","d5c98ebd":"code","0aac2c7c":"code","23bc4327":"code","08e31481":"code","5356e7ac":"code","3a09a7b7":"code","b596e471":"code","5ad88a5e":"code","a9d3d26b":"code","d61082fd":"code","7b37c705":"code","8221afdd":"code","2ead4a24":"code","7bd82016":"code","436ced13":"code","14aff8a3":"code","887d17ad":"code","b5b4ace1":"code","7022000d":"code","dbd24022":"code","d1731a80":"code","120ed352":"code","cc8c310f":"code","72fd0317":"code","318897db":"code","d15d3c77":"code","1bbfced6":"code","5375e0aa":"code","91c8c4dd":"code","d67d7534":"code","f6443804":"code","b57cdd6b":"code","e9b916c5":"code","333084e3":"markdown","da19b19a":"markdown","4e7ed60c":"markdown","ba9b5820":"markdown","0146f728":"markdown","38eb337c":"markdown"},"source":{"5869a999":"import pandas as pd","a739ddf4":"data = pd.read_csv('..\/input\/train\/train.csv')","d5c98ebd":"data.head()","0aac2c7c":"data.tail()","23bc4327":"data = data.dropna()","08e31481":"x = data.drop('label', axis=1)","5356e7ac":"y = data['label']","3a09a7b7":"x.shape","b596e471":"y.shape","5ad88a5e":"import tensorflow as tf","a9d3d26b":"from tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.preprocessing.text import one_hot\nfrom tensorflow.keras.layers import LSTM\nfrom tensorflow.keras.layers import Dense","d61082fd":"voc_size = 5000","7b37c705":"messages = x.copy()","8221afdd":"messages['title'][1]","2ead4a24":"messages.reset_index(inplace=True)","7bd82016":"import nltk\nimport re\nfrom nltk.corpus import stopwords","436ced13":"nltk.download('stopwords')","14aff8a3":"#dataset preprocessing","887d17ad":"from nltk.stem.porter import PorterStemmer\nps = PorterStemmer()\ncorpus = []\nfor i in range(0, len(messages)):\n    # print(i)\n    review = re.sub('[^a-zA-Z]', ' ', messages['title'][i])\n    review = review.lower()\n    review = review.split()\n        \n    review = [ps.stem(word) for word in review if not word in stopwords.words('english')]\n    review = ' '.join(review)\n    corpus.append(review)","b5b4ace1":"corpus","7022000d":"onehot_repr = [one_hot(words, voc_size)for words in corpus]\nonehot_repr","dbd24022":"sent_length = 20\nembedded_docs =pad_sequences(onehot_repr,padding='pre',maxlen=sent_length)\nembedded_docs","d1731a80":"embedded_docs[0]","120ed352":"embedding_vector_features = 40\nmodel = Sequential()\nmodel.add(Embedding(voc_size,embedding_vector_features, input_length=sent_length))\nmodel.add(LSTM(100))\nmodel.add(Dense(1, activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\nmodel.summary()","cc8c310f":"len(embedded_docs),y.shape","72fd0317":"import numpy as np\nx_final = np.array(embedded_docs)\ny_final = np.array(y)","318897db":"x_final.shape, y_final.shape","d15d3c77":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x_final, y_final, test_size=0.33, random_state=42)","1bbfced6":"model.fit(x_train,y_train,validation_data=(x_test,y_test), epochs=10, batch_size=64)","5375e0aa":"from tensorflow.keras.layers import Dropout\n\nembedding_vector_features=40\nmodel_1=Sequential()\nmodel_1.add(Embedding(voc_size,embedding_vector_features,input_length=sent_length))\nmodel_1.add(Dropout(0.3))\nmodel_1.add(LSTM(100))\nmodel_1.add(Dropout(0.3))\nmodel_1.add(Dense(1,activation='sigmoid'))\nmodel_1.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])","91c8c4dd":"model_1.fit(x_train,y_train,validation_data=(x_test,y_test), epochs=10, batch_size=64)","d67d7534":"y_pred=model_1.predict_classes(x_test)","f6443804":"from sklearn.metrics import confusion_matrix","b57cdd6b":"confusion_matrix(y_test,y_pred)","e9b916c5":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test,y_pred)","333084e3":"# Adding Dropout","da19b19a":"# Performance metrics and accuracy","4e7ed60c":"# Embedding Representation","ba9b5820":"# Model Training","0146f728":"# onebot representation","38eb337c":"# Creating model"}}