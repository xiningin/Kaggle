{"cell_type":{"653b6100":"code","a86d5856":"code","ab2b3881":"code","664d3b13":"code","beff484b":"code","605431ac":"code","2b0d6ac6":"code","905becde":"code","352f23fa":"code","b19a1c5f":"code","b9b9e476":"code","7bec5d5d":"code","7e59fd88":"markdown","15e4c86b":"markdown","7903d548":"markdown","b5c8ff12":"markdown"},"source":{"653b6100":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression \nfrom sklearn import metrics \nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a86d5856":"red = pd.read_csv('..\/input\/wine-quality\/winequality-red.csv',sep=';')\nwhite = pd.read_csv('..\/input\/wine-quality\/winequality-white.csv',sep=';')","ab2b3881":"color_red = np.repeat('red', 1599)\ncolor_white = np.repeat('white', 4898)\n\nred['wine_type'] = color_red\nwhite['wine_type'] = color_white","664d3b13":"df = red.append(red, ignore_index=True) \ndf.head()","beff484b":"data = white.append(white, ignore_index=True) \ndata.head()","605431ac":"#combined dataset\nwine = red.append(white, ignore_index=True) \nwine.head(4000)","2b0d6ac6":"correlations = df.corr()['quality'].drop('quality')\nprint(correlations)","905becde":"sns.heatmap(df.corr())\nplt.show()","352f23fa":"plt.figure(figsize=(10,10))\nsns.heatmap(df.corr(), annot=True,cmap='ocean')\nplt.show()","b19a1c5f":"sns.countplot(x='quality',hue='wine_type',data=wine,palette='RdBu')\nplt.title('Distribution of Quality-Red and White wine')\nplt.xlabel('Quality Scaler')\nplt.tight_layout()","b9b9e476":"dataFrame = pd.DataFrame(data)\nsns.set()\nfig = data.hist(figsize=(15,10), color='red', xlabelsize=8, ylabelsize=8)\n[x.title.set_size(8) for x in fig.ravel()]\nplt.show()","7bec5d5d":"def get_features(correlation_threshold):\n    abs_corrs = correlations.abs()\n    high_correlations = abs_corrs\n    #[abs_corrs > correlation_threshold].index.values.tolist()\n    return high_correlations\n\nfeatures = get_features(0.05) \nprint(features) \nx = features\ny = df['quality']","7e59fd88":"# If you like this notebook, please give an Upvote! Don't forget to check out my other notebooks too!\n\n* [ConnectX Baseline](https:\/\/www.kaggle.com\/brendan45774\/connectx-baseline)\n* [Countries Life Expectancy Animation](https:\/\/www.kaggle.com\/brendan45774\/countries-life-expectancy-animation)\n* [Data Visuals - Matplotlib](http:\/\/www.kaggle.com\/brendan45774\/data-visuals-matplotlib)\n* [Digit Recognizer Solution](http:\/\/www.kaggle.com\/brendan45774\/digit-recognizer-solution)\n* [Dictionary and Pandas Cheat sheet](https:\/\/www.kaggle.com\/brendan45774\/dictionary-and-pandas-cheat-sheet)\n* [EDA Tutorial Hollywood Movies](https:\/\/www.kaggle.com\/brendan45774\/eda-tutorial-hollywood-movies)\n* [Getting Started with Manifold Learning - Isomap](https:\/\/www.kaggle.com\/brendan45774\/getting-started-with-manifold-learning-isomap)\n* [Getting started with Matplotlib](http:\/\/www.kaggle.com\/brendan45774\/getting-started-with-matplotlib)\n* [Guide to Matplotlib Image](https:\/\/www.kaggle.com\/brendan45774\/guide-to-matplotlib-image)\n* [HOG features - Histogram of Oriented Gradients](https:\/\/www.kaggle.com\/brendan45774\/hog-features-histogram-of-oriented-gradients)\n* [How to get the lowest score](https:\/\/www.kaggle.com\/brendan45774\/how-to-get-the-lowest-score)\n* [House predict solution](http:\/\/www.kaggle.com\/brendan45774\/house-predict-solution)\n* [K-Means Clustering (Image Compression)](https:\/\/www.kaggle.com\/brendan45774\/k-means-clustering-image-compression)\n* [Kuzushiji-MNIST Panda](http:\/\/www.kaggle.com\/brendan45774\/kuzushiji-mnist-panda)\n* [Plotly Coronavirus (Covid-19)](https:\/\/www.kaggle.com\/brendan45774\/plotly-coronavirus-covid-19)\n* [Titanic Top Solution](http:\/\/www.kaggle.com\/brendan45774\/titanic-top-solution)\n* [Titanic Data Solution](http:\/\/www.kaggle.com\/brendan45774\/titanic-data-solution)\n* [Topic Modeling (LDA)](https:\/\/www.kaggle.com\/brendan45774\/topic-modeling-lda)\n* [Wine quality - Regression prediction](https:\/\/www.kaggle.com\/brendan45774\/wine-quality-regression-prediction)\n* [Word Cloud - Analyzing Names](https:\/\/www.kaggle.com\/brendan45774\/word-cloud-analyzing-names)","15e4c86b":"# Import Libraires","7903d548":"# Data set","b5c8ff12":"# Correlations"}}