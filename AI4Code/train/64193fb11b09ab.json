{"cell_type":{"ad0208d9":"code","4b29051e":"code","b56d0042":"code","943b2e20":"code","9aa604bb":"code","e849f205":"code","9fcadb4a":"code","db7b5235":"code","de43ac5d":"code","219fe1f4":"code","4b9300c3":"code","41720b5e":"code","88656742":"code","87182c61":"markdown","00b8bca4":"markdown"},"source":{"ad0208d9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","4b29051e":"%%capture\n!pip install nyaggle","b56d0042":"df_train = pd.read_feather('..\/input\/optiver-df2\/X.f')","943b2e20":"y = pd.read_feather('..\/input\/optiver-df2\/y.f')","9aa604bb":"n_th = int(0.5*len(df_train))\nx_train = df_train.iloc[:n_th].copy()\nx_valid = df_train.iloc[n_th:].copy()\n\nx_train.head()","e849f205":"sns.distplot(y[:n_th].sample(50000).dropna(), label='train')\nsns.distplot(y[n_th:].sample(50000).dropna(), label='valid')\nplt.legend()\nplt.show()","9fcadb4a":"from nyaggle.validation import adversarial_validate\nfrom lightgbm import LGBMClassifier\n\ndrop_features = [\n    'trade_150.tau_cluster20_sv_mean_cluster40_size_mean',\n    'trade_150.tau_cluster20_sv_mean_cluster40_p2_mean',\n    'trade_150.tau_cluster20_sv_mean_cluster20_size_mean',\n    'trade_150.tau_cluster20_sv_mean_cluster20_p2_mean',\n    'trade_150.tau_cluster20_sv_mean_cluster40_p1_mean',\n    'trade_150.tau_cluster20_sv_mean_cluster20_p1_mean',\n\n    'book.log_return1.realized_volatility_cluster40_s_amin',\n    'book.log_return1.realized_volatility_cluster40_sv_amin',\n    'book.log_return1.realized_volatility_cluster40_p2_amin',\n    'book.log_return1.realized_volatility_cluster20_sv_amin',\n    'book.log_return1.realized_volatility_cluster20_s_amin',\n    'book.log_return1.realized_volatility_cluster20_p2_amin',\n    \n    'book.log_return1.realized_volatility_cluster40_s_std',\n    'book.log_return1.realized_volatility_cluster40_sv_std',\n    'book.log_return1.realized_volatility_cluster20_s_std',\n    'book.log_return1.realized_volatility_cluster20_sv_std',\n    'trade.size.sum_cluster40_s_mean',\n    'trade.size.sum_cluster20_s_mean',\n\n]\n\nestimator = LGBMClassifier(n_estimators=50, objective='binary', importance_type='gain',\n                           random_state=0)\n\ndrop_cols = ['stock_id', 'stock_id_emb0', 'stock_id_emb1', 'stock_id_emb2'] + drop_features\nret = adversarial_validate(x_train.drop(drop_cols, axis=1), x_valid.drop(drop_cols, axis=1), estimator=estimator)","db7b5235":"def plot(col):\n    import seaborn as sns\n    sns.distplot(x_train[col].sample(50000).dropna(), label='train')\n    sns.distplot(x_valid[col].sample(50000).dropna(), label='valid')\n    plt.legend()\n    plt.show()","de43ac5d":"for f in ret.importance.feature[:30]:\n    plot(f)\n    plt.show()","219fe1f4":"y_train","4b9300c3":"plot('trade.size.sum_cluster20_s_mean')","41720b5e":"np.abs(x_train.sample(30000).skew()).sort_values(ascending=False).head(30)","88656742":"sns.distplot(x_train['book_450.price_spread.std'])","87182c61":"## Skewed feature","00b8bca4":"## Show features by adversarial validation"}}