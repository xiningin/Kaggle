{"cell_type":{"42bb0706":"code","f4b4ac17":"code","411a094b":"code","8c8e0c85":"code","6b186af6":"code","1dd7ee21":"code","ae8f99c0":"code","17fbd88c":"code","1259448a":"code","036611c2":"code","ae27766e":"code","88bac33c":"code","d4d2cd41":"code","7236f9c7":"code","38be4fee":"markdown","5758d623":"markdown","ecfacf0e":"markdown"},"source":{"42bb0706":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f4b4ac17":"#\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\ntrain= pd.read_csv(\"..\/input\/train.csv\")\ntest= pd.read_csv(\"..\/input\/test.csv\")\n#\u5148\u982d\u306e\uff15\u30c7\u30fc\u30bf\u306e\u8868\u793a\ntrain.head()","411a094b":"#\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u60c5\u5831\u3092\u8868\u793a\ntrain.info()","8c8e0c85":"#\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u60c5\u5831\u306e\u8868\u793a\ntest.info()","6b186af6":"#\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u7d71\u8a08\u91cf\u306e\u78ba\u8a8d\ntrain.describe()","1dd7ee21":"#\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u7d71\u8a08\u91cf\u306e\u78ba\u8a8d\ntest.describe()","ae8f99c0":"#\u8a13\u7df4\u30c7\u30fc\u30bf\u306eAge\u306e\u6b20\u640d\u5024\u3092\u4e2d\u592e\u5024\u3067\u57cb\u3081\u308b\ntrain[\"Age\"] = train[\"Age\"].fillna(train[\"Age\"].median())\n#\u8a13\u7df4\u30c7\u30fc\u30bf\u306eEmbarked\u3092S\u3067\u57cb\u3081\u308b\ntrain[\"Embarked\"] = train[\"Embarked\"].fillna(\"S\")","17fbd88c":"#\u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u30c7\u30fc\u30bf\u306e\u6570\u5024\u3078\u306e\u7f6e\u304d\u63db\u3048\ntrain[\"Sex\"][train[\"Sex\"] == \"male\"] = 0\ntrain[\"Sex\"][train[\"Sex\"] == \"female\"] = 1\ntrain[\"Embarked\"][train[\"Embarked\"] == \"S\" ] = 0\ntrain[\"Embarked\"][train[\"Embarked\"] == \"C\" ] = 1\ntrain[\"Embarked\"][train[\"Embarked\"] == \"Q\"] = 2","1259448a":"train.head()","036611c2":"#\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3082\u540c\u69d8\u306b\u51e6\u7406\ntest[\"Age\"] = test[\"Age\"].fillna(test[\"Age\"].median())\ntest[\"Sex\"][test[\"Sex\"] == \"male\"] = 0\ntest[\"Sex\"][test[\"Sex\"] == \"female\"] = 1\ntest[\"Embarked\"][test[\"Embarked\"] == \"S\"] = 0\ntest[\"Embarked\"][test[\"Embarked\"] == \"C\"] = 1\ntest[\"Embarked\"][test[\"Embarked\"] == \"Q\"] = 2\ntest.Fare[152] = test.Fare.median()","ae27766e":"# scikit-learn\u306e\u6c7a\u5b9a\u6728\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u3057\u307e\u3059\nfrom sklearn import tree","88bac33c":"# \u300ctrain\u300d\u306e\u76ee\u7684\u5909\u6570\u3068\u8aac\u660e\u5909\u6570\u306e\u5024\u3092\u53d6\u5f97\ntarget = train[\"Survived\"].values\nfeatures_one = train[[\"Pclass\", \"Sex\", \"Age\", \"Fare\"]].values\n \n# \u6c7a\u5b9a\u6728\u306e\u4f5c\u6210\nmy_tree_one = tree.DecisionTreeClassifier()\nmy_tree_one = my_tree_one.fit(features_one, target)\n \n# \u300ctest\u300d\u306e\u8aac\u660e\u5909\u6570\u306e\u5024\u3092\u53d6\u5f97\ntest_features = test[[\"Pclass\", \"Sex\", \"Age\", \"Fare\"]].values\n \n# \u300ctest\u300d\u306e\u8aac\u660e\u5909\u6570\u3092\u4f7f\u3063\u3066\u300cmy_tree_one\u300d\u306e\u30e2\u30c7\u30eb\u3067\u4e88\u6e2c\nmy_prediction = my_tree_one.predict(test_features)","d4d2cd41":"#\u4e88\u6e2c\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\nprint(my_prediction)","7236f9c7":"# PassengerId\u3092\u53d6\u5f97\nPassengerId = np.array(test[\"PassengerId\"]).astype(int)\n \n# my_prediction(\u4e88\u6e2c\u30c7\u30fc\u30bf\uff09\u3068PassengerId\u3092\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3078\u843d\u3068\u3057\u8fbc\u3080\nmy_solution = pd.DataFrame(my_prediction, PassengerId, columns = [\"Survived\"])\n \n# my_tree_one.csv\u3068\u3057\u3066\u66f8\u304d\u51fa\u3057\nmy_solution.to_csv(\"my_tree_one.csv\", index_label = [\"PassengerId\"])","38be4fee":"\u30c7\u30fc\u30bf\u6982\u8981  \n418\u30c7\u30fc\u30bf\u3042\u308b  \nage,Fare,cabin\u306bnull\uff08\u6b20\u640d\u5024\uff09\u3042\u308a  ","5758d623":"\u30c7\u30fc\u30bf\u6982\u8981  \n\uff18\uff19\uff11\u30c7\u30fc\u30bf\u3042\u308b  \nage,cabin,embarked\u306bnull\uff08\u6b20\u640d\u5024\uff09\u3042\u308a  ","ecfacf0e":"\u5404\u30c7\u30fc\u30bf\u306e\u8aac\u660e  \n  \nPassengerId \u2013 \u4e57\u5ba2\u8b58\u5225\u30e6\u30cb\u30fc\u30afID  \nSurvived \u2013 \u751f\u5b58\u30d5\u30e9\u30b0\uff080=\u6b7b\u4ea1\u30011=\u751f\u5b58\uff09  \nPclass \u2013 \u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9  \nName \u2013 \u4e57\u5ba2\u306e\u540d\u524d  \nSex \u2013 \u6027\u5225\uff08male=\u7537\u6027\u3001female\uff1d\u5973\u6027\uff09  \nAge \u2013 \u5e74\u9f62  \nSibSp \u2013 \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u306b\u540c\u4e57\u3057\u3066\u3044\u308b\u5144\u5f1f\/\u914d\u5076\u8005\u306e\u6570  \nparch \u2013 \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u306b\u540c\u4e57\u3057\u3066\u3044\u308b\u89aa\/\u5b50\u4f9b\u306e\u6570  \nticket \u2013 \u30c1\u30b1\u30c3\u30c8\u756a\u53f7  \nfare \u2013 \u6599\u91d1  \ncabin \u2013 \u5ba2\u5ba4\u756a\u53f7  \nEmbarked \u2013 \u51fa\u6e2f\u5730\uff08\u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u3078\u4e57\u3063\u305f\u6e2f\uff09  "}}