{"cell_type":{"cbdb8c0f":"code","2b99fc08":"code","7bf5a7cd":"code","db894a14":"code","a903178e":"code","8d4e3501":"code","99e49575":"code","4ef52978":"code","1a765f8b":"code","289f6f34":"code","abc5f537":"code","0c3418f5":"code","2a40753e":"code","cdaa2fb0":"code","8ef9d5c4":"code","dd7a4613":"code","f38b2ae0":"code","4dd4ec76":"code","1447cd3d":"code","9b0aeda2":"code","e9370d8d":"code","2d1a9088":"code","fb4ce582":"code","bbbe4d99":"code","8f6c5f45":"code","44e4cd52":"code","a48b342e":"code","bb49f1a4":"code","5f12be65":"code","86ef229c":"code","3d4af1e9":"code","1ba9f3f0":"code","d468fdf6":"code","32978e8c":"code","57947dc7":"code","c2647652":"code","72842826":"code","c6f12278":"code","40501367":"code","3a8dab3c":"code","bdbf828f":"code","8a5129b8":"markdown","9055ab64":"markdown","91c78d5f":"markdown","b2ff44b0":"markdown","a75511bf":"markdown","2a5c629e":"markdown","edf74817":"markdown","11118a45":"markdown","1bbf14d8":"markdown","cafa90c8":"markdown","eeb21b1b":"markdown","984ac1a8":"markdown","b16f00de":"markdown","1548e084":"markdown","06de1e4f":"markdown","9db8ddd1":"markdown","3bf1508a":"markdown","b21dec8a":"markdown","b5dee681":"markdown","4dd5b411":"markdown","51ab5540":"markdown","689585b5":"markdown","cac067db":"markdown","926e5348":"markdown","bf825127":"markdown","f00c8670":"markdown","250f6845":"markdown","5275a705":"markdown","bd4a667b":"markdown","4c37fe0b":"markdown"},"source":{"cbdb8c0f":"# Basic \nimport numpy as np\nimport pandas as pd\n\n# Plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Splitting\nfrom sklearn.model_selection import train_test_split\n\n# Import models\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\n\nfrom sklearn.ensemble import VotingClassifier\n\n# Evaluation metrics\nfrom sklearn.metrics import jaccard_score, f1_score, log_loss, accuracy_score, confusion_matrix, classification_report, roc_auc_score\n\n# Cross validation\nfrom sklearn.model_selection import cross_val_score","2b99fc08":"path = '\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv'\n\nrecords = pd.read_csv(path, index_col=False)\nrecords.head(3)","7bf5a7cd":"records.describe()","db894a14":"records.info()","a903178e":"records.isna().sum()","8d4e3501":"records_corr = records.corr()\n\nplt.figure(figsize=(12,12))\nsns.heatmap(records_corr, annot=True, cmap=\"YlGnBu\")\nplt.title('Correlation')\nplt.show()","99e49575":"# Age and death_event\n\nax = sns.violinplot(x='DEATH_EVENT', y='age', data = records)\n\n\nmedians = records.groupby(['DEATH_EVENT'])['age'].median().values\nnobs = records['DEATH_EVENT'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('1. Age vs Death Event')\nplt.show()","4ef52978":"# Age and serum creatinine\n\nplt.figure(figsize=(8,6))\nsns.regplot(x='age', y='serum_creatinine', data = records)\nplt.minorticks_on()\nplt.grid(b=True, which='both', axis='both', alpha=0.1)\nplt.title('2. Age and Serum_creatinine')\nplt.show()","1a765f8b":"# Age and diabetes\n\nax = sns.violinplot(x='diabetes', y='age', data = records)\n\n\nmedians = records.groupby(['diabetes'])['age'].median().values\nnobs = records['diabetes'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('3. Age and Diabetes')\nplt.show()","289f6f34":"# Age, diabetes and death_event\n\nax = sns.violinplot(x='diabetes', y='age', data = records, hue = 'DEATH_EVENT')\nplt.title('4. Age, Diabetes vs Death Event')\nplt.show()","abc5f537":"# anaemia and death-event\n\nsns.countplot(x = 'DEATH_EVENT', data = records, hue = 'anaemia')\nplt.title('1. Anaemia and death_event')\nplt.xlabel('Death-event')\nplt.ylabel('Number of people')\nplt.show()\n","0c3418f5":"# anaemia and creatinine phosphokinase\n\nax = sns.violinplot(x='anaemia', y='creatinine_phosphokinase', data = records)\n\n\nmedians = records.groupby(['anaemia'])['creatinine_phosphokinase'].median().values\nnobs = records['anaemia'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('2. Anaemia and Creatinine phosphokinase')\nplt.show()","2a40753e":"# Anaemia and smoking\nsns.countplot(x = 'smoking', data = records, hue = 'anaemia')\nplt.title('3. Anaemia and smoking')\nplt.xlabel('Smoking')\nplt.ylabel('Number of people')\nplt.show()\n","cdaa2fb0":"# creatinine phosphokinaseand death_event\n\nax = sns.violinplot(x='DEATH_EVENT', y='creatinine_phosphokinase', data = records)\n\n\nmedians = records.groupby(['DEATH_EVENT'])['creatinine_phosphokinase'].median().values\nnobs = records['DEATH_EVENT'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('Creatinine phosphokinase and death event')\nplt.show()","8ef9d5c4":"# 'diabetes' and 'DEATH_EVENT'\nsns.countplot(x = 'diabetes', data = records, hue = 'DEATH_EVENT')\nplt.title('1. Diabetes and death event')\nplt.xlabel('diabetes')\nplt.ylabel('Number of people')\nplt.show()\n","dd7a4613":"# diabetes and sex\nsns.countplot(x = 'sex', data = records, hue = 'diabetes')\nplt.title('2. diabetes and sex')\nplt.xlabel('sex')\nplt.ylabel('Number of people')\nplt.show()","f38b2ae0":"# diabetes and smoking\nsns.countplot(x = 'diabetes', data = records, hue = 'smoking')\nplt.title('3. diabetes and smoking')\nplt.xlabel('diabetes')\nplt.ylabel('Number of people')\nplt.show()","4dd4ec76":"print(records['ejection_fraction'].median())","1447cd3d":"# ejection fraction and death event\n\nax = sns.violinplot(x='DEATH_EVENT', y='ejection_fraction', data = records)\n\n\nmedians = records.groupby(['DEATH_EVENT'])['ejection_fraction'].median().values\nnobs = records['DEATH_EVENT'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('1. Ejection fraction vs Death Event')\nplt.show()","9b0aeda2":"# ejection fraction and serum sodium\n\nplt.figure(figsize=(8,6))\nsns.regplot(x='serum_sodium', y='ejection_fraction', data = records)\nplt.minorticks_on()\nplt.grid(b=True, which='both', axis='both', alpha=0.1)\nplt.title('2. Ejection fraction and Serum sodium')\nplt.show()","e9370d8d":"# ejection fraction and sex\n\n# Age and death_event\n\nax = sns.violinplot(x='sex', y='ejection_fraction', data = records)\n\n\nmedians = records.groupby(['sex'])['ejection_fraction'].median().values\nnobs = records['sex'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('3. Ejection fraction vs Sex')\nplt.show()","2d1a9088":"# High BP and death-event\nsns.countplot(x='DEATH_EVENT', data = records, hue='high_blood_pressure')\nplt.title('1. High BP and death-event')\nplt.xlabel('Death Event')\nplt.ylabel('Number of people')\nplt.show()","fb4ce582":"# high BP and sex\nsns.countplot(x='sex', data = records, hue='high_blood_pressure')\nplt.title('2. High BP and sex')\nplt.xlabel('sex')\nplt.ylabel('Number of people')\nplt.show()","bbbe4d99":"# high BP and time\n\nax = sns.violinplot(x='high_blood_pressure', y='time', data = records)\n\n\nmedians = records.groupby(['high_blood_pressure'])['time'].median().values\nnobs = records['high_blood_pressure'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('3. High BP vs time')\nplt.show()","8f6c5f45":"# platelets and death event\n\nax = sns.violinplot(x='DEATH_EVENT', y='platelets', data = records)\n\n\nmedians = records.groupby(['DEATH_EVENT'])['platelets'].median().values\nnobs = records['DEATH_EVENT'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('1. Platelet count vs death event')\nplt.show()","44e4cd52":"# platelets and sex\n\nax = sns.violinplot(x='sex', y='platelets', data = records)\n\n\nmedians = records.groupby(['sex'])['platelets'].median().values\nnobs = records['sex'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('1. Platelet count vs sex')\nplt.show()","a48b342e":"# serum creatinine and death event\n\nax = sns.violinplot(x='DEATH_EVENT', y='serum_creatinine', data = records)\n\n\nmedians = records.groupby(['DEATH_EVENT'])['serum_creatinine'].median().values\nnobs = records['DEATH_EVENT'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('1. Serum creatinine vs death event')\nplt.show()","bb49f1a4":"# serum creatinine and age\nsns.regplot(x = 'age', y = 'serum_creatinine', data = records)\nplt.title('2. Serum creatinine and age')\nplt.xlabel('age')\nplt.ylabel('Serum creatinine')\nplt.show()","5f12be65":"# serum creatinine and serum sodium \nsns.regplot(x = 'serum_sodium', y = 'serum_creatinine', data = records)\nplt.title('3. Serum creatinine and Serum sodium')\nplt.xlabel('Serum sodium')\nplt.ylabel('Serum creatinine')\nplt.show()","86ef229c":"# serum creatinine and time \nsns.regplot(x = 'time', y = 'serum_creatinine', data = records)\nplt.title('4. Serum creatinine and Follow up time')\nplt.xlabel('time')\nplt.ylabel('Serum creatinine')\nplt.show()","3d4af1e9":"# serum sodium and death event\n\nax = sns.violinplot(x='DEATH_EVENT', y='serum_sodium', data = records)\n\n\nmedians = records.groupby(['DEATH_EVENT'])['serum_sodium'].median().values\nnobs = records['DEATH_EVENT'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('1. Serum sodium vs death event')\nplt.show()","1ba9f3f0":"# sex and death event\nsns.countplot(x='sex', data = records, hue = 'DEATH_EVENT')\nplt.title('1. Sex and death-event')\nplt.xlabel('Sex')\nplt.ylabel('Number of people')\nplt.show()","d468fdf6":"# sex and smoking\nsns.countplot(x = 'sex', data = records, hue = 'smoking')\nplt.title('2. Sex and smoking')\nplt.xlabel('Sex')\nplt.ylabel('Number of people')\nplt.show()","32978e8c":"# smoking and death event\nsns.countplot(x = 'DEATH_EVENT', data = records, hue = 'smoking')\nplt.title('1. Smoking and death event')\nplt.xlabel('Death event')\nplt.ylabel('Number of people')\nplt.show()","57947dc7":"ls = records.groupby(['DEATH_EVENT', 'smoking']).count().values[:, 0]\nprint('Percentge smoking but no heart failure: ', (ls[1]\/(ls[0]+ls[1]))*100)\nprint('Percentge smoking and heart failure: ', (ls[3]\/(ls[2]+ls[3]))*100)","c2647652":"# time and death_event\n\nax = sns.violinplot(x='DEATH_EVENT', y='time', data = records)\n\n\nmedians = records.groupby(['DEATH_EVENT'])['time'].median().values\nnobs = records['DEATH_EVENT'].value_counts().values\nnobs = [str(x) for x in nobs.tolist()]\nnobs = ['n: ' + i for i in nobs]\n\npos = range(len(nobs))\nfor tick, label in zip(pos, ax.get_xticklabels()):\n    ax.text(pos[tick], medians[tick]+0.10, nobs[tick], horizontalalignment='center', size='x-small', color='w', weight='semibold')\n\nplt.title('1. Follow up period vs death event')\nplt.show()","72842826":"records_corr['DEATH_EVENT'].sort_values(ascending=False)","c6f12278":"X = records[['serum_creatinine', 'age', 'time', 'ejection_fraction', 'serum_sodium']].values\ny = records.iloc[:, -1].values\n\nprint('Shape of X ', X.shape)\nprint('Shape of y ', y.shape)","40501367":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\n\nprint('Shape of training set ', X_train.shape)\nprint('Shape of test set ', X_test.shape)","3a8dab3c":"classifier = KNeighborsClassifier(n_neighbors = 6, metric='minkowski', p=2)","bdbf828f":"classifier.fit(X_train, y_train)\ny_pred = classifier.predict(X_test)\n    \n# print classifier name\nprint(str(type(classifier)).split('.')[-1][:-2])\n    \n# Accuracy Score\nprint('Accuracy Score: {}'.format(accuracy_score(y_test, y_pred)))\n\n# jaccard Score\nprint('\\nJaccard Score: {}'.format(jaccard_score(y_test, y_pred)))\n    \n# F1 score\nprint('\\nF1 Score: {}'.format(f1_score(y_test, y_pred)))\n    \n# Log Loss\nprint('\\nLog Loss: {}'.format(log_loss(y_test, y_pred)))\n    \nprint('CROSS VALIDATION')\naccuracy = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv=10)\nprint('Accuracies after CV: ', accuracy)\nprint('\\nMean Accuracy of the model: ', accuracy.mean()*100)\n    \n# confusion matrix\ncm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, lw = 2, cbar=False)\nplt.xlabel('Predicted')\nplt.ylabel('True')\nplt.title('Confusion Matrix: {}'.format(str(type(classifier)).split('.')[-1][:-2]))\nplt.show()","8a5129b8":"### 2. Anaemia","9055ab64":"### 3. Creatinine Phosphokinase\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones: \n1. Positively correlated: 'DEATH_EVENT'\n2. Negatively correlated: 'anaemia'","91c78d5f":"### 7. Platelets\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: No particular strong correlation\n2. Negatively correlated: 'DEATH_EVENT' and 'sex'","b2ff44b0":"OBSERVATIONS:\n\n1. The median serum creatinine level is same for both people with and without a heart failure. The range of serum creatinine level for people with a heart failure is considerably larger than for the ones who did not have a heart failure.\n\n2. A slight positive correlation can be visualised between the age of a person and their serum creatinine level.\n\n3. A negative correlation can be visualised between the levels of serum creatinine and serum sodium in the body.\n\n4. A very small negative correlation can be seen between the serum creatinine level and follouw up period of the person.","a75511bf":"Let us go through all the features one by one and visualise the various relations that can be established using this correlation table above.","2a5c629e":"### 5. Ejection Fraction\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: 'serum_sodium'\n2. Negatively correlated: 'DEATH_EVENT' and 'sex'","edf74817":"### 4. Diabetes\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: No particular strong correlation\n2. Negatively correlated: 'DEATH_EVENT', 'age', 'sex' and 'smoking'","11118a45":"### 8. Serum creatinine\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: 'age' and 'DEATH_EVENT'\n2. Negatively correlated: 'serum sodium' and 'time'","1bbf14d8":"OBSERVATIONS:\n\n1. The ratio of death events happening for people who have and don't have diabetes is >1. But this is a weak indicator of a death event.\n2. The number of males in the dataset are much more than the number of females. Almost all the females have diabetes and about 50% of males have it.\n3. The percentage of smokers who hae diabetes is very less. **Smoking here would seem like a negative indicator of diabetes, but we know better than just statistics. Smoking will definitely not lead to less diabetes!**\n","cafa90c8":"OBSERVATIONS:\n\n1. The percentage of women and men suffering a heart failure is around the same. A dependence cannot be established.\n\n2. About 50 % of males smoke and only about 6% of women smoke as per the data.","eeb21b1b":"OBSERVATION:\n\nAs you can see from above, there is not much dependence between smoking and a heart failure.","984ac1a8":"### 12. Time\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: No strong positive correlation\n2. Negatively correlated: 'age', 'anaemia', 'high_blood_pressure', 'serum_creatinine', 'DEATH_EVENT' ","b16f00de":"OBSERVATION:\n\n1. Percentage wise - anaemia seems to be a good indicator of 'heart failure'.\n\n2. There is no particular indication of a level of creatinine phosphokinase that might lead to anaemia.\n\n3. Smoking is not a good detector for anaemia. Percentage wise, out of people who did not smoke, more people became anaemic. ","1548e084":"OBSERVATIONS:\n\n1. The median serum sodium level is lower for people who had a heart failure.\n\n2. The range of serum sodium in the body for people with or without a heart failure is the same.","06de1e4f":"### 11. Smoking\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: 'sex'\n2. Negatively correlated: 'diabetes', 'anaemia', 'DEATH_EVENT' ","9db8ddd1":"OBSERVATIONS:\n\n1. No significant correlation between platelets and death-event. The median platelet count in case of either death-event is about the same.\n\n2. Females can be seen to have a slightly higher median platelet count than males.","3bf1508a":"OBSERVATIONS:\n\n1. The relationship between High BP and a death event cannot be surely determined. People with or without a high BP condition have passed away and people with a high BP have also not suffered a heart failure.\n\n2. The percentage of females having a high BP condition is a lot more than the percentage of males having a high BP condition.\n\n3. The median follow up period for people with a high BP condition is considerably lower than the follow up period of people with no such condition.","b21dec8a":"Let us go through the correlation first to quickly understand where we can see the relations pop up.","b5dee681":"Most of the correlations with other indicators are not significant.\n\nSignificant ones: \n\n1. Positively correlated: 'DEATH_EVENT'\n\n2. Negatively Correlated: 'creatinine_phosphokinase', 'smoking', 'time'","4dd5b411":"### 6. High Blood Pressure\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: 'DEATH_EVENT'\n2. Negatively correlated: 'time' and 'sex'","51ab5540":"### 1. Age\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones: \n1. Positively correlated: 'serum_creatinine' and 'DEATH_EVENT' \n2. Negatively correlated: 'time' and 'diabetes'\n","689585b5":"### 10. Sex\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: 'smoking'\n2. Negatively correlated: 'diabetes', 'ejection_fraction', 'high_blood_pressure', 'platelets', 'DEATH_EVENT' ","cac067db":"OBSERVATION:\n\n1. The median age of people dying of heart failure is slightly higher than the median age of ones not having one. There ia a disparity in the numbers of people having a heart failure or not can be seen. That could be either due to a skewed data or the fraction of people suffering from heart failure is actually less.\n\n2. The correlation between age and creatinine levels in serum can be visualised. We can can see a slight positive correlation.\n\n3. The number of people having diabetes or not are comparable. We can see however that the median age for people suffering from diabetes is at around 60.\n\n4. People with diabetes and had a heart failure have the same median age.\n\n5. People who do not have diabetes but have had a heart failure are relatively older than the ones who have diabetes + heart failure.","926e5348":"OBSERVATION:\n\n1. The median follow up period for someone who later suffered from a heart failure is comparatively very low.","bf825127":"### 9. Serum sodium\n\nMost of the correlations with other indicators are not significant.\n\nSignificant ones:\n\n1. Positively correlated: 'ejection_fraction'\n2. Negatively correlated: 'serum creatinine' and 'DEATH_EVENT'","f00c8670":"OBSERVATION:\n1. The median level of creatinine phosphokinase for the ones who suffered heart failure and didn't is comparatively same. \n2. THe range of creeatinine phosphokinase seen in the people who suffered from a heart failure is a lot more than for the ones who did not have a heart failure","250f6845":"## EDA","5275a705":"## MODEL","bd4a667b":"OBSERVATIONS:\n\n1. The median ejection fraction for people with no heart failure is 38. Th enormal is usually >40.\n\n2. We can see that the people suffering from heart failure have a median ejection fraction of around 20. We can also see that there are cases where people with normal ejection fraction also suffer from heart failure. That could be owing to the other factors affecting a death-event.\n\n3. A decent positive correlation can be seen between the ejection fraction and serum sodium. \n\n4. The major peaks that can be observed for ejection fraction is around 38 and 60 for both males and females. ","4c37fe0b":"### Previous Work: Check this link [out](https:\/\/www.kaggle.com\/mani97\/quick-classification-rundown-93-33-k-nn#Tuning-Hyperparameter) to see how I fine tuned my k-NN model to attain 93% accuracy.\n\nDo comment and let me know if I missed out anything."}}