{"cell_type":{"efa8ef41":"code","38dd4cdf":"code","c8cfedba":"code","4b063aed":"code","e839909c":"code","23ac447c":"code","55b14725":"code","9ddcd200":"code","203fa9c6":"code","78fe1127":"code","35de3ab9":"code","6ec99278":"code","5d97a93d":"code","f526ec6c":"code","7b3db268":"code","3e167202":"code","e88237ad":"code","7172f468":"code","3730fa62":"code","05094b64":"code","45920050":"code","3b1fc89b":"code","1b0d0389":"code","240a2a43":"code","5da5094e":"code","5c1fb0ed":"code","5b5a9f3b":"code","c3df578e":"code","98074b5f":"code","1e077357":"code","5b0e0604":"code","6548e999":"code","e3d7a862":"code","afd920af":"code","2c813a0c":"code","4b8bde76":"code","7fd78dff":"code","92ed2a95":"code","d65d5dc8":"code","ddbef81f":"code","8e602d71":"code","95fa8a67":"code","de945167":"code","c3523102":"code","d8b1c9e0":"code","9d6c0f9a":"code","8161ebcc":"code","201220c0":"code","81857fb2":"code","0adeca28":"code","6f32b485":"code","2f8923e6":"code","0a696c07":"code","c6aedf69":"code","92e44188":"code","21bf6e91":"code","8e9f81b5":"code","43200d75":"code","3570524e":"code","cb1f3c98":"code","c4b88ccf":"code","30d22ea9":"code","4747a1e3":"code","abbd1a38":"code","3ca18614":"code","5a159c60":"code","244162f1":"code","1a4aebf1":"code","04bd2a67":"code","553767dc":"code","a7ee2799":"code","2e6335ab":"code","bfb9b18c":"code","b2f1426e":"code","35406519":"code","2bd38acd":"code","ab8e86c1":"code","764931d2":"code","bdcc35b0":"code","461c2c2f":"code","e6793f95":"code","3bf559e7":"code","1f688776":"code","62fb27cb":"markdown","15f939a3":"markdown","f071e9c7":"markdown","be566917":"markdown","98bd1174":"markdown","73ff9166":"markdown","477868e8":"markdown","56c5ff99":"markdown","6619239c":"markdown","f82cc242":"markdown","851ab3c3":"markdown","d027e9f5":"markdown","7534f542":"markdown","d27c3fcb":"markdown","db4492c4":"markdown","2b26bc62":"markdown","d24516f3":"markdown","e2e6e482":"markdown","13bdec17":"markdown","b38a9f7f":"markdown","e6ca4c6e":"markdown","b14cf674":"markdown","5b62bb99":"markdown","b5fed7fc":"markdown","1d88e239":"markdown","5b17438f":"markdown","fd944d73":"markdown","b71288d8":"markdown","1ea6bfbb":"markdown","02649424":"markdown","e8831978":"markdown","a0bf0b0a":"markdown","0a9f5321":"markdown","93cc92eb":"markdown","10e684ca":"markdown","dc76e57b":"markdown","438fdb70":"markdown","f2373629":"markdown","d3474de5":"markdown","1b2253af":"markdown","b24d04dc":"markdown","36774f6e":"markdown","7aaa83cc":"markdown","216d4f31":"markdown","dea4ac95":"markdown","1abeadb5":"markdown","4295d222":"markdown","0b884a2d":"markdown","bc463760":"markdown","f8daac96":"markdown","75abfe65":"markdown","cbc7741d":"markdown","43dad998":"markdown","67e6dcb2":"markdown","b8b63302":"markdown","3fc64659":"markdown","daca7d40":"markdown","65350c4a":"markdown","3c8ec998":"markdown","d10de73f":"markdown","2d62b406":"markdown","9150c188":"markdown","2cb2ee57":"markdown","68f32851":"markdown","9d757763":"markdown"},"source":{"efa8ef41":"# Importing the required packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport sqlite3","38dd4cdf":"#Connecting to the sqlite database\ndata = sqlite3.connect('..\/input\/soccer\/database.sqlite')\n\n#Loading the tables from the database\ndf_country = pd.read_sql('select * from Country',data)\ndf_league = pd.read_sql('select * from League',data)\ndf_match = pd.read_sql('select * from Match',data)\ndf_player = pd.read_sql('select * from Player',data)\ndf_player_att = pd.read_sql('select * from Player_Attributes',data)\ndf_team = pd.read_sql('select * from Team',data)\ndf_team_att = pd.read_sql('select * from Team_Attributes',data)","c8cfedba":"#view the shape of the table\ndf_country.shape","4b063aed":"df_country","e839909c":"df_league.shape","23ac447c":"df_league","55b14725":"df_match.shape","9ddcd200":"#Checking for null values\ndf_match.isnull().sum()","203fa9c6":"df_player.shape","78fe1127":"#Looking at the initial data of the dataframe\ndf_player.head()","35de3ab9":"#Summary of the dataframe\ndf_player.info()","6ec99278":"#Looking for any duplicated rows\ndf_player.duplicated().sum()","5d97a93d":"df_player_att.shape","f526ec6c":"df_player_att.head()","7b3db268":"df_player_att.info()","3e167202":"df_player_att.duplicated().sum()","e88237ad":"df_team.shape","7172f468":"df_team.info()","3730fa62":"df_team.isnull().sum()","05094b64":"df_team.duplicated().sum()","45920050":"df_team.head()","3b1fc89b":"df_team_att.shape","1b0d0389":"df_team_att.head()","240a2a43":"df_team_att.isnull().sum()","5da5094e":"df_team_att.duplicated().sum()","5c1fb0ed":"df_team_att.info()","5b5a9f3b":"#Renaming the name column in league table\ndf_league.rename(columns={'name':'league_name'},inplace=True)","c3df578e":"df_country_league = df_country.merge(df_league,left_on='id',right_on='id')\n\ndf_country_league.drop(columns='country_id',inplace=True)\n\ndf_country_league.rename(columns={'id':'country_id','name':'country_name'},inplace=True)","98074b5f":"#New Dataframe\ndf_country_league","1e077357":"#Deleting previous dataframes to avoid further confusion\ndel df_country,df_league","5b0e0604":"#Dropping Columns with null values\ndf_match.dropna(axis=1,inplace=True)","6548e999":"df_match.duplicated().sum()","e3d7a862":"df_match.head()","afd920af":"#Date column to Datetime datatype\ndf_match['date'] = pd.to_datetime(df_match['date'])","2c813a0c":"begin_season = df_match['season'].apply(lambda x:x.split('\/')[0])\nfinish_season = df_match['season'].apply(lambda x:x.split('\/')[1])\n\ndf_match['begin_season'] = begin_season\ndf_match['finish_season'] = finish_season\n\n#Dropping the season column which is not required anymore \ndf_match.drop(columns=['season'],inplace=True,axis=1)","4b8bde76":"#Creating new column\ndf_match['match_year'] = df_match['date'].dt.year","7fd78dff":"#merging tables\ndf_match_v2 = df_match.merge(df_country_league,left_on='country_id',right_on='country_id')","92ed2a95":"#Removing country_id as it is same as league_id are same\ndf_match_v2.drop(['country_id'],axis=1,inplace=True)\ndf_match_v2.head()","d65d5dc8":"df_match_v2.info()","ddbef81f":"# Making the two new columns as int\ndf_match_v2['begin_season'] = df_match_v2['begin_season'].astype('int64')\ndf_match_v2['finish_season'] = df_match_v2['finish_season'].astype('int64')","8e602d71":"#Saving the cleaned match dataframe for further reference \ndf_match_v2.to_csv('match_merged.csv',index=False)","95fa8a67":"#Checking for unique names\n\nprint(df_player['player_api_id'].nunique())\nprint(df_player['player_name'].nunique())\nprint(df_player['player_name'].duplicated().sum())","de945167":"#Date column to Datetime datatype\ndf_player['birthday'] = pd.to_datetime(df_player['birthday'])","c3523102":"#duplicated values check\ndf_player.duplicated().sum()","d8b1c9e0":"df_player.isnull().sum()","9d6c0f9a":"#Changing data type of date column\ndf_player_att['date'] = pd.to_datetime(df_player_att['date'])","8161ebcc":"df_player_with_att = df_player.merge(df_player_att,left_on='player_api_id',right_on='player_api_id')","201220c0":"#Renaming few columns \ndf_player_with_att.rename(columns={'id_x':'id','player_fifa_api_id_x':'player_fifa_api_id'},inplace=True)\n\n#Dropping the columns that have got merged twice\ndf_player_with_att.drop(['player_fifa_api_id_y','id_y'],axis=1,inplace=True)","81857fb2":"#Saving the cleaned player with atrributes dataframe for further reference\ndf_player_with_att.to_csv('player_att_merged.csv',index=False)","0adeca28":"#Dropping the unwanted columns\ndf_team.drop(['id','team_fifa_api_id'],axis=1,inplace=True)","6f32b485":"df_team.head()","2f8923e6":"#Adding the home team column\ndf_match_v2 = df_match_v2.merge(df_team,left_on='home_team_api_id',right_on='team_api_id')\ndf_match_v2.rename(columns={'team_long_name':'home_team_name'},inplace=True)\ndf_match_v2.drop(['team_api_id','team_short_name'],axis=1,inplace=True)\n\n#Adding the away team column\ndf_match_v2 = df_match_v2.merge(df_team,left_on='away_team_api_id',right_on='team_api_id')\ndf_match_v2.rename(columns={'team_long_name':'away_team_name'},inplace=True)\ndf_match_v2.drop(['team_api_id','team_short_name'],axis=1,inplace=True)","0a696c07":"#Function to find and return the name of the team\ndef win(i):\n    home_team_name = i[0]\n    home_team_score = i[1]\n    away_team_name = i[2]\n    away_team_score = i[3]\n    \n    if home_team_score > away_team_score:\n        return home_team_name\n    elif home_team_score < away_team_score:\n        return away_team_name\n    else:\n        return 'Tie'","c6aedf69":"#Applying the function to the dataframe    \ndf_match_v2['winning_team']  = df_match_v2[['home_team_name', 'home_team_goal', 'away_team_name', 'away_team_goal']].apply(win, axis=1)","92e44188":"df_match_v2.head()","21bf6e91":"#Updating the Match dataframe\ndf_match_v2.to_csv('match_merged.csv',index=False)","8e9f81b5":"#Changing Datatype\ndf_team_att['date'] = pd.to_datetime(df_team_att['date'])\n\n#Dropping unwanted columns\ndf_team_att.drop(['team_fifa_api_id'],axis=1,inplace=True)","43200d75":"df_team_att['year'] = df_team_att['date'].dt.year","3570524e":"df_team_att_v2 = df_team_att.merge(df_team,left_on='team_api_id',right_on='team_api_id')","cb1f3c98":"df_team_att_v2.head()","c4b88ccf":"#Saving the cleaned team with atrributes dataframe for further reference\ndf_team_att_v2.to_csv('team_att_merged.csv',index=False)","30d22ea9":"#Finding the total goals scored according to league\ntotal_league_goals = df_match_v2.groupby('league_name')[['home_team_goal','away_team_goal']].sum().sum(axis=1).sort_values\\\n(ascending=False)\n\ntotal_league_goals","4747a1e3":"#Plotting the above results\nsns.set()\nplt.figure(figsize=(15,5))\nsns.barplot(x=total_league_goals.index,y=total_league_goals)\nplt.title('Highest scoring league from 2008 to 2016')\nplt.xticks(rotation=35)\nplt.xlabel('League')\nplt.ylabel('Total Goals (2008-2016)');","abbd1a38":"#Top 5 Teams which won the most matches\ntop5_teams = df_match_v2.groupby('winning_team')['winning_team'].count().sort_values(ascending=False)[1:6]\ntop5_teams","3ca18614":"#Plotting the above results\nplt.figure(figsize=(10,6))\nplt.bar(top5_teams.index,top5_teams,color=['#A70042', 'white', 'green', 'red', '#B80102'],edgecolor='black',width=0.5)\nplt.title('Most successful team from 2008 to 2016')\nplt.xlabel('Team')\nplt.ylabel('Total Wins (2008-2016)');","5a159c60":"#Creating a new dataframe to compare two teams\nattr_comp = pd.DataFrame(data=df_team_att_v2.query('team_long_name == \"FC Barcelona\"').mean(),columns=['Barcelona'])\n\n#Adding the column for the second team\nattr_comp['Manchester United'] = df_team_att_v2.query('team_long_name == \"Manchester United\"').mean()","244162f1":"#Removing the unwanted indexes\nattr_comp = attr_comp[2:11]\nattr_comp","1a4aebf1":"#Plotting the above results\nattr_comp.plot.barh(width=0.60,figsize=(12,8))\nplt.title('Attribute Comparison of two teams')\nplt.ylabel('Attribute Type')\nplt.xlabel('Attribute Values')\nplt.legend(loc=0);","04bd2a67":"#Splitting the phases into 2 with 19 matches in phase 1 and the other in phase 2. \n\nphase_1 = df_match_v2.query('stage<19')\nphase_2 = df_match_v2.query('stage>=19 and stage<=36')","553767dc":"phase_1_teams = phase_1.groupby('winning_team')['winning_team'].count().sort_values(ascending=False)[1:6]\nphase_2_teams = phase_2.groupby('winning_team')['winning_team'].count().sort_values(ascending=False)[1:6]","a7ee2799":"fig, axes = plt.subplots(nrows=1, ncols=2,figsize=(15,5))\nphase_1_teams.plot(ax=axes[0],kind='bar',title='Phase 1',rot=0)\nphase_2_teams.plot(ax=axes[1],kind='bar',title='Phase 2',rot=0)\naxes[0].set_xlabel('Winning Team')\naxes[1].set_xlabel('Winning Team')\naxes[0].set_ylabel('Wins')\naxes[1].set_ylabel('Wins');","2e6335ab":"#Querying the important parameters \nengland = df_match_v2.query('country_name == \"England\" and begin_season == 2012 and finish_season == 2013')[['home_team_goal',\\\n'away_team_goal', 'home_team_name', 'away_team_name', 'winning_team']]","bfb9b18c":"england.head()","b2f1426e":"#Finding which team won the most matches\nengland['winning_team'].value_counts()[0:6]","35406519":"#Finding if Manchester City Tied any match\nengland.query('winning_team == \"Tie\" and ''(home_team_name == \"Manchester City\" or away_team_name == \"Manchester City\")')\\\n['winning_team'].count()","2bd38acd":"#Finding the count of players with preferred foots\nfoot = df_player_with_att.groupby('preferred_foot')['preferred_foot'].count()\nfoot","ab8e86c1":"#Plotting pie chart for the above result\nplt.pie(foot,labels=['Left','Right'],autopct='%1.1f%%')\nplt.title('Preferred Foot of players');","764931d2":"#Calculating the mean of overall ratings grouping by preferred foot.\n\nfoot_rating = df_player_with_att.groupby('preferred_foot')['overall_rating']\nmean_foot_rating = foot_rating.mean()\nmean_foot_rating","bdcc35b0":"sns.barplot(x=['Left','Right'],y=mean_foot_rating)\nplt.title('Mean overall rating of different footed players ')\nplt.ylabel('Mean Rating')\nplt.xlabel('Preferred Foot');","461c2c2f":"df_player_with_att.max()","e6793f95":"sns.set()\nsns.lmplot(x='vision',y='free_kick_accuracy',data=df_player_with_att)\nplt.title('Free Kick Accuracy vs Vision')\nplt.xlabel('Vision')\nplt.ylabel('Free Kick Accuracy');","3bf559e7":"sns.set()\nsns.lmplot(x='acceleration',y='sprint_speed',data=df_player_with_att)\nplt.title('Sprint Speed vs Acceleration')\nplt.xlabel('Acceleration')\nplt.ylabel('Sprint Speed');","1f688776":"sns.set()\nsns.lmplot(x='finishing',y='ball_control',data=df_player_with_att)\nplt.title('Ball Control vs Finishing')\nplt.xlabel('Finishing')\nplt.ylabel('Ball Control');","62fb27cb":"###  Question 4. Better performing teams during the two phases of a season.","15f939a3":"###  Question 3. Comparing attributes of the above successful team with another team.","f071e9c7":">The result shows us that LIGA BBVA of Spain is the Highest scoring league with 8412 goal followed by English Premier League with 8240 goals. ","be566917":"### 6. Team Attributes Table","98bd1174":"### 2. Match Table","73ff9166":">Top 5 teams with most wins from all the leagues","477868e8":"Here the date column needs to have data type change.","56c5ff99":"Here a column consists of 969 null values out of 1458 entries which needs to be taken care of","6619239c":"<a id='conclusions'><\/a>\n## Conclusions\n\n1. Spain's LIGA BBVA is the highest scoring league with 8400+ goals among all the other 10 leagues.\n2. FC Barcelona is the most successful team with 234 league goals from 2008-2016.\n3. Though attributes play a big role in team performance but they are not the only parameters to look at, their might be many any other factors like individual performance on that day, etc.\n4. FC Barcelona, Real Madrid CF and Celtic have consistently kept performing throughut the seasons.\n5. Manchester United won the 2012-13 English Premier League\n6. 75%+ players prefer Right foot.\n7. Though, three-quarter of players prefer right foot, their attributes are almost similar to the left footed players.\n8. FIFA video game regeneration player, dos Santos Fabio Junior is the most highly rated player.\n9. Free Kick Accuracy vs Vision, Sprint Speed vs Acceleration and Ball Control vs Finishing all show postive correaltion with each other.   ","f82cc242":">Though Barcelona is more consistent than Machester United, it was only ahead in Defence attributes and lacked behind in Chance Creation and Build up play.","851ab3c3":"#### Merging the Match and country_league table creating a new table","d027e9f5":"#### Merging the two tables to a create new dataframe","7534f542":">Comparing the team attributes of FC Barcelona and Manchester United","d27c3fcb":"###  Question 5. Which team won the English premier league 2012-2013?","db4492c4":"There are lots of null values we will have a look at them later during data cleaning","2b26bc62":"<a id='eda'><\/a>\n## III. Exploratory Data Analysis\n\n\n### Question 1. Which is the highest goal scoring league from 2008-2016?","d24516f3":">dos Santos Fabio Junior is the most highly rated player in this dataset with all the stats 90+\n>\n>As FIFA game has player regenerators once any original player retires, this player seems to be a regeneration as having all stats above 90 at the age 17 appears to be superhuman. Plus I couldn't find any player with this name. ","e2e6e482":"#### Merging the Player and Player Atrributes table creating a new table","13bdec17":">There isn't any difference in overall rating if players prefer different feet to play.","b38a9f7f":"As the shape is very small we can directly view the table","e6ca4c6e":"#### 3. League Table","b14cf674":"###  Question 8. Who is the most attributed player?","5b62bb99":">The plot above shows a positive relationship between Ball Control and Accuracy.","b5fed7fc":"### 5. Team Table","1d88e239":"### 3. Player Table","5b17438f":">This dataset was very challenging in certain aspects, the toughest being team and player attributes table.\n>\n>Many columns of these dataset where empty and further looking into them found that they were not that significant even to work with.\n>\n>The Match table had columns which had betting odds which did not have significant presence as their were many empty entries so rather dropped them all.\n>\n>Certain team names and player names where similar so had to work only on the basis of their unique id.\n","fd944d73":"### Question 2. Which is the most successful team from 2008-2016?","b71288d8":"<a id='wrangling'><\/a>\n## I. Data Wrangling\n\n> In this section I have loaded the tables from the database and looked at the general format of the data contained in the tables and the changes I need to make for the tables look and perform better.\n\n#### 1. Loading data","1ea6bfbb":">Every team plays 38 matches in a season and splitting the season into two phases of 19 matches each ","02649424":"###  Question 7. Do overall ratings of players differ if they prefer different foot to play?","e8831978":"#### 6. Player Attribute Table","a0bf0b0a":"#### Ball Control vs Finishing","0a9f5321":">But as the above figure shows Manchester City tied 9 league games, confirming that the 2012-13 English Premier League was won by Manchester United.","93cc92eb":"Adding two new columns to the dataframe with the beginning and finish year of a season","10e684ca":"There is birthday column above which needs to be converted as datetime data type.","dc76e57b":"Creating another column to the dataframe with the year when the match was played","438fdb70":">Finding the total number of goals from each league ","f2373629":">FC Barcelona and Real Madrid CF are the top two consistently performing teams, which also happen to belong to LIGA BBVA league, the highest scoring league.\n>\n>To my surprise Celtic is more successful than FC Bayern and Manchester United.","d3474de5":"#### Merging the team table with match table","1b2253af":"#### 4. Match Table","b24d04dc":"<a id='limitations'><\/a>\n## Limitations","36774f6e":"<a id='intro'><\/a>\n## Introduction\n\n> Being a soccer fan, it was more than justified to work on the **European Soccer Database**. It consists the data of 11 different leagues with tables having Player information, their attributes, and team name and attributes along with every match played from 2008 to 2016. \n>\n>While Examining the tables, I posed a few questions in front of me:\n>\n>1. Which is the highest goal scoring league from 2008-2016?\n>2. Which is the most successful team from 2008-2016?\n>3. Comparing attributes of the above successful team with another team.\n>4. Better performing teams during the two phases of a season.\n>5. Which team won the English premier league 2012-2013?\n>6. Most preferred foot of players?\n>7. Do overall ratings of players differ if they prefer different foor to play?\n>8. Who is the most attributed player?\n>9. How are player attributes correlated to each other?","7aaa83cc":"#### Creating a new column with the wining team name in each match","216d4f31":">The plot above shows a positive relationship between Sprint Speed and Acceleration.","dea4ac95":"# Project: Investigate European Soccer Database\nDivyansh Shah - May 2020\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#cleaning\">Data Cleaning<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#limitations\">Limitations<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","1abeadb5":">Manchester City still have a possibility to win the league if they remain unbeaten i.e do not lose any match.","4295d222":">FC Barcelona, Real Madrid CF and Celtic continue to dominate in both the halves of the season.","0b884a2d":"### 1. Country and League Table","bc463760":"Here we can see that there are 11060 unique ids with 10848 unique names. There are 212 common names which is surely possible, but as they have different ids we can confirm that no person is repeated only the names are repeated.  ","f8daac96":"###  Question 9. How are player attributes correlated to each other?","75abfe65":"#### Sprint Speed vs Acceleration ","cbc7741d":">The plot above shows a positive relationship between Free Kick Accuracy and Vision. ","43dad998":"### 4. Player Attributes Table","67e6dcb2":"#### 8. Team Attributes Table","b8b63302":"<a id='cleaning'><\/a>\n## **II. Data Cleaning (Table-Wise)**","3fc64659":"As the shape is very small we can directly view the table","daca7d40":"#### Free Kick Accuracy vs Vision","65350c4a":"#### 2. Country Table ","3c8ec998":"#### 5. Player Table","d10de73f":"###  Question 6. Most preferred foot of players?","2d62b406":"Creating a new column for when the data was collected","9150c188":"#### 7. Team Table","2cb2ee57":"#### Merging the Team table with Team Attributes table","68f32851":"One column has null values","9d757763":">More than 75% preferred right foot."}}