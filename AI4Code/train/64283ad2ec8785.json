{"cell_type":{"7b90d50f":"code","a3be333e":"code","f566284b":"code","d3695db4":"code","a8b5961f":"code","19b65884":"code","b7a79e9c":"code","452f8f79":"code","a5214ae8":"code","b8fe6b7a":"code","106ef544":"code","3ffcb960":"code","039b09fd":"code","c6cd8b1d":"code","78c7ebb3":"code","7b053bbc":"code","54f76720":"code","dffe3ff2":"code","cbf9b4ae":"code","a8d12a49":"code","a62758df":"markdown","40c2fbbe":"markdown","2a697153":"markdown","7985fb72":"markdown","90da591b":"markdown","44132a99":"markdown","c012319c":"markdown","8acd212b":"markdown","0d06a2e1":"markdown","c34580e1":"markdown","3ce9a090":"markdown","40353f73":"markdown","c3807198":"markdown","c7484897":"markdown","9a2de631":"markdown","73b4dc91":"markdown","1360ad1a":"markdown"},"source":{"7b90d50f":"import pandas as pd\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)\n\nfrom learntools.core import binder; binder.bind(globals())\nfrom learntools.pandas.indexing_selecting_and_assigning import *\nprint(\"Setup complete.\")","a3be333e":"reviews.head()","f566284b":"# Your code here\ndesc = reviews['description']\n\n# Check your answer\nq1.check()","d3695db4":"#q1.hint()\n#q1.solution()","a8b5961f":"first_description = reviews['description'][0]\n\n# Check your answer\nq2.check()\nfirst_description","19b65884":"#q2.hint()\n#q2.solution()","b7a79e9c":"first_row = reviews.iloc[0,:]\n\n# Check your answer\nq3.check()\nfirst_row","452f8f79":"#q3.hint()\n#q3.solution()","a5214ae8":"first_descriptions = reviews['description'][0:10]\n\n# Check your answer\nq4.check()\nfirst_descriptions","b8fe6b7a":"#q4.hint()\n#q4.solution()","106ef544":"sample_reviews = reviews.iloc[[1,2,3,5,8],:]\n\n# Check your answer\nq5.check()\nsample_reviews","3ffcb960":"#q5.hint()\n#q5.solution()","039b09fd":"cols = ['country', 'province', 'region_1', 'region_2']\nindices = [0, 1, 10, 100]\ndf = reviews.loc[indices, cols]\n# Check your answer\nq6.check()\ndf","c6cd8b1d":"#q6.hint()\n#q6.solution()","78c7ebb3":"df = reviews.iloc[:100,[0,11]]\n# Check your answer\nq7.check()\ndf","7b053bbc":"#q7.hint()\n#q7.solution()","54f76720":"italian_wines = reviews.loc[reviews.country=='Italy']\n\n# Check your answer\nq8.check()","dffe3ff2":"#q8.hint()\n#q8.solution()","cbf9b4ae":"top_oceania_wines = reviews.loc[\n    (reviews.country.isin(['Australia', 'New Zealand']))\n    & (reviews.points >= 95)]\n\n# Check your answer\nq9.check()\ntop_oceania_wines","a8d12a49":"#q9.hint()\n#q9.solution()","a62758df":"## 9.\n\nCreate a DataFrame `top_oceania_wines` containing all reviews with at least 95 points (out of 100) for wines from Australia or New Zealand.","40c2fbbe":"# Exercises","2a697153":"## 4.\n\nSelect the first 10 values from the `description` column in `reviews`, assigning the result to variable `first_descriptions`.\n\nHint: format your output as a pandas Series.","7985fb72":"## 6.\n\nCreate a variable `df` containing the `country`, `province`, `region_1`, and `region_2` columns of the records with the index labels `0`, `1`, `10`, and `100`. In other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","90da591b":"**[Pandas Home Page](https:\/\/www.kaggle.com\/learn\/pandas)**\n\n---\n","44132a99":"## 2.\n\nSelect the first value from the description column of `reviews`, assigning it to variable `first_description`.","c012319c":"## 7.\n\nCreate a variable `df` containing the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the tutorial:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. \n`loc`, meanwhile, indexes inclusively. \n\n> This is particularly confusing when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 1000 entries, while `df.loc[0:1000]` return 1001 of them! To get 1000 elements using `loc`, you will need to go one lower and ask for `df.iloc[0:999]`. ","8acd212b":"## 5.\n\nSelect the records with index labels `1`, `2`, `3`, `5`, and `8`, assigning the result to the variable `sample_reviews`.\n\nIn other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","0d06a2e1":"## 1.\n\nSelect the `description` column from `reviews` and assign the result to the variable `desc`.","c34580e1":"# Keep going\n\nMove on to learn about **[summary functions and maps](https:\/\/www.kaggle.com\/residentmario\/summary-functions-and-maps)**.","3ce9a090":"## 8.\n\nCreate a DataFrame `italian_wines` containing reviews of wines made in `reviews.country='Italy'`. Hint: `reviews.country` equals what?","40353f73":"Look at an overview of your data by running the following line.","c3807198":"Run the following cell to load your data and some utility functions (including code to check your answers).","c7484897":"# Introduction\n\nIn this set of exercises we will work with the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). ","9a2de631":"## 3. \n\nSelect the first row of data (the first record) from `reviews`, assigning it to the variable `first_row`.","73b4dc91":"Follow-up question: what type of object is `desc`? If you're not sure, you can check by calling Python's `type` function: `type(desc)`.","1360ad1a":"---\n**[Pandas Home Page](https:\/\/www.kaggle.com\/learn\/pandas)**\n\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum) to chat with other Learners.*"}}