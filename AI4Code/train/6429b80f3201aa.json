{"cell_type":{"67d940b2":"code","d36575a4":"code","78f9a6e1":"code","a6b39268":"code","2dd51288":"code","ec42f6a0":"code","0b3f9d2b":"code","4225ec7b":"code","ff5341d6":"code","50bedc78":"code","6c9b64c7":"code","c713a106":"code","f7cd33a0":"code","998a8171":"code","e28710c5":"code","9c846f2a":"code","f3743286":"code","cf0a1661":"code","0073aec5":"code","aafbea3c":"code","0de64395":"code","892c7f14":"code","068bb48f":"code","f4d8ea6c":"code","114268b4":"code","c08f4d9e":"code","65b5baa6":"code","6e5f2d02":"code","0c62c1f5":"code","83f084b1":"code","3f5660ae":"code","9ad19a31":"code","4364aa54":"code","037bf2c9":"code","e067335b":"code","c010406a":"code","f2045221":"code","49d3acd4":"code","e682a358":"code","1374e036":"code","ecb63688":"code","0e7e2e34":"markdown","f2e86eb7":"markdown","7e2410dd":"markdown","bc032b53":"markdown"},"source":{"67d940b2":"!pip install fastbook","d36575a4":"from fastbook import *\nfrom fastai.vision.all import *\npath = Path('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset')","78f9a6e1":"train_fnames = get_image_files(path\/\"Train\")","a6b39268":"np.array(Image.open(train_fnames[11])).shape","2dd51288":"for i in range(0,100):\n  print(np.array(Image.open(train_fnames[i])).shape)","ec42f6a0":"len(train_fnames)","0b3f9d2b":"len(os.listdir('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Normal'))","4225ec7b":"len(os.listdir('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Kidney_stone'))","ff5341d6":"os.listdir('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset')","50bedc78":"augs = [RandomResizedCropGPU(size=224, min_scale=0.75), Rotate(), Zoom()]\ndblock = DataBlock(blocks=(ImageBlock(cls=PILImage), CategoryBlock),\n                   splitter=RandomSplitter(valid_pct=0.2, seed=23),\n                   get_y=parent_label,\n                   item_tfms=Resize(512, method=\"squish\"),\n                   batch_tfms=augs,\n                   )\n\ndls = dblock.dataloaders(train_fnames,bs =64)\n","6c9b64c7":"#for i in range(0,1167):\n # print(dls.dataset[i])","c713a106":"# print number of classes and length of train and valid datasets\ndls.c, len(dls.train_ds), len(dls.valid_ds)","f7cd33a0":"dls.vocab","998a8171":"dls.show_batch()","e28710c5":"learn = cnn_learner(dls, vgg16_bn, loss_func=CrossEntropyLossFlat(), metrics=accuracy)","9c846f2a":"learn.fit_one_cycle(100,1e-2)","f3743286":"learn.save('kidney-VGG16_Grad_CAM_K-fold_100epochs')","cf0a1661":"learn.recorder.plot_loss(skip_start=0, with_valid=True)","0073aec5":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n","aafbea3c":"interp.print_classification_report()","0de64395":"#test_items = get_image_files(path\/\"Test\")\nall_files= get_image_files(path)","892c7f14":"len(os.listdir('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Test\/Normal'))","068bb48f":"len(os.listdir('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Test\/Kidney_stone'))","f4d8ea6c":"\naugs = [RandomResizedCropGPU(size=224, min_scale=0.75), Rotate(), Zoom()]\ndblock = DataBlock(blocks=(ImageBlock(cls=PILImage), CategoryBlock),\n                   splitter=GrandparentSplitter(train_name='Train', valid_name='Test'),\n                   get_y=parent_label,\n                   item_tfms=Resize(512, method=\"squish\"),\n                   batch_tfms=augs,\n                   )\n\ndls_test = dblock.dataloaders(all_files)\n\n","114268b4":"dls_test.vocab","c08f4d9e":"# print number of classes and length of train and valid datasets\ndls.c, len(dls_test.train_ds), len(dls_test.valid_ds)","65b5baa6":"print(\"Number of examples in testing:\", len(dls_test.valid_ds))","6e5f2d02":"learn1 = cnn_learner(dls_test, vgg16_bn, loss_func=CrossEntropyLossFlat(), metrics=accuracy).load('kidney-VGG16_Grad_CAM_K-fold_100epochs')","0c62c1f5":"interp = ClassificationInterpretation.from_learner(learn1)\ninterp.plot_confusion_matrix()\n","83f084b1":"interp.print_classification_report()","3f5660ae":"show_image(Image.open('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Kidney_stone\/1.3.46.670589.33.1.63711492298810057000001.5191343295895602790.png'))","9ad19a31":"IMG5 = PILImage.create('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Kidney_stone\/1.3.46.670589.33.1.63711492298810057000001.5191343295895602790.png')\nx, = first(dls.test_dl([IMG5]))\n\nclass Hook():\n    def hook_func(self, m, i, o): self.stored = o.detach().clone()\n\nhook_output = Hook()\nhook = learn.model[0].register_forward_hook(hook_output.hook_func)\n\nwith torch.no_grad(): output = learn.model.eval()(x)\n\nact = hook_output.stored[0]\n\n\ncam_map = torch.einsum('ck,kij->cij', learn.model[1][-1].weight, act)\nx_dec = TensorImage(dls.train.decode((x,))[0][0])\n_,ax = plt.subplots()\nx_dec.show(ctx=ax)\nax.set_title(dls.vocab[0])\nax.imshow(cam_map[0].detach().cpu(), alpha=0.9, extent=(0,224,224,0),\n              interpolation='bilinear', cmap='magma');","4364aa54":"learn.predict('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Kidney_stone\/1.3.46.670589.33.1.63711492298810057000001.5191343295895602790.png')","037bf2c9":"show_image(Image.open('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Kidney_stone\/1.3.46.670589.33.1.63705534438283100800001.4833960688695057487.png'))","e067335b":"IMG5 = PILImage.create('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Kidney_stone\/1.3.46.670589.33.1.63705534438283100800001.4833960688695057487.png')\nx, = first(dls.test_dl([IMG5]))\n\nclass Hook():\n    def hook_func(self, m, i, o): self.stored = o.detach().clone()\n\nhook_output = Hook()\nhook = learn.model[0].register_forward_hook(hook_output.hook_func)\n\nwith torch.no_grad(): output = learn.model.eval()(x)\n\nact = hook_output.stored[0]\n\n\ncam_map = torch.einsum('ck,kij->cij', learn.model[1][-1].weight, act)\nx_dec = TensorImage(dls.train.decode((x,))[0][0])\n_,ax = plt.subplots()\nx_dec.show(ctx=ax)\nax.set_title(dls.vocab[0])\nax.imshow(cam_map[0].detach().cpu(), alpha=0.9, extent=(0,224,224,0),\n              interpolation='bilinear', cmap='magma');","c010406a":"learn.predict('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Train\/Kidney_stone\/1.3.46.670589.33.1.63705534438283100800001.4833960688695057487.png')","f2045221":"show_image(Image.open('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Test\/Kidney_stone\/1.3.46.670589.33.1.63706830475347975400001.4676991400730475635.png'))","49d3acd4":"IMG5 = PILImage.create('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Test\/Kidney_stone\/1.3.46.670589.33.1.63706830475347975400001.4676991400730475635.png')\nx, = first(dls.test_dl([IMG5]))\n\nclass Hook():\n    def hook_func(self, m, i, o): self.stored = o.detach().clone()\n\nhook_output = Hook()\nhook = learn.model[0].register_forward_hook(hook_output.hook_func)\n\nwith torch.no_grad(): output = learn.model.eval()(x)\n\nact = hook_output.stored[0]\n\n\ncam_map = torch.einsum('ck,kij->cij', learn.model[1][-1].weight, act)\nx_dec = TensorImage(dls.train.decode((x,))[0][0])\n_,ax = plt.subplots()\nx_dec.show(ctx=ax)\nax.set_title(dls.vocab[0])\nax.imshow(cam_map[0].detach().cpu(), alpha=0.9, extent=(0,224,224,0),\n              interpolation='bilinear', cmap='magma');","e682a358":"learn.predict('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Test\/Kidney_stone\/1.3.46.670589.33.1.63714250724706211900001.5443669049826134776.png')","1374e036":"show_image(Image.open('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Test\/Kidney_stone\/1.3.46.670589.33.1.63714693213756365300001.5512018529980604561.png'))","ecb63688":"IMG5 = PILImage.create('..\/input\/kidney-stone\/Kidney_stone_detection-main\/Dataset\/Test\/Kidney_stone\/1.3.46.670589.33.1.63714693213756365300001.5512018529980604561.png')\nx, = first(dls.test_dl([IMG5]))\n\nclass Hook():\n    def hook_func(self, m, i, o): self.stored = o.detach().clone()\n\nhook_output = Hook()\nhook = learn.model[0].register_forward_hook(hook_output.hook_func)\n\nwith torch.no_grad(): output = learn.model.eval()(x)\n\nact = hook_output.stored[0]\n\n\ncam_map = torch.einsum('ck,kij->cij', learn.model[1][-1].weight, act)\nx_dec = TensorImage(dls.train.decode((x,))[0][0])\n_,ax = plt.subplots()\nx_dec.show(ctx=ax)\nax.set_title(dls.vocab[0])\nax.imshow(cam_map[0].detach().cpu(), alpha=0.9, extent=(0,224,224,0),\n              interpolation='bilinear', cmap='magma');","0e7e2e34":"# Evaluating model performance using the unseen test set","f2e86eb7":"# **Kidney_Stone_2_GradCAM**","7e2410dd":"# **Kidney_Stone_GradCAM**","bc032b53":"**Raw-image Misclassified on right Kidney**"}}