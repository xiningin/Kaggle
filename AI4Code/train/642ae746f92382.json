{"cell_type":{"8a5f79c6":"code","68dd0571":"code","fcc8e62f":"code","fb5395ea":"code","3c859c94":"code","2b498c20":"code","694ffcea":"code","c61b3fe7":"code","259b7ae0":"code","73d77479":"code","5bbfa331":"code","61afd40d":"code","0f72bd29":"code","c977ba36":"code","3af6da56":"code","ec24e7ff":"code","d2b61086":"code","3097adda":"code","92f225ad":"code","ccf63592":"code","13fe519d":"code","62c6bc78":"code","451919b0":"code","37d64424":"code","45f0ab39":"code","92f7121e":"code","0d0f7fbd":"code","98c038e1":"markdown","9c8e22a4":"markdown","29202262":"markdown","43f22d24":"markdown","a5d8ebe4":"markdown","fd08178d":"markdown","cc77e217":"markdown","cfb1d354":"markdown","ddec9b98":"markdown","be29c29d":"markdown","c75417ce":"markdown","7e8fffab":"markdown","f82ce5b1":"markdown","d0952446":"markdown","4bf4aea3":"markdown","efc7b3fc":"markdown","1da52c47":"markdown"},"source":{"8a5f79c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","68dd0571":"import seaborn as sb\nimport matplotlib.pyplot as plt","fcc8e62f":"df_train=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf_train.head()","fb5395ea":"df_test=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ndf_test.head()","3c859c94":"df_train.shape","2b498c20":"df_train.describe()","694ffcea":"df_train.isnull().sum()","c61b3fe7":"df_train[\"Age\"]=df_train[\"Age\"].fillna(df_train[\"Age\"].mean())\ndf_test[\"Age\"]=df_test[\"Age\"].fillna(df_test[\"Age\"].mean())","259b7ae0":"def lowerupper(col):\n    q1=np.quantile(col,.25)\n    q3=np.quantile(col,.75)\n    inter=q3-q1\n    lowerbound=q1-(inter*1.5)\n    upperbound=q3+(inter*1.5)\n    outlier=[]\n    for x in col:\n        if((x>upperbound)or(x<lowerbound)):\n            outlier.append(x)\n    return outlier","73d77479":"col=df_train.columns\ncol","5bbfa331":"for i in col:\n    if (df_train[i].values).dtype == \"float\":\n        outlier=lowerupper(df_train[i].values)\n        print(len(outlier),\"outliers are present in\",i)\n    elif (df_train[i].values).dtype == \"int\":\n        outlier=lowerupper(df_train[i].values)\n        print(len(outlier),\"outliers are present in\",i)\n    else:\n        print(\"No outlier present in \", i)","61afd40d":"plt.subplot(1,3,1)\nplt.subplots_adjust(left=0,right=2,bottom=1,top=2,wspace=0.2,hspace=0.4)\nlabel_age=[\"male\",\"female\"]\nplt.title(\"Sex\")\nplt.pie(df_train.groupby(df_train[\"Sex\"]).size(),labels=label_age)\n\nplt.subplot(1,3,2)\nlabel_gen=[3,1,2]\nplt.title(\"Pclass\")\nplt.pie(df_train.groupby(df_train[\"Pclass\"]).size(),labels=label_gen)\n\nplt.subplot(1,3,3)\nlabel_ed=[0,1]\nplt.title(\"Survived\")\nplt.pie(df_train.groupby(df_train[\"Survived\"]).size(),labels=label_ed)\nplt.show()","0f72bd29":"plt.subplot(1,4,1)\nplt.subplots_adjust(left=0,right=2,bottom=1,top=2,wspace=0.2,hspace=0.4)\nplt.title(\"Age\")\nplt.hist(df_train[\"Age\"])\n\nplt.subplot(1,4,2)\nplt.title(\"SibSp\")\nplt.hist(df_train[\"SibSp\"])\n\nplt.subplot(1,4,3)\nplt.title(\"Fare\")\nplt.hist(df_train[\"Fare\"])\n\nplt.subplot(1,4,4)\nplt.title(\"Fare\")\nplt.hist(df_train[\"Fare\"])\nplt.show()","c977ba36":"plt.subplot(1,4,1)\nplt.subplots_adjust(left=0,right=3,bottom=1,top=2,wspace=0.2,hspace=0.4)\nplt.title(\"Sex vs Survived\")\nsb.barplot(x=\"Sex\",y=\"Survived\",data=df_train)\n\nplt.subplot(1,4,2)\nplt.title(\"Sex vs Fare\")\nsb.barplot(x=\"Sex\",y=\"Fare\",data=df_train)\n\nplt.subplot(1,4,3)\nplt.title(\"Pclass vs Survived\")\nsb.barplot(x=\"Pclass\",y=\"Survived\",data=df_train)\n\nplt.subplot(1,4,4)\nplt.title(\"Pclass vs Fare\")\nsb.barplot(x=\"Pclass\",y=\"Fare\",data=df_train)","3af6da56":"df_train.columns","ec24e7ff":"from sklearn import preprocessing","d2b61086":"le = preprocessing.LabelEncoder()\ndf_train[\"Sex\"]=le.fit_transform(df_train[\"Sex\"])","3097adda":"le = preprocessing.LabelEncoder()\ndf_test[\"Sex\"]=le.fit_transform(df_test[\"Sex\"])","92f225ad":"df_train.columns","ccf63592":"df_test.isnull().sum()","13fe519d":"df_test[\"Fare\"]=df_test[\"Fare\"].fillna(df_test[\"Fare\"].mean())","62c6bc78":"X_train=df_train[[\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\"]]\ny_train=df_train[\"Survived\"]","451919b0":"X_test=df_test[[\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\"]]","37d64424":"from sklearn.linear_model import LogisticRegression","45f0ab39":"model=LogisticRegression().fit(X_train,y_train)\nprd_ser=model.predict(X_test)","92f7121e":"prd_ser","0d0f7fbd":"output = pd.DataFrame({'PassengerId': df_test.PassengerId, 'Survived': prd_ser})\noutput.to_csv('submission_one.csv', index=False)","98c038e1":"## Splitting data","9c8e22a4":"## Replacing null values","29202262":"## Replacing null \n- with mean ","43f22d24":"## Performing Logistic Regression","a5d8ebe4":"## Predicted values","fd08178d":"- Test Data\n","cc77e217":"## Label Encodeing","cfb1d354":"## Descriptive statistical values","ddec9b98":"## Outlier checking","be29c29d":"- Test data","c75417ce":"## Histogram","7e8fffab":"## Reading data\n- Train data","f82ce5b1":"- Train data ","d0952446":"## Null values","4bf4aea3":"## Pie chart","efc7b3fc":"## Size of data","1da52c47":"## Saving data to CSV"}}