{"cell_type":{"8c230e7f":"code","15ff0f3f":"code","823fe68e":"code","13d690ff":"code","851fb06a":"code","a8cafa77":"code","a9362efd":"code","0f0d77c3":"code","15a0c79e":"code","2c46501c":"code","ac5455fc":"code","99c26b9c":"markdown","9aa2802f":"markdown"},"source":{"8c230e7f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\n\nimport plotly.tools as tls\nimport squarify\nfrom mpl_toolkits.basemap import Basemap\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\ndata = pd.read_csv(\"..\/input\/master.csv\")\ndata.info()\n\n\n# Any results you write to the current directory are saved as output.","15ff0f3f":"data.head()","823fe68e":"data = data.fillna(0)\ndata.head()","13d690ff":"data['country'].value_counts()","851fb06a":"data = data.drop(['country-year','HDI for year',' gdp_for_year ($) '],axis = 1)\ndata.head()","a8cafa77":"plt.figure(figsize=(20,10))\np= sns.barplot(x=\"country\",y = 'suicides\/100k pop', data=data, palette='colorblind')\np.set_title(\"variation  of suicide per 100k population with countries\")\nfor i in p.get_xticklabels():\n    i.set_rotation(90)","a9362efd":"plt.figure(figsize=(12,6))\ngender= sns.barplot(x=\"sex\",y = 'suicides\/100k pop', data=data, palette='colorblind')\ngender.set_title(\"suicide rate per 100k population of male and female\")","0f0d77c3":"plt.figure(figsize=(12,6))\nage1= sns.barplot(x=\"age\",y = 'suicides\/100k pop', data=data, palette='colorblind')\nage1.set_title(\"variation of suicides par 100k population with ages \")","15a0c79e":"top_ten=pd.DataFrame(data.groupby(['country'])['suicides\/100k pop'].sum().reset_index())\ntop_ten.sort_values(by=['suicides\/100k pop'],ascending=False,inplace=True)\n","2c46501c":"plt.figure(figsize = (13,7))\ntop10=sns.barplot(x=top_ten[\"country\"].head(10), y=top_ten['suicides\/100k pop'].head(10), data=top_ten,palette='colorblind')\ntop10.set_xlabel(\"Name of Country\",fontsize=12)\ntop10.set_ylabel(\"suicides per 100k population\",fontsize=12)\ntop10.set_title('Top 10 Countries having highest suicides')\nfor i in top10.get_xticklabels():\n    i.set_rotation(90)","ac5455fc":"map_on=pd.DataFrame(data.groupby('country')['suicides\/100k pop'].sum().reset_index())\n\ncount = [ dict(\n        type = 'choropleth',\n        locations = map_on['country'],\n        locationmode='country names',\n        z = map_on['suicides\/100k pop'],\n        text = map_on['country'],\n        colorscale = 'earth',\n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick =False,\n            title = 'color based scale'),\n      ) ]\nlayout = dict(\n    title = 'Suicides across the world',\n    geo = dict(\n        showframe = True,\n        showcoastlines = True,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\nfig = dict( data=count, layout=layout )\niplot( fig, validate=False, filename='d3-world-map' )","99c26b9c":"Top 10 countries having the maximum suicide rate over the year. ","9aa2802f":"We can remove useless columns which are not requiresd."}}