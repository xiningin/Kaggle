{"cell_type":{"cba318ca":"code","206ba9c3":"code","589e33fa":"code","5d9b182a":"code","d4b3adeb":"code","b19c19fa":"code","c3239b15":"code","9ed1159f":"code","c6a05229":"code","0b087f1e":"code","8929e159":"markdown","e0ea63a3":"markdown"},"source":{"cba318ca":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","206ba9c3":"train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv',index_col=0)\ntest = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv',index_col=0)\nprint(train.head())","589e33fa":"train = train.fillna(0)\ntest = test.fillna(0)\nplt.figure(figsize=(15,15))\nsns.heatmap(train.corr())","5d9b182a":"cols = ['GarageCars','GarageArea','GrLivArea','OverallQual']","d4b3adeb":"f, axes = plt.subplots(1, 4,figsize=(20,10))\nfor i,col in enumerate(cols):\n    sns.scatterplot(x=col, y=\"SalePrice\", data=train,ax=axes[i])","b19c19fa":"train = train.drop(train[(train['OverallQual'] == 10) & (train['SalePrice'] < 12.5)].index)","c3239b15":"from sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split\nX = train[cols]\nsc = StandardScaler()\nsc.fit(X[['GarageArea','GrLivArea']].values)\nX[['GarageArea','GrLivArea']] = sc.transform(X[['GarageArea','GrLivArea']].values) \ny = train['SalePrice']\ns = y.std()\nmean = y.mean()\ny = (y - mean) \/ s\nX_train, X_test, y_train, y_test = train_test_split(X,y)","9ed1159f":"from sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor()\nmodel.fit(X_train,y_train)","c6a05229":"model.score(X_test,y_test)","0b087f1e":"X = test[cols]\nX[['GarageArea','GrLivArea']] = sc.transform(X[['GarageArea','GrLivArea']].values) \ny_pred = model.predict(X)\npred = (y_pred * s) + mean \nsub = pd.DataFrame()\nsub['Id'] = test.index.values\nsub['SalePrice'] = pred\nprint(sub.head())\nsub.to_csv('pred_submission.csv', index=False, encoding='utf-8')","8929e159":"## Imports","e0ea63a3":"## Test"}}