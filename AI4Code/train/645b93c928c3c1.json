{"cell_type":{"9fa989a8":"code","6c1de805":"code","a3b082b9":"code","554136ca":"code","cce6a61e":"code","2333a479":"code","b77e4f6a":"code","79148cd4":"code","576de387":"code","4853447a":"code","fde8a49d":"code","37ed83ce":"code","2637f01b":"code","fef32bf3":"code","05ee8ffc":"code","8404a0b3":"code","3dadb3d8":"code","319d119d":"code","4f5caee0":"code","06e17d0d":"code","0c91d4eb":"code","6e5bcf24":"code","3e8c8c0c":"code","4107cdc0":"code","5379f79f":"code","0317836d":"code","88cf7e3a":"code","74e227c2":"code","148f43d7":"code","1c23e432":"code","2e8aa52a":"code","f6db5c1e":"code","be0beff1":"code","de9b0e12":"code","6d8eaced":"code","cc23e169":"code","f068a2e6":"code","0f58df27":"code","f01a95c7":"code","c0a44567":"code","97fae823":"code","b4028b53":"code","73b32c74":"markdown","c61b2f62":"markdown","a52288e4":"markdown","89a23534":"markdown","5501fcac":"markdown","c6628148":"markdown","5e21e80f":"markdown","d0d9a606":"markdown","78e8738c":"markdown","a4fe4978":"markdown","59ec106f":"markdown"},"source":{"9fa989a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c1de805":"#lets do hyundi\nhyundi_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/hyundi.csv')","a3b082b9":"hyundi_df.head()","554136ca":"hyundi_df.shape","cce6a61e":"hyundi_df.model.unique()","2333a479":"hyundi_df.model.value_counts()","b77e4f6a":"hyundi_df['years_old'] = 2020-hyundi_df['year']","79148cd4":"hyundi_df.drop('year',axis=1,inplace=True)","576de387":"hyundi_df.head()","4853447a":"hyundi_df.transmission.unique()","fde8a49d":"hyundi_df.fuelType.unique()","37ed83ce":"import matplotlib.pyplot as plt\nimport seaborn as sns","2637f01b":"sns.scatterplot(hyundi_df['tax(\u00a3)'],hyundi_df['price'])","fef32bf3":"sns.pairplot(hyundi_df)","05ee8ffc":"sns.heatmap(hyundi_df.corr(),annot = True)","8404a0b3":"hyundi_df.isnull().any()","3dadb3d8":"#Feature Engineering\nhyundi_df.drop('model',axis=1,inplace=True)","319d119d":"hyundi_df.head()","4f5caee0":"hyundi_df = pd.get_dummies(hyundi_df,drop_first=True)","06e17d0d":"hyundi_df.head()","0c91d4eb":"X = hyundi_df.iloc[:,1:]\ny = hyundi_df.iloc[:,0:1]\n","6e5bcf24":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","3e8c8c0c":"sc_X = StandardScaler()\nsc_X.fit(X)\nX = sc_X.transform(X)\nX = pd.DataFrame(X)\n","4107cdc0":"sc_y = StandardScaler()\ny = sc_y.fit_transform(y)\ny = pd.DataFrame(y)","5379f79f":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state=0)","0317836d":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(X_train,y_train)","88cf7e3a":"y_pred = lin_reg.predict(X_test)\n","74e227c2":"lin_reg.score(X_test,y_test)","148f43d7":"lin_reg.coef_","1c23e432":"lin_reg.intercept_","2e8aa52a":"from sklearn.preprocessing import PolynomialFeatures\nregressor_poly = PolynomialFeatures(degree=2)\nX_poly = regressor_poly.fit_transform(X_train)\n\nregressor_lin_2 = LinearRegression()\nregressor_lin_2.fit(X_poly,y_train)","f6db5c1e":"y_pred_2 = regressor_lin_2.predict(regressor_poly.fit_transform(X_test))","be0beff1":"from sklearn.metrics import r2_score\nprint(r2_score(y_test,y_pred_2))","de9b0e12":"from sklearn.svm import SVR\nregressor = SVR(kernel='rbf')\nregressor.fit(X_train,y_train)","6d8eaced":"y_pred_svr = regressor.predict(X_test)\n#print(r2_score(y_test))","cc23e169":"print(r2_score(y_test,y_pred_svr))","f068a2e6":"from sklearn.tree import DecisionTreeRegressor\nregressor_tree = DecisionTreeRegressor(random_state=0)\nregressor_tree.fit(X_train,y_train)","0f58df27":"y_pred_tree = regressor_tree.predict(X_test)","f01a95c7":"print(r2_score(y_test,y_pred_tree))","c0a44567":"from sklearn.ensemble import RandomForestRegressor\nregressor_forest = RandomForestRegressor(n_estimators=300,random_state=0)\nregressor_forest.fit(X_train,y_train)","97fae823":"y_pred_forest = regressor_forest.predict(X_test)","b4028b53":"print(r2_score(y_test,y_pred_forest))","73b32c74":"## Decision Tree Regressor ##","c61b2f62":"**## Linear Regression ##**","a52288e4":"***","89a23534":"****","5501fcac":"***","c6628148":"## Polynomial Regression ##","5e21e80f":"Random Forest","d0d9a606":"***","78e8738c":"## SVM ##","a4fe4978":"***","59ec106f":"Milege here is kilometres driven."}}