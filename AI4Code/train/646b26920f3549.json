{"cell_type":{"cd7da69e":"code","d23957ce":"code","f1ca4f7a":"code","bcb73d3d":"code","0c0671a8":"code","c4164c30":"code","979d4052":"code","3918ed2c":"code","bddb277e":"code","ee06db40":"code","5311c658":"code","7f787d9c":"code","95a6e832":"code","eb0ec1bd":"code","8c3c149c":"code","d2807fda":"code","076ee2dc":"code","303249c7":"code","227b9681":"code","aeaebcd1":"code","6a978087":"code","69f0bc20":"code","d00af5d6":"code","c35f7af0":"code","1dd5ce06":"markdown","68bd831c":"markdown","4593cd63":"markdown","7a7cb2ea":"markdown","3c94bcfd":"markdown","d365c768":"markdown"},"source":{"cd7da69e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport datetime\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d23957ce":"df_covid19 = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv', usecols=[1,3,5,6,7])\n\ndf_covid19.head()","f1ca4f7a":"df_covid19.info()","bcb73d3d":"df_covid19.shape","0c0671a8":"df_covid19_brazil = df_covid19[df_covid19['Country\/Region'] == 'Brazil']\ndf_covid19_brazil.reset_index()\n\ndf_covid19_brazil.head(20)","c4164c30":"#identificando os infectados por data\n\ndf_covid19_brazil_infecteds = df_covid19_brazil[['ObservationDate', 'Infected']]\ndf_covid19_brazil_infecteds['ObservationDate'] = pd.to_datetime(df_covid19_brazil_infecteds['ObservationDate'])\ndf_covid19_brazil_infecteds.set_index('ObservationDate', inplace=True)\ndisplay(df_covid19_brazil_infecteds.head())\ndisplay(df_covid19_brazil_infecteds.shape)","979d4052":"plt.figure(figsize=(20,10))\nplt.title('Covid no Brasil')\nplt.plot(df_covid19_brazil ['ObservationDate'], df_covid19_brazil['Infected'])","3918ed2c":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score","bddb277e":"df_covid19_brazil_infecteds = pd.concat([df_covid19_brazil_infecteds['Infected'],\n                                         df_covid19_brazil_infecteds['Infected'].shift(1)], axis=1, keys=['Infected', 'Infected_shifted'])\ndf_covid19_brazil_infecteds.head(10)","ee06db40":"df_covid19_brazil_infecteds2 = df_covid19_brazil_infecteds[1:]\n\ndf_covid19_brazil_infecteds2.Mse_baseline = np.sqrt(mean_squared_error(df_covid19_brazil_infecteds2.Infected, df_covid19_brazil_infecteds2.Infected_shifted))\ndf_covid19_brazil_infecteds2.r2_baseline = r2_score(df_covid19_brazil_infecteds2.Infected, df_covid19_brazil_infecteds2.Infected_shifted)\n\nprint(df_covid19_brazil_infecteds2.r2_baseline)\nprint(df_covid19_brazil_infecteds2.Mse_baseline)","5311c658":"plt.figure(figsize=(10,10))\nplt.title('Infected \/ Infected_shifted')\nplt.grid()\nplt.plot(df_covid19_brazil_infecteds2.Infected, color='Blue', linewidth=2)\nplt.plot(df_covid19_brazil_infecteds2.Infected_shifted, color='orange', linewidth=3, linestyle='--')\nplt.legend(['Real', 'Predito'])\nplt.show()","7f787d9c":"X = np.reshape([i for i in range(0, len(df_covid19_brazil_infecteds2['Infected']))],(-1, 1))\ny = df_covid19_brazil_infecteds2['Infected']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)","95a6e832":"from sklearn.linear_model import LinearRegression","eb0ec1bd":"lr = LinearRegression(n_jobs=-1)\nlr.fit(X_train, y_train)\nlr_pred = lr.predict(X_test)\n\nprint(r2_score(y_test, lr_pred))\nprint(np.sqrt(mean_squared_error(y_test, lr_pred)))\n","8c3c149c":"plt.figure(figsize=(10,10))\n\nplt.title('Predi\u00e7\u00e3o de s\u00e9ries temporais utilizando Regress\u00e3o linear')\nplt.grid()\nplt.plot(X, y, linewidth=2)\nplt.plot(X, lr.predict(X), linestyle='--', linewidth=3, color='orange')\nplt.xlabel('Dias ap\u00f3s o primeiro caso')\nplt.ylabel('Infectados')\nplt.legend(['Real','Predito'])\nplt.show()","d2807fda":"from statsmodels.graphics.tsaplots import plot_pacf, plot_acf \n","076ee2dc":"# identificar o par\u00e2metro q\nplot_acf(df_covid19_brazil_infecteds2.Infected)\nplt.show()","303249c7":"# identificar o par\u00e2metro p\nplot_pacf(df_covid19_brazil_infecteds2.Infected)\nplt.show()","227b9681":"train_size = int(len(df_covid19_brazil_infecteds2) * 0.70)\ndf_covid19_brazil_infecteds2_train = df_covid19_brazil_infecteds2.Infected[:train_size].values.reshape(-1,1)\ndf_covid19_brazil_infecteds2_test = df_covid19_brazil_infecteds2.Infected[train_size:].values.reshape(-1,1)\nprint('Treino: {}'.format(df_covid19_brazil_infecteds2_train.shape[0]))\nprint('Teste: {}'.format(df_covid19_brazil_infecteds2_test.shape[0]))","aeaebcd1":"from statsmodels.tsa.arima_model import ARIMA","6a978087":"df_teste_arima = pd.DataFrame([])\nrmse = pd.Series([])\nordem = pd.Series([])\nr2 = pd.Series([])\naic = pd.Series([])\npredicoes = pd.DataFrame([])\nc = 0\n\nfor i in range(0, 4):\n    for j in range(0, 4):\n        for k in range(0, 2):\n            try:\n                \n                # instancia o modelo\n                df_covid19_brazil_infecteds_model = ARIMA(df_covid19_brazil_infecteds2_train, order=(i,k,j))\n                # ajustar o modelo\n                df_covid19_brazil_infecteds_model_fit = df_covid19_brazil_infecteds_model.fit()\n                # Calcula o AIC\n                aic[c] = df_covid19_brazil_infecteds_model_fit.aic\n                # realiza a predi\u00e7\u00e3o\n                df_covid19_brazil_infecteds_model_fit_forecast = df_covid19_brazil_infecteds_model_fit.forecast(steps=(len(df_covid19_brazil_infecteds2)-train_size))[0]\n                # salva a ordem que est\u00e1 sendo utilizada no ARIMA\n                ordem[c] = '({}, {}, {})'.format(i,j,k)\n                # Salva o r2\n                r2[c] = r2_score(df_covid19_brazil_infecteds2_test, df_covid19_brazil_infecteds_model_fit_forecast)\n                # salva o RMSE\n                rmse[c] = np.sqrt(mean_squared_error(df_covid19_brazil_infecteds2_test, df_covid19_brazil_infecteds_model_fit_forecast))\n\n                # Salva as predi\u00e7oes deste ARIMA\n                predicoes.insert(c, ordem[c] , df_covid19_brazil_infecteds_model_fit_forecast)\n                \n                c += 1\n            except:\n                continue\n                \ndf_teste_arima = pd.concat([ordem, r2, rmse, aic], axis=1, keys=['Order', 'R2_score', 'RSME', 'AIC']).sort_values(by=['R2_score','RSME', 'AIC'], ascending=False)\n","69f0bc20":"df_teste_arima","d00af5d6":"plt.figure(figsize=(20,15))\nif len(df_teste_arima) % 2 == 0:\n    for c in range(len(df_teste_arima)):\n        plt.subplot(int(len(df_teste_arima)\/4),4,c+1)\n        plt.title('Arima Ordem: {}'.format(predicoes.columns[c]))\n        plt.grid()\n        plt.plot(df_covid19_brazil_infecteds2_train, linewidth=2)\n        plt.plot([None for i in df_covid19_brazil_infecteds2_train] + [j for j in df_covid19_brazil_infecteds2_test], linewidth=2)\n        plt.plot([None for i in df_covid19_brazil_infecteds2_train] + [j for j in predicoes[predicoes.columns[c]]], linestyle='--', color='red', linewidth=3)\n        plt.legend(['Treino', 'Teste', 'Predito'])\nelse: \n    for c in range(len(df_teste_arima)):\n        plt.subplot(np.ceil(int(len(df_teste_arima)\/3))+1,3,c+1)\n        plt.title('Arima Ordem: {}'.format(predicoes.columns[c]))\n        plt.grid()\n        plt.plot(df_covid19_brazil_infecteds2_train, linewidth=2)\n        plt.plot([None for i in df_covid19_brazil_infecteds2_train] + [j for j in df_covid19_brazil_infecteds2_test], linewidth=2)\n        plt.plot([None for i in df_covid19_brazil_infecteds2_train] + [j for j in predicoes[predicoes.columns[c]]], linestyle='--', color='red', linewidth=3)\n        plt.legend(['Treino', 'Teste', 'Predito'])\nplt.tight_layout() \nplt.show()","c35f7af0":"df_covid19_brazil_infecteds2.plot(kind='kde')","1dd5ce06":"# S\u00e9ries Temporais","68bd831c":"# Modelo ARIMA","4593cd63":"Ao tentar utilizar um modelo de regress\u00e3o linear, existe uma tend\u00eancia da s\u00e9rie temporal ser linear, isso n\u00e3o ocorre com este modelo, sendo assim este modelo n\u00e3o se adequa a este tipo de dado.","7a7cb2ea":"O estudo sobre a evolu\u00e7\u00e3o do v\u00edrus ser\u00e1 feito somente para o Brasil.","3c94bcfd":"\n\n**Softwares para uso em Ci\u00eancias de Dados III**\n\n**Trabalho Covid 19**\n\n**Prof. Thiago Baroni**\n\n**Carolina Silva Baptistella - 1931133089**\n","d365c768":"1. Verificamos que mesmo tendo um R quadrado alto, a raiz quadrada do erro m\u00e9dio, 3706,35, \u00e9 maior que o do modelo de base 1376,21, ent\u00e3o conclu\u00edmos que n\u00e3o \u00e9 um modelo ideal.\n"}}