{"cell_type":{"b54ab26e":"code","eeb436ef":"code","30909c0c":"code","a4f98aba":"code","9f0d4574":"code","08068927":"code","8c052deb":"code","6a65f3e6":"code","96ae3393":"code","0e0ef182":"code","91c5ebd0":"code","37d1720f":"code","ac25994c":"code","1c110fc5":"code","3bbace0e":"code","d951ff67":"code","c09c2000":"code","d6488c9f":"code","1fe5c091":"code","7768247a":"code","ef1a00c2":"code","0baa4754":"code","6c9574ad":"code","caacc752":"code","92cc5619":"code","969263b4":"code","c2360f99":"code","8df0aa5e":"markdown","cf4731fd":"markdown","3013a59c":"markdown"},"source":{"b54ab26e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport scipy\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import classification_report,accuracy_score\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom sklearn.svm import OneClassSVM\nfrom pylab import rcParams\nrcParams['figure.figsize']=14,8\nRANDOM_SEED=42\nLABELS=[\"Normal\",\"Fraud\"]\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eeb436ef":"df=pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","30909c0c":"df.info()","a4f98aba":"columns=df.columns.tolist()\ncolumns=[c for c in columns if c not in [\"Class\"]]\ntarget=\"Class\"\nstate=np.random.RandomState(42)\nX=df.drop('Class',axis=1)\nY=df['Class']\nX_outlier=state.uniform(low=0,high=1,size=(X.shape[0],X.shape[1]))\n","9f0d4574":"df.isnull().values.any()","08068927":"plt.figure(figsize=(16,9))\nsns.countplot(df['Class'])","8c052deb":"fraud=df[df['Class']==1]\nnormal=df[df['Class']!=1]\nprint(fraud.shape[0])\nprint(normal.shape[0])","6a65f3e6":"from imblearn.under_sampling import NearMiss","96ae3393":"nm=NearMiss()\nX_res,y_res=nm.fit_sample(X,Y)","0e0ef182":"X_res.shape,y_res.shape","91c5ebd0":"from collections import Counter\nCounter(Y),Counter(y_res)","37d1720f":"from imblearn.combine import SMOTETomek","ac25994c":"smk=SMOTETomek()\nX_res,y_res=smk.fit_sample(X,Y)","1c110fc5":"X_res.shape,y_res.shape","3bbace0e":"from collections import Counter\nCounter(Y),Counter(y_res)","d951ff67":"from imblearn.over_sampling import RandomOverSampler","c09c2000":"os=RandomOverSampler(1)\nX_train,y_train=os.fit_sample(X,Y)","d6488c9f":"X_train.shape,y_train.shape","1fe5c091":"from collections import Counter\nCounter(Y),Counter(y_train)","7768247a":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X_train,y_train,test_size=0.3,random_state=1)","ef1a00c2":"from sklearn.ensemble import RandomForestClassifier","0baa4754":"clf = RandomForestClassifier(max_depth=2, random_state=0)","6c9574ad":"clf.fit(X_train,y_train)","caacc752":"y_pred=clf.predict(X_test)","92cc5619":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test,y_pred))","969263b4":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","c2360f99":"from sklearn.metrics import accuracy_score\nprint(round(accuracy_score(y_test,y_pred)*100,2),\"%\")","8df0aa5e":"So it is an imbalanced dataset","cf4731fd":"## **OverSampling**","3013a59c":"## **UnderSampling**"}}