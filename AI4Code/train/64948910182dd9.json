{"cell_type":{"1ceb6645":"code","139408d0":"code","1b2fe15e":"code","bfcfef8c":"code","303f19ca":"code","bbbdd24c":"code","007a1cc9":"code","a48f4486":"code","4ef3f04d":"code","365c0d0d":"code","cbf34ff4":"code","9eedd80a":"code","7f3e3383":"code","4119f966":"code","e3840e1f":"code","889a87db":"markdown","0dfbb78a":"markdown","ac17b5b4":"markdown","4873f256":"markdown","70e25bd6":"markdown"},"source":{"1ceb6645":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nsns.set(style='darkgrid')\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","139408d0":"df = pd.read_csv('..\/input\/us-accidents\/US_Accidents_June20.csv')","1b2fe15e":"df.head()","bfcfef8c":"df.columns","303f19ca":"import matplotlib.pyplot as plt\n#%matplotlib inline","bbbdd24c":"accidents = df[['Start_Time','End_Time','State','City', 'County', 'Zipcode','Severity','Weather_Condition','Amenity', 'Bump', 'Crossing',\n       'Give_Way', 'Junction', 'No_Exit', 'Railway', 'Roundabout', 'Station',\n       'Stop', 'Traffic_Calming', 'Traffic_Signal', 'Turning_Loop','Sunrise_Sunset']]","007a1cc9":"\n#x = accidents['State'].value_counts()\nplt.figure(figsize=(20,12))\nstates = sns.countplot(y = 'State', data = accidents, order = accidents['State'].value_counts().index, palette='Reds_d')\nplt.ylabel(\"State\", labelpad=10, fontsize=15, weight = 'bold')\nplt.xlabel('Number of Traffic Accidents', labelpad=10,fontsize=15, weight='bold')\nplt.title('US Traffic Accidents by State (2016-2020)',fontsize=20, weight='bold')","a48f4486":"accidents['Start_Time'] = pd.to_datetime(accidents['Start_Time'])\naccidents['End_Time'] = pd.to_datetime(accidents['End_Time'])\n\naccidentsCA = accidents[accidents[\"State\"] == 'CA']\naccidentsCA['City'].value_counts().head(15)\ntop15CA = pd.DataFrame(accidentsCA['City'].value_counts().head(15))\n","4ef3f04d":"plt.figure(figsize=(20,12))\nsns.barplot(top15CA['City'],top15CA.index,palette=\"Reds_d\")\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.xlabel(\"Number of Traffic Accidents\", labelpad = 10, fontsize=15,weight='bold')\nplt.ylabel(\"City\", labelpad = 12,fontsize=15, weight='bold')\nplt.title(\"Top 15 California Cities for Traffic Accidents\", fontsize=20,weight='bold')","365c0d0d":"top_weather_CA = pd.DataFrame(accidentsCA['Weather_Condition'].value_counts().head(15))\n\nplt.figure(figsize=(20,12))\nsns.barplot(top_weather_CA['Weather_Condition'],top_weather_CA.index,palette=\"YlOrRd\")\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.xlabel(\"Number of Traffic Accidents\", labelpad = 10, fontsize=15,weight='bold')\nplt.ylabel(\"Weather Condition\", labelpad = 12,fontsize=15, weight='bold')\nplt.title(\"Top Weather Conditions for California Traffic Accidents\", fontsize=20,weight='bold')","cbf34ff4":"surround = ['Amenity', 'Bump', 'Crossing',\n       'Give_Way', 'Junction', 'No_Exit', 'Railway', 'Roundabout', 'Station',\n       'Stop', 'Traffic_Calming', 'Traffic_Signal', 'Turning_Loop']\ncount = {}\n\nfor i in range(len(surround)):\n    try:\n        acc_count = accidentsCA[surround[i]].value_counts()[1]\n        count.setdefault(surround[i], acc_count)\n    except(KeyError):\n        count.setdefault(surround[i],0)","9eedd80a":"surroundings = pd.DataFrame.from_dict(count, orient = 'index', columns = ['Accidents'])\nsurroundings = surroundings.sort_values('Accidents', ascending = False)\nsurroundings","7f3e3383":"plt.figure(figsize=(20,12))\nsns.barplot(surroundings['Accidents'],surroundings.index, palette = 'Blues_r')\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.xlabel(\"Number of Traffic Accidents\", labelpad = 10, fontsize=15,weight='bold')\nplt.ylabel(\"Nearby Road Features\", labelpad = 12,fontsize=15, weight='bold')\nplt.title(\"Common Road Features and Traffic Accidents in California\", fontsize=20,weight='bold')","4119f966":"accidentsCA['Sunrise_Sunset'].value_counts()","e3840e1f":"plt.figure(figsize = (12,8))\ndaynight = plt.pie(accidentsCA['Sunrise_Sunset'].value_counts(),autopct='%1.1f%%',shadow = True, explode = (0,0.1), colors = ['tomato','royalblue'], textprops=dict(color=\"w\",weight = 'bold'))\nplt.legend(['Day','Night'], loc=\"best\",prop={'size': 15})\nplt.title('Traffic Accidents Percentages by Time',fontsize=20,weight='bold')","889a87db":"It seems that accidents commonly occur around junctions.","0dfbb78a":"California has had the most accidents by a huge margin, with 816,825 accidents in the past 4 years. As someone that used to live in California, I have no doubt that this information is accurate.","ac17b5b4":"Precipitation is rare in most of California, so it makes sense that most of the accidents occured in clear conditions. ","4873f256":"Looks like Los Angeles has had the most traffic accidents out of all the California cities. As someone who used to live in Los Angeles specifically, I have no doubt that this information is accurate.","70e25bd6":"Around 2\/3 of accidents in California occur by day, according to Sunrise-Sunset definitions."}}