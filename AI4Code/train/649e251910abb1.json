{"cell_type":{"3123e862":"code","69f532ac":"code","3cff1674":"code","b1a521b3":"code","136658c9":"code","d713a0a8":"code","f1e765fb":"code","7fa09f22":"code","65bf466d":"code","f91068e5":"code","d9fb3695":"code","08a189a5":"code","e0ba2c9d":"code","a25972e7":"code","7c566e43":"code","f156ec43":"code","0182612a":"code","dd6f2810":"code","1e0ccf5d":"code","687459a1":"markdown","b0cbf44f":"markdown","9da43184":"markdown","be81e1c4":"markdown"},"source":{"3123e862":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","69f532ac":"import matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph.\nimport matplotlib.pyplot as plt\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom pylab import rcParams\n# figure size in inches\n%matplotlib inline","3cff1674":"df = pd.read_csv('\/kaggle\/input\/mobile-data-speeds-of-all-india-during-march-2018\/march18_myspeed.csv')","b1a521b3":"df.head()","136658c9":"df.info()","d713a0a8":"df.rename(columns={'Service Provider': 'Operator','Data Speed(Mbps)': 'Throughput'},inplace=True)","f1e765fb":"df.head()","7fa09f22":"df.groupby('Technology')['Throughput'].max().sort_index()","65bf466d":"#reference from https:\/\/www.kaggle.com\/anuragk240\/visualising-data-speeds\ncolumns = ['Technology', 'Test_type', 'Operator', 'LSA']\nfor c in columns:\n    v = df[c].unique()\n    g = df.groupby(by=c)[c].count().sort_values(ascending=True)\n    r = np.arange(len(v))\n    print(g.head)\n    plt.figure(figsize = (6, len(v)\/2 +1))\n    plt.barh(y = r, width = g.head(len(v)))\n    total = sum(g.head(len(v)))\n    print(total)\n    for (i, u) in enumerate(g.head(len(v))):\n        plt.text(x = u + 0.2, y = i - 0.08, s = str(round(u\/total*100, 2))+'%', color = 'green', fontweight = 'bold')\n    plt.margins(x = 0.2)\n    plt.yticks(r, g.index)\n    plt.show()","f91068e5":"rcParams['figure.figsize'] = 16, 8\nwidth = 0.25 \n# Plotting the bars\nx = df.groupby('LSA')['Throughput'].mean().sort_values()\nx_indexes = np.arange(len(x.index))\ny = df[df[\"Test_type\"]==\"Upload\"].groupby('LSA')['Throughput'].mean().sort_values()\nz = df[df[\"Test_type\"]==\"Download\"].groupby('LSA')['Throughput'].mean().sort_values()\nplt.bar(x_indexes-width,y, width,label=\"Average Upload\") \nplt.bar(y.index,z, width,label=\"Average Download\") \nplt.bar(x_indexes+width,x, width,label=\"Average Combined\") \nplt.title(\"Throughput accross Circles\")\nplt.ylabel('Throughput in Mbps')\nplt.style.use('seaborn-pastel')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.show()","d9fb3695":"fig = plt.figure()\nrcParams['figure.figsize'] = 16, 8\nplt.subplot(2, 2, 1)\nwidth = 0.25 \n# Plotting the bars\nx = df[df[\"Test_type\"]==\"Download\"].groupby('LSA')['Throughput'].max().sort_values()\nx_indexes = np.arange(len(x.index))\ny = df[df[\"Test_type\"]==\"Download\"].groupby('LSA')['Throughput'].mean().sort_values()\nplt.title(\"Download Throughput accross country\")\nplt.bar(y.index,y, width,label=\"Average\") \nplt.bar(x_indexes+width,x, width,label=\"Maximum\") \nplt.ylabel('Throughput in Mbps')\nplt.style.use('seaborn-pastel')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.subplot(2, 2, 2)\nu = df[df[\"Test_type\"]==\"Upload\"].groupby('LSA')['Throughput'].max().sort_values()\nx_indexes = np.arange(len(u.index))\nv = df[df[\"Test_type\"]==\"Upload\"].groupby('LSA')['Throughput'].mean().sort_values()\nplt.title(\"Upload Throughput accross country\")\nplt.bar(v.index,v, width,label=\"Average\") \nplt.bar(x_indexes+width,u, width,label=\"Maximum\") \nplt.ylabel('Throughput in Mbps')\nplt.style.use('seaborn-pastel')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","08a189a5":"#download data\nx,y","e0ba2c9d":"#upload data\nu,v","a25972e7":"fig = plt.figure()\nrcParams['figure.figsize'] = 16, 8\nwidth = 0.25 \n# Plotting the bars\n\ny = df[df[\"Test_type\"]==\"Download\"].groupby('Operator')['Throughput'].max().sort_values()\nz = df[df[\"Test_type\"]==\"Upload\"].groupby('Operator')['Throughput'].max().sort_values()\nx_indexes = np.arange(len(y.index))\nplt.title(\"Throughput accross country\")\nplt.bar(y.index,y, width,label=\"Maximum Download\") \nplt.bar(x_indexes+width,z, width,label=\"Maximum Upload\") \nplt.ylabel('Throughput in Mbps')\nplt.style.use('seaborn-pastel')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","7c566e43":"fig = plt.figure()\nrcParams['figure.figsize'] = 16, 8\nwidth = 0.25 \n# Plotting the bars\ny = df[df[\"Technology\"]==\"4G\"].groupby('Operator')['Throughput'].max().sort_values()\nx_indexes = np.arange(len(y.index))\nz = df[df[\"Technology\"]==\"4G\"].groupby('Operator')['Throughput'].mean().sort_values()\nplt.title(\"4G Throughput accross country \/ Operator\")\nplt.bar(y.index,y, width,label=\"Maximum \") \nplt.bar(x_indexes+width,z, width,label=\"Average\") \nplt.ylabel('Throughput in Mbps')\nplt.style.use('seaborn-pastel')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","f156ec43":"def float_signal_strength(x):\n    if x == \"na\":\n        return np.NaN\n    else:\n        return float(x)\ndf[\"Signal_strength\"] = df[\"Signal_strength\"].apply(lambda x: float_signal_strength(x))","0182612a":"df.info()","dd6f2810":"df[\"Signal_strength\"].fillna(df[\"Signal_strength\"].mean(),inplace=True)","1e0ccf5d":"#reference from https:\/\/www.kaggle.com\/anuragk240\/visualising-data-speeds\n\nimport matplotlib.colors as colors\n\nfig = plt.figure()\nrcParams['figure.figsize'] = 16, 8\nx = df['Signal_strength']\ny = df['Throughput']\nplt.hist2d(x, y, bins = 40, norm=colors.LogNorm())\nplt.ylabel('Data Speed(Mbps)')\nplt.xlabel('Signal_strength')\nplt.style.use('seaborn-pastel')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.show()","687459a1":"# Data across the Telecom circles","b0cbf44f":"# Throughput Analysis across the Telecom Circles\n\n* Maximum upload and download throughput recorded was at Himachal Pradesh circle\n* Minimum upload and download throughput recorded is 0 Mbps\n* Delhi has very low average throughput in upload\n* North East has very low average throughput in download","9da43184":"# Signal strength vs Throughput","be81e1c4":"# Operator throughput analysis\n\n* Maximum throughput accross all the circles is maintained by Jio\n* JIO has highest throughput for 4G networks as well"}}