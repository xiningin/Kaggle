{"cell_type":{"c77f27a2":"code","51113de3":"markdown"},"source":{"c77f27a2":"#!\/usr\/bin\/python3\n# coding=utf-8\n#===========================================================================\n# This is a minimal script to perform a classification on the kaggle \n# 'Titanic' data set using the random forest classifier from scikit-learn\n# Carl McBride Ellis (16.IV.2020)\n#===========================================================================\n#===========================================================================\n# load up the libraries\n#===========================================================================\nimport pandas  as pd\n\n#===========================================================================\n# read in the data\n#===========================================================================\ntrain_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data  = pd.read_csv('..\/input\/titanic\/test.csv')\n\n#===========================================================================\n# select some features\n#===========================================================================\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\", \"Embarked\"]\n\n\n#===========================================================================\n# for the features that are categorical we use pd.get_dummies:\n# \"Convert categorical variable into dummy\/indicator variables.\"\n#===========================================================================\nX_train       = pd.get_dummies(train_data[features])\ny_train       = train_data[\"Survived\"]\nfinal_X_test  = pd.get_dummies(test_data[features])\n\n#===========================================================================\n# perform the classification\n#===========================================================================\nfrom sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(max_features='auto', min_samples_leaf=10)\nclassifier.fit(X_train, y_train)\n\n#===========================================================================\n# use the model to predict 'Survived' for the test data\n#===========================================================================\npredictions = classifier.predict(final_X_test)\n\n#===========================================================================\n# write out CSV submission file\n#===========================================================================\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, \n                       'Survived': predictions})\noutput.to_csv('submission.csv', index=False)","51113de3":"This is a 'starter' script which applies the [random forest classifier from scikit-learn](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestClassifier.html), to the Titanic data set. The purpose of this simple script is to serve as a basic starting framework from which you can launch your own feature cleaning, selection and engineering, parameter optimisation, etc. and progress beyond 78%.\n"}}