{"cell_type":{"ef251462":"code","871a639c":"code","081f4dfe":"code","35fe1d99":"code","71e7b30e":"code","aafa0a71":"code","fc9c74df":"code","7814863a":"code","f6cb95de":"code","d7659aea":"code","8ad79027":"markdown","387e6ab5":"markdown","6aa436a4":"markdown","feeaf462":"markdown","8b063364":"markdown","97bc981c":"markdown","a2ee911a":"markdown","bc7daaa7":"markdown","cdcef5c1":"markdown","e96f69cb":"markdown","79335003":"markdown","c10d00d6":"markdown","e40516eb":"markdown"},"source":{"ef251462":"import pandas as pd\n\ndf = pd.read_csv('..\/input\/wine-reviews\/winemag-data-130k-v2.csv')\ndf.drop(\"Unnamed: 0\", axis=1, inplace=True)\n\ndf.isna().sum()","871a639c":"import re\n\ndef extract_year(text):\n    try:\n        m =  re.search(r'\\b(19|20)\\d{2}\\b', text)\n        result = m.group(0) if m else 0\n    except IndexError:\n        result = 0\n        \n    return int(result)\n\ndf['millesime'] = df['title'].apply(lambda x : extract_year(x))","081f4dfe":"import matplotlib.pyplot as plt\n\nfig, axes = plt.subplots(1, 2, figsize=(17, 6))\nfig.suptitle('Distribution')\n\ndf['country'].value_counts().head(15).plot.bar(ax=axes[0]).set_title(\"1. Country\")\ndf['variety'].value_counts().head(15).plot.bar(ax=axes[1]).set_title(\"2. Variety\")\n\nfig.show()","35fe1d99":"import seaborn as sns\n\nfig, axes = plt.subplots(1, 2, figsize=(17, 6), sharey=True)\nfig.suptitle('Boxplots')\n\nsns.boxplot(ax=axes[0], x = df['points']).set_title(\"Notes\")\nsns.boxplot(ax=axes[1], x = df['price']).set_title(\"Prices\")\n\nfig.show()","71e7b30e":"import plotly.express as px\n\ntasters = df[[\"taster_name\", \"country\"]].groupby(by=['taster_name']).count()\ntasters.reset_index(inplace=True) \ntasters.sort_values(by=\"country\", ascending=False, inplace=True)\ntasters.rename(columns={\"taster_name\" : \"Name\", \"country\" : \"amount\"}, inplace=True)\n\n\nfig = px.histogram(tasters.head(10),\n                    x=\"amount\",\n                    y=\"Name\",\n                    width=900, \n                    height=500,\n                    title=\"Number of wines tasted by person\")\n\nfig.update_layout(margin=dict(\n        l=20,\n        r=20,\n        b=50,\n        t=50,\n        pad=10\n    ),\n    paper_bgcolor=\"darkgray\",\n)\n\nfig.update_xaxes(title=\"Wines tasted\")\n\nfig.show()","aafa0a71":"pip install geopy","fc9c74df":"pip install geocoder","7814863a":"from geopy.geocoders import Nominatim\nimport numpy as np\n\ndef get_gps_points(country):\n    try:\n        geolocator = Nominatim(user_agent=\"j\")\n        loc = geolocator.geocode(country)\n        return loc.latitude, loc.longitude\n    except:\n        return np.nan","f6cb95de":"df = df[df['millesime'] != 0]\ndf = df[[\"country\", \"points\", \"price\", \"province\", \"variety\", \"millesime\"]].dropna()\ndf[\"price\"] = df[\"price\"].apply(lambda x : int(x))\n\ndf_country = df[[\"country\", \"points\"]].groupby(by=\"country\").count()\ndf_country.sort_values(by=\"points\", ascending=False, inplace=True)\ndf_country.reset_index(inplace=True)\n\ndf_country[\"gps\"] = df_country[\"country\"].apply(lambda x : get_gps_points(x))\ndf_country[\"latitude\"] = df_country[\"gps\"].apply(lambda x : x[0])\ndf_country[\"longitude\"] = df_country[\"gps\"].apply(lambda x : x[1])\ndf_country.drop(\"gps\", axis=1, inplace=True)\n\ndf_country","d7659aea":"import folium\nfrom folium.plugins import MarkerCluster\n\nworld_wine_map= folium.Map(zoom_start=12)\nmarker_cluster = MarkerCluster().add_to(world_wine_map)\n\nfor i in range(len(df_country)):\n        latitude = df_country.iloc[i]['latitude']\n        longitude = df_country.iloc[i]['longitude']\n        radius = 5\n        popup_text = f\"{df_country.iloc[i]['country']} : {df_country.iloc[i]['points']}\"\n        folium.CircleMarker(location = [latitude, longitude], radius=radius, popup=popup_text, fill=True).add_to(marker_cluster)\n\nworld_wine_map","8ad79027":"### I want to extract the Vintage year from the \"title\" column, regex will do the job, if no date is found then 0 will be the value","387e6ab5":"#### NOTE : in order to install packages on Kaggle, you need to swtich on the \"Internet\" option on the right side bar of Kaggle, under settings, you need to verify your account in order to do that.","6aa436a4":"### Waooh, Roger Voss sure loves his wine","feeaf462":"### We need to install a couple of librairies (Geopy & Geocoder) in order to get the GPS coordinates for each country","8b063364":"### Let's explore the \"taster_name\" column, using plotly express","97bc981c":"## Map","a2ee911a":"### Alright, Pinot Noir and USA are on top of the charts, let's make a couple of boxplots for the Prices and Notes using Seaborn this time","bc7daaa7":"### I'm gonna work on a smaller sample of the DF, with only a few columns and no NaNs\n\n#### I group it by country and get the coordinates for each one of them, as well as the total of wines produced for each country","cdcef5c1":"### Importing the DataFrame, dropping the useless column, checking for NaNs","e96f69cb":"## Data Visualization ","79335003":"### Creating a function that will get the coordinates for each country","c10d00d6":"### Let's take a look at the wine distribution using Matplotlib","e40516eb":"### 3\/4 of the notes are within the same range (~ 86 to 91 points), some big outliers in the Prices"}}