{"cell_type":{"058d3566":"code","c017cd07":"code","53fa1eff":"code","8f9f673f":"code","7497d3d0":"code","cbc9afc9":"code","389435cc":"code","c633d360":"code","063d01c9":"code","c6cd70cd":"code","a3e13d31":"code","cb3e665b":"code","0ea428ac":"code","353cf47d":"code","d5169027":"code","b8d77fd4":"code","c877f90e":"code","dba33470":"code","dc9d6d75":"code","35754706":"code","f3640aee":"code","86298895":"code","29f9b4ff":"code","2fe24241":"code","29135ac9":"markdown","74775061":"markdown","51dc0f92":"markdown","d83cbb81":"markdown","2193036d":"markdown","8e5f471b":"markdown","076bccb5":"markdown","7e3d65e6":"markdown","996c8199":"markdown","47911ce3":"markdown","a7157b25":"markdown","a6f66b3e":"markdown","0b03b41f":"markdown","66c88735":"markdown","63ccdf12":"markdown","a762fce8":"markdown"},"source":{"058d3566":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c017cd07":"data=pd.read_csv('..\/input\/corona-virus-brazil\/brazil_covid19.csv')","53fa1eff":"data","8f9f673f":"from matplotlib import pyplot as plt","7497d3d0":"type (data)","cbc9afc9":"type (data.state)","389435cc":"plt.plot(data.state,data.suspects)\nplt.show()","c633d360":"plt.plot(data.state,data.deaths)\nplt.show()","063d01c9":"plt.plot(data.cases,data.deaths)\nplt.show()","c6cd70cd":"time=data.date","a3e13d31":"time","cb3e665b":"cases=data.cases","0ea428ac":"cases","353cf47d":"plt.plot(data.date,data.cases)\nplt.show()","d5169027":"data1=pd.Series((time))","b8d77fd4":"print (data1.agg(['count']))","c877f90e":"data2=pd.Series((cases))","dba33470":"print (data2.agg(['max','min','std','max']))","dc9d6d75":"deaths=data.deaths","35754706":"deaths","f3640aee":"deaths=data.deaths\ndeaths\nprint (deaths.agg(['max','min','std','max']))","86298895":"ax=plt.axes()\nax.set_xlabel('cases')\nax.set_ylabel('deaths')\nplt.plot(data.cases,data.deaths)\nplt.show()","29f9b4ff":"ax=plt.axes()\nax.set_xlabel('time')\nax.set_ylabel('deaths')\nplt.plot(data1,deaths)\nplt.show()","2fe24241":"deaths.plot(kind='pie')\n","29135ac9":"# ploting date vs cases","74775061":"# creating data1(time) to obtain total count ","51dc0f92":"# first import libaries numpy ,pandas ,os","d83cbb81":"# ploting deaths vs cases","2193036d":"next presenting some parametres for deaths","8e5f471b":"# ploting cases vs deaths ","076bccb5":"# second import matplotlib library to plot data","7e3d65e6":"# creating time variable","996c8199":"# presenting data type","47911ce3":"# creating data2(cases) to obtain total mamimum and minmum cases value","a7157b25":"# creating deaths variable","a6f66b3e":"# **then import data**","0b03b41f":"# creating cases variable","66c88735":"# ploting deaths vs time","63ccdf12":"# ploting state vs deaths ","a762fce8":"# ploting state vs suspects "}}