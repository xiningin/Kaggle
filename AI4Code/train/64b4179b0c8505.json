{"cell_type":{"099239af":"code","b6199253":"code","dad402fb":"code","9360e7ad":"code","189a3c3f":"code","a49563d8":"code","3c08bf23":"code","12e7c612":"code","db23e029":"code","b3601262":"code","8d491c8f":"code","a02944c9":"code","380128a8":"code","6118c260":"code","cbbf3074":"code","fc9043e0":"code","a6e79d60":"code","c271ae09":"code","f4f92281":"code","717d7743":"code","0155e7c6":"code","5ce57be2":"markdown","0e958958":"markdown","1e3ef4e0":"markdown","f250a34b":"markdown","c910868d":"markdown","11122414":"markdown","553f1c04":"markdown","0c87ec31":"markdown","15ca5d3e":"markdown","3f49eaf2":"markdown"},"source":{"099239af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b6199253":"data=pd.read_csv(\"..\/input\/2016.csv\")","dad402fb":"data=data.loc[:,\"Region\":\"Dystopia Residual\"]\ndata.drop([\"Happiness Score\",\"Happiness Rank\",\"Lower Confidence Interval\",\"Upper Confidence Interval\"],axis=1,inplace=True)","9360e7ad":"data.Region.value_counts()","189a3c3f":"f1=data[\"Region\"]==\"Sub-Saharan Africa\"\nf2=data[\"Region\"]==\"Western Europe\"\nf3=data[\"Region\"]==\"Latin America and Caribbean\"\ndata=data[f1 | f2 | f3]\ndata=data.loc[:,[\"Region\",\"Economy (GDP per Capita)\",\"Family\",\"Freedom\",\"Health (Life Expectancy)\"]]","a49563d8":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nsns.pairplot(data=data,hue=\"Region\",palette=\"dark\")\nplt.show()","3c08bf23":"df=data.drop([\"Region\"],axis=1)","12e7c612":"from sklearn.cluster import KMeans\n#finding k values\nwcss=[]\nfor i in range(1,15):\n    km=KMeans(n_clusters=i)\n    km.fit(df)\n    wcss.append(km.inertia_)\n#plot\nplt.plot(range(1,15),wcss,\"-o\")\nplt.grid(True)\nplt.xlabel(\"k values\")\nplt.ylabel(\"wcss values\")\nplt.show()","db23e029":"#find clusters\ndf2=df.copy()\nkm2=KMeans(n_clusters=2)\nclusters=km2.fit_predict(df)\ndf2[\"clusters\"]=clusters\n\ndf3=df.copy()\nkm3=KMeans(n_clusters=3)\nclusters=km3.fit_predict(df)\ndf3[\"clusters\"]=clusters\n\ndf4=df.copy()\nkm4=KMeans(n_clusters=4)\nclusters=km4.fit_predict(df)\ndf4[\"clusters\"]=clusters\n\n#plot\nplt.subplot(1,2,1)\nplt.scatter(df2[\"Economy (GDP per Capita)\"][df2.clusters==0],\n            df2[\"Health (Life Expectancy)\"][df2.clusters==0],color=\"b\")\n\nplt.scatter(df2[\"Economy (GDP per Capita)\"][df2.clusters==1],\n            df2[\"Health (Life Expectancy)\"][df2.clusters==1],color=\"r\")\nplt.xlabel(\"K=2 chart\")\n\nplt.subplot(1,2,2)\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Western Europe\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Western Europe\"],color=\"r\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Latin America and Caribbean\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Latin America and Caribbean\"],color=\"b\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Sub-Saharan Africa\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Sub-Saharan Africa\"],color=\"g\")\nplt.xlabel(\"Real chart\")\nplt.show()\n\nplt.subplot(1,2,1)\nplt.scatter(df2[\"Economy (GDP per Capita)\"][df2.clusters==0],\n            df2[\"Health (Life Expectancy)\"][df2.clusters==0],color=\"b\")\n\nplt.scatter(df3[\"Economy (GDP per Capita)\"][df3.clusters==1],\n            df3[\"Health (Life Expectancy)\"][df3.clusters==1],color=\"g\")\n\nplt.scatter(df3[\"Economy (GDP per Capita)\"][df3.clusters==2],\n            df3[\"Health (Life Expectancy)\"][df3.clusters==2],color=\"r\")\nplt.xlabel(\"K=3 chart\")\n\nplt.subplot(1,2,2)\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Western Europe\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Western Europe\"],color=\"r\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Latin America and Caribbean\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Latin America and Caribbean\"],color=\"b\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Sub-Saharan Africa\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Sub-Saharan Africa\"],color=\"g\")\nplt.xlabel(\"Real chart\")\nplt.show()\n\nplt.subplot(1,2,1)\nplt.scatter(df2[\"Economy (GDP per Capita)\"][df2.clusters==0],\n            df2[\"Health (Life Expectancy)\"][df2.clusters==0],color=\"b\")\n\nplt.scatter(df3[\"Economy (GDP per Capita)\"][df3.clusters==1],\n            df3[\"Health (Life Expectancy)\"][df3.clusters==1],color=\"g\")\n\nplt.scatter(df3[\"Economy (GDP per Capita)\"][df3.clusters==2],\n            df3[\"Health (Life Expectancy)\"][df3.clusters==2],color=\"r\")\n\nplt.scatter(df4[\"Economy (GDP per Capita)\"][df4.clusters==3],\n            df4[\"Health (Life Expectancy)\"][df4.clusters==3],color=\"orange\")\nplt.xlabel(\"K=4 chart\")\n\nplt.subplot(1,2,2)\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Western Europe\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Western Europe\"],color=\"r\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Latin America and Caribbean\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Latin America and Caribbean\"],color=\"b\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Sub-Saharan Africa\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Sub-Saharan Africa\"],color=\"g\")\nplt.xlabel(\"Real chart\")\nplt.show()\n","b3601262":"#Hierarchical Clustering\nfrom scipy.cluster.hierarchy import linkage,dendrogram\nmerg=linkage(df,method=\"ward\")\ndendrogram(merg,leaf_rotation=90)\nplt.xlabel(\"data points\")\nplt.ylabel(\"euclidean dist.\")\nplt.show()\n","8d491c8f":"from sklearn.cluster import AgglomerativeClustering\n\nhie_cl2=AgglomerativeClustering(n_clusters=2,affinity=\"euclidean\",linkage=\"ward\")\ncluster2=hie_cl2.fit_predict(df)\ndf_hie2=df.copy()\ndf_hie2[\"label\"]=cluster2\n\nhie_cl3=AgglomerativeClustering(n_clusters=3,affinity=\"euclidean\",linkage=\"ward\")\ncluster3=hie_cl3.fit_predict(df)\ndf_hie3=df.copy()\ndf_hie3[\"label\"]=cluster3","a02944c9":"#plot\nplt.subplot(1,2,1)\nplt.scatter(df_hie2[\"Economy (GDP per Capita)\"][df_hie2.label==0],\n            df_hie2[\"Health (Life Expectancy)\"][df_hie2.label==0],color=\"b\")\n\nplt.scatter(df_hie2[\"Economy (GDP per Capita)\"][df_hie2.label==1],\n            df_hie2[\"Health (Life Expectancy)\"][df_hie2.label==1],color=\"r\")\nplt.xlabel(\"K=2 chart\")\n\nplt.subplot(1,2,2)\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Western Europe\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Western Europe\"],color=\"g\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Latin America and Caribbean\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Latin America and Caribbean\"],color=\"r\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Sub-Saharan Africa\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Sub-Saharan Africa\"],color=\"b\")\nplt.xlabel(\"Real chart\")\nplt.show()\n\nplt.subplot(1,2,1)\nplt.scatter(df_hie3[\"Economy (GDP per Capita)\"][df_hie3.label==0],\n            df_hie3[\"Health (Life Expectancy)\"][df_hie3.label==0],color=\"b\")\n\nplt.scatter(df_hie3[\"Economy (GDP per Capita)\"][df_hie3.label==1],\n            df_hie3[\"Health (Life Expectancy)\"][df_hie3.label==1],color=\"g\")\n\nplt.scatter(df_hie3[\"Economy (GDP per Capita)\"][df_hie3.label==2],\n            df_hie3[\"Health (Life Expectancy)\"][df_hie3.label==2],color=\"r\")\nplt.xlabel(\"K=3 chart\")\n\nplt.subplot(1,2,2)\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Western Europe\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Western Europe\"],color=\"g\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Latin America and Caribbean\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Latin America and Caribbean\"],color=\"r\")\n\nplt.scatter(data[\"Economy (GDP per Capita)\"][data.Region==\"Sub-Saharan Africa\"],\n            data[\"Health (Life Expectancy)\"][data.Region==\"Sub-Saharan Africa\"],color=\"b\")\nplt.xlabel(\"Real chart\")\nplt.show()\n\n","380128a8":"#Standardization\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nscalar = StandardScaler()\nkmeans = KMeans(n_clusters = 3)\npipe = make_pipeline(scalar,kmeans)\npipe.fit(df)\nlabels = pipe.predict(df)\ndfS = pd.DataFrame({'labels':labels,\"Region\":data['Region']})\nct = pd.crosstab(dfS['labels'],dfS['Region'])\nct","6118c260":"data2=pd.read_csv(\"..\/input\/2016.csv\")","cbbf3074":"#elimination some columns\ndata2.drop([\"Country\",\"Happiness Rank\",\"Happiness Score\",\n            \"Lower Confidence Interval\",\"Upper Confidence Interval\"],axis=1,inplace=True)","fc9043e0":"#preparation of data\nf1=data2[\"Region\"]==\"Sub-Saharan Africa\"\nf2=data2[\"Region\"]==\"Western Europe\"\nf3=data2[\"Region\"]==\"Latin America and Caribbean\"\ndata2=data2[f1 | f2 | f3]\ndata2.Region=[0 if i==\"Western Europe\"\n              else 1 if i==\"Latin America and Caribbean\"\n              else 2 for i in data2.Region]\ny=data2.Region.values\nx_data=data2.drop([\"Region\"],axis=1)\nx=(x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))","a6e79d60":"#train-test\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)\n\n#logistic regression\nfrom sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(x_train,y_train)\nprint(\"test accuracy: \",lr.score(x_test,y_test))\n","c271ae09":"#knn model\nfrom sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=3)\nknn.fit(x_train,y_train)\nprediction=knn.predict(x_test)\nprint(\"3nn score: \",knn.score(x_test,y_test))\n\n#let's check best k value for accuracy with for loop\nscore_knn=[]\nfor i in range(1,15):\n    knn2=KNeighborsClassifier(n_neighbors=i)\n    knn2.fit(x_train,y_train)\n    score_knn.append(knn2.score(x_test,y_test))\n#plot\nplt.plot(range(1,15),score_knn)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()","f4f92281":"##**We have found best accuracy values between 1-15**","717d7743":"##Random Forest Class.\nfrom sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier(n_estimators=10,random_state=42)\nrf.fit(x_train,y_train)\nprint(\"score: \",rf.score(x_test,y_test))","0155e7c6":"#Confusion matrix\ny_pred=rf.predict(x_test)\ny_true=y_test\n\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_true,y_pred)\n#cm visualization\n#f,ax=plt.subplots(figsize=(5,5))\n#sns.heatmap(cm,annot=True,linewidths=0.5,linecolor='r',fmt=\".0f\",ax=ax)\n#plt.show()","5ce57be2":"**As we can see on the chart of Health- Economy, our features are seperated without any doubt. So we can use that chart**","0e958958":"> **It is clearn that when we use K=3, we find the best similarity and also the best accuracy**","1e3ef4e0":"We will use 3 Region to make a K-Means method","f250a34b":"**Let's check our Regions, we can seperate our datas**","c910868d":"**It could be read from the second chart that we have the best similarity with 3 value of k.**","11122414":"**Label-0 includes 8 error,\nLabel-1 includes 1 errors,\nLabel-2 includes 4 errors which is our lowest accuracy**","553f1c04":"As a result, we used K-means and Hierarchical methods to find correct K values with highest accuracy. After these methods we found K=3.","0c87ec31":"** ########################################################################### **","15ca5d3e":"**Let's check k=2 and k=3 values**","3f49eaf2":"**The correct k value is 2- 3 or 4? We should try all of them in order to be sure.**"}}