{"cell_type":{"cff33a22":"code","b5216df6":"code","d23bf923":"code","b1b8fa96":"code","47112adf":"code","0324c23b":"code","07bdee9e":"code","5435541b":"code","ed409697":"code","6b1558de":"code","4928f55f":"code","8d99cc78":"code","2baaf4a1":"code","158d9f39":"code","e39476ea":"code","ee9f0699":"code","feb9ceca":"markdown","7160272d":"markdown","7566b214":"markdown","417a05b5":"markdown","30adbf34":"markdown","f83136b1":"markdown","a1b832dc":"markdown","34ee4682":"markdown","442e1955":"markdown"},"source":{"cff33a22":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Allow several prints in one cell\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b5216df6":"file = '\/kaggle\/input\/fifa-20-complete-player-dataset\/players_20.csv'\ndf = pd.read_csv(file)\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\ndf.head()","d23bf923":"df.shape\ndf.describe().T","b1b8fa96":"print(\"There are {} players in this dataset\".format(df.sofifa_id.nunique()))\nprint('Age:')\nprint(\"  The average age is {:.2f}, \\n  half of the the players are younger than {}, the oldest player is {}, the youngest is {}, \\n  the age span between 1st and 3rd quartiles is {} years\".format(\n    df.age.mean(), df.age.median(), df.age.max(), df.age.min(), df.age.quantile(0.75) - df.age.quantile(.25)))\nprint('Height\/Weight:')\nprint(\"  The average height is {:.2f} cm ({} feet {:.2f} in); the average weight is {:.2f} kg ({:.2f} lbs)\".format(df.height_cm.mean(), int(df.height_cm.mean()*0.0328), df.height_cm.mean()*0.394 % 12, df.weight_kg.mean(), df.weight_kg.mean()*2.2))","47112adf":"f,a = plt.subplots(1,2,figsize=(18,6))\nf.subplots_adjust(wspace = .4)\nsns.violinplot(df.age, inner = 'box', orient='v', ax=a[0])\na[0].set_title('Violin Plot', fontsize=15, fontweight='bold')\na[0].set_xlabel('')\n\n# swarmplot is expensive\nsns.swarmplot(y = df.age.sample(frac = 0.02), ax=a[1])\na[1].set_title('Swarm Plot', fontsize=15, fontweight='bold')\na[1].set_xlabel('');","0324c23b":"cols = ['height_cm','weight_kg','overall','potential','value_eur','wage_eur']\nf,a = plt.subplots(3,2,figsize=(18,20))\nf.subplots_adjust(wspace = .4, hspace = .3)\nfor i,col in enumerate(cols):\n    sns.distplot(df[col], ax=a[i\/\/2][i%2])\n    a[i\/\/2][i%2].set_title(col, fontsize=15, fontweight='bold')\n    a[i\/\/2][i%2].set_xlabel('')\nplt.show();","07bdee9e":"cols = ['nationality','club','preferred_foot','work_rate','body_type','real_face']\n\nf,a = plt.subplots(3,2,figsize=(18,20))\nf.subplots_adjust(wspace = .4, hspace = .3)\nfor i,col in enumerate(cols):\n    sns.barplot(df[col].value_counts()[:20], df[col].value_counts().index[:20], ax=a[i\/\/2][i%2])\n    a[i\/\/2][i%2].set_title(col, fontsize=15, fontweight='bold')\n    a[i\/\/2][i%2].set_xlabel('')\nplt.show();","5435541b":"print(\"There are over {} English soccer players; it is a little surprising that China has {} players. In contrast, India has {} players and Russia has {} players\".format(\ndf[df.nationality == 'England'].sofifa_id.size, df[df.nationality == 'China PR'].sofifa_id.size, df[df.nationality == 'India'].sofifa_id.size, df[df.nationality == 'Russia'].sofifa_id.size))\nprint(\"There seems a cap for how many players a club can have. Need to re-investigate.\")\nprint(\"There are {} right-footed players and {} left-footed players; the ratio is {:.2f}\".format(df[df.preferred_foot == 'Right'].sofifa_id.size, df[df.preferred_foot == 'Left'].sofifa_id.size, df[df.preferred_foot == 'Right'].sofifa_id.size\/df[df.preferred_foot == 'Left'].sofifa_id.size))\nprint(\"Most players act Medium\/Medium work rate\")\nprint(\"Most players has Normal body type; seems someone has a 'PLAYER_BODY_TYPE_25' body type, sounds like a factory series number.\\n  He is {}, a {} years old {} player, severing {} club, wearing number {}\".format(\ndf[df.body_type == 'PLAYER_BODY_TYPE_25'].long_name.iloc[0], int(df[df.body_type == 'PLAYER_BODY_TYPE_25'].age), df[df.body_type == 'PLAYER_BODY_TYPE_25'].nationality.iloc[0], df[df.body_type == 'PLAYER_BODY_TYPE_25'].club.iloc[0], int(df[df.body_type == 'PLAYER_BODY_TYPE_25'].team_jersey_number)))\nprint(\"Most players do not have 'real_face' attribute\")","ed409697":"print(df.club.nunique())\n# df.club.value_counts()\n\nf,a = plt.subplots(1,1,figsize=(18,5))\n# f.subplots_adjust(wspace = .4, hspace = .3)\nsns.distplot(df.club.value_counts())\na.set_title(\"Distibution of Club sizes\", fontsize=15, fontweight='bold')\na.set_xlabel('')\nplt.show();","6b1558de":"from plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport pycountry\npy.init_notebook_mode(connected=True)\nimport folium \nfrom folium import plugins\n\ncountries = df['nationality'].value_counts()\n\nworld_data = pd.DataFrame({\n   'name':list(countries.index.tolist()[:5]),\n    'lat':[52.35,51.16, 40.46, 46.23, -38.42,],\n   'lon':[-1.17,10.45, -3.75, 2.21, -63.62,],\n   'Players':list(countries.iloc[:5]),\n})\n\nworld_data.name.tolist()\n# create map and display it\nworld_map = folium.Map(location=[10, -20], zoom_start=2.4,tiles='Stamen Toner')\n\nfor lat, lon, value, name in zip(world_data['lat'], world_data['lon'], world_data['Players'], world_data['name']):\n    folium.CircleMarker([lat, lon],\n                        radius=value*0.01,\n                        popup = ('<strong>Country<\/strong>: ' + str(name).capitalize() + '<br>'\n                                '<strong>Confirmed Cases on 30th Jan 2020<\/strong>: ' + str(value) + '<br>'),\n                        color='red',\n                        \n                        fill_color='red',\n                        fill_opacity=0.7 ).add_to(world_map)\nworld_map","4928f55f":"# 2.1 distribution of players, age, wage, potential per country, per club, per position\n#     2.2 relationship between age and potential, age and overall\n    \n    \nprint(\"There are {} countries in the dataset\".format(df.nationality.nunique()))\ntop30 = df.nationality.value_counts()[:30]\ntop30_df = df[df['nationality'].isin(top30.index.tolist())]\n# top30_df.head()\n# sns.boxplot(top30_df.age, top30_df.nationality);\n\ncols = ['age','wage_eur','potential','overall']\n\nf,a = plt.subplots(2,2,figsize=(18,20))\nf.subplots_adjust(wspace = .4, hspace = .3)\nfor i,col in enumerate(cols):\n    sns.boxplot(top30_df[col], top30_df.nationality, ax=a[i\/\/2][i%2])\n    a[i\/\/2][i%2].set_title(col + \" per Country\", fontsize=15, fontweight='bold')\n    a[i\/\/2][i%2].set_xlabel('')\nplt.show();","8d99cc78":"print(\"There are {} clubs in the dataset\".format(df.club.nunique()))\nrandom30 = df.club.value_counts().sample(30)\n# print(df.club.value_counts().value_counts())\nrandom30_df = df[df['club'].isin(random30.index.tolist())]\n\ncols = ['age','wage_eur','potential','overall']\n\nf,a = plt.subplots(2,2,figsize=(18,20))\nf.subplots_adjust(wspace = .4, hspace = .3)\nfor i,col in enumerate(cols):\n    sns.boxplot(random30_df[col], random30_df.club, ax=a[i\/\/2][i%2])\n    a[i\/\/2][i%2].set_title(col + \" per Club\", fontsize=15, fontweight='bold')\n    a[i\/\/2][i%2].set_xlabel('')\nplt.show();","2baaf4a1":"f,a = plt.subplots(2,1,figsize=(18,20))\nf.subplots_adjust(wspace = .4, hspace = .3)\nsns.boxplot(df.age, df.potential, orient='v', ax=a[0])\na[0].set_title(\"Potential per Age\", fontsize=15, fontweight='bold')\na[0].set_xlabel('')\n\nsns.boxplot(df.age, df.overall, orient='v', ax=a[1])\na[1].set_title(\"Overall per Age\", fontsize=15, fontweight='bold')\na[1].set_xlabel('')\nplt.show();\n# sns.boxplot(df.potential, df.age, orient='h');\n\nf,a = plt.subplots(1,1,figsize=(18,5))\n# f.subplots_adjust(wspace = .4, hspace = .3)\nsns.distplot(df.age)\na.set_title(\"Distibution of Age\", fontsize=15, fontweight='bold')\na.set_xlabel('')\nplt.show();","158d9f39":"f,a = plt.subplots(1,1,figsize=(18,5))\n# f.subplots_adjust(wspace = .4, hspace = .3)\nsns.distplot(df.age)\na.set_title(\"Distibution of Age\", fontsize=15, fontweight='bold')\na.set_xlabel('')\nplt.show();","e39476ea":"df.isnull().sum()[df.isnull().sum() != 0]","ee9f0699":"pivoted = pd.pivot_table(df, values='overall', columns='nationality', index='age')\npivoted.plot(figsize=(16,10))","feb9ceca":"Per country","7160272d":"Per Club","7566b214":"Age vs. performance","417a05b5":"there is over 100 features and here is a list of questions we can try to answer with the data:\n1. univariate\n    1.1 what is the distribution of the age, height, weight, nationality, club, overall, potential, wage, preferred\/weak foot etc.\n2. bivariate\n    2.1 distribution of players, age, wage, potential per country, per club, per position\n    2.2 relationship between age and potential, age and overall\n3. multivariate\n    3.1 model and predict potential, overall, wage based on other variables\n    \nAs suggested by the dataset provider we can try to put up a pesudo team and see how much it will cost; or we can propose a budget and suggest the team with highest overall or potential.","30adbf34":"Youger players have higher Potentials but lower Overall; The Overall increase with age as players accumulate experiences and credits; This is a statistic perspective, may not apply to individuals; eg. there is a peak in both potential and overall at age 41, that does not mean players achieve a sudden performance boost at age 41. It is more reasonable to think that if a player is still playing over 40 years old, he must be really good at the game.","f83136b1":"I really need to lose some weight","a1b832dc":"seems club has a cap of 33 players; and we need at least 1 player to form a club.","34ee4682":"Predicting can be made via regression or NN deeplearning. Save them for the next kernel.","442e1955":"like most 'high risk high return' business, the income is severely skewed"}}