{"cell_type":{"9b273abe":"code","0f071db3":"code","26e5c141":"code","85676ec2":"code","0c0d8210":"code","cb8dce73":"code","940e88b5":"code","06888f81":"code","74c89d67":"code","b9c17ce0":"code","bcd3d75c":"code","8831cd91":"code","e9822928":"code","56a916c3":"code","a782af01":"code","a70cf499":"code","eda41413":"code","b92e7a6e":"code","a7a47e34":"markdown","ad4d9c79":"markdown","482f3298":"markdown","359fdcab":"markdown","5884825e":"markdown","c4477e8d":"markdown","85bce123":"markdown","782213e9":"markdown","142c03e9":"markdown"},"source":{"9b273abe":"import numpy as np\n%matplotlib inline\nfrom matplotlib import pyplot","0f071db3":"## Helper script for plotting  gridlines and vectors\n## Source : https:\/\/github.com\/engineersCode\/EngComp4_landlinear\nfrom urllib.request import urlretrieve\nURL = 'https:\/\/go.gwu.edu\/engcomp4plot'  \nurlretrieve(URL, 'plot_helper.py')","26e5c141":"## Import functions plot_vector, plot_linear_transformation, plot_linear_transformations from the helper script\nfrom plot_helper import *","85676ec2":"A = np.array([[3, 2],\n              [-2, 1]])","0c0d8210":"i_hat = np.array([1, 0])\nj_hat = np.array([0, 1])","cb8dce73":"A @ i_hat","940e88b5":"A @ j_hat","06888f81":"plot_linear_transformation(A)","74c89d67":"M = np.array([[1,2], [2,1]])\nplot_linear_transformation(M)","b9c17ce0":"N = np.array([[1,2],[-3,2]])\nplot_linear_transformation(N)","bcd3d75c":"rotation = np.array([[0,-1], [1,0]])\nplot_linear_transformation(rotation)","8831cd91":"shear = np.array([[1,1], [0,1]])\nplot_linear_transformation(shear)","e9822928":"scale = np.array([[2,0], [0,0.5]])\nplot_linear_transformation(scale)","56a916c3":"plot_linear_transformation(shear@rotation)","a782af01":"plot_linear_transformations(rotation, shear)","a70cf499":"plot_linear_transformations(shear, rotation)","eda41413":"M = np.array([[1,2], [2,1]])\nM_inv = np.linalg.inv(M)\nplot_linear_transformations(M, M_inv)","b92e7a6e":"D = np.array([[-2,-1], [1,0.5]])\nplot_linear_transformation(D)","a7a47e34":"## Matrices are objects that operate on vectors\n\nThis wonderful video by 3 Blue 1 Brown expplains this concept through beautiful visualizations - [YouTube link](https:\/\/youtu.be\/kYB8IZa5AuE)\n\nLet's start with the below example by considering a 2x2 matrix A.","ad4d9c79":"## Applications in Image Processing and Computer Vision","482f3298":"Degenerate","359fdcab":"How A transforms j_hat?","5884825e":"**PS:** If you find this concept of matrix multiplication exciting, I would urge you to check out the YouTube playlist, [Essence of Linear Algebra](https:\/\/www.youtube.com\/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab), from 3Blue1Brown. There is also a free MOOC available from the George Washington University [here](https:\/\/openedx.seas.gwu.edu\/courses\/course-v1:GW+EngComp4+2019\/about) and paid one on Coursera available [here](https:\/\/www.coursera.org\/learn\/linear-algebra-machine-learning) ","c4477e8d":"We also have our basis vectors in 2-D coordinate system as usual.","85bce123":" How the matrix A transforms the 2-D space?\n \n Here's a screenshot of the above 3B1B video that shows how we can understand this 2-D transformation by simply looking at the columns of the matrix A. ","782213e9":"![ss](https:\/\/github.com\/pritesh-shrivastava\/pritesh-shrivastava.github.io\/blob\/master\/assets\/images\/Screenshot_3b1b.png)","142c03e9":"How A transforms i_hat ?"}}