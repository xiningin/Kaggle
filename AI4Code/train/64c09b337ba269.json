{"cell_type":{"00063a2b":"code","4a516448":"code","644648ad":"code","c863ccc0":"code","3652dc28":"code","8574d818":"code","a8597a4b":"code","6b816451":"code","10e60941":"code","852f3e74":"code","f73698e3":"code","58517e18":"code","a2c1b088":"code","07c40fc0":"code","1ef78166":"code","132e2352":"code","c9fed249":"code","008c09cc":"code","e195976b":"code","9477482c":"code","747e1611":"code","335e1abf":"code","f24afc81":"code","8342fda2":"code","b09e60ff":"markdown","f388b4ad":"markdown","babfb99b":"markdown","ca7482be":"markdown","427c2dd2":"markdown","433fa1aa":"markdown","6dc40c60":"markdown","87c0c322":"markdown"},"source":{"00063a2b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4a516448":"d=pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","644648ad":"d.info()","c863ccc0":"d.head()","3652dc28":"#describing the data\nd.describe()","8574d818":"!pip install pycaret","a8597a4b":"# Importing anomaly detection module.\nfrom pycaret.anomaly import *","6b816451":"# Initializing the setup function used for pre-processing.\nsetup_anomaly_data = setup(data=d)","10e60941":"# Instantiating Isolation Forest model.\niforest = create_model('iforest')","852f3e74":"# Plotting the data using Isolation Forest model.\nplot_model(iforest)","f73698e3":"# Generating the predictions using Isolation Forest trained model.\niforest_predictions = predict_model(iforest, data = d)\nprint(iforest_predictions)","58517e18":"# Checking anomaly rows. Label = 1 is the anomaly data.\niforest_anomaly_rows = iforest_predictions[iforest_predictions['Label'] == 1]\nprint(iforest_anomaly_rows.head())","a2c1b088":"# Checking the number of anomaly rows returned by Isolaton Forest.\nprint(iforest_anomaly_rows.shape) ","07c40fc0":"print(iforest_anomaly_rows.head())","1ef78166":"# Instantiating KNN model.\nknn = create_model('knn')","132e2352":"# Plotting the data using KNN model.\nplot_model(knn)","c9fed249":"# Generating the predictions using KNN trained model.\nknn_predictions = predict_model(knn, data = d)\n","008c09cc":"print(knn_predictions)","e195976b":"knn_anomaly_rows = knn_predictions[knn_predictions['Label'] == 1]","9477482c":"# Checking the number of anomaly rows returned by KNN model.\nknn_anomaly_rows.head()","747e1611":"knn_anomaly_rows.shape ","335e1abf":"# Instantiating Cluster model.\ncluster = create_model('cluster')\n\n# Plotting the data using Cluster model.\nplot_model(cluster)","f24afc81":"# Generating the predictions using Cluster trained model.\ncluster_predictions = predict_model(cluster, data = d)\nprint(cluster_predictions)\n# Checking cluster anomaly rows. Predictions with Label = 1 are anomalies.\ncluster_anomaly_rows = cluster_predictions[cluster_predictions['Label'] == 1]","8342fda2":"# Checking the number of anomaly rows returned by Cluster model\nprint(cluster_anomaly_rows.head())\ncluster_anomaly_rows.shape","b09e60ff":"**Checking anomaly rows. Label = 1 is the anomaly data**.","f388b4ad":"# Clustering Implementation","babfb99b":"**Isolation Forest Implementation**","ca7482be":"# Automated Anomaly Detection Using PyCaret","427c2dd2":"**Checking KNN anomaly rows. Predictions with Label = 1 are anomalies.**","433fa1aa":"**Anomaly detection (aka outlier analysis) is a step in data mining that identifies data points, events, and\/or observations that deviate from a dataset's normal behavior. Anomalous data can indicate critical incidents, such as a technical glitch, or potential opportunities, for instance a change in consumer behavior.**","6dc40c60":"# K Nearest Neighbors (KNN) Implementation","87c0c322":"# What is Anomaly Detection?"}}