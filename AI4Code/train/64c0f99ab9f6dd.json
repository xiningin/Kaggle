{"cell_type":{"dce3ac9c":"code","be4c7d7c":"code","7f48a9e4":"code","3825d728":"code","3e0e475e":"code","b8172bd1":"code","9f058c7c":"code","4d8f1aa0":"code","8be99bd8":"code","c5f41a66":"code","eab80b49":"code","b5df01ec":"code","445cad67":"markdown"},"source":{"dce3ac9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(filename, os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be4c7d7c":"os.chdir('\/kaggle\/input\/yelpdata\/Data\/') ","7f48a9e4":"review = pd.read_csv(\"yelp_review.csv\")\ncheckin = pd.read_csv(\"yelp_checkin.csv\")\nbusiness_hours = pd.read_csv(\"yelp_business_hours.csv\")\nuser = pd.read_csv(\"yelp_user.csv\")\nbusiness=pd.read_csv(\"yelp_business.csv\")\nbusiness_attributes = pd.read_csv(\"yelp_business_attributes.csv\")\ntip=pd.read_csv(\"yelp_tip.csv\")\n","3825d728":"review.head(10)","3e0e475e":"user.head(10)","b8172bd1":"user.sort_values(by=\"fans\", ascending=False)","9f058c7c":"user['elite'].value_counts()","4d8f1aa0":"import matplotlib.pyplot as plt\n%matplotlib inline","8be99bd8":"plt.scatter(user['fans'], user['review_count'])","c5f41a66":"#let's first seperate users those who are elite and non-elite\nelite = user[user['elite'] != 'None']\nother_users = user[user['elite'] == 'None']","eab80b49":"#find the number of reviews per fans \nother_users['review_count_per_fans'] = other_users['review_count']\/(other_users['fans'])\nelite['review_count_per_fans'] = elite['review_count']\/(elite['fans'])","b5df01ec":"#find the average number of reviews per fan count for elite and non-elite group \nplt.scatter( elite['fans'], elite['review_count_per_fans'])\nplt.xlabel( \"Number of fans\" )\nplt.ylabel(\"Reviews per fans\")","445cad67":"There are a few outliers in the user data, where there is a user who has a lot of fans ( >7000) but has shared very few number of reviews. \nAlso,there are a few outliers who have followers <2000 but have posted more than 4000 reviews. COuld they possibily be fake reviewers? Can we find more about these users?\n"}}