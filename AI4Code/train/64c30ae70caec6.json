{"cell_type":{"4289fb01":"code","d2470802":"code","d464579f":"code","28a6c3b9":"code","b7fde6a1":"code","2cd0428d":"code","5b5fbda8":"code","f35109ad":"code","d65960ae":"code","2a6a516f":"code","99a5d724":"code","cf5cb85a":"code","6cd3a654":"code","0879b1e8":"code","2a27e21c":"code","8c9d00d5":"code","c4468a44":"code","3e70789b":"code","f8d548db":"code","15fbba7e":"code","61fd0843":"code","073de68b":"code","2d4ab017":"code","06fd3f52":"code","8bba1406":"code","48b251dc":"markdown","b3d240e9":"markdown"},"source":{"4289fb01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d2470802":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport sklearn as sns","d464579f":"data = pd.read_csv(\"\/kaggle\/input\/social-network-ads\/Social_Network_Ads.csv\")","28a6c3b9":"data.head()","b7fde6a1":"# Here User ID is not suitable to predict the results,so we are ignore this coloumn.\n\ndata = data[['Gender','Age','EstimatedSalary','Purchased']]","2cd0428d":"print(data.head())","5b5fbda8":"data.isnull().sum()","f35109ad":"data.plot()","d65960ae":"import seaborn as sns\nsns.set(style=\"ticks\")\n\nsns.pairplot(data, hue=\"Gender\")","2a6a516f":"# Here We Check The Total No. Who Purchased or Not Purchased\nsns.countplot(x=\"Purchased\",data=data)","99a5d724":"# As We See here mostly female's like to buy product then male's\nsns.countplot(x=\"Purchased\",hue=\"Gender\",data=data)","cf5cb85a":"# Now Lets Convert The Variables into dummy variabels for our ML model.\n# If the Value of 1 in Male Then i.e male if value is 1 in Female then i.e Female \npd.get_dummies(data['Gender'])","6cd3a654":"sex = pd.get_dummies(data['Gender'],drop_first=True)\nsex.head()","0879b1e8":"data_p = pd.concat([data,sex],axis=1)","2a27e21c":"data_p.head()","8c9d00d5":"# Now There is a Gender Column which we do neet further because we have converted into dummies and concat the male column in data set\ndata_p = data_p.drop(['Gender'],axis=1)","c4468a44":"data_p.head()","3e70789b":"X = data_p[['Age','EstimatedSalary','Male']].values\ny = data_p['Purchased'].values","f8d548db":"# Now Train our Data\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,random_state=0,test_size=0.3)","15fbba7e":"# Preprocessing\nfrom sklearn.preprocessing import StandardScaler\ns = StandardScaler()\nX_train = s.fit_transform(X_train)\nX_test = s.fit_transform(X_test)","61fd0843":"from sklearn.linear_model import LogisticRegression","073de68b":"log = LogisticRegression()\nlog.fit(X_train,y_train)\npredict = log.predict(X_test)","2d4ab017":"from sklearn.metrics import classification_report,confusion_matrix\nprint(confusion_matrix(y_test,predict))","06fd3f52":"print(classification_report(y_test,predict))","8bba1406":"plt.plot(y_test,predict)\nplt.show()","48b251dc":"# Now Lets See The Accuracy Of our model","b3d240e9":"# Now Lets Split The Data"}}