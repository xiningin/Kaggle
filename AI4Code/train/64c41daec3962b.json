{"cell_type":{"df3eb7ad":"code","94f288e2":"code","16bde818":"code","49159b24":"code","4c65bb0c":"code","d75889ab":"code","7f289e85":"code","ce809e34":"code","c0681cc5":"code","b2ca24e5":"code","c8bc6ee7":"code","b05baef7":"code","e2ecb15d":"code","2af22ffb":"code","349271d1":"code","599567a1":"code","03dadef7":"code","559bf728":"code","d88e3223":"code","a4f53808":"code","6c2dcb2f":"code","e8b0ae7d":"code","be2fa3a6":"code","6c100c41":"code","8786192e":"code","2c048508":"code","31ec0379":"code","7474dbcc":"code","e6aed3e3":"code","e9985123":"code","bd980785":"code","4c645327":"code","d07976f2":"code","2b3518cb":"code","1fc2e5a0":"code","60bc6476":"code","6169b89a":"markdown","36e645c7":"markdown","7bc39830":"markdown","8729d10e":"markdown","f3d0dd23":"markdown"},"source":{"df3eb7ad":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os","94f288e2":"df=pd.read_csv('..\/input\/entrepreneurial-competency-in-university-students\/data.csv')","16bde818":"df.head(10)","49159b24":"df.columns","4c65bb0c":"df.info()","d75889ab":"df.shape","7f289e85":"df.describe()","ce809e34":"df.isnull()","c0681cc5":"df.drop(['Influenced','City','MentalDisorder', 'KeyTraits','ReasonsForLack','Gender','EducationSector','IndividualProject'],\n          axis=1,inplace=True)\n","b2ca24e5":"df.tail(10)","c8bc6ee7":"x = df['Age']\nplt.figure(figsize=(10,8))\nax = sns.countplot(x,color='#00ffff')\nax.set_xlabel(xlabel = 'Age of Students', fontsize = 16)\nax.set_title(label = 'Distribution of Age of Students', fontsize = 20)\nplt.show()\n","b05baef7":"x = df['DesireToTakeInitiative']\nplt.figure(figsize=(10,8))\nax = sns.countplot(x,color='#00ffff')\nax.set_xlabel(xlabel = 'DesireToTakeInitiative', fontsize = 16)\nax.set_title(label = 'DesireToTakeInitiative', fontsize = 20)\nplt.show()","e2ecb15d":"sns.heatmap(df.corr(),annot=True);","2af22ffb":"sns.pairplot(data=df)\nplt.show()\n","349271d1":"sns.set_style(\"ticks\", {\"xtick.major.size\": 8, \"ytick.major.size\": 8})\ndf['Age'].hist(bins=30, color = \"red\", edgecolor='black', alpha=0.65, lw=1.5)\nplt.xlabel('Perseverance')\n","599567a1":"sns.countplot(data=df, x='Age')","03dadef7":"sns.countplot(data=df, x='SelfReliance')","559bf728":"sns.jointplot(x = 'Age', y = 'Competitiveness', data = df, kind = 'kde', color = \"red\", alpha = 0.65)","d88e3223":"sns.pairplot(df, hue = 'Age', palette = 'cool_r')","a4f53808":"# get correlation matrix\ncorr = df.corr()\nfig, ax = plt.subplots()\n# create heatmap\nim = ax.imshow(corr.values)\n\n# set labels\nax.set_xticks(np.arange(len(corr.columns)))\nax.set_yticks(np.arange(len(corr.columns)))\nax.set_xticklabels(corr.columns)\nax.set_yticklabels(corr.columns)\n\n# Rotate the tick labels and set their alignment.\nplt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",\n         rotation_mode=\"anchor\")\n","6c2dcb2f":"# As you can see there is no labels in data\nplt.scatter(df['Age'],df['Perseverance'])\nplt.xlabel('Age')\nplt.ylabel('Perseverance')\nplt.show()\n","e8b0ae7d":"df.hist(edgecolor='black', linewidth=1.2)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()\n","be2fa3a6":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Age',y='Perseverance',data=df)\nplt.subplot(2,2,2)\nsns.violinplot(x='Age',y='DesireToTakeInitiative',data=df)\nplt.subplot(2,2,3)\nsns.violinplot(x='Age',y='Competitiveness',data=df)\nplt.subplot(2,2,4)\nsns.violinplot(x='Age',y='SelfReliance',data=df)\n","6c100c41":"#draws  heatmap with input as the correlation matrix calculted by(iris.corr())\nplt.figure(figsize=(10,15)) \nsns.heatmap(df.corr(),annot=True,cmap='cubehelix_r') \nplt.show()\n","8786192e":"from sklearn.model_selection import train_test_split","2c048508":"train, test = train_test_split(df, test_size = 0.3)# in this our main data is split into train and test\n# the attribute test_size=0.3 splits the data into 70% and 30% ratio. train=70% and test=30%\nprint(train.shape)\nprint(test.shape)\n","31ec0379":"train_X = train[['Age','Age','Perseverance','Perseverance']]# taking the training data features\ntrain_y=train.y# output of our training data\ntest_X= test[['Age','Age','Perseverance','Perseverance']] # taking test data features\ntest_y =test.y   #output value of test data\n","7474dbcc":"test_y","e6aed3e3":"train_X","e9985123":"train_y","bd980785":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\ngrid = {'n_neighbors': np.arange(1,50)}\nknn = KNeighborsClassifier()\nknn_cv = GridSearchCV(knn, grid, cv=3) # GridSearchCV\nknn_cv.fit(train_X,train_y)# Fit\n\n# Print hyperparameter\n","4c645327":"print(\"Tuned hyperparameter k: {}\".format(knn_cv.best_params_)) \nprint(\"Best score: {}\".format(knn_cv.best_score_))\n","d07976f2":"from sklearn.linear_model import LogisticRegression\n# grid search cross validation with 2 hyperparameter\n# 1. hyperparameter is C:logistic regression regularization parameter\n# 2. penalty l1 or l2\n# Hyperparameter grid\nparam_grid = {'C': np.logspace(-3, 3, 7), 'penalty': ['l1', 'l2']}\nx_train, x_test, y_train, y_test = train_test_split(train_X,train_y,test_size = 0.3,random_state = 12)\nlogreg = LogisticRegression()\nlogreg_cv = GridSearchCV(logreg,param_grid,cv=3)\nlogreg_cv.fit(x_train,y_train)\n\n# Print the optimal parameters and best score\nprint(\"Tuned hyperparameters : {}\".format(logreg_cv.best_params_))\nprint(\"Best Accuracy: {}\".format(logreg_cv.best_score_))\n\n","2b3518cb":"# SVM, pre-process and pipeline\nfrom sklearn.svm import SVC\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nsteps = [('scalar', StandardScaler()),\n         ('SVM', SVC())]\npipeline = Pipeline(steps)\nparameters = {'SVM__C':[1, 10, 100],\n              'SVM__gamma':[0.1, 0.01]}\nx_train, x_test, y_train, y_test = train_test_split(train_X,train_y,test_size=0.2,random_state = 1)\ncv = GridSearchCV(pipeline,param_grid=parameters,cv=3)\ncv.fit(x_train,y_train)\n\ny_pred = cv.predict(x_test)\n\nprint(\"Accuracy: {}\".format(cv.score(x_test, y_test)))\nprint(\"Tuned Model Parameters: {}\".format(cv.best_params_))\n","1fc2e5a0":"# As you can see there is no labels in data\nplt.scatter(df['Age'],df['Perseverance'])\nplt.xlabel('pelvic_radius')\nplt.ylabel('degree_spondylolisthesis')\nplt.show()\n","60bc6476":"df.hist(edgecolor='black', linewidth=1.2)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()\n","6169b89a":"# How To Be A Successful Businessman \n1. Face reality, there is no work \u2013 life2 \u2013 balance!\n2. Eagles fly alone.\n3. It\u2019s bloody hard, regardless of what happens to you in life.\n4. There\u2019s only one way to grow as an individual.\n5.  Burn your ships.\n6. You can accomplish anything with sacrifice.","36e645c7":"![image](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTKbtFaCY2RxamhiK68ufZQW-t5G2KyZ1khVA&usqp=CAU)","7bc39830":"# Using visualization ","8729d10e":"# Call libraries","f3d0dd23":"# Read Data "}}