{"cell_type":{"ba2c9fa0":"code","a27d7468":"code","64f3d529":"code","8cae2e7e":"code","581ddb6f":"code","d1540be9":"code","5b425931":"markdown"},"source":{"ba2c9fa0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a27d7468":"import pandas as pd\nimport numpy as np\nimport multiprocessing\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\nimport gc\nfrom time import time\nimport datetime\nfrom tqdm import tqdm_notebook\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold, TimeSeriesSplit\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn import metrics\nimport lightgbm as lgb\n\nwarnings.simplefilter('ignore')\nsns.set()\n%matplotlib inline","64f3d529":"\nfiles = ['..\/input\/ieee-fraud-detection\/test_identity.csv', \n         '..\/input\/ieee-fraud-detection\/test_transaction.csv',\n         '..\/input\/ieee-fraud-detection\/train_identity.csv',\n         '..\/input\/ieee-fraud-detection\/train_transaction.csv',\n         '..\/input\/ieee-fraud-detection\/sample_submission.csv']","8cae2e7e":"%%time\ndef load_data(file):\n    return pd.read_csv(file)\n\nwith multiprocessing.Pool() as pool:\n    test_id, test_tr, train_id, train_tr, sub = pool.map(load_data, files)","581ddb6f":"train = pd.merge(train_tr, train_id, on='TransactionID', how='left')\ntest = pd.merge(test_tr, test_id, on='TransactionID', how='left')\n\ndel test_id, test_tr, train_id, train_tr\ngc.collect()","d1540be9":"\nlgb_param = {\n    'objective': 'binary',\n    \"metric\": 'auc',\n    \"verbosity\": -1,\n    'n_estimators': 10,\n    'n_jobs': -1,\n    'seed': 2019\n}\n\nfor i in range(32):\n    cols = ['V'+str(i) for i in range(i*10+1, 10*(i+1)+1)]\n    print(cols)\n    a = train[cols+['isFraud']]\n    X = a.iloc[:, :-1]\n    y = a.iloc[:, -1]\n    split = int(0.8*len(X))\n    train_x, train_y, test_x, test_y = X.iloc[:split], y[:split], X.iloc[split:], y[split:]\n    model = lgb.LGBMClassifier(**lgb_param)\n    model.fit(train_x, train_y)\n    pred = model.predict_proba(test_x)[:,1]\n    print(metrics.roc_auc_score(test_y, pred))\n    t = pd.DataFrame({'name':a.columns[:-1], 'score':model.feature_importances_})\n    t = t.sort_values(['score'], ascending=False)\n    print(t)\n    print('='*20)\n#     break","5b425931":"thanks to\n* https:\/\/www.kaggle.com\/nroman\/lgb-single-model-lb-0-9419\n* https:\/\/www.kaggle.com\/artgor\/eda-and-models\n* https:\/\/www.kaggle.com\/plasticgrammer\/ieee-cis-fraud-detection-eda\n* https:\/\/www.kaggle.com\/kyakovlev\/ieee-lgbm-with-groupkfold-cv"}}