{"cell_type":{"20036fda":"code","a75f3ef3":"code","2d528079":"code","67ba2225":"code","c96b20de":"code","e5e6b032":"code","3aa96873":"code","cd11f961":"code","31cd6fac":"markdown","12d7a5f6":"markdown","0143433a":"markdown","d84c4502":"markdown","09b404e7":"markdown","d41980d5":"markdown"},"source":{"20036fda":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport math","a75f3ef3":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        file = os.path.join(dirname, filename)\n        \nfile = pd.read_json(file, lines=True)","2d528079":"xs = []\nys = []\n\nfor i in range(len(file)):\n    xs.append(file.content[i])\n    ys.append(int(file.annotation[i]['label'][0]))","67ba2225":"Tokeniser = tf.keras.preprocessing.text.Tokenizer()\nTokeniser.fit_on_texts(xs)\nxs = Tokeniser.texts_to_sequences(xs)\n\nxs = tf.keras.preprocessing.sequence.pad_sequences(xs)\n\nxs = np.array(xs)\nys = np.array(ys)\n\n\nprint(np.shape(xs))\nprint(np.shape(ys))","c96b20de":"model = tf.keras.Sequential([\n    tf.keras.layers.Embedding(len(Tokeniser.word_index)+1, 255, input_length=342),\n    tf.keras.layers.Conv1D(32, 4),\n    tf.keras.layers.Conv1D(16, 8),\n    tf.keras.layers.Conv1D(8, 16),\n    tf.keras.layers.Conv1D(4, 32),\n    tf.keras.layers.Conv1D(2, 64),\n    tf.keras.layers.Conv1D(1, 128),\n    tf.keras.layers.Bidirectional(tf.keras.layers.GRU(100, return_sequences=True)),\n    tf.keras.layers.Bidirectional(tf.keras.layers.GRU(100, return_sequences=True)),\n    tf.keras.layers.Bidirectional(tf.keras.layers.GRU(100)),\n    tf.keras.layers.Dropout(0.3),\n    tf.keras.layers.Dense(512, 'relu'),\n    tf.keras.layers.Dense(1, 'sigmoid')\n])\n\nadam = tf.keras.optimizers.Adam()\nmodel.compile(loss='binary_crossentropy', optimizer=adam, metrics=['accuracy'])\nmodel.summary()","e5e6b032":"model.fit(xs, ys, epochs=3, verbose=1, batch_size=64)","3aa96873":"def Predict(seed_text):\n    seed_text = Tokeniser.texts_to_sequences(seed_text)\n    seed_text = tf.keras.preprocessing.sequence.pad_sequences(seed_text, 342)\n    prediction = model(seed_text)\n    print(str(prediction))","cd11f961":"Predict([\"Lick my balls\"])","31cd6fac":"**get dataset**","12d7a5f6":"**manage imports**","0143433a":"**seperate xs and ys**","d84c4502":"**Model**","09b404e7":"**Preprocessing**","d41980d5":"**Train**"}}