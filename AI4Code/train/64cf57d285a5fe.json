{"cell_type":{"1b337df1":"code","9725c622":"code","91c86dea":"code","df1f2c77":"code","b7ef0876":"code","f1e2c199":"code","54175856":"code","fa5a2f29":"code","81f714c1":"code","4ed9cf86":"code","a9983029":"code","b797c245":"code","6e90c684":"code","3531f929":"markdown","9e97c01d":"markdown","0c7ce86e":"markdown","c546f91e":"markdown","85fb9d65":"markdown","6fda7841":"markdown","9447f5a6":"markdown","82383ea3":"markdown","d0d0183f":"markdown","693ae04e":"markdown"},"source":{"1b337df1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas import DataFrame, Series\n\n# These are the plotting modules adn libraries we'll use:\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats\n\n# Command so that plots appear in the iPython Notebook\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9725c622":"#read in dataset\ndf = pd.read_csv('\/kaggle\/input\/college-football-team-stats-2019\/CFB2019.csv',sep=',')\n","91c86dea":"#separate Team, Conference, Wins, Losses and calculate Win Percentage, Average Rank(Off Rank & Def Rank), and yard diff per play\n\ndf[['wins','losses']]=df['Win-Loss'].str.split(\"-\",expand=True)\ndf['wins']=pd.to_numeric(df['wins'])\ndf1=pd.DataFrame(df.Team.str.split(\"(\",1).tolist(), columns = ['Tm','Conf'])\ndf.insert(1,'Tm',df1['Tm'])\ndf2=pd.DataFrame(df1.Conf.str.split(\")\",1).tolist(), columns = ['Conference','x'])\ndf.insert(2,'Conference',df2['Conference'])\ndf.drop('Team',axis=1,inplace=True)\ndf['winpct']=df['wins'] \/ df['Games']\ndf['Conference1']=df[\"Conference\"].replace({\"FL\":\"ACC\",\"OH\":\"MAC\"})\ndf.drop('Conference',axis=1,inplace=True)\ndf.insert(2,'Conference',df['Conference1'])\ndf['Avg Rank']=(df['Off Rank']+df['Def Rank'])\/2\ndf['Yard Diff Per Play']=df['Off Yards\/Play'] - df['Yards\/Play Allowed']","df1f2c77":"#Regression graph for Offensive Rank and Defensive Rank Vs Win Pct with correlation\n\n#Results show a stronger correlation between Defensive Rank and Win Pct\n\ng=sns.jointplot('winpct','Off Rank',df,kind='reg')\ng.annotate(stats.pearsonr)\nplt.show()\n","b7ef0876":"g=sns.jointplot('winpct','Def Rank',df,kind='reg')\ng.annotate(stats.pearsonr)\nplt.show()","f1e2c199":"filter=df['Conference']== 'ACC'\nfilter2=df['Conference']== 'SEC'\nfilter3=df['Conference']== 'Big 12'\nfilter4=df['Conference']== 'Big Ten' \nfilter5=df['Conference']== 'Pac-12'\ndfn=df.where(filter | filter2 | filter3 | filter4 | filter5)\nsns.boxplot(dfn['Avg Rank'], dfn['Conference'], whis=np.inf)\nplt.title('Avg Rank(Off & Def) for Power 5 Conferences')\nplt.show()\ndf[['Tm','Off Rank','Def Rank','Avg Rank']].sort_values('Avg Rank')[0:10]","54175856":"# Bottom 10 in Avg Rank\ndf[['Tm','Off Rank','Def Rank','Avg Rank']].sort_values('Avg Rank')[-10:]","fa5a2f29":"#Rushing yards vs Passing yards per game\nsns.jointplot(df['Pass Yards Per Game'],df[\"Rushing Yards per Game\"],kind='hex')\n","81f714c1":"# How did Rushing and Passing yards affect Win Pct\nforpair=df[['Pass Yards Per Game','Rushing Yards per Game','winpct']]\nsns.pairplot(forpair)","4ed9cf86":"# Noticable correlation between turnovers and win percentage\ng=sns.jointplot('Turnover Rank','winpct',df,kind='reg')\ng.annotate(stats.pearsonr)\nplt.show()\n","a9983029":"# Ohio State and Clemson Conference Disparity \n\nacc1=df['Conference']== 'ACC'\nacc=df.where(acc1).dropna()\n\nacc[['Tm','Win-Loss','Yard Diff Per Play', 'Turnover Margin','Off Rank','Def Rank', 'Avg Rank']].sort_values('Yard Diff Per Play', ascending=False)","b797c245":"big1=df['Conference']== 'Big Ten'\nbigten=df.where(big1).dropna()\n\nbigten[['Tm','Win-Loss','Yard Diff Per Play','Turnover Margin','Off Rank','Def Rank','Avg Rank']].sort_values('Yard Diff Per Play', ascending=False)","6e90c684":"sec1=df['Conference']== 'SEC'\nsec=df.where(sec1).dropna()\n\nsec[['Tm','Win-Loss','Yard Diff Per Play','Turnover Margin','Off Rank','Def Rank','Avg Rank']].sort_values('Yard Diff Per Play', ascending=False)","3531f929":"**Rushing yards vs Passing yards per game**","9e97c01d":"**LSU and Alabama did not have this same benefit with each other and UGA in the SEC**","0c7ce86e":"Regression graph for Offensive Rank and Defensive Rank Vs Win Pct with correlation\n\nResults show a stronger difference in Win Percentage and Defensive Rank...R^2 = .4225","c546f91e":"**Turnover Rank and Win Percentage have a noticable correlation**","85fb9d65":"**Box Plot Average Rank for Power 5 Conferences and Top 10**","6fda7841":"**Impact of Rushing and Passing Yards a game vs Win Percentage**","9447f5a6":"**Bottom 10 in Average Rank**","82383ea3":"**Highlighting the disparity of Clemson and Ohio State and the rest of their conferences**\n\n* Yard diff per play is the Yards gained per play minus the yards allowed per play","d0d0183f":"**Win Percentage vs. Offensive Rank**","693ae04e":"**Win Percentage vs Defensive Rank**"}}