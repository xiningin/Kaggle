{"cell_type":{"61c53950":"code","7077c93f":"code","6b521319":"code","5bd615dc":"code","1c32dbc8":"code","ef3ba03f":"code","5dfc9097":"code","b513b47d":"code","5d6f7870":"code","de9f516d":"code","a038b216":"code","0ca641c2":"code","d5dc61ac":"code","63f912e4":"code","c310f82b":"code","729926b4":"code","23c18a67":"code","6b650980":"code","37194bcb":"code","d40fa186":"code","dfa60e11":"code","21c342a3":"code","b0143551":"code","87cee059":"code","9b900564":"code","2ffb5b6e":"code","5eb57827":"code","d9e8d9e6":"code","fce57f64":"code","ce52e742":"code","1ad989ea":"code","acde1029":"code","eb261b57":"code","404238fb":"code","ff5ae1fa":"code","520c8461":"code","e72d2b5b":"code","42ac01b9":"code","639d6c2b":"code","d0416ed3":"code","3419cb2c":"code","63f3b04d":"code","982f1587":"code","78c1b480":"code","4b4a8696":"code","5336e5ae":"code","66c5f64d":"code","11d577e1":"code","2272e729":"code","d196a933":"code","38fd2ec2":"code","4bb32c5d":"code","026fdbca":"code","564784a2":"code","f9fabd0f":"code","9cd68ea8":"code","be182805":"code","1bc7be29":"code","65ab1a20":"code","9f2ec1b5":"markdown","5d465a14":"markdown","9ebe3ede":"markdown","2da5a7c6":"markdown","c8f83a68":"markdown","27c412da":"markdown","abd754f9":"markdown","cac93ae1":"markdown","4808d408":"markdown"},"source":{"61c53950":"# Do the below in kaggle\n#!pip install plotly==4.4.1\n#!pip install chart_studio\n#!pip install xlrd # for reading_excel files with extensions .xlsx into a pandas dataframe","7077c93f":"import pandas as pd\nimport numpy as np\n\n\ndef excel_to_df(excel_sheet):\n df = pd.read_excel(excel_sheet)\n df.dropna(how='all', inplace=True)\n\n index_PL = int(df.loc[df['Data provided by SimFin']=='Profit & Loss statement'].index[0])\n index_CF = int(df.loc[df['Data provided by SimFin']=='Cash Flow statement'].index[0])\n index_BS = int(df.loc[df['Data provided by SimFin']=='Balance Sheet'].index[0])\n\n df_PL = df.iloc[index_PL:index_BS-1, 1:]\n df_PL.dropna(how='all', inplace=True)\n df_PL.columns = df_PL.iloc[0]\n df_PL = df_PL[1:]\n df_PL.set_index(\"in million USD\", inplace=True)\n (df_PL.fillna(0, inplace=True))\n \n\n df_BS = df.iloc[index_BS-1:index_CF-2, 1:]\n df_BS.dropna(how='all', inplace=True)\n df_BS.columns = df_BS.iloc[0]\n df_BS = df_BS[1:]\n df_BS.set_index(\"in million USD\", inplace=True)\n df_BS.fillna(0, inplace=True)\n \n\n df_CF = df.iloc[index_CF-2:, 1:]\n df_CF.dropna(how='all', inplace=True)\n df_CF.columns = df_CF.iloc[0]\n df_CF = df_CF[1:]\n df_CF.set_index(\"in million USD\", inplace=True)\n df_CF.fillna(0, inplace=True)\n \n df_CF = df_CF.T\n df_BS = df_BS.T\n df_PL = df_PL.T\n    \n return df, df_PL, df_BS, df_CF\n\ndef combine_regexes(regexes):\n return \"(\" + \")|(\".join(regexes) + \")\"","6b521319":"# Add 'tk_library.py' file given by your tutor, as a utility script under 'File'\n# Look for it under usr\/bin on the right drawer\n\n# import excel_to_df function\nimport os\n#import tk_library_py\n#from tk_library_py import excel_to_df","5bd615dc":"# Show the files and their pathnames\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1c32dbc8":"# Add your simfin-data.xlsx using the '+ Add Data' top right button\n_, DKS_PL, DKS_BS, DKS_CF = excel_to_df(\"\/kaggle\/input\/dickssporting\/SimFin-data (1).xlsx\")","ef3ba03f":"DKS_BS","5dfc9097":"del(DKS_BS[\"Assets\"])\n","b513b47d":"DKS_BS","5d6f7870":"DKS_BS[\"_Total Current Assets\"] = DKS_BS[\"Cash, Cash Equivalents & Short Term Investments\"] + DKS_BS[\"Inventories\"] + DKS_BS[\"Other Short Term Assets\"]","de9f516d":"DKS_BS[[\"_Total Current Assets\", \"Total Current Assets\"]]","a038b216":"DKS_BS[\"_NonCurrent Assets\"] = DKS_BS[\"Property, Plant & Equipment, Net\"] + DKS_BS[\"Long Term Investments & Receivables\"] + DKS_BS[\"Other Long Term Assets\"]","0ca641c2":"DKS_BS[\"_Total Assets\"] = DKS_BS[\"_NonCurrent Assets\"] + DKS_BS[\"_Total Current Assets\"] ","d5dc61ac":"DKS_BS[\"_Total Liabilities\"] = DKS_BS[\"Total Current Liabilities\"] + DKS_BS[\"Total Noncurrent Liabilities\"]","63f912e4":"DKS_BS[[\"_Total Liabilities\", \"Total Liabilities\"]]","c310f82b":"%matplotlib inline\nDKS_BS[[\"Total Assets\", \"Total Liabilities\", \"Total Equity\"]].plot()","729926b4":"good_stuff = '''\nCash, Cash Equivalents & Short Term Investments\nAccounts & Notes Receivable\nInventories\nOther Short Term Assets\n'''\n\nasset_columns = [ x for x in good_stuff.strip().split(\"\\n\") ]\n","23c18a67":"asset_columns","6b650980":"DKS_BS[ asset_columns ].plot()","37194bcb":"!pip install chart_studio","d40fa186":"import chart_studio\n# chart_studio.tools.set_credentials_file(username='your_username', api_key='your_apikey') get this from \n# https:\/\/chart-studio.plot.ly\/feed\/#\/\n\n# Un-remark the code below and add your own your_username and own your_apikey\nchart_studio.tools.set_credentials_file(username='Jiaxin_Sun', api_key='w6SNLY3TSZyQaCa9dMrz')","dfa60e11":"import chart_studio.plotly as py\nimport plotly.graph_objs as go\n#from tk_library_py import combine_regexes\n","21c342a3":"\nassets = go.Bar(\n    x=DKS_BS.index,\n    y=DKS_BS[\"Total Assets\"],\n    name='Assets'\n)\nliabilities = go.Bar(\n    x=DKS_BS.index,\n    y=DKS_BS[\"Total Liabilities\"],\n    name='Liabilities'\n)\n\nshareholder_equity = go.Scatter(\n    x=DKS_BS.index,\n    y=DKS_BS[\"Total Equity\"],\n    name='Equity'\n)\n\ndata = [assets, liabilities, shareholder_equity]\nlayout = go.Layout(\n    barmode='stack'\n)\n\nfig_bs = go.Figure(data=data, layout=layout)\nfig_bs.show()\n","b0143551":"asset_data = []\ncolumns = '''\nCash, Cash Equivalents & Short Term Investments\nAccounts & Notes Receivable\nInventories\nOther Short Term Assets\nProperty, Plant & Equipment, Net\nLong Term Investments & Receivables\nOther Long Term Assets\n'''\n\n\nfor col in columns.strip().split(\"\\n\"):\n    asset_bar = go.Bar(\n        x=DKS_BS.index,\n        y=DKS_BS[ col ],\n        name=col\n    )    \n    asset_data.append(asset_bar)\n    \nlayout_assets = go.Layout(\n    barmode='stack'\n)\n\nfig_bs_assets = go.Figure(data=asset_data, layout=layout_assets)\nfig_bs.show()","87cee059":"liability_data = []\ncolumns = '''\nPayables & Accruals\nShort Term Debt\nOther Short Term Liabilities\nLong Term Debt\nOther Long Term Liabilities\n'''\n\n\nfor col in columns.strip().split(\"\\n\"):\n    liability_bar = go.Bar(\n        x=DKS_BS.index,\n        y=DKS_BS[ col ],\n        name=col\n    )    \n    liability_data.append(liability_bar)\n    \nlayout_liabilitys = go.Layout(\n    barmode='stack'\n)\n\nfig_bs_liabilitys = go.Figure(data=liability_data, layout=layout_liabilitys)\nfig_bs.show()","9b900564":"DKS_PL[[\"Revenue\"]].plot()","2ffb5b6e":"DKS_BS[\"working capital\"] = DKS_BS[\"Total Current Assets\"] - DKS_BS[\"Total Current Liabilities\"]","5eb57827":"DKS_BS[[\"working capital\"]].plot()","d9e8d9e6":"DKS_BS[[\"Accounts & Notes Receivable\", \"Payables & Accruals\"]].plot()","fce57f64":"# Using Chart Studio in Plotly \n\nPR_data = []\ncolumns = '''\nAccounts & Notes Receivable\nPayables & Accruals\n'''\n\nfor col in columns.strip().split(\"\\n\"):\n    PR_Scatter = go.Scatter(\n        x=DKS_BS.index,\n        y=DKS_BS[ col ],\n        name=col\n    )    \n    PR_data.append(PR_Scatter)\n    \nlayout_PR = go.Layout(\n    barmode='stack'\n)\n\nfig_bs_PR = go.Figure(data=PR_data, layout=layout_PR)\nfig_bs.show()","ce52e742":"DKS_BS[\"Inventories\"].plot()","1ad989ea":"DKS_BS[ [\"Property, Plant & Equipment, Net\", \"Long Term Investments & Receivables\", \"Other Long Term Assets\"] ].plot()","acde1029":"DKS_BS\n","eb261b57":"# Using Plotly\n\nAAA_data = []\ncolumns = '''\nProperty, Plant & Equipment, Net\nLong Term Investments & Receivables\nOther Long Term Assets\n'''\n\n\nfor col in columns.strip().split(\"\\n\"):\n    AAA_bar = go.Bar(\n        x=DKS_BS.index,\n        y=DKS_BS[ col ],\n        name=col\n    )    \n    AAA_data.append(AAA_bar)\n    \nlayout_AAA = go.Layout(\n    barmode='stack'\n)\n\nfig_bs_AAA = go.Figure(data=AAA_data, layout=layout_AAA)\nfig_bs.show()","404238fb":"equity_columns = '''\nShare Capital & Additional Paid-In Capital\nTreasury Stock\nRetained Earnings\nOther Equity\nEquity Before Minority Interest\n'''\n\nequity_columns = [ x for x in equity_columns.strip().split(\"\\n\")]\n","ff5ae1fa":"equity_columns","520c8461":"DKS_BS[ equity_columns ].plot()","e72d2b5b":"# Using Plotly\n\nequity_data = []\ncolumns = '''\nShare Capital & Additional Paid-In Capital\nTreasury Stock\nRetained Earnings\nOther Equity\nEquity Before Minority Interest\n'''\n\n\nfor col in columns.strip().split(\"\\n\"):\n    equity_Scatter = go.Scatter(\n        x=DKS_BS.index,\n        y=DKS_BS[ col ],\n        name=col\n    )    \n    equity_data.append(equity_Scatter)\n    \nlayout_equity = go.Layout(\n    barmode='stack'\n)\n\nfig_bs_equity = go.Figure(data=equity_data, layout=layout_equity)\nfig_bs.show()","42ac01b9":"DKS_BS[\"book value\"] = DKS_BS[\"Total Assets\"] - DKS_BS[\"Total Liabilities\"]","639d6c2b":"DKS_BS[\"book value\"].plot()\nDKS_BS[[\"book value\"]]","d0416ed3":"DKS_BS[\"current ratio\"] = DKS_BS[\"Total Current Assets\"] \/ DKS_BS[\"Total Current Liabilities\"]","3419cb2c":"DKS_BS[\"current ratio\"].plot()","63f3b04d":"#Calculate 1.\tPrice-to-Earnings Growth Ratio (PEG forward)  \n#using this formula \u2013 PEG = Price-to-Earnings Ratio\/Earnings-Growth-Rate\n#https:\/\/www.investopedia.com\/ask\/answers\/012715\/what-considered-good-peg-price-earnings-growth-ratio.asp\n\nPE_RATIO = 14.07 # (use past 5 years average PE ratio)FROM Ycharts WEBSITE: https:\/\/ycharts.com\/companies\/DKS\/pe_ratio\n\n# FROM YAHOO WEBSITE: https:\/\/finance.yahoo.com\/quote\/DKS\/analysis?p=DKS\nGROWTH_RATE = 0.066 \nPEG_ratio = PE_RATIO \/ (GROWTH_RATE*100)\n\nprint(\"DICKS SPORTING Corp's PEG Ratio is\", PEG_ratio)","982f1587":"DKS_PL\nDKS_CF","78c1b480":"#Additional Calculation 1 - CAGR\n#Step 1 - EPS \n#EPS=(Net Income-Dividend Paid) \/ Common Shares Outstanding\nCommon_Shares_Outstanding = 91246261 #From SIMFIN Website:https:\/\/simfin.com\/data\/companies\/179423\nNet_Income=DKS_PL[\"Net Income Available to Common Shareholders\"]\nEPS = (Net_Income \/ Common_Shares_Outstanding)*1000000\nEPS","4b4a8696":"#Additional Calculation - CAGR\n#Step 1.1 - EPS Annual Compounded Growth Rate\n#EPS Annual Compounded Growth Rate = (FV\/PV)^(1\/n) -1\nFV = 3.505503\nPV = 1.483447\nn = 9\nCAGR = ((FV\/PV)**(1\/n)) - 1\nCAGR","5336e5ae":"#Additional Calculation 2 - Estimate EPS 10 Years from now\n#FV = PV * (1+g)^n\nPV = 3.505503\ng = 0.10026573922468351\nn = 10\nEstimate_EPS = PV * (1+g)**n\nEstimate_EPS","66c5f64d":"#Additional Calculation 3 - Current Target Buy Price\n#Step 1.1-Estimate stock price 10 years from now\n#Current_Target_Buy_Price = (Estimate_EPS * Avg_PE_Ratio)\/(1+Discount_Rate)^10\nEstimate_EPS = 9.114361322919072\nAvg_PE_Ratio = 12.02 #From SIMFIN Website:https:\/\/simfin.com\/data\/companies\/179423\nDiscount_Rate = 0.1050 #This is the industry average WACC from https:\/\/finbox.com\/NYSE:DKS\/models\/wacc\nCurrent_Target_Buy_Price = (Estimate_EPS * Avg_PE_Ratio)\/(1+Discount_Rate)**10\nCurrent_Target_Buy_Price","11d577e1":"#Since the orginal excel sheet don't have \"interest expense\",\"Fix cost\" I found a more detailed financial report in SIMFIN.\n_2, DKS_PL2, DKS_BS2, DKS_CF2 = excel_to_df(\"\/kaggle\/input\/more-detailed-data-for-dks\/SimFin-data (2).xlsx\")","2272e729":"##Additional Calculation 4.1 - Marginal of Safety \n#Margin_of_Safety = (Net Sales - Break_Even_Point)\/Net Sales\n  #Break_Even_Point = FC\/Contribution_Margin\n  #Contribution_Margin = (Net_Sales - VC)\/Net Sales = Gross_Margin \/ Net Sales\n\nDKS_PL2[\"Fix_Cost\"] = DKS_PL2[\"Selling, general and administrative expenses\"] + DKS_PL2[\"Business Combination, Integration Related Costs\"] + DKS_PL2[\"Pre-opening expenses\"]\nDKS_PL2[\"Variable_Cost\"] = DKS_PL2[\"Cost of goods sold, including occupancy and distribution costs\"]\nContribution_Margin = DKS_PL2[\"Gross Profit\"]\/DKS_PL2[\"Net sales\"]\nBreak_Even_Point = DKS_PL2[\"Fix_Cost\"]\/Contribution_Margin\nMargin_of_Safety = (DKS_PL2[\"Net sales\"]-Break_Even_Point)\/DKS_PL2[\"Net sales\"]\n#I will choose the average margin of safety to be the marginal of safety\nMargin_of_Safety.mean()","d196a933":"#Additional Calculation 4.2 - Target Buy Price (add margin of safety - 23% off the target buy price)\n#Target_Buy_Price = Current_Target_Buy_Price - (Current_Target_Buy_Price * 0.23)\nCurrent_Target_Buy_Price = 40.365276236482494\nTarget_Buy_Price = Current_Target_Buy_Price - (Current_Target_Buy_Price * 0.23)\nTarget_Buy_Price","38fd2ec2":"Margin_of_Safety","4bb32c5d":"Margin_of_Safety.plot()","026fdbca":"#Additional Calculation 5 - Debt to Equity Ratio\n#DE_Ratio = Total Liability \/  Total Equity\nDE_Ratio=DKS_BS[\"_Total Liabilities\"]\/ DKS_BS[\"Total Equity\"]\nDE_Ratio\n","564784a2":"DKS_BS[\"D\/E\"]=DE_Ratio#In order to drew a plot picture of \"Interest_Coverage_Ratio\", now I will add Interest_Coverage_Ratio into the dataset\nDKS_BS[\"D\/E\"].plot()","f9fabd0f":"DKS_PL2","9cd68ea8":"#Additional Calculation 6 - Interest Coverage Ratio\n#Interest_Coverage_Ratio = EBIT \/ Interest Expense\nInterest_Coverage_Ratio=DKS_PL2[\"Income from operations\"]\/DKS_PL2[\"Interest expense\"]\nInterest_Coverage_Ratio\n","be182805":"DKS_PL2[\"ICR\"]=Interest_Coverage_Ratio#In order to drew a plot picture of \"Interest_Coverage_Ratio\", now I will add Interest_Coverage_Ratio into the dataset","1bc7be29":"ICR_columns = '''\nIncome from operations\nInterest expense\nICR\n'''\nICR_columns = [ x for x in ICR_columns.strip().split(\"\\n\")]\nDKS_PL2[ ICR_columns ].plot()","65ab1a20":"#End of Value Investing Stock Analysis Template","9f2ec1b5":"Additional Calculations","5d465a14":"Sales Potential - according to the trend of revenue to seethe sales potential","9ebe3ede":"# Balance Sheet Analysis\n\n## Assets\n\n![title](images\/ale-finance.png)\n","2da5a7c6":"* # Book Value, aka \"Owner's Equity\"\n\nBV = Total Assets - Intangible assets - Liabilities - Preferred Stock Value\n","c8f83a68":"## Let's use plotly instead\n\nIf you haven't done so on your system, run the command below in jupyter notebook or in console\n\n    !pip install chart_studio","27c412da":"## Working Capital = Net Asset Value = Current Assets - Current Liabilities\n\n![title](images\/checking.jpg)\n\nNet Asset value = Current Assets - Current Liabilities - Long Term Liaibility","abd754f9":"# Read simfin-data.xls into a pandas dataframe","cac93ae1":"# Current Ratio\n\ncurrent ratio = current asset \/ current liabilties","4808d408":"# Balance Sheet & Cash Flow Analysis\n## Value Investing Stock Analysis with Python\n\nSource: https:\/\/github.com\/taewookim\/YouTube\n\n### Topics Covered\n- Basic Balance Sheet Analysis\n- Looking for Trends \n- Introduction to ratios\n- Plotly Graphing"}}