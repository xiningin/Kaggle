{"cell_type":{"db9c0eff":"code","0789a18a":"code","9e170e42":"markdown"},"source":{"db9c0eff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0789a18a":"oneHit = pd.read_csv('https:\/\/raw.githubusercontent.com\/the-pudding\/data\/master\/one-hit-wonders\/data.csv')\noneHit","9e170e42":"To read a file into a Kaggle worksheet, you need to use the pd.read_csv() function. In this case, a file was brought in from a outside source in the internet. The abilty to read files from an website on the internet allows you to use diffent sources. In this case I used github, which has a lot of great data dumps that Kaggle does not. As with using data from Kaggle, you don't always know where your data comes from and need to be careful when sourcing it. Once you have found data set you want to use, the pd.read_csv() function with the file path in the parentheses will allow you to use the data in your code."}}