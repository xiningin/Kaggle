{"cell_type":{"50dff77c":"code","bdfea700":"code","a54518d5":"code","960fa3e6":"code","7e66e1af":"code","7cd3adfc":"code","1c0177da":"code","b6cbf5e0":"code","ebe1860a":"code","f6a1cdca":"code","ea38f02a":"code","9341096e":"code","1081d347":"code","dfa08a6e":"code","f0c1ac0a":"code","f837621b":"code","94764009":"code","0e42f3b9":"code","5f51a683":"code","2407709b":"code","2830a783":"markdown","0b3026cb":"markdown","1c3779c2":"markdown","e266d69c":"markdown","3809b84c":"markdown","2bd14804":"markdown","c5b10449":"markdown","91546122":"markdown","a1a6226c":"markdown","cd9d8144":"markdown","0ef1ccc8":"markdown","e30465d1":"markdown","13bae5ca":"markdown","9ba6a36a":"markdown","4a4dd5c5":"markdown","95a34e8e":"markdown","bd228e9c":"markdown","37eb7e79":"markdown","95c2b21b":"markdown","c8d42033":"markdown","b180a68a":"markdown"},"source":{"50dff77c":"import numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\npd.options.display.max_columns = 300\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\ndf_solar_co = pd.read_csv(\"..\/input\/30-years-of-european-solar-generation\/EMHIRESPV_TSh_CF_Country_19862015.csv\")\ndf_solar_co.head(2)","bdfea700":"df_solar_co = df_solar_co[['NO', 'AT', 'FR', 'FI', 'RO', 'ES']]\ndf_solar_co.tail(2)","a54518d5":"print(\"Number of negative values :\")\n(df_solar_co[['NO', 'AT', 'FR', 'FI', 'RO', 'ES']] < 0).sum()","960fa3e6":"print(\"Number of values greater than 1 :\")\n(df_solar_co[['NO', 'AT', 'FR', 'FI', 'RO', 'ES']] > 1).sum()","7e66e1af":"def add_time(_df):\n    \"Returns a DF with two new cols : the time and hour of the day\"\n    t = pd.date_range(start='1\/1\/1986', periods=df_solar_co.shape[0], freq = 'H')\n    t = pd.DataFrame(t)\n    _df = pd.concat([_df, t], axis=1)\n    _df.rename(columns={ _df.columns[-1]: \"time\" }, inplace = True)\n    _df['hour'] = _df['time'].dt.hour\n    _df['month'] = _df['time'].dt.month\n    _df['week'] = _df['time'].dt.week\n    return _df\n\ndf_solar_co = add_time(df_solar_co)\ndf_solar_co.tail(2)","7cd3adfc":"def plot_hourly(df, title):\n    plt.figure(figsize=(12, 6))\n    for c in df.columns:\n        if c != 'hour':\n            sns.lineplot(x=\"hour\", y=c, data=df, label=c)\n            #plt.legend(c)\n    plt.title(title)\n    plt.show()\n    \nplot_hourly(df_solar_co[df_solar_co.columns.difference(['time', 'month', 'week'])][-24:], \"Efficiency of solar stations per country during the last 24 hours\")","1c0177da":"plot_hourly(df_solar_co[df_solar_co.columns.difference(['time', 'month', 'week'])], \"Mean solar efficiency per country during the day\")","b6cbf5e0":"temp_df = df_solar_co[df_solar_co.columns.difference(['time', 'hour', 'month', 'week'])]\nplt.figure(figsize=(12, 6))\nfor col in temp_df.columns:\n    sns.distplot(temp_df[temp_df[col] != 0][col], label=col, hist=False)\nplt.title(\"Distribution of the station's efficiency for non null values (ie during the day)\")","ebe1860a":"plt.figure(figsize=(12, 6))\nsns.lineplot(x = df_solar_co.time, y = df_solar_co['FR'])","f6a1cdca":"countries = ['NO', 'AT', 'FR', 'FI', 'RO', 'ES']\n\nplt.figure(figsize=(12, 6))\nfor c in countries:\n    temp_df = df_solar_co[[c, 'month']]\n    sns.lineplot(x=temp_df[\"month\"], y=temp_df[c], label=c)\n    \nplt.xlabel(\"Month of year\")\nplt.ylabel(\"Efficiency\") \nplt.title(\"Efficiency across the months per country\")","ea38f02a":"plt.figure(figsize=(12, 6))\nfor c in countries:\n    temp_df = df_solar_co[[c, 'week']]\n    sns.lineplot(x=temp_df[\"week\"], y=temp_df[c], label=c)\n    \nplt.xlabel(\"Week of year\")\nplt.ylabel(\"Efficiency\") \nplt.title(\"Efficiency across the weeks per country\")","9341096e":"temp_df = df_solar_co.copy()\ntemp_df['year'] = temp_df['time'].dt.year\n\n\nplt.figure(figsize=(12, 6))\nfor c in countries:\n    temp_df_ = temp_df[[c, 'year']]\n    sns.lineplot(x=temp_df_[\"year\"], y=temp_df_[c], label=c)\n    \nplt.xlabel(\"Year\")\nplt.ylabel(\"Efficiency\") \nplt.title(\"Efficiency across the years per country\")","1081d347":"temp_df = df_solar_co[(5 < df_solar_co.hour) & (df_solar_co.hour < 22)]\ntemp_df = temp_df.drop(columns=['time', 'hour', 'month', 'week'])\ntemp_df.describe()","dfa08a6e":"def plot_by_country(_df, title, nb_col):\n    _df = _df.describe().iloc[nb_col, :]\n    plt.figure(figsize=(10, 6))\n    sns.barplot(x=_df.index, y=_df.values)\n    plt.title(title)\n\n#plot_by_country(\"Mean efficiency by country\", 1)\nplot_by_country(temp_df, \"75% efficiency by country\", 6)","f0c1ac0a":"# credits : https:\/\/stackoverflow.com\/questions\/49554139\/boxplot-of-multiple-columns-of-a-pandas-dataframe-on-the-same-figure-seaborn\n#\u00a0This works because pd.melt converts a wide-form dataframe\nplt.figure(figsize=(10, 6))\nsns.violinplot(x=\"variable\", y=\"value\", data=pd.melt(temp_df))","f837621b":"plt.figure(figsize=(10, 6))\nsns.boxplot(x=\"variable\", y=\"value\", data=pd.melt(temp_df))","94764009":"plt.figure(figsize=(10, 6))\nfor col in temp_df.columns:\n    sns.distplot(temp_df[temp_df[col] != 0][col], label=col, hist=False)\nplt.title(\"Distribution of the station's efficiency\")","0e42f3b9":"def plot_corr(df_):\n    corr = df_.corr()\n    corr\n\n    # Generate a mask for the upper triangle\n    mask = np.zeros_like(corr, dtype=np.bool)\n    mask[np.triu_indices_from(mask)] = True\n\n    # Set up the matplotlib figure\n    f, ax = plt.subplots(figsize=(9, 7))\n\n    # Generate a custom diverging colormap\n    #cmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n    # Draw the heatmap with the mask and correct aspect ratio\n    sns.heatmap(corr, mask=mask, center=0, square=True, cmap='Spectral', linewidths=.5, cbar_kws={\"shrink\": .5}) #annot=True\n    \nplot_corr(temp_df)","5f51a683":"temp_df.corr()","2407709b":"# credits S Godinho @ https:\/\/www.kaggle.com\/sgodinho\/wind-energy-potential-prediction\n\ndf_solar_co['year'] = df_solar_co['time'].dt.year\nplt.figure(figsize=(8, 6))\ntemp_df = df_solar_co[['FR', 'month', 'hour']]\ntemp_df = temp_df.groupby(['hour', 'month']).mean()\ntemp_df = temp_df.unstack('month').sort_index(ascending=False)\nsns.heatmap(temp_df, vmin = 0.09, vmax = 0.29, cmap = 'plasma')","2830a783":"What about the evolution during the recorded years ? For each year there are a spike : ","0b3026cb":"Now, we have to add date time informations in order to use the data :","1c3779c2":"And finally the distribution, we can see that Norway and Finland present many more values around zero :","e266d69c":"# Solar energy - Exploratory Data Analysis - part 2-3\n---\n\n## Introduction\n\nThis dataset contains hourly estimates of an area's energy potential for 1986-2015 as a percentage of a power plant's maximum output.\n\nIn the [previous part](), we've made clusters of countries with similar profiles of solar generation. In this 2nd part we're going to analyse and explore datas for one country representative of each cluster. As a reminder, here are what those 6 clusters made of :\n- cluster nb : 0 CY IE NO SE\n- cluster nb : 1 AT CH CZ HR HU IT SI SK\n- cluster nb : 2 BE DE DK FR LU NL UK  \n- cluster nb : 3 EE FI LT LV PL\n- cluster nb : 4 BG EL RO \n- cluster nb : 5 ES PT\n\n## Goals\n\n- Assess the impact of meteorological and climate variability on the generation of solar power in Europe.\n- Understand how the datas are structured\n- Determine how clean is the dataset? Older solar estimates used to contain impossible values around sunset (ie more energy than the sun releases) or negative sunlight.\n- Show what does a typical year look like? One common approach is to stitch together 12 months of raw data, using the 12 most typical months per this ISO standard.\n\n## First look\n\nLet's see the first rows of our data set :","3809b84c":"An other way to look at the distribution can be achieved with violin plots (a method of plotting numeric data. It is similar to a box plot, with the addition of a rotated kernel density plot on each side) :","2bd14804":"##\u00a0Correlations\n\nIs there any dependence between the solar generation among countries ?\n\nIn statistics, correlation or dependence is any statistical relationship, whether causal or not, between two random variables. In the broadest sense correlation is any statistical association, though it commonly refers to the degree to which a pair of variables are linearly related.\n\nCorrelations are useful because they can indicate a predictive relationship that can be exploited in practice. ","c5b10449":"---\n# Data Analysis","91546122":"### Considering ONLY values between 5 AM & 10 PM\n\nWe're going to take an other look at the distribution of the values but this same considering only during the sunlight hours of the day. Let's begin with a summary of the statistics :","a1a6226c":"Just for fun, we can also use box plot as previously mentionned (In descriptive statistics, a box plot or boxplot is a method for graphically depicting groups of numerical data through their quartiles) : ","cd9d8144":"We create a temporary dataframe with the year, in order to see the variation of the mean solar efficiency accross 30 years. As you can see, the solar generation is quite the same years after years :","0ef1ccc8":"Then, we can plot the values of the 3rd quartile (splits off the highest 25% of data from the lowest 75%) for each country :","e30465d1":"Now let's look at a statistical distribution of the station's efficiencies for non null values (ie during the day), we can see that there are still many values (see the spike) around zero :","13bae5ca":"## Considering night and day\n\nObviously there is no generation of energy during the night :) But first we're goint to take a look at the distribution of the values of solar efficiency during different spans of time and generally. Let's begin with the last day of the records :","9ba6a36a":"Values are normally distributed : the plot looks like a typical Gaussian distribution. The maximum efficiency during the day may vary among countries. Further more, there is an offset along the horizontal axis. This can be explain by the differnet longitude, the sun don't appear at the same hour depending on countries. Those observations can also be seen if we plot the means of those value during the hours of the day :","4a4dd5c5":"Since values are higher than 0.6, there are considered highly positively correlated. Once again, this is not suprising because the countries are situated close each others, so the sun has a tendency to rise and set at the same time and in the same way for all those countries. An other way to see those correlations is to show the following matrix :","95a34e8e":"We keep only one country of each cluster, and take a look a the end of the data set :","bd228e9c":"In order to understand more accurately this phenomenon, let's plot the mean values per month. As we can see, solar efficiency is better during the summer (which can be easily understood) : :","37eb7e79":"## Data cleaning and preparation\n\nUntil now we've consider that all datas are clean and \"normal\", but is it really the case ? We can easily verify that values are indeed between 0 and 1 :","95c2b21b":"## Heatmap month vs hours ","c8d42033":"---\n# Conclusion\n\nIn this second part, we've explored the data set in order to assess the impact of meteorological and climate variability on the generation of solar power. We've also shown the variation during the day, the months of the year and accross years.\nThe dataset seems to be clean and a function to add date time informations is already implemented. It will be usefull in [the third and final part]() of this study where we'll train machine learning models to make predictions.","b180a68a":"We can observe the same thing, with means on a week basis, there is finally no real variations :"}}