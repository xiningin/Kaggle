{"cell_type":{"7620869b":"code","bd4e1146":"code","250745b5":"code","f5ee3640":"code","b0472273":"code","90454b3a":"code","6026d285":"code","bd5fdf81":"code","27c8f424":"code","1d68670e":"code","cdaf6154":"code","652fc3f7":"code","f94291c0":"code","de0449f1":"code","bc19b137":"code","7d988e90":"code","c009aa7f":"code","b4588bf5":"code","e7ecf40d":"code","15bcfd17":"code","c6c0fa5c":"code","62286e37":"code","b5883a0a":"code","da1b31a5":"code","d27d7771":"code","621ccf26":"code","9783abc4":"code","e3d37439":"code","0ec50731":"code","0bc940b4":"code","6d53c258":"code","5e6a3ba6":"code","55006372":"code","28d5eb0d":"code","91a9dce5":"code","6ab1a406":"code","9a06b9c1":"code","37411cde":"code","1c356ca5":"code","1f0dc9fb":"code","0289a26a":"code","c2cf7778":"code","2a28e993":"code","800871c6":"code","965fe210":"code","93139851":"code","2609767a":"code","29cb185e":"code","ab10b8a1":"code","87450681":"code","28aff131":"code","30253962":"code","a622aee1":"code","374f696f":"code","0f49cdcd":"code","e09abf98":"code","738fef1a":"code","954b32a0":"code","daf49f66":"code","f02d4a99":"code","5aff5bd3":"markdown","b0fa00c4":"markdown","80aeed9f":"markdown","7b81aeaf":"markdown","a25a5cd1":"markdown","958b0405":"markdown","f4bc3379":"markdown","fb43f962":"markdown","fa550f89":"markdown","93e4c9bb":"markdown","1b940490":"markdown","fba870ce":"markdown","5f1ad200":"markdown","d293c5d1":"markdown","fccb3670":"markdown","634f4df7":"markdown","1b44dff8":"markdown","d94c1088":"markdown","8b3d32d5":"markdown"},"source":{"7620869b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd4e1146":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","250745b5":"cd Heart_Attack_Analysis_and_Prediction","f5ee3640":"ls","b0472273":"df = pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","90454b3a":"df","6026d285":"df.info()","bd5fdf81":"import missingno as msno","27c8f424":"msno.bar(df);","1d68670e":"df.nunique()","cdaf6154":"df.describe()","652fc3f7":"df.shape","f94291c0":"df","de0449f1":"df.nunique()","bc19b137":"df['sex'].value_counts()","7d988e90":"cat_cols = ['sex','cp','fbs','restecg','exng','slp','caa','thall']","c009aa7f":"len(cat_cols)","b4588bf5":"fig,  ax = plt.subplots(nrows=4, ncols=2, figsize=(20,16))\nt = 0\n\nfor i in range(4):\n    for j in range(2):\n        cat_bar = [df[col].value_counts() for col in cat_cols]\n        axes = ax[i][j]\n        sns.barplot(x=cat_bar[t].index, y=cat_bar[t].values, ax=axes)\n        axes.set_title(cat_cols[t])\n        t += 1\nplt.show()","e7ecf40d":"df.nunique()","15bcfd17":"df.output.value_counts()","c6c0fa5c":"output = df.output.value_counts()","62286e37":"sns.barplot(x=output.index, y=output.values)","b5883a0a":"df.info()","da1b31a5":"colormap = plt.cm.RdBu\nplt.figure(figsize=(20,16))\nsns.heatmap(df.corr())\nplt.show()\n","d27d7771":"df.corr()","621ccf26":"df.corr()['output']","9783abc4":"df.corr()['output'].sort_values(ascending=False)","e3d37439":"Output = pd.DataFrame(df.corr()['output'].sort_values(ascending=False))","0ec50731":"sns.heatmap(Output)","0bc940b4":"from sklearn.model_selection import train_test_split","6d53c258":"df","5e6a3ba6":"train = df.iloc[:,:-1]","55006372":"test = df.iloc[:,-1:]","28d5eb0d":"train","91a9dce5":"test","6ab1a406":"X_train, X_test, y_train, y_test = train_test_split(train,test, test_size=0.3, random_state=32)","9a06b9c1":"X_train","37411cde":"y_train","1c356ca5":"X_test","1f0dc9fb":"y_test","0289a26a":"print(X_train.shape, X_test.shape)\nprint(y_train.shape, y_test.shape)","c2cf7778":"from sklearn.preprocessing import StandardScaler","2a28e993":"scaler = StandardScaler()\nX_train_raw = scaler.fit_transform(X_train)\nX_test_raw = scaler.transform(X_test)","800871c6":"train.columns","965fe210":"test.columns","93139851":"X_test.shape","2609767a":"X_train.shape","29cb185e":"X_train = pd.DataFrame(X_train_raw, columns=X_train.columns, index=X_train.index)\nX_test = pd.DataFrame(X_test_raw, columns=X_test.columns, index=X_test.index)","ab10b8a1":"X_train","87450681":"y_train","28aff131":"X_test","30253962":"y_test","a622aee1":"from sklearn.linear_model import LogisticRegression","374f696f":"lr = LogisticRegression()","0f49cdcd":"lr.fit(X_train, y_train.values.ravel()) # ravel() : 1d - array transform\ny_pred = lr.predict(X_test)\n","e09abf98":"y_train.values.ravel()","738fef1a":"y_train","954b32a0":"(y_pred == y_test.values.ravel()).sum() \/ len(y_pred)","daf49f66":"from sklearn.metrics import accuracy_score","f02d4a99":"accuracy_score(y_pred, y_test)","5aff5bd3":"------------\n**There are high relation - Output and ['cp','thalachh','slp','restecg']**","b0fa00c4":"About dataset\n\n* Age : Age of the patient\n* Sex : Sex of the patient\n* exang: exercise induced angina (1 = yes; 0 = no)\n* ca: number of major vessels (0-3)\n* cp : Chest Pain type chest pain type \n    * Value 1: typical angina\n    * Value 2: atypical angina\n    * Value 3: non-anginal pain\n    * Value 4: asymptomatic\n* trtbps : resting blood pressure (in mm Hg)\n* chol : cholestoral in mg\/dl fetched via BMI sensor\n* fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* rest_ecg : resting electrocardiographic results \n    * Value 0: normal\n    * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n* thalach : maximum heart rate achieved\n* **target : 0= less chance of heart attack 1= more chance of heart attack**","80aeed9f":"This difference make important warning!","7b81aeaf":"# Step 4. Test Data Split and Standard Scaling","a25a5cd1":"----------\nWell split, rows=212, cols=(x:13, y:1)","958b0405":"----------\nThere are some categorical columns(but int type). Let's EDA that first","f4bc3379":"# Step 2. EDA","fb43f962":"------------\n1. All Columns are numeric\n2. Null value isn't exist\n3. colums -> x : 13, y : 1\n4. rows -> 14\n5. it need to be normalized","fa550f89":"## Step 1. Data Description","93e4c9bb":"Well Classified 'Y(Output)'","1b940490":"# Step 5. Modeling and Prediction","fba870ce":"This code is same like ..","5f1ad200":"### **This notebook proceeds with the steps below:)**\n```\nStep 1. Data Description\nStep 2. EDA\nStep 3. Correlation Check\nStep 4. Test Data Split and Standard Scaling\nStep 5. Modeling and Prediction (sklearn-LogisticRegression)\n```","d293c5d1":"# Step 3. Correlation Check","fccb3670":"-----------\n- We don't have information about ['slp','thall','caa']\n- We have information below (around)\n    * Sex : Man - 70%\n    * cp : Typical angina - 50%\n    * fbs : fasting blood sugar <= 120(low) 85%\n    * rest_ecg : 'Value 0 and 1' are 90% (normal or ST-T wave abnormal)\n    * exang(exercise induced angina) : 0(False) 70%\n    ","634f4df7":"-------\nLet's see data info again - about categorical columns\n* Sex : Sex of the patient\n    * Value 0: Women\n    * Value 1: Man\n    \n    \n* exang: exercise induced angina \n    * Value 0: no (False)\n    * Value 1: yes (True)\n    \n    \n* ca: number of major vessels\n    * Value 0: NOthing\n    * Value 1: 1 vessel\n    * Value 2: 2 vessel\n    * Value 3: 3 vessel\n    * Value 4: 4 vessel\n    \n    \n* cp : Chest Pain type chest pain type \n    * Value 1: typical angina\n    * Value 2: atypical angina\n    * Value 3: non-anginal pain\n    * Value 4: asymptomatic\n    \n    \n* fbs : (fasting blood sugar > 120 mg\/dl) \n    * Value 0: fasting blood sugar =< 120 (False)\n    * Value 1: fasting blood sugar > 120 (True)\n    \n        \n* rest_ecg : resting electrocardiographic results \n    * Value 0: normal\n    * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n\n\n* **target : 0= less chance of heart attack 1= more chance of heart attack","1b44dff8":"# Heart Attack Analysis and Prediction - Binary Classification with Logistic Regression","d94c1088":"-----------------\n!. Let's See more about ravel()","8b3d32d5":"-------------\nOK, Well Scaled! Let's Build a Model"}}