{"cell_type":{"9bdfc725":"code","9aadbe8b":"code","00ff036e":"code","4d99db5e":"code","4d152632":"code","db9ffb62":"code","51b6266b":"code","9065e91e":"code","d92c9dfd":"code","0fab5e03":"code","7bd38224":"code","d762bf6c":"code","bfb2ce2b":"code","6e333659":"code","fc354e62":"code","e40c5ffd":"code","602a421f":"code","454fa1b5":"code","19942de3":"code","3ebe0c6d":"code","f0196f84":"code","119f9926":"code","9ac553d8":"code","7ff38d56":"code","444a82f8":"code","121a9442":"code","9fb8b243":"code","06c2a89d":"code","de5c9ecb":"code","5c5af31b":"markdown","325534d1":"markdown","f72adf9e":"markdown","1e4eafa5":"markdown","5fb313e9":"markdown","70773792":"markdown","9979a0d9":"markdown","f4747109":"markdown","ef639a57":"markdown","69c02b59":"markdown","9149c099":"markdown","c83ba161":"markdown","16212b21":"markdown","1343ca42":"markdown","617c37f9":"markdown","cf6f813e":"markdown","11a56a93":"markdown","7041668a":"markdown"},"source":{"9bdfc725":"!pip install google.colab\n!pip install tflite_runtime","9aadbe8b":"import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom google.colab.patches import cv2_imshow\nimport os\n\nimport tensorflow as tf\nimport tflite_runtime.interpreter as tflite\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications import MobileNetV2\nfrom tensorflow.keras.applications.mobilenet_v2 import preprocess_input\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Input, Lambda, GlobalAveragePooling2D, Dropout, Dense\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import ModelCheckpoint","00ff036e":"bulldog = cv2.imread('..\/input\/70-dog-breedsimage-data-set\/train\/Bulldog\/001.jpg')\nbulldog.shape","4d99db5e":"cv2_imshow(bulldog)","4d152632":"greyhound = cv2.imread('..\/input\/70-dog-breedsimage-data-set\/train\/Greyhound\/001.jpg')\ncv2_imshow(greyhound)","db9ffb62":"corgi = cv2.imread('..\/input\/70-dog-breedsimage-data-set\/train\/Corgi\/001.jpg')\ncv2_imshow(corgi)","51b6266b":"class_folder_paths = ['..\/input\/70-dog-breedsimage-data-set\/test\/'+x for x in os.listdir('..\/input\/70-dog-breedsimage-data-set\/test\/')]\nclass_folder_paths","9065e91e":"for class_folder_path in class_folder_paths:\n    print('{0}:'.format(class_folder_path), ' ', len(os.listdir(class_folder_path)))","d92c9dfd":"TRAIN_DIR = '..\/input\/70-dog-breedsimage-data-set\/train\/'\nVAL_DIR = '..\/input\/70-dog-breedsimage-data-set\/test\/'","0fab5e03":"train_data_gen = ImageDataGenerator(horizontal_flip = True,\n                                    rotation_range=20,\n                                    width_shift_range=0.1,\n                                    height_shift_range=0.1,\n                                    zoom_range=0.2)\n\ntrain_generator = train_data_gen.flow_from_directory(TRAIN_DIR,\n                                                     target_size = (224, 224),\n                                                     color_mode = 'rgb',\n                                                     batch_size = 32,\n                                                     class_mode ='categorical',\n                                                     shuffle = True)\n\nval_data_gen = ImageDataGenerator()\n\nval_generator = val_data_gen.flow_from_directory(VAL_DIR,\n                                                   target_size = (224, 224),\n                                                   color_mode = 'rgb',\n                                                   batch_size = 32,\n                                                   class_mode = 'categorical',\n                                                   shuffle = False)","7bd38224":"labels = train_generator.class_indices\nclass_mapping = dict((v,k) for k,v in labels.items())\nclass_mapping","d762bf6c":"before_mobilenet = Sequential([Input((224,224,3)),\n                             Lambda(preprocess_input)])\n\nmobilenet = MobileNetV2(input_shape = (224,224,3), include_top = False)\n\nafter_mobilenet = Sequential([GlobalAveragePooling2D(),\n                             Dropout(0.2),\n                             Dense(70, activation = 'softmax')])\n\nmodel = Sequential([before_mobilenet, mobilenet, after_mobilenet])","bfb2ce2b":"opt = Adam(learning_rate=0.00001)\nmodel.compile(optimizer = opt, loss = 'categorical_crossentropy', metrics = ['accuracy'])","6e333659":"model.build(((None, 224, 224, 3)))\n\nbefore_mobilenet.summary()\nmobilenet.summary()\nafter_mobilenet.summary()","fc354e62":"train_cb = ModelCheckpoint('.\/model\/', save_best_only = True)\n\nmodel.fit(train_generator, validation_data = val_generator, callbacks = [train_cb], epochs = 20)","e40c5ffd":"converter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()","602a421f":"with open(\"model.tflite\", 'wb') as f:\n    f.write(tflite_model)","454fa1b5":"inp1 = cv2.imread('..\/input\/70-dog-breedsimage-data-set\/valid\/Afghan\/01.jpg') #Afghan\ninp2 = cv2.imread('..\/input\/70-dog-breedsimage-data-set\/valid\/Boxer\/01.jpg') #Boxer\ninp3 = cv2.imread('..\/input\/70-dog-breedsimage-data-set\/valid\/Bull Mastiff\/01.jpg') #Bull Mastiff\n\ninputs = [inp1, inp2, inp3]\n","19942de3":"inputs = [cv2.cvtColor(img, cv2.COLOR_BGR2RGB) for img in inputs]","3ebe0c6d":"plt.imshow(inputs[0])","f0196f84":"plt.imshow(inputs[1])","119f9926":"plt.imshow(inputs[2])","9ac553d8":"inputs = np.array(inputs)\ninputs.shape","7ff38d56":"model = tflite.Interpreter('model.tflite')\nmodel","444a82f8":"model.allocate_tensors()\ninput_details = model.get_input_details()\ninput_details","121a9442":"output_details = model.get_output_details()\noutput_details","9fb8b243":"def model_predict(images_arr):\n    images_arr = images_arr.astype(np.float32)\n    predictions = [0]* len(images_arr)\n    \n    for i, val in enumerate(predictions):\n        model.set_tensor(input_details[0]['index'], images_arr[i].reshape(1, 224, 224, 3))\n        model.invoke()\n        predictions[i] = model.get_tensor(output_details[0]['index']).reshape((70,))\n        \n    prediction_probs = np.array(predictions)\n    argmaxs = np.argmax(prediction_probs, axis=1)\n    \n    return argmaxs","06c2a89d":"outputs = model_predict(inputs)\noutputs","de5c9ecb":"outputs = [class_mapping[i] for i in outputs]\noutputs","5c5af31b":"## Making Predictions","325534d1":"## Summarizing the models (Visualizing trainable Params)","f72adf9e":"## The Data I have contains the images of 70 Breeds. Each breed containing around 80-150 images each. Let's ecplore some of them.","1e4eafa5":"## No. of images per Class","5fb313e9":"## My main goal was to make a model ready for deployment. So for that purpose to make our model lightweight and fast w'll use Tflite","70773792":"# Dog Breed Detector \ud83d\udc36","9979a0d9":"## Can try varius learning rates here","f4747109":"## 3. Corgi","ef639a57":"## Let's grind it.","69c02b59":"### etc...","9149c099":"## Let's get into some Data Preprocessing","c83ba161":"## 2. Greyhound","16212b21":"## 1. Bulldog","1343ca42":"## Initializing our Model (MobileNET) \n> #### (used this coz it takes less time in training, no concrete reason, can use any)","617c37f9":"> ## Almost balanced dataset with few exceptions such as LHASA with 187 images and Yorkie, St. Bernard with 78 each","cf6f813e":"## Let's Test on some val images","11a56a93":"## My goal is to build an end to end ML APP that helps us predict the most likely breed of the dog, just by uploading the picture on your phone.","7041668a":"## This will come handy while making predictions"}}