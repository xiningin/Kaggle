{"cell_type":{"c340d421":"code","844063e3":"code","664c2576":"code","7f4e5a5c":"code","b7c2cbfc":"code","c8d17673":"code","350c04d6":"code","1aa13041":"code","b22f6581":"code","183fe46e":"code","8948d9ba":"code","da2f736b":"markdown","1a5cc31f":"markdown","b9cd9c91":"markdown","0aa01862":"markdown","a78fa812":"markdown","315c3453":"markdown","89f05ff1":"markdown","973e628f":"markdown"},"source":{"c340d421":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","844063e3":"import matplotlib.pyplot as plt","664c2576":"dictr={'number': [i for i in range(0, 50)], 'numbers_2': [i for i in range(50, 100)]}\ndf=pd.DataFrame(dictr)\n#df=pd.read_csv(file_path)\n#df=pd.read_excel(file_path)","7f4e5a5c":"df.head(5)#returns first 5 rows","b7c2cbfc":"df.tail(5) #returns last 5 rows","c8d17673":"%matplotlib inline\nplt.plot(df['number'], df['numbers_2'])\n#plt.scatter(df['number'], df['numbers_2'])\nplt.xlabel('numbers')#label the axis\nplt.ylabel('numbers_2')","350c04d6":"df.info()#returns df information","1aa13041":"df.loc[[1], 'number']#1 is the index and the second argument is col name","b22f6581":"df.loc[[2, 3, 4], 'numbers_2']#this are multiple index as input","183fe46e":"df.loc[(df['number']==43), 'numbers_2']#this returns position where number==2","8948d9ba":"df.iloc[[1, 4, 5], [0, 1]]#this returns cloumn 1 and 2 of index 1, 5, 4","da2f736b":"As pandas is very useful for manupulation. we are going to look through it","1a5cc31f":" **Using iloc**\n*  iloc uses number indices","b9cd9c91":"hey! this will get you through the pandas and matplotlib tutorail","0aa01862":"**Creating a DataFrame**\nyou can always create a dataframe using a dictionary or by importing csv and other file types, it simply return DataFrame.","a78fa812":"**plotting data from dataframe**\n* you can plot your data in various types of plots\njust as shown below","315c3453":"**Exploratory data analysis**. \npandas is handy for eda such shown here","89f05ff1":"you can also set conditions","973e628f":"you can also select certain data from dataframe using loc and iloc method"}}