{"cell_type":{"adf14b9b":"code","d3b20199":"code","5ea0fab6":"code","43d4749c":"code","c0416c23":"code","5607d0d4":"code","116abb64":"code","954b5022":"code","ae33bff1":"code","8813e936":"code","9e157df9":"markdown","9059d2cd":"markdown","ef6ae0c8":"markdown","e0e2fe7e":"markdown","4b21f9d9":"markdown","9618e354":"markdown"},"source":{"adf14b9b":"# matplotlib\u3067\u65e5\u672c\u8a9e\u3092\u6271\u3048\u308b\u3088\u3046\u306b\n!pip install japanize_matplotlib -Uq\n\n# RainCloud Plot(\u6563\u5e03\u56f3\uff0bBoxPlot\uff0bViolin\u3092\u4e00\u3064\u3067\u8868\u793a)\n!pip install ptitprince -Uq\n\n# \u6b20\u640d\u5024\u3092\u53ef\u8996\u5316\n!pip install missingno -Uq","d3b20199":"import warnings\nwarnings.simplefilter('ignore')\n\nimport os\nimport gc\ngc.enable()\nimport sys\nimport glob\nimport math\nimport time\nimport random\nimport string\nimport psutil\nimport pathlib\nfrom pathlib import Path\nfrom contextlib import contextmanager\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport japanize_matplotlib\nfrom ptitprince import RainCloud\nfrom matplotlib_venn import venn2\n\n\nfrom tqdm.auto import tqdm as tqdmp\nfrom tqdm.autonotebook import tqdm as tqdm\ntqdmp.pandas()\n\n## Model\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import KFold, StratifiedKFold, GroupKFold\nimport lightgbm as lgb","5ea0fab6":"# \u5b9f\u9a13\u3067\u4f7f\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u306fConfig\u3067\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n# \u3053\u306e\u5b9f\u9a13\u4f55\u3084\u3063\u305f\u304b\u306a\u3068\u5f8c\u3067\u632f\u308a\u8fd4\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u306a\u308b\u3079\u304fConfig\u3060\u3051\u898b\u308c\u3070\u308f\u304b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\n\nclass CFG:\n    \n    def __init__(self):\n        \n        self.debug=True\n        self.seed=42\n        self.n_fold = 5\n        self.environment='Kaggle'  # 'AWS' or 'Kaggle' or 'Colab'\n        self.project='Shiggle_1st',\n        self.exp_name = '001_Baseline'\n        self.objective = 'rmse'\n        self.metric = 'rmse'\n        self.learning_rate = 0.1\n        self.num_boost_round = 1000\n        self.early_stopping_rounds = 30\n        self.num_leaves = 16\n        \nCONFIG = CFG()","43d4749c":"## \u518d\u73fe\u6027\u78ba\u4fdd\u306e\u305f\u3081\u306eSeed\u56fa\u5b9a\ndef seed_everything(seed:int==42):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n\nseed_everything(CONFIG.seed)","c0416c23":"## \u51e6\u7406\u306b\u304b\u304b\u3063\u305f\u6642\u9593\u3068\u4f7f\u7528\u3057\u305f\u30e1\u30e2\u30ea\u3092\u8a08\u6e2c\n@contextmanager\ndef timer(name:str, slack:bool=False):\n    t0 = time.time()\n    p = psutil.Process(os.getpid())\n    m0 = p.memory_info()[0] \/ 2. ** 30\n    print(f'<< {name} >> Start')\n    yield\n    \n    m1 = p.memory_info()[0] \/ 2. ** 30\n    delta = m1 - m0\n    sign = '+' if delta >= 0 else '-'\n    delta = math.fabs(delta)\n    \n    print(f\"<< {name} >> {m1:.1f}GB({sign}{delta:.1f}GB):{time.time() - t0:.1f}sec\", file=sys.stderr)","5607d0d4":"INPUT_DIR = Path('..\/input\/shigglecup-1st\/DATA\/')\nMODEL_DIR = Path('.\/')\nOUTPUT_DIR = Path('.\/')\nprint(f\"Your environment is 'Kaggle'.\\nINPUT_DIR is {INPUT_DIR}\\nMODEL_DIR is {MODEL_DIR}\\nOUTPUT_DIR is {OUTPUT_DIR}\")","116abb64":"with timer('Data Load'):\n    train_df = pd.read_csv(INPUT_DIR \/ 'train.csv')\n    test_df = pd.read_csv(INPUT_DIR \/ 'test.csv')\n    sub_df = pd.read_csv(INPUT_DIR \/ 'sample_submission.csv')\n    \n    print(f'Train: {train_df.shape} | Test: {test_df.shape}')","954b5022":"train_df[\"species_id\"].value_counts()[0:7]","ae33bff1":"train_df[train_df[\"species_id\"] == 479]","8813e936":"train_df[train_df[\"species_id\"] == 719]","9e157df9":"## \u7a2e\u65cf\u306b\u5272\u308a\u632f\u3089\u308c\u305f\u30dd\u30b1\u30e2\u30f3\u756a\u53f7\u3084\u305e\uff01\u540c\u3058\u5024\u306a\u3093\u3066\u3068\u308b\u308f\u3051\u306a\u3044\u3084\u3093","9059d2cd":"## \u30fb\u30fb\u30fb\u306f\uff1f","ef6ae0c8":"### \u3067\u3082\u3001\u53ef\u80fd\u6027\u3068\u3057\u3066\u306f\u30d5\u30a9\u30eb\u30e0\u30c1\u30a7\u30f3\u30b8\u3060\u3051\u3060\u308f\u3002\u9593\u9055\u3044\u306a\u3044\u3002","e0e2fe7e":"# \u30dd\u30b1\u30e2\u30f3\u756a\u53f7\u306f\u30e6\u30cb\u30fc\u30af\u3067\u3042\u308b\u3002\n## \u7a2e\u65cf\u306b\u5272\u308a\u632f\u3089\u308c\u305f\u756a\u53f7\u306a\u306e\u3067\u81ea\u660e\u3002QED\u3002","4b21f9d9":"### \u3042\uff5e\uff5e\uff5e\uff5e\u3002\u30d5\u30a9\u30eb\u30e0\u30c1\u30a7\u30f3\u30b8\uff5e\uff01\uff01\uff01\uff01\uff01\uff01","9618e354":"### \u30fb\u30fb\u30fb\u30e1\u30ac\u30fb\u30fb\u30fb\u9032\u5316\u30fb\u30fb\u30fb\uff1f"}}