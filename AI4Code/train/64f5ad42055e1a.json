{"cell_type":{"e54af5db":"code","6cf25305":"code","fae0ba1e":"code","cda2e1a0":"code","517cbfa4":"code","f2e8e5cf":"code","9aa249bc":"code","f6e5aee9":"code","0e365ac8":"code","30d44586":"code","6e3d7318":"code","6c2b960a":"code","ee7e65a8":"code","5848f5b4":"code","8f93aa98":"code","e891b820":"code","70f0ce44":"code","e3bd99e0":"code","4608c328":"code","315c91ea":"code","7c036ac3":"code","e0d8e78b":"code","f390a04a":"code","c363acec":"code","3a68cab0":"code","cd94e9f5":"code","184973d2":"code","cd68129f":"code","43e023bc":"code","1d10cedc":"code","effbec6f":"code","d6d60ef3":"markdown","7d03c2a0":"markdown"},"source":{"e54af5db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6cf25305":"import numpy as np\nimport pandas as pd","fae0ba1e":"train_set = pd.read_csv('\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_train.csv')","cda2e1a0":"train_set.tail()","517cbfa4":"# Drop row with 0 confirmed cases, i.e., before tracking the virus infection\ntrain_set = train_set[train_set['ConfirmedCases'] != 0]\n# Drop columns that do not provide any useful informatio\ntrain_set.drop(['Province\/State', 'Country\/Region','Lat', 'Long'], axis=1, inplace=True)","f2e8e5cf":"# Take a look at the incremental percentage changes\ntrain_set['Fatalities_diff'] = train_set['Fatalities'].pct_change() * 100\ntrain_set['Confirmed_diff'] = train_set['ConfirmedCases'].pct_change() * 100","9aa249bc":"# Elementary Data Analysis\n# Some basic statistics of the data set\ntrain_set.describe()","f6e5aee9":"#set up environment for basic visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mtick","0e365ac8":"f = plt.figure(figsize=(8,10))\n# plot percentage change\nax = f.add_subplot(211) \nax.plot(train_set['Id'], train_set['Confirmed_diff'])\nax.plot(train_set['Id'], train_set['Fatalities_diff'])\nax.set_xlabel('Id')\nax.set_ylabel('Pecentage Change')\nax.yaxis.set_major_formatter(mtick.PercentFormatter())\n\n# plot actual cases\nax2 = f.add_subplot(212) \nl1 = ax2.plot(train_set['Id'], train_set['ConfirmedCases'], label='Confirmed Cases')\nax2.set_xlabel('Id')\nax2.set_ylabel('Number of Confirmed Cases')\n#ax2.legend(loc=0)\ncolor='red'\nax2b = ax2.twinx()\nl2 =ax2b.plot(train_set['Id'], train_set['Fatalities'], color=color, label='Fatalitoes')\nax2b.set_ylabel('Number of Death')\n# combine all legend into one box\nls = l1 + l2\nlabs = [l.get_label() for l in ls]\nax2.legend(ls, labs, loc=0)","30d44586":"# visualize the relationship between Confirmed cases and death tolls\nplt.plot(train_set.ConfirmedCases, train_set.Fatalities)\n#plt.plot(train_set.Id, d_label, label='actual')\n#plt.legend()\nplt.xlabel('Confirmed Cases')\nplt.ylabel('Number of Deaths')\nplt.title('Number of Deaths\/Confirmed Case')\nplt.show()","6e3d7318":"# Prepare data for linear regression\n# Assume a quadratic form\ntrain_set['Id2'] = train_set['Id'] ** 2\n\n# Input for death toll prediction\nd_train = train_set[['Id', 'Id2', 'ConfirmedCases']]\n\n# Input for confirmed cases prediction\ncf_train = train_set[['Id', 'Id2']]","6c2b960a":"# Dependent variable\ncf_label = train_set['ConfirmedCases']\nd_label = train_set['Fatalities']","ee7e65a8":"lg_cf_label = np.log(cf_label)\nlg_d_label = np.log(d_label)","5848f5b4":"lg_train = train_set[['Id']]","8f93aa98":"plt.plot(lg_train, lg_cf_label, label='actual')\nplt.legend()\nplt.title('Log Number of Confirmed Cases')\nplt.show()","e891b820":"plt.plot(lg_train, lg_d_label, label='actual')\nplt.legend()\nplt.title('Log Number of Death Tolls')\nplt.show()","70f0ce44":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","e3bd99e0":"#regression for confirmed case\nlg_cf_reg = LinearRegression().fit(lg_train, lg_cf_label)\nlg_cf_reg.score(lg_train, lg_cf_label)","4608c328":"lg_cf_pred = lg_cf_reg.predict(lg_train)\nlg_cf_mse = mean_squared_error(lg_cf_pred, lg_cf_label)\nlg_cf_mse","315c91ea":"plt.plot(lg_train, np.transpose(lg_cf_pred), label='prediction')\nplt.plot(lg_train, lg_cf_label, label='actual')\nplt.legend()\nplt.title('Log Confirmed Cases')\nplt.show()","7c036ac3":"ppred = np.exp(lg_cf_pred)","e0d8e78b":"plt.plot(lg_train, np.transpose(np.exp(lg_cf_pred)), label='prediction')\nplt.plot(lg_train, cf_label, label='actual')\nplt.legend()\nplt.title('Confirmed Cases')\nplt.show()","f390a04a":"#regression for death tolls\nlg_d_reg = LinearRegression().fit(lg_train, lg_d_label)\nlg_d_reg.score(lg_train, lg_d_label)","c363acec":"lg_d_pred = lg_d_reg.predict(lg_train)\nlg_d_mse = mean_squared_error(lg_d_pred, lg_d_label)\nlg_d_mse","3a68cab0":"plt.plot(lg_train, np.transpose(lg_d_pred), label='prediction')\nplt.plot(lg_train, lg_d_label, label='actual')\nplt.legend()\nplt.title('log death tolls')\nplt.show()","cd94e9f5":"plt.plot(lg_train, np.transpose(np.exp(lg_d_pred)), label='prediction')\nplt.plot(lg_train, d_label, label='actual')\nplt.legend()\nplt.title('death tolls')\nplt.show()","184973d2":"test_set = pd.read_csv('\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_test.csv')","cd68129f":"test_x = test_set[['ForecastId']] + 50","43e023bc":"cf_forecast = np.exp(lg_cf_reg.predict(test_x))\nd_forecast = np.exp(lg_d_reg.predict(test_x))","1d10cedc":"forecast = test_x.copy()\nforecast['ForecastId'] = forecast['ForecastId'] - 50\nforecast['ConfirmedCases'] = cf_forecast\nforecast['Fatalities'] = d_forecast","effbec6f":"forecast.to_csv('\/kaggle\/working\/submission.csv', index=False)","d6d60ef3":"A natural log based regression","7d03c2a0":"Now make some forecasts..."}}