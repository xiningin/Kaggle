{"cell_type":{"7b5925a5":"code","37b6f795":"code","21f3375d":"code","ac6bc646":"code","c68b84d7":"code","eacbd54c":"code","269c1c2e":"code","e53e107b":"code","6f411968":"code","35de511d":"code","3d298689":"code","a3cc957b":"code","839091c3":"code","02d38093":"code","36039caf":"code","51ed19e5":"code","fe81ba97":"code","2e53448f":"code","a83ae0a9":"code","da710b31":"code","951b1e98":"code","8cc0b894":"code","d7936d4b":"code","1fb58923":"code","171d7d4f":"code","dba6238a":"code","491ca13c":"code","2588d33a":"code","bd780ab0":"code","2e2c81a4":"markdown","354cbf4e":"markdown","906c6dcc":"markdown","ea3fe3d8":"markdown"},"source":{"7b5925a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37b6f795":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","21f3375d":"# load data\ndf_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","ac6bc646":"df_train.shape, df_test.shape","c68b84d7":"df_train.drop(columns = [\"Name\", 'Ticket'], inplace=True)\ndf_test.drop(columns = [\"Name\",'Ticket'], inplace=True)","eacbd54c":"df_train.shape, df_test.shape","269c1c2e":"df_train.head()","e53e107b":"df_test.head()","6f411968":"df_train.dtypes","35de511d":"df_test.dtypes","3d298689":"df_train.isnull().sum()","a3cc957b":"df_test.isnull().sum()","839091c3":"df_train.Embarked.fillna('Missing', inplace = True)","02d38093":"df_train.Cabin.fillna('Missing', inplace = True)\ndf_test.Cabin.fillna('Missing' , inplace = True)","36039caf":"df_train.Cabin = df_train.Cabin.astype(str).str[0]\ndf_test.Cabin = df_test.Cabin.astype(str).str[0]","51ed19e5":"df_train.head()","fe81ba97":"df_train.head()","2e53448f":"df_train.Age.fillna(df_train.Age.median() , inplace= True)\ndf_test.Age.fillna(df_train.Age.median() , inplace = True)","a83ae0a9":"df_test.Fare.fillna(df_train.Fare.median() , inplace = True)","da710b31":"df_train.head()","951b1e98":"df_train_temp = df_train.copy()\ndf_train_frequency_map= df_train_temp['Sex'].value_counts().to_dict()\ndf_train_temp['Sex']= df_train_temp['Sex'].map(df_train_frequency_map)\n\ndf_train_frequency_map1= df_train_temp['Cabin'].value_counts().to_dict()\ndf_train_temp['Cabin']= df_train_temp['Cabin'].map(df_train_frequency_map1)\n\ndf_train_frequency_map2= df_train_temp['Embarked'].value_counts().to_dict()\ndf_train_temp['Embarked']= df_train_temp['Embarked'].map(df_train_frequency_map2)","8cc0b894":"df_train_temp.head()","d7936d4b":"df_test_temp = df_test.copy()\n\ndf_test_temp['Sex']= df_test_temp['Sex'].map(df_train_frequency_map)\ndf_test_temp['Cabin']= df_test_temp['Cabin'].map(df_train_frequency_map1)\ndf_test_temp['Embarked']= df_test_temp['Embarked'].map(df_train_frequency_map2)","1fb58923":"df_test_temp.head()","171d7d4f":"X = df_train_temp.drop(columns = [\"Survived\"])\ny = df_train_temp[\"Survived\"]","dba6238a":"# data splitting\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","491ca13c":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","2588d33a":"from xgboost import XGBClassifier\nbooster = XGBClassifier(random_state =44, max_depth = 2)\nbooster.fit(X_train, y_train)\npreds = booster.predict(df_test_temp\n                    )","bd780ab0":"test_out = pd.DataFrame({\n    'PassengerId': df_test_temp.PassengerId, \n    'Survived': preds\n})\ntest_out.to_csv('submission.csv', index=False)","2e2c81a4":"# Data exploration and visualization","354cbf4e":"# Encoding Catagorical features","906c6dcc":"For data visualization read this notebook:  https:\/\/www.kaggle.com\/islammohaisen\/what-types-of-people-more-survive-titanic-comp]","ea3fe3d8":"# Missing Values"}}