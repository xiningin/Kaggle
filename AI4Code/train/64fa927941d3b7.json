{"cell_type":{"8d00a877":"code","d3071738":"code","43563437":"code","8e7c945e":"code","5f8a9350":"code","c39577c1":"code","338d0964":"code","a8d4bb9c":"code","bfa4ebfe":"code","e827d148":"code","3858a09f":"code","3503f88f":"code","b0306795":"code","a1ce5ffd":"code","209bfa3d":"code","126565f7":"code","79650f28":"code","5d9b7431":"code","165b6ac3":"markdown","db05fb83":"markdown","deea6d09":"markdown","251dedd1":"markdown","11e6ff8c":"markdown"},"source":{"8d00a877":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d3071738":"# Data\ntrain = pd.read_csv(\"\/kaggle\/input\/widsdatathon2020\/training_v2.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/widsdatathon2020\/unlabeled.csv\")\n# Dictionary\ndictionary = pd.read_csv(\"\/kaggle\/input\/widsdatathon2020\/WiDS Datathon 2020 Dictionary.csv\")\n# Samples\nsamplesubmission = pd.read_csv(\"\/kaggle\/input\/widsdatathon2020\/samplesubmission.csv\")\nsolution_template = pd.read_csv(\"\/kaggle\/input\/widsdatathon2020\/solution_template.csv\")","43563437":"dictionary","8e7c945e":"dictionary.Category.unique()","5f8a9350":"#dictionary[dictionary['Data Type'] == 'numeric']","c39577c1":"train","338d0964":"test","a8d4bb9c":"train.hospital_death.describe()","bfa4ebfe":"print('unlabeled data: {}\\ntraining data:  {}'.format(test.shape, train.shape))","e827d148":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","3858a09f":"train.fillna(method='ffill', inplace=True)\ntest.fillna(method='ffill', inplace=True)","3503f88f":"# Train\nX_train = train[['age','weight']].values\ny_train = train['hospital_death'].values\n# Test\nX_test = test[['age','weight']].values","b0306795":"model = LogisticRegression()\nmodel.fit(X_train, y_train)","a1ce5ffd":"y_predict = model.predict_proba(X_test)","209bfa3d":"test['hospital_death'] = y_predict[:,0]","126565f7":"test","79650f28":"test[[\"encounter_id\",\"hospital_death\"]].to_csv(\"submission.csv\",index=False)","5d9b7431":"test[[\"encounter_id\",\"hospital_death\"]]","165b6ac3":"## Baseline Model","db05fb83":"##### Challengue\nThe challenge is to create a model that uses data from the first 24 hours of intensive care to predict patient survival. MIT's GOSSIS community initiative, with privacy certification from the Harvard Privacy Lab, has provided a dataset of more than 130,000 hospital Intensive Care Unit (ICU) visits from patients, spanning a one-year timeframe","deea6d09":"##### Model\nLogistic regression predicts the probability of an outcome that can only have two values (i.e. a dichotomy). The prediction is based on the use of one or several predictors.","251dedd1":"##### Training data\nLabeled training data are provided for model development; you will then upload your predictions for unlabeled data to Kaggle and these predictions will be used to determine the public leaderboard rankings, as well as the final winners of the competition.****","11e6ff8c":"Tuning the Model"}}