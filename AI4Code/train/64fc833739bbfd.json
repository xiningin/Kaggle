{"cell_type":{"d0471817":"code","110ea8cd":"code","e7644cfd":"code","fa971216":"code","830597b2":"code","7d840c05":"code","b01a0f38":"code","ee413bfe":"code","ab6f80fc":"code","7d8697c6":"code","24f95950":"code","54f5aab1":"code","712fb8ba":"code","30d801de":"code","396d3fd2":"code","59ca85b9":"code","fa8754f6":"code","d5281af4":"code","49886cc8":"code","616c3f62":"code","b64ec136":"code","403b50e8":"code","63d9ffb6":"code","e092348f":"code","25561b07":"code","7b4a9938":"code","6cdccccc":"code","5d1b6300":"code","5ef89aa9":"code","6ff98fc8":"code","6a560bf6":"code","a8c70865":"code","fb017e5f":"code","cb8da17f":"code","e67b5e96":"code","ea85ddef":"markdown","e7dcaaeb":"markdown","c4f6f560":"markdown","a16626e7":"markdown","bcf207b7":"markdown","653857a4":"markdown","f87d6d01":"markdown","e19d6c8b":"markdown","d6a878a8":"markdown","d214573b":"markdown","2363522e":"markdown","4a70f36a":"markdown","2ac209ce":"markdown","6e68c01b":"markdown","434584d1":"markdown","306b97a8":"markdown","e6e0d818":"markdown","858f2a59":"markdown","9627fce6":"markdown","b2ae0d06":"markdown","59131d0c":"markdown","d102f316":"markdown"},"source":{"d0471817":"# loading the packages\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nprint(os.listdir(\"..\/input\"))","110ea8cd":"# loading my data\ndf = pd.read_csv('..\/input\/winemag-data_first150k.csv', index_col = 0)                ","e7644cfd":"df.head(3)","fa971216":"df.columns","830597b2":"# number rows and columns:\ndf.shape","7d840c05":"# check out how many values are missing\ndf.info()","b01a0f38":"df1 = df.dropna(subset=['country'])","ee413bfe":"# frequency counts - Top 10 countries\ndf1.country.value_counts(dropna=False).head(10)","ab6f80fc":"#frequency counts - Top 10 price points\ndf1.price.value_counts(dropna=False).head(10)","7d8697c6":"# as noted in the price point value counts, there are almost 14,000 missing values. \nmean_price = df1.price.mean()\ndf1['price'] = df1['price'].fillna(mean_price)\ndf1.price.value_counts().head(5)","24f95950":"# frequency counts - Top 5 alloted points\ndf1.points.value_counts(dropna=False).head(5)","54f5aab1":"df1.describe()","712fb8ba":"# let's have a look at the columns to ensure the price column has been fixed.\ndf1.info()","30d801de":"df1 = df1.drop(['region_2'], axis = 1)","396d3fd2":"df1.info()","59ca85b9":"df1.price = df1.price.astype(int)","fa8754f6":"df1['price'].value_counts(dropna = False).head(5)","d5281af4":"most_expensive = df1.groupby('country')[['price', 'points', 'variety']].max().nlargest(5, ['price'])\nmost_expensive","49886cc8":"best_rated = df1.groupby('country')[['points', 'price', 'variety']].max().nlargest(5, ['points'])\nbest_rated","616c3f62":"# let's see the distribution for the column 'points':\nimport matplotlib.pyplot as plt\n_ = plt.hist(df1['points'])\nplt.ylabel('# of units')\nplt.xlabel('Points')\nplt.show()","b64ec136":"price = df1.price\nmean_price = np.mean(price)\nmedian_price= np.median(price)\nstd_dev = np.std(price)\nprint('mean price =', mean_price, 'median price =', median_price, 'standard deviation =', std_dev)","403b50e8":"x = np.sort(df1['price'])\ny = np.arange(1, len(x) + 1) \/ len(x)\n_ = plt.plot(x, y, marker='.', linestyle='none')\n_ = plt.xlabel('price')\n_ = plt.ylabel('ECDF') \nplt.margins(0.02)\nplt.show()","63d9ffb6":"# confirm above graph by computing percentiles\nnp.percentile(df1['price'], [25, 50, 75, 90, 95])","e092348f":"country_labels, country_uniques = pd.factorize(df1.loc[:, 'country'])","25561b07":"country_labels","7b4a9938":"province_labels, province_uniques = pd.factorize(df1.loc[:, 'province'])\nwinery_labels, winery_uniques = pd.factorize(df1.loc[:, 'winery'])\nvariety_labels, variety_uniques = pd.factorize(df1.loc[:, 'variety'])","6cdccccc":"# add columns with the country, provicne and winery labels just created. \ndf1['country_labels'] = country_labels\ndf1['province_labels'] = province_labels\ndf1['winery_labels'] = winery_labels\ndf1['variety_labels'] = variety_labels\ndf1.head(3)","5d1b6300":"df1 = df1.loc[:, ['country_labels', 'country','province_labels', 'province', 'winery_labels', \n                           'winery', 'variety', 'variety_labels', 'points', 'price']]\ndf1.head()","5ef89aa9":"#create a mapping \nvariety_name = dict(zip(df1.variety_labels.unique(), df1.variety.unique()))","6ff98fc8":"# create train_test split\nfrom sklearn.model_selection import train_test_split\n\nX = df1[['country_labels', 'province_labels', 'winery_labels','points', 'price',]]\ny = df1['variety_labels']\n# 75% \/ 25% train-test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)","6a560bf6":"#create the classifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors = 5)","a8c70865":"# train the classifier\nknn.fit(X_train, y_train)","fb017e5f":"#estimate the accuracy of the classifier\nknn.score(X_test, y_test)","cb8da17f":"#using the KNN classifier model to classify new objects and find out the variety name!\n#let's apply it with country_label = 3, province_label = 4, winery_label = 9, points 95 and price = 250\n\nvariety_prediction = knn.predict([[3, 4, 9, 95, 250]])\nvariety_name[variety_prediction[0]]","e67b5e96":"import warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)\nknn = KNeighborsClassifier(n_neighbors = 5)\nknn.fit(X_train_scaled, y_train)\nprint('Accuracy of K-NN classifier on training set: {:.2f}'\n     .format(knn.score(X_train_scaled, y_train)))\nprint('Accuracy of K-NN classifier on test set: {:.2f}'\n     .format(knn.score(X_test_scaled, y_test)))","ea85ddef":"**Compute an empirical cumulative distribution function(ECDF). This will give us a full view of how pricing is distributed** ","e7dcaaeb":"**Basic statistics...**","c4f6f560":"**What country sells the most expensive bottle of wine, how many review points it got and what it is the variety? **","a16626e7":"** Import packages**","bcf207b7":"**Since the #1 price point is showing as float (decimals)... convert it integer.**","653857a4":"**There is a correlation between points and price. \nLet 's see it by 'points'  :**","f87d6d01":"**Identifying Top 10 price points**","e19d6c8b":"**Identifying Top 10 countries**","d6a878a8":"**Any comments would be appreciated ** ","d214573b":"**Visual Inspection**","2363522e":"**Visualizing the distribution for the column 'points'**","4a70f36a":"**Loading my data**","2ac209ce":"**Notice that the #1 price point is now a float (decimal). We'll convert it to integer later on. **","6e68c01b":" **There are a lot of missing price points.  Let's fix this by inserting the average price point.**","434584d1":"**By observing the results of above code, we notice that any column with less than 150,930 rows needs to be corrected.**","306b97a8":"**Now we have the same amount of entries in the price column than the points column. But there is still some cleaning to do in this data.**","e6e0d818":"**Ok time to do some machine learning...**","858f2a59":"**Best rapport between 'points' vs 'price' per bottle is from Argentina. **","9627fce6":"**Quick view of the statistical summary**","b2ae0d06":"**The goal of this kernel is to go through the steps of exploring the data, tidy the data, highlight some interesting facts,  and put in place a simple machine learning model through labeling instead of one-hot encoding. My ML is just a toy example to get started on Kaggle**","59131d0c":"**The column region_2 is missing lots of values. Since this column won't be crucial for our exploratory purposes let's delete it.**","d102f316":"**Above graph shows that more than 95% of prices are less than 77 dlls, this can be confirmed by computing the percentiles**"}}