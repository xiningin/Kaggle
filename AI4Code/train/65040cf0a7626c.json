{"cell_type":{"ff873cf3":"code","19c6d611":"code","1ed13549":"code","7ee345a1":"code","c83f9a7f":"code","9e6e9a7a":"code","964985a0":"code","10671a4e":"code","9353f859":"code","07ab055e":"code","091db29a":"code","2c07cbe0":"code","6d91b21b":"code","4bdd87d1":"code","7b171dda":"code","a807f877":"code","fc658b84":"markdown","49511ff6":"markdown","59a9cd2c":"markdown","160607e7":"markdown","254b9b33":"markdown","cdacf1d1":"markdown"},"source":{"ff873cf3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom plotly import tools\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","19c6d611":"df = pd.read_csv(\"..\/input\/BlackFriday.csv\")","1ed13549":"df.info()","7ee345a1":"df.head()","c83f9a7f":"df.columns","9e6e9a7a":"ageData = sorted(list(zip(df.Age.value_counts().index, df.Age.value_counts().values)))\nage, productBuy = zip(*ageData)\nage, productBuy = list(age), list(productBuy)\nageSeries = pd.Series((i for i in age))\n\ndata = [go.Bar(x=age, \n               y=productBuy, \n               name=\"How many products were sold\",\n               marker = dict(color=['#EA4A28', '#D3EA28', '#28EA4E', '#28EAE2', '#2008B9', '#E511E1', '#C4061D'],\n                            line = dict(color='#7C7C7C', width = .5)),\n              text=\"Age: \" + ageSeries)]\nlayout = go.Layout(title= \"How many products were sold by ages\")\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","964985a0":"age0_17 = len(df[df.Age == \"0-17\"].User_ID.unique())\nage18_25 = len(df[df.Age == \"18-25\"].User_ID.unique())\nage26_35 = len(df[df.Age == \"26-35\"].User_ID.unique())\nage36_45 = len(df[df.Age == \"36-45\"].User_ID.unique())\nage46_50 = len(df[df.Age == \"46-50\"].User_ID.unique())\nage51_55 = len(df[df.Age == \"51-55\"].User_ID.unique())\nage55 = len(df[df.Age == \"55+\"].User_ID.unique())\nagesBuyerCount = [age0_17,age18_25,age26_35,age36_45,age46_50,age51_55,age55]\n               \ntrace1 = go.Bar(x = age,\n                y = agesBuyerCount,\n                name = \"People count\",\n                marker = dict(color=['#F3B396', '#F3F196', '#A7F9AD', '#D5F0EF', '#AAADEE', '#EAC1E8', '#DF8787'],\n                             line = dict(color='#7C7C7C', width = 1)),\n                text = \"Age: \" + ageSeries)\ndata = [trace1]\nlayout = go.Layout(title= \"How many people did shopping by ages\")\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","10671a4e":"totalPurchase = df.Purchase.sum()","9353f859":"y_percentage = [i\/totalPurchase*100 for i in df.groupby(\"Age\").sum()[\"Purchase\"].values]\ny_purchase = [i for i in df.groupby(\"Age\").sum()[\"Purchase\"].values]\nx_percentage = [i for i in age]\nx_purchase = [i for i in age]\n\ntrace0 = go.Bar(x = y_percentage,\n                y = x_percentage,\n                marker = dict(color = '#BF5959', \n                              line = dict(\n                                  color = '#FFFEA6', width = 1) \n                             ),\n               name = \"Percentage of purchases amount in dollars\",\n               orientation = \"h\"\n               )\ntrace1 = go.Scatter(x = y_purchase,\n                    y = x_purchase,\n                    mode='lines+markers',\n                    line=dict(\n                        color='#5079DC'),\n                    name='Purchases amount in dollars ',)\nlayout = dict(\n                title='Purchases in $',\n                yaxis=dict(showticklabels=True,domain=[0, 0.85]),\n                yaxis2=dict(showline=True,showticklabels=False,linecolor='rgba(102, 102, 102, 0.8)',linewidth=2,domain=[0, 0.85]),\n                xaxis=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0, 0.42]),\n                xaxis2=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0.47, 1],side='top',dtick=25),\n                legend=dict(x=0.029,y=1.038,font=dict(size=10) ),\n                margin=dict(l=200, r=20,t=70,b=70),\n                paper_bgcolor='rgb(248, 248, 255)',\n                plot_bgcolor='rgb(248, 248, 255)',\n)\n\nannotations = []\n\ny_s = np.round(y_percentage, decimals=2)\ny_nw = np.rint(y_purchase)\n\nfor ydn, yd, xd in zip(y_nw, y_s, x_percentage):\n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xd, x=ydn - 20000,\n                            text='{:,}'.format(ydn),\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(128, 0, 128)'),\n                            showarrow=False))\n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd + 3,\n                            text=str(yd) + '%',\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(50, 171, 96)'),\n                            showarrow=False))\nannotations.append(dict(xref='paper', yref='paper',\n                        x=-0.2, y=-0.109,\n                        font=dict(family='Arial', size=10,\n                                  color='rgb(150,150,150)'),\n                        showarrow=False))\n\nlayout['annotations'] = annotations\n\nfig = tools.make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                          shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\n\nfig['layout'].update(layout)\niplot(fig)","07ab055e":"data = [go.Box(y = df.Purchase, marker = dict(\n        color = 'rgb(0, 128, 128)',\n    ))]\niplot(data)\n","091db29a":"labels = sorted(df.City_Category.unique())\nvalues = df.groupby(\"City_Category\").sum()[\"Purchase\"]\ncolors = ['#FEBFB3', '#E1396C', '#96D38C', '#D0F9B1']\n\ntrace = go.Pie(labels=labels, values=values,\n               hoverinfo='label+percent', textinfo='value', \n               textfont=dict(size=20),\n               marker=dict(colors=colors, \n                           line=dict(color='#000000', width=2)))\niplot([trace])","2c07cbe0":"labels = sorted(df.Stay_In_Current_City_Years.unique())\nvalues = df.Stay_In_Current_City_Years.value_counts().sort_index()\n\ntrace = go.Pie(labels=labels, values=values)\n\niplot([trace])","6d91b21b":"data = [go.Bar(\n            x=df.Product_Category_1.value_counts().sort_index().index,\n            y=df.Product_Category_1.value_counts().sort_index().values\n    )]\nlayout = go.Layout(\n    title='Most Purchased Product Category',\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","4bdd87d1":"x_MaritalStatus = ['Single', 'Married']\ny_PurchaseAmountAccordingToMaritalStatus = [int(df[df.Marital_Status == 0].Purchase.sum()), int(df[df.Marital_Status == 1].Purchase.sum())]\n\ndata = [go.Bar(x = x_MaritalStatus, \n                y = y_PurchaseAmountAccordingToMaritalStatus,\n              marker = dict(color=['#0239E3','#E36502']))]\nlayout = go.Layout(title = 'Purchased Amount According To Marital Status (in US Dollars)')\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","7b171dda":"x_Gender = ['Male', 'Female']\ny_PurchaseAmountAccordingToGender = [df[df.Gender == 'M'].Purchase.sum(), df[df.Gender == 'F'].Purchase.sum()]\n\ndata = [go.Bar(x = x_Gender, \n                y = y_PurchaseAmountAccordingToGender,\n              marker = dict(color=['#A6000D','#2ECEE7']))]\nlayout = go.Layout(title = 'Purchased Amount According To Gender (in US Dollars)')\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","a807f877":"x_Status = ['Single & Male', 'Single & Female', 'Married & Male', 'Married & Female']\ny_Purchases = [df[(df.Gender == 'M') & (df.Marital_Status == 0)].Purchase.sum(),\n              df[(df.Gender == 'F') & (df.Marital_Status == 0)].Purchase.sum(),\n              df[(df.Gender == 'M') & (df.Marital_Status == 1)].Purchase.sum(),\n              df[(df.Gender == 'F') & (df.Marital_Status == 1)].Purchase.sum()]\n\ndata = [go.Bar(x = x_Status, \n                y = y_Purchases,\n              marker = dict(color=['rgb(0,212,65)','rgb(54,10,95)','rgb(5,22,205)','rgb(50,62,1)']))]\nlayout = go.Layout(title = 'Purchased Amount According To Gender and Marital Status (in US Dollars)')\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","fc658b84":"# BLACK FRIDAY\nShopping day after Thanksgiving is called as **Black Friday**. In Black Friday most of retailers open very early and offer promotional sales. Because of that a lot of people do shopping in this day and sometimes it causes chaos. That's why it's called Black Friday.\nAt first the day had not a name. In 1961 people caused traffic accidents and violence to make use of promotions and sales in Philadelpihia after that it is started calling Black Friday. \n\nDataset contains 550 000 observations about the black Friday in a retail store\n![](https:\/\/i0.wp.com\/ares.shiftdelete.net\/580x330\/original\/2017\/11\/black-friday-nedir-sdn-1-1.jpg)","49511ff6":"People age of between 26-35 tend to buy more product and spend more money. We may explain this situtation with financial status. Usually in that ages people's financial status are better than younger. Also they are interesting technology and promotions more than older people.","59a9cd2c":"**Purchases Amount in US Dollar Group by City Categories**","160607e7":"Thanks for your time!","254b9b33":"As we can see below single people and males spent more money than married people and females.","cdacf1d1":"**Percentage of People's Years of Staying in Current City **"}}