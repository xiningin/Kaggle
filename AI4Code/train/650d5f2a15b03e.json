{"cell_type":{"ec62ded7":"code","3393b10d":"code","de0e8969":"code","63e62f8b":"code","97a16a8d":"code","03887efb":"code","c01013b3":"code","f2708be8":"code","e93be80a":"markdown","bfbdda7d":"markdown","8f2936a6":"markdown"},"source":{"ec62ded7":"import numpy as np\nimport itertools\n#import pandas as pd\nclass Solution:\n    def __init__(self):\n        pass\n    def threeSum(self, nums): #-> list[list[int]]:\n        if(len(nums)>=3):\n            P = np.array(list(itertools.combinations(nums, 3)))\n            P.sort(axis=1)\n            P = P[P.sum(axis = 1) == 0].tolist()\n            P.sort()\n            list1 = []\n            for i,j in enumerate(P[0:len(P)-1]):\n                if(j == P[i+1]):\n                    pass\n                else:\n                    list1.append(j)\n            try:\n                list1.append(P[-1])\n            except:\n                pass\n            \n            return list1\n        else:\n            return []","3393b10d":"L =[-2,-7,-11,-8,9,-7,-8,-15,10,4,3,9,8,11,1,12,-6,-14,-2,-1,\n    -7,-13,-11,-15,11,-2,7,-4,12,7,-3,-5,7,-7,3,2,1,10,2,-12,-1,\n    12,12,-8,9,-9,11,10,14,-6,-6,-8,-3,-2,14,-15,3,-2,-4,1,-9,8,11,5,-14,-1,\n    14,-6,-14,2,-2,-8,-9,-13,0,7,-7,-4,2,-8,-2,11,-9,2,-13,-10,2,5,4,13,\n    13,2,-1,10,14,-8,-14,14,2,10]\n","de0e8969":"target = 0\n\nclass two_sum():\n    \n    def __init__(self):\n        pass\n    \n    def two_sum_list(self, list_nums):\n        \n        list_two_sum = []\n        list_nums.sort()\n        i = 0 \n        j =  len(list_nums) - 1\n        \n        while(i < j):\n            if((list_nums[i] + list_nums[j]) > target ):\n                j = j-1\n                #pass\n            elif((list_nums[i] + list_nums[j]) < target):\n                i = i+1\n                #pass\n            else:\n                list_two_sum.append((list_nums[i], list_nums[j]))\n                i = i+1\n                j = j-1\n       \n    ## Removing Duplicates\n        \n        list_two_sum.sort()\n        list1 = []\n        for i,j in enumerate(list_two_sum[0:len(list_two_sum)-1]):\n            if(j == list_two_sum[i+1]):\n                pass\n            else:\n                list1.append(j)\n        try:\n            list1.append(list_two_sum[-1])\n        except:\n            pass\n        \n        return list1","63e62f8b":"two_sum().two_sum_list(L)","97a16a8d":"target = 0\n\nclass ThreeSum():\n    \n    def __init__(self):\n        pass\n    \n    def three_sum_list(self, list_nums):\n        \n        list_sum = []\n        list_nums.sort()\n        \n        for k in range(len(list_nums)):\n            i = k+1 \n            j =  len(list_nums) - 1\n\n            while(i < j):\n                if((list_nums[k] + list_nums[i] + list_nums[j]) > target ):\n                    j = j-1\n                    #pass\n                elif((list_nums[k] + list_nums[i] + list_nums[j]) < target):\n                    i = i+1\n                    #pass\n                else:\n                    list_sum.append((list_nums[k], list_nums[i], list_nums[j]))\n                    i = i+1\n                    j = j-1\n       \n    ## Removing Duplicates\n        \n        list_sum.sort()\n        list1 = []\n        for i,j in enumerate(list_sum[0:len(list_sum)-1]):\n            if(j == list_sum[i+1]):\n                pass\n            else:\n                list1.append(j)\n        try:\n            list1.append(list_sum[-1])\n        except:\n            pass\n        \n        return list1","03887efb":"ThreeSum().three_sum_list(L)","c01013b3":"L =  [1,0,-1,0,-2,2] #[-3,-1,0,2,4,5] #\ntarget = 0\n\nclass FourSum():\n    \n    def __init__(self):\n        pass\n    \n    def four_sum_list(self, list_nums):\n        if(len(list_nums)>=4):\n            list_sum = []\n            list_nums.sort()\n            for l in range(len(list_nums)):\n                for k in range(len(list_nums[l+1:])):\n                    i = (l+1) + (k+1) \n                    j =  len(list_nums) - 1\n\n                    while(i < j):\n                        S = list_nums[l] + list_nums[l+1+k] + list_nums[i] + list_nums[j]\n                        if(S > target ):\n                            #print(S)\n                            j = j-1\n                            #pass\n                        elif(S < target):\n                            #print(S)\n                            i = i+1\n                            #pass\n                        else:\n                            #print(S)\n                            list_sum.append((list_nums[l] , list_nums[l+1+k], list_nums[i], list_nums[j]))\n                            i = i+1\n                            j = j-1\n\n        ## Removing Duplicates\n\n            list_sum.sort()\n            list1 = []\n            for i,j in enumerate(list_sum[0:len(list_sum)-1]):\n                if(j == list_sum[i+1]):\n                    pass\n                else:\n                    list1.append(j)\n            try:\n                list1.append(list_sum[-1])\n            except:\n                pass\n\n            return list1\n        else:\n            return []","f2708be8":"FourSum().four_sum_list(L)","e93be80a":"## Three Sum == target","bfbdda7d":"## Two Sum == target","8f2936a6":"## Four Sum == target"}}