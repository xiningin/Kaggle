{"cell_type":{"216141b5":"code","178e66dc":"code","9cf8d629":"code","830edd8c":"code","894f8fd2":"code","f4d0ba72":"code","4e8ab37d":"code","aba12276":"code","bf445ad9":"code","d48862a9":"code","a71f83cc":"markdown","7bba47dd":"markdown","4c343ff0":"markdown","36329459":"markdown","d324fdae":"markdown"},"source":{"216141b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","178e66dc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","9cf8d629":"df = pd.read_csv('\/kaggle\/input\/predicting-divorce\/divorce.csv')","830edd8c":"df.isna().sum()","894f8fd2":"Y = df.Divorce_Y_N\nX = df.drop(['Divorce_Y_N'],axis=1)","f4d0ba72":"X_train, X_test, Y_train, Y_test = train_test_split(\n    X, Y, test_size=0.33, random_state=42)","4e8ab37d":"neigh = KNeighborsClassifier(n_neighbors=3)\nneigh.fit(X_train, Y_train)","aba12276":"Y_pred = neigh.predict(X_test)","bf445ad9":"confusion_matrix(Y_test, Y_pred)","d48862a9":"print(classification_report(Y_test, Y_pred))","a71f83cc":"## Checking for NA values","7bba47dd":"### As there are no null values, so we can continue!","4c343ff0":"## Modelling for the dataset","36329459":"## Prediction and Results\n### Let's see how accurate is our model!","d324fdae":"## Doing Test Train Split"}}