{"cell_type":{"7fbd0c7d":"code","a8469fe2":"code","cf38cdb6":"code","48d3a3de":"code","2a0e2c4d":"code","d8adeaeb":"code","22fd3690":"code","4468f62b":"code","b0cbf940":"code","38e4e303":"code","618c33c2":"code","b5d28505":"code","885648be":"code","1ccf96cf":"code","0d7d9bee":"markdown","52666401":"markdown","6fef497e":"markdown","a483d2ac":"markdown"},"source":{"7fbd0c7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8469fe2":"import nltk\nimport re\nfrom nltk.stem.porter import PorterStemmer\nfrom nltk.stem import WordNetLemmatizer\nfrom nltk.corpus import stopwords","cf38cdb6":"data = pd.read_csv('\/kaggle\/input\/email-spam-ham-prediction\/sms_spam.csv')\ndata.head()","48d3a3de":"data.shape","2a0e2c4d":"message = data['text'].values","d8adeaeb":"len(message)","22fd3690":"corpus = []\nps = PorterStemmer()\nlemma = WordNetLemmatizer()\nfor i in range(len(message)):\n    text = re.sub('[^a-zA-Z]',' ',message[i])\n    text = text.lower()\n    text = text.split()\n    text = [lemma.lemmatize(word) for word in text if not word in set(stopwords.words('english'))]\n    text = ' '.join(text)\n    corpus.append(text)","4468f62b":"len(corpus)","b0cbf940":"from sklearn.feature_extraction.text import TfidfVectorizer\ncv = TfidfVectorizer()\nx= cv.fit_transform(corpus).toarray()","38e4e303":"len(x[0])\n","618c33c2":"y = pd.get_dummies(data['type'])\ny = y.iloc[:,1].values\ny","b5d28505":"from sklearn.model_selection import StratifiedKFold\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import accuracy_score\naccuracy = []\nskf = StratifiedKFold(n_splits=10)\nfor train_index,test_index in skf.split(x,y):\n    model = MultinomialNB()\n    model.fit(x[train_index],y[train_index])\n    y_pred = model.predict(x[test_index])\n    accuracy.append(accuracy_score(y[test_index],y_pred))\n    ","885648be":"len(accuracy)","1ccf96cf":"np.array(accuracy).mean()","0d7d9bee":"# **Importing all libraries**","52666401":"* re.sub take care's of only text like(a-z,A-Z) is selected rather than symbols like('.',',','!')\n* text.lower() is converting all capital letters if present to lowercase so if word is repeated we can find it\n* text.split() it is spliting the paragraph into words\n* [lemma.lemmatize(word) for word in text if not word in set(stopwords.words('english'))] is lemmatize the words and removing stopwords","6fef497e":"# **Building model**","a483d2ac":"# **preprocessing data**"}}