{"cell_type":{"bc2846ad":"code","0bafed2a":"code","2f499727":"code","ede2ad76":"code","329bea79":"code","3a687908":"code","6068e2aa":"code","c4633b05":"code","62fe9850":"code","86633215":"code","641d82d0":"code","8709f5d0":"code","8b6b04f4":"code","b73c94ce":"code","dbe5a717":"code","3151eb1e":"code","d2ff4e8e":"code","a36c6013":"code","e33511ba":"markdown","1a46fbfc":"markdown","898f8478":"markdown","fa373572":"markdown","ec628299":"markdown","df9597b5":"markdown","b4a66564":"markdown","30c71007":"markdown","c2e89e47":"markdown","4c344b5c":"markdown","ae4dbc2c":"markdown","bf7cbfa5":"markdown"},"source":{"bc2846ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0bafed2a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split","2f499727":"data=pd.read_csv('..\/input\/glass\/glass.csv')\ndata.head()","ede2ad76":"data.isnull().sum()","329bea79":"data.info","3a687908":"data.columns","6068e2aa":"data.shape","c4633b05":"data.describe()","62fe9850":"fig = plt.figure(figsize = (15,20))\nax = fig.gca()\ndata.hist(ax = ax)","86633215":"X=data.drop(['Type'],axis=1)\nX.head()","641d82d0":"Y=data['Type']","8709f5d0":"x_train,x_test,y_train,y_test=train_test_split(X,Y,random_state=4,test_size=0.20)","8b6b04f4":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(x_train,y_train)","b73c94ce":"from sklearn.metrics import mean_squared_error\npredict=lr.predict(x_test)\nprint(mean_squared_error(predict,y_test))\nprint(lr.score(x_test,y_test))","dbe5a717":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=10)\nknn.fit(x_train,y_train)","3151eb1e":"knn_predict=knn.predict(x_test)\nprint(knn.score(x_test,y_test))\nprint(mean_squared_error(knn_predict,y_test))","d2ff4e8e":"from sklearn.tree import DecisionTreeClassifier\ndt=DecisionTreeClassifier()\ndt.fit(x_train,y_train)\nknn_predict=dt.predict(x_test)\nprint(dt.score(x_test,y_test))\nprint(mean_squared_error(knn_predict,y_test))","a36c6013":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nlda=LinearDiscriminantAnalysis()\nlda.fit(x_train,y_train)\nknn_predict=lda.predict(x_test)\nprint(lda.score(x_test,y_test))\nprint(mean_squared_error(knn_predict,y_test))","e33511ba":"# KNeighborsClassifier Model","1a46fbfc":"# LinearRegression Model","898f8478":"# DecisionTreeClassifier Model","fa373572":"# Load and Prepare Data","ec628299":"# Data Visualization","df9597b5":"# Spliting Data","b4a66564":"# describe the dataset with some methods ","30c71007":"Check if the data has a null value","c2e89e47":"# Evaluate Algorithms","4c344b5c":"# Context\nThis is a Glass Identification Data Set from UCI. It contains 10 attributes including id. The response is glass type(discrete 7 values)","ae4dbc2c":"# Finaly The most model was LinearDiscriminantAnalysis that has 83.7% accuracy\n\nwe can increase the accuracy be geting more dataset","bf7cbfa5":"# LinearDiscriminantAnalysis Model"}}