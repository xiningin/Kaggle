{"cell_type":{"e3287053":"code","4c32b171":"code","e64dd3ce":"code","784e85d6":"code","58308f45":"code","8365629f":"code","dc3c9b01":"code","e9a8eee3":"code","a7e4a019":"code","ac400cde":"code","23e25abc":"code","64d39eea":"code","59f27734":"code","c9d172be":"code","2bf4c028":"code","d90d8e67":"code","e3148c94":"code","3bf103eb":"code","ed80785b":"code","cbee6d30":"code","af25cd7d":"code","f8d53cf8":"code","ce8be500":"code","d5e5f059":"code","5e15b9a9":"code","78f49847":"markdown","72dfd946":"markdown","190ac97c":"markdown","bb10f2f1":"markdown","2bc2bec6":"markdown","50870c3b":"markdown","bb9d9335":"markdown","9bac3573":"markdown","c0d5f5c6":"markdown","f1f0922c":"markdown","f1cf8979":"markdown","18eef6ac":"markdown","b06f5d3c":"markdown","6dca98b9":"markdown","247d9841":"markdown","8786a5bb":"markdown","0df47e8a":"markdown","f8680b4d":"markdown","baeb88b5":"markdown","a03ee5d9":"markdown","a70ee11b":"markdown","725ba25d":"markdown","89c8236e":"markdown","5ce23307":"markdown","be80da3a":"markdown","f272ce35":"markdown"},"source":{"e3287053":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import iqr\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import plot_roc_curve, roc_auc_score, f1_score\npd.set_option('precision', 3)\ndf = pd.read_csv('..\/input\/cardio-train22\/cardio_train.csv', sep = ';')\ndf.head()","4c32b171":"df.drop('id', axis = 1, inplace = True) #dropping 'id' column\nprint(df.shape)\nprint('There are {} NaN values in the dataset.'.format(df.isnull().sum().sum()))","e64dd3ce":"#Converting 'age' column from days to years:\ndf['age'] = (df['age'] \/ 365).round().astype('int64')\ndf.describe()","784e85d6":"plt.figure(figsize = (24, 6));\nplt.subplot(1, 4, 1)\nsns.boxplot(data = df, x = 'height');\nplt.subplot(1, 4, 2)\nsns.boxplot(data = df, x = 'weight');\nplt.subplot(1, 4, 3)\nsns.boxplot(data = df, x = 'ap_hi');\nplt.subplot(1, 4, 4)\nsns.boxplot(data = df, x = 'ap_lo');","58308f45":"boundaries = pd.DataFrame(columns = ['height', 'weight', 'ap_hi', 'ap_lo'],\n                          index = ['lower_boundary', 'upper_boundary'])\nfor i in ['height', 'weight', 'ap_hi', 'ap_lo']:\n  Q1, Q3 = df[i].quantile(0.25), df[i].quantile(0.75)\n  IQR = iqr(df[i], rng = (25, 75))\n  lower_boundary = Q1 - 1.5 * IQR\n  upper_boundary = Q3 + 1.5 * IQR\n  boundaries[i] = [lower_boundary, upper_boundary]\nboundaries","8365629f":"outliers = ((df < boundaries.iloc[0]) | (df > boundaries.iloc[1])).any(axis = 1)\ndf = df[~outliers]\n#The second way to filter:\n#for i in ['height', 'weight', 'ap_hi', 'ap_lo']:\n  #df = df[(df[i] >= boundaries.loc['lower_boundary', i]) & (df[i] <= boundaries.loc['upper_boundary', i])]","dc3c9b01":"#Let's see the result of cleaning:\nplt.figure(figsize = (26, 6));\nplt.subplot(1, 4, 1)\nsns.boxplot(data = df, x = 'height');\nplt.subplot(1, 4, 2)\nsns.boxplot(data = df, x = 'weight');\nplt.subplot(1, 4, 3)\nsns.boxplot(data = df, x = 'ap_hi');\nplt.subplot(1, 4, 4)\nsns.boxplot(data = df, x = 'ap_lo');","e9a8eee3":"df = df[~df['ap_hi'] < df['ap_lo']]\nprint('Cleaned dataset has shape: ', df.shape)","a7e4a019":"df.groupby('gender').agg({'height': 'mean'})","ac400cde":"gender = {1: 'female', 2: 'male'}\ndf['gender'] = df['gender'].replace(gender)\n#Adding new feature 'bmi' - Body mass index:\ndf['bmi'] = df['weight'] \/ (df['height'] \/ 100) ** 2\n#Adding new feature 'bmi_category':\ndf['bmi_category'] = np.where(df['bmi'] > 25, 1, 0)\ndf.head()","23e25abc":"#df.to_excel('cardio_train_cleaned.xlsx')","64d39eea":"corrmap = df.corr()\nplt.subplots(figsize = (10, 6))\nsns.heatmap(corrmap, vmax = 1, square = False, cmap = 'Reds');","59f27734":"plt.subplots(figsize = (10, 6)) \nsns.countplot(data = df, x = 'gender', linewidth = 1, edgecolor = sns.color_palette('dark', 1), palette = 'gnuplot2');","c9d172be":"plt.subplots(figsize = (10, 6)) \nsns.countplot(data = df, x = 'age');","2bf4c028":"plt.subplots(figsize = (10, 6))\nsns.countplot(data = df, x = 'age', hue = 'cardio', palette = 'Set2');","d90d8e67":"plt.subplots(figsize = (10, 6))\ndf_categorical = df.loc[:, ['cholesterol', 'gluc', 'smoke', 'alco', 'active']]\nsns.countplot(x = 'variable', hue = 'value', data = pd.melt(df_categorical));","e3148c94":"sns.countplot(data = df, x = 'cardio');","3bf103eb":"plt.figure(figsize = (20, 6));\nplt.subplot(1, 2, 1)\nsns.countplot(data = df, x = 'alco', hue = 'cardio');\nplt.subplot(1, 2, 2)\nsns.countplot(data = df, x = 'active', hue = 'cardio');","ed80785b":"plt.figure(figsize = (16, 5));\nsns.countplot(data = df, x = 'alco', hue = 'gender');","cbee6d30":"print('Percentage of male smokers: {} %.'.format(round(len(df[(df['gender'] == 'male') & (df['smoke'] == 1)]) \/\n                                                       len(df[df['gender'] == 'male']) * 100, 1)))\nprint('Percentage of female smokers: {} %.'.format(round(len(df[(df['gender'] == 'female') & (df['smoke'] == 1)]) \/\n                                                         len(df[df['gender'] == 'female']) * 100, 1)))","af25cd7d":"plt.subplots(figsize = (10, 6))\nsns.distplot(df[df['cardio'] == 0]['bmi'], color = 'g');\nsns.distplot(df[df['cardio'] == 1]['bmi'], color = 'r');","f8d53cf8":"#Encoding 'gender' values:\ndf = pd.get_dummies(df, columns = ['gender'])","ce8be500":"X, y = df.drop('cardio', axis = 1), df['cardio']\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 42, test_size = 0.3, shuffle = True)","d5e5f059":"models = [RandomForestClassifier(), XGBClassifier(), LGBMClassifier()]\nfor model in models:\n  model.fit(X_train, y_train);\n  print('{}:'.format(type(model).__name__))\n  print('Train dataset accuracy: {:.2f} %'.format(model.score(X_train, y_train) * 100))\n  print('5-fold cross validation mean score: {:.2f} %'.\n        format(np.mean(cross_val_score(model, X_train, y_train, cv = 5)) * 100))\n  print('Test dataset accuracy: {:.2f} %'.format(model.score(X_test, y_test) * 100))\n  print('ROC_AUC score: {:.3f}'.format(roc_auc_score(y_test, model.predict(X_test))))\n  print('F1 score: {:.3f}'.format(f1_score(y_test, model.predict(X_test))))\n  plot_roc_curve(model, X_test, y_test)\n  plt.plot([0, 1], [0, 1])\n  plt.show()\n  print('\\n')","5e15b9a9":"def plot_feature_importances(model):\n  features = X.columns\n  importances = model.feature_importances_\n  indices = np.argsort(importances)\n  plt.title('Feature importances')\n  plt.barh(range(len(indices)), importances[indices], color = 'b', align = 'center')\n  plt.yticks(range(len(indices)), [features[i] for i in indices])\n  plt.xlabel('Relative importance')\n  plt.show()\nfor model in models:\n  plt.figure(figsize = (14, 5));\n  print('{}:'.format(type(model).__name__))\n  plot_feature_importances(model)","78f49847":"Let's build 3 the most popular classifiers: RandomForest, XGBClassifier and LGBMClassifier. Then we are going to compare their metrics.","72dfd946":"Now let's drop patients who have 'ap_lo' less than 'ap_hi':","190ac97c":"###Modelling:","bb10f2f1":"Here we can see the most important features for the each of 3 classifiers. But, if a feature has low *feature_importance_* value for one of the above classifiers this does not mean, that it is uninformative. It more likely means, that it has been chosen by a tree, because another feature has the same infromation.\n\nUnlike linear models' coefficients, importances of features does not indicate their relationship with a specific class.\n\nFinally, this concludes my work with CVD dataset. Your comments and feedback are most welcome for me.","2bc2bec6":"Dataset's observations has approximately 2 times more women than men.","50870c3b":"People over 50 are more exposed to CVD. ","bb9d9335":"### Data preprocessing:","9bac3573":"In the issue, XGBClassifier has showed the best test result.","c0d5f5c6":"The dataset has 70,000 records of patients' data in 12 features. The target class 'cardio' equals 1, when a patient has cardiovascular disease, and 0, if a patient is healthy.\n\nThe task is to predict the presence or absence of cardiovascular disease (CVD) using the patients' objective and examinations input features.","f1f0922c":"So, for example, 99.3 % of all systolic blood pressure values ('ap_hi') in the dataset are within [90; 170].\n\nNow we can filter our dataset according to the above conditions:","f1cf8979":"Average '2' gender height is greater, therefore '2' is for male and '1' is for female.","18eef6ac":"As we can see, none of the features clearly correlates with the other.","b06f5d3c":"Men are more likely to drink alcohol than women.","6dca98b9":"### Vizualizations:\nPlotting correlation matrix for the data:","247d9841":"Most people have normal cholesterol and glucose levels. The vast majority do not drink alcohol. Most people are active.","8786a5bb":"Looks like there are a few medically impossible and unrealistic observations in the dataset. Columns 'age', 'height', 'weight', 'ap_hi', 'ap_lo' have outliers. For example, ap_hi = 16 020 and weight = 10. We should get rid of them.","0df47e8a":"The boxes' widths equal IQR (InterQuartile Range), and the \"whiskers\" limit points that fall within the interval $[Q1 - 1.5 * IQR ; Q3 + 1.5 * IQR]$.\nThis interval has approximately 99.3 % of all observations.\n\nLet us filter columns 'height', 'weight', 'ap_hi' and 'ap_lo' by the above interval so that we will exclude outliers.","f8680b4d":"There much fewer smokers among men.","baeb88b5":"Class 'cardio' is well balanced.\n\n**Few more conclusions:**","a03ee5d9":"# Cardio Vascular Disease (CVD) analysis\n","a70ee11b":"Seems like our observations are artificial, because of the above age distribution, alternating 'age' in step of 1.","725ba25d":"Features' description:\n1. Age | Objective Feature | age | int (days)\n2. Height | Objective Feature | height | int (cm)\n3. Weight | Objective Feature | weight | float (kg) |\n4. Gender | Objective Feature | gender | categorical |\n5. Systolic blood pressure | Examination Feature | ap_hi | int |\n6. Diastolic blood pressure | Examination Feature | ap_lo | int |\n7. Cholesterol | Examination Feature | cholesterol | 1: normal, 2: above normal, 3: well above normal |\n8. Glucose | Examination Feature | gluc | 1: normal, 2: above normal, 3: well above normal |\n9. Smoking | Subjective Feature | smoke | binary |\n10. Alcohol intake | Subjective Feature | alco | binary |\n11. Physical activity | Subjective Feature | active | binary |\n12. Presence or absence of cardiovascular disease | Target Variable | cardio | binary |","89c8236e":"As we can see, patients have more chances to get disease when bmi is more than ~25.","5ce23307":"Well, the answer to the most frequent question related to CVD. According to our data, the above plots mean that alcohol lovers and non-drinkers have approximately equal chances to get diseased CVD. And the same conslusion for active and non-active people.","be80da3a":"Our data is clean now.","f272ce35":"According to the world standard, bmi_category = 1 is for overweight, and 0 - for normal body weight.\nBody mass index is calculated as:\n\n$bmi = \\frac{weight}{(height \/ 100)^2}$\n\n***Summarize:***\n*   We have cleaned the data by $[Q1 - 1.5 * IQR ; Q3 + 1.5 * IQR]$ interval;\n*   We have added 2 new features: 'bmi' and 'bmi_category'."}}