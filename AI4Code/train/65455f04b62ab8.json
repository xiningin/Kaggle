{"cell_type":{"438346cd":"code","d049b74d":"code","cd1d45c4":"code","30b1a33c":"code","c8893e20":"code","18c1871f":"code","cf627204":"code","86bf2795":"code","6d9ab954":"code","7b6b203e":"code","35ec99a1":"code","c96a5c6d":"code","6517e086":"code","d15e1266":"code","b572028b":"code","fbc6755a":"code","7c49e34d":"code","af8586b5":"code","438b8743":"code","88936950":"code","5de8ee6a":"code","4d73ca82":"code","4de6abea":"code","c1b0bd6b":"code","cd7cee58":"code","d56aa3d8":"code","360259a5":"code","eaa0ed7e":"code","0b415138":"code","8bdbe913":"code","6c6cea02":"code","c3e4f6b2":"code","670e9a23":"code","f5902e27":"code","671c080b":"code","2bf48199":"code","6365aee6":"code","360a5674":"code","031ec051":"code","a08c61f5":"code","591ff0cc":"code","73049cb3":"code","248673d0":"code","ee57d1b6":"code","aad0cf10":"code","f1aaa4f5":"markdown","3fbc9de5":"markdown","26cb23c3":"markdown","5c938041":"markdown","9370ef41":"markdown","05e46590":"markdown","56dbbd76":"markdown","8c8c95ed":"markdown","f810b39c":"markdown","0c58a450":"markdown","69054bb7":"markdown","166dad16":"markdown","18591bcb":"markdown","245b3ea4":"markdown","3ebd6930":"markdown","ef086d1e":"markdown","39e48730":"markdown","9835fdfe":"markdown","209fac13":"markdown","52738d4e":"markdown","0f1b1e97":"markdown","17cbd6d0":"markdown","04135b77":"markdown"},"source":{"438346cd":"#importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom functools import reduce\nimport glob\nimport warnings\nwarnings.filterwarnings('ignore')","d049b74d":"#Read the GDP dataset \ndf=pd.read_csv('..\/input\/gdp-analysis-datasets\/ab40c054-5031-4376-b52e-9813e776f65e.csv.csv')\ndf.head()","cd1d45c4":"# Determining the shape of the dataframe and the number of null values\nprint(f'The shape of the data frame :',df.shape)","30b1a33c":"#Analysing the number of null values in each column\ndf.isnull().sum()","c8893e20":"#checking the % of NANs columnwise\ndf.isnull().sum()*100\/df.shape[0] ","18c1871f":"#Removing the data related to Union territories and West Bengal\ndf.drop(['West Bengal1','Andaman & Nicobar Islands','Chandigarh','Delhi','Puducherry'],axis=1,inplace=True)","cf627204":"#Removing the rows: '% Growth over the previous year' and 'GSDP-CURRENT PRICES' for the year 2016-17.\ndf = df[df['Duration']!='2016-17']\ndf","86bf2795":"#Selecting only the required financial years from 2013 to 2016\ndf=df[(df['Duration']=='2013-14')| (df['Duration']=='2014-15')| (df['Duration']=='2015-16')]\ndf","6d9ab954":"#Plotting the total average growth of states\nplt.figure(figsize=(14,6), dpi=80, facecolor='w')\ndf.iloc[:,:-1].groupby(['Items  Description']).get_group('(% Growth over previous year)').mean().sort_values().plot.bar(title='Average GDP across states')\nplt.xlabel('States',fontsize=14)\nplt.ylabel('Percentage growth in GDP',fontsize=14)","7b6b203e":"Comparison=df[(df['Items  Description']=='(% Growth over previous year)')][['Tamil Nadu', 'All_India GDP']].mean()\nprint(Comparison)\nprint(\"My state, Tamil Nadu has a GDP that is {} times higher than national average during the given duration\" .format(round(Comparison[0]\/Comparison[1],2)))\n","35ec99a1":" # dropping the column All India GDP since it is not required anymore \ndf.drop(['All_India GDP'], axis=1,inplace=True)\n#selecting total GDP of the states for the year 2015-16:\ndf=df[(df['Items  Description']=='GSDP - CURRENT PRICES (` in Crore)')&(df['Duration']=='2015-16')]\n","c96a5c6d":"#changing the shape of the dataframe to plot the values\ndf=pd.melt(df[df.columns[2:]]).sort_values(['value'])\ndf.head()","6517e086":"#Plotting the total GDP of the states for the year 2015-16\nfig, ax = plt.subplots(figsize=(16,8))\nsns.barplot(x=df.dropna(axis='rows').variable,y=df.dropna(axis='rows').value) # dropping the na values and plotting \nplt.title(' Total GDP of the states for the year 2015-16',fontsize=14)\nplt.xticks(rotation=90,fontsize=12)\n\nplt.xlabel('States',fontsize=14)\nplt.ylabel('GDP in Crores',fontsize=14)\n\n","d15e1266":"# Importing datasets\ndf_list = []   # initialize a list for storing all the dataframes\ncols = ['Item','2014-15']   # to read only the columns required for analysis\nfnames=glob.glob(\"\/kaggle\/input\/**\/NAD-*.csv\",recursive=True)\nfor file in fnames :  # reading only those files that start with NAD (data relevant to PArt I B)\n    state = file.split('.')[0].split('NAD-')[1].split('-')[0]  # extract the name of the state from file name\n    df = (pd.read_csv(file,usecols=cols))        # reading only specified columns from csv file\n    df.rename(columns={'2014-15':state},inplace=True)  # renaming the year column to indicate the name of the state\n    df_list.append(df)                              # storing the dataframe in a list  \n\n\ndf_state = reduce(lambda  left,right: pd.merge(left,right,on='Item',how='outer'), df_list)  # merging all the dataframe in the list\ndf_state.head()","b572028b":"df_state.info()","fbc6755a":"# Getting rid of '_' from state names\ndf_state.columns=df_state.columns.str.replace('_',' ')\ndf_state.columns","7c49e34d":"#Filtering out the union territories\ndf_state.drop(['Andaman Nicobar Islands','Chandigarh','Delhi','Puducherry'],axis=1,inplace=True)","af8586b5":"df_state.info()","438b8743":"df1= df_state.loc[df_state['Item']=='Per Capita GSDP (Rs.)']\ndf1=pd.melt(df1[df1.columns[2:]]).sort_values(['value'])","88936950":"plt.figure(figsize=(14,6), dpi=80, facecolor='w')\nsns.barplot(x=df1.variable,y=df1.value)\n\nplt.title(' GDP per capita  for the year 2014-15')\nplt.xticks(rotation=90)\n\nplt.xlabel('States')\nplt.ylabel('GDP Percapita (Rs.)')","5de8ee6a":"#Ratio of the highest per capita GDP to the lowest per capita GDP\nprint(\"The ratio of the highest per capita GDP to the lowest per capita GDP is {}\" .format(round(df1.value.max()\/df1.value.min(),2)))","4d73ca82":"df_state","4de6abea":"# Selecting the sectors and total GDP and storing it in a new dataframe\ndf_2=df_state.loc[(df_state['Item']=='Primary') | (df_state['Item']=='Secondary') | (df_state['Item']=='Tertiary') | (df_state['Item']=='Gross State Domestic Product')| (df_state['Item']=='Per Capita GSDP (Rs.)')]\ndf_2 = df_2.set_index('Item').T\ndf_2.head()","c1b0bd6b":"# Converting the contribution of primary, secondary and tertiary sectors into percentage of total GSDP\ndf_2['Primary'] = round(100* df_2['Primary']\/ df_2['Gross State Domestic Product'],2)\ndf_2['Secondary'] = round(100*df_2['Secondary']\/ df_2['Gross State Domestic Product'],2)\ndf_2['Tertiary'] =round(100* df_2['Tertiary']\/ df_2['Gross State Domestic Product'],2)\ndf_2=df_2.sort_values(by='Per Capita GSDP (Rs.)')  # to sort the dataframe based on GSDP\ndf_2.head()","cd7cee58":"# plotting the percentage contribution of each sector\nfig, ax = plt.subplots(figsize=(15,8))\ndf_2[['Primary','Secondary', 'Tertiary']].plot.bar(ax=ax,stacked=True)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title('Percentage Contribution of Primary, Secondary and Tertiary Sectors',fontsize=14)\nplt.xlabel('States',fontsize=14)\nplt.ylabel('Percentage',fontsize=14)","d56aa3d8":"#Categorising the states into four groups based on the GDP per capita\ndf_3=df_state.set_index('Item').T\ndf_3['Category']=pd.qcut(df_3['Per Capita GSDP (Rs.)'],[0.0,0.2,0.5,0.85,1],labels=['C4','C3','C2','C1'])\nprint(df_3.shape)\ndf_3.head()","360259a5":"df_3=df_3[['Agriculture, forestry and fishing','Mining and quarrying','Manufacturing','Electricity, gas, water supply & other utility services', 'Construction','Trade, repair, hotels and restaurants','Transport, storage, communication & services related to broadcasting','Financial services','Real estate, ownership of dwelling & professional services','Public administration','Other services','Gross State Domestic Product','Category']]\ndf_3.head()","eaa0ed7e":"df_cat=pd.DataFrame(df_3.groupby('Category').sum())\ndf_cat\n","0b415138":"#Transposing the data frame\ndf_cat=df_cat.reset_index().T\ndf_cat.head()","8bdbe913":"df_cat.columns=df_cat.iloc[0]  # renaming the columns\ndf_cat=df_cat[1:]  # dropping the first row which contains column headers\ndf_cat.head()","6c6cea02":"#defining a function to determine the sub-sectors that add upto 80%\nimport numpy as np\nfrom textwrap import wrap\ndef cum_sum(lst):\n    per = lst[:-1].sort_values(ascending=False).apply(lambda x : round((100*x)\/lst[-1],2))  # find the percentage contribution of sorted dataframe\n    cum_per=per.cumsum()  # find the cumulative percentage\n    n = np.argmin(np.abs(np.array(cum_per)-80)) # find the percentage closest to 80%\n    print(cum_per.head(n+1))  # print the sectors that contributes to 805 of total\n    # plotting contribution of the sub-sectors as a percentage of the GSDP of each category.  \n    fig, ax1 = plt.subplots(figsize=(15,6))\n    ax= per.plot.bar(ax=ax1)\n    labels = [item.get_text() for item in ax.get_xticklabels()]\n    labels = [\"\\n\".join(wrap(l,15)) for l in labels]\n    ax.set_ylabel('Percentage of GSDP')\n    ax.set_xticklabels(labels,rotation=0)","c3e4f6b2":"# Sectors that contribute to 80% of GSDP in category C1\ncum_sum(df_cat['C1'])","670e9a23":"# Sectors that contribute to 80% of GSDP in category C2\ncum_sum(df_cat['C2'])","f5902e27":"# Sectors that contribute to 80% of GSDP in category C3\ncum_sum(df_cat['C3'])","671c080b":"# Sectors that contribute to 80% of GSDP in category C4\ncum_sum(df_cat['C4'])","2bf48199":"#importing dataset of the dropout rate\ndrop_rate=pd.read_csv('..\/input\/gdp-analysis-datasets\/rs_session243_au570_1.1.csv')\ndrop_rate.head()","6365aee6":"# removing unnecessary columns\ndrop_rate.drop(['Sl. No.','Primary - 2012-2013','Primary - 2014-2015','Upper Primary - 2012-2013', 'Upper Primary - 2013-2014','Secondary - 2012-2013','Secondary - 2013-2014', 'Senior Secondary - 2012-2013', 'Senior Secondary - 2013-2014','Senior Secondary - 2014-2015'],axis=1,inplace=True)\nprint(f\"The shape is \", drop_rate.shape)\ndrop_rate.head()\n","360a5674":"# Renaming columns\ndrop_rate.rename(columns={'Level of Education - State':'State','Primary - 2014-2015.1':'Primary','Upper Primary - 2014-2015':'Upper Primary','Secondary - 2014-2015':'Secondary'},inplace=True)\n# dropping rows that correapond to union territories\nrows_to_drop = ['A & N Islands','Chandigarh', 'Dadra & Nagar Haveli','Daman & Diu','Delhi','Lakshadweep','Puducherry','West Bengal','All India']\ndrop_rate.drop(pd.Index(np.where(drop_rate['State'].isin(rows_to_drop))[0]), inplace = True)\n# setting state column as index to facilitate merging\ndrop_rate.set_index('State',drop=True,inplace=True)\nprint(drop_rate.shape)\ndrop_rate.head()","031ec051":"df_3=df_state.set_index('Item').T\ndf_3.index.rename('State',inplace=True)\ndf_3.head()\n","a08c61f5":"# adding the Per Capita GDP column to drop out rate data frame\ndrop_rate['Per Capita GSDP (Rs.)']=df_3['Per Capita GSDP (Rs.)']\ndrop_rate.isnull().sum() # checking NaN values","591ff0cc":"drop_rate","73049cb3":"# The NaN values in Per Capita GSDP column is due to the mismatch of row names in the two dataframes.\n# So the column names of drop_rat dataframe is renamed to match that of the df_state column\ndrop_rate.rename({'Chhatisgarh': 'Chhattisgarh','Jammu and Kashmir' : 'Jammu Kashmir', 'Uttrakhand' : 'Uttarakhand'},axis=0,inplace=True)\n# Percapita GSDP column is overwritten now\ndrop_rate['Per Capita GSDP (Rs.)']=df_3['Per Capita GSDP (Rs.)']\ndrop_rate","248673d0":"# To determine the correlation between Per Capita GSDP and drop out rate in Primary education\nsns.scatterplot(drop_rate['Primary'],drop_rate['Per Capita GSDP (Rs.)'])\nplt.title('Dropout rate in Primary education vs GSDP')","ee57d1b6":"# To determine the correlation between Per Capita GSDP and drop out rate in Secondary education\nsns.scatterplot(drop_rate['Upper Primary'],drop_rate['Per Capita GSDP (Rs.)'])\nplt.title('Dropout rate in Upper Primary education vs GSDP')","aad0cf10":"# To determine the correlation between Per Capita GSDP and drop out rate in Secondary education\nsns.scatterplot(drop_rate['Secondary'],drop_rate['Per Capita GSDP (Rs.)'])\nplt.title('Dropout rate in Secondary education vs GSDP')","f1aaa4f5":"#### Categorisation of the States based on GDP per capita","3fbc9de5":"From the above plot it is clear that Mizoram,Tripura and Nagaland  are growing consistently fast while Goa and Meghalaya are struggling .","26cb23c3":"### Percentage contribution of primary, secondary and tertiary sectors as a percentage of total GDP for all  states.","5c938041":"Tamil Nadu, Uttar Pradesh, Karnataka, Gujarat and Andhra Pradesh are the top five states having the highest GDP and Sikkim,Arunacahal Pradesh, Meghalaya , Goa and Jammu & Kashmir are the bottom five states having the lowest GDP for the year 2015-16. ","9370ef41":"**Part I-A:**\n\nFor the analysis below, use the Data I-A.\n1. Remove the rows: '(% Growth over the previous year)' and 'GSDP - CURRENT PRICES (` in Crore)' for the year 2016-17.\n1. Calculate the average growth of states for the duration 2013-14, 2014-15 and 2015-16 by taking the mean of the row '(% Growth over previous year)'. Compare the calculated values and plot them for the states. Make appropriate transformations, if necessary, to plot the data. Report the average growth rates of the various states:\n    *    Which states have been growing consistently fast, and which ones have been struggling?\n    *    Curiosity exercise: What has been the average growth rate of your home state, and how does it compare to the national average over this duration?\n1. Plot the total GDP of the states for the year 2015-16:\n    *  Identify the top 5 and the bottom 5 states based on total GDP.\n\n \n\n**Part I-B:**\n\nPerform the analysis only for the duration 2014-15. \n1. Filter out the union territories (Delhi, Chandigarh, Andaman and Nicobar Islands, etc.) for further analysis, as they are governed directly by the centre, not state governments.\n1. Plot the GDP per capita for all the states.\n1. Identify the top 5 and the bottom 5 states based on the GDP per capita.\n    *  Find the ratio of the highest per capita GDP to the lowest per capita GDP.\n    *  Plot the percentage contribution of the primary, secondary and tertiary sectors as a percentage of the total GDP for all the states.\n1. Categorise the states into four groups based on the GDP per capita (C1, C2, C3, C4, where C1 would have the highest per capita GDP and C4, the lowest). The quantile values are (0.20,0.5, 0.85, 1), i.e., the states lying between the 85th and the 100th percentile are in C1; those between the 50th and the 85th percentiles are in C2, and so on.\n1. For each category (C1, C2, C3, C4):\n    * Find the top 3\/4\/5 sub-sectors (such as agriculture, forestry and fishing, crops, manufacturing etc., not primary, secondary and tertiary) that contribute to approximately 80% of the GSDP of each category.\n    * Plot the contribution of the sub-sectors as a percentage of the GSDP of each category.  ","05e46590":"From the above information, it is clear that data pertaining to the column West Bengal is all NAN. Hence it has to be removed","56dbbd76":"### GDP per capita for all states","8c8c95ed":"For Upper Primary education, though we don't observe a strong negative corelation, however we can notice a decreasing trend in the graph which indicates that the drop out rate in Upper Primary education decreases with increase in GDP","f810b39c":"#### Ratio of the highest per capita GDP to the lowest per capita GDP","0c58a450":"#  Part-I: GDP ANALYSIS OF INDIAN STATES ","69054bb7":"Thus from the above plot we can conclude that Bihar,Utta Pradesh, Assam, Jharkhand and Madhya Pradesh are the bottom five states and Goa, Sikkim, Haryana,Kerala and Uttrakhand are the top five states in terms of GDP Percapita.","166dad16":"## Total GDP of the states for the year 2015-16","18591bcb":"## Part I-A:","245b3ea4":"The results shown above suggests that for most of the states, secondary and tertiary sectors are the major contributors of the state's GDP. For a very few states like Arunachal Pradesh and Madhya pradesh, Primary sector is the major contibutor. It is surprising to note that secondary or tertiary sectors are major contributors for states with lowest GDP like Mizoram and Sikkim as well as for states with highest GDP like Tamil Nadu and Maharashtra","3ebd6930":"Drop out rate for secondary education level is randomly distributed upto Per Capita GSDP of Rs.150000.However the drop out rate is higher than in other level of education.We can also observe that the drop out rate is higher for a GSDP of Rs.200000 and above also ","ef086d1e":"### Average growth of states for three years from 2013 to 2016","39e48730":"# Part-II: GDP and Education Dropout Rates","9835fdfe":"**Part-II: GDP and Education**\n\nAnalyse if there is any correlation of GDP per capita with dropout rates in education (primary, upper primary and secondary) for the year 2014-2015 for each state. Choose an appropriate plot to conduct this analysis.Write down the key insights you draw from this data:\n\n","209fac13":"### Curiosity Exercise","52738d4e":"Drop out rate is very high when Per Capita GSDP is less than Rs. 70000 appproximately and becomes very less when Per Capita GSDP is greater than 160000. This decreasing trend in the graph indicates that the drop out rate in Primary education decreases with increase in GDP.","0f1b1e97":"Now, we can observe that there are no NaN values in Per capita GSDP column. The NaN values in the other columns may be due\nto missing information .  Since these numbers can't be imputed, the missing values are not filled","17cbd6d0":"**Assignment: GDP Analysis**","04135b77":"## Part I-B"}}