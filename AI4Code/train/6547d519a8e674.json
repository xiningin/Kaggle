{"cell_type":{"cc4c5819":"code","b580aeee":"code","f951d1be":"code","5fc47d8f":"code","06eafcae":"code","08793839":"code","dab9cb05":"code","aa517db9":"code","119fdfc4":"code","fbbbd5bd":"code","1ab54449":"code","6093af06":"code","56eb9389":"code","eba41d58":"code","8a2332b1":"markdown","a546fecd":"markdown","0167fdc1":"markdown","c806197f":"markdown","fcd622e1":"markdown","e455efee":"markdown","f5230465":"markdown","02485470":"markdown","786136e5":"markdown","a556c1f9":"markdown","3840bd7c":"markdown"},"source":{"cc4c5819":"import pandas as pd #for handling data and dataframe\nimport seaborn as sns #for plotting different curves and graphs\nimport numpy as np #for algebraic manipulation of the datasets\nimport matplotlib.pyplot as plt","b580aeee":"df=pd.read_csv(\"..\/input\/calcofi\/bottle.csv\", low_memory=False) #df.count() use this to count the no of items column wise in the datset. There is a total of 864863 elements\ndf.head() #first five rows of the dataset will be returned\n","f951d1be":"df=df[['Salnty','T_degC']]\ndf\n","5fc47d8f":"ax=sns.scatterplot(x=df.Salnty, y=df.T_degC)\nax.set(title='temperature versus salinity graph')","06eafcae":"df.isnull().sum()   #finds the number of missing values in the dataset","08793839":"#using simple imputer function we fill the missing data with the mean value of the attribute \nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values = np.nan, strategy = \"most_frequent\")\nimputer.fit(df)\ndf = imputer.transform(df)\ndf","dab9cb05":"X=df[:,0].reshape(-1, 1) #obtaining the first column\nY=df[:,1]#obtaining the second column\nprint(X)\nprint(Y)","aa517db9":"from sklearn.model_selection import train_test_split #to split the data set into tainh test data\nX_train,X_test,y_train,y_test=train_test_split(X, Y, test_size = 0.25, random_state = 0) #test_size=0.2 implies that the test part of the data will be 20%","119fdfc4":"print(X_train)\nprint(X_test)\nprint(y_train)\nprint(y_test)","fbbbd5bd":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression()\nreg.fit(X_train,y_train)\n","1ab54449":"y_pred = reg.predict(X_test)\ny_pred","6093af06":"ax=sns.scatterplot(X_train.reshape((-1)),y_train) #creates a graph of train data temperature vs salinity \nax.set(xlabel=\"Salinity\",ylabel='Teperature',title='TEMPERATURE VS SALINITY  ')\nsns.scatterplot(x=X_train.reshape((-1)),y=reg.predict(X_train))#creates a graph of salinity and temperature. Here temperature value is predicted using salinity(train).the points therefore lie on a regression line\n","56eb9389":"# regression coefficients\nprint('Coefficients:',reg.coef_)\n# regression intercept\nprint('Intercept:' ,reg.intercept_)","eba41d58":"#variance score or the R-squared value: 1 means perfect prediction\nprint('Variance score: {}'.format(reg.score(X_test, y_test)))","8a2332b1":"## Ploting a scatterplot graph to visualize the data","a546fecd":"# Visualizing the trained data ","0167fdc1":"### selecting temperature(T_degC) and salinity(Salnty) columns to evaluate further","c806197f":"# Predicting the temperature of water based on its salinity","fcd622e1":"# Predicting the test results ","e455efee":"## Using the training part of the data to train the simple regression model","f5230465":"## Effeciency of the model","02485470":"## Creating the indepent(x) and dependent (y) variables\n","786136e5":"## Splitting the dataset into train and test","a556c1f9":"## Loading the data set\n","3840bd7c":"## Dealing with the missing data"}}