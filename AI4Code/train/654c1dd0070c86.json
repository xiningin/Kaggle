{"cell_type":{"cabc7459":"code","12249e22":"code","d0916f08":"code","16c2009b":"code","787d0967":"code","fe8a3cec":"code","89ee687b":"code","3835a7e7":"code","b5a2ad6d":"code","f64e0560":"code","88ca776b":"code","77f353a5":"code","7f88c2d8":"code","22461c19":"code","c5125d3b":"code","3147a8e6":"code","cd1c8696":"code","f2504630":"code","28ffa9d9":"code","17ccc5e4":"code","020238fe":"code","acbdfe5a":"code","e3563906":"code","b7570249":"code","a3c553c1":"code","176e1548":"code","3d1cccef":"code","d36765e5":"code","50bc909d":"code","52cc5dca":"code","73768132":"markdown","48ed31d3":"markdown","3a560445":"markdown","5201f3bd":"markdown","2a5e4210":"markdown","85ad9cb4":"markdown","0ffc3394":"markdown","7ace482b":"markdown","33914614":"markdown"},"source":{"cabc7459":"# packages\n\n# standard\nimport numpy as np\nimport pandas as pd\n\n# plots\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","12249e22":"# read data\ndf = pd.read_csv('..\/input\/crime-and-weed\/crime_marijuana.csv')","d0916f08":"# MJ_RELATION_TYPE has \"\\r\" at the end => clean up first\ndef clean_up(i_str):\n    return i_str[:-1]\n\ndf.MJ_RELATION_TYPE = list(map(clean_up, df.MJ_RELATION_TYPE))","16c2009b":"# preview\ndf.head()","787d0967":"# dimensions\ndf.shape","fe8a3cec":"# all columns\nprint(list(df.columns))","89ee687b":"# convert dates\ndf.FIRST_OCCURENCE_DATE = pd.to_datetime(df.FIRST_OCCURENCE_DATE)\ndf.LAST_OCCURENCE_DATE = pd.to_datetime(df.LAST_OCCURENCE_DATE)\ndf.REPORTDATE = pd.to_datetime(df.REPORTDATE)","3835a7e7":"df.FIRST_OCCURENCE_DATE.describe(datetime_is_numeric=True)","b5a2ad6d":"df.LAST_OCCURENCE_DATE.describe(datetime_is_numeric=True)","f64e0560":"df.REPORTDATE.describe(datetime_is_numeric=True)","88ca776b":"plt.scatter(df['FIRST_OCCURENCE_DATE'],df['REPORTDATE'])\nplt.xlabel('FIRST_OCCURENCE_DATE')\nplt.ylabel('REPORTDATE')\nplt.grid()\nplt.show()\n\nplt.scatter(df['FIRST_OCCURENCE_DATE'],df['LAST_OCCURENCE_DATE'])\nplt.xlabel('FIRST_OCCURENCE_DATE')\nplt.ylabel('LAST_OCCURENCE_DATE')\nplt.grid()\nplt.show()","77f353a5":"# add date differences to data frame\ndf['LAG_REPORT'] = list(map(lambda x:x.days, df['REPORTDATE'] - df['FIRST_OCCURENCE_DATE']))\n\ndf['LAG_LAST'] = list(map(lambda x:x.days, df['LAST_OCCURENCE_DATE'] - df['FIRST_OCCURENCE_DATE']))\ndf['LAG_LAST'] = df.LAG_LAST.fillna(0).astype(int)\n\n# and plot them\ndf.LAG_REPORT.plot(kind='hist', bins=25)\nplt.title('Lag report date \/ first occurrence date')\nplt.grid()\nplt.show()\n\ndf.LAG_REPORT.plot(kind='hist', bins=25)\nplt.title('Lag last occurrence date \/ first occurrence date')\nplt.grid()\nplt.show()","7f88c2d8":"# show extremes\ndf[df.LAG_REPORT > 50]","22461c19":"# show extremes\ndf[df.LAG_LAST > 50]","c5125d3b":"# extract year and month (use first occurence as basis)\ndf['YEAR'] = df.FIRST_OCCURENCE_DATE.dt.year\ndf['MONTH'] = df.FIRST_OCCURENCE_DATE.dt.month\ndf['YEAR_MONTH'] = df.YEAR.astype(str) + '-' + df.MONTH.astype(str)","3147a8e6":"# convert ids to factors\ndf['DISTRICT_ID'] = df['DISTRICT_ID'].astype(object)\ndf['PRECINCT_ID'] = df['PRECINCT_ID'].astype(object)\ndf['OFFENSE_CODE'] = df['OFFENSE_CODE'].astype(object)","cd1c8696":"plt.figure(figsize=(8,6))\ndf.DISTRICT_ID.value_counts().plot(kind='bar')\nplt.title('DISTRICT')\nplt.grid()\nplt.show()","f2504630":"plt.figure(figsize=(12,8))\ndf.PRECINCT_ID.value_counts().plot(kind='bar')\nplt.title('PRECINCT')\nplt.grid()\nplt.show()","28ffa9d9":"plt.figure(figsize=(16,6))\ndf.OFFENSE_CATEGORY_ID.value_counts().plot(kind='bar')\nplt.title('OFFENSE_CATEGORY')\nplt.grid()\nplt.show()","17ccc5e4":"plt.figure(figsize=(18,6))\ndf.OFFENSE_TYPE_ID.value_counts().plot(kind='bar')\nplt.title('OFFENSE_TYPE')\nplt.grid()\nplt.show()","020238fe":"plt.figure(figsize=(8,6))\ndf.MJ_RELATION_TYPE.value_counts().plot(kind='bar')\nplt.title('MJ_RELATION')\nplt.grid()\nplt.show()","acbdfe5a":"plt.figure(figsize=(18,6))\ndf.NEIGHBORHOOD_ID.value_counts().plot(kind='bar')\nplt.title('NEIGHBORHOOD')\nplt.grid()\nplt.show()","e3563906":"plt.figure(figsize=(10,6))\ndf.YEAR.value_counts().sort_index().plot(kind='bar') # use sort_index to keep natural order\nplt.title('YEAR')\nplt.grid()\nplt.show()","b7570249":"# plot frequency by month\nplt.figure(figsize=(10,6))\ndf.MONTH.value_counts().sort_index().plot(kind='bar') # use sort_index to keep natural order\nplt.title('MONTH')\nplt.grid()\nplt.show()","a3c553c1":"# identify most active year\/month combinations\nplt.figure(figsize=(18,6))\ndf.YEAR_MONTH.value_counts().plot(kind='bar') # this time we prefer result sorted by size!\nplt.title('YEAR_MONTH')\nplt.grid()\nplt.show()","176e1548":"# interactive scatter plot - color code district\nfig = px.scatter(df, x='GEO_X', y='GEO_Y', color='DISTRICT_ID', hover_data=['OFFENSE_TYPE_ID'], opacity=0.5)\nfig.update_layout(title='Crime Map (by District)',\n                  xaxis_title='GEO_X',\n                  yaxis_title='GEO_Y')\nfig.show()","3d1cccef":"# interactive scatter plot - color code offense category\nfig = px.scatter(df, x='GEO_X', y='GEO_Y', color='OFFENSE_CATEGORY_ID', hover_data=['OFFENSE_TYPE_ID'], opacity=0.5)\nfig.update_layout(title='Crime Map (by Offense Category)',\n                  xaxis_title='GEO_X',\n                  yaxis_title='GEO_Y')\nfig.show()","d36765e5":"# interactive scatter plot - color code industry\/non-industry \nfig = px.scatter(df, x='GEO_X', y='GEO_Y', color='MJ_RELATION_TYPE', hover_data=['MJ_RELATION_TYPE'], opacity=0.5)\nfig.update_layout(title='Crime Map (by MJ_RELATION_TYPE)',\n                  xaxis_title='GEO_X',\n                  yaxis_title='GEO_Y')\nfig.show()","50bc909d":"# interactive scatter plot - color code year\nfig = px.scatter(df, x='GEO_X', y='GEO_Y', color='YEAR', hover_data=['YEAR'], opacity=0.5)\nfig.update_layout(title='Crime Map (by Year)',\n                  xaxis_title='GEO_X',\n                  yaxis_title='GEO_Y')\nfig.show()","52cc5dca":"# interactive scatter plot - color code month \nfig = px.scatter(df, x='GEO_X', y='GEO_Y', color='MONTH', hover_data=['YEAR'], opacity=0.5)\nfig.update_layout(title='Crime Map (by Month)',\n                  xaxis_title='GEO_X',\n                  yaxis_title='GEO_Y')\nfig.show()","73768132":"# Dates","48ed31d3":"# Exploration and interactive visualization of crime locations in Denver","3a560445":"# Explore categorical variables","5201f3bd":"#### More \"activity\" in the summer months. Not surprising.","2a5e4210":"# Geography","85ad9cb4":"#### 2020 is obviously incomplete => rather ignore","0ffc3394":"# Time","7ace482b":"#### Compare dates","33914614":"#### We will focus on first occurence for the following"}}