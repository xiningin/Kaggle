{"cell_type":{"cdfc7958":"code","86ca1456":"code","16128437":"code","811f21ea":"code","e26b6251":"code","3a031e79":"code","87161191":"code","80236abd":"code","f5557bea":"code","ee3d2501":"code","5b6e1277":"code","d2ae3dfa":"code","691586b9":"markdown","653b4b96":"markdown","269ac1e5":"markdown","9fbc1dce":"markdown","54dc6322":"markdown","027a566d":"markdown","ca86320f":"markdown","2eda0a10":"markdown","99170e22":"markdown","dbe6921e":"markdown","be862a1a":"markdown"},"source":{"cdfc7958":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86ca1456":"df = pd.read_csv(\"\/kaggle\/input\/melbourne-housing-snapshot\/melb_data.csv\")\ndf.head()","16128437":"#Javobingizni shu yerga yozing\n","811f21ea":"#Javobingizni shu yerga yozing\n","e26b6251":"#Javobingizni shu yerga yozing\n","3a031e79":"#Javobingizni shu yerga yozing\n","87161191":"#Javobingizni shu yerga yozing\n","80236abd":"#Javobingizni shu yerga yozing\n","f5557bea":"#Javobingizni shu yerga yozing\n","ee3d2501":"#Javobingizni shu yerga yozing\n","5b6e1277":"#Javobingizni shu yerga yozing\n","d2ae3dfa":"#Javobingizni shu yerga yozing\n","691586b9":"## 2-VAZIFA. `df` haqida statistik ma'lumotlarni chiqaring","653b4b96":"Yuqoridagi jadval Avstraliyaning Melburn shahridagi sotiladigna uylar haqidagi ma'lumotlarni jamlagan. Batafsil https:\/\/www.kaggle.com\/dansbecker\/melbourne-housing-snapshot\/home","269ac1e5":"## 7-VAZIFA. Eng ko'p NaN qiymatlar bor ustundagi NaN qatorlarini tashlab yuboring (natijani SAQLAMANG!!!)\u00b6","9fbc1dce":"## 1-VAZIFA: `df` qatorlari sonini chiqaring","54dc6322":"## 8-VAZIFA. Eng kam `NaN` qiymatlar mavjud ustunning **`NaN` qatnashgan qatorlarini** tashlab yuboring va natijani asl `df` da saqlab qoling.","027a566d":"## 3-VAZIFA: Har bir ustundagi `NaN` qiymatlar sonini chiqaring","ca86320f":"## 10-VAZIFA. Yuqoridagi `df` ni yangi `melb_data.csv` fayliga yozib oling va `hdf` fayl bilan birga GitHub akkauntingizga yuklang.\n**`df` indeksini `csv` faylga yozmang!**\n\nKeyingi amaliyotda bu fayllardan foydalanamiz.\n\nFaylni kaggledan kompyuterga yuklab olish:\n\n![](https:\/\/i.imgur.com\/xXTCJmi.png)\n![](https:\/\/i.imgur.com\/0OqZsSu.png)","2eda0a10":"## 4-VAZIFA. Har bir ustun uchun `NaN` qiymatlar necha fozini tashkil qilishini toping","99170e22":"## 6-VAZIFA. Barcha `NaN` bor ustunlarni tashlab yuboring (natijani **SAQLAMANG!!!**)","dbe6921e":"## 9-VAZIFA. Yakuniy `df` ni `hdf` formatida saqlab qo'ying\nKaggle da fayllarni o'ng burchakda `Data` tugmasini bosish orqali ko'rish (yuklab olish) mumkin:\n\n![](https:\/\/i.imgur.com\/UeVJbf6.png)","be862a1a":"## 5-VAZIFA. Barcha `NaN` qatnashgan qatorlarni tashlab yuboring (natijani **SAQLAMANG!!!**)"}}