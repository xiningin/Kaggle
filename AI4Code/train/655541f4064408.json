{"cell_type":{"dabf7116":"code","518a0f98":"code","7be60155":"code","22a58800":"code","178c6b56":"code","244a7d80":"code","cd686ac6":"code","82ffdef6":"code","928a0af7":"code","7f506bea":"code","200f216d":"code","24a20f35":"code","9fcbd413":"code","aa48a85a":"code","4e24f52c":"code","57f3f6e6":"code","3c4471e3":"code","802b1d8f":"code","cf61216d":"code","e772dddc":"code","6202718f":"code","0c1fed11":"code","0d16a741":"code","fa0e52b6":"code","0deadb6f":"code","c616bc77":"code","7a0fd727":"code","6c536424":"code","f5127e53":"code","1d7dae34":"code","03d8d848":"code","e7830f11":"code","1332c08e":"code","d305ed00":"code","7717deee":"code","c0bf0452":"code","b7a1468b":"code","a443e2c8":"markdown","4cb1545f":"markdown","c77d57c3":"markdown","c4885d0c":"markdown","263d81a9":"markdown","4051501a":"markdown","18c224d8":"markdown","6d0ec393":"markdown","146c2734":"markdown"},"source":{"dabf7116":"import numpy as np\nimport pandas as pd\nimport os\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nimport xgboost as xgb","518a0f98":"!pip install fastai2","7be60155":"!pip install fastcore==0.1.35","22a58800":"import fastcore\nimport fastai2\nfrom fastai2.tabular.all import *","178c6b56":"df_train= pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test= pd.read_csv('..\/input\/titanic\/test.csv')","244a7d80":"data = pd.concat([df_train, df_test], sort=False)","cd686ac6":"data['Sex'].replace(['male','female'], [0, 1], inplace=True)\ndata['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\ndata['Fare'].fillna(np.mean(data['Fare']), inplace=True)\ndata['fare_value']=data['Fare']\/50\nage_avg = data['Age'].mean()\nage_std = data['Age'].std()\ndata['Age'].fillna(np.random.randint(age_avg - age_std, age_avg + age_std), inplace=True)\ndata['age_value']=data['Age']\/50\ndata['family'] = (data['SibSp'] + data['Parch'])\/5\ndata['isAlone'] = 0\ndata.loc[data['family'] > 0, 'isAlone'] = 1\ndelete_columns = ['Name','SibSp','Parch','Ticket','Cabin','Age','Fare']\ndata.drop(delete_columns, axis=1, inplace=True)","82ffdef6":"data","928a0af7":"print(data.columns.tolist())","7f506bea":"df_train = data[:len(df_train)]\ndf_test = data[len(df_train):]","200f216d":"df_train.describe()","24a20f35":"df_train.isnull().sum().sort_index()\/len(df_train)","9fcbd413":"df_train.dtypes\ng_train = df_train.columns.to_series().groupby(df_train.dtypes).groups\ng_train","aa48a85a":"cat_names= ['Pclass', 'Sex', 'Embarked', 'isAlone',]\ncont_names = ['fare_value', 'age_value', 'family', ]","4e24f52c":"splits = RandomSplitter(valid_pct=0.2)(range_of(df_train))\nsplits","57f3f6e6":"tp = TabularPandas(df_train, procs=[Categorify, FillMissing, Normalize],\n                   cat_names = cat_names,\n                   cont_names = cont_names,\n                   y_names='Survived',\n                   splits=splits)","3c4471e3":"print(type(tp))","802b1d8f":"g_train =tp.train.xs.columns.to_series().groupby(tp.train.xs.dtypes).groups\ng_train","cf61216d":"tp.train","e772dddc":"tp.train.xs","6202718f":"tp.train.ys.values.ravel()","0c1fed11":"X_train, y_train = tp.train.xs, tp.train.ys.values.ravel()\nX_valid, y_valid = tp.valid.xs, tp.valid.ys.values.ravel()","0d16a741":"X_train.head()","fa0e52b6":"rnf= RandomForestClassifier(n_estimators=100, n_jobs=-1)\nrnf.fit(X_train,y_train)","0deadb6f":"y_pred=rnf.predict(X_valid)\naccuracy_score(y_pred, y_valid)","c616bc77":"clf = xgb.XGBClassifier()\nclf.fit(X_train,y_train)","7a0fd727":"y_pred=clf.predict(X_valid)\naccuracy_score(y_pred, y_valid)","6c536424":"df_test.head()","f5127e53":"df_test.dtypes\ng_train =df_test.columns.to_series().groupby(df_test.dtypes).groups\ng_train","1d7dae34":"test = TabularPandas(df_test, procs=[Categorify, FillMissing,Normalize],\n                   cat_names = cat_names,\n                   cont_names = cont_names,\n                   )","03d8d848":"X_test= test.train.xs","e7830f11":"X_test.head()","1332c08e":"X_test.dtypes\ng_train =X_test.columns.to_series().groupby(X_test.dtypes).groups\ng_train","d305ed00":"y_pred_rnf=rnf.predict(X_test)\ny_pred_rnf= y_pred_rnf.astype(int)","7717deee":"output_rnf= pd.DataFrame({'PassengerId':df_test.PassengerId, 'Survived': y_pred_rnf})\noutput_rnf.to_csv('submission_rnf.csv', index=False)\noutput_rnf","c0bf0452":"y_pred_clf=clf.predict(X_test)\ny_pred_clf= y_pred_clf.astype(int)","b7a1468b":"output_clf= pd.DataFrame({'PassengerId':df_test.PassengerId, 'Survived': y_pred_clf})\noutput_clf.to_csv('submission_clf.csv', index=False)\noutput_clf","a443e2c8":"### XGBClassifier","4cb1545f":"### Tabular Pandas for train data","c77d57c3":"# Predict","c4885d0c":"# Titanic Classify with Fastai TabularPandas\nhttps:\/\/docs.fast.ai\/tabular.core.html#TabularPandas<br\/>\nThis notebook refferred to the following notebook.<br\/>\nhttps:\/\/www.kaggle.com\/hitesh1724\/titanic-1-fastai-beginner-tutorial<br\/>\nhttps:\/\/www.kaggle.com\/stpeteishii\/titanic-shufflesplit-xgboost\/notebook","263d81a9":"# Data Processing","4051501a":"# Model","18c224d8":"### Tabular Pandas for test data","6d0ec393":"### use tabularpandas, predict by fastai\nhttps:\/\/www.kaggle.com\/stpeteishii\/titanic2-fastai-with-tabularpandas\n\n### use tabularpandas, predict not by fastai (this notebook)\nhttps:\/\/www.kaggle.com\/stpeteishii\/titanic-classify-with-fastai-tabularpandas\n\n### not use tabularpandas, predict by fastai\nhttps:\/\/www.kaggle.com\/stpeteishii\/titanic-fastai","146c2734":"### RandomForestClassifier"}}