{"cell_type":{"475b6f5f":"code","eb7de058":"code","a94bc5cc":"code","7ace1089":"code","54b18214":"code","63b014fc":"code","c9f05c2d":"code","08ebab69":"code","19f200b7":"code","76fdc66f":"code","a2ede26b":"code","afff1bdd":"code","142a7d93":"code","ef70fd7d":"code","77370f55":"code","52c50ea0":"code","d357906f":"code","3176a948":"code","bab2419d":"markdown","2503f83f":"markdown","a42ac570":"markdown","514a2d31":"markdown","ca83338c":"markdown","ae75f907":"markdown","caab82c6":"markdown","b6c0b7ee":"markdown","f9c8698a":"markdown","8b908d97":"markdown","4ab0fbf2":"markdown"},"source":{"475b6f5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eb7de058":"# Carregando o Pycaret\n\n!pip install pycaret","a94bc5cc":"from pycaret.datasets import get_data","7ace1089":"dados = get_data('insurance')","54b18214":"from pycaret.regression import *","63b014fc":"# configura\u00e7\u00f5es de pr\u00e9 processamento e valida\u00e7\u00e3o dos modelos \n\nregressao = setup(data = dados,\n                 target = 'charges',\n                 normalize = True,\n                 combine_rare_levels = True,\n                 remove_outliers = True,\n                 session_id = 1)","c9f05c2d":"models()","08ebab69":"floresta = create_model('rf')","19f200b7":"# Ajustando o modelo RF atrav\u00e9s do m\u00e9todo RandomSearch\n\nfloresta_adj = tune_model(floresta, optimize = 'RMSLE', n_iter = 20)","76fdc66f":"# Verificando a import\u00e2ncia das vari\u00e1veis no modelo ajustado\n\nplot_model(floresta_adj, plot = 'feature')","a2ede26b":"modelos = compare_models(sort = 'RMSLE', n_select = 4)","afff1bdd":"modelos_tunados = [tune_model(i, optimize = 'RMSE') for i in modelos]","142a7d93":"# vamos combinar os 5 modelos tunados em um \u00fanico preditor\n\nmodelo_combinado = blend_models(modelos_tunados)","ef70fd7d":"# verificando a performance nos dados de valida\u00e7\u00e3o\n\npred = predict_model(modelo_combinado)","77370f55":"# Aplicando o modelo final em todos os dados dispon\u00edveis\n\nmodelo_final = finalize_model(modelo_combinado)","52c50ea0":"# Salvando o modelo final\n\nsave_model(modelo_final, 'final_model')\n\n# Salvando o modelo para deploy na nuvem\nsave_model(modelo_final, model_name = 'deployment_28042020')","d357906f":"# Fazendo um deploy b\u00e1sico\n\ndef CustoSeguro (age, sex, bmi, children, smoker, region):\n    dados0 = {'age': [age], 'sex': [sex], 'bmi': [bmi], 'children': [children], 'smoker': [smoker], 'region': [region]}\n    dados = pd.DataFrame(dados0)\n    \n    modelo = load_model('.\/final_model')\n    \n    pred = float(predict_model(modelo, data = dados)['Label'].round(2))\n    valor = round(1.8*pred, 2)\n    \n    print(' ')\n    print('Idade: {}'.format(age))\n    print('Sexo: {}'.format(sex))\n    print('IMC: {}'.format(bmi))\n    print('Crian\u00e7as: {}'.format(children))\n    print('Fumante: {}'.format(smoker))\n    print('Regi\u00e3o: {}'.format(region))\n    print(' ')\n    print('Custo do Seguro: ${}'.format(pred))\n    print('Valor de Venda: ${}'.format(valor))\n          ","3176a948":"# Testando o deploy\n\nCustoSeguro(age = 32, sex = 'female', bmi = 25, children = 0, smoker = 'no', region = 'southwest')","bab2419d":"## Objetivo do Projeto:\n\nObter um modelo para prever os custos e valores para um Plano de Sa\u00fade","2503f83f":"![planodesaude.png](attachment:b8c6aa8a-3dc5-4f5b-aeae-9ceab6529d03.png)\n\n## Contexto de Neg\u00f3cio\n\nSabemos que o servi\u00e7o p\u00fablico de sa\u00fade no Brasil e em outros pa\u00edses \u00e9 bem prec\u00e1rio, o que leva parte da popula\u00e7\u00e3o a buscar formas de atendimento privadas usando Planos de Sa\u00fade. \n\nNo entanto, estes planos privados sofrem pesada regula\u00e7\u00e3o pela ANS - Ag\u00eancia Nacional de Sa\u00fade o que eleva os custos e valores das mensalidades, al\u00e9m dos custos associados \u00e0 interna\u00e7\u00e3o, UTI e outros procedimentos cir\u00fargicos. \n\nMas ser\u00e1 que existem outros fatores que influenciam o valor do plano de sa\u00fade? \n\nNeste estudo iremos analisar um dataset de uma seguradora americana e verificar que fatores podem influenciar o pre\u00e7o final de um plano de sa\u00fade. ","a42ac570":"Agora iremos ajustar o modelo usando o m\u00e9todo RandomSearch e como par\u00e2metro o RMSLE (Erro M\u00e9dio Quadr\u00e1tico Logar\u00edtmico)","514a2d31":"### Criando um modelo inicial b\u00e1sico com Random Forest","ca83338c":"Aqui estamos criando o modelo com o nome 'floresta'.","ae75f907":"Para este estudo usaremos a biblioteca PyCaret que permite an\u00e1lises supervisionadas e n\u00e3o supervisionadas com pouco c\u00f3digo e boa acur\u00e1cia. ","caab82c6":"Vamos agora avaliar outros modelos de machine learning dispon\u00edveis e selecionar os 3 melhores, nas suas configura\u00e7\u00f5es padr\u00e3o:","b6c0b7ee":"Vamos importar a nossa base de dados **'insurance'** que cont\u00e9m informa\u00e7\u00f5es sobre benefici\u00e1rios de plano de sa\u00fade. ","f9c8698a":"Analisando nossa base, temos dados simulados de benefici\u00e1rios (usu\u00e1rios de plano de sa\u00fade) e os gastos com plano de sa\u00fade num dado intervalo de tempo. \n\nOs seguintes atributos est\u00e3o presentes no banco de dados:\n\nIdade em anos: age\nSexo: sex\n\u00cdndice de Massa Corporal: bmi\nN\u00famero de crian\u00e7as vinculadas ao plano de sa\u00fade: children\nSe \u00e9 fumante ou n\u00e3o: smoker\nRegi\u00e3o dos Estados Unidos: region\nSinistro (gastos) em unidade monet\u00e1ria: charges\n\nNosso objetivo \u00e9 criar modelos preditivos que retornem o atributo **'charges'** (valor do plano).\n\nPara isso, vamos iniciar importando os modelos de regress\u00e3o do PyCaret:\n","8b908d97":"O PyCaret possui uma enorme gama de algoritmos que podemos usar para nosso estudo. Neste exerc\u00edcio usaremos o Random Forest e faremos uma compara\u00e7\u00e3o para verificar sua acur\u00e1cia. ","4ab0fbf2":"Analisando as vari\u00e1veis acima, vemos claramente que \"smoker_yes\" (fumantes) e \"age\" (idade), s\u00e3o fatores importantes na predi\u00e7\u00e3o e composi\u00e7\u00e3o dos valores do plano de sa\u00fade. "}}