{"cell_type":{"fe62c332":"code","ad54c17b":"code","a0cf982b":"code","3fbd7525":"code","92f5846b":"code","a3fe7b2f":"code","084a4c0c":"code","7796681e":"code","2f7e2ac2":"code","265ef164":"code","5d46a234":"code","9ca3839b":"code","81034ad0":"code","ffe25a54":"code","9e28bb91":"code","0ef46f92":"code","ffde34fa":"code","01b4f7f8":"code","b0e8931b":"code","39993cc6":"code","b439f3e1":"code","456966f8":"code","5d6faca1":"code","cbbd6963":"code","f0ad0b5c":"code","c811b86d":"markdown","9d78b9e3":"markdown","37c66376":"markdown","2d48d12e":"markdown","526e6e62":"markdown","a233f3b9":"markdown","ce5dae7f":"markdown","0babfbfa":"markdown","fd76ece4":"markdown","342664c9":"markdown","4f4c800c":"markdown","ad1dc2a6":"markdown","a9554fb5":"markdown","a6df3af4":"markdown","fbe16a80":"markdown","38a3cec0":"markdown","cc0b58fc":"markdown","4e2c60bc":"markdown"},"source":{"fe62c332":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ad54c17b":"train=pd.read_csv('..\/input\/train.csv')\ntest=pd.read_csv('..\/input\/test.csv')\n","a0cf982b":"train.head()","3fbd7525":"train.info()","92f5846b":"train.describe()","a3fe7b2f":"test.head()","084a4c0c":"test.describe()","7796681e":"test.info()","2f7e2ac2":"\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","265ef164":"target=train['Survived']","5d46a234":"def aloner(d):\n    if d>0:\n        return 1\n    else:\n        return 0\ntrain['Family_Size']=train['SibSp']+train['Parch']\ntrain['Alone']=train['Family_Size'].transform(lambda f:aloner(f))\ntest['Family_Size']=test['SibSp']+test['Parch']\ntest['Alone']=test['Family_Size'].transform(lambda f:aloner(f))","9ca3839b":"import re\ntrain['Honorific']=train['Name'].transform(lambda f:re.findall('(Mr|Mrs|Master|Miss)',f))\ntest['Honorific']=test['Name'].transform(lambda f:re.findall('(Mr|Mrs|Master|Miss)',f))","81034ad0":"%%html\n<div class='tableauPlaceholder' id='viz1535710855713' style='position: relative'><noscript><a href='#'><img alt='various features alongside Survived ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic_610&#47;Story1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Titanic_610&#47;Story1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic_610&#47;Story1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1535710855713');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='1016px';vizElement.style.height='991px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","ffe25a54":"%%html\n<div class='tableauPlaceholder' id='viz1535718122614' style='position: relative'><noscript><a href='#'><img alt='Story 2 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic2_32&#47;Story2&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Titanic2_32&#47;Story2' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic2_32&#47;Story2&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1535718122614');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='1016px';vizElement.style.height='991px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","9e28bb91":"%%html\n<div class='tableauPlaceholder' id='viz1536140804752' style='position: relative'><noscript><a href='#'><img alt='Sheet 1 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Co&#47;CorrelationInTitanic&#47;Sheet1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='CorrelationInTitanic&#47;Sheet1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Co&#47;CorrelationInTitanic&#47;Sheet1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1536140804752');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","0ef46f92":"from sklearn.preprocessing import LabelEncoder as le\nfrom sklearn.preprocessing import OneHotEncoder as ohe\nfor c in train.columns:\n    if train[c].dtype=='object' :\n        z1=le().fit_transform(train[c].astype(str))\n        train[c]=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\n        z1=le().fit_transform(test[c].astype(str))\n        test[c]=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(train['Age'].astype(str))\ntrain['Age']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(test['Age'].astype(str))\ntest['Age']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(train['Fare'].astype(str))\ntrain['Fare']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(test['Fare'].astype(str))\ntest['Fare']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))","ffde34fa":"target=train['Survived']\ntrain=train.drop(['PassengerId','Survived','Name','Ticket','Cabin'],axis=1)\ntest=test[train.columns]","01b4f7f8":"from scipy.stats import mode\ntrain=train.apply(lambda f:f.fillna(f.mode()[0]))\ntest=test.apply(lambda f:f.fillna(f.mode()[0]))","b0e8931b":"from sklearn.model_selection import train_test_split as tts\nrfC={'n_estimators':[2000,2500,1500],'max_depth':[6]}\n","39993cc6":"xtrain,xtest,ztrain,ztest=tts(train,target,train_size=0.7)","b439f3e1":"from sklearn.model_selection import GridSearchCV as grc\nmodel=grc(RandomForestClassifier(),rfC)\nmodel.fit(xtrain,ztrain)","456966f8":"print(model.best_params_,model.best_score_)","5d6faca1":"from sklearn.metrics import accuracy_score as acs\nprint(acs(ztest,model.predict(xtest)))","cbbd6963":"a=pd.DataFrame(model.predict(test[train.columns]))\na.index=pd.read_csv('..\/input\/test.csv')['PassengerId']\na.columns=['Survived']\na.index.name='PassengerId'","f0ad0b5c":"a.to_csv('result.csv')","c811b86d":"2-Generating 'Honorific' feature from name feature","9d78b9e3":"**VISUALIZATION BY TABLEAU**","37c66376":"**Importing Required ML models from sklearn for prediction purposes**","2d48d12e":"**Looking at the description and info of train and test dataset**","526e6e62":"> **After preparing data...its time for prediction ****","a233f3b9":"**Checking the accuracy of my model using sklearn.metrics**","ce5dae7f":"**Summarizing my findings**","0babfbfa":"**Dropping Some unnecessary Features**\ncabin has more than 70% of the data missing","fd76ece4":"**We would be using Random Forest Classifier for prediction\nfor this prediciton purpose...i would be dividing train data in train set and validation  dataset in ration  7:3\nWe would be trying to get best set of parameters using gridSearchCV **","342664c9":"**Preparing result as csv file**","4f4c800c":"**Reading the train and test dataset ****","ad1dc2a6":"**Converting categorical data to numeric form**","a9554fb5":"Asseen in the above correlation table.No feature is highly correlated with survival rate\nwith highest pearson correlation found is -0.338 with PClass","a6df3af4":"**Filling NA values***","fbe16a80":"1-Generating new features -->Family and Alone","38a3cec0":"> **FEATURE ENGINEERING ****\n","cc0b58fc":"**Converting Target as pandas Series **","4e2c60bc":"Now looking towards correlation between various features of the dataset "}}