{"cell_type":{"a656a9ba":"code","da38dc40":"code","5fce8a5a":"code","5144f863":"code","f234cc61":"code","dc0f5136":"code","b307f903":"code","f45b8de9":"code","c84c701d":"code","5d96df36":"code","66bcfed7":"code","45d28861":"code","8adf1586":"code","a2a17395":"code","c37f6db3":"code","17c6bbfb":"code","6b022513":"code","0a2638cc":"code","4718f21e":"code","d28f245b":"code","935b2f96":"code","5cb6b8d5":"code","3beba035":"code","e4800f8f":"code","66c18411":"code","d1b0e37d":"code","7298798c":"code","ce83b3bf":"code","1f7c6281":"code","0e01b074":"code","8bd97002":"code","bafb1ae1":"code","0b21d885":"code","6c21849c":"code","ed74489d":"code","391b867d":"code","5c6a7d40":"code","6005cd07":"markdown","861b0222":"markdown","8e22f23f":"markdown","492d1201":"markdown"},"source":{"a656a9ba":"#Lets create a variable name x and assign a value as per your wish\nx = 10","da38dc40":"print(x, type(x))","5fce8a5a":"#performing arithmetic operations on x\nx + 10","5144f863":"y = 30.8787\ny","f234cc61":"type(y)","dc0f5136":"sample_string = '1% can also be expressed as 0.01'\nprint(sample_string)","b307f903":"sp = '224.8'\ntype(sp)","f45b8de9":"#Concatenating 2 strings\n'Price of AAPL is :'+sp","c84c701d":"sp = 224.8","5d96df36":"#Print Python 7 times\n'Python '*7","66bcfed7":"book = 'Machine Learning using Python'\nbook[0]","45d28861":"ml = book[:7]\nml","8adf1586":"book[5:13]","a2a17395":"book[8:]","c37f6db3":"#using step\nbook[::2]","17c6bbfb":"book","6b022513":"#reverse the string\nbook[::-1]","0a2638cc":"#.upper(): This will return the uppercase version of the string\nml.upper()","4718f21e":"#.lower(): This will return the lower case version of the string\nml.lower()","d28f245b":"#strip(): This function will remove the white spaces at the either end\n\"     Welcome to Python Programming      \".strip()","935b2f96":"\"     Welcome to Python Programming      \".lstrip()","5cb6b8d5":"\"     Welcome to Python Programming      \".rstrip()","3beba035":"#Check whether the string contains Alphabet or not\n#isalpha(): returns a boolean value True if the string contains alphabets ,else false\n'Machine'.isalpha()","e4800f8f":"#check whether the given string contains digits or not\n#isdigit() or isnumeric(): returns a boolean value True, if the string contains numbers or digits, else false\n'1234567890'.isdigit()","66c18411":"'1234567890'.isnumeric()","d1b0e37d":"'naw az'.isalpha()","7298798c":"'''find(sub, start, end): This method returns the lowest index in a string where\nsubstring sub is found within the slice[start:end].'''\n'EPAT Handbook'.find('EPAT')","ce83b3bf":"'EPAT Handbook'.find('book')","1f7c6281":"'EPAT Handbook'.find('a')","0e01b074":"'EPAT Handbook'.find('o')","8bd97002":"'EPAT Handbook'.find('y')","bafb1ae1":"'''replace(old, new): This method returns a copy of the string with all\noccurences of old replaced by new'''\n'00 01 10 11'.replace('0','1')","0b21d885":"#replace a with o\n'Hakuna Matata'.replace('a','o')","6c21849c":"#index(character): This returns the index of the given character\n'EPAT Handbook'.index('A')","ed74489d":"#count(character): This method returns the index of first occurence of the character\n'Learning'.count('n')","391b867d":"'Mississippi'.count('s')","5c6a7d40":"#Capitalize(): this method will convert the first character to uppercase and remaining to lower case\n'python is amazing'.capitalize() ","6005cd07":"**Operations on Strings**\n\nUsing inbuilt methods on string","861b0222":"# **Day 1**\n\n**Python**\n\nIt is a general-purpose, interpreted, dynamic, high level programming language.\n\n**Variable**\n\nA variable is container which holds value in it.\n\n**Data Type**\n\nA type of value assigned to variable.","8e22f23f":"**Strings**\n\nSequence of characters which are enclosed within single or double quotes and are immutable","492d1201":"**Slicing**\n\nIt is extracting a part or creating substring from the existing string. syn:str[index] or str[start:end-1]"}}