{"cell_type":{"625ce191":"code","6fe42e54":"code","d73ad1f6":"code","65f8e1e2":"code","0f6631a1":"code","236e9032":"code","b9dc208f":"code","dc1b7681":"code","925c912c":"code","09b6d3de":"code","67c1368a":"code","e4dabd98":"code","4466d959":"code","dfebe9d4":"code","89927da0":"code","2a5e5bd3":"code","3ec345c4":"code","9eae0f47":"code","3b001cb2":"code","8efcb10b":"code","59b607ae":"code","1c4adc36":"code","8f786e53":"code","7e965a46":"code","3d49fcde":"code","45c95cf4":"code","1a251d50":"code","1759aa1b":"markdown"},"source":{"625ce191":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6fe42e54":"df = pd.read_csv('..\/input\/work-cycletime\/work_cycletime.csv')\nprint(df)","d73ad1f6":"mean1 = sum(df['Subgroup 1'])\/len(df)\nmean2 = sum(df['Subgroup 2'])\/len(df)\nprint(f'Mean Subgroup 1 : {mean1} sec')\nprint(f'Mean Subgroup 2 : {mean2} sec')","65f8e1e2":"sq1 = []\nsq2 = []\nmsq1 = []\nmsq2 = []\n\nfor i in range(len(df)):\n    res_sq1 = df['Subgroup 1'][i]**2\n    res_sq2 = df['Subgroup 2'][i]**2\n    res_msq1 = (df['Subgroup 1'][i]-mean1)**2\n    res_msq2 = (df['Subgroup 2'][i]-mean2)**2\n    sq1.append(res_sq1)\n    sq2.append(res_sq2)\n    msq1.append(res_msq1)\n    msq2.append(res_msq2)","0f6631a1":"std = ((sum(msq1)+sum(msq2))\/(2*len(df)-1))**(1\/2)\nstds = std\/len(df)**(1\/2)\nprint('Deviation Standard : ',std)\nprint('Subgroup Deviation Standard : ',stds)","236e9032":"ucl1 = mean1+3*stds\nlcl1 = mean1-3*stds\nucl2 = mean2+3*stds\nlcl2 = mean2-3*stds\nprint('Subgroup 1 Upper Control Limit : ',ucl1)\nprint('Subgroup 1 Lower Control Limit : ',lcl1)\nprint('Subgroup 2 Upper Control Limit : ',ucl2)\nprint('Subgroup 2 Lower Control Limit : ',lcl2)","b9dc208f":"Ucl1 = []\nLcl1 = []\n\nfor j in range (len(df)):\n    Ucl1.append(ucl1)\n    Lcl1.append(lcl1)\n\ndata1 = {'Time 1':df['Subgroup 1'],'UCL1':Ucl1,'LCL1':Lcl1}\ndf1 = pd.DataFrame(data1)\nprint(df1)","dc1b7681":"Ucl2 = []\nLcl2 = []\n\nfor k in range(len(df)):\n    Ucl2.append(ucl2)\n    Lcl2.append(lcl2)\n\ndata2 = {'Time 2':df['Subgroup 2'],'UCL2':Ucl2,'LCL2':Lcl2}\ndf2 = pd.DataFrame(data2)\nprint(df2)","925c912c":"g1 = df1.plot(title='Subgroup 1')\ng1.set_xlabel(\"Cycle\")\ng1.set_ylabel(\"Time(s)\")","09b6d3de":"g2 = df2.plot(title='Subgroup 2')\ng2.set_xlabel(\"Cycle\")\ng2.set_ylabel(\"Time(s)\")","67c1368a":"so = (((2\/0.05)*(2*len(df)*(sum(sq1)+sum(sq2))-(sum(df['Subgroup 1'])+sum(df['Subgroup 2']))**2)**(1\/2))\/(sum(df['Subgroup 1'])+sum(df['Subgroup 2'])))**2\nprint(f\"N' : {so} observations\")\n\nif so > 2*len(df):\n    print(\"N' > N, so need a data recap\")\nelse :\n    print('No need a data recap')","e4dabd98":"for k in range(len(df1)):\n    if df1['UCL1'][k]<df1['Time 1'][k]:\n        df1.drop([k],inplace=True)\n    elif df1['LCL1'][k]>df1['Time 1'][k]:\n        df1.drop([k],inplace=True)\n\ndf1 = df1.reset_index()","4466d959":"for l in range(len(df2)):\n    if df2['UCL2'][l]<df2['Time 2'][l]:\n        df2.drop([l],inplace=True)\n    elif df2['LCL2'][l]>df2['Time 2'][l]:\n        df2.drop([l],inplace=True)\n\ndf2 = df2.reset_index()","dfebe9d4":"data_r = {'Time 1':df1['Time 1'], 'Time 2':df2['Time 2']}\ndfr = pd.DataFrame(data_r)\nprint(dfr)","89927da0":"act = (sum(dfr['Time 1'])+sum(dfr['Time 2']))\/(2*len(dfr))\nprint(f'Average Cycle Time : {act} sec')","2a5e5bd3":"ofs = pd.read_csv('..\/input\/objective-factors\/objective_workspeed.csv')\nofs","3ec345c4":"nt_ofs = act*ofs['Rating'][3]\/100\nprint('Work Speed Rating : ',ofs['Rating'][3]\/100)\nprint(f'Normal Time (Work Speed) : {nt_ofs} sec')","9eae0f47":"ofd = pd.read_csv('..\/input\/objective-factors\/objective_workdifficulties.csv')\nofd","3b001cb2":"def d(m):\n    return ofd['Adjustment'][m]\nsd = d(0)+d(2)+d(6)+d(8)+d(11)+d(16)+d(18)\n\nnt_ofd = act*sd\/100\nprint('Work Difficulties Adjustment : ',sd\/100)\nprint(f'Normal Time (Work Difficulty): {nt_ofd} sec')","8efcb10b":"sf = pd.read_csv('..\/input\/schumard-factors\/schumard_factor.csv')\nsf","59b607ae":"nt_sf = act*sf['Adjustment'][4]\/60\nprint('Schumard Adjustment : ',sf['Adjustment'][4]\/60)\nprint(f'Normal Time (Schumard): {nt_sf} sec')","1c4adc36":"wf = pd.read_csv('..\/input\/westinghouse-factor\/westinghouse_factor.csv')\nwf","8f786e53":"def w(n):\n    return wf['Adjustment'][n]\nsw = w(2)+w(13)+w(23)+w(29)\n\nnt_wf = act*(1+sw)*(1+ofs['Rating'][3]\/100)\nprint('Westinghouse Adjustment : ',nt_wf\/act)\nprint(f'Normal Time (Westinghouse): {nt_wf} sec')","7e965a46":"nt_p = act*100\/100\nprint('Percentage Adjustment : Normal (100)')\nprint(f'Normal Time (Percentage): {nt_p} sec')","3d49fcde":"alw = pd.read_csv('..\/input\/worktime-allowance\/allowance.csv')\nalw","45c95cf4":"def a(o):\n    return alw['Men'][o]\ni = (a(0)+a(3)+a(6)+a(13)+a(16)+a(20)+a(21)+a(24))\/100\nprint(f'Allowance Percentage : {i*100} %')","1a251d50":"st_ofs = nt_ofs+(i*nt_ofs)\nst_ofd = nt_ofd+(i*nt_ofd)\nst_sf = nt_sf+(i*nt_sf)\nst_wf = nt_wf+(i*nt_wf)\nst_p = nt_p+(i*nt_p)\nprint('Standard Time (Work Speed) : ',st_ofs)\nprint('Standard Time (Work Difficulty) : ',st_ofd)\nprint('Standard Time (Schumard) : ',st_sf)\nprint('Standard Time (Westinghouse) : ',st_wf)\nprint('Standard Time (Percentage) : ',st_p)","1759aa1b":"# **WORKING TIME MEASUREMENTS**\n## **Stopwatch Time Study**"}}