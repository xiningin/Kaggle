{"cell_type":{"24d4f21e":"code","d52112c3":"code","62999a90":"code","ba97d627":"code","0a24b0ec":"code","cf5ba4da":"code","2dcc0927":"code","471d5114":"code","6ef0a7b9":"code","cb45d1c4":"code","16887507":"code","10ba7670":"code","5e7b7a4e":"code","d958b8aa":"code","4ec8fd5a":"code","68743fee":"code","bf8b7581":"code","dbb59795":"code","01fc6bec":"code","495fc06c":"markdown"},"source":{"24d4f21e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d52112c3":"import pandas as pd\nimport numpy as np\nimport datetime\nimport calendar\n\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt","62999a90":"data = pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")\ndata.head()","ba97d627":"data.info()","0a24b0ec":"#Check for null values \n\ndata.isnull().sum()","cf5ba4da":"#Dropping 'na' values from date_added and rating columns\n\ndata = data.dropna(subset = ['date_added', 'rating'])\ndata.shape","2dcc0927":"#Trimming the additional spaces in date column\n\ndata['date_added']=data['date_added'].str.strip()","471d5114":"#Creating column for formatted date_added column as netflix_date\n\ndata['date_added']=data['date_added'].astype(str)\ndata['netflix_date']=data['date_added'].apply(lambda x: datetime.datetime.strptime(x,'%B %d, %Y').strftime('%Y-%m-%d'))\ndata.head(2)","6ef0a7b9":"#Converting 'netflix_date' to date-time obejct, and extracting year and month from the cloumn'\n\ndata['netflix_date']=pd.to_datetime(data['netflix_date'], format='%Y-%m-%d')\ndata['netflix_year']=data['netflix_date'].apply(lambda x:x.year)\ndata['netflix_month']=data['netflix_date'].apply(lambda x:x.month)\ndata['netflix_month_abbr']=data['netflix_month'].apply(lambda x:calendar.month_name[x])\ndata.head(2)","cb45d1c4":"print(\"Recent movie release year in netflix:\", data['netflix_year'].max())\nprint(\"Old movie release year in netflix:\", data['netflix_year'].min())","16887507":"#Splitting the country and listed_in attributes separated by comma and choosing first word \n\ndata['country'] = data['country'].str.split(',', n=1, expand = True)\ndata['listed_in'] = data['listed_in'].str.split(\",\", n = 1, expand = True)\ndata.head(2)","10ba7670":"#Top 5 directors \n\ndata.director.value_counts().nlargest(5)","5e7b7a4e":"#Unique values count in Country, Rating and Listed_in columns\n\ndata[['country', 'rating', 'listed_in']].nunique()","d958b8aa":"data.pivot_table(index = ['type'], columns = ['rating'], values = ['show_id'], aggfunc = 'count', fill_value = 0)","4ec8fd5a":"#Movie and TV Show distribution \n\nfig,ax = plt.subplots(figsize=(5,5))\nc = data['type'].value_counts()\nlables = c.index\nexplode = (0, 0.1)\nax.pie(c.values, explode = explode, radius = 1.5, labels = lables, autopct='%1.1f%%')\nplt.show()","68743fee":"#Rating analysis\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10,7))\nsns.countplot(x= 'rating', data = data, order=data['rating'].value_counts().index[0:15])\nplt.title(\"Distribution of ratings across the given years\\n\")","bf8b7581":"#Release year analysis\n\nplt.figure(figsize=(8,8))\nsns.countplot(y='netflix_year', data = data, order = data['netflix_year'].value_counts().index[0:12])\nplt.title(\"New releases in Netflix across years\\n\")","dbb59795":"# Number of TVshows and Movies released in each year\n\nplt.figure(figsize=(15,5))\nsns.countplot(x = 'netflix_year', hue = 'type', data = data)\nplt.title(\"Number of movies\/tvshows released across years\\n\")","01fc6bec":"plt.figure(figsize=(10,10))\nsns.countplot(y='listed_in', hue='type', data = data)","495fc06c":"**Need to continue**"}}