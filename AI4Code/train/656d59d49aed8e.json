{"cell_type":{"27cf7650":"code","bf2b1150":"code","1df55764":"code","18b9abef":"code","e04e53a4":"code","f819fc61":"code","1379ffa3":"code","2e0aeab7":"code","12c2da73":"code","ce5c1d50":"code","a697af54":"code","d0ef7d57":"code","ec3bae30":"code","c8f1fa33":"code","5d677727":"code","1b589ffe":"code","315a7e14":"code","2dca3f13":"markdown","848e1c37":"markdown","4b9b9457":"markdown","7f5ee404":"markdown","530305d9":"markdown","256b69c9":"markdown","a82ccc32":"markdown","61d0d64f":"markdown"},"source":{"27cf7650":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\nsns.set_style('darkgrid')\nimport warnings\nimport scipy.stats as stats\nwarnings.filterwarnings('ignore')\nimport plotly\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.figure_factory as ff\ninit_notebook_mode()","bf2b1150":"# load the data set \ndf = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')\ndf","1df55764":"# we need to create a copy of the data \nEDA = df.copy()\nEDA.shape","18b9abef":"# let's we see if the data is shuffled \npx.scatter(x=range(len(EDA[\"MaxHR\"])), y=EDA[\"MaxHR\"], color=EDA[\"HeartDisease\"])","e04e53a4":"# display the type of our features \nEDA.dtypes.value_counts()","f819fc61":"# let's we check the missing values \nplt.figure(figsize=(20,10))\nsns.heatmap(EDA.isna(), cbar=False)","1379ffa3":"# let's we check the distribution of label column (HeartDisease)\nEDA.HeartDisease.value_counts()","2e0aeab7":"num_col = [\"Age\",\n           \"RestingBP\",\n           \"Cholesterol\",\n           \"FastingBS\",\n           \"MaxHR\",\n           \"Oldpeak\",\n           \"HeartDisease\"\n]","12c2da73":"def describe(num_col):\n    return pd.concat([EDA[num_col].describe().T,\n                      EDA[num_col].skew().rename('skew'), #si skew > 0.75 donc il probleme de skewness\n                      EDA[num_col].median().rename('Median'),\n                      EDA[num_col].kurtosis().rename('kurtosis')\n                     ], axis=1).T\ndescribe(num_col)","ce5c1d50":"# Display histogram for all numericals features\nfor col in EDA[num_col]:\n    plt.figure()\n    sns.distplot(EDA[col])\n    plt.show()","a697af54":"# define the cat features \ncat_feature = EDA.drop(EDA[num_col],axis=1)\nfor col in cat_feature:\n    print(f'{cat_feature[col].value_counts()} \\n')","d0ef7d57":"cat_feature.value_counts()","ec3bae30":"crosstab = EDA.pivot_table(index='RestingECG', columns='Sex', \n                                aggfunc=lambda x: len(x), margins=True)\nprint(crosstab)","c8f1fa33":"ax = EDA.boxplot(by='RestingECG', column='Age',\n                           figsize=(7.5, 5))\nax.set_xlabel('')\nax.set_ylabel('RestingECG by Age')\nplt.suptitle('')\n\nplt.tight_layout()\nplt.show()","5d677727":"ax = EDA.boxplot(by='ChestPainType', column='Age',\n                           figsize=(7.5, 5))\nax.set_xlabel('')\nax.set_ylabel('ChestPainType by Age')\nplt.suptitle('')\n\nplt.tight_layout()\nplt.show()","1b589ffe":"# target and cat features\nfor col in cat_feature:\n    plt.figure(figsize=(18, 6))\n    sns.heatmap(pd.crosstab(EDA['HeartDisease'], EDA[col]), annot=True, fmt='d')","315a7e14":"sns.clustermap(EDA[num_col].corr(),cmap =\"RdBu\", annot=True, figsize=(15, 15))","2dca3f13":"our data is clean !!! no missing values ","848e1c37":"## bivariate analysis","4b9b9457":"### hello this is my first i make a project in Machine Learning \n### tell me what i need to add or remove that will helpfull ","7f5ee404":"okay we can say the distribution of thelabel is not asymmetric so we can use accrrarcy as evaluation metric","530305d9":"**we have 5 cat features we need to handl it in features engineering step **","256b69c9":"## 1. univariate analysis\n### a) Numerical feature","a82ccc32":"### 2. cat features ","61d0d64f":"## Analyzing the shape of the data"}}