{"cell_type":{"2a7f37ff":"code","732aae1f":"code","3c03b465":"code","4d83dc6b":"code","03ac6910":"code","d8b8e75e":"code","b67507dd":"code","d1fb9b8d":"code","7e9d36ba":"code","6b8a1684":"code","dab79ffe":"code","eb864a90":"markdown","0b3c1e6c":"markdown","61a09e57":"markdown","a05a3780":"markdown","68e3d613":"markdown","be822cc6":"markdown"},"source":{"2a7f37ff":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","732aae1f":"df = pd.read_csv('..\/input\/optiver-005c-result\/005c_result.csv')\ndf_ = pd.read_csv('..\/input\/optiver-005c-result\/000-benchmark.csv')\ndf = df.merge(df_[['row_id', 'pred']], on='row_id', how='inner', validate='one_to_one')\ndf = df.rename(columns={'pred_x': 'pred', 'pred_y': 'benchmark'})\ndf.head()","3c03b465":"def rmspe(y_true, y_pred):\n    return np.sqrt(np.mean(np.square((y_true - y_pred) \/ y_true)))","4d83dc6b":"strat_score = rmspe(df.target, df.pred)\nbench_score = rmspe(df.target, df.benchmark)\nprint(f' Strategy rmspe: ', strat_score)\nprint(f'Benchmark rmspe: ', bench_score)","03ac6910":"df_rmspe_per_stock = df.groupby('stock_id').apply(lambda x: rmspe(x.target, x.pred))\ndf_rmspe_per_stock_bench = df.groupby('stock_id').apply(lambda x: rmspe(x.target, x.benchmark))\ndf_rmspe_per_stock = df_rmspe_per_stock.sort_values(ascending=False).to_frame('strat_rmspe').reset_index()\ndf_rmspe_per_stock_bench = df_rmspe_per_stock_bench.to_frame('bench_rmspe').reset_index()\ndf_rmspe_per_stock = df_rmspe_per_stock.merge(df_rmspe_per_stock_bench, on='stock_id')\ndf_rmspe_per_stock.head(20)","d8b8e75e":"df['pct_error'] = (df.target - df.pred) \/ df.target\ndf['abs_pct_error'] = df['pct_error'].abs()\ndf['pct_error_bench'] = (df.target - df.benchmark) \/ df.target\ndf['abs_pct_error_bench'] = df['pct_error_bench'].abs()\ndf_31 = df.loc[df.stock_id==31].sort_values('abs_pct_error', ascending=False)","b67507dd":"df_31.abs_pct_error.hist(bins='auto')","d1fb9b8d":"disp_cols = ['stock_id', 'time_id', 'target', 'pred', 'benchmark', 'pct_error', 'pct_error_bench']\ndf_31[disp_cols].head(20)","7e9d36ba":"df_no_31 = df.loc[df.stock_id!=31].sort_values('abs_pct_error', ascending=False)","6b8a1684":"df_no_31.abs_pct_error.hist(bins='auto')","dab79ffe":"disp_cols = ['stock_id', 'time_id', 'target', 'pred', 'benchmark', 'pct_error', 'pct_error_bench']\ndf_no_31[disp_cols].head(20)","eb864a90":"## What happened for stock_id=31?","0b3c1e6c":"# Investigating outliers\nIn this notebook, we investigate outliers by analysing the results of the benchmark strategy and a strategy with RMSPE 0.21693. The aim is to find out the outliers that affect both training and predicting.\n\n**Note:** In this notebook, we skipped the row-id without trade data","61a09e57":"# Utility functions","a05a3780":"## RMSPE for the entire training set","68e3d613":"## RMSPE for each stock","be822cc6":"## What about other stocks?"}}