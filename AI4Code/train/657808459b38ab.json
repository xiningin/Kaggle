{"cell_type":{"7fe0ce29":"code","4923915a":"code","170105ec":"code","f1f5bfb3":"code","937eb1bf":"code","bc2dafe9":"code","ea7936bd":"code","ceaf9d20":"code","c8966e95":"code","509b7fd1":"code","7ba539a3":"code","27905154":"code","ae8bd39a":"code","680df62e":"code","756fd6b6":"code","d3e3b6f1":"code","878cd527":"code","dca5805e":"code","e3799841":"code","69c55164":"code","add34847":"code","320bfef5":"code","35ba59ac":"code","baeae92e":"code","fe9f41c7":"markdown","aa82f8b6":"markdown","8acd17e3":"markdown","4b81f968":"markdown","ebb54fae":"markdown","35357510":"markdown","4e279159":"markdown","3c0f224e":"markdown","466ef469":"markdown","d7908954":"markdown","fe3a8b5d":"markdown","fb5ad5db":"markdown"},"source":{"7fe0ce29":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","4923915a":"df_train= pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/train.csv\", sep=',')\ndf_train = df_train.set_index('id')","170105ec":"df_test= pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/test.csv\", sep=',')\ndf_test = df_test.set_index('id')","f1f5bfb3":"df_subm = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/sample_solution.csv\")","937eb1bf":"df_train_row_count, df_train_column_count=df_train.shape\nprint('Total number of rows (Train):', df_train_row_count)\nprint('Total number of columns (Train):', df_train_column_count)","bc2dafe9":"df_test_row_count, df_test_column_count=df_test.shape\nprint('Total number of rows (Test):', df_test_row_count)\nprint('Total number of columns (Test):', df_test_column_count)","ea7936bd":"x = df_train['claim'].value_counts()\n\nfig,ax=plt.subplots(figsize=(7,4))\nax.barh([1],x.values[1],height=0.7,color='#CC5803',alpha=0.7)\nplt.text(-35000,1, '1', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'},alpha = 0.7)\nplt.text(500000,1, '49.84%', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'},alpha = 0.7)\n\nax.barh([0],x.values[0],height=0.7,color='#FFB627',alpha=0.7)\nplt.text(-35000,0,'0',{'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'}, alpha = 0.7)\nplt.text(500000,0, '50.15%',{'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'}, alpha = 0.7)\n\n\nplt.text(-50,1.77, 'How claim is distributed? - 0 vs 1',{'font': 'Trebuchet MS','weight':'bold','Size': '20','style':'normal', 'color':'#FF9505'}, alpha = 0.9)\nplt.text(600000,1.65, '0 ', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'#FFB627'},alpha = 0.8)\nplt.text(615000,1.65, '|', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'}, alpha = 0.9)\nplt.text(625000,1.65, '1',  {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'#CC5803'},alpha = 0.7)\nplt.text(-50,1.5, 'Nearly equal distribution')\n\nax.axes.get_xaxis().set_visible(False)\nax.axes.get_yaxis().set_visible(False)\nax.spines['bottom'].set_visible(False)\nax.spines['left'].set_visible(True)\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","ceaf9d20":"!pip install -q -U git+https:\/\/github.com\/mljar\/mljar-supervised.git@dev","c8966e95":"from supervised.automl import AutoML","509b7fd1":"# define dataset\nX = df_train.drop('claim', axis=1)\ny = df_train['claim']","7ba539a3":"automl = AutoML(mode = \"Compete\", golden_features = True, total_time_limit = 1800)\nautoml.fit(X,y)","27905154":"automl.report()","ae8bd39a":"from sklearn.model_selection import train_test_split\n\n# creating dataset split for prediction\nX_train, X_test , y_train , y_test = train_test_split(X,y,test_size=0.2,random_state=42) # 80-20 split\n\n# Checking split \nprint('X_train:', X_train.shape)\nprint('y_train:', y_train.shape)\nprint('X_test:', X_test.shape)\nprint('y_test:', y_test.shape)","680df62e":"predictions = automl.predict(X_test)","756fd6b6":"y_pred = automl.predict(df_test)","d3e3b6f1":"df_subm['claim'] = y_pred\ndf_subm","878cd527":"df_subm.to_csv('submission_mljar.csv', index=False)","dca5805e":"pip install autogluon","e3799841":"from autogluon.tabular import TabularDataset, TabularPredictor","69c55164":"time = 3600*4\npred = TabularPredictor(label ='claim', eval_metric = 'roc_auc').fit(train_data = df_train, time_limit = time, presets ='best_quality', verbosity = 2)\npred.leaderboard(df_train)","add34847":"aml = pred.fit_summary()","320bfef5":"y_pred1 = pred.predict(df_test)\ny_pred1","35ba59ac":"df_subm['claim'] = y_pred1\ndf_subm","baeae92e":"df_subm.to_csv('submission_autogluon_final.csv',index=False);;","fe9f41c7":"<h3 style=\"font-family: Trebuchet MS;background-color:#ffc501;color:brown;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>AutoGluon \u23f3<\/centre><\/strong><\/h3>","aa82f8b6":"<p style=\"font-family: Trebuchet MS; line-height: 2; font-size: 24px; font-weight: bold; letter-spacing: 2px; text-align: center; color: #b20710\">\ud83c\udf41 TPS SEPTEMBER 2021 \ud83c\udf42<\/p>","8acd17e3":"![2.jpg](attachment:c847fd70-ce13-48a1-a76f-c20a0418ba0f.jpg)","4b81f968":"<p style = \"font-family: Trebuchet MS; font-size: 16px; color: rgba(0,0,0,.7)\"> Observations on this TPS: <li>1. 'claim' column is the target variable <\/li> <li>2. Train dataset has 957,919 rows and 120 columns<\/li><li>3. Test dataset has 493,474 rows and 119 columns<\/li><li>4. In train dataset, every feature has nearly 15,000 missing values totalling 1,820,782 in all<\/li><li>5. In test dataset, every feature has almost 7,800 missing values totalling 936,218 in all<\/li><\/p>","ebb54fae":"<h3 style=\"font-family: Trebuchet MS;background-color:#ffc501;color:brown;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>MLJAR \u23f3<\/centre><\/strong><\/h3>","35357510":"<h3 style=\"font-family: Trebuchet MS;background-color:#ffc501;color:brown;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Importing Libraries & Packages \ud83d\udcda <\/centre><\/strong><\/h3>","4e279159":"<h3 style=\"font-family: Trebuchet MS;background-color:#ffc501;color:brown;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Importing & Reading the dataset \ud83d\udcdd <\/centre><\/strong><\/h3>","3c0f224e":"![1.jpg](attachment:16b2df09-6654-4654-ad0d-ecbe931f2b58.jpg)","466ef469":"<h3 style=\"font-family: Trebuchet MS;background-color:#ffc501;color:brown;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>If you found this notebook useful, please Upvote. Thanks!<\/centre><\/strong><\/h3>","d7908954":"![TPS Sep 2021.jpg](attachment:dd842805-e977-4307-a49b-a7e1934f9251.jpg)","fe3a8b5d":"Reference: https:\/\/github.com\/mljar\/mljar-supervised","fb5ad5db":"Reference: https:\/\/github.com\/awslabs\/autogluon"}}