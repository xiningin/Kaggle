{"cell_type":{"b5e18cd8":"code","b1f1125f":"code","5c4ef851":"code","c291e4c7":"code","e2a6d589":"code","280aeab6":"code","7f1b46fb":"code","09a9cc80":"code","f72a28a2":"code","eba5b680":"markdown","735c9a17":"markdown","2e1b1c5b":"markdown"},"source":{"b5e18cd8":"import pandas as pd","b1f1125f":"df = pd.read_csv('\/kaggle\/input\/teamfight-tactics-fates-challenger-euw-rank-games\/TFT_set4_euw_challanger_games.csv')\ndf.head()","5c4ef851":"class Unit:\n    def __init__(self,name,stars,items):\n        self.name = name\n        self.stars = stars\n        self.items = items\n    \nclass Trait:\n    def __init__(self,name,rank):\n        self.name = name\n        self.rank = rank","c291e4c7":"import json\ndef units_transform_json(data_string):\n    if len(data_string) < 3: # len == 2 is Empty col\n        return []\n    units_list = []   \n    data_string = data_string.replace('\\'',\"\\\"\") #Without changing ' ' -> \" \", json throws errors\n    data_string = json.loads(data_string)\n    for name,values in data_string.items():        \n        unit = Unit(name,values['stars'],values['items'])\n        units_list.append(unit)\n    return units_list  ","e2a6d589":"for unit in units_transform_json(df['units'][0]):\n    print(unit.name,unit.stars,unit.items)","280aeab6":"def trait_transform_json(data_string):\n    if len(data_string) < 3: # len == 2 is Empty col\n            return []\n    trait_list = []\n    data_string = data_string.replace('\\'',\"\\\"\") #Without changing ' ' -> \" \", json throws errors\n    data_string = json.loads(data_string)    \n    for name,value in data_string.items():\n        trait = Trait(name,value)\n        trait_list.append(trait)\n    return trait_list","7f1b46fb":"for trait in trait_transform_json(df['traits'][0]):\n    print(trait.name,trait.rank)","09a9cc80":"df['units_object'] = df['units'].apply(units_transform_json)\ndf['traits_objects'] = df['traits'].apply(trait_transform_json)","f72a28a2":"df[['units_object','traits_objects']].head()","eba5b680":"# Read data","735c9a17":"Now, it's possible to apply functions on DataFrame","2e1b1c5b":"# Read json columns and make objects"}}