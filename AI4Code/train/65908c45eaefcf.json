{"cell_type":{"c3b4dd91":"code","b5681973":"code","a58c19c0":"code","5aa88f11":"code","b6ea765f":"code","bc322645":"code","fad77e38":"code","6791c25e":"markdown","9b7d5b17":"markdown","82a2eada":"markdown","f20fd633":"markdown"},"source":{"c3b4dd91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5681973":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","a58c19c0":"#importing dataset\nds =pd.read_csv('..\/input\/positionsalaries-data\/position-salaries data.csv')\nds.head()","5aa88f11":"x = ds.iloc[:, 1:-1].values\ny = ds.iloc[:, -1].values\nprint(x)\nprint(y)","b6ea765f":"#training the model\nfrom sklearn.tree import DecisionTreeRegressor\ndt = DecisionTreeRegressor()\ndt.fit(x,y)","bc322645":"#visualising predicted results\nx_new = np.arange(min(x), max(x), 0.1).reshape(-1, 1)\nplt.scatter(x, y, c = 'red')\nplt.plot(x_new, dt.predict(x_new))\nplt.title('Decision Tree Regression')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')","fad77e38":"#checking accuracy\nfrom sklearn.metrics import r2_score\nr2_score(y, dt.predict(x))","6791c25e":"**Decision Tree Regression**(To predict salaries based on previous job position)","9b7d5b17":"**Accuracy = 100%** \n  Decision Tree often overfits the model while working with small datasets. ","82a2eada":"Position and Level column, both show the position of the individual's previous job, so to avoid categorical data in position column, we use only Level column as the independent variable.","f20fd633":"We do not split the data since in the dataset there are only 10 values. So, splitting the data further into test and train would decrease the accuracy.\n"}}