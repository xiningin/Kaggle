{"cell_type":{"8cfbb7fe":"code","f041babc":"code","3b47b55a":"code","5ac7fcae":"code","bf11e386":"code","fbd9f701":"code","6bd3f10b":"code","13f020b7":"code","afb0955f":"code","0ec744da":"code","c114f97d":"code","e071d03e":"code","0ca48a56":"code","51e6bc85":"code","8e02c0d8":"code","c1e9c6a9":"code","511523a6":"code","bf2b1c88":"code","aa304989":"code","73c9db25":"code","0f3eaa56":"markdown","a0e4122f":"markdown","e86a49c3":"markdown","c23e14c0":"markdown","0486e615":"markdown","8ec73350":"markdown","23f3a7f3":"markdown","a1e7eca1":"markdown"},"source":{"8cfbb7fe":"import json\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom PIL import Image, UnidentifiedImageError\nimport seaborn as sns","f041babc":"train_annot_path = '..\/input\/iwildcam-2020-fgvc7\/iwildcam2020_train_annotations.json'\ntrain_img_path = '..\/input\/iwildcam-2020-fgvc7\/train'","3b47b55a":"with open(train_annot_path) as f:\n    train_annot = json.load(f)","5ac7fcae":"print(f'Total categories in set: {len(train_annot[\"categories\"])}')\nprint(f'Total training images: {len(train_annot[\"images\"])}')","bf11e386":"train_labels = pd.DataFrame(train_annot['annotations'])\ntrain_labels.head()","fbd9f701":"images_with_1_label = np.count_nonzero(train_labels.groupby('image_id').category_id.nunique().values == 1)\nprint('1 label for each image: {}'.format(images_with_1_label == len(train_annot['images'])))","6bd3f10b":"train_classes = train_labels.category_id.nunique()\nprint('All classes have training examples: {}'.format(len(train_annot['categories']) == train_classes))\nprint('Total classes: {}\\nTrain classes: {}'.format(len(train_annot['categories']), train_classes))","13f020b7":"# Let's look at some images\nfig = plt.figure(figsize=(24, 12))\nfor i, img_id in enumerate(train_labels.image_id.sample(12).values):\n    img_path = os.path.join(train_img_path, img_id + '.jpg')\n    img = Image.open(img_path)\n    ax = fig.add_subplot(3, 4, i+1)\n    ax.imshow(img)\n    ax.grid()\n    ax.axis('off')","afb0955f":"train_images_meta = pd.DataFrame(train_annot['images'])\ntrain_images_meta.head()","0ec744da":"train_images_meta.describe()","c114f97d":"train_images_meta[train_images_meta.seq_num_frames == 10]","e071d03e":"sample_sequence = train_images_meta[train_images_meta.seq_num_frames == 10].seq_id.sample(1).values[0]\nseq_img = train_images_meta[train_images_meta.seq_id == sample_sequence].file_name.values\n\n# Let's look at some images\nfig = plt.figure(figsize=(30, 30))\nfor i, img_id in enumerate(seq_img):\n    img_path = os.path.join(train_img_path, img_id)\n    img = Image.open(img_path)\n    ax = fig.add_subplot(4, 3, i+1)\n    ax.imshow(img)\n    ax.grid()\n    ax.axis('off')\n","0ca48a56":"img_dims = train_images_meta.groupby(['height', 'width']).id.nunique().reset_index().sort_values(by='id', ascending=False)\nimg_dims['frac'] = img_dims.id \/ img_dims.id.sum()\nimg_dims['cum_frac'] = img_dims.id.cumsum() \/ img_dims.id.sum()\nimg_dims.head(10)","51e6bc85":"plt.figure(figsize=(16, 8))\nimg_dims = np.log10(train_images_meta.groupby(['height', 'width']).id.nunique()).reset_index()\nimg_dims = pd.pivot_table(img_dims, index='height', columns='width', values='id').fillna(-1)\nsns.heatmap(img_dims, square=True, linecolor='#09000f', linewidths=.1)\n_ = plt.gca().set_title('Image dimensions (counts in log scale)')","8e02c0d8":"# Images with -1 dims are intriguing\n# Let's look at some\nfig = plt.figure(figsize=(24, 6))\nfor i, img_id in enumerate(train_images_meta[train_images_meta.width == -1].id.values):\n    try:\n        img_path = os.path.join(train_img_path, img_id + '.jpg')\n        img = Image.open(img_path)\n        ax = fig.add_subplot(1, 3, i+1)\n        ax.imshow(img)\n        ax.grid()\n        ax.axis('off')\n    except FileNotFoundError:\n        print(\"Image {} doesn't exist\".format(img_id))\n    except UnidentifiedImageError:\n        print(\"Image {} unidentified\".format(img_id))","c1e9c6a9":"categories = pd.DataFrame(train_annot['categories'])","511523a6":"examples_by_cat = train_labels.category_id.value_counts().reset_index()\nexamples_by_cat.columns = ['category', 'examples']\nexamples_by_cat = examples_by_cat.merge(categories, left_on='category', right_on='id', how='inner')[['id', 'name', 'examples']]\nexamples_by_cat = examples_by_cat.assign(cumulative=examples_by_cat.examples.cumsum()\/examples_by_cat.examples.sum(), frac=examples_by_cat.examples\/examples_by_cat.examples.sum())\nexamples_by_cat.head(20)","bf2b1c88":"examples_by_cat[examples_by_cat.id > 0][['examples', 'frac']].describe()","aa304989":"examples_by_cat.sort_values('frac')[['name', 'examples']].head(20)","73c9db25":"l10_examples = examples_by_cat.groupby('examples').id.count().reset_index()\nl10_examples.columns=['examples', 'n_classes']\nprint('{} classes have less than 10 examples'.format(l10_examples[l10_examples.examples<=10].n_classes.sum()))","0f3eaa56":"There can be multiple images per sequence.\n\nSome images have sides = -1 ???\n\nSignificantly high stddev in image height and width","a0e4122f":"Some classes have only a single example","e86a49c3":"~35% examples belong to the empty class","c23e14c0":"There's variance in the size of image within a sequence. Let's look at a sequence","0486e615":"These don't exist in training dataset. Should remove before training","8ec73350":"~98% images are one of (1024p\/HD, 1080p\/FHD, 1536p). Decent for downscaling","23f3a7f3":"Interesting...","a1e7eca1":"Model trained on this may struggle when multiple animals are in frame"}}