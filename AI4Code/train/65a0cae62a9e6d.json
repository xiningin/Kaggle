{"cell_type":{"deff2069":"code","defbe967":"code","5bf4a122":"code","27a99354":"code","48395d2e":"code","ae993c0e":"code","aff968ed":"code","de711a7c":"code","a433129d":"code","ad126319":"code","0fefbbbe":"code","2694efb5":"code","b34accd3":"code","f72ebe48":"code","15c20e36":"code","ac8fec6d":"code","423d038f":"code","1ae063f5":"code","eb15d390":"code","2fdc84b3":"code","0a80a0de":"code","317b9b6c":"code","eab72af7":"code","099d244b":"code","71746a19":"code","85225da0":"code","2b880023":"code","763f4593":"code","e7cd7447":"code","a25867a4":"code","30cde19d":"markdown","e1decb73":"markdown","9d3e3f33":"markdown","a1e53dfe":"markdown","93e1461a":"markdown","6b45cb60":"markdown","a2c9a13b":"markdown","0dc5f711":"markdown"},"source":{"deff2069":"import numpy as np\nimport pandas as pd\nfrom sklearn.datasets import load_breast_cancer\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","defbe967":"#Importing BREAST CANCER DATA FROM SKLEARN DATASETS\ndata = load_breast_cancer() \ndata.keys()  ","5bf4a122":"data.feature_names  #column names\ndata.feature_names","27a99354":"data.data[0:2] #actual data- numpy array","48395d2e":"data.target[0:20]  #target array","ae993c0e":"data.DESCR  #description of dataset","aff968ed":"data.target_names","de711a7c":"BCdf=pd.DataFrame(data.data,columns=data.feature_names)\nBCdf.size","a433129d":"BCdf.shape   #569 rows, 30 columns","ad126319":"BCdf.head(3)\nBCdf['Target']=data.target","0fefbbbe":"BCdf.head()","2694efb5":"BCdf.describe()","b34accd3":"BCdf.info","f72ebe48":"BCdf.dtypes","15c20e36":"#IMPORTING LIBRARIES FROM SKLEARN\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","ac8fec6d":"X=data.data\ny=data.target\nX_train,X_test,y_train,y_test=train_test_split(X,y)","423d038f":"#Create an instance of the model\nLR=LogisticRegression()","1ae063f5":"LR","eb15d390":"#Fit the Model to the Data\n\nLR.fit(X_train,y_train)","2fdc84b3":"#MODEL ACCURACY\nLR.score(X_test,y_test)  # Generates 93% accuracy using LOGISTIC REGRESSION MODEL\n#Generated accuracy of 93%","0a80a0de":"yhat=LR.predict(X_test)   #Predicts labels for test data\nyhat","317b9b6c":"yhat_prob=LR.predict_proba(X_test)   #Predicts probability,useful also in log loss calculations\nyhat_prob","eab72af7":"\nfrom sklearn.metrics import jaccard_similarity_score","099d244b":"jaccard_similarity_score(y_test,yhat)  #93% accuracy","71746a19":"from sklearn.metrics import classification_report, confusion_matrix\nCM=metrics.confusion_matrix(y_test,yhat,labels=[0,1])","85225da0":"print(CM)","2b880023":"plt.figure(figsize=(6,6))\nsns.heatmap(CM,annot=True)","763f4593":"classification_report(y_test,yhat)\n#Shows PRECISION, RECALL, F1 SCORE","e7cd7447":"from sklearn.metrics import log_loss","a25867a4":"log_loss(y_test,yhat_prob)  #Log Loss for Logistic Regression Classifier is 0.1888","30cde19d":"# WE WILL USE LOGISTIC REGRESSION FOR CLASSIFICATION\n### Other options like PCA, Naive Bayes, KNN etc. can also be explored (the workflow within Scikit Learn is similar)","e1decb73":"# MACHINE LEARNING CLASSIFICATION USING LOGISTIC REGRESSION\n\n## BREAST CANCER EXAMPLE  (WISCONSION DIAGNOSTIC DATASET)\n\n","9d3e3f33":"## PLOTTING CONFUSION MATRIX","a1e53dfe":"Finally, the same excercise can be carried out using Principal Component Analysis (PCA), Naive Bayes, KNN etc. The workflow is similar. All you have to do is import the relevant model and from there- the following steps such as:\n1. Creating an instance of the model\n2. Train\/Test\/Split\n3. Model Fit\n4. Model Prediction\/Score\nare very similar. You can skip the probability part (incl. log loss calculation), since those are not available for the above classifiers.\n\n\n### USEFUL REFERENCES\nFor more information check the following references:\n\n1.How to use Scikit-Learn Datasets for Machine Learning, Towards Data Science by Wafiq Syed\n2. https:\/\/scikit-learn.org\/stable\/modules\/classes.html#module-sklearn.datasets\n3. https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.datasets.load_breast_cancer.html#sklearn.datasets.load_breast_cancer\n4. https:\/\/jakevdp.github.io\/PythonDataScienceHandbook\/ \n(Check the Machine Learning part in the above Handbook)","93e1461a":"# LOGISTIC REGRESSION MODEL ACCURACY METRIC: JACCARD INDEX ","6b45cb60":"# LOGISTIC REGRESSION ACCURACY PREDICTION USING score()","a2c9a13b":"# LOGISTRICAL REGRESSION MODEL ACCURACY METRIC: LOG LOSS","0dc5f711":"# LOGISTIC REGRESSION MODEL ACCURACY METRIC: CONFUSION MATRIX"}}