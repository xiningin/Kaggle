{"cell_type":{"3bc7d567":"code","3b7f1160":"code","80e589d6":"code","16299c3d":"code","d6e87f04":"code","4d21060b":"code","2fcedcff":"code","60de678c":"code","a0d5eee4":"code","798872c5":"markdown","3270a995":"markdown","4c00a772":"markdown","bf7bd815":"markdown","d9ae7b2f":"markdown","1abf707d":"markdown","6ca11f12":"markdown","fa74a932":"markdown"},"source":{"3bc7d567":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style(\"darkgrid\")","3b7f1160":"dice = pd.Series([1, 2, 3, 4, 5, 6])\ndice.to_frame()","80e589d6":"print('Avg of our dice is:', dice.mean())","16299c3d":"def monte_carlo(series_list, n):\n    result = []\n    for i in range(1,n):\n        result.append(series_list.sample(i, replace=True).mean())\n    pd.Series(result).plot()\n    plt.show()\n    print('Avg of our dice is:', sum(result) \/ len(result))","d6e87f04":"monte_carlo(dice, 5)","4d21060b":"monte_carlo(dice, 10)","2fcedcff":"monte_carlo(dice, 100)","60de678c":"monte_carlo(dice, 1000)","a0d5eee4":"monte_carlo(dice, 10000)","798872c5":"Let us do more rolls","3270a995":"Let us create a dice with Pandas","4c00a772":"Hello, it is my test notebook. Simple visualisation how law of large numbers works for beginners :)\n\nThe law of large numbers states that an observed sample average from a large sample will be close to the true population average and that it will get closer the larger the sample.","bf7bd815":"And now we can find `mean` of our dice","d9ae7b2f":"And more!","1abf707d":"The result becomes closer to the expected value as the number of trials is increased. Thus, I understood how it works. Very good mentor explained to me it in this way, maybe it will be useful to someone","6ca11f12":"And if we roll dice 10 000 times - the avg is almost equally to the true avg - 3.5","fa74a932":"For five rolls avg looks like that:"}}