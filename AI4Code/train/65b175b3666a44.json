{"cell_type":{"b8311572":"code","29aa8579":"code","e336812f":"code","b64a2502":"code","bbc65139":"code","9b481948":"code","d5e9a67f":"code","7ea4296b":"code","3f630d9a":"code","93502124":"code","4ae40f95":"code","7553a5cc":"code","9c512866":"code","304b307b":"code","6a540577":"code","3dc88529":"code","16f98227":"code","493db0f9":"markdown","43fbd360":"markdown","13e5bccc":"markdown","c0e80348":"markdown","09b9cf38":"markdown","d897f50a":"markdown","cb3a4dd6":"markdown","bcf42295":"markdown","de79d073":"markdown","f707285a":"markdown","df392f56":"markdown","bb4f0faf":"markdown","896b4c25":"markdown","aea5aebf":"markdown","ecd09be2":"markdown","b9b68374":"markdown","d9c467ac":"markdown","7dc75f0a":"markdown","fe6a537d":"markdown","74c3d02f":"markdown","c4009493":"markdown"},"source":{"b8311572":"%matplotlib inline\n# Data Processing\nimport pandas as pd\nimport numpy as np\n\n# Data visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nsns.set_palette('husl')\n\n# Special data visualization\nimport missingno as msno # check missing value\nfrom wordcloud import WordCloud # wordcloud\nimport plotly.graph_objects as go\n\n# Geographic data visualization\nimport pycountry\nimport plotly.express as px\n\n# Check file list\nimport os\nprint(os.listdir('..\/input\/wine-reviews'))","29aa8579":"wines = pd.read_csv('..\/input\/wine-reviews\/winemag-data-130k-v2.csv')\nwines.describe(include = 'all')","e336812f":"wines.head()","b64a2502":"msno.matrix(wines, color = (255\/255, 38\/255, 90\/255))","bbc65139":"wines.dropna(subset = ['country', 'price', 'variety'], inplace = True)\n\n# Visualizing missing values after deleting\nmsno.matrix(wines, color = (57\/255, 194\/255, 110\/255))","9b481948":"%%time\nfig, ax = plt.subplots(1, 2, figsize=(16, 32))\nwordcloud_description = WordCloud(background_color='white',width=800, height=800).generate(' '.join(wines['description']))\nwordcloud_variety = WordCloud(background_color='white',width=800, height=800).generate(' '.join(wines['variety']))\nax[1].imshow(wordcloud_variety, interpolation='bilinear')\nax[1].set_title(\"Wines variety\")\nax[1].axis('off')\nax[1].margins(x=0, y=0)\nax[0].imshow(wordcloud_description, interpolation='bilinear')\nax[0].set_title(\"Wines description\")\nax[0].axis('off')\nax[0].margins(x=0, y=0)\nplt.show()","d5e9a67f":"fig, axs = plt.subplots(ncols = 2, figsize = (25, 10))\nsns.set_style(\"whitegrid\")\nsns.kdeplot(wines['price'], shade = True, legend = False, ax = axs[0],  color = 'orange')\naxs[0].set_title(\"Wine prices distribution\")\nsns.kdeplot(wines['points'], shade = True, legend = False, ax = axs[1], color = 'green')\naxs[1].set_title(\"Wine points distribution\")\nplt.plot()","7ea4296b":"fig = plt.figure(figsize = (20, 10), dpi = 72)\nsns.regplot(x = wines['points'], y = wines['price'], color = 'red')","3f630d9a":"wines_countries_counts = wines['country'].value_counts()\nwines_countries_points = pd.Series(index = wines_countries_counts.index)\nfor country in wines['country'].unique():\n    country_name = wines[wines['country'] == country]\n    wines_countries_points.loc[country] = country_name['points'].mean()\n    \nwines_countries = pd.concat({'total': wines_countries_counts,'points': wines_countries_points}, axis = 1)\n\n# Converting country names to iso_alpha_3\ncountries = {'US': 'USA', 'England': 'GBR', 'Moldova': 'MDA', 'Macedonia': 'MKD', 'Czech Republic': 'CZE'}\nfor country in pycountry.countries:\n    countries[country.name] = country.alpha_3\n    \nfor country, row in wines_countries.iterrows():\n    wines_countries.loc[country, 'iso_alpha'] = countries[country]\nwines_countries.head()","93502124":"fig = px.choropleth(wines_countries, locations=\"iso_alpha\",\n                    color=\"total\",\n                    hover_name=\"iso_alpha\", # column to add to hover information\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.update_layout(title='Amount of wines by country')\nfig.show()","4ae40f95":"fig = px.choropleth(wines_countries, locations=\"iso_alpha\",\n                    color=\"points\",\n                    hover_name=\"iso_alpha\", # column to add to hover information\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.update_layout(title='Average wine points by country')\nfig.show()","7553a5cc":"us_iso = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District of Columbia': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Palau': 'PW',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY',\n}","9c512866":"us_wines_counts = wines.loc[wines['country'] == 'US', 'province'].value_counts()\nus_wines_points = pd.Series(index = us_wines_counts.index)\nstates = wines.loc[wines['country'] == 'US', 'province'].unique()\nfor state in states:\n    state_name = wines[wines['province'] == state]\n    us_wines_points.loc[state] = state_name['points'].mean()\n\nus = pd.concat({'total': us_wines_counts,'points': us_wines_points}, axis = 1)\nus.drop(['America', 'Washington-Oregon'], inplace = True)\n\n# Converting state codes\nstates = {}\nfor state in us_iso:\n    states[state] = us_iso[state]\n    \nfor state, row in us.iterrows():\n    us.loc[state, 'iso_alpha'] = states[state]\n    \nus.head()","304b307b":"fig = go.Figure(data=go.Choropleth(\n    locations=us['iso_alpha'], # Spatial coordinates\n    z = us['total'], # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Blues',\n    colorbar_title = \"Total\",\n))\n\nfig.update_layout(\n    title_text = 'US total wines by state',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","6a540577":"fig = go.Figure(data=go.Choropleth(\n    locations=us['iso_alpha'], # Spatial coordinates\n    z = us['points'], # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = \"Points\",\n))\n\nfig.update_layout(\n    title_text = 'US Average wine points by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","3dc88529":"labels = wines_countries.index\nvalues = wines_countries['total']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","16f98227":"tasters = wines['taster_name'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=tasters.index, values=tasters, hole=.5)])\nfig.show()","493db0f9":"# Importing libraries & chcecking data","43fbd360":"I can also use seaborn to visualize prices distribution in terms of price. With the line we can see, that better wines are on average more expansive. The difference is slight though.","13e5bccc":"# Coclusion\n**What I learned:**\n- Visualizing missing data with missingo\n- Creating a word clous with WordCloud\n- Showing basic plots with seaborn\n- Visualizing geographical data with express and go\n- Creating pie charts with go\n\nI learned a lot this week. Those are only the basics. Next week I will try to improve on these skills and practice customizing graphs.","c0e80348":"# Pie charts (go)\nWe can use go to also create pie charts","09b9cf38":"# Price and points distribution and relation(seaborn)\nWith seaborn I can visualize the wine prices and points distribution. As we can see most of the prices are in the  < 200 \\$ range. There are afew wines as expansive as 300$. The spikes in the points distribution diagram are because all points have a 1 point accurace meaning there are no e.g. 88.2 point wines, only whole numbers.","d897f50a":"Here I Create a dataframe with points ant total wines for each country. I also convert the countries names to iso_alpha_3 ( using pycountry dictionary ), to make it possible to graph them with express.","cb3a4dd6":"# Choropleth graph by country and by state (express and go)\nExpress and go make it really easy to visualize geographic data","bcf42295":"# Description and wine variety (word cloud)\nCreating 2 word clouds of the most used words in description and variety names. WordCloud makes it really easy.","de79d073":"I graph average amount of points by state with go. Best wines are on average in Rhode Island.","f707285a":"# Road to data scientist - Week 1 - Wine dataset\nI practice and learn to become a data scientist.\nThis week I learned basics of graphing and data visualization.","df392f56":"Reading the dataset with pandas","bb4f0faf":"Creating a dataframe with points and total wines for each states and converting state codes.","896b4c25":"![](https:\/\/external-content.duckduckgo.com\/iu\/?u=https%3A%2F%2Fwww.virginexperiencedays.co.uk%2Fcontent%2Fimg%2Fproduct%2Flarge%2Ffinest-wine-tasting-with-18130153.jpg&f=1&nofb=1)","aea5aebf":"We can make the hole in a chart bigger. We can see that the most wines weret tested by Roger Voss.","ecd09be2":"Using missingo to visualize missing data. Color can be changed as well to rgb values.","b9b68374":"Here is a dictionary to convert states names to states codes, to be able to graph them.","d9c467ac":"I graph amount of wines by state with go","7dc75f0a":"Some rows are missing country and price data. I will delete those rows. It turns out later on, that some rows also dont have variety, so I will delete those as well.","fe6a537d":"Here I graph average points. We can see that on average the best wines are in Great Britain.","74c3d02f":"# Finding and deleting missing data (missingo)","c4009493":"I graph them and we can see that most of the wines are from US, France or Italy"}}