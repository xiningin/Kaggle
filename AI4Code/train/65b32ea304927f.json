{"cell_type":{"0a777dd5":"code","731151ae":"code","71baa2cd":"code","42578b86":"code","cfb1d5d0":"code","79d191e5":"code","f81c0893":"code","274220c1":"code","0c2e94ca":"code","ea169406":"code","68b43835":"code","f5714834":"code","2e03ca32":"code","3831fbd5":"code","1bf0b1ec":"code","bd6d0b6f":"code","87bda74b":"code","5d96afe4":"code","2f3c7f5f":"code","42749e48":"code","6ce0e094":"code","d0e74632":"code","162edc76":"code","c1dd7262":"code","0583a935":"code","7fabd69c":"code","47cb24c7":"code","a5be12bd":"code","bd386685":"code","c0f3ac05":"code","589c5eee":"code","22f1f03a":"code","4cb604c8":"code","c8ef9220":"code","dc52292d":"code","90b71b15":"code","b59e5eec":"code","b9fb2501":"code","c0c6f8e7":"code","f0b8f655":"markdown","93129ac4":"markdown","24ef80e0":"markdown","5d3bd92a":"markdown","231cdaf6":"markdown","1e8f4b05":"markdown","52aaf00a":"markdown","9d60eca1":"markdown","75dba0fb":"markdown","7aed5197":"markdown","6d8a13c9":"markdown","9b57962a":"markdown","4ac40ea0":"markdown","a5defb84":"markdown","27bd5794":"markdown","b510b7c4":"markdown","0134fd45":"markdown","e8a25b81":"markdown","11e1ef68":"markdown","490ffcfe":"markdown","da02a977":"markdown","29449baa":"markdown","3facfa62":"markdown","b72a0bdc":"markdown"},"source":{"0a777dd5":"from IPython.display import Image\nImage(\"..\/input\/amer_sign2.png\")","731151ae":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","71baa2cd":"train = pd.read_csv('..\/input\/sign_mnist_train.csv')\ntest = pd.read_csv('..\/input\/sign_mnist_test.csv')","42578b86":"train.head()","cfb1d5d0":"train.shape","79d191e5":"Image(\"..\/input\/american_sign_language.PNG\")","f81c0893":"labels = train['label'].values","274220c1":"unique_val = np.array(labels)\nnp.unique(unique_val)","0c2e94ca":"plt.figure(figsize = (18,8))\nsns.countplot(x =labels)","ea169406":"train.drop('label', axis = 1, inplace = True)","68b43835":"images = train.values\nimages = np.array([np.reshape(i, (28, 28)) for i in images])\nimages = np.array([i.flatten() for i in images])","f5714834":"from sklearn.preprocessing import LabelBinarizer\nlabel_binrizer = LabelBinarizer()\nlabels = label_binrizer.fit_transform(labels)","2e03ca32":"labels","3831fbd5":"plt.imshow(images[0].reshape(28,28))","1bf0b1ec":"from sklearn.model_selection import train_test_split","bd6d0b6f":"x_train, x_test, y_train, y_test = train_test_split(images, labels, test_size = 0.3, random_state = 101)","87bda74b":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, Dropout","5d96afe4":"batch_size = 128\nnum_classes = 24\nepochs = 50","2f3c7f5f":"x_train = x_train \/ 255\nx_test = x_test \/ 255","42749e48":"x_train = x_train.reshape(x_train.shape[0], 28, 28, 1)","6ce0e094":"x_test = x_test.reshape(x_test.shape[0], 28, 28, 1)","d0e74632":"plt.imshow(x_train[0].reshape(28,28))","162edc76":"model = Sequential()\nmodel.add(Conv2D(64, kernel_size=(3,3), activation = 'relu', input_shape=(28, 28 ,1) ))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\n\nmodel.add(Conv2D(64, kernel_size = (3, 3), activation = 'relu'))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\n\nmodel.add(Conv2D(64, kernel_size = (3, 3), activation = 'relu'))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\n\nmodel.add(Flatten())\nmodel.add(Dense(128, activation = 'relu'))\nmodel.add(Dropout(0.20))\nmodel.add(Dense(num_classes, activation = 'softmax'))","c1dd7262":"model.compile(loss = keras.losses.categorical_crossentropy, optimizer=keras.optimizers.Adam(),\n              metrics=['accuracy'])","0583a935":"history = model.fit(x_train, y_train, validation_data = (x_test, y_test), epochs=epochs, batch_size=batch_size)","7fabd69c":"plt.plot(history.history['acc'])\nplt.plot(history.history['val_acc'])\nplt.title(\"Accuracy\")\nplt.xlabel('epoch')\nplt.ylabel('accuracy')\nplt.legend(['train','test'])\nplt.show()","47cb24c7":"test_labels = test['label']","a5be12bd":"test.drop('label', axis = 1, inplace = True)","bd386685":"test_images = test.values\ntest_images = np.array([np.reshape(i, (28, 28)) for i in test_images])\ntest_images = np.array([i.flatten() for i in test_images])","c0f3ac05":"test_labels = label_binrizer.fit_transform(test_labels)","589c5eee":"test_images = test_images.reshape(test_images.shape[0], 28, 28, 1)","22f1f03a":"test_images.shape","4cb604c8":"y_pred = model.predict(test_images)","c8ef9220":"from sklearn.metrics import accuracy_score","dc52292d":"accuracy_score(test_labels, y_pred.round())","90b71b15":"import h5py","b59e5eec":"# MLP for Pima Indians Dataset saved to single file\nfrom numpy import loadtxt\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n# save model and architecture to single file\nmodel.save(\"asl.h5\")\nprint(\"Saved model to disk\")","b9fb2501":"# load and evaluate a saved model\nfrom numpy import loadtxt\nfrom keras.models import load_model\n \n# load model\nmodel = load_model('asl.h5')","c0c6f8e7":"model.summary()","f0b8f655":"# About the data","93129ac4":"Re shaping the images","24ef80e0":"# CNN Model","5d3bd92a":"The data set is given in the form of labels and pixel value ranging from pixel 1 to pixel 784 which is 28 * 28 image.","231cdaf6":"Lets see how the images look","1e8f4b05":"Let's validate with the test data","52aaf00a":"For deep learning i am using keras library","9d60eca1":"As you can see each one is almost equally distributed","75dba0fb":"# Data exploration","7aed5197":"Each letter indicates a sign produced by our fingers. We will apply deep learning to these images to make sure our model can understand what sign indicated what letter","6d8a13c9":"# Sign Language","9b57962a":"Since our target variable are in categorical(nomial) so we are using label binarizer","4ac40ea0":"As you can see, the number of epochs increase the accuracy also increases.","a5defb84":"As we can see we got a really great accuracy ","27bd5794":"Normalizing the training and test data","b510b7c4":"Predecting with test images","0134fd45":"Spliting the dataset into train(70%) and test(30%)","e8a25b81":"We are droping the label coloumn from the training set","11e1ef68":"Load the dataset","490ffcfe":"Let's see what does each sign means","da02a977":"Creating the batch size to 128 and using 50 epochs","29449baa":"Visualizing the image after normalizing","3facfa62":"We can increate the accuracy by tuning the hyper parameters of the model like playing with different activation functions and using different loss functions","b72a0bdc":"The original MNIST image dataset of handwritten digits is a popular benchmark for image-based machine learning methods but researchers have renewed efforts to update it and develop drop-in replacements that are more challenging for computer vision and original for real-world applications. As noted in one recent replacement called the Fashion-MNIST dataset, the Zalando researchers quoted the startling claim that \"Most pairs of MNIST digits (784 total pixels per sample) can be distinguished pretty well by just one pixel\". To stimulate the community to develop more drop-in replacements, the Sign Language MNIST is presented here and follows the same CSV format with labels and pixel values in single rows. The American Sign Language letter database of hand gestures represent a multi-class problem with 24 classes of letters (excluding J and Z which require motion)."}}