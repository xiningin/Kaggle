{"cell_type":{"78fca106":"code","1cfd95a1":"code","56cb7d6e":"code","9610e866":"markdown","8847c576":"markdown","360c545a":"markdown","7cbd9e93":"markdown","9edc1b62":"markdown","1ba1f1af":"markdown"},"source":{"78fca106":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set()\n","1cfd95a1":"classes = {'Cover_type1' : 0.37053,'Cover_type2' : 0.49657,'Cover_type3' : 0.059647,'Cover_type4' : 0.00106,'Cover_type5' : 0.01287,'Cover_type6' : 0.02698,'Cover_type7' : 0.03238}\npd_cl = pd.DataFrame.from_dict(classes, orient='index', columns=['Share'])","56cb7d6e":"fig, ax = plt.subplots(figsize=(10,10))\nsns.barplot(x = pd_cl.index, y = pd_cl.Share  *100,  data = pd_cl, ax = ax)","9610e866":"From what I've tried so far (LGBM, MLP, RandomForest), the distribution of the predicted labels is far from perfect.\nI'm planning on feature engeneering. Also will be looking to tune my NN model with grid-search.","8847c576":"This type of distribution is essentially what one would want to achieve to get the perfect score.\nWe see that classes 1 and 2 give us 86.6% of all data in the public test set. Therefore predicting them alone perfectly will give us appropriate LB score. \nIs it doable though?","360c545a":"I'll update this notebook as soon as I get some ideas about the close matching predictions from various models.","7cbd9e93":"Here is a bit of exploitation\/exploration ;)\n\nI made submissions to check what is the distribution of each class in the public test set. \nPlease bear in mind that the private test set might be DIFFERENT (it has been different in almost all real competitions I've observed\/paticipated). There is no guarantee whatsoever. \nSo the main goal of this competition is still to come up with the solution capable to generalize well.","9edc1b62":"# Basic idea","1ba1f1af":"# Verdict"}}