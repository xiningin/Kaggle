{"cell_type":{"e3703ac8":"code","9075e51a":"code","5e00071f":"code","1d91b89f":"code","ba60df7f":"code","060dbf31":"code","d7c3f104":"code","14014f61":"code","4e5a3008":"code","efd3786d":"code","f964d3ec":"code","d42adc69":"code","9fb3ead4":"code","c821b55e":"code","784f54cd":"code","f8ec48f6":"code","87f4916b":"code","194d00bc":"code","e68b2019":"code","34394d6b":"markdown","45040c24":"markdown","e70f7bbb":"markdown","cbf3fc90":"markdown","e6100589":"markdown","8e2b5345":"markdown","be202df4":"markdown","fd2a8470":"markdown","7ab05287":"markdown","7cec12c3":"markdown","b3e59a8d":"markdown","929e2e6d":"markdown","62e63316":"markdown","e58fd9d9":"markdown","d248b866":"markdown","768013f0":"markdown","84e80205":"markdown","790a23e7":"markdown"},"source":{"e3703ac8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9075e51a":"## Libraries\nimport datetime\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set()\n\nimport folium","5e00071f":"df = pd.read_csv(\"\/kaggle\/input\/earthquakes-in-japan\/Japan earthquakes 2001 - 2018.csv\", header=0)","1d91b89f":"df.head()","ba60df7f":"# Data size\ndf.shape","060dbf31":"# Data info\ndf.info()","d7c3f104":"# Basic statics values\ndf.describe()","14014f61":"# Null data\ndf.isnull().sum()","4e5a3008":"# create a datetime columns, and extract date factors.\ndf[\"datetime\"] = pd.to_datetime(df[\"time\"])\n\ndf[\"year\"] = df[\"datetime\"].dt.year\ndf[\"month\"] = df[\"datetime\"].dt.month\ndf[\"day\"] = df[\"datetime\"].dt.day\ndf[\"hour\"] = df[\"datetime\"].dt.hour","efd3786d":"# Whole data\nplt.figure(figsize=(15,6))\nsns.countplot(df[\"mag\"], color=\"red\", alpha=0.5)\nplt.xlabel(\"magnitude\")\nplt.ylabel(\"count\")\nplt.title(\"histgram of magnitude\")","f964d3ec":"# Per year\nplt.figure(figsize=(15,10))\nsns.kdeplot(df.query(\"year==2001\")[\"mag\"], color=\"black\")\nsns.kdeplot(df.query(\"year==2002\")[\"mag\"], color=\"grey\")\nsns.kdeplot(df.query(\"year==2003\")[\"mag\"], color=\"brown\")\nsns.kdeplot(df.query(\"year==2004\")[\"mag\"], color=\"coral\")\nsns.kdeplot(df.query(\"year==2005\")[\"mag\"], color=\"orangered\")\nsns.kdeplot(df.query(\"year==2006\")[\"mag\"], color=\"sienna\")\nsns.kdeplot(df.query(\"year==2007\")[\"mag\"], color=\"olive\")\nsns.kdeplot(df.query(\"year==2008\")[\"mag\"], color=\"yellow\")\nsns.kdeplot(df.query(\"year==2009\")[\"mag\"], color=\"greenyellow\")\nsns.kdeplot(df.query(\"year==2010\")[\"mag\"], color=\"lime\")\nsns.kdeplot(df.query(\"year==2011\")[\"mag\"], color=\"red\")\nsns.kdeplot(df.query(\"year==2012\")[\"mag\"], color=\"aqua\")\nsns.kdeplot(df.query(\"year==2013\")[\"mag\"], color=\"darkcyan\")\nsns.kdeplot(df.query(\"year==2014\")[\"mag\"], color=\"navy\")\nsns.kdeplot(df.query(\"year==2015\")[\"mag\"], color=\"plum\")\nsns.kdeplot(df.query(\"year==2016\")[\"mag\"], color=\"magenta\")\nsns.kdeplot(df.query(\"year==2017\")[\"mag\"], color=\"pink\")\nsns.kdeplot(df.query(\"year==2018\")[\"mag\"], color=\"crimson\")\nplt.legend([\"2001\", \"2002\", \"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\"], facecolor=\"white\")\nplt.xlabel(\"magnitude\")\nplt.ylabel(\"count\")\nplt.title(\"Kde plot by magnitude of earthquake per year\")","d42adc69":"df_year_count = pd.DataFrame(data=df.groupby(\"year\").place.count()).reset_index()\nmedian = np.median(df_year_count[\"place\"])\n\n# Visualization by barplot\nplt.figure(figsize=(10,6))\nsns.barplot(df_year_count[\"year\"], df_year_count[\"place\"], color=\"blue\", alpha=0.5)\nplt.hlines(y=median, xmin=-1, xmax=19, color=\"red\", linewidth=2)\nplt.xlim([-0.5,18])\nplt.title(\"Count of earthquake per year \\n line is median:{}\".format(median.round(0)))","9fb3ead4":"# Mapping visualization in 2011\nmap = folium.Map(location=[37, 138],tiles='Stamen Terrain', zoom_start=5)\n\nmapping = pd.DataFrame({\n    'place':df.query(\"year==2011\")[\"place\"].values,\n    'data':df.query(\"year==2011\")[\"mag\"].values,\n    'lat':df.query(\"year==2011\")[\"latitude\"].values,\n    'lon':df.query(\"year==2011\")[\"longitude\"].values\n})\n\nfor i, r in mapping.iterrows():\n    folium.CircleMarker(location=[r[\"lat\"],r[\"lon\"]], radius=r[\"data\"]\/20, popup=r[\"place\"], color='red').add_to(map)\n\nmap","c821b55e":"# Mapping visualization in 2010\nmap = folium.Map(location=[37, 138],tiles='Stamen Terrain', zoom_start=5)\n\nmapping = pd.DataFrame({\n    'place':df.query(\"year==2010\")[\"place\"].values,\n    'data':df.query(\"year==2010\")[\"mag\"].values,\n    'lat':df.query(\"year==2010\")[\"latitude\"].values,\n    'lon':df.query(\"year==2010\")[\"longitude\"].values\n})\n\nfor i, r in mapping.iterrows():\n    folium.CircleMarker(location=[r[\"lat\"],r[\"lon\"]], radius=r[\"data\"]\/20, popup=r[\"place\"], color='blue').add_to(map)\n\nmap","784f54cd":"# Mapping visualization in 2009\nmap = folium.Map(location=[37, 138],tiles='Stamen Terrain', zoom_start=5)\n\nmapping = pd.DataFrame({\n    'place':df.query(\"year==2009\")[\"place\"].values,\n    'data':df.query(\"year==2009\")[\"mag\"].values,\n    'lat':df.query(\"year==2009\")[\"latitude\"].values,\n    'lon':df.query(\"year==2009\")[\"longitude\"].values\n})\n\nfor i, r in mapping.iterrows():\n    folium.CircleMarker(location=[r[\"lat\"],r[\"lon\"]], radius=r[\"data\"]\/20, popup=r[\"place\"], color='green').add_to(map)\n\nmap","f8ec48f6":"# Per year\nplt.figure(figsize=(10,6))\nsns.distplot(df[\"depth\"], color=\"green\")\nplt.xlabel(\"depth\")\nplt.ylabel(\"count\")\nplt.title(\"Distribution of earthquake depth\")","87f4916b":"# Mapping visualization\nmap = folium.Map(location=[37, 138],tiles='Stamen Terrain', zoom_start=5)\n\nmapping_under = pd.DataFrame({\n    'place':df.query(\"depth <= 100\")[\"place\"].values,\n    'data':df.query(\"depth <= 100\")[\"mag\"].values,\n    'lat':df.query(\"depth <= 100\")[\"latitude\"].values,\n    'lon':df.query(\"depth <= 100\")[\"longitude\"].values\n})\n\nmapping_over = pd.DataFrame({\n    'place':df.query(\"depth > 100\")[\"place\"].values,\n    'data':df.query(\"depth > 100\")[\"mag\"].values,\n    'lat':df.query(\"depth > 100\")[\"latitude\"].values,\n    'lon':df.query(\"depth > 100\")[\"longitude\"].values\n})\n\nfor i, r in mapping_under.iterrows():\n    folium.CircleMarker(location=[r[\"lat\"],r[\"lon\"]], radius=r[\"data\"]\/20, popup=r[\"place\"], color='blue').add_to(map)\n    \nfor i, r in mapping_over.iterrows():\n    folium.CircleMarker(location=[r[\"lat\"],r[\"lon\"]], radius=r[\"data\"]\/20, popup=r[\"place\"], color='red').add_to(map)\n    \nmap","194d00bc":"plt.figure(figsize=(10,6))\nsns.distplot(df.query(\"depth>100\")[\"mag\"], color=\"red\")\nsns.distplot(df.query(\"depth<=100\")[\"mag\"], color=\"blue\")\nplt.xlabel(\"magnitude\")\nplt.ylabel(\"count\")\nplt.title(\"Distribution of magnitude\")\nplt.legend([\"depth>100\", \"depth<=100\"], facecolor=\"white\")","e68b2019":"# Target area (35 < lat < 40) & (140 < lon 145), in 2009~2012\ndf_area = df.query(\"(latitude>35 & latitude<40) & (longitude>140 & longitude<145) & (year==2009 | year==2010 | year==2011 | year==2012)\")\n\n# Makling the dataframe\ndf_area_month = pd.DataFrame(data=df_area.groupby([\"year\",\"month\"]).place.count()).reset_index()\ndf_area_month[\"year\/month\"] = df_area_month[\"year\"]*100 + df_area_month[\"month\"]\ndf_area_month[\"year\/month\"] = [str(i) for i in df_area_month[\"year\/month\"]]\n\n# Visualization\nplt.figure(figsize=(12,6))\nplt.plot(df_area_month[\"year\/month\"], df_area_month[\"place\"], color=\"blue\")\nplt.ylabel(\"count\")\nplt.xlabel(\"year\/month\")\nplt.xticks(rotation=90)","34394d6b":"### 4. Mapping the earthquake depth","45040c24":"# EDA","e70f7bbb":"Red is \"depth<100\", Blue is \"depth<=100\".<br>\n- Depth difference can be represented division by plate borders.\n- Deeper case red is a rare case for lighter case blue.","cbf3fc90":"- 2011 is an overwhelming earthquake.","e6100589":"- Main depth is under 100.\n- I check the difference over 100 and under 100.","8e2b5345":"### 2. Count of earthquake per year.","be202df4":"### 3. Mapping the earthquake","fd2a8470":"# Earthquake in Japan, EDA<br>\n\nIn Japan, earthquake is usual disaster. I was experienced 3.11 East japan earthquake at Tokyo.<br>\nThis time, fully my interest, I analized this data with EDA.","7ab05287":"## Data import","7cec12c3":"### 5. Time series analysis around east Japan.","b3e59a8d":"- Around magnitude 4.5 ~ 4,7, there are most frequent every year.\n- Max magnitude is 9.1 in 2011.","929e2e6d":"### This Japan earthquake EDA ends here.","62e63316":"- Before earthquake in 2011\/3, no sign can be confirmed, such as an increase in earthquakes.","e58fd9d9":"- For time series analizing, I need to change the type of time to datetime.","d248b866":"- The magnitude of the earthquake is unlikely to change with depth.","768013f0":"### 1. Histgram of magnitude, whole data and per year.","84e80205":"- In 2011, sea in east side, there was very more earthquakes than others","790a23e7":"## Data checking"}}