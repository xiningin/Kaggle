{"cell_type":{"9d156c27":"code","f6e26f34":"code","36d8a716":"code","7bda9c7d":"code","f79018cc":"code","88e064d0":"code","dc79affc":"code","ce60ae55":"code","f556e60e":"code","9f8ed562":"code","48b09229":"code","d08cd4e3":"code","69f71e4d":"code","0b6357fd":"code","e7999957":"code","75ef0217":"code","65e56c24":"code","d4a51186":"code","28c36e49":"code","2f72cf23":"code","54e8107e":"code","aa1706d2":"code","e5441ac5":"code","2d27b260":"code","4d39aab3":"code","be63daa0":"code","97bae29c":"code","3ba9e733":"code","ae35fbc3":"code","0590ed4e":"code","4472fbf1":"code","76e5ddde":"code","7361967b":"code","bfd953ea":"code","df9cd9d1":"code","b2cc5058":"code","06618ef8":"code","d719080d":"code","896257db":"code","b3016763":"code","abdf5021":"markdown","e1354feb":"markdown","65ee0f51":"markdown","918ec183":"markdown","0e57c347":"markdown","076cf512":"markdown","5515d3b5":"markdown","48dc5dee":"markdown","baad5c60":"markdown","ae772f94":"markdown","6ec552c5":"markdown","5a05877e":"markdown","5868490e":"markdown","79f81fe9":"markdown","6e4a8d89":"markdown","3d645ad2":"markdown","0633263b":"markdown","b035d72d":"markdown","27664de7":"markdown","55632698":"markdown","fc46032f":"markdown","7eb4c5ad":"markdown","19529e26":"markdown","29ca46e0":"markdown","5760e6a4":"markdown","306999be":"markdown","10218624":"markdown","48bc39d1":"markdown","afa2a5d8":"markdown","da10ffb9":"markdown","5ad9db08":"markdown","af113e38":"markdown","1df63ef7":"markdown","00561ae0":"markdown","1fc42b56":"markdown","d9fd5528":"markdown","3b7bf686":"markdown","e4a56768":"markdown","e72c8c1f":"markdown","0de4c521":"markdown","0992b6ac":"markdown","c2731a8c":"markdown","43170c3c":"markdown","654cc3b0":"markdown","e52b18b3":"markdown","4a812615":"markdown","2536ba47":"markdown"},"source":{"9d156c27":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))","f6e26f34":"data = pd.read_csv('..\/input\/athlete_events.csv')\nregions = pd.read_csv('..\/input\/noc_regions.csv')","36d8a716":"data.head()","7bda9c7d":"data.describe()","f79018cc":"data.shape","88e064d0":"data.columns","dc79affc":"data.info()","ce60ae55":"regions.head()","f556e60e":"combined_df = pd.merge(data, regions, on = 'NOC', how = 'left')","9f8ed562":"combined_df.head()","48b09229":"gold_medalist = combined_df[combined_df['Medal'] == 'Gold']\ngold_medalist.head()","d08cd4e3":"gold_medalist.isnull().any()","69f71e4d":"gold_medalist.shape","0b6357fd":"gold_medalist = gold_medalist.dropna(subset = ['Age'])\ngold_medalist.shape","e7999957":"plt.figure(figsize = (20,5))\nplt.title('Distibution of Gold Medalist')\nplt.tight_layout()\nsns.countplot(x = 'Age', data = gold_medalist)\n\nplt.show()","75ef0217":"gold_medalist['Age'][gold_medalist['Age']>50].count()","65e56c24":"disciplines = gold_medalist['Sport'][gold_medalist['Age']>50]","d4a51186":"plt.figure(figsize = (10,5))\nplt.tight_layout()\nplt.title('Disciplines')\nsns.countplot(disciplines)\nplt.show()","28c36e49":"combined_df.head(2)","2f72cf23":"women_athletes = combined_df[(combined_df['Sex'] == 'F') & (combined_df['Season'] == 'Summer')]","54e8107e":"women_athletes.head()","aa1706d2":"plt.figure(figsize = (15,5))\nplt.title('Women Athlets')\nplt.tight_layout()\nsns.countplot(x = 'Year', data = women_athletes)\nplt.show()","e5441ac5":"women_athletes['Sex'][women_athletes['Year'] == 2016].count()","2d27b260":"golds = combined_df[(combined_df['Medal'] == 'Gold')]","4d39aab3":"total_golds = golds['region'].value_counts().reset_index(name = 'Medal')\ntotal_golds.head(10)","be63daa0":"top10_country = total_golds.head(10)\nsns.catplot(x = 'index',y = 'Medal', data = top10_country,kind = 'bar', height = 8)\nplt.title('Medals per Country')\nplt.xlabel('Top10 Countries')\nplt.ylabel('Number of Medals')\nplt.show()","97bae29c":"USA_Goldlist = combined_df[(combined_df['Medal'] == 'Gold') & (combined_df['region'] == 'USA')]\n\nUSA_Goldlist.head()","3ba9e733":"sports = USA_Goldlist['Event'].value_counts().reset_index(name = 'Medal')\nsports.head(5)\n","ae35fbc3":"combined_df.head(2)","0590ed4e":"BasketBall_USA = combined_df[(combined_df['Sport'] == 'Basketball') & (combined_df['Sex'] == 'M') & \n                         (combined_df['region'] == 'USA')].sort_values(['Year'])\nBasketBall_USA.head(5)","4472fbf1":"gold_medalist.head(5)","76e5ddde":"gold_medalist.info()","7361967b":"NotNullMedals = gold_medalist[(gold_medalist['Height'].notnull()) & (gold_medalist['Weight'].notnull())]\nNotNullMedals.count()","bfd953ea":"plt.figure(figsize = (10,5))\nsns.scatterplot(x = 'Height', y = 'Weight', data = NotNullMedals)\nplt.title('Height vs Weight')\nplt.xlabel('Height')\nplt.ylabel('Weight')\nplt.show()","df9cd9d1":"NotNullMedals[['Name','Sport']][NotNullMedals['Weight']>160]","b2cc5058":"MaleAthletes = combined_df[['Year', 'Sex']][(combined_df['Sex'] == 'M') & (combined_df['Season'] == 'Summer')]\nFemaleAthletes = combined_df[['Year','Sex']][(combined_df['Sex'] == 'F') & (combined_df['Season'] == 'Summer')]","06618ef8":"v1 = MaleAthletes['Year'].value_counts().reset_index(name = 'Male_Count')\nv2 = FemaleAthletes['Year'].value_counts().reset_index(name = 'Female_Count')","d719080d":"plt.figure(figsize = (10,5))\nsns.lineplot(x = 'index', y = 'Male_Count', data  = v1)\nsns.lineplot(x = 'index', y = 'Female_Count', data  = v2)\nplt.title('Male vs Women Contribution')\nplt.xlabel('Year')\nplt.ylabel('Male vs Female count')\nplt.show()","896257db":"plt.figure(figsize = (20,10))\nplt.tight_layout()\nsns.boxplot(x = 'Year', y = 'Age' ,data = combined_df[combined_df['Sex']== 'M'])\nplt.show()","b3016763":"plt.figure(figsize = (20,10))\nplt.tight_layout()\nsns.boxplot(x = 'Year', y = 'Age', data = combined_df[combined_df['Sex'] == 'F'])\nplt.show()","abdf5021":"##### Let's Create a dataframe which contains gold medalist only for USA.","e1354feb":"## ","65ee0f51":"## Collection Information about two DataFrame","918ec183":" ##### Count Gole Medals per Country\n ","0e57c347":"##### Here we have 10000 rows. let's create scatterplot","076cf512":"###### Now we will try to answer the following questions\n1. How the propostion of Men \/ Women varied with time?\n2. How about the mean age  along time?\n","5515d3b5":"###### Let's Plot only top 10 Countries","48dc5dee":"##### Visualize Women Athletes per year.","baad5c60":"#### Let's create box plot \n   MaleAthelets vs Age","ae772f94":"##### Now we can create Counter plot ","6ec552c5":"#####  Drop na based on Age Columns","5a05877e":"##### Studying the data we can try to understand how much medals we have only for women in the recent history of the Summer Games.","5868490e":"#### 1.How the propostion of Men \/ Women varied with time?","79f81fe9":"##### Both Height and Weight Columns contain NaN. We can drop those NaN from our dataframe","6e4a8d89":"## Evaluation of Olympics over time","3d645ad2":"##### Create New Dataframe with contains only Gold Medalists","0633263b":"##### Let's get info about gold_medalist","b035d72d":"# Index\n* Importing the modules.\n* Data importing.\n* Collecting information about the two dataset.\n* Joining the dataframes.\n* Distribution of the age of gold medalists.\n* Women in Athletics.\n* Medals per country.\n* Disciplines with the greatest number of Gold Medals.\n* What is the median height\/weight of an Olympic medalist?\n* Evolution of the Olympics over time.","27664de7":"we are going to:\n 1. Review first line of data\n 2. Use describe and info functions to collect statistical information, data types, column names and other information","55632698":"# Evaluation of Olympic Games","fc46032f":"## Distribution of the age of Gold Medalists","7eb4c5ad":"### Varience of Age along Time","19529e26":"dd","29ca46e0":"Visualise varience berween male and women athletes","5760e6a4":"##   What is the median height\/weight of an Olympic medalist?\n","306999be":"##### Of course, BasketBall is the leading discipline!\n\nCounting the medal of each member of the team instead of counting the medals per team.\n\nLet's slice the dataframe using only the data of male athletes to better review it:","10218624":"##### Weightlifting make sense","48bc39d1":"Let's create sSeperate DataFrame for male and female","afa2a5d8":"## Data Importing","da10ffb9":"##### To review count of women athlets in 2016 Summer edition","5ad9db08":"## Gold Medals per country","af113e38":"## Disciplines with the greatest number of Gold Medals","1df63ef7":"## Conclusion","00561ae0":"## Women in Athletes","1fc42b56":"##### USA seems to be most winning country ","d9fd5528":"##### Done. Let's review on our work","3b7bf686":"#### First of all, thank you so much for reading! If you liked my work, please, do not forget to leave an upvote: it will be really appreciated and it will motivate me in offering more content to the Kaggle community ! :)","e4a56768":"##### Let's try to plot a scatterplot of height vs weight to see the distribution of values.\n##### First of all, we have to take gold_medalist dataframe","e72c8c1f":"##### We can now join two dataframes using as key the NOC column with the pandas Merge function [See Doumentation](http:\/\/https:\/\/pandas.pydata.org\/pandas-docs\/stable\/merging.html)","0de4c521":"##### As per the plot, Relationship between Height and Weight is linear.\n##### Let's look which is athlete that weighs more than 160Kg and their sports.","0992b6ac":"##### Before make distribution plot we have to check is there any NaN values in Age Columns","c2731a8c":"##### 65 people: Great! But which disciplines allows you to land a gold medal after your fifties?\n\nWe will now create a new dataframe called masterDisciplines in which we will insert this new set of people and then create a visualization with it.","43170c3c":"Hey Thanks for viewing my kernel.\n\nToday, we will evaluate modern day of Olympic Games from 1896 to 2016.\n\n**Content**\n\nThe file athlete_events.csv contains 271116 rows and 15 columns; Each row corresponds to an individual athlete competing in an individual Olympic event (athlete-events). The columns are the following:\n* ID - Unique number for each athlete\n* Name - Athlete's name\n* Sex - M or F\n* Age - Integer;\n* Height - In centimeters;\n* Weight - In kilograms;\n* Team - Team name;\n* NOC - National Olympic Committee 3-letter code;\n* Games - Year and season;\n* Year - Integer;\n* Season - Summer or Winter;\n* City - Host city;\n* Sport - Sport;\n* Event - Event;\n* Medal - Gold, Silver, Bronze, or NA.","654cc3b0":"##  Importing Modules","e52b18b3":"## Joining two DataFrames","4a812615":"##### It seems some people hit gold metal at their age of 50+","2536ba47":"Female vs Age "}}