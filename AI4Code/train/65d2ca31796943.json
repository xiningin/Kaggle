{"cell_type":{"58231375":"code","58e9340c":"code","aa805204":"code","b8aaf8a2":"code","c3580a12":"code","42c23a53":"code","7504da99":"code","989f8821":"code","d6c3b641":"code","7c871718":"code","8cd901c9":"code","9517514d":"code","54860113":"code","ea6fa8e6":"code","84d1791f":"code","d458196a":"code","5ab915d8":"code","a68ccc2d":"code","bcaf034e":"code","d6e910f2":"code","5c185889":"code","520642cc":"code","01cb7c15":"code","e396a184":"code","5b515c95":"code","ae7159c6":"code","974c10e7":"code","e8d107db":"code","26217137":"code","33a044c8":"code","cdb0a86e":"code","8830dd37":"code","e0a01f78":"code","b2d81b9f":"code","3df5020e":"code","6b09d0d5":"code","d1c734cf":"code","0d417150":"code","1f2b197a":"code","849534a2":"code","304545c7":"code","bceef5cd":"code","23ab3605":"code","d9b046da":"code","5411589e":"code","c53a2411":"code","c77fb224":"code","89191b9b":"code","7db07352":"code","f157b0db":"code","60681104":"code","843813f5":"code","2bda8c43":"code","bad2914c":"code","8e9c151d":"code","ee642b88":"code","6f42d6e7":"code","f8801ae8":"code","e020582e":"code","4c4345fa":"code","3107db90":"code","80e16e72":"code","b179e551":"code","80fe7215":"code","d94838e3":"code","1e1f3b29":"code","3715b0f4":"markdown"},"source":{"58231375":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","58e9340c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom warnings import filterwarnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.stats import norm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import cross_val_score,KFold\nimport plotly.express as px\nfrom sklearn.svm import SVC\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","aa805204":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","b8aaf8a2":"train_df.head()","c3580a12":"train_df.isnull().sum()","42c23a53":"#cabin has more null values. So let's drop cabin column\ntrain_df=train_df.drop(columns=[\"Cabin\"],axis=1)\ntrain_df","7504da99":"#Also let's drop few more columns which doesn't have any impact in our prediction\ntrain_df=train_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\"],axis=1)\ntrain_df","989f8821":"#missing values\ntrain_df.isnull().sum()","d6c3b641":"train_df.groupby(\"Pclass\")[\"Age\"].mean()","7c871718":"#Now, Let's fill all the missing values to proceed for our analysis\ndef Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age\n    ","8cd901c9":"train_df[\"Age\"]=train_df[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","9517514d":"train_df.isnull().sum()","54860113":"#let's see the rows with missing values\ntrain_df[train_df.isnull().any(axis=1)]","ea6fa8e6":"train_df.groupby(\"Pclass\")[\"Embarked\"].value_counts()","84d1791f":"impute=SimpleImputer(strategy=\"most_frequent\")\ntrain_df[[\"Embarked\"]]=impute.fit_transform(train_df[[\"Embarked\"]])","d458196a":"x=[\"Pclass-1\",\"Pclass-2\",\"Pclass-3\"]\ny=[38.23,29.87,25.14]\nplt.bar(x,y)\nplt.xlabel(\"PCLASS\")\nplt.ylabel(\"AGE\")\nplt.title(\"Age in different classes\")\nplt.show()","5ab915d8":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Survived\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.show()","a68ccc2d":"train_df.groupby(\"Sex\")[\"Survived\"].value_counts()","bcaf034e":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Sex\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.title(\"number of Male and Female\")\nplt.xlabel('SEX')\nplt.ylabel(\"total count\")\nplt.show()","d6e910f2":"train_df[\"Embarked\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Embarked\",fontsize=15)\nplt.show()","5c185889":"train_df[\"Pclass\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Percentage of People in different class\",fontsize=15)\nplt.show()","520642cc":"s=train_df.groupby(\"Sex\")[\"Survived\"].value_counts()\ncolor=plt.cm.ocean(np.linspace(0,2,5))\nx=[\"Female\",\"male\"]\ny=[s[0],s[3]]\nplt.bar(x,y,color=color)\nplt.xlabel('SEX')\nplt.ylabel(\"Survived\")\nplt.show()","01cb7c15":"sns.heatmap(train_df.corr(),annot=True)\nplt.show()","e396a184":"#To see how age is distributed\ntrain_df[\"Age\"].hist(figsize=(12,8),bins=15)\nplt.show()","5b515c95":"#To see how Fare is distributed\ntrain_df[\"Fare\"].hist(figsize=(12,8),bins=25)\nplt.show()","ae7159c6":"e=train_df.groupby(\"Embarked\")[\"Fare\"].mean()\ncolor=plt.cm.ocean(np.linspace(0,2,7))\nx=[\"C_Embark\",\"Q_Embark\",\"S_Embark\"]\ny=[e[0],e[1],e[2]]\nplt.bar(x,y,color=color)\nplt.xlabel(\"Embarked\",fontsize=(15))\nplt.ylabel(\"Fare\",fontsize=(15))\nplt.show()","974c10e7":"fig=px.sunburst(train_df.groupby([\"Pclass\",\"Sex\",\"Survived\"]).size().reset_index(name=\"count\"),path=[\"Pclass\",\"Sex\",\"Survived\"],values=\"count\",title=\"Count of Survived Based on Pclass and Sex\")\nfig.show()","e8d107db":"sex=pd.get_dummies(train_df[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(train_df[\"Embarked\"],drop_first=True)","26217137":"train_df=train_df.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","33a044c8":"train_df=pd.concat([train_df,sex,Embark],axis=1)","cdb0a86e":"X=train_df.iloc[:,1:].values\ny=train_df.iloc[:,0].values","8830dd37":"sc=StandardScaler()\nX=sc.fit_transform(X)","e0a01f78":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=100)","b2d81b9f":"rfc=RandomForestClassifier(max_depth=10,random_state=100)","3df5020e":"rfc.fit(X_train,y_train)\npred=rfc.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","6b09d0d5":"cm=confusion_matrix(y_test,pred)\ncm","d1c734cf":"report=classification_report(y_test,pred)\nprint(\"RandomForestClassifier report \\n\",report)","0d417150":"ada=AdaBoostClassifier()\nada.fit(X_train,y_train)\npred=ada.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","1f2b197a":"cm=confusion_matrix(y_test,pred)\ncm","849534a2":"report=classification_report(y_test,pred)\nprint(\"AdaBoostClassifier report \\n\",report)","304545c7":"classifier = KNeighborsClassifier()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","bceef5cd":"cm=confusion_matrix(y_test,pred)\ncm","23ab3605":"report=classification_report(y_test,pred)\nprint(\"KNeighborsClassifier report \\n\",report)","d9b046da":"classifier = SVC()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","5411589e":"cm=confusion_matrix(y_test,pred)\ncm","c53a2411":"report=classification_report(y_test,pred)\nprint(\"SVC report \\n\",report)","c77fb224":"classifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","89191b9b":"cm=confusion_matrix(y_test,pred)\ncm","7db07352":"report=classification_report(y_test,pred)\nprint(\"Logistic Regression \\n\",report)","f157b0db":"model = GaussianNB()\nmodel.fit(X_train, y_train)\ny_model = model.predict(X_test) \npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","60681104":"cm=confusion_matrix(y_test,pred)\ncm","843813f5":"report=classification_report(y_test,pred)\nprint(\"GaussianNB \\n\",report)","2bda8c43":"test=test_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\"],axis=1)","bad2914c":"test","8e9c151d":"def Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age","ee642b88":"test[\"Age\"]=test[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","6f42d6e7":"sex=pd.get_dummies(test[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(test[\"Embarked\"],drop_first=True)","f8801ae8":"test=test.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","e020582e":"test=pd.concat([test,sex,Embark],axis=1)","4c4345fa":"test.isnull().sum()","3107db90":"test[\"Fare\"]=test[\"Fare\"].fillna(test[\"Fare\"].mean())","80e16e72":"test=sc.fit_transform(test)","b179e551":"y_pred=rfc.predict(test)","80fe7215":"y_pred","d94838e3":"output = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': y_pred})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved.\")","1e1f3b29":"print(output.head())","3715b0f4":"# **If you like my notebook. Don't forget to upvote it!!**"}}