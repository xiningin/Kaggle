{"cell_type":{"2e980d1e":"code","9901c744":"code","72193532":"code","ddfd6b97":"code","5f1c4ec0":"code","357082b3":"code","a793a727":"code","6d4234d6":"code","35a12a35":"code","dd7a0f0f":"code","f5c6e314":"code","3ab68926":"code","65781c15":"code","bff637f4":"code","04cb272d":"code","3055a4d6":"code","e5b312c0":"code","badc54a1":"code","3d7779eb":"code","163e0de7":"code","894b17d5":"code","cfab76c7":"code","29369414":"code","cb8cc2a1":"code","3c179022":"code","097397b6":"code","5f7cf95f":"code","f261144e":"code","7b302693":"code","a93211f8":"code","207e0333":"code","f57578fe":"code","5fadc372":"code","d5c6d76e":"code","3a417503":"code","ff9b401e":"code","dfbc337b":"code","25c06447":"code","a209df67":"code","177d380b":"code","4265ea88":"code","2dc2076e":"code","9e27b927":"code","9970aa8c":"code","0a65bb2b":"code","cf37c1c6":"code","3b9972d8":"code","4709236c":"code","4ddbc140":"code","5732bdfa":"code","fa8ed5cc":"code","ed7e6d51":"code","dca4884c":"code","9bf134db":"code","e5dea622":"code","62248f6f":"code","5b4c4e1f":"code","27870ac0":"code","4ff0d464":"code","3de9d471":"code","0bc64402":"code","ffb156b0":"code","05844aa8":"code","b7e6cbfd":"code","3aea30c1":"code","638a2a54":"code","e63b521c":"code","f7f202cb":"code","5be29f6d":"code","e9e26521":"code","88be7f9d":"code","fb6aab62":"code","ddc0bb8f":"code","503dea02":"code","13642957":"code","a8f0a97d":"code","604d7216":"code","dde2589c":"code","bba9673a":"code","e0e087df":"code","7b571944":"code","76d10e8a":"code","85735728":"code","6d472216":"code","4d53cf3d":"code","21a8a227":"code","0813e31f":"code","71963815":"code","161c5cfb":"code","4e25b1f2":"code","eef7056c":"code","20512b2f":"code","dd8f091d":"code","06d93785":"code","c0192423":"code","22352b1a":"code","68ff61df":"code","d5969256":"code","eccd4c4f":"code","f8813812":"code","2edd867f":"code","2368cb7c":"code","4ddad646":"code","a6690201":"code","781e5a5c":"code","26efef7c":"code","fff426f0":"code","c3184383":"code","561b38b2":"code","7ae32725":"code","9c53972c":"code","bb1c1f6d":"code","85b5e3b6":"code","6a7187a9":"code","3bd054c8":"code","b7708313":"code","3b763589":"code","7ca7cd4d":"code","cf299448":"code","34daa79a":"code","3e4f26b5":"code","8de3b9c3":"code","5e2aaf54":"code","2c5e05ba":"code","0b6f760c":"code","f4920558":"markdown","e5194d0a":"markdown","e93c6b7b":"markdown","7e309015":"markdown","84c46233":"markdown","d006b9f2":"markdown","62bc5140":"markdown","74109d0e":"markdown","e8c6709d":"markdown","c502b59e":"markdown","9bac9b3a":"markdown","94eb08c9":"markdown","db7a2c61":"markdown","721ad3bb":"markdown","004362f1":"markdown","bee491a6":"markdown","35c5a6bf":"markdown","e0f73c1f":"markdown","e8467a6d":"markdown","73e50e6c":"markdown","a39f486a":"markdown","f3a6f990":"markdown"},"source":{"2e980d1e":"import pandas as pd \nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nfrom sklearn import svm\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestClassifier,ExtraTreesClassifier\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\n\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report,recall_score\nfrom sklearn.metrics import roc_auc_score,roc_curve,scorer,precision_score\nfrom sklearn.metrics import f1_score","9901c744":"df = pd.read_csv(\"..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")","72193532":"dt = df.copy()","ddfd6b97":"df.head()","5f1c4ec0":"df.isnull().sum()","357082b3":"df['enrollee_id'].head()","a793a727":"df['enrollee_id'].isnull().sum()","6d4234d6":"sns.distplot(df['enrollee_id'], color = 'blue')\nplt.title('Enrollee ID')","35a12a35":"df.drop(['enrollee_id'] ,axis= 1 , inplace = True)","dd7a0f0f":"df['city'].head()","f5c6e314":"df['city'].value_counts()","3ab68926":"df['city'] = df['city'].astype('category')","65781c15":"df[['city' , 'city_development_index' , 'relevent_experience' , 'education_level' ,\n'major_discipline' ,'experience' ,'training_hours']].head()","bff637f4":"#the first 20 different values in cuty column\ndf['city'].value_counts()[:20].plot(kind='barh')","04cb272d":"df['city_development_index'].head()","3055a4d6":"df['city_development_index'].isnull().sum()","e5b312c0":"sns.distplot(df['city_development_index'], color = 'RED')\nplt.title('City Development Index')","badc54a1":"import matplotlib.pyplot as plt\nplt.boxplot(df['city_development_index'], vert=False)\nplt.title(\"Detecting outliers using Boxplot\")\nplt.xlabel('city_development_index')","3d7779eb":"df['city_development_index'].describe()","163e0de7":"df['gender'].head()","894b17d5":"df['gender'].value_counts()","cfab76c7":"df['gender'].isnull().sum()","29369414":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='gender',data=df.head(500),  palette='pastel')","cb8cc2a1":"df['gender'] = df['gender'].fillna('Male')","3c179022":"df['gender'].isnull().sum()","097397b6":"df['gender'] = df['gender'].astype('category')","5f7cf95f":"df['relevent_experience'].head()","f261144e":"df['relevent_experience'].value_counts()","7b302693":"df['relevent_experience'].isnull().sum()","a93211f8":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='relevent_experience',data=df.head(500),  palette='pastel')","207e0333":"df['enrolled_university'].head()","f57578fe":"df['enrolled_university'].value_counts()","5fadc372":"df['enrolled_university'].isnull().sum()","d5c6d76e":"df['enrolled_university'].mode()","3a417503":"df['enrolled_university'] = df['enrolled_university'].fillna('no_enrollment')","ff9b401e":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='enrolled_university',data=df.head(500),  palette='pastel')","dfbc337b":"df['education_level'].head()","25c06447":"df['education_level'].value_counts()","a209df67":"df['education_level'].isnull().sum()","177d380b":"df['education_level'].mode()","4265ea88":"df['education_level'] = df['education_level'].fillna('Graduate')","2dc2076e":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='education_level',data=df.head(500),  palette='pastel')","9e27b927":"df['major_discipline'].head()","9970aa8c":"df['major_discipline'].value_counts()","0a65bb2b":"df['major_discipline'].isnull().sum()","cf37c1c6":"df['major_discipline'].mode()","3b9972d8":"df['major_discipline'] = df['major_discipline'].fillna('STEM')","4709236c":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='major_discipline',data=df.head(500),  palette='pastel')","4ddbc140":"df['experience'].head()","5732bdfa":"df['experience'].value_counts()","fa8ed5cc":"df['experience'].isnull().sum()","ed7e6d51":"df['experience'].mode()","dca4884c":"df['experience'] = df['experience'].fillna('>20')","9bf134db":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='experience',data=df.head(500),  palette='pastel')","e5dea622":"df['company_size'].head()","62248f6f":"df['company_size'].isnull().sum()","5b4c4e1f":"df['company_size'].value_counts()","27870ac0":"df['company_size'].mode()","4ff0d464":"df['company_size'] = df['company_size'].fillna('50-99')","3de9d471":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='company_size',data=df.head(500),  palette='pastel')","0bc64402":"df['company_type'].head()","ffb156b0":"df['company_type'].value_counts()","05844aa8":"df['company_type'].mode()","b7e6cbfd":"df['company_type'].isnull().sum()","3aea30c1":"df['company_type'] = df['company_type'].fillna('Pvt Ltd')","638a2a54":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='company_type',data=df.head(500),  palette='pastel')","e63b521c":"df['last_new_job'].head()","f7f202cb":"df['last_new_job'].value_counts()","5be29f6d":"df['last_new_job'].mode()","e9e26521":"df['last_new_job'].isnull().sum()","88be7f9d":"df['last_new_job'] = df['last_new_job'].fillna(1)","fb6aab62":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='last_new_job',data=df.head(500),  palette='pastel')","ddc0bb8f":"df['training_hours'].head()","503dea02":"df['training_hours'].value_counts()","13642957":"df['training_hours'].mode()","a8f0a97d":"df['training_hours'].isnull().sum()","604d7216":"sns.distplot(df['training_hours'], color = 'BLACK')\nplt.title('Training Hours')","dde2589c":"plt.show()\ndf.boxplot(column='training_hours', by='target')","bba9673a":"df['target'].head()","e0e087df":"df['target'].value_counts()","7b571944":"df['target'].mode()","76d10e8a":"df['target'].isnull().sum()","85735728":"df['target'] = df['target'].astype(int)","6d472216":"df['target'] = df['target'].astype('category')","4d53cf3d":"countplt, ax = plt.subplots(figsize = (10,7))\nax =sns.countplot(x='target',data=df.head(500),  palette='pastel')","21a8a227":"import plotly.express as px\ndf1 = df.tail(100)\nfig = px.sunburst(df1, path=[\"gender\",'experience'],\n                  color='education_level', hover_data=['target'],\n                  color_continuous_scale='RdBu')\nfig.show()","0813e31f":"dt[['city' , 'city_development_index' , 'relevent_experience' , 'education_level' ,\n'major_discipline' ,'experience' ,'training_hours']].head()","71963815":"df[[ 'city_development_index' , 'training_hours' ]] = df[[ 'city_development_index' , 'training_hours' ]].astype(float)","161c5cfb":"features = df[[ 'city_development_index' , 'training_hours' ]]","4e25b1f2":"from scipy import stats\nfor col in features:\n    plt.figure(figsize=(15,4))\n    plt.subplot(131)\n    sns.distplot(df[col], label=\"skew: \" + str(np.round(df[col].skew(),2)))\n    plt.legend()\n    plt.subplot(132)\n    sns.boxplot(df[col])\n    plt.subplot(133)\n    stats.probplot(df[col], plot=plt)\n    plt.tight_layout()\n    plt.show()","eef7056c":"mean = np.mean(features)\nstd = np.std(features)\nprint('mean of the dataset is', mean)\nprint('std. deviation is', std)","20512b2f":"df = df.loc[df.city_development_index > 0.5]\ndf = df.loc[df.training_hours < 157]","dd8f091d":"from scipy import stats\nfor col in features:\n    plt.figure(figsize=(15,4))\n    plt.subplot(131)\n    sns.distplot(df[col], label=\"skew: \" + str(np.round(df[col].skew(),2)))\n    plt.legend()\n    plt.subplot(132)\n    sns.boxplot(df[col])\n    plt.subplot(133)\n    stats.probplot(df[col], plot=plt)\n    plt.tight_layout()\n    plt.show()","06d93785":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","c0192423":"df.dtypes","22352b1a":"df[['city' , 'gender' , 'relevent_experience' ,'enrolled_university' , 'education_level' , 'major_discipline' , 'experience' , 'company_size' ,'company_type' , 'last_new_job']].head()","68ff61df":"df['city'] = df['city'].astype('str')\ndf['target'] = df['target'].astype(int)\ndf['target'] = df['target'].astype('str')","d5969256":"df.dtypes","eccd4c4f":"df[['city' , 'gender' , 'relevent_experience']] = df[['city' , 'gender' , 'relevent_experience']].apply(LabelEncoder().fit_transform)","f8813812":"df[['education_level' , 'major_discipline' , 'experience' ]] = df[['education_level' , 'major_discipline' , 'experience' ]].apply(LabelEncoder().fit_transform)","2edd867f":"df['company_size'].value_counts()","2368cb7c":"df.head()","4ddad646":"df[['company_size' , 'last_new_job']].dtypes","a6690201":"df['company_size'] = le.fit_transform(df.company_size.values)\ndf['enrolled_university'] = le.fit_transform(df.company_size.values)\ndf['company_type'] = le.fit_transform(df.company_size.values)","781e5a5c":"df['last_new_job'] = le.fit_transform(df['last_new_job'].astype(str))","26efef7c":"df['last_new_job'].head()","fff426f0":"df['last_new_job'].value_counts()","c3184383":"df.head()","561b38b2":"df[['city_development_index' , 'training_hours']].describe()","7ae32725":"cols_to_norm = ['city_development_index' , 'training_hours']\ndf[cols_to_norm] = df[cols_to_norm].apply(lambda x: (x - x.min()) \/ (x.max() - x.min()))","9c53972c":"df_test = pd.read_csv(\"..\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv\")","bb1c1f6d":"countplt, ax = plt.subplots(figsize = (5,5))\nax =sns.countplot(x='target',data=df,  palette='pastel')","85b5e3b6":"X1 = df.drop(columns=['target'] , axis=1 )\ny1 = df['target']","6a7187a9":"X_train,X_test,y_train,y_test = train_test_split(X1,y1,test_size=0.25,random_state=0)","3bd054c8":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nclassifiers = ['LinearSVM', 'RadialSVM', \n               'Logistic',  'RandomForest', \n               'KNeighbors','DecisionTree', \n               'GradientBoosting']\n\nmodels = [svm.SVC(kernel='linear'),\n          svm.SVC(kernel='rbf'),\n          LogisticRegression(max_iter = 1000),\n          RandomForestClassifier(n_estimators=200, random_state=0),\n          DecisionTreeClassifier(random_state=0),\n          KNeighborsClassifier(),\n          GradientBoostingClassifier(random_state=0)]","b7708313":"from sklearn.model_selection import train_test_split\ndef split(df,label):\n    X_tr, X_te, Y_tr, Y_te = train_test_split(df, label, test_size=0.25, random_state=42)\n    return X_tr, X_te, Y_tr, Y_te\n\ndef acc_score(df,label):\n    Score = pd.DataFrame({\"Classifier\":classifiers})\n    j = 0\n    acc = []\n    X_train,X_test,Y_train,Y_test = split(df,label)\n    for i in models:\n        model = i\n        model.fit(X_train,Y_train)\n        predictions = model.predict(X_test)\n        acc.append(accuracy_score(Y_test,predictions))\n        j = j+1     \n    Score[\"Accuracy\"] = acc\n    Score.sort_values(by=\"Accuracy\", ascending=False,inplace = True)\n    Score.reset_index(drop=True, inplace=True)\n    return Score","3b763589":"new_data = df[[\"training_hours\",\"city_development_index\"]]","7ca7cd4d":"pred = df['target']\nacc_score(new_data,pred)","cf299448":"X2 = df.drop(columns=['target'] , axis=1 )\ny2 = df['target']","34daa79a":"X2_train,X2_test,y2_train,y2_test = train_test_split(X2,y2,test_size=0.25,random_state=0)","3e4f26b5":"from collections import Counter\nfrom sklearn.datasets import make_classification\nfrom imblearn.over_sampling import SMOTE\n\nX2 = df.drop(columns=['target'] , axis=1 )\ny2 = df['target']\n\n# summarize class distribution\ncounter = Counter(y2)\nprint(counter)\n\n\n# transform the dataset\noversample = SMOTE()\nX2, y2 = oversample.fit_resample(X2, y2)\n\n# summarize the new class distribution\ncounter = Counter(y2)\nprint(counter)","8de3b9c3":"df_New = pd.concat([X2, y2], axis=1)","5e2aaf54":"countplt, ax = plt.subplots(figsize = (5,5))\nax =sns.countplot(x='target',data=df_New,  palette='pastel')","2c5e05ba":"from sklearn.model_selection import train_test_split\ndef split(df_New,label):\n    X_tr, X_te, Y_tr, Y_te = train_test_split(df_New, label, test_size=0.25, random_state=42)\n    return X_tr, X_te, Y_tr, Y_te\n\ndef acc_score(df,label):\n    Score = pd.DataFrame({\"Classifier\":classifiers})\n    j = 0\n    acc = []\n    X_train,X_test,Y_train,Y_test = split(df_New,label)\n    for i in models:\n        model = i\n        model.fit(X_train,Y_train)\n        predictions = model.predict(X_test)\n        acc.append(accuracy_score(Y_test,predictions))\n        j = j+1     \n    Score[\"Accuracy\"] = acc\n    Score.sort_values(by=\"Accuracy\", ascending=False,inplace = True)\n    Score.reset_index(drop=True, inplace=True)\n    return Score","0b6f760c":"pred = df_New['target']\nacc_score(new_data,pred)","f4920558":"## Modeling (Before Balance Data)","e5194d0a":"## target","e93c6b7b":"## Modeling (After Balance Data)","7e309015":"## relevent_experience","84c46233":"## education_level","d006b9f2":"#### After Handel Outliers","62bc5140":"## last_new_job","74109d0e":"## experience","e8c6709d":"## city_development_index","c502b59e":"## training_hours","9bac9b3a":"# Label Encoding","94eb08c9":"## city","db7a2c61":"## major_discipline","721ad3bb":"## gender","004362f1":"## Normalization","bee491a6":"## enrolled_university","35c5a6bf":"## enrollee_id","e0f73c1f":"## company_type","e8467a6d":"# Libraries","73e50e6c":"# Outliers","a39f486a":"#### Before Handel Outliers","f3a6f990":"## company_size"}}