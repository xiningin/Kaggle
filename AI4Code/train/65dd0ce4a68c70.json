{"cell_type":{"e2f3ddae":"code","c7834336":"code","6abce01e":"code","f3a8ae81":"code","da2304d9":"code","d4e6dadf":"code","1f8c9ca8":"code","74df17b4":"code","1f839bae":"markdown","7c566396":"markdown","323bee67":"markdown","8f54c318":"markdown","73800c96":"markdown","edec7ec5":"markdown","55210977":"markdown","8de3c095":"markdown"},"source":{"e2f3ddae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c7834336":"submit_list = os.listdir(\"..\/input\/comp\/submission\/\")\nprint(submit_list)","6abce01e":"predict_list = ['cat']* 50\nprint(predict_list)","f3a8ae81":"a=[1,2,3]\nb=['a','b','c']\nfor first, second in zip(a,b):\n    print(first,second)","da2304d9":"f = open('temp.csv','w')     #temp.csv \ud30c\uc77c\uc744 write\ubaa8\ub4dc\ub85c open\nf.write(\"filename,class\\n\")  #csv\ud30c\uc77c\uc758 \uccab\ubc88\uc9f8 row\uc5d0\ub294 column\uba85\uc774 \ub4e4\uc5b4\uac11\ub2c8\ub2e4.  f.write\ub294 \uae00\uc790\uc218\ub97c return\ud558\uc9c0\ub9cc \ubcc4\ub85c \uc911\uc694\ud55c \ub0b4\uc6a9\uc740 \uc544\ub2d9\ub2c8\ub2e4. ","d4e6dadf":"for fn, class_name in zip(submit_list,predict_list):\n    f.write(fn+\",\"+class_name+'\\n')     #python\uc5d0\uc11c +\ub294 \ubb38\uc790\uc5f4\uc744 \ud569\uccd0\uc8fc\ub294\ub370\ub3c4 \uc774\uc6a9\ub429\ub2c8\ub2e4. \"filename,class_name\\n\"\uc758 \ud615\ud0dc\ub85c \ud30c\uc77c\uc5d0 \ucd9c\ub825\ub429\ub2c8\ub2e4. \nf.close()    ","1f8c9ca8":"import pandas as pd","74df17b4":"pd.read_csv('temp.csv')","1f839bae":"## file open","7c566396":"## csv\ud30c\uc77c\uc5d0 wav \ud30c\uc77c\uba85\uacfc predict class \uc791\uc131\n\n\uc704\ucabd\uc5d0 \ubbf8\ub9ac submit_dir\ubcc0\uc218\uc5d0 \ud30c\uc77c\uba85\ub4e4\uc744 \uc800\uc7a5\ud574\ub450\uc5c8\uc73c\uba70\n\npredict_class\ub294 'cat'\uc73c\ub85c\ub9cc \uac00\ub4dd\ucc2c 50\uc758 \uae38\uc774\ub97c \uac00\uc9c0\ub294 list\ub97c \uc0dd\uc131\ud574 \ub450\uc5c8\uc2b5\ub2c8\ub2e4. \n\n\uc774\ub97c \ucc38\uace0\ud558\uc5ec \uc544\ub798 \ucf54\ub4dc\ub97c \ubd10\uc8fc\uc138\uc694.","323bee67":"# file\ub0b4\uc6a9 \ud655\uc778\npandas\ub77c\ub294 library\ub97c \uc774\uc6a9\ud574\uc11c \ud655\uc778\uc744 \ud560\uaec0\ub370 \uc5ec\ub7ec\ubd84\uc740 \uadf8\ub0e5 windows\uc5d0\uc11c excel\ub4f1\uc744 \uc774\uc6a9\ud574\uc11c \ud655\uc778\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. <br>\nnotebook\uc744 \uc774\uc6a9\ud558\uc5ec \uc124\uba85\ud558\uae30 \ud3b8\ud558\ub3c4\ub85d \uc800\ub294 \uc774 library\ub97c \uc368\uc11c \ubcf4\uc5ec\ub4dc\ub9b4\uac8c\uc694.","8f54c318":"# CSV\ud30c\uc77c \uc0dd\uc131\n\uc704\uc758 function\ub4e4\uc744 \uc0ac\uc6a9\ud558\uc5ec csv\ud30c\uc77c\uc744 \uc0dd\uc131\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ncsv\ud30c\uc77c\uc744 \ub2e4\uc74c\uacfc \uac19\uc740 \ud2b9\uc131\uc744 \uc9c0\ub2d9\ub2c8\ub2e4.\n- ','\ub97c \uc774\uc6a9\ud558\uc5ec column\uc744 \uad6c\ubd84\n- '\\n'\uc744 \uc774\uc6a9\ud558\uc5ec row\ub97c \uad6c\ubd84","73800c96":"# File Handling\n- `open()` : `Python` built-in function\uc778 open\uc744 \ud1b5\ud574\uc11c `file`\uc744 `write mode`\ub85c \uc5f4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  `return file object`\n- `zip(a,b)` :  a\uc640 b\ub294 list variable\uc774\uba70 \uc774\ub458\uc744 \uc21c\uc11c\ub300\ub85c \uc9dd\uc9c0\uc740 list\ub85c \ubc18\ud658\ud574\uc90d\ub2c8\ub2e4.\n- `fileobject.write(string)` :  `fileobject`\uc5d0 \ub0b4\uc6a9\uc744 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. `print`function\ucc98\ub7fc \uc791\ub3d9\ud569\ub2c8\ub2e4.\n- `fileobject.close()` :  `fileobject`\ub97c \ub2eb\uc544\uc11c  leaking\uc744 \ubc29\uc9c0","edec7ec5":"# \uc704 \ub0b4\uc6a9\ub4e4\uc744 \ucc38\uace0\ud558\uc5ec csv\ud30c\uc77c\uc744 \ub9cc\ub4dc\uc2dc\uba74 \ub429\ub2c8\ub2e4. ","55210977":"## \ubaa8\ub4e0 element\uac00 'cat'\uc778 \uae38\uc774\uac00 50\uc778 list\uc0dd\uc131","8de3c095":"# csv \ud30c\uc77c \ub9cc\ub4e4\uae30\n\uc608\uc81c\uc774\ubbc0\ub85c 50\uac1c\uc758 \ud30c\uc77c\uc5d0 \ub300\ud574 \ubaa8\ub378\uc774 \ubaa8\ub450 cat\uc744 \uc608\uce21\ud588\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uc2e4\uc81c\ub85c \uad6c\ud604 \ud558\uc2e4\ub54c\ub294 predict_list\ub294 model.predict()\ub97c \ud1b5\ud574\uc11c \uc0dd\uc131\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \n\n"}}