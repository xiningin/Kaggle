{"cell_type":{"8d57a8df":"code","635fbde9":"code","496829e6":"code","a13f0c72":"code","8caf02bc":"code","e3bf6c12":"code","bb1339f9":"code","8a97d0de":"code","7147e856":"code","6712c400":"code","c4751ce8":"code","13ef5f68":"code","e2b95487":"code","2ca8cc78":"code","ff73d84f":"markdown","33c37bea":"markdown","7a77184e":"markdown","7c90237e":"markdown","e7770063":"markdown","6a01f5ca":"markdown","76495dd5":"markdown","062416da":"markdown"},"source":{"8d57a8df":"import numpy as np # \u7528Python\u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u8f6f\u4ef6\u5305\u3002\nimport pandas as pd # Pandas\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5206\u6790\u7ed3\u6784\u5316\u6570\u636e\u7684\u5de5\u5177\u96c6\uff1b\u5b83\u7684\u4f7f\u7528\u57fa\u7840\u662fNumpy\uff1b\u7528\u4e8e\u6570\u636e\u6316\u6398\u548c\u6570\u636e\u5206\u6790\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u6570\u636e\u6e05\u6d17\u529f\u80fd\u3002\nfrom sklearn.model_selection import train_test_split #\u7528\u4e8e\u5206\u5272\u6d4b\u8bd5\u6837\u672c\u7684\u51fd\u6570\nimport warnings\nwarnings.filterwarnings('ignore') # \u5ffd\u7565\u8b66\u544a\u6d88\u606f\nimport os\n# Any results you write to the current directory are saved as output.","635fbde9":"data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv') #\u8bfb\u53d6\u8bad\u7ec3\u96c6\ndata.head(5)","496829e6":"print(\"\u8bad\u7ec3\u96c6\u7684\u5c3a\u5bf8\uff1a\",data.shape) # \u8bad\u7ec3\u96c6\u7684\u5c3a\u5bf8\nprint(data.describe()) # \u5f97\u5230\u8bad\u7ec3\u96c6\u7684\u57fa\u672c\u7279\u5f81\nprint(\"\u662f\u5426\u6709\u7a7a\u503c\uff1a\",pd.isna(data).any().any()) # \u68c0\u67e5\u7a7a\u503c\u60c5\u51b5","a13f0c72":"data.fillna(0, inplace = True) # inplace\u53c2\u6570\u4e3aTrue\u4ee3\u8868\u76f4\u63a5\u5728\u8868\u672c\u8eab\u4e0a\u4fee\u6539\uff0c\u9ed8\u8ba4\u4e3aFalse\ndata = data.drop('Id', axis = 1) # axis\u9ed8\u8ba4\u95ee0\uff0c0\u4ee3\u8868\u4ee5\u884c\u7d22\u5f15\u68c0\u7d22\uff0c1\u4ee3\u8868\u4ee5\u5217\u7d22\u5f15\u68c0\u7d22","8caf02bc":"data = pd.get_dummies(data) # \u5bf9\u79bb\u6563\u503c\u8fdb\u884cOne-hot\u7f16\u7801\ndata.head(5)","e3bf6c12":"data.shape","bb1339f9":"X = data.drop('SalePrice', axis = 1) # axis\u9ed8\u8ba4\u95ee0\uff0c0\u4ee3\u8868\u4ee5\u884c\u7d22\u5f15\u68c0\u7d22\uff0c1\u4ee3\u8868\u4ee5\u5217\u7d22\u5f15\u68c0\u7d22\nY = np.array(data['SalePrice']) # \u5c06dataframe\u8f6c\u4e3aarray\uff0carray\u76f8\u8f83\u4e8elist\u6709\u66f4\u591a\u4fbf\u6377\u7684\u51fd\u6570","8a97d0de":"feature_list = list(X.columns) # \u63d0\u53d6\u7279\u5f81\u5217\u8868\u540e\u9762\u4f1a\u7528\u5230\nfeature_list","7147e856":"X = np.array(X)","6712c400":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = .5, random_state = 10) # test_size\u662f\u6d4b\u8bd5\u6570\u636e\u96c6\u5360\u6bd4\u3002random_state\u9ed8\u8ba4\u4e3aNone\uff0c\u4ee3\u8868\u751f\u6210\u968f\u673a\u7684\u79cd\u5b50\uff0c\u82e5\u79cd\u5b50\u4e00\u6837\uff0c\u6bcf\u6b21\u62bd\u53d6\u7684\u7ed3\u679c\u90fd\u4e00\u6837","c4751ce8":"print(X_train.shape,\nX_test.shape,\nY_test.shape,\nY_train.shape)","13ef5f68":"from sklearn.ensemble import RandomForestRegressor #\u5bfc\u5165\u968f\u673a\u68ee\u6797\u7b97\u6cd5\u51fd\u6570","e2b95487":"rf = RandomForestRegressor(n_estimators = 2000, random_state=10) #n_estimators\u662f\u751f\u6210\u7684\u6570(\u51b3\u7b56\u6811)\u7684\u4e2a\u6570\uff0c\u56e0\u4e3a\u968f\u673a\u68ee\u6797\u4e0d\u4f1a\u8fc7\u62df\u5408\uff0c\u6240\u4ee5\u6811\u8d8a\u591a\u8d8a\u51c6\u786e\n\nrf.fit(X_train, Y_train) #\u8bad\u7ec3\u6a21\u578b\n\npredictions = rf.predict(X_test) #\u6d4b\u8bd5\u6a21\u578b\n\nerrors = abs(predictions - Y_test) #\u5c06\u9884\u6d4b\u503c\u6570\u7ec4\u4e0e\u5b9e\u9645\u503c\u6570\u7ec4\u505a\u5dee\u6c42\u7edd\u5bf9\u503c\u5f97\u5230\u6bcf\u4e2a\u7ed3\u679c\u7684\u8bef\u5dee\n\nprint('Mean Absolute Error:', round(np.mean(errors),2),'degrees.') #\u5c06\u8bef\u5dee\u6c42\u5747\u503c\uff0c\u5e73\u65b9\uff0c\u5f97\u5230\u5e73\u5747\u8bef\u5dee\u7684\u5e73\u65b9","2ca8cc78":"exam = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ncontainer = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\nlines = container.shape[0] #\u5f97\u5230\u539f\u8bad\u7ec3\u96c6\u7684\u884c\u6570\ncontainer = container.drop('SalePrice', axis = 1) #\u53bb\u9664\u539f\u8bad\u7ec3\u96c6\u7684\u7ed3\u679c\u5217\nIDs = exam[['Id']] #\u5c06\u6d4b\u8bd5\u96c6ID\u5b58\u8d77\u6765\nexam = pd.concat([container,exam]) # \u4e0a\u4e0b\u5408\u5e76\u4e24\u4e2a\u8868\nexam.fillna(0, inplace = True)\nexam = exam.drop('Id', axis = 1)\nexam = pd.get_dummies(exam)\nexam = exam.iloc[lines:,] # \u53bb\u6389\u539f\u8bad\u7ec3\u96c6\nexam = exam.loc[:,feature_list] # \u6839\u636e\u539f\u7279\u5f81\u83b7\u53d6\u5217\uff0c\u5982\u679c\u5217\u4e0e\u539f\u8bad\u7ec3\u96c6\u5bf9\u4e0d\u4e0a\u5c06\u4f1a\u5728\u4f7f\u7528\u6a21\u578b\u9884\u6d4b\u65f6\u62a5\u9519\npd.isna(exam).any().any()\nexam = np.array(exam)\nresults = rf.predict(exam)\nresults = pd.DataFrame(results) # \u5c06results\u7531array\u8f6c\u4e3adataframe\nresults = results.rename(columns={0:'SalePrice'}) # \u5c06\u5217\u540d\u6539\u4e3aSalePrice\noutput = IDs.join(results) # \u5408\u5e76ID\u548c\u9884\u6d4b\u7ed3\u679c\noutput.to_csv('\/natthew.csv',index = 0)# \u8f93\u51facsv\uff0cindex\u9ed8\u8ba4\u4e3a1\uff0c\u4ee3\u8868\u662f\u5426\u4fdd\u7559\u884c\u7d22\u5f15","ff73d84f":"# \u7b2c\u516d\u6b65\uff1a\u5f97\u5230\u6700\u7ec8\u5206\u6570\n![image.png](attachment:image.png)","33c37bea":"## 3. \u5206\u5272\u51fa\u6d4b\u8bd5\u548c\u8bad\u7ec3\u6570\u636e\u96c6","7a77184e":"# \u7b2c\u4e00\u6b65\uff1a \u5bfc\u5165\u8bad\u7ec3\u6570\u636e\u96c6","7c90237e":"# \u7b2c\u4e94\u6b65\uff1a\u4f7f\u7528\u6a21\u578b\u8fdb\u884c\u6700\u7ec8\u9884\u6d4b\n## \u6ce8\u610f\uff1a\u5728\u6700\u7ec8\u9884\u6d4b\u524d\u4fee\u6539\u4ee5\u4e0a\u4ee3\u7801\uff0c\u5c06\u539f\u8bad\u7ec3\u96c6\u6574\u4e2a\u4f7f\u7528\uff0c\u4e0d\u8981\u5206\u4e3a\u4e24\u4e2a\u6570\u636e\u96c6\uff0c\u63d0\u9ad8\u6a21\u578b\u51c6\u786e\u5ea6\u3002","e7770063":"# \u7b2c\u56db\u6b65\uff1a\u8bad\u7ec3\u6a21\u578b","6a01f5ca":"# \u7b2c\u4e09\u6b65\uff1a\u4e3a\u968f\u673a\u68ee\u6797\u505a\u51c6\u5907\n## 1. \u9996\u5148\u901a\u8fc7get_dummies()\u5bf9\u79bb\u6563\u503c\u505aone-hot\u7f16\u7801\uff1a\n### \u00b7one-hot encoding\n\u79bb\u6563\u7279\u5f81\u7684\u7f16\u7801\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n    1. \u79bb\u6563\u7279\u5f81\u7684\u53d6\u503c\u4e4b\u95f4\u6ca1\u6709\u5927\u5c0f\u7684\u610f\u4e49\uff0c\u6bd4\u5982color\uff1a[red,blue],\u90a3\u4e48\u5c31\u4f7f\u7528one-hot\u7f16\u7801\n\n    2. \u79bb\u6563\u7279\u5f81\u7684\u53d6\u503c\u6709\u5927\u5c0f\u7684\u610f\u4e49\uff0c\u6bd4\u5982size:[X,XL,XXL],\u90a3\u4e48\u5c31\u4f7f\u7528\u6570\u503c\u7684\u6620\u5c04{X:1,XL:2,XXL:3}\n\n    one-hot\u7684\u57fa\u672c\u601d\u60f3\uff1a\u5c06\u79bb\u6563\u578b\u7279\u5f81\u7684\u6bcf\u4e00\u79cd\u53d6\u503c\u90fd\u770b\u6210\u4e00\u79cd\u72b6\u6001\uff0c\u82e5\u4f60\u7684\u8fd9\u4e00\u7279\u5f81\u4e2d\u6709N\u4e2a\u4e0d\u76f8\u540c\u7684\u53d6\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8be5\u7279\u5f81\u62bd\u8c61\u6210N\u79cd\u4e0d\u540c\u7684\u72b6\u6001\uff0cone-hot\u7f16\u7801\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u4e2a\u53d6\u503c\u53ea\u4f1a\u4f7f\u5f97\u4e00\u79cd\u72b6\u6001\u5904\u4e8e\u201c\u6fc0\u6d3b\u6001\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9N\u79cd\u72b6\u6001\u4e2d\u53ea\u6709\u4e00\u4e2a\u72b6\u6001\u4f4d\u503c\u4e3a1\uff0c\u5176\u4ed6\u72b6\u6001\u4f4d\u90fd\u662f0\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6211\u4eec\u4ee5\u5b66\u5386\u4e3a\u4f8b\uff0c\u6211\u4eec\u60f3\u8981\u7814\u7a76\u7684\u7c7b\u522b\u4e3a\u5c0f\u5b66\u3001\u4e2d\u5b66\u3001\u5927\u5b66\u3001\u7855\u58eb\u3001\u535a\u58eb\u4e94\u79cd\u7c7b\u522b\uff0c\u6211\u4eec\u4f7f\u7528one-hot\u5bf9\u5176\u7f16\u7801\u5c31\u4f1a\u5f97\u5230\uff1a\n    ![image.png](attachment:image.png)\n    \n    pandas\u63d0\u4f9b\u5bf9one-hot\u7f16\u7801\u7684\u51fd\u6570\u662f\uff1apd.get_dummies()\n    \n    \u5bf9\u5b98\u7f51\u63d0\u4f9b\u7684example\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u6709\u4ee5\u4e0b\u51e0\u70b9\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n        1. Series\u91cc\u7684\u6574\u6570\u4f1a\u6309\u7167one-hot\u8fdb\u884c\u7f16\u7801\uff0c\u4f46\u662f\u5728DataFrame\u91cc\u9762\u4e0d\u4f1a\n        2. \u7279\u5f81\u7684\u7ef4\u5ea6\u6570\u91cf\u4f1a\u6709\u6240\u589e\u52a0\n![image.png](attachment:image.png)\n![image.png](attachment:image.png)","76495dd5":"## 2. \u5c06\u7279\u5f81\u503c\u4e0e\u7ed3\u679c\u503c\u5206\u522b\u5b58\u5728X\u3001Y\u4e2d\uff1a","062416da":"# \u7b2c\u4e8c\u6b65\uff1a\u6e05\u6d17\u6570\u636e\n\n1. \u6570\u636e\u96c6\u542b\u6709\u7a7a\u503c\uff1a\n    \u5bf9\u7a7a\u503c\u8fdb\u884c\u586b\u5145\uff0c\u6839\u636e\u6570\u636e\u63cf\u8ff0\u6587\u4ef6\u4e2d\u5bf9\u6570\u636e\u7684\u63cf\u8ff0\uff0cNan\u503c\u5728\u8868\u4e2d\u5e76\u4e0d\u662f\u4fe1\u606f\u7f3a\u5931\uff0c\u800c\u662f\u4ee3\u8868\u65e0\uff0c\u6240\u4ee5\u90fd\u4ee50\u66ff\u4ee3Nan\n2. \u5b58\u5728\u65e0\u7528\u7684Id\u5217\uff1a\n    Drop Id \u5217"}}