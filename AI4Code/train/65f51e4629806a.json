{"cell_type":{"a2cb125a":"code","c766e37f":"code","30f243eb":"code","386e74c0":"code","9be53060":"code","43b7935d":"code","75cc3456":"code","df0c1a67":"code","23c8f7ab":"code","baec58d9":"code","af18ed8e":"code","18d6fdbc":"code","e6bff7ff":"code","2a9aa381":"code","29562cc5":"markdown"},"source":{"a2cb125a":"#ECE 475 Freq Makeene Learning Kaggle Competition\n#Jing Jiang\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import cross_val_score\n\ndf_train = pd.read_csv(\"..\/input\/trainFeatures.csv\")\ndf_test = pd.read_csv(\"..\/input\/testFeatures.csv\")\ndf_label = pd.read_csv(\"..\/input\/trainLabels.csv\")\ndf_train.head()\n\n# Any results you write to the current directory are saved as output.","c766e37f":"from sklearn.preprocessing import Imputer\n\nx = df_train.drop(['ids'], axis=1).select_dtypes(exclude=['object']).fillna(0)\nx_test = df_test.drop(['ids'], axis=1).select_dtypes(exclude=['object']).fillna(0)\ny = df_label.drop(['ids'], axis=1).drop(['ATScore'], axis=1)\ny_AT = df_label.drop(['ids'], axis=1).drop(['OverallScore'], axis=1)\n\nmy_imputer = Imputer()\nx = my_imputer.fit_transform(x)\nx_test = my_imputer.transform(x_test)\ny = my_imputer.fit_transform(y)\ny_AT = my_imputer.fit_transform(y_AT)","30f243eb":"# Regression (Simple Linear Regression)\nfrom sklearn.linear_model import LinearRegression\n\nlireg = LinearRegression().fit(x, y)\n\nlireg_pred = lireg.predict(x_test)\nlireg_pred = lireg_pred[:,0]\n\nmy_submission3 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': lireg_pred})\nmy_submission3.to_csv('submission_linear_JJ.csv', index=False)\n\n# model performed on ATScore label\nlireg2 = LinearRegression().fit(x, y_AT)\nlireg_pred2 = lireg2.predict(x_test)\n\nprint(\"The Cross-val score for ATScore using Simple Linear Regression is: \")\nprint(cross_val_score(lireg2, x, y_AT))\n\n# first five of OverallScore submission\nmy_submission3.head() ","386e74c0":"# Regression (L2 Penalty)\nfrom sklearn.linear_model import Ridge\nrid = Ridge(alpha=1.0)\nrid.fit(x, y) \n\nrid_predictions = rid.predict(x_test)\nrid_predictions = rid_predictions[:,0]\n\nmy_submission1 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': rid_predictions})\nmy_submission1.to_csv('submission_ridge_JJ.csv', index=False)\n\n# model performed on ATScore label\nrid2 = rid.fit(x, y_AT)\nrid_pred2 = rid2.predict(x_test)\n\nprint(\"The Cross-val score for ATScore using Linear Regression with L2 Penalty is: \")\nprint(cross_val_score(rid2, x, y_AT))\n\n# first five of OverallScore submission\nmy_submission1.head() ","9be53060":"# Regression (L1 Penalty)\nfrom sklearn import linear_model\nlas = linear_model.Lasso(alpha=0.1)\nlas.fit(x, y)\n\nlas_predictions = las.predict(x_test)\n\nmy_submission2 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': las_predictions})\nmy_submission2.to_csv('submission_lasso_JJ.csv', index=False)\n\n# model performed on ATScore label\nlas2 = las.fit(x, y_AT)\nlas_pred2 = las2.predict(x_test)\n\nprint(\"The Cross-val score for ATScore using Linear Regression with L1 Penalty is: \")\nprint(cross_val_score(las2, x, y_AT))\n\n# first five of OverallScore submission\nmy_submission2.head() ","43b7935d":"# XGBoost\n# from xgboost import XGBRegressor\nimport xgboost as xgb\nfrom scipy import stats\nfrom sklearn.model_selection import *\nfrom sklearn.model_selection import GridSearchCV\n\nxg_model = xgb.XGBRegressor()\nparameters1 = {'max_depth': [4, 5],\n              'min_child_weight': [1, 2],\n               'learning_rate': [0.06, 0.07],\n              'subsample': [0.8],\n              'colsample_bytree': [0.95],\n              'n_estimators': [2300, 2350],\n                'gamma': [0.4],\n              'res_alpha': [0.15],\n              'reg_lambda': [3],\n              'seed': [0]}\nxgcv = GridSearchCV(xg_model, parameters1, n_jobs=5, \n                   cv=2, \n                   verbose=True)\nxgcv.fit(x, y)\nprint(xgcv.best_params_) # print best parameters using GridSearchCV\n\nxg_pred = xgcv.predict(x_test)\nxg_pred\n\nmy_submission4 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': xg_pred})\nmy_submission4.to_csv('submission_xgboost_JJ.csv', index=False)","75cc3456":"import xgboost as xgb\n# model performed on ATScore label\nxg_model_AT = xgb.XGBRegressor(colsample_bytree=0.95, \n                         gamma=0.4, learning_rate=0.07, max_depth=4, \n                         min_child_weight=2, n_estimators=2350,reg_lambda=3, \n                         res_alpha=0.15, seed=0, subsample=0.8)\nxgAT = xg_model_AT.fit(x, y_AT)\nxgAT_pred = xgAT.predict(x_test)\n\nprint(\"The Cross-val score for ATScore using XGBoost is: \")\nprint(cross_val_score(xg_model_AT, x, y_AT))\n\n# first five of OverallScore submission\nmy_submission4.head() ","df0c1a67":"# Elastic Net Regression (A type of Regression we did not cover in class)\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.datasets import make_regression\n\nenregr = ElasticNet(random_state=0)\nenregr.fit(x, y)\n\nen_pred = enregr.predict(x_test)\nen_pred\n\nmy_submission5 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': en_pred})\nmy_submission5.to_csv('submission_elastic_net_regr_JJ.csv', index=False)\n\n# model performed on ATScore label\nen2 = enregr.fit(x, y_AT)\nen_pred2 = en2.predict(x_test)\n\nprint(\"The Cross-val score for ATScore using Elastic Net Regression is: \")\nprint(cross_val_score(en2, x, y_AT))\n\n# first five of OverallScore submission\nmy_submission5.head() ","23c8f7ab":"# Random Forest\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.datasets import make_regression\n\nregr = RandomForestRegressor(max_depth=2, random_state=0,\n                             n_estimators=100)\nregr.fit(x, y)\n\nrf_pred = regr.predict(x_test)\nrf_pred\n\nmy_submission6 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': rf_pred})\nmy_submission6.to_csv('submission_random_forest_JJ.csv', index=False)\n\n# model performed on ATScore label\nrf2 = regr.fit(x, y_AT)\nrf_pred2 = rf2.predict(x_test)","baec58d9":"print(\"The Cross-val score for ATScore using Random Forest is: \")\nprint(cross_val_score(rf2, x, y_AT))\n\n# first five of OverallScore submission\nmy_submission6.head() ","af18ed8e":"# Dimensionality Reduction using PCA (Principal Component Analysis)\nfrom sklearn.decomposition import PCA\n\npca = PCA(.95) # scikit-learn chooses the minimum number of principal components such that 95% of the variance is retained.\npca = pca.fit(x)\n\nx_pca = pca.transform(x)\nx_test_pca = pca.transform(x_test)","18d6fdbc":"# Performs XGBoost Regressor on data frame after Dimensionality Reduction with PCA\n\nfrom xgboost import XGBRegressor\n\ndr = XGBRegressor(colsample_bytree=0.95, \n                         gamma=0.4, learning_rate=0.07, max_depth=4, \n                         min_child_weight=2, n_estimators=2350,reg_lambda=3, \n                         res_alpha=0.15, seed=0, subsample=0.8)\n# Add silent=True to avoid printing out updates with each cycle\ndr.fit(x_pca, y, verbose=False)\n\ndr_pred = dr.predict(x_test_pca)\ndr_pred\n\nmy_submission7 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': dr_pred})\nmy_submission7.to_csv('submission_dimension_reduc_JJ.csv', index=False)\n\n# model performed on ATScore label\ndr2 = dr.fit(x_pca, y_AT)\ndr_pred2 = dr2.predict(x_test_pca)\n\nprint(\"The Cross-val score for ATScore using Dimensionality Reduction is: \")\nprint(cross_val_score(dr2, x_pca, y_AT))\n\n# first five of OverallScore submission\nmy_submission7.head()","e6bff7ff":"# Feature Selection using Univariate Feature Selection with selectKBest, which removes all but the k highest scoring features\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import mutual_info_regression\n\nselect = SelectKBest(mutual_info_regression, k=20).fit(x, y) # score_func = mutual_info_regression, k = 20\nx_new = select.transform(x)\nx_test_new = select.transform(x_test)","2a9aa381":"# Performs XGBoost Regressor on data frame after Feature Selection\nfrom xgboost import XGBRegressor\n\nfs = XGBRegressor(colsample_bytree=0.95, \n                         gamma=0.4, learning_rate=0.07, max_depth=4, \n                         min_child_weight=2, n_estimators=2350,reg_lambda=3, \n                         res_alpha=0.15, seed=0, subsample=0.8)\n# Add silent=True to avoid printing out updates with each cycle\nfs.fit(x_new, y, verbose=False)\n\nfs_pred = fs.predict(x_test_new)\n\nmy_submission8 = pd.DataFrame({'Id': df_test.ids, 'OverallScore': fs_pred})\nmy_submission8.to_csv('submission_feature_select_JJ.csv', index=False)\n\n# model performed on ATScore label\nfs2 = fs.fit(x_new, y_AT)\nfs_pred = fs2.predict(x_test_new)\n\nprint(\"The Cross-val score for ATScore using Feature Selection is: \")\nprint(cross_val_score(fs2, x_new, y_AT))\n\n# first five of OverallScore submission\nmy_submission8.head() ","29562cc5":"## ECE 475 Freq Makeene Learning Kaggle Competition\nJing Jiang"}}