{"cell_type":{"3d7b135d":"code","1d1c6327":"code","8e8247b1":"code","f775483d":"code","d4931b6d":"code","4b1993a8":"code","04b48b4a":"code","13382f00":"code","9d64872f":"code","dbbcb346":"code","c104c76e":"code","80d64ab7":"code","34a1fcbd":"code","08d283a1":"code","998208fc":"code","e4c57580":"code","878d63e5":"code","9e948dcd":"code","cca78e5e":"markdown","90cc7b8b":"markdown","94f7e265":"markdown","178e958b":"markdown","88542f77":"markdown","d4848cca":"markdown","74f8b464":"markdown","8f911e0c":"markdown","2ee038be":"markdown","516282c8":"markdown"},"source":{"3d7b135d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","1d1c6327":"import matplotlib.pyplot as plt\nimport seaborn as sns","8e8247b1":"df = pd.read_excel(\"\/kaggle\/input\/used_car_data.xlsx\")","f775483d":"df","d4931b6d":"merek = []\nfor name in df['Name']:\n    merek.append(name.split(\" \")[0].upper())\n    \ndf['Merek'] = merek","4b1993a8":"sns.distplot(df['Year'])","04b48b4a":"df['Kilometers_Driven'].median()","13382f00":"category = []\nfor km in df['Kilometers_Driven']:\n    if km >= df['Kilometers_Driven'].median():\n        category.append(\"Tinggi\")\n    else:\n        category.append(\"Rendah\")\n        \ndf['Category'] = category","9d64872f":"df","dbbcb346":"sns.boxplot(x=df['Kilometers_Driven'])","c104c76e":"df.sort_values(by='Kilometers_Driven', ascending=False)","80d64ab7":"index = df.loc[df['Kilometers_Driven']== 6500000]\ndf.drop(2328, inplace=True)\n","34a1fcbd":"sns.distplot(df['Kilometers_Driven'])","08d283a1":"sns.boxplot(x=df['Kilometers_Driven'])","998208fc":"# Fungsi untuk menyamakan satuan menjadi km\/kg\n# Menggunakan asumsi 1 liter = 0,8 kg\ndef samakan_satuan(mileage):\n    if pd.notna(mileage):\n        satuan= mileage.split(\" \")[1]\n        jarak = float(mileage.split(\" \")[0])\n        if satuan == \"kmpl\":\n            jarak = jarak \/ 0.8\n            return jarak\n        return jarak","e4c57580":"# Membuat suatu kolom yang memuat jarak tempuh bahan bakar yang telah disamakan satuannya menjadi km\/kg \ndf['Mileage'] = df.apply(lambda row: samakan_satuan(row['Mileage']), axis=1)","878d63e5":"# Membuat DataFrame yang menyortir rata-rata jarak yang ditempuh dari setiap bahan bakar yang ada \ndf.groupby('Fuel_Type').mean().sort_values(by='Mileage', ascending=False)","9e948dcd":"average_price = df.groupby(['Merek']).Price.agg(['mean'])\naverage_price","cca78e5e":"# Analisis Tambahan","90cc7b8b":"# Nomor 6","94f7e265":"* Mencari penyebaran menggunakan Histogram dan Kernel Density Estimate","178e958b":"Untuk mengetahui bahan bakar yang paling hemat, diperlukannya persamaan dalah satuan jarak yang ditempuh (terdapat 2 jenis satuan yaitu km\/liter dan km\/kg). \nSetelah disamakan satuannya, dibuatlah DataFrame yang menampilkan yang menampilkan rata-rata jarak yang ditempuh dalam km\/kg.\nBerdasarkan DaraFrame yang telah dibuat, dapat terlihat jelas bahwa tipe bahan bakar yang paling hemat adalah CNG.","88542f77":"Dapat terlihat dengan jelas pada visualisasi data menggunakan box plot dan scatter plot bahwa terdapat suatu data yang sangat berbeda \/ pencilan dalam penyebaran datanya. \nBerdasarkan data yang telah di sortir terurut berdasarkan jarak yang ditempuhnya, sudah pasti data yang telah menempuh jarak sejauh 6500000 km ini merupakan outlier","d4848cca":"# Nomor 5","74f8b464":"* **Mencari outlier dengan menggunakan box plot**","8f911e0c":"Berdasarkan grafik yang didapat, distribusi tahun edisi tersebut berupa negative skew","2ee038be":"# NOMOR 3","516282c8":"# Nomor 9"}}