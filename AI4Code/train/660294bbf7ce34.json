{"cell_type":{"1c2e410c":"code","ef0639d4":"code","a7de3688":"code","1833945b":"code","1a9f7bea":"code","daa7007c":"code","b5f096bc":"code","ed777f41":"code","4b72c5c7":"code","86f7fbc4":"code","fd3ba060":"code","eb420c6c":"code","23876b44":"code","16d2d702":"code","92ef4dd1":"code","754e35b4":"code","a1cd0953":"code","da7cd1d7":"code","fd328878":"code","e8d5944f":"code","8dd21c52":"code","a4f2456a":"code","fabef0d1":"code","3e75ab2d":"code","e75b03f7":"code","d1559434":"code","b3907e8e":"code","11b22208":"code","1c4abe7a":"code","ce2da4dd":"code","fd03f93f":"code","0b9e31b8":"code","c8e33441":"code","a1d81ba5":"code","6d3c3cd0":"code","eca9e539":"code","ea569422":"code","ab234926":"code","f1ceb3fc":"code","2f3113a2":"code","2d60ae52":"code","561cc4c3":"code","70ab0f93":"code","8f794661":"code","5346f4da":"code","13486786":"code","2dddb9e0":"code","fb6f2c44":"code","f011513b":"code","c6120754":"code","f17fb1da":"code","c6e8916f":"code","20bf48f6":"code","9b9cf857":"code","5f4b5fc8":"code","4bd4c920":"code","eb0abb8f":"code","7ae75c6d":"code","3ab4cfac":"code","a719c912":"code","bbdc3e3c":"code","d6e9568e":"code","3d15227e":"code","bd8747c3":"code","9b0b7712":"code","c2b2ee8e":"code","d95587a2":"code","4089fbf7":"code","f1930628":"code","4a20f4ef":"code","16eedf94":"code","99e469fc":"code","985c7201":"code","aef9528c":"code","652b0a01":"code","c6dfec2d":"code","141a8a4a":"code","3959087d":"code","a32c6a94":"code","ec67d71a":"code","6527625e":"code","32ea8b52":"code","c8a16799":"code","284b91e3":"code","472c0f5a":"code","58adf72b":"code","08115c7a":"code","ca150b43":"markdown","d32db4d9":"markdown","fe205ea6":"markdown","bb468ee7":"markdown","16f33e90":"markdown","37314cf8":"markdown","e670550b":"markdown","bae787b6":"markdown","2304009a":"markdown","b29549dd":"markdown","4df1c7d9":"markdown","59f92ab7":"markdown","8d6bf6b8":"markdown","3be1c4f7":"markdown","bbdd7d85":"markdown","b84eea0e":"markdown","8b954822":"markdown","33f83778":"markdown","0c7f0e7d":"markdown","2e00b9ff":"markdown","771edb75":"markdown","b645ea75":"markdown","dfeebdd1":"markdown","652ebed1":"markdown","c86b7ffe":"markdown","c9a28fec":"markdown","98d48990":"markdown","b5ba9bc0":"markdown","9af957c1":"markdown","417f5d05":"markdown","715af704":"markdown","98a186bb":"markdown","cd3a74d1":"markdown","3ed92798":"markdown","86d2a1df":"markdown","2c5f3906":"markdown","a7fb7051":"markdown","9ece2802":"markdown","dd32d429":"markdown","63f7a04a":"markdown","d33df5e9":"markdown","919c4780":"markdown","765d9546":"markdown","b7189ace":"markdown","db7b96f4":"markdown","e8f717cd":"markdown","eb10e94b":"markdown","d0ef2478":"markdown","3e7d93ca":"markdown","baf1aa69":"markdown","6d54707c":"markdown","ec6c2c3f":"markdown","e4607467":"markdown","41f544a0":"markdown","63758f17":"markdown","757cd0bd":"markdown","4d0284c1":"markdown","4178b936":"markdown","93c4643f":"markdown","0e47abfb":"markdown","16931fb1":"markdown","33b9d89c":"markdown","6ac58e02":"markdown","9c586952":"markdown","44215e99":"markdown","f3ea7c38":"markdown","34c6028f":"markdown","4edb4cf9":"markdown","4e213d99":"markdown","7412fa84":"markdown","e5f1f13d":"markdown","a57d85fe":"markdown","2d24d32d":"markdown","483f9f91":"markdown","a24d5705":"markdown","9a7b536c":"markdown","8138ffd1":"markdown","562585eb":"markdown","52b76c2a":"markdown","b8d6356f":"markdown","616282e8":"markdown","6eee2a0a":"markdown","923298d7":"markdown","ce36426d":"markdown","7cfa38ef":"markdown","639f76c7":"markdown"},"source":{"1c2e410c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\nfrom sklearn.metrics import plot_confusion_matrix\nfrom scipy.stats import norm, boxcox\nfrom collections import Counter\nfrom scipy import stats\n\n# warning library\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ef0639d4":"data = pd.read_csv(\"\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","a7de3688":"data.head()","1833945b":"# the columns \ndata.columns","1a9f7bea":"print(\"Data Shape --> \",data.shape)","daa7007c":"data.describe()","b5f096bc":"print(\"Data Info\")\ndata.info()","ed777f41":"data[[\"fixed acidity\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","4b72c5c7":"data[[\"volatile acidity\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","86f7fbc4":"data[[\"citric acid\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","fd3ba060":"data[[\"residual sugar\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","eb420c6c":"data[[\"chlorides\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","23876b44":"data[[\"free sulfur dioxide\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","16d2d702":"data[[\"total sulfur dioxide\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","92ef4dd1":"data[[\"density\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","754e35b4":"data[[\"pH\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","a1cd0953":"data[[\"sulphates\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","da7cd1d7":"data[[\"alcohol\",\"quality\"]].groupby([\"quality\"], as_index = False).mean().sort_values(by = \"quality\").style.background_gradient(\"Reds\")","fd328878":"print(\"Do we have data with null in columns?\")\ndata.columns[data.isnull().any()]","e8d5944f":"data.isnull().sum()","8dd21c52":"quality = [3,4,5,6,7,8]\nfixedAcidityMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"fixed acidity\"].mean()\n    fixedAcidityMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"fixed acidity\"], color=\"orange\")\nplt.xlabel(\"fixed acidity\")\nplt.ylabel(\"Frequency\")\nplt.title(\"fixed acidity histogram\", color = \"black\", fontweight='bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"black\", fontweight='bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = fixedAcidityMean, palette=\"YlOrBr\")\nplt.title(\"the average value of fixed acidity by quality\", color = \"black\", fontweight='bold', fontsize = 11)\nplt.xlabel(\"fixed acidity\")\nplt.ylabel(\"Frequency\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"fixed acidity\"], palette='YlOrBr')\nplt.title(\"fixed acidity & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","a4f2456a":"volatileAcidityMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"volatile acidity\"].mean()\n    volatileAcidityMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"volatile acidity\"], color=\"purple\")\nplt.xlabel(\"volatile acidity\")\nplt.ylabel(\"Frequency\")\nplt.title(\"volatile acidity histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"volatile acidity\"], fit=norm, color=\"purple\")\nplt.title(\"volatile acidity Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = volatileAcidityMean, palette= \"rocket\")\nplt.title(\"the average value of volatile acidity by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"volatile acidity mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"volatile acidity\"], palette='rocket')\nplt.title(\"volatile acidity & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","fabef0d1":"citricAcidMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"citric acid\"].mean()\n    citricAcidMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"citric acid\"], color=\"lightgreen\")\nplt.xlabel(\"citric acid\")\nplt.ylabel(\"Frequency\")\nplt.title(\"citric acid histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"citric acid\"], fit=norm, color=\"green\")\nplt.title(\"citric acid Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = citricAcidMean, palette= \"Greens\")\nplt.title(\"the average value of citric acid by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"citric acid mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"citric acid\"], palette='Greens')\nplt.title(\"citric acid & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","3e75ab2d":"residualSugarMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"residual sugar\"].mean()\n    residualSugarMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"residual sugar\"], color=\"blue\")\nplt.xlabel(\"residual sugar\")\nplt.ylabel(\"Frequency\")\nplt.title(\"residual sugar histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"residual sugar\"], fit=norm, color=\"blue\")\nplt.title(\"residual sugar Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = residualSugarMean, palette= \"crest\")\nplt.title(\"the average value of residual sugar by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"residual sugar mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"residual sugar\"], palette='crest')\nplt.title(\"residual sugar & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","e75b03f7":"chloridesMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"chlorides\"].mean()\n    chloridesMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"chlorides\"], color=\"brown\")\nplt.xlabel(\"chlorides\")\nplt.ylabel(\"Frequency\")\nplt.title(\"chlorides histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"chlorides\"], fit=norm, color=\"brown\")\nplt.title(\"chlorides Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = chloridesMean, palette= \"Set2\")\nplt.title(\"the average value of chlorides by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"chlorides mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"chlorides\"], palette='Set2')\nplt.title(\"chlorides & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","d1559434":"freeSulfurDioxideMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"free sulfur dioxide\"].mean()\n    freeSulfurDioxideMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"free sulfur dioxide\"], color=\"darkred\")\nplt.xlabel(\"free sulfur dioxide\")\nplt.ylabel(\"Frequency\")\nplt.title(\"free sulfur dioxide histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"free sulfur dioxide\"], fit=norm, color=\"darkred\")\nplt.title(\"free sulfur dioxide Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = freeSulfurDioxideMean, palette= \"OrRd\")\nplt.title(\"the average value of free sulfur dioxide by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"free sulfur dioxide mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"free sulfur dioxide\"], palette='OrRd')\nplt.title(\"free sulfur dioxide & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","b3907e8e":"totalSulfurDioxideMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"total sulfur dioxide\"].mean()\n    totalSulfurDioxideMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"total sulfur dioxide\"], color=\"#F1E68C\")\nplt.xlabel(\"total sulfur dioxide\")\nplt.ylabel(\"Frequency\")\nplt.title(\"total sulfur dioxide histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"total sulfur dioxide\"], fit=norm, color=\"#F5E68C\")\nplt.title(\"total sulfur dioxide Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = totalSulfurDioxideMean, palette= \"BrBG\")\nplt.title(\"the average value of total sulfur dioxide by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"total sulfur dioxide mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"total sulfur dioxide\"], palette='BrBG')\nplt.title(\"total sulfur dioxide & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","11b22208":"densityMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"density\"].mean()\n    densityMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"density\"], color=\"lightblue\")\nplt.xlabel(\"density\")\nplt.ylabel(\"Frequency\")\nplt.title(\"density histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"density\"], fit=norm)\nplt.title(\"density Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = densityMean, palette= \"ocean\")\nplt.title(\"the average value of density by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"density mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"density\"], palette='ocean')\nplt.title(\"density & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","1c4abe7a":"pHMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"pH\"].mean()\n    pHMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"pH\"], color=\"#00FF00\")\nplt.xlabel(\"pH\")\nplt.ylabel(\"Frequency\")\nplt.title(\"pH histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"pH\"], fit=norm, color = \"#00FF00\")\nplt.title(\"pH Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = pHMean, palette= \"hsv\")\nplt.title(\"the average value of pH by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"pH mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"pH\"], palette='hsv')\nplt.title(\"pH & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","ce2da4dd":"sulphatesMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"sulphates\"].mean()\n    sulphatesMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"sulphates\"], color=\"plum\")\nplt.xlabel(\"sulphates\")\nplt.ylabel(\"Frequency\")\nplt.title(\"sulphates histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"sulphates\"], fit=norm, color=\"plum\")\nplt.title(\"sulphates Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = sulphatesMean, palette= \"twilight\")\nplt.title(\"the average value of sulphates by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"sulphates mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"sulphates\"], palette='twilight')\nplt.title(\"sulphates & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","fd03f93f":"alcoholMean = []\n\nfor each in quality:\n    x = data[data[\"quality\"] == each]\n    mean = x[\"alcohol\"].mean()\n    alcoholMean.append(mean)\n\n\nplt.figure(figsize=(13,10))\nplt.subplot(2,2,1)\nplt.hist(data[\"alcohol\"], color=\"#DAA520\")\nplt.xlabel(\"alcohol\")\nplt.ylabel(\"Frequency\")\nplt.title(\"alcohol histogram\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,2)\nsns.distplot(data[\"alcohol\"], fit=norm, color=\"#DAA520\")\nplt.title(\"alcohol Distplot\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(2,2,3)\nsns.barplot(x = quality, y = alcoholMean, palette= \"CMRmap\")\nplt.title(\"the average value of alcohol by quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.xlabel(\"quality\")\nplt.ylabel(\"alcohol mean\")\nplt.subplot(2,2,4)\nsns.boxplot(data['quality'], data[\"alcohol\"], palette='CMRmap')\nplt.title(\"alcohol & quality\", color = \"black\", fontweight= 'bold', fontsize = 11)\n\nplt.show()","0b9e31b8":"Number = data.quality.value_counts().values\nLabel = data.quality.value_counts().index\ncircle = plt.Circle((0,0),0.2,color = \"white\")\nexplodeTuple = (0.0, 0.0, 0.0, 0.3, 0.5, 0.5)\n\nplt.figure(figsize=(13,5))\nplt.subplot(1,2,1)\nsns.countplot(data[\"quality\"])\nplt.xlabel(\"quality\")\nplt.title(\"quality distribution\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.subplot(1,2,2)\nplt.pie(Number, labels = Label,autopct='%1.2f%%', explode=explodeTuple,startangle=60)\np = plt.gcf()\np.gca().add_artist(circle) \nplt.title(\"quality distribution\", color = \"black\", fontweight= 'bold', fontsize = 11)\nplt.legend()\n\n\nplt.show()","c8e33441":"(mu, sigma) = norm.fit(data[\"fixed acidity\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"fixed acidity\", mu, \"fixed acidity\", sigma))","a1d81ba5":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"fixed acidity\"], plot = plt)\nplt.show()","6d3c3cd0":"data[\"fixed acidity\"], lam_fixed_acidity = boxcox(data[\"fixed acidity\"])","eca9e539":"(mu, sigma) = norm.fit(data[\"fixed acidity\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"fixed acidity\", mu, \"fixed acidity\", sigma))","ea569422":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"fixed acidity\"], plot = plt)\nplt.show()","ab234926":"(mu, sigma) = norm.fit(data[\"residual sugar\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"residual sugar\", mu, \"residual sugar\", sigma))","f1ceb3fc":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"residual sugar\"], plot = plt)\nplt.show()","2f3113a2":"data[\"residual sugar\"], lam_fixed_acidity = boxcox(data[\"residual sugar\"])","2d60ae52":"(mu, sigma) = norm.fit(data[\"residual sugar\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"residual sugar\", mu, \"residual sugar\", sigma))","561cc4c3":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"residual sugar\"], plot = plt)\nplt.show()","70ab0f93":"(mu, sigma) = norm.fit(data[\"free sulfur dioxide\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"free sulfur dioxide\", mu, \"free sulfur dioxide\", sigma))","8f794661":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"free sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"free sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"free sulfur dioxide\"], plot = plt)\nplt.show()","5346f4da":"data[\"free sulfur dioxide\"], lam_fixed_acidity = boxcox(data[\"free sulfur dioxide\"])","13486786":"(mu, sigma) = norm.fit(data[\"free sulfur dioxide\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"free sulfur dioxide\", mu, \"free sulfur dioxide\", sigma))","2dddb9e0":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"free sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"free sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"free sulfur dioxide\"], plot = plt)\nplt.show()","fb6f2c44":"(mu, sigma) = norm.fit(data[\"total sulfur dioxide\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"total sulfur dioxide\", mu, \"total sulfur dioxide\", sigma))","f011513b":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"total sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"total sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"total sulfur dioxide\"], plot = plt)\nplt.show()","c6120754":"data[\"total sulfur dioxide\"], lam_fixed_acidity = boxcox(data[\"total sulfur dioxide\"])","f17fb1da":"(mu, sigma) = norm.fit(data[\"total sulfur dioxide\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"total sulfur dioxide\", mu, \"total sulfur dioxide\", sigma))","c6e8916f":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"total sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"total sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"total sulfur dioxide\"], plot = plt)\nplt.show()","20bf48f6":"(mu, sigma) = norm.fit(data[\"alcohol\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"alcohol\", mu, \"alcohol\", sigma))","9b9cf857":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"alcohol\"], fit=norm, color=\"orange\")\nplt.title(\"alcohol Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"alcohol\"], plot = plt)\nplt.show()","5f4b5fc8":"data[\"alcohol\"], lam_fixed_acidity = boxcox(data[\"alcohol\"])","4bd4c920":"(mu, sigma) = norm.fit(data[\"alcohol\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"alcohol\", mu, \"alcohol\", sigma))","eb0abb8f":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"alcohol\"], fit=norm, color=\"orange\")\nplt.title(\"alcohol Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"alcohol\"], plot = plt)\nplt.show()","7ae75c6d":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3st quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier Step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces \n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 1.5) \n    \n    return multiple_outliers","3ab4cfac":"print(\"number of outliers detected --> \",len(data.loc[detect_outliers(data,data.columns[:-1])]))\ndata.loc[detect_outliers(data,data.columns[:-1])]","a719c912":"data = data.drop(detect_outliers(data,data.columns[:-1]),axis = 0).reset_index(drop = True)","bbdc3e3c":"from sklearn.model_selection import train_test_split, StratifiedKFold, GridSearchCV, RandomizedSearchCV\nfrom sklearn.svm import SVC\nfrom scipy.stats import uniform as sp_randFloat\nfrom scipy.stats import randint as sp_randInt  \nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier, GradientBoostingClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nimport collections","d6e9568e":"bins = (2, 6.5, 8)\nlabels = [0, 1]\ndata['quality'] = pd.cut(x = data['quality'], bins = bins, labels = labels)","3d15227e":"data['quality'].value_counts()","bd8747c3":"y = data.quality\nx = data.drop([\"quality\"], axis = 1)","9b0b7712":"test_size = 0.20\nX_train, X_test, Y_train, Y_test = train_test_split(x, y, test_size = test_size, random_state = 206)","c2b2ee8e":"sm = SMOTE(random_state=14)\nX_train_sm, y_train_sm = sm.fit_resample(X_train, Y_train)","d95587a2":"print(\"Before smote --> \", collections.Counter(Y_train))\nprint(\"After smote --> \", collections.Counter(y_train_sm))","4089fbf7":"scaler = StandardScaler()\nX_train_sm = scaler.fit_transform(X_train_sm) \nX_test = scaler.transform(X_test) ","f1930628":"results = []","4a20f4ef":"knn = KNeighborsClassifier(n_neighbors = 2)\nknn.fit(X_train_sm, y_train_sm)\ny_pred = knn.predict(X_test)\ncm = confusion_matrix(Y_test, y_pred)\n\nacc = accuracy_score(Y_test, y_pred)\nscore = knn.score(X_test, Y_test)\nresults.append(acc)\n\nprint(\"Score : \", score)\nprint(\"KNeighborsClassifier Acc : \", acc)\n\nplot_confusion_matrix(knn, X_test, Y_test, cmap= \"Greens\")  \nplt.show()","16eedf94":"print(\" \\t \\t  KNN Classification Report\")\nprint(classification_report(Y_test, y_pred))","99e469fc":"gbc = GradientBoostingClassifier(max_depth= 6, random_state=2)\ngbc.fit(X_train_sm, y_train_sm)\ny_pred_gbc = gbc.predict(X_test)\ncm_aaa = confusion_matrix(Y_test, y_pred_gbc)\nacc = accuracy_score(Y_test, y_pred_gbc)\nscore = gbc.score(X_test, Y_test)\nresults.append(acc)\n\nprint(\"Score : \", score)\nprint(\"GradientBoostingClassifier Acc : \", acc)\n\nplot_confusion_matrix(gbc, X_test, Y_test, cmap= \"binary\")  \nplt.show()","985c7201":"print(\" \\t \\t  GradientBoostingClassifier Classification Report\")\nprint(classification_report(Y_test, y_pred_gbc))","aef9528c":"svc = SVC()\nsvc.fit(X_train_sm, y_train_sm)\npred_svc = svc.predict(X_test)\n\ncm_svc = confusion_matrix(Y_test, pred_svc)\nacc = accuracy_score(Y_test, pred_svc)\nscore = svc.score(X_test, Y_test)\nresults.append(acc)\n\nprint(\"Score : \", score)\nprint(\"SVC Acc : \", acc)\n\nplot_confusion_matrix(svc, X_test, Y_test, cmap= \"Reds\")  \nplt.show()","652b0a01":"print(\" \\t \\t  SVC Classification Report\")\nprint(classification_report(Y_test, pred_svc))","c6dfec2d":"xgb = XGBClassifier()\nxgb.fit(X_train_sm, y_train_sm)\npred_xgb = xgb.predict(X_test)\n\ncm_aaa = confusion_matrix(Y_test, pred_xgb)\nacc = accuracy_score(Y_test, pred_xgb)\nscore = xgb.score(X_test, Y_test)\nresults.append(acc)\n\nprint(\"Score : \", score)\nprint(\"XGBClassifier Acc : \", acc)\n\nplot_confusion_matrix(xgb, X_test, Y_test, cmap= \"copper\")  \nplt.show()","141a8a4a":"print(\" \\t \\t  XGBClassifier Classification Report\")\nprint(classification_report(Y_test, pred_xgb))","3959087d":"parameters = {  \n                'depth'         : sp_randInt(4, 10),\n                'learning_rate' : sp_randFloat(),\n                'iterations'    : sp_randInt(10, 100)\n             }","a32c6a94":"cat = CatBoostClassifier(iterations=1000, verbose = False, depth=8)\nrandm = RandomizedSearchCV(estimator=cat, param_distributions = parameters, \n                               cv = 2, n_iter = 10, n_jobs=-1)\nrandm.fit(X_train_sm, y_train_sm)\n\npred_cat = randm.predict(X_test)\n\ncm_cat = confusion_matrix(Y_test, pred_cat)\nacc = accuracy_score(Y_test, pred_cat)\nscore = randm.score(X_test, Y_test)\nresults.append(acc)\n\nprint(\"Score : \", score)\nprint(\"Basic KNN Acc : \", acc)\n\nplot_confusion_matrix(randm, X_test, Y_test, cmap= \"hot\")  \nplt.show()","ec67d71a":"print(\" \\t \\t  CatBoostClassifier Classification Report\")\nprint(classification_report(Y_test, pred_cat))","6527625e":"rf = RandomForestClassifier(max_depth=18, random_state=44, bootstrap = False)\nrf.fit(X_train_sm, y_train_sm)\ny_pred_rf = rf.predict(X_test)\ncm = confusion_matrix(Y_test, y_pred_rf)\n\nacc = accuracy_score(Y_test, y_pred_rf)\nscore = rf.score(X_test, Y_test)\nresults.append(acc)\n\nprint(\"Score : \", score)\nprint(\"RandomForestClassifier Acc : \", acc)\n\nplot_confusion_matrix(rf, X_test, Y_test, cmap= \"pink\")  \nplt.show()","32ea8b52":"print(\" \\t \\t  RandomForestClassifier Classification Report\")\nprint(classification_report(Y_test, y_pred_rf))","c8a16799":"test_data = pd.DataFrame()\ntest_data[\"citric acid\"] = data[\"volatile acidity\"][:307]\ntest_data[\"fixed acidity\"] = data[\"fixed acidity\"][:307]\ntest_data[\"y_pred_rf\"] = y_pred_rf\ntest_data[\"Y_test\"] = Y_test.values\n","284b91e3":"plt.figure(figsize=(12,6))\nsns.scatterplot(x=\"citric acid\", y=\"fixed acidity\", hue=\"Y_test\", data=test_data, palette=[\"Black\",\"darkgreen\"])\nplt.title(\"Classifications We Made Wrong\", fontsize = 13, fontweight = \"bold\", color = \"darkred\")\n\ndiff = np.where(y_pred_rf!=Y_test)[0]\nplt.scatter(test_data.iloc[diff,0],test_data.iloc[diff,1],label = \"Wrong Classified\", marker=\"x\",alpha = 0.7, color = \"Red\",s = 300)\nplt.legend()\nplt.show()","472c0f5a":"df_result = pd.DataFrame({\"Score\":results, \"ML Models\":[\"KNN\",\"GradientBoostingClassifier\",\n             \"SVC\",\"XGBClassifier\",\"CatBoostClassifier\",\"RandomForestClassifier\"]})","58adf72b":"df_result.style.background_gradient(\"Greens\")","08115c7a":"g = sns.barplot(\"Score\", \"ML Models\", data = df_result, palette='BrBG')\ng.set_xlabel(\"Score\")\ng.set_title(\"Classifier Model Results\", color = \"Black\")\nplt.show()","ca150b43":"<ul>\n    <li style = \"color:purple;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >The decrease in volatile acidity seems to affect the votes positively.<\/p> <\/li>\n        <li style = \"color:purple;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >When we examine the second graph, we see that the distribution is good.<\/p> <\/li>\n<\/ul>","d32db4d9":"<a id ='23' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">free sulfur dioxide<\/h4>","fe205ea6":"<a id ='30' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Skewness Correction<\/h2>\n\n<p style = \"color:darkred;font-family:Comic Sans MS;font-weight:bold\" >In this section, we will try to correct the skewness in some features of our data. We will do this by seeing them through graphs.<\/p>\n\n<ul>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > fixed acidity <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > residual sugar <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >free sulfur dioxide <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >total sulfur dioxide <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >sulphates <\/p> <\/li>\n            \n<\/ul> ","bb468ee7":"<a id ='27' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">sulphates<\/h4>","16f33e90":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We make the variable quality into 2 variables, 0 and 1.<\/p> <\/li>\n<\/ul>","37314cf8":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >we see that there is no missing data in the data.<\/p> <\/li>\n<\/ul>","e670550b":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >It doesn't seem easy to comment on free sulfur dioxide either. The 13, 14 levels seem to have been voted well.<\/p> <\/li>\n<\/ul>","bae787b6":"<a id ='24' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">total sulfur dioxide<\/h4>","2304009a":"<ul>\n    <li style = \"color:lightblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >It seems quite difficult to predict the effect on the target variable.<\/p> <\/li>\n        <li style = \"color:lightblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >When we examine the scatterplot, we see that it has a normal distribution.<\/p> <\/li>\n<\/ul>","b29549dd":"<a id ='1' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS\">Load and Check Data<\/h2>","4df1c7d9":"<a id ='38' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Import Model Library<\/h4>","59f92ab7":"<a id ='3' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Basic Data Analysis<\/h2>\n\n<p style = \"color:darkred;font-family:Comic Sans MS;font-weight:bold\" >In this section, we will look at how properties have an effect on the target variable.<\/p> \n\n<ul>\n    <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > fixed acidity - <strong>  quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > volatile acidity -<strong> quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > citric acid - <strong> quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > residual sugar - <strong> quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > chlorides - <strong>  quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > free sulfur dioxide -<strong> quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > total sulfur dioxide - <strong> quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > density - <strong> quality <\/strong> <\/p> <\/li>  \n            <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > pH - <strong>  quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > sulphates -<strong> quality <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > alcohol - <strong> quality <\/strong> <\/p> <\/li>\n<\/ul>","8d6bf6b8":"<a id ='6' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">cidric acid - quality <\/h4>","3be1c4f7":"<a id ='42' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">KNeighborsClassifier<\/h3>","bbdd7d85":"<a id ='34' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">total sulfur dioxide<\/h4>","b84eea0e":"<ul>\n    <li style = \"color:plum;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that the higher the value of the sulphates, the more positive the votes are.<\/p> <\/li>\n        <li style = \"color:plum;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We have so many outliers here that we need to remove them.<\/p> <\/li>\n<\/ul>","8b954822":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >We can say that the decrease in pH affects the votes positively.<\/p> <\/li>\n<\/ul>","33f83778":"<a id ='39' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Train - Test Split<\/h4>","0c7f0e7d":"<a id ='9' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">free sulfur dioxide - quality <\/h4>","2e00b9ff":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >From here, we see that the increase in citric acid positively affected the votes.<\/p> <\/li>\n<\/ul>","771edb75":"<a id ='41' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">StandardScaler<\/h4>","b645ea75":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >We can say that the increase in fixed acidity positively affects the given vote.but it is difficult to make a full conclusion at this stage. <\/p> <\/li>\n<\/ul>","dfeebdd1":"<a id ='11' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">density - quality <\/h4>","652ebed1":"<a id ='7' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">residual sugar - quality <\/h4>","c86b7ffe":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >It seems difficult to make an inference about residual sugar from here.<\/p> <\/li>\n<\/ul>","c9a28fec":"<ul>\n    <li style = \"color:#00FF00;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that the decrease in pH value has a positive effect on the votes.<\/p> <\/li>\n        <li style = \"color:#00FF00;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that the scatterplot has normal, outlier values. We need to identify and remove outliers.<\/p> <\/li>\n<\/ul>","98d48990":"<ul>\n    <li style = \"color:brown;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >When we examine the gariks here, we see that the graph is tailing to the right, we will correct this below.<\/p> <\/li>\n        <li style = \"color:brown;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >If we look at the fourth graph, we see that there are too many outliers. We need to fix these. Otherwise, they will negatively affect our model.<\/p> <\/li>\n<\/ul>","b5ba9bc0":"<ul>\n    <li style = \"color:green;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We achieved the highest success in Random Forest with 0.957.<\/p> <\/li>\n<\/ul>","9af957c1":"<a id ='28' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">alcohol<\/h4>","417f5d05":"<ul>\n    <li style = \"color:red;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We were down above. On the second graph, we see that there is skewness.<\/p> <\/li>\n<\/ul>","715af704":"<ul>\n    <li style = \"color:#DAA520;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >When the graph is examined in general, it can be said that the increase in alcohol has a positive effect on the votes.<\/p> <\/li>\n        <li style = \"color:#DAA520;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >When we examine the 2nd graph, we see that there is skewness. We will fix this.<\/p> <\/li>\n<\/ul>","98a186bb":"<ul>\n    <li style = \"color:yellow;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that the decrease in chlorides has a positive effect on the votes..<\/p> <\/li>\n        <li style = \"color:yellow;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >If we look at the fourth graph, we see that there are too many outliers. We need to fix these. Otherwise, they will negatively affect our model.<\/p> <\/li>\n<\/ul>","cd3a74d1":"<a id ='21' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">residual sugar<\/h4>","3ed92798":"<a id ='47' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">RandomForestClassifier<\/h3>","86d2a1df":"<a id ='49' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Model Result<\/h3>","2c5f3906":"<a id ='46' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">CatBoostClassifier<\/h3>","a7fb7051":"<a id ='4' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">fixed acidity - quality <\/h4>","9ece2802":"<a id ='10' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">total sulfur dioxide - quality <\/h4>","dd32d429":"<a id ='8' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">chlorides - quality <\/h4>","63f7a04a":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >To record our model achievements. We are making a list.<\/p> <\/li>\n<\/ul>","d33df5e9":"<a id ='31' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">fixed acidity<\/h4>","919c4780":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >It is clear from here that the increase in sulphates has a positive effect.<\/p> <\/li>\n<\/ul>","765d9546":"<p style = \"text-shadow: 12px 12px 2px #333;color:brown;font-family:Segoe Print;font-weight:bold\" > YES, WE HAVE COME TO AN END. THANK YOU<\/p>","b7189ace":"<ul>\n    <li style = \"color:green;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We also took a look at the guesses we made wrong. (For Random Forest)<\/p> <\/li>\n<\/ul>","db7b96f4":"<a id ='25' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">density<\/h4>","e8f717cd":"<a id ='43' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">GradientBoostingClassifier<\/h3>","eb10e94b":"<ul>\n    <li style = \"color:orange;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >Fixed acidity may not have much effect on splitting votes.<\/p> <\/li>\n        <li style = \"color:orange;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >On the 2nd graph, we see that there is a skewness to the right. We need to fix this.<\/p> <\/li>\n<\/ul>","d0ef2478":"<ul>\n    <li style = \"color:red;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We will try to eliminate the skewness here by using box cox.<\/p> <\/li>\n<\/ul>","3e7d93ca":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We remove the detected outliers from our data.<\/p> <\/li>\n<\/ul>","baf1aa69":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >The intensity is almost the same in all votes, but there is only a slight decrease. Density drop seems to have a positive effect on the votes.<\/p> <\/li>\n<\/ul>","6d54707c":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >It doesn't make sense to comment on total sulfur dioxide. It changed according to the votes. There is no order.<\/p> <\/li>\n<\/ul>","ec6c2c3f":"<ul>\n    <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We can say that the increase in citric acid affects the votes positively.<\/p> <\/li>\n<\/ul>","e4607467":"<ul>\n    <li style = \"color:green;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We got the best result in Random Forest. Let's take a look at the mistakes we made.<\/p> <\/li>\n<\/ul>","41f544a0":"<a id ='19' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">citric acid<\/h4>","63758f17":"<a id ='35' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">alcohol<\/h4>","757cd0bd":"<a id ='15' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Missing Value<\/h2>\n\n<p style = \"color:darkred;font-family:Comic Sans MS;font-weight:bold\" >We will take a look at if there is any missing data in our data. If there are, we will try to eliminate them.<\/p> ","4d0284c1":"<ul>\n    <li style = \"color:green;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We saw cm matrix. Let's take a look at the bidet classification report<\/p> <\/li>\n<\/ul>","4178b936":"<a id ='37' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Modeling<\/h2>\n\n<p style = \"color:darkblue;font-family:Comic Sans MS;font-weight:bold\" >Now our data is ready for the model. Now we will create our models.<\/p>\n\n<ul>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Import Model Library <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Train - Test Split <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Smote <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >StandardScaler <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >KNeighborsClassifier <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >GradientBoostingClassifier <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >SVC <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >XGBClassifier <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >KNeighborsClassifier <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >CatBoostClassifier <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >RandomForestClassifier <\/p> <\/li>\n            \n<\/ul> ","93c4643f":"<a id ='32' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">residual sugar<\/h4>","0e47abfb":"<a id ='36' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Outlier Detection<\/h2>\n\n<p style = \"color:darkred;font-family:Comic Sans MS;font-weight:bold\" >We detect outliers in our data. and we will extract them from the data.<\/p>","16931fb1":"<a id ='26' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">pH<\/h4>","33b9d89c":"<a id ='12' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">pH - quality <\/h4>","6ac58e02":"<ul>\n    <li style = \"color:red;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >Here we see the distribution of the votes.<\/p> <\/li>\n<\/ul>","9c586952":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >0 --> 1323<\/p> <\/li>\n        <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >1 --> 208<\/p> <\/li>\n        <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that there is a big difference between the 2 values. So we see that it is unbalanced. We will fix this.<\/p> <\/li>\n<\/ul>","44215e99":"<ul>\n    <li style = \"color:red;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >When we examine the previous and current graphics, we see that we have eliminated the skewness at a good level.<\/p> <\/li>\n<\/ul>","f3ea7c38":"![Ads\u0131z.png](attachment:5b9cfc51-041d-4cd4-ae0b-22d0ee4da3d6.png)\n\n<center><h1 style = \"background:black;color:white;border:0;border-radius:3px;font-family:Comic Sans MS\" >\ud83d\udcdc Introduction<\/h1><\/center>\n\n<p style = \"color:black;font-weight:500;text-indent:20px;font-size:16px;font-family:Comic Sans MS\">We will first analyze the data we have in a good way. We'll visualize it later. Then we will refine our model for training. Creating multiple models at once. We will compare the success of these models.<\/p>\n\n<h2 style = \"background:black;color:white;border:0;border-radius:3px;font-family:Comic Sans MS\">\ud83d\udccb Content :<\/h2>\n\n<ul>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#1\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Load and Check Data <\/a> <\/li>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#2\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Variable Description <\/a> <\/li>   \n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#3\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Basic Data Analysiss <\/a> <ul> \n        <li style = \"color:lightgray\"><a href = \"#4\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> fixed acidity - quality  <\/a><\/li> \n        <li style = \"color:lightgray\"><a href = \"#5\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> volatile acidity - quality <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#6\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> citric acid - quality <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#7\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> residual sugar - quality <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#8\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> chorides - quality <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#9\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> free sulfur dioxide - quality <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#10\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> total sulfur dioxide - quality <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#11\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> density - quality <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#12\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> pH - quality <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#13\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> sulphates - quality <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#14\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> alcohol - quality <\/a><\/li>\n        <\/ul>            \n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#15\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Missing Value  <\/a> <\/li>\n        <li style = \"color:darkgray;font-size:15px\"> <a href = \"#16\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Visualization <\/a> <ul> \n        <li style = \"color:lightgray\"><a href = \"#17\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> fixed acidity  <\/a><\/li> \n        <li style = \"color:lightgray\"><a href = \"#18\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> volatile acidity <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#19\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> citric acid <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#21\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> residual sugar <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#12\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> chorides <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#23\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> free sulfur dioxide <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#24\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">total sulfur dioxide <\/a><\/li>\n                    <li style = \"color:lightgray\"><a href = \"#15\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> density <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#26\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">pH <\/a><\/li>\n                    <li style = \"color:lightgray\"><a href = \"#27\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> sulphates <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#28\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">alcohol <\/a><\/li>\n                    <li style = \"color:lightgray\"><a href = \"#29\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">quality <\/a><\/li>\n<\/ul>   \n         <li style = \"color:darkgray;font-size:15px\"> <a href = \"#30\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Skewness Correction <\/a> <ul> \n         <li style = \"color:lightgray\"><a href = \"#31\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> fixed acidity  <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#32\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> residual sugar <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#33\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> free sulfur dioxide <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#34\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">total sulfur dioxide <\/a><\/li>\n                    <li style = \"color:lightgray\"><a href = \"#35\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> alcohol <\/a><\/li>\n<\/ul>  \n             <li style = \"color:darkgray;font-size:15px\"> <a href = \"#36\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Outlier Detection <\/a> <\/li>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#37\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Modeling   <\/a> <ul> <li style = \"color:lightgray\"><a href = \"#38\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\">Import Model Library <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#39\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\">Train - Test Split <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#40\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> Smote <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#41\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\">StandartScaler <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#42\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2460 KNeighborsClassifier <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#43\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2461 GradientBoostingClassifier <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#44\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2462 SVC<\/a><\/li> <li style = \"color:lightgray\"><a href = \"#45\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2463 XGBClassifier<\/a><\/li> <li style = \"color:lightgray\"><a href = \"#46\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2464 CatBoostClassifier<\/a><\/li> <li style = \"color:lightgray\"><a href = \"#47\" style = \"background:white;color:brown;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2465 RandomForestClassifier<\/a><\/li> <\/ul>\n      <li style = \"color:darkgray;font-size:15px\"> <a href = \"#48\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Wrong Predictions <\/a> <\/li>\n        <li style = \"color:darkgray;font-size:15px\"> <a href = \"#49\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Model Result <\/a> <\/li>\n<\/ul> \n\n","34c6028f":"<a id ='22' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">chlorides<\/h4>","4edb4cf9":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >The decrease in chlorides positively affects the votes cast.<\/p> <\/li>\n<\/ul>","4e213d99":"<ul>\n    <li style = \"color:blue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >The estimate of residual sugar does not seem to have much effect.<\/p> <\/li>\n        <li style = \"color:blue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that there is a skewness towards the right according to the normal distribution.<\/p> <\/li>\n<\/ul>","7412fa84":"<a id ='18' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">volatile acidity<\/h4>","e5f1f13d":"<a id ='5' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">volatile acidity - quality <\/h4>","a57d85fe":"<a id ='29' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">quality<\/h4>","2d24d32d":"<a id ='40' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Smote<\/h4>\n\n<p style = \"color:darkgreen;font-family:Comic Sans MS;font-weight:bold\" >We saw above that our data is an unbalanced data. We fix this with the help of smote.<\/p>","483f9f91":"<a id ='45' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">XGBClassifier<\/h3>","a24d5705":"<a id ='44' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">SVC<\/h3>","9a7b536c":"<a id ='13' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">sulphates - quality<\/h4>","8138ffd1":"<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS\">\ud83d\udcd6 Import Library<\/h2>","562585eb":"<a id ='48' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Wrong Predictions<\/h3>","52b76c2a":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >here we can make a more precise sentence according to the comment we made above. The decrease in volatile acidity affects the votes positively.<\/p> <\/li>\n<\/ul>","b8d6356f":"<a id ='16' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Visualization<\/h2>\n\n<p style = \"color:darkgreen;font-family:Comic Sans MS;font-weight:bold\" >In this section, we will visualize our features one by one and make examinations on graphics.<\/p> \n\n<ul>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > fixed acidity <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > volatile acidity <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >citric acid <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > residual sugar <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >chlorides <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >free sulfur dioxide <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >total sulfur dioxide <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >density <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >pH <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >sulphates <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >alcohol <\/p> <\/li>\n                    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >quality <\/p> <\/li>\n<\/ul> ","616282e8":"<a id ='33' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">free sulfur dioxide<\/h4>","6eee2a0a":"<a id ='17' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">fixed acidity<\/h4>","923298d7":"<a id ='14' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">alcohol - quality<\/h4>","ce36426d":"<ul>\n    <li style = \"color:#F1E68C;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >When we examine these graphs, we do not see that they have a regular effect on the target variable. It is not easy to draw conclusions.<\/p> <\/li>\n        <li style = \"color:#F1E68C;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >Here we see a skewness to the right.<\/p> <\/li>\n<\/ul>","7cfa38ef":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >In general, it can be said that the increase in alcohol ratio affects the votes well.<\/p> <\/li>\n<\/ul>","639f76c7":"<a id ='2' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Variable Description<\/h2>\n\n<ol>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>fixed acidity : <\/strong> most acids involved with wine or fixed or nonvolatile (do not evaporate readily) <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>volatile acidity : <\/strong> the amount of acetic acid in wine, which at too high of levels can lead to an unpleasant, vinegar taste<\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>citric acid : <\/strong> found in small quantities, citric acid can add 'freshness' and flavor to wines<\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>residual sugar : <\/strong>the amount of sugar remaining after fermentation stops, it's rare to find wines with less than 1 gram\/liter and <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>chlorides : <\/strong>  the amount of salt in the wine <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>free sulfur dioxide : <\/strong> the free form of SO2 exists in equilibrium between molecular SO2 (as a dissolved gas) and bisulfite ion; it prevents <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>total sulfur dioxide : <\/strong> amount of free and bound forms of S02; in low concentrations, SO2 is mostly undetectable in wine, but at free SO2 <\/p> <\/li>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>density : <\/strong>the density of water is close to that of water depending on the percent alcohol and sugar content <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>ph : <\/strong>  describes how acidic or basic a wine is on a scale from 0 (very acidic) to 14 (very basic); most wines are between 3-4 on the <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>sulphates : <\/strong> a wine additive which can contribute to sulfur dioxide gas (S02) levels, wich acts as an antimicrobial and <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>alcohol sulfur dioxide : <\/strong> the percent alcohol content of the wine <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>quality : <\/strong> output variable (based on sensory data, score between 0 and 10) <\/p> <\/li>\n<\/ol>"}}