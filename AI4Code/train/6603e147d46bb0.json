{"cell_type":{"1e6c098c":"code","7528ad23":"code","e4a55013":"code","ac3d1f81":"code","436f9b90":"code","0ad5ff0a":"code","cb1c8a58":"code","dd7af75f":"code","93f0b35d":"code","acbd85ac":"code","aacdcb06":"code","651699c9":"code","eaa23030":"code","ef25fb07":"code","206ee21e":"code","49d1e49e":"code","5775a610":"code","ea4a19d1":"code","366158e9":"code","517a8daf":"code","329ec826":"code","55af0fee":"code","b406c283":"code","29609503":"code","6591646e":"code","4fc70100":"code","28af7e62":"code","2bcd7798":"code","81147ebc":"code","55ec3a74":"code","bfeaf7be":"code","b5ec5d08":"code","2094b1fa":"code","f8ea2cb6":"code","56c20322":"code","9fb770f3":"code","ce5d5e5a":"code","54200475":"code","aeffeb79":"code","e5ae3439":"code","62260f8b":"code","ebba09fa":"code","16ce4ea5":"code","58287e4f":"code","832989bd":"code","9acd28e4":"code","5b610a57":"code","7d1e131c":"code","93b3a075":"code","eb90bdcd":"code","e295f1eb":"code","91f27cf8":"code","4af6ef1b":"code","84d2c54a":"code","ee1205f3":"code","329a7e9d":"code","7a4c6987":"code","663b38fa":"code","515357cb":"code","19f7851c":"code","84df687d":"code","988e96e0":"code","acc1f2c7":"code","5e5856ad":"code","7bea77bb":"code","79e47a10":"code","87fdba0a":"code","4396f1ca":"code","5bab0de2":"code","5bc3ad18":"code","2446a994":"code","66864b9c":"code","80fd694e":"markdown","ff1fdc36":"markdown","3965286f":"markdown","6076bc7c":"markdown","48b07d15":"markdown","d6c97bf3":"markdown","d613347a":"markdown","b58b3408":"markdown","7bbe7a94":"markdown","034065ec":"markdown","727b11e7":"markdown","a5b16d3c":"markdown","172b82b9":"markdown","8a71d18b":"markdown","bf436186":"markdown","55ea9464":"markdown","a5e9b198":"markdown","47dddbff":"markdown","0b7033f0":"markdown","c55a31a9":"markdown","ae485a2d":"markdown","52879d9b":"markdown","c248f8d4":"markdown","3ed637b1":"markdown","bd279052":"markdown","c9a6cda7":"markdown","44856dbe":"markdown","bd4e1f6e":"markdown","6225bbef":"markdown","61fd8670":"markdown","cd3eaf30":"markdown","f7a08dc6":"markdown","9f0b1b94":"markdown","5373b8fe":"markdown","a939ba57":"markdown","89c59bd0":"markdown","6d4838ce":"markdown"},"source":{"1e6c098c":"# Importation de la librairie Panda\nimport pandas as pd\nimport numpy as np","7528ad23":"# Options pour contr\u00f4ler l'affichage des donn\u00e9es\npd.set_option('display.notebook_repr_html', False)\npd.set_option('display.max_columns', 10)\npd.set_option('display.max_rows', 10)","e4a55013":"# Cr\u00e9ation d'une s\u00e9rie avec un seul \u00e9l\u00e9ment\ns1 = pd.Series(2)\ns1","ac3d1f81":"s1 = pd.Series(['a','b','c','d'])\ns1","436f9b90":"#Cr\u00e9ation d'une s\u00e9rie avec un index\ns1 = pd.Series(['a','b','c','d'],index=[10,11,12,13])\ns1\n","0ad5ff0a":"# Cr\u00e9ation depuis un objet numpy\nimport numpy as np\n\ndata = np.array(['a','b','c','d'])\ns1 = pd.Series(data)\ns1","cb1c8a58":"s1 = pd.Series(data,index=[10,11,12,13])\ns1","dd7af75f":"# Vous pouvez aussi cr\u00e9er la s\u00e9rie depuis un dictionnaire python\ndata = {'a' : 0., 'b' : 1., 'c' : 2.}\ns1 = pd.Series(data)\ns1","93f0b35d":"# Avec un index\ndata = {'a' : 0., 'b' : 1., 'c' : 2.}\ns1 = pd.Series(data,index=['b','c','d','a'])\ns1","acbd85ac":"# Cr\u00e9ation d'une s\u00e9rie depuis un nombre\ns1 = pd.Series(5, index=[0, 1, 2, 3])\ns1","aacdcb06":"# Acc\u00e9der \u00e0 un \u00e9lement de la s\u00e9rie\ns1 = pd.Series(['a','b','c','d'])\ns1[0]\n\n#avec erreur s1[9]\n\ndata = {'a' : 0., 'b' : 1., 'c' : 2.}\ns1 = pd.Series(data,index=['b','c','d','a'])\ns1['c'] \ns1[1]\n","651699c9":"# Vous pouvez aussi r\u00e9cup\u00e9rer plusieurs \u00e9lements en m\u00eame temps\n\ns1[['a','c','d']]","eaa23030":"# La longueur d'une s\u00e9rie peut-\u00eatre connue en utilisant la fonction len\n\nlen(s1)","ef25fb07":"# Vous pouvez aussi utiliser la propri\u00e9ta size de votre objet\n\ns1.size","206ee21e":"# La propri\u00e9t\u00e9 shape retourn un tuple avec en 1\u00b0 \u00e9l\u00e9ment le nombre d'items de votre liste\ns1.shape","49d1e49e":"# Pour compter le nombre de valeur non nulle\ns1.count()","5775a610":"# Pour d\u00e9terminer le nombre de valeur uniques\ns1.unique()","ea4a19d1":"# le compte de chacun des items uniques d'une S\u00e9rie peut \u00eatre obtenu en utilisant value_counts()\ns1.value_counts()","366158e9":"data = np.array(['a','b','c','d','e','f','g','h','i','j'])\ns1 = pd.Series(data)","517a8daf":"# Les 5 premi\u00e8res\ns1.head()","329ec826":"# les 2 premi\u00e8res \ns1.head(n=2)","55af0fee":"#Les 5 derni\u00e8res\ns1.tail()\n","b406c283":"# Les 2 derni\u00e8res\ns1.tail(n=2)","29609503":"s1.take([0, 5, 7])","6591646e":"ind = np.array(['a','b','c','d','e','f','g','h','i','j'])\ndata = np.array([12,52,41,16,43,85,74,74,95,23])\ns1 = pd.Series(data, index=ind)\ns1['a']","4fc70100":"#Acc\u00e8s \u00e0 cette s\u00e9rie \u00e0 l'aide d'une valeur enti\u00e8re \ns1[2]","28af7e62":"s1[['b', 'd']]","2bcd7798":"s1 = pd.Series([1, 2, 3], index=[10, 11, 12])\n\ns1.loc[11]\n","81147ebc":"# 1\u00b0 s\u00e9rie\ns1 = pd.Series([10, 20, 30, 40], index=['a', 'b', 'c', 'd'])\n\n# 2\u00b0 s\u00e9rie\ns2 = pd.Series([40, 30, 20, 10], index=['d', 'c', 'b', 'a'])\n\n# Addiitonnnons les s\u00e9ries\ns1 + s2","55ec3a74":"s1 * 3","bfeaf7be":"s1 = pd.Series([10, 20, 30, 40], index=['a', 'b', 'c', 'd'])\n\n# 2\u00b0 s\u00e9rie\n# La valeur de l'index e n'existe pas dans s1\ns2 = pd.Series([40, 30, 20, 10,52], index=['d', 'c', 'b', 'a', 'e'])\n\ns2+s1","b5ec5d08":"s1 = pd.Series([1.0, 2.0, 3.0], index=['a', 'a', 'b'])\ns2 = pd.Series([4.0, 5.0, 6.0], index=['a', 'a', 'c'])","2094b1fa":"s1 + s2","f8ea2cb6":"# Avec Numpy\nnda = np.array([1, 2, 3, 4, 5])\nnda.mean()","56c20322":"nda = np.array([1, 2, 3, 4, np.NaN])\nnda.mean()","9fb770f3":"# Avec Pandas\ns = pd.Series(nda)\ns.mean()","ce5d5e5a":"s.mean(skipna=False)\n","54200475":"# Quelles sont les lignes avec une valeur sup\u00e9rieure \u00e0 10\ns = pd.Series(np.arange(0, 15))\ns > 5","aeffeb79":"# S\u00e9lection des valeurs sup\u00e9rieures \u00e0 8\nlogicalResults = s > 8\ns[logicalResults]","e5ae3439":"s[s > 8]","62260f8b":"s[(s > 5) & (s < 8)]","ebba09fa":"(s >= 3).all()","16ce4ea5":"# Sup\u00e9rieur \u00e0 z\u00e9ro\n(s >= 0).all()","58287e4f":"# Ai je des valeurs > \u00e0 3 ?\ns[s >=3].any()","832989bd":"#Combien de valeur sont inf\u00e9rieures \u00e0 5 ?\n(s < 5).sum()\n","9acd28e4":"# Une s\u00e9rie de 10 items\ns = pd.Series(np.random.randn(10))\ns","5b610a57":"# On affecte un index\ns.index = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']\ns","7d1e131c":"# Graine du g\u00e9n\u00e9rateur de nombre al\u00e9atoir\nnp.random.seed(123456)\n\n# cr\u00e9ation de deux s\u00e9ries\ns1 = pd.Series(np.random.randn(3))\ns2 = pd.Series(np.random.randn(3))\n\n#on concat\u00e8ne les 2 s\u00e9ries\ncombined = pd.concat([s1, s2])\ncombined","93b3a075":"# r\u00e9ordonner l'index\ncombined.index = np.arange(0, len(combined))\ncombined","eb90bdcd":"np.random.seed(987654)\ns1 = pd.Series(np.random.randn(4), ['a', 'b', 'c', 'd'])\ns2 = s1.reindex(['a', 'c', 'g'])\ns2","e295f1eb":"# Diff\u00e9rents types d'index\n# et la cons\u00e9quence...\ns1 = pd.Series([1, 2, 3], index=[0, 1, 2])\n\n# Les index sous forme de chaines\ns2 = pd.Series([4, 5, 6], index=['0', '1', '2'])\ns1 + s2","91f27cf8":"# r\u00e9indexation en castant le type de l'index\ns2.index = s2.index.values.astype(int)\ns1 + s2","4af6ef1b":"# On remplace par 0\ns3 = s2.copy()\ns3.reindex([0, 5], fill_value=0)","84d2c54a":"# G\u00e9n\u00e9ration d'une s\u00e9rie al\u00e9atoire d e3 lignes\nnp.random.seed(123456)\ns = pd.Series(np.random.randn(3), index=['a', 'b', 'c'])\ns","ee1205f3":"# On va cr\u00e9er une nouvelle ligne\ns['d'] = 100\ns","329a7e9d":"# on peut modifier cette valeur\ns['d'] = -100\ns","7a4c6987":"#  On peut supprimer un item en utilisant la fonction del\ndel(s['d'])\ns","663b38fa":"s = pd.Series(np.arange(50,60), index=np.arange(10,20))\ns","515357cb":"#Prenons les items de la position 1 \u00e0 la position 7 avec un delta de 2\ns[1:7:2]","19f7851c":"#On peut aussi simuler la m\u00eame r\u00e9sultat qua la fonction head\ns[:5]","84df687d":"# Idem pour la fonciotn tail\ns[-5:]","988e96e0":"# Si on veut tout \u00e0 partir d'une position donn\u00e9e\ns[6:]","acc1f2c7":"# si on veut tout \u00e0 partir de l'indice 3 avec un pas de 2\ns[3::2]","5e5856ad":"# Une possibilit\u00e9 tr\u00e8s utile pour inverser la s\u00e9rie\ns[::-1]","7bea77bb":"# En partant du 5\u00b0 enregistrement depuis la fin avec un pas de 2\ns[5::-2]","79e47a10":"# Tout sauf les 3 derniers\ns[:-3]","87fdba0a":"# Que les 3 derniers\ns[-3:]","4396f1ca":"# On peut combiner les deux pour ne garder que les 3 premiers des 4 derniers\ns[-4:-1]","5bab0de2":"copie = s.copy()\nseparation = copie[:5]\nseparation[10]=666\ncopie[10]\n","5bc3ad18":"s","2446a994":"s = pd.Series(np.arange(0, 6),\nindex=['a', 'b', 'c', 'd', 'e', 'f'])\ns[0:3]","66864b9c":"s['b':'e']","80fd694e":"L\u00e0 tout va bien notre index correspond \u00e0 nos valeurs et il n'y a aucun doublon.\n\nDans l'exemple suivant  on va concat\u00e8ner deux objets de la s\u00e9rie, ce qui va donner lieu \u00e0 des \u00e9tiquettes d'index en double.","ff1fdc36":"Pour r\u00e9duire la confusion potentielle dans la d\u00e9termination de la recherche bas\u00e9e sur l'\u00e9tiquette par rapport \u00e0 la recherche bas\u00e9e sur la position, la recherche bas\u00e9e sur l'index peut \u00eatre appliqu\u00e9e \u00e0 l'aide de l'accesseur **.loc[]**","3965286f":"Vous pouvez combiner diff\u00e9rents  choix pour extraire vos donn\u00e9es.","6076bc7c":" # 6 - Op\u00e9rations arithm\u00e9tiques sur un objet Series\n \n Les op\u00e9rations arithm\u00e9tiques (+, -, -, \/, *, et ainsi de suite) peuvent \u00eatre appliqu\u00e9es \u00e0 une s\u00e9rie ou entre deux objets de la s\u00e9rie.\n \n Lorsqu'elle est appliqu\u00e9e \u00e0 une seule s\u00e9rie, l'op\u00e9ration est appliqu\u00e9e \u00e0 toutes les valeurs de cette s\u00e9rie. Le code suivant montre les op\u00e9rations arithm\u00e9tiques appliqu\u00e9es \u00e0 un objet serie.\n","48b07d15":"Il y a plusieurs choses qu'il est important de souligner \u00e0 propos de .reindex().\n\nPremi\u00e8rement, le r\u00e9sultat d'une m\u00e9thode .reindex() est **une nouvelle s\u00e9rie**. Cette nouvelle s\u00e9rie est dot\u00e9e d'un indice qui est fournis comme param\u00e8tre de .reindex(). Pour chaque \u00e9l\u00e9ment de la nouvelle s\u00e9rie, si la s\u00e9rie d'origine contient cette \u00e9tiquette, la valeur est attribu\u00e9e \u00e0 cette \u00e9tiquette.\n\nSi l'\u00e9tiquette n'existe pas dans la s\u00e9rie originale, pandas attribue une valeur NaN. \n\nUne rang\u00e9e dans la s\u00e9rie initiale sans \u00e9tiquette sp\u00e9cifi\u00e9e dans le param\u00e8tre .reindex() n'est alors pas inclus dans le fichier le r\u00e9sultat.\n\nLa r\u00e9indexation est \u00e9galement utile lorsque vous souhaitez aligner deux s\u00e9ries pour effectuer une op\u00e9ration sur les \u00e9l\u00e9ments correspondants de chaque s\u00e9rie. Cependant,  si pour une raison quelconque, les deux s\u00e9ries ont des \u00e9tiquettes d'index diff\u00e9rentes on peut avoir de gros probl\u00e8mes.","d6c97bf3":"Pandas fournit les m\u00e9thodes .head() et .tail() pour n'examiner que les premi\u00e8res ou les derni\u00e8res infos dans une s\u00e9rie. \n\nPar d\u00e9faut, ils retournent les cinq premi\u00e8res ou les cinq derni\u00e8res lignes, respectivement, mais vous pouvez utiliser le param\u00e8tre n ou simplement passer un entier pour sp\u00e9cifier le nombre de lignes :","d613347a":"On remarque que Numpy ne peut pas calculer la moyenne.","b58b3408":"Il existe une fa\u00e7on raccourcie pour r\u00e9aliser cette op\u00e9ration.","7bbe7a94":"**Series **est un tableau unidimensionnel \u00e9tiquet\u00e9 capable de contenir des donn\u00e9es de n'importe quel type (entier, cha\u00eene, flottant, objets python, etc.). Les \u00e9tiquettes des axes sont collectivement appel\u00e9es index.\n\nDans ce chapitre, nous aborderons les sujets suivants :\n\n* Cr\u00e9ation et initialisation d'une s\u00e9rie et de son index\n* La taille, la forme et le nombre de valeurs\n* T\u00eates, queues d'une serie\n* Recherche de valeurs dans un objet Serie\n* Alignement via des \u00e9tiquettes d'index\n* Op\u00e9rations arithm\u00e9tiques sur un objet Series\n* Le cas particulier du Not-A-Number (NaN)\n* S\u00e9lection avec des bool\u00e9ens\n* R\u00e9indexation d'un objet Serie\n* Modifier une s\u00e9rie\n* D\u00e9couper une s\u00e9rie\n\n**Allez on se jete \u00e0 l'eau !**\n\n\n\n\n","034065ec":"# 5 - Alignement via des \u00e9tiquettes d'index\n\nUne diff\u00e9rence fondamentale entre une s\u00e9rie NumPy ndarray et une s\u00e9rie pandas est la capacit\u00e9 d'une s\u00e9rie d'aligner automatiquement les donn\u00e9es d'une autre s\u00e9rie en fonction des valeurs d'\u00e9tiquette avant d'effectuer une op\u00e9ration.","727b11e7":"Vous pouvez remarquer que l'ordre de l'index est conserv\u00e9 et que la concat\u00e9nation avec les bonnes valeurs a \u00e9t\u00e9 effectu\u00e9. \n\nL'index qui n'avait pas de valeur a re\u00e7u la valeur NaN par d\u00e9faut","a5b16d3c":"Pour obtenir les lignes de la Serie o\u00f9 l'expression logique est Vrai, il suffit de passer le r\u00e9sultat de l'expression bool\u00e9enne \u00e0 l'op\u00e9rateur [] de la Serie.\n\nLe r\u00e9sultat sera une nouvelle s\u00e9rie avec une copie de l'index et de la valeur des lignes s\u00e9lectionn\u00e9es :","172b82b9":"# 3 - T\u00eates, queues","8a71d18b":"La m\u00e9thode .take() retournera les lignes d'une s\u00e9rie qui correspondent \u00e0 la m\u00e9thode bas\u00e9e sur les positions sp\u00e9cifi\u00e9es dans une liste.","bf436186":"Une plus grande flexibilit\u00e9 dans la cr\u00e9ation d'un nouvel index est fournie en utilisant la m\u00e9thode **.reindex()**.\n\nUn exemple de la flexibilit\u00e9 de .reindex() sur l'affectation directe de la propri\u00e9t\u00e9 .index est que la liste fournie \u00e0 .reindex() peut \u00eatre d'une longueur diff\u00e9rente du nombre de lignes de la s\u00e9rie :","55ea9464":"Le processus d'ajout de deux objets Serie diff\u00e8re du processus d'ajout de tableaux car il aligne d'abord les donn\u00e9es en fonction des valeurs des \u00e9tiquettes d'index au lieu d'appliquer simplement l'op\u00e9ration aux \u00e9l\u00e9ments dans la m\u00eame position. \n\nCeci devient tr\u00e8s puissant lorsque vous utilisez les Series pour combiner des donn\u00e9es bas\u00e9es sur des \u00e9tiquettes.\n","a5e9b198":"# 9 - R\u00e9indexage d'un objet Serie\n\nLa r\u00e9indexation dans pandas est un processus qui permet de faire correspondre les donn\u00e9es d'une s\u00e9rie ou d'une DataFrame \u00e0 un fichier un ensemble donn\u00e9 d'\u00e9tiquettes. \n\nCeci est au c\u0153ur de la fonctionnalit\u00e9 de pandas car il permet l'alignement des \u00e9tiquettes \u00e0 travers plusieurs objets, qui peuvent \u00e0 l'origine avoir des sch\u00e9mas d'indexation diff\u00e9rents.\nCe processus d'ex\u00e9cution comprend les \u00e9tapes suivantes :\n1. R\u00e9organiser les donn\u00e9es existantes pour qu'elles correspondent \u00e0 un ensemble d'\u00e9tiquettes.\n2. Insertion de marqueurs NaN l\u00e0 o\u00f9 il n'existe pas de donn\u00e9es pour une \u00e9tiquette.\n3. Eventuellement, remplir les donn\u00e9es manquantes pour une \u00e9tiquette en utilisant un certain type de logique (par d\u00e9faut en ajoutant les valeurs NaN).\n\nVoici un exemple simple de r\u00e9indexation d'une s\u00e9rie. La s\u00e9rie suivante a un indice avec et l'index est modifi\u00e9 pour \u00eatre alphab\u00e9tique par simple assignation d'une liste de valeurs num\u00e9riques.\u00e0 la propri\u00e9t\u00e9 .index. \n\nCeci rend les valeurs accessibles via les \u00e9tiquettes de caract\u00e8res dans le nouvel index :","47dddbff":"Vous remarquez que des \u00e9tiquettes 'a' sont pr\u00e9sentes plusieurs fois. Comment pandas va t il se comporter durant cette addition ?","0b7033f0":"# 10 - Modifier une s\u00e9rie sur place\n\nIl y a plusieurs fa\u00e7ons de modifier une s\u00e9rie existante.\n\nLa modification d'une s\u00e9rie est une un sujet l\u00e9g\u00e8rement controvers\u00e9. Dans la mesure du possible, il est pr\u00e9f\u00e9rable d'effectuer des op\u00e9rations sur une nouvelle S\u00e9rie avec les modifications repr\u00e9sent\u00e9es dans la nouvelle S\u00e9rie. \n\nCependant, il est possible pour modifier les valeurs et ajouter\/supprimer des lignes sur place, et elles seront bri\u00e8vement expliqu\u00e9es ici.\n\nUn nouvel \u00e9l\u00e9ment peut \u00eatre ajout\u00e9 \u00e0 une s\u00e9rie en attribuant une valeur \u00e0 une \u00e9tiquette d'index qui n'en a pas.\n\nLe code suivant cr\u00e9e un objet S\u00e9ries et ajoute un nouvel \u00e9l\u00e9ment au fichier s\u00e9rie :\n\n","c55a31a9":"Les valeurs d'un objet Serie peuvent \u00eatre r\u00e9cup\u00e9r\u00e9es \u00e0 l'aide de l'op\u00e9rateur [] et en passant soit une seule \u00e9tiquette d'index, soit une liste d'\u00e9tiquettes d'index. \n\nLe code suivant r\u00e9cup\u00e8re la valeur associ\u00e9e \u00e0 l'\u00e9tiquette d'index 'a' de la s\u00e9rie s1 d\u00e9finie pr\u00e9c\u00e9demment :","ae485a2d":"# 11 -D\u00e9couper une s\u00e9rie\n\nLes objets Series de  pandas Series prennent en charge le d\u00e9coupage des donn\u00e9es. Tout comme les tableaux NumPy, vous pouvez passer un objet slice \u00e0 l'op\u00e9rateur [] de la s\u00e9rie pour obtenir les valeurs sp\u00e9cifi\u00e9es. Les tranches fonctionnent \u00e9galement avec les propri\u00e9t\u00e9s .loc[], .iloc[], et .ix et les accesseurs.\n","52879d9b":"Il est possible de d\u00e9terminer si toutes les valeurs d'une s\u00e9rie correspondent \u00e0 une expression donn\u00e9e en utilisant la m\u00e9thode .all(). \n\nLe tableau suivant cherche tous les \u00e9l\u00e9ments de la s\u00e9rie sup\u00e9rieurs ou \u00e9gaux \u00e0 3 :","c248f8d4":"Dans le code ci-dessus nous avons indiqu\u00e9 \u00e0 Pandas de convertir le type de l'index de la serie s2 en entier. Ainsi l'addition se r\u00e9alise sans probl\u00e8me.\n\nVous pouvez personnaliser un peu plus les r\u00e9sultats de pandas.\n\nComme nous l'avons vu pr\u00e9c\u00e9dement  NaN est utilis\u00e9 comme valeur manquante lors de la r\u00e9indexation.\nOn peut modifi\u00e9e cette valeur par d\u00e9faut en utilisant le param\u00e8tre fill_value de la m\u00e9thode. \n\nL'exemple suivant illustre l'utilisation de 0 au lieu de NaN :\n","3ed637b1":"**Oups gros probl\u00e8me**\n\nIl s'agitd'un \u00e9chec catastrophique dans le but que nous souaitons atteindre.\nCela illustre bien l'exemple de la probl\u00e9matique d'un sc\u00e9nario o\u00f9 les donn\u00e9es peuvent avoir \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9es \u00e0 partir de deux syst\u00e8mes diff\u00e9rents.\nChacun a utilis\u00e9 diff\u00e9rentes repr\u00e9sentations pour les \u00e9tiquettes d'index. \nPourquoi pandas fonctionne comme cela ?\n\n1. Pandas essaie d'abord d'aligner les index et ne trouve aucune correspondance, donc il copie l'index. de la premi\u00e8re s\u00e9rie et tente d'ajouter les index de la deuxi\u00e8me s\u00e9rie.\n2. Cependant, comme il s'agit d'un type diff\u00e9rent, il revient par d\u00e9faut \u00e0 un nombre entier bas\u00e9 sur z\u00e9ro. qui se traduit par des valeurs en double.\n3. Enfin, toutes les valeurs sont NaN parce que l'op\u00e9ration tente d'ajouter l'item dans la premi\u00e8re s\u00e9rie s1  avec l'\u00e9tiquette enti\u00e8re 0, qui a une valeur de 0, mais ne peut pas trouver l'\u00e9l\u00e9ment dans les autres et donc, le r\u00e9sultat est NaN (et ceci \u00e9choue six fois dans ce cas).\n\n**Que faire pour r\u00e9soudre ce probl\u00e8me ?**","bd279052":"# 2 - La taille, la forme et le nombre de valeurs","c9a6cda7":"Pour r\u00e9cup\u00e9rer plusieurs \u00e9l\u00e9ments, vous pouvez passer une liste d'\u00e9tiquettes d'index via l'op\u00e9rateur []. \nEn retour, le r\u00e9sultat sera une nouvelle s\u00e9rie avec des \u00e9tiquettes d'index et des valeurs, et des donn\u00e9es copi\u00e9es \u00e0 partir de la s\u00e9rie originale.","44856dbe":"# 4 - Recherche de valeurs dans un objet Serie","bd4e1f6e":"Dans ce cas pr\u00e9cis, Pandas remplace la fonction moyenne de l'objet S\u00e9rie de sorte que les valeurs de NaN soient simplement ignor\u00e9es. Elles ne sont pas compt\u00e9es comme une valeur 0. **Elles sont totalement ignor\u00e9es.**\n\nCe comportement est similaire \u00e0 la fa\u00e7on dont d'autres langages statistiques, comme R fonctione. On s'attend \u00e0 ce qu'il manque des donn\u00e9es, et que vous \"rangez\" les donn\u00e9es sur des it\u00e9rations progressives, mais jusque-l\u00e0, vous serez toujours en mesure de produire des analyses avec des donn\u00e9es qui ne sont pas ordonn\u00e9es. \n\nSouvent, la conclusion que vous voulez tirer peut \u00eatre vue m\u00eame avec des donn\u00e9es d\u00e9sordonn\u00e9es, et pandas de fonctionne pas contre vous en d\u00e9terminant cela plus t\u00f4t dans l'analyse. \n\nVous pouvez n\u00e9anmoins forcer Pandas \u00e0 fonctionner comme Numpy\n","6225bbef":"La m\u00e9thode .any() retourne True si des valeurs satisfont les expressions. ","61fd8670":"# 8 - S\u00e9lection avec des bool\u00e9ens\n\nLes \u00e9l\u00e9ments d'une s\u00e9rie peuvent \u00eatre s\u00e9lectionn\u00e9s par l'utilisation d'une s\u00e9lection bool\u00e9enne. \n\nUne s\u00e9lection bool\u00e9enne applique une expression logique aux valeurs de la s\u00e9rie et renvoie une nouvelle s\u00e9rie de valeurs bool\u00e9ennes repr\u00e9sentant le r\u00e9sultat pour chaque valeur. Le code suivant montre comment identifier les articles d'une s\u00e9rie dont les valeurs sont sup\u00e9rieures \u00e0 8 :","cd3eaf30":"# 1 - Cr\u00e9ation et initialisation d'une s\u00e9rie et de son index\n\n\n","f7a08dc6":"Super, on peut utiliser les index de la m\u00eame mani\u00e8re qui si c'\u00e9taient des valeurs num\u00e9riques.\n\n\nN'h\u00e9sitez pas \u00e0 me contacter directement si vous avez des questions ou si vous \u00eates \u00e0 la recherche d\u2019un d\u00e9veloppeur pour faire du DataMining ;=)\n\n[https:\/\/www.linkedin.com\/in\/developpeur-windev\/](https:\/\/www.linkedin.com\/in\/developpeur-windev\/)","9f0b1b94":"Il y a une information importante qui vaut d'\u00eatre mentionn\u00e9e.\n\nLe r\u00e9sultat de ces expressions logiques est une s\u00e9lection bool\u00e9enne, une s\u00e9rie de valeurs Vrai et Faux.\n\nLe .sum() d'une s\u00e9rie, lorsqu'on lui donne une s\u00e9rie de valeurs bool\u00e9ennes, traitera True comme 1 et False comme 0. \n\nOn peut ainsi facilement conna\u00eetre le nombre de valeur correspondants \u00e0 notre recherche.\n","5373b8fe":"Puisque s2 a une \u00e9tiquette 'e' et que s1 n'en a pas, le r\u00e9sultat est NaN. \nLa valeur par d\u00e9faut est NaN.  Ce r\u00e9sultat dans toute op\u00e9ration arithm\u00e9tique o\u00f9 une \u00e9tiquette d'index ne s'aligne pas avec les autres s\u00e9ries. \n\nIl est essentiel de bien comprendre ce foncitonnement pour l'utilisation de Pandas.\n\nLes t\u00e2ches accomplies avec pandas en utilisant des objets s\u00e9rie (et DataFrame) sont souvent tels que de multiples ensembles de donn\u00e9es n'ont pas forc\u00e9ment les m\u00eames \u00e9tiquettes. S'il n'y a pas d'\u00e9tiquettes correspondantes pendant la fusion, alors l'op\u00e9ration ne va pas  \u00e9chou\u00e9. \n\nPar cons\u00e9quent, Pandas retournent **toujours NaN dans ces situations.**\n\nRegardons maintenant un nouveau cas de figure.","a939ba57":"# 7 - Cas des valeurs NaN\n\nNumPy et Pandas ont des comportements diff\u00e9rents dans le traitement des valeurs NaN.","89c59bd0":"Dans le code ci-dessus, vous pouvez remarquer qu'une modif dans separation a impact\u00e9 copie. Par contre, **s** n'a pas boug\u00e9.\n\nMais que se passe t il avec des index autre que des entiers ?","6d4838ce":"Le r\u00e9sultat peut paraitre quelque peu surprenant.\n\nLa raison en est que pendant l'addition, pandas r\u00e9alise en fait un produit cart\u00e9sien de tous les ensembles d'\u00e9tiquettes d'index uniques dans les deux objets de la s\u00e9rie, et applique ensuite les valeurs sp\u00e9cifi\u00e9es sur tous les articles des produits. \n\n### Pour expliquer pourquoi il y a quatre valeurs d'indice 'a'\ns1 contient deux \u00e9tiquettes 'a', et s2 contient \u00e9galement deux \u00e9tiquettes 'a'. Chaque combinaison de 'a'. dans chaque cas, les \u00e9tiquettes seront calcul\u00e9es, ce qui donnera quatre \u00e9tiquettes 'a'.\n\nChaque La combinaison des valeurs de \" a \" dans les deux s\u00e9ries est calcul\u00e9e, ce qui donne les quatre valeurs :\n1+4\n1+5\n2+4 \n2+5\n\nIl y a une \u00e9tiquette 'b' dans s1 et une \u00e9tiquette 'c' dans s2. Puisqu'il n'y a pas d'\u00e9tiquette correspondante pour l'un ou l'autre, ils ne donnent lieu qu'\u00e0 une seule ligne dans l'objet Series r\u00e9sultant. \n\nAinsi, n'oubliez pas qu'un index peut avoir des **\u00e9tiquettes en double**, et pendant l'addition, il en r\u00e9sultera un nombre d'\u00e9tiquettes d'index \u00e9quivalent aux produits du nombre d'\u00e9tiquettes de chaque \u00e9tiquette de la Serie."}}