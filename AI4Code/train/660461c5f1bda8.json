{"cell_type":{"feb81c8b":"code","6920cbfa":"code","9ea68111":"code","c895f80a":"code","033898df":"code","2e78202d":"code","315a9d13":"code","b3bc81ab":"code","4455c0d6":"code","4d8e4bb3":"code","997bbd72":"code","20fd1b68":"code","5a7d2172":"code","decceec5":"code","21471fe5":"code","83dd4dab":"code","bfed7c61":"code","430692f8":"code","b75c9b7e":"code","0b5301a9":"code","47684e4f":"code","ceac69c1":"code","670769bd":"code","4b4ed8a5":"markdown","0c297ff2":"markdown","ee267d5c":"markdown","be81f27a":"markdown","4344355c":"markdown","e5404b03":"markdown","70f1b390":"markdown","05de8f93":"markdown","8ee00934":"markdown","3274f3e6":"markdown","11293955":"markdown","794cae32":"markdown","f041c059":"markdown","ca749116":"markdown","34cbfe85":"markdown"},"source":{"feb81c8b":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules\n\nimport os\nprint(os.listdir('..\/input\/'))","6920cbfa":"data = pd.read_csv('..\/input\/online retail.csv', encoding = 'unicode_escape')\n\nprint(data.shape)","9ea68111":"dataset = data.copy()\n\ndataset.head()","c895f80a":"# This Dataset contains 532619 rows and 8 columns\ndataset.shape","033898df":"dataset.info()","2e78202d":"dataset.describe()","315a9d13":"def missingData():\n    total = dataset.isnull().sum().sort_values(ascending = False)\n    percent_1 = dataset.isnull().sum() \/ dataset.isnull().count() * 100\n    percent_2 = (round(percent_1, 1)).sort_values(ascending=False)\n    missing_data = pd.concat([total, percent_2], axis = 1, keys = ['Total','%'])\n    return missing_data.head(10)\n","b3bc81ab":"missingData()","4455c0d6":"## We can also analyse a single columns\ndataset['Quantity'].describe()\n","4d8e4bb3":"duplicateData = dataset.copy()\n\nduplicateData.dropna(inplace = True)\nperc =[.20, .40, .60, .80] \n# list of dtypes to include \ninclude =['object', 'float', 'int'] \n  \n# calling describe method \ndesc = duplicateData.describe(percentiles = perc, include = include) \ndesc","997bbd72":"sns.distplot(dataset['UnitPrice'], color = 'darkblue')\nplt.title(\"Distribution of Unit Price\")\nplt.xlabel(\"Variation of UnitPrice for Different Items\")\nplt.ylabel('Count')\nplt.show()","20fd1b68":"dataset['Country'].value_counts().head(20).plot(kind = 'bar', figsize = (8,6), grid = True)\nplt.title('Top 20 Countries having Online Retail Market', fontsize = 18, color = 'green')\nplt.xlabel('Names of Countries',fontsize = 18, color = 'red')\nplt.ylabel('Count',fontsize = 20, color = 'red')\nplt.show()\n","5a7d2172":"dataset['Country'].value_counts().tail(20).plot(kind = 'bar', figsize = (8,6), grid = True, color = 'red')\nplt.title('Bottom top 20 Countries having Online Retail Market', fontsize = 18, color = 'green')\nplt.xlabel('Names of Countries',fontsize = 18, color = 'red')\nplt.ylabel('Count',fontsize = 20, color = 'red')\nplt.show()\n","decceec5":"missingData()","21471fe5":"dataset['Sales'] = dataset['UnitPrice'] * dataset['Quantity']\ndataset.head(10)","83dd4dab":"## Lets See Sales Distribution\nfig, axe = plt.subplots(nrows = 1,ncols = 1, figsize = (12,6))\nsns.distplot(dataset['Sales'], color = 'green')\nplt.title('Distribution of Sales in entire Country', fontsize = 20,)\nplt.xlabel('Sales in different Countries')\nplt.ylabel('Sales')\nplt.show()","bfed7c61":" salesData = dataset.groupby('Country')['Sales'].sum().sort_values(ascending=False).astype('int').head(20).plot(kind = 'bar',width = 2.5,figsize = (12, 7))\nplt.title(\"Top 20 Sales Amount accross the country\")\nplt.xlabel(\"Country Name\",color = 'green', fontsize = 18)\nplt.ylabel(\"Sales Amount\",color = 'green',fontsize = 18)\nplt.show()","430692f8":" salesData = dataset.groupby('Country')['Sales'].sum().sort_values(ascending=False).astype('int').tail(20).plot(kind = 'bar',figsize = (12, 7),width = 2.5)\nplt.title(\"Bottom 20 Sales Amount accross the country\")\nplt.xlabel(\"Country Name\",color = 'green', fontsize = 18)\nplt.ylabel(\"Sales Amount\",color = 'green',fontsize = 18)\nplt.show()","b75c9b7e":"dataset.head(10)","0b5301a9":"import datetime\ndataset['month'] = pd.DatetimeIndex(dataset['InvoiceDate']).month\ndataset['year'] = pd.DatetimeIndex(dataset['InvoiceDate']).year","47684e4f":"import calendar\n#dataset['MonthName'] = dataset['month'].apply(lambda x: calendar.month_abbr[x])\nfig,axes = plt.subplots(2,2,figsize = (10,8))\ndataset[dataset['year'] == 2010].groupby('month')['Sales'].sum().plot(kind = 'bar',figsize = (16, 8),width = 0.80,ax = axes[0][0],color = 'green')\naxes[0][0].set_title(\"Monthly Sales Data of 2010\",color = 'green', fontsize = 18)\naxes[0][0].set_xlabel(\"Months\",color = 'green', fontsize = 18)\naxes[0][0].set_ylabel(\"Sales Amount\",color = 'green',fontsize = 18)\n\ndataset[dataset['year'] == 2011].groupby('month')['Sales'].sum().plot(kind = 'bar',figsize = (16, 8),width = 0.80,ax = axes[0][1],color='darkblue')\naxes[0][1].set_title(\"Monthly Sales Data of 2011\",color = 'darkblue', fontsize = 18)\naxes[0][1].set_xlabel(\"Months\",color = 'darkblue', fontsize = 18)\naxes[0][1].set_ylabel(\"Sales Amount\",color = 'darkblue',fontsize = 18)\n\ndataset.groupby('month')['Sales'].sum().plot(kind = 'bar',figsize = (16, 8),width = 0.80,ax = axes[1][0],color='magenta')\naxes[1][0].set_title(\"Combined Monthly Sales Data (2010+2011)\",color = 'red', fontsize = 18)\naxes[1][0].set_xlabel(\"Months\",color = 'magenta', fontsize = 18)\naxes[1][0].set_ylabel(\"Sales Amount\",color = 'magenta',fontsize = 18)\n\ndataset.groupby('year')['Sales'].sum().plot(kind = 'bar',figsize = (16, 8),width = 0.80,ax = axes[1][1],color='red')\naxes[1][1].set_title(\"Yearly Sales Data\",color = 'red', fontsize = 18)\naxes[1][1].set_xlabel(\"Years\",color = 'red', fontsize = 18)\naxes[1][1].set_ylabel(\"Sales Amount\",color = 'red',fontsize = 18)\nfig.tight_layout()\nplt.show()","ceac69c1":"# Get the Month name of given month number\ndef getMOnthName(monthNumbers):\n    monthNames = [calendar.month_abbr[x] for x in monthNumbers]\n    return monthNames\n    ","670769bd":"\nexplodeMonth2010 = (0,0,0,0,0,0,0,0,0,0.1)\nfig,axes = plt.subplots(2,2,figsize = (18,14))\nmonthData2010 = dataset[dataset['year'] == 2010].groupby('month')['Sales'].sum()\nmonthNames2010 = getMOnthName(monthData2010.index.values)\naxes[0][0].pie(monthData2010.values, labels = monthNames2010,autopct='%1.2f%%',shadow=True, startangle=90,explode = explodeMonth2010)\naxes[0][0].set_title('2010 Month Sales Distribution',color = 'gray', fontsize = 18)\naxes[0][0].legend(loc=\"upper left\", title=\"Months\")\n\nexplodeMonth2011 = (0,0,0,0,0,0,0,0,0.1,0,0.2,0)\nmonthData2011 = dataset[dataset['year'] == 2011].groupby('month')['Sales'].sum()\nmonthNames2011 = getMOnthName(monthData2011.index.values)\naxes[0][1].pie(monthData2011.values,labels = monthNames2011,autopct='%1.2f%%',shadow=True, startangle=90,explode = explodeMonth2011)\naxes[0][1].set_title(\"2011 Month Sales Distribution\",color = 'darkblue', fontsize = 18)\naxes[0][1].legend(loc=\"upper right\", title=\"Months\",labels = monthNames2011)\n\ncombinedData = dataset.groupby('month')['Sales'].sum()\ncombinedMonthNames = getMOnthName(combinedData.index.values)\naxes[1][0].pie(combinedData.values,autopct='%1.2f%%',shadow=True, startangle=90,explode = explodeMonth2011)\naxes[1][0].set_title(\"Combined Monthly Sales Data (2010+2011)\",color = 'red', fontsize = 18)\naxes[1][0].legend(loc=\"lower left\", title=\"Months\",labels = combinedMonthNames)\n\nexplodeYearData = (0,0.3)\ndata2010_2011 = dataset.groupby('year')['Sales'].sum()\naxes[1][1].pie(data2010_2011.values, labels = data2010_2011.index.values,autopct='%1.2f%%',shadow=True,explode = explodeYearData, startangle=90,colors = ['red','green'])\naxes[1][1].set_title(\"Yearly Sales Data\",color = 'green', fontsize = 18)\n\nfig.tight_layout()\nplt.show()","4b4ed8a5":"## Lets Go deeper into Graph:\n## Monthly Sale Data of 2010:\n* First, in the year 2010, there is no sale in the month of 'April, November' therefore, this two month is missing,\n* Second, in the year 2010, there is drastic sale growth in the month of December, and also little growth in June Month\n## Monthly Sale Data of 2011:\n* First, in the year 2011, there are excellent growth in every month as compared to the year 2010\n* Secondly, we can see that, in the month of 'September' and 'November' sale had increased up to two times as compared to previous months\n## Combined Monthly Sale Data\n* Here, we can see that sales increased in the month of 'July','September','November'\n## Yearly Sale Data\n* Here, the picture is Clear, Sale has grown up in the year 2011\n\n\n    \n\n","0c297ff2":"## Similarli we can country who have very less dealing with retail","ee267d5c":"## Describe Function,represent only integer and float type Dataset; Lets examin above data\nPandas describe() is used to view some basic statistical details like percentile, mean, std etc. of a data frame or a series of numeric values.\n    1. Quantity: \n        Total number of rows: 532619\n        Mean of quantity : 10.24...\n        Standard deviactio : 159.57...\n        Minimum value in Quantity : -9600.00\n        Maximum value in quantity : 80995.00\n        It has 25% or less than 25% :1 values\n        it has 50% or less than 50% : 3 values\n        It has 75% or less 75 % : 10 values\nSame analysis for rest of columns","be81f27a":"## Lets See, ","4344355c":"## Lets Go deeper into Graph:\n## Monthly Sale Data of 2010:\n* First, in the year 2010, there is no sale in the month of 'April, November' therefore, this two month is missing,\n* Second, in the year 2010, there is drastic sale growth in the month of December, and also little growth in June Month\n## Monthly Sale Data of 2011:\n* First, in the year 2011, there are excellent growth in every month as compared to the year 2010\n* Secondly, we can see that, in the month of 'September' and 'November' sale had increased up to two times as compared to previous months\n## Combined Monthly Sale Data\n* Here, we can see that sales increased in the month of 'July','September','November'\n## Yearly Sale Data\n* Here, the picture is Clear, Sale has grown up in the year 2011\n\n\n    \n\n","e5404b03":"## Data Information\nHere we can see that, Thre are 532619 entrie\/row\/observation. Among them\n    1. There are two float type column('UnitPrice','CustomerID)\n    2. There is a integer type column ('Quantity')\n    3. There are five object type column('InvoiceNo', 'StockCode','Description','InvoiceDate','Country')\n    4. These Dataset consume 32.5MB memory\n","70f1b390":"1. Data Visualization:\n    UnitPrice\n    Lets see how unit prices vary for different items","05de8f93":"# Lets Plot Bar graph to represent Data","8ee00934":"## Lets Draw Pie Char for more clearity","3274f3e6":"# We can also put data-type and percentile to be displayed with Subcribe","11293955":"## Country Barr Graph\nHere we can see that,United Kingdom deal more in retail, then germany and so on","794cae32":"Here We can See that United Kingdom Sales' amount is much greater then any other country,\n\nin Second Graph, we can see,Hongkong is on top","f041c059":"# Check,How much Missing Data are there in dataset","ca749116":"## Now Lets Delve Deeper into the given Observation","34cbfe85":"## Distribution of Sales accoross the country\nSales = quantity * unitPrice\n\nHere we can, see that,that UnitPrice,Quantity do not have any null value,so that we can use it otherwise we had to fix missing value"}}