{"cell_type":{"bc02c09e":"code","5fdbec00":"code","9c681f8a":"code","ac490e34":"code","890f398e":"code","064c68ba":"code","be5192e6":"code","e8900295":"code","b35a360a":"code","58165562":"code","dfefcf24":"code","f25060ad":"code","d2f17ff7":"code","ba593b74":"code","5682da90":"code","834e9587":"code","51e58af6":"code","e8367fa6":"code","eecba6ef":"code","2cf40e4a":"code","6345c76d":"code","c910cb20":"code","a1149c3f":"code","9e0323a7":"code","3fdb8eee":"code","ad9c8523":"code","daf0680b":"code","5c9224bd":"code","7f47098f":"code","327008f2":"code","7b4aa009":"code","20e4924e":"code","07aa4f99":"code","a32ae302":"code","d15efa90":"code","dd13639b":"code","6b3c6aa5":"code","6fbe5179":"code","0d45ef45":"code","681f7a7f":"code","1c812331":"code","35db1a3f":"code","46b495d9":"code","55901058":"code","a95fad63":"code","20b97c75":"code","bd4f7e4f":"code","aae2b7a6":"code","94697e4c":"markdown","3978fd96":"markdown","82e11e5e":"markdown","a34aad5b":"markdown","33bd62c0":"markdown","dbd37a24":"markdown","cbcc5b27":"markdown","bbf3f651":"markdown","65053fa9":"markdown","633ad6f4":"markdown","8b4e7916":"markdown","d76d94fc":"markdown","62e151f2":"markdown","e097d449":"markdown","83f813eb":"markdown","75219830":"markdown","167ca72d":"markdown","bc26da2d":"markdown","4fa9de09":"markdown","ea472b57":"markdown","be852da1":"markdown","017c8957":"markdown"},"source":{"bc02c09e":"from datetime import datetime\nimport os\n\nimport numpy as np\nimport pandas as pd\nimport dask.dataframe as dd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nprint(os.listdir(\"..\/input\"))\n\nsns.set(style=\"darkgrid\")","5fdbec00":"items = pd.read_csv(\n    \"..\/input\/items.tsv\", \n    sep=\"\\t\", \n    parse_dates=[\"created_at\"],\n    index_col=\"created_at\",\n).sort_index()\nitems.head()","9c681f8a":"def items_stats(items, freq):\n    \n    groupby = items.groupby(pd.Grouper(level=\"created_at\", freq=freq))\n\n    items_count = groupby.item_id.count().rename(\"items\")\n    authors_count = groupby.author.nunique().rename(\"authors\")\n    likes_count = groupby.likes_count.sum().rename(\"likes\")\n    \n    items_cumsum = items_count.cumsum().rename(\"items cumsum\")\n\n    items_per_author = (items_count \/ authors_count).rename(\"items \/ author\")\n    likes_per_item = (likes_count \/ items_count).rename(\"likes \/ item\")\n\n    return pd.concat([\n        items_count,\n        items_cumsum,\n        authors_count,\n        items_per_author,\n        likes_count,\n        likes_per_item,\n    ], axis=1)\n","ac490e34":"yearly_items_stats = items_stats(items, \"YS\")\ndisplay(yearly_items_stats.reset_index().style.hide_index().format({\n    \"created_at\": \"{:%Y}\",\n    \"items \/ author\": \"{:.2f}\",\n    \"likes \/ item\": \"{:.2f}\",\n}))","890f398e":"monthly_items_stats = items_stats(items, \"MS\")\ndisplay(monthly_items_stats.head())","064c68ba":"display(monthly_items_stats[\"2016-01-01\":\"2018-01-01\"])","be5192e6":"monthly_items_stats.to_csv(\"monthly_items.tsv\", sep=\"\\t\")","e8900295":"for y in monthly_items_stats.columns:\n    sns.relplot(data=monthly_items_stats.reset_index(),\n                kind=\"line\", x=\"created_at\", y=y, aspect=2)","b35a360a":"items_for_plot = monthly_items_stats[monthly_items_stats.index.month != 12][\"2013\":]\nfor y in items_for_plot.columns:\n    sns.relplot(data=items_for_plot.reset_index(),\n                kind=\"line\", x=\"created_at\", y=y, aspect=2)","58165562":"items.likes_count.describe()","dfefcf24":"(items\n .groupby(pd.Grouper(level=\"created_at\", freq=\"YS\"))\n .likes_count.describe()\n)","f25060ad":"ax = sns.distplot(items.likes_count)\n# ax.set_xscale(\"log\")\n# ax.set_yscale(\"log\")","d2f17ff7":"(items\n .groupby(pd.cut(\n     items.likes_count, \n     bins=[0, 1, 10, 100, 99999], \n     right=False,\n ))\n .likes_count\n .agg([{\n     \"count\": \"count\", \n     \"sum\": \"sum\", \n     \"proportion\": lambda x: x.sum() \/ items.likes_count.sum()\n }])\n)","ba593b74":"likes_count_dist = (\n    items\n    .groupby([\n        pd.Grouper(level=\"created_at\", freq=\"YS\"),\n        pd.cut(items.likes_count, bins=[0, 1, 10, 100, 99999], right=False),\n    ])\n    .likes_count.sum()\n    .groupby(\"created_at\")\n    .apply(lambda x: x \/ x.sum())\n    .rename(\"percent\")\n)\ndisplay(likes_count_dist.unstack(\"likes_count\"))","5682da90":"sns.relplot(\n    data=likes_count_dist.reset_index(),\n    kind=\"line\",\n    x=\"created_at\", y=\"percent\", hue=\"likes_count\",\n)","834e9587":"def stack_bar_plot(df, x, hue, xticklabels=None):\n\n    f, ax = plt.subplots()\n\n    a = df.groupby(x).cumsum().unstack(hue)\n    index = reversed(a.columns)\n    a = a.rename(columns=str).reset_index()\n    \n    color_codes = [\"pastel\", \"muted\", \"deep\", \"dark\"]\n    \n    for category, colors in zip(index, color_codes):\n        sns.set_color_codes(colors)\n        g = sns.barplot(\n            data=a, \n            x=x, y=str(category), \n            color=\"b\",\n            label=str(category),\n        )\n        g.set(ylabel=\"\")\n        if xticklabels:\n            g.set(xticklabels=xticklabels)    \n    \n    ax.legend(ncol=1, bbox_to_anchor=(1.05, 1), loc=\"upper left\", frameon=True)\n\n\nstack_bar_plot(\n    likes_count_dist.rename(columns=str), \n    x=\"created_at\", hue=\"likes_count\",\n    xticklabels=list(yearly_items_stats.index.year),\n)\n","51e58af6":"sns.heatmap(\n    data=likes_count_dist.unstack(\"likes_count\"),\n    annot=True,\n    fmt=\".1%\",\n    yticklabels=yearly_items_stats.index.year,\n)","e8367fa6":"%%time\nlikes = pd.read_csv(\n    \"..\/input\/likes.tsv\", \n    sep=\"\\t\", \n    parse_dates=[\"liked_at\"],\n    index_col=\"liked_at\",\n).sort_index()\ndisplay(likes.head())","eecba6ef":"def likes_stats(likes, items, freq):\n    \n    grouped_likes = (\n        dd.from_pandas(likes, 2)\n        .groupby(pd.Grouper(level=\"liked_at\", freq=freq))\n    )\n    \n    grouped_items = (\n        dd.from_pandas(items, 2)\n        .groupby(pd.Grouper(level=\"created_at\", freq=freq))\n    )\n    \n    likes_count = grouped_likes.item_id.count().rename(\"likes\")\n    likers_count = grouped_likes.liker.nunique().rename(\"likers\")\n\n    items_count = grouped_items.item_id.count().rename(\"items\")\n    \n    likes_per_liker = (likes_count \/ likers_count).rename(\"likes \/ liker\")\n    likes_per_item = (likes_count \/ items_count).rename(\"likes \/ item\")\n\n    return (\n        dd.concat([\n            likes_count,\n            likers_count,\n            likes_per_liker,\n            likes_per_item,\n        ], axis=1).compute().sort_index()\n    )\n","2cf40e4a":"%%time\nyearly_likes_stats = likes_stats(likes, items, \"YS\")\ndisplay(yearly_likes_stats.reset_index().style.hide_index().format({\n    \"liked_at\": \"{:%Y}\",\n    \"likes \/ liker\": \"{:.2f}\",\n    \"likes \/ item\": \"{:.2f}\",\n}))","6345c76d":"%%time\nmonthly_likes_stats = likes_stats(likes, items, \"MS\")\ndisplay(monthly_likes_stats.head())","c910cb20":"display(monthly_likes_stats[\"2016-01-01\":\"2018-01-01\"])","a1149c3f":"monthly_likes_stats.to_csv(\"monthly_likes.tsv\", sep=\"\\t\")","9e0323a7":"for y in monthly_likes_stats.columns:\n    sns.relplot(data=monthly_likes_stats.reset_index(),\n                kind=\"line\", x=\"liked_at\", y=y, aspect=2)\n","3fdb8eee":"likes_for_plot = monthly_likes_stats[monthly_likes_stats.index.month != 12].reset_index()\nfor y in monthly_likes_stats.columns:\n    sns.relplot(data=likes_for_plot,\n                kind=\"line\", x=\"liked_at\", y=y, aspect=2)","ad9c8523":"likes_items = pd.merge(likes.reset_index(), items.reset_index(), on=\"item_id\", how='left')\ndisplay(likes_items.head())","daf0680b":"%%time\nlikes_items.to_csv(\"likes_items.tsv\", sep=\"\\t\")","5c9224bd":"grouped_likes = (\n    likes_items\n    .groupby([\n        pd.Grouper(key=\"liked_at\", freq=\"YS\"),\n        pd.Grouper(key=\"created_at\", freq=\"YS\"),\n    ])\n    .liker.count()\n    .rename(\"likes\")\n)\n\nlikes_cumsum = (\n    grouped_likes\n    .groupby(\"created_at\")\n    .apply(lambda x: x.cumsum() \/ yearly_items_stats[\"items\"])\n    .rename(\"likes \/ item\")\n)","7f47098f":"g = sns.relplot(\n    data=likes_cumsum.reset_index(),\n    kind=\"line\", \n    x=\"liked_at\", y=\"likes \/ item\", hue=\"created_at\", \n)\nfor t, i in zip(g._legend.texts[1:], yearly_items_stats.index):\n    t.set_text(i.year)","327008f2":"%%time\n# likes_df = likes_items.groupby([\n#     pd.Grouper(key=\"liked_at\", freq=\"YS\"),\n#     pd.Grouper(key=\"created_at\", freq=\"YS\"),\n# ]).liker.count().rename(\"likes\").reset_index()\n\nlikes_matrix = grouped_likes.reset_index().pivot_table(\n    index=\"liked_at\",\n    columns=\"created_at\",\n    values=\"likes\",\n    aggfunc=\"sum\",\n#     margins=True,\n)\ndisplay(likes_matrix)","7b4aa009":"f, ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(\n    likes_matrix,\n    annot=True, fmt=\".0f\",\n    xticklabels=yearly_likes_stats.index.year,\n    yticklabels=yearly_likes_stats.index.year,\n)","20e4924e":"yearly_items_stats[\"likes \/ item\"].reset_index().style.hide_index().format({\n    \"created_at\": \"{:%Y}\",\n    \"likes \/ item\": \"{:.1f}\",\n})","07aa4f99":"f, ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(\n    likes_matrix \/ yearly_items_stats[\"items\"],\n    annot=True, fmt=\".1f\",\n    xticklabels=yearly_likes_stats.index.year,\n    yticklabels=yearly_likes_stats.index.year,\n)","a32ae302":"f, ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(\n    likes_matrix \/ yearly_items_stats[\"likes\"],\n    annot=True, fmt=\".1%\",\n    xticklabels=yearly_likes_stats.index.year,\n    yticklabels=yearly_likes_stats.index.year,\n)","d15efa90":"f, ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(\n    (likes_matrix.T \/ yearly_likes_stats.likes).T,\n    annot=True, fmt=\".1%\",\n    xticklabels=yearly_likes_stats.index.year,\n    yticklabels=yearly_likes_stats.index.year,\n)","dd13639b":"likes_items[\"time_delta\"] = likes_items.liked_at - likes_items.created_at\nlikes_items[likes_items.time_delta <= \"1minute\"].head()","6b3c6aa5":"likes_items.time_delta.describe()","6fbe5179":"%%time\nsns.distplot(likes_items[likes_items.time_delta.notnull()].time_delta.dt.days)","0d45ef45":"def cut_time_delta(df):\n    return pd.cut(\n        df.time_delta.dt.days,\n        bins=[0, 1, 7, 30, 99999], \n        labels=[\"1day\", \"1week\", \"1month\", \"1month over\"],\n#         df.time_delta,\n#         bins=[pd.Timedelta(\"0minute\"), \n#               pd.Timedelta(\"12hours\"), \n#               pd.Timedelta(\"4days\"), \n#               pd.Timedelta(\"30days\"), \n#               pd.Timedelta(\"99999days\"), \n#              ], \n#         labels=[\"12hours\", \"daily trend\", \"1month\", \"1month over\"],\n        right=False,\n    ).value_counts().sort_index()\n\ncut_time_delta(likes_items) \/ len(likes_items)","681f7a7f":"period_stats = (\n    likes_items\n    .groupby(pd.Grouper(key=\"liked_at\", freq=\"YS\"))\n    .apply(lambda x: cut_time_delta(x) \/ len(x))\n    .stack()\n    .rename(\"value\")\n)\ndisplay(period_stats.unstack(\"time_delta\"))","1c812331":"sns.relplot(\n    data=period_stats.reset_index(),\n    kind=\"line\",\n    x=\"liked_at\",\n    y=\"value\",\n    hue=\"time_delta\",\n)","35db1a3f":"stack_bar_plot(\n    period_stats,\n    x=\"liked_at\",\n    hue=\"time_delta\",\n    xticklabels=list(yearly_items_stats.index.year),\n)","46b495d9":"sns.heatmap(\n    period_stats.unstack(\"time_delta\"),\n    annot=True, fmt=\".1%\",\n    yticklabels=yearly_likes_stats.index.year,\n)","55901058":"trend_likes = likes_items[\n    (\"1days\" <= likes_items.time_delta) & \n    (likes_items.time_delta < \"7days\")\n]","a95fad63":"trend_items = trend_likes.groupby([\n    pd.Grouper(key=\"created_at\", freq=\"YS\"),\n    \"item_id\"\n]).liker.count().rename(\"likes\")\n\ntrend_likes_dist = (\n    trend_items.groupby([\n        \"created_at\", \n        pd.cut(trend_items, bins=[1, 10, 100, 99999], right=False)\n    ])\n    .sum()\n    .groupby(\"created_at\")\n    .apply(lambda x: x \/ x.sum())\n    .rename(\"value\")\n)\n# trend_likes_dist.rename(columns=str)\ntrend_likes_dist.unstack(\"likes\")","20b97c75":"sns.relplot(\n    data=trend_likes_dist.reset_index(),\n    kind=\"line\",\n    x=\"created_at\",\n    y=\"value\",\n    hue=\"likes\",\n)","bd4f7e4f":"stack_bar_plot(\n    trend_likes_dist,\n    x=\"created_at\",\n    hue=\"likes\",\n    xticklabels=list(yearly_items_stats.index.year),\n)","aae2b7a6":"sns.heatmap(\n    trend_likes_dist.unstack(\"likes\"),\n    annot=True, fmt=\".1%\",\n    yticklabels=yearly_likes_stats.index.year,\n)","94697e4c":"## Yearly Likes Stats","3978fd96":"## Yearly Items Stats","82e11e5e":"---\n# 5. Likes Count Matrix by CreatedDate and LikedDate","a34aad5b":"## Exclude outliers","33bd62c0":"## Monthly Items Stats","dbd37a24":"## Distribution of Likes Count Based on Created-date","cbcc5b27":"## Exclude outliers","bbf3f651":"---\n# 4. Cumulative Sum of Likes","65053fa9":"## Load Items","633ad6f4":"## Likes Count","8b4e7916":"---\n# 1. Items Stats","d76d94fc":"## Likes Count \/ Yearly Likes","62e151f2":"## Likes Count \/ Yearly Items","e097d449":"## Load Likes","83f813eb":"## Distribution of Likes for Trend Itmes","75219830":"---\n# 6. Period from Created-date to Liked-date","167ca72d":"- [1. Items Stats](#1.-Items-Stats)\n    - Load Items\n    - Yearly Items Stats\n    - Monthly Items Stats\n    - Exclude outliers\n    - Distribution of Likes Count Based on Created-date\n- [2. Likes Stats](#2.-Likes-Stats)\n    - Load Likes\n    - Yearly Likes Stats\n    - Monthly Likes Stats\n    - Exclude outliers\n- [3. Merge Likes and Items](#3.-Merge-Likes-and-Items)\n- [4. Cumulative Sum of Likes](#4.-Cumulative-Sum-of-Likes)\n- [5. Likes Count Matrix by CreatedDate and LikedDate](#5.-Likes-Count-Matrix-by-CreatedDate-and-LikedDate)\n    - Likes Count\n    - Likes Count \/ Yearly Items\n    - Likes Count \/ Yearly Likes\n- [6. Period from Created-date to Liked-date](#6.-Period-from-Created-date-to-Liked-date)\n    - Basic Statistics\n    - Distribution\n    - Distribution of Likes for Trend Itmes","bc26da2d":"## Basic Statistics","4fa9de09":"## Monthly Likes Stats","ea472b57":"---\n# 2. Likes Stats","be852da1":"## Distribution","017c8957":"---\n# 3. Merge Likes and Items"}}