{"cell_type":{"70b40fda":"code","980d3e9d":"code","915c6073":"code","52d17fbb":"code","fb59fb0b":"code","252d8855":"code","0ff80a42":"code","db82757c":"code","05e17c67":"code","aede751d":"code","41639fe3":"code","512dcca3":"code","d3f82e47":"code","3c44bf7c":"code","0005c414":"code","0322e32e":"code","c12711a5":"code","95d23423":"markdown","bc7c2a22":"markdown","a616f2d1":"markdown"},"source":{"70b40fda":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","980d3e9d":"# Carregando os dados\ntreino = pd.read_csv('\/kaggle\/input\/bike-sharing-demand\/train.csv')\nteste = pd.read_csv('\/kaggle\/input\/bike-sharing-demand\/test.csv')","915c6073":"# Verificando o dataframe de treino\ntreino.info()","52d17fbb":"teste.info()","fb59fb0b":"# Importando a biblioteca\nfrom sklearn.model_selection import train_test_split","252d8855":"# Dividindo o datagframe\n# Por padr\u00e3o a divis\u00e3o \u00e9 um 75% para treino e 25% para valida\u00e7\u00e3o\ntreino, validacao = train_test_split(treino, random_state=42)","0ff80a42":"treino.shape, validacao.shape","db82757c":"# Lista das colunas nao usadas\nnao_usadas = ['datetime', 'casual', 'registered', 'count']","05e17c67":"usadas = [c for c in treino.columns if c not in nao_usadas]","aede751d":"#importando o modelo\nfrom sklearn.tree import DecisionTreeRegressor","41639fe3":"ad = DecisionTreeRegressor(random_state=42)","512dcca3":"# Treinando o modelo\n#Informar as colunas de entrada e a coluna de resposta(target)\nad.fit(treino[usadas], treino['count'])","d3f82e47":"# Vamos prever com os dados de valida\u00e7\u00e3o\nprevisao = ad.predict(validacao[usadas])\nprevisao","3c44bf7c":"#Vamos olhar os dados verdadeiros de alugueis no dataframe de validacao\nvalidacao['count']","0005c414":"from sklearn.metrics import mean_squared_log_error","0322e32e":"# Calculando a metrica\nmean_squared_log_error(validacao['count'], previsao**(1\/2))","c12711a5":"from sklearn.metrics import mean_squared_error\nmean_squared_error(validacao['count'], previsao**(1\/2))","95d23423":"Selecionando as colunas que usaremos para treinar o modelo","bc7c2a22":"Usando a metrica para avaliar os dados","a616f2d1":" Separando o datafram de treino em treino e validacao"}}