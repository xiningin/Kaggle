{"cell_type":{"116c2f1b":"code","05700e90":"code","292366a2":"code","c7e61f72":"code","ed2484cb":"code","9b3e37cc":"code","af6b5cf8":"code","29f5e0ae":"code","d80a04ef":"code","d05bf72a":"code","e345bc80":"markdown","d51bfcd8":"markdown","e7ee182f":"markdown","b9e3f1a5":"markdown","dde71b6b":"markdown","927ade74":"markdown","8fe254e1":"markdown","a168cdc0":"markdown","f856baf5":"markdown","7255108f":"markdown"},"source":{"116c2f1b":"from keras.layers import *\nfrom keras.models import Sequential","05700e90":"# Build a Model \nmodel = Sequential()\nmodel.add(Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1)))\n# model.add(Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1)))\n# model.add(Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1)))\nmodel.add(MaxPool2D((2,2)))\nmodel.add(Conv2D(64,(3,3),activation='relu',input_shape=(28,28,1)))\n# model.add(Conv2D(64,(3,3),activation='relu',input_shape=(28,28,1)))\nmodel.add(MaxPool2D((2,2)))\nmodel.add(Conv2D(64,(3,3),activation='relu',input_shape=(28,28,1)))\nmodel.add(Flatten())\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dense(10,activation='softmax'))\nmodel.summary()","292366a2":"import numpy as np\nimport pandas as pd \nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt","c7e61f72":"df = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\nprint(df.shape)\ndata = df.values\nprint(data.shape)\nprint(type(data))\nXTrain = data[:,1:]\nYTrain = data[:,0]","ed2484cb":"#Dataset\nfrom keras.datasets import mnist\nfrom keras.utils import to_categorical","9b3e37cc":"def preprocess_data(X,Y):\n    X = X.reshape((-1,28,28,1))\n    X = X\/255.0\n    Y = to_categorical(Y)\n    return X,Y\n\nXTrain,YTrain = preprocess_data(XTrain,YTrain)\nprint(XTrain.shape,YTrain.shape)","af6b5cf8":"# Model Compilation\nmodel.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])\nhist = model.fit(XTrain,YTrain,epochs=49,validation_split=0.1,batch_size=210)","29f5e0ae":"Xtest = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\ndata = Xtest.values\nXtest = data.reshape((-1,28,28,1))\nXtest = Xtest\/255.0\nprint(Xtest.shape)","d80a04ef":"res = model.predict(Xtest)\nresults = np.argmax(res,axis = 1)\nprint(results)","d05bf72a":"Label = pd.Series(results,name = 'Label')\nImageId = pd.Series(range(1,28001),name = 'ImageId')\nsubmission = pd.concat([ImageId,Label],axis = 1)\nsubmission.to_csv('\/kaggle\/working\/output.csv',index = False)","e345bc80":"**Import Keras Libraries**","d51bfcd8":"**Build A Model**","e7ee182f":"**Process XTest Dataset**","b9e3f1a5":"**Save Output to file**","dde71b6b":"** Read Test Dataset****","927ade74":"**Import Libraries**","8fe254e1":"**Process XTrain And YTrain**","a168cdc0":"**Import Libraries**","f856baf5":"**Predict Output**","7255108f":"**Model Compilation**"}}