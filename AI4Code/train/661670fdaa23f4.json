{"cell_type":{"374744c5":"code","54e0c94f":"code","cd51cde5":"code","6c5a275a":"code","e6424d46":"code","e2e9f0f8":"code","91fb36c9":"code","d13314b3":"code","7830db05":"code","338d8f47":"code","295217a8":"code","c40bbf14":"code","8b4d2a49":"code","28ca972b":"code","ea6da34f":"code","eea5ce29":"code","498364cf":"code","65f3ab62":"code","756ebb85":"code","999645ac":"code","3d0b25f1":"code","991f165f":"code","89365ba6":"code","6f40df49":"code","f461ae4c":"code","c8f6afbd":"markdown","66418a6b":"markdown","6f6692a8":"markdown","bb89b6ff":"markdown","bde9b9f9":"markdown","57deb5ae":"markdown","9865e177":"markdown","1f6bb147":"markdown","03400258":"markdown","a842fc24":"markdown","b040f465":"markdown","44b3d4e2":"markdown","61d8dbc7":"markdown","f362da3a":"markdown","0a302ae6":"markdown"},"source":{"374744c5":"import os\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport re\nimport time\nimport spacy","54e0c94f":"train_data=pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest_data=pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/test.csv')\nsample_submission=pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","cd51cde5":"palette = [\"#7209B7\",\"#3F88C5\",\"#136F63\",\"#F72585\",\"#FFBA08\"]\nmsno.bar(train_data,color=palette[2], sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()\n\nmsno.bar(test_data,color=palette[2], sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()","6c5a275a":"print(train_data['date_time'].min())\nprint(train_data['date_time'].max())","e6424d46":"print(test_data['date_time'].min())\nprint(test_data['date_time'].max())","e2e9f0f8":"import h2o\nprint(h2o.__version__)\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='16G')","91fb36c9":"%%time\ntrain = h2o.H2OFrame(train_data)\ntest = h2o.H2OFrame(test_data)","d13314b3":"splits = train.split_frame(ratios = [0.9], seed = 1)\ntrain = splits[0]\neval = splits[1]","7830db05":"x = train.columns\ny1 = 'target_carbon_monoxide'\ny2 = 'target_benzene'\ny3= 'target_nitrogen_oxides'\n\nx=[x for x in x if x not in [y1, y2, y3]]\n\n","338d8f47":"aml = H2OAutoML(max_runtime_secs = 3500, seed = 1, project_name = \"target_carbon_monoxide_automl\")\naml.train(x = x, y = y1, training_frame = train)","295217a8":"import gc\ngc.collect()","c40bbf14":"\n# Explain an AutoML object\nexa = aml.explain(eval)","8b4d2a49":"\nshapr_plot = aml.explain_row(eval, row_index=0)","28ca972b":"aml1 = H2OAutoML(max_runtime_secs = 3500, seed = 1, project_name = \"target_benzene_automl\")\naml1.train(x = x, y = y2, training_frame = train)","ea6da34f":"import gc\ngc.collect()","eea5ce29":"aml2 = H2OAutoML(max_runtime_secs = 3500, seed = 1, project_name = \"target_nitrogen_oxides_automl\")\naml2.train(x = x, y = y3, training_frame = train)","498364cf":"import gc\ngc.collect()","65f3ab62":"lb = aml.leaderboard\nlb.head() ","756ebb85":"lb = aml1.leaderboard\nlb.head() ","999645ac":"lb = aml2.leaderboard\nlb.head() ","3d0b25f1":"pred1 = aml.predict(test)\npred1.head()","991f165f":"pred2 = aml1.predict(test)\npred2.head()","89365ba6":"pred3 = aml2.predict(test)\npred3.head()","6f40df49":"test_data['target_carbon_monoxide']=pred1.as_data_frame().values\ntest_data['target_benzene']=pred2.as_data_frame().values\ntest_data['target_nitrogen_oxides']=pred3.as_data_frame().values","f461ae4c":"req_data=test_data[['date_time','target_carbon_monoxide','target_benzene','target_nitrogen_oxides']]\nreq_data.to_csv('submission.csv', index=False)","c8f6afbd":"**Make Submissions**","66418a6b":"**We are going to use H2O Automl to start with**","6f6692a8":"**Make Predictions**","bb89b6ff":"Update:\nAdd Model explanation (July 4th 2021)","bde9b9f9":"### Missing values\ud83d\udd2e","57deb5ae":"Lets take a look at one row of train dataset and understand how it does it.","9865e177":"There are no missing values for train and test data","1f6bb147":"## Train the other targets","03400258":"The test set contains data from 1st of Jan 2011 to 4th of April 2011","a842fc24":"# Introduction \ud83d\udcdd\n\ud83c\udfaf **Goal:** identify the air pollution measurements over time, based on basic weather information (temperature and humidity) and the input values of 5 sensors.\n\n\ud83d\udcd6 **Data:** \n\n> **train.csv \/ test.csv** - the training and testing set\n> - ```date_time``` - Timestamp of the recording\n> - ```relative_humidity``` - Relative humidity also measures water vapor but RELATIVE to the temperature of the air\n> - ```absolute_humidity``` - Absolute humidity is the measure of water vapor (moisture) in the air,        regardless of temperature\n> - ```sensor_1-sensor_5``` - sensor values\n> - ```target_carbon_monoxide``` - Target Carbon Monoxide reading\n> - ```target_benzene``` - Target Benzene Reading\n> - ```target_nitrogen_oxides``` - Target Nitrogen Oxide Reading\n\n\ud83d\udccc **Note:** ```target_carbon_monoxide```, ```target_benzene``` and ```target_nitrogen_oxides``` are blank in the test set.\n\n\n\ud83e\uddea **Evaluation metric:** Root Mean Squared Logarithmic Error (RMSE)\n> $$RMSE = \\sqrt{\\frac{1}{n} \\sum_{i=1}^n (\\log(p_i + 1) - \\log(a_i+1))^2 },$$\n> where \n> * \ud835\udc5b is the total number of observations\n> * \ud835\udc5d\ud835\udc56 is your prediction\n> * \ud835\udc4e\ud835\udc56 is the actual value\n> * log(\ud835\udc65) is the natural logarithm of \ud835\udc65","b040f465":"The train set contains data from 10th of March 2010 to 1st of Jan 2011","44b3d4e2":"#### Explaination with Shap values","61d8dbc7":"**Find the best models for each of the targets*","f362da3a":"Model 1 is to predict **target_carbon_monoxide**","0a302ae6":"### Read Data"}}