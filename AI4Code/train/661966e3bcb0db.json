{"cell_type":{"5a3348c9":"code","507ad060":"code","212f8c03":"code","31dec65b":"code","432af3da":"code","96d7360d":"code","8e218d94":"code","f87df6bc":"code","a533cabd":"markdown","0a955291":"markdown","e394b936":"markdown","aff519d0":"markdown","1dac4198":"markdown","9f53f789":"markdown","903df8ee":"markdown"},"source":{"5a3348c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","507ad060":"from sklearn import model_selection\ntrain = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-aug-2021\/train.csv\")","212f8c03":"train.head(10)","31dec65b":"train.loss.hist()\nprint(train.shape)","432af3da":"train['kfold']=-1\nkf = model_selection.KFold(n_splits=5,shuffle=True, random_state=8)\nfor fold,(train_indicies, valid_indicies) in enumerate(kf.split(X=train)):\n    train.loc[valid_indicies,'kfold']=fold\n    print(fold, train_indicies,valid_indicies)","96d7360d":"print(train.kfold.value_counts())\ntrain.head()","8e218d94":"train[train.kfold==4].loss.hist()","f87df6bc":"train.to_csv('train_folds.csv',index=False)","a533cabd":"we need to import model_selection from sklearn to create kfolds. so lets do that first","0a955291":"we have also imported our data. see the first few rows to see how our data lookslike","e394b936":"(run above codecell)here we can check that the distribution of loss variable has not changed much. so we are good to go.","aff519d0":"here we have added a column called 'kfold' to our train dataframe with default value -1.\nso that we can assign each row to the validation fold value (0,1,2,3,4).","1dac4198":"we can see 100 features in our data. lets view the distribution of loss variable which is our target variable.","9f53f789":"finally save the new dataframe with kfold column added to a new csv file.","903df8ee":"creating Kfolds for cross validation"}}