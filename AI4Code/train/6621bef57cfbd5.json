{"cell_type":{"fffa1fc4":"code","a4e5b94e":"code","c4f30ca5":"code","d68cae3d":"code","6d3a77ed":"code","a43939e2":"code","22e14cfd":"code","ba4844f8":"code","ce7ca162":"code","8d327b1c":"code","9df44e84":"code","def87bc9":"code","a4ff3d4e":"code","3487e55f":"code","e9638ad2":"code","f3df8134":"code","40947c16":"code","53fcc4b8":"code","084fe49e":"code","7dbc19f8":"code","178e4646":"code","ad382056":"code","89fdb13c":"code","79e4e95a":"code","9dfb1157":"code","2e3e10c1":"code","469cdfb2":"code","134a0aa6":"markdown","32310d13":"markdown","6c46ff02":"markdown","023e1910":"markdown","fb9c03f0":"markdown"},"source":{"fffa1fc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a4e5b94e":"data = pd.read_csv('..\/input\/data.csv')\ndata3 = pd.read_csv('..\/input\/yonelimfinal.csv')","c4f30ca5":"data3.columns # we want know column name","d68cae3d":"data3.head()","6d3a77ed":"data3['Age Range'] = ['Relevant' if i != '0-18' else 'Irrelevant' for i in data3['Yas']]","a43939e2":"data3.loc[0:len(data3),[\"Age Range\",\"Yas\"]] # we see two columns values","22e14cfd":"data3['Education Situation'] = ['On Lisans ve \u00dcst\u00fc' if i == 'Lisans' or i == '\u00d6n Lisans' or i == 'Lisans \u00dcst\u00fc' else 'Lise ve Alt\u0131' for i in data3['Egitim']]","ba4844f8":"data3.tail(10)","ce7ca162":"data3['Egitim'].unique() # see education situation","8d327b1c":"datax = pd.DataFrame(data3,columns = ['Cinsiyet','Yas','Bolge','Egitim','parti','Age Range','Education Situation'])\ndatax = datax[np.logical_and(data3['Age Range'] == 'Relevant',data3['Education Situation'] == 'On Lisans ve \u00dcst\u00fc' )]\ndatax = datax.reset_index(drop = True)","9df44e84":"datax.info()","def87bc9":"datax.head()","a4ff3d4e":"datax.columns","3487e55f":"parti = list(datax['parti'].unique())","e9638ad2":"hexalist = datax.groupby('parti').size()","f3df8134":"parti","40947c16":"counter_list = [] #global list\ndef partisayaci():\n    for a in range(len(parti)):\n        counter = 0 #local variable\n        for b in range(len(datax)):\n            if parti[a] == datax['parti'][b]:\n                counter += 1\n            else:\n                continue\n        counter_list.append(counter)\n    return print(counter_list)\npartisayaci()\nprint(parti)\n","53fcc4b8":"counter_list","084fe49e":"dictionary = {} # we will create dict in that party name : number of votes\nfor w in range(len(parti)):\n    dictionary[parti[w]] = counter_list[w]\nprint(dictionary)\ndfparty_new = pd.DataFrame.from_dict(dictionary,orient='index',columns=['Voter']) # we created dataframe from dictionary ","7dbc19f8":"dfparty_new # This is number of voters by party","178e4646":"print(parti) # party names\nprint(counter_list) # party votes","ad382056":"print(dictionary) # parti-counter list unified","89fdb13c":"dfparty_new['Voter']","79e4e95a":"#partyname['IYI',       'AKP'    'DIGER',  'hdp',   'CHP'  'MHP']\ncolors = ['turquoise','yellow','orange','purple','red','green']\nfig = plt.figure(figsize=(8,7))\ndatax['parti'].value_counts().plot(kind = 'pie', autopct='%.1f%%')\nplt.title('Party Ratio')\nplt.legend(labels=['IYI','AKP','OTH','HDP','CHP','MHP']) # colors --> party name\nplt.tight_layout() #regularity\nplt.show()","9dfb1157":"datax2 = pd.DataFrame(data3,columns = ['Cinsiyet','Yas','Bolge','Egitim','parti','Age Range','Education Situation'])\ndatax2 = datax2[np.logical_and(data3['Age Range'] == 'Relevant',data3['Education Situation'] == 'Lise ve Alt\u0131' )]\ndatax2 = datax2.reset_index(drop = True)","2e3e10c1":"datax2.head()","469cdfb2":"#partyname['IYI',       'AKP'    'DIGER',  'hdp',   'CHP'  'MHP']\ncolors = ['turquoise','yellow','orange','purple','red','green']\nfig = plt.figure(figsize=(8,7))\ndatax2['parti'].value_counts().plot(kind = 'pie', autopct='%.1f%%')\nplt.title('Party Ratio')\nplt.legend(labels=['IYI','AKP','OTH','HDP','CHP','MHP']) # colors --> party name\nplt.tight_layout() #regularity\nplt.show()","134a0aa6":"we will use function","32310d13":" **I WILL STUDY ON SECOND HOMEWORK**","6c46ff02":"Party Ratio for high school,primary school graduate and relevant","023e1910":"List comprehension","fb9c03f0":"Party Ratio for university graduate and relevant"}}