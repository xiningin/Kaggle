{"cell_type":{"46751ded":"code","e73f90a1":"code","3d4460ea":"code","0b7a0ecc":"code","307ef94d":"code","724c00ee":"code","48ca6f28":"code","f42ee5d8":"code","379fb7c0":"code","c35b8c55":"code","d266d639":"code","fd5fb4c8":"code","5ebfff47":"code","05ad3f7e":"code","6393cf36":"code","026e93e6":"code","16e58e8e":"code","3ad52d2f":"code","4d714409":"code","8c0762a6":"code","6671724a":"code","64ff12f6":"code","cea79b6c":"code","98010c7a":"code","4a63d069":"code","dd633692":"code","2672e6db":"code","fc8f2e83":"code","7486da37":"code","95e51353":"code","e2bcf6d8":"code","8cf4cf4c":"code","f82a3e81":"code","21ad1e25":"code","e3383654":"code","ac1dd1ea":"code","b1262eb4":"code","16562b53":"code","da864f7d":"code","07282091":"code","900638f8":"code","f9b2ee15":"code","b6590eb5":"code","c09cc48b":"code","01c3c18e":"code","d599d7c6":"code","24ec69ad":"code","6c039c34":"code","697dd4bd":"code","23cde30d":"code","ff93cf8b":"code","e2514b3e":"code","fad9295f":"code","dcd1f1f9":"code","63b0d85d":"code","a569d1b5":"code","ed89dcd5":"code","b662d916":"code","d6f1ecd0":"code","6b13d5a9":"code","eef8ba89":"code","6d75de66":"code","32f1c5b8":"code","79c24efa":"code","0d4a194d":"code","68cd456f":"code","9f1b0c9b":"code","41a44256":"code","b344bf73":"code","046c5d64":"code","2d69321f":"code","11001fe7":"code","837e1626":"code","e1368402":"code","829a29f8":"code","016a507c":"markdown","9122d377":"markdown","faf0de5c":"markdown","e976d2e0":"markdown","b23c7a33":"markdown","fe6b79d9":"markdown","8a8a9ba9":"markdown","17fbf0f8":"markdown","ea529d9e":"markdown","3e7c6547":"markdown","31d4caa3":"markdown","634230f3":"markdown","8376d74f":"markdown","70d0cec9":"markdown","3be7f5d3":"markdown","3763941e":"markdown","b0896144":"markdown","3fd28a5a":"markdown","2f7fd82a":"markdown","f17e1058":"markdown","71d0a746":"markdown","e4933154":"markdown","a14743a7":"markdown","de77cd2a":"markdown","ae499e80":"markdown","034259f3":"markdown","0a6011f1":"markdown","187ffd3d":"markdown","0591805c":"markdown","aadb79b6":"markdown","3f4f26fc":"markdown"},"source":{"46751ded":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e73f90a1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3d4460ea":"def resizeplot():\n    plt.figure(figsize=(12,6))","0b7a0ecc":"def resizecorr():\n    plt.figure(figsize=(15,7))\n\n#This function it is for correlations plots","307ef94d":"df = pd.read_csv('\/kaggle\/input\/weathercsv\/weather.csv')","724c00ee":"df.head()","48ca6f28":"df.isnull().sum()","f42ee5d8":"resizeplot()\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","379fb7c0":"from sklearn.impute import KNNImputer","c35b8c55":"from sklearn.impute import SimpleImputer","d266d639":"imputer_int = KNNImputer(missing_values=np.nan)","fd5fb4c8":"df['Sunshine'] = imputer_int.fit_transform(df[['Sunshine']])","5ebfff47":"imputer_str = SimpleImputer(missing_values=np.nan,strategy='most_frequent')","05ad3f7e":"df['WindGustDir'] = imputer_str.fit_transform(df[['WindGustDir']])","6393cf36":"df['WindGustSpeed'] = imputer_int.fit_transform(df[['WindGustSpeed']])","026e93e6":"df['WindDir9am'] = imputer_str.fit_transform(df[['WindDir9am']])","16e58e8e":"df['WindDir3pm'] = imputer_str.fit_transform(df[['WindDir3pm']])","3ad52d2f":"df['WindSpeed9am'] = imputer_int.fit_transform(df[['WindSpeed9am']])","4d714409":"resizeplot()\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","8c0762a6":"df.drop('RISK_MM', inplace=True,axis=1)","6671724a":"df.head()","64ff12f6":"resizecorr()\nsns.heatmap(df.corr(),annot=True)","cea79b6c":"sns.relplot(x='MinTemp',y='Temp9am',data=df)","98010c7a":"sns.relplot(x='MaxTemp',y='Temp3pm',data=df)","4a63d069":"sns.relplot(x='Sunshine',y='Temp3pm',data=df)","dd633692":"resizeplot()\nsns.distplot(df['WindSpeed9am'])\nsns.distplot(df['WindSpeed3pm'])","2672e6db":"fig, ax =plt.subplots(1,2,figsize= (15,6))\nsns.countplot(df['WindDir9am'],ax=ax[0])\nsns.countplot(df['WindDir3pm'],ax=ax[1])","fc8f2e83":"resizeplot()\nsns.scatterplot(df['Humidity3pm'],df['Evaporation'])","7486da37":"fig, ax =plt.subplots(1,2,figsize= (15,6))\nsns.distplot(df['Pressure9am'],ax=ax[0])\nsns.distplot(df['Pressure3pm'],ax=ax[1])","95e51353":"fig, ax =plt.subplots(1,2,figsize= (13,6))\nsns.scatterplot(data=df,x='Pressure9am',y='MinTemp',ax=ax[0])\nsns.scatterplot(data=df,x='Pressure3pm',y='MaxTemp',ax=ax[1],color='red')","e2bcf6d8":"fig, ax =plt.subplots(1,2,figsize= (13,6))\nsns.distplot(df['Cloud9am'],ax=ax[0])\nsns.distplot(df['Cloud3pm'],ax=ax[1])","8cf4cf4c":"fig, ax =plt.subplots(1,2,figsize= (13,6))\nsns.scatterplot(data=df, x='Cloud9am',y='Humidity9am',ax=ax[0])\nsns.scatterplot(data=df,x='Cloud3pm',y='Humidity3pm',ax=ax[1])","f82a3e81":"df[['Rainfall','Sunshine','Evaporation','WindGustSpeed','WindSpeed9am','WindSpeed3pm','Humidity9am',\n    'Humidity3pm','Pressure9am','Pressure3pm','Cloud9am','Cloud3pm','Temp9am',\n    'Temp3pm']].groupby(df['RainToday']).mean()","21ad1e25":"from sklearn.preprocessing import LabelBinarizer","e3383654":"LB = LabelBinarizer()","ac1dd1ea":"df['WindGustDir'] = LB.fit_transform(df[['WindGustDir']])","b1262eb4":"df['WindDir9am'] = LB.fit_transform(df[['WindDir9am']])","16562b53":"df['WindDir3pm'] = LB.fit_transform(df[['WindDir3pm']])","da864f7d":"from sklearn.preprocessing import LabelEncoder","07282091":"LE = LabelEncoder()","900638f8":"df['RainToday'] = LE.fit_transform(df['RainToday'])","f9b2ee15":"df['RainTomorrow'] = LE.fit_transform(df['RainTomorrow'])","b6590eb5":"df.head()","c09cc48b":"from sklearn.model_selection import train_test_split","01c3c18e":"X = df.drop('RainTomorrow',axis=1).values\ny = df['RainTomorrow'].values","d599d7c6":"from sklearn.preprocessing import MinMaxScaler","24ec69ad":"minmax = MinMaxScaler()","6c039c34":"X = minmax.fit_transform(X)","697dd4bd":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=101)","23cde30d":"from sklearn.tree import DecisionTreeClassifier","ff93cf8b":"dtree = DecisionTreeClassifier()","e2514b3e":"dtree.fit(X_train,y_train)","fad9295f":"previsor_dtree = dtree.predict(X_test)","dcd1f1f9":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report","63b0d85d":"print(classification_report(y_test,previsor_dtree))\nprint(confusion_matrix(y_test,previsor_dtree))\nprint('\\n')\nprint('Acur\u00e1cia:',np.round(accuracy_score(y_test,previsor_dtree),3)*100,'%')","a569d1b5":"from sklearn.ensemble import RandomForestClassifier","ed89dcd5":"rfc = RandomForestClassifier(n_estimators=200)","b662d916":"rfc.fit(X_train,y_train)","d6f1ecd0":"previsor_rfc = rfc.predict(X_test)","6b13d5a9":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report","eef8ba89":"print(classification_report(y_test,previsor_rfc))\nprint(confusion_matrix(y_test,previsor_rfc))\nprint('\\n')\nprint('Acur\u00e1cia:',np.round(accuracy_score(y_test,previsor_rfc),3)*100,'%')","6d75de66":"from sklearn.svm import SVC","32f1c5b8":"model = SVC()","79c24efa":"model.fit(X_train, y_train)","0d4a194d":"previsor_svc = model.predict(X_test)","68cd456f":"from sklearn.metrics import classification_report,confusion_matrix","9f1b0c9b":"print(classification_report(y_test,previsor_svc))\nprint(confusion_matrix(y_test,previsor_svc))\nprint('\\n')\nprint('Acur\u00e1cia:',np.round(accuracy_score(y_test,previsor_svc),3)*100,'%')","41a44256":"from sklearn.linear_model import LogisticRegression","b344bf73":"LR = LogisticRegression()","046c5d64":"LR.fit(X_train,y_train)","2d69321f":"predict_LR = LR.predict(X_test)","11001fe7":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report","837e1626":"print(classification_report(y_test,predict_LR))\nprint(confusion_matrix(y_test,predict_LR))\nprint('\\n')\nprint('Acur\u00e1cia:', np.round(accuracy_score(y_test,predict_LR),3)*100,'%')","e1368402":"Acuracia_LR = np.round(accuracy_score(y_test,predict_LR),3) *100\nAcuracia_svc = np.round(accuracy_score(y_test,previsor_svc),3)*100\nAcuracia_rfc = np.round(accuracy_score(y_test,previsor_rfc),3)*100\nAcuracia_dtree = np.round(accuracy_score(y_test,previsor_dtree),3)*100\n","829a29f8":"print('Acur\u00e1cia_Decision_tree: ',Acuracia_dtree,'%')\nprint('Acur\u00e1cia_Random_Forest: ', Acuracia_rfc,'%')\nprint('Acur\u00e1cia_LR: ', Acuracia_LR,'%')\nprint('Acur\u00e1cia_SVC: ', Acuracia_svc,'%')","016a507c":"# Summary\n\nHello guys, we are once again conducting an analysis with a forecast of a weather dataset.\nOne of my favorites to work with. In this analysis we will make visualizations about the\nfeatures and their relations with each other and in the end we will classify a forecast of\nrain risk for the next day or the conditions that cause them.\nThese data are not from the city of Rio de Janeiro, however, it is a city plagued every year with heavy rains, where people have already lost their lives with landslides, lost their belongings with constant flooding and through machine learning we could help to predict these catastrophes around the world.\n ","9122d377":"* I confess that I find a beauty a graph of the relationship between two features relating in an almost perfect way.\nIt is the same as the situation above but with the features 'MaxTemp' and 'Temp3pm' where they also make sense because the higher temperatures are after 12:00h.","faf0de5c":"* Here we take a closer look at the relationship between evaporation and cloud formation. We obviously have a higher rate in the morning due to relatively higher humidity but in the afternoon we have more uniform rates according to the time.","e976d2e0":"* Below is a comparison of two features, the wind speed at two times, 9:00 am and 3:00 pm.","b23c7a33":"* Let's see how the data is doing.","fe6b79d9":"* There are several ways to treat missing data. Each with its own strengths and weaknesses. A common strategy is to fill the data with the averages but it is usually not as close to the real value as if we used KNN, it is a good solution for small datasets.","8a8a9ba9":"* Let's see if there are missing data.","17fbf0f8":"* Here, we change the Labels of our main forecasts.","ea529d9e":"* I define here some functions for better visualization of the posterior plots.","3e7c6547":"* In this \"groupby\" we have important information about the possible conditions that may or may not cause rain conditions.","31d4caa3":"1. Import the Main Libraries;\n2. Functions to resize plots;\n3. Load de DS;\n4. Visualization of missing data;\n5. Treatment of missing data using KNNImputer;\n6. Delete the \"Risk_MM\" column;\n7. Starting the analysis;\n8. Binarizing the categorical features;\n9. Encoding it;\n10. Split our data;\n11. Start with the algorithms;\n12. Conclusions about the best Accuracy;\n13. Final considerations.\n","634230f3":"* We see a good correlation between 'MinTemp' and 'Temp9am' which makes sense where the lowest temperatures are in the morning.","8376d74f":"# We then had a better assessment of our Logistic Regression with an 89.3% chance of not raining with this information.\n# Well folks, I hope this analysis was useful, that better and sunny days arrive for all of us. If you liked it please do not forget to give an upvote and if not please comment so that I can learn more under your own analysis. Take care.","70d0cec9":"# Let's get started!","3be7f5d3":"* The graphs below are very similar, which leads us to consider that humidity and evaporation are similar at certain times, which leads to similar cloud formations.","3763941e":"* We separate the training and test variables.","b0896144":"* Below, we have two features that are very complex to predict or to follow. The wind directions, in both plots, there are varied differences and amplitudes, which also brings us the idea that these two variables are influenced by factors such as the speed variation with the height, presence of obstacles in the surroundings, relief that can cause an effect of acceleration or deceleration in air flow, etc.","3fd28a5a":"*  Load the data:","2f7fd82a":"* I know, I know I could create a function and pass the features as parameters but I prefer to do it with the 'nail'.According to instructions in the dataset, it is advisable to exclude the Risk_MM column so that it does not interfere with future forecasts.","f17e1058":"* First, we import the libraries.","71d0a746":"* This scatter plot shows that the relationship between pressure in the morning and afternoon is very similar, but we can see that in the afternoon (3pm) the dispersion is more dense in certain variations. That's explain the distplot above.","e4933154":"* The graph below shows the relationship between Sunshine and Temp3pm, which would lead us to believe that it would be a very high correlation apparently, but as we can see, we do not have this correlation. Some factors can contribute to this, such as the amount of clouds in the afternoon where we do not have a high rate of solar illumination.","a14743a7":"* Well, technically the lower the relative humidity, the less water vapor in the air and the more \u201ceasily\u201d the water will evaporate. In the extreme case, if the relative humidity is 100%, the same amount of water that evaporates from the water condenses in it, resulting in a net zero evaporation rate.","de77cd2a":"* In this distribution graph we observed very similar data, which leads us to believe that the temperatures acting on the pressure did not vary much between the hours.","ae499e80":"* We will use LabelBinarizer to handle categorical data.","034259f3":"* Let's go to the predictor algorithms.","0a6011f1":"* We will standardize our information, as they are on very different scales.","187ffd3d":"# Clean!","0591805c":"* We have some missing data. We will visualize them better in the graph.","aadb79b6":"* This is one of the parts that say a lot about our dataset. The correlation graph shows us the relationship between the features and how they can influence others.","3f4f26fc":"![deslizamentos_rio.jpg](attachment:deslizamentos_rio.jpg)"}}