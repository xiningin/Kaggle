{"cell_type":{"99747079":"code","6edc9044":"code","1ae5ec60":"code","98272752":"code","e61315ec":"code","67884f86":"code","05a636c1":"code","cdeff85f":"code","edf9be5f":"code","5353a4e2":"markdown","0cef533a":"markdown","e7650d28":"markdown"},"source":{"99747079":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6edc9044":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()\n# train_data.shape","1ae5ec60":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()\n# test_data.shape","98272752":"# Finding the missing values\ntrain_data.isnull().sum()","e61315ec":"import seaborn as sns\nsns.countplot(x='Survived',data=train_data)","67884f86":"sns.countplot(x='Survived',data=train_data,hue='Sex')","05a636c1":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n# survive is 1, so sum of woman mean sum of all survive\n# women die: rate_women = (len(women)-sum(women))\/len(women)\nprint(\"% of women who survived:\", rate_women*100)","cdeff85f":"men = train_data.loc[train_data.Sex=='male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\nprint(\"% of men who survived:\",rate_men*100)","edf9be5f":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","5353a4e2":"Explore a pattern","0cef533a":"Load the data","e7650d28":"Your first machine learning model"}}