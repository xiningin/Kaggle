{"cell_type":{"0feda5db":"code","79f3f0fb":"code","014f7c59":"code","52ab4024":"code","ad088bd0":"code","fcfaaebf":"code","514829cb":"code","33cf9615":"code","6d9b0f0c":"code","c511ecdf":"code","f3bc2676":"code","def09426":"code","33519786":"code","5a14eea7":"code","1cbd18a7":"code","406c5007":"code","b7d5e7ce":"code","22664ae8":"code","837c0605":"code","d687d9a5":"code","1867e49c":"code","d660f3a5":"code","710509fe":"code","e5e5f43e":"code","2c893a07":"code","3392854c":"code","099a7d68":"code","b9d41ad4":"code","258351e7":"code","60f73f23":"code","37981289":"code","541eaab1":"code","ecf8a953":"code","845b5afa":"code","39ed8014":"code","6bc3d4c1":"code","06425a3f":"code","a890e573":"code","375a5d8d":"code","97c819c6":"code","582c8763":"code","28262958":"code","30ef8c5a":"code","e0734e0c":"code","1865162a":"code","7ce8404b":"code","302c717f":"code","753b7d4d":"code","c3acb666":"code","012629ec":"code","eec91e77":"code","0b94b530":"code","b1327d30":"code","079388b2":"markdown","33c43f7a":"markdown","7f304ccb":"markdown","0b3dcd2f":"markdown","f5395c3c":"markdown","10f6177a":"markdown","1c14f257":"markdown","275447a3":"markdown","4fdece1e":"markdown","b6007416":"markdown","1485aa82":"markdown","5e78c61b":"markdown","a3b29fa0":"markdown","b252aebb":"markdown","5ee11245":"markdown","292b2d6b":"markdown","14c52b07":"markdown","682e0464":"markdown","80179ddf":"markdown","365882a0":"markdown","a1a3de2b":"markdown","aa2f0082":"markdown","b688bf19":"markdown","53cbd505":"markdown","b0677921":"markdown","a1668de0":"markdown","eb7599a9":"markdown","dc2d1af4":"markdown","336e0c36":"markdown","e6e269c5":"markdown","f75e3881":"markdown","ee63d471":"markdown","3cc02303":"markdown","7f902086":"markdown","b79126f9":"markdown","ab141812":"markdown","8e1bd03c":"markdown"},"source":{"0feda5db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","79f3f0fb":"import pandas as pd\nimport numpy as np\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual\n# from ipywidgets import widgets\nfrom IPython.display import display, clear_output, Image\n# from plotly.widgets import GraphWidget\n#%matplotlib inline\nimport seaborn as sns\nimport warnings\nsns.set()\n\nfrom scipy.stats import probplot # for a qqplot","014f7c59":"# %reset -f ","52ab4024":"train=pd.read_csv('\/kaggle\/input\/Train_v2.csv')\ntest=pd.read_csv('\/kaggle\/input\/Test_v2.csv')\n# submission_file=pd.read_csv('\/kaggle\/input\/SubmissionFile.csv')\n# Variables=pd.read_csv('VariableDefinitions.csv')","ad088bd0":"all_data = pd.concat([train, test])","fcfaaebf":"all_data.shape, test.shape, train.shape","514829cb":"all_data.isnull().sum()","33cf9615":"## no missing values in the data","6d9b0f0c":"all_data.describe()","c511ecdf":"# submission_file.to_csv('all_1 values.csv', index=False)","f3bc2676":"all_data.nunique()","def09426":"train.info()","33519786":"for col in all_data.columns:\n    print(col)\n    print(all_data[col].value_counts())\n    print('==========================')","5a14eea7":"for col in train.columns:\n    print(col)\n    print(train[col].value_counts())\n    print('==========================')","1cbd18a7":"test.education_level.value_counts()","406c5007":"cat_col = train.select_dtypes(exclude=np.number).drop(['uniqueid', 'bank_account'], axis=1)\nnum_col = train.select_dtypes(include=np.number)","b7d5e7ce":"## count plot function\ndef cat_plot (col):\n    \n    ## create 2 plot one for train and another for test\n    fig, ((ax),(ax1)) = plt.subplots(1, 2, sharex=False, sharey=False,figsize=(15,5))\n    \n    f = sns.countplot(x=col, data=train, ax=ax)\n        ## write ontop of box snippet\n    for p in f.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f.annotate('{:.1f}%'.format(100.*p.get_height()\/train.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f.title.set_text('Bar plot of train ' + col)\n    f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n   \n    ## plot for test\n    f1 = sns.countplot(x=col, data=test, ax=ax1)\n        ## write ontop of box snippet\n    for p in ax1.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f1.annotate('{:.1f}%'.format(100.*p.get_height()\/test.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f1.title.set_text('Bar plot of test ' + col)\n    f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n    fig.tight_layout()\n    fig.show()  ","22664ae8":"## Gui of countplot\n@interact\ndef show_cat_plot(col=cat_col.columns):\n    cat_plot(col)","837c0605":"num_col.nunique()","d687d9a5":"def num_plot(col):\n    \n    \n    ## create 2 plot one for train and another for test\n    fig, ((ax),(ax1)) = plt.subplots(1, 2, sharex=False, sharey=False,figsize=(15,5))\n    \n   ## Am using the min and max value of the col to set x and y axis\n    if col == 'age_of_respondent':\n        ax.set_xlim(13,100)\n        ax.set_xticks(range(13,110,4))\n        ax1.set_xlim(13,110)\n        ax1.set_xticks(range(13,101,4))\n    if col == 'household_size':\n        ax.set_xlim(0,25)\n        ax.set_xticks(range(0,26))\n        ax1.set_xlim(0,26)\n        ax1.set_xticks(range(0,26))\n    f = sns.distplot(train[col], rug=True, ax=ax)\n        ## write ontop of box snippet\n    f.title.set_text('hist plot of train ' + col)\n#     f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n   \n    ## plot for test\n    f1 = sns.distplot(test[col],  rug=True, ax=ax1)\n    f1.title.set_text('hist plot of test ' + col)\n#     f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n    fig.tight_layout()\n    fig.show()  \n    plt.show()","1867e49c":"# num_col.household_size.describe()","d660f3a5":"# num_col['age_of_respondent'].describe()","710509fe":"@interact\ndef show_num_plot(col=num_col.columns):\n    num_plot(col)","e5e5f43e":"sns.distplot(np.log(train.age_of_respondent))","2c893a07":"# Look deeply into this data since it is categorical in nature, i can use value count","3392854c":"## get counto 10 highest age of train\ntest.age_of_respondent.value_counts()[:10]","099a7d68":"## get counto 10 highest age of test\nnum_col.age_of_respondent.value_counts()[:10]","b9d41ad4":"num_col.household_size.value_counts()","258351e7":"num_bins = 20\ncounts, bin_edges = np.histogram (num_col.age_of_respondent, bins=num_bins, normed=True)\ncdf = np.cumsum (counts)\nplt.plot (bin_edges[1:], cdf\/cdf[-1])\n\n","60f73f23":"# statsmodels Q-Q plot on model residuals\nfor col in num_col.columns:\n    probplot(num_col[col], dist=\"norm\", plot=plt)\n    plt.show()","37981289":"# statsmodels Q-Q plot on model residuals\nfor col in num_col.columns:\n    probplot(np.log(train[col]), dist=\"norm\", plot=plt)\n    plt.show()","541eaab1":"# Possible solution to numeric col\n# log age\n# make year and child num cat\n","ecf8a953":"## count plot function\ndef cat_plot (col):\n    \n    ## create 2 plot one for train and another for test\n    fig, ((ax),(ax1)) = plt.subplots(1, 2, sharex=False, sharey=False,figsize=(15,5))\n    \n    f = sns.countplot(x=col, data=train, ax=ax, hue='bank_account')\n        ## write ontop of box snippet\n    for p in f.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f.annotate('{:.1f}%'.format(100.*p.get_height()\/train.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f.title.set_text('Bar plot of train ' + col)\n    f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n   \n    ## plot for test\n    f1 = sns.countplot(x=col, data=test, ax=ax1)\n        ## write ontop of box snippet\n    for p in ax1.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f1.annotate('{:.1f}%'.format(100.*p.get_height()\/test.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f1.title.set_text('Bar plot of test ' + col)\n    f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n    fig.tight_layout()\n    fig.show()  ","845b5afa":"@interact\ndef cat_with_targrt(col=cat_col.columns):\n    cat_plot(col)","39ed8014":"train.job_type.unique()","6bc3d4c1":"# Old people dont have cell_access but have bank_account, why??\n## This happens mostly in kenya \n## mostly in rural area","06425a3f":"for col in train.columns:\n    print(col)\n    print (train.loc[(train.bank_account == 'Yes') & (train.cellphone_access == 'No') & (train.age_of_respondent > 69)][col].value_counts())\n    print('===================')","a890e573":"@interact\ndef cat_with_targrt(col=num_col.columns):\n    cat_plot(col)","375a5d8d":"test.job_type.value_counts()","97c819c6":"def num_plot(col):\n    \n    \n    ## create 2 plot one for train and another for test\n    fig, ((ax),(ax1)) = plt.subplots(1, 2, sharex=False, sharey=False,figsize=(15,5))\n    \n   ## Am using the min and max value of the col to set x and y axis\n    if col == 'age_of_respondent':\n        ax.set_xlim(13,100)\n        ax.set_xticks(range(13,110,4))\n        ax1.set_xlim(13,110)\n        ax1.set_xticks(range(13,101,4))\n    if col == 'household_size':\n        ax.set_xlim(0,25)\n        ax.set_xticks(range(0,26))\n        ax1.set_xlim(0,26)\n        ax1.set_xticks(range(0,26))\n    f = sns.distplot(train.loc[train.bank_account == 'No'][col],hist=False, rug=True, ax=ax, label=\"No\")\n    f = sns.distplot(train.loc[train.bank_account == 'Yes'][col],hist=False, rug=True, ax=ax, label=\"Yes\")\n    \n        ## write ontop of box snippet\n    f.title.set_text('hist plot of train ' + col)\n#     f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n   \n    ## plot for test\n    f1 = sns.distplot(test[col],  rug=True, ax=ax1)\n    f1.title.set_text('hist plot of test ' + col)\n#     f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n    fig.tight_layout()\n    fig.show()  \n    plt.show()","582c8763":"@interact\ndef num_wrt_target(col=num_col.columns):\n    num_plot(col)","28262958":"## does houeshold size really affect acct number??\n## Those in their 20's tend to use a bank.\n# What if i analyze those in 70's who have and analyse those in 20's who do not have","30ef8c5a":"## count plot function\ndef cat_plot (col):\n    \n    ## create 2 plot one for train and another for test\n    fig, ((ax),(ax1)) = plt.subplots(1, 2, sharex=False, sharey=False,figsize=(15,5))\n    \n    f = sns.countplot(x=col, data=train, ax=ax, hue='country')\n        ## write ontop of box snippet\n    for p in f.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f.annotate('{:.1f}%'.format(100.*p.get_height()\/train.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f.title.set_text('Bar plot of train ' + col)\n    f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n   \n    ## plot for test\n    f1 = sns.countplot(x=col, data=test, ax=ax1,hue='country')\n        ## write ontop of box snippet\n    for p in ax1.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f1.annotate('{:.1f}%'.format(100.*p.get_height()\/test.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f1.title.set_text('Bar plot of test ' + col)\n    f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n    fig.tight_layout()\n    fig.show()  ","e0734e0c":"@interact\ndef cat_with_targrt(col=cat_col.columns):\n    cat_plot(col)","1865162a":"def num_plot(col):\n    \n    \n    ## create 2 plot one for train and another for test\n    fig, ((ax),(ax1),(ax2),(ax3)) = plt.subplots(2, 2, sharex=False, sharey=False,figsize=(15,5))\n    \n   ## Am using the min and max value of the col to set x and y axis\n    if col == 'age_of_respondent':\n        ax.set_xlim(13,100)\n        ax.set_xticks(range(13,110,4))\n        ax1.set_xlim(13,110)\n        ax1.set_xticks(range(13,101,4))\n    if col == 'household_size':\n        ax.set_xlim(0,25)\n        ax.set_xticks(range(0,26))\n        ax1.set_xlim(0,26)\n        ax1.set_xticks(range(0,26))\n    f = sns.distplot(train.loc[train.country == 'Rwanda'][col],hist=False, rug=True, ax=ax, label=\"Rwanda\")\n    f = sns.distplot(train.loc[train.country == 'Tanzania'][col],hist=False, rug=True, ax=ax, label=\"Tanzania\")\n    f = sns.distplot(train.loc[train.country == 'Kenya'][col],hist=False, rug=True, ax=ax, label=\"Kenya\")\n    f = sns.distplot(train.loc[train.country == 'Uganda'][col],hist=False, rug=True, ax=ax, label=\"Uganda\")\n\n    \n        ## write ontop of box snippet\n    f.title.set_text('hist plot of train ' + col)\n#     f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n   \n    ## plot for test\n    f1 = sns.distplot(train.loc[train.country == 'Tanzania'][col],  rug=True, ax=ax1)\n    f1.title.set_text('hist plot of test ' + col)\n#     f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n    fig.tight_layout()\n    fig.show()  \n    plt.show()","7ce8404b":"@interact\ndef num_wrt_target(col=num_col.columns):\n    num_plot(col)","302c717f":"@interact\ndef cat_with_targrt(col=num_col.columns):\n    cat_plot(col)","753b7d4d":"train.loc[train.country == 'Uganda']['age_of_respondent'].value_counts()\n# train.loc[train.country == 'Tanzania'][col],hist=False, rug=True, ax=ax, label=\"Tanzania\")\n#     f = sns.distplot(train.loc[train.country == 'Kenya'][col],hist=False, rug=True, ax=ax, label=\"Kenya\")\n#     f = sns.distplot(train.loc[train.country == 'Uganda'][col],hist=False, rug=True, ax=ax, label=\"Uganda\")\n","c3acb666":"train.country.value_counts()","012629ec":"def num_plot(col):\n    \n    \n    ## create 2 plot one for train and another for test\n    fig, ((ax,ax1),(ax2,ax3)) = plt.subplots(2, 2, sharex=False, sharey=False,figsize=(15,5))\n    \n   ## Am using the min and max value of the col to set x and y axis\n    if col == 'age_of_respondent':\n        ax.set_xlim(13,100)\n        ax.set_xticks(range(13,110,4))\n        ax1.set_xlim(13,110)\n        ax1.set_xticks(range(13,101,4))\n    if col == 'household_size':\n        ax.set_xlim(0,25)\n        ax.set_xticks(range(0,26))\n        ax1.set_xlim(0,26)\n        ax1.set_xticks(range(0,26))\n#     f = sns.distplot(train.loc[train.country == 'Rwanda'][col],hist=False, rug=True, ax=ax, label=\"Rwanda\")\n#     f = sns.distplot(train.loc[train.country == 'Tanzania'][col],hist=False, rug=True, ax=ax, label=\"Tanzania\")\n#     f = sns.distplot(train.loc[train.country == 'Kenya'][col],hist=False, rug=True, ax=ax, label=\"Kenya\")\n#     f = sns.distplot(train.loc[train.country == 'Uganda'][col],hist=False, rug=True, ax=ax, label=\"Uganda\")\n    f = sns.countplot(x=train.loc[train.country == 'Rwanda'][col], data=train, ax=ax, hue='bank_account')\n        ## write ontop of box snippet\n    for p in f.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f.annotate('{:.1f}%'.format(100.*p.get_height()\/train.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f.title.set_text('Bar plot of train Rwanda ' + col)\n    f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n    \n        ## write ontop of box snippet\n#     f.title.set_text('hist plot of train ' + col)\n#     f.set_xticklabels(f.get_xticklabels(), rotation=40, ha=\"right\")\n   \n    ## plot for tanzania\n    f1 = sns.countplot(x=train.loc[train.country == 'Tanzania'][col], data=train, ax=ax1, hue='bank_account')\n        ## write ontop of box snippet\n    for p in f1.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f1.annotate('{:.1f}%'.format(100.*p.get_height()\/train.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f1.title.set_text('Bar plot of train Tanzania ' + col)\n    f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n    \n      \n#     f1.set_xticklabels(f1.get_xticklabels(), rotation=40, ha=\"right\")\n\n    ## plot for tanzania\n    f2 = sns.countplot(x=train.loc[train.country == 'Kenya'][col], data=train, ax=ax2, hue='bank_account')\n        ## write ontop of box snippet\n    for p in f2.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f2.annotate('{:.1f}%'.format(100.*p.get_height()\/train.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f2.title.set_text('Bar plot of train Kenya ' + col)\n    f2.set_xticklabels(f2.get_xticklabels(), rotation=40, ha=\"right\")\n    \n\n    \n    f3 = sns.countplot(x=train.loc[train.country == 'Uganda'][col], data=train, ax=ax3, hue='bank_account')\n        ## write ontop of box snippet\n    for p in f3.patches:\n        ## Get box location\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ## write percentage ontop of box\n        f3.annotate('{:.1f}%'.format(100.*p.get_height()\/train.shape[0]), (x.mean(), y.mean()), \n                ha='center', va='bottom') # set the alignment of the text\n    f3.title.set_text('Bar plot of train Uganda ' + col)\n    f3.set_xticklabels(f3.get_xticklabels(), rotation=40, ha=\"right\")\n    \n    fig.tight_layout()\n    fig.show()  \n    plt.show()","eec91e77":"@interact\ndef num_wrt_target(col=train.columns):\n    num_plot(col)","0b94b530":"@interact\ndef num_wrt_target(col=num_col.columns):\n    num_plot(col)","b1327d30":"train.loc[(train.country == 'Uganda') & (train.bank_account == 'Yes')]['job_type'].value_counts()","079388b2":"### Quantile Plot","33c43f7a":"### Cat wrt  target variable ``bank``\n","7f304ccb":"# Bivariate Plot","0b3dcd2f":"### Histogram ","f5395c3c":"### Numeric wrt target variable","10f6177a":"Barplot with percentage of occurance for each value","1c14f257":"# Import Libraries","275447a3":"Categorical  value analyses","4fdece1e":"### country seperately","b6007416":"* ``Country`` : Rwanda has high with about 37.1%, and Uganda low with 8.9% of the data. Both train and test are accurately seperated\n* ``bank account`` : highly imbalance with no value having 85%\n* ``location`` : There is more of rural than urban 61%\n* ``cellphoneaccess`` : There is more of cellphone access 74%\n* ``gender`` : There is more of female than male 58%\n* ``head_status`` : There is more of head 54.5%, spouse 27%, child 9.5%, parent 4.6%, relative other 2.8%, non, 0.8%. Maybe i can join other and relative\n* ``marital status`` : There is more of married 45.5%, single 33%, divorced 8.8%, widowed 11.5%, add dont know to divorced\n* ``education_level`` : There is more of primary 54% ,no edu 19%, sec 18%, tet 4.9%, voc 3.4%,  dont know \n* ``job_type`` : There is more of self employed 27% ,informally employed 23%, farming n fishing 23%, remittance denpendent 10%, other income 4%,  formally employ 4%, no income 2.7%,  \n\n\n","1485aa82":"Categorical value analysis comparison with train and test","5e78c61b":"## Univariate Numeric value plot","a3b29fa0":"N\/b: don't conflict 2 widget to avoid issues with showing","b252aebb":"### Categorical Feature  wrt another Categorical feature","5ee11245":"* Kenya has a great number of people with bank account\n* Rural n urban has same rate of bank account status\n* Those with no cellphone access barely uses\/have bank acct\n* male are more likely to have an account\n* head of house n spose are more likely to have an acccount\n* Married couple n single guys rules here\n* Although sec andprimary rules here, but we tend to see in voc and tetriary that banks acct owners are more than non-bank account owners\n* Although self_employed and fishing, but we tend to see in formally employed and government agent that banks acct owners are more than non-bank account owners\n\n###  Analyses to check\nWho are the gov and formal employed without account\nThe rest find out about the account owners\n\n","292b2d6b":"## Univariate Categorical value plot","14c52b07":"#### NUm","682e0464":"#### Analyse wrt to country\ni know that kenya has a larger percentage, but can we look at what happens in this country, what age range are in tis country, and other stuffs","80179ddf":"### Cumulative density Plot","365882a0":"Histogram","a1a3de2b":"* ``Year`` is categorical in nature, maybe i should make it categorical. There is  more  that in 2016 than 2017 and 2018\n* ``Ageofrespondent`` is kinda categorical in nature, maybe i should make it categorical. There is  more  of 20- 39 of age \n* ``householdsize`` is categorical in nature, maybe i should make it categorical. There is  more  that is in range of 2 -7. With 2 value been the most occurance\n\nCombine household > 10, 11, or 12 as a group","aa2f0082":"* ``Location type``: More data was captured in the urban of ``tanzania`` than the rural area. ``Rwanda`` has a high level of rural capture than the urban. ``Kenya and Uganda``  looks almost balance in both region, though the rural is winning\n* ``Cellphone access``: Cellphone access is leading in this area. But ``tanzania``has a slight high level of no access , despite having high level of urban users. \n* ``gender``: There is almost an equal share of this, though the femal still wins in all country\n* ``head of house status``: Tanzania tend to accomodate parent than child, compared to kenya who accomodate more child than parent, Uganda also accomodate parent\n* ``Marital_status``: Most people in Tanzania are single or divorced, but the rsre country has more mmarried people\n* ``education_level``:We have mor graduate in Tanzania than in any other country, Kenya has more sec school people\n* ``job_type``:More self employed people can be found in ``tanzania``:no farming and fishing nor formally employed there,``Rwanda`` are more of the fishing and farming type and also informally employed: no no income . Maybe this was due to high data captured in the rural than urban  area. ``Uganda`` guys no farming and fishing nor formally employed, remittane dependent, Informaly employed. Most guys there are sel_employed. The ``kenya`` guys has a bit of almost every jobs","b688bf19":"#### Age analyses ","53cbd505":"#### House_hold size analyses","b0677921":"From analysis, type of work(income)and cellphone access really affects bank accout and  also  level of education","a1668de0":"Stupid way of data spliting","eb7599a9":"## Combine train and test","dc2d1af4":"Funny enough,the rural tends to have more bank account owners than the rural, except in kenya and Uganda where the urban guys win.\nEven tanzania that captures more of urban are lacking in bank_acct\n\n* Cell phone access: Looking deeply, we see that no access to cell phone means that no account im Rwanda , kenya and Tanzania. Look deeply\n* Male or more likely to use bank account \n* Head of house and sometimes spouse are more likely to use bank account \n* Married and single are  likely to use bank account , but in Tanzania we are looking at the divorced and single winning this\n* Vocational specialist and tertiary education guy tend to use more acct, we can analyse more about this guys\n* formally employed private tend to win in Kenya\n","336e0c36":"Check unique value for each value","e6e269c5":"I want to look at countries distribution","f75e3881":"3 int and rest are object","ee63d471":"# Read Data","3cc02303":"Check the statistics of this dataset","7f902086":"Not surprisinng that niggas got wise in 2018, low value in 2017 might be due to small density of data in 2017","b79126f9":"It seems the distribution of country comes from different year\nThe Kenya guys dont want too much children, 1-3 is enough, Rwanda guys like 3 to 6 children, is it because they are in the rural area","ab141812":"### Who has no cell_access but have  a bank_account","8e1bd03c":"Analyse bank account users in each country"}}