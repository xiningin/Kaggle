{"cell_type":{"2cc1b0ae":"code","e0e752e6":"code","ab047176":"code","c91c0de2":"code","d7fff5d9":"code","3c934935":"code","a7749d56":"code","25fc76b8":"markdown","0f832c01":"markdown","8cc6afbf":"markdown","ae153771":"markdown","88b77c40":"markdown","2012a962":"markdown","6182b0d7":"markdown","cf97709a":"markdown","43b0ee4b":"markdown","db671d9e":"markdown","b1e2b0cb":"markdown"},"source":{"2cc1b0ae":"import pandas as pd\nimport os\nimport plotly.express as px \nimport datetime as dt\n\nimport plotly.offline as offline\nimport plotly.graph_objs as go\n\noffline.init_notebook_mode()\n\nimport numpy as np\n\nimport matplotlib","e0e752e6":"#Data acquisition\u3000and Merge\nfiles = os.listdir('..\/input\/among-us-dataset')\ndf = pd.concat([pd.read_csv('..\/input\/among-us-dataset\/' + f) for f in files ])\ndf = df.reset_index(drop=True)\n    \n#replace \u300c-\u300d\nfor column in [\"Task Completed\", \"Imposter Kills\"]:\n    df[column] .replace(\"-\", 0, inplace=True)\n    \ndf[\"Time to complete all tasks\"] .replace(\"-\", \"00m 00s\", inplace=True)\n    \n#replace int\nfor column in [\"Task Completed\", \"Imposter Kills\"]:\n    df[column] = df[column].astype(int)\n    \n#replace float\nfor column in [\"Game Length\",\"Time to complete all tasks\"]:\n    times = []\n    for time in df[column]:\n        td_time = dt.timedelta(minutes=int(time[:2]), seconds=int(time[4:6]))\n        times.append(td_time.total_seconds())\n    df[column] = times\n    \n#create new columns\ndf[\"kill_pace\"] = df[\"Game Length\"]\/df[\"Imposter Kills\"]  \ndf[\"task_time\"] = [df[\"Game Length\"][i] if df[\"Time to complete all tasks\"][i] == 0 else df[\"Time to complete all tasks\"][i] for i in range(len(df))]\ndf[\"task_pace\"] = df[\"task_time\"]\/df[\"Task Completed\"] \ndf[\"sabo_pace\"] = df[\"Game Length\"]\/df[\"Sabotages Fixed\"] \ndf[\"sabo_pace\"].replace(float(\"inf\"), 0, inplace=True)\n\n#split data\ndf_crew = df[df['Team'] == 'Crewmate']\ndf_imp = df[df['Team'] == 'Imposter']\ndf_imp_win = df[(df[\"Team\"]==\"Imposter\") & (df[\"Outcome\"]==\"Win\")].sample(n=200)\ndf_imp_loss = df[(df[\"Team\"]==\"Imposter\") & (df[\"Outcome\"]==\"Loss\")].sample(n=200)\ndf_crew_win = df[(df[\"Team\"]==\"Crewmate\") & (df[\"Outcome\"]==\"Win\")].sample(n=780)\ndf_crew_loss = df[(df[\"Team\"]==\"Crewmate\") & (df[\"Outcome\"]==\"Loss\")].sample(n=780)\n\n\ndf.head()","ab047176":"def make_histogram(win_data, loss_data, title_, xtitle, ytitle):\n    trace1 = go.Histogram(\n            x = win_data,\n            name = \"Imposter_win\",\n            marker = dict(color='#33D7E9'), #FFD7E9\n            opacity = 0.75\n    )\n    trace2 = go.Histogram(\n            x = loss_data,\n            name = \"Imposter_loss\",\n            marker = dict(color='#EB89B5'),\n            opacity = 0.75\n    )\n\n    layout = go.Layout(\n        title = title_,\n        xaxis = dict(title=xtitle),\n        yaxis = dict(title=ytitle),\n    )\n\n    fig = dict(data=[trace1, trace2], layout=layout)\n\n    return offline.iplot(fig)","c91c0de2":"df_imp_win_len = pd.concat([df_imp_win[\"Game Length\"],df_crew_loss[\"Game Length\"]],axis=0)\ndf_imp_loss_len = pd.concat([df_imp_loss[\"Game Length\"], df_crew_win[\"Game Length\"]],axis=0)\nmake_histogram(df_imp_win_len, df_imp_loss_len, \"Inposter Game Length\", \"time(second)\", \"battle count\")","d7fff5d9":"make_histogram(df_imp_win[\"kill_pace\"], df_imp_loss[\"kill_pace\"], \"Inposter Kill Time\", \"time(second)\", \"battle count\")","3c934935":"make_histogram(df_crew_loss[\"task_pace\"], df_crew_win[\"task_pace\"], \"Crewmate Task Pace\", \"time(second)\", \"battle count\")","a7749d56":"sabo_pace_win = df_crew_loss[df_crew_loss[\"sabo_pace\"] != 0][\"sabo_pace\"]\nsabo_pace_loss = df_crew_win[df_crew_win[\"sabo_pace\"] != 0][\"sabo_pace\"]\nmake_histogram(sabo_pace_win, sabo_pace_loss, \"Crewmate Sabotages Fixed Pace\", \"time(second)\", \"battle count\")","25fc76b8":"Inposters tend to lose beyond 15 minutes.","0f832c01":"# Optimal kill pace to win","8cc6afbf":"# Optimal Game Length to win","ae153771":"# Importing Libraries","88b77c40":"# Data shaping","2012a962":"# Task pace to win","6182b0d7":"# Make histgram (definition)","cf97709a":"If imposters don't kill at least once every 5 minutes, imposters are more likely to lose.","43b0ee4b":"If imposters do not sabotage at a pace of more than the number of people in 15 minutes, imposters are more likely to lose.","db671d9e":"# Sabotage Pace to win","b1e2b0cb":"The pace of completing tasks has little to do with winning or losing."}}