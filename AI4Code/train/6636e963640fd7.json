{"cell_type":{"e919122a":"code","c7c73f4b":"code","0a5c011e":"code","3baed3b8":"code","02a65813":"code","bb42a9b3":"code","d7f05bcf":"code","768b96e3":"code","08eeb23d":"markdown","7060f74a":"markdown","20cedc3b":"markdown","b7106bec":"markdown","760ecde2":"markdown","07846e5a":"markdown","f28cf997":"markdown","f285145c":"markdown","e6f1265d":"markdown","c2ee49c7":"markdown","c4db0487":"markdown","703d4bc5":"markdown","bd160007":"markdown","6d12249e":"markdown","5882fa8f":"markdown"},"source":{"e919122a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime\nimport matplotlib.animation as animation\nfrom IPython.display import HTML\nimport matplotlib","c7c73f4b":"df=pd.read_csv(\"..\/input\/ipldata\/matches.csv\", usecols=[3,10])\ndf.dropna(inplace=True)\ndf.head()","0a5c011e":"df.replace({\"Delhi Daredevils\":\"Delhi Capitals\",\"Rising Pune Supergiant\":\"Rising Pune Supergiants\"}, inplace=True)\nd={}; di={}\nfor s in df[\"winner\"].unique():\n    d[s]=\"\".join([i[0] for i in s.split()])\nd[\"Sunrisers Hyderabad\"]=\"SRH\"; d[\"Kings XI Punjab\"]=\"KXIP\"; d[\"Deccan Chargers\"]=\"DCH\" #Changing the exceptions\nfor i in d:\n    di[d[i]]=i\ndf[\"winner\"]=df[\"winner\"].apply(lambda x: d[x])\ndf.head()","3baed3b8":"colors=dict(zip(d.values(), [\"orangered\", \"#d11d9b\", \"#2e0854\", \"darkgrey\", \"#ec1c24\", \"#0e74e8\", \"deeppink\", \"#e04f16\", \"#e3c612\", \"#004ba0\", \"#d9e3ef\", \"#c0d6eb\", \"#ec1c24\",\"#632b72\"]))","02a65813":"def datetimeconverter(s):\n    if \"-\" in s:\n        return datetime.datetime.strptime(s,\"%Y-%m-%d\")\n    return datetime.datetime.strptime(s, \"%d\/%m\/%y\")\n\ndf[\"date\"]=df[\"date\"].apply(datetimeconverter)\ndf.sort_values(\"date\", inplace = True)\ndf[\"date\"]=df[\"date\"].apply(lambda x: x.strftime(\"%d %b %Y\"))\nind=df[\"date\"].values #The value of the dates\ndf.head()","bb42a9b3":"df1=pd.get_dummies(df['winner']).cumsum() #Get the other teams wins as a dataframe with the team as column\ndf=pd.concat([df, df1], axis=1).drop_duplicates(subset=[\"date\"], keep=\"last\") #Joining the dataframes and dropping the duplicate dates (when 2 matches happened on the ame date)\ndf.set_index(\"date\", inplace=True) #Setting the index as the date.\ndf.drop(columns=\"winner\", inplace=True)\n\ndf.head()","d7f05bcf":"def get_data_for_date(date):\n    s=df.loc[date].nlargest()[::-1] #Gets the 5 most wins\n    return s","768b96e3":"def plotting(date):\n    x=get_data_for_date(date)\n    plt.clf()\n    ax=plt.gca()\n    fig=plt.gcf()\n    plt.barh(x.index, x.values, color=[colors[i] for i in x.index])\n    plt.box(False)\n    ax.xaxis.set_ticks_position('top')\n    ax.set_axisbelow(True)\n    plt.yticks([])\n    ax.tick_params(axis='x', colors='#777777', labelsize=10)\n    ax.grid(which='major', axis='x', linestyle='--')\n    for i in range(len(x.index)):\n        if x.values[i]==0:\n            continue\n        dx=x.values[i]\/30\n        plt.text(x.values[i]-dx, i, x.index[i], ha=\"right\", size=15, weight=900, va=\"bottom\", color=\"white\")\n        plt.text(x.values[i]+dx, i, x.values[i], ha=\"left\", size=15, weight=560, va=\"center\")\n        plt.text(x.values[i]-dx, i-0.25, di[x.index[i]], ha=\"right\", size=13, weight=350, va=\"baseline\", color=\"snow\")\n    ax.text(0, 5.1, 'Most Wins in IPL', size=28, weight=600, ha='left')\n    fig.text(0.5, 0.04, date, size=22, ha=\"center\")\n    fig.text(0.87, 0.096, \"Made by Rishabh Gupta\", ha=\"right\", c=\"#777777\")\n    fig.text(0.87, 0.075, \"https:\/\/github.com\/rg089\", ha=\"right\", c=\"#777777\")\n    \n\nfig=plt.figure(figsize=(8,8))\nmatplotlib.rcParams['animation.embed_limit'] = 40 #Setting the size to 40 MB\nanimator = animation.FuncAnimation(fig, plotting, frames=ind[:100], interval=65) #Set frames=ind for complete visualization.\nHTML(animator.to_jshtml())","08eeb23d":"## Code can be found at https:\/\/github.com\/rg089\/ipl_wins_bar_race","7060f74a":"# Importing the modules","20cedc3b":"## Creating Data for Each Date","b7106bec":"# Plotting this Data","760ecde2":"# There you go! <br>To see the complete animation for all the matches till date,among other plots, see my Github Repository  https:\/\/github.com\/rg089\/ipl_wins_bar_race","07846e5a":"## Converting to DateTime","f28cf997":"## Let's start!","f285145c":"## Credits - https:\/\/pratapvardhan.com\/blog\/bar-chart-race-python-matplotlib\/","e6f1265d":"## Colors","c2ee49c7":"## Plotting the first 100 dates only to load it quickly","c4db0487":"#### Pandas to Datetime is not useful as the dates are in different formats which gets recognized incorrectly.","703d4bc5":"# Creating a Bar Chart Race of the 5 Teams With Most Wins","bd160007":"## Importing the data","6d12249e":"## Renaming and getting the abbreviations","5882fa8f":"# Getting and Cleaning the Data"}}