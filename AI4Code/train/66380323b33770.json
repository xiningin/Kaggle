{"cell_type":{"eeb42f90":"code","281fead5":"code","fd251547":"code","a8699e0c":"code","7821025a":"code","160ce430":"markdown"},"source":{"eeb42f90":"!pip install ProgressBar","281fead5":"import random\nfrom progressbar import ProgressBar\nimport numpy as np\nimport matplotlib.pyplot as plt","fd251547":"class Pi:\n    \n    def __init__(self):\n        self.circle = 0 \n        self.x_inside = []\n        self.y_inside = []\n        self.x_outside = []\n        self.y_outside = []\n        \n    def estimate(self,numbers):\n        progress = ProgressBar()\n        for i in progress(range(numbers)):\n            x = random.uniform(0,1)\n            y = random.uniform(0,1)\n            distance = np.sqrt(x**2 + y**2)\n            if distance <=1:\n                self.circle += 1\n                self.x_inside.append(x)\n                self.y_inside.append(y)\n            else:\n                self.x_outside.append(x)\n                self.y_outside.append(y)\n     \n\n        return(4 * self.circle\/numbers)\n    \n    def plot(self):\n        fig, ax = plt.subplots(1,figsize=(10,10))\n        ax.scatter(self.x_inside, self.y_inside, color='g', marker='s',edgecolor='none')\n        ax.scatter(self.x_outside, self.y_outside, color='r', marker='s',edgecolor='none')\n        ax.set_aspect('equal')\n        fig.show()","a8699e0c":"pi = Pi()\npi.estimate(10000000)","7821025a":"pi.plot()","160ce430":"## MONTECARLO ESTIMATION OF PI VALUE"}}