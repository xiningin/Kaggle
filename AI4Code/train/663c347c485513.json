{"cell_type":{"055a9acc":"code","86aa271f":"code","f4d597b9":"code","4655ad83":"code","da545b11":"code","3e1aa2c3":"code","2e306a25":"code","df544e8d":"code","42bcaea2":"code","ccf05b98":"code","9178b4ba":"code","53a6aaad":"code","6e688238":"code","5a063cbd":"code","cb81dcbb":"code","2f99d97f":"code","32411395":"code","4cd166ba":"code","1fed42ea":"code","e32672e8":"code","18ef75e3":"code","507873f8":"code","b4445d44":"code","8405922c":"code","a799f60a":"code","113598c7":"code","4ce24119":"markdown","731a6f1d":"markdown","7b8714d6":"markdown","65ad8a39":"markdown","9cc30147":"markdown","577d6d55":"markdown"},"source":{"055a9acc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86aa271f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import neighbors\nfrom sklearn.ensemble import VotingClassifier, RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix","f4d597b9":"heart = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","4655ad83":"heart.head()","da545b11":"heart.info()","3e1aa2c3":"heart.describe()","2e306a25":"heart.columns","df544e8d":"sns.set_style('whitegrid')\nsns.countplot(x='output',data=heart,palette='RdBu_r')","42bcaea2":"heart['output'].value_counts(normalize=True)*100","ccf05b98":"sns.set_style('whitegrid')\nsns.countplot(x='output',hue='sex',data=heart,palette='RdBu_r')","9178b4ba":"sns.set_style('whitegrid')\nsns.countplot(x='output',hue='cp',data=heart,palette='rainbow')","53a6aaad":"sns.set_style('whitegrid')\nsns.countplot(x='output',hue='restecg',data=heart,palette='rainbow')","6e688238":"sns.set_style('whitegrid')\nsns.countplot(x='output',hue='exng',data=heart,palette='rainbow')","5a063cbd":"sns.distplot(heart[heart.output==0]['age'].dropna(),color='red')\nsns.distplot(heart[heart.output==1]['age'].dropna(),color='green')","cb81dcbb":"heart[['cp','output','age']].groupby(['cp','output']).count()","2f99d97f":"heart[['thall','output','age']].groupby(['thall','output']).count()","32411395":"X_train, X_test, y_train, y_test = train_test_split(heart.drop(['output'],axis=1), \n                                                    heart['output'], test_size=0.20, \n                                                    random_state=101)","4cd166ba":"lr = LogisticRegression()\nrfc = RandomForestClassifier(n_estimators=50)\nknn = neighbors.KNeighborsClassifier(n_neighbors=5)\ndt = DecisionTreeClassifier(criterion=\"entropy\",random_state=1, max_depth=3)","1fed42ea":"# Logistic Regression and Random Forest\neclf = VotingClassifier(estimators=[('lr', lr), ('rfc', rfc)], voting='soft')\neclf = eclf.fit(X_train,y_train)\npredictions = eclf.predict(X_test)\nprint(classification_report(y_test,predictions))","e32672e8":"# Random Forest\neclf = VotingClassifier(estimators=[('rf', rfc)], voting='soft')\neclf = eclf.fit(X_train,y_train)\npredictions = eclf.predict(X_test)\nprint(classification_report(y_test,predictions))","18ef75e3":"# Decision Tree\neclf = VotingClassifier(estimators=[('dt', dt)], voting='soft')\neclf = eclf.fit(X_train,y_train)\npredictions = eclf.predict(X_test)\nprint(classification_report(y_test,predictions))","507873f8":"# K-Nearest Neighbor\neclf = VotingClassifier(estimators=[('knn', knn)], voting='soft')\neclf = eclf.fit(X_train,y_train)\npredictions = eclf.predict(X_test)\nprint(classification_report(y_test,predictions))","b4445d44":"# Logistic Regression\neclf = VotingClassifier(estimators=[('lr', lr)], voting='soft')\neclf = eclf.fit(X_train,y_train)\npredictions = eclf.predict(X_test)\nprint(classification_report(y_test,predictions))","8405922c":"#K-Means\nkm = KMeans(n_clusters=2)\nkm.fit(heart.drop('output',axis=1))\nkm.cluster_centers_","a799f60a":"cluster = km.labels_\nheart['Cluster']=heart['output'].apply(lambda x: 1 if x==1 else 0)","113598c7":"print(confusion_matrix(heart['Cluster'],km.labels_))\nprint('\\n')\nprint(classification_report(heart['Cluster'],km.labels_))","4ce24119":"# Exploratory Data Analysis","731a6f1d":"---","7b8714d6":"# Training and Testing","65ad8a39":"The dataset appears to have no null values","9cc30147":"---","577d6d55":"# Random Forrest Classifier gives the best result with 0.87 accuracy"}}