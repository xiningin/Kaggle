{"cell_type":{"24568012":"code","01998741":"code","35e97908":"code","ee5e1f4d":"code","1a23d462":"code","ee1fc2cc":"code","2be950ff":"code","40dd6b8f":"code","07c30a77":"code","47cbbdc7":"code","32760c08":"code","146093d1":"code","bc69d93d":"code","e9a81aef":"code","8e947328":"code","deec17b2":"code","4cde681b":"code","f24ff08b":"code","b176e26f":"code","f15160c6":"code","1faf07a8":"code","0a49d34f":"code","727011a4":"code","a251707a":"code","5bd3a45e":"code","973bd471":"code","835823e7":"code","74b5898b":"code","c12f8c70":"code","778424b0":"code","d87787c0":"code","90d913de":"code","fa8b128a":"code","4748a1a1":"code","e2e2e5de":"code","097d004b":"code","5ca87c67":"code","b9cd667d":"code","5a103e9c":"code","a3dd8ef6":"code","b97bb1b1":"code","3c7e3451":"code","aca6ba2b":"code","93f58a3c":"code","74bda266":"code","6133d0ae":"code","f41fd197":"code","90ebad3f":"code","838f5b0e":"code","d5c33746":"markdown","1dbd3c55":"markdown","1f62ad95":"markdown","f34af17a":"markdown","b054c4da":"markdown","bb21a71d":"markdown","e0d9a9a3":"markdown","d9499acb":"markdown","e8cc2e93":"markdown","71fa3caa":"markdown","0d8df238":"markdown","1b2855b1":"markdown","e6b7971f":"markdown"},"source":{"24568012":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","01998741":"dataset= [11,10,12,14,12,15,14,13,15,102,12,14,17,19,107, 10,13,12,14,12,108,12,11,14,13,15,10,15,12,10,14,13,15,10]","35e97908":"def detect_outliers(data):\n    outliers = []\n    threshold = 3\n    u = np.mean(data)\n    d = np.std(data)\n    for i in data:\n        z_score = (i - u)\/d\n        if(np.abs(z_score) > threshold):\n            outliers.append(i)\n    return outliers\n            ","ee5e1f4d":"import numpy as np\ndataset= [11,10,12,14,12,15,14,13,15,102,12,14,17,19,107, 10,13,12,14,12,108,12,11,14,13,15,10,15,12,10,14,13,15,10]\noutliers_pt = detect_outliers(dataset)","1a23d462":"outliers_pt","ee1fc2cc":"dataset","2be950ff":"outliers_pt","40dd6b8f":"data = np.sort(dataset)","07c30a77":"data","47cbbdc7":"mean = np.mean(data)\nmean","32760c08":"n = data.size","146093d1":"q1 = data[n\/\/4]","bc69d93d":"q3 = data[3*n\/\/4]","e9a81aef":"q1","8e947328":"q3","deec17b2":"quartile1, quartile2 = np.percentile(dataset,[25,75])","4cde681b":"quartile1","f24ff08b":"quartile2","b176e26f":"Inter_Quartile_range = quartile2 - quartile1\nInter_Quartile_range","f15160c6":"left_l = quartile1 - (1.5*Inter_Quartile_range)\nright_l = quartile2 + (1.5*Inter_Quartile_range)\nprint(left_l,right_l)","1faf07a8":"def detect_outliers_IQR(data, left, right):\n    outliers_ = []\n    for i in data:\n        if((i>right) | (i<left)):\n            outliers_.append(i)\n    return outliers_\n","0a49d34f":"dataset= [11,10,12,14,12,15,14,13,15,102,12,14,17,19,107, 10,13,12,14,12,108,12,11,14,13,15,10,15,12,10,14,13,15,10]\noutliers_iqr = detect_outliers_IQR(dataset,left_l,right_l)\noutliers_iqr","727011a4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","a251707a":"train = pd.read_csv('..\/input\/titanic\/train.csv')","5bd3a45e":"train.head()","973bd471":"train.isnull()","835823e7":"sns.heatmap(train.isnull(), yticklabels = False, cbar = False, cmap='viridis')","74b5898b":"sns.set_style('white')","c12f8c70":"sns.countplot(x='Survived', hue = 'Sex',data = train)","778424b0":"sns.countplot(x='Survived', hue = 'Pclass', data = train)","d87787c0":"train.Age.hist(color='red',bins= 40, alpha = 0.5)","90d913de":"plt.figure(figsize = (12, 7))\nsns.boxplot(x = 'Pclass', y = 'Age', palette = 'rainbow', data = train)","fa8b128a":"np.mean(train.Age[train.Pclass == 1])","4748a1a1":"np.mean(train.Age[train.Pclass == 2])","e2e2e5de":"np.mean(train.Age[train.Pclass == 3])","097d004b":"def impute_age(col):\n    Age = col[0]\n    Pclass = col[1]\n    \n    if pd.isnull(Age):\n        if(Pclass == 1):\n            return 38\n        elif(Pclass == 2):\n            return 30\n        else:\n            return 25\n    else:\n        return Age\n    ","5ca87c67":"train.Age = train[['Age','Pclass']].apply(impute_age,axis = 1)","b9cd667d":"train.drop('Cabin',axis = 1,inplace = True)","5a103e9c":"sns.heatmap(train.isnull(),yticklabels = False,cmap='viridis')","a3dd8ef6":"train.dropna(inplace = True)","b97bb1b1":"train.head()","3c7e3451":"train.isna().sum()","aca6ba2b":"train.Embarked.unique()","93f58a3c":"pd.get_dummies(train['Embarked'], drop_first = False).head(20)","74bda266":"sex = pd.get_dummies(train['Sex'], drop_first = True)\nembark = pd.get_dummies(train['Embarked'], drop_first = True)","6133d0ae":"train.drop(['Sex','Embarked','Name','Ticket'], axis = 1, inplace = True)","f41fd197":"train.head()","90ebad3f":"train = pd.concat([train,sex,embark], axis = 1)","838f5b0e":"train.head()","d5c33746":"###### InterQuartile Range","1dbd3c55":"###### z-score = (x-mean) \/ std","1f62ad95":"**Finding Relation of Age with other parameters**","f34af17a":"##### Seaborn to check null values in the dataset","b054c4da":"##### More class 3 people were died","bb21a71d":"## Finding outliers using Z-score","e0d9a9a3":"# **Handling of Missing Data**","d9499acb":"It can be seen that there are many null values in the Age and Cabin columns","e8cc2e93":"## Data Cleaning","71fa3caa":"##### Max people with age between 20 and 35 ","0d8df238":"##### Missing values well handled ","1b2855b1":"## Finding outliers using InterQuartile Range","e6b7971f":"##### More males died and more females survived "}}