{"cell_type":{"64c69eb2":"code","31cdcef4":"code","530a05c0":"code","451390ef":"code","a65644e7":"code","da510a93":"code","60741683":"code","c891c514":"code","b1b0ad43":"code","ff81a0e3":"code","9854d16f":"code","3a36f0b4":"code","d0bee60d":"code","2a181a05":"code","e2e26d4f":"code","c2d08ea4":"code","40915041":"code","0b7f7bcb":"code","7c420dba":"code","fa274967":"code","c64c591e":"code","cca82b90":"code","449d75f1":"code","10ea7fa0":"code","b24c9ac7":"code","801bb529":"code","58810745":"code","f46bf4e4":"code","67b527d3":"code","8ba5d7c7":"code","5a2bb6e4":"code","273dbd98":"code","313cbdc6":"code","ac2c59ce":"code","f6cc3add":"code","d1b33e0e":"code","0e0311cd":"code","71a6cd15":"code","000493a9":"code","491f4b7e":"code","6aa43141":"code","081336b5":"code","2b9a48de":"code","26d07dbe":"code","92d68ecb":"code","3d847f4c":"code","3b244d20":"code","750bbe88":"code","8d717162":"code","199cc4f1":"code","3937a51b":"code","d4c7a440":"code","217b80eb":"code","244a1295":"code","d4eef1dc":"code","03d4a18e":"code","b3d76d2f":"code","28fb6d2b":"code","820aba29":"code","7c9328dc":"code","4e1fe465":"code","657beaaf":"code","3a6416b2":"code","15ec42e6":"code","70b0f731":"code","8783dff5":"code","82835c23":"code","93c46519":"code","c64077d6":"code","3773ccb8":"code","5eeccb2c":"code","6d7335e1":"code","369896f4":"code","8d14c10b":"code","e1e4a231":"code","cac5aba5":"code","9432db6b":"code","197bcfb5":"code","96bb1a4e":"code","b966ab5a":"code","746f416b":"code","3957fce7":"code","aa7c301b":"code","2467a1c5":"code","3b4342f8":"code","18826653":"code","e6e3b53c":"code","0f349216":"code","3be709e2":"code","3fe0636d":"code","0bf3a568":"code","a363a7d8":"code","a776a8ae":"code","c0ff3a2e":"code","3e7e0fa2":"code","0097cf6b":"code","aabce904":"code","fbacdeb1":"code","70e25db3":"code","81c31469":"code","57564782":"code","e346d5d5":"code","4f53c6ec":"code","108825d6":"code","4910a7bf":"code","2c2aa330":"code","0e594d50":"code","2842c609":"code","331cfb3d":"code","6812273b":"code","a2ef838d":"code","dda3a78a":"code","427decf2":"code","afb599ee":"code","562cb2fa":"code","6e2eeecb":"code","60e26256":"code","2beb8843":"code","a5147f42":"code","466ea09d":"code","74234aa5":"code","76835d3c":"code","62b7fd68":"code","c1e46b8f":"code","9210b194":"code","3411fef3":"code","4347aa6e":"code","97299dd1":"code","8df42557":"code","523b3a3d":"code","31bb6b9e":"code","40e2ac13":"code","065ba884":"code","b6712777":"code","ddd36b2d":"code","96fd4c03":"code","27547cf4":"code","1a8006ad":"code","d8728e2d":"code","a4b40bf0":"code","242ab4ce":"code","71d7b29b":"code","9ef1519a":"code","4afca0da":"code","a35d59a7":"code","0c6b9835":"code","4ed3bfb0":"code","d9b19ae5":"code","9fce2d07":"code","672eab58":"code","f61a6ced":"code","fa587f74":"code","0b862cb7":"code","782f3c6c":"code","8de1a207":"code","1a2d9b53":"code","17be7924":"code","f845e411":"code","776a8131":"code","3f24a759":"code","ed8ceb0c":"code","406e8288":"code","99f9b4a7":"code","b931efc8":"code","6a7db588":"code","265579e6":"code","7b19e63d":"code","8de4127e":"code","f4e24b98":"code","6bf26c98":"code","c8271b1c":"code","91ebcf49":"code","6ff13819":"code","c157a23e":"code","171bb2ad":"code","9b6eb147":"code","e229991a":"code","87458490":"code","98ad2417":"code","06822fa5":"code","f832b6e7":"code","42e3ed76":"code","0e27a63d":"code","f0bf64c5":"code","6a512b0c":"code","d3a55318":"code","16f607f5":"code","6c91cfe6":"code","a60d9a44":"code","549b7991":"code","71c8e51a":"code","fd9d3bfc":"code","7768a391":"code","3cc88143":"code","e3d1090e":"code","4e281824":"code","5f1e4d31":"code","bb06e732":"code","5837884d":"code","2c6dee70":"code","5d2bebea":"code","ab2a5b6a":"code","df21a947":"code","368e681e":"code","455c696a":"code","36474ba5":"code","7cd72b30":"code","2b47d3db":"code","990a70bd":"code","18ff8b45":"code","09c2742e":"code","9573190b":"code","99f858de":"code","1f8b7e09":"code","d091282e":"code","51fd9504":"code","768caec0":"code","9799445b":"code","c07c7888":"code","3f944ad2":"markdown","d6ea44d6":"markdown","58afc2aa":"markdown","3e4a63b3":"markdown","38211492":"markdown","f209c940":"markdown","6109fff8":"markdown","87a6e945":"markdown","affcdb1a":"markdown","276e08b1":"markdown","2beac1a0":"markdown","9b67c6d8":"markdown","e7ec0392":"markdown","d772c697":"markdown","1a56c4d6":"markdown","26066c42":"markdown","4f5f159d":"markdown","3b7b2fdc":"markdown","66bd2e9d":"markdown","eb6cf778":"markdown","e6079b83":"markdown","de31847b":"markdown","24af95cf":"markdown","de0334df":"markdown","f9406984":"markdown","e0094456":"markdown","58e705b6":"markdown","d9665b2e":"markdown","99dd8928":"markdown","bc02688a":"markdown","54e15c0c":"markdown","7e837e45":"markdown","cc5013c3":"markdown","3443ebc6":"markdown","9a4f02b6":"markdown","ff2d9ffe":"markdown","42a2f8e9":"markdown","634cd893":"markdown","b60534e1":"markdown","2984201c":"markdown","415c1a4a":"markdown","806ef084":"markdown","cd0f7215":"markdown","b3fe14e6":"markdown","7d56c163":"markdown","c2097148":"markdown","4f480d3e":"markdown","95e1a3c8":"markdown","81c4da32":"markdown","9e6d0860":"markdown","5cc62d75":"markdown","7aefa065":"markdown","c3b6ea0d":"markdown","29487e77":"markdown","71866f70":"markdown","2dc9d8b9":"markdown","62cf64da":"markdown","f9ab554d":"markdown","ee01af72":"markdown","ac5fe3c9":"markdown","a96276b3":"markdown"},"source":{"64c69eb2":"import numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nimport json\nimport pycountry\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","31cdcef4":"kaggle_survey = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nkaggle_survey.head()","530a05c0":"\ncountry_data = pd.read_csv('\/kaggle\/input\/country-regioncsv\/country_region.csv')\ncountry_data.head(5)","451390ef":"country_data_1= country_data.drop(country_data.iloc[:,1:4].columns, axis = 1) \ncountry_data_1","a65644e7":"country_data_1= country_data_1.drop(country_data_1.iloc[:,3:6].columns, axis = 1) \ncountry_data_1","da510a93":"kaggle_survey=kaggle_survey.rename(columns=kaggle_survey.iloc[0]).drop(kaggle_survey.index[0])\nkaggle_survey.head()","60741683":"kaggle_survey[\"Duration (in seconds)\"] = kaggle_survey[\"Duration (in seconds)\"].astype(int)","c891c514":"kaggle_survey_obj = kaggle_survey.select_dtypes(['object'])\nkaggle_survey[kaggle_survey_obj.columns] = kaggle_survey_obj.apply(lambda x: x.str.rstrip())","b1b0ad43":"kaggle_survey.index = pd.RangeIndex(start=0, stop=20036, step=1)","ff81a0e3":"kaggle_survey[\"regular_programming_language\"] = kaggle_survey.iloc[:,8:20].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","9854d16f":"kaggle_survey[\"regular_programming_language\"] = kaggle_survey[\"regular_programming_language\"].replace(\"\", \"None\")","3a36f0b4":"kaggle_survey[\"regular_programming_language_count\"]= kaggle_survey[\"regular_programming_language\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","d0bee60d":"kaggle_survey[\"regular_programming_language_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_programming_language\"] == 'None' else x[\"regular_programming_language_count\"], axis = 1)","2a181a05":"kaggle_survey[\"regular_ide\"] = kaggle_survey.iloc[:,22:33].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","e2e26d4f":"kaggle_survey[\"regular_ide\"] = kaggle_survey[\"regular_ide\"].replace(\"\", \"None\")","c2d08ea4":"kaggle_survey[\"regular_ide_count\"]= kaggle_survey[\"regular_ide\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","40915041":"kaggle_survey[\"regular_ide_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_ide\"] == 'None' else x[\"regular_ide_count\"], axis = 1)","0b7f7bcb":"kaggle_survey[\"regular_notebook\"] = kaggle_survey.iloc[:,34:47].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","7c420dba":"kaggle_survey[\"regular_notebook\"] = kaggle_survey[\"regular_notebook\"].replace(\"\", \"None\")","fa274967":"kaggle_survey[\"regular_notebook_count\"]= kaggle_survey[\"regular_notebook\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","c64c591e":"kaggle_survey[\"regular_notebook_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_notebook\"] == 'None' else x[\"regular_notebook_count\"], axis = 1)","cca82b90":"kaggle_survey[\"specialized_hardware\"] = kaggle_survey.iloc[:,49:52].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","449d75f1":"kaggle_survey[\"specialized_hardware\"] = kaggle_survey[\"specialized_hardware\"].replace(\"\", \"None\")","10ea7fa0":"kaggle_survey[\"specialized_hardware_count\"]= kaggle_survey[\"specialized_hardware\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","b24c9ac7":"kaggle_survey[\"specialized_hardware_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"specialized_hardware\"] == 'None' else x[\"specialized_hardware_count\"], axis = 1)","801bb529":"kaggle_survey[\"regular_data_visualization_library\"] = kaggle_survey.iloc[:,54:65].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","58810745":"kaggle_survey[\"regular_data_visualization_library\"] = kaggle_survey[\"regular_data_visualization_library\"].replace(\"\", \"None\")","f46bf4e4":"kaggle_survey[\"regular_data_visualization_library_count\"]= kaggle_survey[\"regular_data_visualization_library\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","67b527d3":"kaggle_survey[\"regular_data_visualization_library_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_data_visualization_library\"] == 'None' else x[\"regular_data_visualization_library_count\"], axis = 1)","8ba5d7c7":"kaggle_survey[\"regular_ml_framework\"] = kaggle_survey.iloc[:,67:82].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","5a2bb6e4":"kaggle_survey[\"regular_ml_framework\"] = kaggle_survey[\"regular_ml_framework\"].replace(\"\", \"None\")","273dbd98":"kaggle_survey[\"regular_ml_framework_count\"]= kaggle_survey[\"regular_ml_framework\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","313cbdc6":"kaggle_survey[\"regular_ml_framework_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_ml_framework\"] == 'None' else x[\"regular_ml_framework_count\"], axis = 1)","ac2c59ce":"kaggle_survey[\"regular_ml_algorithm\"] = kaggle_survey.iloc[:,83:94].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","f6cc3add":"kaggle_survey[\"regular_ml_algorithm\"] = kaggle_survey[\"regular_ml_algorithm\"].replace(\"\", \"None\")","d1b33e0e":"kaggle_survey[\"regular_ml_algorithm_count\"]= kaggle_survey[\"regular_ml_algorithm\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","0e0311cd":"kaggle_survey[\"regular_ml_algorithm_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_ml_algorithm\"] == 'None' else x[\"regular_ml_algorithm_count\"], axis = 1)","71a6cd15":"kaggle_survey[\"regular_category_of_computer_vision_method\"] = kaggle_survey.iloc[:,95:101].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","000493a9":"kaggle_survey[\"regular_category_of_computer_vision_method\"] = kaggle_survey[\"regular_category_of_computer_vision_method\"].replace(\"\", \"None\")","491f4b7e":"kaggle_survey[\"regular_category_of_computer_vision_method_count\"]= kaggle_survey[\"regular_category_of_computer_vision_method\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","6aa43141":"kaggle_survey[\"regular_category_of_computer_vision_method_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_category_of_computer_vision_method\"] == 'None' else x[\"regular_category_of_computer_vision_method_count\"], axis = 1)","081336b5":"kaggle_survey[\"regular_nlp_method\"] = kaggle_survey.iloc[:,102:107].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","2b9a48de":"kaggle_survey[\"regular_nlp_method\"] = kaggle_survey[\"regular_nlp_method\"].replace(\"\", \"None\")","26d07dbe":"kaggle_survey[\"regular_nlp_method_count\"]= kaggle_survey[\"regular_nlp_method\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","92d68ecb":"kaggle_survey[\"regular_nlp_method_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_nlp_method\"] == 'None' else x[\"regular_nlp_method_count\"], axis = 1)","3d847f4c":"kaggle_survey[\"important_activities_at_work\"] = kaggle_survey.iloc[:,111:118].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","3b244d20":"kaggle_survey[\"important_activities_at_work\"] = kaggle_survey[\"important_activities_at_work\"].replace(\"\", \"None\")","750bbe88":"kaggle_survey[\"important_activities_at_work_count\"]= kaggle_survey[\"important_activities_at_work\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","8d717162":"kaggle_survey[\"important_activities_at_work_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"important_activities_at_work\"] == 'None' else x[\"important_activities_at_work_count\"], axis = 1)","199cc4f1":"kaggle_survey[\"regular_cloud_computing_platforms\"] = kaggle_survey.iloc[:,121:132].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","3937a51b":"kaggle_survey[\"regular_cloud_computing_platforms\"] = kaggle_survey[\"regular_cloud_computing_platforms\"].replace(\"\", \"None\")","d4c7a440":"kaggle_survey[\"regular_cloud_computing_platforms_count\"]= kaggle_survey[\"regular_cloud_computing_platforms\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","217b80eb":"kaggle_survey[\"regular_cloud_computing_platforms_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_cloud_computing_platforms\"] == 'None' else x[\"regular_cloud_computing_platforms_count\"], axis = 1)","244a1295":"kaggle_survey[\"regular_cloud_computing_products\"] = kaggle_survey.iloc[:,133:144].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","d4eef1dc":"kaggle_survey[\"regular_cloud_computing_products\"] = kaggle_survey[\"regular_cloud_computing_products\"].replace(\"\", \"None\")","03d4a18e":"kaggle_survey[\"regular_cloud_computing_products_count\"]= kaggle_survey[\"regular_cloud_computing_products\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","b3d76d2f":"kaggle_survey[\"regular_cloud_computing_products_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_cloud_computing_products\"] == 'None' else x[\"regular_cloud_computing_products_count\"], axis = 1)","28fb6d2b":"kaggle_survey[\"regular_ml_products\"] = kaggle_survey.iloc[:,145:155].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","820aba29":"kaggle_survey[\"regular_ml_products\"] = kaggle_survey[\"regular_ml_products\"].replace(\"\", \"None\")","7c9328dc":"kaggle_survey[\"regular_ml_products_count\"]= kaggle_survey[\"regular_ml_products\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","4e1fe465":"kaggle_survey[\"regular_ml_products_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_ml_products\"] == 'None' else x[\"regular_ml_products_count\"], axis = 1)","657beaaf":"kaggle_survey[\"regular_big_data_products\"] = kaggle_survey.iloc[:,156:173].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","3a6416b2":"kaggle_survey[\"regular_big_data_products\"] = kaggle_survey[\"regular_big_data_products\"].replace(\"\", \"None\")","15ec42e6":"kaggle_survey[\"regular_big_data_products_count\"]= kaggle_survey[\"regular_big_data_products\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","70b0f731":"kaggle_survey[\"regular_big_data_products_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_big_data_products\"] == 'None' else x[\"regular_big_data_products_count\"], axis = 1)","8783dff5":"kaggle_survey[\"regular_bi_tools\"] = kaggle_survey.iloc[:,175:189].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","82835c23":"kaggle_survey[\"regular_bi_tools\"] = kaggle_survey[\"regular_bi_tools\"].replace(\"\", \"None\")","93c46519":"kaggle_survey[\"regular_bi_tools_count\"]= kaggle_survey[\"regular_bi_tools\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","c64077d6":"kaggle_survey[\"regular_bi_tools_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_bi_tools\"] == 'None' else x[\"regular_bi_tools_count\"], axis = 1)","3773ccb8":"kaggle_survey[\"is_regular_automated_ml_tools\"] = kaggle_survey.iloc[:,191:198].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","5eeccb2c":"kaggle_survey[\"regular_automated_ml_tools\"] = kaggle_survey.iloc[:,199:210].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","6d7335e1":"kaggle_survey[\"regular_automated_ml_tools\"] = kaggle_survey[\"regular_automated_ml_tools\"].replace(\"\", \"None\")","369896f4":"kaggle_survey[\"regular_automated_ml_tools_count\"]= kaggle_survey[\"regular_automated_ml_tools\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","8d14c10b":"kaggle_survey[\"regular_automated_ml_tools_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"regular_automated_ml_tools\"] == 'None' else x[\"regular_automated_ml_tools_count\"], axis = 1)","e1e4a231":"kaggle_survey[\"tools_to_manage_ml_experiments\"] = kaggle_survey.iloc[:,211:221].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","cac5aba5":"kaggle_survey[\"tools_to_manage_ml_experiments\"] = kaggle_survey[\"tools_to_manage_ml_experiments\"].replace(\"\", \"None\")","9432db6b":"kaggle_survey[\"tools_to_manage_ml_experiments_count\"]= kaggle_survey[\"tools_to_manage_ml_experiments\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","197bcfb5":"kaggle_survey[\"tools_to_manage_ml_experiments_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"tools_to_manage_ml_experiments\"] == 'None' else x[\"tools_to_manage_ml_experiments_count\"], axis = 1)","96bb1a4e":"kaggle_survey[\"publicly_share_da_or_ml_app\"] = kaggle_survey.iloc[:,222:231].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","b966ab5a":"kaggle_survey[\"publicly_share_da_or_ml_app\"] = kaggle_survey[\"publicly_share_da_or_ml_app\"].replace(\"\", \"None\")","746f416b":"kaggle_survey[\"publicly_share_da_or_ml_app_count\"]= kaggle_survey[\"publicly_share_da_or_ml_app\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","3957fce7":"kaggle_survey[\"publicly_share_da_or_ml_app_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"publicly_share_da_or_ml_app\"] == 'None' else x[\"publicly_share_da_or_ml_app_count\"], axis = 1)","aa7c301b":"kaggle_survey[\"platform_begun_ds_course\"] = kaggle_survey.iloc[:,232:243].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","2467a1c5":"kaggle_survey[\"platform_begun_ds_course\"] = kaggle_survey[\"platform_begun_ds_course\"].replace(\"\", \"None\")","3b4342f8":"kaggle_survey[\"platform_begun_ds_course_count\"]= kaggle_survey[\"platform_begun_ds_course\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","18826653":"kaggle_survey[\"platform_begun_ds_course_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"platform_begun_ds_course\"] == 'None' else x[\"platform_begun_ds_course_count\"], axis = 1)","e6e3b53c":"kaggle_survey[\"favorite_media_for_ds_topic\"] = kaggle_survey.iloc[:,245:256].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","0f349216":"kaggle_survey[\"favorite_media_for_ds_topic\"] = kaggle_survey[\"favorite_media_for_ds_topic\"].replace(\"\", \"None\")","3be709e2":"kaggle_survey[\"favorite_media_for_ds_topic_count\"]= kaggle_survey[\"favorite_media_for_ds_topic\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","3fe0636d":"kaggle_survey[\"favorite_media_for_ds_topic_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"favorite_media_for_ds_topic\"] == 'None' else x[\"favorite_media_for_ds_topic_count\"], axis = 1)","0bf3a568":"kaggle_survey[\"computing_platform_to_learn_next_2_years\"] = kaggle_survey.iloc[:,257:268].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","a363a7d8":"kaggle_survey[\"computing_platform_to_learn_next_2_years\"] = kaggle_survey[\"computing_platform_to_learn_next_2_years\"].replace(\"\", \"None\")","a776a8ae":"kaggle_survey[\"computing_platform_to_learn_next_2_years_count\"]= kaggle_survey[\"computing_platform_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","c0ff3a2e":"kaggle_survey[\"computing_platform_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"computing_platform_to_learn_next_2_years\"] == 'None' else x[\"computing_platform_to_learn_next_2_years_count\"], axis = 1)","3e7e0fa2":"kaggle_survey[\"computing_product_to_learn_next_2_years\"] = kaggle_survey.iloc[:,269:280].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","0097cf6b":"kaggle_survey[\"computing_product_to_learn_next_2_years\"] = kaggle_survey[\"computing_product_to_learn_next_2_years\"].replace(\"\", \"None\")","aabce904":"kaggle_survey[\"computing_product_to_learn_next_2_years_count\"]= kaggle_survey[\"computing_product_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","fbacdeb1":"kaggle_survey[\"computing_product_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"computing_product_to_learn_next_2_years\"] == 'None' else x[\"computing_product_to_learn_next_2_years_count\"], axis = 1)","70e25db3":"kaggle_survey[\"ml_product_to_learn_next_2_years\"] = kaggle_survey.iloc[:,281:291].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","81c31469":"kaggle_survey[\"ml_product_to_learn_next_2_years\"] = kaggle_survey[\"ml_product_to_learn_next_2_years\"].replace(\"\", \"None\")","57564782":"kaggle_survey[\"ml_product_to_learn_next_2_years_count\"]= kaggle_survey[\"ml_product_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","e346d5d5":"kaggle_survey[\"ml_product_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"ml_product_to_learn_next_2_years\"] == 'None' else x[\"ml_product_to_learn_next_2_years_count\"], axis = 1)","4f53c6ec":"kaggle_survey[\"big_data_product_to_learn_next_2_years\"] = kaggle_survey.iloc[:,292:309].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","108825d6":"kaggle_survey[\"big_data_product_to_learn_next_2_years\"] = kaggle_survey[\"big_data_product_to_learn_next_2_years\"].replace(\"\", \"None\")","4910a7bf":"kaggle_survey[\"big_data_product_to_learn_next_2_years_count\"]= kaggle_survey[\"big_data_product_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","2c2aa330":"kaggle_survey[\"big_data_product_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"big_data_product_to_learn_next_2_years\"] == 'None' else x[\"big_data_product_to_learn_next_2_years_count\"], axis = 1)","0e594d50":"kaggle_survey[\"bi_tools_to_learn_next_2_years\"] = kaggle_survey.iloc[:,310:324].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","2842c609":"kaggle_survey[\"bi_tools_to_learn_next_2_years\"] = kaggle_survey[\"bi_tools_to_learn_next_2_years\"].replace(\"\", \"None\")","331cfb3d":"kaggle_survey[\"bi_tools_to_learn_next_2_years_count\"]= kaggle_survey[\"bi_tools_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","6812273b":"kaggle_survey[\"bi_tools_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"bi_tools_to_learn_next_2_years\"] == 'None' else x[\"bi_tools_to_learn_next_2_years_count\"], axis = 1)","a2ef838d":"kaggle_survey[\"category_automated_ml_tools_to_learn_next_2_years\"] = kaggle_survey.iloc[:,325:332].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","dda3a78a":"kaggle_survey[\"category_automated_ml_tools_to_learn_next_2_years\"] = kaggle_survey[\"category_automated_ml_tools_to_learn_next_2_years\"].replace(\"\", \"None\")","427decf2":"kaggle_survey[\"category_automated_ml_tools_to_learn_next_2_years_count\"]= kaggle_survey[\"category_automated_ml_tools_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","afb599ee":"kaggle_survey[\"category_automated_ml_tools_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"category_automated_ml_tools_to_learn_next_2_years\"] == 'None' else x[\"category_automated_ml_tools_to_learn_next_2_years_count\"], axis = 1)","562cb2fa":"kaggle_survey[\"specific_automated_ml_tools_to_learn_next_2_years\"] = kaggle_survey.iloc[:,333:344].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","6e2eeecb":"kaggle_survey[\"specific_automated_ml_tools_to_learn_next_2_years\"] = kaggle_survey[\"specific_automated_ml_tools_to_learn_next_2_years\"].replace(\"\", \"None\")","60e26256":"kaggle_survey[\"specific_automated_ml_tools_to_learn_next_2_years_count\"]= kaggle_survey[\"specific_automated_ml_tools_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","2beb8843":"kaggle_survey[\"specific_automated_ml_tools_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"specific_automated_ml_tools_to_learn_next_2_years\"] == 'None' else x[\"specific_automated_ml_tools_to_learn_next_2_years_count\"], axis = 1)","a5147f42":"kaggle_survey[\"mlexp_management_tool_to_learn_next_2_years\"] = kaggle_survey.iloc[:,345:356].apply(lambda x: ','.join(sorted(x.dropna())), axis=1)","466ea09d":"kaggle_survey[\"mlexp_management_tool_to_learn_next_2_years\"] = kaggle_survey[\"mlexp_management_tool_to_learn_next_2_years\"].replace(\"\", \"None\")","74234aa5":"kaggle_survey[\"mlexp_management_tool_to_learn_next_2_years_count\"]= kaggle_survey[\"mlexp_management_tool_to_learn_next_2_years\"].str.count(',').add(1).groupby(kaggle_survey.index).sum()","76835d3c":"kaggle_survey[\"mlexp_management_tool_to_learn_next_2_years_count\"] = kaggle_survey.apply(lambda x: 0 if x[\"mlexp_management_tool_to_learn_next_2_years\"] == 'None' else x[\"mlexp_management_tool_to_learn_next_2_years_count\"], axis = 1)","62b7fd68":"kaggle_survey_1 = kaggle_survey.rename({\"Duration (in seconds)\": 'duration_seconds', \"What is your age (# years)?\": \"age_group\", \"What is your gender? - Selected Choice\": \"gender\", \"In which country do you currently reside?\": \"residence\", \"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\": \"highest_formal_education\", \"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\": \"most_recent_job_role\", \"For how many years have you been writing code and\/or programming?\": \"years_of_writing_code\", \"What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice\": \"programing_language_recommendation\",\"What type of computing platform do you use most often for your data science projects? - Selected Choice\": \"type_of_computing_platform_for_ds_projects\",\"Approximately how many times have you used a TPU (tensor processing unit)?\": \"times_of_tpu_usage\", \"For how many years have you used machine learning methods?\": \"years_of_using_ml_methods\", \"What is the size of the company where you are employed?\": \"size_of_company_employment\", \"Approximately how many individuals are responsible for data science workloads at your place of business?\": \"no_of_people_for_ds_workloads\",\"Does your current employer incorporate machine learning methods into their business?\": \"incorporation_of_ml_by_employer\", \"What is your current yearly compensation (approximate $USD)?\": \"current_yearly_compensation_usd\", \"Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?\": \"money_spent_at_home_for_ml_usd\", \"Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice\": \"big_data_product_used_often\", \"Which of the following business intelligence tools do you use most often? - Selected Choice\": \"bi_tools_used_most_often\", \"What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice\": \"primary_tools_used_to_analyze\"}, axis=1)","c1e46b8f":"kaggle_survey_1[\"highest_formal_education\"] = kaggle_survey_1[\"highest_formal_education\"].fillna(\"None\")","9210b194":"kaggle_survey_1[\"most_recent_job_role\"] = kaggle_survey_1[\"most_recent_job_role\"].fillna(\"None\")","3411fef3":"kaggle_survey_1[\"years_of_writing_code\"] = kaggle_survey_1[\"years_of_writing_code\"].fillna(\"None\")","4347aa6e":"kaggle_survey_1[\"programing_language_recommendation\"] = kaggle_survey_1[\"programing_language_recommendation\"].fillna(\"None\")","97299dd1":"kaggle_survey_1[\"type_of_computing_platform_for_ds_projects\"] = kaggle_survey_1[\"type_of_computing_platform_for_ds_projects\"].fillna(\"None\")","8df42557":"kaggle_survey_1[\"times_of_tpu_usage\"] = kaggle_survey_1[\"times_of_tpu_usage\"].fillna(\"None\")","523b3a3d":"kaggle_survey_1[\"years_of_using_ml_methods\"] = kaggle_survey_1[\"years_of_using_ml_methods\"].fillna(\"None\")","31bb6b9e":"kaggle_survey_1[\"size_of_company_employment\"] = kaggle_survey_1[\"size_of_company_employment\"].fillna(\"None\")","40e2ac13":"kaggle_survey_1[\"no_of_people_for_ds_workloads\"] = kaggle_survey_1[\"no_of_people_for_ds_workloads\"].fillna(\"None\")","065ba884":"kaggle_survey_1[\"incorporation_of_ml_by_employer\"] = kaggle_survey_1[\"incorporation_of_ml_by_employer\"].fillna(\"None\")","b6712777":"kaggle_survey_1[\"current_yearly_compensation_usd\"] = kaggle_survey_1[\"current_yearly_compensation_usd\"].fillna(\"None\")","ddd36b2d":"kaggle_survey_1[\"money_spent_at_home_for_ml_usd\"] = kaggle_survey_1[\"money_spent_at_home_for_ml_usd\"].fillna(\"None\")","96fd4c03":"kaggle_survey_1[\"big_data_product_used_often\"] = kaggle_survey_1[\"big_data_product_used_often\"].fillna(\"None\")","27547cf4":"kaggle_survey_1[\"bi_tools_used_most_often\"] = kaggle_survey_1[\"bi_tools_used_most_often\"].fillna(\"None\")","1a8006ad":"kaggle_survey_1[\"primary_tools_used_to_analyze\"] = kaggle_survey_1[\"primary_tools_used_to_analyze\"].fillna(\"None\")","d8728e2d":"kaggle_survey_1[\"duration_hours\"] = kaggle_survey_1[\"duration_seconds\"]\/60\nkaggle_survey_1[\"duration_hours\"] = kaggle_survey_1[\"duration_hours\"].round(decimals=2)","a4b40bf0":"def new(x):\n    if (x[\"duration_hours\"]> 0) and (x[\"duration_hours\"] <= 5.99):\n        return \"0-5.99\"\n    elif (x[\"duration_hours\"]> 6) and (x[\"duration_hours\"] <= 10.99):\n        return \"6-10.99\"\n    elif (x[\"duration_hours\"]> 11) and (x[\"duration_hours\"] <= 15.99):\n        return \"11-15.99\"\n    elif (x[\"duration_hours\"]> 16) and (x[\"duration_hours\"] <= 20.99):\n        return \"16-20.99\"\n    elif (x[\"duration_hours\"]> 21) and (x[\"duration_hours\"] <= 25.99):\n        return \"21-25.99\"\n    elif (x[\"duration_hours\"]> 25) and (x[\"duration_hours\"] <= 30.99):\n        return \"26-30.99\"\n    elif (x[\"duration_hours\"]> 30) and (x[\"duration_hours\"] <= 35.99):\n        return \"31-35.99\"\n    elif (x[\"duration_hours\"]> 35) and (x[\"duration_hours\"] <= 40.99):\n        return \"36-40.99\"\n    elif (x[\"duration_hours\"]> 40.99):\n        return \">40.99\"\nkaggle_survey_1 = kaggle_survey_1.assign(duration_hours_group=kaggle_survey_1.apply(new, axis=1))","242ab4ce":"country_data_1.columns","71d7b29b":"kaggle_survey_1 = pd.merge(kaggle_survey_1, country_data_1, on= 'residence')","9ef1519a":"kaggle_survey_1.head()","4afca0da":"def generateSankey(df,cat_cols=[],value_cols='',title='Sankey Diagram'):\n    colorPalette = [\"#5858CA\",\"#0C5246\",\"#A11C5E\",\"#B05C03\",\"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n    labelList = []\n    colorNumList = []\n    for catCol in cat_cols:\n        labelListTemp =  list(set(df[catCol].values))\n        colorNumList.append(len(labelListTemp))\n        labelList = labelList + labelListTemp\n        \n    labelList = list(dict.fromkeys(labelList))\n    \n    colorList = []\n    for idx, colorNum in enumerate(colorNumList):\n        colorList = colorList + [colorPalette[idx]]*colorNum\n        \n    for i in range(len(cat_cols)-1):\n        if i==0:\n            startendDf = df[[cat_cols[i],cat_cols[i+1],value_cols]]\n            startendDf.columns = ['start','end','count']\n        else:\n            tempDf = df[[cat_cols[i],cat_cols[i+1],value_cols]]\n            tempDf.columns = ['start','end','count']\n            startendDf = pd.concat([startendDf,tempDf])\n        startendDf = startendDf.groupby(['start','end']).agg({'count':'sum'}).reset_index()\n        \n    startendDf['startID'] = startendDf['start'].apply(lambda x: labelList.index(x))\n    startendDf['endID'] = startendDf['end'].apply(lambda x: labelList.index(x))\n    \n    data = dict(\n        type='sankey',\n        orientation = \"h\",\n        valueformat = \".0f\",\n        node = dict(\n          pad = 10,\n          thickness = 10,\n          line = dict(\n            color = \"black\",\n            width = 1\n          ),\n          label = labelList,\n          color = colorList\n        ),\n        link = dict(\n          source = startendDf['startID'],\n          target = startendDf['endID'],\n          value = startendDf['count']\n        )\n      )\n    \n    layout =  dict(\n        title = title,\n        height = 1200,\n        width = 1000,\n        font = dict(\n          size = 10\n        )\n    )\n       \n    fig = dict(data=[data], layout=layout)\n    return fig","a35d59a7":"sankey = kaggle_survey_1.groupby([\"age_group\",\"gender\",\"highest_formal_education\",\"most_recent_job_role\",\"years_of_writing_code\"]).size().rename_axis([\"Age Group\",\"Gender\",\"Highest Education\",\"Most Recent Job Role\", \"Years of Writing Code\"]).reset_index(name=\"Count of Survey Taker\")","0c6b9835":"fig = generateSankey(sankey,cat_cols=[\"Gender\",\"Age Group\",\"Most Recent Job Role\", \"Highest Education\",\"Years of Writing Code\"],value_cols=\"Count of Survey Taker\",title='General Behaviour of Survey Participators')\niplot(fig, validate=False)","4ed3bfb0":"hours_group = kaggle_survey_1[\"duration_hours_group\"].value_counts(normalize=True).rename_axis(\"Duration in Hours\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 10)\nsns.barplot(x=\"Duration in Hours\", y=\"Count of Survey Taker\", data = hours_group,palette=\"Blues_d\")\nplt.show()\n","d9b19ae5":"explode = (0,0,0,0.1,0,0,0,0,0) \ncolors = ['#001CF0','#0071C6','#2373E6', '#A00019', '#0D95E9', '#008DB8', '#00AAAA',\n          '#00C69C', '#00E28E', '#00FF80', ]\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\nplt.pie(hours_group[\"Count of Survey Taker\"],explode=explode,colors=colors,autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title('Percentage of Users for Each Duration in Hours')\nplt.axis('equal')\nplt.tight_layout()\nplt.legend(labels= hours_group[\"Duration in Hours\"], loc=\"best\")\nplt.show()","9fce2d07":"hr_gen_group = kaggle_survey_1.groupby([\"duration_hours_group\",\"gender\"]).size().rename_axis([\"Duration in Hours\", \"Gender\"]).reset_index(name=\"Count of Survey Taker\")\na = hr_gen_group.groupby(\"Duration in Hours\")[\"Count of Survey Taker\"].transform('sum')\nhr_gen_group[\"Count of Survey Taker\"] = hr_gen_group[\"Count of Survey Taker\"].div(a)\nsort_list = hr_gen_group.groupby(\"Duration in Hours\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#C90909\",\"#666666\",\"#388B15\",\"#F0940B\",\n          \"#0405BB\", ]\n(hr_gen_group.pivot(index= \"Gender\", columns= \"Duration in Hours\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(14,10),color=colors)\n)","672eab58":"age_group = kaggle_survey_1[\"age_group\"].value_counts(normalize=True).rename_axis(\"Age Group\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 10)\nsns.barplot(x=\"Count of Survey Taker\", y=\"Age Group\", data = age_group,palette=\"Greens_d\")\nplt.show()","f61a6ced":"explode = (0,0,0,0,0,0,0.25,0.2,0.15,0.1,0.05) \ncolors = ['#398717','#479F21','#3AAE6C', '#57C786', '#57C7A4', '#00AAAA', '#D28792',\n          '#C1737F', '#B6626F','#B84355','#A00019']\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\nplt.pie(age_group[\"Count of Survey Taker\"],explode=explode,colors=colors,autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title('Percentage of Users from Each Age Group')\nplt.axis('equal')\nplt.tight_layout()\nplt.legend(labels= age_group[\"Age Group\"], loc=\"best\")\nplt.show()","fa587f74":"age_gen_group = kaggle_survey_1.groupby([\"age_group\",\"gender\"]).size().rename_axis([\"Age Group\", \"Gender\"]).reset_index(name=\"Count of Survey Taker\")\na = age_gen_group.groupby(\"Age Group\")[\"Count of Survey Taker\"].transform('sum')\nage_gen_group[\"Count of Survey Taker\"] = age_gen_group[\"Count of Survey Taker\"].div(a)\nsort_list = age_gen_group.groupby(\"Age Group\").sum().sort_values(\"Count of Survey Taker\", ascending= True).index\ncolors = [\"#0405BB\",\"#666666\",\"#388B15\",\"#F0940B\",\n          \"#C90909\", ]\n(age_gen_group.pivot(index= \"Gender\", columns= \"Age Group\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='barh',stacked=True, figsize=(20,10),color=colors)\n)\n\n","0b862cb7":"region = kaggle_survey_1[\"region\"].value_counts(normalize=True).rename_axis(\"Region\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.barplot(x=\"Region\", y=\"Count of Survey Taker\", data = region,palette=\"Reds_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","782f3c6c":"region = kaggle_survey_1[\"residence\"].value_counts(normalize=True).rename_axis(\"Residence\").reset_index(name=\"Count of Survey Taker\")\nlist_countries = region['Residence'].unique().tolist()\nd_country_code = {}  # To hold the country names and their ISO\nfor country in list_countries:\n    try:\n        country_data = pycountry.countries.search_fuzzy(country)\n        country_code = country_data[0].alpha_3\n        d_country_code.update({country: country_code})\n    except:\n        print('could not add ISO 3 code for ->', country)\n        d_country_code.update({country: ' '})\nfor k, v in d_country_code.items():\n    region.loc[(region.Residence == k), 'iso_alpha'] = v\nfig = px.choropleth(data_frame = region, \n                    locations= \"iso_alpha\",\n                    color= \"Count of Survey Taker\",\n                    hover_name= \"Residence\",\n                    color_continuous_scale='RdBu',\n                   )\n\nfig.show()\n\n","8de1a207":"residence = kaggle_survey_1[\"residence\"].value_counts(normalize=True)[:20].rename_axis(\"Top Residence\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.barplot(x=\"Top Residence\", y=\"Count of Survey Taker\", data = residence,palette=\"Reds_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","1a2d9b53":"residence = kaggle_survey_1[\"residence\"].value_counts(normalize=True)[20:].rename_axis(\"Last Residence\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.barplot(x=\"Last Residence\", y=\"Count of Survey Taker\", data = residence,palette=\"Reds_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","17be7924":"reg_hrs_group = kaggle_survey_1.groupby([\"region\",\"duration_hours_group\"]).size().rename_axis([\"Region\", \"Duration in Hours\"]).reset_index(name=\"Count of Survey Taker\")\na = reg_hrs_group.groupby(\"Region\")[\"Count of Survey Taker\"].transform('sum')\nreg_hrs_group[\"Count of Survey Taker\"] = reg_hrs_group[\"Count of Survey Taker\"].div(a)\nsort_list = reg_hrs_group.groupby(\"Region\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#0C5246\",\"#A11C5E\",\"#B05C03\",\"#5858CA\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", ]\n(reg_hrs_group.pivot(index= \"Duration in Hours\", columns= \"Region\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","f845e411":"reg_age_group = kaggle_survey_1.groupby([\"region\",\"age_group\"]).size().rename_axis([\"Region\", \"Age Group\"]).reset_index(name=\"Count of Survey Taker\")\na = reg_age_group.groupby(\"Region\")[\"Count of Survey Taker\"].transform('sum')\nreg_age_group[\"Count of Survey Taker\"] = reg_age_group[\"Count of Survey Taker\"].div(a)\nsort_list = reg_age_group.groupby(\"Region\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#0C5246\",\"#A11C5E\",\"#B05C03\",\"#5858CA\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n(reg_age_group.pivot(index= \"Age Group\", columns= \"Region\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","776a8131":"gender = kaggle_survey_1[\"gender\"].value_counts(normalize=True).rename_axis(\"Gender\").reset_index(name=\"Count of Survey Taker\")\nexplode = (0,0.25,0.2,0.15,0.1) \ncolors = ['#2373E6','#C1737F', '#B6626F','#B84355','#A00019', ]\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\nplt.pie(gender[\"Count of Survey Taker\"],explode=explode,colors=colors,autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title('Percentage of Users for Each Gender')\nplt.axis('equal')\nplt.tight_layout()\nplt.legend(labels= gender[\"Gender\"], loc=\"best\")\nplt.show()","3f24a759":"reg_gen_group = kaggle_survey_1.groupby([\"region\",\"gender\"]).size().rename_axis([\"Region\", \"Gender\"]).reset_index(name=\"Count of Survey Taker\")\na = reg_gen_group.groupby(\"Region\")[\"Count of Survey Taker\"].transform('sum')\nreg_gen_group[\"Count of Survey Taker\"] = reg_gen_group[\"Count of Survey Taker\"].div(a)\nsort_list = reg_gen_group.groupby(\"Region\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#0450BB\",\"#C90909\",\"#388B15\",\"#F0940B\",\n          \"#666666\", ]\n(reg_gen_group.pivot(index= \"Gender\", columns= \"Region\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)\n\n\n","ed8ceb0c":"hours_group = kaggle_survey_1[\"highest_formal_education\"].value_counts(normalize=True).rename_axis(\"Highest Formal Education\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 10)\nsns.barplot(x=\"Highest Formal Education\", y=\"Count of Survey Taker\", data = hours_group,palette=\"Greens_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","406e8288":"edu_gen_group = kaggle_survey_1.groupby([\"highest_formal_education\",\"gender\"]).size().rename_axis([\"Highest Formal Education\", \"Gender\"]).reset_index(name=\"Count of Survey Taker\")\na = edu_gen_group.groupby(\"Highest Formal Education\")[\"Count of Survey Taker\"].transform('sum')\nedu_gen_group[\"Count of Survey Taker\"] = edu_gen_group[\"Count of Survey Taker\"].div(a)\nsort_list = edu_gen_group.groupby(\"Highest Formal Education\").sum().sort_values(\"Count of Survey Taker\", ascending= True).index\ncolors = [\"#0450BB\",\"#C90909\",\"#388B15\",\"#F0940B\",\n          \"#666666\", ]\n(edu_gen_group.pivot(index= \"Gender\", columns= \"Highest Formal Education\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='barh',stacked=True, figsize=(20,10),color=colors)\n)","99f9b4a7":"reg_edu_group = kaggle_survey_1.groupby([\"region\",\"highest_formal_education\"]).size().rename_axis([\"Region\", \"Highest Formal Education\"]).reset_index(name=\"Count of Survey Taker\")\na = reg_edu_group.groupby(\"Region\")[\"Count of Survey Taker\"].transform('sum')\nreg_edu_group[\"Count of Survey Taker\"] = reg_edu_group[\"Count of Survey Taker\"].div(a)\nsort_list = reg_edu_group.groupby(\"Region\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#5858CA\",\"#0C5246\",\"#A11C5E\",\"#B05C03\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n(reg_edu_group.pivot(index= \"Highest Formal Education\", columns= \"Region\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","b931efc8":"edu_age_group = kaggle_survey_1.groupby([\"highest_formal_education\",\"age_group\"]).size().rename_axis([\"Highest Formal Education\", \"Age Group\"]).reset_index(name=\"Count of Survey Taker\")\na = edu_age_group.groupby(\"Highest Formal Education\")[\"Count of Survey Taker\"].transform('sum')\nedu_age_group[\"Count of Survey Taker\"] = edu_age_group[\"Count of Survey Taker\"].div(a)\nsort_list = edu_age_group.groupby(\"Highest Formal Education\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#0C5246\",\"#A11C5E\",\"#B05C03\",\"#5858CA\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n(edu_age_group.pivot(index= \"Age Group\", columns= \"Highest Formal Education\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","6a7db588":"job = kaggle_survey_1[\"most_recent_job_role\"].value_counts(normalize=True).rename_axis(\"Most Recent Job Role\").reset_index(name=\"Count of Survey Taker\")\nexplode = (0.05,0,0,0.1,0,0,0,0,0,0.15,0.2,0,0.05,0.1) \ncolors = ['#A00019','#398717','#479F21','#B84355','#3AAE6C', '#57C786', '#57C7A4', '#00AAAA', '#3BBFBF','#D28792',\n          '#C1737F','#66C3C3','#3CCACA','#67D8D8']\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\nplt.pie(job[\"Count of Survey Taker\"],explode=explode,colors=colors,autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title('Percentage of Users for Each Job Tile')\nplt.axis('equal')\nplt.tight_layout()\nplt.legend(labels= job[\"Most Recent Job Role\"], loc=\"best\")\nplt.show()","265579e6":"job_age_group = kaggle_survey_1.groupby([\"most_recent_job_role\",\"age_group\"]).size().rename_axis([\"Most Recent Job Role\", \"Age Group\"]).reset_index(name=\"Count of Survey Taker\")\na = job_age_group.groupby(\"Most Recent Job Role\")[\"Count of Survey Taker\"].transform('sum')\njob_age_group[\"Count of Survey Taker\"] = job_age_group[\"Count of Survey Taker\"].div(a)\nsort_list = job_age_group.groupby(\"Most Recent Job Role\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#0C5246\",\"#A11C5E\",\"#B05C03\",\"#5858CA\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n(job_age_group.pivot(index= \"Age Group\", columns= \"Most Recent Job Role\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","7b19e63d":"reg_job_group = kaggle_survey_1.groupby([\"region\",\"most_recent_job_role\"]).size().rename_axis([\"Region\", \"Most Recent Job Role\"]).reset_index(name=\"Count of Survey Taker\")\na = reg_job_group.groupby(\"Region\")[\"Count of Survey Taker\"].transform('sum')\nreg_job_group[\"Count of Survey Taker\"] = reg_job_group[\"Count of Survey Taker\"].div(a)\nsort_list = reg_job_group.groupby(\"Region\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#5858CA\",\"#0C5246\",\"#A11C5E\",\"#B05C03\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n(reg_job_group.pivot(index= \"Most Recent Job Role\", columns= \"Region\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","8de4127e":"job_gen_group = kaggle_survey_1.groupby([\"most_recent_job_role\",\"gender\"]).size().rename_axis([\"Most Recent Job Role\", \"Gender\"]).reset_index(name=\"Count of Survey Taker\")\na = job_gen_group.groupby(\"Most Recent Job Role\")[\"Count of Survey Taker\"].transform('sum')\njob_gen_group[\"Count of Survey Taker\"] = job_gen_group[\"Count of Survey Taker\"].div(a)\nsort_list = job_gen_group.groupby(\"Most Recent Job Role\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#C90909\",\"#666666\",\"#388B15\",\"#F0940B\",\n          \"#0405BB\", ]\n(job_gen_group.pivot(index= \"Gender\", columns= \"Most Recent Job Role\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='barh',stacked=True, figsize=(14,10),color=colors)\n)","f4e24b98":"prog_job_group = kaggle_survey_1.groupby([\"years_of_writing_code\",\"most_recent_job_role\"]).size().rename_axis([\"Years of Writing Code\", \"Most Recent Job Role\"]).reset_index(name=\"Count of Survey Taker\")\na = prog_job_group.groupby(\"Years of Writing Code\")[\"Count of Survey Taker\"].transform('sum')\nprog_job_group[\"Count of Survey Taker\"] = prog_job_group[\"Count of Survey Taker\"].div(a)\nsort_list = prog_job_group.groupby(\"Years of Writing Code\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#5858CA\",\"#0C5246\",\"#A11C5E\",\"#B05C03\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n(prog_job_group.pivot(index= \"Most Recent Job Role\", columns= \"Years of Writing Code\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","6bf26c98":"prog_gen_group = kaggle_survey_1.groupby([\"years_of_writing_code\",\"gender\"]).size().rename_axis([\"Years of Writing Code\", \"Gender\"]).reset_index(name=\"Count of Survey Taker\")\na = prog_gen_group.groupby(\"Years of Writing Code\")[\"Count of Survey Taker\"].transform('sum')\nprog_gen_group[\"Count of Survey Taker\"] = prog_gen_group[\"Count of Survey Taker\"].div(a)\nsort_list = prog_gen_group.groupby(\"Years of Writing Code\").sum().sort_values(\"Count of Survey Taker\", ascending= False).index\ncolors = [\"#5858CA\",\"#0C5246\",\"#A11C5E\",\"#B05C03\",\n          \"#9619DF\",\"#C13636\",\"#666666\",\"#CE9B00\",\"#7DB4C4\", \"#134F5C\", \"#A011E5\"]\n(prog_gen_group.pivot(index= \"Gender\", columns= \"Years of Writing Code\", values= \"Count of Survey Taker\")\n   .reindex(sort_list, axis='columns') \n   .T\n   .plot(kind='bar',stacked=True, figsize=(20,10),color=colors)\n)","c8271b1c":"regular_prog = kaggle_survey_1[\"regular_programming_language\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Programming Language\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 10)\nsns.barplot(x=\"Top Regular Programming Language\", y=\"Count of Survey Taker\", data = regular_prog,palette=\"Oranges_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","91ebcf49":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"regular_programming_language_count\"], bins=20, color=\"Purple\")\n","6ff13819":"prog_recom = kaggle_survey_1[\"programing_language_recommendation\"].value_counts(normalize=True).rename_axis(\"Programming Language Recommendation\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 10)\nsns.barplot(y=\"Programming Language Recommendation\", x=\"Count of Survey Taker\", data = prog_recom,palette=\"RdBu\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","c157a23e":"regular_ide = kaggle_survey_1[\"regular_ide\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Used IDE\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x=\"Top Regular Used IDE\", y=\"Count of Survey Taker\", data = regular_ide,palette=\"Blues_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","171bb2ad":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"regular_ide_count\"], bins=20, color=\"lightcoral\")","9b6eb147":"regular_notebook = kaggle_survey_1[\"regular_notebook\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Used Notebook\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x=\"Top Regular Used Notebook\", y=\"Count of Survey Taker\", data = regular_notebook, palette=\"Purples_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","e229991a":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"regular_notebook_count\"], bins=20, color=\"#B66F49\")","87458490":"type_comp_plat = kaggle_survey_1[\"type_of_computing_platform_for_ds_projects\"].value_counts(normalize=True).rename_axis(\"Type of Computing Platform for DS Projects\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 14)\nsns.barplot(y=\"Type of Computing Platform for DS Projects\", x=\"Count of Survey Taker\", data = type_comp_plat,palette=\"GnBu\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","98ad2417":"spec_hardw = kaggle_survey_1[\"specialized_hardware\"].value_counts(normalize=True).rename_axis(\"Top Regular Specialized Hardware\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x=\"Top Regular Specialized Hardware\", y=\"Count of Survey Taker\", data = spec_hardw, palette=\"PiYG\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","06822fa5":"tpu_usage = kaggle_survey_1[\"times_of_tpu_usage\"].value_counts(normalize=True).rename_axis(\"Times of TPU Usage\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 14)\nsns.barplot(y=\"Times of TPU Usage\", x=\"Count of Survey Taker\", data = tpu_usage,palette=\"RdGy\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","f832b6e7":"reg_data_vis_lib = kaggle_survey_1[\"regular_data_visualization_library\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Data Visualization Library\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x=\"Top Regular Data Visualization Library\", y=\"Count of Survey Taker\", data = reg_data_vis_lib, palette=\"BrBG\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","42e3ed76":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"regular_data_visualization_library_count\"], bins=20, color=\"#764A19\")","0e27a63d":"yr_ml_lr = kaggle_survey_1[\"years_of_using_ml_methods\"].value_counts(normalize=True).rename_axis(\"Years of Using Machine Learning\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 14)\nsns.barplot(y=\"Years of Using Machine Learning\", x=\"Count of Survey Taker\", data = yr_ml_lr,palette=\"RdBu\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","f0bf64c5":"reg_ml_fw = kaggle_survey_1[\"regular_ml_framework\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Used ML Framework\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x=\"Top Regular Used ML Framework\", y=\"Count of Survey Taker\", data = reg_ml_fw, palette=\"PRGn\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","6a512b0c":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"regular_ml_framework_count\"], bins=20, color=\"#674EA7\")","d3a55318":"reg_ml_al = kaggle_survey_1[\"regular_ml_algorithm\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Used ML Algorithm\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x= \"Top Regular Used ML Algorithm\", y=\"Count of Survey Taker\", data = reg_ml_al, palette=\"RdYlBu\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","16f607f5":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"regular_ml_algorithm_count\"], bins=20, color=\"#CC0000\")","6c91cfe6":"siz_emp_com = kaggle_survey_1[\"size_of_company_employment\"].value_counts(normalize=True).rename_axis(\"Employee Number of the Company\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 14)\nsns.barplot(y=\"Employee Number of the Company\", x=\"Count of Survey Taker\", data = siz_emp_com,palette=\"PuOr\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","a60d9a44":"workl_emp_com = kaggle_survey_1[\"no_of_people_for_ds_workloads\"].value_counts(normalize=True).rename_axis(\"Employee Number for DS Workload\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 14)\nsns.barplot(y=\"Employee Number for DS Workload\", x=\"Count of Survey Taker\", data = workl_emp_com,palette=\"Set2\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","549b7991":"ml_by_com = kaggle_survey_1[\"incorporation_of_ml_by_employer\"].value_counts(normalize=True).rename_axis(\"ML Used By the Company\").reset_index(name=\"Count of Survey Taker\")\n\n\nfig = px.treemap(ml_by_com, path=[\"ML Used By the Company\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='RdBu')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","71c8e51a":"ml_by_com = kaggle_survey_1[\"important_activities_at_work\"].value_counts(normalize=True).rename_axis(\"Important Activities at the Work\").reset_index(name=\"Count of Survey Taker\")\n\n\nfig = px.treemap(ml_by_com, path=[\"Important Activities at the Work\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='PRGn')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","fd9d3bfc":"curr_year_compen_usd = kaggle_survey_1[\"current_yearly_compensation_usd\"].value_counts(normalize=True).rename_axis(\"Current Yearly Compensation USD\").reset_index(name=\"Count of Survey Taker\")\n\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(16, 20)\nsns.barplot(y= \"Current Yearly Compensation USD\", x=\"Count of Survey Taker\", data = curr_year_compen_usd, palette=\"RdYlBu\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","7768a391":"money_spent_ml_usd = kaggle_survey_1[\"money_spent_at_home_for_ml_usd\"].value_counts(normalize=True).rename_axis(\"Money Spent At Home for ML USD\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(14, 14)\nsns.barplot(x= \"Money Spent At Home for ML USD\", y=\"Count of Survey Taker\", data = money_spent_ml_usd, palette=\"BrBG\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()\n","3cc88143":"reg_cl_comp_ = kaggle_survey_1[\"regular_cloud_computing_platforms\"].value_counts(normalize=True).rename_axis(\"Regular Cloud Computing Platform\").reset_index(name=\"Count of Survey Taker\")\nfig = px.treemap(reg_cl_comp_, path=[\"Regular Cloud Computing Platform\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='RdGy')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","e3d1090e":"reg_cl_comp_prd = kaggle_survey_1[\"regular_cloud_computing_products\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Cloud Computing Platform\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(y=\"Top Regular Cloud Computing Platform\", x=\"Count of Survey Taker\", data = reg_cl_comp_prd, palette=\"PRGn\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","4e281824":"reg_ml_prd = kaggle_survey_1[\"regular_ml_products\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular ML Products\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(y=\"Top Regular ML Products\", x=\"Count of Survey Taker\", data = reg_ml_prd, palette=\"Spectral\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","5f1e4d31":"reg_big_data_prd = kaggle_survey_1[\"regular_big_data_products\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Big Data Products\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(y=\"Top Regular Big Data Products\", x=\"Count of Survey Taker\", data = reg_big_data_prd, palette=\"Greens_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","bb06e732":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.countplot(kaggle_survey_1[\"regular_big_data_products_count\"], color=\"#717C18\")","5837884d":"prod_of = kaggle_survey_1[\"big_data_product_used_often\"].value_counts(normalize=True).rename_axis(\"Big Data Product Used Often\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(y=\"Big Data Product Used Often\", x=\"Count of Survey Taker\", data = prod_of, palette=\"PiYG\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","2c6dee70":"reg_bi_tools = kaggle_survey_1[\"regular_bi_tools\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular BI Tools\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x=\"Top Regular BI Tools\", y=\"Count of Survey Taker\", data = reg_bi_tools, palette=\"Blues_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","5d2bebea":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.countplot(kaggle_survey_1[\"regular_bi_tools_count\"], color=\"#630B85\")","ab2a5b6a":"bi_prod_of = kaggle_survey_1[\"bi_tools_used_most_often\"].value_counts(normalize=True).rename_axis(\"BI Product Used Often\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(y=\"BI Product Used Often\", x=\"Count of Survey Taker\", data = bi_prod_of, palette=\"PuOr\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","df21a947":"reg_auto_ml_tools = kaggle_survey_1[\"regular_automated_ml_tools\"].value_counts(normalize=True)[:20].rename_axis(\"Top Regular Automated ML Tools\").reset_index(name=\"Count of Survey Taker\")\nfig = px.treemap(reg_auto_ml_tools, path=[\"Top Regular Automated ML Tools\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='Spectral')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","368e681e":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.countplot(kaggle_survey_1[\"regular_automated_ml_tools_count\"], color=\"#612523\")","455c696a":"reg_auto_ml_tools = kaggle_survey_1[\"tools_to_manage_ml_experiments\"].value_counts(normalize=True)[:20].rename_axis(\"Top Tools To Manage ML Experience\").reset_index(name=\"Count of Survey Taker\")\nfig = px.treemap(reg_auto_ml_tools, path=[\"Top Tools To Manage ML Experience\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='PuOr')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","36474ba5":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"tools_to_manage_ml_experiments_count\"], bins=20, color=\"#302061\")","7cd72b30":"pub_da_ml = kaggle_survey_1[\"publicly_share_da_or_ml_app\"].value_counts(normalize=True)[:20].rename_axis(\"Top Publicly Share DA or ML App\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x= \"Top Publicly Share DA or ML App\", y=\"Count of Survey Taker\", data = pub_da_ml, palette=\"RdYlBu\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","2b47d3db":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"publicly_share_da_or_ml_app_count\"], bins=20, color=\"#660000\")","990a70bd":"pl_beg_ds_cr = kaggle_survey_1[\"platform_begun_ds_course\"].value_counts(normalize=True)[:20].rename_axis(\"Top Platform Begun DS Course\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(x= \"Top Platform Begun DS Course\", y=\"Count of Survey Taker\", data = pl_beg_ds_cr, palette=\"BrBG\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","18ff8b45":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"platform_begun_ds_course_count\"], bins=20, color=\"#148530\")","09c2742e":"prim_tool = kaggle_survey_1[\"primary_tools_used_to_analyze\"].value_counts(normalize=True).rename_axis(\"Primary Tool to Analyze\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(y=\"Primary Tool to Analyze\", x=\"Count of Survey Taker\", data = prim_tool, palette=\"RdYlGn\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","9573190b":"fav_media_for_ds = kaggle_survey_1[\"favorite_media_for_ds_topic\"].value_counts(normalize=True)[:20].rename_axis(\"Top Favourite Media for DS Topic\").reset_index(name=\"Count of Survey Taker\")\nfig = px.treemap(fav_media_for_ds, path=[\"Top Favourite Media for DS Topic\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='BrBG')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","99f858de":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"favorite_media_for_ds_topic_count\"], bins=20, color=\"#444444\")","1f8b7e09":"com_plat_2_yrs = kaggle_survey_1[\"computing_platform_to_learn_next_2_years\"].value_counts(normalize=True)[:20].rename_axis(\"Top Cloud Platform to Learn Next 2 Years\").reset_index(name=\"Count of Survey Taker\")\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 20)\nsns.barplot(y= \"Top Cloud Platform to Learn Next 2 Years\", x=\"Count of Survey Taker\", data = com_plat_2_yrs, palette=\"Reds_d\")\nplt.xticks(rotation=30, horizontalalignment=\"right\")\nplt.show()","d091282e":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 14)\nsns.distplot(kaggle_survey_1[\"favorite_media_for_ds_topic_count\"], bins=20, color=\"#8E7CC3\")","51fd9504":"com_prod_2_yrs = kaggle_survey_1[\"computing_product_to_learn_next_2_years\"].value_counts(normalize=True)[:20].rename_axis(\"Top Computing Product to Learn Next 2 Years\").reset_index(name=\"Count of Survey Taker\")\n\nfig = px.treemap(com_prod_2_yrs, path=[\"Top Computing Product to Learn Next 2 Years\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='RdGy')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","768caec0":"ml_product_2_yrs = kaggle_survey_1[\"ml_product_to_learn_next_2_years\"].value_counts(normalize=True)[:20].rename_axis(\"Top ML Products to Learn Next 2 Years\").reset_index(name=\"Count of Survey Taker\")\n\nfig = px.treemap(ml_product_2_yrs, path=[\"Top ML Products to Learn Next 2 Years\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='RdBu')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","9799445b":"big_data_product_2_yrs = kaggle_survey_1[\"big_data_product_to_learn_next_2_years\"].value_counts(normalize=True)[:20].rename_axis(\"Top Big Data Products to Learn Next 2 Years\").reset_index(name=\"Count of Survey Taker\")\n\nfig = px.treemap(big_data_product_2_yrs, path=[\"Top Big Data Products to Learn Next 2 Years\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='PuOR')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","c07c7888":"bi_product_2_yrs = kaggle_survey_1[\"bi_tools_to_learn_next_2_years\"].value_counts(normalize=True)[:20].rename_axis(\"Top BI Products to Learn Next 2 Years\").reset_index(name=\"Count of Survey Taker\")\n\nfig = px.treemap(bi_product_2_yrs, path=[\"Top BI Products to Learn Next 2 Years\"], values=\"Count of Survey Taker\",\n                  color=\"Count of Survey Taker\",color_continuous_scale='RdYlBu')\nfig.update_layout(margin=dict(t=5, b=5, r=1, l=1))\nfig.show()","3f944ad2":"### i. Overview","d6ea44d6":"### xx. Regular ML Products\n- Top used Ml product is Google Cloud ML","58afc2aa":"- 50% the participants for this survey come from Asia and Americas region.\n- Among Top 10 countries India is the top county to provide most responses, followed by USA, Brazil and Japan.\n- Among Last 10 countries Ghana is the county to provide least responses, followed by Ireland, Belarus and UAE. These countries either had the least access to this survey or the data science, ML and AI is not most familiar topic there.\n- Among participants from regions, participants in Ocenia, Americas and Asia tend to response faster in between 0 to 5.99 hrs.\n- Major response for this survey came in between 6 to 10.99 hrs timeline after survey release.\n- Youth between 18 to 29 years old are more likely to response from Asia and Africa compared to 25 to 44 years old from the rest of the regions.","3e4a63b3":"### vi. Education","38211492":"# Data Analysis","f209c940":"In conclusion it can be said that data field is constantly evolving with newer tools, products, platforms. But at the same time we have countries who are not fortunate enough to access all these information and platforms. Let alone we also have gender difference in data field. The survey puts a clear context on what people wants to do and the behavioural data can help us determine in future which fields we need to focus on to expand this field. In terms of platform popularity GCP Products can be seen gaining more popularity from the answers provided inside the survey. As per programming language Python, SQL and R still holding their popularity in data field.","6109fff8":"### xxx. Top Favourite Media for DS Topic\n- Top used favourite media for DS Topic is Kaggle\n- Most of the participants like to work with 12 or more platforms","87a6e945":"### vii. Times of TPU Usage\n- Most of the participants do not like to work with TPUs.","affcdb1a":"## Data Input","276e08b1":"### viii. Regular Data Visualization Library\n- Top Data Viz Library is Seaborn.\n- Most of the participants like to work with 2 visualization libraries.","2beac1a0":"### xxii. Big Data Products Used Often\n- Most of the participants like to work with MySQL for big data\n","9b67c6d8":"### xxi. Regular Big Data Products\n- Top used Big Data Products is Microsoft SQL Server\n- Most of the participants like to work with 2 big data products","e7ec0392":"- Masters Degree and Bachelor Degree holders are comprised of the most of the participants.\n- However, we also see participants, although minor from participants who have not received any formal education past high school.\n- Among each category of education option provided in the survey, all of them had more male to female ratio. However among all the categories, the female to male ratio was slightly higher for females who have Master's Degree or Doctoral Degree. At the same time some female participants chose not to respond anything.\n- Asia and Africa had the most respondents coming from Bachelor's Degree background. On the other hand Ocenia,Europe and Americas had most respondents from Master's Degree Backgroup. \n- The results suggest that the survey outreached Bachelor's degree holders in Asia and Africa more or the participants in these region tend to delay masters or not do it at all compared to Ocenia, Americas and European Participants. \n- From the age group it can be seen that, Bachelor's Degree holder respondents are 18 to 29 years old and Master's Degree and Doctoral Degree holders have big part coming from 25 to 39 years old.","d772c697":"### xv. Important Activities at Work","1a56c4d6":"- 42.4% of the participants coming from Student, Other, None and Project Manager are the aspiring  Data Scientists\/Engineers\/Administratiors.\n- There's a special part of respondents are unemployed now and they comprise of 22 to 39 years old. \n- Europe, Ocenia and Americas have the higher Data Scientists, Data Engineer and  Data Analysts respondance for this specific survey, where as Asia and Africa has more aspiring participants who wants to work in data field full time.\n- In terms of gender, female data analysts and statistician responsded more than women in other sectors.","26066c42":"### xxv. Top Regular Automated ML Tools\n- Top used Automated Ml tool is Auto SKlearn\n- Most of the participants like to work with 2 automated ML tools","4f5f159d":"### ii. Duration of Survey Completion\n","3b7b2fdc":"### xxxi. Computing Platform to Learn Next 2 Years\n- Top computing platform to learn is GCP\n- Most of the participants like to learn 12 or more platforms.","66bd2e9d":"### xix. Regular Cloud Computing Products\n- Most of the participants like to use Google Compute Engine followed by AWS Lambda","eb6cf778":"### ii. Programming Language Recommendation\n- Most of the participants recommended Python, R and SQL as the top 3 programming language","e6079b83":"First and foremost, I will clean the survey data provided. There are around 355 columns from which I will reduce all the information to  new 76 columns by aggregating the answers provided. Too many columns sometimes takes away the focus from the analysis and there are always chances of missing some valuable information. However the complete data cleaning process includes the following:\n\n- Aggregate additional columns into string agg to reduce number of columns and combine all informations.\n- If the aggregation column is null then change the null with \"None\"\n- Add the count of each chosen options inside the aggregations. For eg. One column will state \"regular preferred IDEs\" and another column will state \"count of regular preferred IDEs\".\n- If the count of each chosen option inside aggregation includes \"None\", change the counts to 0.\n- Rename the remaining columns without aggregation.\n- If the remaining columns without aggregation is null then change the null with \"None\"\n- Add additional columns needed","de31847b":"### v. Gender","24af95cf":"- The least representated gender in this study was woman, non-binary and people who refused to mention their gender or prefer to self-describe\n- Women represtation were more in Americas, Africa and Asian Sector compared to total participation per region.\n- There is a scope of improvement this study in future by approaching more woman from Ocenia and Europe.\n- The same can be done by participants who are nonbinary and only coming from Ocenia region.","de0334df":"### xviii. Regular Cloud Computing Platforms","f9406984":"### xxviii. Top Platform Begun DS Course\n- Top used platform  begun DS course is University Courses\n- Most of the participants like to work with 2 or more platforms to begin DS courses","e0094456":"The workbook contains comprehensive analysis on the overall data to point out behavioural analysis of the participants of Kaggle Survey 2020. Each sections hold detailed overview and some key takeaway points that can be in future be used to change some ongoing procedures or outreach more people.","58e705b6":"# Data Cleaning","d9665b2e":"### viii. Programming","99dd8928":"### iii. Regular IDE\n- Top regular IDE is VS Code\n- Most of the participants like to work with until 2 IDE regularly","bc02688a":"### xiv. ML Used by the Company","54e15c0c":"### xxvi. Top Tools to Manage ML Experiments\n- Top used Automated Ml tool is Tensorboard\n- Most of the participants like to work with 2 manage ML tools","7e837e45":"# Introduction","cc5013c3":"1. Main Dataset for this analysis is 'kaggle_survey_2020_responses.csv' which has been provided inside the Kaggle Competition.\n2. To analyze further, additional dataset for country region has been used, which is a public dataset: 'https:\/\/raw.githubusercontent.com\/lukes\/ISO-3166-Countries-with-Regional-Codes\/master\/all\/all.csv'","3443ebc6":"### xii. Size of Company Employment\n- Most of the participants work in a 0-49 Employees Company","9a4f02b6":"### iv. Regular Used Notebook\n- Top regular used Notebook is Codelab Notebooks\n- Most of the participants like to work with until 1 notebook regularly","ff2d9ffe":"### xxix. Primary Tool Use for Analysis\n- Most of the participants like to work with local development environments","42a2f8e9":"### xxxiii. Big Data Product to Learn Next 2 Years","634cd893":"## 1. General Behaviours","b60534e1":"- In Hours, the survey took majority of the participants 0 to 10.99 hours to complete. \n- However, as it can be seen from one section, the fourth highest duration took some participants (11% as it has been highlighted in pie chart) more than 40.99 hours to complete this survey.\n- Since Male participation was the highest, the duration hours all of them includes 70% male.","2984201c":"### vii. Job","415c1a4a":"### xxxiv. Big Data Product to Learn Next 2 Years","806ef084":"# Conclusion","cd0f7215":"- As we have seen in the overview section, participation of 18 to 29 years old has been the highest in the survey for 2020.\n- The age range go upto 70+, although the participation is the least in the referred age.\n- From the Pie chart it can be seen that the highlighted section is around 13% in total, which includes age group 45+ participants. The survey outreached the younger generation more than elder generation.\n- Female participation is less but in terms of age, female participation was more for 18 to 39 years old and the least was for 70+ years old.","b3fe14e6":"### xxvii. Top Publicly Share DA or ML App\n- Most of the participants do not like to share work publicly","7d56c163":"### xvii. Money Spent at Home for ML USD\n- Most of the participants do not spend money for ML","c2097148":"### xi. Regular Used ML Algorithm\n- Top used Ml framework is Decision Tree or Random  Forest.\n- Most of the participants like to work with 2 ml algorithm.","4f480d3e":"### v. Type of Computing Platform for DS Projects\n- Most of the participants like to work with Computing Platform \"Personal Laptop\"","95e1a3c8":"### xvi. Current Yearly Compensation USD\n- Most of the participants get 0 to 999 USD as annual compensation","81c4da32":"### xxiv. BI Products Used Often\n- Top used BI product is Tableau","9e6d0860":"- Some student participators have 1 to 5 years of programming language experience according to the survey\n- Most data scientists have programming experience in between 5 to 20 years.\n- Most programming experience holder from these job sectors are 10 to 20 plus years and mosly comprises of Research Scientists and Software Engineers.\n- In terms of Gender, more female participation can be noticed on no programming language section. It may be the audience sector for this survey or the coding skills education needs to be increased for women in and out of tech sector.","5cc62d75":"## 2. Survey Q&A Responses","7aefa065":"### xiii. Employee Number for DS Workload\n- Most of the participants share their workload with 1 to 2 people","c3b6ea0d":"### iv. Residence of Participants and Region\n","29487e77":"### xxxii. Computing Product to Learn Next 2 Years","71866f70":"### iii. Age Group of Survey Participators","2dc9d8b9":"### xxiii. Regular BI Tools\n- Top used BI Tool is Tableau.\n- Most of the participants like to work with 2 BI Tools.","62cf64da":"From this sankey diagram a basic overview of the participants can be deduced. \n\n- Majority of the participants for this survey has been Male, followed by Female. Least participated respondents are NonBinary or did not disclose their gender.\n- Among Male and Female  participants, more than half participants are between 18-29 years old.\n- There has been a noticable number of participants did not mention their job in the survey and their education as well. \n- 60% of the participants are Students, Data Scientists, Software Engineer or holding other jobs and have Bachelor's and Master's Degree or atleast one of them.\n- Again, noticable amount of people who have undertaken the survey are not currently employed.\n- Participant's who has Bachelor's and Master's Degree has around 0-5 years of programming experiences.\n","f9ab554d":"### ix. Years of Using ML Methods\n- Most of the participants used ML methods under 1 year","ee01af72":"### vi. Specialized Hardware\n- Top specialized hardware is TPUs","ac5fe3c9":"### x. Regular Used ML Framework\n- Top used Ml framework is Tensorflow or Keras.\n- Most of the participants like to work with 2 ml frameworks.","a96276b3":"### i. Regular Programming Language\n- Top regular programming language is SQL\n- Most of the participants like to work with until 3 programming languages regularly"}}