{"cell_type":{"bb696522":"code","3393ba7d":"code","792e97ee":"code","117be70c":"code","c07a4705":"markdown"},"source":{"bb696522":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3393ba7d":"df_leaderboard = pd.read_csv('..\/input\/generativedogimagespublicleaderboard\/generative-dog-images-publicleaderboard.csv')\ndf_cleaned_leaderboard = df_leaderboard[df_leaderboard['Score']>40].sort_values(by=['Score']).drop_duplicates(subset=['TeamId'])\ndf_cleaned_leaderboard.pop('TeamId')\ndf_cleaned_leaderboard.pop('SubmissionDate')\ndf_cleaned_leaderboard = df_cleaned_leaderboard.reset_index(drop=True)\ndf_cleaned_leaderboard.index = df_cleaned_leaderboard.index+1","792e97ee":"df_cleaned_leaderboard[:50]","117be70c":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(style=\"whitegrid\")\n\n# Initialize the matplotlib figure\nf, ax = plt.subplots(figsize=(6, 23))\n\ncolors = ['green']*5+['gold']*5+['grey']*30+['brown']*40\n\n# Load the example car crash dataset\n#crashes = sns.load_dataset(\"Public LB score\").sort_values(\"total\", ascending=False)\n\n# Plot the public LB\nsns.set_color_codes(\"muted\")\nsns.barplot(x=\"Score\", y=\"TeamName\", data=df_cleaned_leaderboard[:80],\n            label=\"Public LB Score\", palette=colors)\n\n# Plot the private LB\n#sns.set_color_codes(\"pastel\")\n#sns.barplot(x=\"Score2\", y=\"TeamName\", data=df_cleaned_leaderboard[:50],\n#            label=\"Private LB Score\", color=\"b\")\n\n# Add a legend and informative axis label\nax.legend(ncol=2, loc=\"lower right\", frameon=True)\nax.set(xlim=(0, 140), ylabel=\"\",\n       xlabel=\"Public LB Score\")\n\nsns.despine(left=True, bottom=True)","c07a4705":"Inspired from Fran\u00e7ois (https:\/\/www.kaggle.com\/c\/generative-dog-images\/discussion\/98151#latest-566016), I created this kernel to show the public LB without scores below 40. \nThis number might change as we progress further. Right now it seems to be a good estimate to distinguish between real solutions and invalid solutions.\n\nI'll try to rerun it every once in a while. \nOr does anyone know how to grab the raw_data zip file automatically (it gives an error when trying with a kernel as you need to be logged it to download it)"}}