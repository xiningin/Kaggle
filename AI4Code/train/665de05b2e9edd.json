{"cell_type":{"0de9bc6a":"code","e37d0025":"code","87dbeefc":"code","ef3bc936":"code","d47637ba":"code","c1cb7804":"code","9ea21cb5":"code","b4727fe9":"code","04965695":"code","6b3e62c7":"code","b21afcca":"code","d6f9fc9b":"code","1bc1d1da":"code","228a4531":"code","fb8589b9":"code","bcfc3bd0":"code","3f5fb2a9":"code","dc417364":"code","59fb0d53":"markdown","35bbf89b":"markdown","5109f8d1":"markdown","5f897d20":"markdown","ca9c7acb":"markdown","8ce95269":"markdown","cead915a":"markdown","e01b3f58":"markdown","816c289b":"markdown","bcecd659":"markdown","6f787dc6":"markdown","6d8db075":"markdown","6908bf0e":"markdown","52c209a0":"markdown","4cb78585":"markdown","dcfe6a8b":"markdown"},"source":{"0de9bc6a":"import math\nimport numpy\nimport shapely.geometry as shg\nimport fiona\nimport geopandas\nimport matplotlib.pyplot as plt","e37d0025":"#firstly three basic polygons needs to be chosen\n\npoly1 = [(2, 2), (2, 4), (4, 4), (4, 2), (2, 2)]\n\npoly2 = [(3, 2.3), (4, 2.2), (5, 2),(5, 3),(2, 4), (2.4, 4), (2.5, 3), (3, 2.3)]\n\npoly3 = [(-4, -4), (-4, -3), (-3, -3), (-3, -4), (-4, -4)]","87dbeefc":"#the next step is to find the area of the three polygons using shapely\n\nshgpoly1 = shg.Polygon(poly1)\n\nshgpoly2 = shg.Polygon(poly2)\n\nshgpoly3 = shg.Polygon(poly3)\n\n\nprint('Area of poly 1 is {}'.format(shgpoly1.area))\n\nprint('Area of poly 2 is {}'.format(shgpoly2.area))\n\nprint('Area of poly 3 is {}'.format(shgpoly3.area))","ef3bc936":"#then plot the polygons\nplt.plot(shgpoly1.exterior.xy[0], shgpoly1.exterior.xy[1])\nplt.plot(shgpoly2.exterior.xy[0], shgpoly2.exterior.xy[1])\nplt.plot(shgpoly3.exterior.xy[0], shgpoly3.exterior.xy[1])","d47637ba":"def spatialmean(coords):\n    \n    adj=1\n    if coords[0] != coords[-1]:\n        adj==0\n    \n    x, y = zip(*coords)\n    mx = 0\n    my = 0\n    for i in range(len(coords)-adj):\n        mx = mx + x[i]\n        my = my + y[i]\n    mx = mx \/ (len(coords)-adj)\n    my = my \/ (len(coords)-adj)   \n    return mx, my","c1cb7804":"x, y = spatialmean(poly1)\nprint(x, y)\n\n","9ea21cb5":"# The first step is to name the function\ndef polygonarea(poly):\n\n    \n    xr, yr = spatialmean(poly)\n    \n    # Set the running sum to zero\n    \n    ar=0\n    \n    # Start iterating over the polygon coordinates\n    \n    for i in range(len(poly)-1):\n      \n    # Use range object as need to visit current and next (i and i+1)\n  \n        xi = poly[i][0]\n        \n        yi = poly[i][1]\n        \n        \n        xj = poly[i+1][0]\n        \n        yj = poly[i+1][1]\n        \n        #In this point the equation is written and the 0.5 is multiplied to the equation\n        \n        a = 0.5*(((xj-xr)*(yi-yr))-((yj-yr)*(xi-xr)))\n        \n        ar = ar + a\n        \n    #The multiplication of 0.5 could have been writen as area = math.fabs(ar*0.5) but I choose to multiply \n    #in the originial equation as I saw it easier.\n\n    #calculate the area\n    area = math.fabs(ar)\n    \n    return area","b4727fe9":"for i in range(len(poly1)-1):\n    print (poly1[i], poly1[i+1])","04965695":"#Using iteration the comparsion will be made.\n\narea1 = polygonarea(poly1)\narea2 = polygonarea(poly2)\narea3 = polygonarea(poly3)\n\nprint('Area of poly 1 is {}'.format(area1))\nprint('Area of poly 2 is {}'.format(area2))\nprint('Area of poly 3 is {}'.format(area3))","6b3e62c7":"#Using iteration the comparsion will be made.\narea1 = polygonarea(poly1)\narea2 = polygonarea(poly2)\narea3 = polygonarea(poly3)\n\nprint('Area of poly 1 is {} and from function {}'.format(shgpoly1.area, area1))\nprint('Area of poly 2 is {} and from function {}'.format(shgpoly2.area, area2))\nprint('Area of poly 3 is {} and from function {}'.format(shgpoly3.area, area3))","b21afcca":"#The first step of adding data is to create an a list to store the data\nshapefile_polygons = []                  \n\n#Then opened the shapelife using fiona\nc = fiona.open('..\/input\/ceg1713-data-files\/polygons.shp')\n\nfor each_poly in c:\n    geom = shg.shape(each_poly['geometry'])\n    poly_data = each_poly[\"geometry\"][\"coordinates\"][0] \n    poly = shg.Polygon(poly_data)\n    print(poly)\n   \n    #convert the data in the same structure as the data above\n    shapefile_polygons.append(list(poly.exterior.coords))\n\ndisplay(shapefile_polygons)","d6f9fc9b":"plt.gca().set_aspect('equal', adjustable='box')  #This step is to make the y and x axis at equal scales\n\nfor poly in shapefile_polygons:\n    xy = list(zip(*poly))\n    plt.fill(xy[0], xy[1], alpha=0.5)","1bc1d1da":"#Using iteration the area is shown and displayed \n\nshg_poly1 = shg.Polygon(shapefile_polygons[0])\nshg_poly2 = shg.Polygon(shapefile_polygons[1])\nshg_poly3 = shg.Polygon(shapefile_polygons[2])\n\nprint('Area of first polygon is {}'.format(shg_poly1.area))\nprint('Area of second polygon is {}'.format(shg_poly2.area))\nprint('Area of third polygon is {}'.format(shg_poly3.area))","228a4531":"#Using iteration the comparsion will be made\n\npolygn1 = polygonarea(shapefile_polygons[0])\npolygn2 = polygonarea(shapefile_polygons[1])\npolygn3 = polygonarea(shapefile_polygons[2])\n    \nprint('Area of first polygon is {} and from function {}'.format(shg_poly1.area, polygn1))\nprint('Area of second polygon is {} and from function {}'.format(shg_poly2.area, polygn2))\nprint('Area of third polygon is {} and from function {}'.format(shg_poly3.area, polygn3))","fb8589b9":"#The first step of adding data is to create an a list to store the data\nshapefile_buildings = []                  \n\n#Then opened the shapelife using fiona\nc = fiona.open('..\/input\/ceg1713-data-files\/buildings.shp') \n\nfor each_poly in c:\n    geom = shg.shape(each_poly['geometry'])\n    poly_data = each_poly[\"geometry\"][\"coordinates\"][0]  \n    poly = shg.Polygon(poly_data)\n    print(poly)\n    \n    #convert the data in the same structure as the data above\n    shapefile_buildings.append(list(poly.exterior.coords))\n\ndisplay(shapefile_buildings)","bcfc3bd0":"plt.gca().set_aspect('equal', adjustable='box')  #This step is to make the y and x axis at equal scales\n\nfor poly in shapefile_buildings:\n    xy = list(zip(*poly))\n    plt.fill(xy[0], xy[1], alpha=0.5)","3f5fb2a9":"#Using iteration the area is shown and displayed\n\nshg_bldng1 = shg.Polygon(shapefile_buildings[4])\nshg_bldng2 = shg.Polygon(shapefile_buildings[8])\nshg_bldng3 = shg.Polygon(shapefile_buildings[10])\nshg_bldng4 = shg.Polygon(shapefile_buildings[20])\n\nprint('Area of the first building is {}'.format(shg_bldng1.area))\nprint('Area of the first building is {}'.format(shg_bldng2.area))\nprint('Area of the first building is {}'.format(shg_bldng3.area))\nprint('Area of the first building is {}'.format(shg_bldng4.area))","dc417364":"#Using iteration the comparsion will be made\n\nBuilding1 = polygonarea(shapefile_buildings[4])\nBuilding2 = polygonarea(shapefile_buildings[8])\nBuilding3 = polygonarea(shapefile_buildings[10])\nBuilding4 = polygonarea(shapefile_buildings[20])\n    \nprint('Area of first polygon is {} and from function {}'.format(shg_bldng1.area, Building1))\nprint('Area of first polygon is {} and from function {}'.format(shg_bldng2.area, Building2))\nprint('Area of first polygon is {} and from function {}'.format(shg_bldng3.area, Building3))\nprint('Area of first polygon is {} and from function {}'.format(shg_bldng4.area, Building4))","59fb0d53":"# The area is calculated using the function and testing is done by comparing our results to shapley.","35bbf89b":"# Assessment 2\n\n**This assessment requires us to calculate the area of the polygon using the python language. The first step is to import libraries and add the data of the polygons and buildings. After that, the programming section will be the next step; the function will be programmed to calculate the area of the polygon. When the programming is done, the testing will be made, and Shapley will compare the results to the function results. The final step will be to add a final shapefile and plot them, but also to compare the area results of this shapefile to the function results.**","5109f8d1":"# **Plot the polygons **","5f897d20":"# **Plot the Buildings **","ca9c7acb":"# **After that the area of the polygons is calculated using the function and compare the answers to shapley  **","8ce95269":"# **From this point the data of the buildings is added **","cead915a":"# **The first step is to find the spatialmean for the xy coordinates **\n\n![coordinates.png](attachment:coordinates.png)\n\n","e01b3f58":"# **In this point the function has been written and after this the testing can be done**","816c289b":"# **The step bellow is to calculate the area of the Building which are randomly choosen using shapely because if all the buildings are used the list will contain a lot of areas so I choose random buildings **","bcecd659":"# **return the spatialmean for x and y **","6f787dc6":"# **The step bellow is to calculate the area of these polygons using shapely **","6d8db075":"# From this point the data of the simple polygons is added ","6908bf0e":"# **After that the area of the buildings is calculated using the function and compared the answers to shapley  **","52c209a0":"# From this point the programming of the equation started ","4cb78585":"# **calculate meanX and meanY use the spatialmean function**","dcfe6a8b":"* In this notebook the steps that has been made were to find and evaluate the area of a polygon using the equation below:\n\n![Screen%20Shot%202020-12-07%20at%204.10.27%20PM.png](attachment:Screen%20Shot%202020-12-07%20at%204.10.27%20PM.png)\n\n* using iteration and basic forms to create this formula "}}