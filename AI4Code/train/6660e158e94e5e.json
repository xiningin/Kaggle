{"cell_type":{"f087981b":"code","8378e111":"code","c4c91661":"code","22ec69e5":"code","bb0c06b1":"code","96787923":"code","1d499cfc":"code","8143e4f9":"code","aed4f348":"code","fc35d658":"code","007cfafa":"code","66433c83":"code","cb889e0b":"code","96270b4d":"code","0b603c33":"code","4733404e":"code","f2cd6103":"code","5379969c":"code","0b1e4369":"code","76ac8479":"markdown","33b9ac67":"markdown","c24d9522":"markdown","ac97f7c2":"markdown","b674b01b":"markdown","5298481b":"markdown","8758cdfa":"markdown"},"source":{"f087981b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8378e111":"df = pd.read_csv('..\/input\/heart.csv')","c4c91661":"df.describe()","22ec69e5":"df.shape","bb0c06b1":"df.head()","96787923":"features = df.iloc[:,:13].values","1d499cfc":"features[:5]","8143e4f9":"from sklearn.preprocessing import MinMaxScaler, StandardScaler\nscaler = StandardScaler()\nscaler.fit_transform(features)","aed4f348":"labels = df.iloc[:,13].values","fc35d658":"labels[:5]","007cfafa":"from sklearn.model_selection import train_test_split","66433c83":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit_transform(features)","cb889e0b":"X_train,X_test,y_train,y_test = train_test_split(features,labels,test_size=0.20,random_state=109)","96270b4d":"from sklearn.svm import SVC","0b603c33":"clf = SVC(C=0.5,kernel = 'linear')","4733404e":"clf.fit(X_train,y_train)","f2cd6103":"preds = clf.predict(X_test)","5379969c":"from sklearn.metrics import accuracy_score, precision_score, recall_score","0b1e4369":"print(\"Accuracy = {0:.2f}\".format(accuracy_score(preds,y_test)*100))\nprint(\"Precision:\",round(precision_score(y_test, preds)*100,2))\nprint(\"Recall:\",round(recall_score(y_test,preds)*100,2))","76ac8479":"### Splitting the features and labels","33b9ac67":"### Splitting dataset into train and test\n80% training and 20% testing","c24d9522":"## Evaluating the model","ac97f7c2":"### Feature Scaling","b674b01b":"### Loading Dataset","5298481b":"### Creating the SVM Classifier","8758cdfa":"### Taking a look at the data"}}