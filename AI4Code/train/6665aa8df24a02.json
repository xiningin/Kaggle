{"cell_type":{"f4ffe723":"code","445dd68e":"code","9008e45e":"code","d170ebfd":"code","52983f31":"code","79240fc5":"code","9670a23c":"code","4dcc6ba6":"code","94b4755b":"code","98692ed7":"code","18f0093d":"code","606dd1e4":"code","0004c654":"code","01f27cbc":"code","4c958926":"markdown"},"source":{"f4ffe723":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.metrics import mean_squared_error","445dd68e":"train_data = pd.read_csv('\/kaggle\/input\/30-days-of-ml\/train.csv', index_col='id')\ntest_data = pd.read_csv('\/kaggle\/input\/30-days-of-ml\/test.csv', index_col='id')","9008e45e":"categorical_cols = [col for col in train_data.columns if 'cat' in col]\ncontinuous_cols = [col for col in train_data.columns if 'cont' in col]","d170ebfd":"X = train_data.drop(['target'], axis=1)\ny = train_data['target']","52983f31":"X_train, X_val, y_train, y_val = train_test_split(X, y)","79240fc5":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('continuous', MinMaxScaler(), continuous_cols),\n        ('categorical', OrdinalEncoder(), categorical_cols)\n    ])","9670a23c":"model = LinearRegression()","4dcc6ba6":"pipeline = Pipeline(\n    steps=[\n        ('preprocessor', preprocessor),\n        ('model', model)\n    ])","94b4755b":"pipeline.fit(X_train, y_train)","98692ed7":"mean_squared_error(y_train, pipeline.predict(X_train), squared=False)","18f0093d":"mean_squared_error(y_val, pipeline.predict(X_val), squared=False)","606dd1e4":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('continuous', MinMaxScaler(), continuous_cols),\n        ('categorical', OrdinalEncoder(), categorical_cols)\n    ])\n\nmodel = LinearRegression()\n\npipeline = Pipeline(\n    steps=[\n        ('preprocessor', preprocessor),\n        ('model', model)\n    ])\n\npipeline.fit(X, y)","0004c654":"final_predictions = pd.DataFrame(zip(test_data.index, pipeline.predict(test_data)), columns=['id', 'target'])","01f27cbc":"final_predictions.to_csv('submission.csv', index=False)","4c958926":"# Training Final Model"}}