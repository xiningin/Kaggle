{"cell_type":{"d3713b76":"code","f3cb91f7":"code","5a3aefe6":"code","e8c3bc8f":"code","d3c9c59b":"code","b4da49b0":"code","2c258979":"code","9fc985ff":"code","58ed29cf":"code","f23c2de6":"code","c0b53eaf":"code","7fc87f33":"code","88bc8173":"code","03a2ffcf":"code","7c31d0a4":"code","50d275a4":"code","e7c11bee":"code","586702df":"code","8a18e413":"code","dd7eff7e":"code","7686ee15":"code","79ccc707":"code","5258d6dc":"code","da5b8ec1":"markdown","f18b40c2":"markdown","e43204bd":"markdown"},"source":{"d3713b76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f3cb91f7":"data = pd.read_csv(\"..\/input\/StudentsPerformance.csv\")","5a3aefe6":"data.info()","e8c3bc8f":"data.describe()","d3c9c59b":"data.corr()","b4da49b0":"data.columns","2c258979":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","9fc985ff":"\ndfmale = data[data.gender == \"male\"] # New DataFrame for male\ndffemale = data[data.gender == \"female\"] # New DataFrame for female\n\n","58ed29cf":"# Lineplot\ndfmale[\"math score\"].plot(kind = \"line\",color = \"black\",label = \"Math Score (Male)\", linewidth = 1, grid = True, alpha = 0.5, linestyle = \":\",figsize = (12,12))\ndffemale[\"math score\"].plot(color = \"r\",label = \"Math Score (Female)\", linewidth = 1, grid = True, alpha = 0.5, linestyle = \"-.\")\nplt.legend(loc=\"lower center\")\nplt.xlabel(\"number of students\")\nplt.ylabel(\"math exam score\")\nplt.title(\"Line Plot\")\nplt.show()","f23c2de6":"#ScatterPlot\ndata.plot(kind=\"scatter\", x = \"reading score\",y = \"writing score\",alpha = 0.5,color = \"orange\",grid = True,figsize = (12,12))\nplt.xlabel(\"Reading Score\",color = \"blue\")\nplt.ylabel(\"Writing score\",color = \"r\")\nplt.title(\"Writing vs Reading \")\nplt.show()","c0b53eaf":"#Histogram\ndata[\"math score\"].plot(kind = \"hist\", bins = 250, grid = True, figsize = (24,12),color = \"gray\")\nplt.ylabel(\"Frequency\")\nplt.xlabel(\"Math Score\")\nplt.show()","7fc87f33":"# clf() = cleans it up again you can start a fresh\ndata[\"math score\"].plot(kind = \"hist\", bins = 250, grid = True, figsize = (24,12),color = \"gray\")\nplt.clf()","88bc8173":"dictionary = {\"Turkey\": \"Ankara\",\"England\":\"London\",\"Usa\":\"'Washingon\"}\nprint(dictionary.keys())\nprint(dictionary.values())\n\n","03a2ffcf":"dictionary[\"Palestine\"] = \"Jarussalem\" # Add new Entry\nprint(dictionary)\ndictionary[\"Usa\"] = \"New York\" # Update Entry\nprint(dictionary)\ndel dictionary[\"England\"] # remove entry\nprint(dictionary)\nprint(\"Turkey\" in dictionary) # include or not\ndictionary.clear() # remove all\nprint(dictionary)","7c31d0a4":"# In order to run all code you need to take comment this line\n# del dictionary         # delete entire dictionary     \n#print(dictionary)       # it gives error because dictionary is deleted\n","50d275a4":"data = pd.read_csv(\"..\/input\/StudentsPerformance.csv\")\ndfmale = data[data.gender == \"male\"] # New DataFrame for male\ndffemale = data[data.gender == \"female\"] # New DataFrame for female","e7c11bee":"# Series\nseries = data[\"reading score\"] # it's serie\nprint(type(series))\ndata_frame = data[[\"reading score\"]] # it's dataFrame\nprint(type(data_frame))","586702df":"# 1 - Filtering Pandas data frame\nfilter1 = dfmale[\"math score\"] >95\ndfmale[filter1] # only 12 female students\n","8a18e413":"filt = data[\"reading score\"]>95\nfilt2 = data[\"writing score\"]>95\nfilt3 = data[\"math score\"]>95\ndata[filt & filt2 & filt3]","dd7eff7e":"malefilt = data.gender==\"male\"\nfemalefilt = data.gender ==\"female\"\nfilt = data[\"reading score\"]>95\nfilt2 = data[\"writing score\"]>95\nfilt3 = data[\"math score\"]>95\nsmartmale = data[filt & filt2 & filt3& malefilt].shape[0]\nsmartfemale = data[filt & filt2 & filt3& femalefilt].shape[0]\n\nprint(\"Number of hardworking male students: \", smartmale)\nprint(\"Number of hardworking female students\",smartfemale)\n\n\n","7686ee15":"#2 - Filtering pandas with logical_and\ndata[np.logical_and(data[\"reading score\"]>95, data[\"writing score\"]>95)] ","79ccc707":"# Stay in loop if condition( i is not equal 5) is true\n\ni = 0\n\nwhile i!=5:\n    print(\"i is: \", i)\n    i +=1\nprint(\"i is equal to 5\")    ","5258d6dc":"# Stay in loop if condition( i is not equal 5) is true\nliste = [1,2,3,4,5]\n\nfor i in liste:\n    print(i)\n\nprint()\n\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\n\nfor index, value in enumerate(liste):\n    print(index,\":\",value)\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndict2 = {\"Green\":[\"Blue\",\"Yellow\"],\"Orange\":[\"Red\",\"Yellow\"]}\nfor key, value in dict2.items():\n    print(key,\":\",value[0],value[1])\n    \nprint()\n# For pandas we can achieve index and value\nfor index,value in data[[\"math score\"]][0:2].iterrows():\n    print(index,\" : \",value)\n    ","da5b8ec1":"### WHILE and FOR LOOPS","f18b40c2":"### PANDAS","e43204bd":"**Dictionary**"}}