{"cell_type":{"50e6953b":"code","83474e60":"code","705ada90":"code","e4537d0d":"code","622e4ce3":"code","9b7061da":"code","b3dda4bf":"code","b885d335":"code","26676010":"code","429a31e7":"code","abae9cf4":"code","f865ad36":"markdown","7f6d1bf6":"markdown","fafa62ba":"markdown","8e71a0d0":"markdown","8c475864":"markdown","6ffd9fa5":"markdown","db5d36c0":"markdown","71145475":"markdown","e2537281":"markdown","6c80641b":"markdown","a9ccc1b6":"markdown","b9652e80":"markdown"},"source":{"50e6953b":"import pandas as pd\nimport numpy as np\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import ttest_ind","83474e60":"# Read in data and date columns using parse_dates\nmarketing = pd.read_csv('..\/input\/marketing\/marketing.csv',\n                        parse_dates = ['date_served',\n                                       'date_subscribed',\n                                       'date_canceled'])","705ada90":"####################\n# Review Data\n####################\nmarketing.head()\nmarketing.tail()\nmarketing.info()\nmarketing.columns\nmarketing.dtypes\n\n# Check categorical variables for appropriate values\nfor column in marketing.columns:\n    count = marketing[column].value_counts()\n    print(count, '\\n\\n')\n    \n# Change logical columns to bool type\nmarketing['converted'] = marketing['converted'].astype('bool')\nmarketing['is_retained'] = marketing['is_retained'].astype('bool')\n\n# Check data types updated\nmarketing.dtypes","e4537d0d":"# When was the A\/B test run and for how long?\nprint(marketing['date_served'].min(), marketing['date_served'].max())\n# Jan 1 - Jan 31\n\n# Make sure roughly half received personalized email, half the control\nemail = marketing[marketing['marketing_channel'] == 'Email']\nmkt_split = email.groupby(['variant'])['user_id'].agg([('count', 'nunique')])\\\n    .reset_index()\n# personalization = 284, control = 270\n\n# Plot\np1 = sns.catplot(data = mkt_split,\n                 kind = 'bar',\n                 x = 'variant',\n                 y = 'count')\np1.fig.suptitle('Marketing Email Split',\n                y = 1.02)\np1.set(xlabel = 'Variant',\n       ylabel = 'Unique Users')\nplt.show()","622e4ce3":"# Create lift function\ndef lift(a,b):\n    a_mean = np.mean(a)\n    b_mean = np.mean(b)\n    \n    lift = (b_mean - a_mean)\/a_mean\n    \n    return str(round(lift*100, 2)) + '%'","9b7061da":"# Create function to round statistical test\ndef format(test):\n    print('statistic:', test.statistic.round(4),\n          'p-value:', test.pvalue.round(4))","b3dda4bf":"# Create main function\ndef ab_segmentation(segment):\n    for subsegment in np.unique(marketing[segment].values):\n        print(subsegment)\n        \n        # We'll limit to those receiving the email marketing\n        email = marketing[(marketing['marketing_channel'] == 'Email') &\n                          (marketing[segment] == subsegment)]\n        # Isolate subscribers and turn into data frame\n        subscribers = email.groupby(['user_id', 'variant'])['converted'].max()\n        subscribers = pd.DataFrame(subscribers.unstack(level=1))\n        # Create control and personalization dfs, dropping unneeded na values\n        control = subscribers['control'].dropna()\n        personalization = subscribers['personalization'].dropna()\n        \n        print('lift:', lift(control, personalization))\n        print('t-test:')\n        format(ttest_ind(control, personalization))\n        print('\\n\\n')","b885d335":"# AB Test by language displayed\nprint(ab_segmentation('language_displayed'))\n# Arabic: not significant\n# English: 39% better than control\n# German: not significant \n# Spanish: 166% better than control ","26676010":"# Put information into list\ndict_of_lists2 = {\n    'language': ['English', 'Spanish'],\n    'pct': [39, 166]} \n\n# Create df\nmkt_lang = pd.DataFrame(dict_of_lists2)\n\n# Create plot\np2 = sns.catplot(data = mkt_lang,\n                 kind = 'bar',\n                 x = 'pct',\n                 y = 'language',\n                 color = 'g')\np2.fig.suptitle('Lift percentage v control: grouped by language',\n                y = 1.03)\np2.set(xlabel = 'Percent difference from control',\n       ylabel = 'Language')\nplt.show()","429a31e7":"# AB test by age group\nprint(ab_segmentation('age_group'))\n# 0-18: 121% better than control\n# 19-24: 106% better than control\n# 24-30: 161% better than control\n# 30-36: 100% worse than control\n# 36-45: 85% worse than control\n# 45-55: 72% worse than control\n# 55+: 100% worse than control","abae9cf4":"# Put information into list\ndict_of_lists = {\n    'age_group': ['55+', '45-55', '36-45', '30-36', '24-30', '19-24', '0-18'],\n    'pct': [-100, -72, -85, -100, 161, 106, 121]}\n\n# Create df\nmkt_age = pd.DataFrame(dict_of_lists)\n\nmkt_age['positive'] = np.where(mkt_age['pct']>0, 'yes', 'no')\n\n# Create plot\ncolors = {'yes': 'g', 'no': 'r'}\np3 = sns.catplot(data = mkt_age,\n                 kind = 'bar',\n                 x = 'pct',\n                 y = 'age_group',\n                 hue = 'positive',\n                 palette = colors,\n                 legend = False)\np3.fig.suptitle('Lift percentage v control: grouped by age',\n                y = 1.03)\np3.set(xlabel = 'Percent difference from control',\n       ylabel = 'Age group')\nplt.show()","f865ad36":"# The work behind the data\n\n## Import libraries","7f6d1bf6":"## Format function\nThis function will take a statistical test and allow us to round the outputs to make them easier to read","fafa62ba":"# A\/B segmentation by age group","8e71a0d0":"# Verify test validity\nWe assess the dates the test was run and confirm it ran Jan 1 through Jan 31 2018\n\nWe next make sure that there is a roughly 50-50 split between users who received a-variant (regular email) and b-variant (personalized email)\n\nWe visualize the output just to show that the respondents are close to 50-50","8c475864":"# A\/B Segmentation by language","6ffd9fa5":"# Introduction\n\nThis is a case study exploring an A\/B test using data from datacamp.com to assess the effectiveness of an email marketing campaign for a fictional subscription-based company. \n\nWe will evaluate the lift (percentage increase\/decrease) of our b-variant compared to our a-variant conversion rate. \n\n# Defining the problem\nThe marketing team has collected a month's worth of data from January 1st to January 31st and would like to assess the effectiveness of their email marketing campaign. There is an a-variant (control) featuring a normal boilerplate marketing email, and a b-variant (personalization) featuring a personalized message based on usage statistics and how the user interacts with the product. \n\nWe will calculate lift using the conversion rate metric across several population segments (language and age group) and assess whether there was statistical signifcance. We will make recommendations based upon our analysis to our stakeholders. \n\n# Hypothesis\nBy changing regular marketing emails into personalized emails, we can increase our subscribers and conversion rate.\n\n# Findings\n* The email marketing campaign was highly effective across certain segments of our customer base\n* In other segments it was ineffective and drove down the conversion rate\n\nLanguage segmentation (Spanish, English, Arabic, German): \n* Spanish users: **+166% increase** in conversion rate\n* English users: **+39% increase** in conversion rate\n* Arabic and German did not report a statistically significant result\n\nAge group segmentation:\n* 0-18: **+121% increase** in conversion rate\n* 19-24: **+106.24% increase** in conversion rate\n* 24-30: **+161% increase** in conversion rate\n* 30-36: **-100& decrease** in conversion rate\n* 36-45: **-85& decrease** in conversion rate\n* 45-55: **-72% decrease** in conversion rate\n* 55+: **-100% decrease** in conversion rate\n\n## Findings Summary\nThere was a statistically significant and profound increase in conversion rate for Spanish and English users that received the b-variant (personalized email) marketing email. Arabic and German did not produce statistically significant results so their respective lifts are not included.\n\nThere was a statistically significant and profound **increase** in conversion rate in age groups 0-30 that received the b-variant. \n\nConversely there was a statistically significant and profound **decrease** in conversion rate in age groups 30-55+ that received the b-variant.\n\n# Recommendations\n\nLanguage segmentation:\n* Personalized email marketing is **highly effective** with our Spanish and English speaking users and **should be continued**\n* No evidence exists to suggest continuing with our Arabic and German speaking users\n\nAge group segmentation:\n* Personalized email marketing is **highly effective** with age groups 0-30 and **should be continued**\n* Personalized email marketing is **highly ineffective** and **detrimental** to our subscriber conversion rate with age groups 30-55+ and **should be discontinued**\n\nLanguage and age group combined:\n* It is advantageous to target personalized email marketing to Spanish and English speakers that range in age from 0-30\n\n","db5d36c0":"## Read in data","71145475":"## Visualizing lift on language","e2537281":"## Visualizing lift on age group","6c80641b":"# Automating the process\n\n## Lift function\nThis function will take the conversion rate of a-variant and b-variant and calculate the lift between them","a9ccc1b6":"## ab_segmentation function\nThis function automates the process of comparing a-variant to b-variant across user segments (e.g. language and age group). It returns a lift percentage, a test statistic, and the test statistic's p-value.","b9652e80":"# Review Data\n\n* We look at the head and tail to get a sense of the data \n* We look at info to assess for any outliers\n* We look at the data types of the columns and correct any that are not appropriate\n* The for loop will run through all columns and print out how many times a value appears. We use this to assess mostly categorical variables and look for typos or similar categories that should be combined (e.g. 'Facebook' and 'facebook')"}}