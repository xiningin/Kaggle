{"cell_type":{"1cc0c972":"code","aa154328":"code","16fd6d9d":"code","505306ba":"code","dbdd93f4":"code","25315f98":"code","eecbbae1":"code","17c2b412":"code","7f5b1086":"code","53ca48fd":"code","4fd45193":"code","64600c50":"code","1f7f7ffb":"code","c4130bd1":"code","67f99320":"code","d98d26da":"code","c314ca1c":"code","ec795b81":"code","f1680eed":"code","94ce12c5":"code","89a236a9":"code","2822d38d":"code","c7ccec9d":"code","bdb51271":"code","58d509ac":"code","fb487b7a":"code","90f2d98e":"code","689660f5":"code","b3838a9c":"code","669dedbb":"code","27da06d7":"code","5ec19543":"code","2b3ecf2b":"code","e7032bf4":"markdown","b412afcf":"markdown","cc3f411d":"markdown","932708f0":"markdown","dd0ee138":"markdown","8a31db47":"markdown","fa0fcf6a":"markdown"},"source":{"1cc0c972":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa154328":"raw_train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")","16fd6d9d":"raw_train_data","505306ba":"train_data = raw_train_data.drop(['PassengerId', 'Name', 'Age', 'Ticket', 'Cabin', 'Embarked'], axis = 1)","dbdd93f4":"train_data","25315f98":"train_data['Family_size'] = train_data['SibSp'] + train_data['Parch']","eecbbae1":"train_data","17c2b412":"train_data['Sex'] = train_data['Sex'].map({'female':1, 'male':0})","7f5b1086":"train_data","53ca48fd":"train_data = train_data.drop(['SibSp', 'Parch'], axis = 1)","4fd45193":"train_data","64600c50":"train_data.describe()","1f7f7ffb":"X_train = train_data.drop(['Survived'], axis = 1)","c4130bd1":"Y_train = train_data['Survived']","67f99320":"raw_test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","d98d26da":"raw_test_data","c314ca1c":"test_data = raw_test_data.drop(['PassengerId', 'Name', 'Age', 'Ticket', 'Cabin', 'Embarked'], axis = 1)","ec795b81":"test_data","f1680eed":"test_data['Family_size'] = test_data['SibSp'] + test_data['Parch']","94ce12c5":"test_data","89a236a9":"test_data['Sex'] = test_data['Sex'].map({'female':1, 'male':0})","2822d38d":"test_data","c7ccec9d":"test_data.describe()","bdb51271":"test_data = test_data.fillna(test_data.mean())","58d509ac":"test_data","fb487b7a":"X_test = test_data.drop(['SibSp', 'Parch'], axis = 1)","90f2d98e":"from sklearn.model_selection import train_test_split\n\nX_train_mod, X_test_mod, Y_train_mod, Y_test_mod = train_test_split(X_train, Y_train, test_size=0.20)","689660f5":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(X_train_mod)\n\nX_train_mod = scaler.transform(X_train_mod)\nX_test_mod = scaler.transform(X_test_mod)","b3838a9c":"from sklearn.neighbors import KNeighborsClassifier\n\nmodel = KNeighborsClassifier(n_neighbors=5)\nmodel.fit(X_train_mod, Y_train_mod)","669dedbb":"Y_pred = model.predict(X_test_mod)","27da06d7":"from sklearn.metrics import classification_report, confusion_matrix\n\nprint(confusion_matrix(Y_test_mod, Y_pred))\nprint(classification_report(Y_test_mod, Y_pred))","5ec19543":"Predicted = model.predict(X_test)","2b3ecf2b":"output = pd.DataFrame({'PassengerId': raw_test_data.PassengerId, 'Survived': Predicted})\noutput.to_csv('my_submissionKNN.csv', index=False)\nprint(\"Your submission was successfully saved!\")","e7032bf4":"Feature Scaling","b412afcf":"Evaluation","cc3f411d":"Train dataset import and preprocessing","932708f0":"KNN Algorithm","dd0ee138":"Test dataset import and preprocessing","8a31db47":"Splitting the dataset","fa0fcf6a":"Output in csv"}}