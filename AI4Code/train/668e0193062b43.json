{"cell_type":{"5e87a13a":"code","ebbb9082":"code","f775068d":"code","4db20f02":"code","d37961cc":"code","49d2fb51":"code","6194811e":"code","d1e8a2c1":"code","118446d6":"code","8e379753":"code","bee75dad":"code","da8873d6":"code","72906f2c":"code","af809110":"code","2b11bb68":"code","ac0f3d06":"code","8efb1e82":"code","c0ff5515":"code","55fd2762":"code","1f862bcc":"code","c2c5c51d":"code","4c276029":"code","f037bd54":"code","04520158":"code","0ba4442b":"code","6eba5c60":"code","a81da40c":"code","696e004a":"code","ee0eddb7":"code","cad10c57":"code","604a740b":"code","7ca6058d":"code","dfe0ff77":"code","4611eef1":"code","7b16a357":"code","0879b331":"code","9480c514":"code","c77fb2ac":"code","28e88b69":"code","21b0d323":"code","6928fa21":"code","6c46934c":"code","e479c7f1":"code","47437b25":"code","aba6818b":"code","ca387d0d":"code","20e5d403":"code","3e95adcb":"code","5372180a":"code","d8f4f511":"code","cfc266ac":"code","2ac78241":"code","de3b6115":"code","e5330b63":"code","d3a218c8":"code","148e00d1":"code","c6f00139":"code","d48e0946":"code","435a28d8":"code","355d2e70":"code","aec201fd":"code","2e84e929":"code","e181717e":"code","b54e8e89":"code","fc718562":"code","8c251cab":"code","ec15ca39":"code","3eda311b":"code","b9c9501e":"code","90f8ccb7":"code","798a1357":"code","ab0e6dcd":"code","42a9bfc6":"code","326d1145":"code","6936d050":"markdown","86b4942a":"markdown","88a660e1":"markdown","3ffd58b7":"markdown","cefc8d56":"markdown","8c70e712":"markdown","6c6c1166":"markdown","43036702":"markdown","faed923d":"markdown","e28c17b0":"markdown","10c6b342":"markdown","01eafec9":"markdown","f6178cfa":"markdown","dae07b2c":"markdown","73ee49cf":"markdown","f89301c8":"markdown","50aa04b5":"markdown","b6453776":"markdown","2df9874d":"markdown","e3140724":"markdown","d4c8b71b":"markdown","5cfb121d":"markdown","5227f982":"markdown"},"source":{"5e87a13a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ebbb9082":"oil_df = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/oil.csv\")\nholidays_df = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/holidays_events.csv\")\nstores_df = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/stores.csv\")\ntrain_df = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/test.csv\")\ntransactions_df = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/transactions.csv\")","f775068d":"train_df.head()","4db20f02":"test_df.head()","d37961cc":"oil_df.head()","49d2fb51":"holidays_df.head()","6194811e":"stores_df.head()","d1e8a2c1":"transactions_df.head()","118446d6":"train_df.isnull().sum()","8e379753":"train_df.duplicated().sum()","bee75dad":"round(train_df.describe(), 2)","da8873d6":"train_df.id.nunique()","72906f2c":"round(train_df.sales.describe(), 2)","af809110":"train_df.info()","2b11bb68":"train_df.date = pd.to_datetime(train_df.date)","ac0f3d06":"plt.figure(figsize=(15,8))\nplt.plot(train_df.date, train_df.sales)\nplt.show()","8efb1e82":"months_sales = train_df.groupby(train_df['date'].dt.strftime('%B'))['sales'].sum().sort_values()","c0ff5515":"plt.figure(figsize=(15,8))\nplt.plot(months_sales)\nplt.title(\"the sales by month\", fontsize=15)\nplt.xlabel(\"the month\", fontsize=13)\nplt.ylabel(\"the sales\", fontsize=13)\nplt.show()","55fd2762":"plt.figure(figsize=(15,8))\ntrain_df.groupby(pd.Grouper(key='date', freq='2D')).sum()['sales'].plot()\nplt.ylabel(\"the sales\", fontsize=15)\nplt.show()","1f862bcc":"plt.figure(figsize=(10,8))\ntrain_df.groupby(pd.Grouper(key='date', freq='1Y')).sum()['sales'].plot()\nplt.title(\"the sales per year\", fontsize=15)\nplt.ylabel(\"the sales\", fontsize=15)\nplt.show()","c2c5c51d":"train_df.head(2)","4c276029":"plt.figure(figsize=(15, 8))\ntrain_df.groupby(\"family\")['family'].count().plot(kind='bar')\nplt.title(\"the count of each family sales\", fontsize=15)\nplt.show()","f037bd54":"months_pormotions = train_df.groupby(train_df['date'].dt.strftime('%B'))['onpromotion'].sum().sort_values()","04520158":"plt.figure(figsize=(15,8))\nplt.plot(months_pormotions)\nplt.title(\"the pormotions by month\", fontsize=15)\n\nplt.xlabel(\"the month\", fontsize=13)\nplt.ylabel(\"the pormotions\", fontsize=13)\nplt.show()","0ba4442b":"plt.figure(figsize=(10,8))\ntrain_df.groupby(pd.Grouper(key='date', freq='1Y')).sum()['onpromotion'].plot()\nplt.title(\"the promotion per year\", fontsize=15)\nplt.ylabel(\"the promotions\", fontsize=15)\nplt.show()","6eba5c60":"stores_sales = train_df.groupby('store_nbr')['sales'].sum()","a81da40c":"stores_sales.sort_values(inplace=True)","696e004a":"round(stores_sales, 2)","ee0eddb7":"plt.figure(figsize=(10, 8))\nstores_sales[-10:].plot(kind='bar')\nplt.title(\"The top 10 sales per store\", fontsize=15)\nplt.xlabel(\"the store\")\nplt.ylabel(\"the sales\")\nplt.show()","cad10c57":"stores_df.info()","604a740b":"stores_df.head(2)","7ca6058d":"sales_nums = stores_sales.index","dfe0ff77":"top_stores = sales_nums[-10:]","4611eef1":"cities = []\ni = 0\nfor city in stores_df.city:\n    if stores_df.store_nbr[i] in  top_stores:\n        cities.append(stores_df.city[i])\n    i += 1","7b16a357":"cities","0879b331":"cities = np.array(cities)\ncities = pd.Series(cities)","9480c514":"cities.hist()\nplt.title(\"the freq of top sales stores per city\")\nplt.ylabel(\"the count of top stores on the city\")\nplt.show()","c77fb2ac":"train_df.date = pd.to_numeric(train_df.date)","28e88b69":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.preprocessing import LabelEncoder","21b0d323":"le = LabelEncoder()\ntrain_df.family = le.fit_transform(train_df.family)","6928fa21":"train_df.head(2)","6c46934c":"X = train_df.drop(['sales', 'id', 'date'], axis = 1).values\ny = train_df.sales.values","e479c7f1":"X.shape","47437b25":"y.shape","aba6818b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=42)","ca387d0d":"regressor = DecisionTreeRegressor(max_depth=5, max_leaf_nodes=12, random_state=42)","20e5d403":"regressor.fit(X_train, y_train)","3e95adcb":"regressor.score(X_train, y_train)","5372180a":"regressor.score(X_test, y_test)","d8f4f511":"plt.scatter(train_df.onpromotion, train_df.sales)","cfc266ac":"train_df.corr()","2ac78241":"# from sklearn.linear_model import LinearRegression","de3b6115":"# regressor = LinearRegression()","e5330b63":"# train_df.iloc[:,-1:]","d3a218c8":"# X = train_df.iloc[:,-1:].values\n# y = train_df.sales.values","148e00d1":"# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=42)","c6f00139":"# regressor.fit(X_train, y_train)","d48e0946":"# regressor.score(X_test, y_test)","435a28d8":"import xgboost as xg","355d2e70":"xgb_r = xg.XGBRegressor(objective ='reg:linear',\n                  n_estimators = 10, seed = 123, max_depth=10)","aec201fd":"xgb_r.fit(X_train, y_train)","2e84e929":"xgb_r.score(X_test, y_test)","e181717e":"test_df.head(2)","b54e8e89":"test_df.family = le.fit_transform(test_df.family)","fc718562":"test_df.head(2)","8c251cab":"X = test_df.drop([\"id\", \"date\"], axis=1).values\nX.shape","ec15ca39":"X[0]","3eda311b":"# predictions = regressor.predict(X)","b9c9501e":"predictions = xgb_r.predict(X)","90f8ccb7":"test_df['sales'] = predictions","798a1357":"test_df.head(2)","ab0e6dcd":"test_df.drop(['store_nbr', 'family', 'onpromotion', 'date'], axis=1, inplace=True)","42a9bfc6":"test_df.head(2)","326d1145":"test_df.to_csv('submission.csv', index=False)\nprint(\"submission successed\")","6936d050":"> # Read the data","86b4942a":"**Group pormotions by year**","88a660e1":"> **The sales per store**","3ffd58b7":"> XGBosst Regressor","cefc8d56":"> **Sales decreased after 2016**","8c70e712":"**Group on-pormotion by month**","6c6c1166":"> ALL has the same count","43036702":"> **The top sales per city**","faed923d":"> #   Modeling","e28c17b0":"> **Linear Regression**","10c6b342":"> **train and test data frame are the same features except sales in train data**","01eafec9":">**Stores data frame EDA** ","f6178cfa":"> # Predictions ","dae07b2c":"> **Sales Per year**","73ee49cf":"> DS tree regressor","f89301c8":"> **The top 10 sales per store**","50aa04b5":"> **DecisionTreeRegressor**","b6453776":"> **What's the most sales family**","2df9874d":"> Score: 59","e3140724":" > **Wrangle the train data frame**","d4c8b71b":"> # EDA","5cfb121d":"> **Group Sales by month**","5227f982":"> **XGBoost Regressor**"}}