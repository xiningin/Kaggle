{"cell_type":{"523aaa68":"code","560a6db3":"code","5df87f2d":"code","1e7ce352":"code","9e683da8":"code","5c4c5972":"code","736d8abe":"code","f6bb0158":"code","c257eb7a":"code","108b88d0":"code","7b1bd32e":"code","71eec1bb":"code","4939ccf4":"code","e76b2e20":"code","32cd016c":"code","e6b738a7":"code","fc08339d":"markdown","e7a1aae0":"markdown"},"source":{"523aaa68":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","560a6db3":"with open(\"..\/input\/alice_wonderland.txt\", 'r') as file:\n    text_file = file.read().lower()","5df87f2d":"len(text_file)","1e7ce352":"vocab = sorted(set(list(text_file)))","9e683da8":"cart_to_id = {c: i for i, c in enumerate(vocab)}\nid_to_char = {i: c for i, c in enumerate(vocab)}","5c4c5972":"x_data = []\ny_data = []\n\nmaxlen = 40\n\nstep = 3\n\nfor i in range(0, len(text_file) - maxlen - 1, step):\n    x_aux = [cart_to_id[c] for c in text_file[i: i + maxlen]]\n    y_aux = cart_to_id[text_file[i + maxlen]]\n    \n    x_data.append(x_aux)\n    y_data.append(y_aux)","736d8abe":"from keras.utils import to_categorical","f6bb0158":"x_data = to_categorical(x_data, num_classes=47)\ny_data = to_categorical(y_data, num_classes=47)","c257eb7a":"x_data.shape, y_data.shape","108b88d0":"from keras.layers import *\nfrom keras.models import *\nfrom keras.optimizers import *","7b1bd32e":"input_node = Input(shape=(maxlen, len(vocab)))\nlstm_0 = LSTM(128)(input_node)\n\noutput = Dense(len(vocab), activation='softmax')(lstm_0)\n\nmodelo = Model(input_node, output)","71eec1bb":"modelo.summary()","4939ccf4":"modelo.compile(Adam(lr=0.01), loss='categorical_crossentropy')","e76b2e20":"modelo.fit(x_data, y_data, epochs=5)","32cd016c":"import sys","e6b738a7":"next_chars = 1000\nr = np.random.randint(0, len(text_file) - maxlen - 1)\nseed = text_file[r:r+maxlen]\nprint('Seed inicial: {}'.format(seed))\n\nfor i in range(next_chars):\n    x_pred = [cart_to_id[c] for c in seed]\n    x_pred = np.array(x_pred).reshape(1, len(x_pred))\n    x_pred = to_categorical(x_pred, num_classes=47)\n    \n    y_pred = modelo.predict(x_pred)\n    next_char = id_to_char[np.argmax(y_pred)]\n    \n    sys.stdout.write(next_char)\n    \n    seed = seed[1:] + next_char","fc08339d":"<h2>Prediction<\/h2>","e7a1aae0":"for a better accuracy set a higher epoch value"}}