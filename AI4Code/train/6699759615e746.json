{"cell_type":{"fadd130a":"code","f4ee4a51":"code","61da444f":"code","df1f0999":"code","06688d91":"code","c6c1e72a":"code","aceffd0d":"code","3dc512ca":"code","ce65269b":"code","18ba898a":"code","91ec66a7":"code","c7c474d9":"code","6ea6d540":"code","1eaf5c4e":"code","57b65d52":"code","4685fa5c":"code","22b26a6a":"code","883b0ced":"code","1d6a2c1d":"code","569286a7":"code","05f42fec":"code","9fa42993":"code","628d3197":"markdown","1b44c802":"markdown","659e008f":"markdown","64953f28":"markdown","3c348cfe":"markdown","85c1ca96":"markdown","9b4fd335":"markdown","3a8680a1":"markdown","e1dcb969":"markdown"},"source":{"fadd130a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4ee4a51":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.linear_model import LogisticRegression, Perceptron, SGDClassifier\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import  DecisionTreeClassifier","61da444f":"data_train = pd.read_csv('\/kaggle\/input\/fires-from-space-australia-and-new-zeland\/fire_archive_M6_96619.csv', skipinitialspace=True)\ndata_train.head()","df1f0999":"data_train['brightness'].hist(bins=20)","06688d91":"data_train['brightness'].quantile([0, 0.25, .75, .9])","c6c1e72a":"data_train['longitude'].quantile([0, 0.25, .75, .9])","aceffd0d":"data_train['latitude'].quantile([0, 0.25, .75, .9])","3dc512ca":"def bright_categorize(brightness):\n     \n    if brightness < 316.5:\n        return 'low'\n    elif 336.7 <= brightness <= 351.0:\n        return 'High'\n    else:\n        return 'Extreme'\n\ndata_train['brightness'] = data_train['brightness'].fillna(data_train['brightness'].mean())\ndata_train['longitude'] = data_train['longitude'].fillna(data_train['longitude'].mean())\ndata_train['latitude'] = data_train['latitude'].fillna(data_train['latitude'].mean())\ndata_train['brightness_temperature'] = data_train['brightness'].apply(bright_categorize)","ce65269b":"sns.barplot(x='brightness_temperature', y='latitude', data=data_train)","18ba898a":"sns.barplot(x='brightness_temperature', y='longitude', data=data_train)","91ec66a7":"def area_categorize(longitude, latitude):\n    \n    if longitude < 122.8051765 or -30.000233 < latitude < -25.760321:\n        return 'Western australia'\n    elif 122.8051765 < longitude < 132.551000 or -20.917574 < latitude < 19.4914:\n        return 'Northern territory'\n    elif 132.551000 < longitude < 136.209152 or -31.840233 < latitude < -30.000233:\n        return 'South Australia'\n    elif 144.964600 < longitude < 145.612793 or -37.020100 < latitude < -31.840233:\n        return 'New south wales'\n    elif 142.702789 < longitude < 144.964600 or latitude < -37.020100:\n        return 'Victoria'\n    elif 136.209152 < longitude < 142.702789 or -25.760321 < latitude < -20.917574:\n        return 'Queensland'\n    else:\n        return 'Unidentified'\n\ndf = pd.DataFrame(data_train)\ndf_train = pd.DataFrame(df, columns = ['brightness_temperature', 'daynight', 'brightness']) \ndf_train['Area of Fire'] = df.apply(lambda x: area_categorize(x['longitude'], x['latitude']), axis=1)\ndf_train.head()","c7c474d9":"sns.barplot(x='brightness', y='Area of Fire', data=df_train)","6ea6d540":"import folium\nm3 = folium.Map(location=[-38.043995, 145.264296], tiles='cartodbdark_matter', zoom_start=4)\n\nfor i in range(0,3000):\n    df.loc[i, 'brightness']\n    def color_producer(val):\n        if val < 325 :\n            return 'red'\n        else:\n            return 'orange'\nfor i in range(0,3000):\n\tfolium.Circle(location=[df.iloc[i]['latitude'], df.iloc[i]['longitude']], radius=120*df.iloc[i]['brightness'], color=color_producer(df.iloc[i]['brightness'])).add_to(m3)\nm3","1eaf5c4e":"sns.factorplot(y='Area of Fire', kind='count', hue='Area of Fire', data=df_train)","57b65d52":"sns.barplot(x='daynight', y='brightness', data=df_train)","4685fa5c":"def preproccesing_data(df):\n    df['brightness_temperature'] = df['brightness_temperature'].map({'low':0, 'High':1, 'Extreme':2})\n    df['Area of Fire'] = df['Area of Fire'].map({'Western australia':0, 'Queensland':1, 'South Australia':2, 'New south wales':3, 'Northern territory':4, 'Victoria':5})\n    df['daynight'] = df['daynight'].replace(['D'], 0)\n    df['daynight'] = df['daynight'].replace(['N'], 1)\n    return df_train\n\n\ntrain_final = preproccesing_data(df_train)\ntrain_final","22b26a6a":"\nX_train = train_final.drop(\"Area of Fire\", axis=1).fillna(0)\nY_train = train_final[\"Area of Fire\"]\nX_test  = test_final.copy()\nX_train.shape, Y_train.shape, X_test.shape","883b0ced":"knn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(X_train, Y_train)\nY_pred = knn.predict(X_train)\nacc_knn = round(knn.score(X_train, Y_train) * 100, 2)\nacc_knn","1d6a2c1d":"svc = SVC()\nsvc.fit(X_train, Y_train)\nY_pred = svc.predict(X_train)\nacc_svc = round(svc.score(X_train, Y_train) * 100, 2)\nacc_svc","569286a7":"random_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, Y_train)\nY_pred = random_forest.predict(X_train)\nrandom_forest.score(X_train, Y_train)\nacc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\nacc_random_forest","05f42fec":"logreg = LogisticRegression()\nlogreg.fit(X_train, Y_train)\nY_pred = logreg.predict(X_train)\nacc_log = round(logreg.score(X_train, Y_train) * 100, 2)\nacc_log","9fa42993":"sgd = SGDClassifier()\nsgd.fit(X_train, Y_train)\nY_pred = sgd.predict(X_train)\nacc_sgd = round(sgd.score(X_train, Y_train) * 100, 2)\nacc_sgd","628d3197":"## day and night fires","1b44c802":"### SVC","659e008f":"## Logistic Regression","64953f28":"### area with most fire","3c348cfe":"### Brightness in area","85c1ca96":"### KNeighbors","9b4fd335":"disini, saya membagi area kebakaran australia dari data longitude & latitude","3a8680a1":"### Predicition","e1dcb969":"## random forest"}}