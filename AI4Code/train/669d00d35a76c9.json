{"cell_type":{"81812c0b":"code","e6989c93":"code","3fb707ef":"code","8bc7b1ae":"code","7815a350":"code","53c0ed01":"code","1df81619":"code","84377ffa":"code","af9def72":"code","8859636b":"code","248bc4a6":"code","2dcd1a87":"code","ece0b506":"markdown","afc25366":"markdown","e9534566":"markdown"},"source":{"81812c0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6989c93":"df = pd.read_csv('\/kaggle\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')","3fb707ef":"df.info()","8bc7b1ae":"X = df.iloc[:,:-1].values\nY = df.iloc[:, -1].values","7815a350":"from sklearn.model_selection import train_test_split as split\nX_train,X_test,Y_train,Y_test = split(X, Y, test_size = 0.2, random_state = 0)","53c0ed01":"from sklearn.linear_model import LinearRegression\nlin = LinearRegression()\nlin.fit(X_train,Y_train)","1df81619":"Y_pred = lin.predict(X_test)","84377ffa":"Y_pred","af9def72":"print('Y_test  ------  Y_pred')\nfor i,j in zip(Y_test,Y_pred):\n    print(f'{i} ---- {j}\\n')","8859636b":"plt.scatter(X_train,Y_train,color = 'Red')\nplt.plot(X_train,lin.predict(X_train),color = 'blue')","248bc4a6":"plt.scatter(X_test,Y_test,color = 'Red')\nplt.plot(X_train,lin.predict(X_train),color = 'magenta')","2dcd1a87":"from sklearn.metrics import r2_score\n# to calculate the accuracy of the model out of 1 or 100 %\nprint(f'accuracy is {r2_score(Y_test, Y_pred)} %')","ece0b506":"# Calculating the accuracy\n","afc25366":"# Plotting the trained model","e9534566":"# Plotting the model with the test data\n"}}