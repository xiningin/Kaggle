{"cell_type":{"cd19f40f":"code","c0765282":"code","84dcd00e":"code","8b8078f1":"code","f59a0e28":"code","8d7aa3e2":"code","9246c049":"code","664be576":"code","9bb89274":"code","d58266cd":"code","f1b64da8":"code","d072b493":"code","faab2842":"code","1187ffa8":"code","37ad7ee5":"code","c7390f6c":"code","ac035259":"code","316d7b77":"code","5dc0b2ae":"code","980ee428":"code","bcde0a62":"code","d8ef1d93":"code","a80fe3ee":"code","ece45c24":"code","3df64e1e":"code","3580377e":"code","7db9da14":"code","dbd24100":"code","c56f7f96":"code","f83080f4":"code","e94c5819":"code","8db462e8":"code","3f43b4c8":"code","e9ae2535":"code","3dde378c":"code","6fd6771a":"code","4ce084f3":"code","4f45fcec":"code","0f1c9443":"code","6155cdf3":"code","6aeb7cc2":"code","21985286":"code","404adeae":"code","cd80ed1c":"code","e1fdc7a8":"code","71abc6b4":"code","3d72baf1":"code","8a1467f0":"code","e1f89991":"code","151929e3":"code","5369fbe5":"code","f5477295":"markdown","5ec509a5":"markdown","8dbffb3f":"markdown","bce16fe7":"markdown","e68daf67":"markdown","efa61e34":"markdown","e14c7641":"markdown","0328aa4b":"markdown","dada9da9":"markdown","f3b4c4ae":"markdown","bc8b5b5d":"markdown","2949eed7":"markdown","c29f7210":"markdown","a2a9ef6d":"markdown","b6b1636f":"markdown","bd179b86":"markdown","c8e8aed5":"markdown","f0d0bff1":"markdown","5e9dc090":"markdown","dbbfadb6":"markdown","eed6e408":"markdown","a7660366":"markdown","3b469ec6":"markdown","2b9c6634":"markdown","35783c91":"markdown","becd6a0c":"markdown","20875a77":"markdown","63db205b":"markdown","62b6dc4a":"markdown","fda4e655":"markdown","eca1d1d8":"markdown","cc988e75":"markdown","3e0c5378":"markdown","db74f2c3":"markdown","d3799daa":"markdown","4427561a":"markdown"},"source":{"cd19f40f":"# import required modules\nimport urllib\nimport os\n\nfrom datetime import timedelta, date\nfrom dateutil.relativedelta import relativedelta\n\nfrom zipfile import ZipFile\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","c0765282":"# set plot style\nsns.set()","84dcd00e":"# making a list of months from Oct 2020 to Sept 2021.\nOneMon = relativedelta(months = 1)\nmon_date = date(2020,10,1)\nmon_str = mon_date.strftime(\"%Y%m\")\nmon_list = []\nwhile mon_str != \"202110\":\n    mon_list.append(mon_str)\n    mon_date = mon_date + OneMon\n    mon_str = mon_date.strftime(\"%Y%m\")\n","8b8078f1":"csv_list = [\"..\/input\/d\/raymondmutyaba\/divvytripdata\/\" + m + \"-divvy-tripdata\/\" + m + \"-divvy-tripdata.csv\"  for m in mon_list]\ncsv_list","f59a0e28":"df_list = [pd.read_csv(csv) for csv in csv_list]","8d7aa3e2":"# fisrt look for each file\nfor csv, df in zip(csv_list, df_list):\n    print(csv)\n    df.info()\n    print('='*80+'\\n')","9246c049":"# data range consistency \nfor df in df_list:\n    first_day = pd.to_datetime(df.started_at).min()\n    last_day = pd.to_datetime(df.started_at).max()\n    print(first_day, last_day)","664be576":"# comparing the column names\ncol_names = df_list[0].columns \nfor i, df in enumerate(df_list):\n    mes = '''{}. Same column name: {} '''.format(i, df.columns.equals(col_names))\n    print(mes)","9bb89274":"\ndf_tot = pd.DataFrame()\nfor df in df_list:\n    df_tot = df_tot.append(df, ignore_index = True)","d58266cd":"df_tot.info()","f1b64da8":"# data type: the data type of 'started_at' and 'ended_at' columns should be datetime \ndf_tot['started_at'] = pd.to_datetime(df_tot.started_at)\ndf_tot['ended_at'] = pd.to_datetime(df_tot.ended_at)","d072b493":"# count missing values for each column\nfor col in df_tot.columns:\n    info = '{col_name} missing values: {na_number}\\n'.format(col_name=col,\n                                                        na_number=df_tot[col].isna().sum())\n    print(info)","faab2842":"# dupplicated row\ndf_tot.duplicated().sum()","1187ffa8":"# dupplicated row: subset=['ride_id', 'started_at']\ndf_tot.duplicated(subset=['ride_id', 'started_at']).sum()","37ad7ee5":"rides = df_tot[['ride_id', \n                'started_at', \n                'ended_at',\n                'member_casual']].reset_index(drop=True)\nrides.info()","c7390f6c":"# calulate the trip duration, assign to column 'ride_length'\nrides['ride_length'] = rides.ended_at - rides.started_at\n\n# notice the negtive values of the minimum of ride_length\nrides.describe(datetime_is_numeric=True)","ac035259":"# count the negative values in ride_length\ntimedelta(0)\nneg_duration = rides.ride_length < timedelta(minutes=0)\nneg_duration.sum()","316d7b77":"# filter out the negative values in ride_length\nrides = rides.loc[~neg_duration,:].reset_index(drop=True)\nrides.describe(datetime_is_numeric=True)","5dc0b2ae":"# Connvert ride_length to the unit of seconds, assign to 'riding_seconds'\nrides['riding_seconds'] = rides.ride_length.dt.total_seconds()\n\n# New columns: day_of_week\/quarter\/month\nrides['day_of_week'] = rides.started_at.dt.day_name()\nrides['quarter'] = rides.started_at.dt.quarter\nrides['month'] = rides.started_at.dt.month","980ee428":"# organising the data frme by reindexing\nrides = rides.reindex(columns=['ride_id', \n                               'started_at', \n                               'quarter', \n                               'month',\n                               'day_of_week',\n                               'member_casual', \n                               'ride_length', \n                               'riding_seconds'])\nrides.info()","bcde0a62":"ride_counts = rides.groupby('member_casual')['member_casual'].count()\nride_counts","d8ef1d93":"# color for consistency\nplt.bar(x=ride_counts.index,\n        height=ride_counts.values,\n        color=['#4C72B0','#DD8452',])\n\nfor x, y, label in zip(plt.xticks()[0], ride_counts.values, ride_counts.values):\n    label = '{:,} trips'.format(label)\n    plt.text(x-0.25,y+100000,label)","a80fe3ee":"# export the summary\nride_counts.to_csv('ride_counts.csv')","ece45c24":"rides.groupby('member_casual')[['ride_length']].describe()\n","3df64e1e":"# result: too many outliers\nsns.catplot(data=rides[['member_casual', 'riding_seconds']], \n            x='member_casual', \n            y='riding_seconds', \n            kind= 'box')\n","3580377e":"# look for proper y-limit\n# 95% trips are less than 6000 seconds, which shoud be a good choice as y-limit.\nmember_len_describe = rides.groupby('member_casual')[['riding_seconds']].describe(percentiles=[0.25, 0.5, 0.75, 0.95])\nmember_len_describe","7db9da14":"# export the summary\nmember_len_describe.to_csv('member_len_describe.csv')","dbd24100":"# get the mean and median values\nrides_info = rides.groupby('member_casual')['riding_seconds'].agg(['mean', 'median', 'max'])\nrides_info","c56f7f96":"sns.catplot(data=rides[['member_casual', 'riding_seconds']], \n            x='member_casual', \n            y='riding_seconds',\n            showmeans = True,\n            kind= 'box')\n\n# restric the range of y\nplt.ylim(-100,6000)\n# label the mean and median\nfor c, pos in zip(['mean', 'median'],[200, -200]):\n    for x, y, label in zip(plt.xticks()[0], \n                           rides_info[c].values,\n                           rides_info[c].values): # shift the y-position\n        label = '{}: {:,.0f}'.format(c, label)\n        plt.text(x+0.1,\n                 y+pos,\n                 label,\n                 horizontalalignment='center',\n                 bbox={'facecolor':'w','alpha':0.5})\n# annotate the max values\nfor x, y, label in zip(plt.xticks()[0], \n                           [6000, 6000],\n                           rides_info['max'].values): # shift the y-position\n        \n        label = '(max: {:,.0f})'.format(label)\n        plt.text(x+0.1,\n                 y+pos,\n                 label,\n                 horizontalalignment='center',\n                 bbox={'facecolor':'w','alpha':0.5})","f83080f4":"# get the required subset from data frame\ndow = rides[['member_casual', 'day_of_week', 'riding_seconds']]\ndow.info()","e94c5819":"pd.set_option('precision',2)\ndow_summary = dow.groupby(['day_of_week', 'member_casual']).agg(['mean', 'median','max', 'count']).droplevel(0, axis=1).reset_index(level=1)\n\n# convert week day to categorical for sorting\ncats = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndow_summary.index = pd.Categorical(dow_summary.index, categories=cats, ordered=True)\ndow_summary.sort_index(inplace=True)\ndow_summary","8db462e8":"# export the summary\ndow_summary.to_csv('dow_summary.csv')","3f43b4c8":"fig, axes = plt.subplots(4,1, figsize=(8,30))\n# bar chart for trip counts\nsns.barplot(x=dow_summary.index,\n            y='count',\n            hue='member_casual',\n            hue_order=['casual', 'member'],\n            data=dow_summary,\n            ax=axes[0])\naxes[0].set_title('Trip Number By Day Of Week')\naxes[0].set_ylabel('number of trips')\n\n# bar charts: mean, median, and max values of trip durations\nfor i, m in enumerate(['mean', 'median', 'max']):\n    i +=1\n    sns.barplot(data=dow_summary, \n                     x=dow_summary.index,\n                     y=m,\n                     hue='member_casual',\n                     ci=None,\n                     ax=axes[i])\n    axes[i].set_title(\"{} Riding Length By Day Of Week\".format(m.title()))\n    axes[i].set_ylabel('seconds')\n\nplt.subplots_adjust(hspace=0.2)\nplt.show()","e9ae2535":"rides[['member_casual', \n       'day_of_week',\n       'riding_seconds',\n       'ride_length']].describe(datetime_is_numeric=True,percentiles=[0.75, 0.95])","3dde378c":"# get the required subset from data frame\nupper = rides.riding_seconds.quantile(0.95)\ntrim95 = rides.loc[rides.riding_seconds.between(0, upper)]\ndow95 = trim95[['member_casual', 'day_of_week', 'riding_seconds']]\ndow95.describe()","6fd6771a":"dow95_summary = dow95.groupby(['day_of_week', 'member_casual']).agg(['mean', 'median','max', 'count']).droplevel(0, axis=1).reset_index(level=1)\n\n# convert week day to categorical for sorting\ncats = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndow95_summary.index = pd.Categorical(dow95_summary.index, categories=cats, ordered=True)\ndow95_summary.sort_index(inplace=True)\ndow95_summary","4ce084f3":"fig, axes = plt.subplots(4,1, figsize=(8,30))\n# bar chart for trip counts\nsns.barplot(x=dow95_summary.index,\n            y='count',\n            hue='member_casual',\n            hue_order=['casual', 'member'],\n            data=dow95_summary,\n            ax=axes[0])\naxes[0].set_title('Trip Number By Day Of Week')\naxes[0].set_ylabel('number of trips')\n\n# bar charts: mean, median, and max values of trip durations\nfor i, m in enumerate(['mean', 'median', 'max']):\n    i+=1\n    sns.barplot(data=dow95_summary, \n                     x=dow95_summary.index,\n                     y=m,\n                     hue='member_casual',\n                     ci=None,\n                     ax=axes[i])\n    axes[i].set_title(\"{} Riding Length By Day Of Week\".format(m.title()))\n    axes[i].set_ylabel('seconds')\n\n\nplt.subplots_adjust(hspace=0.2)\nplt.show()","4f45fcec":"# get the required subset from data frame\nmonths = rides[['member_casual', 'month', 'riding_seconds']]\nmonths.info()","0f1c9443":"months_summary = months.groupby(['month', 'member_casual']).agg(['mean', 'median','max', 'count']).droplevel(0, axis=1).reset_index(level=1)\n\nmonths_summary.sort_index()\nmonths_summary","6155cdf3":"# export the summary\nmonths_summary.to_csv('months_summary.csv')","6aeb7cc2":"fig, axes = plt.subplots(4,1, figsize=(12,30))\n# bar chart for trip counts\nsns.barplot(x=months_summary.index,\n            y='count',\n            hue='member_casual',\n            hue_order=['casual', 'member'],\n            data=months_summary,\n            ax=axes[0])\naxes[0].set_title('Trip Number')\naxes[0].set_ylabel('number of trips')\n# bar charts: mean, median, and max values of trip durations\nfor i, m in enumerate(['mean', 'median', 'max']):\n    i+=1\n    sns.barplot(data=months_summary, \n                     x=months_summary.index,\n                     y=m,\n                     hue='member_casual',\n                     ci=None,\n                     ax=axes[i])\n    axes[i].set_title(\"{} Riding Length\".format(m.title()))\n    axes[i].set_ylabel('seconds')\n\n\n\nplt.subplots_adjust(hspace=0.2)\nplt.show()","21985286":"upper = rides.riding_seconds.quantile(0.95)\nmonth95 = rides.loc[rides.riding_seconds.between(0, upper),\n                    ['member_casual', 'month', 'riding_seconds']]\nmonth95.describe()","404adeae":"month95_summary = month95.groupby(['month', 'member_casual']).agg(['mean', 'median','max', 'count']).droplevel(0, axis=1).reset_index(level=1)\n\nmonth95_summary.sort_index(inplace=True)\nmonth95_summary","cd80ed1c":"fig, axes = plt.subplots(4,1, figsize=(12,30))\n\nsns.barplot(x=month95_summary.index,\n            y='count',\n            hue='member_casual',\n            hue_order=['casual', 'member'],\n            data=month95_summary,\n            ax=axes[0])\naxes[0].set_title('Trip Number')\naxes[0].set_ylabel('number of trips')\n# bar charts: mean, median, and max values of trip durations\nfor i, m in enumerate(['mean', 'median', 'max']):\n    i+=1\n    sns.barplot(data=month95_summary, \n                 x=month95_summary.index,\n                 y=m,\n                 hue='member_casual',\n                 ci=None,\n                 ax=axes[i])\n    axes[i].set_title(\"{} Riding Length\".format(m.title()))\n    axes[i].set_ylabel('seconds')\n\n\n\nplt.subplots_adjust(hspace=0.2)\nplt.show()","e1fdc7a8":"# get the required subset from data frame\nquarters = rides[['member_casual', 'quarter', 'riding_seconds']]\nquarters.info()","71abc6b4":"quarters_summary = quarters.groupby(['quarter', 'member_casual']).agg(['mean', 'median','max', 'count']).droplevel(0, axis=1).reset_index(level=1)\n\nquarters_summary.sort_index()\nquarters_summary","3d72baf1":"# export the summary\nquarters_summary.to_csv('quarters_summary.csv')","8a1467f0":"fig, axes = plt.subplots(4,1, figsize=(10,30))\n# bar chart for trip counts\nsns.barplot(x=quarters_summary.index,\n            y='count',\n            hue='member_casual',\n            hue_order=['casual', 'member'],\n            data=quarters_summary,\n            ax=axes[0])\naxes[0].set_title('Trip Number')\naxes[0].set_ylabel('number of trips')\n\nfor i, m in enumerate(['mean', 'median', 'max']):\n    i+=1\n    sns.barplot(data=quarters_summary, \n                     x=quarters_summary.index,\n                     y=m,\n                     hue='member_casual',\n                     ci=None,\n                     ax=axes[i])\n    axes[i].set_title(\"{} Riding Length\".format(m.title()))\n    axes[i].set_ylabel('seconds')\n\n\n\nplt.subplots_adjust(hspace=0.2)\nplt.show()","e1f89991":"upper = rides.riding_seconds.quantile(0.95)\nqtr95 = rides.loc[rides.riding_seconds.between(0, upper),['member_casual', 'quarter', 'riding_seconds']]\n\nqtr95.describe()","151929e3":"qtr95_summary = qtr95.groupby(['quarter', 'member_casual']).agg(['mean', 'median','max', 'count']).droplevel(0, axis=1).reset_index(level=1)\n\nqtr95_summary.sort_index(inplace=True)\nqtr95_summary","5369fbe5":"fig, axes = plt.subplots(4,1, figsize=(10,30))\n# bar chart for trip counts\nsns.barplot(x=qtr95_summary.index,\n            y='count',\n            hue='member_casual',\n            hue_order=['casual', 'member'],\n            data=qtr95_summary,\n            ax=axes[0])\naxes[0].set_title('Trip Number')\naxes[0].set_ylabel('number of trips')\n\n# bar charts: mean, median, and max values of trip durations\nfor i, m in enumerate(['mean', 'median', 'max']):\n    i+=1\n    sns.barplot(data=qtr95_summary, \n                     x=qtr95_summary.index,\n                     y=m,\n                     hue='member_casual',\n                     ci=None,\n                     ax=axes[i])\n    axes[i].set_title(\"{} Riding Length\".format(m.title()))\n    axes[i].set_ylabel('seconds')\n\n\n\nplt.subplots_adjust(hspace=0.2)\nplt.show()","f5477295":"## Combining data frames\n\n**Section Summary**\n\nTasks:\n\nCheck the following subjects before combining the dataframes: \n- Date range in each data frame.\n- See if all data frames have the same columns, adjust names if needed.\nIf data structure of the data frames are consistent\n- Combine the data frames.\n\n---\nResult:\n- Date range is consistent for each dataframe.\n- All data frames have the same columns. \n- Combine the data frames into df_tot\n","5ec509a5":"# Processing data","8dbffb3f":"### \\[Task\\] Check data range (date)","bce16fe7":"# Recommandation\n\n1. Investigate why the maximums of ride length are so long.\n2. To answer: 'Why would casual riders buy Cyclistic annual memberships?'\n    - First we need to know why annual members buy membership, and why casual purchase the service.\n        - If the market team has the customer survey with the required information, we can go exploring.\n        - If not, we will need to survey customers.\n    - Then we might need the data of the public transportation location and weather in the period for further user behavior analysis.\n3. To answer: 'How can Cyclistic use digital media to influence casual riders to become members?'\n    - This will need the data from previous marketing activities for data analysis.\n    - Also need the knowledge and experience of the market team for the marketing strategy.\n","e68daf67":"### Whole range of trip duration\n\n**Section Summary**\n\nTask:\n1. Plot for the number of trips by quarter with separated user types.\n2. Plot for mean, median and max trip duration by quarter with separated user types.\n\n---\nResult:\n1. bar charts\n2. bar charts\n\n---\nConclusion:\n1. For the trip number:\n    - For both types of users, the trip numbers are high in the 2nd and the 3rd quarters. \n    - The 'member' trips are more than 'casual' trips except for the 3rd quater.\n2. For the means and medians of duration, plots show that\n    - 'casual' users ride longer than 'member' users.\n3. For the maximum of ride duration, the plot shows unreasonably long trips of 'casual' users.  ","efa61e34":"### Riding_seconds\n\n**Section Summary**\n\nTask: \nDraw box plots to explore the trip duration difference between 'casual' users and 'member' users. \n\n\n---\nResult:\n1. The box plot with the dataset shows a lot of outliers, unable to clarify differences.\n2. A zoom-in plot limiting the total riding seconds under 6,000 seconds shows clear difference\n---\nConclusion: \nThe trip duration of 'casual' users is higher than 'member' users. Higher in maximum, median and mean durations.","e14c7641":"Tha maximum durations seems too high.\n\ncalculate some quantiles for more information:","0328aa4b":"# Preparing data","dada9da9":"### Whole range of trip duration\n\n**Section Summary**\n\nTask:\n1. Plot for the number of trips by month with separated user types.\n2. Plot for mean, median and max trip duration by month with separated user types.\n\n---\nResult:\n1. bar charts\n2. bar charts\n\n---\nConclusions:\n1. For the trip number:\n    - For both types of users, the trip numbers increase from January to July and August, then decrease all the way to December. \n    - The 'member' trips are more than 'casual' trips except for June, July, and August. \n2. For the mean and median of duration, plots show that\n    - 'casual' users ride longer than 'member', while 'member' trip durations stay quite stable across the months, 'casual' users' trip durations vary a bit more.\n3. For the maximum of ride duration, the plot shows unreasonably long trips of 'casual' users. \n","f3b4c4ae":"## Trip number\n\n1. Generally, total 'member' trips are more than total 'casual' trips.\n2. Day of week distribution:\n    - The 'member' trips do not vary a lot\n    - The 'casual' trips noticeably increase during the weekend, even exceeding the \u2018member\u2019 trips on weekends.\n3. Month distribution:\n    - The 'member' trips are more than 'casual' trips except for June, July, and August. \n    - For both types of users, the trip numbers increase from January to July and August, then decrease all the way to December.\n4. Quarter distribution:\n    - The 'member' trips are more than 'casual' trips except for the 3rd quater.\n    - For both type users, the trip numbers are high in the 2nd and the 3rd quarters. This trend is consistent with the month - trips distribution.","bc8b5b5d":"## Duplicates\n\n**Section Summary**\n\nTasks: \nCheck if there exist duplicated records. Drop them if needed. \n\n---\nResult: \nFound no duplicated records.","2949eed7":"# Conclusions\nFrom the analysis above, the data reveal:\n\n\n\n1. **The 'member' trips are more -** \n    Because members ride more times, the decision to convert 'casual' to 'member' users is quite possible to increase the number of trips.\n\n2. **The casual users ride longer -** \n    Casual riders ride longer (30 minutes on average) could mean:\n    At least the riding is bearable or, even better, pleasant. The threshold is lower to convert casual users to annual members than to appeal to new customers.\n    \n3. **Members for commuting -**\n    Member trip number and average ride length are stable during a week. \n    It seems reasonable to imply that members ride for commuting.\n    \n4. **Casual users for pleasure -**\n    Because casual users ride longer, combining the fact of  the increasing trips on weekends, we could imply that casual users ride for fun and pleasure.\n\n\n","c29f7210":"# Insights\nNote: The following descriptions will only consider the whole duration data.\n\nDuring the analysis, I found the maximum duration values containing extremely long durations. There are 95% trips shorter than 2 hours, while the maximum lasts 38 days. \n\nConcerning the effect on showing the trends, I explored the data subset containing the whole duration range along with the subset which excluded the top 5% longest duration. \n\nThe plots (of trips, mean and median trip duration) show little difference with the two sets of data, and the smaller subset (which excluded top 5% long duration) show the same maximum since they are trimmed. \n\nIt seems reasonable to plot and summarize the whole range data subset without losing insights. So, the following descriptions will only consider the whole duration data for the number of trips,  the max, mean and median trip duration.\n","a2a9ef6d":"## 'Month' distribution\nFrom the experience of the previous analysis, the maximum values of trip duration might have too many outliers which would make the plots difficult to show the trends. So the data that exclude the top 5% trip duration will be plotted here as a comparison.","b6b1636f":"## Data types\n\n**Section Summary**\n\nTask: \nCheck data types for each column. Change data type if needed.\n\n---\nResult: \nThe data type of 'started_at' and 'ended_at' columns changed to 'datetime' from 'object'.","bd179b86":"### Trips by different user types\n\n**Section Summary**\n\nTask:\nDraw a plot to show the difference of trips between 'casual' users and 'member' users.\n\n----\nResult: The bar chart.\n\n----\nConclusion: The bar chart shows that the number of 'member' rides is more than 'casual' rides ","c8e8aed5":"### Whole range of trip duration\n\n**Section Summary**\n\nTask:\n1. Plot for the trips number by day of week with separated user types.\n2. Plot for mean, median and max trip duration by day of week with separated user types.\n\n---\nResult:\n1. Bar chart\n2. Bar charts\n\n---\nConclusion:\n1. For the trip number\n    - The 'casual' trips are more than 'member' trips on weekends.\n2. For the mean and median of duration, plots show that\n    - 'casual' users ride longer than 'member'.\n    - Both types of users ride longer on weekends, the riding durations of 'casual' users increase noticeably on weekends.\n3. For the maximum of ride duration, the plot shows unreasonably long trips of 'casual' users (all longer than 21 days). 95% of trips are less than 2 hours. I will investigate 95% of users\u2019 behaviors in the following process.","f0d0bff1":"# Case Study: Bike Sharing User Behavior Analysis\nThis is a case study for Google Data Analytics Capstone Project.\nFor the material of presentation, please go to [Google Slides](https:\/\/docs.google.com\/presentation\/d\/1fSwIVGjEdJw5tVQuqz_ZriSLjoeMYWrFXKO4oimc63k\/edit?usp=sharing).\n\n\n**Scenario:**\n\nCyclistic is a fictional bike-share company. The marketing team of Cyclistic would like to convert casual riders to annual membership. They set up the business objectives as follow:\n1. How do annual members and casual riders use Cyclistic bikes differently?\n2. Why would casual riders buy Cyclistic annual memberships?\n3. How can Cyclistic use digital media to influence casual riders to become members?\n\n\nMy fictional role is the data analyst in the marketing team. In order to help team leaders make a data-driven decision, my job is to find out the answer to the first question. ","5e9dc090":"### Excluded top 5% duration trips\n\n**Section Summary**\n\nExclude top 5% duration trips to see if any difference would occur.\n\nTask:\n1. Plot for the numbers of trips by day of week with separated user types.\n2. Plot for mean, median and max trip durations by day of week with separated user types.\n\n---\nResult:\n1. Bar chart\n2. Bar charts\n\n---\nConclusions:\n1. The trip number do not differ much from the whole range of trip duration data:\n    - The 'casual' trips are more than 'member' trips on weekends.\n\n2. The mean and median of duration do not differ much from the whole range of trip duration data too, plots show that\n    - 'casual' users ride longer than 'member'.\n    - Both types of users ride longer on weekends, the riding durations of 'casual' users increase noticeably on weekends.\n3. For the maximum of ride duration, plots are trimmed to the same maximum. \n    ","dbbfadb6":"###  \\[Task\\] Merging data frames","eed6e408":"## Read data\n","a7660366":"## Basic information","3b469ec6":"## Missing values\n\n**Section Summary**\n\nTask: Find out if there exist missing values.\n\n---\nResult: \nMissing values are found in the following columns.\n- start_station_name\n- start_station_id\n- end_station_name\n- end_station_id\n- end_lat\n- end_lng\n\n---\nConclusion:\nThe missing values are all related to the information of stations (names, ids and position). They could be filtered out if not suitable for the analysis.  ","2b9c6634":"Zoom-in: \n\nTo get a better view of the data set, limit the display of y-axis data range.","35783c91":"## About data\n- License: The data is public data, provided by Motivate International Inc, under the [license](https:\/\/www.divvybikes.com\/data-license-agreement).\n- Credibility: In the scenario, the data is the first-party data provided by Cyclistic. It is reliable, original and cited.\n- Effectiveness: The data contains required trip data, time range and user type. It is comprehensive and current for data analysis. \n- Data source: \n    - [divvy-tripdata](https:\/\/www.kaggle.com\/raymondmutyaba\/divvytripdata) shared by [Raymond Mutyaba](https:\/\/www.kaggle.com\/raymondmutyaba) \n    - or [download here](https:\/\/divvy-tripdata.s3.amazonaws.com\/index.html)\n- Data range: the data used in this case study is from Oct 2020 to Sept 2021.","becd6a0c":"## 'Quarter' distribution\nFrom the experience of the previous analysis, the maximum values of trip duration might have too many outliers which would make the plots difficult to show the trends. So the data that exclude the top 5% trip duration will be plotted here as a comparison.","20875a77":"# Objectives:  How do annual members and casual riders use Cyclistic bikes differently?","63db205b":"### Excluded top 5% duration trips\n\n**Section Summary**\n\nExclude top 5% duration trips to see if any difference would occur.\n\n---\nTasks:\n1. Plot for the number of trips by month with separated user types.\n2. Plot for mean, median and max trip duration by month with separated user types.\n\n---\nResult:\n1. bar charts\n2. bar charts\n---\n\nConclusion:\n1. For the trip number: The trip number trend does not differ much from the whole range of trip duration data.\n    - For both types of users, the trip numbers increase from January to July and August, then decrease all the way to December. \n    - The 'member' trips are more than 'casual' trips except for July. \n\n2. For the mean and median of duration: The mean and median of duration do not differ much from the whole range of trip duration data too, plots show that\n    - 'casual' users ride longer than 'member', while 'member' trip durations stay quite stable across the months, 'casual' users' trip durations vary a bit more.\n\n3. For the maximum of ride duration, plots are trimmed to the same maximum. \n","62b6dc4a":"### \\[Task\\] Adding columns for analysing","fda4e655":"## Trip duration\n1. Generally, the mean, median, and max trip duration of 'casual' trips are higher tho 'member' trips.\n2. Day of week distribution:\n    - 'casual' users ride longer than 'member'.\n    - Both types of users ride longer on weekends, the riding durations of 'casual' users increase noticeably on weekends.\n    - The maximums of 'casual' trip durations are significantly higher than the maximums of 'member' trip durations. \n\n3. Month distribution:\n    - For the means and medians of duration, plots show that the means and medians of 'casual' trip durations are longer than the means and medians of 'member' trip durations. \n    - The maximums of 'casual' trip durations are significantly higher than the maximums of 'member' trip durations. \n4. Quarter distribution:\n    - For the means and medians of duration, plots show that the means and medians of 'casual' durations are longer than the means and medians of 'member' durations.\n    - The maximums of 'casual' trip durations are significantly higher than the maximums of 'member' trip durations. \n","eca1d1d8":"### \\[Task\\] Retrieve the subset of data frame","cc988e75":"## Organizing data\n\n**Section Summary**\n\nThe following analysis will focus on\n- Trip duration\n- Trip numbers\n- Date-related distribution \n\nwith regard to the user types. \n\nSo I will take the subset containing the information above from the original data. \n\n---\n\nTasks:\n1. Retrieve the required columns:\n'ride_id', 'started_at', 'ended_at','member_casual'\n\n2. Add new columns:\n- 'ride_length': calculate the trip duration and add the data as a new column 'ride_length'.\n- \u2018riding_seconds\u2019: convert the ride_length to total seconds for numeric analysis. \n- 'day_of_week': find the corresponding day of week for the date of 'started_at' , add the data as a new column 'day_of_week'.\n- 'month': find the corresponding month for the date of 'started_at' , add the data as a new column 'month'.\n- 'quarter': find the corresponding month for the date of 'started_at' , add the data as a new column 'quarter'.\n\n3. Clean, filter and sort the data frame if needed.\n\n---\nResult:\n1. Done.\n2. Done.\n3. While adding the trip duration column 'ride_length', some negative values in 'ride_length' are found. They are treated as errors and excluded from the data frame. The \u2018riding_seconds\u2019 are converted from the cleaned \u2018ride_length\u2019 column.","3e0c5378":"###  \\[Task\\] Comparing the column names","db74f2c3":"### Excluded top 5% duration trips\n\n**Section Summary**\n\nExclude top 5% duration trips to see if any difference would occurs.\n\n---\nTask:\n1. Plot for the number of trips by quarter with separated user types.\n2. Plot for mean, median and max trip duration by quarter with separated user types.\n\n---\nResult:\n1. bar charts\n2. bar charts\n\n---\nConclusion:\n\n1. For the trip number: \n    - For both types of users, the trip numbers are high in the 2nd and the 3rd quarters. \n    - The 'member' trips are more than 'casual' trips.\n\n2. For the mean and median of duration: \n    - 'casual' users ride longer than 'member' users.\n3. For the maximum of ride durations, plots are trimmed to the same maximum. ","d3799daa":"## 'Day of Week' distribution\n","4427561a":"# Analyzing data\nTo find out the difference of riding behaviors between the annual members (user type as \u2018member\u2019) and casual riders (user type as \u2018casual\u2019), I will focus on the numbers of  trips and trip durations, grouped by user types (column name \u2018member_casual). \n\nOnce the basic information is revealed by analysis above, I will go further to inspect the factors that might affect the distribution of  trips and durations.\n\n---\n- Step 1: Basic information. Grouped by user types ('member' and 'casual')\n    - Summarize the number of trips.\n    - Summarize trip duration.\n  \n---\n- Step 2: Further investigation. Grouped by user types ('member' and 'casual')\n    - Day of week distributions:\n        - For the number of trips\n        - For trip durations\n    - Month distributions:\n        - For the number of trips\n        - For trip durations          \n    - Quarter distributions:\n        - For the number of trips\n        - For trip durations"}}