{"cell_type":{"580eff15":"code","6a873ecd":"code","e1d9591b":"code","dd416f86":"code","ae9a048c":"code","97f7799c":"code","ad42e760":"code","7000fd17":"code","3f4c735b":"code","ca023abc":"code","f0eb752d":"markdown"},"source":{"580eff15":"import pandas as pd\narquivo = pd.read_csv('..\/input\/wine-dataset\/wine_dataset.csv')\n\nclass Classificacao:\n  preditores = pd.DataFrame({})\n  alvos = []\n  previsoes = []\n  apuracia = 0\n  def Classificador(self, arquivo):\n    #Todos valores 'red' e 'white' na cluna 'style' do DataFrame 'arquivos' v\u00e3o ser convertidos\n    #em 0 e 1,essa coluna s\u00f3 tem esses 2 valores.\n    arquivo['style'] = arquivo['style'].replace('red', 0)\n    arquivo['style'] = arquivo['style'].replace('white', 1)\n    #Vamos atribuir o valor da coluna style a vari\u00e1vel y para nosso alvo,\n    #as demais colunas ser\u00e3o atribuidas a vari\u00e1vel x para os nossos preditores.\n    y = arquivo['style']\n    x = arquivo.drop('style', axis = 1)\n    #Vamos importar a fun\u00e7\u00e3o train_test_split com o sklearn.\n    from sklearn.model_selection import train_test_split\n    #Usaremos a fun\u00e7\u00e3o train_test_split com os par\u00e2metros x,y e test_size = 0.3 (Usaremos 0.3 do DataFrame para teste).\n    x_treino, x_teste, y_treino, y_teste = train_test_split(x, y, test_size = 0.3)\n    #Vamos importar nossa arvore de classifica\u00e7\u00e3o.\n    from sklearn.ensemble import ExtraTreesClassifier\n    #Criaremos o modelo:\n    modelo = ExtraTreesClassifier()\n    modelo.fit(x_treino, y_treino)\n    #E agora salvamos nossos resultados e previs\u00f5es.\n    classWine.preditores = x_teste[200:210]\n    classWine.alvos = y_teste[200:210]\n    classWine.previsoes = modelo.predict(x_teste[200:210])\n    classWine.apuracia = modelo.score(x_teste, y_teste)\n\nclassWine = Classificacao()","6a873ecd":"arquivo\n#Abaixo vamos exibir uma amostra do nosso csv com os dados dos vinhos,incluindo todos preditores e o alvo \"style\".","e1d9591b":"#Aqui criamos o objeto auxVinhos e o usamos para chamar a fun\u00e7\u00e3o Classificador\n#usando o data frame arquivo como par\u00e2metro.\n#O data frame arquivo possui todos preditores,\n#portando nos dar\u00e1 os resultado relativo a todos preditores.\nauxVinhos = Classificacao()\nauxVinhos.Classificador(arquivo)","dd416f86":"classWine.preditores\n#Aqui apresentamos os preditores.","ae9a048c":"classWine.alvos\n#Aqui apresentamos os alvos.","97f7799c":"classWine.previsoes\n#Aqui apresentamos as previs\u00f5es.","ad42e760":"\nprint(f'A acur\u00e1cia com todos preditores foi de {classWine.apuracia}')\n#Aqui apresentamos a taxa de acur\u00e1cia.","7000fd17":"#Aqui vamos obter a taxa de acur\u00e1cia relativa ao preditor alcohol\nauxVinhos = Classificacao()\nauxVinhos.Classificador(arquivo.loc[0:, ['alcohol','style']])\nprint(f'A acur\u00e1cia usando apenas o preditor \"alcohol\" foi de {classWine.apuracia}')","3f4c735b":"#Aqui vamos obter a taxa de acur\u00e1cia relativa ao preditor fixed_acidity\nauxVinhos = Classificacao()\nauxVinhos.Classificador(arquivo.loc[0:, ['fixed_acidity','style']])\nprint(f'A acur\u00e1cia usando apenas o preditor \"fixed_acidity\" foi de {classWine.apuracia}')","ca023abc":"#Aqui vamos obter a taxa de acur\u00e1cia relativa ao preditor total_sulfur_dioxide\nauxVinhos = Classificacao()\nauxVinhos.Classificador(arquivo.loc[0:, ['total_sulfur_dioxide','style']])\nprint(f'A acur\u00e1cia usando o preditor \"total_sulfur_dioxide\" foi de {classWine.apuracia}')","f0eb752d":"**Abaixo apresentaremos as taxas de acur\u00e1cia relativas a alguns preditores isolados.**"}}