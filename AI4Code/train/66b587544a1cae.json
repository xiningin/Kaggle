{"cell_type":{"da24484f":"code","40cff470":"code","779c6c65":"code","2835694c":"code","d0b5c30f":"code","50267cad":"code","cb9b9b7d":"code","03e7b1fa":"code","160d9d43":"code","65ca21c0":"code","244de8dc":"code","cc76f4d5":"code","3a4866be":"code","7cfc457c":"code","117d6da9":"code","87b3f1ab":"code","d0442659":"code","8c0416cb":"code","e0c025c0":"code","68996593":"code","d2478986":"code","9deea70a":"code","9080cff0":"code","cfc913fb":"code","1642ef36":"code","8787577e":"code","327c2658":"code","4a44be7a":"code","6686210a":"code","d915b284":"code","b649b7b8":"code","3ab7ce3f":"code","4c466d3e":"code","6c188f20":"code","874bfc48":"markdown"},"source":{"da24484f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","40cff470":"car=pd.read_csv('\/kaggle\/input\/car-price-analysis\/Car Price Analysis.csv')","779c6c65":"car.head()","2835694c":"car.info()","d0b5c30f":"# how many affordable cars\ncar[car['Affordable']=='YES'].count()","50267cad":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","cb9b9b7d":"sns.countplot(x='Affordable',data=car)","03e7b1fa":"sns.pairplot(car)","160d9d43":"sns.displot(car['price'],kde=True)","65ca21c0":"sns.heatmap(car.corr(),annot=True)","244de8dc":"sns.barplot(x='Affordable',y='price',data=car)","cc76f4d5":"sns.boxplot(x='Affordable',y='price',data=car)","3a4866be":"# top 5 expensive cars\ncar.sort_values('price',ascending=False).head(5)","7cfc457c":"# top 5 least expensive cars\ncar.sort_values('price',ascending=True).head(5)","117d6da9":"sns.lmplot(x='price',y='carlength',data=car,hue='Affordable')","87b3f1ab":"sns.lmplot(x='price',y='carwidth',data=car,hue='Affordable')","d0442659":"sns.lmplot(x='price',y='carheight',data=car,hue='Affordable')","8c0416cb":"car.columns","e0c025c0":"# training\nX=car[['carlength', 'carwidth', 'carheight']]\ny=car['price']","68996593":"from sklearn.model_selection import train_test_split","d2478986":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=47)","9deea70a":"from sklearn.linear_model import LinearRegression\nlm=LinearRegression()\nlm.fit(X_train,y_train)","9080cff0":"lm.intercept_","cfc913fb":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","1642ef36":"predictions=lm.predict(X_test)","8787577e":"plt.scatter(y_test,predictions)","327c2658":"sns.regplot(y_test,predictions)","4a44be7a":"sns.histplot((y_test-predictions),kde=True,bins=50)","6686210a":"from sklearn import metrics","d915b284":"metrics.mean_absolute_error(y_test,predictions)","b649b7b8":"metrics.mean_squared_error(y_test,predictions)","3ab7ce3f":"np.sqrt(metrics.mean_squared_error(y_test,predictions))","4c466d3e":"metrics.explained_variance_score(y_test,predictions)","6c188f20":"metrics.r2_score(y_test,predictions)","874bfc48":"# 86.08% of variance is explained by the model"}}