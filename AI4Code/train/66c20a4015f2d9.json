{"cell_type":{"f58788ef":"code","4c3c5e66":"code","bc0df772":"code","7c29bec6":"code","90e60499":"code","a3788f20":"code","e702556e":"code","ac11b31e":"code","d65652d6":"code","e3a94e1d":"code","f85548da":"code","13f3528a":"code","b2135afb":"code","cce14160":"markdown","6dea39f4":"markdown","2e65e40e":"markdown","2f9e4818":"markdown","86b40059":"markdown"},"source":{"f58788ef":"!pip install imutils","4c3c5e66":"!pip install opencv-python","bc0df772":"# First, let\u2019s read a video file and save the frames to a folder:\nimport cv2\nimport numpy as np\nimport imutils\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom skimage.color import rgb2gray\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom scipy import ndimage\nimport os\nimport sys\nimport random\nimport math\nimport skimage.io\nimport matplotlib\nimport matplotlib.pyplot as plt","7c29bec6":"from IPython.display import HTML\nfrom base64 import b64encode\nvid1 = open('..\/input\/nfl-impact-detection\/train\/57583_000082_Endzone.mp4','rb').read()\ndata_url = \"data:video\/mp4;base64,\" + b64encode(vid1).decode()\nHTML(\"\"\"\n<video width=600 controls>\n      <source src=\"%s\" type=\"video\/mp4\">\n<\/video>\n\"\"\" % data_url)","90e60499":"VIDEO_STREAM = \"..\/input\/nfl-impact-detection\/train\/57583_000082_Endzone.mp4\"\n\nvidcap = cv2.VideoCapture(VIDEO_STREAM)\ndef getFrame(sec):\n    vidcap.set(cv2.CAP_PROP_POS_MSEC,sec*1000)\n    hasFrames,image = vidcap.read()\n    if hasFrames:\n        cv2.imwrite(\"image\"+str(count)+\".jpg\", image) # save frame as JPG file\n        plt.imshow(image)\n    return hasFrames\n\nsec = 0\nframeRate = 0.1 #\/\/it will capture image in each 0.5 second\ncount=1\nsuccess = getFrame(sec)\nwhile success:\n    count = count + 1\n    sec = sec + frameRate\n    sec = round(sec, 2)\n    success = getFrame(sec)","a3788f20":"def show_frame_n(n):\n    pic = plt.imread('image'+str(n)+'.jpg')\n    print(pic.shape)\n    plt.imshow(pic)\nshow_frame_n(5)","e702556e":"pic = plt.imread('image5.jpg')\ngray = rgb2gray(pic)\nplt.imshow(gray, cmap='gray')","ac11b31e":"import cv2 as cv\nimport os\nimport matplotlib.pylab as plt\ntrain_dir = '..\/input\/nfl-impact-detection\/train\/'\nfig, ax = plt.subplots(1,1, figsize=(15, 15))\ntrain_video_files = [train_dir + x for x in os.listdir(train_dir)]\n# video_file = train_video_files[30]\nvideo_file = '..\/input\/nfl-impact-detection\/train\/57583_000082_Endzone.mp4'\ncap = cv.VideoCapture(video_file)\nsuccess, image = cap.read()\nimage = cv.cvtColor(image, cv.COLOR_BGR2RGB)\ncap.release()   \nax.imshow(image)\nax.xaxis.set_visible(False)\nax.yaxis.set_visible(False)\nax.title.set_text(f\"FRAME 0: {video_file.split('\/')[-1]}\")\nplt.grid(False)","d65652d6":"import matplotlib.pyplot as plt\nimport cv2\nimport numpy as np\nimport os\nimport re\n\n#listing down all the file names\nframes = os.listdir('.\/')\n\n#reading frames\nimages=[]\nfor i in frames[:-2]:\n    try:\n        img = cv2.imread('.\/'+i)\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n        img = cv2.GaussianBlur(img,(25,25),0)\n        images.append(img)\n    except: continue\n        \n\nimages=np.array(images)","e3a94e1d":"nonzero=[]\nfor i in range((len(images)-1)):\n    mask = cv2.absdiff(images[i],images[i+1])\n    _ , mask = cv2.threshold(mask, 50, 255, cv2.THRESH_BINARY)\n    num = np.count_nonzero((mask.ravel()))\n    nonzero.append(num)\n    \n    \nx = np.arange(0,len(images)-1)\ny = nonzero\n\nplt.figure(figsize=(20,4))\nplt.scatter(x,y)","f85548da":"threshold = 1000\nfor i in range(len(images)-1):\n    if(nonzero[i]>threshold): \n        scene_change_idx = i\n        break\n        \nframes = frames[:(scene_change_idx+1)]\nlen(frames)","13f3528a":"img= cv2.imread('.\/' + frames[0])\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ngray = cv2.GaussianBlur(gray,(25,25),0)\n\nplt.figure(figsize=(5,10))\nplt.imshow(gray,cmap='gray')","b2135afb":"_ , mask = cv2.threshold(gray, 200, 255, cv2.THRESH_BINARY)\n\nplt.figure(figsize=(5,5))\nplt.imshow(mask,cmap='gray')","cce14160":"# Recognizing people in a video\n## From video to frames\n## In cv2.VideoCapture(VIDEO_STREAM), we just have to mention the video name with it\u2019s extension.\n\n## You can set frame rate which is widely known as fps (frames per second). Here I set 0.5 so it will capture a frame at every 0.5 seconds, means 2 frames (images) for each second.\n\n## It will save images with name as image1.jpg, image2.jpg and so on.","6dea39f4":"# To be continued","2e65e40e":"# How to play mp4 video on kaggle?","2f9e4818":"# Overview\n1. build your own helmet tracking system for NFL using computer vision and Python\n2. Understand different approaches for tracking fast-moving objects in a sports video\n3. We will also discuss the various use cases of a ball tracking system","86b40059":"## [Object Detection](https:\/\/www.analyticsvidhya.com\/blog\/2018\/10\/a-step-by-step-introduction-to-the-basic-object-detection-algorithms-part-1\/) is one of the most fascinating concepts in computer vision. It has a far-reaching role in different domains such as defense, space, sports, and other fields. Here, I have listed a few interesting use cases of Object Detection in Defense and Space:\n### - Automatic Target Aimer\n### - Training Robots in real word simulations to retrieve people in hazardous physical environments\n### - Detecting Space Debris\n\n# Object Detection = Image Classfication + Localization"}}