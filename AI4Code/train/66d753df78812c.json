{"cell_type":{"c97aab16":"code","3f72d70c":"code","7542c54b":"code","0b8754d0":"code","d3ee557a":"code","5fef462a":"code","7133d66e":"code","1f6d9182":"code","f7733d82":"code","ab89e46e":"code","6c9b1c83":"code","fbb1b3b9":"code","7bd8a92e":"code","a25fa3de":"code","53895e83":"code","a2a32b7a":"code","4463c301":"code","8cfa7a98":"code","34ad3a80":"code","d50ed0de":"code","aa142861":"code","b5a89910":"code","adebecfe":"code","4ce65f18":"code","0f1d9e8d":"code","3186cd64":"code","cf946928":"code","e875f6a8":"code","40f08277":"code","06651b80":"code","a4e19cb0":"code","5b08d815":"code","24643967":"code","e7222c83":"code","3f4e5e0d":"code","3f0dc34a":"code","ad961940":"code","bb48a80b":"code","b49c6567":"code","f9c7d613":"code","cbc6fa61":"code","884e4005":"code","dc66e140":"code","6050fa9d":"code","63d33c37":"code","70620947":"code","e4e1fd51":"code","32739ff3":"code","40e8176d":"code","eb5386a5":"code","2410f4ce":"code","cbe0640b":"code","bb4793d0":"code","d9c19799":"code","e9777186":"code","563929c8":"code","691e0c90":"code","f892f805":"code","b60387eb":"code","c3e57db5":"code","5355b5a1":"code","7607c1f5":"code","df68eeb3":"code","fde01c8a":"code","d77972c1":"code","15441677":"code","6b13a9f9":"code","cec000ac":"code","741d95ae":"code","92b0df86":"code","be5f1c9e":"code","23c0127b":"code","ba699a85":"code","85f10bf6":"code","8a9d9a46":"code","1f186307":"code","87f37a3e":"code","798bcf69":"code","852544f9":"code","5721b4f5":"code","64dab6a9":"markdown","323c837b":"markdown","349b3915":"markdown","d04631ad":"markdown","ab2f9d29":"markdown","f42232fc":"markdown","ba3d49a1":"markdown"},"source":{"c97aab16":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3f72d70c":"#from pandas_profiling import ProfileReport\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nfrom scipy import stats\nfrom scipy.stats import pearsonr\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows',None)\nimport itertools\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix,roc_auc_score,roc_curve\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.tree import plot_tree\nfrom xgboost import plot_tree,plot_importance\nfrom sklearn import tree\nfrom catboost import CatBoostClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom imblearn.under_sampling import RandomUnderSampler\nfrom imblearn.over_sampling import RandomOverSampler\n!pip install dython\nfrom dython import nominal","7542c54b":"data=pd.read_csv(\"\/kaggle\/input\/ibm-hr-analytics-attrition-dataset\/WA_Fn-UseC_-HR-Employee-Attrition.csv\")\ndf=data.copy()\ndf.head()","0b8754d0":"df.shape","d3ee557a":"df.columns","5fef462a":"df.describe().T","7133d66e":"df.describe(include=\"object\").T","1f6d9182":"df=df.drop(columns=[\"Over18\"],axis=1)","f7733d82":"df.isnull().sum().to_frame()","ab89e46e":"cat_columns=df.select_dtypes(include=\"object\").columns\nfor i in cat_columns:\n    plt.figure(figsize=(9,5));\n    sns.countplot(df[i]);\n    plt.xticks(rotation=90);\n    plt.show();","6c9b1c83":"for i in cat_columns[1:]:\n    sns.catplot(x=i,y='MonthlyIncome',hue=\"Attrition\",data=df,kind=\"bar\",aspect=3);\n    plt.xticks(rotation=90);","fbb1b3b9":"def diagnostic_plots(df, variable):\n    \n    plt.figure(figsize=(20, 9))\n\n    plt.subplot(1, 3, 1)\n    sns.distplot(df[variable], bins=30,kde_kws={'bw': 1.5})\n    plt.title('Histogram')\n    \n    plt.subplot(1, 3, 2)\n    stats.probplot(df[variable], dist=\"norm\", plot=plt)\n    plt.ylabel('RM quantiles')\n\n    plt.subplot(1, 3, 3)\n    sns.boxplot(y=df[variable])\n    plt.title('Boxplot')\n\n    \n    \n    plt.show()","7bd8a92e":"df.hist(edgecolor='black', linewidth=1.2, figsize=(22, 22));","a25fa3de":"for i in [\"Age\",\"DailyRate\",\"DistanceFromHome\",\"HourlyRate\",\"MonthlyIncome\",\"MonthlyRate\"]:\n       diagnostic_plots(df,i)","53895e83":"df.dtypes.to_frame()","a2a32b7a":"df[\"EmployeeCount\"].value_counts()","4463c301":"df[\"StandardHours\"].value_counts()","8cfa7a98":"sns.countplot(df[\"PerformanceRating\"],palette=\"coolwarm\");","34ad3a80":"df=df.drop(columns=[\"EmployeeCount\",\"StandardHours\"],axis=1)","d50ed0de":"num_columns=df.select_dtypes(exclude=\"object\").columns","aa142861":"for i in num_columns:\n    sns.boxplot(df[i],color=\"orangered\");\n    plt.show();","b5a89910":"plt.rcParams.update({'font.size': 14})\nplt.figure(figsize=(28,16))\ncorr=df.corr()\nmask=np.zeros_like(corr,dtype=np.bool)\nmask[np.triu_indices_from(mask)]=True\nsns.heatmap(corr.abs(),annot=True,cmap=\"coolwarm\",mask=mask);","adebecfe":"cat_columns=df.select_dtypes(include=[\"object\"]).columns","4ce65f18":"nominal.associations(df[cat_columns],figsize=(20,10),mark_columns=True);","0f1d9e8d":"df[\"EmployeeNumber\"].nunique()","3186cd64":"df=df.drop(\"EmployeeNumber\",axis=1)","cf946928":"df.head()","e875f6a8":"df_new=df.copy()\ndf_new=df_new.drop(columns=[\"Department\",\"JobLevel\",\"YearsInCurrentRole\",\"TotalWorkingYears\",\"PercentSalaryHike\",\"YearsWithCurrManager\"],axis=1)","40f08277":"df_new=pd.get_dummies(df_new,drop_first=True)","06651b80":"df_new.head()","a4e19cb0":"X=df_new.drop(\"Attrition_Yes\",axis=1)\ny=df_new[\"Attrition_Yes\"]","5b08d815":"X_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.25, \n                                                    random_state=42,stratify=y)","24643967":"xgb_model = XGBClassifier()\nxgb_model.fit(X_train, y_train)\ny_pred = xgb_model.predict(X_test)\naccuracy_score(y_test,y_pred)","e7222c83":"cross_val_score(xgb_model,X,y).mean()","3f4e5e0d":"def conf_matrix(y_test,y_pred):\n    cm = confusion_matrix(y_test, y_pred)\n    plt.figure(figsize=(7,7))\n    sns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'YlGnBu');\n    plt.ylabel('Actual label');\n    plt.xlabel('Predicted label');\n    all_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\n    plt.title(all_sample_title, size = 15);\n    plt.show()\n    print(classification_report(y_test,y_pred))\nconf_matrix(y_test,y_pred)","3f0dc34a":"def plot_roc_curve(y_test,X_test,model):\n    fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, model.predict_proba(X_test)[:,1])\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.plot(fpr_mlp, tpr_mlp)\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC CURVE')\n    plt.show()\nplot_roc_curve(y_test,X_test,xgb_model)","ad961940":"plot_importance(xgb_model).figure.set_size_inches(10,8);","bb48a80b":"plot_tree(xgb_model,num_trees=2).figure.set_size_inches(200,200);\nplt.show();","b49c6567":"\nrus = RandomUnderSampler(random_state=0)\nX_resampled, y_resampled = rus.fit_resample(X, y)","f9c7d613":"X_resampled.shape,y_resampled.shape","cbc6fa61":"X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, \n                                                    test_size=0.25, \n                                                    random_state=42,stratify=y_resampled)","884e4005":"xgb_model = XGBClassifier()\nxgb_model.fit(X_train, y_train)\ny_pred = xgb_model.predict(X_test)\naccuracy_score(y_test,y_pred)","dc66e140":"cross_val_score(xgb_model,X_resampled,y_resampled).mean()","6050fa9d":"conf_matrix(y_test,y_pred)","63d33c37":"plot_roc_curve(y_test,X_test,xgb_model)","70620947":"roc_auc_score(y_test,y_pred)","e4e1fd51":"plot_importance(xgb_model).figure.set_size_inches(10,8);","32739ff3":"plot_tree(xgb_model,num_trees=2).figure.set_size_inches(200,200);\nplt.show();","40e8176d":"\nros = RandomOverSampler(random_state=42)\nX_resampled, y_resampled = ros.fit_resample(X, y)","eb5386a5":"X_resampled.shape,y_resampled.shape","2410f4ce":"X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, \n                                                    test_size=0.25, \n                                                    random_state=42,stratify=y_resampled)","cbe0640b":"xgb_model = XGBClassifier()\nxgb_model.fit(X_train, y_train)\ny_pred = xgb_model.predict(X_test)\naccuracy_score(y_test,y_pred)","bb4793d0":"cross_val_score(xgb_model,X_resampled,y_resampled).mean()","d9c19799":"conf_matrix(y_test,y_pred)","e9777186":"plot_roc_curve(y_test,X_test,xgb_model)","563929c8":"roc_auc_score(y_test,y_pred)","691e0c90":"#%matplotlib inline\n#%config InlineBackend.figure_format = 'retina'\nplot_tree(xgb_model,num_trees=2).figure.set_size_inches(200,200);\nplt.show();\n","f892f805":"\nplot_importance(xgb_model).figure.set_size_inches(10,8);","b60387eb":"X_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.25, \n                                                    random_state=42,stratify=y)","c3e57db5":"rf_model = RandomForestClassifier()\nrf_model.fit(X_train, y_train)","5355b5a1":"y_pred = rf_model.predict(X_test)\naccuracy_score(y_test, y_pred)","7607c1f5":"cross_val_score(rf_model,X,y).mean()","df68eeb3":"conf_matrix(y_test,y_pred)","fde01c8a":"plot_roc_curve(y_test,X_test,rf_model)","d77972c1":"rus = RandomUnderSampler(random_state=0)\nX_resampled, y_resampled = rus.fit_resample(X, y)","15441677":"X_resampled.shape,y_resampled.shape","6b13a9f9":"X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, \n                                                    test_size=0.20, \n                                                    random_state=42)\nrf_model = RandomForestClassifier()\nrf_model.fit(X_train, y_train)","cec000ac":"y_pred = rf_model.predict(X_test)\naccuracy_score(y_test, y_pred)","741d95ae":"cross_val_score(rf_model,X_resampled,y_resampled).mean()","92b0df86":"conf_matrix(y_test,y_pred)","be5f1c9e":"plot_roc_curve(y_test,X_test,rf_model)","23c0127b":"roc_auc_score(y_test,y_pred)","ba699a85":"ros = RandomOverSampler(random_state=42)\nX_resampled, y_resampled = ros.fit_resample(X, y)","85f10bf6":"X_resampled.shape, y_resampled.shape","8a9d9a46":"X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, \n                                                    test_size=0.20, \n                                                    random_state=42)","1f186307":"rf_model = RandomForestClassifier()\nrf_model.fit(X_train, y_train)","87f37a3e":"y_pred = rf_model.predict(X_test)\naccuracy_score(y_test, y_pred)","798bcf69":"cross_val_score(rf_model,X_resampled,y_resampled).mean()","852544f9":"conf_matrix(y_test,y_pred)","5721b4f5":"plot_roc_curve(y_test,X_test,rf_model)","64dab6a9":"## OVERSAMPLING-XGBOOST","323c837b":"## XGBOOST MODEL","349b3915":"## RANDOM FOREST-UNDERSAMPLING","d04631ad":" **I'm trying to improve myself so I'm open all your idea.Please write your suggestions for me in the comments! :)**","ab2f9d29":"## RANDOM FOREST MODEL","f42232fc":"## UNDERSAMPLING-XGBOOST MODEL","ba3d49a1":"## RANDOM FOREST - OVERSAMPLING"}}