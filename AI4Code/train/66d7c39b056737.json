{"cell_type":{"f6d2c433":"code","fb769b4e":"code","acb71f20":"code","30ffc857":"code","ea0e228d":"code","790840af":"code","33ac21b9":"code","175c9d7f":"code","7d01f586":"code","e6df4cb9":"code","64630c65":"code","ceda63c8":"code","11e1974b":"code","e437d91a":"code","fb113a17":"markdown","46cf6eb9":"markdown","c4823ca0":"markdown","b1357e0e":"markdown","897a2d5b":"markdown","234e5c34":"markdown","0cbfa774":"markdown","d32ad250":"markdown","947f1964":"markdown","0e4ed1e8":"markdown","95e60377":"markdown","b82c3820":"markdown","1081f81a":"markdown"},"source":{"f6d2c433":"import numpy as np\nimport matplotlib.pyplot as plt","fb769b4e":"def plot_series(time, series):\n    plt.figure(figsize=(10, 6))\n    plt.plot(time, series)\n    plt.xlabel(\"time\")\n    plt.ylabel(\"value\")\n    plt.grid(True)\n    plt.show()","acb71f20":"def trend(time, slope=0):\n    return slope * time","30ffc857":"time = np.arange(4 * 365 + 1)\nbaseline = 20\nseries = trend(time, 0.1)\nplot_series(time, series)","ea0e228d":"def seasonal_pattern(season_time):\n    return np.where(season_time < 0.4,\n                    np.cos(season_time * 2 * np.pi),\n                    1 \/ np.exp(3 * season_time))\n\ndef seasonality(time, period, amplitude=1, phase=0):\n    season_time = ((time + phase) % period) \/ period\n    return amplitude * seasonal_pattern(season_time)","790840af":"baseline = 10\namplitude = 40\nseries = seasonality(time, period=365, amplitude=amplitude)\nplot_series(time, series)","33ac21b9":"slope = 0.05\nseries = baseline + trend(time, slope) + seasonality(time, period=365, amplitude=amplitude)\nplot_series(time, series)","175c9d7f":"def noise(time, noise_level=1):\n    return np.random.randn(len(time)) * noise_level","7d01f586":"noise_level = 15\nnoisy_series = series + noise(time, noise_level)\nplot_series(time, noisy_series)","e6df4cb9":"def autocorrelation(time, amplitude):\n    rho = 0.8\n    ar = np.random.randn(len(time) + 1)\n    for step in range(1, len(time) + 1):\n        ar[step] += rho * ar[step - 1]\n    return ar[1:] * amplitude","64630c65":"series = autocorrelation(time, 10)\nplot_series(time[:200], series[:200])","ceda63c8":"series = noise(time)\nplot_series(time[:200], series[:200])","11e1974b":"series = autocorrelation(time, 10) + trend(time, 2)\nplot_series(time[:200], series[:200])","e437d91a":"series = autocorrelation(time, 10) + seasonality(time, period=50, amplitude=150) + trend(time, 2)\nseries2 = autocorrelation(time, 5) + seasonality(time, period=50, amplitude=2) + trend(time, -1) + 550\nseries[200:] = series2[200:]\nseries += noise(time, 30)\nplot_series(time[:300], series[:300])","fb113a17":"## Trend & Seasonality\nWhen we combine trend with seasonality, the timeseries looks like the following:","46cf6eb9":"## Trend\nTime series data may have a deterministic component that is proportionate to the time period. When this occurs, the time series data is said to have a time trend.\n\nTime trends in time series data also have implications for testing and modeling. The reliability of a time series model depends on properly identifying and accounting for time trends.\n\nA time series plot which looks like it centers around an increasing or decreasing line, like that in the plot, suggests the presence of a time trend.","c4823ca0":"# Understanding time series: Part I\n\nWe come across time series at many kaggle competitions. In this notebook, I want to give a quick overview over the main properties and technical terms.\n\nThe definition of a time series is given on wikipedia as followed:\n\n*In mathematics, a time series is a series of data points indexed (or listed or graphed) in time order. Most commonly, a time series is a sequence taken at successive equally spaced points in time. Thus it is a sequence of discrete-time data. Examples of time series are heights of ocean tides, counts of sunspots, and the daily closing value of the Dow Jones Industrial Average.*\n\nIn the following I am going to explain the different parts in a time series.","b1357e0e":"## Autocorrelation\nIn time series data, autocorrelation is the correlation between observations of the same dataset at different points in time. The need for distinct time series models stems in part from the autocorrelation present in time series data.\n\nThe solution for dealing with autocorrelation in time series data is to re-weight the data prior to estimation. One method for doing this is generalized least squares which applies least squares to data that has been transformed by weights. Generalized least squares requires that the true parameters of autocorrelation be known.","897a2d5b":"## Structural Break\nSometimes time series data shows a sudden change in behavior at a certain point in time. For example, many macroeconomic indicators changed sharply in 2008 after the start of the global financial crisis. These sudden changes are often referred to as structural breaks or non-linearities. \n\nThese structural breaks can create instability in the parameters of a model. This, in turn, can diminish the validity and reliability of that model.\n\nThough statistical methods and tests should be used to test for structural breaks, time series plots can help for preliminary identification of structural breaks in data.\n\nStructural breaks in the mean of a time series will appear in graphs as sudden shifts in the level of the data at certain breakpoints. For example, in the time series plot below there is a clear change in trend around time 170.","234e5c34":"## Autocorrelation & Noise","0cbfa774":"## Autocorrelation & Trend","d32ad250":"## Plot function","947f1964":"## Seasonality\nSeasonality is another characteristic of time series data that can be visually identified in time series plots. Seasonality occurs when time series data exhibits regular and predictable patterns at time intervals that are smaller than a year.\n\nAn example of a time series with seasonality is retail sales, which often increase between September to December and will decrease between January and February.","0e4ed1e8":"## Imports","95e60377":"## Conclusion\nI hope this will help you to better understand time series data. In the next notebook I want to explain, how to deal with time series data. As this is my first public notebook on kaggle, feel free to leave critic and suggestions in the comment section. I would also very much appreciate an upvote of the notebook ;)","b82c3820":"## Independent White Noise\nIndependent white noise is any time series data that is drawn from the same distribution with a zero mean and variance. Noise can have a big influence the accuracy of our Machine Learning models. An example of an independent white noise series is shown below.","1081f81a":"## Stationarity\n\nThis is one of the most important characteristics of time series data. A time series is said to be stationary if it has constant mean, variance and the covariance is independent of time. In ideal situations we would prefer a stationary series, but in real world, that\u2019s not the case. \n\nThere are different types of stationary time series as follows:\n\n* Stationary process: A process that generates a stationary series of observations \n* Stationary model: A model that describes a stationary series of observations\n* Trend stationary: A time series does not show a trend\n* Seasonal stationery: A time series does not depict seasonality\n* Strictly stationary: A mathematical definition of a stationary process, specifically that the joint distribution of observations is invariant to time shift.\n* Identifying stationarity in the time series can be tricky at times. There are multiple ways to deal with it.\n\nLooking at the plots:\n\nBy far the easiest and most straightforward method to decide whether the series is stationary or non-stationary.\n\nSummary statistics:\n\nTo put it into simple words, break down the series into two or more than two parts and compare the mean and variance among all the parts. If they happen to be similar, then the series is stationary. "}}