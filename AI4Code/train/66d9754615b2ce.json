{"cell_type":{"7a278748":"code","691c83da":"code","d08a90f5":"code","9a0b25e3":"code","1580ad72":"code","319d0a13":"code","d9a28733":"code","9d67424b":"code","ef06aaad":"code","90f84af4":"code","e7c6be3d":"code","2b6e15fb":"code","b3718575":"code","ebd322ec":"code","fc3e6a3c":"code","bd93af48":"code","639e35f1":"code","e570b973":"code","7153ca46":"code","7016990f":"code","797d93cf":"code","6f753077":"code","d5273f8a":"code","2492604e":"code","81259e37":"code","29c12335":"code","e38b6612":"code","c3ffa019":"markdown","1c9efcc2":"markdown","253b17d9":"markdown","83f14d4e":"markdown","3d9142f5":"markdown","eff603f1":"markdown","438fbbe9":"markdown","2ac4a783":"markdown","f42fa1a8":"markdown","ef17e0d6":"markdown","166dc3c3":"markdown","2dbffd95":"markdown","22057707":"markdown"},"source":{"7a278748":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","691c83da":"df=pd.read_csv('..\/input\/world-happiness\/2019.csv')\ndf.head()\noriginal=df.copy()\ndef highlight_max(s):    \n    is_max = s == s.max()\n    return ['background-color: limegreen' if v else '' for v in is_max]\n \ndf.style.apply(highlight_max, subset=['Score','GDP per capita','Social support','Healthy life expectancy','Freedom to make life choices','Generosity','Perceptions of corruption'])","d08a90f5":"df.shape","9a0b25e3":"corrmat = data.corr()\nf, ax = plt.subplots()\nsns.heatmap(corrmat, square=True)","1580ad72":"sns.pairplot(df)","319d0a13":"fig, axes = plt.subplots(nrows=2, ncols=2,constrained_layout=True,figsize=(12,8))\n\nsns.barplot(x='GDP per capita',y='Country or region',data=df.nlargest(10,'GDP per capita'),ax=axes[0,0],palette=\"Blues_d\")\n\nsns.barplot(x='Social support' ,y='Country or region',data=df.nlargest(10,'Social support'),ax=axes[0,1],palette=\"YlGn\")\n\nsns.barplot(x='Healthy life expectancy' ,y='Country or region',data=df.nlargest(10,'Healthy life expectancy'),ax=axes[1,0],palette='OrRd')\n\nsns.barplot(x='Freedom to make life choices' ,y='Country or region',data=df.nlargest(10,'Freedom to make life choices'),ax=axes[1,1],palette='YlOrBr')","d9a28733":"fig, axes = plt.subplots(nrows=1, ncols=2,constrained_layout=True,figsize=(10,4))\n\nsns.barplot(x='Generosity' ,y='Country or region',data=df.nlargest(10,'Generosity'),ax=axes[0],palette='Spectral')\nsns.barplot(x='Perceptions of corruption' ,y='Country or region',data=df.nlargest(10,'Perceptions of corruption'),ax=axes[1],palette='RdYlGn')","9d67424b":"print('max:',df['Score'].max())\nprint('min:',df['Score'].min())\nadd=df['Score'].max()-df['Score'].min()\ngrp=round(add\/3,3)\nprint('range difference:',(grp))","ef06aaad":"low=df['Score'].min()+grp\nmid=low+grp\n\nprint('upper bound of Low grp',low)\nprint('upper bound of Mid grp',mid)\nprint('upper bound of High grp','max:',df['Score'].max())","90f84af4":"df.info()","e7c6be3d":"cat=[]\nfor i in df.Score:\n    if(i>0 and i<low):\n        cat.append('Low')\n        \n        \n    elif(i>low and i<mid):\n         cat.append('Mid')\n    else:\n         cat.append('High')\n\ndf['Category']=cat  ","2b6e15fb":"color = (df.Category == 'High' ).map({True: 'background-color: blue',False:'background-color: violet'})\ndf.style.apply(lambda s: color)","b3718575":"df.loc[df['Country or region']=='United States']","ebd322ec":"df.loc[df['Country or region']=='India']","fc3e6a3c":"df.loc[df['Country or region']=='United Kingdom']","bd93af48":"df.loc[df['Country or region']=='Canada']","639e35f1":"d= df[(df['Country or region'].isin(['India','Canada','United Kingdom', 'United States']))]\nd","e570b973":"ax = d.plot(y=\"Social support\", x=\"Country or region\", kind=\"bar\",color='C1')\nd.plot(y=\"GDP per capita\", x=\"Country or region\", kind=\"bar\", ax=ax, color=\"C2\")\nd.plot(y=\"Healthy life expectancy\", x=\"Country or region\", kind=\"bar\", ax=ax, color=\"C5\")\n\nplt.show()","7153ca46":"ax = d.plot(y=\"Freedom to make life choices\", x=\"Country or region\", kind=\"bar\",color='C4')\nd.plot(y=\"Generosity\", x=\"Country or region\", kind=\"bar\", ax=ax, color=\"C7\",)\nd.plot(y=\"Perceptions of corruption\", x=\"Country or region\", kind=\"bar\", ax=ax, color=\"C8\",)\n\nplt.show()","7016990f":"import plotly.graph_objs as go\nfrom plotly.offline import iplot\n\ndata = dict(type = 'choropleth', \n           locations = df['Country or region'],\n           locationmode = 'country names',\n           colorscale='RdYlGn',\n           z = df['Score'], \n           text = df['Country or region'],\n           colorbar = {'title':'Happiness Score'})\n\nlayout = dict(title = 'Geographical Visualization of Happiness Score', \n              geo = dict(showframe = True, projection = {'type': 'azimuthal equal area'}))\n\nchoromap3 = go.Figure(data = [data], layout=layout)\niplot(choromap3)","797d93cf":"df15=pd.read_csv('..\/input\/world-happiness\/2015.csv')\ndf16=pd.read_csv('..\/input\/world-happiness\/2016.csv')\ndf17=pd.read_csv('..\/input\/world-happiness\/2017.csv')\ndf18=pd.read_csv('..\/input\/world-happiness\/2018.csv')","6f753077":"plt.figure(figsize=(10,5))\nsns.kdeplot(df15['Health (Life Expectancy)'],color='blue')\nsns.kdeplot(df16['Health (Life Expectancy)'],color='brown')\nsns.kdeplot(df17['Health..Life.Expectancy.'],color='green')\nsns.kdeplot(df18['Healthy life expectancy'],color='violet')\nsns.kdeplot(df['Healthy life expectancy'],color='red')\nplt.title('Health over the Years',size=20)\nplt.show()","d5273f8a":"plt.figure(figsize=(10,5))\nsns.kdeplot(df15['Economy (GDP per Capita)'],color='red')\nsns.kdeplot(df16['Economy (GDP per Capita)'],color='blue')\nsns.kdeplot(df17['Economy..GDP.per.Capita.'],color='limegreen')\nsns.kdeplot(df18['GDP per capita'],color='orange')\nsns.kdeplot(df['GDP per capita'],color='pink')\nplt.title('Economy over the Years',size=20)\nplt.show()","2492604e":"plt.figure(figsize=(10,5))\nsns.kdeplot(df15['Family'],color='red')\nsns.kdeplot(df16['Family'],color='blue')\nsns.kdeplot(df17['Family'],color='limegreen')\nsns.kdeplot(df18['Social support'],color='orange')\nsns.kdeplot(df['Social support'],color='pink')\nplt.title('Family over the Years',size=20)\nplt.show()","81259e37":"df18['Year']='2018'\ndf['Year']='2019'\ndf15['Year']='2015'\ndf16['Year']='2016'\ndf17['Year']='2017'","29c12335":"df.rename(columns={'Country or region':'Country'},inplace=True)\ndata1=df.filter(['Country','GDP per capita','Year'],axis=1)\n\ndf15.rename(columns={'Economy (GDP per Capita)':'GDP per capita'},inplace=True)\ndata2=df15.filter(['Country','GDP per capita',\"Year\"],axis=1)\n\ndf16.rename(columns={'Economy (GDP per Capita)':'GDP per capita'},inplace=True)\ndata3=df16.filter(['Country','GDP per capita',\"Year\"],axis=1)\n\ndf17.rename(columns={'Economy..GDP.per.Capita.':'GDP per capita'},inplace=True)\ndata4=df17.filter(['Country','GDP per capita','Year'],axis=1)\n\ndf18.rename(columns={'Country or region':'Country'},inplace=True)\ndata5=df18.filter(['Country','GDP per capita',\"Year\"],axis=1)\n\ndata2=data2.append([data3,data4,data5,data1])","e38b6612":"plt.figure(figsize=(10,8))\ndf = data2[data2['Country']=='India']\nsns.lineplot(x=\"Year\", y=\"GDP per capita\",data=df,label='India')\n\ndf = data2[data2['Country']=='United States']\nsns.lineplot(x=\"Year\", y=\"GDP per capita\",data=df,label='US')\n\ndf = data2[data2['Country']=='Finland']\nsns.lineplot(x=\"Year\", y=\"GDP per capita\",data=df,label='Finland')\n\ndf = data2[data2['Country']=='United Kingdom']\nsns.lineplot(x=\"Year\", y=\"GDP per capita\",data=df,label=\"UK\")\n\ndf = data2[data2['Country']=='Canada']\nsns.lineplot(x=\"Year\", y=\"GDP per capita\",data=df,label='Canada')\n\nplt.title(\"GDP per capita 2015-2019\")","c3ffa019":"# United States","1c9efcc2":"# Canada","253b17d9":"# Plotting pairwise Realtionships","83f14d4e":"# United Kingdom","3d9142f5":"**Finding highly correlated value using heat map**","eff603f1":"**If city is high color blue and low or mid color is violet**","438fbbe9":"# Finding top 10 countries","2ac4a783":"# Comparision of three countries","f42fa1a8":"# GDP of USA,INDIA,UK,CANADA & FINLAND","ef17e0d6":"# Addining Previous year","166dc3c3":"**Importing Libraries**","2dbffd95":"# Geographical view","22057707":"# India"}}