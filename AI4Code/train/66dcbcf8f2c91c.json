{"cell_type":{"2c234be2":"code","324c2a58":"code","ad4c5a5d":"code","1a2dd347":"code","d4c56916":"code","264f73d4":"markdown","f081ffbc":"markdown","3b9bf5dc":"markdown","ebf093ca":"markdown"},"source":{"2c234be2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/headbrain-linear-regression\/headbrain_dataset.csv'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","324c2a58":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\ndata = pd.read_csv('..\/input\/headbrain-linear-regression\/headbrain_dataset.csv')\nprint(data.shape)\ndata.head()","ad4c5a5d":"X= data['Head Size(cm^3)'].values\nY=data['Brain Weight(grams)'].values","1a2dd347":"mean_X = np.mean(X)\nmean_Y = np.mean(Y)\n\nn=len(X)\nnumer= 0\ndenom =0\nfor i in range(n):\n    numer += (X[i] - mean_X)* (Y[i]-mean_Y)\n    denom += (X[i] - mean_X) ** 2\nb1 = numer\/denom\nb0 = mean_Y - (b1 * mean_X)\nprint(b1,b0)","d4c56916":"max_X=np.max(X) + 100\nmin_X=np.min(X) - 100\nX=np.linspace(min_X, max_X, 1000)\nY = b0 + b1 * X\nplt.plot(X,Y, color='#58b970', label='Regression Line')\nplt.scatter(X,Y, color='#ef5423', label='scatter plot')\nplt.xlabel('Head Size cm^3)')\nplt.ylabel('Brain Weight in grams')\nplt.legend()\nplt.show()","264f73d4":"plotting ","f081ffbc":"finding mean and value of c and m","3b9bf5dc":"assigning values","ebf093ca":"importing libraries"}}