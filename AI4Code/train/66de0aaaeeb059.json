{"cell_type":{"7dee47cd":"code","b070db93":"code","53120607":"code","07554a9b":"code","24914015":"code","78b74b69":"code","947f5599":"code","d19f62e5":"code","d408b1bc":"code","a458f20b":"code","a9c808de":"code","1e852b6b":"code","d79850ec":"code","83f3a4c0":"code","d50f7cdb":"code","477db4d9":"code","3f40d1c0":"code","aa265ac8":"code","32d7b45c":"code","97504cb7":"code","5b1def2f":"code","a0f4ec3f":"code","71629ba0":"code","bbba334a":"code","af20afcd":"code","60cc24cd":"code","02b69f1c":"code","4c24755e":"markdown","ca4da710":"markdown","1dfdab85":"markdown","987d718a":"markdown"},"source":{"7dee47cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport math\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b070db93":"## Get working directory\nos.getcwd()\n\n## Change working directory\n# os.chdir('..\/input')","53120607":"## Load text file via read_csv\npop_df = pd.read_csv(\"..\/input\/banking.csv\")\npop_df","07554a9b":"## Get top 5 instances\npop_df.head(5)","24914015":"## Return columns\npop_df.columns","78b74b69":"## N-dimensional representation of DataFrame\n## What happens to dtypes?\npop_df.values","947f5599":"## Get column dtypes\npop_df.dtypes","d19f62e5":"## Assign column to new object\n## Is this new object a DataFrame?\nincome_df = pop_df[\"Income\"]\nincome_df","d408b1bc":"## Select column directly using the attribute \npop_df.Income","a458f20b":"## Print statement\nprint(\"Mean Income: \", income_df.mean())","a9c808de":"## Additional print statements\nprint(\"Means: \\n\", pop_df[[\"Age\",\"Education\",\"Income\"]].mean())\nprint(\"\\n\")\nprint(\"Standard Deviations: \\n\", pop_df[[\"Age\",\"Education\",\"Income\"]].std())","1e852b6b":"## Examine descriptive statistics\npop_df.describe() #include=all for categorical variables\n## Can you see anything fishy?","d79850ec":"pd.isnull(pop_df.Income)","83f3a4c0":"pop_df[pd.isnull(pop_df.Income)]","d50f7cdb":"pop_df[pd.isnull(pop_df.Wealth)]","477db4d9":"pop_df.dropna().describe()","3f40d1c0":"pop_df.describe()","aa265ac8":"pop_df2 = pop_df.dropna()\npop_df2.describe()","32d7b45c":"## Finding all instances when the education is above 14\neducation_above_14 = pop_df2.Education>14\npop_df2[education_above_14].Education.sort_values()","97504cb7":"pop_df2[pop_df2.Education>17].Education.sort_values()","5b1def2f":"pop_df3 = pop_df2.copy()\npop_df3.loc[pop_df3.Education>17] = pop_df2[pop_df2.Education>17]\/10\npop_df3.describe()","a0f4ec3f":"pop_df3 = pop_df2.copy()\npop_df3.loc[pop_df3.Education>17] = pop_df2.Education.mean()\npop_df3.describe()","71629ba0":"pop_df3.corr()","bbba334a":"df = pop_df3.copy()","af20afcd":"df.Age.hist()","60cc24cd":"# plot histogram and boxplot for each attribute\nfor col in df.columns:\n    df.hist(col)\n    plt.show()\n    df.boxplot(col)\n    plt.show()","02b69f1c":"for col in df.columns:\n    if col != 'Balance':\n        df.plot(x=col, y='Balance', kind=\"scatter\")\n        plt.title(col+\" and Balance\")\n        plt.show()","4c24755e":"See scatterplot between each attribute and the dependant variable","ca4da710":"# What can we do with missing values?\n- Remove rows\n- Fill automatically or manually","1dfdab85":"# Basic visualizations","987d718a":"Analize distributions of each attribute"}}