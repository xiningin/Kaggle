{"cell_type":{"9338311c":"code","125aac65":"code","a6d36c38":"code","36e81e93":"code","27a24b97":"code","edc0f992":"code","3e3ca375":"code","c0252efd":"code","b8541048":"code","95942618":"code","fb706062":"code","c960391f":"code","3423d9ba":"code","06274a04":"code","cef857ae":"code","a738e663":"code","652a828d":"code","7c012fc2":"code","bde45f65":"code","f845cec7":"code","520ac0ca":"code","530c8e3c":"code","13ace4cc":"code","beba49b0":"code","e94ca5f2":"code","192a3fef":"code","3268b5d7":"code","0e4becca":"code","bdc69c1c":"code","114f5941":"code","7d837df5":"markdown","7814ddba":"markdown","d881ec11":"markdown","006b56ab":"markdown","96b884d5":"markdown","2d52be1d":"markdown","70977f8d":"markdown","3d210a9b":"markdown","9ce49cb5":"markdown","dccc7f86":"markdown","94177e63":"markdown","6b2098a0":"markdown","9c30da2a":"markdown","a8c4fb07":"markdown","2ea989b7":"markdown","854bc11b":"markdown","da2c3526":"markdown"},"source":{"9338311c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","125aac65":"# Let's read our data and analyzing it\nvideo = pd.read_csv(\"..\/input\/Video_Games_Sales_as_at_22_Dec_2016.csv\")","a6d36c38":"video.shape","36e81e93":"video.info()","27a24b97":"video.head(10)","edc0f992":"video.columns","3e3ca375":"# we have to get rid of all nan values so we use dropna() function\nvideo.dropna(inplace = True)\nvideo.reset_index(drop = True, inplace=True)","c0252efd":"# Lets look at our unique platforms, genres\nprint(video.Platform.unique())\nprint(\"\")\nprint(video.Genre.unique())","b8541048":"# Creating sales ratio of platforms\n\nglobal_sales_ratio = []\nna_sales_ratio = []\neu_sales_ratio = []\njp_sales_ratio = []\nother_sales_ratio = []\ncritic_score_ratio = []\nplatform_list = list(video.Platform.unique())\n\nfor i in platform_list:\n    x = video[video.Platform == i]\n    global_sales_ratio.append(sum(x.Global_Sales)\/len(x))\n    na_sales_ratio.append(sum(x.NA_Sales)\/len(x))\n    eu_sales_ratio.append(sum(x.EU_Sales)\/len(x))\n    jp_sales_ratio.append(sum(x.JP_Sales)\/len(x))\n    other_sales_ratio.append(sum(x.Other_Sales)\/len(x))\n    \nsales_ratio = pd.DataFrame({\"platform\":platform_list,\n                            \"global_sales_ratio\":global_sales_ratio,\n                            \"na_sales_ratio\":na_sales_ratio,\n                            \"eu_sales_ratio\":eu_sales_ratio,\n                            \"jp_sales_ratio\":jp_sales_ratio,\n                            \"other_sales_ratio\":other_sales_ratio})\nsales_ratio","95942618":"# visualization\nplt.figure(figsize=(20,20))\nsns.color_palette(\"dark\")\nsns.barplot(x=\"platform\", y=\"global_sales_ratio\", data=sales_ratio,\n            palette=sns.color_palette(\"cubehelix\", 25))\n\nplt.title(\"Global Sales Ratio of Platforms\", fontsize=25)\nplt.xlabel(\"Platforms\", fontsize=15)\nplt.ylabel(\"Global Sales Ratio\", fontsize=15)\nplt.show()\n","fb706062":"f,ax = plt.subplots(figsize=(15,10))\nsns.barplot(x=global_sales_ratio, y=platform_list, label=\"Global\", color=\"g\")\nsns.barplot(x=na_sales_ratio, y=platform_list, label=\"North America\", color=\"b\")\nsns.barplot(x=eu_sales_ratio, y=platform_list, label=\"European Union\", color=\"cyan\")\nsns.barplot(x=jp_sales_ratio, y=platform_list, label=\"Japan\", color=\"red\")\nsns.barplot(x=other_sales_ratio, y=platform_list, label=\"Other\", color=\"yellow\")\n\nax.legend(frameon=True)\n# ax.set(xlabel=\"Platforms\", ylabel=\"Sales' Ratio\", title= \"Sales Ratio vs Platforms\")\nplt.xlabel(\"Platform\", fontsize=12)\nplt.ylabel(\"Sales' Ratio\", fontsize=12)\nplt.title(\"Platforms vs Sales' Ratio\", fontsize=15, color=\"black\")","c960391f":"video.Genre.value_counts()","3423d9ba":"# genre count\ngenre_count = Counter(video.Genre)\ndata2 = genre_count.most_common(12)\ngenre,count= zip(*data2)\ngenre,count = list(genre), list(count)\n\n#visualization\nplt.figure(figsize=(20,20))\nsns.barplot(x = genre, y = count, palette = sns.color_palette(\"dark\"))\nplt.title(\"Frequency of Genre\", fontsize=25)\nplt.xlabel(\"Genre\", fontsize=15)\nplt.ylabel(\"Frequency\", fontsize = 15)\nplt.show()","06274a04":"na_sales_ratio = []\neu_sales_ratio = []\nplatform_list = list(video.Platform.unique())\n\nfor i in platform_list:\n    x = video[video.Platform == i]\n    na_sales = sum(x.NA_Sales)\/len(x)\n    na_sales_ratio.append(na_sales)\n    eu_sales = sum(x.EU_Sales)\/len(x)\n    eu_sales_ratio.append(eu_sales)\n    \ndata = pd.DataFrame({\"na_sales_ratio\":na_sales_ratio, \"eu_sales_ratio\":eu_sales_ratio})\n\n# Visualization\nf,ax = plt.subplots(figsize=(15,8))\nsns.pointplot(x=platform_list, y= data.na_sales_ratio, color=\"red\", ax=ax )\nsns.pointplot(x=platform_list, y= data.eu_sales_ratio, color=\"lime\", ax=ax )\n\nplt.text(14, 0.6, 'na sales ratio', color='red', fontsize = 15, style = 'italic')\nplt.text(14, 0.65, 'eu sales ratio', color='lime', fontsize = 15, style = 'italic')\nax.set(xlabel=\"Platforms\", ylabel = \"Sales Ratio\", title= \"Sales Ratio of Platforms\" )\nplt.grid()","cef857ae":"# Show the joint distribution using kernel density estimation \n\nsns.jointplot(x=global_sales_ratio, y=na_sales_ratio, data=sales_ratio, kind=\"kde\", size=7)\nplt.show()   ","a738e663":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\n\nsns.jointplot(x=global_sales_ratio, y=na_sales_ratio, data=sales_ratio, size=7, ratio=4 , color=\"red\")\nplt.show()","652a828d":"# preparing the data for visualization\nlabels = video.Genre.value_counts().index\ncolors = [\"lime\", \"coral\", \"forestgreen\", \"gold\", \"grey\", \"crimson\", \"r\", \"yellow\", \"maroon\", \"darkorange\", \"deepskyblue\", \"c\"]\nexplode = [0,0,0,0,0,0,0,0,0,0,0,0]\nsizes = video.Genre.value_counts().values\n\nplt.figure(figsize=(10,10))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.show()","7c012fc2":"# Visualization of global sales rate vs NA sales rate of each platform with different style of seaborn code\n# lmplot\n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"global_sales_ratio\", y=\"eu_sales_ratio\", data=sales_ratio)\nplt.show()","bde45f65":"# Visualization of global sales rate vs NA sales rate of each platform with different style of seaborn code\nsns.kdeplot(sales_ratio.global_sales_ratio, sales_ratio.eu_sales_ratio, shade=True, cut=4)\nplt.show()","f845cec7":"# Show each distribution with both violins and points\nplt.figure(figsize=(10,4))\nsns.violinplot(data=data, colors = (\"red\",\"blue\",\"yellow\"), inner=\"points\")\nplt.show()","520ac0ca":"data.corr()","530c8e3c":"plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5, linecolor=\"black\")\nplt.show()","13ace4cc":"new_data = pd.DataFrame({\"name\": (\"charles\",\"max\",\"moe\",\"jason\",\"sue\",\"abby\",\"amanda\",\"alexa\"),\n                         \"occupation\": (\"doctor\",\"teacher\",\"teacher\",\"doctor\",\"doctor\",\"teacher\",\"doctor\",\"teacher\"),\n                         \"gender\":(\"male\",\"male\",\"male\",\"male\",\"female\",\"female\",\"female\",\"female\"),\n                         \"age\": (30,25,45,50,41,20,58,37)})\nnew_data","beba49b0":"plt.subplots(figsize=(7,7))\nsns.boxplot(x=\"occupation\", y=\"age\", hue=\"gender\", data=new_data, palette=\"Set2\")","e94ca5f2":"video.head()","192a3fef":"plt.subplots(figsize=(7,7))\nsns.swarmplot(x=\"occupation\", y=\"age\", hue=\"gender\", data=new_data, palette=\"Set2\")","3268b5d7":"data.head()","0e4becca":"sns.pairplot(data)\nplt.show()","bdc69c1c":"video.head()","114f5941":"video.Year_of_Release = video.Year_of_Release.astype(int)  # change \"flot year\" to \"int year\"\nrelease = video.loc[:100, \"Year_of_Release\"]\n#visualization\nplt.subplots(figsize=(15,10))\nsns.countplot(release)\nplt.xlabel(\"Year\")\nplt.title(\"Year of Release\", fontsize=15)","7d837df5":"## Pie Plot","7814ddba":"## Lm Plot","d881ec11":"## Bar Plot","006b56ab":"The most popular genre is action as expected because everyone likes action game.","96b884d5":"## Pair Plot","2d52be1d":"## Swarm Plot","70977f8d":"Let's trying to find  the most popular platform in the world","3d210a9b":"# Analyzing The Data","9ce49cb5":"## Box Plot","dccc7f86":"## Violin Plot","94177e63":"## Heatmap","6b2098a0":"## Count Plot","9c30da2a":"## Kde Plot","a8c4fb07":"## Point Plot","2ea989b7":"I don't have enough data for swarm plot but it does same thing with box plot","854bc11b":"## Joint Plot","da2c3526":"# Visualization"}}