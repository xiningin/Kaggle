{"cell_type":{"f36ace25":"code","b258b815":"code","712a89c0":"code","9de346e4":"code","a4a3d1fd":"code","37e5051e":"code","f6f8a118":"code","9f5b0c40":"code","15f330a0":"code","bd62bcc0":"code","4910f93a":"code","6339f177":"code","b2aa6900":"code","f4128c71":"code","83b98afa":"code","95126b97":"code","13e3bbc7":"code","56f7144e":"markdown","7c1d90de":"markdown","e8f90ca0":"markdown","9314a055":"markdown","38fa8333":"markdown","95532b22":"markdown","70544b97":"markdown","4d585941":"markdown","2ce271f5":"markdown","37616537":"markdown","09eb812c":"markdown","ecdd061e":"markdown","b6a885aa":"markdown","64100114":"markdown","4cd91c29":"markdown","77437f37":"markdown"},"source":{"f36ace25":"import pandas as pd\n\nimport numpy as np\n\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\n\nfrom xgboost import XGBClassifier\n\nfrom sklearn.svm import SVC\n\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\n\n","b258b815":"titanic_filepath = ('..\/input\/titanic\/train.csv')\n\ntitanic_data= pd.read_csv(titanic_filepath)\n\ntest_filepath = ('..\/input\/titanic\/test.csv')\n\ntest_data=pd.read_csv(test_filepath)\n\n","712a89c0":"titanic_data.head()","9de346e4":"features=['Sex', 'Pclass','Parch','SibSp','Fare']\n","a4a3d1fd":"x=titanic_data[features]\n\ntest_x=test_data[features]","37e5051e":"y=titanic_data.Survived","f6f8a118":"x.head()","9f5b0c40":"\ncleanup_nums = {\"Sex\":     {\"male\": 1, \"female\": 2}}\n\ncleanup_nums2 = {\"Embarked\":     {\"S\": 1, \"C\": 2, \"Q\": 3}}\n\nx.head()","15f330a0":"x.replace(cleanup_nums, inplace=True)\n\nx.head()\n\ntest_x.replace(cleanup_nums, inplace=True)\n\nx.replace(cleanup_nums2, inplace=True)\n\nx.head()\n\ntest_x.replace(cleanup_nums2, inplace=True)\n\nx.head()\n","bd62bcc0":"x=x.fillna(x.mean())\n\ntest_x=test_x.fillna(test_x.mean())\n","4910f93a":"rf=RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\n\nsvm=SVC()\n\nmodel=XGBClassifier()\n","6339f177":"model= VotingClassifier(estimators=[ ('rf', rf), ('xgb', model), ('svm', svm)], voting='hard')\n\nmodel.fit(x,y)","b2aa6900":"\nsubmission_path = ('..\/input\/titanic\/gender_submission.csv')\n\nsubmission= pd.read_csv(submission_path)","f4128c71":"submission['Survived']=model.predict(test_x)","83b98afa":"\n\nsubmission['PassengerId']=test_data['PassengerId']\n\nsubmission.columns=['PassengerId','Survived']\n\n\n","95126b97":"submission.columns=['PassengerId','Survived']\n\nsubmission.head()\n","13e3bbc7":"submission.to_csv('Submission.csv', index=False)","56f7144e":"Observe that Sex is a not numerical value","7c1d90de":"Convert it to a .csv file","e8f90ca0":"Submit it and hooray you have an ensemble model!! Please do upvote. Hope you learned something. Congrats on your first ensemble model","9314a055":"Import the necessary libraries","38fa8333":"Select necessary features based on analysis","95532b22":"Replace PassengerId from test_data","70544b97":"Have a look to check if all if fine","4d585941":"Read the necessary files","2ce271f5":"> The following is a brief guide to make your first ensemble model which uses XGBoost, Random Forest and SVM. This should get you in the top **5%**. All the best on your first ensemble!! \n","37616537":"Replace the Sex values with 'cleanup_nums'","09eb812c":"Get the sample submission file","ecdd061e":"Input predictions into survived column","b6a885aa":"Fill blank cells with mean of data","64100114":"Define the models","4cd91c29":"Make an voting ensemble model using the previosuly defined models","77437f37":"Extract only the features"}}