{"cell_type":{"2d3d200c":"code","217d395d":"code","7ea8dec2":"code","234e49d0":"code","cfdcecf9":"code","dd03d733":"code","4bd64c90":"code","81e29f0b":"code","c67b9ac2":"code","ea491039":"code","d8daffa9":"code","5daac6af":"code","9158e484":"code","393deab7":"code","9e75c228":"code","b92d5210":"code","fa3fd9f3":"code","5e820478":"code","26e2e527":"code","39c60a59":"code","f64d9179":"markdown","0a95732b":"markdown","862bc02f":"markdown","2517f2bf":"markdown","1c40dec4":"markdown","b4b6a24f":"markdown","e1a24b75":"markdown","ed4fe67a":"markdown","f72d4587":"markdown","8781bcd6":"markdown","a6b6e881":"markdown","f86a8e58":"markdown","202b219f":"markdown","0edde517":"markdown","3c8db40d":"markdown","4b2f57b9":"markdown","4fe9aa63":"markdown"},"source":{"2d3d200c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","217d395d":"df_covid_basic = pd.read_csv('\/kaggle\/input\/covid19dataset\/COVID_Data_Basic.csv')\ndf_covid = pd.read_csv('\/kaggle\/input\/covid19dataset\/COVID_Data.csv')\ndf_ibov = pd.read_csv('\/kaggle\/input\/ibovespa-points\/datasets_Ibovespa_points_1994_2020.csv')","7ea8dec2":"df_brazil_covid = df_covid_basic[df_covid_basic['Country']=='Brazil']\ndef convert_date(date):\n    splitted_date = date.split(\".\")\n    return splitted_date[2] + \"-\"+ splitted_date[1] + \"-\" + splitted_date[0]\n\ndef remove_m_volume(str):\n    if 'M' in str:\n        str = str.replace(\"M\",'')\n        str = str.replace(',','')\n        return float(str) * 1000000\n    elif 'K' in str:\n        str = str.replace(\"K\",'')\n        str = str.replace(',','')\n        return float(str) * 1000\n    else:\n        return 0\n    \ndf_ibov['Date'] = df_ibov['Date'].apply(lambda x : convert_date(x))\ndf_ibov['Volume'] = df_ibov['Volume'].apply(lambda x : remove_m_volume(x))\ndf_ibov['Volume'] = df_ibov['Volume'].astype(float)\n\ndf_covid_period_ibov = df_ibov[df_ibov['Date']>='2020-01-01']\ndf_brazil_covid = df_brazil_covid[df_brazil_covid['Date'].isin(list(df_covid_period_ibov['Date']))]\ndf_covid_period_ibov = df_covid_period_ibov.drop(df_covid_period_ibov.index[[0,1]])\ndf_brazil_covid = df_brazil_covid.sort_values(by='Date', ascending=True)\ndf_covid_period_ibov = df_covid_period_ibov.sort_values(by='Date', ascending=True)\ndf_covid_period_ibov['Close points'] = df_covid_period_ibov['Close points'].apply(lambda x : x.replace(',','.'))\ndf_covid_period_ibov['Close points'] = df_covid_period_ibov['Close points'].astype(float)","234e49d0":"import matplotlib.dates as mdates\nimport matplotlib.pyplot as plt\nimport datetime\nimport plotly.express as px\nfrom plotly.graph_objs import *\nimport plotly.graph_objects as go\n\ndef plot_line_chart(df, date_column1, column2, title):\n    fig = px.line(x=pd.to_datetime(df[date_column1].values), y=df[column2])\n    fig.update_layout({\n        'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n        'paper_bgcolor': 'rgba(0, 0, 0, 0)',\n    })\n    fig.show()\n\ndef covid_charts(df, column1, column2, title):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(\n        x=df['Date'].values, y=df[column1],\n        name=column1,\n        mode='lines',\n        marker_color='rgba(152, 0, 0, .8)'\n    ))\n\n    fig.add_trace(go.Scatter(\n        x=df['Date'].values, y=df[column2],\n        name=column2,\n        mode='lines',\n        marker_color='rgba(255, 182, 193, .9)'\n    ))\n    fig.update_layout({\n        'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n        'paper_bgcolor': 'rgba(0, 0, 0, 0)',\n    })\n    fig.show()\n\nplot_line_chart(df_covid_period_ibov, 'Date', 'Close points', 'Ibovespa index in covid period')\ncovid_charts(df_brazil_covid,'Confirmed', 'Death', 'Confirmed cases vs Deaths')\ncovid_charts(df_brazil_covid,'newConfirmed', 'newDeath', 'Daily confirmed cases vs Daily new deaths')","cfdcecf9":"def plot_line_chart_rolling_mensure(df, column2, title):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(\n        x=df['Date'].values, y=df[column2].rolling(window=7, center=False).mean(),\n        name='rolling mean '+ column2,\n        mode='lines',\n        marker_color='rgba(255, 0, 0, .8)'\n    ))\n    fig.add_trace(go.Scatter(\n        x=df['Date'].values, y=df[column2].rolling(window=7, center=False).std(),\n        name='rolling std ' + column2,\n        mode='lines',\n        marker_color='rgba(0, 255, 0, .9)'\n    ))\n    fig.update_layout({\n        'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n        'paper_bgcolor': 'rgba(0, 0, 0, 0)',\n    })\n    fig.show()\n    \nplot_line_chart_rolling_mensure(df_covid_period_ibov, 'Close points', 'Ibovespa index in covid period')","dd03d733":"from statsmodels.tsa.stattools import adfuller\ndef adf_test(timeseries):\n    print ('Results of Dickey-Fuller Test:')\n    dftest = adfuller(timeseries, autolag='AIC')\n    dfoutput = pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in dftest[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    print (dfoutput)\n\nadf_test(df_covid_period_ibov['Close points'].values)","4bd64c90":"def difference(dataset, interval=1):\n    diff = list()\n    for i in range(interval, len(dataset)):\n        value = dataset[i] - dataset[i - interval]\n        diff.append(value)\n    return diff\n\ndetrend = difference(df_covid_period_ibov['Close points'].values)\nframe = pd.DataFrame([])\nframe['detrend'] = detrend\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    y=frame['detrend'].values,\n    name='rolling mean ',\n    mode='lines',\n    marker_color='rgba(0, 0, 255, .8)'\n))\nfig.add_trace(go.Scatter(\n    y=frame['detrend'].rolling(window=7, center=False).mean(),\n    name='rolling mean ',\n    mode='lines',\n    marker_color='rgba(255, 0, 0, .8)'\n))\nfig.add_trace(go.Scatter(\n    y=frame['detrend'].rolling(window=7, center=False).std(),\n    name='rolling std ' ,\n    mode='lines',\n    marker_color='rgba(0, 255, 0, .9)'\n))\nfig.update_layout({\n    'title': 'detrend series',\n    'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n    'paper_bgcolor': 'rgba(0, 0, 0, 0)',\n})\nfig.show()\n\nadf_test(detrend)","81e29f0b":"deseasonality = difference(df_covid_period_ibov['Close points'].values, 7)\nframe = pd.DataFrame([])\nframe['detrend'] = deseasonality\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    y=frame['detrend'].values,\n    name='rolling mean ',\n    mode='lines',\n    marker_color='rgba(0, 0, 255, .8)'\n))\nfig.add_trace(go.Scatter(\n    y=frame['detrend'].rolling(window=7, center=False).mean(),\n    name='rolling mean ',\n    mode='lines',\n    marker_color='rgba(255, 0, 0, .8)'\n))\nfig.add_trace(go.Scatter(\n    y=frame['detrend'].rolling(window=7, center=False).std(),\n    name='rolling std ' ,\n    mode='lines',\n    marker_color='rgba(0, 255, 0, .9)'\n))\nfig.update_layout({\n    'title': 'deseasonality series',\n    'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n    'paper_bgcolor': 'rgba(0, 0, 0, 0)',\n})\nfig.show()\n\nadf_test(deseasonality)","c67b9ac2":"from statsmodels.tsa.stattools import acf, pacf\nacf_values = acf(detrend)\npacf_values = pacf(detrend, method='ols')","ea491039":"def compute_limit(serie, upper=True):\n    limit = []\n    y=1.96\/np.sqrt(len(serie))\n    for i in range(0, len(serie)):\n        if upper == True:\n            limit.append(y)\n        else:\n            limit.append(-y)\n    return limit\n\ndef plot_acf(serie, title):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(\n        y=serie,\n        name='serie',\n        mode='lines',\n        marker_color='rgba(0, 0, 255, .8)'\n    ))\n    fig.add_trace(go.Scatter(\n        y=compute_limit(serie),\n        name='upper limit',\n        mode='lines',\n        marker_color='rgba(0, 0, 0, .8)'\n    ))\n    fig.add_trace(go.Scatter(\n        y=compute_limit(serie, False),\n        name='down limit' ,\n        mode='lines',\n        marker_color='rgba(0, 0, 0, .9)'\n    ))\n    fig.update_layout({\n        'title': title,\n        'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n        'paper_bgcolor': 'rgba(0, 0, 0, 0)',\n    })\n    fig.show()  \nplot_acf(acf_values, 'Autocorrelation function')","d8daffa9":"plot_acf(pacf_values, 'Partial Autocorrelation function')","5daac6af":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(df_covid_period_ibov['Close points'].values, order=(1,0,1)) \nmodel_fit = model.fit(disp=0)","9158e484":"from pandas import datetime\nforecast = model_fit.predict()","393deab7":"fig = go.Figure()\nfig.add_trace(go.Scatter(\n        y=forecast,\n        name='predict',\n        mode='lines',\n        marker_color='rgba(0, 0, 255, .8)'\n))\nfig.add_trace(go.Scatter(\n        y=df_covid_period_ibov['Close points'].values,\n        name='Original',\n        mode='lines',\n        marker_color='rgba(0, 0, 0, .8)'\n))\nfig.update_layout({\n        'title': 'Predict vs Real',\n        'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n        'paper_bgcolor': 'rgba(0, 0, 0, 0)',\n})\nfig.show() ","9e75c228":"import seaborn as sns\n\ndef heatmap(df, df2,column1, column2, title): \n    matrix = np.corrcoef(df[column1].values, df2[column2].values)\n    ax = sns.heatmap(matrix, annot=True, fmt=\"f\", \n                     yticklabels=[column1, column2], \n                     xticklabels=[column1, column2])\n    ax.set_title(title)\n\nheatmap(df_covid_period_ibov, df_brazil_covid, 'Close points', 'Death', 'correlation between Ibovespa points and Death by corona')","b92d5210":"heatmap(df_covid_period_ibov, df_brazil_covid, 'Close points', 'Confirmed', \n        'correlation between Ibovespa points and total confirmed cases')","fa3fd9f3":"heatmap(df_covid_period_ibov, df_brazil_covid, 'Close points', 'newDeath', 'correlation between Ibovespa points and daily deaths')","5e820478":"heatmap(df_covid_period_ibov, df_brazil_covid, 'Close points', 'newConfirmed', 'correlation between Ibovespa points and daily new cases')","26e2e527":"heatmap(df_covid_period_ibov, df_brazil_covid, 'Close points', 'Recovered', 'correlation between Ibovespa points and recover')","39c60a59":"heatmap(df_covid_period_ibov, df_brazil_covid, 'Close points', 'newRecovered', 'correlation between Ibovespa points and daily recovered')","f64d9179":"<a id=\"1\"><\/a> <br>\n<font size=\"+3\" color=\"black\"><b>1 - Introduction<\/b><\/font><br><a id=\"1\"><\/a>\n<br> \n\n* lets see the brazilian stock market and covids charts","0a95732b":"* Unlike the first set of charts ilustrates, that how deaths and confirmed cases grow up the Ibovespa index grow up too, the correlation among daily, total of deaths and confirmed cases, show that this variables has negative impact of brazilian stock market Ibovespa.","862bc02f":"<a id=\"3\"><\/a> <br>\n<font size=\"+3\" color=\"black\"><b>3 - Correlations<\/b><\/font><br><a id=\"3\"><\/a>\n<br> ","2517f2bf":"* the graph above shows that there was a period of strong volatility where the point average drops a lot and the standard deviation goes up\n* so lets try to build a model that predict this difficult time.\n* First to generate this model we need a stationary time series \n  - stationatiry time serie has some properties like:\n      - constant mean \n      - constant variance\n\n* our current series apparently dont have this properties so to confirme this i will apply adf_test if p-value is 0 or to next 0 we can accept test","1c40dec4":"* Lets observer how stock brazilian market Ibovespa behaved over the first 6 months of the corona virus pandemic","b4b6a24f":"* The seasonality gave a worse result, so the series the i will use is product of detrend \n* To modelling the series i will use arima model, in arima we need pass two params 'p' and 'q'\n  - p : is the value choose to AR model  terms are lags of dependent variable  \n  - q : is the value of MA model are lags of erros in predict equation\n  \n* To determine this values we use the acf and pacf ","e1a24b75":"* so our test failed, know i need to convert this series to a stationary series we can do this by the deseasonality or detrend, i will apply the two methods and select series the better fits the adf test","ed4fe67a":"* How people are recovered of covid,total and daily demonstrate dont impact index positively or negatively.","f72d4587":"* First chart ilustrate the impact of covid period in IBovespa index, compare it with others wen can observer that in the same period when the are low number of cases the impact over index is great, but when the contamination evolves and deaths grow up the index start recovery.","8781bcd6":"* The results looklike good we have a really small value to p-value with the detrend method to convert the series to stationary\n* Now use the seasonality to see whats happen in adf_test","a6b6e881":"* as shown in the graph above the predicted values \u200b\u200bare very close to the actual values","f86a8e58":"<img src='https:\/\/media.istockphoto.com\/vectors\/covid19-outbreak-impacting-the-stock-market-markets-plunging-economic-vector-id1209967012' style='height:400px'>","202b219f":"<a id=\"2\"><\/a> <br>\n<font size=\"+3\" color=\"black\"><b>2 - Time Series<\/b><\/font><br><a id=\"2\"><\/a>\n<br> ","0edde517":"* the chosen values of acf and pacf are the points on the X axis where the blue line touches the black line","3c8db40d":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n  <h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">&nbsp;Summary:<\/h1>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#1\" role=\"tab\" aria-controls=\"profile\">1. Introduction<span class=\"badge badge-primary badge-pill\">1<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#2\" role=\"tab\" aria-controls=\"messages\">2. Time Series<span class=\"badge badge-primary badge-pill\">2<\/span><\/a>\n      <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#2\" role=\"tab\" aria-controls=\"messages\">3. Correlations<span class=\"badge badge-primary badge-pill\">3<\/span><\/a>\n      <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#2\" role=\"tab\" aria-controls=\"messages\">4. Conclusion<span class=\"badge badge-primary badge-pill\">4<\/span><\/a>\n<\/div>","4b2f57b9":"<a id=\"4\"><\/a> <br>\n<font size=\"+3\" color=\"black\"><b>4 - Conclusion<\/b><\/font><br><a id=\"4\"><\/a>\n<br> \n* Maybe in the short term the covid impact in brazilian stock market is speculative because when the first deaths group up, and when low contamination and 0 deaths index fell sharply, but when we observer the correlation between death, cases and recovery, is possible look that are some relationship but not enough to define the behavior of the index.","4fe9aa63":"* working in progress"}}