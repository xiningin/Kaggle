{"cell_type":{"f4e8c8a7":"code","cded8b57":"code","5e45dc34":"code","4d459032":"code","500a86a9":"code","7bde4b7c":"code","807d4fb6":"code","a789ff38":"code","7fe85233":"code","df2e2c2a":"code","87e862f8":"code","91a99d64":"code","8f71f6e2":"code","dfcf2282":"code","310f8dc4":"code","79cb3ca5":"code","c81e5a92":"code","8e615281":"code","3ec7ac70":"code","f420f7f5":"code","d35bb80a":"code","e1b6a093":"code","a2400976":"code","d0c52a91":"code","4e535705":"code","7719263f":"code","4f02ff2b":"code","a97860d1":"code","630a335d":"code","89d3440d":"code","d6f3e11b":"code","267b8a06":"code","bdce1bbb":"code","072c25c4":"code","97d3a761":"code","343ce463":"code","3da11ead":"code","52b3d62d":"code","e0c780d1":"code","05b3f45d":"code","59f57cf3":"code","a39b5a11":"code","4844997e":"code","8af5cde3":"code","21576101":"code","87177379":"code","59906222":"code","9298f7b0":"code","3274b886":"code","9f6fdc73":"code","893eda48":"code","f68f8d43":"code","fcabdece":"code","19a5c962":"code","37f01005":"code","e38a9a9e":"code","57301409":"code","5d2b9a4f":"code","d12bf073":"code","e51efad5":"code","2586d1d9":"markdown","8cc420cf":"markdown","ea756d8d":"markdown","44b3af04":"markdown","d81b9138":"markdown","0e8bbeff":"markdown","d1286e2c":"markdown","cbce2242":"markdown","95b85dd0":"markdown","fa11ef52":"markdown","e7792ec3":"markdown","5e9929c1":"markdown","e46b367c":"markdown","8f6d0f21":"markdown"},"source":{"f4e8c8a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt   \nfrom sklearn.impute import SimpleImputer\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cded8b57":"df_2019 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2019.csv\")\ndf_2018 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2018.csv\")\ndf_2017 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2017.csv\")\ndf_2016 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2016.csv\")\ndf_2015 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2015.csv\")","5e45dc34":"df_2019.info()","4d459032":"df_2019.head()","500a86a9":"df_2019.tail()","7bde4b7c":"df_2015.describe()","807d4fb6":"df_2019.info()","a789ff38":"print(df_2019.columns, df_2018.columns, df_2017.columns, df_2016.columns, df_2015.columns, sep =\"\\n\")","7fe85233":"df_2015.rename(columns={\"Economy (GDP per Capita)\" : \"Economy\"}, inplace=True)\ndf_2016.rename(columns={\"Economy (GDP per Capita)\" : \"Economy\"}, inplace=True)\ndf_2017.rename(columns={\"Economy..GDP.per.Capita.\" : \"Economy\"}, inplace=True)\ndf_2018.rename(columns={\"GDP per capita\" : \"Economy\"}, inplace=True)\ndf_2019.rename(columns={\"GDP per capita\" : \"Economy\"}, inplace=True)","df2e2c2a":"df_2015.rename(columns={\"Happiness Score\" : \"Score\"}, inplace=True)\ndf_2016.rename(columns={\"Happiness Score\" : \"Score\"}, inplace=True)\ndf_2017.rename(columns={\"Happiness.Score\" : \"Score\"}, inplace=True)","87e862f8":"df_2015.rename(columns={\"Happiness Rank\" : \"Rank\"}, inplace=True)\ndf_2016.rename(columns={\"Happiness Rank\" : \"Rank\"}, inplace=True)\ndf_2017.rename(columns={\"Happiness.Rank\" : \"Rank\"}, inplace=True)\ndf_2018.rename(columns={\"Overall rank\" : \"Rank\"}, inplace=True)\ndf_2019.rename(columns={\"Overall rank\" : \"Rank\"}, inplace=True)","91a99d64":"df_2015.drop(columns=[\"Region\"], inplace=True)\ndf_2016.drop(columns=[\"Region\"], inplace=True)\ndf_2018.rename(columns={\"Country or region\" : \"Country\"}, inplace=True)\ndf_2019.rename(columns={\"Country or region\" : \"Country\"}, inplace=True)","8f71f6e2":"df_2015.rename(columns={\"Health (Life Expectancy)\" : \"Health\"}, inplace=True)\ndf_2016.rename(columns={\"Health (Life Expectancy)\" : \"Health\"}, inplace=True)\ndf_2017.rename(columns={\"Health..Life.Expectancy.\" : \"Health\"}, inplace=True)\ndf_2018.rename(columns={\"Healthy life expectancy\" : \"Health\"}, inplace=True)\ndf_2019.rename(columns={\"Healthy life expectancy\" : \"Health\"}, inplace=True)","dfcf2282":"df_2018.rename(columns={\"Freedom to make life choices\" : \"Freedom\"}, inplace=True)\ndf_2019.rename(columns={\"Freedom to make life choices\" : \"Freedom\"}, inplace=True)","310f8dc4":"df_2015.rename(columns={\"Trust (Government Corruption)\" : \"Trust\"}, inplace=True)\ndf_2016.rename(columns={\"Trust (Government Corruption)\" : \"Trust\"}, inplace=True)\ndf_2017.rename(columns={\"Trust..Government.Corruption.\" : \"Trust\"}, inplace=True)\ndf_2018.rename(columns={\"Perceptions of corruption\" : \"Trust\"}, inplace=True)\ndf_2019.rename(columns={\"Perceptions of corruption\" : \"Trust\"}, inplace=True)","79cb3ca5":"df_2015['Year'] =2015\ndf_2016['Year'] =2016\ndf_2017['Year'] =2017\ndf_2018['Year'] =2018\ndf_2019['Year'] =2019","c81e5a92":"df_2015.drop(columns=[\"Standard Error\"], inplace=True)","8e615281":"df_2015.drop(columns=[\"Family\",\"Dystopia Residual\"], inplace=True)","3ec7ac70":"df_2016.drop(columns=[\"Lower Confidence Interval\",\"Upper Confidence Interval\",\"Family\",\"Dystopia Residual\"],inplace=True)","f420f7f5":"df_2017.drop(columns=[\"Whisker.high\",\"Whisker.low\",\"Family\",\"Dystopia.Residual\"], inplace=True)","d35bb80a":"df_2018.drop(columns=[\"Social support\"], inplace=True)","e1b6a093":"df_2019.drop(columns=[\"Social support\"], inplace=True)","a2400976":"print(df_2019.columns, df_2018.columns, df_2017.columns, df_2016.columns, df_2015.columns, sep =\"\\n\")","d0c52a91":"df_happiness = pd.concat([df_2015,df_2016,df_2017,df_2018,df_2019],axis=0)","4e535705":"df_happiness","7719263f":"df_happiness.describe()","4f02ff2b":"print('Country unique')\ncountries=df_happiness.Country.unique()\nfor country in countries:\n    print(country)","a97860d1":"print(\"Country Counts :\\n\")\nprint(df_happiness['Country'].value_counts())","630a335d":"pd.isnull(df_happiness).sum()","89d3440d":"df_happiness.dropna(how='any',axis='rows')","d6f3e11b":"Sum=df_happiness.isnull().sum()\nPercentage = (df_happiness.isnull().sum()\/df_happiness.isnull().count())\npd.concat([Sum,Percentage], axis=1,keys=['Sum','Percentage'])","267b8a06":"df_eksik =df_happiness[df_happiness['Trust'].isna()]\ndf_eksik","bdce1bbb":"Sum=df_happiness.isnull().sum()\nPercentage = (df_happiness.isnull().sum()\/df_happiness.isnull().count())\npd.concat([Sum,Percentage], axis=1,keys=['Sum','Percentage'])","072c25c4":"pd.isnull(df_happiness).sum()","97d3a761":"df_happiness.drop([19],axis=0,inplace=True)","343ce463":"pd.isnull(df_happiness).sum()","3da11ead":"import matplotlib.pyplot as plt ","52b3d62d":"plt.figure(figsize=(12,6))\n\nplt.plot(df_2019.Economy)  \n\nplt.show()","e0c780d1":"plt.figure(figsize=(12,6))\n\nplt.plot(df_2019.Health, df_2019.Score) \n\nplt.title(\"\u00dclkelerin mutluluk-sa\u011fl\u0131k de\u011ferleri ili\u015fkisi \")\n\nplt.xlabel(\"Sa\u011fl\u0131k Oranlar\u0131\")\n\nplt.ylabel(\"Mutluluk De\u011ferleri\")\nplt.show()","05b3f45d":"plt.figure(figsize=(12,6))\nplt.plot(df_2019.Score,df_2019.Economy,color=\"red\") \nplt.plot(df_2019.Score,df_2019.Health,color=\"blue\")\nplt.xlabel(\"Mutluluk De\u011feri\")\nplt.ylabel(\"Ekonomi ve Sa\u011fl\u0131k oranlar\u0131\")\nplt.title(\"\u00dclkelerin Ekonomi ve Sa\u011fl\u0131k oranlar\u0131\")\nplt.show()","59f57cf3":"plt.figure(figsize=(20,10))\nplt.subplot(2,2,1)   \nplt.plot(df_2019.Score,df_2019.Trust,color=\"r\") \nplt.xlabel(\"Mutluluk\")\nplt.ylabel(\"G\u00fcven De\u011feri\")\nplt.title(\"2019 y\u0131l\u0131 \u00dclkelerin Mutluluk-G\u00fcven Oranlar\u0131\")\n\nplt.subplot(2,2,2)\nplt.plot(df_2019.Score,df_2019.Freedom,color=\"blue\")\nplt.xlabel(\"Mutluluk\")\nplt.ylabel(\"\u00d6zg\u00fcrl\u00fck De\u011feri\")\nplt.title(\"2019 y\u0131l\u0131 \u00dclkelerin Mutluluk-\u00d6zg\u00fcrl\u00fck Oranlar\u0131\")\nplt.show()","a39b5a11":"f=plt.figure(figsize=(12,4)) \naxes1=f.add_axes([0.1,0.1,0.9,0.9]) \naxes2=f.add_axes([0.65,0.2,0.3,0.3])\n\naxes1.plot(df_2019.Score,df_2019.Health,color=\"blue\")\naxes2.plot(df_2015.Score,df_2015.Health,color=\"red\")\naxes1.set_xlabel(\"Skor\")\naxes2.set_xlabel(\"Skor\")\naxes1.set_ylabel(\"Sa\u011fl\u0131k\")\naxes2.set_ylabel(\"Sa\u011fl\u0131k\")\naxes1.set_title(\"2019 Sa\u011fl\u0131k-Mutluluk Oran\u0131\")\naxes2.set_title(\"2015 Sa\u011fl\u0131k-Mutluluk Oran\u0131\")\n\nplt.show()","4844997e":"sns.barplot(y= df_happiness['Country'][:15], x= df_happiness['Score'])","8af5cde3":"plt.figure(figsize=(15,6))\nplt.plot(df_2019.Score,df_2019.Economy,color=\"r\",linewidth=2,linestyle=\"--\",\n        marker=\"o\",markersize=9,markerfacecolor=\"yellow\",markeredgewidth=1) \nplt.xlabel(\"Mutluluk Skorlar\u0131\")\nplt.ylabel(\"Ekonomi De\u011ferleri\")\nplt.title(\"Ekonomi - Mutluluk \u0130li\u015fkisi Oranlar\u0131\")\nplt.grid(linestyle=\"--\")\nplt.show()","21576101":"plt.figure(figsize=(18,5))\nplt.plot(df_2019.Score,df_2019.Health,color=\"r\",linewidth=3,linestyle=\"--\",marker=\"o\",markersize=8,\nmarkerfacecolor=\"yellow\",markeredgewidth=2,markeredgecolor=\"blue\",alpha=0.6) \nplt.plot(df_2019.Score,df_2019.Trust,color=\"green\",linewidth=2.5,linestyle=\":\",marker=\"o\",markerfacecolor=\"yellow\",\nmarkeredgewidth=2,markeredgecolor=\"black\",alpha=0.8)\nplt.xlabel(\"Mutluluk Skor De\u011feri\")\nplt.ylabel(\"\u00d6zg\u00fcrl\u00fck ve Ekonomi De\u011ferleri\")\nplt.title(\"Ekonomi ve \u00d6zg\u00fcrl\u00fck De\u011ferleri-Mutluluk Oranlar\u0131\")\nplt.show()","87177379":"sns.lmplot(x='Score', y='Economy', data=df_2019)","59906222":"df_copy = df_2019.drop([\"Rank\", \"Trust\",\"Generosity\",\"Year\"], axis=1)\nsns.boxplot(data=df_copy)","9298f7b0":"sns.violinplot(data=df_copy)\nplt.show()","3274b886":"corr = df_copy.corr()\nsns.heatmap(corr)","9f6fdc73":"fig = plt.figure(figsize=(10,6))\nsns.scatterplot(x= df_2015['Score'],y=df_2015['Health'])\nsns.scatterplot(x= df_2016['Score'],y=df_2016['Health'])\nsns.scatterplot(x= df_2017['Score'],y=df_2017['Health'])\nsns.scatterplot(x= df_2018['Score'],y=df_2018['Health'])\nsns.scatterplot(x= df_2019['Score'],y=df_2019['Health'])\nfig.legend(labels=['2015','2016','2017','2018','2019'])\nplt.title(\"Health vs Happiness Score from 2015- 2019\")","893eda48":"fig = plt.figure(figsize=(10,6))\nsns.scatterplot(x= df_2015['Score'],y=df_2015['Freedom'])\nsns.scatterplot(x= df_2016['Score'],y=df_2016['Freedom'])\nsns.scatterplot(x= df_2017['Score'],y=df_2017['Freedom'])\nsns.scatterplot(x= df_2018['Score'],y=df_2018['Freedom'])\nsns.scatterplot(x= df_2019['Score'],y=df_2019['Freedom'])\nfig.legend(labels=['2015','2016','2017','2018','2019'])\nplt.title(\"Freedom vs Happiness Score from 2015- 2019\")","f68f8d43":"fig = plt.figure(figsize=(10,6))\nsns.scatterplot(x= df_2015['Score'],y=df_2015['Trust'])\nsns.scatterplot(x= df_2016['Score'],y=df_2016['Trust'])\nsns.scatterplot(x= df_2017['Score'],y=df_2017['Trust'])\nsns.scatterplot(x= df_2018['Score'],y=df_2018['Trust'])\nsns.scatterplot(x= df_2019['Score'],y=df_2019['Trust'])\nfig.legend(labels=['2015','2016','2017','2018','2019'])\nplt.title(\"Trust vs Happiness Score from 2015- 2019\")","fcabdece":"print(\"In 2015, Happiest Country is \"+ str(df_2015[:1]['Country'][0]))\nprint(\"In 2016, Happiest Country is \"+ str(df_2016[:1]['Country'][0]))\nprint(\"In 2017, Happiest Country is \"+ str(df_2017[:1]['Country'][0]))\nprint(\"In 2018, Happiest Country is \"+ str(df_2018[:1]['Country'][0]))\nprint(\"In 2019, Happiest Country is \"+ str(df_2019[:1]['Country'][0]))","19a5c962":"print(\"Saddest Country is \"+ str(df_2015[-1:]['Country'][len(df_2015)-1]))\nprint(\"Saddest Country is \"+ str(df_2016[-1:]['Country'][len(df_2016)-1]))\nprint(\"Saddest Country is \"+ str(df_2017[-1:]['Country'][len(df_2017)-1]))\nprint(\"Saddest Country is \"+ str(df_2018[-1:]['Country'][len(df_2018)-1]))\nprint(\"Saddest Country is \"+ str(df_2019[-1:]['Country'][len(df_2019)-1]))","37f01005":"plt.figure(figsize=(10,5))\nsns.kdeplot(df_2015['Score'],color='red', label='2015')\nsns.kdeplot(df_2016['Score'],color='blue', label='2016')\nsns.kdeplot(df_2017['Score'],color='limegreen', label='2017')\nsns.kdeplot(df_2018['Score'],color='orange', label='2018')\nsns.kdeplot(df_2019['Score'],color='pink', label='2019')\nplt.title('Happiness Over The Years',size=20)\nplt.legend()\nplt.show()","e38a9a9e":"plt.figure(figsize=(10,5))\nsns.kdeplot(df_2015['Economy'],color='red', label='2015')\nsns.kdeplot(df_2016['Economy'],color='blue', label='2016')\nsns.kdeplot(df_2017['Economy'],color='limegreen', label='2017')\nsns.kdeplot(df_2018['Economy'],color='orange', label='2018')\nsns.kdeplot(df_2019['Economy'],color='pink', label='2019')\nplt.title('Economy Over The Years',size=20)\nplt.legend()\nplt.show()","57301409":"plt.figure(figsize=(10,5))\nsns.kdeplot(df_2015['Health'],color='red', label='2015')\nsns.kdeplot(df_2016['Health'],color='blue', label='2016')\nsns.kdeplot(df_2017['Health'],color='limegreen', label='2017')\nsns.kdeplot(df_2018['Health'],color='orange', label='2018')\nsns.kdeplot(df_2019['Health'],color='pink', label='2019')\nplt.title('Health Over The Years',size=20)\nplt.legend()\nplt.show()","5d2b9a4f":"plt.figure(figsize=(10,5))\nsns.kdeplot(df_2015['Freedom'],color='red', label='2015')\nsns.kdeplot(df_2016['Freedom'],color='blue', label='2016')\nsns.kdeplot(df_2017['Freedom'],color='limegreen', label='2017')\nsns.kdeplot(df_2018['Freedom'],color='orange', label='2018')\nsns.kdeplot(df_2019['Freedom'],color='pink', label='2019')\nplt.title('Freedom Over The Years',size=20)\nplt.legend()\nplt.show()","d12bf073":"plt.figure(figsize=(10,5))\nsns.kdeplot(df_2015['Trust'],color='red', label='2015')\nsns.kdeplot(df_2016['Trust'],color='blue', label='2016')\nsns.kdeplot(df_2017['Trust'],color='limegreen', label='2017')\nsns.kdeplot(df_2018['Trust'],color='orange', label='2018')\nsns.kdeplot(df_2019['Trust'],color='pink', label='2019')\nplt.title('Trust Over The Years',size=20)\nplt.legend()\nplt.show()","e51efad5":"plt.figure(figsize=(10,5))\nsns.kdeplot(df_2015['Generosity'],color='red', label='2015')\nsns.kdeplot(df_2016['Generosity'],color='blue', label='2016')\nsns.kdeplot(df_2017['Generosity'],color='limegreen', label='2017')\nsns.kdeplot(df_2018['Generosity'],color='orange', label='2018')\nsns.kdeplot(df_2019['Generosity'],color='pink', label='2019')\nplt.title('Generosity - Over The Years',size=20)\nplt.legend()\nplt.show()","2586d1d9":"## Happiest Country vs. Saddest Country","8cc420cf":"<a id = \"5\"><\/a><br>\n## Rename Happiness Rank to Rank","ea756d8d":"<a id = \"2\"><\/a><br>\n# Preparing Data","44b3af04":"<a id = \"9\"><\/a><br>\n## Change name for Trust (Government Corruption)","d81b9138":"## Freedom vs Happiness Score from 2015- 2019","0e8bbeff":"## Trust vs Happiness Score from 2015- 2019","d1286e2c":"<a id = \"8\"><\/a><br>\n## Change name for Freedom","cbce2242":"## Health vs Happiness Score from 2015- 2019","95b85dd0":"<a id = \"4\"><\/a><br>\n## Rename Happiness Score to Score","fa11ef52":"## Introduction\nContent: \n\n1.[Load and Check Data](#1)\n\n2.[Preparing Data](#2)\n     \n   * [Rename to Economy](#3)\n   * [Rename Happiness Score to Score](#4)\n   * [Rename Happiness Rank to Rank](#5)\n   * [Remove Region and Change name to Country](#6)\n   * [Change name for health](#7)\n   * [Change name for Freedom](#8)\n   * [Change name for Trust (Government Corruption)](#9)","e7792ec3":"<a id = \"7\"><\/a><br>\n## Change name for health","5e9929c1":"<a id = \"6\"><\/a><br>\n## Remove Region and Change name to Country","e46b367c":"<a id = \"3\"><\/a><br>\n## Rename to economy for every csv","8f6d0f21":"<a id = \"1\"><\/a><br>\n# Load and Check Data"}}