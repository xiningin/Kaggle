{"cell_type":{"23497e1c":"code","aa428e80":"code","c77001e7":"code","160583d5":"code","15cf32d9":"code","83e36b1d":"code","915cf138":"code","3ec0808f":"code","fa98125d":"code","1607a0a0":"code","c3c570c0":"code","be13a3e2":"code","2ee9feff":"code","973a68ed":"code","19dde637":"code","abfc47bc":"markdown","7591260c":"markdown","9aecac02":"markdown"},"source":{"23497e1c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa428e80":"EU27_SupplyProduction = pd.read_csv(\"\/kaggle\/input\/eu-27-energy-sources-consumption-19902018\/EU27_SupplyProduction.csv\")\nEU27_SupplyImport = pd.read_csv(\"\/kaggle\/input\/eu-27-energy-sources-consumption-19902018\/EU27_SupplyImport.csv\")\nEU27_SupplyExport = pd.read_csv(\"\/kaggle\/input\/eu-27-energy-sources-consumption-19902018\/EU27_SupplyExport.csv\")\nEU27_FinalConsumptionBySector = pd.read_csv(\"\/kaggle\/input\/eu-27-energy-sources-consumption-19902018\/EU27_FinalConsumptionBySector.csv\")\n","c77001e7":"EU27_SupplyProduction.head()","160583d5":"EU27_SupplyImport.head()","15cf32d9":"EU27_SupplyExport.head()","83e36b1d":"EU27_FinalConsumptionBySector","915cf138":"EU27_FinalConsumptionBySector_data = EU27_FinalConsumptionBySector.melt(id_vars='sector')\nEU27_FinalConsumptionBySector_data.head()","3ec0808f":"EU27_FinalConsumptionBySector_sectors = list(set(EU27_FinalConsumptionBySector_data['sector']))\nEU27_FinalConsumptionBySector_sectors.sort()\nEU27_FinalConsumptionBySector_sectors","fa98125d":"EU27_FinalConsumptionBySector_years = pd.DataFrame(EU27_FinalConsumptionBySector.columns[1:])\nEU27_FinalConsumptionBySector_years","1607a0a0":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline \nsns.set(rc={'figure.figsize':(11.7,8.27)})","c3c570c0":"chart = sns.lineplot(data=EU27_FinalConsumptionBySector_data,x='variable',y='value',hue='sector', )\nchart.set(xlabel='', ylabel='Mtoe')\nchart.set_xticklabels(EU27_FinalConsumptionBySector.columns[1:],rotation=45)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","be13a3e2":"chart = sns.lineplot(data=EU27_FinalConsumptionBySector_data[(EU27_FinalConsumptionBySector_data.sector=='Residential')],x='variable',y='value',hue='sector', )\nchart.set(xlabel='', ylabel='Mtoe')\nchart.set_xticklabels(EU27_FinalConsumptionBySector.columns[1:],rotation=45)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","2ee9feff":"chart = sns.lineplot(data=EU27_FinalConsumptionBySector_data[(EU27_FinalConsumptionBySector_data.sector=='Road')],x='variable',y='value',hue='sector', )\nchart.set_xticklabels(EU27_FinalConsumptionBySector.columns[1:],rotation=45)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","973a68ed":"chart = sns.lineplot(data=EU27_FinalConsumptionBySector_data[(EU27_FinalConsumptionBySector_data.sector=='Rail')],x='variable',y='value',hue='sector', )\nchart.set(xlabel='', ylabel='Mtoe')\nchart.set_xticklabels(EU27_FinalConsumptionBySector.columns[1:],rotation=45)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","19dde637":"chart = sns.lineplot(data=EU27_FinalConsumptionBySector_data[(EU27_FinalConsumptionBySector_data.sector=='Construction')],x='variable',y='value',hue='sector', )\nchart.set(xlabel='', ylabel='Mtoe')\nchart.set_xticklabels(EU27_FinalConsumptionBySector.columns[1:],rotation=45)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","abfc47bc":"***Note about the data***\n\nEU27_SupplyNet = EU27_SupplyProduction - EU27_SupplyExport + EU27_SupplyImport","7591260c":"**TO BE COMPLETED - EDA ONGOING FOR PUBLISHING PURPOSES - WILL BE SHARED HERE**","9aecac02":"#Executive Summary\n\nThis notebook presents the data contained within the dataset [EU 27 Energy sources - consumption 1990-2018](https:\/\/www.kaggle.com\/robertolofaro\/eu-27-energy-sources-consumption-19902018)\n\nAs of 2020-11-26, the dataset contains the following files:\n\n| name | contents |\n| --- | --- |\n| EU27_FinalConsumptionBySector | consumption by sector |\n| EU27_SupplyProduction | production by source |\n| EU27_SupplyExport | export by source (note: the values are positive: if interested in obtaining the net amont available, should compute SupplyProduction - SupplyExport + SupplyImport |\n| EU27_SupplyImport | import by source |\n\nAs the original datasource was an Excel table, the data have been extracted as subset of the spreadsheet **EU27_2020** within the source *energy_statistical_countrydatasheets.xlsx*\n\nThe first column in each CSV file is the datapoint name, followed by data columns, one for each year 1990-2018."}}