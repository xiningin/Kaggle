{"cell_type":{"c14b0dbf":"code","6cc9bc27":"code","cf4a1c17":"code","08880b3f":"code","54c80780":"code","90244400":"code","ff164d9a":"code","a15c7a1b":"code","cb8eb651":"code","7c6b1e53":"code","c5d75444":"code","dc9b7d81":"code","06584a7e":"code","b256988f":"code","4f02dec3":"code","167ccbf6":"code","0f37eb15":"code","67a6b131":"code","b19a79fb":"code","fcbb93f8":"code","4d0d1b51":"code","d5adf327":"code","67ce6a97":"code","c457bbf3":"code","e5ecca6d":"code","e69017d6":"markdown"},"source":{"c14b0dbf":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","6cc9bc27":"df = pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")\ndf.head(10)","cf4a1c17":"df.dtypes","08880b3f":"df.describe()","54c80780":"df.loc[df.isnull().any(axis=1)]","90244400":"df.loc[df.isna().any(axis=1)]","ff164d9a":"df.loc[df.duplicated(keep=False)]","a15c7a1b":"sns.pairplot(data=df, vars=['Age', 'RestingBP', 'Cholesterol', 'HeartDisease'], hue='Sex', palette='afmhot')","cb8eb651":"group1 = df.groupby('Sex').count()\ngroup1.head()\n\nsex = [group for group, df1 in df.groupby('Sex')]\n\nheart_m = df.loc[df['Sex'] == 'M']\nheart_f = df.loc[df['Sex'] == 'F']\n\n# y1 = heart_t.groupby('Sex').count()['Age']\n# y2 = heart_f.groupby('Sex').count()['Age']","7c6b1e53":"heart_m = heart_m.loc[df['HeartDisease'] == 1, 'Age'].count()\nheart_f = heart_f.loc[df['HeartDisease'] == 1, 'Age'].count()","c5d75444":"plt.style.use('ggplot')\n\nfig, ax = plt.subplots(nrows=2, ncols=2, figsize=(10, 8))\n\nax[0,0].hist(df['Age'], bins=5, color='green', edgecolor='k')\nax[0,0].set_xlabel('Age')\nax[0,0].set_ylabel('No. of people')\nax[0,0].set_xticks(np.arange(28, 79, 10))\n\nax[0,1].bar('Male', heart_m, width=0.4)\nax[0,1].bar('Female', heart_f, width=0.4)\nax[0,1].set_xlabel('Sex')\nax[0,1].set_ylabel('No. of people with heart disease')\n\nax[1,0].hist(df['RestingBP'], bins=4, color='purple', edgecolor='k')\nax[1,0].set_xlabel('Resting BP')\nax[1,0].set_ylabel('No. of people')\nax[1,0].set_xticks(np.arange(0, 200, 50))\n\nax[1,1].hist(df['Cholesterol'], bins=6, color='orange', edgecolor='k')\nax[1,1].set_xlabel('Cholesterol Level')\nax[1,1].set_ylabel('No. of people')\nax[1,1].set_xticks(np.arange(0, 600, 100))\n\nplt.tight_layout(pad=2)\nplt.show()","dc9b7d81":"df.head(10)","06584a7e":"df.corr()","b256988f":"fig, ax = plt.subplots(figsize=(8,6))\nsns.heatmap(df.corr(), ax=ax, vmin=-0.4, vmax=1)","4f02dec3":"df.head(10)","167ccbf6":"df.loc[df['Cholesterol'] == 0]","0f37eb15":"from sklearn import preprocessing\n\nml_df = df.copy()\n\n\ndef labelenc(col):\n    encoder = preprocessing.LabelEncoder() \n    ml_df[col] = encoder.fit_transform(ml_df[col])","67a6b131":"labelenc('Sex')\nlabelenc('ChestPainType')\nlabelenc('RestingECG')\nlabelenc('ExerciseAngina')\nlabelenc('ST_Slope')\nml_df.head()","b19a79fb":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split","fcbb93f8":"X = ml_df.drop('HeartDisease', axis=1).values\nX_scaled = preprocessing.scale(X)\ny = ml_df['HeartDisease'].values","4d0d1b51":"X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.8, random_state=42)","d5adf327":"clf1 = RandomForestClassifier()\nclf1.fit(X_train, y_train)\nprint(f'RandomForestClassifier Score: {clf1.score(X_test, y_test)}')","67ce6a97":"# for x,y in zip(X_test, y_test):\n#     print(f'The forecast value: {clf1.predict([x])} Actual Value: {y}')","c457bbf3":"clf2 = DecisionTreeClassifier()\nclf2.fit(X_train, y_train)\nprint(f'DecisionTreeClassifier Score: {clf2.score(X_test, y_test)}')","e5ecca6d":"# for x,y in zip(X_test, y_test):\n#     print(f'The forecast value: {clf2.predict([x])} Actual Value: {y}')","e69017d6":"# Some charts to understand the data"}}