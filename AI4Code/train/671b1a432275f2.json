{"cell_type":{"cb5d2efa":"code","9d0a0305":"code","168e4a41":"code","81260f1f":"code","2d9e0f0d":"code","6540706b":"code","e6d3a890":"code","6435dde4":"code","5b7844ed":"code","3af49cf0":"code","cf7e38ab":"code","789534bd":"code","4ed5752b":"code","ef6f25c8":"code","281e1799":"code","9b03da68":"code","f66f82b8":"code","d9b00092":"code","7e6f24b6":"code","794f7b74":"code","55d467f8":"code","4d6c0d8b":"code","48c7534a":"code","ccceb7ca":"code","379ef56f":"code","eebb2fac":"code","ca001903":"code","e0b98ff2":"code","dff825e8":"code","aa896c4c":"code","79a0d10b":"code","d194dd63":"code","b70f3fcb":"code","aa8f7372":"code","8a421e38":"code","e5398756":"code","a1c4df23":"code","92e4a237":"code","fc658a1b":"markdown"},"source":{"cb5d2efa":"# this workbook shows examples of how different countries have faired with vaccination programmes. Bhutan was chozen as a case study of how a country has done well with logistics. \n# Next France and England are examined to show how countries of similar populations have had different results with lowering cases through vaccination programmes. \n# England had much initial success with the Astra zeneca vaccine, this is reflected in evening out the new cases total at a quicker point than France","9d0a0305":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","168e4a41":"covid_vaccine_prog_file_path = '..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv'\ncovid_vaccine_data = pd.read_csv(covid_vaccine_prog_file_path)\n\ncovid_19_by_country_file_path = '..\/input\/covid19-by-country-with-government-response\/covid19_by_country.csv'\ncovid_19_by_country_data = pd.read_csv(covid_19_by_country_file_path)\n\ncountry_population_file_path = '..\/input\/covid19-by-country-with-government-response\/covid19_country_population.csv'\ncovid_country_pop_data = pd.read_csv(country_population_file_path)","81260f1f":"import seaborn as sns\nfrom scipy import stats","2d9e0f0d":"df_1 = covid_vaccine_data\ndf_2 = covid_19_by_country_data\ncovid_vaccine_data = df_1.join(df_2)\ncovid_vaccine_data.head()","6540706b":"covid_vaccine_data.columns","e6d3a890":"Bhutan_DF = covid_vaccine_data[\"country\"].isin([\"Bhutan\"])\n\nBhutan_DF.value_counts()","6435dde4":"covid_vaccine_data.iloc[Bhutan_DF.values]","5b7844ed":"Bhutan_DF_Filt = covid_vaccine_data.iloc[Bhutan_DF.values]","3af49cf0":"B_histo1 = sns.displot(Bhutan_DF_Filt['people_vaccinated_per_hundred'])","cf7e38ab":"sns.scatterplot(x=\"daily_vaccinations\", y=\"deaths\", data=Bhutan_DF_Filt)","789534bd":"sns.scatterplot(x=\"date\", y=\"daily_vaccinations_raw\", hue=\"deaths\", data=Bhutan_DF_Filt)","4ed5752b":"sns.scatterplot(x=\"date\", y=\"daily_vaccinations\", hue=\"confirmed_inc\", data=Bhutan_DF_Filt)","ef6f25c8":"Bhutan_DF_Filt[['total_vaccinations', 'deaths', 'confirmed_inc']].describe()","281e1799":"France_DF = covid_vaccine_data[\"country\"].isin([\"France\"])\n\nFrance_DF.value_counts()","9b03da68":"France_DF_Filt = covid_vaccine_data.iloc[France_DF.values]","f66f82b8":"sns.displot(France_DF_Filt['people_vaccinated_per_hundred'])","d9b00092":"import matplotlib.pyplot as plt\nplt.figure(figsize=(10, 6))\nplt.plot( 'date', 'total_vaccinations', data=France_DF_Filt, marker='', color='green', linewidth=2)\nplt.plot( 'date', 'confirmed', data=France_DF_Filt, marker='', color='black', linewidth=2)\n# show legend\nplt.legend()\n\n# show graph\nplt.show()","7e6f24b6":"import matplotlib.pyplot as plt\n\n# Initalize a Figure and Axes\n\nfig, ax = plt.subplots()\n\n# Plot the vaccinations in blue\nax.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"total_vaccinations\"], color='blue')\n\n# Create a twin Axes that shares the x-axis\nax2 = ax.twinx()\n\n# Plot the relative cases\nax2.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"confirmed\"], color='red')\n\n\nplt.show()","794f7b74":"fig, ax = plt.subplots(figsize=(30, 10))\n\n# Plot the vaccinations in blue\nax.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"total_vaccinations\"], color='blue')\n\n# Create a twin Axes that shares the x-axis\nax2 = ax.twinx()\n\n# Plot the relative cases\nax2.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"confirmed\"], color='red')\n\nplt.setp(ax.get_xticklabels(), rotation=45)\n\nplt.show()","55d467f8":"fig, ax = plt.subplots(figsize=(30, 10))\n\n# Plot the vaccinations in blue\nax.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"daily_vaccinations_per_million\"], color='blue')\n\n# Create a twin Axes that shares the x-axis\nax2 = ax.twinx()\n\n# Plot the relative cases\nax2.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"deaths\"], color='red')\n\nplt.setp(ax.get_xticklabels(), rotation=45)\n\nplt.show()\n","4d6c0d8b":"fig, ax = plt.subplots(figsize=(30, 10))\n\n# Plot the vaccinations in blue\nax.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"confirmed\"], color='blue')\n\n# Create a twin Axes that shares the x-axis\nax2 = ax.twinx()\n\n# Plot the relative cases\nax2.plot(France_DF_Filt[\"date\"], France_DF_Filt[\"recoveries\"], color='red')\n\nplt.setp(ax.get_xticklabels(), rotation=45)\n\nplt.show()","48c7534a":"England_DF = covid_vaccine_data[\"country\"].isin([\"England\"])\n\nEngland_DF.value_counts()","ccceb7ca":"England_DF_Filt = covid_vaccine_data.iloc[England_DF.values]\n","379ef56f":"sns.displot(England_DF_Filt['people_vaccinated'])\n","eebb2fac":"fig, ax = plt.subplots(figsize=(30, 10))\n\n# Plot the vaccinations in blue\nax.plot(England_DF_Filt[\"date\"], England_DF_Filt[\"total_vaccinations\"], color='green')\n\n# Create a twin Axes that shares the x-axis\nax2 = ax.twinx()\n\n# Plot the relative cases\nax2.plot(England_DF_Filt[\"date\"], England_DF_Filt[\"confirmed\"], color= 'orange')\n\nplt.setp(ax.get_xticklabels(), rotation=45)\n\nplt.show()","ca001903":"fig, ax = plt.subplots(figsize=(30, 10))\n\n# Plot the vaccinations in blue\nax.plot(England_DF_Filt[\"date\"], England_DF_Filt[\"daily_vaccinations_per_million\"], color='green')\n\n# Create a twin Axes that shares the x-axis\nax2 = ax.twinx()\n\n# Plot the relative deaths\nax2.plot(England_DF_Filt[\"date\"], England_DF_Filt[\"deaths\"], color= 'orange')\n\nplt.setp(ax.get_xticklabels(), rotation=45)\n\nplt.show()","e0b98ff2":"fig, ax = plt.subplots(figsize=(30, 10))\n\n# Plot the vaccinations in blue\nax.plot(England_DF_Filt[\"date\"], England_DF_Filt[\"confirmed\"], color='green')\n\n# Create a twin Axes that shares the x-axis\nax2 = ax.twinx()\n\n# Plot the relative recoveries\nax2.plot(England_DF_Filt[\"date\"], England_DF_Filt[\"recoveries\"], color= 'orange')\n\nplt.setp(ax.get_xticklabels(), rotation=45)\n\nplt.show()","dff825e8":"plt.figure(figsize=(20, 10))\nplt.title('amount of people vaccinated daily (England)')\nsns.barplot(x=England_DF_Filt.date, y=England_DF_Filt['daily_vaccinations_per_million'])\nplt.xlabel(' ')\nplt.ylabel('Amount of people vaccinated');\n","aa896c4c":"plt.figure(figsize=(20, 10))\nplt.title(' amount of people vaccinated daily (France)')\nsns.barplot(x=France_DF_Filt[\"date\"], y=France_DF_Filt['daily_vaccinations_per_million'])\nplt.xlabel('date')\nplt.ylabel('Amount of people vaccinated');","79a0d10b":"plt.figure(figsize=(20, 10))\nplt.title('new cases(England)')\nsns.barplot(x=England_DF_Filt.date, y=England_DF_Filt['confirmed'])\nplt.xlabel('date')\nplt.ylabel('new cases');","d194dd63":"import matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport pandas as pd","b70f3fcb":"plt.figure(figsize=(20, 10))\nplt.title('new cases(France)')\nsns.barplot(x=France_DF_Filt.date, y=France_DF_Filt['confirmed'])\nplt.xlabel('date')\nplt.ylabel('new cases')\ndtFmt = mdates.DateFormatter('%b') # define the formatting\nplt.gca().xaxis.set_major_formatter(dtFmt) # apply the format to the desired axis\nplt.show();","aa8f7372":"England_DF_Filt['total_vaccinations'].corr(England_DF_Filt['confirmed'])\n\n# A very strong relationship exists in England given how close to 1 this pearson correlation is\n","8a421e38":"England_DF_Filt[['confirmed', 'total_vaccinations', 'deaths','recoveries' ]].corr()\n\n# A strong relationship exists in England for multiple metrics given how close to 1 the pearson correlation is","e5398756":"England_confirmed_1 = England_DF_Filt.iloc[(England_DF_Filt['confirmed'] <=30000).values]\nEngland_confirmed_1.info()","a1c4df23":"England_Confrimed_2 = England_DF_Filt.iloc[(England_DF_Filt['confirmed'] >=30000).values]\nEngland_Confrimed_2.info()","92e4a237":"stats.ttest_ind(England_confirmed_1['confirmed'], England_Confrimed_2['confirmed'])\n\n# The p-value is small, implying that this is a real difference. New cases changed dramatically in England from Jan to April, as the vaccine lowered new amounts daily.","fc658a1b":"England_Jan = England_DF_Filt.iloc[(England_DF_Filt['confirmed'] >= 15000).values]\nEngland_Jan.info()"}}