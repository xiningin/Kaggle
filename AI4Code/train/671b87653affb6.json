{"cell_type":{"8d006bdb":"code","aef408f6":"code","97d6926f":"code","82ff8ad2":"code","1acc0c4e":"code","09080b73":"code","b3631d9a":"code","361aedc5":"code","96c629e8":"code","a14f3be9":"code","13fd26af":"code","64d7c845":"code","faffc123":"code","dc6555ee":"code","ad7e31c5":"code","6dd9f205":"code","b1196aea":"code","52b3a15d":"markdown","231a0869":"markdown","ae8adc8f":"markdown","b65a7cc2":"markdown","14956c78":"markdown","9b68b159":"markdown","141ff9f6":"markdown","28abc2e6":"markdown","6a75f02f":"markdown","5240b439":"markdown","4413b0e7":"markdown","6ac03c80":"markdown","66ebcb0b":"markdown","59af1299":"markdown"},"source":{"8d006bdb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aef408f6":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nfrom matplotlib.pyplot import figure\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n%matplotlib inline\nmatplotlib.rcParams['figure.figsize'] = (12,8)\n\npd.options.mode.chained_assignment = None\n\ndf = pd.read_csv('\/kaggle\/input\/movies\/movies.csv')\ndf.head()","97d6926f":"df.isnull().sum()","82ff8ad2":"df.dropna(inplace = True)\ndf.isnull().sum()","1acc0c4e":"df['gross'].astype('int64')\ndf['budget'].astype('int64')","09080b73":"\nf, (ax1, ax2) = plt.subplots(1, 2, sharey = True)\n\nplt.gcf().set_size_inches(15, 7)\nax1.boxplot(df.budget)\nax1.set_title('Budget', c = 'green', fontsize = 25)\nax2.boxplot(df.gross)\nax2.set_title('Gross', c ='red', fontsize = 25)\n\nplt.ylabel('Gross', fontsize = 25)\n\nplt.show()\n","b3631d9a":"correlation_table = df.corr(method = 'pearson')\ncorrelation_table","361aedc5":"sns.heatmap(correlation_table, annot = True)\nplt.title('Correlation Heat Map')\nplt.xlabel('Measuring Features')\nplt.ylabel('Measuring Features')\nplt.show()","96c629e8":"coded_df = df\nfor col_name in coded_df.columns:\n    if(coded_df[col_name].dtype == 'object'):\n        coded_df[col_name] = coded_df[col_name].astype('category')\n        coded_df[col_name] = coded_df[col_name].cat.codes\ncoded_df.head()\n    \n        ","a14f3be9":"complete_corr_table = coded_df.corr(method = 'pearson')\nsns.heatmap(complete_corr_table, annot = True)\nplt.title('Complete Correlation Heat Map')\nplt.xlabel('Measuring Features')\nplt.ylabel('Measuring Features')\nplt.show()","13fd26af":"pairs = complete_corr_table.unstack()\npairs","64d7c845":"sorted_pairs = pairs.sort_values()\nsorted_pairs","faffc123":"high_correlation = sorted_pairs[(sorted_pairs) > 0.5]\nhigh_correlation","dc6555ee":"sns.regplot(x='score', y='gross', data=df, scatter_kws={'color': 'brown'}, line_kws = {'color': 'blue'})","ad7e31c5":"sns.regplot(x='votes', y='gross', data=df, scatter_kws={'color': 'green'}, line_kws = {'color': 'blue'})","6dd9f205":"sns.regplot(x='budget', y='gross', data=df, scatter_kws={'color': 'red'}, line_kws = {'color': 'yellow'})","b1196aea":"sns.stripplot(x=\"rating\", y=\"gross\", data = df)","52b3a15d":"# Heat Map for Entire Dataset","231a0869":"#Heat Map","ae8adc8f":"**#Finding Null Values**","b65a7cc2":"# Correlation Matrix","14956c78":"# Regression Plot of Gross Earnings and Score","9b68b159":"# Finding Outliers in Gross and Budget","141ff9f6":"# Converting float to Integer","28abc2e6":"# Arranging in Ascending order of Correlation","6a75f02f":"# Gross Earning with Respect to Movie Rating","5240b439":"# Data having Highest Correlation","4413b0e7":"# Regression Plot of Gross Earnings and Votes","6ac03c80":"# Unstacking for Individual Correlation","66ebcb0b":"# Regression Plot of Gross Earnings and Budget","59af1299":"# Assigning Numeric Codes to string data"}}