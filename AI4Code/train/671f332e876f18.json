{"cell_type":{"a743cb1c":"code","99894314":"code","6ac10028":"code","a0f6c0cb":"code","8b8d351e":"code","0a6ac65b":"code","aaf04b4f":"code","f9d5f524":"code","95369e0e":"code","c733ff2d":"code","94a90de3":"code","a9f13725":"code","57e3e19d":"code","8f44f86b":"code","a539f7a5":"code","bd97fa03":"code","e6b6f65e":"code","bb825a78":"code","28cd1b58":"markdown","50867507":"markdown","1e27f6e3":"markdown","f26b9985":"markdown","1a2b8dd7":"markdown","b8825b98":"markdown","ca887401":"markdown","2e2ce587":"markdown","fd5e9069":"markdown","88355f6c":"markdown","a6b9c697":"markdown","83c33263":"markdown","5d2a6914":"markdown","09bfa9d9":"markdown","801377ac":"markdown"},"source":{"a743cb1c":"import os\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import Model\nfrom os import getcwd\nimport zipfile\nimport shutil\nimport numpy as np\nimport glob\nimport random\nimport pandas as pd\nimport keras\nfrom tensorflow.keras.optimizers import RMSprop, Adam\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.metrics import confusion_matrix,accuracy_score\nfrom sklearn.model_selection import train_test_split\nimport pathlib\nimport pathlib\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport os\nimport PIL\nimport glob\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Activation, Flatten, Dense, Dropout, BatchNormalization\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy","99894314":"!pip install Augmentor","6ac10028":"\nimport Augmentor\npath_to_training_dataset = '..\/input\/skin-cancer9-classesisic\/Skin cancer ISIC The International Skin Imaging Collaboration\/Train\/'\nclass_names=['actinic keratosis','basal cell carcinoma','dermatofibroma','melanoma','nevus','pigmented benign keratosis','seborrheic keratosis','squamous cell carcinoma','vascular lesion']\nfor i in class_names:\n    p = Augmentor.Pipeline(path_to_training_dataset + i, output_directory='\/kaggle\/working\/upsampled\/'+i+'\/output\/')\n    p.rotate(probability=0.7, max_left_rotation=10, max_right_rotation=10)\n    p.sample(1000) ","a0f6c0cb":"output_dir = pathlib.Path('\/kaggle\/working\/upsampled')\n","8b8d351e":"class1 =  glob.glob('\/kaggle\/working\/upsampled\/melanoma\/output\/*.jpg')\nclass2 =  glob.glob('\/kaggle\/working\/upsampled\/squamous cell carcinoma\/output\/*.jpg')\nclass3 =  glob.glob('\/kaggle\/working\/upsampled\/pigmented benign keratosis\/output\/*.jpg')\nclass4 =  glob.glob('\/kaggle\/working\/upsampled\/dermatofibroma\/output\/*.jpg')\nclass5 =  glob.glob('\/kaggle\/working\/upsampled\/nevus\/output\/*.jpg')\nclass6 =  glob.glob('\/kaggle\/working\/upsampled\/seborrheic keratosis\/output\/*.jpg')\nclass7 =  glob.glob('\/kaggle\/working\/upsampled\/basal cell carcinoma\/output\/*.jpg')\nclass8 =  glob.glob('\/kaggle\/working\/upsampled\/squamous cell carcinoma\/output\/*.jpg')\nclass9 =  glob.glob('\/kaggle\/working\/upsampled\/vascular lesion\/output\/*.jpg')\n\nclass1_df = []\nclass2_df = []\nclass3_df = []\nclass4_df = []\nclass5_df = []\nclass6_df = []\nclass7_df = []\nclass8_df = []\nclass9_df = []\n\n\nfor i in class1:\n    class1_df.append([i,'actinic keratosis'])\n\nfor i in class2:\n    class2_df.append([i,'basal cell carcinoma'])\n    \nfor i in class3:\n    class3_df.append([i,'dermatofibroma'])\n\nfor i in class4:\n    class4_df.append([i,'melanoma'])\n    \nfor i in class5:\n    class5_df.append([i,'nevus'])\n    \nfor i in class6:\n    class6_df.append([i,'pigmented benign keratosis'])\n\nfor i in class7:\n    class7_df.append([i,'seborrheic keratosis'])\n\nfor i in class8:\n    class8_df.append([i,'squamous cell carcinoma'])\n\nfor i in class9:\n    class9_df.append([i,'vascular lesion'])\n    \n    \n","0a6ac65b":"df=class1_df+class2_df+class3_df+class4_df+class5_df+class6_df+class7_df+class8_df+class9_df\nrandom.shuffle(df)\ndata_df = pd.DataFrame(df, columns = ['path','label'])","aaf04b4f":"data_df","f9d5f524":"datagen = ImageDataGenerator(\n                             height_shift_range=0.2,\n                             width_shift_range=0.2,\n                             horizontal_flip=True,\n                             validation_split=0.2)\n\ntrain_generator = datagen.flow_from_dataframe(data_df,\n                                              x_col='path',\n                                              y_col='label',\n                                              images_size=(180,180),\n                                              class_mode='categorical',\n                                              color_mode='rgb',\n                                              subset='training')\n\nvalidation_generator = datagen.flow_from_dataframe(data_df,\n                                                   x_col='path',\n                                                   y_col='label',\n                                                   images_size=(180,180),\n                                                   class_mode='categorical',\n                                                   color_mode='rgb',\n                                                   subset='validation')\n\n","95369e0e":"import PIL\n\nfrom PIL import Image\nimage = PIL.Image.open(\"..\/input\/skin-cancer9-classesisic\/Skin cancer ISIC The International Skin Imaging Collaboration\/Train\/actinic keratosis\/ISIC_0026575.jpg\")\n\n\nwidth, height = image.size\n\n\nprint(width, height)","c733ff2d":"#'Model_Augmentor_Resnet50_ACC:77_E:30_Attempt:15_.h5'","94a90de3":"#will try to define our own models","a9f13725":"train_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  output_dir,\n  seed=123,\n  validation_split = 0.2,\n  subset = 'training',\n  \n  image_size=(256,256),\n  )","57e3e19d":"val_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  output_dir,\n  seed=123,\n  validation_split = 0.2,\n  subset = 'validation',\n  \n  image_size=(256,256),\n  )","8f44f86b":"AUTOTUNE = tf.data.experimental.AUTOTUNE\ntrain_ds = train_ds.cache().shuffle(1000).prefetch(buffer_size=AUTOTUNE)\nval_ds = val_ds.cache().prefetch(buffer_size=AUTOTUNE)","a539f7a5":"model = keras.Sequential()\n\nmodel.add(layers.experimental.preprocessing.Rescaling(1.\/255, input_shape=(256, 256, 3)))\nmodel.add(layers.Conv2D(16, 3, padding='same',))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.05))\n\n\n\n\nmodel.add(layers.Conv2D(32, 3, padding='same',))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.05))\n\n\n\n\nmodel.add(layers.Conv2D(64, 3, padding='same',))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.2))\n\nmodel.add(layers.Conv2D(128, 3, padding='same',))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.05))\n\n\nmodel.add(layers.Conv2D(256, 3, padding='same',))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.05))\n\nmodel.add(Flatten())\nmodel.add(Dense(256))\nmodel.add(Activation('sigmoid'))\nmodel.add(Dense(9))\n\n\nmodel.summary()","bd97fa03":"model.compile(optimizer=keras.optimizers.Adam(), \n               loss = SparseCategoricalCrossentropy(from_logits=True),\n               metrics =['acc'])\nmodel.summary()","e6b6f65e":"history = model.fit(train_ds,\n                               epochs=30,\n                               validation_data=val_ds)","bb825a78":"model.save('model_c:50__Acc:80__.h5')","28cd1b58":"history = model.fit(train_generator,\n                               epochs=10,steps_per_epoch=25,\n                               validation_data=validation_generator)","50867507":"# **Preprocessing**","1e27f6e3":"# **Compiling and running**","f26b9985":"x = layers.Flatten()(resnet.output)\nx = layers.BatchNormalization()(x)\nx = layers.Dense(1024,activation='relu')(x)\nx = layers.Dense(521,activation='selu',kernel_initializer='lecun_normal')(x)\nx = layers.Dropout(0.2)(x)                  \nx = layers.Dense(9,activation='softmax')(x)\n\nmodel = Model(resnet.input, x) \n","1a2b8dd7":"model.save('Model_Augmentor_Resnet50_ACC:77_E:10_Attempt:16_.h5')","b8825b98":"# **Compile and run**","ca887401":"resnet=tf.keras.applications.ResNet50(\n    include_top=False,\n    weights=\"imagenet\",\n    input_tensor=None,\n    input_shape=(256,256,3),\n    pooling=None,\n    \n)\nresnet.trainable= True\n\n","2e2ce587":"# **Helps with faster computations Threads**","fd5e9069":"# **Customized Attempts**","88355f6c":"# **Defining Model**","a6b9c697":"# **Preprocesssing and Generators**","83c33263":"model.compile(optimizer = Adam(lr=0.0001), \n               loss = 'binary_crossentropy', \n               metrics =['acc'])\nmodel.summary()","5d2a6914":"# **Upsampling**","09bfa9d9":"# **Load data**","801377ac":"# **Importing Model**"}}