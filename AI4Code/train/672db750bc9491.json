{"cell_type":{"fc6acf96":"code","f65d75ee":"code","f8acceb2":"code","a3778350":"code","0aa3e781":"code","c8b2f07c":"code","b63991ef":"code","a8438c0d":"code","0063829f":"code","86da1f73":"code","76069dfe":"markdown","4e76bf81":"markdown","048363ea":"markdown","ed1a2cf3":"markdown","8cad30c3":"markdown","791be29e":"markdown"},"source":{"fc6acf96":"import os\nimport pandas as pd\nimport pydicom as dicom\nfrom glob import glob","f65d75ee":"file_path = '\/kaggle\/input\/siim-covid19-detection\/train\/00086460a852\/9e8302230c91\/65761e66de9f.dcm'\ndata = dicom.dcmread(file_path)\ndata","f8acceb2":"for i,elem in enumerate(data.elements()):\n     print(i, elem, '\\t', type(elem))","a3778350":"list(data.file_meta.elements())","0aa3e781":"def extractMetaData(file_path):\n    data = dicom.dcmread(file_path)\n    data.decode()  # to access the elements data should be decoded from raw format\n    elements = {e.keyword:e.value for e in data.elements() if not e.name in ['Pixel Data', 'Private Creator', 'De-identification Method']}\n    for e in elements:\n        elements[e] = list(elements[e]) if isinstance(elements[e], dicom.multival.MultiValue) else str(elements[e])\n    data.file_meta.decode()\n    elements.update({e.keyword:str(e.value) for e in data.file_meta.elements()})\n    elements['PrivateCreator'] = [e.value for e in data.elements() if e.name=='Private Creator']\n    elements['DeidentificationMethodCodeSequence'] = [DMC.CodeValue for DMC in data.DeidentificationMethodCodeSequence]\n    elements['file_path'] = file_path\n    return elements\n\nmetainfo = extractMetaData(file_path)\nmetainfo","c8b2f07c":"file_path, [metainfo[k] for k in ['StudyInstanceUID', 'SeriesInstanceUID', 'SOPInstanceUID']]","b63991ef":"Files = glob('\/kaggle\/input\/siim-covid19-detection\/train\/*\/*\/*.dcm')\nlen(Files)","a8438c0d":"Data = pd.DataFrame((extractMetaData(file_path) for file_path in Files))\nprint(Data.shape)\nData.head()","0063829f":"Data.to_csv('siim_2021_train_metadata.csv', index=False)","86da1f73":"Files = glob('\/kaggle\/input\/siim-covid19-detection\/test\/*\/*\/*.dcm')\nData_ts = pd.DataFrame((extractMetaData(file_path) for file_path in Files))\nData_ts.to_csv('siim_2021_test_metadata.csv', index=False)\nData_ts.shape","76069dfe":"# Fast Look into a Data Sample","4e76bf81":"## important note\nThe study-id, series, and image-id are stored in the following attributes:","048363ea":"# Extracting the Meta-Data","ed1a2cf3":"# Making the Dataset","8cad30c3":"More mteadata can be found in **'file_meta'** attribute:","791be29e":"We can access metadata by looping through elements:"}}