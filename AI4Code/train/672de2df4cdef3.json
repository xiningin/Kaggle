{"cell_type":{"7ea86eb3":"code","34f1b6ef":"code","f30abb80":"code","96aee43c":"code","b1fb71e1":"code","09faf40b":"code","25ec1b16":"code","a6e1f16a":"code","8c43e06a":"code","c5ad5e1e":"code","c4e22745":"code","77f64213":"code","c46cca91":"code","d1e322db":"code","15887d6c":"code","e2db9928":"code","67208f10":"code","c150ddfa":"code","22eb4e75":"code","4b1ac40c":"code","7abf5c87":"code","066231a8":"code","04a067b1":"code","bb4d29a0":"code","45e236fb":"code","841c0543":"code","ec4da961":"code","b78322be":"code","fd049098":"code","4df0ef67":"code","51a63157":"markdown","46a62459":"markdown","1672cb5f":"markdown","2ff9a0b5":"markdown","d41ed956":"markdown","51965831":"markdown","c5a5268b":"markdown","c29ce567":"markdown","1d29a4a2":"markdown","a55856ee":"markdown","bf527dc5":"markdown","03074b84":"markdown","8f01ff67":"markdown","163ac660":"markdown","2b973b24":"markdown","0a08ed0a":"markdown","d1d8fd10":"markdown","8e5fed41":"markdown","b121c6cc":"markdown"},"source":{"7ea86eb3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nimport altair as alt\n\nfrom sklearn.neighbors import LocalOutlierFactor\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","34f1b6ef":"!pip install xlrd","f30abb80":"!pip install openpyxl","96aee43c":"df = pd.read_excel('\/kaggle\/input\/gender-statistics-covering-a-wide-array-of-topics\/Gender_StatsEXCEL.xlsx')\ndf.head()","b1fb71e1":"df.isnull().sum()","09faf40b":"df[\"Indicator Name\"].value_counts()","25ec1b16":"len(df.groupby(\"Indicator Name\").get_group('Women who were first married by age 15 (% of women ages 20-24)'))","a6e1f16a":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'salmon',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"Indicator Name\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Indicators Names\")\nplt.show()","8c43e06a":"#233536,2 row, Name, 3rd Column Text\n\ndf.iloc[233536,2]","c5ad5e1e":"ax = sns.countplot(x = 'Indicator Name',data=df,order=['Female share of graduates in other fields than Science, Technology, Engineering and Mathematics programmes, tertiary (%)','Literacy rate, youth (ages 15-24), gender parity index (GPI)', 'Decision maker about major household purchases: mainly husband (% of women age 15-49)', 'Women who were first married by age 15 (% of women ages 20-24)'])\nfor p in ax.patches:\n        ax.annotate(format(p.get_height()), (p.get_x()+0.2, p.get_height()))\n        \nplt.xticks(rotation=45);","c4e22745":"#Code by Aristotle  https:\/\/www.kaggle.com\/aristotle609\/kickstarter-project-eda\/notebook\n\ndef HChart(df,x_axis,y_axis,color_axis):\n    chart = alt.Chart(df).mark_bar().encode(\n        x = x_axis,\n        y = y_axis,\n        color = color_axis\n    )\n    display(chart)","77f64213":"#Plotting the state of the project\nHChart(df.sample(100) , \"Indicator Name\" , \"count()\" , 'Indicator Name')","c46cca91":"df.iloc[1,2]","d1e322db":"bra = df[(df['Country Name']=='Brazil')].reset_index(drop=True)\nbra.head(2)","15887d6c":"deu = df[(df['Country Name']=='Germany')].reset_index(drop=True)\ndeu.head(2)","e2db9928":"usa = df[(df['Country Name']=='United States')].reset_index(drop=True)\nusa.head(2)","67208f10":"arb.iloc[215,2]","c150ddfa":"arb.iloc[219,2]","22eb4e75":"df['2017'].value_counts()","4b1ac40c":"#Grouping by start year , end year and year with apparently less missing values (2017). \n\ndf_grp = df.groupby([\"Country Name\",\"Indicator Name\"])[[\"1960\",\"2017\",\"2020\"]].sum().reset_index()\ndf_grp.head()","7abf5c87":"df_grp.isnull().sum()","066231a8":"len(df_grp.groupby(\"Indicator Name\").get_group('Women who were first married by age 15 (% of women ages 20-24)'))","04a067b1":"som = df[(df['Country Name']=='Somalia')].reset_index(drop=True)\nsom.head(2)","bb4d29a0":"arb = df[(df['Country Name']=='Arab World')].reset_index(drop=True)\narb.head(2)","45e236fb":"df.iloc[887,2]","841c0543":"#Reducing the number of years\n\ncont_FEATURES = ['2011', '2017', '2020']\n\ncat_FEATURES = ['Country Name', 'Indicator Name']","ec4da961":"#Code by Tom C  https:\/\/www.kaggle.com\/tjcdev\/tps-outliers-hidden-features-baseline\/notebook\n\ndef plot_outliers(df, feature, threshold=5):\n    mean, std = np.mean(df), np.std(df)\n    z_score = np.abs((df-mean) \/ std)\n    good = z_score < threshold\n\n    print(f\"Rejection {(~good).sum()} points\")\n    visual_scatter = np.random.normal(size=df.size)\n    plt.scatter(df[good], visual_scatter[good], s=2, label=\"Good\", color=\"#4CAF50\")\n    plt.scatter(df[~good], visual_scatter[~good], s=8, label=\"Bad\", color=\"#F44336\")\n    plt.legend(loc='upper right')\n    plt.title(feature)\n    plt.show();\n    \n    return good\n\ndef plot_lof_outliers(df, feature):\n    lof = LocalOutlierFactor(n_neighbors=20, contamination=0.001, p=1)\n    good = lof.fit_predict(df) > 0.5 # change this value to set the threshold for outliers\n    print(f\"Rejection {(~good).sum()} points\")\n    \n    visual_scatter = np.random.normal(size=df.size)\n    plt.scatter(df[good], visual_scatter[good], s=2, label=\"Good\", color=\"#4CAF50\")\n    plt.scatter(df[~good], visual_scatter[~good], s=8, label=\"Bad\", color=\"#F44336\")\n    plt.legend(loc='upper right')\n    plt.title(feature)\n    plt.show();\n    \n    return good","b78322be":"#Code by Tom C  https:\/\/www.kaggle.com\/tjcdev\/tps-outliers-hidden-features-baseline\/notebook\n\nfor feature in cont_FEATURES:\n    print(feature)\n    plot_outliers(df[feature], feature)","fd049098":"#Code by Tom C  https:\/\/www.kaggle.com\/tjcdev\/tps-outliers-hidden-features-baseline\/notebook\n\nfor feature in cont_FEATURES:\n    # There some reshaping done here for syntax sake\n    data = df[~df[feature].isna()][feature]\n    plot_lof_outliers(data.values.reshape(data.shape[0], -1), feature)","4df0ef67":"fig,ax = plt.subplots(1,1, figsize=(8,8))\nind2017 = df.groupby([\"Indicator Name\", \"2017\"]).size().unstack()#.fillna(0)\nind2017 = ind2017.div(ind2017.sum(axis=1), axis=0)\nsns.heatmap(ind2017, cmap='Spectral_r');","51a63157":"<h1><span class=\"label label-default\" style=\"background-color:black;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#03e8fc; padding:10px\">Female genital mutilation (FMG)<\/span><\/h1><br>\n\n\n\"A later UNICEF survey in 2014-2015 reported 38.4% Female genital mutilation (FGM) prevalence amongst women and girls aged 15 to 49, and 10% amongst girls 14-years old or younger. The prevalence varies with religion; FGM is prevalent in 61% of Muslim women, 31% of Catholics, 16% of Protestants, and 12% of traditional religions.\"\n\n\"The prevalence also varies with ethnic groups; the Arabs (95%), Hadjarai (94%), Ouadai (91%) and Fitri-batha (86%), and less than 2.5% among the Gorane, Tandjile and Mayo-Kebbi. Law no 6\/PR\/2002 on the promotion of reproductive health has provisions prohibiting FGM, but does not provide for sanctions. FGM may be punished under existing laws against assault, wounding, and mutilation of the body.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/Prevalence_of_female_genital_mutilation","46a62459":"#Considering that many groups are 1=yes; 0=no.  How can be interpreted the numbers above?","1672cb5f":"#Let's see outliers. ","2ff9a0b5":"#Arab World","d41ed956":"#Considering that 1=yes; 0=no.  Let's see what we can infer from this data.","51965831":"![](https:\/\/assets.weforum.org\/editor\/H2MX9PJSrVxft-RbDZKZl3EcGBIfErJBW63lEb1mQf0.jpg)weforum.org","c5a5268b":"#Somalia","c29ce567":"#Why after grouping by the missing values disappeared (above)?","1d29a4a2":"#If you have Nan in a considerable amount. It's very hard to make any analysis, like above","a55856ee":"#Since all have 263 values, the chart is not very good.","bf527dc5":"#This chart is (above) very clumsy, though we can read briefly many of the Gender Indicators on the right side.","03074b84":"![](https:\/\/d3i71xaburhd42.cloudfront.net\/d86438288afcab9049757e09bb634429265fe65e\/2-Table1-1.png)semanticscholar.org","8f01ff67":"#Germany ","163ac660":"![](https:\/\/static.dw.com\/image\/19029161_7.png)dw.com","2b973b24":"![](http:\/\/thumbnails-visually.netdna-ssl.com\/how-girls-hold-themselves-back-from-pursuing-computer-science-infographic_521d090625dad_w450_h600.png)visual.ly","0a08ed0a":"#Activity and Vulnerability: Brazilians Households (PNAD\/IBGE 2003) \n\n![](https:\/\/lh3.googleusercontent.com\/proxy\/YiJRA-bhWYB8srRgjWIDjnAPatp2CoHh0KP3Y4xPsdI7oXLiW9E2FFhpwMz-Gjt16eEbiWgFFM83toyFdD9BtbN9goFWocMopeXgAkJkFpMoYrLcs5ua0bCOMxqY4LyT)http:\/\/socialsciences.scielo.org\/scielo.php?script=sci_arttext&pid=S0011-52582007000100002","d1d8fd10":"![](https:\/\/www.researchgate.net\/profile\/Domiziana-Turcatti-2\/publication\/344463246\/figure\/fig4\/AS:942706276696064@1601770099323\/Illiterate-population-in-Spain-UNESCO-2020b.ppm)researchGate.net","8e5fed41":"#That's all. Reading the data above you can reflect how Gender can hold someone back or not.\n\n#One year ago I performed with the same data. Instead it was a csv file. Here is xlsx. The name of the previous code is Gender Stats Data.","b121c6cc":"#United States"}}