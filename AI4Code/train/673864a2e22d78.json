{"cell_type":{"bd530fb6":"code","e198a4ab":"code","add6dcdb":"code","a24810ea":"code","34219bd9":"code","b1e68e08":"code","6f2fc166":"code","406d83d4":"code","377cd68c":"code","6fb820fb":"code","7c5badb3":"code","c4a945bc":"code","d5ac01f8":"code","a2e14b6d":"code","a9171e30":"code","6f6c9774":"code","87e2f600":"code","655c4e99":"code","64d34b59":"code","2750803f":"code","7f314f2d":"code","48afb26a":"code","5185b0c2":"code","4a8a82d1":"code","532a5b51":"code","48e211eb":"code","604c4e79":"code","16279447":"code","052735d1":"code","1f859cf7":"code","c148d872":"code","0f7d4694":"code","ebe10cfd":"code","3141d6b2":"code","f26ed9f1":"code","8c7f18a0":"code","fada1d55":"code","f93d86c8":"code","c0fc9f3d":"code","0db81633":"code","150acd04":"code","1e7782df":"code","7235c3c7":"code","3be26f56":"code","251cc35b":"code","d660a8c6":"code","f03dac0b":"code","55af6f57":"code","5857f241":"code","076721ed":"code","06064fb9":"code","4ee1d666":"code","363a6b42":"code","27c53ac0":"code","b44b0430":"code","1ad58799":"code","c54f1097":"code","889b53fa":"code","d6dc3215":"code","f069815d":"code","b4da6772":"code","6660bc81":"code","761e6b5d":"code","6b3fec67":"code","c7652b83":"code","d7511296":"markdown","d837ce13":"markdown","9621949e":"markdown","77b39daa":"markdown","3c898cb7":"markdown","ff6c9b2f":"markdown","d81c8212":"markdown","5d737287":"markdown","a6a10229":"markdown","14d55a2f":"markdown","3e13e804":"markdown","003f214d":"markdown","d7bbdec3":"markdown","dbd0c62c":"markdown","a608c668":"markdown","9e49174d":"markdown","20c595a1":"markdown","243150d5":"markdown","2118b297":"markdown","3ddbf580":"markdown","e0fa1edb":"markdown","ee2b81a7":"markdown","0efb6965":"markdown","56f2a8f5":"markdown","2d03f452":"markdown","fe1c81f1":"markdown","404d555c":"markdown","da2e428b":"markdown","e89ee6e5":"markdown","c9df648d":"markdown"},"source":{"bd530fb6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # basic visualization \nimport seaborn as sns # advanced visualization ","e198a4ab":"# reading the data\nfandango = pd.read_csv(\"..\/input\/fandango-rating-discrepancy\/fandango_scrape.csv\")","add6dcdb":"# display the top 5 rows\nfandango.head()","a24810ea":"fandango[\"YEAR\"] = fandango[\"FILM\"].apply(lambda x: x.split(\"(\")[-1].replace(\")\", \"\").strip())","34219bd9":"fandango.head()","b1e68e08":"# a quick look at the data stucture\nfandango.info()","6f2fc166":"# basic statistcis\nfandango.describe()","406d83d4":"# number of movies per year\nfandango[\"YEAR\"].value_counts()","377cd68c":"plt.figure(figsize = (8,4), dpi = 100)\nsns.countplot(data = fandango, x = fandango[\"YEAR\"]);","6fb820fb":"#The relationship between popularity of a film and its rating\nplt.figure(figsize = (8,4), dpi = 100)\nsns.scatterplot(data = fandango, x = \"RATING\", y = \"VOTES\");","7c5badb3":"plt.figure(figsize = (8,4), dpi = 100)\nsns.scatterplot(data = fandango, x = \"STARS\", y = \"VOTES\", alpha = 0.5);","c4a945bc":"fandango[(fandango[\"VOTES\"] < 2) & (fandango[\"RATING\"] > 1)]","d5ac01f8":"len(fandango[(fandango[\"VOTES\"] < 2) & (fandango[\"RATING\"] > 1)])","a2e14b6d":"fandango[\"VOTES\"].min()","a9171e30":"fandango[\"VOTES\"].max()","6f6c9774":"# movies with zero votes\nfandango[fandango[\"VOTES\"] == 0]","87e2f600":"# number of movies with zero votes\nlen(fandango[fandango[\"VOTES\"] == 0])","655c4e99":"# dropping out the non-reviewed films (have zero votes)\nfandango = fandango[fandango[\"VOTES\"] > 0]","64d34b59":"plt.figure(figsize = (8,4), dpi = 100)\nsns.kdeplot(fandango[\"VOTES\"], shade = True)","2750803f":"plt.figure(figsize = (8,4), dpi = 100)\nsns.kdeplot(fandango[\"VOTES\"], shade = True)\nplt.xlim((0,40000));","7f314f2d":"fandango.corr()","48afb26a":"plt.figure(figsize = (8,4), dpi = 100)\nsns.heatmap(fandango.corr(), cmap = \"viridis\", linewidth = 1, annot = True)\nplt.yticks(rotation=0)\nplt.xticks(rotation=90)\nplt.show()","5185b0c2":"#Lets now plot the distribution of Treu RATING Vs. STARS\nplt.figure(figsize = (8,4), dpi = 100)\nsns.kdeplot(data = fandango, x = \"RATING\", label = \"True Rating\", shade = True)\nsns.kdeplot(data = fandango, x = \"STARS\", label = \"Stars Displayed\", shade = True)\nplt.legend(loc = 2)","4a8a82d1":"plt.figure(figsize = (8,4), dpi = 100)\nsns.kdeplot(data = fandango, x = \"RATING\", label = \"True Rating\", shade = True, cumulative = True)\nsns.kdeplot(data = fandango, x = \"STARS\", label = \"Stars Displayed\", shade = True, cumulative = True)\nplt.legend(loc = 2);","532a5b51":"fandango[\"STARS_DIFF\"] = fandango[\"STARS\"] - fandango[\"RATING\"]\nfandango.head()","48e211eb":"fandango[\"STARS_DIFF\"].value_counts(normalize = True) * 100","604c4e79":"plt.figure(figsize = (8,4), dpi = 100)\nsns.countplot(data = fandango, x = round(fandango[\"STARS_DIFF\"], 2), palette = \"viridis\")\nplt.xticks(rotation=90);","16279447":"# We can see from the plot that one movie was displaying over a 1 star difference than its true rating!\nfandango[fandango[\"STARS_DIFF\"] == 1]","052735d1":"## Reading the Data\nall_sites = pd.read_csv(\"..\/input\/fandango-rating-discrepancy\/all_sites_scores.csv\")","1f859cf7":"all_sites.head()","c148d872":"all_sites.info()","0f7d4694":"round(all_sites.describe(), 1)","ebe10cfd":"plt.figure(figsize = (8,4), dpi = 100)\nsns.scatterplot(data = all_sites, x = \"RottenTomatoes\", y = \"RottenTomatoes_User\");","3141d6b2":"plt.figure(figsize = (8,4), dpi = 100)\nsns.kdeplot(data = all_sites, x = \"RottenTomatoes\", label = \"Rotten Tomamtoes (Critic) Rating\", shade = True)\nsns.kdeplot(data = all_sites, x = \"RottenTomatoes_User\", label = \"User Rating\", shade = True)\nplt.legend(loc = 2)","f26ed9f1":"all_sites[\"Rotten_Diff\"] = all_sites[\"RottenTomatoes_User\"] - all_sites[\"RottenTomatoes\"]","8c7f18a0":"all_sites.head()","fada1d55":"all_sites[\"Rotten_Diff\"].apply(lambda x: abs(x)).mean()\n#abs(all_sites[\"Rotten_Diff\"]).mean() #simpler way for achieving the same result","f93d86c8":"# Net difference \nall_sites[\"Rotten_Diff\"].mean()","c0fc9f3d":"#Plot the distribution of the differences between RT Critics Score and RT User Score\nplt.figure(figsize = (8,4), dpi = 100)\nsns.displot(data = all_sites, x = all_sites[\"Rotten_Diff\"], kde = True)\nplt.title(\"RT Critics Score minus RT User Score\")\nplt.show();","0db81633":"# Distribution of the absolute value difference between Critics and Users on Rotten Tomatoes.\nplt.figure(figsize = (8,4), dpi = 100)\nsns.displot(data = all_sites, x = abs(all_sites[\"Rotten_Diff\"]), kde = True)\nplt.title(\"Abs Difference between RT Critics Score and RT User Score\")\nplt.xlim(0,80)\nplt.show()","150acd04":"#Top 5 movies with the largest positive difference between Users and RT critics\nprint(\"Users Love but Critics Hate\")\nall_sites[[\"FILM\", \"Rotten_Diff\"]].sort_values(by = [\"Rotten_Diff\"], ascending = False)[:5]","1e7782df":"#Top 5 movies with the largest negative difference between Users and RT critics\nprint(\"Critics love, but Users Hate\")\nall_sites[[\"FILM\", \"Rotten_Diff\"]].sort_values(by = [\"Rotten_Diff\"], ascending = True)[:5]","7235c3c7":"all_sites.columns","3be26f56":"plt.figure(figsize = (8,4), dpi = 100)\nsns.regplot(data = all_sites, x = 'RottenTomatoes', y = 'Metacritic');","251cc35b":"plt.figure(figsize = (8,4), dpi = 100)\nsns.regplot(data = all_sites, x = 'RottenTomatoes', y = 'IMDB');","d660a8c6":"plt.figure(figsize = (8,4), dpi = 100)\nsns.regplot(data = all_sites, x = 'Metacritic', y = 'IMDB');","f03dac0b":"#The relationship between vote counts on MetaCritic versus vote counts on IMDB.\nplt.figure(figsize = (8,4), dpi = 100)\nsns.scatterplot(data = all_sites, x = 'Metacritic_user_vote_count', y = 'IMDB_user_vote_count', size = 'IMDB_user_vote_count', sizes = (20,200), alpha = 0.8);","55af6f57":"all_sites[all_sites[\"IMDB_user_vote_count\"] == all_sites[\"IMDB_user_vote_count\"].max()]","5857f241":"# The movie tha has the highest Metacritic User Vote count\nall_sites[all_sites[\"Metacritic_user_vote_count\"] == all_sites[\"Metacritic_user_vote_count\"].max()]","076721ed":"# merging the two DataFrames\nall_fan = pd.merge(all_sites, fandango, on  = \"FILM\", how=\"inner\")\nall_fan.head()","06064fb9":"len(all_fan)","4ee1d666":"all_fan.info()","363a6b42":"all_fan.columns","27c53ac0":"# Dont run this cell multiple times, otherwise you keep dividing!\nall_fan['RT_Norm'] = np.round(all_fan['RottenTomatoes']\/20,1)\nall_fan['RTU_Norm'] =  np.round(all_fan['RottenTomatoes_User']\/20,1)\n\n# Dont run this cell multiple times, otherwise you keep dividing!\nall_fan['Meta_Norm'] =  np.round(all_fan['Metacritic']\/20,1)\nall_fan['Meta_U_Norm'] =  np.round(all_fan['Metacritic_User']\/2,1)\n\n# Dont run this cell multiple times, otherwise you keep dividing!\nall_fan['IMDB_Norm'] = np.round(all_fan['IMDB']\/2,1)","b44b0430":"all_fan.head()","1ad58799":"norm_scores = all_fan[['STARS','RATING','RT_Norm','RTU_Norm','Meta_Norm','Meta_U_Norm','IMDB_Norm']]\nnorm_scores.head()","c54f1097":"def move_legend(ax, new_loc, **kws):\n    old_legend = ax.legend_\n    handles = old_legend.legendHandles\n    labels = [t.get_text() for t in old_legend.get_texts()]\n    title = old_legend.get_title().get_text()\n    ax.legend(handles, labels, loc=new_loc, title=title, **kws)","889b53fa":"fig, ax = plt.subplots(figsize=(8,4),dpi=100)\nsns.kdeplot(data=norm_scores,clip=[0,5],shade=True,palette='Set1',ax=ax)\nmove_legend(ax, \"upper left\")","d6dc3215":"fig, ax = plt.subplots(figsize=(8,4),dpi=100)\nsns.kdeplot(data=norm_scores[['RT_Norm','STARS']],clip=[0,5],shade=True,palette='Set1',ax=ax)\nmove_legend(ax, \"upper left\")","f069815d":"# Histogram to compare all normalized scores \nplt.subplots(figsize=(8,4),dpi=100)\nsns.histplot(norm_scores,bins=50);","b4da6772":"sns.clustermap(norm_scores,cmap='magma',col_cluster=False);","6660bc81":"film = pd.DataFrame(all_fan[\"FILM\"])\nnorm_scores = pd.DataFrame(norm_scores)\nnorm_scores_c = pd.concat([norm_scores, film], ignore_index=True)\nnorm_scores_c.head()\n\n\n#for some reason the code does not work, will try something else","761e6b5d":"norm_films = all_fan[['STARS','RATING','RT_Norm','RTU_Norm','Meta_Norm','Meta_U_Norm','IMDB_Norm','FILM']]\nnorm_films.head()","6b3fec67":"norm_films.sort_values(by = [\"RT_Norm\"])[:10]\n\n# norm_films.nsmallest(10,'RT_Norm')","c7652b83":"#Visualize the distribution of ratings across all sites for the top 10 worst movies.\nworest_10 = norm_films.sort_values(by = [\"RT_Norm\"])[:10]\nfig, ax = plt.subplots(figsize=(8,4),dpi=100)\nsns.kdeplot(data=worest_10,clip=[0,5],shade=True,palette='Set1',ax=ax)\nmove_legend(ax, \"upper right\")","d7511296":"**As can be seen from the above figures, there is a positive relationship between Critic rating of the 3 websites. However, the relationship between IMD-Critic Rating on one hand and (Metacritic - Rotten Tomatoes) Critic rating on the other hand is quite dispersed, meaning that they have different taste for the same movie in many cases. This is not the case when comparing \"Metacritic\" and \"Rotten Tomatoes\" Ratings.**","d837ce13":"### Import the required liberaries","9621949e":"### As you can see for any movie with rating less than approxmately 4 there are more stars displayed than the true rating.\n\n### Lets quantify it and visualize the result","77b39daa":"> #### Main Source: 2021 Python for Machine Learning & Data Science Masterclass. Tought by Jose Portilla on Udemey\nhttps:\/\/www.udemy.com\/course\/python-for-machine-learning-data-science-masterclass\/ ","3c898cb7":"## Fandango is showing around 3-4 star ratings for films that are clearly bad! ","ff6c9b2f":"### 1. Exploring Fandango Displayed Scores versus True User Ratings","d81c8212":"#### fandango_scape.csv\ncontains every film 538 pulled from Fandango.\n\nColumn | Definiton\n--- | ---------\nFILM | The movie\nSTARS | Number of stars presented on Fandango.com\nRATING |  The Fandango ratingValue for the film, as pulled from the HTML of each page. This is the actual average score the movie obtained.\nVOTES | number of people who had reviewed the film at the time we pulled it.","5d737287":"## **The Data**","a6a10229":"#### Now lets calculate the correlation between columns?","14d55a2f":"Back in 2015, FiveThirtyEight published an [article](https:\/\/fivethirtyeight.com\/features\/fandango-movies-ratings\/) entitled \"Be Suspicious Of Online Movie Ratings, Especially Fandango\u2019s\". The article concluded that Fandango tends to overrate thier movies. In other words, the number of stars that the website shows for a certain movie is often higher than the true rating for the same movie.\n\nOur goal in this notebook is validate these results through a detailed EDA for the given data set.\n\n**To that end, the Analysis consists of two main parts:**\n\n1. Exploring Fandango Displayed Scores versus True User Ratings\n2. Comparison of Fandango Ratings to Other Sites\n\nThe data used is this note book is publicly available on [github](https:\/\/github.com\/fivethirtyeight\/data).\n","3e13e804":"### How are the worst movies rated across all platforms?","003f214d":"## **Fandago Scores vs. All Sites**\n**let's begin to explore whether or not Fandango artificially displays higher ratings than warranted to boost ticket sales.**","d7bbdec3":"### all_sites_scores.csv \ncontains every film that has a Rotten Tomatoes rating, a RT User rating, a Metacritic score, a Metacritic User score, and IMDb score, and at least 30 fan reviews on Fandango. The data from Fandango was pulled on Aug. 24, 2015.\n\nColumn | Definition\n--- | -----------\nFILM | The film in question\nRottenTomatoes | The Rotten Tomatoes Tomatometer score  for the film\nRottenTomatoes_User | The Rotten Tomatoes user score for the film\nMetacritic | The Metacritic critic score for the film\nMetacritic_User | The Metacritic user score for the film\nIMDB | The IMDb user score for the film\nMetacritic_user_vote_count | The number of user votes the film had on Metacritic\nIMDB_user_vote_count | The number of user votes the film had on IMDb","dbd0c62c":"#### Clearly Fandango is rating movies much higher than other sites, especially considering that it is then displaying a rounded up version of the rating.\n\n#### Lests now display the top 10 lowest rated movies Based off the Rotten Tomatoes Critic Ratings. We will compare the normalized scores across all platforms for these movies. ","a608c668":"**There are some outliers in the above graph: The movie with the highest vote count on IMDB only has about 500 Metacritic ratings. What is this movie?**","9e49174d":"#### The distribution makes it very clear that the majority of movies are rated by 1 - 5k voters, very few movies are rated by more than 5k voters.\n\n#### Another note, the previous KDE Plot gives the impression that the VOTES varaible has negative values, which is incorrect. We will fix the limits of the x-axis in the follwoing graph to clear any misconseptions","20c595a1":"### lets do some feature engineering: seprate the year in new column","243150d5":"**From the scatter plot, we can quicly realize that: for some movies the user rating is higher than he Rotten Tomamtoes (Critic) Rating, and vice versa for some other movies. Lests confirm this foinding by both: a KDE plot and Table calculation**","2118b297":"### **Second: Lests Compare Ratings Across Websites**","3ddbf580":"**Notice that many movies are rated 2 or above, despite that the number of votes is close to zero. We need to investigate it further as follows**","e0fa1edb":"**Main info:**\n1. The data has 504 rows\n2. There is no null values\n3. The variables are in the right type\n\nWe are ready to start the analysis","ee2b81a7":"Clearly Fandango has an uneven distribution. We can also see that RT critics have the most uniform distribution. Let's directly compare these two.","0efb6965":"**Let's now compare the overall mean difference. Since we're dealing with differences that could be negative or positive, first take the absolute value of all the differences, then take the mean. This would report back on average to absolute difference between the critics rating versus the user rating.**","56f2a8f5":"### 2. Comparison of Fandango Ratings to Other Sites","2d03f452":"#### **Normalize columns to Fandango STARS and RATINGS 0-5**\n\nNotice that RT,Metacritic, and IMDB don't use a score between 0-5 stars like Fandango does. In order to do a fair comparison, we need to normalize these values so they all fall between 0-5 stars and the relationship between reviews stays the same.","fe1c81f1":"**As you can see there are about 32 movies that are rated by only 1 viewer. This  explains the very high standard error of the VOTES variable. In fact, the values VOTES ranges from zero all the way up to 34846. Lets see the distribution of VOTES**","404d555c":"**On Average the User rating is higher than Critic rating by 3.03**","da2e428b":"**Findings:**\n1. The mean of true rating (RATING) is lower than andango displayed scores (STARS)\n2. The average number of votes is 1147.9 per movie\n3. the meadian of true rating (RATING) is lower than the median of displayed scores (STARS), suggesting that the distribution of the latter is more skewed to the right.","e89ee6e5":"**As you can see, the Critics are pretty conservative in thier ratings. To be percise they use  scientific criteria that make thier ratings more balanced than user ratings. In other words, Users seem to exaggerates thier feelings while Critics not.**\n\n**For weak movies (those with a rating less than 30) Critics gave a higher rating than Users. As for good movies (30<rating<90) users seems to give higher Rating than Critics.**","c9df648d":"## **Lets give a closer look at one by one**\n\n### **First: Rotten_Tomatoes**"}}