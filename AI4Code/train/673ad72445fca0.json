{"cell_type":{"e36c7c62":"code","53169271":"code","856be485":"code","8e9f2464":"code","fd1365b2":"code","04b6ec89":"code","9cd5295c":"code","7ee4b283":"code","d18878e2":"code","8db6e4e3":"code","d4983c20":"code","3feedabc":"code","3ee06189":"code","1be55da0":"code","d797a7be":"code","bcda70ec":"code","810f5f85":"code","da2dd92c":"code","15f0d881":"code","259ad5a0":"markdown","37f8a20a":"markdown","080b506c":"markdown","d90f8d50":"markdown","96a29129":"markdown","7dde11f1":"markdown","eba3d9f9":"markdown"},"source":{"e36c7c62":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport h2o\nprint(h2o.__version__)\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='16G')","53169271":"#upload the data \ndf = pd.read_csv('..\/input\/hourly-energy-consumption\/PJME_hourly.csv')\ndf.head()","856be485":"#check for missing values\ndf.isnull().sum()","8e9f2464":"color_pal = [\"#F8766D\", \"#D39200\", \"#93AA00\", \"#00BA38\", \"#00C19F\", \"#00B9E3\", \"#619CFF\", \"#DB72FB\"]\n_ = df.plot(style='.', figsize=(15,5), color=color_pal[0], title='PJM East')","fd1365b2":"#add time based new features\ndf['date'] = pd.to_datetime(df['Datetime'])\ndf['month'] = df['date'].dt.month\ndf['day'] = df['date'].dt.day\ndf['hour'] = df['date'].dt.hour\ndf['weekday'] = df['date'].dt.weekday\ndf['weekend'] = df['weekday'].isin([5,6]).astype(int)","04b6ec89":"## cyclic transformation on hour\ndf['hour_sin'] = np.sin(2 * np.pi * df['hour']\/23.0)\ndf['hour_cos'] = np.cos(2 * np.pi * df['hour']\/23.0)\n## cyclic transformation on date \ndf['date_sin'] = -np.sin(2 * np.pi * (df['month']+df['day']\/31)\/12)\ndf['date_cos'] = -np.cos(2 * np.pi * (df['month']+df['day']\/31)\/12)\n## cyclic transformation on month\ndf['month_sin'] = -np.sin(2 * np.pi * df['month']\/12.0)\ndf['month_cos'] = -np.cos(2 * np.pi * df['month']\/12.0)\n## cyclic transformation on weekday\ndf['weekday_sin'] = -np.sin(2 * np.pi * (df['weekday']+1)\/7.0)\ndf['weekday_cos'] = -np.cos(2 * np.pi * (df['weekday']+1)\/7.0)","9cd5295c":"df","7ee4b283":"#drop unnecessary columns \ndf.drop(['Datetime', 'hour'], axis=1, inplace=True)","d18878e2":"#Split the data into train and test. The last two months data is left for testing.\ndf_train = df[df['date'] <= '2017-10-30 00:00:00'].reset_index(drop=True)\ndf_test = df[df['date'] > '2017-10-30 00:00:00'].reset_index(drop=True)","8db6e4e3":"#convert the data into h2o frame\ntrain = h2o.H2OFrame(df_train)\ntest = h2o.H2OFrame(df_test)","d4983c20":"#set x and y\nx = train.columns\ny = 'PJME_MW'\nx.remove(y)","3feedabc":"aml = H2OAutoML(max_runtime_secs = 3500, seed = 1, project_name = \"PJME_MW\")\naml.train(x = x, y = y, training_frame = train)","3ee06189":"#extract the leaderboard \nlb = aml.leaderboard\nlb.head()","1be55da0":"# The leader model is stored here\naml.leader","d797a7be":"#prepare the test data\ntest_x = test.drop('PJME_MW', axis=1)","bcda70ec":"#make predictions on the test data\npred = aml.predict(test_x)\npred.head()","810f5f85":"#make comparison df\nresult_comparison = test[['date', 'PJME_MW']]\nresult_comparison['predictions'] = pred\n#convert h2o df into pandas df\nresult_comparison = h2o.as_list(result_comparison)\nresult_comparison[\"date\"] = pd.to_datetime(result_comparison[\"date\"],unit='ms')","da2dd92c":"result_comparison.head(20)","15f0d881":"#save the leader model \nh2o.save_model(aml.leader, path = \".\/my_h2o_leader_model\")","259ad5a0":"There's no missing values in the data","37f8a20a":"## Thank you ","080b506c":"## Prediction with the leader model","d90f8d50":"Build H2OAutoML model and start training","96a29129":"## Feature engineering","7dde11f1":"It can be confirmed the dataset has two columns: datetime and consumed energy ","eba3d9f9":"# H2O AutoML \n\nThis notebook applies H2O AutoML on energy usage prediction problem. H2O\u2019s AutoML can be used for automating the machine learning workflow, which includes automatic training and tuning of many models within a user-specified time-limit.\n\n* Check the link for more information on H2O AutoML [H2O AutoML documentation](https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/automl.html)"}}