{"cell_type":{"0d745f6d":"code","5e87013a":"code","94303985":"code","bc3ae972":"code","7848ff57":"code","99b85a55":"code","603eaec1":"code","2329592e":"code","889cd133":"markdown","f8ecd203":"markdown","dbf66c10":"markdown","f9bb583d":"markdown","b8bd1fb8":"markdown","4a6ac24d":"markdown"},"source":{"0d745f6d":"import sys\n!cp ..\/input\/rapids\/rapids.0.17.0 \/opt\/conda\/envs\/rapids.tar.gz\n!cd \/opt\/conda\/envs\/ && tar -xzvf rapids.tar.gz > \/dev\/null\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\/site-packages\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\"] + sys.path \n!cp \/opt\/conda\/envs\/rapids\/lib\/libxgboost.so \/opt\/conda\/lib\/","5e87013a":"import cudf\nimport cuml\nimport pandas as pd\nimport numpy as np\nfrom cuml.manifold import TSNE\nimport matplotlib.pyplot as plt","94303985":"%%time\n\ntrain = cudf.read_csv('..\/input\/jane-street-market-prediction\/train.csv')","bc3ae972":"all_features    = [i for i in range(0,130)]\ntrain_features  = [x+7 for x in all_features]\nX_train = train.iloc[ : , train_features].fillna(0)","7848ff57":"%%time \n\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(X_train)","99b85a55":"x, y = tsne_2D.as_matrix().T\nfig, ax = plt.subplots(figsize=(18, 18))\nax.scatter(x, y, s=0.1, c=x, cmap=plt.cm.plasma)\nax.set_title('t-SNE plot for all 130 features', fontsize=18)\nplt.show();","603eaec1":"Tag_6      = [i for i in range(1,41)]\nTag_9      = [2,4,6,8,10,12,14,16,18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40]\nTag_23     = [i for i in range(72,120)]\nTag_17     = [78,79,80,81,82,83, 90,91,92,93,94,95, 102,103,104,105,106,107, 114,115,116,117,118,119]\nf_41_to_71 = [i for i in range(41,72)]\nresp       = [15, 16, 25, 26, 35, 36, 59, 76, 82, 88, 94, 100, 106, 112, 118, 128, 129]\n\nall_features = Tag_6\ntrain_features  = [x+7 for x in all_features]\nX_train = train.iloc[ : , train_features].fillna(0)\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(X_train)\nx1, y1  = tsne_2D.as_matrix().T\n\nall_features = Tag_9\ntrain_features  = [x+7 for x in all_features]\nX_train = train.iloc[ : , train_features].fillna(0)\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(X_train)\nx2, y2  = tsne_2D.as_matrix().T\n\nall_features = Tag_23\ntrain_features  = [x+7 for x in all_features]\nX_train = train.iloc[ : , train_features].fillna(0)\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(X_train)\nx3, y3  = tsne_2D.as_matrix().T\n\nall_features = Tag_17\ntrain_features  = [x+7 for x in all_features]\nX_train = train.iloc[ : , train_features].fillna(0)\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(X_train)\nx4, y4  = tsne_2D.as_matrix().T\n\nall_features = f_41_to_71\ntrain_features  = [x+7 for x in all_features]\nX_train = train.iloc[ : , train_features].fillna(0)\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(X_train)\nx5, y5  = tsne_2D.as_matrix().T\n\nall_features = resp\ntrain_features  = [x+7 for x in all_features]\nX_train = train.iloc[ : , train_features].fillna(0)\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(X_train)\nx6, y6  = tsne_2D.as_matrix().T","2329592e":"# and plot\nfig, ((ax1, ax2), (ax3, ax4), (ax5, ax6)) = plt.subplots(3, 2,figsize=(20,30))\nax1.scatter(x1, y1, s=0.1, c=x, cmap=plt.cm.plasma)\nax1.set_title('Tag 6 features (1 to 40)', fontsize=18)\nax2.scatter(x2, y2, s=0.1, c=x, cmap=plt.cm.plasma)\nax2.set_title('Tag 9 (a subset of Tag 6)', fontsize=18)\nax3.scatter(x3, y3, s=0.1, c=x, cmap=plt.cm.plasma)\nax3.set_title('Tag 23 features (72 to 117)', fontsize=18)\nax4.scatter(x4, y4, s=0.1, c=x, cmap=plt.cm.plasma)\nax4.set_title('Tag 17 (a subset of Tag 23)', fontsize=18)\nax5.scatter(x5, y5, s=0.1, c=x, cmap=plt.cm.plasma)\nax5.set_title('feature_41 to feature_71', fontsize=18)\nax6.scatter(x6, y6, s=0.1, c=x, cmap=plt.cm.plasma)\nax6.set_title('resp features(*)', fontsize=18)\nplt.show();","889cd133":"\n#### Now perform the [cuML TSNE](https:\/\/docs.rapids.ai\/api\/cuml\/stable\/api.html#tsne) for all 130 features","f8ecd203":"# Jane Street: t-SNE using RAPIDS cuML\nWe shall perfrom a [t-distributed stochastic neighbor embedding (t-SNE)](https:\/\/en.wikipedia.org\/wiki\/T-distributed_stochastic_neighbor_embedding) using [cuML](https:\/\/docs.rapids.ai\/api\/cuml\/stable\/), a suite of fast, GPU-accelerated machine learning algorithms thanks to [RAPIDS](https:\/\/rapids.ai\/).\n\n#### First let us [install RAPIDS](https:\/\/www.kaggle.com\/cdeotte\/rapids)","dbf66c10":"#### ...and plot","f9bb583d":"#### Read in the data with [cuDF](https:\/\/docs.rapids.ai\/api\/cudf\/stable\/), a GPU Dataframe object","b8bd1fb8":"(\\*) the `resp` features are: 15, 16, 25, 26, 35, 36, 59, 76, 82, 88, 94, 100, 106, 112, 118, 128, and 129 (see [\"*Jane Street: EDA of day 0 and feature importance*\"](https:\/\/www.kaggle.com\/carlmcbrideellis\/jane-street-eda-of-day-0-and-feature-importance) for more details).\n\n# References\n* [Laurens van der Maaten, and Geoffrey Hinton \"*Visualizing Data using t-SNE*\", Journal of Machine Learning Research, volume **9** pages 2579\u22122605 (2008)](https:\/\/jmlr.org\/papers\/volume9\/vandermaaten08a\/vandermaaten08a.pdf)","4a6ac24d":"### Here are some more plots..."}}