{"cell_type":{"a4a5d00a":"code","39974457":"code","1e2b315a":"code","616e3c2d":"code","a670167c":"code","24292bbd":"code","b80a3507":"code","76d8d38c":"code","8cde8745":"code","92e049e5":"code","28ee27b9":"code","e3b0ac2b":"code","160ea9b8":"code","29a59624":"code","95f872e6":"code","59571548":"code","effcb3df":"code","3945ed85":"code","31b9b10c":"code","90b39aca":"code","5eb93884":"code","4b00fd47":"code","265be377":"code","5add5bb5":"code","dc9aeed2":"code","3021969f":"code","536ba364":"code","fd0b5cc7":"code","99961102":"code","8a2b7d49":"code","4248752f":"code","69e99336":"code","9010a672":"code","d754b55b":"code","cfd699fb":"code","78e3c990":"code","2d2a67a2":"code","72580d40":"code","466d64ac":"code","4edde414":"code","bb96f0c7":"code","f6d44115":"code","74e026e7":"code","a741cb19":"code","5d263ef1":"code","90115ad8":"code","cf22c87e":"code","b3145edf":"code","2e327d6d":"code","fa0c7fb8":"code","f1d22091":"code","62a9188a":"code","9bbfdcfc":"code","2c9b2412":"code","3c8d6cd8":"code","14c35ad1":"code","f3b4ff9a":"code","4a18070d":"code","5801238c":"code","126eaa6a":"code","59841078":"code","13ed7a44":"code","75668258":"code","e81c952d":"code","637e5265":"code","87829ded":"code","3b430663":"code","022ccbb2":"code","58dc88a1":"code","7adb373d":"code","8045b545":"code","4f19c644":"code","0a44e981":"code","b99d7170":"code","43418312":"code","21c53e16":"code","44efb6a0":"code","db70ef86":"code","7411b3ee":"code","f73e5e32":"code","d13a13c4":"code","1abab1fd":"markdown","5d5659e8":"markdown","fe102545":"markdown","93c32da9":"markdown","3005bdbe":"markdown","866c682e":"markdown","a46aa825":"markdown","50593b2c":"markdown","e3f101ed":"markdown","41db5c59":"markdown","2e69b33c":"markdown","235873b3":"markdown","44d68ad0":"markdown","090bcae0":"markdown","79fcc84d":"markdown","b073a797":"markdown","cf8889a6":"markdown","4ec4bc0d":"markdown","6dc8359e":"markdown","aba5acd6":"markdown","006e885c":"markdown","8b13a361":"markdown","dcb95ba2":"markdown","f4c5ea6e":"markdown","368e7e01":"markdown","fd4f61d7":"markdown","447d8456":"markdown","d1ab4a67":"markdown","0d8f2e27":"markdown","56005a7a":"markdown","c8e3cba3":"markdown"},"source":{"a4a5d00a":"# pacote de processamento dos dados\nimport pandas as pd\nimport numpy as np\n\n# pacote de visualiza\u00e7\u00e3o de dados\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport plotly.express as px","39974457":"# definindo um layout dos gr\u00e1ficos\nmpl.style.use('seaborn-whitegrid')\nsns.set_theme(style=\"whitegrid\")","1e2b315a":"import os\n\n# repetir - para cada diret\u00f3rio\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    # repetir - para cada arquivo\n    for filename in filenames:\n        # imprimir o nome\n        print(os.path.join(dirname, filename))","616e3c2d":"# leitura do arquivo\nfile_name = '\/kaggle\/input\/pesquisa-data-hackers-2019\/datahackers-survey-2019-anonymous-responses.csv'\ndf = pd.read_csv(file_name)\n\n# imprime as 3 primeiras linhas\ndf.head(3)","a670167c":"df.columns","24292bbd":"# apenas as perguntas que queremos\nwanted = ['P1', 'P2', 'P5', 'P7', 'P8', 'P9', 'P11', 'P16', 'P19', \\\n          'P21', 'P21', 'P22', 'P24', 'P25', 'P27', 'P33', 'P34', 'P35', \\\n          'D1', 'D2', 'D3', 'D4', 'D5', 'D6']\n\n# busca pelas colunas que n\u00e3o possuem aquelas tags e as remove\nnot_wanted = []\nfor column in df.columns:\n    if eval(column)[0] not in wanted:\n        not_wanted.append(column)\ndf = df.drop(columns=not_wanted)","b80a3507":"# imprime as 3 linhas aleat\u00f3rias\ndf.sample(3)","76d8d38c":"len(df.columns)","8cde8745":"# quantos s\u00e3o cientistas e quantos n\u00e3o s\u00e3o?\ndf[\"('P19', 'is_data_science_professional')\"].value_counts()","92e049e5":"# filtrando aqueles que s\u00e3o cientistas de dados\ndf = df[df[\"('P19', 'is_data_science_professional')\"] == 1]","28ee27b9":"print('linhas: %d\\ncolunas: %d' % df.shape)","e3b0ac2b":"# histograma por idade\nval = df[\"('P1', 'age')\"].value_counts()\nX = [int(key) for key in val.keys()]\nY = [val[key] for key in val.keys()]","160ea9b8":"# plot - gr\u00e1fico de barras\nplt.bar(X, Y)\nplt.ylabel('Quantidade')\nplt.xlabel('Idade')\nplt.show()","29a59624":"# histograma por g\u00eanero\nval = df[\"('P2', 'gender')\"].value_counts()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","95f872e6":"# plot - gr\u00e1fico de pizza\nplt.pie(Y, labels=X, autopct='%1.1f%%')\nplt.show()","59571548":"# histograma por estado\nval = df[\"('P5', 'living_state')\"].value_counts()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","effcb3df":"val","3945ed85":"xT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","31b9b10c":"# histograma por grau de escolaridade\nval = df[\"('P8', 'degreee_level')\"].value_counts()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","90b39aca":"val","5eb93884":"xT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","4b00fd47":"# histograma por \u00e1rea de forma\u00e7\u00e3o\nval = df[\"('D3', 'anonymized_degree_area')\"].value_counts()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","265be377":"val","5add5bb5":"xT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","dc9aeed2":"# agrupando os valores\nval = df.groupby(\"('D3', 'anonymized_degree_area')\")[\"('P8', 'degreee_level')\"].value_counts().unstack().fillna(0)","3021969f":"val","536ba364":"# recupera os valores, linha e coluna\ndegreee_level = val.index.tolist()\nanonymized_degree_area = val.columns.tolist()\n\nX = []\nY = []\narea = []\n\n# contagem por x e y\nfor i in range(len(degreee_level)):\n    b = degreee_level[i]\n    for j in range(len(anonymized_degree_area)):\n        d = anonymized_degree_area[j]\n        X.append(i)\n        Y.append(j)\n        area.append(val.loc[b][d] * 8)","fd0b5cc7":"xT = range(len(degreee_level))\nyT = range(len(anonymized_degree_area))\n\n# plot - gr\u00e1fico de bolinhas, com \u00e1rea\nplt.scatter(Y, X, s=area, alpha=0.5, color='blue')\nplt.xticks(yT, anonymized_degree_area, rotation=35)\nplt.yticks(xT, degreee_level)\nplt.show()","99961102":"# histograma de setor\nval = df[\"('D4', 'anonymized_market_sector')\"].value_counts()\nval = pd.DataFrame(val).reset_index(drop=False)\nval.columns = ['Setor', 'Quantidade']","8a2b7d49":"val","4248752f":"sns.barplot(data=val, x='Quantidade', y='Setor')\nplt.show()","69e99336":"# histograma de setor\nval = df[\"('P16', 'salary_range')\"].value_counts()\nval = pd.DataFrame(val).reset_index(drop=False)\nval.columns = ['Range', 'Quantidade']","9010a672":"# reordena os indices\nreorderlist = [8, 4, 5, 3, 0, 2, 1, 6, 7, 9, 10]\nval = val.reindex(reorderlist)","d754b55b":"val","cfd699fb":"sns.barplot(data=val, x='Quantidade', y='Range')\nplt.show()","78e3c990":"# filtra para mostrar apenas alguns setores\nfilterval = ['Finan\u00e7as ou Bancos', 'Varejo', 'Setor P\u00fablico', 'Educa\u00e7\u00e3o', '\u00c1rea da Sa\u00fade', 'Marketing']\nval = df[df[\"('D4', 'anonymized_market_sector')\"].isin(filterval)]","2d2a67a2":"# agrupa os valores\nval = val.groupby(\"('P16', 'salary_range')\")[\"('D4', 'anonymized_market_sector')\"].value_counts().unstack().fillna(0)","72580d40":"# reordena a lista\nreorderlist = ['Menos de R$ 1.000\/m\u00eas','de R$ 1.001\/m\u00eas a R$ 2.000\/m\u00eas', 'de R$ 2.001\/m\u00eas a R$ 3000\/m\u00eas',\\\n               'de R$ 3.001\/m\u00eas a R$ 4.000\/m\u00eas', 'de R$ 4.001\/m\u00eas a R$ 6.000\/m\u00eas', 'de R$ 6.001\/m\u00eas a R$ 8.000\/m\u00eas',\\\n               'de R$ 8.001\/m\u00eas a R$ 12.000\/m\u00eas', 'de R$ 12.001\/m\u00eas a R$ 16.000\/m\u00eas','de R$ 16.001\/m\u00eas a R$ 20.000\/m\u00eas',\\\n               'de R$ 20.001\/m\u00eas a R$ 25.000\/m\u00eas','Acima de R$ 25.001\/m\u00eas']\nval = val.reindex(reorderlist)","466d64ac":"val","4edde414":"# normalizando os valores por coluna\nfrom sklearn import preprocessing\n\nmin_max_scaler = preprocessing.MinMaxScaler()\n\nx = val.values \nx_scaled = min_max_scaler.fit_transform(x)\nval = pd.DataFrame(x_scaled, index=val.index, columns=val.columns)","bb96f0c7":"ax = sns.heatmap(val, annot=True, fmt=\".1f\")\nax.set(xlabel='Setor', ylabel='Sal\u00e1rio')\nplt.show()","f6d44115":"columnsP21 = [\"('P21', 'sql_')\", \"('P21', 'r')\", \"('P21', 'python')\", \"('P21', 'c_c++_c#')\",\n\"('P21', 'dotnet')\", \"('P21', 'java')\", \"('P21', 'julia')\", \"('P21', 'sas_stata')\", \n\"('P21', 'visual_basic_vba')\", \"('P21', 'scala')\", \"('P21', 'matlab')\", \"('P21', 'php')\",\n\"('P21', 'no_listed_languages')\"]","74e026e7":"val = df[columnsP21].sum().sort_values().to_dict()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","a741cb19":"X = ['Outro','Julia','Matlab','.NET','PHP','SAS\/STATA','Scala','C\/C++','VBA','Java','R','SQL','Python']","5d263ef1":"val = pd.DataFrame(data={'Linguagem':X, 'Qtde':Y})\nval","90115ad8":"# gr\u00e1fico de barras\nfig = px.bar(val, x='Linguagem', y='Qtde', text=Y)\nfig.show()","cf22c87e":"# matplotlib\n\nxT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.ylabel('Tech')\nplt.yticks(xT, X)\nplt.show()","b3145edf":"df[\"('P21', 'python')\"].value_counts()","2e327d6d":"# seaborn\nsns.histplot(data=df, x=\"('P21', 'python')\", kde=True)\nplt.show()","fa0c7fb8":"val = df[\"('P22', 'most_used_proggraming_languages')\"].value_counts()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","f1d22091":"val = pd.DataFrame(data={'Linguagem':X, 'Qtde':Y})\nval","62a9188a":"# gr\u00e1fico de barras\nfig = px.bar(val, x='Linguagem', y='Qtde', text=Y, color='Qtde')\nfig.show()","9bbfdcfc":"# matplotlib\nxT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","2c9b2412":"columnsP24 = [\"('P24', 'sql')\", \"('P24', 'nosql')\", \"('P24', 'imagens')\",\n\"('P24', 'nlp')\", \"('P24', 'v\u00eddeos')\", \"('P24', 'planilhas')\", \"('P24', 'other')\"]","3c8d6cd8":"val = df[columnsP24].sum().sort_values().to_dict()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","14c35ad1":"X = ['V\u00eddeos', 'Outro', 'Imagens', 'NLP', 'NoSQL', 'Planilhas', 'SQL']","f3b4ff9a":"val = pd.DataFrame(data={'Dados':X, 'Qtde':Y})\nval","4a18070d":"# gr\u00e1fico de barras\nfig = px.bar(val, x='Dados', y='Qtde', text=Y)\nfig.show()","5801238c":"# matplotlib\nxT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","126eaa6a":"columnsP25 = [\"('P25', 'aws')\", \"('P25', 'gcp')\",\n\"('P25', 'azure')\", \"('P25', 'ibm')\", \"('P25', 'on_premise_servers')\",\n\"('P25', 'cloud_pr\u00f3pria')\", \"('P25', 'other')\"]","59841078":"val = df[columnsP25].sum().sort_values().to_dict()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","13ed7a44":"X = ['IBM', 'Outro', 'On Premises', 'Cloud Privada', 'Azure', 'GCP', 'AWS']","75668258":"val = pd.DataFrame(data={'Cloud':X, 'Qtde':Y})\nval","e81c952d":"# gr\u00e1fico de barras\nfig = px.bar(val, x='Cloud', y='Qtde', text=Y, color='Cloud')\nfig.show()","637e5265":"# matplotlib\nxT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.bar(xT, Y)\nplt.xticks(xT, X, rotation=35)\nplt.show()","87829ded":"columnsP27 = [\"('P27', 'microsoft_powerbi')\", \"('P27', 'qlik_view_qlik_sense')\",\n\"('P27', 'tableau')\", \"('P27', 'metabase')\", \"('P27', 'superset')\",\n\"('P27', 'redash')\", \"('P27', 'microstrategy')\",\n\"('P27', 'ibm_analytics_cognos')\", \"('P27', 'sap_business_objects')\",\n\"('P27', 'oracle_business_intelligence')\", \"('P27', 'birst')\",\n\"('P27', 'looker')\", \"('P27', 'google_data_studio')\",\n\"('P27', 'only_excel_gsheets')\", \"('P27', 'no_bi_tool_at_work')\", \"('P27', 'other')\"]","3b430663":"val = df[columnsP27].sum().sort_values().to_dict()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","022ccbb2":"X = ['Birst', 'Oracle BI',  'Looker', 'Superset', 'SAP',  'IBM Cognos', 'Redash', 'MicroStrategy','Outro', 'Qlink', 'Planilhas', 'Data Studio', 'Metabase', 'Nenhum', 'Tableau', 'Power BI']","58dc88a1":"val = pd.DataFrame(data={'BI':X, 'Qtde':Y})\nval","7adb373d":"# gr\u00e1fico de barras\nfig = px.bar(val, x='BI', y='Qtde', text=Y, color='Qtde')\nfig.show()","8045b545":"xT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","4f19c644":"columnsP33 = [\"('P33', 'whatsapp_groups')\", \"('P33', 'youtube_channels')\",\n\"('P33', 'other_brasilian_blogs')\", \"('P33', 'other_slack_channels')\",\n\"('P33', 'twitter')\", \"('P33', 'abroad_blogs')\",\n\"('P33', 'abroad_podcasts')\", \"('P33', 'meetups_and_events')\",\n\"('P33', 'only_data_hackers')\", \"('P33', 'other')\"]","0a44e981":"val = df[columnsP33].sum().sort_values().to_dict()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","b99d7170":"val","43418312":"X = ['Slack', 'Data Hackers', 'Outro', 'Twitter', 'WhatsApp', 'EN Podcasts', 'BR Blogs', 'Eventos', 'EN Blogs', 'YouTube']","21c53e16":"xT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","44efb6a0":"columnsP35 = [\"('P34', 'udacity')\", \"('P34', 'coursera')\", \"('P34', 'udemy')\",\n\"('P34', 'height')\", \"('P34', 'edx')\", \"('P34', 'data_camp')\",\n\"('P34', 'data_quest')\", \"('P34', 'kaggle_learn')\",\n\"('P34', 'online_courses')\", \"('P34', 'other')\"]","db70ef86":"val = df[columnsP35].sum().sort_values().to_dict()\nX = [key for key in val.keys()]\nY = [val[key] for key in val.keys()]","7411b3ee":"val","f73e5e32":"X = ['DataQuest', 'Cursos Online', 'Outro', 'edX', 'Height', 'Kaggle', 'DataCamp', 'Udacity', 'Coursera', 'Udemy']","d13a13c4":"xT = range(len(Y))\n\n# plot - gr\u00e1fico de barras horizontal\nplt.barh(xT, Y)\nplt.yticks(xT, X)\nplt.show()","1abab1fd":"## Pr\u00e9-Processamento dos Dados\n\n- Selecionando as colunas de interesse.\n- Selecionando as linhas de interesse.","5d5659e8":"<a id='loading'><\/a>\n\n---\n\n# Dados\n\nEsta se\u00e7\u00e3o re\u00fane um conjunto de c\u00f3digo para carregamento e pr\u00e9-processamento sobre os dados.   \nAl\u00e9m disso, uma vis\u00e3o inicial dos dados dispon\u00edveis neste dataset.\n\n[Voltar para o Topo](#top)","fe102545":"## e sobre os Tipos de Dados?","93c32da9":"<a id='tech'><\/a>\n\n---\n\n# Estudo de Tecnologia \n\nQuais s\u00e3o as tecnologias mais utilizadas pelo cientistas de dados?\n\n- Linguagens de Programa\u00e7\u00e3o\n    - Qual \u00e9 a predileta?\n- Tipos de dados\n- _Cloud,_ ou Computa\u00e7\u00e3o em Nuvem\n- Ferramentas de _Business Intelligence_\n\n> As an\u00e1lises dessa se\u00e7\u00e3o utilizaram o pacote `plotly`. Este pacote \u00e9 focado em visualiza\u00e7\u00f5es an\u00e1liticas, bem f\u00e1cil de ser utilizado, e possui gr\u00e1ficos interativos. Apresenta as mesmas limita\u00e7\u00f5es que o `seaborn`. Por\u00e9m, este \u00e9 o unico pacote, aqui apresentado, que trabalha com analytics - no qual \u00e9 poss\u00edvel interagir com o gr\u00e1fico. Al\u00e9m disso, possu\u00ed uma gama de visualiza\u00e7\u00f5es bem robustas, e vers\u00e3o paga para gr\u00e1ficos mais interativos e espec\u00edficos.\n\n[Voltar para o Topo](#top)","3005bdbe":"### Sobre Python, quantos usam e quantos n\u00e3o usam?\n\n- Observando todos os cientistas de dados.","866c682e":"## Quantos s\u00e3o homens, mulheres?","a46aa825":"Das 170 colunas, vamos selecionar apenas as colunas de interesse para a nossa an\u00e1lise.","50593b2c":"---\n\n**Fim**\n\nEspero que tenha gostado, qualquer feedback - s\u00f3 mandar nos coment\u00e1rios ou me procurar!\n\n[Voltar para o Topo](#top)","e3f101ed":"Quantas colunas restaram?","41db5c59":"### Linhas de Interesse\n\nRemovendo aqueles que n\u00e3o s\u00e3o cientistas de dados.","2e69b33c":"## Qual a Plataforma de Ensino?","235873b3":"* ## Quais s\u00e3o as linguagens mais utilizadas? ","44d68ad0":"### Colunas de Interesse","090bcae0":"<a id='job'><\/a>\n\n---\n\n# Estudo de Empresas \n\n- Vertical das Empresas\n- Faixa Sal\u00e1rial\n\n> As an\u00e1lises dessa se\u00e7\u00e3o utilizaram o pacote `seaborn`. Este pacote \u00e9 focado em an\u00e1lises est\u00e1tisticas, bem f\u00e1cil de ser utilizado, e visualmente bem agrad\u00e1vel. Contudo, n\u00e3o \u00e9 poss\u00edvel personalizar totalmente que nem o `matplotlib`. De qualquer forma, `seaborn` \u00e9 um excelente pacote e agiliza a produ\u00e7\u00e3o de gr\u00e1ficos de uso comum.\n\n[Voltar para o Topo](#top)","79fcc84d":"# EDA - Cen\u00e1rio dos Cientistas de Dados no Brasil\n\nEste notebook realiza uma An\u00e1lise Explorat\u00f3ria de Dados _(Exploratory Data Analysis - EDA)_ sobre o dataset [Data Hackers Survey 2019](https:\/\/www.kaggle.com\/datahackers\/pesquisa-data-hackers-2019). Um conjunto de dados que re\u00fane mais de 1.700 respostas da pesquisa de mercado de Ci\u00eancia de Dados feita pelo [Data Hackers](https:\/\/medium.com\/data-hackers), no ano de 2019. Neste estudo veremos um conjunto de visualiza\u00e7\u00f5es sobre os dados demogr\u00e1ficos, observa\u00e7\u00f5es sobre as verticais empresas e sal\u00e1rios, tecnologias mais utilizadas no mercado de trabalho e, por fim, como se manter atualizado na \u00e1rea.   \n\n**Disclaimer**. Neste notebook ser\u00e1 explorado as tr\u00eas bibliot\u00e9cas de visualiza\u00e7\u00e3o de dados mais famosas, `matplotlib`, `seaborn` e `plotly`. Contudo, o objetivo n\u00e3o \u00e9 explorar suas possibilidades, mas apenas apresentar algumas visualiza\u00e7\u00f5es iniciais. Cada se\u00e7\u00e3o utilizar\u00e1 um pacote especifico para desenvolver seus gr\u00e1ficos.   \n\n> Conte\u00fado voltado para iniciantes na \u00e1rea de Aprendizado de M\u00e1quina e Ci\u00eancia de Dados!\n\n<a id='top'><\/a>\n\n## Conte\u00fado\n\n> **Nota**. Alguns c\u00f3digos foram ocultados a fim de facilitar a leitura e dar destaque para os conte\u00fados mais importantes.\n\nO notebook est\u00e1 organizado como segue:\n\n- [Dados](#loading) - Carregamento e pr\u00e9-processamento dos dados.\n- [Estudo de Demografia](#demography) - An\u00e1lises sobre os g\u00eaneros, localiza\u00e7\u00e3o, n\u00edvel de ensino, bem como \u00e1rea de forma\u00e7\u00e3o.\n- [Estudo de Empresas](#job) - An\u00e1lise sobre setores e faixa salarial dos cientistas de dados.\n- [Estudo de Tecnologia](#tech) - An\u00e1lise sobre as tecnologias mais utilizadas no mercado de trabalho.\n- [Como se atualizar?](#study) - An\u00e1lise sobre as formas de estudo e plataformas de ensino.","b073a797":"## Qual a idade dos Cientistas de Dados?","cf8889a6":"## Qual a ferramenta de Business Intelligence (BI)?","4ec4bc0d":"## Importando os Dados","6dc8359e":"## Qual s\u00e3o as \u00e1reas de forma\u00e7\u00e3o?","aba5acd6":"<a id='demography'><\/a>\n\n---\n\n# Estudo de Demografia \n\nEsta se\u00e7\u00e3o realiza uma an\u00e1lise sobre:\n\n- Idade\n- G\u00eanero\n- Estado de Resid\u00eancia\n- N\u00edvel de Ensino\n- \u00c1rea de Forma\u00e7\u00e3o\n\n> As an\u00e1lises dessa se\u00e7\u00e3o utilizaram o pacote `matplotlib`. Este \u00e9 o pacote mais completo e base para todos os demais pacotes visuais aqui apresentados. Contudo, ele \u00e9 mais trabalhoso para manipular as visualiza\u00e7\u00f5es.\n\n[Voltar para o Topo](#top)","006e885c":"## Em que estado moram?","8b13a361":"<a id='study'><\/a>\n\n---\n\n# Como se atualizar?\n\n- M\u00eddia social\n- Plataformas de Ensino\n\n[Voltar para o Topo](#top)","dcb95ba2":"## Qual \u00e9 a faixa sal\u00e1rial dos Cientistas?","f4c5ea6e":"## Qual a faixa sal\u00e1rio por setor?\n\n- Neste caso, ser\u00e1 um gr\u00e1fico combinando valores.\n- Apenas top seis segmentos.\n\n> Excluindo-se Tecnologia.","368e7e01":"## Carregamento os Dados\n\n- Listando os arquivos dispon\u00edveis.\n- Carregando a planilha num `pandas.DataFrame`.","fd4f61d7":"## Quais s\u00e3o as verticais da empresas que trabalham com Ci\u00eancia de Dados?","447d8456":"Abaixo tem _(ocultado)_ um c\u00f3digo para normalizar os valores por coluna.   \nAssim, a visualiza\u00e7\u00e3o trar\u00e1 a representatividade (%) para cada Setor.   ","d1ab4a67":"## Qual \u00e9 o \u00e1rea de forma\u00e7\u00e3o por n\u00edvel de escolaridade?\n\nNeste caso, ser\u00e1 um gr\u00e1fico combinando valores.   \nEste gr\u00e1fico \u00e9 s\u00f3 uma demonstra\u00e7\u00e3o de como podemos personalizar nossas visualiza\u00e7\u00f5es.\n\n> Criaremo um gr\u00e1fico em que:   \n> Eixo Y - Forma\u00e7\u00e3o   \n> Eixo X - N\u00edvel de Ensino   \n> Tamanho da bolinha \u00e9 a quantidade de pessoas","0d8f2e27":"## Qual s\u00e3o as suas escolaridades?\n\nou seja, n\u00edvel de ensino.","56005a7a":"## Qual \u00e9 a plataforma _Cloud_ mais utilizada?","c8e3cba3":"## Qual \u00e9 a linguagem preferida?"}}