{"cell_type":{"6f2c9159":"code","78e5778d":"code","80fcf326":"code","7fdc9313":"code","c9390b94":"code","118b704b":"code","825334bc":"code","12e900c7":"code","4ecaa483":"code","6b5740f0":"code","79429c0d":"code","0573d8ef":"code","1fc41b1c":"code","e4ef1d69":"code","1a1436ac":"code","331b48d1":"code","2904d1fe":"code","65893a49":"code","42543a2c":"markdown","9a45eecb":"markdown","2e82a6fa":"markdown","9a2db0ee":"markdown","58423835":"markdown","ba81a5c5":"markdown","a1fec4ce":"markdown","4d83aa6e":"markdown","195fe17a":"markdown","6bfe5d7b":"markdown","73962047":"markdown","5bedb06a":"markdown","70f2e6d2":"markdown"},"source":{"6f2c9159":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n!pip install pmdarima\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime as dt\nimport seaborn as sns\nfrom pmdarima import auto_arima\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom statsmodels.graphics.tsaplots import plot_pacf,plot_acf\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","78e5778d":"data = pd.read_csv('..\/input\/us-candy-production-by-month\/candy_production.csv',index_col='observation_date',parse_dates=True)","80fcf326":"data.head()","7fdc9313":"sns.set(rc={'figure.figsize':(20,5)})\ndata.plot()","c9390b94":"data.index","118b704b":"data.index.freq = pd.infer_freq(data.index)","825334bc":"data.index","12e900c7":"result = seasonal_decompose(data)\nsns.set(rc={'figure.figsize': (20,5)})\nresult.plot();","4ecaa483":"plot_acf(data);","6b5740f0":"plot_pacf(data);","79429c0d":"auto_arima(data['IPG3113N'],seasonal=True,m=12,suppress_warnings=True,information_criterion='aic',max_P=5,max_D=5,max_Q=5,max_p=5,max_d=5,max_q=5).summary()","0573d8ef":"train = data[:500]\ntest = data[500:]","1fc41b1c":"model = SARIMAX(train['IPG3113N'],order=(3,1,3),seasonal_order=(1,0,2,12))","e4ef1d69":"result_f = model.fit()","1a1436ac":"pred = result_f.predict(start=len(train),end=len(train)+len(test),type='levels')","331b48d1":"fig, ax = plt.subplots()\nax=test.plot(color='red',ax=ax)\nax=pred.plot(color='green',ax=ax)\nax.legend(['test','pred'])","2904d1fe":"model_forecast = SARIMAX(data,order=(3,1,3),seasonal_order=(1,0,2,12))\n\nmodel_forecast_fit = model_forecast.fit()\n\npred_forecast = model_forecast_fit.predict(len(data),len(data)+48,type='levels')","65893a49":"fig, ax = plt.subplots()\nax=data.plot(color='red',ax=ax)\nax=pred_forecast.plot(color='green',ax=ax)\nax.legend(['Original_data','Forecast'])","42543a2c":"Now we will train over model on whole data for Forecasting","9a45eecb":"Now we will perform the **Seasonal Decomposition** on the data so we can observe the seasonal,trend and residual component of the data. ","2e82a6fa":"Now we will use auto_arima from pmdarima to get the optimal parameter of SARIMA","9a2db0ee":"We can see in the output that now frequency(freq) is set to 'MS' that is monthly starting\n","58423835":"**Importing all the required libraries**","ba81a5c5":"From the above graphs we can see that there is surely a seasonal component in the data, but to find out how many period we will plot an ACF plot","a1fec4ce":"As we can see in above output the frequency is set to none , for doing seasonal decompose we must need to set the frequency. We can do it by observing the data or by using a function given by pandas which is listed below","4d83aa6e":"The above chart displayes how close our model was with the actual data","195fe17a":"**Plotting the data**","6bfe5d7b":"**Spltting data into test and train set**","73962047":"**Reading the datafile with index column as observatiob date and setting parse date  and glancing over few values.**","5bedb06a":"**Data analysis**\n\n","70f2e6d2":"from the ACF plot we can clearly see that there is a trend repetation at every 12 months"}}