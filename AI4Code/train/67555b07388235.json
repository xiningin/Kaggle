{"cell_type":{"cfc4bbb9":"code","0b728c9a":"code","611e5242":"code","be22c7a9":"code","f75cc1f2":"markdown","0b6eff74":"markdown","620b7d4f":"markdown","c2fba0ee":"markdown","d4ef37a3":"markdown","5667cd26":"markdown","6df4a522":"markdown","8442f91a":"markdown"},"source":{"cfc4bbb9":"import numpy as np\nimport pandas as pd \nimport pydicom\nimport matplotlib.pyplot as plt\nimport os\nfrom pathlib import Path\nimport cv2","0b728c9a":"#Checking for errorneous files\nbase_pth = \"..\/input\/siim-acr-pneumothorax-segmentation\/sample images\/\"\nfor each in (os.listdir(\"..\/input\/siim-acr-pneumothorax-segmentation\/sample images\")):\n    try:\n        ds = pydicom.dcmread(base_pth + each)\n    except:\n        print(\"Error File: \"+each)\n\n#Reading and displaying a sample image\n\nprint(\"\\n Sample File looks like: \\n\")\nds = pydicom.dcmread(\"..\/input\/siim-acr-pneumothorax-segmentation\/sample images\/1.2.276.0.7230010.3.1.4.8323329.1000.1517875165.878027.dcm\")\nplt.imshow(ds.pixel_array, cmap=plt.cm.bone) \nprint(ds.pixel_array)","611e5242":"#Prepping X_train\n#Note - 256 x 256 - 2.6 GB, 512 x 512 - 4.5 GB\n    \nX_train = []\n\nfor filename in Path('..\/input\/siim-train-test\/siim\/dicom-images-train\/').glob('**\/*.dcm'):\n    ds = pydicom.dcmread(str(filename))\n    b0 = cv2.resize(ds.pixel_array,(512,512))\n    b = np.reshape(b0,-1)\n    X_train.append(b)","be22c7a9":"#Prepping Y_train\nimport re\n\ndf_train = pd.read_csv('..\/input\/siim-train-test\/siim\/train-rle.csv')\ny_train = []\n\nfor filename in Path('..\/input\/siim-train-test\/siim\/dicom-images-train\/').glob('**\/*.dcm'):\n    tmp = re.search('\/[0-9.]*[.]*[0-9]*.dcm',str(filename))\n    idz = str(tmp.group()[1:-4])\n    \n    for idx,each in enumerate(df_train['ImageId']):\n        if each == idz:\n            if (df_train.iloc[idx,1] == ' -1'):\n                y_train.append(0)\n            else:\n                y_train.append(1)\n        else:\n            continue","f75cc1f2":"### <div style=' color: white; background-color: #2D93D5; border-left: 10px solid #014F99; padding: 20px;'>Some Observations<\/div>","0b6eff74":"### <div style=' color: white; background-color: #2D93D5; border-left: 10px solid #014F99; padding: 20px;'>Importing Libraries<\/div>\n- <i> Numpy, pandas, pydicom, matplotlib<\/i>","620b7d4f":"### <div style=' color: white; background-color: #2D93D5; border-left: 10px solid #014F99; padding: 20px;'>Creating DataFrame<\/div>\n- <i> Getting image grid (1024 x 1024) reshaping and transforming into features (1048576) and the encoded pixels from csv files to 0 and 1 (binary) labels, where -1 will be 0 and all other will be 1 (indicating the lung has diesease). <\/i>","c2fba0ee":"### <div style=' color: white; background-color: #2D93D5; border-left: 10px solid #014F99; padding: 20px;'> Problem Understood ? - Nope! <\/div>\n- The problem is divided into 2 sub-problems -\n    - Identifying if there is a lung diesease.\n    - If there is a lung diesease then try to identify the reigon of effect and try to create a mask out of it.\n    - The above 2 are the main ones and then the 3rd step is to encode the mask as a binary image and then use the given functions (mask_functions.py) to return a RLE (Run Length Encoded String).\n","d4ef37a3":"#### Sample Dataset\n- From above observation we've found out that all the images are of dimensions 1024x1024 and are in a special format dicom. \n- Total 11 files in sample set.","5667cd26":"Note - The data has been imported from seesee's upload. Thank You seesee. Since this is medical data this data was and will not be downloaded locally. We have also joined the google group but had trouble with importing the data by using GCP and other tools. Thank You.","6df4a522":"#### Obvious Stuff - Training and Test Datasets -\n- Training Set Size - 10712 - The training dataset is in the format of 10712 studies and each contains exactly 1 series and in it exactly 1 image\/instance.\n- Testing Set Size - 1377 - The test dataset is also in similar format with 1377 studies and each contains 1 series and 1 image\/instance.","8442f91a":"# <div style=' background-color: #ddffff; border-left: 10px solid #2196F3; padding: 20px;'> Playing with the data! <\/div>"}}