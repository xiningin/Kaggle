{"cell_type":{"75f71a8f":"code","77c7d908":"code","f1d4832c":"code","f2e44a74":"code","ffaaea17":"code","97f040a2":"code","53ed0dac":"code","d382a450":"code","89da6415":"code","ce856fff":"code","bdda9315":"code","7b8881ec":"code","209c705e":"code","08db0770":"code","857d24c0":"code","035c0c0c":"code","1771a78c":"markdown","24e39e9b":"markdown","ea2154c5":"markdown","3bf7eb7f":"markdown","412bcdaa":"markdown","f00b3603":"markdown","b0a24fdc":"markdown"},"source":{"75f71a8f":"# Library\nimport tensorflow.keras as keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, BatchNormalization\nfrom tensorflow.keras import backend as K\nfrom tensorflow.keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","77c7d908":"# CSV\ntrain = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/sample_submission.csv')","f1d4832c":"train","f2e44a74":"train = train.drop('id', axis=1)\ntest = test.drop('id', axis=1)","ffaaea17":"for i in range(50):\n    mean, std = train[f'feature_{i}'].mean(), train[f'feature_{i}'].std()\n    train[f'feature_{i}'] = train[f'feature_{i}'].apply(lambda x : (x-mean)\/std)\n    test[f'feature_{i}'] = test[f'feature_{i}'].apply(lambda x : (x-mean)\/std)","97f040a2":"label_dict = {val:idx for idx, val in enumerate(sorted(train['target'].unique()))}\ntrain['target'] = train['target'].map(label_dict)\n\ntarget = train['target']\ntrain.drop(['target'], inplace=True, axis=1)","53ed0dac":"train = train.values\ntarget = target.values\ntarget =  to_categorical(target)","d382a450":"train","89da6415":"X_train, X_val, y_train, y_val = train_test_split(train, target, test_size = 0.2, random_state = 2, stratify = target)","ce856fff":"num_features = 75\nnum_classes = 9","bdda9315":"model = Sequential([\n    Dense(512, input_dim = num_features, activation = 'relu'),\n    BatchNormalization(),\n    Dropout(0.7),\n    Dense(512, activation = 'relu'),\n    BatchNormalization(),\n    Dropout(0.7),\n    Dense(256, activation = 'relu'),\n    BatchNormalization(),\n    Dropout(0.7),\n    Dense(256, activation = 'relu'),\n    BatchNormalization(),\n    Dropout(0.7),\n    Dense(128, activation = 'relu'),\n    BatchNormalization(),\n    Dropout(0.7),\n    Dense(64, activation = 'relu'),\n    BatchNormalization(),\n    Dropout(0.7),\n    Dense(num_classes, activation = 'softmax')\n    ])\n\nmodel.summary()","7b8881ec":"model.compile(loss='categorical_crossentropy', optimizer='adam', metrics='accuracy')","209c705e":"history = model.fit(X_train, y_train,\n          batch_size = 50, epochs = 20,\n          validation_data=(X_val, y_val));","08db0770":"score = model.evaluate(X_val, y_val, verbose = 0)\nprint('Test loss: {}%'.format(score[0]))\nprint('Test score: {}%'.format(score[1] * 100))\nprint(\"MLP Error: %.2f%%\" % (100 - score[1] * 100))","857d24c0":"fig, ax = plt.subplots(figsize = (20, 8))\nsns.lineplot(x = history.epoch, y = history.history['loss'])\nsns.lineplot(x = history.epoch, y = history.history['val_loss'])\nax.set_title('Learning Curve (Loss)')\nax.set_ylabel('Loss')\nax.set_xlabel('Epoch')\nax.legend(['train', 'test'], loc = 'best')\nplt.show()","035c0c0c":"sample_submission[['Class_1','Class_2', 'Class_3', 'Class_4', 'Class_5', 'Class_6', 'Class_7', 'Class_8', 'Class_9']] = model.predict(test)\nsample_submission.to_csv('.\/prediction1.csv', index = False)","1771a78c":"### Compile","24e39e9b":"### Train","ea2154c5":"Inspirated by: https:\/\/www.kaggle.com\/subinium\/tps-may-deeplearning-pipeline-for-beginner","3bf7eb7f":"### Split","412bcdaa":"### Pretiction","f00b3603":"### Normalization","b0a24fdc":"### Model"}}