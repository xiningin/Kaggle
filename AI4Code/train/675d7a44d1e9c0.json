{"cell_type":{"fd3520cd":"code","1d0bb269":"code","d28f92c4":"code","7f22bfea":"code","e7b398b3":"code","171773f9":"code","ae13dd85":"code","abdb8826":"code","83865fff":"code","74e2c1ea":"code","077631be":"code","e4c09b87":"code","0954c52c":"code","d8cac12b":"markdown","aeee2560":"markdown","762f9f73":"markdown","8091b94c":"markdown","a0ce8055":"markdown","8233b60c":"markdown","6bad85de":"markdown","87dbb295":"markdown","167bf7ee":"markdown","a3f6fe6d":"markdown","06d3c541":"markdown","7d459bdf":"markdown","1cadeded":"markdown","f6439f07":"markdown"},"source":{"fd3520cd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.rcParams.update({'font.size': 14})\n\nimport re\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\ndistricts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\nproducts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")","1d0bb269":"districts_info = districts_info[districts_info.state.notna()].reset_index(drop=True)","d28f92c4":"temp_sectors = products_info['Sector(s)'].str.get_dummies(sep=\"; \")\ntemp_sectors.columns = [f\"sector_{re.sub(' ', '', c)}\" for c in temp_sectors.columns]\nproducts_info = products_info.join(temp_sectors)\nproducts_info.drop(\"Sector(s)\", axis=1, inplace=True)\n\ndel temp_sectors","7f22bfea":"products_info['primary_function_main'] = products_info['Primary Essential Function'].apply(lambda x: x.split(' - ')[0] if x == x else x)\nproducts_info['primary_function_sub'] = products_info['Primary Essential Function'].apply(lambda x: x.split(' - ')[1] if x == x else x)\n\n# Synchronize similar values\nproducts_info['primary_function_sub'] = products_info['primary_function_sub'].replace({'Sites, Resources & References' : 'Sites, Resources & Reference'})\nproducts_info.drop(\"Primary Essential Function\", axis=1, inplace=True)","e7b398b3":"PATH = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \n\ntemp = []\n\nfor district in districts_info.district_id.unique():\n    df = pd.read_csv(f'{PATH}\/{district}.csv', index_col=None, header=0)\n    df[\"district_id\"] = district\n    temp.append(df)\n    \n    \nengagement = pd.concat(temp)\nengagement = engagement.reset_index(drop=True)","171773f9":"fig, ax = plt.subplots(1, 1, figsize=(8,4))\n\nsns.histplot(engagement.groupby('district_id').time.nunique(), bins=30)\nax.set_title('Unique Days of Engagement Data per District')\nplt.show()","ae13dd85":"# Delete previously created engagement dataframe and create a new one\ndel engagement\n\ntemp = []\n\nfor district in districts_info.district_id.unique():\n    df = pd.read_csv(f'{PATH}\/{district}.csv', index_col=None, header=0)\n    df[\"district_id\"] = district\n    if df.time.nunique() == 366:\n        temp.append(df)\n\nengagement = pd.concat(temp)\nengagement = engagement.reset_index(drop=True)\n\n# Only consider districts with full 2020 engagement data\ndistricts_info = districts_info[districts_info.district_id.isin(engagement.district_id.unique())].reset_index(drop=True)\nproducts_info = products_info[products_info['LP ID'].isin(engagement.lp_id.unique())].reset_index(drop=True)","abdb8826":"engagement.time = engagement.time.astype('datetime64[ns]')","83865fff":"us_state_abbrev = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'American Samoa': 'AS',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District Of Columbia': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Guam': 'GU',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY'\n}\n\ndistricts_info['state_abbrev'] = districts_info['state'].replace(us_state_abbrev)\ndistricts_info_by_state = districts_info['state_abbrev'].value_counts().to_frame().reset_index(drop=False)\ndistricts_info_by_state.columns = ['state_abbrev', 'num_districts']\n\nfig = go.Figure()\nlayout = dict(\n    title_text = \"Number of Available School Districts per State\",\n    geo_scope='usa',\n)\n\nfig.add_trace(\n    go.Choropleth(\n        locations=districts_info_by_state.state_abbrev,\n        zmax=1,\n        z = districts_info_by_state.num_districts,\n        locationmode = 'USA-states', # set of locations match entries in `locations`\n        marker_line_color='white',\n        geo='geo',\n        colorscale=px.colors.sequential.Teal, \n    )\n)\n            \nfig.update_layout(layout)   \nfig.show()","74e2c1ea":"districts_info.pp_total_raw.unique()\ntemp = districts_info.groupby('locale').pp_total_raw.value_counts().to_frame()\ntemp.columns = ['amount']\n\ntemp = temp.reset_index(drop=False)\n\ntemp = temp.pivot(index='locale', columns='pp_total_raw')['amount']\ntemp = temp[['[4000, 6000[', '[6000, 8000[', '[8000, 10000[', '[10000, 12000[',\n       '[12000, 14000[', '[14000, 16000[', '[16000, 18000[', \n       '[18000, 20000[', '[20000, 22000[', '[22000, 24000[', ]]\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24,4))\n\nsns.countplot(data=districts_info, x='locale', ax=ax[0], palette='GnBu')\n\nsns.heatmap(temp, annot=True,  cmap='GnBu', ax=ax[1])\nax[1].set_title('Heatmap of Districts According To locale and pp_total_raw')\nplt.show()","077631be":"fig, ax = plt.subplots(1, 2, figsize=(16,4))\nsns.countplot(data=products_info, x='primary_function_main', palette ='GnBu', ax=ax[0])\nax[0].set_title('Main Categories in Primary Functions')\n\nsns.countplot(data=products_info[products_info.primary_function_main == 'LC'], x='primary_function_sub', palette ='GnBu', ax=ax[1])\nax[1].set_title('Sub-Categories in Primary Function LC')\nax[1].set_xticklabels(ax[1].get_xticklabels(), rotation=90)\nplt.show()","e4c09b87":"virtual_classroom_lp_id = products_info[products_info.primary_function_sub == 'Virtual Classroom']['LP ID'].unique()\n\n# Remove weekends from the dataframe\nengagement['weekday'] = pd.DatetimeIndex(engagement['time']).weekday\nengagement_without_weekends = engagement[engagement.weekday < 5]\n\n# Figure 1\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(24, 6))\nfor virtual_classroom_product in virtual_classroom_lp_id:\n    temp = engagement_without_weekends[engagement_without_weekends.lp_id == virtual_classroom_product].groupby('time').pct_access.mean().to_frame().reset_index(drop=False)\n    sns.lineplot(x=temp.time, y=temp.pct_access, label=products_info[products_info['LP ID'] == virtual_classroom_product]['Product Name'].values[0])\nplt.legend()\nplt.show()\n\n# Figure 2\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(24, 6))\nfor virtual_classroom_product in virtual_classroom_lp_id:\n    temp = engagement_without_weekends[engagement_without_weekends.lp_id == virtual_classroom_product].groupby('time').engagement_index.mean().to_frame().reset_index(drop=False)\n    sns.lineplot(x=temp.time, y=temp.engagement_index, label=products_info[products_info['LP ID'] == virtual_classroom_product]['Product Name'].values[0])\nplt.legend()\nplt.show()","0954c52c":"display(products_info.sum())\n\ndisplay(products_info.groupby('primary_function_main')['primary_function_sub'].value_counts().to_frame())","d8cac12b":"Finally, we will convert the `time` column to the type `datetime64[ns]` for easier handling.","aeee2560":"# Overview\n\nIn this analytics challenge, we are given multiple .csv files as shown in below figure. The main information contained in these files is **which tools are used with what engagement in which school district** in the United States of America in 2020.\n\nThe districts_info.csv file contains information about each school district and the products_info.csv file contains information about the top 370 tools used for digital learning. For each school district, there is an additional file that contains the engagement for each tool for everyday in 2020. The files can be joined by the key columns <font color='lightblue'>district_id<\/font> and <font color='orange'>lp_id<\/font>.\n\n![learnplatform.001.jpeg](attachment:10d597ce-2a66-4e0f-a16f-ea0a95f2cd18.jpeg)","762f9f73":"Now we will try to understand that meaning behind `pct_access` and `engagement_index`.\n\n* `pct_access`: **% of students in the district have at least one page-load event** of a given product and on a given day\n* `engagement_index`: **Total page-load events per 1000 students** of a given product and on a given day\n\nIn the first figure below, you can see the overall mean `pct_access` of all products of the category 'Virtual Classroom'. For better understanding, weekends are removed from this visualization as students will not attend classes on weekends and this would add a disturbing visual effect and make the plot more difficult to understand. Let's summarize what we see:\n* the home schooling phase starts at the beginning of March\n* there is a bell-shape between March and July\n* during July and August there are summer holidays and therefore no classes to attend\n* after the summer holidays the `pct_access` increases to a higher level as observed at the beginning of the pandemic and it stays somewhat constant\n* there are a few drops in `pct_access` visible throughout the year - these might be national holidays or other holidays\n* Zoom and Meet seem to be the two most popular products for virtual classrooms\n\nOver the last quarter of 2020, we can see a `pct_access` of roughly 15. What does this mean? 15 % of students in the district have at least one page-load event of Zoom or Meet.\n","8091b94c":"# Preprocessing\nPreprocessing is an important step in any analytics competition. It helps you to handle your data more efficiently. However, please note that **the way I preprocess the data may not be suited for your analysis purposes**. Therefore, before you begin preprocessing your data, think about which data you would like to keep and\/or modify and which data is not relevant for your analysis.\n\nIn the following subsections, I will proceed with the following basic preprocessing steps:\n- <font color='salmon'>dropping 57 school districts with NaN states (57\/233 ~ 25%)<\/font>\n- <font color='turquoise'>one-hot encoding the product sectors<\/font>\n- <font color='orange'>splitting up the primary essential function into main and sub category<\/font>\n![learnplatform.002.jpeg](attachment:f85cb16a-6095-4175-8f94-4b1c4f390289.jpeg)\n\n<font color='salmon'>Dropping Districts with NaN States<\/font>","a0ce8055":"To make the data easier to compare, we will only consider distrcits with engagement data for everyday in 2020.","8233b60c":"After preprocessing, we are left with a reduced `districts_info` dataframe with 176 districts and the `product_info` dataframe looks are follows:\n\n![learnplatform.003.jpeg](attachment:2cd2325d-8bc7-4a87-8a62-75ba9fd94069.jpeg)","6bad85de":"# Work in Progress...","87dbb295":"Furthermore, we will concatenate the engagement data from all remaining districts in one dataframe by adding the key column `district_id` to each engagement file as shown below.\n![learnplatform4.001.jpeg](attachment:830ae306-55d8-45e8-817d-20d8bb758cda.jpeg)","167bf7ee":"# Exploratory Data Analysis (EDA)\n\nLet's begin with a simple EDA. First of all, I am interested how diverse the available school districts are. As you can see in below plot, the available data does not cover all the states in the U.S. (19\/50). The states with the most available school districts are CT (29) and UT (24) while there are also states with only one school district (FL, TN, NY, AZ).","a3f6fe6d":"For the majority of school districts (133) there are 366 unique days available. However, for 43 school districts there are less than 366 unique days of data available. For example for district 3670 there is only data available from 2020-02-15 to 2020-03-02 or for district 2872 there is only data available for January 2020 and then two more single days in Feburary and March.","06d3c541":"<font color='orange'>Splitting up the Primary Essential Function<\/font>","7d459bdf":"Note that at this stage, we have **removed quite a bit of data**. This obviously can lead to loss of information. However, on the other hand this makes the data easier to compare and therefore, it can help us in finding insights more quickly. To summarize, we have removed districts without any information on the location and we have removed districts with incomplete data in 2020.","1cadeded":"The most common category in the column Primary Essential Function is Learning & Curriculum (LC) as shown on the below left figure. For the categories Classroom Management (CM) and School & District Operations (SDO) there are far fewer tool options available. ","f6439f07":"<font color='turquoise'>One-Hot Encoding the Product Sectors<\/font>"}}