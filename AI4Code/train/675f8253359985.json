{"cell_type":{"d44eb38b":"code","4da2e664":"code","217e9ea6":"code","66786f28":"code","f54e0bc7":"code","12f31dc9":"code","4404cf6c":"code","04379e14":"code","ee3edcba":"code","ae3c7239":"code","c58d8063":"code","58cbcff3":"code","4abb0b89":"code","9568c35b":"code","15208bee":"code","ce56ed4a":"code","36a812df":"code","4a3f2a26":"code","835047c8":"code","7b7f6042":"code","c36554cb":"code","141c4b54":"code","6df9786e":"code","d667c640":"code","fd1c058a":"code","30eb39d2":"code","a817dea4":"code","5ed4e17b":"code","e132d779":"code","bef4c013":"code","fddd21d5":"code","989821c7":"markdown","45a463e9":"markdown","fa6a1392":"markdown","3a3514b2":"markdown","4291feb6":"markdown","f75d6db0":"markdown","308032c3":"markdown","27375435":"markdown"},"source":{"d44eb38b":"# for basic mathematics operation \nimport numpy as np\nimport pandas as pd\nfrom pandas import plotting\n\n# for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# for path\nimport os","4da2e664":"dataset_path = '..\/input\/titanic\/'\n\ndf = pd.read_csv(os.path.join(dataset_path, 'train.csv'))\n\nprint(\"The shape of the dataset is {}.\\n\\n\".format(df.shape))\n\ndf.head()","217e9ea6":"df.drop(columns='PassengerId').describe()","66786f28":"df.info()","f54e0bc7":"df_copy = df.copy()","12f31dc9":"# fill empty age rows with mean age value\n\ndf_copy.fillna(df_copy.mean(), inplace=True)","4404cf6c":"df_copy.info()","04379e14":"# drop cabin column as most values are empty\n\ndf_copy.drop(columns=['Cabin'], inplace=True)","ee3edcba":"df_copy.info()","ae3c7239":"# remove empty Embarked rows\n\ndf_copy = df_copy[df_copy['Embarked'].notna()]","c58d8063":"df_copy.info()","58cbcff3":"# count duplicates\n\ndf_copy[df_copy.duplicated()].count()","4abb0b89":"# cast categorical variables\n\ndf_copy['Embarked'] = df_copy.Embarked.astype('category')\n\ndf_copy['Sex'] = df_copy.Sex.astype('category')","9568c35b":"df_copy.info()","15208bee":"#create correlation\ncorr = df_copy.drop(columns='PassengerId').corr(method = 'pearson')\n\ncorr","ce56ed4a":"#convert correlation to numpy array\nmask = np.array(corr)","36a812df":"#to mask the repetitive value for each pair\nmask[np.tril_indices_from(mask)] = False\nfig, ax = plt.subplots(figsize = (15,12))\nfig.set_size_inches(15,15)\nsns.heatmap(corr, mask = mask, vmax = 0.9, square = True, annot = True)","4a3f2a26":"cat_attributes=['Sex','Embarked']\n\nencoded_pd = pd.get_dummies(df_copy, columns=cat_attributes)\n\nprint('Shape of transfomed dataframe::',encoded_pd.shape)\n\nencoded_pd.head()\n\ndf_copy = encoded_pd\n\ndf_copy.head()","835047c8":"from sklearn.model_selection import train_test_split\n\ntrain_df, val_df = train_test_split(df_copy, test_size=0.2, random_state=42)\n\nX_train = train_df.drop(columns=['PassengerId', 'Survived', 'Name', 'Ticket'])\ny_train = train_df['Survived']\n\nX_val = val_df.drop(columns=['PassengerId', 'Survived', 'Name', 'Ticket'])\ny_val = val_df['Survived']","7b7f6042":"from sklearn.ensemble import RandomForestClassifier\n\n# Create an instance of the classifier\nclassifier = RandomForestClassifier(max_depth=2, random_state=0)\n\n# Train the classifier\nclassifier = classifier.fit(X_train, y_train)","c36554cb":"print(\"The accuracy of the classifier on the validation set is \", (classifier.score(X_val, y_val)))","141c4b54":"test_df = pd.read_csv(os.path.join(dataset_path, 'test.csv'))\nprint(\"The shape of the dataset is {}.\\n\\n\".format(test_df.shape))\ntest_df.head()","6df9786e":"test_df.info()","d667c640":"# fill empty age rows with mean age value\n\ntest_df.fillna(test_df.mean(), inplace=True)","fd1c058a":"# drop cabin column as most values are empty\n\ntest_df.drop(columns=['Cabin'], inplace=True)","30eb39d2":"# remove empty Embarked rows\n\ntest_df = test_df[test_df['Embarked'].notna()]","a817dea4":"# cast categorical variables\n\ntest_df['Embarked'] = test_df.Embarked.astype('category')\n\ntest_df['Sex'] = test_df.Sex.astype('category')","5ed4e17b":"#Encoding the categorical features\n\ncat_attributes = ['Sex','Embarked']\n\nencoded_pd = pd.get_dummies(test_df, columns=cat_attributes)\n\nprint('Shape of transfomed dataframe::',encoded_pd.shape)\n\nencoded_pd.head()\n\ntest_df = encoded_pd\n\ntest_df.head()","e132d779":"test_df_pred = test_df.drop(columns =['PassengerId', 'Name', 'Ticket'])","bef4c013":"y_test_predicted = classifier.predict(test_df_pred)\n\ntest_df['Survived'] = y_test_predicted\n\ntest_df","fddd21d5":"test_df[['PassengerId', 'Survived']].to_csv('\/kaggle\/working\/submission.csv', index=False)","989821c7":"### Exploratory Data Analysis","45a463e9":"### Data Splitting","fa6a1392":"#### Heatmap","3a3514b2":"### Submission File Generation","4291feb6":"### Data Cleaning","f75d6db0":"### RandomForestClassifier","308032c3":"#### Encoding the categorical features","27375435":"### Data Visualization"}}