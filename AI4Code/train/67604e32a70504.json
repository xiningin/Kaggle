{"cell_type":{"cb7df1cf":"code","32633003":"code","d841fc6e":"code","5a242262":"code","1a0538f9":"code","8dda7d3f":"code","46a239e7":"code","4402e96d":"code","46d14a98":"code","b26bce4a":"code","960322fc":"code","ce223652":"code","c0de56af":"code","a71a360d":"code","022b3aa5":"code","ec65635e":"code","826b017a":"code","2ad1f9fe":"markdown","3eb39bf1":"markdown","8c9fe747":"markdown","f4bbdaad":"markdown","d9ce6314":"markdown","f39589c9":"markdown","c6ea60b6":"markdown","78892955":"markdown","98ef7dc9":"markdown","c9867c8b":"markdown","eb68d77a":"markdown","cb21ccf7":"markdown","831d40c3":"markdown","37e56ff0":"markdown","44f43d4a":"markdown","1722c3be":"markdown","dc2de454":"markdown"},"source":{"cb7df1cf":"import pandas as pd\nimport numpy as np\nfrom keras import datasets\nfrom keras.utils import np_utils\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom keras import layers, models","32633003":"(X_train, y_train), (X_test, y_test) = datasets.cifar10.load_data() # load datasets","d841fc6e":"fig, axes = plt.subplots(1,10,figsize=(20,10))\nfor i in range(0,10):\n    axes[i].imshow(X_train[i])\nplt.show()","5a242262":"y_train[:10]","1a0538f9":"y_train.shape","8dda7d3f":"y_train = np_utils.to_categorical(y_train)\ny_test = np_utils.to_categorical(y_test)","46a239e7":"X_train.shape","4402e96d":"L, W, H, C = X_train.shape\nX_train = X_train.reshape(-1, W*H*C)\nX_test = X_test.reshape(-1, W*H*C)","46d14a98":"X_train.shape , y_train.shape","b26bce4a":"# Change the X data's range (0 - 255) --> (0 - 1)\nX_train = X_train \/ 255.0\nX_test = X_test \/ 255.0","960322fc":"model = models.Sequential()\nmodel.add(layers.Dense(100, input_shape=X_train[1].shape, activation='relu', name=\"Hidden-1\"))\nmodel.add(layers.Dropout(0))\nmodel.add(layers.Dense(50, activation='relu',name='Hidden-2'))\nmodel.add(layers.Dropout(0))\nmodel.add(layers.Dense(10, activation='softmax'))\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","ce223652":"history = model.fit(X_train, y_train, epochs=10, batch_size=100, validation_split=0.2)","c0de56af":"fig,axes = plt.subplots(1,2, figsize=(15,8))\nfig.suptitle(\"The model 's evaluation \",fontsize=20)\naxes[0].plot(history.history['loss'])\naxes[0].plot(history.history['val_loss'])\naxes[0].set_title('Model Loss')\naxes[0].set_ylabel('Loss')\naxes[0].set_xlabel('Epoch')\naxes[0].legend(['Train','Test'])\n\n\naxes[1].plot(history.history['accuracy'])\naxes[1].plot(history.history['val_accuracy'])\naxes[1].set_title('Model Accuracy')\naxes[1].set_ylabel('Accuracy')\naxes[1].set_xlabel('Epoch')\naxes[1].legend(['Train','Test'])\nplt.show()","a71a360d":"performance_test = model.evaluate(X_test, y_test, batch_size=100)","022b3aa5":"pred = model.predict(X_test)","ec65635e":"def highlight_max(s):\n    '''\n    highlight the maximum in a Series yellow.\n    '''\n    is_max = s == s.max()\n    return ['background-color: yellow' if v else '' for v in is_max]\n\n\npd.DataFrame(pred[:10]).T.style.apply(highlight_max)","826b017a":"X_test_re = X_test.reshape(-1, 32,32,3)\nfig, axes = plt.subplots(1,10,figsize=(20,10))\nfor i in range(0,10):\n    axes[i].imshow(X_test_re[i])\nplt.show()","2ad1f9fe":"# Import Libraries","3eb39bf1":"### We will using keras's datasets : cifar10","8c9fe747":"# Predicting the picture","f4bbdaad":"### X'data : (data's count, width, height, color) -> (data's count, length)\n### y'data : (data's count, number) -> (data's count, categorical data)","d9ce6314":"![](https:\/\/www.researchgate.net\/profile\/Chuan-Lin-3\/publication\/333567419\/figure\/fig4\/AS:765686351671297@1559565260413\/Construction-of-the-deep-neural-network-DNN-model.jpg)","f39589c9":"### This dataset's image size is 32 * 32 * 3, so It's have so bad Accuracy.","c6ea60b6":"### The DNN model predict that \n* 0 - cat\n* 1 - ship\n* 2 - ship\n* 3 - ship\n* 4 - deer\n* 5 - frog\n* 6 - cat\n* 7 - bird\n* 8 - deer\n* 9 - automobile","78892955":"## Change the Data's shape to make model !","98ef7dc9":"# Make DNN model","c9867c8b":"# DNN : Trying DeepLearning using keras!","eb68d77a":"![](https:\/\/miro.medium.com\/max\/1200\/1*iWQzxhVlvadk6VAJjsgXgg.png)\n\n### DNN model has dropout. but I didn't use this time","cb21ccf7":"![](https:\/\/keras.io\/img\/logo-k-keras-wb.png)","831d40c3":"## Try classify the picture by using DNN. ","37e56ff0":"## Look at Data first.","44f43d4a":"### And y data have the number. y data's number mean that \n0. airplane\n1. automobile\n2. bird\n3. cat\n4. deer\n5. dog\n6. frog\n7. horse\n8. ship\n9. truck","1722c3be":"###  The X data have the pictures","dc2de454":"# Evaluating the model"}}