{"cell_type":{"f32029f7":"code","02d48f79":"code","d37e6ff3":"code","41f2f5ba":"code","894e1c12":"code","5cfe2130":"code","d8f949f3":"code","99deea2c":"code","b9806cfe":"code","19a3404c":"code","14884e80":"code","14d9d358":"code","61e6c306":"code","9161499f":"code","219462b5":"code","4b734d9d":"code","31817b85":"code","2f1d237a":"code","9457bae6":"code","4de82b99":"markdown","86086828":"markdown","6c654074":"markdown","427e0a9c":"markdown","8381e3e7":"markdown","97c65c44":"markdown"},"source":{"f32029f7":"#plotly\nimport pandas as pd\nimport numpy as np\n\nimport plotly.offline as py\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nfrom plotly import tools\nimport plotly.figure_factory as ff\n\nimport warnings\nwarnings.filterwarnings('ignore')","02d48f79":"#load information\ndf = pd.read_csv('..\/input\/all_stocks_5yr.csv')\ndf['date'] = pd.to_datetime(df['date'])\ndf.head()","d37e6ff3":"#Explore info\ndf.info","41f2f5ba":"#read data of ADM and AMZN\nADM = df[df.Name=='ADM']\nAMZN = df[df.Name=='AMZN']\n","894e1c12":"#We need to calculate mean and standard deviation in periods of 20 days (It represents monthly info)\n#But with the format we have, we can not because 'date' and 'Name' columns do not have proper format.\nADM.head()","5cfe2130":"ADM.index = ADM['date']\nAMZN.index = AMZN['date']","d8f949f3":"ADM.head()","99deea2c":"#now we remove 'date' and 'Name' columns\nADM = ADM.drop(['Name','date'],axis=1)","b9806cfe":"AMZN = AMZN.drop(['Name','date'],axis=1)","19a3404c":"AMZN.head()","14884e80":"#Now, we create dataframes with sample moving average of 20 days\nADM_SMA = ADM.rolling(window=20).mean()\nAMZN_SMA = AMZN.rolling(window=20).mean()\n","14d9d358":"#Then, we see that during first 20 days we do not have values because the size of each sample\nADM_SMA.head(21)","61e6c306":"#Now, we create plots that reflects behaviour of the mean from each sample in close prices\ntrace_ADM_cl = go.Scatter(x=ADM.index,y=ADM.close,name='ADM close')\ntrace_ADM_cl_mean = go.Scatter(x=ADM_SMA.index,y=ADM_SMA.close,name='ADM 20 days MA')\npy.iplot([trace_ADM_cl,trace_ADM_cl_mean])\n#It seems to me a pretty nice looking graph. You can visualize the evolution of prices along the curve\n#And you can zoom any part you want examine","9161499f":"#We do the same for AMZN\ntrace_AMZN_cl = go.Scatter(x=AMZN.index,y=AMZN.close,name='AMZN close')\ntrace_AMZN_cl_mean = go.Scatter(x=AMZN_SMA.index,y=AMZN_SMA.close,name='AMZN 20 days MA')\npy.iplot([trace_AMZN_cl,trace_AMZN_cl_mean])","219462b5":"#Here we can observe an upward trend of prices of AMAZON while the prices of ADM are tending to be\n#more stable.\n#Let's create two bands with standard deviation:\nup_std_ADM = ADM_SMA[['close']] + 2*ADM_SMA[['close']].rolling(window=20).std()\nlo_std_ADM = ADM_SMA[['close']] - 2*ADM_SMA[['close']].rolling(window=20).std()\n\n#Now we plot Bollinger bands\n\ndrw_std_up = go.Scatter(x=up_std_ADM.index,y=up_std_ADM.close,name='20 MA upper band ADM')\ndrw_std_lo = go.Scatter(x=lo_std_ADM.index,y=lo_std_ADM.close,name='20 MA lower band ADM')\n\npy.iplot([trace_ADM_cl,trace_ADM_cl_mean,drw_std_up,drw_std_lo])\n\n\n\n","4b734d9d":"#And, for AMZN we obtain\nup_std_AMZN = AMZN_SMA[['close']] + 2*AMZN_SMA[['close']].rolling(window=20).std()\nlo_std_AMZN = AMZN_SMA[['close']] - 2*AMZN_SMA[['close']].rolling(window=20).std()\n\n#Now we plot Bollinger bands\n\ndrw_std_up_amzn = go.Scatter(x=up_std_AMZN.index,y=up_std_AMZN.close,name='20 MA upper band AMZN')\ndrw_std_lo_amzn = go.Scatter(x=lo_std_AMZN.index,y=lo_std_AMZN.close,name='20 MA lower band AMZN')\n\npy.iplot([trace_AMZN_cl,trace_AMZN_cl_mean,drw_std_up_amzn,drw_std_lo_amzn])","31817b85":"#We calculate proportion of prices that are above and below of Bollinger band\nabove_adm = ADM[ADM['close'] > up_std_ADM['close']]\nbelow_adm = ADM[ADM['close'] < lo_std_ADM['close']]\nprint(above_adm.shape)\nprint(below_adm.shape)","2f1d237a":"#And the proportion of data out of the band is\nprop_adm = (above_adm.shape[0]+below_adm.shape[0])\/ADM.shape[0]\nprint(prop_adm)","9457bae6":"#For AMZN we have\nabove_amzn = AMZN[AMZN['close'] > up_std_AMZN['close']]\nbelow_amzn = AMZN[AMZN['close'] < lo_std_AMZN['close']]\nprop_amzn = (above_amzn.shape[0]+below_amzn.shape[0])\/AMZN.shape[0]\nprint(prop_amzn)","4de82b99":"# Bollinger bands \n\n I'v decided to extract some data related with the value of closing prices for two companies from this index SP500. It \n refers  to  ADM (Archer Daniels Midlands) whose prices are around  30-50 dollars and AMZN (Amazon) whose prices are considerably greater than ADM ones. \n# Objective: \n## I would like to verify some theorical aspects about Bollinger bands from page of investopedia. I extract information from two companies and work with that.\n\nLink:\nhttps:\/\/www.investopedia.com\/terms\/b\/bollingerbands.asp","86086828":"If we select from the plot periods with great volatity, for example,  between Jul 2014 - Mar 2015 , we notice that despite some prices are not between the bands, the bands are widen  considerably. \nOn the other hand, if we examine Bollinger bands for example in May 5 of 2013, we can verify that when bands are coming close, it can be considered that in future, volatility will be considerably greater.","6c654074":"I want to introduce a very useful tool for plotting: plotly","427e0a9c":"Now, as we can observe from plots, we notice that proportion of data that is out of the band of ADM closing prices, was greater than AMZN one. \nTheory says that approximately 90% of price action occurs between the two bands. Let's see if this is the truth for our data and we compare proportion between two companies.","8381e3e7":"We realize the same information as stated above, if we observe periods like Nov 2015 and May 2016 for AMZN.","97c65c44":"We evidently observe that data between the bands is far from being 90%. In fact,  we realize that monthly information (20 days) seems to be a reliable moving average data for using Bollinger bands. May be it happens because the movement of the curve was not explained for any stochastic  process with normal distribution."}}