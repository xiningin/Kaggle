{"cell_type":{"14e02338":"code","38d3e35d":"code","77193690":"code","b8387e0e":"code","95a50593":"code","16f5442a":"code","7fb376ef":"code","7ccf0816":"code","67918edf":"markdown","0b6b4982":"markdown","717bdc49":"markdown","f5cbc253":"markdown","982f491d":"markdown"},"source":{"14e02338":"!git clone https:\/\/github.com\/henrique\/jigsaw20.git\n\nimport sys\nsys.path.append('\/kaggle\/working\/jigsaw20')","38d3e35d":"import numpy as np\nimport pandas as pd\nfrom train import train\n\nparams = dict(\n    pooling='first',\n    optimizer='LAMB',\n    batch_size=27,\n    lr=0.000277952,\n    mom_min=0.806579,\n    mom_max=0.922184,\n    div_factor=55.477,\n    final_div_factor=1123.49,\n    weight_decay=7.72285e-06,\n    dropout=0.4,\n    loss_fn='bce',\n    label_smoothing=0.0483175,\n    warm_up=1.2361,\n    epochs=41,\n    steps_per_epoch=250,\n    dataset='..\/input\/jigsaw20-ds-tt6-36\/jigsaw20_ds1789117tt6_fold5.npz',\n    path=f'jigsaw',\n    tpu_id=None, gcs=None,\n    seed=1083,\n)\n\n# auc = train(**params)","77193690":"# clean up repo\n!rm -r jigsaw20","b8387e0e":"!cp \/kaggle\/input\/jigsaw-tt6f5-20200614-091231-val0-965669\/* .\n!ls -shS","95a50593":"from matplotlib import pyplot as plt\n_ = pd.read_csv('submission.csv').toxic.hist(bins=100, log=True, alpha=0.6)\n_ = pd.read_csv('valid_oof.csv').groupby('toxic').pred.hist(bins=100, log=True, alpha=0.5)\nplt.legend(['test', 'val0-normal', 'val1-toxic'])\n\npd.read_csv('history.csv')","16f5442a":"pd.read_csv('params0.965669.csv').T","7fb376ef":"sub = pd.read_csv('submission.csv')\ntest = pd.read_csv('..\/input\/jigsaw-multilingual-toxic-comment-classification\/test.csv')\n\nsub.loc[test[\"lang\"] == \"es\", \"toxic\"] *= 1.06\nsub.loc[test[\"lang\"] == \"fr\", \"toxic\"] *= 1.04\nsub.loc[test[\"lang\"] == \"it\", \"toxic\"] *= 0.97\nsub.loc[test[\"lang\"] == \"pt\", \"toxic\"] *= 0.96\nsub.loc[test[\"lang\"] == \"tr\", \"toxic\"] *= 0.98\n# min-max norm\nsub.toxic -= sub.toxic.min()\nsub.toxic \/= sub.toxic.max()\nsub.toxic.hist(bins=100, log=True, alpha=0.6)\n\nsub.to_csv('submission0.csv', index=False)","7ccf0816":"ensemble = pd.read_csv('..\/input\/jigsaw20xiwuhanjmtc2ndplacesolution\/submission.csv')\n\n# min-max norm\nensemble.toxic -= ensemble.toxic.min()\nensemble.toxic \/= ensemble.toxic.max()\n\nensemble.toxic.hist(bins=100, log=True, alpha=0.6)\nsub.toxic.hist(bins=100, log=True, alpha=0.6)\n\nensemble.toxic = ensemble.toxic * 0.8 + sub.toxic * 0.2\nensemble.to_csv('submission.csv', index=False)","67918edf":"# XLM-R with pseudo labels and knowledge distillation\n\nThis is regular XLM-R trained on 1\/6th of the full translated training data as well as on the test data, with pseudo labels blended with the original labels (on the training data). LAMB optimizer and 1 cycle schedule policy.\n\nThe hyper-parameters come from a somewhat extensive search using GCP (Many thanks for google TFRC team and their support!)","0b6b4982":"# Ensemble with best submission\nhttps:\/\/www.kaggle.com\/xiwuhan\/jmtc-2nd-place-solution","717bdc49":"Code repo: https:\/\/github.com\/henrique\/jigsaw20","f5cbc253":"# Apply language multipliers\n\nas in https:\/\/www.kaggle.com\/c\/jigsaw-multilingual-toxic-comment-classification\/discussion\/160980\n\nThanks @christofhenkel this improves our public LB from [0.9475](https:\/\/www.kaggle.com\/hmendonca\/jigsaw20-xlm-r-lb0-9487-singel-model?scriptVersionId=37240126) to [0.9487](https:\/\/www.kaggle.com\/hmendonca\/jigsaw20-xlm-r-lb0-9487-singel-model?scriptVersionId=37241954) !!","982f491d":"# Load pre-trained weights and stats"}}