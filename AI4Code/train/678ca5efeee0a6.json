{"cell_type":{"145b9280":"code","82ace03e":"code","5a9b7104":"code","716d019a":"code","0c194fa8":"code","ff51d2af":"code","0a1880d3":"code","9adf7a87":"code","bacd4642":"code","1c186156":"code","b16112b1":"code","0b886f14":"code","f6205912":"code","1422829c":"markdown","cbc24b98":"markdown","3303898b":"markdown","27d53f38":"markdown","e38b60f7":"markdown","f0d58d13":"markdown"},"source":{"145b9280":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","82ace03e":"df = pd.read_excel('\/kaggle\/input\/covid19\/dataset.xlsx')\ndf.head(5)","5a9b7104":"df_cleaned = pd.concat([df['Patient ID'], df['Patient age quantile'], df['Eosinophils'], df['Leukocytes'], df['Hematocrit'], df['Hemoglobin'], df['Platelets'], df['SARS-Cov-2 exam result']], axis = 1)\ndf_cleaned.head(5)","716d019a":"    # rename columns\n    df_cleaned.columns = ['id', 'age', 'eos', 'leu', 'hct', 'hb', 'pt', 'covid']\n    df_cleaned.head(5)","0c194fa8":"# encode DV\nfrom sklearn import preprocessing\nle = preprocessing.LabelEncoder()\ndf_cleaned2 = df_cleaned\n# Fit the encoder to the pandas column\\n\",\nle.fit(df_cleaned2['covid'])\ndf_cleaned2['covid'] = le.transform(df_cleaned2['covid'])\ndf_cleaned2.head(5)","ff51d2af":"df_cleaned2.fillna(df_cleaned2.mean(), inplace=True)\n#df_cleaned2.dtypes\ndf_cleaned2['covid'] = df_cleaned2['covid'].astype('bool')\ndf_cleaned2.to_csv('\/tmp\/qrmine-quan.csv', index = False)\ndf_cleaned2.head(5)\n","0a1880d3":"!pip install qrmine==3.4.0","9adf7a87":"!pip install scikit-learn==0.22.0\n","bacd4642":"from qrmine import MLQRMine\n","1c186156":"ml = MLQRMine()\nml.csvfile = \"\/tmp\/qrmine-quan.csv\"\nml.read_csv()\nml.epochs = 5\nml.prepare_data(True)  # Oversample\nml.get_nnet_predictions()\nprint(\"\\n%s: %.2f%%\" % (ml.model.metrics_names[1], ml.get_nnet_scores()[1] * 100))","b16112b1":"knn = ml.knn_search(3, 3)\nfor n in knn:\n    print(n)","0b886f14":"ml.get_pca(3)\n","f6205912":"ml.prepare_data()\nml.get_kmeans(3)","1422829c":"## [QRMine](https:\/\/arxiv.org\/abs\/2003.13519v1) is for triangulation (combining qualitative and quantitative data for sensemaking). See the qualitative analysis [here](https:\/\/www.kaggle.com\/beapen\/qrmine-for-covid-19-part-1)\n\n* By [Bell Eapen](https:\/\/nuchange.ca)","cbc24b98":"# Do a PCA","3303898b":"# Check the accuracy of a NN model","27d53f38":"# The last one is the DV and must be binary","e38b60f7":"# Create 3 clusters and see the profile","f0d58d13":"**COVID-19 quantiitative analysis using QRMine - Part 2** [See Part 1](https:\/\/www.kaggle.com\/beapen\/qualitative-analysis-of-covid-19)\n\n> QRMine \/\u02c8k\u00e4rm\u012bn\/ is a suite of qualitative research (QR) data mining tools in Python using Natural Language Processing (NLP) and Machine Learning (ML).\n\nCite QRMine: [Full Text](https:\/\/arxiv.org\/abs\/2003.13519v1)\n\n```\n@article{eapenbr2019qrmine,\n  title={QRMine: A python package for triangulation in Grounded Theory},\n  author={Eapen, Bell Raj and Archer, Norm and Sartpi, Kamran},\n  journal={arXiv preprint arXiv:2003.13519 },\n  year={2020}\n}\n\n```"}}