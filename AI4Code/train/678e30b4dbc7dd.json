{"cell_type":{"f035673b":"code","83b0a9c6":"code","5c8834f0":"code","86a55363":"code","1e198fef":"code","82a2534e":"code","c4f5a65a":"code","53a7ad9a":"code","97bd7ffd":"code","be6c8d98":"code","3522ff1d":"code","03c8d43a":"code","c464d037":"code","1ba1b960":"code","16b7ff50":"code","d3c4e0f8":"code","2e9f1eb1":"code","cf40c1cb":"code","7a02ae45":"code","fb916763":"markdown","027d4fce":"markdown","2c6746b8":"markdown"},"source":{"f035673b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","83b0a9c6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nplt.style.use('ggplot')","5c8834f0":"df = pd.read_csv(\"\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\")\ndf.head()","86a55363":"df.columns","1e198fef":"df.isna().any()","82a2534e":"df = df.fillna(0)","c4f5a65a":"df1 = df.copy()","53a7ad9a":"df.info()","97bd7ffd":"X  = df.drop(['sl_no', 'gender', 'ssc_b', 'hsc_b', 'hsc_s',\n       'degree_p', 'degree_t', 'workex', 'etest_p', 'specialisation', 'mba_p',\n       'status', 'salary'], axis = 1)\ny= df['mba_p']","be6c8d98":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 43)","3522ff1d":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","03c8d43a":"from sklearn.linear_model import LinearRegression\nclassifier = LinearRegression()\nclassifier.fit(X_train, y_train)","c464d037":"y_pred = classifier.predict(X_test)\n","1ba1b960":"df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf","16b7ff50":"from sklearn import metrics\nfrom sklearn.metrics import r2_score\n","d3c4e0f8":"\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred).round(3))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred).round(3))  \nprint('Root Mean Squared:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)).round(3))\nprint('r2_score:', r2_score(y_test, y_pred).round(3))","2e9f1eb1":"X  = df1.drop(['sl_no', 'gender', 'ssc_b', 'hsc_b', 'hsc_s','degree_t', 'workex', 'etest_p', 'specialisation', 'mba_p','status', 'salary'], axis = 1)\ny= df1['mba_p']","cf40c1cb":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 43)\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\nfrom sklearn.linear_model import LinearRegression\nclassifier = LinearRegression()\nclassifier.fit(X_train, y_train)\ny_pred = classifier.predict(X_test)\nresult = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\nresult.head()","7a02ae45":"from sklearn import metrics\nfrom sklearn.metrics import r2_score\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred).round(3))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred).round(3))  \nprint('Root Mean Squared:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)).round(3))\nprint('r2_score:', r2_score(y_test, y_pred).round(3))","fb916763":"# Don't forget to vote. Thanks","027d4fce":"# Task 2\n(ii)  Build a regression model with mbap as dependent variable and sscp, hscp and degree_p as three independent variables. Divide the dataset in the ratio of 80:20 for train and test set (set seed as 1001) and use the train set to build the model. Show the model summary and interpret the p-values of the regression coefficients. Remove any insignificant variables and rebuild the model. Use this model for prediction on the test set and show the first few observations\u2019 actual value of the test set in comparison to the predicted value.","2c6746b8":"# Task 1\n1) Develop an estimated multiple linear regression equation with mbap as response variable and sscp & hscp as the two predictor variables. Interpret the regression coefficients and check whether they are significant based on the summary output 2) Estimate a multiple regression equation for each of the below scenarios and based on the model\u2019s R-square comment which model is better. (i) Use mbap as outcome variable and sscp & degreep as the two predictor variables."}}