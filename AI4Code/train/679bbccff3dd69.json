{"cell_type":{"99411e78":"code","5dab1d98":"code","3d57031e":"code","90ee5715":"code","f51415c2":"code","20059fe9":"code","656d2bf5":"code","5468e263":"code","6b0da1ef":"code","ed8ff9cb":"code","710480e8":"code","0c861bc6":"code","fdea4312":"code","8a7cde86":"code","0821574a":"code","e080ae58":"code","85070d74":"markdown"},"source":{"99411e78":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.pipeline import make_pipeline, TransformerMixin, make_union\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.decomposition import TruncatedSVD\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.linear_model import RidgeClassifier\n\nfrom nltk.tokenize import casual_tokenize","5dab1d98":"SEED = 1337\nnp.random.seed(SEED)","3d57031e":"train_df = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/test.csv\")","90ee5715":"train_df.shape, test_df.shape","f51415c2":"train_df.head()","20059fe9":"train_df.target.value_counts()","656d2bf5":"class Centerer(TransformerMixin):\n    \n    def __init__(self):\n        self.mean = None\n    \n    def fit(self, X, y=None):\n        self.mean = X.mean(axis=0)\n        return self\n        \n    def transform(self, X, y=None):\n        return X - self.mean","5468e263":"nb = MultinomialNB()","6b0da1ef":"tfidf = TfidfVectorizer(tokenizer=casual_tokenize)","ed8ff9cb":"class TransformerMultinomialNB(MultinomialNB, TransformerMixin):\n    def transform(self, X, y=None):\n        return self.predict_proba(X)\n    \nclass TransformerLDA(LDA, TransformerMixin):\n    def transform(self, X, y=None):\n        return self.predict_proba(X)","710480e8":"lda_lsa_pipe = make_pipeline(    \n    Centerer(),\n    TruncatedSVD(n_components=64, n_iter=100, random_state=SEED),\n    TransformerLDA(n_components=1)\n)","0c861bc6":"pipe = make_pipeline(\n    TfidfVectorizer(tokenizer=casual_tokenize),\n    make_union(TransformerMultinomialNB(), lda_lsa_pipe),\n    RidgeClassifier()\n)","fdea4312":"# scores = cross_val_score(pipe, train_df.text, train_df.target, cv=3, scoring=\"f1\")\n# scores.mean().round(3)","8a7cde86":"pipe.fit(train_df.text, train_df.target)","0821574a":"test_df['target'] = pipe.predict(test_df.text)","e080ae58":"test_df[['id', 'target']].to_csv(\"submission.csv\", index=False)","85070d74":"# Basic model using classic NLP approach\n\nThis model is based on Latent Semantic Analysis (`TruncatedSVD`) and Linear Discriminant Analysis. Also uses `casual_tokenize` tokenizer from NLTK."}}