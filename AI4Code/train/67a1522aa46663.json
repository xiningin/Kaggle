{"cell_type":{"1d39cf42":"code","eeb77b41":"code","8becaa41":"code","f94a3d6f":"code","a92190ac":"code","d601b02b":"code","fe5ba54f":"code","ece05dee":"code","774ead45":"code","88443423":"code","7d1a9a35":"code","a1558f4e":"code","d26be4cf":"code","69203e2c":"code","20555b92":"code","01c3bb4e":"code","927c0e07":"code","dfa5ef2a":"code","e970527d":"code","cb6a3a2f":"code","ce81963c":"code","d2133085":"code","bfe23d2b":"code","fc765750":"code","c222be81":"code","5fb98d7d":"code","3f232aa0":"code","29debb4d":"code","229b3f18":"code","27461993":"code","02c83824":"code","aeea2607":"code","9d350155":"markdown","0d699dc1":"markdown","22839d3e":"markdown","66e05b8e":"markdown","f690406a":"markdown","c95ec72e":"markdown","6ce289d9":"markdown","578e5d07":"markdown","da439d43":"markdown","91eb889b":"markdown","e420eff1":"markdown","00ad7862":"markdown","7129172f":"markdown","8a144723":"markdown","1dba412a":"markdown","78e73271":"markdown","2aa37073":"markdown","9d4af8b8":"markdown"},"source":{"1d39cf42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eeb77b41":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn.decomposition import PCA\nfrom sklearn.pipeline import make_pipeline","8becaa41":"df = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")\ndf.head()","f94a3d6f":"df.info()","a92190ac":"df.isnull().sum()","d601b02b":"df.shape","fe5ba54f":"df.describe().T","ece05dee":"sns.pairplot(df, kind=\"reg\")","774ead45":"df.Year.astype(\"object\")\nplt.figure(figsize=(18,6))\nsns.barplot(x = \"Year\", y = \"NA_Sales\", data=df)\nplt.xticks(rotation=90);","88443423":"plt.figure(figsize=(18,6))\nsns.barplot(x = \"Year\", y = \"EU_Sales\", data=df)\nplt.xticks(rotation=90);","7d1a9a35":"plt.figure(figsize=(18,6))\nsns.barplot(x = \"Year\", y = \"JP_Sales\", data=df)\nplt.xticks(rotation=90);","a1558f4e":"plt.figure(figsize=(18,6))\nsns.barplot(x = \"Year\", y = \"Global_Sales\", data=df)\nplt.xticks(rotation=90);","d26be4cf":"sns.barplot(x = \"Genre\", y = \"Global_Sales\", data=df)\nplt.xticks(rotation=90);","69203e2c":"df.drop([\"Rank\",\"Year\"], axis = 1, inplace=True)","20555b92":"df.Name.value_counts()","01c3bb4e":"print(len(df.Platform.value_counts()))\ndf.Platform.value_counts()","927c0e07":"df.Genre.value_counts()","dfa5ef2a":"len(df.Publisher.value_counts())\ndf.Publisher.value_counts()","e970527d":"df.drop([\"Name\", \"Publisher\"], axis = 1, inplace=True)","cb6a3a2f":"df.head()","ce81963c":"dms = pd.get_dummies(df[[\"Platform\",\"Genre\"]])\ndms","d2133085":"dms.drop([\"Platform_2600\",\"Genre_Fighting\"], axis = 1, inplace=True)","bfe23d2b":"df_2 = pd.concat([df,dms], axis=1)\ndf_2.head()","fc765750":"df_2.drop([\"Platform\",\"Genre\"], axis=1, inplace=True)","c222be81":"df_2.head()","5fb98d7d":"X = df_2.drop(\"Global_Sales\", axis=1)\ny = df[\"Global_Sales\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","3f232aa0":"rf = RandomForestRegressor().fit(X_train, y_train)","29debb4d":"r2_score(y_test, rf.predict(X_test))","229b3f18":"importance = pd.DataFrame({\"Importance\": rf.feature_importances_*100},\n                         index=X_train.columns)\n\nimportance.sort_values(by = \"Importance\", axis=0, ascending=True).iloc[:10,:10].plot(kind=\"barh\",figsize=(14,6))","27461993":"pipe = make_pipeline(PCA(n_components=3),rf).fit(X_train,y_train)\nprint(r2_score(y_test, pipe.predict(X_test)))\nprint(np.sqrt(mean_squared_error(y_test, pipe.predict(X_test))))","02c83824":"rf = RandomForestRegressor()\nrf_params = {\"n_estimators\":[100,200,500],\n            \"max_depth\":[10,15,20],\n            \"min_samples_split\":[2,5,10]}\ngrid = GridSearchCV(rf, rf_params, cv=10, n_jobs=-1, verbose=2)\npipe = make_pipeline(PCA(n_components=3),grid)\npipe.fit(X_train,y_train)","aeea2607":"print(r2_score(y_test, pipe.predict(X_test)))\nprint(np.sqrt(mean_squared_error(y_test, pipe.predict(X_test))))\ngrid.best_params_","9d350155":"In these categorical values we will use **platform** and **genre**. Because of that we will drop **name** and **publisher**.","0d699dc1":"### Dropping Categorical Values","22839d3e":"Firstly we gave dropping values in drop function. With **axis = 1** parameter we state that the drop will be made on a column basis. With **inplace = True** parameter we ensure that the process is applied to the data set permanently. ","66e05b8e":"Then we concat df and dms.","f690406a":"### Encoding Categorical Values","c95ec72e":"After this we do not need plotform and genre categorical values so we can drop them.","6ce289d9":"## Categorical Values","578e5d07":"We will use pandas's get_dummies function for this.This operation writes all values \u200b\u200bin the variable as 0 and 1 and creates separate columns for each.","da439d43":"Our data has eleven columns and 16598 rows. ","91eb889b":"# Data Visualization","e420eff1":"# Examine The Data","00ad7862":"## Dropping Unnecessary Features","7129172f":"After this process if we look at data name and publisher column will remain.","8a144723":"## Model Tuning","1dba412a":"In dataset we have 4 categorical values. These are name, platform, genre, publisher. ","78e73271":"# Machine Learning Model","2aa37073":"The features **rank** and **year** will not be used, so we can drop them.","9d4af8b8":"After this process, a dummy variable is created for platform and genre features. Because of that we drop a column for each of them."}}