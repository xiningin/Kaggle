{"cell_type":{"ecf1e579":"code","a81a0f9c":"code","bf507326":"code","86cd0935":"code","e9f3b1bf":"code","53accbf9":"code","325e83d3":"code","476d4e16":"code","2d4be570":"code","f9f90931":"code","a2f8b2cb":"code","130ff8dd":"code","5304f439":"code","965b9dc0":"code","64c964ea":"code","e159f301":"code","eedd6194":"code","7aa124c8":"code","69f5ebda":"code","d87004ce":"code","1ffd9134":"code","cbd38e25":"code","a545a23e":"code","1fe9d69c":"code","2d97b9a3":"code","46059f20":"code","dd92b75b":"code","07138db4":"code","aef87bb6":"code","9ee96095":"code","951d45d6":"code","df86aef1":"code","d07f91b4":"code","9eaeb370":"code","b9fc867a":"code","1085d21f":"code","aef6fee2":"code","c236972d":"code","e804e88d":"code","3e5af6da":"code","6cf345f1":"code","f5a4cdef":"code","f0c96985":"code","71aa9f28":"code","264bad17":"code","19b5c98d":"code","2f2c44df":"code","9a14a205":"markdown","9911bc74":"markdown","6781ab6e":"markdown","d61b9f94":"markdown","379d0a01":"markdown","6ac16a7b":"markdown","9ec829f2":"markdown","ae5afefd":"markdown","4a7d4e13":"markdown","c4087283":"markdown","e3d9589b":"markdown","b1934fbf":"markdown","73bed5e5":"markdown","1857f6f9":"markdown","94c0664d":"markdown","823ace7a":"markdown"},"source":{"ecf1e579":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a81a0f9c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","bf507326":"sns.set(rc={'figure.figsize':(8,6)})","86cd0935":"df = pd.read_csv(\"\/kaggle\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv\")","e9f3b1bf":"pd.set_option('max_colwidth', 256)\npd.set_option('display.max_rows', 1000)\npd.set_option('display.max_columns', 1000)","53accbf9":"df.head()","325e83d3":"df['Churn'].replace(to_replace='Yes', value=1, inplace=True)\ndf['Churn'].replace(to_replace='No',  value=0, inplace=True)","476d4e16":"df","2d4be570":"y = df['Churn']","f9f90931":"df.isnull().sum()","a2f8b2cb":"sns.pairplot(df)","130ff8dd":"sns.barplot(x=\"SeniorCitizen\",y=\"Churn\",hue=\"gender\",data=df)","5304f439":"sns.barplot(x=\"SeniorCitizen\",y=\"Churn\",hue=\"PhoneService\",data=df)","965b9dc0":"sns.barplot(x=\"SeniorCitizen\",y=\"Churn\",hue=\"InternetService\",data=df)\nplt.legend(loc='center left', bbox_to_anchor=(1.00, 0.5), ncol=1)","64c964ea":"sns.barplot(x=\"SeniorCitizen\",y=\"Churn\",hue=\"OnlineSecurity\",data=df)\nplt.legend(loc='upper left')","e159f301":"sns.barplot(x=\"SeniorCitizen\",y=\"Churn\",hue=\"DeviceProtection\",data=df)","eedd6194":"print(\"most important features relative to target\")\ncorr = df.corr()\ncorr.sort_values(['Churn'], ascending=False, inplace=True)\ncorr.Churn","7aa124c8":"sns.heatmap(corr,annot=True)","69f5ebda":"sns.violinplot(y=\"tenure\",x=\"gender\",hue=\"Churn\",data=df)","d87004ce":"sns.boxplot(y=\"MonthlyCharges\",x=\"gender\",hue=\"Churn\",data=df,width=0.6)\nplt.legend(loc='center left', bbox_to_anchor=(1.00, 0.5), ncol=1)","1ffd9134":"df['Partner'].replace(to_replace='Yes', value=1, inplace=True)\ndf['Partner'].replace(to_replace='No',  value=0, inplace=True)\ndf['Partner'] = pd.to_numeric(df['Partner'])","cbd38e25":"df['Dependents'].replace(to_replace='Yes', value=1, inplace=True)\ndf['Dependents'].replace(to_replace='No',  value=0, inplace=True)\ndf['Dependents'] = pd.to_numeric(df['Dependents'])","a545a23e":"df['PhoneService'].replace(to_replace='Yes', value=1, inplace=True)\ndf['PhoneService'].replace(to_replace='No',  value=0, inplace=True)\ndf['PhoneService'] = pd.to_numeric(df['PhoneService'])","1fe9d69c":"df['OnlineSecurity'].value_counts()","2d97b9a3":"df['PaperlessBilling'].replace(to_replace='Yes', value=1, inplace=True)\ndf['PaperlessBilling'].replace(to_replace='No',  value=0, inplace=True)\ndf['PaperlessBilling'] = pd.to_numeric(df['PaperlessBilling'])","46059f20":"df.head()","dd92b75b":"df1 = df.copy()","07138db4":"df1","aef87bb6":"df1.drop(columns='customerID',inplace=True)","9ee96095":"df1['MonthlyCharges'] = pd.to_numeric(df1['MonthlyCharges'])","951d45d6":"df1.drop(columns='TotalCharges',inplace=True)","df86aef1":"cols = df1.columns\nnum_cols = df1._get_numeric_data().columns\nnum_cols\ncol_list = list(set(cols) - set(num_cols))\ncol_list","d07f91b4":"df1 = pd.get_dummies(df1, columns = ['TechSupport',\n 'OnlineSecurity',\n 'StreamingTV',\n 'StreamingMovies',\n 'Contract',\n 'DeviceProtection',\n 'PaymentMethod',\n 'InternetService',\n 'OnlineBackup',\n 'MultipleLines',\n 'gender'],drop_first = True)","9eaeb370":"df1.head()","b9fc867a":"X = df1.iloc[:].values","1085d21f":"X","aef6fee2":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","c236972d":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nclassifier.fit(X_train, y_train)","e804e88d":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_kpred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_kpred)\nprint(cm)\naccuracy_score(y_test, y_kpred)","3e5af6da":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)","6cf345f1":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_rpred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_rpred)\nprint(cm)\naccuracy_score(y_test, y_rpred)","f5a4cdef":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'rbf', random_state = 0)\nclassifier.fit(X_train, y_train)","f0c96985":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_spred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_spred)\nprint(cm)\naccuracy_score(y_test, y_spred)","71aa9f28":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'linear', random_state = 0)\nclassifier.fit(X_train, y_train)","264bad17":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_slpred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_slpred)\nprint(cm)\naccuracy_score(y_test, y_slpred)","19b5c98d":"from sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)","2f2c44df":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_dpred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_dpred)\nprint(cm)\naccuracy_score(y_test, y_dpred)","9a14a205":"## prediction using SVC kernel non linear","9911bc74":"## we can see people with Fiber optics Internet service likely to churn than others","6781ab6e":"## This Barplot shows that female senior citizen likely to churn ","d61b9f94":"## Exploratory Data Analysis and Data Visualization","379d0a01":"### splitting data into test and train","6ac16a7b":"## prediction using SVC Linear kernel","9ec829f2":"## One hot encoding","ae5afefd":"### churn prediction mostly depends on Monthly charges and whether they are senior citizen or not","4a7d4e13":"## Most Related Feature for prediction","c4087283":"## Prediction using Random Forest Classifier","e3d9589b":"## Data Cleaning","b1934fbf":"## Checking for null values","73bed5e5":"## reading the data","1857f6f9":"## Prediction using KNN ","94c0664d":"## Prediction using Decision Tree Classifier","823ace7a":"## importing the libraries"}}