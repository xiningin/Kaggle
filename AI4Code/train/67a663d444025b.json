{"cell_type":{"a23953f5":"code","ec2b5719":"code","32333381":"code","34ee91c9":"code","6cbe5c70":"code","bbfa3bcb":"code","fe5737da":"code","d24f7c3c":"code","8ff0c1e7":"code","7e06ff14":"code","4ade9db8":"code","fd8ae277":"code","ef27d4d9":"markdown","5d6e4204":"markdown","d9bd70df":"markdown","79c607e0":"markdown","430d1d38":"markdown","67780c62":"markdown","40d8bb0c":"markdown"},"source":{"a23953f5":"import tensorflow as tf\nimport os\nimport numpy as np\nfrom tensorflow.keras.utils import to_categorical\n\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\nif not os.path.isdir('models'):\n    os.mkdir('models')\n    \nprint('TensorFlow version:', tf.__version__)\nprint('Is using GPU?', tf.test.is_gpu_available())","ec2b5719":"(x_train,y_train), (x_test,y_test) = tf.keras.datasets.fashion_mnist.load_data()\n\nprint(x_train.shape, y_train.shape)\nprint(x_test.shape, y_test.shape)","32333381":"y_train[0:10]","34ee91c9":"class_names = 'T-shirt\/top Trouser Pullover Dress Coat Sandal Shirt Sneaker Bag Ankle boot'.split(' ')\n\ndef show_random_examples(x,y,p):\n  indices = np.random.choice(range(x.shape[0]),10,replace = False)\n\n  x = x[indices]\n  y = y[indices]\n  p = p[indices]\n  x = x.reshape(x.shape[0],28,28)\n\n  plt.figure(figsize=(10,5))\n  for i in range(10):\n    plt.subplot(2,5,1+i)\n    plt.imshow(x[i],cmap = 'gray')\n    plt.xticks([])\n    plt.yticks([])\n    col = 'green' if np.argmax(y[i]) == np.argmax(p[i]) else 'red'\n    plt.xlabel(class_names[np.argmax(p[i])] , color = col,fontsize = 20)\n  plt.show()","6cbe5c70":"show_random_examples(x_train, y_train, y_train)","bbfa3bcb":"show_random_examples(x_test, y_test, y_test)","fe5737da":"from tensorflow.keras.layers import Conv2D, MaxPooling2D, BatchNormalization\nfrom tensorflow.keras.layers import Dropout, Flatten, Input, Dense\n\ndef create_model():\n  def add_conv_block(model, num_filters):\n    model.add(Conv2D(num_filters,3,activation='relu', padding = 'same'))\n    model.add(BatchNormalization())\n    model.add(Conv2D(num_filters,3, activation= 'relu'))\n    model.add(MaxPooling2D(pool_size=2))\n    model.add(Dropout(0.25))\n    return model\n  \n  model = tf.keras.models.Sequential()\n  model.add(Input(shape=(28,28,1)))\n\n  model = add_conv_block(model, 32)\n  model = add_conv_block(model, 64)\n  model = add_conv_block(model, 128)\n\n  model.add(Flatten())\n  model.add(Dense(128, activation=\"relu\"))\n  model.add(Dense(10,activation = 'softmax'))\n\n  model.compile(\n      loss = 'categorical_crossentropy',\n      optimizer = 'adam', metrics = ['accuracy']\n  )\n  return model\n\nmodel = create_model()\nmodel.summary()\n\n","d24f7c3c":"x_train   = x_train.reshape(-1,28,28,1)\nx_test    = x_test.reshape(-1,28,28,1)\ny_train   = to_categorical(y_train, num_classes = 10)\ny_test    = to_categorical(y_test, num_classes = 10)","8ff0c1e7":"h = model.fit(\n    x_train\/255.,y_train,\n    validation_data = (x_test\/255.,y_test),\n    epochs=20,batch_size=32,\n#     callbacks=[\n#                tf.keras.callbacks.EarlyStopping(monitor='val_accuracy',patience=3),\n#                tf.keras.callbacks.ModelCheckpoint(\n#                    'models\/model_{val_accuracy:.3f}.h5',\n#                    svae_best_only=True,save_weights_only=False,\n#                    monitor='val_accuracy'\n#                )\n#     ]\n)","7e06ff14":"accs = h.history['accuracy']\nval_accs = h.history['val_accuracy']\n\nplt.plot(range(len(accs)),accs, label = 'Training')\nplt.plot(range(len(accs)), val_accs, label = 'Validation')\nplt.legend()\nplt.show()","4ade9db8":"preds = model.predict(x_test\/255.)","fd8ae277":"show_random_examples(x_test,y_test,preds)","ef27d4d9":"<a id=\"Task2\"><\/a>\n### Task 2: Preprocess Data","5d6e4204":"# Image Classification with CNN using Keras\n### MNIST-Fashion dataset\n* [Task 1: Import Libraries](#Task1)\n* [Task 2: Preprocess Data](#Task2)\n* [Task 3: Visualize Examples](#Task3)\n* [Task 4: Create Model](#Task4)\n* [Task 5: Train the Model](#Task5)\n* [Task 6: Final Predictions](#Task6)","d9bd70df":"<a id=\"Task6\"><\/a>\n### Task 6: Final Predictions","79c607e0":"<a id=\"Task1\"><\/a>\n### Task 1: Import Libraries","430d1d38":"<a id=\"Task5\"><\/a>\n### Task 5: Train the Model","67780c62":"<a id=\"Task3\"><\/a>\n### Task 3: Visualize Examples","40d8bb0c":"<a id=\"Task4\"><\/a>\n### Task 4: Create Model"}}