{"cell_type":{"2dd3006d":"code","6a342434":"code","d388be7e":"code","f2dd0529":"code","3919e170":"code","b1307761":"code","015456b1":"code","e362ec91":"code","1b953f53":"code","64d762df":"code","4d16b9b3":"code","e1a22f1e":"code","3fa5632d":"code","4cfa7066":"code","bc8d3310":"code","1f06696c":"code","d91c45f2":"markdown"},"source":{"2dd3006d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis,QuadraticDiscriminantAnalysis\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LogisticRegression","6a342434":"train_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data  = pd.read_csv('..\/input\/titanic\/train.csv')","d388be7e":"train_data.head()","f2dd0529":"train_data.info()","3919e170":"train_data.describe()","b1307761":"train_data.info()","015456b1":"np.sum(train_data.isna())","e362ec91":"# Missing data in traning set\ntrain_data.isnull().sum().sort_values(ascending = False)","1b953f53":"train_data[['Sex','Survived']].groupby('Sex', as_index = False).mean().sort_values(by='Survived',ascending = False)\n","64d762df":"train_data['Sex']=pd.get_dummies(train_data['Sex'])\ntrain_data['Embarked']=pd.get_dummies(train_data['Embarked'])\n\ntrain_data.head()","4d16b9b3":"y = train_data['Survived']\n\nX = train_data.loc[:,['Pclass', 'Sex', 'SibSp','Parch', 'Fare', 'Embarked']]","e1a22f1e":"X.isna().sum()","3fa5632d":"X_train,X_test,y_train,y_test =train_test_split(X,y,test_size = 0.2)","4cfa7066":"lda =LinearDiscriminantAnalysis()\nqda =QuadraticDiscriminantAnalysis()\ngnb = GaussianNB()\nlr = LogisticRegression(penalty='none',solver = 'newton-cg')\nlda.fit(X_train,y_train)\nqda.fit(X_train,y_train)\ngnb.fit(X_train,y_train)\nlr.fit(X_train,y_train)","bc8d3310":"print('LDA score    : ',lda.score(X_test,y_test))\nprint('QDA score    : ',qda.score(X_test,y_test))\nprint('NBayes score : ',gnb.score(X_test,y_test))\nprint('LogesticR    : ',lr.score(X_test,y_test))","1f06696c":"print('LDA :\\n\\n ',confusion_matrix(y_test,lda.predict(X_test)))\nprint('QDA :\\n\\n ',confusion_matrix(y_test,qda.predict(X_test)))\nprint('\\nNBayes Confusion Matrix: \\n \\n ',confusion_matrix(y_test,gnb.predict(X_test)))\nprint('\\nLogesticR confusion Matrix: \\n \\n',confusion_matrix(y_test,lr.predict(X_test)))","d91c45f2":"# LinearDiscriminantAnalysis     &\n# QuadraticDiscriminantAnalysis"}}