{"cell_type":{"81e54eac":"code","c28a5ce9":"code","177e1a0a":"code","59e03e6d":"code","cee8a552":"code","a50bb423":"code","191a4ece":"code","aa8882e3":"code","8f33c16f":"code","5ab8c1cc":"code","02600636":"code","94901401":"code","1d465a67":"code","d5380b7a":"code","a2a724fd":"code","406ceb33":"code","f867499c":"code","2ab1ccdd":"code","21d83df1":"code","bbaed189":"code","aaa89490":"code","8b62ada7":"code","eec217ce":"code","7d4b25cf":"code","4f3ba962":"code","e118a277":"code","5a29fedf":"code","424fe58e":"code","a4f28d1c":"markdown","586331d3":"markdown","a1498398":"markdown","118ce8ac":"markdown"},"source":{"81e54eac":"from sklearn.linear_model import LinearRegression\nfrom sklearn.experimental import enable_iterative_imputer \nfrom sklearn.impute import IterativeImputer\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd \nimport seaborn as sns","c28a5ce9":"df = pd.read_csv('..\/input\/aircraft-performance-dataset-aircraft-bluebook\/Airplane_Cleaned.csv')","177e1a0a":"plt.figure(figsize=(12, 8))\nsns.heatmap(df.isnull());","59e03e6d":"plt.figure(figsize=(12, 8))\nsns.heatmap(df.corr(), linecolor='w', lw=1);","cee8a552":"lst = ['Model', 'Company', 'Multi Engine','Hmax (One)', 'ROC (One)', 'TP mods', 'SHP', 'THR']\ndf_msg = df.drop(lst, axis=1)","a50bb423":"df_jet = df_msg[df_msg['Engine Type'] == 'Jet'].drop(['Engine Type'], axis=1)\ndf_piston = df_msg[df_msg['Engine Type'] == 'Piston'].drop(['Engine Type'], axis=1)\ndf_propjet = df_msg[df_msg['Engine Type'] == 'Propjet'].drop(['Engine Type'], axis=1)\n\ndf_jet_ind = df_jet.index\ndf_piston_ind = df_piston.index\ndf_propjet_ind = df_propjet.index\n\ndf_jet_col = df_jet.columns\ndf_piston_col = df_piston.columns\ndf_propjet_col = df_propjet.columns","191a4ece":"imp = IterativeImputer(LinearRegression(), max_iter=30, verbose=1) # The stochastic procedure is\n                                                                   # applied in the function.\n\ndf_jet = imp.fit_transform(df_jet)\ndf_piston = imp.fit_transform(df_piston)\ndf_propjet = imp.fit_transform(df_propjet)","aa8882e3":"df_jet = pd.DataFrame(data=df_jet, index=df_jet_ind, columns = df_jet_col)\ndf_piston = pd.DataFrame(data=df_piston, index=df_piston_ind, columns = df_piston_col)\ndf_propjet = pd.DataFrame(data=df_propjet, index=df_propjet_ind, columns = df_propjet_col)","8f33c16f":"df_imp = pd.concat([df_jet, df_piston, df_propjet]).sort_index()\n\ndf_imp[lst + ['Engine Type']] = df[lst + ['Engine Type']].copy()\n\ndf_imp = df_imp[list(df.columns)]","5ab8c1cc":"df_imp.info()","02600636":"plt.figure(figsize=(12, 8))\nsns.heatmap(df_imp.corr(), linecolor='w', lw=1);","94901401":"def plot_imp_data(x, y):\n    imp = df_null[x] | df_null[y]\n    x_ = df_imp[x]\n    y_ = df_imp[y]\n    x_imp = x_[imp]\n    y_imp = y_[imp]\n    plt.figure(figsize=(12, 6))\n    plt.scatter(x_, y_, color='b', s=40)\n    plt.scatter(x_imp, y_imp, color='r', s=40, label='Imputed')\n    plt.legend()\n    plt.xlabel(x)\n    plt.ylabel(y)\n    \ndf_null = df.isnull()","1d465a67":"plot_imp_data(x='AUW', y='FW');","d5380b7a":"plot_imp_data(x='Vmax', y='Vcruise');","a2a724fd":"mask = df_imp['Vmax'] < df_imp['Vcruise']\ndf_imp[mask]\ndiff = np.abs(df_imp.loc[mask, 'Vmax'] - df_imp.loc[mask, 'Vcruise'])\ndf_imp.loc[mask, 'Vmax'] += diff ","406ceb33":"plot_imp_data(x='Length', y='Height')","f867499c":"plot_imp_data(x='Vmax', y='Vstall')","2ab1ccdd":"plot_imp_data(x='Vstall', y='AUW')","21d83df1":"plot_imp_data(x='Vlo', y='Slo')","bbaed189":"plot_imp_data(x='Slo', y='Sl')","aaa89490":"plot_imp_data(x='Vlo', y='Vl')","8b62ada7":"plot_imp_data(x='FW', y='Range')","eec217ce":"lst2 = df_imp.select_dtypes(include=np.number).columns.tolist()\n\ndf_imp[lst2] = np.abs(df_imp[lst2])","7d4b25cf":"plot_imp_data(x='Vmax', y='Hmax')","4f3ba962":"plot_imp_data(x='Vmax', y='ROC')","e118a277":"plot_imp_data(x='Hmax', y='ROC')","5a29fedf":"plt.figure(figsize=(12, 8))\nsns.heatmap(df_imp.isnull());","424fe58e":"df_imp.to_csv('Airplane_Stochastic_Imputation.csv', index=False)","a4f28d1c":"Dropping column that will not be used as estimators, for reasons in the previous sections.","586331d3":"Vcruise values higher than Vmax values.","a1498398":"[In the previous notebook](https:\/\/www.kaggle.com\/heitornunes\/data-imputation-stochastic-regression), I used a simple Stochastic Imputation given one or two features. I didn't know the python already cover this kind of imputation, nor I knew about iterative imputation. Is a procedure to impute multiple instances that have missing data. [This video have a clear explanation on it](https:\/\/www.youtube.com\/watch?v=WPiYOS3qK70). This methods will have the same common pitfalls of a simple stochastic imputation, such as values that are not physically possible (negative values).","118ce8ac":"Negatives values all over the shop, you will be one of them, sooner or later (Father Gascoigne, I guess?)."}}