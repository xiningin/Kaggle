{"cell_type":{"fafc8875":"code","22ab714a":"code","a39e0d7c":"code","10526876":"code","97cb6c99":"code","b3173c21":"code","2d64ad15":"code","5cd38b4c":"code","7780f4cc":"code","825fc9c5":"code","642d5f1d":"code","1a9db23c":"code","2ae3a3b7":"code","799e5b25":"code","da0a5102":"code","2bd6fdfb":"code","94b8bcfd":"code","4a14a6bd":"code","fd44f655":"code","9424304c":"code","daa580a4":"code","3e789ec1":"code","3cea2c08":"code","9fe85ae5":"code","5cff566f":"markdown","8d4950d1":"markdown","cc7cfa80":"markdown"},"source":{"fafc8875":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n3\n4\n# import warnings filter\nfrom warnings import simplefilter\n# ignore all future warnings\nsimplefilter(action='ignore', category=FutureWarning)\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pywt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\n# Any results you write to the current directory are saved as output.\n\nfrom tqdm import tqdm_notebook as tqdm\nimport matplotlib.pyplot as plt\n\n# train.csv is huge, so I implement csv_fragments() function\n# which yields DataFrame of the specified length while scaning a csv file from start to end.\n\nimport builtins\n\nrandom_seed = 4126\n\ncast = {\n    'acoustic_data': 'int',\n    'time_to_failure': 'float'\n}\n\ndef denoise_signal_simple(x, wavelet='db4', level=1):\n    coeff = pywt.wavedec(x, wavelet, mode=\"per\")\n    #univeral threshold\n    uthresh = 10\n    coeff[1:] = (pywt.threshold(i, value=uthresh, mode='hard') for i in coeff[1:])\n    # Reconstruct the signal using the thresholded coefficients\n    return pywt.waverec(coeff, wavelet, mode='per')\n\ndef df_fragments(path, length, skip=1):\n    with open(path, 'r') as f:\n        m = {}\n        cols = []\n        count = 0\n        index = 0\n        for line in f:\n            if len(cols) == 0:\n                for col in line.strip(\"\\n\\r \").split(','):\n                    cols.append(col)\n                continue\n            if count == 0:\n                for col in cols:\n                    m[col] = []\n            if index % skip == 0:\n                for j, cell in enumerate(line.strip(\"\\n\\r \").split(',')):\n                    col = cols[j]\n                    m[col].append(getattr(builtins, cast[col])(cell))\n            count += 1\n            if count == length:\n                if index % skip == 0:\n                    yield pd.DataFrame(m)\n                index += 1\n                count = 0\n\ndef count_rows(path):\n    with open(path, 'r') as f:\n        i = -1\n        for _ in f:\n            i += 1\n        return i","22ab714a":"import librosa, librosa.display","a39e0d7c":"for df in df_fragments('..\/input\/train.csv', 150000):\n    mfcc = librosa.feature.mfcc(df['acoustic_data'].values.astype('float32'),sr=40000)\n    plt.figure(figsize=(25, 5))\n    librosa.display.specshow(mfcc, x_axis='time')\n    plt.colorbar()\n    break","10526876":"for df in df_fragments('..\/input\/train.csv', 150000):\n    x = denoise_signal_simple(df['acoustic_data'].values.astype('float32'))\n    mfcc = librosa.feature.mfcc(x,sr=40000)\n    plt.figure(figsize=(25, 5))\n    librosa.display.specshow(mfcc, x_axis='time')\n    plt.colorbar()\n    break","97cb6c99":"mfcc_ttf_map = {}\n# you can reduce train data to process for some quick experiments\n# skip = 10\n# I have no idea what the actual sampling-rate is, but 1000 scores better than defaut\nsr = 40000\n\n\nfor df in tqdm(pd.read_csv('..\/input\/train.csv', header=None,chunksize=150000,skiprows=1)):\n    df.columns = ['acoustic_data','time_to_failure']\n    if(df.shape[0]==150000):\n        d = df['acoustic_data'].values.astype('float32')\n        d-=np.mean(d)\n        x = denoise_signal_simple(d)\n        mfcc = librosa.feature.mfcc(x, sr=sr)\n        mfcc_mean = mfcc.mean(axis=1)\n        for i, mfcc_mean_of_pitch in enumerate(mfcc_mean):\n            key = 'mfcc_{}'.format(i)\n            if key not in mfcc_ttf_map:\n                mfcc_ttf_map[key] = []\n            mfcc_ttf_map[key].append(mfcc_mean_of_pitch)\n        \n        key = 'time_to_failure'\n        if key not in mfcc_ttf_map:\n            mfcc_ttf_map[key] = []\n        mfcc_ttf_map[key].append(df.iloc[-1][df.columns[1]])\n\nmfcc_ttf_df = pd.DataFrame(mfcc_ttf_map)\n\n        ","b3173c21":"import re\n\nprint('generating test features...')\ntest_dir = '..\/input\/test'\ntest_map = {}\nfor fname in tqdm(os.listdir(test_dir)):\n    path = test_dir + '\/' + fname\n    df = pd.read_csv(path)\n    x = denoise_signal_simple(df['acoustic_data'].values.astype('float32'))\n    mfcc = librosa.feature.mfcc(x, sr=sr)\n    mfcc_mean = mfcc.mean(axis=1)\n    for i, mfcc_mean_of_pitch in enumerate(mfcc_mean):\n        key = 'mfcc_{}'.format(i)\n        if key not in test_map:\n            test_map[key] = []\n        test_map[key].append(mfcc_mean_of_pitch)\n    key = 'seg_id'\n    if key not in test_map:\n        test_map[key] = []\n    test_map[key].append(re.sub('.csv$', '', fname))\ntest_df = pd.DataFrame(test_map)\n\n    ","2d64ad15":"from sklearn.preprocessing import StandardScaler","5cd38b4c":"mfcc_ttf_df.shape","7780f4cc":"test_df.shape","825fc9c5":"mfcc_ttf_df.head()","642d5f1d":"test_df.head()","1a9db23c":"test_df['time_to_failure'] = -1","2ae3a3b7":"alldata = pd.concat([mfcc_ttf_df[mfcc_ttf_df.columns],test_df[mfcc_ttf_df.columns]])","799e5b25":"alldata.head()","da0a5102":"ss = StandardScaler()\nalldata[alldata.columns[:-1]] = ss.fit_transform(alldata[alldata.columns[:-1]])","2bd6fdfb":"class GPLow:\n    def __init__(self):\n        self.classes = 2\n        self.class_names = [ 'class_0',\n                             'class_1']\n\n\n    def GrabPredictions(self, data):\n        oof_preds = np.zeros((len(data), len(self.class_names)))\n        oof_preds[:,0] = self.GP_class_0(data)\n        oof_preds[:,1] = self.GP_class_1(data)\n       \n        oof_df = pd.DataFrame(oof_preds, columns=self.class_names)\n        oof_df =oof_df.div(oof_df.sum(axis=1), axis=0)\n        return oof_df\n\n\n    def Output(self,p):\n        return 1.0\/(1.0+np.exp(-p))\n\n    def GP_class_0(self,data):\n        return self.Output( 0.030800*np.tanh((((((14.12737751007080078)) + ((((data[\"mfcc_0\"]) >= (-3.0))*1.)))) * (((((data[\"mfcc_0\"]) + (-3.0))) + (data[\"mfcc_17\"]))))) +\n                            0.100000*np.tanh(((-3.0) + ((((12.75185775756835938)) * (((-3.0) + ((((12.75185775756835938)) * (((-3.0) + (((data[\"mfcc_17\"]) - (data[\"mfcc_18\"]))))))))))))) +\n                            0.089200*np.tanh(((((((5.0)) < ((-1.0*(((5.0))))))*1.)) + (((((data[\"mfcc_1\"]) + (((data[\"mfcc_4\"]) + ((-1.0*(((5.0))))))))) * 2.0)))) +\n                            0.071034*np.tanh(((((data[\"mfcc_4\"]) - ((((9.0)) - (data[\"mfcc_4\"]))))) - ((((data[\"mfcc_4\"]) + ((((8.0)) * (data[\"mfcc_6\"]))))\/2.0)))) +\n                            0.000004*np.tanh(((((((((data[\"mfcc_0\"]) - (data[\"mfcc_2\"]))) - (2.196743))) * ((14.96836853027343750)))) * (((2.196743) - (data[\"mfcc_0\"]))))) )\n    \n    def GP_class_1(self,data):\n        return self.Output( 0.030800*np.tanh((((5.0)) + ((((((((data[\"mfcc_18\"]) + ((13.36389827728271484)))\/2.0)) * ((((5.0)) + (((data[\"mfcc_18\"]) * 2.0)))))) * ((((5.0)) * 2.0)))))) +\n                            0.100000*np.tanh((((((((5.0)) * 2.0)) * ((((((data[\"mfcc_18\"]) + (data[\"mfcc_18\"]))\/2.0)) + (((2.131311) - (data[\"mfcc_17\"]))))))) + ((10.0)))) +\n                            0.089200*np.tanh(((((2.0) + (data[\"mfcc_2\"]))) * ((((((7.0)) * ((7.0)))) * ((((7.0)) - (((data[\"mfcc_10\"]) * 2.0)))))))) +\n                            0.071034*np.tanh((((((11.08603382110595703)) * (((2.131311) + ((((13.62188434600830078)) + ((11.95074272155761719)))))))) * (((2.196743) - (data[\"mfcc_0\"]))))) +\n                            0.000004*np.tanh((((11.63304042816162109)) + (((data[\"mfcc_6\"]) + ((((10.84789657592773438)) - (((data[\"mfcc_0\"]) * ((10.84789657592773438)))))))))) )","94b8bcfd":"gp = GPLow()\npreds = gp.GrabPredictions(alldata)\nalldata.insert(0,'class_0',preds.class_0.values)","4a14a6bd":"plt.figure(figsize=(15,15))\nplt.plot(alldata[:410].time_to_failure)\nplt.plot(preds[:410].class_0*10)","fd44f655":"def GPI(data):\n    return (6.044562 +\n            0.100000*np.tanh((((13.93472957611083984)) * ((((((13.93472957611083984)) * ((((((((data[\"mfcc_1\"]) + (data[\"mfcc_6\"]))) + (data[\"mfcc_5\"]))) + (((data[\"mfcc_1\"]) + ((((((-1.0*((data[\"mfcc_13\"])))) + ((((((((-1.0*((((data[\"mfcc_0\"]) + (-0.291443)))))) * 2.0)) * 2.0)) * 2.0)))) * 2.0)))))\/2.0)))) * 2.0)))) +\n            0.100000*np.tanh((((13.78113555908203125)) * ((((13.78113555908203125)) * (((data[\"mfcc_1\"]) + (((((data[\"mfcc_0\"]) + (((((((((((data[\"mfcc_1\"]) - (((((((data[\"mfcc_0\"]) * 2.0)) - ((((data[\"mfcc_10\"]) + (((((8.0)) >= (data[\"mfcc_1\"]))*1.)))\/2.0)))) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) * 2.0)))) * 2.0)))))))) +\n            0.100000*np.tanh((((((((((((((((((((((((((((data[\"mfcc_3\"]) < (data[\"mfcc_8\"]))*1.)) + (((data[\"mfcc_15\"]) * 2.0)))) + (((data[\"mfcc_14\"]) * 2.0)))) + (data[\"mfcc_6\"]))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) + (data[\"class_0\"]))) + ((((data[\"class_0\"]) >= (data[\"mfcc_15\"]))*1.)))) * 2.0)) +\n            0.100000*np.tanh(((((((((((data[\"mfcc_5\"]) + (((((((((((data[\"mfcc_5\"]) + ((((((((data[\"mfcc_6\"]) + (2.108835))\/2.0)) - (((((data[\"mfcc_0\"]) * 2.0)) * (((0.670573) * 2.0)))))) * 2.0)))) * 2.0)) - (data[\"mfcc_17\"]))) * 2.0)) - (data[\"mfcc_6\"]))))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((((((data[\"mfcc_11\"]) + ((((((data[\"class_0\"]) + (data[\"mfcc_14\"]))\/2.0)) + (((((data[\"mfcc_14\"]) + (((((data[\"mfcc_6\"]) + (data[\"mfcc_14\"]))) - ((((data[\"mfcc_4\"]) + (data[\"mfcc_3\"]))\/2.0)))))) * 2.0)))))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * ((((7.0)) - (data[\"mfcc_3\"]))))) +\n            0.100000*np.tanh((((-1.0*((((((((data[\"mfcc_18\"]) - ((((-1.0*((((((data[\"mfcc_9\"]) - ((((((((((-2.0) < (data[\"mfcc_12\"]))*1.)) + (((((((data[\"mfcc_10\"]) \/ 2.0)) - ((((5.97305536270141602)) * (data[\"mfcc_0\"]))))) \/ 2.0)))) * 2.0)) * 2.0)))) * 2.0))))) * 2.0)))) * 2.0)) * 2.0))))) * 2.0)) +\n            0.100000*np.tanh(((((((data[\"mfcc_6\"]) + (data[\"mfcc_1\"]))) * ((12.51284027099609375)))) + ((((((12.51284408569335938)) * (((data[\"mfcc_10\"]) - (((((((-0.270785) + (data[\"mfcc_0\"]))) * (((2.264782) + ((((-0.270785) >= (((data[\"mfcc_6\"]) + (data[\"mfcc_6\"]))))*1.)))))) * 2.0)))))) - (1.697380))))) +\n            0.100000*np.tanh((((12.71692085266113281)) * (((((((((data[\"mfcc_1\"]) * 2.0)) - (((((((2.0) + ((((data[\"mfcc_14\"]) >= (data[\"mfcc_4\"]))*1.)))) + ((((2.0) >= ((-1.0*((data[\"mfcc_4\"])))))*1.)))) * (data[\"mfcc_11\"]))))) + ((-1.0*((-3.0)))))) - (((data[\"mfcc_0\"]) * ((12.71692085266113281)))))))) +\n            0.100000*np.tanh(((((((((2.0) - (((((((data[\"mfcc_13\"]) - ((((((data[\"mfcc_13\"]) * 2.0)) < (data[\"mfcc_1\"]))*1.)))) - (data[\"mfcc_1\"]))) + ((((((8.57544231414794922)) + ((((((data[\"mfcc_15\"]) < (((-2.0) \/ 2.0)))*1.)) * ((8.57544231414794922)))))) * (data[\"mfcc_0\"]))))))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((((((((((((((data[\"mfcc_1\"]) >= (data[\"mfcc_9\"]))*1.)) + (((2.549079) + ((((-1.0*((data[\"mfcc_0\"])))) * 2.0)))))\/2.0)) + (((((data[\"mfcc_10\"]) + (data[\"mfcc_1\"]))) + ((((((-1.0*((data[\"mfcc_0\"])))) * 2.0)) * 2.0)))))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((data[\"mfcc_13\"]) + ((((((((((data[\"mfcc_7\"]) < ((-1.0*((data[\"mfcc_13\"])))))*1.)) + (((data[\"mfcc_5\"]) + ((((((((data[\"mfcc_7\"]) * (data[\"mfcc_5\"]))) < (2.549079))*1.)) - (((2.223052) * (((data[\"mfcc_0\"]) * 2.0)))))))))) * 2.0)) * 2.0)))) * 2.0)) +\n            0.100000*np.tanh(((((((data[\"mfcc_3\"]) - (((((((((((((-1.0*((((data[\"mfcc_0\"]) * 2.0))))) + (((((((data[\"mfcc_6\"]) + (data[\"class_0\"]))\/2.0)) >= (((data[\"mfcc_9\"]) - (((data[\"mfcc_5\"]) + (data[\"class_0\"]))))))*1.)))\/2.0)) * (-3.0))) * 2.0)) * 2.0)) * 2.0)))) + (data[\"mfcc_1\"]))) * 2.0)) +\n            0.100000*np.tanh((((12.07313346862792969)) * ((((((((((7.0)) * (((((1.697380) - ((((((data[\"mfcc_1\"]) < (data[\"mfcc_11\"]))*1.)) - (((data[\"mfcc_0\"]) * ((-1.0*(((7.0))))))))))) + (data[\"mfcc_7\"]))))) + (data[\"mfcc_7\"]))) * 2.0)) + (data[\"mfcc_4\"]))))) +\n            0.100000*np.tanh((((((((((((((data[\"mfcc_11\"]) < (data[\"mfcc_0\"]))*1.)) + (((((data[\"mfcc_1\"]) * 2.0)) - (((-2.0) + (data[\"mfcc_0\"]))))))) + (((((((data[\"mfcc_5\"]) + (1.697380))) - (((((data[\"mfcc_0\"]) + (((data[\"mfcc_0\"]) * 2.0)))) * 2.0)))) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((((data[\"mfcc_7\"]) + (data[\"mfcc_8\"]))) + (((((((((data[\"mfcc_7\"]) + (data[\"mfcc_11\"]))) + (((((((data[\"mfcc_7\"]) + (data[\"mfcc_11\"]))) + ((((((data[\"mfcc_11\"]) \/ 2.0)) < (((data[\"mfcc_6\"]) * 2.0)))*1.)))) * 2.0)))) * 2.0)) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((((((data[\"mfcc_8\"]) < (-0.088246))*1.)) + ((((((((((data[\"mfcc_11\"]) < ((((((data[\"mfcc_0\"]) < (-0.088246))*1.)) * 2.0)))*1.)) - (((data[\"mfcc_13\"]) + (((data[\"mfcc_7\"]) + (data[\"mfcc_13\"]))))))) * 2.0)) - (((data[\"mfcc_0\"]) * ((12.66860198974609375)))))))) +\n            0.100000*np.tanh((((10.62614631652832031)) * (((((data[\"mfcc_15\"]) + ((((((((((data[\"mfcc_15\"]) * 2.0)) + (((((((2.193272) + (data[\"mfcc_18\"]))) + (data[\"mfcc_18\"]))) + (((((data[\"mfcc_14\"]) + (((data[\"mfcc_7\"]) + (data[\"mfcc_18\"]))))) * 2.0)))))\/2.0)) * 2.0)) * 2.0)))) * 2.0)))) +\n            0.100000*np.tanh((((((((((5.0)) * ((((((5.0)) * (data[\"mfcc_14\"]))) - (((data[\"mfcc_10\"]) * 2.0)))))) + ((((((((data[\"mfcc_19\"]) >= (data[\"mfcc_10\"]))*1.)) + ((((((((data[\"mfcc_14\"]) >= (data[\"mfcc_19\"]))*1.)) + (data[\"mfcc_19\"]))) * 2.0)))) + (((data[\"mfcc_19\"]) * 2.0)))))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((data[\"mfcc_1\"]) + (((((((2.193272) * ((((((((((data[\"mfcc_0\"]) * (2.223052))) - ((((((2.364957) * (data[\"mfcc_1\"]))) < (2.236772))*1.)))) >= (data[\"mfcc_8\"]))*1.)) - (((data[\"mfcc_0\"]) * (2.193272))))))) - (data[\"mfcc_11\"]))) * 2.0)))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((data[\"mfcc_5\"]) * 2.0)) + (((data[\"mfcc_5\"]) + ((((((((13.37955856323242188)) - (((((data[\"mfcc_19\"]) + (data[\"mfcc_9\"]))) * 2.0)))) - (data[\"mfcc_6\"]))) - (((data[\"mfcc_0\"]) * ((((((((13.37955856323242188)) - ((((data[\"mfcc_10\"]) >= (data[\"mfcc_12\"]))*1.)))) - (data[\"mfcc_1\"]))) * 2.0)))))))))) +\n            0.100000*np.tanh(((((((data[\"mfcc_1\"]) + (((data[\"mfcc_13\"]) * 2.0)))) + (data[\"mfcc_13\"]))) - ((((13.09366035461425781)) * (((((data[\"mfcc_13\"]) - ((((((((-1.0*((((((((((data[\"mfcc_0\"]) * 2.0)) * 2.0)) + (data[\"mfcc_13\"]))) * 2.0))))) + (data[\"mfcc_1\"]))) * 2.0)) * 2.0)))) * 2.0)))))) +\n            0.100000*np.tanh(((((((data[\"mfcc_5\"]) - (((data[\"mfcc_17\"]) - (((data[\"mfcc_6\"]) - (((((data[\"mfcc_3\"]) - (((((((0.614120) < (data[\"mfcc_3\"]))*1.)) >= ((((data[\"mfcc_17\"]) >= (0.614120))*1.)))*1.)))) + ((((data[\"mfcc_1\"]) + ((((-1.0*((((data[\"mfcc_15\"]) * 2.0))))) * 2.0)))\/2.0)))))))))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((data[\"mfcc_7\"]) + ((((((((((data[\"mfcc_15\"]) < (((data[\"mfcc_0\"]) + (((-1.0) - (((data[\"mfcc_14\"]) + (data[\"mfcc_14\"]))))))))*1.)) * 2.0)) - (((((data[\"mfcc_0\"]) * (((data[\"mfcc_0\"]) + (((2.236772) * 2.0)))))) \/ 2.0)))) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((((data[\"mfcc_6\"]) + (((data[\"mfcc_18\"]) - (((data[\"mfcc_4\"]) - (((data[\"mfcc_7\"]) * ((3.51214265823364258)))))))))) + (((-2.0) * (((((((3.51214265823364258)) + (data[\"mfcc_4\"]))\/2.0)) * (((data[\"mfcc_4\"]) * ((((data[\"mfcc_15\"]) < (data[\"mfcc_1\"]))*1.)))))))))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((data[\"mfcc_10\"]) - (((((((((((data[\"mfcc_0\"]) * 2.0)) + ((((-3.0) + ((((((((((data[\"mfcc_1\"]) - ((((((((data[\"mfcc_0\"]) * 2.0)) < (data[\"mfcc_0\"]))*1.)) + (data[\"mfcc_17\"]))))) < (data[\"mfcc_13\"]))*1.)) * 2.0)) * 2.0)))\/2.0)))) * 2.0)) * 2.0)) * 2.0)))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((((7.0)) * ((((((data[\"mfcc_5\"]) + (((((((data[\"mfcc_3\"]) >= (((data[\"mfcc_15\"]) + (data[\"mfcc_14\"]))))*1.)) >= (((data[\"mfcc_15\"]) + (data[\"mfcc_14\"]))))*1.)))\/2.0)) + ((((((((data[\"mfcc_3\"]) \/ 2.0)) >= (((data[\"mfcc_15\"]) + (data[\"mfcc_14\"]))))*1.)) - (((data[\"mfcc_0\"]) * 2.0)))))))) +\n            0.100000*np.tanh(((((((((data[\"mfcc_18\"]) - ((((((((((((((data[\"mfcc_1\"]) >= (data[\"mfcc_18\"]))*1.)) < (data[\"mfcc_1\"]))*1.)) - (data[\"mfcc_1\"]))) < (data[\"mfcc_19\"]))*1.)) + (data[\"mfcc_5\"]))))) * 2.0)) + ((((((7.0)) * (((data[\"mfcc_7\"]) - ((((data[\"mfcc_1\"]) >= (data[\"mfcc_19\"]))*1.)))))) * 2.0)))) * 2.0)) +\n            0.100000*np.tanh((((((((((((-3.0) * (data[\"mfcc_8\"]))) >= (data[\"mfcc_0\"]))*1.)) + (((((((-2.0) + ((((((((((((-3.0) * (data[\"mfcc_0\"]))) + (data[\"mfcc_8\"]))\/2.0)) + ((((((data[\"mfcc_0\"]) >= (data[\"mfcc_14\"]))*1.)) * 2.0)))) * 2.0)) * 2.0)))) * 2.0)) * 2.0)))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((data[\"mfcc_0\"]) + (((((((((((((((0.735529) + (data[\"mfcc_0\"]))) + (((((((0.427750) + ((-1.0*(((((((data[\"mfcc_0\"]) + ((((data[\"mfcc_13\"]) >= (((0.302810) \/ 2.0)))*1.)))\/2.0)) * 2.0))))))) * 2.0)) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)))) * 2.0)) +\n            0.100000*np.tanh(((((((data[\"mfcc_1\"]) * 2.0)) * 2.0)) + (((data[\"mfcc_10\"]) - ((((-1.0*(((((((0.427751) < (data[\"mfcc_1\"]))*1.)) - (((data[\"mfcc_0\"]) * 2.0))))))) * ((((4.40433835983276367)) + ((((4.40433835983276367)) * (((((((((data[\"mfcc_0\"]) * 2.0)) >= (data[\"mfcc_1\"]))*1.)) < (data[\"mfcc_1\"]))*1.)))))))))))) +\n            0.100000*np.tanh(((((((((((-1.0) + (((data[\"mfcc_6\"]) + (((data[\"mfcc_14\"]) * 2.0)))))) * 2.0)) * 2.0)) + ((((((data[\"mfcc_15\"]) * 2.0)) >= (((data[\"mfcc_18\"]) - (data[\"mfcc_14\"]))))*1.)))) - (((-1.0) + (((data[\"mfcc_14\"]) + (((((data[\"mfcc_15\"]) * (data[\"mfcc_15\"]))) * 2.0)))))))) +\n            0.100000*np.tanh((((((((((((data[\"mfcc_0\"]) < ((((((data[\"mfcc_8\"]) * (((data[\"mfcc_8\"]) * (data[\"mfcc_0\"]))))) < ((((data[\"mfcc_1\"]) >= (((data[\"mfcc_6\"]) * ((((data[\"mfcc_7\"]) >= (data[\"mfcc_14\"]))*1.)))))*1.)))*1.)))*1.)) - ((((((data[\"mfcc_8\"]) >= (data[\"mfcc_0\"]))*1.)) + (data[\"mfcc_0\"]))))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((3.0) + ((((((((((((2.223052) >= (data[\"mfcc_18\"]))*1.)) - (data[\"mfcc_9\"]))) + (((3.0) * ((((-1.0*((data[\"mfcc_0\"])))) - (((((((((data[\"mfcc_0\"]) < (data[\"mfcc_0\"]))*1.)) - (data[\"mfcc_14\"]))) < (data[\"mfcc_18\"]))*1.)))))))) * 2.0)) * 2.0)))) * 2.0)) +\n            0.100000*np.tanh(((((((data[\"mfcc_14\"]) + ((((((((((((((data[\"class_0\"]) * (-1.0))) < (data[\"mfcc_14\"]))*1.)) * 2.0)) < (data[\"mfcc_18\"]))*1.)) >= ((((data[\"class_0\"]) >= (((((data[\"mfcc_14\"]) * 2.0)) * (data[\"mfcc_3\"]))))*1.)))*1.)))) * 2.0)) - ((((((data[\"mfcc_18\"]) < (((data[\"mfcc_3\"]) * 2.0)))*1.)) * 2.0)))) +\n            0.100000*np.tanh((((((((((data[\"mfcc_0\"]) * 2.0)) + (((data[\"mfcc_5\"]) + (((((((((0.735529) - (((data[\"mfcc_0\"]) + (((((2.22410607337951660)) >= (((((((data[\"mfcc_0\"]) * (2.030533))) + ((((data[\"mfcc_10\"]) < (data[\"mfcc_5\"]))*1.)))) * 2.0)))*1.)))))) * 2.0)) * 2.0)) * 2.0)))))\/2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((data[\"mfcc_15\"]) + ((((((((((((((((((data[\"mfcc_6\"]) < (data[\"mfcc_1\"]))*1.)) - (data[\"mfcc_0\"]))) - (((((data[\"mfcc_2\"]) * (data[\"mfcc_1\"]))) * 2.0)))) * ((((data[\"mfcc_1\"]) < ((((data[\"mfcc_6\"]) + (((data[\"mfcc_2\"]) * (data[\"mfcc_2\"]))))\/2.0)))*1.)))) * 2.0)) * 2.0)) * 2.0)) * 2.0)))) +\n            0.100000*np.tanh((-1.0*((((((((((data[\"mfcc_0\"]) >= (1.105127))*1.)) >= ((((data[\"mfcc_0\"]) >= (((data[\"mfcc_14\"]) * (((data[\"mfcc_0\"]) - ((((data[\"mfcc_0\"]) >= (data[\"mfcc_7\"]))*1.)))))))*1.)))*1.)) - ((-1.0*((((data[\"mfcc_0\"]) - ((((data[\"mfcc_0\"]) >= (((data[\"mfcc_14\"]) * (data[\"mfcc_0\"]))))*1.)))))))))))) +\n            0.100000*np.tanh(((data[\"mfcc_0\"]) * ((((((data[\"mfcc_14\"]) >= (data[\"mfcc_3\"]))*1.)) - ((((((((data[\"mfcc_8\"]) * (data[\"mfcc_8\"]))) + (((((data[\"mfcc_2\"]) + (((data[\"mfcc_15\"]) + (data[\"mfcc_2\"]))))) * (((data[\"mfcc_8\"]) + (data[\"mfcc_2\"]))))))) + (((((data[\"mfcc_3\"]) + (data[\"mfcc_12\"]))) * 2.0)))\/2.0)))))) +\n            0.100000*np.tanh((((((((((data[\"mfcc_1\"]) * ((((((((data[\"mfcc_18\"]) < (data[\"mfcc_2\"]))*1.)) - (data[\"mfcc_2\"]))) * 2.0)))) * 2.0)) + (data[\"mfcc_14\"]))\/2.0)) + (((data[\"mfcc_6\"]) + (((data[\"mfcc_14\"]) * (((data[\"mfcc_4\"]) + ((((data[\"mfcc_14\"]) < ((((data[\"mfcc_2\"]) + (data[\"mfcc_4\"]))\/2.0)))*1.)))))))))) +\n            0.100000*np.tanh(((((((((((((((((((data[\"mfcc_7\"]) >= (data[\"mfcc_15\"]))*1.)) < (((data[\"mfcc_8\"]) * 2.0)))*1.)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * (((((data[\"mfcc_15\"]) * (((((data[\"mfcc_8\"]) * 2.0)) * (((data[\"mfcc_5\"]) + ((((data[\"mfcc_18\"]) + (0.570601))\/2.0)))))))) + (-1.0))))) +\n            0.100000*np.tanh(((((data[\"mfcc_1\"]) * ((((-1.0*((((data[\"mfcc_2\"]) + (((data[\"mfcc_2\"]) + (data[\"mfcc_1\"])))))))) * ((((((data[\"mfcc_0\"]) - ((((((data[\"mfcc_0\"]) \/ 2.0)) < (data[\"mfcc_0\"]))*1.)))) >= (data[\"mfcc_1\"]))*1.)))))) - (((data[\"mfcc_0\"]) - ((((0.595298) < (data[\"mfcc_0\"]))*1.)))))) +\n            0.100000*np.tanh(((data[\"mfcc_1\"]) - (((data[\"mfcc_0\"]) * (((((data[\"mfcc_0\"]) + (data[\"mfcc_0\"]))) * ((-1.0*((((((data[\"mfcc_5\"]) + (data[\"mfcc_1\"]))) - ((-1.0*((((data[\"mfcc_2\"]) - (((data[\"mfcc_0\"]) * (((data[\"mfcc_0\"]) * (data[\"mfcc_0\"]))))))))))))))))))))) +\n            0.100000*np.tanh(((data[\"mfcc_15\"]) * (((data[\"mfcc_3\"]) + ((((((data[\"mfcc_15\"]) * (data[\"mfcc_7\"]))) + ((((((((((data[\"mfcc_7\"]) >= (data[\"class_0\"]))*1.)) * 2.0)) * 2.0)) * (((((data[\"mfcc_7\"]) + (((((data[\"mfcc_15\"]) + (data[\"mfcc_1\"]))) + (data[\"mfcc_1\"]))))) + (((data[\"mfcc_2\"]) * 2.0)))))))\/2.0)))))) +\n            0.100000*np.tanh(((((((3.0) * (((((data[\"mfcc_2\"]) + (((data[\"mfcc_6\"]) \/ 2.0)))) * (((((((data[\"mfcc_6\"]) >= (((((((((0.388910) - ((((data[\"mfcc_14\"]) < (((data[\"mfcc_19\"]) \/ 2.0)))*1.)))) < (data[\"mfcc_8\"]))*1.)) < (data[\"mfcc_14\"]))*1.)))*1.)) < ((-1.0*((data[\"mfcc_0\"])))))*1.)))))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((-1.0*((((data[\"mfcc_1\"]) * (((data[\"mfcc_18\"]) + (((((((((data[\"mfcc_7\"]) \/ 2.0)) + (data[\"mfcc_7\"]))) \/ 2.0)) + (((data[\"mfcc_1\"]) + (((data[\"mfcc_2\"]) * ((((data[\"mfcc_7\"]) >= ((((data[\"mfcc_3\"]) < (((data[\"mfcc_1\"]) + ((((data[\"mfcc_7\"]) + (data[\"mfcc_18\"]))\/2.0)))))*1.)))*1.))))))))))))))) +\n            0.100000*np.tanh((((((((data[\"mfcc_2\"]) >= ((((data[\"mfcc_12\"]) >= ((((data[\"mfcc_1\"]) >= (data[\"mfcc_0\"]))*1.)))*1.)))*1.)) * (((((((data[\"mfcc_3\"]) >= ((((5.96877813339233398)) * (data[\"mfcc_3\"]))))*1.)) + ((((5.96877813339233398)) * (data[\"mfcc_3\"]))))\/2.0)))) - ((((data[\"mfcc_12\"]) >= ((((data[\"mfcc_1\"]) >= (data[\"mfcc_0\"]))*1.)))*1.)))) +\n            0.100000*np.tanh((-1.0*(((((data[\"mfcc_17\"]) + (((((((((data[\"mfcc_0\"]) * 2.0)) * 2.0)) * 2.0)) * ((((data[\"mfcc_0\"]) < (((((-0.474062) - ((((data[\"mfcc_0\"]) < (((data[\"mfcc_12\"]) - ((((data[\"mfcc_2\"]) < (data[\"mfcc_17\"]))*1.)))))*1.)))) + (((data[\"mfcc_2\"]) * (data[\"mfcc_17\"]))))))*1.)))))\/2.0))))) +\n            0.100000*np.tanh(((data[\"mfcc_15\"]) - (((((((data[\"mfcc_13\"]) + (data[\"mfcc_12\"]))) - ((((((data[\"mfcc_7\"]) * (((data[\"mfcc_19\"]) * (data[\"mfcc_7\"]))))) + (((data[\"mfcc_7\"]) - (((data[\"mfcc_11\"]) + (data[\"mfcc_17\"]))))))\/2.0)))) - (((data[\"mfcc_15\"]) - (((data[\"mfcc_13\"]) + (data[\"mfcc_12\"]))))))))) +\n            0.100000*np.tanh(((((data[\"mfcc_2\"]) * (3.0))) * ((((data[\"mfcc_1\"]) < ((-1.0*(((((((((((data[\"mfcc_2\"]) * (data[\"mfcc_1\"]))) * ((((data[\"mfcc_4\"]) < ((((data[\"mfcc_1\"]) < (data[\"mfcc_2\"]))*1.)))*1.)))) * ((((-0.937055) < (data[\"mfcc_1\"]))*1.)))) < (0.585258))*1.))))))*1.)))) +\n            0.100000*np.tanh((((((((data[\"mfcc_1\"]) - (data[\"mfcc_19\"]))) + (((((((data[\"mfcc_13\"]) - (data[\"mfcc_1\"]))) * (data[\"mfcc_17\"]))) * (data[\"mfcc_2\"]))))\/2.0)) + ((((((((((((((data[\"mfcc_0\"]) < (data[\"mfcc_1\"]))*1.)) * ((((data[\"mfcc_3\"]) + (data[\"mfcc_19\"]))\/2.0)))) * 2.0)) * 2.0)) * 2.0)) * 2.0)))))\n         ","9424304c":"def GPII(data):\n    return (6.044562 +\n            0.100000*np.tanh((((13.85196399688720703)) * (((0.670573) - ((-1.0*((((((((((data[\"mfcc_14\"]) + ((((data[\"mfcc_13\"]) < (2.0))*1.)))) - (((data[\"mfcc_0\"]) * ((((((data[\"mfcc_9\"]) >= ((((data[\"mfcc_11\"]) >= (0.670573))*1.)))*1.)) - (-3.0))))))) * 2.0)) * 2.0))))))))) +\n            0.100000*np.tanh((((10.91737270355224609)) * ((((10.91737270355224609)) * (((((((3.0) + (((((data[\"mfcc_1\"]) + ((-1.0*((((data[\"mfcc_15\"]) - ((-1.0*((((data[\"mfcc_15\"]) - (((data[\"mfcc_14\"]) * 2.0)))))))))))))) - (((data[\"mfcc_0\"]) * ((((10.91737270355224609)) + (data[\"mfcc_1\"]))))))))) * 2.0)) * 2.0)))))) +\n            0.100000*np.tanh(((((((((((((data[\"mfcc_12\"]) - (((((data[\"mfcc_11\"]) - (((data[\"mfcc_1\"]) + ((-1.0*((((((((((data[\"mfcc_0\"]) * 2.0)) - (0.427750))) * 2.0)) * 2.0))))))))) * 2.0)))) * 2.0)) + ((((data[\"mfcc_1\"]) < ((((data[\"mfcc_0\"]) < (data[\"mfcc_1\"]))*1.)))*1.)))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((((((((((((3.69547343254089355)) * ((((((((((((((3.69547343254089355)) >= (data[\"mfcc_0\"]))*1.)) + ((((data[\"mfcc_1\"]) + (((data[\"mfcc_5\"]) + (data[\"mfcc_0\"]))))\/2.0)))\/2.0)) - (((data[\"mfcc_0\"]) * 2.0)))) * 2.0)) * 2.0)))) + (((-3.0) * (data[\"mfcc_11\"]))))) + (data[\"mfcc_12\"]))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((3.0) * (((((((data[\"mfcc_1\"]) + (((((((((data[\"mfcc_14\"]) + ((((((((((((3.0) * ((((-1.0*((data[\"mfcc_0\"])))) * 2.0)))) + (data[\"mfcc_5\"]))\/2.0)) * 2.0)) + (((2.236772) + (data[\"mfcc_1\"]))))) * 2.0)))) * 2.0)) * 2.0)) * 2.0)))) * 2.0)) * 2.0)))) +\n            0.100000*np.tanh(((((((13.57778072357177734)) + (3.0))) + (((((((((-2.0) * 2.0)) * (data[\"mfcc_11\"]))) - (-2.0))) - ((((((12.16242599487304688)) * (((data[\"mfcc_0\"]) - ((((((data[\"mfcc_1\"]) - (data[\"mfcc_13\"]))) + (((data[\"mfcc_0\"]) * (((-2.0) * 2.0)))))\/2.0)))))) * 2.0)))))\/2.0)) +\n            0.100000*np.tanh((((((((((((((((((((-1.0*((((data[\"mfcc_0\"]) * 2.0))))) + ((((data[\"mfcc_11\"]) < ((((((data[\"mfcc_0\"]) * 2.0)) < (((((data[\"mfcc_6\"]) - (data[\"mfcc_0\"]))) - (-0.270785))))*1.)))*1.)))) * 2.0)) * 2.0)) + (data[\"mfcc_6\"]))) - (data[\"mfcc_0\"]))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((((12.47262859344482422)) * (((((((((-1.0*((data[\"mfcc_6\"])))) >= (data[\"mfcc_0\"]))*1.)) + (((data[\"mfcc_10\"]) + ((((((1.0) * 2.0)) + ((((((((data[\"mfcc_6\"]) + ((((((((-1.0*((data[\"mfcc_0\"])))) * 2.0)) * 2.0)) + (data[\"mfcc_1\"]))))\/2.0)) * 2.0)) * 2.0)))\/2.0)))))) * 2.0)))) +\n            0.100000*np.tanh((((((((((((((-1.0*((data[\"mfcc_0\"])))) * 2.0)) + ((((((((data[\"mfcc_12\"]) < (((data[\"mfcc_7\"]) * 2.0)))*1.)) + (((2.0) + (((((data[\"mfcc_10\"]) * 2.0)) + ((((((((-1.0*((data[\"mfcc_0\"])))) * 2.0)) * 2.0)) * 2.0)))))))) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((((((((((((data[\"mfcc_18\"]) + (((((((data[\"mfcc_6\"]) + (data[\"mfcc_14\"]))) + ((((data[\"mfcc_15\"]) + ((((((data[\"mfcc_15\"]) \/ 2.0)) + ((((((data[\"mfcc_15\"]) \/ 2.0)) < (data[\"class_0\"]))*1.)))\/2.0)))\/2.0)))) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((((((13.99419975280761719)) * (((data[\"mfcc_0\"]) + (((data[\"mfcc_5\"]) + (((((((((((((((data[\"mfcc_5\"]) + (((1.697380) - ((((data[\"mfcc_1\"]) < (data[\"mfcc_0\"]))*1.)))))\/2.0)) >= (data[\"mfcc_0\"]))*1.)) - (((data[\"mfcc_0\"]) * 2.0)))) * 2.0)) * 2.0)) * 2.0)))))))) * 2.0)) +\n            0.100000*np.tanh(((((((((((((((data[\"mfcc_10\"]) + (3.0))) - ((((8.0)) * (data[\"mfcc_0\"]))))) * 2.0)) - (((((data[\"mfcc_3\"]) * 2.0)) - ((((((2.0) + (((data[\"mfcc_8\"]) * 2.0)))) >= (data[\"mfcc_0\"]))*1.)))))) * 2.0)) * 2.0)) + ((((data[\"mfcc_8\"]) >= (data[\"mfcc_3\"]))*1.)))) +\n            0.100000*np.tanh((((((((11.03212165832519531)) - ((((data[\"mfcc_0\"]) >= (((data[\"mfcc_14\"]) + (data[\"mfcc_14\"]))))*1.)))) + (((2.0) * ((((10.0)) * (((((data[\"mfcc_14\"]) - (((data[\"mfcc_14\"]) * (data[\"mfcc_6\"]))))) - (((((3.0) + (data[\"mfcc_6\"]))) * (data[\"mfcc_0\"]))))))))))) * 2.0)) +\n            0.100000*np.tanh(((((((((((((-3.0) * (((((data[\"mfcc_13\"]) - (((((-3.0) * (((((data[\"mfcc_0\"]) - ((((((data[\"mfcc_13\"]) < ((((((data[\"mfcc_0\"]) * 2.0)) < (data[\"mfcc_1\"]))*1.)))*1.)) \/ 2.0)))) * 2.0)))) * 2.0)))) * 2.0)))) + (data[\"mfcc_1\"]))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((data[\"mfcc_14\"]) + ((-1.0*((((((2.223052) - (((((((data[\"mfcc_14\"]) < (((data[\"mfcc_4\"]) * (((data[\"mfcc_15\"]) * (data[\"mfcc_15\"]))))))*1.)) < (((data[\"mfcc_14\"]) * (data[\"mfcc_14\"]))))*1.)))) * ((((data[\"mfcc_4\"]) + ((-1.0*((data[\"mfcc_6\"])))))\/2.0))))))))) * 2.0)) * ((10.0)))) +\n            0.100000*np.tanh((((((((((((((((((((((((2.549079) * ((((((data[\"mfcc_0\"]) >= ((((data[\"mfcc_12\"]) >= (data[\"mfcc_1\"]))*1.)))*1.)) - (((data[\"mfcc_0\"]) * 2.0)))))) >= (data[\"mfcc_11\"]))*1.)) - (data[\"mfcc_0\"]))) * 2.0)) * 2.0)) - (data[\"mfcc_11\"]))) * 2.0)) * 2.0)) * 2.0)) - (data[\"mfcc_11\"]))) * 2.0)) +\n            0.100000*np.tanh(((((((((((((((((2.0) + (data[\"mfcc_1\"]))) * ((((data[\"mfcc_11\"]) < (((0.023605) * (2.236772))))*1.)))) * ((((data[\"mfcc_10\"]) < (data[\"mfcc_0\"]))*1.)))) + (((data[\"mfcc_10\"]) - (((((data[\"mfcc_0\"]) * 2.0)) * 2.0)))))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((((8.0)) * ((((((((((((((((((data[\"mfcc_5\"]) + ((((5.0)) \/ 2.0)))\/2.0)) * (2.415960))) - (((data[\"mfcc_0\"]) * ((5.06101179122924805)))))) * (2.415960))) - (data[\"mfcc_7\"]))) * ((7.10873889923095703)))) - ((((data[\"mfcc_5\"]) < (data[\"mfcc_7\"]))*1.)))) - (data[\"mfcc_7\"]))))) +\n            0.100000*np.tanh((((14.67224884033203125)) * ((((((14.67224884033203125)) * (((((((((data[\"mfcc_8\"]) + (((data[\"mfcc_15\"]) + (data[\"mfcc_6\"]))))) * 2.0)) * 2.0)) + ((((((((data[\"mfcc_18\"]) * 2.0)) * 2.0)) < (data[\"mfcc_15\"]))*1.)))))) + (((-3.0) + ((((data[\"mfcc_8\"]) < (data[\"mfcc_6\"]))*1.)))))))) +\n            0.100000*np.tanh(((((data[\"mfcc_1\"]) - (((((((data[\"mfcc_0\"]) - (data[\"mfcc_11\"]))) - (data[\"mfcc_11\"]))) * (data[\"mfcc_1\"]))))) - (((((((data[\"mfcc_11\"]) - ((((((((data[\"mfcc_0\"]) * (-3.0))) + (data[\"mfcc_1\"]))\/2.0)) * 2.0)))) * ((9.14199638366699219)))) - ((((data[\"mfcc_0\"]) + ((9.14199638366699219)))\/2.0)))))) +\n            0.100000*np.tanh(((((((((((data[\"mfcc_0\"]) * 2.0)) * 2.0)) + ((((((-1.0*((data[\"mfcc_13\"])))) + ((((((((((data[\"mfcc_14\"]) < ((-1.0*((data[\"mfcc_13\"])))))*1.)) * 2.0)) - (((((data[\"mfcc_0\"]) * 2.0)) * 2.0)))) * 2.0)))) * ((8.0)))))) + (((((data[\"mfcc_0\"]) * 2.0)) * 2.0)))) * 2.0)) +\n            0.100000*np.tanh((((((6.35433721542358398)) * ((((((6.35433721542358398)) * (((((((((((((data[\"mfcc_11\"]) + (data[\"mfcc_7\"]))) * 2.0)) * 2.0)) + (((((((((data[\"mfcc_11\"]) + (data[\"mfcc_7\"]))) * (data[\"mfcc_7\"]))) + (data[\"mfcc_7\"]))) * 2.0)))) * 2.0)) * 2.0)))) + (data[\"mfcc_7\"]))))) + (data[\"mfcc_7\"]))) +\n            0.100000*np.tanh(((((((data[\"mfcc_8\"]) + ((((((0.427750) + ((((data[\"mfcc_10\"]) < (data[\"mfcc_8\"]))*1.)))\/2.0)) + ((((9.0)) * (((data[\"mfcc_15\"]) + ((((((data[\"mfcc_14\"]) + ((((((((data[\"mfcc_10\"]) * 2.0)) + (data[\"mfcc_15\"]))) < (data[\"mfcc_14\"]))*1.)))\/2.0)) * 2.0)))))))))) * 2.0)) * ((8.0)))) +\n            0.100000*np.tanh((((((((((((((((((((((-1.0*((data[\"mfcc_0\"])))) * 2.0)) + ((((((((((data[\"mfcc_14\"]) + (data[\"class_0\"]))\/2.0)) + (data[\"class_0\"]))\/2.0)) < (data[\"mfcc_0\"]))*1.)))) * 2.0)) + ((-1.0*((data[\"mfcc_9\"])))))) * 2.0)) + (data[\"mfcc_0\"]))) * 2.0)) + (data[\"mfcc_9\"]))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((-3.0) + (((((((data[\"mfcc_10\"]) - (((((((data[\"mfcc_0\"]) - ((((data[\"mfcc_0\"]) >= (((data[\"mfcc_14\"]) + ((((0.174589) + (((((((((0.174589) + (2.364957))\/2.0)) * (data[\"mfcc_10\"]))) < (data[\"mfcc_0\"]))*1.)))\/2.0)))))*1.)))) * 2.0)) * 2.0)))) * 2.0)) * 2.0)))) +\n            0.100000*np.tanh((((((((-1.0*((data[\"mfcc_0\"])))) + (((((((data[\"mfcc_7\"]) + ((((-1.0*((data[\"mfcc_4\"])))) - ((-1.0*(((((((((((-1.0*((data[\"mfcc_0\"])))) * 2.0)) - ((((data[\"mfcc_11\"]) >= ((-1.0*((data[\"mfcc_0\"])))))*1.)))) * 2.0)) * 2.0))))))))) * 2.0)) - (data[\"mfcc_11\"]))))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh((((13.40357017517089844)) * (((data[\"mfcc_8\"]) + ((((((13.40357017517089844)) + (2.364957))) * (((data[\"mfcc_8\"]) + (((((((2.364957) + (data[\"mfcc_7\"]))) - (data[\"mfcc_11\"]))) * (((((((1.697380) - (((data[\"mfcc_0\"]) * (2.0))))) * 2.0)) * 2.0)))))))))))) +\n            0.100000*np.tanh((((((((((-1.0*((((data[\"mfcc_9\"]) * (((((5.0)) + (((data[\"mfcc_9\"]) * (((((5.0)) + (((data[\"mfcc_0\"]) \/ 2.0)))\/2.0)))))\/2.0))))))) + (((-3.0) + (((((data[\"mfcc_0\"]) * (((((-3.0) * 2.0)) - (data[\"mfcc_6\"]))))) * 2.0)))))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((data[\"mfcc_0\"]) - (((data[\"mfcc_17\"]) - (data[\"mfcc_7\"]))))) + (((((((data[\"mfcc_0\"]) + (((data[\"mfcc_7\"]) + (((3.0) * (((((((0.764911) - ((((((data[\"mfcc_17\"]) - (data[\"mfcc_19\"]))) >= (data[\"mfcc_0\"]))*1.)))) - (data[\"mfcc_0\"]))) * 2.0)))))))) * 2.0)) * 2.0)))) +\n            0.100000*np.tanh(((((((2.030533) - (((2.0) * (((data[\"mfcc_0\"]) + (((data[\"mfcc_0\"]) + (data[\"mfcc_3\"]))))))))) * 2.0)) + (((data[\"mfcc_14\"]) + ((((((data[\"mfcc_0\"]) < ((((((1.654606) >= (1.654606))*1.)) - ((((data[\"mfcc_11\"]) + (data[\"mfcc_0\"]))\/2.0)))))*1.)) * 2.0)))))) +\n            0.100000*np.tanh((((((8.61900520324707031)) * ((((8.61900520324707031)) * (((((data[\"mfcc_6\"]) + (((data[\"mfcc_7\"]) - (((((((data[\"mfcc_11\"]) < (0.570601))*1.)) + ((((data[\"mfcc_7\"]) < ((((data[\"mfcc_6\"]) < ((((data[\"mfcc_19\"]) < (0.369547))*1.)))*1.)))*1.)))\/2.0)))))) - (0.369547))))))) - (data[\"mfcc_7\"]))) +\n            0.100000*np.tanh(((((((data[\"mfcc_1\"]) + (((((data[\"mfcc_1\"]) + ((((((((((data[\"mfcc_6\"]) < (data[\"mfcc_1\"]))*1.)) - (((data[\"mfcc_9\"]) + (((((((((((0.0) >= (data[\"mfcc_6\"]))*1.)) < (data[\"mfcc_0\"]))*1.)) + (data[\"mfcc_0\"]))) * 2.0)))))) * 2.0)) * 2.0)))) * 2.0)))) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((((((((((data[\"mfcc_8\"]) + (((data[\"mfcc_1\"]) + (((((((data[\"mfcc_8\"]) + ((((4.0)) - (((((data[\"mfcc_0\"]) * 2.0)) * 2.0)))))) * 2.0)) * 2.0)))))) * 2.0)) - (data[\"mfcc_18\"]))) * 2.0)) - (((data[\"mfcc_18\"]) * 2.0)))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((((((((((((((data[\"mfcc_15\"]) - (((((((data[\"mfcc_15\"]) >= (data[\"mfcc_1\"]))*1.)) >= (data[\"mfcc_15\"]))*1.)))) - (((data[\"mfcc_2\"]) * (((3.0) * (data[\"mfcc_1\"]))))))) + (data[\"mfcc_5\"]))) + (((data[\"mfcc_15\"]) - ((((0.724339) >= (data[\"mfcc_2\"]))*1.)))))) * 2.0)) * 2.0)) * 2.0)) +\n            0.100000*np.tanh(((data[\"mfcc_15\"]) * (((((data[\"mfcc_3\"]) + (((data[\"mfcc_6\"]) * (2.549079))))) * (((((data[\"mfcc_15\"]) + (((((data[\"mfcc_14\"]) + (((((-1.0*((data[\"mfcc_14\"])))) >= (data[\"mfcc_6\"]))*1.)))) + (((((((data[\"mfcc_3\"]) + (data[\"mfcc_15\"]))\/2.0)) >= (((data[\"mfcc_3\"]) * 2.0)))*1.)))))) * 2.0)))))) +\n            0.100000*np.tanh(((((((data[\"mfcc_18\"]) + (((data[\"mfcc_2\"]) - (((data[\"mfcc_0\"]) * (data[\"mfcc_2\"]))))))) + (data[\"mfcc_5\"]))) + ((((((((data[\"mfcc_0\"]) + ((((-1.0) < (((1.697380) * (data[\"mfcc_0\"]))))*1.)))) \/ 2.0)) < ((((data[\"mfcc_2\"]) >= (((data[\"mfcc_8\"]) * 2.0)))*1.)))*1.)))) +\n            0.100000*np.tanh(((((((data[\"mfcc_15\"]) + (data[\"mfcc_14\"]))) + ((((data[\"mfcc_9\"]) < (data[\"mfcc_15\"]))*1.)))) * (((data[\"mfcc_3\"]) + (((((data[\"mfcc_4\"]) + (((data[\"mfcc_8\"]) * ((((data[\"mfcc_8\"]) + (data[\"mfcc_15\"]))\/2.0)))))) - (((((((data[\"mfcc_15\"]) < (data[\"mfcc_9\"]))*1.)) + (((data[\"mfcc_15\"]) \/ 2.0)))\/2.0)))))))) +\n            0.100000*np.tanh((((((((((((((((((data[\"mfcc_1\"]) + ((((((data[\"mfcc_0\"]) * (((((data[\"mfcc_0\"]) * 2.0)) * 2.0)))) >= (0.570601))*1.)))\/2.0)) >= (0.694219))*1.)) + ((-1.0*((data[\"mfcc_0\"])))))\/2.0)) * 2.0)) * 2.0)) * 2.0)) * (((data[\"mfcc_0\"]) + (((((data[\"mfcc_0\"]) * 2.0)) * (data[\"mfcc_0\"]))))))) +\n            0.100000*np.tanh(((((data[\"mfcc_0\"]) * 2.0)) * ((-1.0*(((((-1.0*((data[\"mfcc_0\"])))) * (((((1.697380) + (data[\"mfcc_15\"]))) * (((data[\"mfcc_2\"]) + ((((-1.0*((data[\"mfcc_0\"])))) + ((((data[\"mfcc_1\"]) + ((((data[\"mfcc_1\"]) + ((((data[\"mfcc_3\"]) < (data[\"mfcc_1\"]))*1.)))\/2.0)))\/2.0))))))))))))))) +\n            0.100000*np.tanh(((((((data[\"mfcc_15\"]) * 2.0)) * (((((-1.0*(((((data[\"mfcc_2\"]) >= ((((data[\"mfcc_14\"]) >= (data[\"mfcc_10\"]))*1.)))*1.))))) < ((((data[\"mfcc_15\"]) >= ((((((((data[\"mfcc_4\"]) \/ 2.0)) \/ 2.0)) < (data[\"mfcc_18\"]))*1.)))*1.)))*1.)))) * (((data[\"mfcc_18\"]) + (((((data[\"mfcc_2\"]) * 2.0)) * 2.0)))))) +\n            0.100000*np.tanh((((((-1.0*((data[\"mfcc_19\"])))) + (((((((((data[\"mfcc_5\"]) - (data[\"mfcc_4\"]))) - (data[\"mfcc_0\"]))) - (((data[\"mfcc_0\"]) - (data[\"mfcc_12\"]))))) * (((data[\"mfcc_6\"]) * (((((data[\"mfcc_5\"]) - (data[\"mfcc_12\"]))) - (data[\"mfcc_0\"]))))))))) + (((data[\"mfcc_5\"]) - (data[\"mfcc_12\"]))))) +\n            0.100000*np.tanh(((3.0) * ((((((((data[\"mfcc_2\"]) \/ 2.0)) >= ((((((((data[\"mfcc_0\"]) < (0.710992))*1.)) + (((data[\"mfcc_0\"]) - ((((data[\"mfcc_0\"]) >= ((-1.0*((((-1.0) + (((((data[\"mfcc_0\"]) + (((data[\"mfcc_2\"]) \/ 2.0)))) \/ 2.0))))))))*1.)))))) * 2.0)))*1.)) * 2.0)))) +\n            0.100000*np.tanh(((data[\"mfcc_15\"]) * (((((((((((data[\"mfcc_11\"]) >= (data[\"mfcc_16\"]))*1.)) >= ((((((((-2.0) + (data[\"mfcc_0\"]))) * 2.0)) < ((((((((((data[\"mfcc_2\"]) + (-2.0))) >= (data[\"mfcc_1\"]))*1.)) * 2.0)) - (data[\"mfcc_0\"]))))*1.)))*1.)) * 2.0)) + (((data[\"mfcc_2\"]) + (data[\"mfcc_11\"]))))))) +\n            0.100000*np.tanh((((((((((data[\"mfcc_7\"]) >= ((((((((data[\"mfcc_7\"]) * 2.0)) * 2.0)) < (data[\"mfcc_3\"]))*1.)))*1.)) * 2.0)) * 2.0)) * (((((data[\"mfcc_5\"]) - ((((((((((data[\"mfcc_14\"]) < (1.153898))*1.)) * 2.0)) * 2.0)) * 2.0)))) * (((data[\"mfcc_3\"]) - ((-1.0*((((data[\"mfcc_7\"]) * 2.0))))))))))) +\n            0.100000*np.tanh((((((((-1.0) >= (data[\"mfcc_13\"]))*1.)) * 2.0)) + ((((((((((data[\"mfcc_18\"]) * (data[\"mfcc_17\"]))) >= (data[\"mfcc_18\"]))*1.)) * (((((data[\"mfcc_15\"]) - (data[\"mfcc_13\"]))) + (((data[\"mfcc_18\"]) * (data[\"mfcc_7\"]))))))) - (((data[\"mfcc_17\"]) - (((data[\"mfcc_3\"]) + (data[\"mfcc_15\"]))))))))) +\n            0.100000*np.tanh(((data[\"mfcc_7\"]) - (((data[\"mfcc_12\"]) - (((data[\"mfcc_1\"]) * (((data[\"mfcc_12\"]) - ((((((data[\"mfcc_10\"]) + (data[\"mfcc_12\"]))\/2.0)) + ((((((data[\"mfcc_2\"]) + (((data[\"mfcc_5\"]) * (data[\"mfcc_5\"]))))\/2.0)) + (((data[\"mfcc_1\"]) * ((((data[\"mfcc_12\"]) >= (data[\"mfcc_2\"]))*1.)))))))))))))))) +\n            0.100000*np.tanh(((((data[\"mfcc_0\"]) + (((((((data[\"mfcc_5\"]) < (data[\"mfcc_0\"]))*1.)) < (data[\"mfcc_5\"]))*1.)))) * ((-1.0*(((((data[\"mfcc_17\"]) + ((((11.78159523010253906)) * (((((((data[\"mfcc_5\"]) * 2.0)) * 2.0)) * ((((data[\"mfcc_0\"]) < ((-1.0*((((((-1.0*((data[\"mfcc_0\"])))) >= (data[\"mfcc_3\"]))*1.))))))*1.)))))))\/2.0))))))) +\n            0.100000*np.tanh(((((((data[\"mfcc_17\"]) + ((((((-0.925553) >= (data[\"mfcc_1\"]))*1.)) * 2.0)))) * (((data[\"mfcc_2\"]) * (((((((((-0.925553) >= (data[\"mfcc_1\"]))*1.)) * 2.0)) + (((data[\"mfcc_17\"]) + (((data[\"mfcc_3\"]) * (((data[\"mfcc_2\"]) + (((data[\"mfcc_17\"]) + (data[\"mfcc_1\"]))))))))))\/2.0)))))) \/ 2.0)) +\n            0.100000*np.tanh((((((((((((((data[\"mfcc_16\"]) + (data[\"mfcc_4\"]))\/2.0)) * 2.0)) + (data[\"mfcc_7\"]))) * (((data[\"mfcc_7\"]) - ((((((((data[\"mfcc_0\"]) + (1.523039))) >= ((((data[\"mfcc_7\"]) < ((((data[\"mfcc_0\"]) < (data[\"mfcc_1\"]))*1.)))*1.)))*1.)) * 2.0)))))) * 2.0)) * ((((0.265262) < (data[\"mfcc_17\"]))*1.)))) +\n            0.100000*np.tanh(((data[\"mfcc_17\"]) * ((((((data[\"mfcc_1\"]) + ((-1.0*((((data[\"mfcc_0\"]) + ((-1.0*(((-1.0*((((data[\"mfcc_0\"]) + ((-1.0*(((((((data[\"mfcc_18\"]) >= (((((data[\"mfcc_19\"]) + (data[\"mfcc_0\"]))) + (data[\"mfcc_16\"]))))*1.)) - (data[\"mfcc_16\"]))))))))))))))))))))\/2.0)) * 2.0)))))\n","daa580a4":"from sklearn.metrics import mean_absolute_error\nprint('GPI: ',mean_absolute_error(mfcc_ttf_df.time_to_failure,GPI(alldata[:mfcc_ttf_df.shape[0]])))\nprint('GPII: ',mean_absolute_error(mfcc_ttf_df.time_to_failure,GPII(alldata[:mfcc_ttf_df.shape[0]])))\nprint('GPMean: ',mean_absolute_error(mfcc_ttf_df.time_to_failure,.5*GPI(alldata[:mfcc_ttf_df.shape[0]])+.5*GPII(alldata[:mfcc_ttf_df.shape[0]])))","3e789ec1":"sub = pd.DataFrame()\nsub['seg_id'] = test_df.seg_id.values\nsub['time_to_failure'] = GPI(alldata[mfcc_ttf_df.shape[0]:]).values\nsub.to_csv('gpmfccsubI.csv',index=False)\nsub.head()","3cea2c08":"sub = pd.DataFrame()\nsub['seg_id'] = test_df.seg_id.values\nsub['time_to_failure'] = GPII(alldata[mfcc_ttf_df.shape[0]:]).values\nsub.to_csv('gpmfccsubII.csv',index=False)\nsub.head()","9fe85ae5":"sub = pd.DataFrame()\nsub['seg_id'] = test_df.seg_id.values\nsub['time_to_failure'] = .5*GPI(alldata[mfcc_ttf_df.shape[0]:]).values+.5*GPII(alldata[mfcc_ttf_df.shape[0]:]).values\nsub.to_csv('gpmfccsubmean.csv',index=False)\nsub.head()","5cff566f":"Let's see MFCC of train data (first 150,000 records)","8d4950d1":"[**librosa**](https:\/\/librosa.github.io\/librosa\/index.html) is easy-to-use library to calculate audio features.","cc7cfa80":"# Trying \"acoustic\" features\nUpvote the original script please"}}