{"cell_type":{"b249c224":"code","062f0547":"code","360ba72b":"code","5b893207":"code","4c068793":"code","f09d9c93":"code","fca254ff":"code","3fb7490e":"code","34b80351":"code","7134d511":"code","bf9f64c8":"code","6b62c031":"code","89c3e047":"code","6c0b03a1":"code","a3b4cdae":"code","ecf678c3":"code","99c42f93":"code","0fba987a":"code","09e25bef":"code","0e32767b":"code","f9b65acd":"code","62adae08":"code","c57e06f4":"code","fe07aa47":"code","e1101f2e":"code","27811304":"code","18803084":"markdown","c70f459d":"markdown","e054c973":"markdown","c91a17fa":"markdown","b3202205":"markdown","3a369374":"markdown","ea7f28d9":"markdown","d1a75e0e":"markdown","af7b2777":"markdown","e49d23d8":"markdown","04cfd614":"markdown","cf6cc575":"markdown","4912f11e":"markdown","55adee0f":"markdown","8f31fbf8":"markdown","a563bd82":"markdown","73f44f68":"markdown"},"source":{"b249c224":"# importing the required libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","062f0547":"# importing the 'insurance' dataset\ndf = pd.read_csv(\"..\/input\/insurance-premium-prediction\/insurance.csv\")\n","360ba72b":"# printing the shape - rows & columns\ndf.shape","5b893207":"# printing first 5 rows of dataset\ndf.head()","4c068793":"# printing data types of all columns\ndf.dtypes","f09d9c93":"# printing all unique values in categorical variables\na = df['sex'].unique()\nb = df['children'].unique()\nc = df['smoker'].unique()\nd = df['region'].unique()\nprint(a,'\\n',b,'\\n',c,'\\n',d)","fca254ff":"# checking for duplicate rows present\ndf.duplicated().sum()","3fb7490e":"# removing duplicate rows\ndf = df.drop_duplicates()","34b80351":"# checking for null values present\ndf.isnull().sum()","7134d511":"# printing data types of all columns\ndf.dtypes","bf9f64c8":"df.describe(include='all')","6b62c031":"# plotting frequecy distribution for different variables\nhist = df.hist(figsize = (15,15),color='#EC7063')","89c3e047":"# frequecny distribution of each value present in 'region' variable\ndf.region.value_counts().plot(kind=\"bar\",color='#58D68D')","6c0b03a1":"# pie-chart to plot frequency of smokers and non-smokers\ndf.smoker.value_counts().plot(kind=\"pie\")","a3b4cdae":"# mean expenses for smokers and non-smokers\ndf.groupby('smoker').expenses.agg([\"mean\"])","ecf678c3":"# mean expenses both male & female\ndf.groupby('sex').expenses.agg([\"mean\"])","99c42f93":"# find corelation between numerical variables\ndf.corr()","0fba987a":"# bar graphs to show trends in 'expenses' variable w.r.t other variables present\na = ['age','children','bmi','sex','smoker','region']\nfor i in a:\n    x = df[i]\n    y = df['expenses']\n    plt.bar(x,y,color='#A569BD')\n    plt.xlabel(i)\n    plt.ylabel('expenses')\n    plt.show()","09e25bef":"# splitting dependent variable from independent variables\nx = df.drop(columns=['expenses'])\ny = df['expenses']\nx.head()","0e32767b":"# One Hot Encoding all the categorical variables \nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[( 'encoder', OneHotEncoder() , [1,4,5] )], remainder='passthrough')\nx = np.array(ct.fit_transform(x))","f9b65acd":"# splitting the dataset into train & test part (with 25% as test)\nfrom sklearn.model_selection import train_test_split\nx_train , x_test , y_train , y_test = train_test_split(x , y , test_size = 0.25 , random_state=1)","62adae08":"# Feature Scaling the variables\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nsc.fit(x_train)\nx_train = sc.transform(x_train)\nx_test = sc.transform(x_test)","c57e06f4":"# training the model with multiple linear regression\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(x_train, y_train)","fe07aa47":"print(\"Model intercept\",regressor.intercept_,\"Model co-efficent\",regressor.coef_)","e1101f2e":"# making predictions on test dataset\ny_pred = regressor.predict(x_test)","27811304":"# printing 'Root Mean Squared Value' for train and test part of the dataset separately\nfrom sklearn import metrics\nprint(\"RMSE\")\nprint(np.sqrt(metrics.mean_squared_error(y_test,regressor.predict(x_test))))","18803084":"- Pandas will be used to work with dataframes.\n- NumPy is used to work with arrays\n- Pyplot class from Matplotlib is used for plotting different \n  types of plots to gain better insights","c70f459d":"# Making predictions","e054c973":"- Not much difference between premiums of male and female","c91a17fa":"- Value counts for different regions is almost equal","b3202205":"- Being a smoker costs much more insurance premium . ","3a369374":"# Model Evaluation","ea7f28d9":"- More than 200 people are around 20 years of age.\n- A large no. of people have bmi value between 25-35.\n- Most people have single children only.\n- Expenses value mostly lies below 15000.","d1a75e0e":"- A very large no. of people are non-smokers","af7b2777":"# Training the model","e49d23d8":"- No Null values are present in any column of dataset","04cfd614":"- Total count decreased to 1337 after dropping a duplicate row","cf6cc575":"# **Data Preprocessing**","4912f11e":"\n- Increase in age causes a slight increase in expenses.\n- Expenses decreases as no. of children increases.\n- As BMI value for a person increases, Expenses also get increase.\n- Sex of people doesn't really affect the expenses\n- Smokers pay way more than non-smokers.\n- No observed trend in expenses with region.","55adee0f":"- Dataframe has total 7 columns .\n- 3 of them are categorical - 'sex','smoker','region' .\n- Rest 4 are numerical in nature. 'age' and 'children' have integer values,\n  'bmi' and 'expenses' have floating point values","8f31fbf8":"# Splitting the Dataset","a563bd82":"# **Data Visualization**","73f44f68":"- Variables 'age' and 'bmi' have a strong corelation with expenses"}}