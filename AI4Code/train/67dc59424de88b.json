{"cell_type":{"bac8a328":"code","ef02bcae":"code","e3c41e45":"code","974433a0":"code","3c0e94ea":"code","0b29b5bd":"code","1ffa8210":"code","0cfa9f89":"code","0fc909df":"code","3c639562":"code","84b4290b":"code","8189cbe2":"code","b22531c4":"code","300bc2d7":"code","378ba9b9":"code","72057ace":"code","b5049fda":"markdown","6a97ac6f":"markdown","0a4f1bc8":"markdown"},"source":{"bac8a328":"import numpy as np\nimport pandas as pd\n\n\ntrain = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\ngender_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\n\ndata = pd.concat([train, test], sort=False)\n\ndata['Sex'].replace(['male', 'female'], [0, 1], inplace=True)\ndata['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)\ndata['Fare'].fillna(np.mean(data['Fare']), inplace=True)\ndata['Age'].fillna(data['Age'].median(), inplace=True)\ndata['FamilySize'] = data['Parch'] + data['SibSp'] + 1\ndata['IsAlone'] = 0\ndata.loc[data['FamilySize'] == 1, 'IsAlone'] = 1","ef02bcae":"data.head()","e3c41e45":"delete_columns = ['Name', 'PassengerId', 'Ticket', 'Cabin']\ndata.drop(delete_columns, axis=1, inplace=True)\n\ntrain = data[:len(train)]\ntest = data[len(train):]\n\ny_train = train['Survived']\nX_train = train.drop('Survived', axis=1)\nX_test = test.drop('Survived', axis=1)","974433a0":"X_train.head()","3c0e94ea":"from sklearn.linear_model import LogisticRegression\n\n\nclf = LogisticRegression(penalty='l2', solver='sag', random_state=0)","0b29b5bd":"from sklearn.ensemble import RandomForestClassifier\n\n\nclf = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)","1ffa8210":"clf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)","0cfa9f89":"y_pred[:10]","0fc909df":"sub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","3c639562":"sub['Survived'] = list(map(int, y_pred))\nsub.to_csv('submission_randomforest.csv', index=False)\nsub.head()","84b4290b":"from sklearn.model_selection import train_test_split\n\n\nX_train, X_valid, y_train, y_valid = \\\n    train_test_split(X_train, y_train, test_size=0.3,\n                                 random_state=0, stratify=y_train)","8189cbe2":"categorical_features = ['Embarked', 'Pclass', 'Sex']","b22531c4":"import lightgbm as lgb\n\n\nlgb_train = lgb.Dataset(X_train, y_train,\n                                         categorical_feature=categorical_features)\nlgb_eval = lgb.Dataset(X_valid, y_valid, reference=lgb_train,\n                                         categorical_feature=categorical_features)\n\nparams = {\n    'objective': 'binary'\n}\n\nmodel = lgb.train(params, lgb_train,\n                               valid_sets=[lgb_train, lgb_eval],\n                               verbose_eval=10,\n                               num_boost_round=1000,\n                               early_stopping_rounds=10)\n\ny_pred = model.predict(X_test, num_iteration=model.best_iteration)","300bc2d7":"y_pred[:10]","378ba9b9":"y_pred = (y_pred > 0.5).astype(int)\ny_pred[:10]","72057ace":"sub['Survived'] = y_pred\nsub.to_csv('submission_lightgbm.csv', index=False)\n\nsub.head()","b5049fda":"# sklearn","6a97ac6f":"# LightGBM","0a4f1bc8":"This notebook is a sample code with Japanese comments.\n\n# 2.5 \u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u304c\u6700\u5f37\uff1f\uff01\u3000\u3044\u308d\u3044\u308d\u306a\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046"}}