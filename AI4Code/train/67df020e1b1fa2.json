{"cell_type":{"b671e197":"code","015406f2":"code","63807328":"code","9489ff22":"code","c895896c":"code","7a16b347":"code","a064429f":"code","dfdeb028":"code","af55219b":"code","449035b2":"code","d749e1d7":"code","ff5d1cc9":"code","1d2ccbaf":"code","510229bf":"markdown","8479245b":"markdown","0794da13":"markdown","7cacc8e4":"markdown","2727e266":"markdown","6d76311d":"markdown","4d96f189":"markdown","d3f2e790":"markdown","1d0b4fa7":"markdown","34ca5769":"markdown"},"source":{"b671e197":"import numpy as np\nnp.random.seed(420)\nimport pandas as pd\nimport matplotlib\nfrom sklearn.metrics import roc_auc_score\nimport matplotlib.pyplot as plt\nimport os\nimport seaborn as sns\nfrom tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold, StratifiedKFold\nimport xgboost as xgb\nfrom xgboost import XGBClassifier\nimport lightgbm as lgb\nimport optuna\nimport re\nfrom sklearn.utils import resample\nfrom sklearn.preprocessing import OneHotEncoder\n\nmatplotlib.rcParams['figure.figsize'] = [20, 10]\n\nDEV = False","015406f2":"%%time\n\ntrain_df = pd.read_csv('\/kaggle\/input\/ai4digigov2021\/queue_dataset_train.csv')\n\nif DEV:\n    train_df = train_df.sample(n=500000)\n    \ntrain_df = train_df.dropna()\ntrain_df = train_df.reset_index(drop=True)\n\ntest_df = pd.read_csv('\/kaggle\/input\/ai4digigov2021\/queue_dataset_test.csv')","63807328":"test_df['customer_age_appl'] = test_df['customer_age_appl'].fillna('31-35')","9489ff22":"def fix_time(times_raw):\n    times = []\n    \n    for t in tqdm(times_raw):\n        if not isinstance(t, str) and np.isnan(t):\n            t = \"12:00:00.0\"\n            \n        ts = t.split(\":\")\n        hours = int(ts[0])\n        minutes = int(ts[1])\n        seconds = int(ts[2].split('.')[0])\n        \n        times.append(hours * 3600 + minutes * 60 + seconds)\n    \n    return np.array(times) \/ 86400","c895896c":"train_df['time_start_process'] = fix_time(train_df['time_start_process'])\ntest_df['time_start_process'] = fix_time(test_df['time_start_process'])","7a16b347":"def fix_date(df):\n    df['date'] = pd.to_datetime(df['date'], format='%Y-%m-%d')\n\n    df['weekday'] = [x.weekday() for x in df.date]\n    \n    return df","a064429f":"train_df = fix_date(train_df)\ntest_df = fix_date(test_df)","dfdeb028":"test_df = pd.get_dummies(test_df,columns=['weekday'])\ntrain_df = pd.get_dummies(train_df,columns=['weekday'])","af55219b":"seed = 420\n\ntrain_df_ = train_df.drop(['service_canceled','id'], axis=1)","449035b2":"params = {'reg_lambda': 0.8462662628054513,\n           'subsample': 0.703925954466332,\n           'min_child_samples': 25, 'learning_rate': 0.0965962567977748}","d749e1d7":"%%time\nfrom catboost import CatBoostClassifier\npreds = np.zeros(test_df.shape[0])\nkf = StratifiedKFold(n_splits=5, shuffle=True)\nfor trn_idx, test_idx in kf.split(train_df_,train_df['service_canceled']):\n    X_tr,X_val=train_df_.iloc[trn_idx],train_df_.iloc[test_idx]\n    y_tr,y_val=train_df['service_canceled'].iloc[trn_idx],train_df['service_canceled'].iloc[test_idx]\n    cat_cols=['branch_name','customer_gender', 'customer_age_appl', 'customer_city','service_name_organization','service_name','service_name_2']\n    model = CatBoostClassifier(cat_features=cat_cols,scale_pos_weight=11.5, iterations=5000,\n                           **params,\n                           task_type='GPU',verbose=True, use_best_model=True,\n                           random_seed=420, early_stopping_rounds=100, eval_metric='AUC', bootstrap_type='Poisson')\n    model.fit(X_tr, y_tr, eval_set=(X_val,y_val))\n    preds+= model.predict_proba(test_df[train_df_.columns])[:,1]\/kf.n_splits","ff5d1cc9":"preds","1d2ccbaf":"test_df['service_canceled'] = preds\ntest_df[[\"id\", \"service_canceled\"]].to_csv(\"\/kaggle\/working\/submission.csv\", index=False)","510229bf":"## Loading","8479245b":"# Data stuff","0794da13":"# Model","7cacc8e4":"### Fix age","2727e266":"### Clean time","6d76311d":"## Data cleaning","4d96f189":"### Clean date","d3f2e790":"# Imports","1d0b4fa7":"## Train","34ca5769":"## Prediction"}}