{"cell_type":{"6b649514":"code","d5be3308":"code","c1d8838b":"code","173736be":"code","f8b4c939":"code","27e11036":"code","41108fdb":"code","051dca11":"code","96f8265e":"code","766af067":"code","23209a26":"code","1063a583":"code","a79352dd":"code","a35adc6e":"code","297e8969":"code","a6d2e92c":"code","19e09f1e":"code","5b02684d":"code","ed4fc34f":"code","4de59a8c":"code","d7aa39af":"markdown","2109cccb":"markdown","b713c19f":"markdown","f2c55ac6":"markdown","6f147501":"markdown"},"source":{"6b649514":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom matplotlib import dates\n\nimport matplotlib\nimport statsmodels.tsa.api as tsa\n\n%matplotlib inline\n\nmatplotlib.style.use(\"Solarize_Light2\")\n\nfrom pylab import rcParams\nimport statsmodels.api as sm\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d5be3308":"df = pd.read_csv(\"\/kaggle\/input\/pakistan-engineers-data\/PITC_Engineering.csv\", low_memory=False)\nprint(df.shape)\ndf.head().style.set_properties(**{'background-color':'green',\n                                     'color': 'white'})","c1d8838b":"df.isnull().sum()","173736be":"#Code by Taikutsu https:\/\/www.kaggle.com\/ravels1991\/simple-eda\/comments\n\ng = sns.lmplot(x=\"Longitude\", y=\"Latitude\", data=df,\n           fit_reg=False, scatter_kws={\"s\": 30}, hue='Province', height=10)\nplt.title('Engineers Employment by Province')\nplt.show()","f8b4c939":"fig_px = px.scatter_mapbox(df, lat=\"Latitude\", lon=\"Longitude\",\n                           hover_name=\"Province\",\n                           zoom=11, height=300)\nfig_px.update_layout(mapbox_style=\"open-street-map\",\n                     margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n\nfig_px.show()","27e11036":"fig_px.update_traces(marker={\"size\": [10 for x in df]})","41108fdb":"y = df.loc[~df.ID.isnull()][['ID', 'License_no', 'PEC_No']]\n\ny_log=np.log1p(y)","051dca11":"#Code by Oniel Gracious https:\/\/www.kaggle.com\/onielg\/simplecatboostwithclassifierchains\/notebook\n\n#histogram and normal probability plot\nfrom scipy import stats\n\nfrom scipy.stats import norm\ntarget=['License_no','PEC_No','ID']\nfor t in target:\n    fig = plt.figure()\n    sns.distplot(y_log[t], fit=norm);\n    res = stats.probplot(y_log[t], plot=plt)","96f8265e":"fig = px.bar(df, \n             x='Employment_Start_Date', y='Firm_Category', color_discrete_sequence=['#FFD700'],\n             title='Engineers Employment', text='Engineering_Degree')\nfig.show()","766af067":"fig = px.bar(df, \n             x='Employment_End_Date', y='Engineering_Degree', color_discrete_sequence=['#DC143C'],\n             title='Engineers Employment', text='Firms_City')\nfig.show()","23209a26":"#Save for the next time, since CONSTANT didn't work here.\n\n# imputing with a constant\n\n#from sklearn.impute import SimpleImputer\n#train_constant = train.copy()\n#setting strategy to 'constant' \n#mean_imputer = SimpleImputer(strategy='constant') # imputing using constant value\n#train_constant.iloc[:,:] = mean_imputer.fit_transform(train_constant)\n#train_constant.isnull().sum()","1063a583":"#Code by Parul Pandey  https:\/\/www.kaggle.com\/parulpandey\/a-guide-to-handling-missing-values-in-python\n\n\nfrom sklearn.impute import SimpleImputer\ndf_most_frequent = df.copy()\n#setting strategy to 'mean' to impute by the mean\nmean_imputer = SimpleImputer(strategy='most_frequent')# strategy can also be mean or median \ndf_most_frequent.iloc[:,:] = mean_imputer.fit_transform(df_most_frequent)","a79352dd":"df_most_frequent.isnull().sum()","a35adc6e":"from fbprophet import Prophet\ndf1=df_most_frequent.rename(columns={\"Employment_Start_Date\": \"ds\", \"PEC_No\": \"y\"})\ndf1\nm = Prophet()\nm.fit(df1)","297e8969":"future = m.make_future_dataframe(periods=365)\nfuture.tail()","a6d2e92c":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","19e09f1e":"fig1 = m.plot(forecast)","5b02684d":"fig2 = m.plot_components(forecast)","ed4fc34f":"#Code by attollos https:\/\/www.kaggle.com\/attollos\/time-series-forecast-example-with-prophet\/\n\nfrom fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","4de59a8c":"#Code by Mysterious Ben https:\/\/www.kaggle.com\/myster\/eda-prophet-winning-solution-3-0\n\n_ = pd.pivot_table(df, values='PEC_No', index='Employment_Start_Date').plot(style='-o', title=\"Pakistan Engineers Employment\")\nplt.xticks(rotation=45);","d7aa39af":"![](https:\/\/m.aussizzgroup.com\/uploadedfiles\/BL_56_09092017213550.jpg)aussizzgroup.com","2109cccb":"#It seems that employment is stable by the end of 2019 till 2020. Though we're in 2021. That information is not useful .","b713c19f":"#It didn't return an error but I still don't know the meaning of Prophet charts\n\n\"What is the dark blue area? Is it the uncertainty interval? What is the light blue area? Why do I see the black dots on the plot?\"\n\nIs employement level increasing?? What's the meaning of the black doodle??","f2c55ac6":"#Prophet plot explained - By Bartosz Mikulski\n\n\n\"When I looked at a plot generated by Prophet for the first time, I was lost. I started looking for the explanation in the documentation. There were none. Great, so what now? I googled it. Now I was sure that I was the only person who did not understand the plot because I could not find anything (not even a StackOverflow question or someone asking for an explanation).\"\n\n\"I had two options. I could either give up or start digging in the source code. Fortunately, when you look at the source code of the Prophet plot function, everything starts to be obvious and easy.\"\n\n\"I cannot spot the individual data points. All I have is a weird broad blue line. It is not an error! It looks like this because there are many data points and they get plotted close to each other. That observation is going to be important later\"\n\n\"The black dots indicate the data points used to train the model. The next line plots the prediction.Finally, it draws the grid and the label axis:\"\n\nhttps:\/\/www.mikulskibartosz.name\/prophet-plot-explained\/","6f147501":"#Plot using the Prophet\u2019s plot function."}}