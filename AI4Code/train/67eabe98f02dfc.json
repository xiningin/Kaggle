{"cell_type":{"82dc534a":"code","78dba906":"code","5e70dd57":"code","5732040a":"code","353bff80":"code","85c38f29":"code","1acfa576":"code","cf58d9b0":"code","ce62c472":"code","bc9e699b":"code","86aaee51":"code","56ec5991":"code","7b8b7efd":"code","ca2be28b":"code","1cd67010":"code","45b5bb38":"code","8b76a7a3":"code","a366e67b":"code","29042f4e":"code","d6286bb9":"code","8ae2309f":"code","cfa02d13":"code","d4b64b9a":"code","0dec4245":"code","5a890ea0":"code","954eddba":"code","4603457a":"code","68820bb6":"code","9338cfaa":"code","33156e07":"code","f6b2d841":"code","1f9b51af":"code","503141ea":"code","5639c168":"code","6b1eb5a5":"code","5ff289b1":"code","81a6c27f":"code","990e55f2":"code","b17be561":"code","90404288":"code","c143bfc0":"code","1354d08d":"code","ad90522b":"code","3ef87588":"code","1836b606":"code","9e483d27":"code","017e83d2":"markdown","e5dff913":"markdown","dd8a8afd":"markdown","4f5a7c64":"markdown","a6a35bf1":"markdown","790621ce":"markdown","a8c9daee":"markdown","720b22f5":"markdown","5b72634e":"markdown","303cf220":"markdown","e82d9e84":"markdown","5d035cba":"markdown","ce478478":"markdown","11ccd9d7":"markdown","dd0d2039":"markdown","0bacde08":"markdown","578c5bd8":"markdown","113233a8":"markdown","5917724b":"markdown","f1c8489f":"markdown","19be8d81":"markdown","f3fbee4d":"markdown","537a93e6":"markdown","847e3ddc":"markdown","3e1a8e39":"markdown","91a668a4":"markdown"},"source":{"82dc534a":"# import library\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\nimport missingno\nimport warnings\nwarnings.filterwarnings('ignore')","78dba906":"df = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\ndf.head()","5e70dd57":"df.shape","5732040a":"df.describe()","353bff80":"df.info()","85c38f29":"missingno.bar(df);","1acfa576":"df.dropna(subset=['date_added'], inplace=True)","cf58d9b0":"df.head()","ce62c472":"df.info()","bc9e699b":"df.director.fillna('missing', inplace=True)","86aaee51":"df.cast.fillna('missing', inplace=True)","56ec5991":"data = []\nfor i in range(len(df)):\n    data.extend(df.cast.iloc[i].split(','))","7b8b7efd":"element = {}\nfor i in data:\n    element[i] = data.count(i)","ca2be28b":"element = sorted(element.items(), key = lambda item: item[1], reverse=True)","1cd67010":"len(set(element))","45b5bb38":"df.info()","8b76a7a3":"df.country.fillna('missing', inplace=True)","a366e67b":"df.rating.fillna('missing', inplace=True)","29042f4e":"df.info()","d6286bb9":"df.head()","8ae2309f":"df['added_month'] = np.nan\nfor i in range(len(df)):\n    df['added_month'][i] = df.date_added.iloc[i].split(' ')[0]","cfa02d13":"df['added_date'] = np.nan\nfor i in range(len(df)):\n    df['added_date'][i] = df.date_added.iloc[i].split(' ')[1][:-1]","d4b64b9a":"df['added_year'] = np.nan\nfor i in range(len(df)):\n    df['added_year'][i] = df.date_added.iloc[i].split(' ')[2]","0dec4245":"listed_in = []\nfor i in range(len(df)):\n    listed_in.extend(df.listed_in.iloc[i].split(','))","5a890ea0":"listed_dic = {}\nfor i in listed_in:\n    listed_dic[i] = listed_in.count(i)","954eddba":"listed_dic = sorted(listed_dic.items(), key=lambda item: item[1], reverse=True)","4603457a":"listed_dic = dict(listed_dic)","68820bb6":"df.drop('date_added', axis=1, inplace=True)","9338cfaa":"df.isna().sum()","33156e07":"df.dropna(inplace=True)","f6b2d841":"sns.set_theme('paper', style='darkgrid')\nplt.bar(df.type.unique(), df.type.value_counts(), width=0.5, color='red')\nplt.ylabel('Value Count');","1f9b51af":"df.director.value_counts()[1:20].sort_values(ascending=False).plot(kind='bar', width=0.5, color='red');","503141ea":"fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 8))\ndata = df.groupby('type')['director'].value_counts()['Movie'][1: 20]\ndata = pd.DataFrame(data)\nax1.bar(data.index, data.director, color='red')\nax1.tick_params(labelrotation=90)\nax1.set_title('Movie', fontsize=24, fontweight='bold')\ndata2 = df.groupby('type')['director'].value_counts()['TV Show'][1: 20]\ndata2 = pd.DataFrame(data2)\nax2.bar(data2.index, data2.director, color='grey')\nax2.tick_params(labelrotation=90)\nax2.set_title('TV Show', fontsize=24, fontweight='bold');","5639c168":"dic_element = dict(element[1:])","6b1eb5a5":"dic_element_key = list(dic_element.keys())\ndic_element_value = list(dic_element.values())\nplt.bar(dic_element_key[:20], dic_element_value[:20], color='red')\nplt.xticks(rotation='vertical');","5ff289b1":"country_list = []\nfor data in df.country:\n    split_data = data.split(',')\n    for new_data in split_data:\n        country_list.append(new_data.strip())","81a6c27f":"country_count = {}\nfor i in country_list:\n    country_count[i] = country_list.count(i)","990e55f2":"country_count_sort = sorted(country_count.items(), key=lambda item: item[1], reverse=True)","b17be561":"country_count_sort = dict(country_count_sort)","90404288":"plt.bar(list(country_count_sort.keys())[:20], list(country_count_sort.values())[:20], color='red')\nplt.xticks(rotation='vertical');","c143bfc0":"plt.bar(df.added_month.unique()[:-1], df.added_month.value_counts()[:-1], color='red');\nplt.xticks(rotation='90');","1354d08d":"fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\ndf_movie = pd.DataFrame(df.groupby('type')['release_year'].value_counts()['Movie'].sort_values(ascending=False)[:20])\nax1.barh(df_movie.index, df_movie.release_year, color='red')\nax1.set_title('Release Year of Movie', fontsize=24, fontweight='bold');\ndf_tv = pd.DataFrame(df.groupby('type')['release_year'].value_counts()['TV Show'].sort_values(ascending=False)[:20])\nax2.barh(df_tv.index, df_tv.release_year, color='grey')\nax2.set_title('Release Year of TV Show', fontsize=24, fontweight='bold');","ad90522b":"plt.figure(figsize=(20, 8))\nplt.bar(listed_dic.keys(), listed_dic.values(), color='red')\nplt.xticks(rotation='90');","3ef87588":"plt.figure(figsize=(6, 6))\nlabels=['1 Season', '2 Season', '3 Season']\n_, _, texts = plt.pie(df.duration.value_counts()[:3], labels=labels, autopct='%1.2f%%', startangle=90, \n                      explode=(0.0, 0.1, 0.0), colors=['red', 'grey', 'black'])\nplt.axis('equal')\nplt.title('Season Duration', fontsize=22, fontweight='bold');\nfor text in texts:\n    text.set_color('white')","1836b606":"plt.plot(df.duration.value_counts().index.to_list()[3: 20], df.duration.value_counts()[3:20], color='red')\nplt.xticks(rotation='90')\nplt.title('Movie and TV Show Duration', fontsize=18, fontweight='bold');","9e483d27":"plt.figure(figsize=(8, 10))\nsns.countplot(y='rating', data=df, order=df.rating.value_counts().index.to_list(), palette='dark:salmon_r')\nplt.title('Different Ratings', fontsize=24, fontweight='bold');","017e83d2":"This graph shows that most of the TVShow and Movie cast in the `United States` that were found over the Netflix.","e5dff913":"## Load the Dataset\nIn this section we load the dataset and take the basic understanding from the dataset.","dd8a8afd":"So, now we 7777 rows left in the dataset after droping the missing value from the `date_added` column.\n\nIn `director` column we replace the missing value with the `missing`.","4f5a7c64":"## Feature Enginnering\nIn this section, we perform the Feature Engineering to make our dataset more informative and help us to make more prediction over the dataset.","a6a35bf1":"`Ra\u00fal Campos, Jan Suter` are most common director that direct the TV Show or movie that are found on the Netflix. We can also check the what type of content i.e. TV Show or Movie they were direct.","790621ce":"So, TV-MA is the most common rating over the Netflix.","a8c9daee":"This shows that in the year 2020, TV Show popularity increase over the Movie on Netflix.","720b22f5":"We work out with handling the missing value in the dataset. Now we move forward and perform `feature engineering` to extract the information from the dataset that help us to understand the dataset more better.","5b72634e":"So most of the TV Shows and Movie that were added on the Netflix is in the month of August.","303cf220":"# Netflix Movie and TV Show \ud83d\udcca \nIn this notebook, we perform the different Exploratory Data Analytics or EDA Techniques to understand the dataset and make the possible prediction over the dataset.","e82d9e84":"## Summary\nSo, far we had perform lots of operation over the dataset and dig out some of the useful information from it. In some of the cases we create some new data from the dataset to help out in understanding the data more clearly. If we had to conclude the dataset in the few lines, than we can say that:\n\n*On Netflix, mostly `TV Show` were added which were directed by the `Alastair Fothergill` that were release in the year `2020` with one of the tag listed in `International TV Shows` have a duration of `1 Season` got rating of `TV-MA`.*","5d035cba":"Since we extract the `date_added` column. so, we drop this column from the dataset.","ce478478":"For making ourself on the track lets note down some of the basic steps that we are going to follow while performing the EDA.\n* Load the Dataset.\n* Understand the Dataset, its types and missing value in the dataset.\n* Clean the dataset and handle the missing value from the dataset.\n* Perform the Data Visualization \n    * Perform Data Normalization where ever seems to require.\n    * Perform the Feature Engineering to make data more understandable and extract the possible new information from the dataset.\n* Create the final Summary report from the information we gather while performing EDA. \n\n**Also we create some question based on the dataset which we going to answer while doing EDA.**","11ccd9d7":"**What Data we can extract from the dataset?**\n* split the `date_added` column into month, date and year.\n* split the `listed_in` column into different category.\n\n*One feature engineering we had perform while handing the missing value of cast. (element)*\n","dd0d2039":"Lets check out the `country` column and try to fill the missing value in column. We handle the missing value with the `missing` keyword.","0bacde08":"So, from the above graph we can say that on Netflix mostly `TV Show` where added.","578c5bd8":"**QUESTION**\n1. What different types of show or movie uploaded on Netflix?\n2. Which director is the most common on the Netflix?\n3. Which director directs the shows maximum?\n4. What different types of celebrities cast the shows more often?\n5. In which country these shows are cast maximum that were added on Netflix?\n6. In which month or year these shows added onto the Netflix mainly?\n7. In which year the shows were released maximum and added onto the Netflix?\n8. What are the different types of rating were giving on the Netflix?\n9. What are the different categories were found on the Netflix?\n10. What is the most common duration that were added on the Netflix?","113233a8":"`Ra\u00fal Campos, Jan Suter` directs the Movie only that are uploaded on the Netflix and `Alastair Fothergill` mostly directs TV Show that were found on the Netflix.","5917724b":"## Exploratoy Data Analysis\nIn this section, we perform the EDA over the sorted data that we make ready to understand the dataset make different prediction.\n\nWhat we are doing in this is that, we create some sort of question at the beginning to which we are going to answer while performing Exploratory Data Analysis.","f1c8489f":"So, most of the dataset that we have is based on the string dtype and also from this we see that `director`, `country`, `date_added`, `cast`, and `rating` have a missing value.\n\nLets check out how to handle out this data but before moving to that lets visualize the missing value to know how much missing value are there in each columns.","19be8d81":"So from this we get better understanding about the missing value in the dataset. As we can see that `director` column have the maximum missing values in the dataset and `date_added` column have few missing value, so we drop those rows as we cannot hangle those value as it belongs to date(we cannot predict that but we can search it on the google about the date on which that is added on netflix).","f3fbee4d":"For cast column we fill the missing value with the missing keyword and also we create a dictonary which stores the unique cast value as key and the number of times it come in the dataset as value. This will help while performing the EDA.","537a93e6":"`Anupam Kher` is the most common cast that is found over the Netflix.","847e3ddc":"Most of the Movie with the tag `International Movies` were found over the Netflix. So, making the Show or Movie famous you must have International Movie tag over your show.","3e1a8e39":"Most of the Movie of TV Show are of duration 90 min found over the Netflix.","91a668a4":"## Handle Missing Value\nIn this section, we work with the missing value to make our dataset complete before performing the EDA. This will help us understand the dataset more clearly and make prediction more precisely."}}