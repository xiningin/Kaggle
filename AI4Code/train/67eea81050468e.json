{"cell_type":{"a77c4afb":"code","aff78f89":"code","bba1c8be":"code","dd5de8db":"code","5f04a5ed":"code","af45c538":"code","a819ca34":"code","2e3f3c74":"code","82466c85":"code","1f3653f5":"code","1034fc04":"code","22b1b0d1":"code","5060cbc7":"code","8da73cac":"code","f9f90620":"code","077600b2":"code","2b277afd":"code","a6a61b34":"code","08e93199":"code","40645398":"code","27d73db4":"code","440aaa96":"code","49cf3368":"code","24d8efaf":"code","6d495c31":"code","95866c09":"code","dad31785":"markdown","57db17db":"markdown","8a31e7d4":"markdown","bfd40c58":"markdown","1cc28e4a":"markdown","d413985a":"markdown","bfcb7927":"markdown","ecfcfe60":"markdown","0cd6b4cd":"markdown","cc6e8ec5":"markdown","f8801f0a":"markdown","d48c7139":"markdown","0908239a":"markdown","54c15c42":"markdown","d59dde6c":"markdown","597636a1":"markdown","b2bfa5bf":"markdown","54ea67d0":"markdown","e3245eef":"markdown","2cc9f197":"markdown","7d9756e8":"markdown","e56c20c1":"markdown"},"source":{"a77c4afb":"import numpy as np  # Lineal algebra\nimport pandas as pd # Data wrangling\nfrom statsmodels.tsa.arima.model import ARIMA #ARIMA model (arima_model is deprecated, use this one instead!)\nfrom statsmodels.tsa.stattools import adfuller #Dickey-Fuller test for stationarity\n\n# Plotting\nimport seaborn as sns \nimport matplotlib.pyplot as plt \nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf","aff78f89":"df = pd.read_csv('..\/input\/latest-covid-19-dataset-worldwide\/owid-covid-data (2).csv')","bba1c8be":"df['date'] = pd.to_datetime(df['date'])\ndf = df[df['iso_code']=='ESP']\ndf = df.set_index('date')\nhospitalized = df[['hosp_patients_per_million']]\nhospitalized = hospitalized.resample('W-MON').mean()","dd5de8db":"hospitalized.plot()","5f04a5ed":"hospitalized = hospitalized.dropna()","af45c538":"hospitalized.plot()","a819ca34":"hospitalized = np.log(hospitalized) # Apply a log transformation to reduce heterocedasticity","2e3f3c74":"result = adfuller(hospitalized)\nprint('ADF Statistic: %f' % result[0])\nprint('p-value: %f' % result[1])","82466c85":"diffhosp = hospitalized.diff().dropna() # Save the first difference\nresult = adfuller(diffhosp)\nprint('ADF Statistic: %f' % result[0])\nprint('p-value: %f' % result[1])","1f3653f5":"diffhosp.plot()\npacf =  plot_pacf(diffhosp)\nacf =  plot_acf(diffhosp)","1034fc04":"model = ARIMA(hospitalized,order= (2,1,2)).fit()\nmodel.summary()","22b1b0d1":"predictions = model.predict()\nplt.figure(figsize=(15,10))\nplt.plot(predictions[1:])\nplt.plot(hospitalized)","5060cbc7":"train = hospitalized[:-5]\ntest = hospitalized[-5:]\nmodel = ARIMA(train,order= (2,1,2)).fit()\nmodel.summary()","8da73cac":"predictions = model.get_forecast(5,alpha = 0.95)\nplt.figure(figsize=(15,10))\nplt.plot(np.exp(train))\nplt.plot(np.exp(predictions.predicted_mean))\nplt.plot(np.exp(test))\nconf= predictions.conf_int(alpha=0.05)\nupper = np.exp(conf['lower hosp_patients_per_million'])\nlower = np.exp(conf['upper hosp_patients_per_million'])\nplt.fill_between(upper.index, upper,lower, color='b', alpha=.1)","f9f90620":"size = int(len(hospitalized) * 0.66)\ntrain, test = hospitalized[0:size], hospitalized[size:len(hospitalized)]\nprediction = []\ndata = train.values\nfor t in test.values:\n    model = model = ARIMA(data,order= (2,1,2)).fit()\n    y = model.forecast()\n    prediction.append(y[0])\n    data = np.append(data, t)\ntest_res = pd.DataFrame(test)\ntest_res['preds'] = prediction","077600b2":"plt.figure(figsize=(15,6))\nplt.plot(np.exp(train))\nplt.plot(np.exp(test_res))","2b277afd":"corr = df.corr()\nhospcorr = corr['hosp_patients_per_million']\nhospcorr = hospcorr[np.abs(hospcorr)>0.4]\nhospcorr.sort_values()","a6a61b34":"exogfeats = df[['new_deaths_smoothed_per_million','people_vaccinated','total_cases_per_million']]","08e93199":"exogfeats = exogfeats.resample('W-MON').mean()\nexogfeats = exogfeats.iloc[(exogfeats.index >= hospitalized.first_valid_index()) & (exogfeats.index<= hospitalized.last_valid_index())]","40645398":"exogfeats[exogfeats['people_vaccinated'].isna()]\nexogfeats['people_vaccinated'].plot()","27d73db4":"exogfeats['people_vaccinated']  = exogfeats['people_vaccinated'].fillna(0)","440aaa96":"fig, ax = plt.subplots(3, 1, figsize=(12, 8), tight_layout=True)\nexogfeats.plot(ax=ax, subplots=True, rot=60)","49cf3368":"model = ARIMA(hospitalized,order= (2,1,2),exog=exogfeats).fit()\npredictions = model.predict()\nmodel.summary()","24d8efaf":"plt.figure(figsize=(15,6))\nplt.legend([\"a\",\"b\"])\nplt.plot(hospitalized)\nplt.plot(predictions[1:])\nplt.show()","6d495c31":"test_length = 5\ntrain = hospitalized[:-test_length]\ntest = hospitalized[-test_length:]\ntrain_exog = exogfeats[:-test_length]\ntest_exog = exogfeats[-test_length:]\nmodel = ARIMA(train,order= (2,1,2),exog=train_exog).fit()","95866c09":"predictions = model.get_forecast(5,exog = test_exog,alpha = 0.95)\nplt.figure(figsize=(15,10))\nplt.plot(np.exp(train))\nplt.plot(np.exp(predictions.predicted_mean))\nplt.plot(np.exp(test))\nconf= predictions.conf_int(alpha=0.05)\nupper = np.exp(conf['lower hosp_patients_per_million'])\nlower = np.exp(conf['upper hosp_patients_per_million'])\nplt.fill_between(upper.index, upper,lower, color='b', alpha=.1)","dad31785":"# **3. ARIMA and parameter selection** <a class=\"anchor\" id=\"3\"><\/a>\n\nNow that our p-value is less than 0.05, and that 1 difference is enough to make the variable stationary we'll show its *ACF* and *PACF* plots.","57db17db":"We group it weekly, since we have a lot of missing values, and, on the other hand, enough values to not miss that much information with the transformation. ","8a31e7d4":"The day before looks to be really important in the prediction, although our results still differ a lot from the original test values.","bfd40c58":"Looks like our p-value is higher than 0.05, so we can't reject the null hypothesis, meaning that our series isn't stationary yet. \n\nLet's check stationarity after reducing the difference.","1cc28e4a":"From the plots above, we can assume that the values for our ARIMA model are going to be p=2 (2 relevant lags in the PACF plot), q=2 (2 relevant lags in the ACF plot) and d = 1 (since we differenced the sample once).","d413985a":"New cases, deaths and vaccinations look to be the most important when it comes to predicting the number of hospitalized people.","bfcb7927":"# **1. Imports** <a class=\"anchor\" id=\"1\"><\/a>\n\nNothing really essential here, a couple of libraries for plotting, ARIMA model libraries, numpy and pandas.\n\nACF and PACF libraries are quite necessary to estimate the values of our model parameters.","ecfcfe60":"# **4. Using a walk-forward validation approach** <a class=\"anchor\" id=\"4\"><\/a>\n\nWalk-forward validation is a nice approach to have when we want to predict what's going to happen in the next time serie, using all the data that we have until that day training the model.\n\nLet's see how our model performs with walk forward validation.","0cd6b4cd":"Looks like it doesn't perform really well, our variable is probably affected by some **exogenous variables** rather than time itself.","cc6e8ec5":"We'll split the dataset into train and test and see how the model performs.","f8801f0a":"# Using ARIMA Model to predict hospitalized people in Spain","d48c7139":"<a class=\"anchor\" id=\"0.1\"><\/a>\n# **Table of Contents**\n\n\n\n1.\t[Imports](#1)\n2.\t[Preprocessing](#2)\n3.\t[ARIMA and parameter selection](#3)\n4.\t[Using a walk-forward validation approach](#4)\n5.\t[Adding exogenous variables to the model](#5)\n\n","0908239a":"There are still some missing values at the begginning, we'll drop them since there probably weren't any Covid19 hospitalized patients registered.","54c15c42":"We'll check for stationarity after applying the logarithm.","d59dde6c":"Our BIC is a little higher, but it doesn't mean that our model is going to be worse at fitting, let's check the results.","597636a1":"# **6. Conclusion** <a class=\"anchor\" id=\"6\"><\/a>\n\nEven if it's look like Covid19 waves are time dependant (for instance, some stations like summer should indeed increase the number of cases), it's undeniable that some exogenous variables like number of vaccinated people, deaths and new cases affect the number of hospitalized people.\n\nAbout the model performance, even if our BIC is a little higher, it looks like that, with the use of some exogenous variables, it started performing a lot better.","b2bfa5bf":"In this notebook, we'll analyze and attempt to predict the number of people that will get hospitalized in Spain (with time series) using ARIMA model.","54ea67d0":"Our model looks to perform well on train, but that means nothing to it's real performance.\n\nUsing train and test for validation, we'll try to predict 5 weeks and see the model performance.","e3245eef":"The first vaccine in Spain was received on 26 December, so we'd fill the missing weeks with 0's since the vaccine wasn't discovered yet.","2cc9f197":"Our sample looks to some have **heterocedasticity**, we'll have to fix that by applying a log transformation in order to apply ARIMA model.","7d9756e8":"# **5. Adding exogenous variables to the model** <a class=\"anchor\" id=\"5\"><\/a>\n\nAs we saw earlier, time series isn't enough to predict the number of people that will get hospitalized, indeed, there are some variables like the number of new cases that obviously should affect our target.\n\nLet's make use of some of those variables and see how our new results come off.\n\nFirst of all, we'll check the features that have some correlation with our target.","e56c20c1":"# **2. Preprocessing** <a class=\"anchor\" id=\"2\"><\/a>\n\nFirst, we'll read and inspect the data."}}