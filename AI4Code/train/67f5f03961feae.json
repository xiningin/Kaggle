{"cell_type":{"985abb5f":"code","8c59e6b7":"code","9d71ead6":"code","cdf7bf32":"code","bf1d1ca5":"code","6f15e169":"code","4cfe7195":"code","22b9156e":"code","8396963a":"code","381777ee":"code","fde7a157":"code","e0e80c78":"code","7a6ea875":"code","c30fe6f0":"code","7b138736":"code","7b431186":"code","71e73c18":"code","10e25d57":"code","4c470571":"code","2999374e":"code","436d7a08":"code","d7fd13eb":"code","d7b1ade2":"code","2ccd8455":"code","8373d5b6":"code","eef2daad":"markdown"},"source":{"985abb5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8c59e6b7":"import pandas as pd","9d71ead6":"dataset = pd.read_csv('\/kaggle\/input\/uci-turkiye-student-evaluation-data-set\/turkiye-student-evaluation_generic.csv')","cdf7bf32":"dataset.head()","bf1d1ca5":"dataset.shape","6f15e169":"dataset.info()","4cfe7195":"dataset.isnull().any()","22b9156e":"dataset.describe()","8396963a":"import matplotlib.pyplot as plt\nimport seaborn as sns","381777ee":"sns.countplot(dataset['class'])\n#distribution of class more of 3 and 13 class","fde7a157":"plt.figure(figsize = (15,10))\nsns.countplot(dataset['class'],hue = dataset['nb.repeat'])\n#The value of repeat for the majority is 1","e0e80c78":"plt.figure(figsize = (15,10))\nsns.countplot(x='class', hue='difficulty', data=dataset)","7a6ea875":"sns.countplot(x='difficulty', hue='nb.repeat', data=dataset)","c30fe6f0":"plt.figure(figsize=(20, 20))\nsns.boxplot(data=dataset.iloc[:,5:31 ])\n#Most of the questions related to the instructor has higher range with less spread","7b138736":"data=dataset.iloc[:,5:]\ndata","7b431186":"#Before performing PCA it is important to perform standard scaling did not do here as all the data was in same scale\nfrom sklearn.decomposition import PCA \n\npca = PCA(n_components = None) \ndata = pca.fit_transform(data) \nexplained_variance = pca.explained_variance_ratio_","71e73c18":"explained_variance","10e25d57":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 10):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(data)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 10), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()\n#The number of cluster by elbow method seems to be 2","4c470571":"kmeans = KMeans(n_clusters = 3, init = 'k-means++')\ny_kmeans = kmeans.fit_predict(data)\n\n# Visualising the clusters\nplt.scatter(data[y_kmeans == 0, 0], data[y_kmeans == 0, 1], s = 100, c = 'yellow', label = 'Cluster 1')\nplt.scatter(data[y_kmeans == 1, 0], data[y_kmeans == 1, 1], s = 100, c = 'green', label = 'Cluster 2')\nplt.scatter(data[y_kmeans == 2, 0], data[y_kmeans == 2, 1], s = 100, c = 'red', label = 'Cluster 3')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'blue', label = 'Centroids')\nplt.title('Clusters of students')\nplt.xlabel('PCA 1')\nplt.ylabel('PCA 2')\nplt.legend()\nplt.show()","2999374e":"df_cluster = pd.DataFrame(y_kmeans,columns = ['Cluster'])\ndataset = dataset.join(df_cluster)","436d7a08":"dataset.Cluster.value_counts().plot(kind = 'bar')","d7fd13eb":"import collections\ncollections.Counter(y_kmeans)","d7b1ade2":"#Now ploting the dendogram for hirearchial clustering\nimport scipy.cluster.hierarchy as sch\ndendrogram = sch.dendrogram(sch.linkage(data, method = 'ward'))\nplt.title('Dendrogram')\nplt.xlabel('questions')\nplt.ylabel('Euclidean distances')\nplt.show()","2ccd8455":"#From the dendogram we can see the appropriate cluster is 2 as the largest vertical distance in the dendogram\n#passes through the lines is 2\n# Fitting Hierarchical Clustering to the dataset\nfrom sklearn.cluster import AgglomerativeClustering\nhc = AgglomerativeClustering(n_clusters = 2, affinity = 'euclidean', linkage = 'ward')\ny_hc = hc.fit_predict(data)\nX = data\n# Visualising the clusters\nplt.scatter(X[y_hc == 0, 0], X[y_hc == 0, 1], s = 100, c = 'yellow', label = 'Cluster 1')\nplt.scatter(X[y_hc == 1, 0], X[y_hc == 1, 1], s = 100, c = 'red', label = 'Cluster 2')\nplt.title('Clusters of STUDENTS')\nplt.xlabel('PCA 1')\nplt.ylabel('PCA 2')\nplt.legend()\nplt.show()","8373d5b6":"dataset = dataset.join(pd.DataFrame(y_hc,columns = ['CLuster2']))","eef2daad":"Attribute Information: instr: Instructor's identifier; values taken from {1,2,3} class: Course code (descriptor); values taken from {1-13} repeat: Number of times the student is taking this course; values taken from {0,1,2,3,...} attendance: Code of the level of attendance; values from {0, 1, 2, 3, 4} difficulty: Level of difficulty of the course as perceived by the student; values taken from {1,2,3,4,5} Q1: The semester course content, teaching method and evaluation system were provided at the start. Q2: The course aims and objectives were clearly stated at the beginning of the period. Q3: The course was worth the amount of credit assigned to it. Q4: The course was taught according to the syllabus announced on the first day of class. Q5: The class discussions, homework assignments, applications and studies were satisfactory. Q6: The textbook and other courses resources were sufficient and up to date. Q7: The course allowed field work, applications, laboratory, discussion and other studies. Q8: The quizzes, assignments, projects and exams contributed to helping the learning. Q9: I greatly enjoyed the class and was eager to actively participate during the lectures. Q10: My initial expectations about the course were met at the end of the period or year. Q11: The course was relevant and beneficial to my professional development. Q12: The course helped me look at life and the world with a new perspective. Q13: The Instructor's knowledge was relevant and up to date. Q14: The Instructor came prepared for classes. Q15: The Instructor taught in accordance with the announced lesson plan. Q16: The Instructor was committed to the course and was understandable. Q17: The Instructor arrived on time for classes. Q18: The Instructor has a smooth and easy to follow delivery\/speech. Q19: The Instructor made effective use of class hours. Q20: The Instructor explained the course and was eager to be helpful to students. Q21: The Instructor demonstrated a positive approach to students. Q22: The Instructor was open and respectful of the views of students about the course. Q23: The Instructor encouraged participation in the course. Q24: The Instructor gave relevant homework assignments\/projects, and helped\/guided students. Q25: The Instructor responded to questions about the course inside and outside of the course. Q26: The Instructor's evaluation system (midterm and final questions, projects, assignments, etc.) effectively measured the course objectives. Q27: The Instructor provided solutions to exams and discussed them with students. Q28: The Instructor treated all students in a right and objective manner. Q1-Q28 are all Likert-type, meaning that the values are taken from {1,2,3,4,5}\n"}}