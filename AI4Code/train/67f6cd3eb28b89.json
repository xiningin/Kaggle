{"cell_type":{"ec167a5b":"code","f266064c":"code","251361dd":"code","af38de97":"code","523613c8":"code","7b916310":"code","c0d87b49":"code","d4bf2750":"code","395fcea3":"code","471f6c5f":"markdown","74e99bab":"markdown","72b7fb20":"markdown","ea206a7a":"markdown","1d5cf697":"markdown","393682db":"markdown","1e818284":"markdown","bb50e0cf":"markdown","304d6cce":"markdown","957e3969":"markdown"},"source":{"ec167a5b":"import os\nimport pandas as pd\nimport cv2\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport json\nfrom collections import Counter","f266064c":"path = '\/kaggle\/input\/iwildcam2021-fgvc8\/'\nos.listdir(path)","251361dd":"os.listdir(path+'metadata')","af38de97":"with open(path+'metadata\/'+'iwildcam2021_train_annotations.json') as f:\n    train_data = json.load(f)\nwith open(path+'metadata\/'+'iwildcam2021_test_information.json') as f:\n    test_data = json.load(f)\nwith open(path+'metadata\/'+'iwildcam2021_megadetector_results.json') as f:\n    results_data = json.load(f)","523613c8":"train_image_data = pd.json_normalize(train_data['images'])\ntrain_image_data.index=train_image_data['id']","7b916310":"def plot_examples():\n    fig, axs = plt.subplots(4, 4, figsize=(20, 20))\n    fig.subplots_adjust(hspace = .1, wspace=.1)\n    \n    axs = axs.ravel()\n    for i in range(16):\n        img = cv2.imread(path+'train\/'+results_data['images'][i]['id']+'.jpg')\n        axs[i].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n        if len(results_data['images'][i]['detections']) > 0:\n            \n            width = train_image_data.loc[results_data['images'][i]['id'], 'width']\n            height = train_image_data.loc[results_data['images'][i]['id'], 'height']\n            for dets in range(len(results_data['images'][i]['detections'])):\n                bbox = results_data['images'][i]['detections'][dets]['bbox']            \n                p = matplotlib.patches.Rectangle((width*bbox[0], height*bbox[1]),\n                                              width*bbox[2],\n                                              height*bbox[3],\n                                              ec='r', fc='none', lw=2.)\n                axs[i].add_patch(p)\n                axs[i].set_title('category '+results_data['images'][i]['detections'][dets]['category'])\n        else:\n            axs[i].set_title('no detections')\n        axs[i].set_xticklabels([])\n        axs[i].set_yticklabels([])\n    plt.show()","c0d87b49":"print('Number train images:', len(os.listdir(path+'train\/')))\nprint('Number test images:', len(os.listdir(path+'test\/')))","d4bf2750":"plot_examples()","395fcea3":"train_cate = []\nfor row in range(len(results_data['images'])):\n    if len(results_data['images'][row]['detections']) > 0:\n        for dets in range(len(results_data['images'][row]['detections'])):\n            train_cate.append(results_data['images'][row]['detections'][dets]['category'])\n    else:\n        train_cate.append('no_detection')\nlabel_dist = Counter(train_cate)\nlabel_dist","471f6c5f":"## Plot Image And Bounding Boxes","74e99bab":"# Libraries","72b7fb20":"# Path","ea206a7a":"# EDA","1d5cf697":"# Functions\nWe define some helper functions.","393682db":"# Overview","1e818284":"# Intro\nWelcome to the [iWildcam 2021 - FGVC8](https:\/\/www.kaggle.com\/c\/iwildcam2021-fgvc8) compedition.\n![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/24911\/logos\/header.png)\n\nInformations about the data structure you will get on the [github](https:\/\/github.com\/visipedia\/iwildcam_comp\/blob\/master\/readme.md) repository.\n\n<span style=\"color: royalblue;\">Please vote the notebook up if it helps you. Feel free to leave a comment above the notebook. Thank you. <\/span>","bb50e0cf":"## Distribution Of Categories","304d6cce":"# Load Data","957e3969":"Write image metadata into dataframe:"}}