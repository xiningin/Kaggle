{"cell_type":{"a1bb334e":"code","b0f7c560":"code","87080d3b":"code","78d1b591":"code","7080720d":"code","e2d1be20":"code","949849a3":"code","1d113f81":"code","a1777582":"code","26680f51":"code","b09aacbb":"code","6eb84f56":"code","c73132f4":"code","e34d61dc":"code","94c8a226":"code","5b38c94e":"code","7f2e2cf2":"code","93bfb3ac":"code","e7ba0ea4":"code","eb170dea":"code","9f2f2025":"code","d401f9bb":"code","b81cb859":"markdown","e1d7a559":"markdown"},"source":{"a1bb334e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b0f7c560":"data =pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv') ","87080d3b":"data.head(10) #dataframeniin ilk 10 sat\u0131r\u0131ndaki bilgilere bak\u0131yoruz","78d1b591":"data.info() #data hakk\u0131nda bilgi al\u0131yoruz","7080720d":"data","e2d1be20":"data.columns","949849a3":"data.corr()","1d113f81":"f,ax = plt.subplots(figsize=(18, 18)) #tablonun boyutunu ayarl\u0131yoruz\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()#amac\u0131m\u0131z =veri stunlar\u0131n\u0131n birbirleri ile olan iliskisine bakmak eger 1 se ve bire yak\u0131nsa=dogru orant\u0131","a1777582":"#data colonlar\u0131 aras\u0131nda baglant\u0131ya bak\u0131yoruz.\ndata.V1.plot(kind = 'line', color = 'g',label = 'V1',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.V2.plot(color = 'r',label = 'V2',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot =V1-V2 yaz\u0131s\u0131n\u0131 tablonun sag \u00fcst\u00fcne yazd\u0131r\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n","26680f51":"# Scatter plot\n# X=V1 ,Y=V2\ndata.plot(kind ='scatter',x='V1',y='V2',alpha=0.5,color='blue')\nplt.xlabel('v1')\nplt.ylabel('v2')\nplt.title('Uzaydan Sayg\u0131lar')\n\n","b09aacbb":"#histogram\n#bins =number of bar in figure = veri de sectigim kolonda verilerin oranlar\u0131\ndata.V2.plot(kind ='hist',bins =50,figsize =(12,12))","6eb84f56":"data.V2.plot(kind ='hist')\nplt.clf() #histogram\u0131 temizliyoruz =0'l\u0131yoruz\n#we cannot see plot due to clf()","c73132f4":"#create dictionary\ndictionary ={'space':'Hello','Mars':'why'}\nprint(dictionary.keys())\nprint(dictionary.values())","e34d61dc":"dictionary['space']='sat\u00fcrn' #dictionary deki keys'in valuesini de\u011fi\u015ftirdim\nprint(dictionary)\ndictionary['leptop']='casper' #dictionary'e yeni keys ve deger ekliyorum\nprint(dictionary)\n#del dictionary['Mars'] #'Mars' keysini dictionary den siliyorum\nprint(dictionary)\nprint('space' in dictionary) #'space' dictinory i\u00e7inde varsa true d\u00f6ner yoksa false =bu sadece keys ler i\u00e7in\ndictionary.clear() #dictionary'i temizliyorum =i\u00e7idneki verileri\nprint(dictionary)","94c8a226":"series =data['V1']\nprint(series)\nprint('uzay')\ndataframe=data[['V1']]\nprint(dataframe)\nprint('-------------------')\nseries2 =data[['V1','V2']]\nprint(series2)","5b38c94e":"x=data['V1'] > 2.4 \nprint(data[x])##v1 kolonundaki degeri = 2.4 den b\u00fcy\u00fck degerli sat\u0131rlar\u0131 getir","7f2e2cf2":"data[np.logical_and(data['V1']>2.3 ,data['V2']>-0.5)] #iki sart\u0131 saglayanlar\u0131 yazd\u0131r","93bfb3ac":"data[(data['V1']>2.3) &(data['V2'] > -0.3)]","e7ba0ea4":"i=0 #1-4 aras\u0131 say\u0131lar\u0131 yazd\u0131ran while\nwhile i !=5:\n    print(i)\n    i+=1\n","eb170dea":"lis =[1,2,3,4,5] #dizi elemalar\u0131ni yazdiren for\nfor i in lis:\n    print(i)","9f2f2025":"for index,i in enumerate(lis): #for ile dizi indisi ve kars\u0131l\u0131k gelen degerin yaz\u0131m\u0131\n    print(index,' : ',i )\n    \n","d401f9bb":"dictionary={'T\u00fcrkiye':'Ankara','Almanya':'berlin','Abd':'Washington'}\nprint(dictionary.keys())\nfor index,i in dictionary.items():\n    print(index,' : ',i)\n    ","b81cb859":"### Scatter \n* Noktal\u0131 grafik olusturmam\u0131z\u0131 sagl\u0131yor \n* ve iki kolon aras\u0131 baglant\u0131y\u0131 \u00e7\u0131karmak i\u00e7in grafiklememize yar\u0131yor\n","e1d7a559":"# PANDAS\n* Series =1*.. gibi tek bir kolon \u00fczerinde i\u015flem yapmam\u0131za olanak saglar = [v1] gibi g\u00f6sterilir.\n* DataFrame ise 4*5 gibi birrden fazla kolon \u00fczerinde i\u015flem yapmam\u0131za olanak saglar = [[v1,v2]] gibi g\u00f6sterilir.\n"}}