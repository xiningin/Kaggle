{"cell_type":{"451ae5e6":"code","b29aec45":"code","053d58fe":"code","db7c8d86":"code","23119f46":"code","12d11949":"code","e41e995c":"markdown","0feda181":"markdown","1e15291c":"markdown","cd31e17d":"markdown","cd367f89":"markdown","267d7142":"markdown"},"source":{"451ae5e6":"import pandas as pd","b29aec45":"df = pd.read_csv(\"..\/input\/logistic-regression\/Social_Network_Ads.csv\")\ndf.head()","053d58fe":"# Dropping irrelevant columns (in our case, 'User ID' is just creating noise while not really bringing valuable insight to the table)\ndf.drop([\"User ID\"], axis = 1).values\n\n# Replacing values\ndf = df.replace(\"Male\", 1)\ndf = df.replace(\"Female\", 2)\n\ndf.head()","db7c8d86":"from sklearn.model_selection import train_test_split\n\n# Columns used as predictors\nX = df.drop([\"Purchased\"], axis = 1).values\ny = df[\"Purchased\"].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0, test_size = 0.15)","23119f46":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(X_train)\n\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","12d11949":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\n\nprint(model.score(X_test, y_test))","e41e995c":"# Purchase Prediction through Logistic Regression","0feda181":"#### Scaling data","1e15291c":"#### Applying Logistic Regression","cd31e17d":"#### Defining X and y and Splitting data","cd367f89":"#### Loading and Displaying data","267d7142":"#### Pre-Processing raw data"}}