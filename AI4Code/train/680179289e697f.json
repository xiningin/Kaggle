{"cell_type":{"30270152":"code","2243ced4":"code","661fc586":"code","808b3eee":"code","ce9aacfc":"code","9b801726":"code","b306e5f3":"code","8dde8753":"code","fdff9b96":"code","4e0ce3a7":"code","d5b45a52":"markdown","962194cc":"markdown","fcfb4437":"markdown","a54cdf3c":"markdown","dfd089d6":"markdown","5722bb90":"markdown","cb306de7":"markdown","c7871744":"markdown"},"source":{"30270152":"from keras.applications.resnet50 import ResNet50, preprocess_input\nfrom keras.layers import Dense, Dropout\nfrom keras.models import Model\nfrom keras.optimizers import Adam, SGD\nfrom keras.preprocessing.image import ImageDataGenerator, image\nfrom keras.callbacks import EarlyStopping, ModelCheckpoint\nfrom sklearn.metrics import confusion_matrix, classification_report, accuracy_score\nfrom keras import backend as K\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import ImageFile\nImageFile.LOAD_TRUNCATED_IMAGE = True","2243ced4":"N_CLASSES = 10\nEPOCHS = 15\nPATIENCE = 5\nTRAIN_PATH= '..\/input\/training\/training\/'\nVALID_PATH = '..\/input\/validation\/validation\/'\nMODEL_CHECK_WEIGHT_NAME = 'resnet_monki_v1_chk.h5'","661fc586":"K.set_learning_phase(0)\nmodel = ResNet50(input_shape=(224,224,3),include_top=False, weights='imagenet', pooling='avg')\nK.set_learning_phase(1)\nx = model.output\nx = Dense(512, activation='relu')(x)\nx = Dropout(0.5)(x)\nx = Dense(512, activation='relu')(x)\nx = Dropout(0.5)(x)\noutput = Dense(N_CLASSES, activation='softmax', name='custom_output')(x)\ncustom_resnet = Model(inputs=model.input, outputs = output)\n\nfor layer in model.layers:\n    layer.trainable = False\n\ncustom_resnet.compile(Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy'])\ncustom_resnet.summary()","808b3eee":"datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\ntraingen = datagen.flow_from_directory(TRAIN_PATH, target_size=(224,224), batch_size=32, class_mode='categorical')\nvalidgen = datagen.flow_from_directory(VALID_PATH, target_size=(224,224), batch_size=32, class_mode='categorical', shuffle=False)","ce9aacfc":"es_callback = EarlyStopping(monitor='val_acc', patience=PATIENCE, mode='max')\nmc_callback = ModelCheckpoint(filepath=MODEL_CHECK_WEIGHT_NAME, monitor='val_acc', save_best_only=True, mode='max')\ntrain_history = custom_resnet.fit_generator(traingen, steps_per_epoch=len(traingen), epochs= EPOCHS, validation_data=traingen, validation_steps=len(validgen), verbose=2, callbacks=[es_callback, mc_callback])\n","9b801726":"plt.figure(1)\nplt.subplot(221)\nplt.plot(train_history.history['acc'])\nplt.plot(train_history.history['val_acc'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train accuracy','validation accuracy'])\n\nplt.subplot(222)\nplt.plot(train_history.history['loss'])\nplt.plot(train_history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epochs')\nplt.legend(['train loss', 'validation loss'])\n\nplt.show()","b306e5f3":"custom_resnet.load_weights(MODEL_CHECK_WEIGHT_NAME)","8dde8753":"predict = custom_resnet.predict_generator(validgen, steps=len(validgen), verbose=1)\ntest_labels = validgen.classes\nconfusion_matrix(test_labels, predict.argmax(axis=1))\n","fdff9b96":"cr_labels = list(validgen.class_indices.keys())\nclassification_report(test_labels, predict.argmax(axis=1), target_names=cr_labels)","4e0ce3a7":"accuracy_score(test_labels,predict.argmax(axis=1))","d5b45a52":"**4. Load dataset to be used**","962194cc":"**1. Importing required Library**","fcfb4437":"**5. Train Model**\nwe use ModelCheckpoint to save the best model based on validation accuracy\n","a54cdf3c":"**2. Define some constant needed throughout the script**","dfd089d6":"hello kagglers, this is my first kernel on kaggle. I would like to show my Monkey Classifier using ResNet-50. I built it using Keras pre trained model, with difference on last few layer. Feel free to write any advice for on the comment section, thanks!","5722bb90":"**3. Define model to be used**\nwe freeze the pre trained resnet model weight, and add few layer on top of it to utilize our custom dataset\n","cb306de7":"**7. Print validation confusion matrix, classification report, and accuracy**","c7871744":"**7. Load Last Checkpoint Weight**"}}