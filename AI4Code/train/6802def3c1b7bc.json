{"cell_type":{"5e30c015":"code","b8aa5e78":"code","929f0699":"code","80060f6b":"code","b34e97e2":"code","ee4b226c":"code","f8500b83":"code","dad998fd":"code","bc390135":"code","e8084b41":"code","3c638def":"code","6911c6dc":"code","390532e6":"code","b9d08060":"code","f87b6053":"markdown","b821c95b":"markdown","a2383c0e":"markdown"},"source":{"5e30c015":"# PACKAGES\n\n# standard\nimport numpy as np\nimport pandas as pd\n\n# plots\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# NLP\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nfrom nltk.corpus import stopwords\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\n\n\npd.set_option('display.max_colwidth', 100) # more room for text in data frame views","b8aa5e78":"# load data\ndf = pd.read_csv('..\/input\/sentiment-analysis-data\/Restaurant_Reviews.tsv', sep='\\t')","929f0699":"n = df.shape[0]\nprint('Number of rows:', n)","80060f6b":"# convert text to upper case\ndf.Review = df.Review.str.upper()\ndf.head()","b34e97e2":"# plot distribution of positive\/negative reviews\ndf.Liked.value_counts().plot(kind='bar')\nplt.grid()\nplt.show()","ee4b226c":"sia = SentimentIntensityAnalyzer()\n\ndf['sent_positive'] = 0\ndf['sent_neutral'] = 0\ndf['sent_negative'] = 0\ndf['sent_compound'] = 0\n\nfor i in range(0,n):\n    current_text = df.Review[i]\n    sent = sia.polarity_scores(current_text)\n    df.loc[i, 'sent_positive'] = sent['pos']\n    df.loc[i, 'sent_neutral'] = sent['neu']\n    df.loc[i, 'sent_negative'] = sent['neg']\n    df.loc[i, 'sent_compound'] = sent['compound']","f8500b83":"df","dad998fd":"# compare values for positive vs negative reviews\nsns.violinplot(data=df, x='Liked', y='sent_compound')\nplt.grid()\nplt.show()\n\nsns.violinplot(data=df, x='Liked', y='sent_positive')\nplt.grid()\nplt.show()\n\nsns.violinplot(data=df, x='Liked', y='sent_negative')\nplt.grid()\nplt.show()","bc390135":"# highest sentiment scores\ndf.nlargest(n=10, columns='sent_compound')","e8084b41":"# lowest sentiment scores\ndf.nsmallest(n=10, columns='sent_compound')","3c638def":"# split in positive\/negative reviews\ndf_pos = df[df.Liked==1]\ndf_neg = df[df.Liked==0]","6911c6dc":"# define stopwords\nstopwords_cloud = set(STOPWORDS)","390532e6":"# show wordcloud of POSITIVE reviews\ntext = \" \".join(xx for xx in df_pos.Review)\nwordcloud = WordCloud(stopwords=stopwords_cloud, max_font_size=50, max_words=250,\n                      width = 600, height = 400,\n                      background_color='black').generate(text)\nprint('POSITIVE REVIEWS:')\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis('off')\nplt.show()","b9d08060":"# show wordcloud of NEGATIVE reviews\ntext = \" \".join(xx for xx in df_neg.Review)\nwordcloud = WordCloud(stopwords=stopwords_cloud, max_font_size=50, max_words=250,\n                      width = 600, height = 400,\n                      background_color='black').generate(text)\nprint('NEGATIVE REVIEWS:')\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis('off')\nplt.show()","f87b6053":"<a id='1'><\/a>\n# Sentiment Analytics","b821c95b":"<a id='2'><\/a>\n# Wordclouds","a2383c0e":"# Table of Contents\n* [Sentiment Analytics](#1)\n* [Wordclouds](#2)"}}