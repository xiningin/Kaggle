{"cell_type":{"daebda3b":"code","81483717":"code","425e4c2f":"code","c4589677":"code","c0b149eb":"code","c5d49602":"code","e551f4ed":"code","f25c39d1":"code","a33132bd":"code","5da8b934":"code","45102217":"code","77f20de8":"code","942c9209":"code","367fbfc3":"code","58610ade":"markdown","a9b424ee":"markdown","c9fa7fc5":"markdown","88b4f45e":"markdown","39a42c7a":"markdown","af8d1402":"markdown","18f01d5f":"markdown","07a05d2e":"markdown","0cd6e419":"markdown","525db486":"markdown","c7ed819e":"markdown","94eea611":"markdown","ed832df0":"markdown"},"source":{"daebda3b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = pd.read_csv('\/kaggle\/input\/elementary-school-admission-romania-2014\/elementary_school_registration_2014.csv', encoding = \"ISO-8859-1\")\ndf.drop(['app_type'], axis=1, inplace=True)\nprint(df.head())","81483717":"# CHECK FOR INCOMPLETE DATA\nfig, ax = plt.subplots(figsize=(10,5))\nsns.heatmap(df.isnull(), ax=ax)\nplt.show()","425e4c2f":"sns.countplot(data=df, x='pupil_env', palette='rainbow')\nplt.title('Pupils located Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","c4589677":"sns.countplot(x=df['after_school'], data=df, hue='pupil_env', palette='rainbow')\nplt.title('Pupils going to after school Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","c0b149eb":"sns.countplot(x=df['single_parent'], data=df, hue='pupil_env', palette='rainbow')\nplt.title('Pupils with single_parent Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","c5d49602":"sns.countplot(x=df['orphan_institution'], data=df, hue='pupil_env', palette='rainbow')\nplt.title('Pupils - orphan_institution - Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","e551f4ed":"fig, ax = plt.subplots(figsize=(14,5))\nsns.countplot(ax=ax, data=df, x='teaching_language')\nplt.title('Pupils located Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","f25c39d1":"df['admission_stage'][df['admission_stage']=='I-1'] = 'First 1'\ndf['admission_stage'][df['admission_stage']=='I-2'] = 'First 2'\ndf['admission_stage'][df['admission_stage']=='I-3'] = 'First 3'\ndf['admission_stage'][df['admission_stage']=='II'] = 'Second'\ndf['admission_stage'][df['admission_stage']=='I-1'] = 'Adjust'\nsns.countplot(x=df['admission_stage'], data=df, hue='pupil_env', palette='PiYG_r')\nplt.title('Pupils admision stage Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","a33132bd":"# ['Limba rom\u00e2n?' 'Limba german?' 'Limba maghiar?' 'Limba slovac?', 'Limba rromani' 'Limba croat?' 'Limba s\u00e2rb?' 'Limba ucrainean?']\ndf['teaching_language'][df['teaching_language']=='Limba rom\u00e2n?'] = 'RO'\ndf['teaching_language'][df['teaching_language']=='Limba german?'] = 'DE'\ndf['teaching_language'][df['teaching_language']=='Limba maghiar?'] = 'HU'\ndf['teaching_language'][df['teaching_language']=='Limba slovac?'] = 'SK'\ndf['teaching_language'][df['teaching_language']=='Limba rromani'] = 'rromani'\ndf['teaching_language'][df['teaching_language']=='Limba croat?'] = 'CRO'\ndf['teaching_language'][df['teaching_language']=='Limba s\u00e2rb?'] = 'SRB'\ndf['teaching_language'][df['teaching_language']=='Limba ucrainean?'] = 'UKR'\nfig, ax = plt.subplots(figsize=(14,6))\nsns.countplot(ax=ax, x=df['teaching_language'][df['teaching_language']!='RO'], data=df, hue='pupil_env', palette='PiYG_r')\nplt.title('Pupils teaching language (other than RO) Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","5da8b934":"df_env = df[['pupil_env', 'school_env']]\npt = df_env.pivot_table(index='pupil_env', columns='school_env', aggfunc='size')\nsns.heatmap(data=pt, annot=True, fmt='g', cmap='RdBu', )\nplt.show()","45102217":"df2 = pd.read_csv('\/kaggle\/input\/elementary-school-admission-romania-2014\/school_network.csv', encoding = \"ISO-8859-1\")\nprint(df.head())\n['no', 'judet', 'name', 'SIRUES', 'school_type', 'school_type2', 'school_category', 'education_form', 'teaching_language']\ndf = pd.merge(df, df2[['SIRUES', 'judet', 'school_category']], on='SIRUES')\n['Gimnaziu ( clasele I-VIII sau I-X)' 'Grup ?colar' 'Colegiu' 'Liceu', '?coal? special?' 'Scoal? primar? (clasele I-IV)' 'Gradini??'\n 'Alte ( casa corp didactic, inspectorat ?colar, etc)', 'Scoal? postliceal?']\ndf['school_category'][df['school_category']=='Gimnaziu ( clasele I-VIII sau I-X)'] = 'Gimnaziu'\ndf['school_category'][df['school_category']=='Grup ?colar'] = 'Grup scolar'\ndf['school_category'][df['school_category']=='?coal? special?'] = 'Scoala speciala'\ndf['school_category'][df['school_category']=='Scoal? primar? (clasele I-IV)'] = 'Scoala primara'\ndf['school_category'][df['school_category']=='Gradini??'] = 'Gradinita'\ndf['school_category'][df['school_category']=='Alte ( casa corp didactic, inspectorat ?colar, etc)'] = 'Alte'\ndf['school_category'][df['school_category']=='Scoal? postliceal?'] = 'Scoala postliceala'\nfig, ax = plt.subplots(figsize=(14,6))\nsns.countplot(ax=ax, x=df['school_category'], data=df, hue='pupil_env', palette='PiYG_r')\nplt.title('Pupils - school_category - Urban vs Rural')\nplt.grid()\nplt.legend(loc='upper right')\nplt.show()","77f20de8":"import json\nfrom plotly.offline import plot\nimport plotly.express as px\nwith open('\/kaggle\/input\/romania-counties\/romania.geojson.json', 'r') as response:\n    counties = json.load(response)\n\ndf_counties = pd.read_csv('\/kaggle\/input\/romania-counties\/counties_id.csv')\ndf_counties = df_counties.drop(['date','populatie'], axis=1)\ndf_counties = df_counties.rename(columns={'Region': 'judet'})\ndf['judet'][df['judet']=='D\u00e2mbovita'] = 'Dambovita'\ndf['judet'][df['judet']=='Satu-Mare'] = 'Satu Mare'\ndf['judet'][df['judet']=='V\u00e2lcea'] = 'Valcea'\ndf = df.merge(df_counties[['judet','id']], on='judet', how='inner',)\ndf['pupils_per_county'] = df.groupby('id')['judet'].transform('count')","942c9209":"# Pupils distribution per counties\nfig = px.choropleth_mapbox(df,\n                           geojson=counties,\n                           featureidkey=str(\"properties.cartodb_id\"),\n                           locations='id',\n                           color='pupils_per_county',\n                           hover_name='pupils_per_county',\n                           hover_data={\"pupils_per_county\": False, 'id':False, \"judet\": True},\n                           color_continuous_scale=\"greens\",\n                           color_continuous_midpoint=0,\n                           range_color=(-5000,max(df['pupils_per_county'])),\n                           mapbox_style=\"carto-darkmatter\",\n                           zoom=5.5, center={\"lat\": 46, \"lon\": 25.5},\n                           opacity=0.8,\n                           labels={'pupils_per_county': 'Pupils'},\n                           # animation_frame='date',\n                           )\nfig.update_geos(fitbounds=\"locations\", visible=False)\nfig.update_layout(margin={\"r\": 0, \"t\": 0, \"l\": 0, \"b\": 0},\n    annotations=[\n        dict(\n            text='Pupils distribution per counties',\n            font=dict(\n                family='sans-serif',\n                size=25,\n                color='#222'\n            ),\n            bgcolor='#E2E2E2',\n            bordercolor='#FFFFFF',\n            borderwidth=2,\n            x=0.02,\n            y=0.9,\n            xanchor=\"left\",\n            yanchor=\"bottom\"\n        )])\nfig.show()","367fbfc3":"# Pupils distribution per counties\npt = df.pivot_table(index='judet', columns='ethnic', aggfunc='size', fill_value=0)\npt.drop(['Rom\u00e2n?'], axis=1, inplace=True)\npt['Total']= pt.sum(axis=1)\npt = pt.merge(df_counties, on='judet')\nfig = px.choropleth_mapbox(pt,\n                           geojson=counties,\n                           featureidkey=str(\"properties.cartodb_id\"),\n                           locations='id',\n                           color='Total',\n                           hover_name='Total',\n                           hover_data={\"Total\": False, 'id':False, 'judet':True},\n                           color_continuous_scale=\"greens\",\n                           color_continuous_midpoint=0,\n                           range_color=(0,max(pt['Total'])),\n                           mapbox_style=\"carto-darkmatter\",\n                           zoom=5.5, center={\"lat\": 46, \"lon\": 25.5},\n                           opacity=0.8,\n                           labels={'Total': 'Pupils'},\n                           # animation_frame='date',\n                           )\nfig.update_geos(fitbounds=\"locations\", visible=False)\nfig.update_layout(margin={\"r\": 0, \"t\": 0, \"l\": 0, \"b\": 0},\n    annotations=[\n        dict(\n            text='Pupils other ethnicity distribution per counties',\n            font=dict(\n                family='sans-serif',\n                size=25,\n                color='#222'\n            ),\n            bgcolor='#E2E2E2',\n            bordercolor='#FFFFFF',\n            borderwidth=2,\n            x=0.02,\n            y=0.9,\n            xanchor=\"left\",\n            yanchor=\"bottom\"\n        )])\nfig.show()","58610ade":"Matrix - Urban and Rural pupils enviroment versus Urban and Rural schools. We can see daily migration of pupils from U to R or viceversa","a9b424ee":"Check for incomplete data","c9fa7fc5":"Visualisation - Pupils distribution per counties","88b4f45e":"Create pivot table with ethnicity per counties and visualize the data","39a42c7a":"Visualisation - Pupils going to after school - Urban vs Rural","af8d1402":"Read the json file including counties coordinates. \nAdd to main dataframe the 'id' field for matching data to json file\n","18f01d5f":"Read the csv file and drop the unnecesary data","07a05d2e":"Visualisation - pupils distribution, Urban vs Rural","0cd6e419":"Merge main dataframe with the 'school network' csv file on 'SIRUES' code. Clean some data.\n\nVisualisation - Pupils - school_category - Urban vs Rural","525db486":"Visualisation - Pupils with single_parent Urban vs Rural","c7ed819e":"Visualisation - Pupils - orphan_institution - Urban vs Rural","94eea611":"Clean some data and visualisation for - Pupils admision stage Urban vs Rural","ed832df0":"Clean some data and visualisation for - Pupils teaching language (other than RO) Urban vs Rural"}}