{"cell_type":{"3fe596ce":"code","2eaedd5f":"code","47dfff99":"code","c39313b2":"code","5c35ea70":"code","f3cca11e":"code","b26a0bf9":"code","0db59de6":"code","fcbc3329":"code","10027afd":"code","676151ca":"code","296f48a2":"code","d8fe79f7":"code","0a9abca2":"code","e0e1ff02":"code","fc3f98b4":"code","9a9eb556":"code","769ce4d6":"code","c99f76ed":"code","e0cedbce":"code","a8c9be9a":"code","dc2b4eef":"code","972e1bed":"code","40b56744":"code","28215623":"code","da8bcdef":"code","fd3a4e90":"markdown","7e1cece6":"markdown","03987920":"markdown","c60c42fc":"markdown","9f717439":"markdown","09597f57":"markdown","22dd67f8":"markdown","58c85800":"markdown","77f21760":"markdown","ffa95fec":"markdown"},"source":{"3fe596ce":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Conv2D, MaxPool2D, Flatten, Activation\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.optimizers import RMSprop\nfrom keras.metrics import AUC \nimport matplotlib.image as mpimg\nimport cv2\nimport json\nimport os ","2eaedd5f":"# import train_dataset\ntrain_=pd.read_csv(\"..\/input\/cassava-leaf-disease-classification\/train.csv\")\ntrain_.head()","47dfff99":"# import real disease_names. \ndisease_names = open('..\/input\/cassava-leaf-disease-classification\/label_num_to_disease_map.json') # disease_name\ndisease_names = json.load(disease_names)\ntrain_['disease_name'] = train_['label'].apply(lambda x: disease_names[str(x)])\ntrain_.head()","c39313b2":"train_['disease_name'].unique() # cassava_leaf_disease","5c35ea70":"sns.countplot(train_['label'],palette=\"Greens\") # largest number of samples for label 3 \nplt.show()","f3cca11e":"train_['label'].value_counts().plot.pie(autopct='%1.1f%%',y=train_['label'])\nplt.show()","b26a0bf9":"df0 = train_[train_[\"label\"] == 0] # label 0 is Cassava Bacterial Blight (CBB)\ndf0.head(4)","0db59de6":"image_name=df0[df0['label']==0]['image_id'].iloc[3] \ndisease_name=df0[df0['label']==0]['disease_name'].iloc[3]\nimg = mpimg.imread(\"..\/input\/cassava-leaf-disease-classification\/train_images\/\"+image_name)\nimgplot = plt.imshow(img)\nplt.title(r\"$\\bf{\"+disease_name+ \"}$\"+'\\n'+image_name)\nplt.show()","fcbc3329":"df1 = train_[train_[\"label\"] == 1] # label 1 is Cassava Brown Streak Disease (CBSD)\ndf1.head(4)","10027afd":"image_name1=df1[df1['label']==1]['image_id'].iloc[3]\ndisease_name1=df1[df1['label']==1]['disease_name'].iloc[3]\nimg = mpimg.imread(\"..\/input\/cassava-leaf-disease-classification\/train_images\/\"+image_name1)\nimgplot = plt.imshow(img)\nplt.title(r\"$\\bf{\"+disease_name1+ \"}$\"+'\\n'+image_name1)\nplt.show()","676151ca":"df2 = train_[train_[\"label\"] == 2] # label 2 is Cassava Green Mottle (CGM)\ndf2.head(3)","296f48a2":"image_name2=df2[df2['label']==2]['image_id'].iloc[3]\ndisease_name2=df2[df2['label']==2]['disease_name'].iloc[3]\nimg = mpimg.imread(\"..\/input\/cassava-leaf-disease-classification\/train_images\/\"+image_name2)\nimgplot = plt.imshow(img)\nplt.title(r\"$\\bf{\"+disease_name2+ \"}$\"+'\\n'+image_name2)\nplt.show()","d8fe79f7":"df3 = train_[train_[\"label\"] == 3] # Label 3 is Cassava Mosaic Disease (CMD)\ndf3.head(3)","0a9abca2":"image_name3=df3[df3['label']==3]['image_id'].iloc[2]\ndisease_name3=df3[df3['label']==3]['disease_name'].iloc[2]\nimg = mpimg.imread(\"..\/input\/cassava-leaf-disease-classification\/train_images\/\"+image_name3)\nimgplot = plt.imshow(img)\nplt.title(r\"$\\bf{\"+disease_name3+ \"}$\"+'\\n'+image_name3)\nplt.show()","e0e1ff02":"df4 = train_[train_[\"label\"] == 4] # Label 4 is Healthy\ndf4.head(3)","fc3f98b4":"image_name4=df4[df4['label']==4]['image_id'].iloc[2]\ndisease_name4=df4[df4['label']==4]['disease_name'].iloc[2]\nimg = mpimg.imread(\"..\/input\/cassava-leaf-disease-classification\/train_images\/\"+image_name4)\nimgplot = plt.imshow(img)\nplt.title(r\"$\\bf{\"+disease_name4+ \"}$\"+'\\n'+image_name4)\nplt.show()","9a9eb556":"img.shape # Image Height : 600, Image Width : 800, channel : 3","769ce4d6":"img.size, img.max(),img.min() # Image size 1440000, Maximum RGB value 255, Minimum RGB value 0","c99f76ed":"train_['label'] = train_['label'].astype('str') \ntrain_path=\"..\/input\/cassava-leaf-disease-classification\"\ninput_shape=(512, 512, 3)\n\ntrain_datagen = ImageDataGenerator(validation_split = 0.3,\n        rescale=1.\/255,\n        shear_range=0.2,\n        rotation_range=90,\n        width_shift_range=0.1,\n        height_shift_range=0.1,\n        zoom_range=0.2,\n        horizontal_flip=True,\n        fill_mode=\"nearest\")\n\ntrain_generator = train_datagen.flow_from_dataframe(train_,\n                         directory = os.path.join(train_path, \"train_images\"),\n                         subset = \"training\",\n                         x_col = \"image_id\",\n                         y_col = \"label\",\n                         target_size = (512, 512),\n                         batch_size = 8,\n                         class_mode = \"sparse\")\n\n\nvalidation_datagen = ImageDataGenerator(validation_split = 0.3, rescale=1.\/255)\n\nvalidation_generator = validation_datagen.flow_from_dataframe(train_,\n                         directory = os.path.join(train_path, \"train_images\"),\n                         subset = \"validation\",\n                         x_col = \"image_id\",\n                         y_col = \"label\",\n                         target_size = (512, 512),\n                         batch_size = 8,\n                         class_mode = \"sparse\")","e0cedbce":"cnn_model=keras.models.Sequential([keras.layers.Conv2D(filters=512,padding=\"same\",kernel_size=5, activation='relu', input_shape=input_shape),\n                                  keras.layers.MaxPool2D(pool_size=(2,2)),\n                                  keras.layers.Conv2D(filters=256,padding='same',kernel_size=4, activation='relu'),\n                                  keras.layers.MaxPool2D(pool_size=(2,2)),\n                                  keras.layers.Conv2D(filters=128,padding='same',kernel_size=3, activation='relu'),\n                                  keras.layers.MaxPool2D(pool_size=(2,2)),\n                                  keras.layers.Conv2D(filters=64,padding='same',kernel_size=2, activation='relu'),\n                                  keras.layers.MaxPool2D(pool_size=(2,2)),\n                                  keras.layers.Conv2D(filters=32,padding='same',kernel_size=2, activation='relu'),\n                                  keras.layers.MaxPool2D(pool_size=(2,2)),\n                                  keras.layers.Dropout(0.5),\n                                  keras.layers.Flatten(),\n                                  keras.layers.Dense(units=512, activation='relu'),\n                                  keras.layers.Dropout(0.1),\n                                  keras.layers.Dense(units=256, activation='relu'),\n                                  keras.layers.Dropout(0.25),\n                                  keras.layers.Dense(units=128, activation='relu'),\n                                  keras.layers.Dropout(0.25),\n                                  keras.layers.Dense(units=5, activation='softmax')])\n\n# complie cnn model\ncnn_model.compile(optimizer = RMSprop(learning_rate=0.001,rho=0.9,momentum=0.9), loss = 'sparse_categorical_crossentropy', metrics = ['accuracy'])\n\n# cnn model summary\ncnn_model.summary()","a8c9be9a":"from keras.callbacks import ModelCheckpoint\n# Save the model with the minimum validation loss\ncheckpoint = ModelCheckpoint(\".\/Cassava_best_model.h5\",\n                             save_best_only=True,\n                             monitor = 'val_loss',\n                             mode='min')\n\n# train cnn model\ncnn_model.fit(train_generator, epochs=5, verbose=1, validation_data=validation_generator,callbacks=[checkpoint])","dc2b4eef":"cnn_model.save('Cassava_best_model.h5')","972e1bed":"# import test_dataset.\ntest=pd.read_csv(\"..\/input\/cassava-leaf-disease-classification\/sample_submission.csv\")\ntest.head()","40b56744":"from PIL import Image # Prediction\npreds = []\nWORK_DIR=\"..\/input\/cassava-leaf-disease-classification\"\nfor image_id in test.image_id:\n    image = Image.open(os.path.join(WORK_DIR,  \"test_images\", image_id))\n    image = image.resize((512, 512))\n    image = np.expand_dims(image, axis = 0)\n    preds.append(np.argmax(cnn_model.predict(image)))\n\ntest['label'] = preds\ntest","28215623":"img = mpimg.imread(\"..\/input\/cassava-leaf-disease-classification\/test_images\/2216849948.jpg\")\nimgplot = plt.imshow(img)\nplt.show()","da8bcdef":"test.to_csv('test.csv', index = False)","fd3a4e90":"> ### EDA","7e1cece6":"**Cassava Brown Streak Disease (CBSD)**","03987920":"**Cassava Mosaic Disease (CMD)**","c60c42fc":"> ### Data visualization","9f717439":"# Cassava Leaf Disease Classification\n> ### Identify the type of disease present on a Cassava Leaf image\n\nThe following topics will be covered:\n\n1.   Exploratory Data Analysis\n1.   Data visualization \n1.   Image Augmentation\n1.   Model Building and Prediction\n1.   Evaluation ","09597f57":"> ### ImageDataGenerator","22dd67f8":"**Healthy**","58c85800":"**Cassava Bacterial Blight (CBB)**","77f21760":"**Cassava Green Mottle (CGM)**","ffa95fec":"> # Model Building"}}