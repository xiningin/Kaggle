{"cell_type":{"f2089bef":"code","cf56b341":"code","c95125e1":"code","60571adb":"code","7729d392":"code","4d0859c8":"code","0b5a13d7":"code","744f106f":"code","e4d1765a":"code","16fb1adc":"code","b1024bb2":"code","e4955970":"code","e151d789":"code","70b4b95a":"code","85f7bb82":"code","b59d002f":"code","0175ea96":"code","c83f92d1":"code","1cb3b70f":"code","91b4477f":"code","8ccd5b58":"code","dfe8b198":"code","86299851":"code","4207e58a":"code","6191ad52":"code","ea313754":"code","4dfe74ce":"code","8f7b2d12":"code","ba368ea1":"code","7d3081f3":"code","a8a72494":"code","03b2cc15":"code","6b204286":"code","1632862e":"code","24c15a5e":"code","56f19e93":"code","acd61e29":"code","bddbea87":"code","7e73b52d":"code","355d2b2e":"code","2a6639c3":"code","10649a7f":"code","faae194a":"code","2c615ff4":"code","ab03a7b9":"code","702240a5":"code","83e67a3c":"code","30658cb8":"code","a7b6d9a9":"code","a92607e5":"code","577cb6ab":"code","ccd6acbf":"code","9b01567c":"code","238b6a9d":"code","3c83c467":"code","5f81484b":"code","96747688":"code","d76d8b8e":"code","954e5c6a":"code","a7095ec9":"code","20a03ca4":"code","a4baffef":"code","d2d41cac":"code","60eb6b2f":"code","78a7ca34":"code","42f19ee6":"code","3c18d9ff":"code","7d3ffe46":"code","549721c5":"code","a8278480":"code","f5a8acea":"code","855d9496":"code","0aefb0b9":"code","9bbe4b83":"code","67fe0a22":"code","aef5abbb":"code","fbab7ce8":"code","17e50329":"code","a2601b8f":"code","3af38c13":"code","e48dca02":"code","2a4272ed":"code","c84651c9":"code","4daabf45":"code","18ce85b8":"code","14c6342e":"code","8734ea67":"code","a3246ca6":"code","b434da6e":"code","4d26dda1":"code","4cb2c599":"code","ecb68016":"code","eb01cdde":"code","a80a7dfc":"code","46eb4995":"code","6a019642":"code","b8c54785":"code","debffeb5":"code","78f70138":"code","f41c3c3f":"code","fde973b9":"code","363f27ca":"code","eff687ff":"code","e130ddb2":"code","f388a3ee":"code","65ddebee":"code","b41ac08b":"code","7cc3235f":"code","740a6d04":"code","b5f88939":"code","232d2708":"code","aaa0bc93":"code","443336ca":"code","d83a8fe0":"code","f21813ac":"code","402ef1cc":"code","d7257cb3":"code","56a1ded5":"code","bc1527ae":"code","6f09c853":"code","5f50e2f5":"code","59393e66":"code","e9a26e00":"code","72dd8fed":"code","a0937489":"code","fa8254cb":"code","191f3e4f":"code","10f3370e":"code","94e7c7b6":"code","78247424":"code","795a221f":"code","61ad6139":"code","7adbc338":"code","e826a15f":"code","41eb57fe":"code","536485f9":"code","59f49048":"code","5997eb15":"code","da6bb992":"code","d4884674":"code","63c1c57d":"code","50b6a06a":"code","d28dc49b":"code","0a977b76":"code","fd4e17d1":"code","ac2b036a":"code","3b1d6c4f":"code","eecf8481":"code","87d0c46f":"code","df359294":"code","900f9d8e":"code","e3e31069":"code","14cd17b9":"code","297f12ce":"code","03c3ee7a":"code","60311963":"code","bbdf8232":"code","dda8f1e8":"code","b40a2a96":"code","7adaac2a":"code","066785d2":"code","16c5872a":"code","2ef6fe37":"code","e8c82929":"code","c79560ca":"code","d68eb0de":"code","958572fc":"code","457fb2c1":"code","5d7464e8":"markdown","4f552e50":"markdown","5e718fef":"markdown","1a6c99de":"markdown","12158bdc":"markdown","2e5ded22":"markdown","fd01deb5":"markdown","0007f910":"markdown","d4d95e83":"markdown","1d6ab575":"markdown","b92ee664":"markdown","a8e41631":"markdown","4b021b0b":"markdown","57a643d0":"markdown","20b6d9ab":"markdown","0f772696":"markdown","70472c9f":"markdown","151fe6eb":"markdown","8530ab59":"markdown","780e9848":"markdown","7ff8e458":"markdown","ac348db0":"markdown","78ecf17f":"markdown","a23ad00e":"markdown","49de4110":"markdown"},"source":{"f2089bef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport warnings\nwarnings.filterwarnings('ignore') \n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","cf56b341":"data = pd.read_csv('..\/input\/individuals-killed-by-the-police\/Police Fatalities.csv')","c95125e1":"data.head()","60571adb":"data.tail()","7729d392":"data.shape","4d0859c8":"data.info()","0b5a13d7":"data.describe()","744f106f":"data.dtypes","e4d1765a":"data.isnull().sum()","16fb1adc":"data[\"Armed\"].fillna(\"UnKnown\", inplace = True)","b1024bb2":"data.isnull().sum()","e4955970":"data[\"Race\"].fillna(\"UnKnown\", inplace = True)","e151d789":"data.isnull().sum()","70b4b95a":"data[\"Age\"].fillna(data[\"Age\"].mean(), inplace = True)","85f7bb82":"data.isnull().sum()","b59d002f":"data =data.dropna(how='any')\ndata.shape","0175ea96":"data.isnull().sum()","c83f92d1":"data['State'].unique()","1cb3b70f":"def state(x):\n    if x=='AL':\n        return('Alabama')\n    elif x=='AK':\n        return('Alaska')\n    elif x=='AZ':\n        return('Arizona')\n    elif x=='AR':\n        return('Arkansas')\n    elif x=='AZ':\n        return('Arizona')\n    elif x=='CA':\n        return('California')\n    elif x=='CO':\n        return('Colorado')\n    elif x=='CT':\n        return('Connecticut')\n    elif x=='DE':\n        return('Delaware')\n    elif x=='FL':\n        return('Florida')\n    elif x=='GE':\n        return('Georgia')\n    elif x=='HI':\n        return('Hawaii')\n    elif x=='FL':\n        return('Idaho')\n    elif x=='IL':\n        return('Illinois')\n    elif x=='IN':\n        return('Indiana')\n    elif x=='IA':\n        return('Iowa')\n    elif x=='KS':\n        return('Kansas')\n    elif x=='KY':\n        return('Kentucky')\n    elif x=='LA':\n        return('Louisiana')\n    elif x=='ME':\n        return('Maine')\n    elif x=='MD':\n        return('Maryland')\n    elif x=='MA':\n        return('Massachusetts')\n    elif x=='MI':\n        return('Michigan')\n    elif x=='MN':\n        return('Minnesota')\n    elif x=='MS':\n        return('Mississippi')\n    elif x=='MO':\n        return('Missouri')\n    elif x=='MT':\n        return('Montana')\n    elif x=='NE':\n        return('Nebraska')\n    elif x=='NV':\n        return('Nevada')\n    elif x=='NH':\n        return('New Hampshire')\n    elif x=='NJ':\n        return('New Jersey')\n    elif x=='NM':\n        return('New Mexico')\n    elif x=='NY':\n        return('New York')\n    elif x=='NC':\n        return('North Carolina')\n    elif x=='ND':\n        return('North Dakota')\n    elif x=='OH':\n        return('Ohio')\n    elif x=='OK':\n        return('Oklahoma')\n    elif x=='OR':\n        return('Oregon')\n    elif x=='PA':\n        return('Pennsylvania')\n    elif x=='RI':\n        return('Rhode Island')\n    elif x=='SC':\n        return('South Carolina')\n    elif x=='SD':\n        return('South Dakota')\n    elif x=='TN':\n        return('Tennessee')\n    elif x=='TX':\n        return('Texas')\n    elif x=='UT':\n        return('Utah')\n    elif x=='VT':\n        return('Vermont')\n    elif x=='VA':\n        return('Virginia')\n    elif x=='WA':\n        return('Washington')\n    elif x=='WV':\n        return('West Virginia')\n    elif x=='WI':\n        return('Wisconsin')\n    else:\n        return('Wyoming')\n    \n","91b4477f":"data['State']=data['State'].apply(state)","8ccd5b58":"data['State'].unique()","dfe8b198":"data['State'].head()","86299851":"def Region(x):\n    if x=='Alabama':\n        return('south')\n    elif x=='Alaska':\n        return('west')\n    elif x=='Arizona':\n        return('west')\n    elif x=='Arkansas':\n        return('south')\n\n    elif x=='California':\n        return('west')\n    \n    elif x=='Colorado':\n        return('west')\n    \n    elif x=='Connecticut':\n        return('northeast')\n    \n    elif x=='Delaware':\n        return('south')\n    \n    elif x=='Florida':\n        return('south')\n    elif x=='Georgia':\n        return('south')\n    elif x=='Hawaii':\n        return('west')\n    elif x=='Idaho':\n        return('west')\n    elif x=='Illinois':\n        return('Midwest')\n    elif x=='Indiana':\n        return('Midwest')\n    elif x=='Iowa':\n        return('Midwest')\n    elif x=='Kansas':\n        return('Midwest')\n    elif x=='Kentucky':\n        return('south')\n    elif x=='Louisiana':\n        return('south')\n    elif x=='Maine':\n        return('northeast')\n    elif x=='Maryland':\n        return('south')\n    elif x=='Massachusetts':\n        return('northeast')\n    elif x=='Michigan':\n        return('Midwest')\n    elif x=='Minnesota':\n        return('Midwest')\n    elif x=='Mississippi':\n        return('south')\n    elif x=='Missouri':\n        return('Midwest')\n    elif x=='Montana':\n        return('west')\n    elif x=='Nebraska':\n        return('Midwest')\n    elif x=='Nevada':\n        return('west')\n    elif x=='New Hampshire':\n        return('northeast')\n    elif x=='New Jersey':\n        return('northeast')\n    elif x=='New Mexico':\n        return('west')\n    elif x=='New York':\n        return('northeast')\n    elif x=='North Carolina':\n        return('south')\n    elif x=='North Dakota':\n        return('Midwest')\n    elif x=='Ohio':\n        return('Midwest')\n    elif x=='Oklahoma':\n        return('south')\n    elif x=='Oregon':\n        return('west')\n    elif x=='Pennsylvania':\n        return('northeast')\n    elif x=='Rhode Island':\n        return('northeast')\n    elif x=='South Carolina':\n        return('south')\n    elif x=='South Dakota':\n        return('Midwest')\n    elif x=='Tennessee':\n        return('south')\n    elif x=='Texas':\n        return('south')\n    elif x=='Utah':\n        return('west')\n    elif x=='Vermont':\n        return('northeast')\n    elif x=='Virginia':\n        return('south')\n    elif x=='Washington':\n        return('west')\n    elif x=='West Virginia':\n        return('south')\n    elif x=='Wisconsin':\n        return('Midwest')\n    elif x=='Wyoming':\n        return('west')\n    ","4207e58a":"data['Region']=data['State'].apply(Region)","6191ad52":"data['Region'].unique()","ea313754":"sns.histplot(data['Region'])","4dfe74ce":"data['Region'].isnull().sum()","8f7b2d12":"data['Race'].unique()","ba368ea1":"sns.histplot(data['Race'])","7d3081f3":"data['Manner_of_death'].unique()","a8a72494":"sns.histplot(data['Manner_of_death'])","03b2cc15":"data['Armed'].unique()","6b204286":"'5\/4\/2000'.split('\/')[2]","1632862e":"def year(x):\n    return x.split('\/')[2]","24c15a5e":"data['Year']=data['Date'].apply(year)","56f19e93":"data['Year'].head()","acd61e29":"data['Year'].unique()","bddbea87":"data.head()","7e73b52d":"def month(x):\n    return x.split('\/')[0]","355d2b2e":"data['Month']=data['Date'].apply(month)","2a6639c3":"data['Month'].unique()","10649a7f":"data.head()","faae194a":"def quarter(x):\n    if x <= 3:\n        return(1)\n    elif x <=6:\n        return(2)\n    elif x <= 9:\n        return(3)\n    else:\n        return(4)   ","2c615ff4":"quarter(15)","ab03a7b9":"data['Month']=data['Month'].astype(int)","702240a5":"data['Quarter']=data['Month'].apply(quarter)","83e67a3c":"data.head()","30658cb8":"def day(x):\n    return x.split('\/')[1]","a7b6d9a9":"data['Day']=data['Date'].apply(day)","a92607e5":"data['Day']=data['Day'].astype(int)","577cb6ab":"data.head()","ccd6acbf":"data['Week']=(((((data['Month']-1)*30)+data['Day'])\/7)+1).astype(int)","9b01567c":"data.head()","238b6a9d":"data['Week'].unique()","3c83c467":"data['Week']=data['Week'].apply(str)","5f81484b":"data['Age'].max()","96747688":"data['Age'].min()","d76d8b8e":"data['Age'].unique()","954e5c6a":"data['Age']=data['Age'].astype(int)","a7095ec9":"data['Age'].unique()","20a03ca4":"def  Stages_of_Life (x):\n    if x<=1:\n        return (\"Infant\")\n    elif x<=4:\n        return (\"Toddler\")\n    elif x<=12:\n        return (\"Child\")\n    elif x<=19:\n        return (\"Teen\")\n    elif x<=39:\n        return (\"Adult\")\n    elif x<=59:\n        return (\"Middle Age Adult\")\n    else:\n        return (\"Senior Adult\")","a4baffef":"data['Stages of Life']=data['Age'].apply(Stages_of_Life)","d2d41cac":"data['Stages of Life'].unique()","60eb6b2f":"data.head()","78a7ca34":"data[data['Stages of Life']=='Infant']","42f19ee6":"data[data['Stages of Life']=='Toddler']","3c18d9ff":"data[(data['Stages of Life']=='Child')]","7d3ffe46":"data[(data['Stages of Life']=='Child') & (data['Armed']=='Gun')]","549721c5":"data[(data['Stages of Life']=='Child') & (data['Armed']=='Unarmed')]","a8278480":"data[(data['Stages of Life']=='Child') & (data['Armed']=='Unarmed') & (data['Flee']==True)]","f5a8acea":"data['Year'].unique()","855d9496":"sns.histplot(y=data['Year'])","0aefb0b9":"data.groupby('Year')['UID'].count().sort_values(ascending=False).head(5)","9bbe4b83":"data.groupby('Year')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","67fe0a22":"data[data['Year']=='2015'].head()","aef5abbb":"Killed_2015=data[data['Year']=='2015']\nsns.distplot(Killed_2015['Age'])","fbab7ce8":"sns.histplot(Killed_2015['Race'])","17e50329":"sns.histplot(Killed_2015['Month'])","a2601b8f":"sns.histplot(Killed_2015['Quarter'])","3af38c13":"Killed_2015.groupby('Week')['UID'].count().sort_values(ascending=False).head(5)\n","e48dca02":"Killed_2015.groupby('Week')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","2a4272ed":"Killed_2015.groupby('Month')['UID'].count().sort_values(ascending=False).head(5)","c84651c9":"Killed_2015.groupby('Month')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","4daabf45":"Killed_2015.groupby('Quarter')['UID'].count().sort_values(ascending=False).head(5)","18ce85b8":"Killed_2015.groupby('Quarter')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","14c6342e":"Killed_2015.groupby('Day')['UID'].count().sort_values(ascending=False).head(5)","8734ea67":"Killed_2015.groupby('Day')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","a3246ca6":"Killed_2015.groupby('Age')['UID'].count().sort_values(ascending=False).head(5)","b434da6e":"Killed_2015.groupby('Age')['UID'].count().sort_values(ascending=False).head(5).plot(kind='pie')","4d26dda1":"Killed_2015.groupby('Date')['UID'].count().sort_values(ascending=False).head(5)","4cb2c599":"Killed_2015.groupby('Gender')['UID'].count().sort_values(ascending=False).head(5)","ecb68016":"Killed_2015.groupby('Gender')['UID'].count().sort_values(ascending=False).head(5).plot(kind='pie')","eb01cdde":"Killed_2015.groupby('Day')['UID'].count().sort_values(ascending=False).head(5)","a80a7dfc":"Killed_2015.groupby('Day')['UID'].count().sort_values(ascending=False).head(5).plot(kind='barh')","46eb4995":"Killed_2015.groupby('Race')['UID'].count().sort_values(ascending=False).head(5)","6a019642":"Killed_2015.groupby('Race')['UID'].count().sort_values(ascending=False).head(4).plot(kind='pie')","b8c54785":"Killed_2015.groupby('City')['UID'].count().sort_values(ascending=False).head(5)","debffeb5":"Killed_2015.groupby('City')['UID'].count().sort_values(ascending=False).head(5).plot(kind='pie')","78f70138":"Killed_2015.groupby('State')['UID'].count().sort_values(ascending=False).head(5)","f41c3c3f":"Killed_2015.groupby('State')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","fde973b9":"Killed_2015.groupby('Manner_of_death')['UID'].count().sort_values(ascending=False).head(5)","363f27ca":"Killed_2015.groupby('Manner_of_death')['UID'].count().sort_values(ascending=False).head(5).plot(kind='barh')","eff687ff":"Killed_2015.groupby('Armed')['UID'].count().sort_values(ascending=False).head(5)","e130ddb2":"Killed_2015.groupby('Armed')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","f388a3ee":"Killed_2015.groupby('Flee')['UID'].count().sort_values(ascending=False).head(5)","65ddebee":"Killed_2015.groupby('Flee')['UID'].count().sort_values(ascending=False).head(5).plot(kind='pie')","b41ac08b":"Killed_2015.groupby('Stages of Life')['UID'].count().sort_values(ascending=False).head(5)","7cc3235f":"Killed_2015.groupby('Stages of Life')['UID'].count().sort_values(ascending=False).head(5).plot(kind='barh')","740a6d04":"Killed_2015.groupby('Flee')['UID'].count().sort_values(ascending=False).head(5)","b5f88939":"Killed_2015.groupby('Flee')['UID'].count().sort_values(ascending=False).head(5).plot(kind='pie')","232d2708":"data.groupby('Quarter')['UID'].count().sort_values(ascending=False)","aaa0bc93":"killed_by_quarter=data[data['Quarter']==1]\nkilled_by_quarter.head()","443336ca":"killed_by_quarter.groupby('Age')['UID'].count().sort_values(ascending=False).head(5)","d83a8fe0":"killed_by_quarter.groupby('Age')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","f21813ac":"killed_by_quarter.groupby('Age')['UID'].count().sort_values(ascending=False).tail(5)","402ef1cc":"killed_by_quarter.groupby('Gender')['UID'].count().sort_values(ascending=False).head(5)","d7257cb3":"killed_by_quarter.groupby('Gender')['UID'].count().sort_values(ascending=False).head(5).plot(kind='pie')","56a1ded5":"killed_by_quarter.groupby('Race')['UID'].count().sort_values(ascending=False).head(5)","bc1527ae":"killed_by_quarter.groupby('Race')['UID'].count().sort_values(ascending=False).head(5).plot(kind='bar')","6f09c853":"killed_by_quarter.groupby('Date')['UID'].count().sort_values(ascending=False).head(5)","5f50e2f5":"killed_by_quarter.groupby('City')['UID'].count().sort_values(ascending=False).head(5)","59393e66":"killed_by_quarter.groupby('City')['UID'].count().sort_values(ascending=False).head(5).plot(kind='pie')","e9a26e00":"killed_by_quarter.groupby('State')['UID'].count().sort_values(ascending=False).head(5)","72dd8fed":"data.groupby('Month')['UID'].count().sort_values(ascending=False)","a0937489":"killed_in_march=data[data['Month']==3]","fa8254cb":"killed_in_march.head()","191f3e4f":"killed_in_march.shape","10f3370e":"killed_in_march.groupby('Age')['UID'].count().sort_values(ascending=False)","94e7c7b6":"killed_in_march.groupby('Age')['UID'].count().sort_values(ascending=False).head(10).plot(kind='bar')","78247424":"killed_in_march.groupby('Stages of Life')['UID'].count().sort_values(ascending=False)","795a221f":"killed_in_march.groupby('Stages of Life')['UID'].count().sort_values(ascending=False).plot(kind='bar')","61ad6139":"killed_in_march.groupby('Gender')['UID'].count().sort_values(ascending=False)","7adbc338":"killed_in_march.groupby('Gender')['UID'].count().sort_values(ascending=False).plot(kind='pie')","e826a15f":"killed_in_march.groupby('Mental_illness')['UID'].count().sort_values(ascending=False)","41eb57fe":"killed_in_march.groupby('Mental_illness')['UID'].count().sort_values(ascending=False).plot(kind='pie')","536485f9":"killed_in_march.groupby('Flee')['UID'].count().sort_values(ascending=False)","59f49048":"killed_in_march.groupby('Flee')['UID'].count().sort_values(ascending=False).plot(kind='pie')","5997eb15":"killed_in_march.groupby('Date')['UID'].count().sort_values(ascending=False).head(10)","da6bb992":"killed_in_march.groupby('Year')['UID'].count().sort_values(ascending=False)","d4884674":"killed_in_march.groupby('Year')['UID'].count().sort_values(ascending=False).plot(kind='bar')","63c1c57d":"killed_in_march.groupby('Day')['UID'].count().sort_values(ascending=False)","50b6a06a":"killed_in_march.groupby('Day')['UID'].count().sort_values(ascending=False).head(10).plot(kind='bar')","d28dc49b":"killed_in_march.groupby('Race')['UID'].count().sort_values(ascending=False)","0a977b76":"killed_in_march.groupby('Race')['UID'].count().sort_values(ascending=False).plot(kind='bar')","fd4e17d1":"killed_in_march.groupby('City')['UID'].count().sort_values(ascending=False).head(10)","ac2b036a":"killed_in_march.groupby('City')['UID'].count().sort_values(ascending=False).head(10).plot(kind='bar')","3b1d6c4f":"killed_in_march.groupby('State')['UID'].count().sort_values(ascending=False).head(10)","eecf8481":"killed_in_march.groupby('State')['UID'].count().sort_values(ascending=False).head(10).plot(kind='bar')","87d0c46f":"killed_in_march.groupby('Region')['UID'].count().sort_values(ascending=False)","df359294":"killed_in_march.groupby('Region')['UID'].count().sort_values(ascending=False).plot(kind='pie')","900f9d8e":"data.groupby('City')['UID'].count().sort_values(ascending=False).head(10)","e3e31069":"data.groupby('City')['UID'].count().sort_values(ascending=False).head(10).plot(kind='barh')","14cd17b9":"kiled_in_los_Angeles=data[data['City']=='Los Angeles']","297f12ce":"kiled_in_los_Angeles.head()","03c3ee7a":"kiled_in_los_Angeles.groupby('Age')['UID'].count().sort_values(ascending=False).head(10)","60311963":"kiled_in_los_Angeles.groupby('Age')['UID'].count().sort_values(ascending=False).head(10).plot(kind='bar',color='green')","bbdf8232":"kiled_in_los_Angeles.groupby('Stages of Life')['UID'].count().sort_values(ascending=False)","dda8f1e8":"kiled_in_los_Angeles.groupby('Stages of Life')['UID'].count().sort_values(ascending=False).head(10).plot(kind='bar',color='green')","b40a2a96":"kiled_in_los_Angeles.groupby('Race')['UID'].count().sort_values(ascending=False)","7adaac2a":"kiled_in_los_Angeles.groupby('Race')['UID'].count().sort_values(ascending=False).plot(kind='bar',color='green')","066785d2":"kiled_in_los_Angeles.groupby('Armed')['UID'].count().sort_values(ascending=False).head(10)","16c5872a":"kiled_in_los_Angeles.groupby('Armed')['UID'].count().sort_values(ascending=False).head(10).plot(kind='bar',color='green')","2ef6fe37":"kiled_in_los_Angeles.groupby('Flee')['UID'].count().sort_values(ascending=False)","e8c82929":"kiled_in_los_Angeles.groupby('Flee')['UID'].count().sort_values(ascending=False).plot(kind='pie',color='green')","c79560ca":"kiled_in_los_Angeles.groupby('Manner_of_death')['UID'].count().sort_values(ascending=False)","d68eb0de":"kiled_in_los_Angeles.groupby('Manner_of_death')['UID'].count().sort_values(ascending=False).plot(kind='bar',color='green')","958572fc":"kiled_in_los_Angeles.groupby('Mental_illness')['UID'].count().sort_values(ascending=False)","457fb2c1":"kiled_in_los_Angeles.groupby('Mental_illness')['UID'].count().sort_values(ascending=False).plot(kind='pie',color='green')","5d7464e8":"Which race recorded the most murders in March?","4f552e50":"#### most of those who killed in 2015 where killed in 3rd Quarter","5e718fef":"# Which State records the most Kill Events by police?","1a6c99de":"******what are the life stages of persons killed in march?","12158bdc":"# Which type of arm records the most Kill Events by police?","2e5ded22":"****How many of the individuals killed in march are tries to escape?","fd01deb5":"#### most of those who killed in 2015 where killed in July","0007f910":"# Which stage of life records the most Kill Events by police?","d4d95e83":"Where were they killed during March? The city? The state? The region?","1d6ab575":"# Which month records the most Kill Events by police?\nHow many females are there?\nAnd how many Asians of them?\nHow many armed with a knife of them?","b92ee664":"# Which week records the most Kill Events by police?\nHow many black are there?\nAnd how many Senior Adult of them?\nHow many armed with a gun of them?","a8e41631":"****How many of the individuals killed in march are have mental ill?","4b021b0b":"most of deaths ocurred in Marth","57a643d0":"# Which manner of death records the most Kill Events by police?","20b6d9ab":"What time were they killed?****","0f772696":"# Which year records the most Kill Events by police? \nHow many males are there?\nAnd how many mentally ill of them?\nHow many unarmed of them?","70472c9f":"# Which Race records the most Kill Events by police?","151fe6eb":"# Which quarter records the most Kill Events by police?\nHow many of them were fled?\nAnd how many Asians of them?\nHow many kiled by Tasered of them?","8530ab59":"#### most of those who killed in 2015 where of the white race","780e9848":"# Which gender records the most Kill Events by police?","7ff8e458":"#### 2015 was the year that records the most kill events","ac348db0":"# Which city records the most Kill Events by police?","78ecf17f":"****** How many of the individuals killed in march are male?","a23ad00e":"# **what is the ages of persons killed in march?","49de4110":"# Which age records the most Kill Events by police?"}}