{"cell_type":{"89ce1af3":"code","75f6aada":"code","22c122cd":"code","fca3993d":"code","8a1df745":"code","7b0c892e":"code","2852079a":"code","3888ea8a":"code","b4879f3c":"code","31369680":"code","930fe1a1":"code","d4591857":"markdown","6817b471":"markdown"},"source":{"89ce1af3":"import numpy as np  # Data manipulation\nimport pandas as pd # Dataframe manipulation \nimport matplotlib.pyplot as plt # Plotting the data and the results\nimport matplotlib.image as mpimg # For displaying imagees\n%matplotlib inline\nfrom keras import models\nfrom keras import layers\nimport keras.preprocessing  as kp\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras import regularizers\nfrom keras import optimizers","75f6aada":"train_datagen = ImageDataGenerator( # Data Augumentation for test data\nrescale=1.\/255,\nrotation_range=30,\nshear_range=0.3,\nzoom_range=0.3\n)\n\ntest_datagen = ImageDataGenerator(rescale=1.\/255)","22c122cd":"train_gen=train_datagen.flow_from_directory('..\/input\/gender-classification-dataset\/Training',\n                                            target_size=(250,250),\n                                            batch_size=48,\n                                            class_mode='binary')","fca3993d":"valid_gen=test_datagen.flow_from_directory('..\/input\/gender-classification-dataset\/Validation',\n                                           target_size=(250,250),\n                                           batch_size=48,\n                                           class_mode='binary')","8a1df745":"kernel_s=(3,3)\nmodel=models.Sequential()\nmodel.add(layers.Conv2D(32,kernel_s,activation='relu',input_shape=(250,250,3),\n                        kernel_regularizer=regularizers.l2(0.001),padding=\"VALID\"))\nmodel.add(layers.MaxPooling2D((2,2)))\n\nmodel.add(layers.Conv2D(64,kernel_s,activation='relu'))\nmodel.add(layers.MaxPooling2D((2,2)))\nmodel.add(layers.Conv2D(64,kernel_s,activation='relu'))\nmodel.add(layers.MaxPooling2D((2,2)))\n\nmodel.add(layers.Conv2D(128,kernel_s,activation='relu'))\nmodel.add(layers.MaxPooling2D((2,2)))\nmodel.add(layers.Conv2D(128,kernel_s,activation='relu'))\nmodel.add(layers.MaxPooling2D((2,2)))\n\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(256,activation='relu'))\nmodel.add(layers.Dense(1,activation='sigmoid'))\nmodel.summary()","7b0c892e":"model.compile(optimizer='rmsprop',loss='binary_crossentropy',metrics=['acc'])","2852079a":"history=model.fit(train_gen,steps_per_epoch=70,epochs=30,\n                  validation_data=valid_gen,validation_steps=50)\n\n","3888ea8a":"acc = history.history['acc']\nval_acc = history.history['val_acc']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\nepochs = range(1, len(acc) + 1)\nplt.plot(epochs, acc, 'bo', label='Training acc')\nplt.plot(epochs, val_acc, 'ro', label='Validation acc')\nplt.title('Training and validation accuracy')\nplt.legend()\nplt.figure()\n\nplt.plot(epochs, loss, 'bo', label='Training loss')\nplt.plot(epochs, val_loss, 'ro', label='Validation loss')\nplt.title('Training and validation loss')\nplt.legend()\nplt.figure()\n","b4879f3c":"test_datagen1 = ImageDataGenerator(rescale=1.\/255)\ntest_generator = test_datagen1.flow_from_directory(\n'..\/input\/testing',\ntarget_size=(250,250),\nbatch_size=32,\nclass_mode='binary')","31369680":"test_loss, test_acc = model.evaluate_generator(test_generator, steps=32)\nprint('test acc:', test_acc)\nprint('test_loss:',test_loss)","930fe1a1":"model.predict(\n    test_datagen1, batch_size=32, verbose=0, steps=None, callbacks=[checkpoint], max_queue_size=10, workers=1, use_multiprocessing=False\n)","d4591857":"**MODEL TRAINING**","6817b471":"**MODEL TESTING** "}}