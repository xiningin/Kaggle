{"cell_type":{"46f83ae3":"code","676d07e1":"code","28d2ac52":"code","8aa3a876":"code","499413f1":"code","ab5fcb9c":"code","77eb0e97":"code","81d48fab":"code","ca4c5d68":"code","cab4cbbc":"code","9e77737c":"code","2a5538b0":"code","12faaa23":"code","cfac5c76":"code","fc4e0fef":"code","87c124e5":"code","7bdffe4d":"markdown","adb25495":"markdown","54798a5c":"markdown","3a55f84b":"markdown","36e9ac76":"markdown","21a1aa16":"markdown","ae1f8715":"markdown","4c2b621c":"markdown","bfed0cac":"markdown"},"source":{"46f83ae3":"import os\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","676d07e1":"sub_path = \"..\/input\/ieeesubmissions5\"\n#sub_path = \"..\/input\/ieeesubmissions3\"  # Uncomment to get v.7 output\n#sub_path = \"..\/input\/ieeesubmissions2\" # Uncomment this line to access the input files that should match v.5 and .6 outputs\n#sub_path = \"..\/input\/ieeesubmissions\"  # Uncomment this line to access the input files that should match v.2 output\nall_files = os.listdir(sub_path)\nall_files\nall_files.remove('blend01.csv')\nall_files.remove('blend02.csv')\nall_files","28d2ac52":"outs = [pd.read_csv(os.path.join(sub_path, f), index_col=0) for f in all_files]\nconcat_sub = pd.concat(outs, axis=1)\ncols = list(map(lambda x: \"ieee\" + str(x), range(len(concat_sub.columns))))\nconcat_sub.columns = cols\nconcat_sub.reset_index(inplace=True)\nncol = concat_sub.shape[1]\nconcat_sub.head()","8aa3a876":"concat_sub_rank = concat_sub.iloc[:,1:ncol].copy()\nconcat_sub_rank.head()\nfor _ in range(ncol-1):\n    concat_sub_rank.iloc[:,_] = concat_sub_rank.iloc[:,_].rank(method ='average')\nconcat_sub_rank.describe()\n    ","499413f1":"# check correlation\nconcat_sub.iloc[:,1:ncol].corr()","ab5fcb9c":"corr = concat_sub.iloc[:,1:7].corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","77eb0e97":"# get the data fields ready for stacking\nconcat_sub['ieee_max'] = concat_sub.iloc[:, 1:ncol].max(axis=1)\nconcat_sub['ieee_min'] = concat_sub.iloc[:, 1:ncol].min(axis=1)\nconcat_sub['ieee_mean'] = concat_sub.iloc[:, 1:ncol].mean(axis=1)\nconcat_sub['ieee_median'] = concat_sub.iloc[:, 1:ncol].median(axis=1)","81d48fab":"concat_sub.describe()","ca4c5d68":"cutoff_lo = 0.8\ncutoff_hi = 0.2","cab4cbbc":"concat_sub['isFraud'] = concat_sub['ieee_mean']\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_mean.csv', \n                                        index=False, float_format='%.6f')","9e77737c":"concat_sub['isFraud'] = concat_sub['ieee_median']\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_median.csv', \n                                        index=False, float_format='%.6f')","2a5538b0":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), 1, \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             0, concat_sub['ieee_median']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_pushout_median.csv', \n                                        index=False, float_format='%.6f')","12faaa23":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), \n                                    concat_sub['ieee_max'], \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             concat_sub['ieee_min'], \n                                             concat_sub['ieee_mean']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_minmax_mean.csv', \n                                        index=False, float_format='%.6f')","cfac5c76":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), \n                                    concat_sub['ieee_max'], \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             concat_sub['ieee_min'], \n                                             concat_sub['ieee_median']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_minmax_median.csv', \n                                        index=False, float_format='%.6f')","fc4e0fef":"concat_sub['isFraud'] = concat_sub_rank.median(axis=1)\nconcat_sub['isFraud'] = (concat_sub['isFraud']-concat_sub['isFraud'].min())\/(concat_sub['isFraud'].max() - concat_sub['isFraud'].min())\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_median_rank.csv', index=False, float_format='%.8f')","87c124e5":"concat_sub['isFraud'] = concat_sub_rank.mean(axis=1)\nconcat_sub['isFraud'] = (concat_sub['isFraud']-concat_sub['isFraud'].min())\/(concat_sub['isFraud'].max() - concat_sub['isFraud'].min())\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_mean_rank.csv', index=False, float_format='%.8f')","7bdffe4d":"# Mean Stacking","adb25495":"# MinMax + Median Stacking","54798a5c":"# Mean Rank","3a55f84b":"[Fork of 'Stacking?'](https:\/\/www.kaggle.com\/rajwardhanshinde\/stacking)\n\n**Update for v.9:** again a slightly higher scoring Under_Over submission is added (nothing dramatic: 0.9398). You may have to remove and reattach ieeesubmissions5 dataset to get the latest version (`xgboost_under_over_blend_9398`)\n\n**Update for v.8:** a tiny update with a fresh file from [Undersample with multiple runs kernel](https:\/\/www.kaggle.com\/stocks\/under-sample-with-multiple-runs). don't know the score yet\n\n**Update for v.7**:\n\nAdded [IEEE - LGB + Bayesian opt.](https:\/\/www.kaggle.com\/vincentlugat\/ieee-lgb-bayesian-opt)\n\n**Update for v.5**:\n\n * <font color=green>Median 0.9425<\/font>\n * <font color=green>Mean 0.9420 <\/font>\n * <font color=green>Median Rank 0.9413<\/font>\n * <font color=green>Mean Rank 0.9413 <\/font>\n\n* `ieeesubmissions2` dataset was update replacing `safebox9416.csv` with `safebox9367.csv`. `safebox9416.csv` had an incorrect score linked to it (it is actually 0.9322). The reason for the mix-up is that it is unknown which submission generates which score in public kernels. The reason I am no longer using `blend1.csv` from Safebox kernel is because `blend1` itself was a blend with `ieee_9383` also used in this kernel.\n\n* added Median rank\n\n**Update for v.4**:\n\nv.4 is the same as v.3, only reporting select scores for v.3\n\n**Update for v.3**:\n\n**<font color=green>Submissions tried in v.3:<\/font>**\n\n * <font color=green>Median 0.9427<\/font>\n * <font color=green>Mean 0.9420 <\/font>\n\nI added a new dataset with submission files labelled by their scores (to the best of my knowledge). They all come from the same kernels as in v.2 but two are different  versions of those. Not sure if any them might improve the score.\n\n**Updates made by me in v.1 and v.2:**\n\n* use the higher scoring blend of oversample + undersample from [My kernel](https:\/\/www.kaggle.com\/stocks\/under-sample-with-multiple-runs). \nI'm guessing that the stacking kernel that I've copied here used only my under-sampled model.\nAt least one of the other models [EDA Kernel](https:\/\/www.kaggle.com\/artgor\/eda-and-models) is scoring higher.\nThus, the explanation for high score of this clone likely lies in higher scoring models used for stacking.\n* trying stacking based on ranks\n\n**<font color=green>Submission tried in v.2:<\/font>**\n\n * <font color=green>Median 0.9429<\/font>\n * <font color=green>Mean rank 0.9415 <\/font>\n\n#### Info from the parent of this clone:\n>* Based on https:\/\/www.kaggle.com\/lpachuong\/statstack\n>* Thanks to <br>\nhttps:\/\/www.kaggle.com\/jazivxt\/safe-box<br>\nhttps:\/\/www.kaggle.com\/artgor\/eda-and-models<br>\nhttps:\/\/www.kaggle.com\/stocks\/under-sample-with-multiple-runs<br>\nhttps:\/\/www.kaggle.com\/artkulak\/ieee-fraud-simple-baseline-0-9383-lb","36e9ac76":"# Pushout + Median Stacking\n>* Pushout strategy is bit aggresive","21a1aa16":"# Median Stacking","ae1f8715":"# Median Rank","4c2b621c":"# MinMax + Mean Stacking\n>* MinMax seems more gentle and it outperforms the previous one","bfed0cac":"## <font color=blue>Vote early and vote often!<\/font>\n"}}