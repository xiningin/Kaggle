{"cell_type":{"f311f121":"code","3e93019e":"code","609852ea":"code","ab0e5cf0":"code","f9c58a08":"markdown","42adec69":"markdown"},"source":{"f311f121":"import itertools","3e93019e":"def pair_return(num_list, k):\n    num_pairs = []\n    for pair in itertools.combinations(num_list, 2):\n        num_pairs.append(pair)\n    if len([x for x in num_pairs if x[0] + x[1] == k]) > 0:\n        print('True')\n    else:\n        print('False')\n    return num_pairs, [x for x in num_pairs if x[0] + x[1] == k]","609852ea":"pair_return([10,3,15,7],17)","ab0e5cf0":"def pair_return(num_list, k):\n    for pair in itertools.combinations(num_list, 2):\n        if pair[0] + pair[1] == k:\n            print('True')\n            break\n        if pair == list(itertools.combinations(num_list, 2))[len(list(itertools.combinations(num_list, 2))) - 1]:\n            print('False')\n\npair_return([10,3,15,7],17)","f9c58a08":"# Daily Coding Problem (Asked by Google)\n\nGiven a list of numbers and a number k, return whether any two numbers from the list add up to k.\n\nFor example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.\n\nBonus: Can you do this in one pass?","42adec69":"# Appendix (Alternate Method)"}}