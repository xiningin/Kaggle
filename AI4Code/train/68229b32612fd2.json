{"cell_type":{"5847db9f":"code","904da88e":"code","c8888269":"code","5634f7ce":"code","583be536":"code","50359c16":"code","8cbbb1f3":"code","414197bb":"code","117ff123":"code","fe62f6fe":"code","63b14cf6":"code","dd0d7764":"code","86a553bd":"code","d3fa633c":"code","571f0994":"code","0ef8b267":"code","005d9d29":"code","db2a807e":"code","d2bd76f0":"code","6cc24b83":"code","979710af":"code","dd473758":"code","275b8271":"code","4eadbf2f":"code","6a2b0d5c":"code","d3721844":"code","9eabd4a9":"code","2e679772":"code","bbc9a7a2":"code","07658e81":"code","4075f190":"code","8dfd2ea8":"code","99d7b78b":"code","d824d8bd":"code","acb40f71":"code","2df362fa":"code","ad891994":"code","e1808a6e":"code","94eff9ab":"code","48870115":"code","5f2ce540":"code","872e1271":"code","3ba8abb8":"code","b4a658ef":"code","8c3453e4":"code","250f098b":"code","e6a279c4":"code","285e1f84":"code","e571a478":"code","8ac9ee68":"code","d14ffd5c":"code","286e056b":"markdown","94feadf3":"markdown","4c1aa169":"markdown","6b007599":"markdown","0e83b704":"markdown","cf2890db":"markdown","7f4fa28d":"markdown","e48a2030":"markdown","35ccbad3":"markdown","0bcde31e":"markdown","91671dba":"markdown"},"source":{"5847db9f":"import numpy as np \nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nimport pandas as pd\nimport seaborn as sns\nimport missingno as msno\nimport plotly.graph_objects as go\nimport plotly.offline as po\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport plotly.express as px\nimport random\nimport plotly.figure_factory as ff \nfrom wordcloud import WordCloud\n","904da88e":"players_df =pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/players.csv\")\npffScoutingData_df=pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/PFFScoutingData.csv\")\ngames_df=pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/games.csv\")\nplays_df=pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/plays.csv\")\ntracking18_df=pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2018.csv\")\ntracking19_df=pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2019.csv\")\ntracking20_df=pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2020.csv\")","c8888269":"# Shape of the data files ( number of rows and number of columns) \nprint('\\033[1m'\"Shape of the Players File \"'\\033[0m',players_df.shape )\nprint('\\033[1m'\"Shape of the Scoutting file\"'\\033[0m', pffScoutingData_df.shape)\nprint('\\033[1m'\"Shape of the Games File\"'\\033[0m',games_df.shape)\nprint('\\033[1m'\"Shape of the plays File\"'\\033[0m',plays_df.shape)\nprint('\\033[1m'\"Shape of the tracking 2018 File\"'\\033[0m',tracking18_df.shape)\nprint('\\033[1m'\"Shape of the tracking 2019 File\"'\\033[0m',tracking19_df.shape)\nprint('\\033[1m'\"Shape of the tracking 2020 File\"'\\033[0m',tracking20_df.shape)","5634f7ce":"players_df.head(10).style.set_caption(\"Engagement Dataframe\").set_properties(**{'background-color': 'peachpuff',\n                           'color': 'midnightblue','border': '1.5px  solid black'})","583be536":"pffScoutingData_df.head(10).style.set_caption(\"Engagement Dataframe\").set_properties(**{'background-color': 'peachpuff',\n                           'color': 'midnightblue','border': '1.5px  solid black'})","50359c16":"games_df.head(10).style.set_caption(\"Engagement Dataframe\").set_properties(**{'background-color': 'peachpuff',\n                           'color': 'midnightblue','border': '1.5px  solid black'})","8cbbb1f3":"plays_df.head(10).style.set_caption(\"Engagement Dataframe\").set_properties(**{'background-color': 'peachpuff',\n                           'color': 'midnightblue','border': '1.5px  solid black'})","414197bb":"tracking18_df.head(10).style.set_caption(\"Engagement Dataframe\").set_properties(**{'background-color': 'peachpuff',\n                           'color': 'midnightblue','border': '1.5px  solid black'})","117ff123":"tracking19_df.head(10).style.set_caption(\"Engagement Dataframe\").set_properties(**{'background-color': 'peachpuff',\n                           'color': 'midnightblue','border': '1.5px  solid black'})","fe62f6fe":"tracking20_df.head(10).style.set_caption(\"Engagement Dataframe\").set_properties(**{'background-color': 'peachpuff',\n                           'color': 'midnightblue','border': '1.5px  solid black'})","63b14cf6":"print('\\033[1m'\"Data types of each column in players data file\\n\"'\\033[0m',players_df.dtypes)\nprint('\\033[1m'\"Data types of each column in Scouting data file\\n\"'\\033[0m',pffScoutingData_df.dtypes)\nprint('\\033[1m'\"Data types of each column in games data file\\n\"'\\033[0m',games_df.dtypes)\nprint('\\033[1m'\"Data types of each column in plays data file\\n\"'\\033[0m',plays_df.dtypes)\nprint('\\033[1m'\"Data types of each column in tracking 2018 data file\\n\"'\\033[0m',tracking18_df.dtypes)\nprint('\\033[1m'\"Data types of each column in tracking 2019 data file\\n\"'\\033[0m',tracking19_df.dtypes)\nprint('\\033[1m'\"Data types of each column in tracking 2020 data file\\n\"'\\033[0m',tracking20_df.dtypes)","dd0d7764":"# Missing Value check\nprint('\\033[1m'\"Missing value present in each column of players data file\\n\"'\\033[0m',players_df.isna().any())\nprint('\\033[1m'\"Missing value present in each column of Scouting data file\\n\"'\\033[0m',pffScoutingData_df.isna().any())\nprint('\\033[1m'\"Missing value present in each column of games data file\\n\"'\\033[0m',games_df.isna().any())\nprint('\\033[1m'\"Missing value present in each column of plays data file\\n\"'\\033[0m',plays_df.isna().any())\nprint('\\033[1m'\"Missing value present in each column of tracking 2018 data file\\n\"'\\033[0m',tracking18_df.isna().any())\nprint('\\033[1m'\"Missing value present in each column of tracking 2019 data file\\n\"'\\033[0m',tracking19_df.isna().any())\nprint('\\033[1m'\"Missing value present in each column of tracking 2020 data file\\n\"'\\033[0m',tracking20_df.isna().any())","86a553bd":"# Missing Value check\nprint('\\033[1m'\"Missing value count in each column of players data file\\n\"'\\033[0m',players_df.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of Scouting data file\\n\"'\\033[0m',pffScoutingData_df.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of games data file\\n\"'\\033[0m',games_df.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of plays data file\\n\"'\\033[0m',plays_df.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of tracking 2018 data file\\n\"'\\033[0m',tracking18_df.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of tracking 2019 data file\\n\"'\\033[0m',tracking19_df.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of tracking 2020 data file\\n\"'\\033[0m',tracking20_df.isna().sum())","d3fa633c":"# Visualize missing values as a matrix\n\nmsno.heatmap(players_df,figsize=(10,5))","571f0994":"msno.heatmap(pffScoutingData_df,figsize=(10,5))","0ef8b267":"msno.heatmap(plays_df,figsize=(10,5))","005d9d29":"#First five records \n\ncolorscale = [[0, 'red'],[.5, '#DCE775'],[1, '#C0CA33']]\nfont=['white', '#212121' , 'red']\nfig = ff.create_table(games_df.head(5),height_constant=50,colorscale=colorscale,font_colors=font)\nfor i in range(len(fig.layout.annotations)):\n    fig.layout.annotations[i].font.size = 17\nfig.update_layout(width=4500, height=400)\nfig.show()","db2a807e":"games_df.shape","d2bd76f0":"#Descriptive statistics \n\ngames_df.describe().T","6cc24b83":"# No of unique games \n\ngames_df[\"gameId\"].nunique()","979710af":"data = go.Pie(\nvalues= games_df[\"season\"].value_counts(),\nlabels= games_df[\"season\"].value_counts().index,\n)\nlayout = go.Layout(\ntitle=dict(text = \"No of games for season\",x=0.46,y=0.95,font_size=20)\n)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","dd473758":"games_df['month'] = games_df['gameDate'].apply(lambda x: int(x.split('\/')[0]))\ngames_df['day'] = games_df['gameDate'].apply(lambda x: int(x.split('\/')[1]))\ngames_df['hour'] = games_df['gameTimeEastern'].apply(lambda x: int(x.split(':')[0]))","275b8271":"data = go.Pie(\nvalues= games_df[\"month\"].value_counts(),\nlabels= games_df[\"month\"].value_counts().index,\n)\nlayout = go.Layout(\ntitle=dict(text = \"No of games for month\",x=0.46,y=0.95,font_size=20)\n)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","4eadbf2f":"data = go.Pie(\nvalues= games_df[\"day\"].value_counts(),\nlabels= games_df[\"day\"].value_counts().index,\n)\nlayout = go.Layout(\ntitle=dict(text = \"No of games for day\",x=0.46,y=0.95,font_size=20)\n)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","6a2b0d5c":"data = go.Pie(\nvalues= games_df[\"hour\"].value_counts(),\nlabels= games_df[\"hour\"].value_counts().index,\n)\nlayout = go.Layout(\ntitle=dict(text = \"No of games for hour\",x=0.46,y=0.95,font_size=20)\n)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","d3721844":"plt.figure(figsize=(16, 10))\nax=sns.countplot(x=\"gameTimeEastern\",data=games_df,order=games_df.gameTimeEastern.value_counts().index,palette=\"Dark2_r\",linewidth=3)\nax.bar_label(ax.containers[0])\nplt.title(\"No of games for gametimeEastern\",font=\"Serif\", size=20)\nplt.show()","9eabd4a9":"labels = list(games_df.week.value_counts().index)\nvalues = games_df['week'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=labels,\n                             values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent', textfont_size=20,\n                  marker=dict( line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"No of games for week\",\n                  titlefont={'size': 30},      \n                  )\nfig.show()","2e679772":"fig = ff.create_table(players_df.head(5),height_constant=50)\nfig.update_layout(width=3500, height=400)\nfig.show()","bbc9a7a2":"#Shape of the data \n\nplayers_df.shape","07658e81":"#No of unique players \n\nplayers_df['nflId'].nunique()","4075f190":"plt.figure(figsize=(16, 10))\nax=sns.countplot(x=\"height\",data=players_df,order=players_df.height.value_counts().index,palette=\"Dark2_r\",linewidth=3)\nax.bar_label(ax.containers[0])\nplt.title(\"Height of the players\",font=\"Serif\", size=20)\nplt.show()","8dfd2ea8":"height_df = players_df['height'].str.split('-',expand=True)\n\nheight_df.columns = [\n    'feet', \n    'inches'\n]\n\nheight_df.loc[(height_df['inches'].notnull()), 'feet'] = height_df[height_df['inches'].notnull()]['feet'].astype(np.int16) * 12 + height_df[height_df['inches'].notnull()]['inches'].astype(np.int16)","99d7b78b":"players_df['height'] = height_df['feet']\nplayers_df['height'] = players_df['height'].astype(np.float32)\nplayers_df['height'] \/= 12","d824d8bd":"group_labels = ['Height Distribution']\nhist_data = [players_df[\"height\"]]\nfig = ff.create_distplot(hist_data,group_labels, bin_size=[2])\nfig.show()","acb40f71":"group_labels = ['Weight Distribution']\nhist_data = [players_df[\"weight\"]]\nfig = ff.create_distplot(hist_data,group_labels, bin_size=[20])\nfig.show()","2df362fa":"labels = list(players_df.Position.value_counts().index)\nvalues = players_df['Position'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=labels,\n                             values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent', textfont_size=20,\n                  marker=dict( line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"No of Positions for players\",\n                  titlefont={'size': 30},      \n                  )\nfig.show()","ad891994":"plt.figure(figsize=(16, 10))\nax=sns.countplot(y=\"collegeName\",data=players_df,order=players_df.collegeName.value_counts().iloc[:20].index,palette=\"Dark2_r\",linewidth=3)\nax.bar_label(ax.containers[0])\nplt.title(\"No of colleges for players\",font=\"Serif\", size=20)\nplt.show()","e1808a6e":"players_df[\"birthYear\"] = 0\nplayers_df[\"birthMonth\"] = 0\n#There are NA values in birthDate so that we should drop them\nplayers_df.dropna(subset=[\"birthDate\"], inplace=True)\nfor idx, row in players_df.iterrows():\n    if len(row['birthDate'].split('\/')) == 3: \n        players_df.loc[idx, 'birthYear'] = row['birthDate'].split('\/')[2]\n        players_df.loc[idx, 'birthMonth'] = row['birthDate'].split('\/')[0]\n        \n    elif len(row['birthDate'].split('-')) == 3: \n        players_df.loc[idx, 'birthYear'] = row['birthDate'].split('-')[0]\n        players_df.loc[idx, 'birthMonth'] = row['birthDate'].split('-')[1]","94eff9ab":"plt.figure(figsize=(16, 10))\nax=sns.countplot(x=\"birthYear\",data=players_df,order=players_df.birthYear.value_counts().index,palette=\"Dark2_r\",linewidth=3)\nax.bar_label(ax.containers[0])\nplt.title(\"Birth Year of the players\",font=\"Serif\", size=20)\nplt.show()","48870115":"data = go.Pie(\nvalues= players_df[\"birthMonth\"].value_counts(),\nlabels= players_df[\"birthMonth\"].value_counts().index,\n)\nlayout = go.Layout(\ntitle=dict(text = \"Birth Month for players\",x=0.46,y=0.95,font_size=20)\n)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","5f2ce540":"cloud = WordCloud(width=1440, height=1080,stopwords={'nan'}).generate(\" \".join(players_df['collegeName'].astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')","872e1271":"cloud = WordCloud(width=1440, height=1080,stopwords={'nan'}).generate(\" \".join(players_df['displayName'].astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')","3ba8abb8":"plays_df.head()","b4a658ef":"plays_df.shape","8c3453e4":"plays_df.describe().T","250f098b":"plt.figure(figsize=(10, 10))\nax=sns.countplot(x=\"quarter\",data=plays_df,order=plays_df.quarter.value_counts().index,palette=\"Dark2_r\",linewidth=3)\nax.bar_label(ax.containers[0])\nplt.title(\"No of plays in every quarter\",font=\"Serif\", size=20)\nplt.show()","e6a279c4":"data = go.Pie(\nvalues= plays_df[\"down\"].value_counts(),\nlabels= plays_df[\"down\"].value_counts().index,\n)\nlayout = go.Layout(\ntitle=dict(text = \"No of plays of every down\",x=0.46,y=0.95,font_size=20)\n)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","285e1f84":"plt.figure(figsize=(15, 10))\nax=sns.countplot(x=\"yardsToGo\",data=plays_df,order=plays_df.yardsToGo.value_counts().index,palette=\"Dark2_r\",linewidth=3)\nax.bar_label(ax.containers[0])\nplt.title(\"Number of plays for every yards to go category\",font=\"Serif\", size=20)\nplt.show()","e571a478":"group_labels = ['PlayResult Distribution']\nhist_data = [plays_df[\"playResult\"]]\nfig = ff.create_distplot(hist_data,group_labels, bin_size=[2])\nfig.show()","8ac9ee68":"group_labels = ['PreSnapHomeScore Distribution']\nhist_data = [plays_df[\"preSnapHomeScore\"]]\nfig = ff.create_distplot(hist_data,group_labels, bin_size=[2])\nfig.show()","d14ffd5c":"group_labels = ['PreSnapVisitorScore Distribution']\nhist_data = [plays_df[\"preSnapVisitorScore\"]]\nfig = ff.create_distplot(hist_data,group_labels, bin_size=[2])\nfig.show()","286e056b":"<div class=\"alert alert-block alert-success\">  \n<h2><center><strong>Analysis of Game Dataframe <\/strong><\/center><\/h2>\n<\/div>","94feadf3":"### Players Date of Birth Analysis ","4c1aa169":"<div class=\"alert alert-block alert-success\">  \n<h2><center><strong>Analysis of Players Dataframe <\/strong><\/center><\/h2>\n<\/div>","6b007599":"<div class=\"alert alert-block alert-info\">  \n    <h3><strong>\ud83d\udc68\u200d\ud83d\udcbb Getting Started with NFL Big Data Bowl 2022.\nApplying analytical skills to evaluate team performance<\/strong><\/h3>\n    <i><\/i>\n<\/div>","0e83b704":"<div class=\"alert alert-block alert-success\">  \n<h2><center><strong>Analysis of Play Dataframe <\/strong><\/center><\/h2>\n<\/div>","cf2890db":"#### Time Attributes ","7f4fa28d":"# <center><img src=\"https:\/\/a.espncdn.com\/photo\/2021\/0719\/nfl_offensive-arsenal_16x9_608x342.jpg\"><\/center>","e48a2030":"<div class=\"alert alert-block alert-info\">\n  <hr>\n<b>Source of Data: <\/b> \n<hr> \n <a href=\"https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2022\/data\">https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2022\/data<\/a>\n<\/div> ","35ccbad3":"<div class=\"alert alert-block alert-danger\">  \n<h2><center><strong>Importing Necessary Libraries \ud83d\udcda \ud83d\udcd6 \ud83d\udcd5 \ud83d\udcd7 \ud83d\udcd8 \ud83d\udcd9<\/strong><\/center><\/h2>\n<\/div>","0bcde31e":"<div class=\"alert alert-block alert-danger\">  \n<h2><center><strong>Data loading and exploration \ud83d\udcc1 \ud83d\udcc2<\/strong><\/center><\/h2>\n        \n<\/div>","91671dba":"<div class=\"alert alert-block alert-info\">  \n \n<hr>\n<b>Data Description: <\/b> \n<hr> \n    <p>We have 5 sets of data containing the stats of the player tracking, play, game, player, and PFF scouting data for all 2018-2020 Special Teams plays.The games.csv contains the teams playing in each game. The primary  keyis gameId.The plays.csv file contains play-level information from each game. The foreign key and the primary key are gameId and playId respectively.The players.csv file contains player-level information from players that participated in any of the tracking data files. The primary key is nflId.tracking[season].csv contain player tracking data from season [season]. The key variables are gameId, playId, and nflId.The PFFScoutingData.csv file contains play-level scouting information for each game. The key variables are gameId and playId.<\/p>\n <a href=\"https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2022\/data\">https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2022\/data<\/a>\n   \n<\/div>"}}