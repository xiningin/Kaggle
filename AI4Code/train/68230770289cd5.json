{"cell_type":{"03e007c2":"code","7b17e011":"code","01b0dd45":"code","7848b46a":"code","f08543a6":"code","53271430":"code","114c0f3c":"code","3825f6a4":"code","8ccbe0e0":"code","1cb5b39c":"code","0cea70ae":"code","a3b413ea":"code","c5442323":"code","ad1f657a":"code","d943b434":"code","a4f189d6":"code","3e261fd7":"code","0a4c7ceb":"code","4b185807":"code","12bfb3d4":"code","45e5a7db":"code","713841a7":"code","663d7508":"code","f51dccae":"code","0fa332ef":"code","bcab525f":"code","c807d8fb":"code","985db6e9":"code","3e6d1e9f":"code","404339cb":"code","7274907a":"code","e1b704aa":"code","5ba3a1a8":"code","72ae95c3":"code","c2097772":"code","d50676fa":"code","fe79dbf8":"code","8c7f02eb":"markdown","b8b3c42a":"markdown","f3910fea":"markdown","d9f6496a":"markdown","95d3a0cc":"markdown","0a1b447f":"markdown","d7baeb63":"markdown","8331894c":"markdown","05d72bdb":"markdown","61c26667":"markdown","e0b568c7":"markdown","cfd1d39b":"markdown","79c86bc5":"markdown","267bdd74":"markdown","7522c333":"markdown","8c7ed599":"markdown","6a33b8e9":"markdown","b7cd0184":"markdown","6148c4c7":"markdown","1ad82155":"markdown"},"source":{"03e007c2":"import os\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import rcParams\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX, SARIMAXResults\nfrom statsmodels.tsa.stattools import adfuller\nfrom sklearn.metrics import mean_squared_error\nos.getcwd()","7b17e011":"os.chdir('..')\nos.listdir()","01b0dd45":"os.chdir(\"input\")\nos.listdir()","7848b46a":"#path = r\"C:\\Users\\[..]\\Desktop\\pump-sensor-data\"\n#df = pd.read_csv(os.path.abspath(path + r\"\/sensor.csv\"),index_col = \"timestamp\",parse_dates=[\"timestamp\"])\ndf = pd.read_csv('sensor.csv',index_col = \"timestamp\",parse_dates=[\"timestamp\"])\ndf.drop(\"Unnamed: 0\",axis=1,inplace=True)\ndf.head()","f08543a6":"df['machine_status'].unique()","53271430":"df.info()","114c0f3c":"df.drop('sensor_15',axis=1,inplace=True)\ndf[\"machine_status\"]=df.machine_status.astype(\"category\")","3825f6a4":"df.machine_status.dtype","8ccbe0e0":"df.describe()","1cb5b39c":"df[\"sensor_00\"].plot(figsize=(10,6))\nplt.xticks(color=\"white\")\nplt.yticks(color=\"white\")\nplt.title(\"Capteur 0 s\u00e9rie temporelle\", color=\"white\")\nplt.xlabel(\"Timestamp\", color=\"white\")","0cea70ae":"df[(df.index.month>=4) & (df.index.month<=6)][\"sensor_00\"].plot(figsize=(10,7))\nplt.xticks(color=\"white\")\nplt.yticks(color=\"white\")\nplt.xlabel(\"Timestamp\", color=\"white\")\nplt.title(\"Extract of the time series between April and June for sensor 00\",color = \"white\")","a3b413ea":"df[\"machine_status\"].cat.categories","c5442323":"df[\"machine_status_code\"]=df[\"machine_status\"].cat.codes","ad1f657a":"df[\"machine_status\"].cat.codes.unique()","d943b434":"df[\"machine_status\"].cat.codes.plot(figsize=(10,7))","a4f189d6":"df.loc[df[\"machine_status\"]==\"BROKEN\",[\"machine_status\",\"machine_status_code\"]]","3e261fd7":"df.loc[df[\"machine_status\"]==\"RECOVERING\",[\"machine_status\",\"machine_status_code\"]].head()","0a4c7ceb":"df.loc[df[\"machine_status\"]==\"NORMAL\",[\"machine_status\",\"machine_status_code\"]].head()","4b185807":"df[(df.index.month>=4) & (df.index.month<=5)].plot(figsize=(15,120), subplots=True)","12bfb3d4":"#On s\u00e9lectionne une partie de notre dataset pour entrainer notre mod\u00e8le supervis\u00e9\ndf_train = df[(df.index.month>=4) & (df.index.month<=5)]","45e5a7db":"df_train[\"sensor_00\"].fillna(method='bfill',inplace=True)","713841a7":"df_train[\"sensor_00\"].isna().sum()","663d7508":"df_train[[\"sensor_00\",\"machine_status_code\"]].plot(figsize=(10,6),subplots=True)\nplt.title(\"Capteur 00 et status de fonctionnement de la machine\", color=\"white\")\nplt.xticks(color=\"white\",rotation=0)\nplt.yticks(color=\"white\")\nplt.xlabel(\"Timestamp\", color=\"white\")","f51dccae":"#On check la stationarit\u00e9 de la s\u00e9rie temporelle avec le test ADF\nadfuller(df_train[\"sensor_00\"],maxlag=50)","0fa332ef":"df_train[\"sensor_00\"].shift(1).head()","bcab525f":"sensor00_acf_plot = plot_acf((df_train[\"sensor_00\"].shift(1)-df_train[\"sensor_00\"]).dropna(), lags=50, title=\"ACF Sensor 00\")","c807d8fb":"sensor00_pacf_plot = plot_pacf(df_train[\"sensor_00\"], lags=50, title=\"PACF Sensor 00\")","985db6e9":"type(df_train.index)","3e6d1e9f":"rcParams['figure.figsize'] = 11, 9\ndecomposed_sensor00 = sm.tsa.seasonal_decompose(df_train[\"sensor_00\"], freq=360)\nfigure = decomposed_sensor00.plot()","404339cb":"#resDiff = sm.tsa.arma_order_select_ic(df_train[\"sensor_00\"], max_ar=10, max_ma=10, ic='aic', trend='c')\n#print('ARMA(p,q) = ',resDiff[\"aic_min_order\"],' is the best!')","7274907a":"model = SARIMAX(df_train[\"sensor_00\"], order=(9,1,9))\nresults = model.fit()\nresults.summary()","e1b704aa":"results_plot = results.plot_diagnostics(figsize=(15,12))","5ba3a1a8":"df_train.index[0], df_train.index[-1]","72ae95c3":"tr_start, tr_end = '2018-04-01 00:00:00','2018-05-31 23:59:00'\ntr_pred = '2018-06-10 00:00:00'\nsteps_to_predict = 5","c2097772":"forecast = results.forecast(steps_to_predict)","d50676fa":"df_train[\"prediction\"] = results.predict(start=70640,end=87840, dynamic=True)\ndf_train[[\"sensor_00\",\"prediction\"]].plot(figsize=(12,8))","fe79dbf8":"df_train[\"prediction\"] = results.predict(start=73640,end=87840, dynamic=True)\ndf_train[[\"sensor_00\",\"prediction\"]].plot(figsize=(12,8))","8c7f02eb":"In this kernel I wanted to practice with time series with classic statistical tools in order to check if it could help for anomaly detection.\nAt first I've just studied if an ARIMA model variant could predict some irregular univariate time series and I noticed a few limits. Please feel free if you notice some irregularities in the methods I've employed","b8b3c42a":"Let's grab an subset of our sensor data so my computer doesn't cry when I want to train my model on it, I took 2 month of data between April and end of May","f3910fea":"Not really convincing, we'll also do the partial autocorrelation plot for our sensor 00 for the exercice","d9f6496a":"In conclusion : \n- ARIMA seems good for regular patterns which are noticeable on the time series itself but not on random time series just like we did here\n- Our prediction depends on the forecasting time and even though we did prediction on a portion of data that we trained on, it's supposed to overfit and our prediction should match out data but it's not even the case, mistake in the process or misfit of the model for our data ?\n- ARIMA is such a pain to make it work and a lot of hypotheses must be met in order to validate the model (normality condition on the data distribution => transformations)\n- It would be interesting to compare approaches with recent machine learning techniques in order to compare a linear approach to a non linear one\n\nIn a next notebook I'd like to do the same study on another time series of the same dataset with a NN and a RNN to compare forecasting performances\n\nAs I'm a beginner, many flaws may happen in the process I've offered in this notebook, I'd be glad to have feedbacks for any who'd be taking time to point out unclear points I'm grateful in advance to you!","95d3a0cc":"It seems like this time series is pretty much correlated with the broken state of the machine and may be a good indicator for the broken state of the system, we'll check it for another notebook. For now the only interest is to manipulate and forecast to check robustness of classical methods","0a1b447f":"We'll need to remove seasonality, for this we'll test which are the best values for our model","d7baeb63":"We'll now have an overview of all sensors to check if there is some interesting pattern to look at","8331894c":"We'll check for stationarity with AD-Fuller test and check if the p-value is <= 0.5","05d72bdb":"I've also added the \"machine_status_code\" in the plot in order to look if there was some obvious patterns that could be landmarked in a certain period\nwe can see some sensors can be grouped for a further study in a multivariate time series study, for this notebook we'll just focus on a univariate time series study with classical statistical tool ARIMA","61c26667":"Let's do some imputation for missing values on \"sensor 00\" time series","e0b568c7":"We'll check our categorical variable is now considered as a \"category\" type variable","cfd1d39b":"As we notice, linear prediction is dependent on the chosen forecasting starting time => very little reliability if we want to do anomaly detection on a single time series.","79c86bc5":"Seems good at first! But let's check it visually, I'll differenciate our time series and then look further","267bdd74":"Let's drop \"sensor_15\" as it won't bring anything to our study","7522c333":"We see how much ARIMAX is limited for time series for important rebounds which aren't very regular","8c7ed599":"Let's check if there is some pattern we can see with the machine status","6a33b8e9":"We'll use a value of 1 for differentiation d parameter. I've followed the following guidelines [here](http:\/\/people.duke.edu\/~rnau\/arimrule.htm) which mentions about overdifferencing if out lag value in ACF plot goes >= -0.5.\nAfter 1 differentiation, ACF for lag 1 was already equal to -0.2 and then dived into negatives beyond the threshold of the guidelines so we'll keep our d=1\nWhich gives us an ARIMA(9,1,9)","b7cd0184":"Next, we'll plot our results to check if we have :\n- our KDE distribution that follows a N(0,1) distribution (not really the case here...)\n- qq-plot of our residuals follows the linear trend of the sample taken from a standart normal distribution \n- our correlogram reflects stationarity (seems good!)","6148c4c7":"Took forever to run on my computer... But I'll save it for this kernel and the best result was (9,9) for AR and MA values and we had some intuition of this result through the autocorrelation plot","1ad82155":"At first, let's load all our needed libraries"}}