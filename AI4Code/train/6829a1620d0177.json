{"cell_type":{"8b953cd5":"code","be272bc9":"code","fa8c0152":"code","141f7d30":"code","50ab088d":"code","1fd1227a":"code","59120111":"code","7aaec6a9":"code","21e65f81":"code","495b6862":"code","a409878e":"code","f10a86e5":"code","e48db16d":"code","cfc5ea74":"code","5fff05d0":"code","42c9337f":"code","33e871a4":"code","534dc9e8":"code","6ad0cf5e":"code","27638ae5":"code","2552a19c":"code","5a8a7a79":"code","95849f81":"code","278e1d3e":"code","39cbb5f5":"code","53afccdc":"code","529b2002":"code","528e9edd":"markdown","23f6cb4c":"markdown","d048bd55":"markdown","7766da7a":"markdown","ef8c1010":"markdown","61fb6bde":"markdown","6073b9c5":"markdown","423f07d0":"markdown","46e3469b":"markdown","06c65adf":"markdown"},"source":{"8b953cd5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","be272bc9":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn import preprocessing","fa8c0152":"df=pd.read_csv('\/kaggle\/input\/tdac-wine\/Test_Data.csv')","141f7d30":"df.head()","50ab088d":"df.type.unique()","1fd1227a":"df.drop(\"index\",axis=1,inplace=True)","59120111":"df.describe()","7aaec6a9":"df.info()","21e65f81":"df.isna().sum()","495b6862":"sns.countplot(df['type'])","a409878e":"plt.figure(figsize=(14,14))\nax=sns.heatmap(df.corr(),annot=True)\nbottom, top = ax.get_ylim()\nax.set_ylim(bottom + 0.5, top - 0.5)","f10a86e5":"target=df['type']\ndf.drop('type',axis=1,inplace=True)","e48db16d":"min_max_scaler=preprocessing.MinMaxScaler()\nscaled_vals=min_max_scaler.fit_transform(df.values)\npreprocessed_df=pd.DataFrame(scaled_vals,columns=df.columns)\npreprocessed_df.head()","cfc5ea74":"from sklearn.manifold import TSNE\ndata=TSNE(n_components=2, early_exaggeration=2.0).fit_transform(preprocessed_df)\ndata=pd.DataFrame(data)\ndata.head()","5fff05d0":"type0=data[target==0]\ntype1=data[target==1]\nfig,ax=plt.subplots(1,1,figsize=(12, 12))\ntype0.plot.scatter(0,1, color='red', ax=ax, label='Type 0')\ntype1.plot.scatter(0,1, color='blue', ax=ax, label='Type 1')","42c9337f":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\nparameters_logit= [{'C':[0.01,0.1,0.2,0.5],'solver':['liblinear'],'penalty':['l1','l2'],'max_iter':[1000]}]\ngrid_search_model=GridSearchCV(estimator=LogisticRegression(), param_grid=parameters_logit,scoring='accuracy',cv=10)","33e871a4":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(preprocessed_df,target)\nprint(X_train.shape)\nprint(X_test.shape)","534dc9e8":"grid_search_model.fit(X_train, Y_train)","6ad0cf5e":"train_prediction=grid_search_model.predict(X_train)\nfrom sklearn.metrics import classification_report\nprint(classification_report(Y_train, train_prediction))","27638ae5":"test_prediction=grid_search_model.predict(X_test)\nprint(classification_report(Y_test, test_prediction))","2552a19c":"val_df=pd.read_csv('\/kaggle\/input\/tdac-wine\/Val_Data.csv')","5a8a7a79":"val_scaled_vals=min_max_scaler.fit_transform(val_df.values)\nval_preprocessed_df=pd.DataFrame(val_scaled_vals,columns=val_df.columns)\nval_preprocessed_df.head()","95849f81":"submission=pd.DataFrame(val_df['Index'])\nval_preprocessed_df.drop('Index',axis=1,inplace=True)\nfinal_prediction=grid_search_model.predict(val_preprocessed_df.values)\nsubmission['type']=final_prediction\nsubmission.rename(columns={\"Index\":\"ID\"},inplace=True)","278e1d3e":"submission.head()","39cbb5f5":"sns.countplot(submission['type'])","53afccdc":"submission[submission['type']==0].count()","529b2002":"submission.to_csv('Submission.csv',index=False)","528e9edd":"Predict and view f1 score for accuracy","23f6cb4c":"Predict for validation data ","d048bd55":"Split testing and training data","7766da7a":"Heatmap for displaying correlation","ef8c1010":"Using GridSearchCV","61fb6bde":"Importing libraries","6073b9c5":"Fit training data","423f07d0":"Preprocessing","46e3469b":"Checking the count of both types","06c65adf":"Reduce dimensionality"}}