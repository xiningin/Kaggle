{"cell_type":{"deabbef7":"code","fad1b16f":"code","dae79580":"code","33db2cdf":"code","cea14a3b":"code","8019da44":"code","cfb6e960":"code","f76b3ed8":"code","2e23748b":"code","f5aaf938":"code","2b94eecd":"code","69da623e":"code","9cfe0d1d":"code","b147952b":"code","fe499ae7":"code","cfe56d8b":"code","8b8cf9c2":"code","35165a40":"code","86392dfe":"code","7408ec79":"code","59e5dcf3":"code","e6082663":"code","e0f00d55":"markdown","c26cd841":"markdown","b45545c3":"markdown","2fe122e0":"markdown","9906b2f2":"markdown","ca66fca9":"markdown","46bc96ce":"markdown","e52cf2f8":"markdown","693a3c2e":"markdown","b7d607e5":"markdown","4974dfae":"markdown","5b368e5d":"markdown","f7669e54":"markdown","5470369d":"markdown","d26d65b8":"markdown","7628ca0d":"markdown","f0c94f07":"markdown","4a53d39e":"markdown","91cd7ada":"markdown","192990c1":"markdown","97fcd160":"markdown","f7a9c349":"markdown","79ecfcdb":"markdown","2f3e93b5":"markdown","6378e20d":"markdown","72b0c7d7":"markdown","93bdafda":"markdown","f3527a91":"markdown"},"source":{"deabbef7":"import sqlite3\nimport pandas as pd\nfrom sqlalchemy import create_engine","fad1b16f":"engine = create_engine('sqlite:\/\/', echo=False)\n\ncovid_nsw_df = pd.read_csv('\/kaggle\/input\/nsw-covid19-cases-by-location\/confirmed_cases_table1_location.csv')\n\ncovid_nsw_df.to_sql('covid_nsw', engine, if_exists='replace', index=False)","dae79580":"pd.read_sql_query(\"\"\"SELECT *\n                     FROM covid_nsw\n                     LIMIT 10\"\"\", engine)","33db2cdf":"covid_nsw_df.info()\n\ncovid_nsw_df.shape","cea14a3b":"pd.read_sql_query(\"\"\"SELECT MIN(notification_date) first_date,\n                         MAX(notification_date) last_date\n                     FROM covid_nsw\"\"\", engine)","8019da44":"pd.read_sql_query(\"\"\"SELECT *\n                     FROM covid_nsw\n                     WHERE notification_date IS NULL\n                         OR postcode = 'None'\n                         OR lhd_2010_code IS NULL\n                         OR lhd_2010_name IS NULL\n                         OR lga_code19 IS NULL\n                         OR lga_name19 IS NULL\"\"\", engine)","cfb6e960":"pd.read_sql_query(\"\"\"SELECT SUM(CASE WHEN notification_date IS NULL THEN 1 ELSE 0 END) 'nd_miss',\n                         SUM(CASE WHEN postcode IS 'None' THEN 1 ELSE 0 END) 'pc_miss', \n                         SUM(CASE WHEN lhd_2010_code IS  NULL THEN 1 ELSE 0 END) 'lhdc_miss',\n                         SUM(CASE WHEN lhd_2010_name IS NULL THEN 1 ELSE 0 END) 'lhdn_miss',\n                         SUM(CASE WHEN lga_code19 IS NULL THEN 1 ELSE 0 END) 'lgac_miss',\n                         SUM(CASE WHEN lga_name19 IS NULL THEN 1 ELSE 0 END) 'lgan_miss'\n                     FROM covid_nsw\"\"\", engine)","f76b3ed8":"pd.read_sql_query(\"\"\"SELECT *\n                     FROM covid_nsw\n                     WHERE postcode IS NOT 'None'\n                         AND (lga_name19 IS NULL OR lga_code19 IS NULL)\"\"\", engine)","2e23748b":"postcode_to_lga_df = pd.read_csv('\/kaggle\/input\/nsw-postcode-to-lga\/postcode_to_lga.csv') # importing csv\n\npostcode_to_lga_df.to_sql('postcode_to_lga', engine, if_exists='replace')\n\npostcode_to_lga_df.info()","f5aaf938":"covid_nsw_df_2 = pd.read_sql_query(\"\"\"SELECT c.*, \n                                       p.lga\n                                   FROM covid_nsw c\n                                   INNER JOIN postcode_to_lga p\n                                       ON c.postcode = p.'Postcode code'\"\"\", engine)\n\ncovid_nsw_df_2.to_sql('covid_nsw_2', engine, if_exists='replace', index=False)","2b94eecd":"pd.read_sql_query(\"\"\"SELECT *\n                     FROM covid_nsw_2\n                     ORDER BY notification_date\n                     LIMIT 5\"\"\", engine)","69da623e":"pd.read_sql_query(\"\"\"SELECT notification_date,\n                         COUNT(*) cases\n                     FROM covid_nsw_2\n                     GROUP BY 1\n                     ORDER BY 1\"\"\", engine)","9cfe0d1d":"pd.read_sql_query(\"\"\"SELECT notification_date date,\n                         COUNT(*) cases\n                     FROM covid_nsw_2\n                     GROUP BY 1\n                     ORDER BY 2 DESC\n                     LIMIT 10\"\"\", engine)","b147952b":"pd.read_sql_query(\"\"\"WITH RECURSIVE dates(date) AS (\n                         VALUES((\n                             SELECT MIN(notification_date)\n                             FROM covid_nsw_2\n                             )\n                         )\n                         UNION ALL\n                         SELECT DATE(date, '+1 day')\n                         FROM dates\n                         WHERE date < (\n                             SELECT MAX(notification_date)\n                             FROM covid_nsw_2\n                             )\n                     )\n                     \n                     SELECT d.date zero_days\n                     FROM dates d\n                     LEFT JOIN covid_nsw_2 c\n                         ON d.date = c.notification_date\n                     WHERE notification_date IS NULL\n                     ORDER BY 1\"\"\", engine)","fe499ae7":"greater_sydney_lgas_df = pd.read_csv('\/kaggle\/input\/greater-sydney-local-government-areas\/greater_sydney_lgas.csv', encoding='cp1252')\n\ngreater_sydney_lgas_df.to_sql('greater_sydney_lgas', engine, if_exists='replace')\n\ngreater_sydney_lgas_df","cfe56d8b":"pd.read_sql_query(\"\"\"SELECT DISTINCT lga_name\n                     FROM greater_sydney_lgas g\n                     LEFT JOIN covid_nsw_2 c\n                         ON g.lga_name = c.lga\n                     WHERE lga IS NULL\"\"\", engine)","8b8cf9c2":"pd.read_sql_query(\"\"\"SELECT DISTINCT lga \n                     FROM covid_nsw_2\n                     WHERE lga LIKE 'Hunter%'\n                         OR lga LIKE '%Hills%'\n                     ORDER BY 1 DESC\"\"\", engine)","35165a40":"greater_sydney_lgas_df_2 = pd.read_sql_query(\"\"\"SELECT lga_name\n                                             FROM greater_sydney_lgas\n                                             UNION\n                                             SELECT DISTINCT lga \n                                             FROM covid_nsw_2\n                                             WHERE lga LIKE 'Hunter%'\n                                                 OR lga LIKE '%Hills%'\n                                             ORDER BY 1\"\"\", engine)\n\ngreater_sydney_lgas_df_2.to_sql('greater_sydney_lgas', engine, if_exists='replace', index=False)\n\npd.read_sql_query(\"\"\"SELECT *\n                     FROM greater_sydney_lgas\"\"\", engine)","86392dfe":"pd.read_sql_query(\"\"\"SELECT lga,\n                         COUNT(*) cases\n                     FROM covid_nsw_2\n                     GROUP BY 1\n                     ORDER BY 2 DESC\n                     LIMIT 10\"\"\", engine)","7408ec79":"pd.read_sql_query(\"\"\"SELECT lga,\n                         COUNT(*) cases\n                     FROM covid_nsw_2\n                     WHERE lga IN (\n                         SELECT *\n                         FROM greater_sydney_lgas\n                     )\n                     GROUP BY 1\n                     ORDER BY 2 DESC\"\"\", engine)","59e5dcf3":"pd.read_sql_query(\"\"\"WITH lga_top10_all AS (\n                         SELECT lga,\n                             COUNT(*) 'cases'\n                         FROM covid_nsw_2\n                         GROUP BY 1\n                         ORDER BY 2 DESC\n                         LIMIT 10\n                     ),\n                     \n                     cases_pre_delta AS (\n                         SELECT lga,\n                             COUNT(*) 'cases_pre_delta'\n                         FROM covid_nsw_2\n                         WHERE notification_date < '2021-06-18'\n                             AND lga IN\n                                 (SELECT lga\n                                  FROM lga_top10_all\n                                 )\n                         GROUP BY 1\n                         ORDER BY 2 DESC\n                     )\n                     \n                     SELECT l.lga,\n                         c.cases_pre_delta,\n                         (l.cases - c.cases_pre_delta) 'cases_post_delta',\n                         l.cases 'cases_total'\n                     FROM lga_top10_all l\n                     LEFT JOIN cases_pre_delta c\n                         ON l.lga = c.lga\n                     ORDER BY 4 DESC\"\"\", engine)","e6082663":"pd.read_sql_query(\"\"\"SELECT DISTINCT lga\n                     FROM postcode_to_lga\n                     WHERE lga NOT IN (\n                         SELECT lga\n                         FROM covid_nsw_2\n                         )\n                     ORDER BY 1\"\"\", engine)","e0f00d55":"### Reading CSV into Pandas & SQLite","c26cd841":"The LGA names in `greater_sydney_lgas` need to align with our main table, `covid_nsw_2`.\n\nWe will need to `LEFT JOIN` the two tables and identify LGAs in `greater_sydney_lgas` but not in `covid_nsw_2`. These will be the LGAs in Greater Sydney that will need to have their names amended to match those in `covid_nsw_2`.","b45545c3":"Local Health Districts can also be imputed from `postcode` using NSW Health's [Wall Map](https:\/\/www.health.nsw.gov.au\/lhd\/Documents\/lhd-wall-map.pdf). \n\nHowever, presently, we are not looking to analyse Local Health District information.","2fe122e0":"The `lga` column in this table (`covid_nsw_2`) will be used instead of `lga_code19` to ensure LGA completeness.","9906b2f2":"Finding the way that `covid_nsw_2` refers to the identified Greater Sydney LGAs above:","ca66fca9":"##### Importing, inspecting & cleaning\nWe will import & inspect a CSV that lists Greater Sydney LGAs, published by [NSW Government](https:\/\/www.nsw.gov.au\/covid-19\/stay-safe\/protecting\/advice-high-risk-groups\/disability\/local-councils-greater-sydney).","46bc96ce":"## Conclusion\nThanks everyone for supporting my SQL journey - more projects to come!","e52cf2f8":"### Missing Values","693a3c2e":"##### No reported cases","b7d607e5":"#### \"Zero\" days\nAs the `covid_nsw_2` data only reports cases that have been notified, we will need to:\n1. Generate the dates between the start and end of the reporting period. This will update automatically as we load in a new CSV from Data.NSW.\n2. `LEFT JOIN` those dates with `covid_nsw_2` and find dates that were *not* in the `covid_nsw_2` table.","4974dfae":"#### Highest reported daily cases - top 10","5b368e5d":"#### Identifying & diagnosing\n*NB: the `postcode` column has `None` instead of `NULL` values*","f7669e54":"Finding the count of missing values in each column:","5470369d":"### Importing Packages","d26d65b8":"### Initial Inspection","7628ca0d":"# COVID-19 NSW EDA\nUsing SQL, the following is an exploratory data analysis (EDA) of COVID-19 in NSW as released by the State Government via [Data.NSW](https:\/\/data.nsw.gov.au\/search\/dataset\/ds-nsw-ckan-97ea2424-abaf-4f3e-a9f2-b5c883f42b6a\/details?q=).\n\n**Please visit my GitHub ([henrylin03](https:\/\/github.com\/henrylin03\/)) for more projects!**\n\nLast updated: 3 Jan 2022","f0c94f07":"##### Total reported cases, during \"Delta\" - top 10 in NSW - compared with pre-\"Delta\" total cases\nAlthough unclear of the exact date, the \"Delta\" wave (also known as Australia's 3rd wave, and NSW's 2nd wave), this likely began on or around 18 June 2021.\n\nSource 1: [ABC News 2021a, 'Outbreak, How Australia lost control of the COVID Delta variant | ABC News'](https:\/\/www.youtube.com\/watch?v=M9MPXCpyCnY&ab_channel=ABCNewsIn-depth)\n\nSource 2: [ABC News 2021b, 'NSW Health records additional COVID-19 case, masks mandatory for public transport in Greater Sydney'](https:\/\/www.abc.net.au\/news\/2021-06-18\/nsw-records-one-covid-19-case-masks-for-public-transport\/100225370)","4a53d39e":"### Geographic","91cd7ada":"Updating the `greater_sydney_lgas` table to ensure it has the names in `covid_nsw_2`:\n\n*NB: with `sqlalchemy`, both `UPDATE` and `CREATE TABLE` produce 'ResourceClosedError: This result object does not return rows. It has been closed automatically.' ([Source](https:\/\/github.com\/sqlalchemy\/sqlalchemy\/issues\/5433)). Thus, instead, we are using `UNION` so that later analysis can use `IN` for this table.*","192990c1":"#### \"Greater Sydney\"\nThe original dataset reports on *all* LGAs in NSW. In order to limit by \"Greater Sydney\", where needed, we will prepare a table that lists Greater Sydney LGAs.\n\nAlthough there are some definition differences, we use the \"Greater Sydney\" LGAs as exhaustively defined in the COVID rules, published by the [NSW Government](https:\/\/www.nsw.gov.au\/covid-19\/stay-safe\/protecting\/advice-high-risk-groups\/disability\/local-councils-greater-sydney) and referenced in press conferences and media updates.","97fcd160":"### Date Range\nExploring the first and last date of reporting period.","f7a9c349":"#### LGAs\n##### NSW - Top 10","79ecfcdb":"#####  Greater Sydney - ranked","2f3e93b5":"Unfortunately, if the `postcode` is missing, it would be difficult to impute a value, as this was not published by Data.NSW. \n\nHowever, LGAs can be imputed from `postcode` in the following rows, where `postcode` was not `None`, but `lga_name19` was:","6378e20d":"## Exploratory Data Analysis\n### Daily Count\n#### Total daily reported cases\nAs the table has each row representing a notified COVID case, we will aggregate them by `notification_date`:","72b0c7d7":"## Setup","93bdafda":"## Diagnosing & Cleaning","f3527a91":"#### Resolving missing values\nWe will use [WorldPostalCodes'](https:\/\/www.worldpostalcodes.org\/l1\/en\/au\/australia\/list\/r1\/list-of-postcodes-in-new-south-wales) table to convert NSW postcodes to the LGAs. "}}