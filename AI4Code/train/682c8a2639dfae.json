{"cell_type":{"919d2515":"code","faf191db":"code","fc8f6d86":"code","beb877ff":"code","667a6cf9":"code","29dd9061":"code","16593cea":"code","c48c9725":"code","56cfd7ba":"code","74422245":"code","01674cba":"code","f1cdbc56":"code","3df1df67":"markdown","71a2ccc1":"markdown","6ebba51b":"markdown","740e143e":"markdown","5965c5f2":"markdown","305d9854":"markdown"},"source":{"919d2515":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","faf191db":"# read in all our data\nnfl_data = pd.read_csv(\"..\/input\/nflplaybyplay2009to2016\/NFL Play by Play 2009-2017 (v4).csv\")\n\n# set seed for reproducibility\nnp.random.seed(0)","fc8f6d86":"# look at a few rows of the nfl_data file. I can see a handful of missing data already!\nnfl_data.sample(5)","beb877ff":"# get the number of missing data points per column\nmissing_values_count = nfl_data.isnull().sum()\n\n# look at the # of missing points in the first ten columns\nmissing_values_count[0:10]","667a6cf9":"# how many total missing values do we have?\ntotal_cells = np.product(nfl_data.shape)\ntotal_missing = missing_values_count.sum()\n\n# percent of data that is missing\n(total_missing\/total_cells) * 100","29dd9061":"# look at the # of missing points in the first ten columns\nmissing_values_count[0:10]","16593cea":"# Drop missing values (NOT RECOMMENDED)\n'''If you're in a hurry or don't have a reason to figure out why your values are missing, \none option you have is to just remove any rows or columns that contain missing values.'''\n\n# remove all the rows that contain a missing value\nnfl_data.dropna()","c48c9725":"# remove all columns with at least one missing value\ncolumns_with_na_dropped = nfl_data.dropna(axis=1)\ncolumns_with_na_dropped.head()","56cfd7ba":"# just how much data did we lose?\nprint(\"Columns in original dataset: %d \\n\" % nfl_data.shape[1])\nprint(\"Columns with na's dropped: %d\" % columns_with_na_dropped.shape[1])","74422245":"# get a small subset of the NFL dataset\nsubset_nfl_data = nfl_data.loc[:, 'EPA':'Season'].head()\nsubset_nfl_data","01674cba":"# replace all NA's with 0\nsubset_nfl_data.fillna(0)","f1cdbc56":"# replace all NA's the value that comes directly after it in the same column, \n# then replace all the reamining na's with 0\nsubset_nfl_data.fillna(method = 'bfill', axis=0).fillna(0)","3df1df67":"# **Take a first look at the data**","71a2ccc1":"# **See how many missing data points we have**","6ebba51b":"# **Drop missing values**","740e143e":"# **Filling in missing values automatically**","5965c5f2":"# **Figure out why the data is missing**","305d9854":"### It removed all our data. This is because every row in our dataset had at least one missing value."}}