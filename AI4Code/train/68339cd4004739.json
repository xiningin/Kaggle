{"cell_type":{"7f52ec66":"code","e2af038d":"code","cbbe6f26":"code","e1a62411":"code","236aa728":"code","b6fe3f0a":"code","d0e8318b":"code","391effed":"code","2018bfd1":"code","006dc4c4":"code","4e3aefdb":"markdown","296dbc82":"markdown","0ff83eff":"markdown","cc300851":"markdown","5ea9b672":"markdown","d9166794":"markdown"},"source":{"7f52ec66":"!pip uninstall -y kaggle\n!pip install --upgrade pip\n!pip install kaggle==1.5.6\n\nfrom google.colab import files\nfiles.upload()\n\n!mkdir -p ~\/.kaggle\n!cp kaggle.json ~\/.kaggle\/\n!ls -lha kaggle.json\n\n!chmod 600 ~\/.kaggle\/kaggle.json\n!ls -lha kaggle.json","e2af038d":"! kaggle competitions download -c rainyseason\n!unzip rainyseason.zip","cbbe6f26":"import numpy as np\nimport torch\nimport torch.optim as optim\nimport pandas as pd\nimport torch.nn.functional as F\n\ntorch.manual_seed(1)\nxy_train = np.loadtxt('rainyseason-train.csv', delimiter=',', dtype=np.float32, skiprows=1, usecols=range(4,13))\n\nx_train = torch.from_numpy(xy_train[:,1:])\n\ny_data = xy_train[:,[0]].squeeze()\ny_train = torch.LongTensor(y_data)\n\nxy_test = np.loadtxt('rainyseason-test.csv', delimiter=',', dtype=np.float32, skiprows=1, usecols=range(5,13))\ntest_x_data = torch.from_numpy(xy_test)\n\nprint(x_train)\nprint(x_train.shape)\nprint(y_train)\nprint(test_x_data)\nprint(test_x_data.shape)","e1a62411":"w = torch.zeros((8,2), requires_grad=True)\nb = torch.zeros(1, requires_grad=True)\n\noptimizer = optim.SGD([w, b], lr=1e-1, momentum=0.8)\nepochs = 10000\n\nfor epoch in range(epochs+1):\n  hypothesis = F.softmax(x_train.matmul(w) + b, dim=1)\n\n  y_one_hot = torch.zeros(len(y_train), 2)\n  y_one_hot.scatter_(1, y_train.unsqueeze(1), 1)\n  cost = (y_one_hot * -torch.log(F.softmax(hypothesis, dim=1))).sum(dim=1).mean()\n\n  optimizer.zero_grad()\n  cost.backward()\n  optimizer.step()\n\n  if epoch%1000==0 :\n    print(\"Epoch: {}    Cost: {:.6f}\".format(epoch, cost.item()))","236aa728":"hypothesis = F.softmax(test_x_data.matmul(w) + b, dim=1)\npredict = torch.argmax(hypothesis, dim=1)\n\nprint(predict)","b6fe3f0a":"submit = pd.read_csv('sample.csv')\nsubmit","d0e8318b":"for i in range(len(predict)):\n  submit['RainySeason'][i] = predict[i].item()\n\nsubmit['RainySeason'] = submit['RainySeason'].astype(int)\n\nsubmit","391effed":"submit.to_csv('baseline.csv', index=False, header=True)","2018bfd1":"! kaggle competitions submit -c rainyseason -f baseline.csv -m \"18011762\uc774\uc218\ubbfc\"","006dc4c4":"hypothesis = F.softmax(x_train.matmul(w)+b, dim=1)\npredict = torch.argmax(hypothesis, dim=1)\n\ncorrect_prediction = predict.float() == y_train\nprint(correct_prediction)\n\naccuracy = correct_prediction.sum().item() \/ len(correct_prediction)\n\nprint(\"Accuracy: {:2.2f}%\".format(accuracy*100))","4e3aefdb":"# \ub370\uc774\ud130 \ub85c\ub354","296dbc82":"# \uc815\ub2f5 \uc608\uce21","0ff83eff":"# Kaggle \ub370\uc774\ud130 \ub2e4\uc6b4","cc300851":"# \ubaa8\ub378 \ud559\uc2b5","5ea9b672":" cf)\uc815\ud655\ub3c4 \uad6c\ud558\uae30","d9166794":"# Kaggle \uc81c\ucd9c"}}