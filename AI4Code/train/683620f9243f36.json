{"cell_type":{"ad8a5d93":"code","4ebc03da":"code","101e503f":"code","9f34ee44":"code","3ee56a79":"code","0771dc23":"code","760e6aac":"code","4c65d6ba":"code","565607f9":"code","be88766f":"code","c3c1f5d0":"code","7be9cf4b":"code","5d15c7ec":"code","122eebeb":"code","db638fcc":"code","8572b5f9":"code","cabed1a3":"code","37ed048a":"code","1d07718b":"code","dd661010":"code","91960dee":"code","d63d854d":"code","d874f458":"code","87ba4c45":"markdown","be699f87":"markdown","36062c94":"markdown","27a0530c":"markdown","105e692c":"markdown","ad9d2a40":"markdown","4979590e":"markdown"},"source":{"ad8a5d93":"path_tgz = \"C:\/Users\/Prince.pal\/codes\/01.OCR\/Pan Card Data\/\"\npath_store= \"C:\/Users\/Prince.pal\/codes\/01.OCR\/extracted file\/\"\n\ndef extract(tar_add, ext_add):\n    filename = tar_add\n    tf = tarfile.open(filename)\n    tf.extractall(ext_add)\n\nimport os\nfor file in os.listdir(path_tgz):\n    if file.endswith(\".tgz\"):\n        tgz_loc = (os.path.join(path_tgz, file))\n        ext_loc = (os.path.splitext((os.path.join(path_store, file)))[0])\n        extract(tgz_loc, ext_loc)\n        ","4ebc03da":"tf.close()","101e503f":"import os\n\npath_tgz = \"C:\/Users\/Prince.pal\/codes\/01.OCR\/Pan Card Data\/\"\npath_store= \"C:\/Users\/Prince.pal\/codes\/01.OCR\/extracted file\/\"\n\n\ndates_img_path = []\ndates_txt_path = []\nnames_img_path = []\nnames_txt_path = []\nnumbers_img_path = []\nnumbers_txt_path = []\n\nfor file in os.listdir(path_store):\n    for img in os.listdir(os.path.join(path_store, file+'\/')):\n        if 'date' in file:\n            if img.endswith(\".png\"):\n                dates_img_path.append((os.path.join(path_store, file+'\/',img)))\n            else:\n                dates_txt_path.append((os.path.join(path_store, file+'\/',img)))\n        if 'name' in file:\n            if img.endswith(\".png\"):\n                names_img_path.append((os.path.join(path_store, file+'\/',img)))\n            else:\n                names_txt_path.append((os.path.join(path_store, file+'\/',img)))\n        if 'number' in file:\n            if img.endswith(\".png\"):\n                numbers_img_path.append((os.path.join(path_store, file+'\/',img)))\n            else:\n                numbers_txt_path.append((os.path.join(path_store, file+'\/',img)))\n        \n        ","9f34ee44":"print(\"length of dates_img_path = \",len(dates_img_path))\nprint(\"length of dates_txt_path = \",len(dates_txt_path))\nprint(\"length of names_img_path = \",len(names_img_path))\nprint(\"length of names_txt_path = \",len(names_txt_path))\nprint(\"length of numbers_img_path = \",len(numbers_img_path))\nprint(\"length of numbers_txt_path = \",len(numbers_txt_path))","3ee56a79":"from tqdm import tqdm\nimport pandas as pd\ndates = []\nnames = []\nnumbers = []\n\ndef ext_txt(name,path):\n    for file in tqdm(path):\n        with open(file, 'rt') as fd:\n            first_line = fd.readline()\n            name.append(first_line)\n\n\n","0771dc23":"ext_txt(dates,dates_txt_path)\next_txt(numbers, numbers_txt_path)\next_txt(names, names_txt_path)","760e6aac":"dates = pd.Series(dates)\nnames = pd.Series(names)\nnumbers = pd.Series(numbers)","4c65d6ba":"import pandas as pd\n#dt_nm_nu = pd.DataFrame({\"date\":dates, \"name\":names, \"numbers\":numbers})\n\n#dt_nm_nu = pd.DataFrame(list(zip(dates, names,numbers)), columns = ['dates', 'names','numbers']\ndt= pd.DataFrame({\"dates\": dates})\nnm= pd.DataFrame({\"names\": names})\nnu= pd.DataFrame({\"numbers\": numbers})\n","565607f9":"dt.to_csv(\"original_dates_text.csv\")\ndt.tail()","be88766f":"nm.to_csv(\"original_names_text.csv\")\nnm.tail()","c3c1f5d0":"nu.to_csv(\"original_number_text.csv\")\nnu.tail()","7be9cf4b":"dt_nm_nu['names']= names\ndt_nm_nu['numbers']= numbers\ndt_nm_nu['names']","5d15c7ec":"from PIL import Image\n\nimage = Image.open(dates_img_path[0])\nprint(image.format)\nprint(image.size)\nprint(image.mode)\n# show the image\nimage.show()","122eebeb":"from matplotlib import image\nfrom matplotlib import pyplot\n# load image as pixel array\nimage = image.imread(dates_img_path[0])\n# summarize shape of the pixel array\nprint(image.dtype)\nprint(image.shape)\n# display the array of pixels as an image\npyplot.imshow(image)\npyplot.show()","db638fcc":"text = dates + names + numbers\nimg_path = dates_img_path + names_img_path + numbers_img_path","8572b5f9":"df1 = pd.DataFrame({'Text':text, 'Image_Path':img_path})\ndf1","cabed1a3":"df1.to_csv(\"Text_and_img_Path.csv\")","37ed048a":"!pip install pytesseract","1d07718b":"import glob\nimport random\nimport base64\nimport pandas as pd\n\nfrom PIL import Image\nfrom io import BytesIO\nfrom IPython.display import HTML\n","dd661010":"pd.set_option('display.max_colwidth', -1)\n\ndef get_thumbnail(path):\n    i = Image.open(path)\n    i.thumbnail((150, 150), Image.LANCZOS)\n    return i\n\ndef image_base64(im):\n    if isinstance(im, str):\n        im = get_thumbnail(im)\n    with BytesIO() as buffer:\n        im.save(buffer, 'jpeg')\n        return base64.b64encode(buffer.getvalue()).decode()\n\ndef image_formatter(im):\n    return f'<img src=\"data:image\/jpeg;base64,{image_base64(im)}\">'","91960dee":"\"\"\"dogs = pd.read_csv('..\/input\/labels.csv')\ndogs = dogs.sample(20)\ndogs['file'] = dogs.id.map(lambda id: f'..\/input\/train\/{id}.jpg')\ndogs['image'] = dogs.file.map(lambda f: get_thumbnail(f))\ndogs.head()\"\"\"\n\ndf = pd.DataFrame(list(zip(dates,dates_img_path)), columns=['dates','dates_image_path'])\ndf.head()","d63d854d":"# displaying PIL.Image objects embedded in dataframe\nHTML(dogs[['breed', 'image']].to_html(formatters={'image': image_formatter}, escape=False))","d874f458":"# display images specified by path\nHTML(dogs[['breed', 'file']].to_html(formatters={'file': image_formatter}, escape=False))","87ba4c45":"# Random","be699f87":"## EDA\n-Preprocessing of the Image\n\n-Text Localization\n\n-Character Segmentation\n\n-Character Recognition\n\n-Post Processing","36062c94":"## Creating Dataset","27a0530c":"## Creating Dataframe","105e692c":"### Extracting Text","ad9d2a40":"## Extracting tar files","4979590e":"## Comparision\n\n![ocr%20models%20comparision.png](attachment:ocr%20models%20comparision.png)"}}