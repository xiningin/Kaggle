{"cell_type":{"6c39d7e5":"code","f156de18":"code","34bf8918":"code","a3ebd7ed":"code","14edfa39":"code","86ab4a70":"code","c1a92959":"code","cbfd7d38":"code","b75af025":"code","c03ef93a":"code","aec8425b":"code","07792950":"code","95be18d8":"code","0bcc7c9b":"code","e9196ec6":"code","864c053c":"code","94f3002b":"code","c7cc1974":"code","cbe670b3":"code","8864d4b3":"code","8b8c458a":"code","1a37b224":"code","c82db685":"code","7e5ee0e9":"code","4a8056b0":"code","24ae5618":"code","8730a2b3":"code","5fa75f6e":"code","349c297d":"code","4ea26b13":"markdown","018de830":"markdown","2b162d67":"markdown","0b03e88b":"markdown","6849cc86":"markdown","e91a07aa":"markdown","bd1bac82":"markdown","bbfcf447":"markdown","d29768aa":"markdown","95162d36":"markdown","bac2cb83":"markdown","cd7829f6":"markdown","11251e43":"markdown","63bb2a3a":"markdown","3b466ce6":"markdown","599fa79d":"markdown","387bbe8e":"markdown","65e62fae":"markdown","614826a2":"markdown","6857d8cc":"markdown","aad91fb3":"markdown","ac416b67":"markdown","e2910943":"markdown","5db4f3fb":"markdown","71f01654":"markdown","e4132d79":"markdown"},"source":{"6c39d7e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f156de18":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport textwrap\nimport plotly.express as px","34bf8918":"public_schools = pd.read_csv('..\/input\/us-schools-dataset\/Public_Schools.csv')\npublic_schools.head(3)","a3ebd7ed":"public_schools.isnull().sum()","14edfa39":"public_schools.drop(columns=['X','Y','ZIP','ZIP4','OBJECTID','ADDRESS','SOURCEDATE','WEBSITE','SOURCE','TELEPHONE','NCESID','SHELTER_ID','DISTRICTID','VAL_METHOD','NAICS_CODE','COUNTYFIPS','COUNTRY'],axis=1,inplace=True)\npublic_schools.head()","86ab4a70":"public_schools['VAL_DATE'] = public_schools['VAL_DATE'].str.replace(':','').str.rstrip('0')\npublic_schools['YEAR'] = pd.DatetimeIndex(public_schools['VAL_DATE']).year\n\n#Removing VAL_DATE column\npublic_schools.drop(columns=['VAL_DATE'],axis=1,inplace=True)","c1a92959":"public_schools.head(3)","cbfd7d38":"public_schools = public_schools.rename(columns={'FT_TEACHER':'NO_OF_TEACHERS'})\npublic_schools.head(3)","b75af025":"public_schools = public_schools.rename(columns={'LEVEL_':'STAGE'})\npublic_schools.head(3)","c03ef93a":"public = public_schools.loc[public_schools['STAGE'].isin(['HIGH','ELEMENTARY','MIDDLE','SECONDARY','PREKINDERGARTEN','ADULT EDUCATION'])]\npublic.head(3)","aec8425b":"public.NAME.value_counts()","07792950":"public = public.replace({'NAME':'LINCOLN ELEMENTARY'},'LINCOLN ELEMENTARY SCHOOL')\npublic.NAME.value_counts()","95be18d8":"public.NO_OF_TEACHERS.value_counts()","0bcc7c9b":"public.NO_OF_TEACHERS.replace(-999,999,inplace=True)\npublic.NO_OF_TEACHERS.value_counts()","e9196ec6":"public.POPULATION.value_counts()","864c053c":"public.POPULATION.replace(-999,999,inplace=True)\npublic.POPULATION.value_counts()","94f3002b":"state_entop = public.groupby('STATE')['ENROLLMENT'].sum().reset_index()\nState_entop = state_entop.sort_values('ENROLLMENT',ascending=False).head(10)\nState_entop.reset_index(inplace=True)\n\nState_enbottom = state_entop.sort_values('ENROLLMENT',ascending=True).head(10)\nState_enbottom.reset_index(inplace=True)\n\nprint(State_entop, '\\n')\nprint(State_enbottom)","c7cc1974":"max_width = 15\nstates = [State_entop,State_enbottom]\nstates_title = ['Top 10', 'Bottom 10']\nother_title = ['High Enrollments','Low Enrollments']\nfig, ax = plt.subplots(2,1, figsize = (22,14))\nfig.subplots_adjust(hspace = 0.5)\nfor i in range(0,2):\n    sns.barplot(ax = ax[i], data = states[i], x = 'STATE', y = 'ENROLLMENT')\n    sns.barplot(ax = ax[i], data = states[i], x = 'STATE', y = 'ENROLLMENT')\n    ax[i].legend()\n    ax[i].set_title(states_title[i]+ ' States with '+ other_title[i], fontsize = 20)\n    ax[i].set_ylabel('Enrollment', fontsize = 20)\n    ax[i].set_xlabel('States', fontsize = 20)\n    ax[i].set_xticklabels(textwrap.fill(x.get_text(), max_width) for x in ax[i].get_xticklabels())\n    ax[i].tick_params(labelsize = 18)\n    \nplt.show()","cbe670b3":"name_en = public.groupby(['NAME'])['ENROLLMENT'].sum().reset_index()\nName_en = name_en.sort_values('ENROLLMENT',ascending=False).head(5)\nName_en.reset_index(inplace=True)\nName_en","8864d4b3":"fig, ax = plt.subplots(figsize = [16,5])\nsns.barplot(data = Name_en,x = 'NAME',y = 'ENROLLMENT', ax = ax)\nax.set_ylabel('Enrollment Count')\nax.set_title('Top 5 Public Schools with Enrollment')\nfor index,Name_en in enumerate(Name_en['ENROLLMENT'].astype(int)):\n       ax.text(x=index-0.1 , y =Name_en+2 , s=f\"{Name_en}\" , fontdict=dict(fontsize=8))\nplt.show()","8b8c458a":"year_en = public.groupby('YEAR')['ENROLLMENT'].sum().reset_index()\nYear_en = year_en.sort_values('ENROLLMENT',ascending=False).head(5)\nYear_en","1a37b224":"plt.subplots(figsize=(10,10))\nsplot = sns.barplot(x=Year_en['YEAR'],y=Year_en['ENROLLMENT'], palette = 'winter_r')\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 15), textcoords = 'offset points')\n\nplt.xlabel('YEAR',fontsize=15)\nplt.ylabel('Count',fontsize=15)\nplt.xticks(rotation=90)\nplt.yticks(fontsize=15)\nplt.title('Top 5 ENROLLMENT YEARS',fontsize=15);","c82db685":"public2010 = public.loc[public.YEAR.isin(['2010'])]\npublic2010.head(3)","7e5ee0e9":"public_sch = public2010.groupby('STAGE')['ENROLLMENT'].sum().reset_index()\nPublic_sch2010 = public_sch.sort_values('ENROLLMENT',ascending=False).head(5)\nPublic_sch2010","4a8056b0":"fig = px.pie(Public_sch2010, values=Public_sch2010['ENROLLMENT'], names=Public_sch2010['STAGE'])\nfig.update_layout(title = 'Stages with Most Enrollment')\nfig.show()","24ae5618":"stage_teacher = public.groupby('STAGE')['NO_OF_TEACHERS'].sum().reset_index()\nStage_teacher = stage_teacher.sort_values('NO_OF_TEACHERS',ascending=False).head(5)\nStage_teacher","8730a2b3":"max_width = 15\nfig, ax = plt.subplots(figsize = (10,8))\nsns.barplot(ax = ax, data = Stage_teacher, x = 'STAGE', y = 'NO_OF_TEACHERS')\nax.legend()\nax.set_title('STAGES WITH HIGH NUMBER OF TEACHERS', fontsize = 15)\nax.set_ylabel('NO_OF_TEACHERS', fontsize = 15)\nax.set_xlabel('STAGES', fontsize = 15)\n    \nplt.show()","5fa75f6e":"sch_pop = public.groupby('NAME')['POPULATION'].sum().reset_index()\nSch_pop = sch_pop.sort_values('POPULATION',ascending=False).head(5)\nSch_pop","349c297d":"plt.figure(figsize=(10,5))\nchart = sns.barplot(data=Sch_pop,x='NAME',y='POPULATION',palette='Set1')\nchart.set_xticklabels(chart.get_xticklabels(), rotation=65, horizontalalignment='right',fontweight='light')\nchart.axes.yaxis.label.set_text(\"Population Count\")","4ea26b13":"**NAME VS POPULATION**","018de830":"We see Lincoln Elementary School has the highest number of students that applied, hence having the highest number of enrolled students.","2b162d67":"**YEAR VS ENROLLMENT**","0b03e88b":"Removing the columns we don't need.","6849cc86":"Let's see the years with much enrollment in pubic schools","e91a07aa":"Let's see if there are missing values in the data loaded.","bd1bac82":"Notice we have LINCOLN ELEMENTARY and LINCOLN ELEMENTARY SCHOOL, so making them both have one name ","bbfcf447":"**Cleaning Val_Date**","d29768aa":"**NAME VS ENROLLMENT**","95162d36":"# **Import Libraries**","bac2cb83":"**Cleaning POPULATION**","cd7829f6":"**Renaming LEVEL_**","11251e43":"Let's see the names of Public Schools having huge enrollment numbers","63bb2a3a":"**Loading the Data**","3b466ce6":"So I consider only High, Adult Education, Middle, Secondary and PreKindergarten, since some schools has been labelled as ungraded,not applicable and other.","599fa79d":"**STAGE VS ENROLLMENT**","387bbe8e":"Since 2010 had the most enrollment,let's see which stage had the highest enrollment","65e62fae":"**STATE VS ENROLLMENT**","614826a2":"# **Data Cleaning**","6857d8cc":"So Elementary stage had the highest number of enrollment in 2010.","aad91fb3":"Let's replace -999 with 999.","ac416b67":"Renaming the column FT_TEACHER","e2910943":"**If you found this notebook useful, give me an upvote!. Suggestions for improvements are welcomed**\n","5db4f3fb":"**Cleaning N0_OF_TEACHER**","71f01654":"**Let's see how things look**","e4132d79":"# **Data Visualization**"}}