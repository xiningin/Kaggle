{"cell_type":{"5d1ec212":"code","2f982052":"code","68442ebb":"code","26ab69bc":"code","310e7416":"code","5ee025fb":"code","2b57a33e":"code","88f7f531":"code","ff606a20":"code","82f3b84b":"code","2362b599":"code","4952dcbd":"code","80dda706":"code","5e517089":"code","cb8f1aa0":"code","3b9ccbf6":"code","994f79cc":"code","48caf475":"code","dd65d934":"code","3de9f16b":"code","f2df7564":"code","aadc7262":"code","51e921d5":"code","c99acc7e":"markdown","d6563077":"markdown","5f00c70b":"markdown","51c48c1f":"markdown","b75af457":"markdown","ceadbd3a":"markdown","b4006001":"markdown"},"source":{"5d1ec212":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2f982052":"dataset = pd.read_csv('..\/input\/life-expectancy-who\/Life Expectancy Data.csv')\ndataset.head()","68442ebb":"dataset.info()","26ab69bc":"round(dataset.describe(),3)","310e7416":"dataset['Year'].unique()","5ee025fb":"sns.heatmap(pd.isna(dataset))","2b57a33e":"# \u5220\u9664\u7a7a\u503c\u5927\u4e8e3\u4e2a\u7684\u6570\u636e\n# Delete data with more than 3 null values\ndataset = dataset.dropna(thresh=17)\ndataset.isna().sum().sort_values()","88f7f531":"corr_data=dataset.corr()\ncorr_data","ff606a20":"plt.figure(figsize=(15,12))\nsns.heatmap(corr_data,annot=True)","82f3b84b":"def imputer_mean(feature,data=dataset):\n    data[feature].fillna(data[feature].mean(),inplace=True)\n    \nfeatures_miss= dataset.columns[dataset.isna().any()]\nfor feature in features_miss:\n    imputer_mean(feature=feature)","2362b599":"dataset.isnull().sum()","4952dcbd":"sns.countplot(x='Status',data=dataset)","80dda706":"df_status = dataset.groupby('Status')\nfor sta,life in df_status:\n    print(sta + \":\" + str(life['Life expectancy '].mean()))","5e517089":"print('Top 10 developed countries with the longest life expectancy')\ndf_sta_ed = dataset[dataset.Status=='Developed'].groupby('Country')\nprint(df_sta_ed['Life expectancy '].mean().sort_values(ascending=False).head(10))\nprint('*'*50)\nprint('Top 10 countries with the longest life expectancy')\ndf_coun = dataset.groupby('Country')\nprint(df_coun['Life expectancy '].mean().sort_values(ascending=False).head(10))\nprint('*'*50)\nprint('Top 10 countries with the shortest life expectancy')\nprint(df_coun['Life expectancy '].mean().sort_values(ascending=False).tail(10))\nprint('*'*50)","cb8f1aa0":"df_ed = df_sta_ed['Life expectancy '].mean().sort_values(ascending=False).head(10)\ndic = {'Country':df_ed.index,'Life expectancy ':df_ed.values}\ndf_ed = pd.DataFrame(dic)\ndf_long = df_coun['Life expectancy '].mean().sort_values(ascending=False).head(10)\ndic = {'Country':df_long.index,'Life expectancy ':df_long.values}\ndf_long = pd.DataFrame(dic)\ndf_short = df_coun['Life expectancy '].mean().sort_values(ascending=False).tail(10)\ndic = {'Country':df_short.index,'Life expectancy ':df_short.values}\ndf_short = pd.DataFrame(dic)\nfor df in [df_ed,df_long,df_short]:\n    sns.barplot(x='Life expectancy ',y='Country',data=df)\n    plt.show()","3b9ccbf6":"y = dataset['Life expectancy ']\nX = dataset.drop('Life expectancy ',axis=1)\nX.head()","994f79cc":"# X.columns\nfor features in X.columns:\n    if features == 'Status':\n        pass\n    else:\n        sns.scatterplot(x=X[features],y=y,hue=X['Status'])\n        plt.legend()\n        plt.show()","48caf475":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX['Country'] = le.fit_transform(X['Country'])\nX['Year'] = le.fit_transform(X['Year'])\n# X.head(3)\n# X.tail(3)","dd65d934":"status_dum = pd.get_dummies(X['Status'])\nX.drop(columns='Status',inplace=True)\n# X.head(3)\nX = pd.concat([X,status_dum],axis=1)\nX.head(3)","3de9f16b":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import LinearRegression,Ridge\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","f2df7564":"model_Forest = RandomForestRegressor(max_depth=10,n_estimators=500, min_samples_split=2)\nmodel_Linear = LinearRegression()\nmodel_Forest.fit(X_train,y_train)\nmodel_Linear.fit(X_train,y_train)\nprint(f'RandomForestRegressor_scores is {model_Forest.score(X_test,y_test)}')\nprint(f'LinearRegression_scores is {model_Linear.score(X_test,y_test)}')","aadc7262":"y_pred1 = np.array(model_Forest.predict(X_test))\ny_pred2 = np.array(model_Linear.predict(X_test))\n\ny_test = np.array(y_test)\nprint(np.concatenate((y_pred1.reshape(len(y_test),1),y_pred2.reshape(len(y_test),1), y_test.reshape(len(y_test),1)),1))","51e921d5":"from sklearn.metrics import mean_squared_error\nprint(mean_squared_error(y_test,y_pred1)**(0.5))\nprint(mean_squared_error(y_test,y_pred2)**(0.5))","c99acc7e":"# 3\u3001Label Encoding And Dummy Variable(\u6807\u7b7e\u7f16\u7801\u548c\u865a\u62df\u53d8\u91cf)","d6563077":"# 4\u3001Training and Testing the Model(\u8bad\u7ec3\u6d4b\u8bd5\u6a21\u578b)","5f00c70b":"\u539f\u6570\u636e\uff1a\n[https:\/\/www.kaggle.com\/kumarajarshi\/life-expectancy-who\/data](https:\/\/www.kaggle.com\/kumarajarshi\/life-expectancy-who\/data)","51c48c1f":"# 2\u3001Data preprocessing(\u6570\u636e\u9884\u5904\u7406)","b75af457":"# 1\u3001Import libraries(\u5bfc\u5165\u5e93)","ceadbd3a":"### 2.2\u3001Exploratory analysis(\u63a2\u7d22\u6027\u5206\u6790)","b4006001":"### 2.1 Check missing values(\u68c0\u67e5\u7f3a\u5931\u503c)"}}