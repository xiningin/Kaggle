{"cell_type":{"e0182fa1":"code","4ac019e5":"code","173e1e0c":"code","5a0fcc72":"code","3d9856a4":"code","4302f1af":"code","126dc490":"code","db5c66ca":"code","01b73bad":"code","3086907c":"code","c39b1a8e":"code","e001eeff":"code","167867ac":"code","014f5270":"code","56328263":"code","8d71fa39":"code","4160ec0d":"code","1ba6ad44":"code","e24d903b":"code","c077230b":"code","57b50df6":"code","10dd4901":"code","3bd540c3":"code","a0396bd5":"code","a2fda4e0":"code","d85a630a":"code","3dffea66":"code","1504449e":"code","11be6abd":"code","2e86734d":"code","50fb6a5c":"code","afc35bb3":"code","22e5e2ef":"code","5b636965":"code","a324fb1b":"code","d04ae078":"code","0b9266cf":"code","fcf690a0":"code","093b70e7":"code","ecd9d453":"code","d1558508":"code","d7f9d02b":"markdown","13de3b0f":"markdown","eacda45f":"markdown","d377bc7e":"markdown","84418ed5":"markdown","2c847256":"markdown","1bb567e7":"markdown","e2fde8f3":"markdown","7ad39d2b":"markdown","38e3fe06":"markdown","7c1164c7":"markdown","bbc3725e":"markdown","10ac664b":"markdown","874ad850":"markdown","4fab0a9e":"markdown","308de4a1":"markdown","552a3754":"markdown","83a6547a":"markdown","e1db1259":"markdown","8bcdd48f":"markdown","cb2bc898":"markdown"},"source":{"e0182fa1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ac019e5":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler \nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom imblearn.over_sampling import SMOTE\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)","173e1e0c":"hotel_bookings_df= pd.read_csv('\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv')","5a0fcc72":"hotel_bookings_df.shape","3d9856a4":"hotel_bookings_df.dtypes","4302f1af":"hotel_bookings_df.isnull().sum()","126dc490":"hotel_bookings_df.drop(['company'],inplace=True,axis=1)\nhotel_bookings_df['agent'].fillna(hotel_bookings_df['agent'].mode()[0],inplace=True)\nhotel_bookings_df['country'].fillna(hotel_bookings_df['country'].mode()[0],inplace=True)\nhotel_bookings_df['children'].fillna(hotel_bookings_df['children'].mean(),inplace=True)","db5c66ca":"categorical_columns=[]\ncontinuous_columns=[]\nfor col in hotel_bookings_df.columns:\n    if hotel_bookings_df[col].dtype!='object':\n        continuous_columns.append(col)\n    else:\n        categorical_columns.append(col)\n    ","01b73bad":"continuous_columns","3086907c":"plt.figure(figsize=(16,16))\nfor i, col in enumerate(['lead_time', 'total_of_special_requests', 'days_in_waiting_list','booking_changes', 'adults','children', 'babies','adr']):\n    plt.subplot(4,4,i+1)\n    sns.boxplot(hotel_bookings_df[col])\n    plt.tight_layout()","c39b1a8e":"hotel_bookings_df.loc[hotel_bookings_df.lead_time> 450,'lead_time']=450\nhotel_bookings_df.loc[hotel_bookings_df.days_in_waiting_list> 125,'days_in_waiting_list']=125\nhotel_bookings_df.loc[hotel_bookings_df.booking_changes> 10,'booking_changes']=10\nhotel_bookings_df.loc[hotel_bookings_df.adults> 20,'adults']=20\nhotel_bookings_df.loc[hotel_bookings_df.children> 4,'children']=4\nhotel_bookings_df.loc[hotel_bookings_df.adr> 400,'adr']=400","e001eeff":"hotel_bookings_df['hotel'].value_counts()","167867ac":"bool_dict = {1:'Yes',0:'No'}","014f5270":"hotel_bookings_df['is_canceled']=hotel_bookings_df['is_canceled'].map(bool_dict)","56328263":"plt.figure(figsize=(12,6))\ncancel_hotel_df=hotel_bookings_df.groupby(['hotel','is_canceled']).size().reset_index().rename(columns=({0:'count'}))\nsns.barplot(x='hotel',y='count',data=cancel_hotel_df,hue='is_canceled')","8d71fa39":"plt.figure(figsize=(12,6))\nmonth_booking_df = hotel_bookings_df['arrival_date_month'].value_counts(normalize=True).rename_axis('Month').reset_index(name='Percentage')\nsns.barplot(x='Month',y='Percentage',data=month_booking_df)","4160ec0d":"plt.figure(figsize=(12,6))\nMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nmonth_booking_df = hotel_bookings_df.groupby(['arrival_date_month','is_canceled']).size().reset_index().rename(columns=({0:'count'})).sort_values(['count'],ascending=False)\nsns.barplot(x='arrival_date_month',y='count',data=month_booking_df,hue='is_canceled',order=Months)","1ba6ad44":"plt.figure(figsize=(12,6))\nsns.countplot(data=hotel_bookings_df,x='arrival_date_year',hue='is_canceled')","e24d903b":"plt.figure(figsize=(12,6))\ncountry_booking_df = hotel_bookings_df['country'].value_counts(normalize=True).rename_axis('country').reset_index(name='Percentage')\ncountry_booking_df=country_booking_df.head(15)\nsns.barplot(x='country',y='Percentage',data=country_booking_df)","c077230b":"country_booking=hotel_bookings_df.groupby(['country']).size().reset_index().rename(columns=({0:'count'}))\ncountry_booking_canceled=hotel_bookings_df.groupby(['country','is_canceled']).size().reset_index().rename(columns=({0:'count'}))\ncountry_booking=country_booking.merge(country_booking_canceled,on='country')\ncountry_booking['percentage_cancellation']=country_booking['count_y']\/country_booking['count_x']\ncountry_booking_top=country_booking[(country_booking['percentage_cancellation']>=0.4)&(country_booking['is_canceled']=='Yes')&((country_booking['count_x']>50))].copy()\ncountry_booking_top.rename(columns=({'count_x':'Total_Booking'}),inplace=True)\nprint(list(country_booking_top.country))","57b50df6":"booking_year_children=hotel_bookings_df.groupby(['babies','arrival_date_year']).size().reset_index().rename(columns=({0:'count'}))\nbooking_year_children","10dd4901":"countries_with_booking=hotel_bookings_df.country.value_counts().reset_index(name=\"count\").query(\"count > 50\")","3bd540c3":"print(list(countries_with_booking['index']))","a0396bd5":"plt.figure(figsize=(20,6))\nsns.FacetGrid(hotel_bookings_df[(hotel_bookings_df['days_in_waiting_list']>0)], hue = 'is_canceled',\n             height = 6,xlim = (0,150)).map(sns.kdeplot, 'days_in_waiting_list', shade = True,bw=2).add_legend()","a2fda4e0":"plt.figure(figsize=(20,6))\nsns.FacetGrid(hotel_bookings_df[(hotel_bookings_df['lead_time']>0)], hue = 'is_canceled',\n             height = 8,xlim = (0,500)) .map(sns.kdeplot, 'lead_time', shade = True,bw=2).add_legend()","d85a630a":"plt.figure(figsize=(12,6))\nsns.countplot(data=hotel_bookings_df,x='market_segment',hue='deposit_type')","3dffea66":"plt.figure(figsize=(12,6))\nsns.countplot(data=hotel_bookings_df,hue='is_canceled',x='market_segment')","1504449e":"hotel_bookings_df['arrival_date_month'] = hotel_bookings_df['arrival_date_month'].map({'January':1, 'February': 2, 'March':3, 'April':4, 'May':5, 'June':6, 'July':7,\n                                                            'August':8, 'September':9, 'October':10, 'November':11, 'December':12})\nhotel_bookings_df['hotel'] = hotel_bookings_df['hotel'].map({'Resort Hotel':0, 'City Hotel':1})\nhotel_bookings_df[\"total_members\"] = hotel_bookings_df[\"adults\"] + hotel_bookings_df[\"children\"] + hotel_bookings_df[\"babies\"]\nhotel_bookings_df[\"total_stay\"] = hotel_bookings_df[\"stays_in_weekend_nights\"]+ hotel_bookings_df[\"stays_in_week_nights\"]\nhotel_bookings_df.drop(columns = ['adults', 'babies', 'children', 'stays_in_weekend_nights', 'stays_in_week_nights'],inplace=True,axis=1)","11be6abd":"le = LabelEncoder()\nhotel_bookings_df['meal'] = le.fit_transform(hotel_bookings_df['meal'])\nhotel_bookings_df['country'] = le.fit_transform(hotel_bookings_df['country'])\nhotel_bookings_df['distribution_channel'] = le.fit_transform(hotel_bookings_df['distribution_channel'])\nhotel_bookings_df['reserved_room_type'] = le.fit_transform(hotel_bookings_df['reserved_room_type'])\nhotel_bookings_df['assigned_room_type'] = le.fit_transform(hotel_bookings_df['assigned_room_type'])\nhotel_bookings_df['deposit_type'] = le.fit_transform(hotel_bookings_df['deposit_type'])\nhotel_bookings_df['customer_type'] = le.fit_transform(hotel_bookings_df['customer_type'])\nhotel_bookings_df['reservation_status'] = le.fit_transform(hotel_bookings_df['reservation_status'])\nhotel_bookings_df['market_segment'] = le.fit_transform(hotel_bookings_df['market_segment'])\nhotel_bookings_df['reservation_status_date'] = le.fit_transform(hotel_bookings_df['reservation_status_date'])\nhotel_bookings_df['is_canceled'] = le.fit_transform(hotel_bookings_df['is_canceled'])","2e86734d":"hotel_bookings_df=hotel_bookings_df[['hotel', 'lead_time', 'arrival_date_year',\n       'arrival_date_month', 'arrival_date_week_number',\n       'arrival_date_day_of_month', 'meal', 'country', 'market_segment',\n       'distribution_channel', 'is_repeated_guest', 'previous_cancellations',\n       'previous_bookings_not_canceled', 'reserved_room_type',\n       'assigned_room_type', 'booking_changes', 'deposit_type', 'agent',\n       'days_in_waiting_list', 'customer_type', 'adr',\n       'required_car_parking_spaces', 'total_of_special_requests',\n       'reservation_status', 'reservation_status_date', 'total_members',\n       'total_stay', 'is_canceled']]","50fb6a5c":"plt.figure(figsize=(12,12))\nsns.heatmap(hotel_bookings_df.corr())","afc35bb3":"hotel_bookings_df.drop(['reservation_status'],inplace=True,axis=1)","22e5e2ef":"hotel_bookings_df.drop(['arrival_date_year','arrival_date_day_of_month','assigned_room_type'],inplace=True,axis=1)","5b636965":"def evaluation_stats(model,X_train, X_test, y_train, y_test,algo,is_feature=True):\n    print('Train Accuracy')\n    if algo=='NN':\n        print(confusion_matrix(y_train,model.predict_classes(X_train)))\n        y_pred = model.predict_classes(X_test)\n    else:\n        print(confusion_matrix(y_train,model.predict(X_train)))\n        y_pred = model.predict(X_test)\n    print('Validation Accuracy')\n    \n    print(confusion_matrix(y_test,y_pred))\n    print('Classification_report')\n    print(classification_report(y_test,y_pred))\n    if is_feature:\n        plot_feature_importance(rf_model.feature_importances_,X.columns,algo)\n\ndef training(model,X_train, y_train):\n    return model.fit(X_train, y_train)\n\ndef plot_feature_importance(importance,names,model_type):\n    feature_importance = np.array(importance)\n    feature_names = np.array(names)\n\n    #Create a DataFrame using a Dictionary\n    data={'feature_names':feature_names,'feature_importance':feature_importance}\n    fi_df = pd.DataFrame(data)\n\n    #Sort the DataFrame in order decreasing feature importance\n    fi_df.sort_values(by=['feature_importance'], ascending=False,inplace=True)\n    #Define size of bar plot\n    plt.figure(figsize=(10,8))\n    #Plot Searborn bar chart\n    sns.barplot(x=fi_df['feature_importance'], y=fi_df['feature_names'])\n    #Add chart labels\n    plt.title(model_type + 'FEATURE IMPORTANCE')\n    plt.xlabel('FEATURE IMPORTANCE')\n    plt.ylabel('FEATURE NAMES')","a324fb1b":"hotel_bookings_df['is_canceled'].value_counts()","d04ae078":"X = hotel_bookings_df.drop([\"is_canceled\"], axis=1)\ny = hotel_bookings_df[\"is_canceled\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30, random_state = 101)\n\nsm = SMOTE(random_state=101)\nX_res, y_res = sm.fit_resample(X_train, y_train)","0b9266cf":"rf_model = training(RandomForestClassifier(n_estimators=1000,max_depth=10),X_res, y_res)\nevaluation_stats(rf_model,X_train, X_test, y_train, y_test,'RANDOM FOREST')","fcf690a0":"xbg_model = training(XGBClassifier(n_estimators=1000,max_depth=10),X_res, y_res)\nevaluation_stats(xbg_model,X_train, X_test, y_train, y_test,'RANDOM FOREST')","093b70e7":"from keras.models import Sequential\nfrom keras.layers import Dense","ecd9d453":"model = Sequential()\nmodel.add(Dense(12, input_dim=23, activation='relu'))\nmodel.add(Dense(8, activation='relu'))\nmodel.add(Dense(1, activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\nmodel.fit(X_res, y_res, epochs=20, batch_size=64)","d1558508":"evaluation_stats(model,X_train, X_test, y_train, y_test,'NN',is_feature=False)","d7f9d02b":"People book more with via online, with no deposit. While Groups and Offline are next with no deposit and Non refund","13de3b0f":"Kindly upvote if you like this notebook","eacda45f":"RandomForest has best results compare to all the models.<br>\nWith defaults parameters, even RF was overfitting, with large number of trees and increasing the depth, it moves towards generalization.<br>\nPrecision and recall is also good.","d377bc7e":"These are the countries with more than 40% of cancellation.<br>\nNote: Here I have considered those countries with atleast 40 bookings","84418ed5":"Dropping reservation status beacuse of it being highly co-related with depeneded column","2c847256":"Function for model evaluation","1bb567e7":"Percentage of reservation in August month is highest compared to all other months","e2fde8f3":"Spliting the dataset on 70-30 basis, oversampling the dataset using SMOTE","7ad39d2b":"**EDA**","38e3fe06":"With lead time more 50 tends to have more cancellation","7c1164c7":"A simple NN model for classification, with not many parameter.\nModel is not fitting, that is what I see.\nPrecision and recall of Random forest is better then NN","bbc3725e":"City Hotel has high number of cancellation compared to Resort","10ac664b":"Portugal accounts for nearly 40% of the booking","874ad850":"Waiting days with less than 50 tends to have more cancellation","4fab0a9e":"High range of cancellation is in the month of April,May and September. Start and end of the vacation.","308de4a1":"XGB clearly overfits on training data, I have tried with various parameters, most of the time it overfits.","552a3754":"**Preprocessing**","83a6547a":"**Modeliing**","e1db1259":"Cancellation is huge in Groups, even though it is booked as non refundable. Online booking also has high number of cancellation\n","8bcdd48f":"**Simple NN model for classification**","cb2bc898":"Dropping the highly correlated column"}}