{"cell_type":{"d529e6fe":"code","b5d44838":"code","1a76ed1e":"code","1f0114d4":"code","76a3f526":"code","335a6b44":"code","f4596e93":"code","04b5e1fd":"code","1c7cab02":"code","053be4e4":"code","ba7134fc":"code","ba9e3a54":"code","ce55710a":"code","2fa4e5a6":"code","2706b1cc":"code","2258a8a6":"code","2da58153":"code","e90917ad":"code","fb0bb829":"code","3631cb07":"code","1c6de3f0":"code","8f4e1c3b":"code","d0a869a3":"code","dbaa98c4":"code","6b3f799a":"code","873d2c87":"code","0c71ab77":"code","ee4d2146":"code","37ceb0be":"code","c5ef4e52":"code","9ca3021f":"markdown","04a42df4":"markdown"},"source":{"d529e6fe":"import pandas as pd\nwater=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\nwater.head()","b5d44838":"water.info()","1a76ed1e":"water.describe()","1f0114d4":"Potability_0=water[water.Potability==0]\nPotability_0.head()","76a3f526":"round(Potability_0.isnull().sum()*100\/len(Potability_0),2).sort_values(ascending=False)","335a6b44":"Potability_0.describe()","f4596e93":"Potability_0.fillna(Potability_0.median(), inplace=True)\nPotability_0.describe()","04b5e1fd":"Potability_1=water[water.Potability==1]\nPotability_1.head()","1c7cab02":"round(Potability_1.isnull().sum()*100\/len(Potability_1),2).sort_values(ascending=False)","053be4e4":"Potability_1.fillna(Potability_1.median(), inplace=True)\nPotability_1.describe()","ba7134fc":"import numpy as np\nwater=pd.concat([Potability_1, Potability_0], axis=0)\nwater = water.iloc[np.random.permutation(len(water))]\nwater=water.reset_index(drop=True)\nwater.head()","ba9e3a54":"water.nunique()","ce55710a":"round(water.Potability.value_counts()*100\/len(water),2)","2fa4e5a6":"data = water.sample(frac=0.8, random_state=42)\ndata_unseen = water.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","2706b1cc":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","2258a8a6":"round(data.Potability.value_counts()*100\/len(data),2)","2da58153":"!pip install pycaret","e90917ad":"from pycaret.classification import *","fb0bb829":"water_test= setup(data = data, target = 'Potability', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,\n                  fix_imbalance = True\n                 )","3631cb07":"rf = create_model('rf')","1c6de3f0":"print(rf)","8f4e1c3b":"tuned_rf = tune_model(rf,optimize = 'Precision')","d0a869a3":"plot_model(tuned_rf, plot = 'auc')","dbaa98c4":"plot_model(tuned_rf, plot = 'pr')","6b3f799a":"plot_model(tuned_rf, plot='feature')","873d2c87":"plot_model(tuned_rf, plot = 'confusion_matrix')","0c71ab77":"evaluate_model(tuned_rf)","ee4d2146":"predict_model(tuned_rf)","37ceb0be":"unseen_predictions = predict_model(tuned_rf, data=data_unseen)\nunseen_predictions.head()","c5ef4e52":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","9ca3021f":"#### Treating Missing value for Potability_1 records","04a42df4":"#### Treating Missing value for Potability_0 records"}}