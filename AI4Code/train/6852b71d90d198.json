{"cell_type":{"f7d2758b":"code","2d5194bf":"code","d570a636":"code","8ee1d6cb":"code","84d7a5de":"code","b5c3a9e0":"code","f7c0572c":"code","94de9f62":"code","218f5139":"code","9e9729fc":"code","2abd9428":"code","c0bb348f":"code","6516db36":"code","5a843f4b":"markdown","e9bf2a78":"markdown","c2eb89db":"markdown","eb9eb2c1":"markdown","3bc65fec":"markdown","2dd0084b":"markdown","6af78b43":"markdown","29fee153":"markdown","2e7ba6f9":"markdown","166671cb":"markdown"},"source":{"f7d2758b":"# Titanic Kaggle Competition\n\n# Import libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import tree\nfrom sklearn.linear_model import SGDClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2d5194bf":"# Loading data and creating dataframe\ntraining = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n\ntraining['train_test'] = 1\ntest['train_test'] = 0\ntest['Survived'] = np.NaN\nall_data = pd.concat([training,test])\n\ntrainData = pd.DataFrame(data=training)\ntestData = pd.DataFrame(data=test)\ndf_num = trainData[['Age', 'SibSp', 'Parch', 'Fare']]\ndf_cat = trainData[['Survived', 'Pclass', 'Sex', 'Ticket', 'Cabin', 'Embarked']]\n\nprint(training)\nprint(test)\ntrainData.info()\ntrainData.describe()","d570a636":"# histograms for every categorical data in dataset\nfor i in df_num.columns:\n    plt.hist(df_num[i])\n    plt.title(i)\n    plt.show()","8ee1d6cb":"pd.pivot_table(trainData, index = 'Survived', values = ['Age', 'SibSp', 'Parch', 'Fare'])","84d7a5de":"for i in df_cat.columns:\n    sns.barplot(df_cat[i].value_counts().index, df_cat[i].value_counts()).set_title(i)\n    plt.show()","b5c3a9e0":"# Plotting age vs pclass and checking if survived\n\nsns.scatterplot(data=trainData, x='Age', y='Fare', hue='Survived')\n\n\n\n\n","f7c0572c":"# Cleaning Data\ntraining['Age'] = training['Age'].fillna(training['Age'].mean())\ntest['Age'] = test['Age'].fillna(test['Age'].mean())\ntraining['Fare'] = training['Fare'].fillna(training['Fare'].mean())\ntest['Fare'] = test['Fare'].fillna(test['Fare'].mean())\ntraining['Sex'].astype('category')\ntest['Sex'].astype('category')\ntraining['Pclass'].astype('category')\ntest['Pclass'].astype('category')","94de9f62":"# Set up training, test, and target values\nfeatures = ['Fare', 'Pclass', 'Sex']\n\ny = training['Survived']\nX = pd.get_dummies(training[features])\nX_test = pd.get_dummies(test[features])","218f5139":"# Using KNeighbors Classifier\nknn = KNeighborsClassifier(n_neighbors = 5)\nknn.fit(X, y)\nkPrediction = knn.predict(X_test)\nprint(knn.score(X, y))","9e9729fc":"# Using Linear Regression\nlir = LinearRegression()\nlir.fit(X, y)\nlirPrediction = lir.predict(X_test)\nprint(lir.score(X, y))","2abd9428":"# Using Decision Tree Classifier\ntree = tree.DecisionTreeClassifier(random_state = 1)\ntree.fit(X, y)\ntreePrediction = tree.predict(X_test)\nprint(tree.score(X, y))","c0bb348f":"# Using SGD Classifier\nsgd = SGDClassifier(random_state = 1)\nsgd.fit(X, y)\nsgdPrediction = sgd.predict(X_test)\nprint(sgd.score(X, y))","6516db36":"#creating the output file for submitting\noutput = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': treePrediction})\noutput.to_csv('submission.csv', index = False)\nprint('Your submission was succesfully saved!')","5a843f4b":"from each of these I can see that the highest score is from the tree classifier and lowest score is linear regression. Therefore I will submit the results from using the tree classifier.","e9bf2a78":"These bar charts are a better way to visualize the data. From this we can see that more people did not survive than survived. We can also see that there is more people from class 3 than class 1 and 2. There are also more men then women on the titanic","c2eb89db":"# Loading Data","eb9eb2c1":"# Submission","3bc65fec":"from this we can see that the only categorical data we have that is normal is Age while SibSp, Parch, and Fare are skewed","2dd0084b":"from exploratory data analysis it seems that important factors to survival are Fare, Pclass, and Sex","6af78b43":"this table shows that there might be a correlation between fare cost and survival. It also shows that there might not be a real correlation between Age and survival.","29fee153":"# Exploratory Data Analysis","2e7ba6f9":"# Models","166671cb":"# Evaluating"}}