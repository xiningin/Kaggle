{"cell_type":{"e5458302":"code","fb5e1af2":"code","8da8c302":"code","1d45c504":"code","bb238386":"code","9a80d49e":"code","791c0fa0":"code","7b8ee7af":"code","29603ed9":"code","d02ccea9":"code","0c5ca691":"code","7cfe4dd7":"code","abdfaeb9":"code","4da452a7":"code","756393b0":"code","7baf7287":"code","9afefe8e":"code","89679dca":"code","38f5efcc":"code","ed678246":"code","c7577484":"code","af43abac":"code","4d5e0e7e":"code","605233e8":"code","cad063d0":"code","7ba90c40":"code","e60c37b5":"code","197d652b":"markdown","db6e4e5e":"markdown","829613ac":"markdown","c65244b4":"markdown","1faa28ae":"markdown","b09ddec5":"markdown","2ba67f68":"markdown","55d9feeb":"markdown","bcf3186f":"markdown","db701e37":"markdown","79ae1c4c":"markdown","13289899":"markdown","9230f066":"markdown","f1e851a0":"markdown","3101a67c":"markdown","a4c45262":"markdown"},"source":{"e5458302":"import numpy as np \nimport pandas as pd\n","fb5e1af2":"# Store data in variable df\n\ndf = pd.read_csv('..\/input\/sf-salaries\/Salaries.csv')","8da8c302":"df","1d45c504":"df.head()","bb238386":"df.info()","9a80d49e":"df['BasePay']","791c0fa0":"# converting string value to NaN\n\ndf['BasePay'].replace('Not Provided',np.nan,inplace=True)\n\n# converting NaN to 0\ndf['BasePay'].fillna(value=0,inplace=True)\n","7b8ee7af":"# convert them from string to float\ndf['BasePay']=df['BasePay'].astype(float)","29603ed9":"# Finding Avaerage Base pay \n\ndf['BasePay']","d02ccea9":"df['BasePay'].mean()","0c5ca691":"df['OvertimePay'].replace('Not Provided',np.nan, inplace=True)\ndf['OvertimePay'].fillna(value=0,inplace=True)\ndf['OvertimePay'] = df['OvertimePay'].astype(float)","7cfe4dd7":"df['OvertimePay'].max()","abdfaeb9":"jd= df[ df['EmployeeName'] == 'JOSEPH DRISCOLL']","4da452a7":"df[ df['EmployeeName'] == 'JOSEPH DRISCOLL']['JobTitle']","756393b0":"df[ df['EmployeeName'] == 'JOSEPH DRISCOLL']['TotalPayBenefits']","7baf7287":"df[df['TotalPayBenefits']== df['TotalPayBenefits'].max()]","9afefe8e":"df[df['TotalPayBenefits']== df['TotalPayBenefits'].max()]['EmployeeName']","89679dca":"df.iloc[df['TotalPayBenefits'].argmin()]","38f5efcc":"df.iloc[df['TotalPayBenefits'].argmin()]['EmployeeName']","ed678246":"# Another way \ndf[df['TotalPayBenefits']== df['TotalPayBenefits'].min()]","c7577484":"df[df['TotalPayBenefits']== df['TotalPayBenefits'].min()]['EmployeeName']","af43abac":"df['JobTitle'].nunique()","4d5e0e7e":"df['JobTitle'].value_counts().head(5)","605233e8":"sum(df[df['Year']==2013]['JobTitle'].value_counts()==1)","cad063d0":"df['JobTitle']","7ba90c40":"def chief_string(title):\n    if 'chief' in title.lower().split():\n        return True\n    else:\n        return False","e60c37b5":"sum(df['JobTitle'].apply(lambda x: chief_string(x)))","197d652b":"## Total Pay of JOSEPH DRISCOLL","db6e4e5e":"The Base Pay column contains string 'Not Provided' and the dtype is object. To find mean (average) we have to \n\n- First convert string into NaN and then change NaN to 0\n- Then convert dtype = object to dtype = float \n- In last have to find avarage ","829613ac":"### Getting information about dataset","c65244b4":"# Importing libraries","1faa28ae":"## Job Title of JOSEPH DRISCOLL","b09ddec5":"## Job title with only one occerance in 2013","2ba67f68":"### Read csv file","55d9feeb":"### Head of dataset ","bcf3186f":"## Highest Overtime Pay","db701e37":"## People with cheif in their job title ","79ae1c4c":"## Name of Highest paid person ","13289899":"## Name of lowest paid person","9230f066":"### Average Base Pay","f1e851a0":"## Top 5 most Common Job","3101a67c":"## Total unique Job Titles ","a4c45262":"The Base Pay column contains string 'Not Provided' and the dtype is object. To find mean (average) we have to \n\n- First convert string into NaN and then change NaN to 0\n- Then convert dtype = object to dtype = float \n- In last have to find avarage"}}