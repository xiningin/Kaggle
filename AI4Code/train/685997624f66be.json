{"cell_type":{"3c144876":"code","e65dea33":"code","150c0425":"code","95e4ddf1":"code","adbe8f02":"code","4268c7d1":"code","721714cc":"code","cb259161":"code","fdf220c9":"code","73e4fb16":"code","2efc35dd":"code","a51fda5d":"code","50d6f47b":"code","7e271173":"code","cdcd191e":"code","4e216301":"code","6ad26260":"code","53428eaa":"code","b79a968d":"code","b65b69e8":"code","e1820df9":"code","9648a297":"markdown","b31dee87":"markdown","d64ee298":"markdown","819c2cfa":"markdown","2a2f2e44":"markdown","5d570c64":"markdown","d57cc300":"markdown","55d966a1":"markdown","6347484f":"markdown"},"source":{"3c144876":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom matplotlib.dates import DateFormatter\nimport matplotlib.ticker as tick\n\nimport seaborn as sns\n\ncolors = [\"#9DAFB0\", \"#75E6DA\", '#189AB4', '#05445E', '#4D707E', '#56B66B']\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","e65dea33":"df_data = pd.read_csv(\"\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\ndf_data","150c0425":"df_data.date = pd.to_datetime(df_data.date)","95e4ddf1":"df_world = pd.read_csv(\"\/kaggle\/input\/population-by-country-2020\/population_by_country_2020.csv\")\ndf_world.rename(columns={'Country (or dependency)': \"country\"},inplace=True)\ndf_world","adbe8f02":"df_continent = pd.read_csv(\"\/kaggle\/input\/country-mapping-iso-continent-region\/continents2.csv\")\ndf_continent","4268c7d1":"col = [\n    'name', \n    'region',\n    'Population (2020)',\n    'alpha-2',\n    'alpha-3'\n]\n\ndf_countries = pd.merge(df_continent, df_world, left_on='name', right_on='country', how='left')\ndf_countries = df_countries[col]\ndf_countries","721714cc":"df_merged = pd.merge(df_data, df_countries, left_on='country', right_on='name', how='left')\ndf_merged","cb259161":"def reformat_large_tick_values(tick_val, pos):\n    \"\"\"\n    Turns large tick values (in the billions, millions and thousands) such as 4500 into 4.5K and also appropriately turns 4000 into 4K (no zero after the decimal).\n    \"\"\"\n    if tick_val >= 1000000000:\n        val = round(tick_val\/1000000000, 1)\n        new_tick_format = '{:}B'.format(val)\n    elif tick_val >= 1000000:\n        val = round(tick_val\/1000000, 1)\n        new_tick_format = '{:}M'.format(val)\n    elif tick_val >= 1000:\n        val = round(tick_val\/1000, 1)\n        new_tick_format = '{:}K'.format(val)\n    elif tick_val < 1000:\n        new_tick_format = round(tick_val, 1)\n    else:\n        new_tick_format = tick_val\n\n    # make new_tick_format into a string value\n    new_tick_format = str(new_tick_format)\n    \n    # code below will keep 4.5M as is but change values such as 4.0M to 4M since that zero after the decimal isn't needed\n    index_of_decimal = new_tick_format.find(\".\")\n    \n    if index_of_decimal != -1:\n        value_after_decimal = new_tick_format[index_of_decimal+1]\n        if value_after_decimal == \"0\":\n            # remove the 0 after the decimal point since it's not needed\n            new_tick_format = new_tick_format[0:index_of_decimal] + new_tick_format[index_of_decimal+2:]\n            \n    return new_tick_format","fdf220c9":"target_country = 'Africa'\ndf = df_merged.groupby(['region', 'vaccines']).sum().reset_index()\ndf_continent = df[df.region == target_country].sort_values(\"daily_vaccinations\")\n\nfig, ax = plt.subplots(figsize=(16, 8))\n\nax.barh(df_continent.vaccines, df_continent.daily_vaccinations, color='#189AB4', edgecolor='black')\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.xaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\n\nplt.legend(['Total Vaccination'])\nplt.title(f\"The use of different kind of vaccines in {target_country}\", loc='left')\nplt.grid(alpha=0.3, axis='x')\nplt.suptitle(f\"{target_country}'s Vaccination\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","73e4fb16":"target_country = 'Africa'\ntarget_vaccine = ['Oxford\/AstraZeneca, Sinopharm\/Beijing', 'Sinopharm\/Beijing', 'Johnson&Johnson', 'Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech']\ndf = df_merged[df_merged.region == target_country]\n\nfig, ax = plt.subplots(1, 4, figsize=(24, 6))\nfor i in range(4) : \n\n    df_vacc = df[df.vaccines == target_vaccine[i]]\n    df_vacc = df_vacc.groupby(['country']).sum().sort_values('daily_vaccinations', ascending=False)[0:5]\n    ax[i].bar(df_vacc.index, df_vacc.daily_vaccinations, color='#189AB4', edgecolor='black')\n    ax[i].spines['right'].set_visible(False)\n    ax[i].spines['top'].set_visible(False)\n    ax[i].yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\n    ax[i].set_axisbelow(True)\n    ax[i].set_title(target_vaccine[i], loc='left')\n    ax[i].grid(alpha=0.3, axis='y')\n    ax[i].set_xlabel(\"Country\")\n    ax[i].set_ylabel(\"Vaccinations\")\n\n\nplt.legend(['Total Vaccination'], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\nplt.suptitle(f\"{target_country}'s Vaccination Top 4 Vaccines\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","2efc35dd":"target_country = 'Europe'\ndf = df_merged.groupby(['region', 'vaccines']).sum().reset_index()\ndf_continent = df[df.region == target_country].sort_values(\"daily_vaccinations\")\n\nfig, ax = plt.subplots(figsize=(16, 8))\nax.barh(df_continent.vaccines, df_continent.daily_vaccinations, color='#189AB4', edgecolor='black')\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.xaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\n\nplt.legend(['Total Vaccination'])\nplt.title(f\"The use of different kind of vaccines in {target_country}\", loc='left')\nplt.grid(alpha=0.3, axis='x')\nplt.suptitle(f\"{target_country}'s Vaccination\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","a51fda5d":"target_country = 'Europe'\ntarget_vaccine = ['Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech', 'Oxford\/AstraZeneca, Pfizer\/BioNTech', 'EpiVacCorona, Sputnik V', 'Moderna, Pfizer\/BioNTech']\ndf = df_merged[df_merged.region == target_country]\n\nfig, ax = plt.subplots(1, 4, figsize=(24, 6))\nfor i in range(4) : \n\n    df_vacc = df[df.vaccines == target_vaccine[i]]\n    df_vacc = df_vacc.groupby(['country']).sum().sort_values('daily_vaccinations', ascending=False)[0:5]\n    ax[i].bar(df_vacc.index, df_vacc.daily_vaccinations, color='#189AB4', edgecolor='black')\n    ax[i].spines['right'].set_visible(False)\n    ax[i].spines['top'].set_visible(False)\n    ax[i].yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\n    ax[i].set_axisbelow(True)\n    ax[i].set_title(target_vaccine[i], loc='left')\n    ax[i].grid(alpha=0.3, axis='y')\n    ax[i].set_xlabel(\"Country\")\n    ax[i].set_ylabel(\"Vaccinations\")\n\n\nplt.legend(['Total Vaccination'], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\nplt.suptitle(f\"{target_country}'s Vaccination Top 4 Vaccines\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","50d6f47b":"target_country = 'Asia'\ndf = df_merged.groupby(['region', 'vaccines']).sum().reset_index()\ndf_continent = df[df.region == target_country].sort_values(\"daily_vaccinations\")\n\nfig, ax = plt.subplots(figsize=(16, 8))\n\nax.barh(df_continent.vaccines, df_continent.daily_vaccinations, color='#189AB4', edgecolor='black')\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.xaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\n\nplt.legend(['Total Vaccination'])\nplt.title(f\"The use of different kind of vaccines in {target_country}\", loc='left')\nplt.grid(alpha=0.3, axis='x')\nplt.suptitle(f\"{target_country}'s Vaccination\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","7e271173":"target_country = 'Asia'\ntarget_vaccine = ['Sinopharm\/Beijing, Sinopharm\/Wuhan, Sinovac', 'Covaxin, Oxford\/AstraZeneca', 'Sinovac', 'Moderna, Pfizer\/BioNTech']\ndf = df_merged[df_merged.region == target_country]\n\nfig, ax = plt.subplots(1, 4, figsize=(24, 6))\nfor i in range(4) : \n\n    df_vacc = df[df.vaccines == target_vaccine[i]]\n    df_vacc = df_vacc.groupby(['country']).sum().sort_values('daily_vaccinations', ascending=False)[0:5]\n    ax[i].bar(df_vacc.index, df_vacc.daily_vaccinations, color='#189AB4', edgecolor='black')\n    ax[i].spines['right'].set_visible(False)\n    ax[i].spines['top'].set_visible(False)\n    ax[i].yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\n    ax[i].set_axisbelow(True)\n    ax[i].set_title(target_vaccine[i], loc='left')\n    ax[i].grid(alpha=0.3, axis='y')\n    ax[i].set_xlabel(\"Country\")\n    ax[i].set_ylabel(\"Vaccinations\")\n\n\nplt.legend(['Total Vaccination'], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\nplt.suptitle(f\"{target_country}'s Vaccination Top 4 Vaccines\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","cdcd191e":"target_country = 'Americas'\ndf = df_merged.groupby(['region', 'vaccines']).sum().reset_index()\ndf_continent = df[df.region == target_country].sort_values(\"daily_vaccinations\")\n\nfig, ax = plt.subplots(figsize=(16, 8))\n\nax.barh(df_continent.vaccines, df_continent.daily_vaccinations, color='#189AB4', edgecolor='black')\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.xaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\n\nplt.legend(['Total Vaccination'])\nplt.title(f\"The use of different kind of vaccines in {target_country}\", loc='left')\nplt.grid(alpha=0.3, axis='x')\nplt.suptitle(f\"{target_country}'s Vaccination\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","4e216301":"target_country = 'Americas'\ntarget_vaccine = ['Johnson&Johnson, Moderna, Pfizer\/BioNTech', 'Oxford\/AstraZeneca, Sinovac', 'Pfizer\/BioNTech, Sinovac', 'Oxford\/AstraZeneca, Pfizer\/BioNTech, Sputnik V']\ndf = df_merged[df_merged.region == target_country]\n\nfig, ax = plt.subplots(1,4, figsize=(24, 6))\nfor i in range(4) : \n\n    df_vacc = df[df.vaccines == target_vaccine[i]]\n    df_vacc = df_vacc.groupby(['country']).sum().sort_values('daily_vaccinations', ascending=False)[0:5]\n    ax[i].bar(df_vacc.index, df_vacc.daily_vaccinations, color='#189AB4', edgecolor='black')\n    ax[i].spines['right'].set_visible(False)\n    ax[i].spines['top'].set_visible(False)\n    ax[i].yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\n    ax[i].set_axisbelow(True)\n    ax[i].set_title(target_vaccine[i], loc='left')\n    ax[i].grid(alpha=0.3, axis='y')\n    ax[i].set_xlabel(\"Country\")\n    ax[i].set_ylabel(\"Vaccinations\")\n\n\nplt.legend(['Total Vaccination'], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\nplt.suptitle(f\"{target_country}'s Vaccination Top 4 Vaccines\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","6ad26260":"target_country = 'Oceania'\ndf = df_merged.groupby(['region', 'vaccines']).sum().reset_index()\ndf_continent = df[df.region == target_country].sort_values(\"daily_vaccinations\")\n\nfig, ax = plt.subplots(figsize=(12, 6))\n\nax.barh(df_continent.vaccines, df_continent.daily_vaccinations, color='#189AB4', edgecolor='black')\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.xaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\n\nplt.legend(['Total Vaccination'])\nplt.title(f\"The use of different kind of vaccines in {target_country}\", loc='left')\nplt.grid(alpha=0.3, axis='x')\nplt.suptitle(f\"{target_country}'s Vaccination\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","53428eaa":"df1 = df_merged.groupby('region').sum()\ndf2 = df_countries.groupby('region').sum()\n\nfig, ax = plt.subplots(figsize=(20, 8))\nbars1 = ax.bar(df1.index, df1.daily_vaccinations, color='#189AB4')\nbars2 = ax.bar(df2.index, df2['Population (2020)'], color='#9DAFB0', alpha=0.5)\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\nax.set_xlabel(\"Continent\", fontweight='bold')\nax.set_ylabel(\"People vaccinated\", fontweight='bold')\n\nfor bar in bars1 : \n    height = bar.get_height()\n    ax.annotate('{}'.format(\n        reformat_large_tick_values(height, 0)), \n        xy=(bar.get_x() + bar.get_width()  \/ 2, height), \n        ha='center', \n        va='bottom'\n    )\n\nplt.legend(['Total people vaccinated', 'Total population'])\nplt.title(f\"The number of people vaccinated for every continent approximately\", loc='left')\nplt.grid(alpha=0.3, axis='y')\nplt.suptitle(\"World Vaccination Progress\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()\n","b79a968d":"df1 = df1[['daily_vaccinations']]\ndf1['not_vaccinated'] = df2['Population (2020)'] - df1['daily_vaccinations']\ntotal = df2['Population (2020)']\n\nbar_vax = [i \/ j * 100 for i, j in zip(df1['daily_vaccinations'], total)]\nbar_not = [i \/ j * 100 for i, j in zip(df1['not_vaccinated'], total)]\n\nfig, ax = plt.subplots(figsize=(20, 8))\nbars1 = ax.bar(df1.index, bar_vax, color='#189AB4')\nbars2 = ax.bar(df1.index, bar_not, color='#9DAFB0', bottom=bar_vax, alpha=0.5)\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\nax.set_xlabel(\"Continent\", fontweight='bold')\nax.set_ylabel(\"% People vaccinated\", fontweight='bold')\n\nfor bar in bars1 : \n    height = bar.get_height()\n    ax.annotate('{}%'.format(\n        reformat_large_tick_values(height, 0)), \n        xy=(bar.get_x() + bar.get_width()  \/ 2, height), \n        ha='center', \n        va='bottom'\n    )\n\nplt.legend(['% people vaccinated', '% not vaxinated'])\nplt.title(f\"The number of percentage of people vaccinated for every continent approximately\", loc='left')\nplt.grid(alpha=0.3, axis='y')\nplt.suptitle(\"World Vaccination Progress\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","b65b69e8":"df = df_merged.groupby(['region', 'date']).sum().reset_index()\n\ncolors = [\"#9DAFB0\", \"#75E6DA\", '#189AB4', '#F67B50', '#A82810']\n\n\nfig, ax = plt.subplots(figsize=(20, 8))\nsns.lineplot(data=df, x=df.date, y=df.daily_vaccinations, hue='region', palette=colors[0:5])\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\nax.set_xlabel(\"Date\", fontweight='bold')\nax.set_ylabel(\"Daily Vaccinations\", fontweight='bold')\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\n\nplt.title(f\"The number of daily vaccinations accross multiple continent\", loc='left')\nplt.grid(alpha=0.3, axis='y')\nplt.suptitle(\"World Vaccination Progress\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()\n","e1820df9":"col = df_merged.groupby('country').max()['total_vaccinations'].sort_values(ascending=False)[0:10].index\ncol = list(col)\n\n\nfig, ax = plt.subplots(figsize=(20, 8))\ndf = df_merged[df_merged.country.isin(col)]\n\nsns.lineplot(data=df, x='date', y='total_vaccinations', hue='country', ax=ax, palette=\"hls\")\n\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\nax.set_xlabel(\"Date\", fontweight='bold')\nax.set_ylabel(\"Vaccinations\", fontweight='bold')\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\n\nplt.title(f\"The number of total vaccinations on top 10 country\", loc='left')\nplt.grid(alpha=0.3, axis='y')\nplt.suptitle(\"World Vaccination Progress (Top 10 Country)\", ha='left', x='0.125', y=0.96, fontsize=18, fontweight='bold')\nplt.show()","9648a297":"# Intro \n\nHi all, welcome to my note book this is my attempt to visualize the progress of vaccination across the world. \n\nIn this notebook i focused on visualizing based on continents! if you see any flaw in my EDA or if you have any feedback or criticism that you want to give, please fill free to comment cheers!","b31dee87":"## World Vaccination Progress","d64ee298":"# Data Preparation","819c2cfa":"## Vaccination on Europe","2a2f2e44":"# EDA","5d570c64":"## Vaccination on Asia","d57cc300":"## Vaccination Oceania","55d966a1":"## Vaccination on Africa","6347484f":"## Vaccination on America"}}