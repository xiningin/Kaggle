{"cell_type":{"8ca7910b":"code","4c861236":"code","d83b0718":"code","628ea4fc":"code","a960702c":"code","fa562d81":"code","8be2d5b3":"code","b03ed742":"code","d6282266":"code","28e3efb3":"markdown","6feffa3b":"markdown","d450d01d":"markdown","1436bb6d":"markdown","1c13fb4b":"markdown"},"source":{"8ca7910b":"from fastai.vision.all import *","4c861236":"from shutil import copyfile\nfor f in Path('\/kaggle\/input\/plant-pathology-2021-fgvc8').ls():\n    if f.is_file():\n        copyfile(f, Path('.')\/f.name)","d83b0718":"train_folder = Path('\/kaggle\/input\/plant-pathology-2021-fgvc8\/train_images')\ntrain_folder.ls()\nout_folder = Path('\/kaggle\/temp\/train_images')\nout_folder.mkdir(exist_ok=True, parents=True)","628ea4fc":"files = get_image_files(train_folder)\nfiles","a960702c":"from torchvision.transforms import Resize","fa562d81":"file = files[0]\npipe = Pipeline([PILImage.create, Resize(400)])\nimg = pipe(file)\nshow_image(img)\nimg.shape, out_folder\/file.name","8be2d5b3":"def pre_process(file):    \n    img = pipe(file)\n    img.save(out_folder\/file.name)\n    img.close","b03ed742":"from joblib import Parallel, delayed  \nfrom tqdm.auto import tqdm\nout = Parallel(n_jobs=2)(delayed(pre_process)(file) for file in tqdm(files))","d6282266":"! cd \/kaggle\/temp\/\n! zip -r train_images.zip train_images --q","28e3efb3":"## Creating directory","6feffa3b":"## Creating and testing a pipeline to process the image","d450d01d":"## Listing all images inside train directory","1436bb6d":"## Copying the metadata files","1c13fb4b":"## Processing all the images in paralell and saving to the output directory"}}