{"cell_type":{"a529f4d8":"code","7c32ef5f":"code","a508adc7":"code","58966590":"code","4e3c8bb0":"code","17825a61":"code","92b1c3a4":"code","b59ebb3c":"code","28806256":"code","d360bfe5":"code","35147b94":"code","a81b6bfe":"code","2ab62809":"code","cabd38d8":"code","b1e1299b":"code","df50b62e":"code","cae94640":"code","52af2bbb":"code","83b01ce5":"code","e30983a3":"code","ba74ddb5":"code","3a7393a2":"code","682d11be":"code","43cd85ad":"code","7bc9d6be":"code","364daaa8":"code","90c13f1b":"code","85cc0143":"code","b8431014":"code","f6ad38c3":"code","d610cacd":"code","ca92bab8":"code","98930663":"code","d5de0a76":"code","4bdc35c4":"code","3f6ebcf1":"code","f2326f16":"code","1b86aa8c":"code","e171ce24":"code","a01f9729":"code","1897a289":"code","56c48f65":"code","739ae1d7":"code","7fb34edc":"code","b0eeec3e":"code","6eb36324":"code","9003a671":"code","e2b0c19a":"code","9de029fd":"code","290b0057":"code","c51f590d":"code","1dd7e327":"code","25cb2b5d":"code","f5ce0d92":"code","47f83bb0":"code","9b4b5665":"code","a6468682":"code","a15916e8":"code","68db752b":"code","74460509":"code","a056bc30":"code","5c2361a6":"code","fa2cbb9e":"code","dfabd63d":"code","46fbe060":"code","749c5a31":"code","669c0095":"code","f862ea87":"code","c3bb1f58":"code","d8b7330e":"code","bef6f69f":"code","6fc39b35":"code","8617fac2":"code","ee6fe384":"code","35d45dd9":"code","fd1546e9":"markdown","ae8dbd84":"markdown","2c10edd3":"markdown","5409d20d":"markdown","74b886bc":"markdown","fb43ad79":"markdown","f0788631":"markdown","aafcc2f7":"markdown","7f5779c6":"markdown","f009ae4f":"markdown","b83b63e7":"markdown","b9c484b6":"markdown","5c233fcc":"markdown","e06933b7":"markdown","bd5fb98b":"markdown","d6805186":"markdown","03f35a9a":"markdown","3d5ae6fd":"markdown","852c5acf":"markdown","cbf16d3a":"markdown","41612eee":"markdown","abcfb061":"markdown","a1d64e5e":"markdown","9cff4b63":"markdown","f3152699":"markdown","ca4105e3":"markdown","3000eaf8":"markdown","cd6b9bf3":"markdown","84cc9f82":"markdown","349b5a05":"markdown","76092a2d":"markdown","c01ef81a":"markdown","540261eb":"markdown","c84f408f":"markdown","626ecf31":"markdown","9f22d43a":"markdown","8e05a44f":"markdown","6b4dc96c":"markdown","2b2b72e4":"markdown","940e8e27":"markdown","16c7a96a":"markdown","0e838e2d":"markdown","a3b05266":"markdown","11843e18":"markdown","ab1a9861":"markdown","f989b1ce":"markdown","260131ab":"markdown","701aa249":"markdown","1c210cb3":"markdown","ad272032":"markdown"},"source":{"a529f4d8":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly\n%matplotlib inline","7c32ef5f":"# read csv\ndf = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")","a508adc7":"df","58966590":"df.columns","4e3c8bb0":"df.info()","17825a61":"df.shape","92b1c3a4":"df.describe()","b59ebb3c":"df.isnull().sum()","28806256":"# Rating column have outliers\ndf.hist()","d360bfe5":"df[df['Rating']>5]","35147b94":"# drop col 10472 \ndf.drop([10472], inplace=True)","a81b6bfe":"df.hist()","2ab62809":"# fill NaN in Rating with median\n# df[\"Rating\"] = df.groupby(\"Rating\").transform(lambda x: x.fillna(x.median()))\ndef impute_mean(Rating):\n  return Rating.fillna(Rating.median())\ndf['Rating'] = df['Rating'].transform(impute_mean)","cabd38d8":"df.isnull().sum()","b1e1299b":"df.columns = df.columns.str.replace(' ','_')","df50b62e":"print(df.Type.mode().values[0])\nprint(df.Current_Ver.mode().values[0])\nprint(df.Android_Ver.mode().values[0])","cae94640":"# fill missing categorical with mode\ndf['Type'].fillna(str(df.Type.mode().values[0]), inplace=True)\ndf['Current_Ver'].fillna(str(df.Current_Ver.mode().values[0]), inplace=True)\ndf['Android_Ver'].fillna(str(df.Android_Ver.mode().values[0]), inplace=True)","52af2bbb":"df.isnull().sum()","83b01ce5":"df.info()\ndf.sample(4)","e30983a3":"# changing reviews, installs, price, size to numerical values\ndf['Reviews'] = df['Reviews'].apply(lambda x: int(x))\n\ndf['Installs'] = df['Installs'].apply(lambda x: x.replace('+', '') if '+' in str(x) else x)\ndf['Installs'] = df['Installs'].apply(lambda x: x.replace(',', '') if ',' in str(x) else x)\ndf['Installs'] = df['Installs'].apply(lambda x: float(x))\n\ndf['Price'] = df['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ndf['Price'] = df['Price'].apply(lambda x: float(x))\n\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace('Varies with device', 'NaN') if 'Varies with device' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace('M', '') if 'M' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace(',', '') if ',' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: float(str(x).replace('k', '')) \/ 1000 if 'k' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: float(x))","ba74ddb5":"df.info()","3a7393a2":"df.describe()","682d11be":"import numpy as np\nRating = df['Rating']\nSize = df['Size']\nInstalls = df['Installs']\nReviews = df['Reviews']\nType = df['Type']\nPrice = df['Price']\n\nplotgraph = sns.pairplot(pd.DataFrame(list(zip(Rating, np.log(Reviews), Size, np.log(Installs), Price, Type)), \n                        columns=['Rating', 'Reviews', 'Size', 'Installs', 'Price', 'Type']), hue='Type', palette=\"Set2\")","43cd85ad":"pd.DataFrame(list(zip(Rating, np.log(Reviews), Size, np.log(Installs))))","7bc9d6be":"plt.figure(figsize=(16,8))\np = sns.heatmap(df.corr(), annot=True, cmap=\"YlGnBu\")","364daaa8":"df['Category'].value_counts().sort_values()","90c13f1b":"sns.set(style='darkgrid')\nplt.figure(figsize=(16,8))\nsns.countplot(y='Category', data=df, palette='Blues_d', order = df['Category'].value_counts().sort_values().index)","85cc0143":"df_copy = df.copy()\n\ndf_copy = df_copy[df_copy.Reviews > 0]\ndf_copy = df_copy[df_copy.Installs > 0]\n\ndf_copy['Installs'] = np.log10(df['Installs'])\ndf_copy['Reviews'] = np.log10(df['Reviews'])\n\n\nsns.lmplot(\"Reviews\", \"Installs\", data=df_copy, height=8, aspect=1)\nplt.title('Number of Reviews (Log scaled) Vs Number of Downloads (Log scaled)')\n# ax = plt.gca()\n\n# _ = ax.set_title('Number of Reviews (Log scaled) Vs Number of Downloads (Log scaled)')","b8431014":"df_copy = df.copy()\n\ndf_copy = df_copy[df_copy.Rating > 0]\ndf_copy = df_copy[df_copy.Installs > 0]\n\ndf_copy['Installs'] = np.log10(df['Installs'])\ndf_copy['Rating'] = (df['Rating'])\n\n\nsns.lmplot(\"Rating\", \"Installs\", data=df_copy, height=8, aspect=1)\n\nax = plt.gca()\n\n_ = ax.set_title('Ratings Vs Number of Downloads (Log scaled)')","f6ad38c3":"df_copy.columns","d610cacd":"df_copy.drop(['App', 'Category','Size', 'Type',\n       'Price', 'Content_Rating', 'Genres', 'Last_Updated', 'Current_Ver',\n       'Android_Ver'], axis=1, inplace=True)","ca92bab8":"plt.figure(figsize=(16,8))\np = sns.heatmap(df_copy.corr(), annot=True, cmap=\"YlGnBu\")","98930663":"df['Android_Ver'].unique()","d5de0a76":"df[['Last_Updated','Android_Ver']]","4bdc35c4":"g1 = go.Box(\n    x= df['Android_Ver'],\n    y= np.log(df['Installs']),\n    marker = dict(\n        color = 'rgb(120,200,80)',\n    )\n)\nlayout = go.Layout(\n    title = \"Installs vs Android Ver\",\n    yaxis= {'title': 'Installs'}\n)\ndata = [g1]\nplotly.offline.iplot({'data': data, 'layout': layout})","3f6ebcf1":"g1 = go.Box(\n    x= df['Last_Updated'],\n    y= np.log(df['Installs']),\n    marker = dict(\n        color = 'rgb(200,0,80)',\n    )\n)\nlayout = go.Layout(\n    title = \"Installs vs Last Updated\",\n    yaxis= {'title': 'Installs'}\n)\ndata = [g1]\nplotly.offline.iplot({'data': data, 'layout': layout})","f2326f16":"# df_copy2 = df.copy()","1b86aa8c":"df.sample(2)","e171ce24":"df.info()","a01f9729":"sns.set_style('ticks')\nsns.set_style(\"darkgrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 8)\nax = sns.lineplot(x='Size', y='Installs', data=df)\ntitle = ax.set_title('Size vs Installs')","1897a289":"sns.set_style(\"darkgrid\")\nax = sns.jointplot(df['Size'], df['Rating'], height = 10)","56c48f65":"top_category_installs = df.groupby('Category')[['Installs']].sum().sort_values('Installs', ascending=False).head(15)\ntop_category_installs","739ae1d7":"plt.figure(figsize=(18,10))\nsns.barplot(top_category_installs.index, top_category_installs.Installs)\n\nplt.title('Top 10 Categories with largest number of installs')\nplt.xticks(rotation=75);\nplt.ylabel(None);\nplt.xlabel('Category');","7fb34edc":"df['Content_Rating'].value_counts()","b0eeec3e":"df['Content_Rating'].value_counts().plot.bar(figsize=(8, 8))","6eb36324":"max_app_installs = df.groupby('App')[['Installs']].sum().sort_values('Installs', ascending=False).head(10)\nmax_app_installs","9003a671":"plt.figure(figsize=(18,10))\nsns.barplot(max_app_installs.index, max_app_installs.Installs)\n\nplt.title('Top 10 Apps with largest number of installs')\nplt.xticks(rotation=75)\nplt.ylabel(None)\nplt.xlabel('Apps')","e2b0c19a":"max_size = df.groupby('App')[['Size']].sum().sort_values('Size', ascending=False).head(10)\nmax_size","9de029fd":"plt.figure(figsize=(18,10))\nsns.barplot(max_size.index, max_size.Size)\n\nplt.title('Top 10 Apps with largest size')\nplt.xticks(rotation=75);\nplt.ylabel(None);\nplt.xlabel('Apps');","290b0057":"df['Category'].value_counts()","c51f590d":"df['Category'].value_counts().index.tolist()","1dd7e327":"dfcat = df[df.Category.isin(['FAMILY','GAME', 'TOOLS', 'MEDICAL', 'BUSINESS', 'PRODUCTIVITY', 'PERSONALIZATION',\n                                'COMMUNICATION','SPORTS','LIFESTYLE','FINANCE','HEALTH_AND_FITNESS','PHOTOGRAPHY',\n                               'SOCIAL','NEW_AND_MAGAZINES','SHOPPING','TRAVEL_AND_LOCAL','DATING','BOOKS_AND_REFERENCE',\n                               'VIDEO_PLAYERS','EDUCATION','ENTERTAINMENT','MAPS_AND_NAVIGATION','FOOD_AND_DRINK'])]\n\nfig, ax = plt.subplots()\nfig.set_size_inches(15, 8)\np = sns.stripplot(x=\"Price\", y=\"Category\", data=dfcat, jitter=True, linewidth=1)\ntitle = ax.set_title('Trend of Paid\/Free App')","25cb2b5d":"df[['Category', 'App']][df.Price > 200]","f5ce0d92":"fig, ax = plt.subplots()\nfig.set_size_inches(15, 8)\nsubset_df_price = dfcat[dfcat.Price<100] \np = sns.stripplot(x=\"Price\", y=\"Category\", data=subset_df_price, jitter=True, linewidth=1)\ntitle = ax.set_title('After filtering')","47f83bb0":"g1 = go.Box(\n    y=np.log10(df['Installs'][df.Type=='Paid']),\n    name = 'Paid',\n    marker = dict(\n        color = 'rgb(0,0,0)',\n    )\n)\ng2 = go.Box(\n    y=np.log10(df['Installs'][df.Type=='Free']),\n    name = 'Free',\n    marker = dict(\n        color = 'rgb(255,0,120)',\n    )\n)\nlayout = go.Layout(\n    title = \"Installation of paid apps Vs free apps\",\n    yaxis= {'title': 'Installs (log-scaled)'}\n)\ndata = [g1, g2]\nplotly.offline.iplot({'data': data, 'layout': layout})","9b4b5665":"paid_apps = df[df.Price>0]\np = sns.jointplot(\"Price\", \"Rating\", paid_apps)\np.fig.suptitle(\"Ratings of Paid Apps\")","a6468682":"free_apps = df[df.Price==0]\np = sns.jointplot(\"Price\", \"Rating\", free_apps)\np.fig.suptitle(\"Ratings of Free Apps\")","a15916e8":"g1 = go.Box(\n    y=(df['Rating'][df.Type=='Paid']),\n    name = 'Paid',\n    marker = dict(\n        color = 'rgb(0,0,0)',\n    )\n)\ng2 = go.Box(\n    y=(df['Rating'][df.Type=='Free']),\n    name = 'Free',\n    marker = dict(\n        color = 'rgb(255,0,120)',\n    )\n)\nlayout = go.Layout(\n    title = \"Ratings of paid apps Vs free apps\",\n    yaxis= {'title': 'Ratings'}\n)\ndata = [g1, g2]\nplotly.offline.iplot({'data': data, 'layout': layout})\nprint(\"Mean of the ratings(Free type): \" + str(df['Rating'][df.Type=='Free'].mean()))\nprint(\"Mean of the ratings(Paid type): \" + str(df['Rating'][df.Type=='Paid'].mean()))\n","68db752b":"df2 = df.copy()\ndf2 = df2[df2.Type==\"Free\"]","74460509":"# sort values installs \ngrouped_mean = df2.groupby(['Category'])[['Rating', 'Reviews','Installs']].mean().reset_index()\ngrouped_mean = grouped_mean.sort_values('Installs', ascending=False)","a056bc30":"def highlight_max(s):    \n    is_max = s == s.max()\n    return ['background-color: limegreen' if v else '' for v in is_max]\n \ngrouped_mean.style.apply(highlight_max, subset=['Rating','Reviews','Installs'])","5c2361a6":"# sort values installs\ngrouped_median = df2.groupby(['Category'])[['Rating', 'Reviews','Installs']].median().reset_index()\ngrouped_median = grouped_median.sort_values('Installs', ascending=False)\ngrouped_median.style.apply(highlight_max, subset=['Rating','Reviews','Installs'])","fa2cbb9e":"g1 = go.Box(\n    x= df['Category'][df.Type== 'Free'],\n    y= df['Rating'][df.Type== 'Free'],\n    marker = dict(\n        color = 'rgb(0,0,0)',\n    )\n)\nlayout = go.Layout(\n    title = \"Ratings of each category\",\n    yaxis= {'title': 'Ratings'}\n)\ndata = [g1]\nplotly.offline.iplot({'data': data, 'layout': layout})","dfabd63d":"g1 = go.Box(\n    x= df['Category'][df.Type==\"Free\"],\n    y= np.log(df['Installs'][df.Type==\"Free\"]),\n    marker = dict(\n        color = 'rgb(120,200,80)',\n    )\n)\nlayout = go.Layout(\n    title = \"Installs of each category\",\n    yaxis= {'title': 'Installs'}\n)\ndata = [g1]\nplotly.offline.iplot({'data': data, 'layout': layout})","46fbe060":"comms = df[df['Category'] == 'COMMUNICATION'][df.Type==\"Free\"]\ncomms = comms.groupby('Installs')['App'].nunique().reset_index()\nplt.figure(figsize=(18,10))\nsns.barplot(comms.Installs, comms.App)\n\nplt.title('comms')\nplt.xticks(rotation=75)\nplt.ylabel('Num of App')\nplt.xlabel('Installs')","749c5a31":"game = df[df['Category'] == 'GAME'][df.Type==\"Free\"]\ngame = game.groupby('Installs')['App'].nunique().reset_index()\nplt.figure(figsize=(18,10))\nsns.barplot(game.Installs, game.App)\n\nplt.title('game')\nplt.xticks(rotation=75)\nplt.ylabel('Num of App')\nplt.xlabel('Installs')","669c0095":"photography = df[df['Category'] == 'PHOTOGRAPHY'][df.Type==\"Free\"]\nphotography = photography.groupby('Installs')['App'].nunique().reset_index()\nplt.figure(figsize=(18,10))\nsns.barplot(photography.Installs, photography.App)\n\nplt.title('photography')\nplt.xticks(rotation=75)\nplt.ylabel('Num of App')\nplt.xlabel('Installs')","f862ea87":"entertainment = df[df['Category'] == 'ENTERTAINMENT'][df.Type==\"Free\"]\nentertainment = entertainment.groupby('Installs')['App'].nunique().reset_index()\nplt.figure(figsize=(18,10))\nsns.barplot(entertainment.Installs, entertainment.App)\n\nplt.title('entertainment')\nplt.xticks(rotation=75)\nplt.ylabel('Num of App');\nplt.xlabel('Installs')","c3bb1f58":"df3 = df.copy()\ndf3 = df3[df3.Type==\"Paid\"]","d8b7330e":"# mean\ngrouped_mean = df3.groupby(['Category'])[['Rating', 'Reviews','Installs']].mean().reset_index()\ngrouped_mean = grouped_mean.sort_values('Installs', ascending=False)\ngrouped_mean.style.apply(highlight_max, subset=['Rating','Reviews','Installs'])","bef6f69f":"# median\ngrouped_median = df3.groupby(['Category'])[['Rating', 'Reviews','Installs']].median().reset_index()\ngrouped_median = grouped_median.sort_values('Installs', ascending=False)\ngrouped_median.style.apply(highlight_max, subset=['Rating','Reviews','Installs'])","6fc39b35":"g1 = go.Box(\n    x= df['Category'][df.Type== 'Paid'],\n    y= df['Rating'][df.Type== 'Paid'],\n    marker = dict(\n        color = 'rgb(0,0,0)',\n    )\n)\nlayout = go.Layout(\n    title = \"Ratings of each category\",\n    yaxis= {'title': 'Ratings'}\n)\ndata = [g1]\nplotly.offline.iplot({'data': data, 'layout': layout})","8617fac2":"g1 = go.Box(\n    x= df['Category'][df.Type==\"Paid\"],\n    y= np.log(df['Installs'][df.Type==\"Paid\"]),\n    marker = dict(\n        color = 'rgb(120,200,80)',\n    )\n)\nlayout = go.Layout(\n    title = \"Installs of each category\",\n    yaxis= {'title': 'Installs'}\n)\ndata = [g1]\nplotly.offline.iplot({'data': data, 'layout': layout})","ee6fe384":"education = df[df['Category'] == 'EDUCATION'][df.Type==\"Paid\"]\neducation = education.groupby('Installs')['App'].nunique().reset_index()\nplt.figure(figsize=(18,10))\nsns.barplot(education.Installs, education.App)\n\nplt.title('education')\nplt.xticks(rotation=75)\nplt.ylabel('Num of App')\nplt.xlabel('Installs')","35d45dd9":"weather= df[df['Category'] == 'WEATHER'][df.Type==\"Paid\"]\nweather = weather.groupby('Installs')['App'].nunique().reset_index()\nplt.figure(figsize=(18,10))\nsns.barplot(weather.Installs, weather.App)\n\nplt.title('weather')\nplt.xticks(rotation=75)\nplt.ylabel('Num of App')\nplt.xlabel('Installs')","fd1546e9":"#### plot ratings of each category (Type Free)","ae8dbd84":"#### median of rating, reviews, installs","2c10edd3":"Communication category has a lot of outliers because the mean and median are very different. \n\n","5409d20d":"<font color=\u201dblue\u201d>Ratings varies a lot on size but the size between 1 - 40 MB is pretty good  <\/font>","74b886bc":"# Considering reviews and ratings, Which factor has more impact on the number of installations?","fb43ad79":"<font color=\u201dblue\u201d>* Game, photography, entertainment has the highest median of installs*\n","f0788631":"# Installs of Free\/Paid apps","aafcc2f7":"<font color=\u201dblue\u201d>  weather, education, entertainment have the highest median of installs\n","7f5779c6":"#### plot installs of each category (Type Paid)","f009ae4f":"# All columns\n- Application Name \n- Category \n- Rating \n- Number of Review \n- Application Size \n- Number of Install \n- Application Type \n- Price \n- Content Rating \n- Genres \n- Android Ver\n- Latest Updates\n\n","b83b63e7":"### Free","b9c484b6":"<font color=\u201dblue\u201d> Applications that are up-to-date have more installs<\/font>","5c233fcc":"\n<font color=\u201dblue\u201d> Free app has more installation\n\n<font color=\u201dblue\u201d> Developing free app might be more profitable than developing paid app because it could reach more audience. Having in-app advertising and in-app purchase are ones of the way to gain more money.\n\nFor the paid apps, it is better to have target audience or specific niche to focus on. <\/font>","e06933b7":"*news and magazines has the highest mean and median of ratings at 4.8 *","bd5fb98b":"# Questions \n\n* Different groups of applications and the numbers of applications\n* Considering reviews and ratings, which factor has more impact on the number of installations?\n* Android version vs last updated -> Which has more impact on the number of installations?\n* Does size impact installs and ratings?\n* Which categories has the most total installations?\n* Different type of content rating\n* The most installed apps\n* Apps with the largest size\n* Free app vs Paid app\n","d6805186":"# Trend of prices based on categories","03f35a9a":"### fill missing categorical with mode","3d5ae6fd":"# Apps with the largest size","852c5acf":"**You can also check out my second part of data analysis   [Here](https:\/\/www.kaggle.com\/risenattarach\/googleplay-sentimentanalysis-with-vadersentiment)   where I will be using vaderSentiment lib instead of the sentiment that is given in the dataset.**","cbf16d3a":"# EDA ","41612eee":"### Changing reviews, installs, price, size to numerical values ","abcfb061":"# Different groups of Application and the numbers of application","a1d64e5e":"Thank you for viewing my kernal. Any suggestion is appreciated :)","9cff4b63":"#### plot ratings of each category (Type Paid)","f3152699":"#### mean of rating, reviews, installs","ca4105e3":"# Purpose of the analysis","3000eaf8":"#### median of rating, reviews, installs","cd6b9bf3":"# Ratings of Free\/Paid apps","84cc9f82":"# ratings, reviews, installs in Free\/Paid apps\n-  If we want to develop an app, which app categories should we be developing to have the most probability of getting installed by very large number of users?","349b5a05":"<font color=\u201dblue\u201d> Size between 60-80 interval has the most Installs<\/font>","76092a2d":"#### mean of rating, reviews, installs","c01ef81a":"The average price of medical app is quite high","540261eb":"#### plot installs in each category (Type Free)","c84f408f":"# Android version vs last updated -> Which has more impact on the number of installations?","626ecf31":"<font color=\u201dblue\u201d> *the type varies with device has the most Installs* <\/font>","9f22d43a":"<font color=\u201dblue\u201d>*Health and Fitness, Education, Books and reference have the highest median at 4.4* \n","8e05a44f":"# Different type of content rating","6b4dc96c":"# Does size impact installs and ratings?\n","2b2b72e4":"<font color=\u201dblue\u201d>ratings is not so much different, but free apps have more outliers","940e8e27":"# The most installed apps","16c7a96a":"# Paid vs Free","0e838e2d":"<font color=\u201dblue\u201d>*Price between 1-35$ have good ratings*","a3b05266":"### Check rating","11843e18":"# Which categories has the most installation?","ab1a9861":"### Paid","f989b1ce":"### fill missing rating with median","260131ab":"<font color=\u201dblue\u201d> news and magazine, education, art and design have high ratings in paid apps","701aa249":"- Explore and analyze Google Play market \n","1c210cb3":"<font color=\u201dblue\u201d> *reviews has more impact on the number of installs than ratings* <\/font>","ad272032":"## data cleaning"}}