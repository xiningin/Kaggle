{"cell_type":{"f8ed23b1":"code","61bfd13b":"code","7c97906e":"code","d6645622":"code","600c3304":"code","36c10419":"code","4ad7b7e5":"code","40be7d52":"code","cbaec235":"code","4bc21751":"code","62b2384c":"code","e627b05f":"markdown","136eb710":"markdown","490d1259":"markdown","d7f117ca":"markdown","c0993685":"markdown","309ea264":"markdown","655328b7":"markdown","ff95537d":"markdown","add8986e":"markdown","d8c867b1":"markdown","8de7a3b3":"markdown","3399b282":"markdown"},"source":{"f8ed23b1":"# import all packages and set plots to be embedded inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\n%matplotlib inline\n\n# suppress warnings from final output\nimport warnings\nwarnings.simplefilter(\"ignore\")","61bfd13b":"# load in the dataset into a pandas dataframe\ndf = pd.read_csv(\"..\/input\/spotify-dataset-19212020-160k-tracks\/tracks.csv\")","7c97906e":"# Copying dataset\ndf_clean = df.copy()\n#[''] will be replaced with NaNs.\ndf_clean.artists = df_clean.artists.replace(\"['']\",np.nan)\n#Change date column to date format.\ndf_clean['release_date'] = pd.to_datetime(df_clean['release_date'])\n","d6645622":"# start with a standard-scaled plot\nbinsize = 1\nbins = np.arange(0, df_clean['popularity'].max()+binsize, binsize)\n\nplt.figure(figsize=[14.70, 8.27])\nplt.hist(data = df_clean, x = 'popularity', bins = bins)\nplt.title('Popularity Distribution')\nplt.xlabel('popularity value between 0 and 100, with 100 being the most popular.')\nplt.ylabel('Count')\nplt.show()","600c3304":"# start with a standard-scaled plot\nbins = np.arange(0, 1000000, 10000)\n\nplt.figure(figsize=[14.70, 8.27])\nplt.hist(data = df_clean, x = 'duration_ms', bins = bins)\nplt.title('Duration Distribution')\nplt.xlabel('duration_ms')\nplt.ylabel('Count')\nplt.show()","36c10419":"# Return the Series having unique values\ndf_clean['year'] = df_clean['release_date'].dt.year\nbase_color = sb.color_palette()[0]\nplt.figure(figsize = [20, 8.27])\nplt.xticks(rotation=90)\nplt.title('Track Releases Over Years')\n# Use the `color` argument\nsb.countplot(data=df_clean, x='year', color=base_color);","4ad7b7e5":"#Scatter between energy and popularity \nplt.subplots(1,1,figsize=(14.70, 8.27))\nax1 = sb.regplot(data = df_clean.sample(500), x = 'energy', y = 'popularity');\nax1.set_title('Correlation between energy and popularity');\nax1.set_xlabel('energy (Ranges from 0 to 1)');","40be7d52":"#Scatter between loudness and popularity \nplt.subplots(1,1,figsize=(14.70, 8.27))\nax2 = sb.regplot(data = df_clean.sample(500), x = 'loudness', y = 'popularity');\nax2.set_title('Correlation between loudness and popularity');\nax2.set_xlabel('loudness (Float typically ranging from -60 to 0)');","cbaec235":"# Audio characteristics over year\nplt.figure(figsize=(14.70, 8.27))\nsb.set(style=\"whitegrid\")\ncolumns = [\"acousticness\",\"danceability\",\"energy\",\"speechiness\",\"liveness\",\"valence\"]\nfor col in columns:\n    x = df_clean.groupby(\"year\")[col].mean()\n    ax= sb.lineplot(x=x.index,y=x,label=col);\nax.set_title('Audio characteristics over year');\nax.set_ylabel('Measure');\nax.set_xlabel('Year');","4bc21751":"df_clean['loudness_range'] = pd.qcut(df_clean['loudness'], q=4)\n# \"popularity VS \"energy\" by \"years\" and with size \"loudness_range\"\nplt.subplots(1,1,figsize=(14.70, 8.27))\nsb.scatterplot(x=\"energy\", y=\"popularity\",\n                hue=\"year\", size=\"loudness_range\",\n                palette=\"ch:r=-.2,d=.3_r\",\n                sizes=(20, 200), linewidth=0,\n                data=df_clean.sample(500)).set(title='...energy...');","62b2384c":"\n# \"popularity VS \"danceability\" by \"years\" and with size \"loudness_range\"\nplt.subplots(1,1,figsize=(14.70, 8.27))\nsb.scatterplot(x=\"danceability\", y=\"popularity\",\n                hue=\"year\", size=\"loudness_range\",\n                palette=\"ch:r=-.2,d=.3_r\",\n                sizes=(20, 200), linewidth=0,\n                data=df_clean.sample(500)).set(title='...danceability...');","e627b05f":"## Audio Characteristics Over Years\n\n> Tracks have become more Energetic and Danceable in the recent years. The loudness and tempo has also increased. The tracks have become less \"Acoustic\" Also the more energetic and loud the more popular","136eb710":"## The First  Feature Affecting The Popularity\n\n> The more energtic the more popular","490d1259":"# Spotify Dataset 1922-2021, ~600k Tracks\n## by Abdulrahman Yaseen","d7f117ca":"### Further looking into energy effect taking loudness range and years in consideration\n> \"popularity VS \"energy\" by \"years\" and with size \"loudness_range\"","c0993685":"## The Seacond  Feature Affecting The Popularity\n\n> The more loud the more popular","309ea264":"## Popularity Distribution\n\n>The popularity is right skewed as the popularity is calculated on the total number of plays the track has had and how recent those plays are. So it's reasonable that most of the tracks have a popularity of zero, and zero tracks have a popularity of 100","655328b7":"### Further looking into danceability effect taking loudness range and years in consideration\n> \"popularity VS \"danceability\" by \"years\" and with size \"loudness_range\"","ff95537d":"## (Track Releases Over Years)\n\n> The production of songs is increasing over years","add8986e":"## Duration Distribution\n\n> The durations ranges from 100,000 ms to 500,000 ms with large freq at duration of 200,000 ms (3.3 minutes)\nFun Fact: Spotify has 454.06 days of music or 1.24 year of continous listening. In other words it will take 1.24 years for you to listen to all the songs","d8c867b1":"## Investigation Overview\n\nI wanted to look in figuring out what features are best for predicting the popularity of the tracks in the dataset\n\n## Dataset Overview\n\nThere are 586672 tracks in the dataset with 19 features","8de7a3b3":"### Observations\n- Mostly 2000 songs are added for each year on spotify\n\n- Tracks have become more Energetic and Danceable in the recent years. The loudness and tempo has also increased.\n\n- The tracks have become less \"Acoustic\"\n\n- Spotify has 454.06 days of music or 1.24 year of continous listening. In other words it will take 1.24 years for you to listen to all the songs\n\n- Valence and Danceability are highly related and so is speechiness and Danceability","3399b282":"### Features:\n- acousticness (Ranges from 0 to 1)\n- danceability (Ranges from 0 to 1)\n- energy (Ranges from 0 to 1)\n- duration_ms (Integer typically ranging from 200k to 300k)\n- instrumentalness (Ranges from 0 to 1)\n- valence (Ranges from 0 to 1)\n- popularity (Ranges from 0 to 100)\n- tempo (Float typically ranging from 50 to 150)\n- liveness (Ranges from 0 to 1)\n- loudness (Float typically ranging from -60 to 0)\n- speechiness (Ranges from 0 to 1)\n- mode (0 = Minor, 1 = Major)\n- explicit (0 = No explicit content, 1 = Explicit content)\n- key (All keys on octave encoded as values ranging from 0 to 11, starting on C as 0, C# as 1 and so on\u2026)\n- timesignature (The predicted timesignature, most typically 4)\n- artists (List of artists mentioned)\n- release_date (Date of release mostly in yyyy-mm-dd format, however precision of date may vary)\n- name (Name of the song)"}}