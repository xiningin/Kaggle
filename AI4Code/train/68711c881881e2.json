{"cell_type":{"163f2697":"code","94fba7a5":"code","7b28ef0f":"code","20ccaab9":"code","c934ace1":"markdown"},"source":{"163f2697":"import cv2\nimport gc\nimport io\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport time\nfrom tqdm import tqdm_notebook as tqdm\nimport pydicom\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\nimport multiprocessing\nimport warnings\nfrom glob import glob\nimport os\nimport imageio\nimport time\nwarnings.filterwarnings(\"ignore\")","94fba7a5":"def read_xray(path):\n    voi_lut = True\n    fix_monochrome = True\n    dicom = pydicom.read_file(path)\n    basename = os.path.basename(path).split('.')[0]\n    if voi_lut:\n        data = apply_voi_lut(dicom.pixel_array, dicom)\n    else:\n        data = dicom.pixel_array\n               \n    # depending on this value, X-ray may look inverted - fix that:\n    if fix_monochrome and dicom.PhotometricInterpretation == \"MONOCHROME1\":\n        data = np.amax(data) - data\n        \n    data = data - np.min(data)\n    data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n    \n    return basename, data","7b28ef0f":"cpu_count = multiprocessing.cpu_count()\nimage_paths = \"..\/input\/vinbigdata-chest-xray-abnormalities-detection\/train\"","20ccaab9":"start = time.time()\nimage_paths = glob(os.path.join(image_paths, '*.dicom'))[:10]\ntry:\n    pool = multiprocessing.Pool(processes = cpu_count)\n    for basename, image in pool.map(read_xray, image_paths):\n        imageio.imwrite(basename + '.png', image)\nfinally:\n    pool.close()\n    pool.join()\n\nprint(\"Time Execution : {}\".format(time.time() - start))","c934ace1":"**Process 100 images**"}}