{"cell_type":{"210195bb":"code","4085d00a":"code","5c22e91d":"code","a43c8583":"code","7ee889c0":"code","a902dd17":"markdown","0396a94b":"markdown","584ddb91":"markdown"},"source":{"210195bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4085d00a":"df=pd.read_csv(\"\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/unclean cclass.csv\")\ndf.head(50)","5c22e91d":"df=df.dropna(subset=[\"model\",\"price\",\"year\"],axis=0)\ndf.head()\ndf.count()","a43c8583":"df.sort_values(\"year\",inplace=True)\ndf[\"price\"] = df[\"price\"].map(lambda x: x.lstrip(' \u00a3'))\ndf[\"price\"] = df[\"price\"].map(lambda x: x.replace(\",\",\".\"))\ndf[\"price\"] = df[\"price\"].astype(\"float64\")","7ee889c0":"import matplotlib.pyplot as plt\nresult=df.groupby(\"year\")[\"price\"].mean()\nprint(result)\nplt.figure(figsize=(12,6))\n\nplt.plot(result,color='red') #biz belirlemedi\u011fimiz s\u00fcrece rengi otomatik kendisi verir. \nplt.xlabel('Year')\nplt.ylabel('Price')\nplt.show()","a902dd17":"\nComparasion of the prices of Mercedes cc class cars according to their features \nFirst step to the process is the pandas for read command.","0396a94b":"\nAfter the first step, it is seen that some data in the model column are NaN, we need to clear them. In the second step, the rows with model or price value NaN will be clear and How many useful data do we querying?","584ddb91":"\nWe will plot the price changes over the years with matplot."}}