{"cell_type":{"cc3f5f62":"code","693fd66f":"code","d8f10df7":"code","6327e676":"code","dc5ce7ae":"code","64dd823b":"code","36403cce":"code","03364ed2":"code","99d608e2":"code","50c13118":"code","54b25425":"code","f3bdb3ef":"code","42e5f68a":"code","87b18d28":"code","f04af2d0":"code","8fabf42c":"code","c228d34b":"code","f3641259":"code","3a33b22b":"code","884dc94b":"code","5194adcd":"code","bcd26d23":"code","dd3b5d59":"code","2424f33e":"code","373cf896":"code","d3d0a97f":"code","6d7c41b5":"code","41504592":"code","62772f38":"markdown","6a2c4c0b":"markdown","aa5600d2":"markdown","0908ef2b":"markdown"},"source":{"cc3f5f62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","693fd66f":"import matplotlib.pyplot as plt\n%matplotlib inline","d8f10df7":"df=pd.read_csv('..\/input\/911_calls_for_service.csv')\ndf.head()","6327e676":"df['priority'].value_counts()","dc5ce7ae":"import seaborn as sns\nsns.countplot(x='priority',data=df,palette='viridis')","64dd823b":"df['callDateTime'].iloc[0]","36403cce":"df['callDateTime']=pd.to_datetime(df['callDateTime'])","03364ed2":"time=df['callDateTime'].iloc[0]\ndf['Hour']=df['callDateTime'].apply(lambda time:time.hour)\ndf['Month']=df['callDateTime'].apply(lambda time:time.month)\ndf['Day of Week']=df['callDateTime'].apply(lambda time:time.dayofweek)","99d608e2":"dmap={0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\ndf['Day of Week']=df['Day of Week'].map(dmap)","50c13118":"sns.countplot(x='Day of Week',data=df,hue='priority',palette='viridis')","54b25425":"sns.countplot(x='Month',data=df,hue='priority',palette='viridis')","f3bdb3ef":"byMonth=df.groupby('Month').count()\nbyMonth.head()","42e5f68a":"byMonth['incidentLocation'].plot()","87b18d28":"sns.lmplot(x='Month',y='incidentLocation',data=byMonth.reset_index())","f04af2d0":"df['Date']=df['callDateTime'].apply(lambda p:p.date())","8fabf42c":"df.groupby('Date').count()['incidentLocation'].plot()\nplt.tight_layout()","c228d34b":"df[df['priority']=='Medium'].groupby('Date').count()['incidentLocation'].plot()\nplt.title('Medium')\nplt.tight_layout()","f3641259":"df[df['priority']=='Low'].groupby('Date').count()['incidentLocation'].plot()\nplt.title('Low')\nplt.tight_layout()","3a33b22b":"df[df['priority']=='High'].groupby('Date').count()['incidentLocation'].plot()\nplt.title('High')\nplt.tight_layout()","884dc94b":"df[df['priority']=='Non-Emergency'].groupby('Date').count()['incidentLocation'].plot()\nplt.title('Non-Emergency')\nplt.tight_layout()","5194adcd":"df[df['priority']=='Emergency'].groupby('Date').count()['incidentLocation'].plot()\nplt.title('Emergency')\nplt.tight_layout()","bcd26d23":"df[df['priority']=='Out of Service'].groupby('Date').count()['incidentLocation'].plot()\nplt.title('Out of Service')\nplt.tight_layout()","dd3b5d59":"dayHour = df.groupby(by=['Day of Week','Hour']).count()['priority'].unstack()\ndayHour.head()","2424f33e":"sns.heatmap(dayHour,cmap='viridis')","373cf896":"sns.clustermap(dayHour,cmap='viridis')","d3d0a97f":"dayMonth = df.groupby(by=['Day of Week','Month']).count()['priority'].unstack()\ndayMonth.head()","6d7c41b5":"sns.heatmap(dayMonth,cmap='viridis')","41504592":"sns.clustermap(dayHour,cmap='viridis')","62772f38":"Now let us begin to focus on time information","6a2c4c0b":"## Breakdown of the project:\n\n1. **Loading the dataset:** Using pandas load the data file(.csv)\n2. **Data Visualization:** Creating plots to find relations between the features.\n3. **Insights and Inferences from results:** Using heat maps and plots to infer the relationships between priority of the call and time and date of the call.\n\nThis project can also be used to find more relations than the ones in this notebook.There could be a relationship between an area and a description.Feel free to use the code.","aa5600d2":"Feel free to contact me and ask questions. If this helped you in any way upvote :)","0908ef2b":"What is the most common priority type for a 911 call based off of this new column?"}}