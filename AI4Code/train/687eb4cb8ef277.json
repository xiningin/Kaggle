{"cell_type":{"2fc0b6ec":"code","d1bf61ca":"code","2458cce6":"code","447255ab":"code","8273f8c9":"code","05e828d8":"code","d4a99074":"code","e46e74a9":"code","9955ee0f":"code","2893af14":"code","dff17b5a":"code","f231d507":"code","eed5493a":"code","b0b5c4a8":"code","784784c3":"code","955fe8d1":"code","4734fccd":"code","9a94eee3":"code","dcadeea8":"code","5a4abb53":"code","927e7f61":"code","73c68278":"code","54a46474":"code","be30b586":"code","da68a9ae":"code","3b9c39ea":"code","d95d5fc1":"code","0cc3a9cf":"code","8866e47e":"code","813e23c5":"code","cc50054b":"code","b63a9bf5":"code","c7efd379":"code","fc299b78":"code","1e1694c1":"markdown","a050bc77":"markdown","b99ba83b":"markdown","b7445927":"markdown","37466698":"markdown","2e1f13af":"markdown","b0fc6815":"markdown","2e37c919":"markdown","90bbf915":"markdown","5eb0b490":"markdown","5b6cf366":"markdown"},"source":{"2fc0b6ec":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","d1bf61ca":"df = pd.read_csv('..\/input\/shogi-channels-data\/shogihourouki_data (1).csv')","2458cce6":"df.head()","447255ab":"df.date.isna().sum()","8273f8c9":"# date \n#fill up nan of the date \ndf[df.date.isna()==True]\n","05e828d8":"# Get the date from the url\ndf.at[17,'date'] = 'Nov 27, 2021'\ndf.at[27,'date'] = 'Nov 16, 2021'\ndf.at[60,'date'] = 'Oct 14, 2021'\ndf.at[69,'date'] = 'Oct 5, 2021'\ndf.at[85,'date'] = 'Sep 18, 2021'\ndf.at[108,'date'] = 'Aug 24, 2021'\ndf.at[130,'date'] = 'Jul 30, 2021'\ndf.at[294,'date'] = 'Feb 7, 2021'\ndf.at[295,'date'] = 'Feb 6, 2021'\ndf.at[350,'date'] = 'Dec 13, 2020'\ndf.at[414,'date'] = 'Oct 9, 2020'","d4a99074":"df.date.values","e46e74a9":"#some values have Premierd\ndf.date = df.date.str.replace('Premiered ','')","9955ee0f":"#change datatype to date from object\ndf.date = df.date.apply(pd.to_datetime)","2893af14":"#make year-month column to analyze general tendency\ndf['year_month_released'] = df['date'].dt.strftime('%Y-%m')","dff17b5a":"print(df.tags[0])\n\n#tags are string changed them to list\nimport re \n\ntag_list=[re.sub(r\"[\\[\\],']\",\"\", a).split(' ') for a in df.tags]\ndf.tags = tag_list\n","f231d507":"from matplotlib.ticker import FuncFormatter\n\n\nfont = {'family' : 'light',\n        'size'   : 22,\n        \n       }\n\nplt.rc('font', **font)\nplt.rc('axes',titlesize=40)\nplt.rc('axes',labelsize=25)\nplt.figure(figsize=(40,20))\nplt.title('Views over the Time')\n\n\nsns.set_style(\"whitegrid\")\ng = sns.lineplot(df.date,df.views)\n\nylabels = ['{:}'.format(x) + 'K' for x in g.get_yticks()\/1000]\ng.set_yticklabels(ylabels)\n\n","eed5493a":"df.sort_values(by=['views'],ascending=False).head(10)","b0b5c4a8":"plt.figure(figsize=(40,20))\nplt.title('Likes over the Time')\nsns.set_style(\"whitegrid\")\nsns.lineplot(df.date,df.likes)","784784c3":"df_monthly = df.groupby(['year_month_released']).sum()","955fe8d1":"df_monthly","4734fccd":"df_monthly.index","9a94eee3":"plt.figure(figsize=(40,20))\nplt.title('Views')\nsns.set_style(\"whitegrid\")\nplt.xlabel(\"Released Month\")\nplt.ylabel(\"View Counts\")\ng = sns.lineplot(df_monthly.index,df_monthly.views)","dcadeea8":"tags = []\n\nfor i in range(len(df)):\n    for j in df.tags[i]:\n        tags.append(j)\n","5a4abb53":"strategies=['#3\u624b\u89d2','#4\u624b\u89d2','#6\u4e8c\u98db\u6226\u6cd5','#BIG4','#\u3044\u3061\u3054\u56f2\u3044','#\u304b\u307e\u3044\u305f\u3061','#\u304b\u3093\u3074\u3087\u3046\u56f2\u3044','#\u304d\uff4d\u304d\uff4d\u91d1','#\u3061\u3087\u3093\u307e\u3052\u7f8e\u6fc3','#\u3064\u304f\u3064\u304f\u307c\u3046\u3057\u6226\u6cd5','#\u3072\u306d\u308a\u98db\u8eca','#\u3075\u3093\u3069\u3057\u306e\u6842','#\u30a2\u30d2\u30eb\u6226\u6cd5','#\u30a8\u30eb\u30e2\u56f2\u3044','#\u30ab\u30cb\u56f2\u3044','#\u30b3\u30fc\u30e4\u30f3\u6d41','#\u30b4\u30ad\u30b2\u30f3\u4e2d\u98db\u8eca','#\u30c0\u30a4\u30e4\u30e2\u30f3\u30c9\u7f8e\u6fc3','#\u30c0\u30a4\u30ec\u30af\u30c8\u5411\u98db\u8eca','#\u30c1\u30e7\u30b3\u30ec\u30fc\u30c8','#\u30c4\u30ce\u9280\u4e2d\u98db\u8eca',\n '#\u30c8\u30de\u30db\u30fc\u30af','#\u30c8\u30e9\u30c3\u30af\u56f2\u3044','#\u30d1\u30c3\u30af\u30de\u30f3','#\u30d3\u30c3\u30b04','#\u30dc\u30ca\u30f3\u30b6\u56f2\u3044','#\u30df\u30ec\u30cb\u30a2\u30e0','#\u30e1\u30ea\u30b1\u30f3\u5411\u98db\u8eca','#\u30ec\u30b0\u30b9\u30da','#\u30ef\u30af\u30c1\u30f3','#\u4e00\u624b\u640d\u89d2\u63db\u308f\u308a','#\u4e00\u76f4\u7dda\u7a74\u718a','#\u4e00\u9593\u98db\u8eca','#\u4e09\u9593\u98db\u8eca','#\u4e09\u9593\u98db\u8eca\u30df\u30ec\u30cb\u30a2\u30e0','#\u4e09\u9593\u98db\u8eca\u85e4\u4e95\u30b7\u30b9\u30c6\u30e0','#\u4e2d\u4f4f\u307e\u3044','#\u4e2d\u539f\u6d41','#\u4e2d\u7530\u30b3\u30fc\u30e4\u30f3\u6d41','#\u4e2d\u98db\u8eca','#\u4e2d\u98db\u8eca\u5de6\u7a74\u718a',\n '#\u4e2d\u98db\u8eca\u7a74\u718a','#\u4e38\u5c71\u30ef\u30af\u30c1\u30f3','#\u4e5d\u9593\u98db\u8eca','#\u52c7\u6c17\u6d41','#\u5347\u7530\u5f0f\u77f3\u7530\u6d41','#\u539f\u59cb\u4e2d\u98db\u8eca','#\u53f3\u56db\u9593\u7a74\u718a','#\u53f3\u56db\u9593\u98db\u8eca','#\u53f3\u7389','#\u5411\u98db\u8eca','#\u56db\u679a\u7f8e\u6fc3','#\u56db\u89d2\u77e2\u5009','#\u56db\u9593\u98db\u8eca','#\u56db\u9593\u98db\u8eca\u30df\u30ec\u30cb\u30a2\u30e0','#\u571f\u5c45\u77e2\u5009','#\u5730\u4e0b\u9244\u98db\u8eca','#\u5929\u5b88\u95a3\u7f8e\u6fc3','#\u5b09\u91ce\u6d41','#\u5c45\u89d2\u5de6\u7f8e\u6fc3\u6025\u6226','#\u5c45\u98db\u8eca','#\u5c45\u98db\u8eca\u7a74\u718a',\n '#\u5de6\u7389','#\u5de6\u7f8e\u6fc3','#\u5de6\u7f8e\u6fc3\u6025\u6226','#\u5e73\u76ee\u6226\u6cd5','#\u6025\u6226\u77e2\u5009','#\u632f\u308a\u98db\u8eca','#\u632f\u308a\u98db\u8eca\u30df\u30ec\u30cb\u30a2\u30e0','#\u65b0\u7c73\u9577\u7389','#\u65e9\u56f2\u3044','#\u65e9\u77f3\u7530','#\u6728\u6751\u7f8e\u6fc3','#\u677e\u5c3e\u6d41\u7a74\u718a','#\u6842\u30dd\u30f3\u6226\u6cd5','#\u68d2\u9280','#\u6a2a\u6b69\u53d6\u308a','#\u6d41\u308c\u77e2\u5009','#\u7121\u6575\u56f2\u3044','#\u7389\u982d\u4f4d\u53d6\u308a','#\u7389\u982d\u9280','#\u76f8\u632f\u308a\u98db\u8eca','#\u76f8\u639b\u304b\u308a',\n '#\u76f8\u6a2a\u6b69\u53d6\u308a','#\u771f\u90e8\u6d41','#\u77e2\u5009','#\u77e2\u5009\u4e2d\u98db\u8eca','#\u77f3\u7530\u6d41','#\u77f3\u7530\u6d41\u672c\u7d44','#\u7a74\u718a','#\u7acb\u77f3\u6d41','#\u7aef\u7389\u9280\u51a0','#\u7b4b\u9055\u3044\u89d2','#\u7bb1\u5165\u308a\u5a18','#\u7c73\u9577\u6d41\u6025\u6226\u77e2\u5009','#\u7cf8\u8c37\u6d41\u53f3\u7389',\n '#\u7f8e\u6fc3','#\u7f8e\u6fc3\u56f2\u3044','#\u8000\u9f8d\u56db\u9593\u98db\u8eca','#\u8107\u30b7\u30b9\u30c6\u30e0','#\u8170\u639b\u3051\u9280','#\u8170\u639b\u9280','#\u8239\u56f2\u3044','#\u82f1\u3061\u3083\u3093\u6d41\u4e2d\u98db\u8eca','#\u83c5\u4e95\u6d41\u4e09\u9593\u98db\u8eca','#\u83ca\u6c34\u77e2\u5009','#\u85e4\u4e95\u30b7\u30b9\u30c6\u30e0','#\u85e4\u68ee\u6d41\u6025\u6226\u77e2\u5009','#\u8896\u98db\u8eca','#\u89d2\u4ea4\u63db\u56db\u9593\u98db\u8eca','#\u89d2\u4ea4\u63db\u632f\u308a\u98db\u8eca','#\u89d2\u63db\u308f\u308a','#\u89d2\u63db\u308f\u308a\u65e9\u7e70\u308a\u9280','#\u89d2\u63db\u308f\u308a\u8170\u639b\u9280','#\u89d2\u982d\u6b69\u6226\u6cd5','#\u8d85\u6025\u6226','#\u8d85\u901f',\n '#\u90fd\u6210\u6d41','#\u91d1\u7121\u53cc','#\u9280\u51a0','#\u9280\u51a0\u7a74\u718a','#\u9280\u77e2\u5009','#\u962a\u7530\u6d41\u5411\u98db\u8eca','#\u967d\u52d5\u632f\u308a\u98db\u8eca','#\u96c1\u6728','#\u9752\u91ce\u6d41','#\u98ef\u5cf6\u6d41\u5f15\u304d\u89d2\u6226\u6cd5','#\u9ad8\u7530\u6d41\u5de6\u7389','#\u9ad8\u7f8e\u6fc3\u56f2\u3044','#\u9b3c\u6bba\u3057','#\u9b3c\u6bba\u3057\u5411\u98db\u8eca','#\uff14\u624b\u89d2','#\uff15\u4e03\u9280\u5de6\u6025\u6226','#\uff15\u7b4b\u4f4d\u53d6\u308a',\n '#\uff18\u4e94\u98db\u6226\u6cd5']","927e7f61":"dicts ={}\nfor i in tags:\n    if i in strategies:\n        if i not in dicts:\n            dicts[i]=1\n        else:\n            dicts[i]+=1\n","73c68278":"d = [(k,v) for k, v in dicts.items() if v >= 10]","54a46474":"# strategies used 10 times or more \nd","be30b586":"# check the total views for each tag.\n\ndef total_views(string):\n    mask = df.tags.apply(lambda x: string in x)\n    df1 =df[mask]\n    \n    return  [string,sum(df1.views)]\n    ","da68a9ae":"# reomoved '#\u632f\u308a\u98db\u8eca'. Not specific strategy.\n\npopular = ['#\u56db\u9593\u98db\u8eca(Fourth File Rook)','#\u4e09\u9593\u98db\u8eca(Third File Rook)','#\u30b4\u30ad\u30b2\u30f3\u4e2d\u98db\u8eca(Cheerful Central Rook)','#\u53f3\u56db\u9593\u98db\u8eca(Right Fourth File Rook)','#\u68d2\u9280(Climbing Siver)']\n\nfor i in popular:\n    print(total_views(i))\n    ","3b9c39ea":"views = [2701819,1578035,1192853,1192853,1150778]","d95d5fc1":"times = [d[a][1] for a in range(1,6)]","0cc3a9cf":"# Installing the Japanese calendar module and Japanese fonts\n!apt-get -y install fonts-takao\n\n","8866e47e":"import matplotlib.font_manager as fm\nfprop = fm.FontProperties(fname=\"\/usr\/share\/fonts\/truetype\/takao-mincho\/TakaoMincho.ttf\")\n\nfig = plt.figure(figsize=(20,20))\nax = fig.add_axes([0,0,1,1])\nax.bar(popular,views)\nplt.xticks(popular,fontproperties=fprop,rotation = -45)\nplt.title('Total Views by Strategy')\nplt.show()","813e23c5":"# caluculate views per tag\nper_tag =[]\nfor i in range(5):\n    per_tag.append(int(views[i]\/times[i]))","cc50054b":"per_tag","b63a9bf5":"import matplotlib.font_manager as fm\nfprop = fm.FontProperties(fname=\"\/usr\/share\/fonts\/truetype\/takao-mincho\/TakaoMincho.ttf\")\n\nfig = plt.figure(figsize=(20,20))\nax = fig.add_axes([0,0,1,1])\nax.bar(popular,per_tag)\nplt.xticks(popular,fontproperties=fprop,rotation=-45)\nplt.title('Views per Tag by Strategy')\nplt.show()","c7efd379":"string = ''\n\nfor i in range(len(df)):\n    for j in df.tags[i]:\n        string+=' '+ str(j)\n    ","fc299b78":"#tags \n\n# Libraries\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport matplotlib\n\n# Create a list of word\n\n# Create the wordcloud object\nwordcloud = WordCloud(width=480, height=480, margin=0,font_path=\"\/usr\/share\/fonts\/truetype\/takao-mincho\/TakaoMincho.ttf\",background_color=\"white\").generate(string)\n\n\nplt.figure(figsize=(40,40))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.margins(x=0, y=0)\nplt.show()\n\n\n","1e1694c1":"There are many strategies in shogi game. This channel shows many strategies to the viewer. I was curious which strategyies are popular. Each videos has tags of strategies that he used in the video. I am going to analyze about the popular strategy from the tags.","a050bc77":"## Thank you for reading my analysis and insights. Hope you enjoy reading this notebook. ","b99ba83b":"#  Clean and Preapare Data \n","b7445927":"********************************************************************************\n# Finding from the Strategy Tags\n\n<p style=\"font-size:20px;\">'#\u56db\u9593\u98db\u8eca'(Fourth File Rook) is the most watched strategy in this channel. 44 videos have  this tag. Interestingly, #\u68d2\u9280 (Climbing Silver) got most views per tag. Only 11 videos have this tag. It kinds of make sense since climing silver is the first strategy to learn for almost all players. Most likely this shogi channel has many bigginer shogi players as viewers. <\/p>\n","37466698":"**********************************************************************************************************\n## Making Wordcloud from the tags in Japanese","2e1f13af":"********************************************************************************\n# Finding from the Views and Likes Graphs\n\nFrom the graphs, I can see this channel has been gaining more viewers since the start. Two videos hit 1 million viewrs. I personally enjoyed watching short videos that he played shogi on Shogiwars(Popular Shogi platform in Japan) since I want to improve my shogi skills to be shodan(blackbelt) on Shogiwars. However, 10 most watched videos are reviews of other shogi player match by the youngest shogi prodigy Fujii Sota,  collaborations with other youtubers, or playing shogi with special rules.<br>  \nI assume even non-shogi players can enjoy those titles, and that is why the videos got more views.","b0fc6815":"*************************************************************************\n## Load Data","2e37c919":"## Import Libraries","90bbf915":"# What is the most popular strategy?\n","5eb0b490":"# Explanatory Data Analysis\n\n\nI collected data on [this notebook](https:\/\/www.kaggle.com\/satoshiss\/web-scraping-on-a-youtube-channel-with-selenium)\nfrom a [professional shogi player youtube channel](https:\/\/www.youtube.com\/channel\/UC9Ije5dQVFx9uTGddG_U5XA).\n\nNow I am going to analyse this data.\n***********************************************************************************","5b6cf366":"# Visualize and Analyse Data"}}