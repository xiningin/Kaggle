{"cell_type":{"67fa0bc6":"code","d3832b68":"code","1c8470d5":"code","18f42c8b":"code","7a45d1b6":"code","7d6e54e4":"code","d1229cc7":"code","dd3f1c12":"code","f326fcd2":"code","44bb3a41":"code","db13b216":"code","b0a4cdb3":"code","373ad941":"code","9211af5a":"code","9d3b76f7":"code","ed8acf99":"code","55ee9f5f":"code","33fd1294":"code","103a756b":"code","a6ccc25d":"code","e16c5219":"code","3141c239":"code","7f47a6b5":"code","5e2f2efb":"code","760cce7b":"code","cfaf6139":"markdown","7cbc95e3":"markdown","bdf6d500":"markdown","c354ad93":"markdown","dc409ee0":"markdown"},"source":{"67fa0bc6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d3832b68":"data=pd.read_csv('\/kaggle\/input\/top50spotify2019\/top50.csv',encoding=\"iso-8859-1\",index_col=0)","1c8470d5":"data.head()","18f42c8b":"data.shape","7a45d1b6":"data.describe().T","7d6e54e4":"data.info()","d1229cc7":"for i in data.columns:\n    print('The number of unique ',i)\n    print(data[i].nunique())","dd3f1c12":"print(data['Track.Name'].value_counts())","f326fcd2":"data.isna().sum()","44bb3a41":"from pylab import rcParams\nrcParams['figure.figsize'] = 15,12\ndata.hist();","db13b216":"num_df = data.select_dtypes(include=['int64','float64'])","b0a4cdb3":"import seaborn as sns\nimport matplotlib.pyplot as plt","373ad941":"fig = plt.figure(figsize=(35,50))\nfor i in range(0,len(num_df.columns)):\n    ax=fig.add_subplot(14,2,i+1)\n    sns.boxplot(num_df[num_df.columns[i]])","9211af5a":"sns.heatmap(num_df.corr(),annot=True);","9d3b76f7":"corr = pd.DataFrame(num_df.corr())\ncorr","ed8acf99":"relational_impact = pd.DataFrame({'Impact values' : corr.sum()}).sort_values(by='Impact values',ascending=False)\nrelational_impact","55ee9f5f":"sns.scatterplot(data['Loudness..dB..'],data['Energy']);","33fd1294":"def normalize(column):\n    upper = column.max()\n    lower = column.min()\n    y = (column - lower)\/(upper-lower)\n    return y","103a756b":"for i in data.columns:\n    if(data[i].dtype=='int64'or data[i].dtype=='float64'):\n        data[i]=normalize(data[i])","a6ccc25d":"data.head()","e16c5219":"data['Popularity_Category'] = pd.cut(data['Popularity'],bins = (-1,0.30,0.8,1), labels =('Low','Medium','High'))\nprint(data['Popularity_Category'].value_counts())\nprint('\\n')\nprint('Total count after new variable : ' ,data['Popularity_Category'].value_counts().sum())\nprint('\\n')\nprint('Shape of the original data: ' ,data.shape)","3141c239":"popularity_features = data.groupby(data['Popularity_Category']).mean()\npopularity_features","7f47a6b5":"popularity_features[['Danceability','Popularity','Loudness..dB..','Length.','Liveness']].plot();","5e2f2efb":"sns.pairplot(data = num_df, corner=True)","760cce7b":"artist_wise = data.groupby(data['Artist.Name']).mean()\nartist_wise.sort_values(by='Popularity',ascending=False).head(50).mean()","cfaf6139":"* relation between dB and acous\n* dB and nrgy\n* Energy and Loudness are highly correlated, meanwhile the other variable associated to sound and energy like danceability is also correlated.\n* Instrumentalness & accousticness is highly negative correlated to Loudness.\n* A song depends on duration,year it was launched and we should focus to check what all makes it to the top of the list and find the features which are impactful in the list such as year and duration,year is a very good indicator .","7cbc95e3":"Variables like Loudness, Energy, year and danceability are impacting many other variables. So these four variables can become a common features\/tastes of the users. We can use probability functions on these variables to create customisations","bdf6d500":"> Inferences from Popularity\n> Liveness ,Dancebility and length have almost same kind of trend .","c354ad93":"> Once again it is evident that the Loudness and Danceability are clear contributors for the Popularity. As we can see the top 50 popular artists' summary","dc409ee0":"> **Tried to analyse the spotify dataset and find out the relations between various conents of a song**"}}