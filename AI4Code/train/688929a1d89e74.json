{"cell_type":{"8b4c227b":"code","b95bdd46":"code","b1aa95d6":"code","4938be0a":"code","cdd1ede1":"code","2c5e7210":"code","a1b64cbe":"code","e01d393b":"code","3585685f":"code","faa17f65":"code","08fb91f1":"code","04d1e38c":"code","68a81afa":"code","d979b26f":"code","7b70fae5":"code","e7f33871":"code","2416a9c1":"code","d673a039":"code","0178936d":"code","025bd9c6":"code","0ffe1ce2":"code","a530ec39":"code","04fd30aa":"markdown","16421176":"markdown","d981a3eb":"markdown","461e1dee":"markdown"},"source":{"8b4c227b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b95bdd46":"df = pd.read_excel('\/kaggle\/input\/covid19\/Kaggle_Sirio_Libanes_ICU_Prediction.xlsx')\ndf.head()","b1aa95d6":"df.corr()\nplt.figure(figsize=(10,4))\nsns.heatmap(df.corr(),annot=True,cmap='YlOrRd_r')\nplt.show()","4938be0a":"corr = df.corr(method='pearson')\nsns.heatmap(corr)","cdd1ede1":"corr=df[df.columns.sort_values()].corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nfig = go.Figure(data=go.Heatmap(z=corr.mask(mask),\n                                x=corr.columns.values,\n                                y=corr.columns.values,\n                                xgap=1, ygap=1,\n                                colorscale=\"Rainbow\",\n                                colorbar_thickness=20,\n                                colorbar_ticklen=3,\n                                zmid=0),\n                layout = go.Layout(title_text='Correlation Matrix', template='plotly_dark',\n                height=900,\n                xaxis_showgrid=False,\n                yaxis_showgrid=False,\n                yaxis_autorange='reversed'))\nfig.show()","2c5e7210":"def plot_correlation_map( df ):\n    corr = df.corr()\n    _ , ax = plt.subplots( figsize =( 8 , 6 ) )\n    cmap = sns.diverging_palette( 220 , 10 , as_cmap = True )\n    _ = sns.heatmap(\n        corr, \n        cmap = cmap,\n        square=True, \n        cbar_kws={ 'shrink' : .9 }, \n        ax=ax, \n        annot = True, \n        annot_kws = { 'fontsize' : 12 }\n    )\n\nplot_correlation_map(df) ","a1b64cbe":"#STRONG POSITIVELY CORRELATED\ncorr_mat = df.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corr_mat[corr_mat > 0.7], vmax=.8, annot = True, square=True);","e01d393b":"#STRONG NEGATIVELY CORRELATED\ncorr_mat = df.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corr_mat[corr_mat < -0.3], vmax=.8, annot = True, square=True);\n# sns.heatmap(corr_mat, mask = corr_mat < -0.4, vmax=.8, annot = True, square=True);","3585685f":"dfcorr=df.corr()\ndfcorr\nplt.figure(figsize=(10,4))\nsns.heatmap(df.corr(),annot=False,cmap='summer')\nplt.show()","faa17f65":"#scatterplot\nsns.set(palette = 'deep')\ncols = ['HEMATOCRITE_MAX', 'LEUKOCYTES_MAX', 'HEMOGLOBIN_MAX', 'NEUTROPHILES_MAX', 'TGO_MAX', 'TGP_MAX', 'RESPIRATORY_RATE_DIFF_REL', 'TEMPERATURE_DIFF_REL']\nsns.pairplot(df[cols], height = 2.5)\nplt.show();","08fb91f1":"#bivariate analysis saleprice\/grlivarea\nsns.jointplot(x = 'NEUTROPHILES_MAX', y = 'HEMATOCRITE_MAX', data = df, kind = 'reg');","04d1e38c":"from scipy.stats import norm\n#histogram\nsns.distplot(df['HEMATOCRITE_MAX'], fit = norm);","68a81afa":"#skewness and kurtosis\nprint(\"Skewness: %f\" % df['HEMATOCRITE_MAX'].skew())\nprint(\"Kurtosis: %f\" % df['HEMATOCRITE_MAX'].kurt())","d979b26f":"from scipy import stats\n#Normal probability plot\nfig = plt.figure()\nres = stats.probplot(df['HEMATOCRITE_MAX'], plot=plt)","7b70fae5":"#histogram and normal probability plot\nsns.distplot(df['LEUKOCYTES_MAX'], fit=norm);\nfig = plt.figure()\nres = stats.probplot(df['LEUKOCYTES_MAX'], plot=plt)","e7f33871":"#scatter plot grlivarea\/saleprice\nvar = 'RESPIRATORY_RATE_DIFF_REL'\nsns.lmplot(x=var, y='HEMATOCRITE_MAX', markers = 'x', data = df)","2416a9c1":"from sklearn.preprocessing import StandardScaler\n#standardizing data\nsaleprice_scaled = StandardScaler().fit_transform(df['HEMATOCRITE_MAX'][:,np.newaxis]);","d673a039":"#applying log transformation\ndf['HEMATOCRITE_MAX_Log'] = np.log(df['HEMATOCRITE_MAX'])","0178936d":"sns.distplot(df['HEMATOCRITE_MAX_Log'], fit = norm);\nfig = plt.figure()\nres = stats.probplot(df['HEMATOCRITE_MAX_Log'], plot=plt)","025bd9c6":"#standardizing data\ntotalBsmtSF_scaled = StandardScaler().fit_transform(df['LEUKOCYTES_MAX'][:,np.newaxis]);","0ffe1ce2":"#transform data\ndf.loc[df['LEUKOCYTES_DIFF']==1,'LEUKOCYTES_MAX'] = np.log(df['LEUKOCYTES_MAX'])","a530ec39":"sns.distplot(df['LEUKOCYTES_MAX'], fit = norm);\nfig = plt.figure()\nres = stats.probplot(df['LEUKOCYTES_MAX'], plot=plt)","04fd30aa":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke","16421176":"#Codes from Kovendhan Venugopal https:\/\/www.kaggle.com\/kovendhanv\/beginner-exploratory-data-analysis-with-python\/notebook#3.-Study-of-variables-(features)-in-isolation:-'SalePrice'-variable","d981a3eb":"#Study of variables (features) in isolation.","461e1dee":"We can observe that the distribution is showing peakedness with a kurtosis of 1.342424 and negatively skewed with Skewness at -0.36397."}}