{"cell_type":{"dc3fe9eb":"code","66118764":"code","f61a2b97":"code","6bf31596":"code","88d6514a":"code","9a4b90b5":"code","2b47c1e2":"code","f7da6fe7":"code","577f9359":"code","6162fff7":"code","deafc4b0":"code","40f2ce81":"code","a6c39845":"code","9e57389b":"code","d8514263":"code","32cc407a":"code","91cf70dd":"code","6660184e":"code","77dbd26a":"code","413d9c16":"code","02832b07":"code","e438c46a":"code","6dc61e89":"code","4f0f91bb":"code","efd58b80":"code","8ec471bf":"markdown","294b7e0b":"markdown","a59c525b":"markdown","a761a3f8":"markdown","c11fdd8a":"markdown","369b5266":"markdown","004fd465":"markdown","8ae53a13":"markdown"},"source":{"dc3fe9eb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","66118764":"df = pd.read_csv('..\/input\/used-cars-price-prediction\/train-data.csv')\ntest_data = pd.read_csv('..\/input\/used-cars-price-prediction\/test-data.csv')","f61a2b97":"df.head()","6bf31596":"df_missing = df.isna().sum()\nprint(df_missing[df_missing > 0])","88d6514a":"sns.countplot(df.dtypes.map(str))","9a4b90b5":"categoric_cols = [categoric for categoric in df.columns if df[categoric].dtypes == 'object']\ncategoric_cols","2b47c1e2":"df = df.drop(columns=['Unnamed: 0', 'New_Price'])","f7da6fe7":"df[\"Engine\"] = df[\"Engine\"].str.replace('CC',' ')\ndf['Power'] = df['Power'].str.replace('bhp', '')\ndf['Mileage'] = df['Mileage'].str.replace('kmpl', '')\ndf['Mileage'] = df['Mileage'].str.replace('km\/kg', '')","577f9359":"df[\"Engine\"] = df[\"Engine\"].astype(float)\n# df[\"Power\"] = df[\"Power\"].astype(float)\ndf['Mileage'] = df['Mileage'].astype(float)","6162fff7":"df","deafc4b0":"df.describe()","40f2ce81":"sns.countplot(df.Transmission)","a6c39845":"sns.countplot(df.Owner_Type)","9e57389b":"sns.heatmap(df.corr(), annot=True)","d8514263":"f = plt.figure(figsize=(17,5))\n\nax = f.add_subplot(121)\nsns.regplot(x='Mileage', y='Price', data=df)\n\nax = f.add_subplot(122)\nsns.regplot(x='Engine', y='Price', data=df)","32cc407a":"f = plt.figure(figsize=(17,5))\n\nax = f.add_subplot(121)\nsns.regplot(x='Seats', y='Price', data=df)\n\nax = f.add_subplot(122)\nsns.scatterplot(x='Price', y='Price', data=df)","91cf70dd":"from sklearn.preprocessing import StandardScaler, LabelEncoder, OneHotEncoder, OrdinalEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.svm import SVR","6660184e":"X = df.drop(columns='Price')\ny = df.Price\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=42)","77dbd26a":"numeric_pipeline = Pipeline([\n    ('num_pipe', StandardScaler()),\n    ('impute', SimpleImputer(strategy='mean'))\n])\n\ncategoric_pipeline = Pipeline([\n    ('impute', SimpleImputer(strategy='most_frequent')),\n    ('cat_pipe', OneHotEncoder(handle_unknown='ignore'))    \n])\n\npreprocessor = ColumnTransformer([\n    ('numeric', numeric_pipeline, ['Year', 'Kilometers_Driven', 'Mileage', 'Engine', 'Seats']),\n    ('categoric', categoric_pipeline, ['Name', 'Location', 'Fuel_Type', 'Transmission', 'Owner_Type', 'Power'])\n])","413d9c16":"pipeline = Pipeline([\n    ('pre', preprocessor),\n    ('algo', SVR(max_iter=500))\n])","02832b07":"pipeline.fit(X_train, y_train)","e438c46a":"pipeline.score(X_train, y_train), pipeline.score(X_test, y_test)","6dc61e89":"parameter = {\n    'algo__C': [0.1, 1, 10, 100, 1000], \n    'algo__gamma': [1, 0.1, 0.01, 0.001, 0.0001]\n}","4f0f91bb":"model = GridSearchCV(pipeline, parameter, cv=3, n_jobs=-1, verbose=1)\nmodel.fit(X_train, y_train)","efd58b80":"model.score(X_train, y_train), model.best_score_, model.score(X_test, y_test)","8ec471bf":"### **Bivariant Analysis**","294b7e0b":"### **Check Data Type**","a59c525b":"### **Change Data Type**","a761a3f8":"### **Change Format**","c11fdd8a":"### **Check Missing Data**","369b5266":"### **Univariant Analysis**","004fd465":"### **Prepared Train Data**","8ae53a13":"### **Drop Columns**"}}