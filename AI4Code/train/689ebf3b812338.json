{"cell_type":{"919489ac":"code","4cbe643f":"code","1db82017":"code","eaf6f189":"code","0efbf6f8":"code","d8afe2a8":"code","6b107c21":"code","216b9d0e":"code","63bbf540":"code","578d6ff5":"code","d6602979":"code","97000a46":"code","4ac8afe5":"code","49b6a289":"code","5d466d23":"code","1f56e389":"code","00a7f521":"code","8391f36d":"code","b5ff7215":"code","6cb0c873":"code","f4ef7e97":"code","d8c07def":"markdown","29237892":"markdown","1581e5f8":"markdown"},"source":{"919489ac":"# install pycaret\n!pip install pycaret","4cbe643f":"# import libraries\nimport pandas as pd\nimport numpy as np","1db82017":"# read csv data\ndata = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","eaf6f189":"# check data types\ndata.dtypes","0efbf6f8":"# replace blanks with np.nan\ndata['TotalCharges'] = data['TotalCharges'].replace(' ', np.nan)\ndata.isnull().sum()","d8afe2a8":"# convert to float64\ndata['TotalCharges'] = data['TotalCharges'].astype('float64')\ndata.info()","6b107c21":"!pip install pandas-profiling","216b9d0e":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(data, title=\"EDA Report\")\nprofile","63bbf540":"# check missing values\ndata.isnull().sum()","578d6ff5":"round(data.Churn.value_counts()*100 \/ len(data),2)","d6602979":"categorical = []\nfor i in data.columns:\n    if (data[i].dtype=='object'):\n        categorical.append(i)\nprint(\"Categorical Attribute : {}\\n \".format(len(categorical)))\nfor x in range(len(categorical)): \n    print(categorical[x])","97000a46":"data[categorical].nunique()","4ac8afe5":"for i in categorical[1:]:\n    print(i)\n    print(data[i].unique())\n    print(\"\\n\")","49b6a289":"# init setup\nfrom pycaret.classification import *\ntelecom = setup(data, target = 'Churn', ignore_features = ['customerID'],\n                ordinal_features = {'Contract' : ['Month-to-month' ,'One year', 'Two year']},\n                fix_imbalance = True,\n               transformation = True,#Transformation changes the shape of the distribution such that the transformed data can be represented by normal distribution\n                  normalize = True, #rescale the values of numeric columns\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                numeric_imputation='median',\n                categorical_imputation='mode',)","5d466d23":"ada= create_model('ada')","1f56e389":"print(ada)","00a7f521":"tuned_ada = tune_model(ada,optimize = 'Kappa') #tuned on Kappa","8391f36d":"evaluate_model(tuned_ada) #Graphical plot ","b5ff7215":"predict_model(tuned_ada)# Test data evaluation ","6cb0c873":"final_ada = finalize_model(tuned_ada) # Final model \nfinal_ada","f4ef7e97":"predict_model(final_ada)#final test model evaluation ","d8c07def":"# Exploratory Data Analysis","29237892":"# Data Preparation","1581e5f8":"# Missing Values"}}