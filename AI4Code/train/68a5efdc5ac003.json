{"cell_type":{"edcc5716":"code","5ecc4346":"code","52123aba":"code","265562f2":"code","243c89de":"code","dcb73d68":"code","1d521fb6":"code","46053e07":"code","9401bfab":"code","1d126c2c":"code","ba181216":"code","2d27fd55":"code","c28dd4c0":"code","c99c14d6":"code","c813f41b":"code","062a9f26":"code","0de41441":"code","6076cdcc":"code","b9efffa3":"markdown","09673b7b":"markdown","c5779626":"markdown","a8f91c38":"markdown","8bd97076":"markdown","7537e463":"markdown","52028165":"markdown","102bb411":"markdown","0a19063e":"markdown","0558d8ce":"markdown","199c93b0":"markdown","2b6dc8d2":"markdown","55d952ba":"markdown","3ea7d211":"markdown","9bccb8ce":"markdown"},"source":{"edcc5716":"\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ecc4346":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Now lets read the museum dataset.\nmuseum_path='..\/input\/data-for-datavis'\nmuseum_filepath='museum_visitors.csv'\nmuseum_file=os.path.join(museum_path,museum_filepath)\nmuseum_data=pd.read_csv(museum_file,index_col=['Date'],parse_dates=True)","52123aba":"museum_data.head(5)","265562f2":"# Lets have a close look at the visitor data for one of the museums\nmuseum_data['Avila Adobe'][museum_data.index.year==2018]","243c89de":"plt.figure(figsize=(16,6))\nplt.title('Trend of visitors in museum')\nplt.xlabel('Date')\nplt.ylabel('visitors count')\nsns.lineplot(data=museum_data)","dcb73d68":"plt.figure(figsize=(14,7))\nplt.title('Trend of visitors in Avila Adobe museum')\nplt.xlabel('Date')\nplt.ylabel('visitors count')\nsns.lineplot(data=museum_data['Avila Adobe'][museum_data.index.year==2018])","1d521fb6":"file_dir='..\/input\/data-for-datavis'\nfile_name='flight_delays.csv'\nfile=os.path.join(file_dir,file_name)\nflight_data=pd.read_csv(file)\nflight_data.head(12)","46053e07":"# The below line of code will give us the null values in the US column\nflight_data[pd.isnull(flight_data.US)]","9401bfab":"mean=flight_data['US'].mean()\nflight_data.fillna(value=mean,inplace=True)","1d126c2c":"# Lets find the average arrival delay for spirit airlines flights. Code=NK\nplt.figure(figsize=(16,6))\nplt.title('Average Flight Delay for american airlines')\n# plt.xticks(rotation='vertical')\nplt.ylabel('months==>')\nsns.heatmap(data=flight_data,annot=True)","ba181216":"file_dir='..\/input\/data-for-datavis'\nfile_name='candy.csv'\nfile=os.path.join(file_dir,file_name)\ncandy_data=pd.read_csv(file)\ncandy_data.head()","2d27fd55":"# Which candybar has the highest winpercent\ncandy_data[candy_data['winpercent']==candy_data['winpercent'].max()]","c28dd4c0":"# Which candybar has the highest percentage of sugar\ncandy_data[candy_data['sugarpercent']==candy_data['sugarpercent'].max()]","c99c14d6":"plt.figure(figsize=(16,8))\nplt.title('Relationship between sugar and popularity of candybar')\nsns.scatterplot(data=candy_data, x='sugarpercent', y='winpercent')","c813f41b":"sns.regplot(data=candy_data, x='sugarpercent', y='winpercent')","062a9f26":"sns.lmplot(data=candy_data, x='sugarpercent', y='winpercent', hue='chocolate')","0de41441":"# Let see if popularity is related to the pricing\nsns.regplot(data=candy_data, x='pricepercent', y='winpercent')","6076cdcc":"sns.lmplot(data=candy_data, x='pricepercent', y='winpercent', hue='chocolate')","b9efffa3":"The lighter shades represents data points where there are higher delays. The darker shaded boxes point towards timely arrivals. So, we would like to select a flight from an airline which has more darker boxes in our plot","09673b7b":"## Scatter plot and candy  dataset\nIn this dataset we have ingrdients, pricing and popularity attributes for some 83 different candy bars.Some important columns in the dataset are..\n*  **'competitorname'** contains the name of the candy bar.\n* **the next 9 columns** (from 'chocolate' to 'pluribus') describe the candy. For instance, rows with chocolate candies have \"Yes\" in the 'chocolate' column (and candies without chocolate have \"No\" in the same column).\n* **'sugarpercent'** provides some indication of the amount of sugar, where higher values signify higher sugar content.\n* **'pricepercent'** shows the price per unit, relative to the other candies in the dataset.\n* **'winpercent'** is calculated from the survey results; higher values indicate that the candy was more popular with survey respondents.","c5779626":"We can see from the above plot that no of visitors are higher between the months May and September. In other words people do not prefer to visit museums in the winter. We can dig deep in each of this observatin, however, we will keep the scope of this notebook limited to discover any trend in the data.","a8f91c38":"## Introduction to Seaborn Library\nSeaborn is a library for making statistical graphics in Python. It builds on top of matplotlib and integrates closely with pandas data structures.\n\nSeaborn helps you explore and understand your data. Its one of my favorite library for data exploration\n\n* We will now plot a line chart to visualize the trend of no of visitors for each of the museums for the period 2014 till 2018.  \n\n* Lets see if the plot can highlight any trend and spike in visitor number for a month etc","8bd97076":"This dataset has data for monthly museum visitor for five museums from jan, 2014 till 2018.\nNow, since we have the datafame, lets have a look at some rows of the dataset. ","7537e463":"## Conclusion:\n* We can infer from the above plot that, candybars with chocolate and higher sugar are more popular as compared to bars without sugar and lower price\u00b6\n* We can also see, for candybars without chocolate, popularity decreases with increase in price wherein in case of bars with chocolate popularity increase with increase in price","52028165":"## Spike in visitors for Firehouse Museum\nAs we can see that for the Firehouse Museum, there is a noticiably **high spike in number of visitors in  August, 2014,** where the visitor count exceeded 6000 as compared to an avarage count of 1000  visitors for Firehouse museum in August. We can then use this information to look for any specific event during this time to dig deep.\n\n## Lets have a close look at visitor counts for Avila Adobe museum","102bb411":"## Thank You very much..\n\nI sincerely thank you for taking time and going through my notebook. I am just starting my kaggle journey and your encouragement will be my strength in this journey. If you liked the kernel, do let me know by leaving a comment or a vote.Thank you again.\n","0a19063e":"We do not se any correlation between sugar and popularity\n lets confirm it by plottting a regression line. Regression line are helpful in finding correlation","0558d8ce":"## Lets explore some  Heatmaps\n\nWe will  work with a dataset from the US Department of Transportation that tracks flight delays. The dataset contains average delay in minutes each  month per flight for 14 airlines. Lets explore this data to find out any pattern in av. delays for each airline. We can find out the most punctual and the worst airline as far as timeliness is concerned.Digging deep we may find out what are the factor that effects the delay or timely departure and arival of a flight.","199c93b0":"## Line Chart\nA line chart is often used to visualize a trend in data over intervals of time \u2013 a time series \u2013 thus the line is often drawn chronologically.As usual the first step of data exploration is to read the dataset as a pandas dataframa. So, lts do it..Before that lets import matplotlib and and seaborn","2b6dc8d2":"Does it have any **relationship between 'sugarpercent' (on the horizontal x-axis) and 'winpercent' (on the vertical y-axis).**\n\n","55d952ba":"## Note book on exploratory data analysis\nExploratory data analysis is an essential component of the machine learning pipeline. There is a saying in ML that **\"garbage in , garbage out\"**. To ensure that we inject the cleanest and most potent dataframe in our machine learning model, we must first explore the dataset to indentify and extract all meaningful information and trend. \n\nIn this notebook I am trying to present some demonstration on, how barchart, scatter plot,line chart and other charts can help us discover meaningful insight about the data.\n\nFor this we will be exploring three datasets,Los ,[Angeles Museum Visitors](https:\/\/www.kaggle.com\/alexisbcook\/data-for-datavis?select=museum_visitors.csv), [FLight_delays dataset from the US Department of Transportation](https:\/\/www.kaggle.com\/alexisbcook\/data-for-datavis?select=flight_delays.csv)  and the [candy_dataset](https:\/\/www.kaggle.com\/alexisbcook\/data-for-datavis?select=candy.csv). \n\nWe will explore these datasets using \n* pandas, \n* matplotlib and \n* seaborn library.\n\n","3ea7d211":"## explore and clean the data\nThe dataset looks like a matrix where on x-axis we have the airlines and on y-axis we have the months. On the intersection point of these two axis we will find the av delay for that airline in that month. For this type of scenario heatmaps are the appropriaten choice. So, lets plot one to explore the delays..\n### Data cleaning:\n* The US airline data column **has many null values**. First we will have to handle these values before we can plot the data. We will here, **replace the null values with the mean value from the other data points in that column**.In practice, there are other more effective methods to handle null values.\n* To find out null values we cn use pandas isnull() method\n","9bccb8ce":"In the previous plot we can see a slight correlation between sugar and popularity. Now, lets add the **chocolate** feature and try to find out **how it is related to popularity** of a candybar\n\n* we are using the hue to colorcode\n* we are also using lmplot instead of the scatterplot. Its a version of scatterplot with regression line\n* now we can see that for candybar with chocolate the correlation of sugar and popularity is significant as compared to bars without sugar\n\n"}}