{"cell_type":{"bf27177e":"code","256d2e1d":"code","9200d45d":"code","ad4154c8":"code","8e3d6454":"code","b9aec30b":"code","a478d5d6":"markdown","ef048eef":"markdown","7a5186de":"markdown"},"source":{"bf27177e":"import xgboost as xgb\nimport numpy as np\nimport pandas as pd\npd.set_option('display.max_columns', 500)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport janestreet\nenv = janestreet.make_env()","256d2e1d":"train = pd.read_csv('\/kaggle\/input\/jane-street-market-prediction\/train.csv')\n\nprint(train.head())","9200d45d":"features = [col for col in list(train.columns) if 'feature' in col]\ntrain = train[train['weight'] != 0]\ntrain['action'] = (train['resp'].values > 0).astype(int)\ntrain = train.fillna(-999999)\nX_train = train.loc[:, features]\ny_train = train.loc[:, 'action']\ndel train","ad4154c8":"xgcr = xgb.XGBClassifier(\n    n_estimators=1000,\n    max_depth=7,\n    eta=0.1,\n    missing=-999999,\n    random_state=29,\n    tree_method='gpu_hist',\n    subsample=0.95,\n    colsample_bytree=0.95,\n    eval_metric='error'\n)","8e3d6454":"%time xgcr.fit(X_train, y_train)","b9aec30b":"for (test_df, prediction_df) in env.iter_test():\n    X_test = test_df.loc[:, features]\n    y_preds = xgcr.predict(X_test)\n    prediction_df.action = y_preds\n    env.predict(prediction_df)","a478d5d6":"# Seems that many things there could be changed...","ef048eef":"# Setting up datasets (don't want to train with no-impact rows, don't want to mess up with clever filling of nans - means can change for half a year!)","7a5186de":"# First look at the data"}}