{"cell_type":{"48663e6a":"code","147c6186":"code","f0a93472":"code","323ea505":"code","79253541":"code","87520d1f":"code","f39efeac":"code","faa1552c":"code","2917cfc4":"code","2edef250":"code","c9776e4b":"code","2abb02b2":"code","785df003":"code","fbe91877":"code","cc4c4f7b":"code","58756570":"code","9cb210ae":"code","ebfa81dc":"code","b84c13e0":"code","9b8b4dfe":"code","30cfa09d":"markdown","1bfd7e34":"markdown","756648e2":"markdown","4d11c18b":"markdown","2a86bd1e":"markdown","a937dc2e":"markdown","fe6e0ad4":"markdown","203d4953":"markdown","414eb3cb":"markdown","f296f9df":"markdown","81f24a28":"markdown","b9741146":"markdown","31568682":"markdown","34d56058":"markdown","d792350e":"markdown","006f1aaf":"markdown","df9870ac":"markdown","dd371dd6":"markdown","78176361":"markdown","673ffff3":"markdown","40d63811":"markdown","e44813a6":"markdown","96bc993e":"markdown","81d847b0":"markdown","ff966d91":"markdown","f45e11b7":"markdown","1d66ef73":"markdown","186c5f32":"markdown"},"source":{"48663e6a":"#Dataset - https:\/\/www.kaggle.com\/lampubhutia\/nyc-flight-delay\n\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas_profiling import ProfileReport #Pandas profiling to understand the data if required \nimport datetime #datettme library\nimport math #math library\n\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","147c6186":"#read flights dataset csv file available on Kaggle\ndf=pd.read_csv(\"..\/input\/nyc-flight-delay\/flight_data.csv\")\ndt=df\ndf.head(5) # Read the top 5 rows of the dataset \n\n#import calendar\n#df.month = df.month.apply(lambda x: calendar.month_abbr[x])   # i didnt convert the month into Jan , Feb month format to keep it simple analysis as of now ","f0a93472":"#call shape to identify the rows and columns of the dataset\nprint('Flights dataset is having ',df.shape[0] , 'rows and ',df.shape[1],' columns which is big enough for an excel file to handle\/process sometimes')","323ea505":"#Simple function to check Null values in each column in the dataset\ndef check_NullValues():\n    out=df.isnull().sum()\n    found=0\n    for counter in out.index:\n        if out[counter]>0:\n            found=found+1\n            print( \"column\", counter , \" is having \",out[counter] , \"Null values\")\n\n\n    if(found==0):\n        print(\"No Null values found in dataframe\")","79253541":"#Show Null value columns alongwith quantity of Null values \ncheck_NullValues()","87520d1f":"#Drop Null Values\ndf.dropna(axis=0,how ='any', inplace=True)\n\n#Drop the columns that i dont need for my analysis to reduce the processing time\/power\ndf.drop(axis=1,columns=['dep_time','sched_dep_time','sched_arr_time','arr_time','time_hour'],inplace=True)","f39efeac":"#Let's call null value check function again to check if we still have any null values. i know it shouldnt be but playing by calling function again to test it \ncheck_NullValues()","faa1552c":"#call shape to identify the rows and columns of the dataset\nprint('Flights dataset is having ',df.shape[0] , 'rows now and ',df.shape[1],' columns as we have dropped 5 columns also ')\nprint('this dataset is simple dataset which doesnt need much of cleaning\/prep unlike real world dataset where we need to spend so much of time in data preparations')","2917cfc4":"'''\nFunction draw_barplot is a function to draw bar plots for visual analysis \n\n#_style = variable for seaborn style\n#_x = X Axis variable\n#_y = Y Axis variable\n#_dataset= dataset variable\n#_suptitle = Subtitle Text to be displayed\n#_xLabels = Labels to be displayed for x axis \n#_yLabels = Labels to be displayed for y axis \n\n'''\n        \ndef draw_barplot(_style, _x,_y,_dataset,_suptitle,_xLabels,_yLabels):        \n            sns.set(style=_style)         \n            g = sns.catplot(x=_x, y=_y, data=_dataset,aspect=2,\n                            height=5, kind=\"bar\", palette=\"muted\")\n            plt.subplots_adjust(top=0.9)\n            g.fig.suptitle(_suptitle)\n            g.set_xlabels(_xLabels)\n            g.set_ylabels(_yLabels)    ","2edef250":"'''\nFunction plot_CountPlot is a function to draw Count plots for visual analysis \n\n'''\n\ndef plot_CountPlot(X,Dataframe,Title):\n    fig = plt.figure(figsize=(15,5))\n    ax = sns.countplot(x=X, data=Dataframe ,palette='pastel' ,edgecolor=sns.color_palette(\"dark\", 3))\n    ax.set_title(Title)\n    ax.legend(loc='upper right')\n\n    for t in ax.patches:\n        if (np.isnan(float(t.get_height()))):\n            ax.annotate(0, (t.get_x(), 0))\n        else:\n            ax.annotate(str(format(int(t.get_height()), ',d')), (t.get_x(), t.get_height()*1.01))\n    plt.show();   \n    ","c9776e4b":"dt=df.groupby(by='origin').count().reset_index().sort_values(by='year', ascending=False)\ndt['flightsCount']=dt.year\n\n#Call Function to draw Bar Graph\ndraw_barplot(_style='whitegrid',_x='origin',_y='flightsCount',_xLabels='Airport',\n             _yLabels='Number of Flights', _dataset=dt,\n             _suptitle=\"Number of Flights from different Airports\"\n            )\n","2abb02b2":"plot_CountPlot('origin',df,'Number of Flights from different Airports')","785df003":"\ndelay_Frame=df.groupby(by='origin').mean().reset_index().sort_values(by='year', ascending=False)\ndt[['origin','dep_delay']]\n\n#Call Function to draw Bar Graph\ndraw_barplot(_style='whitegrid',_x='origin',_y='dep_delay',_xLabels='Airport',\n             _yLabels='Average Departure Delay', _dataset=delay_Frame,\n             _suptitle=\"Average Departure Delay from Airport\"\n            )\n","fbe91877":"delay_Frame=df.groupby(by='origin').mean().reset_index().sort_values(by='year', ascending=False)\ndt[['origin','arr_delay']]\n\n#Call Function to draw Bar Graph\ndraw_barplot(_style='whitegrid',_x='origin',_y='arr_delay',_xLabels='Airport',\n             _yLabels='Average Arrival Delay', _dataset=delay_Frame,\n             _suptitle=\"Average Arrival Delay at Airport\"\n            )\n","cc4c4f7b":"plot_CountPlot('carrier',df,'Flights Carrier Frequency')","58756570":"##Let's calculate the flight speed first as we dont have flight speed in the dataset \ndf['aircraft_speed']=(np.floor(df.distance\/df.air_time)*60).astype(int)\ndf=df.sort_values(\"aircraft_speed\", axis = 0, ascending = False)","9cb210ae":"\nsns.set_style('whitegrid')\nplt.figure(figsize=(30,10))\n\n#Below visualisations tell us about the speed variations of the Aircrafts \n\n# Violin plot\nax=sns.violinplot(x='carrier', y='aircraft_speed', \n               data=df,palette='muted')\n\nplt.title('Aircraft Speed Analysis based on Carrier')\nax.set(xlabel='Aircarft Carrier', ylabel='Aircraft Speed')\n\n\n\n\n#Box and Whisker Graph\nplt.figure(figsize=(20,10))\nax=sns.boxplot(x=\"carrier\", y=\"aircraft_speed\",             \n            data=df)\nsns.despine(offset=10, trim=True)\nplt.title('Aircraft Speed Analysis based on Carrier')\n#ax.set_xlabels(\"Airport\")\n#ax.set_ylabels(\"Average Departure Delay\")\nax.set(xlabel='Aircarft Carrier', ylabel='Aircraft Speed')","ebfa81dc":"destflightcountdf=df.groupby([\"dest\"],sort=True).count()\ndestflightcountdf['FlightsCount']=destflightcountdf['dep_delay']\ndestflightcountdf=destflightcountdf['FlightsCount'].sort_values(ascending=False).head(5)\ndestflightcountdf\n","b84c13e0":"# Pie chart\nlabels = destflightcountdf.index\nsizes = destflightcountdf.values\n# only \"explode\" the 2nd slice (i.e. 'Hogs')\nexplode = (0.1, 0, 0, 0,0)\n#add colors\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffbb99','#00bb99']\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, \n        shadow=True, startangle=135)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')\nplt.title('Top 5 - Maximum number of flights headed towards below Airport')\nplt.tight_layout()\nplt.show()\n","9b8b4dfe":"ota=(df[df[\"arr_delay\"]==0].groupby(\"origin\").count()).loc[:,\"year\":\"month\"]\nOnTimeArrivalPerc=np.round(((ota[\"year\"]\/ df[\"month\"].count() ) * 100),decimals=2)\n\nplt.plot(OnTimeArrivalPerc)\nplt.title(\"On Time Arrival % Analysis\")\nplt.ylabel(\"On Time Arrival %\")\nplt.xlabel(\"Origin Airports\")","30cfa09d":"now from above view we can see we have 19 columns in the dataset which i will define as below (based on my general understanding of this dataset on first look)\n\n<font size=\"5\">Dataset Details<\/font>\n> \n\n1. year - Year of Flight\n2. month - Month of Flight\n3. day - Day (number of Flight)\n4. dep_time - Departure Time\n5. sched_dep_time - Scheduled Departure Time\n6. dep_delay - Departure Delay (in Minutes)\n7. arr_time - Arrival Time\n8. sched_arr_time - Scheduled Arrival Time\n9. arr_delay - Arrival Delay (in Minutes)\n10. carrier- Carrier Details of Flight\n11. flight - Flight Name\n12. tailnum - Tailnumber of Flight\n13. origin - Origin of Flight\n14. dest - Destination Airport Name\n15. air_time - Air Time (Time in Air - travel Time ( in minutes) )\n16. distance - Distance (assuming in miles?)\n17. hour - Hour\n18. minute - minute\n19. time_hour - time hour\n\nHow do i know these details ? well in real world this information is generally shared by business or comes with domain knowledge\nThi dataset is public and i dont have any domain knowledge about flights so this is my assumption based on the dataset when i read it for sometimes\n\nAlso well said by someone\n<br>\n<font size=\"3\">**Sometimes - we need to talk to data to know about it.....******.<\/font>\n\n\n\nWell we have so many columns to do analysis but to keep it simple we will use some of the columns as of now to keep this analysis simple and understandable","1bfd7e34":"<br>\n<font size=\"5\"> 4.  Flights Carrier Frequency....<\/font>\n<br>\n<br>\n\nFrom below visualisation we can see the flights carrier frequency\n","756648e2":"<img src=\"https:\/\/images.unsplash.com\/photo-1526948531399-320e7e40f0ca?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\" width=\"1000px\">\n\n\n\n<span>Photo by <a href=\"https:\/\/unsplash.com\/@austindistel?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Austin Distel<\/a> on <a href=\"https:\/\/unsplash.com\/s\/photos\/job-done?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash<\/a><\/span>","4d11c18b":"<br>\n<font size=\"5\"> 5.  Flights Speed Distributions....<\/font>\n<br>\n<br>\n\nFrom below visualisation we can see the Flights Speed Distributions in a Violin plot... ","2a86bd1e":"<br>\n<font size=\"5\"> 6.  Top 5 - Maximum number of flights headed towards Destination Airport....<\/font>\n<br>\n<br>\n\nFrom below visualisation we can see Top 5 - Maximum number of flights headed towards below Airport in a Pie chart format\nWhy top 5 ? \nReason : We have so many destination airports so for better visualisation we picked only top 5 destination airports","a937dc2e":"**Another visualization**","fe6e0ad4":"<br>\n<font size=\"5\"> Time to showcase the data analysis\/outcome to team for further ideas\/enhancements<\/font>\n<br>","203d4953":"<br>\n<font size=\"5\"> **Please upvote my kernel if you like it...Feeback also welcome ** .<\/font>\n<br>\n\n\n<img src=\" https:\/\/images.unsplash.com\/photo-1534293230397-c067fc201ab8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80\n\" width=\"1000px\">\n\nPhoto by Parker Johnson on Unsplash","414eb3cb":"<br>\n<font size=\"5\"> 7.  On Time Arrival Performance of Airports<\/font>\n<br>\n<br>\n","f296f9df":"<br>\n<font size=\"5\"><br> 3.  Arrival Delay at Airports....<\/font>\n<br>\n<br>\n","81f24a28":"<br>\n<font size=\"4\">So we have maximum number of flights taking off from     ****EWR (Newark International Airport)**....<\/font>\n<br>\n<br>\n<br>\n\n1. EWR (Newark International Airport)                    - 117127\n2. JFK (New York, John F Kennedy International Airport)  - 109079\n3. LGA (New York, La Guardia Airport)                    -  101140**\n\n#Name of the Airports can be found at link : https:\/\/www.world-airport-codes.com\/us-top-40-airports.html","b9741146":"<img src=\"https:\/\/images.unsplash.com\/photo-1526379095098-d400fd0bf935?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=889&q=80\" width=\"1000px\">\n\nPhoto by Hitesh Choudhary on Unsplash","31568682":"<br>\n<font size=\"4\">So we have maximum Departure Delay (Time in Minutes) of Flight   ****EWR (Newark International Airport)**. Seems like its one of the busy Airport<\/font>\n<br>\n<br>\n<br>\n\n1. EWR (Newark International Airport)                    \n2. JFK (New York, John F Kennedy International Airport) \n3. LGA (New York, La Guardia Airport)                    \n\n","34d56058":"<br>\n<font size=\"5\"> 2.  Departure Delay from Airports....<\/font>\n<br>\n<br>\n","d792350e":"Welcome to this data analysis of New York Flights Dataset Analysis\n\n**Dataset**:We have a dataset of flights taken off from three different airports towards multiple airports (#Dataset - https:\/\/www.kaggle.com\/lampubhutia\/nyc-flight-delay)\n\nFirst of all we will import required python liabraries. Dataset used in this kernel is freely available on Kaggle (free for public usage) \n\n\nLet's have a look on it","006f1aaf":"<img src=\"https:\/\/images.unsplash.com\/photo-1543286386-713bdd548da4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\" width=\"1000px\">\n\n\n<span>Photo by <a href=\"https:\/\/unsplash.com\/@isaacmsmith?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Isaac Smith<\/a> on <a href=\"https:\/\/unsplash.com\/s\/photos\/graph?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash<\/a><\/span>\n","df9870ac":"Despite of being Busiest AIRPORT - EWR ( Newark International Airport ) having maximum number of flights taking off and having high departure time , this airport is having good on-time arrival which means Newark International Airport is having good landing area for incoming flights - **INSIGHT**\n\n\nSo Airport authorities may like to improve Newark International Airport\tfor enhancing departure timelines to reduce departure delays further considering heavy traffic from this airport","dd371dd6":"<font size=\"5\">Welcome to NewYork Flights Dataset (2013) Analysis....<\/font>","78176361":"<img src=\"https:\/\/images.unsplash.com\/photo-1545985548-25d056e14bd5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=744&q=80\" width=\"1000px\">\n\n\n\nPhoto by Miguel \u00c1ngel Sanz on Unsplash","673ffff3":"<br>\n<font size=\"5\">Time for some Visualisation<\/font>\n<br>\n<br>\n","40d63811":"Let's read the dataset csv file first","e44813a6":"<br>\n<font size=\"5\">1. Number of Flights from different Airports.....<\/font>\n","96bc993e":"Aircraft carrier named as DL got the highest speed amonst available flight carriers\n","81d847b0":"Well before proceeding ahead i would like to check the null values in the dataset which cause the incorrect analysis \nwe have multiple options to treat the null values \n1. Remove them (Simplest option)\n2. Impute null\/missing values with aveage or previous values  (https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.fillna.html)\n\nLet's go with the simple and best option considering we dont have much business\/domain knowledge readily available with us, so lets check NULL values first and then kick them off of the dataset","ff966d91":"Above visualisation tells us that maximum number of flights are headed towards ATL - ( Hartsfield Jackson Atlanta International Airport  (ATL) \t - Georgia) \nRef : https:\/\/www.world-airport-codes.com\/united-states\/hartsfield-jackson-atlanta-international-428.html","f45e11b7":"Let's see dataset size again after dropping the null values ","1d66ef73":"So we see that we have so many Null values in our dataset, let's remove them with a simple option dropna function (https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.dropna.html)","186c5f32":"<br>\n<font size=\"5\">So we have done analysis of our dataset for mentioned points to understand the outcomes <\/font>\n<br>\n<br>\n\n<br>\n<font size=\"4\">1. Number of Flights from different Airports<\/font>\n<br>\n<font size=\"4\"> 2.  Departure Delay from Airports<\/font>\n<br>\n<font size=\"4\"> 3.  Arrival Delay at Airports<\/font>\n<br>\n<font size=\"4\"> 4.  Flights Carrier Frequency<\/font>\n<br>\n<font size=\"4\"> 5.  Flights Speed Distributions<\/font>\n<br>\n<font size=\"4\"> 6.  Top 5 - Maximum number of flights headed towards Airports<\/font>\n<br>\n<font size=\"4\"> 7.  On Time Arrival Performance of Airports<\/font>\n<br>\n"}}