{"cell_type":{"e166869e":"code","5533c55f":"code","be412970":"code","4fb558a5":"code","c45004c1":"code","72e80b4f":"code","24a46df0":"code","d43cee38":"code","168275a3":"code","5a590e36":"code","d605bd73":"code","09919e41":"code","726e73fc":"code","76b8c2f2":"code","bb9cd1ef":"code","1308d61a":"markdown","dc9371f9":"markdown","33556a30":"markdown","7f41e371":"markdown","fb1d3858":"markdown","ae05eacc":"markdown","8b4482e2":"markdown","62cc6655":"markdown","278f836d":"markdown","3cb91670":"markdown","5f6d278f":"markdown","f255e399":"markdown","72ba4eed":"markdown","c2e19097":"markdown","000c0aca":"markdown","3e85f27b":"markdown"},"source":{"e166869e":"# install protlearn\n!pip install protlearn","5533c55f":"import pandas as pd \nimport protlearn as pl\nimport matplotlib.pyplot as plt","be412970":"spike = \"MFIFLLFLTLTSGSDLDRCTTFDDVQAPNYTQHTSSMRGVYYPDEIFRSDTLYLTQDLFL\\\n         PFYSNVTGFHTINHTFGNPVIPFKDGIYFAATEKSNVVRGWVFGSTMNNKSQSVIIINNS\\\n         TNVVIRACNFELCDNPFFAVSKPMGTQTHTMIFDNAFNCTFEYISDAFSLDVSEKSGNFK\\\n         HLREFVFKNKDGFLYVYKGYQPIDVVRDLPSGFNTLKPIFKLPLGINITNFRAILTAFSP\\\n         AQDIWGTSAAAYFVGYLKPTTFMLKYDENGTITDAVDCSQNPLAELKCSVKSFEIDKGIY\\\n         QTSNFRVVPSGDVVRFPNITNLCPFGEVFNATKFPSVYAWERKKISNCVADYSVLYNSTF\\\n         FSTFKCYGVSATKLNDLCFSNVYADSFVVKGDDVRQIAPGQTGVIADYNYKLPDDFMGCV\\\n         LAWNTRNIDATSTGNYNYKYRYLRHGKLRPFERDISNVPFSPDGKPCTPPALNCYWPLND\\\n         YGFYTTTGIGYQPYRVVVLSFELLNAPATVCGPKLSTDLIKNQCVNFNFNGLTGTGVLTP\\\n         SSKRFQPFQQFGRDVSDFTDSVRDPKTSEILDISPCSFGGVSVITPGTNASSEVAVLYQD\\\n         VNCTDVSTAIHADQLTPAWRIYSTGNNVFQTQAGCLIGAEHVDTSYECDIPIGAGICASY\\\n         HTVSLLRSTSQKSIVAYTMSLGADSSIAYSNNTIAIPTNFSISITTEVMPVSMAKTSVDC\\\n         NMYICGDSTECANLLLQYGSFCTQLNRALSGIAAEQDRNTREVFAQVKQMYKTPTLKYFG\\\n         GFNFSQILPDPLKPTKRSFIEDLLFNKVTLADAGFMKQYGECLGDINARDLICAQKFNGL\\\n         TVLPPLLTDDMIAAYTAALVSGTATAGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYE\\\n         NQKQIANQFNKAISQIQESLTTTSTALGKLQDVVNQNAQALNTLVKQLSSNFGAISSVLN\\\n         DILSRLDKVEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSK\\\n         RVDFCGKGYHLMSFPQAAPHGVVFLHVTYVPSQERNFTTAPAICHEGKAYFPREGVFVFN\\\n         GTSWFITQRNFFSPQIITTDNTFVSGNCDVVIGIINNTVYDPLQPELDSFKEELDKYFKN\\\n         HTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQYIKWPWYVWL\\\n         GFIAGLIAIVMVTILLCCMTSCCSCLKGACSCGSCCKFDEDDSEPVLKGVKLHYT\"","4fb558a5":"# delete empty spaces\nspike = spike.replace(\" \", \"\")","c45004c1":"len(spike)","72e80b4f":"# build dataframe\nspike = pd.DataFrame(data=[spike], columns=['Sequence'])","24a46df0":"# compute the frequency of each amino acid in the sequence\ncomp = pl.composition(spike)\ncomp","d43cee38":"# compute the ngram compositions of the sequence (in this case, only the dipeptide composition)\nng = pl.ngram_composition(spike)\nng","168275a3":"# compute aaindex1\naa1 = pl.aaindex1(spike)\naa1","5a590e36":"# compute aaindex1\naa2 = pl.aaindex2(spike)\naa2","d605bd73":"# compute aaindex3\naa3 = pl.aaindex3(spike)\naa3","09919e41":"features = pd.concat([comp, ng, aa1, aa2, aa3], axis=1)\nfeatures","726e73fc":"# the protlearn package automatically removes columns with NaNs \nfeatures.isna().sum().sum()","76b8c2f2":"pl.viz_composition(spike)","bb9cd1ef":"plt.figure(figsize=(20,12))\nplt.subplot(2,1,1)\npl.viz_ngram(spike, method='relative', ngram=2, top=20, xtick_rotation=60)\nplt.subplot(2,1,2)\npl.viz_ngram(spike, method='relative', ngram=3, top=5, xtick_rotation=60)","1308d61a":"## Conclusion","dc9371f9":"As `protlearn` was designed for datasets containing multiple sequences, it requires the input to be a Pandas DataFrame with column name 'Sequence'.","33556a30":"#### Concatenate features","7f41e371":"Disclaimer: I am the author of the `protlearn` package that is used throughout this notebook. The documentation of it can be found [here](https:\/\/github.com\/tadorfer\/ProtLearn).","fb1d3858":"Researchers and engineers all over the globe are scrambling to develop new vaccines and diagnostic tools for COVID-19. One aspect of research is the analysis and quantification of virus proteins. Thus, this notebook serves the purpose of engineering features from a protein sequence that can be used as inputs to a classifier or regressor. In this illustration, we will use the protein sequence of the **Human SARS coronavirus (SARS-CoV) spike glycoprotein**, which was obtained from UniProt.","ae05eacc":"#### N-gram composition","8b4482e2":"## Visualizations","62cc6655":"## About this Notebook","278f836d":"The above plot shows the top 20% of the dipeptide composition and the top 5% of the tripeptide composition of the sequence.","3cb91670":"#### Amino acid composition","5f6d278f":"This notebook provides some basic feature engineering techniques for protein sequences using the `protlearn` package. If you have any **criticism \/ feedback \/ or suggestions** for additional functions, I would highly welcome that :)","f255e399":"Information on the AAIndex used below can be accessed [here](https:\/\/www.genome.jp\/aaindex\/).","72ba4eed":"#### Compute Features","c2e19097":"Get the amino acid sequence of the Human SARS coronavirus (SARS-CoV) spike glycoprotein from [UniProt](https:\/\/www.uniprot.org\/uniprot\/P59594.fasta). In this case, the sequence was copied from the UniProt website. Alternatively, the sequence can also be downloaded and imported into Python using the `biopython` package.","000c0aca":"## Feature Engineering","3e85f27b":"## Get protein sequence"}}