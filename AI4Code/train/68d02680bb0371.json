{"cell_type":{"7ebce20a":"code","8dfaa2c7":"code","efcea63e":"code","e671afa9":"code","153115db":"markdown","16026ee0":"markdown","b6f69a53":"markdown"},"source":{"7ebce20a":"WD = '\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/'\n\n# Imports\nimport pandas as pd\nfrom ipywidgets import interact\n","8dfaa2c7":"# !cat \"{WD+'json_schema.txt'}\"","efcea63e":"!cat \"{WD+'all_sources_metadata_2020-03-13.readme'}\"","e671afa9":"# The all sources metadata file\nmetadata = pd.read_csv(WD + \"all_sources_metadata_2020-03-13.csv\", \n                      dtype={'Microsoft Academic Paper ID': str,\n                             'pubmed_id': str})\n\n# Convert the doi to a url\ndef doi_url(d): return f'http:\/\/{d}' if d.startswith('doi.org') else f'http:\/\/doi.org\/{d}'\nmetadata.doi = metadata.doi.fillna('').apply(doi_url)\n\n# Set the abstract to the paper title if it is null\nmetadata.abstract = metadata.abstract.fillna(metadata.title)\n\n# A list of columns to limit the display\nMETADATA_COLS = ['title', 'abstract', 'doi', 'publish_time',\n                 'authors', 'journal', 'has_full_text']\n\ndef show_metadata(ShowAllColumns=False, show_head=True):\n    meta_temp = metadata.head() if show_head == True else metadata\n    return meta_temp if ShowAllColumns else meta_temp[METADATA_COLS]\n\n# Use ipywidgets to limit the sources. \ninteract(show_metadata);","153115db":"## ALL Sources Metadata\n\n* It has information about all the research papers\n* title and abstract of the research papers are the most important feilds here.","16026ee0":"## Metadata readme","b6f69a53":"## JSON Schema"}}