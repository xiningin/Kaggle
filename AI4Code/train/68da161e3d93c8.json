{"cell_type":{"4f36a2be":"code","8e25a2f0":"code","8784a454":"code","ae424c78":"code","ba41c1f0":"code","e769b2ba":"code","a11c0833":"code","9dbb370b":"code","b3242916":"code","53e7d861":"code","6141df27":"code","5f2bdac1":"code","a47b59b6":"code","c5ab7ca8":"code","afeef6f6":"code","48837d0c":"code","85b9279d":"code","09ab051b":"code","9a9810ec":"code","c88ee948":"code","1606c527":"code","3278fe9e":"code","0d7c2911":"code","188384fd":"code","4d5180ac":"code","15a2f5fc":"code","06141e72":"code","71d8c05b":"code","13112087":"code","c3a4fcf7":"code","79699bf1":"code","9c1f0157":"code","fb704f10":"code","f3931f8e":"code","c10eb33f":"code","3cfa085c":"code","7e4c1888":"code","137bf336":"code","99677b92":"code","22aa0eb2":"code","3260194e":"code","30e6fae6":"code","4c219963":"code","9c45d27e":"code","43c93bc4":"code","ae50de74":"code","25aad8e2":"code","d66da553":"code","1dd81bc6":"code","bd1e1ada":"code","eb9fa69c":"code","05ec38b5":"markdown","94f7ea09":"markdown","baae9c02":"markdown","13ada27c":"markdown","d4fe3e76":"markdown","6a3109f8":"markdown","22c4e42d":"markdown","98049d7c":"markdown","d1073d14":"markdown","3468e7f5":"markdown","11994123":"markdown","b3cde388":"markdown","5e38198c":"markdown","7bf01dca":"markdown","0b2eed68":"markdown","17dac510":"markdown","20e5ffa2":"markdown","d23a7de6":"markdown","a0365607":"markdown","8a045694":"markdown","96146c9a":"markdown","bcc595d6":"markdown","a6eacfe8":"markdown","e9ac095a":"markdown","041d7546":"markdown","a7f3b971":"markdown","a97292fb":"markdown","d644fb22":"markdown","73e098be":"markdown","4440722e":"markdown","7491e354":"markdown","cae9210e":"markdown","cd5593bc":"markdown","5c4c2918":"markdown","a917dac8":"markdown","ad332b78":"markdown"},"source":{"4f36a2be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e25a2f0":"bangalore_dataset = pd.read_csv('..\/input\/housing-prices-in-metropolitan-areas-of-india\/Bangalore.csv')\ndelhi_dataset = pd.read_csv('..\/input\/housing-prices-in-metropolitan-areas-of-india\/Delhi.csv')\nkolkata_dataset = pd.read_csv('..\/input\/housing-prices-in-metropolitan-areas-of-india\/Kolkata.csv')\nmumbai_dataset = pd.read_csv('..\/input\/housing-prices-in-metropolitan-areas-of-india\/Mumbai.csv')","8784a454":"bangalore_dataset.shape, delhi_dataset.shape, kolkata_dataset.shape, mumbai_dataset.shape","ae424c78":"pd.pandas.set_option('display.max_columns', None)\nbangalore_dataset.head()","ba41c1f0":"pd.pandas.set_option('display.max_columns', None)\ndelhi_dataset.head()","e769b2ba":"pd.pandas.set_option('display.max_columns', None)\nkolkata_dataset.head()","a11c0833":"pd.pandas.set_option('display.max_columns', None)\nmumbai_dataset.head()","9dbb370b":"bangalore_dataset.info()","b3242916":"delhi_dataset.info()","53e7d861":"kolkata_dataset.info()","6141df27":"mumbai_dataset.info()","5f2bdac1":"bangalore_dataset.duplicated().sum()","a47b59b6":"delhi_dataset.duplicated().sum()","c5ab7ca8":"kolkata_dataset.duplicated().sum()","afeef6f6":"mumbai_dataset.duplicated().sum()","48837d0c":"bangalore_dataset.describe()","85b9279d":"delhi_dataset.describe()","09ab051b":"kolkata_dataset.describe()","9a9810ec":"mumbai_dataset.describe()","c88ee948":"plt.figure(figsize=(12,12))\nplt.subplot(221)\nsns.boxplot(bangalore_dataset['Area'])\nplt.title('Outliers In Area In Bangalore Dataset')\nplt.subplot(222)\nsns.boxplot(delhi_dataset['Area'])\nplt.title('Outliers In Area In Delhi Dataset')\nplt.subplot(223)\nsns.boxplot(kolkata_dataset['Area'])\nplt.title('Outliers In Area In Kolkata Dataset')\nplt.subplot(224)\nsns.boxplot(mumbai_dataset['Area'])\nplt.title('Outliers In Area In Mumbai Dataset')\nplt.show()","1606c527":"plt.figure(figsize=(12,12))\nplt.subplot(221)\nsns.boxplot(bangalore_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Bangalore Dataset')\nplt.subplot(222)\nsns.boxplot(delhi_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Delhi Dataset')\nplt.subplot(223)\nsns.boxplot(kolkata_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Kolkata Dataset')\nplt.subplot(224)\nsns.boxplot(mumbai_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Mumbai Dataset')\nplt.show()","3278fe9e":"plt.figure(figsize=(12,12))\nplt.subplot(221)\nsns.distplot(bangalore_dataset['Price'], bins=50)\nplt.title('Price Distribution In Bangalore')\nplt.subplot(222)\nsns.distplot(delhi_dataset['Price'], bins=50)\nplt.title('Price Distribution In Delhi')\nplt.subplot(223)\nsns.distplot(kolkata_dataset['Price'], bins=50)\nplt.title('Price Distribution In Kolkata')\nplt.subplot(224)\nsns.distplot(mumbai_dataset['Price'], bins=50)\nplt.title('Price Distribution In Mumbai')\nplt.show()","0d7c2911":"plt.figure(figsize=(12,12))\nplt.subplot(221)\nplt.hist(bangalore_dataset['Area'], bins=50)\nplt.title('Area Distribution In Bangalore')\nplt.subplot(222)\nplt.hist(delhi_dataset['Area'], bins=50)\nplt.title('Area Distribution In Delhi')\nplt.subplot(223)\nplt.hist(kolkata_dataset['Area'], bins=50)\nplt.title('Area Distribution In Kolkata')\nplt.subplot(224)\nplt.hist(mumbai_dataset['Area'], bins=50)\nplt.title('Area Distribution In Mumbai')\nplt.show()","188384fd":"plt.figure(figsize=(20,20))\nplt.subplot(221)\nbangalore_dataset['No. of Bedrooms'].value_counts().plot(kind='bar',figsize=(12,10))\nplt.title('No. of Bedrooms Distribution In Bangalore')\nplt.subplot(222)\ndelhi_dataset['No. of Bedrooms'].value_counts().plot(kind='bar',figsize=(12,10))\nplt.title('No. of Bedrooms Distribution In Delhi')\nplt.subplot(223)\nkolkata_dataset['No. of Bedrooms'].value_counts().plot(kind='bar',figsize=(12,10))\nplt.title('No. of Bedrooms Distribution In Kolkata')\nplt.subplot(224)\nmumbai_dataset['No. of Bedrooms'].value_counts().plot(kind='bar',figsize=(12,10))\nplt.title('No. of Bedrooms Distribution In Mumbai')\nplt.show()","4d5180ac":"plt.figure(figsize=(20,20))\nplt.subplot(221)\nbangalore_dataset['Gymnasium'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('Gymnasium Count In Bangalore')\nplt.subplot(222)\nbangalore_dataset['SwimmingPool'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('SwimmingPool Count In Bangalore')\nplt.subplot(223)\nbangalore_dataset['LandscapedGardens'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('LandscapedGardens Count In Bangalore')\nplt.subplot(224)\nbangalore_dataset['JoggingTrack'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('JoggingTrack Count In Bangalore')\nplt.show()","15a2f5fc":"plt.figure(figsize=(20,20))\nplt.subplot(221)\ndelhi_dataset['Gymnasium'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('Gymnasium Count In Delhi')\nplt.subplot(222)\ndelhi_dataset['SwimmingPool'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('SwimmingPool Count In Delhi')\nplt.subplot(223)\ndelhi_dataset['LandscapedGardens'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('LandscapedGardens Count In Delhi')\nplt.subplot(224)\ndelhi_dataset['JoggingTrack'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('JoggingTrack Count In Delhi')\nplt.show()","06141e72":"plt.figure(figsize=(20,20))\nplt.subplot(221)\nkolkata_dataset['Gymnasium'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('Gymnasium Count In Kolkata')\nplt.subplot(222)\nkolkata_dataset['SwimmingPool'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('SwimmingPool Count In Kolkata')\nplt.subplot(223)\nkolkata_dataset['LandscapedGardens'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('LandscapedGardens Count In Kolkata')\nplt.subplot(224)\nkolkata_dataset['JoggingTrack'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('JoggingTrack Count In Kolkata')\nplt.show()","71d8c05b":"plt.figure(figsize=(20,20))\nplt.subplot(221)\nmumbai_dataset['Gymnasium'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('Gymnasium Count In Mumbai')\nplt.subplot(222)\nmumbai_dataset['SwimmingPool'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('SwimmingPool Count In Mumbai')\nplt.subplot(223)\nmumbai_dataset['LandscapedGardens'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('LandscapedGardens Count In Mumbai')\nplt.subplot(224)\nmumbai_dataset['JoggingTrack'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(12,10))\nplt.title('JoggingTrack Count In Mumbai')\nplt.show()","13112087":"plt.figure(figsize=(12,10))\nplt.subplot(221)\nsns.distplot(bangalore_dataset['Price'][bangalore_dataset['Gymnasium']==1])\nplt.title('Gymnasium Vs Bangalore')\nplt.subplot(222)\nsns.distplot(bangalore_dataset['Price'][bangalore_dataset['SwimmingPool']==1])\nplt.title('SwimmingPool Vs Bangalore')\nplt.subplot(223)\nsns.distplot(bangalore_dataset['Price'][bangalore_dataset['LandscapedGardens']==1])\nplt.title('LandscapedGardens Vs Bangalore')\nplt.subplot(224)\nsns.distplot(bangalore_dataset['Price'][bangalore_dataset['JoggingTrack']==1])\nplt.title('JoggingTrack Vs Bangalore')\nplt.show()","c3a4fcf7":"plt.figure(figsize=(12,10))\nplt.subplot(221)\nsns.distplot(delhi_dataset['Price'][delhi_dataset['Gymnasium']==1])\nplt.title('Gymnasium Vs Delhi')\nplt.subplot(222)\nsns.distplot(delhi_dataset['Price'][delhi_dataset['SwimmingPool']==1])\nplt.title('SwimmingPool Vs Delhi')\nplt.subplot(223)\nsns.distplot(delhi_dataset['Price'][delhi_dataset['LandscapedGardens']==1])\nplt.title('LandscapedGardens Vs Delhi')\nplt.subplot(224)\nsns.distplot(delhi_dataset['Price'][delhi_dataset['JoggingTrack']==1])\nplt.title('JoggingTrack Vs Delhi')\nplt.show()","79699bf1":"plt.figure(figsize=(12,10))\nplt.subplot(221)\nsns.distplot(kolkata_dataset['Price'][kolkata_dataset['Gymnasium']==1])\nplt.title('Gymnasium Vs Kolkata')\nplt.subplot(222)\nsns.distplot(kolkata_dataset['Price'][kolkata_dataset['SwimmingPool']==1])\nplt.title('SwimmingPool Vs Kolkata')\nplt.subplot(223)\nsns.distplot(kolkata_dataset['Price'][kolkata_dataset['LandscapedGardens']==1])\nplt.title('LandscapedGardens Vs Kolkata')\nplt.subplot(224)\nsns.distplot(kolkata_dataset['Price'][kolkata_dataset['JoggingTrack']==1])\nplt.title('JoggingTrack Vs Kolkata')\nplt.show()","9c1f0157":"plt.figure(figsize=(12,10))\nplt.subplot(221)\nsns.distplot(mumbai_dataset['Price'][mumbai_dataset['Gymnasium']==1])\nplt.title('Gymnasium Vs Mumbai')\nplt.subplot(222)\nsns.distplot(mumbai_dataset['Price'][mumbai_dataset['SwimmingPool']==1])\nplt.title('SwimmingPool Vs Mumbai')\nplt.subplot(223)\nsns.distplot(mumbai_dataset['Price'][mumbai_dataset['LandscapedGardens']==1])\nplt.title('LandscapedGardens Vs Mumbai')\nplt.subplot(224)\nsns.distplot(mumbai_dataset['Price'][mumbai_dataset['JoggingTrack']==1])\nplt.title('JoggingTrack Vs Mumbai')\nplt.show()","fb704f10":"bangalore_dataset.drop_duplicates(inplace=True)\ndelhi_dataset.drop_duplicates(inplace=True)\nkolkata_dataset.drop_duplicates(inplace=True)\nmumbai_dataset.drop_duplicates(inplace=True)\nbangalore_dataset.shape, delhi_dataset.shape, kolkata_dataset.shape, mumbai_dataset.shape","f3931f8e":"outlier_features = ['Area','No. of Bedrooms']\nfor feature in outlier_features:\n    IQR = bangalore_dataset[feature].quantile(0.75) - bangalore_dataset[feature].quantile(0.25)\n    lower_boundary = bangalore_dataset[feature].quantile(0.25) - (IQR*1.5)\n    upper_boundary = bangalore_dataset[feature].quantile(0.75) + (IQR*1.5)\n    bangalore_dataset.loc[bangalore_dataset[feature]<=lower_boundary, feature] = lower_boundary\n    bangalore_dataset.loc[bangalore_dataset[feature]>=upper_boundary, feature] = upper_boundary\n    \n    IQR = delhi_dataset[feature].quantile(0.75) - delhi_dataset[feature].quantile(0.25)\n    lower_boundary = delhi_dataset[feature].quantile(0.25) - (IQR*1.5)\n    upper_boundary = delhi_dataset[feature].quantile(0.75) + (IQR*1.5)\n    delhi_dataset.loc[delhi_dataset[feature]<=lower_boundary, feature] = lower_boundary\n    delhi_dataset.loc[delhi_dataset[feature]>=upper_boundary, feature] = upper_boundary\n    \n    IQR = kolkata_dataset[feature].quantile(0.75) - kolkata_dataset[feature].quantile(0.25)\n    lower_boundary = kolkata_dataset[feature].quantile(0.25) - (IQR*1.5)\n    upper_boundary = kolkata_dataset[feature].quantile(0.75) + (IQR*1.5)\n    kolkata_dataset.loc[kolkata_dataset[feature]<=lower_boundary, feature] = lower_boundary\n    kolkata_dataset.loc[kolkata_dataset[feature]>=upper_boundary, feature] = upper_boundary\n    \n    IQR = mumbai_dataset[feature].quantile(0.75) - mumbai_dataset[feature].quantile(0.25)\n    lower_boundary = mumbai_dataset[feature].quantile(0.25) - (IQR*1.5)\n    upper_boundary = mumbai_dataset[feature].quantile(0.75) + (IQR*1.5)\n    mumbai_dataset.loc[mumbai_dataset[feature]<=lower_boundary, feature] = lower_boundary\n    mumbai_dataset.loc[mumbai_dataset[feature]>=upper_boundary, feature] = upper_boundary","c10eb33f":"plt.figure(figsize=(12,12))\nplt.subplot(221)\nsns.boxplot(bangalore_dataset['Area'])\nplt.title('Outliers In Area In Bangalore Dataset')\nplt.subplot(222)\nsns.boxplot(delhi_dataset['Area'])\nplt.title('Outliers In Area In Delhi Dataset')\nplt.subplot(223)\nsns.boxplot(kolkata_dataset['Area'])\nplt.title('Outliers In Area In Kolkata Dataset')\nplt.subplot(224)\nsns.boxplot(mumbai_dataset['Area'])\nplt.title('Outliers In Area In Mumbai Dataset')\nplt.show()","3cfa085c":"plt.figure(figsize=(12,12))\nplt.subplot(221)\nsns.boxplot(bangalore_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Bangalore Dataset')\nplt.subplot(222)\nsns.boxplot(delhi_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Delhi Dataset')\nplt.subplot(223)\nsns.boxplot(kolkata_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Kolkata Dataset')\nplt.subplot(224)\nsns.boxplot(mumbai_dataset['No. of Bedrooms'])\nplt.title('Outliers In No. of Bedrooms In Mumbai Dataset')\nplt.show()","7e4c1888":"houseing_price_dataset = pd.concat([bangalore_dataset, delhi_dataset, kolkata_dataset, mumbai_dataset], axis=0)\nhouseing_price_dataset.shape","137bf336":"plt.figure(figsize=(35,35))\nsns.heatmap(houseing_price_dataset.corr(), annot=True, cmap='RdYlGn')\nplt.show()","99677b92":"features = houseing_price_dataset.drop(['Price', 'Location'], axis=1)\nlabel = houseing_price_dataset['Price']\nfeatures.shape, label.shape","22aa0eb2":"plt.figure(figsize=(12,5))\nfrom sklearn.ensemble import ExtraTreesRegressor\netr = ExtraTreesRegressor()\netr.fit(features, label)\nfeature_importance = pd.Series(etr.feature_importances_, index=features.columns)\nfeature_importance.nlargest(20).plot(kind='barh')\nplt.show()","3260194e":"houseing_price_dataset = pd.get_dummies(houseing_price_dataset)\nhouseing_price_dataset.shape","30e6fae6":"houseing_price_dataset.columns","4c219963":"features = ['MaintenanceStaff','Gymnasium','SwimmingPool','LandscapedGardens','JoggingTrack','RainWaterHarvesting',\n            'IndoorGames','ShoppingMall','Intercom','SportsFacility','ATM','ClubHouse','School','24X7Security',\n            'PowerBackup','CarParking','StaffQuarter','Cafeteria','MultipurposeRoom','Hospital','WashingMachine',\n            'AC','Wifi','BED','VaastuCompliant','Microwave','GolfCourse','TV','DiningTable',\n            'Sofa','Refrigerator']\nselected_features = houseing_price_dataset.drop(houseing_price_dataset[features], axis=1)\nfrom sklearn.model_selection import train_test_split\nfeatures_train, features_test, label_train, label_test = train_test_split(selected_features, label, test_size=0.3, random_state=40)\nfeatures_train.shape, features_test.shape, label_train.shape, label_test.shape","9c45d27e":"#Number of trees in random forest\nn_estimators = [int(x) for x in np.linspace(start=100, stop=1200, num=12)]\n\n#Number of features to consider in every split\nmax_features = ['auto', 'sqrt']\n\n#Maximum number of levels in a tree\nmax_depth = [int(x) for x in np.linspace(start=5, stop=30, num=6)]\n\n#Minimum number of samples required to split a node\nmin_samples_split = [2, 5, 10, 15, 100]\n\n#Minimum number of samples required at each leaf node\nmin_samples_leaf = [1, 2, 5, 10]","43c93bc4":"#Random Grid\nrandom_grid = {'n_estimators' : n_estimators,\n              'max_features' : max_features,\n              'max_depth' : max_depth,\n              'min_samples_split' : min_samples_split,\n              'min_samples_leaf' : min_samples_leaf}","ae50de74":"from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestRegressor\nrandom_forest = RandomForestRegressor()\nrandom_forest_model = RandomizedSearchCV(estimator=random_forest, param_distributions=random_grid, n_jobs=1, random_state=42,\n                                        cv=5, n_iter=10, verbose=2, scoring='neg_mean_squared_error')\nrandom_forest_model.fit(features_train, label_train)","25aad8e2":"label_pred = random_forest_model.predict(features_test)\nlabel_pred","d66da553":"from sklearn.metrics import r2_score\nr2_score(label_train, random_forest_model.predict(features_train))","1dd81bc6":"plt.figure(figsize=(12,5))\nsns.distplot(label_train-random_forest_model.predict(features_train))\nplt.show()","bd1e1ada":"r2_score(label_test, random_forest_model.predict(features_test))","eb9fa69c":"plt.figure(figsize=(12,5))\nsns.distplot(label_test-random_forest_model.predict(features_test))\nplt.show()","05ec38b5":"* Area and No. of Bedrooms seems to have outliers.","94f7ea09":"# Visualizing types of bedrooms in different dataset","baae9c02":"### Checking for duplicate rows ","13ada27c":"* There are so many duplicate rows present in all the 4 cities dataset which needs to be taken care.","d4fe3e76":"# Gymnasium, SwimmingPool, LandscapedGardens, PowerBackup Vs Price In Mumbai","6a3109f8":"# Feature Importance","22c4e42d":"# Visualizing outliers in the dataset","98049d7c":"### Correlation Matrix ","d1073d14":"### Merging all the 4 datasets into 1 ","3468e7f5":"### Describing the datasets to observe the outliers","11994123":"# Gymnasium, SwimmingPool, LandscapedGardens, PowerBackup Vs Price In Bangalore","b3cde388":"# Evaluating the model performance","5e38198c":"# Gymnasium, SwimmingPool, LandscapedGardens, PowerBackup Vs Price In Kolkata","7bf01dca":"* There is no null value present in all the 4 cities dataset.\n* There is only 1 categorical column and 30 int columns","0b2eed68":"### Checking for null values, count of rows and data type of the columns ","17dac510":"# Data Cleaning","20e5ffa2":"* Bangalore, Delhi and Kolkata has maximum 3 bedrooms house followed by 2 bedrooms and 4 bedrooms houses.\n* Mumbai has maximum 2 bedrooms house foloowed by 1 bedroom and 3 bedrooms houses.","d23a7de6":"# Model Building - Random Forest and Randomized Search CV","a0365607":"# Gymnasium, SwimmingPool, LandscapedGardens, PowerBackup Vs Price In Delhi","8a045694":"# Feature Engineering","96146c9a":"# Importing the dataset","bcc595d6":"* Area and No. of Bedrooms seems to have outliers.","a6eacfe8":"# Predicitng the house prices","e9ac095a":"# Visualizing distribution of area in all the datasets","041d7546":"* Area and No. of Bedrooms seems to have outliers.","a7f3b971":"# Defining parameters for hyperparameter tuning","a97292fb":"# Exploratory Data Analysis","d644fb22":"# Displaying top rows of each city dataset","73e098be":"### Handling outliers ","4440722e":"* As the Area is right skewed in all the 4 datasets, interquantile range will be used to handle the outliers.","7491e354":"### Removing duplicate rows ","cae9210e":"# Visualizing Gymnasium SwimmingPool LandscapedGardens JoggingTrack in all datasets","cd5593bc":"* Area and No. of Bedrooms seems to have outliers.","5c4c2918":"# Splitting data into train and test","a917dac8":"* Correlation matrix shows Area, No. of Bedrooms, Resale, LiftAvailable, Gasconnection, Wardrobe are importance have good correlation with label and are important features.","ad332b78":"# No of records in each city dataset "}}