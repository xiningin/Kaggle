{"cell_type":{"ebf8f8bc":"code","4d1cc287":"code","23837e7a":"code","9a3a8db1":"code","5130b5a4":"code","6299c249":"code","03b41354":"code","22228600":"code","80292c5b":"code","58efa6c7":"code","d7b5e679":"code","7a4ae0ac":"code","bc3dd68f":"code","93093474":"code","8b6df776":"code","b60afe33":"code","688697a2":"code","9a292b43":"code","63309d8a":"code","899c8d7a":"code","1f65d256":"code","310e1bd5":"code","a6da78a0":"code","9077759f":"code","b67f75eb":"code","1a18a321":"code","60fa77fb":"code","d3f7af19":"code","9eb6ab45":"code","f74993c7":"code","082ca70c":"code","3fe7a5bb":"code","40a207cf":"code","d146be91":"code","69ee3ce5":"code","8bdda63b":"code","c9a6b6d4":"code","a25fa942":"code","ee9b9a54":"code","1b20eb0c":"code","f4fb1431":"code","e237a214":"code","90d2f22f":"code","f0ea730c":"code","cd2fd1da":"code","f9f858dc":"code","e39f8fe3":"code","0f2226ce":"code","1a57d4b0":"code","d08967eb":"code","4aafeeb2":"code","cc2f0ce9":"code","4dbc1b28":"code","e0fc1dd9":"code","5803fbab":"code","479e6145":"code","dad7e46a":"code","3d6d0fc5":"code","aef53139":"code","c8e60c48":"code","6b1a15ae":"code","e3120132":"code","42d68302":"code","1b2341ac":"code","b44e8c68":"code","def0781f":"code","7d4bed4d":"code","83a0b013":"code","c9972944":"code","39d9f1fc":"code","5dae7e9f":"code","e0c77516":"code","71ce1ee2":"code","02cdb664":"code","ef7af07c":"code","f8b17a7d":"code","f122727c":"code","10852879":"code","816e53f3":"code","8635c76d":"code","2ab13e8e":"code","819199b4":"code","7dacb6b6":"code","3eff2ba8":"code","309cef16":"code","696ace25":"code","512a906c":"markdown","1218c997":"markdown","e19b450f":"markdown","ed89d4de":"markdown","5acdf2b7":"markdown","509d1b2e":"markdown","84839c69":"markdown","1a9b032c":"markdown","a8e53e24":"markdown","c796fd2c":"markdown","507580f1":"markdown","d20f6b54":"markdown","852e0fe0":"markdown","e83eb3e9":"markdown","b58bf6e1":"markdown","a49b5956":"markdown","87019d21":"markdown","20c8b0ff":"markdown","1269a315":"markdown","2999e1a4":"markdown","ff37586d":"markdown","4a56ced9":"markdown","41168754":"markdown","0a0eac85":"markdown","c5ea2fbf":"markdown","e0b0dfc1":"markdown","a282f1dd":"markdown","f5bba75c":"markdown","aa4759c0":"markdown","fdb1eeb6":"markdown","4dcbc619":"markdown","69f5422f":"markdown","52783c6d":"markdown"},"source":{"ebf8f8bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d1cc287":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","23837e7a":"data=pd.read_csv('..\/input\/titanic\/train.csv')\ndata","9a3a8db1":"data.info()","5130b5a4":"data.describe()","6299c249":"data.isnull().sum()","03b41354":"data.corr()","22228600":"sns.heatmap(data.corr())","80292c5b":"sns.heatmap(data.corr(),annot=True , fmt='.0%')","58efa6c7":"data[\"Survived\"].value_counts() #38% of the passenger survived","d7b5e679":"data_male=data[data[\"Sex\"]==\"male\"]\ndata_male","7a4ae0ac":"data_female=data[data[\"Sex\"]==\"female\"]\ndata_female","bc3dd68f":"data_male[\"Survived\"].value_counts() #only 18% out of 577 men survived","93093474":"data_female[\"Survived\"].value_counts() #74% out of 314 women survived","8b6df776":"data_firstclass=data[data[\"Pclass\"]==1]\ndata_firstclass","b60afe33":"data_secondclass=data[data[\"Pclass\"]==2]\ndata_secondclass","688697a2":"data_thirdclass=data[data[\"Pclass\"]==3]\ndata_thirdclass","9a292b43":"data_firstclass[\"Survived\"].value_counts() #62.9% survived","63309d8a":"data_secondclass[\"Survived\"].value_counts() #47.3% survived","899c8d7a":"data_thirdclass[\"Survived\"].value_counts() #24.23% survived","1f65d256":"pd.pivot_table(data, index = 'Survived', values = ['Age','SibSp','Parch','Fare'])","310e1bd5":"for i in [\"Age\",\"Fare\",\"SibSp\",\"Parch\"] :\n    plt.hist(data[i])\n    plt.title(i)\n    plt.show()","a6da78a0":"for i in ['Survived','Pclass','Sex','Ticket','Cabin','Embarked']:\n    sns.barplot(data[i].value_counts().index,data[i].value_counts()).set_title(i)\n    plt.show()","9077759f":"print(pd.pivot_table(data, index = 'Survived', columns = 'Pclass', values = 'Ticket' ,aggfunc ='count'))\nprint()\nprint(pd.pivot_table(data, index = 'Survived', columns = 'Sex', values = 'Ticket' ,aggfunc ='count'))\nprint()\nprint(pd.pivot_table(data, index = 'Survived', columns = 'Embarked', values = 'Ticket' ,aggfunc ='count'))","b67f75eb":"sns.barplot(x='Pclass', y='Survived', data=data, hue=\"Sex\")","1a18a321":"sns.barplot(x='Parch', y='Survived', data=data, hue=\"Sex\")","60fa77fb":"sns.barplot(x='Embarked', y='Survived', data=data, hue=\"Sex\")","d3f7af19":"data[\"Age\"]=data[\"Age\"].fillna(data[\"Age\"].median())","9eb6ab45":"data.isnull().sum()","f74993c7":"data","082ca70c":"from numpy import set_printoptions\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2","3fe7a5bb":"X=data.iloc[:,2:]\nY=data.iloc[:,1]","40a207cf":"X","d146be91":"Y","69ee3ce5":"X=X.drop(['Name'],axis=1)\nX","8bdda63b":"from sklearn import preprocessing\nlabel_encoder = preprocessing.LabelEncoder()","c9a6b6d4":"X.dtypes","a25fa942":"X['Sex']=X['Sex'].astype('object')\nX.dtypes","ee9b9a54":"X.isnull().sum()","1b20eb0c":"X['Embarked'].fillna('S', inplace=True)","f4fb1431":"X.isnull().sum()","e237a214":"X=X.drop(['Cabin'],axis=1)\nX","90d2f22f":"X=X.drop(['Ticket'],axis=1)\nX","f0ea730c":"X['Embarked']=label_encoder.fit_transform(X['Embarked'])\nX","cd2fd1da":"X['Sex']=label_encoder.fit_transform(X['Sex'])\nX","f9f858dc":"test = SelectKBest(score_func=chi2, k=4)\nfit = test.fit(X, Y)","e39f8fe3":"set_printoptions(precision=3)\nprint(fit.scores_)\nfeatures = fit.transform(X)","0f2226ce":"X=X.drop(['Fare'],axis=1)\nX","1a57d4b0":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.33, random_state=42)","d08967eb":"X_train, X_test, y_train, y_test","4aafeeb2":"from sklearn.ensemble import RandomForestClassifier\n\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, y_train)\n\npreditcion = random_forest.predict(X_test)\n\nrandom_forest.score(X_train, y_train)\nacc_random_forest = round(random_forest.score(X_train, y_train) * 100, 2)","cc2f0ce9":"acc_random_forest ","4dbc1b28":"preditcion","e0fc1dd9":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest","5803fbab":"#Pclass\tSex\tAge\tSibSp\tParch\tFare","479e6145":"for i in [\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\",\"Fare\"]:\n    test=test.drop([i],axis=1)","dad7e46a":"test","3d6d0fc5":"test.isnull().sum()","aef53139":"test['Age']=test['Age'].fillna(test[\"Age\"].median())","c8e60c48":"test.isnull().sum()","6b1a15ae":"test[\"Sex\"]=label_encoder.fit_transform(test[\"Sex\"])\ntest","e3120132":"test.dtypes","42d68302":"test[\"Embarked\"]=label_encoder.fit_transform(test[\"Embarked\"])\ntest","1b2341ac":"predict=random_forest.predict(test)","b44e8c68":"predict","def0781f":"new_data=pd.read_csv('..\/input\/titanic\/test.csv')","7d4bed4d":"new_data","83a0b013":"new_data[\"Survived\"]=predict","c9972944":"new_data","39d9f1fc":"new_data=new_data.replace({'Survived': {0: 'Survived', 1: 'Dead'}})","5dae7e9f":"new_data","e0c77516":"sns.barplot(y='Age', x='Survived', data=new_data, hue=\"Sex\")","71ce1ee2":"data_Custom= {'Pclass':[1,1,2,3,1,2,1],\n        'Name':['Himanshu Jagga', 'Jatin Allawadi', 'Shunbham Yadav', 'Harmanjot Singh','Mrigank','Kashish Anand','Jayant Pandey'],\n        'Sex':['Male','Female','Male','Male','Male','Male','Male'],\n        'Age':[5, 6, 19, 18,32,25,16],\n        'Sibsp':[1,0,0,2,1,0,0],\n        'Parch':[0,1,1,0,0,1,1],\n        'Embarked':['S','S','S','S','S','S','S']}\n        ","02cdb664":"data_Custom","ef7af07c":"import pandas as pd\ndata_custom=pd.DataFrame(data_Custom)\ndata_custom","f8b17a7d":"df=data_custom.copy()\ndf","f122727c":"df=df.drop(['Name'],axis=1)","10852879":"df.dtypes","816e53f3":"for i in ['Sex','Embarked']:\n    df[i]=label_encoder.fit_transform(df[i])","8635c76d":"df","2ab13e8e":"predict=random_forest.predict(df)","819199b4":"predict","7dacb6b6":"data_custom['Suvived']=predict","3eff2ba8":"data_custom","309cef16":"data_custom=data_custom.replace({'Suvived': {0: 'Survived', 1: 'Dead'}})","696ace25":"data_custom","512a906c":"## 7. Visualizing the new predicted Dataset","1218c997":"## 3.2 Model Building","e19b450f":"### The Passengers with First Class Tickets are more likely to Survive than any other class","ed89d4de":"### Predict the Survival","5acdf2b7":"## 1.4.1 Barplots for Object type Data","509d1b2e":"#### We can see the percentage of surviving a female is more than male","84839c69":"## 5. EDA","1a9b032c":"## 1.1 Load Data","a8e53e24":"## 1.2 Separate the data by sex and visualize","c796fd2c":"## 1.4.2 Differet PivotPlot Scenerio","507580f1":"## 2. Feature Selection","d20f6b54":"### The null values in the data column Cabin is very high so its better to drop it from the X input Varible Dataset","852e0fe0":"# Objective\nThe sinking of the Titanic is one of the most infamous shipwrecks in history.\n\nOn April 15, 1912, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren\u2019t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.\n\nWhile there was some element of luck involved in surviving, it seems some groups of people were more likely to survive than others.\n\nWe will try to build a predictive model that answers the question: \u201cwhat sorts of people were more likely to survive?\u201d using passenger data (ie name, age, gender, socio-economic class, etc).","e83eb3e9":"### We have to change the data types in accordance to our model needs","b58bf6e1":"### The Ticket Column is only showing the Ticket numbers that most probably be unique numbers, but its not going to contribute our model","a49b5956":"## 6.1 The Predicted Values","87019d21":"## 4.1 Removing the unimportant input variable columns","20c8b0ff":"## 1.4 Plotting The Histogram for value datas and see what frequency insights we have","1269a315":"### 2.2 Label Encoding","2999e1a4":"## 2.1 Setting the input and output variables","ff37586d":"## 4. Importing the datasets for predicting the output from the above model","4a56ced9":"## 3.1 Test And Train Split for Model Building","41168754":"## 1.2.1 Lets Separate The Data with respect to their Class of Ticket and visualize te data","0a0eac85":"### As we can see from the above result the colmn Fare is not much contributing so we can certainly neglect theat input variable column ","c5ea2fbf":"## 6.2 Attaching the predicted values with the dataset","e0b0dfc1":"## 6. Predicting the values","a282f1dd":"## 1. Importing Libraries","f5bba75c":"## 1.3 Lets Visualize how the factors are going to affect the survival numbers for passegers","aa4759c0":"## The name Column is not going to contribute to the model","fdb1eeb6":"## 1.4.3 Different BarPlots","4dcbc619":"## 3.2.1 Getting the Accuracy","69f5422f":"## 2.2.1 Building Model to Check wether there is any input column variable which we can neglect to build model in order to get most prominent Model Insights","52783c6d":"### 8. Custom Data Frame Entries"}}