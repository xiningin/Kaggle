{"cell_type":{"7fc560e8":"code","b43a997c":"code","9323f25d":"code","20b3dc35":"code","036464f3":"code","c6d8edca":"code","9467d20e":"code","3a2eda96":"code","52095bb8":"code","8fb8cc60":"code","4c66619c":"code","416a3aba":"code","014865b2":"code","31e5d1b4":"code","b75a9006":"code","b7bc8ab0":"code","8792cf54":"code","5de04e4b":"code","78b4838c":"code","9ab96bab":"code","72ecea85":"code","e177dd82":"code","596255f4":"code","e9ed0d6d":"code","b8ce8d8d":"code","18a75c41":"code","87cc6168":"code","5144e46b":"code","845769b8":"code","0726b1f9":"code","0a3e80d0":"code","27cbc871":"code","dca9e465":"code","620056b9":"code","271f4440":"code","b230a820":"code","cd4f9861":"code","5f5865d2":"code","efa7eff0":"code","87a121b0":"code","812dc8c5":"code","7e4dcec7":"code","8e807b16":"code","fcbf22c6":"code","94370a01":"code","62a7caf1":"code","16131181":"markdown","25a06689":"markdown","5357f5c9":"markdown","da8ea776":"markdown","df891988":"markdown","0159c7e3":"markdown","49ca2f47":"markdown","a005c94e":"markdown","5f63d4bd":"markdown","9156d325":"markdown","2cf2ee80":"markdown","c3fbb73e":"markdown","0631c912":"markdown","3ed9446a":"markdown"},"source":{"7fc560e8":"# Import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nimport cufflinks\ncufflinks.go_offline(connected=True)\ninit_notebook_mode(connected=True)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Disable warnings \nimport warnings\nwarnings.filterwarnings('ignore')","b43a997c":"# import data set\ndf = pd.read_csv(\"..\/input\/distribution-of-covid19-cases-worldwide\/covid_19.csv\",encoding='ISO-8859-1')","9323f25d":"# Look at dimension of data set and types of each attribute\ndf.info()","20b3dc35":"# Summarize attribute distributions of the data frame\ndf.describe(include='all')","036464f3":"# Take a peek at the first rows of the data\ndf.head(10)","c6d8edca":"# Drop columns not used\ndf_new = df.drop(['day','month','year'], axis=1)","9467d20e":"# Rename some features for a practical use\ndf_new = df_new.rename(columns={\"dateRep\":\"date\",\"countriesAndTerritories\":\"country\",\"popData2018\":\"pop\",\n                                \"continentExp\":\"continent\",\"countryterritoryCode\":\"ccode\"}) ","3a2eda96":"# format date\ndf_new['date'] = pd.to_datetime(df_new['date'], format='%d\/%m\/%Y')","52095bb8":"# peek a sample\ndf_new.sample(10)","8fb8cc60":"# groupby country\ndf_country = df_new.groupby(['country','pop','continent','ccode'], as_index=False)['cases', 'deaths'].sum()","4c66619c":"# dropping not matching countries\ndf_country = df_country.dropna()","416a3aba":"# new columns: population in million, cases x population and deaths x population\ndf_= df_country.copy()\ndf_['pop(ml)'] = round((df_['pop']\/10**6),2)\ndf_['cases x pop(ml)'] = round((df_['cases']\/df_['pop(ml)']),2)\ndf_['deaths x pop(ml)'] = round((df_['deaths']\/df_['pop(ml)']),2)","014865b2":"df_.sample(5)","31e5d1b4":"# select countries with population > 1 million\ndf_ = df_[(df_['pop(ml)'] > 1)]","b75a9006":"# ranking countries with cases x population\ndf_c = df_.sort_values(['cases x pop(ml)'], ascending = False).reset_index(drop=True)\nprint('Top 15 countries with the most cases per population (ml)')\ndf_c.drop(columns = ['deaths', 'deaths x pop(ml)','pop','continent','ccode']).head(15).style.background_gradient(cmap='cool')\n","b7bc8ab0":"# ranking countries with deaths per population\ndf_d = df_.sort_values(['deaths x pop(ml)'], ascending = False).reset_index(drop=True)\nprint('Top 15 countries with the most deaths per population (ml)')\ndf_d.drop(columns = ['cases', 'cases x pop(ml)','pop','continent','ccode']).head(15).style.background_gradient(cmap='Reds')","8792cf54":"# groupby continent\ndf_continent = df_new.groupby(['continent'], as_index=False)['cases', 'deaths','pop'].sum()","5de04e4b":"# dropping NA rows\ndf_continent = df_continent.dropna()","78b4838c":"# new columns: population in million, cases x population and deaths x population\ndf_cont= df_continent.copy()\ndf_cont['pop(ml)'] = round((df_cont['pop']\/10**6),2)\ndf_cont['cases x pop(ml)'] = round((df_cont['cases']\/df_cont['pop(ml)']),2)\ndf_cont['deaths x pop(ml)'] = round((df_cont['deaths']\/df_cont['pop(ml)']),2)","9ab96bab":"# select countries with population > 1 million\ndf_cont = df_cont[(df_cont['pop(ml)'] > 1)]","72ecea85":"# ranking continent with cases x population\ndf_ca = df_cont.sort_values(['cases x pop(ml)'], ascending = False).reset_index(drop=True)\nprint('Continent ranking with the most cases per population (ml)')\ndf_ca.drop(columns = ['deaths', 'deaths x pop(ml)','pop']).style.background_gradient(cmap='summer')","e177dd82":"# ranking continent with deaths per population\ndf_de = df_cont.sort_values(['deaths x pop(ml)'], ascending = False).reset_index(drop=True)\nprint('Continent ranking with the most deaths per population (ml)')\ndf_de.drop(columns = ['cases', 'cases x pop(ml)','pop']).style.background_gradient(cmap='winter')","596255f4":"fig = px.choropleth(df_c, locations=\"ccode\",\n                    color=\"cases x pop(ml)\",\n                    hover_name=\"country\",\n                    color_continuous_scale=px.colors.sequential.Plotly3)\n\nlayout = go.Layout(\n    title=go.layout.Title(\n        text=\"Covid-19 cases per population (million)\",\n        x=0.5\n    ),\n    font=dict(size=14),\n    width = 750,\n    height = 350,\n    margin=dict(l=0,r=0,b=0,t=30)\n)\n\nfig.update_layout(layout)\n\nfig.show()","e9ed0d6d":"fig = px.choropleth(df_d, locations=\"ccode\",\n                    color=\"deaths x pop(ml)\",\n                    hover_name=\"country\",\n                    color_continuous_scale=px.colors.sequential.Agsunset)\n\nlayout = go.Layout(\n    title=go.layout.Title(\n        text=\"Covid-19 deaths per population (million)\",\n        x=0.5\n    ),\n    font=dict(size=14),\n    width = 750,\n    height = 350,\n    margin=dict(l=0,r=0,b=0,t=30)\n)\n\nfig.update_layout(layout)\n\nfig.show()","b8ce8d8d":"# groupby country and date\nts_country = df_new.groupby(['country','date'], as_index=False)['cases','deaths'].sum()","18a75c41":"# dropping NA rows\nts_country = ts_country.dropna()","87cc6168":"ts_country.sample(5)","5144e46b":"# create pivot table for cases\ncovid_c = ts_country.pivot(index='date', columns='country', values='cases')","845769b8":"# select countries to visualize time series\ncovid_cases = covid_c[['Italy','Spain','United_Kingdom','Germany','France','United_States_of_America','Belgium',\n                       'Switzerland','Netherlands','Sweden']]","0726b1f9":"# cumulative time series \ncovid_cases.sort_index().cumsum().iplot(title = 'Time series of cumulative cases per country')","0a3e80d0":"# time series per day\ncovid_cases.iplot(title = 'Time series of cases per day and per country')","27cbc871":"# create pivot table for deaths\ncovid_d = ts_country.pivot(index='date', columns='country', values='deaths')","dca9e465":"# select countries to visualize time series\ncovid_deaths = covid_d[['Italy','Spain','United_Kingdom','Germany','France','United_States_of_America','Belgium',\n                        'Switzerland', 'Netherlands','Sweden']]","620056b9":"# cumulative time series\ncovid_deaths.sort_index().cumsum().iplot(title = 'Time series of cumulative deaths per country')","271f4440":"# time series per day\ncovid_deaths.iplot(title = 'Time series of deaths per day and per country')","b230a820":"# groupby continent and date\nts_continent = df_new.groupby(['continent','date'], as_index=False)['cases','deaths'].sum()","cd4f9861":"# dropping NA rows\nts_continent = ts_continent.dropna()","5f5865d2":"ts_continent.sample(10)","efa7eff0":"# create pivot table for cases\ncovid_C = ts_continent.pivot(index='date', columns='continent', values='cases')","87a121b0":"# select countries to visualize time series\ncovid_C_cases = covid_C[['Africa','America','Asia','Europe','Oceania']]","812dc8c5":"# cumulative time series \ncovid_C_cases.sort_index().cumsum().iplot(title = 'Time series of cumulative cases per continent')","7e4dcec7":"# time series per day\ncovid_C_cases.iplot(title = 'Time series of cases per day and per continent')","8e807b16":"# create pivot table for deaths\ncovid_C_deaths = ts_continent.pivot(index='date', columns='continent', values='deaths')","fcbf22c6":"# select countries to visualize time series\ncovid_D = covid_C_deaths[['Africa','America','Asia','Europe','Oceania']]","94370a01":"# cumulative time series\ncovid_D.sort_index().cumsum().iplot(title = 'Time series of cumulative deaths per continent')","62a7caf1":"# time series per day\ncovid_D.iplot(title = 'Time series of deaths per day and per continent')","16131181":"### Grouping data per country","25a06689":"### Summarize data","5357f5c9":"### Grouping data per country and date","da8ea776":"### Handling variables","df891988":"### Prepare Workspace","0159c7e3":"### Top countries with the most cases and deaths per population","49ca2f47":"To visualize the distribution in the world has been used Choropleth Maps by plotly graph_objects","a005c94e":"### Continent ranking by cases and deaths per population","5f63d4bd":"To visualize the time series I've grouped data per country and date and then I've realized a pivot table to have the right format for the time series","9156d325":"### Distribution of cases and deaths in the world","2cf2ee80":"# Distribution of COVID-19 cases worldwide analysis","c3fbb73e":"![](https:\/\/d.newsweek.com\/en\/full\/1571542\/coronavirus-covid19-virus-stock-getty.jpg)","0631c912":"I've used a data set provided by the European Union updated on 2 May 2020.\nData are availabe at this link: https:\/\/www.ecdc.europa.eu\/en\/publications-data\/download-todays-data-geographic-distribution-covid-19-cases-worldwide\nThe file is updated daily and contains the latest available public data on COVID-19. \nEach row\/entry contains the number of new cases and deaths reported per day and per country\n\ndateRep: date of reporting  \nmonth: month of reporting                     \nday: day of reporting\nyear: year of reporting                      \ncases: number of confirmed cases                     \ndeaths: number of deaths                     \ncountriesAndTerritories: name of State   \ngeoId: ISO country code with 2 characters                     \ncountryterritoryCode: ISO country code with 3 characters      \npopData2018: population for each country updated at 2018               \ncontinentExp: name of Continent\n\nThe goal is to have an overview of this pandemic virus on how is distribuited around the world. ","3ed9446a":"### Grouping data per continent"}}