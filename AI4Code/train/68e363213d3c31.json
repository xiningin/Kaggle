{"cell_type":{"2a1edeb2":"code","54f4caf7":"code","65ac4b8e":"code","5a3c5709":"code","476e45cc":"code","739760eb":"code","fd572aa0":"code","46d6d62b":"code","4949d7b0":"code","4685b138":"code","a58bfd72":"code","71c4f218":"code","f118c36c":"code","3c897dbb":"code","661fda02":"code","f5afea94":"code","8f305f56":"code","6b65b7b3":"code","92ee24ad":"code","f801b487":"code","19078da0":"code","fe989c16":"code","b439abbe":"code","761bfd86":"code","efb83a20":"code","76369452":"code","7f39ff1f":"code","9488131f":"code","68b7768e":"code","c28ef987":"code","16e12c68":"code","587e9719":"code","9d4836de":"code","912f2760":"code","5956d46a":"code","10420268":"code","c5bdc4e4":"code","76803200":"code","ab71e28b":"code","4d0e0d8b":"code","867033aa":"code","a6db12c7":"code","74fce6ce":"code","c4221aa6":"markdown","eff74ca8":"markdown","1dc8b99c":"markdown","354b1276":"markdown"},"source":{"2a1edeb2":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","54f4caf7":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import ElasticNetCV\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import r2_score, classification_report","65ac4b8e":"dataset = pd.read_csv('\/kaggle\/input\/housesalesprediction\/kc_house_data.csv')","5a3c5709":"dataset.head()","476e45cc":"dataset.info()","739760eb":"dataset.describe()","fd572aa0":"dataset.isnull().sum()","46d6d62b":"plt.figure(figsize=(15,12))\nsns.heatmap(data=dataset.drop(['id', 'date', 'price'], axis=1).corr(), annot=True, mask=np.triu(dataset.drop(['id', 'date', 'price'], axis=1).corr()))","4949d7b0":"plt.figure(figsize=(15,12))\nsns.displot(dataset.price, kde=True)","4685b138":"len(dataset)*0.01\n# 1% outliers","a58bfd72":"dataset = dataset.sort_values(['price'], ascending=False).iloc[216:]\ndataset = dataset.drop(columns=['id'], axis=1)","71c4f218":"plt.figure(figsize=(15,12))\nsns.displot(dataset.price, kde=True)","f118c36c":"a = dataset.corr()['price']","3c897dbb":"corr_data = pd.DataFrame(a).reset_index()\ncorr_data.columns = ['Features', 'Correlation_with_price']","661fda02":"corr_data = corr_data.sort_values('Correlation_with_price')","f5afea94":"list(corr_data[corr_data['Correlation_with_price']>0.2].Features)","8f305f56":"X = dataset[['floors',\n 'sqft_basement',\n 'bedrooms',\n 'view',\n 'lat',\n 'bathrooms',\n 'sqft_above',\n 'sqft_living15',\n 'sqft_living',\n 'grade']]","6b65b7b3":"y = dataset[['price']]","92ee24ad":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","f801b487":"linear_model = LinearRegression()","19078da0":"linear_model.fit(X_train, y_train)","fe989c16":"r2_score(y_test, linear_model.predict(X_test))","b439abbe":"X = dataset.drop(['date', 'price'], axis=1)","761bfd86":"y = dataset['price']","efb83a20":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","76369452":"linear_model = LinearRegression()","7f39ff1f":"linear_model.fit(X_train, y_train)","9488131f":"r2_score(y_test, linear_model.predict(X_test))","68b7768e":"plt.scatter(y_test, linear_model.predict(X_test), color=\"b\")\nplt.plot(y_test,y_test, color=\"r\")","c28ef987":"poly_converter = PolynomialFeatures(degree = 2, include_bias=False)","16e12c68":"poly_features = poly_converter.fit_transform(X)","587e9719":"X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.2, random_state=42)","9d4836de":"poly_model = LinearRegression()","912f2760":"poly_model.fit(X_train, y_train)","5956d46a":"poly_test_predictions = poly_model.predict(X_test)","10420268":"r2_score(y_test, poly_test_predictions)","c5bdc4e4":"plt.scatter(y_test,poly_test_predictions, color=\"b\")\nplt.plot(y_test,y_test, color=\"r\")","76803200":"X = dataset.drop(['date', 'price'], axis=1)\nX","ab71e28b":"y = dataset.price","4d0e0d8b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","867033aa":"r_dt = DecisionTreeRegressor(random_state=0)\nr_dt.fit(X_train, y_train)","a6db12c7":"r_dt.feature_importances_","74fce6ce":"r2_score(y_test, r_dt.predict(X_test))","c4221aa6":"## Linear Regression with all Features","eff74ca8":"## Decision Tree","1dc8b99c":"## Linear Regression with Correlation Feature Selection","354b1276":"## Polynomial Regression"}}