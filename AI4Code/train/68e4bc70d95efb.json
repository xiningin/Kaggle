{"cell_type":{"6ad693fe":"code","613986be":"code","578eb6c7":"code","05483b64":"code","e01644aa":"code","71863c3a":"code","067d0359":"code","ab71e4ef":"code","c5520995":"code","ff102749":"code","085bd57f":"code","51148243":"code","a5c52d59":"code","2879418e":"code","2c176cfb":"code","9bef21c2":"code","ac57a656":"code","6cdd51c3":"code","a7fcde86":"code","5c106d4f":"code","50854a22":"code","9c16ff79":"markdown","8b2af58f":"markdown","ddf9dedf":"markdown","c737afe1":"markdown","a08b3aba":"markdown"},"source":{"6ad693fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","613986be":"df = pd.read_csv('..\/input\/rice-dataset-gonenjasmine\/Rice-Gonen andJasmine.csv')","578eb6c7":"df.head()","05483b64":"print(df.info())\nprint('=='*50)\nprint(df.shape)","e01644aa":"df['Class'].value_counts()","71863c3a":"class_map = {'jasmine':1,'Gonen':0}\ndf['Class'] = df['Class'].map(class_map)","067d0359":"df.head()","ab71e4ef":"import seaborn as sns\nimport matplotlib.pyplot as plt","c5520995":"features = ['Area','MajorAxisLength','MinorAxisLength','Eccentricity','ConvexArea',\n            'EquivDiameter','Extent','Perimeter','Roundness','AspectRation']\nfor graph in features:\n    sns.scatterplot(data = df,x=np.arange(0,df[graph].shape[0]),y=df[graph],hue=df['Class'])\n    plt.xlabel(graph)\n    plt.show()","ff102749":"for hist in features:\n    sns.distplot(df[hist])\n    plt.xlabel(hist)\n    plt.show()","085bd57f":"from sklearn.preprocessing import StandardScaler\nscale = StandardScaler()","51148243":"def box(arr):\n    q1 = arr.quantile(0.25)\n    q3 = arr.quantile(0.75)\n    \u0131qr = q3-q1\n    mini = q1-(1.5*\u0131qr)\n    maxi = q3+(1.5*\u0131qr)\n    arr = arr[(arr>mini)&(arr<maxi)]\n    \ndef standart(arr):\n    plus = arr.mean()+3*arr.std()\n    minus = arr.mean()-3*arr.std()\n    arr = arr[(arr>minus)&(arr<plus)]","a5c52d59":"box(df['AspectRation'])\nbox(df['Roundness'])\nstandart(df['Perimeter'])\nstandart(df['Extent'])\nbox(df['EquivDiameter'])\nbox(df['ConvexArea'])\nbox(df['Eccentricity'])\nbox(df['MinorAxisLength'])\nstandart(df['MajorAxisLength'])","2879418e":"df.head()","2c176cfb":"df['TotalAxisLength'] = df['MajorAxisLength']+df['MinorAxisLength']","9bef21c2":"df.corr()","ac57a656":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom xgboost import XGBClassifier\nimport sklearn.neural_network as nn\nfrom sklearn.metrics import accuracy_score","6cdd51c3":"y = df['Class']\nX = df.drop('Class',axis=1)","a7fcde86":"X_train,X_test,y_train,y_test = train_test_split(X,y,random_state = 0,test_size = 0.2)","5c106d4f":"rf = RandomForestClassifier()\nrf_model = rf.fit(X_train,y_train)\ny_pred = rf_model.predict(X_test)","50854a22":"accuracy_score(y_pred,y_test)","9c16ff79":"# Data Visualization ","8b2af58f":"# Distribution of variables","ddf9dedf":"# Encoding","c737afe1":"# Outlier Values","a08b3aba":"# Model Selection"}}