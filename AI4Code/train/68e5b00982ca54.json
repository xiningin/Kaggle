{"cell_type":{"330fa528":"code","a64214a9":"code","4e3df233":"code","6c75ad1e":"code","5597392a":"code","fd713730":"code","f4ff0db9":"code","eb5cd535":"code","5bfc991f":"code","31254a4e":"code","98568052":"code","72b9c39d":"code","0b434436":"code","16936131":"code","0e928031":"code","3c1bb087":"code","3297b5e4":"code","417dc963":"code","70a7f631":"code","4e255db5":"code","8a6d1194":"code","15e640a2":"code","74cec00b":"code","fd38b69d":"code","d1f28e96":"code","f48f1578":"code","71b8de58":"code","36651bcc":"code","ed7f4a76":"code","cc83f05a":"code","29bdbd5c":"code","a05bda2b":"code","8fa90f90":"code","e95476e2":"code","cb39a0f1":"code","3df62698":"code","0486c1b1":"code","52d3942f":"code","8d013ad9":"code","3a1944ac":"code","6c0b5e8c":"code","035cb63d":"code","ff811157":"code","85ae89f2":"code","1e1553da":"code","966910f7":"code","60d13a57":"markdown","9ea18282":"markdown","5a621248":"markdown","0efc1b1a":"markdown","a03600c4":"markdown","ac89e2ed":"markdown","f171db5e":"markdown","a5a20b24":"markdown","3a44cf7a":"markdown","bccf58ea":"markdown","dccf3079":"markdown","fc034e7f":"markdown","b3581889":"markdown","cffa916b":"markdown","392ad1c6":"markdown","29eb65a2":"markdown","744db127":"markdown","f56e1a40":"markdown","3954e178":"markdown","c0c8229f":"markdown","c0bdb43a":"markdown","10fa5132":"markdown","ae32a91f":"markdown","bb262d61":"markdown","cae7cda1":"markdown","a21c0855":"markdown","fcdc60f0":"markdown"},"source":{"330fa528":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom math import pi","a64214a9":"data = pd.read_csv('..\/input\/efootball-pes-2020-all-players-csv\/deets-updated.csv')","4e3df233":"data.head()","6c75ad1e":"for col in data.columns:\n    if data[col].isnull().sum()>0:\n        print(col,data[col].isnull().sum())","5597392a":"data.shape","fd713730":"data.describe()","f4ff0db9":"data.rename(columns={'registered_position':'position','team_name':'club'},inplace=True)","eb5cd535":"#deleting duplicate rows\n\ndata.drop_duplicates(inplace=True)","5bfc991f":"col = ['name', 'club', 'league', 'nationality', 'region','height','weight','age','foot',\n       'position','offensive_awareness','ball_control','dribbling','tight_possession','low_pass','lofted_pass',\n      'finishing','heading','place_kicking','curl','speed','acceleration','kicking_power','jump','physical_contact','balance',\n      'stamina','defensive_awareness','ball_winning','aggression','gk_awareness','gk_catching','gk_clearing','gk_reflexes',\n      'gk_reach','weak_foot_usage','weak_foot_accuracy','form','injury_resistance','overall_rating','playing_style',\n       'rating_stars']","31254a4e":"len(col)","98568052":"r_data = data[col]\nr_data.head()","72b9c39d":"def club_name(name):\n    return r_data[r_data['club']==name][['name','nationality','position','foot','age',\n                                             'overall_rating','rating_stars']].sort_values('overall_rating',ascending=False)\nclub_name('MANCHESTER UNITED')\n","0b434436":"for col in r_data.columns:\n    if r_data[col].isnull().sum()>0:\n        print(col,r_data[col].isnull().sum())","16936131":"print(r_data.columns)","0e928031":"def technique(r_data):\n    return int(round((r_data[['ball_control','dribbling','heading','curl','balance','tight_possession']].mean()).mean()))\n\ndef passing(r_data):\n    return int(round((r_data[['lofted_pass','low_pass']].mean()).mean()))\n\ndef mobility(r_data):\n    return int(round((r_data[['speed','acceleration','stamina']].mean()).mean()))\n\n\ndef attacking(r_data):\n    return int(round((r_data[['offensive_awareness','finishing','kicking_power']].mean()).mean()))\n\ndef defence(r_data):\n    return int(round((r_data[['jump','physical_contact','defensive_awareness']].mean()).mean()))\n\ndef goal_kepping(r_data):\n    return int(round((r_data[['gk_awareness','gk_catching','gk_clearing','gk_reflexes','gk_reach','place_kicking']].mean()).mean()))\n\ndef weak_foot(r_data):\n    return int(round((r_data[['weak_foot_usage','weak_foot_accuracy']].mean()).mean()))\n","3c1bb087":"r_data['technique'] = r_data.apply(technique,axis=1)\nr_data['passing'] = r_data.apply(passing,axis=1)\nr_data['mobility'] = r_data.apply(mobility,axis=1)\nr_data['attacking'] = r_data.apply(attacking,axis=1)\nr_data['defence'] = r_data.apply(defence,axis=1)\nr_data['goal_kepping'] = r_data.apply(goal_kepping,axis=1)\nr_data['weak_foot'] = r_data.apply(weak_foot,axis=1)\n","3297b5e4":"player = r_data[['name', 'club', 'league', 'nationality', 'region','age','foot',\n       'position','technique','passing','mobility','attacking','defence','goal_kepping','weak_foot',\n        'form','injury_resistance','overall_rating','playing_style','rating_stars']]","417dc963":"player.head()","70a7f631":"\nplt.rcParams['figure.figsize']=(10,5)\nsns.countplot(x='region',hue='foot',data = r_data,palette='deep')\nplt.title('Footballers from different region and their preferred foot in Pes2020',fontsize=20)\nplt.show()\n\n","4e255db5":"plt.rcParams['figure.figsize']=(20,10)\nplt.style.use('fivethirtyeight')\nax=sns.relplot(x='rating_stars',y='form',data=r_data,kind='line')\n\nplt.show()","8a6d1194":"plt.rcParams['figure.figsize']=(18,10)\nplt.style.use('seaborn')\n\nax = sns.countplot(x='position',data=r_data,palette='GnBu_d')\nax.set_xlabel(xlabel='position')\nax.set_ylabel(ylabel='count of position')\nax.set_title('Count of players in different position',fontsize=20)\nplt.show()","15e640a2":"labels = data['weak_foot_usage'].unique()\nsize = data['weak_foot_usage'].value_counts()\n\ncolors = plt.cm.Wistia(np.linspace(0, 1, 5))\nexplode = [0, 0, 0.1,0]\n\nplt.pie(size, labels = labels, colors = colors, explode = explode, shadow = True, startangle = 90)\nplt.title('Distribution of Week Foot usage among Players', fontsize = 20)\nplt.legend()\nplt.show()","74cec00b":"plt.rcParams['figure.figsize'] = (15,8)\nplt.style.use('seaborn-pastel')\n#sns.set(style = \"dark\", palette = \"deep\", color_codes = True)\nax = sns.distplot(r_data['age'],bins=52,kde=False)\nax.set_xlabel(xlabel='Age')\nax.set_ylabel(ylabel='No. of players')\nax.set_title('Count of players in different Age',fontsize=20)\nplt.show()","fd38b69d":"plt.rcParams['figure.figsize'] = (15,8)\nplt.style.use('dark_background')\nax = sns.distplot(r_data['overall_rating'],bins=52,kde=False)\nax.set_xlabel(xlabel='overall_rating')\nax.set_ylabel(ylabel='No. of players')\nax.set_title('Count of players in different overall-rating',fontsize=20)\nplt.show()","d1f28e96":"forward_pos = ['LWF','RWF','CF','SS']\ntotal_for_players =r_data[r_data['position'].isin(forward_pos)].shape[0]\nprint('Total Forward Players in Pes 2020:',total_for_players)","f48f1578":"best_for_ply = r_data[r_data['position'].isin(forward_pos)].sort_values(\n    by='overall_rating',ascending=False).head(10)\nbest_for_ply[['name','club','nationality','position','foot','age','overall_rating']].reset_index(drop =True)","71b8de58":"idx = 1\nplt.rcParams['figure.figsize'] = (15,45)\nplt.style.use('seaborn-white')\nax = plt.subplot(121)\n\nplt.plot()\n\nax = plt.subplot(121,polar=True)\ncategories = ['technique','passing','mobility','attacking','defence']\nfor name, features in best_for_ply.groupby(best_for_ply['name'])[categories].mean().iterrows():\n\n    N = len(categories)\n    features = dict(features) \n    values = list(features.values())\n    values += values[:1]\n\n    angles = [n\/float(N)*2*pi for n in range(N)]\n    angles += angles[:1]\n    \n    ax = plt.subplot(9, 3, idx, polar=True)\n\n    plt.xticks(angles[:-1], categories, color='black', size=8)\n\n    ax.set_rlabel_position(0)\n    plt.yticks([50,70,90], ['50','70','90'], color=\"grey\", size=7)\n    plt.ylim(0,100)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    \n    ax.plot(angles, values, linewidth=1, linestyle='solid')\n\n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(name, size=11, y=1.1)\n    \n    idx += 1 \n\n\n\n    ","36651bcc":"midfield_pos = ['CMF','AMF','RMF','LMF','DMF']\ntotal_for_players =r_data[r_data['position'].isin(midfield_pos)].shape[0]\nprint('Total Midfield Players in Pes 2020:',total_for_players)","ed7f4a76":"best_mid_ply = r_data[r_data['position'].isin(midfield_pos)].sort_values(\n    by='overall_rating',ascending=False).head(10)\nbest_mid_ply[\n    ['name','club','nationality','position','foot','age','overall_rating']].reset_index(drop =True)","cc83f05a":"idx = 1\nplt.rcParams['figure.figsize'] = (15,45)\nplt.style.use('seaborn-white')\nax = plt.subplot(121)\n\nplt.plot()\n\nax = plt.subplot(121,polar=True)\ncategories = ['technique','passing','mobility','attacking','defence']\nfor name, features in best_mid_ply.groupby(best_mid_ply['name'])[categories].mean().iterrows():\n\n    N = len(categories)\n    features = dict(features) \n    values = list(features.values())\n    values += values[:1]\n\n    angles = [n\/float(N)*2*pi for n in range(N)]\n    angles += angles[:1]\n    \n    ax = plt.subplot(9, 3, idx, polar=True)\n\n    plt.xticks(angles[:-1], categories, color='grey', size=8)\n\n    ax.set_rlabel_position(0)\n    plt.yticks([50,70,90], ['50','70','90'], color=\"grey\", size=7)\n    plt.ylim(0,100)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    \n    ax.plot(angles, values, linewidth=1, linestyle='solid')\n\n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(name, size=11, y=1.1)\n    \n    idx += 1 \n","29bdbd5c":"defensive_pos = ['RB','LB','CB']\ntotal_for_players =r_data[r_data['position'].isin(defensive_pos)].shape[0]\nprint('Total Defense Players in Pes 2020:',total_for_players)","a05bda2b":"best_def_ply = r_data[r_data['position'].isin(defensive_pos)].sort_values(\n    by='overall_rating',ascending=False).head(10)\nbest_def_ply[\n    ['name','club','nationality','position','foot','age','overall_rating']].reset_index(drop =True)","8fa90f90":"idx = 1\nplt.rcParams['figure.figsize'] = (15,45)\nplt.style.use('seaborn-white')\nax = plt.subplot(121)\n\nplt.plot()\n\nax = plt.subplot(121,polar=True)\ncategories = ['technique','passing','mobility','attacking','defence']\nfor name, features in best_def_ply.groupby(best_def_ply['name'])[categories].mean().iterrows():\n\n    N = len(categories)\n    features = dict(features) \n    values = list(features.values())\n    values += values[:1]\n\n    angles = [n\/float(N)*2*pi for n in range(N)]\n    angles += angles[:1]\n    \n    ax = plt.subplot(9, 3, idx, polar=True)\n\n    plt.xticks(angles[:-1], categories, color='grey', size=8)\n\n    ax.set_rlabel_position(0)\n    plt.yticks([50,70,90], ['50','70','90'], color=\"grey\", size=7)\n    plt.ylim(0,100)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    \n    ax.plot(angles, values, linewidth=1, linestyle='solid')\n\n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(name, size=11, y=1.1)\n    \n    idx += 1 \n","e95476e2":"goalkeeping_pos = ['GK']\ntotal_for_players =data[data['position'].isin(goalkeeping_pos)].shape[0]\nprint('Total Goalkepping Players in Pes 2020:',total_for_players)","cb39a0f1":"best_gk_ply = data[data['position'].isin(goalkeeping_pos)].sort_values(\n    by='overall_rating',ascending=False).head(10)\nbest_gk_ply[\n    ['name','club','nationality','position','foot','age','overall_rating']].reset_index(drop =True)","3df62698":"idx = 1\nplt.rcParams['figure.figsize'] = (15,45)\nplt.style.use('seaborn-white')\nax = plt.subplot(121)\n\nplt.plot()\n\nax = plt.subplot(121,polar=True)\ncategories = ['gk_awareness','gk_catching','gk_clearing','gk_reflexes','gk_reach','place_kicking']\nfor name, features in best_gk_ply.groupby(best_gk_ply['name'])[categories].mean().iterrows():\n\n    N = len(categories)\n    features = dict(features) \n    values = list(features.values())\n    values += values[:1]\n\n    angles = [n\/float(N)*2*pi for n in range(N)]\n    angles += angles[:1]\n    \n    ax = plt.subplot(9, 3, idx, polar=True)\n\n    plt.xticks(angles[:-1], categories, color='grey', size=8)\n\n    ax.set_rlabel_position(0)\n    plt.yticks([50,70,90], ['50','70','90'], color=\"black\", size=7)\n    plt.ylim(0,100)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    \n    ax.plot(angles, values, linewidth=1, linestyle='solid')\n\n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(name, size=11, y=1.1)\n    \n    idx += 1 \n","0486c1b1":"r_data.sort_values(['overall_rating'], ascending=[False]).groupby(\n    ['age'])[['position','name','club','nationality','foot','overall_rating']].first()\n    \n","52d3942f":"r_data.sort_values(['overall_rating'],ascending=[False]).groupby(\n    ['position'])[['name','club','nationality','foot','age','overall_rating']].first().reset_index()\n    ","8d013ad9":"best_in_league = r_data[(r_data.league!='Free Agents') & (r_data.league!='Free Agent')].sort_values(['overall_rating'],ascending=[False]).groupby(\n    ['league'])[['position','name','club','nationality','foot','age','overall_rating']].first()\nbest_in_league.reset_index()","3a1944ac":"best_in_nation = r_data.sort_values(['overall_rating'],ascending=[False]).groupby(\n    ['nationality'])[['position','name','club','league','foot','age','overall_rating']].first().sort_values(['overall_rating'],ascending=[False])\nbest_in_nation.reset_index()","6c0b5e8c":"y_team = r_data.groupby(['club'])['age'].agg(average_age=('age', 'mean')).round(2).sort_values(\n    by='average_age').reset_index().head(10)\nprint(y_team)\n","035cb63d":"o_team = r_data.groupby(['club'])['age'].agg(average_age=('age', 'mean')).round(2).sort_values(\n    by='average_age',ascending=False).reset_index().head(10)\nprint(o_team)\n","ff811157":"len(r_data.club.unique())","85ae89f2":"b_team = r_data[(r_data.league!='Free Agents') & (r_data.league!='Free Agent')].sort_values(by='overall_rating',ascending=False).groupby('club')['overall_rating'].nlargest(\n    21).mean(level=0).sort_values(ascending=False).reset_index()['club']\n    \nb_team.head(10)","1e1553da":"club_data = r_data.loc[r_data['club'].isin(list(b_team.head(10)))]\nplt.rcParams['figure.figsize'] = (20,8)\nplt.style.use('seaborn-bright')\nax = sns.boxplot(x=\"club\", y=\"overall_rating\", data=club_data)\nax.set_xlabel(xlabel='Club')\nax.set_ylabel(ylabel='Overall rating')\nax.set_title('Distribution of overall rating in major club',fontsize=20)\nplt.xticks(rotation=90)\nplt.show()","966910f7":"club_data = r_data.loc[r_data['club'].isin(list(b_team.head(10)))]\nplt.rcParams['figure.figsize'] = (15,8)\nplt.style.use('seaborn-dark')\nax = sns.boxenplot(x=\"club\", y=\"age\", data=club_data)\nax.set_xlabel(xlabel='Club')\nax.set_ylabel(ylabel='Overall rating')\nax.set_title('Distribution of Age in major club',fontsize=20)\nplt.xticks(rotation = 90)\nplt.show()","60d13a57":"I had only take the best 21 players from each club","9ea18282":"Categorical Columns","5a621248":"Importing necessary libraries","0efc1b1a":"Checking whether any column is null","a03600c4":"## Youngest Club and their average age","ac89e2ed":"## Top ten midfield players","f171db5e":"## Top ten Goalkeeping players","a5a20b24":"# Data visualization","3a44cf7a":"## Top 10 forward players","bccf58ea":"## Top 10 Clubs","dccf3079":"## Best player in league","fc034e7f":"## Best players in each age","b3581889":"# Selecting Required Columns","cffa916b":"# Analyzing single club data(Manchester United)","392ad1c6":"## Footballers from different Region and their preferred foot in Pes2020","29eb65a2":"## Best player in nation","744db127":"## Overall rating of players in Pes2020","f56e1a40":"## Distribution of weak foot usage","3954e178":"## Top ten defending players","c0c8229f":"## Rating-star based on form","c0bdb43a":"# Best clubs in Pes 2020","10fa5132":"## Age of players in Pes2020","ae32a91f":"# Pes 2020 Game ","bb262d61":"## Position and players","cae7cda1":" ## Best players in each position","a21c0855":"# Oldest Club and their average age","fcdc60f0":"Total clubs in Pes 2020 are:"}}