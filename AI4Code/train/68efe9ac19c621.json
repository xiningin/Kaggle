{"cell_type":{"edd478e6":"code","cd6082a4":"code","bee4280a":"code","dad332cc":"code","4a04ab8d":"code","dc52a39b":"code","9f1bd5f9":"code","8a283be6":"code","1dcaa1ad":"code","c8141093":"code","fce9cc34":"code","59649c0c":"code","014894b3":"code","372ddcfa":"code","63f00502":"code","618e7f2e":"markdown","d8119566":"markdown","31a6a2aa":"markdown","8231ddaf":"markdown","0f5404d3":"markdown","898e570a":"markdown","6ef218a4":"markdown","11693b13":"markdown","ce3f4b58":"markdown","f07e2428":"markdown","ae68a908":"markdown","c3a6eacb":"markdown","13668df0":"markdown","1352040a":"markdown","aa087d3b":"markdown","0bc172e6":"markdown"},"source":{"edd478e6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# visualization tools\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas_profiling as pp\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cd6082a4":"df = pd.read_csv(\"..\/input\/iris\/Iris.csv\")","bee4280a":"df.sample(5)","dad332cc":"df.info()","4a04ab8d":"report = pp.ProfileReport(df)\n\nreport.to_file(\"report.html\")\n\nreport","dc52a39b":"import missingno as msno\nmsno.matrix(df)\nplt.show()","9f1bd5f9":"f,ax = plt.subplots(figsize=(15, 10))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","8a283be6":"X=df.iloc[:, 1:5]\nX.head()","1dcaa1ad":"df.Species.unique()","c8141093":"from sklearn.preprocessing import LabelEncoder\ny=df.iloc[:,-1]\n\nencoder = LabelEncoder()\ny = encoder.fit_transform(y)\nprint(y)","fce9cc34":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X)\nX = scaler.transform(X)","59649c0c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","014894b3":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics\n\nclassifier = KNeighborsClassifier(n_neighbors = 10)\nclassifier.fit(X_train, y_train)\ny_pred=classifier.predict(X_test)","372ddcfa":"print('Accuracy Score:')\nprint(metrics.accuracy_score(y_test,y_pred))","63f00502":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nf,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(cm, annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.0f',ax=ax)\nplt.show()\nplt.savefig('ConfusionMatrix.png')","618e7f2e":"# Converting String Value To int Type for Labels\n### Encode label category\n* Iris-setosa -> 0\n* Iris-versicolor -> 1\n* Iris-virginica -> 2","d8119566":"### Highest Accuracy Score","31a6a2aa":"### Content:\n1. Pandas Profiling Report\n2. Missingo - Missing Data\n3. Seaborn - Heatmap\n4. Separating Features and Labels\n5. Converting String Value To int Type for Labels\n6. Data Standardisation\n7. Splitting Dataset into Training Set and Testing Set\n8. Build KNN Model with Default Hyperparameter\n9. Accuracy Score\n10. Confusion Matrix with Seaborn - Heatmap","8231ddaf":"# Confusion Matrix with Seaborn - Heatmap\n* Iris-setosa -> 0\n* Iris-versicolor -> 1\n* Iris-virginica -> 2","0f5404d3":"# Pandas Profiling Report","898e570a":"# Seaborn - Heatmap\n### Relationship between columns\n* 01 --> Direct proportion\n* 00 --> No relationship\n* -1 --> \u0130nverse proportion","6ef218a4":"### Used Libraries\n1. NumPy (Numerical Python)\n2. Pandas\n3. Matplotlib\n4. Seaborn\n5. Sckit learn\n6. Missingno","11693b13":"### Reading Data","ce3f4b58":"# Accuracy Score","f07e2428":"# Build KNN Model with Default Hyperparameter","ae68a908":"# Iris Species Classify Machine Learning KNN","c3a6eacb":"# Thank You\n\nIf you have any suggestion or advice or feedback, I will be very appreciated to hear them.\n### Also there are other kernels\n* [FIFA 19 Player Data Analysis and Visualization EDA](https:\/\/www.kaggle.com\/ismailsefa\/f-fa-19-player-data-analysis-and-visualization-eda)\n* [Crimes Data Analysis and Visualzation (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/crimes-data-analysis-and-visualzation-eda)\n* [Google Play Store Apps Data Analysis (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/google-play-store-apps-data-analysis-eda)\n* [World Happiness Data Analysis and Visualization](https:\/\/www.kaggle.com\/ismailsefa\/world-happiness-data-analysis-and-visualization)\n* [Used Cars Data Analysis and Visualization (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/used-cars-data-analysis-and-visualization-eda)\n* [Gender Recognition by Voice Machine Learning SVM](https:\/\/www.kaggle.com\/ismailsefa\/gender-recognition-by-voice-machine-learning-svm)\n* [Iris Species Classify Machine Learning KNN](https:\/\/www.kaggle.com\/ismailsefa\/iris-species-classify-machine-learning-knn)\n* [Breast Cancer Diagnostic Machine Learning R-Forest](https:\/\/www.kaggle.com\/ismailsefa\/breast-cancer-diagnostic-machine-learning-r-forest)\n* [Heart Disease Predic Machine Learning Naive Bayes](https:\/\/www.kaggle.com\/ismailsefa\/heart-disease-predic-machine-learning-naive-bayes)\n* [Mushroom Classify Machine Learning Decision Tree](https:\/\/www.kaggle.com\/ismailsefa\/mushroom-classify-machine-learning-decision-tree)","13668df0":"# Splitting Dataset into Training Set and Testing Set","1352040a":"# Data Standardisation","aa087d3b":"# Missingno - Missing Data","0bc172e6":"# Separating Features and Labels\n### X Feature = SepalLengthCm ,SepalWidthCm ,PetalLengthCm ,PetalWidthCm"}}