{"cell_type":{"1d8214b0":"code","45aff161":"code","3ae5ff17":"code","b039a0db":"code","a4c9d41e":"code","7b4025fb":"code","53e1b1e3":"code","cfbe6470":"code","2fb60ea0":"code","f12f5bae":"code","64d892c5":"code","67ed4147":"code","7bc124b8":"code","6eac32d1":"code","0808c07d":"code","f76bc2f1":"code","d5351fb3":"code","6849c506":"code","edf18755":"code","9beaad50":"code","57f42065":"markdown","365c36d0":"markdown","e80b0bc0":"markdown","a3d32394":"markdown","ce4a9827":"markdown","3fa903a3":"markdown","ad225b31":"markdown"},"source":{"1d8214b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","45aff161":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split,cross_val_score,GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler,RobustScaler\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.ensemble import RandomForestClassifier\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3ae5ff17":"X=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndata_test=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nXX=X.copy()","b039a0db":"X.head()","a4c9d41e":"X.info()","7b4025fb":"sns.heatmap(X.isna())","53e1b1e3":"X.isna().sum()","cfbe6470":"sns.distplot(X.Age)","2fb60ea0":"sns.distplot(X.Fare)","f12f5bae":"X.Age.mean()\nm=X.Age.mean()","64d892c5":"X.Age.std()\nvar=X.Age.std()","67ed4147":"#ll=np.random.normal(1,1,1000)\n#X[\"Age\"]=X[\"Age\"].fillna(np.random.choice(ll))\n#X[\"Age\"]=X[\"Age\"].fillna(X[\"Age\"].mean())","7bc124b8":"#X[\"Age\"].fillna(lambda x: random.choice(X[X[\"Age\"] != np.nan][\"Age\"]), inplace =True)\nX[\"Age\"]=X[\"Age\"].mask(X[\"Age\"].isnull(), np.random.normal(m, var, size=X[\"Age\"].shape))","6eac32d1":"for i in X[\"Age\"]:\n    print(i)","0808c07d":"1-X.Survived.sum()\/X.Survived.size","f76bc2f1":"col=[\"Survived\",\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"]\ndata=X[col]\ndata.Age=data.Age.fillna(data.Age.mean())\ndata.dropna()\ndata[\"family\"]=data[\"SibSp\"]+data[\"Parch\"]+1\ndata=data.drop(columns=[\"SibSp\",\"Parch\"],axis=1)\ndata=pd.get_dummies(data,columns=[\"Sex\",\"Embarked\"])\n\nX,y=data.drop(\"Survived\",axis=1),data[\"Survived\"]\nestimator=RandomForestClassifier(n_estimators=500)\nmodel=make_pipeline(RobustScaler(),estimator)\nmodel.fit(X,y)\nmodel.score(X,y)","d5351fb3":"X_test=data_test[[\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"]]\nX_test[\"family\"]=X_test[\"SibSp\"]+X_test[\"Parch\"]+1\nX_test=X_test.drop(columns=[\"SibSp\",\"Parch\"],axis=1)\nX_test.Age=X_test.Age.fillna(data.Age.mean())\nX_test.Fare=X_test.Fare.fillna(data.Fare.mean())\nX_test=pd.get_dummies(X_test,columns=[\"Sex\",\"Embarked\"])\nY_test=model.predict(X_test)","6849c506":"data=pd.DataFrame({\"PassengerId\":data_test.PassengerId,\"Survived\":Y_test})\ndata.to_csv(\"my_submission_x.csv\",index=False)","edf18755":"X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=0,test_size=0.15)","9beaad50":"model.score(X_test,y_test)","57f42065":"# # # Import data","365c36d0":"> # **Creating my_submission_file**","e80b0bc0":"Fill the age blank","a3d32394":"# Tuning the good parameteres","ce4a9827":"0.99 It's good for a test set and It's compute as above","3fa903a3":"Percentage of Dead","ad225b31":"**IMPORT MODEL**"}}