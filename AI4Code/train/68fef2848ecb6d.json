{"cell_type":{"20b45d82":"code","bf5695e2":"code","b11eadf9":"code","07896b51":"code","c8711e36":"markdown","a6d4672b":"markdown","6e283a30":"markdown"},"source":{"20b45d82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bf5695e2":"import cv2\nfrom matplotlib import pyplot as plt\nimport numpy as np","b11eadf9":"#image declaration\nimg = cv2.imread('\/kaggle\/input\/pothole\/pothole.jpeg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n\n\n#powerlaw to dehaze proccess\nfor powerlaw in[1.8]:\n    out = np.array(255*(img\/255)**powerlaw, dtype='uint8')\n\n\n#2D matrix filter for better dehazing\ndehaze_filter = np.array([[1, -2, -2.5],\n                    [-1,  9.3, -1],\n                    [-1, 1, -1]])\n#2D filter for better dehazing after power law\ndehaze = cv2.filter2D(out, -1, dehaze_filter)\n\n\n#image show\nplt.figure(figsize=(7,7))\nplt.imshow(img)\nplt.title('Original')\nplt.figure(figsize=(7,7))\nplt.imshow(dehaze)\nplt.title('Dehazed Image')\nplt.figure(figsize=(7,7))","07896b51":"#edge detection\nlap = cv2.Sobel(dehaze,cv2.CV_64F,0,1, ksize=3)\nlap = np.uint8(np.absolute(lap))\ncan = cv2.Canny(dehaze, 50,255)\n\nplt.imshow(dehaze)\nplt.title('Dehazed Image')\nplt.figure(figsize=(7,7))\nplt.imshow(can)\nplt.title('Pothole Detection')\nplt.figure(figsize=(7,7))\nplt.imshow(lap)\nplt.title('Pothole Detection')","c8711e36":"**Mendeteksi Lubang dengan Canny dan Sobel**\n> Canny dan sobel akan mendeteksi tepian yang ada pada gambar setelah kabut berkurang dan pada gambar canny akan **terlihat garis** yang itu merupakan lubang, sedangkan pada gambar sobel akan terlihat **warna putih** pada gambar yang itu merupakan lubang.","a6d4672b":"**Mengurangi kabut pada gambar**\n> Menggunakan Powerlaw untuk menerangkan beserta sharp filter agar kabut semakin berkurang dan gambar tetap cerah","6e283a30":"**Import Library**\n> Open CV, Matplotlib dan Numpy"}}