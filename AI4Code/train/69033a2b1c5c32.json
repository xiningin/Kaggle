{"cell_type":{"831456a0":"code","f74f77ab":"code","3dc46185":"code","2c566797":"code","e8a914aa":"code","0d4d8584":"code","335836d9":"code","f0a3cc84":"markdown"},"source":{"831456a0":"!pip install ..\/input\/python-datatable\/datatable-0.11.0-cp37-cp37m-manylinux2010_x86_64.whl > \/dev\/null 2>&1","f74f77ab":"import os\nimport gc\nimport sys\nimport time\nimport tqdm\nimport random\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport datatable as dt\nimport matplotlib.pyplot as plt\nplt.style.use('bmh')","3dc46185":"folder_path = '..\/input\/jane-street-market-prediction\/'\ntrain = dt.fread(folder_path + 'train.csv').to_pandas()\nfeatures = dt.fread(folder_path + 'features.csv').to_pandas()","2c566797":"def plot_correlation_over_time(groups):\n    # plotting correlation between first 3 features over different time horizons\n    groups_len = len(np.arange(1, 500, groups))\n    fig, axes = plt.subplots(groups_len\/\/2, 2, figsize=(20, (groups_len\/\/2)*8))\n\n    # loop over first day in selected group spans\n    for i, ax in zip(np.arange(1, 500, groups), axes.flatten()):\n        group_days = [i for i in range(i, i+groups)]\n        group = train.loc[train.date.isin(group_days)]\n\n        # calculate pearson correlation\n        corr_mat = group.corr(method='pearson')\n\n        sns.heatmap(corr_mat, ax=ax, cmap='coolwarm');\n        ax.set_title(f'Days between {group_days[0]} and {group_days[-1]}')","e8a914aa":"plot_correlation_over_time(6);","0d4d8584":"plot_correlation_over_time(10);","335836d9":"plot_correlation_over_time(30);","f0a3cc84":"### I made a function which plots correlation between features over different time periods. I honestly don't know if any insight is to be gained from it, but I decided to share it anyways since maybe somebody could."}}