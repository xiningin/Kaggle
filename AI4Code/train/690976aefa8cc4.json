{"cell_type":{"2a4d6293":"code","068afa3b":"code","ab30ddf1":"code","cb70baa8":"code","7c999cc5":"code","8e058317":"code","c5fe45d6":"code","3e1bbdb7":"code","4956aedf":"code","ce23c281":"code","db9d69cf":"code","3dd034dd":"code","4572b8c4":"code","36fdbaae":"code","0f40a706":"code","93a59817":"code","c29befc0":"code","5b009c06":"code","76adacdc":"code","98a02346":"code","c4521ab7":"code","65ccf6db":"code","40c46895":"code","5fa48005":"code","2ee098e8":"code","a7eaacbb":"code","54c91336":"code","768f8d98":"code","9866af54":"markdown","d48585ae":"markdown","c691a048":"markdown","08f24595":"markdown"},"source":{"2a4d6293":"\"\"\"\nCreated on Sun May  3 18:20:04 2020\n@author: Anup Borkar\n\"\"\"\n%reset -f\n# 1.1 For data manipulations\nimport numpy as np\nimport pandas as pd\n# 1.2 For plotting\nimport matplotlib.pyplot as plt\nplt.rcParams.update({'figure.max_open_warning': 0}) #just to suppress warning for max plots of 20\n#import matplotlib\n#import matplotlib as mpl     # For creating colormaps\nimport seaborn as sns\n# 1.3 For data processing\nfrom sklearn.preprocessing import StandardScaler\n# 1.4 OS related\nimport os\n\n# 1.5 Go to folder containing data file\n#os.chdir(\"..\/input\/\")\n#os.listdir()            # List all files in the folder\n\n# 1.6 Read file and while reading file,\ndf = pd.read_csv(\"..\/input\/uncover\/einstein\/diagnosis-of-covid-19-and-its-clinical-spectrum.csv\")\ndf.head()\n#counting the number of NAs by each Row\nnum_of_NA = (df.isnull().sum(axis=1))\n#num_of_NA","068afa3b":"df['patient_age_quantile'] = pd.to_numeric(df['patient_age_quantile'])\ndf = df.fillna(np.nan)","ab30ddf1":"df['urine_leukocytes']=df['urine_leukocytes'].str.replace(\"<\",\"\") #Cleaning the column as I found some Special Character\nif (pd.to_numeric(df['urine_leukocytes'].values.any())<1000):\n    df['urine_leukocytes']=df['urine_leukocytes'].replace({999}, inplace=True) ","cb70baa8":"# let me get our output (positive (1) or negative(0)),\n# transforming our target column in a binary format\ndf.loc[:, 'sars_cov_2_exam_result_flag'] = df['sars_cov_2_exam_result']","7c999cc5":"df['sars_cov_2_exam_result_flag'].replace({\"positive\": \"1\", \"negative\": \"0\"}, inplace=True)\ndf['sars_cov_2_exam_result_flag'].unique()","8e058317":"# removing patient id (it is not necessary)\n# we MUST remove this column 'cause one patient doesn't has impact in others.\n# so, predictors cannot try to use this information\ndf=df.drop(['patient_id','patient_addmited_to_regular_ward_1_yes_0_no',\n       'patient_addmited_to_semi_intensive_unit_1_yes_0_no',\n       'patient_addmited_to_intensive_care_unit_1_yes_0_no','sars_cov_2_exam_result'], axis=1)","c5fe45d6":"df","3e1bbdb7":"df.replace(False, -1, inplace=True) #Replace all False values with -1","4956aedf":"df.replace(True, +1, inplace=True) #Replace all True vaules with 1","ce23c281":"# these columns have categorical data. Transforming them in numerical ones and putting in some order\ncolumns = ['respiratory_syncytial_virus', 'influenza_a', 'influenza_b','parainfluenza_1', 'coronavirusnl63',\n           'rhinovirus_enterovirus', 'coronavirus_hku1', 'parainfluenza_3','chlamydophila_pneumoniae', 'adenovirus',\n           'parainfluenza_4','coronavirus229e', 'coronavirusoc43', 'inf_a_h1n1_2009','bordetella_pertussis', 'metapneumovirus',\n           'parainfluenza_2', 'influenza_b_rapid_test','influenza_a_rapid_test', 'strepto_a', 'urine_esterase', 'urine_aspect',\n           'urine_ph', 'urine_hemoglobin', 'urine_bile_pigments','urine_ketone_bodies', 'urine_nitrite','urine_urobilinogen', \n           'urine_protein','urine_leukocytes', 'urine_crystals','urine_hyaline_cylinders', 'urine_granular_cylinders', \n           'urine_yeasts','urine_color']","db9d69cf":"#Replacing default values available into Numerical datatype\nfor i in columns:\n    df[i].replace({\"not_detected\":0,          \"detected\":1,        \"N\u00e3o Realizado\": 0,\n                   \"negative\":0,              \"positive\":1,        \"not_done\":-1,\n                   \"absent\":0,                \"present\":1,         \"clear\":0,\n                   \"lightly_cloudy\":1,        \"cloudy\":2,          \"altered_coloring\":10,\n                   \"Ausentes\":0,              \"Urato Amorfo --+\":1,\"Oxalato de C\u00e1lcio -++\":2,\n                   \"Oxalato de C\u00e1lcio +++\":3, \"Urato Amorfo +++\":3,\"light_yellow\":1,\n                   \"yellow\":2,                \"citrus_yellow\":3,   \"orange\":4, \"nan\":\"\",\n                   \"normal\":1\n                  }, inplace=True)\n","3dd034dd":"df['urine_color'].unique() # Just to check whether changes affected or not","4572b8c4":"df.head()","36fdbaae":"#Let's start plotting some graphs\nsns.distplot(df.patient_age_quantile)\nsns.despine()               # Plot with and without it","0f40a706":"#not using urine_yeasts, urine_granular_cylinders, urine_hyaline_cylinders,parainfluenza_2,urine_nitrite from columns\n#array as these variable don't have values for drawing\ncols =    ['respiratory_syncytial_virus', 'influenza_a', 'influenza_b','parainfluenza_1', 'coronavirusnl63',\n           'rhinovirus_enterovirus', 'coronavirus_hku1', 'parainfluenza_3','chlamydophila_pneumoniae', 'adenovirus',\n           'parainfluenza_4','coronavirus229e', 'coronavirusoc43', 'inf_a_h1n1_2009','bordetella_pertussis', 'metapneumovirus',\n           'influenza_b_rapid_test','influenza_a_rapid_test', 'strepto_a', 'urine_esterase', 'urine_aspect',\n           'urine_ph', 'urine_hemoglobin', 'urine_bile_pigments','urine_ketone_bodies', 'urine_urobilinogen', \n           'urine_protein','urine_leukocytes', 'urine_crystals','urine_color']\n\nfig = plt.figure(figsize = (20,30))\nfor i in range(len(cols)):\n    plt.subplot(10,3,i+1)\n    sns.kdeplot(df[cols[i]],  bw=2) #cumulative=True,\n","93a59817":"#Relationship between Patient Age Quantile and Urine Colour light_yellow=1,yellow=2,citrus_yellow=3,orange=4\nsns.boxplot(x = 'urine_color',                    # Discrete \n            y = 'patient_age_quantile',           # Continuous\n            data = df\n            )","c29befc0":"#Relationship between Patient Age Quantile and Urine Colour with 'Notch'\nsns.boxplot(x = 'urine_color',                          # Discrete\n            y = 'patient_age_quantile',                 # Continuous\n            data = df,\n            notch = True              \n            )","5b009c06":"df.describe() #describing summary about the dataset","76adacdc":"sns.jointplot(df.phosphor,\n              df.patient_age_quantile,\n              kind = \"hex\"\n              )","98a02346":"#Segragating Columns into Categories like Corona Related, Urine Related and Test Related for plotting\ncols_corona = [ 'respiratory_syncytial_virus', 'coronavirusnl63',\n            'coronavirus_hku1', 'coronavirus229e', 'coronavirusoc43']\ncols_urine=['urine_esterase', 'urine_aspect','urine_ph', 'urine_hemoglobin', 'urine_bile_pigments',\n            'urine_ketone_bodies', 'urine_urobilinogen', 'urine_protein','urine_leukocytes', \n            'urine_crystals','urine_color']\ncols_test = ['influenza_b_rapid_test','influenza_a_rapid_test', 'strepto_a']","c4521ab7":"sns.set(style='whitegrid', palette=\"deep\", font_scale=1.1, rc={\"figure.figsize\": [8, 5]})\nfig = plt.figure(figsize = (25,30))\nfor i in range(len(cols_corona)):\n    plt.subplot(10,5,i+1)\n    sns.distplot(\n    df[cols_corona[i]], norm_hist=False, kde=False, bins=20, hist_kws={\"alpha\": 1});#.set(xlabel='Legend ', ylabel='Value');\n    sns.despine()   \n    #sns.kdeplot(df[cols[i]],  bw=2) #cumulative=True,\n","65ccf6db":"fig = plt.figure(figsize = (25,30))\nfor i in range(len(cols_urine)):\n    plt.subplot(10,5,i+1)\n    sns.countplot(df[cols_urine[i]])\n    ","40c46895":"#Lets draw Count Plot for Test Related Colums\nfig, ax = plt.subplots(1, 3, figsize=(20, 10))\nfor variable, subplot in zip(cols_test, ax.flatten()):\n    sns.countplot(df[variable], ax=subplot)\n    for label in subplot.get_xticklabels():\n        label.set_rotation(90)","5fa48005":"fig, ax = plt.subplots(2, 4, figsize=(20, 10))\nfor variable, subplot in zip(cols_urine, ax.flatten()):\n    sns.countplot(df[variable], ax=subplot)\n    for label in subplot.get_xticklabels():\n        label.set_rotation(90)","2ee098e8":"sorted_nb = df.groupby(['patient_age_quantile'])['coronavirus229e'].median().sort_values()\nsns.boxplot(x=df['coronavirus_hku1'], y=df['patient_age_quantile'], order=list(sorted_nb.index))","a7eaacbb":"#columns = list(df.head(0))\n#columns\n#df.select_dtypes(include=['category']).dtypes","54c91336":"sns.catplot(x = 'urine_color',\n            y = 'patient_age_quantile',\n            row = 'urine_color',\n            col = 'sars_cov_2_exam_result_flag',\n            estimator = np.mean ,\n            kind = 'box',\n            data =df)\n\n#sns.jointplot(x = 'sars_cov_2_exam_result_flag', y = 'patient_age_quantile',data = df, notch=True)","768f8d98":"#Heatmap of Urine Related Tests\ndf_cols=df[cols_urine]\ncorr = df_cols.corr()\ng = sns.heatmap(corr, vmax=.3, center=0,\nsquare=True, linewidths=.5, cbar_kws={\"shrink\": .5}, annot=True, fmt='.2f', cmap='coolwarm')\nsns.despine()\ng.figure.set_size_inches(15,10)\nplt.show()","9866af54":"Loading the libraries and dataset...","d48585ae":"# Code","c691a048":"Let's perform some Pre-processing on the dataset...","08f24595":"# **Introduction**\n\n\n\nThis code has the objective of showing graphical analysis of Covid-19 dataset"}}