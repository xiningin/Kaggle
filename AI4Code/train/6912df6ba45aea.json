{"cell_type":{"e8a80a4f":"code","d6fef4b9":"code","a4d539d9":"code","c714a82d":"code","a4aa84e9":"code","564047b1":"code","f51611e9":"markdown","8eddd138":"markdown","6fb1d41b":"markdown","5692b32a":"markdown"},"source":{"e8a80a4f":"import os\nimport pydicom as dcm\nimport glob\nimport numpy as np\nimport pandas as pd\nimport math\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport seaborn as sns\nimport torch\nfrom sklearn.linear_model import Ridge\nimport random\nfrom tqdm.notebook import tqdm\nfrom sklearn.model_selection import StratifiedKFold, GroupKFold, KFold\nfrom sklearn.metrics import mean_squared_error\nimport category_encoders as ce\nfrom PIL import Image\nimport cv2\nimport lightgbm as lgb\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport seaborn as sns\np = sns.color_palette()\nimport plotly.express as px","d6fef4b9":"def dicom_to_image(filename):\n    im = dcm.dcmread(filename)\n    img = im.pixel_array\n    img[img == -2000] = 0\n    return img","a4d539d9":"files_darkimages = glob.glob('..\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00105637202208831864134\/*.dcm')\nprint(\"Patiend files :\",len(files_darkimages))\nf, plots = plt.subplots(4, 5, sharex='col', sharey='row', figsize=(10, 8))\nfor i in range(20):\n    plots[i \/\/ 5, i % 5].axis('off')\n    plots[i \/\/ 5, i % 5].imshow(dicom_to_image(files_darkimages[i]), cmap=plt.cm.bone)","c714a82d":"from skimage import exposure\ndef dicom_to_image2(filename):\n    im = dcm.dcmread(filename)\n    img = im.pixel_array\n    img = exposure.equalize_hist(img)\n    return img\n\ndef dicom_to_image3(filename):\n    im = dcm.dcmread(filename)\n    img = im.pixel_array\n    img = exposure.equalize_adapthist(img)\n    return img","a4aa84e9":"f, plots = plt.subplots(4, 5, sharex='col', sharey='row', figsize=(10, 8))\nfor i in range(20):\n    plots[i \/\/ 5, i % 5].axis('off')\n    plots[i \/\/ 5, i % 5].imshow(dicom_to_image2(files_darkimages[i]), cmap=plt.cm.bone)\nplt.title(\"Dark images fixed using equalize_hist\")","564047b1":"f, plots = plt.subplots(4, 5, sharex='col', sharey='row', figsize=(10, 8))\nfor i in range(20):\n    plots[i \/\/ 5, i % 5].axis('off')\n    plots[i \/\/ 5, i % 5].imshow(dicom_to_image3(files_darkimages[i]), cmap=plt.cm.bone)\nplt.title(\"Dark images fixed using equalize_adapthist\")","f51611e9":"# Function for reading DICOM","8eddd138":"# Dark images - fixed\n\nThere seems two ways to fix this as mentioned [here](http:\/\/uwmsk.org\/jupyter\/Jupyter_DICOM_toolbox.html)\n\n1. `equalize_hist`\n2. `equalize_adapthist`\n\nLet us try both of these","6fb1d41b":"While the images with equalise_hist are more clear, it is not recommended over the other. Hence we might have to use both these options for our experiments during training.\n\nPlease let me know your thoughts on this. Please upvote if you like my work.","5692b32a":"# Dark Images\n\nThanks to this [discussion](https:\/\/www.kaggle.com\/c\/osic-pulmonary-fibrosis-progression\/discussion\/170861) we are aware that some scans are dark, for instance as below."}}