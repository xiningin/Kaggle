{"cell_type":{"4924e8e1":"code","05cfac4d":"code","088a90e5":"code","3ee2b0b4":"code","b523cae1":"code","b9a1490e":"code","0da5972a":"code","0b1ba8d2":"code","f2aebfd9":"code","5e5eadf2":"code","53e229ac":"code","b9d30f2d":"code","d3123e6d":"code","8eebe7c0":"code","df06ed80":"code","7b0141a6":"code","ce26cc55":"code","e00a5e64":"code","4d4b772c":"code","9733a782":"code","1b9bffdf":"code","3eedeb05":"code","3b9b70e7":"code","1ffe01e3":"code","abacec53":"code","f7e8b82a":"code","ee5f0f88":"markdown","c4985b1e":"markdown","da5d239b":"markdown"},"source":{"4924e8e1":"import pandas as pd\n%matplotlib inline","05cfac4d":"data=pd.read_csv(\"..\/input\/final-dataset\/all_data.csv\")\ndata.head()","088a90e5":"nan_df=data[data.isna().any(axis=1)]\nnan_df.head()","3ee2b0b4":"data.info()","b523cae1":"data=data.dropna(how=\"all\")\ndata.head()","b9a1490e":"data.tail()","0da5972a":"data_null=data[data.isnull().any(axis=1)]\n","0b1ba8d2":"data[\"Product\"].value_counts()","f2aebfd9":"data = data[data[\"Order Date\"].str[0:2]!=\"Or\"]\ndata.head()","5e5eadf2":"data[\"Month\"] = pd.to_datetime(data[\"Order Date\"]).dt.month","53e229ac":"data.head()","b9d30f2d":"def get_city(address):\n    return address.split(\",\")[1].strip()\n\ndef get_state(address):\n    return address.split(\",\")[2].strip(\" \")[0:2]\n\ndata['all_cities']= data[\"Purchase Address\"].apply(lambda x: f\"{get_city(x)}({get_state(x)})\")","d3123e6d":"data['Quantity Ordered'] = pd.to_numeric(data['Quantity Ordered'])\ndata['Price Each'] = pd.to_numeric(data['Price Each'])","8eebe7c0":"data.head()","df06ed80":"data[\"Month\"].value_counts()","7b0141a6":"data[\"Sales\"] = data[\"Quantity Ordered\"]*data[\"Price Each\"]","ce26cc55":"month_wise_sale=data.groupby([\"Month\"]).sum()","e00a5e64":"month_wise_sale","4d4b772c":"import matplotlib.pyplot as plt\nmonths=range(1,13)\n\nplt.figure(figsize=(12,8))\nplt.bar(months,month_wise_sale['Sales'])\nplt.xticks(months)\nplt.xlabel(\"Month Number\")\nplt.ylabel(\"Sales in USD\")\nplt.show()","9733a782":"city_wise_sale=data.groupby([\"all_cities\"]).sum()","1b9bffdf":"city_wise_sale","3eedeb05":"keys = [city for city, df in data.groupby(['all_cities'])]\n\nplt.figure(figsize=(12,8))\nplt.bar(keys,city_wise_sale['Sales'])\nplt.xticks(keys,rotation=\"vertical\",size=15)\nplt.xlabel(\"All Cities\")\nplt.ylabel(\"Sales in USD\")\nplt.show()","3b9b70e7":"data[\"Hour\"] = pd.to_datetime(data[\"Order Date\"]).dt.hour\ndata[\"Minute\"] = pd.to_datetime(data[\"Order Date\"]).dt.minute\ndata[\"Count\"]=1\n","1ffe01e3":"data.head()","abacec53":"keys=range(24)","f7e8b82a":"plt.plot(keys, data.groupby(['Hour']).count()['Count'])\nplt.xticks(keys)\nplt.grid()\nplt.show()\n\n# My recommendation is slightly before 11am or 7pm","ee5f0f88":"### Data Exploration","c4985b1e":"### Data Reading","da5d239b":"## Data Cleaning and modifying "}}