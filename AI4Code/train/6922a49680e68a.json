{"cell_type":{"a9246c40":"code","b8001ea2":"code","4137fcfe":"code","4f392f08":"code","b6d6d485":"code","3f48816a":"code","6e036e9c":"code","7fb411e9":"code","48d339fb":"code","d7dfd33c":"code","448be713":"code","2880d74f":"code","d810c2ea":"code","75fbd632":"code","183002cf":"code","edf839ae":"code","8ab21993":"code","7e12043d":"code","88684afd":"code","a07fcebe":"code","38e10dff":"code","11bf3bf6":"code","c977112f":"code","b0ad3115":"code","01d1410c":"code","e98f6af1":"code","dd71dbea":"markdown","34d63339":"markdown","aefd50b1":"markdown","4be7fb44":"markdown","89f6abd0":"markdown","de014a3c":"markdown","f5b8ad49":"markdown","937300d3":"markdown","37cb669d":"markdown","c9c3e465":"markdown","92fb7b40":"markdown","1dff9b85":"markdown","8501e694":"markdown","7ef0d4fc":"markdown","ad2cb8d8":"markdown","f03ff16b":"markdown","f516c2d5":"markdown","34dab8da":"markdown","090d7016":"markdown","bd257317":"markdown","6de139db":"markdown","7d1fcfac":"markdown","bd44595e":"markdown","6d900a8d":"markdown","ad198a3c":"markdown","79d136ca":"markdown","5a3a2878":"markdown","1e6506f6":"markdown","ec7253c0":"markdown","db2de3e2":"markdown","dd16f4f6":"markdown","0998b2e5":"markdown","2ce7f3c6":"markdown"},"source":{"a9246c40":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np, pandas as pd, matplotlib.pyplot as plt\nimport seaborn as sns \n\ndata = pd.read_csv('..\/input\/sanfranciso-crime-dataset\/Police_Department_Incidents_-_Previous_Year__2016_.csv')","b8001ea2":"data.head()","4137fcfe":"data.info()","4f392f08":"data.describe()","b6d6d485":"#deleting incident number, location as the data is already captured\ndata.drop(columns = ['IncidntNum','Location'], axis = 1, inplace = True)\n\n#feature engineering - extracting month, day and week of the month\ndata.Date = data.Date.str.split()\ndata.Date = data.Date.apply(lambda x: x[0])\n\ndata['month'] = pd.DatetimeIndex(data.Date).month\ndata['day'] = pd.DatetimeIndex(data.Date).day\n\ndata['iswknd'] = data.DayOfWeek.apply(lambda x: 1 if x in ['Saturday','Sunday'] else 0)\n\ndef PartofDay(a):\n    if a in ['23','00','01','02']:\n        return 'Midnight'\n    elif a in ['03','04','05','06']:\n        return 'Early Morning'\n    elif a in ['07','08','09','10']:\n        return 'Morning'\n    elif a in ['11','12','13','14']:\n        return 'Noon'\n    elif a in ['15','16','17','18']:\n        return 'Evening'\n    else:\n        return 'Night'\n\ndata['PartofDay'] = data.Time.apply(lambda x: PartofDay(x.split(':')[0]))","3f48816a":"a = data.Category.value_counts().reset_index()\nplt.figure(figsize = (15,6))\nsns.barplot(x = a['index'], y = 'Category', data = a, color = 'red')\nplt.xticks(rotation = 90)\nplt.xlabel(\"\")\nplt.title('Categories of Crime', fontdict = {'color': 'darkred', 'size':16})\nplt.text(x = 20, y = 35000,s = \"Larceny\/Theft : 26% \\nNon-Criminal  : 11%\", fontsize = 16, color = 'blue')\nplt.show()","6e036e9c":"a = data.DayOfWeek.value_counts(normalize = True).reset_index()\na['DayOfWeek'] = 100*a['DayOfWeek']\nplt.figure(figsize = (7,7))\nplt.pie(x = a['DayOfWeek'], labels = a['index'], explode = [0.1,0,0,0,0,0,0], shadow = True, autopct = '%1.1f%%')\nplt.show()","7fb411e9":"a = data.PdDistrict.value_counts().reset_index()\nplt.figure(figsize = [15,5])\nsns.barplot(x = a['index'],y = 'PdDistrict', data = a, palette = ['red']+['grey']*8+['blue'])\nplt.xlabel('')\nplt.ylabel('Count')\nplt.title('District Wise counts of crime', fontdict = {'color': 'darkred', 'size':16})\nplt.show()","48d339fb":"a = data.Resolution.value_counts().reset_index()\nplt.figure(figsize = (10, 6))\nsns.barplot(y = a['index'], x = 'Resolution', data = a, color = 'red')\nplt.title('Charges for cases', fontdict = {'color': 'darkred', 'size':16})\nplt.xlabel('')\nplt.ylabel('')\nplt.text(x = 40000, y = 1.3, s = '26% of the incidents ends up in Arrest',fontsize = 16, color = 'blue')\nplt.show()","d7dfd33c":"a = data.month.value_counts().reset_index()\na.sort_values('index', inplace = True)\nm = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec']\nplt.figure(figsize = (15,4))\nsns.barplot(x = a['index'], y = 'month', data = a, color = 'red')\nplt.xticks(np.arange(0,12),m)\nplt.title('Months vs Crimes', fontdict = {'color': 'darkred', 'size':16})\na1 = data.month.value_counts(normalize = True)\nfor i in range(1,13):\n    plt.text(x = i-1, y = 2000, s = str(round(100*a1[i],2))+'%'+'\\n'+str(a.index[i-1]+1), horizontalalignment = 'center', verticalalignment = 'center', color = 'white')\nplt.show()","448be713":"a = data.PartofDay.value_counts().reset_index()\na1 = data.PartofDay.value_counts(normalize = True)\nplt.figure(figsize = (15,5))\nsns.barplot(x = a['index'], y = 'PartofDay', data = a, color = 'red')\nplt.title('Part of the Day vs Crimes', fontdict = {'color': 'darkred', 'size':16})\nfor i in range(6):\n    plt.text(x = i, y = 5000, s = str(round(100*a1[i],2))+'%', horizontalalignment = 'center', color = 'white')\nplt.show()","2880d74f":"res = pd.pivot_table(columns = data.day,values = 'day' ,index = 'month' , aggfunc = 'count', data = data)\nplt.figure(figsize = (15,6))\nsns.heatmap(res, cmap = 'Reds')\nplt.yticks(np.arange(0.5,12.5) ,['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'])\nplt.xlabel('')\nplt.ylabel('')\nplt.show()","d810c2ea":"res = pd.pivot_table(columns = data['PartofDay'] ,index = 'DayOfWeek',values = 'PartofDay' , aggfunc = 'count', data = data)\nres = res.reindex(index = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'], columns = ['Early Morning','Morning','Noon','Evening','Night','Midnight'])\nplt.figure(figsize = (15,6))\nsns.heatmap(res, cmap = 'Reds',annot = True,fmt = 'd')\nplt.xlabel('')\nplt.ylabel('')\nplt.show()","75fbd632":"data_arrest = data[data.Resolution.isin([\"ARREST, BOOKED\",\"ARREST, CITED\"])]","183002cf":"a = data_arrest.Category.value_counts().reset_index()\nb = data.Category.value_counts().reset_index()\n\na = a.merge(b, how = 'inner', on = 'index')\na.columns = ['Category','Arrests','Cases']\n\na['PercArrests'] = round(100*(a['Arrests']\/a['Cases']),2)\n\na.sort_values('PercArrests',ascending = False, inplace = True)","edf839ae":"plt.figure(figsize = (15,8))\nsns.barplot(y = 'Category', x = 'PercArrests',data = a, color = 'red')\nplt.ylabel('')\nplt.xlabel('')\nplt.title('What gets you arrested', fontdict = {'color': 'darkred', 'size':16})\nplt.show()","8ab21993":"a = data_arrest.PdDistrict.value_counts().reset_index()\nb = data.PdDistrict.value_counts().reset_index()","7e12043d":"a = a.merge(b,how = 'inner', on = 'index')\na.columns = ['PdDistrict', 'Arrests','Cases']\na['PercArrests'] = a['Arrests']\/a['Cases']\na['PercArrests'] = 100*a['PercArrests']\na['PercArrests'] = round(a['PercArrests'],2)\na.sort_values('PercArrests', ascending = False, inplace = True)","88684afd":"plt.figure(figsize = (15,4))\nsns.barplot(x = 'PdDistrict', y = 'PercArrests',data = a, color = 'red', palette = ['red']+['grey']*8+['blue'])\nplt.ylabel('')\nplt.xlabel('')\nplt.title('Stern Cops : Percentage of Arrests', fontdict = {'color': 'darkred', 'size':16})\nfor i in range(10):\n    plt.text(x = i, y = a.PercArrests.iloc[i], s = str(a.PercArrests.iloc[i])+'%', horizontalalignment = 'center', verticalalignment = 'bottom')\nplt.show()","a07fcebe":"import plotly.express as px","38e10dff":"a = (data.Category.value_counts()<1500).reset_index()\nl = list(a[a.Category == True]['index'])","11bf3bf6":"data.Category = data.Category.replace(l,'OTHER OFFENSES')\ndiscat = data.groupby(['PdDistrict','Category'])['Descript'].count().reset_index()","c977112f":"discat = discat.rename(columns = {'Descript':'Count'})\nfig = px.sunburst(discat, path = ['PdDistrict','Category'], values = 'Count', color = 'Count')\nfig.show()","b0ad3115":"import folium\n\nsf = folium.Map(location = [37.75,-122.42], zoom_start=12)\npol = r'..\/input\/police-districts-sf\/Current Police Districts.geojson'\n","01d1410c":"stations = pd.read_excel('..\/input\/police-department-locations-sf\/Police_Departments_Locations.xlsx')\nstations['Y'] = stations['Location'].apply(lambda x: float(x.split(\",\")[0][1:-1]))\nstations['X'] = stations['Location'].apply(lambda x: float(x.split(\",\")[1][1:-2]))\nstations.drop('Location', axis = 1, inplace = True)\nstations.columns = ['Company Name', 'District', 'Address', 'Telephone Number', 'Y',\n       'X']","e98f6af1":"sfbypd = data['PdDistrict'].value_counts().reset_index()\n\nsf.choropleth(\n    geo_data = pol,\n    data = sfbypd,\n    columns = ['index', 'PdDistrict'],\n    key_on = 'properties.district',\n    fill_color = 'YlOrRd',\n    fill_opacity=0.7, \n    line_opacity=1,\n    edgecolor = 'black',\n    linewidth = 2   \n)\n\nfor Y, X,D in zip(stations.Y, stations.X, stations.District):\n    folium.Marker(location = [Y,X], tooltip = D).add_to(sf)\n\n\nsf","dd71dbea":"### Interactive Sunburst District, Category","34d63339":"`Inference` : Fridays are the days where most crimes are recorded followed by Saturday and Sundays are the days where least crimes are recorded","aefd50b1":"## GeoSpatial Analysis with Folium\n\n\nDistrict wise cases and the location of the police stations are shown. We can observe that the Southern district is where the highest number of crimes recorded.\n\nWe can also use geospatial maps to identify hotspots for certain kinds of crimes say, drug, assault etc","4be7fb44":"## <font color = 'blue'>Introduction <a class=\"anchor\" id=\"Section1\"><\/a>\n\nThe data set contains the information about the crime in San Francisco collected during 2016. The data set contains information regarding what is the category, description of the crime including when it is recorded and in which district with the respective resolution. The rows and columns of the data are thoroughly analysed","89f6abd0":"## <font color = 'blue'> Data Understanding and Feature Engineering <a class=\"anchor\" id=\"Section4\"><\/a>\n    \nA quick look at the columns of the data","de014a3c":"### Be careful during evenings","f5b8ad49":"### What gets you arrested in San Fransico","937300d3":"`Inference` : Evenings are usually where there are many crime incidents, friday evenings are particularly bad and sunday evenings are relatively better","37cb669d":"### Which month is safer?","c9c3e465":"### Days vs Crime","92fb7b40":"<img src = 'https:\/\/i.pinimg.com\/originals\/57\/84\/8d\/57848d08c69b3122c52682887558c0f1.jpg'>","1dff9b85":"### Resoultion for the Cases","8501e694":"### <font color = 'blue'>Data Cleaning\n\n- Dropping the columns Incident Number (`IncidntNum`) as it doesn't provide any useful information for the analysis and Location (`Location`) as the data is already captured in the columns X, Y\n- Extracting the date from the Date Column and removing the `12:00:00 AM` from the column as it appears in the every column\n- Extracting the month and day information from the above modified date attribute\n- Creating an attribute to identify if the day is weekend or not\n- Creating a categorical variable for time containing the categories <br>\n    - Midnight : (23:00 - 02:00) <br>\n    - Early Morning : (03:00 - 06:00) <br>\n    - Morning : (07:00 - 10:00) <br>\n    - Noon : (11:00 - 14:00) <br>\n    - Evening : (15:00 - 18:00) <br>\n    - Night : (19:00 - 22:00)","7ef0d4fc":"## <font color = 'blue'>Exploratory Data Analysis <a class=\"anchor\" id=\"Section5\"><\/a>","ad2cb8d8":"<img src = \"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/c\/cd\/SanFrancisco_from_TwinPeaks_dusk_MC.jpg\/1680px-SanFrancisco_from_TwinPeaks_dusk_MC.jpg\">","f03ff16b":"### Day of the Week","f516c2d5":"`Inference` : Almost Quarter of crime incidents happens during evening, i.e between 1500 to 1800","34dab8da":"### Categories of Crimes ","090d7016":"`Inference` : January 1st seems to the day with highest number of recorded crimes and December 25th seems to be the day with least number of recorded crimes","bd257317":"### Number of Crimes recorded by districts","6de139db":"`Inference` : October is the months with most crimes","7d1fcfac":"Total Number of crimes is 150000, marking all the categories of crime that are less than 1500 (1%) as other offenses","bd44595e":"# <font color = 'blue'>San Francisco Crimes","6d900a8d":"## <font color = 'blue'> Importing Libraries and Data","ad198a3c":"`Inference` : Driving under the influence, previous warrents, Drug or Narcotic usage are the top 3 reasons for the arrests","79d136ca":"`Inference` : Southern district is the places where most crimes are recorded and the park district is where the least crimes are recorded","5a3a2878":"## <font color = 'blue'> Table of Contents\n    \n   #### [Introduction](#Section1)\n   #### [Summary Report](#Section2)\n   #### [Importing Libraries and Data](#Section3)\n   #### [Data Understand and Feature Engineering](#Section4)\n   #### [Exploratory Data Analysis](#Section5)","1e6506f6":"## <font color = 'blue'>Summary Report <a class=\"anchor\" id=\"Section2\"><\/a>\n\n- Larceny\/Theft is highly recorded crime with 26% of all the incidents\n- Fridays are the days where most crime is recorded, Saturday stands second\n- Southern District is the place where most crimes are recorded and Park district is the place where least crimes are recorded\n- 26% of all incidents ends up in arrest\n- Evenings(1500 - 1800) are the part of the day where most crimes are recorded, making friday evenings particularly bad\n- October and January are the months where most of the crimes are recorded respectively\n- January 1 is the day with highest number of recorded crimes and December 25 is the day with least number of recorded crimes\n- Driving under the influence, previous warrents, Drug or Narcotic usage are the top 3 reasons for the arrests\n- 43% of all incidents recorded in the Tenderlion district ends up in arrest, where 26% of all incidents in the city ends up in arrest","ec7253c0":"### Friday Nights, boon or blessings","db2de3e2":"`Inference` : Many crimes are under the category Larceny\/Theft, almost double to any other crime category","dd16f4f6":"## <font color = 'royalblue'> If you like my analysis please like","0998b2e5":"### Who gets you in San Francisco","2ce7f3c6":"`Inference` : Although there are less crimes recorded in Tenderlion district, the percentage of arrests is very high standing at 42.8%"}}