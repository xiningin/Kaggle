{"cell_type":{"c9a53067":"code","f7cf8fd2":"code","46396c80":"code","c827fc44":"code","d840cfa4":"code","66bffb81":"code","a8b72004":"code","3608e331":"code","2d80b482":"code","5358648c":"code","eb8f7db3":"code","f9d28f2c":"code","faba4a61":"code","11dc2686":"code","044638bd":"code","d3707aee":"code","1ed19bff":"code","695a5f1c":"code","b3e9de07":"code","60d89f57":"code","d4ea41b4":"code","c367fb97":"code","6d3069e7":"code","ed98506f":"code","1b87ba34":"code","2f72f5f7":"code","920a262c":"code","1b541697":"code","2f4b029f":"markdown","67b882bb":"markdown","55351654":"markdown","a3b369aa":"markdown","4f492ab3":"markdown","930fa8bf":"markdown","db03e321":"markdown","a1d56e30":"markdown","ab1f46b9":"markdown","d44f290f":"markdown","6b26628a":"markdown","908daf53":"markdown"},"source":{"c9a53067":"!git clone https:\/\/github.com\/rkuo2000\/yolov5\n%cd yolov5","f7cf8fd2":"!pip install pycocotools","46396c80":"#from utils.google_utils import *\n#attempt_download('weights\/yolov5s.pt')\n#attempt_download('weights\/yolov5m.pt')\n#attempt_download('weights\/yolov5l.pt')\n#attempt_download('weights\/yolov5x.pt')","c827fc44":"import os\nimport shutil\nimport numpy as np\nimport tqdm","d840cfa4":"from pycocotools.coco import COCO\ndata_source = COCO(annotation_file='\/kaggle\/input\/tacotrashdataset\/data\/annotations.json')","66bffb81":"# remapping label id to 0~1\nlabel_transfer = {5: 0, 12: 1}","a8b72004":"img_ids = data_source.getImgIds()\n\ncatIds = data_source.getCatIds()\ncategories = data_source.loadCats(catIds)\ncategories.sort(key=lambda x: x['id'])\nclasses = {}\ncoco_labels = {}\ncoco_labels_inverse = {}\nfor c in categories:\n    coco_labels[len(classes)] = c['id']\n    coco_labels_inverse[c['id']] = len(classes)\n    classes[c['name']] = len(classes)\n\nclass_num = {}","3608e331":"!mkdir -p tmp\/labels tmp\/images\nsave_base_path  = 'tmp\/labels\/'\nsave_image_path = 'tmp\/images\/'","2d80b482":"for index, img_id in tqdm.tqdm(enumerate(img_ids), desc='change .json file to .txt file'):\n    img_info = data_source.loadImgs(img_id)[0]\n    # \u5c07\u542b\u6587\u4ef6\u593e\u7684\u8def\u5f91\u4fee\u6539\u70ba\u6587\u4ef6\u540d\n    save_name = img_info['file_name'].replace('\/', '_')\n    # \u79fb\u53bb\u6587\u4ef6\u64f4\u5c55\u540d\n    file_name = save_name.split('.')[0]\n    # \u7372\u53d6\u55ae\u5f35\u5716\u50cf\u7684\u5bec\u548c\u9ad8\n    height = img_info['height']\n    width = img_info['width']\n    # \u8f49\u63db\u6240\u5f97txt\u6587\u4ef6\u5b58\u5132\u8def\u5f91\n    save_path = save_base_path + file_name + '.txt'\n    is_exist = False  # \u8a18\u9304\u5716\u7247\u662f\u5426\u5305\u542b\u76ee\u6a19\u5783\u573e\u985e\u578b\u5c0d\u8c61\n    with open(save_path, mode='w') as fp:\n        # \u6839\u64da\u5716\u7247\u7de8\u865f\u627e\u51fa\u5783\u573e\u5c0d\u8c61\u7684\u7de8\u865f\u96c6\u5408\n        annotation_id = data_source.getAnnIds(img_id)\n        boxes = np.zeros((0, 5))\n        if len(annotation_id) == 0:  # \u96c6\u5408\u5927\u5c0f\u70ba0\n            fp.write('')\n            continue\n        # \u7372\u53d6coco\u683c\u5f0f\u7684\u6a19\u7c64\n        annotations = data_source.loadAnns(annotation_id)\n        lines = ''  # \u8a18\u9304\u8f49\u63db\u5f8cyolo\u683c\u5f0f\u7684\u6a19\u7c64\n        # \u904d\u6b77\u5c0d\u8c61\u6a19\u7c64\u96c6\n        for annotation in annotations:\n            # \u7372\u53d6\u5783\u573e\u5c0d\u8c61\u7684\u6a19\u7c64\n            label = coco_labels_inverse[annotation['category_id']]\n            if label in label_transfer.keys():\n                # \u5783\u573e\u985e\u578b\u5c6c\u65bc\u76ee\u6a19\u5783\u573e\u985e\u578b\u5247\u9032\u884c\u683c\u5f0f\u8f49\u63db\n                is_exist = True\n                box = annotation['bbox']\n                if box[2] < 1 or box[3] < 1:\n                    # \u5982\u679c\u539f\u6a19\u7c64\u4e2d\u51fa\u73fe\u7121\u9577\u6216\u5bec\u6578\u64da\u7684\u60c5\u6cc1\u5247\u8df3\u904e\n                    continue\n                # top_x,top_y,width,height==>cen_x,cen_y,width,height\n                box[0] = round((box[0] + box[2] \/ 2) \/ width, 6)\n                box[1] = round((box[1] + box[3] \/ 2) \/ height, 6)\n                box[2] = round(box[2] \/ width, 6)\n                box[3] = round(box[3] \/ height, 6)\n                label = label_transfer[label]  # \u6a19\u7c64\u6620\u5c04\n                if label not in class_num.keys():\n                    class_num[label] = 0\n                class_num[label] += 1\n                lines = lines + str(label)  # \u5148\u5b58\u5132\u6a19\u7c64\n                for i in box:  # \u518d\u5b58\u5132\u4f4d\u7f6e\u4fe1\u606f\n                    lines += ' ' + str(i)\n                lines += '\\n'  # \u63db\u884c\n        fp.writelines(lines)\n    if is_exist:\n        # \u5b58\u5728\u76ee\u6a19\u985e\u578b\u5c0d\u8c61\uff0c\u5247\u62f7\u8c9d\u5716\u50cf\u81f3\u6307\u5b9a\u76ee\u9304\n        shutil.copy('\/kaggle\/input\/tacotrashdataset\/data\/{}'.format(img_info['file_name']), os.path.join(save_image_path, save_name))\n    else:\n        # \u4e0d\u5b58\u5728\u5247\u522a\u9664\u6240\u751f\u6210\u7684\u6a19\u7c64\u6587\u4ef6\n        os.remove(save_path)","5358648c":"!pip install split-folders","eb8f7db3":"import splitfolders\nsplitfolders.ratio('tmp', output=\"taco\", seed=1337, ratio=(.8, 0.1,0.1)) ","f9d28f2c":"#!python train.py --img 320 --batch 1 --epochs 100 --data \/kaggle\/input\/yolov5-taco-models\/taco2.yaml --cfg models\/yolov5s.yaml --weights yolov5s.pt\n#!python train.py --img 320 --batch 1 --epochs 100 --data \/kaggle\/input\/yolov5-taco-models\/taco2.yaml --cfg models\/yolov5s.yaml --weights \/kaggle\/input\/yolov5-taco-models\/taco2_epoch100_best.pt\n#!python train.py --img 320 --batch 1 --epochs 100 --data \/kaggle\/input\/yolov5-taco-models\/taco2.yaml --cfg models\/yolov5s.yaml --weights \/kaggle\/input\/yolov5-taco-models\/taco2_epoch200_best.pt\n!python train.py --img 320 --batch 1 --epochs 100 --data \/kaggle\/input\/yolov5-taco-models\/taco2.yaml --cfg models\/yolov5s.yaml --weights \/kaggle\/input\/yolov5-taco-models\/taco2_epoch300_best.pt","faba4a61":"## Model weights\n#!cp \/kaggle\/input\/yolov5-taco-models\/taco2_epoch300_best.pt weights\/best.pt\n!cp runs\/exp0\/weights\/best.pt weights","11dc2686":"!ls taco\/test\/images","044638bd":"from IPython.display import Image","d3707aee":"!python detect.py --weights weights\/best.pt --img 320 --conf 0.4 --source taco\/test\/images\/batch_1_000000.jpg","1ed19bff":"Image('inference\/output\/batch_1_000000.jpg')","695a5f1c":"!python detect.py --weights weights\/best.pt --img 320 --conf 0.4 --source taco\/test\/images\/batch_5_000017.JPG ","b3e9de07":"Image('inference\/output\/batch_5_000017.JPG')","60d89f57":"!python detect.py --weights weights\/best.pt --img 320 --conf 0.4 --source taco\/test\/images ","d4ea41b4":"Image('inference\/output\/batch_7_000114.JPG')","c367fb97":"Image('inference\/output\/batch_8_000009.jpg')","6d3069e7":"Image('inference\/output\/batch_8_000020.jpg')","ed98506f":"Image('inference\/output\/batch_8_000027.jpg')","1b87ba34":"Image('inference\/output\/batch_8_000069.jpg')","2f72f5f7":"Image('inference\/output\/batch_8_000085.jpg')","920a262c":"Image('inference\/output\/batch_9_000001.jpg')","1b541697":"Image('inference\/output\/batch_9_000074.jpg')","2f4b029f":"### read annotations.json","67b882bb":"# YOLOv5 for TACO\n## train & detect TACO-2","55351654":"### collect images & labels","a3b369aa":"## Repro [Github](https:\/\/github.com\/ultralytics\/yolov5)","4f492ab3":"## Train Model","930fa8bf":"### Split Folder \n#### split into train, val, test (images & labels under each folder)","db03e321":">     $ python train.py --data coco.yaml --cfg yolov5s.yaml --weights '' --batch-size 64\n                                             yolov5m                                40\n                                             yolov5l                                24\n                                             yolov5x                                16","a1d56e30":"## Detect test images folder","ab1f46b9":"## Prepare Dataset","d44f290f":"### Display Test Images","6b26628a":">      'Clear plastic bottle': 5\n>      'Plastic bottle cap': 7\n>      'Drink can': 12\n>      'Other plastic': 29\n>      'Plastic film': 36\n>      'Other plastic wrapper': 39\n>      'Unlabeled litter': 58\n>      'Cigarette': 59","908daf53":"## Detect Trash"}}