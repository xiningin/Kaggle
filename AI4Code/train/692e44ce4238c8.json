{"cell_type":{"1075fdec":"code","40e2afa9":"code","d1dd5554":"code","9ff7b5be":"code","e7f97264":"code","b6c990fd":"code","a0991bc8":"code","fe040a87":"code","f6b0039e":"code","50dbfad9":"code","2bc1a217":"code","a8df3bd5":"code","159ba368":"code","6dd4c2ec":"code","a8cec236":"code","9852c542":"code","1c547bac":"code","3a2bd0ea":"code","6e39de59":"code","c5a1b7da":"markdown","f1b4e02c":"markdown","28e1b428":"markdown","70b2ed9d":"markdown","0bda620e":"markdown","d361d322":"markdown","3fb79e80":"markdown","c7081757":"markdown","882310dd":"markdown","b1e5d41f":"markdown","583dd6af":"markdown"},"source":{"1075fdec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","40e2afa9":"import pylab\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d1dd5554":"%matplotlib inline","9ff7b5be":"df=pd.read_csv('\/kaggle\/input\/crime-in-berlin-2012-2019\/Berlin_crimes.csv')","e7f97264":"sns.distplot(df['Drugs'])","b6c990fd":"sns.heatmap(df.corr())","a0991bc8":"df.columns","fe040a87":"sns.lineplot(df.Year,df.Drugs)","f6b0039e":"years={}\nfor index in df.index:\n    key = df['Year'][index]\n    try:\n        if key not in years.keys(): \n            years[df['Year'][index]]=[]\n        years[df['Year'][index]].append(df['Drugs'][index])\n    except:\n        years[df['Year'][index]]=df['Drugs'][index]       \nfor y in years:\n    years[y]=sum(years[y])\/len(years[y])","50dbfad9":"xVals,yVals=[],[]\nfor e in years:\n    xVals.append([e])\n    yVals.append(years[e])","2bc1a217":"from sklearn.model_selection import train_test_split","a8df3bd5":"X_train, X_test, y_train, y_test = train_test_split(xVals, yVals,test_size=0.4, random_state=0)","159ba368":"from sklearn.linear_model import LinearRegression","6dd4c2ec":"lrmodel=LinearRegression()\nlrmodel.fit(X_train,y_train)","a8cec236":"predictions=lrmodel.predict(X_test)","9852c542":"plt.scatter(y_test,predictions)","1c547bac":"from sklearn import metrics","3a2bd0ea":"print(\"MEA: \" ,metrics.mean_absolute_error(y_test,predictions))\nprint(\"MSE: \" ,metrics.mean_squared_error(y_test,predictions))\nprint(\"RMSE: \",np.sqrt(metrics.mean_squared_error(y_test,predictions)))","6e39de59":"def rSquared(observed, predicted):\n    error = ((predicted - observed)**2).sum()\n    meanError = error\/len(observed)\n    return 1 - (meanError\/np.var(observed))\n\nprint(rSquared(y_test,predictions))","c5a1b7da":"Looking at corelation between the data","f1b4e02c":"Predicting Drug related crimes in Berlin,Germany.","28e1b428":"Regression Evaluation","70b2ed9d":"Validate data","0bda620e":"Running predictions","d361d322":"Read data","3fb79e80":"Looking at distribution of data","c7081757":"Split data into training and testing","882310dd":"Calculating mean of crime data for each year","b1e5d41f":"Calculating R-Squared values\n\nR-squared is a statistical measure of how close the data are to the fitted regression line.","583dd6af":"Training the model"}}