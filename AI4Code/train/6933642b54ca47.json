{"cell_type":{"80144b5f":"code","8832cc9a":"code","f89c97bd":"code","81885dda":"code","27895393":"code","125b3857":"code","16c91a71":"code","c3ec4885":"code","f1c999bf":"code","a1616760":"code","31421219":"code","d66fb7a5":"code","3bbbf6e8":"code","e452eb90":"code","c1b7b0fe":"code","d4c6ef43":"code","bb551f41":"code","c2a2764c":"code","129cefc4":"code","41f73155":"code","767e4198":"code","d7df594a":"code","877aa2fb":"code","f33be0e2":"code","a210842a":"code","80412245":"code","21050a9e":"code","1e709cf9":"code","b42ca46a":"markdown","b88312e1":"markdown","f9c785fa":"markdown","214f4493":"markdown","3dec159b":"markdown","bc1543bf":"markdown","657760d1":"markdown","6749425b":"markdown","997e9cc5":"markdown","09d8ef78":"markdown","289f251b":"markdown","b94348b6":"markdown","9927d32f":"markdown","6edb17c8":"markdown","b8f7dca3":"markdown","6903c269":"markdown","c884472d":"markdown","9a09095a":"markdown","47a0ef98":"markdown"},"source":{"80144b5f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport cufflinks as cf\ncf.go_offline()","8832cc9a":"test = pd.read_csv('..\/input\/titanic\/test.csv')\ntrain = pd.read_csv('..\/input\/titanic\/train.csv')","f89c97bd":"#more detailed look at what data is missing:\ntotal = train.isnull().sum().sort_values(ascending = False)\npercent_1 = train.isnull().sum()\/train.isnull().count() * 100\npercent_2 = (round(percent_1, 1)).sort_values(ascending = False)\nmissing_data = pd.concat([total, percent_2], axis = 1, keys=['Total', '%'])\nmissing_data.head(10)","81885dda":"survived = 'Survived'\nnotsurvived = 'Not Survived'\nfig, axes = plt.subplots(1, 2, figsize = (10, 4))\nWomen = train[train['Sex'] == 'female']\nMen = train[train['Sex'] == 'male']\nax = sns.distplot(Women[Women['Survived'] == 1].Age.dropna(), bins=18, label = survived, ax = axes[0], kde = False)\nax = sns.distplot(Women[Women['Survived'] == 0].Age.dropna(), bins=40, label = notsurvived, ax = axes[0], kde = False)\nax.legend()\nax.set_title('Female')\nax = sns.distplot(Men[Men['Survived'] == 1].Age.dropna(), bins=18, label = survived, ax = axes[1], kde = False)\nax = sns.distplot(Men[Men['Survived'] == 0].Age.dropna(), bins=40, label = notsurvived, ax = axes[1], kde = False)\nax.legend()\n_ = ax.set_title('Male')","27895393":"sns.barplot('Embarked', 'Survived', data = train)","125b3857":"sns.barplot('Pclass', 'Survived', data = train)","16c91a71":"data = [train, test]\nfor dataset in data:\n    dataset['Relatives'] = dataset['SibSp'] + dataset['Parch']\n    dataset.loc[dataset['Relatives'] > 0, 'Alone'] = 0\n    dataset.loc[dataset['Relatives'] == 0, 'Alone'] = 1\n    dataset['Alone'] = dataset['Alone'].astype(int)\ntrain['Alone'].value_counts()\nsns.countplot(x = 'Alone',data = train)\nsns.factorplot('Relatives','Survived', data=train, aspect = 2.5, )","c3ec4885":"sns.swarmplot(x='Survived',y='Fare', data=train)\nsns.factorplot(x = 'Survived',y = 'Fare', data=train, aspect = 2.5, )","f1c999bf":"data = [train, test]\nfor dataset in data:\n    mean = train[\"Age\"].mean()\n    std = test[\"Age\"].std()\n    is_null = dataset[\"Age\"].isnull().sum()\n    rand_age = np.random.randint(mean - std, mean + std, size = is_null)\n    age_slice = dataset[\"Age\"].copy()\n    age_slice[np.isnan(age_slice)] = rand_age\n    dataset[\"Age\"] = age_slice\n    dataset[\"Age\"] = train[\"Age\"].astype(int)\n\ntrain[\"Age\"].isnull().sum()","a1616760":"train.drop('Cabin',axis = 1,inplace = True)\ntrain.head()","31421219":"commonvalue = 'S'\ndata = [train, test]\nfor dataset in data:\n    dataset['Embarked'] = dataset['Embarked'].fillna(commonvalue)\n    \ntrain[\"Embarked\"].isnull().sum()","d66fb7a5":"train.info()","3bbbf6e8":"#Converting 'Sex' to numeric\ngenders = {\"male\": 0, \"female\": 1}\ndata = [train, test]\nfor dataset in data:\n    dataset['Sex'] = dataset['Sex'].map(genders)  \n#Converting Embarked to numeric\nports = {\"S\": 0, \"C\": 1, \"Q\": 2}\ndata = [train, test]\nfor dataset in data:\n    dataset['Embarked'] = dataset['Embarked'].map(ports)","e452eb90":"train.drop(['Name','Ticket'],axis = 1,inplace = True)","c1b7b0fe":"train.head(15)","d4c6ef43":"from sklearn.model_selection import train_test_split","bb551f41":"X_train, X_test, Y_train, Y_test = train_test_split(train.drop('Survived',axis = 1), \n                                                    train['Survived'], test_size=0.5, \n                                                    random_state = 42)","c2a2764c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom sklearn.metrics import classification_report","129cefc4":"clf = LogisticRegression()\nclf.fit(X_train,Y_train)\n\npred = clf.predict(X_test)","41f73155":"hit_rate = accuracy_score(Y_test, pred)\nerror_rate = 1 - hit_rate","767e4198":"hit_rate * 100","d7df594a":"error_rate * 100","877aa2fb":"print(classification_report(Y_test,pred))","f33be0e2":"print(confusion_matrix(Y_test,pred))","a210842a":"len(pred)","80412245":"len(test)","21050a9e":"submission = pd.DataFrame({ \"PassengerId\": X_test['PassengerId'], \"Survived\": pred})\n\nsubmission.head()","1e709cf9":"submission.to_csv('MySubmission.csv', index = False)","b42ca46a":"# Logistic Regression","b88312e1":"We were able to notice that those who paid higher Fare, had higher survival rates. The graph showed that at 500, the difference is even greater","f9c785fa":"To improve the visualization, I will create a new attribute called 'Relatives', here I will join SibSP and Parch. We will do an analysis on people who were accompanied or alone:","214f4493":"For Pclass 3, less than half survived, the rates are very small, but the same cannot be said for Pclass 1, here more than 60% survived.","3dec159b":"Now we will do the same with the Embarked:","bc1543bf":"It is noteworthy that WOMEN had more have higher rates of **survival**, mainly in the age group between 15 and 40 years. For MEN, the highest rate of **non-survivors** is between 15 and 40 years.","657760d1":"Analysis to see if sex and age correlate with survival rate","6749425b":"# Converting Categorical Features","997e9cc5":"# Exploratory Data Analysis","09d8ef78":"Survivors and Pclass:","289f251b":"Recalling that the attributes that had the missing data were the Cabin, Embarked and Age. For Age, we will convert the missing to a mean:","b94348b6":"Check the **performance** of our model. How many rankings did he hit","9927d32f":"# Importing the libraries and the datas","6edb17c8":"Those who got gate C, had higher numbers of survivors. At the S and Q gates less than 50% managed to survive.","b8f7dca3":"# Missing Data","6903c269":"The Cabin column will be removed as there are many missing elements","c884472d":"Embarked has few missing elements (2), so it will be filled with a common value:","9a09095a":"We can see that there are more people who were alone and the chances of surviving are greater for those who have up to 3 Relatives.","47a0ef98":"# Data Cleaning"}}