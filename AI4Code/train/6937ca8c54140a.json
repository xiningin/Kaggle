{"cell_type":{"276aa24e":"code","1e96b5c8":"code","06debb4e":"code","b0f8dec5":"code","cfff3b2f":"code","bfc48242":"code","0eab1f80":"code","2da33f4f":"code","2b74fa26":"code","f76c6b2d":"code","657a8f58":"code","b4668029":"code","fece4309":"code","7087a1f7":"code","9acdb65f":"code","61dd0b83":"code","12281405":"code","b7ed136c":"code","3a0eccf1":"code","237a1e40":"code","933f05a0":"code","5cb231b5":"markdown"},"source":{"276aa24e":"import numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","1e96b5c8":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain = df.drop(columns='PassengerId')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","06debb4e":"train.head()","b0f8dec5":"train.columns","cfff3b2f":"test.columns","bfc48242":"train.info()","0eab1f80":"train.describe(include='O')","2da33f4f":"train.isnull().sum()","2b74fa26":"train['Cabin'].fillna(train['Cabin'].mode()[0],inplace=True)\ntrain['Embarked'].fillna(train['Embarked'].mode()[0],inplace=True)\ntrain['Age'].fillna(train['Age'].mode()[0],inplace=True)","f76c6b2d":"train.describe(include='O')","657a8f58":"train.isnull().sum()","b4668029":"train.drop(columns=['Name','Ticket'],inplace=True)\ntrain.info()","fece4309":"full_data = [train]\nfor train in full_data:\n    train['FamilySize'] = train['SibSp'] + train['Parch'] + 1\n\ntrain.drop(columns=['SibSp','Parch'],inplace=True)","7087a1f7":"train.info()","9acdb65f":"from sklearn import preprocessing\nfor column in ['Sex','Cabin','Embarked']:\n    le = preprocessing.LabelEncoder()\n    le.fit(train[column])\n    train[column] = le.transform(train[column])\n\ntrain.head()","61dd0b83":"\nsns.heatmap(train.corr(),linewidths=0.1,vmax=1.0, \n            square=True, cmap=colormap, linecolor='white', annot=True)","12281405":"sns.heatmap(train.corr())","b7ed136c":"from sklearn.model_selection import train_test_split\nseed = 42\ntest_size = 0.22\ny_train = train['Survived']\nx_train = train.drop(['Survived'], axis=1)\n\nx_train , x_test , y_train , y_test = train_test_split(x_train , y_train ,test_size = 0.1,random_state = 0)","3a0eccf1":"test['Cabin'].fillna(test['Cabin'].mode()[0],inplace=True)\ntest['Embarked'].fillna(test['Embarked'].mode()[0],inplace=True)\ntest['Age'].fillna(test['Age'].mode()[0],inplace=True)\ntest.drop(columns=['Name','Ticket'],inplace=True)\ntest['Fare'].fillna(test['Fare'].mode()[0],inplace=True)\n\nfor column in ['Sex','Cabin','Embarked']:\n    le = preprocessing.LabelEncoder()\n    le.fit(test[column])\n    test[column] = le.transform(test[column])","237a1e40":"full_data = [test]\nfor test in full_data:\n    test['FamilySize'] = test['SibSp'] + test['Parch'] + 1\n\ntest.drop(columns=['SibSp','Parch'],inplace=True)\nTest=test.drop(columns='PassengerId')\nTest.info()","933f05a0":"from xgboost.sklearn import XGBClassifier\nmodel = XGBClassifier(learning_rate=0.001,n_estimators=2500,\n                                max_depth=4, min_child_weight=0,\n                                gamma=0, subsample=0.7,\n                                colsample_bytree=0.7,\n                                scale_pos_weight=1, seed=27,\n                                reg_alpha=0.00006)\nmodel.fit(x_train, y_train)\npred = model.predict(Test)\n\nsubmission = pd.DataFrame({\n        \"PassengerId\": test[\"PassengerId\"],\n        \"Survived\": pred\n    })\nsubmission.to_csv('submission.csv', index=False)\nprint(\"done\")","5cb231b5":"# \u7b2c\uff13\u56de FUN AI \u30cf\u30f3\u30ba\u30aa\u30f3kaggle\u90e8\u9580\n\u516c\u7acb\u306f\u3053\u3060\u3066\u672a\u6765\u5927\u5b66\u3000FUN AI\u30b5\u30fc\u30af\u30eb\u3067\u4f7f\u3046\u8cc7\u6599\u3067\u3059\u3002B1\u52a0\u85e4\u307e\u308b\n\nThis is a material used at the Future Hakodate Future University FUN AI Circle Hands-on.\n\n## \u4eca\u65e5\u306e\u30c6\u30fc\u30de ~\u53ef\u8996\u5316\u3092\u5b9f\u969b\u306b\u3057\u3066\u307f\u3088\u3046\uff5e\n\u4eca\u65e5\u306f\u751f\u5b58\u7387\u3068\u4ed6\u306e\u7279\u5fb4\u91cf\u306e\u76f8\u95a2\u3092\u81ea\u5206\u3067\u8abf\u3079\u3001\u305d\u308c\u3092\u9069\u5207\u306a\u30b0\u30e9\u30d5\u3092\u7528\u3044\u3066\u53ef\u8996\u5316\u3092\u884c\u3044\u307e\u3059\u3002**\u4eca\u65e5\u306f\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u3092\u76ee\u6a19\u306b\u4f5c\u696d\u3057\u3066\u304f\u3060\u3055\u3044\u3002**\u4f5c\u696d\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n1. \u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u5927\u307e\u304b\u306b\u78ba\u8a8d\uff08\u30c7\u30fc\u30bf\u306e\u5927\u304d\u3055\u3001\u578b\u3001\u6b20\u640d\u3057\u3066\u306a\u3044\u500b\u6570\u3001\u5e73\u5747\u3001\u6a19\u6e96\u504f\u5dee\u306a\u3069\uff09\n    * \u6b20\u640d\u5024\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3081\u305d\u3063\u3069 .isnull().any() \u304c\u79c1\u306f\u597d\u304d\u3002\n2. \u5206\u6790\u3067\u304d\u308b\u3088\u3046\u306b\u5909\u63db\u3092\u884c\u3046\n    * \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092\u5909\u63db\u3067\u304d\u308bLabelEncoder\u3092\u4f7f\u3046(preprocessing\u306f\u4fbf\u5229\u306a\u95a2\u6570\u591a\u3044\u306e\u3067\u304a\u6687\u304c\u3042\u308c\u3070\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u8aad\u3093\u3067\u307f\u3066\u306d\u3002\uff09\n    * \u6b20\u640d\u5024\u306e\u7a74\u57cb\u3081\u3092\u884c\u3046\uff08fillna\u3084dropna\u306a\u3069\u304c\u3042\u308b\u3002\u3061\u306a\u307f\u306bpreprocessing\u306b\u3082\u7a74\u57cb\u3081\u30e1\u30bd\u30c3\u30c9\u3042\u308b\uff09\n3. \u3069\u306e\u7279\u5fb4\u91cf\u304c\u6700\u3082\u751f\u5b58\u7387\u3068\u76f8\u95a2\u304c\u3042\u308b\u304b\u898b\u308b\uff08\u7279\u5fb4\u91cf\u9078\u629e\u306e\u305f\u3081\uff09\n    * \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3082\u5909\u63db\u6e08\u307f\u306a\u306e\u3067\u53ef\u8996\u5316\u3067\u304d\u308b\u3002\n\n### \u76ee\u6a19\n\u4ee5\u4e0b\u3092\u884c\u3063\u3066\u6700\u7d42\u76ee\u6a19\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u8868\u793a\u3055\u305b\u307e\u305b\u3046\n* \u540c\u4e57\u3057\u3066\u3044\u308b\u5bb6\u65cf\u306e\u4eba\u6570\u3092\u8a08\u7b97\u3057\u3066\u300cFammilySize\u300d\u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3092\u4f5c\u3063\u3066\u307f\u308b\n* \u6b20\u640d\u5024\u3092\u57cb\u3081\u308b\n* \u540d\u524d\u3068\u30c1\u30b1\u30c3\u30c8\u756a\u53f7\u306f\u524a\u9664\u3059\u308b\n* \u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u4f5c\u6210\u3059\u308b"}}