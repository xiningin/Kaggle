{"cell_type":{"b59be5c0":"code","17545012":"code","93ad9b5a":"code","0132f37c":"code","c7c0ffb6":"code","ce67d4af":"code","42da9931":"code","5a08b968":"code","e587050e":"markdown","54ebf813":"markdown","a45b827b":"markdown","d8ad3eac":"markdown","e659ebc5":"markdown","e0bc4bba":"markdown","dad648f0":"markdown"},"source":{"b59be5c0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pylab as plt\nimport os\n!ls -GFlash --color ..\/input\/","17545012":"X_test = pd.read_csv('..\/input\/X_test.csv')\nX_train = pd.read_csv('..\/input\/X_train.csv')\ny_train = pd.read_csv('..\/input\/y_train.csv')\nss = pd.read_csv('..\/input\/sample_submission.csv')","93ad9b5a":"X_train.head()","0132f37c":"y_train['count'] = 1\ny_train.groupby('surface').sum()['count'] \\\n    .sort_values(ascending=True) \\\n    .plot(kind='barh', color='grey', figsize=(15, 5), title='Count of Surface Type')\nplt.show()","c7c0ffb6":"from bokeh.io import show, output_notebook\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource, HoverTool\noutput_notebook()","ce67d4af":"for surface in y_train['surface'].unique():\n    first = y_train.loc[y_train['surface'] == surface].index[0]\n    series = X_train.loc[X_train['series_id'] == first]\n    p = figure(width=1000, height=200, title='{}- Angular Velocity'.format(surface))\n    source = ColumnDataSource(series)\n    avX = p.line(x='measurement_number', y='angular_velocity_X', source=source, color='red')\n    p.add_tools(HoverTool(tooltips='angular_velocity_X', renderers=[avX]))\n    avY = p.line(x='measurement_number', y='angular_velocity_Y', source=source, color='blue')\n    p.add_tools(HoverTool(tooltips='angular_velocity_Y', renderers=[avY]))\n    avZ = p.line(x='measurement_number', y='angular_velocity_Z', source=source, color='orange')\n    p.add_tools(HoverTool(tooltips='angular_velocity_Z', renderers=[avZ]))\n    show(p)","42da9931":"for surface in y_train['surface'].unique():\n    first = y_train.loc[y_train['surface'] == surface].index[0]\n    series = X_train.loc[X_train['series_id'] == first]\n    p = figure(width=1000, height=200, title='{}- Orientation'.format(surface))\n    source = ColumnDataSource(series)\n    avX = p.line(x='measurement_number', y='orientation_X', source=source, color='red')\n    p.add_tools(HoverTool(tooltips='orientation_X', renderers=[avX]))\n    avY = p.line(x='measurement_number', y='orientation_Y', source=source, color='blue')\n    p.add_tools(HoverTool(tooltips='orientation_Y', renderers=[avY]))\n    avZ = p.line(x='measurement_number', y='orientation_Z', source=source, color='orange')\n    p.add_tools(HoverTool(tooltips='orientation_Z', renderers=[avZ]))\n    show(p)","5a08b968":"for surface in y_train['surface'].unique():\n    first = y_train.loc[y_train['surface'] == surface].index[0]\n    series = X_train.loc[X_train['series_id'] == first]\n    p = figure(width=1000, height=200, title='{}- linear acceleration'.format(surface))\n    source = ColumnDataSource(series)\n    avX = p.line(x='measurement_number', y='linear_acceleration_X', source=source, color='red')\n    p.add_tools(HoverTool(tooltips='linear_acceleration_X', renderers=[avX]))\n    avY = p.line(x='measurement_number', y='linear_acceleration_Y', source=source, color='blue')\n    p.add_tools(HoverTool(tooltips='linear_acceleration_Y', renderers=[avY]))\n    avZ = p.line(x='measurement_number', y='linear_acceleration_Z', source=source, color='orange')\n    p.add_tools(HoverTool(tooltips='linear_acceleration_Z', renderers=[avZ]))\n    show(p)","e587050e":"# Linear Acceleration of Different Surfaces","54ebf813":"# Orientation of Different Surfaces","a45b827b":"# Angular Velocity of Different Surfaces","d8ad3eac":"## Target\nDifferent surfaces. Most common is concrete. Least common is hard tiles.","e659ebc5":"# Lets Help some robots navigate!\nIn this competition we are tasked to help robots recognize the floor surface they\u2019re standing on. We are provided with data collected from Inertial Measurement Units (IMU sensors).","e0bc4bba":"## Training Data\nWe have:\n- X, Y, and Z orientation\n- X, Y, Z angular velocity\n- X, Y, Z linear acceleration\n- Measurements come in order for each series","dad648f0":"## Lets plot what our training data looks like for each surface!\nJust to get an idea of what we're working with, lets plot a single example of each floor type."}}