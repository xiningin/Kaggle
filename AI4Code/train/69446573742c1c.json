{"cell_type":{"3fa833a2":"code","ca5a11f3":"code","238aab11":"code","54554160":"markdown","c3cedb50":"markdown"},"source":{"3fa833a2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","ca5a11f3":"df = pd.read_csv('\/kaggle\/input\/kpmi-mbti-mod-test\/kpmi_data.csv', low_memory=False)\n\ndf.head()","238aab11":"scales = ['e', 'i', 's', 'n', 't', 'f', 'j', 'p']\n\n# Preparing 4x2 grid for charts.\nfig, axs = plt.subplots(4, 2, figsize=(13,13), sharey=True, tight_layout=True)\n\nfor i, scale_name in enumerate(scales):\n    # Grouping data by scale values and calculating percent of satisfied with each value.\n    g = df.groupby(f'scale_{scales[i]}').agg({'satisfied':[lambda x: round(100*x.sum()\/ x.count(), 2)]})\n    \n    g.columns = g.columns.map('_'.join).str.replace('<lambda>','percent')\n    # Background grid.\n    axs[i\/\/2, i%2].grid()\n    # Draw grid behind other graph elemnts.\n    axs[i\/\/2, i%2].set_axisbelow(True)\n    axs[i\/\/2, i%2].bar(g.index, g['satisfied_percent'])\n    axs[i\/\/2, i%2].set_title(f'Scale {scales[i].upper()}')\n    plt.setp(axs[i\/\/2, i%2], xlabel='Scale raw value')\n    if (i+1)%2:\n        # Inverting X-axis values of every first graph in a row for better visual perception.\n        axs[i\/\/2, i%2].invert_xaxis()\n        plt.setp(axs[i\/\/2, i%2], ylabel='Percent of satisfied')\n","54554160":"Load dataset and a quick look to data structure:","c3cedb50":"Script for plotting the distribution of the percentage of satisfied respondents, depending on the value of each of 8 scales.\n\nImports:"}}