{"cell_type":{"6af8c952":"code","83c0d295":"code","b03f854b":"code","9808e60f":"code","28ac98d0":"code","382cac0f":"code","1001879e":"code","1eb3156e":"code","ccdffdcf":"code","177f19ce":"code","8d6caf6b":"code","a1ad3e48":"code","03b88570":"code","d554258f":"code","2ccdc415":"code","761825cc":"code","798b6b1f":"code","03a251df":"code","c3dc9c74":"markdown","9d851059":"markdown","1e4b7d36":"markdown","eb6e95fe":"markdown","f05c6145":"markdown","7fa7187c":"markdown","dfac87b6":"markdown"},"source":{"6af8c952":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\n# Any results you write to the current directory are saved as output.","83c0d295":"dataframe = pd.read_csv(\"..\/input\/train.csv\")\ndataTest = pd.read_csv(\"..\/input\/test.csv\")\ndataframe.head(3)","b03f854b":"def applyCabin(x):\n    if pd.isnull(x) or (x[0] not in [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"]):\n        return \"N\"\n    else:\n        return x[0].upper()\ndef newCabin1(dataframe):\n    newCabin = dataframe.Cabin.apply(applyCabin)\n    dataframe[\"newCabin\"] = newCabin\n    return dataframe\nnewCabin = newC\nnewCabin.head(4)","9808e60f":"dataframe[\"newCabin\"] = newCabin\ndataframe.head(3)","28ac98d0":"#\u7b80\u5355\u5206\u6790Cabin\u7684\u5e78\u5b58\ndataframe.newCabin[dataframe.Survived==1].value_counts()","382cac0f":"dataframe.Embarked.value_counts()\/dataframe.shape[0]\n","1001879e":"#dataframe = dataframe.drop([\"Name\",\"PassengerId\",\"Ticket\",\"Cabin\"],axis=1)\ndef dropTezheng(dataframe,numlist):\n    dataframe = dataframe.drop(numlist,axis=1)\n    return dataframe\ndataframe = dropTezheng(dataframe,[\"Name\",\"PassengerId\",\"Ticket\",\"Cabin\"])\ndataframe.head(3)","1eb3156e":"def fiiNan(dataframe):\n    dataframe = dataframe.fillna(axis=0,method=\"ffill\")\n    return dataframe","ccdffdcf":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import Normalizer\ndef onehot(dataframe):\n    dataframe = pd.get_dummies(dataframe)\n    return dataframe\ndef OSN(dataframe):    \n    ss = StandardScaler()\n    ss.fit(dataframe)\n    dataframe = ss.transform(dataframe)\n    \n    nn = Normalizer()\n    nn.fit(dataframe)\n    dataframe = nn.transform(dataframe)\n    return pd.DataFrame(dataframe)","177f19ce":"dataframe = fiiNan(dataframe)  #\u7f3a\u5931\u503c\u5904\u7406\n#dataframe = OSN(dataframe)\n#dataframe.head(3)\ndef getOneHotResult(dataframe,stringlist):\n    dataOneHot = onehot(dataframe[stringlist])  #onehot\n    dataframe = dataframe.drop(stringlist,axis=1)    #\u4e22\u5f03\u4e00\u90e8\u5206\n    dataframe = pd.concat([dataframe,dataOneHot],axis=1)  #\u5408\u5e76\n    return dataframe","8d6caf6b":"dataframe = getOneHotResult(dataframe,[\"Sex\",\"Embarked\",\"newCabin\"])\ndataframe.head(3)","a1ad3e48":"def dataProcess(dataframe):\n    dataframe = newCabin1(dataframe)\n    dataframe = dropTezheng(dataframe,[\"Name\",\"PassengerId\",\"Ticket\",\"Cabin\"])\n    dataframe = fiiNan(dataframe)  #\u7f3a\u5931\u503c\u5904\u7406\n    dataframe = getOneHotResult(dataframe,[\"Sex\",\"Embarked\",\"newCabin\"])\n    return dataframe","03b88570":"train_Y = dataframe[\"Survived\"]\ntrain_X = dataframe.drop([\"Survived\"],axis=1)\ntrain_X = OSN(train_X)  #\u7279\u5f81\u79bb\u6563\u5316\uff0c\u5f52\u4e00\u5316\n\ntest_X = dataTest\ngender_index = test_X[\"PassengerId\"]\ntest_X = dataProcess(test_X)\ntest_X.head(3)","d554258f":"gender_index.head(3)","2ccdc415":"test_X = OSN(test_X)\n\n    \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.model_selection import cross_validate\nlr = LogisticRegression()\n\nrf = RandomForestClassifier(n_estimators=100,min_samples_split=2,max_depth=5,min_samples_leaf=3,max_features=3)\n","761825cc":"#zz  = dataframe[train_Y!=lr.predict(train_X)]\n#zz.head(20)\n","798b6b1f":"\n#result = lr.predict(test_X)\n#result = pd.DataFrame(result)\n#newResult = pd.DataFrame(gender_index)\n#newResult['Survived'] = result\n#newResult.to_csv(\"result.csv\",index=False)\n","03a251df":"rf.fit(train_X,train_Y)\nresult2 = rf.predict(test_X)\nresult2 = pd.DataFrame(result2)\nnewResult2 = pd.DataFrame(gender_index)\nnewResult2['Survived'] = result2\nnewResult2.to_csv(\"result_rf_v1.csv\",index=False)","c3dc9c74":"Canbin\u8231\u5ba4\u7684\u65b0\u5904\u7406\u3002\n     \u5982\u679c\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5c31\u662fN\n     \u5426\u5219\u9009\u62e9\u7b2c\u4e00\u4e2a\u5b57\u6bcd","9d851059":"\u5c06Nan\u503c\u586b\u4e0a\u53bb","1e4b7d36":"\u7b5b\u9009\u7279\u5f81","eb6e95fe":"onehot standard normalize","f05c6145":"\u5206\u6790\u539f\u59cb\u7684\u6a21\u578b\u9884\u6d4b\u7ed3\u679c","7fa7187c":"\u6570\u636eonehot\u4e4b\u540e\uff0c\u8fdb\u884c\u8fde\u63a5","dfac87b6":"\u767b\u8239\u5730\u70b9\u6bd4\u4f8b"}}