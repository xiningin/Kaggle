{"cell_type":{"52c0fe78":"code","0c5299c4":"code","c7ad7f7b":"code","910defac":"code","ba360ddb":"code","3c786807":"code","dafea061":"code","d5f72bc2":"code","4045ae5a":"code","4d4f6b85":"code","a4bb683f":"code","f3bfde28":"code","8c0c4396":"code","ba69886f":"code","297e56d7":"code","2b2b8239":"code","d7026101":"code","07df46d5":"code","f5940984":"code","893a0830":"code","4bcf5e19":"code","41fa1914":"code","4bddb2c9":"code","274b89d4":"code","e67a8ece":"code","6fe7e772":"code","363cbd04":"markdown","a65989e8":"markdown","7962bf97":"markdown","bc2bc6bf":"markdown","c24dab73":"markdown","0701fc39":"markdown","eea1e685":"markdown","ae97204c":"markdown","5635aa47":"markdown","1a466113":"markdown","eb34ddb1":"markdown","d45791ad":"markdown","79d7c2be":"markdown","3741d384":"markdown","2ac78f23":"markdown","79ec7704":"markdown","ca36c359":"markdown","3f2eb236":"markdown"},"source":{"52c0fe78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c5299c4":"from IPython.display import Image\nimport os\n!ls ..\/input\/\nImage(\"..\/input\/ipljpg\/ipl.jpg\")","c7ad7f7b":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport seaborn as sns\n%matplotlib inline","910defac":"d_matches=pd.read_csv('..\/input\/ipl-dataset\/matches.csv')\nd_deliveries=pd.read_csv('..\/input\/ipl-dataset\/deliveries.csv')\nd_teams=pd.read_csv('..\/input\/ipl-dataset\/teams.csv')\nd_team_hna=pd.read_csv('..\/input\/ipl-dataset\/teamwise_home_and_away.csv')","ba360ddb":"d_matches.head()","3c786807":"d_deliveries.head()","dafea061":"d_teams","d5f72bc2":"d_team_hna","4045ae5a":"(d_matches.isna().sum()\/len(d_matches))*100","4d4f6b85":"d_matches.drop(labels='umpire3',axis=1,inplace=True)","a4bb683f":"d_matches[d_matches.city.isnull()]","f3bfde28":"d_matches.loc[d_matches.venue=='Dubai International Cricket Stadium']","8c0c4396":"d_matches.city.fillna('Dubai',inplace=True) ","ba69886f":"d_matches.dropna(axis=0,subset=['winner','player_of_match'],inplace=True)","297e56d7":"d_matches.dropna(axis=0,subset=['umpire1','umpire2'],inplace=True)","2b2b8239":"(d_deliveries.isna().sum()\/len(d_deliveries))*100","d7026101":"d_deliveries.drop(axis=1,columns=['player_dismissed','dismissal_kind','fielder'])","07df46d5":"(d_teams.isnull().sum()\/len(d_teams))*100","f5940984":"(d_team_hna.isnull().sum()\/len(d_team_hna))*100","893a0830":"px.bar(d_matches.groupby(by='city')[['date']].count(),text='value',color_discrete_sequence= ['cornflowerblue'],labels={'value':'No.of days'},title='No.of matches played in each city')","4bcf5e19":"d_matches.toss_winner==d_matches.winner\ndf=d_matches[(d_matches.toss_winner==d_matches.winner)].groupby('winner')[['toss_winner']].count().sort_values('toss_winner')\npx.line(df,x=df.index,y=df.toss_winner.values,color_discrete_sequence=['blue'],labels={'winner':'teams','y':'Matches won'},title='Matches won by teams after winning the toss')","41fa1914":"px.pie(d_team_hna,names='team',values='home_wins',color_discrete_sequence=px.colors.sequential.Plasma_r,title='Percentage of home wins')","4bddb2c9":"px.line(d_team_hna.groupby('team')[['home_wins','away_wins']].sum(),color_discrete_sequence=['green','red'],labels={'value':'No. of wins'},title='Comparison of wins')","274b89d4":"d=d_matches.loc[d_matches.season==2019].groupby('winner')[['winner']].count()\nx=d.index\ny=d.winner.values\nf1=px.bar(data_frame=d,x=d.index,y=d.winner.values,color_discrete_sequence=['maroon'],labels={'index':'teams','y':'No.of wins'},title='Wins by each team in 2019')\nf1.show()","e67a8ece":"d=d_matches.pivot_table(index=['winner'],values=['win_by_runs','win_by_wickets'],aggfunc=sum)\nd.plot(kind='box',figsize=(30,10))\nplt.title('Comaprison of wins by runs and wins by wickets')\nplt.show()","6fe7e772":"df=pd.pivot_table(data=d_team_hna,values=['home_matches','away_matches'],index='team',aggfunc='sum').sort_values(by=['home_matches','away_matches'])\nfig = make_subplots(rows=1, cols=2)\n\nfig.add_trace(go.Scatter(x=df.index, y=df.home_matches.values,name='Home Matches'),\n    row=1, col=1)\n\nfig.add_trace(\n    go.Scatter(x=df.index, y=df.away_matches.values,name='Away Matches'),\n    row=1, col=2)\n\nfig.update_layout(height=600, width=800, title_text=\"Comparison of matches played in home city and away\")\nfig.show()","363cbd04":"> 3. Wins procured by teams in their home city","a65989e8":"**Data Cleaning**","7962bf97":"> Replacing Nan values from city column after comparison with venue column","bc2bc6bf":"> 7. Comaparing the number of matches held in home city and away","c24dab73":"> 4. Comparison between home wins and away wins by each team","0701fc39":"> Checking For Nan values in each dataset","eea1e685":"> 6. Comparing the distribution of wins by runs and wins by wickets","ae97204c":"> 2. Wins by Respective Teams after winning the toss","5635aa47":"**Data Analysis**","1a466113":"****Importing required libraries****","eb34ddb1":"# **Indian Premier League (2008-2019) Exploratory Data Analysis**","d45791ad":"1.The number of matches held in Mumbai city is the highest followed by Kolkata and Delhi.The number of matches held in each city between 2008 to 2019 can be observed.\n\n2.The number of matches won by each team after winning the toss can be found.In the dataset Chennai Super Kings has won the highest number of matches after winning the toss.\n\n3.Mumbai Indians has had the most number of wins in their home city.Similarly this information the number of matches won by each team in their home city can be observed.\n\n4.Also it is possible to compare the number of wins at home city and away for each team.\n\n5.In the Season IPL-2019 Mumbai Indians procured the most number of wins in matches held followed by Chennai Super Kings.\n\n6.We can find the distribution of wins by runs and wins by wickets throughout the Seasons 2008 to 2019.\n\n7.Comparing the number of matches played by each team in their home city and away using subplots.","79d7c2be":"# Observations","3741d384":"> 1. Number of matches in respective locations","2ac78f23":"**Loading Datasets**","79ec7704":"The dataset d_matches consists of data from the Season 2008 to 2019 that gives information regarding the location,matches played between various teams and the winners in each match and much more.The dataset d_deliveries further talks about which team will be batting and bowling, along with which player was batting or bowling in each inning.The dataset d_teams tells us the names of different teams that play in IPL.And finally the dataset d_team_hna talks about the matches held in home city and away and gives an eloborate detail of the same.","ca36c359":"> 5. Number of wins by each team in the 2019 season","3f2eb236":"**Datasets Description**"}}