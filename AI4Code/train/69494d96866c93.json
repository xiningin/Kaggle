{"cell_type":{"38355e39":"code","9e58194f":"code","24ef35c8":"code","a961878a":"code","c94025c7":"code","b4e817af":"code","4feafd23":"code","f1442c6f":"code","e9645b3d":"code","44d891fa":"code","de8d7c14":"code","e1d7c361":"code","60b571ad":"code","8c214303":"code","3eea8c8f":"code","aa2cd5b0":"code","4c58db16":"code","6298827e":"code","755ae2f5":"code","15cb45ac":"markdown","84c344c9":"markdown","4532c0d1":"markdown","a3a2ee44":"markdown","ddc7c046":"markdown","c08936cb":"markdown","949cb2fa":"markdown","beef3baf":"markdown","5f17214b":"markdown","53dd6ebc":"markdown","0fea3a7d":"markdown","0a5900e3":"markdown","7c322b45":"markdown","84645a8f":"markdown","13004d89":"markdown","06fe4037":"markdown","9f0e426b":"markdown","62e09378":"markdown","c536c86f":"markdown","4e79c84f":"markdown","ba08ef05":"markdown","0f96f15f":"markdown","65aa81eb":"markdown","c3926cac":"markdown","5fe79e6e":"markdown"},"source":{"38355e39":"import cv2\nimport matplotlib.pyplot as plt\nf, axarr = plt.subplots(2,2)\nimg1 = cv2.imread('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person1008_virus_1691.jpeg')\nimg2 = cv2.imread('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person100_virus_184.jpeg')\nimg3 = cv2.imread('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0131-0001.jpeg')\nimg4 = cv2.imread('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0152-0001.jpeg')\naxarr[0,0].imshow(img1)\naxarr[0,1].imshow(img2)\naxarr[1,0].imshow(img3)\naxarr[1,1].imshow(img4)","9e58194f":"!git clone https:\/\/github.com\/Tessellate-Imaging\/monk_v1.git","24ef35c8":"!cd monk_v1\/installation\/Misc && pip install -r requirements_kaggle.txt","a961878a":"! pip install pillow==5.4.1","c94025c7":"# Monk\nimport os\nimport sys\nsys.path.append(\"monk_v1\/monk\/\");","b4e817af":"#Using pytorch backend \nfrom pytorch_prototype import prototype","4feafd23":"gtf = prototype(verbose=1);\ngtf.Prototype(\"PneumoniaClassificationMONK\", \"UsingPytorchBackend\");","f1442c6f":"gtf.List_Models()","e9645b3d":"gtf.Default(dataset_path=\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\", \n            model_name=\"resnet50\", \n            freeze_base_network=False,\n            num_epochs=25); ","44d891fa":"#Start Training\ngtf.Train();\n#Read the training summary generated once you run the cell and training is completed","de8d7c14":"gtf = prototype(verbose=1);\ngtf.Prototype(\"PneumoniaClassificationMONK\", \"UsingPytorchBackend\",eval_infer=True);","e1d7c361":"gtf.Dataset_Params(dataset_path=\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/val\");\ngtf.Dataset();","60b571ad":"accuracy, class_based_accuracy = gtf.Evaluate();","8c214303":"gtf = prototype(verbose=1);\ngtf.Prototype(\"PneumoniaClassificationMONK\", \"UsingPytorchBackend\",eval_infer=True);","3eea8c8f":"img_name = \"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/NORMAL\/IM-0005-0001.jpeg\";\npredictions = gtf.Infer(img_name=img_name);\n\n#Display \nfrom IPython.display import Image\nImage(filename=img_name)","aa2cd5b0":"img_name = \"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/PNEUMONIA\/person103_bacteria_489.jpeg\";\npredictions = gtf.Infer(img_name=img_name);\n\n#Display \nfrom IPython.display import Image\nImage(filename=img_name)","4c58db16":"img_name = \"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/PNEUMONIA\/person108_bacteria_506.jpeg\";\npredictions = gtf.Infer(img_name=img_name);\n\n#Display \nfrom IPython.display import Image\nImage(filename=img_name)","6298827e":"from IPython.display import Image\nImage(filename=\"\/kaggle\/working\/workspace\/PneumoniaClassificationMONK\/UsingPytorchBackend\/output\/logs\/train_val_accuracy.png\") ","755ae2f5":"from IPython.display import Image\nImage(filename=\"\/kaggle\/working\/workspace\/PneumoniaClassificationMONK\/UsingPytorchBackend\/output\/logs\/train_val_loss.png\") ","15cb45ac":"# <div id=\"ri\"> Running inference on test images <\/div>\n\n\n# Load the experiment in inference mode\n\n- Set flag eval_infer as True","84c344c9":"# Table of Contents","4532c0d1":"# Run validation","a3a2ee44":"<div id=\"dv\"> Data Visualization <\/div>","ddc7c046":"# [MONK](https:\/\/github.com\/Tessellate-Imaging\/monk_v1)","c08936cb":"<div id=\"ip\"> **Importing Pytorch Backend** <\/div>","949cb2fa":"# Load the validation dataset","beef3baf":"# <div id=\"qmt\"> Quick mode training <\/div>\n\n- Using Default Function\n    - dataset_path\n    - model_name\n    - num_epochs\n\n\nDataset folder structure\nparent_directory\n\n    |\n    |\n    |------Pneumonia\n            |\n            |------img1.jpg\n            |------img2.jpg\n            |------.... (and so on)\n    |------Normal\n            |\n            |------img1.jpg\n            |------img2.jpg\n            |------.... (and so on) ","5f17214b":"# Training a Pneumonia Vs Normal image classifier","53dd6ebc":"# <div id=\"list\"> List of available models <\/div>","0fea3a7d":"cd monk_v1\/installation\/Linux && pip install -r requirements_cu9.txt\n\n(Select the requirements file as per OS and CUDA version)\n\nIf using Colab install using the commands below\n\n!cd monk_v1\/installation\/Misc && pip install -r requirements_colab.txt\n\nIf using Kaggle uncomment the following command\n\n!cd monk_v1\/installation\/Misc && pip install -r requirements_kaggle.txt","0a5900e3":"# <div id=\"im\"> Install Monk <\/div>\n\ngit clone https:\/\/github.com\/Tessellate-Imaging\/monk_v1.git","7c322b45":"# Validating the trained classifier\n\n\nLoad the experiment in validation mode\n\n- Set flag eval_infer as True","84645a8f":"# Imports","13004d89":"# <div id=\"cm\"> Creating and managing experiments <\/div>\n\n- Provide project name\n- Provide experiment name\n- For a specific data create a single project\n- Inside each project multiple experiments can be created\n- Every experiment can be have diferent hyper-parameters attached to it","06fe4037":"* To use mxnet backend\n\nfrom gluon_prototype import prototype\n\n* To use keras backend\n\nfrom keras_prototype import prototype","9f0e426b":"Visualize and study comparison metrics","62e09378":"* [Data Visualization](#dv)\n* [Installing MONK](#im)\n* [Importing Pytorch Backend](#ip)\n* [Creating and Managing experiments](#cm)\n* [List of available models](#list)\n* [Quick Mode Training - Load the data and the model](#qmt)\n* [Train the classifier](#tc)\n* [Running inference on test images](#ri)","c536c86f":"Training v\/s Validation loss Curves","4e79c84f":"# Select image and Run inference","ba08ef05":"Monk is a low code Deep Learning tool and a unified wrapper for Computer Vision.\n\n**Monk Features**\n\n* low-code\n* unified wrapper over major deep learning framework - keras, pytorch, gluoncv\n* syntax invariant wrapper\n\n**Monk Enables**\n\n* To create, manage and version control deep learning experiments.\n* To compare experiments across training metrics.\n* To quickly find best hyper-parameters.\n\n\n**Goals**\n\n* To experiment with Models\n* Understand how easy is it to use Monk","0f96f15f":"# Check out\n\n[Monk_Object_Detection](https:\/\/github.com\/Tessellate-Imaging\/Monk_Object_Detection)\n\nA one-stop repository for low-code easily-installable object detection pipelines.\n\nand\n\n[Monk_Gui](https:\/\/github.com\/Tessellate-Imaging\/Monk_Gui)\n\nA Graphical user Interface for deep learning and computer vision over Monk Libraries\n\nalso\n\n[Pytorch_Tutorial](https:\/\/github.com\/Tessellate-Imaging\/Pytorch_Tutorial)\n\nA set of jupyter notebooks on pytorch functions with examples","65aa81eb":"\nThis creates files and directories as per the following structure\nworkspace\n\n    |\n    |--------PneumoniaClassificationMONK (Project name can be different)\n                    |\n                    |\n                    |-----UsingPytorchBackend (Experiment name can be different)\n                                |\n                                |-----experiment-state.json\n                                |\n                                |-----output\n                                        |\n                                        |------logs (All training logs and graphs saved here)\n                                        |\n                                        |------models (all trained models saved here)","c3926cac":"# <div id=\"tc\"> Training the classifier <\/div>","5fe79e6e":"Training v\/s Validation Accuracy Curves"}}