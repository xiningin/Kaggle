{"cell_type":{"e40ff2c8":"code","33704cb7":"code","28925429":"code","04800a64":"code","0117614d":"code","4c91b80a":"code","fe21ca2f":"code","e1d66e59":"code","dc797107":"code","6ddc5850":"code","c57f661b":"code","1b8a1f25":"code","7226e0a0":"code","9ac36525":"code","bed5f1fa":"code","265af47b":"code","90530f0d":"code","d7b48969":"code","3cb57ab0":"code","279a367e":"code","4ebb6764":"code","795624e6":"code","460114e4":"markdown","01e283ad":"markdown","8acaae7f":"markdown","3311f80a":"markdown","97e21bde":"markdown","dcaf8ea4":"markdown","ac5713f2":"markdown","31865a9a":"markdown","0ccadcee":"markdown","e759a61a":"markdown"},"source":{"e40ff2c8":"from IPython.display import Image\nImage(filename='\/kaggle\/input\/images\/arXiv.png', width=800, height=800)","33704cb7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json","28925429":"import json\ndata  = []\nwith open(\"\/kaggle\/input\/arxiv\/arxiv-metadata-oai-snapshot-2020-08-14.json\", 'r') as f:\n    for line in f: \n        data.append(json.loads(line))","04800a64":"dict_ = {'abstract': [], 'authors': [], 'title': [], 'doi':[]}\nfor paper in data:\n    dict_['title'].append(paper['title'])\n    dict_['authors'].append(paper['authors'])\n    dict_['abstract'].append(paper['abstract'])\n    dict_['doi'].append(paper['doi'])\n\ndf = pd.DataFrame(dict_, columns=['title', 'authors', 'abstract','doi'])\ndf.head(5)","0117614d":"df.info()","4c91b80a":"len(df)","fe21ca2f":"df = df.sample(40000)","e1d66e59":"#NLP \nimport spacy\nfrom spacy.lang.en.stop_words import STOP_WORDS\nfrom spacy.lang.en import English","dc797107":"import string\n\npunctuations = string.punctuation\nstopwords = list(STOP_WORDS)\nstopwords[:10]","6ddc5850":"custom_stop_words = [\n    'doi', 'preprint', 'copyright', 'peer', 'reviewed', 'org', 'https', 'et', 'al', 'author', 'figure', \n    'rights', 'reserved', 'permission', 'used', 'using', 'biorxiv', 'medrxiv', 'license', 'fig', 'fig.', \n    'al.', 'Elsevier', 'PMC', 'CZI', 'www'\n]\n\nfor w in custom_stop_words:\n    if w not in stopwords:\n        stopwords.append(w)","c57f661b":"# Download the spacy bio parser\nfrom IPython.utils import io\nwith io.capture_output() as captured:\n    !pip install https:\/\/s3-us-west-2.amazonaws.com\/ai2-s2-scispacy\/releases\/v0.2.4\/en_core_sci_lg-0.2.4.tar.gz","1b8a1f25":"import en_core_sci_lg  # model downloaded in previous step","7226e0a0":"# Parser\nparser = en_core_sci_lg.load(disable=[\"tagger\", \"ner\"])\nparser.max_length = 7000000\n\ndef spacy_tokenizer(sentence):\n    mytokens = parser(sentence)\n    mytokens = [ word.lemma_.lower().strip() if word.lemma_ != \"-PRON-\" else word.lower_ for word in mytokens ]\n    mytokens = [ word for word in mytokens if word not in stopwords and word not in punctuations ]\n    mytokens = \" \".join([i for i in mytokens])\n    return mytokens","9ac36525":"from tqdm import tqdm \n\ntqdm.pandas()\ndf[\"processed_abstract\"] = df[\"abstract\"].progress_apply(spacy_tokenizer)","bed5f1fa":"from sklearn.feature_extraction.text import TfidfVectorizer\ndef vectorize(text, maxx_features):\n    \n    vectorizer = TfidfVectorizer(max_features=maxx_features)\n    X = vectorizer.fit_transform(text)\n    return X","265af47b":"text = df['processed_abstract'].values\n%time X = vectorize(text, 2 ** 12)\nX.shape","90530f0d":"from sklearn.cluster import KMeans","d7b48969":"k = 20\nkmeans = KMeans(n_clusters=k, random_state=42, n_jobs=-1)\n%time y_pred = kmeans.fit_predict(X)\ndf['y'] = y_pred","3cb57ab0":"from sklearn.decomposition import PCA\n\npca = PCA(n_components=20, random_state=42)\n%time X_embedded_pca= pca.fit_transform(X.toarray())\nX_embedded_pca.shape","279a367e":"from sklearn.manifold import TSNE\n\ntsne = TSNE(verbose=0, perplexity=100, random_state=42)\n%time X_embedded_tsne = tsne.fit_transform(X_embedded_pca)","4ebb6764":"%matplotlib inline\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","795624e6":"# sns settings\nsns.set(rc={'figure.figsize':(20,20)})\n\n# plot\nsns.scatterplot(X_embedded_tsne[:,0], X_embedded_tsne[:,1], hue=list(df['y']), legend='full', palette=\"bright\")\nplt.title('arXiv-Literature-Clustering')\nplt.savefig(\"arxiv_TSNE.png\", dpi=300)\nplt.show()","460114e4":"# Vectorize","01e283ad":"# Plot","8acaae7f":"Take a random sample of the data since we have limited memmory and CPU","3311f80a":"# arXiv Literature Clustering\nClustering of the 40,000 random subset of 1,747,307 literature hosted on [arXiv](https:\/\/arxiv.org). Papers are clustered using the technqiues described in [COVID-19 Literature Clustering](https:\/\/github.com\/MaksimEkin\/COVID19-Literature-Clustering).\n\n## Full Version\nYou can view the full-version of this notebook that was run on 600,000 random subset using GPU-TSNE and multithreading here: https:\/\/github.com\/MaksimEkin\/arXiv-Literature-Clustering\n\n\n## How to Cite This Work?\nIf you use arXiv Literature Clustering, please cite the original paper and the code:\n```\n@inproceedings{EREN2020,\n\tauthor = {Eren, E. Maksim. Solovyev, Nick. Nicholas, Charles. Raff, Edward. Johnson, Ben},\n\ttitle = {COVID-19 Kaggle Literature Organization},\n\tyear = {2020},\n\tmonth = {September},\n\tlocation = {Virtual Event, CA, USA},\n\tnote={Malware Research Group, University of Maryland Baltimore County. \\url{https:\/\/github.com\/MaksimEkin\/COVID19-Literature-Clustering}},\n    doi = {10.1145\/3395027.3419591},\n    howpublished = {ACM Symposium on Document Engineering 2020 (DocEng '20)}\n}\n```","97e21bde":"# Load Data","dcaf8ea4":"First reduce noise using PCA by extracting the first 20 principle components:","ac5713f2":"# Parse","31865a9a":"# Cluster","0ccadcee":"# Dimensionality Reduction","e759a61a":"**Thank you for checking out this notebook. The papers in this dataset are clustered using the technqiues described in [COVID-19 Literature Clustering](https:\/\/github.com\/MaksimEkin\/COVID19-Literature-Clustering).\n\n## Full Version\nYou can view the full-version of this notebook that was run on 600,000 random subset using GPU-TSNE and multithreading here: https:\/\/github.com\/MaksimEkin\/arXiv-Literature-Clustering\n\n\n## How to Cite This Work?\nIf you use arXiv Literature Clustering, please cite the original paper and the code:\n```\n@inproceedings{EREN2020,\n\tauthor = {Eren, E. Maksim. Solovyev, Nick. Nicholas, Charles. Raff, Edward. Johnson, Ben},\n\ttitle = {COVID-19 Kaggle Literature Organization},\n\tyear = {2020},\n\tmonth = {September},\n\tlocation = {Virtual Event, CA, USA},\n\tnote={Malware Research Group, University of Maryland Baltimore County. \\url{https:\/\/github.com\/MaksimEkin\/COVID19-Literature-Clustering}},\n    doi = {10.1145\/3395027.3419591},\n    howpublished = {ACM Symposium on Document Engineering 2020 (DocEng '20)}\n}\n```"}}