{"cell_type":{"218fa74c":"code","c6eab0d9":"code","619e522e":"code","5c9baefd":"code","0ff848b9":"code","3c666afa":"code","8f0efee3":"code","5e3fb0a1":"code","4b51f521":"code","6dbe0d50":"code","df9a2a73":"code","6bbae195":"code","4888fc56":"code","cbe1f53c":"code","6fdee0c0":"code","d3e9e9fd":"code","10a2bffe":"code","6e6a2fae":"code","46b21684":"code","1beee973":"code","2b958541":"code","f0c2d198":"markdown","d1518e25":"markdown","32b85e0c":"markdown","3c59eb42":"markdown"},"source":{"218fa74c":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport json\nimport warnings \nwarnings.filterwarnings('ignore')","c6eab0d9":"df = pd.read_json(\"..\/input\/indian-covid19-cases\/covid19-INDIA.txt\")","619e522e":"df.head()","5c9baefd":"# Dropping all unnecessary features.\ndf = df.drop(columns=['CountryCode', 'Province', 'City', 'CityCode', 'Lat', 'Lon', 'Status'])","0ff848b9":"df.info()","3c666afa":"df.describe()","8f0efee3":"df.dtypes","5e3fb0a1":"# Adding up all the number of cases in a particular day across all states.\ndf2 = df.groupby(\"Date\", as_index=False).Cases.sum()","4b51f521":"df2.head()","6dbe0d50":"# Inserting a new index like column.\ndf2.insert(0, 'Days Since First Confirmed Case', range(0, 0 + len(df2)))","df9a2a73":"df2.head()","6bbae195":"# Visualizing the data.\nplt.figure(figsize=(10,10))\nplt.plot(df2[\"Days Since First Confirmed Case\"], df2[\"Cases\"], 'ro')\nplt.title(\"Number of confirmed cases since the day of the first reported case in India\")\nplt.xlabel(\"Days Since First Confirmed Case\")\nplt.ylabel('Confirmed Cases')\nplt.show()","4888fc56":"days_since_1_26 = np.array([i for i in range(len(dates))]).reshape(-1, 1)","cbe1f53c":"x_data = np.array(x_data).reshape(-1,1)\ny_data = np.array(y_data).reshape(-1,1)","6fdee0c0":"days_in_future = 20\nfuture_forecast = np.array([i for i in range(len(dates) + days_in_future)]).reshape(-1,1)\nadjusted_dates = future_forecast[:-20]","d3e9e9fd":"import datetime\nstart = '1\/26\/2020'\nstart_date = datetime.datetime.strptime(start, '%m\/%d\/%Y')\nfuture_forecast_dates = []\nfor i in range(len(future_forecast)):\n    future_forecast_dates.append((start_date + datetime.timedelta(days=i)).strftime('%m\/%d\/%Y'))","10a2bffe":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(days_since_1_26, y_data, test_size=0.2, shuffle=False) ","6e6a2fae":"from sklearn.preprocessing import PolynomialFeatures\npoly = PolynomialFeatures(degree = 3)\npoly_X_train = poly.fit_transform(X_train)\npoly_X_test = poly.fit_transform(X_test)\npoly_future_forecast = poly.fit_transform(future_forecast)","46b21684":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nlinear_model = LinearRegression(normalize=True, fit_intercept=False)\nlinear_model.fit(poly_X_train, y_train)\ntest_linear_pred = linear_model.predict(poly_X_test)\nlinear_pred = linear_model.predict(poly_future_forecast)\nprint('MAE:', mean_absolute_error(test_linear_pred, y_test) )\nprint('MSE:', mean_squared_error(test_linear_pred, y_test))","1beee973":"def plot_predictions_linear(x, y, pred, algorithm, color):\n    plt.figure(figsize=(10,10))\n    plt.plot(x,y)\n    plt.plot(future_forecast, linear_pred, color = color)\n    plt.title(\"Number of confirmed cases in India\")\n    plt.xlabel(\"Days Since First Confirmed Case\")\n    plt.ylabel('Confirmed Cases')\n    plt.legend(['Actual', 'Model'])\n    plt.show()","2b958541":"plot_predictions_linear(adjusted_dates, df2[\"Cases\"], linear_pred, 'Polynomial Regression Predictions', 'orange' )","f0c2d198":"The data used for the modelling can be found at the COVID-19 API - https:\/\/documenter.getpostman.com\/view\/10808728\/SzS8rjbc?version=latest.","d1518e25":"# Modelling the Spread of COVID-19 in India","32b85e0c":"# Importing Libraries","3c59eb42":"# Data"}}