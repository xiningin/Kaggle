{"cell_type":{"8030a886":"code","9a7a5af5":"code","8d0f9ed0":"code","1df952fa":"code","0d9b5675":"code","9fbd73bb":"code","ac3ec2f1":"code","d9df1712":"code","5d0e6951":"code","53956943":"code","57eef5fe":"code","a2dddd12":"code","07095776":"code","9ecf0bec":"code","45fbc9c0":"code","ea8c8444":"code","f8217021":"code","f88187db":"code","85c069c1":"code","0d0c4a1b":"code","c6ac6cc5":"code","e18c7ac5":"code","c45de0df":"code","204dfbf8":"code","1ac8c4e5":"code","2450a45d":"code","55233be7":"code","edd07a61":"code","e173218b":"code","8bc3bb7f":"code","fd25d031":"code","cf926423":"code","ea609973":"code","47c93e93":"code","4f6fd6fe":"code","6bd683ce":"markdown","b683e17f":"markdown"},"source":{"8030a886":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9a7a5af5":"import seaborn as sns\nsns.set_style('darkgrid')\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.rcParams['figure.figsize']=(8,6)","8d0f9ed0":"df=pd.read_csv('\/kaggle\/input\/drug-classification\/drug200.csv')\ndf.head()","1df952fa":"df.shape","0d9b5675":"df.info()","9fbd73bb":"df.isnull().sum()","ac3ec2f1":"df.describe().T","d9df1712":"df.Drug.value_counts()","5d0e6951":"sns.countplot(x='Drug',data=df)","53956943":"sns.distplot(df['Age'],bins=20,kde=True)","57eef5fe":"fig,axis=plt.subplots(1,2,figsize=(16,5))\nsns.countplot(x='Sex', data=df,ax=axis[0]).set_title('Male Female Count')\nsns.countplot(x='Drug',hue='Sex', data=df,ax=axis[1]).set_title('Male Female Count For Each Drug')","a2dddd12":"fig,axis=plt.subplots(1,2,figsize=(16,5))\nsns.countplot(x='BP', data=df,ax=axis[0]).set_title('BP Count')\nsns.countplot(x='Drug',hue='BP', data=df,ax=axis[1]).set_title('BP Count For Each Drug')","07095776":"fig,axis=plt.subplots(1,2,figsize=(16,5))\nsns.countplot(x='Cholesterol', data=df,ax=axis[0]).set_title('Cholesterol Count')\nsns.countplot(x='Drug',hue='Cholesterol', data=df,ax=axis[1]).set_title('Cholesterol Count For Each Drug')","9ecf0bec":"plt.figure(figsize=(8,6))\nsns.distplot(df['Na_to_K'], kde=True, bins=40)","45fbc9c0":"#finding outliers\ndf['Age'].plot(kind='box')","ea8c8444":"df['Na_to_K'].plot(kind='box')","f8217021":"from scipy import stats\nvalue=stats.zscore(df['Na_to_K'],axis=0)\nvalue","f88187db":"IQR1=np.quantile(df['Na_to_K'],0.25)\nIQR3=np.quantile(df['Na_to_K'],0.75)\nIQR=IQR3-IQR1\nIQR","85c069c1":"df_outlier=df[df['Na_to_K']>(IQR3+1.5*IQR)]\ndf_outlier","0d0c4a1b":"#removed all the outliers\ndf.drop(df_outlier.index.tolist(),axis=0,inplace=True)\ndf.shape","c6ac6cc5":"X=df.drop('Drug',axis=1)\ny=df['Drug']","e18c7ac5":"#Converting all the categorical values into numerical values\ncategorical_features=X.select_dtypes('object').columns.tolist()\nfrom sklearn.preprocessing import LabelEncoder\nfor i in categorical_features:\n    X[i]=LabelEncoder().fit_transform(X[i])","c45de0df":"X.head()","204dfbf8":"from sklearn.preprocessing import StandardScaler\nX_norm=StandardScaler().fit_transform(X)\nX_norm[0:5]","1ac8c4e5":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X_norm,y,test_size=0.3,random_state=42)\nX_train.shape,y_train.shape,X_test.shape,y_test.shape","2450a45d":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train,y_train)\nyhat=rfc.predict(X_test)","55233be7":"from sklearn.metrics import confusion_matrix,classification_report, accuracy_score,f1_score\nprint('Accuracy Score:',accuracy_score(y_test,yhat))","edd07a61":"sns.heatmap(confusion_matrix(y_test,yhat),annot=True,fmt='.0f')","e173218b":"print(classification_report(y_test,yhat))","8bc3bb7f":"f1_score(y_test,yhat,average='weighted')","fd25d031":"from sklearn.svm import SVC\nsvc=SVC(kernel='rbf')\nsvc.fit(X_train,y_train)\nyhat=svc.predict(X_test)","cf926423":"accuracy_score(y_test,yhat)","ea609973":"sns.heatmap(confusion_matrix(y_test,yhat),annot=True,fmt='.0f')","47c93e93":"print(classification_report(y_test,yhat))","4f6fd6fe":"f1_score(y_test,yhat,average='weighted')","6bd683ce":"**Na_to_k feature follows a skewed distribution**","b683e17f":"**Age feature follows a normal distribution**"}}