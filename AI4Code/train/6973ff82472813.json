{"cell_type":{"a28ebd30":"code","733f7d22":"code","f320a6c8":"code","47ecbf35":"code","446718c0":"code","9cdfff39":"code","4c2d0b20":"code","2086e19c":"code","218078be":"code","b8c8e751":"code","e88a3a90":"code","d6305cb6":"code","4941767a":"code","19e00116":"code","beff9d49":"code","c0e73f08":"code","76cc18c4":"code","12e0fb34":"code","ede94188":"code","bdc00ec9":"code","3fff7192":"code","df224c03":"code","45b90795":"code","791f7cc9":"code","b94fbd47":"code","25fdd80d":"code","f9111555":"code","f9629ef9":"code","4350516d":"code","e481377c":"code","f646dc85":"code","d7bc0f5d":"code","46da6eb8":"code","7576403e":"code","98cd00e3":"code","a78c43e0":"code","634901a4":"code","8bf96de7":"code","970c9a56":"code","0004fbed":"code","b76d637d":"code","4365d7f6":"code","c453faa2":"code","9fa9fad6":"code","9a5089b9":"markdown","3c724fda":"markdown","95499bda":"markdown","185c5f78":"markdown","45e2db04":"markdown","86449246":"markdown","74258e25":"markdown","3e0a5f53":"markdown"},"source":{"a28ebd30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","733f7d22":"# data analysis and wrangling\nimport pandas as pd\nimport numpy as np\nimport random as rnd\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.set() #setting seaborn default for plots\n#plt.style.use('seaborn')\n#sns.set(font_scale=2)\n%matplotlib inline","f320a6c8":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","47ecbf35":"train.shape","446718c0":"train.info()","9cdfff39":"train.head(3)","4c2d0b20":"def bar_plot(feature, figsize=(10,3), legend=True):\n    survived = train[train['Survived'] == 1][feature].value_counts()\n    dead = train[train['Survived'] == 0][feature].value_counts()\n    df = pd.DataFrame([survived,dead],index=['Survived','dead'])\n    print(df)\n    df.plot(kind='barh',stacked=True, figsize=figsize, legend=legend)","2086e19c":"bar_plot('Sex') ","218078be":"bar_plot('Embarked') ","b8c8e751":"bar_plot('SibSp') ","e88a3a90":"bar_plot('Parch')","d6305cb6":"bar_plot('Cabin',legend=False) ","4941767a":"train.isnull().sum()  #cabin: too many null data","19e00116":"initial = train.Name.str.extract(r'([a-zA-Z]+)\\.')\ninitial[0].unique()","beff9d49":"train['Initial'] = train.Name.str.extract(r'([a-zA-Z]+)\\.')\ntest['Initial'] = test.Name.str.extract(r'([a-zA-Z]+)\\.')","c0e73f08":"pd.crosstab(train['Initial'], train['Sex']).T","76cc18c4":"pd.crosstab(test['Initial'], test['Sex']).T","12e0fb34":"bar_plot('Initial')","ede94188":"test.Initial.unique()","bdc00ec9":"origin = ['Capt','Col','Countess','Don','Dr'\n          ,'Jonkheer','Lady','Major','Master','Miss'\n          ,'Mlle','Mme','Mr','Mrs','Ms'\n          ,'Rev','Sir','Dona']\nreplace = ['etc','etc','etc','etc','Dr'\n           ,'etc','etc','etc','Master','Miss'\n           ,'etc','etc','Mr','Mrs','etc'\n           ,'Rev','etc','etc']    \ntrain.Initial.replace(origin,replace, inplace=True)\ntest.Initial.replace(origin, replace, inplace=True)\ntrain.Initial.unique()\ntest.Initial.unique()","3fff7192":"bar_plot('Initial')","df224c03":"train.isnull().sum()","45b90795":"test.isnull().sum()","791f7cc9":"train.Age = train.Age.fillna(train.Age.mean())\ntest.Age = test.Age.fillna(train.Age.mean())","b94fbd47":"train.Embarked.fillna('S',inplace=True)\ntest.Embarked.fillna('S',inplace=True)","25fdd80d":"def categorize_age(age):\n    if age < 10:\n        return 0\n    elif age < 20:\n        return 1\n    elif age < 30:\n        return 2\n    elif age < 40:\n        return 3\n    elif age < 50:\n        return 4\n    elif age < 60:\n        return 5\n    else:\n        return 6","f9111555":"train['Category_age'] = train['Age'].apply(categorize_age)\ntest['Category_age'] = test['Age'].apply(categorize_age)","f9629ef9":"bar_plot('Category_age')","4350516d":"test.Initial.unique()","e481377c":"train['Initial_no'] = train['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Rev':4, 'Dr':5, 'etc': 6})\ntest['Initial_no'] = test['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Rev':4, 'Dr':5,'etc': 6})","f646dc85":"train['Embarked_no'] = train['Embarked'].map({'S':0,'C':1,'Q':1})\ntest['Embarked_no'] = test['Embarked'].map({'S':0,'C':1,'Q':1})","d7bc0f5d":"train['Sex_no'] = train['Sex'].map({'male':0, 'female':1})\ntest['Sex_no'] = test['Sex'].map({'male':0, 'female':1})","46da6eb8":"train.head()","7576403e":"feature = ['Pclass','SibSp','Parch','Category_age','Initial_no','Embarked_no','Sex_no']\nX = train[feature]\ntest_X = test[feature]\ny = train.Survived","98cd00e3":"X.head()","a78c43e0":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split","634901a4":"train_X, valid_X, train_y, valid_y = train_test_split(X, y, test_size=0.3, random_state=0)","8bf96de7":"print(train_X.shape)\nprint(valid_X.shape)","970c9a56":"model = RandomForestClassifier(n_estimators=150, random_state=0)\nmodel.fit(train_X, train_y)","0004fbed":"predict = model.predict(valid_X)","b76d637d":"accuracy = metrics.accuracy_score(valid_y, predict)\naccuracy","4365d7f6":"model.fit(X,y)\npredict = model.predict(test_X)\npredict.shape","c453faa2":"submission = pd.DataFrame([test.PassengerId, predict]).T\nsubmission.columns = ['PassengerId','Survived']\nsubmission.to_csv('base_submission.csv',index=False)","9fa9fad6":"submission","9a5089b9":"## Baseline Model\ntrain and check","3c724fda":"## 2. Feature engineering\n\n1) Name -> Initial","95499bda":"2) age -> category age","185c5f78":"2) data visualization \n\nbar plot\n-> norminal variable : Sex, Cabin, Embarked \n\n-> ordinal variable : Pclass\n\n-> ratio variable : SibSp, Parch    ","45e2db04":"string data -> number ","86449246":"## create submission file","74258e25":"Processing null value ","3e0a5f53":"## 1. EDA \n1)check data shape, info"}}