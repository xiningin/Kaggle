{"cell_type":{"8ce4ae5c":"code","c4591b0c":"code","8f3a1426":"code","d5ac03ce":"code","cd80e13d":"code","688bc042":"code","d6e9d89f":"code","4d600b17":"code","1aa7beaa":"code","fc844650":"code","1287e488":"code","a5bfe859":"code","9d2e9a6e":"code","01860f30":"code","a019ad42":"code","9ed5f93e":"markdown","53402558":"markdown","1f192dda":"markdown","70dfa8e0":"markdown","dcecb788":"markdown","6938f789":"markdown","768bd6eb":"markdown","5485b8ce":"markdown","4aeb1d18":"markdown","14737e68":"markdown","624b18a9":"markdown","ca1ea12c":"markdown","6302b61a":"markdown"},"source":{"8ce4ae5c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nimport missingno as msno\nimport plotly.express as px\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)\n\nplt.style.use('dark_background')","c4591b0c":"df = pd.read_csv(\"..\/input\/english-premier-league202021\/EPL_20_21.csv\")","8f3a1426":"df.head(5)","d5ac03ce":"df.isnull().sum()","cd80e13d":"plt.figure(figsize=(10,7))\nmsno.dendrogram(df)\nplt.grid()","688bc042":"plt.figure(figsize=(11, 8))\nplt.hist(df['Age'])\nplt.xlabel(\"Ages\")\nplt.ylabel(\"Density\")\nplt.grid()","d6e9d89f":"plt.figure(figsize=(11, 8))\nplt.scatter(df['Age'],df['Matches'])\nplt.xlabel(\"Age\")\nplt.ylabel(\"Matches\")\nplt.title(\"Experiences of Players\")\nplt.grid()","4d600b17":"top_goal = px.scatter(df.nlargest(10, 'Goals')[['Name', 'Goals']],\n                 x='Name', y='Goals',template=\"plotly_dark\")\ntop_goal.update_layout(title_text=\"Top Goals\", )\ntop_goal.show()","1aa7beaa":"top_assist = px.scatter(df.nlargest(10, 'Assists')[['Name', 'Assists']],\n                 x='Name', y='Assists',template=\"plotly_dark\")\ntop_assist.update_layout(title_text=\"Top Assists\", )\ntop_assist.show()","fc844650":"top_pass = px.scatter(df.nlargest(10, 'Passes_Attempted')[['Name', 'Passes_Attempted']],\n                 x='Passes_Attempted', y='Name',template=\"plotly_dark\")\ntop_pass.update_layout(title_text=\"Top Passes Attempted\", )\ntop_pass.show()","1287e488":"defender_score = df[df['Position'].str.contains(\"DF\")]\ndefender_score = defender_score.drop(defender_score.index[defender_score['Goals'] == 0 ])\n\ndefender = px.scatter(defender_score, x='Goals', y='Name', template=\"plotly_dark\")\n\ndefender.update_layout(title_text=\"Top Defender Score\", )\ndefender.show()","a5bfe859":"yellow_card = px.violin(df,x='Club',y='Yellow_Cards', template=\"plotly_dark\")\nyellow_card.update_layout(title_text=\"Top Yellow Card Owners\")\nyellow_card.show()","9d2e9a6e":"red_card = px.violin(df,x='Club',y='Red_Cards', template=\"plotly_dark\")\nred_card.update_layout(title_text=\"Top Red Card Owners\")\nred_card.show()","01860f30":"goal_team = df['Goals'].groupby(df['Club']).sum().sort_values(ascending=False).to_frame()\ngoal_team = px.scatter(goal_team,x='Goals',y=goal_team.index, template=\"plotly_dark\")\ngoal_team.update_layout(title_text=\"Goals by Teams\")\ngoal_team.show()","a019ad42":"plt.figure(figsize=(18,12))\ncorrelation = sb.heatmap(df.corr(), annot=True, linewidths=1 ,cmap='gist_gray')\ncorrelation.set_title(\"Correlation of Features\", fontdict={'fontsize': 16})","9ed5f93e":"*We have no null values*","53402558":"***Top Passes Attempted***","1f192dda":"***Top Yellow Card Owners***","70dfa8e0":"***Top Red Card Owners***","dcecb788":"***Goals by Teams***","6938f789":"***Exploratory Data Analysis***\n\n---\n\n\n\n---\n\n","768bd6eb":"***Top Defender Score***","5485b8ce":"***Players Experiences***","4aeb1d18":"***Ages***","14737e68":"***Top Assists***","624b18a9":"***Top Goals***","ca1ea12c":"**Thank you, if you like this kernel** ","6302b61a":"***Correlation***"}}