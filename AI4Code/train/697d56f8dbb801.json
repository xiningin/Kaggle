{"cell_type":{"70c2c182":"code","f6162d58":"code","688f9849":"code","bb0dc7d0":"code","d0d7e9a4":"code","d2a4378e":"code","2280d520":"code","401ed254":"code","5b52bc58":"code","49509107":"code","8d844c1d":"code","d19d29da":"code","db61105a":"code","352aabd0":"markdown","0f05de4a":"markdown","6158490f":"markdown","c926511c":"markdown","3f4b6aa5":"markdown","ca72d3fa":"markdown","15c04b15":"markdown","5a5d62fe":"markdown","a581e0f3":"markdown","778bb331":"markdown","24420f11":"markdown","a52a0b6d":"markdown","2e013764":"markdown","3714019f":"markdown","7c4e8db0":"markdown","88c818b3":"markdown","d226a024":"markdown","e65ee24e":"markdown","2d982bea":"markdown","4db79d2b":"markdown","0d191a6d":"markdown","93aee3a8":"markdown","b8421e24":"markdown","a3561ff2":"markdown","553e447d":"markdown"},"source":{"70c2c182":"import pandas as pd\nimport numpy as np\nimport re\nfrom scipy import stats as ss\nimport matplotlib.pyplot as plt\nimport statistics as st\nimport math\nfrom sklearn import linear_model\nfrom matplotlib.gridspec import GridSpec\n\n#pd.options.display.max_rows = None\nplt.style.use('ggplot')","f6162d58":"#\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv\n#\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv\ndf = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv')\n# ID nao serve de nada pra mim\ndf = df.drop(['ID'],axis='columns')\n# vou tirar os jogos de inverno que nao sao muito interessantes pra n\u00f3s, brasileiros\ndf = df[df['Season'] == 'Summer']","688f9849":"# vamos ver um histograma de participantes por jogos de verao\nfig, (ax,ax2,ax3,ax4) = plt.subplots(4, figsize=(25,12), sharex=True)\n\n## quantidade de participantes\nax.plot(df[['Name','Year']].\n        drop_duplicates(\n            subset=['Name','Year']).\n        groupby('Year').\n        count(),\n        linestyle='--',\n        marker='o')\n\nax.set_ylabel('Atletas')\nax.set_xlim([1895, 2017])\nax.set_yticks(np.arange(0,12001,2000))\nax.set_ylim([-500,12500])\nax.axvspan(1914, 1918, color='red', alpha=0.15)\nax.axvspan(1939, 1945, color='red', alpha=0.15)\nax.tick_params(axis='x', which='both', bottom=False, top=True, labelbottom=False,labeltop=True)\nax.annotate(\"WW1\",xy=(1915,10000), xycoords='data',)\nax.annotate(\"WW2\",xy=(1941,10000), xycoords='data',)\nax.annotate('Jogos Intercalados\\n1906', xy=(1906, 1500),  xycoords='data',\n            xytext=(1906, 6000), textcoords='data',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='center', verticalalignment='top',\n            )\nax.annotate(\"Los Angeles\\n1932\",xy=(1932,1500), xycoords='data',horizontalalignment='center',verticalalignment='top')\nax.annotate(\"Melbourne\\n1956\",xy=(1956,3100), xycoords='data',horizontalalignment='center',verticalalignment='top')\nax.annotate(\"Montreal\\n1976\",xy=(1976,6500), xycoords='data',horizontalalignment='center',verticalalignment='bottom')\nax.annotate(\"Moscou\\n1980\",xy=(1980,5000), xycoords='data',horizontalalignment='center',verticalalignment='top')\nax.annotate(\"Los Angeles\\n1984\",xy=(1984,7200), xycoords='data',horizontalalignment='center',verticalalignment='bottom')\n\n## diferentes paises\nax2.plot(df[['NOC','Year']].\n         drop_duplicates(\n             subset=['NOC','Year']).\n         groupby('Year').\n         count(),\n         linestyle='--',\n         marker='o',\n         color='tab:green')\n\nax2.set_ylabel('Pa\u00edses')\nax2.set_xlim([1895, 2017])\nax2.set_yticks(np.arange(0,201,50))\nax2.set_ylim([-20,220])\nax2.axvspan(1914, 1918, color='red', alpha=0.15)\nax2.axvspan(1939, 1945, color='red', alpha=0.15)\nax2.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=False)\nax2.annotate(\"Montreal\\n1976\",xy=(1976,100), xycoords='data',horizontalalignment='center',verticalalignment='bottom')\nax2.annotate(\"Moscou\\n1980\",xy=(1980,75), xycoords='data',horizontalalignment='center',verticalalignment='top')\n\n## diferentes eventos\nax3.plot(df[['Sport','Year']].\n         drop_duplicates(\n             subset=['Sport','Year']).\n         groupby('Year').\n         count(),\n         linestyle='--',\n         marker='o',\n         color='tab:blue')\n\nax3.set_ylabel('Esportes')\nax3.set_xlim([1895, 2017])\nax3.set_yticks(np.arange(0,40,5))\nax3.set_ylim([-2,37])\nax3.axvspan(1914, 1918, color='red', alpha=0.15)\nax3.axvspan(1939, 1945, color='red', alpha=0.15)\nax3.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=False)\n\n# participacao feminina nos jogos ol\u00edmpicos\n# gr\u00e1fico de propor\u00e7\u00e3o de mulheres para homens na participa\u00e7\u00e3o dos jogos olimpicos\ndf_men_women = (df[(df['Sex'] == 'F')][['Name','Year']].\n                drop_duplicates(subset='Name').\n                groupby('Year').\n                count().\n                rename(\n                    columns={'Name':\"Mulheres\"})).merge(\n                    (df[(df['Sex'] == 'M')][['Name','Year']].\n                    drop_duplicates(subset='Name').\n                    groupby('Year').\n                    count().\n                    rename(\n                        columns={'Name':\"Homens\"})),\n                    how='outer', # quero pegar as edi\u00e7\u00f5es em que tamb\u00e9m nao houve participacao feminina.\n                    left_index=True,\n                    right_index=True)\n\ndf_men_women = df_men_women.fillna(0)\ndf_men_women['Total'] = df_men_women['Mulheres']+df_men_women['Homens']\ndf_men_women['Mulheres'] = (df_men_women['Mulheres'] \/ df_men_women['Total']) * 100\ndf_men_women['Homens'] = (df_men_women['Homens'] \/ df_men_women['Total']) * 100\nax4.plot(df_men_women['Mulheres'], linestyle='--', marker='o',color='tab:pink')\n\nax4.set_ylabel('% Participa\u00e7\u00e3o Feminina')\nax4.set_xlim([1895, 2017])\nax4.set_yticks(np.arange(0,51,10))\nax4.set_ylim([-5,55])\nax4.axvspan(1914, 1918, color='red', alpha=0.15)\nax4.axvspan(1939, 1945, color='red', alpha=0.15)\nax4.set_xlabel('Anos')\nax4.annotate(\"Montreal\\n1976\",xy=(1976,25), xycoords='data',horizontalalignment='center',verticalalignment='bottom')\n\nfig.suptitle('An\u00e1lise Geral\\nHist\u00f3rico dos Jogos Ol\u00edmpicos de Ver\u00e3o')\n\nplt.xticks(np.arange(1896,2017,4))\nplt.show()\nfig.savefig('participantes_olympic.png')","bb0dc7d0":"# retirando os registros dos jogos intercalados dos dados\ndf = df[df['Year'] != 1906]","d0d7e9a4":"# contabilizar as medalhas de ouro, prata e bronze de cada atleta e depois agrupar por modalidade e depois contar as medalhas das modalidades por pa\u00eds\ndef cont_medals (df,medal):\n    df[medal] = df['Medal'].apply(lambda x: True if (x == medal) else False)\n\ncont_medals(df,'Gold')\ncont_medals(df,'Silver')\ncont_medals(df,'Bronze')\n\n# agora que eu vou criar informa\u00e7\u00f5es baseadas em regi\u00f5es, vou dar merge com a planilha de NOC e minha regi\u00e3o \u00e9 agrupada pela coluna region vinda de NOC\nnoc_regions = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv')\ndf = df.merge(noc_regions,how='inner',left_on='NOC',right_on='NOC')","d2a4378e":"df_quadro_medalhas = df.groupby(['region','Year','Event']).sum()\ndf_quadro_medalhas['Gold'] = df_quadro_medalhas['Gold'].apply(lambda x: 1 if (x >= 1) else 0)\ndf_quadro_medalhas['Silver'] = df_quadro_medalhas['Silver'].apply(lambda x: 1 if (x >= 1) else 0)\ndf_quadro_medalhas['Bronze'] = df_quadro_medalhas['Bronze'].apply(lambda x: 1 if (x >= 1) else 0)\n\ndf_quadro_medalhas = df_quadro_medalhas.reset_index()\ndf_quadro_medalhas = df_quadro_medalhas.groupby(['region','Year']).sum()\ndf_quadro_medalhas = df_quadro_medalhas.reset_index()","2280d520":"years = [x for x in range(1988,2017,4)]\nall_olympics = []\n\nfor x in years:\n    olympic_result = (df_quadro_medalhas[df_quadro_medalhas['Year'] == x][['Gold','Silver','Bronze','Year','region']].\n                      groupby(['Year','region']).\n                      sum().\n                      sort_values(by=['Gold','Silver','Bronze'],\n                                  ascending=False))\n    \n    all_olympics.insert(0,olympic_result)\n    \n\n\n# minha ideia agora \u00e9 criar uma coluna de posicao pra depois fazer um grafico de como essas posi\u00e7\u00f5es mudaram no decorrer dos anos        \nfor game in all_olympics:\n    i = 1\n    game['Position'] = 0\n    for index, row in game.iterrows():\n        row['Position'] = i\n        i += 1\n\n# agora que eu ja tenho o resultado por olimpiada, pra conseguir deixar do jeito que eu quero no grafico, \n# eu tenho que unir todos os resultados da lista e depois dividir em elementos por pa\u00eds\nall_olympics_concat = pd.concat(all_olympics).reset_index()\n\ndef country_group(df):\n    paises = all_olympics_concat['region'].unique()\n    country_df = []\n    for pais in paises:\n        line = all_olympics_concat[all_olympics_concat['region'] == pais].sort_values(by='Year',ascending=False).set_index('Year')\n        country_df.insert(0,line)\n    return country_df","401ed254":"from matplotlib.patches import Ellipse\n# agora eu quero fazer um grafico que mostra a mudan\u00e7a de posicao do primeiro lugar de cada edicao dos jogos olimpicos\n# cada pa\u00eds ser\u00e1 uma linha (vou come\u00e7ar pegando s\u00f3 os 10 primeiros colocados)\nfig, ax = plt.subplots(figsize=(20,8), sharex=True)\nqtde_paises = 14\ni = 1\n# vou pegar a grecia separado pois ela \u00e9 a unica que nao vai aparecer na lista dos melhores colocados do Rio e que sediou olimpiadas recentemente\nfor country in country_group(all_olympics_concat):\n    if country['region'].iloc[0] == 'Greece':\n        greece = country\n\nbest_countries = country_group(all_olympics_concat)[::-1][0:qtde_paises]\nbest_countries.insert(-1,greece)\n        \nfor country in best_countries:\n    if (i%2 == 0):\n        ax.plot(country['Position'], marker='o',label=country['region'].iloc[0],linewidth=3)\n    else:\n        ax.plot(country['Position'], marker='o',linestyle='--',label=country['region'].iloc[0],linewidth=3)\n    ax.annotate(country['region'].iloc[0],xy=(2017,country['Position'].loc[2016]), xycoords='data',horizontalalignment='center',verticalalignment='center')\n    i+=1\n    ax.legend(bbox_to_anchor=(-0.05, 1),loc='lower left',ncol=qtde_paises+1)\nax.invert_yaxis()\nax.set_ylabel('Posi\u00e7\u00e3o no Placar')\nax.set_xlabel('Edi\u00e7\u00f5es das Olimp\u00edadas de Ver\u00e3o')\nplt.xticks(np.arange(1988,2017,4))\nplt.yticks(np.arange(1,25,1))\nax.set_xlim([1987, 2018])\nax.set_ylim([25, 0])\nfig.suptitle('Hist\u00f3rico do Placar Ol\u00edmpico\\ndas Olimp\u00edadas de 1988 at\u00e9 2016')\n\n# colocando elipse nas posicoes dos pa\u00edses que sediaram as olimpiadas\ncolor = 'yellow'\n# Seul\ncircle = Ellipse((1988,4), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n# Barcelona\ncircle = Ellipse((1992,6), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n# Atlanta\ncircle = Ellipse((1996,1), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n# Sidney\ncircle = Ellipse((2000,4), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n# Athenas\ncircle = Ellipse((2004,15), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n# Pequim\ncircle = Ellipse((2008,1), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n# Londres\ncircle = Ellipse((2012,3), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n# Rio\ncircle = Ellipse((2016,13), 0.5,0.9,alpha=0.7,color=color)\nax.add_artist(circle)\n\n\nplt.show()\nfig.savefig('historico_olympic.png')","5b52bc58":"\ndef get_df_event(df,event):\n    return (df[df['Event'] == event].\n            drop_duplicates(\n                subset=['Name','Height','Weight','NOC'])) # estou removendo atletas que continuaram com o mesmo peso e altura de uma olimpiada para outra para que o mesmo nao apareca duas vezes\n\ndef intervalo_confianca(df,teste,confianca):\n    media = st.mean(df[teste])\n    desvio_padrao = st.stdev(df[teste])\n    erro_padrao = desvio_padrao \/ math.sqrt(len(df))\n    area_meio = confianca\n    zscore = ss.norm.ppf(area_meio)\n    #print(media,desvio_padrao,erro_padrao,zscore)\n    return (round(media - (erro_padrao*zscore),4),round(media+(erro_padrao*zscore),4))\n    \nteste_1 = 'Height'\nteste_2 = 'Weight'\nmaratona = 'Athletics Men\\'s Marathon'\ncem_metros = 'Athletics Men\\'s 100 metres'\ndf_maratonistas = get_df_event(df,maratona).dropna(subset=['Height', 'Weight'])\ndf_maratonistas = df_maratonistas[df_maratonistas['Year'] > 1896]\ndf_velocistas = get_df_event(df,cem_metros).dropna(subset=['Height', 'Weight'])\ndf_velocistas = df_velocistas[df_velocistas['Year'] > 1896]\n#df_velocistas[teste_1].hist(density=True,alpha=0.5)\n#df_maratonistas[teste_1].hist(density=True,alpha=0.5)\n\nconf = 0.95\n\n# agora vamos fazer o teste por meio de bootstrap\ndef bootstrap_mean(x, confianca,n=5000, size=None):\n    if size is None:\n        size = len(x)\n    values = np.zeros(n)\n    for i in range (n):\n        sample = np.random.choice(x,size=size,replace=True)\n        values[i] = sample.mean()\n    return (round(np.percentile(values,(1-confianca)*100),4),round(np.percentile(values,(confianca)*100),4))\n\n\n\n# resultado do intervalo de confian\u00e7a por formula\n\ntxt = \"Com {confianca:.1f}% de confian\u00e7a, o intervalo de confian\u00e7a de {teste} em {tipo} \u00e9: {intervalo} \/ [Boostrap: {boot}]\"\nprint(\"Resultados Teste 1: Altura\")\nprint(txt.format(confianca = conf*100,teste = teste_1,tipo = cem_metros,intervalo = intervalo_confianca(df_velocistas,teste_1,conf),boot=bootstrap_mean(df_velocistas[teste_1],conf)))\nprint(txt.format(confianca = conf*100,teste = teste_1,tipo = maratona,intervalo = intervalo_confianca(df_maratonistas,teste_1,conf),boot=bootstrap_mean(df_maratonistas[teste_1],conf)))\nprint()\nprint(\"Resultados Teste 2: Peso\")\nprint(txt.format(confianca = conf*100,teste = teste_2,tipo = cem_metros,intervalo = intervalo_confianca(df_velocistas,teste_2,conf),boot=bootstrap_mean(df_velocistas[teste_2],conf)))\nprint(txt.format(confianca = conf*100,teste = teste_2,tipo = maratona,intervalo = intervalo_confianca(df_maratonistas,teste_2,conf),boot=bootstrap_mean(df_maratonistas[teste_2],conf)))\n\n\n    ","49509107":"# quero plotar cdf\ndef tab_freq(df,teste):\n    cdf = pd.DataFrame(df.groupby(by=teste).count()['Name'])\n    cdf = cdf.rename(columns={\"Name\": \"Qtde\"})\n    cdf['Qtde Acum'] = cdf['Qtde'].cumsum()\n    cdf['Freq'] = cdf['Qtde'] \/ cdf['Qtde'].sum()\n    cdf['Freq Acum'] = cdf['Freq'].cumsum()\n    return cdf\n\ndef plot_cdf(teste,ax):\n    maratonistas_freq = tab_freq(df_maratonistas,teste)\n    velocistas_freq = tab_freq(df_velocistas,teste)\n    ax.plot(velocistas_freq['Freq Acum'],label='Velocistas')\n    ax.plot(maratonistas_freq['Freq Acum'],label='Maratonistas')\n    ax.set_title(\"CDF e Histograma de {teste} para os Atletas \\ndos Jogos Ol\u00edmpicos de Ver\u00e3o da Era Moderna\".format(teste=teste))\n    \n    ax.legend(loc='lower right')\n    xlim = [min(maratonistas_freq.index[0],velocistas_freq.index[0])-1, max(maratonistas_freq.index[-1],velocistas_freq.index[-1])+1]\n    ax.set_xlim(xlim)\n    ax.set_yticks(np.arange(0,1.1,0.1))\n    ax.tick_params(axis='x', bottom=False, top=True, labeltop=True,labelbottom=False)\n    return xlim\n    \nfig, ((ax1,ax2),(ax3,ax4)) = plt.subplots(nrows=2, ncols=2,figsize=(15,8))\nxlim1 = plot_cdf(teste_1,ax1)\nax1.set_ylabel(\"Porcentagem Acumulada\")\nxlim2 = plot_cdf(teste_2,ax2)\nax2.tick_params(axis='y', left=False, right=True, labelleft=False,labelright=True)\nbins_ = 20\nax3.hist(df_velocistas[teste_1],alpha=0.5,bins=bins_,density=True,label='Velocistas')\nax3.hist(df_maratonistas[teste_1],alpha=0.5,bins=bins_,density=True,label='Maratonistas')\nax3.legend(loc='upper right')\nax3.set_ylabel(\"Porcentagem\")\nax3.set_xlabel(\"Altura (em centimetros)\")\nax3.set_xlim(xlim1)\n\nax4.hist(df_velocistas[teste_2],alpha=0.5,bins=bins_,density=True,label='Velocistas')\nax4.hist(df_maratonistas[teste_2],alpha=0.5,bins=bins_,density=True,label='Maratonistas')\nax4.legend(loc='upper right')\nax4.set_xlim(xlim2)\nax4.tick_params(axis='y', left=False, right=True, labelleft=False,labelright=True)\nax4.set_xlabel(\"Peso (em quilogramas)\")\nfig.savefig('cdf-hist-peso-altura.png')\nplt.tight_layout()","8d844c1d":"# True -> velocistas\n# False -> maratonistas\ntipo = 'Type'\n# primeiro vamos criar uma funcao para pegar apenas as informacoes necessarias dos dataframes\ndef df_concat(df_velocistas,df_maratonistas,teste):\n    df_velocistas[tipo] = True\n    df_maratonistas[tipo] = False\n    return pd.concat([df_velocistas[[tipo,teste]],df_maratonistas[[tipo,teste]]])\n    \n    \n# agora vamos criar uma fun\u00e7\u00e3o que recebe os dados reais e randomiza eles numa quantidade grande de vezes,\n# tira a propor\u00e7\u00e3o da diferen\u00e7a de cada uma das labels e retorna um vetor com a diferenca\ndef rand_dif(df_velocistas,df_maratonistas,teste,qtde_samples=10000):\n    dif_mean = np.zeros(qtde_samples)\n    df = df_concat(df_velocistas,df_maratonistas,teste)\n    filtro = df[tipo].values\n    for i in range (qtde_samples):\n        # primeiro, randomizar as labels\n        np.random.shuffle(filtro)\n        dif = df[filtro][teste].mean() - df[~filtro][teste].mean()\n        dif_mean[i] = dif\n    return dif_mean\n\ndef real_dif(df_velocistas,df_maratonistas,teste):\n    return df_velocistas[teste].mean() - df_maratonistas[teste].mean()\n\ndef hipotese_permutacao(df_velocistas, df_maratonistas, teste):\n    diferenca_real = real_dif(df_velocistas,df_maratonistas,teste)\n    diferencas_permutacao = rand_dif(df_velocistas,df_maratonistas,teste)\n    fig, ax = plt.subplots(figsize=(20,5))\n    ax.hist(diferencas_permutacao,color='k',alpha=0.5,bins=20)\n    limiar_cima = np.percentile(diferencas_permutacao,95) ## preciso fazer de 97.5 ja que estou olhando a diferenca na hipotese alternativa\n    #limiar_baixo = np.percentile(diferencas_permutacao,2.5)\n    ax.axvline(x=limiar_cima)\n    #ax.axvline(x=limiar_baixo)\n    circle = Ellipse((diferenca_real,0), 0.1,100,alpha=0.7,color='tab:red')\n    ax.add_artist(circle)\n    ax.set_xlim(-diferenca_real-1,diferenca_real+1)\n    ax.set_xlabel('Diferen\u00e7a')\n    ax.set_ylabel('Quantidades de Permuta\u00e7\u00f5es')\n    #ax.annotate(\"P = 0.05\",xy=(limiar_baixo-0.1,1.2), xycoords='data',\n    #            horizontalalignment='right',verticalalignment='top',color='tab:red')\n    ax.annotate(\"P = 0.05\",xy=(limiar_cima+0.1,1200), xycoords='data',\n                horizontalalignment='left',verticalalignment='top',color='tab:red')\n    ax.annotate(\"Diferen\u00e7a \\nObservada\",xy=(diferenca_real,0.02), xycoords='data',\n                xytext=(diferenca_real,200), textcoords='data',\n                arrowprops=dict(facecolor='tab:blue', shrink=0.3),\n                horizontalalignment='center',verticalalignment='bottom',\n                color='k')\n    ax.set_title(\"Histograma das diferen\u00e7as das m\u00e9dias de {teste}\\npara velocistas e maratonistas comparado com simula\u00e7\u00f5es de permuta\u00e7\u00e3o\".format(teste=teste))\n    \n\nhipotese_permutacao(df_velocistas,df_maratonistas,teste_1)\nhipotese_permutacao(df_velocistas,df_maratonistas,teste_2)\n","d19d29da":"def modelo_regressao_linear(df,x,y):\n    regr = linear_model.LinearRegression()\n    regr.fit(np.array(df[x]).reshape(1,-1).T,np.array(df[y]).reshape(1,-1).T)\n    peso_simulado = regr.coef_[0][0] * df[x] + regr.intercept_[0]\n    df.insert(5,y + ' simulado',peso_simulado)\n    return (regr.coef_[0][0], regr.intercept_[0])\n\ndef imprime_modelo (coef_intercept):\n    return ('f(x) = {coef:.2f}x + {intercept:.2f}'.format(coef=coef_intercept[0],intercept=coef_intercept[1]))\n\nreg_velocistas = modelo_regressao_linear(df_velocistas,teste_1,teste_2)\nreg_maratonistas = modelo_regressao_linear(df_maratonistas,teste_1,teste_2)\n\nprint(\"Modelo {modalidade}: {modelo}\".format(modalidade=cem_metros,\n                                             modelo=imprime_modelo(reg_velocistas)))\nprint(\"Modelo {modalidade}: {modelo}\".format(modalidade=maratona,\n                                             modelo=imprime_modelo(reg_maratonistas)))","db61105a":"def min_max_teste (teste,is_max):\n    df_maratonistas_velocistas = pd.concat([df_maratonistas,df_velocistas])\n    if (is_max):\n        return float(df_maratonistas_velocistas[df_maratonistas_velocistas[teste] == df_maratonistas_velocistas[teste].max()][teste])\n    else:\n        return float(df_maratonistas_velocistas[df_maratonistas_velocistas[teste] == df_maratonistas_velocistas[teste].min()][teste])\n\ndef ax_plot (ax,col_x,col_y,color_scatter,color_line,labelx,labely,df_aux,df,label):\n    ax.scatter(df[col_x],df[col_y],alpha=0.2,label=label,color=color_scatter)\n    ax.set_xlabel(labelx)\n    ax.set_ylabel(labely)\n    ax.set_yticks(np.arange(40,101,10))\n    ax.set_ylim([39,101])\n    ax.plot(df_aux,color=color_line)\n\ndef scatter_plot (col_x,col_y,modalidade,titulo,labelx,labely,dados_simulados):\n    # criar um novo dataframe so com Height e Weight simulado pra conseguir plotar certinho junto da dispers\u00e3o\n    df_velocistas_aux = pd.DataFrame({col_x: df_velocistas[col_x], dados_simulados: df_velocistas[dados_simulados]}).set_index(col_x)\n    df_maratonistas_aux = pd.DataFrame({col_x: df_maratonistas[col_x], dados_simulados: df_maratonistas[dados_simulados]}).set_index(col_x)\n    \n    fig=plt.figure(figsize=(15,10))\n    gs=GridSpec(2,2) # 2 rows, 2 columns\n    ax1=fig.add_subplot(gs[0,0]) # First row, first column\n    ax1.set_title(\"Maratonistas\")\n    \n    ax2=fig.add_subplot(gs[0,1]) # First row, second column\n    ax2.set_title(\"Velocistas\")\n    ax2.tick_params(axis='y', left=False, right=True, labelleft=False,labelright=True)\n    ax2.yaxis.set_label_position(\"right\")\n    ax2.set_xlim([min_max_teste(teste_1,False)-1,min_max_teste(teste_1,True)+1])\n    ax1.set_xlim([min_max_teste(teste_1,False)-1,min_max_teste(teste_1,True)+1])\n    ax2.set_ylim([min_max_teste(teste_2,False)-1,min_max_teste(teste_2,True)+1])\n    ax1.set_ylim([min_max_teste(teste_2,False)-1,min_max_teste(teste_2,True)+1])\n    ax=fig.add_subplot(gs[1,:]) # Second row, span all columns\n    #fig, ((ax1,ax2),(ax)) = plt.subplots(nrows=2, ncols=2,figsize=(15,8))\n    ax_plot(ax,col_x,col_y,'tab:red','orangered',labelx,labely,df_velocistas_aux,df_velocistas,'velocistas')\n    ax_plot(ax,col_x,col_y,'tab:blue','navy',labelx,labely,df_maratonistas_aux,df_maratonistas,'maratonistas')\n    \n    ax_plot(ax1,col_x,col_y,'tab:blue','darkblue',labelx,labely,df_maratonistas_aux,df_maratonistas,'maratonistas')\n    \n    ax_plot(ax2,col_x,col_y,'tab:red','darkred',labelx,labely,df_velocistas_aux,df_velocistas,'velocistas')\n    \n    ax.legend(loc='upper left')\n    ax.set_title(\"Maratonistas e Velocistas\")\n    fig.suptitle('Graficos de Disper\u00e7\u00e3o relacionando\\nPeso e Altura de atletas velocistas e atletas maratonistas\\n nas Olimp\u00edadas de 1900 at\u00e9 2016', fontsize=16)\n    \nscatter_plot(teste_1,\n             teste_2,\n             cem_metros,\n             \"Regress\u00e3o Linear para\\n\" + cem_metros,teste_1+\" (cm.)\",teste_2 +\" (kg.)\",\n             teste_2 + ' simulado')","352aabd0":"<a id='introducao'><\/a>\n## Introdu\u00e7\u00e3o\nO presente trabalho tem como objetivo analisar o banco de dados referente aos atletas, eventos e jogos Ol\u00edmpicos desde sua primeira edi\u00e7\u00e3o na Era Moderna (1896) at\u00e9 a edi\u00e7\u00e3o de 2016.","0f05de4a":"### Sum\u00e1rio\n* [Introdu\u00e7\u00e3o](#introducao)\n * [Motiva\u00e7\u00e3o](#motivacao)\n * [Sobre a Base](#sobre_a_base)\n * [Refer\u00eancias](#referencias)\n* [An\u00e1lise Explorat\u00f3ria dos Dados](#analiseexploratoria)\n * [An\u00e1lise Geral](#analisegeral)\n * [Desempenho dos Pa\u00edses nas Olimp\u00edadas](#desempenho)\n* [Testes de Hip\u00f3teses e Intervalos de Confian\u00e7a](#testehipoteses)\n * [Teste via Booststrap](#testebootstrap)\n * [Teste via Permuta\u00e7\u00e3o](#testepermutacao)\n* [Regress\u00e3o Linear](#regressao)\n * [Visualiza\u00e7\u00e3o do Modelo](#visualizacaomodelo)\n* [Explora\u00e7\u00f5es Futuras](#exploracoesfuturas)","6158490f":"<a id='analisegeral'><\/a>\nA primeira an\u00e1lise feita foi em rela\u00e7\u00e3o \u00e0 quantidade de participantes, de pa\u00edses e de modalidades de cada edi\u00e7\u00e3o dos Jogos Ol\u00edmpicos de Ver\u00e3o. O resultado pode ser visto no gr\u00e1fico abaixo e ser\u00e1 analisado \u00e0 seguir.","c926511c":"#### Importa\u00e7\u00e3o do Banco, dados b\u00e1sicos e primeiras plotagens para conhecer os dados","3f4b6aa5":"Com base no gr\u00e1fico, podemos destacar algumas observa\u00e7\u00f5es:\n\n* **EUA em Seul, 1988**: Estados Unidos fica fica atr\u00e1s da R\u00fassia e da Alemanha (na \u00e9poca Uni\u00e3o Sovi\u00e9tica e Alemanha Oriental, respectivamente). Isso se deu devido aos extensos programas de doping patrocinados pelo Estado que foram desenvolvidos nesses pa\u00edses para cumprir sua agenda pol\u00edtica no cen\u00e1rio internacional. Fonte [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/United_States_at_the_1988_Summer_Olympics)\n* **Performance dos Pa\u00edses Sede:** Alguns pontos no gr\u00e1fico est\u00e3o destacados em amarelo. Isso representa o desempenho daquele pa\u00eds na edi\u00e7\u00e3o em que uma de suas cidades estava sediando os Jogos Ol\u00edmpicos. Os pa\u00edses sede tiveram um desempenho melhor competindo em cada do que os anos anteriores apresentados no gr\u00e1fico. Com destaque para a China que bateu os Estados Unidos nos jogos de Pequim em 2008.\n* **A vergonha do Reino Unido em Atlanta, 1996**: O Reino Unido voltou de Atlanta com apenas 1 medalha de ouro, termimando em 36 lugar no quadro de Medalhas, ficando atr\u00e1s de pa\u00edses como Alg\u00e9ria e Kazaquist\u00e3o. Isso levou \u00e0 um massacre na m\u00eddia em busca dos respons\u00e1veis. Sa\u00edram reportagens de mergulhadores brit\u00e2nicos que, ap\u00f3s participar dos jogos em 96, foram obrigados a vender seus kits nas ruas da cidade. O Reino Unido j\u00e1 havia iniciado um programa de investimento no esporte em 1994, por\u00e9m ele s\u00f3 come\u00e7ou a surgir efeito a partir das Olimp\u00edadas de 2000, quando a coloca\u00e7\u00e3o do Reino n\u00e3o obteve mais queda, chegando ao impressionante segundo lugar nas Olimp\u00edadas do Rio em 2016. Fonte: [The Guardian](https:\/\/www.theguardian.com\/sport\/2012\/jul\/24\/london-2012-team-gb-atlanta)","ca72d3fa":"<a id='testehipoteses'><\/a>\n## Testes de Hip\u00f3tese e Intervalos de Confian\u00e7a\n\n### 100m Rasos vs Maratona (Masculino)\nO primeiro teste de hip\u00f3tese e intervalo de confian\u00e7a ser\u00e1 relacionado \u00e0 duas provas muito famosas e tradicionais das Olimp\u00edadas:\n100 metros rasos vs Maratona.\n\nVamos entender o peso e a altura dos atletas dessas duas modalidades. A nossa hip\u00f3tese \u00e9 que os atletas dos 100 metros rasos s\u00e3o mais pesados e maiores do que os maratonistas.\n\nAntes de come\u00e7ar a an\u00e1lisar a hip\u00f3tese, vamos primeiro analisar os dados e algumas informa\u00e7\u00f5es extras.\n\nUsain Bolt (\u00e0 esquerda) \u00e9 o recordista ol\u00edmpico dos 100 metros rasos. Eluid Kipchoge (\u00e0 direita) \u00e9 o recordista ol\u00edmpico dos 42.195 metros (al\u00e9m de ser o \u00fanico homem na hist\u00f3ria da humanidade que completou uma maratona em menos de 2 horas).\n\n![BoltKipchoge.png](attachment:BoltKipchoge.png)\n\nAmbos os atletas possuem as melhores marcas ol\u00edmpicas na sua modalidade. Por mais que compartilhem do mesmo esporte (atletismo - corrida), Kipchoge realiza provas de 2 horas (resist\u00eancia), enquanto Bolt realiza provas de 10 segundos (explos\u00e3o). \u00c9 nitida a diferen\u00e7a no porte f\u00edsico dos dois pela foto. Mas ser\u00e1 que isso \u00e9 um padr\u00e3o entre os atletas dessas duas modalidades?","15c04b15":"<a id='sobre_a_base'><\/a>\n### Sobre a Base:\n* Cada linha correponde \u00e0 um atleta competindo em uma modalidade ol\u00edmpica diferente (portanto os atletas podem estar duplicados caso tenham participado de mais de uma modalidade ou caso tenham participado de mais de uma edi\u00e7\u00e3o das Ol\u00edmpiadas)\n* Existem 15 atributos para cada atleta-evento (como irei chamar cada linha do banco de dados). S\u00e3o eles:\n * ID - Unique number for each athlete\n * Name - Athlete's name\n * Sex - M or F\n * Age - Integer\n * Height - In centimeters\n * Weight - In kilograms\n * Team - Team name\n * NOC - National Olympic Committee 3-letter code\n * Games - Year and season\n * Year - Integer\n * Season - Summer or Winter\n * City - Host city\n * Sport - Sport\n * Event - Event\n * Medal - Gold, Silver, Bronze, or NA","5a5d62fe":"###### autora: **Andressa Nowasyk**","a581e0f3":"<a id='testepermutacao'><\/a>\n### Testando as Hip\u00f3teses via Permuta\u00e7\u00e3o\nVamos agora utilizar do m\u00e9todo da permuta\u00e7\u00e3o para novamente testar a Hip\u00f3tese Nula.","778bb331":"# Jogos Ol\u00edmpicos 1896-2016 com Testes de Hip\u00f3tese e Regress\u00e3o Linear em algumas modalidades","24420f11":"<a id='analise_exploratoria'><\/a>\n## An\u00e1lise Explorat\u00f3ria dos Dados","a52a0b6d":"Os intervalos de confian\u00e7a encontrados tanto em rela\u00e7\u00e3o ao teste 1 quanto em rela\u00e7\u00e3o ao teste 2 n\u00e3o tem nenhum ponto em comum, portanto temos evid\u00eancias suficientes para descartar ambas hip\u00f3teses nulas e aceitar ambas hip\u00f3teses alternativas (uma vez que ela \u00e9 a nega\u00e7\u00e3o da hip\u00f3tese nula):\n* A m\u00e9dia de **altura** dos atletas dos 100 metros rasos **\u00e9** maior que a m\u00e9dia de **altura** dos atletas da Maratona\n* A m\u00e9dia de **peso** dos atletas dos 100 metros rasos **\u00e9** maior que a m\u00e9dia de **peso** dos atletas da Maratona\n\nDe fato, se plotarmos o CDF e histograma de cada um dos testes, podemos verificar uma diferen\u00e7a na linha referente aos velocistas e na linha referente aos maratonistas","2e013764":"<a id='referencias'><\/a>\n### Refer\u00eancias:\n* Artigos\n * [Jogos Ol\u00edmpicos da Era Moderna: uma proposta de periodiza\u00e7\u00e3o](https:\/\/www.scielo.br\/pdf\/rbefe\/v24n1\/v24n1a06.pdf)\n* An\u00e1lises de Dados\n * [Olympic History: A Thorough Analysis](https:\/\/www.kaggle.com\/heesoo37\/olympic-history-data-a-thorough-analysis)","3714019f":"### Tema: Jogos Ol\u00edmpicos (De Atenas - 1896 at\u00e9 Rio 2016)","7c4e8db0":"\u00c9 previs\u00edvel encontrar que atletas com maior altura tem maior peso, ou seja \u00e0 medida que altura cresce, peso tamb\u00e9m cresce. O interessante da an\u00e1lise \u00e9 comparar a propor\u00e7\u00e3o de crescimento de altura para peso dos atletas de diferentes modalidades. Ent\u00e3o essa regress\u00e3o linear relaciona os dois testes de hip\u00f3tese feitos anteriormente: Os atletas Maratonistas s\u00e3o mais leves e menores enquanto que os velocistas s\u00e3o maiores e mais pesados. As fotos de Bolt e de Kipchoge s\u00e3o sim uma boa representa\u00e7\u00e3o de suas respectivas modalidades.\n\nEsse resultado pode ser explicado cientificamente pela fibra do m\u00fasculo do atleta e o tipo de treinamento requisitado por cada modalidade, isso capacita o atleta para modalidades de explos\u00e3o (anaer\u00f3bico) ou de longa dura\u00e7\u00e3o (aer\u00f3bico). Mas isso \u00e9 assunto para um outro trabalho l\u00e1 no CTE :)","88c818b3":"<a id='motivacao'><\/a>\n### Motiva\u00e7\u00e3o:\nO maior evento esportivo do planeta, os Jogos Olimpicos da Era Moderna, teve sua primeira edi\u00e7\u00e3o em 1896 e continua vivo at\u00e9 sua edi\u00e7\u00e3o mais recente em 2016. Atrav\u00e9s dos anos os Jogos sofreram diferentes acontecimentos hist\u00f3ricos que impactaram o mundo no S\u00e9culo XX. Analisar os dados dos jogos ol\u00edmpicos \u00e9 tamb\u00e9m analisar o contexto mundial no decorrer dos anos, por\u00e9m atrav\u00e9s da perspectiva do esporte.\nRealizar o trabalho final com dados Ol\u00edmpicos \u00e9 uma forma de unir 3 gostos pessoais: hist\u00f3ria, computa\u00e7\u00e3o e esportes.","d226a024":"Origem da base de dados: \n[Kaggle: 120 years of Olympic history: athletes and results](https:\/\/www.kaggle.com\/heesoo37\/120-years-of-olympic-history-athletes-and-results?select=athlete_events.csv)","e65ee24e":"Para facilitar o c\u00f3digo e o texto de agora em diante irei chamar os atletas dos 100 metros rasos de **velocistas** e os atletas da Maratona de **maratonistas**.\n\nAntes de continuar as an\u00e1lises, gostaria de apresentar uma observa\u00e7\u00e3o em rela\u00e7\u00e3o aos outliers que foram encontrados durante a an\u00e1lise desses dados.\n* Dimitrios Deligiannis foi o \u00fanico atleta maratonista que teve seu peso e altura registrados na base de dados. Ao realizar a regress\u00e3o linear no trabalho percebi que poderia haver algum erro na medi\u00e7\u00e3o do mesmo j\u00e1 que era um outlier muito extremo e que tamb\u00e9m os dados n\u00e3o batiam com as m\u00e9dias dos anos seguintes, que seguiam um mesmo padr\u00e3o. Portanto decidi remov\u00ea-lo das an\u00e1lises.\n* Os atletas velocistas tiveram 7 registros de altura e peso nas Olimp\u00edadas de 1896, que s\u00e3o relativamente parecidas com as m\u00e9dias dos outros anos, por\u00e9m como o objetivo final \u00e9 uma compara\u00e7\u00e3o entre ambas modalidades, irei remover tamb\u00e9m esses atletas e considerar minha an\u00e1lise para as Olimp\u00edadas de Ver\u00e3o de 1900 at\u00e9 2016.\n\nVamos agora formalizar nossos Testes de Hip\u00f3teses:\n\nDado n = 2.380 (1.130 velocistas e 1.250 maratonistas - todos os velocistas e maratonistas que possuem peso e altura registrados no banco de dados de 1896 at\u00e9 2016)\n* Teste 1:\n * Hip\u00f3tese Nula: A m\u00e9dia de **altura** dos velocistas **n\u00e3o \u00e9** maior que a m\u00e9dia de **altura** dos maratonistas\n * Hip\u00f3tese Alternativa: A m\u00e9dia de **altura** dos velocistas **\u00e9** maior que a m\u00e9dia de **altura** dos maratonistas\n\n\n* Teste 2:\n * Hip\u00f3tese Nula: A m\u00e9dia de **peso** dos velocistas **n\u00e3o \u00e9** maior que a m\u00e9dia de **peso** dos maratonistas\n * Hip\u00f3tese Alternativa: A m\u00e9dia de **peso** dos velocistas **\u00e9** maior que a m\u00e9dia de **peso** dos maratonistas\n\n<a id='testebootstrap'><\/a>\nVamos trabalhar com os dois testes em paralelo j\u00e1 que eles s\u00e3o bem parecidos em rela\u00e7\u00e3o \u00e0 formula\u00e7\u00e3o da hip\u00f3tese, mudam apenas em rela\u00e7\u00e3o \u00e0 caracter\u00edstica que estamos analisando.","2d982bea":"<a id='regressaolinear'><\/a>\n## Regress\u00e3o Linear\nContinuando a analisar Altura e Peso de atletas Ol\u00edmpicos das duas modalidades j\u00e1 citadas anteriormente, vamos agora tentar correlacionar essas duas vari\u00e1veis para atletas de uma mesma categoria. Quero saber o impacto da Altura no Peso dos atletas (X = Altura, Y = Peso) para ambos os casos. \n### Modelo\nVamos come\u00e7ar encontrando o modelo para cada uma das modalidades.","4db79d2b":"<a id='desempenho'><\/a>\n### Hist\u00f3rico do Desempenho dos Pa\u00edses nas Olimp\u00edadas\nOs dados utilizados para fim deste trabalho s\u00e3o relacionados aos atletas, seu respectivo evento-esporte e qual medalha ganhou durante os Jogos Ol\u00edmpicos. Para conseguir gerar o placar de medalhas de cada edi\u00e7\u00e3o dos Jogos Ol\u00edmpicos de Ver\u00e3o, foi necess\u00e1rio criar colunas auxiliares de medalhas de ouro, prata e broze e agrupar por evento esportivo, onde cada posi\u00e7\u00e3o do evento para cada pa\u00eds tem direito de, no m\u00e1ximo, uma medalha de cada posi\u00e7\u00e3o do p\u00f3dio.\nO placar ol\u00edmpico aqui apresentado \u00e9 um hist\u00f3rico das posi\u00e7\u00f5es nos Jogos Ol\u00edmpicos de Ver\u00e3o dos 15 primeiros colocados nas Olimp\u00edadas do Rio, 2016.\n\nO recorte temporal para an\u00e1lise do Hist\u00f3rico foi de 1988 at\u00e9 2016. Isso pois, devido a an\u00e1lise do gr\u00e1fico anterior, o \u00faltimo boicote e redu\u00e7\u00e3o na participa\u00e7\u00e3o de atletas nas Olimp\u00edadas foi em 1984. A partir de 1988 a quantidade de pa\u00edses e de atletas participantes n\u00e3o sofreram quedas dr\u00e1sticas. Portanto, fazendo o recorte de 1988 at\u00e9 2016 evitamos de ser influenciados por pa\u00edses alocados em posi\u00e7\u00f5es baixas na tabela, mas que, simplesmente, n\u00e3o compareceram aos Jogos Ol\u00edmpicos","0d191a6d":"Vamos interpretar os modelos:\n* Para encontrar o Peso de um velocista, eu preciso pegar 76% de sua altura e diminuir 63.31\n* Para encontrar o Peso de um maratonista, eu preciso pegar 59% de sua altura e diminuir 41.07","93aee3a8":"<a id='exploracoesfuturas'><\/a>\n## Explora\u00e7\u00f5es Futuras\n\nEste trabalho foi s\u00f3 um recorte totalmente enviezado (pois foi selecionado de acordo com o meu interesse) do banco de dado escolhido.\nAlgumas outras an\u00e1lises poderiam ser feitas para complementar as informa\u00e7\u00f5es adquiridas. Como, por exemplo:\n### Velocistas e Maratonistas\n* O peso e altura dos atletas velocistas e maratonistas sofreu algum tipo de mudan\u00e7a no decorrer dos anos?\n * O tempo (marcado pelo ano da edi\u00e7\u00e3o de cada Olimp\u00edada) \u00e9 uma vari\u00e1vel de confus\u00e3o na rela\u00e7\u00e3o entre peso e altura dos atletas velocistas e maratonistas?\n \n* Os atletas que atingiram o p\u00f3dio de cada uma das modalidades tem um padr\u00e3o de peso e altura que os possa diferenciar dos outros?\n\n### Rela\u00e7\u00e3o com outros bancos\n* As Olimp\u00edadas podem ser consideradas um medidor do quanto os pa\u00edses investem no esporte?\n * Analisar o or\u00e7amento para esporte dos pa\u00edses com o resultado dos mesmos nas Olimp\u00edadas por ano\n\n* Seria poss\u00edvel criar um padr\u00e3o para estimar o resultado de uma certa modalidade das Olimp\u00edadas? Por exemplo, o tempo do atleta vencedor da Maratona.\n\n* Como se deu historicamente as \"quebras\" de recorde ol\u00edmpico para cada modalidade?\n\nDentre muitas outras.","b8421e24":"<a id='visualizacaomodelo'><\/a>\n### Visualizando o Modelo no gr\u00e1fico de dispers\u00e3o\nVamos conseguir entender melhor o modelo encontrado assim que plotarmos o gr\u00e1fico de dispers\u00e3o:","a3561ff2":"Atrav\u00e9s do resultado das permuta\u00e7\u00f5es plotado nos gr\u00e1ficos acima fica mais claro ainda poder descartar a Hip\u00f3tese Nula e considerar a Hip\u00f3tese Alternativa em ambos os testes. \u00c9 muito raro uma diferen\u00e7a entre m\u00e9dias de Weight e Height como observado no mundo real acontecer ao acaso.","553e447d":"Com base no gr\u00e1fico, podemos destacar algumas observa\u00e7\u00f5es:\n* A grid do eixo x foi colocada propositalmente acada 4 anos, onde deveriam acontecer todos os jogos Ol\u00edmpicos. Por\u00e9m h\u00e1 uma edi\u00e7\u00e3o marcada em 1906, al\u00e9m de n\u00e3o haver edi\u00e7\u00e3o no ano de 1916, 1940 e 1944:\n * **Jogos Intercalados (1906)**: Os Jogos Ol\u00edmpicos ainda tinham uma hist\u00f3ria bem recente. Apesar de terem sido um sucesso na Gr\u00e9cia na sua primeira edi\u00e7\u00e3o, foram \"deixados na sombra\" por outros eventos internacionais nas edi\u00e7\u00f5es de Paris (em 1900) e de St. Louis (em 1904). A ideia dos Jogos Intercalados era de acontecer sempre em Atenas, o ber\u00e7o das Olimp\u00edadas. Por mais que o idealizador das Olimpiadas modernas, Pierre de Coubertin, fosse contra, a primeira edi\u00e7\u00e3o dos Jogos Intercalados aconteceram em 1906 com o apoio do Comit\u00ea Ol\u00edmpico Internacional. Por\u00e9m, a Gr\u00e9cia n\u00e3o conseguiu manter o ritmo dos pr\u00f3ximos Jogos Intercalados depois de sua primeira e \u00fanica edi\u00e7\u00e3o e, ap\u00f3s a Primeira Guerra Mundial, a ideia foi deixada de lado. Atualmente o evento em 1906 n\u00e3o \u00e9 nem reconhecido pelo Comit\u00ea Ol\u00edmpico como Olimp\u00edada. Por isso, para finalidade deste trabalho, as informa\u00e7\u00f5es referentes aos Jogos Intercalados de 1906 ser\u00e3o retiradas dos dados. Fonte: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Intercalated_Games)\n * **Primeira e Segunda Guerra Mundial**: A edi\u00e7\u00e3o das Olimp\u00edadas de 1916, 1940 e 1944 foram canceladas devido \u00e0 Primeira e Segunda Guerras Mundiais.\n\n\n* As edi\u00e7\u00f5es dos Jogos Ol\u00edmpicos de Ver\u00e3o dos anos de 1932 e 1956 tiveram quedas dr\u00e1sticas na quantidade de atletas participantes. A edi\u00e7\u00e3o de 1980 al\u00e9m de ter uma queda dr\u00e1stica tanto na quantidade de atletas participantes quanto na quantidade de pa\u00edses.\n * **Los Angeles, 1932**: A queda na quantidade de participantes da Olimp\u00edada de 1932 se d\u00e1 pela mesma ter acontecido no meio da Grande Depress\u00e3o, no oeste dos Estados Unidos. O que inviabilizou a ida de muitos atletas, principalmente da Europa. Fonte: [FEI](https:\/\/www.fei.org\/history\/olympic-games\/1932-los-angeles-usa)\n * **Melbourne, 1956**: As Olimp\u00edadas de 1956 sofreram uma s\u00e9rie de boicotes: Egito, Iraque Cambodia e L\u00edbano anunciaram que n\u00e3o iria participar devido \u00e0 crise de Suez, quando o Egito foi invadido por Israel, Reino Unido e Fran\u00e7a. Holanda, Espanha e Sui\u00e7a boicotaram o evento em protesto \u00e0 presen\u00e7a da Uni\u00e3o Sovi\u00e9tica que tinha acabado de massacrar a Revolu\u00e7\u00e3o H\u00fangara. A China optou por boicotar o evento em protesto ao Taiwan ter sido reconhecido como pa\u00eds e ser permitido de participar. Por mais que a quantidade de pa\u00edses participantes n\u00e3o tenha ca\u00eddo significativamente, a quantidade de atletas participantes teve uma quedra dr\u00e1stica, isso porque os pa\u00edses que n\u00e3o participaram tinham um coro alto nas Olimp\u00edadas. Fonte: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/1956_Summer_Olympics) e [Inside The Games](https:\/\/www.insidethegames.biz\/articles\/1020529\/the-1956-olympics-in-melbourne-were-affected-by-a-number-of-boycotts)\n * **Montreal, 1976**: Os jogos de Montreal foram boicotados por 22 pa\u00edses (o que justifica a queda tanto na quantidade de atletas quanto na quantidade de pa\u00edses) devido ao Apartheid na \u00c1frica do Sul. Fonte: [NY Times](https:\/\/www.nytimes.com\/1976\/07\/18\/archives\/22-african-countries-boycott-opening-ceremony-of-olympic-games.html).\n * **Moscou, 1980**: Os jogos de Moscou foram boicotados por uma grande quantidade de pa\u00edses (incentivados pelos Estados Unidos) em protesto \u00e0 invas\u00e3o da Uni\u00e3o Sovi\u00e9tica ao Afeganist\u00e3o. Fonte:[Wikipedia](https:\/\/en.wikipedia.org\/wiki\/1980_Summer_Olympics_boycott)\n * **Los Angeles, 1984**: Em 1984 foi a vez da Uni\u00e3o Sovi\u00e9tica e seus aliados boicotarem os Jogos Ol\u00edmpicos nos EUA, respondendo ao boicote nos jogos anteriores. Por isso a quantidade de atletas participantes teve um aumento brando nessa Olimp\u00edada, deixando a quantidade recorde no n\u00famero de participantes de 1972 ser superada apenas pela edi\u00e7\u00e3o posterior, as Olimp\u00edadas de Seul, em 1988). Fonte: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/1984_Summer_Olympics_boycott)\n \n \n* As atletas ganhando seu espa\u00e7o nas Olimp\u00edadas:\n * Pierre de Coubertin era contra a participa\u00e7\u00e3o de mulheres nos jogos Ol\u00edmpicos, segundo ele: \"an Olympiad with females would be impractical, uninteresting, unaesthetic and improper.\" Fonte: [Irish Times](https:\/\/www.irishtimes.com\/news\/an-olympiad-with-females-would-be-impractical-uninteresting-unaesthetic-and-improper-baron-pierre-de-coubertin-1.1222948)\n * A primeira edi\u00e7\u00e3o dos Jogos Ol\u00edmpicos foi realizada sem qualquer participa\u00e7\u00e3o feminina, como deveria ser, nos olhos de seu idealizador. Por\u00e9m, Stamati Revithi, uma mulher grega, ap\u00f3s ter seu pedido negado de poder participar da Maratona, correu sozinha o mesmo percurso dos atletas no dia seguinte. A sua volta final foi completada do lado de fora do est\u00e1dio, j\u00e1 que ela n\u00e3o foi permitida entrar no mesmo. Somente um s\u00e9culo depois, nas Olimp\u00edadas de Los Angeles, em 1984, foi permitida a participa\u00e7\u00e3o feminina na modalidade Maratona das Olimp\u00edadas. Fonte: [Irish Times](https:\/\/www.irishtimes.com\/news\/an-olympiad-with-females-would-be-impractical-uninteresting-unaesthetic-and-improper-baron-pierre-de-coubertin-1.1222948)\n * Apenas a partir da segunda edi\u00e7\u00e3o dos Jogos Ol\u00edmpicos de Ver\u00e3o da Era Moderna foi permitido a participa\u00e7\u00e3o feminina, por\u00e9m apenas no T\u00eanis e Golf. Com o tempo, as mulheres puderam participar de Arco, Ginastica, Skate e Nata\u00e7\u00e3o.\n * **Montreal, 1976**: A participa\u00e7\u00e3o feminina (em porcentagem) cresceu significativamente nas Olimp\u00edadas de Montreal, em 1976, comparado com sua predecessora. Isso se deu, pois em Montreal, foi a primeira vez em que as mulheres puderam participar de Basquete e Handball (jogos coletivos que demandam uma quantidade grande de atletas), al\u00e9m do Remo."}}