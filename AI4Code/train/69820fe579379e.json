{"cell_type":{"fa88af56":"code","b692d30c":"code","d4a47a3a":"code","7bb7c452":"code","b0c9e8b4":"code","8045c437":"code","425abb20":"code","2a9ab9cc":"code","c87ecc7d":"code","a1d1f49e":"markdown","69ea1501":"markdown","a115ab20":"markdown","bc377abf":"markdown","38e7c609":"markdown","b9a53009":"markdown","bc763a5c":"markdown","78799cd7":"markdown","66d7d1e4":"markdown","5f6a7425":"markdown"},"source":{"fa88af56":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ntrain = pd.read_csv('..\/input\/posmlstudy2\/train.csv')\n\n# \ud30c\uc0dd\ubcc0\uc218 \uc0dd\uc131 (\ucd1d \ud559\uad50\uc218, \uc2e0\uaddc\uc804\uc785\uc778\uad6c \ube44\uc728)\ntrain['schools'] = train['elemen_school'] + train['middle_school'] + train['high_school'] + train['special_school']\ntrain['newcommer_ratio'] = train['newcommer_1yr']\/train['population']\n\n# \ubd88\ud544\uc694 \ubcc0\uc218 \uc81c\uac70\ntrain = train.drop(['id', 'address', 'sigungu'], axis=1)","b692d30c":"fig, ax = plt.subplots(nrows = 6, ncols = 5, figsize = (18, 20))\nnum = 0\nax = ax.flatten()\nfor col in list(train.columns[1:]):\n    sns.distplot(train[col], ax = ax[num], kde = False, rug = True)\n    num += 1    \nplt.show()","d4a47a3a":"fig, ax = plt.subplots(nrows = 6, ncols = 5, figsize = (18, 20))\nnum = 0\nax = ax.flatten()\nfor col in list(train.columns[1:]):\n    sns.boxplot(train[col], ax = ax[num])\n    num += 1    \nplt.show()","7bb7c452":"corr = train.iloc[:,1:].corr()\ntop_corr_features = corr.index\nplt.figure(figsize=(20,20))\n#plot heat map\ng=sns.heatmap(train[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")","b0c9e8b4":"# 'Price' \ubcc0\uc218\uc640 \uc0c1\uad00\uad00\uacc4\uac00 \ub192\uc740 \uc0c1\uc704 8\uac1c \uceec\ub7fc\uac04 \uad00\uacc4\ubd84\uc11d\ntop8_cols = train.corr()['price'].abs().sort_values(ascending=False).head(8).index.to_list()\n\nplt.figure(figsize=(20,20))\nsns.pairplot(train[top8_cols], palette=\"husl\")","8045c437":"# \uc2dc\ub3c4\uba85 \uc601\ubb38 \ubcc0\ud658\nsido_dict = {'\uc11c\uc6b8': 'seoul', '\uc778\ucc9c': 'incheon', '\ub300\uc804': 'daejeon', '\uad11\uc8fc': 'gwangju', '\ub300\uad6c': 'daegu',\n             '\uc6b8\uc0b0': 'ulsan', '\ubd80\uc0b0': 'busan', '\uc138\uc885': 'sejong', '\uc81c\uc8fc': 'jeju', '\uacbd\uae30':'gyeonggi',\n             '\uac15\uc6d0': 'gangwon', '\ucda9\ubd81': 'chungbuk', '\ucda9\ub0a8': 'chungnam', '\uacbd\ubd81': 'gyeongbuk',\n             '\uacbd\ub0a8': 'gyeongnam', '\uc804\ubd81': 'jeonbuk', '\uc804\ub0a8':'jeonnam'}\ntrain['sido'] = train['sido'].map(sido_dict)\n\n# \uc2dc\ub3c4\ubcc4 \ub370\uc774\ud130 \uc218 - \ud30c\uc774\ucc28\ud2b8\nf, ax=plt.subplots(1,2, figsize=(22,8))\ntrain['sido'].value_counts().plot.pie(autopct = '%1.1f%%', ax=ax[0], shadow=True)\nax[0].set_ylabel('')\nsns.countplot('sido', data=train, ax=ax[1])\nplt.xticks(\n    rotation=45, \n    horizontalalignment='right',\n    fontweight='light',\n    fontsize='x-large'  \n)\nplt.show()","425abb20":"# \uc2dc\ub3c4\ubcc4 \ud3c9\uade0 \uc544\ud30c\ud2b8 \ub9e4\ub9e4\uac00\uaca9\nplt.figure(figsize=(16,8))\nplt.title('sido mean price', fontsize=15)\nplt.xticks(\n    rotation=45, \n    horizontalalignment='right',\n    fontweight='light',\n    fontsize='x-large')\nsns.barplot('sido','price',data=train)","2a9ab9cc":"# \uc2dc\ub3c4 \ubcc4 \uc544\ud30c\ud2b8 \ub9e4\ub9e4\uac00\uaca9 Boxplot\nplt.figure(figsize=(16,8))\nsns.boxplot(x=\"sido\", y=\"doctor\", data=train)\nplt.ylabel('price', fontsize=12)\nplt.xticks(\n    rotation=45, \n    horizontalalignment='right',\n    fontweight='light',\n    fontsize='x-large')\nplt.title(\"sido price boxplot\", fontsize=15)\nplt.show()","c87ecc7d":"fig, ax = plt.subplots(nrows = 5, ncols = 3, figsize = (18, 20))\nnum = 0\nax = ax.flatten()\nvars = ['price', 'population', 'brand_apt', 'apt_age', 'unsold', 'trade_6m', 'rent_6m', 'doctor', 'motel', 'industry', 'commerce', 'starbucks', 'real_estate', 'subway','schools']\nfor var in vars:\n    price_mean_by_tugi = train.groupby('tugi')[var].mean()\n    label = train['tugi'].unique()\n    index = np.arange(len(label))\n    ax[num].bar(label, price_mean_by_tugi)\n    ax[num].set_xlabel('tugi', fontsize=12)\n    ax[num].set_ylabel('mean_'+var, fontsize=12)\n    ax[num].set_xticks(label)\n    plt.show\n    num += 1    ","a1d1f49e":"## Pairplot","69ea1501":"# Data \uc0c1\uad00\uad00\uacc4","a115ab20":"# \ud22c\uae30\uc9c0\uc5ed \uc5ec\ubd80\uc5d0 \ub530\ub978 \ud3c9\uade0 \uac00\uaca9, \uc778\uad6c\uc218, \ube0c\ub79c\ub4dc \uc544\ud30c\ud2b8 \uc218 \ub4f1 \uc8fc\uc694 \ubcc0\uc218 \ud3c9\uade0\uac12 \ube44\uad50","bc377abf":"# Data \ubd84\ud3ec","38e7c609":"# \uc2dc\ub3c4 \ub370\uc774\ud130 \ubd84\ud3ec \ubc0f \uc2dc\ub3c4\ubcc4 \ud3c9\uade0 \uac00\uaca9","b9a53009":"- \uacbd\uae30\uc9c0\uc5ed \ub370\uc774\ud130\uac00 400\uac74 \uc774\uc0c1\uc73c\ub85c \uac00\uc7a5 \ub9ce\uace0, \uc11c\uc6b8, \uacbd\ub0a8\uc21c\uc73c\ub85c \ub9ce\uc74c","bc763a5c":"## Boxplot","78799cd7":"## Heatmap","66d7d1e4":"- \uc2dc\ub3c4\ubcc4 \ud3c9\uade0 \ud3c9\ub2f9 \uac00\uaca9\uc740 \uc11c\uc6b8\uc774 \uc57d 3,500\ub9cc\uc6d0\uc73c\ub85c \uac00\uc7a5 \ub192\uace0, \uc138\uc885\uc774 \uc57d 1,700\ub9cc\uc6d0\uc73c\ub85c \ub450\ubc88\uc9f8\ub85c \ub192\uc74c","5f6a7425":"## Histogram"}}