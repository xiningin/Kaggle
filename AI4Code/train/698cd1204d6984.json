{"cell_type":{"8bedd153":"code","a0de7c6c":"code","e54f567c":"code","4ded471b":"code","1452b029":"code","e83904b5":"code","f517bef0":"code","594e85bb":"code","e5c23bba":"code","f2d051a3":"code","5cf393c5":"code","36ffd5b8":"code","19714043":"code","ee280061":"code","805c13fc":"code","87abf696":"code","428e9eed":"code","ab21a06a":"code","0385d624":"code","3282d161":"code","60e6d773":"code","b6183862":"code","904695f1":"code","7133c017":"code","e4c61614":"code","367bb9ec":"code","4086c3cc":"code","f5e6a1bf":"code","6a236026":"code","1508738b":"code","52702124":"code","241cffd1":"code","ab7e7da9":"code","711dd288":"code","37820942":"code","410e3068":"code","eafe84a8":"code","c16e521b":"code","5a491e67":"code","09abb177":"code","2845415f":"code","08bee1f3":"code","c76b734a":"code","690aadf7":"code","8d99ba39":"code","c43b631c":"code","e5d28edd":"code","5e1574a8":"code","a9295979":"code","2ad7742a":"code","65495813":"code","b98a1e35":"code","e035a7d9":"code","68747535":"code","eaccceaf":"code","474f101a":"code","a984df21":"code","81ed698e":"code","ee446294":"code","4160c264":"code","cb8183e3":"code","f3e9375f":"code","5329eb23":"code","470b59ca":"markdown","b2e1b5e8":"markdown","c6fe8283":"markdown","361a2322":"markdown","703c9b3f":"markdown","3d201673":"markdown","534db6d5":"markdown","3f61b412":"markdown","2171db27":"markdown","34c9e9b7":"markdown","8f1af1eb":"markdown","734f0fba":"markdown","1f9d881a":"markdown"},"source":{"8bedd153":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.api as stats\nfrom sklearn.linear_model import LinearRegression,Ridge,Lasso\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor as vifactor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import RFE\nfrom sklearn.metrics import r2_score\n%matplotlib inline","a0de7c6c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","e54f567c":"df=pd.read_csv(\"\/kaggle\/input\/car-price-prediction\/CarPrice.csv\")\ndf.head()\n#df.columns","4ded471b":"df.loc[df.duplicated()] # for checking duplicates","1452b029":"df['price'].describe()","e83904b5":"sns.distplot(df['price'])","f517bef0":"sns.boxplot(y=df['price'])","594e85bb":"df['CarName'].value_counts().plot(kind='bar')","e5c23bba":"df['fueltype'].value_counts().plot(kind='bar')","f2d051a3":"df['carbody'].value_counts().plot(kind='bar')","5cf393c5":"sns.countplot(df['symboling'])\n#df['symboling'].value_counts().plot(kind='bar')\nplt.show()\nsns.boxplot(x=df.symboling,y=df.price)","36ffd5b8":"#df['enginetype'].value_counts().plot(kind='bar')\nsns.countplot(df['enginetype'])","19714043":"sns.boxplot(x='enginetype',y='price',data=df)","ee280061":"# using group by ().mean()\nq=pd.DataFrame(df.groupby(['enginetype'])['price'].mean\n               ().sort_values(ascending=False))\nq.plot.bar()","805c13fc":"sns.countplot(df['doornumber'])","87abf696":"sns.boxplot(x='doornumber',y='price',data=df)","428e9eed":"sns.countplot(df['aspiration'])","ab21a06a":"sns.boxplot(x='aspiration',y='price',data=df)","0385d624":"def plot_c(x,fig):\n    plt.subplot(4,2,fig)\n    plt.title(x+'Histogram')\n    sns.countplot(df[x])\n    #plt.show()\n    plt.subplot(4,2,(fig+1))\n    plt.title(x + 'vs price')\n    sns.boxplot(x=df[x],y=df['price'])\n    plt.legend(loc='best')\n    #plt.show()\nplt.figure(figsize=(15,20))\nplot_c('enginelocation',1)\nplot_c('cylindernumber', 3)\nplot_c('fuelsystem', 5)\nplot_c('drivewheel', 7)\nplt.tight_layout()","3282d161":"def scatter(x,fig):\n    plt.subplot(5,2,fig)\n    plt.scatter(df[x],df['price'])\n    plt.title(x+' vs Price')\n    plt.ylabel('Price')\n    plt.xlabel(x)\n\nplt.figure(figsize=(10,20))\n\nscatter('carlength', 1)\nscatter('carwidth', 2)\nscatter('carheight', 3)\nscatter('curbweight', 4)\n\nplt.tight_layout()","60e6d773":"# fuel economy \ndf['fueleconomy']=(0.55* df['citympg'])+ (0.45*df['highwaympg'])\ndf.fueleconomy","b6183862":"# binning car companies based on avg price of each company...\ndf['price']=df['price'].astype('int')\nt=df.copy()\ntable=t.groupby(['CarName'])['price'].mean()\nt=t.merge(table.reset_index(),how='left',on='CarName')\nbins=[0,10000,20000,40000]\ncars_bins=['Budget','Medium','highend']\ndf['carsrange']=pd.cut(t['price_y'],bins,labels=cars_bins)","904695f1":"df.head()","7133c017":"df.corr()","e4c61614":"df1 = df[['price','fueltype', 'aspiration','carbody', 'drivewheel',\n              'wheelbase','curbweight', 'enginetype', 'cylindernumber', \n              'enginesize', 'boreratio','horsepower','fueleconomy', \n              'carlength','carwidth', 'carsrange']]\ndf1.head()","367bb9ec":"sns.pairplot(df1)","4086c3cc":"# creating dummy variable for categorical variable::\ndef dummies_v(x,df1):\n    temp=pd.get_dummies(df1[x],drop_first=True)\n    df1=pd.concat([df1,temp],axis=1)\n    df1.drop([x],inplace=True,axis=1)\n    return df1\ndf1=dummies_v('fueltype',df1)\ndf1=dummies_v('aspiration',df1)\ndf1=dummies_v('carbody',df1)\ndf1=dummies_v('drivewheel',df1)\ndf1=dummies_v('enginetype',df1)\ndf1=dummies_v('cylindernumber',df1)\ndf1=dummies_v('carsrange',df1)\ndf1.head()","f5e6a1bf":"x=df1[['wheelbase', 'curbweight', 'enginesize', 'boreratio',\n       'horsepower', 'fueleconomy', 'carlength', 'carwidth', 'gas', 'turbo',\n       'hardtop', 'hatchback', 'sedan', 'wagon', 'fwd', 'rwd', 'dohcv', 'l',\n       'ohc', 'ohcf', 'ohcv', 'rotor', 'five', 'four', 'six', 'three',\n       'twelve', 'two', 'Medium', 'highend']]\ny=df1['price']","6a236026":"# OLS SUMMARY\ndef build_model(x,y):\n    a=stats.OLS(y,x)\n    l=a.fit()\n    print(l.summary())\n    return (x)","1508738b":"\ndef checkVIF(X):\n    vif = pd.DataFrame()\n    vif['Features'] = X.columns\n    vif['VIF'] = [vifactor(X.values, i) for i in range(X.shape[1])]\n    vif['VIF'] = round(vif['VIF'], 2)\n    vif = vif.sort_values(by = \"VIF\", ascending = False)\n    return(vif)","52702124":"df_train,df_test=train_test_split(df1,test_size=0.3,random_state=100)","241cffd1":"df_train.head()","ab7e7da9":"scaler = MinMaxScaler()\nnum_var= ['wheelbase', 'curbweight', 'enginesize', \n            'boreratio', 'horsepower','fueleconomy','carlength','carwidth',\n            'price']\ndf_train[num_var]=scaler.fit_transform(df_train[num_var])\n","711dd288":"df_train.head()","37820942":"plt.figure(figsize=(40,40))\nsns.heatmap(df_train.corr(),annot=True)\nplt.show()","410e3068":"# Dividing data into x and y variable\ny_train=df_train.pop('price')\nx_train=df_train","eafe84a8":"# Model Building\nlr=LinearRegression()\nlr.fit(x_train,y_train)\nrfe=RFE(lr,10)\nrfe=rfe.fit(x_train,y_train)","c16e521b":"list(zip(x_train.columns,rfe.support_,rfe.ranking_))","5a491e67":"x_train.columns[rfe.support_]","09abb177":"x_train_rfe=x_train[x_train.columns[rfe.support_]]","2845415f":"x_train_rfe.head()","08bee1f3":"x_train_new=build_model(x_train_rfe,y_train)","c76b734a":"x_train_new=x_train_rfe.drop(['fueleconomy'],axis=1)","690aadf7":"\nx_train_new= build_model(x_train_new,y_train)","8d99ba39":"x_train_new= x_train_new.drop(['twelve'],axis=1)","c43b631c":"\nx_train_new= build_model(x_train_new,y_train)","e5d28edd":"x_train_new=x_train_new.drop(['wheelbase'],axis=1)\nx_train_new= build_model(x_train_new,y_train)","5e1574a8":"x_train_new=x_train_new.drop(['dohcv'],axis=1)\nx_train_new= build_model(x_train_new,y_train)","a9295979":"checkVIF(x_train_new)","2ad7742a":"x_train_new=x_train_new.drop(['curbweight'],axis=1)\nx_train_new= build_model(x_train_new,y_train)","65495813":"x_train_new=x_train_new.drop(['wagon'],axis=1)\nx_train_new= build_model(x_train_new,y_train)","b98a1e35":"checkVIF(x_train_new)","e035a7d9":"lm = stats.OLS(y_train,x_train_new).fit()\ny_train_price = lm.predict(x_train_new)\n# Plot the histogram of the error terms\nfig = plt.figure()\nsns.distplot((y_train - y_train_price), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18) ","68747535":"scaler = MinMaxScaler()\nnum_var= ['wheelbase', 'curbweight', 'enginesize', \n            'boreratio', 'horsepower','fueleconomy','carlength','carwidth','price']\ndf_test[num_var]=scaler.fit_transform(df_test[num_var])","eaccceaf":"y_test=df_test.pop('price')\nx_test=df_test\n\n","474f101a":"x_test_new=x_test[x_train_new.columns]","a984df21":"\n#lr.fit(x_train_new,y_train)","81ed698e":"y_pred=lm.predict(x_test_new)","ee446294":"r2_score(y_test,y_pred)","4160c264":"x_train_new.shape","cb8183e3":"ax1=sns.distplot(y_test,hist=False,label='actual-value')\nsns.distplot(y_pred,hist=False,label='predicted value',ax=ax1)","f3e9375f":"lm.summary()","5329eb23":"#EVALUATION OF THE MODEL\n# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test,y_pred)\nfig.suptitle('y_test vs y_pred', fontsize=20)              # Plot heading \nplt.xlabel('y_test', fontsize=18)                          # X-label\nplt.ylabel('y_pred', fontsize=16) ","470b59ca":"# list of significant variable afte visualisation are :::\n### Car Range,Engine Type,Fuel type,Car Body,Aspiration,Cylinder Number,Drivewheel,Curbweight,Car Length,\n### Car width,Engine Size,Boreratio,Horse Power,Wheel base,Fuel Economy","b2e1b5e8":"# Inferences ::\n###  OHC seems to be most favored type \n###  OHC and OHCV have  low price range\n### OHCV have highest price range","c6fe8283":"# Train Test Split","361a2322":"# Problem Statement\n## A Chinese automobile company Geely Auto aspires to enter the US market by setting up their manufacturing unit there and producing cars locally to give competition to their US and European counterparts.\n\n## They have contracted an automobile consulting company to understand the factors on which the pricing of cars depends. Specifically, they want to understand the factors affecting the pricing of cars in the American market, since those may be very different from the Chinese market. The company wants to know:\n\n## Which variables are significant in predicting the price of a car\n## How well those variables describe the price of a car\n## Based on various market surveys, the consulting firm has gathered a large data set of different types of cars across the America market.","703c9b3f":"# Inference ::\n### most common  cylinder type 4,5,6 but 8 is quite high price range...\n### Rwd drivewheel is preferred most \n### mpfi and 2bbl most coommon fuel systems...","3d201673":"# Inferences::\n### 2 Door car are similarly priced and having highest selling quantity.","534db6d5":"# Inferences ::\n###  aspiration wih turbo are having higher price range than std \n### (though it have some value outside the whiskers) ","3f61b412":"## Inference :: Price plot seems to be right skewed means                          most cars price are  below 15K .\n##                  :: Data point are far spread out from the mean                           ,which indicates high variance in car                                     prices.","2171db27":"# Inferences \n## :: Sedan is the most favored car type\n## :: No. of gas fueled cars are more than the diesel.\n## :: Toyota seems to be most favored car company.\n","34c9e9b7":"# Visualising Categorical Data\n\n### 1.Company Name\n###  2.Symboling\n###  3. FuelType\n###  4.Engine Type\n### 5.carbody\n### 6.doornumber\n### 7. enginelocation\n### 8.fuelsystem\n### 9.cylindernumber\n### 10.aspiration\n### 11.drivewheel\n       ","8f1af1eb":"# Inferences ::\n### symbol 0 and 1 are more sold than any one else ..\n### symbol -1 is seems to be high priced as insurance risk rating is low\n### symbol 1 is priced little low, -2 and 3 rating are priced similR TO EACH other","734f0fba":"# Business Goal\n## We are required to model the price of cars with the available independent variables. It will be used by the management to understand how exactly the prices vary with the independent variables. They can accordingly manipulate the design of the cars, the business strategy etc. to meet certain price levels. Further, the model will be a good way for management to understand the pricing dynamics of a new market.","1f9d881a":"# inference:: Car height doesn't show any significant trend with price.\n"}}