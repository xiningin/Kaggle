{"cell_type":{"f5bdaad6":"code","2bb61118":"code","eb626855":"code","9fe4eceb":"markdown"},"source":{"f5bdaad6":"import tensorflow as tf\nimport numpy as np\nfrom tensorflow import keras","2bb61118":"\ndef house_model(y_new):\n    \n    xs = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 10.0], dtype = float)\n    ys = np.array([100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 550.0], dtype = float)\n    \n    model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape = [1])])\n\n    model.compile(optimizer = 'sgd', loss = 'mean_squared_error')\n    \n    model.fit(xs, ys, epochs = 500)\n    \n    return model.predict(y_new)[0]","eb626855":"prediction = house_model([7.0])\nprint(prediction)","9fe4eceb":"You'll try to build a neural network that predicts the price of a house according to a simple formula.\n\nSo, imagine if house pricing was as easy as a house costs 50k + 50k per bedroom, so that a 1 bedroom house costs 100k, a 2 bedroom house costs 150k etc.\n\nHow would you create a neural network that learns this relationship so that it would predict a 7 bedroom house as costing close to 400k etc.\n"}}