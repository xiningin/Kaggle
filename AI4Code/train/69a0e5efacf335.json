{"cell_type":{"b20304da":"code","3d9218cb":"code","e5de22b9":"code","70829b25":"code","07e28e31":"code","07e9dac2":"code","7069f4cb":"code","f6bb28ef":"code","47d11305":"code","706ef1b8":"code","ba669714":"code","c9bfce1a":"code","fa58acc8":"code","d77f454d":"code","9b2f41f2":"code","9dcb3858":"code","944ad68f":"code","ecbe9028":"code","7202ff81":"code","9104bb9b":"code","1d619f15":"code","c7db079f":"code","9f037795":"code","b3e9f13a":"code","ce9593b8":"code","14e025f0":"code","f6628cfe":"code","d2e9643e":"code","c925c5bc":"code","18803e58":"code","e68e7c64":"code","437f0933":"code","3db29ff1":"code","d2227e3d":"code","e957742f":"code","20cb8444":"code","64bc8265":"code","5453e669":"code","0a6548c7":"code","b88050a6":"code","19a1a415":"code","30464362":"code","68065220":"code","116d4452":"code","f8d800ca":"code","ad6d8b9d":"code","5b02c466":"code","fee972fe":"code","e3760f46":"code","bf34f6bb":"code","f8b50fa8":"code","185b55d7":"code","86974b65":"code","e0204606":"code","aecd6f61":"code","db4feb12":"code","0cd93072":"code","30d9fe83":"code","ca1d35db":"code","dee76c7d":"code","52228805":"code","26746552":"code","5b491ceb":"code","41b69b06":"markdown"},"source":{"b20304da":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        ","3d9218cb":"\n\n\nimport pandas as pd\nfrom matplotlib import style\nstyle.use('ggplot')\nnovo = pd.read_excel(\"\/kaggle\/input\/bd-hopkins-corrected-and-updated\/bdHopkins.xlsx\")\nnovo = novo.sort_values(by='date')\n","e5de22b9":"novo[novo['Country\/Region'] == 'Portugal'].tail()","70829b25":"ultimaData = novo[novo[\"Country\/Region\"] == \"Portugal\"][\"date\"].max()\nultimoDia = ultimaData.date()\nprint(\"\u00daltima data em que h\u00e1 dados de Portugal: \", ultimoDia)","07e28e31":"\"e da Austria {}\".format(novo[novo[\"Country\/Region\"] == \"Austria\"][\"date\"].max().date())","07e9dac2":"# Constr\u00f3i o gr\u00e1fico comparativo da evolu\u00e7\u00e3o nos 20 dias a partir dos 100 casos\ntabela = pd.pivot_table(novo, values='CumConfirmed', index=['date', 'Country\/Region'], aggfunc=np.sum)\ntabela.reset_index(inplace = True)\ntabela['Casos'] = tabela.CumConfirmed.astype('int32')\ntabela['Data'] = pd.to_datetime(tabela['date'])\ndel tabela['date']\ndel tabela['CumConfirmed']\nmaximocasos = 1000\ntabela = tabela[tabela['Casos'] > maximocasos]\ntabela.rename(columns = {'Country\/Region' : 'Pa\u00eds'}, inplace = True)\npaises = tabela['Pa\u00eds'].unique()\ntudo = pd.DataFrame()\nfor pais in paises:\n    pais = tabela[tabela['Pa\u00eds'] == pais]\n    pais.reset_index(inplace = True, drop = True)\n    pais.reset_index(inplace = True)\n    tudo = pd.concat([tudo, pais], axis = 0)\ntudo.rename(columns = {'index' : 'Dias'}, inplace = True)\ntudo = tudo[tudo['Pa\u00eds'] != 'Others']\ntudo1 = tudo[tudo['Pa\u00eds'] != 'China']\n#selecao = ['Portugal', 'Switzerland','Korea, South', 'Italy', 'Spain', 'France', 'Germany', 'United Kingdom', 'US']\nselecao = ['Portugal', 'Austria', 'Czechia', 'Germany', 'Denmark', 'Norway']\ntudo2 = tudo1[tudo1['Pa\u00eds'].isin(selecao)]\ntabela2 = pd.pivot_table(tudo2, values='Casos', index=['Dias'],\n                    columns=['Pa\u00eds'], aggfunc=np.sum)\n#tabela2 = tabela2[tabela2.index <= 50]\nresumo = tabela2\nimport matplotlib.pyplot as plt \n%matplotlib inline\nplt.figure()\nresumo.plot(style = {'Portugal' : 'k-o'}, \\\n            title = 'Casos a seguir ao caso {} - situa\u00e7\u00e3o em: {}'.format(maximocasos, ultimoDia), \\\n            figsize=(20,10), linewidth = 5);\nplt.xlabel('Dias desde o caso {}'.format(maximocasos))\nplt.ylabel('N\u00famero de Casos');","7069f4cb":"resumo.tail()","f6bb28ef":"\npercentual = resumo.pct_change()[1:]*100\npercentual = percentual[percentual[\"Portugal\"] != 0 ]\nplt.figure()\npercentual.plot(style = {'Portugal' : 'k'}, \\\n            title = 'Varia\u00e7\u00e3o percentual de casos nos dias a seguir ao caso {} - situa\u00e7\u00e3o em: {}'.format(maximocasos, ultimoDia), \\\n            figsize=(20,10), kind='bar');\nplt.xlabel('Dias desde o cent\u00e9simo caso')\nplt.ylabel('Varia\u00e7\u00e3o percentual');","47d11305":"percentual.tail()","706ef1b8":"percentual2 = percentual\npercentual2[\"M\u00e9dia\"] = percentual2.mean(axis = 1)\ncompara2 = percentual2[['Portugal', 'M\u00e9dia']]\nprint(selecao)\nplt.figure()\ncompara2[-21:].plot(title = 'Varia\u00e7\u00e3o comparada com a m\u00e9dia de {} - situa\u00e7\u00e3o em: {}'.format(selecao, ultimoDia), \\\n            figsize=(20,10), kind='bar');\nplt.xlabel('Dias desde o caso {}'.format(maximocasos))\nplt.ylabel('Varia\u00e7\u00e3o percentual dos novos casos');","ba669714":"compara2.tail()","c9bfce1a":"compara2.tail()","fa58acc8":"mediaMovel = compara2.rolling(window=3).mean()[2:]\nmediaMovel[-21:].plot(title = 'M\u00e9dia m\u00f3vel de 3 dias da varia\u00e7\u00e3o comparada com a m\u00e9dia de {} - situa\u00e7\u00e3o em: {}'.format(selecao, ultimoDia), \\\n            figsize=(20,10), kind='bar');\nplt.xlabel('Dias desde o caso {}'.format(maximocasos))\nplt.ylabel('Varia\u00e7\u00e3o percentual dos novos casos')","d77f454d":"# Constr\u00f3i o gr\u00e1fico comparativo da evolu\u00e7\u00e3o os \u00f3bitos\n\ntabela2 = pd.pivot_table(novo, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\ntabela2.reset_index(inplace = True)\ntabela2['\u00d3bitos'] = tabela2.CumDeaths.astype('int32')\ntabela2['Data'] = pd.to_datetime(tabela2['date'])\ndel tabela2['date']\ndel tabela2['CumDeaths']\ntabela2 = tabela2[tabela2['\u00d3bitos'] > 10]\ntabela2.rename(columns = {'Country\/Region' : 'Pa\u00eds'}, inplace = True)\npaises2 = tabela2['Pa\u00eds'].unique()\ntudo2 = pd.DataFrame()\nfor pais2 in paises2:\n    pais2 = tabela2[tabela2['Pa\u00eds'] == pais2]\n    pais2.reset_index(inplace = True, drop = True)\n    pais2.reset_index(inplace = True)\n    tudo2 = pd.concat([tudo2, pais2], axis = 0)\ntudo2.rename(columns = {'index' : 'Dias'}, inplace = True)\ntudo2 = tudo2[tudo2['Pa\u00eds'] != 'Others']\ntudo2 = tudo2[tudo2['Pa\u00eds'] != 'China']\ntudo2 = tudo2[tudo2['Pa\u00eds'].isin(selecao)]\ntabela2 = pd.pivot_table(tudo2, values='\u00d3bitos', index=['Dias'],\n                    columns=['Pa\u00eds'], aggfunc=np.sum)\ntabela2 = tabela2[tabela2.index <= 90]\nresumo = tabela2 \n%matplotlib inline\nplt.figure()\nax = resumo.plot(style = {'Portugal' : 'k-o'}, \\\n            title = '\u00d3bitos nos 30 dias a seguir ao d\u00e9cimo \u00f3bito - situa\u00e7\u00e3o em: {}'.format(ultimoDia), \\\n            figsize=(20,10), linewidth = 5)\nax.locator_params(integer=True)\nplt.xlabel('Dias desde o d\u00e9cimo \u00f3bito')\nplt.ylabel('N\u00famero de \u00d3bitos')\nplt.show();","9b2f41f2":"#allData.to_excel('bdHopkins.xlsx', index = False) # Reset da BD","9dcb3858":"hopkins = novo.copy()\ntabela = pd.pivot_table(hopkins, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\ntabela.reset_index(inplace = True)\nmm = 1000 # m\u00ednimo de mortos a considerar, para exclu\u00edr os microestados\naux = tabela[tabela['CumDeaths'] > mm]\nlista = list(aux['Country\/Region'].unique())\nmaiores = tabela[tabela['Country\/Region'].isin(lista)]\npopulacao = pd.read_excel(\"\/kaggle\/input\/bd-hopkins-corrected-and-updated\/populao.xlsx\")[['Country\/Region','Popula\u00e7\u00e3o']]\nmaiores = maiores.merge(populacao, on = 'Country\/Region',how= 'inner')\nmaiores['por Milh\u00e3o'] = 1000000*maiores['CumDeaths'] \/ maiores['Popula\u00e7\u00e3o']\npaises = list(maiores['Country\/Region'].unique())\ndiarios = pd.DataFrame()\nmmpm = 100 # mortos por milh\u00e3o no dia 0\nfor pais in paises:\n    df = maiores[maiores['Country\/Region'] == pais].copy()\n    df = df[df['por Milh\u00e3o'] > mmpm]\n    df.reset_index(drop = True, inplace = True)\n    df.reset_index(inplace = True)\n    diarios = pd.concat([diarios, df])\n    del df\ndiarios = diarios[diarios['index'] < 90]\ndiarios.tail()","944ad68f":"tabela2 = pd.pivot_table(diarios, values='por Milh\u00e3o', \n                         index=['index'], columns=['Country\/Region'], aggfunc=np.mean)\n#tabela2['M\u00e9dia'] = tabela2.mean(axis = 1)\n%matplotlib inline\n#del tabela2['Diamond Princess']\ntabela2 = tabela2.sort_values(by = tabela2.index[-1], ascending = False, axis = 1,  kind='quicksort', na_position='last')\nax = tabela2.plot(style = {'Portugal' : 'k-o', 'M\u00e9dia': 'r-o'}, figsize=(24,10), linewidth = 5)\nax.set_xlabel('Dias decorridos'.format(mmpm), fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por milh\u00e3o\", fontsize=20, labelpad = 20)\nax.locator_params(integer=True)\nax.set_title('\u00d3bitos por milh\u00e3o desde o dia em que houve {} \u00f3bitos por milh\u00e3o'.format(mmpm), pad = 30)\nax.title.set_size(40);","ecbe9028":"tabela2.tail()","7202ff81":"selecao = [ 'Italy', 'Portugal', 'Spain','France', 'Germany']\ntabela3 = tabela2[selecao]\nax = tabela3.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5);\nax.set_xlabel('\u00d3bitos por milh\u00e3o desde o dia em que houve {} mortos por milh\u00e3o'.format(mmpm), fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por milh\u00e3o\", fontsize=20, labelpad = 20);\nax.set_title(\"Evolu\u00e7\u00e3o dos \u00d3bitos por Milh\u00e3o\", pad = 30)\nax.locator_params(integer=True)\nax.title.set_size(40)","9104bb9b":"#selecao = ['Belgium', 'China', 'France', 'Germany', 'Iran', 'Italy', 'Korea, South', 'Netherlands', 'Portugal', 'Spain', 'Sweden','Switzerland', 'US', 'United Kingdom']\nselecao = ['Belgium', 'Netherlands', 'Portugal', 'Sweden','Switzerland']\ntabela3 = tabela2[selecao]\nax = tabela3.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5);\nax.set_xlabel('\u00d3bitos por milh\u00e3o desde o dia em que houve {} \u00f3bitos por milh\u00e3o'.format(mmpm), fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por milh\u00e3o\", fontsize=20, labelpad = 20);\nax.set_title(\"Evolu\u00e7\u00e3o dos \u00d3bitos por Milh\u00e3o\", pad = 30)\nax.locator_params(integer=True)\nax.title.set_size(40)","1d619f15":"tabela3.tail()","c7db079f":"selecao = ['Portugal','US', 'United Kingdom']\ntabela3 = tabela2[selecao]\nax = tabela3.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5);\nax.set_xlabel('\u00d3bitos por milh\u00e3o desde o dia em que houve {} mortos por milh\u00e3o'.format(mmpm), fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por milh\u00e3o\", fontsize=20, labelpad = 20);\nax.set_title(\"Evolu\u00e7\u00e3o dos \u00d3bitos por Milh\u00e3o\", pad = 30)\nax.locator_params(integer=True)\nax.title.set_size(40)","9f037795":"tabela3.tail(10)","b3e9f13a":"selecao = ['Sweden', 'Portugal', 'Germany', 'Netherlands']\ntabela3 = tabela2[selecao]\ntabela3 = tabela3.sort_values(by=tabela3.index[-1], ascending = False, axis = 1)\nax = tabela3.plot(style = {'Sweden' : 'k-o', 'Netherlands' : 'r-o', 'Portugal' : 'b-o'}, figsize=(20,11), linewidth = 5);\nax.set_xlabel('Dias desde que houve {} \u00f3bitos por milh\u00e3o'.format(mmpm), fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por milh\u00e3o\", fontsize=20, labelpad = 20);\nax.set_title(\"Evolu\u00e7\u00e3o dos \u00d3bitos por Milh\u00e3o\", pad = 30)\nax.locator_params(integer=True)\nax.title.set_size(40)","ce9593b8":"confirm = pd.pivot_table(novo, values='CumConfirmed', index=['date'], columns=['Country\/Region'], aggfunc=np.sum).diff()[1:]\nmm3 = confirm.rolling(window=3).mean()[5:]\nmm6 = confirm.rolling(window=6).mean()[5:]","14e025f0":"tuplas = []\nfor pais in mm3.columns:\n    m3 = mm3.loc[mm3[~ mm3[pais].isnull()].index[-1]][pais]\n    m6 = mm6.loc[mm6[~ mm6[pais].isnull()].index[-1]][pais]\n    tuplas.append((pais,m3,m6))\nmedias = pd.DataFrame(tuplas, columns = ['Pa\u00eds', 'M\u00e9dia de 3 dias', 'M\u00e9dia de 6 dias'])\n\nmedias['A descer'] = medias['M\u00e9dia de 3 dias'] < medias['M\u00e9dia de 6 dias']\naDescer = medias[medias['A descer']]\nprint(\"Pa\u00edses a descer\")\nlimite = 100\naDescer[aDescer['M\u00e9dia de 6 dias'] > limite]","f6628cfe":"confirmd = pd.pivot_table(novo, values='CumDeaths', index=['date'], columns=['Country\/Region'], aggfunc=np.sum).diff()[1:]\nmmd3 = confirmd.rolling(window=3).mean()[5:]\nmmd6 = confirmd.rolling(window=6).mean()[5:]\ntuplasd = []\nfor pais in mm3.columns:\n    md3 = mmd3.loc[mmd3[~ mmd3[pais].isnull()].index[-1]][pais]\n    md6 = mmd6.loc[mmd6[~ mmd6[pais].isnull()].index[-1]][pais]\n    tuplasd.append((pais,md3,md6))\nmediasd = pd.DataFrame(tuplasd, columns = ['Pa\u00eds', 'M\u00e9dia de 3 dias', 'M\u00e9dia de 6 dias'])\n\nmediasd['A descer'] = mediasd['M\u00e9dia de 3 dias'] < mediasd['M\u00e9dia de 6 dias']\naDescerd = mediasd[mediasd['A descer']]\nprint(\"Pa\u00edses a descer\")\nlimite = 5\naDescerd[aDescerd['M\u00e9dia de 6 dias'] > limite]","d2e9643e":"obitos = pd.pivot_table(novo, values='CumDeaths', index=['date'], columns = ['Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace=True)\nobitos['date'] = obitos['date'].dt.date\nobitos.set_index('date', inplace = True)\nselecao = ['Portugal', 'Switzerland', 'Italy', 'Spain', 'France', 'Germany', 'Belgium', 'US']\nobitos = obitos[selecao]\nobpct = obitos[-5:-1].pct_change()[1:]*100\nax = obpct.plot( figsize=(20,10), kind = 'bar');\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Percentagem\", fontsize=20, labelpad = 20);\nax.set_title(\"Aumento percentual do n\u00fameros de \u00d3bitos\", pad = 30)\nax.title.set_size(40)","c925c5bc":"porpais = pd.pivot_table(novo, values='CumConfirmed', index=['date', 'Country\/Region'], aggfunc=np.sum)\nporpais.reset_index(inplace = True)\nporpais['Casos'] = porpais.CumConfirmed.astype('int32')\nporpais['Data'] = pd.to_datetime(porpais['date'])\ndel porpais['date']\ndel porpais['CumConfirmed']\nporpais.rename(columns = {'Country\/Region' : 'Pa\u00eds'}, inplace = True)\ntabela = pd.pivot_table(porpais, values='Casos', index=['Data'], columns = ['Pa\u00eds'], aggfunc=np.sum)\ntabela2 = tabela[tabela.columns[tabela.max() > 10000]]\ntabela2 = tabela2[-30:]\nax = tabela2.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10))\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=20, labelpad = 20);\nax.set_title(\"Evolu\u00e7\u00e3o do N\u00famero de Casos nos pa\u00edses com mais de 10.000\", pad = 30)\nax.title.set_size(40)","18803e58":"novoscasos = tabela.diff()[-20:]\nnovoscasos.drop(columns = ['US'], inplace = True)\nnovoscasos = novoscasos[novoscasos.columns[novoscasos.max() > 1000]]\nax = novoscasos.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10))\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=20, labelpad = 20);\nax.set_title(\"Evolu\u00e7\u00e3o do Novos Casos\", pad = 30)\nax.title.set_size(40)","e68e7c64":"novoscasos.tail()","437f0933":"casos = novo.copy()\ncasos = pd.pivot_table(casos, values='CumConfirmed', index=['date', 'Country\/Region'], aggfunc=np.sum)\ncasos.reset_index(inplace = True)\ncasos = casos.merge(populacao, on = 'Country\/Region',how= 'inner')\ncasos['Casos por Milh\u00e3o'] = 1000000*casos['CumConfirmed'] \/ casos['Popula\u00e7\u00e3o']\ncasos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\ninteressa = casos[casos['Pa\u00eds'].isin(['Austria', 'Czechia', 'Norway', 'Germany', 'Portugal', 'Denmark'])]\ninteressa = pd.pivot_table(interessa, values='Casos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\ninteressa = interessa.diff().rolling(window=7).mean()[-35:]\nax = interessa.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5)\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Novos Casos por Milh\u00e3o\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos di\u00e1rios por Milh\u00e3o nos pa\u00edses em Abertura (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","3db29ff1":"\ninteressa = casos[casos['Pa\u00eds'].isin(['Sweden', 'Finland', 'Norway', 'Germany', 'Denmark'])]\ninteressa = pd.pivot_table(interessa, values='Casos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\ninteressa = interessa.diff().rolling(window=7).mean()[-35:]\nax = interessa.plot( figsize=(20,10), linewidth = 5)\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Novos Casos por Milh\u00e3o\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos di\u00e1rios por Milh\u00e3o nos pa\u00edses n\u00f3rdicos\", pad = 30)\nax.title.set_size(30);","d2227e3d":"singapura = casos[casos['Pa\u00eds'].isin(['Portugal', 'Singapore'])]\nsingapura = pd.pivot_table(singapura, values='Casos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nsingapura = singapura.diff()[-31:]\nax = singapura.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5)\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos por Dia\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos di\u00e1rios por Milh\u00e3o -  Singapura\", pad = 30)\nax.title.set_size(30);","e957742f":"obitos = novo.copy()\nobitos = pd.pivot_table(obitos, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace = True)\nobitos = obitos.merge(populacao, on = 'Country\/Region',how= 'inner')\nobitos['\u00d3bitos por Milh\u00e3o'] = 1000000*obitos['CumDeaths'] \/ obitos['Popula\u00e7\u00e3o']\nobitos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\nointeressa = obitos[obitos['Pa\u00eds'].isin(['Austria', 'Czechia', 'Norway', 'Germany', 'Portugal', 'Denmark'])]\nointeressa = pd.pivot_table(ointeressa, values='\u00d3bitos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nointeressa = ointeressa.diff().rolling(window=7).mean()[-35:]\nax = ointeressa.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por Milh\u00e3o\", fontsize=15, labelpad = 20)\nax.set_title(\"Evolu\u00e7\u00e3o do N\u00famero de \u00d3bitos di\u00e1rios por Milh\u00e3o nos pa\u00edses em Abertura (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(20);","20cb8444":"obitos = novo.copy()\nobitos = pd.pivot_table(obitos, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace = True)\nobitos = obitos.merge(populacao, on = 'Country\/Region',how= 'inner')\nobitos['\u00d3bitos por Milh\u00e3o'] = 1000000*obitos['CumDeaths'] \/ obitos['Popula\u00e7\u00e3o']\nobitos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\nointeressa = obitos[obitos['Pa\u00eds'].isin(['Sweden', 'Finland', 'Norway', 'Germany', 'Denmark'])]\nointeressa = pd.pivot_table(ointeressa, values='\u00d3bitos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nointeressa = ointeressa.diff().rolling(window=7).mean()[-35:]\nax = ointeressa.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por Milh\u00e3o\", fontsize=15, labelpad = 20)\nax.set_title(\"Evolu\u00e7\u00e3o do N\u00famero de \u00d3bitos di\u00e1rios por Milh\u00e3o nos pa\u00edses n\u00f3rdicos (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(20);","64bc8265":"obitos = novo.copy()\nobitos = pd.pivot_table(obitos, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace = True)\nobitos = obitos.merge(populacao, on = 'Country\/Region',how= 'inner')\nobitos['\u00d3bitos por Milh\u00e3o'] = 1000000*obitos['CumDeaths'] \/ obitos['Popula\u00e7\u00e3o']\nobitos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\nointeressa = obitos[obitos['Pa\u00eds'].isin(['Sweden', 'Finland', 'Norway', 'Germany', 'Denmark'])]\nointeressa = pd.pivot_table(ointeressa, values='\u00d3bitos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nointeressa.sort_values(by = ointeressa.index[-1], axis = 1, inplace= True, ascending = False)\nax = ointeressa[-147:].plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por Milh\u00e3o\", fontsize=15, labelpad = 20)\nax.set_title(\"\u00d3bitos por Milh\u00e3o na Su\u00e9cia e pa\u00edses vizinhos\", pad = 30)\nax.title.set_size(20);","5453e669":"obitos = novo.copy()\nobitos = pd.pivot_table(obitos, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace = True)\nobitos = obitos.merge(populacao, on = 'Country\/Region',how= 'inner')\nobitos['\u00d3bitos por Milh\u00e3o'] = 1000000*obitos['CumDeaths'] \/ obitos['Popula\u00e7\u00e3o']\nobitos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\nselect = list(obitos[(obitos['\u00d3bitos por Milh\u00e3o'] > 1) & (obitos['CumDeaths'] > 500)]['Pa\u00eds'].unique())\nointeressa = obitos[obitos['Pa\u00eds'].isin(select)]\nointeressa = pd.pivot_table(ointeressa, values='\u00d3bitos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nointeressa = ointeressa.diff().rolling(window=7).mean()[-7:]\nointeressa.sort_values(by = ointeressa.index[-2], axis = 1, inplace= True, ascending = False)\nointeressa = ointeressa[ointeressa.columns[0:25]]\nax = ointeressa.plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por Dia por milh\u00e3o\", fontsize=15, labelpad = 20)\nax.set_title(\"Os piores em \u00f3bitos di\u00e1rios por milh\u00e3o (m\u00e9dia dos \u00faltimos 7 dias)\", pad = 30)\nax.legend(loc = 'upper left')\nax.title.set_size(20);","0a6548c7":"casos = novo.copy()\ncasos = pd.pivot_table(casos, values='CumConfirmed', index=['date', 'Country\/Region'], aggfunc=np.sum)\ncasos.reset_index(inplace = True)\ncasos = casos.merge(populacao, on = 'Country\/Region',how= 'inner')\ncasos['Casos por Milh\u00e3o'] = 1000000*casos['CumConfirmed'] \/ casos['Popula\u00e7\u00e3o']\ncasos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\ninteressa = casos[casos['Pa\u00eds'].isin(['Spain', 'Italy', 'France', 'United Kingdom', 'Germany', 'Portugal', 'Belgium', 'Netherlands','Ireland','Luxembourg','Denmark', 'Switzerland', 'Sweden', 'Norway', 'Finland', 'Austria'])]\ninteressa = pd.pivot_table(interessa, values='Casos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\ninteressa = interessa.diff().rolling(window=7).mean()[-35:]\nif ~(interessa.at[interessa.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\ninteressa.sort_values(by = interessa.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = interessa[-21:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Novos Casos por Dia\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos di\u00e1rios por Milh\u00e3o na Europa Ocidental (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","b88050a6":"souk = interessa[['Portugal','United Kingdom']]\nax = souk.plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Novos Casos por Dia\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos di\u00e1rios por Milh\u00e3o em Portugal e UK (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","19a1a415":"obitos = novo.copy()\nobitos = pd.pivot_table(obitos, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace = True)\nobitos = obitos.merge(populacao, on = 'Country\/Region',how= 'inner')\nobitos['\u00d3bitos por Milh\u00e3o'] = 1000000*obitos['CumDeaths'] \/ obitos['Popula\u00e7\u00e3o']\nobitos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\nselect = ['Spain', 'Italy', 'France', 'United Kingdom', 'Germany', 'Portugal', 'Belgium', 'Netherlands','Ireland','Luxembourg','Denmark', 'Switzerland', 'Sweden', 'Norway', 'Finland', 'Austria']\nointeressa = obitos[obitos['Pa\u00eds'].isin(select)]\nointeressa = pd.pivot_table(ointeressa, values='\u00d3bitos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nointeressa = ointeressa.diff().rolling(window=7).mean()[-35:]\nif ~(ointeressa.at[ointeressa.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\nointeressa.sort_values(by = ointeressa.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = ointeressa[-14:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por Dia\", fontsize=15, labelpad = 20)\nax.legend(loc='upper left')\nax.set_title(\"Evolu\u00e7\u00e3o do N\u00famero de \u00d3bitos di\u00e1rios por Milh\u00e3o na Europa Ocidental (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(20);","30464362":"ointeressa.tail()","68065220":"souk = ointeressa[['Portugal','United Kingdom']]\nax = souk.plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por Dia\", fontsize=20, labelpad = 20)\nax.set_title(\"\u00d3bitos di\u00e1rios por Milh\u00e3o em Portugal e UK (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","116d4452":"ue = ['Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czechia', 'Denmark', 'Estonia', 'Finland', 'France', \n      'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Luxembourg', 'Malta', 'Netherlands', 'Poland',\n      'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden']\ncasos = novo.copy()\ncasos = pd.pivot_table(casos, values='CumConfirmed', index=['date', 'Country\/Region'], aggfunc=np.sum)\ncasos.reset_index(inplace = True)\ncasos = casos.merge(populacao, on = 'Country\/Region',how= 'inner')\ncasos['Casos por Milh\u00e3o'] = 1000000*casos['CumConfirmed'] \/ casos['Popula\u00e7\u00e3o']\ncasos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\ninteressa = casos[casos['Pa\u00eds'].isin(ue)]\ninteressa = pd.pivot_table(interessa, values='Casos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nif ~(interessa.at[interessa.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\n#interessa.sort_values(by = interessa.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\ninteressa = interessa.diff().rolling(window=7).mean()[-35:]\ninteressa.sort_values(by = interessa.index[maxind], axis=1, ascending=False, inplace=True)\nax = interessa[-14:].plot(style = {'Portugal' : 'k-o'}, figsize=(20,12), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Novos Casos por Dia\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos di\u00e1rios por Milh\u00e3o na Uni\u00e3o Europeia (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","f8d800ca":"obitos = novo.copy()\nobitos = pd.pivot_table(obitos, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace = True)\nobitos = obitos.merge(populacao, on = 'Country\/Region',how= 'inner')\nobitos['\u00d3bitos por Milh\u00e3o'] = 1000000*obitos['CumDeaths'] \/ obitos['Popula\u00e7\u00e3o']\nobitos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\nointeressa = obitos[obitos['Pa\u00eds'].isin(ue)]\nointeressa = pd.pivot_table(ointeressa, values='\u00d3bitos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nointeressa = ointeressa.diff().rolling(window=7).mean()[-35:]\nif ~(ointeressa.at[ointeressa.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\nointeressa.sort_values(by = ointeressa.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = ointeressa[-14:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos por Dia\", fontsize=15, labelpad = 20)\nax.set_title(\"Evolu\u00e7\u00e3o do N\u00famero de \u00d3bitos di\u00e1rios por Milh\u00e3o na Uni\u00e3o Europeia (m\u00e9dia de 7 dias)\", pad = 30)\nax.legend(loc=\"upper left\")\nax.title.set_size(20);","ad6d8b9d":"popue = populacao[populacao['Country\/Region'].isin(ue)]['Popula\u00e7\u00e3o'].sum()\npopport = populacao[populacao['Country\/Region'] == 'Portugal']['Popula\u00e7\u00e3o'].sum()\ninteressa = casos[casos['Pa\u00eds'].isin(ue)]\ninteressa = pd.pivot_table(interessa, values='CumConfirmed', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nif ~(interessa.at[interessa.index[-1],'Austria'] > 0):\n    interessa = interessa[:-1]\ninteressa['Uni\u00e3o Europeia'] = interessa.sum(axis = 1)\ninteressa = interessa[['Portugal', 'Uni\u00e3o Europeia']]\ninteressa['Portugal'] = 1000000*interessa['Portugal'] \/ popport\ninteressa['Uni\u00e3o Europeia'] = 1000000*interessa['Uni\u00e3o Europeia'] \/popue\nus = casos[casos['Pa\u00eds'].isin(['US'])][['date','Casos por Milh\u00e3o']].set_index('date')\nus = us.rename(columns={'Casos por Milh\u00e3o':'US'})\nbr = casos[casos['Pa\u00eds'].isin(['Brazil'])][['date','Casos por Milh\u00e3o']].set_index('date')\nbr = br.rename(columns={'Casos por Milh\u00e3o':'Brasil'})\ninteressa = pd.concat([interessa, us, br], axis = 1)\ninteressa = interessa.diff().rolling(window=7).mean()\ninteressa = interessa.sort_values(by=interessa.index[-1], axis = 1, ascending = False)\nax = interessa[-56:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos di\u00e1rios por Milh\u00e3o - Portugal versus Uni\u00e3o Europeia, Brasil e EUA (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","5b02c466":"interessa.tail()","fee972fe":"interessa = obitos[obitos['Pa\u00eds'].isin(ue)]\ninteressa = pd.pivot_table(interessa, values='CumDeaths', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nif ~(interessa.at[interessa.index[-1],'Austria'] > 0):\n    interessa = interessa[:-1]\ninteressa['Uni\u00e3o Europeia'] = interessa.sum(axis = 1)\ninteressa = interessa[['Portugal', 'Uni\u00e3o Europeia']]\ninteressa['Portugal'] = 1000000*interessa['Portugal'] \/ popport\ninteressa['Uni\u00e3o Europeia'] = 1000000*interessa['Uni\u00e3o Europeia'] \/popue\nus = obitos[obitos['Pa\u00eds'].isin(['US'])][['date','\u00d3bitos por Milh\u00e3o']].set_index('date')\nus = us.rename(columns={'\u00d3bitos por Milh\u00e3o':'US'})\nbr = obitos[obitos['Pa\u00eds'].isin(['Brazil'])][['date','\u00d3bitos por Milh\u00e3o']].set_index('date')\nbr = br.rename(columns={'\u00d3bitos por Milh\u00e3o':'Brasil'})\ninteressa = pd.concat([interessa, us, br], axis = 1)\ninteressa = interessa.diff().rolling(window=7).mean()\ninteressa = interessa.sort_values(by=interessa.index[-1], axis = 1, ascending = False)\nax = interessa[-28:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos\", fontsize=20, labelpad = 20)\nax.set_title(\"\u00d3bitos di\u00e1rios por Milh\u00e3o Portugal versus Uni\u00e3o Europeia, Brasil e EUA (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","e3760f46":"interessa.tail()","bf34f6bb":"porpais = novo.pivot_table(index=['date','Country\/Region'], aggfunc = np.sum).reset_index()\nporpais = porpais.merge(populacao[populacao['Popula\u00e7\u00e3o'] > 1000000], on = 'Country\/Region',how= 'inner')\nporpais['Casos por Milh\u00e3o'] = (porpais['CumConfirmed'] \/ porpais['Popula\u00e7\u00e3o'])*1000000\nporpais['\u00d3bitos por Milh\u00e3o'] = (porpais['CumDeaths'] \/ porpais['Popula\u00e7\u00e3o'])*1000000\nporpais['Recuperados por Milh\u00e3o'] = (porpais['CumRecovered'] \/ porpais['Popula\u00e7\u00e3o'])*1000000\nporpais = porpais[['date','Country\/Region','Casos por Milh\u00e3o', '\u00d3bitos por Milh\u00e3o',  'Recuperados por Milh\u00e3o']]\nporpais = porpais.rename(columns={'Country\/Region': 'Pa\u00eds'})\n# Obter os que tem \u00f3bitos por milh\u00e3po > 100\npaises = porpais['Pa\u00eds'].unique()\ntudo = pd.DataFrame()\nlimite = 100\nfor pais in paises:\n    df = porpais[porpais['Pa\u00eds'] == pais]\n    df = df[df['\u00d3bitos por Milh\u00e3o'] > limite]\n    if len(df.index) > 0:\n        df.reset_index(drop=True, inplace = True)\n        df.reset_index(inplace = True)\n        tudo = pd.concat([tudo, df], axis = 0)\ntudo = tudo[['index', 'Pa\u00eds','Recuperados por Milh\u00e3o']]\ntudo = tudo.pivot_table(index = 'index', columns = 'Pa\u00eds', values = 'Recuperados por Milh\u00e3o')\nax = tudo[:tudo['Portugal'].last_valid_index()].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Recuperados\", fontsize=20, labelpad = 20)\nax.set_title(\"Recuperados por Milh\u00e3o desde o dia de {} \u00f3bitos por milh\u00e3o\".format(limite), pad = 30)\nax.title.set_size(30);","f8b50fa8":"semanal = novo.copy()\nsemanal['week'] = semanal['date'].apply(lambda  x : x.week)\nsemanal = semanal.sort_values(by='date')\nsemanal = semanal.groupby(by=['week', 'Country\/Region']).last()\nsemanal.reset_index(inplace=True)\nsemanal = semanal.pivot_table(index='week', columns='Country\/Region', values='CumConfirmed')\nmaiores = semanal.copy().diff()[1:-1] # Corta primeira e ultima linha\nmaiores.reset_index(inplace= True)\nmaiores = maiores.melt(id_vars='week', var_name='Country\/Region', value_name='Novos Casos Semanais')\nminpop = 100000\nmaiores = maiores.merge(populacao[populacao['Popula\u00e7\u00e3o'] > minpop], on = 'Country\/Region',how= 'inner')\nmaiores['Casos Semanais por Milh\u00e3o'] = 1000000*(maiores['Novos Casos Semanais'] \/ maiores['Popula\u00e7\u00e3o'])\nmaiores = maiores.pivot_table(index='week', columns='Country\/Region', values='Casos Semanais por Milh\u00e3o')\nmaiores.to_excel('semanais.xlsx')\nminimodecasos = 521.35\nlistamaiores = [maiores.columns[i] for i in range(0, len(maiores.columns)) if maiores.at[maiores.index[-1],maiores.columns[i]] > minimodecasos]\nmaiores = maiores[listamaiores]\nmaiores.sort_values(by = maiores.index[-1], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = maiores[-10:].plot(figsize=(25,10), linewidth = 5, colormap='Paired');\nax.set_xlabel('Semana', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos semanais por Milh\u00e3o - \u00faltima semana pior que a pior de Portugal\", pad = 30)\nax.title.set_size(30);","185b55d7":"matriz = casos.pivot_table(index = 'date', columns='Pa\u00eds', values = 'Casos por Milh\u00e3o').diff().rolling(window=7).mean()\nif ~(matriz.at[matriz.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\nmatriz.sort_values(by = matriz.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\npiores= matriz[matriz.columns[0:10]]\nax = piores[-14:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=20, labelpad = 20)\nax.set_title(\"Piores em Novos Casos por Milh\u00e3o (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","86974b65":"omatriz = obitos.pivot_table(index = 'date', columns='Pa\u00eds', values = '\u00d3bitos por Milh\u00e3o').diff().rolling(window=7).mean()\nif ~(omatriz.at[omatriz.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\nomatriz.sort_values(by = omatriz.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\npiores= omatriz[omatriz.columns[0:10]]\nax = piores[-14:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos\", fontsize=20, labelpad = 20)\nax.set_title(\"Piores em \u00d3bitos di\u00e1rios por Milh\u00e3o (m\u00e9dia de 7 dias)\", pad = 30)\nax.title.set_size(30);","e0204606":"comportugal = piores.copy()\ncomportugal['Portugal'] = omatriz['Portugal']\nax = comportugal[-7:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos\", fontsize=20, labelpad = 20)\nax.set_title(\"Piores em \u00d3bitos di\u00e1rios por Milh\u00e3o (m\u00e9dia de 7 dias), comparados com Portugal\", pad = 30)\nax.title.set_size(30);","aecd6f61":"asseguir = omatriz[omatriz.columns[0:10]]\nax = asseguir[-14:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Date', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Daily Deaths\", fontsize=20, labelpad = 20)\nax.set_title(\"Daily deaths per milion - worst worldwide cases (7 days average)\", pad = 30)\nax.title.set_size(30);","db4feb12":"semanais = semanal.diff()[1:-1]\nsemanais = semanais[[col for col in semanais.columns if semanais.at[semanais.index[-1], col] == semanais[col].max()]]\nsemanais.sort_values(by = semanais.index[-1], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = semanais[-10:].plot(figsize=(25,16), linewidth = 5, colormap='Paired');\nax.set_xlabel('Semana', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos semanais\", fontsize=20, labelpad = 20)\nax.set_title(\"Pa\u00edses em que a semana passada foi a pior de sempre\", pad = 30)\nax.legend(loc='upper left')\nax.title.set_size(30);","0cd93072":"\"H\u00e1 {} pa\u00edses em que a semana passada foi a pior de sempre\".format(len([col for col in semanais.columns if semanais.at[semanais.index[-1], col] == semanais[col].max()]))","30d9fe83":"taxa = 3\ncresce = 100*tabela.pct_change()\ncresce = cresce.sort_values(cresce.index[-1], axis = 1, ascending = False)\ncrescemed = cresce.rolling(window=7).mean()\ncrescemed = crescemed.sort_values(crescemed.index[-1], axis = 1, ascending = False)\nmaiores = crescemed[[ crescemed.columns[i] for i in range(len(crescemed.columns)) if crescemed.at[crescemed.index[-1], crescemed.columns[i]] > taxa]]\nmaiores = maiores.reset_index()\nmaiores['Data'] = maiores['Data'].dt.date\nmaiores = maiores.set_index('Data')\nmaiores[-7:].plot(title = 'Pa\u00edses com crescimento di\u00e1rio maior do que {}%'.format(taxa), \\\n            figsize=(25,12), kind='bar', colormap='Paired');\nplt.xlabel('Data', labelpad = 20)\nplt.ylabel('Percentagem de crescimento', labelpad = 20);","ca1d35db":"casos = novo.copy()\ncasos = pd.pivot_table(casos, values='CumConfirmed', index=['date', 'Country\/Region'], aggfunc=np.sum)\ncasos.reset_index(inplace = True)\ncasos = casos.merge(populacao, on = 'Country\/Region',how= 'inner')\ncasos['Casos por Milh\u00e3o'] = 1000000*casos['CumConfirmed'] \/ casos['Popula\u00e7\u00e3o']\ncasos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\ncinteressa = casos[casos['Pa\u00eds'].isin(ue)]\ncinteressa = pd.pivot_table(cinteressa, values='Casos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nif ~(cinteressa.at[cinteressa.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\ncinteressa.sort_values(by = cinteressa.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = cinteressa[-96:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=15, labelpad = 20)\nax.set_title(\"Total de Casos por Milh\u00e3o na Uni\u00e3o Europeia \", pad = 30)\nax.title.set_size(20);","dee76c7d":"obitos = novo.copy()\nobitos = pd.pivot_table(obitos, values='CumDeaths', index=['date', 'Country\/Region'], aggfunc=np.sum)\nobitos.reset_index(inplace = True)\nobitos = obitos.merge(populacao, on = 'Country\/Region',how= 'inner')\nobitos['\u00d3bitos por Milh\u00e3o'] = 1000000*obitos['CumDeaths'] \/ obitos['Popula\u00e7\u00e3o']\nobitos.rename(columns={'Country\/Region': 'Pa\u00eds'}, inplace = True)\nointeressa = obitos[obitos['Pa\u00eds'].isin(ue)]\nointeressa = pd.pivot_table(ointeressa, values='\u00d3bitos por Milh\u00e3o', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\n#ointeressa = ointeressa.diff().rolling(window=7).mean()[-35:]\nif ~(ointeressa.at[ointeressa.index[-1],'Austria'] > 0):\n    maxind = -2\nelse:\n    maxind = -1\nointeressa.sort_values(by = ointeressa.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = ointeressa[-96:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos\", fontsize=15, labelpad = 20)\nax.set_title(\"Total de \u00d3bitos por Milh\u00e3o na Uni\u00e3o Europeia \", pad = 30)\nax.title.set_size(20);","52228805":"novos14 = cinteressa.diff(14)\nnovos14.sort_values(by = novos14.index[maxind], axis=1, ascending=False, inplace=True, kind='quicksort', na_position='last')\nax = novos14[-96:].plot(style = {'Portugal' : 'k-o'}, figsize=(20,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=15, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=15, labelpad = 20)\nax.legend(loc='upper left')\nax.set_title(\"Casos por Milh\u00e3o, nos \u00faltimos 14 dias, na Uni\u00e3o Europeia \", pad = 30)\nax.title.set_size(20);","26746552":"popue = populacao[populacao['Country\/Region'].isin(ue)]['Popula\u00e7\u00e3o'].sum()\npopport = populacao[populacao['Country\/Region'] == 'Portugal']['Popula\u00e7\u00e3o'].sum()\ninteressa = casos[casos['Pa\u00eds'].isin(ue)]\ninteressa = pd.pivot_table(interessa, values='CumConfirmed', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nif ~(interessa.at[interessa.index[-1],'Austria'] > 0):\n    interessa = interessa[:-1]\ninteressa['Uni\u00e3o Europeia'] = interessa.sum(axis = 1)\ninteressa = interessa[['Portugal', 'Uni\u00e3o Europeia']]\ninteressa['Portugal'] = 100000*interessa['Portugal'] \/ popport\ninteressa['Uni\u00e3o Europeia'] = 100000*interessa['Uni\u00e3o Europeia'] \/popue\ninteressa = interessa.diff(14)\ninteressa = interessa.sort_values(by=interessa.index[-1], axis = 1, ascending = False)\nax = interessa[-56:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nplt.ylim(0,50)\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"Casos\", fontsize=20, labelpad = 20)\nax.set_title(\"Casos por 100 mil nos \u00faltimos 14 dias - Portugal versus m\u00e9dia UE\", pad = 30)\nax.title.set_size(30);","5b491ceb":"interessa = obitos[obitos['Pa\u00eds'].isin(ue)]\ninteressa = pd.pivot_table(interessa, values='CumDeaths', index=['date'], columns =['Pa\u00eds'], aggfunc=np.sum)\nif ~(interessa.at[interessa.index[-1],'Austria'] > 0):\n    interessa = interessa[:-1]\ninteressa['Uni\u00e3o Europeia'] = interessa.sum(axis = 1)\ninteressa = interessa[['Portugal', 'Uni\u00e3o Europeia']]\ninteressa['Portugal'] = 100000*interessa['Portugal'] \/ popport\ninteressa['Uni\u00e3o Europeia'] = 100000*interessa['Uni\u00e3o Europeia'] \/popue\ninteressa = interessa.diff(14)\ninteressa = interessa.sort_values(by=interessa.index[-1], axis = 1, ascending = False)\nax = interessa[-56:].plot(style = {'Portugal' : 'k-o'}, figsize=(25,10), linewidth = 5, colormap='Paired')\nax.set_xlabel('Data', fontsize=20, labelpad = 20)\nax.set_ylabel(\"\u00d3bitos\", fontsize=20, labelpad = 20)\nax.set_title(\"\u00d3bitos por 100 mil nos \u00faltimos 14 dias - Portugal versus m\u00e9dia UE\", pad = 30)\nplt.ylim(0,2.5)\nax.title.set_size(30);","41b69b06":"# Compara\u00e7\u00e3o de Portugal com outros Pa\u00edses\n"}}