{"cell_type":{"08892931":"code","aab5daff":"code","07de8dcc":"code","15735961":"code","a5f93131":"code","c807ccfb":"code","29ac24ec":"code","093a0d82":"code","8058af8d":"code","bec790f9":"code","8b0507fe":"code","c6e04167":"code","2bfbce30":"code","3cd26fee":"code","4dbf65f2":"code","142a9dc7":"code","0aac1404":"code","77a9e886":"code","f4ea3eff":"code","eec63b7a":"code","3c38d82c":"code","3dc869d0":"code","03c5443d":"code","1820e818":"code","d4f42eb0":"code","61d4dc67":"code","e4b9d261":"code","d4ce2cd8":"code","56f4b468":"code","2b1d09fc":"code","5a3d840f":"code","591b294c":"code","9fe8342e":"code","82bc6a2c":"code","b7ce617b":"code","d7c75c77":"code","946554b4":"code","a9aa6765":"code","979d2fe2":"code","98c1272d":"markdown","355c2646":"markdown","9c40568a":"markdown","af4dceb4":"markdown","bee3d5d4":"markdown","97ab40dc":"markdown","94e0725a":"markdown","766671ad":"markdown","01a50597":"markdown","3923855b":"markdown","48a82dab":"markdown"},"source":{"08892931":"my_list=[1,2,3]\nmy_list \n","aab5daff":"import numpy as np\na=np.array(my_list)\n","07de8dcc":"my_mat=[[1,2,3],[4,5,6],[7,8,9],[10,11,12]]\ns=np.array(my_mat)CSE422: ","15735961":"np.arange(0,10)","a5f93131":"import numpy as np\n\na = np.zeros((2,2))   # Create an array of all zeros\nprint(a)              # Prints \"[[ 0.  0.]\n                      #          [ 0.  0.]]\"\n\nb = np.ones((4,2))    # Create an array of all ones\nprint(b)              # Prints \"[[ 1.  1.]]\"","c807ccfb":"np.linspace(0,10,10)","29ac24ec":"np.eye(5) #identitity matrix(2d square matrix)","093a0d82":"#creating arrays of random numbers\nnp.random.rand(5) #uniform distribution from 0 to 1","8058af8d":"#creating arrays of random numbers\nnp.random.rand(5,5) # 2D uniform distribute from 0 to 1","bec790f9":"#creating arrays of random numbers\nnp.random.randn(4) # standard normal distribution range from -infinty to infinity","8b0507fe":"#creating arrays of random numbers\nnp.random.randint(1,100,20)    ","c6e04167":"#gives you 6 numbers randomly from 0-(10-1)\nx1 = np.random.randint(10, size=6)\nx1","2bfbce30":"x2 = np.random.randint(10, size=(3,4,3))\nprint(x2)\nprint(x2.shape)\nprint(f\"Dimensiion = {x2.ndim}\")","3cd26fee":"#creating max and min value in array\nmy_arr=np.array([1,-3,4,5,3,4,56,7,-34])\nprint(my_arr.min())\nprint(my_arr.max())","4dbf65f2":"#returning index number max and min value in array\nprint(my_arr.argmin())\nprint(my_arr.argmax())","142a9dc7":"#how to find the shape of vector?\nmy_arr.shape","0aac1404":"#how to reshape vector?\nmy_arr.reshape(3,3)\n","77a9e886":"#how to know  what the data type value we have in array ?\nprint(type(my_arr))\nprint(my_arr.dtype)","f4ea3eff":"#append\nimport numpy as np\nnew_arr=np.arange(1,11)\nprint(new_arr)\nnew_arr= np.append(new_arr,[100,20,30])\nprint(new_arr)","eec63b7a":"import numpy as np\na = np.array([[1,2,3],[4,5,6]])\nprint(a)\nb= np.array([[400],[800]])\nprint(b)\nnewarr = np.append(a, b,axis=1 )\nprint(newarr)","3c38d82c":"import numpy as np\na = np.array([[1,2,3],[4,5,6]])\nb= np.array([[400],[800]])\nnewarr = np.append(a, b)\nprint(newarr)","3dc869d0":"#insert\na= np.array([1 , 2, 3])\nprint( a) \nnew_array= np.insert(a,1,50)\nprint(new_array)","03c5443d":"#delete\nimport numpy as np\na = np.array([[1,2,3],[4,5,6],[10,20,30]])\n\nprint(a)\nnarr = np.delete(a,1,axis=0)\nprint(narr)","1820e818":"#finding the index of a value in the array usin where() method\na = np.array([1 , 2 ,3, 5 ,4 ,5])\nprint(np.where(a==5))","d4f42eb0":"import numpy as np\na = np.array([[1,2,3],[4,5,6],[7,8,9]])\nprint(a)\n","61d4dc67":"a[1,0]","e4b9d261":"a[1:,1:]\n","d4ce2cd8":"a[:2,1:]","56f4b468":"#conditional selection\nb = a > 2  #take an array and combine with conditional operate to get a boolean values\/arrays\nprint(b)","2b1d09fc":"#return only those elements those were true using bollean array\nx=a[b] \nx.shape","5a3d840f":"#in one go!!\na[a>3]","591b294c":"a1 = np.array([[1,2,3],[4,5,6],[9,10,11]])\nprint(a1)","9fe8342e":"\na1[a1<=2]=1\na1[a1>2]=0\na1","82bc6a2c":"import numpy as np\narr=np.arange(0,11)\narr2=np.arange(0,11)\narr\n","b7ce617b":"#addition\narr+arr2","d7c75c77":"#substraction\narr-arr","946554b4":"#multiplication\narr*arr","a9aa6765":"arr\/arr","979d2fe2":"#scaling an array\narr+100\n#to the power\n#squareroot\n#sin\n#log\n#max\/min\n","98c1272d":"#What is Numpy?","355c2646":"\nNumPy is a python library that provides you with an array data structure that holds some benefits over Python lists, such as: being more compact, faster access in reading and writing items, being more convenient and more efficient.\n\nIn other words, NumPy is a very important core library for scientific computing in Python. It contains a collection of tools and techniques that can be used to solve computational mathematical problems in Science and Engineering. One of these tools is a high-performance multidimensional array object that is a powerful data structure for efficient computation of arrays and matrices.\n\nWe will see NumPy in action with different examples.\n\n\n","9c40568a":"#NumPy Indexing and Selection\n","af4dceb4":"#Creating a normal List\n\n> \n\n\n","bee3d5d4":"#NumPy also provides many functions to create arrays:","97ab40dc":"#NumPy Official Doc: https:\/\/numpy.org\/doc\/stable\/user\/index.html","94e0725a":"NumPy library follows an import convention: when you import this library, you have to make sure that you import it as **np**. By doing this, you\u2019ll make sure that other Pythonistas understand your code more easily.","766671ad":"#Casting a normal python list into a NumPy array","01a50597":"#NumPy Operations","3923855b":"For more info: https:\/\/numpy.org\/doc\/stable\/reference\/ufuncs.html#available-ufuncs","48a82dab":"#NumPy own genatation method"}}