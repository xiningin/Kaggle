{"cell_type":{"9aaf34ae":"code","a0a689a9":"code","b8fffbd5":"code","04baef4c":"code","73b8ef25":"code","75ce8014":"code","0f1d7f59":"code","a24a5013":"code","155bbe50":"code","751873c0":"code","bced3053":"code","52c43178":"code","28186e42":"code","804e85d3":"code","429289d5":"code","1513648c":"code","b5531039":"code","68eef48a":"markdown","855e1f74":"markdown","506aebf4":"markdown","e4442aa9":"markdown","be8f4ad5":"markdown","80313118":"markdown","66324db7":"markdown","a91d96a3":"markdown"},"source":{"9aaf34ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0a689a9":"!pip install jcopml","b8fffbd5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\n\nfrom jcopml.pipeline import num_pipe, cat_pipe\nfrom jcopml.utils import save_model, load_model\nfrom jcopml.plot import plot_missing_value\nfrom jcopml.feature_importance import mean_score_decrease","04baef4c":"df = pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")\ndf","73b8ef25":"df.replace(\"?\", np.nan, inplace=True)","75ce8014":"plot_missing_value(df)","0f1d7f59":"df.target = df.target.apply(lambda x: int(x>0))\ndf.head()","a24a5013":"plt.figure(figsize=(7, 6))\nsns.distplot(df.age[df.target ==0], bins=[0, 5, 12, 18, 40, 120], color=\"g\", label=\"tidak ada indikasi\")\nsns.distplot(df.age[df.target ==1], bins=[0, 5, 12, 18, 40, 120], color=\"r\", label=\"ada indikasi\")\nplt.legend();","155bbe50":"cat_var = [\"sex\", \"cp\", \"fbs\", \"restecg\", \"exang\", \"slope\", \"ca\", \"thal\"]\n\nfig, axes = plt.subplots(2, 4, figsize=(15,10))\nfor cat, ax in zip(cat_var, axes.flatten()):\n    sns.countplot(cat, data=df, hue=\"target\", ax=ax)","751873c0":"X = df.drop(columns=\"target\")\ny = df.target\n\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, stratify=y, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","bced3053":"X_train.head()","52c43178":"X_train.columns","28186e42":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom jcopml.tuning import grid_search_params as gsp","804e85d3":"preprocessor = ColumnTransformer([\n    ('numeric', num_pipe(),  [\"age\", \"trestbps\", \"chol\", \"thalach\", \"oldpeak\"]),\n    ('categoric', cat_pipe(encoder='onehot'), [\"sex\", \"cp\", \"fbs\", \"restecg\", \"exang\", \"slope\", \"ca\", \"thal\"]),\n])\n\npipeline = Pipeline([\n    ('prep', preprocessor),\n    ('algo', RandomForestClassifier(n_jobs=-1, random_state=42))\n])\n\n\n\nmodel = GridSearchCV(pipeline, gsp.rf_params, cv=3, n_jobs=-1, verbose=1)\nmodel.fit(X_train, y_train)\n\nprint(model.best_params_)\nprint(model.score(X_train, y_train), model.best_score_, model.score(X_test, y_test))","429289d5":"df_imp = mean_score_decrease(X_train, y_train, model, plot=True)","1513648c":"from jcopml.utils import save_model","b5531039":"save_model(model.best_estimator_, \"rf_heart.pkl\")","68eef48a":"> # Mengubah Terget\nKita hanya ingin mendeteksi apakah ada indikasi penyakit jantung atau tidak. Jadi:\n- 0 -> `False` (tidak ada indikasi)\n- 1, 2, 3, 4 -> `True` (ada indikasi)","855e1f74":"# Save Model","506aebf4":"# Nomenklatur Data\n\n-age: Umur <br>\n\n-sex: jenis kelamin-> (1 = male, 0 = female)<br>\n\n-cp: chest pain. Ada 4 tipe-> (1: typical angina, 2: atypical angina,3: non-anginal pain,4: asymptomatic)<br>\n\n-trestbps: Tekanan darah (kondisi resting) [mmHg]<br>\n\n-chol: serum cholestoral [mg\/dl]<br>\n\n-fbs: kadar gula (kondisi berpuasa) -> (1: artinya > 120 mg\/dl, 0: sebaliknya)<br>\n\n-restecg: electrocardiographic\/ kondisi resting -> (0: normal, 1: ada ST-T wave abnormality, 2: ada indikasi left ventricular hypertrophy menurut kriteria Estes)<br>\n\n-thalach: detak jantung maximum<br>\n\n-exang: mengalami chest pain tipe angina ketika olahraga -> (1: artinya iya, 0 artinya tidak)<br>\n\n-oldpeak: mengalami ST depression ketika olahraga dibandingkan saat diam<br>\n\n-slope: kemiringan pada peak exercise ST segment -> (1: naik,2: datar,3: turun)<br>\n\n-ca: banyaknya saluran saluran darah utama (0-3) dilihat dengan flourosopy)<br>\n\n-thal -> (3 = normal, 6 = cacat permanen, 7 = cacat reversibel)<br>\n\n-target -> (0: tidak ada indikasi penyakit jantung;  1,2,3,4: ada indikasi penyakit jantung)\n   ","e4442aa9":"# Analisa Kategorik vs Target","be8f4ad5":"# Import Data","80313118":"# Dataset Splitting\nSplit data menggunakan `train_test_split` dari `sklearn.model_selection`.\nPastikan:\n- memakai stratified shuffle split<br>\nya karena ini klasifikasi. Kita mau soal ujiannya serepresentatif mungkin.\n- test size yang sesuai<br>\nHati-hati, pastikan soal ujian tidak terlalu sedikit agar nilainya pun tidak sensitif","66324db7":"# Training","a91d96a3":"# Analisa Numeric vs Target (histogram)"}}