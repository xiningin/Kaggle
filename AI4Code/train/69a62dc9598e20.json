{"cell_type":{"9aa3768d":"code","5411b88c":"code","3d66009a":"code","a12150fe":"code","d484f7d9":"code","cd7c51fc":"code","80fb0295":"code","169ed828":"code","b01f851d":"code","0774a81b":"code","a254749f":"code","7a582555":"code","515793d8":"code","81d88fae":"code","1fa293d1":"code","dfad3aff":"markdown","ded85ed1":"markdown","858293c3":"markdown"},"source":{"9aa3768d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5411b88c":"train = pd.read_json('..\/input\/farsnews1399\/fars-news-1399.json', encoding='utf8')\ntrain.head()","3d66009a":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = '#A9A9A9',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(train[\"cat\"]))\nplt.rcParams['figure.figsize'] = (10,10)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"FarsNews Category\")\nplt.show()","a12150fe":"#Code by Ion Mosnoi https:\/\/www.kaggle.com\/mosnoiion\/countvectorizer-multinomialnb\n\n#We don't have test\/submission. Only df.\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\n\ncount_vect = CountVectorizer()\nX_train_counts = count_vect.fit_transform(train['abstract'])\nX_test_counts = count_vect.transform(train['cat'])\n\ntf_transformer = TfidfTransformer(use_idf=True).fit(X_train_counts)\nX_train_tf = tf_transformer.transform(X_train_counts)\nX_train_test = tf_transformer.transform(X_test_counts)\n\n\nX_train_counts.shape","d484f7d9":"!pip install dataprep","cd7c51fc":"! python -m pip install \"dask[dataframe]\" --upgrade  # or python -m pip install","80fb0295":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","169ed828":"plot(train)","b01f851d":"plot(train, \"abstract\")","0774a81b":"plot_missing(train)","a254749f":"!pip install data-purifier==0.3.0","7a582555":"import datapurifier as dp\nfrom datapurifier import Nlpeda, Nlpurifier","515793d8":"nlp_df = pd.read_json(\"..\/input\/farsnews1399\/fars-news-1399.json\", encoding='utf8')\nnlp_df.columns = [\"title\", \"abstract\", \"paragraphs\", \"cat\", \"subcat\", \"tags\", \"link\"]","81d88fae":"eda = Nlpeda(nlp_df, \"abstract\", analyse=\"basic\")\neda.df","1fa293d1":"eda = Nlpeda(nlp_df, \"abstract\", analyse=\"word\")\neda.unigram_df # for seeing unigram datfarame","dfad3aff":"#DataPurifier for NLP","ded85ed1":"#Go to Plan B. Since the snippet above won't lead me where I intend to be.","858293c3":"Unfortunately, Datapurifier doesn't show on the Outside of Kaggle environment. Another issue is that we're working with a NON-ENGLISH language, hence WordClouds requires a Knowledge that I'm still learning to deliver. \n\n\n#Acknowledgment\n\n\n\"A Python library for Automated Exploratory Data Analysis, Automated Data Cleaning, and Automated Data Preprocessing For Machine Learning and Natural Language Processing Applications in Python.\"\n\nAutomated EDA for NLP\n\nAutomated Data Cleaning for NLP\n\nAutomated EDA for Machine Learning\n\nAutomated Report Generation for Machine Learning\n\nhttps:\/\/github.com\/Elysian01\/Data-Purifier\n\nThat's all for now with NLP Data-Purifier."}}