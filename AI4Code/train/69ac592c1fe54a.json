{"cell_type":{"bd7ee698":"code","2892bb9a":"code","91418e95":"code","0ba6f41d":"code","db7f9625":"code","177fb3dc":"code","ad2b2d9d":"code","9998a8e3":"code","4ecf4a3c":"code","e107cc84":"code","ed077b33":"code","fcb3bc3b":"code","a67d21aa":"code","8b0d2883":"code","1bfac08b":"code","dd89c758":"code","1e9438a5":"code","4eecc55e":"code","d1650fa6":"code","163a862c":"code","ffd284b4":"code","973c87b4":"code","9e19c5bf":"code","36bae5e6":"code","e6fe5b95":"code","6810c1de":"code","680b0828":"code","764ad9b8":"code","9a7d510f":"code","59791868":"code","2941b3db":"code","4534cf45":"code","3903f5f7":"code","497091ee":"code","728a6811":"code","8d0aa784":"code","ae833510":"code","2ddb5c6f":"code","066ce746":"code","9239ae10":"code","f16615f0":"code","7b3d6451":"code","aae290a3":"code","74766c81":"code","927bade4":"code","ffd4c3ae":"code","37814c9c":"code","75840bad":"code","00e906dc":"code","d70418d8":"code","270b7c2b":"code","74413d27":"code","6b4654d9":"code","fafd51a4":"markdown","dfb03e1e":"markdown","61f98229":"markdown","9004b9b4":"markdown","2e8dc693":"markdown","8f9d9d3d":"markdown","83556897":"markdown","0a14053e":"markdown","02b30a08":"markdown","0e42a7be":"markdown","602c684d":"markdown","1daedd5d":"markdown","e016cc29":"markdown","5cfdc47c":"markdown","57f7b04b":"markdown","3c1d0c63":"markdown","554cf55c":"markdown","7fd40388":"markdown","63f8d657":"markdown","7c415dc6":"markdown","d7a02fed":"markdown","d20f92d8":"markdown","f25da278":"markdown","2f746392":"markdown","50cc4f69":"markdown","53b86ec6":"markdown","c0d7c1dc":"markdown","bbbf6bd1":"markdown","98728516":"markdown","07094cce":"markdown","bd053345":"markdown","a31d7782":"markdown","f6119e26":"markdown","d92fe5fd":"markdown","e346b94b":"markdown","05e26213":"markdown","b4df7c68":"markdown","927e089b":"markdown","5c78a6af":"markdown","f92f8e35":"markdown","3e033552":"markdown","040e6c77":"markdown","e4e63ac8":"markdown","618becee":"markdown","20527549":"markdown","1b643e78":"markdown","02e5899d":"markdown","36250d1b":"markdown"},"source":{"bd7ee698":"import pandas as pd\nimport numpy as np","2892bb9a":"animals = pd.read_csv('..\/input\/faoocp3\/fr_animaux.csv')\nanimals.columns = animals.columns.str.strip().str.lower().str.replace(' ', '_')\nanimals.rename(columns={'zone': 'country', 'unit\u00e9': 'unit', 'valeur': 'quantity', 'description_du_symbole': 'symbol', '\u00e9l\u00e9ment': 'type', 'produit':'product'}, inplace=True)\n# Remove aggregated data of regions\nanimals.drop(animals[animals['code_zone'] == 351].index, inplace=True)\nanimals.head()\n#animals.shape","91418e95":"cereals = pd.read_csv('..\/input\/faoocp3\/fr_cereales.csv')\ncereals.columns = cereals.columns.str.strip().str.lower().str.replace(' ', '_')\n#cereals.head()\n#cereals.shape","0ba6f41d":"world_population = pd.read_csv('..\/input\/faoocp3\/fr_population.csv')\nworld_population.columns = world_population.columns.str.strip().str.lower().str.replace(' ', '_')\nworld_population.rename(columns={'zone': 'country', 'unit\u00e9': 'unit', 'valeur': 'population', 'description_du_symbole': 'symbol'}, inplace=True)\nworld_population = world_population[['code_zone', 'country', 'unit', 'population', 'symbol']]\nworld_population.head(50)\n#world_population.shape","db7f9625":"under_power = pd.read_csv('..\/input\/faoocp3\/fr_sousalimentation.csv')\nunder_power.columns = under_power.columns.str.strip().str.lower().str.replace(' ', '_')\nunder_power.rename(columns={'zone': 'country', 'unit\u00e9': 'unit', 'valeur': 'quantity', 'description_du_symbole': 'symbol'}, inplace=True)\nunder_power.head()\n#under_power.shape","177fb3dc":"world_population.population.describe()","ad2b2d9d":"max_population_value = world_population[world_population.population == world_population.population.max()]\nmax_population_value.head()","9998a8e3":"world_population[world_population.duplicated() == True].count()","4ecf4a3c":"world_population[world_population['code_zone'].isna() == True]['code_zone'].count()","e107cc84":"world_population.sort_values(by='population', ascending=False).head(10)","ed077b33":"world_population.drop([33], inplace=True)\ntotal_population = sum(world_population['population']) * 1000\nprint(\"{0:,}\".format(total_population));","fcb3bc3b":"cereals = pd.read_csv('..\/input\/faoocp3\/fr_cereales.csv')\ncereals.columns = cereals.columns.str.strip().str.lower().str.replace(' ', '_')\ncereals.rename(columns={'zone': 'country', 'unit\u00e9': 'unit', 'valeur': 'quantity', 'description_du_symbole': 'symbol', '\u00e9l\u00e9ment': 'type', 'produit': 'product'}, inplace=True)\nwheat_fr = cereals[(cereals.country == 'France') & (cereals.code_produit == 2511)]\nwheat_fr.head(5)\n#cereals.shape","a67d21aa":"plants = pd.read_csv('..\/input\/faoocp3\/fr_vegetaux.csv')\nplants.columns = plants.columns.str.strip().str.lower().str.replace(' ', '_')\nplants.rename(columns={'zone': 'country', 'unit\u00e9': 'unit', 'valeur': 'quantity', 'description_du_symbole': 'symbol', '\u00e9l\u00e9ment': 'type', 'produit': 'product'}, inplace=True)\n# Remove aggregated data of regions\nplants.drop(plants[plants['code_zone']==351].index, inplace=True)\n\nwheat_fr_from_plants = plants[(plants.country == 'France') & (plants.code_produit == 2511)]\nwheat_fr_from_plants.head()\n#plants.shape","8b0d2883":"wheat_fr_from_plants_type = wheat_fr_from_plants['type']\ninner_disponibility = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Disponibilit\u00e9 int\u00e9rieure']['quantity'].sum()\nproduction = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Production']['quantity'].sum()\nimports = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Importations - Quantit\u00e9']['quantity'].sum()\nexports = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Exportations - Quantit\u00e9']['quantity'].sum()\nstock_variation = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Variation de stock']['quantity'].sum()\n\nprint('La disponibilit\u00e9 int\u00e9rieure vaut : {}'.format(inner_disponibility))\nprint('Production + Imports + Variation - Exports : {}'.format((production + imports + stock_variation) - exports))\n\nassert inner_disponibility == ((production + imports + stock_variation) - exports), 'La formule est fausse'","1bfac08b":"wheat_fr_from_plants_type = wheat_fr_from_plants['type']\nfood = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Nourriture']['quantity'].sum()\nanimals_food = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Aliments pour animaux']['quantity'].sum()\nseeds = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Semences']['quantity'].sum()\nloses = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Pertes']['quantity'].sum()\ntreatment = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Traitement']['quantity'].sum()\nothers = wheat_fr_from_plants[wheat_fr_from_plants_type == 'Autres utilisations (non alimentaire)']['quantity'].sum()\n\nassert inner_disponibility == ((production + imports + stock_variation) - exports), 'La formule est fausse'","dd89c758":"animals_and_plants_q3 = pd.concat([animals,plants])\n\n# Transformation de animals_and_plants_new en table pivot\nanimals_and_plants_q3 = animals_and_plants_q3.pivot_table(\n    index=[\"code_zone\",\"country\",\"code_produit\",\"product\"],\n    columns = [\"type\"], values=[\"quantity\"], aggfunc=sum)\n\nanimals_and_plants_q3.columns = ['Aliments pour animaux', 'Autres utilisations (non alimentaire)', 'Food supply (kcal\/capita\/day)',\n    'Food supply quantity (kg\/capita\/yr)', 'Food supply fat quantity (g\/capita\/day)', \n    'Protein supply quantity (g\/capita\/day)', 'Disponibilit\u00e9 int\u00e9rieure', 'Exportations - Quantit\u00e9',\n    'Importations - Quantit\u00e9', 'Food', 'Pertes',\n    'Production', 'Semences', 'Traitement','Variation de stock']\nanimals_and_plants_q3 = animals_and_plants_q3.reset_index()\nanimals_and_plants_q3 = animals_and_plants_q3\n# Ajout de la population \u00e0 data via une jointure\nanimals_and_plants_q3 = pd.merge(animals_and_plants_q3, world_population[['code_zone','population']], on=[\"code_zone\"])\nanimals_and_plants_q3[\"population\"] = animals_and_plants_q3[\"population\"] * 1000\n\nanimals_and_plants_q3.head()\n","1e9438a5":"animals_and_plants_q3[\"food_supply_kcal\"] = animals_and_plants_q3[\"Food supply (kcal\/capita\/day)\"] * animals_and_plants_q3[\"population\"] * 365\nanimals_and_plants_q3[\"food_supply_kgprotein\"] = animals_and_plants_q3[\"Protein supply quantity (g\/capita\/day)\"] * 0.001 * animals_and_plants_q3[\"population\"] * 365","4eecc55e":"# Now we can control the values\n\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual\n\ncountries = sorted(list(animals_and_plants_q3['country'].unique()))\nproducts = sorted(list(animals_and_plants_q3['product'].unique()))\n\n@interact\ndef show_per_country(country=countries, product=products):\n    return animals_and_plants_q3.loc[(animals_and_plants_q3['country'] == country) & (animals_and_plants_q3['product'] == product)]","d1650fa6":"# Total food supply in kg\nanimals_and_plants_q3[\"food_supply_kg\"] = animals_and_plants_q3[\"Food\"] * 1000000\n\n# Calcul des ratios\nmask = animals_and_plants_q3[\"food_supply_kg\"] != 0\nanimals_and_plants_q3.loc[mask, 'ratio_kcal\/kg'] = animals_and_plants_q3.loc[mask, \"food_supply_kcal\"] \/ animals_and_plants_q3.loc[mask, \"food_supply_kg\"]\nanimals_and_plants_q3.head(2)","163a862c":"products_stats_per_country = animals_and_plants_q3.groupby(\"product\").mean()\n\nproducts_stats_per_country.head()","ffd284b4":"products_stats_per_country = products_stats_per_country.reset_index()\nproducts_stats_per_country[(products_stats_per_country['product'] == 'Oeufs')]['ratio_kcal\/kg'].mean()","973c87b4":"# Ratio prots\/kg\nmask = animals_and_plants_q3[\"food_supply_kg\"] != 0\nanimals_and_plants_q3.loc[mask, 'protein_%'] = 100 * animals_and_plants_q3.loc[mask, \"food_supply_kgprotein\"] \/ animals_and_plants_q3.loc[mask, \"food_supply_kg\"]\n# Produits les plus caloriques\n\nq5_ratio_kcal_kg = animals_and_plants_q3.groupby(\"product\")[\"ratio_kcal\/kg\"].mean()\nq5_ratio_proteins_per_kg = animals_and_plants_q3.groupby(\"product\")[\"protein_%\"].mean()\nq5_ratios = pd.DataFrame({\"ratio_kcal\/kg\": q5_ratio_kcal_kg, \"protein_%\": q5_ratio_proteins_per_kg})\nq5_ratios.sort_values(\"ratio_kcal\/kg\", ascending=False)[:5]","9e19c5bf":"# So you can check on all products\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual\n\nq5_ratios = q5_ratios.reset_index()\nproducts = sorted(list(q5_ratios['product'].unique()))\n\n@interact\ndef show_per_country(product=products):\n    return q5_ratios.loc[(q5_ratios['product'] == product)][['product', 'protein_%']]","36bae5e6":"q5_ratios.sort_values(\"protein_%\", ascending=False)[['product', 'protein_%']].head(5)","e6fe5b95":"vegetals_quantities = world_population.merge(plants, on='country')\nvegetals_quantities = vegetals_quantities[vegetals_quantities['type'] == 'Disponibilit\u00e9 int\u00e9rieure'].copy()\nvegetals_quantities['quantity (kg)'] = vegetals_quantities['quantity'] * 1000 * 1000\n\n## Some tests\n# According to FOA, the world domestic availability of olive oil in 2013 is 2 779 000 000 kg\noil = vegetals_quantities[vegetals_quantities['product'] == \"Huile d'Olive\"].copy()\noil_world_quantity = oil['quantity (kg)'].sum()\n\n\n#print(oil_world_quantity)\n\nvegetals_quantities = vegetals_quantities.loc[:, ['product', 'quantity (kg)']].groupby('product').agg('sum')\n\nvegetals_quantities.head()","6810c1de":"vegetal_domestic_availability = vegetals_quantities.merge(q5_ratios, on='product')\n\nvegetal_domestic_availability.head(100)","680b0828":"vegetal_domestic_availability['total_kcal'] = vegetal_domestic_availability['quantity (kg)'] * vegetal_domestic_availability['ratio_kcal\/kg']\n\ntotal_kcal_in_the_world_from_vegetals = vegetal_domestic_availability['total_kcal'].sum()\n\nprint(\"Total Kcal from vegetals in the World : {}\".format(total_kcal_in_the_world_from_vegetals))","764ad9b8":"days_in_year = 365\nenergy_needs_a_day = 2500\nnb_inhabitants = total_kcal_in_the_world_from_vegetals \/ (energy_needs_a_day * days_in_year)\n\nprint(\"{0:,}\".format(nb_inhabitants));\n\nprint(nb_inhabitants\/total_population * 100, '%')","9a7d510f":"proteins_needs_a_day = 63\n# Warning: percentages here\nvegetal_domestic_availability['total_proteins'] = vegetal_domestic_availability['quantity (kg)'] * 0.01 * vegetal_domestic_availability['protein_%']\n\nvegetal_domestic_availability = vegetal_domestic_availability['total_proteins'].sum()\n\nnb_inhabitants_in_prots = vegetal_domestic_availability \/ (proteins_needs_a_day * 0.001 * days_in_year)\n\nprint(\"{0:,}\".format(nb_inhabitants_in_prots));\n\npercentage_prots = (nb_inhabitants_in_prots\/total_population) * 100\nprint(\"{:.2f} %\".format(percentage_prots))\n","59791868":"q8_vegetals_quantities = world_population.merge(plants, on='country')\nq8_vegetals_quantities = q8_vegetals_quantities[q8_vegetals_quantities['type'].isin(['Disponibilit\u00e9 int\u00e9rieure', 'Pertes', 'Aliments pour animaux'])].copy()\nq8_vegetals_quantities['quantity (kg)'] = q8_vegetals_quantities['quantity'] * 1000 * 1000\n\n\nq8_vegetals_quantities = q8_vegetals_quantities.loc[:, ['product', 'quantity (kg)']].groupby('product').agg('sum')\n\nq8_vegetal_domestic_availability = q8_vegetals_quantities.merge(q5_ratios, on='product')\n\nq8_vegetal_domestic_availability['total_kcal'] = q8_vegetal_domestic_availability['quantity (kg)'] * q8_vegetal_domestic_availability['ratio_kcal\/kg']\n\nq8_total_kcal = q8_vegetal_domestic_availability['total_kcal'].sum()\n\nq8_vegetal_domestic_availability['total_proteins'] = q8_vegetal_domestic_availability['quantity (kg)'] * q8_vegetal_domestic_availability['protein_%']\n\nq8_total_prots = q8_vegetal_domestic_availability['total_proteins'].sum() \/ 100\n\nprint(\"Total energy (kcal): %s \\nTotal proteins (kg) : %s\" % (q8_total_kcal, q8_total_prots))","2941b3db":"q8_inhabitants_in_energy = ((q8_total_kcal\/(energy_needs_a_day * days_in_year)) \/ total_population) * 100\n\nq8_inhabitants_in_proteins = ((q8_total_prots\/((proteins_needs_a_day\/1000) * days_in_year)) \/ total_population) * 100\n\nprint(\"Total habitants in energy : {:.2f} % \\nTotal habitants in proteins (kg) : {:.2f} %\".format(q8_inhabitants_in_energy, q8_inhabitants_in_proteins))","4534cf45":"# what is the total domestic availability ? It's the addition of animals and vegetals.\n\nq9_total_quantities = world_population.merge(pd.concat([animals, plants]), on='country')\nq9_total_quantities = q9_total_quantities[q9_total_quantities['type'] == 'Disponibilit\u00e9 int\u00e9rieure'].copy()\nq9_total_quantities['quantity (kg)'] = q9_total_quantities['quantity'] * 1000 * 1000\n\n\nq9_total_quantities = q9_total_quantities.loc[:, ['product', 'quantity (kg)']].groupby('product').agg('sum')\n\nq9_total_domestic_availability = q9_total_quantities.merge(q5_ratios, on='product')\n\nq9_total_domestic_availability['total_kcal'] = q9_total_domestic_availability['quantity (kg)'] * q9_total_domestic_availability['ratio_kcal\/kg']\n\nq9_total_kcal = q9_total_domestic_availability['total_kcal'].sum()\n\nq9_total_domestic_availability['total_proteins'] = q9_total_domestic_availability['quantity (kg)'] * q9_total_domestic_availability['protein_%']\n\nq9_total_prots = q9_total_domestic_availability['total_proteins'].sum() \/ 100\n\nprint(\"Total energy (kcal): %s \\nTotal proteins (kg) : %s\" % (q9_total_kcal, q9_total_prots))","3903f5f7":"q9_inhabitants_in_energy = ((q9_total_kcal\/(energy_needs_a_day * days_in_year)) \/ total_population) * 100\n\nq9_inhabitants_in_proteins = ((q9_total_prots\/((proteins_needs_a_day\/1000) * days_in_year)) \/ total_population) * 100\n\nprint(\"Total habitants in energy : {:.2f} % \\nTotal habitants in proteins (kg) : {:.2f} %\".format(q9_inhabitants_in_energy, q9_inhabitants_in_proteins))","497091ee":"q10_under_power_2013 = under_power[under_power['ann\u00e9e'] == '2012-2014'].copy()\nq10_under_power_2013['quantity'] = pd.to_numeric(q10_under_power_2013['quantity'], errors='coerce')\nq10_under_power_2013['total_sub_nutrition'] = q10_under_power_2013['quantity'] * 1000000\nq10_under_power_2013 = q10_under_power_2013.merge(world_population, on='country', how='right')\nq10_under_power_2013['population'] = q10_under_power_2013['population'] * 1000\nq10_ratio_sub_nutrition = q10_under_power_2013['total_sub_nutrition'].sum()\/q10_under_power_2013['population'].sum()\n\nprint(\"Total proportion of the population in sub nutrition : {:.2f} %\".format(q10_ratio_sub_nutrition * 100))","728a6811":"# Added \"is_cereal\" column to the list\nanimals_and_plants_q3['is_cereal'] = animals_and_plants_q3['product'].isin(list(cereals['product']))\n\n# Select Cereals\nq11_cereals = animals_and_plants_q3[animals_and_plants_q3['is_cereal']]\n\n# Cereals only for food\n\nq11_cereals_for_food = q11_cereals[(q11_cereals['Aliments pour animaux'] > 0) | (q11_cereals['Food'] > 0)]\n\nq11_cereals_animal_food = q11_cereals_for_food['Aliments pour animaux'].sum()\nq11_cereals_food = q11_cereals_for_food['Food'].sum() + q11_cereals_animal_food\n\n\nprint(\"Total proportion of the animal food in the food (cereals only) : {:.2f} %\".format((q11_cereals_animal_food\/q11_cereals_food) * 100))","8d0aa784":"# List of countries where there is subnutrition according to the FAO (96 countries)\nq12_underpowered_countries = q10_under_power_2013[q10_under_power_2013['quantity'].notna()]\n\n# List of the 15 most exported products by the underpowered countries\nq12_underpowered_countries_products = q12_underpowered_countries.merge(animals_and_plants_q3, left_on='code_zone_x', right_on='code_zone')\nq12_most_exported_products = q12_underpowered_countries_products[['product', 'Exportations - Quantit\u00e9']].groupby('product').agg('sum').sort_values(by='Exportations - Quantit\u00e9', ascending=False)[:15]\n\nq12_most_exported_products.head(15)","ae833510":"# List of the 200 biggest importations for these 15 products\nq12_most_exported_products.reset_index(inplace=True)\n\nq12_biggest_importations = animals_and_plants_q3[animals_and_plants_q3['product'].isin(q12_most_exported_products['product'])].sort_values(by='Importations - Quantit\u00e9', ascending=False)[:200]\n\n\nq12_biggest_importations = q12_biggest_importations[['country', 'product', 'Importations - Quantit\u00e9', 'Autres utilisations (non alimentaire)', 'Disponibilit\u00e9 int\u00e9rieure', 'Food', 'Aliments pour animaux']].copy()\n\nq12_biggest_importations.head()","2ddb5c6f":"# Now group them by product, so we get 15 lines : 1 for each product\nq12_biggest_importations = q12_biggest_importations.groupby('product').agg('sum').copy()\nq12_biggest_importations.head(15)","066ce746":"# ratio \"Others\" \/ \"Domestic availability\"\nq12_biggest_importations['others\/domestic_availability_%'] = (q12_biggest_importations['Autres utilisations (non alimentaire)'] \/ q12_biggest_importations['Disponibilit\u00e9 int\u00e9rieure']) * 100\n\n# ratio \"Animal food\" \/ \"total food\"\nq12_biggest_importations['total_food'] = q12_biggest_importations['Aliments pour animaux'] + q12_biggest_importations['Food']\nq12_biggest_importations['animal_food\/total_food_%'] = (q12_biggest_importations['Aliments pour animaux'] \/ q12_biggest_importations['total_food']) * 100\n\nq12_biggest_importations.head()","9239ae10":"# Top 3 ratio \"Others\" \/ \"Domestic availability\"\nq12_biggest_importations.reset_index(inplace=True)\nq12_biggest_importations[['product', 'others\/domestic_availability_%']].sort_values(by='others\/domestic_availability_%', ascending=False)[:3].head()","f16615f0":"# Top 3 ratio \"Animal food\" \/ \"total food\"\nq12_biggest_importations.reset_index(inplace=True)\nq12_biggest_importations[['product', 'animal_food\/total_food_%']].sort_values(by='animal_food\/total_food_%', ascending=False)[:3].head()","7b3d6451":"q13_cereals_usa = q11_cereals[q11_cereals['country'] == \"\u00c9tats-Unis d'Am\u00e9rique\"].copy()\nq13_cereals_used_for_animal_food_usa = q13_cereals_usa['Aliments pour animaux'].sum() * 1000\n\nprint(\"Total quantity of food used for animal food in the USA: {0:,} tons\".format(q13_cereals_used_for_animal_food_usa))\n\n# Get 10% of this value\n\nprint(\"Cereals released if we reduce the animal food by 10% : {0:,} tons\".format(q13_cereals_used_for_animal_food_usa*0.1))","aae290a3":"q14_manioc_thailand = animals_and_plants_q3[(animals_and_plants_q3['country'] == 'Tha\u00eflande') & (animals_and_plants_q3['product'] == 'Manioc')].copy()\nq14_manioc_thailand[['Disponibilit\u00e9 int\u00e9rieure',\n       'Exportations - Quantit\u00e9', 'Importations - Quantit\u00e9', 'Food', 'Pertes',\n       'Production', 'Semences', 'Traitement', 'Variation de stock']].head()\n\n# Ratio \"Export\"\/\"Total\"\nq14_manioc_thailand['ratio_export_on_total_%'] = (q14_manioc_thailand['Exportations - Quantit\u00e9'] \/ (q14_manioc_thailand['Production'] + q14_manioc_thailand['Importations - Quantit\u00e9'] + q14_manioc_thailand['Variation de stock'])) * 100\n\nprint(\"The proportion of exported Manioc for Thailand is {:.2f}% of the total quantity of available Manioc (Regardless the others uses).\".format(q14_manioc_thailand['ratio_export_on_total_%'].sum()))","74766c81":"q14_thailand_subnutrition = q12_underpowered_countries[q12_underpowered_countries['country'] == 'Tha\u00eflande'].copy()\nq14_thailand_subnutrition['ratio_subnutrition_%'] = (q14_thailand_subnutrition['total_sub_nutrition'] \/ q14_thailand_subnutrition['population']) * 100\n\nprint(\"The proportion of people in Thailand who get subnutrition issues {:.2f}%.\".format(q14_thailand_subnutrition['ratio_subnutrition_%'].sum()))","927bade4":"world_population.code_zone.duplicated().sum()","ffd4c3ae":"from sqlalchemy import create_engine, MetaData, Table, Column, String, SmallInteger, Integer, Enum","37814c9c":"engine = create_engine('sqlite:\/\/', echo=False)\nmetadata = MetaData()\n\n# Table creation\n\npopulation = Table(\n    'population',\n    metadata,\n    Column('pays', String(128), nullable = False),\n    Column('code_pays', SmallInteger, primary_key = True),\n    Column('annee', SmallInteger, primary_key = True),\n    Column('population', Integer, nullable = False)\n)\n\npopulation.create(engine)\n\n# Import Data from the DataFrame to the SQLite Table\npopulation_extract = world_population[['code_zone', 'country', 'population']].copy()\npopulation_extract.rename(columns= {'code_zone': 'code_pays', 'country': 'pays'}, inplace=True)\npopulation_extract['annee'] = 2013\n\npopulation_extract.head()\npopulation_extract.to_sql('population', engine, if_exists='replace', index=False)\nresult = engine.execute(\"SELECT * FROM population LIMIT 5\")\n\nprint(result.fetchall())","75840bad":"# Table creation\n\ndispo_alim = Table(\n    'dispo_alim',\n    metadata,\n    Column('pays', String(128), nullable = False),\n    Column('code_pays', SmallInteger, primary_key = True),\n    Column('annee', SmallInteger, primary_key = True),\n    Column('produit', String(128), nullable = False),\n    Column('code_produit', SmallInteger, primary_key = True),\n    Column('origin', Enum('animal', 'vegetal'), nullable = False),\n    Column('dispo_alim_tonnes', Integer, nullable = False, default = 0),\n    Column('dispo_alim_kcal_p_j', Integer, nullable = False, default = 0),\n    Column('dispo_prot', Integer, nullable = False, default = 0),\n    Column('dispo_mat_gr', Integer, nullable = False, default = 0)\n)\n\ndispo_alim.create(engine)","00e906dc":"# Import Data from the DataFrame to the SQLite Table\n## est-ce Food ou Disponibilit\u00e9 int\u00e9rieure ?\nq16_dispo_alim = animals_and_plants_q3[['country', 'code_zone', 'code_produit', 'product', 'is_cereal', 'Disponibilit\u00e9 int\u00e9rieure', 'Food supply (kcal\/capita\/day)', 'Protein supply quantity (g\/capita\/day)', 'Food supply fat quantity (g\/capita\/day)']].copy()\nq16_dispo_alim.rename(columns = {\n    'country': 'pays',\n    'code_zone': 'code_pays',\n    'product': 'produit',\n    'is_cereal': 'origin',\n    'Disponibilit\u00e9 int\u00e9rieure': 'dispo_alim_tonnes',\n    'Food supply (kcal\/capita\/day)': 'dispo_alim_kcal_p_j',\n    'Protein supply quantity (g\/capita\/day)': 'dispo_prot',\n    'Food supply fat quantity (g\/capita\/day)': 'dispo_mat_gr'\n}, inplace=True)\n\nq16_dispo_alim.loc[q16_dispo_alim['produit'].isin(plants['product']),'origin'] = 'vegetal'\nq16_dispo_alim.loc[~q16_dispo_alim['produit'].isin(plants['product']),'origin'] = 'animal'\nq16_dispo_alim['annee'] = 2013\n\nq16_dispo_alim.to_sql('dispo_alim', engine, if_exists='replace', index=False)\nresult = engine.execute(\"SELECT * FROM dispo_alim LIMIT 5\")\n\nprint(result.fetchall())","d70418d8":"# Table creation\n\nequilibre_prod = Table(\n    'equilibre_prod',\n    metadata,\n    Column('pays', String(128), nullable = False),\n    Column('code_pays', SmallInteger, primary_key = True),\n    Column('annee', SmallInteger, nullable = False, primary_key = True),\n    Column('produit', String(128), nullable = False),\n    Column('code_produit', SmallInteger, primary_key = True),\n    Column('alim_ani', Integer, nullable = False, default = 0),\n    Column('semences', Integer, nullable = False, default = 0),\n    Column('pertes', Integer, nullable = False, default = 0),\n    Column('transfo', Integer, nullable = False, default = 0),\n    Column('nourriture', Integer, nullable = False, default = 0),\n    Column('autres_utilisations', Integer, nullable = False, default = 0)\n)\n\nequilibre_prod.create(engine)","270b7c2b":"# Import Data from the DataFrame to the SQLite Table\nq18_equilibre_prod = animals_and_plants_q3[['code_zone', 'country', 'product', 'code_zone', 'Aliments pour animaux', 'Semences', 'Pertes', 'Traitement', 'Food', 'Autres utilisations (non alimentaire)']].copy()\nq18_equilibre_prod.rename(columns={\n    'code_zone': 'code_pays',\n    'country': 'pays',\n    'product': 'produit',\n    'code_zone': 'code_produit',\n    'Aliments pour animaux': 'alim_ani',\n    'Semences': 'semences',\n    'Pertes': 'pertes',\n    'Traitement': 'transfo',\n    'Food': 'nourriture',\n    'Autres utilisations (non alimentaire)': 'autres_utilisations'\n    \n}, inplace=True)\n\nq18_equilibre_prod['annee'] = 2013\n\n# Manage None values (explain why for me None equals 0 in this context)\nq18_equilibre_prod.fillna(0, inplace=True)\n\nq18_equilibre_prod.to_sql('equilibre_prod', engine, if_exists='replace', index=False)\n\nresult = engine.execute(\"SELECT * FROM equilibre_prod LIMIT 5\")\n\nprint(result.fetchall())","74413d27":"# Table creation\n\nsous_nutrition = Table(\n    'sous_nutrition',\n    metadata,\n    Column('pays', String(128), nullable = False),\n    Column('code_pays', SmallInteger, primary_key = True),\n    Column('annee', SmallInteger, primary_key = True),\n    Column('nb_personnes', Integer, nullable = False, default = 0)\n)\n\nsous_nutrition.create(engine)","6b4654d9":"# Import Data from the DataFrame to the SQLite Table (TBD)\nq10_under_power_2013.columns\nq18_subnutrition = q10_under_power_2013[['country','code_zone_x','ann\u00e9e','total_sub_nutrition']].copy()\nq18_subnutrition.rename(columns={\n    'country': 'pays',\n    'code_zone_x': 'code_pays',\n    'total_sub_nutrition': 'nb_personnes',\n    'ann\u00e9e': 'annee'\n},inplace=True)\n\nq18_subnutrition['annee'] = 2013\nq18_subnutrition.to_sql('sous_nutrition', engine, if_exists='replace', index=False)\nresult = engine.execute(\"SELECT * FROM sous_nutrition LIMIT 5\")\n\nprint(result.fetchall())","fafd51a4":"Non plus, il y a environ 1,3 Milliards de personnes en trop... comme si la Chine \u00e9tait compt\u00e9e 2 fois ! Affichons les 10 plus grosses populations pour \u00e9liminer cette possibilit\u00e9 !","dfb03e1e":"## Question 9 : Disponibilit\u00e9 alimentaire totale mondiale\n\nEt si nous vivions dans un monde \"id\u00e9al\" o\u00f9 toute la nourriture disponible serait r\u00e9partie _seulement_ pour nourrir des \u00eatres humains ?\n\nCombien d'humains pourraient \u00eatre nourris avec la disponibilit\u00e9 alimentaire mondiale ? \n\n> Donnez les r\u00e9sultats en termes de calories, puis de prot\u00e9ines, et exprimez ensuite ces 2 r\u00e9sultats en pourcentage de la population mondiale.","61f98229":"Le chiffre obtenu est aberrant par rapport aux chiffres commun\u00e9ment admis sur Wikipedia et par l'[INED](https:\/\/www.ined.fr\/fichier\/s_rubrique\/18709\/population_societes_2013_503_population_monde.fr.pdf) qui positionne cette valeur autour des 7,17 Milliards d'habitants en 2013. Ce chiffre est coh\u00e9rent avec [la valeur publi\u00e9e](https:\/\/donnees.banquemondiale.org\/indicateur\/SP.POP.TOTL) par la banque mondiale des donn\u00e9es de l'ONU. Jetons un oeil un peu plus critique \u00e0 notre source de donn\u00e9es :","9004b9b4":"### Comment v\u00e9rifier nos r\u00e9sultats ?\n\nSelon Wikip\u00e9dia, le [ratio de prot\u00e9ines pour l'avoine](https:\/\/fr.wikipedia.org\/wiki\/Avoine_cultiv%C3%A9e) est d'environ 10,7%.\n\nNous parvenons \u00e0 une valeur moyenne de 8,1% pour l'**Avoine**, ce qui est assez proche de la valeur indiqu\u00e9e par Wikip\u00e9dia (10,7%).","2e8dc693":"## Question 15 : la table \"population\"\n\n\nNous avons choisi les propri\u00e9t\u00e9 \"code_pays\" et ann\u00e9e pour \u00eatre la cl\u00e9 composite pour les raisons suivantes :\n\n* Le code pays est unique\n* Il est court et ne peut pas \u00eatre nul\n* Contrairement \u00e0 l'orthographe d'un pays qui peut \u00eatre \u00e9crite diff\u00e9remment (selon la langue), le code pays est num\u00e9rique\n* Il doit y avoir une entr\u00e9e par pays ET par ann\u00e9e\n","8f9d9d3d":"# Question 7: Nourrir la population avec la disponibilit\u00e9 int\u00e9rieure en v\u00e9g\u00e9taux\n\nDans l'exercice pr\u00e9c\u00e9dent, nous avons calcul\u00e9 la quantit\u00e9 de nourriture v\u00e9g\u00e9tale \u00e0 notre disposition en 2013. Selon l'ONU, on consid\u00e8re les besoins d'un \u00eatre humain \u00e0 environ 2500 kcal\/jour.\n\nAvec la quantit\u00e9 de nourriture \u00e0 notre disposition, et si elle \u00e9tait \u00e9quitablement r\u00e9partie, combien d'\u00eatres humains aurions nous pu nourrir en 2013 ?\n","83556897":"## Question 14 : En Tha\u00eflande, quelle proportion de manioc est export\u00e9e ? Quelle est la proportion de personnes en sous-nutrition?","0a14053e":"Nous avons t\u00e9l\u00e9charg\u00e9 les informations sur la population par Pays au format CSV et les avons charg\u00e9s dans une structure *pandas.DataFrame* de la librairie pandas disponible dans le langage Python.","02b30a08":"Impressionnant ! Non seulement il y a assez de nourriture pour tout le monde, mais en plus il y a m\u00eame un exc\u00e8s ! \u00e7a questionne les _gaspillages de nourriture_ des pays les plus riches ...\n\nNous sommes parvenus au chiffre de **205%** en consid\u00e9rant uniquement les calories, mais qu'en est-il pour la quantit\u00e9 de prot\u00e9ines ?\n\nD'apr\u00e8s les RDA (Recommended Dietary Allowances ou Apports Nutritionnels Conseill\u00e9s (ANC) dans le monde francophone), un homme adulte en bonne sant\u00e9 a besoin de **63 grammes** de prot\u00e9ines par jour. Calculons donc le nombre de prot\u00e9ines apport\u00e9e par la nourriture \"v\u00e9g\u00e9tale\" :","0e42a7be":"### Calcul final et estimations\n\nDans un monde th\u00e9orique id\u00e9al o\u00f9 nous pourrions de fa\u00e7on parfaitement \u00e9quitable et pour la population consid\u00e9r\u00e9e, de combien de kcal disposerait chaque individu ?\n\nNous allons calculer la somme des kilo calories disponibles dans le monde, et le diviser par le nombre d'individus dans notre population.","602c684d":"# Question 5: Comment \u00e9valuer la qualit\u00e9 d'un aliment ?\n\nDans de pr\u00e9c\u00e9dents travaux, nous avions commenc\u00e9 \u00e0 \u00e9valuer la quantit\u00e9 et la qualit\u00e9 des aliments disponibles aux habitants en fonction du pays dans lequel ils habitaient.\nNous avions r\u00e9alis\u00e9 que la quantit\u00e9, mais \u00e9galement la *qualit\u00e9* des diff\u00e9rents aliments diff\u00e9rait pour chacun des pays analys\u00e9s.\n\nPour extraire une liste des aliments les plus riches - au sens les plus **calorifiques** - nous allons donc pour chaque aliment \u00e9tablir une moyenne des ratio \u00e9nergie\/poids obtenus, et les classer du plus grand au plus petit.\n","1daedd5d":"### Comment est utilis\u00e9 le bl\u00e9 en France ?\n\n\nNotre stock de bl\u00e9 (ou plut\u00f4t, notre _Disponibilit\u00e9 int\u00e9rieure_) se r\u00e9partit en plusieurs cat\u00e9gories :\n\n* la **nourriture** (ou Disponibilit\u00e9 alimentaire) ;\n* la **nourriture pour animaux** ;\n* la **semence** (stock n\u00e9cessaire pour la culture) ;\n* les **pertes** pour des raisons vari\u00e9es ;\n* le **traitement** ;\n* et d'**autres utilisations** non d\u00e9taill\u00e9es ;\n\n$$domesticAvailability = (Food + AnimalsFood + Seeds + Loses + Treatment + Others)$$\n\nV\u00e9rifions cela avec Python :","e016cc29":"## Question 17 : La table \"equilibre_prod\"\n\nUne table appel\u00e9e ``equilibre_prod`` contenant pour chaque pays et pour chaque produit en 2013, les quantit\u00e9s suivantes :\n* disponibilit\u00e9 int\u00e9rieure\n* aliments pour animaux\n* semences\n* pertes\n* transform\u00e9s\n* nourriture\n* autres utilisations\n\nElle devra contenir ces colonnes :\n* pays\n* code_pays\n* ann\u00e9e\n* produit\n* code_produit\n* dispo_int\n* alim_ani\n* semences\n* pertes\n* transfo\n* nourriture\n* autres_utilisations\n\n### Choix de la cl\u00e9 primaire\n\nComme pour la question pr\u00e9c\u00e9dente, et pour les m\u00eames raisons nous allons cr\u00e9er une cl\u00e9 primaire compos\u00e9e de `code_pays`, `code_produit` et `annee` puisque l'\u00e9nonc\u00e9 d\u00e9crit qu'il n'y aura qu'une seule entr\u00e9e par couple ('pays', 'produit', 'annee').\n","5cfdc47c":"### Pour conclure\n\nLes 5 produits les plus calorifiques sont tous **des huiles** et les 5 produits les plus **riches en prot\u00e9ines** sont les suivants :\n\n* Soja\n* Arachides Decortiquees\n* Pois\n* L\u00e9gumineuses Autres\n* Haricots\n\n> C'est tr\u00e8s surprenant, on se serait attendus \u00e0 voir appara\u00eetre des viandes ou des poissons !","57f7b04b":"## Question 3 : La disponibilit\u00e9 alimentaire\n\nOn d\u00e9finit la \"disponibilit\u00e9 alimentaire\" comme la disponibilit\u00e9 d'aliments en quantit\u00e9 suffisante et d'une qualit\u00e9 appropri\u00e9e, dont l'approvisionnement est assur\u00e9e par la production nationale ou les les importations (y compris l'aide internationale).\n\nNous allons calculer cette valeur par Pays et par Produit: en kcal\/personne\/jour et en kg de prot\u00e9ines\/personne\/jour.\n\n### O\u00f9 trouver les informations ?\n\nNous avons des informations sur les produits qui sont dispers\u00e9es entre les c\u00e9r\u00e9ales et les viandes.\n\nPar chance, les deux documents sont structur\u00e9s de la m\u00eame fa\u00e7on donc on va pouvoir rassembler les sources d'informations puis r\u00e9cup\u00e9rer les disponibilit\u00e9s alimentaires.\nCes donn\u00e9es ne sont pas n\u00e9cessairement dans l'unit\u00e9 qui nous int\u00e9resse ! Nous allons donc devoir faire une transformation d'unit\u00e9 :\n\n* _Disponibilit\u00e9 de prot\u00e9ines en quantit\u00e9 (**g**\/personne\/jour)_ => _Disponibilit\u00e9 de prot\u00e9ines en quantit\u00e9 (**kg**\/personne\/jour)_","3c1d0c63":"### Liste des produits (r\u00e9capitulatif question 12)\n\n#### TOP 3 ratio \"Autres utilisations\" \/ \"Disponibilit\u00e9 int\u00e9rieure\"\n\n* Huile de Palme (72,5%)\n* Manioc (30,2%)\n* Ma\u00efs (26%)\n\n#### TOP 3 ratio \"Nourriture animale\" \/ \"Nourriture totale\"\n\n* Ma\u00efs (87,8%)\n* Poissons Pelagiques (75,5%)\n* Soja (64,6%)\n","554cf55c":"Bingo ! La Chine \u00e9tait compt\u00e9e 2 fois, probablement pour faire la diff\u00e9rence entre la Chine en tant que pays et la Chine et ses territoires semi-ind\u00e9pendants (Hong kong, Macao, Ta\u00efwan). Supprimons l'entr\u00e9e qui comptabilisait probablement la somme totale ! Selon nos recherches pr\u00e9c\u00e9dentes, c'est **la ligne avec l'index 33 qui doit \u00eatre retir\u00e9e de notre jeu de donn\u00e9es**. De plus, nous remarquons - \u00e0 nouveau - l'information suivante dans la partie \"description du symbole\" :\n\n> Agr\u00e9gat, peut inclure des donn\u00e9es officielles,...","7fd40388":"### Pourcentages et estimations\n\nRappels:\n\n* Selon l'ONU, on consid\u00e8re les besoins d'un \u00eatre humain \u00e0 environ 2500 kcal\/jour.\n* Selon les RDA, on consid\u00e8re les besoins en prot\u00e9ines d'un \u00eatre humain a environ 63 g\/jour.","63f8d657":"## Question 10 : proportion de la population mondiale est consid\u00e9r\u00e9e comme \u00e9tant en sous-nutrition\n\nA partir des donn\u00e9es t\u00e9l\u00e9charg\u00e9es qui concernent la sous-nutrition, r\u00e9pondez \u00e0 cette question: Quelle proportion de la population mondiale est consid\u00e9r\u00e9e comme \u00e9tant en sous-nutrition ?","7c415dc6":"## Question 13 :  Combien de tonnes de c\u00e9r\u00e9ales pourraient \u00eatre lib\u00e9r\u00e9es si les USA diminuaient leur production de produits animaux de 10% ?","d7a02fed":"```sql\nCREATE TABLE sous_nutrition (\n    code_pays TINYINT NOT NULL,\n    pays VARCHAR(128) NOT NULL,\n    annee TINYINT NOT NULL,\n    nb_personnes INT NOT NULL DEFAULT 0,\n    CONSTRAINT pk_sous_nutrition_codes_pays_annee PRIMARY KEY (code_pays, annee)\n);\n```","d20f92d8":"Attention, ce code fonctionnera sur [MySQL](https:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/enum.html) pas sur PostgreSQL qui a un fonctionnement diff\u00e9rent pour la gestion des ENUM.\n\n```sql\nCREATE TABLE dispo_alim (\n    code_pays TINYINT NOT NULL,\n    pays VARCHAR(128) NOT NULL,\n    annee TINYINT NOT NULL,\n    produit VARCHAR(128) NOT NULL,\n    code_produit TINYINT NOT NULL,\n    origin ENUM('animal', 'vegetal') NOT NULL,\n    dispo_alim_tonnes INT NOT NULL DEFAULT 0,\n    dispo_alim_kcal_p_j INT NOT NULL DEFAULT 0,\n    dispo_prot INT NOT NULL DEFAULT 0,\n    dispo_mat_gr INT NOT NULL DEFAULT 0\n    CONSTRAINT pk_dispo_alim_codes_pays_produit_annee PRIMARY KEY (code_pays, code_produit, annee)\n);\n```","f25da278":"```sql\nCREATE TABLE equilibre_prod (\n    code_pays TINYINT NOT NULL,\n    pays VARCHAR(128) NOT NULL,\n    annee TINYINT NOT NULL,\n    produit VARCHAR(128) NOT NULL,\n    code_produit TINYINT NOT NULL,\n    alim_ani INT NOT NULL DEFAULT 0,\n    semences INT NOT NULL DEFAULT 0,\n    pertes INT NOT NULL DEFAULT 0,\n    transfo INT NOT NULL DEFAULT 0,\n    nourriture INT NOT NULL DEFAULT 0,\n    autres_utilisations INT NOT NULL DEFAULT 0,\n    CONSTRAINT pk_equilibre_prod_codes_pays_produit_annee PRIMARY KEY (code_pays, code_produit, annee)\n);\n```","2f746392":"Maintenant, rassemblons les deux _DataFrame_.","50cc4f69":"## Question 12 : Les 6 produits \u00e0 consid\u00e9rer dans les pays les plus touch\u00e9s\n\nS\u00e9lectionnez parmi les donn\u00e9es des bilans alimentaires les informations relatives aux pays dans lesquels la FAO recense des personnes en sous-nutrition.\n\nRep\u00e9rez **les 15 produits les plus export\u00e9s par ce groupe de pays**.\n\nParmi les donn\u00e9es des bilans alimentaires au niveau mondial, s\u00e9lectionnez les 200 plus grandes importations de ces produits (1 importation = une quantit\u00e9 d'un produit donn\u00e9 import\u00e9e par un pays donn\u00e9)\n\nGroupez ces importations par produit, afin d'avoir une table contenant 1 ligne pour chacun des 15 produits. Ensuite, calculez pour chaque produit les 2 quantit\u00e9s suivantes :\n\n* le ratio entre la quantit\u00e9 destin\u00e9s aux \"Autres utilisations\" (Other uses) et la disponibilit\u00e9 int\u00e9rieure.\n* le ratio entre la quantit\u00e9 destin\u00e9e \u00e0 la nourriture animale et la quantit\u00e9 destin\u00e9e \u00e0 la nourriture (animale + humaine)\n\n**Donnez les 3 produits qui ont la plus grande valeur pour chacun des 2 ratios (vous aurez donc 6 produits \u00e0 citer)**","53b86ec6":"Apr\u00e8s v\u00e9rification sur internet, ce chiffre semble r\u00e9aliste. On trouve sur le site [inegalites.fr](https:\/\/www.inegalites.fr\/800-millions-de-personnes-sous-alimentees-dans-le-monde) la valeur de **10.8%** pour la sous nutrition en 2013.","c0d7c1dc":"## Question 19 : un peu de Data exploration avec SQL\n\n> Les 10 pays ayant le plus haut ratio disponibilit\u00e9 alimentaire\/habitant en termes de prot\u00e9ines (en kg) par habitant, puis en termes de kcal par habitant.\n\n```sql\nSELECT DISTINCT(pays) AS \"top_10_prot\" \n    FROM dispo_alim\n    GROUP BY pays\n    ORDER by SUM(dispo_prot) DESC \n    LIMIT 10\n;\n```\n\n```\n[('Islande',), ('Chine - RAS de Hong-Kong',), ('Isra\u00ebl',), ('Lituanie',), ('Maldives',), ('Finlande',), ('Luxembourg',), ('Mont\u00e9n\u00e9gro',), ('Pays-Bas',), ('Albanie',)]\n```\n\n> Pour l'ann\u00e9e 2013, les 10 pays ayant le plus faible ratio disponibilit\u00e9 alimentaire\/habitant en termes de prot\u00e9ines (en kg) par habitant.\n\n```sql\nSELECT DISTINCT(pays) AS \"top_10_kcal\"\n    FROM dispo_alim\n    WHERE annee = 2013\n    GROUP BY pays\n    ORDER by SUM(dispo_alim_kcal_p_j) ASC\n    LIMIT 10\n```\n\n```\n[('R\u00e9publique centrafricaine',), ('Zambie',), ('Madagascar',), ('Afghanistan',), ('Ha\u00efti',), ('R\u00e9publique populaire d\u00e9mocratique de Cor\u00e9e',), ('Tchad',), ('Zimbabwe',), ('Ouganda',), ('Timor-Leste',)]\n```\n\n> La quantit\u00e9 totale (en kg) de produits perdus par pays en 2013.\n\n```sql\nSELECT pays, SUM(pertes) AS \"total_lost_food_2013\"\n    FROM equilibre_prod\n    WHERE annee = 2013\n    GROUP BY pays\n;\n```\n\n```\n[('Afghanistan', 1135.0), ('Afrique du Sud', 2193.0), ('Albanie', 276.0), ('Alg\u00e9rie', 3753.0), ('Allemagne', 3781.0), ('Angola', 4799.0), ('Antigua-et-Barbuda', 0.0), ('Arabie saoudite', 1040.0), ('Argentine', 3522.0), ('Arm\u00e9nie', 228.0), ('Australie', 520.0), ('Autriche', 459.0), ('Azerba\u00efdjan', 232.0), ('Bahamas', 2.0), ('Bangladesh', 4080.0), ('Barbade', 2.0), ('Belgique', 564.0), ('Belize', 21.0), ('Bermudes', 0.0), ('Bolivie (\u00c9tat plurinational de)', 450.0), ('Bosnie-Herz\u00e9govine', 271.0), ('Botswana', 51.0), ('Brun\u00e9i Darussalam', 4.0), ('Br\u00e9sil', 75914.0), ('Bulgarie', 1090.0), ('Burkina Faso', 643.0), ('B\u00e9larus', 571.0), ('B\u00e9nin', 1357.0), ('Cabo Verde', 14.0), ('Cambodge', 1984.0), ('Cameroun', 3981.0), ('Canada', 2118.0), ('Chili', 978.0), ('Chine - RAS de Hong-Kong', 216.0), ('Chine - RAS de Macao', 1.0), ('Chine, Taiwan Province de', 565.0), ('Chine, continentale', 89575.0), ('Chypre', 50.0), ('Colombie', 2040.0), ('Congo', 342.0), ('Costa Rica', 1058.0), ('Croatie', 143.0), ('Cuba', 591.0), (\"C\u00f4te d'Ivoire\", 1669.0), ('Danemark', 582.0), ('Djibouti', 10.0), ('Dominique', 20.0), ('El Salvador', 254.0), ('Espagne', 2581.0), ('Estonie', 18.0), ('Eswatini', 46.0), ('Fidji', 13.0), ('Finlande', 40.0), ('France', 3261.0), ('F\u00e9d\u00e9ration de Russie', 4997.0), ('Gabon', 223.0), ('Gambie', 33.0), ('Ghana', 7442.0), ('Grenade', 3.0), ('Gr\u00e8ce', 1057.0), ('Guatemala', 1534.0), ('Guin\u00e9e', 1074.0), ('Guin\u00e9e-Bissau', 66.0), ('Guyana', 186.0), ('G\u00e9orgie', 87.0), ('Ha\u00efti', 679.0), ('Honduras', 437.0), ('Hongrie', 411.0), ('Inde', 55930.0), ('Indon\u00e9sie', 13081.0), (\"Iran (R\u00e9publique islamique d')\", 5450.0), ('Iraq', 1529.0), ('Irlande', 236.0), ('Islande', 0.0), ('Isra\u00ebl', 220.0), ('Italie', 1861.0), ('Jama\u00efque', 88.0), ('Japon', 2761.0), ('Jordanie', 389.0), ('Kazakhstan', 1652.0), ('Kenya', 1444.0), ('Kirghizistan', 164.0), ('Kiribati', 0.0), ('Kowe\u00eft', 159.0), ('Lesotho', 51.0), ('Lettonie', 52.0), ('Liban', 254.0), ('Lib\u00e9ria', 111.0), ('Lituanie', 147.0), ('Luxembourg', 11.0), ('Mac\u00e9doine du Nord', 230.0), ('Madagascar', 966.0), ('Malaisie', 679.0), ('Malawi', 2428.0), ('Maldives', 0.0), ('Mali', 547.0), ('Malte', 17.0), ('Maroc', 2277.0), ('Maurice', 15.0), ('Mauritanie', 75.0), ('Mexique', 8289.0), ('Mongolie', 45.0), ('Mont\u00e9n\u00e9gro', 33.0), ('Mozambique', 1163.0), ('Myanmar', 2398.0), ('Namibie', 107.0), ('Nicaragua', 330.0), ('Niger', 1240.0), ('Nig\u00e9ria', 19854.0), ('Norv\u00e8ge', 134.0), ('Nouvelle-Cal\u00e9donie', 3.0), ('Nouvelle-Z\u00e9lande', 362.0), ('N\u00e9pal', 2110.0), ('Oman', 113.0), ('Ouganda', 991.0), ('Ouzb\u00e9kistan', 813.0), ('Pakistan', 5897.0), ('Panama', 151.0), ('Paraguay', 1823.0), ('Pays-Bas', 597.0), ('Philippines', 2901.0), ('Pologne', 2710.0), ('Polyn\u00e9sie fran\u00e7aise', 3.0), ('Portugal', 509.0), ('P\u00e9rou', 3627.0), ('Roumanie', 727.0), ('Royaume-Uni', 1144.0), ('Rwanda', 435.0), ('R\u00e9publique centrafricaine', 122.0), ('R\u00e9publique de Cor\u00e9e', 2496.0), ('R\u00e9publique de Moldova', 289.0), ('R\u00e9publique dominicaine', 540.0), ('R\u00e9publique d\u00e9mocratique populaire lao', 435.0), ('R\u00e9publique populaire d\u00e9mocratique de Cor\u00e9e', 1066.0), ('R\u00e9publique-Unie de Tanzanie', 3236.0), ('Saint-Kitts-et-Nevis', 0.0), ('Saint-Vincent-et-les Grenadines', 5.0), ('Sainte-Lucie', 12.0), ('Samoa', 12.0), ('Sao Tom\u00e9-et-Principe', 10.0), ('Serbie', 707.0), ('Sierra Leone', 2191.0), ('Slovaquie', 163.0), ('Slov\u00e9nie', 203.0), ('Soudan', 167.0), ('Sri Lanka', 492.0), ('Suisse', 153.0), ('Suriname', 44.0), ('Su\u00e8de', 301.0), ('S\u00e9n\u00e9gal', 334.0), ('Tadjikistan', 266.0), ('Tchad', 459.0), ('Tch\u00e9quie (la)', 271.0), ('Tha\u00eflande', 5749.0), ('Timor-Leste', 14.0), ('Togo', 476.0), ('Trinit\u00e9-et-Tobago', 19.0), ('Tunisie', 710.0), ('Turkm\u00e9nistan', 272.0), ('Turquie', 12036.0), ('Ukraine', 4138.0), ('Uruguay', 531.0), ('Vanuatu', 33.0), ('Venezuela (R\u00e9publique bolivarienne du)', 1190.0), ('Viet Nam', 6743.0), ('Y\u00e9men', 269.0), ('Zambie', 242.0), ('Zimbabwe', 188.0), ('\u00c9gypte', 7608.0), ('\u00c9mirats arabes unis', 705.0), ('\u00c9quateur', 707.0), (\"\u00c9tats-Unis d'Am\u00e9rique\", 7162.0), ('\u00c9thiopie', 2256.0), ('\u00celes Salomon', 6.0)]\n```\n\n> Les 10 pays pour lesquels la proportion de personnes sous-aliment\u00e9es est la plus forte.\n\n```sql\nSELECT s.pays\n    FROM sous_nutrition s\n    LEFT JOIN population p\n    USING(code_pays)\n    ORDER BY ((s.nb_personnes\/p.population) * 100) DESC\n    LIMIT 10\n```\n\n```\n[('Ha\u00efti',), ('Zambie',), ('Zimbabwe',), ('R\u00e9publique centrafricaine',), ('R\u00e9publique populaire d\u00e9mocratique de Cor\u00e9e',), ('Congo',), ('Tchad',), ('Angola',), ('Lib\u00e9ria',), ('Madagascar',)]\n```\n\n> Les 10 produits pour lesquels le ratio Autres utilisations\/Disponibilit\u00e9 int\u00e9rieure est le plus \u00e9lev\u00e9.\n\nPour rappel :\n\n$$domesticAvailability = (Food + AnimalsFood + Seeds + Loses + Treatment + Others)$$\n\n```sql\nSELECT produit AS \"top_ten_products_others_on_domestic_ratio\"\n    FROM equilibre_prod\n    GROUP BY produit\n    ORDER BY AVG(autres_utilisations\/(nourriture + alim_ani + semences + pertes + transfo + autres_utilisations)) DESC\n    LIMIT 10\n```\n\n```\n[('Alcool, non Comestible',), ('Plantes Aquatiques',), ('Huile de Palme',), ('Huil Plantes Oleif Autr',), ('Huile de Palmistes',), ('Huile de Colza&Moutarde',), ('Huiles de Poissons',), ('Huile de Coco',), ('Graisses Animales Crue',), ('Manioc',)]\n```","bbbf6bd1":"## Question 16 : La table \"dispo_alim\"\n\nCette table doit contenir les informations suivantes :\n\n* la nature du produit (\"animal\" ou \"vegetal\")\n* la disponibilit\u00e9 alimentaire (en tonnes)\n* la disponibilit\u00e9 alimentaire (en Kcal\/personne\/jour)\n* la disponibilit\u00e9 alimentaire de prot\u00e9ines (en g\/personne\/jour)\n* la disponibilit\u00e9 alimentaire de mati\u00e8res grasses (en g\/personne\/jour)\n\nEt les champs suivants :\n\n* pays\n* code_pays\n* ann\u00e9e\n* produit\n* code_produit\n* origin\n* dispo_alim_tonnes\n* dispo_alim_kcal_p_j\n* dispo_prot\n* dispo_mat_gr\n\n### Choix de la cl\u00e9 primaire\n\nOn serait tent\u00e9 d'utiliser `code_pays` en tant que cl\u00e9 primaire mais il y aura autant d'entr\u00e9es pour un m\u00eame pays que de nombre de produits consid\u00e9r\u00e9s. R\u00e9ciproquement, on serait tent\u00e9 d'utiliser `code_produit` en tant que cl\u00e9 primaire mais il y aura autant d'entr\u00e9es pour un m\u00eame produit que de nombre de pays consid\u00e9r\u00e9s.\nIl faut aussi qu'il y ai une entr\u00e9e par ann\u00e9e.\n\nNous allons donc consid\u00e9rer comme cl\u00e9 primaire qui est compos\u00e9e de 3 colonnes, c'est ce que l'on appelle une cl\u00e9 \"composite\".\n\n","98728516":"La valeur de la population totale de la Chine pour 2013 ne correspond pas aux donn\u00e9es de l'ONU, la propri\u00e9t\u00e9 (ou colonne) \"Description du Symbole\" indique qu'il s'agit ici d'un Agr\u00e9gat.\n\nNous pourrions modifier cette valeur avec celle disponible dans la base de donn\u00e9es de la Banque Mondiale, \u00e0 savoir 1 357 380,00 habitants pour 2013.\n\n\nM\u00eame en effectuant la correction, la population mondiale serait toujours beaucoup trop \u00e9lev\u00e9s par rapport aux chiffres d\u00e9crits dans la litt\u00e9rature. \nIl est temps de _v\u00e9rifier_ si par hasard nous n'aurions pas des doublons dans notre jeu de donn\u00e9es. Pour cela, nous utilisons la fonction *pandas.DataFrame.duplicated()*.","07094cce":"Il est suprenant de voir \u00e0 quel point les ratio \u00e9nerg\u00e9tiques peuvent diff\u00e9rer de la valeur attendue, mais nous notons que la valeur moyenne est proche (\u00e0 1345 kcal\/kg).","bd053345":"## Question 11 : proportion de la production des cereales est destin\u00e9e \u00e0 l'alimentation animale\n\n\u00c9tablissez la liste des produits (ainsi que leur code) consid\u00e9r\u00e9 comme des c\u00e9r\u00e9ales selon la FAO.\n\nRep\u00e9rez dans vos donn\u00e9es les informations concernant les c\u00e9r\u00e9ales (par exemple en cr\u00e9ant une colonne de type bool\u00e9en nomm\u00e9e \"is_cereal\").\n\nEn ne prenant en compte que les c\u00e9r\u00e9ales destin\u00e9es \u00e0 l'alimentation (humaine et animale), quelle proportion (en termes de poids) est destin\u00e9e \u00e0 l'alimentation animale ?","a31d7782":"### Comment v\u00e9rifier nos r\u00e9sultats ?\n\nSelon Wikipedia, la [valeur \u00e9nerg\u00e9tique d'un oeuf](https:\/\/fr.wikipedia.org\/wiki\/%C5%92uf_(aliment)) est de 1470 kcal\/kg.\n\nEst-ce que nous retrouvons cette valeur moyenne dans notre jeu de donn\u00e9es ?","f6119e26":"Apr\u00e8s v\u00e9rification sur [Wikip\u00e9dia](https:\/\/fr.wikipedia.org\/wiki\/Liste_des_pays_par_taux_de_malnutrition), nous sommes tr\u00e8s proches des valeurs document\u00e9es : entre 9,3 et 9,5%.","d92fe5fd":"### Ratio poids des prot\u00e9ines sur poids total\n\nLes prot\u00e9ines jouent un r\u00f4le essentiel pour l'organisme :\n\n* elles participent au renouvellement des tissus musculaires, des cheveux ongles et poils ;\n* elles participent au renouvellement de la matrice osseuse et de la peau ;\n* elles participent \u00e0 la constitution d'enzymes digestives, d'h\u00e9moglobine, d'hormones ...\n\nEnfin, elles constituent l'unique source d'azote de l'organisme.\n\nAu del\u00e0 de l'aspect \u00e9nerg\u00e9tique pure de la nourriture disponible par pays, l'acc\u00e8s \u00e0 une quantit\u00e9 de prot\u00e9ines suffisantes est aussi un indicateur de qualit\u00e9.","e346b94b":"## Question 1 : Combien sommes nous sur Terre ?","05e26213":"## Question 20\n\nQuels peuvent \u00eatre les usages des produits suivants :\n\n* Alcool non comestible\n* Plantes aquatiques\n* Huile de Palme\n* Huil Plantes Oleif Autr\n* Huile de Palmistes\n* Huile de Colza&Moutarde\n* Huiles de Poissons\n* Huile de Coco\n* Graisses Animales Crue\n* Manioc\n\n---------\n* Pour l'**alcool non comestible**, c'est un d\u00e9sinfectant donc il a des usages m\u00e9nagers et sanitaires.\n* Pour les **plantes aquatiques**, elles sont utilis\u00e9es en ornement ou pour \u00e9quilibrer des bassins et aquariums.\n* L'**huile de palme** sert \u00e0 fabriquer des produits de beaut\u00e9 et m\u00eame du biocarburant !\n* Les **Huiles de Plantes de la famille Oleifera** sont \u00e9galement utilis\u00e9es en cosm\u00e9tiques et soins capillaires.\n","b4df7c68":"## Question 4 : Ratios \u00e9nerg\u00e9tiques\n\nDans le monde, l'acc\u00e8s \u00e0 la nourriture en quantit\u00e9 n'est pas \u00e9galitaire comme nous l'avions vu dans de pr\u00e9c\u00e9dents travaux.\nDans cette \u00e9tude pr\u00e9liminaire, nous allons explorer \u00e0 nouveau les bilans alimentaires fournis par l'ONU sur l'ann\u00e9e 2013 pour \u00e9valuer cette fois non pas la quantit\u00e9 mais la **qualit\u00e9 de l'alimentation**.\n\nEn effet, lorsque l'un des indicateurs principaux pour \u00e9valuer la faim c'est la quantit\u00e9 d'\u00e9nergie n\u00e9cessaire pour un adulte (en kcal) qui varie entre 2400 et 2700 kcal\/jour.\n\nNous allons \u00e9valuer ici la \"qualit\u00e9 \u00e9nerg\u00e9tique\" de chaque produit consid\u00e9r\u00e9 dans notre jeu de donn\u00e9es :\n* \u00e9tablir un ratio \"\u00e9nergie\/poids\" (en kcal\/kg) pour chaque produit par pays\n* \u00e9tablir un ratio \"poids de prot\u00e9ine \/ poids total\" pour chaque produit par pays\n\nL'objectif final va \u00eatre de cr\u00e9er un _DataFrame_ (et un fichier CSV) avec la structure suivante :\n* country\n* product\n* kcal_quantity\n* kg_quantity\n* energy_weight_ratio\n* proteins_weight_ratio\n\n| Pour le ratio \"poids des prot\u00e9ines \/ poids total\", nous aurons besoin d'aggr\u00e9ger plus d'informations en provenances des fichiers sources non trait\u00e9s.","927e089b":"## Question 18 : la table \"sous_nutrition\"\n\nUne table appel\u00e9e ``sous_nutrition``, contenant le nombre de personnes en sous-alimentation pour chaque pays en 2013. \n\nElle devra contenir 4 colonnes : \n* pays\n* code_pays\n* ann\u00e9e\n* nb_personnes\n\n### Choix de la cl\u00e9 primaire\n\nIl y aura n\u00e9cessaire une entr\u00e9e par pays et par an. Nous devons donc cr\u00e9er une nouvelle cl\u00e9 composite avec le couple ('code_pays', 'ann\u00e9e').","5c78a6af":"```sql\nCREATE TABLE population (\n    code_pays TINYINT NOT NULL,\n    pays VARCHAR(128) NOT NULL,\n    annee TINYINT NOT NULL,\n    population INT NOT NULL,\n    CONSTRAINT pk_population_codes_pays_annee PRIMARY KEY (code_pays, annee)\n);\n```","f92f8e35":"Il manque environ 100 millions d'habitants sur \"notre\" plan\u00e8te de 2013, r\u00e9parties en 174 pays... mais l'ONU en reconna\u00eet officiellement [194](https:\/\/fr.wikipedia.org\/wiki\/Organisation_des_Nations_unies_pour_l%27alimentation_et_l%27agriculture). Il est possible que nous n'ayons pas pu obtenir d'informations suffisantes pour tous les pays.\n\n> La population mondiale en 2013 consid\u00e9r\u00e9e dans cette \u00e9tude sera donc la suivante : **6,997,326,000 habitants**","3e033552":"## Question 8 : Disponibilit\u00e9 alimentaire, alimentation animale et pertes en v\u00e9g\u00e9taux \n\n\nEt si nous utilisions la disponibilit\u00e9 alimentaire en v\u00e9g\u00e9taux, mais \u00e9galement la part r\u00e9serv\u00e9e \u00e0 l'alimentation animale ainsi que les pertes ?","040e6c77":"## Question 6 : Disponibilit\u00e9 int\u00e9rieure des v\u00e9g\u00e9taux dans le Monde\n\n\nCertains \u00e9cologistes disent que la seule fa\u00e7on de nourrir tout le monde et de pouvoir le faire quand la population mondiale atteindra 10 milliards d'habitants.\nLa question qu'on peut se poser aujourd'hui, c'est est-ce que cela serait d\u00e9j\u00e0 possible dans un monde id\u00e9al o\u00f9 la nourriture serait partag\u00e9e de fa\u00e7on \u00e9quitable entre tous les pays et habitant(e)s ?\n\nDans cette \u00e9tude, nous allons calculer si la disponibilit\u00e9 int\u00e9rieure des v\u00e9g\u00e9taux dans le Monde en 2013.\n\n### Un probl\u00e8me de conversion...\n\nLa disponibilit\u00e9 int\u00e9rieure du Monde en v\u00e9g\u00e9taux consiste en la disponibilit\u00e9 int\u00e9rieure de chacun des v\u00e9g\u00e9taux (en milliers de tonnes) multipli\u00e9 par le ratio \u00e9nergie\/kg calcul\u00e9 pr\u00e9c\u00e9demment.\n\nCommen\u00e7ons donc \u00e0 calculer la disponibilit\u00e9 int\u00e9rieure mondiale par produit en kilogrammes :","e4e63ac8":"## Question 2 : Bilans alimentaires\n\nParmi les documents sur les Bilans alimentaires consid\u00e9r\u00e9s, il y a des informations redondantes. En effet, pour un pays donn\u00e9, certaines de ces informations peuvent se calculer \u00e0 partir d'autres :\n\n* Production \n* Importations\n* Exportations \n* Variation de stock \n* Disponibilit\u00e9 int\u00e9rieure \n* Semences \n* Pertes \n* Nourriture, aussi appel\u00e9e Disponibilit\u00e9 alimentaire \n* Aliments pour animaux \n* Traitement\n* Autres utilisations\n\nNous allons ici tenter d'\u00e9tablir une formule \u00e0 3 termes faisant intervenir chacune de ces 11 variables.\n\nPour cela, nous allons nous baser sur un exemple et consid\u00e9rer **le bl\u00e9 en France en 2013** selon ces diff\u00e9rentes variables.","618becee":"Selon les informations de la banque mondiale, la Chine qui est le pays [le plus peupl\u00e9 du monde](https:\/\/donnees.banquemondiale.org\/pays\/chine) est compos\u00e9 de 1,3 Mds d'habitants en 2013. A quoi correspond donc la valeur maximale obtenue ?","20527549":"### Liens entre production,importations, exportations, disponibilit\u00e9 int\u00e9rieure et variations de stock\n\nIl semblerait que la disponibilit\u00e9 int\u00e9rieure se calcule de la fa\u00e7on suivante :\n\n\n$$domesticAvailability = (Production + Importation + StockVariation) - Exportation$$\n\n\nV\u00e9rifions cela avec Python :","1b643e78":"Le jeu de donn\u00e9es ne semble pas contenir de doublons ... est-ce que par hasard il y aurait autre chose que des pays dans la liste ? Regardons le d\u00e9tail des autres propri\u00e9t\u00e9s du Data Frame consid\u00e9r\u00e9. Est-ce qu'il existe par exemple des lignes pour lesquelles le code zone est nul ?","02e5899d":"## Compl\u00e9ments attendus\n\n> Combien de personnes d\u00e9c\u00e8dent des causes de la faim ?\n\nSelon le [Global Hunger Index](https:\/\/www.globalhungerindex.org\/pdf\/fr\/2015.pdf), 600 000 personnes seraient mortes de la faim au 21i\u00e8me si\u00e8cle,c'est \u00e0 dire 30 000 morts\/an.\n\n> Quelles sont les pr\u00e9visions de population mondiale en 2050 ?\n\n9,7 Milliards d'habitants selon l'[ONU](https:\/\/www.un.org\/fr\/sections\/issues-depth\/population\/index.html#:~:text=Selon%20les%20projections%2C%20la%20population,individus%20vers%20l'an%202100.).","36250d1b":"## Conclusions\n\nOn en arrive donc \u00e0 la formule finale :\n\n$$domesticAvailability = (Food + AnimalsFood + Seeds + Loses + Treatment + Others) = (Production + Importation + StockVariation) - Exportation$$\n\nOu encore, en Fran\u00e7ais :\n\n\n$$disponibilit\u00e9Int\u00e9rieure = (Nourriture + NourritureAnimaux + Semences + Pertes + Traitements + AutresUtilisations) = (Production + Importation + VariationDeStock) - Exportation$$"}}