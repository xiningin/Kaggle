{"cell_type":{"9da35ddf":"code","a6b0f57e":"code","a2d146ff":"code","06fcbd3a":"code","4b80f069":"code","a8068cb1":"code","f465c9ae":"code","eee0d01c":"code","8f3a1985":"code","47833cda":"code","d35789e1":"code","9d733106":"code","3d9fc594":"code","dcdb20f9":"code","f9b4bdbb":"code","2dfa0a44":"code","12822268":"code","70fec60d":"code","9aff2635":"code","dcbb07b1":"code","24f7c857":"code","766b2428":"code","2b27988e":"code","7034bd62":"code","7ba026cc":"code","42622041":"code","78196a3b":"code","b0f8afdf":"code","4c0c23ed":"code","c8c6fcc6":"code","5c9a7cbd":"code","a04618fa":"code","acf3364e":"code","eb2d5139":"code","3a473954":"code","963f78e4":"code","561a8f30":"code","3112d095":"code","e68ae6ec":"code","d0d3b82d":"code","9625aedd":"markdown","8b51dc38":"markdown","4f160a5c":"markdown","bea83555":"markdown","3dd51370":"markdown","8f0300b7":"markdown","2ad8878a":"markdown","c4d15566":"markdown","e06d1f6f":"markdown","70001f89":"markdown","e7d01458":"markdown","9c843b3d":"markdown","e18fd9e1":"markdown","899bf897":"markdown","239c3102":"markdown"},"source":{"9da35ddf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport category_encoders as ce","a6b0f57e":"# C\u00e0i \u0111\u1eb7t 7zip v\u00e0 gi\u1ea3i n\u00e9n t\u1ea5t c\u1ea3 c\u00e1c files\n!apt install --assume-yes p7zip-full\n!7z x ..\/input\/mercari-price-suggestion-challenge\/train.tsv.7z -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/test.tsv.7z -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/test_stg2.tsv.zip -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/sample_submission.csv.7z -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/sample_submission_stg2.csv.zip -y","a2d146ff":"#\u0111\u1ecdc d\u1eef li\u1ec7u\ntrain = pd.read_csv(\"train.tsv\",sep = '\\t')","06fcbd3a":"#k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ea3ng\ntrain.shape","4b80f069":"train.head()","a8068cb1":"train['log_price'] = np.log1p(train.price)","f465c9ae":"from scipy.stats import norm\n\n#kh\u1edfi t\u1ea1o figure v\u00e0 axes\nfig, axes = plt.subplots(1, 3, figsize=(10,4))\n\naxes[0].set_title('Price')\nsns.distplot(train.price, ax=axes[0], kde=False)\naxes[0].grid()\n\naxes[1].set_title('Price < 100')\nsns.distplot(train.price[train.price<100], ax=axes[1], kde=False)\naxes[1].grid()\n\naxes[2].set_title('log(Price + 1)')\nsns.distplot(train.log_price, ax=axes[2], fit=norm, kde=False)\naxes[2].set_xticks(range(0,9))\naxes[2].grid()\n\nfig.tight_layout()","eee0d01c":"def plot_distribution_and_violin(variable):\n    fig, axes = plt.subplots(2,1,figsize=(5,6), sharex=True)\n    axes[0].set_title(variable)\n    sns.countplot(x=variable, data=train, palette=\"ch:.25\", color=\"c\", ax=axes[0])\n    sns.violinplot(x=variable, y='log_price', palette=\"ch:.25\", data=train, ax=axes[1])\n    fig.tight_layout()","8f3a1985":"plot_distribution_and_violin('item_condition_id')","47833cda":"plot_distribution_and_violin('shipping')\nprint('shipping - 1 if shipping fee is paid by seller and 0 by buyer')","d35789e1":"avg_log_price = train.groupby('shipping')['log_price'].mean()\ndiff = np.expm1(avg_log_price[0]) - np.expm1(avg_log_price[1])\nprint(f'Ph\u00ed v\u1eadn chuy\u1ec3n do ng\u01b0\u1eddi mua thanh to\u00e1n ${diff:.3} l\u1edbn h\u01a1n ph\u00ed v\u1eadn chuy\u1ec3n do ng\u01b0\u1eddi b\u00e1n thanh to\u00e1n')","9d733106":"train[train.category_name.str.count('\/')!=2].groupby('category_name').count()#sort_values(ascending=False)","3d9fc594":"def transform_split_category_name(df):\n    category_split = df['category_name'].str.split(r'\/', n=2, expand=True)\n    for i in [0,1,2]:\n        df['cat_level_' + str(i)] = category_split[i]\n    return df","dcdb20f9":"train = transform_split_category_name(train)","f9b4bdbb":"train.head()","2dfa0a44":"gb = train.groupby('item_description')['train_id'].count()\ngb[gb>500].sort_values(ascending=False)","12822268":"def transform_missing_brand(df):\n    df['missing_brand'] = df.brand_name.isna()\n    return df","70fec60d":"train = transform_missing_brand(train)","9aff2635":"plot_distribution_and_violin('missing_brand')","dcbb07b1":"# C\u00e1c th\u01b0\u01a1ng hi\u1ec7u ph\u1ed5 bi\u1ebfn nh\u1ea5t\ntrain.groupby('brand_name')['train_id'].count().sort_values(ascending=False).head(40)","24f7c857":"class baseline_model():\n    \n    def fit(self):\n        pass\n    \n    def predict(self, X):\n        return np.zeros(shape=len(X))","766b2428":"m = baseline_model()\nm.fit()\nm.predict([[1,2,3],\n           [4,5,6]])","2b27988e":"X = train[[col for col in train.columns if col not in ['price', 'log_price']]]\ny = train['log_price']","7034bd62":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","7ba026cc":"# Select necessary columns\nX_train = X_train[['item_condition_id', 'category_name', 'brand_name', 'shipping']]\nX_test = X_test[['item_condition_id', 'category_name', 'brand_name', 'shipping']]","42622041":"te = ce.TargetEncoder()\nte.fit(X_train, y_train)\nX_train = te.transform(X_train)\nX_test = te.transform(X_test)","78196a3b":"from sklearn.linear_model import LinearRegression","b0f8afdf":"lr = LinearRegression()","4c0c23ed":"lr.fit(X_train, y_train)","c8c6fcc6":"predictions = lr.predict(X_test)","5c9a7cbd":"predictions","a04618fa":"sns.jointplot(predictions, y_test, kind=\"hex\")","acf3364e":"kaggle_test = pd.read_csv(\"test_stg2.tsv\",sep = '\\t')","eb2d5139":"kaggle_test = transform_split_category_name(kaggle_test)\nX_kaggle_test = kaggle_test\nX_kaggle_test = X_kaggle_test[['item_condition_id', 'category_name', 'brand_name', 'shipping']]\nX_kaggle_test = te.transform(X_kaggle_test)","3a473954":"X_kaggle_test.head()","963f78e4":"output = lr.predict(X_kaggle_test)","561a8f30":"submission = np.expm1(output)","3112d095":"submission_df = pd.DataFrame({'test_id': kaggle_test.test_id, 'price': submission})","e68ae6ec":"submission_df.to_csv('submission.csv', index=False)","d0d3b82d":"submission_df.shape","9625aedd":"Ideas:\n\n- Gi\u1ea3m k\u00edch th\u01b0\u1edbc c\u1ee7a c\u1ed9t th\u01b0\u01a1ng hi\u1ec7u b\u1eb1ng c\u00e1ch m\u00e3 h\u00f3a th\u01b0\u01a1ng hi\u1ec7u t\u01b0\u01a1ng t\u1ef1 th\u00e0nh c\u00f9ng m\u1ed9t gi\u00e1 tr\u1ecb (gucci, louis)> th\u01b0\u01a1ng hi\u1ec7u_1 (adidas, nike)> th\u01b0\u01a1ng hi\u1ec7u_2\n- T\u00ednh n\u0103ng (nh\u1ecb ph\u00e2n) l\u00e0 th\u01b0\u01a1ng hi\u1ec7u trong ti\u00eau \u0111\u1ec1\n- X\u00e1c \u0111\u1ecbnh m\u1ed9t s\u1ed1 n-gam thay \u0111\u1ed5i gi\u00e1 tr\u1ecb ('kh\u00f4ng kh\u00f3i', 'h\u01b0 h\u1ecfng nh\u1eb9')\n- X\u00f3a th\u1ebb t\u1eeb? C\u00f3 th\u1ec3 l\u00e0 th\u00e1ch th\u1ee9c ...\n- T\u00ecm l\u1ed7i ch\u00ednh t\u1ea3 trong brand_name (c\u00f3 th\u1ec3 kh\u00f4ng nhi\u1ec1u v\u00ec tr\u01b0\u1eddng t\u1ef1 \u0111\u1ed9ng \u0111i\u1ec1n)","8b51dc38":"## Exploring Data Attributes","4f160a5c":"## Exploring Price\n\nHypothesis: Price will follow a log-normal distribution","bea83555":"C\u00f3 82.489 m\u1ee5c c\u00f3 'Ch\u01b0a c\u00f3 m\u00f4 t\u1ea3' c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c coi l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb b\u1ecb thi\u1ebfu, nh\u01b0ng c\u00e1c c\u1ee5m t\u1eeb ng\u1eafn r\u1ea5t ph\u1ed5 bi\u1ebfn kh\u00e1c c\u0169ng th\u01b0\u1eddng b\u1ecb tr\u00f9ng l\u1eb7p.\n\n\u0110\u1ed9 d\u00e0i c\u1ee7a m\u00f4 t\u1ea3 c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t s\u1ed1 s\u1ee9c m\u1ea1nh d\u1ef1 \u0111o\u00e1n.","3dd51370":"# Baseline Models\n\n\u0110\u00e2y l\u00e0 m\u00f4 h\u00ecnh c\u01a1 s\u1edf d\u1ef1 \u0111o\u00e1n d\u1ef1a tr\u00ean gi\u00e1 trung b\u00ecnh c\u1ee7a m\u1ed9t tr\u01b0\u1eddng","8f0300b7":"C\u00e1c m\u1eb7t h\u00e0ng m\u00e0 ng\u01b0\u1eddi b\u00e1n thanh to\u00e1n ph\u00ed v\u1eadn chuy\u1ec3n (1) s\u1ebd c\u00f3 gi\u00e1 trung b\u00ecnh cao h\u01a1n so v\u1edbi n\u01a1i ng\u01b0\u1eddi mua thanh to\u00e1n ti\u1ec1n v\u1eadn chuy\u1ec3n (0)","2ad8878a":"\n# Mercari Price Suggestion Algorithm","c4d15566":"Tr\u00ean th\u1ef1c t\u1ebf v\u1eadn chuy\u1ec3n do ng\u01b0\u1eddi mua thanh to\u00e1n \u0111\u00e3 l\u1edbn h\u01a1n. C\u00f3 th\u1ec3 \u0111i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0 \"mi\u1ec5n ph\u00ed v\u1eadn chuy\u1ec3n\" \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ph\u1ed5 bi\u1ebfn h\u01a1n cho c\u00e1c m\u1eb7t h\u00e0ng r\u1ebb h\u01a1n.","e06d1f6f":"## Initial Model\n\n- H\u1ed3i quy tuy\u1ebfn t\u00ednh\n- Nh\u1eafm m\u1ee5c ti\u00eau c\u00e1c danh m\u1ee5c \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a\n- T\u00ean_m\u1ee5c ti\u00eau \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1\n- T\u00ecnh tr\u1ea1ng m\u1eb7t h\u00e0ng\n- \u0110ang chuy\u1ec3n h\u00e0ng","70001f89":"## Test Train Split","e7d01458":"#### Analyze Description\n","9c843b3d":"C\u00e1c m\u1eb7t h\u00e0ng trong t\u00ecnh tr\u1ea1ng t\u1ed1t h\u01a1n s\u1ebd c\u00f3 gi\u00e1 trung b\u00ecnh cao h\u01a1n","e18fd9e1":"#### Decompose category\n\nDanh m\u1ee5c c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e2n chia th\u00e0nh ba c\u1ea5p \u0111\u1ed9 (v\u00ed d\u1ee5: Nam \/ \u00c1o s\u01a1 mi \/ \u00c1o ph\u00f4ng). Trong d\u1eef li\u1ec7u, ch\u00fang \u0111\u01b0\u1ee3c ph\u00e2n \u0111\u1ecbnh b\u1eb1ng d\u1ea5u g\u1ea1ch ch\u00e9o v\u1ec1 ph\u00eda tr\u01b0\u1edbc. M\u1ed9t s\u1ed1 lo\u1ea1i c\u1ea5p \u0111\u1ed9 th\u1ee9 ba c\u00f3 d\u1ea5u g\u1ea1ch ch\u00e9o trong t\u00ean, nh\u01b0ng v\u1eabn \u0111\u00e1ng tin c\u1eady \u0111\u1ec3 ph\u00e2n chia \u1edf hai d\u1ea5u g\u1ea1ch ch\u00e9o \u0111\u1ea7u ti\u00ean.","899bf897":"Ta th\u1ea5y gi\u00e1 tu\u00e2n theo Log-Normal Distribution v\u1edbi m\u1ed9t s\u1ed1 t\u0103ng \u0111\u1ed9t bi\u1ebfn xung quanh c\u00e1c s\u1ed1 tr\u00f2n nh\u01b0 10, 25, 30 v\u00e0 40 \u0111\u00f4 la. ","239c3102":"## Analyze Brands"}}