{"cell_type":{"37d8d62b":"code","0b6b421b":"code","120a0450":"code","7f1bf71b":"code","b2cce525":"code","9ced8eb2":"code","88f1e69a":"code","744ce543":"code","fb7570c1":"code","171ffd59":"code","a5a01e8a":"markdown","df7081b4":"markdown","d9466b44":"markdown","84762f98":"markdown","ef74b61e":"markdown","f03b7c23":"markdown","a954e1c6":"markdown","68589b21":"markdown","db736eac":"markdown","b8fdb4da":"markdown","f49fe3ef":"markdown","97788f72":"markdown","df04d030":"markdown","0541ec31":"markdown"},"source":{"37d8d62b":"#let's create a dataframe\nimport pandas as pd\ndf = pd.DataFrame ({'country' : ['India','U.S','Australia','India','Australia','India','U.S'],\n                    'Age' : [44,34,28,27,30,42,25],\n                    'Salary' : [72000,44000,35000,27000,32000,56000,45000],\n                    'Purchased' : ['yes','no','yes','yes','no','yes','no']\n                    })","0b6b421b":"#Let's check our dataframe\nprint(df)","120a0450":"#check the datatypes\ndf.dtypes","7f1bf71b":"df['country'].unique() #check unique","b2cce525":"from sklearn.preprocessing import LabelEncoder #import the LabelEncoder from sklrean library\nle= LabelEncoder()    #create the instance of LabelEncoder\n\ndf['country_temp'] = le.fit_transform(df['country'])   #apply LabelEncoding of country column","9ced8eb2":"df['country_temp']","88f1e69a":"#we will use get_dummies to do One Hot encoding\npd.get_dummies(df['country'])","744ce543":"#Dropping the first column\npd.get_dummies(df['country'],drop_first=True)","fb7570c1":"#create 1 more column occupation here\ndf['occupation'] = ['Self-employeed','Freelancer','Family-business','Data-scientist','Data -Analyst ','Manager','Daily-wage-worker']\nprint(df['occupation'])","171ffd59":"# we will use BinaryEncoder from category_encoders library to do binary encoding\nimport category_encoders as ce\nencoder = ce.BinaryEncoder(cols = ['occupation'])\ndf_binary = encoder.fit_transform(df)\nprint(df_binary)","a5a01e8a":"**Binary Encoding**\n\nThis is not intiuative like the previous ones. Here the labels are firstly encoded ordinal and then they are converted into binary codes. Then the digits from that binary string are converted into different features.\n\n","df7081b4":"So Here we have 3 categories in country column.\n\nIndia\n\nU.S\n\nAustralia\n\nIn label encoding different categories are given different unique values starting from 0 to (n-1). n is the number of categories.","d9466b44":"\nHere we have done one hot encoding only on single feature but in real world datasets there will be many categorical features. \n\nSuppose our dataset has 50 categorical features with 3 different labels in each features. In that case if we apply one hot encoding, our features will also increase. we will have 100 features. It will make our model more complex.\n\nBased on the dataset there are different techniques that we can apply to over-come this problem of dimensionality.","84762f98":"Here we can see that country feature has been tranformed into numeric values. Label encoding is done in alphabatical order as we can see here.\n\nAustralia -----> 0\n\nIndia --------> 1\n\nU.S ---------> 2","ef74b61e":"We cannot pass in categorical features in Machine Learning models. So we need to convert them into numeric features.\n\nCategorical Variables are of 2 types Ordinal and Nominal.\n\n**Ordinal variables** has some kind order. (Good, Better, Best), (First, Second, Third)\n\n**Nominal variables** has no ordering between them. (Cat, Dog, Monkey), (Apple, Banana, Mango)\n\nBased on categorical variables whether they are ordinal or nominal we appply different techniques on them.","f03b7c23":"1. **Label Encoding**","a954e1c6":"**Feature Encoding**\n\n\nGenerally in our dataset we will have 2 types of features\n\n1.   Numerical (Integer,floats\n2.   Categorical (Nominal, ordinal)\n\n","68589b21":"Here we have 2 categorical feature\n\n*   Country.\n*   Purchased.\n\nAge and Salary have numeric values.\n\nAs I said above that we cannot pass in categorical values in our models.","db736eac":"* Here in first row ['India'] is assigned 1 and Australia and U.S are assigned 0.\n\n* Similarly in 2nd row ['U.S'] is assigned 1 and other columns are assigned 0.\n\nWe can drop the first column here, it is just increasing the features. Reason ---- Even if we just have two columns suppose india and U.S and both are assigned 0. It is understood that when both of these labels are zero The 3rd label is automatically going to be 1.","b8fdb4da":"**By the end of this we have seen 3 basic types feature encoding techniques here there are many more.\n              we will look at them with some practical uses and with some real world dataset**\n\n    \n**If you liked the kernel please upvote**\n\nLink to kernel 2: https:\/\/www.kaggle.com\/krishnaheroor\/encoding-technique2\n\n\n**Thank you**\n","f49fe3ef":"So we appply different techniques on them","97788f72":"**Problem With Label Encoding**\n\nHere we have assigned numeric values i.e (0-Australia), (1-India), (2-U.S) in the same column. Problem here is that the machine learning models won't interpret these values as different labels as 0 < 1 < 2. Our model might interpret them in some order. But we don't have any ordering in our country feature. we cannot say Australia < India < U.S .\n\nWe use One Hot encoding to overcome this problem. It is also known as nominal encoding. Here We create 3 different columns [India, Australia, U.S]. We assign 1 if that label is present in particular row otherwise we marks it as 0.","df04d030":"\nWe have seven different categories here. And we don't have any ordering in them as well.","0541ec31":"We had 7 different categories in occupation if we would have used one hot encoding it would have given us 7 features. But by using Binary Encoding we have limited it to 3. Binary Encoding is very useful whin we have many categories within a single feature. It help us to reduce the dimensionality."}}