{"cell_type":{"28f2a613":"code","bde459fa":"code","76158099":"code","9df2b540":"code","dbf7ddff":"code","a4676b96":"code","4f72e815":"markdown","774b6bc2":"markdown","e6a06779":"markdown","d98f21ad":"markdown","c3087815":"markdown","8ebc4d2f":"markdown","b1d14160":"markdown","eb383378":"markdown","449ae890":"markdown"},"source":{"28f2a613":"nums_plus_one = [ num**2 for num in range(11) ]\nprint(nums_plus_one)","bde459fa":"multiple_of_5 = [num for num in range (5,100,5)]\nprint(multiple_of_5)","76158099":"product = [\"Toy\",\"Dress\",\"Book\",\"Copy\",\"Bag\"]\nprice = [500,1000,2000,300,500]\n\nproduct_with_price = [ (product[i],price[i]) for i in range(len(product)) ]\n\nprint(product_with_price)","9df2b540":"matrix = [[col for col in range (3)] for row in range (4)]\nprint(matrix)","dbf7ddff":"odd = [num for num in range (10) if num % 2 == 1]\nprint(odd)","a4676b96":"products = [ \"Toy\",\"Dress\",\"Book\",\"Copy\",\"Bag\",\"Pen\" ,\"Pencil\",\"Bottle\",\"Shoes\" ]\nwishlist = [\"Eraser\",\"Ruler\",\"Pen\",\"Book\",\"Copy\"]\n\navalaible_list = [\"Yes\" if item in products else \"No\" for item in wishlist]\n\nprint(avalaible_list)","4f72e815":"# <font color =\"blue\"> List Comprehension with Conditionals: <\/font>\n### General Syntax :\n> <h3>   [output_expression_with_condtionals  for iterator_variable in  iterator  with_conditionals ]<\/h3>","774b6bc2":"### Examples:\n1. Finding squares ","e6a06779":"### <font color = \"Brown\">a. Conditionals on Iterable<\/font>","d98f21ad":"## <font color=\"blue\"> List comprehensions are used for creating new lists from another list or iterables.<\/font>\n### Basic syntax :\n> <h3> [output_expression for iterator_variable in iterable ] <\/h3>","c3087815":"- Example 1.","8ebc4d2f":"- Example 2.","b1d14160":"### <font color = \"Brown\">b. Conditionals on Output Expression <\/font>","eb383378":"2. Finding multiples of 5 ","449ae890":"# <font color= \"blue\">Nested loops using List Comprehension :<\/font>"}}