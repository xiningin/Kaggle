{"cell_type":{"b3b1ca8a":"code","1c27903d":"code","a646be7f":"code","b6d1d188":"code","70c33fc0":"code","66f61c1f":"code","56e1df16":"code","e1b82eac":"code","91439026":"code","d4d07e8a":"code","fe240bed":"code","3fbc1a7a":"code","e18cb5c3":"code","96e85785":"code","1b52d7c7":"code","b70673f8":"code","12ea140d":"code","11ca54c6":"code","28af0ff1":"markdown","a4749842":"markdown","188caed8":"markdown","32cf02b0":"markdown","ac5f15b7":"markdown","7b659ffb":"markdown","1ff570f6":"markdown","da5ff303":"markdown","266436aa":"markdown","4764f565":"markdown","57f4ea29":"markdown","23a444ff":"markdown","b65a036d":"markdown"},"source":{"b3b1ca8a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split, KFold, cross_val_score\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import RobustScaler\n\nfrom sklearn.metrics import  confusion_matrix, plot_roc_curve, classification_report, roc_auc_score, plot_precision_recall_curve, accuracy_score\n\nfrom sklearn.model_selection import cross_validate\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c27903d":"df = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndf.head()","a646be7f":"df.isnull().sum()","b6d1d188":"sns.countplot(x='Outcome',data=df)\nplt.show()","70c33fc0":"df.iloc[:,:8].hist(bins=15, figsize=(15, 6), layout=(2, 4));","66f61c1f":"\nsns.pairplot(df, hue=\"Outcome\")\nplt.show()","56e1df16":"sns.heatmap(df.corr(),annot=True,xticklabels=True, yticklabels=True)\nfig=plt.gcf()\nfig.set_size_inches(10,8)\nplt.show()","e1b82eac":"sns.set(style=\"whitegrid\")\n\nsns.set(rc={'figure.figsize':(4,2)})\nsns.boxplot(x=df['Insulin'])\nplt.show()\nsns.boxplot(x=df['BloodPressure'])\nplt.show()\nsns.boxplot(x=df['DiabetesPedigreeFunction'])\nplt.show()","91439026":"df = df[(df.BloodPressure != 0) & (df.BMI != 0) & (df.Glucose != 0) & (df.Insulin != 0)]\ndf.head()","d4d07e8a":"X = df.drop(columns=['Outcome'])\ny = df['Outcome']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=0)\n","fe240bed":"result = []","3fbc1a7a":"lr = LogisticRegression(max_iter = 2000)\nlr.fit(X_train,y_train)\ny_pred = lr.predict_proba(X_test)[:,1]\nscores=cross_val_score(lr,X_train,y_train,scoring='roc_auc',cv=10)\nresult.append(scores.mean())","e18cb5c3":"dt = DecisionTreeClassifier()\ndt.fit(X_train, y_train)\ny_pred = dt.predict(X_test)\nscores=cross_val_score(dt,X_train,y_train,scoring='roc_auc',cv=10)\nresult.append(scores.mean())","96e85785":"rf = RandomForestClassifier()\nrf.fit(X_train,y_train)\ny_pred = rf.predict(X_test)\nscores=cross_val_score(rf,X_train,y_train,scoring='roc_auc',cv=10)\nresult.append(scores.mean())\n","1b52d7c7":"knn = KNeighborsClassifier()\nknn.fit(X_train,y_train)\ny_pred = knn.predict(X_test)\nscores=cross_val_score(knn,X_train,y_train,scoring='roc_auc',cv=10)\nresult.append(scores.mean())\n","b70673f8":"gnb = GaussianNB()\ngnb.fit(X_train,y_train)\ny_pred = gnb.predict(X_test)\nscores=cross_val_score(gnb,X_train,y_train,scoring='roc_auc',cv=10)\nresult.append(scores.mean())\n","12ea140d":"print(result)","11ca54c6":"ax=plt.figure(figsize=(9,4))\nplt.plot(['Logistic Regression','Decision Tree','Random Forest','KNN','Naive Bayes'],result,label='ROC-AUC')\nplt.ylabel('ROC Score')\nplt.xlabel('Algortihms')\nplt.show()\n\n","28af0ff1":"# Correlations","a4749842":"**Unexpcted Outliers**\n\nWhen we examine the graphs, we see some outliers in some columns. I decided to remove the rows which the \u201cBloodPressure\u201d, \u201cBMI\u201d, \"Insulin\" and \u201cGlucose\u201d are zero.","188caed8":"**KNeighbors Classifier**","32cf02b0":"# Cross Validation","ac5f15b7":"# Data Cleaning","7b659ffb":"**Naive Bayes**","1ff570f6":"# Compare the models","da5ff303":"Random forest algorithms is the best option.","266436aa":"**Random Forest Classifier**","4764f565":"# Machine Learning Models\n","57f4ea29":"There is not any missing values.","23a444ff":"**Decision Tree Classifier**","b65a036d":"**Logistic Regression**"}}