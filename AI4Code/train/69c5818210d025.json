{"cell_type":{"ba6be572":"code","61d0c21d":"code","54933110":"code","7c90ce27":"code","c5f14228":"code","1753aba9":"code","908ae7b3":"code","bc6eb97c":"code","0975c97d":"code","7de014c5":"code","2d478d9a":"code","42f2a770":"code","7c208d70":"code","fd034720":"code","ce3dc735":"code","bbcd9a75":"code","74952e21":"code","f8c248e5":"code","336d5dc1":"code","86bd4412":"code","ae28ee50":"code","810bc22a":"code","35d4dbbc":"code","5a87b4f1":"code","144745ac":"code","5e9df0b6":"code","d0bb3f5e":"code","d220acf8":"code","56cea910":"code","d9fc72e1":"code","cddb1d34":"code","0f9e2dbb":"code","75d8e3c7":"code","9863fd0d":"code","5770c82e":"code","00c88f00":"code","6fe4455a":"code","2f828bb2":"code","5f4fe674":"code","3048f762":"code","1a4d0d38":"code","7f01ba5c":"code","e99f22ba":"code","35c42bf7":"code","dcfddfda":"code","b022f799":"code","e3c58e20":"code","9ff443c9":"code","73932a59":"code","11aaee06":"code","88f8ca73":"code","b068885e":"markdown"},"source":{"ba6be572":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","61d0c21d":"Real = pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/True.csv')\nReal.head()","54933110":"Fake = pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/Fake.csv')\nFake.head()","7c90ce27":"Real.isnull().sum()","c5f14228":"Fake.isnull().sum()","1753aba9":"#Fake = Fake.drop","908ae7b3":"Fake.info()","bc6eb97c":"Real.info()","0975c97d":"Real['isfake']=1\nFake['isfake']=0\n","7de014c5":"Fake.head()","2d478d9a":"Real.head()","42f2a770":"data =pd.concat([Real,Fake], ignore_index=True)\ndata","7c208d70":"data.drop(['date'], axis =1, inplace= True)\ndata","fd034720":"data['news'] = data['title'] +' '+data['text']\ndata.head()","ce3dc735":"data['news'][0]","bbcd9a75":"from nltk.corpus import stopwords\nimport gensim\nfrom gensim.utils import simple_preprocess\nfrom gensim.parsing.preprocessing import STOPWORDS","74952e21":"stop_words = stopwords.words('english')\nstop_words.extend(['from', 'subject', 're', 'edu', 'use'])","f8c248e5":"def preprocess(text):\n    result = []\n    for token in gensim.utils.simple_preprocess(text):\n        if token not in gensim.parsing.preprocessing.STOPWORDS and len(token) >3 and token not in stop_words:\n            result.append(token)\n    return result","336d5dc1":"data['clean'] = data['news'].apply(preprocess)","86bd4412":"data['clean'][0]","ae28ee50":"list_words = []\nfor i in data.clean:\n    for j in i:\n        list_words.append(j)\nprint (format(len(list_words)))\n","810bc22a":"total_unique_words = len(list(set(list_words)))\ntotal_unique_words","35d4dbbc":"data['clean_joined'] = data['clean'].apply(lambda x: \" \".join(x))\ndata['clean_joined'][0]","5a87b4f1":"import matplotlib.pyplot as plt\nimport seaborn as sns","144745ac":"plt.figure(figsize=(8,8))\nsns.countplot(y = 'subject', data = data)","5e9df0b6":"plt.figure(figsize=(8,8))\nsns.countplot(y = 'isfake', data = data)","d0bb3f5e":"import nltk\nfrom nltk.tokenize import word_tokenize, sent_tokenize","d220acf8":"maxlen = -1\nfor news in data.clean_joined:\n    tokens = nltk.word_tokenize(news) #converts text to tokens (words)\n    if (maxlen < len(tokens)):\n        maxlen = len(tokens)\nprint (maxlen)","56cea910":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(data['clean_joined'], data['isfake'], test_size = 0.2, random_state = 42)","d9fc72e1":"x_train[0]","cddb1d34":"import tensorflow as tf","0f9e2dbb":"tokenizer = tf.keras.preprocessing.text.Tokenizer(num_words= total_unique_words)\ntokenizer.fit_on_texts(x_train) #It creates vocabulary index (\"word_index\") based on word frequency\ntrain_sequences = tokenizer.texts_to_sequences(x_train) # Replace each word in text with corresponding integer value from \"word_index\"\ntest_sequences = tokenizer.texts_to_sequences(x_test)","75d8e3c7":"test_sequences[1]","9863fd0d":"len(train_sequences)","5770c82e":"len(test_sequences)","00c88f00":"print (\"The encoding for news\\n\", data['clean_joined'][0], \"\\n is\\n :\", train_sequences[0])","6fe4455a":"pad_train = tf.keras.preprocessing.sequence.pad_sequences(train_sequences, maxlen = 4405, padding = 'post', truncating= 'post')\npad_test = tf.keras.preprocessing.sequence.pad_sequences(test_sequences, maxlen=4405, padding = 'post', truncating= 'post')","2f828bb2":"pad_train[0]","5f4fe674":"pad_test[0]","3048f762":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, Embedding, Input, LSTM, Conv1D, MaxPool1D, Bidirectional\nfrom tensorflow.keras.models import Model","1a4d0d38":"model = tf.keras.models.Sequential([\n\ntf.keras.layers.Embedding(total_unique_words, output_dim = 128), #Embedding Layer\n\ntf.keras.layers.Bidirectional(tf.keras.layers.LSTM(128)), #Bi-directional LSTM\n\n#Dense layer\ntf.keras.layers.Dense(128, activation = 'relu'),\ntf.keras.layers.Dense(1, activation = 'sigmoid')])# binary classification (0\\1)","7f01ba5c":"model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics= ['acc'])\n","e99f22ba":"model.summary()","35c42bf7":"import tensorflow as tf","dcfddfda":"y_train = np.asarray(y_train)\nmodel.fit(pad_train, y_train, batch_size= 64, validation_split = 0.2, epochs= 2)","b022f799":"import seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS","e3c58e20":"plt.figure(figsize=(20,20))\nwc = WordCloud(max_words= 2000, width= 1600, height= 800, stopwords= stop_words).generate(\" \".join(data[data.isfake == 1].clean_joined))\nplt.imshow(wc, interpolation= 'bilinear')","9ff443c9":"pred = model.predict(pad_test) ","73932a59":"prediction = []\nfor i in range (len(pred)):\n    if pred[i].item() > 0.5:\n        prediction.append(1)\n    else:\n        prediction.append(0)","11aaee06":"from sklearn.metrics import accuracy_score\n\naccuracy = accuracy_score(list(y_test), prediction)\n\nprint (\"The model accuracy is :\", accuracy)","88f8ca73":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(list(y_test), prediction)\nplt.figure(figsize=(10,10))\nsns.heatmap(cm, annot = True)","b068885e":"from tensorflow.keras.models import Model"}}