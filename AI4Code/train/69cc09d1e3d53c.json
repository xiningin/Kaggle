{"cell_type":{"39d687b7":"code","a48da92a":"code","1cf0136d":"code","c18acb63":"code","b575060d":"code","d32e0caf":"code","82da26e0":"code","331d26f7":"code","3327acb0":"code","f36ea91c":"code","d3f56cca":"code","8d8ebdfb":"code","dea4745f":"code","27b6fa19":"code","6ee6f467":"code","d8e3ea57":"code","1be1c37e":"code","8ce5c286":"code","e3548caa":"code","99404b86":"code","cd3b0132":"code","11dc3363":"code","a016c4ae":"code","3600380a":"code","9bf727ae":"code","cb7bda84":"code","ad712761":"code","58f86331":"code","fc4418f9":"code","4361f9d6":"code","8772f97f":"code","e450365e":"code","e15d6516":"code","fbd1cdab":"code","e6f22556":"code","79154b11":"code","1822bdc2":"code","370f6520":"code","01114d0e":"code","f307bca8":"code","717fa752":"code","94907643":"code","0e578a2e":"code","aadac63d":"code","fc1ccd15":"code","49c20e44":"code","060f9488":"code","9fe2d41e":"code","94f5ce14":"code","c1bbd466":"code","e3a3539a":"code","0f92bc40":"code","144e39e8":"code","954572f6":"code","7b775aa6":"code","2df605cc":"code","382ae114":"code","1120ea38":"code","edcdd26c":"code","e87311b8":"code","032a7712":"code","bf642061":"code","b66a8262":"code","f5ad7c6e":"code","299b07e3":"code","ac9efc7b":"code","125c979b":"code","682cb97a":"code","cff7e922":"code","f08dc89a":"code","eab35fd9":"code","995983cd":"code","6e077815":"code","b47bdac4":"code","1f851d81":"code","34db4286":"code","550d6783":"code","78747872":"code","06aac67b":"code","4360eb63":"code","23bb3323":"code","91741560":"code","4116b51f":"code","6e37ce39":"code","6617b470":"code","6e2530db":"code","b8c21703":"code","4ba871b9":"code","5fd1d187":"code","f2ff60ad":"code","13b448cc":"code","b9a35d36":"code","40b2aba9":"code","962715ea":"code","278359fb":"code","c0bccfdd":"code","71126f93":"code","ed3e7ad2":"code","641cedd3":"code","d58b0de2":"code","8c182117":"code","f5c1ee5a":"code","e8d288a7":"code","901e1669":"code","305139af":"code","fc51d1b7":"code","e02c5e4e":"code","c8acba80":"markdown","69270b04":"markdown","0a66a8b9":"markdown","1bd4de96":"markdown","94f11c92":"markdown","8f7eafcb":"markdown","a51cf412":"markdown","fbe3ec4c":"markdown","23e7555a":"markdown","3988c45c":"markdown","7bc9394c":"markdown","a028281d":"markdown","70180887":"markdown","dbeb9781":"markdown","33571519":"markdown","04eab652":"markdown","9d61a09f":"markdown","588b7161":"markdown","1037596c":"markdown","87645c14":"markdown","3ef8da04":"markdown","f7e7d735":"markdown","aaa552bf":"markdown","abd4db5d":"markdown","12622cc2":"markdown","e6888adc":"markdown","25bd2a61":"markdown","325bbbf2":"markdown","38a6d7d4":"markdown","1dbd9e4b":"markdown","7eec8b57":"markdown","141d6d40":"markdown","7bc75c54":"markdown","7b6aa726":"markdown","3cc3cd81":"markdown","9ced979f":"markdown","e0916269":"markdown","bf3b911e":"markdown","04749f6b":"markdown","7432ba91":"markdown","1208104a":"markdown","ccc23630":"markdown","1eec0a0f":"markdown","e41cc3a8":"markdown","d0ce93ec":"markdown","61bcd925":"markdown","69cfc02a":"markdown","5247b8d2":"markdown","6a075ebc":"markdown","8896a76d":"markdown","c0bcbeb3":"markdown","6d42b5bf":"markdown","0ea84b88":"markdown","89e48c1a":"markdown","0b732477":"markdown","d4be376c":"markdown","379d8fd2":"markdown"},"source":{"39d687b7":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nimport datetime\nfrom plotly.subplots import make_subplots\n","a48da92a":"data = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')","1cf0136d":"data[[\"Confirmed\",\"Deaths\",\"Recovered\"]] =data[[\"Confirmed\",\"Deaths\",\"Recovered\"]].astype(int)","c18acb63":"data['Country\/Region'] = data['Country\/Region'].replace('Mainland China', 'China')","b575060d":"data['Active_case'] = data['Confirmed'] - data['Deaths'] - data['Recovered']\n","d32e0caf":"def dark_plot_confirmed(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Confirmed'],\n                    mode=\"lines+text\",\n                    name='Confirmed cases',\n                    marker_color='orange',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Confirmed'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Confirmed'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Confirmed'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"#00FE58\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Confirmed'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"#00FE58\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Confirmed cases over time in '+ country,\n        template='plotly_dark'\n\n    )\n\n    fig.show()","82da26e0":"def dark_plot_active(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Active_case'],\n                    mode=\"lines+text\",\n                    name='Active cases',\n                    marker_color='#00FE58',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Active_case'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Active_case'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Active_case'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"rgb(255,217,47)\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Active_case'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"rgb(255,217,47)\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Active cases over time in '+ country,\n        template='plotly_dark'\n\n    )\n\n    fig.show()","331d26f7":"def dark_plot_recovered(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Recovered'],\n                    mode=\"lines+text\",\n                    name='Recovered cases',\n                    marker_color='rgb(192,229,232)',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Recovered'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Recovered'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Active_case'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"rgb(103,219,165)\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Recovered'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"rgb(103,219,165)\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Recovered cases over time in '+ country,\n        template='plotly_dark'\n\n    )\n\n    fig.show()","3327acb0":"def white_plot_confirmed(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Confirmed'],\n                    mode=\"lines+text\",\n                    name='Confirmed cases',\n                    marker_color='black',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Confirmed'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Confirmed'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Confirmed'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"rgb(209,175,232)\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Confirmed'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"rgb(209,175,232)\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Confirmed cases over time in '+ country,\n        template='plotly_white'\n\n    )\n\n    fig.show()\n    \n","f36ea91c":"def white_plot_active(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Active_case'],\n                    mode=\"lines+text\",\n                    name='Active cases',\n                    marker_color='rgb(79,144,166)',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Active_case'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Active_case'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Active_case'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"rgb(92,79,111)\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Active_case'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"rgb(92,79,111)\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Active cases over time in '+ country,\n        template='plotly_white'\n\n    )\n\n    fig.show()\n    \n","d3f56cca":"def white_plot_recovered(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Recovered'],\n                    mode=\"lines+text\",\n                    name='Recovered cases',\n                    marker_color='rgb(206,102,232)',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Recovered'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Recovered'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Recovered'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"rgb(103,219,165)\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Recovered'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"rgb(103,219,165)\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Recovered cases over time in '+ country,\n        template='plotly_white'\n\n    )\n\n    fig.show()\n    \n","8d8ebdfb":"Data_tunisia = data [(data['Country\/Region'] == 'Tunisia') ].reset_index(drop=True)\n","dea4745f":"dark_plot_confirmed(Data_tunisia,\"03\/22\/2020\",\"04\/22\/2020\",\"Tunisia\")","27b6fa19":"dark_plot_active(Data_tunisia,\"03\/22\/2020\",\"04\/22\/2020\",\"Tunisia\")","6ee6f467":"dark_plot_recovered(Data_tunisia,\"03\/22\/2020\",\"04\/22\/2020\",\"Tunisia\")","d8e3ea57":"Data_Italy = data [(data['Country\/Region'] == 'Italy') ].reset_index(drop=True)\nData_italy_op= Data_Italy.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","1be1c37e":"white_plot_confirmed(Data_italy_op,\"03\/09\/2020\",\"04\/09\/2020\",\"Italy\")","8ce5c286":"white_plot_active(Data_italy_op,\"03\/09\/2020\",\"04\/09\/2020\",\"Italy\")","e3548caa":"white_plot_recovered(Data_italy_op,\"03\/09\/2020\",\"04\/09\/2020\",\"Italy\")","99404b86":"Data_France = data [(data['Country\/Region'] == 'France') ].reset_index(drop=True)\nData_France_op= Data_France.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","cd3b0132":"dark_plot_confirmed(Data_France_op,\"03\/17\/2020\",\"04\/17\/2020\",\"France\")","11dc3363":"dark_plot_active(Data_France_op,\"03\/17\/2020\",\"04\/17\/2020\",\"France\")","a016c4ae":"dark_plot_recovered(Data_France_op,\"03\/17\/2020\",\"04\/17\/2020\",\"France\")","3600380a":"Data_UK = data [(data['Country\/Region'] == 'UK') ].reset_index(drop=True)\nData_UK_op= Data_UK.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","9bf727ae":"white_plot_confirmed(Data_UK_op,\"03\/23\/2020\",\"04\/23\/2020\",\"United Kingdom\")","cb7bda84":"white_plot_active(Data_UK_op,\"03\/23\/2020\",\"04\/23\/2020\",\"United Kingdom\")","ad712761":"white_plot_recovered(Data_UK_op,\"03\/23\/2020\",\"04\/23\/2020\",\"United Kingdom\")","58f86331":"Data_India = data [(data['Country\/Region'] == 'India') ].reset_index(drop=True)\nData_India_op= Data_India.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","fc4418f9":"dark_plot_confirmed(Data_India_op,\"03\/24\/2020\",\"04\/24\/2020\",\"India\")","4361f9d6":"dark_plot_active(Data_India_op,\"03\/24\/2020\",\"04\/24\/2020\",\"India\")","8772f97f":"dark_plot_recovered(Data_India_op,\"03\/24\/2020\",\"04\/24\/2020\",\"India\")","e450365e":"Data_Germany = data [(data['Country\/Region'] == 'Germany') ].reset_index(drop=True)\nData_Germany_op= Data_Germany.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","e15d6516":"white_plot_confirmed(Data_Germany_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Germany\")","fbd1cdab":"white_plot_active(Data_Germany_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Germany\")","e6f22556":"white_plot_recovered(Data_Germany_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Germany\")","79154b11":"Data_Australia = data [(data['Country\/Region'] == 'Australia') ].reset_index(drop=True)\nData_Australia_op= Data_Australia.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","1822bdc2":"dark_plot_confirmed(Data_Australia_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Australia\")","370f6520":"dark_plot_active(Data_Australia_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Australia\")","01114d0e":"dark_plot_recovered(Data_Australia_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Australia\")","f307bca8":"Data_Calif = data [(data['Province\/State'] == 'California') ].reset_index(drop=True)\nData_Calif_op= Data_Calif.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","717fa752":"white_plot_confirmed(Data_Calif_op,\"03\/19\/2020\",\"04\/19\/2020\",\"California\")","94907643":"white_plot_active(Data_Calif_op,\"03\/19\/2020\",\"04\/19\/2020\",\"California\")","0e578a2e":"Data_NewYork = data [(data['Province\/State'] == 'New York') ].reset_index(drop=True)\nData_NewYork_op= Data_NewYork.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","aadac63d":"dark_plot_confirmed(Data_NewYork_op,\"03\/22\/2020\",\"04\/22\/2020\",\"New York\")","fc1ccd15":"dark_plot_active(Data_NewYork_op,\"03\/22\/2020\",\"04\/22\/2020\",\"New York\")","49c20e44":"Data_Michigan = data [(data['Province\/State'] == 'Michigan') ].reset_index(drop=True)\nData_Michigan_op= Data_Michigan.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","060f9488":"white_plot_confirmed(Data_Michigan_op,\"03\/24\/2020\",\"04\/24\/2020\",\"Michigan\")","9fe2d41e":"white_plot_active(Data_Michigan_op,\"03\/24\/2020\",\"04\/24\/2020\",\"Michigan\")","94f5ce14":"Data_Oregon = data [(data['Province\/State'] == 'Oregon') ].reset_index(drop=True)\nData_Oregon_op= Data_Oregon.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","c1bbd466":"dark_plot_confirmed(Data_Oregon_op,\"03\/24\/2020\",\"04\/24\/2020\",\"Oregon\")","e3a3539a":"dark_plot_active(Data_Oregon_op,\"03\/24\/2020\",\"04\/24\/2020\",\"Oregon\")","0f92bc40":"Data_Belgium = data [(data['Country\/Region'] == 'Belgium') ].reset_index(drop=True)\nData_Belgium_op= Data_Belgium.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","144e39e8":"white_plot_confirmed(Data_Belgium_op,\"03\/18\/2020\",\"04\/18\/2020\",\"Belgium\")","954572f6":"white_plot_active(Data_Belgium_op,\"03\/18\/2020\",\"04\/18\/2020\",\"Belgium\")","7b775aa6":"white_plot_recovered(Data_Belgium_op,\"03\/18\/2020\",\"04\/18\/2020\",\"Belgium\")","2df605cc":"Data_Czech = data [(data['Country\/Region'] == 'Czech Republic') ].reset_index(drop=True)\nData_Czech_op= Data_Czech.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","382ae114":"dark_plot_confirmed(Data_Czech_op,\"03\/16\/2020\",\"04\/16\/2020\",\"Czech Republic\")","1120ea38":"dark_plot_active(Data_Czech_op,\"03\/16\/2020\",\"04\/16\/2020\",\"Czech Republic\")","edcdd26c":"dark_plot_recovered(Data_Czech_op,\"03\/16\/2020\",\"04\/16\/2020\",\"Czech Republic\")","e87311b8":"Data_Portugal = data [(data['Country\/Region'] == 'Portugal') ].reset_index(drop=True)\nData_Portugal_op= Data_Portugal.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","032a7712":"white_plot_confirmed(Data_Portugal_op,\"03\/19\/2020\",\"04\/19\/2020\",\"Portugal\")","bf642061":"white_plot_active(Data_Portugal_op,\"03\/19\/2020\",\"04\/19\/2020\",\"Portugal\")","b66a8262":"white_plot_recovered(Data_Portugal_op,\"03\/19\/2020\",\"04\/19\/2020\",\"Portugal\")","f5ad7c6e":"Data_Austria = data [(data['Country\/Region'] == 'Austria') ].reset_index(drop=True)\nData_Austria_op= Data_Austria.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","299b07e3":"dark_plot_confirmed(Data_Austria_op,\"03\/16\/2020\",\"04\/16\/2020\",\"Austria\")","ac9efc7b":"dark_plot_active(Data_Austria_op,\"03\/16\/2020\",\"04\/16\/2020\",\"Austria\")","125c979b":"dark_plot_recovered(Data_Austria_op,\"03\/16\/2020\",\"04\/16\/2020\",\"Austria\")","682cb97a":"Data_Turkey = data [(data['Country\/Region'] == 'Turkey') ].reset_index(drop=True)\nData_Turkey_op= Data_Turkey.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","cff7e922":"white_plot_confirmed(Data_Turkey_op,\"04\/23\/2020\",\"05\/23\/2020\",\"Turkey\")","f08dc89a":"white_plot_active(Data_Turkey_op,\"04\/23\/2020\",\"05\/23\/2020\",\"Turkey\")","eab35fd9":"white_plot_recovered(Data_Turkey_op,\"04\/23\/2020\",\"05\/23\/2020\",\"Turkey\")","995983cd":"Data_Serbia = data [(data['Country\/Region'] == 'Serbia') ].reset_index(drop=True)\nData_Serbia_op= Data_Serbia.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)\n","6e077815":"dark_plot_confirmed(Data_Serbia_op,\"03\/15\/2020\",\"04\/15\/2020\",\"Serbia\")","b47bdac4":"dark_plot_active(Data_Serbia_op,\"03\/15\/2020\",\"04\/15\/2020\",\"Serbia\")","1f851d81":"dark_plot_recovered(Data_Serbia_op,\"03\/15\/2020\",\"04\/15\/2020\",\"Serbia\")","34db4286":"Data_Poland = data [(data['Country\/Region'] == 'Poland') ].reset_index(drop=True)","550d6783":"white_plot_confirmed(Data_Poland,\"03\/13\/2020\",\"04\/13\/2020\",\"Poland\")","78747872":"white_plot_active(Data_Poland,\"03\/13\/2020\",\"04\/13\/2020\",\"Poland\")","06aac67b":"white_plot_recovered(Data_Poland,\"03\/13\/2020\",\"04\/13\/2020\",\"Poland\")","4360eb63":"Data_Bolivia = data [(data['Country\/Region'] == 'Bolivia') ].reset_index(drop=True)","23bb3323":"dark_plot_confirmed(Data_Bolivia,\"03\/22\/2020\",\"04\/22\/2020\",\"Bolivia\")","91741560":"dark_plot_active(Data_Bolivia,\"03\/22\/2020\",\"04\/22\/2020\",\"Bolivia\")","4116b51f":"dark_plot_recovered(Data_Bolivia,\"03\/22\/2020\",\"04\/22\/2020\",\"Bolivia\")","6e37ce39":"Data_NZ = data [(data['Country\/Region'] == 'New Zealand') ].reset_index(drop=True)","6617b470":"white_plot_confirmed(Data_NZ,\"03\/26\/2020\",\"04\/26\/2020\",\"New Zealand\")","6e2530db":"white_plot_active(Data_NZ,\"03\/26\/2020\",\"04\/26\/2020\",\"New Zealand\")","b8c21703":"white_plot_recovered(Data_NZ,\"03\/26\/2020\",\"04\/26\/2020\",\"New Zealand\")","4ba871b9":"Data_Morocco = data [(data['Country\/Region'] == 'Morocco') ].reset_index(drop=True)","5fd1d187":"dark_plot_confirmed(Data_Morocco,\"03\/19\/2020\",\"04\/19\/2020\",\"Morocco\")","f2ff60ad":"dark_plot_active(Data_Morocco,\"03\/19\/2020\",\"04\/19\/2020\",\"Morocco\")","13b448cc":"dark_plot_recovered(Data_Morocco,\"03\/19\/2020\",\"04\/19\/2020\",\"Morocco\")","b9a35d36":"Data_Honduras = data [(data['Country\/Region'] == 'Honduras') ].reset_index(drop=True)\n","40b2aba9":"white_plot_confirmed(Data_Honduras,\"03\/20\/2020\",\"04\/20\/2020\",\"Honduras\")","962715ea":"white_plot_active(Data_Honduras,\"03\/20\/2020\",\"04\/20\/2020\",\"Honduras\")","278359fb":"white_plot_recovered(Data_Honduras,\"03\/20\/2020\",\"04\/20\/2020\",\"Honduras\")","c0bccfdd":"Data_UAE = data [(data['Country\/Region'] == 'United Arab Emirates') ].reset_index(drop=True)","71126f93":"dark_plot_confirmed(Data_UAE,\"03\/26\/2020\",\"04\/26\/2020\",\"United Arab Emirates\")","ed3e7ad2":"dark_plot_active(Data_UAE,\"03\/26\/2020\",\"04\/26\/2020\",\"United Arab Emirates\")","641cedd3":"dark_plot_recovered(Data_UAE,\"03\/26\/2020\",\"04\/26\/2020\",\"United Arab Emirates\")","d58b0de2":"Data_Iran = data [(data['Country\/Region'] == 'Iran') ].reset_index(drop=True)","8c182117":"white_plot_confirmed(Data_Iran,\"03\/14\/2020\",\"04\/14\/2020\",\"Iran\")","f5c1ee5a":"white_plot_active(Data_Iran,\"03\/14\/2020\",\"04\/14\/2020\",\"Iran\")","e8d288a7":"white_plot_recovered(Data_Iran,\"03\/14\/2020\",\"04\/14\/2020\",\"Iran\")","901e1669":"Data_Bangladesh = data [(data['Country\/Region'] == 'Bangladesh') ].reset_index(drop=True)","305139af":"dark_plot_confirmed(Data_Bangladesh,\"03\/26\/2020\",\"04\/26\/2020\",\"Bangladesh\")","fc51d1b7":"dark_plot_active(Data_Bangladesh,\"03\/26\/2020\",\"04\/26\/2020\",\"Bangladesh\")","e02c5e4e":"dark_plot_recovered(Data_Bangladesh,\"03\/26\/2020\",\"04\/26\/2020\",\"Bangladesh\")","c8acba80":"<a id='Austria'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Austria <\/font>\n","69270b04":"<a id='France'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In France <\/font>\n","0a66a8b9":"New Zealand\t2020-03-26","1bd4de96":"Honduras\t2020-03-20","94f11c92":"Morocco\t2020-03-19","8f7eafcb":"United Arab Emirates\t2020-03-26","a51cf412":"<a id='Honduras'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Honduras <\/font>\n","fbe3ec4c":"<a id='Australia'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Australia <\/font>\n","23e7555a":"<a id='CR'><\/a>\n\n#  <font color='red'> Before and Afrer Quarantine In Czech Republic <\/font>\n","3988c45c":"<a id='top'><\/a>\n# <font color='red'> Table of contents <\/font>\n\n1. <a href='#Tunisia'>Before and After Quarantine In Tunisia<\/a>\n1. <a href='#Italy'>Before and After Quarantine In Italy<\/a>\n1. <a href='#France'>Before and After Quarantine In France<\/a>\n1. <a href='#UK'>Before and After Quarantine In United Kingdom<\/a>\n1. <a href='#India'>Before and After Quarantine In India<\/a>\n1. <a href='#Germany'>Before and After Quarantine In Germany<\/a>\n1. <a href='#Australia'>Before and After Quarantine In Australia<\/a>\n1. <a href='#US'>Before and After Quarantine In US<\/a>\n1. <a href='#Belgium'>Before and After Quarantine In Belgium<\/a>\n1. <a href='#CR'>Before and After Quarantine In Czech Republic<\/a>\n1. <a href='#Austria'>Before and After Quarantine In Austria<\/a>\n1. <a href='#Turkey'>Before and After Quarantine In Turkey<\/a>\n1. <a href='#Serbia'>Before and After Quarantine In Serbia<\/a>\n1. <a href='#Poland'>Before and After Quarantine In Poland<\/a>\n1. <a href='#Bolivia'>Before and After Quarantine In Bolivia<\/a>\n1. <a href='#NZ'>Before and After Quarantine In New Zealand<\/a>\n1. <a href='#Morrocco'>Before and After Quarantine In Morrocco<\/a>\n1. <a href='#UAE'>Before and After Quarantine In United Arab Emirates<\/a>\n1. <a href='#Iran'>Before and After Quarantine In Iran<\/a>\n1. <a href='#Bangladesh'>Before and After Quarantine In Bangladesh<\/a>","7bc9394c":"Change Data Type for \"Confirmed\",\"Deaths\" and \"Recovered\" columns to int\n\n","a028281d":"<a id='UAE'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In United Arab Emirates <\/font>\n","70180887":"On 22 March 2020, the president of Tunisia imposed a national quarantine, in response to the growing pandemic of COVID-19 in the country. ","dbeb9781":"<a id='US'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In US <\/font>\n","33571519":"Bolivia\t2020-03-22","04eab652":"On 16 March, Emmanuel Macron (President of France) announced the beginning of a lockdown period from the 17 March at noon.","9d61a09f":"On 24 March 2020, the Government of India under Prime Minister Narendra Modi ordered a nationwide lockdown.","588b7161":"New York\t2020-03-22","1037596c":"<a id='Serbia'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Serbia <\/font>\n","87645c14":"# I hope you find this kernel useful\n\n# Your  <font color='red'> UPVOTES <\/font>  would be highly appreciated\n","3ef8da04":"<a id='Belgium'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Belgium <\/font>\nIn Belgium","f7e7d735":"Replacing \"Mainland China\" with \"China\"\n\n","aaa552bf":"<a id='Bangladesh'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Bangladesh <\/font>\n","abd4db5d":"\n<a id='Tunisia'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Tunisia <\/font>\n","12622cc2":"![image.png](attachment:image.png)","e6888adc":"Lockdown was started in Freiburg, Baden-W\u00fcrttemberg and Bavaria on 20 March 2020. Three days later, it was expanded to the whole of Germany","25bd2a61":" <a href='#top'>**Back to top**<\/a>\n","325bbbf2":"<a id='Italy'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Italy <\/font>\n","38a6d7d4":"Oregon\t2020-03-24","1dbd9e4b":"<a id='UK'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In United Kingdom <\/font>\n","7eec8b57":"<a id='Morrocco'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Morrocco <\/font>\n","141d6d40":"Bangladesh\t2020-03-26","7bc75c54":"Belgium : 03\/18\/2020","7b6aa726":"<a id='Portugal'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Portugal <\/font>","3cc3cd81":"Serbia\t2020-03-15","9ced979f":"<a id='Iran'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Iran <\/font>\n","e0916269":"At 8:30 p.m. on 23 March 2020, Prime Minister Boris Johnson announced a stay-at-home order effective immediately. ","bf3b911e":" California\t2020-03-19","04749f6b":"<a id='India'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In India <\/font>\n","7432ba91":"<a id='Bolivia'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Bolivia <\/font>\n","1208104a":"Turkey\t2020-04-23","ccc23630":"On 9 March 2020, the government of Italy under Prime Minister Giuseppe Conte imposed a national quarantine, restricting the movement of the population except for necessity, work, and health circumstances, in response to the growing pandemic of COVID-19 in the country. ","1eec0a0f":"To encourage residents to remain at their homes in order to suppress spread of the virus, most U.S. states (either state-wide, or phased in on a county-by-county basis) began to impose \"stay-at-home orders\" from mid-March onward.","e41cc3a8":"* Creating new feature \"Active_case\"\n* Active_case = Confirmed - Deaths - Recovered","d0ce93ec":"Poland\t2020-03-13","61bcd925":"<a id='Germany'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Germany <\/font>\n\n","69cfc02a":"**Sources:**\n* https:\/\/en.wikipedia.org\/wiki\/COVID-19_pandemic_lockdowns\n","5247b8d2":"Iran\t2020-03-14","6a075ebc":"Austria 2020-03-16","8896a76d":"<a id='Turkey'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Turkey <\/font>\n","c0bcbeb3":"#  <font color='red'> Covid-19 - Before and After Lockdown <\/font>","6d42b5bf":"Michigan 2020-03-24","0ea84b88":"Portugal\t2020-03-19","89e48c1a":"<a id='NZ'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In New Zealand <\/font>\n","0b732477":"Czech Republic\t2020-03-16","d4be376c":"Australia began living under strict new lockdown rules on Monday (March 23) as coronavirus cases topped 1,600.","379d8fd2":"<a id='Poland'><\/a>\n#  <font color='red'> Before and Afrer Quarantine In Poland <\/font>\n"}}