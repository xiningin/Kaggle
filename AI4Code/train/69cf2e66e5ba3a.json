{"cell_type":{"6a3bf5cb":"code","f563ac63":"code","bf7b63d7":"code","dfffeffe":"code","241c822e":"code","bbc3c4dd":"code","359f01ce":"code","9e6ee650":"code","7ae9594e":"code","4cda56f5":"code","57047bc6":"code","2cb19f56":"code","148cb9d4":"code","41ef6ada":"code","f6ddb34d":"code","ee24e240":"code","1be5b58d":"code","375719c2":"code","6b2c991c":"code","58432496":"code","9686789a":"code","d7aa4605":"code","eabff111":"code","82fbb71a":"code","e97a03b2":"code","0886cd7b":"code","cba2b606":"code","eeccd7db":"code","884cadd3":"code","52cc3246":"code","858cc55f":"code","c72970ac":"code","b9cc506a":"code","d0300511":"code","f87ca542":"markdown","9b1f02fe":"markdown","837b6c7a":"markdown","d5aaf39c":"markdown","4787a910":"markdown","11001579":"markdown","55c7488d":"markdown","51cb0f01":"markdown","61b0dcae":"markdown","8eed9f86":"markdown","984819bc":"markdown","9ebc0e5c":"markdown","7d1de39f":"markdown","e929e28a":"markdown","42f14260":"markdown","f9954a97":"markdown","485d2c94":"markdown","23f48bbc":"markdown","795d8855":"markdown","b88ed4da":"markdown","6826e275":"markdown","52a37bd0":"markdown","58007c88":"markdown","add1e6ba":"markdown","bc55a330":"markdown","45990d7b":"markdown","c5626dbf":"markdown","b228ce0d":"markdown","5166d6bc":"markdown","e46e0809":"markdown","c9dac6ce":"markdown","e29b4213":"markdown","00470267":"markdown","9e7740f3":"markdown","b16fee2b":"markdown","14c034fa":"markdown"},"source":{"6a3bf5cb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport random\nplt.style.use(\"fivethirtyeight\")\n\nimport warnings\nwarnings.filterwarnings('ignore')","f563ac63":"train = pd.read_csv(\"..\/input\/song-popularity-prediction\/train.csv\")\ntest = pd.read_csv(\"..\/input\/song-popularity-prediction\/test.csv\")\nsample_submit = pd.read_csv(\"..\/input\/song-popularity-prediction\/sample_submission.csv\")","bf7b63d7":"train.shape, test.shape","dfffeffe":"train.head(10)","241c822e":"test.head(10)","bbc3c4dd":"def missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    tt = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tt['Types'] = types\n    return(np.transpose(tt))","359f01ce":"%%time\nmissing_data(train)","9e6ee650":"%%time\nmissing_data(test)","7ae9594e":"train_null = pd.DataFrame(train.isna().sum())\ntrain_null = train_null.sort_values(by = 0 ,ascending = False)[:-6]\n\ntest_null = pd.DataFrame(test.isna().sum())\ntest_null = test_null.sort_values(by = 0 ,ascending = False)[:-5]\n\nfig, axes = plt.subplots(1,2, figsize=(18,10))\nsns.barplot(y = train_null.index,  x  = train_null[0], ax = axes[0], palette = \"viridis\")\nsns.barplot(y = test_null.index,  x  = test_null[0], ax = axes[1], palette = \"viridis\")\naxes[0].set_xlabel(\"TRAIN DATA COLUMNS\") \naxes[1].set_xlabel(\"TEST DATA COLUMNS\");","4cda56f5":"plt.figure(figsize=(18,10))\nsns.heatmap(train.isna().transpose(), xticklabels=False, cmap='viridis')\nplt.show()","57047bc6":"plt.figure(figsize=(18,10))\nsns.heatmap(test.isna().transpose(), xticklabels=False, cmap='viridis')\nplt.show()","2cb19f56":"train.describe(include='all').T","148cb9d4":"test.describe(include='all').T","41ef6ada":"sns.FacetGrid(train, hue='song_popularity', size=5).map(sns.distplot,\"danceability\").add_legend()","f6ddb34d":"useful_cols = [col for col in train.columns if col not in ['id', 'song_popularity']]\ncols_dist = [col for col in useful_cols if col not in ['key', 'audio_mode', 'time_signature']]\n\ncolor_ = ['blue', 'orange', 'green', 'pink', 'red']\ncmap_ = ['magma', 'viridis', 'crest']\n\n\nplt.figure(figsize= (16,18))\nfor i,col in enumerate(train[useful_cols].columns):\n    rand_col = color_[random.sample(range(5), 1)[0]]\n    plt.subplot(5,3, i+1)\n    if col in cols_dist:\n        \n        sns.kdeplot(train[col], color = rand_col, fill = rand_col )\n        plt.title(col,weight = 'bold', color = rand_col)\n        plt.ylabel(\" \")\n        plt.xlabel(\" \")\n        plt.tight_layout()\n    else:\n        sns.countplot(data = train , x = col, palette = cmap_[random.sample(range(3), 1)[0]] )\n        plt.title(col,weight = 'bold', color = 'black')\n        plt.ylabel(\" \")\n        plt.xlabel(\" \")\n        plt.tight_layout()\n        \nplt.subplot(5,3, 14)\nsns.kdeplot(np.log(train['instrumentalness']), color = rand_col, fill = rand_col )\nplt.title('instrumentalness (log transformed)',weight = 'bold', color = rand_col, size = 17)\nplt.ylabel(\" \")\nplt.xlabel(\" \")\nplt.tight_layout()\nplt.show();\n","ee24e240":"plt.hist(train.song_duration_ms, color='blue', edgecolor='black')\n\n#sns.distplot(train.song_duration_ms, color='blue', hist_kws={'edgecolor':'black'}, kde=False)\n# sns.histplot(data=train, x='song_duration_ms', color='blue', bins=15, hue='song_popularity')\n\nplt.title('Histogram of Song Duration')\nplt.xlabel('ms')\nplt.ylabel('Song')\nplt.show()","1be5b58d":"plt.figure(figsize=(12,6))\n\nfor i, binwidth in enumerate([5000,10000,15000,20000]):\n    \n    ax = plt.subplot(2,2,i+1)\n    ax.hist(train.song_duration_ms, color='blue', bins=int(466013\/binwidth), edgecolor='black')\n    ax.set_title('Song Popularity', size=30)\n    \n    \nplt.tight_layout()\nplt.show()","375719c2":"pd.crosstab(train.audio_mode,train.song_popularity,margins=True).style.background_gradient(cmap='summer_r')","6b2c991c":"f,ax=plt.subplots(1,2,figsize=(18,8))\ntrain.audio_mode.value_counts().plot.bar(color=['#FF0000','#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number Of Songs By Audio Mode')\nax[0].set_ylabel('Count')\nsns.countplot('audio_mode',hue='song_popularity',data=train,ax=ax[1])\nax[1].set_title('Audio Mode:Popular vs Unpopular')\nplt.show()","58432496":"pd.crosstab(train.key,train.song_popularity,margins=True).style.background_gradient(cmap='summer_r')","9686789a":"f,ax=plt.subplots(1,2,figsize=(18,8))\ntrain.key.value_counts().plot.bar(color=['#FF0000','#CD7F32','#FFDF00','#D3D3D3','#00FFFF','#0000FF','#00008B','#800080','#00FF00','#FF00FF','#FFC0CB','#008000'],ax=ax[0])\nax[0].set_title('Number Of Songs By Key')\nax[0].set_ylabel('Count')\nsns.countplot('key',hue='song_popularity',data=train,ax=ax[1])\nax[1].set_title('Key:Popular vs Unpopular')\nplt.show()","d7aa4605":"pd.crosstab([train.key,train.audio_mode],train.song_popularity,margins=True).style.background_gradient(cmap='summer_r')","eabff111":"sns.factorplot('key','song_popularity',  hue='audio_mode', data=train)\nplt.show()","82fbb71a":"pd.crosstab(train.time_signature,train.song_popularity,margins=True).style.background_gradient(cmap='summer_r')","e97a03b2":"f,ax=plt.subplots(1,2,figsize=(18,8))\ntrain.time_signature.value_counts().plot.bar(color=['#FF0000','#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number Of Songs By Time Signature')\nax[0].set_ylabel('Count')\nsns.countplot('time_signature',hue='song_popularity',data=train,ax=ax[1])\nax[1].set_title('Time Signature:Popular vs Unpopular')\nplt.show()","0886cd7b":"pd.crosstab([train.time_signature, train.audio_mode],train.song_popularity,margins=True).style.background_gradient(cmap='summer_r')","cba2b606":"sns.factorplot('time_signature','song_popularity',  hue='audio_mode', data=train)\nplt.show()","eeccd7db":"total = len(train)\nplt.figure(figsize = (12,6))\n\nax = sns.countplot(data=train , x='song_popularity', palette = 'magma')\nplt.title(\"Target: Song Popularity\", weight = 'bold', size = 20)\nplt.ylabel(\" \")\nplt.xlabel(\" \")\nsizes = []\n\nfor p in ax.patches:\n    height = p.get_height()\n    sizes.append(height)\n    ax.text(p.get_x() + p.get_width()\/2.0, height+600, '{:1.2f}%'.format(height\/total*100), ha='center')\n\nax.set_ylim(0, max(sizes)*1.25)\nplt.show()","884cadd3":"plt.figure(figsize = (8,8))\ncorr_matrix=train.corr()\n \n# matrix = np.tril(corr_matrix) # take lower correlation matrix\nmatrix = np.triu(corr_matrix)\n\n# Draw the heatmap with the mask\nhmap = sns.heatmap(corr_matrix.T, mask=matrix, square=True, cmap = 'Spectral', linewidths=0.5)\nplt.xticks(size = 15,color = 'red')\nplt.yticks(size = 15,  color = 'red');\n\n# hmap.figure.savefig(\"Correlation_Heatmap_Lower_Triangle_with_Seaborn.png\", format='png', dpi=150)","52cc3246":"plt.figure(figsize = (18,10))\n\nplt.subplot(1,2,1)\nsns.scatterplot(data = train, x = 'energy', y = 'acousticness', color = 'black')\nplt.xticks(size = 15,)\nplt.yticks(size = 15,)\n\nplt.subplot(1,2,2)\nsns.scatterplot(data = train, x = 'energy', y = 'acousticness', hue = 'song_popularity')\nplt.xticks(size = 15,)\nplt.yticks(size = 15,);","858cc55f":"plt.figure(figsize = (18,10))\n\nplt.subplot(1,2,1)\nsns.scatterplot(data = train, x = 'loudness', y = 'acousticness', color = 'black')\nplt.xticks(size = 15,)\nplt.yticks(size = 15,)\n\nplt.subplot(1,2,2)\nsns.scatterplot(data = train, x = 'loudness', y = 'acousticness', hue = 'song_popularity')\nplt.xticks(size = 15,)\nplt.yticks(size = 15,);","c72970ac":"plt.figure(figsize = (18,10))\n\nplt.subplot(1,2,1)\nsns.scatterplot(data = train, x = 'loudness', y = 'energy', color = 'black')\nplt.xticks(size = 15,)\nplt.yticks(size = 15,)\n\nplt.subplot(1,2,2)\nsns.scatterplot(data = train, x = 'loudness', y = 'energy', hue = 'song_popularity')\nplt.xticks(size = 15,)\nplt.yticks(size = 15,);","b9cc506a":"plt.figure(figsize = (20,18))\ncolor_ = [ '#9D2417', '#AF41B4', '#003389' ,'#3C5F41',  '#967032', '#2734DE'] \nfor i in enumerate(train[cols_dist].columns):\n  rand_col = color_[random.sample(range(6), 1)[0]]\n\n  plt.subplot(4,3,i[0]+1)\n  sns.kdeplot(data = train, x = i[1], hue = 'song_popularity', fill = rand_col, color = rand_col )\n  plt.title (i[1], color = 'maroon')\n  plt.xlabel(\" \")\n  plt.ylabel(\" \")\n  plt.xticks(rotation = 45)\n  plt.tight_layout()","d0300511":"train.song_popularity = train.song_popularity.astype('object')\n\nplt.figure(figsize = (20,20))\nsns.pairplot(train.drop(['id', 'key', 'audio_mode', 'time_signature'], axis=1), hue='song_popularity')\nplt.show()","f87ca542":"In test data, 8 columns have approx 10% missing value.","9b1f02fe":"## Load Data","837b6c7a":"**Observation:**\n- We don't see much difference in `song_popularity` for different `audio_mode` having different keys.\n- Songs with `audio_mode`=0 & `key`=3 and songs with `audio_mode`=1 & `key`=11 are 10% more popular than their opposite `audio_mode`.","d5aaf39c":"**Observation:**\n- By looking at the probability distribution of different variables we find that popular songs are almost exactly the same length as unpopular ones. There is a slight difference, but it\u2019s pretty small.","4787a910":"# <a id='1'>1. Introduction<\/a>  ","11001579":"We can make a few observations from here:\n- Features have different scale, some go down to -1e-3 while some go as high as 1e5.\n- All of `loudness` values are negative. `audio_mode` seems even more of a binary feature, and `time_signature` and `key` even more of categorical variables.","55c7488d":"**Observation:**\n- We don't see much difference in `song_popularity` for different `audio_mode` having different `time_signature`.\n- Songs with `audio_mode`=1 & `time_signature`=5 is 20% more popular than their opposite `audio_mode`.","51cb0f01":"## <a id='43'>4.3 Feature-Feature Interaction (Correlation)<\/a>","61b0dcae":"## <a id='42'>4.2 Target Feature<\/a>","8eed9f86":"**CONCLUSION:**\n- Out of 13 columns, 8 columns have missing values.\n- Both same columns in train and test data, have approx 10% of missing value in each.\n\nLet's see column wise null distribution of both train and test data","984819bc":"# <a id='3'>3. Data Exploration<\/a>\n\n## <a id='31'>3.1 Data Overview","9ebc0e5c":"# <a id='2'>2. Prepare for Data Analysis<\/a>  \n\n\n## Load Libraries","7d1de39f":"- In **train data**, 'song_duration_ms' has highest missing values & 'loudness' has lowest missing values.\n- In **test data**, 'energy' has highest missing values & 'accousticness' has lowest missing values.","e929e28a":"## <a id='33'>3.3 Descriptive Statistics<\/a>","42f14260":"#### Histogram for individual feature","f9954a97":"Train data has 40,000 entries and 15 columns & test data has 10,000 entries and 14 columns.  \nLet's have a glimpse of train and test dataset.","485d2c94":"## <a id='32'>3.2 Missing Values<\/a>","23f48bbc":"#### Histogram for individual feature using different bins","795d8855":"### Feature-Target Interactions","b88ed4da":"### 2. `key`","6826e275":"In both **train & test data**, we can see that missing values are distributed. So simply dropping them would result in big data loss.","52a37bd0":"### 3. `time_signature`","58007c88":"Welcome to the **\"Song Popularity Prediction\"** Community Competition by MLSpace! \ud83e\udd29\n\nIn this competition, we are supposed to predict the popularity of a song given features like acousticness, danceability, key, loudness, etc. and the evaluation metric chosen for this competition is [AUC](https:\/\/en.wikipedia.org\/wiki\/Receiver_operating_characteristic).\n\nKey terminologies used in this Dataset:\n<details><summary>\u2699\ufe0f <u>Click Me!<\/u><\/summary>\n<p>\n    \n- **Danceability:** Describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\n\n- **Valence:** Describes the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n\n- **Energy:** Represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale.\n\n- **Tempo:** The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece, and derives directly from the average beat duration.\n\n- **Loudness:** The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks.\n\n- **Speechiness:** This detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.\n\n- **Instrumentalness:** Predicts whether a track contains no vocals. \u201cOoh\u201d and \u201caah\u201d sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \u201cvocal\u201d.\n\n- **Liveness:** Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live.\n\n- **Acousticness:** A confidence measure from 0.0 to 1.0 of whether the track is acoustic.\n\n- **Key:** The estimated overall key of the track. Integers map to pitches using standard Pitch Class notation . E.g. 0 = C, 1 = C\u266f\/D\u266d, 2 = D, and so on.\n\n- **Mode:** Indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\n\n- **Duration:** The duration of the track in milliseconds.\n\n- **Time Signature:** An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure).\n    \nThanks @remekkinas for the information! Link to the [source](https:\/\/www.kaggle.com\/c\/song-popularity-prediction\/discussion\/301616).\n<\/p>\n<\/details>\n","add1e6ba":"## <a id='44'>4.4 Target-Feature Interaction<\/a>","bc55a330":"**Conclusion:**\n\n- After looking at the above visualization we are now more certain that: \n    - `audio_mode` is a boolean feature\n    - `time_signature` is probabily an ordinal variable because as we saw in <a id='1'><b>1. Introduction<\/b><\/a> `time_signature` is convention to specify how many beats are in each bar.\n    - `key` is probabilyan ordinal variable because as we saw in <a id='1'><b>1. Introduction<\/b><\/a> `key` values map to pitches which has ordering on basis of fequency.\n\n- A number of features are bounded between 0 and 1: `accosticness`, `danceability`, `energy`, `liveliness`, `speechiness`, and `audio_valence`.\n\n- The feature `loudness` looks like it refer to the decibel scale.\n\n- The distribution of `instrumentalness` is heavily right-skewed, and even after a log transform this feature doesn\u2019t look very well-behaved. This might need a bit more work.","45990d7b":"**Observation:**\n- Data is not linearly separable.\n- There are some clusters visible between `instrumentalness` and some other variables, it'll be interesting to see what can be infered from them after further investigation.","c5626dbf":"# <a id='4'>4. Data Visualization<\/a>\n## <a id='41'>4.1 Predictor Features - Individual<\/a>","b228ce0d":"**Observation:**  \nAfter looking at the plots above, we didin't see any pattern in these features that could help us in predicting the popularity of the songs.","5166d6bc":"## Special Mention\n\n- Thank you [Martin Henze](https:\/\/www.kaggle.com\/headsortails) & [Abhishek Thakur](https:\/\/www.kaggle.com\/abhishek) for the video on EDA, learned a lot from it!\n- Also thanks [Nikhil Shrestha](https:\/\/www.kaggle.com\/snikhil17) for making some visualizations look much better, your notebook helped a lot in making this possible.","e46e0809":"**Train contains:**\n\n- id (numerical)\n- song_popularity (target)\n- 13 numerical variables\n\n**Test contains:**\n\n- id (numerical);\n- 13 numerical variables\n\nLet's check if there are any missing data. We will also chech the type of data.","c9dac6ce":"**Observation:**\n- Most of the songs seems to be in `audio_mode`=0, although we don't see any variation in `song_popularity` based on audio mode.","e29b4213":"\n# <a id='0'>Content<\/a>\n\n- <a href='#1'>1. Introduction<\/a>  \n\n- <a href='#2'>2. Prepare for data analysis<\/a>  \n\n- <a href='#3'>3. Data exploration<\/a>   \n - <a href='#31'>3.1 Data Overview<\/a>   \n - <a href='#32'>3.2 Missing Values<\/a>   \n - <a href='#33'>3.3 Descriptive Statistics<\/a>   \n  \n- <a href='#4'>4. Data Visualization<\/a>\n - <a href='#41'>4.1 Predictor Features - Individual<\/a>\n - <a href='#42'>4.2 Target Features<\/a>\n - <a href='#43'>4.3 Feature-Feature Interaction (Correlation)<\/a>\n - <a href='#44'>4.4 Target-Feature Interaction<\/a>","00470267":"### Analysis of Categorical variables","9e7740f3":"### 1. `audio_mode`","b16fee2b":"**Observation:**\n- There is a slight imbalance in the target distribution, maybe we can do some undersampling to balance it. Let's come to it later.","14c034fa":"**Observation:**\n- There\u2019s a strong anti-correlation between acousticness vs energy and loudness, respectively. Consequently, energy and loudness share a strong correlation. We will plot some scatterplots to visualize it further.\n- None of the features individually show a notable correlation with the target song_popularity.\n- Let\u2019s plot energy vs acousticness to get a feel for this correlation."}}