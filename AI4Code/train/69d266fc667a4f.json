{"cell_type":{"547eeeaa":"code","572d2eed":"code","e4de7878":"code","6a5f0522":"code","9ef58cf7":"code","62d9ad79":"code","7f055a3e":"code","7ccc33f3":"code","608fc728":"code","727fb6e6":"code","4ddf230d":"code","cbc4710b":"code","3dc3823a":"code","047d27a9":"code","7498cb41":"code","dbb14ed0":"code","7ea22b15":"code","6a29c78c":"code","6f72edca":"code","8600d586":"code","13afffd8":"code","8b3ff16d":"code","4a322dd0":"code","c4a92714":"code","0e40ebce":"code","33d07172":"code","51030f76":"code","db0041e9":"code","70352404":"code","0aa6156a":"code","f89e2298":"code","2ce892a5":"code","ad5e29ea":"code","d904021a":"code","9f22f0a1":"code","ed937e4d":"code","d70caae6":"code","9f853f6a":"code","f09952c1":"code","f213a4ff":"code","02c41310":"markdown","3d61b8c4":"markdown","be9620a2":"markdown","ff238eb8":"markdown","7a3a8f8a":"markdown","04053450":"markdown","1b3ac845":"markdown","869afb28":"markdown","fa0a957b":"markdown","258201e5":"markdown","6e5d16b6":"markdown","f7f654b2":"markdown","6644754b":"markdown","f97ebe4f":"markdown","605517e3":"markdown","940bec72":"markdown","7da06624":"markdown","9bcec271":"markdown","e2cb571f":"markdown","b3ddea6b":"markdown","3f39955a":"markdown","cb4fd67c":"markdown","ffe1b92e":"markdown","ca8c954d":"markdown","8b1f51ee":"markdown","a806f0f4":"markdown"},"source":{"547eeeaa":"from IPython.display import Image\nImage(\"..\/input\/images\/data-original.png\")","572d2eed":"\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom datetime import datetime\nimport calendar\nfrom scipy import stats\nimport pandas as pd\nimport seaborn as sns\nsns.set(style=\"white\", context=\"talk\")\nfile=pd.read_csv('\/kaggle\/input\/all-bollywood-movies-2019\/2019_Movies.csv')\nfile.head(3)","e4de7878":"from IPython.display import HTML\n\nHTML('''<script>\ncode_show=true; \nfunction code_toggle() {\n if (code_show){\n $('div.input').hide();\n } else {\n $('div.input').show();\n }\n code_show = !code_show\n} \n$( document ).ready(code_toggle);\n<\/script>\n<form action=\"javascript:code_toggle()\"><input type=\"submit\" value=\"Open\/Hide code\"><\/form>''')","6a5f0522":"timestamp=file['Release date & duration'].str.split(\"|\", n=3,expand=True)\ntimestamp['date']=timestamp[0]\ntimestamp['date'] = pd.to_datetime(timestamp['date'])\ntimestamp['Duration']=timestamp[1]\ntimestamp.drop(columns =[0,1], inplace = True) \nfile.drop(columns =['Release date & duration'], inplace = True) \ntimestamp.sample(3)","9ef58cf7":"duration=timestamp['Duration'].str.split(\" \", n=4,expand=True)\nduration['hr']=duration[1].astype(int)\nduration['hr']=duration['hr']*60\nduration['min']=duration[3].astype(int)\nduration['Duration']=duration['min'].add(duration['hr']) \nduration.drop(columns =[0,1,2,3,4,'hr','min'], inplace = True) \ntimestamp.drop(columns =['Duration'], inplace = True) \nduration.sample(3)","62d9ad79":"timestamp['Month'] = timestamp['date'].dt.month \ndef mapper(month):\n    return month.strftime('%b') \ntimestamp['Monthname']= timestamp['date'].apply(mapper)\ntimestamp['Day'] = timestamp['date'].dt.day\ntimestamp['Weekday']= timestamp['date'].dt.weekday_name\ntimestamp.drop(columns =['date'], inplace = True) \ntimestamp.sample(3)","7f055a3e":"movie_type=file['Movie_type'].str.split(\"|\", n=1,expand=True)\nmovie_type['Category']=movie_type[0]\nmovie_type['Certification']=movie_type[1].replace('UA',' UA')\nmovie_type.drop(columns =[0,1], inplace = True) \nmovie_type.sample(3)","7ccc33f3":"df = pd.concat([file,duration,timestamp,movie_type], axis=1)\ndf.drop(columns =['Movie_type'], inplace = True) \ndf.head(5)","608fc728":"plt.figure(figsize=(15,6))\nax = sns.distplot(df['Duration'])","727fb6e6":"plt.figure(figsize=(16, 6))\nsns.distplot(df['Crtitic_ratings'],  kde=True, label='Crtitic ratings')\nsns.distplot(df['User_ratings'],  kde=True,label='User ratings')\nplt.legend(prop={'size': 15})\nplt.title('Histogram of Ratings of Critics and Users')\nplt.xlabel('Ratings')\nplt.ylabel('Density')\nplt.figsize=(11,7)","4ddf230d":"Image(\"..\/input\/images\/critic_comic.png\")","cbc4710b":"# monthwise movie\nplt.figure(figsize=(15,8))\np = sns.countplot(data=df, x = 'Monthname',order = df['Monthname'].value_counts().index)","3dc3823a":"plt.figure(figsize=(13,5))\np = sns.countplot(data=df, x = 'Day',order = df['Day'].value_counts().index)","047d27a9":"# releaseday\nplt.figure(figsize=(15,5))\np = sns.countplot(data=df, x = 'Weekday')","7498cb41":"from IPython.display import Image\nImage(\"..\/input\/3filehere\/3.png\")","dbb14ed0":"# certification \nx2=df['Certification'].value_counts(ascending=False)\ndf2=pd.DataFrame(x2)\ndf2.reset_index(inplace=True)\ndf2.columns = ['Certification','Count']\nlabels = df2['Certification']\nsizes = df2['Count']\n\nfig1, ax1 = plt.subplots()\ncolors = ['gold', 'yellowgreen', 'lightcoral']\nexplode = (0.1, 0, 0) \nax1.pie(sizes,explode=explode, labels=labels,colors=colors, autopct='%1.1f%%',\n        shadow=True, startangle=90)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')  \nplt.tight_layout()\nplt.show()","7ea22b15":"# relation betn cretic and user ratings\nsns.heatmap(df.corr(),annot=True, cmap='coolwarm')","6a29c78c":"# image of crtitic nd user rating","6f72edca":"df3=df['Category'].str.split(\",\", n=3,expand=True)\ndf3.head(3)","8600d586":"ls=[' Drama ', ' Romance', None, ' Crime', ' Action', 'Romantic ',\n       ' Romance ', ' Thriller ', ' Thriller', ' Action ', 'Drama',\n       ' Comedy ', ' Adult', 'Comedy', ' Drama', ' Crime ', ' Comedy',\n       'Drama ', ' History ', 'Thriller ', ' Biography ', ' Horror',\n       ' Adventure', ' Period', ' Mystery', 'Crime', 'Fantasy ',\n       ' History', ' Biography', ' Biopic ', 'Action ', ' Mystery ',\n       'Comedy ']\nd={}\nfor i in ls:\n    s=df3[df3==i].count().sum()\n    d[i]=s\nprint(d)","13afffd8":"df_type=pd.DataFrame(d.items(), columns=['Type', 'Count'])\ndf_type = df_type.apply(lambda x: x.str.strip() if x.dtype == \"object\" else x)","8b3ff16d":"df_type['Type'].unique()","4a322dd0":"df_type['Type']=df_type['Type'].replace(['Romance','Romantic'],'Romantic')\ndf_type['Type']=df_type['Type'].replace(['History','Period'],'History')\ndf_type['Type']=df_type['Type'].replace(['Biography ','Biopic'], 'Biography')","c4a92714":"df_type['Type']=df_type['Type'].dropna()\ndf_type_pie=df_type.groupby(['Type']).agg('sum').reset_index()","0e40ebce":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import PercentFormatter\ndf_type_pie = df_type_pie.sort_values(by='Count',ascending=False)\ndf_type_pie[\"cumpercentage\"] = df_type_pie[\"Count\"].cumsum()\/df_type_pie[\"Count\"].sum()*100\nfig, ax = plt.subplots()\nfig.set_size_inches(20,7)\nax.bar(df_type_pie['Type'], df_type_pie[\"Count\"], color=\"C0\")\nax2 = ax.twinx()\nax2.plot(df_type_pie['Type'], df_type_pie[\"cumpercentage\"], color=\"C1\", marker=\"*\", ms=15)\nax2.yaxis.set_major_formatter(PercentFormatter())\nax.tick_params(axis=\"y\", colors=\"C0\")\nax2.tick_params(axis=\"y\", colors=\"C2\")\nax.axes.set_title(\"Movie Type Cumulative\", fontsize=20, y=1.05);\nplt.show()","33d07172":"df4=df['Language'].str.split(\",\", n=4,expand=True)\ndf4 = df4.apply(lambda x: x.str.strip() if x.dtype == \"object\" else x)","51030f76":"ls2=[ 'Kannada',None, 'Tamil', 'Telugu', 'Malayalam', 'English','Hindi','nan', 'Urdu', 'Marathi']\nd={}\nfor i in ls2:\n    s=df4[df4==i].count().sum()\n    d[i]=s\n\ndf_lang=pd.DataFrame(d.items(), columns=['Language', 'Count'])\ndf_lang","db0041e9":"df_lang.drop([1,7,6], inplace=True)","70352404":"sns.set(style=\"darkgrid\")\nplt.figure(figsize=(15,5))\n#sns.set_context(\"talk\")\nax = sns.barplot(x=df_lang['Count'], y=df_lang['Language'], data=df_lang, orient='h', saturation=0.7)\nax.axes.set_title(\"Out of 230 Hindi Movies in other Indian languages released\", fontsize=20, y=1.05);","0aa6156a":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import PercentFormatter\ndf_lang = df_lang.sort_values(by='Count',ascending=False)\ndf_lang[\"cumpercentage\"] = df_lang[\"Count\"].cumsum()\/df_lang[\"Count\"].sum()*100\nfig, ax = plt.subplots()\nax.bar(df_lang['Language'], df_lang[\"Count\"], color=\"C0\")\nax2 = ax.twinx()\nax2.plot(df_lang['Language'], df_lang[\"cumpercentage\"], color=\"C1\", marker=\"*\", ms=10)\nax2.yaxis.set_major_formatter(PercentFormatter())\nax.tick_params(axis=\"y\", colors=\"C0\")\nax2.tick_params(axis=\"y\", colors=\"C2\")\nfig.set_size_inches(15.5, 5.5)\nplt.show()","f89e2298":"df['Actors'] = df['Actors'].astype(str)\ndf.head()","2ce892a5":"print('Movie of Maximum ratings by Critics')\ndf[df['Crtitic_ratings']==df['Crtitic_ratings'].max()]","ad5e29ea":"print('Movie of Minimum ratings by Critics')\ndf[df['Crtitic_ratings']==df['Crtitic_ratings'].min()]","d904021a":"print('Movie of Maximum ratings by User')\ndf[df['User_ratings']==df['User_ratings'].max()]","9f22f0a1":"print('Movie of Minimum ratings by User')\ndf[df['User_ratings']==df['User_ratings'].min()]","ed937e4d":"print('Logest Runtime Movie')\ndf[df['Duration']==df['Duration'].max()]","d70caae6":"print('Shortst Runtime Movie')\ndf[df['Duration']==df['Duration'].min()]","9f853f6a":"from wordcloud import WordCloud, STOPWORDS\nimport matplotlib.pyplot as plt\ntext = df.Actors.values\ntext = \" \".join(df.Actors.values)\nwordcloud = WordCloud(\n    width = 3500,\n    height = 1500,\n    background_color = 'black',\n    stopwords = STOPWORDS).generate(str(text))\nfig = plt.figure(\n    figsize = (40, 30),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","f09952c1":"df['Actors'] = df['Actors'].str.replace(\" \",\"\")\ntext = df.Actors.values\ntext = \" \".join(df.Actors.values)\nwordcloud = WordCloud(\n    width = 3500,\n    height = 1500,\n    background_color = 'black',\n    stopwords = STOPWORDS).generate(str(text))\nfig = plt.figure(\n    figsize = (30, 20),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","f213a4ff":"df['Actors'] = df['Actors'].str.replace(\" \",\"\")\ntext = df.Actors.values\ntext = \" \".join(df.Actors.values)\nwordcloud = WordCloud(\n    width = 3500,\n    height = 1500,\n    background_color = 'black',max_words=3,\n    stopwords = STOPWORDS).generate(str(text))\nfig = plt.figure(\n    figsize = (30, 20),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","02c41310":"https:\/\/topyaps.com\/why-all-bollywood-movies-release-on-fridays\/","3d61b8c4":"### \u2022\tThis dataset contain More Variety of Data for Visualization\n### \u2022\tTo learn work of Separating of Data from columns and Time format functions\n### \u2022\tScope for Univariate Analysis of Different features of the Data.\n","be9620a2":"## 12. Actors of the Year","ff238eb8":"## 3. Monthwise no.of Movies released","7a3a8f8a":"#### Converting Release date into specific format","04053450":"## Maximum Movies Released on Friday...","1b3ac845":"### Bollywood Industry(Hindi Cinema) is popular in Top 5 Industry in the World.known for many years for Indian and emotional touch and Variety of Movies.","869afb28":"## 13. Actors who played more roles in 2019...","fa0a957b":"## 7. Association between Movie Ratings of Critic and User ","258201e5":"#### Making Diffrent Columns for Movie type & Certification.","6e5d16b6":"## Now Dataframe is ready for Visualization...","f7f654b2":"## What can we do with All Bollywood Movies 2019 Dataset?","6644754b":"#### Converting Duration of Runtime into separate Columns.","f97ebe4f":"## 5. WeekDay wise Released Movie","605517e3":"## Ohhh!!!March is the month of most film were released!!!","940bec72":"## 11. Sharma,Khan,Singh are Surnames Leading Industry now!!!","7da06624":"## 9. Movie released in other Indian Languages","9bcec271":"## 8. Movie Type Cumulative","e2cb571f":"## 10. Who is Maximum and Minimum?","b3ddea6b":"## 6. Certification of Movies","3f39955a":"### 4. Movies released with Days of all months ","cb4fd67c":"## Wow!!! Movie runtime Exactly Normally Distributed!!!","ffe1b92e":"## 2. Distribution of User Ratings vs Critic Ratings","ca8c954d":"#### Spliting Release Date and Duration","8b1f51ee":"# 2019 all Bollywood Movie EDA\n","a806f0f4":"## 1. Movie Runtime Duration Distribution"}}