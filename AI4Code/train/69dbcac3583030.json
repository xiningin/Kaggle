{"cell_type":{"49ab6dd1":"code","a29385ed":"code","fff02127":"code","da7316fc":"code","b8c41979":"code","f6c8d6f7":"code","e5929161":"code","89d69f62":"code","e8018cc6":"code","c39df07f":"code","2b2ed977":"code","37387675":"code","2b5502cd":"code","56690e3c":"code","43d49fef":"code","ba4c3dfa":"code","c2f4ec1f":"code","6fbe4f61":"code","2a459fc5":"code","5172515c":"code","daa75074":"markdown","775bed09":"markdown","47b47353":"markdown","1449133d":"markdown","c825c815":"markdown","aa2d0140":"markdown"},"source":{"49ab6dd1":"import pandas as pd\n\ndf=pd.read_csv('\/kaggle\/input\/social-network-ads\/Social_Network_Ads.csv')\ndf.head()","a29385ed":"#data description\nprint(df.shape)\nprint(df.describe())\nprint(df.info())","fff02127":"#checking the types of gender\nprint(df.Gender.value_counts())\nprint(\"******************\")\n#checking duplicates\nprint(df.duplicated().sum())\nprint(\"******************\")\n#checking the number of null values\nprint(df.isna().sum())\nprint(\"******************\")","da7316fc":"#Checking the distribution of the salary\nimport seaborn as sns\n\nsns.histplot(df.EstimatedSalary)","b8c41979":"sns.barplot(x=df.Gender,y=df.EstimatedSalary)\n","f6c8d6f7":"\npd.crosstab(df.Gender,df.Purchased)\n","e5929161":"#creating dummies\ndf1=pd.get_dummies(data=df,columns=['Gender'],drop_first=True)","89d69f62":"#Defining the x and y \n# we will be dropping the USER ID colum as it does not impact the Y\nx=df1.drop(columns=['User ID','Purchased'])\ny=df1.Purchased","e8018cc6":"#Splitting the dat into train and test\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=10,test_size=.3)","c39df07f":"#Standerizing the data and creating a KNN model \n# Pipeline is used to process multiple steps together in this case both standerization and KNN estimator object creation is done at the same time.\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import Pipeline\nmodel_steps=[('sipStanderise',StandardScaler()),('shipModel',KNeighborsClassifier(n_neighbors=4,metric='minkowski',p=2))]#we will start with random value of k ,i.e n_neighbors","2b2ed977":"#Fitting the model\npipelineModel=Pipeline(steps=model_steps)\npipelineModel.fit(x_train,y_train)","37387675":"#Model score for train data\npipelineModel.score(x_train,y_train)","2b5502cd":"#Model score on test data\npipelineModel.score(x_test,y_test)","56690e3c":"#Evaluating the model prediction\npredic_test_y=pipelineModel.predict(x_test)\npd.crosstab(y_test,predic_test_y)","43d49fef":"#Model Evaluation 2\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test,predic_test_y))","ba4c3dfa":"#create 2 list for storing all the model score for diffrent K values\ntrainAccuracy=[]\ntestAccuracy=[]","c2f4ec1f":"#create model for K values from 1 to 40\nfor k in range(1,40):\n    model=KNeighborsClassifier(n_neighbors=k)\n    model.fit(x_train,y_train)\n    trainAccuracy.append(model.score(x_train,y_train))\n    testAccuracy.append(model.score(x_test,y_test))","6fbe4f61":"from matplotlib import pyplot as plt,style\nstyle.use('ggplot')","2a459fc5":"#create a plot using the information from the above loop\nplt.figure(figsize=(12,6))\nplt.plot(range(1,40),trainAccuracy,label=\"Train Score\",marker=\"o\",markerfacecolor=\"teal\",color=\"blue\",linestyle=\"dashed\")\nplt.plot(range(1,40),testAccuracy,label=\"Test Score\",marker=\"o\",markerfacecolor=\"red\",color=\"black\",linestyle=\"dashed\")\nplt.legend()\nplt.xlabel(\"Number of Neighbors\")\nplt.ylabel(\"Score\")\nplt.title(\"Nbd Vs Score\")\nplt.show()","5172515c":"#creating a model using K =8\nmodel_steps_20=[('sipStanderise',StandardScaler()),('shipModel',KNeighborsClassifier(n_neighbors=8,metric='minkowski',p=2))]\npipelineModel=Pipeline(steps=model_steps_20)\npipelineModel.fit(x_train,y_train)\nprint(\"score is:\"+ str(pipelineModel.score(x_train,y_train)))\nprint(\"********************************\")\npipelineModel.score(x_test,y_test)\npredic_test_y=pipelineModel.predict(x_train)\nprint(pd.crosstab(y_train,predic_test_y))","daa75074":"### Exploratory Data Analysis","775bed09":"We can see the optimal value of K is 8.","47b47353":"The whole idea behind KNN model is ,how many clusters your data should be divided into.The optimal value of K is used to determine those clusters.\nThe elbow method is the most commonly used method to decide the K value.","1449133d":"Analysis:\nThe entire analysis on the sample data states  that, women are earning little more than men here and their purchase count is higher too.\nThe salary is almost normally  distributed .","c825c815":"We can see that there is a little improvment in prediction after using the optimal valus of K.","aa2d0140":"### Checking the best K value for our classification Model"}}