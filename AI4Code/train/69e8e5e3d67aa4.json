{"cell_type":{"b7f08376":"code","5c8e771c":"code","48c79d68":"code","9ea002b3":"code","16735816":"code","c4409ce2":"code","1234ecbf":"code","52ae1c9e":"code","4741b40a":"markdown","408aa3d6":"markdown","dff0b11e":"markdown"},"source":{"b7f08376":"import numpy as np \nimport pandas as pd \nimport os","5c8e771c":"train = pd.read_csv('..\/input\/chaii-hindi-and-tamil-question-answering\/train.csv')\ntest = pd.read_csv('..\/input\/chaii-hindi-and-tamil-question-answering\/test.csv')\n\ntrain.head()","48c79d68":"train.language.value_counts()","9ea002b3":"def jaccard(row): \n    str1 = row[0]\n    str2 = row[1]\n    a = set(str1.lower().split()) \n    b = set(str2.lower().split())\n    c = a.intersection(b)\n    return float(len(c)) \/ (len(a) + len(b) - len(c))","16735816":"from transformers import AutoModelForQuestionAnswering, AutoTokenizer, pipeline\n\nmodel_name = \"deepset\/xlm-roberta-large-squad2\"\n\nnlp = pipeline('question-answering', model=model_name, tokenizer=model_name)\n\nQA_input = {\n    'question': train['question'][1],\n    'context': train['context'][1]\n}\nres = nlp(QA_input)\n\n# b) Load model & tokenizer\nmodel = AutoModelForQuestionAnswering.from_pretrained(model_name)\ntokenizer = AutoTokenizer.from_pretrained(model_name)","c4409ce2":"answer = []\nfor i in range(len(test)):\n    QA_input = {\n    'question': test['question'][i],\n    'context': test['context'][i]\n    }\n    answer.append(nlp(QA_input)['answer'])\n\n","1234ecbf":"# sub = pd.read_csv('..\/input\/chaii-hindi-and-tamil-question-answering\/sample_submission.csv')\ntest['PredictionString'] = answer\ndel test['context']\ndel test['question']\ndel test['language']\n\ntest.to_csv('submission.csv', index=False)","52ae1c9e":"test","4741b40a":"**Metric**\n\nWe're evaluated based on Jaccard score, which is an intersection over union metric. It's measures how many words from the context we picked correctly.","408aa3d6":"**What train data do we have available?**\n\n\nLooks like the training set is very small: 746 Hindi and 368 Tamil examples.","dff0b11e":"# **ChAII - Exploratory Data Analysis**"}}