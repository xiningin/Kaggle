{"cell_type":{"78f4e1f3":"code","9670810c":"code","27cd0997":"code","c88fe7f3":"code","7c7798b9":"code","2485ac0d":"code","25607806":"code","0c2676f1":"code","a944c055":"code","2227b344":"code","acbcd2f9":"code","b4604b65":"code","2fddaaf7":"code","63a4be78":"code","c4406096":"code","7d93b692":"code","2eda5ff5":"code","23673d2e":"code","ebb2ff06":"code","376ad726":"code","c88b6ace":"code","f8b1b876":"code","f33c306a":"code","ff20c83b":"code","a08435c2":"code","a5a01a30":"code","b9f82e98":"code","e321e081":"code","4aaabd79":"code","122db6c9":"code","663de75b":"code","da753f06":"code","df6c1517":"code","0a8194d7":"code","0e9d09f4":"code","20714533":"code","b5f502a1":"markdown","2db12096":"markdown","bf67c387":"markdown","317c9a0b":"markdown","cb823771":"markdown","b1051004":"markdown","5b5c3ee1":"markdown","3097198d":"markdown","4ad903c1":"markdown","3876e86b":"markdown","ada39123":"markdown","d83ef988":"markdown","4656f1c4":"markdown"},"source":{"78f4e1f3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom matplotlib.pyplot import plot\nimport seaborn as sn\n%matplotlib inline \n\nimport geopandas as gpd\n\nimport folium\nfrom folium import Choropleth\nfrom folium.plugins import HeatMap\n\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.geospatial.ex3 import *\n\nfrom sklearn.linear_model import LinearRegression\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9670810c":"def embed_map(m, file_name):\n    from IPython.display import IFrame\n    m.save(file_name)\n    return IFrame(file_name, width='100%', height='500px')","27cd0997":"#Data import\n\ncolombia_df = pd.read_csv('..\/input\/colombia-covid19-complete-dataset\/covid-19-colombia-all.csv')\nconfirmed = pd.read_csv('..\/input\/colombia-covid19-complete-dataset\/covid-19-colombia-confirmed.csv')\ndeaths = pd.read_csv('..\/input\/colombia-covid19-complete-dataset\/covid-19-colombia-deaths.csv',encoding='ISO-8859-1')\ncol_df = pd.read_csv('..\/input\/colombia-covid19-complete-dataset\/covid-19-colombia.csv')\ncases = pd.read_csv('..\/input\/colombia-covid19-complete-dataset\/Casos1.csv')","c88fe7f3":"cases.columns = [\"ID\", \"date\", \"city\", \"departamento\", \"state\", \"age\", \"sex\", \"type\", \"procedence\"]\ncols_ = cases.select_dtypes(include=[np.object]).columns\ncases[cols_] = cases[cols_].apply(lambda x: x.str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8'))\n\ncases.date = pd.to_datetime(cases.date, dayfirst=True)\n\ncases","7c7798b9":"cases.groupby(['departamento']).count()","2485ac0d":"#Dataframe overview\ncol_df.head()","25607806":"#Number of actual active cases calculation\ncol_df['active'] = col_df.confirmed - col_df.deaths - col_df.recovered","0c2676f1":"def plot_line(df):\n    fig.add_shape(\n       # Line Horizontal\n          type=\"line\",\n            x0='2020-03-25',\n            y0=0,\n            x1='2020-03-25',\n            y1=df.max(),\n            line=dict(\n                color=\"LightSeaGreen\",\n                width=4,\n                \n            ))\n    fig.update_layout(\n        showlegend=False,\n        annotations=[\n            dict(\n                x='2020-03-25',\n                y=df.max(),\n                xref=\"x\",\n                yref=\"y\",\n                text=\"Quarantine Start\",\n                )\n        ]\n    )\n    fig.show()","a944c055":"#Plotting\nfig = px.line(col_df, x=\"date\", y=\"confirmed\", \n              title=\"Colombia Confirmed Cases\")\nplot_line(col_df.confirmed)\n\n\nfig = px.line(col_df, x=\"date\", y=\"deaths\", \n              title=\"Colombia Confirmed Deaths\")\nplot_line(col_df.deaths)\n\nfig = px.line(col_df, x=\"date\", y=\"recovered\", \n              title=\"Colombia Confirmed Recoveries\")\nplot_line(col_df.recovered)","2227b344":"fig = px.line(col_df, x=\"date\", y=\"active\", \n              title=\"Colombia Active Cases\")\nplot_line(col_df.active)","acbcd2f9":"cols = confirmed.keys()\ncols_d = deaths.keys()\n\nconfirmed1 = confirmed.loc[:, cols[1]:cols[-1]]\ndeaths1 = deaths.loc[:, cols_d[1]:cols_d[-1]]","b4604b65":"#Number of days since the outbreak (March 6th)\ndays = np.array([i for i in range(len(col_df.index))]).reshape(-1, 1)\n\ndates = confirmed1.keys()\nstate_cases = []\ntotal_deaths = [] \n\n#Total number of cases\nfor i in dates:\n    confirmed_sum = confirmed1[i].sum()\n    #death_sum = deaths1[i].sum()\n    \n    state_cases.append(confirmed_sum)\n    #total_deaths.append(death_sum)\n\nprint('Total number of confirmed cases: ',confirmed_sum)","2fddaaf7":"state_cases = np.array(state_cases).reshape(-1, 1)\n#total_deaths = np.array(total_deaths).reshape(1, -1)\n\ndeptos = np.array(confirmed.state)\ntotal = np.array(confirmed.loc[:,cols[-1]])\n#total_d = np.array(deaths.loc[:,cols[-1]])","63a4be78":"#Loading shapefile for the choropleth\ndeptos_geo = gpd.read_file('..\/input\/colombia-shape-files-by-departments\/depto.shp')\ndeptos_geo['NOMBRE_DPT'] = deptos_geo['NOMBRE_DPT'].str.capitalize()\ndeptos_geo.loc[2,'NOMBRE_DPT'] = 'Bogota'\ndeptos_geo.loc[32,'NOMBRE_DPT'] = 'San andres y providencia'\ndeptos_geo.loc[16,'NOMBRE_DPT'] = 'Narino'\ndeptos_geo = deptos_geo.sort_values(by=['NOMBRE_DPT'])\ndeptos_geo = deptos_geo[['NOMBRE_DPT','geometry']]\ndeptos_geo.set_index('NOMBRE_DPT', inplace=True)","c4406096":"#List of confirmed cases per state\ndf = pd.DataFrame({'NOMBRE_DPT':deptos,'confirmed':total})\ndf['NOMBRE_DPT'] = df['NOMBRE_DPT'].str.capitalize()\ndf = df.sort_values(by=['NOMBRE_DPT'])\ndf.set_index('NOMBRE_DPT', inplace=True)","7d93b692":"df_merge = deptos_geo.merge(df,on='NOMBRE_DPT') \ndf_merge","2eda5ff5":"m_1 = folium.Map(location=[4,-73], tiles='cartodbpositron', zoom_start=5)\n\nfolium.Choropleth(geo_data=df_merge['geometry'],\n           data=df_merge, columns=[df_merge.index, 'confirmed'],\n           key_on=\"feature.id\",\n           fill_color='YlOrRd',\n           legend_name='Number of confirmed cases'\n           ).add_to(m_1)\n\nembed_map(m_1, 'q_1.html')","23673d2e":"#Plotting\ndf = pd.DataFrame({'state':deptos,'confirmed':total})\nfig = px.bar(df.sort_values('confirmed', ascending=False)[:10][::-1], \n             x='confirmed', y='state', color_discrete_sequence=['#84DCC6'],\n             title='Confirmed Cases by State', text='confirmed', orientation='h')\nfig.show()","ebb2ff06":"total_deaths = []\ntotal_deaths = cases.loc[cases['state'] == 'Fallecido']\ntotal_deaths = total_deaths.groupby(['departamento']).count()\ntotal_deaths = total_deaths.rename(columns={\"ID\": \"n\"}).drop(columns=['date','city','state','age', 'sex','type','procedence'])\n\ntotal_deaths","376ad726":"df = pd.DataFrame({'state':total_deaths.index,'confirmed':total_deaths.n})\nfig = px.bar(df.sort_values('confirmed', ascending=False)[:10][::-1], \n             x='confirmed', y='state', color_discrete_sequence=['#84DCC6'],\n             title='Confirmed Deaths by State', text='confirmed', orientation='h')\nfig.show()","c88b6ace":"#Mortality and recovery rate calculation\ncol_df['death_rate'] = (col_df.deaths\/col_df.confirmed) * 100\ncol_df['recover_rate'] = (col_df.recovered\/col_df.confirmed) * 100\ncol_df['inf_rate'] = (col_df.confirmed\/48258494) * 100\n\ncol_df","f8b1b876":"#Temp dataframe for plotting multiple traces\ndf = pd.DataFrame([col_df.date,col_df.death_rate,col_df.recover_rate])\ndf_melt = col_df.melt(id_vars='date', value_vars=['death_rate', 'recover_rate'])","f33c306a":"fig = px.line(df_melt, x=\"date\", y=\"value\", \n              title=\"Colombia Mortality and Recover Rate (%)\",color='variable')\n\nprint('Death Rate: ',col_df.death_rate.max() , '%')\nprint('Recover Rate: ',col_df.recover_rate.max() , '%')\nplot_line(df_melt.value)","ff20c83b":"fig = px.line(col_df, x=\"date\", y=\"inf_rate\", \n              title=\"Colombia Infection Rate (%) (Population: 48'258.494)\")\n\nprint('Infecion Rate: ',col_df.inf_rate.max() , '%')\nplot_line(col_df.inf_rate)","a08435c2":"df = pd.DataFrame({'Date':col_df.date,'Confirmed':col_df.confirmed_daily})\nfig = px.bar(df, y='Confirmed', x='Date', color_discrete_sequence=['#84DCC6'],\n             title='Confirmed Daily Cases', text='Confirmed', orientation='v')\nfig.show()\n\ndf = pd.DataFrame({'Date':col_df.date,'Deaths':col_df.deaths_daily})\nfig = px.bar(df, y='Deaths', x='Date', color_discrete_sequence=['#84DCC6'],\n             title='Confirmed Daily Deaths', text='Deaths', orientation='v')\nfig.show()\n\ndf = pd.DataFrame({'Date':col_df.date,'Recovered':col_df.recovered_daily})\nfig = px.bar(df, y='Recovered', x='Date', color_discrete_sequence=['#84DCC6'],\n             title='Confirmed Daily Recoveries', text='Recovered', orientation='v')\nfig.show()","a5a01a30":"df_melt = col_df.melt(id_vars='date', value_vars=['recovered_daily','deaths_daily', 'confirmed_daily'])\nfig = px.bar(df_melt, y='value', x='date', color='variable',\n             title='Confirmed Daily Cases', text='value', orientation='v',barmode='group')\nfig.show()","b9f82e98":"male = cases.loc[cases['sex'] == 'M'].count()[0]\nfemale = cases.loc[cases['sex'] == 'F'].count()[0]\n\nsex_grouped = pd.DataFrame({'M': [male], 'F': [female]}).T\nsex_grouped.columns = ['n']\nsex_grouped","e321e081":"fig = px.pie(sex_grouped, values='n', names= sex_grouped.index,\n             title='Cases by Sex')\nfig.show()","4aaabd79":"age_grouped = cases.groupby(['age']).count()\nage_grouped['ID']","122db6c9":"age_grouped","663de75b":"#fig = px.pie(age_grouped, values='ID', names= age_grouped.index,\n#             title='Cases by Age Groups')\nfig = px.bar(age_grouped, y='ID', x=age_grouped.index,\n             title='Confirmed Daily Cases', text=age_grouped.index, orientation='v',barmode='group')\nfig.show()","da753f06":"state = cases.groupby(['state']).count()\nstate = state.rename(columns={\"ID\": \"n\"}).drop(columns=['date','city','departamento','age', 'sex','type','procedence'])\n\nstate","df6c1517":"fig = px.bar(state, y='n', x= state.index,\n             title='Cases Actual State')\nfig.show()","0a8194d7":"uci = cases.loc[cases['state'] == 'Hospital UCI'].groupby(['date','state']).count().reset_index()","0e9d09f4":"dates = uci.date\ntotal_uci = [uci.iloc[0,2]]\n\n#total_uci.append(uci.iloc[0,2])\nfor i in range(len(dates)-1):\n    uci_sum = total_uci[i] + uci.iloc[i+1,2]\n    total_uci.append(uci_sum)\n    \n   \n\ndf = pd.DataFrame({'date':dates,'total':total_uci})","20714533":"fig = px.line(df, x=\"date\", y=\"total\", \n              title=\"Actual Active Cases in ICU\")\n#fig.add_shape(\n#       # Line Horizontal\n#          type=\"line\",\n#            x0='2020-03-16',\n#            y0=5359,\n#            x1='2020-03-27',\n#            y1=5359,\n#            line=dict(\n#                color=\"LightSeaGreen\",\n#                width=4,\n#                dash=\"dashdot\",\n#            ))\n\nplot_line(df.total)","b5f502a1":"A graph showing number of patients over time in ICU (Intensive Care Unit). According to Registro Especial de Prestadores de Salud, as of march 2020, 5359 ICU bed units are available in the country. Also, according to Asociaci\u00f3n de Medicina Cr\u00edtica y Cuidado Intensivo (AMCI), 80% of this bed units are already ocuppied so it is urgent for the government to start looking for alternetives to increase the number of ICU units to treat future patients in critical conditions.","2db12096":"## 4. Confirmed Daily Cases","bf67c387":"Now, a graph showing the number of deaths per state is generated.\n\nThe first death corresponds to a 58 year old taxi driver who passed away on march 16th in Cartagena after having contact with several international passengers by picking them up from the airport, but was officialy related to COVID-19 and reported until march 22nd.","317c9a0b":"## COLOMBIA COMPLETE COVID-19 DATASET\n\n**Author: Camilo Esteban Ruiz**\n\nEmail: ruiznho123@gmail.com\n\n[LinkedIn Profile](http:\/\/linkedin.com\/in\/camesruiz)","cb823771":"## Introduction\n\nVersion 3.0 (March 28th): Includes number of cases in ICU, added quarantine start marker on graphs to try to visualize effect on number of cases after the national quaratine was ordered by the government on March 24th.\n\nCoronavirus (COVID-19) made its outbreak in Colombia with the first confirmed in the contry on march 06, since then, number of confirmed cases has been increasing and deaths related to the virus are starting to have the first confirmed cases.\n\nThis notebook emphazises on giving some insights on the virus spread in Colombia.\n\nFeel free to click on the \"Code\" button above each output to go deeper into the code for the graphs.","b1051004":"## 3. Mortality and Recovery Rate\n\nMoratlity rate per total of confirmed cases. Initially, the World Health Organization made an estimate of 2% of deaths over the total number of cases globally.\n\nA graph showing death rate over time in Colombia is generated","5b5c3ee1":"Infection rate over time assuming a population of 48'258.494 (result of the 2018 census)","3097198d":"## 6. Actual Patents State\n\nActual state per confirmed case\n\n- En casa (Recovering at home)\n- En estudio (still a study case)\n- Hospital\n- Hospital UCI (patients in ICU)\n- Fallecido (deaths)","4ad903c1":"## 2. Number of Cases by State (Departamento)\n\nActual number of cases in each region. As of march 23, Bogota has most of the number of cases. Beign the capital, most of the international passengers traffic pass through it via El Dorado airport.","3876e86b":"Total of active cases\n\n*Confirmed cases - Deaths - Recoveries*","ada39123":"## 5. Cases by Sex and Age Group\n\nNumber of total confirmed cases by sex and age groups","d83ef988":"Graph above shows that cases by sex are equally distributed, being males most ofthe infected cases.\n\nNext plot shows that most of the infected cases are people in the 20-29 group, and the lowest number are in the 0-9 and 80-89 that are parte of the most vulnerable population.","4656f1c4":"## 1. Cases Evolution Over Time\n\nGraphs for confirmed cases, deaths and recoveries over time are generated since the first case was confirmed (march 06). It is clear that it tends to have a exponential behavior.\n\nFirst case corresponds to a 19 year old woman who arrived to the country the week before from Milan, Italy."}}