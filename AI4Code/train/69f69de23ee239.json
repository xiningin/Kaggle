{"cell_type":{"05edc6ef":"code","5960ae71":"code","2388cf40":"code","3ca80692":"code","299cea5d":"code","3ca51d14":"markdown"},"source":{"05edc6ef":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport copy\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5960ae71":"# place the files in order based on lb score, high - > low\nfile11 = pd.read_csv(\"..\/input\/newnew\/sub_lb_0.09075169522314322_0.7.csv\") # L\u00e1zaro\nfile12 = pd.read_csv(\"..\/input\/newnew\/sub_lb_0.09080355083449096_0.7.csv\")\nfile2 = pd.read_csv(\"..\/input\/newnew\/sub_lb_0.08744196634592771_0.7.csv\")\n\nfile3 = pd.read_csv(\"..\/input\/newnew\/lightautoml 1.08577.csv\")     #lightautoml\n\nfile41 = pd.read_csv(\"..\/input\/newnew\/1.08598 lightautoml_and_catboost.csv\") # catboost\nfile42 = pd.read_csv(\"..\/input\/newnew\/mljar 1.08619.csv\")     # mljar\nfile43 = pd.read_csv(\"..\/input\/newnew\/hayahiko 1.08633.csv\")   # lgbm\nfile5 = pd.read_csv(\"..\/input\/newnew\/XGB 1.08675.csv\") # XGB\n\n\n# file = pd.read_csv(\"..\/input\/newnew\/dae 1.08983.csv\")\n# file = pd.read_csv(\"..\/input\/newnew\/logistic R 1.10152.csv\")","2388cf40":"# the max number of files is 5\n# input format: pd.DataFrame\n\ndef blend(a, b, c = 0, d = 0, e = 0):\n    if (not isinstance(c, pd.DataFrame)) and (not isinstance(d, pd.DataFrame)) and (not isinstance(e, pd.DataFrame)):\n        output = a.copy()\n        output[\"Class_1\"] = a.Class_1 * 0.6 + b.Class_1 * 0.4\n        output[\"Class_2\"] = a.Class_2 * 0.6  + b.Class_2 * 0.4 \n        output[\"Class_3\"] = a.Class_3 * 0.6  + b.Class_3 * 0.4 \n        output[\"Class_4\"] = a.Class_4 * 0.6  + b.Class_4 * 0.4 \n        return output \n    elif (not isinstance(d, pd.DataFrame)) and (not isinstance(e, pd.DataFrame)):\n        output = a.copy() # 0.5 + 0.3 + 0.2 \n        output[\"Class_1\"] = a.Class_1 * 0.5 + b.Class_1 * 0.3 + c.Class_1 * 0.2\n        output[\"Class_2\"] = a.Class_2 * 0.5 + b.Class_2 * 0.3 + c.Class_2 * 0.2\n        output[\"Class_3\"] = a.Class_3 * 0.5 + b.Class_3 * 0.3 + c.Class_3 * 0.2\n        output[\"Class_4\"] = a.Class_4 * 0.5 + b.Class_4 * 0.3 + c.Class_4 * 0.2\n        return output  \n    elif (not isinstance(e, pd.DataFrame)):\n        output = a.copy()  # 0.45 + 0.25 + 0.2 + 0.1\n        output[\"Class_1\"] = a.Class_1 * 0.45 + b.Class_1 * 0.25 \\\n                             + c.Class_1 * 0.2 + d.Class_1 * 0.1\n        output[\"Class_2\"] = a.Class_2 * 0.45 + b.Class_2 * 0.25 \\\n                             + c.Class_2 * 0.2 + d.Class_2 * 0.1\n        output[\"Class_3\"] = a.Class_3 * 0.45 + b.Class_3 * 0.25 \\\n                             + c.Class_3 * 0.2 + d.Class_3 * 0.1\n        output[\"Class_4\"] = a.Class_4 * 0.45 + b.Class_4 * 0.25 \\\n                             + c.Class_4 * 0.2 + d.Class_4 * 0.1\n        return output \n    else: # 0.35 + 0.3 + 0.2 + 0.1 + 0.05\n        output = a.copy()\n        output[\"Class_1\"] = a.Class_1 * 0.35 + b.Class_1 * 0.3 + c.Class_1 * 0.2 \\\n                             + d.Class_1 * 0.1 + e.Class_1 * 0.05 \n        output[\"Class_2\"] = a.Class_2 * 0.35 + b.Class_2 * 0.3 + c.Class_2 * 0.2 \\\n                             + d.Class_2 * 0.1  + e.Class_2 * 0.05 \n        output[\"Class_3\"] = a.Class_3 * 0.35 + b.Class_3 * 0.3 + c.Class_3 * 0.2 \\\n                             + d.Class_3 * 0.1  + e.Class_3 * 0.05 \n        output[\"Class_4\"] = a.Class_4 * 0.35 + b.Class_4 * 0.3 + c.Class_4 * 0.2 \\\n                             + d.Class_4 * 0.1  + e.Class_4 * 0.05 \n        return output  ","3ca80692":"# all the combinations\n# the max number of combinations is 26\n\ndef generate(a, b, c = 0, d = 0, e = 0):\n    if (not isinstance(c, pd.DataFrame)) and (not isinstance(d, pd.DataFrame)) and (not isinstance(e, pd.DataFrame)):\n        ab = blend(a, b)\n        ab.to_csv('ab.csv',index=False)\n    elif (not isinstance(d, pd.DataFrame)) and (not isinstance(e, pd.DataFrame)):\n        ab = blend(a, b)\n        ab.to_csv('ab.csv',index=False)\n        ac = blend(a, c)\n        ac.to_csv('ac.csv',index=False)\n        bc = blend(b, c)\n        bc.to_csv('bc.csv',index=False)  \n        abc = blend(a, b, c)\n        abc.to_csv('abc.csv',index=False)\n    elif (not isinstance(e, pd.DataFrame)):\n        ab = blend(a, b)\n        ab.to_csv('ab.csv',index=False)\n        ac = blend(a, c)\n        ac.to_csv('ac.csv',index=False)\n        ad = blend(a, d)\n        ad.to_csv('ad.csv',index=False)\n        bc = blend(b, c)\n        bc.to_csv('bc.csv',index=False)\n        bd = blend(b, d)\n        bd.to_csv('bd.csv',index=False)\n        cd = blend(c, d)\n        cd.to_csv('cd.csv',index=False)   \n        abc = blend(a, b, c)\n        abc.to_csv('abc.csv',index=False)\n        abd = blend(a, b, d)\n        abd.to_csv('abd.csv',index=False)\n        acd = blend(a, c, d)\n        acd.to_csv('acd.csv',index=False)\n        bcd = blend(b, c, d)\n        bcd.to_csv('bcd.csv',index=False)\n        bde = blend(b, d, e) \n        abcd = blend(a, b, c, d)\n        abcd.to_csv('abcd.csv',index=False)\n    else:\n        ab = blend(a, b)\n        ab.to_csv('ab.csv',index=False)\n        ac = blend(a, c)\n        ac.to_csv('ac.csv',index=False)\n        ad = blend(a, d)\n        ad.to_csv('ad.csv',index=False)\n        ae = blend(a, e)\n        ae.to_csv('ae.csv',index=False)\n        bc = blend(b, c)\n        bc.to_csv('bc.csv',index=False)\n        bd = blend(b, d)\n        bd.to_csv('bd.csv',index=False)\n        be = blend(b, e)\n        be.to_csv('be.csv',index=False)\n        cd = blend(c, d)\n        cd.to_csv('cd.csv',index=False)\n        ce = blend(c, e)\n        ce.to_csv('ce.csv',index=False)\n        de = blend(d, e)\n        de.to_csv('de.csv',index=False)     \n        abc = blend(a, b, c)\n        abc.to_csv('abc.csv',index=False)\n        abd = blend(a, b, d)\n        abd.to_csv('abd.csv',index=False)\n        abe = blend(a, b, e)\n        abe.to_csv('abe.csv',index=False)\n        acd = blend(a, c, d)\n        acd.to_csv('acd.csv',index=False)\n        ace = blend(a, c, e)\n        ace.to_csv('ace.csv',index=False)\n        ade = blend(a, d, e)\n        ade.to_csv('ade.csv',index=False)\n        bcd = blend(b, c, d)\n        bcd.to_csv('bcd.csv',index=False)\n        bce = blend(b, c, e)\n        bce.to_csv('bce.csv',index=False)\n        bde = blend(b, d, e)\n        bde.to_csv('bde.csv',index=False)\n        cde = blend(c, d, e)\n        cde.to_csv('cde.csv',index=False)  \n        abcd = blend(a, b, c, d)\n        abcd.to_csv('abcd.csv',index=False)\n        abce = blend(a, b, c, e)\n        abce.to_csv('abce.csv',index=False)\n        abde = blend(a, b, d, e)\n        abde.to_csv('abde.csv',index=False)\n        acde = blend(a, c, d, e)\n        acde.to_csv('acde.csv',index=False)\n        bcde = blend(b, c, d, e)\n        bcde.to_csv('bcde.csv',index=False)\n        abcde = blend(a, b, c, d, e)\n        abcde.to_csv('abcde.csv',index=False)","299cea5d":"file1 = blend(file11, file12)\nfile4 = blend(file41, file42, file43)\ngenerate(file1, file2, file3, file4, file5)","3ca51d14":"files are from\nhttps:\/\/www.kaggle.com\/mt77pp\/mljar-automl-tps-may-21 by Piotr\nhttps:\/\/www.kaggle.com\/sureshmecad\/tps-may21-ecommerce-lightautoml by A SURESH\nhttps:\/\/www.kaggle.com\/udbhavpangotra\/tps-may-21-extensive-eda-and-plots-catboost by Udbhav Pangotra\nhttps:\/\/www.kaggle.com\/hayahiko\/tps-may-easy-way-lgbm-optuna-step-by-step by hayahiko\nhttps:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-baseline-tps-may-2021 by Alexander Ryzhkov\nhttps:\/\/www.kaggle.com\/jeongyoonlee\/kaggler-dae-autolgb-baseline?select=lgb_dae_v2.sub.csv by Jeong-Yoon Lee\nhttps:\/\/www.kaggle.com\/andreshg\/tps-may-a-complete-analysis by AndresHG\nhttps:\/\/www.kaggle.com\/cybrk5\/tps-may2021-eda-and-lightautoml-80-catboost-20 by Berk Ulusoy\nhttps:\/\/www.kaggle.com\/bhavikjain\/tps-may-eda-catboost-lgbm-xgboost-lightautoml by Bhavik\nhttps:\/\/www.kaggle.com\/lazaro97\/tps-may-stacking-blending-pseudolabelling by L\u00e1zaro and teammate antoreepjana"}}