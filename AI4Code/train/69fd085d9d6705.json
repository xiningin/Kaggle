{"cell_type":{"4074ae7b":"code","622e8966":"code","798cb670":"code","4665ca9b":"code","d500d318":"code","c11856b1":"code","32d9f907":"code","a22c6c4b":"code","e15d49a8":"markdown","c0477401":"markdown","50f449fc":"markdown","fb03e6af":"markdown"},"source":{"4074ae7b":"import pandas as pd\nfrom sklearn.naive_bayes import ComplementNB, MultinomialNB, GaussianNB, CategoricalNB\nfrom sklearn.metrics import f1_score, precision_score, recall_score\nfrom sklearn.model_selection import cross_validate","622e8966":"# import data from ETL pipeline...\nx_train = pd.read_csv('..\/input\/drug-classification-etl\/Fact_imb_train_features.csv', index_col = 0, squeeze = True)\ny_train = pd.read_csv('..\/input\/drug-classification-etl\/Fact_imb_train_labels.csv', index_col = 0, squeeze = True)\n\nx_test = pd.read_csv('..\/input\/drug-classification-etl\/Fact_imb_test_features.csv', index_col = 0, squeeze = True)\ny_test = pd.read_csv('..\/input\/drug-classification-etl\/Fact_imb_test_labels.csv', index_col = 0, squeeze = True)","798cb670":"def train_baseline_model(train, labels, model):\n    mdl = model()\n    mdl.fit(train, labels)\n    \n    return mdl\n\n# Get a baseline for modeling.\n\n# ComplementNB\ncmp_bl_mdl = train_baseline_model(x_train, y_train, ComplementNB)\nprint(f'ComplementNB = {cmp_bl_mdl.score(x_test,y_test)}') # 68%\n\n# MultinomialNB\nmul_bl_md2 = train_baseline_model(x_train, y_train, MultinomialNB)\nprint(f'MultinomialNB = {mul_bl_md2.score(x_test,y_test)}') # 65%\n\n","4665ca9b":"# read in the balanced Facts.\n\nx_train_resampled = pd.read_csv('..\/input\/drug-classification-etl\/Fact_resampled_train_features.csv', index_col = 0, squeeze = True)\ny_train_resampled = pd.read_csv('..\/input\/drug-classification-etl\/Fact_resampled_train_labels.csv', index_col = 0, squeeze = True)","d500d318":"re_comp_md = train_baseline_model(x_train_resampled, y_train_resampled, ComplementNB)\nprint(f'ComplementNB = {re_comp_md.score(x_test,y_test)}')\n\nre_mul_md = train_baseline_model(x_train_resampled, y_train_resampled, MultinomialNB)\nprint(f'MultinomialNB = {re_mul_md.score(x_test,y_test)}')\n\nGau_md = train_baseline_model(x_train_resampled, y_train_resampled, GaussianNB)\nprint(f'GaussianNB = {Gau_md.score(x_test,y_test)}')","c11856b1":"def cross_val(model, x_train, y_train, folds=10):\n    scoring = {'acc': 'accuracy',\n           'prec_micro': 'precision_micro',\n           'rec_micro': 'recall_micro'}\n    scores = cross_validate(model, x_train, y_train, scoring=scoring,\n                         cv=folds, return_train_score=True)\n    return scores","32d9f907":"gas_cv_res = cross_val(Gau_md, x_test, y_test, 4)\n\ndisplay(gas_cv_res['test_acc'].mean())\ndisplay(gas_cv_res['test_prec_micro'].mean())\ndisplay(gas_cv_res['test_rec_micro'].mean())","a22c6c4b":"gau_preds = Gau_md.predict(x_test)\n\ndisplay(f1_score(y_test, gau_preds, average='micro'))\n\ndisplay(precision_score(y_test, gau_preds, average='micro'))\n\ndisplay(recall_score(y_test, gau_preds, average='micro'))","e15d49a8":"## Conclusions:\n\nNaive Bayes is not the best model for this data. Out of all of the Naieve Bayes models, Gaussian Naive Bayes performs the best with a F1 of 89%. It is important to remember that the imbalance in the data set must be accounted for... I believe that this work will serve as a decent baseline for the rest of the modeling. ","c0477401":"## Resampling\n\n*** This work was moved to the ETL ***\n\nThe classes are very imbalanced. This will lead to overfitting on the majority class if we tried to model this data as is. To combat this, we employ a technique to resample the classes. We will try NearMiss in order to avoid the consiquences of significant data loss.\n\n*** Balanced Facts are found in the ETL output. ***","50f449fc":"# Predicting Drug\/Paitent fit with Naive Bayes.","fb03e6af":"The accuracy of the Complement NB model dropped slightly, while the Multinomial model rose.GaussianNB is highest at 89%. Still the accuracy is not great for any of the Naive Bayes models. Lets run K-Fold crossvalidation to ensure the model is not overfitting."}}