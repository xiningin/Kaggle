{"cell_type":{"7ff9f0d9":"code","05033860":"code","aeaf8175":"code","538fb670":"code","8a933e4e":"code","c4a0be07":"code","c59fcfc7":"code","870778ac":"code","ab7dadf4":"code","219e47af":"code","f069c718":"code","dc5f75bd":"markdown","c32ef90a":"markdown","bf3ac4cc":"markdown","af95bb37":"markdown","24625f1d":"markdown","afd97770":"markdown","c22d927b":"markdown","3d68e644":"markdown","9f4f9d2f":"markdown"},"source":{"7ff9f0d9":"# import package with helper functions \nimport bq_helper\n\n# create a helper object for this dataset\nopen_aq = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",\n                                   dataset_name=\"openaq\")\n\n# print all the tables in this dataset\nopen_aq.list_tables()","05033860":"# print the first 5 rows of the \"global_air_quality\" dataset\nopen_aq.head(\"global_air_quality\")","aeaf8175":"# query to count number of different countries\nquery1 = \"\"\"SELECT COUNT(DISTINCT(country))\n            FROM `bigquery-public-data.openaq.global_air_quality`\n        \"\"\"","538fb670":"# only run this query if it's less than 100 MB\nquery1_result = open_aq.query_to_pandas_safe(query1, max_gb_scanned=0.1)","8a933e4e":"#check the query result which is now a dataframe\nquery1_result","c4a0be07":"# query to count number of different countries\nquery2 = \"\"\"SELECT COUNT(DISTINCT(country)) AS number_of_countries\n            FROM `bigquery-public-data.openaq.global_air_quality`\n        \"\"\"","c59fcfc7":"# only run this query if it's less than 100 MB\nquery2_result = open_aq.query_to_pandas_safe(query2, max_gb_scanned=0.1)","870778ac":"#check the query result which is now a dataframe\nquery2_result","ab7dadf4":"# query to select the country and its average value of pollutant\n# columns that are not included within an aggregate function and must be included in the GROUP BY \nquery3 = \"\"\"SELECT country, AVG(value)\n            FROM `bigquery-public-data.openaq.global_air_quality`\n            GROUP BY country\n            ORDER BY 2 DESC\n          \"\"\"","219e47af":"# only run this query if it's less than 100 MB\nquery3_result = open_aq.query_to_pandas_safe(query3, max_gb_scanned=0.1)","f069c718":"#check the query result which is now a dataframe\nquery3_result","dc5f75bd":"# INTRO\n___\n\nAfter we learn the most basic SQL statement which is `SELECT`, we'll take a look at some more  of the basic statements of SQL. We're still using `openaq` dataset  which contain one table called `global_air_quality`. Just like the first part, we'll need to set things up first before we can start applying the SQL query","c32ef90a":"Using the `head()` function, let's take a look at the first  5 rows of the dataset","bf3ac4cc":"That looks better, SQL aliases basically are used to give a table, or a column in a table, a temporary name. This is very useful so that we don't get confused because it makes the table more readable.","af95bb37":"That's it for the second part of the SQL basics, hope to see you again in the next part where we'll talk about subquery.","24625f1d":"The `GROUP BY` statement allows you to separate data into groups, which can be aggregated independently of one another. It is often used with aggregate functions` (COUNT, MAX, MIN, SUM, AVG)` to group the result-set by one or more columns.\n\nFor example, if you want to see list of countries and the average value of pollutant for each of the countries, you can do that using `GROUP BY` statement","afd97770":"# GROUP BY and ORDER ","c22d927b":"# AGGREGATE FUNCTION\n\nAn aggregate function  allows you to perform a calculation on a set of values to return a single  value. Usually it will be followed by GROUPBY statement. The most commonly used aggregate function in SQL are `SUM(), MAX(), MIN(), AVG(), COUNT()`\n\nSay we want to find out how many different countries are in the dataset. The easiest way is using the `COUNT()` function and combining it with the `DISTINCT()` statement. The `DISTINCT()` statement is used to prevent the query of counting the same country twice because it will only return different values.\n\n\n** > We need to put our SQL statements inside the quotation mark (\"\"\"   \"\"\") **","3d68e644":"The result seems fine, except that the colulmn name is `f0_` which is a little confusing, we can rename the column using aliases in our query","9f4f9d2f":"Now we have a dataframe that shows list of every countries with the average pollutant"}}