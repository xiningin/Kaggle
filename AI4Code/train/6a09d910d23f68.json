{"cell_type":{"aa061297":"code","5e58fee1":"code","15c90165":"code","8ea76654":"code","a631c76c":"code","8bc19838":"code","a43f290d":"code","507ce369":"code","0da97308":"code","5483787b":"code","9b506eaa":"code","e83fb643":"code","7fa6a226":"code","1cab6fa3":"code","5186b1b2":"code","6b70974c":"code","70a8341c":"code","675567a5":"code","f7ac65d4":"code","dc93f256":"code","56586dfc":"code","d33f7e90":"code","881c4f28":"code","2fb62b39":"code","b95643c8":"code","c8a13122":"code","08c894c9":"code","eea397da":"code","f234e89c":"code","376edddc":"code","08e103f3":"markdown","0cf6ea55":"markdown","53b1e81a":"markdown","fcb277b0":"markdown","1859fe02":"markdown","73c80b84":"markdown","f0f6df22":"markdown","e1beaf4b":"markdown"},"source":{"aa061297":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e58fee1":"df = pd.read_csv(\"\/kaggle\/input\/meta-kaggle\/Users.csv\")\ndf = df.rename(columns={'Id':'UserId',})\ndf","15c90165":"df1 = pd.read_csv('\/kaggle\/input\/meta-kaggle\/UserAchievements.csv').drop(['Id','Tier','TierAchievementDate'],axis=1)\ndf1","8ea76654":"full_data = df.merge(df1, on = ['UserId'],how = 'right')\nfull_data","a631c76c":"full_data = full_data.sort_values(by='CurrentRanking', ascending=True)\nfull_data","8bc19838":"ranked_user_data = full_data.dropna(subset=['CurrentRanking'])\nranked_user_data","a43f290d":"user_names = set(ranked_user_data.UserName.unique())\nlen(user_names)","507ce369":"print(type(user_names))\nuser_names = pd.DataFrame(user_names)\nprint(type(user_names))","0da97308":"user_names = user_names.rename(columns={0:'UserName',})\nuser_names","5483787b":"!conda install -y gdown","9b506eaa":"import gdown\ngdown.download('https:\/\/drive.google.com\/uc?id=1c9ksxzAtOLeGF-VEmu6x7HYJhvzAjQc-', 'Kaggler_Countries.csv', quiet=False)","e83fb643":"countries = pd.read_csv(\"\/kaggle\/working\/Kaggler_Countries.csv\")\ncountries","7fa6a226":"countries = countries.merge(user_names, on = ['UserName'],how = 'right')\ncountries.isna().sum()","1cab6fa3":"countries.to_csv(r'\/kaggle\/working\/Kaggler_Countries.csv', index = False)","5186b1b2":"from bs4 import BeautifulSoup\nimport re\nimport requests\nfrom lxml import html\nimport time\nimport sys\nimport numpy as np\nimport pandas as pd\nfrom datetime import datetime\nimport pytz\n\nheaders = {'user-agent': 'my-app\/0.0.1'}","6b70974c":"countries = pd.read_csv('\/kaggle\/working\/Kaggler_Countries.csv')\nnan_countries = countries[(countries.loc[:,['Country']].isnull()).any(axis=1)]\nnan_countries","70a8341c":"len(nan_countries)","675567a5":"count=0\ntemp=0\nprint('Started at',datetime.now(pytz.timezone('Asia\/Seoul')).strftime(\"%H:%M:%S %d\/%m\/%Y\"))\nwhile True:\n    try:\n        for idx, row in enumerate(nan_countries.values):\n            i = nan_countries.index[idx]\n            name,country = row\n            response = requests.get('http:\/\/www.kaggle.com\/{}'.format(name),headers=headers)\n            raw_text = str(BeautifulSoup(response.text, \"lxml\")).replace('\"', '')\n            c = re.findall('(country:[A-Za-z\\s\\n]+)', raw_text)[0][8:]\n            print(i,'http:\/\/www.kaggle.com\/{}'.format(name),c)\n            if c=='null':\n                countries.Country[i]='Unknown'\n            else:\n                countries.Country[i]= c\n            temp+=1\n    except:\n        print('Found =',temp)\n        dt_string = datetime.now(pytz.timezone('Asia\/Seoul')).strftime(\"%H:%M:%S %d\/%m\/%Y\")\n        print(\"Oops!\", sys.exc_info()[0], \"occurred.\")\n        print(\"Finished at\", dt_string)\t\n        print(\"Stopped! Try again!\")\n        print()\n        countries.to_csv(r'\/kaggle\/working\/Kaggler_Countries.csv', index = False)\n        countries = pd.read_csv('\/kaggle\/working\/Kaggler_Countries.csv')\n        nan_countries = countries[(countries.loc[:,['Country']].isnull()).any(axis=1)]\n        print(len(nan_countries))\n        time.sleep(300)\n        count+=1\n        print('Try count =',count)\n        continue\n    break\ncountries.to_csv(r'\/kaggle\/working\/Kaggler_Countries.csv', index = False)","f7ac65d4":"df = ranked_user_data.merge(countries, on = ['UserName'],how = 'right').sort_values(by='Points', ascending=False).reset_index(drop=True)\nlabels = {5:\"Kaggleteams\",4:\"Grandmasters\",3:\"Masters\",2:\"Experts\"}\ndf[\"PerformanceTier\"]= df[\"PerformanceTier\"].apply(lambda x :np.array(labels[x]))\ndf['CurrentRanking'] = df['CurrentRanking'].astype(int)\ndf['HighestRanking'] = df['HighestRanking'].astype(int)\ndf","dc93f256":"stats_countries = pd.DataFrame(df['Country'])\nunknowns = int(stats_countries.isin(['Unknown']).sum())\nunknowns","56586dfc":"rankCountries = pd.DataFrame(stats_countries.groupby(stats_countries.columns.tolist(),as_index=False).size())\nrankCountries = rankCountries.rename(columns={0:'Total'})\nrankCountries = rankCountries.sort_values(by=['Total'],ascending=False)\nprint('Total ranked users =',rankCountries.Total.sum())\nprint('Unknown country users =',unknowns)\nprint('Total user countries =',len(rankCountries)-1)","d33f7e90":"pd.set_option('display.max_rows', None)\nrankCountries","881c4f28":"mains = rankCountries.where(rankCountries.Total>=50.).dropna()\nmains","2fb62b39":"others = pd.DataFrame(rankCountries.where(rankCountries.Total < 50).sum())\nothers = others.rename(columns={0:'Others'}).T\nothers","b95643c8":"import matplotlib\n\nmatplotlib.style.use('ggplot')\n%matplotlib inline  \n\nby_country = pd.concat([mains,others])\npd.Series(by_country['Total']).plot.pie(figsize=(10, 10), autopct='%0.1f')","c8a13122":"df = df.rename(columns={'UserName':'User Name',\n                        'DisplayName':'Display Name', \n                        'RegisterDate':'Register Date', \n                        'PerformanceTier':'Performance Tier',\n                        'AchievementType':'Achievement Type',\n                        'CurrentRanking':'Current Ranking', \n                        'HighestRanking':'Highest Ranking', \n                        'TotalGold':'Gold', \n                        'TotalSilver':'Silver',\n                        'TotalBronze':'Bronze'})","08c894c9":"df = pd.concat([df['Country'],df.iloc[:, 1:-1]], axis=1)\n#df.to_csv(r'\/kaggle\/working\/kaggler_ranking_by_countries.csv')\n","eea397da":"df.to_html(\"kaggler_ranking_by_countries.htm\")","f234e89c":"pd.set_option('display.max_rows', 40)\ndf","376edddc":"from IPython.display import IFrame\ndisplay(IFrame(src='https:\/\/quasar.kz\/kaggler_ranking_by_countries.htm', width=\"100%\", height=600))","08e103f3":"# Ranking list\n\nHello!\nThis is my first sharing notebook in Kaggle.\n","0cf6ea55":"# 4) Kaggler Country Data\n\nUsing Web scraping code of https:\/\/www.kaggle.com\/andreyg\/top-100-kaggle-users-by-country, Country data was got by another notebook through Google Colab but saving on Google Disk, because Kaggle notebook, after restarting session, all collected data always disappeared! Also, Google Colab Notebooks are not good to save data, because each day Colab machines are rebooted or restarted session. So, efficient way to save data was on Google Disk.\n\nUploading data from Google Disk","53b1e81a":"Data \"Kaggler_Countries.csv\" has \"Unknown\" value, because some of ranked users did not show own countries or locations. So, they have NaN-value, to avoid that there was used \"Unknown\".\n\n# 5) Check newly added users in ranking list\nTo check newly ranked users and compare two data, and count NaN-value.","fcb277b0":"# 3) Merging\n\nTo have one full data, these data were merged by UserId.","1859fe02":"However, there was unique 8084 users, who has any point or ranked.","73c80b84":"Among above data, I worked with two data: Users.csv & UserAchievements.csv\n\n# 1) Users data","f0f6df22":"After dropping NaN-value on column 'CurrentRanking', our data was reduced from (10710456,12) to (9225, 12). So, there higher ranking is 1, and the lowest is 7348. Also, User points are between (3-207321).","e1beaf4b":"# 2) User Achievements Data"}}