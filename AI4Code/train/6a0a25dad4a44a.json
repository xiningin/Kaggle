{"cell_type":{"ced7de72":"code","d3a52541":"code","2c897b57":"code","50620ac6":"code","00606632":"code","85e208a4":"code","74723e2d":"code","8bd4fad6":"code","bd2d845f":"code","f95603da":"code","4f832da6":"code","62345365":"code","1f9ea4ed":"code","f6e7bc84":"code","39bb451e":"code","2cf70bbc":"code","98d66c26":"code","aa99d9a4":"code","8f85c77c":"code","34aa7f3c":"code","f80243c0":"code","7345061f":"code","325e80ff":"code","a1753522":"code","c77146ec":"code","3b5a04f1":"code","120fb53e":"code","325e6feb":"code","f78a01e1":"code","c4c18af3":"markdown","18ff7428":"markdown","2f464dd7":"markdown","bd759ba2":"markdown","48ceb3e7":"markdown","1d98ee66":"markdown","1f1245df":"markdown"},"source":{"ced7de72":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/students-performance-in-exams'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d3a52541":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style('darkgrid')","2c897b57":"df=pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndf.head()","50620ac6":"df.shape","00606632":"df.describe()","85e208a4":"df['mean score']=((df['math score'] + df['reading score'] + df['writing score'])\/3).round()\ndf.head()","74723e2d":"df['gender'].value_counts()","8bd4fad6":"from sklearn.preprocessing import LabelEncoder\nlc = LabelEncoder()\ndf['gender'] = lc.fit_transform(df['gender'])\ndf['race\/ethnicity'] = lc.fit_transform(df['race\/ethnicity'])\ndf['parental level of education'] = lc.fit_transform(df['parental level of education'])\ndf['lunch'] = lc.fit_transform(df['lunch'])\ndf['test preparation course'] = lc.fit_transform(df['test preparation course'])\ndf.head()","bd2d845f":"import warnings\nwarnings.filterwarnings('ignore')\nsns.countplot(df['gender'],hue=df['race\/ethnicity'])","f95603da":"df['test preparation course'].value_counts()","4f832da6":"labels = ['None','Completed']\ncolors=['red','blue']\nplt.pie(df['test preparation course'].value_counts() , labels = labels, colors = colors)","62345365":"plt.figure(figsize = (12,6))\nsns.barplot(x='test preparation course',y='mean score',data=df)\nplt.show()","1f9ea4ed":"sns.barplot(x = df['lunch'],y = df['mean score'], palette = 'inferno' )","f6e7bc84":"sns.barplot(x = df['parental level of education'],y = df['mean score'], palette = 'inferno' )","39bb451e":"plt.figure(figsize =(12,6))\nsns.heatmap(df.corr(),annot=True)\nplt.show()","2cf70bbc":"df = df.drop(['math score', 'writing score', 'reading score'],axis=1)\ndf.head()","98d66c26":"from sklearn.model_selection import train_test_split\ny=df['mean score'].values\nx=(df.drop(['mean score'],axis=1)).values[:,0:]\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2)","aa99d9a4":"x=df.drop(['mean score'],axis=1)\nx.head()","8f85c77c":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import classification_report, confusion_matrix","34aa7f3c":"model = LinearRegression()","f80243c0":"model.fit(x_train,y_train)","7345061f":"predictions = model.predict(x_test)","325e80ff":"y_test","a1753522":"predictions","c77146ec":"from sklearn.metrics import accuracy_score","3b5a04f1":"print(np.mean((y_test-predictions)**2))","120fb53e":"print(np.sqrt(np.mean((y_test-predictions)**2)))","325e6feb":"x_train.shape","f78a01e1":"input=[[0,1,3,1,1]]\noutput=model.predict(input)\nprint(\"total mean score:\",output)","c4c18af3":"**SCALING THE CATEGORICAL VALUES USING LABEL ENCODER**","18ff7428":"**DATA PREPROCESSING**","2f464dd7":"***PREDICTING FOR USER INPUT***","bd759ba2":"**IMPORTING LIBRARIES AND DATASET**","48ceb3e7":"**DATA VISUALISATION**","1d98ee66":"**MODEL CREATION**","1f1245df":"**SPLITTING DATA INTO DEPENDENT AND INDEPENDENT VARIABLES**"}}