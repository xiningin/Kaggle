{"cell_type":{"3dee7785":"code","ede02664":"code","c433db2d":"code","082e65dc":"code","944717dd":"code","d5e42255":"code","70693b2f":"code","5f5dcac9":"code","abee14f7":"code","6c6e99cc":"code","d9bd3cc4":"code","fce78308":"code","13b46461":"markdown","2304dfee":"markdown","262105c4":"markdown","50902bd0":"markdown","649b5a2a":"markdown","8b2c0628":"markdown","78ba8a10":"markdown","21e688d2":"markdown","776a3746":"markdown"},"source":{"3dee7785":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport tensorflow\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense , Flatten\nfrom tensorflow.keras.datasets import mnist\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.model_selection import train_test_split","ede02664":"df_train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndf_test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","c433db2d":"print( \"Test =\",df_test.shape , \"\\nTrain =\",df_train.shape)","082e65dc":"df_test.head()","944717dd":"df_train.head()","d5e42255":"x_train = df_train.iloc[:, 1:785]\ny_train = df_train.iloc[:, 0]\nx_test = df_test.iloc[:, 0:784]","70693b2f":"scaller = StandardScaler()\nx_test = scaller.fit_transform(x_test)\nx_train = scaller.fit_transform(x_train)","5f5dcac9":"model = Sequential()\n# model.add(Flatten())\nmodel.add(Dense(784, activation = \"relu\", input_shape = (784,)))\nmodel.add(Dense(100, activation = \"relu\"))\nmodel.add(Dense(300, activation = \"relu\"))\nmodel.add(Dense(300, activation = \"relu\"))\nmodel.add(Dense(10, activation = \"softmax\"))\nmodel.compile(loss = \"sparse_categorical_crossentropy\", optimizer= \"adam\", metrics = [\"accuracy\"])\nhistory = model.fit(x_train, y_train, validation_split = 0.30, epochs=30, batch_size=len(x_train))","abee14f7":"acc = history.history[\"accuracy\"]\nval_acc= history.history[\"val_accuracy\"]\nloss = history.history[\"loss\"]\nval_loss = history.history[\"val_loss\"]\nprint(\"Accuracy = \", acc[-1], \"\\nValidation Accuracy = \", val_acc[-1])","6c6e99cc":"tva = pd.DataFrame(\n        {\n            \"Ta\":acc,\n            \"Va\":val_acc\n        }\n)\ntva.boxplot()","d9bd3cc4":"prediction = model.predict_classes(x_test)\nprint(\"first digit is \",prediction[0])","fce78308":"import matplotlib.pyplot as plt\nimage = x_test[0]\nimage = np.array(image, dtype='float')\npixels = image.reshape((28, 28))\nplt.imshow(pixels, cmap='gray')\nplt.show()","13b46461":"## Displaying first image in the dataset","2304dfee":"We are getting final **accurcy score** of 96.39% and **validation accuracy score** of 94.78%\n* Neural net specifications:\n* epochs = 30\n* Number of Hidden Layers: 3\n* Hidden Layer 1 nodes: 100\n* Hidden Layer 2 nodes: 300\n* Hidden Layer 3 nodes: 300\n* Output layer nodes: 10  --->   because the dataset has 10 digitd i.e. 0 to 9","262105c4":"## Prediction","50902bd0":"## Data Filtering","649b5a2a":"Hence we can verify that our prediction is correct ","8b2c0628":"## Plotting box plot","78ba8a10":"# Handwritten Digit Recognition using Neural Network","21e688d2":"## Splitting train and test data","776a3746":"## Deep Learning\/Implementation of Neural Network"}}