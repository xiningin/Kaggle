{"cell_type":{"f1fed5e0":"code","d5dab13f":"code","a9304767":"code","df52ca9e":"code","cc436708":"code","c41904dd":"code","e1af885e":"code","e5df05a4":"code","4995e83f":"code","15072a08":"code","e7993f12":"code","031a17d6":"code","549e7c86":"code","2c6c7829":"code","99fc92f2":"code","d9082655":"code","e8e32ba7":"code","3de98cea":"code","0c2908cb":"code","2dff055e":"markdown","9e26f3aa":"markdown","9520e183":"markdown","9736c9ce":"markdown","3b0b258f":"markdown","9c148ad2":"markdown","3a0b9052":"markdown","a0a2a859":"markdown","42619c53":"markdown","ddd5b49e":"markdown","2da915aa":"markdown","284f780b":"markdown","9b57dcf3":"markdown","bb772b77":"markdown","0588f30e":"markdown","182a578d":"markdown","cd27bcf6":"markdown","821f337d":"markdown"},"source":{"f1fed5e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d5dab13f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nimport datetime as dt\nfrom itertools import chain\n\nfrom ipywidgets import interact, interactive, fixed\nimport ipywidgets as widgets\nfrom IPython.display import display\n\nimport warnings\nwarnings.filterwarnings('ignore')","a9304767":"vacc1=pd.read_csv(\"http:\/\/api.covid19india.org\/csv\/latest\/cowin_vaccine_data_statewise.csv\")\nvacc1.fillna(0)\nvacc1[\"Updated On\"]=pd.to_datetime(vacc1[\"Updated On\"],infer_datetime_format=True)\nvacc1.drop([\"AEFI\"],inplace=True,axis=1)\n#display(vacc1.columns)\n#display(vacc1)\n\nvacc=pd.read_csv(\"http:\/\/api.covid19india.org\/csv\/latest\/vaccine_doses_statewise.csv\")\nvacc.fillna(0)\nvacc.index=vacc[\"State\"]\nvacc=vacc.T\nvacc.drop([\"State\"],inplace=True)\nvacc.index=pd.to_datetime(vacc.index,infer_datetime_format=True)\n#display(vacc)\n#display(vacc.columns)","df52ca9e":"def f(x):\n    display(x)\n    return x\n\nC = vacc1[\"State\"].unique()\nP = interactive(f, x=widgets.Dropdown(options=C,value='India',description='State:',disabled=False))\nprint(\"Select a state to view vaccination data:\")\ndisplay(P)","cc436708":"#Total doses administered nationwide\nres=P.result\nState=vacc1[vacc1[\"State\"]==res]\nD=State[\"Updated On\"]\nX=State[\"Total Doses Administered\"]\nplt.figure(figsize=(16,8))\nplt.bar(D,X)\nplt.title(\"{}: Total doses administered\".format(res))\nplt.grid()\nplt.show()\n\n#First done vs fully vaccinated\nX=State[\"First Dose Administered\"]\nY=State[\"Second Dose Administered\"]\nP=Y\/X*100\nplt.figure(figsize=(16,8))\nplt.plot(D,X,label=\"First dose\")\nplt.plot(D,Y,label=\"Second dose\")\nplt.title(\"First dose done vs Second dose done\")\nplt.grid()\nplt.legend()\nplt.show()\n\nplt.figure(figsize=(16,8))\nplt.plot(P,color=\"purple\")\nplt.title(\"Percentage of people fully vaccinated\")\nplt.grid()\nplt.show()\n\n#Male vs Female vaccinations\nA=State[State.index==(State.index).max()-3][\"Male(Individuals Vaccinated)\"].values\nB=State[State.index==(State.index).max()-3][\"Female(Individuals Vaccinated)\"].values\nnew=list(chain.from_iterable([A,B]))\nplt.pie(new,labels=[\"Male\",\"Female\"],radius=2,shadow=True,autopct='%1.1f%%',explode = [0,0.1])\nplt.title(\"Vaccinations completed\")\nplt.legend()\nplt.show()\n\n#Covaxin vs Covishield\nA=State[\"Total Covaxin Administered\"].diff()\nB=State[\"Total CoviShield Administered\"].diff()\nX=State[State.index==(State.index).max()-3][\"Total Covaxin Administered\"].values\nY=State[State.index==(State.index).max()-3][\"Total CoviShield Administered\"].values\n\nplt.figure(figsize=(16,8))\nplt.bar(D,B,label=\"CoviShield\",color=\"orange\")\nplt.bar(D,A,label='Covaxin',color=\"blue\")\nplt.title(\"Daily CoviShield vs Covaxin\")\nplt.legend(loc='upper right')\nplt.grid()\nplt.show()\n\nnew=list(chain.from_iterable([X,Y]))\nplt.pie(new,labels=[\"Covaxin\",\"CoviShield\"],radius=2,shadow=True,autopct='%1.1f%%',explode = [0,0.2])\nplt.title(\"Vaccine brand\")\nplt.legend()\nplt.show()","c41904dd":"def f(x):\n    display(x)\n    return x\n\nC = vacc.columns[1:38]\nP = interactive(f, x=widgets.Dropdown(options=C,value='Maharashtra',description='State:',disabled=False))\nprint(\"Select a state to view vaccination data:\")\ndisplay(P)","e1af885e":"State = P.result\nX=vacc[\"Total\"] #Total Vaccinations\nY=vacc[State]  #State total vaccinations\nDX=X.diff() #Daily vaccinations\nDY=Y.diff()  #State Vaccinations\nD=vacc.index\n\nplt.figure(figsize=(16,8))\nplt.bar(D,abs(DY))\nplt.title(\"Daily {} Vaccinations\".format(State))\nplt.grid()\nplt.show()","e5df05a4":"state_names=[\"India\",'Andaman Nicobar', 'Andhra P', 'Arunachal P',\n       'Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh',\n       'Daman and Diu', 'Delhi', 'Goa', 'Gujarat',\n       'Haryana', 'Himachal P', 'Jammu Kashmir', 'Jharkhand',\n       'Karnataka', 'Kerala', 'Ladakh', 'Lakshadweep', 'Madhya P',\n       'Maharashtra', 'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Odisha',\n       'Puducherry', 'Punjab', 'Rajasthan', 'Sikkim', 'Tamil Nadu',\n       'Telangana', 'Tripura', 'Uttar P', 'Uttarakhand', 'West Bengal']","4995e83f":"st_df=pd.DataFrame()\nfor st in vacc.columns:\n    X=vacc[st][len(vacc)-2]\n    #print(\"{}: {}\".format(st,X))\n    st_df=st_df.append([X])\n    \nst_df.index=vacc.columns\nst_df.rename(index={\"Total\":\"India\"},inplace=True)\nst_df.drop([\"Miscellaneous\"],inplace=True)\nst_df.columns=[\"Vaccinations\"]\nsorted_st_df=st_df.sort_values(by=[\"Vaccinations\"],ascending=False)","15072a08":"pop=pd.read_csv(\"\/kaggle\/input\/vaccination-data\/State-census.csv\",encoding= 'unicode_escape')\npop[\"Population\"]=pd.to_numeric(pop[\"Population\"],errors=\"coerce\")\npop[\"Density\"]=pd.to_numeric(pop[\"Density\"],errors=\"coerce\")\npop[\"Growth Rate\"]=pd.to_numeric(pop[\"Growth Rate\"],errors=\"coerce\")\ndisplay(pop.head())\n\n#Adding columns to new dataset for vaccinations and population.\nst_df[\"Population\"]=pop[\"Population\"].values\nst_df[\"Urban Pop\"]=pop[\"Urban Population\"].values\nst_df[\"Rural Pop\"]=pop[\"Rural Population\"].values\nst_df[\"Sex Ratio\"]=pop[\"Sex Ratio\"].values\ndisplay(st_df.head())","e7993f12":"plt.figure(figsize=(16,10))\nsns.barplot(sorted_st_df[\"Vaccinations\"][1:],sorted_st_df.index[1:],saturation=1,orient=\"h\")\nplt.title(\"Total Vaccinations\",size=20)\nplt.grid()\nplt.xticks(rotation=90,size=12)\nplt.tight_layout()\nplt.show()","031a17d6":"# Top 5 vaccinated states\nplt.figure(figsize=(10,6))\nplt.plot(sorted_st_df[1:].head())\nplt.title(\"Maximun vaccinated States\")\nplt.grid()","549e7c86":"gender_df=pd.DataFrame()\nbrand_df=pd.DataFrame()\nfor st in vacc1[\"State\"].unique():\n    sp=vacc1[vacc1[\"State\"]==st]\n    X=sp[sp.index==(sp.index).max()-3][\"Male(Individuals Vaccinated)\"].values\n    Y=sp[sp.index==(sp.index).max()-3][\"Female(Individuals Vaccinated)\"].values\n    Covishield=sp[sp.index==(sp.index).max()-3][\"Total CoviShield Administered\"].values\n    Covaxin=sp[sp.index==(sp.index).max()-3][\"Total Covaxin Administered\"].values\n    gender_df=gender_df.append(list(zip(X,Y)))\n    brand_df=brand_df.append(list(zip(Covaxin,Covishield)))\n    \ngender_df.columns=[\"Male\",\"Female\"]\nbrand_df.columns=[\"Covaxin\",\"Covishield\"]\ngender_df.index=state_names\nbrand_df.index=state_names\n#gender_df.sort_values(by=[\"Male\"],ascending=False,inplace=True)","2c6c7829":"#Comparison of gender and brands\nGen = go.Figure(data=[go.Bar(x=gender_df.index[1:],y=gender_df[\"Male\"][1:],    #Trace 1\n                                   name=\"Male\",\n                                   marker = dict(color = 'rgba(0, 0, 255,1)'),\n                           ),\n                     go.Bar(x=gender_df.index[1:],y=gender_df[\"Female\"][1:],name=\"Female\",\n                            marker=dict(color = 'rgba(255, 0, 0,1)')),\n                    ]   \n              )\nGen.update_xaxes(\n    tickangle = 90,\n    title_font = {\"size\": 1},\n)\nGen.update_layout(\n    height=600,\n    margin=dict(l=20,r=20,b=50,t=50),\n    title=\"Male vs Female\",\n    xaxis_title=\"State\",\n    yaxis_title=\"Vaccinations\",\n    legend_title=\"Gender: \",\n    paper_bgcolor='#9ef7ad',\n    xaxis=dict(\n        rangeselector=dict(\n            buttons=list([dict(count=3,step=\"month\",stepmode=\"backward\"),\n                          dict(count=6,step=\"month\",stepmode=\"backward\"),\n                          dict(count=1,step=\"year\",stepmode=\"backward\")])\n        ),\n        rangeslider=dict(visible=True),\n    )\n)\n\nBrand = go.Figure(data=[go.Bar(x=brand_df.index[1:],y=brand_df[\"Covaxin\"][1:],    #Trace 1\n                                   name=\"Covaxin\",\n                                   marker = dict(color = 'rgba(0, 0, 255,1)'),\n                           ),\n                     go.Bar(x=brand_df.index[1:],y=brand_df[\"Covishield\"][1:],\n                            name=\"Covishield\",\n                            marker=dict(color = 'rgba(255, 0, 0,1)')),\n                    ]   \n              )\nBrand.update_xaxes(\n    tickangle = 90,\n    title_font = {\"size\": 1},\n)\nBrand.update_layout(\n    height=600,\n    margin=dict(l=20,r=20,b=50,t=50),\n    title=\"Covaxin vs Covishield\",\n    xaxis_title=\"State\",\n    yaxis_title=\"Vaccinations\",\n    legend_title=\"Brand: \",\n    paper_bgcolor='#9ef7ad',\n    xaxis=dict(\n        rangeselector=dict(\n            buttons=list([dict(count=3,step=\"month\",stepmode=\"backward\"),\n                          dict(count=6,step=\"month\",stepmode=\"backward\"),\n                          dict(count=1,step=\"year\",stepmode=\"backward\")])\n        ),\n        rangeslider=dict(visible=True),\n    )\n)\n\nGen.show()\nBrand.show()","99fc92f2":"plt.figure(figsize=(16,6))\nplt.plot(pop[\"State\"],pop[\"Sex Ratio\"])\nplt.scatter(pop[\"State\"],pop[\"Sex Ratio\"])\nplt.ylabel(\"Number of females\")\nplt.xticks(rotation=90)\nplt.xticks(rotation=90)\nplt.title(\"Sex Ratio State-wise\")\nplt.grid()\nplt.show()","d9082655":"#Population\nplt.figure(figsize=(18,6))\nsns.barplot(pop[\"State\"][:36],pop[\"Population\"][1:]*100)\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()\n\n#Population Density\nplt.figure(figsize=(16,8))\nplt.plot(pop[\"State\"][:36],pop[\"Density\"][:36],color=\"purple\")\nplt.title(\"Population Density\")\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","e8e32ba7":"ur_per=pop[\"Urban Population\"][:36]*100\/pop[\"Population\"][:36]\nrur_per=pop[\"Rural Population\"][:36]*100\/pop[\"Population\"][:36]\n\nplt.figure(figsize=(16,8))\nplt.plot(pop[\"State\"][:36],rur_per,label=\"Rural\")\nplt.plot(pop[\"State\"][:36],ur_per,label=\"Urban\")\nplt.scatter(pop[\"State\"][:36],rur_per)\nplt.scatter(pop[\"State\"][:36],ur_per)\nplt.title(\"Urban vs Rural population (%)\")\nplt.xticks(rotation=90)\nplt.legend()\nplt.grid()\nplt.show()","3de98cea":"plt.figure(figsize=(18,6))\nplt.bar(st_df.index,(st_df[\"Vaccinations\"]*100\/st_df[\"Population\"]),color=\"#D2B48C\")\nplt.title(\"Vaccinations \/ Population\")\nplt.xticks(rotation=90) \nplt.grid()\nplt.show()","0c2908cb":"#Vaccinations in urban and rural areas\nf, ax = plt.subplots(1, 2, figsize = (20, 6))\n\nsns.regplot(st_df[\"Urban Pop\"][:36],st_df[\"Vaccinations\"][:36],ax=ax[0])\nax[0].grid()\nax[0].set_xlabel(\"Urban Population\",fontSize=15)\n\nsns.regplot(st_df[\"Rural Pop\"][:36],st_df[\"Vaccinations\"][:36],ax=ax[1])\nax[1].grid()\nax[1].set_xlabel(\"Rural Population\",fontSize=15)\n\nplt.show()\n\n#Correlation between urban population and vaccination\nnewdf =st_df[['Vaccinations','Urban Pop','Rural Pop']]\ncorrelation = newdf.corr()\nsns.heatmap(correlation, cmap=\"Blues\",linewidths=2,annot=True) \nplt.tight_layout()","2dff055e":"**India's Statewise Population Dataset**","9e26f3aa":"**The vaccination data is pulled from the Indian government's official API links**","9520e183":"# Daily Vaccination statistics State-wise","9736c9ce":"**Statewise population and population density**","3b0b258f":"**As we can see, most of the states have a higher number of males (i.e. a sex ratio <1000). Only kerala and puduchery have more females.**\n\nHence it is obvious that most of the states have vaccinated more men as compared to women. ","9c148ad2":"**This shows that some states have more urban population while some have more rural population**","3a0b9052":"**Now we will compare the number of vaccinations based on gender and the brand of the vaccine in each state**\n\nSo in India, there are mainly two brands of covid vaccines as of now, CoviShield and Covaxin. We will comare the doses administered for each brand in each state.","a0a2a859":"# Statewise Comparison: EDA","42619c53":"**Sex Ratio:**\n\nThe sex ratio is the ratio of males to females in the population (normalized to 1000).\nShown below is the sex ratio for each state in India. \n\n**It basically shows the number of females per 1000 males.**\n\n","ddd5b49e":"**Create new dataframe \"st_df\" using for loop to extract data for each state separately**","2da915aa":"# EDA of vaccination data for India and it's states","284f780b":"# Number of vaccinations per population of the state\n\nClearly, as these are early days, not much percent of population has been vaccinated in every state. The percent of people who have recieved atleast one vaccine shot is shown below.","9b57dcf3":"# India Population EDA","bb772b77":"**Import required libraries**","0588f30e":"**Rural vs Urban population in every state**","182a578d":"# Correlation between vaccinations in urban and rural areas:\n\nThe regression plot below clearly shows that in states with more urban population, more people have been vaccinated. This gives a better correlation between urban population and vaccinations as compared to rural population and vaccinations.","cd27bcf6":"**Gender-wise:**\n\n As we can see most of the states have vaccinated more men as compared to women. Only Kerala, Karnataka, Chattisgarh, and Goa have vaccinated more women as compared to men. This is understandable as most of the states have more number of males (indicated by the Sex Ratio visualization below)\n \n **Brand Wise:**\n \n All the states have used CoviShield as their primary vaccine, clearly. Overall, Covishield takes up almost 90% of the total vaccinations in India while Covaxin take up a small value of 10%","821f337d":"**Interactive function to select the state for which data is to be viewed:**\nBy default it is set to \"India\" but the user can select the state they want."}}