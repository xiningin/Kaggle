{"cell_type":{"55285133":"code","05c8a640":"code","7502f337":"code","e91a7d61":"code","71ffbc8e":"code","6509a052":"code","54bc941f":"code","0a05d069":"code","c601480a":"code","2c0a83a2":"code","26048eb7":"code","a306aa59":"code","a636fd52":"code","6f037bc4":"code","8700e2b9":"code","36c2d159":"code","01ef09b2":"code","60ed23bc":"code","87f123d2":"code","7a6a88c3":"markdown","6d0508cc":"markdown","780fe483":"markdown","b81baee3":"markdown"},"source":{"55285133":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","05c8a640":"data = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')","7502f337":"#information of data\ndata.info()","e91a7d61":"#the ratio between data\ndata.corr() ","71ffbc8e":"#top 10 data but ----- data.head() = top 5 data\ndata.head(10)","6509a052":"#last 10 data\ndata.tail(10)","54bc941f":"data.columns","0a05d069":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.NA_Sales.plot(kind = 'line', color = 'r',label = 'North America Sales',linewidth=1,alpha = 0.5,grid = True,linestyle = ':',figsize = (15,15))\ndata.EU_Sales.plot(kind = \"line\",color = 'b',label = 'European Sales',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.',figsize = (15,15))\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","c601480a":"# Scatter Plot =  correlation between two variables\n# x = North America Sales , y = European Sales\ndata.plot(kind='scatter', x='NA_Sales', y='EU_Sales',alpha = 0.5,color = 'red',figsize = (12,12))\nplt.xlabel('North America Sales')              # label = name of label\nplt.ylabel('European Sales')\nplt.title('Sales Scatter Plot')            # title = title of plot\nplt.show()","2c0a83a2":"#Alternative Code\nplt.scatter(data.NA_Sales,data.EU_Sales,color = \"red\",alpha = 0.5) ","26048eb7":"# Histogram\n# bins = number of bar in figure\ndata.Year.plot(kind = 'hist',bins = 50,figsize = (14,14),label = 'Year of release')\nplt.legend()\nplt.show()","a306aa59":"# clf() = cleans it up again you can start a fresh\ndata.Year.plot(kind = 'hist',bins = 50)\nplt.clf()\n# We cannot see plot due to clf()","a636fd52":"#create dictionary and look its keys and values\ndic = {'game' : 'The Legend of Zelda','Year' : '1991'}\nprint(dic.keys())\nprint(dic.values())","6f037bc4":"# Keys have to be immutable objects like string, boolean, float, integer or tubles\n# List is not immutable\n# Keys are unique\ndic['game'] = \"Super Mario\"    # update existing entry\nprint(dic)\ndic['Genre'] = \"Action\"       # Add new entry\nprint(dic)\ndel dic['game']              # remove entry with key 'spain'\nprint(dic)\nprint('Genre' in dic)        # check include or not\n#dic.clear()                   # remove all entries in dict.Delete entire dictionary from memories so it gives error because dictionary is deleted\nprint(dic)","8700e2b9":"data = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')","36c2d159":"# 1 - Filtering Pandas data frame\nx = data['Year']>1999     # How many games are there after 1999?\ndata[x]","01ef09b2":"# 2 - Filtering pandas - use '&' for filtering.\ndata[(data['Year']>1999) & (data['Global_Sales']<20)]\n","60ed23bc":"# Stay in loop if condition( i is not equal 5) is true\ni = 0\nwhile i < 5 :\n    print('i is: ',i)\n    i = i + 1\nprint(i,' is not less than 5')","87f123d2":"# Stay in loop if condition( i is not equal 5) is true\nlis = [1999,2000,2001,2002,2003]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {'game':'The Legend of Zelda','Year':'1991'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\n# For pandas we can achieve index and value\nfor index,value in data[['Year']][0:3].iterrows():\n    print(index,\" : \",value)\n","7a6a88c3":"### WHILE and FOR LOOPS\nWe will learn most basic while and for loops","6d0508cc":"### MATPLOTLIB\nMatplot is a python library that help us to plot data. The easiest and basic plots are line, scatter and histogram plots.\n* Line plot is better when x axis is time.\n* Scatter is better when there is correlation between two variables\n* Histogram is better when we need to see distribution of numerical data.\n* Customization: Colors,labels,thickness of line, title, opacity, grid, figsize, ticks of axis and linestyle  ","780fe483":"### DICTIONARY\nWhy we need dictionary?\n* It has 'key' and 'value'\n* Faster than lists\n<br>\nWhat is key and value. Example:\n* dictionary = {'game' : 'The Legend of Zelda'}\n* Key is game.\n* Values is The Legend of Zelda.\n<br>\n<br>**It's that easy.**\n<br>Lets practice some other properties like keys(), values(), update, add, check, remove key, remove all entries and remove dicrionary.","b81baee3":"### PANDAS\nWhat we need to know about pandas?\n* CSV: comma - separated values"}}