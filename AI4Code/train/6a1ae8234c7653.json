{"cell_type":{"b618a785":"code","2120b56b":"code","68480289":"code","a43e4599":"code","ce6d133f":"code","a936738f":"code","ff6dc018":"code","85e36687":"code","21735a40":"code","d899e33b":"code","f13832fc":"code","84df90f4":"code","7ebc06bf":"code","776ea03a":"code","b8cf18e9":"code","20e03fa2":"code","6a5625ab":"code","b5ccba34":"code","7e23a505":"code","a9289776":"code","829d1c76":"code","62ab646d":"code","7c4cf20c":"code","32fc81aa":"markdown","c984d36c":"markdown","d7925fd1":"markdown","eb7cb8c0":"markdown","c081f0a2":"markdown","25e2a3d2":"markdown","6102d938":"markdown"},"source":{"b618a785":"# Loading some useful libraries\n\nimport numpy as np \nimport pandas as pd \n%matplotlib inline\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2120b56b":"#Importing train and test data\n\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","68480289":"train.head()","a43e4599":"train.describe()","ce6d133f":"#Name of each of the colums in the train data set\n\ntrain.columns","a936738f":"#Define the y variable (price)\n\nY_train = train.SalePrice","ff6dc018":"Y_train.head()","85e36687":"train.describe()","21735a40":"train.info()","d899e33b":"features = ['MSSubClass', 'LotArea', \n        'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd',  '1stFlrSF', 'YrSold', 'OpenPorchSF' , 'MiscVal', 'BedroomAbvGr', 'TotRmsAbvGrd', \n            'TotalBsmtSF', 'GrLivArea']# 'EnclosedPorch']# ,  '3SsnPorch', 'ScreenPorch'  ]","f13832fc":"from sklearn.model_selection import train_test_split","84df90f4":"X_train = train[features]\n\ntrain_X, val_X, train_y, val_y = train_test_split(X_train, Y_train, random_state = 0)\n","7ebc06bf":"X_train.head()","776ea03a":"train_X.info()","b8cf18e9":"#from sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\n\n# Define model. Specify a number for random_state to ensure same results each run\nmodel = XGBRegressor(n_estimators=300, learning_rate=0.15)\n\n# Fit model\nmodel.fit(train_X, train_y)","20e03fa2":"Y_train_prediction = model.predict(train_X)","6a5625ab":"from sklearn.metrics import mean_absolute_error\n\nmae1 = mean_absolute_error(train_y, Y_train_prediction)\n\nY_val_prediction = model.predict(val_X)\n\nmae2 = mean_absolute_error(val_y, Y_val_prediction)\n\nprint(mae1)\nprint(mae2)","b5ccba34":"test.info()","7e23a505":"X_test = test[features]\n\nY_test = model.predict(X_test)\n\nprint(Y_test)","a9289776":"my_submission = test.Id","829d1c76":"my_submission.head()","62ab646d":"my_submission = pd.DataFrame({'Id': test.Id, 'SalePrice': Y_test})\n","7c4cf20c":"my_submission.to_csv('submission.csv', index=False)\n\nprint(my_submission.head())","32fc81aa":"Visualization of the top five rows of the train data set:","c984d36c":"This is my first trial writing a notebook in Kaggle.","d7925fd1":"I will split the train data set in two datala set for model building and validation before prediction the value for the test data set.","eb7cb8c0":"I will start considering only some quantitative features with no missing values in the train data set:","c081f0a2":"More information on the train data set, with the minimum, maximum and mean values of each column:","25e2a3d2":"**Getting started with Kaggle**","6102d938":"![](http:\/\/)Lowest value so far 25.927\nbut validation mae is 17805"}}