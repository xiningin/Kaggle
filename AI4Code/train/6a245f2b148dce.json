{"cell_type":{"2f5f9373":"code","3df21eb1":"code","072878a0":"code","91e2b206":"code","18735ea1":"code","2467a855":"code","53a4ca9a":"code","a4716e25":"code","f43bfdb2":"code","7123df30":"code","41ed82da":"code","f59f8535":"code","d57b9738":"code","c23f106b":"code","e6c34d7f":"code","560d79bd":"code","e2c32789":"code","c0650880":"code","52679505":"code","1a1720da":"code","3bbc6b5c":"code","6f417a6d":"code","0472d65b":"code","d4298fa6":"code","79224084":"code","392b609d":"code","cf0ea169":"code","e6929f91":"code","8af2196d":"code","425c9ba5":"code","2f434473":"code","fcfec60b":"code","e84e4f8d":"code","f7bc9d1b":"code","4a98bbb9":"code","e3560e21":"code","7e71aed1":"code","dc80fdcd":"code","3c44b4ac":"code","cc481329":"code","59ba9654":"code","30da234e":"code","75d09004":"markdown","a0ebe417":"markdown","8510224f":"markdown","ea82034b":"markdown","c0017814":"markdown","0e688fe3":"markdown","b596020a":"markdown","3091fbaa":"markdown","9123102f":"markdown","51571d97":"markdown","433ede46":"markdown","3f1e1c57":"markdown","10ed7dc4":"markdown","87df6e3e":"markdown","2de783cc":"markdown","bed87f59":"markdown","91edc6ce":"markdown","b4e85030":"markdown","b0e2e9f5":"markdown","79b9e678":"markdown","5a8cbcac":"markdown"},"source":{"2f5f9373":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport scipy as sp\nimport warnings\nimport string\nimport datetime\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","3df21eb1":"data = pd.read_csv('\/kaggle\/input\/bank-customers\/Churn Modeling.csv')\ndata.head()\n","072878a0":"data.describe()","91e2b206":"data.info()","18735ea1":"data.columns","2467a855":"data.dtypes","53a4ca9a":"data.mean()","a4716e25":"data.value_counts()","f43bfdb2":"data.isnull().sum()","7123df30":"data.isnull().any()","41ed82da":"data.shape","f59f8535":"data.corr()","d57b9738":"plt.figure(figsize = (16,10))\n\nsns.heatmap(data.corr(), annot =True)\n","c23f106b":"data.hist(figsize=(18,12))\nplt.show()","e6c34d7f":"sns.scatterplot(x='Balance', y= 'CreditScore', data=data)","560d79bd":"sns.set_style(\"whitegrid\") \nmean_col = ['RowNumber','Gender','Age','Tenure','Balance','Exited']\n\nsns.pairplot(data[mean_col],palette='Accent')","e2c32789":"sns.relplot(x='Age', y= 'CreditScore', data=data)","c0650880":"sns.jointplot(x='Balance', y= 'CreditScore', data=data)\n","52679505":"plt.style.use(\"ggplot\")\nplt.figure(figsize=(14,8))\nplt.xlabel('Balance')\nplt.ylabel('CreditScore')\nsns.kdeplot(data['Balance'],shade=True,color='blue')\nplt.show()\n\n","1a1720da":"plt.style.use(\"default\")\nsns.barplot(x=\"Balance\", y=\"CreditScore\",data=data[179:190])\nplt.title(\"Balance vs CreditScore\",fontsize=15)\nplt.xlabel(\"Balance\")\nplt.ylabel(\"CreditScore\")\nplt.show()","3bbc6b5c":"plt.style.use(\"default\")\nsns.barplot(x=\"EstimatedSalary\", y=\"CreditScore\",data=data[183:190])\nplt.title(\"EstimatedSalary vs CreditScore\",fontsize=15)\nplt.xlabel(\"EstimatedSalary\")\nplt.ylabel(\"CreditScore\")\nplt.show()\n","6f417a6d":"plt.style.use(\"default\")\nsns.barplot(x=\"Tenure\", y=\"Balance\",data=data[170:190])\nplt.title(\"Tenure vs Balance\",fontsize=15)\nplt.xlabel(\"Tenure\")\nplt.ylabel(\"Balance\")\nplt.show()","0472d65b":"plt.style.use(\"default\")\nsns.barplot(x=\"HasCrCard\", y=\"NumOfProducts\",data=data[160:190])\nplt.title(\"HasCrCard vs NumOfProducts\",fontsize=15)\nplt.xlabel(\"HasCrCard\")\nplt.ylabel(\"NumOfProducts\")\nplt.show()","d4298fa6":"#lets find the categorialfeatures\nlist_1=list(data.columns)\n","79224084":"list_cate=[]\nfor i in list_1:\n    if data[i].dtype=='object':\n        list_cate.append(i)","392b609d":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\n","cf0ea169":"for i in list_cate:\n    data[i]=le.fit_transform(data[i])\n","e6929f91":"data","8af2196d":"#drop the columns as it is no longer required\nX = data.drop('Geography',axis=1)\ny = data['Geography']\n\n","425c9ba5":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","2f434473":"print(len(X_test))\nprint(len(X_train))\nprint(len(y_test))\nprint(len(y_train))","fcfec60b":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","e84e4f8d":"# Importing the Keras libraries and packages\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n\n# Initialising the ANN\nclassifier = Sequential()\n\n# Adding the input layer and the first hidden layer\nclassifier.add(Dense(activation=\"relu\", units=6, kernel_initializer=\"uniform\"))\n\n# Adding the second hidden layer\nclassifier.add(Dense(activation=\"relu\", input_dim=11, units=6, kernel_initializer=\"uniform\"))\n\n# Adding the output layer\nclassifier.add(Dense(activation=\"sigmoid\", units=1, kernel_initializer=\"uniform\"))\n\n# Compiling the ANN\nclassifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n\n# Fitting the ANN to the Training set\nclassifier.fit(X_train,y_train,batch_size = 10,\n    epochs=200,\n)\n","f7bc9d1b":"y_pred = classifier.predict(X_test)\ny_pred","4a98bbb9":"print((y_pred > 0.5))","e3560e21":"from tensorflow.keras.utils import plot_model\nplot_model(classifier, show_shapes = True)\n","7e71aed1":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\n","dc80fdcd":"for i in list_cate:\n    data[i]=le.fit_transform(data[i])\n","3c44b4ac":"data","cc481329":"classifier.summary()","59ba9654":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error\nprint(\"Mean Squared Error:\\n\",mean_squared_error(y_test,y_pred))\nprint(\"Mean Absolute Error:\\n\",mean_absolute_error(y_test,y_pred))\n\n\n\n\n\n","30da234e":"classifier.evaluate(X_test,y_test)","75d09004":"# IMPORTING THE LIBRARIES","a0ebe417":"# Bank Customers Churn \n\n","8510224f":"**HEATMAP**\n\n**A heatmap is a graphical representation of data that uses a system of color-coding to represent different values. Heatmaps are used in various forms of analytics but are most commonly used to show user behaviour on specific webpages or webpage templates.**\n","ea82034b":"# **Thank You** ","c0017814":"**BARPLOT**\n\n**A barplot (or barchart) is one of the most common types of graphic. It shows the relationship between a numeric and a categoric variable. Each entity of the categoric variable is represented as a bar. The size of the bar represents its numeric value.**","0e688fe3":"# Exploratory Data Analysis","b596020a":"![](https:\/\/image.slidesharecdn.com\/2017olofcustomerchurn-180312012319\/95\/customer-churn-prediction-in-banking-1-638.jpg?cb=1520817951)","3091fbaa":"**PAIRPLOT**\n\n**A pairplot plot a pairwise relationships in a dataset. The pairplot function creates a grid of Axes such that each variable in data will by shared in the y-axis across a single row and in the x-axis across a single column.**\n","9123102f":"**HISTOGRAM**\n\n**A histogram is basically used to represent data provided in a form of some groups.It is accurate method for the graphical representation of numerical data distribution.It is a type of bar plot where X-axis represents the bin ranges while Y-axis gives information about frequency.**\n\n","51571d97":"# ANN","433ede46":"# LOADING THE DATASET","3f1e1c57":"**So our dataset contains different data types like int , object ,float.** ","10ed7dc4":"**RELPLOT**\n\n**This is a figure-level function for visualizing statistical relationships using two common approaches: scatter plots and line plots. ... relplot() combines a FacetGrid with one of two axes-level functions: scatterplot() (with kind=\"scatter\" ; the default)**\n\n","87df6e3e":"**SCATTER PLOT**\n\n**A scatter plot (aka scatter chart, scatter graph) uses dots to represent values for two different numeric variables. The position of each dot on the horizontal and vertical axis indicates values for an individual data point. Scatter plots are used to observe relationships between variables.**\n\n","2de783cc":"**KDE PLOT (DENSITY PLOT)**\n\n**KDE Plot described as Kernel Density Estimate is used for visualizing the Probability Density of a continuous variable. It depicts the probability density at different values in a continuous variable. We can also plot a single graph for multiple samples which helps in more efficient data visualization.**\n\n","bed87f59":"# Feature Scaling","91edc6ce":"**Checking Null Values**","b4e85030":"# Data Preprocessing","b0e2e9f5":"**So our dataset contains 10000 rows and 14 columns**","79b9e678":"# TRAINING AND TESTING DATA","5a8cbcac":"**JOINTPLOT**\n\n**Seaborn's jointplot displays a relationship between 2 variables (bivariate) as well as 1D profiles (univariate) in the margins. This plot is a convenience class that wraps JointGrid.**\n\n"}}