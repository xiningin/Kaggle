{"cell_type":{"1c7c5b01":"code","b6323a51":"code","03965b97":"code","675a0b3d":"code","6d5811de":"code","ed5e8c4d":"code","37af8953":"code","335be718":"code","4b57ec31":"code","aada2c36":"code","f09e16d3":"code","17e1c638":"code","2cc77a02":"code","9f6b182c":"code","18fcb1ef":"code","b2903dd1":"code","77c3a77d":"code","3ffc8eb3":"code","346976e4":"code","2a0eb099":"code","bd13c0ea":"code","c8c08de2":"code","c70d6714":"code","a027b4e6":"markdown","814ade16":"markdown","e302994d":"markdown","b9145348":"markdown","409410de":"markdown"},"source":{"1c7c5b01":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport tensorflow.keras as keras\nimport matplotlib.pyplot as plt","b6323a51":"# collect spread ratio of two stocks as numpy array\nclose1= pd.read_csv(\"..\/input\/pair-trading-dataset\/F.csv\").iloc[-2490:-1, :][\"Close\"].values\nclose2 = pd.read_csv(\"..\/input\/pair-trading-dataset\/GM.csv\").iloc[-2490:-1, :][\"Close\"].values\nspread = close1 \/ close2","03965b97":"spread, spread.shape","675a0b3d":"time = np.array(list(range(len(spread))))\nseries = spread","6d5811de":"# split dataset into train and validation part\ntime_train = time[:2000]\nseries_train = series[:2000]\nseries_train = np.reshape(series_train, (-1, 1))\n\ntime_validation = time[2000:]\nseries_validation = series[2000:]","ed5e8c4d":"series_train.shape, series_validation.shape","37af8953":"# convert numpy array to Tensorflow Dataset object\ndataset = tf.data.Dataset.from_tensor_slices(series_train)\ndataset","335be718":"# split dataset into many windows\ndataset = dataset.window(size=21, shift=1, drop_remainder=True)\ndataset","4b57ec31":"# convert each window to a batch\ndataset = dataset.map(lambda window: window.batch(21))\ndataset","aada2c36":"# flatten each batch\ndataset = dataset.flat_map(lambda batch: batch)\ndataset","f09e16d3":"# shuffle the order of batch\ndataset = dataset.shuffle(buffer_size=2000)\ndataset","17e1c638":"# split each batch into input and output\ndataset = dataset.map(lambda batch: (batch[:-1], batch[-1]))\ndataset","2cc77a02":"# integrate 32 batchs\/examples into a \"batch\" for training\ndataset = dataset.batch(32)\ndataset","9f6b182c":"# prefatch Tensorflow Dataset object to enhance efficiency of training process\ntrain_dataset = dataset.prefetch(1)\ntrain_dataset","18fcb1ef":"for b in train_dataset:\n    print(b)\n    print()","b2903dd1":"model = keras.models.Sequential()\nmodel.add(keras.layers.Conv1D(filters=32, kernel_size=3, strides=1, padding=\"same\", activation=\"relu\", input_shape=(20, 1)))\n# model.add(keras.layers.Dense(units=128, input_shape=(20, 1), activation=\"relu\"))\nmodel.add(keras.layers.LSTM(64, return_sequences=True))\nmodel.add(keras.layers.LSTM(64))\nmodel.add(keras.layers.Dense(30, activation=\"relu\"))\nmodel.add(keras.layers.Dense(30, activation=\"relu\"))\nmodel.add(keras.layers.Dense(1, activation=\"linear\"))","77c3a77d":"model.summary()","3ffc8eb3":"model.compile(loss=\"mse\", optimizer=keras.optimizers.Adam(), metrics=[\"mae\"])","346976e4":"model.fit(x=train_dataset, epochs=100, verbose=1)","2a0eb099":"ans = []\n\nfor idx in range(2000, len(series)):\n    arr = series[idx-20:idx]\n    arr = np.reshape(arr, (1, 20, 1))\n    out = model.predict(arr)[0]\n    ans.append(out)","bd13c0ea":"plt.figure(figsize=(15, 10))\nplt.plot(time_validation, ans, color=\"red\")\nplt.plot(time_validation, series_validation, color=\"blue\")","c8c08de2":"from sklearn.metrics import mean_absolute_error","c70d6714":"mean_absolute_error(ans, series_validation)","a027b4e6":"## Build Input Pipeline for Training","814ade16":"## Import Package","e302994d":"## Define Model","b9145348":"## Load Dataset","409410de":"## Train Model"}}