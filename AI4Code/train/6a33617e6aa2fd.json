{"cell_type":{"392e910b":"code","445a512d":"code","03842e65":"code","63692705":"code","83f9418c":"code","cd68f73c":"code","90554017":"code","a34987c7":"code","edc21f5e":"code","c8e547ff":"code","7c83444a":"code","6af7e094":"code","9e0e5fff":"code","8d54f534":"code","4a9cb1cb":"code","b10672f1":"code","f9db7d4b":"code","87887127":"code","b47d7f72":"code","eb17d4d3":"code","726d5c9e":"code","b89d2092":"markdown","f7ebfe2c":"markdown","33aa97d4":"markdown","5da1177f":"markdown","80c893cb":"markdown"},"source":{"392e910b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","445a512d":"df=pd.read_excel('\/kaggle\/input\/bank-loan-modelling\/Bank_Personal_Loan_Modelling.xlsx','Data')\ndf.head()\n","03842e65":"import seaborn as sns\nsns.heatmap(df.isnull())","63692705":"df.shape","83f9418c":"X=pd.DataFrame(columns=['Age','Experience','Income','Family','CCAvg','Education','Mortgage','Securities Account','CD Account','CreditCard','Online'],data=df)","cd68f73c":"Y=df['Personal Loan']","90554017":"sns.countplot(data=df,x='Securities Account',hue='Personal Loan',palette='Set2')\n","a34987c7":"sns.countplot(data=df,x='Age',hue='Personal Loan',palette='Set2')","edc21f5e":"sns.countplot(data=df,x='Income',hue='Personal Loan',palette='Set2')\n","c8e547ff":"sns.countplot(data=df,x='Family',hue='Personal Loan',palette='Set2')","7c83444a":"sns.countplot(data=df,x='Education',hue='Personal Loan',palette='Set2')","6af7e094":"import matplotlib.pyplot as plt\nplt.figure(figsize=(20,20))\nsns.heatmap(df[df.corr().index].corr(),annot=True)\nplt.show()","9e0e5fff":"from sklearn.ensemble import ExtraTreesClassifier\nmodel=ExtraTreesClassifier()\nmodel.fit(X,Y)\nprint(model.feature_importances_)\nfeat_impo=pd.Series(model.feature_importances_,index=X.columns)\nfeat_impo.nlargest(5).plot(kind='barh')","8d54f534":"X=pd.DataFrame(columns=['Family','CCAvg','Education','Income','CD Account'],data=df)\nX.head()","4a9cb1cb":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=100)\n","b10672f1":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import GridSearchCV\nDT=DecisionTreeClassifier()\nmax_depth = range(1, 11, 2)\nprint(max_depth)\nparam_grid = dict(max_depth=max_depth)\ngrid_search = GridSearchCV(DT, param_grid,scoring=\"accuracy\", n_jobs=-1, cv=10)\ngrid_result = grid_search.fit(X_train,Y_train)\nprint(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))","f9db7d4b":"DT=DecisionTreeClassifier(max_depth=5)","87887127":"\nDT.fit(X_train,Y_train)\n","b47d7f72":"Y_pred=DT.predict(X_test)","eb17d4d3":"from sklearn.metrics import classification_report, confusion_matrix\nprint(classification_report(Y_test,Y_pred))","726d5c9e":"print(confusion_matrix(Y_test,Y_pred))","b89d2092":"So as par the heatmap there are no null values in the data","f7ebfe2c":"Now we will see feature correlation to help us choose the best features for training the model","33aa97d4":"All the feature all numerical so we dont need to perform any kind of transformation","5da1177f":"Checking if the data has null values or not","80c893cb":"As we can see features mentioned in the graph are the top features which we will use"}}