{"cell_type":{"57f356bb":"code","938b892e":"code","3525638f":"code","a5cef1f3":"code","e8a7fd90":"code","1b547f85":"code","e8c36e6c":"code","62e9e12a":"code","b615bf45":"code","254ead64":"code","4890b928":"code","c28da205":"code","6c82ac9f":"code","a04e9112":"code","9be8b6d9":"code","2b207a97":"code","725df85f":"code","cc431ad9":"code","22194419":"code","6f269a0f":"code","bd1d528f":"code","c6922c85":"code","658c4330":"code","67c992f4":"code","f7b4c41f":"code","7ec6e372":"code","82876fe8":"code","874feb67":"code","b5fb9dd0":"code","d47d090d":"code","7beb3112":"code","c82a5499":"code","0b30bc4c":"code","7e0f6707":"code","081cf75c":"code","c5a8cd6f":"code","923e08dd":"code","e265efbf":"code","8fd4a7e8":"code","f0cf4517":"code","bf3daaf6":"code","8a3ab19f":"code","d7b94487":"code","1a27b375":"code","22f9561e":"code","d0f4ef21":"code","5b9a0d35":"code","1785eb09":"code","4de3c32d":"markdown","735cf1d3":"markdown","a32415a7":"markdown","0891e377":"markdown","edbc6f00":"markdown","938f7fee":"markdown","ec651eee":"markdown","16c5d963":"markdown","6ba98532":"markdown","8465d5eb":"markdown","06b90d45":"markdown","3a1e6a1c":"markdown","c072d7bb":"markdown","14737a4f":"markdown","15d7b590":"markdown","69c30856":"markdown","925a0bf6":"markdown","7a9b23d7":"markdown","0df2485d":"markdown","7e20a328":"markdown"},"source":{"57f356bb":"# Import libraries\nimport pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nfrom sqlalchemy import create_engine\nimport warnings\n\nwarnings.filterwarnings('ignore')","938b892e":"# Load dataset\nle = pd.read_csv('..\/input\/Life Expectancy Data.csv', delimiter=',')\nle.dataframeName = 'Life Expectancy Data.csv'","3525638f":"# First 5 rows of the dataset.\nle.head()","a5cef1f3":"# Description and context of the Life Expectancy (WHO) dataset can be found here.\n  ## https:\/\/www.kaggle.com\/kumarajarshi\/life-expectancy-who","e8a7fd90":"# Renaming some column names as they contain trailing spaces.\nle.rename(columns={\" BMI \":\"BMI\",\"Life expectancy \":\"Life_Expectancy\",\"Adult Mortality\":\"Adult_Mortality\",\n                   \"infant deaths\":\"Infant_Deaths\",\"percentage expenditure\":\"Percentage_Exp\",\"Hepatitis B\":\"HepatitisB\",\n                  \"Measles \":\"Measles\",\" BMI \":\"BMI\",\"under-five deaths \":\"Under_Five_Deaths\",\"Diphtheria \":\"Diphtheria\",\n                  \" HIV\/AIDS\":\"HIV\/AIDS\",\" thinness  1-19 years\":\"thinness_1to19_years\",\" thinness 5-9 years\":\"thinness_5to9_years\",\"Income composition of resources\":\"Income_Comp_Of_Resources\",\n                   \"Total expenditure\":\"Tot_Exp\"},inplace=True)\n","1b547f85":"# Verify descriptive statistics\nle.describe()","e8c36e6c":"# Verifying whether data for each variable is according to its dataype or not.\nle.info()","62e9e12a":"# Identify percentage of null values in each column.\nle.isnull().sum()*100\/le.isnull().count()","b615bf45":"country_list = le.Country.unique()\nfill_list = ['Life_Expectancy','Adult_Mortality','Alcohol','HepatitisB','BMI','Polio','Tot_Exp','Diphtheria','GDP','Population','thinness_1to19_years','thinness_5to9_years','Income_Comp_Of_Resources','Schooling']\n","254ead64":"# Treat null values using interpolation.\nfor country in country_list:\n    le.loc[le['Country'] == country,fill_list] = le.loc[le['Country'] == country,fill_list].interpolate()\n    \n# Drop remaining null values after interpolation.\nle.dropna(inplace=True)","4890b928":"# Verifying null-values after applying above methods.\nle.isnull().sum()","c28da205":"# Create a dictionary of columns.\ncol_dict = {'Life_Expectancy':1,'Adult_Mortality':2,'Infant_Deaths':3,'Alcohol':4,'Percentage_Exp':5,'HepatitisB':6,'Measles':7,'BMI':8,'Under_Five_Deaths':9,'Polio':10,'Tot_Exp':11,'Diphtheria':12,'HIV\/AIDS':13,'GDP':14,'Population':15,'thinness_1to19_years':16,'thinness_5to9_years':17,'Income_Comp_Of_Resources':18,'Schooling':19}\n\n# Detect outliers in each variable using box plots.\nplt.figure(figsize=(20,30))\n\nfor variable,i in col_dict.items():\n                     plt.subplot(5,4,i)\n                     plt.boxplot(le[variable],whis=1.5)\n                     plt.title(variable)\n\nplt.show()","6c82ac9f":"# Calculate number of outliers and its percentage in each variable using Tukey's method.\n\nfor variable in col_dict.keys():\n    q75, q25 = np.percentile(le[variable], [75 ,25])\n    iqr = q75 - q25\n\n    min_val = q25 - (iqr*1.5)\n    max_val = q75 + (iqr*1.5)\n    print(\"Number of outliers and percentage of it in {} : {} and {}\".format(variable,\n                                                                             len((np.where((le[variable] > max_val) | \n                                                                                           (le[variable] < min_val))[0])),len((np.where((le[variable] > max_val) | \n                                                                                           (le[variable] < min_val))[0]))*100\/1987))","a04e9112":"# Removing Outliers in the variables using Winsorization technique.\n# Winsorize Life_Expectancy\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Life_Expectancy = le['Life_Expectancy']\nplt.boxplot(original_Life_Expectancy)\nplt.title(\"original_Life_Expectancy\")\n\nplt.subplot(1,2,2)\nwinsorized_Life_Expectancy = winsorize(le['Life_Expectancy'],(0.01,0))\nplt.boxplot(winsorized_Life_Expectancy)\nplt.title(\"winsorized_Life_Expectancy\")\n\nplt.show()","9be8b6d9":"# Winsorize Adult_Mortality\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Adult_Mortality = le['Adult_Mortality']\nplt.boxplot(original_Adult_Mortality)\nplt.title(\"original_Adult_Mortality\")\n\nplt.subplot(1,2,2)\nwinsorized_Adult_Mortality = winsorize(le['Adult_Mortality'],(0,0.03))\nplt.boxplot(winsorized_Adult_Mortality)\nplt.title(\"winsorized_Adult_Mortality\")\n\nplt.show()","2b207a97":"# Winsorize Infant_Deaths\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Infant_Deaths = le['Infant_Deaths']\nplt.boxplot(original_Infant_Deaths)\nplt.title(\"original_Infant_Deaths\")\n\nplt.subplot(1,2,2)\nwinsorized_Infant_Deaths = winsorize(le['Infant_Deaths'],(0,0.10))\nplt.boxplot(winsorized_Infant_Deaths)\nplt.title(\"winsorized_Infant_Deaths\")\n\nplt.show()","725df85f":"# Winsorize Alcohol\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Alcohol = le['Alcohol']\nplt.boxplot(original_Alcohol)\nplt.title(\"original_Alcohol\")\n\nplt.subplot(1,2,2)\nwinsorized_Alcohol = winsorize(le['Alcohol'],(0,0.01))\nplt.boxplot(winsorized_Alcohol)\nplt.title(\"winsorized_Alcohol\")\n\nplt.show()","cc431ad9":"# Winsorize Percentage_Exp\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Percentage_Exp = le['Percentage_Exp']\nplt.boxplot(original_Percentage_Exp)\nplt.title(\"original_Percentage_Exp\")\n\nplt.subplot(1,2,2)\nwinsorized_Percentage_Exp = winsorize(le['Percentage_Exp'],(0,0.12))\nplt.boxplot(winsorized_Percentage_Exp)\nplt.title(\"winsorized_Percentage_Exp\")\n\nplt.show()","22194419":"# Winsorize HepatitisB\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_HepatitisB = le['HepatitisB']\nplt.boxplot(original_HepatitisB)\nplt.title(\"original_HepatitisB\")\n\nplt.subplot(1,2,2)\nwinsorized_HepatitisB = winsorize(le['HepatitisB'],(0.11,0))\nplt.boxplot(winsorized_HepatitisB)\nplt.title(\"winsorized_HepatitisB\")\n\nplt.show()","6f269a0f":"# Winsorize Measles\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Measles = le['Measles']\nplt.boxplot(original_Measles)\nplt.title(\"original_Measles\")\n\nplt.subplot(1,2,2)\nwinsorized_Measles = winsorize(le['Measles'],(0,0.19))\nplt.boxplot(winsorized_Measles)\nplt.title(\"winsorized_Measles\")\n\nplt.show()","bd1d528f":"le = le.drop('Measles',axis=1)","c6922c85":"# Winsorize Under_Five_Deaths\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Under_Five_Deaths = le['Under_Five_Deaths']\nplt.boxplot(original_Under_Five_Deaths)\nplt.title(\"original_Under_Five_Deaths\")\n\nplt.subplot(1,2,2)\nwinsorized_Under_Five_Deaths = winsorize(le['Under_Five_Deaths'],(0,0.12))\nplt.boxplot(winsorized_Under_Five_Deaths)\nplt.title(\"winsorized_Under_Five_Deaths\")\n\nplt.show()","658c4330":"# Winsorize Polio\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Polio = le['Polio']\nplt.boxplot(original_Polio)\nplt.title(\"original_Polio\")\n\nplt.subplot(1,2,2)\nwinsorized_Polio = winsorize(le['Polio'],(0.09,0))\nplt.boxplot(winsorized_Polio)\nplt.title(\"winsorized_Polio\")\n\nplt.show()","67c992f4":"# Winsorize Tot_Exp\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Tot_Exp = le['Tot_Exp']\nplt.boxplot(original_Tot_Exp)\nplt.title(\"original_Tot_Exp\")\n\nplt.subplot(1,2,2)\nwinsorized_Tot_Exp = winsorize(le['Tot_Exp'],(0,0.01))\nplt.boxplot(winsorized_Tot_Exp)\nplt.title(\"winsorized_Tot_Exp\")\n\nplt.show()","f7b4c41f":"# Winsorize Diphtheria\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Diphtheria = le['Diphtheria']\nplt.boxplot(original_Diphtheria)\nplt.title(\"original_Diphtheria\")\n\nplt.subplot(1,2,2)\nwinsorized_Diphtheria = winsorize(le['Diphtheria'],(0.10,0))\nplt.boxplot(winsorized_Diphtheria)\nplt.title(\"winsorized_Diphtheria\")\n\nplt.show()","7ec6e372":"# Winsorize HIV\/AIDS\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_HIV = le['HIV\/AIDS']\nplt.boxplot(original_HIV)\nplt.title(\"original_HIV\")\n\nplt.subplot(1,2,2)\nwinsorized_HIV = winsorize(le['HIV\/AIDS'],(0,0.16))\nplt.boxplot(winsorized_HIV)\nplt.title(\"winsorized_HIV\")\n\nplt.show()","82876fe8":"# Winsorize GDP\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_GDP = le['GDP']\nplt.boxplot(original_GDP)\nplt.title(\"original_GDP\")\n\nplt.subplot(1,2,2)\nwinsorized_GDP = winsorize(le['GDP'],(0,0.13))\nplt.boxplot(winsorized_GDP)\nplt.title(\"winsorized_GDP\")\n\nplt.show()","874feb67":"# Winsorize Population\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Population = le['Population']\nplt.boxplot(original_Population)\nplt.title(\"original_Population\")\n\nplt.subplot(1,2,2)\nwinsorized_Population = winsorize(le['Population'],(0,0.14))\nplt.boxplot(winsorized_Population)\nplt.title(\"winsorized_Population\")\n\nplt.show()","b5fb9dd0":"# Winsorize thinness_1to19_years\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_thinness_1to19_years = le['thinness_1to19_years']\nplt.boxplot(original_thinness_1to19_years)\nplt.title(\"original_thinness_1to19_years\")\n\nplt.subplot(1,2,2)\nwinsorized_thinness_1to19_years = winsorize(le['thinness_1to19_years'],(0,0.04))\nplt.boxplot(winsorized_thinness_1to19_years)\nplt.title(\"winsorized_thinness_1to19_years\")\n\nplt.show()","d47d090d":"# Winsorize thinness_5to9_years\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_thinness_5to9_years = le['thinness_5to9_years']\nplt.boxplot(original_thinness_5to9_years)\nplt.title(\"original_thinness_5to9_years\")\n\nplt.subplot(1,2,2)\nwinsorized_thinness_5to9_years = winsorize(le['thinness_5to9_years'],(0,0.04))\nplt.boxplot(winsorized_thinness_5to9_years)\nplt.title(\"winsorized_thinness_5to9_years\")\n\nplt.show()","7beb3112":"# Winsorize Income_Comp_Of_Resources\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Income_Comp_Of_Resources = le['Income_Comp_Of_Resources']\nplt.boxplot(original_Income_Comp_Of_Resources)\nplt.title(\"original_Income_Comp_Of_Resources\")\n\nplt.subplot(1,2,2)\nwinsorized_Income_Comp_Of_Resources = winsorize(le['Income_Comp_Of_Resources'],(0.05,0))\nplt.boxplot(winsorized_Income_Comp_Of_Resources)\nplt.title(\"winsorized_Income_Comp_Of_Resources\")\n\nplt.show()","c82a5499":"# Winsorize Schooling\nfrom scipy.stats.mstats import winsorize\nplt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Schooling = le['Schooling']\nplt.boxplot(original_Schooling)\nplt.title(\"original_Schooling\")\n\nplt.subplot(1,2,2)\nwinsorized_Schooling = winsorize(le['Schooling'],(0.02,0.01))\nplt.boxplot(winsorized_Schooling)\nplt.title(\"winsorized_Schooling\")\n\nplt.show()","0b30bc4c":"# Check number of Outliers after Winsorization for each variable.\nwin_list = [winsorized_Life_Expectancy,winsorized_Adult_Mortality,winsorized_Infant_Deaths,winsorized_Alcohol,\n            winsorized_Percentage_Exp,winsorized_HepatitisB,winsorized_Under_Five_Deaths,winsorized_Polio,winsorized_Tot_Exp,winsorized_Diphtheria,winsorized_HIV,winsorized_GDP,winsorized_Population,winsorized_thinness_1to19_years,winsorized_thinness_5to9_years,winsorized_Income_Comp_Of_Resources,winsorized_Schooling]\n\nfor variable in win_list:\n    q75, q25 = np.percentile(variable, [75 ,25])\n    iqr = q75 - q25\n\n    min_val = q25 - (iqr*1.5)\n    max_val = q75 + (iqr*1.5)\n    \n    print(\"Number of outliers after winsorization : {}\".format(len(np.where((variable > max_val) | (variable < min_val))[0])))\n    \n    ","7e0f6707":"# Adding winsorized variables to the data frame.\nle['winsorized_Life_Expectancy'] = winsorized_Life_Expectancy\nle['winsorized_Adult_Mortality'] = winsorized_Adult_Mortality\nle['winsorized_Infant_Deaths'] = winsorized_Infant_Deaths\nle['winsorized_Alcohol'] = winsorized_Alcohol\nle['winsorized_Percentage_Exp'] = winsorized_Percentage_Exp\nle['winsorized_HepatitisB'] = winsorized_HepatitisB\nle['winsorized_Under_Five_Deaths'] = winsorized_Under_Five_Deaths\nle['winsorized_Polio'] = winsorized_Polio\nle['winsorized_Tot_Exp'] = winsorized_Tot_Exp\nle['winsorized_Diphtheria'] = winsorized_Diphtheria\nle['winsorized_HIV'] = winsorized_HIV\nle['winsorized_GDP'] = winsorized_GDP\nle['winsorized_Population'] = winsorized_Population\nle['winsorized_thinness_1to19_years'] = winsorized_thinness_1to19_years\nle['winsorized_thinness_5to9_years'] = winsorized_thinness_5to9_years\nle['winsorized_Income_Comp_Of_Resources'] = winsorized_Income_Comp_Of_Resources\nle['winsorized_Schooling'] = winsorized_Schooling\n","081cf75c":"# Descriptive statistics of continuous variables.\nle.describe()","c5a8cd6f":"# Distribution of each numerical variable.\nall_col = ['Life_Expectancy','winsorized_Life_Expectancy','Adult_Mortality','winsorized_Adult_Mortality','Infant_Deaths',\n         'winsorized_Infant_Deaths','Alcohol','winsorized_Alcohol','Percentage_Exp','winsorized_Percentage_Exp','HepatitisB',\n         'winsorized_HepatitisB','Under_Five_Deaths','winsorized_Under_Five_Deaths','Polio','winsorized_Polio','Tot_Exp',\n         'winsorized_Tot_Exp','Diphtheria','winsorized_Diphtheria','HIV\/AIDS','winsorized_HIV','GDP','winsorized_GDP',\n         'Population','winsorized_Population','thinness_1to19_years','winsorized_thinness_1to19_years','thinness_5to9_years',\n         'winsorized_thinness_5to9_years','Income_Comp_Of_Resources','winsorized_Income_Comp_Of_Resources',\n         'Schooling','winsorized_Schooling']\n\nplt.figure(figsize=(15,75))\n\nfor i in range(len(all_col)):\n    plt.subplot(18,2,i+1)\n    plt.hist(le[all_col[i]])\n    plt.title(all_col[i])\n\nplt.show()\n\n    ","923e08dd":"# Descriptive statistics of categorical variables.\nle.describe(include=['O'])","e265efbf":"# Life_Expectancy w.r.t Status using bar plot.\nplt.figure(figsize=(6,6))\nplt.bar(le.groupby('Status')['Status'].count().index,le.groupby('Status')['winsorized_Life_Expectancy'].mean())\nplt.xlabel(\"Status\",fontsize=12)\nplt.ylabel(\"Avg Life_Expectancy\",fontsize=12)\nplt.title(\"Life_Expectancy w.r.t Status\")\nplt.show()","8fd4a7e8":"# Life_Expectancy w.r.t Country using bar plot.\nle_country = le.groupby('Country')['winsorized_Life_Expectancy'].mean()\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Life_Expectancy w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Life_Expectancy\",fontsize=35)\nplt.show()","f0cf4517":"# Life_Expectancy w.r.t Year using bar plot.\nplt.figure(figsize=(7,5))\nplt.bar(le.groupby('Year')['Year'].count().index,le.groupby('Year')['winsorized_Life_Expectancy'].mean(),color='pink',alpha=0.65)\nplt.xlabel(\"Year\",fontsize=12)\nplt.ylabel(\"Avg Life_Expectancy\",fontsize=12)\nplt.title(\"Life_Expectancy w.r.t Year\")\nplt.show()","bf3daaf6":"# Scatter plot between the target variable(winsorized_Life_Expectancy) and all continuous variables.\nplt.figure(figsize=(18,40))\n\nplt.subplot(6,3,1)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Adult_Mortality\"])\nplt.title(\"LifeExpectancy vs AdultMortality\")\n\nplt.subplot(6,3,2)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Infant_Deaths\"])\nplt.title(\"LifeExpectancy vs Infant_Deaths\")\n\nplt.subplot(6,3,3)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Alcohol\"])\nplt.title(\"LifeExpectancy vs Alcohol\")\n\nplt.subplot(6,3,4)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Percentage_Exp\"])\nplt.title(\"LifeExpectancy vs Percentage_Exp\")\n\nplt.subplot(6,3,5)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_HepatitisB\"])\nplt.title(\"LifeExpectancy vs HepatitisB\")\n\nplt.subplot(6,3,6)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Under_Five_Deaths\"])\nplt.title(\"LifeExpectancy vs Under_Five_Deaths\")\n\nplt.subplot(6,3,7)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Polio\"])\nplt.title(\"LifeExpectancy vs Polio\")\n\nplt.subplot(6,3,8)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Tot_Exp\"])\nplt.title(\"LifeExpectancy vs Tot_Exp\")\n\nplt.subplot(6,3,9)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Diphtheria\"])\nplt.title(\"LifeExpectancy vs Diphtheria\")\n\nplt.subplot(6,3,10)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_HIV\"])\nplt.title(\"LifeExpectancy vs HIV\")\n\nplt.subplot(6,3,11)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_GDP\"])\nplt.title(\"LifeExpectancy vs GDP\")\n\nplt.subplot(6,3,12)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Population\"])\nplt.title(\"LifeExpectancy vs Population\")\n\nplt.subplot(6,3,13)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_thinness_1to19_years\"])\nplt.title(\"LifeExpectancy vs thinness_1to19_years\")\n\nplt.subplot(6,3,14)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_thinness_5to9_years\"])\nplt.title(\"LifeExpectancy vs thinness_5to9_years\")\n\nplt.subplot(6,3,15)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Income_Comp_Of_Resources\"])\nplt.title(\"LifeExpectancy vs Income_Comp_Of_Resources\")\n\nplt.subplot(6,3,16)\nplt.scatter(le[\"winsorized_Life_Expectancy\"], le[\"winsorized_Schooling\"])\nplt.title(\"LifeExpectancy vs Schooling\")\n\n\nplt.show()","8a3ab19f":"plt.figure(figsize=(20,8))\n\nplt.subplot(1,3,1)\nplt.scatter(le[\"winsorized_Schooling\"], le[\"winsorized_Adult_Mortality\"])\nplt.title(\"Schooling vs AdultMortality\")\n\nplt.subplot(1,3,2)\nplt.scatter(le[\"winsorized_Schooling\"], le[\"winsorized_Income_Comp_Of_Resources\"])\nplt.title(\"Schooling vs Income_Comp_Of_Resources\")\n\nplt.subplot(1,3,3)\nplt.scatter(le[\"winsorized_Adult_Mortality\"], le[\"winsorized_Income_Comp_Of_Resources\"])\nplt.title(\"AdultMortality vs Income_Comp_Of_Resources\")\n\nplt.show()","d7b94487":"# Correlation of winsorized variables\nle_win = le.iloc[:,21:]\nle_win['Country'] = le['Country']\nle_win['Year'] = le['Year']\nle_win['Status'] = le['Status']\nle_win_num = le_win.iloc[:,:-3]\ncormat = le_win_num.corr()","1a27b375":"# Using heatmap to observe correlations.\nimport seaborn as sns\n\nplt.figure(figsize=(15,15))\nsns.heatmap(cormat, square=True, annot=True, linewidths=.5)\nplt.title(\"Correlation matrix among winsorized variables\")\nplt.show()","22f9561e":"round(le[['Status','Life_Expectancy']].groupby(['Status']).mean(),2)","d0f4ef21":"# Finding the significance of difference of Average_Life_Expectancy between Developed and Developing countries using \n# t-test\nimport scipy.stats as stats\nstats.ttest_ind(le.loc[le['Status']=='Developed','Life_Expectancy'],le.loc[le['Status']=='Developing','Life_Expectancy'])","5b9a0d35":"# Create a data frame with features.\nfeature_df = le[['Status','winsorized_Life_Expectancy','winsorized_Income_Comp_Of_Resources','winsorized_HIV','winsorized_Adult_Mortality']]\n","1785eb09":"# Convert categorical values to numerical values using one-hot encoding for 'Status' feature.\nfeature_df = pd.concat([feature_df,pd.get_dummies(feature_df['Status'],drop_first=True)],axis=1)\nfeature_df.head()","4de3c32d":"<b>Exploratory Analysis:","735cf1d3":"<b>Detecting Outliers for each variable.","a32415a7":"winsorized_Life_Expectancy, winsorized_Tot_Exp, winsorized_Schooling are some what normally distributed.","0891e377":"> <b>Univariate Analysis","edbc6f00":"<b>Winsorization changes 19% of the data, which may not give better results. Hence drop this column.","938f7fee":"Looks like all these variables have inter-relation. Let us confirm this using correlation heatmap.","ec651eee":"Let us observe if there exists any correlation among the variables that are related to the target variable(winsorized_Life_Expectancy).","16c5d963":"<b>Note: Used interpolation to fill missing values since our data set is a time series one.","6ba98532":"Our goal in this challenge is to find the factors that affect the life expectancy. So, the target variable is Life_Expectancy. First we start with data cleaning by detecting and removing null-values and treating outliers. Then we move to Data Exploration and Feature Engineering. Do not forget that the target variable in our scenario is <b>\"Life_Expectancy\"<\/b>.","8465d5eb":"<b>Observations:<\/b><br\/>\n- winsorized_Income_Comp_Of_Resources is correlated with winsorized_Schooling. <br\/>\n- winsorized_thinness_1to19_years and winsorized_thinness_5to9_years are correlated. <br\/>\n- winsorized_Polio and winsorized_Diphtheria are correlated. <br\/>\n- winsorized_Percentage_Exp and winsorized_GDP are correlated. <br\/>\n- winsorized_Income_Comp_Of_Resources and <b>winsorized_Life_Expectancy<\/b> are correlated. <br\/>\n- <b>winsorized_Life_Expectancy<\/b> and winsorized_Schooling are correlated. <br\/>\n- winsorized_Infant_Deaths and winsorized_Under_Five_Deaths are correlated. <br\/>\n- winsorized_HIV has negative relation with <b>winsorized_Life_Expectancy<\/b>. <br\/>\n- winsorized_Adult_Mortality has negative relation with <b>winsorized_Life_Expectancy<\/b>. <br\/>","06b90d45":"<b>Data Cleaning:<\/b>","3a1e6a1c":"Also, many machine learning models assume that all features have values in the same range (all features have a min of 0 and max of 1, for example) or they exhibit normal statistical properties. For some techniques, features that vary in range can result in incorrect estimates and results. To be able to apply these techniques and methods, we need to rescale our variables to fit a limited range, or standardize our variables to exhibit some regular statistical patterns. In this case, we can use two concepts of rescaling: <b>normalization<\/b> and <b>standardization<\/b>.","c072d7bb":"<b>Feature engineering:","14737a4f":"<b>Remove null values using interpolate()","15d7b590":"Many machine learning models assume the target variable to be normally distributed. If normality is an assumption non-normal variables can be transformed into normally distributed features using transformations such as taking the square root, the inverse, or the log of the variable, or by applying the Box-Cox transformation.","69c30856":"<b>Observation:<\/b><br\/>\nLife_Expectancy has somewhat Negative relationship with AdultMortality.<br\/>\nLife_Expectancy has positive relationship with Income_Comp_Of_Resources and Schooling.","925a0bf6":"Let us create a new data frame with feature columns correlated to Life_Expectancy. As per the correlation heatmap, it<br\/> is clear that the following fields are correlated with winsorized_Life_Expectancy.<br\/>\n\n- winsorized_Schooling<br\/>\n- winsorized_Income_Comp_Of_Resources<br\/>\n- winsorized_HIV<br\/>\n- winsorized_Adult_Mortality<br\/>\n\nAlso it is to be noticed that winsorized_Income_Comp_Of_Resources is correlated with winsorized_Schooling.<br\/>\nAll the features should NOT be inter related and hence let us eliminate one of these based on the correlation<br\/> value w.r.t winsorized_Life_Expectancy.<br\/>\n\n- winsorized_Income_Comp_Of_Resources corr with winsorized_Life_Expectancy = 0.82<br\/>\n- winsorized_Schooling corr with winsorized_Life_Expectancy = 0.76<br\/>\n\nLet us eliminate winsorized_Schooling as it has relatively low correlation factor. Also, we can choose 'Status' as an important feature based on the above analysis.","7a9b23d7":"Yes, the data looks correct w.r.t the dataypes.","0df2485d":"From the above, developed countries have higher average Life_Expectancy compared to Developing.<br\/>\nLet us find out statistically if this difference is significant.","7e20a328":"![](http:\/\/)<b>p value is < 0.05<br\/>\nHence, the difference of Average_Life_Expectancy between Developed and Developing countries is significant. We can consider 'Status' as a feature as it is related to Life Expectancy."}}