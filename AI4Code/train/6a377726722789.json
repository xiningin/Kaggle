{"cell_type":{"9a45faba":"code","4879d4d6":"code","ca6ad530":"code","d24bb36c":"code","73dd24df":"code","6b51b68f":"code","2fa903a8":"code","029caf9c":"code","eaed7590":"code","f7ee9d81":"code","16130a93":"code","7b556aab":"code","7b796ea8":"code","728591dc":"code","1d16d4a3":"code","f46713d5":"code","9930008b":"code","587cf9ea":"code","b6904d79":"code","8f4cac26":"code","e30d0812":"code","6f964749":"code","b08fe6b3":"code","f566ee13":"code","64c9de86":"code","e3797466":"code","93b03e89":"code","c3b30bac":"code","5e52f406":"markdown","572cb671":"markdown","67906f5a":"markdown","639c1272":"markdown","9651ca19":"markdown","a25a4dbf":"markdown"},"source":{"9a45faba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques","4879d4d6":"# Read the dataset\ndf = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")","ca6ad530":"df.head(10)","d24bb36c":"from IPython.core.display import HTML # permet d'afficher du code html dans jupyter\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\ndisplay(HTML(df.head(10).to_html()))","73dd24df":"df.columns","6b51b68f":"columns = df.columns\ncolumns = columns.drop(['Time'])","2fa903a8":"#sns.pairplot(df, hue = \"Class\")","029caf9c":"from sklearn.model_selection import train_test_split\n\nX = df.drop(['Class'], axis=1)\ny = df.Class\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","eaed7590":"from sklearn import ensemble\n\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","f7ee9d81":"from matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn import metrics\nfrom sklearn import preprocessing\nfrom sklearn import model_selection\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score\n\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.model_selection import train_test_split\n\nfrom IPython.core.display import HTML # permet d'afficher du code html dans jupyter\n\nprint(classification_report(y_test, y_rf))","16130a93":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","7b556aab":"df.Class.value_counts()","7b796ea8":"from imblearn.under_sampling import RandomUnderSampler \n\nrus = RandomUnderSampler()\nX_train, y_train = rus.fit_resample(X_train, y_train)","728591dc":"y_train.value_counts()","1d16d4a3":"rf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)\n\nprint(classification_report(y_test, y_rf))\n\ncm = confusion_matrix(y_test, y_rf)\nprint(cm)","f46713d5":"X = df.drop(['Class'], axis=1)\ny = df.Class\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","9930008b":"from imblearn.over_sampling import SMOTE\n\nsmote = SMOTE()\nX_train, y_train = smote.fit_resample(X_train, y_train)","587cf9ea":"y_train.value_counts()","b6904d79":"from sklearn import ensemble\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","8f4cac26":"print(classification_report(y_test, y_rf))","e30d0812":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","6f964749":"from xgboost import XGBClassifier\nxgb = XGBClassifier()\nxgb.fit(X_train,y_train)\nprint(xgb.score(X_test,y_test))","b08fe6b3":"y_xgb = xgb.predict(X_test)\n\nprint(classification_report(y_test, y_xgb))\n\ncm = metrics.confusion_matrix(y_test, y_xgb)\nprint(cm)","f566ee13":"X = df.drop(['Class'], axis=1)\ny = df.Class\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","64c9de86":"df.Class.value_counts()","e3797466":"from xgboost import XGBClassifier\nxgb = XGBClassifier(scale_pos_weight=2278\/388)\n# xgb = XGBClassifier()\nxgb.fit(X_train,y_train)\ny_xgb = xgb.predict(X_test)","93b03e89":"print(classification_report(y_test, y_xgb))","c3b30bac":"cm = confusion_matrix(y_test, y_xgb)\nprint(cm)","5e52f406":"# XGBoost pond\u00e9r\u00e9","572cb671":"# Extreme Gradient Boosting : XGBoost avec sur\u00e9chantillonage SMOTE","67906f5a":"# For\u00eats al\u00e9atoires","639c1272":"# Sous-\u00e9chantillonage","9651ca19":"# Visualization","a25a4dbf":"# Sur\u00e9chantillonnage"}}