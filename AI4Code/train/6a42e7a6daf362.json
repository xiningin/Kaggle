{"cell_type":{"88d56dab":"code","4ac0d9fc":"code","9c27d830":"code","6698a43b":"code","a8ddbc7e":"code","08d25ffd":"code","6cc4fe69":"code","60b6155d":"code","103e1be5":"code","0c793381":"code","5e7c6311":"code","269ddcf5":"code","fa5ef1e8":"code","910b6b90":"markdown","51806925":"markdown","8c6996c3":"markdown","d4b3d63f":"markdown","3e6a99b2":"markdown","8d0e8664":"markdown","2ffb14a4":"markdown","2eb9eeb4":"markdown","2c5b6164":"markdown","03f3161a":"markdown"},"source":{"88d56dab":"from __future__ import absolute_import, division, print_function, unicode_literals\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras as ks\nprint(tf.__version__)","4ac0d9fc":"mnist_fashion = ks.datasets.fashion_mnist\n(training_images, training_labels), (test_images, test_labels) = mnist_fashion.load_data()","9c27d830":"print(training_images.shape)\nprint(training_labels.shape)\nprint(test_images.shape)\nprint(test_labels.shape)","6698a43b":"training_images = training_images \/255.0\ntest_images = test_images \/ 255.0","a8ddbc7e":"training_images = training_images.reshape((60000, 28, 28, 1))\ntest_images = test_images.reshape((10000,28,28,1))\n\nprint(training_images.shape)\nprint(test_images.shape)","08d25ffd":"cnn_model = ks.models.Sequential()\ncnn_model.add(ks.layers.Conv2D(50,(3,3), activation='relu', input_shape=(28,28,1), name='Conv2D_layer'))","6cc4fe69":"cnn_model.add(ks.layers.MaxPooling2D((2,2), name='Maxpooling_2D'))","60b6155d":"cnn_model.add(ks.layers.Flatten(name='Flatten'))\ncnn_model.add(ks.layers.Dense(50, activation='relu', name='Hidden_layer'))\ncnn_model.add(ks.layers.Dense(10, activation='softmax', name='Output_layer'))","103e1be5":"cnn_model.summary()","0c793381":"cnn_model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])","5e7c6311":"cnn_model.fit(training_images, training_labels, epochs=10)","269ddcf5":"training_loss, training_accuracy = cnn_model.evaluate(training_images, training_labels)\nprint('Training accuracy {}'.format(round(float(training_accuracy), 2)))","fa5ef1e8":"test_loss,test_accuracy = cnn_model.evaluate(test_images, test_labels)\nprint('Test Accuracy {}'.format(round(float(test_accuracy),2)))","910b6b90":"Now, let\u2019s build the different layers of the model. We will be using the \nKeras implementation to build the different layers of a CNN. We will keep \nit simple, by having only three layers.\n\nFirst layer\u2014convolutional layer with ReLU activation \nfunction: This layer takes the 2D array (28 \u00d7 28 pixels) \nas input. We will take 50 convolutional kernels (filters) \nof shape 3 \u00d7 3 pixels. The output of which will be \npassed to a ReLU activation function before being \npassed to the next layer.","51806925":"Second layer\u2014pooling layer: This layer takes the 50 \n26 \u00d7 26 2D arrays as input and transforms them into \nthe same number (50) of arrays, with dimensions half \nthat of the original (i.e., from 26 \u00d7 26 to 13 \u00d7 13 pixels)","8c6996c3":"reshaping the matrix as 28 * 28 * 1","d4b3d63f":"Lets check the different layers thorugh summary method.","3e6a99b2":"Model training:","8d0e8664":"Model evaluation:","2ffb14a4":"Of the total 70,000 images, 60,000 are used for training and the \nremaining 10,000 for testing. The labels are integer arrays ranging from \n0 to 9. The class names are not a part of the data set. ","2eb9eeb4":"As the pixel values range from 0 to 255, we will scale those values in \nthe range of 0 to 1 before pushing them to the model. We can scale these \nvalues (both for training and test data sets) by dividing the values by 255.","2c5b6164":"Now we will use an optimization function with the help of the \ncompile method. An Adam optimizer with objective function sparse_\ncategorical_crossentropy, which optimizes for the accuracy metric, can \nbe built as follows:","03f3161a":"Third layer\u2014fully connected layer: This layer takes the \n50 13 \u00d7 13 2D arrays as input and transforms them into \na 1D array of 8450 elements (50 \u00d7 13 \u00d7 13). These 8450 \ninput elements are passed through a fully connected \nneural network that gives the probability scores for \neach of the 10 output labels (at the output layer)."}}