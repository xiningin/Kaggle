{"cell_type":{"56d8f58a":"code","c18884b4":"code","94f88a72":"code","e9f86706":"code","0ad36c69":"code","b3ef805c":"code","c66febe3":"code","b6c3394d":"code","1b06aab0":"code","9ca5a38d":"code","bf6504fe":"code","7e2bff6e":"code","981e17f6":"code","9b2adff9":"markdown","800f506a":"markdown","9a33725a":"markdown"},"source":{"56d8f58a":"import sys, warnings\nwarnings.filterwarnings(\"ignore\")\nsys.path.append('..\/input\/iterativestratification')\n\nimport pandas as pd, numpy as np\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import KFold\nfrom iterstrat.ml_stratifiers import MultilabelStratifiedKFold\n\nfrom sklearn.metrics import log_loss\n\nimport cuml\nprint('RAPIDS',cuml.__version__)","c18884b4":"train = pd.read_csv('..\/input\/lish-moa\/train_features.csv')\nprint('train shape',train.shape)\ntest = pd.read_csv('..\/input\/lish-moa\/test_features.csv')\nprint('test shape',test.shape)\ntargets = pd.read_csv('..\/input\/lish-moa\/train_targets_scored.csv')","94f88a72":"train.cp_dose = train.cp_dose.map({'D1':-1,'D2':1})\ntest.cp_dose = test.cp_dose.map({'D1':-1,'D2':1})\n\ntrain.cp_time = train.cp_time.map({24:-1, 48:0, 72:1})\ntest.cp_time = test.cp_time.map({24:-1, 48:0, 72:1})\n\ntrain.cp_type = train.cp_type.map({'trt_cp':-1, 'ctl_vehicle':1})\ntest.cp_type = test.cp_type.map({'trt_cp':-1, 'ctl_vehicle':1})\n\ntrain.head()","e9f86706":"target = targets['5-alpha_reductase_inhibitor']","0ad36c69":"print(train.shape)\nprint(target.shape)","b3ef805c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train, target, test_size = 0.2, random_state = 0)","c66febe3":"X_train.shape","b6c3394d":"y_train.shape","1b06aab0":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom sklearn.model_selection import cross_val_score\n\n# Instantiate learning model (k = 3)\nclassifier = KNeighborsClassifier(n_neighbors=3)","9ca5a38d":"train.iloc[:,1:]\ntarget","bf6504fe":"import cudf, cuml\nfrom cuml.neighbors import KNeighborsClassifier as cuKNeighbors\nmodel = cuKNeighbors(n_neighbors=3)\nmodel.fit(train.iloc[:,1:], target)","7e2bff6e":"X_test","981e17f6":"y_hat = model.predict(X_test.iloc[:, 1:])\ny_hat","9b2adff9":"# RAPIDS CuML\nThe RAPIDS library is now available in all Kaggle notebooks. Hooray! Simply type `import cuml` or `import cudf` to load the two most popular packages.\n\nRAPIDS is described [here][1]. RAPIDS `cuDF` accelerates dataframe operations using GPU and has a similar api as Pandas. RAPIDS `cuML` accelerates machine learning algorithms using GPU and has a similar api as Scikit-Learn. Since RAPIDS ML algorithms are so fast, we can do things that were never possible like applying genetic algorithms to ML hyperparameter searchs!\n\n[1]: https:\/\/rapids.ai\/","800f506a":"# Load Libraries","9a33725a":"# Load Data"}}