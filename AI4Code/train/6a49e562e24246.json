{"cell_type":{"c6e83629":"code","f5b7649f":"code","1cca9b69":"code","c8b99416":"code","e589d3d9":"code","af64f661":"code","d88d170b":"code","a803d3b8":"code","40baf591":"code","6edfaf5e":"markdown"},"source":{"c6e83629":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f5b7649f":"data_frame = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\nprint(plt.style.available)\nplt.style.use('ggplot')","1cca9b69":"data_frame\n","c8b99416":"data_frame.info()","e589d3d9":"data_frame.describe()","af64f661":"color_list = ['red' if i=='Abnormal' else 'green' for i in data_frame.loc[:,'class']]\npd.plotting.scatter_matrix(data_frame.loc[:, data_frame.columns != 'class'],\n                                       c=color_list,\n                                       figsize= [15,15],\n                                       diagonal='hist',\n                                       alpha=0.5,\n                                       s = 200,\n                                       marker = '*',\n                                       edgecolor= \"black\")\nplt.show()\n","d88d170b":"sns.countplot(x=\"class\", data=data_frame)\ndata_frame.loc[:,'class'].value_counts()","a803d3b8":"data = data_frame[data_frame['class']=='Abnormal']\nx = np.array(data.loc[:,'pelvic_incidence']).reshape(-1,1)\ny = np.array(data.loc[:,'sacral_slope']).reshape(-1,1)\n#Scatter\nplt.figure(figsize=[10,10])\nplt.scatter(x=x,y=y)\nplt.xlabel(\"pelvic_incidence\")\nplt.ylabel(\"sacral_slope\")\nplt.show()","40baf591":"from sklearn.linear_model import LinearRegression\nregression = LinearRegression()\n\npredict = np.linspace(min(x),max(x)).reshape(-1,1)\n\nregression.fit(x,y)\n\npredicted = regression.predict(predict)\n\nprint(\"R^2 score: \",regression.score(x,y))\n\nplt.plot(predict,predicted,color=\"black\",linewidth=3)\nplt.scatter(x=x,y=y)\nplt.xlabel(\"pelvic_incidence\")\nplt.ylabel(\"sacral_slope\")\nplt.show()","6edfaf5e":"# Linear Regression"}}