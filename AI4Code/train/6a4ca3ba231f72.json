{"cell_type":{"7e932646":"code","35f91f64":"code","4dcfa8a8":"code","a08918ec":"code","456e2e80":"code","37b44008":"code","bfde8494":"code","4bd7ff61":"code","e977b81a":"code","c7c6c9e1":"code","1cf6a28e":"code","49306426":"code","6be82438":"code","aab96dfe":"code","a8941267":"code","fecc581b":"code","77508c98":"code","2cc55410":"code","d1a6b943":"code","3887be0c":"code","cd9afd29":"code","6db6ea0c":"code","40be8ff9":"code","499d1a06":"code","b22d7f46":"code","b9e142db":"code","d1049343":"code","ff88c9d6":"code","4e85dba3":"code","7691eb89":"code","857c01ba":"code","30fc6a90":"code","f020aba6":"code","83e698dd":"code","d611cdc4":"code","560f8cc1":"code","6699fd86":"code","ed78e052":"code","a3ec9462":"code","b85a2078":"code","8decdb57":"code","280053b5":"code","86f6258d":"code","217093b5":"code","365007ab":"code","fdfc9046":"code","e3049556":"code","f9f9bcec":"code","84840eaf":"code","aea8003b":"code","1e7bf58e":"code","fba06152":"code","f76b4821":"code","145e13ef":"code","7cb4ed76":"code","2ab6d9b2":"code","87b06eed":"code","c49c2ee3":"code","0f772f79":"code","4d014042":"code","66347a46":"code","685a35f0":"code","4de93edc":"code","e2c771fa":"markdown","29c3e774":"markdown","fc1abec2":"markdown","6aa83e0e":"markdown","e0f9ac82":"markdown"},"source":{"7e932646":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","35f91f64":"df = pd.read_csv('..\/input\/heartatack\/heart.csv')","4dcfa8a8":"df","a08918ec":"df.info()","456e2e80":"columnas = df.columns.values.tolist()\nlen(columnas)\ntype(columnas.index('restecg'))","37b44008":"fig, axs = plt.subplots(2,7,figsize=(30, 13))\nn=0\nfor columna in columnas:\n    \n    \n    if columnas.index(columna) < 7:\n        axs[0,columnas.index(columna)].boxplot(df[columna])\n        axs[0,columnas.index(columna)].set_title(columna)\n    else:\n        \n        axs[1,n].boxplot(df[columna])\n        axs[1,n].set_title(columna)\n        n+=1\n        \n\nplt.show()","bfde8494":"plt.boxplot(df['caa'])","4bd7ff61":"df[df['caa']>2.5]['caa'].unique()","e977b81a":"df[df['trtbps']> 170 ]['trtbps'].unique()","c7c6c9e1":"plt.hist(df['trtbps'])","1cf6a28e":"plt.hist(df['thalachh'])","49306426":"df","6be82438":"# compruebo si hay valores nulos en alguno columna\nfor i in columnas:\n    print(i,pd.isnull(df[i]).values.sum())\n","aab96dfe":"#df.drop(columns=['slp','caa','thall'],inplace=True)\n\nY = df.iloc[:,-1]\nX = df.iloc[:,:-1]\n","a8941267":"X","fecc581b":"from sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LogisticRegression","77508c98":"lr = LogisticRegression(max_iter=1000)","2cc55410":"rfe = RFE(lr,10)","d1a6b943":"rfe = rfe.fit(X,Y)","3887be0c":"rfe.support_","cd9afd29":"rfe.ranking_","6db6ea0c":"ranking = list(zip(rfe.ranking_,columnas))\nranking.sort()\n\n","40be8ff9":"ranking","499d1a06":"from sklearn import preprocessing\nscaler = preprocessing.StandardScaler().fit(X)\nscaler","b22d7f46":"scaler.scale_","b9e142db":"x = scaler.transform(X)\nx","d1049343":"y = Y.values","ff88c9d6":"model = LogisticRegression()\nmodel.fit(x,y)","4e85dba3":"model.score(x,y)","7691eb89":"y.mean()","857c01ba":"model.coef_","30fc6a90":"pd.DataFrame(list(zip(X.columns,np.transpose(model.coef_))),columns=[['Variable','Probabilidad']])","f020aba6":"# validacion del modelo\n","83e698dd":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","d611cdc4":"X_train,x_test,Y_train,y_test = train_test_split(x,y,test_size=0.30, random_state=0)","560f8cc1":"model = LogisticRegression()\n","6699fd86":"model.fit(X_train,Y_train)","ed78e052":"prediccion = model.predict(x_test)","a3ec9462":"confussion_matrix = metrics.confusion_matrix(y_test,prediccion)","b85a2078":"confussion_matrix","8decdb57":"mc = pd.DataFrame(confussion_matrix)","280053b5":"import seaborn as sns\n\nsns.heatmap(mc,annot=True)","86f6258d":"metrics.accuracy_score(y_test,prediccion) # Eficiencia de la prediccion","217093b5":"model.score(x_test,y_test)","365007ab":"from sklearn.model_selection import cross_val_score\nfrom sklearn import linear_model","fdfc9046":"scores = cross_val_score(linear_model.LogisticRegression(),x,y,scoring='accuracy',cv=8)","e3049556":"scores","f9f9bcec":"scores.mean()","84840eaf":"\nconfussion_matriz = pd.DataFrame(columns=['No_sufre_ataque','Sufre_ataque'],index=['No_sufre_ataque','Sufre_ataque'],data=mc.values)\nprint('verdadero negativo:', confussion_matrix[0,0])\nprint('Falso negativo o error tipo 2:', confussion_matrix[1,0])\nprint('Verdadero Positivo:', confussion_matrix[1,1])\nprint('Falso Positivo o error tipo 1:', confussion_matrix[0,1])\nconfussion_matriz","aea8003b":"\nsensibilidad = 42\/(42+5)\nespecifidad = 32\/(32+12)","1e7bf58e":"sensibilidad","fba06152":"especifidad","f76b4821":"probs = model.predict_proba(x_test)\nprob = probs[:,1] \n#probs  \n# La segunda columna es la probabilidad calculada por el algoritmo de sklearn\n# Calculada con el metodo de maxima versomilititud\n# Como son valores entre 0 y 1 el algoritmo por defecto tiene un threshold de 0.5, entonces si p>=0.5 la prediccion es 1 y 0 si p<0.5","145e13ef":"# Cuantas predicciones son 1 o 0 calculadas por el algoritmo con un threshold por defecto (0.5)\nprediction = model.predict(x_test)\n \npd.crosstab(prediction,columns='counts')","7cb4ed76":"# Se puede modificar el threshold de la probabilidad en este caso a un 0.70\n# Por que hago eso? \n# Para\nprediction2 = pd.DataFrame(prob)\nprediction2['Predict'] = np.where(prediction2[0]>0.70,1,0)\n\npd.crosstab(prediction2.Predict,columns='counts')  ","2ab6d9b2":"print(sensibilidad,especifidad)","87b06eed":"pd.crosstab(prediction,y_test,colnames=['Prediccion'],rownames=['valor_real'])","c49c2ee3":"especifidad_1,sensibilidad, \u00f1 = metrics.roc_curve(y_test,prob) ","0f772f79":"sensibilidad","4d014042":"especifidad_1","66347a46":"area_bajo_curva = metrics.auc(especifidad_1,sensibilidad)\narea_bajo_curva\n\nfig = plt.figure(figsize=(8,5))\nplt.plot(especifidad_1,sensibilidad,marker='o',linestyle='--',color='r')\nx =[i*0.01 for i in range(100)]\ny = [i*0.01 for i in range(100)]\nplt.plot(x,y)\nplt.fill_between(especifidad_1,sensibilidad,\n                where = (sensibilidad>0) & (sensibilidad<=8),\n                color='grey',alpha=0.7)\nplt.text(0.3,0.2,f'AreaBajoCurva: {area_bajo_curva}')\n\nplt.title('Curva ROC')\nplt.xlabel('1-sensibilida')\nplt.ylabel('Especifidad')","685a35f0":"\narea_bajo_curva = metrics.auc(especifidad_1,sensibilidad)\narea_bajo_curva","4de93edc":"model.predict(x_test)","e2c771fa":"## Curva ROC del modelo","29c3e774":"## Implementacion del modelo","fc1abec2":"## Validacion cruzada para el modelo\n","6aa83e0e":"## Selecci\u00f3n de variables significativas para este modelo","e0f9ac82":"# Exploraci\u00f3n de los datos"}}