{"cell_type":{"1033bfc4":"code","678576d7":"code","a1512748":"code","09338319":"code","0b03bdb2":"code","d1772c3c":"code","a9ab75c6":"code","d54ac3dd":"code","df383cff":"code","744ed660":"code","785a8933":"code","8c3ee764":"code","6b374540":"code","ec359a5a":"code","bb806b81":"code","8dde6024":"code","700738c3":"code","e3a924f6":"code","38e068bb":"code","3dfa0ac5":"code","5eda16bf":"code","a5c26e9e":"code","8d5df863":"code","4dd87382":"code","52533412":"code","3b5d3d31":"code","f836a6fb":"code","b36edfc2":"code","1eabbf03":"code","21875e47":"code","4af53296":"code","9a985f98":"code","03543536":"code","16aae754":"markdown","499451f3":"markdown","1faa2285":"markdown","ddc72eeb":"markdown","cedc0b7e":"markdown","8a945881":"markdown","f3f24c46":"markdown","a01ed8da":"markdown","7c5f1e3a":"markdown","4da36a8a":"markdown","9b3ff6fe":"markdown","ab2046ee":"markdown","079d56ba":"markdown","09c66b7d":"markdown","ce56ef17":"markdown"},"source":{"1033bfc4":"# importing libraries \nimport pandas as pd\nimport numpy\nimport os\nfrom sklearn.ensemble import RandomForestClassifier\nfrom datetime import datetime\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\n","678576d7":"# library to save the model\nimport pickle","a1512748":"# to read the file from the location and process it to save it in a 2D list, with removing excess symbols like (';')\n# each row in the list comprises of a separate data instance\ndef process(path_to_folder):\n    train = []\n    for root, dirs, files in os.walk(path_to_folder):\n        for file in files:\n            if file.endswith('.txt'):\n                with open(os.path.join(root, file), 'r') as f:\n                    text = f.read()\n                    temp = text.split(';\\n')\n                    final = []\n                    for i in range (len(temp)):\n                        a = temp[i].split(',')\n                        final.append(a)\n                \n                    train = train[:] + final\n                    \n    return train\n    ","09338319":"# processing the data\n\ntrainphoneaccel = process('..\/input\/prithviai-activitydetection\/data\/train\/phone\/accel')\ntrainphonegyro = process('..\/input\/prithviai-activitydetection\/data\/train\/phone\/gyro')\ntrainwatchaccel = process('..\/input\/prithviai-activitydetection\/data\/train\/watch\/accel')\ntrainwatchgyro = process('..\/input\/prithviai-activitydetection\/data\/train\/watch\/gyro')","0b03bdb2":"trainphoneaccel[:10]","d1772c3c":"train = trainphoneaccel + trainphonegyro + trainwatchaccel + trainwatchgyro","a9ab75c6":"len(train)","d54ac3dd":"def transform(data):\n    data = data[:-1]\n    data = pd.DataFrame(data, columns = ['Subject-id', 'Activity Label', 'Timestamp', 'x', 'y', 'z'])\n    return data","df383cff":"train = transform(train)","744ed660":"train.shape","785a8933":"# convert the elements of the dataframe from string to numeric\ntrain = train.convert_objects(convert_numeric=True)","8c3ee764":"train.head()","6b374540":"# removing all the null values from the dataframe\ntrain = train.dropna(subset = ['Subject-id','Timestamp', 'Activity Label','x', 'y', 'z'])","ec359a5a":"label = train['Activity Label'].unique()","bb806b81":"l={}\nn=0\nfor i in label:\n    l[i] = n+1\n    n+=1\n\ntrain['Activity Label'] = train['Activity Label'].apply(lambda x: l[x])","8dde6024":"train.head()","700738c3":"testphoneaccel = process('..\/input\/prithviai-activitydetection\/data\/test\/phone\/accel')\ntestphonegyro = process('..\/input\/prithviai-activitydetection\/data\/test\/phone\/gyro')\ntestwatchaccel = process('..\/input\/prithviai-activitydetection\/data\/test\/watch\/accel')\ntestwatchgyro = process('..\/input\/prithviai-activitydetection\/data\/test\/watch\/gyro')","e3a924f6":"test = testphoneaccel + testphonegyro + testwatchaccel + testwatchgyro","38e068bb":"test = transform(test)","3dfa0ac5":"test = test.convert_objects(convert_numeric=True)","5eda16bf":"test = test.dropna(subset = ['Subject-id','Timestamp', 'Activity Label','x', 'y', 'z'])","a5c26e9e":"l={}\nn=0\nfor i in label:\n    l[i] = n+1\n    n+=1\n\ntest['Activity Label'] = test['Activity Label'].apply(lambda x: l[x])","8d5df863":"train['Timestamp'] = train['Timestamp'].apply(lambda x: x\/\/1000000)\ntrain['Timestamp'] = train['Timestamp'].apply(lambda x: datetime.fromtimestamp(x))\ntest['Timestamp'] = test['Timestamp'].apply(lambda x: x\/\/1000000)\ntest['Timestamp'] = test['Timestamp'].apply(lambda x: datetime.fromtimestamp(x))\ntrain.drop(columns=\"Subject-id\",inplace=True)\ntest.drop(columns=\"Subject-id\",inplace=True)","4dd87382":"for time in ('year','month','week','day','hour','minute','second'):\n    train[time] = getattr(train['Timestamp'].dt,time)\ntrain.drop(columns=\"Timestamp\",inplace=True)\n\nfor time in ('year','month','week','day','hour','minute','second'):\n    test[time] = getattr(test['Timestamp'].dt,time)\ntest.drop(columns=\"Timestamp\",inplace=True)","52533412":"train.head()","3b5d3d31":"train = train.sample(frac=1).reset_index(drop=True)\ntest = test.sample(frac=1).reset_index(drop=True)\ndata=pd.DataFrame()\ndata=pd.concat([train,test])","f836a6fb":"y=data[\"Activity Label\"]\nx=data.drop(columns=\"Activity Label\")\nx_train, x_test, y_train, y_test = train_test_split(x,y , train_size = 0.7, random_state =  42)","b36edfc2":"model = RandomForestClassifier()\nmodel.fit(x_train, y_train)\n","1eabbf03":"y= model.predict(x_test)\nacc = accuracy_score(y_test, y)","21875e47":"acc","4af53296":"filename = 'finalized_model.sav'\npickle.dump(model, open(filename, 'wb'))","9a985f98":"df = pd.DataFrame(y)","03543536":"df.to_csv('answer.csv')","16aae754":"## About Data\nThe raw sensor data is located in the directory. Each user has its own data file which is tagged with their<br>\nsubject id, the sensor, and the device. Within the data file, each line is:<br>\nSubject-id, Activity Label, Timestamp, x, y, z\n\nThe features are defined as follows:\n* subject-id: Identifies the subject and is an integer value between 1600 and 1650.\n* activity-label: see Table 2 for a mapping from 18 characters to the activity name\n* timestamp: time that the reading was taken (Unix Time)\n* x: x sensor value (real valued)\n* y: y sensor value (real valued)\n* z: z sensor value (real valued)","499451f3":"### Comining all the data to store in a separate variable to be easily able to train the model","1faa2285":"The code is divided in 5 parts :\n\n[1.Importing the libraries](#1)<br>\n[2. Loading and processing the Data](#2)<br>\n[3. Traning the model](#3)<br>\n[4. Predicting the output and calculating the accuracy](#4)<br>\n[5. Saving the model](#5)","ddc72eeb":"# Activity Detection\n\nHuman Activity Detection is the problem of predicting what a person is doing based on a trace of their\nmovement using sensors.\n","cedc0b7e":"## <a name=\"3\"><\/a>3. Traning the model","8a945881":"### preparing the test data just like we did train data ","f3f24c46":"Table 2 lists the 18 activities that were performed. The actual data files specify the activities using the\ncode from Table 2. Similar activities are not necessarily grouped together (e.g., eating activities are not\nall together).\n![image.png](attachment:image.png)\n","a01ed8da":"![image.png](attachment:image.png)","7c5f1e3a":"### converting the label from characters to integers","4da36a8a":"## <a name=\"4\"><\/a>4. Predicting the output and calculating the accuracy","9b3ff6fe":"### Converting the data from the list into an dataframe","ab2046ee":"## <a name=\"2\"><\/a> 2. Loading and processing the Data","079d56ba":"## <a name=\"5\"><\/a>5. Saving the model","09c66b7d":"The \"Human Activity Detection Dataset\" includes data collected from 34 subjects, each of whom were\nasked to perform 18 tasks for 3 minutes each. Each subject had a smartwatch placed on his\/her\ndominant hand and a smartphone in their pocket. The data collection was controlled by a custom-made\napp that ran on the smartphone and smartwatch. The sensor data that was collected was from the\naccelerometer and gyroscope on both the smartphone and smartwatch, yielding four total sensors. The\nsensor data was collected at a rate of 20 Hz (i.e., every 50ms). The smartphone was either the Google\nNexus 5\/5X or Samsung Galaxy S5 running Android 6.0 (Marshmallow). The smartwatch was the LG G\nWatch running Android Wear 1.5. The general characteristics of the data and data collection process are\nsummarized in Table 1. More detailed information is presented later in this document.\n\n![image.png](attachment:image.png)","ce56ef17":"## <a name=\"1\"><\/a>1. Importing the libraries"}}