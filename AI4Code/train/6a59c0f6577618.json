{"cell_type":{"680b2a93":"code","005be775":"code","c0f73631":"code","d3adf361":"code","7720277c":"code","5d259f12":"code","f8e45960":"code","2eed3710":"code","cee9c933":"code","147e8247":"code","220ad294":"code","4b86ccad":"code","23b36398":"code","6ce46bdc":"code","98f7e86b":"code","5f681778":"code","51f32093":"code","b2fdd9f1":"code","6f42f2bb":"code","c63687d1":"code","188068d5":"code","f2039920":"code","b8f588b6":"markdown","ef4abd34":"markdown","2c7de6e8":"markdown","4bc57d78":"markdown","1394fd4d":"markdown","1a75a6aa":"markdown","2abeb14f":"markdown","48d7e0c7":"markdown","1628e9b9":"markdown","d041b98c":"markdown","1c028583":"markdown","e5aca97a":"markdown","838ebc30":"markdown","67dbb4e2":"markdown","6abc7202":"markdown","706306c8":"markdown","c0eca242":"markdown","daa75319":"markdown","0c2bf364":"markdown","a3c7a906":"markdown","c6d52fc3":"markdown","5f766822":"markdown"},"source":{"680b2a93":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt  # matplotlib should be imported to use seaborn\nimport seaborn as sns\nimport os","005be775":"df = pd.read_csv('..\/input\/billboard-the-hot-100-songs\/charts.csv')\ndf.head()","c0f73631":"df.tail(10)","d3adf361":"df.isna().sum()","7720277c":"plt.figure(figsize=(16,10))\nsns.heatmap(df.isna()) # null value visualization","5d259f12":"import missingno as msno  # another way to check null value\nmsno.bar(df, color = 'orchid')","f8e45960":"newentry = df[df['weeks-on-board']==1] # all the new entry songs\nnewentry = newentry[100:] # except for the first week songs\nnewentry.shape # the number of new entry songs","2eed3710":"# group on 'date' to check the number of new entry songs each week\ndate_grouped = newentry.groupby('date').sum()\ndate_grouped = date_grouped[['weeks-on-board']]\ndate_grouped.sort_values('weeks-on-board', ascending = False)","cee9c933":"fig = plt.figure(figsize=(16, 9)) \nax = fig.add_subplot(111) \nax.plot(date_grouped.index, date_grouped['weeks-on-board'], 'red', \n        label=\"date_grouped\", alpha = 0.5)\nax.set_title('The flow of the numbers of new entry songs', fontsize=30) \nax.set_ylabel('Counts', fontsize=14) \nax.set_xlabel('Date', fontsize=14) \nplt.xticks(['1958-08-11', '1974-03-30', '1989-12-02', '2005-07-23', '2021-03-13'])\nplt.show()","147e8247":"topartists = df[df['rank']==1] # exract the artists who ranked first place\ntopartists = topartists.groupby('artist').sum() # sum of the rank\ntopartists[['rank']].sort_values('rank', ascending = False).head(10)","220ad294":"topartists_rank = topartists.sort_values('rank', ascending = False)['rank']\ntopartists_rank = topartists_rank[:10,] # for the first 10 artists\n\n#color set\ncolors = ('red', 'darkorange', 'pink', 'yellow', 'yellowgreen', \n          'green', 'lightskyblue', 'lightblue', 'royalblue', 'orchid')\n\nfig = plt.figure(figsize=(11,11))\nax = fig.add_subplot() \n\n# chart by rank \nax.pie(topartists_rank,\n       labels=topartists_rank.index,\n       autopct='%1.1f%%',\n       textprops={'size': 15},\n       colors = colors,\n       startangle=90, counterclock=False)\nax.set_title('The top artist who took the most number of first place', fontsize=25)\nfig.subplots_adjust(wspace=0.7)\nplt.show()","4b86ccad":"df_artist = df['artist'].value_counts().head(10)\nprint(df_artist)","23b36398":"df_artist = df_artist[:10,] # for the first ten artists\nplt.figure(figsize=(15,8)) # figsize: inch by inch\nsns.barplot(x = df_artist.index, y = df_artist.values, alpha=0.9, palette = 'spring')\nplt.ylabel('Count', fontsize=18)\nplt.xlabel('Artists name', fontsize=18)\nplt.title('The artists appeared on the chart most frequently', fontsize=25)\nplt.xticks(rotation=45, fontsize=15)\nplt.show()","6ce46bdc":"topsongs = df[df['rank']==1] # extract the songs which ranked first place\ntopsongs = topsongs[['song','artist']].value_counts() \ntopsongs = topsongs.reset_index(name='counts').head(15) # reset index name\ntopsongs","98f7e86b":"plt.figure(figsize = (15, 20))\nsns.barplot(data = topsongs, x = 'counts', y = 'song', palette = 'rainbow')\nplt.yticks(fontsize = 30)\nplt.xticks(fontsize = 30)\nplt.title('The songs which took the most number of first place', fontsize = 60, loc='right')\nplt.show()","5f681778":"df_song = df['song'].value_counts()\ndf_song","51f32093":"# check same title :'Stay'\nstay = df[df['song']=='Stay']\nstay = stay['artist'].value_counts()\nstay","b2fdd9f1":"colors = ('red', 'orange', 'lightcyan', 'yellow', 'teal', \n          'palegreen', 'mistyrose', 'olive', 'lavender', 'dodgerblue', 'blue', 'purple', 'pink', 'cyan')\nfig = plt.figure(figsize=(8,8))\nax = fig.add_subplot() \nex = np.zeros(len(colors))\nex[-3:]=(0.1,0.2,0.3)\n\n# <Stay>s \nax.pie(stay,\n       autopct='%1.1f%%',\n       textprops={'size': 12},\n       colors = colors, pctdistance=0.7, radius=1.3,\n       startangle=180, counterclock=False, explode=ex)\nax.set_title('<Stay>s', fontsize=30, loc='left')\nplt.subplots_adjust(left=0.0, bottom=0.0, right=0.85)\n\n# use legend\nplt.legend(stay.index.unique(), loc=\"center right\", fontsize=12, \n           bbox_to_anchor=(1.35, 0.5), bbox_transform=plt.gcf().transFigure)\nplt.show()","6f42f2bb":"longest = df[['song','artist']].value_counts()\nlongest = longest.reset_index(name='max') # reset index name\nlongest","c63687d1":"longest10 = longest.head(10)\nplt.figure(figsize = (10, 10))\nsns.barplot(data = longest10, x = 'max', y = 'song', palette = 'winter', alpha = 0.8)\nplt.yticks(fontsize = 15)\nplt.title('The songs appeared on board for the longest times', fontsize = 25)\nplt.show()","188068d5":"plt.rcParams[\"figure.figsize\"]=(18,23)\nsns.set(style=\"darkgrid\")\nax = sns.countplot(y='max', palette=\"spring_r\", data=longest)\nplt.title('The distribution of max values in weeks on board', fontsize=30)\n\n# annotaion\nfor p in ax.patches:\n        value = p.get_width()\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height() - 0.07\n        ax.annotate(value, (x, y))\nplt.show()","f2039920":"# import wordcloud\nfrom PIL import Image as im\nfrom wordcloud import WordCloud,STOPWORDS\n\nplt.subplots(figsize=(14,10))\nwc = WordCloud(max_words=100,\n               stopwords=STOPWORDS, max_font_size=180,\n               random_state=42, width=600, height=300, colormap='cool')\nwc.generate(' '.join(df['song']))\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.axis('off')\nplt.show()","b8f588b6":"**Old Town Road is the top song which took the most number of first place.**","ef4abd34":"**I selected 'song' and 'artist' columns not to bring the problem.**","2c7de6e8":"> # **The TOP songs**\n> 1. Which songs took the most number of first place?\n> 2. Which songs appeared on the chart for the longest time(most frequently)?\n\n**\ud83d\udca1 In this part, there is a problem with *song* because different artists have same *song title*. Therefore, song titles should be grouped by *artist*.**","4bc57d78":"# **Introduction**\n\nHello, kagglers. This is my first notebook in kaggle. I hope kagglers enjoy my notebook on \"billboard the hot 100 songs\".\n\nDataset and information below are from: https:\/\/www.kaggle.com\/dhruvildave\/billboard-the-hot-100-songs\n\n# **Features information**\nThe dataset is comprised of seven features. \n* date: Date of chart\n* rank: Rank of song\n* song: Song title\n* artist: Song artist\n* last-week: Rank in previous week\n* peak-rank: Top rank achieved by the song\n* weeks-on-board: Weeks the song appeared on the chart","1394fd4d":"> # **The TOP artists**\n> 1. Who took the most number of first place?\n> 2. Who appeared on the chart most frequently?","1a75a6aa":"> # 2. Which songs appeared on the chart for the longest time?","2abeb14f":"**Mariah Carey is the top artist who took the most number of first place.**","48d7e0c7":"> # **The number of new entry songs on the board each week**\n> How many songs entered the board each week?\n> The answer is related to the feature 'weeks on board'. If the value is '1', the song belongs to *new entry song*.","1628e9b9":"# **\u2728Thank you\u2728**","d041b98c":"**I also wonder the distribution of max values in 'weeks on board'.** ","1c028583":"**The song \"Radioactive\" by Imagine Dragons was on board for 87 weeks. Now, I wonder the first longest 10 songs.**","e5aca97a":"# **\u2728Data explore\u2728**\nThe contents are as follows:\n* The number of new entry songs on the board each week\n* The TOP artists\n* The TOP songs\n* Wordcloud of song titles","838ebc30":"# **Packages import**","67dbb4e2":"# 1. Who took the most number of first place?","6abc7202":"# **Data read**","706306c8":"**Love, heart... They are the most appeared words on the titles.\u2764**","c0eca242":"# 2. Who appeared on the chart most frequently?","daa75319":"> # A problem :\n\n**Stay is the most appeared song. However, there are songs which have same titles.**\n\n**For example, fourteen artists have songs titled 'Stay'.**","0c2bf364":"> # **Wordcloud of the song titles**\nWhat words were used on titles?","a3c7a906":"# **Null value check**\nThere are NaN value in 'last-week' feature.\nThis is because...\n1. The songs in the first week(1958-08-04), there is no previous week rank!\n2. The songs which were on the chart only a week have no previous week rank!","c6d52fc3":"**Amazing! In the week 1998-12-05, 60 songs entered on the board.**\n**Let's see the result by visualization.**","5f766822":"> # 1. Which songs took the most number of first place?"}}