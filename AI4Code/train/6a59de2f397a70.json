{"cell_type":{"e08f6285":"code","e4af6362":"code","795e4044":"code","77b0083d":"code","5e83a33b":"code","ab7e6d43":"code","9c96fcca":"code","6d5c1214":"markdown","852fc032":"markdown","2f921e79":"markdown","28de1b6e":"markdown","b15767c6":"markdown"},"source":{"e08f6285":"!grep \"coexpressing of HAT or DESC1\" \/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset\/7d4b0efca3cb904640b8fd489fdfc413a8fae264.json","e4af6362":"import json\nfrom pathlib import Path\n\nPATH = Path('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset\/')\n\ndef load_json(fpath):\n    with fpath.open() as f:\n        return json.load(f)\n\ndef print_paragraphs(fname, paragraphs):\n    content = load_json(Path(fname))\n    print('Title: {}\\n'.format(content['metadata']['title']))\n    for p in paragraphs:\n        print('Paragraph #{0}: {1}\\n'.format(p, content['body_text'][p]['text']))","795e4044":"print_paragraphs('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset\/7d4b0efca3cb904640b8fd489fdfc413a8fae264.json',\n                [21,22,23])","77b0083d":"import hashlib\nfrom collections import defaultdict\n\n# Ignore very short paragraphs.\nMIN_PARAGRAPH_LENGTH=10\n\ntotal = 0\ntotal_with_dupes = 0\nfor fname in PATH.glob('*.json'):\n    total += 1\n    content = load_json(fname)\n    hash_to_num = defaultdict(list)\n    for body_num, body_text in enumerate(content['body_text']):\n        text = body_text['text'].encode('utf-8')\n        # skip trivial dupes\n        if len(text) < MIN_PARAGRAPH_LENGTH:\n            continue\n        hash_to_num[hashlib.sha256(text).hexdigest()].append(body_num)\n    duplicates = []\n    for nums in hash_to_num.values():\n        if len(nums) > 1:\n            duplicates.append(nums)\n    if len(duplicates) > 0:\n        total_with_dupes += 1\n        print(fname)\n        for d in duplicates:\n            print('  duplicate paragraphs: {}'.format(d))","5e83a33b":"print(total)\nprint(total_with_dupes)","ab7e6d43":"print_paragraphs('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset\/a08f5fd1ac9fc3e33a771787d584a845a8558cae.json',\n                [10, 11])","9c96fcca":"print_paragraphs('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset\/7d4b0efca3cb904640b8fd489fdfc413a8fae264.json',\n                [21,22,23])","6d5c1214":"## tl;dr\nRoughly 5% of the articles in `CORD-19 (2020-03-13) comm_use_subset` contain duplicate, non-trivial paragraphs.\n\n* These appear to come from a quirk in the pdf files themselves.\n* I haven't checked the other datasets\n\n#### Quick example","852fc032":"## Example Paper\nFile: `\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset\/7d4b0efca3cb904640b8fd489fdfc413a8fae264.json`\n\nTitle: TMPRSS2 and MSPL Facilitate Trypsin-Independent Porcine Epidemic Diarrhea Virus Replication in Vero Cells\n\nLink: https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC5454426\/\n\nPDF: https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC5454426\/pdf\/viruses-09-00114.pdf","2f921e79":"## Poking at the data\n### Setup","28de1b6e":"Note that if you search in the [following PDF](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC5454426\/pdf\/viruses-09-00114.pdf) for `coexpressing of HAT or DESC1`. there are some odd, ghost matches.","b15767c6":"### Finding the dupes"}}