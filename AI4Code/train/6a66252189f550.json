{"cell_type":{"7dcd4d7b":"code","505c025b":"code","c94a6e84":"code","fa383212":"code","2e7ca12f":"code","651c850e":"code","6b44a7d9":"code","3f8e0013":"code","87560c98":"code","b4cc5631":"code","f399ee67":"code","3306b93b":"code","e84a66d1":"code","9fa45725":"code","690b3266":"code","c4ee9513":"code","6c8e7a3f":"code","ec64c68b":"code","36080fb6":"code","bb9be6a0":"code","cb46b757":"code","133355d1":"code","abf12686":"code","5e9d9d41":"code","8fb906be":"code","3ecc4e85":"code","c2152347":"code","1769bf5b":"code","d791d6fa":"code","f7dc4bea":"markdown","0c17f69d":"markdown","40d4cf3d":"markdown","b2dd2af8":"markdown"},"source":{"7dcd4d7b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(font_scale=1.4)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n \n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","505c025b":"train_df=pd.read_csv('..\/input\/rsna-str-pulmonary-embolism-detection\/train.csv')\ntest_df=pd.read_csv('..\/input\/rsna-str-pulmonary-embolism-detection\/test.csv')","c94a6e84":"train_df.columns","fa383212":"list_of_patient_ids=os.listdir('..\/input\/rsna-str-pulmonary-embolism-detection\/train')","2e7ca12f":"len(list_of_patient_ids)\n#total 7279 patients in the study\n#study instance id map to image ids ","651c850e":"#\ntrain_df[train_df.StudyInstanceUID=='df06fad17bc3']\n\ntest_df[test_df.StudyInstanceUID=='df06fad17bc3']\n#train_df.StudyInstanceUID.nunique() ","6b44a7d9":"train_df.groupby(['StudyInstanceUID','SeriesInstanceUID']).agg(series_count=('SOPInstanceUID','count'))\n## each patient has got only one CT report ,total patients 7279","3f8e0013":"#train_df.iloc[:,4:].columns.tolist()","87560c98":"plt.bar??","b4cc5631":"#train_df[train_df.negative_exam_for_pe==0].sum(axis=1)\n#eda  my_plot.legend([\"Total\",\"Belts\",\"Shirts\",\"Shoes\"]\n'''\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(font_scale=1.4)\nplt.rcParams[\"figure.figsize\"] = (10,10)\n#train_df.iloc[:,4:].sum(axis= 0).plot(kind='bar')\n#plt.figure(figsize=15,20)\n#my_colors = 'rgbkymc'\n#plt.barh (height=train_df.iloc[:,4:].sum(axis= 0),x=train_df.iloc[:,4:].columns.tolist(),\n#         color  =plt.cm.Paired(np.arange(len(train_df.iloc[:,4:].columns.tolist()))) )\n\nplt.barh (width=train_df.iloc[:,4:].sum(axis= 0),y=train_df.iloc[:,4:].columns.tolist(),\n         color  =plt.cm.Paired(np.arange(len(train_df.iloc[:,4:].columns.tolist()))) )\n#plt.legend(train_df.iloc[:,4:].columns.tolist()) \n#train_df.iloc[:,3:].plot()\n\n#train_df.iloc[:,4:].value_counts(0).plot(kind='bar');\n'''","f399ee67":"#check the counts of each illnesses\ntrain_df.iloc[:,4:].sum(axis= 0).reset_index().rename (columns={'index':'category_illness', 0:'count'})","3306b93b":"#checking each category if lung illness\nsns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df.iloc[:,4:].sum(axis= 0))","e84a66d1":"#checking co occurance\ntrain_df[train_df.negative_exam_for_pe!=0].iloc[:,4:].sum(axis= 0).reset_index().rename (columns={'index':'category_illness', 0:'count'})","9fa45725":"train_df[train_df.central_pe!=0].iloc[:,4:].sum(axis= 0).reset_index().rename (columns={'index':'category_illness', 0:'count'})\n#central PE occurs frequently along with rightsided\/leftsided PE\nsns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.central_pe!=0].iloc[:,4:].sum(axis= 0))","690b3266":"#rightsided_pe\nsns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.rightsided_pe!=0].iloc[:,4:].sum(axis= 0))","c4ee9513":"sns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.leftsided_pe!=0].iloc[:,4:].sum(axis= 0))\n","6c8e7a3f":"sns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.true_filling_defect_not_pe!=0].iloc[:,4:].sum(axis= 0))\n","ec64c68b":"sns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.chronic_pe!=0].iloc[:,4:].sum(axis= 0))\n","36080fb6":"sns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.rv_lv_ratio_lt_1!=0].iloc[:,4:].sum(axis= 0))\n","bb9be6a0":"sns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.rv_lv_ratio_gte_1!=0].iloc[:,4:].sum(axis= 0))\n\n","cb46b757":"#train_df[train_df.central_pe!=0].iloc[:,4:].sum(axis= 0).reset_index().rename (columns={'index':'category_illness', 0:'count'})\n#central PE occurs frequently along with rightsided\/leftsided PE\nsns.barplot(y=train_df.iloc[:,4:].columns.tolist(),x=train_df[train_df.acute_and_chronic_pe!=0].iloc[:,4:].sum(axis= 0))","133355d1":"train_df[train_df.pe_present_on_image!=0].StudyInstanceUID.nunique()  ","abf12686":"sample_sub=pd.read_csv('..\/input\/rsna-str-pulmonary-embolism-detection\/sample_submission.csv')\n","5e9d9d41":"#there are patients for whom only id are given but not category suffix \nsample_sub[sample_sub.id=='5f34e0c61c00']","8fb906be":"#sample_sub.sort_values(by='id')\n#sample_sub[~sample_sub.id.str.contains('pe')]\n#sample_sub[sample_sub.id.str.contains('df06fad17bc3')]","3ecc4e85":"neg_pe_count_df=train_df.loc[train_df.negative_exam_for_pe==1,:]\nneg_pe_count_df.groupby(['StudyInstanceUID','SeriesInstanceUID']).agg(neg_pe_count=('SOPInstanceUID','count') )\n#oh majority of patients have no PE    and thus seem to be having normal lung","c2152347":"#sanity check to see if any patients has got inconsistent findings,looks like perfect\n# patient with pe_present_on_image has aleast one PE illness category on\ntrain_df.loc[train_df.negative_exam_for_pe==1,:].pe_present_on_image.value_counts()","1769bf5b":"#4911+2368\ntrain_df.pe_present_on_image.value_counts() #\n#train_df.StudyInstanceUID.nunique()\n#neg_pe_count_df.groupby(['StudyInstanceUID','SeriesInstanceUID']) [neg_pe_count_df.iloc[:,4:].columns.tolist()].apply(lambda x : x.astype(int).sum())","d791d6fa":"#lets try to check the coexistence of each illness type\n#looks like all slices are consistent with each other for a patient and hence one can pick randomly few to check for particular PE illness\npos_pe_count_df=train_df.loc[train_df.negative_exam_for_pe!=1,:]\n\npos_pe_count_df.groupby(['StudyInstanceUID','SeriesInstanceUID']) [pos_pe_count_df.iloc[:,4:].columns.tolist()].apply(lambda x : x.astype(int).sum())","f7dc4bea":"Checking how many Patients have no PE","0c17f69d":"Will continue updating if get more thoughts","40d4cf3d":"**binary column showing if patient has any illness or not**","b2dd2af8":"Flow artifact is less as we see below,left and right lung have more occurance of PE"}}