{"cell_type":{"50e53530":"code","481bc278":"code","bbc2d71b":"code","6433fc53":"code","e0b449ed":"code","0e526401":"code","02e1fa5c":"code","c8dbae32":"code","5c939eca":"code","82990157":"code","595da5fb":"markdown","232b6004":"markdown","4835d2e6":"markdown","b088fcd0":"markdown","8be3bc78":"markdown","2b29ca99":"markdown"},"source":{"50e53530":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.metrics import roc_auc_score, roc_curve\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import brier_score_loss\nfrom sklearn import preprocessing\nfrom sklearn.feature_selection import f_classif,  SelectKBest\n\npd.set_option('display.max_columns', 300)\nnp.random.seed(566)\npd.set_option('display.max_rows', 200)\npd.set_option('display.width', 1000)\npd.set_option('display.float_format', '{:20,.2f}'.format)\npd.set_option('display.max_colwidth', -1)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","481bc278":"icu_data_path_training = \"\/kaggle\/input\/widsdatathon2020\/training_v2.csv\"\nicu_data_path_test = \"\/kaggle\/input\/widsdatathon2020\/unlabeled.csv\"\ndata_dictionary_path = \"\/kaggle\/input\/widsdatathon2020\/WiDS Datathon 2020 Dictionary.csv\"\n\nicu_df_training = pd.read_csv(icu_data_path_training)\nicu_df_test = pd.read_csv(icu_data_path_test)\ndata_dictionary_df = pd.read_csv(data_dictionary_path)","bbc2d71b":"print(icu_df_training.shape) #dataset number of rows and columns\nicu_df_training.head(10)  # sample of 10 rows","6433fc53":"print(icu_df_test.shape) #dataset number of rows and columns\nicu_df_test.head(10)  # sample of 10 rows","e0b449ed":"icu_df_training.describe()","0e526401":"icu_df_test.describe()","02e1fa5c":"data_dictionary_df = data_dictionary_df[['Variable Name', 'Data Type', 'Description']]\ndata_dictionary_df","c8dbae32":"model_basic =RandomForestClassifier(max_depth=2, random_state=0)\n","5c939eca":"y = target\nX = icu_df_training","82990157":"model_basic.fit(X, y)\n","595da5fb":"# Create initial train and test sets","232b6004":"# Columns description","4835d2e6":"# Explore dataset","b088fcd0":"# Load training\/test data","8be3bc78":"# Modeling","2b29ca99":"# Data preparation\n"}}