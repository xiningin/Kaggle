{"cell_type":{"08f96630":"code","b71e89af":"code","967beff8":"code","797a0255":"code","a654d63f":"code","cdf4cc48":"code","1907224b":"code","d1895f50":"code","849c64bb":"code","ad91fff6":"code","1c359edd":"code","e5acea99":"code","97799c34":"code","06e5ecd2":"code","b1187a92":"code","0b7da426":"code","f68fe8c7":"code","a00d5c5e":"code","66bbe62a":"code","c818171f":"code","9d16d688":"code","5affdf1b":"code","15ea159b":"code","47bff007":"code","da80e847":"code","099d7a5a":"code","32d9b254":"code","b67f935c":"code","b6beb743":"markdown","9c12e662":"markdown","c154b9d7":"markdown","b3a02387":"markdown","4553870b":"markdown","e92a22fc":"markdown","b1a3fe89":"markdown","d924d559":"markdown","549a7e9c":"markdown","caff2275":"markdown","233ba8e9":"markdown","e126f710":"markdown","43ab5a7c":"markdown","c89e6821":"markdown"},"source":{"08f96630":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b71e89af":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nimport warnings\nwarnings.filterwarnings('ignore')","967beff8":"ca_train = pd.read_csv(\"\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_train.csv\",parse_dates=[5],index_col=0)\nca_test = pd.read_csv(\"\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_test.csv\",parse_dates=[5],index_col=0)\nca_submission = pd.read_csv(\"\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_test.csv\",parse_dates=[5])","797a0255":"ca_train.info()\n#ca_test.info()","a654d63f":"#any null values?\nca_train.isnull().sum()","cdf4cc48":"#remove unnecessary columns\nca_train.nunique()","1907224b":"for i in range(ca_train.shape[1]):\n    if (ca_train.iloc[:,i].nunique() == 1):\n        print(ca_train.columns[i],'\\t',ca_train.iloc[:,i].value_counts())    ","d1895f50":"#necessary data\nca_filtered_train = ca_train.copy()\nca_filtered_train.tail(10)","849c64bb":"ca_filtered_train['weekday'] = ca_filtered_train.Date.dt.day_name()\nca_filtered_train['Total_affected_people'] = ca_filtered_train['ConfirmedCases']+ca_filtered_train['Fatalities']\nca_filtered_train.tail()","ad91fff6":"print('Total CA population is 39.56M as of year 2018')\nprint('confirmed cases population percentage',round((sum(ca_train['ConfirmedCases'])\/39.56e6)*100,2),'%')\nprint('fatalities population percentage',round((sum(ca_train['Fatalities'])\/39.56e6)*100,4),'%')","1c359edd":"affected_people = pd.DataFrame(ca_filtered_train[47:].groupby('ConfirmedCases')['Fatalities'].sum())\naffected_people['Cumulative_deaths_percentage'] = round(affected_people['Fatalities']\/sum(affected_people['Fatalities'])*100,2)\nsns.scatterplot(x=affected_people.index,y=affected_people.Cumulative_deaths_percentage)","e5acea99":"cats = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nca_filtered_train.groupby('weekday')['ConfirmedCases','Fatalities'].sum().reindex(cats).plot(kind='bar')\nplt.title('daywise analysis')","97799c34":"plt.figure(figsize=(20,12))\nax = sns.lineplot(x='Date',y='ConfirmedCases',data=ca_filtered_train[40:],label='Confirmed_cases')\nax = sns.lineplot(x='Date',y='Fatalities',data=ca_filtered_train[40:],label='Deaths')\nax = sns.lineplot(x='Date',y='Total_affected_people',data=ca_filtered_train[47:],label='Total_affected_people')\nplt.xticks(ca_filtered_train['Date'][40:],rotation='vertical')\nax.annotate('Lockdown', xy=('2020-03-20',1177), xytext=('2020-03-17', 1300),arrowprops=dict(facecolor='black',shrink=0.05),fontsize=15)\nax.annotate('Declared State of Emergency', xy=('2020-03-04',0), xytext=('2020-03-04', 500),arrowprops=dict(facecolor='black',shrink=0.05),fontsize=15)\nax.annotate('Increased health care capacity', xy=('2020-03-21',1364), xytext=('2020-03-14', 1600),arrowprops=dict(facecolor='black',shrink=0.05),fontsize=15)\nax.legend(loc='upper left',fontsize='x-large',fancybox=True,shadow=True,borderpad=1)\nplt.ylabel('Confirmed_cases and Fatalities')\nplt.xticks(rotation='vertical')\nplt.title('Trend over a MARCH month',fontsize=20)","06e5ecd2":"ca_train.index = ca_train['Date']\nca_train.drop('Date',axis=1,inplace=True)","b1187a92":"ca_train = ca_train[['ConfirmedCases','Fatalities']]\ntrain_confirmedcases = ca_train[['ConfirmedCases']]\ntrain_confirmedcases= train_confirmedcases.iloc[47:]","0b7da426":"train_fatalities = ca_train[['Fatalities']]\ntrain_fatalities= train_fatalities.iloc[47:]","f68fe8c7":"#ts_diff_1 = train_confirmedcases - train_confirmedcases.shift()\n#ts_diff_1.dropna(inplace=True)","a00d5c5e":"from statsmodels.tsa.arima_model import ARIMA\nfrom pandas import datetime\n\n#fit model on confirmedcases\nmodel = ARIMA(train_confirmedcases, order=(1,1,1)) # (ARIMA) = (1,1,0)\nmodel_fit = model.fit(disp=0)","66bbe62a":"# predict\nstart_index = datetime(2020, 3, 12)\nend_index = datetime(2020, 4, 23)\nforecast_confirmedcases = model_fit.predict(start=start_index, end=end_index)","c818171f":"#fit model on fatalities\nmodel_F = ARIMA(train_fatalities, order=(1,1,0)) # (ARIMA) = (1,1,0)\nmodel_fit_F = model_F.fit(disp=0)","9d16d688":"# predict\nstart_index = datetime(2020, 3, 12)\nend_index = datetime(2020, 4, 23)\nforecast_fatalities = model_fit_F.predict(start=start_index, end=end_index)","5affdf1b":"df=pd.concat([forecast_confirmedcases.astype(int),forecast_fatalities.astype(int)],axis=1)","15ea159b":"ca_submission.head()","47bff007":"ca_submission['ConfirmedCases'] = list(df[0])\nca_submission['Fatalities'] = list(df[1])\nca_submission.head()","da80e847":"ca_submission = ca_submission[['ForecastId','ConfirmedCases','Fatalities']]\nca_submission.head()","099d7a5a":"# visualization\nplt.figure(figsize=(22,10))\nplt.plot(train_confirmedcases.index,train_confirmedcases.ConfirmedCases,label = \"original\")\nplt.plot(forecast_confirmedcases,label = \"predicted\")\nplt.legend(loc='upper left',fontsize='x-large',fancybox=True,shadow=True,borderpad=1)\nplt.title('For ConfirmedCases')\nplt.show()","32d9b254":"# visualization\nplt.figure(figsize=(22,10))\nplt.plot(train_fatalities.index,train_fatalities.Fatalities,label = \"original\")\nplt.plot(forecast_fatalities,label = \"predicted\")\nplt.legend(loc='upper left',fontsize='x-large',fancybox=True,shadow=True,borderpad=1)\nplt.title('For Fatalities')\nplt.show()","b67f935c":"ca_submission.to_csv('submission.csv',index=False)\nca_submission.head()","b6beb743":"### to make time series stationary, differencing requires order 3 but ARIMA model does not support to >2 (d) differencing. hence, clearly bad predictions.\n\n* one can use other techniques to make time series stationary and find apt values for forecasting","9c12e662":"Quite Linear graph, as more confirmed patients wider the fatality rate from previous cases","c154b9d7":"* The data is solely of California Province, USA located at 36 degrees Lat, -119 degrees Long.\n* in turn it is not providing more information so we can remove redundant columns","b3a02387":"## Submission","4553870b":"## for confirmed cases ","e92a22fc":"Let's create more data for more interpretations","b1a3fe89":"> ## Data Preprocessing","d924d559":"## differencing_confirmedcases_111","549a7e9c":"Seems pretty low proportions, but Covid-19 has spreading rate of 2-2.5 (R0)","caff2275":"Cool !! data is well processed...no null values.","233ba8e9":"## differencing_fatalities_110","e126f710":"Few actions has to taken by government to check on covid-19 spread","43ab5a7c":"## Time for some Visualisations","c89e6821":"## for fatalities"}}