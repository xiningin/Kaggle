{"cell_type":{"f370f666":"code","7ac500dd":"code","de0ec355":"code","b4756a85":"code","e5b09ef8":"code","a5ee0e7f":"code","474aa7aa":"code","93510537":"code","94c129be":"code","8c7391ec":"markdown","49d2f447":"markdown","f855c895":"markdown","93009600":"markdown","4d7dcb8b":"markdown","ac747999":"markdown","a54ab9cb":"markdown","bbca0629":"markdown","cf3a89e6":"markdown"},"source":{"f370f666":"# a is a 2d matrix (Billing system binary predictions)\n# b is a 2d matrix (Ground truth billing system binary predictions)\ndef emr(a, b):\n    len_labelset = len(a[0])\n    return ((a == b).sum(axis=1) == len_labelset).sum() \/ float(len(a))","7ac500dd":"import numpy as np \nimport pandas as pd\n\ntrain = pd.read_csv('..\/input\/systemreconciliation\/train.csv')","de0ec355":"# print(train.head())\nprint('Length of dataframe: ', len(train))","b4756a85":"train.columns[train.isnull().any()]","e5b09ef8":"correlation = train.sample(2000).corr()","a5ee0e7f":"import seaborn as sns\n\nimport numpy as np\n\nsns.set(rc={'figure.figsize':(12, 12)})\nsns.heatmap(correlation)","474aa7aa":"all_columns = train.columns.tolist()\ncrm_columns = [i for i in all_columns if i.startswith('CRM')]\nbil_columns = [i for i in all_columns if i.startswith('BIL')]","93510537":"import seaborn as sns\nimport math\n\ncrm_ones  = []\ncrm_zeros = []\ncrm_tags = []\ncnt = 0\nfor i in crm_columns:\n    try:\n        a = train[i].value_counts()[0]\n        crm_zeros.append(a)\n        crm_ones.append(len(train[i]) - a)\n        crm_tags.append(cnt)\n        cnt += 1\n    except Exception:\n        print(i)\n\nsq = math.floor(math.sqrt(len(crm_columns))) + 1\ncrm_ones = list(crm_ones)\nm = np.mean(np.array(crm_ones))\nfor i in range(sq ** 2 - len(crm_columns)):\n    crm_ones.append(m)\n    crm_tags.append(0)\n    \ncrm_ones = np.reshape(np.array(crm_ones), (sq, sq))\nsns.set(rc={'figure.figsize':(20, 20)})\nsns.heatmap(crm_ones, annot=np.array(crm_tags).reshape(sq, sq), fmt='g')","94c129be":"import seaborn as sns\nimport math\n\nbil_ones = []\nbil_zeros = []\nbil_tags = []\ncnt = 0\nfor i in bil_columns:\n    try:\n        a = train[i].value_counts()[0]\n        bil_zeros.append(a)\n        bil_ones.append(len(train[i]) - a)\n        bil_tags.append(cnt)\n        cnt += 1\n    except Exception:\n        print(i)\n\nsq = math.floor(math.sqrt(len(bil_columns))) + 1\nbil_ones = list(bil_ones)\nm = np.mean(np.array(bil_ones))\nfor i in range(sq ** 2 - len(bil_columns)):\n    bil_ones.append(m)\n    bil_tags.append(0)\n    \nbil_ones = np.reshape(np.array(bil_ones), (sq, sq))\nsns.set(rc={'figure.figsize':(20, 20)})\nsns.heatmap(bil_ones, annot=np.array(bil_tags).reshape(sq, sq), fmt='g')","8c7391ec":"There are **NO** missing values in the data. Let's understand the interaction of different features in the data.","49d2f447":"We have a total of 187442 unique users in our trainfile. Let's see if there are any missing values in our data.","f855c895":"We have read the data (it will take a bit of time). Let's check out the rows now.","93009600":"We see in the above correlation matrix that the features don't have a lot of correlation between themselves while some features can be discarded. **Feature engineering will really be crucial in this competition.**\n\nLet's check out separate features now. We will first see what is the number of zeros and ones in the various columns. We will segregate BIL columns (input) and BIL columns (output).","4d7dcb8b":"# Empty columns found\n\nThere are two columns which completely have only zeros:\n* CRM_2396_PACK\n* CRM_2398_PACK\n\nNow, let's visualize the number of ones in both types of columns (CRM and BIL columns).\n\n## Number of ones in CRM columns","ac747999":"In the above heatmap, we see maximum BIL features have number of positive values in them around 25000. These are at least 25 features which have more than 75000 positive values in them.\n\nThe input domain is more rich than the output domain, we can conclude that. This makes the problem a bit easier because this proves there is a lot of signal.","a54ab9cb":"# Telecom System Reconciliation\n\nA simple 4 Play subscription - Internet, TV, mobile phone and fixed line - involves configuring multiple systems:\n\nCRM- Customer Relationship Management - the master system that keeps the information about the offers that the customer subscribed to;\n* TV platform - defines the channels that the customer can watch;\n* Internet platform - defines the internet speed;\n* Billing system - responsible for billing the services and the usage that the customer makes of them.\n\nIt is a complex process as there are hundreds of options, thousands of possible combinations and millions of customers. It is subject to errors, both human and automatic. For this reason, operators have different \"audit\" processes that try to ensure that all intervening systems are consistent with each other.\n\nIn this competition, we challenge you to predict the right bill for a customer given the services he contracted. The goal is to build a model that receives the configuration of the CRM system and predicts the correct configuration of the Billing system.\n\nAs mentioned, CRM is normally the master of the information of the services that the customer has subscribed to, so it will be possible to infer which configuration to expect in the Billing system. Note, however, that the configurations between these two systems may not be one to one, in many cases there are many to one configurations, that is, two different CRM configurations may point to the same Billing configuration.\n\n## Characteristics of the problem:\n* The dataset contains several provisioning errors, i.e. in the dataset it may happen that for a CRM configuration there are different configurations in Billing;\n* The dimension of the output 731 is very large;\n* Different CRM configurations can correspond to only one Billing configuration;\n* The individual variables of the CRM configuration may not have a direct correspondence to the individual variables of the Billing configuration;\n\n## Evaluation Metric\n\nThe metric this competition uses is EMR (Exact Matching Rate).\n\nEMR is defined as the percentage of samples that have all their labels classified correctly.\n\nBelow is a function for calculating EMR:","bbca0629":"In the above heatmap, we see maximum CRM features have number of positive values in them around 25000. These are at least 35 features which have more than 75000 positive values in them.\n\nLet's take a look at the BIL features now.","cf3a89e6":"## Data\n\nThe training dataset is structured as follows: 1 column to identify the customer, 745 columns for the CRM configuration and 731 for the BILLING configuration.\n\n* MSISDN - customer's identifier, this field is encrypted;\n* Columns that start with 'CRM' (2nd \u2013 746th (inclusive)) - these correspond to the input configuration (CRM);\n* Columns that start with 'BIL' (747th \u2013 1477th (inclusive)) - these correspond to the output configuration (BILLING)\n\nThe test dataset is structured as follows: 1 column to identify the customer and 745 columns for the CRM configuration.\n\nLet's take a look at the data."}}