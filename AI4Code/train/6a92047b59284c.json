{"cell_type":{"f559923b":"code","5a1910d0":"code","dd8b21e1":"code","3573a04e":"code","fa0f7d5d":"code","5fbfc544":"code","0b0d6283":"code","893f36a6":"code","94abd0b9":"code","5aa4e378":"code","0224fe52":"code","bbc99db3":"code","64a1bd48":"code","d21c6cbd":"code","fcdc0274":"code","d0e76332":"code","d98d71d7":"code","5c879eee":"code","17cd9f33":"code","f66475ad":"code","273a04dd":"code","622cfe97":"code","5e98c599":"code","104fdd14":"code","42a13f97":"code","217a3d67":"code","81534d17":"markdown","7bf3aa3d":"markdown"},"source":{"f559923b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5a1910d0":"#importing the required libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","dd8b21e1":"#reading the file\ndf = pd.read_excel('..\/input\/Train.xlsx')","3573a04e":"#checking the shape of the dataframe\ndf.shape\n","fa0f7d5d":"#Summary of the dataset\ndf.describe()","5fbfc544":"#displaying first 5 rows\ndf.head(5)","0b0d6283":"#displaying sumary of the dataset\ndf.describe()","893f36a6":"#setting options to display only two points after float\npd.options.display.float_format = '{:.2f}'.format","94abd0b9":"#converting all the column names to lower case\ndf.columns = [x.lower().replace(' ','_') for x in df.columns]","5aa4e378":"#checking if columns names have been converted\ndf.head()","0224fe52":"#writing a function to get the null values and unique values in the dataset\ndef levels(df):\n    return (pd.DataFrame({'dtype':df.dtypes, \n                          'levels':df.nunique(), \n                          'levels':[df[x].unique() for x in df.columns],\n                         'null_values':df.isna().sum(),\n                         'unique':df.nunique()}))","bbc99db3":"levels(df)","64a1bd48":"#Checking evaluationvalue distribution\ndf_above_threshold = df.copy()\nimport seaborn as sns\nplt.figure(figsize = (15,6))\nsns.distplot(df.propertyevaluationvalue)\nplt.show()","d21c6cbd":"df = df[df.propertyevaluationvalue<=1250000]\ndf.reset_index(drop = True, inplace = True)","fcdc0274":"#checking distribution after setting threshold\nplt.figure(figsize = (15,6))\nsns.distplot(df.propertyevaluationvalue)\nplt.show()","d0e76332":"df_above_threshold = df_above_threshold[df_above_threshold.propertyevaluationvalue>1250000]\nplt.figure(figsize = (15,6))\nsns.distplot(df_above_threshold.propertyevaluationvalue)\nplt.show()","d98d71d7":"#checking for log distribution\nplt.figure(figsize = (15,6))\nsns.distplot(np.log(df_above_threshold.propertyevaluationvalue))\nplt.show()","5c879eee":"#checking the shape of the dataset\ndf.shape","17cd9f33":"#mean and median are almost same hence no outliers in the propery evaluation column\ndf.propertyevaluationvalue.describe()","f66475ad":"#Checking for unique values in the columns\nlen(df.propertyid.unique())","273a04dd":"# df.drop('propertyid', axis = 1, inplace = True)","622cfe97":"#checking unique values in borugh\ndf.borough.unique()","5e98c599":"df.borough = df.borough.astype('category')","104fdd14":"#price variation per borough\ndf.groupby('borough')['propertyevaluationvalue'].mean().plot(kind = 'bar')","42a13f97":"df.groupby('borough')['propertyevaluationvalue'].median().plot(kind = 'bar')","217a3d67":"plt.figure(figsize = (15,6))\nsns.boxplot(x = df.borough, y = df.propertyevaluationvalue)\nplt.show()","81534d17":"Since the dat is sparse setting the limit of threshold to be 1250000","7bf3aa3d":"Since all the values in the propertyid are unique dropping the column"}}