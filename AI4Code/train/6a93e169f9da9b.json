{"cell_type":{"41f0b93f":"code","d28cf352":"code","74cc06e4":"code","f1b244d3":"code","bd096bf8":"code","725d0f02":"code","607ea030":"code","17e697db":"code","8fe561e3":"code","31021d97":"code","f2f534df":"code","605289b0":"code","9aca255c":"code","1cc31fad":"code","5a813c42":"code","8e5e4688":"code","9cec4b8b":"code","402ec20e":"code","724ba7c2":"code","1c71048e":"code","9e1d2826":"code","fb81a242":"code","3a5f3eca":"markdown","7db27452":"markdown","495a8a2e":"markdown","1dcaaf9f":"markdown","f66286c1":"markdown","f090b824":"markdown","fb7f9438":"markdown","42a0b4cf":"markdown","1df4a51e":"markdown","4a2efd7c":"markdown","ec086732":"markdown","045fe339":"markdown","ff9f206a":"markdown","fbb60e4c":"markdown","50f1084e":"markdown","09d9b5d9":"markdown"},"source":{"41f0b93f":"!pip install sentinelsat --quiet","d28cf352":"#general\nimport os\nimport pandas as pd\nimport numpy as np\nimport pickle\nimport matplotlib.pyplot as plt\nfrom shapely.geometry import MultiPolygon, Polygon\nimport gc\n\n\n#geospatial\nimport rasterio \nfrom rasterio.plot import show\nimport folium\nimport geopandas as gpd\n\n#query data \nfrom sentinelsat import SentinelAPI, read_geojson, geojson_to_wkt","74cc06e4":"# loading area of interest coordinates\n\nwith open('..\/input\/pune-coordinates\/bounding_polygons.pkl','rb') as f:\n    coord_dict=pickle.load(f)\n\naoi=Polygon(list(coord_dict['pune'].values()))\naoi_rural=Polygon(list(coord_dict['pune_rural'].values()))\naoi_urban=Polygon(list(coord_dict['pune_urban'].values()))","f1b244d3":"# register a username on copernicus open hub and save the username password credential(in kaggle secrets for retrieval)\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\n\n\nsecret_value_0 = user_secrets.get_secret(\"sentinel_pass\")        # retrieve username saved in Kaggle Secrets\nsecret_value_1 = user_secrets.get_secret(\"sentinel_username\")    # retrieve password saved in Kaggle Secrets\n\nuser=secret_value_1\npassword=secret_value_0\n\n#\napi = SentinelAPI(user,\n                  password,\n                 'https:\/\/scihub.copernicus.eu\/dhus') # aunnthenticate username & password","bd096bf8":"products_1 = api.query(aoi,                              # query data with following params\n                     date = ('20211001', '20221201'),\n                     platformname = 'Sentinel-2',\n                     processinglevel = 'Level-2A',\n                     cloudcoverpercentage = (0,10))","725d0f02":"products_gdf = api.to_geodataframe(products_1) # conv data to dataframe\nproducts_gdf_sorted = products_gdf.sort_values(['cloudcoverpercentage'], ascending=[True]) #sort according to cloud cover\nproducts_gdf_sorted_1=products_gdf_sorted.head(2)\n\nproducts_gdf_sorted.head(2)  # check metadat of products","607ea030":"# api.trigger_offline_retrieval(idx)\nproduct_info = api.get_product_odata(products_gdf_sorted_1.uuid[0])  #get product info \n\nif product_info['Online']:   #download \n    api.download(products_gdf_sorted_1.uuid[0], directory_path='.\/')","17e697db":"!ls","8fe561e3":"!unzip .\/S2B_MSIL2A_20220129T053049_N0400_R105_T43QCA_20220129T083024.zip  # unzipping raster ","31021d97":"!ls .\/S2B_MSIL2A_20220129T053049_N0400_R105_T43QCA_20220129T083024.SAFE\/GRANULE\/L2A_T43QCA_A025585_20220129T053901\/IMG_DATA\/R20m","f2f534df":"# the 20 m resolution image are in this dir \nrgb_nir_dir = '.\/S2B_MSIL2A_20220129T053049_N0400_R105_T43QCA_20220129T083024.SAFE\/GRANULE\/L2A_T43QCA_A025585_20220129T053901\/IMG_DATA\/R20m\/'\n\ndef scale(band):\n    '''scale image by maximum value s to be in range of (0,1)'''\n    return band \/ float(np.max(band))\n\nb = scale(rasterio.open(rgb_nir_dir + 'T43QCA_20220129T053049_B02_20m.jp2').read().reshape((5490,5490,1))) # blue \ng = scale(rasterio.open(rgb_nir_dir + 'T43QCA_20220129T053049_B03_20m.jp2').read().reshape((5490,5490,1))) # green\nr = scale(rasterio.open(rgb_nir_dir + 'T43QCA_20220129T053049_B04_20m.jp2').read().reshape((5490,5490,1))) # red \nnir = scale(rasterio.open(rgb_nir_dir + 'T43QCA_20220129T053049_B8A_20m.jp2').read().reshape((5490,5490,1)))  # near infrared \nswir1 = scale(rasterio.open(rgb_nir_dir + 'T43QCA_20220129T053049_B11_20m.jp2').read().reshape((5490,5490,1)))  # short wave infrared \nswir2 = scale(rasterio.open(rgb_nir_dir + 'T43QCA_20220129T053049_B12_20m.jp2').read().reshape((5490,5490,1)))  # short wave infrared 2","605289b0":"b1= rasterio.open(rgb_nir_dir + 'T43QCA_20220129T053049_B02_20m.jp2')\nb1.bounds # image bounds","9aca255c":"print('file size for 20m resolution blue band is {} MB'.format(os.path.getsize(rgb_nir_dir + 'T43QCA_20220129T053049_B02_20m.jp2')\/1024**2))","1cc31fad":"# metadata \nb1.profile","5a813c42":"b1.width,b1.height           #image height and width","8e5e4688":"print(b1.transform) #image transforms \n\ndel b1;gc.collect()","9cec4b8b":"# save a RGB Image \n\n# with rasterio.open('RGB.tiff','w',driver='Gtiff', width=b1.width, height=b1.height, \n#               count=3,crs=b1.crs,transform=b1.transform, dtype=b1.dtypes[0]) as rgb:         \n#     rgb.write(b1.read(1),1) \n#     rgb.write(b2.read(1),2) \n#     rgb.write(b3.read(1),3) \n#     rgb.close()\n    \n    \n    \n# rgb=rasterio.open('.\/RGB.tiff')","402ec20e":"rgb = np.dstack((r,g,b))\nplt.subplots(figsize=(25,25))\nplt.title('RGB Image')\nplt.axis('off')\nplt.imshow(rgb,cmap='gist_earth')\ndel rgb ; gc.collect()","724ba7c2":"fc = np.dstack((nir,g,b))\nplt.subplots(figsize=(25,25))\nplt.title('False Color Image')\nplt.axis('off')\nplt.imshow(fc,cmap='gist_earth')\ndel fc ; gc.collect()","1c71048e":"\n#NDVI\nndvi = (nir.astype(float)-r.astype(float))\/(nir.astype(float)+r.astype(float))\nplt.subplots(figsize=(25,25))\nplt.axis('off')\nplt.imshow(ndvi,cmap='RdYlGn')          # \nplt.colorbar()                               # show colorbar\nplt.title('NDVI')\n\ndel ndvi ; gc.collect()","9e1d2826":"\n#NDWI\nndwi = (g.astype(float)-swir1.astype(float))\/(g.astype(float)+swir1.astype(float))\nplt.subplots(figsize=(25,25))\nplt.axis('off')\nplt.imshow(ndwi,cmap='YlGnBu')          \nplt.colorbar()                               \nplt.title('NDWI')\n\ndel ndwi ; gc.collect()","fb81a242":"\n#NDBI \nndbi = (swir1.astype(float)-nir.astype(float))\/(swir1.astype(float)+nir.astype(float) + 1e-7)\nndvi = (nir.astype(float)-r.astype(float))\/(nir.astype(float)+r.astype(float) + 1e-7)\n\nbu = ndbi - ndvi\n\n\nbu = np.where(bu>0.02,-0.2,bu)  # clip larger values(as they are from water bodies)\n# bu = np.where(bu<-0.2,-0.2,bu)  # clip smaller values\n\nplt.subplots(figsize=(25,25))\nplt.axis('off')\n\n\nthresh= 1e-3\nplt.imshow(bu>thresh,cmap='gray')          \nplt.colorbar()                               \nplt.title(' BuiltUp Area ')\n\ndel ndbi ,bu,ndvi; gc.collect()","3a5f3eca":"**Create a RGB Image**","7db27452":"# Normalized Difference water Index\n\n    NDWI(modified) = Green - Short Wave Infrared \/ (Green + Short Wave Infrared)\n    \n**In this Image, we can see the water bodies in the area highlighted with deep blue.**","495a8a2e":"**Saving a RGB Image**","1dcaaf9f":"**Some Band Metadata**","f66286c1":"**Chekcing the Images in 20 Meters resolution**","f090b824":"**False Color Image(replace red band by Near Infrared)**","fb7f9438":"**Downloading the raster with the least cloud cover**","42a0b4cf":"# Download data from Copernicus","1df4a51e":"**Area of Interest**","4a2efd7c":"# Build Up Area \n    NDBI = SWIR - NIR \/ SWIR + NIR \n    \n**In this Image, the Buildup\/Bare Region is highlighted (along with some traces of water bodies)**","ec086732":"# Resources\n* sentinalsat Python API: [ https:\/\/sentinelsat.readthedocs.io\/en\/stable\/api_overview.html#quickstart ]\n* Planet Intro : [ https:\/\/www.kaggle.com\/robinkraft\/getting-started-with-the-data-now-with-docs ] \n* Radiant Earth Bootcamp :[ https:\/\/github.com\/RadiantMLHub\/ml4eo-bootcamp-2021 ]\n* Radiant Earth : [ https:\/\/github.com\/radiantearth ]\n* Sentinel sat api : https:\/\/buildmedia.readthedocs.org\/media\/pdf\/sentinelsat\/master\/sentinelsat.pdf\n* https:\/\/eos.com\/find-satellite\/sentinel-2\/","045fe339":"# Visualizing Images","ff9f206a":"# Downloading Sentinel 2 Image ","fbb60e4c":"# Remote Sensing Indices for segmenting Landcover\n\n\n**spectral reflectance curve**\n![](https:\/\/www.researchgate.net\/profile\/Paria-Ettehadi\/publication\/330994618\/figure\/fig2\/AS:724682999349248@1549789299321\/Spectral-reflectance-curves-of-different-land-cover-use-LCU-types-according-to-the.png)","50f1084e":"**We can see that the unzipped data has Images in 3 Resoultions(10m,20m,and 60m)**","09d9b5d9":"**Calculate Normalized Difference Vegetation Index :**\n\n    NDVI = (NIR - RED) \/ (NIR + RED) , where NIR is Near Infrared Band\n    \n    \n**We can see in this Image that most of the forests(with high NDVI) lie along the mountainous ranges that run along the west. The whitish region corresponds to water bodies and bare and urban regions, while the slightly green ones are less dense vegetations. **"}}