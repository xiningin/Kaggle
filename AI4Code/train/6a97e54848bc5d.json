{"cell_type":{"406e3ec1":"code","3fd7e121":"code","6d4f55e5":"code","a0bb5d00":"code","3fdac605":"code","4f07d59e":"code","6f0f0225":"code","8ad5480d":"code","94db8dde":"code","1aca18f1":"code","b708bd73":"code","88a2d566":"code","96de4264":"code","49c48d62":"code","d249e0ee":"code","6c32108a":"code","a1f469d7":"code","8fc490ca":"code","6dd4da84":"code","0c70e5ad":"code","ea271196":"code","c49f32d6":"code","edf53005":"code","4117a4a9":"code","6ba25001":"code","a18eb54b":"code","b3faf9ac":"markdown","b1e5b52d":"markdown","fb9da57f":"markdown","b8bbadfd":"markdown","0d1d5ff3":"markdown","2a3e2d03":"markdown","7e2a0312":"markdown","a221fd63":"markdown","6a1429d4":"markdown","ca7d9aeb":"markdown","9ed1c400":"markdown"},"source":{"406e3ec1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport random\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import load_img\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3fd7e121":"os.listdir(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\")","6d4f55e5":"train_dir = \"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\"\ntest_dir = \"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\"\nvalid_dir = \"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/val\"","a0bb5d00":"alltype = [\"NORMAL\",\"PNEUMONIA\"]\nnormal = random.sample(os.listdir(train_dir+\"\/NORMAL\"),5)\npneumonia = random.sample(os.listdir(train_dir+\"\/PNEUMONIA\"),5)","3fdac605":"from tqdm import tqdm\nimport cv2\nx_train =[]\ny_train = []\n#os.chdir = \"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\"\nfor i in tqdm(os.listdir(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\")):\n    img = cv2.imread(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\" +\"\/\"+i)\n    img = cv2.resize(img,(256,256))\n    x_train.append(img)\n    y_train.append(\"Normal\")\n","4f07d59e":"for i in tqdm(os.listdir(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\")):\n    img = cv2.imread(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\" +\"\/\"+i)\n    img = cv2.resize(img,(256,256))\n    x_train.append(img)\n    y_train.append(\"PNEUMONIA\")","6f0f0225":"fig = plt.figure(figsize=(12,6))\nfig.set_size_inches(12,12)\n\nfor i,image in enumerate(normal):\n    plt.subplot(1,5,i+1)\n    img = load_img(train_dir+\"\/NORMAL\"+\"\/\"+image)\n    plt.imshow(img)\n    plt.xlabel(\"Normal\")\n    plt.xticks([])\n    plt.yticks([])\nplt.tight_layout();\n\nplt.figure(figsize=(12,6))\nfig.set_size_inches(12,12)\n\nfor i,image in enumerate(pneumonia):\n    plt.subplot(1,5,i+1)\n    img = load_img(train_dir+\"\/PNEUMONIA\"+\"\/\"+image)\n    plt.imshow(img)\n    plt.xlabel(\"PNEUMONIA\")\n    plt.xticks([])\n    plt.yticks([])\nplt.tight_layout();\n    ","8ad5480d":"print(\"Total images in Train directory: {}\".format(len(os.listdir(train_dir+\"\/NORMAL\")) + len(os.listdir(train_dir+\"\/PNEUMONIA\"))))\nprint(\"Total images in Test directory: {}\".format(len(os.listdir(test_dir+\"\/NORMAL\")) + len(os.listdir(test_dir+\"\/PNEUMONIA\"))))\nprint(\"Total images in Validation directory: {}\".format(len(os.listdir(valid_dir+\"\/NORMAL\")) + len(os.listdir(valid_dir+\"\/PNEUMONIA\"))))","94db8dde":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\ntrain_datagen = ImageDataGenerator(rescale=(1.\/255),shear_range = 0.2,zoom_range=0.3,\n                                horizontal_flip=True)#fill_mode='nearest'\ntest_datagen = ImageDataGenerator(rescale = (1.\/255))\n\ntrain_data = train_datagen.flow_from_directory(directory = train_dir,target_size=(224,224),\n                                               class_mode = \"categorical\",batch_size=32)\ntest_data = test_datagen.flow_from_directory(directory = test_dir,target_size=(224,224),\n                                                class_mode = \"categorical\",batch_size=32)\n","1aca18f1":"from tensorflow.keras.applications.vgg19 import VGG19\nvgg = VGG19(weights = \"imagenet\",include_top = False,input_shape=(224,224,3))","b708bd73":"for layer in vgg.layers:\n    layer.trainable = False","88a2d566":"from tensorflow.keras.layers import Flatten,Dense,Dropout,BatchNormalization\nx = vgg.output\nx = Flatten()(x)\n#x = Dense(units=4096, activation='relu')(x)\n#x = BatchNormalization()(x)\n#x = Dropout(0.5)(x)\npredictions = Dense(2,activation= \"softmax\")(x)","96de4264":"from tensorflow.keras.models import Model\nfrom tensorflow.keras.optimizers import Adam\n\nmodel = Model(inputs = vgg.input,outputs = predictions)\nmodel.compile(optimizer=\"adam\",loss = \"categorical_crossentropy\",metrics =[\"accuracy\"])#Adam(1e-4)","49c48d62":"from tensorflow.keras.callbacks import ModelCheckpoint,EarlyStopping\n\ncheckpoint = ModelCheckpoint(\"vgg19.h5\",monitor = \"val_accuracy\",save_best_only=True,\n                             save_weights_only=False,mode='auto',verbose=1,period=1)\n\nearlystop = EarlyStopping(monitor=\"val_acc\",patience=5,verbose=1)","d249e0ee":"history = model.fit_generator(generator = train_data,validation_data = test_data,\n                              epochs = 15,verbose = 1,callbacks=[checkpoint,earlystop])#steps_per_epoch = len(train_datagen),validation_steps = len(val_datagen)","6c32108a":"model.evaluate_generator(test_data) #val_datagen","a1f469d7":"x_test =[]\ny_test = []\nfor i in tqdm(os.listdir(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/NORMAL\")):\n    img = cv2.imread(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/NORMAL\" +\"\/\"+i)\n    img = cv2.resize(img,(224,224))\n    x_test.append(img)\n    y_test.append(\"Normal\")\n    \nfor i in tqdm(os.listdir(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/PNEUMONIA\")):\n    img = cv2.imread(\"\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/PNEUMONIA\" +\"\/\"+i)\n    img = cv2.resize(img,(224,224))\n    x_test.append(img)\n    y_test.append(\"PNEUMONIA\")","8fc490ca":"x_test = np.array(x_test)\ny_test = np.array(y_test)\n\ny_pred = model.predict(x_test)\ny_pred = np.argmax(y_pred,axis=1)","6dd4da84":"y_pred[:15]","0c70e5ad":"unique,counts = np.unique(y_pred,return_counts=True)\nprint(unique,counts)","ea271196":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ny_test = le.fit_transform(y_test)","c49f32d6":"unique,counts = np.unique(y_test,return_counts=True)\nprint(unique,counts)","edf53005":"from sklearn.metrics import accuracy_score,classification_report\nprint(classification_report(y_test,y_pred))","4117a4a9":"from sklearn.metrics import confusion_matrix\nfrom mlxtend.plotting import plot_confusion_matrix\ncm = confusion_matrix(y_test,y_pred)\nplot_confusion_matrix(conf_mat = cm,figsize=(8,8),class_names = [\"Normal\",\"Pneumonia\"],show_normed=True)","6ba25001":"plt.style.use(\"ggplot\")\nfig = plt.figure(figsize=(12,7))\nepochs = range(1,16)\nplt.subplot(1,2,1)\nplt.plot(epochs,history.history[\"accuracy\"],\"go-\")\nplt.plot(epochs,history.history[\"val_accuracy\"],\"ro-\")\nplt.title(\"Model Accuracy\")\nplt.xlabel(\"Epochs\")\nplt.ylabel(\"Accuracy\")\nplt.legend([\"Train\",\"val\"],loc = \"upper left\")\n#plt.show()\n\n#fig = plt.figure(figsize=(12,8))    \nplt.subplot(1,2,2)\nplt.plot(epochs,history.history[\"loss\"],\"go-\")\nplt.plot(epochs,history.history[\"val_loss\"],\"ro-\")\nplt.title(\"Model Loss\")\nplt.xlabel(\"Epochs\")\nplt.ylabel(\"Loss\")\nplt.legend([\"Train\",\"val\"],loc = \"upper left\")\nplt.show()","a18eb54b":"plt.figure(figsize=(12,8))\n#plt.title(\"0 for Normal & 1 is for Pneumonia\")\nfor i in range(8):\n    sample_index = np.random.randint(1,len(y_test))\n    plt.subplot(2,4,i+1)\n    plt.imshow(x_test[sample_index])\n    plt.xlabel(\"Actual: {}\\n Predicted : {}\".format(y_test[sample_index],y_pred[sample_index]))","b3faf9ac":"><h3>Actual vs Predicted Result:<\/h3>","b1e5b52d":"><h3> Data Augmentation:<\/h3>\n\n>>Data Augmentation involves a suite of techniques that boost the size and value of training datasets such that better Deep Learning models can be built using them.Here we have a small number of images in our training  dataset,so image data augmentation can helps us to increase the models performance by increasing the number of images by doing some operation i.e Zooming,shear,flip etc","fb9da57f":"><h3>Symptoms<\/h3>\n\n>> The signs and symptoms of pneumonia vary from mild to severe, depending on factors such as the type of germ causing the infection, and your age and overall health. Mild signs and symptoms often are similar to those of a cold or flu, but they last longer.\n\nSigns and symptoms of pneumonia may include:\n\n- Chest pain when you breathe or cough\n- Confusion or changes in mental awareness (in adults age 65 and older)\n- Cough, which may produce phlegm\n- Fatigue\n- Fever, sweating and shaking chills\n- Lower than normal body temperature (in adults older than age 65 and people with weak immune systems)\n- Nausea, vomiting or diarrhea\n- Shortness of breath\n\nNewborns and infants may not show any sign of the infection. Or they may vomit, have a fever and cough, appear restless or tired and without energy, or have difficulty breathing and eating.","b8bbadfd":"><h4>Let's see some of the images:<\/h4>","0d1d5ff3":"><h3>What is Pneumonia??<\/h3>\n\n>> Pneumonia is an infection that inflames the air sacs in one or both lungs. The air sacs may fill with fluid or pus (purulent material), causing cough with phlegm or pus, fever, chills, and difficulty breathing. A variety of organisms, including bacteria, viruses and fungi, can cause pneumonia.Pneumonia can range in seriousness from mild to life-threatening. It is most serious for infants and young children, people older than age 65, and people with health problems or weakened immune systems.","2a3e2d03":"><h3>Learning Curve <\/h3>","7e2a0312":"><h3>Model Building:<\/h3>\n\n- Here i'm going to use Transfer learning model VGG19.VGG19 is a variant of VGG model which in short consists of 19 layers (16 convolution layers, 3 Fully connected layer, 5 MaxPool layers and 1 SoftMax layer). There are other variants of VGG like VGG11, VGG16 and others. VGG19 has 19.6 billion FLOPs.\n\n\n> <h3>VGG19 Architecture:<\/h3>\n\n- A fixed size of (224 * 224) RGB image was given as input to this network which means that the matrix was of shape (224,224,3).\n- The only preprocessing that was done is that they subtracted the mean RGB value from each pixel, computed over the whole training set.\n- Used kernels of (3 * 3) size with a stride size of 1 pixel, this enabled them to cover the whole notion of the image.\n- spatial padding was used to preserve the spatial resolution of the image.\n- max pooling was performed over a 2 * 2 pixel windows with sride 2.\n- this was followed by Rectified linear unit(ReLu) to introduce non-linearity to make the model classify better and to improve computational time as the previous models used tanh or sigmoid functions this proved much better than those.\n- implemented three fully connected layers from which first two were of size 4096 and after that a layer with 1000 channels for 1000-way ILSVRC classification and the final layer is a softmax function.","a221fd63":"---\n\n<h1 style=\"text-align: center;font-size: 20px;\">Thanks for Reading!!<\/h1>\n\n---","6a1429d4":"---\n\n<h1 style=\"text-align: center;font-size: 40px;\">Pneumonia Detection from Chest X-Ray images<\/h1>\n\n---","ca7d9aeb":"\n<center><img src=\"https:\/\/www.mayoclinic.org\/-\/media\/kcms\/gbs\/patient-consumer\/images\/2016\/05\/18\/13\/02\/ww5r032t-8col-jpg.jpg\n\"width=\"500\" height=\"600\"><\/center>\n","9ed1c400":">Importing necessary libraries:"}}