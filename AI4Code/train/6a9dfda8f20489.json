{"cell_type":{"916a9155":"code","9854992c":"code","0b21d7b5":"code","1cc5be5a":"code","d212555f":"code","519d0c40":"code","dabdd3ee":"code","0b423d6b":"code","8634e465":"code","5b67ec2c":"code","72a2397d":"code","aea22636":"code","b65326f5":"code","4b3a4b0e":"code","f82cdd54":"code","920121b2":"code","bf7341ec":"code","220e46bf":"code","b9b37467":"code","74701603":"code","69977443":"code","987200f3":"code","d5096c53":"markdown","3961297c":"markdown","7d068832":"markdown","8d574012":"markdown","5fb05d44":"markdown","490166c9":"markdown","1c1e3edd":"markdown","39783e11":"markdown","f84ac1a3":"markdown","cbeb02ae":"markdown","06202ce8":"markdown","b4034b02":"markdown","d3ac76c4":"markdown","f135d9fc":"markdown","ba0b7e94":"markdown","02f79130":"markdown"},"source":{"916a9155":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sys\nimport pickle\nfrom sklearn import preprocessing\nfrom sklearn import metrics\nfrom sklearn.metrics import precision_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV, train_test_split, validation_curve, cross_val_score, cross_val_predict\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nsys.path.append(\"\/kaggle\/input\/enron-project\/\")\nfrom feature_format import featureFormat\nfrom feature_format import targetFeatureSplit\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n#sys.path.append('\/kaggle\/input\/enron-project\/')\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9854992c":"with open(\"\/kaggle\/input\/enron-project\/final_project_dataset_unix.pkl\", \"rb\") as file:\n    enron_dict = pickle.load(file)\n\ndf = pd.DataFrame.from_dict(enron_dict,orient='index')\n\ndf = df.replace('NaN',np.nan)\ndf.head()\n\n","0b21d7b5":"plt.scatter(df.salary,df.bonus)\nplt.xlabel('salary')\nplt.ylabel('bonus')","1cc5be5a":"x=df.loc[:,'salary']\nx=x.to_dict()\nkey=max(x,key=x.get)\nprint(key)\nx=enron_dict.pop('TOTAL')\ndf=pd.DataFrame.from_dict(enron_dict,orient='index')\ndf=df.replace('NaN',np.nan)\n","d212555f":"plt.scatter(df.salary,df.bonus)\nplt.xlabel('salary')\nplt.ylabel('bonus')\n","519d0c40":"plt.scatter(df.total_payments,df.salary)\nplt.xlabel('Total_payments')\nplt.ylabel('salary')\nplt.show()\n","dabdd3ee":"plt.scatter(df.shared_receipt_with_poi,df.to_messages)\nplt.xlabel('shared_receipt_with_poi')\nplt.ylabel('to_messages')\n","0b423d6b":"guess = df[(df.salary > 1000000) | (df.bonus > 5000000)|(df.total_payments.astype(float)>100000000)][['salary','bonus','total_payments','shared_receipt_with_poi','poi']]\n\nguess","8634e465":"list=['salary','to_messages','deferral_payments','total_payments','loan_advances','bonus','restricted_stock_deferred','deferred_income','total_stock_value','expenses','from_poi_to_this_person','exercised_stock_options','from_messages','other','from_this_person_to_poi','poi','long_term_incentive','shared_receipt_with_poi','restricted_stock','director_fees']","5b67ec2c":"#plotting the heatmap\nplt.figure(figsize=(5,5))\nsns.heatmap(df.dropna(how='all').drop(['other'],axis=1).corr(),cmap='coolwarm')\nplt.show()\n","72a2397d":"sns.set(rc={\"font.style\":\"normal\",\n            'axes.labelsize':15,\n            'xtick.labelsize':10,\n            'font.size':8,\n            'ytick.labelsize':10}\n       )\nfinancial=['poi', 'salary', 'deferral_payments', 'total_payments', 'loan_advances', 'bonus', 'restricted_stock_deferred', 'deferred_income', 'total_stock_value', 'expenses', 'exercised_stock_options', 'long_term_incentive', 'restricted_stock' ]\nsns.pairplot(df[financial],hue='poi',palette='husl')","aea22636":"sns.set(rc={'axes.labelsize':8,\n            'xtick.labelsize':8,\n            'font.size':8,\n            'ytick.labelsize':8}\n       )\n#financial=[ 'salary', 'deferral_payments', 'total_payments', 'loan_advances', 'bonus', 'restricted_stock_deferred', 'deferred_income', 'total_stock_value', 'expenses', 'exercised_stock_options', 'other', 'long_term_incentive', 'restricted_stock', 'director_fees' ]\nemail = ['to_messages','from_poi_to_this_person', 'from_messages', 'from_this_person_to_poi', 'shared_receipt_with_poi', 'poi']\nsns.pairplot(df[email], hue = 'poi', palette = 'husl')\n\nplt.show()","b65326f5":"features_list=['poi','salary','bonus','deferred_income','director_fees', 'to_messages','from_poi_to_this_person', \n                 'from_messages', 'from_this_person_to_poi', 'shared_receipt_with_poi','total_payments','restricted_stock_deferred', 'deferral_payments','total_stock_value', 'expenses', 'exercised_stock_options' ]\ndata = featureFormat(enron_dict,features_list)\ny, X = targetFeatureSplit(data)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1)\nprint(len(y_train), len(y_test))\n","4b3a4b0e":"X_scaled = preprocessing.scale(X_train)\nXtest_scaled = preprocessing.scale(X_test)\nlr = LogisticRegression(max_iter = 5000)\ngrid = {'C':[0.01, 0.03, 0.1, 0.3, 1, 3,10]}\ngrid1 = GridSearchCV(lr,param_grid=grid,scoring='accuracy',cv=5)\ngrid1.fit(X_scaled,y_train)","f82cdd54":"print(grid1.best_params_)\npred = grid1.predict(Xtest_scaled)\nprint('Test Accuracy = ',grid1.score(Xtest_scaled,y_test))\nprint(metrics.classification_report(y_test,pred, zero_division=0))","920121b2":"rf = RandomForestClassifier(n_estimators=200)\ngrid = {'n_estimators':[1, 10, 50],'max_depth':[25,30,35,40,45,50]}\ngrid_rf = GridSearchCV(rf,param_grid=grid,scoring='accuracy',cv=5)\ngrid_rf.fit(X_train,y_train)","bf7341ec":"print(grid_rf.best_params_)\npred = grid_rf.predict(X_test)\nprint('Accuracy = ',grid_rf.score(X_test,y_test))\nprint(metrics.classification_report(y_test,pred, zero_division = 0))","220e46bf":"km = KNeighborsClassifier()\ngrid = {'n_neighbors':[4,5,6,7,8,9,10,11]}\ngrid_km = GridSearchCV(km,param_grid=grid,scoring='accuracy',cv=5)\ngrid_km.fit(X_train,y_train)","b9b37467":"print(grid_km.best_params_)\npred = grid_km.predict(X_test)\nprint('Accuracy = ',grid_km.score(X_test,y_test))\nprint(metrics.classification_report(y_test,pred, zero_division = 0))","74701603":"from sklearn.tree import DecisionTreeClassifier\nada = AdaBoostClassifier(DecisionTreeClassifier(max_depth=1),n_estimators=200)\nparam_grid = {\"base_estimator__criterion\" : [\"gini\", \"entropy\"],\"base_estimator__splitter\":[\"best\", \"random\"], \"n_estimators\": [1, 2]}\ngrid_ada = GridSearchCV(ada, param_grid=param_grid, scoring = 'accuracy', cv=5)\ngrid_ada.fit(X_train, y_train)","69977443":"print(grid_ada.best_estimator_)\npred = grid_ada.predict(X_test)\nprint('Accuracy = ',grid_ada.score(X_test,y_test))\nprint(metrics.classification_report(y_test,pred, zero_division = 0))","987200f3":"pickle.dump(ada, open(\"my_classifier.pkl\", \"wb\") )\npickle.dump(enron_dict, open(\"my_dataset.pkl\", \"wb\") )\npickle.dump(features_list, open(\"my_feature_list.pkl\", \"wb\") )","d5096c53":"**Detecting the outliers  (to find if any error)**","3961297c":"**Random Forest Classifier**","7d068832":"In 2000, Enron was one of the largest companies in the United States. By 2002, it had collapsed into bankruptcy due to widespread corporate fraud. In the resulting Federal investigation, there was a significant amount of typically confidential information entered into public record, including tens of thousands of emails and detailed financial data for top executives. In this project, WE will play detective, and build a person of interest identifier based on financial and email data made public as a result of the Enron scandal. ","8d574012":"**LogisticRegression**","5fb05d44":"we know skilling and lay were the punished ones as they got huge amount of bonus from a comparitively less salary.As this plots conts 3\/5 poi ths is baneficial data.\n","490166c9":"> *The dataset is given in the form of dictionary where key is the name of the person and there values also are dictionaries based on the features as the key to the inner dictionaries are features.Hence we convert the dictionary to dataframe.Each person is labeled as a poi or non-poi. *","1c1e3edd":"***Importing the libraries required***","39783e11":"**FINDING THE POI IN THE ENRON EMAIL DATASET**","f84ac1a3":"*Plotting the plots for salary and bonuses to check if there is any discrepancy *","cbeb02ae":"*We have our dataset devided into three main categories-financial data,email data and poi labels.*\n\n**financial features:** 'salary', 'deferral_payments', 'total_payments', 'loan_advances', 'bonus', 'restricted_stock_deferred', 'deferred_income', 'total_stock_value', 'expenses', 'exercised_stock_options', 'other', 'long_term_incentive', 'restricted_stock', 'director_fees' (all units are in US dollars)\n\n**email features:** 'to_messages', 'email_address', 'from_poi_to_this_person', 'from_messages', 'from_this_person_to_poi', 'shared_receipt_with_poi'\n\n**POI label:** \u2018poi\u2019","06202ce8":"**K Neighbours classifier**","b4034b02":"**Feature Selection**:\n*we identify the main features nd make the features_list for train and testing via the feature_format function*","d3ac76c4":"Detecting the key for the value at the extreme of the plot ,we get that there was a \"TOTAL\" key which adds all the salary.So,removing it. and replotting the data.","f135d9fc":"*The outliers have salary greater than 1000000 and bonus greater than 5000000. Exploring more features we get outliers in total_payments,deferred_income,shared_reciept_with_poi and to_msges.Thus plotting the plot .*","ba0b7e94":"**Importing the dataset**","02f79130":"**ADABOOSTER CLASSIFIER**"}}