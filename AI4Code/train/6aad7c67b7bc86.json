{"cell_type":{"39889df5":"code","a702b82a":"code","5f84b0b0":"code","f89c8e6a":"code","877d3153":"code","93e397a7":"code","22749441":"code","38698729":"code","8bab9d0f":"code","e08b5ed6":"code","74be663d":"code","6b659f70":"code","121c9867":"code","4186bf26":"code","a05010b4":"code","9e5ae6e2":"code","0fac69df":"code","89927c4b":"code","9c1051c3":"code","39a33cb1":"code","29fe183b":"code","366bac2d":"code","5f78d97b":"code","a20f5065":"code","a2636a08":"code","6b11a6f1":"code","cbc289eb":"code","eeeff6b8":"code","720d1726":"code","8d7c977d":"code","9b3815ed":"code","77df3ab8":"code","7642eca4":"code","7062b97f":"code","687f6ed7":"code","910b2728":"code","d1fb1b8f":"code","eca46b27":"code","5a8edfed":"code","8268b0ec":"code","9cad1530":"code","c94aee6d":"code","e146f9ad":"code","194d4c83":"code","a2fd63bd":"code","4e27b6d3":"code","b2f0ed4b":"code","379f6ed1":"code","5f03fa9c":"code","77108ffc":"code","8c599469":"code","f1bc4e39":"code","b968cccd":"code","054dc85d":"code","a4483bb8":"code","4fb8fc64":"code","0edb8d4e":"code","c88d6c7d":"code","02cfe562":"code","6873069f":"code","d67bb932":"code","ce915d1d":"code","0e029b9c":"code","5519bb87":"code","a9270a67":"code","32dbfcc2":"code","db582425":"markdown","74f18f77":"markdown","f8fd4f25":"markdown","b790e667":"markdown","75014345":"markdown","42643c1c":"markdown","ff8d5e7d":"markdown","3f74dce0":"markdown","f0449902":"markdown","bf59a595":"markdown","98a6b2e1":"markdown","fd08dae5":"markdown","b18dff46":"markdown","61591b51":"markdown","4e046bd1":"markdown","aebecf3c":"markdown","2297f67a":"markdown","703de372":"markdown","8674262b":"markdown","99a86cfc":"markdown","02bd3efb":"markdown","69461aca":"markdown","bec345b2":"markdown","0b7583e8":"markdown","646b3c39":"markdown","3949ed62":"markdown","58e08268":"markdown","281f3fed":"markdown","47e9aa24":"markdown","5be38c65":"markdown","e15bf364":"markdown","64a12f8f":"markdown","2f28adfb":"markdown","029ff683":"markdown","e6a2c5b0":"markdown","c60185d1":"markdown","0396ff54":"markdown","2954c78d":"markdown","b10ef88b":"markdown","2653c43d":"markdown","058de6ed":"markdown","45f93e89":"markdown","b5969d97":"markdown","d616d5d2":"markdown"},"source":{"39889df5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a702b82a":"df = pd.read_csv(\"\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 4.csv\" , parse_dates=['Order Date'])","5f84b0b0":"df.head()","f89c8e6a":"df.rename({\"Order Number\" : \"Order_Number\" , \"Order Status\" : \"Order_Status\"  , \"Book Name\" : \"Book_Name\" ,\n           \"Order Date\" : \"Order_Date\" , \"City (Billing)\" : \"City\" } , axis = 1 , inplace = True)","877d3153":"df.info()","93e397a7":"df.isnull().sum()","22749441":"row , col  = df.shape\n\nprint(f\"there are {row} rows and {col} columns\")","38698729":"df[df[\"Book_Name\"].isnull()]","8bab9d0f":"df[df[\"City\"].isnull()]","e08b5ed6":"df.dropna(inplace=True)","74be663d":"df.isnull().sum()","6b659f70":"pd.options.display.max_rows = None","121c9867":"df[\"Book_Name\"].head(10)","4186bf26":"df[\"Book_Name\"].tail(10)","a05010b4":"len(df[\"City\"].unique())","9e5ae6e2":"len(df[\"Book_Name\"].unique())","0fac69df":"df[\"Book_Name\"] = df[\"Book_Name\"].str.lower()","89927c4b":"df[\"Book_Name\"] = df[\"Book_Name\"].str.replace(\"(\" , \"\").str.replace(\")\" , \"\")\ndf[\"Book_Name\"] = df[\"Book_Name\"].str.replace(\"[\" , \"\").str.replace(\"]\" , \"\")","9c1051c3":"df[\"Book_Name\"] = df[\"Book_Name\"].str.replace(\"python programming- release date: august 14, 2020\" , \"python programming\")\ndf[\"Book_Name\"] = df[\"Book_Name\"].str.replace(\"\u0627\u0646\u0679\u0631\u0646\u06cc\u0679 \u0633\u06d2 \u067e\u06cc\u0633\u06c1 \u06a9\u0645\u0627\u0626\u06cc\u06ba\u061f- \u0645\u0633\u062a\u062d\u0642\u06cc\u0646 \u0632\u06a9\u0648\u0627\u0629\" , \"\")\ndf[\"Book_Name\"] = df[\"Book_Name\"].str.replace(\"molo masali - \u0645\u0648\u0644\u0648 \u0645\u0635\u0644\u06cc\" , \"molo masali\" )\ndf[\"Book_Name\"] = df[\"Book_Name\"].str.replace(\"r ka taaruf  \u0622\u0631 \u06a9\u0627 \u062a\u0639\u0627\u0631\u0641\" , \"r ka taaruf\")\ndf[\"Book_Name\"] = df[\"Book_Name\"].str.replace(\"linux - an introduction release data - october 3, 2020\" , \"linux - an introduction\")","39a33cb1":"df[\"Book_Name\"].value_counts().head(10)","29fe183b":"for i in df[\"Book_Name\"].tail(10).str.split(\"\/\"):\n    print(i)","366bac2d":"df[\"Book_Name\"].str.split(\"\/\").str[0].head(10)","5f78d97b":"df[\"Book_Name\"] = df[\"Book_Name\"].str.split(\"\/\").str[0]","a20f5065":"df[\"Book_Name\"].value_counts().head(10)","a2636a08":"df.Book_Name.nunique()","6b11a6f1":"df.City.sample(20)","cbc289eb":"df[\"City\"] = df[\"City\"].str.lower().str.replace(\",\" , \"\").str.replace(\"?\" , \"\").str.replace(\"\\d+\" , \"\").str.replace(\"[\" , \"\").str.replace(\"]\" , \"\").str.strip()","eeeff6b8":"df[\"City\"].value_counts().head(10)","720d1726":"pak_cities = ['islamabad', 'ahmed nager chatha', 'ahmadpur east', 'ali khan abad', 'alipur', 'arifwala', 'attock', 'bhera',\n              'bhalwal', 'bahawalnagar','bahawalpur', 'bhakkar', 'burewala', 'chillianwala', 'chakwal', 'chichawatni',\n              'chiniot', 'chishtian',\n              'daska', 'darya khan', 'dera ghazi khan', 'dhaular', 'dina', 'dinga', 'dipalpur', 'faisalabad', 'ferozewala',\n              'fateh jhang','ghakhar mandi', 'gojra', 'gujranwala', 'gujrat', 'gujar khan', 'hafizabad', 'haroonabad', 'hasilpur',\n              'haveli lakha', 'jatoi',\n              'jalalpur', 'jattan', 'jampur', 'jaranwala', 'jhang', 'jhelum', 'kalabagh', 'karor lal esan', 'kasur', 'kamalia', 'kamoke',\n              'khanewal',\n              'khanpur', 'kharian', 'khushab', 'kot addu', 'jauharabad', 'lahore', 'lalamusa', 'layyah', 'liaquat pur',\n              'lodhran', 'malakwal', 'mamoori', 'mailsi', 'mandi bahauddin', 'mian channu', 'mianwali', 'multan', 'murree', \n              'muridke', 'mianwali bangla', 'muzaffargarh', 'narowal', 'nankana sahib', 'okara', 'renala khurd', 'pakpattan', \n              'pattoki', 'pir mahal', 'qaimpur', 'qila didar singh', 'rabwah', 'raiwind', 'rajanpur', 'rahim yar khan',\n              'rawalpindi',\n              'sadiqabad', 'safdarabad', 'sahiwal', 'sangla hill', 'sarai alamgir', 'sargodha', 'shakargarh', 'sheikhupura',\n              'sialkot',\n              'sohawa', 'soianwala', 'siranwali', 'talagang', 'taxila', 'toba tek singh', 'vehari', 'wah cantonment', \n              'wazirabad',\n              'badin', 'bhirkan', 'rajo khanani', 'chak', 'dadu', 'digri', 'diplo', 'dokri', 'ghotki', 'haala', 'hyderabad',\n              'islamkot', 'jacobabad', 'jamshoro', 'jungshahi', 'kandhkot', 'kandiaro', 'karachi', 'kashmore', 'keti bandar',\n              'khairpur', 'kotri', 'larkana', 'matiari', 'mehar', 'mirpur khas', 'mithani', 'mithi', 'mehrabpur', 'moro',\n              'nagarparkar', 'naudero', 'naushahro feroze', 'naushara', 'nawabshah', 'nazimabad', 'qambar', 'qasimabad', \n              'ranipur', 'ratodero', 'rohri', 'sakrand', 'sanghar', 'shahbandar', 'shahdadkot', 'shahdadpur',\n              'shahpur chakar', 'shikarpaur', 'sukkur', 'tangwani', 'tando adam khan', 'tando allahyar',\n              'tando muhammad khan', 'thatta', 'umerkot', 'warah', 'abbottabad', 'adezai', 'alpuri', 'akora khattak',\n              'ayubia', 'banda daud shah', 'bannu', 'batkhela', 'battagram', 'birote', 'chakdara', 'charsadda', 'chitral',\n              'daggar', 'dargai', 'darya khan', 'dera ismail khan', 'doaba', 'dir', 'drosh', 'hangu', 'haripur', 'karak',\n              'kohat', 'kulachi', 'lakki marwat', 'latamber', 'madyan', 'mansehra', 'mardan', 'mastuj', 'mingora', 'nowshera',\n              'paharpur', 'pabbi', 'peshawar', 'saidu sharif', 'shorkot', 'shewa adda', 'swabi', 'swat', 'tangi', 'tank',\n              'thall', 'timergara', 'tordher', 'awaran', 'barkhan', 'chagai', 'dera bugti', 'gwadar', 'harnai', 'jafarabad',\n              'jhal magsi', 'kacchi', 'kalat', 'kech', 'kharan', 'khuzdar', 'killa abdullah', 'killa saifullah', 'kohlu',\n              'lasbela', 'lehri', 'loralai', 'mastung', 'musakhel', 'nasirabad', 'nushki', 'panjgur', 'pishin valley', \n              'quetta', 'sherani', 'sibi', 'sohbatpur', 'washuk', 'zhob', 'ziarat']\n","8d7c977d":"df.head(10)","9b3815ed":"def clean_city(city):\n    for i in pak_cities:\n        if i in str(city):\n            return i\n    return city","77df3ab8":"df[\"City\"] = df[\"City\"].apply(clean_city)","7642eca4":"###  reduce city names from 4082 to 1707","7062b97f":"df[\"City\"].nunique()","687f6ed7":"import nltk","910b2728":"def clean_city(row):\n    address = row.City.split()\n    add = set()\n    for a in address:\n        a = a.strip()\n        if a:\n            add.add(a)\n    for city in pak_cities:\n        if row.City.__contains__(city):\n            return city\n        \n    for a in add:\n        for c in pak_cities:\n            if nltk.edit_distance(a, c) <= 15: # considering spelling mistakes upto 5 letters\n                return c\n    return row.City","d1fb1b8f":"df[\"City\"] = df.apply(clean_city , axis = 1)","eca46b27":"df.City.nunique()","5a8edfed":"df.groupby(\"City\")[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False).head(10)","8268b0ec":"df[\"Order_Date\"] = pd.DatetimeIndex(df[\"Order_Date\"])\ndf[\"Year\"] = df[\"Order_Date\"].dt.year\ndf[\"Day\"] = df[\"Order_Date\"].dt.day_name()\ndf[\"Month\"] = df[\"Order_Date\"].dt.month_name()\ndf[\"Time\"] = df[\"Order_Date\"].dt.time\ndf[\"Hour\"] = df[\"Order_Date\"].dt.time\ndf[\"MY\"]=pd.to_datetime(df['Order_Date']).dt.to_period('M')\ndf[\"MY\"]= df[\"MY\"].dt.strftime('%Y-%m')","9cad1530":"df.head()","c94aee6d":"df[\"Order_Status\"].unique()","e146f9ad":"df[\"Order_Status\"].value_counts()","194d4c83":"#First we check Number of completed, returned and cancelled orders\norder_status = dict(df.value_counts('Order_Status'))\nfor key,value in order_status.items():\n    print(f'{key} orders are {value}')\n\n#Visualize completed, returned and cancelled orders\nstatus = order_status.keys()\nquantity = order_status.values()\nplt.figure(figsize = (8,6))\nplt.bar(status , quantity , color = ('Purple' , 'Green' , 'Red'))\nplt.grid()\nplt.xticks()\nplt.yticks()\nplt.title('Order Status Insights' )\nplt.xlabel('Status' )\nplt.ylabel('Quantity' )\nplt.show()","a2fd63bd":"df[\"Order_Date\"].dt.year.unique()","4e27b6d3":"# reterive order status in 2019\n# stats_19 = df[df['order_date'].dt.strftime(\"%Y\") == \"2019\"].order_status  #FIRST METHOD\n# # reterive order status in 2020\n# stats_20 = df[df['order_date'].dt.strftime(\"%Y\") == \"2020\"].order_status\n# # reterive order status in 2021\n# stats_21 = df[df['order_date'].dt.strftime(\"%Y\") == \"2021\"].order_status","b2f0ed4b":"# reterive order status in 2019.\nstats_2019 = df[df[\"Order_Date\"].dt.year == 2019].Order_Status            # SECOND METHOD\n# reterive order status in 2020.\nstats_2020 = df[df[\"Order_Date\"].dt.year == 2020].Order_Status\n# reterive order status in 2021.\nstats_2021 = df[df[\"Order_Date\"].dt.year == 2021].Order_Status\n\n# graph size\nplt.figure(figsize=(16,6))\n#histogram for 2019\nplt.subplot(1,3,1)\nplt.title('Order Status in 2019')\nplt.xlabel('Order status')\nplt.ylabel('Total no of orders')\nplt.hist(stats_2019)\n\n\n#histogram for 2020\nplt.subplot(1,3,2)\nplt.title('Order Status in 2020')\nplt.xlabel('Order status')\nplt.ylabel('Total no of orders')\nplt.hist(stats_2020)\n\n\n#histogram for 2021\nplt.subplot(1,3,3)\nplt.title('Order Status in 2021')\nplt.xlabel('Order status')\nplt.ylabel('Total no of orders')\nplt.hist(stats_2021)\nplt.show()","379f6ed1":"df[df[\"Order_Status\"] == \"Returned\"].Book_Name.value_counts().head(10)","5f03fa9c":"df[df[\"Order_Status\"] == \"Returned\"].City.value_counts().head(10)","77108ffc":"df[df[\"Order_Status\"] == \"Completed\"].Book_Name.value_counts().head(10)","8c599469":"df[df[\"Order_Status\"] == \"Completed\"].City.value_counts().head(10)","f1bc4e39":"df[df[\"Order_Status\"] == \"Canceled\"].Book_Name.value_counts().head(10)","b968cccd":"df[df[\"Order_Status\"] == \"Canceled\"].City.value_counts().head(10)","054dc85d":"df[\"Book_Name\"].value_counts().head(10)","a4483bb8":"df[\"Book_Name\"].value_counts().head(10).plot.bar()\nplt.xticks()\nplt.title(\"Top 10 Best Selling Books\")\nplt.xlabel(\"Books\")\nplt.ylabel(\"Number of Orders\")\nplt.show()\n","4fb8fc64":"df[\"Book_Name\"].value_counts().tail(10)","0edb8d4e":"df[\"Book_Name\"].value_counts().tail(10).plot.bar()\nplt.xticks()\nplt.title(\"Least 10 Selling Books\")\nplt.xlabel(\"Books\")\nplt.ylabel(\"Number of Orders\")\nplt.show()","c88d6c7d":"df.City.value_counts().head(10).to_frame()","02cfe562":"df.City.value_counts()[:10].plot.bar()\nplt.xlabel(\"City\")\nplt.title(\"Best Selling City\")\nplt\nplt.show()","6873069f":"most_cities = df['City'].value_counts().head(10)\n#pi-chart of top  most cities where books sold\nmost_cities.plot(kind='pie',figsize=(8,8),autopct='%1.1f%%')","d67bb932":"total_book_sold = df[\"Book_Name\"].value_counts().sum()\nprint(f\"In total ,{total_book_sold} book sold by Gufhtugu Publications from {df.Order_Date.min()} to {df.Order_Date.max()}\")","ce915d1d":"df.head()","0e029b9c":"corr = df.groupby([\"Order_Status\",\"MY\"])[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False)\ncorr=corr.sort_values(\"MY\")\n\nfig, ax = plt.subplots()\nax.set_xticklabels(corr[\"MY\"], rotation=60)\nfig.set_size_inches([10, 6])\n\nax = sns.barplot(x = \"MY\"  , y=\"Order_Number\",hue=\"Order_Status\",hue_order=[\"Completed\", \"Returned\", \"Cancelled\"],data=corr,palette=\"muted\")\nax.set_title('Date-wise Order Status',fontsize=16)\nax.set_xlabel(\"Dates\",fontsize=13)\nax.set_ylabel(\"Number of Orders\",fontsize=13) \nplt.show()","5519bb87":"top_cities=df.groupby(\"City\")[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False).head(10)\n\ntop_cities","a9270a67":"corr_ci_os= df.groupby([\"City\",\"Order_Status\" ])[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False)\ncorr_ci_os","32dbfcc2":"corr_ci_os= df.groupby([\"City\",\"Order_Status\" ])[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False)\ncorr_ci_os = corr_ci_os[corr_ci_os[\"City\"].isin(top_cities[\"City\"])]\nfig, ax = plt.subplots()\nax=sns.barplot(x=\"City\",y=\"Order_Number\",hue=\"Order_Status\",data=corr_ci_os, palette=\"muted\")\n# ax.set_xticklabels(corr_ci_os[\"City\"], rotation=90)\nfig.set_size_inches([10, 6])\nax.set_title('City-wise Order Status',fontsize=16)\nax.set_ylabel(\"Number of Orders\",fontsize=13) \nax.set_xlabel(\"Top 10 Cities\",fontsize=13)","db582425":"### Now data is clean. we are good to go now.next step to address the queries.","74f18f77":"### Find the Correlation of Canceled books with book name.","f8fd4f25":"### Rename the column names.","b790e667":"# Visualize Order Status Frequency","75014345":"### explore the null values to understand.","42643c1c":"## Order status per year","ff8d5e7d":"### There are multiple book names in a single row tried to correct them.","3f74dce0":"# Tasks to achieve\n\n* What is the best-selling book?\n* Visualize order status frequency\n* Find a correlation between date and time with order status\n* Find a correlation between city and order status\n* Find any hidden patterns that are counter-intuitive for a layman\n* Can we predict number of orders, or book names in advance?Tasks to achieve\n\n","f0449902":"### Find the Correlation of returned books with city. ","bf59a595":"#### With the help of this list try to clean the cities names.","98a6b2e1":"### Break order_date column into day , month , year and time.","fd08dae5":"# Correlation between city and order status.","b18dff46":"## books sells in top most 10 cities","61591b51":"### Drop all na values from columns.","4e046bd1":"### Convert entries into lower case.","aebecf3c":"#### there are some other country ,cities , town name are also in this data remove that name.","2297f67a":"### notes\n\n### book name column are in different form like that   \n* \u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633\/\u0645\u0634\u06cc\u0646 \u0644\u0631\u0646\u0646\u06af\/QATRA QATRA QULZAM\n\n* (C++)\/\u0627\u0646 \u067e\u06cc\u062c 2000\/\u0639\u0628\u0627\u0631\u062a \u06a9\u06cc\u0633\u06d2 \u0644\u06a9\u06be\u06cc\u06ba \u0631\u0634\u06cc\u062f \u062e\u0627\u0646\/\u0646\u0641\u0633\u06cc\u0627\u062a \u06a9\u06d2 \u0645\u0639\u0645\u0627\n\n* Waqfa e Pareshani\/Artificial Intelligence\/Python Programming\/Introduction to Blockchain with Case Studies\/\u0627\u062c\u0627\u0644\u0648\u06ba \u06a9\u0627 \u0633\u0641\u0631\/Book Band kamron ki Muhabbat\/MAN CHALAY KAA SODAA \n\n* R ka Taaruf  \u0622\u0631 \u06a9\u0627 \u062a\u0639\u0627\u0631\u0641\/\u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633 \u06d4 \u0627\u06cc\u06a9 \u062a\u0639\u0627\u0631\u0641\/Global Science - Issue 219\n\n* Kaggle for Begginers\/Introduction to Blockchain with Case Studies\/Justju ka safar-1\/ATOMIC HABITS\/Bagh-o-bahar bachoon kay lay dil chisp kahanian\/Badlo Soch Badlo Zindagi\/Aik Yaadgar Mushaira\/Fear Management - A Spiritual Insight into Overcoming Your Fear  \n### changed books name into single book like that.\n* \u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633\/\u0645\u0634\u06cc\u0646 \u0644\u0631\u0646\u0646\u06af\/QATRA QATRA QULZAM -> \u0645\u0634\u06cc\u0646 \u0644\u0631\u0646\u0646\u06af\n### there are incorrect name of book also.\n* \"r ka taaruf  \u0622\u0631 \u06a9\u0627 \u062a\u0639\u0627\u0631\u0641\" -> r ka taaruf\n\n* \"\u0627\u0646\u0679\u0631\u0646\u06cc\u0679 \u0633\u06d2 \u067e\u06cc\u0633\u06c1 \u06a9\u0645\u0627\u0626\u06cc\u06ba\u061f- \u0645\u0633\u062a\u062d\u0642\u06cc\u0646 \u0632\u06a9\u0648\u0627\u0629 -> \"\"\n\n* python programming- release date: august 14, 2020 -> python programming\n\n* linux - an introduction (release data - october 3, 2020) -> linux - an introduction\n","703de372":"### Find the Correlation of returned books with City.","8674262b":"### There are 4082 unique cities names.","99a86cfc":"### There are 3509 unique books names.","02bd3efb":"### Now all done with the city column.only 192 cities names are unique.\n","69461aca":"#### Update the Book_Name column.","bec345b2":"##### list of pakistani cities obtained from https:\/\/gist.github.com\/malikbilal1997\/4f41d4d153fca7087a8875cac7db8836","0b7583e8":"#### First break code into single row for checking is it working or not then combine into single code.","646b3c39":"# Top 10 selling books.","3949ed62":"# Least 10 selling books.","58e08268":"#### Convert entries into lower case and remove blank spaces and special character.","281f3fed":"### Renames some books names which names are not correct.","47e9aa24":"### Find the Correlation of Completed books with book name.","5be38c65":"# Correlation between date and time with order status","e15bf364":"# Top 10 best selling city.","64a12f8f":"### Find the Correlation of returned books with book name, city and order_status.","2f28adfb":"## Upvote if you find the notebook interesting.","029ff683":" #### Book names are now look good each book in a separate row. ","e6a2c5b0":"### remove special character from book column.","c60185d1":"### clean the  book name column and reduce the unique names of book to 3509 to 665","0396ff54":" ### check the null values in the dataset","2954c78d":"### total num of books sold.","b10ef88b":"#### Apply a function on the city column to reduce incorrect cities names.","2653c43d":"### Sepraate the books in each order on \"\/\".","058de6ed":"## Next steps\n\n###  Find any hidden patterns that are counter-intuitive for a layman\n### Can we predict number of orders, or book names in advance?","45f93e89":"### Find the Correlation of Canceled books with city.","b5969d97":" ###  use this advance nltk libraray which remove all incorrect names from city column.","d616d5d2":"### notes\n\n### in city column there is huge amount of name of cities is wrong and multiple mistake are there like.\n\n#### there are  villages , district  , tehsil , town names are also connect with city name that the real problem also.\n\n####  in many places banks name  , colony name  are also in the city column\n\n####  different country , town , city name also  ->abu dhabi , , london , northyork ,  mississauga \n\n#### province name of  pakistan punjab  , sindh  , balochistan , kpk , ajk\n\n####  karachi -> khi , hub ,hub chowki , gulistane -johar , gulzare hijiri , gulshan -e- iqbal , \"jahangiria ship malir ext near sokarachio\" , \"malir\" , \"orangi\" , \"azizabad\" , \"north nazimabad\"\n\n#### lahore -> lhr , valencia\/lahore , Midel town lahore , Township Lahore\n\n####  hydrabad -> hyd , hydrabadad , hydrabd , hydra bad \n\n#### islamabad ->  islambad , lslamababd , islama  bad , alkhidmat raazi hospital cbr\n\n#### faislabad -> fsd , the four seasons sumandri road faislabad , faislabad faislabad \n\n#### peshawar ->canal raod peshawar , university peshawar\n\n##### dera ghazi khan -> dg khan , d g khan , deraghazikhan , dera ghazi khan kahn , mangrotha east thesil taunsa district dera ghazi khan khan\n\n#### special character ->  \".\" , \"\/\" , \":\" , \",\" ,\"()\" ,\"[]\" also.\n\n#### continue.....\n\n#### maximam city name are incorrect ."}}