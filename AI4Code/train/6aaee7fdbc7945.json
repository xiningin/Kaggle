{"cell_type":{"40299e30":"code","4ac29f83":"code","13a473ea":"code","18f3e840":"code","ac4aef3a":"code","6f4304e1":"code","562af544":"code","d3e2073d":"code","3582dbb9":"code","c9e79ca3":"code","e09d0f5d":"markdown","323a01b9":"markdown","808160bb":"markdown","9cd04f8d":"markdown","f7c4500b":"markdown","8013838b":"markdown","6dc63fb2":"markdown"},"source":{"40299e30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ac29f83":"!pip install pyspark\n","13a473ea":"import pyspark\n\nfrom pyspark.sql import SparkSession\n\nfrom pyspark.sql import functions as f\n\nspark = SparkSession.builder.appName(\"PySparkKaggle\").getOrCreate()\n","18f3e840":"movies_smallDF = (spark.read.csv(\n        path=\"\/kaggle\/input\/msis405l21cttt-spring-2021-assignment-7\/movies_small.csv\",\n        sep=\",\",\n        header=True,\n        quote='\"',\n        schema=\"moviedId INT, title STRING, genres STRING\",\n    )\n)","ac4aef3a":"movies_smallDF.show()\n","6f4304e1":"movies_smallDF.withColumn(\"genres_array\",f.split(f.col(\"genres\"),\"\\|\")).filter(f.array_contains(f.col('genres_array'),'Action')).select('moviedId','title','genres').show(5)\n","562af544":"movies_smallDF.withColumn('count', f.size(f.split('genres', '\\|'))).select('moviedId', 'title', 'count').sort('moviedId').show(5, truncate=False)\n\n\n","d3e2073d":"movies_smallDF.withColumn('arr', f.split('genres', '\\|')).withColumn('genres', f.explode('arr')).groupBy('genres').count().sort('count').show(6)\n","3582dbb9":"movies_smallDF.withColumn('genres_array', f.split('genres', '\\|')).withColumn('genres', f.explode('genres_array')).groupBy('genres').agg(f.collect_list(\"title\").alias('moives_list')).show(truncate=100)\n","c9e79ca3":"movies_smallDF.withColumn('arr', f.split('title', ' ')).withColumn('last_element', f.element_at('arr', -1)).withColumn('year', f.substring('last_element', 2,4).cast('int')).withColumn('arr_genres', f.split('genres', '\\|')).withColumn('genres', f.explode('arr_genres')).groupBy('genres').agg(f.min('year').alias('first_appearance')).filter(f.substring('genres',0,10).isin(['Sci-Fi','Animation'])).select(f.col('genres').alias('genre'), 'first_appearance').show(1000, truncate=False)\n","e09d0f5d":"# **Import Data**","323a01b9":"# **Question 1**","808160bb":"# **Question 3**","9cd04f8d":"# **Question 4**","f7c4500b":"# **Question 5**","8013838b":"# **Team 8**\n+ Tr\u1ea7n \u0110\u1ee9c Th\u1ecbnh - 18521450\n\n+ Ng\u00f4 Phan Ph\u00fac Nguy\u00ean -18521159\n\n+ Nguy\u1ec5n T\u1ea5n Ph\u00fac - 18521258\n\n+ \u0110inh Th\u1ecb M\u1ef9 Ho\u00e0n - 18520771","6dc63fb2":"# **Question 2**"}}