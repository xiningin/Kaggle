{"cell_type":{"7c7acc83":"code","e21c20da":"code","5562cf2c":"code","1f191999":"code","8686aeb7":"code","f5da099a":"code","4816ec43":"code","e423ed47":"code","a056d2ee":"code","d0c79c13":"code","c5419d6e":"code","612c5379":"code","6962bf80":"code","30a14042":"code","76d152ae":"code","2f28016a":"code","51b0d97c":"code","8571e17f":"code","c304c354":"code","19039389":"code","5dda09df":"code","ae246317":"code","b1f851ec":"code","2b8a1853":"code","bdf42248":"code","039fad21":"code","832e4c94":"code","b563f82d":"code","79a11a12":"markdown","b164cb6b":"markdown","a1b87cb7":"markdown","576e638c":"markdown","e0226cd0":"markdown","ab567360":"markdown","7e75a618":"markdown","12b7315b":"markdown"},"source":{"7c7acc83":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, random_state=2021)\n    \n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[target])\n\n    \n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, target='charges')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","e21c20da":"X_train.head()","5562cf2c":"y_train.head()","1f191999":"y_train['charges'].hist()","8686aeb7":"X_train.isnull().sum()","f5da099a":"X_test.isnull().sum()","4816ec43":"X_train.info()","e423ed47":"X_train.select_dtypes(\"object\").columns","a056d2ee":"# Train ['sex', 'smoker', 'region']\ncols = X_train.select_dtypes(\"object\").columns\n\nfor col in cols:\n    print(\"\\n=====\", col, \"=====\")\n    print(\"[train]\")\n    print(X_train[col].value_counts())\n    print(\"[test]\")\n    print(X_test[col].value_counts())","d0c79c13":"X_train = pd.get_dummies(X_train, columns = cols)\nX_test = pd.get_dummies(X_test, columns = cols)","c5419d6e":"X_train.head(2)","612c5379":"y_train['charges'].hist()","6962bf80":"y_train['charges'] = np.log1p(y_train['charges'])","30a14042":"y_train['charges'].hist()","76d152ae":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train['bmi'] = scaler.fit_transform(X_train[['bmi']])\nX_test['bmi'] = scaler.transform(X_test[['bmi']])","2f28016a":"# \ub098\uc774\ub97c 10\ub300, 20\ub300, 30\ub300\ub85c \uad6c\ubd84\ud558\uae30 \uc704\ud574 10\uc744 \ub098\ub208 \ubaab \uac12\ub9cc \uad6c\ud568\nX_train['age'] = X_train['age'].apply(lambda x: x\/\/10)\nX_test['age'] = X_test['age'].apply(lambda x: x\/\/10)","51b0d97c":"X_train.head(3)","8571e17f":"target = y_train['charges']\nX_train = X_train.drop('id', 1)","c304c354":"from sklearn.model_selection import train_test_split\nX_tr, X_val, y_tr, y_val = train_test_split(X_train, target, test_size=0.15, random_state=2022)\nX_tr.shape, X_val.shape, y_tr.shape, y_val.shape","19039389":"from sklearn.ensemble import RandomForestRegressor\n\nrf = RandomForestRegressor()\nrf.fit(X_tr, y_tr)\npred = rf.predict(X_val)","5dda09df":"from sklearn.metrics import mean_squared_error\ndef rmse2(y_true, y_pred):\n    return np.sqrt(mean_squared_error(y_true, y_pred))\n\nrmse2(y_val, pred)","ae246317":"def rmse(y_true, y_pred):\n    return np.sqrt(np.mean((y_true-y_pred)**2))\n\nrmse(y_val, pred)","b1f851ec":"from xgboost import XGBRegressor\n\nxgb = XGBRegressor()\nxgb.fit(X_tr, y_tr)\npred = xgb.predict(X_val)","2b8a1853":"rmse2(y_val, pred)","bdf42248":"rf.fit(X_train, y_train['charges'])\npred = rf.predict(X_test.drop('id',1))","039fad21":"pred = np.exp(pred)\noutput = pd.DataFrame({'id': y_test['id'], 'charges':pred})\noutput.head()","832e4c94":"output.to_csv(\"000000.csv\", index=False)","b563f82d":"rmse(y_test['charges'], pred)","79a11a12":"## Log Transform","b164cb6b":"# Preprocessing","a1b87cb7":"## Categorical Variables","576e638c":"## label encoding","e0226cd0":"# \uacb0\uacfc \uccb4\uc810","ab567360":"## Standard Scaler","7e75a618":"# EDA","12b7315b":"## Train-Validation Split"}}