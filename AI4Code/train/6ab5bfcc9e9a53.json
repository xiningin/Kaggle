{"cell_type":{"be7306a9":"code","3ec477f4":"code","66327eb8":"code","4b1b22b2":"code","4ca315b9":"code","f1801369":"code","92ee6f10":"code","0676efe7":"code","2673626f":"code","a6021475":"code","298364ca":"code","942e23f7":"code","217242ee":"code","9a4488f9":"code","32f4064e":"code","67258a0a":"code","100dcaf5":"code","243bf7a7":"code","4d9cd7bc":"code","bfa3409b":"code","cbe0570d":"code","08fe2cad":"code","41a64637":"markdown","914cad95":"markdown","cf447902":"markdown","1652da6e":"markdown","6daedb47":"markdown","b54c9d40":"markdown","ebe8973a":"markdown","850cfac1":"markdown","982e4d7c":"markdown","2248d61a":"markdown","b46e0e18":"markdown","8be6ad43":"markdown","20bc4733":"markdown","44b32e49":"markdown","0213d30f":"markdown","dc04f0da":"markdown","ef4806b9":"markdown"},"source":{"be7306a9":"# Importing required libraries\n\nimport numpy as np\nimport pandas as pd \nimport matplotlib as plt\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3ec477f4":"emer = pd.read_csv(\"..\/input\/montcoalert\/911.csv\")","66327eb8":"emer.shape","4b1b22b2":"emer.info()","4ca315b9":"emer.head(5)","f1801369":"emer.isnull().sum()","92ee6f10":"emer.drop(\"e\", axis=1, inplace=ace=ace=ace = True)\nemer.head(3)","0676efe7":"emer[\"timeStamp\"] = pd.to_datetime(emer[\"timeStamp\"])\ntype(emer[\"timeStamp\"][0])","2673626f":"emer[\"Day of week\"] = emer[\"timeStamp\"].apply(lambda time: time.dayofweek)\nemer[\"Date\"] = emer[\"timeStamp\"].apply(lambda time: time.day)\nemer[\"Month\"] = emer[\"timeStamp\"].apply(lambda time: time.month)\nemer[\"Year\"] = emer[\"timeStamp\"].apply(lambda time: time.year)\nemer[\"Hour\"] = emer[\"timeStamp\"].apply(lambda time: time.hour)\nemer.head(4)","a6021475":"dtmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\nemer[\"Day of week\"] = emer[\"Day of week\"].map(dtmap)\nemer.head(4)","298364ca":"emer[\"Day\/Night\"] = emer[\"timeStamp\"].apply(lambda x : \"Night\" if int(x.strftime(\"%H\")) > 18 else \"Day\")\nemer.head(4)","942e23f7":"emer[\"Reason\"] = emer[\"title\"].apply(lambda i:i.split(\":\") [0])\nemer[\"Detailed Reason\"] = emer[\"title\"].apply(lambda i:i.split(\":\") [1])\nemer.head(4)","217242ee":"emer[\"Station\"] = emer[\"desc\"].str.extract(\"(Station.+?);\", expand=False).str.strip()\nemer.head(4)","9a4488f9":"del emer[\"title\"]\ndel emer[\"timeStamp\"]\nemer.head(4)","32f4064e":"# Find out the major reason type of calls made.\n\nplt.figure(figsize=(10,5))\nsns.set_context(\"paper\", font_scale = 1.5)\nsns.countplot(x='Reason',data=emer, palette = \"mako\",  saturation=0.9)\nsns.set_style(\"ticks\")","67258a0a":"emer[\"Detailed Reason\"].value_counts().head(15)","100dcaf5":"plt.figure(figsize=(20,10))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(y='Detailed Reason', data=emer, palette=\"terrain\", order=emer['Detailed Reason'].value_counts().index[:20])\nplt.title(\"Top Cases registered\")\nsns.set_style(\"darkgrid\")\nplt.show()","243bf7a7":"emer[\"Station\"].value_counts().head(10)","4d9cd7bc":"plt.figure(figsize=(20,10))\nsns.set_context(\"paper\", font_scale =2)\nsns.countplot(y='Station',data=emer, palette = \"gist_stern\", order = emer[\"Station\"].value_counts().index[:10])\nplt.title(\"Top 10 Station with highest call\")\nsns.set_style(\"whitegrid\")","bfa3409b":"emer[\"Day\/Night\"].value_counts()","cbe0570d":"plt.figure(figsize=(10,5))\nsns.set_context(\"paper\", font_scale =1.5)\nsns.countplot(x='Day\/Night',data=emer,palette='gnuplot')\nsns.set_style(\"darkgrid\")","08fe2cad":"plt.figure(figsize=(10,8))\nsns.countplot(x='Day of week',data=emer,hue='Reason',palette='cubehelix')\nplt.title(\"Calls on each days of the week\")\nsns.set_style(\"ticks\")","41a64637":"## DATA VISUALIZATION","914cad95":"### Finding out if the calls made more in day or night time","cf447902":"### Top 10 reasons for which calls were made","1652da6e":"#### Now we can remove the title and timeStamp col, as we extracted the information from it ","6daedb47":"### Top 10 Stations were incidents were reported","b54c9d40":"#### We see the data has been imported properly and there are not any NAN values in the coulmns like: timeStamp, title, desc, which will of more use to us later.","ebe8973a":"## Lets find out the detailed reasons of incidents using title col:","850cfac1":"### Converting \"timeStamp\" object into a proper DateTime Object:\n#### If you check the type of the timeStamp col, its a series and the values are of string data type, but we need the column is data time format to do analysis.","982e4d7c":"### Data Cleaning:\n#### However we see the last column 'e' has no significance as its a dummy column and all the entries are equal to 1, so its better to discard that column.","2248d61a":"## Extract which station recorded more number of calls.","b46e0e18":"### If we notice how the Day of Week is an integer 0-6. Use the .map() with this dictionary to map the actual string names to the day of the week:","8be6ad43":"## 911 -Emergency call dataset -\nThe data- contains the following fields:-- -  \n\n- lat : String variable, Latitude\n- lng: String variable, Longitude\n- desc: String variable, Description of the Emergency Call\n- zip: String variable, Zipcode\n- title: String variable, Title\n- timeStamp: String variable, YYYY-MM-DD HH:MM:SS\n- twp: String variable, Township\n- addr: String variable, Address\n- e: String variable, Dummy variable (always 1)","20bc4733":"### Also we can segregate on the day & night time basis","44b32e49":"### Spliting the timeStamp col in different cols, Date, Month, Year, Day of week, Hour.","0213d30f":"#### Extracting some insights from the dataset","dc04f0da":"### Check on which day of the week calls were made more & does that have any significance","ef4806b9":"## Exploratory Data Analysis (EDA)- Python"}}