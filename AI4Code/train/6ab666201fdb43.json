{"cell_type":{"290069cd":"code","2d8d3aed":"code","d921ed6b":"code","ff935e7a":"code","b1c07021":"code","97aa8662":"code","d226f1cc":"code","77d400a3":"code","8c61f05a":"code","2a3764b0":"code","2936957f":"code","0955ace2":"code","94f15402":"code","7144a98f":"code","ba54f4e7":"code","2e0b942b":"code","8e2dded1":"code","c37c7c15":"code","874859c1":"code","9f0994b6":"code","1117261b":"code","cdb53559":"code","a88c1885":"markdown"},"source":{"290069cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d8d3aed":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os","d921ed6b":"os.getcwd()","ff935e7a":"df = pd.read_csv('..\/input\/fifa19\/data.csv')","b1c07021":"df.head()","97aa8662":"df.info()","d226f1cc":"pd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)","77d400a3":"df.shape","8c61f05a":"df.isnull().sum()","2a3764b0":"df.drop(['Unnamed: 0','Photo','Flag', 'Club Logo'],axis=1, inplace=True)","2936957f":"df.head()","0955ace2":"import missingno as msno","94f15402":"msno.matrix(df.sample(18207))","7144a98f":"missing_heights = df[df['Height'].isnull()].index.tolist()\nmissing_weights = df[df['Weight'].isnull()].index.tolist()\nif missing_heights == missing_weights:\n    print(\"Same same\")\nelse:\n    print(\"but different\")","ba54f4e7":"df.drop(df.index[missing_heights], inplace=True)","2e0b942b":"df.drop(['Loaned From','Release Clause','Joined'],axis=1,inplace=True)","8e2dded1":"df.describe()","c37c7c15":"df['Nationality'].value_counts().head(5)","874859c1":"print('Total number of clubs : ', df['Club'].nunique())\ndf['Club'].value_counts().head(5)","9f0994b6":"df.head().T","1117261b":"#Cleaning some of values so that we can interpret them \ndef value_to_int(df_value):\n    try:\n        value = float(df_value[1:-1])\n        suffix = df_value[-1:]\n\n        if suffix == 'M':\n            value = value * 1000000\n        elif suffix == 'K':\n            value = value * 1000\n    except ValueError:\n        value = 0\n    return value\n\ndf['Value'] = df['Value'].apply(value_to_int)\ndf['Wage'] = df['Wage'].apply(value_to_int)","cdb53559":"df['Value']","a88c1885":"df.describe()"}}