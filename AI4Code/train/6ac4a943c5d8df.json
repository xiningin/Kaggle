{"cell_type":{"3a365da6":"code","507c0953":"code","660e44c1":"code","765d9d75":"code","8def8fb4":"code","ad21fca8":"code","0bed6eb4":"code","15072e92":"code","427bdc02":"code","90e0714d":"code","877f32ab":"code","e62607f3":"code","d1b50081":"code","f0435eee":"code","52493c4c":"code","a78103f0":"code","10aa80c4":"code","a31d3d3b":"code","6e9c706d":"code","fafdcd61":"code","f2611928":"code","73e4f304":"code","23e25371":"code","408056e1":"code","26b97d6b":"code","e9f97259":"code","75e59f2a":"code","6f677f24":"code","facf46e7":"code","19b08ed5":"code","cde9d8bf":"code","e2be908d":"code","153f0540":"code","1cfc2d1d":"code","26b57914":"code","bdf9103a":"code","1ae2670c":"code","2f991935":"code","4c66b2b7":"markdown"},"source":{"3a365da6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n%matplotlib inline\nimport plotly.express as px","507c0953":"data = pd.read_csv('..\/input\/churn-predictions-personal\/Churn_Predictions.csv')","660e44c1":"data","765d9d75":"data.info()","8def8fb4":"data.describe()","ad21fca8":"data.isnull().sum()","0bed6eb4":"sns.barplot(data=data,x='Gender',y='Balance')","15072e92":"data","427bdc02":"data.drop(['RowNumber','CustomerId','Surname'],axis=1,inplace=True)\n#we are dropping it because it will not impact the predictions ","90e0714d":"data","877f32ab":"geography=pd.get_dummies(data['Geography'],drop_first=True)\ngender=pd.get_dummies(data['Gender'],drop_first=True)","e62607f3":"geography","d1b50081":"gender","f0435eee":"data","52493c4c":"data.drop(['Gender','Geography'],axis=1,inplace=True)","a78103f0":"data","10aa80c4":"data=pd.concat([data,gender,geography],axis=1)","a31d3d3b":"data","6e9c706d":"data.columns","fafdcd61":"X=data[['CreditScore', 'Age', 'Tenure', 'Balance', 'NumOfProducts', 'HasCrCard',\n       'IsActiveMember', 'EstimatedSalary','Male', 'Germany',\n       'Spain']]\nX=X.values\nX","f2611928":"y=data['Exited']\ny=y.values\ny","73e4f304":"from sklearn.model_selection import train_test_split","23e25371":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","408056e1":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)\n","26b97d6b":"X_train","e9f97259":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom tensorflow.keras.callbacks import EarlyStopping\nearly_stop = EarlyStopping(monitor='val_loss')","75e59f2a":"model= Sequential()\nmodel.add(Dense(units=11,activation='relu',kernel_initializer='he_uniform'))\n\nmodel.add(Dense(units=7,activation='relu',kernel_initializer='he_uniform'))\nmodel.add(Dense(units=4,activation='relu',kernel_initializer='he_uniform'))\nmodel.add(Dense(units=1,activation='sigmoid',kernel_initializer=\"glorot_uniform\"))\nmodel.compile(optimizer='adam',loss=\"binary_crossentropy\",metrics=['accuracy'])\n\nmodel.fit(X_train,y_train,batch_size=10,validation_split=0.33,epochs=300,validation_data=(X_test,y_test),callbacks=[early_stop])","6f677f24":"history=pd.DataFrame(model.history.history)\nhistory","facf46e7":"history[['loss','val_loss']].plot()\n","19b08ed5":"history['accuracy'].plot()","cde9d8bf":"y_pred = model.predict_classes(X_test)\n","e2be908d":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)","153f0540":"cm","1cfc2d1d":"sample=X_test[11].reshape(-1,11)","26b57914":"model.predict_classes(sample)\n","bdf9103a":"y_test[11]","1ae2670c":"from sklearn.metrics import accuracy_score\nscore=accuracy_score(y_pred,y_test)","2f991935":"score","4c66b2b7":"\n\n## Building ANN model using keras \n## Dataset - Churn Modelling"}}