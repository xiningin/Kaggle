{"cell_type":{"d38f1bc3":"code","be836668":"code","2ece50bf":"code","f26b9dac":"code","a87a26f5":"code","e93e5b0d":"code","b79de454":"code","64a51ec8":"code","10dc438c":"code","e42670ee":"code","5bf0695b":"code","073d2ddb":"code","57fa02df":"code","9912f5e9":"code","80ad9e3a":"code","185e37f8":"code","67c8b529":"code","7f05c0b3":"code","83046e23":"code","f5963f08":"code","aeeadaf2":"code","ede414b3":"code","f863aef5":"code","bd1b42ac":"code","ff56c934":"code","018b31a4":"markdown","4bb09dab":"markdown","a96abab3":"markdown"},"source":{"d38f1bc3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be836668":"import seaborn as sns\nimport matplotlib.pyplot as plt\ndata =pd.read_csv('..\/input\/coursera-course-dataset\/coursea_data.csv')\ndata.info()","2ece50bf":"def split_columns(data):\n    categorical_col = data.select_dtypes(include=['object','category']).columns.tolist()\n    numerical_col = data.select_dtypes(include=['int64','float64']).columns.tolist()\n    return categorical_col,numerical_col","f26b9dac":"cat,num = split_columns(data)","a87a26f5":"cat","e93e5b0d":"num","b79de454":"data = data.drop(columns=['Unnamed: 0'])","64a51ec8":"for key in cat:\n    if(not (key == 'course_title' or key=='course_organization' or key=='course_students_enrolled' )):\n        print(key,\":\",data[key].unique())","10dc438c":"\nratio = pd.DataFrame(pd.value_counts(data['course_organization'])\/(sum(pd.value_counts(data['course_organization']))))\nsns.countplot(data['course_difficulty'])\n","e42670ee":"\nsns.countplot(data['course_Certificate_type'])\n","5bf0695b":"sns.countplot(data['course_rating'])","073d2ddb":"df = pd.value_counts(data['course_organization'])\/sum(pd.value_counts(data['course_organization']))*100\ndata2 = {'Organization': df.keys(),'Ratio': df[df.keys()]}\ndf2 = pd.DataFrame(data2)\ndf2 = df2[df2['Ratio']>0.7]\nr = 100-df2['Ratio'].sum()\ndf2=df2.append(pd.DataFrame({\"Organization\":\"Misc\",\"Ratio\":r},index=[0]))\nlabels = df2['Organization'].unique()\n","57fa02df":"\npie, ax = plt.subplots(figsize=[15,15])\nlabels = df2['Organization'].unique()\nplt.pie(x=df2['Ratio'], autopct=\"%.1f%%\", labels=labels, pctdistance=.6)\nplt.title(\"Courses by Institutions\", fontsize=15);\n","9912f5e9":"data.course_title","80ad9e3a":"\ndef determine_count(data,key):\n    lists=[]\n    for course in data['course_title']:\n        if key in course:\n            lists.append(course)\n    return len(lists)\n\n","185e37f8":"subject = ['Machine Learning','Deep Learning','Data Analysis','Python','Reinforcement Learning','Statistics','Mathematics']\n\nprint(\"\\t Course count\")\nfor s in subject:\n    print(\"\\t\",s,\":\" ,determine_count(data,s))\n\n","67c8b529":"data2 = pd.DataFrame(data.course_students_enrolled.str.extract(r'([-]?[\\d.]*)([\\w\\D]*)').rename(columns={0:'VALUE', 1:'UNIT'}))\ndata2['VALUE'] = data2['VALUE'].astype('float')\ndata2['students_enrolled'] = data2.apply(lambda x: x.VALUE*1 if x.UNIT=='k' else (x.VALUE*1000 if x.UNIT=='m' else  x.VALUE\/1000),axis=1)\ndata['students_enrolled(thousands)']=data2['students_enrolled']\ndata = data.drop(columns=['course_students_enrolled'])\n\n\ndata['student_cat']=  data.apply(lambda x: '>500k' if x['students_enrolled(thousands)']>=500 \n                                 else ('>100k and <500k' if (x['students_enrolled(thousands)']>=100 and x['students_enrolled(thousands)']<500)\n                                                           else ('>10k and <100k' if (x['students_enrolled(thousands)']>10 and x['students_enrolled(thousands)']<100)\n                                                                                       else ('<10k'))),axis=1)\nplt.subplots(figsize=(8,8))\nsns.countplot(data['student_cat'])","7f05c0b3":"key = 'students_enrolled(thousands)'\n","83046e23":"#By no of students\ndata = data.sort_values(by=key,ascending=False)\ndata_top=data.head(50)\ndata_top\n\n","f5963f08":"print(\"\\t Course count\")\nfor s in subject:\n    print(\"\\t\",s,\":\" ,determine_count(data_top,s))\n\n","aeeadaf2":"sns.countplot(data_top['course_Certificate_type'])","ede414b3":"sns.countplot(data_top['course_difficulty'])","f863aef5":"data = data.sort_values(by='course_rating',ascending=False)\ndata_top_by_rating=data.head(50)\ndata_top_by_rating","bd1b42ac":"sns.countplot(data_top['course_Certificate_type'])","ff56c934":"sns.countplot(data_top['course_difficulty'])","018b31a4":"**By Course Rating**","4bb09dab":"**Courses with ML, DL, Java, Python, Data Science in them**","a96abab3":"a) **Most enrolled courses**"}}