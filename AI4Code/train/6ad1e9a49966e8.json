{"cell_type":{"d7922a1e":"code","1c9327c5":"code","ba220715":"code","70670abe":"code","be2c5ff3":"code","52a88d1e":"code","0be6e43d":"code","785ccad8":"code","91e3197d":"code","3eaf9f41":"code","12b3c71d":"code","c337e122":"code","a0421424":"markdown","93be9888":"markdown","e6caf723":"markdown","4e40d9d7":"markdown","a311e220":"markdown","87a2bd38":"markdown","d0d27586":"markdown","9f610c99":"markdown","f22464c3":"markdown","446dd212":"markdown","3d48be39":"markdown","26cd6c34":"markdown","29f13090":"markdown","9dbf08d1":"markdown"},"source":{"d7922a1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport math\nfrom textwrap import wrap\n\nwarnings.filterwarnings('ignore')\nsns.set_palette('Set2')\nsns.set_style('darkgrid')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c9327c5":"df = pd.read_csv(\"\/kaggle\/input\/covid19-health-services-disruption-survey-2020\/IHME_PREM_GEN_POP_2020_Y2020M11D05.CSV\")\nprint (df.shape)\ndf.head()","ba220715":"pd.set_option('display.max_colwidth', -1)\ndf_NA = pd.DataFrame(data=[df.isna().sum().tolist(), [\"{:.2f}\".format(i)+'%' for i in (df.isna().sum()\/df.shape[0]*100).tolist()]], \n            columns=df.columns, index=['NA_Count', 'NA_Percent']).transpose()\ndf_NA[df_NA['NA_Count']>0].transpose()","70670abe":"s = (df.isna().sum()\/df.shape[0]*100)<50\ndf_modified = df[s.index[s].tolist()]\nprint (df_modified.shape)\ndf_modified.head()","be2c5ff3":"plt.rcParams['font.size'] = 14\nfig, ax = plt.subplots(3, 2, figsize=(20,20))\nfor col, ax in zip(['gender','age','geography','financial_situation','education','employment_status','ethnicity','religion'], ax.flat):\n    dict_ = df_modified[col].value_counts().to_dict()\n    if ('Not Available' in dict_.keys()):\n        dict_.pop('Not Available')\n    labels = []\n    for i in dict_.keys():\n        i = i.split(' ')\n        if (len(i) > 6):\n            i[math.ceil(len(i)\/2)-1] += '\\n'\n            labels.append(' '.join(i))\n        else:\n            labels.append(' '.join(i))\n    ax.pie(x=list(dict_.values()), labels=labels, shadow=True, startangle=0)\n    \n    col = (' '.join(col.split('_'))).upper()\n    ax.set_title(col, weight='bold', fontsize=18)\nplt.tight_layout()\nplt.show()","52a88d1e":"plt.rcParams['font.size'] = 12\nplt.figure(figsize=(14,8))\nsns.countplot(y='ethnicity', data=df_modified, order=df_modified['ethnicity'].value_counts().index[:20])\nplt.xlabel('Population Count', weight='bold', fontsize=18)\nplt.ylabel('Ethnicity', weight='bold', fontsize=18)\nplt.show()","0be6e43d":"plt.rcParams['font.size'] = 12\nplt.figure(figsize=(14,6))\nsns.countplot(y='religion', data=df_modified, order=df_modified['religion'].value_counts().index[:10])\nplt.xlabel('Population Count', weight='bold', fontsize=18)\nplt.ylabel('Religion', weight='bold', fontsize=18)\nplt.show()","785ccad8":"plt.rcParams['font.size'] = 12\nplt.figure(figsize=(14,8))\nsns.countplot(y='country', data=df_modified, order=df_modified['country'].value_counts().index[:20])\nplt.xlabel('Population Count', weight='bold', fontsize=18)\nplt.ylabel('Country', weight='bold', fontsize=18)\nplt.show()","91e3197d":"plt.rcParams['font.size'] = 14\nplt.figure(figsize=(8,8))\ndict_ = {'Income Increased' : df_modified[df_modified['gp_post_income'] > df_modified['gp_pre_income']].shape[0],\n         'Income Decreased' : df_modified[df_modified['gp_post_income'] < df_modified['gp_pre_income']].shape[0],\n         'Income Constant' : df_modified[df_modified['gp_post_income'] == df_modified['gp_pre_income']].shape[0]}\nplt.pie(x=list(dict_.values()), labels=dict_.keys(), shadow=True, startangle=0, autopct='%1.1f%%', explode=[0, 0.05, 0.05])\nplt.show()","3eaf9f41":"plt.figure(figsize=(18,10))\nsns.countplot(y='education', hue='financial_situation', data=df_modified.replace('Not Available', np.nan))\nlabels = ['\\n'.join(wrap(l, 40)) for l in df_modified['financial_situation']]\nplt.legend(labels, shadow=True, facecolor='lightyellow', title='Financial Situation', title_fontsize=18)\nplt.xlabel('Population Count', weight='bold', fontsize=18)\nplt.ylabel('Education', weight='bold', fontsize=18)\nplt.show()","12b3c71d":"plt.figure(figsize=(18,10))\nsns.countplot(y='employment_status', hue='financial_situation', data=df_modified.replace('Not Available', np.nan))\nlabels = ['\\n'.join(wrap(l, 40)) for l in df_modified['financial_situation']]\nplt.legend(labels, shadow=True, facecolor='lightyellow', title='Financial Situation', title_fontsize=18)\nplt.xlabel('Population Count', weight='bold', fontsize=18)\nplt.ylabel('Employment Status', weight='bold', fontsize=18)\nplt.show()","c337e122":"plt.figure(figsize=(18,8))\nsns.countplot(y='gender', hue='employment_status', data=df_modified.replace('Not Available', np.nan))\nplt.legend(shadow=True, facecolor='lightyellow', title='Employment Status', title_fontsize=18)\nplt.xlabel('Population Count', weight='bold', fontsize=18)\nplt.ylabel('Gender', weight='bold', fontsize=18)\nplt.show()","a0421424":"# **EDA**","93be9888":"# **Feel free to Upvote and provide Feedback**","e6caf723":"## **Load the data**","4e40d9d7":"## **Get rid of the columns having missing data > 50%**","a311e220":"## **Population count with different education level across financial situations**\n\nIt is evident that people with education background of Secondary\/High\/Primary school, have poor financial conditions.","87a2bd38":"## **Distribution of top 20 Ethnicity groups**\n\nThere are total 197 unique ethnicity groups in the data","d0d27586":"## **Distribution of top 20 Countries**\n\nThere are total 76 unique countries in the data","9f610c99":"## **Demographics of the Population**","f22464c3":"# **COVID-19 Health Services Disruption Survey 2020**\nThe COVID-19 Health Services Disruption Survey 2020 is a series of surveys developed to assess the level\nof disruption to a range of health services resulting from the COVID-19 pandemic and subsequent\ngovernment mandates and changes in behavior to mitigate the spread of the disease.","446dd212":"## **Columns with missing (NA) data**","3d48be39":"## **Population count with different employment status across financial situations**\n\nIt is noticeable that students and unemployed people have poor financial conditions.","26cd6c34":"## **Population count with different gender across employment status**\n\nIt is observable that number unemployed people are almost same in both the genders, although the population of males is much higher. Therefore it can be concluded that % of unemployed Females is quite high.","29f13090":"## Variation in Income prior to, and immediately following, the onset of COVID-19","9dbf08d1":"## **Distribution of top 10 Religions**\n\nThere are total 44 unique religions in the data"}}