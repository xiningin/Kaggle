{"cell_type":{"caac3a0d":"code","e2a36912":"code","10d628d6":"code","125af822":"code","66895c10":"code","7b009d5a":"code","b8d0bfcc":"code","fa2d3701":"code","6f5c7077":"code","fbdff6e1":"code","ea63c77f":"code","d8a8b156":"code","6ecbf5b3":"code","e20e889c":"code","767b5630":"code","39e1771c":"code","c50e311c":"code","7fc351ca":"code","84c21cde":"markdown"},"source":{"caac3a0d":"#We will be importing all the required libraries at once so that we can systematically use them as and when required!\n\n# scintific computing libraries\nimport pandas as pd                                      \nimport numpy as np                    \nfrom scipy import optimize, stats        \n\n# visualisation libraries\nimport matplotlib.pyplot as plt                      \nimport seaborn as sns                \n\n# algorithmic library\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom lightgbm import LGBMRegressor\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, KFold\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.utils import resample\nfrom sklearn.pipeline import Pipeline\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import LSTM, Dense, Flatten, Dropout\nfrom tensorflow.keras.layers import LeakyReLU, PReLU, ELU\nfrom keras.utils import np_utils","e2a36912":"df_train = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ndf_shops = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ndf_items = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\ndf_item_categories = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')","10d628d6":"df_train.head()","125af822":"df_train.dtypes","66895c10":"df_train.describe()","7b009d5a":"df_train.isnull().sum()","b8d0bfcc":"df_train.drop(['date_block_num','item_price'], axis=1, inplace=True)","fa2d3701":"df_train['date'] = pd.to_datetime(df_train['date'], dayfirst=True)\ndf_train['date'] = df_train['date'].apply(lambda x: x.strftime('%Y-%m'))\ndf_train.head()","6f5c7077":"df = df_train.groupby(['date','shop_id','item_id']).sum()\ndf = df.pivot_table(index=['shop_id','item_id'], columns='date', values='item_cnt_day', fill_value=0)\ndf.reset_index(inplace=True)\ndf.head()","fbdff6e1":"df_test = pd.merge(df_test, df, on=['shop_id','item_id'], how='left')\ndf_test.drop(['ID', '2013-01'], axis=1, inplace=True)\ndf_test = df_test.fillna(0)\ndf_test.head()","ea63c77f":"Y_train = df['2015-10'].values\nX_train = df.drop(['2015-10'], axis = 1)\nX_test = df_test\n\nprint(X_train.shape, Y_train.shape)\nprint(X_test.shape)","d8a8b156":"x_train, x_test, y_train, y_test = train_test_split( X_train, Y_train, test_size=0.2, random_state=101)\nprint ('Train set:', x_train.shape,  y_train.shape)\nprint ('Test set:', x_test.shape,  y_test.shape)","6ecbf5b3":"LR = LinearRegression()\nLR.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, LR.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, LR.predict(x_test)))\nprint('Test set score:', LR.score(x_train,y_train))","e20e889c":"RFR = RandomForestRegressor(n_estimators = 100)\nRFR.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, RFR.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, RFR.predict(x_test)))\nprint('Test set score:', RFR.score(x_train,y_train))","767b5630":"prediction = RFR.predict(X_test)","39e1771c":"prediction = list(map(round, prediction))","c50e311c":"df_submission = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nprint(df_submission.shape)\ndf_submission.head()","7fc351ca":"df_submission['item_cnt_month'] = prediction\ndf_submission.to_csv('prediction.csv', index=False)\ndf_submission.head()","84c21cde":"> Once we're done importing all the required libraries, we'll load all the necessary files for data analysis!"}}