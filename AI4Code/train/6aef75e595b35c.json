{"cell_type":{"e168e981":"code","4691341d":"code","099b2475":"code","696aa753":"code","d7d77e75":"code","30e3d460":"code","44d84ae4":"code","f0cf8add":"code","0e6f92c3":"code","7fde89d8":"code","6e9efb65":"code","71244bde":"code","e19f506a":"code","db9f8684":"code","6e9d6e29":"code","7ffe376c":"code","6a51b458":"code","63d0f587":"code","cf3cf632":"code","29fcbabc":"code","bd6d2ca1":"code","45b15887":"code","4039852a":"code","3a3efefd":"code","96a3967e":"code","09197ce7":"markdown","e5e34e1b":"markdown","e15f6423":"markdown","05a803a0":"markdown","36bf0915":"markdown","bea60c71":"markdown","00ead002":"markdown","c51f72d9":"markdown","02629cd1":"markdown","0d5dfe0d":"markdown","4fbdb7bd":"markdown","dcc73f76":"markdown","92914ad4":"markdown","28a56129":"markdown","8dcd2cd2":"markdown","8aa0ce84":"markdown","c4dec615":"markdown","bdb6d240":"markdown","3f00cf40":"markdown","5141267b":"markdown","9c979c61":"markdown","1957d689":"markdown","4468e811":"markdown","845c48af":"markdown","cd18fb14":"markdown","86cafd5c":"markdown","322a1077":"markdown","6837a6e0":"markdown","3c8487c5":"markdown","9878aae2":"markdown","431b6743":"markdown","36682079":"markdown","6d39510e":"markdown","894a0cc0":"markdown"},"source":{"e168e981":"# Importing packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom itertools import cycle\nimport warnings\n\n# Style\npd.set_option('max_columns', 50)\nplt.style.use('bmh')\ncolor_pal = plt.rcParams['axes.prop_cycle'].by_key()['color']\ncolor_cycle = cycle(plt.rcParams['axes.prop_cycle'].by_key()['color'])\n\n# Supressing Warnings\nwarnings.filterwarnings('ignore')","4691341d":"# Reading data\ntrain_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\nsub_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\n\n# Baic Information about the data\nprint(f'Training Shape : {train_df.shape}')\nprint(f'Testing Shape : {test_df.shape}')\nprint(f'Sample Submission Shape : {sub_df.shape}')","099b2475":"# Description of numeric variables\ntrain_df.describe()","696aa753":"# Data info\ntrain_df.info()","d7d77e75":"# Getting the number of continuous and categorical variables\ncat_cols = [x for x in train_df.columns if train_df[x].dtype == 'object']\ncont_cols = [x for x in train_df.columns if train_df[x].dtype != 'object']\n\nprint(f'Total categorical variables in the dataset: {len(cat_cols)}')\nprint(f'Total continuous variables in the dataset: {len(cont_cols)}')","30e3d460":"# Plotting the distribution of the continuous variables\nfig, axs = plt.subplots(8, 5, figsize=(20, 15))\naxs = axs.flatten()\n\nfor i, column in zip(range(len(cont_cols)), cont_cols):\n    sns.distplot(train_df[column], ax=axs[i], kde=False)\n    plt.tight_layout()","44d84ae4":"# Appending categorical columns and removing continous columns\ncat_cols.append(x for x in ['MSSubClass', 'OverallQual', 'OverallCond'])\nfor x in ['MSSubClass', 'OverallQual', 'OverallCond']:\n    cont_cols.remove(x)","f0cf8add":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(15,6))\naxs = axs.flatten()\n\n# Distribution plot to see clearly\naxs[0].set_title('Distribution of YearBuilt in Training Data')\nsns.distplot(train_df.YearBuilt, ax=axs[0], color=color_pal[3]);\n\n# Stats\nprint(\"======Train=======\")\nprint(f\"Range of years: {min(train_df.YearBuilt)}-{max(train_df.YearBuilt)}\")\nprint(f\"Max Number of houses: {train_df.YearBuilt.value_counts(sort='DESC').iloc[0]}\" +\n     f\"\\nYear : {train_df.YearBuilt.value_counts(sort='DESC').index[0]}\")\n\n# Distribution plot to see clearly\nplt.title('Distribution of YearBuilt in test data')\nsns.distplot(test_df.YearBuilt, ax=axs[1], color=color_pal[4]);\n\n# Stats\nprint(\"======Test=======\")\nprint(f\"Range of years: {min(test_df.YearBuilt)}-{max(test_df.YearBuilt)}\")\nprint(f\"Max Number of houses: {test_df.YearBuilt.value_counts(sort='DESC').iloc[0]}\" +\n     f\"\\nYear : {test_df.YearBuilt.value_counts(sort='DESC').index[0]}\")","0e6f92c3":"# Distribution plot to see clearly\nfig, axs = plt.subplots(1, 2, figsize=(15,6))\naxs = axs.flatten()\naxs[0].set_title('Distribution of MSSubclass in Training Data')\nsns.distplot(train_df.MSSubClass, ax=axs[0], color=color_pal[1]);\n\naxs[1].set_title('Distribution of MSSubclass in Test Data')\nsns.distplot(test_df.MSSubClass, ax=axs[1], color=color_pal[2]);\n\n# Stats\nprint(f'Train Peak observed at {train_df.MSSubClass.value_counts(sort=\"DESC\").index[0]}')\nprint(f'Test Peak observed at {test_df.MSSubClass.value_counts(sort=\"DESC\").index[0]}')","7fde89d8":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(15,6))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of MSZoning in train data')\nsns.countplot(train_df.MSZoning, palette='gray', ax=axs[0]);\n\naxs[1].set_title('Count of MSZoning in test data')\nsns.countplot(test_df.MSZoning, palette='gray', ax=axs[1]);","6e9efb65":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(15,6))\naxs = axs.flatten()\n\naxs[0].set_title('Distribution of LotFrontage in Training Data')\nsns.distplot(train_df.LotFrontage, ax=axs[0], color=color_pal[5]);\n\naxs[1].set_title('Distribution of LotFrontage in Test Data')\nsns.distplot(test_df.LotFrontage, ax=axs[1], color=color_pal[6]);\n\nprint(f\"Max Train distibution of LotFrontage at: {train_df.LotFrontage.value_counts(sort='DESC').index[0]}\")\nprint(f\"Max Test distibution of LotFrontage at: {test_df.LotFrontage.value_counts(sort='DESC').index[0]}\")","71244bde":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(15,6))\naxs = axs.flatten()\n\naxs[0].set_title('Boxplot of LotFrontage in Training Data')\nsns.boxplot(train_df.LotFrontage, ax=axs[0], color=color_pal[0]);\n\naxs[1].set_title('Boxplot of LotFrontage in Test Data')\nsns.boxplot(test_df.LotFrontage, ax=axs[1], color=color_pal[1]);","e19f506a":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(15,6))\naxs = axs.flatten()\n\naxs[0].set_title('Distribution of LotArea in Training Data')\nsns.distplot(train_df.LotArea, ax=axs[0], color=color_pal[7]);\n\naxs[1].set_title('Distribution of LotArea in Test Data')\nsns.distplot(test_df.LotArea, ax=axs[1], color=color_pal[8]);\n\nprint(f\"Max Train distibution of LotArea at: {train_df.LotArea.value_counts(sort='DESC').index[0]}\")\nprint(f\"Max Test distibution of LotArea at: {test_df.LotArea.value_counts(sort='DESC').index[0]}\")","db9f8684":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,6))\naxs = axs.flatten()\n\naxs[0].set_title('Boxplot of LotArea in Training Data')\nsns.boxplot(train_df.LotArea, ax=axs[0], color=color_pal[2]);\n\naxs[1].set_title('Boxplot of LotArea in Test Data')\nsns.boxplot(test_df.LotArea, ax=axs[1], color=color_pal[3]);","6e9d6e29":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of Street Type in train data')\nsns.countplot(train_df.Street, palette='Dark2', ax=axs[0]);\n\naxs[1].set_title('Count of Street Type in test data')\nsns.countplot(test_df.Street, palette='Dark2', ax=axs[1]);","7ffe376c":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of Alley Type in train data')\nsns.countplot(train_df.Alley.fillna('NA'), palette='Blues', ax=axs[0]);\n\naxs[1].set_title('Count of Alley Type in test data')\nsns.countplot(test_df.Alley.fillna('NA'), palette='Blues', ax=axs[1]);","6a51b458":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of LotShape Type in train data')\nsns.countplot(train_df.LotShape.fillna('NA'), palette='Purples', ax=axs[0]);\n\naxs[1].set_title('Count of LotShape Type in test data')\nsns.countplot(test_df.LotShape.fillna('NA'), palette='Purples', ax=axs[1]);","63d0f587":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of LandContour Type in train data')\nsns.countplot(train_df.LandContour.fillna('NA'), palette='Reds', ax=axs[0]);\n\naxs[1].set_title('Count of LandContour Type in test data')\nsns.countplot(test_df.LandContour.fillna('NA'), palette='Reds', ax=axs[1]);","cf3cf632":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of Utilities Type in train data')\nsns.countplot(train_df.Utilities.fillna('NA'), palette='Greens', ax=axs[0]);\n\naxs[1].set_title('Count of Utilities Type in test data')\nsns.countplot(test_df.Utilities.fillna('NA'), palette='Greens', ax=axs[1]);","29fcbabc":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of LotConfig Type in train data')\nsns.countplot(train_df.LotConfig.fillna('NA'), palette='Oranges', ax=axs[0]);\n\naxs[1].set_title('Count of LotConfig Type in test data')\nsns.countplot(test_df.LotConfig.fillna('NA'), palette='Oranges', ax=axs[1]);","bd6d2ca1":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of LandSlope Type in train data')\nsns.countplot(train_df.LandSlope.fillna('NA'), palette='Oranges', ax=axs[0]);\n\naxs[1].set_title('Count of LandSlope Type in test data')\nsns.countplot(test_df.LandSlope.fillna('NA'), palette='Oranges', ax=axs[1]);","45b15887":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# Countplot\naxs[0].set_title('Count of Neighborhood Type in train data')\nsns.countplot(train_df.Neighborhood.fillna('NA'), palette='twilight_shifted', ax=axs[0]);\naxs[0].set_xticklabels(axs[0].get_xticklabels(), rotation=90, ha=\"right\");\n\naxs[1].set_title('Count of LandSlope Type in test data')\nsns.countplot(test_df.Neighborhood.fillna('NA'), palette='twilight_shifted', ax=axs[1]);\naxs[1].set_xticklabels(axs[1].get_xticklabels(), rotation=90, ha=\"right\");\n\nprint(f'Number of Neighborhoods(Train) : {len(np.unique(train_df.Neighborhood))}')\nprint(f'Number of Neighborhoods(Test) : {len(np.unique(test_df.Neighborhood))}')","4039852a":"# Figure\nfig, axs = plt.subplots(2, 2, figsize=(16,10))\naxs = axs.flatten()\n\n# Condition1\naxs[0].set_title('Count of Condition1 Type in train data')\nsns.countplot(train_df.Condition1.fillna('NA'), palette='autumn', ax=axs[0]);\naxs[0].set_xticklabels(axs[0].get_xticklabels(), rotation=90, ha=\"right\");\n\naxs[1].set_title('Count of Condition1 Type in test data')\nsns.countplot(test_df.Condition1.fillna('NA'), palette='autumn', ax=axs[1]);\naxs[1].set_xticklabels(axs[1].get_xticklabels(), rotation=90, ha=\"right\");\n\n# Condition2\naxs[2].set_title('Count of Condition2 Type in train data')\nsns.countplot(train_df.Condition2.fillna('NA'), palette='autumn', ax=axs[2]);\naxs[2].set_xticklabels(axs[2].get_xticklabels(), rotation=90, ha=\"right\");\n\naxs[3].set_title('Count of Condition2 Type in test data')\nsns.countplot(test_df.Condition2.fillna('NA'), palette='autumn', ax=axs[3]);\naxs[3].set_xticklabels(axs[3].get_xticklabels(), rotation=90, ha=\"right\");\n\nplt.tight_layout()","3a3efefd":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(16,5))\naxs = axs.flatten()\n\n# BedroomAbvGr\naxs[0].set_title('Count of BedroomAbvGr Type in train data')\nsns.countplot(train_df.BedroomAbvGr.fillna('NA'), palette='Blues', ax=axs[0]);\n\naxs[1].set_title('Count of BedroomAbvGr Type in test data')\nsns.countplot(test_df.BedroomAbvGr.fillna('NA'), palette='Blues', ax=axs[1]);\n","96a3967e":"# Figure\nfig, axs = plt.subplots(1, 2, figsize=(15,5))\naxs = axs.flatten()\n\naxs[0].set_title('Distribution of MiscVal in Training Data')\nsns.distplot(train_df.MiscVal, ax=axs[0], color=color_pal[7], kde=False);\n\naxs[1].set_title('Distribution of MiscVal in Test Data')\nsns.distplot(test_df.MiscVal, ax=axs[1], color=color_pal[8], kde=False);\n\nprint(f\"Max Train distibution of MiscVal at: {train_df.MiscVal.value_counts(sort='DESC').index[0]}\")\nprint(f\"Max Test distibution of MiscVal at: {test_df.MiscVal.value_counts(sort='DESC').index[0]}\")","09197ce7":"This is the neighborhood where the house is located. This columns should have a direct effect on the selling price.\nA good posh neighborhood with no crime and basic facilities nearby will be an ideal place to live for everyone.","e5e34e1b":"## 3. MSZoning","e15f6423":"Not all the numerical columns are continous, there are discrete columns which show some order of category in many variables in the data set.\n<br>\nOrdinal Categories:\n1. MSSubClass\n2. OverallQual\n3. OverallCond\n\nThere are other variables which have order but cannot be treated as ordinal eg. Baths, Fireplaces, Garages...These are continuous variables only.","05a803a0":"## 16. MiscVal","36bf0915":"MiscVal is the amount in dollars of the miscellaneous features provided with the property.\nThe selling price includes this value, so it will be directly related to the selling price of the propety.\nHowever the maxima is observed at 0, i.e no extra price is added to the final selling price.","bea60c71":"## 15. BedroomAbvGr","00ead002":"## 14. Condition1 and Condition2","c51f72d9":"## 11. LotConfig","02629cd1":"The Null values in the object type variables are NA (Not Available).\nThere are some NaNs present in continuous variable as well.","0d5dfe0d":"## 12. LandSlope","4fbdb7bd":"## 2. MSSubClass","dcc73f76":"Alley is the space between one property and the other property.","92914ad4":"One thing good about this data set is the sample population of train and test data is same.<br>\nThis will let the model trained on the training dataset to perform somewhat same on the test data as well.<br>\nThat is the distribution of the selling price in the test data may also be similar as in the training dataset.","28a56129":"Alley is not available for most of the houses.<br>\nDoes having an alley increases the selling price of the house?<br>\n**Hypothesis 2 : Alley increases the selling price of the house.**","8dcd2cd2":"## 1. YearBuilt","8aa0ce84":"## 7. Alley","c4dec615":"# Exploring each columns and gainin intution","bdb6d240":"## 13. Neighborhood","3f00cf40":"## 9. LandContour","5141267b":"1. According to the description : Linear feet of street connected to property<br>\nThe common\/standard value of the lotfrontage area is 60 in this dataset<br>\nFew outliers are present in this feature which will need treatment.","9c979c61":"1. **Train**\n\nQ. What is the range of year the houses were built in this dataset?<br>\nA. 1872 - 2010<br>\nFrom the distribution plot above, we can see that there is gradual increase in the construction of houses over the years.<br>\nThe peak is formed around the year 2000, most houses built in this year.<br>\nMaximum number of houses (67) were built in the year 2006.<br>\n\n2. **Test**\n\nQ. What is the range of year the houses were built in this dataset?<br>\nA. 1879 - 2010<br>\nThe peak is formed around year 2000, most houses built in this year.<br>\nMaximum number of houses (78) were built in the year 2005.<br>\n\nThe distribution for the training and testing data is almost same.","1957d689":"## 4. LotFrontage","4468e811":"## 8. LotShape","845c48af":"## 5. LotArea","cd18fb14":"## 6. Street","86cafd5c":"MSSubClass is the type of dwelling involved in the sale. The peak is observed somwhere near 20.<br>\nAccording to the data description 20 means 1-STORY 1946 & NEWER ALL STYLES. Most houses falls in this category.","322a1077":"Most of the houses have a regular lot shape. Mostly square lot shape maybe. <br>\n**Hypothesis 3 : Irregular shape of the lot does not effect the selling price.**","6837a6e0":"**Hypothesis 6: Neighborhood will effect the seeling price of the house.**","3c8487c5":"Similarly we can check each and every variable in the dataset and form some hypothesis around it.\nThe next task will be check if these hypothesis holds true. The data needs some cleaning, the missing values needs to imputed and the outliers to be accounted for.\n\nBelow is the conclusion that can be made for this dataset:\n1. The train and test distribution is same. Having same distribution of tain and test reduces our efforts in creating a good cross val stratergy.\n2. The Null values in the categorical columns are NA (not available).\n3. Some columns have discrete values and they appear to be categorical (Bedrooms, Fireplace etc.) but are actually continous in nature.\n4. The Null values in continous features needs to be imputed by either mean or median.\n5. Some categorical features can be combined to create one feature (Condition1 and 2, Exterior1st and Exterior2nd etc.).\n6. OverallQual and OverallCond can be averaged to get the OverallRating for the house.\n7. Some high cardinal categorical columns such as Neighborhood(25 Categories) should be combined based on the frequency distribution so that we have few categories to deal with in a single feature or column.\n8. Bivariate Analysis needs to be done to confirm the effect of some variables on the selling price. Variable not effecting the selling price need to be dropped so that we are left with high impacting features.","9878aae2":"In this section my aim will be to explore each column individually and deduce some conclusions based on the exploration.\nThis will help while creating model and in data processing process.","431b6743":"Lot area seems to be the total area of the plot when seen at an inclined angle(Top view) in a 2D plane.<br>\nIt also covers the yard up to the fence. This is the total area of the property.<br>\n**One hypothesis can be made here, that more the lot are more the selling price of the house.**<br>\nCan add up the LotArea and LotFrontage Area to get the TotalLotArea.","36682079":"The test data contains NA values where the train data has two categories AllPub and NoSeWa.<br>\nTHe train and test data distribution is similar so we can impute the NA by NoSeWa.<br>\nHowever the data description says that this column has 4 categories:<br>\n1. AllPub All public Utilities (E,G,W,& S)\t\n2. NoSewr Electricity, Gas, and Water (Septic Tank)\n3. NoSeWa Electricity and Gas Only\n4. ELO Electricity only\n\n**Hypothesis 5: Houses with all the utlities will have higher selling price.**","6d39510e":"Mostly all the houses are on level gorund.<br>\n**Hypothesis 4 : Houses not on the level ground will have comparitively less selling price.**","894a0cc0":"##  10. Utilities"}}