{"cell_type":{"d896d979":"code","5f184dfa":"code","d7c62d81":"code","02a676b1":"code","9cecaaf4":"code","7eec970a":"code","8f1a585f":"code","c7758864":"code","76e6c1b5":"code","3a4b2146":"code","13cb3926":"code","2c0b576d":"code","6594c774":"markdown","4a485a3f":"markdown","f0935d36":"markdown","fac60189":"markdown","eccf1b49":"markdown","024e1dad":"markdown","faca9200":"markdown","7a8affbe":"markdown","726f3857":"markdown","aa9f6e83":"markdown","8707a4c8":"markdown","ead6a3ab":"markdown","53dfd987":"markdown","f448ca72":"markdown"},"source":{"d896d979":"!pip install sqlserver","5f184dfa":"import sqlserver as ss \ndb = ss.sqlserver('localhost','1433','SpaceX','admin','admin')","d7c62d81":"db.GetRecordsOfColumn('select DISTINCT Launch_Site from tblSpaceX','Launch_Site')","02a676b1":"import pyodbc\nimport pandas as pd \nimport numpy as np\nconn = pyodbc.connect('Driver={SQL Server};'\n                                  'Server=localhost;'\n                                  'Database=SpaceX;'\n                                  'User ID=admin;Password=admin;')\ncursor = conn.cursor()\n\ncursor.execute(\"select TOP 5 * from tblSpaceX WHERE Launch_Site LIKE 'KSC%'\")\ncolumns = [column[0] for column in cursor.description]\nresults = []\nfor row in cursor.fetchall():   \n     results.append(dict(zip(columns, row)))\n\ndf = pd.DataFrame.from_dict(results)\ndf","9cecaaf4":"TPM = db.GetRecordsOfColumn(\"select SUM(PAYLOAD_MASS_KG_) TotalPayloadMass from tblSpaceX where Customer = 'NASA (CRS)'\",'TotalPayloadMass')\nndf= pd.DataFrame(TPM)\nndf.columns = ['Total Payload Mass']\nndf","7eec970a":"APM = db.GetRecordsOfColumn(\"select AVG(PAYLOAD_MASS_KG_) AveragePayloadMass from tblSpaceX where Booster_Version = 'F9 v1.1'\",'AveragePayloadMass')\nndf= pd.DataFrame(APM)\nndf.columns = ['Average Payload Mass']\nndf","8f1a585f":"SLO = db.GetRecordsOfColumn(\"select MIN(Date) SLO from tblSpaceX where Landing_Outcome = 'Success (drone ship)'\",'SLO')\nndf= pd.DataFrame(SLO)\nndf.columns = ['Date which first Successful landing outcome in drone ship was acheived.']\nndf","c7758864":"SLO = db.GetRecordsOfColumn(\"select Booster_Version from tblSpaceX where Landing_Outcome = 'Success (ground pad)' AND Payload_MASS_KG_ > 4000 AND Payload_MASS_KG_ < 6000\",'Booster_Version')\nndf= pd.DataFrame(SLO)\nndf.columns = ['Date which first Successful landing outcome in drone ship was acheived.']\nndf","76e6c1b5":"conn = pyodbc.connect('Driver={SQL Server};'\n                                  'Server=localhost;'\n                                  'Database=SpaceX;'\n                                  'User ID=admin;Password=admin;')\ncursor = conn.cursor()\n\ncursor.execute(\"SELECT(SELECT Count(Mission_Outcome) from tblSpaceX where Mission_Outcome LIKE '%Success%') as Successful_Mission_Outcomes,(SELECT Count(Mission_Outcome) from tblSpaceX where Mission_Outcome LIKE '%Failure%') as Failure_Mission_Outcomes\")\ncolumns = [column[0] for column in cursor.description]\nresults = []\nfor row in cursor.fetchall():   \n     results.append(dict(zip(columns, row)))\n\ndf = pd.DataFrame.from_dict(results)\ndf","3a4b2146":"conn = pyodbc.connect('Driver={SQL Server};'\n                                  'Server=localhost;'\n                                  'Database=SpaceX;'\n                                  'User ID=admin;Password=admin;')\ncursor = conn.cursor()\n\ncursor.execute(\"SELECT DISTINCT Booster_Version, MAX(PAYLOAD_MASS_KG_) AS [Maximum Payload Mass] FROM tblSpaceX GROUP BY Booster_Version ORDER BY [Maximum Payload Mass] DESC\")\ncolumns = [column[0] for column in cursor.description]\nresults = []\nfor row in cursor.fetchall():   \n     results.append(dict(zip(columns, row)))\n\ndf = pd.DataFrame.from_dict(results)\ndf","13cb3926":"conn = pyodbc.connect('Driver={SQL Server};'\n                                  'Server=localhost;'\n                                  'Database=SpaceX;'\n                                  'User ID=admin;Password=admin;')\ncursor = conn.cursor()\n\ncursor.execute(\"SELECT   DateName( month , DateAdd( month , MONTH(CONVERT(date,Date, 105)) , 0 ) - 1 )  as Month, Booster_Version, Launch_Site, Landing_Outcome FROM tblSpaceX WHERE  (Landing_Outcome LIKE N'%Success%') AND YEAR(CONVERT(date,Date, 105)) = '2017'\")\ncolumns = [column[0] for column in cursor.description]\nresults = []\nfor row in cursor.fetchall():   \n     results.append(dict(zip(columns, row)))\n\ndf = pd.DataFrame.from_dict(results)\ndf","2c0b576d":"sl = db.GetRecordsOfColumn(\"SELECT COUNT(Landing_Outcome) AS sl FROM dbo.tblSpaceX WHERE (Landing_Outcome LIKE '%Success%') AND (Date >'04-06-2010') AND (Date < '20-03-2017')\",'sl')\n\nndf= pd.DataFrame(sl)\nndf.columns = ['Successful Landing Outcomes Between 2010-06-04 and 2017-03-20']\nndf","6594c774":"#### Display average payload mass carried by booster version F9 v1.1\n","4a485a3f":"#### List the   names of the booster_versions which have carried the maximum payload mass. Use a subquery\n","f0935d36":"#  SpaceX EDX SQL Server\n## Objectives\n\nWriting and executing SQL queries to solve the questions being asked.","fac60189":"#### List the total number of successful and failure mission outcomes\n","eccf1b49":"#### Display 5 records where launch sites begin with the string 'KSC'\n","024e1dad":"#### List the date where the succesful landing outcome in drone ship was acheived.\n","faca9200":"#### List the records which will display the month names, succesful landing_outcomes in ground pad ,booster versions, launch_site for the months in year 2017\n","7a8affbe":"#### Display the total payload mass carried by boosters launched by NASA (CRS)\n","726f3857":"\n#### The dataset used to be queried can be found below.\n\nIn many cases the dataset to be analyzed is available as a .CSV (comma separated values) file, perhaps on the internet. Click on the link below to download and save the dataset (.CSV file):\n\n<a href=\"https:\/\/cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud\/IBM-DS0321EN-SkillsNetwork\/labs\/module_2\/data\/Spacex.csv?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDS0321ENSkillsNetwork26802033-2021-01-01\" target=\"_blank\">SpaceX DataSet<\/a>\n\n\n### Connect to the database\n\nLet us first load the SQL extension and establish a connection with the database\n\nAs <code> IBM's DB2 guidelines on this notebook doesnt work <\/code> I will implement the SQL queries using my normal Microsoft SQL Server instance using my own library <code> 'sqlserver' <\/code> for other info on my libary visit https:\/\/github.com\/ADGVLOGS\/pythonsqlserverclass \n","aa9f6e83":"### Initialization\n\nthe .sqlserver() object parameters stands for \n(ip,portnumber,databasename,username,password)  ","8707a4c8":"#### Rank the  count of  successful landing_outcomes between the date 2010-06-04 and 2017-03-20 in descending order.\n","ead6a3ab":"#### List the names of the boosters which have success in ground pad  and have payload mass greater than 4000 but less than 6000\n","53dfd987":"### Author : Ashlin Darius Govindasamy","f448ca72":"#### Display the names of the unique launch sites  in the space mission\n"}}