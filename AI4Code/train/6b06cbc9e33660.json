{"cell_type":{"a73ce35d":"code","0c143549":"code","7b0c2aef":"code","16f293de":"code","995b8bf7":"code","574cf2b1":"code","b7268c1b":"code","1a7819e6":"code","d4389d66":"code","60572e36":"code","dc1a1d83":"code","39b86a7b":"code","bdbbd08c":"code","d888f7d5":"code","5ccd4209":"code","97de6caf":"code","686b1723":"code","2738edd8":"code","3a406027":"markdown","3c3f9b87":"markdown","031f1b71":"markdown","5ef04767":"markdown","7f12cedf":"markdown","c91c575f":"markdown"},"source":{"a73ce35d":"import pandas as pd\nimport numpy as np\n\ntrain = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","0c143549":"train.head()","7b0c2aef":"test.head()","16f293de":"test_shape = test.shape\ntrain_shape = train.shape\n\nprint(test_shape)\nprint(train_shape)","995b8bf7":"test.describe()","574cf2b1":"train.describe()","b7268c1b":"train.info()","1a7819e6":"def void_table(df):\n    null_val = df.isnull().sum()\n    per = 100 * null_val \/ len(df)\n    void_table = pd.concat(\n        [null_val, per]\n        , axis = 1\n    )\n    void_table_ren_columns = void_table.rename(\n        columns = {0: '\u6b20\u640d\u6570', 1: '%'}\n    )\n    return void_table_ren_columns\n\nvoid_table(train)","d4389d66":"void_table(test)","60572e36":"train[\"Age\"] = train[\"Age\"].fillna(train[\"Age\"].median())\ntrain[\"Embarked\"] = train[\"Embarked\"].fillna(\"S\")\n\nvoid_table(train)","dc1a1d83":"test[\"Age\"] = test[\"Age\"].fillna(test[\"Age\"].median())\ntrain[\"Age\"] = train[\"Age\"].fillna(train[\"Age\"].median())","39b86a7b":"test[\"Sex\"][test[\"Sex\"] == \"male\"] = 0\ntest[\"Sex\"][test[\"Sex\"] == \"female\"] = 1\ntest[\"Embarked\"][test[\"Embarked\"] == \"S\"] = 0\ntest[\"Embarked\"][test[\"Embarked\"] == \"C\"] = 1\ntest[\"Embarked\"][test[\"Embarked\"] == \"Q\"] = 2\ntest.Fare[152] = test.Fare.median()\n\ntest.head(10)","bdbbd08c":"train[\"Sex\"][train[\"Sex\"] == \"male\"] = 0\ntrain[\"Sex\"][train[\"Sex\"] == \"female\"] = 1\ntrain[\"Embarked\"][train[\"Embarked\"] == \"S\"] = 0\ntrain[\"Embarked\"][train[\"Embarked\"] == \"C\"] = 1\ntrain[\"Embarked\"][train[\"Embarked\"] == \"Q\"] = 2\n\ntrain.head(10)","d888f7d5":"from sklearn import tree","5ccd4209":"target = train[\"Survived\"].values\nfeatures_one = train[\n    [\"Pclass\", \"Sex\", \"Age\", \"Fare\"]\n].values\n\nmy_tree_one = tree.DecisionTreeClassifier()\nmy_tree_one = my_tree_one.fit(features_one, target)\n\ntest_features = test[\n    [\"Pclass\", \"Sex\", \"Age\", \"Fare\"]\n].values\n\nmy_prediction = my_tree_one.predict(test_features)","97de6caf":"my_prediction.shape","686b1723":"print(my_prediction)","2738edd8":"Passenger_id = np.array(test[\"PassengerId\"]).astype(int)\n\nmy_solution = pd.DataFrame(my_prediction, Passenger_id, columns = [\"Survived\"])\n\nmy_solution.to_csv(\"sample_tree_one.csv\", index_label = [\"PassengerId\"])","3a406027":"### Symbolic char will be changed to num.","3c3f9b87":"# Prediction","031f1b71":"# Pre-processing","5ef04767":"# Print out to a CSV file","7f12cedf":"# Data confirmation","c91c575f":"### void cells will be embeded."}}