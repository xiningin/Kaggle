{"cell_type":{"7ac8f6ad":"code","633cb27b":"code","98bbedd2":"code","d3f44be9":"code","289f8b2a":"code","995ecb0e":"code","6aaf9c8d":"code","6bbfbe6e":"code","f4af0a4c":"code","e4920bca":"code","b5af74e3":"code","c1910795":"code","e86b5e37":"code","a185f0f3":"code","47eaac39":"code","caa01cd1":"code","d8d16680":"code","dc7ccd33":"code","b14b5db4":"code","2c4333a3":"code","10b272ed":"code","6ba53724":"markdown","24c781ca":"markdown","a0b4ee6b":"markdown","47104eba":"markdown","ff6ecd08":"markdown","fb32d249":"markdown"},"source":{"7ac8f6ad":"# 0. H\u00fccre\n# Merhaba, bu bir Jupiter notebook h\u00fccresidir. \n# Bu h\u00fccreye yaz\u0131lan Python kodlar\u0131 otomatik olarak \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r ve h\u00fccrenin hemen alt\u0131na output verir. \n#\"Show Hidden Code\" butonlar\u0131na t\u0131klayarak python kodlar\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleyebilirsiniz.\n#\u00d6rnek:\nprint(\"Hello World\")\n\n#Bu \u00e7al\u0131\u015fmada obje tan\u0131ma yapan bir kodun nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 a\u00e7\u0131klamalar\u0131yla ad\u0131m ad\u0131m anlatt\u0131m.\n#Ba\u015fta Andrew NG olmak \u00fczere bir \u00e7ok e\u011fitmenin derslerine kat\u0131ld\u0131m yapay zeka konusunda teorik bilgilerimin\n#sa\u011flam oldu\u011funu d\u00fc\u015f\u00fcn\u00fcyorum.\n\n#Matlab' \u0131n face, upper body, people vehicle, shape, foreground detectorleri ve viola-jones algoritmas\u0131,blob analysis, bag of features,\n#support vector machines, k-means, k-nearest neighbours, hyerarchical clustering, auto-encoders, principal component analysis ve bunun gibi di\u011fer\n#konularda da bilgim vard\u0131r. Son h\u00fccrelerde \u00fczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131m \u00f6rnek Matlab kodlar\u0131n\u0131 payla\u015ft\u0131m.\n\n#Matlab labeler uygulamas\u0131nda g\u00f6rseldeki objeler el ile ya da otomatik olarak etiketlenebilir. Haz\u0131r gelen algoritmalar(\u00d6rnek: people detector) kullan\u0131laca\u011f\u0131 gibi\n#kendi algoritmam\u0131z\u0131 da yazabiliriz. \u00e7e\u015fitli etiket tipleriyle (rectangle label, sub label, poligon label, pixel label, cuboid label) yapt\u0131\u011f\u0131m \u00f6rnek bir \u00e7al\u0131\u015fma\n#linktedir: https:\/\/drive.google.com\/file\/d\/1A1biMiy2Goh8MTYril8yf6f4pAYBwlae\/view?usp=sharing\n\n#Supervise olmadan obje tan\u0131ma i\u015flemlerinde yukarda sayd\u0131\u011f\u0131m algoritmalar kullan\u0131labilir. Ama\u00e7, veri setlerindeki k\u00fcmele\u015fmeleri otomatik tespit etmektir.\n#Anomalyler' in veri setinde izole konumlarda olmas\u0131 beklenir. veri setindeki di\u011fer samplelardan farkl\u0131l\u0131k z skoru ile \u00f6l\u00e7\u00fclebilir.\n#z skoru=(sample-mean)\/standart deviation olarak g\u00f6sterilebilir. sample ortalamadan ne kadar farkl\u0131ysa ve standart sapma ne kadar k\u00fc\u00e7\u00fckse o kadar anomaly' ye\n#sahiptir denilebilir.\n#Decision Tree'lerde k\u0131sa yoldan yapraklara ula\u015fabilen(mesela: tek soruda tespit edilebilen) samplelar b\u00fcy\u00fck ihtimalle anomaly' dir. \u00d6rne\u011fin bir insan toplulu\u011funda\n#\"kuyru\u011fu var m\u0131\" sorusuna evet yan\u0131t\u0131 verilerek tek soruda tespit edilen bir ki\u015fi b\u00fcy\u00fck ihtimalle anomaly' e sahiptir.\n\n#Grafikte bir b\u00f6lgenin anomaly' e sahip olmas\u0131 fakt\u00f6r\u00fc Local Outlier Factor denilen olas\u0131l\u0131k yo\u011funlu\u011funu g\u00f6steren bir y\u00f6ntemle hesaplan\u0131r.\n#\u00d6ncelikle K-distance ile k adet kom\u015fuya sample\u0131n yak\u0131nl\u0131\u011f\u0131 hesaplan\u0131r. Mesela, en yak\u0131n 3 kom\u015fusuna 50,45,55 km mesafede oturan bir ki\u015fide anomaly vard\u0131r.\n#Daha sonra Reachability Distance' a bak\u0131l\u0131r. sample' \u0131n en yak\u0131n\u0131 olarak g\u00f6rd\u00fc\u011f\u00fc kom\u015fular\u0131 da onu en yak\u0131n kom\u015fusu olarak g\u00f6r\u00fcyor mu diye test edilir.\n#mesela sample' \u0131n en yak\u0131n kom\u015fusu 50 km mesafede olabilir ama o kom\u015funun 10-15 metre mesafede daha yak\u0131n kom\u015fular\u0131 olabilir. Bu da anomaly' ye i\u015faret eder.\n#Daha sonra Local Reachability Distance' a bak\u0131l\u0131r. Grafi\u011fin o b\u00f6lgesinde yak\u0131n kom\u015fular\u0131n birbirine olan ortalama mesafesi dikkate al\u0131n\u0131r. Mesela, \u015fehirlerde\n#10-15 metre mesafeler yak\u0131n kom\u015fuluk say\u0131l\u0131rken, k\u0131rsal kesimde y\u00fczlerce metre uzakl\u0131ktan kom\u015fuluklar da normal say\u0131labilir.\n#En son olarak olas\u0131l\u0131ksal olmayan, 0' dan 100' e kadar Risk Score puanlamas\u0131 yap\u0131l\u0131r. Y\u00fcksek risk skoru y\u00fcksek anomaly riskine i\u015faret eder.\n\n#Firman\u0131zdaki bu pozisyonda i\u015fe ba\u015flamay\u0131 \u00e7ok istiyorum. Eksiklerimi tamamlamak i\u00e7in Udemy isimli siteden a\u015fa\u011f\u0131da linkini payla\u015faca\u011f\u0131m Matlab ve Labview e\u011fitimlerini sat\u0131n ald\u0131m. \n#Bu e\u011fitimlere biraz zaman ay\u0131rabildim kolayl\u0131kla anl\u0131yorum k\u0131sa s\u00fcrede bu platformlara uyum sa\u011flayaca\u011f\u0131mdan eminim. Haz\u0131rlad\u0131\u011f\u0131m bu \u00e7al\u0131\u015fmay\u0131 yetersiz g\u00f6r\u00fcrseniz\n#l\u00fctfen bana Matlab ya da Labview' den test projesi verin, k\u0131sa s\u00fcrede ara\u015ft\u0131r\u0131p \u00f6\u011frenip projeyi tamamlar size teslim ederim.\n\n#E\u011fitim i\u00e7eriklerini incelemek isterseniz a\u015fa\u011f\u0131daki linklere bakabilirsiniz. epostam ve \u015fifremle giri\u015f yaparsan\u0131z daha detayl\u0131 bilgi alabilirsiniz:\n#Labview e\u011fitimi(image processing\/computer vision i\u00e7in): https:\/\/www.udemy.com\/course\/complete-labview-image-processing-machine-vision-course\/learn\/lecture\/24597564#overview\n#Matlab e\u011fitimi(image processing\/computer vision i\u00e7in): https:\/\/www.udemy.com\/course\/improcmatlab\/learn\/lecture\/12332720#content\n#kullan\u0131c\u0131 e-postas\u0131: rizacangulec@gmail.com\n#\u015fifre: abcde12345\n\n#Bana ula\u015fman\u0131z gerekirse telefon numaram: 0535 797 86 06\n\n#Kaggle'da \u00fczerine \u00e7al\u0131\u015ft\u0131\u011f\u0131m di\u011fer kodlar: https:\/\/www.kaggle.com\/gaddar\/code\n\n#Java' da yazd\u0131\u011f\u0131m programlama bilgi seviyemi g\u00f6steren bir kod: https:\/\/github.com\/rizagulec\/SayiTahminiOyunu\/blob\/main\/Oyun.java\n","633cb27b":"#1. H\u00fccre\n#\u00d6ncelikle gerekli k\u00fct\u00fcphaneler import edilir\n\nimport os\nimport cv2\nimport numpy as np #numpy matematik i\u015flemleri i\u00e7in kullan\u0131lan bir k\u00fct\u00fcphanedir.\nimport matplotlib.pyplot as plt #matplotlib veri g\u00f6rselle\u015ftirmede ve grafik \u00e7izmede kullan\u0131l\u0131r. \n# Import Warnings \nimport warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd #pandas \u00e7ok boyutlu matrislerle i\u015flem yapmak i\u00e7in kullan\u0131l\u0131r\nfrom sklearn.utils import shuffle #bir makine \u00f6\u011frenmesi k\u00fct\u00fcphanesi olan sci-kit learn \u00fcn shuffle k\u00fct\u00fcphanesiyle veri seti kar\u0131\u015ft\u0131r\u0131l\u0131r. overfitting \u00f6nlenir. \nfrom sklearn.model_selection import train_test_split #veri setini belirlenen orana g\u00f6re e\u011fitim ve test setlerine b\u00f6ler\n\nfrom keras import backend as K\nK.set_image_dim_ordering('tf') #g\u00f6rsellerin boyut s\u0131ralar\u0131 tensorflow standartlar\u0131na uygun se\u00e7ilir.\nfrom keras.utils import np_utils\nfrom keras.models import Sequential #tensorflow\/keras \u0131n sinir a\u011f\u0131 olu\u015fturma k\u00fct\u00fcphanesidir.\nfrom keras.layers.core import Dense, Dropout, Activation, Flatten \n#Dense: yo\u011fun sinir a\u011f\u0131 \u015febekesidir. konvol\u00fcsyonel a\u011flardan gelen veriyi(tespit edilmi\u015f \u015fekiller, desenler vs..) i\u015flemeye yarar.\n#Dropout: rastgele n\u00f6ronlar\u0131n a\u011f\u0131rl\u0131klar\u0131n\u0131 resetler. tek bir n\u00f6rona a\u015f\u0131r\u0131 g\u00fcvenerek overfitting olu\u015fmas\u0131n\u0131 engeller.\n#Activation:n\u00f6ron \u00e7\u0131k\u0131\u015flar\u0131na konulan t\u00fcrev almay\u0131 m\u00fcmk\u00fcn k\u0131lan aktivasyon fonksiyonlar\u0131d\u0131r. eskiden i\u015flemciyi yoran sigmoid fonksiyonu kullan\u0131l\u0131rd\u0131, \n#art\u0131k neredeyse lineer oldu\u011fu i\u00e7in i\u015flemciyi yormayan relu fonksiyonlar\u0131 kullan\u0131l\u0131yor.\n#Flatten: yo\u011fun a\u011fa sokmak \u00fczere konvol\u00fcsyonel a\u011flardan gelen g\u00f6rseli tek boyutlu matrise \u00e7evirir. \n    \nfrom keras.layers.convolutional import Convolution2D, MaxPooling2D\n#conv2d: sisteme konvol\u00fcsyonel a\u011f katman\u0131 katmaya yarar.\n#maxpooling2d: konvol\u00fcsyonel a\u011f\u0131n i\u015fledi\u011fi g\u00f6rseldeki gereksiz bilgileri(pikselleri) siler, \u00f6zellikle i\u015flemciden ve sonra haf\u0131zadan tasarruf edilir. Overfitting azal\u0131r.\n#eskiden i\u015flemciyi yoran average pooling(filtrenin alt\u0131na denk gelen piksellerin ortalamas\u0131) daha \u00e7ok kullan\u0131l\u0131rd\u0131. art\u0131k daha h\u0131zl\u0131 max pooling(filtrenin alt\u0131na denk gelen piksellerin\n#en b\u00fcy\u00fc\u011f\u00fc) tercih ediliyor.  \nfrom keras.optimizers import SGD,RMSprop,adam#\u00f6\u011frenmenin gidi\u015fat\u0131na g\u00f6re hyperparameter olan alfay\u0131(\u00f6\u011frenme ad\u0131m\u0131) otomatik ayarlayan algoritmalard\u0131r.\nfrom keras.callbacks import TensorBoard\n\nfrom sklearn.metrics import classification_report,confusion_matrix #sci-kit learn'\u00fcn a\u011f\u0131n ne kadar ba\u015far\u0131l\u0131 \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 \u00f6l\u00e7en k\u00fct\u00fcphaneleridir.\n#confusion matrix yap\u0131lan tahminlerin isabet say\u0131s\u0131n\u0131 ve yanl\u0131\u015f tahminlerin say\u0131s\u0131n\u0131 g\u00f6steren bir matristir.\nimport itertools","98bbedd2":"#2. H\u00fccre\n#verilerin haf\u0131zada kay\u0131tl\u0131 oldu\u011fu adresleri sisteme kaydederiz.\nPATH = os.getcwd() #i\u015fletim sistemi.currentWorkingDirectory \u015fu an \u00e7al\u0131\u015f\u0131lan \u00e7al\u0131\u015fma dizinini d\u00f6nd\u00fcr\u00fcr\n# Define data path\ndata_path = '..\/input\/data\/data'\ndata_dir_list = os.listdir(data_path) #verilerin bulundu\u011fu adresteki veri klas\u00f6rlerini listele\ndata_dir_list #veri setimizde a\u015fa\u011f\u0131da g\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi atlar,arabalar,k\u00f6pekler,\u00e7i\u00e7ekler,motosikletler,kediler ve insanlar olmak \u00fczere\n#7 \u00e7e\u015fit class vard\u0131r","d3f44be9":"#3. H\u00fccre\nimg_rows=128 #g\u00f6rsellerin sat\u0131r say\u0131s\u0131n\u0131 belirleriz(128)\nimg_cols=128 #g\u00f6rsellerin s\u00fctun  say\u0131s\u0131n\u0131 belirleriz(128)\nnum_channel=1 #g\u00f6rsellerin renk kanal\u0131 say\u0131s\u0131n\u0131 belirleriz(bizim g\u00f6rsellerimiz tek kanall\u0131 yani siyah beyazd\u0131r)\nnum_epoch=40 #a\u011f\u0131n epoch say\u0131s\u0131 yani ka\u00e7 sefer e\u011fitilece\u011fini belirleriz.\n# Define the number of classes\nnum_classes = 7 #class say\u0131s\u0131n\u0131 belirleriz.\nimg_data_list=[] #verilerin kaydedildi\u011fi liste\n\n##############bu d\u00f6ng\u00fclerde her bir dataset i\u00e7in, datasetin i\u00e7indeki g\u00f6rseller img data listesine kaydedilir.\nfor dataset in data_dir_list:\n\timg_list=os.listdir(data_path+'\/'+ dataset)\n\tprint ('Loaded the images of dataset-'+'{}\\n'.format(dataset))\n\tfor img in img_list:\n\t\tinput_img=cv2.imread(data_path + '\/'+ dataset + '\/'+ img )\n\t\tinput_img=cv2.cvtColor(input_img, cv2.COLOR_BGR2GRAY)\n\t\tinput_img_resize=cv2.resize(input_img,(128,128))\n\t\timg_data_list.append(input_img_resize)\n##############\n\nimg_data = np.array(img_data_list) #listemiz i\u015flem kolayl\u0131\u011f\u0131 a\u00e7\u0131s\u0131ndan numpy array e d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr.\nimg_data = img_data.astype('float32')\nimg_data \/= 255 #normalizasyon yap\u0131l\u0131r her bir pikselin 0 ile 1 aras\u0131nda bir de\u011fer almas\u0131 sa\u011flan\u0131r.\nprint (img_data.shape) #listemizin \u015fekli yazd\u0131r\u0131l\u0131r. 128*128 \u00e7\u00f6z\u00fcn\u00fcrl\u00fckte 1803 g\u00f6rsele sahip oldu\u011fumuz g\u00f6r\u00fcl\u00fcr.","289f8b2a":"#4. h\u00fccre\n#veri listemizin boyut d\u00fczenlemesi yap\u0131l\u0131r. listemize 1 boyut daha eklenir. Ama\u00e7 verimizi kullanaca\u011f\u0131m\u0131z k\u00fct\u00fcphanelerin input\n#format\u0131na uygun hale getirmektir.\nif num_channel==1:\n\tif K.image_dim_ordering()=='th':\n\t\timg_data= np.expand_dims(img_data, axis=1) \n\t\tprint (img_data.shape)\n\telse:\n\t\timg_data= np.expand_dims(img_data, axis=4) \n\t\tprint (img_data.shape)\n\t\t\nelse:\n\tif K.image_dim_ordering()=='th':\n\t\timg_data=np.rollaxis(img_data,3,1)\n\t\tprint (img_data.shape)","995ecb0e":"#5. H\u00fccre\n#s\u0131n\u0131fland\u0131rma etiketleri haz\u0131rlan\u0131r. listedeki her bir g\u00f6rsele denk gelen etiketler bir listeye kaydedilir. \nnum_classes = 7\nnum_of_samples = img_data.shape[0]\nlabels = np.ones((num_of_samples,),dtype='int64')\nlabels[0:365]=0\nlabels[365:567]=1\nlabels[567:987]=2\nlabels[987:1189]=3\nlabels[1189:1399]=4\nlabels[1399:1601]=5\nlabels[1601:1803]=6\nnames = ['bike', 'cars', 'cats', 'dogs', 'flowers', 'horses', 'human']","6aaf9c8d":"#6. H\u00fccre\n#her bir cisim bir class a \u00fcye olabilir. etiketler one hot encoding y\u00f6ntemiyle kategorik veriye \u00e7evrilir.\n#one hot encodingde mesela cisim bir arabaysa araba s\u00fctunu 1 olur di\u011fer s\u00fctunlar 0 olur.\nY = np_utils.to_categorical(labels, num_classes)","6bbfbe6e":"#7. H\u00fccre\n#veri listesi ve etiketler overfittingi \u00f6nlemek i\u00e7in shuffle edilir yani kar\u0131\u015ft\u0131r\u0131l\u0131r. seed 2 se\u00e7ilmi\u015ftir.\n#shuffle edilen veriler test verileri 0.2 oran\u0131nda olacak \u015fekilde test ve train verileri \u015feklinde ayr\u0131\u015ft\u0131r\u0131l\u0131r.\nx,y = shuffle(img_data,Y, random_state=2)\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=2)","f4af0a4c":"#8. H\u00fccre\n#g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere 361 g\u00f6rsel test i\u00e7in 1442 g\u00f6rsel e\u011fitim i\u00e7in kullan\u0131lm\u0131\u015ft\u0131r.\nprint(\"X_train shape = {}\".format(X_train.shape))\nprint(\"X_test shape = {}\".format(X_test.shape))","e4920bca":"#9. H\u00fccre\n#\u00f6rnek olarak 1203. e\u011fitim g\u00f6rseli ekrana yazd\u0131r\u0131lm\u0131\u015ft\u0131r. bu bir kedi g\u00f6rselidir.\nimage = X_train[1203,:].reshape((128,128))\nplt.imshow(image)\nplt.show()","b5af74e3":"#10. H\u00fccre\n\ninput_shape=img_data[0].shape #a\u011fda kullan\u0131lmak \u00fczere inputun \u015fekli kaydedilir.\n\ncnn_model = Sequential([ #sequential methoduyla a\u011f tasarlanmaya ba\u015flan\u0131r.\n   \n    Convolution2D(32,3,3,border_mode ='same',activation='relu',input_shape = input_shape),\n    #ilk katmanda 32 adet 3x3 filtre bulunur. padding same se\u00e7ilmi\u015ftir. aktivasyon reludur. Eski kodlarda aktivasyon fonksiyonu olarak tanh, sigmoid\n    #gibi fonksiyonlar kullan\u0131l\u0131rd\u0131. Relu pozitif input de\u011ferleri i\u00e7in ayn\u0131 outputu(y=max(0,x)) verdi\u011fi i\u00e7in i\u015flem y\u00fck\u00fcn\u00fc azalt\u0131r. Relu' nun tek katmanda t\u00fcrevi\n    #al\u0131namasa da \u00e7ok katmanl\u0131 a\u011flarda t\u00fcrevlenebilir ve geri yay\u0131l\u0131m(back propogation) algoritmas\u0131n\u0131n gradyanlar\u0131na katk\u0131da bulunabilir. \"2' nin katlar\u0131 \u015feklinde \n    #n\u00f6ron say\u0131s\u0131 se\u00e7mek i\u015flemci i\u00e7in hesaplar\u0131 kolayla\u015ft\u0131r\u0131r.\" \n    \n    Convolution2D(32,3,3,activation='relu'), #ikinci katman da 32x3x3t\u00fcr ve aktivasyon reludur.\n    MaxPooling2D(pool_size=(2,2)) ,#2x2lik kernelle maxpooling i\u015flemi yap\u0131l\u0131r. kernele denk gelen en b\u00fcy\u00fck piksel outputa g\u00f6nderilir.\n    Dropout(0.5), #overfittingi engellemek i\u00e7in n\u00f6ronlar\u0131n rastgele y\u00fczde 50'sinin a\u011f\u0131rl\u0131\u011f\u0131 resetlenir.\n    Flatten(), #konvol\u00fcsyonel a\u011flardan gelen g\u00f6rsel tek boyutlu matrise d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr.\n    Dense(128,activation='relu'), #tek boyutlu g\u00f6sel yo\u011fun a\u011flara sokulur. Bu katmanda 128 n\u00f6ron vard\u0131r. \"2' nin katlar\u0131 \u015feklinde n\u00f6ron say\u0131s\u0131 se\u00e7mek\n    #i\u015flemci i\u00e7in hesaplar\u0131 kolayla\u015ft\u0131r\u0131r.\"\n    Dropout(0.5), #dropout kullan\u0131l\u0131r.\n    Dense(num_classes,activation = 'softmax') #tekrar yo\u011fun a\u011flara sokulur ve olas\u0131l\u0131ksal sonu\u00e7 veren softmax katman\u0131ndan \u00e7\u0131k\u0131\u015f al\u0131n\u0131r.\n])\n\n#konvol\u00fcsyonel a\u011flar\u0131n en g\u00fc\u00e7l\u00fc \u00f6zelli\u011fi di\u011fer algoritmalar gibi inputtaki nesnenin yerinin, a\u00e7\u0131s\u0131n\u0131n, boyunun de\u011fi\u015fmesinin ba\u015far\u0131 oranlar\u0131n\u0131 fazla d\u00fc\u015f\u00fcrmemesidir.\n#konvol\u00fcsyonel a\u011flar karma\u015f\u0131k \u015fekilleri ve di\u011fer \u00f6znitelikleri tespit eden filtreleri geri yay\u0131l\u0131m algoritmas\u0131 sayesinde kendi kendine ke\u015fefederler. \u0130nput g\u00f6rselden \n#toplanan \u00f6znitelikler yo\u011fun a\u011flara g\u00f6nderilir ve s\u0131n\u0131fland\u0131rma yap\u0131l\u0131r.\n#Image augmentation denilen y\u00f6ntemle ayn\u0131 objenin ayna g\u00f6r\u00fcnt\u00fcs\u00fc, a\u00e7\u0131s\u0131 biraz de\u011fi\u015ftirilmi\u015fi, yeri de\u011fi\u015ftirilmi\u015fi, objenin bir k\u0131sm\u0131n\u0131n silindi\u011fi versiyonlar\u0131 \n#tek bir g\u00f6rselden elde edilir ve e\u011fitim seti zenginle\u015ftirilir. Ba\u015far\u0131 oran\u0131 daha da artar.\n","c1910795":"#11. H\u00fccre\n#bu a\u015famada a\u011f derlenir. \ncnn_model.compile(loss='categorical_crossentropy', optimizer='adadelta',metrics=[\"accuracy\"])\n#loss fonkisyonu categorical crossentropy se\u00e7ilmi\u015ftir. En k\u00fc\u00e7\u00fck karelerin aksine logaritmik bir fonksiyondur.\n#optimizer adadelta se\u00e7ilmi\u015ftir. Optimizer, geri yay\u0131l\u0131m algoritmas\u0131n\u0131n \u00f6\u011frenme oran\u0131n\u0131(alfa) d\u00fczenleyerek \u00f6\u011frenimi h\u0131zland\u0131r\u0131r.\n\n#ba\u015far\u0131 oran\u0131n\u0131 belirlemek i\u00e7in accuracy yani yani tahminlerdeki isabet oran\u0131 se\u00e7ilmi\u015ftir.\n#tahminlerin isabet oran\u0131(accuracy) her durumda tek ba\u015f\u0131na ba\u015far\u0131y\u0131 \u00f6l\u00e7mek i\u00e7in kullan\u0131lamayabilir.\n#mesela 99 sa\u011fl\u0131kl\u0131 1 hasta insan\u0131n bulundu\u011fu bir \u00f6rnek uzayda 100 ki\u015fiyi de sa\u011fl\u0131kl\u0131 olarak tahmin eden bir a\u011f\u0131n isabetlilik oran\u0131\n#%99' dur ama bir tane bile hasta tespit edememi\u015ftir yani asl\u0131nda m\u00fcmk\u00fcn olan en k\u00f6t\u00fc modeldir.\n#yaz\u0131 tura sonu\u00e7lar\u0131n\u0131 %51 isabetlilikle bilen bir model ise asl\u0131nda m\u00fcthi\u015f derecede ba\u015far\u0131l\u0131 bir modeldir.\n#Bu gibi durumlarda confusion matrix \u00fczerinden true positive\/false positive\/true negative\/false negative de\u011ferleri kullan\u0131larak recall, precision,\n#area under curve gibi ba\u015far\u0131 \u00f6l\u00e7\u00fcleri hesaplan\u0131r.\n\n#precision, pozitif oldu\u011fu tahmin edilen samplelar\u0131n asl\u0131nda y\u00fczde ne kadar\u0131n\u0131n do\u011fru oldu\u011funu g\u00f6sterir. Y\u00fcksek precision' da kesinlikle emin olunursa\n#pozitif etiketleme yap\u0131l\u0131r, \u015f\u00fcpheli durumlarda pozitif etiketleme yap\u0131lmaz false negatif oran\u0131 y\u00fckselebilir.(\u00f6rnek: kemoterapi uygulanacak bir insan\u0131n ger\u00e7ekten hasta\n#olmas\u0131 beklenir, ki\u015finin hasta oldu\u011funa y\u00f6nelik \u015f\u00fcpheler varsa tedavi uygulanmaz. bu durumda ger\u00e7ekten kanser hastas\u0131 olup da yanl\u0131\u015fl\u0131kla sa\u011fl\u0131kl\u0131 say\u0131lan false negatif hastalar\n#hastalar olacakt\u0131r.)\n\n#recall, pozitiflerin y\u00fczde ka\u00e7\u0131n\u0131n yakaland\u0131\u011f\u0131yla ilgilenir. Y\u00fcksek recall' da en ufak bir \u015f\u00fcphe varsa pozitif etiketleme yap\u0131l\u0131r. Bu y\u00fczden false pozitif\n#oran\u0131 y\u00fckselebilir.(\u00f6rnek: pandemi ortam\u0131nda bir kimsenin hasta oldu\u011funa y\u00f6nelik \u015f\u00fcpheler varsa pozitif kabul edilir ve g\u00f6zlem alt\u0131na al\u0131n\u0131r,sa\u011fl\u0131kl\u0131 bir \u00e7ok insan\u0131n \n#yanl\u0131\u015fl\u0131kla hasta\/false pozitif say\u0131lmas\u0131 g\u00f6ze al\u0131n\u0131r)\n\n#area under curve, bir modelin true positive ve false positive oranlar\u0131n\u0131n grafi\u011fidir. Alan ne kadar b\u00fcy\u00fckse model o kadar ba\u015far\u0131l\u0131 \u00e7al\u0131\u015f\u0131yordur.","e86b5e37":"#12. H\u00fccre\n#a\u011f\u0131m\u0131z\u0131n \u00f6zellikleri \u00f6zetlenmi\u015ftir.\ncnn_model.summary()","a185f0f3":"#13. H\u00fccre\n#Bu a\u015famada a\u011f e\u011fitilir. \nhist = cnn_model.fit(X_train, y_train, batch_size=16, nb_epoch=num_epoch, verbose=1, validation_data=(X_test, y_test))\n#batch size=16 e\u011fitim 16\u015far gruplanm\u0131\u015f g\u00f6rsellerle yap\u0131l\u0131r. se\u00e7ilen epoch say\u0131s\u0131 kere e\u011fitim tekrarlan\u0131r.\n#e\u011fitim ve test lost ve isabetlilikleri kaydedilir.\ntrain_loss=hist.history['loss']\nval_loss=hist.history['val_loss']\ntrain_acc=hist.history['acc']\nval_acc=hist.history['val_acc']\nxc=range(num_epoch)","47eaac39":"#14. H\u00fccre\n#Loss yorumlanmak \u00fczere \u00e7izdirilir.\n#G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere training loss 10.-15. epoch civar\u0131nda s\u0131f\u0131ra yakla\u015fm\u0131\u015ft\u0131r, validation loss ise 5.-10. epoch civar\u0131nda \n#en iyi seviyeye ula\u015f\u0131p ileriki epochlarda artm\u0131\u015ft\u0131r. A\u011fda a\u015f\u0131r\u0131 seviyede overfitting vard\u0131r. Grafi\u011fe g\u00f6re 5.-10. epoch\n#aras\u0131nda e\u011fitim kesilmelidir.\nplt.figure(1,figsize=(10,5))\nplt.plot(xc,train_loss)\nplt.plot(xc,val_loss)\nplt.xlabel('Number of Epochs')\nplt.ylabel('Loss')\nplt.title('Train Loss vs Validation Loss')\nplt.grid(True)\nplt.legend(['Train Loss','Validation Loss'])\nplt.style.use(['classic'])","caa01cd1":"#15. H\u00fccre\n#Accuracy yorumlamak \u00fczere \u00e7izdirilir.\n#G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere training accuracy 10.-15. epoch civar\u0131nda %100' e yakla\u015fm\u0131\u015ft\u0131r, validation accuracy ise 5.-10. epoch civar\u0131nda \n#en iyi seviyeye ula\u015f\u0131p ileriki epochlarda pek de\u011fi\u015fmemi\u015ftir. A\u011fda a\u015f\u0131r\u0131 seviyede overfitting vard\u0131r. Grafi\u011fe g\u00f6re 5. epoch\n#civar\u0131nda e\u011fitim kesilmelidir.\n\n\nplt.figure(2,figsize=(10,5))\nplt.plot(xc,train_acc)\nplt.plot(xc,val_acc)\nplt.xlabel('Number of Epochs')\nplt.ylabel('Accuracy')\nplt.title('Train Accuracy vs Validation Accuracy')\nplt.grid(True)\nplt.legend(['Train Accuracy','Validation Accuracy'],loc=4)\nplt.style.use(['classic'])","d8d16680":"#16. H\u00fccre\n#Modelin Loss ve Accuracy sonu\u00e7lar\u0131 ekrana yazd\u0131r\u0131l\u0131r.\nscore = cnn_model.evaluate(X_test, y_test, verbose=0)\nprint('Test Loss:', score[0])\nprint('Test Accuracy:', score[1])","dc7ccd33":"#17. H\u00fccre\n#Yorumlar\n#A\u011f training sette %99 isabet oran\u0131na ula\u015fabilirken test setinde yakla\u015f\u0131k %45 ba\u015far\u0131ya ula\u015fabilmektedir.\n#5.-10. epoch aras\u0131nda test set maksimum ba\u015far\u0131ya ula\u015f\u0131rken ondan sonraki epochlarda sadece training set\n#isabet oran\u0131 overfitting dolay\u0131s\u0131yla y\u00fckselmektedir.\n#Overfittingi d\u00fc\u015f\u00fcrmek amac\u0131yla a\u011f\u0131n n\u00f6ron ve katman say\u0131lar\u0131n\u0131 azalt\u0131p dropout' u %90' lara kadar \u00e7ektim,\n#overfitting baya\u011f\u0131 d\u00fc\u015fse de(training set %50-60 accuracy) test accuracy' de fazla bir de\u011fi\u015fme olmad\u0131:\n#(test accuracy %45-50 oldu). Bu oran\u0131 yakalamak i\u00e7in 100-150 aras\u0131 epoch gerekti. Ayr\u0131ca mini-batch say\u0131s\u0131n\u0131\n#1000' lere \u00e7ekmek zorunda kald\u0131m yoksa tekrar overfitting yap\u0131yordu.\n#O y\u00fczden 5-10 epoch' ta \u00e7\u00f6z\u00fcme ula\u015fabilen bu a\u011f yap\u0131s\u0131n\u0131 tercih ettim.\n#G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re ya daha \u00e7ok e\u011fitim verisine ya da e\u011fitim verisinde veri analizi ve temizli\u011fi i\u015flemleri\n#yapmaya gerek var.","b14b5db4":"#18. H\u00fccre\n#Matlab' de \u00fczerinde u\u011fra\u015ft\u0131\u011f\u0131m bir mean smoothing kodu.\n\"\"\"\nMATLAB mean smoothing\nk=31;\nkernel=ones(k)\/k^2;\n\nfigure(3), clf\nsubplot (221)\nimagesc(kernel)\naxis off,axis image\n\nfor i=1:3\n    picSmooth(:,:,i)=conv2(double(pic(:,:,i)),kernel,'same');\n\n    subplot(2,3,i+3)\n    imagesc(picSmooth(:,:,i))\n    title(cchan(i)), axis square\n    set(gca,'xtick',[],'ytick',[])\n\nend\n\nsubplot(222);\nimagesc(picSmooth);\naxis image;\n\"\"\"","2c4333a3":"#19. H\u00fccre\n#Matlab' de \u00fczerinde u\u011fra\u015ft\u0131\u011f\u0131m bir gaussian smoothing kodu.\n\"\"\"\nMATLAB gaussian smoothing\nk=31; %image size\ns=1;\n[x,y]=meshgrid(linspace(-2,2,k));\ng2d=exp(-(x.^2+y.^2)\/s);\ng2d=g2d.\/sum(g2d(:))\n\n\n\nfigure(2), clf\nsubplot(221)\naxis=y\nsurf(g2d)\n\npicSmooth=pic;\ncchan={'red';'green';'blue'};\n\nfor i=1:3\npicSmooth(:,:,i)=conv2(double(pic(:,:,i)),g2d,'same');\nsubplot(2,3,i+3);\nimagesc(picSmooth(:,:,i));\naxis image;\nend\n\"\"\"","10b272ed":"#20. H\u00fccre\n#Matlab' da \u00fczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131m bir gui. Guide uygulamas\u0131n\u0131 kulland\u0131m.\n\n\"\"\"\nfunction varargout = myFirstGUI(varargin)\n% MYFIRSTGUI MATLAB code for myFirstGUI.fig\n%      MYFIRSTGUI, by itself, creates a new MYFIRSTGUI or raises the existing\n%      singleton*.\n%\n%      H = MYFIRSTGUI returns the handle to a new MYFIRSTGUI or the handle to\n%      the existing singleton*.\n%\n%      MYFIRSTGUI('CALLBACK',hObject,eventData,handles,...) calls the local\n%      function named CALLBACK in MYFIRSTGUI.M with the given input arguments.\n%\n%      MYFIRSTGUI('Property','Value',...) creates a new MYFIRSTGUI or raises the\n%      existing singleton*.  Starting from the left, property value pairs are\n%      applied to the GUI before myFirstGUI_OpeningFcn gets called.  An\n%      unrecognized property name or invalid value makes property application\n%      stop.  All inputs are passed to myFirstGUI_OpeningFcn via varargin.\n%\n%      *See GUI Options on GUIDE's Tools menu.  Choose \"GUI allows only one\n%      instance to run (singleton)\".\n%\n% See also: GUIDE, GUIDATA, GUIHANDLES\n\n% Edit the above text to modify the response to help myFirstGUI\n\n% Last Modified by GUIDE v2.5 27-Mar-2021 20:34:42\n\n% Begin initialization code - DO NOT EDIT\ngui_Singleton = 1;\ngui_State = struct('gui_Name',       mfilename, ...\n                   'gui_Singleton',  gui_Singleton, ...\n                   'gui_OpeningFcn', @myFirstGUI_OpeningFcn, ...\n                   'gui_OutputFcn',  @myFirstGUI_OutputFcn, ...\n                   'gui_LayoutFcn',  [] , ...\n                   'gui_Callback',   []);\nif nargin && ischar(varargin{1})\n    gui_State.gui_Callback = str2func(varargin{1});\nend\n\nif nargout\n    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});\nelse\n    gui_mainfcn(gui_State, varargin{:});\nend\n% End initialization code - DO NOT EDIT\n\n\n% --- Executes just before myFirstGUI is made visible.\nfunction myFirstGUI_OpeningFcn(hObject, eventdata, handles, varargin)\n% This function has no output args, see OutputFcn.\n% hObject    handle to figure\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n% varargin   command line arguments to myFirstGUI (see VARARGIN)\n\n% Choose default command line output for myFirstGUI\nhandles.output = hObject;\n\n% Update handles structure\nguidata(hObject, handles);\n\n% UIWAIT makes myFirstGUI wait for user response (see UIRESUME)\n% uiwait(handles.figure1);\n\n\n% --- Outputs from this function are returned to the command line.\nfunction varargout = myFirstGUI_OutputFcn(hObject, eventdata, handles) \n% varargout  cell array for returning output args (see VARARGOUT);\n% hObject    handle to figure\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\n% Get default command line output from handles structure\nvarargout{1} = handles.output;\n\n\n\nfunction numLines_Callback(hObject, eventdata, handles)\n% hObject    handle to numLines (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\n% Hints: get(hObject,'String') returns contents of numLines as text\n%        str2double(get(hObject,'String')) returns contents of numLines as a double\n\n\n% --- Executes during object creation, after setting all properties.\nfunction numLines_CreateFcn(hObject, eventdata, handles)\n% hObject    handle to numLines (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    empty - handles not created until after all CreateFcns called\n\n% Hint: edit controls usually have a white background on Windows.\n%       See ISPC and COMPUTER.\nif ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))\n    set(hObject,'BackgroundColor','white');\nend\n\n\n\nfunction edit2_Callback(hObject, eventdata, handles)\n% hObject    handle to edit2 (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\n% Hints: get(hObject,'String') returns contents of edit2 as text\n%        str2double(get(hObject,'String')) returns contents of edit2 as a double\n\n\n% --- Executes during object creation, after setting all properties.\nfunction edit2_CreateFcn(hObject, eventdata, handles)\n% hObject    handle to edit2 (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    empty - handles not created until after all CreateFcns called\n\n% Hint: edit controls usually have a white background on Windows.\n%       See ISPC and COMPUTER.\nif ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))\n    set(hObject,'BackgroundColor','white');\nend\n\n\n% --- Executes on button press in makeThePlot.\nfunction makeThePlot_Callback(hObject, eventdata, handles)\nnumCol = str2double( get(handles.numLines,'String') )  \nnumRow = str2double( get(handles.edit2,'String') )\nrandLines=rand(numRow,numCol);\nplot(handles.plot_axis,randLines,'linew',2);\ndisp('hello world')\n% hObject    handle to makeThePlot (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\"\"\"","6ba53724":"### 2. Keras' ta Konvol\u00fcsyonel Bir A\u011f\u0131n Tasar\u0131m\u0131","24c781ca":"### 4. Loss ve Accuracy' nin \u00c7izdirilmesi\n","a0b4ee6b":"### 3. A\u011f\u0131n E\u011fitimi","47104eba":"![image](https:\/\/drive.google.com\/file\/d\/1A1biMiy2Goh8MTYril8yf6f4pAYBwlae\/view?usp=sharing)","ff6ecd08":"### 6. Modelin De\u011ferlendirilmesi ","fb32d249":"![](https:\/\/drive.google.com\/file\/d\/1A1biMiy2Goh8MTYril8yf6f4pAYBwlae\/view?usp=sharing)"}}