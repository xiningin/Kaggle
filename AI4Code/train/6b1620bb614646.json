{"cell_type":{"a7dd6b27":"code","9c3369b6":"code","7cf99cdc":"code","30632d7d":"code","31e75dff":"code","d18912ab":"code","5b27998c":"code","05d1058b":"code","2a8eb5b2":"code","b83b06ee":"code","f7e218a1":"code","d2d1ebc0":"code","82448dd2":"code","eee4c4bd":"code","e8add334":"code","0c017c95":"code","233943d6":"code","38b9edfe":"code","254d4155":"code","0fb0a563":"code","5923f5e6":"code","41d0f9eb":"code","208c442b":"code","811cae99":"code","2afc635f":"code","5540eaab":"code","de419c0f":"code","39ac98c5":"code","5e06ab8c":"code","7cc4311f":"code","961156dd":"code","ab3b1f8a":"code","fce96a12":"code","4042f5ee":"code","bcf95315":"code","87b86ba0":"code","16383b84":"code","0aafa7da":"code","8876d80c":"code","b22a5d36":"code","f656e3f2":"code","e795c9c6":"code","dc451aec":"code","bf95ec48":"code","3f1b3fbc":"code","6899768b":"code","8ea8c751":"code","a69db5d2":"code","85ad520d":"code","27c7d7d7":"code","a5d01bdd":"code","3ae1014e":"code","37641149":"code","7e6b3f20":"code","7b3236ae":"code","1b20e109":"code","08f4d8b0":"code","eb012bbf":"code","d2d3d12b":"code","47229323":"code","b9bedc65":"code","634b016b":"code","5ce560ba":"markdown"},"source":{"a7dd6b27":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nimport numpy as np\nimport random\nfrom scipy.stats import zscore\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import mean_squared_error\n\nfrom xgboost import XGBRegressor\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom catboost import CatBoostRegressor\nfrom lightgbm import LGBMRegressor\nwarnings.filterwarnings(\"ignore\")\nfrom pandas_profiling import ProfileReport\nplt.ion()","9c3369b6":"def set_seed(seed=42):\n    random.seed(seed)\n    np.random.seed(seed)","7cf99cdc":"set_seed()","30632d7d":"df=pd.read_csv(\"..\/input\/beyond-analysis\/train.csv\")\ndf","31e75dff":"df.describe()","d18912ab":"df.info()","5b27998c":"sns.distplot(x=df[\"Y1\"])","05d1058b":"profile = ProfileReport(df, title=\"Pandas Profiling Report\")\nprofile","2a8eb5b2":"sns.distplot(x=df[\"Y2\"])","b83b06ee":"sns.countplot(x=\"STATUS_CHECK\", data=df)\nplt.show()","f7e218a1":"sns.countplot(x=\"CATEGORY_1\", data=df)\nplt.show()","d2d1ebc0":"sns.countplot(x=\"CATEGORY_2\", data=df)\nplt.show()","82448dd2":"sns.countplot(x=\"ACTIVE_YN\", data=df)\nplt.show()","eee4c4bd":"df[\"DEPOSIT_TRAILS\"].nunique()","e8add334":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"DEPOSIT_TRAILS\")\nsns.distplot(x=df[\"DEPOSIT_TRAILS\"],ax=ax[0])\nax[1].set_title(\"DEPOSIT_TRAILS Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"DEPOSIT_TRAILS\"],0.25)), ax=ax[1])\nplt.show()","0c017c95":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"REVENUE\")\nsns.distplot(x=df[\"REVENUE\"],ax=ax[0])\nax[1].set_title(\"REVENUE Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"REVENUE\"],0.25)), ax=ax[1])\nplt.show()","233943d6":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"WINNINGS_1\")\nsns.distplot(x=df[\"WINNINGS_1\"],ax=ax[0])\nax[1].set_title(\"WINNINGS_1 Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"WINNINGS_1\"],0.25)), ax=ax[1])\nplt.show()","38b9edfe":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"WINNINGS_2\")\nsns.distplot(x=df[\"WINNINGS_2\"],ax=ax[0])\nax[1].set_title(\"WINNINGS_2 Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"WINNINGS_2\"],0.25)), ax=ax[1])\nplt.show()","254d4155":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"DISCOUNT\")\nsns.distplot(x=df[\"DISCOUNT\"],ax=ax[0])\nax[1].set_title(\"DISCOUNT Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"DISCOUNT\"],0.1)), ax=ax[1])\nplt.show()","0fb0a563":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"DEPOSIT\")\nsns.distplot(x=df[\"DEPOSIT\"],ax=ax[0])\nax[1].set_title(\"DEPOSIT Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"DEPOSIT\"],0.25)), ax=ax[1])\nplt.show()","5923f5e6":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"WITHDRAW\")\nsns.distplot(x=df[\"WITHDRAW\"],ax=ax[0])\nax[1].set_title(\"WITHDRAW Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"WITHDRAW\"],0.25)), ax=ax[1])\nplt.show()","41d0f9eb":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"ENTRY_NUMBER\")\nsns.distplot(x=df[\"ENTRY_NUMBER\"],ax=ax[0])\nax[1].set_title(\"ENTRY_NUMBER Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"ENTRY_NUMBER\"],0.25)), ax=ax[1])\nplt.show()","208c442b":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"WINNINGS_NUMBER\")\nsns.distplot(x=df[\"WINNINGS_NUMBER\"],ax=ax[0])\nax[1].set_title(\"WINNINGS_NUMBER Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"WINNINGS_NUMBER\"],0.25)), ax=ax[1])\nplt.show()","811cae99":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"PRACTICE_ENTRY\")\nsns.distplot(x=df[\"PRACTICE_ENTRY\"],ax=ax[0])\nax[1].set_title(\"PRACTICE_ENTRY Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"PRACTICE_ENTRY\"],0.25)), ax=ax[1])\nplt.show()","2afc635f":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"PRACTICE_WINNINGS\")\nsns.distplot(x=df[\"PRACTICE_WINNINGS\"],ax=ax[0])\nax[1].set_title(\"PRACTICE_WINNINGS Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"PRACTICE_WINNINGS\"],0.25)), ax=ax[1])\nplt.show()","5540eaab":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"PRACTICE_ENTRY_NUMBER\")\nsns.distplot(x=df[\"PRACTICE_ENTRY_NUMBER\"],ax=ax[0])\nax[1].set_title(\"PRACTICE_ENTRY_NUMBER Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"PRACTICE_ENTRY_NUMBER\"],0.25)), ax=ax[1])\nplt.show()","de419c0f":"plt.rcParams['figure.figsize'] = [14,7]\nfig,ax=plt.subplots(1,2)\nax[0].set_title(\"PRACTICE_WINNINGS_NUMBER\")\nsns.distplot(x=df[\"PRACTICE_WINNINGS_NUMBER\"],ax=ax[0])\nax[1].set_title(\"PRACTICE_WINNINGS_NUMBER Transformed\")\nsns.distplot(x=np.log(1+np.power(df[\"PRACTICE_WINNINGS_NUMBER\"],0.25)), ax=ax[1])\nplt.show()","39ac98c5":"sns.jointplot(data=df, y=\"REVENUE\", x=\"Y1\")","5e06ab8c":"sns.jointplot(data=df, y=\"REVENUE\", x=\"Y2\")","7cc4311f":"categorical_variables=[\"STATUS_CHECK\", \"CATEGORY_1\", \"CATEGORY_2\", \"ACTIVE_YN\"]","961156dd":"le_cat1=LabelEncoder()\nle_cat1.fit(df[\"CATEGORY_1\"])","ab3b1f8a":"le_cat2=LabelEncoder()\nle_cat2.fit(df[\"CATEGORY_2\"])","fce96a12":"continuous_variables=[\"REVENUE\", \"WINNINGS_1\", \"DEPOSIT_2\", \"DISCOUNT\", \"DEPOSIT\", \"WITHDRAW\", \"ENTRY_NUMBER\", \"ENTRY_NUMBER\", \"WINNINGS_NUMBER\"]","4042f5ee":"df[\"CATEGORY_1\"]=le_cat1.transform(df[\"CATEGORY_1\"])\ndf[\"CATEGORY_2\"]=le_cat2.transform(df[\"CATEGORY_2\"])","bcf95315":"df=df.groupby([\"UNIQUE_IDENTIFIER\"]).mean().reset_index(drop=True)\ndf","87b86ba0":"num_bins = int(np.floor(1 + np.log2(len(df)))) \ndf.loc[:, \"bins\"] = pd.cut(df[\"Y2\"], bins=num_bins, labels=False)","16383b84":"trans_df=df","0aafa7da":"for col in continuous_variables:\n    trans_df[f\"t_{col}\"]=np.log(1+np.power(df[col],0.25))","8876d80c":"drop_cols=[\"SEQUENCE_NO\", \"PRACTICE_ENTRY\", \"PRACTICE_WINNINGS\", \"PRACTICE_ENTRY_NUMBER\", \"PRACTICE_WINNINGS_NUMBER\", \"CATEGORY_1\", \"CATEGORY_2\"]","b22a5d36":"trans_df=trans_df.drop(columns=continuous_variables+drop_cols,axis=1)","f656e3f2":"trans_df.head()","e795c9c6":"sns.heatmap(trans_df.corr(),annot=True)","dc451aec":"train_df,val_df=train_test_split(trans_df,test_size=0.2,stratify=trans_df[\"bins\"])\ntrain_df\n","bf95ec48":"y_train = train_df.drop(columns=['STATUS_CHECK', 'ACTIVE_YN', 'ENTRY', 'WINNINGS_2', 'DEPOSIT_NUMBER',\n       'WITHDRAW_NUMBER', 'DEPOSIT_TRAILS', 'bins', 't_REVENUE',\n       't_WINNINGS_1', 't_DEPOSIT_2', 't_DISCOUNT', 't_DEPOSIT', 't_WITHDRAW',\n       't_ENTRY_NUMBER', 't_WINNINGS_NUMBER'])\ny_val =  val_df.drop(columns=['STATUS_CHECK', 'ACTIVE_YN', 'ENTRY', 'WINNINGS_2', 'DEPOSIT_NUMBER',\n       'WITHDRAW_NUMBER', 'DEPOSIT_TRAILS', 'bins', 't_REVENUE',\n       't_WINNINGS_1', 't_DEPOSIT_2', 't_DISCOUNT', 't_DEPOSIT', 't_WITHDRAW',\n       't_ENTRY_NUMBER', 't_WINNINGS_NUMBER'])","3f1b3fbc":"X_train=train_df.drop(columns=[\"Y1\",\"Y2\",\"bins\"])\nX_val=val_df.drop(columns=[\"Y1\",\"Y2\",\"bins\"])","6899768b":"y_train\n","8ea8c751":"import tensorflow as tf\nfrom tensorflow.keras.layers import Dense, Activation, Dropout \nfrom tensorflow.keras.optimizers import RMSprop #OPTIMIZER\nfrom sklearn.preprocessing import MinMaxScaler\nmodel = tf.keras.Sequential()\n\nmodel.add(tf.keras.layers.Dense(1028, input_shape=(15,),activation = 'relu'))\nmodel.add(tf.keras.layers.Dense(128, input_shape=(1028,),activation = 'relu'))\nmodel.add(tf.keras.layers.Dense(32, input_shape=(128,),activation = 'relu'))\n\n# adding the second layer - with 4 inputs(need not specify) and 1 output target\nmodel.add(tf.keras.layers.Dense(2,activation = 'relu'))","a69db5d2":"model.summary()","85ad520d":"los = tf.keras.losses.MeanSquaredError()\nmetric = tf.keras.metrics.MeanSquaredError()\nmodel.compile(optimizer = 'adam',loss = los,metrics = [metric])  ","27c7d7d7":"history = model.fit(X_train, y_train, validation_split = 0.2 , epochs=36)","a5d01bdd":"test=pd.read_csv(\"..\/input\/beyond-analysis\/test.csv\")\ntest","3ae1014e":"test_df=test.groupby([\"UNIQUE_IDENTIFIER\"]).mean()","37641149":"print(len(test_df))","7e6b3f20":"for col in continuous_variables:\n    test_df[f\"t_{col}\"]=np.log(1+np.power(test_df[col],0.2))","7b3236ae":"test_df","1b20e109":"drop_cols_test=[\"SEQUENCE_NO\", \"PRACTICE_ENTRY\", \"PRACTICE_WINNINGS\", \"PRACTICE_ENTRY_NUMBER\", \"PRACTICE_WINNINGS_NUMBER\"]","08f4d8b0":"test_df=test_df.drop(columns=continuous_variables+drop_cols_test,axis=1)","eb012bbf":"test_df","d2d3d12b":"X_test=test_df.values\ntpred = model.predict(X_train)\ntscore = mean_squared_error(y_train, tpred)\n\n# validation predictions\nvpred = model.predict(X_val)\nvscore = mean_squared_error(y_val, vpred)\n\nprint(f'Training score   - {tscore:.3f} \\nValidation score - {vscore:.3f}')","47229323":"y_predd = model.predict(X_test)\ny_predd","b9bedc65":"submission = pd.read_csv('..\/input\/beyond-analysis\/sample_submission_random.csv')\nsubmission.iloc[:, 1:3] = y_predd\nsubmission","634b016b":"submission.to_csv(\"submission.csv\",index = False)\n","5ce560ba":"# Neural Network"}}