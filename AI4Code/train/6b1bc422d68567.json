{"cell_type":{"fc943360":"code","9794e47e":"code","57db4a0a":"code","82eb2626":"code","aef77d11":"code","bc971e3f":"code","1d746b17":"code","f02e9757":"code","92141eb9":"code","2f005035":"code","7581b547":"code","5816bb81":"code","65d49aa9":"markdown","cb8ef081":"markdown","6106dc2b":"markdown","8d7ca87a":"markdown","7be05e9e":"markdown","b81af54c":"markdown","25368ff6":"markdown","b3ef8864":"markdown","d55b5cfb":"markdown","4adee402":"markdown","82717ca1":"markdown","b38b57fa":"markdown","f3dcad15":"markdown","d94a4f37":"markdown","11e41206":"markdown","198411d0":"markdown","1e5a3be5":"markdown","fb46858b":"markdown"},"source":{"fc943360":"# Import python packages\nfrom google.cloud import bigquery\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a Client object with the specified project ID linked to BigQuery\nclient = bigquery.Client(project='citibike-project-330415')","9794e47e":"# setup SQL query\nquery1 = \"\"\"\n    SELECT  \n        MAX(DATE(starttime)) AS max_date,\n        MIN(DATE(starttime)) AS min_date\n    FROM \n        `citibike-project-330415.CITIBIKE.citibike_trips` \n\"\"\"\n# intiate query \nquery_job = client.query(query1)\niterator = query_job.result(timeout=30)\nrows = list(iterator)\n\n# Transform the rows into a pandas dataframe for presentation\nmin_max_date = pd.DataFrame(data=[list(x.values()) for x in rows], columns=list(rows[0].keys()))\nmin_max_date","57db4a0a":"query2 = \"\"\"\n    SELECT  \n        EXTRACT(year FROM starttime) AS year,\n        COUNT(CASE WHEN birth_year>=1940 AND birth_year<1959 THEN 1 END) AS boomer,\n        COUNT(CASE WHEN birth_year>=1960 AND birth_year<1979 THEN 1 END) AS genx,\n        COUNT(CASE WHEN birth_year>=1980 AND birth_year<1994 THEN 1 END) AS geny,\n        COUNT(CASE WHEN birth_year>=1995 AND birth_year<2012 THEN 1 END) AS genz\n    FROM \n        `citibike-project-330415.CITIBIKE.citibike_trips` \n    GROUP BY \n        year\n    HAVING \n        year IS NOT NULL AND year != 2013 AND year != 2018\n    ORDER BY\n        year ASC\n\"\"\"\n\nquery_job = client.query(query2)\niterator = query_job.result(timeout=30)\nrows = list(iterator)\n\nyear_age_cat = pd.DataFrame(data=[list(x.values()) for x in rows], columns=list(rows[0].keys()))\nyear_age_cat","82eb2626":"year_age_cat.plot(x='year', y=['boomer', 'genx', 'geny', 'genz'], kind='bar', figsize=(12,6))\nplt.ylabel(\"number of bike trips\")\nplt.xlabel(\"year\")\nplt.title(\"bike trips per year split into different age categories\")\n","aef77d11":"query3 = \"\"\"\n    SELECT  \n        EXTRACT( year FROM starttime) AS year,\n        COUNT(CASE WHEN gender= \"female\" THEN 1 END) AS female,\n        ROUND(COUNT(CASE WHEN gender= \"female\" THEN 1 END)\/COUNT(gender)*100, 2) AS female_percentage,\n        COUNT(CASE WHEN gender = \"male\" THEN 1 END) AS male,\n        ROUND(COUNT(CASE WHEN gender = \"male\" THEN 1 END)\/COUNT(gender)*100, 2) AS male_percentage\n    FROM \n        `citibike-project-330415.CITIBIKE.citibike_trips` \n    GROUP BY \n        year\n    HAVING \n        year IS NOT NULL AND year != 2013 AND year != 2018\n    ORDER BY\n        year ASC\n\"\"\"\n\nquery_job = client.query(query3)\niterator = query_job.result(timeout=30)\nrows = list(iterator)\n\nyear_gender_cat = pd.DataFrame(data=[list(x.values()) for x in rows], columns=list(rows[0].keys()))\nyear_gender_cat","bc971e3f":"year_gender_cat.plot(x='year', y=['female', 'male'], kind='bar', figsize=(12,6))\nplt.ylabel(\"number of bike trips\")\nplt.xlabel(\"year\")\nplt.title(\"bike trips per year split into male\/female\")\n","1d746b17":"query4 = \"\"\"\n    SELECT  \n        EXTRACT ( dayofweek FROM starttime) AS day_of_week,\n        COUNT(*) AS number_of_trip\n    FROM \n        `citibike-project-330415.CITIBIKE.citibike_trips` \n    GROUP BY \n        day_of_week\n    HAVING\n        day_of_week IS NOT NULL \n    ORDER BY \n        day_of_week ASC\n\"\"\"\n\nquery_job = client.query(query4)\niterator = query_job.result(timeout=30)\nrows = list(iterator)\n\ndayofweek_bike_trip = pd.DataFrame(data=[list(x.values()) for x in rows], columns=list(rows[0].keys()))\ndayofweek_bike_trip","f02e9757":"dayofweek_bike_trip.plot(x = 'day_of_week', y = 'number_of_trip', kind='bar', figsize=(12,6))\nplt.ylabel(\"number of bike trips\")\nplt.xlabel(\"day of week\")\nplt.title(\"bike trips per day of week\")\nplt.legend(\"\")\n","92141eb9":"query5 = \"\"\"\n    SELECT  \n        EXTRACT(dayofweek FROM starttime) AS day,\n        ROUND(AVG(tripduration), 2) AS average_trip_duration_minutes\n    FROM \n        `citibike-project-330415.CITIBIKE.citibike_trips` \n    GROUP BY \n        day\n    HAVING \n        day IS NOT NULL\n    ORDER BY \n        day ASC\n\"\"\"\n\nquery_job = client.query(query5)\niterator = query_job.result(timeout=30)\nrows = list(iterator)\n\navg_trip_duration_dayofweek = pd.DataFrame(data=[list(x.values()) for x in rows], columns=list(rows[0].keys()))\navg_trip_duration_dayofweek","2f005035":"avg_trip_duration_dayofweek.plot(x='day', y='average_trip_duration_minutes', kind='bar', figsize=(12,6))\nplt.ylabel(\"average duration per bike trip\")\nplt.xlabel(\"day of week\")\nplt.title(\"average duration of bike trip per day of week\")\nplt.legend(\"\")","7581b547":"query5 = \"\"\"\n    SELECT  \n        EXTRACT(year FROM starttime) AS year,\n        EXTRACT(month FROM starttime) AS month,\n        COUNT(*) AS number_of_trips\n    FROM \n        `citibike-project-330415.CITIBIKE.citibike_trips` \n    GROUP BY \n        year, month\n    HAVING \n        month IS NOT NULL AND \n        year IS NOT NULL AND \n        year = 2015 \n    ORDER BY \n        year ASC,\n        month ASC\n\"\"\"\n\nquery_job = client.query(query5)\niterator = query_job.result(timeout=30)\nrows = list(iterator)\n\ntrips_per_month_2015 = pd.DataFrame(data=[list(x.values()) for x in rows], columns=list(rows[0].keys()))\ntrips_per_month_2015","5816bb81":"trips_per_month_2015.plot(x='month', y='number_of_trips', kind='bar', figsize=(12,6))\nplt.ylabel(\"number of bike trips\")\nplt.xlabel(\"month of year 2015\")\nplt.title(\"bike trips per month in year 2015\")\nplt.legend(\"\")","65d49aa9":"We futher present the data extracted into a bar chart to visualise the information queried. ","cb8ef081":"The data visualisation shows the number of bike trips made in 2015 has some seasonality. For the winter months of January to March, the number of bike trips made was the least among the other months. This can be explained by the extreme cold weather and thick snow which prohibit effective cycling around town. We observed the number of bike trips picking up from the month of April onwards until October when the lower temperature sets in again. ","6106dc2b":"# Background\nThis is a side project to setup SQL query using Google BigQuery to extract information from a public data set. \n\n# Data set\nFor this project, we will be using \"NYC Citi Bike Trips\" public data set hosted by Google BigQuery. Citi Bike is the nation's largest bike share program, with 10,000 bikes and 600 stations across Manhattan, Brooklyn, Queens, and Jersey City. This dataset includes Citi Bike trips since Citi Bike launched in September 2013 and is updated daily. The data has been processed by Citi Bike to remove trips that are taken by staff to service and inspect the system, as well as any trips below 60 seconds in length, which are considered false starts.","8d7ca87a":"The data set contains Citi Bike trips made between 1st July 2013 and 31st May 2018. \n\n#### 2. Which age group uses Citi Bike most often and the trend?\n\nTo find the answer to this question, we first group the users into the following 4 buckets according to their age group: \n1. boomer - 1940=<birth_year<1959\n2. genx - 1960=<birth_year<1979\n3. geny - 1980=<birth_year<1994\n4. genz - 1995=<birth_year<2012\n\nWe now query the number of bike trips taken per year (based on the \"starttime\") by each group of users. However, the data from year 2013 and 2018 are not full year data so we will remove it and analyse the data only for year 2014 to 2017 for consistency.  ","7be05e9e":"## 3. Which gender uses Citi Bike most often and trends?\n\nTo find the answer to this question, we query the number of bike trips made per year split by gender. However, the data from year 2013 and 2018 are not full year data so we will remove it and analyse the data only for year 2014 to 2017 for consistency.","b81af54c":"From the data visualisation presented above, it seems that weekdays have more number of bike trips compared to weekends. New York City is a financial and business district most busy during the weekdays. It is not surprising that Citi Bikes are being utilised more on weekdays when the working population uses it to travel across town. ","25368ff6":"We futher present the data extracted into a bar chart to visualise the information queried. ","b3ef8864":"From the bar chart presented, it is obvious that geny and genx utilises the Citi Bikes most often while genz utilises it the least. This observation could be explained by the demographics of the population in New York City: \n* geny and genx are the 2 generations which are economically active often found in major cities compared to country side. Hence it is not suprising to find that these 2 generations utilise the Citi Bikes in New York City more often than others. \n* genz are teenagers and students which could be found in cities but not as often as geny and genx. Further more, the chances of students commuting within the city is lower as we would expect majority of their trips are made between school and home. \n* boomers who have not retired and are either still working or living in the city have a much lower population compared to genx and geny. They do not utilise Citi bike as often. It might be due to their preference of taking other form of public transportations. ","d55b5cfb":"# Analysis\nWe may now proceed to setup the relevant SQL queries to address the questions setup in the Ask phase.\n\n#### 1. What time frame does the data set contains?\nFirst off, we setup the query to find the time period of the data set. We query the data set to find the maximum and minimum date contained in variable \"starttime\".","4adee402":"## 5. What is the total number of trips per month for year 2015?\n\nTo answer this question, we query the number of trips made per month only for year 2015. ","82717ca1":"## 4. Which day of the week is the most popular?\n\nTo answer this question, we query the number of trips taken per day of the week across the whole data set. Note: day_of_week 0 is Sunday and 7 is Saturday.","b38b57fa":"## 5. What is the average trip duration per day of the week?\n\nTo answer this question, we query the average \"tripduration\" occured during each day of the week (i.e. Sunday to Saturday).","f3dcad15":"From the data visualisation presented, it seems that there is an overall increase in the number of bike trips taken per year regardless of whether the trips were taken by male or female. The number of male users of Citi Bike is around 65% while that of female users is around 35%. The split between male and female users are quite consistent between 2014 and 2017. ","d94a4f37":"We futher present the data extracted into a bar chart to visualise the information queried. ","11e41206":"The data visualisation shows that bike trips taken on weekday tends to be shorter than those made on weekends. This could probably be explained by the fact that the working population who took bike trips during weekdays are for running errands which are shorter by nature compared to those used for leisure on weekends which are generally longer.   ","198411d0":"# Ask\nWe will be using this data set to answer the questions listed below:\n1. What time frame does the data set contains?\n2. Which age group uses Citi Bike most often and the trend?\n3. Which gender uses Citi Bike most often and the trend?\n4. Which day of the week is Citi Bike most utilised? \n5. What is the average trip duration per day of the week?\n6. What is the total number of trips per month for year 2015?\n\nSQL can conduct alot more sophisticated analysis and data extractions. For the purpose of this excerise, we will limit it to this 6 questions to show case SQL's ability and Python's capability in data visualisation. \n\n# Prepare\nThe data set \"citibike_trips\" contains the following variables \n* tripduration - duration of the bike trip in minutes\n* starttime - date and time which the bike trip started in YYYY-MM-DDTHH:MM:SS format\n* stoptime- date and time which the bike trip stopped in YYYY-MM-DDTHH:MM:SS format\n* start_station_id - id of the bike station which the trip started\n* start_station_name - name of the bike station which the trip started\n* start_station_latitude - location of the bike station which the trip started\n* start_station_lonitude - location of the bike station which the trip started\n* end_station_id - id of the bike station which the trip ended\n* end_station_name - name of the bike station which the trip ended\n* end_station_latitude - location of the bike station which the trip ended\n* end_station_lonitude - location of the bike station which the trip ended\n* bikeid - id of the bike which made the trip\n* usertype - categorised into subsciber or customer\n* birth_year - metadata of user\n* gender - metadata of user\n\n# Process\nWe will setup Kaggle to access Google BigQuery and using SQL to extract the information from the \"NYC Citi Bike Trips\" data set to answer the questions above. We first create a Google BigQuery project with name \"citibike-project-330415\" and copied the \"citibike_trips\" data set onto it. In Kaggle, we attached the Google Cloud Services BigQuery in the Notebook for queries in SQL to be passed directly to BigQuery. We setup the service as follow:","1e5a3be5":"We futher present the data extracted into a bar chart to visualise the information queried. ","fb46858b":"We futher present the data extracted into a bar chart to visualise the information queried. "}}