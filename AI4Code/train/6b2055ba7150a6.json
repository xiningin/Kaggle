{"cell_type":{"7fab8b88":"code","2588f012":"code","629131cd":"code","4571f93a":"code","7f19ee0e":"code","355e971f":"code","45e76d77":"code","8327a1b5":"code","5f7b779d":"code","7e2e67c8":"code","8cfb7a8d":"code","4c4d35b6":"markdown","2e91c39d":"markdown","8d1fd1f3":"markdown","45600af4":"markdown","f67c74be":"markdown","fdc1ec7e":"markdown","c8237fbb":"markdown","6fef05a4":"markdown","1120466c":"markdown"},"source":{"7fab8b88":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2588f012":"import numpy as np\nx = np.array ([1, 2, 3, 4, 5])\ns = (np.sum ([np.cos(x)**2])) * 0.5\nprint (s)","629131cd":"import numpy as np\nw = np.array ([10,20,30,40,50])\nx = np.array ([1, 2, 3, 4, 5])\nb = const = 5\ns = np.sum(np.dot(w,x)+b)\nprint (s)","4571f93a":"import numpy as np\ny = np.array ([10, 20, 30, 40, 50])\nt = np.array ([1, 2, 3, 4, 5])\nf = np.sum((y-t)**2)\nprint (f)","7f19ee0e":"import matplotlib.pyplot as plt\nimport numpy as np\nfig, ax = plt.subplots()\nx = np.linspace(0.1, 10,100)\ny = 1\/x\nax.plot(x,y, color = '#0a0b0c')\nfig.set_figwidth(10)\nfig.set_figheight(3)\nplt.show ()","355e971f":"import numpy as np\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nx = np.linspace(1, 10, 100)\ni = np.linspace(1, 10, 100)\nh = (x-1)\/ 100\nxi = 1+i*h\ny = (np.sum(1\/xi)) * h\nax.plot(xi,y, color = '#0a0b0c')\nfig.set_figwidth(10)\nfig.set_figheight(7)\nplt.show ()","45e76d77":"import matplotlib.pyplot as plt\nimport numpy as np\nx = np.linspace (-6, 6, 100)\ny = np.cos(x)\nfig, ax = plt.subplots()\nmw = 0\nsig = 0.6\na = np.random.normal(mw, sig, 100)\nb = np.random.normal(mw, sig, 100)\nax.scatter(a+x, b+y, c = 'r')\nax.plot(x,y)\nfig.set_figwidth(15)\nfig.set_figheight(10)\nplt.show()","8327a1b5":"import matplotlib as plt\nimport numpy as np\nN = const = 5\na = np.arange(2*N)\na = a + 1\na = np.random.permutation(a)\na = a.reshape(N, 2)\n\nprint(a)","5f7b779d":"import matplotlib.pyplot as plt\nimport numpy as np\nf = np.linspace(0.2*np.pi, 1000)\na = 2\nk = 2\nY = 0\nfig, ax = plt.subplots()\nr = a * np.cos(k * f + Y)\nx =r * np.cos(f)\ny = r * np.sin(f)\n\nax.plot(x,y, c = \"r\")\nfig.set_figwidth(15)\nfig.set_figheight(15)\nplt.show()","7e2e67c8":"import matplotlib.pyplot as plt\nimport numpy as np\nx=np.array([[1,2], [2, 0.5], [6,1],[-2,1],[-4,0],[1,1],[2,-6],[-2,-4]])\ny=np.array([[1],[1],[0],[0],[2],[1],[1],[2]])\nY=np.concatenate((x, y), axis=1)\nY, counts=(np.unique(y, return_counts=True))\nprint (counts)\n \n","8cfb7a8d":"import matplotlib.pyplot as plt\nimport numpy as np\nx = np.linspace(-1, 1, 100)\ny = np.linspace (-1, 1, 100)\nX,Y = np.meshgrid(x,y)\nF = X**2 + Y**2 - 0.06\nplt.contour ( X,Y,F,[0])\nplt.show()","4c4d35b6":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","2e91c39d":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 8","8d1fd1f3":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 11","45600af4":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5","f67c74be":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 10","fdc1ec7e":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","c8237fbb":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 6","6fef05a4":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 7","1120466c":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"}}