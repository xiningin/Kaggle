{"cell_type":{"a7fbc6c8":"code","2ce6c7b5":"code","c4abe668":"code","5e3c681d":"code","f61f17d3":"code","8230c8f9":"code","44a4c547":"code","48d70afa":"code","efa2fa7a":"code","f754688f":"code","e409dbab":"code","b7b2e110":"code","677cdc73":"code","20fedddb":"code","1f8c2bb0":"code","e8f336c2":"code","21783783":"code","76586af5":"code","ad40f2b1":"code","96ebd769":"code","5833011b":"code","57f96369":"code","72bd0899":"code","cdc19c4c":"code","7621b1eb":"code","bbee2c9e":"code","aafc10b5":"code","e5ca31f9":"code","f2519981":"code","ac540f4d":"code","ad7b3138":"code","d2c824f7":"code","8c1b133b":"code","c9285eb1":"code","8ac95ff5":"code","26df2215":"code","25915bc3":"code","41136d91":"code","635e4c0a":"code","6023351f":"code","90b37bc6":"code","a8edaf5e":"code","5caab380":"code","626e8b5a":"markdown","b747de3b":"markdown","9237050e":"markdown","c4ea7dd2":"markdown","582a095d":"markdown","ffa4bf83":"markdown","6bd36a4d":"markdown","3dfcc76c":"markdown","d54b6e9a":"markdown","47dade62":"markdown","bda202af":"markdown","fcb78dc0":"markdown","d23db5b5":"markdown","3034a4ec":"markdown","684ad5f5":"markdown","2915ef0e":"markdown","256f6e9a":"markdown","3ee197ee":"markdown","b3d3695c":"markdown"},"source":{"a7fbc6c8":"import pandas as pd \npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('dark')\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2ce6c7b5":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head()","c4abe668":"test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","5e3c681d":"train.info()","f61f17d3":"test.info()","8230c8f9":"train[\"Survived\"].value_counts(normalize=True)","44a4c547":"g=sns.countplot(x=train[\"Survived\"]).set_title(\"Survivor Count\")","48d70afa":"a=sns.countplot(train[\"Sex\"]).set_title(\"Passenger count by Sex\")","efa2fa7a":"plt.title(\"Survival Rate by Sex\")\nb=sns.barplot(x='Sex',y='Survived',data=train).set_ylabel(\"Survival Rate\")","f754688f":"train.groupby('Pclass').Survived.mean()","e409dbab":"a = sns.countplot(x='Pclass', hue='Survived', data=train).set_title('Survivors by class')","b7b2e110":"plt.title(\"Survival Rate by Pclass\")\nb = sns.barplot(x='Pclass', y='Survived', data=train).set_ylabel('Survival Rate')","677cdc73":"train.groupby(['Pclass','Sex']).Survived.mean()","20fedddb":"plt.title(\"Survival Rate by Pclass and Sex\")\ng=sns.barplot(x='Pclass',y='Survived',hue='Sex',data=train).set_ylabel(\"Survival Rate\")","1f8c2bb0":"fig, axarr = plt.subplots(1,2,figsize=(12,6))\naxarr[0].set_title('Age distribution')\nf = sns.distplot(train['Age'], color='red', bins=40, ax=axarr[0])\naxarr[1].set_title('Age distribution for the two subpopulations')\ng = sns.kdeplot(train['Age'].loc[train['Survived'] == 1], \n                shade= True, ax=axarr[1], label='Survived').set_xlabel('Age')\ng = sns.kdeplot(train['Age'].loc[train['Survived'] == 0], \n                shade=True, ax=axarr[1], label='Not Survived')","e8f336c2":"g = sns.swarmplot(y='Sex', x='Age', hue='Survived', data=train).set_title('Survived by age and sex')","21783783":"train.Fare.describe()","76586af5":"f = sns.distplot(train.Fare, color='b').set_title('Fare distribution')\nfare_ranges = pd.qcut(train.Fare, 4, labels = ['Low', 'Mid', 'High', 'Very high'])","ad40f2b1":"g = sns.barplot(x=fare_ranges, y=train.Survived).set_ylabel('Survival rate')","96ebd769":"a = sns.swarmplot(x='Sex', y='Fare', hue='Survived',data=train).set_title('Survived by fare and sex')","5833011b":"sns.countplot(train['Embarked']).set_title('Passengers count by boarding point')","57f96369":"p = sns.countplot(x = 'Embarked', hue = 'Survived', data = train).set_title('Survivors by boarding point')","72bd0899":"g = sns.countplot(data=train, x='Embarked', hue='Pclass').set_title('Pclass count by boarding point')","cdc19c4c":"train['Title'] = train['Name'].apply(lambda x: x.split(',')[1].split('.')[0].strip())\ntest['Title'] = test['Name'].apply(lambda x: x.split(',')[1].split('.')[0].strip())","7621b1eb":"train['Title'].value_counts()","bbee2c9e":"test['Title'].value_counts()","aafc10b5":"train['Title'].replace(['Mme', 'Ms', 'Lady', 'Mlle', 'the Countess', 'Dona'], 'Miss', inplace=True)\ntest['Title'].replace(['Mme', 'Ms', 'Lady', 'Mlle', 'the Countess', 'Dona'], 'Miss', inplace=True)\n\ntrain['Title'].replace(['Major', 'Col', 'Capt', 'Don', 'Sir', 'Jonkheer'], 'Mr', inplace=True)\ntest['Title'].replace(['Major', 'Col', 'Capt', 'Don', 'Sir', 'Jonkheer'], 'Mr', inplace=True)","e5ca31f9":"train.groupby('Title').Survived.mean()","f2519981":"plt.title('Survival rate by Title')\ng = sns.barplot(x='Title', y='Survived', data=train).set_ylabel('Survival rate')","ac540f4d":"fig, axarr = plt.subplots(1,2,figsize=(12,6))\na = sns.countplot(train['SibSp'], ax=axarr[0]).set_title('Passengers count by SibSp')\naxarr[1].set_title('Survival rate by SibSp')\nb = sns.barplot(x='SibSp', y='Survived', data=train, ax=axarr[1]).set_ylabel('Survival rate')","ad7b3138":"fig, axarr = plt.subplots(1,2,figsize=(12,6))\na = sns.countplot(train['Parch'], ax=axarr[0]).set_title('Passengers count by Parch')\naxarr[1].set_title('Survival rate by Parch')\nb = sns.barplot(x='Parch', y='Survived', data=train, ax=axarr[1]).set_ylabel('Survival rate')","d2c824f7":"g  = sns.catplot(x=\"Parch\",y=\"Survived\",data=train, height = 8)\ng = g.set_ylabels(\"Survival Percentage\")","8c1b133b":"g  = sns.catplot(x=\"SibSp\",y=\"Survived\",data=train, height = 8)\ng = g.set_ylabels(\"Survival Percentage\")","c9285eb1":"train['Fam_size'] = train['SibSp'] + train['Parch'] + 1\ntest['Fam_size'] = test['SibSp'] + test['Parch'] + 1","8ac95ff5":"plt.title('Survival rate by family size')\ng = sns.barplot(x=train.Fam_size, y=train.Survived).set_ylabel('Survival rate')","26df2215":"g  = sns.catplot(x=\"Fam_size\",y=\"Survived\",data=train, height = 8)\ng = g.set_ylabels(\"Survival Percentage\")","25915bc3":"train['Fam_type'] = pd.cut(train.Fam_size, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])\ntest['Fam_type'] = pd.cut(test.Fam_size, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])","41136d91":"plt.title('Survival rate by family type')\ng = sns.barplot(x=train.Fam_type, y=train.Survived).set_ylabel('Survival rate')","635e4c0a":"y = train['Survived']\nfeatures = ['Pclass', 'Sex', 'Fare', 'Title', 'Embarked', 'Fam_type']\nX = train[features]\nX.head()","6023351f":"numerical_cols = ['Fare']\ncategorical_cols = ['Pclass', 'Sex', 'Title', 'Embarked', 'Fam_type']\n\n# Preprocessing for numerical data\nnumerical_transformer = SimpleImputer(strategy='median')\n\n# Preprocessing for categorical data\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder())\n])\n\n# Bundle preprocessing for numerical and categorical data\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numerical_transformer, numerical_cols),\n        ('cat', categorical_transformer, categorical_cols)\n    ])\n\n# Bundle preprocessing and modeling code \ntitanic_pipeline = Pipeline(steps=[('preprocessor', preprocessor),\n                              ('model', RandomForestClassifier(random_state=0, \n                                                               n_estimators=500, max_depth=5))\n                             ])\n\n# Preprocessing of training data, fit model \ntitanic_pipeline.fit(X,y)\n\nprint('Cross validation score: {:.3f}'.format(cross_val_score(titanic_pipeline, X, y, cv=10).mean()))","90b37bc6":"X_test = test[features]\nX_test.head()","a8edaf5e":"predictions = titanic_pipeline.predict(X_test)","5caab380":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint('Your submission was successfully saved!')","626e8b5a":"****Embarked****<br>\nThere are three destinations that are present in the dataset<br>\n* Southampton(S)\n* Cherbourg(C)\n* Queenstown(Q)<br>\nFirst let's see how the survivors count is from each point","b747de3b":"**Age**<br>\nFrom the training data alone there are 177 missing values that are present but this is always a good feature to use in some of my previous models that I tried","9237050e":"****Fare****","c4ea7dd2":"From this we can see that most of the male survivors were below around 11 or 12 whereas for females there is no such thing","582a095d":"****Passenger Class(Pclass)****<br>\nThere were 3 classes on the ship and survival of the passengers from each class is shown below","ffa4bf83":"****96.8% of females from Class 1 and 92.1% from Class 2 survived but this drops all the way to 50% for Class 3 women****","6bd36a4d":"There is a higher proportion of first and second class passengers from Cherbourg and Queenstown than in Sounthampton where there is a majority of people from third class","3dfcc76c":"**With such a huge difference between 75% to max, it shows that this distribution is positively skewed**<br>\nAnother thing to note would be that people who paid more fare survived","d54b6e9a":"**SibSp and Parch**","47dade62":"**The survival rate is higher for people who spent more**","bda202af":"**What about the gender and class correlation???**","fcb78dc0":"From class 3 only around 24% of them survived whereas the people from the higher class easily survived<br>\nThe visualisation will give a clearer picture","d23db5b5":"**Most of the people from ages 20 till 30 atleast have survived. Other than that nothing else can be derived**<br>\nIf we consider the gender feature","3034a4ec":"The majority of people on the Titanic embarked from Southampton which makes sense since that's where it started from<br>\nLooking by survivors, more people who embarked at Cherbourg survived that died.<br>\nOne its own, we can't derive anything but when coupled with Pclass","684ad5f5":"**Modelling**","2915ef0e":"Only 38.3 % survived in the train data","256f6e9a":"****Feature Analysis****<br>\nI learnt the features to consider from this notebook majorly ->[https:\/\/www.kaggle.com\/mviola\/titanic-eda-simple-model-0-80861?rvi=1](http:\/\/)","3ee197ee":"**Missing values**: Age, Fare, Cabin, Embarked","b3d3695c":"**Name**<br>\nThis is one of the features I never considered till now"}}