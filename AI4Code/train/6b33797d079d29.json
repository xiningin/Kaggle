{"cell_type":{"e33a23b2":"code","09ca2959":"code","b25aa965":"code","5356767a":"code","d790d4ac":"code","15707d90":"code","6bc6c7d5":"code","15d57fcd":"code","c1098928":"code","106f788a":"code","8e2fbad3":"code","48d6e6b0":"code","2594e78d":"code","9131fae5":"code","763a85b2":"code","33b4c58f":"code","f5b560ad":"code","5d850717":"code","09e1758e":"code","011c49fa":"code","a63ddec2":"code","55a2965e":"code","de4c10e8":"code","8f3058c1":"code","19e0314c":"code","8b8c8570":"code","ab48569c":"code","3b52f2eb":"code","bcfbac94":"code","553d9f65":"code","fb18f990":"markdown"},"source":{"e33a23b2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","09ca2959":"import pandas as pd\ndf = pd.read_csv('..\/input\/the-housing-data\/Housing_data.csv',sep=';')","b25aa965":"df.head()","5356767a":"x = df.drop(['price'],axis=1)\ny = df['price'].values","d790d4ac":"from sklearn.linear_model import LinearRegression\nlmodel1 = LinearRegression()","15707d90":"lmodel1.fit(x,y)","6bc6c7d5":"yp1 = lmodel1.predict(x)","15d57fcd":"y.shape\nyp1.shape\n#type(y)\n#type(yp1)\nabs(y-yp1).mean()","c1098928":"x\nfrom sklearn.preprocessing import StandardScaler\nscl = StandardScaler()\nscl.fit(x)\nx_scl = scl.transform(x)","106f788a":"pd.DataFrame(x_scl)[2].std()","8e2fbad3":"from sklearn.preprocessing import PolynomialFeatures\npol = PolynomialFeatures(degree = 2)","48d6e6b0":"pol.fit(x_scl)\nx_pol = pol.transform(x_scl)","2594e78d":"from sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest = train_test_split(x_pol,y,test_size=0.2)","9131fae5":"lmodel2 = LinearRegression()\nlmodel2.fit(xtrain,ytrain)","763a85b2":"#yp2 = lmodel2.predict(x_pol)\nytrain_p = lmodel2.predict(xtrain)\n#abs(y-yp2).mean()\nabs(ytrain-ytrain_p).mean()","33b4c58f":"len(lmodel2.coef_)","f5b560ad":"#yp2 = lmodel2.predict(x_pol)\nytest_p = lmodel2.predict(xtest)\n#abs(y-yp2).mean()\nabs(ytest-ytest_p).mean()","5d850717":"k = np.array([[6360 , 2 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0]])\nk_t = scl.transform(k)\nk_p = pol.transform(k_t)\nlmodel2.predict(k_p)","09e1758e":"from sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest = train_test_split(x_scl,y,test_size=0.2)","011c49fa":"errors_train = []\nerrors_test = []\nfor i in range(1,10):\n    pol = PolynomialFeatures(degree = i)\n    pol.fit(xtrain)\n    x_train = pol.transform(xtrain)\n    \n    pol.fit(xtest)\n    x_test = pol.transform(xtest)\n        \n    lmodel2 = LinearRegression()\n    lmodel2.fit(x_train,ytrain)\n    \n    yp2_train = lmodel2.predict(x_train)\n    e_train = abs(ytrain-yp2_train).mean()\n    \n    yp2_test = lmodel2.predict(x_test)\n    e_test = abs(ytest-yp2_test).mean()\n    \n    errors_train.append(e_train)\n    errors_test.append(e_test)","a63ddec2":"errors_train","55a2965e":"errors_test","de4c10e8":"import matplotlib.pyplot as plt\nplt.plot(range(1,10),errors_train)\nplt.plot(range(1,10),errors_test,c='red')\nplt.show()","8f3058c1":"import numpy as np\na = np.array([[2,5,6,7,8,6]]).reshape(3,2)\na\npol.fit(a)\npol.transform(a)","19e0314c":"a = np.array([[2,3,5,6,4]]).reshape(5,1)","8b8c8570":"a.mean()","ab48569c":"a - a.mean()","3b52f2eb":"b = (a-a.mean())\/a.std()","bcfbac94":"b","553d9f65":"b.std()","fb18f990":"Predictions on user given value"}}