{"cell_type":{"7125477e":"code","3cde6a53":"code","03bb31e1":"code","354f6338":"code","d20aeb93":"code","1e7f3c10":"code","21a00954":"code","4fbeac7e":"code","55d725f0":"code","5e2b5786":"code","ff5c05b6":"code","32203eca":"code","e8c6ed99":"code","29a292e1":"code","127c48da":"code","502a4fca":"code","6cefa7ec":"code","47496ac6":"code","c7446220":"code","dfab414c":"code","4b102154":"code","9fc51b1e":"code","70ea3b80":"code","1f758b4a":"code","5064ab92":"code","09d02547":"code","b0f83874":"code","3acd2281":"code","7c1d2fe4":"code","32567c69":"code","4564a49a":"code","20a1e18b":"markdown","da58d590":"markdown","ae3c74d5":"markdown","655f4ea3":"markdown","a7ee7144":"markdown","fbd10c49":"markdown","d608e9dc":"markdown","cda11828":"markdown","e947986c":"markdown","d57e4b6c":"markdown","e71b133f":"markdown","f5c4b308":"markdown","82a5655c":"markdown","bf4b897a":"markdown","ffe94c52":"markdown","a9552f2f":"markdown","bf2b71cd":"markdown","abe0e432":"markdown","fc17d72d":"markdown","2f770652":"markdown","3a36e13b":"markdown","d57891ad":"markdown","5826299a":"markdown","9bf15b79":"markdown","f019384e":"markdown"},"source":{"7125477e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pylab as plt","3cde6a53":"df_train = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\")\ndf_train.head()","03bb31e1":"df_train['target'].unique()","354f6338":"len(df_train)","d20aeb93":"df_train.loc[:, 'f0':'f99'].describe().style.background_gradient(cmap='Pastel1')","1e7f3c10":"df = df_train.groupby('target').size()\ndf","21a00954":"plt.figure(figsize=(15, 7))\nplt.pie([df[0],df[1]], labels = [\"0\" , \"1\"],autopct='%1.1f%%',colors = [\"#2a9d8f\", \"#e9c46a\"])","4fbeac7e":"import seaborn as sns\ncolor = sns.color_palette()","55d725f0":"fig, axes = plt.subplots(10,10,figsize=(12, 12))\naxes = axes.flatten()\nsns.set_palette(sns.color_palette([\"#2a9d8f\", \"#e9c46a\"]))\n\nfor idx, ax in enumerate(axes):\n    sns.kdeplot(data=df_train[df_train['target'] == 0], x=f'f{idx}',ax=ax,palette = [\"#2a9d8f\"])\n    sns.kdeplot(data=df_train[df_train['target'] == 1], x=f'f{idx}',ax=ax,palette = [\"#e9c46a\"])    \n    ax.set_xticks([])\n    ax.set_yticks([])\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    ax.spines['left'].set_visible(False)\n    ax.set_title(f'f{idx}', loc='right', weight='bold', fontsize=10)\n\nfig.supxlabel('Average by class (by feature f0-f99)', ha='center', fontweight='bold')\n\nfig.tight_layout()\nplt.show()","5e2b5786":"stick = ['f0','f2','f4','f9','f12','f16','f19','f20','f23','f24','f27','f28','f30','f31','f32','f33','f35','f39','f42','f44','f46','f48','f49','f51','f52','f53','f56','f58','f59','f60','f61','f62','f63','f64','f68','f69','f72','f73','f75','f76','f78','f79','f81','f83','f84','f87','f88','f89','f90','f92','f93','f94','f95','f98','f99']\ntrain_stick = df_train[stick+['target']]\ntrain_mount = df_train.drop(stick+['id'],axis = 1)","ff5c05b6":"train_mount.head()","32203eca":"train_stick.head()","e8c6ed99":"fig, axes = plt.subplots(2,1,figsize=(12, 12))\naxes = axes.flatten()\nsns.set_palette(sns.color_palette([\"#2a9d8f\", \"#e9c46a\"]))\n\nfor idx, ax in enumerate(axes):\n    sns.kdeplot(data=df_train[df_train['target'] == 0], x=stick[idx],ax=ax,palette = [\"#2a9d8f\"])\n    sns.kdeplot(data=df_train[df_train['target'] == 1], x=stick[idx],ax=ax,palette = [\"#e9c46a\"])    \n    ax.set_xticks([])\n    ax.set_yticks([])\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    ax.spines['left'].set_visible(False)\n    ax.set_title(stick[idx], loc='right', weight='bold', fontsize=10)\n\nfig.supxlabel('Average by class (by feature f0 and f2)', ha='center', fontweight='bold')\n\nfig.tight_layout()\nplt.show()","29a292e1":"fig, axes = plt.subplots(11,5,figsize=(12, 12))\naxes = axes.flatten()\nsns.set_palette(sns.color_palette([\"#2a9d8f\", \"#e9c46a\"]))\n\n\nfor idx, ax in enumerate(axes):\n    sns.kdeplot(data=df_train[df_train['target'] == 0], x=stick[idx],ax=ax,palette = [\"#2a9d8f\"])\n    sns.kdeplot(data=df_train[df_train['target'] == 1], x=stick[idx],ax=ax,palette = [\"#e9c46a\"])    \n    ax.set_xticks([])\n    ax.set_yticks([])\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    ax.spines['left'].set_visible(False)\n    ax.set_title(stick[idx], loc='right', weight='bold', fontsize=10)\n\nfig.supxlabel('Average by class (by feature f0 and f2)', ha='center', fontweight='bold')\n\nfig.tight_layout()\nplt.show()","127c48da":"mount = [columns for columns in train_mount]","502a4fca":"fig, axes = plt.subplots(9,5,figsize=(12, 12))\naxes = axes.flatten()\nsns.set_palette(sns.color_palette([\"#2a9d8f\", \"#e9c46a\"]))\n\nfor idx, ax in enumerate(axes):\n    sns.kdeplot(data=train_mount[train_mount['target'] == 0], x=mount[idx],ax=ax,palette = [\"#2a9d8f\"])\n    sns.kdeplot(data=train_mount[train_mount['target'] == 1], x=mount[idx],ax=ax,palette = [\"#e9c46a\"])    \n    ax.set_xticks([])\n    ax.set_yticks([])\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    ax.spines['left'].set_visible(False)\n    ax.set_title(stick[idx], loc='right', weight='bold', fontsize=10)\n\nfig.supxlabel('Average by class (by feature f0 and f2)', ha='center', fontweight='bold')\n\nfig.tight_layout()\nplt.show()","6cefa7ec":"df_test = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\")\ndf_test.head()","47496ac6":"len(df_test)","c7446220":"sample_submission = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv\")\nsample_submission","dfab414c":"import datatable as dt\n\nimport pandas as pd\nimport numpy as np\nimport random\nimport time\nimport os\nimport gc\n\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import roc_auc_score\n\nimport lightgbm as lgb\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter('ignore')","4b102154":"N_SPLITS = 5\nN_ESTIMATORS = 20000\nEARLY_STOPPING_ROUNDS = 200\nVERBOSE = 1000\nSEED = 42","9fc51b1e":"def seed_everything(seed=42):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    \nseed_everything(SEED)","70ea3b80":"train = dt.fread('..\/input\/tabular-playground-series-nov-2021\/train.csv').to_pandas()\ntest = dt.fread('..\/input\/tabular-playground-series-nov-2021\/test.csv').to_pandas()\ntrain = train[train.columns[1:]]\ntest = test[test.columns[1:]]\n\nTARGET = 'target'","1f758b4a":"features = [col for col in train.columns if 'f' in col]","5064ab92":"train[features] = train[features].astype('float32')\n\ntest[features] = test[features].astype('float32')\n","09d02547":"display(train.info())\ndisplay(train[features].head())","b0f83874":"display(test.info())\ndisplay(test[features].head())","3acd2281":"lgb_params = {\n    'objective': 'binary',\n    'n_estimators': N_ESTIMATORS,\n    'random_state': SEED,\n    'learning_rate': 8e-3,\n    'subsample': 0.6,\n    'subsample_freq': 1,\n    'colsample_bytree': 0.4,\n    'reg_alpha': 10.0,\n    'reg_lambda': 1e-1,\n    'min_child_weight': 256,\n    'min_child_samples': 20,\n    'categorical_feature': 0,\n}","7c1d2fe4":"lgb_oof = np.zeros(train.shape[0])\nlgb_pred = np.zeros(test.shape[0])\nlgb_importances = pd.DataFrame()\n\nskf = StratifiedKFold(n_splits=N_SPLITS, shuffle=True, random_state=SEED)\n\nfor fold, (trn_idx, val_idx) in enumerate(skf.split(X=train, y=train[TARGET])):\n    print(f\"===== fold {fold} =====\")\n    X_train, y_train = train[features].iloc[trn_idx], train[TARGET].iloc[trn_idx]\n    X_valid, y_valid = train[features].iloc[val_idx], train[TARGET].iloc[val_idx]\n    X_test = test[features]\n    \n    start = time.time()\n    model = lgb.LGBMClassifier(**lgb_params)\n    model.fit(\n        X_train, \n        y_train,\n        eval_set=[(X_valid, y_valid)],\n        eval_metric='auc',\n        early_stopping_rounds=EARLY_STOPPING_ROUNDS,\n        verbose=VERBOSE,\n    )\n    \n    fi_tmp = pd.DataFrame()\n    fi_tmp['feature'] = model.feature_name_\n    fi_tmp['importance'] = model.feature_importances_\n    fi_tmp['fold'] = fold\n    fi_tmp['seed'] = SEED\n    lgb_importances = lgb_importances.append(fi_tmp)\n\n    lgb_oof[val_idx] = model.predict_proba(X_valid)[:, -1]\n    lgb_pred += model.predict_proba(X_test)[:, -1] \/ N_SPLITS\n\n    elapsed = time.time() - start\n    auc = roc_auc_score(y_valid, lgb_oof[val_idx])\n    print(f\"fold {fold} - lgb auc: {auc:.6f}, elapsed time: {elapsed:.2f}sec\\n\")\n\nprint(f\"oof lgb roc = {roc_auc_score(train[TARGET], lgb_oof)}\")\n\nnp.save(\"lgb_oof.npy\", lgb_oof)\nnp.save(\"lgb_pred.npy\", lgb_pred)","32567c69":"order = list(lgb_importances.groupby('feature').mean().sort_values('importance', ascending=False).index)\n\nfig = plt.figure(figsize=(16, 32), tight_layout=True)\nsns.barplot(x=\"importance\", y=\"feature\", data=lgb_importances.groupby('feature').mean().reset_index(), order=order)\nplt.title(\"LightGBM feature importances\")","4564a49a":"submission = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv')\n\nsubmission[TARGET] = lgb_pred\nsubmission.to_csv(\"submission.csv\", index=False)\nsubmission","20a1e18b":"**\u9b54\u7406\u6c99\uff1a\u6b21\u306f\u30c6\u30b9\u30c8\u3092\u898b\u3066\u307f\u3088\u3046**","da58d590":"# LightGBM","ae3c74d5":"Kaggle\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u306f\u975e\u5e38\u306b\u697d\u3057\u304f\u3001\u3084\u308a\u304c\u3044\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u65c5\u306b\u6bd4\u8f03\u7684\u6163\u308c\u3066\u3044\u306a\u3044\u4eba\u306b\u3068\u3063\u3066\u3082\u5a01\u5727\u7684\u3067\u3059\u3002\u904e\u53bb\u306b\u3001\u79c1\u305f\u3061\u306f\u3001\u6ce8\u76ee\u306e\u5927\u4f1a\u3088\u308a\u3082\u89aa\u3057\u307f\u3084\u3059\u304f\u3001\u3057\u305f\u304c\u3063\u3066\u521d\u5fc3\u8005\u306b\u3084\u3055\u3057\u3044\u591a\u304f\u306e\u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u5927\u4f1a\u3092\u958b\u59cb\u3057\u307e\u3057\u305f\u3002\n\n\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u3053\u308c\u3089\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u3092\u3088\u308a\u4e00\u8cab\u3057\u3066\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u30012021\u5e74\u306b\u65b0\u3057\u3044\u5b9f\u9a13\u3092\u8a66\u307f\u3066\u3044\u307e\u3059\u3002\u6bce\u67081\u65e5\u306b1\u304b\u6708\u306b\u308f\u305f\u308b\u8868\u5f62\u5f0f\u306e\u904a\u3073\u5834\u30b3\u30f3\u30c6\u30b9\u30c8\u3092\u958b\u59cb\u3057\u3001\u3042\u308b\u9650\u308a\u5b9f\u9a13\u3092\u7d9a\u3051\u307e\u3059\u3002\u5341\u5206\u306a\u95a2\u5fc3\u3068\u53c2\u52a0\u3002\n\n\u3053\u308c\u3089\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u76ee\u6a19\u306f\u3001\u8ab0\u306b\u3068\u3063\u3066\u3082\u697d\u3057\u304f\u89aa\u3057\u307f\u3084\u3059\u3044\u8868\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u306f\u3001Titanic GettingStarted\u30b3\u30f3\u30c6\u30b9\u30c8\u3068Featured\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u9593\u306b\u4f55\u304b\u3092\u63a2\u3057\u3066\u3044\u308b\u4eba\u306b\u6700\u9069\u3067\u3059\u3002\u3042\u306a\u305f\u304c\u78ba\u7acb\u3055\u308c\u305f\u7af6\u6280\u30de\u30b9\u30bf\u30fc\u307e\u305f\u306f\u30b0\u30e9\u30f3\u30c9\u30de\u30b9\u30bf\u30fc\u3067\u3042\u308b\u5834\u5408\u3001\u3053\u308c\u3089\u306f\u304a\u305d\u3089\u304f\u3042\u306a\u305f\u306b\u3068\u3063\u3066\u305d\u308c\u307b\u3069\u96e3\u3057\u3044\u3053\u3068\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u304c\u98fd\u548c\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n\u6bce\u6708\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u3054\u3068\u306b\u3001\u4e0a\u4f4d3\u30c1\u30fc\u30e0\u306bKaggle\u5546\u54c1\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u6700\u5f8c\u306b\u3001\u3053\u308c\u3089\u306e\u5927\u4f1a\u306f\u5b66\u7fd2\u306b\u95a2\u3059\u308b\u3082\u306e\u306b\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u305f\u3081\u3001\u30c1\u30fc\u30e0\u306e\u30b5\u30a4\u30ba\u30923\u4eba\u306b\u5236\u9650\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u5408\u6210\u3067\u3059\u304c\u3001\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u57fa\u3065\u3044\u3066\u304a\u308a\u3001CTGAN\u3092\u4f7f\u7528\u3057\u3066\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u5143\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u3001\u96fb\u5b50\u30e1\u30fc\u30eb\u304b\u3089\u62bd\u51fa\u3055\u308c\u305f\u3055\u307e\u3056\u307e\u306a\u7279\u5fb4\u3092\u4ecb\u3057\u3066\u30b9\u30d1\u30e0\u96fb\u5b50\u30e1\u30fc\u30eb\u3092\u8b58\u5225\u3059\u308b\u3053\u3068\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3092\u6271\u3044\u307e\u3059\u3002\u6a5f\u80fd\u306f\u533f\u540d\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u969b\u306e\u6a5f\u80fd\u306b\u95a2\u9023\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u9811\u5f35\u3063\u3066\u697d\u3057\u3093\u3067\u306d\uff01\u6982\u8981\u3092\u5165\u308c\u308b","655f4ea3":"![](https:\/\/1.bp.blogspot.com\/-PNcKwFw1PpM\/U1T3oDIr9CI\/AAAAAAAAfT4\/gEn86X8Ppx0\/s400\/figure_goodjob.png)","a7ee7144":"<img src=\"https:\/\/3.bp.blogspot.com\/-3q31Kj8zFHc\/V6BP6vEGe1I\/AAAAAAAA83s\/YD0NZlG5wmgMiB_iX9QMDy8KF2IEid6qQCLcB\/s450\/figure_korobu.png\" width=\"100\">","fbd10c49":"train.csv-target\u5217\u306e\u3042\u308b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf","d608e9dc":"**\u9b54\u7406\u6c99\uff1abaseline\u3092\u3057\u3066\u307f\u3088\u3046\u3002lightgbm\u3092\u3064\u304b\u3046\u305e\u3002**\n","cda11828":"**\u9b54\u7406\u6c99\uff1a\u6700\u5f8c\u306bsample_submission\u3092\u898b\u3066\u307f\u3088\u3046**","e947986c":"**\u9b54\u7406\u6c99\uff1a\u4eca\u56de\u306f\u5168\u90e8\u5b9f\u6570\u5024\u307f\u305f\u3044\u3060\u306d\u3002**","d57e4b6c":"**\u970a\u5922\uff1a0\u30821\u3082\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\uff1f  \n\u9b54\u7406\u6c99\uff1a\u3067\u30821\u672c\u306e\u68d2\u306e\u3088\u3046\u306a\u30b0\u30e9\u30d5\u3068\u3001\u5c71\u304c\u4e8c\u3064\u3042\u308b\u3088\u3046\u306a\u30b0\u30e9\u30d5\u306e2\u3064\u306b\u5206\u985e\u3067\u304d\u305d\u3046\u3060\u306d\u3002\u3084\u3063\u3066\u307f\u3088\u3046\u3002  \n\u970a\u5922\uff1b\u3069\u3046\u3084\u3063\u3066\uff1f  \n\u9b54\u7406\u6c99\uff1a\u624b\u3067\u6570\u3048\u308b\u3002**","e71b133f":"**\u970a\u5922\uff1a\u3084\u3063\u3068\u5b66\u7fd2\u3060\u306d\uff01**","f5c4b308":"**\u9b54\u7406\u6c99\uff1a\u68d2\u306e\u3088\u3046\u306b\u898b\u3048\u3066\u3082\u3064\u3076\u308c\u3066\u3044\u308b\u3060\u3051\u304b\u3082\u3057\u308c\u306a\u3044\u304b\u3089\u3001\u62e1\u5927\u3057\u3066\u307f\u3066\u307f\u3088\u3046\u3002**","82a5655c":"<img src=\"http:\/\/3.bp.blogspot.com\/-KmQQLtEkmLw\/U1T3r7D0NdI\/AAAAAAAAfVI\/c2d4n2kG00U\/s400\/figure_question.png\" width=\"100\">","bf4b897a":"test.csv-\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u3002target\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5404\u884c\u306e\u3092\u4e88\u6e2c\u3057\u307e\u3059\uff08\u30d0\u30a4\u30ca\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u78ba\u7387\uff09","ffe94c52":"**\u970a\u5922\uff1a\u306a\u3093\u304b\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u308b\u306d\u3002\u306a\u3093\u3067\u304b\u306a\u3042\uff1f  \n\u9b54\u7406\u6c99\uff1a\u7d50\u5c40\u6700\u5f8c\u307e\u3067\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3088\u3002**","a9552f2f":"**\u9b54\u7406\u6c99\uff1a\u6b21\u306f\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u3088\u3046**","bf2b71cd":"# Datasets","abe0e432":"**\u970a\u5922\uff1a\u672c\u5f53\u306b\u68d2\u3089\u3057\u3044\u306d\u3002**\n","fc17d72d":"[![](https:\/\/img.youtube.com\/vi\/FnV0thLS1Fs\/0.jpg)](https:\/\/www.youtube.com\/watch?v=FnV0thLS1Fs)","2f770652":"**\u970a\u5922\uff1a\u4eca\u65e5\u306f11\u6708\u306eTPS\u3060\u306d\u3002  \n\u9b54\u7406\u6c99\uff1a2\u56de\u76ee\u3060\u306d\u3001\u307e\u305a\u306f\u6982\u8981\u3092\u8aad\u3093\u3067\u307f\u3088\u3046\u3002**","3a36e13b":"pixyz  \nlast update 2021 11 02  \n\u3086\u3063\u304f\u308a\u3057\u3066\u3044\u3063\u3066\u306d\uff01  ","d57891ad":"**\u970a\u5922:\u4eca\u56de\u30820\u304c1\u304b\u3092\u5f53\u3066\u308bAI\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3093\u3060\u306d\u3002**","5826299a":"**\u9b54\u7406\u6c99\uff1a\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068target\u306e\u95a2\u4fc2\u3092\u30b0\u30e9\u30d5\u306b\u3057\u3066\u307f\u3066\u307f\u3088\u3046\u3002**","9bf15b79":"# Parameters","f019384e":"**\u9b54\u7406\u6c99:K-\u5206\u5272\u4ea4\u5dee\u691c\u8a3c\u3092\u3059\u308b\u3088\u3002\u6a19\u6e96\u306f5\u500b\u304b\u306a\u3002\n\u970a\u5922\uff1aepoch\u6570\u306f20000\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3051\u3069\u3001\u30b9\u30b3\u30a2\u304c\u4e0a\u304c\u3089\u306a\u304f\u306a\u3063\u305f\u3089\u65e9\u671f\u306b\u5b66\u7fd2\u3092\u3084\u3081\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3088\u3002**"}}