{"cell_type":{"f49e3f65":"code","9ff81d94":"code","358f2a39":"code","2589be2c":"code","49428735":"code","10eff767":"code","f95ba97d":"code","3c83eac4":"code","bd6177a5":"code","7b1813fd":"code","f3b8b97b":"code","f8a6caec":"code","bb0cc60a":"code","49c34918":"code","27780644":"code","5e742a44":"markdown","b0d62f4b":"markdown","76997a37":"markdown","8ce80506":"markdown","4227156c":"markdown","2ebf839f":"markdown","e0e804f6":"markdown","78f05459":"markdown","5c3b230f":"markdown","bbe2b48b":"markdown","18e16ac0":"markdown","87daa861":"markdown","b9bfd53c":"markdown"},"source":{"f49e3f65":"import pandas as pd\nimport numpy as np\nfrom scipy import fftpack\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import signal","9ff81d94":"%matplotlib inline","358f2a39":"train = pd.read_csv('..\/input\/train.csv', nrows=10000000, dtype={'acoustic_data': np.int16, 'time_to_failure': np.float64})\nprint(\"train shape\", train.shape)\ntrain.head()","2589be2c":"sampling_rate = 4000000","49428735":"def log_specgram(data, sample_rate, nperseg=2000, noverlap=1000, eps=1e-10, dct=False):\n    freqs, times, spec = signal.spectrogram(data,\n                                            fs=sample_rate,\n                                            window='hann',\n                                            nperseg=nperseg,\n                                            noverlap=noverlap,\n                                            detrend=False)\n    spec = np.log(spec).astype(np.float32)\n    if dct:\n        spec = fftpack.dct(spec, type=2, axis=0, norm='ortho')\n    return freqs, times, spec\n\n\ndef plot_specgram(data, sample_rate, final_idx, init_idx=0, step=1, nperseg=2000, \n                  noverlap=1000, dct=False, title='', subsampling=False):\n    idx = [i for i in range(init_idx, final_idx, step)]\n    acoustic_data = data.iloc[idx].acoustic_data.values\n    if subsampling:\n        acoustic_data = acoustic_data[::subsampling]\n    freqs, times, spectrogram = log_specgram(acoustic_data, sample_rate, \n                                             nperseg=nperseg, noverlap=noverlap, dct=dct)\n\n    plt.figure(figsize=(10, 8))\n    plt.imshow(spectrogram, aspect='auto', origin='lower',\n               extent=[times.min(), times.max(), freqs.min(), freqs.max()])\n    plt.title(title)\n    plt.ylabel('Freqs in Hz')\n    plt.xlabel('Seconds')\n    plt.show()","10eff767":"def single_timeseries(final_idx, init_idx=0, step=1, title=\"\",\n                      color1='orange', color2='blue', subsampling=False):\n    idx = [i for i in range(init_idx, final_idx, step)]\n    fig, ax1 = plt.subplots(figsize=(10, 5))\n    fig.suptitle(title, fontsize=14)\n    \n    ax2 = ax1.twinx()\n    ax1.set_xlabel('index')\n    ax1.set_ylabel('Acoustic data')\n    ax2.set_ylabel('Time to failure')\n    acoustic_data = train.iloc[idx].acoustic_data.values\n    time_to_failure = train.iloc[idx].time_to_failure.values\n    if subsampling:\n        acoustic_data = acoustic_data[::subsampling]\n        time_to_failure = time_to_failure[::subsampling]\n\n    p1 = sns.lineplot(data=acoustic_data, ax=ax1, color=color1)\n    p2 = sns.lineplot(data=time_to_failure, ax=ax2, color=color2)\n","f95ba97d":"plot_specgram(train, sampling_rate, 100000, title='Specgram of first hundred thousand rows')","3c83eac4":"single_timeseries(100000, title=\"First hundred thousand rows\")","bd6177a5":"plot_specgram(train, sampling_rate, final_idx=6000000, init_idx=5000000, \n              title='Specgram of earthquake')","7b1813fd":"single_timeseries(final_idx=6000000, init_idx=5000000, title=\"Five to six million index\")","f3b8b97b":"plot_specgram(train, sampling_rate, 10000, title='Specgram of first hundred thousand rows', dct=True)","f8a6caec":"single_timeseries(80000, title=\"First eighty thousand rows\")","bb0cc60a":"plot_specgram(train, sampling_rate, 80000, title='Specgram of first eighty thousand rows')","49c34918":"single_timeseries(80000, title=\"First eighty thousand rows - subsampled\", subsampling=4)\n","27780644":"plot_specgram(train, sample_rate=1000000, final_idx=80000, nperseg=500, noverlap=250, \n              title='Subsampled specgram of first eighty thousand rows', subsampling=4)","5e742a44":"I hope my presentation shows you some interesting ideas. Don't forget to upvote if you like it.","b0d62f4b":"The pitch perception of the ear is proportional to the logarithm of frequency rather than to frequency itself. We can't hear most of the frequencies that exist here (0 - 2000000 vs 0-20000 Hz), but watching the frequencies in logarithmic scale is much nicer.\n\nSo I define _log_specgram_ funcion to calcuate the logarithm of STFT, and a funciton to visualize it.","76997a37":"Earthquake data:","8ce80506":"## Frequency representation of the data","4227156c":"Skipping every 3 samples, we can carry the same frequency information, having the data size 4 times smaller!","2ebf839f":"## Intro\nThe acoustic data can be analyzed in frequency space. It gives a pretty different feeling and the information that exists in the data.\n\nI wanted to show you 4 things:\n1. Frequency representation of the data\n2. Some nice compresion\n3. Different \"compresion\" - frequency bins\n4. Data size can be reduced easily with no lost in the frequeny information\n\nLet's take a look at what we've got here.","e0e804f6":"## Data size reduction - subsampling","78f05459":"## DCT - Discrete Cosinous Transform\n\nOne of the steps in the popular algorithm in acoustic signal analysis, MFCC (Mel-Frequency-Cepstral-Coefficients), is Discrete Cosine Transform. According to [wikipedia](https:\/\/en.wikipedia.org\/wiki\/Discrete_cosine_transform), it can decorrelate some signals very well. It happens fast and online. You can think about like doing some PCA on data.","5c3b230f":"I also borrowed a function from the kernel I really liked:\nhttps:\/\/www.kaggle.com\/jsaguiar\/seismic-data-exploration","bbe2b48b":"You can see that there's a lot of 'blank' space in the spectrogram. It looks like most of the high frequencies are just noise. We can subsample the data by, let's say 4, to leave only the meaningful part of the signal. Without going into details, we just need to take every 4th sample and change the sampling rate to 1M.\n I'm gonna plot some part of the data, but subsampled. You can compare it to the original format.\n","18e16ac0":"I set the important parameter here, that will be crucial in proper calculations","87daa861":"Let's plot some data:","b9bfd53c":"It's up to you how and if to use it. It works very well in speech recognition. You can plot fewer components to choose the threshold for the number of it."}}