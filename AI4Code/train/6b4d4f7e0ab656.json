{"cell_type":{"68d1046d":"code","52a0797d":"code","deb4778f":"code","eef5849b":"code","4d9861a2":"code","294559b6":"code","cd85fd9e":"code","5fd6e437":"code","2ef1fd94":"code","699fee9e":"code","53e9ac66":"code","a1c2dd92":"code","f39ffcde":"code","9dc452fd":"code","ee4b12a9":"code","3bee0d34":"code","bd01661b":"code","27107671":"code","51ae7260":"code","cc0f34a6":"code","ecb4f0c3":"code","f9cde012":"code","75fbb27d":"code","4b2cc98f":"code","8e07377f":"code","477cdf63":"code","4a5b8f94":"code","caeae0a7":"code","1a24302a":"code","d1f7cc72":"code","aee23d7a":"code","5f2ac7f0":"code","911dec03":"code","96c15bdc":"code","a2ba7899":"code","c72be2aa":"code","0c2ea280":"code","df907327":"code","7f981b51":"code","f1530e9d":"code","4b53a81d":"code","73d1dd95":"code","8121917b":"code","d9879117":"code","e0e87719":"code","c566cb8b":"code","80039c88":"code","d834e557":"code","e3cc019c":"code","52290975":"code","244e72a5":"code","02d66ed1":"code","bce04ae5":"code","5373753b":"code","1595b585":"code","cefc4894":"code","55c0a6c6":"code","cea9a215":"code","fa242526":"code","089a2529":"code","139b69ac":"code","95ffe6e5":"code","2f000685":"code","c8d54caf":"code","06bc5bad":"code","c63a6c1b":"code","831956eb":"code","b66bf7e9":"code","3637bfa1":"code","880f186d":"code","70b9bd50":"code","acdd60d2":"code","b30bed5d":"code","bb419ac1":"code","9bcd43ca":"code","b1d37222":"code","464a90a6":"code","f0044b4f":"code","23689f5c":"code","412baac4":"code","e803400e":"code","8d123a4a":"code","9e53bbcd":"code","ab5315c2":"code","5c62beac":"code","fdd43f33":"code","398ab878":"code","047c08c6":"code","138d9710":"code","fd654ec4":"code","6feaaf88":"code","ba0d7a53":"code","39a6810e":"code","7c91ed35":"code","08ead280":"code","e73e5aab":"code","00970872":"code","071bfa4d":"code","70de74af":"code","bfb761e2":"code","62f87e47":"code","bfeb08de":"code","0c61bd33":"code","341994c4":"code","99d4f6e1":"code","5ca5a222":"code","35c9d2fa":"code","de28fef2":"code","cfee326e":"code","daef3849":"code","357d30ac":"code","6d3e7f3b":"code","54f93d4d":"code","72949e59":"code","24ac5bb1":"code","2bdcabb0":"code","e967ac18":"code","85c69719":"code","82df09e9":"code","96fb9585":"code","04779ab1":"code","e6b5355d":"code","b00484c2":"code","dbaa8134":"code","32695185":"code","6e84cbbd":"code","14c7e81c":"code","effd2174":"code","6bdf1fb1":"code","1ddfc0eb":"code","eee9430b":"code","3f21d488":"code","4861bfa6":"code","8b270119":"code","e8609e78":"code","11bc7b65":"code","b383cba6":"code","93d0f12e":"code","54a1a873":"code","ba347152":"code","4a363c29":"code","912860bb":"code","658539a6":"code","23d79f7e":"code","ed2b7f5f":"code","f3eb6986":"code","8a1f0f1c":"code","382276a4":"code","4223f418":"markdown","37ec273c":"markdown","e0e5f29f":"markdown","e813447b":"markdown","a4dc6550":"markdown","a6f601a2":"markdown","1a988863":"markdown","d600b01a":"markdown","65180b35":"markdown","95c4e781":"markdown","661627c0":"markdown","311601ec":"markdown","78ddb086":"markdown","44b2d158":"markdown","807d7f53":"markdown","ea08aae1":"markdown","0d7220d0":"markdown","7a4b8a7d":"markdown","1f3e5d52":"markdown","af605a38":"markdown","e57e7e24":"markdown","bcb1b0fd":"markdown","78557e5b":"markdown","7d6a3d9c":"markdown","1fb3519c":"markdown","403cd459":"markdown","b817f528":"markdown","5c85b2fc":"markdown","297e74e6":"markdown","5d4b9323":"markdown","790ed7d7":"markdown","83e3dfa0":"markdown","e091cf7f":"markdown","45037bce":"markdown","1ccf7653":"markdown","22d5b88d":"markdown","31a5d14f":"markdown","d097264e":"markdown","a60bde8a":"markdown","effd073f":"markdown","2de26777":"markdown","ea29367d":"markdown","cd219f6f":"markdown","a239bdea":"markdown","222fd174":"markdown","9d66dea7":"markdown","edbadfdd":"markdown","b01c7738":"markdown","2670e08c":"markdown","05296e6c":"markdown","da5ed7fd":"markdown","ccabf8e7":"markdown","d403a434":"markdown","5b620de5":"markdown","321ac4cb":"markdown","73b7ea48":"markdown","97fc7c7b":"markdown","89130a06":"markdown","735d2b94":"markdown","2dc329a6":"markdown","ce93c1ec":"markdown","f028f762":"markdown","414b0ab0":"markdown","d2789b48":"markdown","e6fd41dc":"markdown","f92d57c8":"markdown","4e20e0e3":"markdown","d916ad44":"markdown","b057cd79":"markdown","b2f96124":"markdown","9fa9ae2b":"markdown","26e0bd5c":"markdown","0cbedd7f":"markdown","3eb2427e":"markdown"},"source":{"68d1046d":"import numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import scale, StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, mean_squared_error, r2_score, roc_auc_score, roc_curve, classification_report\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","52a0797d":"df = pd.read_csv('\/kaggle\/input\/diabetes.csv')","deb4778f":"df.head()","eef5849b":"df['Outcome'].value_counts()","4d9861a2":"df.describe().T","294559b6":"y = df['Outcome'] \nX = df.drop(['Outcome'], axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30, random_state=42)","cd85fd9e":"from sklearn.linear_model import LogisticRegression","5fd6e437":"log_model = LogisticRegression(solver='liblinear').fit(X_train,y_train)","2ef1fd94":"# Sabit de\u011feri verir. (bias)\nlog_model.intercept_","699fee9e":"# A\u011f\u0131rl\u0131k de\u011ferlerini verir. (weights)\nlog_model.coef_","53e9ac66":"y_pred = log_model.predict(X_test)","a1c2dd92":"accuracy_score(y_test, y_pred)","f39ffcde":"cross_val_score(log_model, X_test, y_test, cv=21).mean()","9dc452fd":"print(classification_report(y_test, y_pred))","ee4b12a9":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","3bee0d34":"logit_roc_auc = roc_auc_score(y_test, log_model.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, log_model.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % logit_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","bd01661b":"from sklearn.neighbors import KNeighborsClassifier","27107671":"knn = KNeighborsClassifier()","51ae7260":"knn_params = {\"n_neighbors\": np.arange(1,50)}","cc0f34a6":"knn_cv_model = GridSearchCV(knn, knn_params, cv=10).fit(X_train, y_train)","ecb4f0c3":"knn_cv_model.best_params_","f9cde012":"knn_cv_model.best_score_","75fbb27d":"knn = KNeighborsClassifier(n_neighbors=11).fit(X_train, y_train)","4b2cc98f":"y_pred = knn.predict(X_test)","8e07377f":"accuracy_score(y_test, y_pred)","477cdf63":"cross_val_score(knn, X_test, y_test, cv=21).mean()","4a5b8f94":"print(classification_report(y_test, y_pred))","caeae0a7":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","1a24302a":"knn_roc_auc = roc_auc_score(y_test, knn.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, knn.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % knn_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","d1f7cc72":"from sklearn.svm import SVC","aee23d7a":"svm = SVC()","5f2ac7f0":"svm_params = {\"C\": np.arange(1,10), \"kernel\":[\"linear\", \"rbf\"]}","911dec03":"svm_cv_model = GridSearchCV(svm, svm_params, cv=5, n_jobs=-1, verbose=2).fit(X_train, y_train)","96c15bdc":"svm_cv_model.best_score_","a2ba7899":"svm_cv_model.best_params_","c72be2aa":"svm = SVC(C = 2, kernel='linear', probability=True).fit(X_train, y_train)","0c2ea280":"y_pred = svm.predict(X_test)","df907327":"accuracy_score(y_test, y_pred)","7f981b51":"cross_val_score(svm, X_test, y_test, cv=21).mean()","f1530e9d":"print(classification_report(y_test, y_pred))","4b53a81d":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","73d1dd95":"svm_roc_auc = roc_auc_score(y_test, svm.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, svm.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % svm_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","8121917b":"from sklearn.neural_network import MLPClassifier","d9879117":"scaler = StandardScaler()","e0e87719":"scaler.fit(X_train)\nX_train_scaler = scaler.transform(X_train)\n\nscaler.fit(X_test)\nX_test_scaler = scaler.transform(X_test)","c566cb8b":"mlpc = MLPClassifier()","80039c88":"mlpc_params = {'alpha':[1, 5, 0.1, 0.01, 0.03, 0.005, 0.0001 ],\n              'hidden_layer_sizes': [(10,10), (100,100,100), (100,100), (3,5)]}","d834e557":"mlpc = MLPClassifier(solver='lbfgs', activation='logistic')","e3cc019c":"mlpc_cv_model = GridSearchCV(mlpc, mlpc_params, cv=10, n_jobs=-1, verbose=2).fit(X_train_scaler, y_train)","52290975":"mlpc_cv_model","244e72a5":"mlpc_cv_model.best_params_","02d66ed1":"mlpc = MLPClassifier(solver = 'lbfgs', alpha=1 , hidden_layer_sizes=(3,5), activation='logistic').fit(X_train_scaler, y_train)","bce04ae5":"y_pred = mlpc.predict(X_test_scaler)","5373753b":"accuracy_score(y_test, y_pred)","1595b585":"cross_val_score(mlpc, X_test_scaler, y_test, cv=21).mean()","cefc4894":"print(classification_report(y_test, y_pred))","55c0a6c6":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","cea9a215":"mlpc_roc_auc = roc_auc_score(y_test, mlpc.predict(X_test_scaler))\nfpr , tpr, thresholds = roc_curve(y_test, mlpc.predict_proba(X_test_scaler)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % mlpc_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","fa242526":"from sklearn.tree import DecisionTreeClassifier","089a2529":"cart = DecisionTreeClassifier()","139b69ac":"cart_params = {'max_depth': [1,3,5,8,10],\n              'min_samples_split': [2,3,5,10,20,50]}","95ffe6e5":"cart_cv_model = GridSearchCV(cart, cart_params, cv=10, n_jobs=-1, verbose=2).fit(X_train, y_train)","2f000685":"cart_cv_model","c8d54caf":"cart_cv_model.best_params_","06bc5bad":"cart = DecisionTreeClassifier(max_depth=5, min_samples_split=20).fit(X_train, y_train)","c63a6c1b":"y_pred = cart.predict(X_test)","831956eb":"accuracy_score(y_test, y_pred)","b66bf7e9":"cross_val_score(cart, X_test, y_test, cv=21).mean()","3637bfa1":"print(classification_report(y_test, y_pred))","880f186d":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","70b9bd50":"cart_roc_auc = roc_auc_score(y_test, cart.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, cart.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % cart_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","acdd60d2":"from sklearn.ensemble import RandomForestClassifier","b30bed5d":"rf = RandomForestClassifier()","bb419ac1":"rf_params = {'n_estimators': [100,200,500,1000],\n            'max_features': [3,5,7,8],\n            'min_samples_split':[2,5,10,20]}","9bcd43ca":"rf_cv_model = GridSearchCV(rf, rf_params, cv=10, n_jobs=-1, verbose=2).fit(X_train, y_train)","b1d37222":"rf_cv_model","464a90a6":"rf_cv_model.best_params_","f0044b4f":"rf = RandomForestClassifier(max_features=5, min_samples_split=10, n_estimators=200).fit(X_train, y_train)","23689f5c":"y_pred = rf.predict(X_test)","412baac4":"accuracy_score(y_test, y_pred)","e803400e":"rf.feature_importances_","8d123a4a":"feature_imp = pd.Series(rf.feature_importances_,\n                       index=X_train.columns).sort_values(ascending=False)\n\nsns.barplot(x=feature_imp, y=feature_imp.index)\nplt.xlabel('De\u011fisken \u00d6nem Skorlar\u0131')\nplt.ylabel('De\u011fi\u015fkenler')\nplt.title('De\u011fi\u015fken \u00d6nem D\u00fczeyleri')\nplt.show()","9e53bbcd":"cross_val_score(rf, X_test, y_test, cv=21).mean()","ab5315c2":"print(classification_report(y_test, y_pred))","5c62beac":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","fdd43f33":"rf_roc_auc = roc_auc_score(y_test, rf.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, rf.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % rf_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","398ab878":"from sklearn.ensemble import GradientBoostingClassifier","047c08c6":"gbm = GradientBoostingClassifier()","138d9710":"gbm_params = {'learning_rate': [0.1, 0.01, 0.001, 0.05],\n            'n_estimators': [100,200,500,1000],\n            'max_depth':[2,3,5,8]}","fd654ec4":"gbm_cv_model = GridSearchCV(gbm, gbm_params, cv=10, n_jobs=-1, verbose=2).fit(X_train, y_train)","6feaaf88":"gbm_cv_model","ba0d7a53":"gbm_cv_model.best_params_","39a6810e":"gbm = GradientBoostingClassifier(learning_rate=0.01, max_depth=3, n_estimators=500).fit(X_train, y_train)","7c91ed35":"y_pred = gbm.predict(X_test)","08ead280":"accuracy_score(y_test, y_pred)","e73e5aab":"gbm.feature_importances_","00970872":"feature_imp = pd.Series(gbm.feature_importances_,\n                       index=X_train.columns).sort_values(ascending=False)\n\nsns.barplot(x=feature_imp, y=feature_imp.index)\nplt.xlabel('De\u011fisken \u00d6nem Skorlar\u0131')\nplt.ylabel('De\u011fi\u015fkenler')\nplt.title('De\u011fi\u015fken \u00d6nem D\u00fczeyleri')\nplt.show()","071bfa4d":"cross_val_score(gbm, X_test, y_test, cv=21).mean()","70de74af":"print(classification_report(y_test, y_pred))","bfb761e2":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","62f87e47":"gbm_roc_auc = roc_auc_score(y_test, gbm.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, gbm.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % gbm_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","bfeb08de":"from xgboost import XGBClassifier","0c61bd33":"xgboost = XGBClassifier()","341994c4":"xgboost_params = {'learning_rate': [0.1, 0.01, 0.001],\n            'subsample':[0.6, 0.8, 1],\n            'n_estimators': [100,500,1000,2000],\n            'max_depth':[3,5,7]}","99d4f6e1":"xgboost_cv_model = GridSearchCV(xgboost, xgboost_params, cv=10, n_jobs=-1, verbose=2).fit(X_train, y_train)","5ca5a222":"xgboost_cv_model","35c9d2fa":"xgboost_cv_model.best_params_","de28fef2":"xgboost = XGBClassifier(learning_rate=0.001, max_depth=5, n_estimators=2000, subsample=1).fit(X_train, y_train)","cfee326e":"y_pred = xgboost.predict(X_test)","daef3849":"accuracy_score(y_test, y_pred)","357d30ac":"xgboost.feature_importances_","6d3e7f3b":"feature_imp = pd.Series(xgboost.feature_importances_,\n                       index=X_train.columns).sort_values(ascending=False)\n\nsns.barplot(x=feature_imp, y=feature_imp.index)\nplt.xlabel('De\u011fisken \u00d6nem Skorlar\u0131')\nplt.ylabel('De\u011fi\u015fkenler')\nplt.title('De\u011fi\u015fken \u00d6nem D\u00fczeyleri')\nplt.show()","54f93d4d":"cross_val_score(xgboost, X_test, y_test, cv=21).mean()","72949e59":"print(classification_report(y_test, y_pred))","24ac5bb1":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","2bdcabb0":"xgboost_roc_auc = roc_auc_score(y_test, xgboost.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, xgboost.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % xgboost_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","e967ac18":"from lightgbm import LGBMClassifier","85c69719":"lightgbm = LGBMClassifier()","82df09e9":"lightgbm_params = {'learning_rate': [0.1, 0.01, 0.001],\n            'n_estimators': [200,500,100],\n            'max_depth':[1,2,35,8]}","96fb9585":"lightgbm_cv_model = GridSearchCV(lightgbm, lightgbm_params, cv=10, n_jobs=-1, verbose=2).fit(X_train, y_train)","04779ab1":"lightgbm_cv_model","e6b5355d":"lightgbm_cv_model.best_params_","b00484c2":"lightgbm = LGBMClassifier(learning_rate=0.01, max_depth=1, n_estimators=500).fit(X_train, y_train)","dbaa8134":"y_pred = lightgbm.predict(X_test)","32695185":"accuracy_score(y_test, y_pred)","6e84cbbd":"lightgbm.feature_importances_","14c7e81c":"feature_imp = pd.Series(lightgbm.feature_importances_,\n                       index=X_train.columns).sort_values(ascending=False)\n\nsns.barplot(x=feature_imp, y=feature_imp.index)\nplt.xlabel('De\u011fisken \u00d6nem Skorlar\u0131')\nplt.ylabel('De\u011fi\u015fkenler')\nplt.title('De\u011fi\u015fken \u00d6nem D\u00fczeyleri')\nplt.show()","effd2174":"cross_val_score(lightgbm, X_test, y_test, cv=21).mean()","6bdf1fb1":"print(classification_report(y_test, y_pred))","1ddfc0eb":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","eee9430b":"lightgbm_roc_auc = roc_auc_score(y_test, lightgbm.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, lightgbm.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % lightgbm_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","3f21d488":"from catboost import CatBoostClassifier","4861bfa6":"catboost = CatBoostClassifier()","8b270119":"catboost_params = {'learning_rate': [0.1, 0.01, 0.003],\n            'iterations': [200,500,1000],\n            'depth':[4,5,8]}","e8609e78":"catboost_cv_model = GridSearchCV(catboost, catboost_params, cv=10, n_jobs=-1, verbose=2).fit(X_train, y_train, verbose=False)","11bc7b65":"catboost_cv_model","b383cba6":"catboost_cv_model.best_params_","93d0f12e":"catboost = CatBoostClassifier(iterations=1000, learning_rate=0.003, depth=8).fit(X_train, y_train, verbose=False)","54a1a873":"y_pred = catboost.predict(X_test)","ba347152":"accuracy_score(y_test, y_pred)","4a363c29":"catboost.feature_importances_","912860bb":"feature_imp = pd.Series(catboost.feature_importances_,\n                       index=X_train.columns).sort_values(ascending=False)\n\nsns.barplot(x=feature_imp, y=feature_imp.index)\nplt.xlabel('De\u011fisken \u00d6nem Skorlar\u0131')\nplt.ylabel('De\u011fi\u015fkenler')\nplt.title('De\u011fi\u015fken \u00d6nem D\u00fczeyleri')\nplt.show()","658539a6":"print(classification_report(y_test, y_pred))","23d79f7e":"cm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cbar=False)\nplt.show()","ed2b7f5f":"catboost_roc_auc = roc_auc_score(y_test, catboost.predict(X_test))\nfpr , tpr, thresholds = roc_curve(y_test, catboost.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % catboost_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.legend(loc='lower right')\nplt.show()","f3eb6986":"models = [log_model, knn, svm, mlpc, cart, rf, gbm, xgboost, lightgbm, catboost]\nresult = []\nresults = pd.DataFrame(columns=['Models', \"Accuracy\"])\n\nfor model in models:\n    names = model.__class__.__name__\n    print(names)\n    if names == 'MLPClassifier':\n        y_pred = model.predict(X_test_scaler)\n    else:\n        y_pred = model.predict(X_test)\n    acc = accuracy_score(y_test, y_pred)\n    result = pd.DataFrame([[names, acc*100]], columns=['Models', 'Accuracy'])\n    results = results.append(result)","8a1f0f1c":"sns.barplot(x='Accuracy', y='Models', data=results, color='r')\nplt.xlabel('Accuracy %')\nplt.title('Modellerin Do\u011fruluk Oranlar\u0131');","382276a4":"results","4223f418":"## Lojistik Regresyon(Logistic Regression)","37ec273c":"## CART (Classification and Regression Tree)","e0e5f29f":"Makine \u00f6\u011frenmesi nedir? \n\nGirdi verilerinden tahmini bir model olu\u015fturan (e\u011fiten) bir program veya sistem. Sistem \u00f6\u011frenilen modeli, modeli e\u011fitmek i\u00e7in kullan\u0131lanla ayn\u0131 da\u011f\u0131t\u0131mdan al\u0131nan yeni (daha \u00f6nce hi\u00e7 g\u00f6r\u00fclmemi\u015f) verilerden yararl\u0131 tahminler yapmak i\u00e7in kullan\u0131r. Makine \u00f6\u011frenimi ayr\u0131ca bu programlar veya sistemlerle ilgili \u00e7al\u0131\u015fma alan\u0131n\u0131 da ifade eder. \n\nMakine \u00f6\u011frenmesini \u00f6\u011frenme t\u00fcr\u00fcne g\u00f6re \u00fc\u00e7e ay\u0131rabiliriz. \n\n* G\u00f6zetimli \u00d6\u011frenme (Supervised Mahine Learning)\n\nBir modelin giri\u015f verilerinden ve ilgili etiketlerinden e\u011fitimi. Denetimli makine \u00f6\u011frenimi, bir dizi soruyu ve kar\u015f\u0131l\u0131k gelen cevaplar\u0131n\u0131 inceleyerek bir konuyu \u00f6\u011frenen bir \u00f6\u011frenciye benzer. Sorular ve cevaplar aras\u0131ndaki haritalamada ustala\u015ft\u0131ktan sonra, \u00f6\u011frenci ayn\u0131 konuda yeni (daha \u00f6nce hi\u00e7 g\u00f6r\u00fclmemi\u015f) sorulara cevap verebilir. Denetimsiz makine \u00f6\u011frenimi ile kar\u015f\u0131la\u015ft\u0131r\u0131n.\n* G\u00f6zetimsiz \u00d6\u011frenme (Unsupervised Machine Learning)\n\nBir veri k\u00fcmesinde, genellikle etiketlenmemi\u015f bir veri k\u00fcmesinde desen bulmak i\u00e7in bir modelin e\u011fitilmesi.\n* Peki\u015ftirmeli \u00d6\u011frenme (Reinforcement Learning)\n\nAmac\u0131, bir \u00e7evre ile etkile\u015fime girerken getiriyi en \u00fcst d\u00fczeye \u00e7\u0131karmak olan optimal bir politika \u00f6\u011frenen algoritmalar ailesi. \n\n\n\n\n\nBu yaz\u0131da g\u00f6zetimli \u00f6\u011frenme t\u00fcrlerinden olan s\u0131n\u0131fland\u0131rma modellerini inceleyece\u011fiz.","e813447b":"![logreggrafik.png](attachment:logreggrafik.png)","a4dc6550":"Do\u011frusal bir modelin ham tahminini (y \u2032) 0 ile 1 aras\u0131nda bir de\u011fere d\u00f6n\u00fc\u015ft\u00fcrmek i\u00e7in sigmoid i\u015flevini kullanan bir s\u0131n\u0131fland\u0131rma modelidir.\n\n0 ile 1 aras\u0131ndaki de\u011feri a\u015fa\u011f\u0131daki iki yoldan biriyle yorumlayabilirsiniz: \n   - Olas\u0131 bir \u00f6rnek olarak, ikili s\u0131n\u0131flama probleminde pozitif s\u0131n\u0131fa aittir. \n   - Bir s\u0131n\u0131fland\u0131rma e\u015fi\u011fine g\u00f6re kar\u015f\u0131la\u015ft\u0131r\u0131lacak bir de\u011fer olarak. De\u011fer, s\u0131n\u0131fland\u0131rma e\u015fi\u011fine e\u015fit veya bu de\u011ferin \u00fczerindeyse, sistem \u00f6rne\u011fi pozitif s\u0131n\u0131f olarak s\u0131n\u0131fland\u0131r\u0131r. Tersine, de\u011fer verilen e\u015fi\u011fin alt\u0131ndaysa, sistem \u00f6rne\u011fi negatif s\u0131n\u0131f olarak s\u0131n\u0131fland\u0131r\u0131r. \n\nLojistik regresyon s\u0131kl\u0131kla ikili s\u0131n\u0131fland\u0131rma problemlerinde kullan\u0131lmas\u0131na ra\u011fmen, lojistik regresyon \u00e7ok s\u0131n\u0131fl\u0131 s\u0131n\u0131fland\u0131rma problemlerinde de kullan\u0131labilir (burada \u00e7ok s\u0131n\u0131fl\u0131 lojistik regresyon veya \u00e7ok terimli regresyon olarak adland\u0131r\u0131l\u0131r).\n\n* Ba\u011f\u0131ml\u0131 de\u011fi\u015fken(y) kategoriktir.\n* Ad\u0131n\u0131 ba\u011f\u0131ml\u0131 de\u011fi\u015fkene uygulanan logit d\u00f6n\u00fc\u015f\u00fcmden al\u0131r.\n* Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenin 1 olarak tan\u0131mlanan de\u011ferinin ger\u00e7ekle\u015fme olas\u0131l\u0131\u011f\u0131 hesaplan\u0131r. Dolay\u0131s\u0131yla ba\u011f\u0131ml\u0131 de\u011fi\u015fkenin alaca\u011f\u0131 de\u011fer ile ilgilenilmez. \n* Lojistik fonksiyon 0-1 aras\u0131nda de\u011ferler \u00fcretir.","a6f601a2":"## Gradient Boosting Machine(GBM)","1a988863":"![ysa.png](attachment:ysa.png)","d600b01a":"Lojistik i\u015flevi, herhangi bir ger\u00e7ek giri\u015fi alan sigmoid bir i\u015flevdir.\nStandart lojistik fonksiyon a\u015fa\u011f\u0131daki gibi tan\u0131mlan\u0131r:\n\n","65180b35":"G\u00f6zetimli \u00f6\u011frenme t\u00fcrlerinden olan s\u0131n\u0131fland\u0131rma, veri setinde bulunan ba\u011f\u0131ml\u0131 de\u011fi\u015fkenin s\u0131n\u0131flardan(kategorik de\u011fi\u015fkenlerden) olu\u015ftu\u011fu durumlarda kullan\u0131lan modelleme t\u00fcr\u00fcd\u00fcr.(\u00d6rne\u011fin; kad\u0131n\/erkek, \u00f6deyebilir\/\u00f6deyemez...)","95c4e781":"## Kaynaklar\n\n* https:\/\/developers.google.com\/machine-learning\/crash-course\n* https:\/\/tr.wikipedia.org\/wiki\/Destek_vekt%C3%B6r_makinesi\n* https:\/\/www.udemy.com\/course\/python-ile-makine-ogrenmesi\/\n* https:\/\/www.veribilimiokulu.com\/bootstrap\/\n* https:\/\/en.wikipedia.org\/wiki\/Gradient_boosting\n* http:\/\/bilgisayarkavramlari.sadievrenseker.com\/2008\/12\/01\/svm-support-vector-machine-destekci-vektor-makinesi\/","661627c0":"Ama\u00e7 iki s\u0131n\u0131f aras\u0131ndaki ayr\u0131m\u0131n optimum olmas\u0131n\u0131 sa\u011flayacak hiper-d\u00fczlemi bulmakt\u0131r.\n\nxi ile temsil edilen her girdi, D \u00f6zelli\u011fine sahip olsun ve sadece yi = -1 ya da +1 s\u0131n\u0131flar\u0131ndan birine ait olsun, bu durumda t\u00fcm girdileri \u015f\u00f6yle g\u00f6sterebiliriz:","311601ec":"## K-En Yak\u0131n Kom\u015fu(K-Nearest Neighbors)","78ddb086":"\u0130nceleyece\u011fimiz Algoritmalar\n\n* Logistik Regresyon(Logistic Regression)\n* K-En Yak\u0131n Kom\u015fu(K-Nearest Neighbors)\n* Destek Vekt\u00f6r Makineleri(Support Vector Machines)\n* Yapay Sinir A\u011flar\u0131(Artificial Nerual Network)\n* CART (Classification and Regression Tree)\n* Rastgele Ormanlar(Random Forests)\n* Gradient Booting Machine(GBM)\n     - XGBoost\n     - Light GBM\n     - CatBoost\n","44b2d158":"* Model ve Tahmin","807d7f53":"Gradient boosting: Regresyon ve s\u0131n\u0131fland\u0131rma problemleri i\u00e7in, genellikle karar a\u011fa\u00e7lar\u0131 olan zay\u0131f tahmin modelleri toplulu\u011fu \u015feklinde bir tahmin modeli \u00fcreten bir makine \u00f6\u011frenme tekni\u011fidir. Modeli, di\u011fer artt\u0131r\u0131c\u0131 y\u00f6ntemlerin yapt\u0131\u011f\u0131 gibi a\u015famal\u0131 bir \u015fekilde in\u015fa eder ve keyfi farkl\u0131la\u015fabilir bir kay\u0131p fonksiyonunun optimizasyonuna izin vererek onlar\u0131 genelle\u015ftirir.\n\n* Gradint boosting tek bir tahminsel model formunda olan modeller serisi olu\u015fturur.\n* Seri i\u00e7erisindeki bir model serideki bir \u00f6nceki modelin tahmin art\u0131klar\u0131n\u0131n\/hatalar\u0131n\u0131n \u00fczerine kurularak(fit) olu\u015fturulur.\n* GBM diferansiyellenebilen herhangi bir kay\u0131p fonksiyonunu optimize edebilen Gradient Descent algoritmas\u0131n\u0131 kullan\u0131r.\n* GBM bir \u00e7ok temel \u00f6\u011frenici tipi(base learner type) kullanabilir.(Trees, linear terms, splines,...)\n* Cost fonksiyonlar\u0131 ve link fonksiyonlar\u0131n\u0131 modifiye edebilir.\n* GBM = Boosting + Gradient Descent","ea08aae1":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","0d7220d0":"* Veri setini Train\/Test Olarak Ay\u0131rma","7a4b8a7d":"Aktivasyon Fonksiyonu: Bir \u00f6nceki katmandaki t\u00fcm girdilerin a\u011f\u0131rl\u0131kl\u0131 toplam\u0131n\u0131 alan ve daha sonra bir \u00e7\u0131k\u0131\u015f de\u011feri (tipik olarak do\u011frusal olmayan) \u00fcreten ve bir sonraki katmana ge\u00e7iren bir i\u015flev (\u00f6rne\u011fin, ReLU veya sigmoid).","1f3e5d52":"* Model de\u011ferlendirmesi","af605a38":"* Model de\u011ferlendirmesi","e57e7e24":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","bcb1b0fd":"* Model de\u011ferlendirmesi","78557e5b":"* Model de\u011ferlendirmesi","7d6a3d9c":"### eXtreme Gradient Boosting (XGBoost)","1fb3519c":"## T\u00fcm Modellerin Kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131","403cd459":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","b817f528":"## Random Forests","5c85b2fc":"* Model de\u011ferlendirmesi","297e74e6":"![svm.png](attachment:svm.png)","5d4b9323":"Ama\u00e7 veri setleri i\u00e7erisindeki karma\u015f\u0131k yap\u0131lar\u0131 basit karar yap\u0131lar\u0131na d\u00f6n\u00fc\u015fmekt\u00fcrmektir. Heterojen veri setleri belirlenmi\u015f bir hedef de\u011fi\u015fkene g\u00f6re homojen alt gruplara ayr\u0131l\u0131r.","790ed7d7":"### LightGBM","83e3dfa0":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","e091cf7f":"* Model de\u011ferlendirmesi","45037bce":"![logreg.png](attachment:logreg.png)","1ccf7653":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","22d5b88d":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","31a5d14f":"!pip install xgboost","d097264e":"XGBoost, GBM'in h\u0131z ve tahmin performans\u0131n\u0131 artt\u0131rmak \u00fczere optimize edilmi\u015f; \u00f6l\u00e7eklenebilir ve farkl\u0131 platformlara entegre edilebilir halidir. 2014 y\u0131l\u0131nda Tianqi Chen taraf\u0131ndan geli\u015ftirilmi\u015ftir.\n\n* R, Python, Hodoop, Scala, Julia ile kullan\u0131labilir.\n* \u00d6l\u00e7eklenebilir ve h\u0131zl\u0131d\u0131r.\n* Tahmin ba\u015far\u0131s\u0131 y\u00fcksektir.\n\n\nxgboost'u kullanabilmek i\u00e7in xgboost k\u00fct\u00fchanesini y\u00fckl\u00fcyoruz.","a60bde8a":"!pip install catboost","effd073f":"Yapay sinir a\u011flar\u0131 bir\u00e7ok yapay sinir h\u00fccresinden olu\u015fur.","2de26777":"Yapay sinir a\u011flar\u0131n\u0131n daha do\u011fru sonu\u00e7 vermesi i\u00e7in veri setini \u00f6l\u00e7ekleme i\u015fleminden ge\u00e7iriyoruz.","ea29367d":"* Model de\u011ferlendirmesi","cd219f6f":"* Model de\u011ferlendirmesi","a239bdea":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","222fd174":"* Model ve Tahmin","9d66dea7":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","edbadfdd":"* Model de\u011ferlendirmesi","b01c7738":"* Model ve Tahmin","2670e08c":"## Veri Seti ve Problem: \u015eeker Hastal\u0131\u011f\u0131 Tahmini\nUygulama k\u0131sm\u0131nda kullanaca\u011f\u0131m\u0131z veri setinin y\u00fcklenmesi.","05296e6c":"### Lojistik Fonksiyon","da5ed7fd":"* Model ve Tahmin","ccabf8e7":"* Model ve Tahmin","d403a434":"Z ayr\u0131ca log-odds olarak da adland\u0131r\u0131l\u0131r, \u00e7\u00fcnk\u00fc sigmoid'in tersi, z'nin \"1\" etiketinin olas\u0131l\u0131\u011f\u0131n\u0131n g\u00fcnl\u00fc\u011f\u00fc olarak \"0\" etiketinin olas\u0131l\u0131\u011f\u0131na b\u00f6l\u00fcnmesiyle elde edilebilir:\n\n![logregmodel.png](attachment:logregmodel.png)\n\n\nOlas\u0131l\u0131k \u00e7\u0131kt\u0131s\u0131:","5b620de5":"* Model ve Tahmin","321ac4cb":"Kategorik de\u011fi\u015fkenler ile otomatik olarak m\u00fccadele edebilen, h\u0131zl\u0131, ba\u015far\u0131l\u0131 GBM t\u00fcr\u00fcd\u00fcr. 2017 y\u0131l\u0131nda Yandex taraf\u0131nfan geli\u015ftirilmi\u015ftir.\n\n* Kategorik de\u011fi\u015fken deste\u011fi.\n* H\u0131zl\u0131 ve \u00f6l\u00e7eklenebilir GPU deste\u011fi.\n* Daha ba\u015far\u0131l\u0131 tahminler.\n* H\u0131zl\u0131 e\u011fitim ve h\u0131zl\u0131 tahmin.\n\n\nCatBoost'u kullanabilmek i\u00e7in xgboost k\u00fct\u00fchanesini y\u00fckl\u00fcyoruz.","73b7ea48":"* y' belirli bir \u00f6rnek i\u00e7in lojistik regresyon modelinin \u00e7\u0131kt\u0131s\u0131d\u0131r.\n* z = b +  w1 x1 + w2 x2 + \u2026 + wn xn \n    - w: modelin \u00f6\u011frenilen a\u011f\u0131rl\u0131klar\u0131(weights)\n    - b: bias \n    - x de\u011ferleri belirli bir \u00f6rnek i\u00e7in \u00f6zellik(feature) de\u011ferleridir.","97fc7c7b":"* Model de\u011ferlendirmesi","89130a06":"LightGBM, XGBoost'un e\u011fitim s\u00fcresi performans\u0131n\u0131 artt\u0131rmaya y\u00f6nelik geli\u015ftirilen GBM t\u00fcr\u00fcd\u00fcr. 2017 y\u0131l\u0131nda Microsoft taraf\u0131ndan geli\u015ftirilmi\u015ftir.\n\n* Performans\u0131 y\u00fcksektir.\n* Level-wise b\u00fcy\u00fcme stratejisi yerine Leaf-wise b\u00fcy\u00fcme stratejisi kullan\u0131r.\n* BFS yerine DFS kullan\u0131r\n\n\nLightGBM' i kullanabilmek i\u00e7in lightgbm k\u00fct\u00fchanesini y\u00fckl\u00fcyoruz.","735d2b94":"## Destek Vekt\u00f6r Makineleri(Support Vector Machines)","2dc329a6":"!pip install lightgbm","ce93c1ec":"Temeli birden \u00e7ok karar a\u011fac\u0131n\u0131n \u00fcretti\u011fi tahminlerin bir araya getirilerek de\u011ferlendirilmesine dayan\u0131r. \n* Random Forests Bagging(Breiman, 1996) ile Random Subspace(Ho, 1998) y\u00f6ntemlerinin birle\u015fimi ile olu\u015fmu\u015ftur.\n\nBagging(Bootstrap Aggregating): Temeli bootstrap y\u00f6ntemi ile olu\u015fan birden fazla karar a\u011fac\u0131n\u0131n \u00fcretti\u011fi tahminleri bir araya getirilerek de\u011ferlendirilmesine dayan\u0131r. Baggiing y\u00f6ntemi Random Forests algoritmas\u0131n\u0131n \u00f6zel bir halidir.\nNot: Bootstrap Y\u00f6ntemi, istatistik alan\u0131nda s\u0131kl\u0131kla kullan\u0131lan y\u00f6ntemlerin ba\u015f\u0131nda gelmektedir. Bootstrap y\u00f6ntemleri ya da algoritmalar\u0131ndaki as\u0131l ama\u00e7 veriden, b\u00fcy\u00fck veri setleri olu\u015fturmak (\u00fcretmek) ve yeniden \u00f6rnekleme yapmakt\u0131r.\n\nRandom Subspace: Makine \u00f6\u011freniminde rasgele altuzay y\u00f6ntemi, bir k\u00fcmedeki tahmin ediciler aras\u0131ndaki korelasyonu, \u00f6zellik k\u00fcmesi yerine rastgele \u00f6zellik \u00f6rnekleri \u00fczerinde e\u011fiterek azaltmaya \u00e7al\u0131\u015fan bir topluluk \u00f6\u011frenme y\u00f6ntemidir.\n\n* A\u011fa\u00e7lar i\u00e7in g\u00f6zlemler bootstrap rastgele \u00f6rnek se\u00e7im y\u00f6ntemi ile de\u011fi\u015fkenler random subspace y\u00f6ntemi ile se\u00e7ilir.\n\n* Karar a\u011fac\u0131n\u0131n her bir d\u00fc\u011f\u00fcm\u00fcnde en iyi dallara ay\u0131r\u0131c\u0131 de\u011fi\u015fiken t\u00fcm de\u011fi\u015fkenler aras\u0131ndan rastgele se\u00e7ilen daha az say\u0131daki de\u011fi\u015fken aras\u0131ndan se\u00e7ilir.\n\n* A\u011fa\u00e7 olu\u015fturmada veri setinin 2\/3'\u00fc kulllan\u0131l\u0131r. D\u0131\u015farda kalan veri a\u011fa\u00e7lar\u0131n performans de\u011ferlendirmesi ve de\u011fi\u015fken \u00f6neminin belirlenmesi i\u00e7in kullan\u0131l\u0131r.\n\n* Her d\u00fc\u011f\u00fcm noktas\u0131nda rastgele de\u011fi\u015fken se\u00e7imi yap\u0131l\u0131r.(s\u0131n\u0131fland\u0131rma i\u00e7in \u221ap)\n\n* Nihai tahmin i\u00e7in a\u011fa\u00e7lardan tahmin de\u011feri talep edilirken her bir a\u011fac\u0131n daha \u00f6nceden hesaplanan hata oranlar\u0131 g\u00f6z \u00f6n\u00fcne al\u0131narak a\u011f\u0131rl\u0131k verilir.","f028f762":"# S\u0131n\u0131fland\u0131rma Modelleri (Classification Models)","414b0ab0":"* Model ve Tahmin","d2789b48":"### Category Boosting (CatBoost)","e6fd41dc":"Sinir A\u011f\u0131(Neural Network): Beyinden ilham alan bir model, basit ba\u011fl\u0131 birimlerden veya n\u00f6ronlardan ve ard\u0131ndan do\u011frusal olmayan(en az biri gizli) katmanlardan olu\u015fur. Ama\u00e7 en k\u00fc\u00e7\u00fck hata ile tahmin yapabilecek katsay\u0131lara eri\u015fmektir.","f92d57c8":"* Model ve Tahmin","4e20e0e3":"# Makine \u00d6\u011frenmesi ","d916ad44":"Gizli Katman: Giri\u015f katman\u0131 (yani \u00f6zellikler) ve \u00e7\u0131k\u0131\u015f katman\u0131 (tahmin) aras\u0131ndaki sinir a\u011f\u0131 i\u00e7indeki sentetik katman. Gizli katmanlar genellikle e\u011fitim i\u00e7in bir aktivasyon fonksiyonu (ReLU gibi) i\u00e7erir. Derin bir sinir a\u011f\u0131 birden fazla gizli katman i\u00e7erir.","b057cd79":"* Model ve Tahmin","b2f96124":"S\u0131n\u0131fland\u0131rmada kullan\u0131lan bu algoritmaya g\u00f6re s\u0131n\u0131fland\u0131rma s\u0131ras\u0131nda \u00e7\u0131kar\u0131lan \u00f6zelliklerden, s\u0131n\u0131fland\u0131r\u0131lmak istenen yeni bireyin daha \u00f6nceki bireylerden k tanesine yak\u0131nl\u0131\u011f\u0131na bak\u0131lmas\u0131d\u0131r.","9fa9ae2b":"## Yapay Sinir A\u011flar\u0131(Artificial Nerual Network)","26e0bd5c":"* Model ve Tahmin","0cbedd7f":"Uygun parametre se\u00e7imi i\u00e7in modeli de\u011fi\u015fik parametrelerle \u00e7al\u0131\u015ft\u0131r\u0131yoruz.","3eb2427e":"Yapay Sinir H\u00fccresi(Neuron): Bir sinir a\u011f\u0131nda, tipik olarak \u00e7oklu giri\u015f de\u011ferleri alan ve bir \u00e7\u0131k\u0131\u015f de\u011feri \u00fcreten bir d\u00fc\u011f\u00fcm. N\u00f6ron, a\u011f\u0131rl\u0131kl\u0131 bir girdi de\u011ferleri toplam\u0131na bir aktivasyon fonksiyonu (do\u011frusal olmayan d\u00f6n\u00fc\u015f\u00fcm) uygulayarak \u00e7\u0131kt\u0131 de\u011ferini hesaplar.\n\n![artificial_neuron.jpg](attachment:artificial_neuron.jpg)"}}