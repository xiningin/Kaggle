{"cell_type":{"8b9c5043":"code","7f7cb627":"code","17d13a87":"code","e6d6c459":"code","9f7f484c":"code","656653b8":"code","0e3e3cd2":"code","626dcf3a":"code","ae7d1285":"code","b16bbe60":"code","4da392eb":"code","60ba857f":"code","69431ec8":"code","db05c825":"code","8b7a90eb":"code","0c47eb71":"code","2d84d10d":"code","7cdf4b46":"code","868407de":"code","656256e1":"code","151c8852":"markdown"},"source":{"8b9c5043":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7f7cb627":"data = pd.read_csv(\"\/kaggle\/input\/euro12\/Euro_2012_stats_TEAM.csv\")\ndata.head()","17d13a87":"data.tail()","e6d6c459":"data.info()","9f7f484c":"data.dtypes","656653b8":"data.head()","0e3e3cd2":"#first of all we need to convert Shooting Accuracy value into float data type.\nconvert_SA = lambda x : float(x[:-1])\n\ndata[\"Shooting Accuracy\"] = data[\"Shooting Accuracy\"].apply(convert_SA)","626dcf3a":"data.head()","ae7d1285":"#also we need to convert % Goals-to-shots and Saves-to-shots ratio values into float data type.\nconvert_SA = lambda x : float(x[:-1])\ndata[\"% Goals-to-shots\"] = data[\"% Goals-to-shots\"].apply(convert_SA)\ndata[\"Saves-to-shots ratio\"] = data[\"Saves-to-shots ratio\"].apply(convert_SA)","b16bbe60":"data.head()","4da392eb":"# now we can use describe method for the all values that we have\ndata.describe()","60ba857f":"data.head()","69431ec8":"#we are comparing Shots on target that are scored as goal or not\ndata.boxplot(column='Shots on target',by = 'Goals')","db05c825":"data_new = data.head()    \ndata_new","8b7a90eb":"# id_vars = what we do not wish to melt\n# value_vars = what we want to melt\nmelted = pd.melt(frame=data_new,id_vars = 'Team', value_vars= ['Shots on target','Shots off target'])\nmelted","0c47eb71":"# lets conc 2 data frame in row\ndata1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) \nconc_data_row","2d84d10d":"#lets conc two data frame in column\n\n# Firstly lets create 2 data frame\ndata1 = data.Team\ndata2= data[\"Players Used\"]\nconc_data_cols = pd.concat([data1,data2],axis =1) \nconc_data_cols.head()","7cdf4b46":"data.head()","868407de":"data.plot(kind='scatter', x='Shots on target', y='Shots off target',alpha = 0.5,color = 'red')\nplt.xlabel('Shots on target')             \nplt.ylabel('Shots off target')\nplt.title('Shots on target vs Shots off target')","656256e1":"data[\"Shots on target\"].plot(kind = 'line',alpha = 0.8,color = 'red',linewidth=1,grid=True,linestyle=\":\")\ndata[\"Shots off target\"].plot(kind = 'line',alpha = 0.8,color = 'blue',linewidth=1,grid=True,linestyle=\"-.\")\n\nplt.xlabel('Shots on target')              \nplt.ylabel('Shots off target')\nplt.title('Shots on target vs Shots off target')","151c8852":"lets observe differences btwn shots on target and shots off target"}}