{"cell_type":{"40006fdf":"code","6410efbb":"code","2d86c753":"code","795d9727":"code","d18d244f":"code","cd526868":"code","f9be6331":"code","090f117e":"code","068577c2":"code","f9315efa":"code","8375109d":"code","cdadfa29":"code","938de07d":"code","7b8c2f48":"code","93f65582":"code","c6bc7bab":"code","075109bc":"code","3b7b149a":"code","7af14cb9":"code","c2184ee0":"code","40eb4b7f":"code","596ccf71":"code","a36f0ee7":"code","25718328":"code","cc4d281a":"code","3b43cf9a":"code","da4d17de":"code","1591a252":"markdown","4149bc37":"markdown","7bda5a29":"markdown","72c679ca":"markdown","4e3b8413":"markdown","eca41cb3":"markdown","e26f5529":"markdown"},"source":{"40006fdf":"import numpy as np \nimport matplotlib.pyplot as plt \nimport pandas as pd\nimport seaborn as sns ","6410efbb":"dataset =pd.read_csv('spam_ham_dataset.csv')\n","2d86c753":"dataset.head(10)","795d9727":"dataset.tail(10)","d18d244f":"dataset.describe()","cd526868":"dataset.shape","f9be6331":"dataset.info()","090f117e":"spam = dataset[dataset['label_num'] == 0]","068577c2":"spam","f9315efa":"ham = dataset[dataset['label_num']==1]","8375109d":"ham","cdadfa29":"sns.countplot(dataset['label_num'])","938de07d":"from sklearn.feature_extraction.text import CountVectorizer\nvectorizer = CountVectorizer()\nspam_ham = vectorizer.fit_transform(dataset['text'])\nprint(spam_ham.toarray())","7b8c2f48":"spam_ham.shape","93f65582":"X= spam_ham","c6bc7bab":"Y= dataset['label_num'].values","075109bc":"print(Y)","3b7b149a":"from sklearn.model_selection import train_test_split\nX_train , X_test , Y_train , Y_test =train_test_split(X, Y, test_size = 0.2, random_state = 42)","7af14cb9":"from sklearn.naive_bayes import MultinomialNB\nNB_classifier =MultinomialNB()\nNB_classifier.fit(X_train , Y_train)","c2184ee0":"Y_pred_train = NB_classifier.predict(X_train)\nprint(Y_pred_train)","40eb4b7f":"Y_pred_test = NB_classifier.predict(X_test)\nprint(Y_pred_test)","596ccf71":"from sklearn.metrics import classification_report , confusion_matrix , accuracy_score\ncm_test = confusion_matrix(Y_test, Y_pred_test)\ncm_train = confusion_matrix(Y_train , Y_pred_train)\n\nprint(cm_test)","a36f0ee7":"print(cm_train)","25718328":"sns.heatmap(cm_train , annot = True)","cc4d281a":"sns.heatmap(cm_test, annot = True)","3b43cf9a":"accuracy_score(Y_test , Y_pred_test)","da4d17de":"print(classification_report(Y_pred_test, Y_test))","1591a252":"## Importing dataset","4149bc37":"## train NAIVE_BAYES algorithm","7bda5a29":"## predicting Training_set result ","72c679ca":"## importing Libraries ","4e3b8413":"## Predicting Testset_result","eca41cb3":"## Accuracy score of test set ","e26f5529":"## Spliting data into train_set and test_set"}}