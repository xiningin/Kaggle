{"cell_type":{"24471ecf":"code","dc78c7ed":"code","8efce01c":"code","29d31528":"code","0c0f8d58":"code","ec142313":"code","865fe160":"code","46f437be":"code","0ac6b2f9":"code","185f64f2":"code","6a5df4a1":"code","5a9a60a5":"code","806d6ddb":"code","ef5124ca":"code","70af7386":"code","1b937b2a":"code","b629cb59":"code","fd949850":"code","e7a8b850":"code","44859d55":"code","e0de0d2c":"code","39c60e55":"code","5140a6d2":"code","7f8361e9":"code","32143238":"code","2272d834":"code","965c1e35":"code","cc29fa97":"code","88f3cf4f":"code","d23006ba":"code","c4981564":"code","8d7f9656":"code","62f8b6b6":"code","c8650286":"code","c411082e":"code","3cf1a877":"code","e627d162":"code","d8c6f409":"code","5815cc6e":"markdown","2125ccc7":"markdown","40258ffe":"markdown","30b394b9":"markdown"},"source":{"24471ecf":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\nfrom sklearn import metrics\nfrom sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns","dc78c7ed":"import os\nprint(os.listdir(\"..\/input\"))","8efce01c":"student_data_mat   = pd.read_csv(\"..\/input\/student_math.csv\",delimiter=\";\")\nstudent_data_por   = pd.read_csv(\"..\/input\/student_language.csv\",delimiter=\";\")","29d31528":"student_data_mat.head()","0c0f8d58":"student_data_mat.shape","ec142313":"student_data_por.head()","865fe160":"student_data_por.shape","46f437be":"student_data = pd.merge(student_data_mat,student_data_por,how=\"outer\")\nstudent_data.head()","0ac6b2f9":"student_data.shape","185f64f2":"student_data.info()","6a5df4a1":"columns_string = student_data.columns[student_data.dtypes == object]\ncolumns_string","5a9a60a5":"student_data = pd.get_dummies(student_data, columns = columns_string, drop_first = True)\nstudent_data.info()","806d6ddb":"student_data.head()","ef5124ca":"student_data.shape","70af7386":"student_data[[\"G1\",\"G2\",\"G3\"]].corr()","1b937b2a":"student_data.drop(axis = 1,labels= [\"G1\"],inplace=True)\nstudent_data.head()","b629cb59":"label = student_data[\"G3\"].values\npredictors = student_data.drop(axis = 1,labels= [\"G3\"]).values","fd949850":"predictors","e7a8b850":"pca = PCA(n_components=len(student_data.columns)-1)\npca.fit(predictors)\nvariance = pca.explained_variance_\nvariance","44859d55":"print(pca.explained_variance_ratio_)","e0de0d2c":"variance_ratio_cum_sum=np.cumsum(np.round(pca.explained_variance_ratio_, decimals=4)*100)\nprint(variance_ratio_cum_sum)\nplt.plot(variance_ratio_cum_sum)","39c60e55":"pca = PCA(n_components=9)\npca.fit(predictors)\nTransformed_vector =pca.fit_transform(predictors)\nprint(Transformed_vector)","5140a6d2":"student_data_without_output=student_data.drop(axis = 1,labels= [\"G3\"],inplace=False)\nfeatures=student_data_without_output.columns\nfeatures","7f8361e9":"#Visualize coefficients using heat map\n\nplt.figure(figsize=[25,5])\nsns.heatmap(pca.components_[0:,:],annot=True,cmap='viridis')\nplt.yticks([1,2,3,4,5,6,7,8,9],[\"First component\",\"Second component\",\"Third component\",\"Fourth component\",\"Fifth component\",\"Sixth component\",\"Seventh component\",\"Eighth component\"],rotation=360,ha=\"right\")\nplt.xticks(range(len(features)),features,rotation=90,ha=\"left\")\nplt.xlabel(\"Feature\")\nplt.ylabel(\"Principal components\")","32143238":"lr_pca = linear_model.LinearRegression()\nlr_withoutpca = linear_model.LinearRegression()","2272d834":"score_lr_withoutpca = cross_val_score(lr_withoutpca, predictors, label, cv=5)\nprint(\"PCA Model Cross Validation score : \" + str(score_lr_withoutpca))\nprint(\"PCA Model Cross Validation Mean score : \" + str(score_lr_withoutpca.mean()))","965c1e35":"score_lr_pca = cross_val_score(lr_pca, Transformed_vector, label, cv=5)\nprint(\"PCA Model Cross Validation score : \" + str(score_lr_pca))\nprint(\"PCA Model Cross Validation Mean score : \" + str(score_lr_pca.mean()))","cc29fa97":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import GridSearchCV","88f3cf4f":"knn = KNeighborsRegressor()","d23006ba":"n_neighbors=[5,7,9,10,11]\nweights=['distance','uniform']\nmetric =['euclidean','manhattan','chebyshev']\n","c4981564":"grid = GridSearchCV(estimator=knn,param_grid=dict(n_neighbors=n_neighbors,weights=weights,metric=metric))\ngrid.fit(predictors,label)","8d7f9656":"grid.best_params_","62f8b6b6":"knn_withoutpca = KNeighborsRegressor(n_neighbors=10,weights='uniform',metric='euclidean')\nknn_withoutpca.fit(predictors,label)","c8650286":"grid = GridSearchCV(estimator=knn,param_grid=dict(n_neighbors=n_neighbors,weights=weights,metric=metric))\ngrid.fit(Transformed_vector,label)","c411082e":"grid.best_params_","3cf1a877":"knn_withpca = KNeighborsRegressor(n_neighbors=11,weights='distance',metric='euclidean')\nknn_withpca.fit(Transformed_vector,label)","e627d162":"score_knn_withoutpca = cross_val_score(knn_withoutpca, predictors, label, cv=5)\nprint(\"Model Without Cross Validation score : \" + str(score_knn_withoutpca))\nprint(\"Model Without Cross Validation Mean score : \" + str(score_knn_withoutpca.mean()))","d8c6f409":"score_knn_withpca = cross_val_score(knn_withpca, Transformed_vector, label, cv=5)\nprint(\"PCA Model Cross Validation score : \" + str(score_knn_withpca))\nprint(\"PCA Model Cross Validation Mean score : \" + str(score_knn_withpca.mean()))","5815cc6e":"Now we perform Principal Component Analysis to identify which of the predictors are the most valuable. For that we first calculate the explained_variance_","2125ccc7":"Inference : In the heatmap, few features with different colors apart from common color indicates its importance played in each pricipal component","40258ffe":"Building a Linear Regression and KNN models with and without using PCA","30b394b9":"# Principal Component Analysis"}}