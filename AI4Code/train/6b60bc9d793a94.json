{"cell_type":{"5f6ed522":"code","afc7ca08":"code","2b542c31":"code","6a8ccb47":"code","7bc49b26":"code","c2616668":"code","e769a1fe":"code","025815f3":"code","99ded9d4":"code","92220121":"code","e294f2bc":"code","76d211df":"code","9b8a158d":"code","7209e2f2":"code","e080a26c":"code","d84422b3":"code","88e004f1":"code","26d93ca8":"code","36eec340":"code","fa8062ec":"code","82eabfdd":"code","c1b887bb":"code","8a3ccacd":"code","ab63d842":"code","8d449c44":"code","71c66a0e":"code","dbbfe46e":"code","d6a9ed4b":"code","2d221017":"code","0a078553":"code","861ae7b2":"code","0c3ad339":"code","8b7f9a4d":"code","0af1ce9a":"code","7034431d":"code","6c1fc5f1":"code","9ba7ca72":"code","d06965c3":"code","36597b93":"code","f9f5a284":"code","f8145abf":"code","d8023ee8":"code","33228162":"code","c7d94a3c":"code","5ec9c3f0":"code","c0836f9c":"code","5ced9b29":"code","197b69c3":"code","b1bf356f":"code","ffc04ab3":"code","427745ef":"code","9ea7abbb":"code","65d9aa78":"code","c2e9d161":"code","604f9bc1":"markdown","f5e0ff9f":"markdown","c3ef2590":"markdown","705e271a":"markdown","83bf403b":"markdown","a2713a89":"markdown","4f96b3a9":"markdown","a7f69fbe":"markdown","0b7e7c44":"markdown","4ca4ed66":"markdown","a465f822":"markdown","2463f2db":"markdown","f1489a68":"markdown","1b981a16":"markdown"},"source":{"5f6ed522":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd","afc7ca08":"import numpy as np\n\nx=np.array([[1,2,3],[4,5,6]])\n\nprint(\"x:\\n{}\".format(x))","2b542c31":"from scipy import sparse\n\ndata=np.eye(5)\n\nprint(\"Numpy array:\\n{}\".format(data))","6a8ccb47":"sparse_matrix=sparse.csc_matrix(data)\nprint(\"\\nSciPy sparse CSR matrix:\\n{}\".format(sparse_matrix))","7bc49b26":"data=np.ones(10)\nrow_indices=np.arange(10)\ncol_indices=np.arange(10)\neye_coo=sparse.coo_matrix((data,(row_indices,col_indices)))\nprint(\"COO representation:\\n{}\".format(eye_coo))","c2616668":"# %matplotlib\nimport matplotlib.pyplot as plt\n\nx=np.linspace(-10,10,100)\ny=np.sin(x)\n\nplt.plot(x,y,marker='x')\nplt.show()","e769a1fe":"# %matplotlib\nimport matplotlib.pyplot as plt\n\nx=np.linspace(-50,50,500)\ny=np.cos(x)\n\nplt.plot(x,y,marker='x')\nplt.show()","025815f3":"import pandas as pd\nfrom IPython.display import display\n\ndata = {'Name': [\"John\", \"Anna\", \"Peter\", \"Linda\"],\n        'Location' : [\"New York\", \"Paris\", \"Berlin\", \"London\"],\n        'Age' : [24, 13, 53, 33]\n       }\n\ndisplay(pd.DataFrame(data))","99ded9d4":"pd_data=pd.DataFrame(data)\ndisplay(pd_data[pd_data.Age >30])","92220121":"display(pd.DataFrame(data)[pd.DataFrame(data).Age >30])","e294f2bc":"import sys\nprint(\"Python version:\", sys.version)","76d211df":"import pandas as pd\nprint(\"pandas version:\", pd.__version__)","9b8a158d":"import matplotlib\nprint(\"matplotlib version:\", matplotlib.__version__)","7209e2f2":"import numpy as np\nprint(\"NumPy version:\", np.__version__)","e080a26c":"import IPython\nprint(\"IPython version:\", IPython.__version__)","d84422b3":"\nimport sklearn\nprint(\"scikit-learn version:\", sklearn.__version__)","88e004f1":"from IPython.display import Image\nImage(url=\"iris.png\")","26d93ca8":"from sklearn.datasets import load_iris\n\niris_dataset=load_iris()\n\niris_dataset","36eec340":"print(\"Key of iris dataset:\\n{}\".format(iris_dataset.keys()))","fa8062ec":"print(iris_dataset['DESCR'][:193]+\"\\n...\")","82eabfdd":"print(iris_dataset['DESCR'][:193])","c1b887bb":"print(\"Target names:{}\".format(iris_dataset['target_names']))","8a3ccacd":"print(\"Feature names:\\n{}\".format(iris_dataset['feature_names']))","ab63d842":"print(\"Data:{}\".format(iris_dataset['data']))","8d449c44":"print(\"Type of data:{}\".format(type(iris_dataset['data'])))","71c66a0e":"print(\"Shape of data:{}\".format(iris_dataset['data'].shape))","dbbfe46e":"print(\"First five columns of data:\\n{}\".format(iris_dataset['data'][:5]))","d6a9ed4b":"print(\"Type of target:{}\".format(type(iris_dataset['target'])))","2d221017":"print(\"Shape of target: {}\".format(iris_dataset['target'].shape))","0a078553":"print(\"Target:\\n\", iris_dataset['target'])","861ae7b2":"from sklearn.model_selection import train_test_split","0c3ad339":"X_train,X_test,y_train,y_test=train_test_split(iris_dataset['data'],iris_dataset['target'],random_state=0)\n#X_train,X_test,y_train,y_test=train_test_split(iris_dataset['data'],iris_dataset['target'],test_size=0.3,random_state=0)","8b7f9a4d":"print(\"X_train shape:\",X_train.shape) \nprint(\"y_train shape:\",y_train.shape)","0af1ce9a":"print('X_test shape:',X_test.shape)\nprint('y_test shape:',y_test.shape)","7034431d":"pip install mglearn","6c1fc5f1":"import mglearn\n# create dataframe from data in X_train=X_train\n# label the columns using the strings in iris_dataset.feature_names = columns=iris_dataset.feature_names\niris_dataframe=pd.DataFrame(X_train,columns=iris_dataset.feature_names)\n# create a scatter matrix from the dataframe, color by y_train\ngraph=pd.plotting.scatter_matrix(iris_dataframe,c=y_train,figsize=(10,10),marker='*',hist_kwds={'bins':15},s=50,alpha=0.8,cmap=mglearn.cm3)","9ba7ca72":"from sklearn.neighbors import KNeighborsClassifier","d06965c3":"#object create\nknn=KNeighborsClassifier(n_neighbors=1)","36597b93":"knn.fit(X_train,y_train)","f9f5a284":"X_new=np.array([[5,2.9,1,2.0]])\nprint('X_new.shape: {}'.format(X_new.shape))","f8145abf":"predict=knn.predict(X_new)\nprint(\"Prediction:\",predict)","d8023ee8":"print('predicted target name:',iris_dataset['target_names'][predict])","33228162":"y_pred=knn.predict(X_test)\nprint('Test set prediction:\\n{}'.format(y_pred))","c7d94a3c":"y_pred = knn.predict(X_test)\nprint(\"Test set predictions:\\n\", y_pred)","5ec9c3f0":"print(\"Test set score: {:.2f}\".format(np.mean(y_pred == y_test)))","c0836f9c":"print(\"Test set score: {:.2f}\".format(knn.score(X_test, y_test)))","5ced9b29":"X_train,X_test,y_train,y_test=train_test_split(iris_dataset['data'],iris_dataset['target'],random_state=0)","197b69c3":"knn=KNeighborsClassifier(n_neighbors=5)","b1bf356f":"knn.fit(X_train,y_train)","ffc04ab3":"print('Test set score: {:.2f}'.format(knn.score(X_test,y_test)))","427745ef":"from sklearn.ensemble import RandomForestClassifier","9ea7abbb":"ran=RandomForestClassifier(n_estimators=20)","65d9aa78":"ran.fit(X_train,y_train)","c2e9d161":"print('{:.2f}'.format(ran.score(X_test,y_test)))","604f9bc1":"#### Measuring Success: Training and Testing Data","f5e0ff9f":"#### Evaluating the Model","c3ef2590":"### Summary and Outlook","705e271a":"### Random Forest Algorithm","83bf403b":"#### First Things First: Look at Your Data","a2713a89":"#### NumPy\nNumPy is one of the fundamental packages for scientific computing in Python.","4f96b3a9":"#### SciPy\nSciPy is a collection of functions for scientific computing in Python","a7f69fbe":"### Versions Used in this Book","0b7e7c44":"### Python 2 versus Python 3","4ca4ed66":"#### Making Predictions","a465f822":"#### A First Application: Classifying Iris Species ","2463f2db":"#### Building Your First Model: k-Nearest Neighbors","f1489a68":"#### matplotlib\nmatplotlib is the primary scientific plotting library in Python","1b981a16":"#### Pandas\npandas is a Python library for data wrangling and analysis"}}