{"cell_type":{"aac44251":"code","b9dd0af0":"code","ff287332":"code","fa6ae622":"markdown"},"source":{"aac44251":"%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os.path\nimport gc\nimport time\nimport pickle\nimport feather\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom IPython.core.display import HTML\nfrom IPython.display import Markdown, display\n\ndef read_data(directory):\n    train_dtypes = {\n        'object_id': np.int32,\n        'mjd': np.float64,\n        'passband': np.int8,\n        'flux': np.float32,\n    }\n    train_file_path = os.path.join(directory, 'training_set.csv')\n    #print('reading {}'.format(train_file_path))\n    train = pd.read_csv(train_file_path, dtype=train_dtypes, usecols=list(train_dtypes.keys()))\n\n    train_meta_dtypes = {\n        'object_id': np.int32,\n        'target': np.int8,\n    }\n    train_meta_file_path = os.path.join(directory, 'training_set_metadata.csv')\n    #print('reading {}'.format(train_meta_file_path))\n    train_meta = pd.read_csv(train_meta_file_path, dtype=train_meta_dtypes, usecols=list(train_meta_dtypes.keys()))\n\n    object_id_to_target = train_meta.set_index('object_id')['target']\n    train['target'] = train['object_id'].map(object_id_to_target)\n    assert (pd.isnull(train['target'])).astype(np.int32).sum() == 0\n\n    return train","b9dd0af0":"directory = '..\/input\/'\ntrain = read_data(directory)\nclasses = train['target'].unique().tolist()\npassbands = [x for x in range(6)]\nrepresentatives = {}\nN = 3\nfor class_id in classes:\n    representatives[class_id] = train[train.target == class_id]['object_id'].sample(N, random_state=1685).values.tolist()","ff287332":"pal = sns.color_palette(\"hls\", n_colors=6)\nfor class_id, object_ids in representatives.items():\n    display(Markdown('# Class {}'.format(class_id)))   \n    for i, object_id in enumerate(object_ids):      \n        plt.figure(figsize=[12, 2])    \n        #display(Markdown('## object {}'.format(object_id)))\n        data = train[train.object_id == object_id]        \n        ax = sns.pointplot(x=\"mjd\", y=\"flux\", hue=\"passband\", data=data, palette=pal, ci=None, join=False)\n#         ax.get_xaxis().set_visible(False)\n        plt.tick_params(\n            axis='x',          # changes apply to the x-axis\n            which='both',      # both major and minor ticks are affected\n            bottom=False,      # ticks along the bottom edge are off\n            top=False,         # ticks along the top edge are off\n            labelbottom=False)\n        plt.legend(bbox_to_anchor=(1.05, 1.02), loc=2, borderaxespad=0., title='passband')            \n        plt.tight_layout()\n        plt.show()","fa6ae622":"This kernel displays light curves per class to help you feel the data and inspire feature engineering."}}