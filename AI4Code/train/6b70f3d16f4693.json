{"cell_type":{"0582a185":"code","e46b2e3a":"code","176212f8":"code","fcbc1eca":"code","5444b2a8":"code","3747186c":"code","f9767058":"code","6df8c5d3":"code","b99a80fc":"code","451a58a1":"code","d4453296":"code","79875459":"code","408b169c":"code","a144b8c9":"code","236dda16":"code","f9be820a":"code","4f7bd356":"code","0fe5b8e2":"code","b4b89e2a":"code","72b4d3c0":"code","5c77d611":"code","19161c74":"code","1bd47580":"code","aa425b7a":"code","17f4be5c":"code","7868eb81":"code","d3a4f106":"code","7d4a5dfa":"code","e7740ecf":"code","212ec77e":"code","4a65fada":"code","7344265c":"markdown","b0df93dc":"markdown","480b10a5":"markdown","f5cb5612":"markdown","b40b0b03":"markdown","96082910":"markdown"},"source":{"0582a185":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","e46b2e3a":"path = '\/kaggle\/input\/coronavirusdataset\/'\n","176212f8":"path = '\/kaggle\/input\/coronavirusdataset\/'\npatient_data_path = path + 'patient.csv'","fcbc1eca":"data = pd.read_csv(patient_data_path)","5444b2a8":"data.head(5)  # Print fisr five data.","3747186c":"data.info()   ##.info() function is used to get a concise summary of the dataframe","f9767058":"data.describe()  #checking statistic summary & it will show you only for \"Numerical Data\" not \"Categorial\"","6df8c5d3":"data.duplicated().sum()  #Removing duplicates if any\ndata.drop_duplicates(inplace=True)","b99a80fc":"data.isnull().sum()  #checking number of NUll Values in an Data Set","451a58a1":"print(data.shape)   #checking shape of dataset","d4453296":"data.columns  # Print columns","79875459":"data['sex'].value_counts()  # Count all male and female data.","408b169c":"data.sex = data.sex.apply(lambda X : 0 if X == 'female' else 1) #applying lambda function to change sex Female & Male to 0 & 1\ndata.head(5)","a144b8c9":"data.describe().T   #checking statistic summary & it will show you only for \"Numerical Data\" not \"Categorial\"","236dda16":"sns.heatmap(data.isnull(), yticklabels = False)  #checking NULl Values via graph,where you can find yellow colour which means that column contains NUll values","f9be820a":"# sns.set(rc={'figure.figsize':(10,8)})\n\nplt.figure(figsize=(10,8))\nsns.countplot(y=data['region'],).set_title('Regions affected Overall') # Ploting graph which regions maximum number of affected peole","4f7bd356":"sns.countplot(x='sex',data=data, hue='sex');  # sex Female & Male to 0 & 1","0fe5b8e2":"sns.countplot(x='country',data=data, hue='country');  # Ploting Graph which Country maximum number of affected people. ","b4b89e2a":"sns.countplot(y='group',data=data, hue='country');  # Ploting Graph which area maximum number of affected people in country. ","72b4d3c0":"sns.countplot(y='group',data=data, hue='group');  ","5c77d611":"plt.figure(figsize=(10,8))\nsns.countplot(y='group',data=data, hue='confirmed_date');  ","19161c74":"plt.figure(figsize=(15,10))\nsns.countplot(y='country',data=data, hue='confirmed_date');\n# sns.countplot(y=data['confirmed_date'].loc[(data['country']==\"Korea\")],).set_title('Confirmed dates in Korea')","1bd47580":"plt.figure(figsize=(10,8))\nsns.countplot(y=data['confirmed_date'].loc[(data['country']==\"Korea\")],).set_title('Confirmed dates in Korea')  \n# ploting the graph confirmed date of the human infected or not in the Korea Country","aa425b7a":"plt.figure(figsize=(10,8))\nsns.countplot(y=data['confirmed_date'].loc[(data['country']==\"China\")],).set_title('Confirmed dates in China')\n# ploting the graph confirmed date of the human infected or not in the China Country","17f4be5c":"plt.figure(figsize=(5,5))\nsns.countplot(x=data['confirmed_date'].loc[(data['country']==\"Mongolia\")],).set_title('Confirmed dates in Mongloia')\n# ploting the graph confirmed date of the human infected or not in the Mongloia Country","7868eb81":"plt.figure(figsize=(10,6))\nsns.stripplot(x=data.country, y=data.sex, hue=data.sex)\nplt.title(\"Age of patients from different countries\")\nplt.show()","d3a4f106":"plt.figure(figsize=(15,10))\nsns.countplot(y='region',data=data, hue='confirmed_date');","7d4a5dfa":"confirmed_patients_series = data['confirmed_date'].value_counts().sort_index()\n\nconfirmed_patients_series.cumsum().plot(legend='accumulated')\nconfirmed_patients_series.plot(kind='bar', color='orange', legend='daily', figsize=(16, 5), grid=True)","e7740ecf":"# before no.31 patient confirmed\nlimit_series = confirmed_patients_series[:data[data['id'] == 31]['confirmed_date'].values[0]]\nlimit_series.cumsum().plot(legend='accumulated')\nlimit_series.plot(kind='bar', color='orange', legend='daily', figsize=(16, 5), grid=True)","212ec77e":"# after no.31 patient confirmed\nlimit_series = confirmed_patients_series[data[data['id'] == 31]['confirmed_date'].values[0]:]\nlimit_series.cumsum().plot(legend='accumulated')\nlimit_series.plot(kind='bar', color='orange', legend='daily', figsize=(16, 5), grid=True)","4a65fada":"sns.countplot(x=data['state'].loc[(data['infection_reason']=='contact with patient')])","7344265c":"**EDA**","b0df93dc":"**Data Visualization**","480b10a5":"**Import Library**","f5cb5612":"**confirmed patients trend**","b40b0b03":"**Columns**\n\n  - **id** the ID of the patient (n-th confirmed patient)\n\n  - **sex** the sex of the patient\n\n  - **birth_year** the birth year of the patient\n\n  - **country** the country of the patient\n\n  - **region** the region of the patient\n\n  - **group** the collective infection\n\n  - **infection_reason** the reason of infection\n\n  - **infection_order** the order of infection\n\n  - **infected_by** the ID of who has infected the patient\n\n  - **contact_number** the number of contacts with people\n\n  - **confirmed_date** the date of confirmation\n\n  - **released_date** the date of discharge\n\n  - **deceased_date** the date of decease\n\n  - **state** isolated \/ released \/ deceased\n","96082910":"**Great Job Shivan!**"}}