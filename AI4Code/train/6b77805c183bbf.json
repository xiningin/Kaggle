{"cell_type":{"c484ab0c":"code","ad1aa3f4":"code","54527def":"code","68658984":"code","483323d1":"code","6833649b":"code","9bda02b0":"code","abd89c63":"code","145d6299":"code","fe2b7b09":"code","6a084fe3":"code","aa49da57":"code","cd1c0214":"code","e6670ba9":"code","5148ad41":"code","3fb148bd":"code","1003e32f":"code","e56f9f7b":"code","7c18520a":"code","6483709e":"code","afd07e54":"code","71d9885d":"code","13b36b26":"code","701cac73":"code","60c962e2":"markdown","c8c0146a":"markdown"},"source":{"c484ab0c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad1aa3f4":"!pip install openpyxl","54527def":"df = pd.read_excel('\/kaggle\/input\/list-of-unicorn-companies\/uniorn_companies.xlsx')\ndf.head()","68658984":"df.shape","483323d1":"df.isnull().sum()","6833649b":"cols_to_drop=['Unnamed: 6',  'Unnamed: 7', 'Unnamed: 8',  'Unnamed: 9',  'Unnamed: 10', 'Unnamed: 11',  'Unnamed: 12', 'Unnamed: 13',  'Unnamed: 14',\n 'Unnamed: 15',\n 'Unnamed: 16',\n 'Unnamed: 17',\n 'Unnamed: 18',\n 'Unnamed: 19',\n 'Unnamed: 20',\n 'Unnamed: 21',\n 'Unnamed: 22',\n 'Unnamed: 23',\n 'Unnamed: 24',\n 'Unnamed: 25',\n 'Unnamed: 26',\n 'Unnamed: 27',\n 'Unnamed: 28',\n 'Unnamed: 29',\n 'Unnamed: 30',\n 'Unnamed: 31',\n 'Unnamed: 32',\n 'Unnamed: 33',\n 'Unnamed: 34',\n 'Unnamed: 35',\n 'Unnamed: 36',\n 'Unnamed: 37',\n 'Unnamed: 38',\n 'Unnamed: 39',\n 'Unnamed: 40',\n 'Unnamed: 41',\n 'Unnamed: 42',\n 'Unnamed: 43',\n 'Unnamed: 44',\n 'Unnamed: 45',\n 'Unnamed: 46',\n 'Unnamed: 47',\n 'Unnamed: 48',\n 'Unnamed: 49',\n 'Unnamed: 50',\n 'Unnamed: 51',\n 'Unnamed: 52',\n 'Unnamed: 53',\n 'Unnamed: 54',\n 'Unnamed: 55',\n 'Unnamed: 56',\n 'Unnamed: 57',\n 'Unnamed: 58',\n 'Unnamed: 59']\ndf=df.drop(cols_to_drop,axis=1)\ndf.columns","9bda02b0":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Company)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","abd89c63":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Category)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","145d6299":"df[\"Valuation ($B) \"].value_counts()","fe2b7b09":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","6a084fe3":"#Code by Firat Gonen https:\/\/www.kaggle.com\/frtgnn\/elo-eda-lgbm\/notebook \n\nplt.figure(figsize=(10, 6))\nplt.title('Unicorn Companies Distribution')\nsns.despine()\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})\n\nsns.distplot(df['Valuation ($B) '], hist=True, rug=False,norm_hist=True)","aa49da57":"fig = px.bar(df, \n             x='Category', y='Country', color_discrete_sequence=['#27F1E7'],\n             title='Unicorn Companies', text='Category')\nfig.show()","cd1c0214":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdBu(np.linspace(0,1,20))\ndf[\"Category\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Valuation ($B) \",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Unicorn Companies\")\nplt.axis(\"off\")\nplt.show()","e6670ba9":"df[\"Company\"].value_counts().iloc[:10].plot.barh(color='r', title='Unicorn Companies')","5148ad41":"fig = px.bar(df, \n             x='Country', y='Date Added', color_discrete_sequence=['#DC143C'],\n             title='Unicorn Companies by Countries', text='Category')\nfig.show()","3fb148bd":"fig = px.bar(df, \n             x='Country', y='Select Investors', color_discrete_sequence=['#2B3A67'],\n             title='Unicorn Companies', text='Category')\nfig.show()","1003e32f":"#Code by attollos https:\/\/www.kaggle.com\/attollos\/time-series-forecast-example-with-prophet\/\n\nfrom fbprophet import Prophet\ndf1=df.rename(columns={\"Date Added\": \"ds\", \"Valuation ($B) \": \"y\"})\ndf1\nm = Prophet()\nm.fit(df1)","e56f9f7b":"future = m.make_future_dataframe(periods=365)\nfuture.tail()","7c18520a":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","6483709e":"fig1 = m.plot(forecast)","afd07e54":"fig2 = m.plot_components(forecast)","71d9885d":"#Code by attollos https:\/\/www.kaggle.com\/attollos\/time-series-forecast-example-with-prophet\/\n\nfrom fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","13b36b26":"#Code by Mysterious Ben https:\/\/www.kaggle.com\/myster\/eda-prophet-winning-solution-3-0\n\n_ = pd.pivot_table(df, values='Valuation ($B) ', index='Date Added').plot(style='-o', title=\"Unicorn Companies\")\nplt.xticks(rotation=45);","701cac73":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, was here, No Coding, just Kaggling.' )","60c962e2":"**<span style=\"color:#DC143C;\">No Code Platform<\/span>**\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSStxvuvN3WkuhCElyn_ZaMldbb-mbNfvb59w&usqp=CAU)alleywatch.com","c8c0146a":"<h1 style=\"background-color:#DC143C; font-family:'Brush Script MT',cursive;color:white;font-size:200%; text-align:center;border-radius: 50% 20% \/ 10% 40%\">NO CODE USABILITY<\/h1>\n\n\n#Unqork - Enterprise application development, reimagined.\n\nUnqork is a completely visual, no-code application platform that helps large enterprises build complex custom software faster, with higher quality, and lower costs than traditional approaches. All without a single line of code.\n\nSpeed, Cost, or Quality. Have all three! Unlock innovation.\n\nNo Code. Really???  I'm in."}}