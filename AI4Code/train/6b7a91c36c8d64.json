{"cell_type":{"f14c5f16":"code","41b29e89":"code","1988125c":"code","b878bfb3":"code","eb7ce435":"code","1179c5c3":"code","0831ac87":"code","2028c6b7":"code","922086f6":"code","53a8b294":"code","e808d1fe":"code","0312222b":"code","2463e4a7":"code","3ca34526":"code","90caeed9":"code","aa38990b":"code","d1ae8d24":"code","455c9f67":"code","1c2cfab4":"markdown"},"source":{"f14c5f16":"import tensorflow as tf\nimport tensorflow_hub as hub\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt","41b29e89":"model = tf.keras.Sequential([\n    hub.KerasLayer('https:\/\/tfhub.dev\/google\/tf2-preview\/inception_v3\/classification\/4'),\n    tf.keras.layers.Activation('softmax')\n])","1988125c":"# Build the model based on a specified batch input\nmodel.build([None, 300, 300, 3])","b878bfb3":"model.summary()","eb7ce435":"# Get a sample image\n!wget -O image.jpg https:\/\/cdn.pixabay.com\/photo\/2018\/02\/27\/14\/11\/the-pacific-ocean-3185553_960_720.jpg","1179c5c3":"# Preprocess the image\nimg = cv2.imread('image.jpg')\n# format it to be the RGB colorspace\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nimg = cv2.resize(img, (300, 300))\/255.\nimage = np.expand_dims(img, axis=0)","0831ac87":"# View the image\nplt.figure(figsize=(8, 8))\nplt.imshow(img)\nplt.axis('off')\nplt.show()","2028c6b7":"# Compute gradient\n# Siberian Husky's class ID in ImageNet\nclass_index = 251\n# Cat image would be 282 (Tabby Cat)\nnum_classes = 1001\nexpected_output = tf.one_hot([class_index]*image.shape[0], num_classes)","922086f6":"expected_output.shape","53a8b294":"with tf.GradientTape() as tape:\n    inputs = tf.cast(image, tf.float32)\n    tape.watch(inputs)\n    predictions = model(inputs)\n    loss = tf.keras.losses.categorical_crossentropy(expected_output, predictions)","e808d1fe":"gradients = tape.gradient(loss, inputs)","0312222b":"# Visulize the results\ngrayscale_tensor = tf.reduce_sum(tf.abs(gradients), axis=-1)\n\nnormalized_tensor = tf.cast(\n    255*(grayscale_tensor - tf.reduce_min(grayscale_tensor))\/(tf.reduce_max(grayscale_tensor) - tf.reduce_min(grayscale_tensor)),\n    tf.uint8\n)","2463e4a7":"normalized_tensor = tf.squeeze(normalized_tensor)","3ca34526":"# Let's do some sanity check\nprint(np.max(grayscale_tensor[0]))\nprint(np.min(grayscale_tensor[0]))\nprint()\nmax_pixel = np.unravel_index(np.argmax(grayscale_tensor[0]), grayscale_tensor[0].shape)\nmin_pixel = np.unravel_index(np.argmin(grayscale_tensor[0]), grayscale_tensor[0].shape)\nprint(max_pixel)\nprint(min_pixel)\nprint()","90caeed9":"# The meaning of unravel_index\nprint(np.unravel_index(65527, (300, 300)))\nprint(218*300+ 127)","aa38990b":"print(normalized_tensor[max_pixel])\nprint(normalized_tensor[min_pixel])","d1ae8d24":"plt.figure(figsize=(8, 8))\nplt.axis('off')\nplt.imshow(normalized_tensor, cmap='gray')\nplt.show()","455c9f67":"gradient_color = cv2.applyColorMap(normalized_tensor.numpy(), cv2.COLORMAP_HOT)\ngradient_color = gradient_color\/255\nsuper_imposed = cv2.addWeighted(img, 0.5, gradient_color, 0.5, 0.0)\nplt.figure(figsize=(8, 8))\nplt.imshow(super_imposed)\nplt.axis('off')\nplt.show()","1c2cfab4":"Learned from: Coursera Advanced Computer Vision with TensorFlow"}}