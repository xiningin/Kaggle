{"cell_type":{"c5be3f80":"code","d2f96460":"code","517fb6db":"code","bb6274fc":"code","d7661b6e":"code","0c6d5cfb":"code","af6ca6bb":"code","55948d55":"code","1b6e9a65":"code","73cf18ab":"code","972c53c1":"code","5a0ed538":"code","768ef1d6":"code","463978ed":"code","860a5a1a":"code","8cf5af9e":"code","2514794f":"code","87718500":"code","6daedb22":"code","5010618f":"code","dc514d4a":"code","5b1edb67":"code","cb5873cc":"code","e219fab6":"code","d8e2182d":"code","31c8c0b6":"code","089d3171":"code","5d35047b":"code","bb6e6abe":"code","55b7532a":"code","e3ff8163":"code","483e80f9":"code","a122b512":"code","2a051bf7":"code","bcb79279":"code","9c61eb90":"code","86d32d7a":"code","e7af8f96":"code","ba56c035":"code","4d9fcf44":"code","6c8abc56":"code","e124c926":"code","3e7916e0":"code","a7719797":"code","ef5dadd3":"code","68fde90d":"code","0e6bbf6d":"code","cc59512c":"code","8332cded":"markdown","3d8eda94":"markdown","5e5f01b2":"markdown","a630ab4a":"markdown","1566217d":"markdown","0da4c6db":"markdown","6a8fb326":"markdown","da4db49d":"markdown","f08987ff":"markdown","c767a0d7":"markdown","e5509731":"markdown","49d9dbbd":"markdown","7ff55c6a":"markdown","234e411b":"markdown","ced61ee8":"markdown","708b223b":"markdown","bafea1a8":"markdown","d8ec493e":"markdown","23f8dfdb":"markdown","8d82256f":"markdown","946f895f":"markdown","66bf8507":"markdown","98925679":"markdown"},"source":{"c5be3f80":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\nimport warnings\n# current version of seaborn generates a bunch of warnings that we'll ignore\nwarnings.filterwarnings('ignore')\nsns.set_style('whitegrid')\n\nimport missingno as msno # missing data visualization module for Python\nimport pandas_profiling\n\nimport gc\nimport datetime\n\n%matplotlib inline\ncolor = sns.color_palette()","d2f96460":"pd.set_option('display.max_rows', 10000)\npd.set_option('display.max_columns', 100)","517fb6db":"# specify encoding to deal with different formats\ndf = pd.read_csv('..\/input\/data.csv', encoding = 'ISO-8859-1')","bb6274fc":"df.head()","d7661b6e":"# change the column names\ndf.rename(index=str, columns={'InvoiceNo': 'invoice_num',\n                              'StockCode' : 'stock_code',\n                              'Description' : 'description',\n                              'Quantity' : 'quantity',\n                              'InvoiceDate' : 'invoice_date',\n                              'UnitPrice' : 'unit_price',\n                              'CustomerID' : 'cust_id',\n                              'Country' : 'country'}, inplace=True)","0c6d5cfb":"df.head()","af6ca6bb":"df.info()","55948d55":"# check missing values for each column \ndf.isnull().sum().sort_values(ascending=False)","1b6e9a65":"# check out the rows with missing values\ndf[df.isnull().any(axis=1)].head()","73cf18ab":"# change the invoice_date format - String to Timestamp format\ndf['invoice_date'] = pd.to_datetime(df.invoice_date, format='%m\/%d\/%Y %H:%M')","972c53c1":"# change description - UPPER case to LOWER case\ndf['description'] = df.description.str.lower()","5a0ed538":"df.head()","768ef1d6":"# df_new without missing values\ndf_new = df.dropna()","463978ed":"# check missing values for each column \ndf_new.isnull().sum().sort_values(ascending=False)","860a5a1a":"df_new.info()","8cf5af9e":"# change columns tyoe - String to Int type \ndf_new['cust_id'] = df_new['cust_id'].astype('int64')","2514794f":"df_new.head()","87718500":"df_new.info()","6daedb22":"df_new.describe().round(2)","5010618f":"df_new = df_new[df_new.quantity > 0]","dc514d4a":"df_new.describe().round(2)","5b1edb67":"df_new['amount_spent'] = df_new['quantity'] * df_new['unit_price']","cb5873cc":"# rearrange all the columns for easy reference\ndf_new = df_new[['invoice_num','invoice_date','stock_code','description','quantity','unit_price','amount_spent','cust_id','country']]","e219fab6":"df_new.insert(loc=2, column='year_month', value=df_new['invoice_date'].map(lambda x: 100*x.year + x.month))\ndf_new.insert(loc=3, column='month', value=df_new.invoice_date.dt.month)\n# +1 to make Monday=1.....until Sunday=7\ndf_new.insert(loc=4, column='day', value=(df_new.invoice_date.dt.dayofweek)+1)\ndf_new.insert(loc=5, column='hour', value=df_new.invoice_date.dt.hour)","d8e2182d":"df_new.head()","31c8c0b6":"df_new.groupby(by=['cust_id','country'], as_index=False)['invoice_num'].count().head()","089d3171":"orders = df_new.groupby(by=['cust_id','country'], as_index=False)['invoice_num'].count()\n\nplt.subplots(figsize=(15,6))\nplt.plot(orders.cust_id, orders.invoice_num)\nplt.xlabel('Customers ID')\nplt.ylabel('Number of Orders')\nplt.title('Number of Orders for different Customers')\nplt.show()","5d35047b":"print('The TOP 5 customers with most number of orders...')\norders.sort_values(by='invoice_num', ascending=False).head()","bb6e6abe":"money_spent = df_new.groupby(by=['cust_id','country'], as_index=False)['amount_spent'].sum()\n\nplt.subplots(figsize=(15,6))\nplt.plot(money_spent.cust_id, money_spent.amount_spent)\nplt.xlabel('Customers ID')\nplt.ylabel('Money spent (Dollar)')\nplt.title('Money Spent for different Customers')\nplt.show()","55b7532a":"print('The TOP 5 customers with highest money spent...')\nmoney_spent.sort_values(by='amount_spent', ascending=False).head()","e3ff8163":"# color available\nsns.palplot(color)","483e80f9":"df_new.head()","a122b512":"ax = df_new.groupby('invoice_num')['year_month'].unique().value_counts().sort_index().plot('bar',color=color[0],figsize=(15,6))\nax.set_xlabel('Month',fontsize=15)\nax.set_ylabel('Number of Orders',fontsize=15)\nax.set_title('Number of orders for different Months (1st Dec 2010 - 9th Dec 2011)',fontsize=15)\nax.set_xticklabels(('Dec_10','Jan_11','Feb_11','Mar_11','Apr_11','May_11','Jun_11','July_11','Aug_11','Sep_11','Oct_11','Nov_11','Dec_11'), rotation='horizontal', fontsize=13)\nplt.show()","2a051bf7":"df_new.groupby('invoice_num')['day'].unique().value_counts().sort_index()","bcb79279":"ax = df_new.groupby('invoice_num')['day'].unique().value_counts().sort_index().plot('bar',color=color[0],figsize=(15,6))\nax.set_xlabel('Day',fontsize=15)\nax.set_ylabel('Number of Orders',fontsize=15)\nax.set_title('Number of orders for different Days',fontsize=15)\nax.set_xticklabels(('Mon','Tue','Wed','Thur','Fri','Sun'), rotation='horizontal', fontsize=15)\nplt.show()","9c61eb90":"df_new.groupby('invoice_num')['hour'].unique().value_counts().iloc[:-1].sort_index()","86d32d7a":"ax = df_new.groupby('invoice_num')['hour'].unique().value_counts().iloc[:-1].sort_index().plot('bar',color=color[0],figsize=(15,6))\nax.set_xlabel('Hour',fontsize=15)\nax.set_ylabel('Number of Orders',fontsize=15)\nax.set_title('Number of orders for different Hours',fontsize=15)\nax.set_xticklabels(range(6,21), rotation='horizontal', fontsize=15)\nplt.show()","e7af8f96":"df_new.unit_price.describe()","ba56c035":"# check the distribution of unit price\nplt.subplots(figsize=(12,6))\nsns.boxplot(df_new.unit_price)\nplt.show()","4d9fcf44":"df_free = df_new[df_new.unit_price == 0]","6c8abc56":"df_free.head()","e124c926":"df_free.year_month.value_counts().sort_index()","3e7916e0":"ax = df_free.year_month.value_counts().sort_index().plot('bar',figsize=(12,6), color=color[0])\nax.set_xlabel('Month',fontsize=15)\nax.set_ylabel('Frequency',fontsize=15)\nax.set_title('Frequency for different Months (Dec 2010 - Dec 2011)',fontsize=15)\nax.set_xticklabels(('Dec_10','Jan_11','Feb_11','Mar_11','Apr_11','May_11','July_11','Aug_11','Sep_11','Oct_11','Nov_11'), rotation='horizontal', fontsize=13)\nplt.show()","a7719797":"df_new.head()","ef5dadd3":"group_country_orders = df_new.groupby('country')['invoice_num'].count().sort_values()\n# del group_country_orders['United Kingdom']\n\n# plot number of unique customers in each country (with UK)\nplt.subplots(figsize=(15,8))\ngroup_country_orders.plot('barh', fontsize=12, color=color[0])\nplt.xlabel('Number of Orders', fontsize=12)\nplt.ylabel('Country', fontsize=12)\nplt.title('Number of Orders for different Countries', fontsize=12)\nplt.show()","68fde90d":"group_country_orders = df_new.groupby('country')['invoice_num'].count().sort_values()\ndel group_country_orders['United Kingdom']\n\n# plot number of unique customers in each country (without UK)\nplt.subplots(figsize=(15,8))\ngroup_country_orders.plot('barh', fontsize=12, color=color[0])\nplt.xlabel('Number of Orders', fontsize=12)\nplt.ylabel('Country', fontsize=12)\nplt.title('Number of Orders for different Countries', fontsize=12)\nplt.show()","0e6bbf6d":"group_country_amount_spent = df_new.groupby('country')['amount_spent'].sum().sort_values()\n# del group_country_orders['United Kingdom']\n\n# plot total money spent by each country (with UK)\nplt.subplots(figsize=(15,8))\ngroup_country_amount_spent.plot('barh', fontsize=12, color=color[0])\nplt.xlabel('Money Spent (Dollar)', fontsize=12)\nplt.ylabel('Country', fontsize=12)\nplt.title('Money Spent by different Countries', fontsize=12)\nplt.show()","cc59512c":"group_country_amount_spent = df_new.groupby('country')['amount_spent'].sum().sort_values()\ndel group_country_amount_spent['United Kingdom']\n\n# plot total money spent by each country (without UK)\nplt.subplots(figsize=(15,8))\ngroup_country_amount_spent.plot('barh', fontsize=12, color=color[0])\nplt.xlabel('Money Spent (Dollar)', fontsize=12)\nplt.ylabel('Country', fontsize=12)\nplt.title('Money Spent by different Countries', fontsize=12)\nplt.show()","8332cded":"## How many orders (per day)?","3d8eda94":"**Not clear why there are FREE items given to certain customers**\n- On average, the company <span class=\"mark\">gave out 2-4 times FREE items<\/span> to customers <span class=\"mark\">each month (Except in June 2011)<\/span>","5e5f01b2":"## How much money spent by the customers?","a630ab4a":"### Check TOP 5 highest money spent","1566217d":"**We see that there are unit price = 0 (FREE items)**\n\n<span class=\"mark\">There are some free items given to customers from time to time<\/span>.","0da4c6db":"# Results obtained from Exploratory Data Analysis (EDA)\n\n1. The **customer with the highest number of orders comes from the United Kingdom (UK)** \n2. The **customer with the highest money spent on purchases comes from Netherlands** \n3. The company receives the highest number of orders from customers in the UK (since it is a UK-based company). Therefore, the TOP 5 countries (including UK) that place the highest number of orders are as below: \n    - United Kingdom \n\t- Germany \n\t- France\n\t- Ireland (EIRE)\n\t- Spain\n4. As the company receives the highest number of orders from customers in the UK (since it is a UK-based company), customers in the UK spend the most on their purchases. Therefore, the TOP 5 countries (including UK) that spend the most money on purchases are as below: \n    - United Kingdom \n\t- Netherlands\n\t- Ireland (EIRE)\n\t- Germany\n\t- France\n5. **November 2011 has the highest sales** \n\t- The month with the lowest sales is undetermined as the dataset consists of transactions until 9th December 2011 in December \n6. There are **no transactions on Saturday** between 1st Dec 2010 - 9th Dec 2011 \n7. The number of orders received by the company tends to increases from Monday to Thursday and decrese afterward\n8. The company receives the **highest number of orders at 12:00pm** \n\t- Possibly most customers made purchases during **lunch hour between 12:00pm - 2:00pm**\n9. The company tends to **give out FREE items for purchases occasionally each month (Except June 2011)** \n\t- However, it is not clear what factors contribute to giving out the FREE items to the particular customers ","6a8fb326":"## Add the columns - Month, Day and Hour for the invoice","da4db49d":"## How much money spent by each country?","f08987ff":"# Exploratory Data Analysis (EDA)","c767a0d7":"# Data Cleaning ","e5509731":"# Context of Data\nCompany - UK-based and registered non-store online retail\n\nProducts for selling - Mainly all-occasion gifts\n\nCustomers - Most are wholesalers (local or international)\n\nTransactions Period - **1st Dec 2010 - 9th Dec 2011 (One year)**","49d9dbbd":"## Add the column - amount_spent","7ff55c6a":" ## How many orders (per hour)?\n","234e411b":"## Check missing values for each column ","ced61ee8":"## Remove Quantity with negative values","708b223b":"# Discover patterns for Unit Price","bafea1a8":"## How many orders (per month)?","d8ec493e":"# Discover patterns for Number of Orders\nCredit: https:\/\/www.kaggle.com\/hendraherviawan\/customer-purchasing-patterns","23f8dfdb":"# Discover patterns for each Country","8d82256f":"## How many orders made by the customers?","946f895f":"## How many orders for each country?","66bf8507":"### Check TOP 5 most number of orders","98925679":"## Remove rows with missing values"}}