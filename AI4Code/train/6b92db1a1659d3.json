{"cell_type":{"3496358b":"code","0deee821":"code","496171e2":"code","6df4a617":"code","e23d4530":"code","72872f69":"code","28290758":"code","d4d4c853":"code","4540ccac":"code","0ba05046":"code","3f9a59bb":"code","68fc19e3":"code","5f86f1dc":"code","e3913f74":"code","e8265fe6":"markdown"},"source":{"3496358b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0deee821":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')","496171e2":"df = pd.read_csv(\"..\/input\/Mall_Customers.csv\")\ndf.head()","6df4a617":"print(\"Shape:\",df.shape)\nprint(df.describe())","e23d4530":"#Check null value(if any)\ndf.isnull().any()","72872f69":"#Divide age into groups\ndf[\"Age_Group\"] = np.where(df.Age<25,\"Age below 25 year\",(np.where(df.Age<35, \"Age 25 to 34 year\" ,\n                                                                   (np.where(df.Age<45, \"Age 35 to 44 year\" ,\n                                                                             (np.where(df.Age<55, \"Age 45 to 54 year\" ,\"Age more then 55 year\")))))))\n\ndf.head()","28290758":"plt.rcParams[\"figure.figsize\"] =(18,6)\n\nplt.subplot(221)\nsns.countplot(df.Gender)\n\nplt.subplot(222)\nsns.countplot(df.Age)\n\nplt.subplot(223)\nsns.countplot(df[\"Annual Income (k$)\"])\n\nplt.subplot(224)\nsns.countplot(df[\"Spending Score (1-100)\"])","d4d4c853":"plt.rcParams['figure.figsize'] = (20,10)\nplt.subplot(221)\nsns.scatterplot(x=\"Age\",y=\"Annual Income (k$)\",data=df)\n\nplt.subplot(222)\nsns.scatterplot(x=\"Age\",y=\"Spending Score (1-100)\",data=df)\n\nplt.subplot(223)\nsns.scatterplot(x=\"Age\",y=\"Annual Income (k$)\",data=df,hue=\"Gender\")\n\nplt.subplot(224)\nsns.scatterplot(x=\"Age\",y=\"Spending Score (1-100)\",data=df,hue=\"Gender\")","4540ccac":"#residplot\nplt.rcParams['figure.figsize'] = (14,6)\n\nplt.subplot(121)\nsns.residplot(y=\"Annual Income (k$)\", x=\"Age\",data=df, lowess=True, color=\"g\")\n\nplt.subplot(122)\nsns.residplot(y=\"Spending Score (1-100)\", x=\"Age\",data=df, lowess=True, color=\"b\")","0ba05046":"plt.rcParams['figure.figsize'] = (20,10)\n\nplt.subplot(221)\nsns.violinplot(x=\"Age_Group\",y=\"Annual Income (k$)\",data=df)\n\nplt.subplot(222)\nsns.violinplot(x=\"Age_Group\",y=\"Spending Score (1-100)\",data=df)\n\nplt.subplot(223)\nsns.violinplot(x=\"Age_Group\",y=\"Annual Income (k$)\",data=df,hue=\"Gender\")\n\nplt.subplot(224)\nsns.violinplot(x=\"Age_Group\",y=\"Spending Score (1-100)\",data=df,hue=\"Gender\")","3f9a59bb":"# Check how Age wise Data is distributed\nplt.rcParams['figure.figsize'] = (20,10)\n\nplt.subplot(221)\nsns.boxplot(x=\"Age_Group\",y=\"Annual Income (k$)\",data=df)\nsns.swarmplot(x=\"Age_Group\", y=\"Annual Income (k$)\", data=df, color=\".25\")\n\nplt.subplot(222)\nsns.boxplot(x=\"Age_Group\",y=\"Spending Score (1-100)\",data=df)\nsns.swarmplot(x=\"Age_Group\", y=\"Spending Score (1-100)\", data=df, color=\".25\")\n\nplt.subplot(223)\nsns.boxplot(x=\"Age_Group\",y=\"Annual Income (k$)\",data=df,hue=\"Gender\")\n\nplt.subplot(224)\nsns.boxplot(x=\"Age_Group\",y=\"Spending Score (1-100)\",data=df,hue=\"Gender\")","68fc19e3":"#plt.rcParams['figure.figsize'] = (30,30)\nsns.pairplot(df.drop(\"CustomerID\",axis=1), hue=\"Age_Group\",size=3)","5f86f1dc":"#corelation matrix\n\ncorr = df.drop(\"CustomerID\",axis=1).corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nf, ax = plt.subplots(figsize=(6, 10))\ncmap = sns.diverging_palette(30, 0, as_cmap=True)\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3,square=True, linewidths=.5,linecolor='yellow', cbar_kws={\"shrink\": .4})\n# there is Negative weak corelatin between Age and Spending","e3913f74":"sns.heatmap(df.drop(\"CustomerID\",axis=1).corr(),annot=True)\nplt.title(\"Heatmap of Data\",fontsize=20)","e8265fe6":"# Data Visualization"}}