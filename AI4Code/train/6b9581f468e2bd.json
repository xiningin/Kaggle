{"cell_type":{"02ccee95":"code","4c7a9903":"code","5f586434":"code","5c35cf73":"code","2d384340":"code","b21f509c":"code","e27a8123":"code","423e7a83":"markdown","1f7eb6ad":"markdown","41772e2a":"markdown","3d65a640":"markdown","f6eab1ce":"markdown","37a82e7b":"markdown","418cf5eb":"markdown","bd764891":"markdown","d24a9e30":"markdown","60404e97":"markdown"},"source":{"02ccee95":"from numba import jit \nimport numpy as np\nfrom sklearn.metrics import cohen_kappa_score, confusion_matrix\nimport warnings\nwarnings.filterwarnings(\"ignore\")","4c7a9903":"def quadKappa(act,pred,n=4,hist_range=(0,3)):\n    \n    O = confusion_matrix(act,pred)\n    O = np.divide(O,np.sum(O))\n    \n    W = np.zeros((n,n))\n    for i in range(n):\n        for j in range(n):\n            W[i][j] = ((i-j)**2)\/((n-1)**2)\n            \n    act_hist = np.histogram(act,bins=n,range=hist_range)[0]\n    prd_hist = np.histogram(pred,bins=n,range=hist_range)[0]\n    \n    E = np.outer(act_hist,prd_hist)\n    E = np.divide(E,np.sum(E))\n    \n    num = np.sum(np.multiply(W,O))\n    den = np.sum(np.multiply(W,E))\n        \n    return 1-np.divide(num,den)","5f586434":"@jit\ndef qwk3(a1, a2, max_rat=3):\n    assert(len(a1) == len(a2))\n    a1 = np.asarray(a1, dtype=int)\n    a2 = np.asarray(a2, dtype=int)\n\n    hist1 = np.zeros((max_rat + 1, ))\n    hist2 = np.zeros((max_rat + 1, ))\n\n    o = 0\n    for k in range(a1.shape[0]):\n        i, j = a1[k], a2[k]\n        hist1[i] += 1\n        hist2[j] += 1\n        o +=  (i - j) * (i - j)\n\n    e = 0\n    for i in range(max_rat + 1):\n        for j in range(max_rat + 1):\n            e += hist1[i] * hist2[j] * (i - j) * (i - j)\n\n    e = e \/ a1.shape[0]\n\n    return 1 - o \/ e","5c35cf73":"size = 1000000\na = np.random.randint(0, 4, size)\np = np.random.randint(0, 4, size)\na.size, p.size","2d384340":"%timeit quadKappa(a,p)","b21f509c":"%timeit cohen_kappa_score(a, p, weights=\"quadratic\")","e27a8123":"%timeit qwk3(a,p)","423e7a83":"@afajohn Method:","1f7eb6ad":"Let's test on 1M rows (the training data is 11 times larger)","41772e2a":"## CPMP Method\nhttps:\/\/www.kaggle.com\/c\/data-science-bowl-2019\/discussion\/114133#latest-657027","3d65a640":"It takes about 1.5 second.\n\nSKLEARN method:","f6eab1ce":"It takes about 5 ms.  It is about 300 times faster than the other two methods.","37a82e7b":"## Timing","418cf5eb":"## @afajohn Method\nhttps:\/\/www.kaggle.com\/afajohn\/quadratic-weighted-kappa-with-numpy-flavor","bd764891":"It also takes about 1.5 second.\n\nCPMP method.  We run it once to compile it. ","d24a9e30":"## SKLEARN method\n\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.cohen_kappa_score.html","60404e97":"This notebook compares 3 ways to compute QWK metric."}}