{"cell_type":{"68fa6880":"code","cfefe820":"code","c5161f74":"code","2ea812bd":"code","f984fd62":"code","e36e034f":"code","6cc257e9":"code","ebc4ada8":"code","9204d5db":"code","7d7e0047":"code","f9d702c1":"code","222acb84":"code","23b00be8":"code","cd73320f":"code","423ec539":"markdown","829f9a61":"markdown","816884a5":"markdown","92f1db74":"markdown","b308415a":"markdown","e50334fb":"markdown","0820747d":"markdown","c30a20da":"markdown","5dfef3ba":"markdown","c372a5a2":"markdown","fa8fe243":"markdown","6dc41a59":"markdown","5fae0129":"markdown","70dd0c4f":"markdown","c9586f79":"markdown","6bb06ecb":"markdown","29e37877":"markdown","7a142153":"markdown","694dbd96":"markdown","e54e62d6":"markdown","3a0aa717":"markdown","1fd44f44":"markdown","b0bc621d":"markdown","543067ca":"markdown","e65c57c0":"markdown","ca55f2bb":"markdown","288b1aa9":"markdown","e9daf382":"markdown","5886c9c3":"markdown","c4078e9b":"markdown","585c4fd8":"markdown","e466c6d0":"markdown","58c67667":"markdown"},"source":{"68fa6880":"# importing packages\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport textwrap\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# making new compensation bins - creating less number of bins so that it's easier to see\ndef new_compensation_bin(comp_str):\n    if comp_str in ['$0-999', '1,000-1,999', '2,000-2,999', '3,000-3,999', '4,000-4,999']:\n        return '$0-4,999'\n    elif comp_str in ['5,000-7,499', '7,500-9,999', '10,000-14,999', '15,000-19,999', '20,000-24,999']:\n        return '$5,000-24,999'\n    elif comp_str in ['25,000-29,999', '30,000-39,999', '40,000-49,999', '50,000-59,999', '60,000-69,999']:\n        return '$25,000-69,999'\n    elif comp_str in ['70,000-79,999', '80,000-89,999', '90,000-99,999', '100,000-124,999', '125,000-149,999']:\n        return '$70,000-149,999'\n    elif comp_str in ['150,000-199,999', '200,000-249,999', '250,000-299,999', '300,000-500,000', '> $500,000']:\n        return '> $150,000'\n    else:\n        return \"Null\"\n\n# identifying a tag for the southeast asian countries\ndef tag_sea_countries(country):\n    if country in [\"Brunei\", \"Cambodia\", \"East Timor\", \"Indonesia\", \"Laos\", \"Malaysia\", \"Myanmar\", \"Philippines\", \"Singapore\", \"Thailand\", \"Viet Nam\"]:\n        return \"SEA\"\n    else:\n        return \"RoW\"\n\ndf = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv\", skiprows=[0])    \ndf[\"sea_tag\"] = df.apply(lambda x: tag_sea_countries(x[\"In which country do you currently reside?\"]), axis=1)\ndf[\"new_compensation_bin\"] = df.apply(lambda x: new_compensation_bin(x[\"What is your current yearly compensation (approximate $USD)?\"]), axis=1)\n\nsea_countries = df[df[\"sea_tag\"]==\"SEA\"]\nnonsea_countries = df[df[\"sea_tag\"]==\"RoW\"]","cfefe820":"### COMPARING THE INCREASE IN NUMBER OF SURVEY PARTICIPANTS FROM 2017 TO 2018 ###\n\n# dataset for 2017\ndf_2017 = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv\", encoding = \"ISO-8859-1\")\ndf_2017[\"sea_tag\"] = df_2017.apply(lambda x: tag_sea_countries(x[\"Country\"]), axis=1)\ndf_2017[\"survey_year\"] = 2017\nsea_2017 = df_2017[df_2017[\"sea_tag\"]==\"SEA\"]\nsea_2017_ = sea_2017[[\"survey_year\", \"Country\"]]\nsea_2017_.columns = [\"survey_year\", \"country\"]\nsea_2017_grouped = (sea_2017_.groupby(\"survey_year\")[\"country\"].count()).reset_index(name=\"count\")\nsea_2017_grouped[\"total\"] = len(df_2017)\nsea_2017_grouped[\"percent_sea\"] = round((sea_2017_grouped[\"count\"]\/sea_2017_grouped[\"total\"])*100,2)\n\n# dataset for 2018\ndf_2018 = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv\", skiprows=[0])    \ndf_2018[\"sea_tag\"] = df_2018.apply(lambda x: tag_sea_countries(x[\"In which country do you currently reside?\"]), axis=1)\ndf_2018[\"survey_year\"] = 2018\nsea_2018 = df_2018[df_2018[\"sea_tag\"]==\"SEA\"]\nsea_2018_ = sea_2018[[\"survey_year\", \"In which country do you currently reside?\"]]\nsea_2018_.columns = [\"survey_year\", \"country\"]\nsea_2018_grouped = (sea_2018_.groupby(\"survey_year\")[\"country\"].count()).reset_index(name=\"count\")\nsea_2018_grouped[\"total\"] = len(df_2018)\nsea_2018_grouped[\"percent_sea\"] = round((sea_2018_grouped[\"count\"]\/sea_2018_grouped[\"total\"])*100,2)\n\n#dataset for 2019\nsea_2019 = sea_countries\nsea_2019[\"survey_year\"] = 2019\nsea_2019_ = sea_2019[[\"survey_year\", \"In which country do you currently reside?\"]]\nsea_2019_.columns = [\"survey_year\", \"country\"]\nsea_2019_grouped = (sea_2019_.groupby(\"survey_year\")[\"country\"].count()).reset_index(name=\"count\")\nsea_2019_grouped[\"total\"] = len(df)\nsea_2019_grouped[\"percent_sea\"] = round((sea_2019_grouped[\"count\"]\/sea_2019_grouped[\"total\"])*100,2)\n\n# 2017-2019\nsea_2017to2019 = (pd.concat([sea_2017_grouped, sea_2018_grouped, sea_2019_grouped])).reset_index(drop=True)\n\n# plotting\ngridsize = (10, 3)\nfig = plt.figure(figsize=(40, 10))\n\nax1 = plt.subplot2grid(gridsize, (3, 1), rowspan=6)\nax1 = sns.barplot(x = \"survey_year\", \n                  y= \"percent_sea\",\n                  data=sea_2017to2019,\n                  color = \"#529FCD\"\n                   )\nax1_title = ax1.set_title('Percentage of Respondents of SEA Countries per Year')\nax1_yticks = ax1.set_yticks([])\nax1_yticklabels = ax1.set_yticklabels([])\nax1_ylabel = ax1.set_ylabel(\"\")\nax1_xlabel = ax1.set_xlabel(\"\")\nax1.grid(False)\nax1.set_ylim(0,4)\n\nfor p in ax1.patches:\n    patch = ax1.annotate(str(p.get_height())+\"%\", \n                        (p.get_x() + p.get_width() \/ 2.0, \n                         p.get_height()), \n                        ha = 'center', \n                        va = 'center', \n                        xytext = (0, 5),\n                        textcoords = 'offset points')\nsns.despine(ax=ax1, left=True, top=True, right=True,bottom=False)","c5161f74":"from IPython.display import Image\nImage(\"\/kaggle\/input\/dsinsea\/sea_chessboard.png\", width=600)","2ea812bd":"### COMPARING THE 2019 SURVEY PARTICIPANTS PER SEA COUNTRY ###\n\ngridsize = (5, 5)\nfig = plt.figure(figsize=(20, 15))\n\nax1 = plt.subplot2grid(gridsize, (0, 2), colspan=5, rowspan=2)\nax1 = sns.countplot(x = \"In which country do you currently reside?\", \n                    data = sea_countries,\n                    order = sea_countries[\"In which country do you currently reside?\"].value_counts().index,\n                    color = \"#529FCD\"\n                   )\nax1_title = ax1.set_title('Number of Respondents per SEA Countries')\nax1_yticklabels = ax1.set_yticklabels([])\nax1_ylabel = ax1.set_ylabel(\"\")\nax1_xlabel = ax1.set_xlabel(\"\")\nax1.grid(False)\nsns.despine(ax=ax1, left=True, top=True, right=True,bottom=True)\n\nfor p in ax1.patches:\n    patch = ax1.annotate(p.get_height(), \n                        (p.get_x() + p.get_width() \/ 2.0, \n                         p.get_height()), \n                        ha = 'center', \n                        va = 'center', \n                        xytext = (0, 5),\n                        textcoords = 'offset points')\n\n### COMPARING THE COUNTRIES OF 2019 SURVEY PARTICIPANTS - SEA, ROW ###    \n    \nax2 = plt.subplot2grid(gridsize, (0, 1))\nax2_set_title = ax2.set_title('Countries')\ngrouped_countries = (df.groupby('sea_tag')[\"In which country do you currently reside?\"].nunique()).reset_index(name=\"count_country\")\nax2 = plt.pie(grouped_countries['count_country'],\n              labels=grouped_countries['sea_tag'],\n              shadow=False,\n              startangle=0,\n              autopct='%1.2f%%',\n              colors=[\"#A8A495\", \"#E3692A\"]\n             )\n\n### COMPARING THE PARTICIPANTS OF 2019 SURVEY - SEA, ROW ###    \n\nax3 = plt.subplot2grid(gridsize, (1, 1))\nax3_set_title = ax3.set_title('Respondents')\ngrouped_respondents = (df.groupby('sea_tag')[\"In which country do you currently reside?\"].count()).reset_index(name=\"count_respondents\")\nax3 = plt.pie(grouped_respondents['count_respondents'],\n              labels=grouped_respondents['sea_tag'],\n              shadow=False,\n              startangle=0,\n              autopct='%1.2f%%',\n              colors=[\"#A8A495\", \"#E3692A\"],\n             )","f984fd62":"### COMPARING THE GENDERS OF 2019 SURVEY PARTICIPANTS - SEA, ROW ###    \n\ngridsize = (10, 3)\nfig = plt.figure(figsize=(40, 10))\n\n\n# RoW\nax1 = plt.subplot2grid(gridsize, (0, 1))\nax1_title = ax1.set_title('Gender Breakdown')\nax1_start = 0\nax1_never = round((len(nonsea_countries[nonsea_countries[\"What is your gender? - Selected Choice\"]==\"Female\"])\/len(nonsea_countries[nonsea_countries[\"What is your gender? - Selected Choice\"].isin([\"Female\", \"Male\"])]))*100)\nax1_seldom = round((len(nonsea_countries[nonsea_countries[\"What is your gender? - Selected Choice\"]==\"Male\"])\/len(nonsea_countries[nonsea_countries[\"What is your gender? - Selected Choice\"].isin([\"Female\", \"Male\"])]))*100)\nax1.broken_barh([(ax1_start, ax1_never), (ax1_never, ax1_never+ax1_seldom)], [10, 9], facecolors=('#E3692A', '#529FCD'))\nax1.set_xlim(0, 100)\nax1.spines['left'].set_visible(False)\nax1.spines['bottom'].set_visible(False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.set_yticks([15, 20])\nax1.set_xticks([0, 25, 50, 75, 100])\nax1.set_axisbelow(True) \nax1.set_xticklabels(\"\")\nax1.set_yticklabels(['RoW'])\nax1.grid(axis='x')\nax1.text(ax1_never-6, 14.5, str(ax1_never)+\"%\", fontsize=8)\nax1.text((ax1_never+ax1_seldom)-6, 14.5, str(ax1_seldom)+\"%\", fontsize=8)\n\n# SEA\nax2 = plt.subplot2grid(gridsize, (1, 1))\nax2_start = 0\nax2_never = round((len(sea_countries[sea_countries[\"What is your gender? - Selected Choice\"]==\"Female\"])\/len(sea_countries[sea_countries[\"What is your gender? - Selected Choice\"].isin([\"Female\", \"Male\"])]))*100)\nax2_seldom = round((len(sea_countries[sea_countries[\"What is your gender? - Selected Choice\"]==\"Male\"])\/len(sea_countries[sea_countries[\"What is your gender? - Selected Choice\"].isin([\"Female\", \"Male\"])]))*100)\nax2.broken_barh([(ax2_start, ax2_never), (ax2_never, ax2_never+ax2_seldom)], [10, 9], facecolors=('#E3692A', '#529FCD'))\nax2.set_xlim(0, 100)\nax2.spines['left'].set_visible(False)\nax2.spines['bottom'].set_visible(False)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.set_yticks([15, 20])\nax2.set_xticks([0, 25, 50, 75, 100])\nax2.set_axisbelow(True) \nax2.set_yticklabels(['SEA'])\nax2.grid(axis='x')\nax2.text(ax2_never-6, 14.5, str(ax2_never)+\"%\", fontsize=8)\nax2.text((ax2_never+ax2_seldom)-6, 14.5, str(ax2_seldom)+\"%\", fontsize=8)\n\n### COMPARING THE GENDERS OF 2019 SURVEY PARTICIPANTS per SEA coutry ###    \n\nax3 = plt.subplot2grid(gridsize, (3, 1), rowspan=6)\nr = [0,1,2,3,4,5]\nraw_data = {'Female': \n            [len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Female\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Indonesia\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Female\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Malaysia\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Female\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Philippines\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Female\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Singapore\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Female\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Thailand\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Female\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Viet Nam\")])], \n            'Male': \n            [len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Male\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Indonesia\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Male\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Malaysia\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Male\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Philippines\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Male\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Singapore\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Male\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Thailand\")]),\n             len(sea_countries[(sea_countries[\"What is your gender? - Selected Choice\"]==\"Male\")&\n                               (sea_countries[\"In which country do you currently reside?\"]==\"Viet Nam\")])]\n           }\nraw_data_df = pd.DataFrame(raw_data)\ntotals = [i+j for i,j in zip(raw_data_df['Female'], raw_data_df['Male'])]\ngreenBars = [round(i \/ j * 100) for i,j in zip(raw_data_df['Female'], totals)]\norangeBars = [round(i \/ j * 100) for i,j in zip(raw_data_df['Male'], totals)]\nbarWidth = 0.85\nnames = ('Indonesia', 'Malaysia', 'Philippines', 'Singapore', 'Thailand', 'Viet Nam')\nax3.bar(r, greenBars, color='#E3692A', edgecolor='white', width=barWidth, label=\"Female\")\nax3.bar(r, orangeBars, bottom=greenBars, color='#529FCD', edgecolor='white', width=barWidth, label=\"Male\")\nax3_title = ax3.set_title('Gender Breakdown per SEA Countries')\nax3_xticks = plt.xticks(r, names)\nax3_legend = plt.legend(loc='upper left', bbox_to_anchor=(1,1), ncol=1)\n\nfor r in range(0,6,1):\n    p = ax3.patches[r]\n    patch = ax3.annotate(str(p.get_height())+\"%\", \n                        (p.get_x() + p.get_width()\/2.0, \n                         p.get_height()\/2.0), \n                        ha = 'center', \n                        va = 'center')\n    q = ax3.patches[r+6]\n    patch = ax3.annotate(str(q.get_height())+\"%\", \n                        (q.get_x() + q.get_width()\/2.0, \n                         p.get_height() + (q.get_height()\/2.0)), \n                        ha = 'center', \n                        va = 'center')\nax3.grid(False)\nax3_yticklabels = ax3.set_yticklabels([])\n\nsns.despine(ax=ax3, left=True, top=True, right=True,bottom=True)\nsns.despine(ax=ax2, left=True, top=True, right=True,bottom=True)\nsns.despine(ax=ax1, left=True, top=True, right=True,bottom=True)\nax1.grid(False)\nax1_xticklabels = ax1.set_xticklabels([])\nax2.grid(False)\nax2_xticklabels = ax2.set_xticklabels([])","e36e034f":"### COMPARING THE AGE OF 2019 SURVEY PARTICIPANTS - SEA, ROW ###    \n\ncolumn_tosee = \"What is your age (# years)?\"\nshort_column_tosee = \"age\"\n\n# doing all of this to get a pivot for a barh subplot!!!\nsea_nonsea_agedata = (df.groupby(['sea_tag', column_tosee])[\"sea_tag\"].count()).reset_index(name=\"count\")\nsea_nonsea_agedata.columns = [\"sea_tag\", short_column_tosee, \"count\"]\npivoted_sea_nonsea_agedata = (sea_nonsea_agedata.pivot(index='sea_tag', columns=short_column_tosee, values='count')).reset_index()\npivoted_sea_nonsea_agedata.loc[:,'Total'] = pivoted_sea_nonsea_agedata.sum(axis=1)\nanswers = df[column_tosee].dropna().unique().tolist()\nfor a in answers:\n    pivoted_sea_nonsea_agedata[a] = round((pivoted_sea_nonsea_agedata[a]\/pivoted_sea_nonsea_agedata[\"Total\"])*100, 2)\npivoted_sea_nonsea_agedata.reset_index(drop=True, inplace=True)\npivoted_sea_nonsea_agedata.set_index(\"sea_tag\", inplace=True)\npivoted_sea_nonsea_agedata = pivoted_sea_nonsea_agedata.rename_axis(None, axis=1)\npivoted_sea_nonsea_agedata = pivoted_sea_nonsea_agedata.rename_axis(None, axis=0)\npivoted_sea_nonsea_agedata = pivoted_sea_nonsea_agedata.drop(['Total'], axis=1)\npivoted_sea_nonsea_agedata = pivoted_sea_nonsea_agedata.loc[['SEA', 'RoW'], :]\n\ngridsize = (2, len(answers))\nfig = plt.figure(figsize=(20, 7))\nfig.suptitle('Age: SEA-RoW', fontsize=14)\n\nsns.set_style(\"whitegrid\")\n\nax_frames = []\ncounter = 0\nfor ans in answers:\n    ax = plt.subplot2grid(gridsize, (0, counter))\n    counter += 1\n    ax_frames.append(ax)\n\n# barh barh barh\nsns.set_style(\"whitegrid\")\npivoted_sea_nonsea_agedata.plot(kind='barh', subplots=True, sharey=True, layout=(1,len(ax_frames)), legend=False, \n                                 xticks=[], yticks=[], ax=ax_frames,\n                                 grid=False, xlim=(0, 35), edgecolor='none', fontsize=14,\n                                 color = sns.light_palette(sns.color_palette(\"Blues_r\")[0], len(ax_frames))[::-1]\n                                )\n\nsns.despine(left=False, top=True, right=True, bottom=True)\n\n# labels!!!\nfor a in ax_frames:\n    for p in a.patches:\n        patch = a.annotate(str(p.get_width())+\"%\", \n                            (p.get_width(), \n                             p.get_y() + p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (20, -12),\n                            textcoords = 'offset points'\n                            )","6cc257e9":"### COMPARING THE EDUCATION OF 2019 SURVEY PARTICIPANTS - SEA, ROW ###    \n\ncolumn_tosee = \"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\"\nshort_column_tosee = \"formal_education\"\n\n# doing all of this to get a pivot for a barh subplot!!!\nsea_nonsea_educdata = (df.groupby(['sea_tag', column_tosee])[\"sea_tag\"].count()).reset_index(name=\"count\")\nsea_nonsea_educdata.columns = [\"sea_tag\", short_column_tosee, \"count\"]\npivoted_sea_nonsea_educdata = (sea_nonsea_educdata.pivot(index='sea_tag', columns=short_column_tosee, values='count')).reset_index()\npivoted_sea_nonsea_educdata.loc[:,'Total'] = pivoted_sea_nonsea_educdata.sum(axis=1)\nanswers = df[column_tosee].dropna().unique().tolist()\nfor a in answers:\n    pivoted_sea_nonsea_educdata[a] = round((pivoted_sea_nonsea_educdata[a]\/pivoted_sea_nonsea_educdata[\"Total\"])*100, 2)\npivoted_sea_nonsea_educdata.reset_index(drop=True, inplace=True)\npivoted_sea_nonsea_educdata.set_index(\"sea_tag\", inplace=True)\npivoted_sea_nonsea_educdata = pivoted_sea_nonsea_educdata.rename_axis(None, axis=1)\npivoted_sea_nonsea_educdata = pivoted_sea_nonsea_educdata.rename_axis(None, axis=0)\npivoted_sea_nonsea_educdata = pivoted_sea_nonsea_educdata.drop(['Total'], axis=1)\npivoted_sea_nonsea_educdata = pivoted_sea_nonsea_educdata[[\n    \"No formal education past high school\", \n    \"Professional degree\",\n    \"Some college\/university study without earning a bachelor\u2019s degree\", \n    \"Bachelor\u2019s degree\", \n    \"Master\u2019s degree\", \n    \"Doctoral degree\", \n#     \"I prefer not to answer\"\n]]\npivoted_sea_nonsea_educdata.columns = [\n    \"No formal education \\npast high school\", \n    \"Professional degree\",\n    \"Some college\/university \\nstudy without earning \\na bachelor\u2019s degree\", \n    \"Bachelor\u2019s degree\", \n    \"Master\u2019s degree\", \n    \"Doctoral degree\", \n#     \"I prefer not to answer\"\n]\npivoted_sea_nonsea_educdata = pivoted_sea_nonsea_educdata.loc[['SEA', 'RoW'], :]\n\ngridsize = (2, len(pivoted_sea_nonsea_educdata.columns.tolist()))\nfig = plt.figure(figsize=(20, 10))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Formal Education: SEA-RoW', fontsize=14)\n\n\nax_frames = []\ncounter = 0\nfor ans in pivoted_sea_nonsea_educdata.columns.tolist():\n    ax = plt.subplot2grid(gridsize, (0, counter))\n    counter += 1\n    ax_frames.append(ax)\n\n# barh barh barh\nsns.set_style(\"whitegrid\")\npivoted_sea_nonsea_educdata.plot(kind='barh', subplots=True, sharey=True, layout=(1,len(ax_frames)), legend=False, \n                                 xticks=[], yticks=[], \n                                 ax=ax_frames,\n                                 grid=False, xlim=(0, 55), edgecolor='none', fontsize=14,\n                                 color = sns.light_palette(sns.color_palette(\"Blues_r\")[0], len(ax_frames))[::-1]\n                                )\n\nsns.despine(left=False, top=True, right=True, bottom=True)\n\n# labels!!!\nfor a in ax_frames:\n    for p in a.patches:\n        patch = a.annotate(str(p.get_width())+\"%\", \n                            (p.get_width(), \n                             p.get_y() + p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (20, -12),\n                            textcoords = 'offset points'\n                            )","ebc4ada8":"### COMPARING THE COMPENSATION OF 2019 SURVEY PARTICIPANTS - SEA, ROW ###    \n\ncolumn_tosee = \"new_compensation_bin\"\nshort_column_tosee = \"compensation\"\n\n# doing all of this to get a pivot for a barh subplot!!!\nsea_nonsea_compensationdata = (df.groupby(['sea_tag', column_tosee])[\"sea_tag\"].count()).reset_index(name=\"count\")\nsea_nonsea_compensationdata.columns = [\"sea_tag\", short_column_tosee, \"count\"]\npivoted_sea_nonsea_compensationdata = (sea_nonsea_compensationdata.pivot(index='sea_tag', columns=short_column_tosee, values='count')).reset_index()\npivoted_sea_nonsea_compensationdata.loc[:,'Total'] = pivoted_sea_nonsea_compensationdata.sum(axis=1)\nanswers = df[column_tosee].dropna().unique().tolist()\nfor a in answers:\n    pivoted_sea_nonsea_compensationdata[a] = round((pivoted_sea_nonsea_compensationdata[a]\/pivoted_sea_nonsea_compensationdata[\"Total\"])*100, 2)\npivoted_sea_nonsea_compensationdata.reset_index(drop=True, inplace=True)\npivoted_sea_nonsea_compensationdata.set_index(\"sea_tag\", inplace=True)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.rename_axis(None, axis=1)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.rename_axis(None, axis=0)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.drop(['Total'], axis=1)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata[[\"$0-4,999\", \"$5,000-24,999\", \"$25,000-69,999\", \"$70,000-149,999\", \"> $150,000\", \"Null\"]]\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.loc[['SEA', 'RoW'], :]\n\ngridsize = (2, len(answers))\nfig = plt.figure(figsize=(20, 7))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Annual Compensation: SEA-RoW', fontsize=14)\n\nax_frames = []\ncounter = 0\nfor ans in answers:\n    ax = plt.subplot2grid(gridsize, (0, counter))\n    counter += 1\n    ax_frames.append(ax)\n\n# barh barh barh\nsns.set_style(\"whitegrid\")\npivoted_sea_nonsea_compensationdata.plot(kind='barh', subplots=True, sharey=True, layout=(1,len(ax_frames)), legend=False, \n                                 xticks=[], yticks=[], ax=ax_frames,\n                                 grid=False, xlim=(0, 50), edgecolor='none', fontsize=14,\n                                 color = sns.light_palette(sns.color_palette(\"Blues_r\")[0], len(ax_frames))[::-1]\n                                )\n\nsns.despine(left=False, top=True, right=True, bottom=True)\n\n# labels!!!\nfor a in ax_frames:\n    for p in a.patches:\n        patch = a.annotate(str(p.get_width())+\"%\", \n                            (p.get_width(), \n                             p.get_y() + p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (20, -12),\n                            textcoords = 'offset points'\n                            )","9204d5db":"### COMPARING THE COMPENSATION OF 2019 SURVEY PARTICIPANTS - PER SEA COUNTRY ###    \n\ncolumn_tosee = \"new_compensation_bin\"\nshort_column_tosee = \"compensation\"\n\n# doing all of this to get a pivot for a barh subplot!!!\nsea_nonsea_compensationdata = (sea_countries.groupby(['In which country do you currently reside?', column_tosee])[\"In which country do you currently reside?\"].count()).reset_index(name=\"count\")\nsea_nonsea_compensationdata.columns = [\"In which country do you currently reside?\", short_column_tosee, \"count\"]\npivoted_sea_nonsea_compensationdata = (sea_nonsea_compensationdata.pivot(index='In which country do you currently reside?', columns=short_column_tosee, values='count')).reset_index()\npivoted_sea_nonsea_compensationdata.loc[:,'Total'] = pivoted_sea_nonsea_compensationdata.sum(axis=1)\nanswers = sea_countries[column_tosee].dropna().unique().tolist()\nfor a in answers:\n    pivoted_sea_nonsea_compensationdata[a] = round((pivoted_sea_nonsea_compensationdata[a]\/pivoted_sea_nonsea_compensationdata[\"Total\"])*100, 2)\npivoted_sea_nonsea_compensationdata.reset_index(drop=True, inplace=True)\npivoted_sea_nonsea_compensationdata.set_index(\"In which country do you currently reside?\", inplace=True)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.rename_axis(None, axis=1)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.rename_axis(None, axis=0)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.drop(['Total'], axis=1)\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata[[\"$0-4,999\", \"$5,000-24,999\", \"$25,000-69,999\", \"$70,000-149,999\", \"> $150,000\", \"Null\"]]\npivoted_sea_nonsea_compensationdata = pivoted_sea_nonsea_compensationdata.loc[['Viet Nam', 'Indonesia', 'Philippines', 'Malaysia', 'Thailand', 'Singapore'], :]\n\ngridsize = (2, len(answers))\nfig = plt.figure(figsize=(20, 10))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Annual Compensation per SEA Countries', fontsize=14)\n\n\nax_frames = []\ncounter = 0\nfor ans in answers:\n    ax = plt.subplot2grid(gridsize, (0, counter))\n    counter += 1\n    ax_frames.append(ax)\n\n# barh barh barh\nsns.set_style(\"whitegrid\")\npivoted_sea_nonsea_compensationdata.plot(kind='barh', subplots=True, sharey=True, layout=(1,len(ax_frames)), legend=False, \n                                 xticks=[], yticks=[], ax=ax_frames,\n                                 grid=False, xlim=(0, 50), edgecolor='none', fontsize=14,\n                                 color = '#E3692A'\n                                )\n\nsns.despine(left=False, top=True, right=True, bottom=True)\n\n# labels!!!\nfor a in ax_frames:\n    for p in a.patches:\n        patch = a.annotate(str(p.get_width())+\"%\", \n                            (p.get_width(), \n                             p.get_y() + p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (20, -12),\n                            textcoords = 'offset points'\n                            )","7d7e0047":"### COMPARING THE COMPENSATION OF 2019 SURVEY PARTICIPANTS - SEA (without singapore), ROW ###    \n\nnew_df = df[df['In which country do you currently reside?']!=\"Singapore\"]\n\ncolumn_tosee = \"new_compensation_bin\"\nshort_column_tosee = \"compensation\"\n\n# doing all of this to get a pivot for a barh subplot!!!\nsea_nonsea_compensationWOsingdata = (new_df.groupby(['sea_tag', column_tosee])[\"sea_tag\"].count()).reset_index(name=\"count\")\nsea_nonsea_compensationWOsingdata.columns = [\"sea_tag\", short_column_tosee, \"count\"]\npivoted_sea_nonsea_compensationWOsingdata = (sea_nonsea_compensationWOsingdata.pivot(index='sea_tag', columns=short_column_tosee, values='count')).reset_index()\npivoted_sea_nonsea_compensationWOsingdata.loc[:,'Total'] = pivoted_sea_nonsea_compensationWOsingdata.sum(axis=1)\nanswers = new_df[column_tosee].dropna().unique().tolist()\nfor a in answers:\n    pivoted_sea_nonsea_compensationWOsingdata[a] = round((pivoted_sea_nonsea_compensationWOsingdata[a]\/pivoted_sea_nonsea_compensationWOsingdata[\"Total\"])*100, 2)\npivoted_sea_nonsea_compensationWOsingdata.reset_index(drop=True, inplace=True)\npivoted_sea_nonsea_compensationWOsingdata.set_index(\"sea_tag\", inplace=True)\npivoted_sea_nonsea_compensationWOsingdata = pivoted_sea_nonsea_compensationWOsingdata.rename_axis(None, axis=1)\npivoted_sea_nonsea_compensationWOsingdata = pivoted_sea_nonsea_compensationWOsingdata.rename_axis(None, axis=0)\npivoted_sea_nonsea_compensationWOsingdata = pivoted_sea_nonsea_compensationWOsingdata.drop(['Total'], axis=1)\npivoted_sea_nonsea_compensationWOsingdata = pivoted_sea_nonsea_compensationWOsingdata[[\"$0-4,999\", \"$5,000-24,999\", \"$25,000-69,999\", \"$70,000-149,999\", \"> $150,000\", \"Null\"]]\npivoted_sea_nonsea_compensationWOsingdata = pivoted_sea_nonsea_compensationWOsingdata.loc[['SEA', 'RoW'], :]\npivoted_sea_nonsea_compensationWOsingdata.index = ['SEA - \\nw\/o Singapore', 'RoW']\n\ngridsize = (2, len(answers))\nfig = plt.figure(figsize=(20, 7))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Annual Compensation: SEA(w\/o Singapore)-RoW', fontsize=14)\n\nax_frames = []\ncounter = 0\nfor ans in answers:\n    ax = plt.subplot2grid(gridsize, (0, counter))\n    counter += 1\n    ax_frames.append(ax)\n\n# barh barh barh\nsns.set_style(\"whitegrid\")\npivoted_sea_nonsea_compensationWOsingdata.plot(kind='barh', subplots=True, sharey=True, layout=(1,len(ax_frames)), legend=False, \n                                 xticks=[], yticks=[], ax=ax_frames,\n                                 grid=False, xlim=(0, 50), edgecolor='none', fontsize=14,\n                                 color = sns.light_palette(sns.color_palette(\"Blues_r\")[0], len(ax_frames))[::-1]\n                                )\n\nsns.despine(left=False, top=True, right=True, bottom=True)\n\n# labels!!!\nfor a in ax_frames:\n    for p in a.patches:\n        patch = a.annotate(str(p.get_width())+\"%\", \n                            (p.get_width(), \n                             p.get_y() + p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (20, -12),\n                            textcoords = 'offset points'\n                            )","f9d702c1":"### COMPARING THE NUMBER OF 2019 SURVEY PARTICIPANTS - per ML YEARS ###    \n\ncolumn_tosee = 'For how many years have you used machine learning methods?'\nshorter_column_tosee = 'years_used_ml_methods'\n\nsea_nonsea_mlyearsdata = (sea_countries.groupby([column_tosee])[\"sea_tag\"].count()).reset_index(name=\"count\")\nsea_nonsea_mlyearsdata.columns = [shorter_column_tosee, \"count\"]\nsea_nonsea_mlyearsdata.sort_values(['count'], ascending=False, inplace=True)\nsea_nonsea_mlyearsdata.reset_index(drop=True, inplace=True)\nlength_answer = len(df[column_tosee].dropna().unique().tolist())\n\ngridsize = (length_answer, 9)\nfig = plt.figure(figsize=(30, 8))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Years using Machine Learning Methods: SEA-RoW', fontsize=14)\n\nax2 = plt.subplot2grid(gridsize, (0, 4), colspan=3, rowspan=length_answer)\nax2 = sns.barplot(x='count', y=shorter_column_tosee, data=sea_nonsea_mlyearsdata, \n                  color = \"#529FCD\"\n#                   palette=sns.light_palette(sns.color_palette(\"Blues_r\")[0], length_answer)[::-1]\n                 )\nax2_title = ax2.set_title('S.E.A. Countries')\nnew_yticks = [ax.get_text().replace(\"(\", \"\\n(\") for ax in ax2.get_yticklabels()]\nax2_new_yticks = ax2.set_yticklabels(new_yticks, {\"horizontalalignment\":\"center\", \"x\":\"-0.2\"})\nax2_ylabel = ax2.set_ylabel(\"\")\nax2_xlabel = ax2.set_xlabel(\"\")\nax2.grid(False)\nfor p in ax2.patches:\n    patch = ax2.annotate(str(int(p.get_width())), \n                        (p.get_width(), \n                         p.get_y() + p.get_height()), \n                        ha = 'center', \n                        va = 'center', \n                        xytext = (15, 25),\n                        textcoords = 'offset points'\n                        )\nsns.despine(ax=ax2, left=True, top=True, right=True,bottom=False)\n\n### COMPARING THE ML METHODS YEARS OF 2019 SURVEY PARTICIPANTS - SEA, RoW ###    \n\ngrouped_all = df.groupby([\"sea_tag\", column_tosee])[\"sea_tag\"].count().reset_index(name=\"count\")\ngrouped_all.columns = [\"sea_tag\", shorter_column_tosee, \"count\"]\nlen_sea = grouped_all.groupby(\"sea_tag\")[\"count\"].sum()[\"SEA\"]\nlen_nonsea = grouped_all.groupby(\"sea_tag\")[\"count\"].sum()[\"RoW\"]\ngrouped_all[\"count_percent\"] = grouped_all.apply(lambda row: round((row[\"count\"]\/len_sea)*100,2) if row[\"sea_tag\"]==\"SEA\" else round((row[\"count\"]\/len_nonsea)*100,2), axis=1)\n\nyticks_list = [ax.get_text() for ax in ax2.get_yticklabels()]\nposition = list(range(0,len(yticks_list)))\n\ncolors = [\"#A8A495\", \"#E3692A\"]\n\nfor po, b in zip(position, yticks_list):\n    a = plt.subplot2grid(gridsize, (po, 1), colspan=2)\n    a = sns.barplot(x = \"sea_tag\", \n                    y= \"count_percent\",\n                    data=grouped_all[grouped_all[shorter_column_tosee]==b],\n                    palette=sns.set_palette(sns.color_palette(colors))                    \n                       )\n\n    a.get_yaxis().set_visible(False)\n    a.get_xaxis().set_visible(False)\n    if po==len(yticks_list)-1:\n        a.get_xaxis().set_visible(True)\n        a_xlabel = a.set_xlabel(\"\")\n    for p in a.patches:\n        patch = a.annotate(str(p.get_height())+\"%\", \n                            (p.get_x() + p.get_width() \/ 2.0, \n                             p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (0, 5),\n                            textcoords = 'offset points')\n    a_ylim = a.set_ylim(0, 60)\n    sns.despine(ax=a, left=True, top=True, right=True,bottom=False)","222acb84":"### COMPARING THE NUMBER OF 2019 SURVEY PARTICIPANTS - per PRIMARY TOOLS ###    \n\ncolumn_tosee = 'What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'\nshorter_column_tosee = 'tool_analyze_data'\n\nsea_nonsea_ptooldata = (sea_countries.groupby([column_tosee])[\"sea_tag\"].count()).reset_index(name=\"count\")\nsea_nonsea_ptooldata.columns = [shorter_column_tosee, \"count\"]\nsea_nonsea_ptooldata.sort_values(['count'], ascending=False, inplace=True)\nsea_nonsea_ptooldata.reset_index(drop=True, inplace=True)\nlength_answer = len(df[column_tosee].dropna().unique().tolist())\n\ngridsize = (length_answer, 9)\nfig = plt.figure(figsize=(30, 8))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Primary Tool Used at Work\/School to Analyze Data: SEA-RoW', fontsize=14)\n\nax2 = plt.subplot2grid(gridsize, (0, 4), colspan=3, rowspan=length_answer)\nax2 = sns.barplot(x='count', y=shorter_column_tosee, data=sea_nonsea_ptooldata, \n                  color=\"#529FCD\"\n#                   palette=sns.color_palette(\"Blues_r\")\n                 )\nax2_title = ax2.set_title('S.E.A. Countries')\nnew_yticks = [ax.get_text().replace(\"(\", \"\\n(\") for ax in ax2.get_yticklabels()]\nax2_new_yticks = ax2.set_yticklabels(new_yticks, {\"horizontalalignment\":\"center\", \"x\":\"-0.2\"})\nax2_ylabel = ax2.set_ylabel(\"\")\nax2_xlabel = ax2.set_xlabel(\"\")\nax2.grid(False)\nfor p in ax2.patches:\n    patch = ax2.annotate(str(int(p.get_width())), \n                        (p.get_width(), \n                         p.get_y() + p.get_height()), \n                        ha = 'center', \n                        va = 'center', \n                        xytext = (15, 25),\n                        textcoords = 'offset points'\n                        )\nsns.despine(ax=ax2, left=True, top=True, right=True,bottom=False)\n\n### COMPARING THE PRIMARY TOOLS OF 2019 SURVEY PARTICIPANTS - SEA, RoW ###    \n\ngrouped_all = df.groupby([\"sea_tag\", column_tosee])[\"sea_tag\"].count().reset_index(name=\"count\")\ngrouped_all.columns = [\"sea_tag\", shorter_column_tosee, \"count\"]\nlen_sea = grouped_all.groupby(\"sea_tag\")[\"count\"].sum()[\"SEA\"]\nlen_nonsea = grouped_all.groupby(\"sea_tag\")[\"count\"].sum()[\"RoW\"]\ngrouped_all[\"count_percent\"] = grouped_all.apply(lambda row: round((row[\"count\"]\/len_sea)*100,2) if row[\"sea_tag\"]==\"SEA\" else round((row[\"count\"]\/len_nonsea)*100,2), axis=1)\n\nyticks_list = [ax.get_text().replace(\"\\n(\", \"(\") for ax in ax2.get_yticklabels()]\nposition = list(range(0,len(yticks_list)))\n\ncolors = [\"#A8A495\", \"#E3692A\"]\n\nfor po, b in zip(position, yticks_list):\n    a = plt.subplot2grid(gridsize, (po, 1), colspan=2)\n    a = sns.barplot(x = \"sea_tag\", \n                    y= \"count_percent\",\n                    data=grouped_all[grouped_all[shorter_column_tosee]==b],\n                    palette=sns.set_palette(sns.color_palette(colors))\n                       )\n\n    a.get_yaxis().set_visible(False)\n    a.get_xaxis().set_visible(False)\n    if po==5:\n        a.get_xaxis().set_visible(True)\n        a_xlabel = a.set_xlabel(\"\")\n    for p in a.patches:\n        patch = a.annotate(str(p.get_height())+\"%\", \n                            (p.get_x() + p.get_width() \/ 2.0, \n                             p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (0, 5),\n                            textcoords = 'offset points')\n    a_ylim = a.set_ylim(0, 60)\n    sns.despine(ax=a, left=True, top=True, right=True,bottom=False)","23b00be8":"### COMPARING THE NUMBER OF 2019 SURVEY PARTICIPANTS - per DS SOURCES for SEA ###    \n\nds_sources_columns = [\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Udacity',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Coursera',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - edX',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - DataCamp',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - DataQuest',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Kaggle Courses (i.e. Kaggle Learn)',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Fast.ai',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Udemy',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - LinkedIn Learning',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - University Courses (resulting in a university degree)',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - None',\n    'On which platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Other',\n]\n\nsea_dssources = sea_countries[ds_sources_columns]\ncount_allsea = len(sea_dssources)\nsea_dssources_all = pd.DataFrame()\nfor msc in ds_sources_columns:\n    dssources_ = ((sea_dssources[[msc]]).dropna().groupby(msc)[msc].count()).reset_index(name=\"count\")\n    dssources_.columns = [\"ds_sources\", \"count\"]\n    dssources_[\"count_percent\"] = round((dssources_[\"count\"]\/count_allsea)*100, 2)\n    sea_dssources_all = sea_dssources_all.append(dssources_)\nsea_dssources_all[\"sea_tag\"] = \"SEA\"\nsea_dssources_all\n\nnonsea_dssources = nonsea_countries[ds_sources_columns]\ncount_allnonsea = len(nonsea_dssources)\nnonsea_dssources_all = pd.DataFrame()\nfor msc in ds_sources_columns:\n    dssources_ = ((nonsea_dssources[[msc]]).dropna().groupby(msc)[msc].count()).reset_index(name=\"count\")\n    dssources_.columns = [\"ds_sources\", \"count\"]\n    dssources_[\"count_percent\"] = round((dssources_[\"count\"]\/count_allnonsea)*100, 2)\n    nonsea_dssources_all = nonsea_dssources_all.append(dssources_)\nnonsea_dssources_all[\"sea_tag\"] = \"RoW\"\n\nallcountries_dssources_all = pd.concat([sea_dssources_all, nonsea_dssources_all])\n\ncolumn_tosee = 'ds_sources'\nshorter_column_tosee = 'ds_sources'\n\nsea_nonsea_tooldata = (sea_dssources_all.groupby([column_tosee])[\"count\"].sum()).reset_index(name=\"count\")\nsea_nonsea_tooldata.columns = [shorter_column_tosee, \"count\"]\nsea_nonsea_tooldata.sort_values(['count'], ascending=False, inplace=True)\nsea_nonsea_tooldata.reset_index(drop=True, inplace=True)\nlength_answer = len(sea_dssources_all[column_tosee].dropna().unique().tolist())\n\ngridsize = (length_answer, 9)\nfig = plt.figure(figsize=(30, 10))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Data Science Courses: SEA-RoW', fontsize=14)\n\nax2 = plt.subplot2grid(gridsize, (0, 4), colspan=3, rowspan=length_answer)\nax2 = sns.barplot(x='count', y=shorter_column_tosee, data=sea_nonsea_tooldata, \n                  color = \"#529FCD\"\n#                   palette=sns.light_palette(sns.color_palette(\"Blues_r\")[0], length_answer)[::-1]\n                 )\nax2_title = ax2.set_title('S.E.A. Countries')\nnew_yticks = [ax.get_text().replace(\"(\", \"\\n(\") for ax in ax2.get_yticklabels()]\nax2_new_yticks = ax2.set_yticklabels(new_yticks, {\"horizontalalignment\":\"center\", \"x\":\"-0.2\"})\nax2_ylabel = ax2.set_ylabel(\"\")\nax2_xlabel = ax2.set_xlabel(\"\")\nax2.grid(False)\nfor p in ax2.patches:\n    patch = ax2.annotate(str(int(p.get_width())), \n                        (p.get_width(), \n                         p.get_y() + p.get_height()), \n                        ha = 'center', \n                        va = 'center', \n                        xytext = (15, 18),\n                        textcoords = 'offset points'\n                        )\nsns.despine(ax=ax2, left=True, top=True, right=True,bottom=False)\n\n### COMPARING THE NUMBER OF 2019 SURVEY PARTICIPANTS - per DS SOURCES for SEA, RoW ###    \n\ngrouped_all = allcountries_dssources_all\n\nyticks_list = [ax.get_text().replace(\"\\n(\", \"(\") for ax in ax2.get_yticklabels()]\nposition = list(range(0,len(yticks_list)))\n\npalette=sns.set_palette(sns.color_palette(colors))\n\ncolors = [\"#A8A495\", \"#E3692A\"]\n\nfor po, b in zip(position, yticks_list):\n    a = plt.subplot2grid(gridsize, (po, 1), colspan=2)\n    a = sns.barplot(x = \"sea_tag\", \n                    y= \"count_percent\",\n                    data=grouped_all[grouped_all[shorter_column_tosee]==b],\n                    palette=sns.set_palette(sns.color_palette(colors))\n                       )\n\n    a.get_yaxis().set_visible(False)\n    a.get_xaxis().set_visible(False)\n    if po==len(yticks_list)-1:\n        a.get_xaxis().set_visible(True)\n        a_xlabel = a.set_xlabel(\"\")\n    for p in a.patches:\n        patch = a.annotate(str(p.get_height())+\"%\", \n                            (p.get_x() + p.get_width() \/ 2.0, \n                             p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (0, 5),\n                            textcoords = 'offset points')\n    a_ylim = a.set_ylim(0, 60)\n    sns.despine(ax=a, left=True, top=True, right=True,bottom=False)","cd73320f":"### COMPARING THE NUMBER OF 2019 SURVEY PARTICIPANTS - per MEDIA SOURCES for SEA, RoW ###    \n\nmedia_sources_columns = [\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Twitter (data science influencers)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Hacker News (https:\/\/news.ycombinator.com\/)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Reddit (r\/machinelearning, r\/datascience, etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Kaggle (forums, blog, social media, etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Course Forums (forums.fast.ai, etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - YouTube (Cloud AI Adventures, Siraj Raval, etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Podcasts (Chai Time Data Science, Linear Digressions, etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Blogs (Towards Data Science, Medium, Analytics Vidhya, KDnuggets etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Journal Publications (traditional publications, preprint journals, etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Slack Communities (ods.ai, kagglenoobs, etc)',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - None',\n    'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Other',\n]\n\nsea_mediasources = sea_countries[media_sources_columns]\ncount_allsea = len(sea_mediasources)\nsea_mediasources_all = pd.DataFrame()\nfor msc in media_sources_columns:\n    mediasources_ = ((sea_mediasources[[msc]]).dropna().groupby(msc)[msc].count()).reset_index(name=\"count\")\n    mediasources_.columns = [\"media_sources\", \"count\"]\n    mediasources_[\"count_percent\"] = round((mediasources_[\"count\"]\/count_allsea)*100, 2)\n    sea_mediasources_all = sea_mediasources_all.append(mediasources_)\nsea_mediasources_all[\"sea_tag\"] = \"SEA\"\nsea_mediasources_all\n\nnonsea_mediasources = nonsea_countries[media_sources_columns]\ncount_allnonsea = len(nonsea_mediasources)\nnonsea_mediasources_all = pd.DataFrame()\nfor msc in media_sources_columns:\n    mediasources_ = ((nonsea_mediasources[[msc]]).dropna().groupby(msc)[msc].count()).reset_index(name=\"count\")\n    mediasources_.columns = [\"media_sources\", \"count\"]\n    mediasources_[\"count_percent\"] = round((mediasources_[\"count\"]\/count_allnonsea)*100, 2)\n    nonsea_mediasources_all = nonsea_mediasources_all.append(mediasources_)\nnonsea_mediasources_all[\"sea_tag\"] = \"NON-SEA\"\n\nallcountries_mediasources_all = pd.concat([sea_mediasources_all, nonsea_mediasources_all])\n\ncolumn_tosee = 'media_sources'\nshorter_column_tosee = 'media_sources'\n\nsea_nonsea_tooldata = (sea_mediasources_all.groupby([column_tosee])[\"count\"].sum()).reset_index(name=\"count\")\nsea_nonsea_tooldata.columns = [shorter_column_tosee, \"count\"]\nsea_nonsea_tooldata.sort_values(['count'], ascending=False, inplace=True)\nsea_nonsea_tooldata.reset_index(drop=True, inplace=True)\n\nlength_answer = len(sea_mediasources_all[column_tosee].dropna().unique().tolist())\n\ngridsize = (length_answer, 9)\nfig = plt.figure(figsize=(30, 10))\nsns.set_style(\"whitegrid\")\nfig.suptitle('Media Sources: SEA-RoW', fontsize=14)\n\nax2 = plt.subplot2grid(gridsize, (0, 4), colspan=3, rowspan=length_answer)\nax2 = sns.barplot(x='count', y=shorter_column_tosee, data=sea_nonsea_tooldata,\n                  color = \"#529FCD\"\n#                   palette=sns.light_palette(sns.color_palette(\"Blues_r\")[0], length_answer)[::-1]\n                 )\nax2_title = ax2.set_title('S.E.A. Countries')\nnew_yticks = [ax.get_text().replace(\"(\", \"\\n(\").replace(\"Time Data Science,\", \"Time Data Science,\\n\").replace(\"Medium,\", \"Medium,\\n\").replace(\"publications,\", \"publications,\\n\") for ax in ax2.get_yticklabels()]\nax2_new_yticks = ax2.set_yticklabels(new_yticks, {\"horizontalalignment\":\"center\", \"x\":\"-0.2\"})\nax2_ylabel = ax2.set_ylabel(\"\")\nax2_xlabel = ax2.set_xlabel(\"\")\nax2.grid(False)\nfor p in ax2.patches:\n    patch = ax2.annotate(str(int(p.get_width())), \n                        (p.get_width(), \n                         p.get_y() + p.get_height()), \n                        ha = 'center', \n                        va = 'center', \n                        xytext = (15, 17),\n                        textcoords = 'offset points'\n                        )\nsns.despine(ax=ax2, left=True, top=True, right=True,bottom=False)\n\n### COMPARING THE NUMBER OF 2019 SURVEY PARTICIPANTS - per MEDIA SOURCES for SEA, RoW ###    \n\ngrouped_all = allcountries_mediasources_all\n\nyticks_list = [ax.get_text().replace(\"\\n\", \"\") for ax in ax2.get_yticklabels()]\nposition = list(range(0,len(yticks_list)))\n\ncolors = [\"#A8A495\", \"#E3692A\"]\n\nfor po, b in zip(position, yticks_list):\n    a = plt.subplot2grid(gridsize, (po, 1), colspan=2)\n    a = sns.barplot(x = \"sea_tag\", \n                    y= \"count_percent\",\n                    data=grouped_all[grouped_all[shorter_column_tosee]==b],\n                    palette=sns.set_palette(sns.color_palette(colors))\n                       )\n\n    a.get_yaxis().set_visible(False)\n    a.get_xaxis().set_visible(False)\n    if po==len(yticks_list)-1:\n        a.get_xaxis().set_visible(True)\n        a_xlabel = a.set_xlabel(\"\")\n    for p in a.patches:\n        patch = a.annotate(str(p.get_height())+\"%\", \n                            (p.get_x() + p.get_width() \/ 2.0, \n                             p.get_height()), \n                            ha = 'center', \n                            va = 'center', \n                            xytext = (0, 5),\n                            textcoords = 'offset points')\n    a_ylim = a.set_ylim(0, 70)\n    sns.despine(ax=a, left=True, top=True, right=True,bottom=False)","423ec539":"<iframe src=\"https:\/\/www.facebook.com\/plugins\/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fdostpcieerd%2Fposts%2F1653473791456364&width=500\" width=\"500\" height=\"616\" align=\"middle\" style=\"border:none;overflow:hidden\" scrolling=\"no\" frameborder=\"0\" allowTransparency=\"true\" allow=\"encrypted-media\"><\/iframe>\n<p style=\"text-decoration:none;font-size:50%;text-align:center;color:gray;\">Source: DOST PCIEERD (\"https:\/\/www.facebook.com\/plugins\/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fdostpcieerd%2Fposts%2F1653473791456364&width=500)<\/p>","829f9a61":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>3.3. Government Initiatives: Driving Adoption<\/b><\/font> <\/div>\n<br>\n\nGovernments play a crucial role in furthering DS adoption. Take for example, the Singaporean government supported and pushed Singapore into a flourishing AI adoption. This enabled Singapore to implement, test and improve on several emerging technology solutions.<sup>13<\/sup>\n\nJust this year in the Philippines, the country's Department of Science and Technology launched a program called \"Smarter Philippines Through Data Analytics R&D, Training and Adoption\"(SPARTA). The program aims to train 30,000 indvidiuals on data science and analytics over a period of three years. The opportunitiy will be offered to people from the government, academe and from the business process outsourcing (BPO) industry. <sup>14<\/sup>","816884a5":"Unsurprisingly, the annual compensation of SEA kagglers is relatively lower than the rest of the respondents. The highest share of SEA kagglers (25%) reported annual compensations of less than USD 5,000. In contrast, the highest share of non-SEA kagglers (16%) reported annual compensations of USD 25,000 - 69,000. This may be attributed to the lower cost of living (on average) in SEA. \n\nIn an article from WorldData.info, as compared to the United States (which was used as the benchmark at 100 index), Singapore was identified as having the highest cost of living index in SEA with 95.8. In comparison, the Philippines had the lowest cost of living index of 44.3 among the SEA countries identified in the report. Other SEA countries identified in the article (Indonesia, Vietnam, Malaysia, Cambodia and Thailand) had a cost of living index ranging from 44.7-61.8.<sup>11<\/sup>","92f1db74":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>2.4. Tools and Experience<\/b><\/font> <\/div>\n<br>\nUnsurprisingly, kagglers in the SEA region have less experience when it comes to implementing ML methods compared to the rest of the respondents.","b308415a":"\n<p style=\"text-decoration:none;font-size:50%;text-align:left;color:gray;\">Source: Asia Partners (https:\/\/www.techinasia.com\/southeast-asias-golden-age)<\/p>","e50334fb":"Our notebook combines published articles about the region, some of my experiences as a data scientist in the Philippines, and the 2019 ML and DS Survey results. Here are some key realizations:\n\n* <b>Ripe for Technological Advancements.<\/b> The region is experiencing a digital shift that is a prime time for the implementation of DS\/AI. Companies are starting to embrace the adoption of more data-driven and technologically advance solutions. This presents opportunities a plenty.\n* <b>Different Pace, Same direction.<\/b> Southeast asian countries are experiencing the same growth and improvement. However, there are still a lot of disparity in terms of technological advancements and (surprisingly) even in gender disparity. Singapore is the hub for the region while the other countries are still catching up. These differences across countries in the region should present itself as an opportunity for countries to learn from one another.\n* <b>Young Talent Should be Honed.<\/b> DS\/AI talent, albeit young, is present in the region. The number of individuals seeking courses for training suggest that the younger generation is interested in the field. Private companies are enticing these individuals, but government agencies should be able to push the country as a whole towards DS\/AI adoption.\n\nI admit that my sources are not enough to paint a genuine landscape of the region. However, it gives us the puzzle pieces of a bigger picture. Hopefully, other SEA kagglers (especially those in underrepresented markets) can read this and share their own experiences.\n\nThank you so much for reading my notebook! And from the teacher in me, I hope you learned a thing or two about our wonderful region! \n\nP.S. Our food is really good!\n<br>\n<br>\n<hr style=\"background-color:#E3692A;height:1px\">","0820747d":"## **References**","c30a20da":"1. https:\/\/www.worldometers.info\/world-population\/south-eastern-asia-population\/\n2. https:\/\/www.thinkwithgoogle.com\/_qs\/documents\/8600\/e-Conomy_SEA_2019_Report.pdf\n3. https:\/\/www.forbes.com\/sites\/jonathanmoed\/2018\/07\/12\/a-guide-to-southeast-asias-thriving-startup-ecosystem-heres-what-you-need-to-know\/#3d9465e6e181\n4. https:\/\/analyticsindiamag.com\/study-state-of-analytics-in-south-east-asia-2019\/\n5. https:\/\/www.mckinsey.com\/~\/media\/McKinsey\/Featured%20Insights\/Artificial%20Intelligence\/AI%20and%20SE%20ASIA%20future\/Artificial-intelligence-and-Southeast-Asias-future.ashx\n6. https:\/\/asgard.vc\/global-ai\/\n7. https:\/\/www.cio.com\/article\/3311756\/how-is-artificial-intelligence-benefiting-industries-throughout-southeast-asia.html\n8. https:\/\/jfgagne.ai\/talent-2019\/)\n9. https:\/\/www.techinasia.com\/southeast-asias-golden-age\n10. https:\/\/investinginwomen.asia\/posts\/mixed-gender-gap-data-south-east-asia\/\n11. https:\/\/www.worlddata.info\/cost-of-living.php\n12. https:\/\/www.hrinasia.com\/press-release\/grab-launches-first-ever-ai-for-southeast-asia-challenge\/\n13. https:\/\/www.cio.com\/article\/3311756\/how-is-artificial-intelligence-benefiting-industries-throughout-southeast-asia.html\n14. https:\/\/www.dap.edu.ph\/moa-signing-for-the-project-sparta\/","5dfef3ba":"Almost half of the kagglers in the SEA region only have a bachelor's degree while the rest of the world has more master's and doctoral degree. In Philippines, taking a post-graduate degree is uncommon. Children who finished their degrees are expected to help in the finances of the entire family when they start working.","c372a5a2":"Although majority of the kagglers are already using local development environments, when comparing it to the rest of the respondents, there are notable differences in the other tools that they are using. Twenty four percent (24%) of SEA kagglers uses basic statistical softwares like Microsoft Excel and Google Sheets. This is larger compared to the rest of the repondents at 19%. However, implementation of cloud-based data softwares and APIs are lower in SEA kagglers at 4% compared to the rest of the respondents at 7%.","fa8fe243":"From the survey dataset, only 6 SEA countries are represented (out of a total of 11 SEA countries), with a total of 59 countries represented in the dataset. Respondents from SEA comprise 3% (653 out of 19,717) of the total kaggler respondents. This is comparatively lower than the representation of the region's total population at 9% versus world wide population. Consistent with the report with Tech in Asia, Singapore and Vietnam have a larger share of SEA kaggler responders. Indonesia topped the region in number of kaggler responders - this may be due to the good penetration of kaggle amongst the data community in the country.","6dc41a59":"SEA kagglers are seeking out different learning platforms and media sources in order to continuously learn and be up to date with topics in the data science field.","5fae0129":"## **Challenge: Untapped Potential**","70dd0c4f":"Further inspection of annual compensation per country shows countries have different distributions with Singapore having more kagglers that receive higher annual compensation.","c9586f79":"## **Opportunities: Emerging Markets are Fertile for DS\/AI Adoption**","6bb06ecb":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>2.3. Age, Education and Salary<\/b><\/font> <\/div>\n<br>\n\n\nKagglers in the SEA region are relatively younger with around 60% falling from 18 to 29 years old compared to only 50% falling under the same age range from the rest of the respondents. This is not surprising given the recency of the data science field in the region","29e37877":"For news and reports, Kagglers from our survey use Kaggle and Blogs the most to keep up with the latest in the field.","7a142153":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>2.2. Gender Disparity<\/b><\/font> <\/div>\n<br>\nIn 2018, Southeast Asia was reported to have a 42% female workforce participation - this is higher than the global average of 39% - attributed to the cultural shifts that Southeast Asia has experienced in the past decades.<sup>10<\/sup>\n\nHowever, considerable variations of gender parity persists throughout the region. In the Global Gender Gap Report of 2019, the Philippines ranked 8th (out of 149 countries) in closing the gender gap on four pillars: economic participation and opportunity, educational attainment, health and survival, and political empowerment. Laos ranked 26th while the remaining countries range from 67th to 101st rank. <sup>10<\/sup>\n\nThis insight should not discount the fact that, specifically for data science, women are still under represented. In my team at work, only 2 out of 7 data scientist are women.\n\nSimilar trends can be seen region-wide and at a country level from the survey. Only 16% of the respondents from non-SEA region countries are female. The SEA region slightly outperforms non-SEA region countries with 20% of the respondents being female. Though a significant improvement at 32%, the ratio of Philippine female kagglers to their male counterparts still falls below the Southeast Asia female to male ratio in the work force and the global average.","694dbd96":"Southeast Asia (SEA) is located east of the Indian subcontinent and south of China. The region is composed of 11 countries: Brunei, Cambodia, East Timor, Indonesia, Laos, Malaysia, Myanmar, Philippines, Singapore, Thailand and Vietnam.\n\n<img src=\"https:\/\/www.arnaudbonzom.com\/wp-content\/uploads\/2019\/10\/Southeast-Asia.jpg\" width=\"600\"\/>\n<p style=\"text-decoration:none;font-size:50%;text-align:center;color:gray;\">Source: Arnaud Bonzom (https:\/\/www.arnaudbonzom.com\/wp-content\/uploads\/2019\/10\/Southeast-Asia.jpg)<\/p>\n\nThe region accounts for almost 9% (664,732,024) of the world's population with 49.5 % of the population population living in urban areas. The median age in South-Eastern Asia is 29.1 years. <sup>1<\/sup>","e54e62d6":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>1.1. Digital Shift<\/b><\/font> <\/div>\n<br>\nMore than half of Southeast Asia's population is under 30 years old with 90% of this group having internet access, classified as tech-savvy and heavy internet users.<sup>2<\/sup>  In the 2019 e-Conomy SEA report covering the largest markets in the region (Indonesia, Malaysia, Philippines, Singapore, Thailand and Vietnam), it was found that there are 360 million internet users in southeast asia and were the most engaged mobile internet users in the world. <sup>3<\/sup>\n\nThe region's move towards digital gave rise to financial technology and digital banking sector. A survey based on enterprise-level companies in the region by Analytics India Magazine revealed that the analytics and data science industry is estimated at $6.8 Billion in market size. The finance and banking sector accounted as the biggest adopter of analytics and AI solutions at 35%. <sup>4<\/sup>\n\n<img src=\"https:\/\/cdn.shortpixel.ai\/client\/to_webp,q_lossless,ret_img,w_810\/https:\/\/analyticsindiamag.com\/wp-content\/uploads\/2019\/02\/G2.png\" width=\"600\"\/>\n<p style=\"text-decoration:none;font-size:50%;text-align:center;color:gray;\">Source: Analytics India Magazine (https:\/\/cdn.shortpixel.ai\/client\/to_webp,q_lossless,ret_img,w_810\/https:\/\/analyticsindiamag.com\/wp-content\/uploads\/2019\/02\/G2.png)<\/p>","3a0aa717":"<hr style=\"background-color:#E3692A;height:1px\">\n<br>\n\"What would you do with your degree? Teach?\"\n\nEntering the University of the Philippines in 2006, these are the questions I would get from aunts and uncles after telling them that I was taking a degree in Physics. Early in my university days, the response usually would be \"Teaching would be nice.\" Coming from a developing country with a relatively small science and technology industry, pursuing a Physics degree is uncommon. My batch of Physics undergraduates numbered in the tens (as compared to other \"more professional\" courses which numbers in the hundreds).\n\nMotivated by love for the field, I finished my degree, uncertain what opportunities would open to me after I graduated. Fast forward to 2019, I am now a Physicist by training, a Data Scientist by profession and a Teacher at heart (which means whenever the opportunity presents itself).\n\nRecently, I have taught some beginner programming classes to aspiring data scientist. The large number of students is not surprising as the demand for the role has increased. However, from my experience in trying to find people to add to our team and from my experience with recruiters letting me know of a new potential role, I know that the number of practitioners are not enough. This raises the question, how are the Filipino data scientists, and more broadly, the Southeast Asians matching up with other countries?\n<br>\n<br>\n<hr style=\"background-color:#E3692A;height:1px\">\n<br>\nIn this notebook, we will be exploring the opportunities, challenges and current solutions of Southeast Asia in the field of data science. We will be tackling these things and while overlaying the results of the 2019 Kaggle ML & DS Survey.\n<ol>      \n  <li><b>Opportunities: Emerging Markets are Fertile for DS\/AI Adoption<\/b>\n    <ol>\n      <dd>1.1. &nbsp;&nbsp;Digital Shift<\/dd>\n      <dd>1.2. &nbsp;Private Companies are Adopting<\/dd>\n    <\/ol>\n      \n  <li><b>Challenges: Untapped Potential<\/b>\n    <ol>\n      <dd>2.1. &nbsp;&nbsp;DS Practitioners<\/dd>\n      <dd>2.2. &nbsp;Gender Disparity<\/dd>\n      <dd>2.3. &nbsp;Age, Education and Salary<\/dd>\n      <dd>2.4. &nbsp;Workplace Tools<\/dd>\n    <\/ol>\n  \n  <li><b>Solutions: Coming Together<\/b>\n    <ol>\n      <dd>3.1. &nbsp;&nbsp;Individual Development: Self-Improvement<\/dd>\n      <dd>3.2. &nbsp;Private Companies: Enticing Professionals<\/dd>\n      <dd>3.3. &nbsp;Government Initiatives: Driving Adoption<\/dd>\n    <\/ol>\n\n  <li><b>Conclusion<\/b>\n  \n  <li><b>References<\/b>\n<br>\n    <br>\n<hr style=\"background-color:#E3692A;height:1px\">","1fd44f44":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>2.1. DS Practitioners<\/b><\/font> <\/div>\n<br>\nCompared to other countries, data science practitioners in the region take a small share of the total DS talent. In a Global AI Talent Report for 2019, the top five countries that accounts for 71.62% of machine learning paper authors in 2018 are from only five countries, namely, the United States, China, the United Kingdom, Germany and Canada. The SEA region, represented by Singapore, Malaysia, Thailand and Vietnam, accounted for only 1.45%.<sup>8<\/sup>\n\nA 2019 Asia Partners report shared by Tech in Asia<sup>9<\/sup> shows the number of tech talents in 6 countries in Southeast Asia. Singapore and Vietnam was identified with the most number of tech talents, with the Philippines at a tier lower.","b0bc621d":"However, AI adoption in the SEA region still lags behind powerhouses like US and China. Interestingly, the level of adoption in Southeast asia is not consistent throughout the region. Singapore leads the pack with Vietnam and Malaysia recently making significant progress in the past years. In a 2017 report produced by Asgard<sup>6<\/sup> ranking countries by the number of AI startups, Singapore made the top 20 countries, ranking 14th world wide. For the rest of the block, the adoption rates have been slower. Although these countries realise the potential benefits that AI has to offer, they still lack the necessary infrastructure for adoption.<sup>7<\/sup>\n<br>\n<br>\n<hr style=\"background-color:#E3692A;height:1px\">","543067ca":"If we remove Singapore in our comparison, the numbers of SEA kagglers with annual compensations of less than USD 5,000 rises to 28% from 25% and SEA kagglers with annual compensations of USD 5,000 - 24,999 rises to 21% from 18%","e65c57c0":"<hr style=\"background-color:#E3692A;height:1px\">","ca55f2bb":"## **Learnings**","288b1aa9":"<img src=\"https:\/\/www.amstat.org\/images\/asaimages\/news\/dataWave.png\" width=\"600\"\/>\n<p style=\"text-decoration:none;font-size:50%;text-align:center;color:gray;\">Source: American Statistical Association (www.amstat.org\/images\/asaimages\/news\/dataWave.png)<\/p>\n<div style=\"text-align: center;\" markdown=\"1\"><font size=\"5\"><b>Data Scientists in SEA: Are there enough and are they enough? <\/b><\/font> <\/div>","e9daf382":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>3.1. Individual Development: Self-Improvement<\/b><\/font> <\/div>\n<br>\nIn the past few years, schools in the Philippines have started offering analytics or data science courses in order to keep up with the demand. Fortunately for me, I graduated from Physics, which trained me in mathematical methods and computational programming. This enabled me to transition to the DS industry relatively easily.\n\nThat doesn't mean I can rely only on my university courses to do well with work. We all know that data science is a field that requires knowledge on a vast range of topics. I make it a point to keep on exploring approaches and fields that I have not yet tried (which is a lot!). One of my most memorable courses is Andrew Ng's Machine Learning course from Coursera where I took pleasure in stopping the videos to derive the equations.\n\nA similar behavior can be seen from our kagglers, where most people seek out coursera as their learning platform. This is followed by Kaggle Learn and DataCamp.","5886c9c3":"<hr style=\"background-color:#E3692A;height:1px\">","c4078e9b":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>3.2. Private Companies: Enticing Professionals<\/b><\/font> <\/div>\n<br>\n\nPrivate companies also initiate talks, meet ups and DS challenges in order to help develop the talent in the region and, of course, recruit data scientists into their company. Nevertheless, these provide good avenues for the community to learn and develop their skills.\n\nSoutheast Asia's leading ride-hailing app, Grab, launched \"AI for SEA\". This challenge was aimed to drive Southeast Asia forward by using AI in solving the region's biggest transportation-related problems. Cash prizes were offered to the top 5 individuals, while full-time positions at the company were offered to the top 50 participants.<sup>12<\/sup>\n\n<img src=\"https:\/\/i.ytimg.com\/vi\/7BL8EeAkNDw\/maxresdefault.jpg\" width=\"600\"\/>\n<p style=\"text-decoration:none;font-size:50%;text-align:center;color:gray;\">Source: Grab (https:\/\/i.ytimg.com\/vi\/7BL8EeAkNDw\/maxresdefault.jpg)<\/p>","585c4fd8":"<div style=\"text-align: left;\" markdown=\"1\"><font size=\"4\"><b>1.2. Private Companies are Adopting<\/b><\/font> <\/div>\n<br>\nWith the acceleration of digitization comes the start of AI adoption. Reports have identified an increase in AI adoption by companies in Southeast Asia in the last decade. In a Mckinsey Global Institute study in 2018, the number of companies that mentioned \u201cbig data\u201d, \u201cadvanced analytics\u201d, \u201cAI\u201d, \u201cmachine learning\u201d, and the \u201cinternet of things\u201d in their annual reports increased from 6% in 2011 to around 33% in 2016 - attributed to the positive outcomes of adoption in companies.<sup>5<\/sup>\n\nThe increase in AI adoption in the region is also reflected in the number of SEA survey participants. From 2017 to 2019, the share grew by 0.5 percentage points.","e466c6d0":"One of the companies I worked for gave me the opportunity to work with European data scientists. This gave me the chance to learn different approaches and industry best practices, things which would be difficult to learn on your own and from local business practices.\n\nUnsurprisingly (and unforunately), a lot of the data scientists I know have decided to pursue their studies and work overseas for better training and opportunities. This was a common occurrence in the academe where my colleagues take their chances overseas to pursue post graduate degrees and eventually settle there to continue their careers. I thought it would be different in the work place. But it is not. For Filipinos, if someone wants to develop their passion, they would seek all opportunities to develop it. And sometimes, these opportunities cannot be found in their own country.","58c67667":"## **Solution: Coming Together**"}}