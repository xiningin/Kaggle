{"cell_type":{"b4b194c7":"code","ba9b975c":"code","b760ea6c":"code","f839de3f":"code","8dab0884":"code","3cbf6c7b":"code","3d1f450e":"code","f7c4bfac":"code","1562b55a":"code","e50f82f5":"code","3f1b2682":"code","f3860af3":"code","3238be39":"code","e672dbdb":"code","31cd69ce":"code","5967aefa":"code","392a9843":"code","5668b5c4":"code","41edde21":"code","e7a1bd33":"code","09f12118":"code","bfd505f3":"code","205a8d4c":"code","08870fbe":"code","90854623":"code","6139fab7":"code","5ac6c47f":"code","2484c738":"code","03d88b5f":"code","06ad5933":"code","a011033f":"code","b89a680d":"code","94733a64":"code","8a353669":"code","18a0fdba":"code","e384c99b":"code","72770171":"code","5e605290":"markdown","e3113197":"markdown","edcebe2f":"markdown","a3283441":"markdown","e3087c02":"markdown","d221d180":"markdown","0247f430":"markdown","ca0d6a4a":"markdown","14d5342c":"markdown","f48d5a2b":"markdown","1a71f811":"markdown","3d9547bb":"markdown","62051cdb":"markdown","7d9a7211":"markdown","058ba4c3":"markdown","8b357de4":"markdown","e7314905":"markdown","a41ea703":"markdown","f7789d33":"markdown","9f0c3b85":"markdown","3efa0cf5":"markdown","8aaefca6":"markdown","5ca9111b":"markdown","b26e4998":"markdown","db4b7e40":"markdown","486aeecf":"markdown","d0b2bc56":"markdown","08e521c4":"markdown","90cd95dd":"markdown","46d6b5d9":"markdown","5e20dc6a":"markdown","913b5396":"markdown","b6ce4d5c":"markdown"},"source":{"b4b194c7":"# Importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","ba9b975c":"iris = sns.load_dataset('iris')\ntitanic = sns.load_dataset('titanic')","b760ea6c":"# preview of the iris dataset\niris.head()","f839de3f":"# lets try to visualize features sepal length & width to better understand the data\nsns.relplot(x= 'sepal_length', y= 'sepal_width', data=iris)","8dab0884":"# let us add another dimension - the species dimension using 'hue'\nsns.relplot(x= 'sepal_length', y='sepal_width', hue='species', data=iris)","3cbf6c7b":"# visualizing petal length & width\nsns.relplot(x= 'petal_length', y='petal_width', size='species', data=iris)","3d1f450e":"# creating a time series dataset\ntime = pd.DataFrame(dict(time = np.arange(500), value = np.random.randn(500).cumsum()))","f7c4bfac":"# plotting the time series using a line chart\nsns.relplot(x= 'time', y= 'value', kind= 'line', data= time)","1562b55a":"# Preview of the titanic dataset\ntitanic.head()","e50f82f5":"# when there are multiple measurements for the same value \n# ex. in the Titanic database- mulitple 'fare' values for the same 'class'\n# seaorn creates a confidence interval to represent them\nsns.relplot(x= 'pclass', y= 'fare', kind= 'line', data = titanic)","3f1b2682":"# The CI (confidence interval) feature can be turned off using: None\n# It can be changed to standard deviation to represent the distribution at each classification using: 'sd'\n\nsns.relplot(x= 'pclass', y= 'fare', kind= 'line', ci= None, data = titanic)","f3860af3":"# segregating the fare v. pclass according to sex of the passenger\nsns.relplot(x= 'pclass', y= 'fare', kind= 'line', hue='sex', data= titanic)","3238be39":"# we can add another variable in this if required using 'event' property\nsns.relplot(x= 'pclass', y= 'fare', kind= 'line', hue='sex', style= 'survived', ci= None, data= titanic)","e672dbdb":"# Changing the color palette\n# For a comprehensive list of color palettes, kindly visit the documentation. Link provided at the beginning\npalette = sns.cubehelix_palette(light = .7, n_colors= 2)\nsns.relplot(x= 'pclass', y= 'fare', kind= 'line', hue='sex', style= 'survived', palette= palette, ci= None, data= titanic)","31cd69ce":"# We use the 'col' feature to create a multi plot graph\n# Here each graph\/column represents a different classification and the 'x' and 'y' are plotted for each \nsns.relplot(x= 'age', y= 'fare', col='survived', data= titanic)","5967aefa":"# we can add additional features, as we did earlier\nsns.relplot(x= 'age', y= 'fare', col='survived', hue= 'sex', data= titanic)","392a9843":"# Default plot with catplot is scatterplot\n# This helps in visualizing categorical variables\nsns.catplot(x= 'sex', y= 'age', data= titanic)","5668b5c4":"# We can control the magnitude of jitter using the 'jitter' feature\nsns.catplot(x= 'sex', y= 'age', jitter= False, data= titanic)","41edde21":"# For small datasets, we can check the distribution of the data using 'swarm' plot\nsns.catplot(x= 'sex', y= 'age', kind= 'swarm', data= titanic)","e7a1bd33":"# we can further add more features in the plot using options like 'hue'\nsns.catplot(x= 'survived', y= 'age', kind= 'swarm', hue= 'sex', data= titanic)","09f12118":"# visualizing a subset of the data\nsns.catplot(x= 'survived', y= 'age', kind= 'swarm', hue= 'sex', data= titanic.query('pclass==1'))","bfd505f3":"# Age wise distribution in each class\nsns.catplot(x= 'pclass', y= 'age', kind= 'box', data= titanic)","205a8d4c":"# Adding additional feature \nsns.catplot(x= 'pclass', y= 'age', hue= 'sex', kind= 'box', data= titanic)","08870fbe":"# A better distribution plot is boxen plot for larger datasets, it sshows the shape of distribution as well\nsns.catplot(x= 'pclass', y= 'age', kind= 'boxen', data= titanic)","90854623":"# A violin plot provides distribution along with IQR plot embedded in it\nsns.catplot(x= 'pclass', y= 'age', kind= 'violin', data= titanic)","6139fab7":"# We can combine swarm and violin plot to show individual points in the distribution\ng = sns.catplot(x= 'pclass', y= 'age', kind= 'violin', inner= None, data= titanic)\nsns.swarmplot(x= 'pclass', y= 'age', color= 'k', data= titanic, ax= g.ax)","5ac6c47f":"sns.catplot(x=\"sex\", y=\"survived\", hue=\"class\", kind=\"bar\", data=titanic)","2484c738":"# When we want to show the number of observations in each category without creating a quantitative variable\nsns.catplot(x= 'deck', kind= 'count', palette= 'ch:.25', data= titanic)","03d88b5f":"# Adding more variables in our analysis\nsns.catplot(x= 'class', kind= 'count', hue='sex', palette= 'pastel', data= titanic)","06ad5933":"sns.catplot(x= 'sex', y= 'survived', hue= 'class', kind= 'point', data= titanic)","a011033f":"sns.catplot(x= 'class', y= 'age', hue='sex', col= 'survived', kind= 'swarm', data= titanic)","b89a680d":"# Creating a variable with gaussian distribution\nx= np.random.normal(size= 100)\n# Plotting a histogram and a kernel density estimate\nsns.distplot(x)","94733a64":"# Plotting a histogram along with a small vertical tick at each observation\nsns.distplot(x, bins=20, kde= False, rug= True)","8a353669":"# In multi dimensional data, a useful approach is to draw multiple instances of the same plot on different subsets of the dataset\n# The followng command is used to initialize the FacetGrid object with dataframe and row, column, hue \ng= sns.FacetGrid(titanic, col= 'survived', hue= 'sex')\n# Adding the kind of plot and features to visualize using the 'map' function\ng.map(plt.scatter, 'deck', 'age')\ng.add_legend()","18a0fdba":"# We can change features like height and aspect to alter the look and feel of the plot\ng= sns.FacetGrid(titanic, col= 'survived', height= 5, aspect= .6)\ng.map(sns.barplot, 'sex', 'fare')","e384c99b":"g= sns.PairGrid(iris)\ng.map(plt.scatter)","72770171":"# We can add other features and properties to enhance the visualization\ng= sns.PairGrid(iris, hue= 'species', height= 3, aspect= 0.7)\ng.map_diag(plt.hist)\ng.map_offdiag(plt.scatter)\ng.add_legend()","5e605290":"## Plotting with categorical data","e3113197":"As we observe, female survival rate was higher and female survival rate among PClass 1 and 2 relatively higher than PClass 3","edcebe2f":"We have been creating multi plot grids in a way through the 'col' property in relplot and catplot. This is done as each of them uses the FacetGrid object internally.","a3283441":"As we can observe, the number of male, female in PClass 1 and 2 were approximately equal, whereas the number of males were substantially larger than the number of females in PClass 3","e3087c02":"We can list datasets available within seaborn using\nsns.get_dataset_names().\n\nFor this tutorial we will be using 2 datasets:\n1. Iris \n2. Titanic","d221d180":"As we can observe the number of people on deck C were the highest","0247f430":"### Visualizing statistical relationships","ca0d6a4a":"We have added a criteria in the plot above- to only display data for PClass = 1. Thus, we can create plots for specific subset of data","14d5342c":"### Plotting univariate distributions","f48d5a2b":"#### Histograms","1a71f811":"## Seaborn Tutorial (basic)","3d9547bb":"As the above graph depicts, survival rate was higher for females","62051cdb":"## Visualizing the distribution of a dataset","7d9a7211":"#### Bar plots","058ba4c3":"#### Boxplots","8b357de4":"#### Showing multiple relationships through multi-plots","e7314905":"##### Hope this was useful :)","a41ea703":"The above graph emphasises the difference between the classes.\n\nWe can also achieve the above effect using a 'size' feature, this will make each classification a different size","f7789d33":"#### Plotting subsets of data ","9f0c3b85":"###### In this tutorial we will progress through seaborn in the sequence presented in the Seaborn Documentation.\nNote: All properties within  a particular visualization might not be explored. \nFor a list of all properties kindly visit: https:\/\/seaborn.pydata.org\/","3efa0cf5":"We can observe in the above graph that majority of the males were in the age group of 20 - 40","8aaefca6":"### Statistical estimation within categories","5ca9111b":"### Categorical scatter plots","b26e4998":"## Plotting pairwise data relationships","db4b7e40":"#### Relating variables with scatter plots","486aeecf":"#### Point plots","d0b2bc56":"###### Exploring multi plot graphs","08e521c4":"The above graph does not differentiate between different classifications, hence it is not much helpful","90cd95dd":"#### Emphasizing continuity with line plots","46d6b5d9":"###### Pair plot gives a relationship between each pair of the available features","5e20dc6a":"### Distribution of observations within categories","913b5396":"We observe that fare for females was more than that for males, regardless of class","b6ce4d5c":"## Building structured multi-plot grids"}}