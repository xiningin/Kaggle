{"cell_type":{"269fd910":"code","c6559c72":"code","f63502a7":"code","8860a62b":"code","fe6d61eb":"code","eba30375":"code","05188300":"code","8326df18":"code","30eb56a2":"code","933a880d":"code","402ab440":"code","5907092f":"code","1a3c44b0":"code","0fed3d91":"code","8c9645a6":"code","6ba67dc4":"code","b73414d1":"markdown","acbcf317":"markdown","849bdffd":"markdown","eb952dd3":"markdown","4ebf863f":"markdown"},"source":{"269fd910":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\ndf =pd.read_csv(\"..\/input\/iris\/Iris.csv\")","c6559c72":"df.head()","f63502a7":"df.shape","8860a62b":"#Data Visualization\nsns.pairplot(df)","fe6d61eb":"sns.scatterplot(x='SepalLengthCm',y='PetalLengthCm',data=df,hue='Species')\nplt.show()","eba30375":"sns.set(style=\"whitegrid\")\nsns.barplot(x='Species',y=\"SepalWidthCm\",data=df,palette='vlag')\nplt.show()","05188300":"sns.jointplot(x='SepalLengthCm',y='PetalLengthCm',data=df,color=\"green\")\nplt.show()","8326df18":"sns.scatterplot(x=\"SepalLengthCm\",y=\"PetalLengthCm\",data=df,hue=\"PetalLengthCm\")\nplt.show()","30eb56a2":"x = df.drop(columns=['Id','Species'])\ny = df['Species']","933a880d":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)","402ab440":"dtc = DecisionTreeClassifier()\n\n#Fitting our Model\ndtc.fit(X_train,y_train)","5907092f":"#Predicting Values\ny_pred = dtc.predict(X_test)\n\n#Evaluating Model using accuracy_score\naccuracy_score(y_test, y_pred)","1a3c44b0":"feature_namess = x.columns\nclass_namess = ['setosa', 'versicolor', 'virginica']","0fed3d91":"import graphviz\nfrom sklearn import tree\n# DOT data\ndot_data = tree.export_graphviz(dtc, out_file=None, \n                                feature_names=feature_namess,  \n                                class_names=class_namess,\n                                filled=True)\n\n# Draw graph\ngraph = graphviz.Source(dot_data, format=\"png\") \ngraph","8c9645a6":"new_features = ['5.7', '2.2', '2.3', '3.9']","6ba67dc4":"y_pred = dtc.predict([new_features])\ny_pred","b73414d1":"# Decision Tree Models","acbcf317":"# Importing Libraries and Dataset","849bdffd":"# Feed Any New data to this Classifier","eb952dd3":"### Visualize the Decision Tree Model","4ebf863f":"# Exploratory data analysis"}}