{"cell_type":{"8a7af874":"code","2edfdddb":"code","89107ba9":"code","92499709":"code","389e4137":"code","ef72a50a":"code","acfbb898":"code","943d5f7c":"code","91498810":"code","c9e8dc86":"code","de8de303":"code","53e6894e":"code","51050597":"code","2b759185":"code","279f220a":"code","8d396c73":"code","b678c451":"code","b4ab7466":"code","2d18bdbf":"code","29a06bd6":"code","fad62b28":"code","58661e79":"code","9d536bed":"code","23c2f379":"markdown","4823ada6":"markdown","dea61cc1":"markdown","bf3004aa":"markdown","3246c8cd":"markdown","9a1b825f":"markdown"},"source":{"8a7af874":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.figure_factory as ff\n%matplotlib inline ","2edfdddb":"train = pd.read_csv('..\/input\/house-price-prediction-challenge\/train.csv')\nx_test = pd.read_csv('..\/input\/house-price-prediction-challenge\/test.csv')\ny_test = pd.read_csv('..\/input\/house-price-prediction-challenge\/sample_submission.csv')","89107ba9":"train.head()","92499709":"train.isnull().sum()","389e4137":"train.info()","ef72a50a":"train.describe()","acfbb898":"plt.figure(figsize=(12,10))\nsns.heatmap(train.corr(), annot=True)","943d5f7c":"fig = px.histogram(train, x=\"TARGET(PRICE_IN_LACS)\",marginal=\"rug\")\nfig.show()","91498810":"fig = px.bar(x=train[\"BHK_NO.\"].unique(), y=train[\"BHK_NO.\"].value_counts())\nfig.show()","c9e8dc86":"fig = px.histogram(train, x=\"SQUARE_FT\",marginal=\"rug\")\nfig.show()","de8de303":"import folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster","53e6894e":"map = folium.Map(location=[22.00,78.00], tiles='cartodbpositron', zoom_start=6)\n\n\nfor i in range(0,len(train)):\n    Circle(\n        location=[train.iloc[i]['LONGITUDE'], train.iloc[i]['LATITUDE']],\n        radius=100,\n        color='blue').add_to(map)\n\n# Display the map\nmap","51050597":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()","2b759185":"train","279f220a":"x_train = train.drop(['POSTED_BY', 'BHK_OR_RK', 'ADDRESS', 'LATITUDE', 'LONGITUDE', 'TARGET(PRICE_IN_LACS)'], axis=1)\ny_train = train['TARGET(PRICE_IN_LACS)']","8d396c73":"lm.fit(x_train, y_train)","b678c451":"print(lm.intercept_)","b4ab7466":"lm.coef_\npd.DataFrame(lm.coef_, x_train.columns, columns=['Coeff'])","2d18bdbf":"x_test = x_test.drop(['POSTED_BY', 'BHK_OR_RK', 'ADDRESS', 'LATITUDE', 'LONGITUDE'], axis=1)","29a06bd6":"predictions = lm.predict(x_test)","fad62b28":"from sklearn.metrics import mean_squared_error","58661e79":"print(mean_squared_error(y_test,predictions))","9d536bed":"pd.DataFrame(predictions).to_csv('submission.csv')","23c2f379":"Import Linear Regression","4823ada6":"using UNDER_CONSTRUCTION, RERA, BHK_NO, SQUARE_FT, READY_TO_MOVE, RESALE for x_train <br>\nTARGET(PRICE_IN_LACS) as y_train","dea61cc1":"Column's Descriptions","bf3004aa":"Corr between all columns","3246c8cd":"Check train data","9a1b825f":"|Column | Description |\n| --- | --- |\n| POSTED_BY          | Category marking who has listed the property |\n| UNDER_CONSTRUCTION | Under Construction or Not|\n| RERA\t             | Rera approved or Not|\n| BHK_NO\t         | Number of Rooms|\n| BHK_OR_RK\t         | Type of property|\n| SQUARE_FT\t         | Total area of the house in square feet|\n| READY_TO_MOVE\t     | Category marking Ready to move or Not|\n| RESALE \t         | Category marking Resale or not|\n| ADDRESS\t         | Address of the property|\n| LONGITUDE \t     | Longitude of the property|\n| LATITUDE  \t     | Latitude of the property|"}}