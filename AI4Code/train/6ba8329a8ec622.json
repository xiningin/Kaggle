{"cell_type":{"372f0191":"code","18f189e0":"code","0b737f51":"code","024b56eb":"code","013465a3":"code","96751658":"code","733bfd8b":"code","88c7b5d8":"code","d15ec4bd":"code","d334d7e9":"code","a1c11db2":"code","c8a4a268":"code","6be18f12":"code","5ac74efb":"code","b333314f":"code","6599eb33":"code","b470fbe0":"code","a8e3867d":"code","0b8502e9":"code","65139b45":"code","d812c9e8":"code","99da6885":"code","4fcaf1bb":"code","1c1f27f8":"code","908119bb":"code","bbc12494":"code","aff87362":"code","0b444bf7":"code","3e5a1d4a":"markdown","6e320003":"markdown","8fcf5290":"markdown","f5b80a3f":"markdown","31f6e4cc":"markdown","f731db72":"markdown","93a4e8a7":"markdown","878d60e7":"markdown","cea46c34":"markdown","9ba2884e":"markdown","b21cf56f":"markdown","abe4e5b6":"markdown","3bb7c614":"markdown","3bcaa525":"markdown","5f8fc468":"markdown","b5358023":"markdown","14971d0a":"markdown","1cac79d0":"markdown","4ad96c75":"markdown","b4077028":"markdown"},"source":{"372f0191":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18f189e0":"df = pd.read_csv('\/kaggle\/input\/indian-food-101\/indian_food.csv')\nfood_df = df.copy()\nfood_df.head(5)","0b737f51":"# We could also get overall info for the dataset\nfood_df.info()","024b56eb":"# Let's import what we'll need for the analysis and visualization\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\nfrom collections import Counter\n%matplotlib inline","013465a3":"# Let's first check Diet\nsns.catplot(x = 'diet' , kind = 'count' , data = food_df)","96751658":"sns.catplot(x = 'diet' , kind = 'count' , data = food_df, hue='region')","733bfd8b":"food_df['region'] = food_df['region'].replace('-1','Other')","88c7b5d8":"#Lets check the diet plot with region\nsns.catplot(x = 'diet' , kind = 'count' , data = food_df, hue='region')","d15ec4bd":"sns.catplot(x = 'diet', col='state' , col_wrap=4, kind = 'count' , data = food_df, height=4, aspect=.8)","d334d7e9":"food_df['state'] = food_df['state'].replace('-1','Other')","a1c11db2":"sns.catplot(x = 'diet', col='state' , col_wrap=4, kind = 'count' , data = food_df, height=4, aspect=.8)","c8a4a268":"sns.catplot(x = 'course', kind = 'count' , data = food_df)","6be18f12":"sns.catplot(x = 'course', kind = 'count' , data = food_df, hue='diet')","5ac74efb":"sns.catplot(x='flavor_profile', kind='count', data=food_df)","b333314f":"sns.catplot(x='flavor_profile', kind='count', data=food_df, hue='course')","6599eb33":"pltState = sns.catplot(x = 'course', col='state' , col_wrap=4, kind = 'count' , data = food_df, height=4, aspect=.8)\npltState.set_xticklabels(food_df['course'], rotation=90)","b470fbe0":"fig = sns.FacetGrid(food_df, hue=\"course\",aspect=4)\nfig.map(sns.kdeplot,'prep_time',shade= True)\noldest = food_df['prep_time'].max()\nfig.set(xlim=(0,oldest))\nfig.add_legend()","a8e3867d":"fig = sns.FacetGrid(food_df, hue=\"course\",aspect=4)\nfig.map(sns.kdeplot,'cook_time',shade= True)\noldest = food_df['cook_time'].max()\nfig.set(xlim=(0,oldest))\nfig.add_legend()","0b8502e9":"ingredientswords = []\nfor i in range(len(food_df)):\n    txt =  food_df[\"ingredients\"][i]\n    txt =  str(txt.replace(', ', ',').lower())\n    #print(txt)\n    listTxt = txt.split(',')\n    \n    for word in listTxt:\n        ingredientswords.append(word.capitalize())\n        #print(ingredientswords)\nwords = Counter(ingredientswords)\nING = WordCloud().fit_words(words)\n\nplt.figure(figsize = (12, 12), facecolor = None) \nplt.imshow(ING, interpolation='bilinear')\nplt.axis('off')\nplt.margins(x=0, y=0)\nplt.show()","65139b45":"dessertwords = []\ndessert_df = food_df[food_df['course']=='dessert']\nfor i in range(len(food_df)):\n    if food_df['course'][i]=='dessert':\n        txt2 =  food_df[\"ingredients\"][i]\n        txt2 =  str(txt2.replace(', ', ',').lower())\n    \n        listTxt2 = txt2.split(',')\n    \n        for word in listTxt2:\n            dessertwords.append(word.capitalize())\n            \nwords = Counter(dessertwords)\nING2 = WordCloud().fit_words(words)\n\nplt.figure(figsize = (12, 12), facecolor = None) \nplt.imshow(ING, interpolation='bilinear')\nplt.axis('off')\nplt.margins(x=0, y=0)\nplt.show()","d812c9e8":"df_sorted_desc= food_df.sort_values('prep_time',ascending=False)[:10]\n#sns.set_theme(style='whitegrid')\nax = sns.catplot(x='name', y='prep_time', kind='bar', data=df_sorted_desc,height=12, aspect=.7)\nax.set_xticklabels(df_sorted_desc['name'], rotation=90, size=14)\n\nax1 = sns.catplot(x='name', y='cook_time', kind='bar', data=df_sorted_desc,height=12, aspect=.7)\nax1.set_xticklabels(df_sorted_desc['name'], rotation=90, size=14)","99da6885":"#Lets see the ration with cooking time for top 10 prep_time\ndf_sorted_desc['ratio_cook_prep_time'] = df_sorted_desc['cook_time']\/df_sorted_desc['prep_time']\ndf_sorted_desc\nax1 = sns.catplot(x='name', y='ratio_cook_prep_time', kind='bar', data=df_sorted_desc,height=12, aspect=.7)\nax1.set_xticklabels(df_sorted_desc['name'], rotation=90, size=14)","4fcaf1bb":"df_sorted_asc= food_df.sort_values('prep_time',ascending=True)[:10]\nax = sns.catplot(x='name', y='prep_time', kind='bar', data=df_sorted_asc,height=8, aspect=.7)\nax.set_xticklabels(df_sorted_asc['name'], rotation=90, size=14)\nax1 = sns.catplot(x='name', y='cook_time', kind='bar', data=df_sorted_asc,height=8, aspect=.7)\nax1.set_xticklabels(df_sorted_asc['name'], rotation=90, size=14)","1c1f27f8":"#Lets see the ration with cooking time for top 10 prep_time\ndf_sorted_asc['ratio_cook_prep_time'] = df_sorted_asc['cook_time']\/df_sorted_asc['prep_time']\n\nax2 = sns.catplot(x='name', y='ratio_cook_prep_time', kind='bar', data=df_sorted_asc,height=12, aspect=.7)\nax2.set_xticklabels(df_sorted_asc['name'], rotation=90)","908119bb":"df_sorted_asc","bbc12494":"df_updated = food_df[food_df.prep_time != -1]\ndf_sorted_asc2= df_updated.sort_values('prep_time',ascending=True)[:10]\ndf_sorted_asc2","aff87362":"ax = sns.catplot(x='name', y='prep_time', kind='bar', data=df_sorted_asc2,height=8, aspect=.7)\nax.set_xticklabels(df_sorted_asc2['name'], rotation=90)\nax1 = sns.catplot(x='name', y='cook_time', kind='bar', data=df_sorted_asc2,height=8, aspect=.7)\nax1.set_xticklabels(df_sorted_asc2['name'], rotation=90)","0b444bf7":"#Lets see the ration with cooking time for top 10 prep_time\ndf_sorted_asc2['ratio_cook_prep_time'] = df_sorted_asc2['cook_time']\/df_sorted_asc2['prep_time']\n\nax2 = sns.catplot(x='name', y='ratio_cook_prep_time', kind='bar', data=df_sorted_asc2,height=12, aspect=.7)\nax2.set_xticklabels(df_sorted_asc2['name'], rotation=90, size=14)","3e5a1d4a":"### You can see that there are much number of vegitarian cuisine than non-vegatarian","6e320003":"# Lets see 10 Most preparation time","8fcf5290":"Now Let see the Diet","f5b80a3f":"# Compare course with sate","31f6e4cc":"# Papad is only item which has same preparation time and cooking time\nKhichu is 2 time higher and Chorafali is 3 time higher\nRest of Item have cooking time is much higher then prepartion time. ","f731db72":"# Preparation time of Dessert and Main course mostly high","93a4e8a7":"# Lets see the course meal with diet","878d60e7":"# Let's see cooking time","cea46c34":"# There is -1 value in state, need to replace with Other","9ba2884e":"# Let see the Course meal","b21cf56f":"### Lets check the flavor","abe4e5b6":"# Let's see dessert ingredients","3bb7c614":"# That's cool! You can see that Puttu & Misti Doi- cooking time is much less as per their high preparation time","3bcaa525":"# Lets see 10 Less preparation time","5f8fc468":"# Let's check the preparation time","b5358023":"# Now let's see flover with course meal","14971d0a":"# That's the obious thing that dessert is vgetarian.\nThere is no vegetarian dish in starter. Similarly there is no non-vegetarian dish in snack.","1cac79d0":"# Now observe the diet based on region","4ad96c75":"# Lets remove the rows which have -1 prep_time, cause it have no data for prep_time","b4077028":"# See There is a region with -1 value, now replace the -1 value with 'other'"}}