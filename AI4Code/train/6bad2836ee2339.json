{"cell_type":{"bbcca40b":"code","6e531fa3":"code","3f8c23a1":"code","840a208c":"code","ad9ea4e1":"code","b6d817b8":"code","12999d27":"code","29bfa32a":"code","6e551c70":"code","ea0111c8":"code","39e6f775":"code","b3657802":"code","6be1a75d":"code","be51c5a8":"code","68bd1f14":"code","724c837e":"code","5f4d21ec":"code","d00e9db4":"code","3dae475f":"code","fcc0f7d5":"code","dca56353":"code","7d127700":"code","512650d0":"code","ce521986":"code","01951813":"code","171aec72":"code","824987f7":"code","b3c4b338":"code","aeb54a75":"code","2236eddb":"code","e815da84":"code","f32bfc7a":"code","e6a0e325":"code","aab361ec":"code","1964beea":"markdown","f9b72be8":"markdown","6f6c17f6":"markdown","4f2e7d19":"markdown","92238e46":"markdown","287d30e2":"markdown","be766aaf":"markdown","662bc8ab":"markdown","e5627b33":"markdown","88f49934":"markdown","d298e54d":"markdown","39c7276f":"markdown","9b136a9d":"markdown","e99eab09":"markdown","63e71129":"markdown","57f3c832":"markdown","c740a071":"markdown","3bdd4e3a":"markdown","0cc165db":"markdown","d4b99f28":"markdown","fc76214d":"markdown","65dbf81a":"markdown","69ac77a0":"markdown","b565f00e":"markdown","cee54549":"markdown","511d3539":"markdown"},"source":{"bbcca40b":"import pandas as pd\nimport numpy as np\ndf = pd.read_csv(\"..\/input\/iris\/Iris.csv\")","6e531fa3":"df.head()","3f8c23a1":"df = df.drop(\"Id\",axis=1)","840a208c":"df.head()","ad9ea4e1":"df.info()","b6d817b8":"df.describe().T","12999d27":"df.isnull().sum()","29bfa32a":"df['Species'].unique()","6e551c70":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","ea0111c8":"n_rows=2\nn_cols=2\n# Create the subplots\nfig, axes = plt.subplots(nrows=n_rows, ncols=n_cols)\nfig.tight_layout()\nfor i, column in enumerate(df.columns):\n    if column == 'Species':\n        continue\n    sns.distplot(df[column],ax=axes[i\/\/n_cols,i%n_cols],hist=False)","39e6f775":"plt.title(\"Count of diffrent species in dataset\")\nsns.countplot(df['Species'],palette='rocket')","b3657802":"sns.violinplot(data=df,y='SepalLengthCm',x='Species',palette='rocket')","6be1a75d":"sns.violinplot(data=df,y='SepalWidthCm',x='Species',palette='rocket')","be51c5a8":"sns.violinplot(data=df,y='PetalLengthCm',x='Species',palette='rocket')","68bd1f14":"sns.violinplot(data=df,y='PetalWidthCm',x='Species',palette='rocket')","724c837e":"plt.figure(figsize=(7,5))\nsns.scatterplot(data=df,x='PetalWidthCm',y='PetalLengthCm',hue='Species')","5f4d21ec":"plt.figure(figsize=(7,5))\nsns.scatterplot(data=df,x='SepalWidthCm',y='SepalLengthCm',hue='Species')","d00e9db4":"sns.scatterplot(data=df,x='PetalWidthCm',y='SepalLengthCm',hue='Species')","3dae475f":"sns.scatterplot(data=df,x='PetalLengthCm',y='SepalLengthCm',hue='Species')","fcc0f7d5":"sns.scatterplot(data=df,x='PetalLengthCm',y='SepalWidthCm',hue='Species')","dca56353":"sns.scatterplot(data=df,x='PetalWidthCm',y='SepalWidthCm',hue='Species')","7d127700":"plt.title(\"CORRELATION HEATMAP\")\nsns.heatmap(df.corr())","512650d0":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf['Species'] = le.fit_transform(df['Species'])","ce521986":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\ncols = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']\ndf[cols] = ss.fit_transform(df[cols])","01951813":"df.sample(5)","171aec72":"y = df['Species']\nX = df.drop(\"Species\",axis=1)","824987f7":"model_scores = {}","b3c4b338":"from sklearn.model_selection import cross_val_score ###for cross validation\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 5)\nscores = cross_val_score(knn, X, y, cv=5, scoring='accuracy')\nmodel_scores['KNN'] = np.mean(scores)\nprint(f\"KNN : {np.mean(scores)}\")","aeb54a75":"from sklearn.model_selection import GridSearchCV\ngrid_params = {\n    'n_neighbors':[2,3,4,5,6,7,8,9,10],\n    'metric':['euclidean','manhattan']\n}\ngs = GridSearchCV(KNeighborsClassifier(),grid_params,verbose=1,cv=5,n_jobs=-1)\nresults = gs.fit(X,y)","2236eddb":"model_scores['KNN Tuned'] = results.best_score_","e815da84":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nscores = cross_val_score(rfc, X, y, cv=5, scoring='accuracy')\nmodel_scores['Random Forest'] = np.mean(scores)\nprint(\"Random Forest Score : \"+str(np.mean(scores)))","f32bfc7a":"from sklearn.ensemble import ExtraTreesClassifier\netc = ExtraTreesClassifier()\nscores = cross_val_score(etc, X, y, cv=5, scoring='accuracy')\nmodel_scores['Extra Trees'] = np.mean(scores)\nprint(\"Extra Tree Score : \"+str(np.mean(scores)))","e6a0e325":"from sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression()\nscores = cross_val_score(logreg, X, y, cv=5, scoring='accuracy')\nmodel_scores['Logistic Regression'] = np.mean(scores)\nprint(\"Logistic Regression Score: \"+str(np.mean(scores)))","aab361ec":"plt.xticks(rotation=70)\nplt.title(\"SCORES\")\nplt.hist(model_scores)","1964beea":"* Petal Length may be a very useful feature to classify Iris-setosa ","f9b72be8":"No missing values are there in the dataset","6f6c17f6":"* Again Sepal Length & Width might only be useful for setosa","4f2e7d19":"* Sepal length & sepal width may not be very useful features","92238e46":"**3.Extra Tress**","287d30e2":"* This confirms the previous points","be766aaf":"**1.KNN**","662bc8ab":"Hyper parameter tuning for knn","e5627b33":"The different species present in the dataset are","88f49934":"The Id column is useles for classification and can be dropped","d298e54d":"* All species are equally represented in the dataset","39c7276f":"The columns in this dataset are:\n*     Id\n*     SepalLengthCm\n*     SepalWidthCm\n*     PetalLengthCm\n*     PetalWidthCm\n*     Species","9b136a9d":"**4.Logistic Regression**","e99eab09":"* Encoding categorical variable i.e. Species","63e71129":"* Scaling Numerical variables","57f3c832":"Check for Null values","c740a071":"* achieved very less improvement","3bdd4e3a":"seperating features and labels","0cc165db":"**2.Random Forest**","d4b99f28":"# Modelling","fc76214d":"* Petal Width may be a very useful feature to classify Iris-setosa ","65dbf81a":"Reading Dataset with pandas","69ac77a0":"# **Scores of Various Models**","b565f00e":"# Visualizations & EDA","cee54549":"# **Iris Species Classification**\n![\"iris\"](https:\/\/images.unsplash.com\/photo-1602605591678-2ae3e39ebb0d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=735&q=80)","511d3539":"# Preprocessing Data for Model"}}