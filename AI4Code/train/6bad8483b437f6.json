{"cell_type":{"34e5e598":"code","75949374":"code","25c45f99":"code","91737bee":"code","0634816b":"code","045658dc":"code","cb1ccac7":"code","c6b513c5":"code","d26039a2":"code","134e7413":"code","39b31a6a":"code","25752a30":"code","5e658568":"code","c1b33ed2":"code","e1bcc05f":"code","3b7094c8":"code","6c684aad":"code","440736fc":"code","cd8e98ef":"code","9207401d":"code","ae513f10":"code","ea371081":"code","a43220b3":"code","b81ef635":"code","db1e9248":"code","1a0c8354":"code","0bf80dc5":"code","ba9c7d69":"code","31db2ca4":"code","1f321066":"code","968e36ba":"code","d3740399":"code","6d469561":"code","7c924fdc":"code","2a07b178":"code","7835ffde":"code","6131e8f9":"code","44461a5d":"code","4e2ef2ef":"code","16bf4b10":"code","96db29c5":"code","63b3b72f":"code","174ddc14":"code","745a4b9f":"code","ca5215cb":"code","80c692f8":"code","ce8870da":"code","8f940d2d":"code","ea8613dc":"code","a4bae5b4":"code","feeb76a8":"code","92357af8":"code","2f7edaa8":"code","d84858c8":"code","10329fbf":"code","4d51cbdc":"code","5c5e00ba":"code","7d1e93d8":"code","c8897e8c":"code","1dab6813":"code","856f7b7c":"code","ed4668af":"code","369645ac":"code","fec64736":"code","09a0fba9":"code","2fd67ccb":"code","8ae3a48a":"code","2b51c7b6":"code","5f68cf4a":"code","80a9589b":"code","88bc7003":"code","e2c83286":"code","a49eb7d6":"code","5095a53f":"code","161310ef":"code","fe18f441":"code","590f88ca":"code","1ec72eaf":"code","63d6c4ef":"code","5fce62fe":"code","73952dbd":"code","e49b0a4a":"code","3e832543":"code","f3ec2819":"code","76f36cb2":"code","fe975dec":"code","e84d739f":"code","68be979a":"code","392c1540":"code","d573cad3":"code","0af492a1":"code","31832ec9":"code","7c96354f":"code","d2d19603":"code","9bbe2065":"code","543b3708":"code","191dfb9f":"code","39539ad8":"code","9e7f0a31":"code","7dbac2a3":"code","24dd983f":"markdown","50548b84":"markdown","f801d579":"markdown","baa50ec8":"markdown","103af07c":"markdown","d16f6328":"markdown","84606f7a":"markdown","b322fc6e":"markdown","bf4f0179":"markdown","64531e14":"markdown","481aa812":"markdown","848d0925":"markdown","cef2270b":"markdown","d33de828":"markdown","7f756a71":"markdown","de27994c":"markdown","133cadcb":"markdown","c039679f":"markdown","6d3c4dc0":"markdown","b5e1d19f":"markdown","b56b223a":"markdown","6b2b87f6":"markdown","659afbad":"markdown","0dd4e67c":"markdown","e36a1efd":"markdown","19fc053d":"markdown","013de2a9":"markdown","31268e05":"markdown","8f4a18b1":"markdown"},"source":{"34e5e598":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","75949374":"pip install openpyxl","25c45f99":"df = pd.read_excel(\"..\/input\/military-strengths-of-countries-2021\/World military power.xlsx\",header=[0,1])\ndf.head()","91737bee":"df.info()","0634816b":"df.shape","045658dc":"df.duplicated().sum()","cb1ccac7":"df.isna().sum().any()","c6b513c5":"df.columns","d26039a2":"df.columns = ['_'.join(tuple(map(str, t))) for t in df.columns.values]","134e7413":"df.columns","39b31a6a":"df.head()","25752a30":"value_cols = [i[0] for i in df.columns.str.findall(\".*value\") if i !=[]]\n\nvalue_cols","5e658568":"value_df = df[value_cols].copy()\nvalue_df.insert(0, \"country\",df[\"2020 ranking_Military Strength\"])\nvalue_df.insert(1, \"Military Strength Power Index\", df[\"2020 ranking_Military Strength Power Index\"])\nvalue_df.head()","c1b33ed2":"df.isnull().sum().sort_values(ascending=False)","e1bcc05f":"df.isnull().melt(value_name=\"missing\")","3b7094c8":"plt.figure(figsize=(4,6))\nsns.displot(\n    data=df.isnull().melt(value_name=\"missing\"),\n    y=\"variable\",\n    hue=\"missing\",\n    multiple=\"fill\",\n    height=9.25\n)\nplt.axvline(0.3,color=\"r\");","6c684aad":"with pd.option_context('display.max_columns', None):\n    display(df[df[\"Geography_Total Coastline Coverage\"].isna()])","440736fc":"value_df.loc[value_df[\"Geography_Total Coastline Coverage value\"].isnull(), ['country',\n                                                                             'Navy Strength_Navy Fleet Strengths value',\n                                                                             'Navy Strength_Aircraft Carrier Fleet Strength value',\n                                                                             'Navy Strength_Submarine Fleet Strength value',\n                                                                             'Navy Strength_Destroyer Fleet Strength value',\n                                                                             'Navy Strength_Frigate Fleet Strength value',\n                                                                             'Geography_Total Waterway Coverage value']]","cd8e98ef":"value_df.loc[\n    \n    value_df[\"Geography_Total Coastline Coverage value\"].isnull(),\n    \n    ['Navy Strength_Navy Fleet Strengths value',\n     'Navy Strength_Aircraft Carrier Fleet Strength value',\n     'Navy Strength_Submarine Fleet Strength value',\n     'Navy Strength_Destroyer Fleet Strength value',\n     'Navy Strength_Frigate Fleet Strength value']\n    \n    ] = 0","9207401d":"plt.figure(figsize=(4,6))\nsns.displot(\n    data=value_df.isnull().melt(value_name=\"missing\"),\n    y=\"variable\",\n    hue=\"missing\",\n    multiple=\"fill\",\n    height=9.25\n)\nplt.axvline(0.3,color=\"r\");","ae513f10":"value_df.loc[value_df['Navy Strength_Aircraft Carrier Fleet Strength value'].isnull()|\n             value_df['Navy Strength_Submarine Fleet Strength value'].isnull()|\n             value_df['Navy Strength_Destroyer Fleet Strength value'].isnull()|\n             value_df['Navy Strength_Frigate Fleet Strength value'].isnull()] ","ea371081":"value_df.loc[value_df[\"country\"] == \"Uzbekistan\",\n            ['Navy Strength_Navy Fleet Strengths value',\n             'Navy Strength_Aircraft Carrier Fleet Strength value',\n             'Navy Strength_Submarine Fleet Strength value',\n             'Navy Strength_Destroyer Fleet Strength value',\n             'Navy Strength_Frigate Fleet Strength value',\n           ]] ","a43220b3":"value_df.loc[value_df[\"country\"] == \"Uzbekistan\",\n            ['Navy Strength_Navy Fleet Strengths value',\n             'Navy Strength_Aircraft Carrier Fleet Strength value',\n             'Navy Strength_Submarine Fleet Strength value',\n             'Navy Strength_Destroyer Fleet Strength value',\n             'Navy Strength_Frigate Fleet Strength value',\n           ]] = 0","b81ef635":"value_df.loc[value_df[\"country\"] == \"South Korea\",\n            ['Navy Strength_Navy Fleet Strengths value',\n             'Navy Strength_Aircraft Carrier Fleet Strength value',\n             'Navy Strength_Submarine Fleet Strength value',\n             'Navy Strength_Destroyer Fleet Strength value',\n             'Navy Strength_Frigate Fleet Strength value',\n           ]] ","db1e9248":"value_df.loc[((value_df['Navy Strength_Navy Fleet Strengths value'] > 200) & \n             (value_df['Navy Strength_Navy Fleet Strengths value'] < 250)),\n            ['country',\n             'Navy Strength_Navy Fleet Strengths value',\n             'Navy Strength_Aircraft Carrier Fleet Strength value',\n             'Navy Strength_Submarine Fleet Strength value',\n             'Navy Strength_Destroyer Fleet Strength value',\n             'Navy Strength_Frigate Fleet Strength value',\n           ]] ","1a0c8354":"value_df.loc[value_df[\"country\"] == \"France\",\n             ['country',\n             'Navy Strength_Navy Fleet Strengths value',\n             'Navy Strength_Aircraft Carrier Fleet Strength value',\n             'Navy Strength_Submarine Fleet Strength value',\n             'Navy Strength_Destroyer Fleet Strength value',\n             'Navy Strength_Frigate Fleet Strength value',\n           ]] ","0bf80dc5":"# All the numbers derived from South Korea Navy wikipeida page\nvalue_df.loc[value_df[\"country\"] == \"South Korea\",'Navy Strength_Aircraft Carrier Fleet Strength value'] = 2\nvalue_df.loc[value_df[\"country\"] == \"South Korea\",'Navy Strength_Submarine Fleet Strength value'] = 19\nvalue_df.loc[value_df[\"country\"] == \"South Korea\",'Navy Strength_Destroyer Fleet Strength value'] = 12\nvalue_df.loc[value_df[\"country\"] == \"South Korea\",'Navy Strength_Frigate Fleet Strength value'] = 12","ba9c7d69":"plt.figure(figsize=(4,6))\nsns.displot(\n    data=value_df.isnull().melt(value_name=\"missing\"),\n    y=\"variable\",\n    hue=\"missing\",\n    multiple=\"fill\",\n    height=9.25\n)\nplt.axvline(0.3,color=\"r\");","31db2ca4":"value_df.loc[value_df['Geography_Total Coastline Coverage value'].isnull()]","1f321066":"value_df.loc[value_df['Geography_Total Coastline Coverage value'].isnull(), \n                      'Geography_Total Coastline Coverage value']  = 0 ","968e36ba":"value_df.loc[value_df['Geography_Total Border Coverage value'].isnull()]","d3740399":"value_df.loc[value_df['Geography_Total Border Coverage value'].isnull(), \n                      'Geography_Total Border Coverage value' ] = 0","6d469561":"plt.figure(figsize=(4,6))\nsns.displot(\n    data=value_df.isnull().melt(value_name=\"missing\"),\n    y=\"variable\",\n    hue=\"missing\",\n    multiple=\"fill\",\n    height=9.25\n)\nplt.axvline(0.3,color=\"r\");","7c924fdc":"value_df.reset_index(drop=True,inplace=True)","2a07b178":"value_df.info()","7835ffde":"value_df.select_dtypes(\"object\")","6131e8f9":"value_df.select_dtypes(\"object\")[\"Natural resources_Oil Production value\"].str.replace(\",\",\"\")","44461a5d":"columns = value_df.select_dtypes(\"object\").columns\ncolumns","4e2ef2ef":"for col in columns[1:]:\n    value_df[col]  = value_df[col].astype(\"str\")\n    value_df[col]  = value_df.select_dtypes(\"object\")[col].str.replace(',','')\n    value_df[col]  = value_df[col].astype(\"float\")","16bf4b10":" value_df.select_dtypes(\"object\")","96db29c5":"value_df.columns","63b3b72f":"value_df.drop(['Geography_Total Square Land Area value',\n               'Geography_Total Coastline Coverage value',\n               'Geography_Total Waterway Coverage value',\n               'Geography_Total Border Coverage value'],axis=1,inplace=True)","174ddc14":"import plotly.express as px","745a4b9f":"fig = px.bar(value_df,x= \"country\" , y = value_df[\"Airforce Strength_Aircraft Strength value\"])\nfig.show()","ca5215cb":"fig = px.box(value_df, x = value_df[\"Airforce Strength_Aircraft Strength value\"],\n             hover_name=value_df[\"country\"])\nfig.show()","80c692f8":"fig = px.bar(value_df,x= \"country\" , y = value_df['Navy Strength_Navy Fleet Strengths value'])\nfig.show()","ce8870da":"fig = px.box(value_df, x = value_df[\"Navy Strength_Navy Fleet Strengths value\"],\n             hover_name=value_df[\"country\"])\n\nfig.show()","8f940d2d":"fig = px.bar(value_df,x= \"country\" , y = value_df['Land Strength_Tank Strength value'])\nfig.show()","ea8613dc":"fig = px.box(value_df, x = value_df[\"Land Strength_Tank Strength value\"],\n             hover_name=value_df[\"country\"])\n\nfig.show()","a4bae5b4":"import plotly.graph_objects as go\n\nfig = go.Figure()\nfig.add_trace(go.Box(x=value_df[\"Finances_External Debt value\"],\n              hovertext=value_df[\"country\"],\n              name = \"Finances_External Debt value\")\n             )\nfig.add_trace(go.Box(x=value_df[\"Finances_defense spending budget value\"],\n                     hovertext=value_df[\"country\"],\n                    name = \"Finances_defense spending budget value\")\n             )\n\nfig.show()","feeb76a8":"value_df.describe().T","92357af8":"fig = px.imshow(value_df.corr())\nfig.show()","2f7edaa8":"from sklearn.preprocessing import StandardScaler, RobustScaler,MinMaxScaler\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nfrom sklearn.cluster import KMeans","d84858c8":"X = value_df.drop([\"country\"], axis=1)","10329fbf":"scaler = StandardScaler()\nX = scaler.fit_transform(X)","4d51cbdc":"pip install pyclustertend","5c5e00ba":"from pyclustertend import hopkins","7d1e93d8":"hopkins(X, X.shape[0])","c8897e8c":"ssd = []\n\nK = range(2,10)\n\nfor k in K:\n    model = KMeans(n_clusters=k)\n    model.fit(X)\n    ssd.append(model.inertia_)","1dab6813":"ssd","856f7b7c":"sns.lineplot(x=K, y = ssd,markers=\"x\")\n\nplt.show()","ed4668af":"from yellowbrick.cluster import KElbowVisualizer","369645ac":"kmeans = KMeans()\nvisu = KElbowVisualizer(kmeans, k = (2,10))\nvisu.fit(X)\nvisu.poof()","fec64736":"model = KMeans(n_clusters=4)\nmodel.fit(X)","09a0fba9":"model.inertia_","2fd67ccb":"model.labels_","8ae3a48a":"value_df[\"cluster\"] = model.labels_","2b51c7b6":"plt.figure(figsize=(10,5))\nsns.scatterplot(value_df[\"Airforce Strength_Aircraft Strength value\"], \n                value_df[\"Navy Strength_Navy Fleet Strengths value\"], hue= value_df.cluster,palette= \"viridis\");","5f68cf4a":"fig = px.scatter_3d(x=value_df[\"Airforce Strength_Aircraft Strength value\"],\n                   y=value_df[\"Finances_defense spending budget value\"],\n                   z=value_df[\"Finances_External Debt value\"],\n                   color=value_df.cluster,\n                   labels = {\"x\": \"Airforce Strength_Aircraft Strength value\",\n                             \"y\": \"Finances_defense spending budget value\",\n                             \"z\": \"Finances_External Debt value\"},\n                   hover_name=value_df[\"country\"])\n\nfig.show()","80a9589b":"centroids = model.cluster_centers_\n\nplt.scatter(X[:,18], X[:,19], c = value_df.cluster, s = 50, cmap = \"viridis\")\nplt.scatter(centroids[:,18], centroids[:,19], c = \"black\", s = 200, alpha=0.5);","88bc7003":"plt.figure(figsize=(15,10))\nplt.title(\"Cluster Count\")\nax1 = sns.countplot(x = value_df.cluster)\n\nfor p in ax1.patches:\n    ax1.annotate(\n        s=f\"{p.get_height():1.0f}\",\n        xy=(p.get_x() + p.get_width() \/ 2., p.get_height()), \n        xycoords='data',\n        ha='center', \n        va='center', \n        fontsize=11, \n        color='black',\n        xytext=(0,7), \n        textcoords='offset points',\n        clip_on=True,                   # <---  important\n    )\nplt.show();","e2c83286":"value_df[value_df[\"cluster\"] == 0]","a49eb7d6":"value_df[value_df[\"cluster\"] == 1]","5095a53f":"value_df[value_df[\"cluster\"] == 2]","161310ef":"value_df[value_df[\"cluster\"] == 3]","fe18f441":"from sklearn.metrics import silhouette_score","590f88ca":"print(f'Silhouette Score(n=4): {silhouette_score(X, value_df.cluster)}') # towards to 1 means, data good clustered by model","1ec72eaf":"range_n_clusters = range(2,9)\nfor num_clusters in range_n_clusters:\n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, random_state=42)\n    kmeans.fit(X)\n    cluster_labels = kmeans.labels_\n    # silhouette score\n    silhouette_avg = silhouette_score(X, cluster_labels)\n    print(f\"For n_clusters={num_clusters}, the silhouette score is {silhouette_avg}\")","63d6c4ef":"den = pd.DataFrame(X,columns=value_df.drop([\"country\",\"cluster\"],axis=1).columns)\nden[\"cluster\"] = value_df[\"cluster\"]\n\nclus_pred = den.groupby(\"cluster\").mean().T\nclus_pred","5fce62fe":"fig= px.line(clus_pred)\nfig.show()","73952dbd":"from scipy.cluster.hierarchy import dendrogram, linkage","e49b0a4a":"hc_ward = linkage(y = X, method = \"ward\")\nhc_complete = linkage(X, \"complete\")\nhc_average = linkage(X, \"average\")\nhc_single = linkage(X, \"single\")","3e832543":"plt.figure(figsize = (20,12))\n\nplt.subplot(221)\nplt.title(\"Ward\")\nplt.xlabel(\"Observations\")\nplt.ylabel(\"Distance\")\ndendrogram(hc_ward, leaf_font_size = 10)\n\nplt.subplot(222)\nplt.title(\"Complete\")\nplt.xlabel(\"Observations\")\nplt.ylabel(\"Distance\")\ndendrogram(hc_complete, leaf_font_size = 10)\n\nplt.subplot(223)\nplt.title(\"Average\")\nplt.xlabel(\"Observations\")\nplt.ylabel(\"Distance\")\ndendrogram(hc_average, leaf_font_size = 10)\n\nplt.subplot(224)\nplt.title(\"Single\")\nplt.xlabel(\"Observations\")\nplt.ylabel(\"Distance\")\ndendrogram(hc_single, leaf_font_size = 10);","f3ec2819":"from sklearn.cluster import AgglomerativeClustering","76f36cb2":"model1 = AgglomerativeClustering(n_clusters=4, affinity = \"euclidean\", linkage = \"ward\")\nmodel1.fit_predict(X)","fe975dec":"value_df[\"cluster_1\"] = model1.labels_","e84d739f":"fig = px.scatter_3d(x=value_df[\"Airforce Strength_Aircraft Strength value\"],\n                   y=value_df[\"Finances_defense spending budget value\"],\n                   z=value_df[\"Finances_External Debt value\"],\n                   color=value_df.cluster_1,\n                   labels = {\"x\": \"Airforce Strength_Aircraft Strength value\",\n                             \"y\": \"Finances_defense spending budget value\",\n                             \"z\": \"Finances_External Debt value\"},\n                   hover_name=value_df[\"country\"])\n\nfig.show()","68be979a":"plt.figure(figsize=(15,10))\nplt.title(\"Cluster Count\")\nax1 = sns.countplot(x = value_df.cluster_1)\n\nfor p in ax1.patches:\n    ax1.annotate(\n        s=f\"{p.get_height():1.0f}\",\n        xy=(p.get_x() + p.get_width() \/ 2., p.get_height()), \n        xycoords='data',\n        ha='center', \n        va='center', \n        fontsize=11, \n        color='black',\n        xytext=(0,7), \n        textcoords='offset points',\n        clip_on=True,                   # <---  important\n    )\nplt.show();","392c1540":"value_df[value_df[\"cluster_1\"] == 0]","d573cad3":"value_df[value_df[\"cluster_1\"] == 1]","0af492a1":"value_df[value_df[\"cluster_1\"] == 2]","31832ec9":"value_df[value_df[\"cluster_1\"] == 3]","7c96354f":"print(f'Silhouette Score(n=4): {silhouette_score(X, value_df.cluster_1)}') # towards to 1 means, data good clustered by model","d2d19603":"from sklearn.cluster import MeanShift","9bbe2065":"model2 = MeanShift(bandwidth=.1).fit(X)","543b3708":"model2.fit_predict(X)","191dfb9f":"model2.labels_","39539ad8":"value_df[\"cluster_2\"] = model2.labels_","9e7f0a31":"plt.figure(figsize=(15,10))\nplt.title(\"Cluster Count\")\nax1 = sns.countplot(x = value_df.cluster_2)\n\nfor p in ax1.patches:\n    ax1.annotate(\n        s=f\"{p.get_height():1.0f}\",\n        xy=(p.get_x() + p.get_width() \/ 2., p.get_height()), \n        xycoords='data',\n        ha='center', \n        va='center', \n        fontsize=11, \n        color='black',\n        xytext=(0,7), \n        textcoords='offset points',\n        clip_on=True,                   # <---  important\n    )\nplt.show();","7dbac2a3":"value_df[value_df[\"cluster_2\"] == 0]","24dd983f":"# TASK","50548b84":"## Deal with missing values \n* Hint-1, use wikipedia to fill in missing values \u200b\u200bcomparing with similar countries\n* Hint-2, Georeferences of countries can help you","f801d579":"# Ingest Data  ","baa50ec8":"### Dendogram","103af07c":"## Detect and drop duplicated columns","d16f6328":"# Hello All.","84606f7a":"#### 1. Import Libraries, Load Dataset, Exploring Data\n- Import Libraries\n- Load Dataset\n- Explore Data\n\n#### 2. Exploratory Data Analysis (EDA)\n\n\n#### 3. Cluster Analysis\n\n- Clustering based on Age and Spending Score\n\n    *i. Create a new dataset with two variables of your choice*\n    \n    *ii. Determine optimal number of clusters*\n    \n    *iii. Apply K Means*\n    \n    *iv. Visualizing and Labeling All the Clusters*\n    \n    \n- Clustering based on Annual Income and Spending Score\n\n    *i. Create a new dataset with two variables of your choice*\n    \n    *ii. Determine optimal number of clusters*\n    \n    *iii. Apply K Means*\n    \n    *iv. Visualizing and Labeling All the Clusters*\n    \n    \n- Hierarchical Clustering\n\n    *i. Determine optimal number of clusters using Dendogram*\n\n    *ii. Apply Agglomerative Clustering*\n\n    *iii. Visualizing and Labeling All the Clusters* \n\n- Conclusion","b322fc6e":"# Import Libraries","bf4f0179":"# Data Preprocessing","64531e14":"### Evaluate ","481aa812":"# EDA","848d0925":"## Decriptive statistics","cef2270b":"### Model Building and label visualisation","d33de828":"## Fix the dtypes","7f756a71":"## Check for missing values ","de27994c":"## Drop the features that not affect military power\n* Hint-1,  Georeferences not proper features","133cadcb":"At the end of the project, we will have performed Cluster Analysis with an Unsupervised Learning method.","c039679f":"## Clustering with K-means","6d3c4dc0":"## Visualy inspect the some features","b5e1d19f":"## Hopkins Test \n#### Assess the clusterability of a dataset. A score between 0 and 1, a score around 0.5 express no clusterability, a score tending to 1 express an uniform distrubution so clustering can't be useful and  0 express  not an uniform distrubution hence clusterering can be useful.","b56b223a":"### Model Building and label visualisation","6b2b87f6":"## Hierarchical Clustering","659afbad":"Today, we will work on Military Power Clustering Project. For this, we will use a dataset that allows us to see the world military rankings in 2020 and numerical status such as the army, navy, and air force. In addition, some related data such as population and economy related to military power are also included.","0dd4e67c":"## Convert multi index columns to one level","e36a1efd":"# Modelling","19fc053d":"https:\/\/data.world\/vizzup\/world-military-power\/workspace\/file?filename=World+military+power.xlsx","013de2a9":"## Implement basic steps to see how is your data looks like","31268e05":"### Evaluate ","8f4a18b1":"### Elbow Method \n### We use this method to find optimal k value by looking up to break point of graph. "}}