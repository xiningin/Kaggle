{"cell_type":{"72058b77":"code","a96b7c79":"code","bdc23ffa":"code","b05fa743":"code","d98ee20e":"code","df9b6e9d":"code","9cc00d49":"code","5c0ea4eb":"markdown","8cbbac25":"markdown","78dfe766":"markdown","cb1c5d86":"markdown","0dcd8d37":"markdown"},"source":{"72058b77":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBClassifier\nfrom sklearn import preprocessing\n\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score","a96b7c79":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nall_data = [train_data, test_data]","bdc23ffa":"# Fill in missing values\n\nfor datadf in all_data:    \n    #complete missing age with median\n    datadf['Age'].fillna(datadf['Age'].median(), inplace = True)\n\n    #complete embarked with mode\n    datadf['Embarked'].fillna(datadf['Embarked'].mode()[0], inplace = True)\n\n    #complete missing fare with median\n    datadf['Fare'].fillna(datadf['Fare'].median(), inplace = True)\n    \n# Getting rid of irrelevant columns: Passanger ID, Cabin number, and Ticker number\ndrop_column = ['PassengerId','Cabin', 'Ticket']\nfor datadf in all_data:    \n    datadf.drop(drop_column, axis=1, inplace = True)","b05fa743":"# Replace Categorical variables with numbers\ntrain_data['Sex'].replace(to_replace=['male','female'], value=[0,1],inplace=True)\ntrain_data['Embarked'].replace(to_replace=['C','Q', 'S'], value=[0,1,2],inplace=True)\n\ntest_data['Sex'].replace(to_replace=['male','female'], value=[0,1],inplace=True)\ntest_data['Embarked'].replace(to_replace=['C','Q', 'S'], value=[0,1,2],inplace=True)","d98ee20e":"X = train_data\ny = train_data['Survived'].values\nX.drop(['Name'],axis = 1, inplace = True)\nX.drop(['Survived'],axis = 1, inplace = True)\n\nX_submit = test_data\nX_submit.drop(['Name'],axis = 1, inplace = True)\n\nX = preprocessing.StandardScaler().fit(X).transform(X)\nX_submit = preprocessing.StandardScaler().fit(X_submit).transform(X_submit)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","df9b6e9d":"model = XGBClassifier(n_estimators=250, learning_rate=0.02).fit(X_train,y_train)\n\n# Make predictions\npredictions = model.predict(X_test)\n    \n# Evaluate the model\nprint(\"XGB accuracy: %.2f\" % accuracy_score(y_test, predictions))\nprint(\"XGB F1-score: %.2f\" % f1_score(y_test, predictions, average='weighted') )    ","9cc00d49":"prediction_submit = model.predict(X_submit)\n\n# Save the predictions as a csv file\ntestdata = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\noutput = pd.DataFrame({'PassengerId': testdata.PassengerId, 'Survived': prediction_submit})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","5c0ea4eb":"# Create and Train the Model","8cbbac25":"# Clean the Data","78dfe766":"# Make Predictions on the Test Data ","cb1c5d86":"# Imports ","0dcd8d37":"# Get the Data"}}