{"cell_type":{"ee385760":"code","23eece92":"code","3db317a7":"code","101b4a00":"code","45e3b9fb":"code","d531c953":"code","74e77050":"code","75302b2b":"code","4fe40aa1":"code","8680aa5c":"code","0efb842a":"code","22845822":"code","c9dc1066":"code","2993237b":"code","68b86b0b":"code","92ae96bb":"code","2edc2ee6":"code","f08bb699":"code","880eecac":"code","0b672762":"code","19733f66":"code","e43a0666":"code","eb6913a6":"code","f5a2d188":"code","ba92a2d6":"code","b17ef655":"code","5c346b29":"code","9307541b":"code","fb017d95":"code","d7696a74":"code","1e0a0fd0":"code","92bead06":"code","841dcc56":"code","5ccf23c0":"code","24d551c1":"code","2c036bde":"code","e92443c2":"markdown","15a93247":"markdown","2eb18013":"markdown","b7abdc73":"markdown"},"source":{"ee385760":"import pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom shapely.geometry import Point\nimport geopandas as gpd\nfrom geopandas import GeoDataFrame\nimport seaborn as sns","23eece92":"sample_size = 50000","3db317a7":"data = pd.read_csv(\"..\/input\/restaurant-recommendation-challenge\/train_full.csv\")\ndata = data.sample(sample_size)","101b4a00":"data.shape","45e3b9fb":"x ={}","d531c953":"for col in data.columns:\n    if data[col].dtype not in x.keys():\n        x[data[col].dtype] = 1\n    else:\n        x[data[col].dtype]+=1","74e77050":"x","75302b2b":"x = data.isna().count()","4fe40aa1":"data.head()","8680aa5c":"data.target.value_counts()","0efb842a":"data.info()","22845822":"orders =pd.read_csv(\"..\/input\/restaurant-recommendation-challenge\/orders.csv\")\norders = orders.sample(sample_size)","c9dc1066":"vendors = pd.read_csv(\"..\/input\/restaurant-recommendation-challenge\/vendors.csv\")\n","2993237b":"data.head()","68b86b0b":"orders.head()","92ae96bb":"vendors.head()","2edc2ee6":"data.describe()","f08bb699":"# Visualising status_x and verified_X\ndata[['status_x','verified_x']].hist(grid=False)\nplt.tight_layout()\n\nplt.show()","880eecac":"#Plotting distribution of gender and location_type\n\nfig,ax= plt.subplots(1, 2)\nax[0].pie(data.gender.value_counts(),labels=['Male','Female'])\ndata['location_type'].hist(ax=ax[1],grid=False)\nplt.tight_layout()\nplt.show()","0b672762":"# plotting lattitudes and longitudes of customers data\n\ndf = data[[\"latitude_x\",\"longitude_x\"]]\n\ngeometry = [Point(xy) for xy in zip(df['latitude_x'], df['longitude_x'])]\ngdf = GeoDataFrame(df, geometry=geometry)   \n\n#this is a simple map that goes with geopandas\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\ngdf.plot(ax=world.plot(figsize=(20,10)), marker='o', color='red', markersize=15);","19733f66":"#Plotting lattitude and longitude of vendors data\n\ndf = data[[\"latitude_y\",\"longitude_y\"]]\n\ngeometry = [Point(xy) for xy in zip(df['latitude_y'], df['longitude_y'])]\ngdf = GeoDataFrame(df, geometry=geometry)   \n\n#this is a simple map that goes with geopandas\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\ngdf.plot(ax=world.plot(figsize=(20,10)), marker='o', color='red', markersize=15);","e43a0666":"data.location_number.unique()","eb6913a6":"#Discount given by vendors\n\nplt.pie(data.discount_percentage.value_counts(),labels=data.discount_percentage.unique(),autopct='%1.0f%%',explode=[0.1,0.2,0,0.1,0])\nplt.show()","f5a2d188":"#Target distribution\n\nplt.pie(data.target.value_counts(),labels=data.target.unique(),autopct='%1.0f%%',explode=[0.1,0])\nplt.show()","ba92a2d6":"data['prepration_time'].hist(color='red')\nplt.grid(False)","b17ef655":"# corelation matrix of training data\nsns.heatmap(data.corr())","5c346b29":"orders.describe()","9307541b":"orders.head()","fb017d95":"# Modes pf payment used\nplt.pie(orders.payment_mode.value_counts(),labels=orders.payment_mode.unique(),autopct='%1.0f%%',explode=[0.1,0.2,0,0.1,0])\n\nplt.show()","d7696a74":"# Distribution of numerical features\nfig, ax = plt.subplots(1, 2)\nsns.distplot(orders['grand_total'], ax=ax[0], color='gold')\nsns.distplot(orders['item_count'], ax=ax[1])\nplt.tight_layout()\nplt.show()","1e0a0fd0":"sns.heatmap(orders.corr())\nplt.show()","92bead06":"# scatter plot of payment and items\n\nfig, ax = plt.subplots(1, 2)\norders['delivery_date'] = pd.to_datetime(orders['delivery_date'])\nax[0].scatter(orders.set_index('delivery_date').index, orders['item_count'], \n              label='items', alpha=0.6, color='red')\nax[0].legend()\n\nax[1].scatter(orders.set_index('delivery_date').index, orders['grand_total'], \n              label='total pay', alpha=0.6, color='green')\nax[1].legend()\nplt.tight_layout()\nplt.show()","841dcc56":"orders.groupby('customer_id').mean()['grand_total'].plot(marker='.', linestyle='none', color='gold')\nplt.title('total cost');","5ccf23c0":"df = vendors[[\"latitude\",\"longitude\"]]\n\ngeometry = [Point(xy) for xy in zip(df['latitude'], df['longitude'])]\ngdf = GeoDataFrame(df, geometry=geometry)   \n\n#this is a simple map that goes with geopandas\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\ngdf.plot(ax=world.plot(figsize=(20,10)), marker='o', color='red', markersize=15);","24d551c1":"plt.title(\"one_click_vendor\")\nplt.pie(vendors.one_click_vendor.value_counts(),labels='Y')\nplt.show()","2c036bde":"plt.title(\"city_id\")\nplt.pie(vendors.city_id.value_counts(),labels=[\"1.0\"])\nplt.show()","e92443c2":"### taking sample size of 50k for visualization","15a93247":"# Data Insights","2eb18013":"# Reading data","b7abdc73":"# Importing required libraries"}}