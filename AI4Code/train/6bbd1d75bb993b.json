{"cell_type":{"b05ecb80":"code","914009f6":"code","69c108fa":"code","1d33966d":"code","930a6991":"code","42b21dd3":"code","67ff2042":"code","01c2a47e":"code","a8b56725":"code","5c96f742":"code","2b513e5b":"code","51c6b347":"code","b7455dc3":"code","baf5397a":"code","8a4dd50a":"code","5b96bc17":"code","d982cc22":"code","487ea0b6":"code","5e652681":"code","a4dc0890":"code","61e62198":"code","3d988910":"code","c95eab6f":"code","f5de8163":"code","1c9dfcb5":"code","1b10f536":"code","e1b8b596":"code","c497b99d":"code","3f40cea5":"code","35ec3621":"code","67de283c":"code","5c0ca6b1":"code","33d32f93":"code","1223ac4e":"code","efe17b9f":"code","250fe8a2":"code","7fcace33":"code","946b4d2f":"code","30024a0c":"code","591890fa":"code","a06c9ef7":"code","753692ab":"code","527bbd7d":"code","22b18b9f":"code","8e128166":"code","4c2c926c":"code","20305208":"code","9623e61d":"code","0bea6bc1":"code","d42080c5":"code","093daea2":"code","1968410e":"code","72b55704":"code","d0ebbce8":"code","b47de1f9":"code","df876405":"code","546a75a4":"code","88c0e9c5":"code","21d10f8a":"code","6edb9cda":"code","77fe89f8":"markdown","753acd84":"markdown","f2986a4c":"markdown","b9061af5":"markdown","315f99fd":"markdown","8eaf0fc8":"markdown","7a2cbb80":"markdown","c338c8e6":"markdown","ee40ed28":"markdown","73a02c4b":"markdown"},"source":{"b05ecb80":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","914009f6":"raw_data = pd.read_csv('..\/input\/graduate-admissions\/Admission_Predict.csv')","69c108fa":"raw_data.head()","1d33966d":"raw_data.describe(include = 'all')","930a6991":"raw_data.isnull().sum()","42b21dd3":"data_cleaned = raw_data.drop(['Serial No.'], axis = 1)","67ff2042":"data_cleaned.describe(include = 'all')","01c2a47e":"sns.distplot(data_cleaned['GRE Score'])","a8b56725":"q = data_cleaned['GRE Score'].quantile(0.01)\ndata_1 = data_cleaned[data_cleaned['GRE Score']>q]\ndata_1.describe(include = 'all')","5c96f742":"sns.distplot(data_1['GRE Score'])","2b513e5b":"sns.distplot(data_1['TOEFL Score'])","51c6b347":"q = data_1['TOEFL Score'].quantile(0.01)\ndata_2 = data_1[data_1['TOEFL Score']>q]\ndata_2.describe(include = 'all')","b7455dc3":"sns.distplot(data_2['TOEFL Score'])","baf5397a":"data_2.columns.values","8a4dd50a":"sns.distplot(data_2['University Rating'])","5b96bc17":"q = data_2['University Rating'].quantile(0.01)\ndata_3 = data_2[data_2['University Rating']>q]\ndata_3.describe(include = 'all')","d982cc22":"sns.distplot(data_3['University Rating'])","487ea0b6":"sns.distplot(data_3['SOP'])","5e652681":"q = data_3['SOP'].quantile(0.01)\ndata_4 = data_3[data_3['SOP']>q]\ndata_4.describe(include = 'all')","a4dc0890":"sns.distplot(data_4['SOP'])","61e62198":"data_4","3d988910":"sns.distplot(data_4['LOR '])","c95eab6f":"q = data_4['LOR '].quantile(0.01)\ndata_5 = data_4[data_4['LOR ']>q]\ndata_5.describe(include = 'all')","f5de8163":"sns.distplot(data_5['LOR '])","1c9dfcb5":"sns.distplot(data_5['CGPA'])","1b10f536":"q = data_5['CGPA'].quantile(0.01)\ndata_6 = data_5[data_5['CGPA']>q]\ndata_6.describe(include  = 'all')","e1b8b596":"sns.distplot(data_6['CGPA'])","c497b99d":"sns.distplot(data['Research'])","3f40cea5":"sns.distplot(data_6['Chance of Admit '])","35ec3621":"q = data_6['Chance of Admit '].quantile(0.01)\ndata_7 = data_6[data_6['Chance of Admit ']>q]\ndata_7.describe(include = 'all')","67de283c":"sns.distplot(data_7['Chance of Admit '])","5c0ca6b1":"data_cleaned = data_7.reset_index(drop = True)","33d32f93":"data_cleaned.describe(include = 'all')","1223ac4e":"f, (ax1,ax2,ax3) = plt.subplots(1,3, sharey=True, figsize=(15,3))\nax1.scatter(data_cleaned['GRE Score'], data_cleaned['Chance of Admit '])\nax1.set_title('Chance of Admit and GRE Score')\nax2.scatter(data_cleaned['TOEFL Score'], data_cleaned['Chance of Admit '])\nax2.set_title('Chance of Admit and TOEFL Score')\nax3.scatter(data_cleaned['CGPA'],data_cleaned['Chance of Admit '])\nax3.set_title('Chance of Admit and CGPA')\n\nplt.show()","efe17b9f":"f, (ax1,ax2,ax3) = plt.subplots(1,3, sharey=True, figsize=(15,3))\nax1.scatter(data_cleaned['University Rating'], data_cleaned['Chance of Admit '])\nax1.set_title('Chance of Admit and University Rating')\nax2.scatter(data_cleaned['SOP'], data_cleaned['Chance of Admit '])\nax2.set_title('Chance of Admit and SOP')\nax3.scatter(data_cleaned['LOR '],data_cleaned['Chance of Admit '])\nax3.set_title('Chance of Admit and Research')\n\nplt.show()","250fe8a2":"data_cleaned = data_cleaned.reset_index(drop = True)","7fcace33":"data_cleaned.describe(include = 'all')","946b4d2f":"targets = data_cleaned['Chance of Admit ']\ninputs = data_cleaned.drop(['Chance of Admit '], axis = 1)","30024a0c":"#using sklearn.preprocessing -> StandardScaler\nscaler = StandardScaler()\nscaler.fit(inputs)","591890fa":"inputs_scaled = scaler.transform(inputs)","a06c9ef7":"#using sklearn.modelselection -> train_test_split\nx_train,x_test,y_train,y_test = train_test_split(inputs_scaled, targets, test_size = 0.2, random_state = 365)","753692ab":"reg = LinearRegression()\nreg.fit(x_train,y_train)","527bbd7d":"y_hat = reg.predict(x_train)","22b18b9f":"plt.scatter(y_train, y_hat)\nplt.xlabel('Targets(y_train)', size = 10)\nplt.ylabel('Predictions(y_hat)', size = 10)\nplt.show()","8e128166":"#Plot For Residuals\nsns.distplot(y_train - y_hat)\nplt.title('Residual PDFs', size =18)","4c2c926c":"## R-Squared\nreg.score(x_train,y_train)","20305208":"reg.intercept_","9623e61d":"reg.coef_","0bea6bc1":"reg_summary = pd.DataFrame(inputs.columns.values, columns = ['Features'])\nreg_summary['Weights'] = reg.coef_\nreg_summary","d42080c5":"y_hat_test = reg.predict(x_test)","093daea2":"plt.scatter(y_test, y_hat_test, alpha=0.2)\nplt.xlabel('Targets(y_test)', size = 18)\nplt.ylabel('Predictions(y_hat_test)', size = 18)\n\nplt.show()","1968410e":"df_pf = pd.DataFrame(np.exp(y_hat_test), columns=['Predictions'])\ndf_pf.head()","72b55704":"df_pf['Target'] = np.exp(y_test)\ndf_pf","d0ebbce8":"y_test= y_test.reset_index(drop=True)","b47de1f9":"y_test.head()","df876405":"df_pf['Target'] = np.exp(y_test)\ndf_pf","546a75a4":"df_pf['Residual'] = df_pf['Target'] - df_pf['Predictions']","88c0e9c5":"df_pf['Difference'] = np.absolute(df_pf['Residual']\/df_pf['Target']*100)","21d10f8a":"df_pf","6edb9cda":"pd.options.display.max_rows = 999\npd.set_option('display.float_format', lambda x: '% 2f' % x)\ndf_pf.sort_values(by = ['Difference'])","77fe89f8":"## Hello, I am a complete begineer to Data Science\n## Any kind of inputs are welcome as I'd love to learn more!","753acd84":"## Linear Regression Model\n\n## Declaring Inputs and Targets","f2986a4c":"## Testing","b9061af5":"## Exploring the PDFs and trying to achieve a Normal Distribution","315f99fd":"## Creating the Regression","8eaf0fc8":"## Loading the Data","7a2cbb80":"## Scaling the Data","c338c8e6":"## Finding Weight and Bias","ee40ed28":"## Test Train Split","73a02c4b":"## Checking OLS Assumptions"}}