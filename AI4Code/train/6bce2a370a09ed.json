{"cell_type":{"94f1d0ab":"code","fd97354d":"code","5c12ab3e":"code","bfcfecca":"code","d081f5ee":"code","7b61fb27":"code","797d5b8d":"markdown","800426cf":"markdown","32ff550a":"markdown","e7479ea5":"markdown","6e6c1f43":"markdown"},"source":{"94f1d0ab":"# Packages imports and installation. \nimport numpy as np \nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n     \n!pip install bar_chart_race\nimport bar_chart_race as bcr\n\n","fd97354d":"# Read the dataset\nnumber_arrivals_historic = pd.read_csv('..\/input\/tourism-nr-arrivals-data\/International tourism_number of arrivals_Data.csv')\n\n# Let's take a look to the table\nnumber_arrivals_historic.sample(10)","5c12ab3e":"# Reformating table\nnumber_arrivals_historic = number_arrivals_historic.drop(\"Series Name\", axis=1).set_index(\"Country Name\").transpose()\n\n# We drop null columns \nnumber_arrivals_historic = number_arrivals_historic.dropna(axis = \"columns\")\n\n# We take a look\nnumber_arrivals_historic.head(10)","bfcfecca":"# We replace \"..\" with \"NaN\"\nnumber_arrivals_historic = number_arrivals_historic.replace(\"..\", np.NaN)\n\n# We detect the columns that values are object type. \ns = number_arrivals_historic.select_dtypes(include='object').columns\n\n# We transform object to float \nnumber_arrivals_historic[s] = number_arrivals_historic[s].astype(float)\n\n# Dtype is float64 now but there is some null in several columns \nnumber_arrivals_historic.info(verbose = True, show_counts = True)","d081f5ee":"# We drop any column with at least one NaN value. \nnumber_arrivals_historic = number_arrivals_historic.dropna(axis='columns')\n\n# All the remain columns has 15 non-null values. \nnumber_arrivals_historic.info(verbose = True, show_counts = True)","7b61fb27":"# Source: https:\/\/pypi.org\/project\/bar-chart-race\/\n\n# Top 10 Countries (note: takes a few minutes to process)\nbcr.bar_chart_race(\n    df=number_arrivals_historic,\n    title='Number of Arrivals (2004-2018): Top 10 Countries',\n    #filename= \"number_of_arrivals_2004_2018_.mp4\", # If None then display on screen, else save to .mp4 file\n    filename= None,\n    figsize=(5,4),\n    dpi=144, # Default 144, Use >288 dpi for better file export resolution\n    #cmap='dark12', \n    fixed_max=True,\n    sort='desc',\n    steps_per_period=15, # Default=10, higher value=faster speed\n    period_length=1000, # Default=500, higher value=longer duration\n    n_bars=10, # Max number of bars displayed, if not defined then all data shown\n    filter_column_colors=True,\n    period_label={'x': .95, 'y': .77, 'ha': 'right', 'va': 'center'},\n    period_summary_func=lambda v, r: {'x': .95, 'y': .10,\n                                      's': f'Global: {v.sum():,.0f} arrivals',\n                                      'ha': 'right', 'size': 7, 'family': 'Courier New'},\n    perpendicular_bar_func='median',\n    shared_fontdict={'family' : 'Courier New', 'color' : '.1'},\n    bar_size=.95,\n    bar_kwargs={'alpha': .7},\n    )","797d5b8d":"## Installing and Importing Packages\nFirst things first, I added the standard `os`, `np` and `pandas`  and I installed the `bar_chart_race` and import it.","800426cf":"# Bar Chart Race of Number of arrivals from 2004-2018\n*Data downloaded from World Bank Data*  \n*https:\/\/data.worldbank.org\/indicator\/ST.INT.ARVL*\n\n\n\"International inbound tourists (overnight visitors) are the number of tourists who travel to a country other than that in which they have their usual residence, but outside their usual environment, for a period not exceeding 12 months and whose main purpose in visiting is other than an activity remunerated from within the country visited. When data on number of tourists are not available, the number of visitors, which includes tourists, same-day visitors, cruise passengers, and crew members, is shown instead. Sources and collection methods for arrivals differ across countries. In some cases data are from border statistics (police, immigration, and the like) and supplemented by border surveys. In other cases data are from tourism accommodation establishments. For some countries number of arrivals is limited to arrivals by air and for others to arrivals staying in hotels. Some countries include arrivals of nationals residing abroad while others do not. Caution should thus be used in comparing arrivals across countries. The data on inbound tourists refer to the number of arrivals, not to the number of people traveling. Thus a person who makes several trips to a country during a given period is counted each time as a new arrival.\" (Extracted from World Bank Data)\n\n\n\n\nWe want to construct a Bar Chart Race pof Countries regarding their arrivals number. We inspired and learnt by the Bar Chart Race of Coffe Production. Here is the link: https:\/\/firefortysix.com\/2021\/10\/23\/quick-and-easy-way-to-generate-a-bar-chart-race-using-python\/  \n\n\n","32ff550a":"## Reformatting Data\nAccording to the `bar_chart_race` [PyPI page](https:\/\/pypi.org\/project\/bar-chart-race\/), the input dataframe required that every row represents a date and every column represents an entity(i.e. country, name, etc.)\n\nSo we had to do some changes in dataframe in order to comply with input requirements. We drop the column Series Name, we set the Country Name as index and we transpose it. \n\nIn the last step we check any null data and we chose to eliminate every column that has at leats one null observation. ","e7479ea5":"## Generating Bar Chart Race\n\nOnce our dataframe had the right format to be input, we generate the bar race chart in format mp4 and html.  ","6e6c1f43":"## Loading Data\nI downloaded the dataset from World Bank Data (https:\/\/data.worldbank.org\/indicator\/ST.INT.ARVL), and called `pd.read_csv()`. I's was posible to custimize the dataset from the same website(indicator, period, output file, etc.)\n\nI chose the period 2004-2018 because one of the most important play in tourism, France, only had information available for that period. \n"}}