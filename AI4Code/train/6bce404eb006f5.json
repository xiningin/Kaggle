{"cell_type":{"3876fce7":"code","ed14ad20":"code","43642677":"code","085701e0":"code","f6366919":"code","bd2bde94":"code","cf325c65":"code","6159da18":"code","d9ff8af4":"code","8f98955e":"code","26989caa":"code","2b6ca950":"code","63bdc1b2":"code","e7fde8ca":"code","a2ac310b":"code","550bd82a":"code","103fe360":"code","d58c4940":"code","d3d58be4":"markdown","cb7acadb":"markdown","33732b72":"markdown","dddb8bed":"markdown","30625a1d":"markdown","11d04261":"markdown","e0a3a542":"markdown","05719e62":"markdown","cb7ac05f":"markdown","d0317165":"markdown","9ee9ce0f":"markdown"},"source":{"3876fce7":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans\n\npd.set_option('display.max_columns', 500)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","ed14ad20":"df = pd.read_csv('..\/input\/wuzzuf-jobs\/Wuzzuf_Jobs.csv')\ndf.head()","43642677":"fig , ax   = plt.subplots (figsize = (18 , 6))\ndf.Title.value_counts().sort_values(ascending  = False).reset_index().head(25).plot(kind = 'bar' ,\n                                                                                    x = 'index' , ax = ax ,\n                                                                                   alpha = 0.7 ,  color = 'grey' , \n                                                                                    width=0.4);\nax.grid(axis = 'y' , alpha=0.6)\n\n\nfor patch in ax.patches:\n    bl = patch.get_xy()\n    x = 0.5 * patch.get_width() + bl[0]\n    y = 1.02 * patch.get_height() + bl[1] \n    ax.text(x,y,\"%d\" %(patch.get_height()),\n            ha='center' , color = '#4a4a4a',\n           fontsize = 12, fontfamily='serif')\n    \n    \n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nplt.ylabel('Number of posted jobs' , fontsize = 14, fontfamily='serif');\nplt.xlabel('Job Titel' , fontsize = 14, fontfamily='serif');\n\n\nplt.xticks(fontsize = 12 , rotation = 90 , fontfamily='serif');\n\nplt.title('Most Job Titles Posted on Website ' ,fontsize = 16, fontfamily='serif' );","085701e0":"df['titel_adj'] = df.Title.apply(lambda x: 'Sales' if 'Sales' in x  or 'Telesales' in x else x)\ndf['titel_adj'] = df.titel_adj.apply(lambda x: 'Accountant' if 'Accountant' in x or 'Accounting' in x else x)\ndf['titel_adj'] = df.titel_adj.apply(lambda x: 'Marketing' if 'Marketing' in x else x)\ndf['titel_adj'] = df.titel_adj.apply(lambda x: 'HR' if 'HR' in x else x)\ndf['titel_adj'] = df.titel_adj.apply(lambda x: 'Graphic designer' if 'Graphic' in x else x)\ndf['titel_adj'] = df.titel_adj.apply(lambda x: 'Bussiness Developer' if 'Bussiness Developer' in x else x)","f6366919":"fig , ax   = plt.subplots (figsize = (18 , 5))\ndf.titel_adj.value_counts().sort_values(ascending  = False).reset_index().head(25).plot(kind = 'bar' ,\n                                                                                        x = 'index' , ax = ax,\n                                                                                        alpha = 0.7 ,  color = 'grey' , \n                                                                                        width=0.4);\n\nax.grid(axis = 'y' , alpha=0.6)\n\n\nfor patch in ax.patches:\n    bl = patch.get_xy()\n    x = 0.5 * patch.get_width() + bl[0]\n    y = 1.02 * patch.get_height() + bl[1] \n    ax.text(x,y,\"%d\" %(patch.get_height()),\n            ha='center' , color = '#4a4a4a',\n           fontsize = 12, fontfamily='serif')\n    \n    \n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nplt.ylabel('Number of posted jobs' , fontsize = 14, fontfamily='serif');\nplt.xlabel('Job Titel' , fontsize = 14, fontfamily='serif');\n\n\nplt.xticks(fontsize = 12 , rotation = 90 , fontfamily='serif');\n\nplt.title('Most Job Titles Posted on Website ' ,fontsize = 16, fontfamily='serif' );","bd2bde94":"\nsales_skills = Counter()\ndf_Sales = df[df['titel_adj']  == 'Sales'].reset_index()\n\nfor i in range(df_Sales.shape[0]):\n    for j in df_Sales.Skills[i].split(', '):\n        sales_skills [j] += 1\n\nsales_skills = sorted(sales_skills.items(), key=lambda x: x[1] , reverse=True)[0:25]\n\nx, y = zip(*sales_skills) # unpack a list of pairs into two tuples\n\nfig , ax   = plt.subplots (figsize = (18 , 5))\nplt.bar(x, y , alpha = 0.7 ,  color = 'grey' , width=0.4);\n\nax.grid(axis = 'y' , alpha=0.6)\n\n\nfor patch in ax.patches:\n    bl = patch.get_xy()\n    x = 0.5 * patch.get_width() + bl[0]\n    y = 1.02 * patch.get_height() + bl[1] \n    ax.text(x,y,\"%d\" %(patch.get_height()),\n            ha='center' , color = '#4a4a4a',\n           fontsize = 12, fontfamily='serif')\n    \n    \n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nplt.ylabel('Number of skill\\'s Occurance' , fontsize = 14, fontfamily='serif');\nplt.xlabel('Sales Skills' , fontsize = 14, fontfamily='serif');\n\n\nplt.xticks(fontsize = 12 , rotation = 90 , fontfamily='serif');\n\nplt.title('Most Important Skills for Sales ' ,fontsize = 16, fontfamily='serif' );","cf325c65":"all_skills = Counter()\nfor i in range(df.shape[0]):\n    for j in df.Skills[i].split(', '):\n        all_skills[j] +=1\nall_skills = sorted(all_skills.items(), key=lambda x: x[1] , reverse=True)[0:25]\n\nx, y = zip(*all_skills) # unpack a list of pairs into two tuples\n\nfig , ax   = plt.subplots (figsize = (18 , 5))\nplt.bar(x, y , alpha = 0.7 ,  color = 'grey' , width=0.4);\n\nax.grid(axis = 'y' , alpha=0.6)\n\n\nfor patch in ax.patches:\n    bl = patch.get_xy()\n    x = 0.5 * patch.get_width() + bl[0]\n    y = 1.02 * patch.get_height() + bl[1] \n    ax.text(x,y,\"%d\" %(patch.get_height()),\n            ha='center' , color = '#4a4a4a',\n           fontsize = 12, fontfamily='serif')\n    \n    \n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nplt.ylabel('Number of skill\\'s Occurance' , fontsize = 14, fontfamily='serif');\nplt.xlabel('Skills' , fontsize = 14, fontfamily='serif');\n\n\nplt.xticks(fontsize = 12 , rotation = 90 , fontfamily='serif');\n\nplt.title('Most Important Skills for All Jobs ' ,fontsize = 16, fontfamily='serif' );","6159da18":"Marketing_skills = Counter()\ndf_Marketing = df[df['titel_adj']  == 'Marketing'].reset_index()\n\nfor i in range(df_Marketing.shape[0]):\n    for j in df_Marketing.Skills[i].split(', '):\n        Marketing_skills [j] += 1\n\nMarketing_skills = sorted(Marketing_skills.items(), key=lambda x: x[1] , reverse=True)[0:25]\n\nx, y = zip(*Marketing_skills) # unpack a list of pairs into two tuples\n\nfig , ax   = plt.subplots (figsize = (18 , 5))\nplt.bar(x, y , alpha = 0.7 ,  color = 'grey' , width=0.4 );\n\nax.grid(axis = 'y' , alpha=0.6)\nfor patch in ax.patches:\n    bl = patch.get_xy()\n    x = 0.5 * patch.get_width() + bl[0]\n    y = 1.02 * patch.get_height() + bl[1] \n    ax.text(x,y,\"%d\" %(patch.get_height()),\n            ha='center' , color = '#4a4a4a',\n           fontsize = 12, fontfamily='serif')\n    \n    \n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nplt.ylabel('Number of skill\\'s Occurance' , fontsize = 14, fontfamily='serif');\nplt.xlabel('Marketing Skills' , fontsize = 14, fontfamily='serif');\n\n\nplt.xticks(fontsize = 12 , rotation = 90 , fontfamily='serif');\n\nplt.title('Most Important Skills for Marketing ' ,fontsize = 16, fontfamily='serif' );","d9ff8af4":"all_skills = Counter()\nfor i in range(df.shape[0]):\n    for j in df.Skills[i].split(', '):\n        all_skills[j] +=1\nall_skills = dict(sorted(all_skills.items(), key=lambda x: x[1] , reverse=True))\nskills_columns = list(all_skills.keys())","8f98955e":"df_new= df.copy()\ndf_new[skills_columns] = 0\ndf_new.drop(['Title', 'Company', 'Location', 'Type', 'Level', 'YearsExp', 'Country', 'Skills','titel_adj'] , axis  = 1 , inplace = True)","26989caa":"for i in range (df_new.shape[0]):\n    for j in range (df_new.shape[1]):\n        if df_new.columns[j] in df.Skills[i]:\n            df_new[df_new.columns[j]] [i] = 1","2b6ca950":"df_new.shape","63bdc1b2":"df_new.head(10)","e7fde8ca":"pca = PCA(n_components=2)\npca.fit(df_new.values)\npca_features = pca.transform(df_new.values)\n\n\nmodel = KMeans(n_clusters=3)\nmodel.fit(pca_features)\n\n\nlabels = model.labels_\n\nlabels","a2ac310b":"df['label'] = pd.DataFrame({'label':labels})","550bd82a":"print(f'Total numbers of jobs posted in group 0 :  {len(df[df.label == 0].Title.tolist())} \\n ____________' )\nprint ('Sample 100 job title in group 0')\nprint('_'*20)\ndf[df.label == 0]['Title'].tolist()[0:100]","103fe360":"print(f'Total numbers of jobs posted in group 1 :  {len(df[df.label == 1].Title.tolist())} \\n ____________' )\nprint ('Sample 100 job title in group 1')\nprint('_'*20)\ndf[df.label == 1]['Title'].tolist()[0:100]","d58c4940":"print(f'Total numbers of jobs posted in group 2 :  {len(df[df.label == 2].Title.tolist())} \\n ____________' )\ndf[df.label == 2]['Title'].tolist()[0:100]","d3d58be4":"<div dir=\"rtl\"><h2>\n    <br>\n    \u0627\u0644\u062f\u0627\u062a\u0627 \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 4 \u0627\u0644\u0627\u0641 \u0648 \u0634\u0648\u064a\u0629 \u0648\u0638\u064a\u0641\u0629 \u0627\u062a\u0639\u0631\u0636\u0648\u0627 \u0639\u0644\u0649 \u0645\u0648\u0642\u0639 \u0648\u0638\u0641 \u062f\u0648\u062a \u0643\u0648\u0645  ( \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u062a\u062e\u0635 \u0627\u0633\u0645 \u0627\u0644\u0648\u0638\u064a\u0641\u0629 \u0648 \u0627\u0644\u0634\u0631\u0643\u0629 \u0627\u0644\u0645\u0639\u0644\u0646\u0629 \u0648 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u0644\u0634\u063a\u0644\u0627\u0646\u0629 \u0648 \u0634\u0648\u064a\u0629 \u062d\u0627\u062c\u0627\u062a \u062a\u0627\u0646\u064a\u0629)\n    <br><br><br>\n     \u0637\u064a\u0628 \u062e\u0644\u064a\u0646\u0627 \u0646\u062a\u0641\u0631\u062c \u0639\u0644\u0649 \u0627\u0643\u062a\u0631 \u0627\u0644\u0648\u0638\u0627\u0626\u0641 \u0627\u0644\u0649 \u0628\u064a\u0646\u0632\u0644 \u0639\u0644\u064a\u0647\u0627 \u0627\u0639\u0644\u0627\u0646\u0627\u062a \u0639\u0644\u0649 \u0648\u0638\u0641","cb7acadb":"<div dir=\"rtl\"><h2>\n    \u0648\u0627\u0636\u062d \u0627\u0646 \u0634\u0631\u0643\u0627\u062a \u0645\u0635\u0631 \u0643\u0644\u0647\u0627 \u0628\u062a\u062f\u0648\u0631 \u0639\u0644\u0649 \u0646\u0627\u0633 \u0628\u062a\u0648\u0639 \u0645\u0628\u064a\u0639\u0627\u062a \u0627\u0648 \u062a\u0633\u0648\u064a\u0642 \u0648 \u0645\u0639\u0627\u0647\u0645 \u0645\u062d\u0627\u0633\u0628\u064a\u0646 \u0639\u0634\u0627\u0646 \u0641\u0648\u0627\u062a\u064a\u0631 \u0627\u0644\u0645\u0628\u064a\u0639\u0627\u062a \n    <br>\n    <br>\n    \u0637\u064a\u0628 \u062e\u0644\u064a\u0646\u0627 \u0646\u0634\u0648\u0641 \u0627\u064a\u0629 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0639\u0634\u0627\u0646 \u0646\u0634\u062a\u063a\u0644 \u0641\u0649 \u0627\u0644\u0645\u0628\u064a\u0639\u0627\u062a","33732b72":"<div dir=\"rtl\"><h2>\n    \u0646\u0633\u0628\u0629 \u0643\u0628\u064a\u0631\u0629 \u0645\u0646 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0633\u0648\u0642 \u0627\u0644\u0639\u0642\u0627\u0631\u0627\u062a \n    <br><br>\n    sales retail \/ real state \/ retail .. etc\n    <br><br>\n    \u062e\u0644\u064a\u0646\u0627 \u0646\u0634\u0648\u0641 \u0627\u0647\u0645 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0641\u0649 \u0627\u0644\u0633\u0648\u0642 \u0627\u0644\u0645\u0635\u0631\u0649 \u0628\u0634\u0643\u0644 \u0639\u0627\u0645 \u0639\u0644\u0649 \u0643\u0644 \u0627\u0644\u0648\u0638\u0627\u0626\u0641","dddb8bed":"<div dir=\"rtl\"><h2>\n    \u0645\u062d\u062a\u0627\u062c\u064a\u0646 \u0646\u0641\u0643\u0631 \u0641\u0649 \u0627\u0644\u0645\u0646\u062d\u0629 \u0628\u062a\u0627\u0639\u0629 \u0648\u0632\u0627\u0631\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0641\u0649 \u0645\u062c\u0627\u0644 \u0627\u0644\u062a\u0633\u0648\u064a\u0642 \u0627\u0644\u0631\u0642\u0645\u0649 \u0628\u0634\u0643\u0644 \u062c\u062f\u0649 ","30625a1d":"<div dir=\"rtl\"><h2>\n    \u0641\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0646 \u0627\u0644\u0648\u0638\u0627\u0626\u0641 \u0628\u062a\u062a\u0643\u0631 \u0628\u0627\u0633\u0645\u0627\u0621 \u0645\u062e\u062a\u0644\u0641\u0629 ..\n    <br><br>\n   Sales representative  , salses manager  , HR Generalist , HR specialist , etc..\n    <br><br>\n    \u0646\u062c\u0631\u0628 \u0646\u062c\u0645\u0639\u0647\u0645 \u0645\u0639 \u0628\u0639\u0636 \u0648 \u0646\u0631\u0633\u0645 \u062a\u0627\u0646\u0649 ","11d04261":"<div dir=\"rtl\"><h2>\n    \u0644\u0648 \u0628\u062a\u062f\u0648\u0631 \u0639\u0644\u0649 \u0634\u063a\u0644 \u064a\u0628\u0642\u0649 \u0645\u0628\u062f\u0623\u064a\u0627 \u062a\u062a\u0643\u0644\u0645 \u0627\u0646\u062c\u0644\u064a\u0632\u0649 \u0643\u0648\u064a\u0633 \u0648 \u0628\u0639\u062f\u064a\u0646 \u0646\u0634\u0648\u0641 \u0647\u062a\u0639\u0645\u0644 \u0627\u064a\u0629\n    <br>","e0a3a542":"<div dir=\"rtl\"><h2>\n     \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u0631\u0642\u0645 0 \u062f\u0649 \u0637\u0644\u0639\u062a \u0628\u062a\u0627\u0639\u0629 \u0627\u0644\u0645\u0628\u0631\u0645\u062c\u064a\u0646  \u0648 \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0648 \u0643\u062f\u0629  .. \u0641\u064a\u0647\u0627 \u062d\u0648\u0627\u0644\u0649 800 \u0648\u0638\u064a\u0641\u0629","05719e62":"<div dir=\"rtl\"><h2>\n    <br>\n    <br>\u062a\u0627\u0644\u062a \u0627\u0643\u062a\u0631 \u0648\u0638\u064a\u0641\u0629 \u0628\u062a\u0637\u0644\u0628 \u0641\u0649 \u0645\u0635\u0631 \u0647\u064a\u0627 \u0627\u0644\u062a\u0633\u0648\u064a\u0642 \u0648 \u0627\u0644\u062a\u0633\u0648\u064a\u0642 \u0627\u0644\u0631\u0642\u0645\u0649 \u0648 \u062f\u0629 \u062a\u0631\u0646\u062f \u0645\u0647\u0645 \u0627\u0644\u0641\u062a\u0631\u0629 \u062f\u0649 , \u062e\u0644\u064a\u0646\u0627 \u0646\u0628\u0635 \u0639\u0644\u0649 \u0627\u0647\u0645 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0637\u0644\u0648\u0628 \u0627\u0643\u062a\u0633\u0627\u0628\u0647\u0627 \u0644\u0644\u0639\u0645\u0644 \u0641\u0649 \u0645\u062c\u0627\u0644 \u0627\u0644\u062a\u0633\u0648\u064a\u0642","cb7ac05f":"<hr>\n<div dir=\"rtl\"><h2>\n    Unsupervised Clustering Task\n    <br><br>\n\u0647\u0646\u062c\u0631\u0628 \u0646\u0642\u0633\u0645 \u0627\u0644 4 \u0627\u0644\u0627\u0641 \u0648\u0638\u064a\u0641\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u0643\u0644 \u0648\u0638\u064a\u0641\u0629 \u0627\u0644\u0649 \u062b\u0644\u0627\u062b \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0648 \u0646\u062d\u0644\u0644 \u0643\u0644 \u0645\u062c\u0645\u0648\u0639\u0629\n    <br><br>\n     ","d0317165":"<div dir=\"rtl\"><h2>\n\u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u0631\u0642\u0645 2 \u062f\u0649 \u0627\u0644\u0649 \u0641\u064a\u0647\u0627 \u0627\u0644\u0628\u0627\u0642\u0649 \u0627\u0644\u0649 \u0645\u0634 \u0645\u0628\u0631\u0645\u062c\u064a\u0646 \u0648 \u0644\u0627 \u0634\u063a\u0627\u0644\u064a\u0646 \u0641\u0649 \u0627\u0644\u0645\u0628\u064a\u0639\u0627\u062a","9ee9ce0f":"<div dir=\"rtl\"><h2>\n    \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u0631\u0642\u0645 1 \u0641\u064a\u0647\u0627 \u0627\u0644\u0645\u0628\u064a\u0639\u0627\u062a \u064a\u0627\u062c\u0645\u0627\u0644\u0649 1119 \u0648\u0638\u064a\u0641\u0629"}}