{"cell_type":{"669f1607":"code","1262dec5":"code","4b03c305":"code","77707426":"code","05e9df72":"code","04beb692":"code","9119c768":"markdown","cffa0ded":"markdown","b3d14bec":"markdown","2131b929":"markdown"},"source":{"669f1607":"import cv2\nimport os\nimport pandas as pd\nfrom tqdm import tqdm\nimport json\nimport base64","1262dec5":"img_pth = '..\/input\/global-wheat-detection\/train\/'\npattern = '..\/input\/hourse\/hourse1.json'\ntrain_csv = pd.read_csv('..\/input\/global-wheat-detection\/train.csv');train_csv.head()","4b03c305":"train_csv['bbox'] = train_csv['bbox'].apply(lambda x: x[1:-1].split(\",\"))\ntrain_csv['x'] = train_csv['bbox'].apply(lambda x: x[0]).astype('float32')\ntrain_csv['y'] = train_csv['bbox'].apply(lambda x: x[1]).astype('float32')\ntrain_csv['w'] = train_csv['bbox'].apply(lambda x: x[2]).astype('float32')\ntrain_csv['h'] = train_csv['bbox'].apply(lambda x: x[3]).astype('float32')\n\ntrain_csv['w'] = train_csv['x'] + train_csv['w']\ntrain_csv['h'] = train_csv['y'] + train_csv['h']\ntrain_csv = train_csv.rename(columns={'x': 'x1', 'y': 'y1', 'w': 'x2', 'h': 'y2'})","77707426":"train_csv.head()","05e9df72":"def readJson(pth):\n    f = open(pth, encoding='utf-8')\n    file = json.load(f)\n    return file","04beb692":"for img_name in tqdm(os.listdir(img_pth)):\n    json_pattern = readJson(pattern)\n    #print(img_name)  # 00333207f.jpg\n    img_id = img_name.split('.')[0]\n    annos = train_csv.loc[train_csv['image_id'] == img_id]\n    #break\n    json_pattern['imagePath'] = img_name\n    json_pattern['imageHeight'] = 1024\n    json_pattern['imageWidth'] = 1024\n    json_pattern['imageData'] = base64.b64encode(open(img_pth + img_name, \"rb\").read()).strip().decode()\n    \n    json_pattern['shapes'] = []\n    n = len(annos)\n    for i in range(n):\n        anno = annos.iloc[i]\n        item = {}\n        item['label'] = 'wheat'\n        item['points'] = [[anno['x1']*1., anno['y1']*1.], [anno['x2']*1., anno['y2']*1.]]\n        item['group_id'] = None\n        item['shape_type'] = 'rectangle'\n        item['flags'] = dict()\n        json_pattern['shapes'].append(item)\n        \n    with open(\"..\/working\/\" + img_id + '.json', 'w') as f:\n        f.write(json.dumps(json_pattern))","9119c768":"Hi everyone! this notebook demonstrates how to convert train.csv file to json annotations, which you can modify the bounding box using labelme.","cffa0ded":"# convert csv to json","b3d14bec":"then you can open the json file using labelme and do whatever you want.","2131b929":"we need a json pattern which can be modified.\n"}}