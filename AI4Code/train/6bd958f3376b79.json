{"cell_type":{"da9cc8d1":"code","7ef01cca":"code","d8b9d87e":"code","8e1b0909":"code","953fc7eb":"code","2bd485ae":"code","4f9130b2":"code","69768098":"code","4a2d11a6":"code","eccc742d":"code","00292160":"code","0e967fc2":"code","0a1c8130":"code","457f7fb6":"code","a0a83486":"code","c8c0856d":"code","8d232216":"code","27bd346b":"code","111791e5":"code","48210019":"code","d3985998":"code","08839977":"code","3070c23e":"code","71fba918":"code","5301b3ce":"code","620f9f53":"code","7d1e9810":"code","b8acf69a":"code","37cc05ba":"code","e995b88d":"markdown","382cdede":"markdown","e20370c3":"markdown","022b8362":"markdown","414ad6da":"markdown"},"source":{"da9cc8d1":"import pandas as pd\ndf=pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')\ndf=df.drop(['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',\n            'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2','CLIENTNUM'],axis=1)\ndf.head()","7ef01cca":"df.info()","d8b9d87e":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize = (15, 8))\nsns.scatterplot(data=df,x='Total_Ct_Chng_Q4_Q1',y='Total_Amt_Chng_Q4_Q1' ,hue='Attrition_Flag')","8e1b0909":"plt.figure(figsize = (15, 8))\nsns.scatterplot(data=df,x='Total_Trans_Amt',y='Total_Trans_Ct',hue='Attrition_Flag')","953fc7eb":"plt.figure(figsize = (15, 8))\nsns.histplot(df['Total_Amt_Chng_Q4_Q1'])","2bd485ae":"plt.figure(figsize = (15, 8))\nsns.histplot(df['Total_Ct_Chng_Q4_Q1'])","4f9130b2":"plt.figure(figsize = (15, 8))\nsns.histplot(df['Avg_Utilization_Ratio'])","69768098":"plt.figure(figsize = (15, 8))\nsns.histplot(df['Total_Trans_Amt'])","4a2d11a6":"plt.figure(figsize = (15, 8))\nsns.histplot(df['Total_Trans_Ct'])","eccc742d":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize = (15, 8))\nsns.countplot(df['Card_Category'],hue=df['Attrition_Flag'])\n","00292160":"plt.figure(figsize = (15,8))\nsns.countplot(x= df['Education_Level'], edgecolor = 'black', saturation = 0.55,hue=df['Attrition_Flag'])\nplt.show()","0e967fc2":"plt.figure(figsize = (15,8))\nsns.countplot(x = df['Marital_Status'], edgecolor = 'black', saturation = 0.55,hue=df['Attrition_Flag'])\nplt.show()","0a1c8130":"plt.figure(figsize = (15,8))\nsns.countplot(x = df['Income_Category'], edgecolor = 'black', saturation = 0.55,hue=df['Attrition_Flag'])\nplt.show()","457f7fb6":"plt.figure(figsize = (15, 8))\n\nsns.histplot(df['Customer_Age'],kde=True)","a0a83486":"plt.figure(figsize = (15, 8))\n\nsns.countplot(df['Attrition_Flag'],hue=df['Gender'])","c8c0856d":"labels=['Existing','Atrrited']\ncolors = [\"cyan\",\"red\"]\nplt.pie(df['Attrition_Flag'].value_counts(),labels=labels,colors=colors,\n        autopct='%1.2f%%', shadow=True, startangle=140) \nplt.show()","8d232216":"import seaborn as sns\nsns.set_theme(style=\"darkgrid\")\nplt.figure(figsize = (15, 8))\n\nax = sns.countplot(x=\"Attrition_Flag\", data=df)","27bd346b":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize = (15, 8)) \nsns.scatterplot(data=df,x='Total_Trans_Amt',y='Avg_Open_To_Buy' ,hue='Attrition_Flag')","111791e5":"plt.figure(figsize=(15,15))\nsns.heatmap(df.corr(),annot=True);","48210019":"\n\nfrom sklearn.preprocessing import LabelEncoder\nfor c in df.columns:\n    le = LabelEncoder()\n    if df.dtypes[c] == object:\n        le.fit(df[c].astype(str))\n        df[c] = le.transform(df[c].astype(str))\n\n\n\n","d3985998":"X=df.drop('Attrition_Flag',axis=1)\ny=df['Attrition_Flag']","08839977":"from sklearn import preprocessing\nnorm = preprocessing.StandardScaler()\nndf=norm.fit_transform(X)\nX = pd.DataFrame(ndf, index=X.index, columns=X.columns)\nX.head(10)","3070c23e":"from imblearn.over_sampling import ADASYN \nX_resampled, y_resampled = ADASYN().fit_resample(X, y)","71fba918":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X_resampled, y_resampled, train_size=0.8, random_state=42,shuffle=True)","5301b3ce":"from catboost import CatBoostClassifier\ncatboost_params = {'loss_function' : 'CrossEntropy',\n            'iterations': 2000,\n            'depth': 5,\n            'learning_rate': 0.01,\n            'eval_metric': 'AUC',\n            'random_seed': 4,\n            'l2_leaf_reg': 15.0,\n            'bagging_temperature': 0.75,\n            'allow_writing_files': False, 'border_count':50\n        }\nmodel = CatBoostClassifier(**catboost_params)\nmodel.fit(X_train, y_train,verbose=True)","620f9f53":"y_pred=model.predict(X_test)\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))\nfrom sklearn.metrics import roc_auc_score\nprint(roc_auc_score(y_test,y_pred))\n\n","7d1e9810":"from sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix\nplot_confusion_matrix(model,X_test,y_test)","b8acf69a":"import numpy as np\ndef plot_feature_importance(importance,names,model_type):\n    feature_importance = np.array(importance)\n    feature_names = np.array(names)\n    data={'feature_names':feature_names,'feature_importance':feature_importance}\n    fi_df = pd.DataFrame(data)\n    fi_df.sort_values(by=['feature_importance'], ascending=False,inplace=True)\n    plt.figure(figsize=(15,8))\n    sns.barplot(x=fi_df['feature_importance'], y=fi_df['feature_names'])\n    plt.title('FEATURE IMPORTANCE')\n    plt.xlabel('FEATURE IMPORTANCE')\n    plt.ylabel('FEATURE NAMES')","37cc05ba":"plot_feature_importance(model.get_feature_importance(),X_train.columns,'CATBOOST')","e995b88d":"Our model is not bad. However, based on the feature importance graph, we can conclude that the following indicators affect the training of the model: the total number of transactions, the amount of transactions and inactive.","382cdede":"Let's start building the models. We use all the standard steps: label encoder, normalization, data rebalancing","e20370c3":"From the above visual analysis and the correlation matrix, the following conclusions can be drawn:\n1) Most people are blue credit card holders. Also, it was the owners of blue cards who mostly left the bank. Perhaps competitors offer more favorable terms;\n2) The data set is unbalanced. About 16% of our customers left us. That's a lot!\n3) Also, most customers have an income of $ 40,000 per year\n4) Total transaction amount and Total number of transactions = 0.81, high positive correlation.\n5) We also have a dependency: most of the people who left the bank had from 30 to 80 transactions in their account and from 2500 to 10000 conventional units.\n6) Also an interesting fact: most of the bank's customers are women, and most of the lost customers are also women","022b8362":"In this mini-study, we set the following tasks: to find relationships in the data, to find out the reason for the outflow of customers and to build a prediction algorithm.","414ad6da":"The conclusions are below"}}