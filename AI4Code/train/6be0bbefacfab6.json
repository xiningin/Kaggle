{"cell_type":{"1baf4874":"code","35e1236c":"code","532fd99e":"code","64a5b669":"code","92ef9682":"code","8c7495ec":"code","f300d260":"code","78ec0d31":"code","79dc1443":"code","86c2e2fb":"code","969708f1":"code","e6661120":"code","dcddf903":"code","1f0b7c78":"code","972ba157":"code","f04dc732":"code","96c48ee1":"code","378d738a":"code","788d9478":"markdown","bd3346a8":"markdown","732c852a":"markdown","d0cf64ed":"markdown","73305176":"markdown","63039379":"markdown","d4392bd3":"markdown","34211c17":"markdown"},"source":{"1baf4874":"## This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport fbprophet\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nimport plotly.graph_objs as go\nimport plotly as py\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=True)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","35e1236c":"df = pd.read_csv(\"..\/input\/btcusd.csv\")","532fd99e":"# important: For fbprophet, dataframe column names must be 'ds' and 'y'. Their types must be datetime and float.\ndf['ds'] = pd.to_datetime(df['ds'])","64a5b669":"df['y']=df['y'].astype(float)","92ef9682":"df.info()","8c7495ec":"df.describe()","f300d260":"# Actually there is no need to draw this graph. Actual data is included the estimation chart.\n# plt.plot(df['ds'],df['y'])\n# plt.title(\"BTC Prices in USD\")\n# plt.ylabel('Price (USD)')\n# plt.xlabel('Dates')\n# plt.savefig('btc01.png')\n# plt.show()","78ec0d31":"df_prophet = fbprophet.Prophet(changepoint_prior_scale=0.15, daily_seasonality=True)\ndf_prophet.fit(df)\n\n# Forecast for 4 months\nfcast_time=123   # 4 months\ndf_forecast = df_prophet.make_future_dataframe(periods= fcast_time, freq='D')\n\n# Do forecasting\ndf_forecast = df_prophet.predict(df_forecast)","79dc1443":"df_prophet.plot(df_forecast, xlabel = 'Dates', ylabel = 'BTC Price in USD')","86c2e2fb":"plt.savefig('btc02.png')\nplt.show()","969708f1":"trace = go.Scatter(\n        name = 'Actual price',\n       mode = 'markers',\n       x = list(df_forecast['ds']),\n       y = list(df['y']),\n       marker=dict(\n              color='#FFBAD2',\n              line=dict(width=1)\n       )\n)\n","e6661120":"trace1 = go.Scatter(\n    name = 'trend',\n       mode = 'lines',\n       x = list(df_forecast['ds']),\n       y = list(df_forecast['yhat']),\n       marker=dict(\n              color='red',\n              line=dict(width=1)\n       )\n)\n","dcddf903":"upper_band = go.Scatter(\n    name = 'upper band',\n        mode = 'lines',\n        x = list(df_forecast['ds']),\n        y = list(df_forecast['yhat_upper']),\n        line= dict(color='#57b88f'),\n        fill = 'tonexty'\n)\n","1f0b7c78":"lower_band = go.Scatter(\n    name= 'lower band',\n        mode = 'lines',\n        x = list(df_forecast['ds']),\n        y = list(df_forecast['yhat_lower']),\n        line= dict(color='#1705ff')\n)\n","972ba157":"data = [trace, trace1, lower_band, upper_band]\n","f04dc732":"layout = dict(title='Bitcoin Price Estimation Using FbProphet',\n             xaxis=dict(title = 'Dates', ticklen=2, zeroline=False))","96c48ee1":"figure=dict(data=data,layout=layout)","378d738a":"plt.savefig('btc03.png')\npy.offline.iplot(figure)","788d9478":"# Draw pricing graph","bd3346a8":"# Convert ds column to datetime format","732c852a":"# Get info","d0cf64ed":"# Describe dataframe details","73305176":"# Apply forecasting for 4 months ( 123 days)","63039379":"# Visualize the forecasting results","d4392bd3":"# Convert y column to float","34211c17":"# Draw plotly interactive graph"}}