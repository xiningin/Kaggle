{"cell_type":{"b283c130":"code","f2e7aed9":"code","efab6b02":"code","6cc63b45":"code","5ef60a20":"code","4e821a09":"code","dd889228":"code","7169a097":"code","ee9926aa":"code","724d8d65":"code","b7433b42":"code","c6ecbd4a":"code","bff096fc":"code","bd3179cf":"code","afef0cce":"code","16acba30":"code","a62a8cec":"code","dc05e91a":"code","9f591f49":"code","080dfb54":"code","06e2b522":"code","72d5b0af":"code","5ac832fe":"code","3e442230":"code","60afb92a":"code","3b9bde69":"code","c65ece6f":"code","0bb379c2":"code","49619bc4":"code","9090045c":"code","3a81afa2":"markdown","0fce42ad":"markdown","cc8b2683":"markdown","8ee87876":"markdown","0b2e438f":"markdown","f3da88ae":"markdown","7cafbc31":"markdown","d6a6e2d4":"markdown","e9af6728":"markdown","373febaa":"markdown","5fd4ec50":"markdown","552bacee":"markdown","ebcb3d52":"markdown","da1f34ec":"markdown","e4366d64":"markdown","49e219a9":"markdown","cf41c5e8":"markdown","c68f1d88":"markdown","e2fda07e":"markdown","41db4a18":"markdown","8e9402f7":"markdown","b66f12aa":"markdown","39dd6033":"markdown","ffd037df":"markdown"},"source":{"b283c130":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f2e7aed9":"df = pd.read_csv('\/kaggle\/input\/911calls-historic-data\/911.csv') #importing our data set","efab6b02":"df.head() #checking the head of our data","6cc63b45":"df['zip'].value_counts().head(5) #top 5 zip codes in our data","5ef60a20":"df['twp'].value_counts().head(5) #top 5 townships in our data","4e821a09":"df['title'].nunique() #looking at the unique title codes","dd889228":"df['Reason'] = df['title'].apply(lambda title: title.split(':')[0]) #refining our titles column","7169a097":"df['Reason'].value_counts() #checking for common reasons for 911 calls","ee9926aa":"sns.countplot(x='Reason',data=df,palette='inferno')","724d8d65":"type(df['timeStamp'].iloc[0])","b7433b42":"df['timeStamp'] = pd.to_datetime(df['timeStamp'])","c6ecbd4a":"df['Hour'] = df['timeStamp'].apply(lambda time: time.hour)\ndf['Month'] = df['timeStamp'].apply(lambda time: time.month)\ndf['Day of Week'] = df['timeStamp'].apply(lambda time: time.dayofweek)","bff096fc":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}","bd3179cf":"df['Day of Week'] = df['Day of Week'].map(dmap)","afef0cce":"sns.countplot(x='Day of Week',data=df,hue='Reason',palette='inferno')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","16acba30":"sns.countplot(x='Month',data=df,hue='Reason',palette='inferno')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","a62a8cec":"byMonth = df.groupby('Month').count()\nbyMonth.head()","dc05e91a":"byMonth['twp'].plot() #this plot helped us visualise the above months section by filling the mmissing data","9f591f49":"sns.lmplot(x='Month',y='twp',data=byMonth.reset_index()) #we need to reset our index for this plot","080dfb54":"df['Date']=df['timeStamp'].apply(lambda t: t.date())","06e2b522":"plt.figure(figsize = (8,6))\ndf.groupby('Date').count()['twp'].plot()\nplt.tight_layout()","72d5b0af":"plt.figure(figsize = (8,6))\ndf[df['Reason']=='Traffic'].groupby('Date').count()['twp'].plot()\nplt.title('Traffic')\nplt.tight_layout()","5ac832fe":"plt.figure(figsize = (8,6))\ndf[df['Reason']=='Fire'].groupby('Date').count()['twp'].plot()\nplt.title('Fire')\nplt.tight_layout()","3e442230":"plt.figure(figsize = (8,6))\ndf[df['Reason']=='EMS'].groupby('Date').count()['twp'].plot()\nplt.title('EMS')\nplt.tight_layout()","60afb92a":"dayHour = df.groupby(by=['Day of Week','Hour']).count()['Reason'].unstack()\ndayHour.head()","3b9bde69":"plt.figure(figsize=(12,6))\nsns.heatmap(dayHour,cmap='inferno')","c65ece6f":"sns.clustermap(dayHour,cmap='inferno')","0bb379c2":"dayMonth = df.groupby(by=['Day of Week','Month']).count()['Reason'].unstack()\ndayMonth.head()","49619bc4":"plt.figure(figsize=(12,6))\nsns.heatmap(dayMonth,cmap='inferno')","9090045c":"sns.clustermap(dayMonth,cmap='inferno')","3a81afa2":"Now that we have our data set. Let's Take a look at our data.","0fce42ad":"Now, lets check ur timestamp colun, we need our timestamp in date time format.","cc8b2683":"Lets map the days of the week to integers from 0-6.","8ee87876":"**Note to Self and the Community** - This is a request to anyone reading this kernel. Please **do not** spam the links of your notebooks in the comments or on any other notebook as it reduces the chances of other Kagglers to get recognised. I myself was guilty of this practise and i making ammendments now that i understand. So please provide your genuine feedbacks on the kernels and if you are commenting down i will definitely check out your notebooks. So keep Kaggling and help the community be more friendly and grow. Alright lets start with the notebook.","0b2e438f":"Lets Do the same thing for months and lets see the results","f3da88ae":"Lets Re-structure our data. We will make the hours as columns and the Days of the week will work as index","7cafbc31":"Lets plot a linear fit to check number of calls during different months","d6a6e2d4":"So we can see that most common reason was  EMS when the call was made. Lets visualise this.","e9af6728":"We are missing some months as we can see from the visulization. Lets do something about it","373febaa":"We can see in our data that we have a title column that describes what was the reason for the 911 call that was made. It has EMS,Fire and Traffic in it as the reasons. So lets make a new column to store these values.","5fd4ec50":"Lets see the no. of calls using this Date column","552bacee":"Now lets make the months as our columns","ebcb3d52":"Next, we will visualize the call counts on basis of the different reasons i.e Traffic, EMS and Fire.","da1f34ec":"Our data has total 9 columns and we can see we have data like Latitude, Longitude, etc Lets start by checking the top Zip codes and townsships in our data","e4366d64":"To be continued...","49e219a9":"Lets check the number of calls that were made per month","cf41c5e8":"Lets use the timestamp column to make new columns i.e Hour, Month and Day of week.","c68f1d88":"Lets make Heatmap and Clustermap to visualize this data","e2fda07e":"Lets visualize this data using a heatmap and a clustermap","41db4a18":"Lets create a new column called 'Date' that contains the date from the timeStamp column.","8e9402f7":"So in this Notebook we are taking a look at the Historic 911-calls data set and we will be carrying out our analysis and visualization on the data.","b66f12aa":"Lets create a groupby object called byMonth, where we group the DataFrame by the month column and use the count() method for aggregation.","39dd6033":"Lets visualize the reasons for making the 911 calls on each day","ffd037df":"Our timestamp section was of the type : str. We need to convert this to date time format and we will use to_datetime() method"}}