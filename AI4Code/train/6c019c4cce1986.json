{"cell_type":{"3cabeefc":"code","d56d9709":"code","941035b0":"code","248de4f5":"code","00cae2c3":"code","bb056113":"code","ba1bfecf":"markdown","9cd4f5e0":"markdown","fc5c77a1":"markdown","66d668fb":"markdown","ced6b5a8":"markdown","2d1d11ae":"markdown","cafc67ce":"markdown","bff0bc52":"markdown","fe883e1a":"markdown","2fc1f0e2":"markdown","14765684":"markdown","50362363":"markdown","7d1bb7cc":"markdown","65f59cca":"markdown","7e2e5265":"markdown","24c7cee1":"markdown","4dc91433":"markdown","ff156e80":"markdown","a40516e0":"markdown","13dba243":"markdown"},"source":{"3cabeefc":"from bs4 import BeautifulSoup\nimport requests\nimport pandas as pd","d56d9709":"\nurl = 'https:\/\/www.basketball-reference.com\/leagues\/NBA_2020_totals.html'\nreq = requests.get(url)\nprint(req) #To verify output","941035b0":"soup = BeautifulSoup(req.content, 'html.parser')\n#print(soup) #To verify output (VERY LONG)","248de4f5":"tabela = soup.find(name='table')\n#print(tabela) #To verify output (VERY LONG)","00cae2c3":"df = pd.read_html(str(tabela))[0].set_index('Rk') #We use \"[0]\" because the output would be a list with a single element, and we need that element, not the list\ndf.head()","bb056113":"#Step one: import libraries\nfrom bs4 import BeautifulSoup\nimport requests\nimport pandas as pd\n\n#Step two: get the URL\nurl = 'https:\/\/www.basketball-reference.com\/leagues\/NBA_2020_totals.html'\nreq = requests.get(url)\n\n#Step three: parse HTML page\nsoup = BeautifulSoup(req.content, 'html.parser')\n\n#Step four: find the table\ntabela = soup.find(name='table')\n\n#Step five: from HTML Table to PANDAS DataFrame\ndf = pd.read_html(str(tabela))[0].set_index('Rk')\ndf.head()","ba1bfecf":"## 1. Import libraries\n\nFor this tutorial, we will use **bs4, requests and pandas**.","9cd4f5e0":"# Thanks for your upvote","fc5c77a1":"# Complete code","66d668fb":"The output is the table in HTML tags","ced6b5a8":"## 3. Parse HTML page","2d1d11ae":"## 4. Find the table ","cafc67ce":"### BeautifulSoup\n\n![Bs4](https:\/\/funthon.files.wordpress.com\/2017\/05\/bs.png)\n\nBeautifulSoup is a library used for make web scraping in websites using a easy and short syntax. With it we can get phrases, words, numbers, images, and **TABLES**","bff0bc52":"# Step-by-step:\n1. Import libraries\n2. Get the url\n3. Know the HTML of this url\n4. Find the table\n5. HTML table -----> Pandas DataFrame\n6. Complete code","fe883e1a":"## 2.Get the URL ","2fc1f0e2":"# Original Table (in HTML) vs. Our DataFrame (made in PANDAS)","14765684":"![image.png](attachment:image.png)","50362363":"\n![image.png](attachment:image.png)","7d1bb7cc":"## 5. from HTML table to PANDAS DataFrame","65f59cca":"The output is whole HTML page","7e2e5265":"![image.png](attachment:image.png)","24c7cee1":"### Pandas\n\n![Pandas](https:\/\/www.dlf.pt\/dfpng\/middlepng\/442-4429904_pandas-python-logo-png-pandas-python-logo-transparent.png)\n\nPandas is a powerful library used to create, manipulate, plot and explore data (in panel or in tables). It is one of the most used libraries by data scientists (Python users), as it allows us to do numerous tasks necessary for a project\n","4dc91433":"If output = \"Response [200]\". It work!!\nIf output = \"Response [404]. Page not found!!","ff156e80":"### Requests\n\n![Requests](https:\/\/www.nicepng.com\/png\/detail\/70-702215_building-with-python-requests-python-requests-logo.png)\n\nIt is a library used to requisition websites, and download a web page","a40516e0":"If you like, upvote please!","13dba243":"# Introduction\n\nOn our journey as data scientists, we will not always find well-organized data saved in an xlsx or csv file. It will often be necessary to perform some data extraction techniques that are contained in other sources. One of these techniques that is well known is called \"web scraping\".\nWeb scraping allows us to obtain data that is on an html page, that is, on a website.\n\nIn this notebook, I will learn how to get a website dataframe and manipulate it using the powerful library PANDAS.\n\n**LET'S CODE!!**"}}