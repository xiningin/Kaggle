{"cell_type":{"4b415a06":"code","db130799":"code","ff5a96e6":"code","811af153":"code","76e7c5d6":"code","38701bdb":"code","4be6d017":"code","9f1df2a2":"code","75e89aed":"code","4cedcc07":"code","e10565ff":"code","a6a88a3f":"code","f8163e76":"code","df96f4c9":"code","fa5ddcff":"code","b48821ca":"code","8f1d9834":"code","45b6dde5":"code","cbe42823":"code","f5b37e47":"code","a8933a70":"code","8c791bbd":"code","901c50a2":"code","8ff3c509":"code","9b645fd9":"code","9f15ac18":"code","4b4962de":"code","d889b090":"code","4fa22473":"code","d06ffa1f":"code","54166203":"code","d5530f11":"code","4c4cb301":"code","4be2031f":"code","8f6fabf6":"markdown","963523d2":"markdown","caa14fce":"markdown","6e9ae5d5":"markdown","04dd3a21":"markdown","e0591534":"markdown","33b8399a":"markdown","8e9db854":"markdown","13d8e1f9":"markdown","3aacc905":"markdown","c0a8244c":"markdown","f8cc176c":"markdown","85f9e187":"markdown","333541f8":"markdown","4ec4f0f7":"markdown","81d86a13":"markdown","0f849440":"markdown","9b20212b":"markdown","672fc73b":"markdown","84b87b2f":"markdown","9b95953a":"markdown","1b80836d":"markdown","287bd929":"markdown","cf5495e0":"markdown","64e7f637":"markdown","a28336c3":"markdown","2ca5adc4":"markdown"},"source":{"4b415a06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","db130799":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","ff5a96e6":"startups = pd.read_csv('..\/input\/sp-startup\/50_Startups.csv') \ndf = startups","811af153":"df.head()","76e7c5d6":"df.info()","38701bdb":"df.shape","4be6d017":"df.isnull().sum()","9f1df2a2":"df.corr()","75e89aed":"sns.heatmap(df.corr(), annot = True)","4cedcc07":"sns.scatterplot(df[\"R&D Spend\"], df[\"Profit\"]);","e10565ff":"f, axes = plt.subplots(2, 2, figsize=(20, 10), sharex=False)\nsns.distplot( df[\"R&D Spend\"] , color=\"skyblue\",  ax=axes[0, 0])\nsns.distplot( df[\"Administration\"] , color=\"olive\",  ax=axes[0, 1])\nsns.distplot( df[\"Marketing Spend\"] , color=\"gold\",  ax=axes[1, 0])\nsns.distplot( df[\"Profit\"] , color=\"teal\",  ax=axes[1, 1])","a6a88a3f":"df.describe().T","f8163e76":"df[\"State\"].unique()","df96f4c9":"df['State'] = pd.Categorical(df['State'])","fa5ddcff":"dfDummies = pd.get_dummies(df['State'])","b48821ca":"dfDummies.head()","8f1d9834":"df = pd.concat([df, dfDummies], axis=1)\ndf = df.drop(['State', \"New York\"], axis = 1)\ndf.head()","45b6dde5":"X = df.drop(\"Profit\", axis = 1)\ny = df[\"Profit\"]","cbe42823":"X.head()","f5b37e47":"y.head()","a8933a70":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1\/3, random_state = 3512, shuffle=1)","8c791bbd":"X_train.head()","901c50a2":"X_test.head()","8ff3c509":"y_train.head()","9b645fd9":"y_test.head()","9f15ac18":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()","4b4962de":"model = lm.fit(X_train, y_train)","d889b090":"y_pred = lm.predict(X_test)","4fa22473":"df_comp = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf_comp","d06ffa1f":"from sklearn.metrics import mean_squared_error\n\nMSE = mean_squared_error(y_test, y_pred)\nMSE","54166203":"from sklearn.metrics import mean_absolute_error\n\nMSA = mean_absolute_error(y_test, y_pred)\nMSA","d5530f11":"import math\n\nRMSE = math.sqrt(MSE)\nRMSE","4c4cb301":"model.score(X, y)","4be2031f":"import statsmodels.api as sm\nstmodel = sm.OLS(y, X).fit()\nstmodel.summary()","8f6fabf6":"\u0130lk 5 g\u00f6zlemini yazd\u0131ral\u0131m.","963523d2":"Bu ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden train ve test olmak \u00fczere 4 par\u00e7a olu\u015ftural\u0131m. Bunu yapmak i\u00e7in train_test_split kullanal\u0131m.","caa14fce":"Seaborn ile korelasyon matrisinin \u0131s\u0131 haritas\u0131n\u0131 \u00e7izdirelim.","6e9ae5d5":"Say\u0131sal de\u011fi\u015fkenlerin da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6rmek i\u00e7in df \u00fczerinden histogram \u00e7izdirelim.","04dd3a21":"Modelin R Squared de\u011ferini e\u011fitim verileri \u00fczerinden yazd\u0131ral\u0131m.","e0591534":"Dileyenler statsmodel kullanarak hangi \u00f6zniteliklerin model i\u00e7in %95 g\u00fcvenilirlikle ne kadar anlaml\u0131 olup olmad\u0131\u011f\u0131na da bakabilir. Modelde baz\u0131 feature selection i\u015flemleri yaparak tekrardan e\u011fitip yeni sonu\u00e7lar mukayese edilebilir.","33b8399a":"Numpy, matplotlib.pyplot, pandas ve seaborn k\u00fct\u00fcphanelerini \u00e7ekirde\u011fe dahil edelim.","8e9db854":"Tahminleri ve ger\u00e7ek de\u011ferleri bir veri \u00e7er\u00e7evesinde toplay\u0131p \u00fczerinde g\u00f6z gezdirelim.","13d8e1f9":"Veri \u00e7er\u00e7evemizi ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler olmak \u00fczere b\u00f6l\u00fctleyelim.","3aacc905":"Eksik verileri kontrol edelim.","c0a8244c":"Ka\u00e7 g\u00f6zlem ve \u00f6znitelikten olu\u015ftu\u011funu g\u00f6r\u00fcnt\u00fcleyelim.","f8cc176c":"Dizinde bulunan veri \u00e7er\u00e7evemizi startups de\u011fi\u015fkenine atayal\u0131m. startups de\u011fi\u015fkenini df de\u011fi\u015fkenine kopyalayarak kullanmaya ba\u015flayal\u0131m.","85f9e187":"# Do\u011frusal Regresyon Egzersizleri","333541f8":"LinearRegression'u \u00e7ekirde\u011fe dahil edip modeli in\u015fa edelim.","4ec4f0f7":"Veri \u00e7er\u00e7evesinin temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","81d86a13":"R&D Spend ve Profit aras\u0131ndaki korelasyonu daha iyi g\u00f6rebilmek i\u00e7in scatterplot \u00e7izdirelim.","0f849440":"Ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri kontrol edelim.","9b20212b":"Modele daha \u00f6nce g\u00f6rmedi\u011fi ba\u011f\u0131ml\u0131 test de\u011fi\u015fkenini tahmin ettirelim. Bu tahmin de\u011ferlerimizi y_pred de\u011fi\u015fkenine atayal\u0131m.","672fc73b":"50 adet Startup'\u0131n ara\u015ft\u0131rma ve geli\u015ftirmeye y\u00f6nelik harcamas\u0131, y\u00f6netime y\u00f6nelik harcamas\u0131, pazarlama harcamas\u0131, kazand\u0131klar\u0131 kar miktar\u0131 ve kurulduklar\u0131 lokasyon bilgisi bulunmaktad\u0131r. Ama\u00e7 kar miktar\u0131n\u0131 tahmin etmektir. Bu bir say\u0131sal tahmin problemidir ve ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimiz \"Profit\".","84b87b2f":"Korelasyon matrisi \u00e7izdirelim.","9b95953a":"4 par\u00e7a de\u011fi\u015fkeni kontrol edelim.","1b80836d":"Veri \u00e7er\u00e7evesinin bilgilerini g\u00f6r\u00fcnt\u00fcleyelim.","287bd929":"State \u00f6zniteli\u011fini silip dummy olarak yarat\u0131lan State'lardan da birisini hari\u00e7 tutarak veri \u00e7er\u00e7evemizi g\u00fcncelleyelim.","cf5495e0":"sklearn b\u00fcnyesinde bar\u0131nan metrics'i \u00e7ekirde\u011fe dahil edelim ve MAE, MSE, RMSE de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","64e7f637":"State'a ait benzersiz de\u011ferleri g\u00f6r\u00fcnt\u00fcleyelim.","a28336c3":"Modeli e\u011fitmek i\u00e7in ba\u011f\u0131ml\u0131 ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden olu\u015fturulan e\u011fitim verilerini verelim.","2ca5adc4":"get_dummies yard\u0131m\u0131yla State'a dair kategorik \u00f6znitelik \u00e7\u0131kar\u0131mlar\u0131nda bulunal\u0131m. \u00c7\u00fcnk\u00fc State'lar\u0131n birbirine \u00fcst\u00fcnl\u00fc\u011f\u00fc yok, nominaller. Ordinal de\u011fil."}}