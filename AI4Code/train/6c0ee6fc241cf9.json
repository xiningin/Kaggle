{"cell_type":{"5e566bbf":"code","3f731289":"code","89d96f57":"code","c5bf10f0":"code","da67e071":"code","3225ad0b":"code","83c9b819":"code","03bdb473":"code","0fbf8ee2":"code","f03ae33e":"code","e34c4ccc":"code","030af07a":"code","019ecaa7":"code","238e36d9":"code","416f01d5":"code","60ba08de":"code","5442f30f":"code","b77fc9e8":"code","b88dcf74":"code","4313608e":"code","31e591fe":"code","9139cbec":"code","122b2716":"code","a9a47223":"code","b2cb22cd":"code","0f620823":"code","121f14bc":"markdown","30d6e1a3":"markdown","ca378f45":"markdown","e1f579bd":"markdown","26f32e71":"markdown","bcabbee7":"markdown","f5f2a2cb":"markdown","a83af6e1":"markdown","d04ea9ea":"markdown","5511b5c7":"markdown","23b1a4b1":"markdown","2a6b2613":"markdown","d7ea2866":"markdown","855e148f":"markdown","0d855ebe":"markdown","3ad624bb":"markdown","d07144fd":"markdown","7cf28873":"markdown","b13c2e7c":"markdown","9bc9998f":"markdown","52e1b4a5":"markdown","686427e3":"markdown","de4ce579":"markdown","701799d3":"markdown","c896c541":"markdown"},"source":{"5e566bbf":"import os\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom scipy.io import loadmat\n\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import MultinomialNB, GaussianNB\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3f731289":"train = []\ntest = []\ndataDir = \"..\/input\/skeleton\/\"\nfor file in os.listdir(dataDir):\n    if file.endswith(\".mat\"):\n        if \"s2\" in file or \"s4\" in file or \"s6\" in file or \"s8\" in file:\n            train.append([loadmat(dataDir+file)[\"d_skel\"],file.split(\"_\")[0]])\n        else:\n            test.append([loadmat(dataDir+file)[\"d_skel\"],file.split(\"_\")[0]])","89d96f57":"def trim(skl):\n    val = skl.shape[2]\n    if val > 40:\n        if val>120:\n            skl = skl[:,:,::3]\n        elif val>80:\n            skl = skl[:,:,::2]\n        val = skl.shape[2]\n        split = val - 40\n        split = int(split\/2)\n        skl = skl[:,:,split:split+40]\n        return np.array(skl)","c5bf10f0":"print(test[-1][0].shape)\nprint(trim(test[-1][0]).shape)","da67e071":"d = lambda x1,y1,z1,x2,y2,z2 : ((x1-x2)**2 + (y1-y2)**2 + (z1-z2)**2)**0.5\ndef dist_func(skl):\n    dvals = d(skl[:,0,:],skl[:,1,:],skl[:,2,:],skl[1,0,:],skl[1,1,:],skl[1,2,:])\n    dvals = (dvals[:]-dvals.mean())\/dvals.std()\n    return dvals","3225ad0b":"x = train[0][0][:,0,0]\ny = train[0][0][:,1,0]\nz = train[0][0][:,2,0]","83c9b819":"val = np.array(d(x,y,z,x[1],y[1],z[1]))\n(val-val.mean())\/val.std()","03bdb473":"np.array([dist_func(train[0][0])[i][0] for i in range(20)])","0fbf8ee2":"def return_distance_and_action(mats):\n    x = []\n    y = []\n    for skl in mats:\n        x.append(dist_func(trim(skl[0])).flatten())\n        y.append(skl[1])\n    return np.array(x),np.array(y)","f03ae33e":"X_train,y_train = return_distance_and_action(train)\nX_test,y_test = return_distance_and_action(test)","e34c4ccc":"lr = LogisticRegression(solver='newton-cg')\nlr.fit(X_train, y_train)\ny_pred = lr.predict(X_test)\nprint(\"Accuracy: \",(accuracy_score(y_test,y_pred)))","030af07a":"sns.heatmap(confusion_matrix(y_test,y_pred))","019ecaa7":"knn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_test)\nprint(\"Accuracy: \",accuracy_score(y_test,y_pred))","238e36d9":"sns.heatmap(confusion_matrix(y_test,y_pred))","416f01d5":"mnb = MultinomialNB()\nms = MinMaxScaler()\nmnb.fit(ms.fit_transform(X_train), y_train)\ny_pred = mnb.predict(ms.fit_transform(X_test))\nprint(\"Accuracy: \",accuracy_score(y_test,y_pred))","60ba08de":"sns.heatmap(confusion_matrix(y_test,y_pred))","5442f30f":"gnb = GaussianNB()\ngnb.fit(X_train, y_train)\ny_pred = gnb.predict(X_test)\nprint(\"Accuracy: \",accuracy_score(y_test,y_pred))","b77fc9e8":"sns.heatmap(confusion_matrix(y_test,y_pred))","b88dcf74":"xgb = XGBClassifier()\nxgb.fit(X_train, y_train)\ny_pred = xgb.predict(X_test)\nprint(\"Accuracy: \",accuracy_score(y_test,y_pred))","4313608e":"sns.heatmap(confusion_matrix(y_test,y_pred))","31e591fe":"etc = ExtraTreesClassifier()\netc.fit(X_train, y_train)\ny_pred = etc.predict(X_test)\nprint(\"Accuracy: \",accuracy_score(y_test,y_pred))","9139cbec":"sns.heatmap(confusion_matrix(y_test,y_pred))","122b2716":"dtc = DecisionTreeClassifier()\ndtc.fit(X_train, y_train)\ny_pred = dtc.predict(X_test)\nprint(\"Accuracy: \",accuracy_score(y_test,y_pred))","a9a47223":"sns.heatmap(confusion_matrix(y_test,y_pred))","b2cb22cd":"lightgbm = LGBMClassifier()\nlightgbm.fit(X_train, y_train)\ny_pred = lightgbm.predict(X_test)\nprint(\"Accuracy: \",accuracy_score(y_test,y_pred))","0f620823":"sns.heatmap(confusion_matrix(y_test,y_pred))","121f14bc":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">2 | Read data from mat files & splitting test and train data<\/h4>\n    <\/strong>\n<\/div>","30d6e1a3":"Function to find euclidean distance from shoulder center to all the joints","ca378f45":"<h3>Decision Tree Classifier<\/h3>","e1f579bd":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h1 style = \"color:#fff\">SKELETON BASED ACTION RECOGNITION<\/h1>\n    <\/strong>\n<\/div>","26f32e71":"<h3>Logistic Regression<\/h3>","bcabbee7":"<h3>XGBoost Classifier<\/h3>","f5f2a2cb":"<h3>KNN<\/h3>","a83af6e1":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">3 | Trimming the frames <\/h4>\n    <\/strong>\n<\/div>","d04ea9ea":"<h3>ExtraTrees Classifier<\/h3>","5511b5c7":"euclidean distance from shoulder center to all other joint points","23b1a4b1":"<h3>Gaussian Naive Bayes<\/h3>","2a6b2613":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">1 | Importing the Required Packages<\/h4>\n    <\/strong>\n<\/div>","d7ea2866":"<h3>Finding the euclidean distance using dist_func (numpy slicing and lambda mapping)<\/h3><br>\nstoring the x, y and z of all the joint points of first frame","855e148f":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">5 | Finding the distance for the values stored in train and test dataset<\/h4>\n    <\/strong>\n<\/div>","0d855ebe":"<h3>Finding the euclidean distance using manual method<\/h3><br>\nstoring the x, y and z of all the joint points of first frame","3ad624bb":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">7 | Conclusion<\/h4>\n    <\/strong>\n<\/div>","d07144fd":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">6 | Data Modelling using classification algorithms<\/h4>\n    <\/strong>\n<\/div>","7cf28873":"<h3>Feature Extraction<\/h3>\n<p>To Calculate the  Euclidean distance  between Shoulder center joint to remaining all joints.<\/p>","b13c2e7c":"<h3>LightGBM Classifier<\/h3>","9bc9998f":"<p>We have successfully implemented <strong>skeleton based action recognition<\/strong> using data preprocessing techniques for feature extraction by converting all the <strong>d_skel data stored in the .mat files into 1-D array <\/strong> and finally building a <strong>classification models<\/strong> using machine learning techniques<\/p>","52e1b4a5":"![image.png](attachment:image.png)","686427e3":"![image.png](attachment:image.png)","de4ce579":"<h3>Problem Statement<\/h3>\n<p>To Develop and Evaluate a machine learning model for a 3D skeleton-based action recognition system using UTD MHAD dataset. <\/p>","701799d3":"<div style=\"background:#6689b3;color:#fff;padding:1em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">4 | Euclidean distance from shoulder center to joint points<\/h4>\n    <\/strong>\n<\/div>","c896c541":"<h3>Multinomial Naive Bayes<\/h3>"}}