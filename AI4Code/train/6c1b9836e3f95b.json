{"cell_type":{"94471f66":"code","ff6b2798":"code","9153da00":"code","9d084470":"code","766f3d58":"code","c1484140":"code","be940098":"code","b07f615a":"code","743847bb":"code","30172226":"code","6f2f3d54":"code","d3b69acd":"code","30e82556":"code","09304f25":"code","d7d976df":"code","c4aff1ce":"code","9473d5f3":"code","f0004a76":"code","5f20c782":"code","3952f4a2":"code","a0238fd5":"code","95956065":"code","1aee80bf":"code","ac8ae980":"code","8080f7ac":"code","bb8fdd50":"code","bd23c562":"code","6637e590":"code","f1f3b18b":"code","2377e29f":"code","9e0f0f12":"code","316e930b":"code","5f9910bd":"code","7196ee26":"code","0e118fe1":"code","747221aa":"code","8579454b":"code","f080efa5":"code","b6dcc734":"code","f0e8457e":"code","204be9b9":"code","82c86b84":"code","41c0bc28":"code","b78e7cfd":"code","5c60b7ed":"code","3fd4c83b":"code","c3525d3d":"code","dfd78cfb":"code","c8b6bfc2":"code","996daf75":"code","4077d83b":"code","167007ed":"code","56ac613b":"code","a44ebd43":"code","c777012a":"code","e412bf73":"code","904e92df":"code","158332bd":"code","64c16c64":"code","e77722d8":"code","d49e13c4":"code","893f5863":"code","3cfac2cd":"code","e0224bd8":"code","7623acda":"code","1207cc77":"code","0ff0e8cc":"code","a30f15d3":"code","cdff235e":"code","7b3b2cad":"code","47ee443a":"code","c43a49ba":"code","a67c1139":"code","a6c3f1b0":"code","b2a67563":"code","ef23f452":"code","77ff0533":"code","1ff711f5":"code","e06c258c":"code","3990e8b1":"code","afdea0d7":"code","ec8d96d1":"code","bccb51a9":"code","d9515120":"code","4616f1bb":"code","76ae7066":"code","be94c3f2":"code","fdb17b0b":"code","4534dc74":"code","05926fa0":"code","419e846a":"code","9915a3ad":"code","58c3d344":"code","66242b00":"code","a51e2d42":"code","6fc10e8f":"code","23654af6":"code","a5dd3cca":"code","02595edd":"code","934cfb80":"code","af14be0e":"code","bf2f6702":"code","1c377785":"code","6ef7a662":"code","52732d25":"code","5dd14c23":"code","ffc5fdd0":"code","a2c7d423":"code","ab714b0f":"code","3d55a3f2":"markdown","0212daf9":"markdown","18b4f78d":"markdown","8f63b074":"markdown","6bbd56b2":"markdown","160421ac":"markdown","99cf37a1":"markdown","45596925":"markdown"},"source":{"94471f66":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","ff6b2798":"df = pd.read_csv(r'..\/input\/kidney-disease\/kidney_disease.csv')\ndf.head","9153da00":"df.shape","9d084470":"columns=pd.read_csv('..\/input\/data123\/data_description.txt',sep='-')\ncolumns=columns.reset_index()\ncolumns.columns=['cols','abb_col_names']","766f3d58":"columns","c1484140":"df.head()","be940098":"df.columns = columns['abb_col_names'].values","b07f615a":"df.head()","743847bb":"df.drop([\"id\"],axis=1,inplace=True) ","30172226":"df.dtypes","6f2f3d54":"def convert_dtype(df, feature):\n    df[feature] = pd.to_numeric(df[feature], errors='coerce')","d3b69acd":"features=['packed cell volume','white blood cell count','red blood cell count']\n\nfor feature in features:\n    convert_dtype(df, feature)","30e82556":"df.dtypes","09304f25":"def extract_cat_num(df):\n    cat_col=[col for col in df.columns if df[col].dtype=='object']\n    num_col=[col for col in df.columns if df[col].dtype!='object']\n    return cat_col,num_col","d7d976df":"cat_col,num_col=extract_cat_num(df)","c4aff1ce":"cat_col","9473d5f3":"num_col","f0004a76":"for col in cat_col:\n    print('{} has {} values '.format(col,df[col].unique()))\n    print('\\n')","5f20c782":"\ndf['diabetes mellitus'].replace(to_replace = {'\\tno':'no','\\tyes':'yes',' yes':'yes'},inplace=True)\n\ndf['coronary artery disease'] = df['coronary artery disease'].replace(to_replace = '\\tno', value='no')\n\ndf['class'] = df['class'].replace(to_replace = 'ckd\\t', value = 'ckd')","3952f4a2":"for col in cat_col:\n    print('{} has {} values  '.format(col, df[col].unique()))\n    print('\\n')","a0238fd5":"len(num_col)","95956065":"plt.figure(figsize=(30,20))\nfor i,feature in enumerate(num_col):\n    plt.subplot(5,3,i+1)\n    df[feature].hist()\n    plt.title(feature)","1aee80bf":"len(cat_col)","ac8ae980":"plt.figure(figsize=(20,20))\nfor i,feature in enumerate(cat_col):\n    plt.subplot(4,3,i+1)\n    sns.countplot(df[feature])\n    ","8080f7ac":"sns.countplot(x='class',data=df)\nplt.xlabel(\"class\")\nplt.ylabel(\"Count\")\nplt.title(\"target Class\")","bb8fdd50":"plt.figure(figsize=(10,8))\ncorr_df = df.corr()\nsns.heatmap(corr_df,annot=True)","bd23c562":"df.groupby(['red blood cells','class'])['red blood cell count'].agg(['count','mean','median','min','max'])","6637e590":"import plotly.express as px","f1f3b18b":"px.violin(df,y='red blood cell count',x=\"class\", color=\"class\")","2377e29f":"px.scatter(df,'haemoglobin','packed cell volume')","9e0f0f12":"grid=sns.FacetGrid(df, hue=\"class\",aspect=2)\ngrid.map(sns.kdeplot, 'red blood cell count')\ngrid.add_legend()","316e930b":"def violin(col):\n    fig = px.violin(df, y=col, x=\"class\", color=\"class\", box=True)\n    return fig.show()\n\ndef scatters(col1,col2):\n    fig = px.scatter(df, x=col1, y=col2, color=\"class\")\n    return fig.show()","5f9910bd":"def kde_plot(feature):\n    grid = sns.FacetGrid(df, hue=\"class\",aspect=2)\n    grid.map(sns.kdeplot, feature)\n    grid.add_legend()","7196ee26":"kde_plot('red blood cell count')","0e118fe1":"kde_plot('haemoglobin')","747221aa":"scatters('red blood cell count', 'packed cell volume')","8579454b":"scatters('red blood cell count', 'haemoglobin')","f080efa5":"scatters('haemoglobin','packed cell volume')","b6dcc734":"violin('red blood cell count')","f0e8457e":"violin('packed cell volume')","204be9b9":"scatters('red blood cell count','albumin')","82c86b84":"scatters('packed cell volume','blood urea')","41c0bc28":"fig = px.bar(df, x=\"specific gravity\", y=\"packed cell volume\",\n             color='class', barmode='group',\n             height=400)\nfig.show()","b78e7cfd":"df.head()","5c60b7ed":"df.isna().sum().sort_values(ascending=False)","3fd4c83b":"cat_col","c3525d3d":"sns.countplot(df['red blood cells'])","dfd78cfb":"data=df.copy()","c8b6bfc2":"data['red blood cells'].isnull().sum()","996daf75":"data['red blood cells'].dropna().sample()","4077d83b":"random_sample=data['red blood cells'].dropna().sample(data['red blood cells'].isnull().sum())\nrandom_sample","167007ed":"random_sample.index","56ac613b":"data[data['red blood cells'].isnull()].index","a44ebd43":"random_sample.index=data[data['red blood cells'].isnull()].index","c777012a":"random_sample.index","e412bf73":"random_sample","904e92df":"data.loc[data['red blood cells'].isnull(),'red blood cells']=random_sample","158332bd":"data.head()","64c16c64":"sns.countplot(data['red blood cells'])","e77722d8":"data['red blood cells'].value_counts()\/len(data)","d49e13c4":"len(df[df['red blood cells']=='normal'])\/248","893f5863":"def Random_value_imputation(feature):\n    random_sample=data[feature].dropna().sample(data[feature].isnull().sum())               \n    random_sample.index=data[data[feature].isnull()].index\n    data.loc[data[feature].isnull(),feature]=random_sample\n","3cfac2cd":"Random_value_imputation(' pus cell')\nRandom_value_imputation('red blood cells')","e0224bd8":"data[cat_col].isnull().sum()","7623acda":"mode=data['pus cell clumps'].mode()[0]\nmode","1207cc77":"data['pus cell clumps']=data['pus cell clumps'].fillna(mode)","0ff0e8cc":"def impute_mode(feature):\n    mode=data[feature].mode()[0]\n    data[feature]=data[feature].fillna(mode)","a30f15d3":"for col in cat_col:\n    impute_mode(col)","cdff235e":"data[cat_col].isnull().sum()","7b3b2cad":"data[num_col].isnull().sum()","47ee443a":"for col in num_col:\n    Random_value_imputation(col)","c43a49ba":"data[num_col].isnull().sum()","a67c1139":"for col in cat_col:\n    print('{} has {} categories'.format(col, data[col].nunique()))","a6c3f1b0":"from sklearn.preprocessing import LabelEncoder","b2a67563":"le = LabelEncoder()","ef23f452":"for col in cat_col:\n    data[col]=le.fit_transform(data[col])","77ff0533":"data.head()","1ff711f5":"from sklearn.feature_selection import SelectKBest#Also known as Information Gain\nfrom sklearn.feature_selection import chi2","e06c258c":"ind_col=[col for col in data.columns if col!='class']\ndep_col='class'","3990e8b1":"X=data[ind_col]\ny=data[dep_col]","afdea0d7":"ordered_rank_features=SelectKBest(score_func=chi2,k=20)\nordered_feature=ordered_rank_features.fit(X,y)","ec8d96d1":"ordered_feature.scores_","bccb51a9":"datascores=pd.DataFrame(ordered_feature.scores_,columns=[\"Score\"])\ndatascores","d9515120":"dfcolumns=pd.DataFrame(X.columns)\ndfcolumns","4616f1bb":"features_rank=pd.concat([dfcolumns,datascores],axis=1)","76ae7066":"features_rank","be94c3f2":"features_rank.columns=['Features','Score']\nfeatures_rank","fdb17b0b":"features_rank.nlargest(10,'Score')","4534dc74":"selected_columns=features_rank.nlargest(10,'Score')['Features'].values","05926fa0":"X_new=data[selected_columns]","419e846a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_new,y,train_size=0.75)","9915a3ad":"print(X_train.shape)\nprint(X_test.shape)","58c3d344":"y_train.value_counts()","66242b00":"from xgboost import XGBClassifier\nXGBClassifier()","a51e2d42":"\nparams={\n \"learning_rate\"    : [0.05, 0.20, 0.25 ] ,\n \"max_depth\"        : [ 5, 8, 10, 12],\n \"min_child_weight\" : [ 1, 3, 5, 7 ],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.4 ],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.7 ]\n    \n}","6fc10e8f":"from sklearn.model_selection import RandomizedSearchCV","23654af6":"from xgboost import XGBClassifier\nclassifier=XGBClassifier()","a5dd3cca":"import warnings\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n","02595edd":"random_search=RandomizedSearchCV(classifier,param_distributions=params,n_iter=5,scoring='roc_auc',n_jobs=-1,cv=5,verbose=3)","934cfb80":"random_search.fit(X_train, y_train)","af14be0e":"random_search.best_estimator_","bf2f6702":"random_search.best_params_","1c377785":"classifier=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.4, gamma=0.0, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.25, max_delta_step=0, max_depth=5,\n              min_child_weight=1, monotone_constraints='()',\n              n_estimators=100, n_jobs=2, num_parallel_tree=1,\n              objective='binary:logistic', random_state=0, reg_alpha=0,\n              reg_lambda=1, scale_pos_weight=1, subsample=1,\n              tree_method='exact', use_label_encoder=True,\n              validate_parameters=1, verbosity=None)","6ef7a662":"classifier.fit(X_train,y_train)","52732d25":"y_pred=classifier.predict(X_test)","5dd14c23":"from sklearn.metrics import confusion_matrix,accuracy_score","ffc5fdd0":"confusion = confusion_matrix(y_test, y_pred)\nprint('Confusion Matrix:')\nprint(confusion)","a2c7d423":"plt.imshow(confusion)","ab714b0f":"accuracy_score(y_test, y_pred)","3d55a3f2":"* Packed cell volume >= 40 largely affects to be non ckd","0212daf9":"\n* Albumin, Blood urea -> Red blood cell count, packed cell volume, Haemoglobin","18b4f78d":"*     Both distributions are quite different, distribution CKD is quite normal and evenly distributed but not CKD distribution is a little bit left-skewed but quite close to a normal distribution","8f63b074":"*  Clearly, specific gravity >=1.02 affects non ckd","6bbd56b2":"* 1.RBC count range ~2 to <4.5 and Hemoglobin between 3 to <13 are mostly classified as positive for chronic kidney  disease(i.e ckd).\n* 2.RBC count range >4.5 to ~6.1 and Hemoglobin between >13 to 17.8 are classified as negative for chronic kidney  disease(i.e nockd).","160421ac":"* Positive Correlation:\n*  \n* Specific gravity -> Red blood cell count, Packed cell volume and Hemoglobin\n* Sugar -> Blood glucose random\n* Blood Urea -> Serum creatinine\n* Hemoglobin -> Red Blood cell count <- packed cell volume\n*  \n*  \n* Negative Correlation:\n* Albumin, Blood urea -> Red blood cell count, packed cell volume, Hemoglobin\n* Serum creatinine -> Sodium","99cf37a1":"Observations:\n  1.  age looks a bit left skewed\n  2.  Blood gluscose random is right skewed\n  3.  Blood Urea is also a bit right skewed\n  4.  Rest of the features are lightly skewed","45596925":"\n* Clearly, albumin levels of above 0 affect ckd largely"}}