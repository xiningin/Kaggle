{"cell_type":{"9aca6592":"code","312f0130":"code","f6ee1caa":"code","6f2416ed":"code","3e519075":"code","392f54dd":"code","60e19da1":"code","26e487be":"code","28cf100c":"code","d067427b":"code","35fa5b36":"code","42b471aa":"code","4edbbb4b":"code","c27c8598":"code","436ea314":"code","db51d488":"code","b1c36a21":"code","f053560a":"code","1cf804fe":"code","8c0d1f64":"code","d14915d2":"code","8894e1e7":"markdown","f0e47089":"markdown","124b78a5":"markdown","a03c5d8d":"markdown","4cbd1926":"markdown","bc5e8e0a":"markdown","7e16bb02":"markdown","20577708":"markdown","4e561b94":"markdown","849c241c":"markdown","20befba6":"markdown"},"source":{"9aca6592":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\n\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","312f0130":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]\n","f6ee1caa":"train_df.columns","6f2416ed":"train_df.head()","3e519075":"train_df.describe()","392f54dd":"train_df.info()","60e19da1":"def bar_plot(variable):\n    \"\"\"\n    input= variable ex= sex\n    output= bar plot & value count \n\n    \"\"\"\n    # get feature\n    var= train_df[variable]\n    # count number of catagorical varibale(value\/sample)\n    varValue= var.value_counts()\n    \n    # visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}:\/n {}\".format(variable,varValue) )","26e487be":"category1= [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","28cf100c":"category2=[\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))","d067427b":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable])\n    plt.xlabel=(variable)\n    plt.ylabel=(\"frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","35fa5b36":"numericVar= [\"Fare\", \"Age\", \"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)\n    \n","42b471aa":"# Survived-Pclass\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by= \"Survived\",ascending = False)","4edbbb4b":"# Survived-Parch\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by= \"Survived\",ascending = False)","c27c8598":"def detect_outliers(df,features):\n    outlier_indices=[]\n    \n    \n    for c in features:\n        #1st quarite\n         Q1= np.percentile(df[c],25)\n        #3st quarite\n         Q3= np.percentile(df[c],75)\n        #IQR\n         IQR= Q3 - Q1\n        #Outlier step\n         outlier_step =IQR* 1.5\n        #Detect outlier and their indeces\n         outlier_list_col = df[(df(c) < Q1 - outlier_step) | (df(c) > Q3 + outlier_step )].index\n        #Store indeces\n         outlier_indices.extend(outlier_list_col)                       \n                               \n            \n            \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    \n\n    return multiple_outliers                             ","436ea314":"train_df_len()\ntrain_df = pd.concat([train_df , test_df],axis=0).reset_index(drop=True)","db51d488":"train_df.head()","b1c36a21":"train_df.columns[train_df.isnull().any()]","f053560a":"train_df.isnull().sum()","1cf804fe":"train_df[train_df[\"Embarked\"].isnull()]","8c0d1f64":"train_df.boxplot(column=\"Fare\",by=\"Embarked\")\nplt.show()","d14915d2":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\") \ntrain_df[train_df[\"Embarked\"].isnull()]","8894e1e7":"<a id =\"10\"><\/a><br>\n\n## Fill Missing Value\n* Embarked has 2 missing value","f0e47089":"<a id =\"3\"><\/a><br>\n\n# Univariate Varible Analysis\n* Categorical Varible : Survived, Sex ,Pclass, embarkerd, Cabin, Name ,Ticket, Sibsp and Parch\n* Numerical Varible :,Fare, Age and PassengerId","124b78a5":"# Introduction\nthe sinking of Titanic is one of the most notorious ship break in the history in 1912,during her voyage. The Titanic sank after colliding with an iceberg. Killing 1502 out of 2224 passengers and craw. \n\n<front color = \"red\">\nContent: \n\n1. [Load and Check Data](#1)\n1. [Veribale Describition](#2)\n      * .[Univariate Varible Analysis](#3)\n        * .[Categorical Varible](#4)\n        * .[Numerical Varible](#5)\n1. [Basic Data Analysis](#6)        \n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n          * .[Find Missing Value](#9)\n          * .[Fill Missing Value](#10)","a03c5d8d":"<a id =\"1\"><\/a><br>\n# Load and Check Data","4cbd1926":"<a id =\"2\"><\/a><br>\n# Veribale Describition\n\n1. PassengerId : \u0131nique \u0131d number to each passenger\n2. Survived : passenger survive(1) or die(0)\n3. Pclass : passenger class\n4. Name\n5. Sex \n6. Age \n7. SibSp : number of siblings\/spouses\n8. Parch : number of parents or childeren\n9. Ticket : ticket number\n10. Fare : amount of money for spend on ticket\n11. Cabin : cabin category\n12. Embarked : port where passenger ambarked(c-s-q)\n","bc5e8e0a":"<a id =\"5\"><\/a><br>\n\n## Numerical Varible","7e16bb02":"<a id =\"4\"><\/a><br>\n\n## Categorical Varible \n","20577708":"<a id =\"7\"><\/a><br>\n# Outlier Detection","4e561b94":"<a id =\"8\"><\/a><br>\n\n# Missing Value\n* Find Missing Value\n* Fill Missing Value\n\n          ","849c241c":"<a id =\"6\"><\/a><br>\n# Basic Data Analysis\n\n* Survived-Pclass\n* Survived-Parch","20befba6":"<a id =\"9\"><\/a><br>\n\n## Find Missing Value"}}