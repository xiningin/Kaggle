{"cell_type":{"67883f58":"code","b2b29cc6":"code","bcdb978a":"code","10fbe06a":"code","e8e506e8":"code","0143dff7":"code","f8041d30":"code","f5d4cdc8":"code","1cc24740":"markdown"},"source":{"67883f58":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\nfrom keras.models import Sequential\nmodel = Sequential()\n\nfrom keras.layers import Dense, LSTM, Dropout\n\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler(feature_range = (0,1))\n","b2b29cc6":"fake = pd.read_csv('..\/input\/fake-and-real-news-dataset\/Fake.csv')\ntrue = pd.read_csv('..\/input\/fake-and-real-news-dataset\/True.csv')\nfake","bcdb978a":"fake['true'] = 0\ntrue['true'] = 1\n\n\ndf = pd.concat([fake, true], axis = 0)","10fbe06a":"def create_num(x):\n    text = []\n\n    for i in range(len(x)):\n\n        text.append(x[i].split())\n\n    text = pd.DataFrame(text)\n\n    text = text.stack().rank().unstack()\n    text = text.fillna(-1)\n    \n    text = scaler.fit_transform(text)\n    \n    return text","e8e506e8":"\n#text = create_num(df['text'].values)\n#subject = create_num(df['subject'].values)\n","0143dff7":"model.add(Dense(500, input_shape = [1,42]))\nmodel.add(Dropout(0.275))\nmodel.add(Dense(250, activation = 'relu'))\nmodel.add(Dropout(0.275))\nmodel.add(Dense(125, activation = 'relu'))\nmodel.add(Dropout(0.275))\nmodel.add(Dense(1, activation = 'sigmoid'))\n\nprint(model.summary())\n\nmodel.compile(loss = 'huber_loss',\n             optimizer = 'adam',\n             metrics = 'accuracy')\n\nhistory = model.fit(\n    x,\n    y,\n    batch_size=1024,\n    epochs=100,\n    verbose=1,\n    shuffle=True)\n\n\nloss = history.history['loss']\nprint(plt.plot(loss))\nmodel.save('.\/')","f8041d30":"x_test = x_test.reshape(1,-1)\nprediction = model.predict(x_test)\nresult = np.around(prediction)\n_prediction = np.around(prediction,2) * 100\n\nif result == 0:\n    print(\"It's a fake by \" + str(100-_prediction[0][0]) + '% !')\nelse:\n    print(\"It's true by \" + str(_prediction[0][0]) + '% !')\n    \nprediction","f5d4cdc8":"x","1cc24740":"text = pd.Series(\"USA approves first vaccine for boosters\")\ninpt = pd.concat([df['title'], text])\n\n\nx = create_num(inpt.values)\ny = np.array(df['true'])\n\nx_test = x[x.shape[0]-1]\nx = np.delete(x, (x.shape[0]-1), axis = 0)"}}