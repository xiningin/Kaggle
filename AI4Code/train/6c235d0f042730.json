{"cell_type":{"a993d8d7":"code","ac16cad8":"code","8d4897d5":"code","8d11ea77":"code","4b540c19":"code","3c9d37a9":"code","196c569a":"code","7dc2c495":"code","1a098056":"code","0c20703b":"code","d41eaf7c":"code","571ecf9f":"code","7849df4d":"code","6c368e15":"code","0bf3a7bd":"code","1e562840":"code","036a743d":"code","ede200b9":"markdown","4a536447":"markdown","119db1ea":"markdown","0c640d83":"markdown","ade4c9f8":"markdown","ac43a0e0":"markdown","f1bcc38b":"markdown","5ce93fa8":"markdown","1fe5ca28":"markdown","b24745f1":"markdown","723544b6":"markdown","c95a4d09":"markdown","9bfefe56":"markdown"},"source":{"a993d8d7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\nimport plotly.offline as py\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=True) \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ac16cad8":"# Load data and change theme.\ndf = pd.read_csv(\"..\/input\/scrubbed.csv\", low_memory=False)\nplt.style.use('dark_background') # I love dark theme. :)\n\n","8d4897d5":"df.info()","8d11ea77":"df.country.unique()\n","4b540c19":"df[\"country\"] = df[\"country\"].fillna(\"?\")\ndf.country.unique()\n","3c9d37a9":"df.sample(5)","196c569a":"def grep_year(x):\n    x = x.split(\" \")[0]\n    x = x.split(\"\/\")[2]\n    x = int(x)\n    return x\n\ndf[\"Sight-Year\"] = df['datetime'].apply(grep_year)\ndf[\"Date-Posted-Year\"] = df['date posted'].apply(grep_year)","7dc2c495":"df.sample(5)","1a098056":"def conv_season(x):\n    x = int(x.split(\"\/\")[0])\n    \n    if x in range(3,6):\n        return \"Spring\"\n    if x in range(6,9):\n        return \"Summer\"\n    if x in range(9,12):\n        return \"Autumn\"\n    if x == 12 or x == 1 or x == 2:\n        return \"Winter\"\n\ndf[\"Season\"] = df['datetime'].apply(conv_season)","0c20703b":"df.sample(5)","d41eaf7c":"states_us = df[df.country == \"us\"][\"state\"].value_counts().index\nstates_ratio = df[df.country == \"us\"][\"state\"].value_counts().values\nstates_us = [i.upper() for i in states_us]\n\nplt.subplots(figsize=(24,8))\nsns.barplot(states_us, states_ratio)\nplt.xticks(rotation=45, fontsize=16)\nplt.yticks(fontsize=20)\n\nplt.show()","571ecf9f":"plt.subplots(figsize=(22,8))\nduration_sec = [i for i in df[\"duration (seconds)\"].value_counts()]\nduration_sec_list = []\nfor i in duration_sec:\n    if i in range(0,16):\n        duration_sec_list.append(\"0-15\")\n    if i in range(15,31):\n        duration_sec_list.append(\"15-30\")\n    if i in range(31,61):\n        duration_sec_list.append(\"30-60\")\n    if i in range(60,121):\n        duration_sec_list.append(\"60-120\")\n    if i in range(120,241):\n        duration_sec_list.append(\"120-240\")\n    if i > 240:\n        duration_sec_list.append(\">240\")\nduration_sec_list = pd.Series(duration_sec_list)\ndi = duration_sec_list.value_counts().index\ndv = duration_sec_list.value_counts().values\nsns.barplot(di,dv)\n\nplt.xlabel(\"Time - Seconds\",fontsize=24)\nplt.xticks(fontsize=20)\nplt.ylabel(\"Rates\",fontsize=24)\nplt.yticks(fontsize=20)\n\nplt.show()","7849df4d":"plt.subplots(figsize=(18,8))\n\ndf['shape'].value_counts().plot('bar')\nplt.xticks(rotation=45, fontsize=15)\nplt.show()","6c368e15":"plt.subplots(figsize=(14,6))\n\ndf['Season'].value_counts().plot('bar')\nplt.ylabel(\"Frequency\")\nplt.xticks(rotation=0)\nplt.title(\"Sight - Season\")\nplt.show()","0bf3a7bd":"plt.subplots(figsize=(22,10))\n\nplt.subplot(2,1,1)\nplt.title(\"Sight rates by years\")\ndf['Sight-Year'].value_counts().plot('bar')\nplt.xlabel(\"Years\")\nplt.subplots(figsize=(22,10))\n\nplt.subplot(2,1,2)\nplt.title(\"Posting the case's rates by years\")\ndf['Date-Posted-Year'].value_counts().plot('bar')\nplt.ylabel(\"Post Year\")\nplt.xticks(rotation=0)\nplt.show()\n","1e562840":"data = [\n        dict(\n        type='choropleth',\n        locations = states_us,\n        z = states_ratio,\n        locationmode = 'USA-states',\n        text = \"times\",\n        marker = dict(\n            line = dict (\n                color = 'rgb(255,255,255)',\n                width = 2\n            ) ),\n        colorbar = dict(\n            title = \"Sight rates by states\")\n        )\n        ]\n\nlayout = dict(\n        title = 'UFO sight rates from USA',\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa' ),\n            showlakes = True,\n            lakecolor = 'rgb(255, 255, 255)'),\n              )\n\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","036a743d":"words = [i for i in df.comments.dropna()]\n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=2048,\n                          height=1024\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","ede200b9":"# I want to change the nan value with \"?\" ","4a536447":"# most used words\n**Word Cloud**","119db1ea":"**Sight rates in USA**\n","0c640d83":"** Which season was sighted? **","ade4c9f8":"# And now, let it visualize them!\n\n** Firstly, we take a look sights ratio **","ac43a0e0":"* ** How many seconds was sighted? **","f1bcc38b":"# I want to add 2 more columns.\n**1- Sight year**\n**2- Date the posted year**","5ce93fa8":"**UFO sight rates from USA ( MAP PLOT )**","1fe5ca28":"**Sight years and post years**","b24745f1":"** how looks like is shape? **","723544b6":"**Let's take a look**","c95a4d09":"> ** Hi\nThis is my first analysis.\nPlease write your thoughts. Thank you. **","9bfefe56":"**Again, i'll add one more column.**\n** This column for  \"in what season was it sight?\"**"}}