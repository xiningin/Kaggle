{"cell_type":{"d4f6a3a9":"code","29375bf5":"code","efd8867b":"code","816d694d":"code","584c9f23":"code","f0ae4cd4":"code","c5ec9c0d":"code","9d1456bf":"code","f8282621":"code","d54edff8":"code","a80b9daf":"code","8557a207":"code","95ee37f5":"code","ef6c0f30":"code","8f0193ef":"code","b0d4916d":"code","acf80c23":"code","c5c0612a":"code","32ccb314":"code","30b20c20":"code","1be6e609":"code","3022b145":"code","4dc41f7b":"code","cd2bf930":"code","df922a90":"code","281315ec":"code","e2d4d450":"code","f41098ec":"code","2282652f":"code","9ee7f77a":"code","d4c04d09":"code","9ba8e71f":"code","3dcd9cf8":"code","50d95253":"code","210cf755":"code","7cd4868f":"code","80138c7c":"code","de031076":"code","5e2ffa09":"code","ea2f2446":"code","000713f8":"code","2d8a682d":"code","fd74aab3":"code","598321b5":"code","0eaabbb2":"code","305b7ef8":"code","0afb3e21":"code","23e4aa09":"code","1e4c6d05":"markdown","84650cb9":"markdown"},"source":{"d4f6a3a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","29375bf5":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\n\ntrain_data = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain_data.head(10)","efd8867b":"print(\"number of passanger in the original dataset: \"+ str(len(train_data.index)))","816d694d":"sns.countplot(x=\"Survived\", data= train_data)","584c9f23":"sns.countplot(x=\"Survived\", hue='Sex', data= train_data)","f0ae4cd4":"sns.countplot(x=\"Survived\", hue=\"Pclass\",data= train_data)","c5ec9c0d":"train_data[\"Age\"].plot.hist()","9d1456bf":"train_data[\"Fare\"].plot.hist(figsize=(10,5))","f8282621":"train_data.info()","d54edff8":"sns.countplot(x = \"SibSp\", data= train_data)","a80b9daf":"train_data.isnull()","8557a207":"train_data.isnull().sum()","95ee37f5":"sns.heatmap(train_data.isnull(), yticklabels=False)","ef6c0f30":"sns.heatmap(train_data.isnull(), yticklabels=False, cmap=\"viridis\")","8f0193ef":"sns.boxplot(x= \"Pclass\", y=\"Age\", data = train_data)","b0d4916d":"train_data.drop(\"Cabin\", axis=1, inplace=True)","acf80c23":"train_data.dropna(inplace=True)","c5c0612a":"sns.heatmap(train_data.isnull(), yticklabels=False, cbar=False)","32ccb314":"train_data.isnull().sum()","30b20c20":"sex = pd.get_dummies(train_data['Sex'], drop_first =True)\nembark = pd.get_dummies(train_data['Embarked'], drop_first =True)\npclass = pd.get_dummies(train_data['Pclass'], drop_first =True)","1be6e609":"train_data = pd.concat([train_data, sex, embark, pclass], axis=1)\ntrain_data.head()","3022b145":"train_data.drop([\"PassengerId\",\"Pclass\",\"Sex\",\"Name\",\"Ticket\", 'Embarked'], axis=1, inplace=True)","4dc41f7b":"train_data.head()","cd2bf930":"X = train_data.drop('Survived', axis=1)\ny = train_data['Survived']","df922a90":"X.head(20)","281315ec":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","e2d4d450":"from sklearn.linear_model import LogisticRegression\nlogmodel = LogisticRegression()","f41098ec":"#X_train.head(10)\n\nlogmodel.fit(X_train, y_train)","2282652f":"prediction = logmodel.predict(X_test)","9ee7f77a":"from sklearn.metrics import classification_report","d4c04d09":"classification_report(y_test, prediction)","9ba8e71f":"from sklearn.metrics import confusion_matrix","3dcd9cf8":"confusion_matrix(y_test, prediction)","50d95253":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, prediction)","210cf755":"test_data = pd.read_csv(\"..\/input\/titanic\/test.csv\")","7cd4868f":"test_data.isnull().sum()","80138c7c":"Age_mean = test_data['Age'].mean()\nfair_mean = test_data['Fare'].mean()\nAge_mean","de031076":"test_data['Age'] = test_data['Age'].fillna(Age_mean)\ntest_data['Fare'] = test_data['Fare'].fillna(fair_mean)","5e2ffa09":"test_data.head()","ea2f2446":"#test_data.dropna(inplace=True)\n\nsex_test = pd.get_dummies(test_data['Sex'], drop_first =True)\nembark_test = pd.get_dummies(test_data['Embarked'], drop_first =True)\npclass_test = pd.get_dummies(test_data['Pclass'], drop_first =True)\n\ntest_data = pd.concat([test_data, sex_test, embark_test, pclass_test], axis=1)\ntest_data.head()","000713f8":"PassengerId = test_data['PassengerId']\ntest_data.drop([\"PassengerId\",\"Pclass\",\"Sex\",\"Name\",\"Ticket\", 'Embarked', 'Cabin'], axis=1, inplace=True)\ntest_data.head()","2d8a682d":"PassengerId.tail(25)\n\nprint(PassengerId.count())","fd74aab3":"test_data.isnull().sum()","598321b5":"test_predictrion = logmodel.predict(test_data)","0eaabbb2":"print(test_predictrion)\ntest_predictrion = pd.DataFrame(test_predictrion)","305b7ef8":"Result = pd.concat([PassengerId, test_predictrion])","0afb3e21":"Result.to_csv('submission123.csv', sep='\\t', encoding='utf-8')","23e4aa09":"PassengerId","1e4c6d05":"## Analyzing Data","84650cb9":"Data Wrangling"}}