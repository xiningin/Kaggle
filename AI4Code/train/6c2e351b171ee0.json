{"cell_type":{"0e17598b":"code","5f5532bd":"code","b1dd3b3b":"code","327d1300":"code","8ac1460a":"code","806c787e":"code","0426024c":"code","91e6e21b":"code","c21ca138":"code","47bd260b":"code","275d8220":"code","7f841705":"code","35671d35":"markdown","3518cbbe":"markdown","4af3a78b":"markdown","a5fb5704":"markdown","e6a38973":"markdown"},"source":{"0e17598b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f5532bd":"data = pd.read_csv(\"\/kaggle\/input\/used-bike-price-in-india\/bikes.csv\")","b1dd3b3b":"data.shape","327d1300":"data.isna().sum()","8ac1460a":"data = data.dropna()","806c787e":"data.isna().sum()","0426024c":"data['mileage'].unique()","91e6e21b":"# The following values to be removed or handled :\n# removing \"\\n\", \"kmpl\", \"kms\" characters\/words\n# removing rows with mileage value as \"LIQUID COOLED\", ''\n# computing average for the values which are in form of range( eg: '45-55' will be converted to 50)\n\ndata['mileage'] = data['mileage'].apply(lambda x : x.replace(\"\\n\",'').strip())\ndata['mileage'] = data['mileage'].apply(lambda x : x.upper().replace(\"KMPL\",'').strip())\ndata['mileage'] = data['mileage'].apply(lambda x : x.replace(\"KMS\",'').strip())\ndata = data[data['mileage'] != 'LIQUID COOLED']\ndata = data[data['mileage'] != '']\ndata['mileage'] = data['mileage'].apply(lambda x : float(x) if len(x.split(\"-\")) == 1  else  (int(x.split(\"-\")[0]) + int(x.split(\"-\")[1])) \/2 )","c21ca138":"data['power'].unique()","47bd260b":"# The following values to be removed or handled :\n# removing \"BHP\",\"KW\",\"HP\" characters\/words\n# converting KW, PS to HP\n# removing rows with power value as \"100-110  (APPROX., NOT OFFICIALLY ANNOUNCED)\"\n\ndata['power'] = data['power'].astype(\"str\")\ndata['power'] = data['power'].apply(lambda x : x.upper().replace(\"BHP\",'').strip())\n\n\n#'29.9 HP \/ 22 KW'\ndata['power']  = data['power'].apply(lambda x : x if x.find(\"HP\") == -1 else str(float(x[:x.find(\"HP\")-1])))\n\n\n#1 kw = 1.34hp\ndata['power'] = data['power'].apply(lambda x : x if x.find(\"KW\") == -1 else str(float(x[:x.find(\"KW\")-1])*1.34))\n\n\n#1 ps = 0.98592 hp\ndata['power'] = data['power'].apply(lambda x : x if x.find(\"PS\") == -1 else float(x[:x.upper().find(\"PS\")].strip())*0.98)\n\n\n#'100-110  (APPROX., NOT OFFICIALLY ANNOUNCED)'\ndata = data[data['power'] != '100-110  (APPROX., NOT OFFICIALLY ANNOUNCED)']\n\n\n\ndata['power'] = data['power'].astype(\"float\")\ndata['power'] = round(data['power'],2)","275d8220":"# The following values to be removed or handled :\n# removing \"Km\" characters\/words\n# removing rows where kms_driven are filled inappropriate values(\"Mileage\",\"Yes\")\n\n\ndata['kms_driven'] = data['kms_driven'].apply(lambda x : x.replace(\"Km\",'').strip())\n\n#remove rows filled with mileage values\ndata = data[data['kms_driven'].apply(lambda x : True if x.find(\"Mil\") == -1 else False)]\ndata = data[data['kms_driven'] != 'Yes']\ndata['kms_driven']  = data['kms_driven'].astype(int)","7f841705":"data.shape","35671d35":"# Handling power","3518cbbe":"# Kms_driven","4af3a78b":"# Checking for null values","a5fb5704":"# Handling mileage","e6a38973":"# Dropping null values"}}