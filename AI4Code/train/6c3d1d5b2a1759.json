{"cell_type":{"fa7a0c57":"code","db5ceae0":"code","540316ff":"code","6b048e8b":"code","80b24b1c":"code","eb49c0a3":"code","02df41cf":"code","d0919fcf":"code","fb17c181":"code","7c19fe5a":"code","5aa04aff":"code","3482cd5b":"code","b3ce0cdf":"code","49c9a40d":"code","5a11ab2d":"code","f5138fa6":"code","62e8db3a":"code","ae2b4efe":"code","93f86f2c":"code","5e8c3ec4":"code","aa2e7ed2":"markdown","6e9b1ec5":"markdown","0150bebb":"markdown","d1770022":"markdown","b9ad0708":"markdown","b71e3061":"markdown"},"source":{"fa7a0c57":"%pylab inline","db5ceae0":"from sklearn import ensemble, model_selection, metrics \n\nimport numpy as np\nimport pandas as pd","540316ff":"bioresponce = pd.read_csv('..\/\/input\/train.csv', header=0, sep=',')\nbioresponce_test = pd.read_csv('..\/\/input\/test.csv')","6b048e8b":"bioresponce.head()","80b24b1c":"bioresponce.shape","eb49c0a3":"bioresponce.columns","02df41cf":"bioresponce_target = bioresponce.Activity.values","d0919fcf":"print('bioresponse = 1: {:.2f}\\nbioresponse = 0: {:.2f}'.format(sum(bioresponce_target)\/float(len(bioresponce_target)), \n                1.0 - sum(bioresponce_target)\/float(len(bioresponce_target))))","fb17c181":"bioresponce_data = bioresponce.iloc[:, 1:]","7c19fe5a":"rf_classifier_low_depth = ensemble.RandomForestClassifier(n_estimators = 50, max_depth = 2, random_state = 1)","5aa04aff":"train_sizes, train_scores, test_scores = model_selection.learning_curve(rf_classifier_low_depth, bioresponce_data, bioresponce_target, \n                                                                       train_sizes=np.arange(0.1,1., 0.2), \n                                                                       cv=3, scoring='accuracy')","3482cd5b":"print(train_sizes)\nprint(train_scores.mean(axis = 1))\nprint(test_scores.mean(axis = 1))","b3ce0cdf":"pylab.grid(True)\npylab.plot(train_sizes, train_scores.mean(axis = 1), 'g-', marker='o', label='train')\npylab.plot(train_sizes, test_scores.mean(axis = 1), 'r-', marker='o', label='test')\npylab.ylim((0.0, 1.05))\npylab.legend(loc='lower right')","49c9a40d":"rf_classifier_low_depth.fit(bioresponce_data, bioresponce_target)\nresult_low = rf_classifier_low_depth.predict(bioresponce_test)\ndf_low = pd.DataFrame(result_low)\n\ndf_low.index.name='MoleculeId'\ndf_low.index+=1\ndf_low.columns=['PredictedProbability']\n#df_low.to_csv('results_low_tree.csv', header=True)\ndf_low.head()","5a11ab2d":"rf_classifier = ensemble.RandomForestClassifier(n_estimators = 50, max_depth = 10, random_state = 1)","f5138fa6":"train_sizes, c, test_scores = model_selection.learning_curve(rf_classifier, bioresponce_data, bioresponce_target, \n                                                                       train_sizes=np.arange(0.1,1, 0.2), \n                                                                       cv=3, scoring='accuracy')","62e8db3a":"pylab.grid(True)\npylab.plot(train_sizes, train_scores.mean(axis = 1), 'g-', marker='o', label='train')\npylab.plot(train_sizes, test_scores.mean(axis = 1), 'r-', marker='o', label='test')\npylab.ylim((0.0, 1.05))\npylab.legend(loc='lower right')","ae2b4efe":"rf_classifier.fit(bioresponce_data, bioresponce_target)","93f86f2c":"result = rf_classifier.predict(bioresponce_test)\ndf = pd.DataFrame(result)","5e8c3ec4":"df.index.name='MoleculeId'\ndf.index+=1\ndf.columns=['PredictedProbability']\ndf.to_csv('results_without_proba.csv', header=True)\ndf.head()","aa2e7ed2":"# Sklearn","6e9b1ec5":"This is my training kernel from my lesson on Stepik. \n\nI changed it a little bit. the result is very bad in the competition","0150bebb":"### Model RandomForestClassifier","d1770022":"## sklearn.ensemble.RandomForestClassifier","b9ad0708":"#### Learning curves for trees of greater depth","b71e3061":"#### Learning curves for trees of shallow depth"}}