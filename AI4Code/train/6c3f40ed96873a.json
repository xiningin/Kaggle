{"cell_type":{"6b49ae03":"code","a1fa953d":"code","3b008f25":"code","de912cba":"code","10a0afb5":"code","a16d25d9":"code","978cb044":"code","b6c23853":"code","7955dbf1":"code","ebe8d9a5":"code","5ae545b4":"code","961a4cac":"code","680d168e":"code","4178b674":"code","13263c67":"code","d82fbec5":"markdown","9bed0135":"markdown","4d64c991":"markdown","ba5466f8":"markdown","77522be2":"markdown","96b67e9b":"markdown","fb618b0d":"markdown","8a29a319":"markdown","c21f55a3":"markdown","39920b9a":"markdown"},"source":{"6b49ae03":"# Load the dataset\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfile_name = '\/kaggle\/input\/love-island-2019\/Love Island 2019.xlsx'\ndf = pd.read_excel(file_name, sheet_name=0, skiprows=[0,1])\n\n# Make some simplifications\ndf = df.rename(columns={\"Instagram followres (June 2020) in millions\": \"Followers\"})\ndf = df.drop(['Unnamed: 0'], axis=1)","a1fa953d":"# Show 10 participants\ndf.head(10)","3b008f25":"# Print a contestant as a sample\ndf.iloc[5]","de912cba":"# Number of participants\nprint(f'Total number of contestants: {len(df)}')\n\nNumM = len(df[df['Gender'] == 'M'])\nprint (f'Number of male contestants: {NumM}')\n\nNumF = len(df[df['Gender'] == 'F'])\nprint (f'Number of female contestants: {NumF}')\n\nAvgA = round(df['Age'].mean())\nprint (f'Average age of contestants: {AvgA} years old')\n\nYoungP = df['Age'].min()\nprint (f'Youngest contestant is {YoungP} years old')\n\nOldP = (df['Age'].max())\nprint (f'Oldest contestant is {OldP} years old')\n\nTopT = (df['Hometown'].value_counts().index.tolist()[:5])\nprint (f'Top 5 towns in the show: {TopT}')\n\nNumT = len(df['Hometown'].value_counts().index.tolist())\nprint (f'There are {NumT} different towns')\n\nBotT = df['Hometown'].value_counts().index.tolist()[NumT-5:]\nprint (f'Bottom 5 towns in the show: {BotT}')\n\nAvgF = round(df['Followers'].mean(), 2)\nprint (f'Average followers in millions: {AvgF}M')\n\ndf = df.assign(FirstName=(df['Name'].str.extract('(^\\S*)')))\nPMF = df.loc[df['Followers'].idxmax(), 'FirstName']\nNMF = df['Followers'].max()\nprint (f'Contestant with the most followers is {PMF} with {NMF} millions')","10a0afb5":"# Plot age versus status\n\nplt.figure(figsize=(8,6))\nax = sns.barplot(\"Status\", y=\"Age\", data=df, palette=\"Blues_d\")","a16d25d9":"# Followers by progress\nplt.figure(figsize=(8,6))\nax = sns.barplot(x=\"Status\", y=\"Followers\", hue=\"Gender\", data=df)\nax.set(title='Followers versus status', xlabel='Status', ylabel='Followers')\nplt.show()\n\nf,ax1 = plt.subplots(figsize=(26,10))\nsns.pointplot(x='FirstName', y='Followers',data=df, color='lime',alpha=0.8)\nax1.set(title='Followers versus progress')\nplt.xlabel('Contestant',fontsize = 20,color='blue')\nplt.ylabel('Followers in M',fontsize = 20,color='blue')\nplt.grid()","978cb044":"# Plot numerical variables and compare them to a contestant's number of followers.\n\ncolumns = list(df.select_dtypes(exclude='object').columns)\nplt.figure(figsize=[20,30])\nfor i in range(len(df.select_dtypes(exclude='object').columns)):\n    try:\n        ax = plt.subplot(10,4,i+1)\n        plt.scatter(df[columns[i]],df.Followers,alpha=0.5)\n        plt.title(columns[i])\n        plt.xlabel(columns[i])\n        plt.ylabel('Followers')\n        box = ax.get_position()\n        box.y1 = box.y1 - 0.01 \n        ax.set_position(box)\n    except:\n        pass\nplt.show()","b6c23853":"# Plot significant correlations and their values\n\ndf_num = df.select_dtypes(include = ['float64', 'int64'])\ncorr = df_num.corr()\nplt.figure(figsize=(8, 8))\n\nsns.heatmap(corr[(corr >= 0) | (corr <= -0.4)], \n            cmap='viridis', vmax=1.0, vmin=-1.0, linewidths=0.1,\n            annot=True, annot_kws={\"size\": 8}, square=True);","7955dbf1":"# Assign a score based on the status\n\npd.options.mode.chained_assignment = None\ndf = df.assign(Score=0)\n\ndf.Score[df.Status=='Winner'] = 5\ndf.Score[df.Status=='Runner-up'] = 4\ndf.Score[df.Status=='Third place'] = 3\ndf.Score[df.Status=='Fourth place'] = 2\ndf.Score[df.Status=='Dumped'] = 1","ebe8d9a5":"df.head(10)","5ae545b4":"# Run kmeans. Start by selecting the Followers and Score columns, then run Elbow.\n# Courtesy of https:\/\/www.kaggle.com\/vjchoudhary7\/kmeans-clustering-in-customer-segmentation\n\nfrom sklearn.cluster import KMeans\n\nkmeans_df = df.iloc[:, [6, 9]].values\nwcss=[]\nmax_clusters = 10\n\nfor i in range(1, max_clusters + 1):\n    kmeans = KMeans(n_clusters= i, init='k-means++', random_state=0)\n    kmeans.fit(kmeans_df)\n    wcss.append(kmeans.inertia_)\n    \n#Visualizing the ELBOW method to get the optimal value of K\n\nplt.plot(range(1,11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('no of clusters')\nplt.ylabel('wcss')\nplt.show()","961a4cac":"# 3 clusters seems appropriate, run Kmeans and visualize\n\nkmeansmodel = KMeans(n_clusters=3, init='k-means++', random_state=0)\ny_kmeans = kmeansmodel.fit_predict(kmeans_df)\n\nplt.figure(figsize=[8,8])\nplt.scatter(kmeans_df[y_kmeans == 0, 0], kmeans_df[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(kmeans_df[y_kmeans == 1, 0], kmeans_df[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(kmeans_df[y_kmeans == 2, 0], kmeans_df[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Clusters of participants')\nplt.xlabel('Followers')\nplt.ylabel('Score')\nplt.legend()\nplt.show()","680d168e":"import statsmodels.api as sm\nfrom sklearn import preprocessing\n\n# Extract X\/y, then convert to arrays and scale to unit variance\nX = df.Followers\ny = df.Score\n\nX_arr = np.array(X).reshape(-1, 1)\ny_arr = np.array(y).reshape(-1, 1)\n\nX_arr = np.divide(X_arr - X_arr.min(), X_arr.max() - X_arr.min())\ny_arr = np.divide(y_arr - y_arr.min(), y_arr.max() - y_arr.min())\n\nx_with_ones = sm.add_constant(X_arr, prepend=False)\n\n# Make a linear regression model using OLS\n\nlogit_model = sm.Logit(y_arr, x_with_ones)\nlm = logit_model.fit()\nprint(lm.summary())","4178b674":"# Print the confidence intervals for the model coefficients\nlm.conf_int()","13263c67":"# Print the p-values for the model coefficients\nlm.pvalues","d82fbec5":"![](https:\/\/ichef.bbci.co.uk\/news\/660\/cpsprodpb\/FA2A\/production\/_101824046_love_island_sr4_01.jpg)","9bed0135":"# Exploring followers\/win relationship\n\n![](http:\/\/)We now seek an answer to this question Q1 by plotting the two features (Followers and Status) head-to-head, run a correlation study and perform KMeans clustering to separate observations into clusters.","4d64c991":"KMeans revals that most contestants (cluster 1) have a little following around the 1 million mark. Recall that the average number of followers is 0.96M. KMeans points out that top contestants follower-wise (cluster 2 and 3) sticks out and have a significantly larger fan base (2-3 times as much) as the average group. We see the vast majority of observations belonging to the first clusters (few followers).","ba5466f8":"We already see a significant correlation between a contestant's Instagram followers in millions and the how far they progressed in the competition. This suggests that either your number of followers increases the longer you are a part of the show and experiances the exposure this brings, or that the number of followers you have to begin with determines your final placement.","77522be2":"Not surprisingly, a 0.62 pairwise correlation of the two features Day Exited and Followers. The day you enter also have a say in determining when you'll exit, as you obviously cannot exit before you've entered. Next we compute a score column to assist in clustering and testing.","96b67e9b":"# Descriptive statistics\n\nWe do a quick data analysis to look at some descriptive features of the dataset and interesting observations. As part of this we also make a few plots that will illustrate the data and show various features compared to each other.","fb618b0d":"Again, notice the correlation in the third plot. If you are on the last contestant's to exit the show, you will have a larger follower's base that to begin with. There seems to exist a linear relationship between the time (fit a regression line and it would have an upward trajectory). Next we plot significant correlations for the numerial features in the data set.","8a29a319":"In this case, the p-value for Followers is slightly below 0.05, and so we believe **that there is a relationship** between the number of Instagram followers you have and the score you get on Love Island. However, the number of followers are measured AFTER the competition has ended, so we don't know if the top contestants were popular before the show started or if they'd simply accumulated a bigger fanbase by being on the show longer!\n\nWhat are a few key things we learn from this output?\n\n* Followers have significant p-values, thus we reject the null hypothesis for Followers (that there is no association between those features and Score).\n* Followers are positively associated with Score.\n","c21f55a3":"# Hypothesis Testing and p-values\n\nTo test the correlation between followers and success, we define the null hypothesis (H0) that the two variables have no relationship with each other (they are independent) and an alternative hypothesis (H1) that they have a relationship (they are dependent). Then, we check whether the data supports rejecting the null hypothesis or failing to reject the null hypothesis. We use a 95% confidence interval.\n\n**null hypothesis:** There is no relationship between Followers and Score (and thus $\\beta_1$ equals zero) <br>\n**alternative hypothesis:** There is a relationship between Followers and Score (and thus $\\beta_1$ is not equal to zero)\n\nHow do we test this hypothesis? Intuitively, we reject the null (and thus believe the alternative) if the 95% confidence interval **does not include zero**. Conversely, the **p-value** represents the probability that the coefficient is actually zero\n\nIf the 95% confidence interval includes zero, the p-value for that coefficient will be greater than 0.05. If the 95% confidence interval does not include zero, the p-value will be less than 0.05. Thus, a p-value less than 0.05 is one way to decide whether there is likely a relationship between the feature and the response. (Again, using 0.05 as the cutoff is just a convention.)\n\nBelow is a linear regression model featuing a single independent variable (Followers) and a dependent variable (Score). Simple linear regression is an approach for predicting a quantitative response using a single feature. It takes the following form:\n\n$y = \\beta_0 + \\beta_1x$\n\nwhere:\n\n$y$ is the response <br>\n$x$ is the feature <br>\n$\\beta_0$ is the intercept <br>\n$\\beta_1$ is the coefficient for x\n\nTogether, $\\beta_0$ and $\\beta_1$ are called the model coefficients. In order to create our model, we must learn the values of these coefficients using a method like least squares (OLS).  Linear regression is a high bias\/low variance model.\n\nSource: https:\/\/github.com\/justmarkham\/DAT4\/blob\/master\/notebooks\/08_linear_regression.ipynb","39920b9a":"# Introduction\n\nLove Island is a British dating reality series. It is a revival of the earlier celebrity series of the same name, which aired for two series in 2005 and 2006 on ITV. Laura Whitmore began presenting the series in 2020. In 2018, it won a BAFTA Award for Best Reality and Constructed Factual Show.\n\nLove Island involves a group of contestants, referred to as Islanders, living in isolation from the outside world in a villa in Mallorca, constantly under video surveillance. To survive in the villa the Islanders must be coupled up with another Islander, whether it be for love, friendship or money, as the overall winning couple receives \u00a350,000.\n\nThe data set contains data about 36 contestants sorted by the day the left the competition. Obviously, the longer you stay, the more \n\nWe would like know if:\n\nDoes the Instagram following predict who will win?"}}