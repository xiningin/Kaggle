{"cell_type":{"b7fdd49c":"code","8a2d4902":"code","8f3b0648":"code","fb151785":"code","d35614d1":"code","ef8a9d1b":"code","b178d3be":"code","bab03b0c":"code","4ce78658":"code","8aed0e80":"code","a562e5c0":"code","36f03679":"code","ef5168f1":"code","82fbb04b":"code","7673fe6c":"code","22e530b1":"code","166c8c13":"code","feae95fc":"code","9adba824":"code","c0d54aab":"code","ad22889e":"code","77703b3d":"code","1ecc2772":"code","c887ff6b":"code","69a518a6":"code","bfae2667":"code","b11e9463":"code","9afd5f2e":"code","0106df04":"code","6e0da7ae":"code","209ab4ef":"code","b0b90c69":"code","666e93f6":"code","02ac9bba":"code","607e34d8":"code","de5dd57a":"code","426bd119":"code","733b28ea":"code","7acb4fbf":"code","16ea6dca":"code","bb92877f":"code","54cdcf05":"code","689b6ea9":"code","59b8b3a7":"code","ecbfeb1d":"code","e1ddccf3":"code","fe9fcfe7":"code","6fd9139f":"code","85b6281c":"code","b7a4c206":"code","eedfa3e5":"code","12344e24":"code","51b2ae9f":"code","3e1c7b77":"code","7f2825ba":"code","4fc8c497":"code","ef9e580b":"code","d88a56a0":"code","729a7f91":"code","bcca50ac":"code","edcaa6c0":"code","bfc4914e":"code","347d6077":"code","4811823d":"code","f981cb51":"code","dedb22b9":"code","da24f985":"code","bab5dce4":"code","7728dd1a":"code","cc560377":"markdown","3952d2b1":"markdown","5811d79c":"markdown","bab51751":"markdown","7e2d0c41":"markdown","4acdd41d":"markdown","5f3267e8":"markdown","da14ee54":"markdown","3bfad4b4":"markdown","c0978be2":"markdown","0ef790b8":"markdown","e915ea7b":"markdown","9833ff0a":"markdown","2e5ddf54":"markdown","970500bf":"markdown","0e3e6ed7":"markdown","dd602af0":"markdown","5a9c303f":"markdown","c3840b3a":"markdown","71eabb36":"markdown","a02a8aa0":"markdown","4c8f1d7d":"markdown","2e3709a5":"markdown","1cbce4ec":"markdown","bfe859ae":"markdown","9590f82e":"markdown","8e342949":"markdown","28b1dd26":"markdown","c28a81ef":"markdown","43628a9a":"markdown","e7d969cb":"markdown","7202571d":"markdown","2cd65385":"markdown","12a55181":"markdown","0ee4ed1b":"markdown","ca55d18c":"markdown","16ceaf62":"markdown","54ecf029":"markdown","91ef9f08":"markdown","753437e0":"markdown","376ee82b":"markdown","2ffc4740":"markdown","86405f53":"markdown","f29eb228":"markdown","3c2cb484":"markdown","84ee422c":"markdown","3ef2f20f":"markdown","fcf1fdc9":"markdown","1031d3ef":"markdown","d419d789":"markdown","ea4dd8f9":"markdown","a19c122b":"markdown","869f4df6":"markdown","328b29c2":"markdown","aea3ba96":"markdown","dde93a46":"markdown","fb0adf60":"markdown","13ccdd2f":"markdown","9250da06":"markdown","6cdb4eed":"markdown","19770e3a":"markdown","2e590119":"markdown","6a18e8e9":"markdown","24669ca9":"markdown","e388ce9c":"markdown","aee3a1a1":"markdown","5a750d9a":"markdown"},"source":{"b7fdd49c":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\n\nimport seaborn as sns\n\nfrom scipy import stats\nfrom scipy.stats import norm, skew\nfrom collections import Counter\nfrom scipy.special import boxcox1p\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder\nfrom scipy.stats import boxcox_normmax\nplt.style.use('fivethirtyeight')\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","8a2d4902":"#Load the train dataset into the notebook\ndata=pd.read_csv('..\/input\/titanic\/train.csv')\ndata_test = pd.read_csv('..\/input\/titanic\/test.csv')\n\nfull = data.append(data_test, ignore_index = True)\ntitanic = full[ :891 ]\n\nprint ('Datasets:' , 'full:' , full.shape , 'titanic:' , titanic.shape)","8f3b0648":"# Look at first few rows of the train dataset\ndata.head()","fb151785":"# Look at first few rows of the test dataset\ndata_test.head()","d35614d1":"#Checking the shape of the dataset in the train and test \nprint('Trainin dataset:')\nprint(' We have {} Rows and {} Columns in out train dataset'.format(data.shape[0], data.shape[1]))\nprint(\"=================\")\nprint('Test dataset:')\nprint(' We have {} Rows and {} Columns in out test dataset'.format(data_test.shape[0], data_test.shape[1]))","ef8a9d1b":"# Checking the type of the data in the dataset\nprint('Trainin dataset:')\nprint(data.info())\nprint(\"=================\")\nprint('Test dataset:')\nprint(data_test.info())","b178d3be":"#Specifying the categorical and numerical features of the training dataset\ncategorical_features = data.select_dtypes(include = ['object'])\nnumerical_features = data.select_dtypes(include= ['int64', 'float64'])\nprint('Categorical Features:')\nprint(' ')\nprint(categorical_features.columns)\nprint(' ')\nprint('Numerical Features:')\nprint(' ')\nprint(numerical_features.columns)","bab03b0c":"data.describe()","4ce78658":"all_data_na = (full.isnull().sum() \/ len(full)) * 100\nmissing_data = pd.DataFrame({'Missing Ratio' :all_data_na})\nmissing_data","8aed0e80":"f, ax = plt.subplots(figsize=(6, 6))\n#plt.xticks(rotation='90')\nsns.barplot(x=all_data_na, y=all_data_na.index)\nplt.xlim(-1, 100)\nplt.ylabel('Features', fontsize=15)\nplt.xlabel('Mssing values %', fontsize=15)\nplt.title('Missing values % per feature', fontsize=15)\nplt.tight_layout()","a562e5c0":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndata['Survived'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('Survived Feature')\nax[0].set_ylabel('')\nsns.countplot('Survived',data=data,ax=ax[1])\nax[1].set_title('The Distribution of Survived Feature')\nplt.show()","36f03679":"f,ax=plt.subplots(1,2,figsize=(12,8))\ndata[['Sex','Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex',hue='Survived',data=data,ax=ax[1])\nax[1].set_title('Sex:Survived vs Dead')\nplt.show()","ef5168f1":"categorical_features.columns","82fbb04b":"f,ax=plt.subplots(1,2,figsize=(12,8))\ndata[['Pclass','Survived']].groupby(['Pclass']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Pclass')\nsns.countplot('Pclass',hue='Survived',data=data,ax=ax[1])\nax[1].set_title('Pclass:Survived vs Dead')\nplt.show()","7673fe6c":"f,ax=plt.subplots(1,2,figsize=(12,8))\ndata[['SibSp','Survived']].groupby(['SibSp']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs SibSp')\nsns.countplot('SibSp',hue='Survived',data=data,ax=ax[1])\nax[1].set_title('SibSp:Survived vs Dead')\nplt.show()","22e530b1":"f,ax=plt.subplots(1,2,figsize=(12,8))\ndata[['Parch','Survived']].groupby(['Parch']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Parch')\nsns.countplot('Parch',hue='Survived',data=data,ax=ax[1])\nax[1].set_title('Parch:Survived vs Dead')\nplt.show()","166c8c13":"# Port of embarkation\nf,ax=plt.subplots(1,2,figsize=(12,8))\ndata[['Embarked','Survived']].groupby(['Embarked']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Embarked')\nsns.countplot('Embarked',hue='Survived',data=data,ax=ax[1])\nax[1].set_title('Embarked:Survived vs Dead')\nplt.show()","feae95fc":"f,ax=plt.subplots(1,2,figsize=(20,8))\nsns.distplot(data[data['Survived']==1].Age,ax=ax[0])\nax[0].set_title('Distribution of Age who were died')\nsns.distplot(data[data['Survived']==0].Age,ax=ax[1])\nax[1].set_title('Distribution of Age who were Survived')\nplt.show()","9adba824":"plt.figure(figsize=(20,10))\n\nplt.subplot(1,2,1)\nplt.title('Age Distribution')\n(mu, sigma) = norm.fit(data['Age'].dropna())\nprint( '\\n mu = {:.2f} and sigma = {:.2f}\\n'.format(mu, sigma))\nsns.distplot(data['Age'].dropna(), color = 'r', fit = norm)\n\nplt.subplot(1,2,2)\nplt.title('Age Boxplot')\nsns.boxplot(y=data['Age'].dropna(), color = 'b')\n\nplt.show()","c0d54aab":"f,ax=plt.subplots(1,2,figsize=(20,8))\nsns.distplot(data[data['Survived']==1].Fare,ax=ax[0])\nax[0].set_title('Distribution of Fare who were died')\nsns.distplot(data[data['Survived']==0].Fare,ax=ax[1])\nax[1].set_title('Distribution of Fare who were Survived')\nplt.show()","ad22889e":"plt.figure(figsize=(20,10))\n\nplt.subplot(1,2,1)\nplt.title('Fare Distribution')\n(mu, sigma) = norm.fit(data['Fare'].dropna())\nprint( '\\n mu = {:.2f} and sigma = {:.2f}\\n'.format(mu, sigma))\nsns.distplot(data['Fare'].dropna(), color = 'r', fit = norm)\n\nplt.subplot(1,2,2)\nplt.title('Fare Boxplot')\nsns.boxplot(y=data['Fare'].dropna(), color = 'b')\n\nplt.show()","77703b3d":"f,ax=plt.subplots(2,2,figsize=(20,15))\nsns.countplot('Sex',data=data,ax=ax[0,0])\nax[0,0].set_title('No. Sex')\nsns.countplot('Sex',hue='Pclass',data=data,ax=ax[0,1])\nax[0,1].set_title('Male-Female Split for Pclass')\nsns.countplot('Sex',hue='Embarked',data=data,ax=ax[1,0])\nax[1,0].set_title('Embarked vs Sex')\nsns.countplot('Sex',hue='Survived',data=data,ax=ax[1,1])\nax[1,1].set_title('Sex vs Survived')\nplt.subplots_adjust(wspace=0.2,hspace=0.5)\nplt.show()","1ecc2772":"data.head()","c887ff6b":"g0  = sns.catplot(x=\"Sex\",y=\"Survived\",hue=\"Pclass\",data=data,kind=\"bar\")\ng1 = sns.catplot(x=\"Sex\",y=\"Survived\",hue=\"Embarked\",data=data,kind=\"bar\")\ng2 = sns.catplot(x=\"Sex\",y=\"Survived\",hue=\"SibSp\",data=data,kind=\"bar\")\ng3 = sns.catplot(x=\"Parch\",y=\"Survived\",hue=\"Sex\",data=data,kind=\"bar\")\n#Saveimage\ng0.savefig('g0.png')\nplt.close(g0.fig)\ng1.savefig('g1.png')\nplt.close(g1.fig)\ng2.savefig('g2.png')\nplt.close(g2.fig)\ng3.savefig('g3.png')\nplt.close(g3.fig)\n#Subfigure\nf, axarr = plt.subplots(2, 2, figsize=(15,12))\naxarr[0,0].imshow(mpimg.imread('g0.png'))\naxarr[0,1].imshow(mpimg.imread('g1.png'))\naxarr[1,0].imshow(mpimg.imread('g2.png'))\naxarr[1,1].imshow(mpimg.imread('g3.png'))\n#SetTitle\naxarr[0,0].set_title('Sex & Pclass & Survived')\naxarr[0,1].set_title('Sex & Embarked & Survived')\naxarr[1,0].set_title('Sex & SibSp & Survived')\naxarr[1,1].set_title('Sex & Parch & Survived')","69a518a6":"f,ax=plt.subplots(2,2,figsize=(18,8))\nsns.violinplot(\"Pclass\",\"Age\", hue=\"Survived\", data=data,split=True,ax=ax[0,0])\nax[0,0].set_title('Pclass and Age vs Survived')\nax[0,0].set_yticks(range(0,110,10))\nsns.violinplot(\"Sex\",\"Age\", hue=\"Survived\", data=data,split=True,ax=ax[0,1])\nax[0,1].set_title('Sex and Age vs Survived')\nax[0,1].set_yticks(range(0,110,10))\n\nsns.violinplot(\"SibSp\",\"Age\", hue=\"Survived\", data=data,split=True,ax=ax[1,0])\nax[1,0].set_title('SibSp and Age vs Survived')\nax[1,0].set_yticks(range(0,120,15))\n\nsns.violinplot(\"Parch\",\"Age\", hue=\"Survived\", data=data,split=True,ax=ax[1,1])\nax[1,1].set_title('Sex and Age vs Survived')\nax[1,1].set_yticks(range(0,120,15))\n\n\nplt.show()\n","bfae2667":"f,ax=plt.subplots(2,2,figsize=(18,8))\nsns.violinplot(\"Pclass\",\"Fare\", hue=\"Survived\", data=data,split=True,ax=ax[0,0])\nax[0,0].set_title('Pclass and Fare vs Survived')\nax[0,0].set_yticks(range(0,600,50))\nsns.violinplot(\"Sex\",\"Fare\", hue=\"Survived\", data=data,split=True,ax=ax[0,1])\nax[0,1].set_title('Sex and Fare vs Survived')\nax[0,1].set_yticks(range(0,600,50))\n\nsns.violinplot(\"SibSp\",\"Fare\", hue=\"Survived\", data=data,split=True,ax=ax[1,0])\nax[1,0].set_title('SibSp and Fare vs Survived')\nax[1,0].set_yticks(range(0,600,50))\n\nsns.violinplot(\"Parch\",\"Fare\", hue=\"Survived\", data=data,split=True,ax=ax[1,1])\nax[1,1].set_title('Sex and Fare vs Survived')\nax[1,1].set_yticks(range(0,600,50))\n\n\nplt.show()\n","b11e9463":"data[\"CabinSocialEconomic\"] = (data[\"Cabin\"].notnull().astype('int'))\ndata_test[\"CabinSocialEconomic\"] = (data_test[\"Cabin\"].notnull().astype('int'))\n\n#calculate percentages of CabinSocialEconomic vs. survived\nprint(\"Percentage of CabinSocialEconomic = 1 who survived:\", data[\"Survived\"][data[\"CabinSocialEconomic\"] == 1].value_counts(normalize = True)[1]*100)\n\nprint(\"Percentage of CabinSocialEconomic = 0 who survived:\", data[\"Survived\"][data[\"CabinSocialEconomic\"] == 0].value_counts(normalize = True)[1]*100)\n#draw a bar plot of CabinSocialEconomic vs. survival\nsns.barplot(x=\"CabinSocialEconomic\", y=\"Survived\", data=data)\nplt.show()","9afd5f2e":"pd.crosstab([data.Sex, data.Survived], data['Pclass'],margins=True).style.background_gradient(cmap='summer_r')","0106df04":"print(sns.catplot(x=\"Sex\",y=\"Survived\",hue=\"Pclass\",data=data,kind=\"bar\",aspect=3));\n\nplt.title(\"Number of Passengers per Gender (Male & Female) were in the different Pclasses that Survived or Dead\")","6e0da7ae":"print(sns.catplot(x=\"Sex\",y=\"Survived\",hue=\"SibSp\",data=data,kind=\"bar\",aspect=3));","209ab4ef":"def outlier_detect(feature, data):\n    outlier_index = []\n\n    for each in feature:\n        Q1 = np.percentile(data[each], 25)\n        Q3 = np.percentile(data[each], 75)\n        IQR = Q3 - Q1\n        min_quartile = Q1 - 1.5*IQR\n        max_quartile = Q3 + 1.5*IQR\n        outlier_list = data[(data[each] < min_quartile) | (data[each] > max_quartile)].index\n        outlier_index.extend(outlier_list)\n        \n    outlier_index = Counter(outlier_index)\n    #If there are three or more outlier data features we must delete them. (n)\n    outlier_data = list(i for i, n in outlier_index.items() if n > 3)\n    return outlier_data","b0b90c69":"outlier_data = outlier_detect([\"Age\",\"SibSp\",\"Parch\",\"Fare\"],data)\ndata.loc[outlier_data]","666e93f6":"train_data = data.drop(outlier_data, axis=0).reset_index(drop=True)","02ac9bba":"full_data = pd.concat([data, data_test], axis=0).reset_index(drop=True)","607e34d8":"#data[\"Sex\"] = [0 if i == \"male\" else 1 for i in data[\"Sex\"]]\nfull_data['Sex'].replace(['male','female'],[0,1],inplace=True)\nfull_data['Embarked'].replace(['S','C','Q'],[0,1,2],inplace=True)\n# male: 0, famela: 1\nsns.heatmap(full_data[[\"Age\",\"Sex\",\"SibSp\",\"Parch\",\"Pclass\",\"Fare\",\"Embarked\", \"Survived\"]].corr(), annot = True)\nplt.show()","de5dd57a":"full_data.columns[full_data.isnull().any()]","426bd119":"full_data.isnull().sum()","733b28ea":"full_data[full_data['Fare'].isnull()]","7acb4fbf":"full_data['Fare'] = full_data['Fare'].fillna(np.mean(full_data[((full_data['Pclass']==3) & (full_data['Embarked']==0))]['Fare']))\nfull_data[full_data['Fare'].isnull()]","16ea6dca":"full_data[full_data[\"Embarked\"].isnull()]\n","bb92877f":"full_data[\"Embarked\"] = full_data[\"Embarked\"].fillna(1)\nfull_data[full_data[\"Embarked\"].isnull()]","54cdcf05":"full_data[full_data[\"Age\"].isnull()]","689b6ea9":"data_age_nan_index = full_data[full_data[\"Age\"].isnull()].index\nfor i in data_age_nan_index:\n    mean_age = full_data[\"Age\"][(full_data[\"Pclass\"]==full_data.iloc[i][\"Pclass\"])].median()\n    full_data[\"Age\"].iloc[i] = mean_age","59b8b3a7":"full_data[\"Family\"] = full_data[\"SibSp\"] + full_data[\"Parch\"]\nsns.factorplot(x=\"Family\", y =\"Survived\", data=full_data, kind=\"bar\", size=3)\nplt.show()","ecbfeb1d":"full_data['Alone'] = [1 if i ==0 else 0 for i in full_data['Family']]\nfull_data['Family'].replace([0,1,2,3,4,5,6,7,10], [0,1,1,1,0,2,0,2,2], inplace = True)\nfull_data.head()","e1ddccf3":"full_data['Title']=full_data.Name.str.extract('([A-Za-z]+)\\.')","fe9fcfe7":"sns.countplot(full_data[\"Title\"])\nplt.xticks(rotation = 90)\nplt.show()","6fd9139f":"full_data['Title'].replace(['Mme','Ms','Mlle','Lady','Countess','Dona','Dr','Major','Sir','Capt','Don','Rev','Col', 'Jonkheer'],['Miss','Miss','Miss','Mrs','Mrs','Mrs','Mr','Mr','Mr','Mr','Mr','Other','Other','Other'], inplace=True)","85b6281c":"sns.countplot(full_data[\"Title\"])\nplt.show()","b7a4c206":"sns.factorplot(x=\"Title\", y =\"Survived\", data=full_data, kind=\"bar\", size=3)\nplt.show()","eedfa3e5":"full_data['Age_Limit']=pd.cut(full_data['Age'], 5)\nfull_data.groupby(['Age_Limit'])['Survived'].mean().to_frame().style.background_gradient(cmap='summer_r')","12344e24":"full_data['Age_Limit'] = LabelEncoder().fit_transform(full_data['Age_Limit'])","51b2ae9f":"full_data['Fare_Limit']=pd.qcut(full_data['Fare'],4)\nfull_data.groupby(['Fare_Limit'])['Survived'].mean().to_frame().style.background_gradient(cmap='summer_r')","3e1c7b77":"full_data['Fare_Limit'] = LabelEncoder().fit_transform(full_data['Fare_Limit'])","7f2825ba":"sns.heatmap(full_data[[\"Cabin\",\"Pclass\",\"Embarked\",\"Sex\",\"Age\",\"Age_Limit\",\"Fare_Limit\", \"Title\",\"Family\", \"Survived\"]].corr(), annot = True)\nplt.show()","4fc8c497":"full_data['Age']=full_data['Age'].astype(int)\n\nfull_data.drop(labels=[\"SibSp\",\"Parch\",\"Cabin\",\"Fare\",\"Age\", \"Ticket\", \"Name\", \"PassengerId\"], axis=1, inplace = True)\nfull_data.head()","ef9e580b":"full_data = pd.get_dummies(full_data,columns=[\"Pclass\"])\nfull_data = pd.get_dummies(full_data,columns=[\"Embarked\"])\nfull_data = pd.get_dummies(full_data,columns=[\"Family\"])\nfull_data = pd.get_dummies(full_data,columns=[\"Age_Limit\"])\nfull_data = pd.get_dummies(full_data,columns=[\"Fare_Limit\"])\nfull_data = pd.get_dummies(full_data,columns=[\"Title\"])","d88a56a0":"full_data.head()\n","729a7f91":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import tree\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC","bcca50ac":"if len(full_data) == (len(data) + len(data_test)):\n    print(\"success\")","edcaa6c0":"test = full_data[len(data):]\ntest.drop(labels=\"Survived\", axis=1, inplace=True)","bfc4914e":"train = full_data[:len(data)]\nX_train = train.drop(labels = \"Survived\", axis=1)\ny_train = train[\"Survived\"]\nX_train, X_test, y_train, y_test = train_test_split(X_train, y_train, test_size=0.3, random_state=42)","347d6077":"log_reg = LogisticRegression(random_state=42)\nlog_reg.fit(X_train, y_train)\nprint(\"Accuracy: \", log_reg.score(X_test,y_test))","4811823d":"rf_reg = RandomForestClassifier(random_state=42)\nrf_reg.fit(X_train, y_train)\nprint(\"Accuracy: \", rf_reg.score(X_test,y_test))","f981cb51":"svm_clsf = SVC()\nsvm_clsf.fit(X_train, y_train)\nprint(\"Accuracy: \", svm_clsf.score(X_test,y_test))","dedb22b9":"best_knn = []\nfor n in range(1,12):\n    knn = KNeighborsClassifier(n_neighbors=n)\n    knn.fit(X_train, y_train)\n    best_knn.insert(n, knn.score(X_test,y_test))\nbest_knn","da24f985":"knn_clsf = KNeighborsClassifier(n_neighbors=9)\nknn_clsf.fit(X_train, y_train)\nprint(\"Accuracy: \", knn_clsf.score(X_test,y_test))","bab5dce4":"voting_classfication = VotingClassifier(estimators = [('knn', knn_clsf),('lg', log_reg), ('rfg', rf_reg), ('svc', svm_clsf)], voting=\"hard\", n_jobs=-1)\nvoting_classfication.fit(X_train, y_train)\nprint(\"Accuracy: \", voting_classfication.score(X_test,y_test))","7728dd1a":"test_result = pd.Series(knn_clsf.predict(test), name = \"Survived\").astype(int)\nresults = pd.concat([data_test[\"PassengerId\"], test_result],axis = 1)\nresults.to_csv(\"titanic_submission_survived.csv\", index = False)","cc560377":"# Train Test Split","3952d2b1":"# Observations: \nWe could find out about the missing values in the full dataset\n* Missing values for Survived is for our test data which we are going to predict in the part of model prediction\n* Age has 20 percent missing values in full dataset which we are going to take care of it in the near future\n* Cabin has 77 percent missing values which we are going to take of it in the near future\n* Embarked has 0.15 percent missing values which we are going to take care of it in the near future\n* Fare has 0.07 percent missing values which we are going to take care f it in the near future\n\n","5811d79c":"# Ensemble Modeling\n","bab51751":"# Missing Values & Filling Values","7e2d0c41":"# Observations:\n* We can see that passengers who their associated number of parents and children were 3, had the highest chance of survival.\n* We can see that passengers who were alone in the ship, had the highest number of dying and surviving.\n* We can see that passengers who were a couple, had the second highest number of surviving. \n","4acdd41d":"#  Age Fill Value\n* Pclass and SibSp are associated with Age.","5f3267e8":"* We do not have outliers in the mentioned columns.","da14ee54":"# Fare & Survived\n","3bfad4b4":"# KNN","c0978be2":"# Sex & Pclass & Embarked & Survived\n##### Identify the passengers per Sex and Pclass?!","0ef790b8":"# Observations:\n\n* The data distribution is skewed to the right side. We will find out\n","e915ea7b":"# Observations in one glance: \n* We can see that the number of the Male was more than the number of the female in the ship.\n* We can see that passengers either male and female were significantly coming from Pclass 3\n* We can see that passengers wither male and female were significantly in the S port of embarked\n* We can see that, more female were survived from this disaster.\n","9833ff0a":"# Fill Missing Value\n* Cabin has 1007 missing value Age has 256 missing value  Embarked has 2 missing value Fare has 1 missing value\n\n* Not: Survived has 418 missing value (only test value)","2e5ddf54":"# Fare Limit\n","970500bf":"# Combining Train and Test Data\n* train_data and test_data are combined so that data is obtained.","0e3e6ed7":"#### What is the relationship between the \u201cSibSp\u201d and \u201cSurived\u201d features in this dataset?","dd602af0":"#  Random Forest Regression\n","5a9c303f":"# Observations:\n* The survival rate for woman is about 75%, but in the men is about 18%.\n* We can see that the number of the man in the ship is more than twice the number of the woman. However, The number of women survived is more twice the number of the men.","c3840b3a":"# Sex & Age & SibSp, Pclass, Parch & Survived\n#### Identify the relationship between Sex & Age & SibSp, Pclass, Parch & Survived, and Survived features","71eabb36":"#### 2.2 Loading the dataset into the kernel","a02a8aa0":"# Parch & Survived\n\n#### What is the relationship between the \u201cParch\u201d and \u201cSurived\u201d features in this dataset?","4c8f1d7d":"* Sex, Pclass, Fare and Embarked are associated with Survived.","2e3709a5":"# Missing values\n","1cbce4ec":"#  Name - Title\n","bfe859ae":"#### 2.3 Data Exploration","9590f82e":"# New Feature:\n* Alone and Family\n* SibSp + Parch = family","8e342949":"# 2. Data Underestanding\n\n#### 2.1 Importing the necessary libraries","28b1dd26":"# SibSp & Survived","c28a81ef":"#### How many people were survived from this disaster?","43628a9a":"# Observations:\n* We can see the distribution of the Title in amongst the passengers.\n* Mr Title has the highest proportion of the passengers.","e7d969cb":"# 2.4 Statistical Summaries","7202571d":"# Cabin & Survived\n#### What is the relationship between the Cabin and Survived? \n* There might be a relationship between the passengers who were in a cabin and survival rate. The idea here is that passengers in the cabin had a higher socioeconomic class. Previously, we have found that Pclass and Money is very important to the survived target feature. Probably, this feature because is related to the socioeconomic concerns, had a relationship with the target feature. Let\u2019s find out.\n","2cd65385":"#  Logistic Regression\n","12a55181":"# Modeling","0ee4ed1b":" # Embarked Fill Value\nEmbarked is not associated with any feature.","ca55d18c":"# Exploratory Data Analysis","16ceaf62":"* New Feature\n* Edit Feature\n* Drop Feature\n* Normalization","54ecf029":"#  Fare Fill Value\nPclass is associated with Fare","91ef9f08":"# Data Engineering","753437e0":"### Variable Description\n\n* Survived: Survived (1) or died (0)\n* Pclass: Passenger's class\n* Name: Passenger's name\n* Sex: Passenger's sex\n* Age: Passenger's age\n* SibSp: Number of siblings\/spouses aboard\n* Parch: Number of parents\/children aboard\n* Ticket: Ticket number\n* Fare: Fare\n* Cabin: Cabin\n* Embarked: Port of embarkation","376ee82b":"# Obserations:\n\n* Min age is 0.42 and we will find this out.\n* Pclass values are 1,2,3\n* SibSp (Number of siblings\/spouses aboard) values are 0 to 8\n* Parch (Number of parents\/children aboard) values are 0 to 6","2ffc4740":"### Welcome to my Tutorial Notebook for Titanic - Machine Learning from Disaster\n* The sinking of the Titanic is one of the most infamous shipwrecks in history. On April 15, 1912, during her maiden voyage, the Titanic sank after colliding with an iceberg, killing 1502 out of 2224 passengers and crew\n","86405f53":"# Outlier Detection\n\n   ![download.png](attachment:189ea727-4d9b-4b89-881c-c9408f79fc48.png)\n\n* Q1 = 1.Quartile 25%\n* Q2 = 2.Quartile 50% (median)\n* Q3 = 3.Quartile 75%\n* IQR = Q3 - Q1\n* Outlier data = (Q1 - 1.5 IQR ) U (Q3 + 1.5 IQR)\n","f29eb228":"# Drop Features\n* Ticket, Cabin, Name, PassengerId and Age are deleted according to the result of the correlation matrix.","3c2cb484":"# Embarked & Survived\n\n#### What is the relationship between the \u201cParch\u201d and \u201cSurived\u201d features in this dataset?","84ee422c":"# 1. Business Understanding\n\n## 1.1 Objective\nPredict survival on the Titanic\n\n## 1.2 Description\nThe sinking of the RMS Titanic is one of the most infamous shipwrecks in history.  On April 15, 1912, during her maiden voyage, the Titanic sank after colliding with an iceberg, killing 1502 out of 2224 passengers and crew. This sensational tragedy shocked the international community and led to better safety regulations for ships.\n\nOne of the reasons that the shipwreck led to such loss of life was that there were not enough lifeboats for the passengers and crew. Although there was some element of luck involved in surviving the sinking, some groups of people were more likely to survive than others, such as women, children, and the upper-class.\n\nIn this challenge, we ask you to complete the analysis of what sorts of people were likely to survive. In particular, we ask you to apply the tools of machine learning to predict which passengers survived the tragedy.","3ef2f20f":"# Observation:\n* We have some outliers in our Age feature.","fcf1fdc9":"# Age Limit\n\n","1031d3ef":"# Correlation Between Features","d419d789":"# Observations:\n* We can see both female and male in the first class, had the highest chance of survival.\n* We can see either female and male in the C port Embarked had the highest chance of survival.\n* We can see male with brother or sister had the highest chance of survival. Nevertheless, female with 0 brother or sister overall had the highest chance of survival.\n* We can see that female who were in a family with 0 members, overall had the highest chance of survival. While for the male who were in a family with 2 members, overall had the highest chance of survival.\n","ea4dd8f9":"# Pclass & Survived\n\n#### Is Pclass of the passengers effected their survival chance from this disaster?\n* We will find out by executing the code below\n","a19c122b":"# Pclass & Sex & Survived\n#### How many men and women were in the different classes that survived?\n* We will find it out with crosstab techniques and different visualization techniques","869f4df6":"# Observations:\n* Interesting to note that, we have found passengers who were in a cabin had the higher chances of survival. Again, we have found money is a case for the survival rate.","328b29c2":"## Content\n\n\n 1. Business Understanding \n     * Objective\n     * Description\n 2. Data Understanding\n    * Import Libraries\n    * Load data\n    * Data Exploration\n    * Statistical summaries\n    * Missing Values\n    * Outlier Detection\n    * Visualisations & EDA\n 3. Data Preparation\n    * Missing values imputation\n    * Remove Outliers\n    * Feature Engineering\n 4. Modeling\n     * Build the model\n 5. Evaluation\n     * Model performance\n     * Feature importance\n     * Who gets the best performing model?\n 6. Deployment\n     * Submit result to Kaggle leaderboard     ","aea3ba96":"# Support Vector Machine (SVM)\n","dde93a46":"# Observations:\n* We can see that Mrs passengers has the highest chance of being survived following by Miss Title and Master.","fb0adf60":"# Age & Survived\n#### What is the relationship between the Age and Survived & Died? ","13ccdd2f":"# Observations: \n* We can see that passengers who were on the C Port of embarkation, had the highest chance of survival.\n* We can see that C port had the highest number of passengers who were survived, however, Q port had the lowest number of passengers who were survived.\n* Overall, as we can see the significant variances and impact factor from the Port of embarkation on the survived feature (Target). Therefore, we need this feature in the modeling part.\n","9250da06":"# Observations:\n\n* In plcass 1, the range 30-40 years old, had the highest chance of survival. While in Pclass 1, the 50 years old had the highest chance of dying. Hence, Age feature is a an important feature during building the model.\n* We can see that male with 30 years old had the highest numbers of survivals, while female in around 25 years old had the highest numbers of survival.\n* We can see that the number of the SibSp and Parch along with their Age, had a high impact on the number of the survivals. Hence, these features are important as well.\n","6cdb4eed":"# Multivariate Data Exploration","19770e3a":"# Observations: \n* We can see the distribution of the men and women in the different classes in relation to the survived feature.\n* From the crosstab, we can see the exact number of the passengers per gender per pclasses to better understand their distribution\n* We can see that Female in the first class had higher chances to be survived. Always money is an issue. Besides we can see that men in the first class had higher chances to be survived. Overall, gender and pclass are the important features to build the model because they have high impact and variances.\n### Question: Why men had the lower chances to be survived?!\n","2e590119":"# Sex & Fare & SibSp, Pclass, Parch & Survived\n#### Identify the relationship between Sex & Fare & SibSp, Pclass, Parch & Survived, and Survived features","6a18e8e9":"# Observations:\n* We can see that the passengers who were in the first class had higher chances to survive from this disaster. Well, I guess always money is the issue from the past to the future.\n* From the right figure, we can see that the passengers with the third class were in the ship. Besides, the number of the passengers with the first class were lower than the others, however, they could survive more than the other classes.\n","24669ca9":"# One Hot Encoding","e388ce9c":"# Correlation Matrix","aee3a1a1":"# Observations:\n* We can see that the 38.4 percent of the passengers are survived from this disaster, nevertheless, 61.6 percent of the passengers were not survived.\n* We can see that the distributed data for \u201cSurvived Feature\u201d is not properly distributed and we have an imbalanced dataset. We might apply some balancing techniques to solve the problem of the target variables\n","5a750d9a":"# Observations:\n* We can see that passengers with one brother or sister, had the highest chance of survival. In addition to this, passengers with two brother or sister had the second highest chance of survival.\n* We can see that passengers who were alone in the ship, had the highest number of dying and surviving.\n"}}