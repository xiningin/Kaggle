{"cell_type":{"64d9b173":"code","96672f08":"code","c9f4df99":"code","6889a8d1":"code","52cdf285":"code","6f5f57f0":"code","52bf4147":"code","f605def3":"code","61990713":"code","b1c95f2a":"code","69e135b6":"code","6ac27bc1":"code","a73e830d":"code","0aba49e4":"code","2b11e3a0":"code","440229bf":"code","c3a6a2dd":"code","7b5799b0":"code","2caf7d2d":"code","5c0f9177":"code","c42cdfa0":"code","a89128f7":"code","572f9b09":"code","ca3589f8":"code","ff548350":"code","5b7beaf0":"code","ed9f0acd":"code","b5ef42b1":"code","ae9fe489":"code","fd6a0732":"code","c83c4f27":"code","a30dcd5f":"markdown","bc85b6a6":"markdown","bdaa4207":"markdown","f8a95764":"markdown","57fe5a87":"markdown","3f6edcbb":"markdown","e0558eaa":"markdown","7b4a9c2c":"markdown","3f61f7cd":"markdown","b0196e98":"markdown","0a34ad34":"markdown","1adbfcec":"markdown","65dad490":"markdown","08c06053":"markdown","cf303724":"markdown","1ac9cd0d":"markdown","ae4abff6":"markdown","44c3c9de":"markdown","19fd437b":"markdown","44742a10":"markdown"},"source":{"64d9b173":"import pandas as pd\nimport requests\nfrom bs4 import BeautifulSoup","96672f08":"#to get the webpage\ngames_url = 'https:\/\/store.steampowered.com\/games\/'  ","c9f4df99":"#to download the webpage\nresponse = requests.get(games_url)  ","6889a8d1":"#tocheck the status whether the web page is succesfully loaded or not\nresponse.status_code  ","52cdf285":"page_contents = response.text ","6f5f57f0":"doc = BeautifulSoup(page_contents, 'html.parser')","52bf4147":"type(doc)","f605def3":"selection_class = 'tab_item_name'\ngame_title_tags = doc.find_all('div', {'class' :selection_class })","61990713":"link_selection = 'tab_item'\ngame_title_links = doc.find_all('a', {'class': link_selection})","b1c95f2a":"len(game_title_links)","69e135b6":"game_title_links[0]['href']","6ac27bc1":"game_name = []\nlimit = 4\nfor index, tag in enumerate(game_title_tags):\n    game_name.append(tag.text)\n    if index == limit:\n        break\nprint(game_name)","a73e830d":"game_name","0aba49e4":"game_link = []\nlimit = 4\nfor index, tag in enumerate(game_title_links):\n    game_link.append(tag['href'])\n    if index == limit:\n        break\ngame_link","2b11e3a0":"game_page_url = game_link[0]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npositive_review_tags = doc2.find_all('span', {'class': 'responsive_hidden'})\npositive_review0 = positive_review_tags[0].text.strip()\n\ngame_page_url = game_link[1]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npositive_review_tags = doc2.find_all('span', {'class': 'responsive_hidden'})\npositive_review1 = positive_review_tags[0].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npositive_review_tags = doc2.find_all('span', {'class': 'responsive_hidden'})\npositive_review2 = positive_review_tags[0].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npositive_review_tags = doc2.find_all('span', {'class': 'responsive_hidden'})\npositive_review3 = positive_review_tags[0].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npositive_review_tags = doc2.find_all('span', {'class': 'responsive_hidden'})\npositive_review4 = positive_review_tags[0].text.strip()","440229bf":"game_page_url = game_link[0]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\ndeveloper_tags =doc2.find_all('div', {'class': 'summary column', 'id':'developers_list'})\ndeveloper0 = developer_tags[0].text.strip() \n\ngame_page_url = game_link[1]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\ndeveloper_tags =doc2.find_all('div', {'class': 'summary column', 'id':'developers_list'})\ndeveloper1 = developer_tags[0].text.strip() \n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\ndeveloper_tags =doc2.find_all('div', {'class': 'summary column', 'id':'developers_list'})\ndeveloper2 = developer_tags[0].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\ndeveloper_tags =doc2.find_all('div', {'class': 'summary column', 'id':'developers_list'})\ndeveloper3 = developer_tags[0].text.strip() \n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\ndeveloper_tags =doc2.find_all('div', {'class': 'summary column', 'id':'developers_list'})\ndeveloper4 = developer_tags[0].text.strip() ","c3a6a2dd":"game_page_url = game_link[0]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npublisher_tags =doc2.find_all('div', {'class': 'summary column'})\npublisher0 = publisher_tags[2].text.strip()\n\ngame_page_url = game_link[1]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npublisher_tags =doc2.find_all('div', {'class': 'summary column'})\npublisher1 = publisher_tags[2].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npublisher_tags =doc2.find_all('div', {'class': 'summary column'})\npublisher2 = publisher_tags[2].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npublisher_tags =doc2.find_all('div', {'class': 'summary column'})\npublisher3 = publisher_tags[2].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\npublisher_tags =doc2.find_all('div', {'class': 'summary column'})\npublisher4 = publisher_tags[2].text.strip()","7b5799b0":"game_page_url = game_link[0]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nOS0 = system_requir[0].text.strip()\n\ngame_page_url = game_link[1]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nOS1 = system_requir[0].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nOS2 = system_requir[0].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nOS3 = system_requir[0].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nOS4 = system_requir[0].text.strip()","2caf7d2d":"game_page_url = game_link[0]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nProcessor0 = system_requir[1].text.strip()\n\ngame_page_url = game_link[1]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nProcessor1 = system_requir[1].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nProcessor2 = system_requir[1].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nProcessor3 = system_requir[1].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nProcessor4 = system_requir[1].text.strip()","5c0f9177":"game_page_url = game_link[0]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nMemory0 = system_requir[2].text.strip()\n\ngame_page_url = game_link[1]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nMemory1 = system_requir[2].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nMemory2 = system_requir[2].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nMemory3 = system_requir[2].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nMemory4 = system_requir[2].text.strip()","c42cdfa0":"game_page_url = game_link[0]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nGraphics0 = system_requir[3].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nGraphics1 = system_requir[3].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nGraphics2 = system_requir[3].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nGraphics3 = system_requir[3].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nGraphics4 = system_requir[3].text.strip()","a89128f7":"game_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nDirectX0 = system_requir[4].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nDirectX1 = system_requir[4].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nDirectX2 = system_requir[4].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nDirectX3 = system_requir[4].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nDirectX4 = system_requir[4].text.strip()","572f9b09":"game_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nStorage0 = system_requir[5].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nStorage1 = system_requir[5].text.strip()\n\ngame_page_url = game_link[2]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nStorage2 = system_requir[5].text.strip()\n\ngame_page_url = game_link[3]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nStorage3 = system_requir[5].text.strip()\n\ngame_page_url = game_link[4]\nresponse = requests.get(game_page_url)\ndoc2 = BeautifulSoup(response.text, 'html.parser')\nsystem_requirements = doc2.find_all('ul', {'class': 'bb_ul'})\nsystem_requir = system_requirements[0].find_all('li')\nStorage4 = system_requir[5].text.strip()","ca3589f8":"df = pd.DataFrame()","ff548350":"df['Game Name'] = game_name\n\ndf.at[0,'Positive Rating'] = positive_review0\ndf.at[1,'Positive Rating'] = positive_review1\ndf.at[2,'Positive Rating'] = positive_review2\ndf.at[3,'Positive Rating'] = positive_review3\ndf.at[4,'Positive Rating'] = positive_review4\n\ndf.at[0,'Developer'] = developer0\ndf.at[1,'Developer'] = developer1\ndf.at[2,'Developer'] = developer2\ndf.at[3,'Developer'] = developer3\ndf.at[4,'Developer'] = developer4\n\ndf.at[0,'Publisher'] = publisher0\ndf.at[1,'Publisher'] = publisher1\ndf.at[2,'Publisher'] = publisher2\ndf.at[3,'Publisher'] = publisher3\ndf.at[4,'Publisher'] = publisher4\n\ndf.at[0,'OS'] = OS0\ndf.at[1,'OS'] = OS1\ndf.at[2,'OS'] = OS2\ndf.at[3,'OS'] = OS3\ndf.at[4,'OS'] = OS4\n\ndf.at[0,'Processor'] = Processor0\ndf.at[1,'Processor'] = Processor1\ndf.at[2,'Processor'] = Processor2\ndf.at[3,'Processor'] = Processor3\ndf.at[4,'Processor'] = Processor4\n\ndf.at[0,'Memory'] = Memory0\ndf.at[1,'Memory'] = Memory1\ndf.at[2,'Memory'] = Memory2\ndf.at[3,'Memory'] = Memory3\ndf.at[4,'Memory'] = Memory4\n\ndf.at[0,'Graphics'] = Graphics0\ndf.at[1,'Graphics'] = Graphics1\ndf.at[2,'Graphics'] = Graphics2\ndf.at[3,'Graphics'] = Graphics3\ndf.at[4,'Graphics'] = Graphics4\n\ndf.at[0,'DirectX'] = DirectX0\ndf.at[1,'DirectX'] = DirectX1\ndf.at[2,'DirectX'] = DirectX2\ndf.at[3,'DirectX'] = DirectX3\ndf.at[4,'DirectX'] = DirectX4\n\ndf.at[0,'Storage'] = Storage0\ndf.at[1,'Storage'] = Storage1\ndf.at[2,'Storage'] = Storage2\ndf.at[3,'Storage'] = Storage3\ndf.at[4,'Storage'] = Storage4","5b7beaf0":"df","ed9f0acd":"def getHTML(url):\n    response = requests.get(url)\n    return BeautifulSoup(response.content,'html.parser')\n\nhtml = getHTML('https:\/\/steamcommunity.com\/app\/925950\/reviews\/?browsefilter=toprated')\n\nfor div in html.find_all('div',{'class','apphub_CardTextContent'}):\n    print(div.text.strip())\n    \nreviews = div","b5ef42b1":"def getHTML(url):\n    response = requests.get(url)\n    return BeautifulSoup(response.content,'html.parser')\n\nhtml = getHTML('https:\/\/steamcommunity.com\/app\/1506510\/reviews\/?browsefilter=toprated')\n\nfor div in html.find_all('div',{'class','apphub_CardTextContent'}):\n    print(div.text.strip())\n    \nreviews = div","ae9fe489":"def getHTML(url):\n    response = requests.get(url)\n    return BeautifulSoup(response.content,'html.parser')\n\nhtml = getHTML('https:\/\/steamcommunity.com\/app\/1061100\/reviews\/?browsefilter=toprated')\n\nfor div in html.find_all('div',{'class','apphub_CardTextContent'}):\n    print(div.text.strip())\n    \nreviews = div","fd6a0732":"def getHTML(url):\n    response = requests.get(url)\n    return BeautifulSoup(response.content,'html.parser')\n\nhtml = getHTML('https:\/\/steamcommunity.com\/app\/985650\/reviews\/?browsefilter=toprated')\n\nfor div in html.find_all('div',{'class','apphub_CardTextContent'}):\n    print(div.text.strip())\n    \nreviews = div","c83c4f27":"def getHTML(url):\n    response = requests.get(url)\n    return BeautifulSoup(response.content,'html.parser')\n\nhtml = getHTML('https:\/\/steamcommunity.com\/app\/1141270\/reviews\/?browsefilter=toprated')\n\nfor div in html.find_all('div',{'class','apphub_CardTextContent'}):\n    print(div.text.strip())\n    \nreviews = div","a30dcd5f":"#### 10 reviews for each game","bc85b6a6":"##### Game - Here Comes Niko!","bdaa4207":"#### System Requirements: Memory","f8a95764":"#### Using beautiful soup to parse and extract the information:","57fe5a87":"#### Name of Publisher","3f6edcbb":"##### Game - Olaguna Chronicles","e0558eaa":"### Project Outline:\nWe are going to scrap https:\/\/store.steampowered.com\/games\/\n\n* Need to scrap top 5 New and Trending games\n\n* For every games count number of positive reviews, name of developer and publisher\n\n* System Requirements\n\n* 10 review for each game","7b4a9c2c":"#### System Requirements: Processor","3f61f7cd":"##### Game - Who Stole My Beard","b0196e98":"##### Game - The Ramp","0a34ad34":"#### System Requirements: Graphics","1adbfcec":"#### System Requirements: Storage","65dad490":"#### System Requirements: DirectX","08c06053":"##### Game - Hunters Arena Legends","cf303724":"#### System Requirements: OS","1ac9cd0d":"#### Positive reviews","ae4abff6":"#### Storing result in the form of DataFrame","44c3c9de":"#### Importing relevant libraries","19fd437b":"#### Calculating number of positive reviews, name of developer, publisher and system requirement","44742a10":"#### Name of developer"}}