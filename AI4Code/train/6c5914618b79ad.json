{"cell_type":{"2d3532b8":"code","88738d65":"code","69077e60":"code","15b4e96d":"code","952d05d1":"code","6cfa62d5":"code","a15787e4":"code","bf3914ac":"code","f4a626bb":"code","f5ddb83c":"code","ac54e363":"code","31094034":"code","ba85b898":"code","e63780ec":"code","bacdeed4":"code","8e9acc49":"code","9e6693ef":"code","900ade93":"code","8cfbb739":"code","d9d009c1":"code","262e1e4c":"code","09f35a8a":"code","c6f22257":"code","33e3dfd1":"code","313ded6e":"code","dec6d1e3":"code","33f45214":"code","84f93a48":"code","a4e35914":"code","d30019e9":"code","2baab1fd":"code","63827343":"code","9db1811c":"code","158b6f3e":"code","e129e56f":"code","72e2a53c":"code","eb86d5ec":"code","fa1b71a0":"code","981e11c0":"markdown","5ae6076a":"markdown","921188c4":"markdown","3f14a74d":"markdown","8a1971ba":"markdown","5522e31b":"markdown","94ae3761":"markdown","d9bab37a":"markdown","b878df2f":"markdown","3cda2b71":"markdown","149eec87":"markdown","f0166bed":"markdown","b6b8e512":"markdown","49cfb523":"markdown","71d18ae2":"markdown","1ad7ae23":"markdown","22ce5042":"markdown","985b9dfd":"markdown","f950c16f":"markdown","b588b348":"markdown","546602fc":"markdown","9c21e53f":"markdown","adc4c7bf":"markdown","10534860":"markdown"},"source":{"2d3532b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","88738d65":"#Import the necessary libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport datetime\nfrom dateutil.relativedelta import relativedelta\nfrom datetime import date","69077e60":"PLOT_COLORS = ['#268BD2', \"#0052CC\", \"#FF5722\", \"#b58900\", \"#003f5c\"]\npd.options.display.float_format = '{:.2f}'.format\nsns.set(style = 'ticks')\nplt.rc('figure', figsize = (8,5), dpi = 100)\nplt.rc('axes', labelpad = 20, facecolor = \"#ffffff\", linewidth = 0.4, grid = True, labelsize = 14)\nplt.rc('patch', linewidth = 0)\nplt.rc('xtick.major', width = 0.2)\nplt.rc('ytick.major', width = 0.2)\nplt.rc('grid', color ='#9E9E9E', linewidth = 0.4)\nplt.rc('font', family = 'Arial', weight = '400', size = 10)\nplt.rc('text', color = '#282828')\nplt.rc('savefig', pad_inches = 0.3, dpi = 300)","15b4e96d":"path = '\/kaggle\/input\/coronavirusdataset\/PatientInfo.csv'\ndf = pd.read_csv(path)\ndf.head(3)","952d05d1":"#Drop the columns we won't need\ndf.drop(['patient_id','global_num', 'city', 'birth_year'], axis = 1, inplace = True)","6cfa62d5":"df.isnull().sum()","a15787e4":"#Dropping columns having two many missing values\ndf.drop(['infection_order','infected_by','contact_number','symptom_onset_date'], axis = 1, inplace = True)","bf3914ac":"#locating data\ndf1 = df.loc[(df['state'] == 'deceased') & (df['deceased_date'].isnull())]\ndf1","f4a626bb":"#dropping those rows located in df1\ndf.drop([108,284,680,704,706,2554,3073], inplace = True)","f5ddb83c":"#locating data\ndf2 = df.loc[(df['state'] == 'released') & (df['released_date'].isnull())]\ndf2","ac54e363":"#dropping rows located in df2\ndf.drop(df2.index, inplace = True)","31094034":"df.info()","ba85b898":"df['released_date'].replace(np.nan, 'None', inplace = True)\ndf['deceased_date'].replace(np.nan, 'None', inplace = True)","e63780ec":"df['disease'].unique()","bacdeed4":"df['disease'].replace(np.nan, False, inplace = True)","8e9acc49":"#Dropping missing values\ndf.dropna(inplace = True)\ndf.isnull().sum()","9e6693ef":"#Resetting the index of the dataframe\ndf.reset_index(drop = True, inplace = True)","900ade93":"df.describe(include = 'all')","8cfbb739":"sex_count = df['sex'].value_counts().to_dict()\n\nfig,ax = plt.subplots()\nplt.pie([sex_count['female'], sex_count['male']], labels = ['FEMALE', 'MALE'], counterclock=False, autopct = '%0.f%%',\n      shadow = True, startangle = 90, colors = ['gold', 'green'])\nax.set_title('SEX VALUE COUNT')","d9d009c1":"df['sex'].value_counts(normalize = True) * 100","262e1e4c":"province_count = df['province'].value_counts().to_frame().reset_index().rename(columns = {'index': 'province', 'province': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.barplot(x = 'Value_count', y = 'province', data = province_count, palette = sns.cubehelix_palette(n_colors = 20, reverse = True), ax = ax)\nax.set_title('PROVINCE VALUE COUNT')","09f35a8a":"country_count = df['country'].value_counts().to_frame().reset_index().rename(columns = {'index': 'country', 'country': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.barplot(x = 'Value_count', y = 'country', data = country_count, palette = sns.cubehelix_palette(n_colors = 20, reverse = True), ax = ax)\nax.set_title('COUNTRY VALUE COUNT')","c6f22257":"disease_count = df['disease'].value_counts().to_frame().reset_index().rename(columns = {'index': 'disease', 'disease': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.barplot( x = 'disease', y = 'Value_count', data = disease_count, palette = sns.cubehelix_palette(n_colors = 20, reverse = True), ax = ax)\nax.set_title('UNDERLYING DISEASE VALUE COUNT')","33e3dfd1":"infection_count = df['infection_case'].value_counts().to_frame().reset_index().rename(columns = {'index': 'infection case', 'infection_case': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.barplot( x = 'Value_count', y = 'infection case', data = infection_count, palette = sns.cubehelix_palette(n_colors = 20, reverse = True), ax = ax)\nax.set_title('INFECTION CASE VALUE COUNT')","313ded6e":"infection_rate = df['infection_case'].value_counts(normalize = True)\ninfection_rate","dec6d1e3":"state_count = df['state'].value_counts().to_dict()\n\nfig,ax = plt.subplots()\nplt.pie([state_count['isolated'], state_count['released'], state_count['deceased']], labels = ['ISOLATED', 'RELEASED', 'DECEASED'], counterclock=False, autopct = '%0.f%%',\n      shadow = True, startangle = 90, colors = ['gold', 'green', 'red'])\nax.set_title('STATE VALUE COUNT')","33f45214":"age_count = df['age'].value_counts().to_frame().reset_index().rename(columns = {'index': 'age', 'age': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.barplot( x = 'age', y = 'Value_count', data = age_count, palette = sns.cubehelix_palette(n_colors = 20, reverse = True), ax = ax)\nax.set_title('AGE VALUE COUNT')\n","84f93a48":"#locating data\nreleased_patients = df.loc[df['state'] == 'released']\n\n#converting columns to datetime\nreleased_patients['released_date'] = pd.to_datetime(released_patients['released_date'])\nreleased_patients['confirmed_date'] = pd.to_datetime(released_patients['confirmed_date'])\n\n#Getting the difference between days\nreleased_patients['day_diff'] = released_patients['released_date'] - released_patients['confirmed_date']\nreleased_patients['day_diff'] = released_patients['day_diff']\/np.timedelta64(1,'D')\n\nreleased_patients","a4e35914":"released_patients['day_diff'].sum()\/ released_patients['day_diff'].count()","d30019e9":"released_sex_grouped = released_patients[['sex', 'day_diff']]\n\nsex_grouped = released_sex_grouped.groupby('sex', as_index = False).mean()\nsex_grouped","2baab1fd":"fig, ax = plt.subplots()\nsns.barplot( x = 'sex', y = 'day_diff', data = sex_grouped, ax = ax)\nax.set_title('DAY DIFFERENCE BASED ON SEX FOR THE RELEASED PATIENTS')","63827343":"age_count = released_patients['age'].value_counts().to_frame().reset_index().rename(columns = {'index': 'age', 'age': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.barplot( x = 'age', y = 'Value_count', data = age_count, palette = sns.cubehelix_palette(n_colors = 20, reverse = True), ax = ax)\nax.set_title('AGE VALUE COUNT FOR RELEASED PATIENTS')","9db1811c":"#locating data\ndeceased_patients = df.loc[df['state'] == 'deceased']\n\ndeceased_patients['deceased_date'] = pd.to_datetime(deceased_patients['deceased_date'])\ndeceased_patients['confirmed_date'] = pd.to_datetime(deceased_patients['confirmed_date'])\n\ndeceased_patients['day_diff'] = deceased_patients['deceased_date'] - deceased_patients['confirmed_date']\ndeceased_patients['day_diff'] = deceased_patients['day_diff']\/np.timedelta64(1,'D')\n\ndeceased_patients","158b6f3e":"deceased_patients['day_diff'].sum()\/ deceased_patients['day_diff'].count()","e129e56f":"deceased_sex_grouped = deceased_patients[['sex', 'day_diff']]\n\nsex_grouped = deceased_sex_grouped.groupby('sex', as_index = False).mean()\nsex_grouped","72e2a53c":"fig, ax = plt.subplots()\nsns.barplot( x = 'sex', y = 'day_diff', data = sex_grouped, ax = ax)\nax.set_title('DAY DIFFERENCE BASED ON SEX FOR THE DECEASED')","eb86d5ec":"age_count = deceased_patients['age'].value_counts().to_frame().reset_index().rename(columns = {'index': 'age', 'age': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.barplot( x = 'age', y = 'Value_count', data = age_count, palette = sns.cubehelix_palette(n_colors = 20, reverse = True), ax = ax)\nax.set_title('AGE VALUE COUNT FOR DECEASED')","fa1b71a0":"df['month'] = pd.DatetimeIndex(df['confirmed_date']).month\n\ndf['month'].replace([1,2,3,4], ['January','February', 'March', 'April'] , inplace = True)\ndf1 = df['month'].value_counts().to_frame().reset_index().rename(columns = {'index': 'month', 'month': 'Value_count'})\n\nfig, ax = plt.subplots()\nsns.lineplot( x = 'month', y = 'Value_count', data = df1)","981e11c0":"## Q1","5ae6076a":"## Q4","921188c4":"#### **majority of the deceased were in their 70s and 80s also notice that  nobody below 30s has died**","3f14a74d":"## *ANY CORRECTION WILL BE HIGHLY WELCOMED.*","8a1971ba":"#### **Majority of the patients infected are in their 20s**","5522e31b":"####  **Of all the infection_case,  42% was cause by contact with patient** ","94ae3761":"#### **78% of the patients are in isolation state,22% have been released and 1% deceased **","d9bab37a":"#### **Majority of the patients have NO underlying disease**","b878df2f":"## OTHERS","3cda2b71":"####  **On average the released day difference for both male and female are almost the same**","149eec87":"# Q7","f0166bed":"#### On average day difference for the released patients is approximately 19 days","b6b8e512":"#### **An increase as the year progresses**","49cfb523":"### **Analysis Questions**\n#### **-- percentage of  male and female infected**\n#### **-- province that are most infected by the virus**\n#### **-- Country of the patients**\n#### **-- Rate of people having an underlying disease**\n#### **-- How the patient was infected**\n#### **--  Rate of isolated,released,deceased**\n#### **-- avg number of days from confirm to released**\n#### **-- avg  number of days from confirm to deaceased**\n#### **--  Age of the patients**\n#### **-- Rate of increase**","71d18ae2":"##### From the dataset description disease is set to contain either TRUE or FALSE but looks nan is replacing False\n##### let's correct that","1ad7ae23":"#### **Percentage of female patients is approximately 56% while that of male patients is approximately 44%**","22ce5042":"## **CONCLUSION**\n#### **-- Majority of the patients infection case was by contact with infected patient**\n#### **-- Released patients on average have day difference of 19 days approximately**\n#### **--Deceased patients on average have a day difference 0f 9 days approximately**\n#### **--According to the dataset nobody below their 30s are in a deceased state**\n#### **--Their has been a steady increase in infected patients**\n#### **--Majority of the patients are in their 20s**\n#### **--Of the people released most are in their 20s followed closely by 40s, 50s,30s**\n#### **--of the people deceased most were in their  70s and 80s**\n#### **--Gender seems to have NO effect on patients infected, day difference for released patients**\n#### **--Gender seems to have effect on day difference for the deceased patients this can be due to the small data available for deceased patients**\n#### **-- Of the patients infected 30% released, 69% isolated, 1% deceased**","985b9dfd":"#### **On average the day difference for the female deceased patients is higher than that of male**","f950c16f":"#### **On average the day difference for the deceased is approximately 9 days**","b588b348":"## Q2","546602fc":"## Q3","9c21e53f":"## Q5","adc4c7bf":"#### **Majority of the patients are from korean. No suprise there**","10534860":"# Q6"}}