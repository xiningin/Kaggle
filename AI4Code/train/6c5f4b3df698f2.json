{"cell_type":{"44a358da":"code","31370e0c":"code","e831ac5f":"code","f20abce4":"code","541bcf2e":"code","b850f853":"code","6cf4aeda":"code","848cf80d":"code","eb49b21f":"code","77659b1a":"code","c700210d":"code","a046ad5a":"code","f181b4f7":"code","ff43ba4e":"code","db781d32":"code","445f31a9":"code","05455ba4":"code","d134a160":"code","b8ef397e":"code","821b8a25":"code","cedd0938":"code","425782dd":"code","10d6f99c":"code","7622179a":"code","03a9f1da":"code","1d65e957":"code","9d37a1ce":"code","ab75f798":"code","11edb4ac":"code","518ff058":"code","c111c9ff":"code","a733e8a5":"code","771121dc":"code","b51bd9cb":"markdown","cc5035d5":"markdown","f4fe236f":"markdown","c31b4a49":"markdown","5fbc2546":"markdown","41eb1c45":"markdown"},"source":{"44a358da":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","31370e0c":"df = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/train.csv')","e831ac5f":"df_test = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/test.csv')","f20abce4":"df.claim.value_counts()","541bcf2e":"df.shape","b850f853":"df.describe()","6cf4aeda":"df.isna().sum()","848cf80d":"df1 = df.copy()","eb49b21f":"df1=df1.fillna(df1.mean())","77659b1a":"X = df1.iloc[:,1:-1]\ny=df1.iloc[:,-1]","c700210d":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import f_classif\nfrom sklearn.feature_selection import mutual_info_classif","a046ad5a":"def select_features(X, y):\n\tfs = SelectKBest(score_func=f_classif, k='all')\n\tfs.fit(X, y)\n\tX_fs = fs.transform(X)\n\treturn X_fs, fs","f181b4f7":"X_fs,fs = select_features(X, y)\nfor i in range(len(fs.scores_)):\n\tprint('Feature %d: %f' % (i, fs.scores_[i]))","ff43ba4e":"features=[]\nfor i in range(len(fs.scores_)):\n    if fs.scores_[i] >= 1:\n        features.append(i)","db781d32":"len(features)","445f31a9":"X=X.iloc[:,features]","05455ba4":"from sklearn.preprocessing import StandardScaler\nscalar = StandardScaler()\nX = scalar.fit_transform(X.values)","d134a160":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(X, y.values, test_size=0.2,random_state=42,shuffle=True)","b8ef397e":"from xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import GridSearchCV, KFold\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score","821b8a25":"model = XGBClassifier(n_estimators=1200,n_jobs=-1,max_depth=2,importance_type=\"total_gain\",max_delta_step=2)\nmodel.fit(X_train ,y_train)","cedd0938":"preds = model.predict(X_test)","425782dd":"print(metrics.classification_report(y_test, preds))\nprint(metrics.confusion_matrix(y_test, preds))\nprint(accuracy_score(y_test,preds))\nprint(metrics.roc_auc_score(y_test,preds))","10d6f99c":"df_test.info()","7622179a":"df_test.isna().sum()","03a9f1da":"df_test1 = df_test.copy()\ndf_test1 = df_test1.fillna(df_test1.mean())","1d65e957":"t = df_test1.iloc[:,1:]","9d37a1ce":"test_X = t.iloc[:,features]","ab75f798":"test_X=scalar.fit_transform(test_X)","11edb4ac":"y_pred = model.predict_proba(test_X)[:,1]","518ff058":"y_pred","c111c9ff":"subm = pd.DataFrame(df_test1['id'])\nsubm['claim'] = y_pred","a733e8a5":"subm","771121dc":"subm.to_csv('submit.csv',index=False)","b51bd9cb":"# **Model Build**","cc5035d5":"## **Data Split**","f4fe236f":"# **Feature Selection**","c31b4a49":"## **Feature scaling**","5fbc2546":"# **Test**","41eb1c45":"# **EDA**"}}