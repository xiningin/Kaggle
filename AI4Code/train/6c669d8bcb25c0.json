{"cell_type":{"df2050e2":"code","b0846a93":"code","1a0080ca":"code","558498ec":"code","b2ab651a":"code","8a0ca17a":"code","d72af99a":"code","a786eec9":"code","bd10c9d3":"code","97a4d491":"code","456024b6":"code","548619d9":"code","7e497516":"code","e05707c7":"code","645f2afa":"code","2c367add":"code","fd34bcf6":"code","698b2aa7":"code","56c3b4da":"code","8bbfe9e4":"code","a82f48a5":"code","4aedddd6":"code","61428329":"code","57cacb61":"code","99e40f43":"code","b9142824":"code","047526f5":"code","5c47b45e":"code","531b46b1":"code","67553ef3":"code","d732c74c":"code","eb2711fd":"code","e5ab61dc":"code","2188c26b":"code","7adaeda5":"code","65504a65":"code","cffc55dd":"code","1d3f9bbf":"code","9227364d":"code","e1e74e83":"code","eb0360cf":"code","c4dca4f9":"code","ea6751a2":"code","e5dc12d8":"code","1d8b2973":"code","07d7581d":"code","9a0f4313":"code","0d0dfc23":"code","1615b64b":"code","af53611e":"code","fc16cf3f":"code","d5b021f9":"code","4c3c4b99":"code","c8b35331":"code","25dfce2c":"code","6244ceea":"code","0b79aa65":"code","531e532e":"code","6888192b":"code","962211b6":"code","9c66b737":"code","36f28ede":"code","295629e8":"code","2d1faa8f":"code","7a2420d6":"code","b61ad9e9":"code","0a0b41d0":"code","83d8690a":"code","a132bb60":"code","56242232":"code","4dc3e8bd":"code","9160192f":"code","149e842a":"code","f6fcf0b4":"code","eb1cffe9":"code","9ec10afc":"code","e1990bb4":"code","dff00b58":"code","757bd30c":"code","b1ec0a0f":"code","14f4ebe2":"code","670fcaf6":"code","d417a348":"code","75b70397":"code","928ba0ba":"code","04f89b8d":"code","101b0493":"code","7eef5ae0":"code","997cdee4":"code","32fef844":"code","fed7e308":"code","37b48175":"markdown","28b41abd":"markdown","8e64ab0d":"markdown","b30e614f":"markdown","6ab9e0cd":"markdown","11543ac5":"markdown","30622fd4":"markdown","35d37d26":"markdown","fed6f7b6":"markdown","cff09e46":"markdown","c730c863":"markdown","a59b6f75":"markdown","cbcaeaaa":"markdown","f2d9fc7a":"markdown","7b3d6171":"markdown","10db93d6":"markdown","d247162c":"markdown","771bc5a5":"markdown","f75412ed":"markdown","8c67204e":"markdown","bfca9d8f":"markdown","06413b8e":"markdown","b719b281":"markdown","5d0257dc":"markdown","cdb39fad":"markdown","b25d5538":"markdown","2b80f2d9":"markdown","e975259f":"markdown","00c15111":"markdown","cc8501d3":"markdown","0f3b51be":"markdown","58987594":"markdown","a0bddb95":"markdown","9c0f6c42":"markdown","42a78771":"markdown","281f007b":"markdown","6d3f9671":"markdown","f88f8845":"markdown","f9b0fe19":"markdown","ec8e979e":"markdown","defe0438":"markdown","a5053439":"markdown","54b870c8":"markdown","16cca9bb":"markdown","62ed5833":"markdown","9de5783c":"markdown","60213a3a":"markdown","e47373e7":"markdown","55c31bd1":"markdown","d0f5f803":"markdown","88500d3d":"markdown","9799df18":"markdown","89d8d03a":"markdown","0bc988b9":"markdown","7acaacd9":"markdown","0ef28656":"markdown","5626ac51":"markdown","9cf25db4":"markdown","0b4befc1":"markdown","767217c0":"markdown","5e19e114":"markdown"},"source":{"df2050e2":"# for python 2.x and 3.x support\nfrom __future__ import division, print_function, unicode_literals\n\n# computation libraries used\nimport pandas as pd\nimport numpy as np\n\n#### graphing libraries ####\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)\n############################\n\n\n# sklearn for ML\nfrom sklearn.model_selection import GridSearchCV, StratifiedShuffleSplit, cross_val_score\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.linear_model import LogisticRegression, SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix, recall_score, precision_score, f1_score\n\n# mjd to norml time conversion\nfrom datetime import datetime, timedelta","b0846a93":"sloan = pd.read_csv('..\/input\/Skyserver_SQL2_27_2018 6_51_39 PM.csv')","1a0080ca":"sloan.head()","558498ec":"sloan.info()","b2ab651a":"sloan.describe()","8a0ca17a":"sloan.drop(columns=['objid', 'run', 'rerun', 'camcol', 'field', 'specobjid', 'fiberid', 'plate'], inplace=True)","d72af99a":"sloan.head()","a786eec9":"f, axes = plt.subplots(2, 1, figsize=(15, 10))\nsns.boxplot(y='class', x='ra', data=sloan, ax=axes[0])\nsns.boxplot(y='class', x='dec', data=sloan, ax=axes[1])","bd10c9d3":"f, ax = plt.subplots(figsize=(15, 10))\nsns.catplot(y='redshift', x='class', data=sloan, ax=ax)","97a4d491":"f, axes = plt.subplots(3, 1, figsize=(16, 10), sharex=True)\nc = ['STAR', 'GALAXY', 'QSO']\n\nfor ax_id in range(3):\n    sns.distplot(sloan.loc[sloan['class']==c[ax_id],'u'], hist=False, color='purple', ax=axes[ax_id], label='u')\n    sns.distplot(sloan.loc[sloan['class']==c[ax_id],'g'], hist=False, color='blue', ax=axes[ax_id], label='g')\n    sns.distplot(sloan.loc[sloan['class']==c[ax_id],'r'], hist=False, color='green', ax=axes[ax_id], label='r')\n    sns.distplot(sloan.loc[sloan['class']==c[ax_id],'i'], hist=False, color='red', ax=axes[ax_id], label='i')\n    sns.distplot(sloan.loc[sloan['class']==c[ax_id],'z'], hist=False, color='grey', ax=axes[ax_id], label='z')\n    axes[ax_id].set(xlabel=c[ax_id], ylabel='Intensity')","456024b6":"f, axes = plt.subplots(5, 1, figsize=(16, 20))\nc = ['u','g', 'r', 'i', 'z']\n\nfor idx, cls in enumerate(c):\n    sns.boxplot(y='class', x=cls, data=sloan, ax=axes[idx])","548619d9":"# MJD starts at 17th November 1858, midnight\n_MJD_BASE_TIME_ = datetime.strptime('17\/11\/1858 00:00', '%d\/%m\/%Y %H:%M')\n\ndef convertMJD(x=0):\n    return _MJD_BASE_TIME_ + timedelta(days=x)","7e497516":"timeline_stars  = sloan.loc[sloan['class']=='STAR'  , 'mjd']\ntimeline_galaxy = sloan.loc[sloan['class']=='GALAXY', 'mjd']\ntimeline_qso    = sloan.loc[sloan['class']=='QSO'   , 'mjd']","e05707c7":"f, ax = plt.subplots(figsize=(16, 10))\nsns.distplot(timeline_stars , hist=False, label='STAR'  , ax=ax)\nsns.distplot(timeline_galaxy, hist=False, label='GALAXY', ax=ax)\nsns.distplot(timeline_qso   , hist=False, label='QSO'   , ax=ax)","645f2afa":"sns.pairplot(sloan, hue='class')","2c367add":"sns.pairplot(sloan[['u','g','r','i','z','class']], hue='class')","fd34bcf6":"f, axes = plt.subplots(1, 3, figsize=(16, 5))\n\nstar_corr = sloan.loc[sloan['class']=='STAR', ['u','g','r','i','z']].corr()\ngalaxy_corr = sloan.loc[sloan['class']=='GALAXY', ['u','g','r','i','z']].corr()\nqso_corr = sloan.loc[sloan['class']=='QSO', ['u','g','r','i','z']].corr()\n\nmsk = np.zeros_like(star_corr)\nmsk[np.triu_indices_from(msk)] = True\n\nsns.heatmap(star_corr, cmap='RdBu_r', mask=msk, ax=axes[0])\nsns.heatmap(galaxy_corr, cmap='RdBu_r', mask=msk, ax=axes[1])\nsns.heatmap(qso_corr, cmap='RdBu_r', mask=msk, ax=axes[2])","698b2aa7":"f, ax = plt.subplots(figsize=(16, 10))\nsns.scatterplot(x='ra', y='dec', hue='class', data=sloan)","56c3b4da":"lbl = LabelEncoder()\ncls_enc = lbl.fit_transform(sloan['class'])\n\ng = go.Scatter3d(\n    x=sloan['ra'], y=sloan['dec'], z=sloan['redshift'],\n    mode='markers',\n    marker=dict(\n        color=cls_enc,\n        opacity=0.5,\n    )\n)\n\ng_data = [g]\n\nlayout = go.Layout(margin=dict(\n    l=0, r=0, b=0, t=0\n))\n\nfigure = go.Figure(data=g_data, layout=layout)\n\niplot(figure, filename='3d-repr-redshift')","8bbfe9e4":"sloan.drop(columns=['mjd'], inplace=True)","a82f48a5":"lbl_enc = LabelEncoder()\nsloan['class'] = lbl_enc.fit_transform(sloan['class'])","4aedddd6":"sloan.head()","61428329":"X = sloan.drop(columns=['class'])\ny = sloan['class']","57cacb61":"strat_split = StratifiedShuffleSplit(n_splits=1, train_size=0.9, random_state=42)\n\nfor train_index, test_index in strat_split.split(X, y):\n    X_train, X_test = X.iloc[train_index], X.iloc[test_index]\n    y_train, y_test = y.iloc[train_index], y.iloc[test_index]","99e40f43":"X_train.shape","b9142824":"y_train.shape","047526f5":"X_test.shape","5c47b45e":"y_test.shape","531b46b1":"strat_split_val = StratifiedShuffleSplit(n_splits=1, train_size=0.75, random_state=42)\n\nfor train_index, val_index in strat_split.split(X_train, y_train):\n    X_train, X_val = X_train.iloc[train_index], X_train.iloc[val_index]\n    y_train, y_val = y_train.iloc[train_index], y_train.iloc[val_index]","67553ef3":"X_train.shape","d732c74c":"y_train.shape","eb2711fd":"X_val.shape","e5ab61dc":"y_val.shape","2188c26b":"scaler = StandardScaler()\n\nX_train_scaled = pd.DataFrame(scaler.fit_transform(X_train), columns=X_train.columns)\nX_val_scaled = pd.DataFrame(scaler.transform(X_val), columns=X_val.columns)","7adaeda5":"X_train_scaled.head()","65504a65":"y_val.value_counts()","cffc55dd":"lbl_enc.classes_","1d3f9bbf":"knn = KNeighborsClassifier(n_jobs=-1)","9227364d":"knn.fit(X_train_scaled, y_train)","e1e74e83":"accuracy_score(y_val, knn.predict(X_val_scaled))","eb0360cf":"confusion_matrix(y_val, knn.predict(X_val_scaled))","c4dca4f9":"log_reg = LogisticRegression(n_jobs=-1)","ea6751a2":"log_reg.fit(X_train, y_train)","e5dc12d8":"accuracy_score(y_val, log_reg.predict(X_val))","1d8b2973":"confusion_matrix(y_val, log_reg.predict(X_val))","07d7581d":"sgd_cls = SGDClassifier(n_jobs=-1)","9a0f4313":"sgd_cls.fit(X_train_scaled, y_train)","0d0dfc23":"accuracy_score(y_val, sgd_cls.predict(X_val_scaled))","1615b64b":"confusion_matrix(y_val, sgd_cls.predict(X_val_scaled))","af53611e":"svc_cls = SVC()","fc16cf3f":"svc_cls.fit(X_train_scaled, y_train)","d5b021f9":"accuracy_score(y_val, svc_cls.predict(X_val_scaled))","4c3c4b99":"confusion_matrix(y_val, svc_cls.predict(X_val_scaled))","c8b35331":"tree = DecisionTreeClassifier()","25dfce2c":"tree.fit(X_train, y_train)","6244ceea":"accuracy_score(y_val, tree.predict(X_val))","0b79aa65":"confusion_matrix(y_val, tree.predict(X_val))","531e532e":"rf = RandomForestClassifier(n_jobs=-1, oob_score=True)","6888192b":"rf.fit(X_train, y_train)","962211b6":"rf.oob_score_","9c66b737":"accuracy_score(y_val, rf.predict(X_val))","36f28ede":"confusion_matrix(y_val, rf.predict(X_val))","295629e8":"xgb_cls = GradientBoostingClassifier()","2d1faa8f":"xgb_cls.fit(X_train, y_train)","7a2420d6":"accuracy_score(y_val, xgb_cls.predict(X_val))","b61ad9e9":"confusion_matrix(y_val, xgb_cls.predict(X_val))","0a0b41d0":"etree = ExtraTreesClassifier(oob_score=True, n_jobs=-1, bootstrap=True)","83d8690a":"etree.fit(X_train, y_train)","a132bb60":"accuracy_score(y_val, etree.predict(X_val))","56242232":"etree.oob_score_","4dc3e8bd":"confusion_matrix(y_val, etree.predict(X_val))","9160192f":"def display_scores(scores):\n    print(scores)\n    print('Mean: {}'.format(scores.mean()))\n    print('Std: {}'.format(scores.std()))","149e842a":"etree_scores = cross_val_score(etree, X_train, y_train, cv=10, n_jobs=-1)","f6fcf0b4":"display_scores(etree_scores)","eb1cffe9":"xgb_cls_scores = cross_val_score(xgb_cls, X_train, y_train, cv=10, n_jobs=-1)","9ec10afc":"display_scores(xgb_cls_scores)","e1990bb4":"tree_scores = cross_val_score(tree, X_train, y_train, cv=10, n_jobs=-1)","dff00b58":"display_scores(tree_scores)","757bd30c":"rf_scores = cross_val_score(rf, X_train, y_train, cv=10, n_jobs=-1)","b1ec0a0f":"display_scores(rf_scores)","14f4ebe2":"param_grid_rf = {\n    'criterion': ['gini', 'entropy'],\n    'max_features': [0.5, 0.75, 0.9, 'auto'],\n    'min_samples_leaf': [1, 2, 3, 4],\n    'n_estimators': [5, 10, 20, 50, 75, 100]\n}","670fcaf6":"cv_rf = GridSearchCV(rf, param_grid_rf, n_jobs=-1, refit=True, verbose=1)","d417a348":"cv_rf.fit(X_train, y_train)","75b70397":"cv_rf.best_params_","928ba0ba":"cv_rf.best_score_","04f89b8d":"final_model = cv_rf.best_estimator_","101b0493":"accuracy_score(y_test, final_model.predict(X_test))","7eef5ae0":"confusion_matrix(y_test, final_model.predict(X_test))","997cdee4":"precision_score(y_test, final_model.predict(X_test), average='weighted')","32fef844":"recall_score(y_test, final_model.predict(X_test), average='weighted')","fed7e308":"f1_score(y_test, final_model.predict(X_test), average='weighted')","37b48175":"<pre>\nGreen    filter o\/p goes in to Blue  part of the image  \nRed      filter o\/p goes in to Green part of the image  \nInfrared filter o\/p goes in to Red   part of the image  \n<\/pre>","28b41abd":"Predict (Closed Form)\n\n$$\\hat p = \\sigma(\\theta^T \\cdot X)$$\n$$\\hat y = \n\\begin{cases}\n0, & \\text{if $\\hat p \\le$ 0.5} \\\\\n1, & \\text{if $\\hat p \\geq$ 0.5}\n\\end{cases}\n$$\n\nwhere\n\n$$\\sigma(x) = \\frac{1}{1 + e^{-x}}$$\n\nCost\n\n$$\nc(\\theta) =\n\\begin{cases}\n-\\log(\\hat y),  & \\text{if y = 1} \\\\\n-\\log(1 - \\hat y), & \\text{if y = 0}\n\\end{cases}\n$$","8e64ab0d":"*ugriz* correlation looks in accordance with expected physical behaviour - Hotter objects emit more of every wavelength. Can we represent the relationship between these variables in a more efficient manner?","b30e614f":"### SVC","6ab9e0cd":"# Pipeline","11543ac5":"### SGD Classifier","30622fd4":"## DecisionTreeClassifier CV","35d37d26":"Looking at test set","fed6f7b6":"## Explore data","cff09e46":"## Understanding the significance of features present","c730c863":"Cost\n\nEuclidean Distance","a59b6f75":"# Q.1. What does the data look like?","cbcaeaaa":"Find Out: What is the reason for the sudden spike in Galaxy discovery around MJD 52000 (or 1st April 2001) ?","f2d9fc7a":"Can we visualise the discovery timeline for various objects?","7b3d6171":"Correlation\n* What is Pearson correlation?  ","10db93d6":"# Q2. What insights can the data provide? (EDA)","d247162c":"## Fine-tune the system","771bc5a5":"## Prepare data","f75412ed":"Minimise\n\n$$\\frac{1}{2} w^T \\cdot w$$\n\ngiven\n\n$$t(w^T\\cdot x + b) \\geq 1$$","8c67204e":"## Short-list promising models","bfca9d8f":"## Data Preparation","06413b8e":"#### GradientBoosting Classifier","b719b281":"## Setup data sources","5d0257dc":"## Datatypes present","cdb39fad":"### Decision Tree Classifier","b25d5538":"#### Random Forest Classifier","2b80f2d9":"### Logistic Regression","e975259f":"# Q5. Is it possible to fine-tune our model to the problem? (Hyper-parameter tuning)","00c15111":"Find Out: Why are the stellar objects positioned this way? (HINT Look for Baryon Acoustic Oscillation)","cc8501d3":"## The 5-number summary","0f3b51be":"http:\/\/skyserver.sdss.org\/dr14\/en\/tools\/search\/sql.aspx\n\nSELECT TOP 20 s.specObjID, s.ra, s.dec, s.z, s.class FROM SpecObjAll as s WHERE s.dec >= 0 AND s.dec <= 1.1","58987594":"## GradientBoostingClassifier CV","a0bddb95":"Split on highest information gain","9c0f6c42":"## Univariate Analysis","42a78771":"#### Extremely Randomised Trees","281f007b":"# Q4. Can we verify the model performances? (Cross Validation)","6d3f9671":"Random Forest and Gradient Boosting perform equally well. We will select Random Forest for parameter tuning","f88f8845":"Redshift gives us the distance between us and the object. We can incorporate it to get a more representative view","f9b0fe19":"### K Nearest Neighbors","ec8e979e":"This also tells us that all wavelength radiations are strongly correlated... except *u*. Why?\n\nFind Out: What can be possible reasons for low *u* correlation?","defe0438":"## ExtraTreesClassifier CV","a5053439":"Is the redshift representative of any properties of the objects?","54b870c8":"How are the objects positioned in the sky?","16cca9bb":"# Q6. Can we predict new instances? (Deployment and Prediction)","62ed5833":"## Multivariate Analysis","9de5783c":"### Ensembles","60213a3a":"## Communicate your results","e47373e7":" 1. ~~objid~~  \n Unique ID given to an object by the data collection process\n \n 2. **ra**  \n Right ascention. Analogous to longitude on Earth\n \n 3. **dec**  \n Distance of object from horizon. usually measured in degrees. Analogous to latitude on Earth\n \n 4. **u, g, r, i, z**  \n Wavelength filters in the telescope Ultraviolet, Green, Red, Near-infrared, Infrared\n \n 5. ~~run~~  \n ID of observed strip in the run\n \n 6. ~~rerun~~  \n Reprocessing ID of the run strip\n \n 7. ~~camcol~~  \n ID given to a part of a run\n \n 8. ~~field~~  \n Photo member of a camcol. It is 2048x1498 pixels wide\n \n 9. ~~specobjid~~  \n UID for an object generated using few other fields\n \n 10. **redshift**  \n Stretching of light waves due to presence of relative velocity between two bodies\n \n 11. ~~plate~~  \n Telescope contains 6 plates. This is a unique identifier\n \n 12. **mjd**  \n Modified Julian Date  \n > Julian Date begins from January 1 4713 BC  \n > MJD adds 24,00,000.5 days to it and begins from November 17 1858\n \n 13. ~~fiberid~~  \n Optical fiber identifier, which brings light towards the slit","55c31bd1":"No null values present in any column","d0f5f803":"## Deploy","88500d3d":"Selected models\n1. ExtraTreesClassifier\n2. GradientBoostingClassifier\n3. DecisonTreeClassifier\n4. RandomForestClassifier","9799df18":"## Frame problem and look at the big picture","89d8d03a":"Can we say that hotter objects emit more of every wavelength?","0bc988b9":"How are the objects positioned in space?","7acaacd9":"## RandomForestClassifier CV","0ef28656":"Precision, Recall and F1 score","5626ac51":"Stars have the lowest average redshift, followed by Galaxies and then Quasars. What do the distributions of *u, g, r, i, z* filters look like?","9cf25db4":"# Q3. Can we learn from the data? (Fitting models)","0b4befc1":"## Models","767217c0":"What categories does this project fall in?","5e19e114":"Cost Derivative\n\n$$\n\\frac{\\partial J(\\theta)}{\\partial \\theta_j} = \\frac{1}{m}\\sum_{i=1}^m (\\sigma(\\theta^T \\cdot x^{(i)}) - y^{(i)})x^{(i)}_{j}\n$$\n\nTraining\n\n$$\n\\theta_{j+1} = \\theta_j - \\eta \\nabla MSE(\\theta)\n$$"}}