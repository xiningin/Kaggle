{"cell_type":{"3ec95df7":"code","9b857230":"code","fb5177d5":"code","4d4c5a5a":"code","bda55c59":"code","eafee294":"code","7fc6b372":"code","05698e61":"code","04982308":"code","439cf7cd":"code","712031f9":"code","38544dd2":"markdown","23c3c04a":"markdown","5d194cdb":"markdown","6151bf1f":"markdown","9318ba16":"markdown","62f03800":"markdown","f52a6b04":"markdown"},"source":{"3ec95df7":"!pip install tensorflow_decision_forests","9b857230":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import datasets, model_selection \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nimport sklearn\nfrom sklearn.metrics import accuracy_score, classification_report\nimport tensorflow_decision_forests as tfdf\nimport pandas as pd","fb5177d5":"iris = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\niris","4d4c5a5a":"iris.info()","bda55c59":"iris.describe()","eafee294":"iris.groupby(\"Species\")[\"Species\"].count()","7fc6b372":"validation_split = 0.2","05698e61":"species = sorted(list(iris[\"Species\"].unique()))\nspecies","04982308":"train_features, test_features = None, None\nfor item in species:\n    data = iris[iris.Species == item]\n    train_subset, test_subset = train_test_split(data, test_size=validation_split)\n    if train_features is None or test_features is None:\n        train_features = train_subset\n        test_features = test_subset\n    else:\n        train_features = pd.concat([train_features, train_subset])\n        test_features = pd.concat([test_features, test_subset])\nprint(train_features.shape, test_features.shape)\ntrain_features = sklearn.utils.shuffle(train_features)\ntrain_features.pop(\"Id\")\ntest_features.pop(\"Id\")\ntrain_ds = tfdf.keras.pd_dataframe_to_tf_dataset(train_features, label=\"Species\")\ntest_ds = tfdf.keras.pd_dataframe_to_tf_dataset(test_features, label=\"Species\")","439cf7cd":"model = tfdf.keras.RandomForestModel(num_trees=30)\nmodel.compile(metrics=[\"accuracy\"])\nmodel.fit(train_ds, validation_data=test_ds)","712031f9":"test_labels = model.predict(test_ds)\ntest_labels[:10], test_labels.shape","38544dd2":"## Import Packages","23c3c04a":"## EDA","5d194cdb":"As we can see This is a balanced dataset.","6151bf1f":"## Prediction","9318ba16":"## Import dataset","62f03800":"## Train Validation Split\nI will apply train validation split to this dataset. This is a very small dataset, so it will be better if we do train validation split by their species.","f52a6b04":"## Model Development"}}