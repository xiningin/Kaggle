{"cell_type":{"33ff95c0":"code","25459e40":"code","716fc1e1":"code","618728e8":"code","778c99f8":"code","34da9bb1":"code","d92cd72c":"code","ecd414c2":"code","8454d9fb":"code","8c4698cf":"code","5e430930":"code","8570c89a":"code","335ff7f3":"code","2678716d":"markdown","9dbb09a6":"markdown","179927ee":"markdown","abc862f4":"markdown","01151a11":"markdown","718fee44":"markdown","e0a4d156":"markdown"},"source":{"33ff95c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","25459e40":"import matplotlib.pyplot as plt\nimport seaborn as sns","716fc1e1":"df=pd.read_csv('..\/input\/website-classification\/website_classification.csv')\ndf['category_id'] = df['Category'].factorize()[0]\ndf.sample(2)","618728e8":"from sklearn.feature_extraction.text import TfidfVectorizer\ncorpus = [\n'This is the first document.',\n'This document is the second document.',\n'And this is the third one.',\n'Is this the first document?',]\nvectorizer = TfidfVectorizer()\nX = vectorizer.fit_transform(corpus)\nprint(\"Each of the %d text is represented by %d features \" %(X.shape))","778c99f8":"tfidf = TfidfVectorizer(sublinear_tf=True, min_df=5,\n                        ngram_range=(1, 2), \n                        stop_words='english')\n\n# We transform each cleaned_text into a vector\nfeatures = tfidf.fit_transform(df.cleaned_website_text).toarray()\nlabels = df.category_id\nprint(\"Each of the %d text is represented by %d features \" %(features.shape))\n# print(tfidf.get_feature_names())","34da9bb1":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.25,random_state = 0)","d92cd72c":"from sklearn.neighbors import KNeighborsClassifier\nneigh = KNeighborsClassifier(n_neighbors=3)\nneigh.fit(X_train, y_train)\n##\nknn_score=neigh.score(X_test,y_test)\n##\ny_predict=neigh.predict(X_test)\n##\nplt.figure(figsize=(16,6))\nsns.boxplot(x=y_test,y=y_predict)\nplt.ylabel('y-predict',fontsize=24)\nplt.xlabel('y-test',fontsize=24)","ecd414c2":"# fig, ax =plt.subplots(1,2,figsize=(25,35)) \nfig,(ax1,ax2) = plt.subplots(1,2,figsize=(16,6))\nax1.set_xlabel('y_predict',fontsize=24)\nsns.histplot(y_predict,ax=ax1)\nax2.set_xlabel('y_test',fontsize=24)\nsns.histplot(y_test,ax=ax2)","8454d9fb":"display(neigh.predict_proba(X_test))","8c4698cf":"from sklearn.linear_model import LogisticRegression\nclf = LogisticRegression(solver='liblinear').fit(X_train, y_train)\n##\nlog_reg_score=clf.score(X_test,y_test)\n##\ny_predict=clf.predict(X_test)\n##\nplt.figure(figsize=(16,6))\nsns.boxplot(x=y_test,y=y_predict)\nplt.ylabel('y-predict',fontsize=24)\nplt.xlabel('y-test',fontsize=24)","5e430930":"# fig, ax =plt.subplots(1,2,figsize=(25,35)) \nfig,(ax1,ax2) = plt.subplots(1,2,figsize=(16,6))\nax1.set_xlabel('y_predict',fontsize=24)\nsns.histplot(y_predict,ax=ax1)\nax2.set_xlabel('y_test',fontsize=24)\nsns.histplot(y_test,ax=ax2)","8570c89a":"display(clf.decision_function(X_test))\ndisplay(clf.predict_log_proba(X_test))","335ff7f3":"data={'model':['KNeighborsClassifier','LogisticRegression'],'score':[knn_score,log_reg_score]}\ndf1=pd.DataFrame(data)\ndf1","2678716d":"https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.feature_extraction.text.TfidfVectorizer.html","9dbb09a6":"# LogisticRegression\n\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LogisticRegression.html","179927ee":"https:\/\/www.w3resource.com\/pandas\/pandas-factorize.html","abc862f4":"# KNN -KNeighborsClassifier \n\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsClassifier.html","01151a11":"# TfidfVectorizer","718fee44":"# Result","e0a4d156":"# Reference\n\nhttps:\/\/kavita-ganesan.com\/tfidftransformer-tfidfvectorizer-usage-differences\/\n\nhttps:\/\/www.kaggle.com\/hetulmehta\/classification-of-websites"}}