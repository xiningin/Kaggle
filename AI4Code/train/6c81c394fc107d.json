{"cell_type":{"aa5741e9":"code","e0c3ef3a":"code","1ca3e825":"code","6809f034":"code","6336e717":"code","f61cec1d":"code","6ea8aaf1":"code","c38ffb49":"code","f31aba31":"code","a8a2c03d":"code","49f74da1":"code","9a8575a4":"code","3ef671ec":"code","b88f847b":"code","9b627a28":"code","02d9d261":"code","f6f4bb95":"code","1c54a22e":"code","a3fd7ffc":"code","2853572e":"code","305e2699":"code","f4fe437b":"code","b319eda9":"code","62eb525e":"code","482863b4":"code","d7f1248d":"code","ebe32f66":"code","0114512f":"code","edce5450":"code","23e3ead5":"code","7314a606":"code","9c05d30b":"code","c2bbea5d":"code","5287dc16":"code","23c240e2":"code","b12f0aa3":"code","6e3c3f0d":"code","d87c64ef":"code","11136ea5":"code","f096583d":"code","59564c50":"code","dea05f07":"code","0829ffd7":"markdown","a4907e32":"markdown","3be2de83":"markdown","d345d866":"markdown","5228f4f8":"markdown","2da2bbfb":"markdown","6c0b6628":"markdown","41e41328":"markdown","a902a6a5":"markdown","1f968bd3":"markdown","ad9ccc0f":"markdown","8ea2a20b":"markdown","411e7c5b":"markdown","801e2484":"markdown","ecaf6ba1":"markdown","41805241":"markdown","33841b38":"markdown","067993b5":"markdown","98e2f8f6":"markdown","9fc0fe72":"markdown","7d159071":"markdown","e27b5cb4":"markdown","383e491d":"markdown","fc3ecd6d":"markdown","4102bd38":"markdown","3a3b9420":"markdown","a8fa30a7":"markdown","c0b511cf":"markdown","70c6db43":"markdown"},"source":{"aa5741e9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e0c3ef3a":"median_house_hold_in_come = pd.read_csv('..\/input\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","1ca3e825":"percentage_people_below_poverty_level.head()","6809f034":"percentage_people_below_poverty_level.info()","6336e717":"percentage_people_below_poverty_level['Geographic Area'].unique()","f61cec1d":"percentage_people_below_poverty_level.replace([\"-\"],(0.0),inplace = True)\n#I dont know what \"-\" it means so replaced the \"-\" values with 0\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\n#I converted all (there is some int values in dataset)values to float \narea_list = list(percentage_people_below_poverty_level[\"Geographic Area\"].unique())\n#I get state list\narea_poverty_ratio = [] \nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\n\ndata = pd.DataFrame({\"area_list\":area_list,\"area_poverty_ratio\":area_poverty_ratio})\nnew_id = (data[\"area_poverty_ratio\"].sort_values(ascending=True)).index.values\n#ascending=True-->Low to high \/ ascending=False -->High to low\nsorted_data= data.reindex(new_id)\nsorted_data\n#we sorted the data --> low to high.\n\n#visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'],palette = sns.cubehelix_palette(len(x)))\n#sns.cubehelix_palette --> This function creates colors\nplt.xticks(rotation=45)#rotation of text in axix\nplt.xlabel=(\"States\")\nplt.ylabel=(\"Poverty Rate\")\nplt.title=('Poverty Rate Given States')\nplt.show()","6ea8aaf1":"kill.head()","c38ffb49":"kill.name.value_counts() #some missing data which name is TK TK ","f31aba31":"seperate = kill.name[kill.name != \"TK TK\"].str.split()\n#we clear the data and seperate the names(\"Burak Arslan\"-->\"Burak\" \"Arslan\")\n#seperate = kill.name[kill.name != \"TK Tk\"].str.split()\na,b = zip(*seperate)#we zipped the seperated datas\nname_list = a+b \nname_count = Counter(name_list)#we get number of names\nmost_common_names = name_count.most_common(10)#we found the most common 10 names\nx,y = zip(*most_common_names)#we zipped the data\nx,y = list(x),list(y)#we created x and y \nplt.figure(figsize=(15,10))\nax = sns.barplot(x=x, y=y,palette=\"Blues_d\")\n\nplt.xlabel=(\"Name or Surname\")\nplt.ylabel=(\"Number of Name and Surname\")\nplt.title=(\"Most Common 10 Name or Surname\")\nplt.show()","a8a2c03d":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","49f74da1":"percent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data[\"area_highschool_ratio\"].sort_values(ascending=False)).index.values\nsorted_data2 = data.reindex(new_index)\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2[\"area_list\"],y=sorted_data2[\"area_highschool_ratio\"])\nplt.xticks(rotation = 30)\nplt.xlabel=(\"States\")\nplt.ylabel=(\"High School Graduade Rate\")\nplt.title=(\"Percentage\")\nplt.show()","9a8575a4":"share_race_city.head()","3ef671ec":"share_race_city.info()","b88f847b":"share_race_city.replace([\"-\"],0.0,inplace = True)\nshare_race_city.replace([\"(X)\"],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\n\n#created a list for each of label because we have city percantages but we need state percentage \nshare_white = []\nshare_black = []\nshare_native_american= []\nshare_asian= []\nshare_hispanic= []\n\nfor i in area_list:\n    #we add mean of values for each state\n    x=share_race_city[share_race_city[\"Geographic area\"]==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black)\/len(x))\n    share_native_american.append(sum(x.share_native_american)\/len(x))\n    share_asian.append(sum(x.share_asian)\/len(x))\n    share_hispanic.append(sum(x.share_hispanic)\/len(x))\n\n#visualization\nf , ax = plt.subplots(figsize = (13,20))\nsns.barplot(x=share_white,y=area_list,color=\"#8c001a\", alpha=0.9,label=\"Whites\")#alpha = oppacity\nsns.barplot(x=share_black,y=area_list, color=\"#00fdd1\",alpha=0.9,label=\"Black\")\nsns.barplot(x=share_native_american,y=area_list, color=\"#2701d5\",alpha=0.9,label=\"Native\")\nsns.barplot(x=share_asian,y=area_list, color=\"#ffd62a\",alpha=0.9,label=\"Asian\")\nsns.barplot(x=share_hispanic,y=area_list, color=\"#46a346\",alpha=0.9,label=\"Hispanic\")\n# (#46a346) Hex color codes.Not important.\nax.legend(ncol=2,loc=\"upper right\",frameon=True)#frameon --> frame on legend\nax.set(xlabel=\"Percentage\",ylabel=\"States\")#we can set labels easily\nsns.despine(left=True, bottom=True)","9b627a28":"x =[1,2,3,4,5]\ny =[1,2,3,4,5]\nyi =[500,400,300,200,100]\n\nplt.plot(x,y)\nplt.plot(x,yi)\nplt.show()\n\n#if we normalize the dataset\n\nx1 =[]\ny1 =[]\nyi1 =[]\nfor i in x:\n    x1.append(i\/max(x))\nfor a in y:\n    y1.append(a\/max(y))\nfor b in yi:\n    yi1.append(b\/max(yi))\n\n\nplt.plot(x1,y1)\nplt.plot(x1,yi1)\nplt.show()\n\n","02d9d261":"data_highschool = pd.DataFrame({\"area_list\":area_list,\"area_poverty_ratio\":area_poverty_ratio})\ndata_highschool = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\n\n##\nsorted_data[\"area_poverty_ratio\"] = sorted_data[\"area_poverty_ratio\"]\/max(sorted_data[\"area_poverty_ratio\"])\nsorted_data2[\"area_highschool_ratio\"] = sorted_data2[\"area_highschool_ratio\"]\/max(sorted_data2[\"area_highschool_ratio\"])\n#normalization\ndata = pd.concat([sorted_data,sorted_data2[\"area_highschool_ratio\"]],axis=1)\ndata_highschool= pd.concat([sorted_data,sorted_data2[\"area_highschool_ratio\"]],axis=1)\n\ndata.sort_values(\"area_poverty_ratio\",inplace= True)\ndata_highschool.sort_values(\"area_highschool_ratio\",inplace= True)\n#concat and sort datas \n\nf, ax1 = plt.subplots(figsize=(20,10))\nsns.pointplot(x=\"area_list\",y=\"area_poverty_ratio\",data=data,color=\"cyan\")\nsns.pointplot(x=\"area_list\",y=\"area_highschool_ratio\",data=data,color=\"lime\")\nplt.text(40,0.6,'high school graduate ratio',color='lime',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='cyan',fontsize = 18,style = 'italic')\nax.set_xlabel('States',fontsize = 15,color='blue')\nax.set_ylabel('Values',fontsize = 15,color='blue')\nax.set_title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()\nplt.show()\n\n\nf, ax1 = plt.subplots(figsize=(20,10))\nsns.pointplot(x=\"area_list\",y=\"area_poverty_ratio\",data=data_highschool,color=\"cyan\")\nsns.pointplot(x=data_highschool[\"area_list\"],y=data_highschool[\"area_highschool_ratio\"],color=\"lime\")\nplt.text(40,0.8,'high school graduate ratio',color='lime',fontsize = 17,style = 'italic')\nplt.text(40,0.75,'poverty ratio',color='cyan',fontsize = 18,style = 'italic')\nax.set(xlabel=\"States\",ylabel=\"Values\",title=\"Sorted by High School Graduate\")\nplt.grid()\nplt.show()","f6f4bb95":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"reg\", size=7)\ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"kde\", size=7)\ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"resid\", size=7)\ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"hex\", size=7)\nplt.savefig(\"graph.png\")\nplt.show()","1c54a22e":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data,size=5, ratio=3, color=\"r\")","a3fd7ffc":"kill.race.value_counts()","2853572e":"kill.race.dropna(inplace= True)\nlabels = kill.race.value_counts().index\nsizes = kill.race.value_counts().values\nexplode = [0,0,0,0,0,0]\ncolors = [\"gray\",\"cyan\",\"red\",\"lime\",\"green\",\"brown\"]\n\nplt.figure(figsize = (7,7))\nplt.pie (sizes , explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.show()","305e2699":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\", data=data)\nplt.show()","f4fe437b":"# Show each distribution with both violins and points\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)#colors\nplt.subplots(figsize=(10,10))\nsns.violinplot(data=data,palette=pal,inner=\"points\")\nplt.show()","b319eda9":"f,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True,linewidth=-5,fmt=\".1f\",ax=ax,linecolor=\"white\")\nplt.show()","62eb525e":"kill.loc[:,[\"gender\",\"age\",\"manner_of_death\"]].head()","482863b4":"# Plot the orbital period with horizontal boxes\nsns.boxplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill,palette=\"PRGn\")\nplt.show()","d7f1248d":"kill.loc[:,[\"gender\",\"age\",\"manner_of_death\"]].head()","ebe32f66":"sns.swarmplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill)\nplt.show()","0114512f":"data.head()","edce5450":"sns.pairplot(data)\nplt.show()","23e3ead5":"kill.gender.value_counts()","7314a606":"sns.countplot(kill.gender)","9c05d30b":"kill.armed.value_counts()","c2bbea5d":"armed= kill.armed.value_counts()\nplt.figure(figsize=(15,5))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.show()","5287dc16":"above25 = [\"Above25\" if i>=25 else \"Below25\" for i in kill.age]\ndf = pd.DataFrame({\"age\":above25})\nsns.countplot(x=df.age)\nplt.show()","23c240e2":"sns.countplot(data=kill, x='race')\nplt.show()","b12f0aa3":"city = kill.city.value_counts()\nplt.figure(figsize=(20,7))\nsns.barplot(x=city[:30].index,y=city[:30].values)\nplt.xticks(rotation=90)\nplt.show()","6e3c3f0d":"state = kill.state.value_counts()\nplt.figure(figsize=(20,7))\nsns.barplot(x=state[:10].index,y=state[:10].values)\nplt.show()","d87c64ef":"sns.countplot(kill.signs_of_mental_illness)\nplt.show()","11136ea5":"sns.countplot(kill.threat_level)\nplt.show()","f096583d":"sns.countplot(kill.flee)\nplt.show()","59564c50":"sns.countplot(kill.body_camera)\nplt.show()","dea05f07":"plt.subplots(figsize=(20,10))\nsta = kill.state.value_counts().index\nsns.barplot(x=sta,y = kill.state.value_counts().values)\nplt.show()","0829ffd7":"<a id=\"10\"><\/a>\n# SWARM PLOT","a4907e32":"<a id=\"19\"><\/a>\n***HAVING MENTAL ILNESS OR NOT***","3be2de83":"<a id=\"8\"><\/a>\n# HEAT MAP","d345d866":"***Reading Data***","5228f4f8":"<a id=\"15\"><\/a>\n***AGE OF K\u0130LLED PEOPLE***","2da2bbfb":"<a id=\"2\"><\/a>\n# POINT PLOT","6c0b6628":"*In fact:*\n*     If high school graduation high --> povert level low\n*     If high school graduation low -->povert level high\n*     Police aren't use cameras while shooting people. Maybe they want to hide why they shoot.\n*     Lots of people shooting below 25 years old. \n   ","41e41328":"<a id=\"12\"><\/a>\n# COUNT PLOT","a902a6a5":"I will try to show you how can we use seaborn visualization library.\nSo lets start.\n\n# INTRODUCTION\n\nPlot Contents:\n* [Bar Plot](#1)\n\n-Visualization of high school graduation rate vs Poverty rate of each state\n\n* [Point Plot](#2)\n* [Joint Plot](#3)\n* [Pie Chart](#4)\n* [Lm Plot](#5)\n* [Violin Plot](#7)\n* [Heatmap](#8)\n* [Pair Plot](#11)\n\n-Correlation of Manner of Death , Age and Gender\n\n* [Box Plot](#9)\n* [Swarm Plot](#10)\n\n-Everything You Need in This Dataset\n\n* [Count Plot](#12)\n    * [Gender](#13)\n    * [Armed Weapon for Killed People](#14)\n    * [Age of Killed People](#15)\n    * [Race of Killed People](#16)\n    * [Most Dangerous 10 Cities](#17)\n    * [Most Dangerous 10 States](#18)\n    * [Having Mental \u0130lness or Not](#19)\n    * [Threat Type](#20)\n    * [Flee Type](#24)\n    * [Having Body Cameras for Police](#21)\n    * [Kill Numbers From State](#22)\n    ","1f968bd3":"<a id=\"9\"><\/a>\n# BOX PLOT","ad9ccc0f":"If we have data like this we should normalize that it. \n\n*What is normalization:*\n*     Normalization is the process of reorganizing data in a database ","8ea2a20b":"<a id=\"22\"><\/a>\n***KILL NUMBERS FROM STATES***","411e7c5b":"<a id=\"1\"><\/a> \n# Bar Plot\n\n\nWe will learn how to use bar plot in this dataset.","801e2484":"<a id=\"7\"><\/a>\n# VIOLIN PLOT","ecaf6ba1":"** *We get the informations about states in USA.***","41805241":"<a id=\"18\"><\/a>\n***MOST DANGEROUS  10 STATES***","33841b38":"<a id=\"3\"><\/a>\n# JOINT PLOT","067993b5":"<a id=\"21\"><\/a>\n***HAVING BODY CAMERAS FOR POLICE***","98e2f8f6":"# THANKS FOR YOUR READ\u0130NG:)\n##  Also Thanks DATAI for his helps.\n### Please vote this kernel!","9fc0fe72":"<a id=\"20\"><\/a>\n***THREAT TYPE***","7d159071":"<a id=\"5\"><\/a>\n# LM PLOT","e27b5cb4":"<a id=\"16\"><\/a>\n***RACE OF K\u0130LLED PEOPLE***","383e491d":"***NORMALIZATION***","fc3ecd6d":"<a id=\"4\"><\/a>\n# PIE CHART","4102bd38":"<a id=\"11\"><\/a>\n# PAIR PLOT","3a3b9420":"<a id=\"24\"><\/a>\n***FLEE TYPE***","a8fa30a7":"<a id=\"17\"><\/a>\n***MOST DANGEROUS 10 CITIES***","c0b511cf":"<a id=\"14\"><\/a>\n***ARMED WEAPON***","70c6db43":"<a id=\"13\"><\/a>\n***GENDER***"}}