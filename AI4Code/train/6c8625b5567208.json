{"cell_type":{"d4f7aede":"code","3642d9f7":"code","ba4800ba":"code","4d83e3ca":"code","d549aeba":"code","c4e9becd":"code","1ad4958f":"code","dcd41ff3":"code","1851be9f":"code","5a4a6fdf":"code","378949f5":"code","8ad8b972":"code","055129b3":"code","02d45b94":"code","e1fe784f":"code","55145057":"code","e982f119":"code","9cd6a928":"code","16da4f3f":"code","0481182a":"code","a226f4e4":"code","e53ecd68":"markdown","42606654":"markdown","5ddbead5":"markdown","40c8c2fb":"markdown","7ad7c5c1":"markdown","1f948965":"markdown","dbeca317":"markdown","c2f0f2d7":"markdown","3d30848a":"markdown"},"source":{"d4f7aede":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib\nfrom ipywidgets import widgets","3642d9f7":"train = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-2\/train.csv\")\ntrain.drop(columns=['Id'], inplace=True)   # Drop this column as not necessary for data exploration\ntrain.head()","ba4800ba":"print(\"Number of countries included in dataset:\", train.Country_Region.nunique())\nprint(\"Date Range is from \", train.Date.min(), \"to\", train.Date.max())\n","4d83e3ca":"total = train.groupby(['Date']).sum().reset_index(drop=False)\ntotal.columns = ['Date', 'Global Confirmed Cases', 'Global Fatalities']\ntotal.head()","d549aeba":"px.line(total, x=\"Date\", y=\"Global Confirmed Cases\", title=\"Global Confirmed Cases\")","c4e9becd":"px.line(total, x=\"Date\", y=\"Global Fatalities\", title=\"Global Fatalities\")","1ad4958f":"default_country = 'Australia'\n\ncountry = widgets.Dropdown(\n    options=list(train['Country_Region'].unique()),\n    value=default_country,\n    description='Country:',\n)\n\ntemp_df = train[train.Country_Region == default_country].groupby(\"Date\").sum().reset_index()\n\n# Assign first figure widget\ntrace1 = go.Scatter(x=temp_df['Date'], y=temp_df['ConfirmedCases'], name='Confirmed Cases')\ntrace2 = go.Scatter(x=temp_df['Date'], y=temp_df['Fatalities'], name='Fatalities')\ng = go.FigureWidget(data=[trace1, trace2], layout=go.Layout(title=dict(text='COVID-19 by Country')))\n\ndef response(change):\n    temp_df = train[train.Country_Region == country.value].groupby(\"Date\").sum().reset_index()\n    \n    x = temp_df['Date']\n    y1 = temp_df['ConfirmedCases']\n    y2 = temp_df['Fatalities']\n    with g.batch_update():\n        g.data[0].x = x\n        g.data[0].y = y1\n        g.data[1].y = y2\n        g.layout.xaxis.title = 'Date'\n        g.layout.yaxis.title = 'Confirmed Cases'\n\ncountry.observe(response, names=\"value\")\n\ncontainer = widgets.HBox([country])\nwidgets.VBox([container, g])","dcd41ff3":"grouped = train.groupby([\"Country_Region\", \"Date\"]).sum().reset_index()\nlatest = grouped.groupby([\"Country_Region\"]).last().reset_index()\nlatest.head()","1851be9f":"most_cases = latest.sort_values(by=\"ConfirmedCases\", ascending=False).head(10)\nmost_cases.head()","5a4a6fdf":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x=most_cases['Country_Region'],\n                y=most_cases['ConfirmedCases'],\n                name='Confirmed Cases',\n                marker_color='darkblue'))\n\nfig.add_trace(go.Bar(x=most_cases['Country_Region'],\n                y=most_cases['Fatalities'],\n                name='Fatalities',\n                marker_color='darkgrey'))\n\nfig.update_layout(\n    title='Top Ten Countries by Confirmed Cases',\n    barmode='group',\n)\n\nfig.show()","378949f5":"top_countries = most_cases.Country_Region.values\nprint(top_countries)","8ad8b972":"pd.options.mode.chained_assignment = None  # Suppress chained assignment warning. default='warn'\n\ntop = train[train['Country_Region'].isin(top_countries)]\ntop['Country_Region'] = top['Country_Region'].astype('category')\ntop['Country_Region'].cat.set_categories(top_countries, inplace=True)    # Sort this dataframe by highest\ntop.sort_values([\"Country_Region\", \"Date\"], inplace=True)\ntop = top.groupby([\"Country_Region\", \"Date\"]).sum().reset_index()\ntop.columns = ['Country', 'Date', 'Confirmed Cases', 'Fatalities']\ntop.head()","055129b3":"fig = px.line(top, x=\"Date\", y=\"Confirmed Cases\", color='Country', title=\"Countries with most Confirmed Cases\")\nfig.show()","02d45b94":"latest.head()","e1fe784f":"country_df = px.data.gapminder()[[\"country\", \"iso_alpha\"]].drop_duplicates().reset_index(drop=True)\ncountry_df.columns = ['Country_Region', 'Country_Code']\ncountry_df.head()","55145057":"latest_df = latest.merge(country_df, how='left', on='Country_Region')\nlatest_df.head()","e982f119":"latest_df[latest_df.isnull().any(axis=1)].shape","9cd6a928":"latest_df.at[162, 'Country_Code'] = 'USA'\nlatest_df[latest_df.Country_Region == \"US\"]","16da4f3f":"latest_df.head()","0481182a":"top_df = latest_df.sort_values(by=\"ConfirmedCases\", ascending=False).head(10)\ntop_df","a226f4e4":"fig = px.scatter_geo(top_df, locations=\"Country_Code\", color=\"ConfirmedCases\",\n                     hover_name=\"Country_Region\", size=\"ConfirmedCases\")\nfig.show()","e53ecd68":"# Summary Statistics","42606654":"#### Obtaining country codes","5ddbead5":"# Top 10 Confirmed Cases in the World","40c8c2fb":"# Trends by Country","7ad7c5c1":"However, we have missing country codes, 53 of them to be exact.","1f948965":"# Countries with Most Confirmed Cases","dbeca317":"# COVID-19 Global Trends","c2f0f2d7":"# Geospatial Data","3d30848a":"Will manually fix US country code for now."}}