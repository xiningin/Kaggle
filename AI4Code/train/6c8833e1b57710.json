{"cell_type":{"9947aad0":"code","c630d28b":"code","5bd1f1c8":"code","bd763641":"code","72974c00":"code","e6e78b14":"code","72c48897":"code","6f1a20c0":"code","866ae198":"code","054a382b":"code","0b4f01a0":"code","eee36ab3":"code","48803bda":"code","883554f4":"markdown","a1d1d875":"markdown","bf3e166b":"markdown","d0fc6178":"markdown","e360d28f":"markdown","520d506b":"markdown","ceaf10eb":"markdown","bc6b5769":"markdown","f5cb25db":"markdown","61544eb4":"markdown","c22913fe":"markdown","b1845f88":"markdown","3298efbb":"markdown","96b471ab":"markdown"},"source":{"9947aad0":"import pandas as pd \nimport numpy as np\ndt = pd.read_csv(\"\/kaggle\/input\/simulated-bank-customer-data\/CUST_ASSET_DATA.csv\")","c630d28b":"dt # data","5bd1f1c8":"dt.isna().sum() #missing values","bd763641":"dt.isna().sum().unique() # then we know there is missing value in \"age\" and \"BRANCH_DIST\"","72974c00":"ind1 = dt[dt[\"AGE\"].isna()].index\nind2 = dt[dt[\"BRANCH_DIST\"].isna()].index\nind = pd.Series((list(ind1)+list(ind2))).unique()\ndt = dt.drop(index = ind) # Drop all missing values because they are just a little.\ndt.isna().sum().unique() ","e6e78b14":"dt.columns\nsparsity = pd.DataFrame()\ncolumns_ = [\"ACTIVE_WEB_CUST_\",\"SECURITY_ACC_\",'INTERACT_AMT_A_',\n            'INTERACT_AMT_B_',\"TOTAL_ASSET_\"]\nfor i in columns_:\n    X = []\n    for j in range(1,14):\n        X += [len(dt[dt[i+str(j)] != 0][i+str(j)])]\n    sparsity[i] = X\nsparsity","72c48897":"avg = dt[\"TOTAL_ASSET_1\"]\nfor i in range(1,14):\n    avg = avg + dt[\"TOTAL_ASSET_\"+str(i)]\navg = avg\/13\npareto_dt = pd.DataFrame(list(avg.sort_values(ascending = False)),\n                         index = range(0,99013) , columns = [\"avg\"]) \n                                    # data for pareto chart\ny = np.zeros(20)\nfor i in range(1,20):\n    y[i-1] = (pareto_dt[\"avg\"][4950*(i-1):4950*i].sum())\ny[19] = pareto_dt[\"avg\"][4950*19:99013].sum()\ny = y\/pareto_dt[\"avg\"].sum()\n\nacc_y = np.zeros(20)\nfor i in range(0,20):\n    acc_y[i] = y[0:i].sum()","6f1a20c0":"import matplotlib.pyplot as plt \nx = [\"95-100\",\"90-95\",\"85-90\",\"80-85\",\"75-80\",\"70-75\",\"65-70\",\"60-65\",\n    \"55-60\",\"50-55\",\"45-50\",\"40-45\",\"35-40\",\"30-35\",\"25-30\",\"20-25\",\n    \"15-20\",\"10-15\",\"5-10\",\"0-5\"]\nplt.figure(figsize=(12,4))\nplt.bar(x,y)\nplt.plot(x,acc_y)\nplt.xlabel(\"percentile of customers(%)\")\nplt.ylabel(\"ratio\")\nplt.title(\"pareto chart\")\n","866ae198":"dt[\"AGE\"].value_counts()","054a382b":"x = ['<25', '25~29', '30~34','35~39', '40~44', '45~49','50~54', '55~59', '>60' ]\ny = [6510,11623,12805,14524,14491,11971,10325,8762,8002]\nplt.bar(x,y)\nplt.ylabel(\"amount\")\nplt.title(\"Distribution of Age\")","0b4f01a0":"for i,k in zip(range(57,77),range(1,21)):\n    y=[]\n    for j in range(1,14):\n         y = y + list(dt.iloc[i:i+1,:][\"TOTAL_ASSET_\"+str(j)])\n    x = list(range(1,14))\n    plt.figure(figsize=(10,100))\n    plt.subplot(20,1,k)\n    plt.title(str(i)+\"th plot\")\n    plt.plot(x,y)","eee36ab3":"age = ['<25', '25~29', '30~34','35~39', '40~44', '45~49','50~54', '55~59', '>60' ]\n\nINTERACT_AMT_A = dt[\"INTERACT_AMT_A_1\"]\nfor i in range(2,14):\n    INTERACT_AMT_A = INTERACT_AMT_A + dt[\"INTERACT_AMT_A_\"+str(i)]\nINTERACT_AMT_A = INTERACT_AMT_A\/13\n\nINTERACT_AMT_B = dt[\"INTERACT_AMT_B_1\"]\nfor i in range(2,14):\n    INTERACT_AMT_B = INTERACT_AMT_B + dt[\"INTERACT_AMT_B_\"+str(i)]\nINTERACT_AMT_B = INTERACT_AMT_B\/13\n\ndt[\"INTERACT_AMT_A\"] = INTERACT_AMT_A\ndt[\"INTERACT_AMT_B\"] = INTERACT_AMT_B\n\ny1 = []\nfor i in age:\n    y1 = y1 + [dt[dt[\"AGE\"] == i][\"INTERACT_AMT_A\"].sum()\/len(dt[dt[\"AGE\"] == i])]\n\ny2 = []\nfor i in age:\n    y2 = y2 + [dt[dt[\"AGE\"] == i][\"INTERACT_AMT_B\"].sum()\/len(dt[dt[\"AGE\"] == i])]\n\nplt.bar(age,y1,align = \"edge\",label = \"INTERACT_AMT_A\",width = 0.35)\nplt.bar(age,y2,align = \"edge\",label = \"INTERACT_AMT_B\",width = -0.35)\nplt.title(\"Interact Amount of Two Channels in Different Stage of Life\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Amount per month\")\nplt.legend()","48803bda":"AVG_TOTAL_ASSET = dt[\"TOTAL_ASSET_1\"]\nfor i in range(2,14):\n    AVG_TOTAL_ASSET = AVG_TOTAL_ASSET + dt[\"TOTAL_ASSET_\"+str(i)]\nAVG_TOTAL_ASSET = AVG_TOTAL_ASSET\/13\ndt[\"AVG_TOTAL_ASSET\"] = AVG_TOTAL_ASSET\nplt.boxplot(dt[\"AVG_TOTAL_ASSET\"])","883554f4":"### Interact Amount of Two Channels in Different Stage of Life.","a1d1d875":"### We have 99013 in total. From the diagram above, it seems that no features are sparse.","bf3e166b":"### First of all, we want to make sure if there's any sparse feature or not.","d0fc6178":"### As can be seen from the above figure, certain age groups have preferred channels.","e360d28f":"### Boxplot","520d506b":"### Changing Trend of Asset","ceaf10eb":"###  Pareto Chart","bc6b5769":"### Outlier is too large, it seens that there is a serious gap between the rich and the poor in the customer base.","f5cb25db":"\n## Data Information :\n\n### AGE : Age of customers.\n### GENDER : Gender of customers.\n### CITY : City of customers live in.\n### BRANCH_DIST : How far is the customer from the nearest branch.\n### ACTIVE_WEB_CUST : Is the customer active on web channel or not.\n### SECURITY_ACC : Does the customer has security account. \n### INTERACT_AMT_A : The customer's current amount in A channel.\n### INTERACT_AMT_B : The customer's current amount in B channel.\n\n*No.1 to No. 13 means the 1st month to the 13th month","61544eb4":"### We can see that some of the above graphics have the same patterns like 57,59,62,69 or 65,72,76.","c22913fe":"### Now we have already dealt with all missing values, we are going do some Exploratory Data Analysis.","b1845f88":"### Distribution of Age","3298efbb":"## Introduction:\n### It is not easy to develop the customer base of financial products, and the high customer conversion cost leads to high customer stickiness. It is difficult for us to seize the developed customer base of our competitors. Therefore, if we can take advantage of opportunities and identify customer needs first, we will be able to effectively lead competitors to develop new customer groups. In this project, I am going to construct a reliable prediction model of customers' next-month asset, and use the result to do some further analysis.","96b471ab":"### We can see that the top 20% of customers hold more than 70% of total assets."}}