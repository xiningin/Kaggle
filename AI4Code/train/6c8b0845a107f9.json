{"cell_type":{"aa6ca28c":"code","4fec6e23":"code","56d1dc93":"code","0a41ec3f":"code","e5918a68":"code","a179dff2":"code","669d0f8f":"code","dc98668f":"code","b9ee94c3":"code","5bb962d1":"code","cf6841c8":"code","71246f76":"code","cdbdc784":"code","edf9ac0d":"code","96583b07":"code","85601aa2":"code","a74bf78c":"code","d27d3217":"code","d6731d8f":"code","f8021e7a":"code","38313119":"code","7448f92c":"code","916cc3e0":"markdown","90ba70cc":"markdown","7b6a9a5f":"markdown","f621e969":"markdown","5b237360":"markdown","0f2fd5b9":"markdown","8d4326a0":"markdown","9aa3c4d1":"markdown","5bb0bf10":"markdown","e798ab4c":"markdown","6babf6b9":"markdown","5c12e19c":"markdown","0bf7d022":"markdown","643eb79f":"markdown","e956f773":"markdown","f3e433ee":"markdown","12fd48c4":"markdown","198d9923":"markdown","56d246c3":"markdown"},"source":{"aa6ca28c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4fec6e23":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","56d1dc93":"df_data=pd.read_csv('..\/input\/ks-projects-201801.csv')","0a41ec3f":"df_data.head(10) ","e5918a68":"df_data.describe() # \u8981\u7d04\u7d71\u8a08\u91cf\u306e\u8868\u793a","a179dff2":"pd.plotting.scatter_matrix(df_data,figsize=(20,20)) # \u6563\u5e03\u56f3\u884c\u5217\u3092\u8a08\u7b97\u3001\u8868\u793a\nplt.show()","669d0f8f":"df_data.corr() # \u5404\u76f8\u95a2\u4fc2\u6570\u3092\u8868\u793a","dc98668f":"sns.heatmap(df_data.corr()) # \u5404\u76f8\u95a2\u4fc2\u6570\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u8868\u793a\nplt.show()","b9ee94c3":"# category\u306e\u7a2e\u985e\u3068\u6570\u306b\u3064\u3044\u3066\nprint(df_data['category'].value_counts(dropna=False)) # \u30c7\u30fc\u30bf\u5185\u306e[category]\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u3057\u3066\u7a2e\u985e\u3068\u6570\u91cf\u3092\u8abf\u3079\u308b","5bb962d1":"# main category\u306b\u3064\u3044\u3066\u3082\u7a2e\u985e\u3068\u6570\u91cf\u3092\u8abf\u3079\u308b\nprint(df_data['main_category'].value_counts(dropna=False))","cf6841c8":"# goal\u3068usd_goal_real\u306e\u6563\u5e03\u56f3\u884c\u5217\u3092\u78ba\u8a8d\npd.plotting.scatter_matrix(df_data[['goal','usd_goal_real']],figsize=(10,10))\nplt.show()\n\n#\u76f8\u95a2\u4fc2\u6570\u3092\u78ba\u8a8d\ncorr1=df_data[['goal','usd_goal_real']].corr()\nprint(corr1)","71246f76":"# state\u306e\u7a2e\u985e\u3068\u6570\u91cf\u3092\u78ba\u8a8d\nprint(df_data['state'].value_counts(dropna=False))","cdbdc784":"# category\u6bce\u306estate\u3092\u78ba\u8a8d\u3059\u308b\ncategory=df_data.groupby('category')\ncategory=category['state'].value_counts(normalize=True).unstack()\ncategory=category.sort_values(by=['successful'],ascending=True)\ncategory[['successful','failed','live','canceled','suspended','undefined']].plot(kind='barh',stacked=True,figsize=(20,30))","edf9ac0d":"# deadline\u6bce\u306estate\u3092\u78ba\u8a8d\ndf_data_deadline=df_data.copy()\ndf_data_deadline['deadline_YM']=df_data_deadline['deadline'].apply(lambda x: x[0:7])\ndeadline=df_data_deadline.groupby('deadline_YM')\ndeadline=deadline['state'].value_counts(normalize=True).unstack()\nax=deadline[['successful','failed','live','canceled','suspended','undefined']].plot(kind='barh',stacked=True,figsize=(13,30))\nplt.legend(loc='upper right')","96583b07":"# launched\u6bce\u306estate\u3092\u78ba\u8a8d\ndf_data_launched=df_data.copy()\ndf_data_launched['launched_YM']=df_data_launched['launched'].apply(lambda x: x[0:7])\nlaunched=df_data_launched.groupby('launched_YM')\nlaunched=launched['state'].value_counts(normalize=True).unstack()\nax=launched[['successful','failed','live','canceled','suspended','undefined']].plot(kind='barh',stacked=True,figsize=(13,30))\nplt.legend(loc='upper right')","85601aa2":"# goal\u6bce\u306estate\u3092\u78ba\u8a8d\u3059\u308b\ndf_data_goal=df_data.copy()\ndf_data_goal['goal']=df_data_goal['goal'].apply(lambda x: round(x\/100000))\ngoal=df_data_goal.groupby('goal')\ngoal=goal['state'].value_counts(normalize=True).unstack()\nax=goal[['successful','failed','live','canceled','suspended','undefined']].plot(kind='barh',stacked=True,figsize=(13,30))\nplt.legend(loc='upper right')","a74bf78c":"# country\u6bce\u306estate\u3092\u78ba\u8a8d\u3059\u308b\ndf_data_country=df_data.copy()\ndf_data_country['country']=df_data_country['country'].apply(lambda x : x[0:7])\ncountry=df_data_country.groupby('country')\ncountry=country['state'].value_counts(normalize=True).unstack()\ncountry=country.sort_values(by=['successful'],ascending=True)\nax=country[['successful','failed','live','canceled','suspended','undefined']].plot(kind='barh',stacked=True,figsize=(13,30))\nplt.legend(loc='upper right')","d27d3217":"df_data_currency=df_data.copy()\ndf_data_currency['currency']=df_data_currency['currency'].apply(lambda x : x[0:7])\ncurrency=df_data_currency.groupby('currency')\ncurrency=currency['state'].value_counts(normalize=True).unstack()\ncurrency=currency.sort_values(by=['successful'],ascending=True)\nax=currency[['successful','failed','live','canceled','suspended','undefined']].plot(kind='barh',stacked=True,figsize=(13,30))\nplt.legend(loc='upper right')","d6731d8f":"from datetime import datetime","f8021e7a":"df_data_term=df_data.copy()\ndf_data_term['term']=pd.to_datetime(df_data_term['deadline']).map(pd.Timestamp.timestamp) - pd.to_datetime(df_data_term['launched'].apply(lambda x: x[0:10])).map(pd.Timestamp.timestamp)\nterm=df_data_term.groupby('term')\nterm=term['state'].value_counts(normalize=True).unstack()\nax=term[['successful','failed','live','canceled','suspended','undefined']].plot(kind='barh',stacked=True,figsize=(15,30))\nplt.legend(loc='upper left')","38313119":"from sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import log_loss,accuracy_score,confusion_matrix","7448f92c":"# Scikit-learn\u306b\u3088\u308b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5b9f\u88c5(\u8aac\u660e\u5909\u6570 5\u3064)\ny = df_data[\"\u3007\u3007\u3007\"].values\nX = df_data[['category', 'currency','goal','country','term']].values\nclf = SGDClassifier(loss='log', penalty='none', max_iter=10000, fit_intercept=True, random_state=1234)\nclf.fit(X, y)\n\n# \u91cd\u307f\u3092\u53d6\u5f97\u3057\u3066\u8868\u793a\nw0 = clf.intercept_[0]\nw1 = clf.coef_[0,0,0,0,0]\nw2 = clf.coef_[0,1,0,0,0]\nw3 = clf.coef_[0,0,1,0,0]\nw4 = clf.coef_[0,0,0,1,0]\nw5 = clf.coef_[0,0,0,0,1]\nprint('w0 = {:.3f}, w1 = {:.3f}, w2 = {:.3f},w3 = {:.3f}, w4 = {:.3f}, w5 = {:.3f}'.format(w0,w1,w2,w3,w4,w5))","916cc3e0":"\u2192 \u304b\u306a\u308a\u5f37\u3044\u6b63\u306e\u76f8\u95a2\u304c\u3042\u308a\u3001\u7247\u65b9\u306e\u307f\u306e\u9078\u629e\u3067\u826f\u3055\u305d\u3046\u3002goal\u3092\u8aac\u660e\u5909\u6570\u306b\u9078\u629e\u3059\u308b\u3002","90ba70cc":"\u2192 category\u6bce\u306estate\u3078\u306e\u76f8\u95a2\u95a2\u4fc2\u3042\u308a\u3002","7b6a9a5f":"\u2192\u3000\u3042\u307e\u308agoal\u304c\u5927\u304d\u3044\u3068\u6210\u529f\u3057\u306b\u304f\u3044\u50be\u5411\u304c\u3042\u308b","f621e969":"\u2192 \u30d5\u30a1\u30f3\u30c7\u30a3\u30f3\u30b0\u671f\u9593(term)\u3082state\u3078\u306e\u5f71\u97ff\u3042\u308a\u305d\u3046\u3002","5b237360":"\u3053\u3053\u3067\u65b0\u305f\u306a\u7279\u5fb4\u91cf\u3068\u3057\u3066\u30d5\u30a1\u30f3\u30c7\u30a3\u30f3\u30b0\u671f\u9593 term(deadline-launched)\u3092\u8003\u3048\u308b","0f2fd5b9":"\u25cbgoal\u6bce\u306estate\u3092\u78ba\u8a8d\u3059\u308b","8d4326a0":"\u2192 country\u3001currency\u3082state\u3078\u306e\u5f71\u97ff\u3042\u308a","9aa3c4d1":"\u2192 deadline\u306b\u3088\u308bstate\u3078\u306e\u5f71\u97ff\u306f\u3088\u304f\u5206\u304b\u3089\u305a\u3002","5bb0bf10":"ID:kickstarter ID  \nname:\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d  \ncategory:\u30ab\u30c6\u30b4\u30ea  \nmain_category:\u30e1\u30a4\u30f3\u30ab\u30c6\u30b4\u30ea  \ncurrency:\u30d5\u30a1\u30f3\u30c7\u30a3\u30f3\u30b0\u4f7f\u7528\u901a\u8ca8  \ndeadline:\u7de0\u5207\u65e5  \ngoal:\u76ee\u6a19\u91d1\u984d  \nlaunched:\u958b\u59cb\u65e5  \npledged:\u96c6\u3081\u305f\u91d1\u984d  \nstate:\u72b6\u6cc1  \nbackers:\u652f\u63f4\u8005\u6570  \ncountry:\u3069\u306e\u56fd\u304b\u3089\u306e\u30af\u30e9\u30a6\u30c9\u30d5\u30a1\u30f3\u30c7\u30a3\u30f3\u30b0\u304b  \nusd_pledged:\u96c6\u307e\u3063\u305f\u91d1\u984d\u306eUSD\u63db\u7b97\u5024(KS)  \nusd_real_pledged:\u96c6\u307e\u3063\u305f\u91d1\u984d\u306eUSD\u63db\u7b97\u5024(fixer)  \nusd_goal_real:\u76ee\u6a19\u91d1\u984d\u306eUSD\u63db\u7b97\u5024  ","e798ab4c":"\u3053\u308c\u307e\u3067\u306e\u78ba\u8a8d\u7d50\u679c\u3088\u308a\u3001\u8aac\u660e\u5909\u6570\u306b\u9078\u629e\u3059\u308b\u7279\u5fb4\u91cf\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002(\u25ce\u306f\u91cd\u8981\u5ea6\u3092\u72ec\u65ad\u3067\u8a2d\u5b9a)  \n1 \u25ce\u25ce\u25cecategory  \n2 \u25ce\u25cecurrency  \n3 \u25cegoal  \n4 \u25ce\u25cecountry  \n5 \u25ce\u25ceterm \u203b\u65b0\u7279\u5fb4\u91cf(=deadline - launched)  ","6babf6b9":"\u25cb deadline\u3001launched\u6bce\u306estate\u3092\u78ba\u8a8d\u3059\u308b","5c12e19c":"\u2461 goal\u3068usd_goal_real\u306b\u3064\u3044\u3066","0bf7d022":"\u25cbcurrency\u6bce\u306estate\u3092\u78ba\u8a8d\u3059\u308b","643eb79f":"\u3007\u307e\u305a\u306f\u3058\u3081\u306b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306b\u3088\u308b\u4e88\u6e2c\u5206\u985e\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b  \n\u3000\u3000category  \n\u3000\u3000currency  \n\u3000\u3000country  \n  \u4ee5\u4e0a\u306f\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306a\u306e\u3067\u30c0\u30df\u30fc\u5909\u6570\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b  \n","e956f773":"\u2192 (\u7d50\u679c) \u76f8\u95a2\u5f37\u305d\u3046\u3002main_category\u3092\u3068\u308a\u3042\u3048\u305a\u5916\u3057\u3066category\u3092\u9078\u629e\u3059\u308b","f3e433ee":"\u2192 launched\u306b\u3088\u308bstate\u3078\u306e\u5f71\u97ff\u3088\u304f\u5206\u304b\u3089\u305a","12fd48c4":"\u25cbcountry\u6bce\u306estate\u3092\u78ba\u8a8d\u3059\u308b","198d9923":"\u2460 category\u3068main category\u306b\u3064\u3044\u3066(\u76f8\u95a2\u6027\u304c\u9ad8\u305d\u3046)","56d246c3":"\u25cb\u76ee\u7684\u5909\u6570\uff1a\u30d5\u30a1\u30f3\u30c7\u30a3\u30f3\u30b0\u7d50\u679c(\u76ee\u6a19\u91d1\u984d\u306b\u5bfe\u3057\u3066\u51fa\u8cc7\u91d1\u984d\u304c\u4e0a\u56de\u3063\u305f\u304b)\n  \n\u25cb\u8aac\u660e\u5909\u6570\u5019\u88dc\u3010\u203b\u4e8b\u524d\u306b\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3092\u8003\u616e\u3011  \n\u3000\u3000category(\u30ab\u30c6\u30b4\u30ea)  \n\u3000\u3000main_category(\u30e1\u30a4\u30f3\u30ab\u30c6\u30b4\u30ea)  \n\u3000\u3000currency(\u901a\u8ca8)  \n\u3000\u3000goal(\u76ee\u6a19\u91d1\u984d)  \n\u3000\u3000deadline(\u7de0\u5207\u65e5)  \n\u3000\u3000launched(\u958b\u59cb\u65e5)  \n\u3000\u3000country(\u56fd)  \n\u3000\u3000usd_goal_real(\u76ee\u6a19\u91d1\u984d\u306e\u7c73\u30c9\u30eb\u63db\u7b97\u5024)  \n\n\u25cb\u30c7\u30fc\u30bf\u9593\u306e\u95a2\u4fc2\u6027\u3092\u78ba\u8a8d\u3057\u9069\u5207\u306a\u8aac\u660e\u5909\u6570\u3092\u9078\u5b9a\u3059\u308b  "}}