{"cell_type":{"241966f1":"code","d4495449":"code","6e9f8de2":"code","963185aa":"code","67ed9d8a":"code","c5818555":"code","18ac8faa":"code","777a0408":"code","ff15511c":"code","74a7bb6c":"code","9c4a31b7":"code","c12c8d37":"code","0f0b96b7":"code","ae2b3c6d":"code","999142d1":"code","c44de1f8":"code","7132665d":"code","50eabbdc":"code","739a9fc5":"code","6c3215ef":"code","6739d7e8":"code","730ea274":"code","9cf0bfc9":"code","b7a008f9":"code","458e4435":"code","8c86dce2":"code","8bc0fe66":"code","7c76aab2":"code","f45a163e":"code","5991f866":"code","c71deee5":"code","a65485fe":"code","8e94184a":"code","fe158404":"code","664ef5bf":"code","7a6dc8d4":"code","201922ea":"code","8d02beea":"code","473a6e41":"code","1d0a7db2":"code","d7170310":"code","56e52d23":"code","520e1685":"code","f31c08e8":"code","348c4a33":"code","3e89f797":"code","aa9c80d9":"code","5c8343c3":"code","eb51c738":"code","e4de7f95":"code","6744da40":"code","3601f2a8":"code","91ae9ddd":"code","45a64b4d":"code","4b772bbb":"code","98ba009b":"code","49363e08":"code","06fa48dc":"code","81b2c786":"code","4e98d553":"code","1d27b2c3":"code","ec9b538e":"code","5118be47":"code","76b894be":"code","44f2aaf8":"code","bdd4bbb5":"code","90cdd761":"markdown","753ea0b3":"markdown","1d352794":"markdown","f09c061b":"markdown","23d3271b":"markdown","9855d462":"markdown","fe3d265e":"markdown","0a43e71f":"markdown","58ab0d93":"markdown","e8d9e8e8":"markdown","68efacda":"markdown","c7ca44cc":"markdown","75e7c788":"markdown","1b00fd10":"markdown","7a44ceba":"markdown","431371f9":"markdown","858c7110":"markdown","689b5193":"markdown","56a61444":"markdown","534243c3":"markdown","ce2c5b07":"markdown","76fff023":"markdown","226c4cbc":"markdown","8a64e441":"markdown","bc3a80ec":"markdown","4f930d41":"markdown","765fed86":"markdown","48d9a170":"markdown","b25ca206":"markdown","c44d1993":"markdown","46637201":"markdown","e7f30603":"markdown","55094f16":"markdown","edaabbab":"markdown","06e71c20":"markdown","9fca641b":"markdown","12fd3818":"markdown","937d84c9":"markdown","b3df0938":"markdown","10195bc2":"markdown"},"source":{"241966f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d4495449":"# Import Libraries:\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime as dt\nfrom datetime import timedelta\nfrom sklearn.preprocessing import MinMaxScaler\n\n!pip install lifetimes\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_period_transactions\n\n# Setting Configurations:\n\npd.set_option('display.max_columns', None)\npd.set_option('display.float_format', lambda x: '%.3f' % x)\n\n# Import Warnings:\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nwarnings.simplefilter(action='ignore', category=DeprecationWarning)\n","6e9f8de2":"# Import Data:\n\ndf = pd.read_csv(\"..\/input\/online-retail-ii-data-set-from-ml-repository\/Year 2010-2011.csv\")\ndf.head()","963185aa":"df.shape","67ed9d8a":"df.info()","c5818555":"df.isnull().sum()","18ac8faa":"df.dropna(inplace=True)","777a0408":"# Let's remove the returned product transactions (negative values -> Invoice Id contains value \"C\")\n\ndf_Invoice = pd.DataFrame({\"Invoice\":[row for row in df[\"Invoice\"].values if \"C\"  not in str(row)]})\ndf_Invoice.head()\ndf_Invoice = df_Invoice.drop_duplicates(\"Invoice\")\n\n# The transactions except returned product transactions\ndf = df.merge(df_Invoice, on = \"Invoice\")\n","ff15511c":"# Delete values less than or equal to 0 in the variables Quantity and Price\n\ndf = df[df[\"Quantity\"] > 0]\ndf = df[df[\"Price\"] > 0]","74a7bb6c":"# Unique Number of Products (with Description)\n\ndf.Description.nunique()","9c4a31b7":"# Unique Number of Products (with StockCode)\n\ndf.StockCode.nunique()","c12c8d37":"# The unique values of these 2 variables (Description & StockCode) should be equal, because each stock code represents a product.\n\n# 1st Step\ndf_product = df[[\"Description\",\"StockCode\"]].drop_duplicates()\ndf_product = df_product.groupby([\"Description\"]).agg({\"StockCode\":\"count\"}).reset_index()\n\ndf_product.rename(columns={'StockCode':'StockCode_Count'},inplace=True)\n\ndf_product = df_product.sort_values(\"StockCode_Count\", ascending=False)\ndf_product = df_product[df_product[\"StockCode_Count\"]>1]\n\ndf_product.head()\n","0f0b96b7":"# Let's delete products with more than one stock code \n\ndf = df[~df[\"Description\"].isin(df_product[\"Description\"])]\n\nprint(df.StockCode.nunique())\nprint(df.Description.nunique())","ae2b3c6d":"# 2nd Step\n\ndf_product = df[[\"Description\",\"StockCode\"]].drop_duplicates()\ndf_product = df_product.groupby([\"StockCode\"]).agg({\"Description\":\"count\"}).reset_index()\ndf_product.rename(columns={'Description':'Description_Count'},inplace=True)\ndf_product = df_product.sort_values(\"Description_Count\", ascending=False)\ndf_product = df_product[df_product[\"Description_Count\"] > 1] \n\n\ndf_product.head()\n","999142d1":"# Let's delete stock codes that represent multiple products\n\ndf = df[~df[\"StockCode\"].isin(df_product[\"StockCode\"])]","c44de1f8":"# Now each stock code represents a single product\n\nprint(df.StockCode.nunique())\nprint(df.Description.nunique())","7132665d":"# The post statement in the stock code shows the postage cost, let's delete it as it is not a product\n\ndf = df[~df[\"StockCode\"].str.contains(\"POST\", na=False)]","50eabbdc":"# Calculating Total Price:\n\ndf['TotalPrice'] = df['Quantity'] * df['Price']","739a9fc5":"df.head()","6c3215ef":"cltv_c = df.groupby('Customer ID').agg({'Invoice': lambda x: x.nunique(),  ## total transaction\n                                        'TotalPrice': lambda x: x.sum()})  ## total price\ncltv_c.head()","6739d7e8":"cltv_c.columns = ['Total_Transaction',  'Total_Price']\n\ncltv_c.reset_index(inplace=True)\n\ncltv_c.head()","730ea274":"cltv_c['Average_Order_Value'] = cltv_c['Total_Price'] \/ cltv_c['Total_Transaction']\ncltv_c.head()","9cf0bfc9":"numofCustomers = cltv_c.shape[0]\n\ncltv_c[\"Purchase_Frequency\"] = cltv_c['Total_Transaction'] \/ numofCustomers\ncltv_c.head()","b7a008f9":"repeat_rate = cltv_c[cltv_c.Total_Transaction > 1].shape[0] \/ numofCustomers \nchurn_rate = 1 - repeat_rate\n\nprint(churn_rate)","458e4435":"cltv_c['Profit_Margin'] = cltv_c['Total_Price'] * 0.10\ncltv_c.head()\n","8c86dce2":"cltv_c['CLTV'] = cltv_c['Average_Order_Value'] * cltv_c[\"Purchase_Frequency\"]","8bc0fe66":"scaler = MinMaxScaler(feature_range=(0, 1))\ncltv_c[\"Scaled_CLTV\"] = scaler.fit_transform(cltv_c[[\"CLTV\"]]) ","7c76aab2":"cltv_c.head()","f45a163e":"cltv_c.sort_values(by=\"Scaled_CLTV\", ascending=False).head()","5991f866":"cltv_c[\"Segment\"] = pd.qcut(cltv_c[\"Scaled_CLTV\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])","c71deee5":"cltv_c.groupby(\"Segment\").agg( {\"Total_Transaction\": [\"count\", \"mean\", \"sum\"],\n                                \"Total_Price\": [\"mean\", \"sum\"],\n                                \"Scaled_CLTV\": \"mean\"})","a65485fe":"df = df.loc[df[\"Country\"] == \"United Kingdom\",:]","8e94184a":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit","fe158404":"num_cols  = [col for col in df.columns if df[col].dtype != \"O\" and \"ID\" not in col ]\nnum_cols","664ef5bf":"for col in num_cols:\n    print(outlier_thresholds(df, col))","7a6dc8d4":"def replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit","201922ea":"for col in num_cols:\n    replace_with_thresholds(df, col)","8d02beea":"df.info()","473a6e41":"# convert the 'Date' column to datetime format\ndf['InvoiceDate'] = df['InvoiceDate'].astype('datetime64[ns]')","1d0a7db2":"performans_date =   df[\"InvoiceDate\"].max() + dt.timedelta(days=2)","d7170310":"cltv_df = df.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days,           # recency\n                                                         lambda date: (performans_date - date.min()).days],     # T : M\u00fc\u015fterilik ya\u015f\u0131\n                                         'Invoice': lambda num: num.nunique(),                                  # frequency\n                                         'TotalPrice': lambda TotalPrice: TotalPrice.sum()})                    # total price\n\ncltv_df.head()","56e52d23":"cltv_df.columns = cltv_df.columns.droplevel(0)\ncltv_df.columns = ['Recency', 'Tenure', 'Frequency', 'Monetary']","520e1685":"cltv_df.head()","f31c08e8":"cltv_df[\"Recency\"] = cltv_df[\"Recency\"] \/ 7\ncltv_df[\"Tenure\"] = cltv_df[\"Tenure\"] \/ 7","348c4a33":"# Monetary :  Average purchase value per each transaction\n\ncltv_df[\"Monetary\"] = cltv_df[\"Monetary\"] \/ cltv_df[\"Frequency\"]\n \n# Monetary > 0 :\ncltv_df = cltv_df[cltv_df[\"Monetary\"] > 0]\ncltv_df.head()","3e89f797":"cltv_df = cltv_df[(cltv_df['Frequency'] > 1)]","aa9c80d9":"bgf = BetaGeoFitter(penalizer_coef=6)\nbgf.fit(cltv_df['Frequency'],\n        cltv_df['Recency'],\n        cltv_df['Tenure']);","5c8343c3":"bgf.conditional_expected_number_of_purchases_up_to_time(6 * 4,  #weekly\n                                                        cltv_df['Frequency'], # her bir m\u00fc\u015fteri \u00f6zelinde hesaplanaca\u011f\u0131 i\u00e7in sat\u0131r sat\u0131r okuyacak\n                                                        cltv_df['Recency'],\n                                                        cltv_df['Tenure']).sort_values(ascending=False).head(10)\n","eb51c738":"cltv_df[\"Expected_Purchase_6_months\"] = bgf.predict(6 * 4,\n                                           cltv_df['Frequency'],\n                                           cltv_df['Recency'],\n                                           cltv_df['Tenure'])\n","e4de7f95":"cltv_df.head()","6744da40":"ggf = GammaGammaFitter(penalizer_coef=0.01)\nggf.fit(cltv_df['Frequency'], cltv_df['Monetary'])\n","3601f2a8":"ggf.conditional_expected_average_profit(cltv_df['Frequency'],\n                                        cltv_df['Monetary']).sort_values(ascending=False).head(10)","91ae9ddd":"cltv_df[\"Expected_Average_Profit_6_months\"] = ggf.conditional_expected_average_profit(cltv_df['Frequency'],\n                                                                             cltv_df['Monetary'])","45a64b4d":"cltv_df.head()","4b772bbb":"cltv_6_months = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['Frequency'],\n                                   cltv_df['Recency'],\n                                   cltv_df['Tenure'],\n                                   cltv_df['Monetary'],\n                                   time=6,  # 6 months\n                                   freq=\"W\",  \n                                   discount_rate=0.01)","98ba009b":"cltv_6_months.head(2)","49363e08":"cltv_6_months = cltv_df.merge(cltv_6_months, on=\"Customer ID\", how=\"left\")\ncltv_6_months.head()","06fa48dc":"cltv_6_months.rename(columns={\"clv\": \"CLTV_6_months\"}, inplace=True)","81b2c786":"cltv_6_months.head()","4e98d553":"scaler = MinMaxScaler(feature_range=(0, 1))\nscaler.fit(cltv_6_months[[\"CLTV_6_months\"]])\ncltv_6_months[\"Scaled_CLTV\"] = scaler.transform(cltv_6_months[[\"CLTV_6_months\"]])","1d27b2c3":"cltv_6_months.head()","ec9b538e":"cltv_6_months[\"CLTV_Segment\"] = pd.qcut(cltv_6_months[\"Scaled_CLTV\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\ncltv_6_months.reset_index(inplace=True)\ncltv_6_months.sort_values(by=\"Scaled_CLTV\", ascending=False).head(10)","5118be47":"cltv_6_months[\"Expected_Average_Profit_6_months\"].sum()","76b894be":"cltv_6_months[\"Expected_Average_Profit_6_months\"].mean()","44f2aaf8":"cltv_6_months[\"Expected_Purchase_6_months\"].mean()","bdd4bbb5":"cltv_6_months.groupby(\"CLTV_Segment\").agg( {\"Customer ID\": \"count\",\n                                            \"Expected_Purchase_6_months\": [\"mean\", \"sum\"],\n                                            \"Expected_Average_Profit_6_months\": [ \"mean\", \"sum\"],\n                                            \"Scaled_CLTV\": \"mean\"})","90cdd761":"**7. Scaling Customer Value**","753ea0b3":"**3.BG\/NBD Model:**","1d352794":"# **Customer Lifetime Value Prediction**\n\n![image.png](attachment:f173b1ed-2901-42d3-982e-5394f4234074.png)","f09c061b":"**5.Profit Margin (Total Price x 0.10)**\n","23d3271b":"Now, we'll observe segments by all metrics:","9855d462":"# ***Dataset Story***\n\n* The data set named Online Retail - II includes the sales of an online store between 01\/12\/2009 - 09\/12\/2011.\n\n* The product catalog of this company includes souvenirs.\n\n* The majority of the company's customers are corporate customers.\n\n\n\n\nPersonalize of marketing strategies for relevant segments.","fe3d265e":"Firstly, we need to calculate:\n\n* Total Price\n* Total Transaction\n\n\nLet's calculate them:","0a43e71f":"**6.Customer Value**","58ab0d93":"*** Who are the 10 highest revenue customers?**","e8d9e8e8":"**1. Exploratory Data Analysis**","68efacda":"* https:\/\/mathchi.medium.com\/why-is-customer-lifetime-value-so-important-f6f78999a85e\n\n* https:\/\/www.seedrs.com\/academy\/how-to-calculate-customer-lifetime-value\/\n\n* https:\/\/cio-wiki.org\/wiki\/Customer_Lifetime_Value","c7ca44cc":"**9.Evaluation:**\n\n*  By analyzing customers' past spending habits, we calculated the lifetime values of customers over a given time period. \n\n* According to the results of the analysis, we can achieve about 92% of the total revenue from all customers by focusing especially on the A and C segments. \n\n* However, CLTV calculation is the snapshot of a single time period when the the analysis was realized.\n\n* Total price is the dominant factor, the number of transaction does not matter once you win the same price.\n\n* Churn rate is general, it's not personal!\n\n\"Therefore, if we want to obtain a time-projected CLTV calculation, we need to predict by using BG-NBD and Gamma-Gamma models\"","75e7c788":"Let's divide customers into 4 segments according to CLTV so that the \"A\" segment represents our best customers:","1b00fd10":"***8.Build Marketing Strategies***","7a44ceba":"**2.Preparation of Lifetime Data Structure**\n\n- For BG-NBD Model, we need to calculate Recency, Frequency, Tenure values.\n- In addition, we need to calculate the monetary value for the Gamma-Gamma Model.\n\n    * Recency: Weekly calculation of the time elapsed since the last purchase for each customer.\n    * Tenure: The age of the customer. The weekly value of the time elapsed since the customer's first transaction.\n    * Frequency: Total number of repeat purchases (Frequency>1 condition must be considered to exclude churn customers)\n    * Monetary : Ticket size (Average purchase  value per each transaction)\n","431371f9":"**6.Scaling CLTV Values**","858c7110":" \nTotal expected revenue of all customers is 830K, and the expected revenue from segments A and B constitutes 60% of the population. The number of customers in these segments corresponds to 50% of the total number of customers.\n\nSummarily; It can develop marketing strategies by focusing primarily on segment A and segment B, taking into account the RFM segments of these customers. In this context, product-specific cashback campaigns and cross-selling campaigns can be planned, taking into account the product that customers buy the most, the frequency of purchasing the same product and the periods","689b5193":"The CLTV calculation metrics can be seen below: \n\n* **Average Order Value** (Average Order_Value = Total Price \/  Total Transaction)\n* **Purchase Frequency** (Total Transaction \/ Total Number of Customers)\n* **Profit Margin** (Total Price x Profit Margin)\n* **Churn Rate** (1- Repeat Rate)\n* **Customer Value** (Customer Value = Average Order Value * Purchase Frequency)\n* **Customer Life Time Value** (CLTV = (Customer Value \/ Churn Rate) x Profit Margin)\n\n![image.png](attachment:0a366a76-2f78-4b2d-80be-7c53940b7e6f.png)","56a61444":"**1. Total Price & Total Transaction**","534243c3":"# **References**","ce2c5b07":"Now, we'll scale \"CTLV\" from 0 to 1 to make CLTV values of all customers comparable:","76fff023":"Let's divide customers into 4 segments according to CLTV so that the \"A\" segment represents our best customers:","226c4cbc":"*When evaluating in today's competitive market, acquiring new customers is more and more costly. The cost of acquiring a new customer ranges from 5 to 10 times the cost of retaining an existing customer.*\n\nTherefore, if we evaluate the impact of the churn customers on the company, it causes both the elimination of the added value by which  existing customer created and the increase in the expenses of the company when finding a new customer to replace the old customer. \nSo, getting to know your customers closely, understanding their needs\/expectations and providing a unique experience provides customer retention, loyalty and long-term customer relations. At this point, it is essential for your company to measure the lifetime value of the customer and to determine the appropriate strategies.\n\n**Customer lifetime value (CLV)** is one of the important metric to track as part of the customer experience journey and how valuable a customer is to your company.\n\n**What does CLV provide your company?**\n\n- You cannot improve the points that you cannot measure and produce a tangible output. In other words, the first way to achieve cost optimization and increase customer loyalty by reducing customer abandonment is to measure it.  At this point, focusing on lifetime value of customers,  personalized offers and sales\/marketing strategies can be applied to reduce costs and increase profits.\n- If you know how much income your customer can bring to your company,  you can predict how much you can  increase your expenses to maximize profitability and retain your customers.\n\nSo, you can touch your customers with personalized marketing strategies, cross-sell \/ upsell offers or cashback campaigns & designing loyalty programs based on behavior of your customers and total profit they can provide.\n\nIn this notebook we will handle both CLTV calculation and CLTV prediction:","8a64e441":"**4.Repeat Rate**","bc3a80ec":"# **Customer Lifetime Value Calculation**","4f930d41":"Now, since we will predict CLTV values by observing patterns of purchasing, let's first analyze the outlier values:","765fed86":"As the performans\/measurement date, we can determine 2 days after the maximum transaction date in the data set:","48d9a170":"**2. Average Order Value**","b25ca206":"# **Customer Lifetime Value (CLTV)**\n\n![image.png](attachment:8fa0459b-fed6-4aa6-a71b-c201641b4681.png)","c44d1993":"***Exploratory Data Analysis***","46637201":"**7.Assigning Segments Based on CLTV**","e7f30603":"**5.CLTV Prediction with BG-NBD & Gamma-Gamma Model:**","55094f16":"**8.Building Segments Based on CLTV**","edaabbab":"Let's calculate CLTV of each customers by using Online Retail - II dataset:","06e71c20":"# ****Business Problem & Goal:****\n \nIt is aimed to build marketing strategies to increase customer satisfaction and loyalty by calculating\/predicting the lifetime values of an e-commerce company's customers.","9fca641b":"# ***Variables Description:***\n\n* InvoiceNo : The number of the invoice, unique per each purchase. Refund invoice numbers contain \"C\"\n\n* StockCode : Unique code per each item\n\n* Description : Name of the item\n\n* Quantity : The number of items within the invoice\n\n* InvoiceDate : Date and time of the purchase\n\n* UnitPrice : Price of a single item, as of Sterlin\n\n* CustomerID : Unique id number per each customer\n\n* Country : The country where the customer is living\n","12fd3818":"**4.Gamma-Gamma Model:**","937d84c9":"* ***What is the total number of expected purchases in 6 months?***\n* ***Which customers will do the most purchases in the next 6 months?***","b3df0938":"**3. Purchase Frequency**","10195bc2":"In this section, we can handle customers of United Kingdom. By using CLTV prediction, we'll answer this question:  \"How many transactions will be in the next 6 months?\" :"}}