{"cell_type":{"ef713561":"code","d4ac9ab4":"code","02b0b1b7":"code","d7bed2fa":"code","622069a0":"code","e48f6024":"code","33413cc9":"code","1c2348dc":"code","a2d1a3e4":"code","c641380c":"code","09cd8a99":"code","afeb7e76":"code","941a8c01":"code","25ec33de":"code","08dda331":"code","c8a60589":"code","7af3f19f":"code","457c1ee7":"code","5ccaa8e5":"code","61bace80":"code","5c166c5b":"code","3baad12f":"code","50cd3357":"code","f8de9e77":"code","b5cb40ae":"code","9ee08b5e":"markdown","a3c99b08":"markdown","74c842ef":"markdown","532289a3":"markdown","bc90e54a":"markdown","f3e43f73":"markdown","8cf01491":"markdown","e78e8683":"markdown","fe33a240":"markdown","e029d49a":"markdown","ec4d79c6":"markdown","5b9b10d8":"markdown","81210ed2":"markdown","06ce5902":"markdown"},"source":{"ef713561":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d4ac9ab4":"import numpy as np\r\nimport pandas as pd","02b0b1b7":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\r\ntrain.head(5)","d7bed2fa":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\r\ntest.head(5)\r\n\r\ntest_PassengerId = test.PassengerId","622069a0":"data = [train, test]","e48f6024":"print(train.shape)\r\nprint(test.shape)","33413cc9":"train.isnull().sum()","1c2348dc":"test.isnull().sum()","a2d1a3e4":"from sklearn.impute import SimpleImputer\r\n\r\ndef clean_missing_data(dataset):\r\n    imputer = SimpleImputer(missing_values=np.nan, strategy='mean')\r\n    dataset['Age'] = imputer.fit_transform(dataset[['Age']])\r\n    dataset['Fare'] = imputer.fit_transform(dataset[['Fare']])\r\n\r\n    imputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\r\n    dataset['Embarked'] = imputer.fit_transform(dataset[['Embarked']])\r\n\r\n    return dataset\r\n\r\nfor dataset in data:\r\n    clean_missing_data(dataset)","c641380c":"train.isnull().sum()","09cd8a99":"test.isnull().sum()","afeb7e76":"for dataset in data:\r\n    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\r\n    \r\n    dataset.drop([\"Cabin\", \"PassengerId\", \"SibSp\", \"Name\", \"Ticket\"], axis=1, inplace=True)","941a8c01":"train.head()","25ec33de":"from sklearn.preprocessing import LabelEncoder\r\nle = LabelEncoder()\r\n\r\nfor dataset in data:\r\n    dataset[\"Sex\"] = le.fit_transform(dataset.Sex)\r\n    dataset[\"Embarked\"] = le.fit_transform(dataset.Embarked)","08dda331":"train.Title.value_counts()","c8a60589":"for dataset in data:\r\n    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\r\n \t'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\r\n\r\n    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\r\n    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\r\n    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')","7af3f19f":"title_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Rare\": 5}\r\nfor dataset in data:\r\n    dataset['Title'] = dataset['Title'].map(title_mapping)\r\n    dataset['Title'] = dataset['Title'].fillna(0)\r\n\r\ntrain.head()","457c1ee7":"y = train[\"Survived\"]\r\nX = train.drop(columns = [\"Survived\"])","5ccaa8e5":"from sklearn.preprocessing import StandardScaler\r\nsc = StandardScaler()\r\n\r\nX = sc.fit_transform(X)\r\ntest = sc.transform(test)","61bace80":"from sklearn.model_selection import train_test_split\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)","5c166c5b":"from catboost import CatBoostClassifier\r\n\r\nclassifier = CatBoostClassifier()\r\nclassifier.fit(X_train, y_train)","3baad12f":"from sklearn.metrics import confusion_matrix, accuracy_score\r\n\r\ny_pred = classifier.predict(X_test)\r\ncm = confusion_matrix(y_test, y_pred)\r\nprint(cm)\r\n\r\naccuracy_score(y_test, y_pred)","50cd3357":"from sklearn.model_selection import cross_val_score\r\n\r\naccuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)\r\n\r\nprint(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\r\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","f8de9e77":"prediction = classifier.predict(test)\r\nprediction","b5cb40ae":"output = pd.DataFrame({'PassengerId': test_PassengerId, 'Survived': prediction})\r\noutput.to_csv('submission-catboost.csv', index=False)","9ee08b5e":"## Encoding Other Categorical Columns","a3c99b08":"## Importing and Viewing Datasets","74c842ef":"## Making Prediction on Test Dataset","532289a3":"## Importing Basic Library","bc90e54a":"## Splitting the Data","f3e43f73":"## LabelEncoding Categorical columns","8cf01491":"## Creating New Feature and Dropping Some Columns","e78e8683":"## Feature Scaling","fe33a240":"## Using k-Fold Cross Validation for Better Performance","e029d49a":"## Checking Performance of the model","ec4d79c6":"## Analysing Dataset","5b9b10d8":"## Seperating Dependent Variable","81210ed2":"## Dealing With Missing Data","06ce5902":"## Creating CatBoost Classifier Model"}}