{"cell_type":{"92d6edba":"code","7e1af29e":"code","8d1c1795":"code","4d9a1df8":"code","d14f11cb":"code","3c9dbc50":"code","25be14ac":"code","61537239":"code","e76b80cc":"code","b6833d37":"code","0ea115b8":"code","5283cf26":"code","74f809ee":"code","7b964a37":"code","182536c0":"code","c039c130":"code","efffcd6b":"code","f08e4bb3":"code","d3b5afd7":"code","16362a17":"code","2b99648d":"code","2fc09f5c":"code","9fb95473":"code","7a792846":"code","4abf1efd":"markdown","61eb6a10":"markdown","a669e18d":"markdown","995ee4f1":"markdown","02787f0f":"markdown","bdaab11e":"markdown","78ab8c1a":"markdown"},"source":{"92d6edba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e1af29e":"df=pd.read_csv('..\/input\/comparison-of-north-american-ski-resorts\/north_american_ski_resort_data.csv')","8d1c1795":"df.head()","4d9a1df8":"import matplotlib\nfrom matplotlib import pyplot\n%matplotlib inline\npyplot.figure(figsize=(14,6))\ndf1=df['Skiable acreage'].value_counts()\npyplot.hist(df1)\npyplot.show()","d14f11cb":"from scipy.stats import shapiro\nDataToTest=df['Skiable acreage']\nstat, p = shapiro(DataToTest)\nprint('stat=%.2f, p=%.20f' %(stat,p))\n\nif p>0.05:\n    print('Normal distribution')\nelse:\n    print('Not a Normal distribution')","3c9dbc50":"import matplotlib\nfrom matplotlib import pyplot\n%matplotlib inline\npyplot.figure(figsize=(14,6))\ndf2=df['Total trails'].value_counts()\npyplot.hist(df2)\npyplot.show()","25be14ac":"from scipy.stats import shapiro\nDataToTest = df['Total trails']\nstat, p = shapiro(DataToTest)\n\nprint('stat=%.2f, p=%.30f' % (stat, p))\n\nif p > 0.05:\n    print('Normal distribution')\nelse:\n    print('Not a normal distribution')","61537239":"from numpy.random import randn\nDataToTest1 = randn(100)","e76b80cc":"stat, p = shapiro(DataToTest1)\n\nprint('stat=%.2f, p=%.30f' % (stat, p))\n\nif p > 0.05:\n    print('Normal distribution')\nelse:\n    print('Not a normal distribution')","b6833d37":"df3=df['Base elevation (ft)'].value_counts()","0ea115b8":"from scipy.stats import normaltest\nDataToTest=df3\nstat, p = shapiro(DataToTest)\nprint('stat=%.2f, p=%.20f' %(stat,p))\n\nif p>0.05:\n    print('Normal distribution')\nelse:\n    print('Not a Normal distribution')","5283cf26":"DataToTest=df2\nstat, p = shapiro(DataToTest)\nprint('stat=%.2f, p=%.20f' %(stat,p))\n\nif p>0.05:\n    print('Normal distribution')\nelse:\n    print('Not a Normal distribution')","74f809ee":"from matplotlib import pyplot\ntest1=df[1:25]['Total trails']\ntest2=df[1:25]['Skiable acreage']\npyplot.plot(test1 , test2)\npyplot.show()","7b964a37":"from scipy.stats import pearsonr\nstat, p = pearsonr(test1,test2)\n\nprint('stat=%.3f, p=%5f' % (stat, p))\nif p > 0.05:\n    print('Independent samples')\nelse:\n    print('Dependent samples')\n","182536c0":"#Spearman Rank Correlation\nfrom scipy.stats import spearmanr\nstat, p = spearmanr(test1,test2)\n\nprint('stat=%.3f, p=%5f' % (stat, p))\nif p > 0.05:\n    print('Independent samples')\nelse:\n    print('Dependent samples')","c039c130":"df.corr(method='pearson')","efffcd6b":"contingency_data=pd.crosstab(df['State'],df['Skiable acreage'],margins=False)\ncontingency_data","f08e4bb3":"from scipy.stats import chi2_contingency\nstat, p, dof, expected = chi2_contingency(contingency_data)\nprint('stat=%.3f, p=%.3f' %(stat,p))\n\nif p>0.05:\n    print('Independent categories')\nelse:\n    print('dependent categories')","d3b5afd7":"contingency_data1=pd.crosstab(df['City'],df['Total trails'],margins=False)\ncontingency_data1","16362a17":"from scipy.stats import chi2_contingency\nstat, p, dof, expected = chi2_contingency(contingency_data1)\nprint('stat=%.3f, p=%.3f' %(stat,p))\n\nif p>0.05:\n    print('Independent categories')\nelse:\n    print('dependent categories')","2b99648d":"df['Lift ticket (USD)'].mean()","2fc09f5c":"import scipy\nscipy.stats.ttest_1samp(df['Lift ticket (USD)'],64)","9fb95473":"df.head()","7a792846":"import scipy\nscipy.stats.ttest_rel(df['Peak elevation (ft)'],df['Base elevation (ft)'])","4abf1efd":"##### Pearson's Rank Correlation","61eb6a10":"### CORRELATION TEST : PEARSON AND SPEARMAN'S RANK CORRELATION","a669e18d":"## Check if Normally Distributed","995ee4f1":"#### CHI squared test","02787f0f":"### K^2 NORMALITY TEST","bdaab11e":"### T test","78ab8c1a":"#### Spearmans Rank Correlation"}}