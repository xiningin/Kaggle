{"cell_type":{"6dbd18d2":"code","7c8f8358":"code","26d88a88":"code","9436552f":"code","37f0d153":"code","77988490":"code","213d64ee":"code","d4bfc002":"code","88ab58bd":"code","763590d3":"code","a45a7313":"code","4bd98525":"code","9f651f70":"code","c092de56":"code","e627e145":"code","3ea773d0":"code","7c979ba2":"code","48cc551c":"code","2f1b73a2":"code","9c1008ff":"code","7a83b380":"markdown","253b62c3":"markdown","1dcc4267":"markdown","f0e40146":"markdown","13693211":"markdown","1b189efd":"markdown","2d4e4ca4":"markdown","114b6d9b":"markdown","1fc2ed6b":"markdown","cf5c19e0":"markdown"},"source":{"6dbd18d2":"from tensorflow.keras.layers import Input,Dense,Flatten,Lambda\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob\nimport matplotlib.pyplot as plt","7c8f8358":"IMAGE_SIZE = [224,224]","26d88a88":"train_path = '..\/input\/car-brands-images\/Datasets\/Train'\ntest_path = '..\/input\/car-brands-images\/Datasets\/Test'","9436552f":"vgg = VGG16(input_shape=IMAGE_SIZE+[3], weights='imagenet',include_top=False)","37f0d153":"vgg.layers   #shows 16 layers objects","77988490":"for layer in vgg.layers:    #layer.trainable=False means we dont want to retrain those weights of layers.\n    layer.trainable=False","213d64ee":"folders=glob('..\/input\/car-brands-images\/Datasets\/Train\/*')\n","d4bfc002":"folders","88ab58bd":"vgg.output    #we will now flatten the output","763590d3":"x=Flatten()(vgg.output)","a45a7313":"prediction = Dense(len(folders),activation='softmax')(x)","4bd98525":"model = Model(inputs=vgg.input,outputs=prediction)    # create model object","9f651f70":"model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])","c092de56":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","e627e145":"train_datagen = ImageDataGenerator(rescale=1.\/255,shear_range = 0.2, zoom_range=0.2, horizontal_flip=True)","3ea773d0":"test_datagen=ImageDataGenerator(rescale=1.\/255)","7c979ba2":"training_set=train_datagen.flow_from_directory('..\/input\/car-brands-images\/Datasets\/Train',target_size=(224,224),batch_size=32,class_mode='categorical')","48cc551c":"test_set=test_datagen.flow_from_directory('..\/input\/car-brands-images\/Datasets\/Test',target_size=(224,224),batch_size=32,class_mode='categorical')","2f1b73a2":"r=model.fit(training_set, validation_data=test_set,epochs=20,steps_per_epoch=len(training_set),validation_steps=len(test_set))","9c1008ff":"y_pred=model.predict(test_set)\ny_pred","7a83b380":"**In this kernel, we will go through car brand image classification using VGG16 mini project. We will create a VGG16 model using Transfer learning where we will the pre-trained model weights to create our own model. Let us begin one by one!**","253b62c3":"# 8) Now use the image data generator for loading the images from dataset and for data augmentation","1dcc4267":"# 4) Load the pre-trained model","f0e40146":"# 6) Use glob to the total number of classes (audi, lamborghini and mercedes)","13693211":"# 7) Now put this flattened array to the dense network","1b189efd":"# INTRODUCTION","2d4e4ca4":"# 3) Provide the dataset path","114b6d9b":"# 2) Define size of image as per standard of VGG16 (224*224*3)","1fc2ed6b":"#  1) Import Libraries","cf5c19e0":"# 5) Do not train the existing weights. We are using the pre-trained weights of imagenet so no need to retrain them."}}