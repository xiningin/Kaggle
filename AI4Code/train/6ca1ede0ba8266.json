{"cell_type":{"a600ff3c":"code","586e5bc9":"code","3722fd82":"code","954f011c":"code","d2f48cfa":"code","7d88a921":"code","c46ab5a2":"code","f55e4aea":"code","c5ec4edb":"code","cfaa7153":"code","4a49f18d":"code","e3b293d2":"code","8cfaeb53":"code","dac81886":"code","7326285d":"code","963f36de":"code","03c55de3":"code","62c71410":"code","f6a9e062":"code","3d41414d":"code","e24854c0":"code","95ba4605":"code","877f20fa":"markdown","2c5351c4":"markdown","974e6e39":"markdown","8cdba413":"markdown","1524dde8":"markdown","44de3c5c":"markdown","edd3d323":"markdown","c7fd9fbc":"markdown","eeca4c1b":"markdown","7e0f038e":"markdown","0533238e":"markdown","ede45fc3":"markdown"},"source":{"a600ff3c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","586e5bc9":"data=pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')\ndata.head()","3722fd82":"data.drop('Unnamed: 0',axis=1,inplace=True)\ndata.head()","954f011c":"data.isnull().sum()","d2f48cfa":"data.drop(['Rotten Tomatoes','Age'],axis=1,inplace=True)\ndata.head()","7d88a921":"data.info()","c46ab5a2":"## Movies on each platform ###\n\nplatforms=['Netflix','Hulu','Prime Video','Disney+']\nmovies_netflix=data['Netflix'].sum()\nmovies_hulu=data['Hulu'].sum()\nmovies_prime=data['Prime Video'].sum()\nmovies_disney=data['Disney+'].sum()\nplatform_count=[movies_netflix,movies_hulu,movies_prime,movies_disney]\nprint(pd.DataFrame({'Movie_Platform':platforms,'Count':platform_count}))","f55e4aea":"from plotly.offline import iplot\nplot_platform=[go.Pie(\n        labels=platforms,\n        values=platform_count\n)]\n\nlayout=go.Layout(title='Plot of Movies on diff Platform')\n\nfigure=go.Figure(data=plot_platform)\niplot(figure)","c5ec4edb":"movies_count_by_years=data.groupby('Year')['Title'].count().reset_index().rename(columns={'Title':'Movie Count'})\nfigure=px.bar(movies_count_by_years,x='Year',y='Movie Count',color='Movie Count',height=600)\nfigure.show()\n#movies_count_by_years","cfaa7153":"movies_count_by_language=data.groupby('Language')['Title'].count().reset_index().sort_values('Title',ascending=False).head(10).rename(columns={'Title':'Movie Count'})\nfigure=px.bar(movies_count_by_language,x='Language',y='Movie Count',color='Movie Count',height=600)\n\nfigure.show()","4a49f18d":"movies_count_by_runtime=data.groupby('Runtime')['Title'].count().reset_index().sort_values('Title',ascending=False).rename(columns={'Title':'Movie Count'})\nfigure=px.bar(movies_count_by_runtime,x='Runtime',y='Movie Count',color='Movie Count',height=400)\nfigure.show()\n#movies_count_by_runtime","e3b293d2":"lengthiest_movie=data.sort_values(by='Runtime',ascending=False).head(10)\nfig=px.bar(lengthiest_movie,x='Title',y='Runtime',height=600,color='Title')\nfig.update_layout(title='Lengthiest Movie')\nfig.show()","8cfaeb53":"fig=px.bar(lengthiest_movie,x='Title',y='IMDb',height=600,color='Title',range_y=[0,10])\nfig.update_layout(title='IMDb Ratings Lengthiest Movie')\nfig.show()","dac81886":"movies_count_by_country=data.groupby('Country')['Title'].count().reset_index().sort_values('Title',ascending=False).head(10).rename(columns={'Title':'Count'})\nfig=px.pie(movies_count_by_country,names='Country',values='Count')\nfig.update_layout(title='Movies Count based on Countries')\nfig.show()","7326285d":"movies_count_by_IMDB=data.groupby('IMDb')['Title'].count().reset_index().sort_values('IMDb',ascending=False).head(10).rename(columns={'Title':'Count'})\nfig=px.pie(movies_count_by_IMDB,names='IMDb',values='Count')\nfig.update_traces(textinfo='percent+label',title='Movies Count based on IMDb Ratings')\nfig.show()","963f36de":"data['Genres'].value_counts().head()","03c55de3":"top5_genres=['Drama','Documnetary','Comedy','Comedy,Drama','Horror']\ndf=data.loc[:,['IMDb','Year','Genres']]\ndf['AverageRating']=df.groupby(['Year','Genres'])['IMDb'].transform('mean')\ndf=df[(df['Year']>2010) & (df['Year']<=2020)]\ndf=df.loc[df['Genres'].isin(top5_genres)]\ndf.drop('IMDb',axis=1,inplace=True)\ndf.sort_values('Year')\nfig=px.bar(df,x='Genres', y='AverageRating', animation_frame='Year', \n           animation_group='Genres', color='Genres', hover_name='Genres', range_y=[0,10])\nfig.update_layout(showlegend=False)\nfig.show()","62c71410":"top5_netflix=data.loc[:,['Netflix','IMDb','Title','Year']]\ntop5_netflix=top5_netflix[top5_netflix['Netflix']==1]\ntop5_netflix=top5_netflix.sort_values('IMDb',ascending=False).head(5)\nfig=px.bar(top5_netflix,x='Title',y='IMDb',height=600,color='IMDb',range_y=[0,10])\nfig.update_layout(title='Top 5 Netflix Movies based on IMDb Rating')\nfig.show()","f6a9e062":"top5_hulu=data.loc[:,['Hulu','IMDb','Title','Year']]\ntop5_hulu=top5_hulu[top5_hulu['Hulu']==1]\ntop5_hulu=top5_hulu.sort_values('IMDb',ascending=False).head(5)\nfig=px.bar(top5_hulu,x='Title',y='IMDb',height=600,color='Title',range_y=[0,10])\nfig.update_layout(title='Top 5 Hulu Movies based on IMDb Rating')\nfig.show()\n","3d41414d":"top5_prime=data.loc[:,['Prime Video','IMDb','Title','Year']]\ntop5_prime=top5_prime[top5_prime['Prime Video']==1]\ntop5_prime=top5_prime.sort_values('IMDb',ascending=False).head(5)\nfig=px.bar(top5_prime,x='Title',y='IMDb',height=600,color='Title',range_y=[0,10])\nfig.update_layout(title='Top 5 Prime Movies based on IMDb Rating')\nfig.show()","e24854c0":"top5_disney=data.loc[:,['Disney+','IMDb','Title','Year']]\ntop5_disney=top5_disney[top5_disney['Disney+']==1]\ntop5_disney=top5_disney.sort_values('IMDb',ascending=False).head(5)\nfig=px.bar(top5_disney,x='Title',y='IMDb',height=600,color='Title',range_y=[0,10])\nfig.update_layout(title='Top 5 Disney Movies based on IMDb Rating')\nfig.show()","95ba4605":"#top20_dir=data.groupby(['Directors','IMDb'])['Title'].count().reset_index().sort_values('IMDb',ascending=False).head(20)\ntop20_dir=data.loc[:,['Directors','IMDb','Title','Year']].sort_values('IMDb',ascending=False)\n\ntop20_dir.head(20)","877f20fa":"On seeing, we find that Rotten Tomatoes and Age columns have more than 50% of data missing. So we drop it","2c5351c4":"Lengthiest movie","974e6e39":"Count of movies as per IMDB rating","8cdba413":"Top 20 Directors","1524dde8":"Top 10 countries movies count","44de3c5c":"Average ratings of Top 5 Genres","edd3d323":"[[](http:\/\/)[](http:\/\/)](http:\/\/)","c7fd9fbc":"Count of movies based on their running time.","eeca4c1b":"Number of movies based on language","7e0f038e":"Top 5 movies on different platform","0533238e":"Number of movies based on year","ede45fc3":"IMDb rating of lengthiest movies"}}