{"cell_type":{"8e73b443":"code","3083619c":"code","69bd8de5":"code","35441c6b":"code","572d0055":"code","339ba6bb":"code","eb682df3":"code","cf5aadbf":"code","4dc5d1c5":"code","88e18cc3":"markdown","aafac5d7":"markdown","612d9954":"markdown","22514211":"markdown"},"source":{"8e73b443":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3083619c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n","69bd8de5":"train_set = pd.read_csv('\/kaggle\/input\/random-linear-regression\/train.csv')\n\ntrain_set = train_set.dropna()\n\ntest_set = pd.read_csv('\/kaggle\/input\/random-linear-regression\/train.csv')\n\ntest_set = test_set.dropna()","35441c6b":"train_set.info() # All the null values are removed !!!","572d0055":"X_test = np.array(test_set.iloc[:,:-1].values)\ny_test = np.array(test_set.iloc[:,:1].values)","339ba6bb":"X_train = np.array(train_set.iloc[:,:-1].values)\ny_train = np.array(train_set.iloc[:,:1].values)","eb682df3":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)","cf5aadbf":"acc = regressor.score(X_test, y_test)\nprint('Accuracy = '+ str(acc))","4dc5d1c5":"plt.scatter(X_test, y_test, color = 'cyan', marker = 'o', alpha = 0.5,label = 'Test data')\nplt.plot(X_train, regressor.predict(X_train), color = 'red', label='Linear Regression')\nplt.title('predicted vs given values')\nplt.xlabel('x')\nplt.ylabel('y')\nplt.legend(loc = 'upper left')\nplt.show()","88e18cc3":"****IMPORTING THE NECESSARY LIBRARIES TO MANIPULATE THE GIVEN DATA****","aafac5d7":"**CONVERTING X AND y INTO ARRAYS BECAUSE WE REQUIRE 2D ARRAY INSTEAD OF 1D ARRAY FOR LINEAR REGRESSION**","612d9954":"**GIVING THE NAMES TO TRAINING AND TEST DATA AND DROPPING THE NULL VALUES IF ANY**","22514211":"**IMPORTING THE LINEAR REGRESSION LIBRARY AND FITTING THE REGRESSOR INTO TRAINING DATA**"}}