{"cell_type":{"36556ad5":"code","ff49b254":"code","b6c1ce16":"code","2e213459":"code","6131e95a":"code","07ac8e42":"code","76a0af68":"code","878c3915":"code","71eff454":"code","4e741733":"code","eac807b0":"code","a94f85e7":"code","8b0e5066":"code","12fb657d":"code","0130c11e":"code","253f8e47":"code","6f1ce5c0":"code","02ae733e":"code","84a1314d":"code","22e4d0a0":"code","476a3804":"code","01285f46":"code","40dfc908":"code","d4eb4e01":"code","dc5ed3ea":"code","179e4afa":"code","a8eb9c81":"markdown","ebabec26":"markdown","68fd3a5a":"markdown","e5691ba6":"markdown","dce509e3":"markdown","4fd31782":"markdown","31cd1ee5":"markdown","c45986d8":"markdown","4e0a4819":"markdown","170e85cf":"markdown","100e566b":"markdown","2989397e":"markdown","d174a8b4":"markdown"},"source":{"36556ad5":"!pip install wandb","ff49b254":"import wandb\nwandb.login()","b6c1ce16":"%cd \/kaggle\n! mkdir tmp\n%cd tmp","2e213459":"#  YOLOv5 modelini indir\n!git clone https:\/\/github.com\/ultralytics\/yolov5  # clone repo\n%cd yolov5\n# Ba\u011f\u0131ml\u0131l\u0131klar\u0131n y\u00fcklenmesi\n%pip install -qr requirements.txt \n\n%cd ..\/\nimport torch\nprint(f\"Setup complete. Using torch {torch.__version__} ({torch.cuda.get_device_properties(0).name if torch.cuda.is_available() else 'CPU'})\")","6131e95a":"# k\u00fct\u00fcphanlerin i\u00e7e aktar\u0131lmas\u0131\nimport os\nimport gc\nimport cv2\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom shutil import copyfile\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\n\nfrom IPython.core.magic import register_line_cell_magic\n\n@register_line_cell_magic\ndef writetemplate(line, cell):\n    with open(line, 'w') as f:\n        f.write(cell.format(**globals()))","07ac8e42":"# e\u011fitim g\u00f6r\u00fcnt\u00fc yolu\nTRAIN_PATH = 'input\/siim-covid19-resized-to-256px-jpg\/train\/'\n# resimlerin gelmesi gerekn boyut\nIMG_SIZE = 256\n# her seferinde \u00e7ekilecek say\u0131s\u0131\nBATCH_SIZE = 16\n# ka\u00e7 sefer veriler verilecek\nEPOCHS = 35","76a0af68":"# Her\u015fey \/kaggle dizininden\n%cd ..\/\n# resimlerin csv formattaki dosyas\u0131n\u0131 al\ndf = pd.read_csv('input\/siim-covid19-detection\/train_image_level.csv')\n\n# id s\u00fctunundaki de\u011ferleri de\u011fi\u015ftir\ndf['id'] = df.apply(lambda row: row.id.split('_')[0], axis=1)\n# Kesin yolu ekle\ndf['path'] = df.apply(lambda row: TRAIN_PATH+row.id+'.jpg', axis=1)\n# Resimlerin image_level de\u011ferlerini al\ndf['image_level'] = df.apply(lambda row: row.label.split(' ')[0], axis=1)\n\ndf.head(5)","878c3915":"# meta.csv dosyas\u0131n\u0131 y\u00fckle\n# Orjinal boyutlar\u0131n bounding box format\u0131 i\u00e7in yeniden scale (\u00f6l\u00e7eklendirilmesi) gerekmektedir\nmeta_df = pd.read_csv('input\/siim-covid19-resized-to-256px-jpg\/meta.csv')\ntrain_meta_df = meta_df.loc[meta_df.split == 'train']\ntrain_meta_df = train_meta_df.drop('split', axis=1)\ntrain_meta_df.columns = ['id', 'dim0', 'dim1']\n\ntrain_meta_df.head(2)","71eff454":"# Her iki dataframe'i  birle\u015ftirme\ndf = df.merge(train_meta_df, on='id',how=\"left\")\ndf.head(2)","4e741733":"train_df, valid_df = train_test_split(df, test_size=0.2, random_state=42, stratify=df.image_level.values)\n\ntrain_df.loc[:, 'split'] = 'train'\nvalid_df.loc[:, 'split'] = 'valid'\n\ndf = pd.concat([train_df, valid_df]).reset_index(drop=True)","eac807b0":"print(f'Veri seti boyutu: {len(df)}, E\u011fitim g\u00f6r\u00fcnt\u00fcleri: {len(train_df)}. Do\u011frulama g\u00f6r\u00fcnt\u00fcleri: {len(valid_df)}')","a94f85e7":"os.makedirs('tmp\/covid\/images\/train', exist_ok=True)\nos.makedirs('tmp\/covid\/images\/valid', exist_ok=True)\n\nos.makedirs('tmp\/covid\/labels\/train', exist_ok=True)\nos.makedirs('tmp\/covid\/labels\/valid', exist_ok=True)\n\n! ls tmp\/covid\/images","8b0e5066":"for i in tqdm(range(len(df))):\n    row = df.loc[i]\n    if row.split == 'train':\n        copyfile(row.path, f'tmp\/covid\/images\/train\/{row.id}.jpg')\n    else:\n        copyfile(row.path, f'tmp\/covid\/images\/valid\/{row.id}.jpg')","12fb657d":"#.yaml dosyas\u0131 olu\u015ftur\nimport yaml\n\ndata_yaml = dict(\n    train = '..\/covid\/images\/train',\n    val = '..\/covid\/images\/valid',\n    nc = 2,\n    names = ['none', 'opacity']\n)\n\n# Dosyay\u0131 yolov5\/data\/ klas\u00f6r\u00fcnde  olu\u015fturma\nwith open('tmp\/yolov5\/data\/data.yaml', 'w') as outfile:\n    yaml.dump(data_yaml, outfile, default_flow_style=True)\n    \n%cat tmp\/yolov5\/data\/data.yaml","0130c11e":"#Etiket s\u00fctununun sat\u0131r de\u011ferini ayr\u0131\u015ft\u0131rarak ham s\u0131n\u0131rlay\u0131c\u0131 kutuyu al\u0131n.\ndef get_bbox(row):\n    bboxes = []\n    bbox = []\n    for i, l in enumerate(row.label.split(' ')):\n        if (i % 6 == 0) | (i % 6 == 1):\n            continue\n        bbox.append(float(l))\n        if i % 6 == 5:\n            bboxes.append(bbox)\n            bbox = []  \n            \n    return bboxes\n        \n     ","253f8e47":"# Yeniden boyutland\u0131r\u0131lan g\u00f6r\u00fcnt\u00fcn\u00fcn boyutuna g\u00f6re s\u0131n\u0131rlay\u0131c\u0131 kutular\u0131 \u00f6l\u00e7ekleyin.\ndef scale_bbox(row, bboxes):\n    # \u00d6l\u00e7eklendirme fakt\u00f6r\u00fcn\u00fc al\n    scale_x = IMG_SIZE\/row.dim1\n    scale_y = IMG_SIZE\/row.dim0\n    \n    scaled_bboxes = []\n    for bbox in bboxes:\n        x = int(np.round(bbox[0]*scale_x, 4))\n        y = int(np.round(bbox[1]*scale_y, 4))\n        x1 = int(np.round(bbox[2]*(scale_x), 4))\n        y1= int(np.round(bbox[3]*scale_y, 4))\n\n        scaled_bboxes.append([x, y, x1, y1]) # xmin, ymin, xmax, ymax\n        \n    return scaled_bboxes","6f1ce5c0":"# S\u0131n\u0131rlay\u0131c\u0131 kutular\u0131 YOLO format\u0131nda d\u00f6n\u00fc\u015ft\u00fcr\u00fcn.\ndef get_yolo_format_bbox(img_w, img_h, bboxes):\n    yolo_boxes = []\n    for bbox in bboxes:\n        w = bbox[2] - bbox[0] # xmax - xmin\n        h = bbox[3] - bbox[1] # ymax - ymin\n        xc = bbox[0] + int(np.round(w\/2)) # xmin + width\/2\n        yc = bbox[1] + int(np.round(h\/2)) # ymin + height\/2\n        \n        yolo_boxes.append([xc\/img_w, yc\/img_h, w\/img_w, h\/img_h]) # x_center y_center geni\u015flik y\u00fcksekli\u011fi\n    \n    return yolo_boxes","02ae733e":"# S\u0131n\u0131rlay\u0131c\u0131 kutu i\u00e7in txt dosyalar\u0131n\u0131 haz\u0131rlay\u0131n\nfor i in tqdm(range(len(df))):\n    row = df.loc[i]\n    # resim kimli\u011fini al\n    img_id = row.id\n    # B\u00f6l\u00fcnmek\n    split = row.split\n    # G\u00f6r\u00fcnt\u00fc d\u00fczeyinde etiket al\u0131n\n    label = row.image_level\n    \n    if row.split=='train':\n        file_name = f'tmp\/covid\/labels\/train\/{row.id}.txt'\n    else:\n        file_name = f'tmp\/covid\/labels\/valid\/{row.id}.txt'\n        \n    \n    if label=='opacity':\n         # kutular\u0131 al\n        bboxes = get_bbox(row)\n        # S\u0131n\u0131rlay\u0131c\u0131 kutular\u0131 \u00f6l\u00e7eklendir\n        scale_bboxes = scale_bbox(row, bboxes)\n        # YOLOv5 format\u0131\n        yolo_bboxes = get_yolo_format_bbox(IMG_SIZE, IMG_SIZE, scale_bboxes)\n        \n        with open(file_name, 'w') as f:\n            for bbox in yolo_bboxes:\n                bbox = [1]+bbox\n                bbox = [str(i) for i in bbox]\n                bbox = ' '.join(bbox)\n                f.write(bbox)\n                f.write('\\n')","84a1314d":"%cd tmp\/yolov5\/","22e4d0a0":"!python train.py --img {IMG_SIZE} \\\n                 --batch {BATCH_SIZE} \\\n                 --epochs {EPOCHS} \\\n                 --data data.yaml \\\n                 --weights yolov5s.pt \\\n                --freeze 13","476a3804":"TEST_PATH = '\/kaggle\/input\/siim-covid19-resized-to-256px-jpg\/test\/' # test resimlerinin oldu\u011fu yer","01285f46":"MODEL_PATH = '.\/runs\/train\/exp\/weights\/best.pt' #modelin oldu\u011fu yer","40dfc908":"!python detect.py --weights {MODEL_PATH} \\\n                  --source {TEST_PATH} \\\n                  --img {IMG_SIZE} \\\n                  --conf 0.281 \\\n                  --iou-thres 0.5 \\\n                  --max-det 3 \\\n                  --save-txt \\\n                  --save-conf","d4eb4e01":"import glob\n#birka\u00e7 resmi diziye alma\npaths = []\nfor i in glob.glob(\".\/runs\/detect\/exp2\/\"+\"*.jpg\")[200:250]:\n    paths.append(i)","dc5ed3ea":"paths","179e4afa":"plt.figure(figsize=(16,10))\nfor i in range(49):\n    plt.subplot(7,7,(i+1))\n    plt.imshow(cv2.imread(paths[i]))","a8eb9c81":"### \ud83c\udf58 E\u011fitim-do\u011frulama b\u00f6lmesi","ebabec26":"## \ud83c\udf5a Prepare Required Folder Structure\nModel i\u00e7in gerekli olan veri seti dosya yap\u0131s\u0131 a\u015fa\u011f\u0131daki gibidir:\n<br>\n``` \n\/parent_folder\n    \/dataset\n         \/images\n             \/train\n             \/val\n         \/labels\n             \/train\n             \/val\n    \/yolov5\n```\n\nYolu covid olarak isimnlendirdim","68fd3a5a":"> **YOLOv5 i\u00e7in Koordineli S\u0131n\u0131rlama Kutusu Haz\u0131rlay\u0131n\n\nS\u0131n\u0131rlay\u0131c\u0131 kutuya\/kutulara sahip her g\u00f6r\u00fcnt\u00fc i\u00e7in, a\u015fa\u011f\u0131da g\u00f6sterilen bi\u00e7imde g\u00f6r\u00fcnt\u00fcyle ayn\u0131 ada sahip bir .txt dosyas\u0131 olu\u015fturulacakt\u0131r:\n1.  Nesne ba\u015f\u0131na bir sat\u0131r\n2. Her sat\u0131r, s\u0131n\u0131f x_center y_center geni\u015flik y\u00fckseklik bi\u00e7imidir.\n3. Kutu koordinatlar\u0131 normalle\u015ftirilmi\u015f xywh format\u0131nda olmal\u0131d\u0131r (0 - 1 aras\u0131). x_center ve geni\u015fli\u011fi g\u00f6r\u00fcnt\u00fc geni\u015fli\u011fine ve y_center ve y\u00fcksekli\u011fi g\u00f6r\u00fcnt\u00fc y\u00fcksekli\u011fine b\u00f6lerek piksel cinsinden kutularla normalle\u015ftirebiliriz.\n4. Class numbers are zero-indexed (start from 0).","e5691ba6":"## Ama\u00e7 \nAkci\u011fer g\u00f6r\u00fcnt\u00fcleri verilen  veri setini YoloV5 modeli kullan\u0131larak transfer \u00f6\u011frenme yard\u0131m\u0131yla vir\u00fcs\u00fcn hangi b\u00f6lgede oldu\u011funun i\u015faretlenmesi yapay zeka ile yap\u0131alcakt\u0131r.\n\n\n## \ud83d\uddbc\ufe0f YoloV5 NED\u0130R ?\nYoloV5 algoritmas\u0131 nesneleri kutucuk i\u00e7erisine alarak koordinatlar\u0131n\u0131 ve s\u0131nf\u0131n\u0131 d\u00f6nd\u00fcren bir nesne tespit algoritmas\u0131d\u0131r. Coco dataseti ile e\u011fitilmi\u015ftir. Do\u011frulu\u011funun ve performans\u0131n\u0131n y\u00fcksek olmas\u0131 sebebiyle tercih ettim.\n \n\nA\u015famalar:\n\n\u2714\ufe0f Gerekli dosya yap\u0131s\u0131n\u0131 olu\u015ftur <br>\n\u2714\ufe0f Bounding box (kutucuklar\u0131) yolov5 i\u00e7in uygun formata getir   <br>\n\u2714\ufe0f Hafif bir YoloV5 modeliyle e\u011fitim yap <br>\n\u2714\ufe0f Sonnu\u00e7lar\u0131 incele <br>\n\u2714\ufe0f Test g\u00f6r\u00fcnt\u00fclerine bak ve  g\u00f6rselle\u015ftir <br>","dce509e3":"E\u011fitim ve do\u011frulama g\u00f6r\u00fcnt\u00fclerini tutaca\u011f\u0131m klas\u00f6rleri olu\u015fturdum (train-valid). <br>\nAyn\u0131 zamanda etiklleri ve bounding box bbilgilerini tutmak i\u00e7in ayr\u0131 bir olark klas\u00f6r olu\u015fturdum","4fd31782":"# \u2600\ufe0f \u0130mportlar ve kurulum\n\nYoloV5 dosya yap\u0131s\u0131na g\u00f6re mimari a\u015fa\u011f\u0131daki gibi olmal\u0131d\u0131r. \n\n```\n\/parent_folder\n    \/dataset\n         \/images\n         \/labels\n    \/yolov5\n```\n\n* \/temp dizini olu\u015fturaca\u011f\u0131z <br>\n* YoloV5 indirilip gerekli ba\u011f\u0131ml\u0131l\u0131klar kurulacak <br>","31cd1ee5":"# Create .YAML file\ndata.yaml,  veri seti yap\u0131land\u0131rma dosyas\u0131d\u0131r.\n1. otomatik indirme i\u00e7in bir \"iste\u011fe ba\u011fl\u0131\" indirme komutu\/URL'si\n2. e\u011fitim g\u00f6r\u00fcnt\u00fcleri klas\u00f6r\u00fcn\u00fcn yolu (veya e\u011fitim g\u00f6r\u00fcnt\u00fclerinin listesini i\u00e7eren bir *.txt dosyas\u0131n\u0131n yolu)\n3. do\u011frulama g\u00f6r\u00fcnt\u00fcleri dizininin yolu (veya do\u011frulama g\u00f6r\u00fcnt\u00fclerinin listesini i\u00e7eren bir *.txt dosyas\u0131n\u0131n yolu)\n4. s\u0131n\u0131f say\u0131s\u0131\n5. s\u0131n\u0131f isimleri listesi","c45986d8":"# E\u011fitim","4e0a4819":"## Test sonu\u00e7lar\u0131","170e85cf":"### Sabitlerin tan\u0131mlanmas\u0131","100e566b":"## \ud83d\udd28 Veri Setinin Haz\u0131rlanmas\u0131 \u00b6 \nYoloV5 nesne tepsiti i\u00e7in \u00f6nemli b\u00f6l\u00fcmd\u00fcr. Dizin yap\u0131s\u0131 ve bounding box (kare kutu) YoloV5 modelini e\u011fitmek i\u00e7in uygun formatta olmal\u0131d\u0131r\n\nBen veri setini  yeniden boyutland\u0131rarak kullan\u0131yorum. Resimlerin boyutunu 256x256 format\u0131na getiriyorum.\n\n<ol>\n    <li> train-validation ( e\u011fitim-do\u011frulama ) b\u00f6lmesi <\/li> \n        <li> Gerekli \/dataset klas\u00f6r yap\u0131s\u0131n\u0131 ve klas\u00f6rlerdeki g\u00f6r\u00fcnt\u00fcleri yarat <\/li>  \n        <li> Gerekli \/dataset klas\u00f6r yap\u0131s\u0131n\u0131 ve klas\u00f6rlerdeki g\u00f6r\u00fcnt\u00fcleri yarat <\/li>  \n        <li> YoloV5 modelini e\u011fitmek i\u00e7in data.yaml dosyas\u0131n\u0131 olu\u015ftur <\/li>  \n            <li> YoloV5 format\u0131 i\u00e7in  bounding box (kare kutucuklar\u0131) yarat <\/li>  \n\n\n<\/ol>","2989397e":"## Test","d174a8b4":"G\u00f6r\u00fcnt\u00fcleri kopyalay\u0131p yeni dizinlere yap\u0131\u015ft\u0131rd\u0131m"}}