{"cell_type":{"d72a8aa7":"code","cb9c3762":"code","3815df9e":"code","d1591920":"code","1d7fdba0":"code","9451d43f":"code","650685b4":"code","57a14ae6":"code","44fcaf32":"code","31717a16":"code","79649ec3":"code","a0e65bce":"code","8d2f8d8d":"code","c210d0c6":"code","b9f7cc25":"code","c9660e63":"code","dd97074b":"code","d1e397cf":"code","d995868d":"code","a8ca2018":"code","924ec3a3":"code","8fcdff41":"code","9f9f07d4":"code","aef23441":"code","a9fb8f69":"code","f8c05d7a":"code","ccb48696":"code","94035877":"code","371a2e0e":"code","a4ecc76b":"code","cdd88531":"code","6cc4edaf":"code","63722dff":"code","56448f7e":"code","61e51958":"code","8dd507d2":"markdown","8ed28ae7":"markdown","9a156ca2":"markdown","d951af6c":"markdown","3f8977d6":"markdown","a3dbdb74":"markdown","e0fea4cb":"markdown","4adfddd4":"markdown","1f2c4809":"markdown","fef7d43d":"markdown","1aaf9ec9":"markdown","a4752065":"markdown","2d78207c":"markdown","ecd5f2f3":"markdown","9f05b398":"markdown","f8946c9c":"markdown","4ee96e2d":"markdown"},"source":{"d72a8aa7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb9c3762":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib as mpl\n\nfrom scipy.stats import mode\nfrom matplotlib import pyplot as plt\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","3815df9e":"DATASET = '..\/input\/pokemons-and-there-stats\/pokemon.csv'\nPREPARED_DATASET = '.\/prepared_pokemon.csv'","d1591920":"df = pd.read_csv(DATASET, sep=',')\ndf.head(10)","1d7fdba0":"df.tail(5)","9451d43f":"df.info()","650685b4":"round(df.describe(), 2)","57a14ae6":"#\u041c\u043e\u0434\u0430\nprint('Total', df.Total.mode(), sep='\\n'),\nprint('HP', df.HP.mode(), sep='\\n'),\nprint('Attack', df.Attack.mode(), sep='\\n'),\nprint('Defence', df.Defence.mode(), sep='\\n'),\nprint('Sp_attack', df.Sp_attack.mode(), sep='\\n'),\nprint('Sp_defence', df.Sp_defence.mode(), sep='\\n'),\nprint('Speed', df.Speed.mode(), sep='\\n')\n","44fcaf32":"#\u041c\u0435\u0434\u0438\u0430\u043d\u0430 -> Quantile = 50%\nprint('Total: ', df.Total.median()),\nprint('HP: ', df.HP.median()),\nprint('Attack: ', df.Attack.median()),\nprint('Defence: ', df.Defence.median()),\nprint('Sp_attack: ', df.Sp_attack.median()),\nprint('Sp_defence: ', df.Sp_defence.median()),\nprint('Speed: ', df.Speed.median())\n","31717a16":"plt.figure(figsize=(12,10), dpi=80)\nsns.heatmap(df.corr(), xticklabels=df.corr().columns, yticklabels=df.corr().columns, cmap='RdYlGn', center=0, annot=True)\n\nplt.title('Correlogram of pokemon', fontsize=22)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\n\nplt.show()","79649ec3":"plt.figure(figsize=(7,5), dpi=80)\nsns.kdeplot(df['HP'], shade=True, color='dodgerblue', alpha=.2)\n\nplt.axvline(x = np.quantile(df.HP, q=0.25), color='red', linestyle='-.', label='Quantile = 25%') # Quantile=50\nplt.axvline(x = np.quantile(df.HP, q=0.75), color='red', linestyle='--', label='Quantile = 75%') # Quantile=82\nplt.axvline(x = df['HP'].median(), color='b', label='Median') # Median = 68\n\nplt.legend()\nplt.show()\n#\u041f\u043e \u043e\u0441\u0438 \u0423 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f (\u0438\u043b\u0438 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u0433\u043e \u0438\u043b\u0438 \u0438\u043d\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0438)","a0e65bce":"Group_HP = \"\"\ndf['Group_HP'] = Group_HP\ndf['Group_HP'] = np.where(df.HP <= np.quantile(df.HP, q=0.25), 'Weak',\n                         (np.where(df.HP<=np.quantile(df.HP, q=0.75), 'Average', 'Strong')))\ndf","8d2f8d8d":"# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u043a\u0430\u0437\u0430 \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u0435\u0439 \u0438 \u043c\u0435\u0434\u0438\u0430\u043d \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0435\ndef show_line(n, a):     # n - \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446, \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443 df.HP\n    z = a.axvline(x = np.quantile(n, q=0.25), color='r', linestyle='-.', label='Quantile = 25%')\n    b = a.axvline(x = np.quantile(n, q=0.75), color='r', linestyle='--', label='Quantile = 75%')\n    c = a.axvline(x = n.median(), color='b', label='Median')\n    return z, b, c","c210d0c6":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(5,3), dpi=100)\nax1, ax2 = ax.flatten()\nfig.set_size_inches(9, 4)\nfig.subplots_adjust(wspace=0.3, hspace=0.3)\n#Attack\nsns.kdeplot(df['Attack'], ax=ax1, shade=True, color='magenta', alpha=.2)\nshow_line(df.Attack, ax1)\nax1.legend()\n#Defence\nsns.kdeplot(df['Defence'], ax=ax2, shade=True, color='springgreen', alpha =0.2)\nshow_line(df.Defence, ax2)\nax2.legend()\n\nplt.show()","b9f7cc25":"#\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f\ndef add_col(x):          #x - \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430, \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443 df['Attack']\n    a = np.where(x <= np.quantile(x, q=0.25), 'Weak',\n                         (np.where(x<=np.quantile(x, q=0.75), 'Average', 'Strong')))\n    return a   ","c9660e63":"#\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u044e \u043d\u043e\u0432\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438\ndf['Group_Attack'] = add_col(df['Attack'])\ndf['Group_Defence'] = add_col(df['Defence'])","dd97074b":"#\u0424\u043e\u0440\u043c\u0438\u0440\u0443\u044e \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0434\u043b\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\ndf['Group'] = df['Group_HP'].str[0] + df['Group_Attack'].str[0] + df['Group_Defence'].str[0]\ndf","d1e397cf":"count_grp = df.groupby('Group')['Name'].count()\ncount_grp","d995868d":"def autolabel(rects, labels=None, height_factor=1.01): # \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0435\n    for i, rect in enumerate(rects):\n        height = rect.get_height()\n        if labels is not None:\n            try:\n                label = labels[i]\n            except (TypeError, KeyError):\n                label = ' '\n        else:\n            label = '%d' % int(height)\n        ax.text(rect.get_x() + rect.get_width()\/2., height_factor*height,\n                '{}'.format(label),\n                ha='center', va='bottom')\n\nplt.figure(figsize=(10, 10), dpi=80)\ncolor_rectangle = np.random.rand(7, 3)\nax = count_grp.plot(kind='bar', fontsize=12, color = color_rectangle)\nax.set_title('The number of Pokemon in the group')\nautolabel(ax.patches, count_grp, height_factor=1.01)","a8ca2018":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(4,2), dpi=100)\nax1, ax2 = ax.flatten()\nfig.set_size_inches(9, 4)\nfig.subplots_adjust(wspace=0.3, hspace=0.3)\n#Sp_attack\nsns.kdeplot(df.Sp_attack,ax=ax1, shade=True, color='g', alpha=.15)\nshow_line(df.Sp_attack, ax1)\nax1.legend()\n#Sp_defence\nsns.kdeplot(df.Sp_defence,ax=ax2, shade=True, color='gold', alpha=.3)\nshow_line(df.Sp_defence, ax2)\nax2.legend()\n\nplt.show()","924ec3a3":"df['Group_sp_a'] = add_col(df['Sp_attack'])\ndf['Group_sp_d'] = add_col(df['Sp_defence'])\ndf","8fcdff41":"plt.figure(figsize=(7,5), dpi=80)\nsns.kdeplot(df['Speed'], shade=True, color='darkgray', alpha=.3)\nshow_line(df.Speed, plt)\n\nplt.legend()\nplt.show()","9f9f07d4":"Group_Speed = \"\"\ndf['Group_Speed'] = Group_Speed\ndf['Group_Speed'] = np.where(df.Speed <= np.quantile(df.Speed, q=0.25), 'Slow',\n                         (np.where(df.Speed<=np.quantile(df.Speed, q=0.75), 'Average', 'Fast')))\ndf","aef23441":"#\u0421\u0438\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u043a\u0435\u043c\u043e\u043d \u0438\u0437 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438.\ndf[df.Name == 'Mega Eternatus']","a9fb8f69":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d\u044b \u0441 \u0441\u0438\u043b\u044c\u043d\u044b\u043c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\u043c\ndf[df.HP == 255]","f8c05d7a":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d \u0441 \u0441\u0438\u043b\u044c\u043d\u043e\u0439 \u0430\u0442\u0430\u043a\u043e\u0439\ndf[df.Attack == 190]","ccb48696":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d \u0441 \u0441\u0438\u043b\u044c\u043d\u043e\u0439 \u0437\u0430\u0449\u0438\u0442\u043e\u0439\ndf[df.Defence == 250]","94035877":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d \u0441 \u0441\u0438\u043b\u044c\u043d\u043e\u0439 \u0441\u043f\u0435\u0446.\u0430\u0442\u0430\u043a\u043e\u0439\ndf[df.Sp_attack == 194]","371a2e0e":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d \u0441 \u0441\u0438\u043b\u044c\u043d\u043e\u0439 \u0441\u043f\u0435\u0446.\u0437\u0430\u0449\u0438\u0442\u043e\u0439\ndf[df.Sp_defence== 250]","a4ecc76b":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0432 \u0430\u0442\u0430\u043a\u0435\ndf[df.Speed== 200]","cdd88531":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d \u0441\u043e \u0441\u043b\u0430\u0431\u044b\u043c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\u043c\ndf[df.HP == 1]","6cc4edaf":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d\u044b \u0441\u043e \u0441\u043b\u0430\u0431\u043e\u0439 \u0430\u0442\u0430\u043a\u043e\u0439 \u0438 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \ndf[df.Attack == 5]","63722dff":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d\u044b \u0441\u043e \u0441\u043b\u0430\u0431\u043e\u0439 \u0441\u043f\u0435\u0446.\u0430\u0442\u0430\u043a\u043e\u0439\ndf[df.Sp_attack == 10]","56448f7e":"#\u041f\u043e\u043a\u0435\u043c\u043e\u043d\u044b \u0441\u043e \u0441\u043b\u0430\u0431\u043e\u0439 \u0441\u043f\u0435\u0446.\u0437\u0430\u0449\u0438\u0442\u043e\u0439\ndf[df.Sp_defence == 20]","61e51958":"# \u041f\u043e\u043a\u0435\u043c\u043e\u043d\u044b \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u0435 \u0432 \u0430\u0442\u0430\u043a\u0435\ndf[df.Speed == 5]","8dd507d2":"### ***\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 (Sp_attack \u0438 Sp_defence)*** <a class='subtitle' id='sp_features'>","8ed28ae7":"## ***\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445*** <a class='heading' id='loading_data'>","9a156ca2":"**\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435**\n\n[\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438](#descr)\n\n 1.[ \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445](#loading_data)\n \n 2.[ \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430](#stats)\n   * [ \u0414\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438](#\u0441orrel_chart)\n   * [ HP](#HP)\n   * [ Attack \u0438 Defence](#attack_defence)\n   * [ \u0413\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 \u0432 \u0433\u0440\u0443\u043f\u043f\u0430\u0445](#histogram)\n   * [ \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 (Sp_attack \u0438 Sp_defence)](#sp_features)\n   * [ Speed](#speed)\n\n   \n3.[ \u0412\u044b\u0432\u043e\u0434](#conclusion)","d951af6c":"## **\u0421\u0422\u0410\u0422\u0418\u0421\u0422\u0418\u041a\u0410**","3f8977d6":" \u0420\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 \u043d\u0430 3 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0443 HP (\u0417\u0434\u043e\u0440\u043e\u0432\u044c\u0435):\n\n1. \u0421\u043b\u0430\u0431\u0430\u044f (**Weak**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u043b\u0430\u0431\u044b\u043c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\u043c (\u043e\u0442 0 \u0434\u043e 25%);\n2. \u0421\u0440\u0435\u0434\u043d\u044f\u044f (**Average**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u0440\u0435\u0434\u043d\u0438\u043c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\u043c (\u043e\u0442 25% \u0434\u043e 75%);\n3. \u0421\u0438\u043b\u044c\u043d\u0430\u044f (**Strong**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u0438\u043b\u044c\u043d\u044b\u043c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\u043c (\u043e\u0442 75% \u0438 \u0432\u044b\u0448\u0435).","a3dbdb74":"## ***\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430*** <a class='heading' id='stats'>","e0fea4cb":"\u0418 \u0440\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 \u043d\u0430 3 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0443 Speed (\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c):\n\n1. \u041c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u0439 (**Slow**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043c\u0435\u044e\u0442 \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u0443\u044e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432 \u0430\u0442\u0430\u043a\u0435 (\u043e\u0442 0 \u0434\u043e 25%);\n2. \u0421\u0440\u0435\u0434\u043d\u044f\u044f (**Average**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u0440\u0435\u0434\u043d\u044e\u044e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432 \u0430\u0442\u0430\u043a\u0435 (\u043e\u0442 25% \u0434\u043e 75%);\n3. \u0411\u044b\u0441\u0442\u0440\u044b\u0435 (**Fast**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043c\u0435\u044e\u0442 \u0431\u044b\u0441\u0442\u0440\u0443\u044e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432 \u0430\u0442\u0430\u043a\u0435 (\u043e\u0442 75% \u0438 \u0432\u044b\u0448\u0435).","4adfddd4":"### ***Speed*** <a class='subtitle' id='speed'>","1f2c4809":"### ***Attack \u0438 Defence*** <a class='subtitle' id='attack_defence'>\n \u0422\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u0438 c Attack \u0438 Defence.\n  \n","fef7d43d":"### ***\u0413\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 \u0432 \u0433\u0440\u0443\u043f\u043f\u0430\u0445*** <a class='subtitle' id='histogram'>","1aaf9ec9":"\u0418 \u0440\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 \u043d\u0430 3 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0443 Defence (\u0417\u0430\u0449\u0438\u0442\u0430):\n\n1. \u0421\u043b\u0430\u0431\u0430\u044f (**Weak**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u043b\u0430\u0431\u043e\u0439 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 (\u043e\u0442 0 \u0434\u043e 50);\n2. \u0421\u0440\u0435\u0434\u043d\u044f\u044f (**Average**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u0440\u0435\u0434\u043d\u0435\u0439 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 (\u043e\u0442 51 \u0434\u043e 90);\n3. \u0421\u0438\u043b\u044c\u043d\u0430\u044f (**Strong**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u0438\u043b\u044c\u043d\u043e\u0439 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 (\u043e\u0442 91 \u0438 \u0432\u044b\u0448\u0435).","a4752065":"### ***HP*** <a class='subtitle' id='HP'>   ","2d78207c":"### ***\u0414\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438*** <a class='subtitle' id='\u0441orrel_chart'>","ecd5f2f3":"## ***\u0412\u044b\u0432\u043e\u0434*** <a class='heading' id='conclusion'>","9f05b398":"  \u0420\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 \u043d\u0430 3 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0443 Attack (\u0410\u0442\u0430\u043a\u0430):\n\n1. \u0421\u043b\u0430\u0431\u0430\u044f (**Weak**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u043b\u0430\u0431\u044b\u043c \u0443\u0434\u0430\u0440\u043e\u043c (\u043e\u0442 0 \u0434\u043e 55);\n2. \u0421\u0440\u0435\u0434\u043d\u044f\u044f (**Average**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u0440\u0435\u0434\u043d\u0438\u043c \u0443\u0434\u0430\u0440\u043e\u043c (\u043e\u0442 56 \u0434\u043e 100);\n3. \u0421\u0438\u043b\u044c\u043d\u0430\u044f (**Strong**) - \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u0438\u043b\u044c\u043d\u044b\u043c \u0443\u0434\u0430\u0440\u043e\u043c (\u043e\u0442 101 \u0438 \u0432\u044b\u0448\u0435).","f8946c9c":"## ***\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438*** <a class='heading' id='descr'>\n**Name**: \u0418\u043c\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u0430\n\n**Total**: \u0441\u0443\u043c\u043c\u0430 \u0432\u0441\u0435\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0445\u043e\u0434\u044f\u0442 \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e, \u043e\u0431\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043e \u0442\u043e\u043c, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0438\u043b\u0435\u043d \u043f\u043e\u043a\u0435\u043c\u043e\u043d\n\n**HP**: \u0445\u0438\u0442-\u043f\u043e\u0439\u043d\u0442\u044b, \u0438\u043b\u0438 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0443\u0440\u043e\u043d\u0430 \u043f\u043e\u043a\u0435\u043c\u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0434\u0435\u0440\u0436\u0430\u0442\u044c, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u0443\u043f\u0430\u0441\u0442\u044c \u0432 \u043e\u0431\u043c\u043e\u0440\u043e\u043a\n\n**Attack**: \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u0430\u0442\u0430\u043a (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440. \u0426\u0430\u0440\u0430\u043f\u0438\u043d\u0430, \u0423\u0434\u0430\u0440)\n\n**Defence**: \u0441\u043e\u043f\u0440\u043e\u0442\u0438\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u043c\u0443 \u0443\u0440\u043e\u043d\u0443 \u043e\u0442 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u0430\u0442\u0430\u043a (\u0437\u0430\u0449\u0438\u0442\u0430)\n\n**SP_Atk**: \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0430\u0442\u0430\u043a\u0430, \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0430\u0442\u0430\u043a (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0433\u043d\u0435\u043d\u043d\u044b\u0439 \u0432\u0437\u0440\u044b\u0432, \u043f\u0443\u0437\u044b\u0440\u044c\u043a\u043e\u0432\u044b\u0439 \u043b\u0443\u0447)\n\n**SP_Def**: \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a \u0431\u0430\u0437\u043e\u0432\u043e\u043c\u0443 \u0443\u0440\u043e\u043d\u0443 \u043e\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0430\u0442\u0430\u043a\n\n**Speed**: \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043a\u0430\u043a\u043e\u0439 \u043f\u043e\u043a\u0435\u043c\u043e\u043d \u0430\u0442\u0430\u043a\u0443\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u043c \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0440\u0430\u0443\u043d\u0434\u0435","4ee96e2d":"\u041e\u0442\u043c\u0435\u0442\u0438\u043c \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 \u0438\u0437 \u0441\u043b\u0430\u0431\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u044b (WWW) \u0438 \u0438\u0437 \u0441\u0438\u043b\u044c\u043d\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u044b (SSS). \u0414\u0440\u0443\u0433\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u0441 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u0430\u043c\u0438, \u043a\u0430\u043a \u0438 \u0441\u0430\u043c\u0438\u0445 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432, \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e \u043f\u043e\u0434 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0437\u0430\u0434\u0430\u0447\u0443.\n\n*\u0421\u0430\u043c\u0430\u044f \u0441\u0438\u043b\u044c\u043d\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 - SSS (37 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432)*\n\n**Mega Eternatus** - \u0441\u0438\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0439 \u043f\u043e \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044e, \u043f\u043e \u0437\u0430\u0449\u0438\u0442\u0435 \u0438 \u043f\u043e \u0441\u043f\u0435\u0446.\u0437\u0430\u0449\u0438\u0442\u0435. \u041d\u043e \u0432 \u0430\u0442\u0430\u043a\u0435, \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u0438 \u0438 \u0441\u043f\u0435\u0446.\u0430\u0442\u0430\u043a\u0435, \u0435\u0433\u043e \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0442:\n\n   **Mega Mewtwo** - \u0441\u0430\u043c\u0430\u044f \u0441\u0438\u043b\u044c\u043d\u0430\u044f \u0430\u0442\u0430\u043a\u0430 (\u043d\u043e \u0437\u0430\u0449\u0438\u0442\u0430 \u0438 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435 \u043d\u0430 \u0431\u043b\u0438\u0436\u0435 \u043a \u0441\u0440\u0435\u0434\u043d\u0435\u043c\u0443 \u0443\u0440\u043e\u0432\u043d\u044e), c\u043f\u0435\u0446.\u0430\u0442\u0430\u043a\u0430 \u043c\u043e\u0449\u043d\u0430\u044f.\n   **Mega Mewtwo X** - \u0441\u0430\u043c\u0430\u044f \u0441\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043f\u0435\u0446.\u0430\u0442\u0430\u043a\u0430. \u0432 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u043c \u0441\u0445\u043e\u0436 \u0441 Mega Mewtwo.\n   **Regieleki** - \u0431\u044b\u0441\u0442\u0440\u0435\u0435 \u0432\u0441\u0435\u0445 \u0430\u0442\u0430\u043a\u0443\u0435\u0442.\n\u0422\u0430\u043a\u0436\u0435 **Blissey** \u0438\u043c\u0435\u0435\u0442 \u0440\u0430\u0432\u043d\u043e\u0441\u0438\u043b\u044c\u043d\u043e\u0435 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435 \u043a\u0430\u043a \u0438 Mega Eternatus.\n   \n*\u0421\u0430\u043c\u044b\u0435 \u0441\u043b\u0430\u0431\u044b\u0435 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043f\u043f\u0435 WWW (103 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u0430)*\n\n   **Shedinja** \u0438\u043c\u0435\u0435\u0442 \u0441\u0430\u043c\u043e\u0435 \u0441\u043b\u0430\u0431\u043e\u0435 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435, \u043d\u043e \u0430\u0442\u0430\u043a\u0430 \u0443 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u0430 \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0443\u0440\u043e\u0432\u043d\u0435.\n   \u0423 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u043e\u0432 **Happiny** \u0438 **Chansey** \u0441\u043b\u0430\u0431\u044b\u0435 \u0430\u0442\u0430\u043a\u0438 \u0438 \u0441\u043b\u0430\u0431\u0430\u044f \u0437\u0430\u0449\u0438\u0442\u0430, \u043d\u043e \u043e\u0431\u0430 \u043f\u043e\u043a\u0435\u043c\u043e\u043d\u0430 \u0438\u043c\u0435\u044e\u0442 \u0432\u044b\u0441\u043e\u043a\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f (\u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e Chansey). \u0422\u0430\u043a\u0436\u0435 Chansey \u0438\u043c\u0435\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0441\u043f\u0435\u0446.\u0437\u0430\u0449\u0438\u0442\u0443."}}