{"cell_type":{"dad8cfe5":"code","051ccccf":"code","97a6facb":"code","74864c0e":"code","ebaca5a4":"code","a6c91306":"code","66d3760f":"code","4d32c1cd":"code","6dd18a19":"code","a78fe151":"code","e3554dbc":"code","0d012821":"code","cdf78d57":"code","b8a372c3":"code","23889c59":"code","5e2992d4":"code","bef86cad":"code","2dfb17bf":"code","a6d3ceda":"code","8a3c7f76":"code","914b5d6c":"code","923c7c81":"code","591652d3":"code","55cabf21":"code","066329bf":"code","d7970500":"code","e31e91e3":"code","4b23573e":"code","3d6a07e6":"code","8e1f5892":"code","d7ca9bf3":"code","052d2b13":"code","029de440":"code","6650720e":"code","3672990f":"code","b4ba3eb7":"code","34461c28":"code","1bae09a1":"code","6553b0df":"code","47b1fa2f":"code","96a20f5d":"code","52f82a93":"code","20d45a84":"code","ce0ab647":"code","9cef82c7":"code","818c7431":"code","868065cc":"code","ad007b80":"code","c7042cb4":"code","49b11c82":"code","6c55d738":"code","8c90a2cf":"code","13fe9e38":"code","071ea4e7":"code","8118aa1b":"code","d3444fbd":"code","c1334ca8":"code","8d3cb294":"code","f3dfd4e4":"code","ca46c3cc":"code","96dfa92c":"code","1423042d":"code","c0a85ab1":"code","55530ad4":"code","85fd803d":"code","92c232bc":"code","85682982":"code","00de595a":"code","9014fac0":"code","082077c1":"code","ba68fa7c":"code","6903d52d":"code","38270ece":"code","cf596825":"code","3c63dea2":"code","57b76341":"code","3ad7d812":"code","87c05b17":"code","1f17238a":"code","522f67c7":"code","0b67dc2f":"code","18e52d6f":"code","4a3fd038":"code","a5fbd60c":"code","1c580937":"code","03e52add":"code","372d4294":"code","c831c40e":"code","0bef48a5":"code","f6924050":"code","07ff79fd":"code","56617a69":"code","fd94640f":"code","92f37e93":"markdown","de1c932d":"markdown","a2170dc4":"markdown","23e3ef66":"markdown","9429b4b1":"markdown","6bfdf321":"markdown","76479a18":"markdown","29bb0739":"markdown","c8c1662d":"markdown","9e16a2b5":"markdown","d587d046":"markdown","eff621ed":"markdown","ce7ea0cd":"markdown","b197d9d5":"markdown","fcdaab8e":"markdown"},"source":{"dad8cfe5":"!pip install seaborn --upgrade","051ccccf":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn import svm\nfrom sklearn import metrics","97a6facb":"df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","74864c0e":"Y = df['target']","ebaca5a4":"X = df.drop(columns = 'target')","a6c91306":"seed = 1000","66d3760f":"train_X, val_X, train_Y, val_Y = train_test_split(X,Y, random_state = 1000, test_size = 0.20)","4d32c1cd":"rfc = RandomForestClassifier(random_state = seed)","6dd18a19":"rfc.fit(train_X, train_Y)","a78fe151":"rfc_pred = rfc.predict(val_X)","e3554dbc":"metrics.confusion_matrix(val_Y,rfc_pred)","0d012821":"sns.heatmap(metrics.confusion_matrix(val_Y,rfc_pred), annot = True)\nplt.ylim(0,2)","cdf78d57":"metrics.f1_score(val_Y, rfc_pred)","b8a372c3":"metrics.accuracy_score(val_Y, rfc_pred)","23889c59":"abc = AdaBoostClassifier(random_state = seed)","5e2992d4":"abc.fit(train_X, train_Y)","bef86cad":"abc_pred = abc.predict(val_X)","2dfb17bf":"metrics.confusion_matrix(val_Y, abc_pred)","a6d3ceda":"sns.heatmap(metrics.confusion_matrix(val_Y,abc_pred), annot = True)\nplt.ylim(0,2)","8a3c7f76":"metrics.f1_score(val_Y, abc_pred)","914b5d6c":"metrics.accuracy_score(val_Y, abc_pred)","923c7c81":"from sklearn.model_selection import GridSearchCV","591652d3":"rfc_param = {'n_estimators':[100,120,150,200], 'max_leaf_nodes':[2,3,4,5,8,10,12,15],\n             'max_depth':[2,4,6,8,10,12,14,15]}","55cabf21":"gs_rfc = GridSearchCV(rfc, rfc_param, scoring = 'f1', cv = 10)","066329bf":"gs_rfc.fit(X,Y)","d7970500":"gs_rfc.best_params_","e31e91e3":"results_rfc = pd.DataFrame(gs_rfc.cv_results_)","4b23573e":"results_rfc = results_rfc[['rank_test_score', 'mean_test_score', 'params']]","3d6a07e6":"results_rfc.sort_values(by = 'rank_test_score')","8e1f5892":"abc_param = {'n_estimators':[1,3,5,6,8,10,12,14,15,17],\n            'learning_rate':[0.1,0.25,0.40,0.55,0.70,0.85,1]}","d7ca9bf3":"gs_abc = GridSearchCV(abc, abc_param, scoring = 'f1', cv = 10)","052d2b13":"gs_abc.fit(X,Y)","029de440":"gs_abc.best_params_","6650720e":"results_abc = pd.DataFrame(gs_abc.cv_results_)","3672990f":"results_abc = results_abc[['rank_test_score','mean_test_score','params']]","b4ba3eb7":"results_abc.sort_values(by = 'rank_test_score')","34461c28":"from sklearn.preprocessing import StandardScaler","1bae09a1":"X.describe()","6553b0df":"scaler = StandardScaler()","47b1fa2f":"X_scaled = scaler.fit_transform(X)","96a20f5d":"teste = pd.DataFrame(X_scaled)","52f82a93":"teste.describe()","20d45a84":"gs_rfc.fit(teste,Y)","ce0ab647":"gs_rfc.best_params_","9cef82c7":"rfc_result_scale = pd.DataFrame(gs_rfc.cv_results_)","818c7431":"rfc_result_scale = rfc_result_scale[['rank_test_score', 'mean_test_score']]","868065cc":"rfc_result_scale.sort_values(by = 'rank_test_score')","ad007b80":"gs_abc.fit(teste, Y)","c7042cb4":"gs_abc.best_params_","49b11c82":"gs_abc_scale = pd.DataFrame(gs_abc.cv_results_)","6c55d738":"gs_abc_scale = gs_abc_scale[['rank_test_score', 'mean_test_score']]","8c90a2cf":"gs_abc_scale.sort_values(by = 'rank_test_score')","13fe9e38":"svc = svm.SVC(random_state = seed)","071ea4e7":"svc.fit(train_X,train_Y)","8118aa1b":"svc_pred = svc.predict(val_X)","d3444fbd":"metrics.f1_score(val_Y, svc_pred)","c1334ca8":"nusvc = svm.NuSVC(random_state = seed)","8d3cb294":"nusvc.fit(train_X, train_Y)","f3dfd4e4":"nusvc_pred = nusvc.predict(val_X)","ca46c3cc":"metrics.f1_score(val_Y,nusvc_pred)","96dfa92c":"svc_param = {'C':[0.1,0.25,0.5,1,2,6],\n            'kernel':['poly', 'rbf', 'sigmoid'],\n            'degree':[1,2,3,4,5,6,7],\n            'gamma':['scale']}","1423042d":"gs_svc = GridSearchCV(svc, svc_param, scoring = 'f1', cv = 10)","c0a85ab1":"gs_svc.fit(X,Y)","55530ad4":"gs_svc.best_params_","85fd803d":"svc_results = pd.DataFrame(gs_svc.cv_results_)","92c232bc":"svc_results = svc_results[['rank_test_score','mean_test_score']].sort_values(by = 'rank_test_score')","85682982":"svc_results","00de595a":"nusvc_param = {'nu':[0.1,0.2,0.5,0.8],\n            'kernel':['poly', 'rbf', 'sigmoid'],\n            'degree':[1,2,3,4,5,6,7],\n            'gamma':['scale']}","9014fac0":"gs_nusvc = GridSearchCV(nusvc, nusvc_param, scoring = 'f1', cv = 10)","082077c1":"gs_nusvc.fit(X,Y)","ba68fa7c":"gs_nusvc.best_params_","6903d52d":"results_nusvc = pd.DataFrame(gs_nusvc.cv_results_)","38270ece":"results_nusvc = results_nusvc[['rank_test_score', 'mean_test_score']].sort_values(by = 'rank_test_score')","cf596825":"results_nusvc","3c63dea2":"gs_svc.fit(teste, Y)","57b76341":"gs_svc.best_params_","3ad7d812":"results_svc = pd.DataFrame(gs_svc.cv_results_)","87c05b17":"results_svc = results_svc[['rank_test_score', 'mean_test_score']].sort_values(by = 'rank_test_score')","1f17238a":"results_svc","522f67c7":"gs_nusvc.fit(teste,Y)","0b67dc2f":"gs_nusvc.best_params_","18e52d6f":"results_nusvc = pd.DataFrame(gs_nusvc.cv_results_)","4a3fd038":"results_nusvc = results_nusvc[['rank_test_score', 'mean_test_score']].sort_values(by = 'rank_test_score')","a5fbd60c":"results_nusvc","1c580937":"abc = AdaBoostClassifier(random_state = seed, learning_rate = 0.1, n_estimators = 12)","03e52add":"abc.fit(train_X,train_Y)","372d4294":"abc_pred = abc.predict(val_X)","c831c40e":"metrics.f1_score(val_Y, abc_pred)","0bef48a5":"metrics.recall_score(val_Y, abc_pred)","f6924050":"metrics.accuracy_score(val_Y, abc_pred)","07ff79fd":"metrics.precision_score(val_Y, abc_pred)","56617a69":"metrics.confusion_matrix(val_Y, abc_pred)","fd94640f":"sns.heatmap(metrics.confusion_matrix(val_Y, abc_pred), annot = True)\nplt.ylim(0,2)\nplt.ylabel('Actual Values')\nplt.xlabel('Predicted Values')\nplt.title('Confusion Matrix for AdaBoostClassifier - Heart Disease Prediction')","92f37e93":"# Division of this study\n\n1. Evaluate Random Forest Classifier x Ada Boost Classifier and compare averaging and boosting methods\n2. Scale the data and check results again\n3. Evaluate SVC x NuSVC\n4. Scale the data and check results again\n5. Compare all the estimators","de1c932d":"# After tuning parameters and scaling the features we have the following f1 score for each estimator when applying GridSearchCV:","a2170dc4":"# RAW SVC ","23e3ef66":"# RAW Ada Boost Classifier\n  This method uses boosting method to predict values","9429b4b1":"# NOW LET'S REPEAT SVC AND NUSVC GRIDSEARCH TUNING USING SCALED FEATURES","6bfdf321":"# RAW NuSVC","76479a18":"# RAW Random Forest Classifier\n  This method uses averaging system to predict values","29bb0739":"# At first SVC performs better than NuSVC, but worst than Random Forest Classifier and Ada Boost Classifier\n# Let's do some tuning to check again","c8c1662d":"Not so bad after all, with GridSearchCV we had 0,8668 and in real life we have 0,8125","9e16a2b5":"# ADA BOOST CLASSIFIER","d587d046":"# Random Forest Classifier    = 0,8665\n# Ada Boost Classifier        = 0,8668\n# Suport Vector Classifier    = 0,8615\n# Nu Suport Vector Classifier = 0,8609","eff621ed":"# Now let's conclude the study with AdaBoost","ce7ea0cd":"# LETS USE GRIDSEARCHCV TO TUNE OUR MODELS AND COMPARE THE EFFICIENCY\n\n# RANDOM FOREST CLASSIFIER","b197d9d5":"# At first without any estimator tuning, AdaBoost has a better f1 score","fcdaab8e":"# NOW LETS USE STANDARD SCALE TO NORMALIZE OUR DATA AND CHECK IF THE ESTIMATORS IMPROVE ITS EFFICIENCY"}}