{"cell_type":{"08fa3c99":"code","a59eef70":"markdown"},"source":{"08fa3c99":"################################################################################################\n### HINT Start with the input() function to get the variables you need for question 1 \n### See extra exercises 1 and 2 of our python cafe series if you are not familiar with input()\n### if you are having trouble with the input function simply set the variables yourself \n### and do the rest of the assignment with the variables you created\n### Feel free to use multiple code cells\n################################################################################################\n########Your Program Goes Here #################################################################","a59eef70":"# Extra Exercise\n\nWe've gone through a lot of material this month, you should be proud! \n\nThis longer assignment will help you get over the learning hurtle and gain a better understanding of programming logic and building a full python program. \n\n#### To gain experience with:\n \n- Basic programming constructs in Python.\n- Expressions and decisions in Python.\n- Getting input from user.\n- Validating input.\n- Creating test cases.\n\n#Task:\n\nIn this assignment, you will write a complete program in Python that computes costs and\nkilometers driven for a car rental company. Your program is expected to prompt the user for input and\nvalidate it before computing the results. Your program should make use of expressions, decisions and\nbasic input\/output in Python.\n\n#Functional Specifications:\n\n1. The program will compute and display information for a company which rents vehicles to its\n   customers. For a specified customer, the program will compute and display the amount of money\n   charged for that customer\u2019s vehicle rental. The program will prompt the user to enter the following\n   four items for a given customer (in the specified order):\n   \n        a. The customer\u2019s name (a String)\n        b. The customer's classification code (a String).\n        c. The number of days the vehicle was rented (an integer).\n        d. The vehicle's odometer reading at the start of the rental period (an integer).\n        e. The vehicle's odometer reading at the end of the rental period (an integer).\n        \nIt will then process that customer information and display the results.\n\n2. The program will compute the amount of money that the customer will be billed, based on the customer's classification code, number of days in the rental period, and number of kilometers driven.\n3. The program will recognize both upper case and lower case letters for the classification codes; the codes and related information are as follows:\n\n        a. Code 'B' (budget) \n                i. base charge: 40.00 dollars for each day, \n                ii. kilometers driven charge: 0.25 dollars for each kilometer driven.\n        b. Code 'D' (daily)\n           i. base charge: 60.00 dollars for each day,\n           ii. kilometers driven charge: no charge if the average number of kilometers driven\n               per day is 100 kilometers or less; otherwise, 0.25 dollars for each kilometer driven\n               above the 100 kilometer per day limit.\n         c. Code 'W' (weekly)\n            i. base charge: 190.00 dollars for each week (or fraction of a week),\n            ii. kilometers driven charge:\n                - There is no additional charge if the average number of kilometers driven \n                per week is 900 kilometers or less;\n                - If the average number of kilometers driven per week exceeds 900 kilometers but \n                does not exceed 1500 kilometers, then there is an additional 50.00 dollars charge per week;\n                - If the average number of kilometers driven per week exceeds the 1500 kilometer \n                per week limit, then there is an additional 100.00 dollars charge per week plus \n                0.25 dollars for each kilometer driven over the 1500 kilometer per week average.\n                \nThe amount billed to the customer is the sum of the base charge, any additional changes and\nany charges for the extra kilometers driven.\n\n4. The program will compute the number of kilometers driven by the customer during the rental period.\n5. For each customer, the program will display a summary with the following information:\n    a. The customer\u2019s name,\n    b. The customer's classification code,\n    c. The number of days the vehicle was rented,\n    d. The vehicle's odometer reading at the start of the rental period,\n    e. The vehicle's odometer reading at the end of the rental period,\n    f. The number of kilometers driven during the rental period,\n    g. The amount of money billed to the customer for the rental period,\nAll output should be appropriately labeled and formatted. The amount of money billed should be\ndisplayed with a dollar sign and will be rounded to two fractional digits (for example, $125.99 or\n$43.87).\n6. The program will detect and report invalid classification codes. When an invalid classification code is detected, the program will display an error message. It will display the invalid code and the customer\u2019s name and halt.\n7. The program will assume that all other user inputs are valid and correct. That is, the program will not check the number of days or odometer readings for validity\n\nNon-functional Specifications:\n1. Include brief comments in your code identifying yourself, describing the program, and describing key portions of the code.\n2. Use Python coding conventions and good programming techniques, for example:\n        i. Meaningful variable names\n        ii. Conventions for naming variables \n        iii. Readability: indentation, white space, consistency\n"}}