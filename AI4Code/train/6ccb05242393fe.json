{"cell_type":{"371a1f6f":"code","94b8bf97":"code","a7444907":"code","7af57a41":"code","db4dc544":"code","f7d1d291":"code","295d0d17":"code","e859638d":"code","bcf05b40":"code","74141c09":"code","5b0200e0":"code","8d796038":"markdown"},"source":{"371a1f6f":"#library import\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\n%matplotlib inline","94b8bf97":"#import dataset\ndf = pd.read_csv(r'\/kaggle\/input\/iplcricket-league-dataset-for-beginner-analaysis\/IPL_final.csv')","a7444907":"#checking the columns values with index values\nprint('Checking the index values with column 1',all(df.iloc[:,0].isin(df.index.values)))\nprint('Checking the index values with column 2',all(df.iloc[:,1].isin(df.index.values)))\n\ndf.head(3)\n#shape of the dataset\nprint('Shape of the DataFrame: ',df.shape)\n\n#getting the name of the first colmuns to drop them\nprint(df.iloc[:,0].name)\nprint(df.iloc[:,1].name)\n\nprint('columns: ',df.columns.values)\n#droping the columns from axis 1\ndf.drop(['Unnamed: 0','Unnamed: 0.1'], axis=1,inplace=True)","7af57a41":"#changing the dtype of the date and year colmuns\ndf.Date = df.Date.str.replace(',',' ')\ndf.Year = df.Year.apply(lambda x: str(x))\ndf.Date = df.Date + ' ' + df.Year\n\n#ff = dff.Date.apply(lambda x:datetime.strptime(str(x),'%b%d%a'))\ndf.Date = pd.to_datetime(df.Date,format='%b %d %a %Y')\ndf.Tied = df.Tied.notnull().astype('int')\n\n#changing the string values of won_runs into integers\ndf.won_runs = df.won_runs.str.replace(r'[^0-9]','', regex=True)\ndf.won_runs.fillna(0,inplace=True)\ndf.won_runs = df.won_runs.astype('int64')\n\n#changing the string values of won_wickets into integers\ndf.won_wickets.fillna('0',inplace=True)\ndf.won_wickets = df.won_wickets.str.replace(' ','')\ndf.won_wickets = df.won_wickets.apply(lambda c:c[0])\ndf.won_wickets = df.won_wickets.astype('int64')","db4dc544":"# short_name = [x for x in input().split(' ')]\n# full_name = df.Team1.unique().tolist()\n\n\n#changing the values of team name into their short forms\nfull_name = ['ROYAL CHALLENGERS BANGALORE',\n 'KINGS XI PUNJAB',\n 'DELHI CAPITALS',\n 'KOLKATA KNIGHT RIDERS',\n 'MUMBAI INDIANS',\n 'RAJASTHAN ROYALS',\n 'DECCAN CHARGERS',\n 'CHENNAI SUPER KINGS',\n 'KOCHI TUSKERS KERALA',\n 'PUNE WARRIORS',\n 'SUNRISERS HYDERABAD',\n 'GUJARAT LIONS',\n 'RISING PUNE SUPERGIANT','RISING PUNE SUPERGIANTS','DELHI DAREDEVILS','NO RESULT','HYDERABAD']\nshort_name = ['RCB',\n 'KXP',\n 'DELHI',\n 'KKR',\n 'MI',\n 'RR',\n 'DECCAN',\n 'CSK',\n 'KTK',\n 'PW',\n 'SH',\n 'GL',\n 'RPS','RPS','DELHI','MATCH ABANDONED','SH']\n\ntemp = {}\nfor key in full_name:\n    for value in short_name:\n        temp[key] = value\n        short_name.remove(value)\n        break\n        \n\n#mapping the dictionary values with Toss column        \ntoss_list = df.Toss.unique().tolist()\n#toss_values = [x for x in input().split(' ')]\ntoss_values = ['RCB','CSK','RR','DECCAN','MI','KXP','KKR','DELHI','NOT_DECIDED','KTK','8PM','PW','SH','4PM','GL','RPS']\n\ntoss_temp = {}\nfor key in toss_list:\n    for value in toss_values:\n        toss_temp[key] = value\n        toss_values.remove(value)\n        break","f7d1d291":"#mapping the dictionary values to Result column\ndf.Team1 = df.Team1.replace(temp,regex=True)\ndf.Team2 = df.Team2.replace(temp,regex=True)\n\ndf.Team1 = df.Team1.str.replace(' ','')\ndf.Team2 = df.Team2.str.replace(' ','')\n\ndf['Result'] = df['Result'].str.split(' won').str[0].str.upper()\ndf = df.replace({\"Result\": temp})\n\ndf['Result'] = df['Result'].str.split(' WITHOUT').str[0].str.upper()\ndf['Result'] = df['Result'].str.split(' \\(').str[0].str.upper()\ndf['Result'] = df['Result'].str.split(' -').str[0].str.upper()\n\nprint('Unique values of Result column',df.Result.unique())\n     \ndf.Toss = df.Toss.map(toss_temp)\n\nprint('Unique values of Toss column',df.Result.unique())","295d0d17":"#splitting the place and state values in place column to place and state columns\nState = df.Place.str.split(', ').str[1]\nState.name = 'State'\ndf = pd.concat([df,State],axis=1)\ndf.Place = df.Place.str.split(', ').str[0]\ndf.Place = df.Place.str.split(' Stadium').str[0]\n#formatt = '%I:%M %p GMT \/ %I:%M %p LOCAL' \n\ndf.drop(['Time'],axis=1,inplace=True)\n# df['Time'].unique()\n# df['Time'] = pd.to_datetime(df['Time'],format = formatt)\n# df['Time'] = [time.time() for time in df['Time']]","e859638d":"toss_des = {'bat':'1','bowl':'0','PM':'2'}\ndf.TossDecision = df.TossDecision.map(toss_des).astype('int64')\ndf.to_csv('df_cleaned.csv',index=False)\ndf.head()","bcf05b40":"!pip install autoviz\n!pip install xlrd","74141c09":"from autoviz.AutoViz_Class import AutoViz_Class\n\nAV = AutoViz_Class()","5b0200e0":"df_plot = AV.AutoViz(filename='df_cleaned.csv')","8d796038":"## **My first EDA work in progress...**\n![cricket gif meme](https:\/\/c.tenor.com\/cp2_pYZTETgAAAAd\/india-indian.gif) .\n\n> Please comment down and tell me how you like it and rectify my mistakes, I will be grateful."}}