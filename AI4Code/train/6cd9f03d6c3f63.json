{"cell_type":{"bb97ddfa":"code","79bf28cb":"code","2a90d45e":"code","ee5e9535":"code","15e4f917":"code","be492daf":"code","163de14f":"code","e77e2998":"code","84d9ae13":"code","a0270b7f":"code","dff5b6d2":"code","453957a5":"code","db62486e":"code","4cd80eab":"code","74b2fcc1":"code","e24e6987":"markdown","1a7917bb":"markdown","90c74b40":"markdown","8fbda2a4":"markdown","8dd6f7bb":"markdown","b30bff66":"markdown","b4e4780d":"markdown","9f1f0c48":"markdown","8047468a":"markdown","f36e6a31":"markdown","396303bf":"markdown","9b920567":"markdown","22e85825":"markdown","825bf786":"markdown","66f5a6ec":"markdown","47f051f1":"markdown","3c5cb45f":"markdown","28fa9eb0":"markdown","36f0e57b":"markdown","4268d565":"markdown"},"source":{"bb97ddfa":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","79bf28cb":"pip install opencage","2a90d45e":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport re \nimport warnings\nwarnings.warn('ignore')\n\nfrom opencage.geocoder import OpenCageGeocode\nfrom mpl_toolkits.basemap import Basemap\nimport matplotlib.pyplot as plt\nimport math \nkey = '2117b047581540e59c772059f03a714a'\ngeocoder = OpenCageGeocode(key)\nfrom matplotlib import style ","ee5e9535":"df1= pd.read_csv('..\/input\/us-elections-dataset\/2012_US_elect_county.csv')\ndf2 = pd.read_csv('..\/input\/us-elections-dataset\/us-2016-primary-results.csv',sep=';')","15e4f917":"def to_numbers(df):\n    for i in range(len(df)):\n        df['Obama vote'][i] = re.sub(',','',df['Obama vote'][i])\n        df['Romney vote'][i] = re.sub(',','',df['Romney vote'][i])\n    df['Obama vote'] = df['Obama vote'].astype(int).copy()\n    df['Romney vote'] = df['Romney vote'].astype(int).copy()\n    df.replace('#DIV\/0!',0.0,inplace=True)\n    df['%.1']= df[\"%.1\"].astype(float).copy()\n    df['%'] = df['%'].astype(float).copy()\n    \nto_numbers(df1)   ","be492daf":"#obama top votes in counties vs romney \n\ndef plot_bar():\n    indexes1= df1['Obama vote'].sort_values(ascending=False).index[:5]\n    new_df= df1.iloc[indexes1].copy()\n\n    x = np.arange(5)\n    y= np.arange(0,8000000,2000000)\n    fig = plt.figure()\n    ax =  fig.add_axes([0,0,1,1])\n    ax.bar(x + 0.00,new_df['Obama vote'],color='b',width=0.25)\n    ax.bar(x+0.25,new_df['Romney vote'],color='r',width=0.25)\n    plt.xticks(x,new_df['County Name'].values,rotation=45,fontsize=20)\n    plt.yticks(y,np.arange(0,8000000,2000000))\n    plt.xlabel('County Name',fontsize=20)\n    plt.legend(['Obama','Romney'])\n    plt.ylabel('Votes',fontsize=20)\nplot_bar()   ","163de14f":"# romney top  votes counties against obama\ndef plot_bar1():\n    indexes1= df1['Romney vote'].sort_values(ascending=False).index[:5]\n    new_df= df1.iloc[indexes1].copy()\n\n    x = np.arange(5)\n    y= np.arange(0,8000000,2000000)\n    fig = plt.figure()\n    ax =  fig.add_axes([0,0,1,1])\n    ax.bar(x + 0.00,new_df['Romney vote'],color='r',width=0.25)\n    ax.bar(x+0.25,new_df['Obama vote'],color='b',width=0.25)\n    plt.xticks(x,new_df['County Name'].values,rotation=45,fontsize=20)\n    plt.yticks(y,np.arange(0,8000000,2000000))\n    plt.legend(['Romney',\"Obama\"])\n    plt.xlabel('County Name',fontsize=20)\n    plt.ylabel('Votes',fontsize=20)\nplot_bar1() ","e77e2998":"def state_postal_plots(df1):\n    index = df1['State Postal'].unique()\n    x = [x for x in range(len(index))]\n    y1  = df1.groupby(['State Postal']).mean()['Obama vote']\n    y2 = df1.groupby(['State Postal']).mean()['Romney vote']\n    plt.figure(figsize=(14,5))\n    plt.plot(x,y1,color='red')\n    plt.xticks(x,index,rotation=90)\n    plt.plot(x,y2,color='blue')\n    plt.ylabel('Votes Across Counties[mean]',fontsize=20)\n    plt.legend(['Obama','Romney'])\n    plt.xlabel('County',fontsize=20)\n    plt.show()\nstate_postal_plots(df1)    ","84d9ae13":"def corrcoef(df1):\n    cols  =['FIPS',\"Obama vote\",'Romney vote']\n    sns.set(font_scale=1.5)\n    cm = np.corrcoef(df1[cols].values.T)\n    hm = sns.heatmap(cm,cbar=True,annot=True,square=True,fmt='.2f',\n                     annot_kws={'size':15},yticklabels=cols,xticklabels=cols)\n    plt.show()\ncorrcoef(df1)","a0270b7f":"def pair_plots(df1):\n    cols  =['FIPS',\"Obama vote\",'Romney vote','%','%.1']\n    sns.pairplot(df1[cols],height=2.5)\n    plt.tight_layout()\n    plt.show()    \npair_plots(df1)","dff5b6d2":"def mapTut():\n    plt.figure(figsize=(12,11))\n    m = Basemap(projection='mill',llcrnrlat=20,urcrnrlat=50,\\\n                llcrnrlon=-130,urcrnrlon=-60,resolution='c')\n    m.drawcoastlines()\n    m.drawcountries()\n    m.drawstates()\n    m.fillcontinents(color='white',lake_color='white')\n    m.drawmapboundary(fill_color='#FFFFFF')\n\n    lat =[]\n    lng =[]\n    for i in range(len(df2['state'].unique())):\n        query =df2['state'].value_counts().index[i]\n        results = geocoder.geocode(query)\n        lat = results[0]['geometry']['lat']\n        lng = results[0]['geometry']['lng']\n        xpt,ypt = m(lng,lat)\n        m.plot(xpt,ypt,'o','red',markersize=(28-i)*2)\n        \n    plt.title(\"State Count\")\n    plt.show()\n\n\nmapTut()","453957a5":"def bar_chart(df2):\n    x=[1,2]\n    plt.figure(figsize=(6,5))\n    y1 = df2['party'].value_counts()[0]\n    y2= df2['party'].value_counts()[1]\n    plt.xticks(x,['Republican','Democratic'])\n    plt.bar(1,y1,color='red')\n    plt.bar(2,y2,color='blue')\n    plt.title('Distribution of Rep and Dem')\n    plt.show()\nbar_chart(df2)","db62486e":"# candidate distribution in nost states \ndef pie_candid(df2):\n    style.use('fivethirtyeight')\n    plt.pie(df2['candidate'].value_counts()[:5],\n           labels=df2['candidate'].value_counts().index[:5])\n    plt.axis('equal')\n    plt.show()\npie_candid(df2)","4cd80eab":"def stacked_plots(df2):\n    style.use('fivethirtyeight')\n    new_df  = df2.groupby(['candidate']).sum().copy()\n    fig,axes = plt.subplots(3,figsize=(12,6))\n    labels = new_df.index\n    x = [ x for x in range(len(labels))]\n    axes[0].plot(x,new_df.iloc[:,0])\n    axes[0].set_ylabel('FIPS',fontsize=20)\n    axes[1].plot(x,new_df.iloc[:,1])\n    axes[1].set_ylabel('Votes',fontsize=20)\n    axes[2].plot(x,new_df.iloc[:,2])\n    axes[2].set_ylabel('Fraction votes',fontsize=20)\n    plt.xticks(x,new_df.index,rotation=90)\nstacked_plots(df2)","74b2fcc1":"def correllogram(df2):\n    cols =['fips','votes','fraction_votes']\n    sns.heatmap(df2[cols].corr(),\n               xticklabels=df2[cols].corr().columns,\n               yticklabels=df2[cols].corr().columns,cmap='RdYlGn',\n               center=0,annot=True)\n    plt.title('correlation plot of DataFrame2')\n    plt.xticks(fontsize=12)\n    plt.yticks(fontsize=12)\n    plt.show()\ncorrellogram(df2)","e24e6987":"<a id=\"1\"><\/a>\n<font color=\"gray\" size=+1.0><b>1. Double bar Graph-1<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","1a7917bb":"![donald_trump_july_2016_getty_images_578546876jpg.jpg](attachment:donald_trump_july_2016_getty_images_578546876jpg.jpg)","90c74b40":"<div><h3>\n    <span style=\"font-family:cursive\">This DataFrame consists of data of previous elections,and the data of the candidates Obama and Romney .<\/span>\n    <\/h3>\n    <\/div>\n    ","8fbda2a4":"<div> \n    <h1>\n        <span style=\"color:Blue\">Part 1<\/span>\n    <\/h1>\n<\/div>","8dd6f7bb":"<a id=\"2\"><\/a>\n<font color=\"gray\" size=+1.0><b>2. Double bar Graph-2<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","b30bff66":"<a id=\"7\"><\/a>\n<font color=\"gray\" size=+1.0><b>7. Bar_chart<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","b4e4780d":"# US Elections!!","9f1f0c48":"<a id=\"8\"><\/a>\n<font color=\"gray\" size=+1.0><b>8. Pie_Chart<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","8047468a":"<div> <h1> <span style=\"color:brown\"> Please give an upvote if you liked the notebook\ud83d\ude4c<\/span><\/h1><\/div>","f36e6a31":"<a id=\"10\"><\/a>\n<font color=\"gray\" size=+1.0><b>10. CorrCoefPlot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","396303bf":"<a id=\"4\"><\/a>\n<font color=\"gray\" size=+1.0><b>4. corrcoef_plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","9b920567":"<div>\n    <h1><span style='color:Red'>Part 2<\/span><\/h1><\/div>","22e85825":"<div><h3>\n    <span style=\"font-family:cursive\">This DataFrame consists of data of all the candidates from Republican and Democratic party .<\/span>\n    <\/h3>\n    <\/div>","825bf786":"<a id=\"9\"><\/a>\n<font color=\"gray\" size=+1.0><b>9. Stacked_Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>\n","66f5a6ec":"``` \nThis notebook uses data from 2 csv files to plot the data visualizations:\n                                          1. \"2012_US_elect_county.csv\"\n                                          2. \"us-2016-primary-results.csv.\n\n```\n                                                ","47f051f1":"<a id=\"5\"><\/a>\n<font color=\"gray\" size=+1.0><b>5. Pair_Plots<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","3c5cb45f":"<a id=\"6\"><\/a>\n<font color=\"gray\" size=+1.0><b>6. USA basemap<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","28fa9eb0":"<a id=\"3\"><\/a>\n<font color=\"gray\" size=+1.0><b>3. Simple_line_Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","36f0e57b":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Menu<\/h3>\n\n  \n<font color=\"blue\" size=+1><b>Part 1<\/b><\/font>\n* [1. Double bar Graph-1](#1)\n* [2. Double bar Graph-2](#2)\n* [3. Simple Line Plot](#3)\n* [4. Corrcoef Plot](#4)\n* [5. Pairplot](#5)\n\n<font color=\"red\" size=+1><b>Part 2<\/b><\/font>\n* [6. USA basemap](#6)\n* [7. R and D bar plot](#7)\n* [8. Piechart](#8)\n* [9. Stacked_Plot](#9) \n* [10. Corrcoefplot](#10)","4268d565":"# Thank You!!!"}}