{"cell_type":{"3f6394d9":"code","cd0f5d3d":"code","449ce8f6":"code","55b54bee":"code","2f9ebc6e":"code","b9cccd65":"code","664a82f7":"code","e4b6712f":"code","0298b45e":"code","ab74449b":"code","70828662":"code","798880be":"code","1b3a15aa":"code","9532d577":"code","bcd13adc":"code","89482063":"code","eee23c6d":"code","4df4aac0":"code","4cda0c95":"code","a38409e0":"code","327fb050":"code","596b7112":"code","cc387949":"code","91d7ac83":"code","9315fe6d":"code","3bb337e2":"code","350d1f44":"markdown","c8ffafac":"markdown","0469f461":"markdown","ab4f01cd":"markdown","40db5528":"markdown","98e6a91a":"markdown","525293c3":"markdown","3ec381a8":"markdown","28066ebb":"markdown","4a2a56e9":"markdown","4b45bfef":"markdown","06c56e2e":"markdown"},"source":{"3f6394d9":"import numpy as np\nimport pandas as pd","cd0f5d3d":"df=pd.read_csv('..\/input\/Mall_Customers.csv')","449ce8f6":"df.head(5)","55b54bee":"missing_data=df.isnull()","2f9ebc6e":"missing_data.head(5)","b9cccd65":"df.shape","664a82f7":"for column in missing_data.columns.values.tolist():\n    print(column)\n    print(missing_data[column].value_counts())\n    print('')","e4b6712f":"df.head(5)","0298b45e":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","ab74449b":"df.dtypes","70828662":"df.corr()","798880be":"df[['Age', 'Annual Income (k$)']].corr()","1b3a15aa":"sns.regplot(x='Age', y='Annual Income (k$)', data=df)\nplt.ylim(0,)","9532d577":"df[['Age', 'Spending Score (1-100)']].corr()","bcd13adc":"sns.regplot(x='Age', y='Spending Score (1-100)', data=df)\nplt.ylim(0,)","89482063":"df[['Spending Score (1-100)','Annual Income (k$)']].corr()","eee23c6d":"sns.regplot(x='Annual Income (k$)', y='Spending Score (1-100)', data=df)\nplt.ylim(0,)","4df4aac0":"sns.boxplot(x='Genre', y='Annual Income (k$)', data=df)","4cda0c95":"sns.boxplot(x='Genre', y='Spending Score (1-100)', data=df)","a38409e0":"plt.figure(1, figsize=(15,5))\nsns.countplot(y='Genre', data=df)\nplt.show()","327fb050":"from sklearn.cluster import KMeans\nfrom sklearn.cluster import KMeans\nfrom sklearn.datasets.samples_generator import make_blobs","596b7112":"X1 = df[['Age' , 'Spending Score (1-100)']].iloc[: , :].values\ninertia = []\nfor n in range(1 , 11):\n    algorithm = (KMeans(n_clusters = n ,init='k-means++', n_init = 10 ,max_iter=300, \n                        tol=0.0001,  random_state= 111  , algorithm='elkan') )\n    algorithm.fit(X1)\n    inertia.append(algorithm.inertia_)","cc387949":"plt.figure(1 , figsize = (15 ,6))\nplt.plot(np.arange(1 , 11) , inertia , 'o')\nplt.plot(np.arange(1 , 11) , inertia , '-' , alpha = 0.5)\nplt.xlabel('Number of Clusters') , plt.ylabel('Inertia')\nplt.show()","91d7ac83":"algorithm = (KMeans(n_clusters = 4 ,init='k-means++', n_init = 10 ,max_iter=300, \n                        tol=0.0001,  random_state= 111  , algorithm='elkan') )\nalgorithm.fit(X1)\nlabels1 = algorithm.labels_\ncentroids1 = algorithm.cluster_centers_","9315fe6d":"h = 0.02\nx_min, x_max = X1[:, 0].min() - 1, X1[:, 0].max() + 1\ny_min, y_max = X1[:, 1].min() - 1, X1[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\nZ = algorithm.predict(np.c_[xx.ravel(), yy.ravel()]) ","3bb337e2":"plt.figure(1 , figsize = (10 , 5) )\nplt.clf()\nZ = Z.reshape(xx.shape)\nplt.imshow(Z , interpolation='nearest', \n           extent=(xx.min(), xx.max(), yy.min(), yy.max()),\n           cmap = plt.cm.Pastel2, aspect = 'auto', origin='lower')\n\nplt.scatter( x = 'Age' ,y = 'Spending Score (1-100)' , data = df , c = labels1 , \n            s = 200 )\nplt.scatter(x = centroids1[: , 0] , y =  centroids1[: , 1] , s = 300 , c = 'red' , alpha = 0.5)\nplt.ylabel('Spending Score (1-100)') , plt.xlabel('Age')\nplt.show()","350d1f44":"### Steps to follow\n<ul>\n    <li>Import the libraries<\/li>\n    <li>Clean the data<\/li>\n    <li>Analyze the data<\/li>\n    <li>Develop Model<\/li>\n    <li>Evaluate the Model<\/li>\n<\/ul>","c8ffafac":"## Analyze the Data","0469f461":"#### Data types are correct and doesnt require to be updated","ab4f01cd":"#### There are no missing data","40db5528":"#### There is a negative weak correlation between Age and Annual Income","98e6a91a":"## Introduction\nThe goal of this exercise is to create customer segmentation and analysis for a retail store within a mall, further create an unsupervised machine learning model such as KMeans Clustering to provide insights to the marketing team.","525293c3":"### Clustering using K-means","3ec381a8":"#### There is almost no correlation between Annual Income and Spending Score","28066ebb":"### Conclusion: Important Variables are Age and Spending Score ","4a2a56e9":"#### There is a decent negative correlation between Age and Spending Score","4b45bfef":"## Clean the Data","06c56e2e":"## Develop the Model"}}