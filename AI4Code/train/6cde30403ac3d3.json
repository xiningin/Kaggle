{"cell_type":{"a18472e2":"code","d9681cc2":"code","fe9d75ba":"code","d2dfe7e6":"code","00ef84f1":"code","5d138d65":"code","894a0c72":"code","5417ebaf":"code","dcade0a6":"code","f81f18a7":"code","b2f55e32":"code","d28117bd":"code","46dda79e":"code","cf4dd6f4":"code","0a92b0f7":"code","38a851b5":"code","b27a129f":"code","88739cb9":"code","96804cda":"code","3d92bb7c":"code","d15e59fc":"markdown","d51e5386":"markdown","77f04b11":"markdown","dc7b65f1":"markdown","f47b0e5c":"markdown"},"source":{"a18472e2":"import warnings\nwarnings.filterwarnings('ignore')","d9681cc2":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fe9d75ba":"insurance_data = pd.read_csv('..\/input\/health-insurance-dataset\/Health_insurance.csv')\ninsurance_data.head()","d2dfe7e6":"insurance_data.isnull().sum()","00ef84f1":"insurance_data.info()","5d138d65":"insurance_data.describe()","894a0c72":"fg,ax = plt.subplots(figsize=(10,5))\nn, bins, patches = ax.hist(insurance_data.age,edgecolor='k',label='age distribution')\nax.set_xticks(ticks=range(15,75,5))\nfor idx, value in enumerate(n):\n  ax.text(bins[idx]+1.5,n[idx]+2,round(value))\nax.legend()\nfg.show()","5417ebaf":"fg,ax = plt.subplots(1,2,figsize=(20,6))\nn, bins, patches = ax[0].hist(insurance_data.loc[insurance_data.sex=='male','age'],edgecolor='k',label='Male age distribution')\nax[0].set_xticks(ticks=range(15,75,5))\nfor idx, value in enumerate(n):\n  ax[0].text(bins[idx]+1.5,n[idx]+2,round(value))\nax[0].legend()\n\nn, bins, patches = ax[1].hist(insurance_data.loc[insurance_data.sex=='female','age'],edgecolor='k',label='female age distribution')\nax[1].set_xticks(ticks=range(15,75,5))\nfor idx, value in enumerate(n):\n  ax[1].text(bins[idx]+1.5,n[idx]+2,round(value))\nax[1].legend()\nfg.show()","dcade0a6":"sns.boxplot(x='region',y='charges',hue='sex',data=insurance_data);","f81f18a7":"sns.swarmplot(x='region',y='charges',hue='smoker',data=insurance_data);","b2f55e32":"from sklearn.preprocessing import LabelEncoder\n\nfor obj_col in insurance_data.select_dtypes('object'):\n  LE = LabelEncoder()\n  insurance_data[obj_col] = LE.fit_transform(insurance_data[obj_col]) #Converting categorical data to numerical","d28117bd":"from sklearn.preprocessing import StandardScaler\n\nfor num_col in insurance_data[['age','bmi']]:\n  SS = StandardScaler()\n  insurance_data[num_col] = SS.fit_transform(insurance_data[[num_col]]) #Scaling numerical data","46dda79e":"sns.heatmap(insurance_data.corr(),annot=True);","cf4dd6f4":"from sklearn.model_selection import train_test_split\n\nX = insurance_data[['age','bmi','smoker']]\nY = insurance_data['charges']\n\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2,random_state=12)\n\nX_train.shape, X_test.shape, Y_train.shape, Y_test.shape","0a92b0f7":"from sklearn.linear_model import LinearRegression\n\nLR = LinearRegression()\n\nLR.fit(X_train, Y_train)\n\nY_Pred = LR.predict(X_test)","38a851b5":"LR.intercept_","b27a129f":"LR.coef_","88739cb9":"pd.DataFrame({'Actual': Y_test,'Predicted' : Y_Pred}).head()","96804cda":"from sklearn import metrics\nimport numpy as np\n  \nprint('Mean Absolute Error:', metrics.mean_absolute_error(Y_test, Y_Pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(Y_test, Y_Pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y_test, Y_Pred))) ","3d92bb7c":"insurance_data.charges.mean()\/10","d15e59fc":"Linear Regression is supervised regression algorithm that is used to find best fit line to predict target variables. \n\nThis algorithm uses below equation.\n\n![](https:\/\/drive.google.com\/uc?export=view&id=1a9g8Bpun7ionLCbDdsmxJyGPr7CeaGIC)","d51e5386":"# Feature Engineering","77f04b11":"# EDA","dc7b65f1":"# Linear Regression","f47b0e5c":"Since, RMSE value of 6551.16 is not less than or equal to mean of targer variable i.e., charges (1327.04). Our model did not perform\/predicted well, we can tune this model or alter supplied column to see any positive change."}}