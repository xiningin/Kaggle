{"cell_type":{"b3b800a2":"code","8da81587":"code","0e5de8a5":"code","8884cb7a":"code","6a521020":"code","3275b897":"code","5d2a66d0":"code","e98d6a1f":"code","5fa581b2":"code","13408b99":"code","3d35163a":"code","2628acf1":"code","200516a8":"code","04d1577e":"code","70a90e83":"code","aafdf711":"code","49f52f36":"code","424f6053":"code","a4f862a1":"code","0e5e16d0":"code","fea228c8":"code","6b3f7943":"code","3a4b781f":"code","3f6bb83d":"code","c8ed5f25":"code","50569dc5":"code","3d34aba5":"code","5253cba6":"code","2df6dc4f":"code","aba42da4":"code","bebd85c8":"code","493354ab":"code","26276c99":"code","be4815f6":"code","8c98665a":"code","4e91e671":"code","0db69bb9":"code","2fe3a954":"markdown","4ddf7c91":"markdown","7da6b33f":"markdown","5c92d3f2":"markdown","98cfdb6a":"markdown","c60c10f2":"markdown","cf8a2946":"markdown","e27dd8c4":"markdown","4caf0732":"markdown","c074fedd":"markdown","70fe0c57":"markdown","f0997da9":"markdown","04ee1a70":"markdown","ee464c58":"markdown","118de07b":"markdown","9bd2f6c0":"markdown","023bc738":"markdown","7da17d6b":"markdown","c1024edc":"markdown","4843fdeb":"markdown","36593a3a":"markdown","09506e57":"markdown","3c9aed6b":"markdown","ec0c5b44":"markdown","59e35db3":"markdown","0a7576c1":"markdown","8016ea4f":"markdown","26c116b0":"markdown","bc4b0e84":"markdown","a844335d":"markdown"},"source":{"b3b800a2":"\nimport numpy as np \nimport pandas as pd\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import accuracy_score ","8da81587":"train=pd.read_csv(\"..\/input\/train.csv\")","0e5de8a5":"test=pd.read_csv(\"..\/input\/test.csv\")","8884cb7a":"X=train.iloc[ : ,2:202].values","6a521020":"y=train.iloc[ :,1:2].values\ny=y.astype(float)","3275b897":"train.head()","5d2a66d0":"train[train.columns[1:]].corr()['target'][:]","e98d6a1f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","5fa581b2":"reg= LinearRegression()","13408b99":"reg.fit(X_train,y_train)","3d35163a":"y_pred=reg.predict(X_test)","2628acf1":"y_pred=y_pred.round()\n","200516a8":"accuracy_score(y_pred,y_test)","04d1577e":"y1=train.iloc[ :,0:202]\n","70a90e83":"X_train1, X_test1, y_train1, y_test1 = train_test_split(X, y1, test_size = 0.2, random_state = 0)","aafdf711":"y_test1=y_test1.reset_index()\n","49f52f36":"y_pred=pd.DataFrame(y_pred)","424f6053":"res=pd.concat([y_pred,y_test1],axis=1)","a4f862a1":"res=res.rename(columns={0:\"predicted\"})","0e5e16d0":"res['diff']=res['predicted']-res['target']","fea228c8":"res[\"diff\"]=res[\"diff\"].abs()","6b3f7943":"wr_pred=res[res[\"diff\"]==1]","3a4b781f":"wr_pred.head()","3f6bb83d":"X_TRAIN=train.iloc[ : ,2:202].values","c8ed5f25":"Y_TRAIN=train.iloc[ :,1:2].values\nY_TRAIN=Y_TRAIN.astype(float)","50569dc5":"X_TEST=test.iloc[ :,1:201].values","3d34aba5":"reg.fit(X_TRAIN,Y_TRAIN)","5253cba6":"TARGET=reg.predict(X_TEST)","2df6dc4f":"TARGET=TARGET.round()","aba42da4":"TARGET=pd.DataFrame(TARGET)","bebd85c8":"TARGET.shape","493354ab":"ID_CODE=test.iloc[ :,0:1]","26276c99":"RESULT=pd.concat([ID_CODE,TARGET],axis=1)","be4815f6":"RESULT=RESULT.rename(columns={0:'target'})","8c98665a":"RESULT[\"target\"]=RESULT[\"target\"].abs()","4e91e671":"RESULT.head()","0db69bb9":"RESULT.to_csv(\"test_target_pred.csv\")","2fe3a954":"**GET THE VALUES FOR X_TEST FROM TEST DATASET**","4ddf7c91":"**ROUND THE DECIMAL VALUES**","7da6b33f":"**GET THE VALUES FOR X_TRAIN & Y_TRAIN FROM THE TRAIN DATASET**","5c92d3f2":"**CONCAT THE TARGET AND ID_CODE    FINALLY GOT THE RESULTS....**","98cfdb6a":"**READ THE CSV FILES**","c60c10f2":"**GETTING THE TARGET COLUMN IN Y **","cf8a2946":"**SUMMARY**   \n\n                    **1. IMPORTED LIBRARIES AND READ THE CSV FILES  **\n                    **2. SPLITTED THE TRAIN DATASET ,BUILT THE MODEL AND   GOT THE ACCURACY OF 90%**\n                    **3. IDENTIFIED THE WRONG PREDICTED ROWS**\n                    **4. BUILT THE MODEL USING TRAIN DATASET AND PREDICTED FOR THE TEST DATASET**","e27dd8c4":"**CHECKING THE ACCUCARCY SCORE FOR OUR PREDICTIONS **","4caf0732":"**FIT THE X&Y TRAIN IN THE MODEL**","c074fedd":"**CONVERT THE NEGATIVE NUMBER TO  POSITIVE BY abs()**","70fe0c57":"**TAKING THE ID AND OTHER VALUES IN y1 TO KNOW WHERE IT HAS PREDICTED WRONG **","f0997da9":"**PREDICT THE TARGET VALUES FOR THE X_TEST i.e., TEST DATASET**","04ee1a70":"**GET THE TEST ID FROM THE TEST DATASET**","ee464c58":"**SPLITTING WITH THE SAME TEST SIZE**","118de07b":"**FINALLY ,PREDICT TO THE TEST DATASET**","9bd2f6c0":"**TRAIN_TEST_SPLIT THE DATA FOR CHECKING THE ACCURACY  **","023bc738":"**GETTING THE COLUMNS IN X USING iloc**","7da17d6b":"**PREDICTING TARGET VALUES FOR THE ROWS IN X_TEST & ROUND THE DECIMAL VALUES**","c1024edc":"**FINDING THE DIFFERENCE BETWEEN PREDICTED AND THE ACTUAL TARGET VALUE FOR GETTING THE COUNT OF WRONG PREDICTIONS**","4843fdeb":"**VIEW THE HEAD OF TRAIN DATASET**","36593a3a":"**wr_pred HAS THE ROWS WHERE OUR MODEL PREDICTED WRONG ,IF LOGIC OR INDIVIDUALITY BEHIND THIS IS FOUND WE MAY MAKE CHANGES IN TEST AFTER THE RESULT , i.e., UNDER RESEARCH**","09506e57":"**CONVERT NEGATIVE VALUES TO POSITIVE VALUES**","3c9aed6b":"**RENAME 0 AS target **","ec0c5b44":"1.  **IMPORT THE NECESSARY LIBRARIES**","59e35db3":"**CHECK THE CORRELATION BETWEEN THE TARGET AND OTHER COLUMNS**","0a7576c1":"**BUILDING THE MODEL LINEAR REGRESSION AND FIT X_TRAIN & Y_TRAIN**","8016ea4f":"**RES HAS THE PREDICTIONS,TARGET,id AND OTHER VARIABLES**","26c116b0":"**CONVERTING THE y_pred TO DATAFRAME**","bc4b0e84":"**CONCAT THE y_pred AND y_test1 TO FIND WHERE IT PREDICTED ACCURATE AND WHERE IT DONE WRONG PREDICTION**","a844335d":"**CONVERT IT TO DATAFRAME**"}}