{"cell_type":{"d3ce6831":"code","f8fa86e3":"code","1f989eaa":"code","e9b7cadf":"code","87bd4487":"code","d4763cff":"code","e3ebc00f":"code","a27cadc2":"code","d9721468":"code","3ed9e02e":"code","25c12bfa":"code","1b79f4ca":"code","4c384209":"code","c8d9333e":"code","579ae80e":"code","1996eef9":"code","ed75deea":"code","36bb7963":"code","e6946211":"code","9a87bbad":"code","a6ba20bf":"code","25e7ca88":"code","0e6ad274":"code","b40bead7":"code","55c89293":"code","f38c58b5":"markdown"},"source":{"d3ce6831":"### Objective: To learn modeling with H2O Deaplearning ","f8fa86e3":"# Call libraries\n# basic libraries\nimport pandas as pd\nimport numpy as np\nimport os\n# For plotting\nimport matplotlib.pyplot as plt\n\n# For measuring time elapsed\nfrom time import time\n\n# Model building\nimport h2o\nfrom h2o.estimators.deeplearning import H2ODeepLearningEstimator\n\n\n# Change ipython options to display all data columns\npd.options.display.max_columns = 300","1f989eaa":"#Read file\ntrain = pd.read_csv(\"..\/input\/fashion-mnist_train.csv\")","e9b7cadf":"train.shape       # (60000,785)","87bd4487":"train.head(1)","d4763cff":"train['label'].value_counts() # balanced classes ","e3ebc00f":"# Get the first row excluding first column\n#    First column contains class labels and \n#    other columns contain pixel-intensity values\nabc = train.values[1, 1:]\nabc.shape    # (784,)","a27cadc2":"abc = abc.reshape(28,28)   # Reshape to 28 X 28","d9721468":"# And plot it\nplt.imshow(abc)\nplt.show()","3ed9e02e":"#Get list of predictor column names and target column names\n#     Column names are given by H2O when we converted array to\n#     H2o dataframe\nX_columns = train.columns[1:786]        # Only column names. No data","25c12bfa":"y_columns = train.columns[0]\ny_columns","1b79f4ca":"train[\"label\"].unique()","4c384209":"h2o.init()","c8d9333e":"train = h2o.import_file(\"..\/input\/fashion-mnist_train.csv\", destination_frame=\"train\")\ntest = h2o.import_file(\"..\/input\/fashion-mnist_test.csv\", destination_frame=\"test\")","579ae80e":"#Get list of predictor column names and target column names\n#     Column names are given by H2O when we converted array to\n#     H2o dataframe\nX_columns = train.columns[1:785]        # Only column names. No data\n  # C1 to C786","1996eef9":"y_columns = train.columns[0]\ny_columns","ed75deea":"train[\"label\"]=train[\"label\"].asfactor()","36bb7963":"train['label'].levels()","e6946211":"model = H2ODeepLearningEstimator(\n                             distribution=\"multinomial\",\n                             activation = \"RectifierWithDropout\",\n                             hidden = [32,32,32],\n                             input_dropout_ratio=0.2,  \n                             standardize=True,\n                             epochs = 500\n                             )","9a87bbad":"start = time()\nmodel.train(X_columns,\n               y_columns,\n               training_frame = train)\n\n\nend = time()\n(end - start)\/60","a6ba20bf":"result = model.predict(test[: , 1:785])","25e7ca88":"result.shape       # 5730 X 3","0e6ad274":"result.as_data_frame().head(10)   # Class-wise predictions","b40bead7":"#  Ground truth\n#      Convert H2O frame back to pandas dataframe\nxe = test['label'].as_data_frame()\nxe['result'] = result[0].as_data_frame()\nxe.head()\nxe.columns","55c89293":"#Accuracy\nout = (xe['result'] == xe['label'])\nnp.sum(out)\/out.size","f38c58b5":"There are [multiple algorithms](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/data-science.html)  available in the H2O module. "}}