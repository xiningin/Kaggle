{"cell_type":{"4b21cf23":"code","1a19dc69":"code","785ab5b2":"code","f1a21ab4":"code","e1ffeb59":"code","6c94b0d2":"code","3e14e616":"code","3b1f4547":"code","d72ab365":"code","62de8585":"code","b3ba9410":"code","5c241535":"code","5f6c4550":"code","531f9d5d":"code","ef3e27f6":"code","2bafd733":"code","9e69de47":"code","9427d9d0":"code","319f1259":"markdown"},"source":{"4b21cf23":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport scipy as sc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport gc\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nfrom tqdm import tqdm_notebook\nimport datetime\nimport time\nimport random\nfrom joblib import Parallel, delayed\n\n\nimport lightgbm as lgb\nfrom tensorflow import keras\nfrom gplearn.genetic import SymbolicRegressor\nfrom catboost import Pool, CatBoostRegressor\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import GridSearchCV, KFold, RandomizedSearchCV\nfrom sklearn.feature_selection import RFECV, SelectFromModel\n\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import NuSVR, SVR\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor","1a19dc69":"train_X_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_X_features_865.csv\")\ntrain_X_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_X_features_865.csv\")\ny_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_y.csv\", index_col=False,  header=None)\ny_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_y.csv\", index_col=False,  header=None)","785ab5b2":"train_X = pd.concat([train_X_0, train_X_1], axis=0)\ntrain_X = train_X.reset_index(drop=True)\nprint(train_X.shape)\ntrain_X.head()","f1a21ab4":"train_y = pd.concat([y_0, y_1], axis=0)\ntrain_y = train_y.reset_index(drop=True)\ntrain_y.columns = ['time_to_failure']\ntrain_y['time_to_failure'].shape","e1ffeb59":"test_X = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/test_X_features_10.csv\")","6c94b0d2":"scaler = StandardScaler()\ntrain_columns = train_X.columns\n\ntrain_X[train_columns] = scaler.fit_transform(train_X[train_columns])\ntest_X[train_columns] = scaler.transform(test_X[train_columns])","3e14e616":"import h2o\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='16G')","3b1f4547":"train = h2o.H2OFrame(train_X)\ntest = h2o.H2OFrame(test_X)\ny_train = h2o.H2OFrame(train_y)","d72ab365":"train['time_to_failure'] = y_train['time_to_failure']\nx = list(train_X.columns)\ny = train_y.columns[0]","62de8585":"%%time\nnfolds=0\naml = H2OAutoML(max_models=500, seed=555, max_runtime_secs=6000,nfolds=nfolds,sort_metric=\"MAE\")\naml.train(x=x, y=y, training_frame=train)","b3ba9410":"lb = aml.leaderboard\nlb.head(rows=lb.nrows)","5c241535":"aml.leader","5f6c4550":"preds = aml.predict(test)\n\nsample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = preds.as_data_frame().values.flatten()\nsample_submission.to_csv('h2o_submission_fold0.csv', index=False)","531f9d5d":"%%time\nnfolds=5\naml = H2OAutoML(max_models=500, seed=554, max_runtime_secs=8000,nfolds=nfolds,sort_metric=\"MAE\")\naml.train(x=x, y=y, training_frame=train)","ef3e27f6":"lb = aml.leaderboard\nlb.head(rows=lb.nrows)","2bafd733":"aml.leader","9e69de47":"preds = aml.predict(test)\n\nsample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = preds.as_data_frame().values.flatten()\nsample_submission.to_csv('h2o_submission_fold5.csv', index=False)","9427d9d0":"sample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = (pd.read_csv('h2o_submission_fold0.csv')['time_to_failure']+pd.read_csv('h2o_submission_fold5.csv')['time_to_failure'])\/2\nsample_submission.to_csv('h2o_submission_blend.csv', index=False)","319f1259":"# H2O AutoML"}}