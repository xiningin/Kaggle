{"cell_type":{"4fd0a5c8":"code","b7fb9357":"code","a6401f47":"code","0023adfa":"code","91852a3e":"code","d4a7bc0e":"code","3bfe9adb":"code","8d3e294c":"code","0de42c06":"code","86803ad5":"code","c7e0d6db":"code","08923a23":"code","c5b76537":"code","ae330078":"code","bb32e02e":"code","5798da8d":"code","e6155baf":"code","cae044d7":"code","77d01294":"code","daf546a8":"code","d1877334":"code","36a67026":"code","449b01f2":"code","d1baa767":"code","4a5686b9":"code","733f7743":"code","7b31a159":"code","db8bee81":"code","a6ef97d8":"code","effcbe35":"code","e6c8c6d8":"code","96f6565d":"code","dca648d8":"markdown","655d759b":"markdown","df40f3b6":"markdown","908ba452":"markdown","24ed7e7c":"markdown","e6ca4365":"markdown","b95897a3":"markdown","cb7bae19":"markdown","7f0a4512":"markdown","a94a53f6":"markdown","b9893846":"markdown","e49724dd":"markdown","7531821b":"markdown","db808e71":"markdown","0839c014":"markdown","cb982698":"markdown","fcaac793":"markdown","24f78ff0":"markdown","f4561874":"markdown","629f8c0d":"markdown","d04a78fb":"markdown","8822ec8c":"markdown","55eaa793":"markdown"},"source":{"4fd0a5c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfrom pandas_profiling import ProfileReport\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nimport plotly.graph_objects as go\n\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7fb9357":"df = pd.read_csv('..\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv')\ndf.shape","a6401f47":"df.head(5)","0023adfa":"df.describe()","91852a3e":"df.isnull().sum().sum()","d4a7bc0e":"ProfileReport(df)","3bfe9adb":"color = plt.cm.plasma\nsns.heatmap(df.corr(), annot=True, cmap=color)","8d3e294c":"df.Age.max()","0de42c06":"labels = ['Male', 'Female']\nvalues = df.Sex.value_counts().values\n\nfig = go.Figure(data=[go.Pie(labels=labels, textinfo='label+percent', values=values)])\nfig.show()","86803ad5":"labels = df.Country.value_counts().index\nvalues = df.Country.value_counts().values\n\nfig = go.Figure(data=[go.Pie(labels=labels, textinfo='label+percent', values=values)])\nfig.show()","c7e0d6db":"labels = ['Dead', 'Survived']\nvalues = df.Survived.value_counts().values\n\nfig = go.Figure(data=[go.Pie(labels=labels, textinfo='label+percent', values=values)])\nfig.show()","08923a23":"sns.countplot(x='Category', hue='Sex', data=df).set_title('Gender wise survivors distrbution')","c5b76537":"male_survived = df['Sex'][(df['Sex']=='M') & (df['Survived']==1)].count()\nfemale_survived = df['Sex'][(df['Sex']=='F') & (df['Survived']==1)].count()\n\nmale_all = df['Sex'][df['Sex']=='M'].count()\nfemale_all =df['Sex'][df['Sex']=='F'].count()\n\nperc_male = male_survived\/male_all\nperc_female = female_survived\/female_all\n\nprint('Proportion of Male passengers that survived {:0.2f} '.format(perc_male*100))\nprint('Proportion of Female passengers that survived {:0.2f} '.format(perc_female*100))","ae330078":"sns.countplot(x='Category', hue='Survived', data=df).set_title('Passenger and Crew Survived Distribution')","bb32e02e":"df.drop(['Country', 'Firstname', 'Lastname'], axis=1, inplace=True)","5798da8d":"df.head()","e6155baf":"df.drop(['Category', 'Sex'],axis=1, inplace=True)\ndf.head()","cae044d7":"df.isnull().sum()","77d01294":"x = df.drop(['Survived'], axis=1)\ny = df['Survived']","daf546a8":"sc=StandardScaler()\nsc.fit(df.drop(['Survived', 'PassengerId'], axis = 1))\nx_train = sc.transform(df.drop(['Survived', 'PassengerId'], axis = 1))","d1877334":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 5)","36a67026":"rfc = RandomForestClassifier()\nrfc.fit(x_train, y_train)\npreds = rfc.predict(x_test)\nscore = rfc.score(x_test,y_test)","449b01f2":"score","d1baa767":"preds[:10]","4a5686b9":"ground_truth = y_test[:10]\nground_truth","733f7743":"from sklearn.metrics import confusion_matrix, classification_report\n\ncm = confusion_matrix(preds, y_test)\nprint('The Confusion Matrix : \\n', cm)","7b31a159":"sns.heatmap(cm, annot = True, cmap='coolwarm')","db8bee81":"cf = classification_report(preds, y_test)\nprint('The Report : \\n', cf)","a6ef97d8":"from xgboost import XGBClassifier\n\nxgb = XGBClassifier()\nxgb.fit(x_train,y_train)","effcbe35":"xgb_preds = xgb.predict(x_test)\nxgb_score = xgb.score(x_test,y_test)\nprint('The Accuracy :',xgb_score)","e6c8c6d8":"cm = confusion_matrix(preds, y_test)\nprint('The Confusion Matrix : \\n', cm)\nsns.heatmap(cm, annot=True, cmap=color)","96f6565d":"cf = classification_report(xgb_preds, y_test)\nprint('The Report : \\n', cf)","dca648d8":"**So here ProfileReport did an concise display of features pertaining to this dataset, like Correlation, basic statistics etc. all in onle line of code!!**","655d759b":"# Introduction\n\n![](https:\/\/i.ibb.co\/hB0CV9W\/r-MS-Estonia-model.jpg)\nsourced from https:\/\/www.kaggle.com\/christianlillelund\/passenger-list-for-the-estonia-ferry-disaster\n\n**This dataset is based on a true incident of Sinking of an Estonian Ship in 1994, which is considered as worst maritime disaster postwar**\n\n**About Dataset**\n1. Country\t\t\n2. Firstname\t\n3. Lastname\t\t\n4. Sex\tGender of passenger\t\n5. Age\t\t\n6. Category--The type of passenger\tC = Crew, P = Passenger\n7. Survived","df40f3b6":"**So we have a somewhat equal Gender wise representation here**","908ba452":"# Correlation","24ed7e7c":"# Loading Dataset","e6ca4365":"# How many Males and Females onboard?","b95897a3":"**Survivors among crew and passengers**","cb7bae19":"# Survived","7f0a4512":"# EDA and Pandas Profiling\n**Using ProfileReport of pandas let's explore the dataset**","a94a53f6":"# Preprocessing ","b9893846":"# Let's do some Feature Engineering here","e49724dd":"**Let's check the missing values now**","7531821b":"# Let's start with EDA\n**First let's use .describe() to understand the satistical parameters of our dataset**","db808e71":"# Who Survived More?","0839c014":"**Great!! our dataset is clean now and our work becomes easier now**","cb982698":"# XGB","fcaac793":"**0 means dead, 1 means survived**","24f78ff0":"# Random Forest Classifier","f4561874":"# Importing Libraries","629f8c0d":"# Model Develpoment","d04a78fb":"**So here not much of correlation is there between the datasets, so no effect of columns on each other**","8822ec8c":"# Passengers from Which Countries","55eaa793":"# Data Visualizations"}}