{"cell_type":{"714903d9":"code","b753c6ac":"code","def480b7":"code","9ca99033":"code","ad532b5c":"code","596e6ed9":"code","07e10f7a":"code","2306f05a":"code","95e4597c":"markdown"},"source":{"714903d9":"from __future__ import print_function\nimport lime\nimport pandas as pd\nimport sklearn\nimport numpy as np\nimport sklearn\nimport sklearn.ensemble\nimport sklearn.metrics\nfrom sklearn.model_selection import train_test_split","b753c6ac":"# Load dataset\ntrain_data = pd.read_csv('..\/input\/tweets\/tweet_sentiment_bitcoin_2000.csv', \n                         sep=';;;;;;;;;;\";', names = ['tweet', 'polarity'])\n\ntrain_data = train_data.dropna()\n\ntrain_data.columns = [\"text\",\"polarity\"]\n\ntrain_sentences = train_data[\"text\"].fillna(\"fillna\").str.lower()\n\ny1 = train_data[\"polarity\"].values\n\ny=[float(s.replace(',','.'))for s in y1]\n\nboundary = 0.2\n\n# The dataset is composed of  y=0 ou y=4 for positive\nfor i in range(len(y)):\n    if y[i] > boundary:\n        y[i] = 1\n    elif y[i] > -boundary:\n        y[i] = 0\n    else:\n        y[i] = -1\n\n# separation\nX_train, X_val, y_train, y_val = train_test_split(train_sentences, y, test_size=0.2, random_state=1)","def480b7":"import sklearn.feature_extraction\n\n# transforme phrase into vector\nvectorizer = sklearn.feature_extraction.text.TfidfVectorizer(lowercase=False)\ntrain_vectors = vectorizer.fit_transform(X_train)\ntest_vectors = vectorizer.transform(X_val)","9ca99033":"from sklearn.naive_bayes import MultinomialNB\nnb = MultinomialNB(alpha=.01)\nnb.fit(train_vectors, y_train)","ad532b5c":"pred = nb.predict(test_vectors)\nsklearn.metrics.f1_score(y_val, pred, average='weighted')","596e6ed9":"from lime import lime_text\nfrom sklearn.pipeline import make_pipeline\nfrom lime.lime_text import LimeTextExplainer\n\nc = make_pipeline(vectorizer, nb)\n\nclass_names = ['N\u00e9gatif','Neutre','Positif']\nexplainer = LimeTextExplainer(class_names=class_names)","07e10f7a":"idx = 123\nexp = explainer.explain_instance(X_val.values.tolist()[idx], c.predict_proba, num_features=6, labels=[0, 2])\nprint('True class: %s' % class_names[y_val[idx]])\n#exp.save_to_file(text=X_val.values.tolist()[idx], )\nexp.save_to_file('lime.html')","2306f05a":"Text='Bitcoin plummet is expected in a few months'\nexp = explainer.explain_instance(Text, c.predict_proba, num_features=6, labels=[0, 2])\n#exp.save_to_file(text=Text)\nexp.save_to_file(Text+'.html')","95e4597c":"# Explaining predictions using lime"}}