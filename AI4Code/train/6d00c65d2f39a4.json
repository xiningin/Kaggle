{"cell_type":{"1f6025be":"code","b0c167e4":"code","af31f6c0":"code","01a434d7":"code","6fb57910":"code","c67e6fd4":"code","6720d6a1":"code","6ff0b975":"code","a0bbe8a0":"code","4ef28691":"code","bb96b75a":"code","0328e2d2":"code","9e75223d":"code","654f6bcc":"code","d7654e36":"code","8a5546ec":"code","b30742d4":"markdown","1f1053ea":"markdown","ab5ce4b6":"markdown","002f35d7":"markdown","5c7d23d9":"markdown","dadd5751":"markdown","41b949f6":"markdown","832f403f":"markdown","6ac9dac6":"markdown","e3f246c0":"markdown","0970c0ed":"markdown","cc882e23":"markdown"},"source":{"1f6025be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\ncolor = sns.color_palette()\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nimport plotly.tools as tls\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b0c167e4":"df=pd.read_csv('..\/input\/Admission_Predict_Ver1.1.csv')\ndf.head()","af31f6c0":"print(df.info())\nprint(df.isnull().sum())\ndf.describe()","01a434d7":"cnt_srs = df['University Rating'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=['#04A46D','#029AF9','#6D0601','#6D016D','#878D02']\n    ),\n)\n\nlayout = dict(\n    title='Rating distribution of Universities',\n    xaxis=dict(\n        title='No. of Universities',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=18,\n            color='#2F3102'\n        )\n    ),\n    yaxis=dict(\n        title='Ratings of the Universities',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=18,\n            color='#2F3102'\n        )\n    )\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"univs\")","6fb57910":"plt.figure(figsize=(10,8))\nsns.heatmap(df.drop('Serial No.',axis=1).corr(),annot=True)","c67e6fd4":"trace0 = go.Scatter(\n    x = df.ix[df['Chance of Admit ']>=0.7]['GRE Score'],\n    y = df.ix[df['Chance of Admit ']>=0.7]['CGPA'],\n    name = 'Chance of Admit > 0.7',\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = 'rgba(152, 0, 0, .8)',\n        line = dict(\n            width = 2,\n            color = 'rgb(0, 0, 0)'\n        )\n    )\n)\n\ntrace1 = go.Scatter(\n    x = df.ix[df['Chance of Admit ']<0.7]['GRE Score'],\n    y = df.ix[df['Chance of Admit ']<0.7]['CGPA'],\n    name = 'Chance of Admit < 0.7',\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = 'rgba(255, 182, 193, .9)',\n        line = dict(\n            width = 2,\n        )\n    )\n)\n\ndata = [trace0, trace1]\n\nlayout = dict(title = 'GRE and CGPA Score Distribution',\n              yaxis = dict(zeroline = False),\n              xaxis = dict(zeroline = False)\n             )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-scatter')","6720d6a1":"df1=df.ix[df['Chance of Admit ']>=0.7]\ndf1=df1[df1['University Rating']>3]\nfig = {\n    \"data\": [\n        {\n            \"type\": 'violin',\n            \"y\": df1['GRE Score'],\n            \"legendgroup\": 'M',\n            \"scalegroup\": 'M',\n            \"name\": 'GRE Score Distribution of People having >0.7 Chances of Admission in 4 rated University',\n            \"box\": {\n                \"visible\": True\n            },\n             \"fillcolor\": '#E9B2AE',\n            \"meanline\": {\n                \"visible\": True\n            },\n            \"line\": {\n                \"color\": 'black'\n            }\n        }],\n        \"layout\" : {\n        \"yaxis\": {\n            \"zeroline\": False,\n        },\n        \"violinmode\": \"group\"\n    }\n}\npy.iplot(fig, filename = 'gre')\n\nfig = {\n    \"data\": [\n        {\n            \"type\": 'violin',\n            \"y\": df1['TOEFL Score'],\n            \"legendgroup\": 'M',\n            \"scalegroup\": 'M',\n            \"name\": 'TOEFL Score Distribution of People having >0.7 Chances of Admission in 4 rated University',\n            \"box\": {\n                \"visible\": True\n            },\n             \"fillcolor\": '#AEE9B4',\n            \"meanline\": {\n                \"visible\": True\n            },\n            \"line\": {\n                \"color\": 'black'\n            }\n        }],\n        \"layout\" : {\n        \"yaxis\": {\n            \"zeroline\": False,\n        },\n        \"violinmode\": \"group\"\n    }\n}\npy.iplot(fig, filename = 'toefl')\n\nfig = {\n    \"data\": [\n        {\n            \"type\": 'violin',\n            \"y\": df1['CGPA'],\n            \"legendgroup\": 'M',\n            \"scalegroup\": 'M',\n            \"name\": 'CGPA Score Distribution of People having >0.7 Chances of Admission in 4 rated University',\n            \"box\": {\n                \"visible\": True\n            },\n             \"fillcolor\": '#BA8C24',\n            \"meanline\": {\n                \"visible\": True\n            },\n            \"line\": {\n                \"color\": 'black'\n            }\n        }],\n        \"layout\" : {\n        \"yaxis\": {\n            \"zeroline\": False,\n        },\n        \"violinmode\": \"group\"\n    }\n}\npy.iplot(fig, filename = 'cgpa')\n\nfig = {\n    \"data\": [\n        {\n            \"type\": 'violin',\n            \"y\": df1['SOP'],\n            \"legendgroup\": 'M',\n            \"scalegroup\": 'M',\n            \"name\": 'SOP Score Distribution of People having >0.7 Chances of Admission in 4 rated University',\n            \"box\": {\n                \"visible\": True\n            },\n             \"fillcolor\": '#E0E5E0',\n            \"meanline\": {\n                \"visible\": True\n            },\n            \"line\": {\n                \"color\": 'black'\n            }\n        }],\n        \"layout\" : {\n        \"yaxis\": {\n            \"zeroline\": False,\n        },\n        \"violinmode\": \"group\"\n    }\n}\npy.iplot(fig, filename = 'sop')\n\nfig = {\n    \"data\": [\n        {\n            \"type\": 'violin',\n            \"y\": df1['LOR '],\n            \"legendgroup\": 'M',\n            \"scalegroup\": 'M',\n            \"name\": 'LOR Score Distribution of People having >0.7 Chances of Admission in 4 rated University',\n            \"box\": {\n                \"visible\": True\n            },\n             \"fillcolor\": '#AEE3E9',\n            \"meanline\": {\n                \"visible\": True\n            },\n            \"line\": {\n                \"color\": 'black'\n            }\n        }],\n        \"layout\" : {\n        \"yaxis\": {\n            \"zeroline\": False,\n        },\n        \"violinmode\": \"group\"\n    }\n}\npy.iplot(fig, filename = 'lor')","6ff0b975":"print(df1[df1['Research']==0].shape[0],\"students have good chances to go \\\ninto top rated universities without research experience.\")\ndf1[df1['Research']==0]","a0bbe8a0":"df_top=df.ix[df['University Rating']>2]\ndf_top_admits=df_top.ix[df_top['Chance of Admit ']>=0.7]\ndf_top_admits[df_top_admits['CGPA']<8]","4ef28691":"print(df_top_admits[df_top_admits['GRE Score']<320].shape[0],\"students have good chances to get into \\\n3, 4 or 5 rated university with a GRE Score < 320\")\ndf_top_admits[df_top_admits['GRE Score']<320]","bb96b75a":"df_best=df_top_admits[df_top_admits['University Rating']>3]\n\ntrace1 = go.Scatter(\n    x = df_best['GRE Score'],\n    y = df_best['CGPA'],\n    name = 'Chance of Admit >= 0.7 in 4 or 5 rated university',\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = '#B4DEB4',\n        line = dict(\n            width = 2,\n        )\n    )\n)\n\ndata = [trace1]\n\nlayout = dict(title = 'GRE and CGPA Score Distribution for students having good chances to get into 4 or 5 rated univers\\\nities',\n              yaxis = dict(zeroline = False),\n              xaxis = dict(zeroline = False)\n             )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='gre-scatter')","0328e2d2":"df.head(1)","9e75223d":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nX_train,X_test,y_train,y_test=train_test_split(df.drop(['Serial No.','Chance of Admit '],axis=1),df[['Chance of Admit ']],\n                                              test_size=0.25, random_state=42) #train_set=75%,test_set=25%\n\nlr=LinearRegression()\n\nlr.fit(X_train,y_train)\n\npreds=lr.predict(X_test)","654f6bcc":"from sklearn.metrics import mean_squared_error\n\nprint(\"The mean squared error for predicting the probability of chances of an admission comes out to be\",\\\n      str(round(mean_squared_error(preds,y_test),5)))","d7654e36":"coefficients = pd.concat([pd.DataFrame(X_train.columns).rename(columns={0:'Feature Name'})\\\n                          ,pd.DataFrame(np.transpose(lr.coef_)).rename(columns={0:'Importance Value'})], axis = 1)\nprint('The important features for getting an MS admission in descending order are:')\ncoefficients=coefficients.sort_values(by=['Importance Value'],ascending=False).reset_index(drop=True)\ncoefficients","8a5546ec":"data = [go.Bar(\n            x=coefficients['Feature Name'],\n            y=coefficients['Importance Value']\n    )]\n\npy.iplot(data, filename='bar')","b30742d4":"### Low CGPA or getting a GRE score below 320 has always been a worry for students, thinking that if they will get any good colleges or not. Here we'll try to find out if possible, how many students have been able to make it to 3, 4 or 5 rated university with an avg. CGPA or an avg. GRE Score\n\n#### I'm keeping good CGPA threshold of 8 and GRE Score 320 and admission probability threshold of 0.7 as good.\n\nWe'll see if any of the students has score below these.","1f1053ea":"### Predictive Modelling\n\nI'll try with Linear Regression only to make the predictive model for chances of admission. And then try to visualize the important features.","ab5ce4b6":"### Next part is the predictive modelling part and finding out the most important features for getting a good MS admission.","002f35d7":"Does these seem to biased? Well I will leave the thoughts upon you!","5c7d23d9":"Now, we'll look at the distribution of the CGPA score and the GRE Score for the students having really good probabilty to get into 4 or 5 rated university.","dadd5751":"# How good is my profile to get a good college in MS?\n\n### This is probably a question that every aspiring MS aspirant wants to know. Is my profile good enough to get a good college? Being an aspirant myself even I also have so many doubts, whether my CGPA is good enough, how should I write a solid SOP, etc.\n\n### So this kernel will mainly have the following two sections\n\n* EDA\n     *  Understanding the important factors\n     *  Visualisation        \n* Predictve Modelling","41b949f6":"#### Here we see the distribution of the scores of people who have > 0.7 and < 0.7 chances of getting an admission for an MS.\n\nPlease note, no bar for University Rating has been put here, the probability is for any university admission for MS","832f403f":"Well let's have a look at the no. of students who didn't have research experience at all but still got into the top rated universities.","6ac9dac6":"Hmm, two students has a really good probability to get in, one maybe because SOP is good and the other one because of Research Experience.","e3f246c0":"### Next we'll find out the distribution of the scores of the people who had admission chances > 0.7 and that too in 4 & 5 rated universities","0970c0ed":"So the data that we have for admission probability is maximum for 3 rated universities.","cc882e23":"Lets see the data distribution of the no. of universities given based on their ratings"}}