{"cell_type":{"01e23d8f":"code","e3980b7a":"code","74c7b00b":"code","4f2edb2b":"code","31eb15a7":"code","7b9f5fce":"code","1c3cab3d":"code","bb5c11ea":"code","8dcd19fb":"code","1659bff5":"code","337a4756":"code","0d797a18":"code","163cab63":"markdown","52ff13bb":"markdown","b2d11483":"markdown","607834cc":"markdown","79c6dd38":"markdown","09f2fa61":"markdown","1221b665":"markdown","4d3d36a2":"markdown"},"source":{"01e23d8f":"# Import the required libraries\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nsns.set_style(style = 'whitegrid')","e3980b7a":"## load the test dataset into a temp dataframe\ntmp_train_df = pd.read_csv('..\/input\/train.csv', nrows=100)\nno_of_rows,no_of_cols = tmp_train_df.shape\nprint('The temp train dataset has: ', no_of_rows,'Rows', '&',no_of_cols,'Columns' )","74c7b00b":"## load the test dataset into a temp dataframe\ntmp_test_df = pd.read_csv('..\/input\/test.csv', nrows=100)\nno_rows,no_cols = tmp_test_df.shape\nprint('The temp test dataset has: ', no_rows,'Rows', '&',no_cols,'Columns' )","4f2edb2b":"# List the 83 columns and check their datatypes\ntmp_train_df.info()","31eb15a7":"# List the 82 columns and check their datatypes\ntmp_test_df.info()","7b9f5fce":"dtypes = {\n        'MachineIdentifier':                                    'category'\n        ,'ProductName':                                          'category'\n        ,'EngineVersion':                                        'category'\n        ,'AppVersion':                                           'category'\n        ,'AvSigVersion':                                         'category'\n        ,'IsBeta':                                               'int8'\n        ,'RtpStateBitfield':                                     'float16'\n        ,'IsSxsPassiveMode':                                     'int8'\n        ,'DefaultBrowsersIdentifier':                            'float16'\n        ,'AVProductStatesIdentifier':                            'float32'\n        ,'AVProductsInstalled':                                  'float16'\n        ,'AVProductsEnabled':                                    'float16'\n        ,'HasTpm':                                               'int8'\n        ,'CountryIdentifier':                                    'int16'\n        ,'CityIdentifier':                                       'float32'\n        ,'OrganizationIdentifier':                               'float16'\n        ,'GeoNameIdentifier':                                    'float16'\n        ,'LocaleEnglishNameIdentifier':                          'int8'\n        ,'Platform':                                             'category'\n        ,'Processor':                                            'category'\n        ,'OsVer':                                                'category'\n        ,'OsBuild':                                              'int16'\n        ,'OsSuite':                                              'int16'\n        ,'OsPlatformSubRelease':                                 'category'\n        ,'OsBuildLab':                                           'category'\n        ,'SkuEdition':                                           'category'\n        ,'IsProtected':                                          'float16'\n        ,'AutoSampleOptIn':                                      'int8'\n        ,'PuaMode':                                              'category'\n        ,'SMode':                                                'float16'\n        ,'IeVerIdentifier':                                      'float16'\n        ,'SmartScreen':                                          'category'\n        ,'Firewall':                                             'float16'\n        ,'UacLuaenable':                                         'float32'\n        ,'Census_MDC2FormFactor':                                'category'\n        ,'Census_DeviceFamily':                                  'category'\n        ,'Census_OEMNameIdentifier':                             'float16'\n        ,'Census_OEMModelIdentifier':                            'float32'\n        ,'Census_ProcessorCoreCount':                            'float16'\n        ,'Census_ProcessorManufacturerIdentifier':               'float16'\n        ,'Census_ProcessorModelIdentifier':                      'float16'\n        ,'Census_ProcessorClass':                                'category'\n        ,'Census_PrimaryDiskTotalCapacity':                      'float32'\n        ,'Census_PrimaryDiskTypeName':                           'category'\n        ,'Census_SystemVolumeTotalCapacity':                     'float32'\n        ,'Census_HasOpticalDiskDrive':                           'int8'\n        ,'Census_TotalPhysicalRAM':                              'float32'\n        ,'Census_ChassisTypeName':                               'category'\n        ,'Census_InternalPrimaryDiagonalDisplaySizeInInches':    'float16'\n        ,'Census_InternalPrimaryDisplayResolutionHorizontal':    'float16'\n        ,'Census_InternalPrimaryDisplayResolutionVertical':      'float16'\n        ,'Census_PowerPlatformRoleName':                         'category'\n        ,'Census_InternalBatteryType':                           'category'\n        ,'Census_InternalBatteryNumberOfCharges':                'float32'\n        ,'Census_OSVersion':                                     'category'\n        ,'Census_OSArchitecture':                                'category'\n        ,'Census_OSBranch':                                      'category'\n        ,'Census_OSBuildNumber':                                 'int16'\n        ,'Census_OSBuildRevision':                               'int32'\n        ,'Census_OSEdition':                                     'category'\n        ,'Census_OSSkuName':                                     'category'\n        ,'Census_OSInstallTypeName':                             'category'\n        ,'Census_OSInstallLanguageIdentifier':                   'float16'\n        ,'Census_OSUILocaleIdentifier':                          'int16'\n        ,'Census_OSWUAutoUpdateOptionsName':                     'category'\n        ,'Census_IsPortableOperatingSystem':                     'int8'\n        ,'Census_GenuineStateName':                              'category'\n        ,'Census_ActivationChannel':                             'category'\n        ,'Census_IsFlightingInternal':                           'float16'\n        ,'Census_IsFlightsDisabled':                             'float16'\n        ,'Census_FlightRing':                                    'category'\n        ,'Census_ThresholdOptIn':                                'float16'\n        ,'Census_FirmwareManufacturerIdentifier':                'float16'\n        ,'Census_FirmwareVersionIdentifier':                     'float32'\n        ,'Census_IsSecureBootEnabled':                           'int8'\n        ,'Census_IsWIMBootEnabled':                              'float16'\n        ,'Census_IsVirtualDevice':                               'float16'\n        ,'Census_IsTouchEnabled':                                'int8'\n        ,'Census_IsPenCapable':                                  'int8'\n        ,'Census_IsAlwaysOnAlwaysConnectedCapable':              'float16'\n        ,'Wdft_IsGamer':                                         'float16'\n        ,'Wdft_RegionIdentifier':                                'float16'\n        ,'HasDetections':                                        'int8'\n        }","1c3cab3d":"# Load the entire train dataset into a dataframe\n%time train_df = pd.read_csv('..\/input\/train.csv', dtype=dtypes)","bb5c11ea":"# Check out the new datatypes in the dataframe\ntrain_df.info()","8dcd19fb":"# Repeat the process for loading the entire test dataset into a dataframe\n%time test_df = pd.read_csv('..\/input\/test.csv', dtype=dtypes)","1659bff5":"# Get the summary statistics of the train variables\ntrain_df.describe()","337a4756":"# Create a dataframe of categorical features only\nds_cat = train_df.select_dtypes(include = 'category').copy()","0d797a18":"# create an empty dataframe for the summary statistics of categorical data\nds_cat_stats = pd.DataFrame(columns = ['column', 'values', 'values_count_incna', 'values_count_nona', \n                                       'num_miss', 'pct_miss'])\ntmp = pd.DataFrame()\n\nfor c in ds_cat.columns:\n    tmp['column'] = [c]\n    tmp['values'] = [ds_cat[c].unique()]\n    tmp['values_count_incna'] = len(list(ds_cat[c].unique()))\n    tmp['values_count_nona'] = int(ds_cat[c].nunique())\n    tmp['num_miss'] = ds_cat[c].isnull().sum()\n    tmp['pct_miss'] = (ds_cat[c].isnull().sum()\/ len(ds_cat)).round(3)*100\n    ds_cat_stats = ds_cat_stats.append(tmp)\n    \nds_cat_stats\n","163cab63":"For each feature, get the distinct values, number of values including nulls,number of non-null values and percentage of null values. ","52ff13bb":"# Summarize the train dataset","b2d11483":"# **Microsoft Malware Prediction **\nThe purpose of this kernel is to investigate and predict the likelihood of Windows machines getting Marlware infections based on the properties of the machine.\n\nIn the train dataset, `HasDetections` indicates whether a machine with a particular `MachineIdentifier` is infected by Malware and in the test dataset `HasDetections` is the target variable that we aim to predict.\n\n# Strategy\n\n1. Data Discovery - size, dimensions, attributes, datatypes, etc.\n2. Categorical Exploratory Data Analysis \n3. Numerical Exploratory Data Analysis ","607834cc":"## Observations:\n\n1. There are three datatypes in the train dataset: \n * float64: 23 columns\n * int64: 32 columns\n * object: 28 columns\n\n2. There are three datatypes in the test dataset:\n * float64: 26 columns\n * int64: 28 columns\n * object: 28 columns\n\n3. memory usage for loading 100 rows: 64.9+ KM","79c6dd38":"Here,I perform an EDA on categorical variables using the method discussed in [this interesting kernel](https:\/\/www.kaggle.com\/nextbigwhat\/eda-for-categorical-variables-part-2) by [Samarth Agrawal](https:\/\/www.kaggle.com\/nextbigwhat).","09f2fa61":"# EDA for Categorical Features","1221b665":"# Loading the entire dataset into a DataFrame \nTo load the entire dataset, I decided to adopt the approach of [this useful kernel](https:\/\/www.kaggle.com\/theoviel\/load-the-totality-of-the-data) by  [Theo Viel](https:\/\/www.kaggle.com\/theoviel) that suggests changing the datatypes will seemingly reduce the memory usage and allow the data to be loaded into memory fully. ","4d3d36a2":"## Import & Investigate the input files (train.csv,test.csv)\n\nImportant Note: the input files are too big to load all at once using *pd.lead_csv()*, therefore I only loaded 100 records of the train dataset into a temporarty DataFrame to get a sense of what's inside the file. "}}