{"cell_type":{"874b8e1a":"code","8cf18311":"code","f67b6a6d":"code","cf8c1b3a":"code","2dedae9f":"code","e9edcf13":"code","1589c229":"code","cb7f92eb":"code","89c64674":"code","5009e422":"code","97f687fa":"code","d805b9c1":"code","dc82ceab":"code","80a4fe7d":"code","46279254":"code","56beb10a":"code","7568fd93":"code","42ba762c":"code","a500314a":"code","e63e5349":"code","09931fd8":"code","cd521f42":"code","bc545c4c":"code","a74b33a4":"code","61d99e3b":"code","e90bdbcc":"markdown","e3ada64a":"markdown","4d9dc9c5":"markdown"},"source":{"874b8e1a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8cf18311":"import tensorflow\nfrom tensorflow import keras","f67b6a6d":"%matplotlib inline","cf8c1b3a":"import matplotlib.pyplot as plt","2dedae9f":"print('Loading data...')\ntrain = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest_X = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","e9edcf13":"print(train.shape)\nprint(test_X.shape)","1589c229":"train.head()","cb7f92eb":"test_X.head()","89c64674":"train_X = train.iloc[:, 1:].values.astype('float32')\ntrain_y = train.iloc[:, 0].values.astype('float32') ","5009e422":"from sklearn.model_selection import train_test_split","97f687fa":"X_train, X_val, y_train, y_val = map(lambda x : np.array(x).astype(np.float32), train_test_split(train_X, train_y, test_size=0.2))","d805b9c1":"X_train.shape","dc82ceab":"for i in range(10):\n    plt.subplot(2, 5, i+1)\n    plt.title(\"label:\" + str(i+100))\n    plt.imshow(X_train[i+100].reshape(28, 28), cmap=None)\n    \n#Display an image.","80a4fe7d":"y_train[100:110]","46279254":"X_train, X_val = X_train \/ 255.0, X_val \/ 255.0","56beb10a":"model = keras.models.Sequential([\n    keras.layers.Flatten(),\n    keras.layers.Dense(512, activation='relu'),\n    keras.layers.Dropout(0.2),\n    keras.layers.Dense(10, activation='softmax')\n])","7568fd93":"model.compile(optimizer='adam',\n             loss='sparse_categorical_crossentropy',\n             metrics=['accuracy'])","42ba762c":"history = model.fit(X_train, y_train,\n                    validation_data=(X_val, y_val), epochs=10,\n                    batch_size=100, verbose=1)","a500314a":"model.evaluate(X_val, y_val)","e63e5349":"y_val[0:10]","09931fd8":"for i in range(10):\n    plt.subplot(2, 5, i+1)\n    plt.title(\"label:\" + str(i))\n    plt.imshow(X_val[i].reshape(28, 28), cmap=None)\n    \n#Display an image.","cd521f42":"model.predict(X_val[0:10])","bc545c4c":"y_pred = model.predict(test_X, batch_size=2000, \n                       verbose=1)","a74b33a4":"y_pred = np.argmax(y_pred, axis=1)\nto_submit = pd.DataFrame({'Label': y_pred})","61d99e3b":"to_submit.index += 1\nto_submit.index.name = \"ImageId\"\nto_submit.to_csv('submition_3layer_keras.csv')","e90bdbcc":"This is the Kernel for practicing 3layer perceptron using keras by Kaggle Digit Recognizer.\n\n#Get started with TensorFlow 2.0 for beginners\nhttps:\/\/colab.research.google.com\/github\/tensorflow\/docs\/blob\/r2.0rc\/site\/en\/r2\/tutorials\/quickstart\/beginner.ipynb#scrollTo=T4JfEh7kvx6m\n\nIt would be great if you could share your comments about the improvements. I am a beginner in the third month of learning python and machine learning at this time.","e3ada64a":"#### Normalizaiton","4d9dc9c5":"#### Definition model"}}