{"cell_type":{"71e5093c":"code","72bd5db8":"code","a0a40414":"code","face1898":"code","4b974df8":"code","e5e24545":"code","3edb6968":"code","f055a4e1":"code","90ee8c1b":"code","931808ce":"code","82fe4dbb":"code","b6d61c19":"code","1d086f2e":"code","4b2823a1":"code","f2a3cfba":"code","5eb0b00d":"code","c814bcb9":"code","8869dcec":"code","9476ca0c":"code","b074c895":"code","87cd1a87":"code","8c7db3fc":"code","db7c8c0d":"code","33c53fd3":"code","8dbd4237":"code","d64efd8e":"code","2427b94a":"code","a5f4959e":"code","151a6cb1":"code","aa526b62":"code","d29a32ce":"code","9918de02":"code","93bb3b4b":"code","656660cd":"code","737d3f7b":"markdown","b10b4a9c":"markdown","03535226":"markdown"},"source":{"71e5093c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nprint(os.listdir(\"..\/input\/aptos2019-blindness-detection\"))\nprint(os.listdir(\"..\/input\/resnet-model\"))\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Any results you write to the current directory are saved as output.","72bd5db8":"import keras\nfrom keras.models import load_model\nfrom keras import optimizers\nfrom keras.preprocessing import image\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D\nfrom keras.utils import to_categorical\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom tqdm import tqdm","a0a40414":"# Loading resnet50 model\nres_model = load_model('..\/input\/resnet-model\/resnet_model.h5')","face1898":"train = pd.read_csv(\"..\/input\/aptos2019-blindness-detection\/train.csv\")","4b974df8":"train['diagnosis'].head()","e5e24545":"# Function to generate image file\ndef train_func_image_file(x):\n    folder = '..\/input\/aptos2019-blindness-detection\/train_images\/'\n    path = folder + x + '.png'\n    return path","3edb6968":"train['path'] = train['id_code'].apply(train_func_image_file)","f055a4e1":"train.head()","90ee8c1b":"input_shape = (128, 128, 3)","931808ce":"# Transforming high resolution images to low resolution to meet up memory constraints\ntrain_image = []\nfor i in tqdm(range(train.shape[0])):\n    img = image.load_img(train['path'][i],target_size=input_shape,interpolation='nearest')\n    img = image.img_to_array(img)\n    img = img\/255\n    train_image.append(img)\nx_train = np.array(train_image)","82fe4dbb":"print(\"Image diagnosed with class 4 retinopathy\",plt.imshow(x_train[1]))","b6d61c19":"print(\"Image for normal eye\",plt.imshow(x_train[3]))","1d086f2e":"x_train.shape","4b2823a1":"y_train = train['diagnosis']\ny_train = keras.utils.to_categorical(y_train, 5)","f2a3cfba":"y_train.shape","5eb0b00d":"del train, train_image\nimport gc; \ngc.collect()","c814bcb9":"batch_size = 32\nepochs = 3","8869dcec":"model = Sequential()\nmodel.add(res_model)\nmodel.add(Flatten())\nmodel.add(Dense(256, activation='relu'))\nmodel.add(Dense(5, activation='sigmoid'))","9476ca0c":"model.compile(optimizer=optimizers.RMSprop(lr=2e-4), loss='categorical_crossentropy', metrics=['categorical_accuracy'])\nmodel.summary()","b074c895":"model.fit(x_train, y_train, batch_size=batch_size, validation_split=0.2, epochs=epochs, verbose=1)\n# validation_split=0.2","87cd1a87":"del x_train, y_train\nimport gc; \ngc.collect()","8c7db3fc":"# Test data preparation for competition submission\n# Create list of test image files\nimage_file = []\nfor file in os.listdir(\"..\/input\/aptos2019-blindness-detection\/test_images\/\"):\n    image_file.append(file)","db7c8c0d":"# Create test data frame\ntest = pd.DataFrame(image_file,columns=['file'])","33c53fd3":"# Function to generate image test file\ndef test_func_image_file(x):\n    folder = '..\/input\/aptos2019-blindness-detection\/test_images\/'\n    path = folder + x\n    return path","8dbd4237":"test['path'] = test['file'].apply(test_func_image_file)","d64efd8e":"test_image = []\nfor i in tqdm(range(test.shape[0])):\n    img = image.load_img(test['path'][i],target_size=input_shape,interpolation='nearest')\n    img = image.img_to_array(img)\n    img = img\/255\n    test_image.append(img)\nx_test = np.array(test_image)","2427b94a":"predictions = model.predict_classes(x_test)","a5f4959e":"del x_test,test_image\nimport gc; \ngc.collect()","151a6cb1":"test['id_code'] = test['file'].apply(lambda x: os.path.splitext(x)[0])","aa526b62":"test['diagnosis'] = pd.Series(predictions)","d29a32ce":"test = test.drop(['file','path'], axis=1)","9918de02":"test.head()","93bb3b4b":"test['diagnosis'].unique()","656660cd":"test.to_csv(\"submission.csv\", columns = test.columns, index=False)","737d3f7b":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRlGGC3Md8NrH-qaNi-aYHGPu6EASL2C_MmzLuiAvKLuwPMjqN_YA)","b10b4a9c":"# Model Performance #","03535226":"## Detect Diabetic Retinopathy(Keras Resnet) ##"}}