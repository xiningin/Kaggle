{"cell_type":{"ae96daca":"code","327257cb":"code","f4a15ca2":"code","69bb0778":"code","172d3d7d":"code","d33b2bac":"code","bec00d31":"code","1bbcf339":"code","eab7744c":"code","b7acbe78":"code","68aca876":"code","b0ecd59d":"code","31f98e51":"code","8dc24996":"code","d9b920bf":"code","ff95943a":"code","47874e6c":"code","13884616":"code","7fabf6ba":"code","111bf762":"code","c7260743":"code","a5ca4dff":"markdown","4396a3a8":"markdown","80f83f26":"markdown","28d5d48b":"markdown","1b5e51f5":"markdown","c32028f5":"markdown","1406e613":"markdown","42da2764":"markdown"},"source":{"ae96daca":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy.sparse import csr_matrix\nfrom sklearn.neighbors import NearestNeighbors","327257cb":"# GoodBooks-10K Data\nbooks = pd.read_csv('\/kaggle\/input\/goodbooks-10k\/books.csv')\nratings = pd.read_csv('\/kaggle\/input\/goodbooks-10k\/ratings.csv')","f4a15ca2":"# Show all columns in DataFrame\npd.set_option('display.max_columns', None)","69bb0778":"books.head()","172d3d7d":"books.describe()","d33b2bac":"ratings.head()","bec00d31":"ratings.describe()","1bbcf339":"books = books.dropna()\n\nratings = ratings.sort_values(\"user_id\")\nratings.drop_duplicates(subset=[\"user_id\",\"book_id\"], keep='first', inplace=True) \nbooks.drop_duplicates(subset='original_title', keep='first', inplace=True)","eab7744c":"merged_df = pd.merge(books, ratings, how='left', left_on=['id'], right_on=['book_id'])\ndf = merged_df[['id','original_title', 'user_id', 'rating']]\n\ndf = df.rename(columns = {'id':'book_id'})\ndf.head(200)","b7acbe78":"df.describe()","68aca876":"ratings_df = df.pivot_table(index='book_id',columns='user_id',values='rating').fillna(0)\n\npd.set_option('display.max_columns', 100)\nratings_df.head()","b0ecd59d":"ratings_df.shape","31f98e51":"ratings_matrix = csr_matrix(ratings_df.values)","8dc24996":"model_knn = NearestNeighbors(metric='cosine', algorithm = 'brute')\nmodel_knn.fit(ratings_matrix)","d9b920bf":"def get_book_id(book_title):\n    target_df = df.loc[df['original_title'] == book_title]\n    return target_df['book_id'].iloc[0]\n\nid_TheHungerGames = get_book_id('The Hunger Games')\nprint(id_TheHungerGames)","ff95943a":"def get_title(book_id):\n    target_df = df.loc[df['book_id'] == book_id]\n    return target_df['original_title'].iloc[0]\n\nprint(get_title(1))","47874e6c":"def get_recomm(book_title, num_neighbors=10, display=False): \n    book_ids = []\n    \n    query_index = get_book_id(book_title) - 1\n    \n    if num_neighbors > 0:\n        distances, indices = model_knn.kneighbors(ratings_df.iloc[query_index,:].values.reshape(1, -1), n_neighbors = num_neighbors + 1)\n    else:\n        distances, indices = model_knn.kneighbors(ratings_df.iloc[query_index,:].values.reshape(1, -1), n_neighbors = 10 + 1)\n    \n    for i in range(0, len(distances.flatten())):\n        if display is True:\n            if i == 0:\n                print('Recommendations for ', book_title, '\\n')\n            else:    \n                print('{0}\\t Book ID: {1}\\t  Distance: {2}:\\n'.format(i, ratings_df.index[indices.flatten()[i]], distances.flatten()[i]))\n        \n        book_ids.append(ratings_df.index[indices.flatten()[i]])\n    \n    return book_ids","13884616":"# Top 10 recommendations for The Hunger Games\n\nrecommendations_for_TheHungerGames = get_recomm('The Hunger Games', num_neighbors=10, display=True)","7fabf6ba":"for b in recommendations_for_TheHungerGames[1:]:\n    print('id:', b, '\\t\\tBook: ', get_title(b))","111bf762":"# Top 10 recommendations for Harry Potter and the Philosopher's Stone\n\nbook_ids_for_H = get_recomm('Harry Potter and the Philosopher\\'s Stone', num_neighbors=10)\n# skip the first item\nfor b in book_ids_for_H[1:]:\n    print(get_title(b))","c7260743":"# Top 15 recommendations for Twilight\n\nbook_ids_for_H = get_recomm('Twilight', num_neighbors=15)\nfor b in book_ids_for_H[1:]:\n    print(get_title(b))","a5ca4dff":"## 2. Collaborative Filtering\n### &nbsp;&nbsp;&nbsp;&nbsp; 2.2 Using KNN","4396a3a8":"### Import Libraries","80f83f26":"# Recommendation System","28d5d48b":"### Read Data","1b5e51f5":"### Test the Results","c32028f5":"## 2.2 Using KNN","1406e613":"### Clean the data","42da2764":"### Some Helper Functions"}}