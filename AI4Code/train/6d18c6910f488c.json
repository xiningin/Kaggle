{"cell_type":{"02b75d17":"code","c76edaaa":"code","2e9e32b7":"code","f627f6da":"code","3aace99d":"code","abebd9bb":"code","5136bf84":"code","9d1bed88":"code","7f197329":"code","72ed6b9d":"code","ea71ba77":"code","57a36e24":"code","0173cf38":"code","c6aea2f2":"code","31ca366f":"code","38606b29":"code","218d71f5":"code","8b924831":"code","eb6cf84c":"code","a14b7b1b":"code","f3e92055":"code","c6285cf5":"code","6136d23d":"code","72f667c7":"code","952dfe83":"code","7a0044f2":"code","7cf9b025":"code","be3e2e2a":"code","d4d6908f":"code","5036e6f7":"code","98ad15fe":"code","48ad595a":"code","077ac66a":"code","872d6962":"code","e00d650a":"code","6cc802ae":"code","f6ee1335":"code","84aa366f":"code","47fe51d0":"code","f177ced4":"code","5c5efd7d":"code","b9a3583d":"code","08089e70":"code","96331be8":"code","7f8350fa":"code","4b3337db":"code","c849fe2d":"code","59087326":"code","10d668ae":"code","288ee724":"code","30a340b1":"code","e056db1e":"code","25a91e14":"code","833258b4":"code","7b0f2577":"code","d217814c":"code","e47f30f4":"code","82e80227":"code","756d1755":"code","66f841b1":"code","cb16a560":"code","2b01fe59":"code","7e791075":"code","187ef6d6":"code","59e4ec0d":"code","c885bdb0":"code","221b71d1":"code","ab2f5d4e":"code","2971cab8":"code","44ea0c3e":"code","ade1ca18":"code","90972954":"code","4b1ac78d":"code","89328167":"code","654a8af4":"code","2889a0ba":"code","dd034f51":"code","6929e20f":"code","fbc1f7a5":"code","e5cf9dea":"code","d60b8ba7":"code","fb4bd869":"markdown","5c95a97e":"markdown","0c0e9fdc":"markdown","5d879ca6":"markdown","f9741635":"markdown","4a451b6d":"markdown","85c80f7d":"markdown","6fbb9a97":"markdown","042afbc2":"markdown","813a025d":"markdown","5121a69e":"markdown","1ac64d7e":"markdown","eca9c2b6":"markdown","2c17ef92":"markdown","113d260b":"markdown","981f8bfd":"markdown","b6bde22b":"markdown","ef512ced":"markdown","94523878":"markdown","f43d5b1e":"markdown","d898415c":"markdown","fdad9b49":"markdown","a0d80112":"markdown","cca0e93a":"markdown","9f9a8a81":"markdown","7b2d954f":"markdown","cc128bc0":"markdown"},"source":{"02b75d17":"!pip install catboost","c76edaaa":"import numpy as np\nimport pandas as pd\n\nimport datetime\nfrom pandas_profiling import ProfileReport\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import StratifiedShuffleSplit\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression, PassiveAggressiveClassifier,\\\n    Perceptron, RidgeClassifier, SGDClassifier, Ridge\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom catboost import CatBoostClassifier, Pool, CatBoostRegressor\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import fbeta_score, make_scorer\nfrom sklearn.preprocessing import OneHotEncoder\n\nfrom sklearn.model_selection import cross_val_score\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport warnings\nwarnings.filterwarnings(\"ignore\")","2e9e32b7":"data = pd.read_csv('..\/input\/real-time-advertisers-auction\/Dataset.csv')\nprint(data.shape)\ndata.head()","f627f6da":"# calculating CPM\n# calculating the value that the Advertisers Bid for the month of June\n# CPM(the value which was the winning bid value) =\n# ((revenue of the publisher * 100) \/ revenue_share_percentage) \/\\\n# measurable_impressions) * 1000\n\n\ndef weird_division(n, d):\n    return n \/ d if d else 0\n\n\ndata['CPM'] = data.apply(lambda x: weird_division(\n    ((x['total_revenue'] * 100)), x['measurable_impressions']) * 1000, axis=1)","3aace99d":"negative_cpm = list(data[data['CPM'] < 0].index)\nnegative_cpm","abebd9bb":"data_date_time = pd.to_datetime(data['date'], format='%Y-%m-%d %H:%M:%S')\nsplit_flag = datetime.datetime.strptime('21:06:2019', '%d:%m:%Y')","5136bf84":"train_indexes = list(data_date_time[data_date_time <= split_flag].index)\ntest_indexes = data.loc[data_date_time[data_date_time > split_flag].index, :]['CPM'][data.loc[data_date_time[\n    data_date_time > split_flag].index, :]['CPM'] < np.percentile(data.loc[\n    data_date_time[data_date_time > split_flag].index, :]['CPM'], 95)].index\ntest_indexes = list(test_indexes)\nfor i in negative_cpm:\n    if i in test_indexes:\n        test_indexes.remove(i)","9d1bed88":"print(f'\u0412\u0435\u043b\u0438\u0447\u0438\u043d\u0430 train \u0440\u0430\u0432\u043d\u0430 {len(train_indexes)}')\nprint(f'\u0412\u0435\u043b\u0438\u0447\u0438\u043d\u0430 test \u0440\u0430\u0432\u043d\u0430 {len(test_indexes)}')","7f197329":"# %%time\n# for i in train_indexes:\n#     if i in test_indexes:\n#         print('FAIL TRAIN')\n#         break\n# for i in test_indexes:\n#     if i in train_indexes:\n#         print('FAIL TEST')\n#         break\n# 28 min +","72ed6b9d":"train_data = data.loc[train_indexes, :].drop(['total_revenue'], axis=1)\ntest_data = data.loc[test_indexes, :].drop(['total_revenue', 'CPM'], axis=1)\ntotal_target = data.loc[test_indexes, :]['CPM']\ntrain_data.shape, test_data.shape, len(total_target)","ea71ba77":"# \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u043e\u043c\u0435\u043d\u044c\u0448\u0435 \u043e\u0442\u0440\u0435\u0437\u0430\u0442\u044c \u0443 \u0442\u0440\u0435\u0439\u043d\u0430\ntrain_data = train_data[train_data['CPM'] <= np.percentile(train_data['CPM'], 96)]","57a36e24":"train_data.info()","0173cf38":"train_data.describe()","c6aea2f2":"train_data.describe(include=[np.object])","31ca366f":"data.isnull().sum()","38606b29":"from pandas_profiling import ProfileReport","218d71f5":"# %%time\n# profile = ProfileReport(train_data)\n# profile.to_file(output_file='train_data_CPM.html')\n# \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0430\u0441\u0430","8b924831":"# %%time\n# profile = ProfileReport(train_data, minimal=True)\n# profile.to_file(output_file='train_data_CPM.html')\n","eb6cf84c":"train_data['date'] = pd.to_datetime(train_data['date'], format='%Y-%m-%d %H:%M:%S')\ntest_data['date'] = pd.to_datetime(test_data['date'], format='%Y-%m-%d %H:%M:%S')","a14b7b1b":"dict_for_lebel_date = {}\nfor i, date in enumerate(sorted(pd.concat([train_data['date'], test_data['date']]).unique())):\n    dict_for_lebel_date[date] = i\ndict_for_lebel_date","f3e92055":"train_data['date'].replace(dict_for_lebel_date, inplace=True)\ntest_data['date'].replace(dict_for_lebel_date, inplace=True)","c6285cf5":"train_data['date'].value_counts()[list(range(len(train_data['date'].value_counts())))]","6136d23d":"f, ax = plt.subplots(figsize=(12, 5))\nsns.lineplot(x=range(len(train_data['date'].value_counts())),\n             y=train_data['date'].value_counts()[sorted(train_data['date'].value_counts().index)])\nax.set_title('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0435\u0439\u0441\u043e\u0432 \u0432 train', fontdict={'size':16})\nax.set(xlabel='\u0432\u0440\u0435\u043c\u044f')\nax.set(ylabel='\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e')","72f667c7":"f, ax = plt.subplots(figsize=(12, 5))\nsns.lineplot(x=range(len(test_data['date'].value_counts())),\n             y=test_data['date'].value_counts()[sorted(test_data['date'].value_counts().index)])\nax.set_title('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0435\u0439\u0441\u043e\u0432 \u0432 test', fontdict={'size':16})\nax.set(xlabel='\u0432\u0440\u0435\u043c\u044f')\nax.set(ylabel='\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e')","952dfe83":"f, ax = plt.subplots(figsize=(12, 5))\nsns.lineplot(x=train_data.groupby(by=['date']).mean()['CPM'].index,\n             y=train_data.groupby(by=['date']).mean()['CPM'])\nax.set_title('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 CPM \u0432 train', fontdict={'size':16})\nax.set(xlabel='\u0432\u0440\u0435\u043c\u044f')\nax.set(ylabel='CPM')","7a0044f2":"f, ax = plt.subplots(figsize=(12, 5))\nsns.lineplot(x=train_data.groupby(by=['date']).median()['CPM'].index,\n             y=train_data.groupby(by=['date']).median()['CPM'])\nax.set_title('\u041c\u0435\u0434\u0438\u0430\u043d\u0430 CPM \u0432 train', fontdict={'size':16})\nax.set(xlabel='\u0432\u0440\u0435\u043c\u044f')\nax.set(ylabel='CPM')","7cf9b025":"train_data['site_id'].value_counts()","be3e2e2a":"train_data['ad_type_id'].value_counts()","d4d6908f":"train_data.groupby(by='ad_type_id').describe()['CPM']","5036e6f7":"train_data['geo_id'].value_counts()","98ad15fe":"flag_value = 100\nprint(f\"\u0422\u0430\u043a\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u043c: \\\n{train_data['geo_id'].value_counts()[train_data['geo_id'].value_counts() > flag_value].sum() \/ train_data.shape[0] * 100}\\\n%\")\ndisplay(train_data['geo_id'].value_counts()[train_data['geo_id'].value_counts() > flag_value])","48ad595a":"train_data = train_data[train_data['geo_id'].isin(train_data['geo_id'].value_counts()[\n    train_data['geo_id'].value_counts() > flag_value].index)]","077ac66a":"def display_value_counts_and_norm(obj):\n    display(obj.value_counts())\n    display(obj.value_counts(normalize=True))","872d6962":"display_value_counts_and_norm(train_data['device_category_id'])","e00d650a":"train_data = train_data[train_data['device_category_id'].isin([2, 1, 3])]","6cc802ae":"display_value_counts_and_norm(train_data['advertiser_id'])","f6ee1335":"train_data = train_data[train_data['advertiser_id'].isin(train_data['advertiser_id'].value_counts().index[:-6])]","84aa366f":"display_value_counts_and_norm(train_data['order_id'])","47fe51d0":"train_data['order_id'].value_counts(normalize=True)[train_data['order_id'].value_counts(normalize=True) < 0.0018].sum()","f177ced4":"train_data = train_data[train_data['order_id'].isin(train_data['order_id'].value_counts(\n    normalize=True)[train_data['order_id'].value_counts(normalize=True) >= 0.0018].index)]","5c5efd7d":"display_value_counts_and_norm(train_data['line_item_type_id'])","b9a3583d":"display_value_counts_and_norm(train_data['os_id'])","08089e70":"train_data = train_data[~train_data['os_id'].isin([15, 57])]","96331be8":"display_value_counts_and_norm(train_data['integration_type_id'])","7f8350fa":"train_data.drop(['integration_type_id'], axis=1, inplace=True)\ntest_data.drop(['integration_type_id'], axis=1, inplace=True)","4b3337db":"display_value_counts_and_norm(train_data['monetization_channel_id'])","c849fe2d":"display_value_counts_and_norm(train_data['ad_unit_id'])","59087326":"train_data = train_data[train_data['ad_unit_id'].isin(\n    train_data['ad_unit_id'].value_counts(normalize=True)[:-14].index)]","10d668ae":"display_value_counts_and_norm(train_data['viewable_impressions'])","288ee724":"train_data = train_data[train_data['viewable_impressions'].isin(\n    train_data['viewable_impressions'].value_counts()[\n        train_data['viewable_impressions'].value_counts() > 300].index)]","30a340b1":"display_value_counts_and_norm(train_data['measurable_impressions'])","e056db1e":"train_data = train_data[train_data['measurable_impressions'].isin(\n    train_data['measurable_impressions'].value_counts(normalize=True)[\n        train_data['measurable_impressions'].value_counts(normalize=True) > 0.0005].index)]","25a91e14":"display_value_counts_and_norm(train_data['revenue_share_percent'])","833258b4":"train_data.drop(['revenue_share_percent'], axis=1, inplace=True)\ntest_data.drop(['revenue_share_percent'], axis=1, inplace=True)","7b0f2577":"train_data.info()","d217814c":"test_data.info()","e47f30f4":"f, ax = plt.subplots(figsize=(16, 16))\nax = sns.heatmap(train_data.corr(), annot=True)","82e80227":"f, ax = plt.subplots(figsize=(8, 8))\nsns.scatterplot(data=train_data, x='measurable_impressions', y='total_impressions')","756d1755":"train_data['is_CPM_positive'] = train_data['CPM'].apply(lambda x: int(bool(x)))","66f841b1":"train_data['is_CPM_positive'].value_counts(normalize=True)","cb16a560":"train_data.columns","2b01fe59":"cat_features = ['site_id', 'ad_type_id', 'geo_id', 'device_category_id',\n       'advertiser_id', 'order_id', 'line_item_type_id', 'os_id',\n       'monetization_channel_id', 'ad_unit_id']","7e791075":"%%time\nfor current_feature in cat_features:\n    train_vals = list(train_data[current_feature].value_counts().index)\n    test_vals = list(test_data[current_feature].value_counts().index)\n    top_train_value = train_vals[0]\n    for value in test_vals:\n        if value not in train_vals:\n            test_data[current_feature].replace({value: top_train_value}, inplace=True)","187ef6d6":"display(train_data['line_item_type_id'].value_counts())\ndisplay(test_data['line_item_type_id'].value_counts())","59e4ec0d":"one_hot = OneHotEncoder()\none_hot.fit(train_data[cat_features])","c885bdb0":"one_hot.transform(train_data[cat_features]).toarray()\none_hot.transform(test_data[cat_features]).toarray()","221b71d1":"num_features = ['date', 'total_impressions', 'viewable_impressions', 'measurable_impressions']","ab2f5d4e":"train_data[num_features].shape, pd.DataFrame(one_hot.transform(train_data[cat_features]).toarray()).shape","2971cab8":"%%time\nBIG_TRAIN_FULL_FOR_CLASS = pd.concat([train_data[num_features],\n                                      pd.DataFrame(one_hot.transform(train_data[cat_features]).toarray(),\n                                                  index = train_data[num_features].index)],\n                                     axis=1)\nprint(BIG_TRAIN_FULL_FOR_CLASS.shape)\nBIG_TEST_FULL_FOR_CLASS = pd.concat([test_data[num_features],\n                                      pd.DataFrame(one_hot.transform(test_data[cat_features]).toarray(),\n                                                  index = test_data[num_features].index)],\n                                    axis=1)\nprint(BIG_TEST_FULL_FOR_CLASS.shape)","44ea0c3e":"num_features","ade1ca18":"def scaler(data):\n    return (data - data.mean()) \/ data.std()","90972954":"%%time\ncatboost_class = CatBoostClassifier(logging_level='Silent', random_seed=13)\ncatboost_class.fit(BIG_TRAIN_FULL_FOR_CLASS, train_data['is_CPM_positive'])","4b1ac78d":"y_class_pred = catboost_class.predict(BIG_TEST_FULL_FOR_CLASS)","89328167":"BIG_TRAIN_FULL_FOR_CLASS.shape, train_data.shape","654a8af4":"BIG_TRAIN_FULL_FOR_REGR = BIG_TRAIN_FULL_FOR_CLASS\nBIG_TRAIN_FULL_FOR_REGR['is_CPM_positive'] = train_data['is_CPM_positive']\nBIG_TRAIN_FULL_FOR_REGR = BIG_TRAIN_FULL_FOR_REGR[BIG_TRAIN_FULL_FOR_REGR['is_CPM_positive'] == 1]\nY_TRAIN_FOR_REGR = train_data[train_data['is_CPM_positive'] == 1]['CPM']","2889a0ba":"%%time\ncatboost_regr = CatBoostRegressor(logging_level='Silent', random_seed=133, loss_function='RMSE',\n                                 eval_metric='RMSE', iterations=1337)\n\ncatboost_regr.fit(BIG_TRAIN_FULL_FOR_REGR, Y_TRAIN_FOR_REGR)","dd034f51":"BIG_TEST_FULL_FOR_REGR = BIG_TEST_FULL_FOR_CLASS\nBIG_TEST_FULL_FOR_REGR['is_CPM_positive'] = y_class_pred\nBIG_TEST_FULL_FOR_REGR = BIG_TEST_FULL_FOR_REGR[BIG_TEST_FULL_FOR_REGR['is_CPM_positive'] == 1]\ny_regr_pred = catboost_regr.predict(BIG_TEST_FULL_FOR_REGR)","6929e20f":"finish_pred = pd.DataFrame(y_class_pred)\nfinish_pred[finish_pred[0] == 1] = y_regr_pred\nfinish_pred","fbc1f7a5":"%%time\nfor i in range(finish_pred.shape[0]):\n    if finish_pred.iloc[i, 0] < 0:\n        finish_pred.iloc[i, 0] = 0","e5cf9dea":"mean_squared_error(finish_pred, total_target)","d60b8ba7":"3218.7478511106797","fb4bd869":"# measurable_impressions","5c95a97e":"### order_id \u0442\u043e\u0436\u0435 \u0443\u0434\u0430\u043b\u0438\u043b\u0438 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432","0c0e9fdc":"### ad_type_id  \n2 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0432 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043a\u043e\u0441\u0430\u043c\u0438 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043d\u0443\u043b\u0435\u0439 \u0441\u0438\u043b\u044c\u043d\u043e, \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u043c\u0435\u043d\u044c\u0448\u0438\u0439 \u0442\u043e\u0436\u0435","5d879ca6":"### \u0434\u0440\u043e\u043f\u043d\u0443\u043b\u0438 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443","f9741635":"# advertiser_id","4a451b6d":"# \u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0431\u0435\u0439\u0437\u043b\u0430\u0439\u043d  \n\u0441\u043f\u0435\u0440\u0432\u0430 \u043e\u0442\u0434\u0435\u043b\u0438\u043c \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u043e\u0442 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0436\u0435\u043c \u043d\u0430 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445  \n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438 \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u0443\u0434\u0430\u0447\u043d\u044b\u043c","85c80f7d":"# integration_type_id","6fbb9a97":"# monetization_channel_id","042afbc2":"### geo_id \u0443\u0431\u0440\u0430\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432","813a025d":"# site_id ","5121a69e":"# order_id","1ac64d7e":"# device_category_id","eca9c2b6":"# date","2c17ef92":"### device_category_id \u0443\u0431\u0440\u0430\u043b\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u044b","113d260b":"# line_item_type_id","981f8bfd":"### site_id \u0432\u043e\u0437\u044c\u043c\u0451\u043c \u043a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043a\u0430\u0442-\u043f\u0440\u0438\u0437\u043d\u0430\u043a","b6bde22b":"# \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0430\u043d\u0430\u043b\u0438\u0437 train","ef512ced":"# geo_id","94523878":"# ad_unit_id","f43d5b1e":"\u041d\u0430\u0434\u043e \u0434\u0430\u043b\u044c\u0448\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u0432\u044f\u0437\u044c \u043f\u043e \u0434\u0430\u0442\u0430\u043c, \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u0430\u0447\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0440\u044f\u0434\u043e\u0432 (upd, \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c)","d898415c":"# os_id","fdad9b49":"### os_id","a0d80112":"### advertiser_id \u0442\u043e\u0436\u0435 \u0443\u0431\u0440\u0430\u043b\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u044b","cca0e93a":"# ad_type_id","9f9a8a81":"# viewable_impressions","7b2d954f":"### \u0437\u0434\u0435\u0441\u044c \u0438 \u0434\u0430\u043b\u0435\u0435 \u0434\u0435\u043b\u0430\u0435\u043c \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435, \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b, \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c","cc128bc0":"# revenue_share_percent"}}