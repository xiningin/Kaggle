{"cell_type":{"c748bc8f":"code","7455626d":"code","bb3bd452":"code","1734a3e2":"code","250d5d20":"code","f8626029":"code","8a602263":"code","4ba69cfa":"code","f82581ea":"code","cf166b51":"code","8c2553eb":"code","cf8e2242":"code","c5c36a0e":"code","8bc9de85":"code","05a23d9b":"markdown","9172b46a":"markdown","3ab37304":"markdown","eb42930f":"markdown","89876817":"markdown","474a5432":"markdown","c2e36b1f":"markdown","4965e3df":"markdown","ceee13ea":"markdown","a9f57e49":"markdown","4c5c4ead":"markdown"},"source":{"c748bc8f":"# First of all, why are these hashtags all over the code?\n\n# input \n#variable = input()\n\n#output ... what are these hashtag\n#print(variable)\n\n#conditional execution\n#if variable == \"hello\":\n#    print(\"hi!\")\n#else:\n#    print(\"blabla\")\n\n#repetitive execution (loops)\n\n#for i in range(0,5):\n#    print(i)","7455626d":"# write our first simple program Hello, world! and comment it \nprint(\"Hello,world!\")","bb3bd452":"#Let us create a variable called number and assign 5 to it.\n#word = 5.2\n#Print the variable out and find out how this variable is stored\n#print(type(word))\n#what if we want to store a name, for example of a street \n#what is invalid syntax error\n#\"nice street\" 'nice street'\nstreet = 'nice street'\nprint(street)\n","1734a3e2":"#reassigning\/copying variable ... two variables holding car brands\ncar1 = \"vw\"\ncar2 = \"skoda\"\nprint(car1,car2)\ncar1 = car2\nprint(car1,car2)","250d5d20":"#consider difference between the name of variable and the content of the variable\ncar1 = \"vw\"\nCAR1 = \"skoda\"\n#is capitalization important?\n#\n#why one should not use keyword() ... let's name variable print\n","f8626029":"#comparison of variables - integers, strings, mixed\nnumber1 = 5\nnumber2 = 15\nnumber1 == number2","8a602263":"#Addition\n1+1\n#Subtraction\n5-2\n#Multiplication\n\n#Division (Floor division)\n5\/\/2\n#Exponent\n","4ba69cfa":"##assign age to each colleague, Albert is 30, Berta is 45, John is 62\nalbert = 30\nberta = 45\njohn = 62\nprint(albert,berta,john)\n#create list of ages \n#ages = [30,45,62]\n#print(ages)\n\n#lets do it effectively, using variables which we already have ...\nages = [albert,berta,john]\nprint(ages)","f82581ea":"#Now lets create a list with one index for each floor in the company containing names of all colleagues who work on that floor\n#easy case\nbuilding = [\"albert\",\"jake\",\"katy\"]\nprint(building)\n\n#show indexing\n#print(building[2])\n#what if there are more people working on the floor?\n#building = [\"albert\",[\"jake\",\"susane\",\"berta\"],\"katy\"]\n#print(building[1])\n\n#what if the company rents another floor? --- we will see in part functions\n#building[3] = \"jakub\"","cf166b51":"#our first function\ndef say_hello():\n\n#what if I want to print it more times... two basic types of loops for and while\n#first lets look at how loop is formed and then connect it to above function\n\n#using return in a function","8c2553eb":"#Adding number in a loop\nnumber = 10\n\n...\n    \nprint(number)","cf8e2242":"#checking if bukrs is germany\ndef check_bukrs(invoice_bukrs):\n    if invoice_bukrs == \"0002\":\n        print(\"germany\")\n    else:\n        print(\"no idea\")\n\n#what is then a method?\n#remember that example with floors in building...\n","c5c36a0e":"...","8bc9de85":"#now let us create something of a value and rehearse what we learnt... \n#create a program which identifies if number it gets from input is odd or even, use operand modulo (%) (input() can be used)\n","05a23d9b":"## Variables\n* variables\n    - assignment\n    - case sensitiveness,standards\n    - illegal names - keywords\n    - comparison\n* data classes (data types)\n    - numbers - integers, floats\n    - strings\n    - lists\n* statements\n* operators (also on strings)","9172b46a":"## operators \n\n** special tokens which represent some computations, some are predefined, but new can be created, too **","3ab37304":"## Introduction \n* Python general introduction\n* Integrated Development Environment (IDE)\n* instructions and commenting\n* first program\n\n** Python is a high-level programming language ** \n- no need to worry about memory allocation\n- no pre-definition of data types\n\n** Integrated Development Environment **\n- as opposed to command line and text editor\n- scripting, debuging, version control and many other tools in one place","eb42930f":"### Several instructions appear in almost all languages ","89876817":"** YouTube videos which explain some theoretical stuff **\n- https:\/\/www.youtube.com\/watch?v=nykOeWgQcHM&t\n- https:\/\/www.youtube.com\/watch?v=MAC7lj_iOK0\n- https:\/\/www.youtube.com\/watch?v=nykOeWgQcHM&t \n\n** a very nice book for introduction into programming with python **\n- http:\/\/openbookproject.net\/thinkcs\/python\/english3e\/index.html\n\n** official python guide **\n- https:\/\/www.python.org\/about\/gettingstarted\/\n","474a5432":"## Functions and flow control\n* functions, without and with arguments\n* loops\n* conditions ","c2e36b1f":"** Some tips for further learning (core of Python language) **\n* using classes\/object-oriented programming\n* dictionaries\n* ml\/datascience libraries - pandas, sklearn, tensorflow, keras ... ","4965e3df":"### List is an ordered and changable collection of any objects (items)","ceee13ea":"# Uf, that's been a lot so what to remember?\n1. ** Programming is problem solving - programming language is only a tool **\n2. **  Python is an easy language, does a lot of things automatically, but this might be dangerous! **\n3. ** It is good to follow some conventions. **\n4. ** Some names of variables are forbidden. **\n5. ** Indexing starts with 0 **\n6. ** Functions and methods make life easier. **","a9f57e49":"## statements\n\n** Statement is an instruction which Python understands in some way. We have seen assignment statement and some other are for example for, if, while ... **","4c5c4ead":"# Introduction to Programming with Python\n* introduction\n* variables and data types\n* functions and flow control\n* key takeaways\n* further learning"}}