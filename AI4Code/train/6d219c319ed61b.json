{"cell_type":{"9f538bc9":"code","2097acea":"code","1cce005b":"code","91e8310c":"code","d078d3e8":"code","507a6147":"code","194750d0":"code","9b2a3b78":"code","bb1cf877":"code","5244240b":"code","94e2b901":"code","8f2fc1d6":"code","f91c537f":"code","a798d1ce":"code","35f5a491":"code","fea53f5d":"code","570cd760":"code","a274ce8a":"code","c05054a6":"code","dee58fb7":"code","3d3358b5":"code","602aebec":"code","5bfda3d4":"code","233840c3":"code","07cfd7aa":"code","c7b7f683":"code","a71bd4ac":"code","966debc4":"code","6a324a45":"code","b5230339":"code","ceb6cac2":"markdown","939ecf53":"markdown","5a5ed362":"markdown","6ad49f11":"markdown","4f1064f9":"markdown","2eacd922":"markdown","0ad50d9e":"markdown","a8021027":"markdown","f1115911":"markdown","c1b5bb69":"markdown","bebda1cd":"markdown","1ce7c375":"markdown","098aeffa":"markdown","0bb07d00":"markdown","6a696b70":"markdown","cd67eac3":"markdown","37083464":"markdown","0f5b7cb8":"markdown","a9bf7685":"markdown","ff3b4204":"markdown","3611e3d5":"markdown","bba858aa":"markdown","f79b3b0f":"markdown"},"source":{"9f538bc9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2097acea":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","1cce005b":"google = pd.read_csv(r'..\/input\/googleplaystore-acsv\/googleplaystore_a.csv')","91e8310c":"google.describe()","d078d3e8":"google.info()","507a6147":"google.head()","194750d0":"google['Installs'] = google['Installs'].apply(lambda x: str(x).replace('+', '') if '+' in str(x) else x)\ngoogle['Installs'] = google['Installs'].apply(lambda x: int(str(x).replace(',', '')) if ',' in str(x) else x)\n\ngoogle['Price'] = google['Price'].apply(lambda x: float(str(x).replace('$', '')) if '$' in str(x) else x)\n","9b2a3b78":"google.drop_duplicates(subset='App', inplace=True)\n\n\ngoogle['Size'] = google['Size'].apply(lambda x: str(x).replace('M', \"\") if 'M' in str(x) else x)\ngoogle['Size'] = google['Size'].apply(lambda x: float(str(x).replace('k', \"\"))\/1024 if 'k' in str(x) else x)\ngoogle['Size'] = google['Size'].apply(lambda x: str(x).replace('Varies with device', '-1') if 'Varies with device' in str(x) else x)\n\ngoogle['Installs'] = google['Installs'].apply(lambda x: int(str(x).replace('+', '')) if '+' in str(x) else x)","bb1cf877":"google.head()","5244240b":"from sklearn import preprocessing\n\n\ndata = google[['Rating','Reviews', 'Size', 'Installs', 'Price']]\ndata= data.astype('float64')\n\n\ndata = data.dropna()\n#data.info()\n\ndata_scaled = preprocessing.scale(data)\ndata_scaled = pd.DataFrame(data_scaled)\n\ndata_corr = data_scaled.corr()\nplt.subplots(figsize=(15, 15)) \n\n\nsns.heatmap(data_corr, annot=True, vmax=1, square=True, cmap=\"Blues\", xticklabels = ['Rating','Reviews', 'Size','Installs', 'Price'], yticklabels = ['Rating','Reviews', 'Size', 'Installs', 'Price'])\n\nplt.title('Correlation Of Numeric Feature')\n\nplt.show()\n","94e2b901":"google1 = google.dropna()\n\ngroup1 = google1.groupby('Category')\n#group1.App.count().sort_values(by='App', ascending = False)\ntable1 = group1.App.count().sort_values(ascending = False)\n\ntable1 = pd.DataFrame(table1)\n\ntable1.head()","8f2fc1d6":"plt.figure(figsize = (30,10))\nsns.barplot(table1.index,table1.App)\nplt.xlabel(\"Category\")\nplt.ylabel(\"Counts\")\nplt.xticks(rotation = 90)\nplt.title('Bar chart of the number of different types of APP',fontsize=50)\n\nsns.set(font_scale=3)\nplt.show()","f91c537f":"table1.index[:5]","a798d1ce":"google[['Rating','Reviews', 'Size', 'Installs', 'Price']] = google[['Rating','Reviews', 'Size', 'Installs', 'Price']].astype('float64')\n\ngoogle.info()\n","35f5a491":"google[['App', 'Category', 'Rating', 'Installs', 'Type', 'Price', 'Genres']].sort_values(by = 'Installs', ascending = False)[:30]","fea53f5d":"google1 = google.dropna()  #Delete missing values\n\ngroup3 = google1.groupby('Category')\n#group1.App.count().sort_values(by='App', ascending = False)\ntable3 = group3.Installs.sum().sort_values(ascending = False)\n\ntable3 = pd.DataFrame(table3)\n\ntable3[:10]","570cd760":"import pyecharts as pe\n\npe.configure(\n    jshost='https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/echarts\/3.7.2\/',\n    echarts_template_dir=None,\n    force_js_embed=None,\n    output_image=None,\n    global_theme=None\n)","a274ce8a":"import pyecharts\nfrom pyecharts import Pie\npie = Pie(\"Total downloads for different categories\", \"\",title_pos='center')\n\npie.add(\"categories\", \n        table3.index[:10], \n        table3.Installs[:10],\n        radius=[55, 60],\n        label_pos='right',\n        label_text_size = 7,\n        label_text_color='blue',\n        is_label_show=True,\n        legend_orient='vertical',\n        legend_pos=\"left\",\n        legend_text_size = 7\n       )\n\npie\n","c05054a6":"google1.groupby('Category').apply(lambda t: t[t.Installs==t.Installs.max()])","dee58fb7":"group2 = google1.groupby('Rating')\n#group1.App.count().sort_values(by='App', ascending = False)\ntable2 = group2.App.count().sort_values(ascending = False)\n\ntable2 = pd.DataFrame(table2)\n\n","3d3358b5":"plt.figure(figsize = (15,15))\n\nplt.scatter(table2.index, table2.App,s=table2.index*100, c=\"g\", alpha=0.5, marker=r'$\\clubsuit$',\n            label=\"Luck\" )\n\nplt.title('Scatter Plot Of Rating',)\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Count Of APP\")\nplt.legend(loc='upper left')\nplt.show()","602aebec":"table4 = pd.pivot_table(google1,index=[\"Type\",],aggfunc=[np.mean,np.sum])\ntable4 ","5bfda3d4":"google_free = google[google.Type == 'Free'].dropna()\ngoogle_paid = google[google.Type == 'Paid'].dropna()\n\ngroup5 = google_free.groupby('Category')\n#group1.App.count().sort_values(by='App', ascending = False)\ntable5 = group5.Installs.sum().sort_values(ascending = False)\ntable5 = pd.DataFrame(table5)[:10]\n\ngroup6 = google_paid.groupby('Category')\ntable6 = group6.Installs.sum().sort_values(ascending = False)\ntable6 = pd.DataFrame(table6)[:10]\ntable5","233840c3":"from pyecharts import Funnel\n\nattr = table5.index\nvalue = table5.Installs\nfunnel = Funnel(\"Funnel chart of various APP downloads under free conditions\", title_pos='center')\nfunnel.add(\n    \"\",\n    attr,\n    value,\n    is_label_show=True,\n    label_pos=\"inside\",\n    label_text_color=\"#fff\",\n    legend_orient='vertical',\n    legend_pos=\"left\",\n    legend_text_size = 7\n)\nfunnel","07cfd7aa":"result = pd.concat([table5, table6], axis=1)\nresult.columns = ['Installs_free', 'Installs_paid']","c7b7f683":"result","a71bd4ac":"result['Installs_free'][['LIFESTYLE','PERSONALIZATION','SPORTS','WEATHER']] = pd.DataFrame(group5.Installs.sum().sort_values(ascending = False))['Installs'][['LIFESTYLE','PERSONALIZATION','SPORTS','WEATHER']]\nresult['Installs_paid'][['NEWS_AND_MAGAZINES','SOCIAL','TRAVEL_AND_LOCAL','VIDEO_PLAYERS']] = pd.DataFrame(group6.Installs.sum().sort_values(ascending = False))['Installs'][['NEWS_AND_MAGAZINES','SOCIAL','TRAVEL_AND_LOCAL','VIDEO_PLAYERS']]","966debc4":"result","6a324a45":"from pyecharts import Bar\n\nattr = result.index\nv1 = result.Installs_free\nv2 = result.Installs_paid\nbar = Bar(\"\")\nbar.add(\"free\", attr, v1, is_stack=True, xaxis_rotate=90,xaxis_label_textsize=7,yaxis_label_textsize=7)\nbar.add(\"paid\", attr, v2, is_stack=True, xaxis_rotate=90,xaxis_label_textsize=7,yaxis_label_textsize=7)\n\nbar","b5230339":"google.sort_values(by = 'Price', ascending=False)[0:10]","ceb6cac2":"* ","939ecf53":"* I use the download order in descending order, select 7 attributes, which are 'App', 'Category', 'Rating', 'Installs', 'Type', 'Price', 'Genres', to make this table.\nI found that in the Android store, the GOOGLE app dominates. Of the top 10 downloads, 5 are GOOGLE apps.\n* The second is called Instagram social application software. A bit out of my expectations. I thought it would be FaceBook or YouTube. YouTube ranks fourth and FaceBook ranks 18.\n* I saw an interesting app, Subway Surfers, Subway Parkour. This is a mobile game from China. It seems that it is very popular in the google app store. As his name suggests, this game is cool.\n* The front of the row is free.\n* In the front row I also saw the UC browser. If you have used the overseas version, you will find that the interface is very clean. There is no \"shock\" and no \"bamboo rat business.\"\n\n* Visualization is really a very interesting thing!","5a5ed362":"* This is the data after a simple cleaning.","6ad49f11":"* Pay attention to pay and free\uff01","4f1064f9":"* This would have been a stacked bar chart, but paid is too small compared to free. **Therefore, you can only remove free on the legend, just click it**. You will see the paid bar chart.","2eacd922":"PS:If you have a look, I think you should notice that I have been grouping with groupby. There is a pivot_table function in Pandas that specializes in pivot tables. I always wanted to use it, but I found that after I used it, I didn't know how to use that table to visualize it. The structure of the pivot table is different from our general data frame. If you know how to convert, you can teach me, I will be very grateful.","0ad50d9e":"* Through the above table1 and bar chart, we see that the most APP types are **'FAMILY', 'GAME', 'TOOLS', 'FINANCE', 'PRODUCTIVITY'**\n","a8021027":"Data Cleaning:\n\n*    I found Category when I was checking the data.Under the Category, **there are some numbers**. This is obviously a mistake in formatting when crawling. These are dirty data. **So I deleted them in EXCEL**. For me as a rookie in the field of data analysis. It is too difficult to delete them with python. **I'm very sorry**. The data I uploaded.     PS:I thought of the way to filter with the length of the category string.It is useful.\n\n*    Missing value processing. There are more missing values in Rating. Some apps are unable to display ratings because they have a small number of reviews. Its absence is meaningful. We need to keep the missing attributes in data mining, but this is pure EDA, so I chose to remove these samples.()\n   \n*    Remove some units...","f1115911":"* Take a look. Hahaha, there are so many afterwards, it is entirely because there are several APP downloads in each group are the same. It is unfair to delete any of them.","c1b5bb69":"* We use pie charts to show the top 10 types of downloads. What I want to say is that the **Game** has the largest downloads.","bebda1cd":"* $400.Super expensive\uff01Almost all the app called I am Rich.And it has a lot of downloads. I am curious about it.","1ce7c375":"* This is the original data, except for deleting the formatting errors.","098aeffa":"PS:\n* This is my first trip to kaggle. I understand that it is very basic and simple. \nI have learned a lot. I have seen a few kernels and it is very inspiring to me. I appreciate. \n*     If you look at me, feel that there are any problems or areas for improvement. \n*     Welcome to give me a message. I am looking forward to your enlightenment\uff01\n*   **  Thank you!**","0bb07d00":"*  To make the table simpler, I always take the top ten apps. \n* In the merged table, we can see that the top ten types of free and paid total downloads are still different. I think the most interesting thing is that in the payment, LIFESTYLE, SPORTS, WEATHER variables are more concerned, because they give people the feeling is synonymous with payment. \n* I don't know if I say this is appropriate.","6a696b70":"* After reading the sorting of the number of APPs in each class, let's look at the sorting of the **download size**.\n* Let's take a look at the top 30!","cd67eac3":"* Let\u2019s take a look at what the total downloads for different categories are.","37083464":"* Let us first look at the correlation between numerical variables. We need to remove the missing values.\n\n* Only the two numerical variables 'Reviews' and 'Installs' have a correlation of **0.62**. The correlation between other variables is very small. The descriptions are independent of each other. A little unexpected.","0f5b7cb8":"* The most popular apps in each category are also worthy of attention. Let's take a look.","a9bf7685":"* I want to take a look at the score and draw a scatter plot with the number of different scores...","ff3b4204":"PS:\n* Fortunately, I am at \"All that you need to know about the Android market\"I learned about interactive data visualization. I chose pyecharts in pyecharts, plotly, bokeh, etc. This is a very simple but powerful package.\n* If you want to draw interactive graphics, then I want to introduce the pyecharts package to you. If you know Chinese, then it will be perfect. Because this package was developed by the Chinese.","3611e3d5":"* 'Rating', 'Install', 'Price' are variables that deserve attention, let's take a look at them.","bba858aa":"PS:In fact, I want to put the two tables just a simple left and right stitching, **ignoring the index and columns**. I failed.\n","f79b3b0f":"* Suddenly think of it, let\u2019s see how much dollars the most expensive app needs."}}