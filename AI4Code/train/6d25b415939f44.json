{"cell_type":{"aca0a90d":"code","65a0be59":"code","9f7b15e9":"code","6f3437eb":"code","2343cb91":"code","eb7df576":"code","bf9da550":"code","0dcc401a":"code","e7672c63":"code","176929d9":"code","83f4f519":"code","51355779":"code","534da5d5":"code","9ba94ae8":"code","5f4b7dff":"code","e41d601f":"code","ae9094bc":"code","d66e505a":"code","b83af85a":"code","307a6fe7":"code","a2197ab6":"code","2c2a1108":"code","0f5b05b0":"code","a6e11095":"code","30ecca35":"code","7f511c05":"code","8a008c2a":"code","e8c3d2ff":"code","209066cc":"markdown","91c8caef":"markdown","2c305dd3":"markdown","19d6e090":"markdown","12c61b1e":"markdown","0f0f0b8d":"markdown","3add4288":"markdown","b7c75a5a":"markdown","cd681a96":"markdown","035dc80a":"markdown","5909334d":"markdown","3a08ff51":"markdown","05ae8ba5":"markdown","2da7dacb":"markdown","f26de249":"markdown","eefc7acb":"markdown","10f7bc51":"markdown","337b9e82":"markdown","30e31722":"markdown","15224277":"markdown","5c84f62f":"markdown","4c839f6a":"markdown","6d14ae71":"markdown"},"source":{"aca0a90d":"import math\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\n\nimport tensorflow as tf","65a0be59":"train = pd.read_csv('..\/input\/train.csv')\ntrain.head()","9f7b15e9":"train.describe()","6f3437eb":"test = pd.read_csv('..\/input\/test.csv')\ntest.head()","2343cb91":"test.describe()","eb7df576":"train.melt(id_vars=\"label\")['value'].isnull().sum()","bf9da550":"test.melt()['value'].isnull().sum()","0dcc401a":"train['label'].value_counts().sort_index()","e7672c63":"# Plot\nplt.figure(figsize=(8, 4))\nsns.set_style(\"whitegrid\")\nsns.countplot(x=\"label\", data=train)\nplt.xlabel(\"Label\")\nplt.ylabel(\"Count\")\nplt.show()","176929d9":"y = train['label']\nX = train.drop(['label'], axis = 1)","83f4f519":"X = X \/ 255\ntest = test \/ 255","51355779":"y = np.array(y)","534da5d5":"X = X.values.reshape(-1,28,28,1)\ntest = test.values.reshape(-1,28,28,1)","9ba94ae8":"plt.imshow(X[0][:,:,0])","5f4b7dff":"random_seed = 4","e41d601f":"# Split the train and test set for the fitting\ntrain_X, test_X, train_y, test_y = train_test_split(X, y, test_size = 0.1, random_state=random_seed)","ae9094bc":"# Tensorflow Keras CNN Model\nmodel = tf.keras.models.Sequential()\n\nmodel.add(tf.keras.layers.Conv2D(32, (3,3), padding = \"same\", activation = \"relu\", input_shape = train_X.shape[1:]))\nmodel.add(tf.keras.layers.MaxPool2D(2,2))\n\nmodel.add(tf.keras.layers.Conv2D(64, (3,3), padding = \"same\", activation = \"relu\"))\nmodel.add(tf.keras.layers.MaxPool2D(2,2))\n\nmodel.add(tf.keras.layers.Conv2D(128, (3,3), padding = \"same\", activation = \"relu\"))\nmodel.add(tf.keras.layers.MaxPool2D(2,2))\n\nmodel.add(tf.keras.layers.Flatten())\nmodel.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))\n","d66e505a":"model.compile(optimizer='adam', \n              loss='sparse_categorical_crossentropy', \n              metrics=['accuracy'])","b83af85a":"model.summary()","307a6fe7":"model.fit(train_X, train_y, epochs=3)","a2197ab6":"val_loss, val_acc = model.evaluate(test_X, test_y) ","2c2a1108":"val_acc","0f5b05b0":"model.fit(X, y, epochs=3)","a6e11095":"test_pred = model.predict(test)","30ecca35":"submission = pd.DataFrame()\nsubmission['ImageId'] = range(1, (len(test)+1))\nsubmission['Label'] = np.argmax(test_pred, axis=1)","7f511c05":"submission.head()","8a008c2a":"submission.shape","e8c3d2ff":"submission.to_csv(\"submission.csv\", index=False)","209066cc":"### Modelling CNN","91c8caef":"##### Train Dataset","2c305dd3":"# Digit Recognizer","19d6e090":"### Tensorflow Model","12c61b1e":"#### Dividing the training dataset into X and y","0f0f0b8d":"#### Predicting on given test data","3add4288":"#### Normalize the pixel data, i.e. converting values from 0 - 254 to 0 - 1 ","b7c75a5a":"##### Test Dataset","cd681a96":"### Reading Datasets","035dc80a":"#### Fitting the train dataset","5909334d":"#### Creating train and test datasets","3a08ff51":"### Predicting the submission dataframe","05ae8ba5":"#### Converting labels to numpy array","2da7dacb":"### Exploratory Data Analsysis","f26de249":"#### Finding the loss and accuracy of the model","eefc7acb":"#### Optimizer and loss function","10f7bc51":"### Importing important libraries","337b9e82":"#### Saving in a csv file","30e31722":"###### CNN on classic dataset of handwritten images","15224277":"#### Fitting the full train data","5c84f62f":"#### Reshaping image to 28px X 28px dimension","4c839f6a":"#### Count of each labels","6d14ae71":"#### Checking for NULL values"}}