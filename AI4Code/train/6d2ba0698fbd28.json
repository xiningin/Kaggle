{"cell_type":{"626555de":"code","bacca196":"code","8608e7da":"code","7c736038":"code","4d74daab":"code","5631b300":"code","e21b2897":"code","b8eee679":"code","4fd1e038":"code","797c8aeb":"code","1e088f8c":"code","2e816d7b":"code","0febd695":"code","8bb813d5":"code","6a1f65a2":"code","fd954ce2":"code","f9e48ffe":"code","c4e932c1":"code","b8b7c445":"code","406bfd16":"code","b1d71a80":"code","e28795ae":"code","ed49c9d5":"code","79bab119":"code","4497adf9":"code","42cd5fbd":"code","afc6e1bd":"code","9b71c5b3":"markdown","c831ab6a":"markdown","f581dd17":"markdown","1c2f3c2e":"markdown","f50fb48a":"markdown","51ffe5d7":"markdown"},"source":{"626555de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bacca196":"df=pd.read_csv(\"..\/input\/covid-vaccination-india-district-wise-data\/vaccine_doses_statewise.csv\")","8608e7da":"df","7c736038":"import matplotlib.pyplot as plt","4d74daab":"df=df.rename(columns={'10\/07\/2021':'Total vaccinated'})","5631b300":"df=df.drop(36,axis=0)","e21b2897":"#population of each state\nPopulation=[420000,54400000,1592000,36000000,127000000,1169000,29800000,620000,19000000,1600000,64300000,28500000,7500000,13800000,39200000,68300000,36000000,290000,74151,87000000,124300000,3200000,3400000,1255000,2300000,46900000,1432000,30000000,82500000,700000,78500000,39800000,4200000,240000000,11400000,100000000,1386452151]","b8eee679":"df['Total Population']=Population","4fd1e038":"df['%age Vaccinated']=(df['Total vaccinated'] \/ df['Total Population']) * 100","797c8aeb":"Vaccination=df[['State','%age Vaccinated']].drop(37)","1e088f8c":"Total=df[['State','%age Vaccinated']]\nTotal=Total.loc[Total.State=='Total']","2e816d7b":"plt.figure(figsize=(15,8))\nplt.bar(Vaccination['State'],Vaccination['%age Vaccinated'],color=(Vaccination.State=='Punjab').map({True:'#8C000F',False:'#929591'}))\nplt.axhline(Total['%age Vaccinated'].values, color = '#008000', ls = '--', lw = 5,label ='Total %age vaccinated in India')\nplt.xlabel('States')\nplt.ylabel('Percentage')\nplt.title('%age of people vaccinated in each state')\nplt.xticks(rotation=90)\nplt.show()\n","0febd695":"df = df.set_index(['State'])","8bb813d5":"df=df.rename(columns={'Total vaccinated':'10\/07\/2021'})","6a1f65a2":"df=df.drop(['Total Population','%age Vaccinated'], axis = 1)","fd954ce2":"df = df.T.reset_index()","f9e48ffe":"df=df.drop(['Total'], axis = 1)","c4e932c1":"df[['index', 'Punjab','Chhattisgarh','Haryana']].set_index(['index']).plot(figsize = (15, 8))\n#plt.axhline(10 ** 6, color = 'maroon', linestyle = ':')\nplt.xticks(rotation = 90)\nplt.show()","b8b7c445":"df[['index', 'Assam','Kerala']].set_index(['index']).plot(figsize = (15, 8))\n#plt.axhline(10 ** 6, color = 'maroon', linestyle = ':')\nplt.xticks(rotation = 90)\nplt.show()","406bfd16":"df[['index', 'Telangana','Jharkhand']].set_index(['index']).plot(figsize = (15, 8))\n#plt.axhline(10 ** 6, color = 'maroon', linestyle = ':')\nplt.xticks(rotation = 90)\nplt.show()","b1d71a80":"df[['index', 'Karnataka','Gujarat']].set_index(['index']).plot(figsize = (15, 8))\n#plt.axhline(10 ** 6, color = 'maroon', linestyle = ':')\nplt.xticks(rotation = 90)\nplt.show()","e28795ae":"df[['index', 'Madhya Pradesh','Rajasthan']].set_index(['index']).plot(figsize = (15, 8))\n#plt.axhline(10 ** 6, color = 'maroon', linestyle = ':')\nplt.xticks(rotation = 90)\nplt.show()","ed49c9d5":"df[['index', 'Jammu and Kashmir','Uttarakhand']].set_index(['index']).plot(figsize = (15, 8))\n#plt.axhline(10 ** 6, color = 'maroon', linestyle = ':')\nplt.xticks(rotation = 90)\nplt.show()","79bab119":"df[['index', 'Punjab']].set_index(['index']).plot(figsize = (15, 8))\nplt.xticks(rotation = 90)\nplt.show()","4497adf9":"df['Punjab'].head()","42cd5fbd":"df['dailyPunjab'] = df['Punjab'] - df['Punjab'].shift(1).fillna(0)","afc6e1bd":"df[['index', 'dailyPunjab']].set_index(['index']).plot(figsize = (15, 8))\nplt.xticks(rotation = 90)\nplt.show()","9b71c5b3":"**%age of people vaccinated in india**","c831ab6a":"**states with nearly same population**","f581dd17":"# **States**","1c2f3c2e":"# **India**","f50fb48a":"**daily people vaccinated**","51ffe5d7":"# **Punjab**"}}