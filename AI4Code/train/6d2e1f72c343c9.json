{"cell_type":{"2fd27f4b":"code","57b8cc1b":"code","6e66f24c":"code","61d94446":"code","205b7b90":"code","06e77283":"code","e80477f2":"code","55194be0":"code","0b84d32a":"code","289730d1":"code","46f3c8f6":"code","d406e547":"code","d6378d93":"code","e5dfa3e2":"code","f7356c3c":"code","8e6b5f6f":"code","81821d03":"markdown"},"source":{"2fd27f4b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","57b8cc1b":"#read data\npokemon = pd.read_csv(\"..\/input\/pokemon.csv\")","6e66f24c":"pokemon.head()","61d94446":"pokemon.info()","205b7b90":"#Bar Plot\nplt.figure(figsize = (10,10))\nsns.barplot(x = \"Generation\",y = \"HP\",data = pokemon)\nplt.xticks(rotation = 45)\nplt.yticks(rotation = 45)\nplt.xlabel(\"Generations\")\nplt.ylabel(\"HP\")\nplt.title(\"Generations per HP\")\nplt.show()","06e77283":"pokemon.head()","e80477f2":"#Point Plot\nf, ax1 = plt.subplots(figsize = (20,15))\nsns.pointplot(x = \"Type 1\",y = \"Attack\", data = pokemon,color = \"blue\")\nsns.pointplot(x = \"Type 1\",y = \"Attack\", data = pokemon,color = \"red\")\nplt.grid()\nplt.xticks(rotation = 45)\nplt.yticks(rotation = 45)\nplt.xlabel(\"Type 1\",color = \"grey\")\nplt.ylabel(\"Attack\",color = \"pink\")","55194be0":"#Joint Plot\njp = sns.jointplot(pokemon.Attack,pokemon.Generation)\nplt.show()","0b84d32a":"#LM Plot\nsns.lmplot(x = \"Attack\",y = \"Defense\",data = pokemon )\nplt.xlabel(\"Attack\",color = \"r\")\nplt.xticks(rotation = 60)\nplt.ylabel(\"Defense\",color = \"cyan\")\nplt.yticks(rotation = 60)\nplt.title(\"Attack VS Defense\",color =\"yellow\")\nplt.show()","289730d1":"#KDE Plot\nsns.kdeplot(pokemon.Attack,pokemon.Defense)","46f3c8f6":"#Violin Plot\npalle = sns.cubehelix_palette(1, rot=-.6, dark=.4)\nsns.violinplot(data=pokemon,palette=palle, inner =\"points\")\nplt.xticks(rotation =15)","d406e547":"pokemon.corr()","d6378d93":"#Heatmap\nf, ax =plt.subplots(figsize = (10,10))\nsns.heatmap(pokemon.corr(),linewidths=0.4,linecolor=\"black\",alpha=0.8)\nplt.xticks(rotation=90,color=\"blue\")\nplt.yticks(color=\"blue\")","e5dfa3e2":"#Box Plot\nsns.boxplot(x = \"Generation\", y = \"HP\",data = pokemon)","f7356c3c":"#Swarm Plot\nsns.swarmplot(x = \"Generation\",y = \"HP\", data = pokemon)","8e6b5f6f":"#Pair Plot\nsns.pairplot(pokemon)\nplt.show()","81821d03":"**Plot Types**\n1. Bar Plot\n1. Point Plot\n1. Joint Plot\n1. LM Plot\n1. KDE Plot\n1. Violin Plot\n1. Heatmap\n1. Box Plot\n1. Swarm Plot\n1. Pair Plot"}}