{"cell_type":{"fab0ddc4":"code","7ff945f3":"code","50ef3400":"code","4faf8545":"code","e3d65eb1":"code","8a73182a":"code","b9837026":"code","e80a4ccf":"code","13496321":"code","3e645a39":"code","4750cbb8":"code","91d1d7f4":"code","5945b1db":"code","27e8f897":"code","8d1dd07b":"code","2e4dd670":"code","00ae4768":"code","d2f47f31":"code","a634e5a7":"code","808e1f3a":"code","21445975":"code","3d57c906":"code","927c2e11":"markdown","2e79858f":"markdown","628ccf7b":"markdown","cae695f5":"markdown","46d4ca27":"markdown","128b7e7e":"markdown"},"source":{"fab0ddc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nfrom wordcloud import WordCloud, STOPWORDS\nimport warnings\nfrom collections import Counter\nimport datetime\nimport wordcloud\nimport json\nimport matplotlib as mpl\n%matplotlib inline\nfrom subprocess import check_output\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Data Munging\npd.options.mode.chained_assignment = None\npd.options.display.max_columns = 999\nfrom IPython.display import HTML\n\n# Data Visualizations\nplt.style.use('fivethirtyeight')\nimport seaborn as sns\nimport squarify\n# Plotly has such beautiful graphs\nimport plotly\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.figure_factory as fig_fact\nplotly.tools.set_config_file(world_readable=True, sharing='public')\n\n\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","7ff945f3":"data = pd.read_csv('..\/input\/battles.csv')\ndata3=pd.read_csv('..\/input\/character-predictions.csv')\ndata2 = pd.read_csv('..\/input\/character-deaths.csv')","50ef3400":"PLOT_COLORS = [\"#268bd2\", \"#0052CC\", \"#FF5722\", \"#b58900\", \"#003f5c\"]\npd.options.display.float_format = '{:.2f}'.format\nsns.set(style=\"ticks\")\nplt.rc('figure', figsize=(8, 5), dpi=100)\nplt.rc('axes', labelpad=20, facecolor=\"#ffffff\", linewidth=0.4, grid=True, labelsize=14)\nplt.rc('patch', linewidth=0)\nplt.rc('xtick.major', width=0.2)\nplt.rc('ytick.major', width=0.2)\nplt.rc('grid', color='#9E9E9E', linewidth=0.4)\nplt.rc('font', family='Arial', weight='400', size=10)\nplt.rc('text', color='#282828')\nplt.rc('savefig', pad_inches=0.3, dpi=300)","4faf8545":"mpl.rcParams['font.size']=20              #10 \nmpl.rcParams['savefig.dpi']=100             #72 \nmpl.rcParams['figure.subplot.bottom']=.1\nf,ax = plt.subplots(figsize=(10, 10))\n\nstopwords = set(STOPWORDS)\ndata2 = pd.read_csv('..\/input\/character-deaths.csv')\n\nwordcloud = WordCloud(\n                          background_color='white',\n                          stopwords=stopwords,\n                          max_words=200,\n                          max_font_size=40, \n                          random_state=42\n                         ).generate(str(data2['Name']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","e3d65eb1":"data.info()","8a73182a":"data.corr()","b9837026":"data.columns","e80a4ccf":"data.head(10)","13496321":"#correlation map\nf,ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","3e645a39":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.major_death.plot(kind = 'line', color = 'blue',label = 'major_death',linewidth=1,alpha = 1,grid = True,linestyle = ':')\ndata.major_capture.plot(color = 'r',label = 'major_capture',linewidth=1, alpha = 1,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","4750cbb8":"data.head(10)","91d1d7f4":"data.boxplot(column='battle_number', by = 'year')\nplt.show()","5945b1db":"data.describe()","27e8f897":"data_1 = data.head(6)\nmelted = pd.melt(frame = data_1,id_vars = 'attacker_king',value_vars=['attacker_size', 'defender_size'])\nmelted","8d1dd07b":"fig, ax = plt.subplots()\n_ = sns.distplot(data[data[\"attacker_size\"] < 25e6][\"attacker_size\"], kde=False, \n                 color=PLOT_COLORS[3], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"attacker_size\")","2e4dd670":"fig, ax = plt.subplots()\n_ = sns.distplot(data[data[\"defender_size\"] < 25e6][\"defender_size\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\" Defender Size\")","00ae4768":"data2.head(25)","d2f47f31":"trace = []\nfor name, group in data2.groupby(\"Allegiances\"):\n    trace.append ( \n        go.Box(\n            x=group[\"Book Intro Chapter\"].values,\n            name=name\n        )\n    )\nlayout = go.Layout(\n    title='Book Intro Chapter',\n    width = 800,\n    height = 800\n)\n#data = [trace0, trace1]\nfig = go.Figure(data=trace, layout=layout)\npy.iplot(fig, filename=\"Book Intro Chapter\")\n","a634e5a7":"data3.head(5)","808e1f3a":"print(data3['house'].value_counts(dropna=False))","21445975":"sns.catplot(x='alive', y='house', data=data3.head(30), kind ='bar')\n","3d57c906":"data.head(10)","927c2e11":"**ALIVE OF HOUSE**","2e79858f":"**Here, we can see some informations about attacker and defender size in battles.**","628ccf7b":"**There are kings name and their families and informations about him**\n","cae695f5":"**Hello everyone, I started to learning data visualizion. Than this is my first kaggle experience and i analysised to GoT characters and battles. It's gonna be so simple. Here we go!**","46d4ca27":"**BOOK INTRO CHAPTERS**","128b7e7e":"**1. FIRST, LOADING LIBRARIES AND DATA**"}}