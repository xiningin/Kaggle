{"cell_type":{"a7e8edfd":"code","540c78c2":"code","4cf9515d":"code","4a05d81a":"code","5672dd10":"code","497fce50":"code","76f19777":"code","9925dfc2":"code","54ec871b":"markdown","5d18962e":"markdown","ab134321":"markdown","939dcceb":"markdown","dfec813b":"markdown","d6e482b7":"markdown","3b5378ee":"markdown"},"source":{"a7e8edfd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing, neighbors\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","540c78c2":"df = pd.read_csv('..\/input\/heart.csv')\nprint(df.head())\ndf.describe()\ndf.info()\n","4cf9515d":"df.rename(columns={'cp': 'chest_pain_type', 'trestbps' :'blood_pressure', 'chol':'cholesterol', 'fbs':'blood_sugar_rest', 'thalach':'max_heart_rate' }, inplace=True)\ndf = df[['age', 'sex', 'chest_pain_type', 'blood_pressure', 'cholesterol', 'blood_sugar_rest', 'max_heart_rate', 'target']  ]\ndf.head(5)","4a05d81a":"X = np.array(df.drop(['target'], 1))\ny = np.array(df['target'])","5672dd10":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","497fce50":"clf = neighbors.KNeighborsClassifier()\nclf.fit(X_train, y_train)\naccuracy_KNN = clf.score(X_test, y_test)\nprint(accuracy_KNN)","76f19777":"from sklearn import svm\n\nclf = svm.SVC(gamma='scale')\n\nclf.fit(X_train, y_train)\naccuracy_SVM = clf.score(X_test, y_test)\nprint(accuracy_SVM)","9925dfc2":"from sklearn.linear_model import LogisticRegression\n\nclf = LogisticRegression(solver = 'newton-cg')\n\nclf.fit(X_train, y_train)\naccuracy_LR = clf.score(X_test, y_test)\nprint(accuracy_LR)","54ec871b":"We indetify the inputs in X and the output in y. Output is the target Column. The goal is to identiify whether a patient has heart disease or not. ","5d18962e":"From the results it can be seen that KNN and SVM usually have accuracy ranging from 60%-70%.\nWhile ogistic regression have accuracy of 75%-85%.\n\nFor this data Logistic Regression seem to be better suited. ","ab134321":"KNN Classification","939dcceb":"Logistic Regression","dfec813b":"Support Vector Machine Classification","d6e482b7":"Here some columns aer renamed, so they are easy to understand.\n\nAlso some columns are filtered out from the data frame. ","3b5378ee":"Train test Split. Standard proceduer of training with 80% of the data and Keeping the 20% for testing."}}