{"cell_type":{"2e2b61e0":"code","9a1eb618":"code","92db9c96":"code","eafb2551":"code","88fac777":"code","cc08a07e":"code","957a8d4c":"code","f1a4a76d":"code","8fd392e0":"code","a7413f52":"code","04fd19cf":"code","a80a4034":"code","e899db8f":"code","eedb55de":"code","422a3976":"code","3f91e7de":"code","c90dd21b":"code","d861d7cb":"code","3a41d259":"code","a07d5b5e":"code","b64d92c9":"code","e123b600":"code","1bf27db5":"code","f30e36a8":"code","24badc46":"code","64f05b7d":"code","76ad8359":"code","7ac33df3":"code","708c34bc":"code","83b6dbf5":"code","2bcb3834":"code","fc401a45":"code","ab5a8ec6":"code","abede974":"code","136be21c":"code","5fd4882f":"code","f5241b5a":"code","67c0535d":"code","4ca52c3d":"code","360ef811":"code","bf9b7c94":"code","0c07e2cc":"code","b6b46d17":"code","c093870d":"code","46532e8b":"code","3adf4b5b":"code","a8d19474":"code","75a2d803":"code","9263de0b":"code","4003c1ac":"code","3c82dd2f":"code","4788982d":"code","38c17ebf":"code","51605093":"code","68dbd150":"code","8e9dcf79":"code","81f58501":"code","42da2a82":"code","59d777d4":"code","18ba0b28":"code","4b6301c3":"code","38d71d84":"code","ea613493":"code","ff89ed1a":"code","dca41e45":"code","c81a203e":"code","f9a285ba":"code","6420589f":"code","f733d75b":"code","fc3dff35":"code","adec7852":"code","29034773":"code","d2ee549f":"code","38506c7e":"code","8c2bc3ae":"code","1707c269":"code","20c2a182":"code","6bc36ff0":"code","d63d13bf":"code","16036b1c":"code","7d67c289":"code","257e07b8":"code","251130d8":"code","f43fddcc":"code","7ab9792d":"code","6e842901":"code","03f86b1b":"code","64057818":"code","199da9cd":"code","6f7ead65":"markdown","c959d741":"markdown","bb40aaff":"markdown","fdedd03d":"markdown","d6369be5":"markdown","c222b895":"markdown","287ffa7d":"markdown","3366ed93":"markdown","2fa6186c":"markdown","9a8b724a":"markdown","dfc5e5ca":"markdown","e0c2e98a":"markdown","9e00acba":"markdown","df40ad78":"markdown","ebad7fe6":"markdown","3e386368":"markdown","11380b96":"markdown","a7c8fb79":"markdown","7f971218":"markdown"},"source":{"2e2b61e0":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","9a1eb618":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n","92db9c96":"train.head()\n","eafb2551":"train.shape","88fac777":"train.describe()","cc08a07e":"train.describe(include=['O'])","957a8d4c":"train.isnull().sum()","f1a4a76d":"test.shape","8fd392e0":"test.head()","a7413f52":"test.info()","04fd19cf":"test.isnull().sum()","a80a4034":"survived = train[train['Survived'] == 1]\nnot_survived = train[train['Survived'] == 0]","e899db8f":"print (\"Survived: {}({:.1f}%)\".format(len(survived), float(len(survived)\/len(train)*100.0)))\nprint (\"Not Survived: {}({:.1f}%)\".format(len(not_survived), float(len(not_survived)\/len(train)*100.0)))\nprint (\"Total:{}\".format(len(train)))","eedb55de":"train.Pclass.value_counts()","422a3976":"train.groupby('Pclass').Survived.value_counts()","3f91e7de":"train[['Pclass', 'Survived']].groupby('Pclass',as_index=False).Survived.mean()","c90dd21b":"sns.barplot(x='Pclass', y='Survived', data=train)","d861d7cb":"train.Sex.value_counts()","3a41d259":"train.groupby('Sex').Survived.value_counts()","a07d5b5e":"train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean()","b64d92c9":"sns.barplot(x='Sex', y='Survived', data=train)\n","e123b600":"tab = pd.crosstab(train['Pclass'], train['Sex'])\nprint (tab)","1bf27db5":"tab.div(tab.sum(1).astype(float), axis=0).plot(kind=\"bar\", stacked=True)\nplt.xlabel('Pclass')\nplt.ylabel('Percentage')\n","f30e36a8":"sns.catplot(x='Sex', y='Survived', hue='Pclass', height=4, aspect=2, data=train)","24badc46":"sns.catplot(x='Pclass', y='Survived', hue='Sex', col='Embarked', data=train)","64f05b7d":"train.Embarked.value_counts()","76ad8359":"train.groupby('Embarked').Survived.value_counts()\n","7ac33df3":"train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean()","708c34bc":"sns.barplot(x='Embarked', y='Survived', data=train)\n","83b6dbf5":"train.Parch.value_counts()","2bcb3834":"train.groupby('Parch').Survived.value_counts()\n\n","fc401a45":"train[['Parch','Survived']].groupby('Parch',as_index=False).mean()","ab5a8ec6":"sns.barplot(x='Parch', y='Survived', ci=None, data=train)","abede974":"train.SibSp.value_counts()","136be21c":"train.groupby('SibSp').Survived.value_counts()","5fd4882f":"train[['SibSp','Survived']].groupby('SibSp',as_index=False).mean()","f5241b5a":"sns.barplot(x='SibSp',y='Survived',data=train)","67c0535d":"train.Age.value_counts()","4ca52c3d":"train.groupby('SibSp').Survived.value_counts()","360ef811":"sns.barplot(x='Age',y='Survived',data=train)","bf9b7c94":"fig = plt.figure(figsize=(15,5))\nax1 = fig.add_subplot(131)\nax2 = fig.add_subplot(132)\nax3 = fig.add_subplot(133)\nsns.violinplot(x=\"Embarked\", y=\"Age\", hue=\"Survived\", data=train, split=True, ax=ax1)\nsns.violinplot(x=\"Pclass\", y=\"Age\", hue=\"Survived\", data=train, split=True, ax=ax2)\nsns.violinplot(x=\"Sex\", y=\"Age\", hue=\"Survived\", data=train, split=True, ax=ax3)","0c07e2cc":"titles=set()\nfor name in train['Name']:\n    titles.add(name.split(',')[1].split('.')[0].strip(' '))\nprint(titles)  ","b6b46d17":"title_dict={'Mrs':'Mrs','Major':'Other','Master':'Master','Lady':'Other','Mlle':'Miss','Dr':'Other','Col':'Other','Capt':'Other','Don':'Other','the Countess':'Other','Mme':'Mrs','Miss':'Miss','Jonkheer':'Other','Rev':'Other','Sir':'Other','Ms':'Miss','Mr':'Mr'}","c093870d":"train_test=[train,test]","46532e8b":"for dataset in train_test:\n    dataset['Title']=dataset['Name'].map(lambda name:name.split(',')[1].split('.')[0].strip() )\n    dataset['Title']=dataset.Title.map(title_dict)  ","3adf4b5b":"train.head()","a8d19474":"train.tail()","75a2d803":"pd.crosstab(train['Title'],train['Sex'])","9263de0b":"title_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Other\": 5}","4003c1ac":"for dataset in train_test:\n    dataset['Title'] = dataset['Title'].map(title_mapping)\n    \ntrain.head()","3c82dd2f":"for dataset in train_test:\n    train['Title']=train['Title'].fillna(0)","4788982d":"train.head()","38c17ebf":"df1=train.drop(['Name','Ticket','PassengerId','Cabin','Embarked'],axis=1)\ndf1.head()","51605093":"df1['Sex']=df1.Sex.map({'female':1,'male':0})","68dbd150":"df1.head()","8e9dcf79":"df1.isnull().sum()","81f58501":"mean_men=df1[df1['Sex']==0]['Age'].mean()\nmean_fem=df1[df1['Sex']==1]['Age'].mean()","42da2a82":"df1.loc[(df1.Age.isnull())&(df1['Sex']==1),'Age']=mean_fem\ndf1.loc[(df1.Age.isnull())&(df1['Sex']==0),'Age']=mean_men","59d777d4":"df1.isnull().sum()","18ba0b28":"df1.Age=(df1.Age-min(df1.Age))\/(max(df1.Age)-min(df1.Age))\ndf1.Fare=(df1.Fare-min(df1.Fare))\/(max(df1.Fare)-min(df1.Fare))","4b6301c3":"df1.head()","38d71d84":"from sklearn.model_selection import train_test_split","ea613493":"x_train,x_test,y_train,y_test=train_test_split(df1.drop(['Survived'],axis=1),df1.Survived,test_size=0.25,random_state=0,stratify=df1.Survived)","ff89ed1a":"from sklearn.linear_model import LogisticRegression\nclf= LogisticRegression()\nclf.fit(x_train,y_train)","dca41e45":"from sklearn.metrics import accuracy_score\ny_pred= clf.predict(x_test)\naccuracy_score (y_test,y_pred)","c81a203e":"from sklearn.metrics import confusion_matrix\nmat=confusion_matrix(y_test,y_pred)\nmat","f9a285ba":"sns.heatmap(mat,annot=True)","6420589f":"test.head()","f733d75b":"df2=test.drop(['Name','Ticket','PassengerId','Cabin','Embarked'],axis=1)\ndf2.head()","fc3dff35":"df2['Sex']=df2.Sex.map({'male':0,'female':1})","adec7852":"df2.head()","29034773":"df2.isnull().sum()","d2ee549f":"Mean_fem=df2[df2['Sex']==1]['Age'].mean()\nMean_men=df2[df2['Sex']==0]['Age'].mean()","38506c7e":"df2.loc[(df2.Age.isnull())&(df2['Sex']==1),'Age']=Mean_fem\ndf2.loc[(df2.Age.isnull())&(df2['Sex']==0),'Age']=Mean_men","8c2bc3ae":"df2.isnull().sum()","1707c269":"df2[df2.Title.isnull()]","20c2a182":"df2['Title']=df2.Title.fillna(3)  #filling with value corresponding to Mrs since age is 39","6bc36ff0":"df2.isnull().sum()","d63d13bf":"df2['Fare']=df2.Fare.fillna(df2.Fare.median())","16036b1c":"df2.isnull().sum()","7d67c289":"df2.head()","257e07b8":"df2['Age']=(df2.Age-min(df2.Age))\/(max(df2.Age)-min(df2.Age))","251130d8":"df2['Fare']=(df2.Fare-min(df2.Fare))\/(max(df2.Fare)-min(df2.Fare))","f43fddcc":"df2.head()","7ab9792d":"pred=clf.predict(df2)","6e842901":"pred","03f86b1b":"submit=pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':pred})\nsubmit.to_csv('submit.csv',index=False)","64057818":"pred_df=pd.read_csv('submit.csv')","199da9cd":"sns.countplot(x='Survived',hue='Survived',data=pred_df)","6f7ead65":"**Prediction**","c959d741":"**Data Modelling**","bb40aaff":"**Logistic Regression**","fdedd03d":"**Cleaning the test dataset**","d6369be5":"**Embarked v\/s Survival**","c222b895":"**Sex v\/s Survival**","287ffa7d":"**Loading Dataset**","3366ed93":"**Relationship between different features and Survival**","2fa6186c":"**Looking into training data**","9a8b724a":"**Cleaning the dataset**","dfc5e5ca":"**Sex and Pclass v\/s Survival**","e0c2e98a":"**Feature Extraction**","9e00acba":"**Feature Scaling**","df40ad78":"**Pclass, Sex and Embarked v\/s Survival**","ebad7fe6":"**Looking into testing data**","3e386368":"train.info()","11380b96":"**Pclass v\/s Survival**","a7c8fb79":"**Parch v\/s Survival**","7f971218":"**SibSp v\/s Survived**"}}