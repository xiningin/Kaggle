{"cell_type":{"a9693341":"code","7ce46b13":"code","cfdd3103":"code","f197a43c":"code","1b070765":"code","fe052fee":"code","79b6588a":"code","7c990ac0":"code","b31b6f6b":"code","27ba697c":"code","50a15dad":"code","0accbcb2":"code","6e5961df":"code","ea42fdb9":"code","2cf8748f":"code","929f0820":"code","1cd68d70":"code","49f79a08":"code","ffd43a61":"code","bc197647":"code","3e4b3c27":"code","be8e9dda":"code","41f8ab84":"code","356a02ba":"code","9a2db5db":"code","30134d95":"code","643790a1":"code","8c719b6c":"code","de6a854a":"markdown","1b788d65":"markdown"},"source":{"a9693341":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7ce46b13":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","cfdd3103":"sm_branches = pd.read_csv('\/kaggle\/input\/marketing-data-for-a-supermarket-in-united-states\/supermarket_marketing\/50_SupermarketBranches.csv')\nsm_members = pd.read_csv('\/kaggle\/input\/marketing-data-for-a-supermarket-in-united-states\/supermarket_marketing\/Supermarket_CustomerMembers.csv')\n\nsm_branches.shape,sm_members.shape","f197a43c":"sm_branches.head()","1b070765":"sm_members.head()","fe052fee":"countsT = sm_members['Genre'].value_counts()\nlabels = 'Female' ,'Male'\nsizes = countsT.values\nexplode = (0.1, 0.1) \nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',shadow=True, startangle=90)\nax1.axis('equal')  \nplt.show()","79b6588a":"age_values = sm_members.Age.value_counts()\nage_labels = age_values.index\nplt.figure(figsize=(15,8))\nax = sns.barplot(x=age_labels,y=age_values)\nax.set_title('Age distribution')\nax.set_ylabel('Count')\nax.set_xlabel('Age')","7c990ac0":"#Average spending by a customer\nfm_spending_avg = sm_members.groupby('Genre')['Spending Score (1-100)'].sum()['Female']\/112\nprint('Average spending by a female customer is {}'.format(fm_spending_avg))\n\nm_spending_avg = sm_members.groupby('Genre')['Spending Score (1-100)'].sum()['Male']\/88\nprint('Average spending by a Male customer is {}'.format(m_spending_avg))\n\navg_spending = sm_members['Spending Score (1-100)'].sum()\/200\nprint('Average spending by a customer is {}'.format(avg_spending))","b31b6f6b":"#Average income of a customer\nfm_income_avg = sm_members.groupby('Genre')['Annual Income (k$)'].sum()['Female']\/112\nprint('Average income of a female customer is {}k'.format(fm_income_avg))\n\nm_income_avg = sm_members.groupby('Genre')['Annual Income (k$)'].sum()['Male']\/88\nprint('Average income of a Male customer is {}k'.format(m_income_avg))\n\navg_income = sm_members['Annual Income (k$)'].sum()\/200\nprint('Average income of a customer is {}k'.format(avg_income))","27ba697c":"xn = sm_members.groupby('Age')['Annual Income (k$)'].sum()\nxn.reset_index(drop=False)\nvalues = xn.values\nlabels = xn.index\nplt.figure(figsize=(15,8))\nax=sns.barplot(x=labels,y=values)\nax.set_title('Age vs Annual Income plot')\nax.set_ylabel('Annual Income Sum in K')\nax.set_xlabel('Age')\nplt.figure(figsize=(15,8))","50a15dad":"xn = sm_members.groupby('Age')['Spending Score (1-100)'].sum()\nxn.reset_index(drop=False)\nvalues = xn.values\nlabels = xn.index\nplt.figure(figsize=(15,8))\nax=sns.barplot(x=labels,y=values)\nax.set_title('Age vs Spending plot')\nax.set_ylabel('Sum of spendings')\nax.set_xlabel('Age')","0accbcb2":"sm_branches.head(5)","6e5961df":"plt.figure(figsize=(8,5))\nplt.xticks(rotation=45)\nsns.set()\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=sm_branches['State'], data=sm_branches)\nax.set_title('Count of branches in each state')\nax.set_ylabel('No. of Branches')\nax.set_xlabel('State')","ea42fdb9":"coun = 0\ncoun1 = 0\nfor i in sm_branches['State']:\n    if i == 'Florida':\n        coun = coun+1\n    if i == 'New York':\n        coun1 = coun1+1\nprint(coun,coun1)","2cf8748f":"#Florida\nflorida_profit = sm_branches.groupby('State')['Profit'].sum()['Florida']\nprint('Total profit at all the branches in florida is {}'.format(florida_profit))\nprint('Avg profit at branches in florida is {}'.format(florida_profit\/16))\nprint('\\n')\n#New York\nnew_york_profit = sm_branches.groupby('State')['Profit'].sum()['New York']\nprint('Total profit at all the branches in New York is {}'.format(new_york_profit))\nprint('Avg profit at branches in New York is {}'.format(new_york_profit\/17))\nprint('\\n')\n\n#California\ncalifornia_profit = sm_branches.groupby('State')['Profit'].sum()['California']\nprint('Total profit at all the branches in California is {}'.format(california_profit))\nprint('Avg profit at branches in California is {}'.format(california_profit\/17))","929f0820":"#Florida\nflorida_ad_spent = sm_branches.groupby('State')['Advertisement Spend'].sum()['Florida']\nprint('Total Advertisement Spendings at all the branches in florida is {}'.format(florida_ad_spent))\nprint('Avg Advertisement Spendings at branches in florida is {}'.format(florida_ad_spent\/16))\nprint('\\n')\n#New York\nnew_york_ad_spent = sm_branches.groupby('State')['Advertisement Spend'].sum()['New York']\nprint('Total Advertisement Spendings at all the branches in New York is {}'.format(new_york_ad_spent))\nprint('Avg Advertisement Spendings at branches in New York is {}'.format(new_york_ad_spent\/17))\nprint('\\n')\n\n#California\ncalifornia_ad_spent = sm_branches.groupby('State')['Advertisement Spend'].sum()['California']\nprint('Total Advertisement Spendings at all the branches in California is {}'.format(california_ad_spent))\nprint('Avg Advertisement Spendings at branches in California is {}'.format(california_ad_spent\/17))","1cd68d70":"#Florida\nflorida_prm_spent = sm_branches.groupby('State')['Promotion Spend'].sum()['Florida']\nprint('Total Promotion Spendings at all the branches in florida is {}'.format(florida_prm_spent))\nprint('Avg Promotion Spendings at branches in florida is {}'.format(florida_prm_spent\/16))\nprint('\\n')\n#New York\nnew_york_prm_spent = sm_branches.groupby('State')['Promotion Spend'].sum()['New York']\nprint('Total Promotion Spendings at all the branches in New York is {}'.format(new_york_prm_spent))\nprint('Avg Promotion Spendings at branches in New York is {}'.format(new_york_prm_spent\/17))\nprint('\\n')\n\n#California\ncalifornia_prm_spent = sm_branches.groupby('State')['Promotion Spend'].sum()['California']\nprint('Total Promotion Spendings at all the branches in California is {}'.format(california_prm_spent))\nprint('Avg Promotion Spendings at branches in California is {}'.format(california_prm_spent\/17))","49f79a08":"ad_spend_list = [florida_ad_spent,new_york_ad_spent,california_ad_spent]\ncities = ['Florida','New York','California']\npr_spend_list = [florida_prm_spent,new_york_prm_spent,california_prm_spent]\nplt.figure(figsize=(15,8))\nax=sns.barplot(y=ad_spend_list[:],x=cities[:])\nax.set_title('Branch vs Money spent on Advertisement plot')\nax.set_ylabel('Money spent on Advertisement')\nax.set_xlabel('Branch')","ffd43a61":"plt.figure(figsize=(15,8))\nax=sns.barplot(y=pr_spend_list[:],x=cities[:])\nax.set_title('Branch vs Money spent on Promotion plot')\nax.set_ylabel('Money spent on Promotion')\nax.set_xlabel('Branch')","bc197647":"basket = pd.read_csv('\/kaggle\/input\/marketing-data-for-a-supermarket-in-united-states\/supermarket_marketing\/Market_Basket_Optimisation.csv')\nbasket.head(5)","3e4b3c27":"basket.info()","be8e9dda":"names = ' '\nfor name in basket.shrimp:\n    name = str(name)\n    names = names + name + ' '\nfrom wordcloud import WordCloud, STOPWORDS \nwordcloud = WordCloud(width = 800, height = 800, \n                background_color ='black',  \n                min_font_size = 10).generate(names) \n  \n# plot the WordCloud image                        \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","41f8ab84":"basket.shrimp.nunique()","356a02ba":"ads = pd.read_csv('\/kaggle\/input\/marketing-data-for-a-supermarket-in-united-states\/supermarket_marketing\/Ads_CTR_Optimisation.csv')\nads.head(5)","9a2db5db":"ads.info()","30134d95":"xn = ads.sum(axis = 0, skipna = True) \nxn.reset_index(drop=False)\nvalues = xn.values\nlabels = xn.index\nplt.figure(figsize=(15,8))\nax=sns.barplot(x=labels,y=values)\nax.set_title('Ads vs Count plot')\nax.set_ylabel('Count')\nax.set_xlabel('Ad Type')","643790a1":"def plotCorrelationMatrix(df, graphWidth):\n    #filename = df.dataframeName\n    df = df.dropna('columns') # drop columns with NaN\n    df = df[[col for col in df if df[col].nunique() > 1]] # keep columns where there are more than 1 unique values\n    if df.shape[1] < 2:\n        print(f'No correlation plots shown: The number of non-NaN or constant columns ({df.shape[1]}) is less than 2')\n        return\n    corr = df.corr()\n    plt.figure(num=None, figsize=(graphWidth, graphWidth), dpi=80, facecolor='w', edgecolor='k')\n    corrMat = plt.matshow(corr, fignum = 1)\n    plt.xticks(range(len(corr.columns)), corr.columns, rotation=90)\n    plt.yticks(range(len(corr.columns)), corr.columns)\n    plt.gca().xaxis.tick_bottom()\n    plt.colorbar(corrMat)\n    #plt.title(f'Correlation Matrix for {filename}', fontsize=15)\n    plt.show()\n\nplotCorrelationMatrix(sm_branches, 8)","8c719b6c":"plotCorrelationMatrix(sm_members, 8)","de6a854a":"**Correlation Matrix for Super Market Members**","1b788d65":"**Correlation Matrix for Super Market Branches**"}}