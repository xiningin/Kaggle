{"cell_type":{"21cdf478":"code","d03980eb":"code","01a15c1a":"code","f5da14ab":"code","be866147":"code","7f449588":"code","ddef5db7":"code","76f86041":"code","be458e9c":"code","99d2dff6":"code","063fc770":"code","3f874d2c":"code","bfe65b09":"code","06e69fe2":"code","a7c43699":"markdown","79161b1d":"markdown","15efd8e3":"markdown","8ab3e672":"markdown","e428c83e":"markdown","0cc393b5":"markdown","031f89f7":"markdown","50b7777c":"markdown","236c2ff8":"markdown","684d9ccf":"markdown","21742f2f":"markdown","1c8c3324":"markdown","55c6cca0":"markdown","140075d2":"markdown","dc0288f0":"markdown"},"source":{"21cdf478":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.rcParams.update({'font.size': 14})\nfrom matplotlib.colors import LinearSegmentedColormap\nfrom matplotlib.patches import Rectangle\nfrom matplotlib.ticker import MultipleLocator\nfrom matplotlib.lines import Line2D\n\nimport re\n\nfrom math import pi\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Setup color palette\n# Color palette is created by using a screenshot from https:\/\/learnplatform.com\/ and retrieving color codes via https:\/\/imagecolorpicker.com\/\n\nlp_blue = '#0070c0'\nlp_turquoise = '#3c9e78'\nlp_green = '#70c738'\nlp_grey = '#8e9094'\nlp_grey_light = '#f0f0f0'\n\n# Set Color Palettes for the notebook\nlp_palette1 = [lp_blue, lp_green, lp_turquoise,  lp_grey, lp_grey_light]\n#display(sns.palplot(sns.color_palette(lp_palette1)))\n\nlp_cmap = LinearSegmentedColormap.from_list(\"\", [lp_blue,  '#5cd0da',  lp_turquoise, lp_green])\nplt.cm.register_cmap(\"lp_cmap\", lp_cmap)\nlp_cmap2 = LinearSegmentedColormap.from_list(\"\", [lp_blue,  '#ffffff', lp_green])\nplt.cm.register_cmap(\"lp_cmap2\", lp_cmap2)\n\ndef get_lp_palette(n_colors):\n    if n_colors == 2:\n        lp_cmap = LinearSegmentedColormap.from_list(\"\", [lp_blue, lp_green])\n        plt.cm.register_cmap(\"lp_cmap0\", lp_cmap)\n        return sns.color_palette(\"lp_cmap0\", n_colors=n_colors)\n    elif n_colors == 3:\n        lp_cmap = LinearSegmentedColormap.from_list(\"\", [lp_blue, lp_turquoise, lp_green])\n        plt.cm.register_cmap(\"lp_cmap1\", lp_cmap)\n        return sns.color_palette(\"lp_cmap1\", n_colors=n_colors)\n    else:       \n        return sns.color_palette(\"lp_cmap\", n_colors=n_colors)","d03980eb":"###### districts_info ######\ndistricts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\n\n# Dropping districts with NaN states\ndistricts_info = districts_info[districts_info.state.notna()].reset_index(drop=True)\n\n# Drop column county_connections_ratio which does not contain any valuable information\ndistricts_info = districts_info.drop('county_connections_ratio', axis=1)\n\ndef replace_ranges_pct(range_str):\n    if range_str == '[0, 0.2[':\n        return 0.1\n    elif range_str == '[0.2, 0.4[':\n        return 0.3\n    elif range_str == '[0.4, 0.6[':\n        return 0.5\n    elif range_str == '[0.6, 0.8[':\n        return 0.7\n    elif range_str == '[0.8, 1[':\n        return 0.9\n    else:\n        return np.nan\n    \ndistricts_info['pct_black\/hispanic'] = districts_info['pct_black\/hispanic'].apply(lambda x: replace_ranges_pct(x))\n\n# Replace state strings with abbreviations\nus_state_abbrev = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'American Samoa': 'AS',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District Of Columbia': 'DC',\n    'District of Columbia': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Guam': 'GU',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY'\n}\n\ndistricts_info['state'] = districts_info['state'].replace(us_state_abbrev)\n\n###### products_info ######\nproducts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\n\n# Convert column names to lower case and replace spaces with underscores\nproducts_info.columns = [f\"{re.sub(' ', '_', col.lower())}\" for col in products_info.columns]\n\n# Splitting up the primary essential functions\nproducts_info['primary_function_main'] = products_info['primary_essential_function'].apply(lambda x: x.split(' - ')[0] if x == x else x)\nproducts_info['primary_function_sub'] = products_info['primary_essential_function'].apply(lambda x: x.split(' - ')[1] if x == x else x)\n\n# Synchronize similar values\nproducts_info['primary_function_sub'] = products_info['primary_function_sub'].replace({'Sites, Resources & References' : 'Sites, Resources & Reference'})\nproducts_info.drop(\"primary_essential_function\", axis=1, inplace=True)\n\n###### engagement_data ######\ntemp = []\n\nfor district in (districts_info.district_id.unique()):\n    df = pd.read_csv(f'..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/{district}.csv', index_col=None, header=0)\n    df[\"district_id\"] = district\n    if df.time.nunique() == 366:\n        temp.append(df)\n\nengagement = pd.concat(temp)\nengagement = engagement.reset_index(drop=True)\ndel temp\n\n# Only consider districts with full 2020 engagement data\ndistricts_info = districts_info[districts_info.district_id.isin(engagement.district_id.unique())].reset_index(drop=True)\nproducts_info = products_info[products_info.lp_id.isin(engagement.lp_id.unique())].reset_index(drop=True)\n\n# Only consider engagement data with lp_id in products_info\nengagement = engagement[engagement.lp_id.isin(products_info.lp_id.unique())].reset_index(drop=True)\n\n# Convert time\nengagement.time = engagement.time.astype('datetime64[ns]')\n\n# Create new features\nengagement['cw'] = pd.DatetimeIndex(engagement['time']).week\nengagement['weekday'] = pd.DatetimeIndex(engagement['time']).weekday\n\n# Fill NaN in column engagement_index with 0\nengagement['engagement_index'] = engagement['engagement_index'].fillna(0)\n\n# Only look at engagement on weekdays\nengagement = engagement[engagement.weekday < 5].reset_index(drop=True)\n\n# Resample average data on weekly basis\nengagement_cw = engagement.groupby(['cw', 'lp_id', 'district_id'])['pct_access', 'engagement_index'].mean().reset_index(drop=False)\n\n# Covid phase:\n# -1 : Summer break\n# 0 : Academic year 2019\/20 before COVID-19\n# 1 : Academic year 2019\/20 during COVID-19\n# 2 : Academic year 2020\/21 during COVID-19\nengagement_cw['covid_phase'] = engagement_cw.cw.apply(lambda x: 0 if x < 10 else (2 if x > 35 else (1 if ((x>=10) & (x <=25)) else -1)))\n\n\n###### Merge all dataframes to one big dataframe ######\nall_data = engagement_cw.merge(products_info[['lp_id', 'product_name', 'primary_function_main', 'primary_function_sub']], on='lp_id')\nall_data = all_data.merge(districts_info, on='district_id')","01a15c1a":"###### us_covid19_daily ######\n\nus_covid = pd.read_csv(\"..\/input\/covid19-in-usa\/us_covid19_daily.csv\")\nus_covid['date'] = pd.to_datetime(us_covid.date, format = '%Y%m%d')\nus_covid['cw'] = pd.DatetimeIndex(us_covid['date']).week\n\nus_covid = us_covid.sort_values(by='date')\nus_covid['new_cases'] = us_covid['positive'].diff()\n\nus_covid = us_covid.groupby('cw')[['new_cases']].mean().reset_index(drop=False)\n\n# Visualize\nvirtual_classroom_lp_id = products_info[products_info.primary_function_sub == 'Virtual Classroom'].lp_id.unique()\n\nengagement_sum = engagement_cw[engagement_cw.lp_id.isin(virtual_classroom_lp_id)].groupby(['cw', 'district_id']).pct_access.sum().to_frame().reset_index()\n\n# visualize \nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(16, 6))\ntemp = engagement_sum.groupby('cw').pct_access.mean().to_frame().reset_index(drop=False)\nsns.lineplot(x=temp.cw, y=temp.pct_access, label=f'Virtual Classroom pct_access', color= lp_palette1[0], legend=False)\nax.set_ylim([0, 100])  \nax.set_xlim([1, 53])  \n\nax2 = ax.twinx()\nsns.lineplot(x=us_covid.cw, y=us_covid.new_cases, ax=ax2, color= lp_palette1[1], label = 'Avg. Weekly New Covid Cases', legend=False)\nax2.set_ylim([0, 200000])  \n\n# https:\/\/www.mykidstime.com\/school\/here-are-the-school-holidays-2019\/\n# https:\/\/www.edarabia.com\/school-holidays-united-states\/\n# Mid Winter Break\nax.add_patch(Rectangle((7.5, 0), 1, 100, fill=True, alpha=0.2, color='Grey', lw=0))\nax.annotate('Mid Winter Break', xy=(8, 60), fontsize=14, color='black', rotation=90, va='center', ha='center')\n\n# Spring Break\nax.add_patch(Rectangle((16.5, 0), 1, 100, fill=True, alpha=0.2, color='Grey', lw=0))\nax.annotate('Spring Break', xy=(17, 60), fontsize=14, color='black', rotation=90, va='center', ha='center')\n\n# Summer Break\nax.add_patch(Rectangle((25.5, 0), 7, 100, fill=True, alpha=0.2, color='Grey', lw=0))\nax.annotate('Summer Break', xy=(29, 60), fontsize=14, color='black', rotation=90, va='center', ha='center')\n\n# Thanksgiving\nax.add_patch(Rectangle((47.5, 0), 1, 100, fill=True, alpha=0.2, color='Grey', lw=0))\nax.annotate('Thanksgiving', xy=(48, 60), fontsize=14, color='black', rotation=90, va='center', ha='center')\n\n# Christmas\nax.add_patch(Rectangle((51.5, 0), 3, 100, fill=True, alpha=0.2, color='Grey', lw=0))\nax.annotate('Christmas', xy=(52.5, 60), fontsize=14, color='black', rotation=90, va='center', ha='center')\n\nax.set_xlabel('Calendar Week 2020')\nax.xaxis.set_major_locator(MultipleLocator(5))\nax.set_ylabel('Percentage of U.S. Students \\nwith At Least One Page-Load Event \\nof a Virtual Classroom Product [%]', color=lp_palette1[0])\nax.tick_params(axis='y', colors = lp_palette1[0])\n\nax2.set_ylabel('Average Daily New Covid-19 Cases', color=lp_palette1[1])\nax2.tick_params(axis='y', colors = lp_palette1[1])\n\nplt.show()","f5da14ab":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(14, 6))\n\npalette ={\"Content Creation & Curation\": get_lp_palette(8)[0], \n          \"Learning Management Systems (LMS)\": get_lp_palette(8)[1], \n          \"Sites, Resources & Reference\": lp_green,  \n          \"Virtual Classroom\": get_lp_palette(8)[2], \n         \"Online Course Providers & Technical Skills Development\": get_lp_palette(8)[3], \n         \"Other\" : lp_grey, \n         }\n\ntemp = all_data.groupby(['lp_id','covid_phase', ])[['pct_access']].mean().reset_index(drop=False)\ntemp = temp.pivot(index='lp_id', columns='covid_phase').pct_access.fillna(0)\ntemp = temp.merge(products_info[['lp_id', 'product_name', 'primary_function_sub']], on='lp_id')\ntemp = temp.sort_values(by=2, ascending=False).head(5)\n\nsns.barplot(x=\"product_name\", y=2, hue=\"primary_function_sub\",data=temp, palette=palette, ax=ax[0])\nax[0].get_legend().remove()\nax[0].set_xlabel('Product Name')\nax[0].set_ylabel('Average Weekly Percentage of Students \\nthat Have At Least 1 Page-Load Event \\nof the Product [%]')\nfor tick in ax[0].get_xticklabels():\n    tick.set_rotation(45)\n    \n    \ntemp = all_data.groupby(['lp_id','covid_phase', ])[['engagement_index']].mean().reset_index(drop=False)\ntemp = temp.pivot(index='lp_id', columns='covid_phase').engagement_index.fillna(0)\ntemp = temp.merge(products_info[['lp_id', 'product_name', 'primary_function_sub']], on='lp_id')\ntemp = temp.sort_values(by=2, ascending=False).head(5)\nsns.barplot(x=\"product_name\", y=2, hue=\"primary_function_sub\",data=temp, palette=palette, ax=ax[1])\nax[1].get_legend().remove()\nax[1].set_xlabel('Product Name')\nax[1].set_ylabel('Average Weekly Total Page-Load Events \\nper 1000 Students of the Product')\nfor tick in ax[1].get_xticklabels():\n    tick.set_rotation(45)\n    \ncustom_lines = [Line2D([0], [0], color=lp_green, lw=4),\n                Line2D([0], [0], color=get_lp_palette(8)[0], lw=4),\n                Line2D([0], [0], color=get_lp_palette(8)[1], lw=4),\n                Line2D([0], [0], color=get_lp_palette(8)[2], lw=4),\n                Line2D([0], [0], color=get_lp_palette(8)[3], lw=4),\n                Line2D([0], [0], color=lp_grey, lw=4),\n               ]\n\nf.legend(custom_lines, \n         [\"Sites, Resources & Reference\", \"Content Creation & Curation\", \"Learning Management Systems (LMS)\",  \"Virtual Classroom\", \"Online Course Providers & Technical Skills Development\", \"Other\"],\n        bbox_to_anchor=(0.5, 0))\n\n\nplt.suptitle('Top 5 Most Popular Products in Academic Year 2020\/21')\nplt.tight_layout()\nplt.show()","be866147":"temp = all_data.groupby(['covid_phase', 'primary_function_sub'])['pct_access', 'engagement_index'].mean().reset_index(drop=False)\n\ntemp.covid_phase = temp.covid_phase.astype(str)\ntemp = temp.pivot(index='primary_function_sub', columns='covid_phase')[['pct_access', 'engagement_index']].fillna(0)\n\ntemp.columns = [\"_\".join(a) for a in temp.columns.to_flat_index()]\n\ntemp['pct_access_delta'] = temp['pct_access_2'] - temp['pct_access_0']\ntemp['engagement_index_delta'] = temp['engagement_index_2'] - temp['engagement_index_0']\ntemp=temp.reset_index(drop=False)\n\nf, ax = plt.subplots(nrows=1, ncols=2, figsize=(20, 10))\n\ndf = temp.sort_values(by='pct_access_delta', ascending=False)\nsns.barplot(data=df, x='pct_access_delta', y='primary_function_sub', palette=get_lp_palette(len(df)), ax=ax[0])\nax[0].set_xlabel('Change in Average Weekly Percentage of Students \\nthat Have At Least 1 Page-Load Event \\nof the Primary Sub-Function [%]')\nax[0].set_ylabel('')\n\ndf = temp.sort_values(by='engagement_index_delta', ascending=False)\nsns.barplot(data=df, x='engagement_index_delta', y='primary_function_sub', palette=get_lp_palette(len(df)), ax=ax[1])\nax[1].set_xlabel('Change in Average Weekly Total Page-Load Events \\nper 1000 Students of the Primary Sub-Function')\nax[1].set_ylabel('')\n\nplt.suptitle('Change in Engagement of Primary Sub-Functions between Q1 2020 and Academic Year 2020\/21')\nplt.tight_layout()\nplt.show()","7f449588":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))\n\nfor i, function in enumerate(['Learning Management Systems (LMS)', 'Online Course Providers & Technical Skills Development']):\n    temp = all_data[all_data.primary_function_sub == function].groupby(['covid_phase', 'product_name'])['pct_access', 'engagement_index'].mean().reset_index(drop=False)\n\n    temp.covid_phase = temp.covid_phase.astype(str)\n    temp = temp.pivot(index='product_name', columns='covid_phase')[['pct_access', 'engagement_index']].fillna(0)\n\n    temp.columns = [\"_\".join(a) for a in temp.columns.to_flat_index()]\n\n    temp['pct_access_delta'] = temp['pct_access_2'] - temp['pct_access_0']\n    temp['engagement_index_delta'] = temp['engagement_index_2'] - temp['engagement_index_0']\n    temp=temp.reset_index(drop=False)\n    df = temp.sort_values(by='pct_access_delta', ascending=False)\n\n    sns.barplot(data=df, x='pct_access_delta', y='product_name', palette=get_lp_palette(len(df)), ax=ax[i])\n    ax[i].set_title(function)\n    ax[i].set_xlabel('Change in Average Weekly Percentage of Students \\nthat Have At Least 1 Page-Load Event \\nof the Product [%]')\n    ax[i].set_ylabel('')\n\n\nplt.suptitle('Change in Engagement by Primary Sub-Function between Q1 2020 and Academic Year 2020\/21')\n\nplt.tight_layout()\nplt.show()","ddef5db7":"def calculate_pedagogical_experience_index(covid_phase, all_data, districts_info):\n    \"\"\"\n    Description:\n        Calculates the Digital Pedagogical Experience Index for a given timeframe (covid_phase) in 2020.\n        \n    Params:\n        covid_phase: Integer between 0 and 2 describing pandemic phase in 2020\n            0 : Academic year 2019\/20 before COVID-19\n            1 : Academic year 2019\/20 during COVID-19\n            2 : Academic year 2020\/21 during COVID-19\n\n    Returns:\n        districts_info\n    \"\"\"\n    \n    df = all_data[all_data.covid_phase == covid_phase].drop('covid_phase', axis=1).reset_index(drop=True)\n\n    temp = df[df.primary_function_sub == 'Virtual Classroom'].groupby(['district_id', 'product_name']).pct_access.mean().to_frame().reset_index(drop=False)\n    temp = temp.groupby('district_id').pct_access.sum().sort_values(ascending=False).to_frame().reset_index(drop=False)\n    temp.columns = ['district_id', f'pct_access_vc_{covid_phase}']\n    districts_info = districts_info.merge(temp, on='district_id')\n\n    temp = df[(df.product_name == 'Canvas') | (df.primary_function_sub == 'Learning Management Systems (LMS)')].groupby(['district_id', 'product_name']).pct_access.mean().to_frame().reset_index(drop=False)\n    temp = temp.groupby('district_id').pct_access.sum().sort_values(ascending=False).to_frame().reset_index(drop=False)\n    temp.columns = ['district_id', f'pct_access_lms_{covid_phase}']\n    districts_info = districts_info.merge(temp, on='district_id')\n\n    temp = df[df.product_name == 'YouTube'].groupby(['district_id']).pct_access.mean().to_frame().reset_index(drop=False)\n    temp.columns = ['district_id', f'pct_access_youtube_{covid_phase}']\n    districts_info = districts_info.merge(temp, on='district_id')\n\n    districts_info[f'digital_pedagogical_experience_index_{covid_phase}'] = districts_info[f'pct_access_vc_{covid_phase}'] + districts_info[f'pct_access_lms_{covid_phase}'] + districts_info[f'pct_access_youtube_{covid_phase}'] \n\n    return districts_info\n\ndistricts_info = calculate_pedagogical_experience_index(1, all_data, districts_info)\ndistricts_info = calculate_pedagogical_experience_index(2, all_data, districts_info)\n\n\n\n### Visualize ###\n\n# Initialise the spider plot\nfig = plt.figure(figsize=(6,6))\nax = fig.add_subplot(111, polar=True)\n\n# Set data\ndf = districts_info[['district_id', 'pct_access_vc_1', 'pct_access_lms_1',  'pct_access_youtube_1',]]\ndf.columns = ['district_id', 'Virtual\\nClassroom', 'LMS', 'Supplementary\\nVideo Materials',] \n\n# number of variable\ncategories=list(df)[1:]\nN = len(categories)\n#################################################################### \nvalues=df[df.district_id == 1904].reset_index(drop=True).loc[0].drop('district_id').values.flatten().tolist()\nvalues += values[:1]\n \nangles = [n \/ float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]\nax.plot(angles, values, lp_green, linewidth=1, linestyle='solid', label='District 1904')\nax.fill(angles, values, lp_green, alpha=0.1)\n\n#################################################################### \nvalues=df[df.district_id == 7457].reset_index(drop=True).loc[0].drop('district_id').values.flatten().tolist()\nvalues += values[:1]\n \nangles = [n \/ float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]\nax.plot(angles, values, lp_blue, linewidth=1, linestyle='solid', label='District 7457')\nax.fill(angles, values, lp_blue, alpha=0.1)\n\n#################################################################### \n\n# Show the graph\nplt.xticks(angles[:-1], categories)#, color='grey')#, size=8)\nax.set_rlabel_position(180)\n\nplt.suptitle('Example Comparison of Digital Pedagogical Experiences between Two Districts')\nplt.ylim(0,70)\nplt.legend()\nplt.show()","76f86041":"###### Statewise demographic data ######\n\n# Wealth\nus_states = pd.read_csv(\"..\/input\/covid19-state-data\/COVID19_state.csv\")\nus_states['State'] = us_states['State'].replace(us_state_abbrev)\nus_states = us_states[['State', 'Gini', 'Income', 'GDP']]\nus_states.columns = ['state', 'gini', 'income', 'gdp']\n\n# Broadband access\nbroadband_access = pd.read_csv(\"..\/input\/us-broadband-availability\/broadband_access.csv\")\nbroadband_access = broadband_access[['state_abr', 'no_comp', 'no_internet']]\nbroadband_access = broadband_access.groupby('state_abr').mean().reset_index(drop=False)\nbroadband_access.columns = ['state', 'no_comp', 'no_internet']\n\n# Ethnicity\ndemographic_data = pd.read_csv(\"..\/input\/us-census-demographic-data\/acs2017_county_data.csv\")\ndemographic_data = demographic_data[['State', 'Hispanic', 'Black']]\ndemographic_data['State'] = demographic_data['State'].replace(us_state_abbrev)\ndemographic_data = demographic_data.groupby('State').mean().reset_index(drop=False)\ndemographic_data.columns = ['state', 'Hispanic', 'Black']\ndemographic_data['pct_black\/hispanic_state'] = demographic_data['Hispanic'] + demographic_data['Black']\n\n\n# https:\/\/www.edweek.org\/leadership\/map-coronavirus-and-school-closures-in-2019-2020\/2020\/03\n# https:\/\/www.edweek.org\/leadership\/map-where-are-schools-closed\/2020\/07\n\nus_state_policy_array = [\n    ['AL', 'ordered closed', 'no order in effect'],\n    ['AK', 'ordered closed', 'no order in effect'],\n    ['AS', 'ordered closed', 'no order in effect'],\n    ['AZ', 'ordered closed', 'some grades ordered open'],\n    ['AR', 'ordered closed', 'ordered open (full-time)'],\n    ['CA', 'recommended closed', 'no order in effect'],\n    ['CO', 'ordered closed', 'no order in effect'],\n    ['CT', 'ordered closed', 'no order in effect'],\n    ['DE', 'ordered closed', 'partial closure in effect'],\n    ['DC', 'ordered closed', 'partial closure in effect'],\n    ['FL', 'recommended closed', 'ordered open (full-time)'],\n    ['GA', 'ordered closed', 'no order in effect'],\n    ['GU', 'ordered closed', 'no order in effect'],\n    ['HI', 'ordered closed', 'partial closure in effect'],\n    ['ID', 'recommended closed', 'no order in effect'],\n    ['IL', 'ordered closed', 'no order in effect'],\n    ['IN', 'ordered closed', 'no order in effect'],\n    ['IA', 'ordered closed', 'ordered open (full-time)'],\n    ['KS', 'ordered closed', 'ordered open (full-time)'],\n    ['KY', 'recommended closed', 'no order in effect'],\n    ['LA', 'ordered closed', 'no order in effect'],\n    ['ME', 'recommended closed', 'no order in effect'],\n    ['MD', 'ordered closed', 'no order in effect'],\n    ['MA', 'ordered closed', 'ordered open (full-time)'],\n    ['MI', 'ordered closed', 'no order in effect'],\n    ['MN', 'ordered closed', 'no order in effect'],\n    ['MS', 'ordered closed', 'no order in effect'],\n    ['MO', 'ordered closed', 'no order in effect'],\n    ['MT', 'n\/a', 'no order in effect'],\n    ['NE', 'ordered closed', 'no order in effect'],\n    ['NV', 'ordered closed', 'no order in effect'],\n    ['NH', 'ordered closed', 'ordered open (part-time)'],\n    ['NJ', 'ordered closed', 'no order in effect'],\n    ['NM', 'ordered closed', 'ordered open (part-time)'],\n    ['NY', 'ordered closed', 'no order in effect'],\n    ['NC', 'ordered closed', 'ordered open (part-time)'],\n    ['ND', 'ordered closed', 'no order in effect'],\n    ['MP', 'ordered closed', 'no order in effect'],\n    ['OH', 'ordered closed', 'no order in effect'],\n    ['OK', 'ordered closed', 'no order in effect'],\n    ['OR', 'ordered closed', 'ordered open (part-time)'],\n    ['PA', 'ordered closed', 'no order in effect'],\n    ['PR', 'ordered closed', 'partial closure in effect'],\n    ['RI', 'ordered closed', 'no order in effect'],\n    ['SC', 'ordered closed', 'ordered open (full-time)'],\n    ['SD', 'recommended closed', 'no order in effect'],\n    ['TN', 'recommended closed', 'no order in effect'],\n    ['TX', 'ordered closed', 'ordered open (full-time)'],\n    ['UT', 'ordered closed', 'no order in effect'],\n    ['VT', 'ordered closed', 'no order in effect'],\n    ['VI', 'ordered closed', 'no order in effect'],\n    ['VA', 'ordered closed', 'no order in effect'],\n    ['WA', 'ordered closed', 'ordered open (part-time)'],\n    ['WV', 'ordered closed', 'ordered open (full-time)'],\n    ['WI', 'ordered closed', 'no order in effect'],\n    ['WY', 'n\/a', 'no order in effect'],\n]\n\n# Create the pandas DataFrame\nus_state_policy = pd.DataFrame(us_state_policy_array, columns = ['state', 'policy_AY1920', 'policy_AY2021'])\n\n\n# Merge districts_info\ndistricts_info = districts_info.merge(us_state_policy, on='state')\ndistricts_info = districts_info.merge(us_states, on='state')\ndistricts_info = districts_info.merge(broadband_access, on='state')\ndistricts_info = districts_info.merge(demographic_data, on='state')\n\ndistricts_info = districts_info[['district_id', 'state', 'policy_AY1920', 'policy_AY2021',\n                   'pct_black\/hispanic', 'pct_black\/hispanic_state', \n                   'gini', 'income', 'gdp', \n                   'no_comp', 'no_internet', \n                                'digital_pedagogical_experience_index_1', 'digital_pedagogical_experience_index_2']]","be458e9c":"cols = [c for c in districts_info.columns if c not in ['district_id', 'state', 'policy_AY1920', 'policy_AY2021','digital_pedagogical_experience_index_2']]\ncorrmat = districts_info[cols].corr()\n# Visualize\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(10, 10))\n\nsns.heatmap(corrmat, annot=True, mask=np.triu(corrmat), vmin=-1, vmax=1, linewidths=1, cmap=lp_cmap2,  fmt='.1f')\nlabels = ['Ethnicity: % Black\/Hispanic (District)', 'Ethnicity: % Black\/Hispanic (State)', 'Wealth: Gini Coef. (State)',\n       'Wealth: Income (State)', 'Wealth: GDP (State)', 'Tech: No Computer Access (State)', 'Tech: No Internet Access (State)',\n       'Digital Pedagogical Experience Index']\nax.set_xticklabels(labels)\nax.set_yticklabels(labels)\nax.add_patch(Rectangle((0, 7), 7, 1, fill=False, alpha=1, color=lp_grey, lw=5))\n\nax.set_title('Correlation of Demographic Factors with Digital Pedagogical Experience Index \\nfor Academic Year 2019\/20 After COVID-19 Outbreak')\nplt.show()","99d2dff6":"x_list = ['pct_black\/hispanic', 'no_internet', 'income']\nx_label = ['Perc Black\/Hispanic', 'No Internet Access', 'Income',]\nvar_y = 'digital_pedagogical_experience_index_1'\n\nf, ax = plt.subplots(nrows=1, ncols=len(x_list), figsize=(15, 5))\n\nfor i, var_x in enumerate(x_list):\n\n    sns.scatterplot(data=districts_info, y=var_y, x=var_x, palette=get_lp_palette(2), ax=ax[i], marker='.', color=lp_blue)\n\n    x=districts_info[var_x]\n    y=districts_info[var_y]\n\n    z = np.polyfit(x, y, 1)\n    p = np.poly1d(z)\n    ax[i].plot(x,p(x),\":\", color=lp_green, linewidth=1)\n    ax[i].set_ylabel('Digital Pedagogical Experience Index')\n    ax[i].set_xlabel(x_label[i])\nplt.suptitle('Correlation Details for Digital Pedagogical Experience Index in Academic Year 2019\/20 After COVID-19 Outbreak')\nplt.tight_layout()\nplt.show()","063fc770":"f, ax = plt.subplots(nrows=1, ncols=1, figsize=(8, 8))\n\nsns.scatterplot(data=districts_info, x='digital_pedagogical_experience_index_1', y='digital_pedagogical_experience_index_2', hue='policy_AY2021',                 \n                palette= [lp_grey,  lp_green, lp_turquoise, lp_blue, 'olivedrab'],\n                linewidth=0.5, s=50)\n\nax.plot([0, 150], [0, 150], 'k--')\nax.annotate('Improvement', (10, 130), fontsize=16)\nax.annotate('Decline', (120, 10), fontsize=16)\n\nax.set_ylim([0, 150])\nax.set_xlim([0, 150])\nax.legend(loc='upper right' )\nax.set_xlabel('Digital Pedagogical Experience Index \\nin Academic Year 2019\/20 After COVID-19 Outbreak')\nax.set_ylabel('Digital Pedagogical Experience Index \\nin Academic Year 2020\/21')\nax.set_title('Change in Digital Pedagogical Experience Index After Summer Break')\nplt.tight_layout()\nplt.show()","3f874d2c":"# Visualize\nf, ax = plt.subplots(nrows=1, ncols=2, figsize=(24, 10))\n\ncols = [c for c in districts_info.columns if c not in ['district_id', 'state', 'policy_AY1920', 'policy_AY2021',\n                                                       #'pct_black\/hispanic', \n                                                       'pct_black\/hispanic_state', \n                                                       'gini',  'gdp', \n                                                       #'income','no_comp', 'no_internet',\n                                                        #'digital_pedagogical_experience_index_1',\n                                                       'digital_pedagogical_experience_index_2']]\ncorrmat = districts_info[cols].corr()\nsns.heatmap(corrmat, annot=True, mask=np.triu(corrmat), vmin=-1, vmax=1, linewidths=1, cmap=lp_cmap2,  fmt='.1f', ax=ax[0])\n\ncols = [c for c in districts_info.columns if c not in ['district_id', 'state', 'policy_AY1920', 'policy_AY2021',\n                                                       #'pct_black\/hispanic', \n                                                       'pct_black\/hispanic_state',\n                                                       'gini',  'gdp', \n                                                       #'income','no_comp', 'no_internet',\n                                                        'digital_pedagogical_experience_index_1', \n                                                       #'digital_pedagogical_experience_index_2'\n                                                      ]]\ncorrmat = districts_info[cols].corr()\nsns.heatmap(corrmat, annot=True, mask=np.triu(corrmat), vmin=-1, vmax=1, linewidths=1, cmap=lp_cmap2,  fmt='.1f', ax=ax[1])\n\nlabels = ['Ethnicity: % Black\/Hispanic (District)', \n       'Wealth: Income (State)', 'Tech: No Computer Access (State)', 'Tech: No Internet Access (State)',\n       'Digital Pedagogical Experience Index']\n\n\nax[1].add_patch(Rectangle((2, 4), 2, 1, fill=False, alpha=1, color=lp_grey, lw=5))\n\nfor i in range(2):\n    ax[i].set_xticklabels(labels)\n    ax[i].set_yticklabels(labels)\n    \nax[0].set_title('For Academic Year 2019\/20 After COVID-19 Outbreak')\nax[1].set_title('For Academic Year 2020\/21')\nplt.suptitle('Correlation of Demographic Factors with Digital Pedagogical Experience Index')\n\n\nplt.tight_layout()\nplt.show()","bfe65b09":"\n#all_data = all_data.merge(us_state_policy, on='state')\n\n# Visualize\nf, ax = plt.subplots(nrows=1, ncols=2, figsize=(12, 5))\n\nsns.countplot(data=us_state_policy, y='policy_AY1920', palette=get_lp_palette(3), ax=ax[0])\nax[0].set_title('Number of States Where Schools Were \\nRequired to Be Closed for the Spring 2020')\n\nsns.countplot(data=us_state_policy, y='policy_AY2021', palette=get_lp_palette(5), ax=ax[1])\nax[1].set_title('Number of States Where Schools Were \\nRequired to Be Open for the 2020-21 School Year')\n\nfor i in range(2):\n    ax[i].set_ylabel('')\n    ax[i].set_xlim([0, 50])\n\nplt.tight_layout()\nplt.show()","06e69fe2":"def visualize_engagement(_lp_id):\n\n    f, ax = plt.subplots(nrows=1, ncols=1, figsize=(12, 4))\n\n    temp_pct_access = engagement_cw[engagement_cw.lp_id == _lp_id].groupby(['cw']).pct_access.mean().to_frame().reset_index()\n    sns.lineplot(x=temp_pct_access.cw, y=temp_pct_access.pct_access, label=_lp_id, color= lp_palette1[0], legend=False)\n\n    ax.set_ylim([0, 100])  \n    ax.set_xlim([1, 53])  \n\n    ax2 = ax.twinx()\n    temp_engagement_index = engagement_cw[engagement_cw.lp_id == _lp_id].groupby(['cw']).engagement_index.mean().to_frame().reset_index()\n    sns.lineplot(x=temp_engagement_index.cw, y=temp_engagement_index.engagement_index, label=_lp_id, color= lp_palette1[1], ax=ax2, legend=False)\n\n    ax.set_xlabel('Calendar Week 2020')\n    ax.set_ylabel('Percentage of U.S. Students \\nwith At Least One Page-Load Event [%]', color=lp_palette1[0])\n    ax.tick_params(axis='y', colors = lp_palette1[0])\n\n    ax2.set_ylabel('Engagement_index', color=lp_palette1[1])\n    ax2.tick_params(axis='y', colors = lp_palette1[1])\n    ax.set_title(f'Average Engagement for {products_info[products_info.lp_id == _lp_id].product_name.values[0]} in 2020')\n    plt.show()\n    \nvisualize_engagement(32213)","a7c43699":"# Discussion\n\nThe effects of the COVID-19 pandemic and its associated restrictions on movement and closing of educational institutions and workplaces have shown that\nwithout internet access it is impossible to participate in a big part of social and economic life. During our experiments we found that the quality of digital educational experience was correlated to the state-level income and also its internet access in the academic year 2019\/20 after the COVID-19 outbreak. However, we also found that this correlation was not visible anymore after the 2020 summer break although schools were partially ordered open across the U.S.. We found that this might be related to the fact that some school districts provided their children with the neccessary technological equipment to be able to participate in Distance Learning.\n\nTeachers have an expression: *Maslow before Bloom* [7]. While Bloom, a psychologist, developed \"Bloom's Taxonomy\" which orders the complexity of learning outcomes, Maslow's \"Hierarchy of Needs\" theorizes that humans have a prioritized set of needs that must be fulfilled in order to achieve their full potential. It means that **before children are able to learn complex concepts, their firstly must have their most fundamental needs met.** Therefore, children are unlikely to be able to engage in learning without proper nourishment and shelter.[7]\n\nThe joke that is depicted in the introductory meme which gained popularity with the rise of the pandemic but has been relevant long before contains a lot of truth: Besides the other basic human needs such as Physiological Needs or Safety and Security, Internet Access plays an important role. Treating Internet Access as the basis for everything else is of course exaggerated. \nHowever, in the context of education and the explored data it can be argued that the supply of internet access and hardware devices to students that otherwise would have no possibility to join distance learning programs is a basic requirement.\nSecuring the supply of internet access and related hardware to all students is of course not the solution to all educational problems. But, conversely it should be very clear, that not doing so excludes an already vulnerable group of students from learning opportunities altogether.\n\nIn times of pandemic and physical contact restrictions, the thesis that internet access is a basic need that needs to be satisfied proves true and should urgently be considered before sending children into distance learning. As the data from the school year 2020\/21 has shown, this recommendation has been followed by several school districts, which could be detected by the change of correlation between DPEI and No internet access variable. This should be considered as best practice by policy makers in the future to help creating a equitable foundation for distance learning.\n\n\n# References\n[1] Perry, L. B. (2018). Educational inequality in Australia. Committee for economic development of Australia.\n\n[2] Education Week (2020). [Map: Coronavirus and School Closures in 2019-2020](https:\/\/www.edweek.org\/leadership\/map-coronavirus-and-school-closures-in-2019-2020\/2020\/03)\n\n[3] Education Week (2020). [Map: Where Were Schools Required to Be Open for the 2020-21 School Year?](https:\/\/www.edweek.org\/leadership\/map-where-are-schools-closed\/2020\/07)\n\n[4] Lieberman, M. in Education Week (2020). [Why Students Still Can\u2019t Access Remote Learning: How Schools Can Help](https:\/\/www.edweek.org\/technology\/why-students-still-cant-access-remote-learning-how-schools-can-help\/2020\/09)\n\n[5] United Nations (2021). [Progress and Info SDG No. 4](https:\/\/sdgs.un.org\/goals\/goal4)\n\n[6] Li C. and Lalani F. in World Economic Forum (2020). [The COVID-19 pandemic has changed education forever. This is how ](https:\/\/www.weforum.org\/agenda\/2020\/04\/coronavirus-education-global-covid19-online-digital-learning\/)\n\n[7] Siddiqi J. and Wuori D. in EdNC (2020). [Perspective | Learning in the time of COVID: Maslow before Bloom](https:\/\/www.ednc.org\/perspective-learning-in-the-time-of-covid-maslow-before-bloom\/)","79161b1d":"## Exploratory Data Analysis\nIn this EDA, we will try to answer the following analysis questions with respect to educational experience:\n- What does distance learning look like?\n- Are there different types of distance learning?\n- Can we find indicators to evaluate the quality of the different types of distance learning?\n\nAccording to [1], the \u201cEducational experiences are the processes and interactions that occur in schools, such as classroom disciplinary climate, student-teacher relations, teacher expectations, pedagogical practices, and relations with peers.\u201d Therefore, we will explore the data from two different points of views: The relations with teachers and peers and the applied pedagogical practices.\n\n### Relations with Peers and Teachers\n\nIn 2020, COVID-19 forced us to practice social distancing, which led to the rise of video conferencing products. Many facets of our lives from business meetings, yoga practice, hanging out with friends suddenly were happening in some sort of video conference. In below figure, we can see that the same applies to education. With the rise of average daily new COVID-19 cases, the percentage of U.S. students with at least one page-load event of a virtual classroom product rises around calendar week 12 in 2020. ","15efd8e3":"# Experiments\n\nIn this section, we will evaluate how the newly defined metric to measure the quality of the pedagogical experience for distance learning relates to different demographic, socioeconomic, and geographic factors and how these change over the course of the pandemic.\n\n## Supplementary Datasets\n\nFor the following experiments the following supplementary datasets were used:\n* [US Census Demographic Data](https:\/\/www.kaggle.com\/muonneutrino\/us-census-demographic-data): Used for state-level ethnicity data (Hispanic and Black)\n* [US Broadband Availability](https:\/\/www.kaggle.com\/mmattson\/us-broadband-availability): Used for state-level connectivity data (Access to Computer, Access to Internet)\n* [COVID-19 State Data](https:\/\/www.kaggle.com\/nightranger77\/covid19-state-data): Used for state-level wealth data (Gini Coefficient, Income, GDP)\n* Created dataframe manually with information about state-level COVID-19 related school closure\/opening policies based on:\n    * https:\/\/www.edweek.org\/leadership\/map-coronavirus-and-school-closures-in-2019-2020\/2020\/03\n    * https:\/\/www.edweek.org\/leadership\/map-where-are-schools-closed\/2020\/07","8ab3e672":"Since we have already looked at products from the primary sub-function \u201cVirtual Classroom\u201d in the previous section, we will now focus on the latter two sub-functions. \nLooking at the products in both sub-functions the following findings emerge: Firstly, the LMS products Schoology and Google Classroom gained the most engagement. Also, the product Canvas is mainly responsible for the engagement gain in the sub-function \u201cOnline Course Providers & Technical Skills Development\u201d.","e428c83e":"## Experiment 1: Quality of Pedagogical Experience during Academic Year 2019\/20 after COVID-19 Outbreak\n\nFrom March 2020, most states ordered and a few states recommended schools to be closed for rest of the academic year 2019\/20 [2]. That means that for the timeframe between CW 10 and 25 we can assume that most students had to participate in distance learning. Below, the correlation matrix between various state-wise factors, such as ethnicity, wealth (Gini Coefficient,  Income, GDP), and technology access (No Computer Access, No Internet Access) is shown for this timeframe.\n\nFirstly, we can see that the DPEI does not correlate to the district level or state level ethnicity distribution. **However, we can see that the DPEI is correlated to the state-level wealth (mainly income) and the state-level technology access (mainly No Access to Internet).**","0cc393b5":"# Abstract\n\nOver the past decades significant progress has been made globally on the way to more equitable education. However, these achievements have been at stake since the outbreak of COVID-19 and the associated lockdowns and school closures that had been implemented to limit the spread of the disease. To measure the quality of digital educational experience and to uncover possible root causes for inequitable education, we have developed a metric called the Digital Pedagogical Experience Index based on the provided LearnPlatform dataset. This metric was then analysed for different timeframes in 2020 and explored together with state-level factors such as ethnicity, wealth and technology access. \n\nThe key findings are:\n- The quality of digital educational experience was correlated to the state-level income and also its internet access in the academic year 2019\/20 after the COVID-19 outbreak\n- This correlation was not visible anymore after the 2020 summer break although schools were partially ordered open across the U.S.. We assume that the reason for this is the fact that some school districts provided their children with the neccessary technological equipment to be able to participate in Distance Learning.\n\n*Maslow before Bloom* means that before children are able to learn complex concepts, their firstly must have their most fundamental needs met.\nIt is often joked about that access to WiFi has become a basic human need in our modern day and age. However, our analysis has shown that access to internet plays a key factor for successful Distance Learning. Providing children with the neccessary technological equipmentnshould be considered as best practice by policy makers in the future to help creating a equitable foundation for modern types of learning.\n\n![e38.png](attachment:1b0d44ac-20e0-4193-84ab-feb781fc5988.png)\n\n*Image Source: <a href=\"https:\/\/knowyourmeme.com\/photos\/1296258-hierarchy-of-needs-pyramid-parodies\">Know Your Meme<\/a>*","031f89f7":"Although, a lot of human interaction gets lost in video conferences, we could argue that providing  students the opportunity to participate in virtual classrooms enabled them to interact with their teachers and peers. **Therefore, the usage of a virtual classroom product could be an indicator for a good educational experience.**\n\nHowever, we can also see that only about 20% of U.S. students used a virtual classroom product  daily in the academic year 2019\/20 after the outbreak of COVID-19 and it only slightly increased to about 30% in the academic year 2020\/21. That would indicate that the majority of U.S. students did not have the opportunity to participate in virtual classrooms.\n\nIf we have a look at the top 5 most popular products in the academic year 2020\/21 by engagement, we can see that YouTube, an online video sharing platform, ranks third in both `pct_access` and `engagement_index`. \n","50b7777c":"## Experiment 2: Change in Quality of Pedagogical Experience after 2020 Summer Break\n\nFor the academic year 2020\/21 some states ordered schools to be opened for in-person education again [3]. However, the reality was that most schools opted for a hybrid learning model. That is why we analyze how the DPEI changed between the academic year 2019\/20 and the academic year 2020\/21.\n\nIn below figure, the DPEI in the academic year 2019\/20 after March 2020 and the DPEI for the academic year 2020\/21 is shown for each district and it is marked whether there was a state-level order. For some districts the DPEI decreased, which can be related to the fact that schools were offering in person education again. **However, for the majority of districts the DPEI increased for the academic year 2020\/21 although schools were opened again.**","236c2ff8":"Although the correlation between No Access to Computer and No Access to Internet is high, the higher correlation with No Access to Internet for the DPEI could be explained by the fact that internet resources can also be accessed via smartphones. Moreover, we can see that the state-level income is correlated to the state-level internet access. The detailed plots are shown below.","684d9ccf":"# Introduction\n\nBesides the covering of basic physical needs, education is the most important factor that decides how children's potential develops for the remainder of their life. Over the past decades significant progress has been made globally on the way to more equitable education, supporting a greater share of children from poorer households to receive a quality education and extend the years spend in school to increase the quality of the formal education per child. These achievements have been at stake since the outbreak of COVID-19 and the associated lockdowns and school closures that had been implemented to limit the spread of the disease.\n\n>\u201eThe pandemic is expected to lead to a reversal in recent progress towards equity. With the shift towards remote learning, those from the poorest households and other vulnerable groups are less equipped to participate and more likely to drop out permanently or for extended periods.\u201c ([Progress and Info SDG No. 4](https:\/\/sdgs.un.org\/goals\/goal4))\n\nEven before the pandemic a strong trend emerged in Online Learning formats, giving people with internet access the possibility to receive different kinds of further education or postgraduate training in a way that was not available before. This kind of Online Learning is commonly referred to as eLearning. eLearning is generally perceived as a positive tool that supports people to increase the quality of their education in different stages of their career [6]. Regularly, eLearning is not the only source of education but is used as a complementary source of education in so called blended learning approaches.\n\nWith the COVID-19 pandemic and the resulting lockdowns and school closures which had been implemented in most of the world, the requirement to provide education to students in a remote way on a large scale arose effectively overnight.\nIn contrast to eLearning, the concept of Distance Learning is focussing more on the distance between the a student and a teacher. In this case technology is needed to create a link between student and teacher.\n\nIt is expected that Distance Learning increases the dependency of children\u2019s educational outcomes on their social background or parents\u2019 household income and thus strengthens existing inequities for future generations based on those factors.\nAccording to [1] factors to measure **educational equity\/inequality can be broken down into three dimensions, that influence children\u2019s personal and academic development: Opportunities, Experiences and Outcomes.**\n\nFor our consideration, we will exclude the dimension Outcomes since relevant data (e.g. PISA test data) is not available yet. This dimension will probably be the most important factor for researchers and policy makers to use as reference to evaluate the effects of distance learning during lockdowns in retrospective.\nBased on the available data we will focus on the dimensions Opportunities and Experiences. Therefore, the total usage of distance learning tools during lockdowns and school closures is utilised to measure Opportunities and a metric will be derived by categorising the available tools to measure good Experiences for students using the available tools.","21742f2f":"Another interesting find is that the DPEI for the academic school year 2020\/21 has a positive correlation to the state-level No Internet Access which is unexpected and counter-intuitive at first. However, we found, we found that **in some states schools provided their students with Hotspots so they could participate in digital education [4] which could explain the improvement in engagement despite the quote of missing internet access.**","1c8c3324":"YouTube provides students the possibility to view prerecorded lessons. Although, teachers can present their lessons in a similar manner as in a video conference, the educational experience is different: By only providing prerecorded video lessons, students are only receiving unidirectional interactions instead of bi-directional interactions with their teachers and peers. However, the usage of YouTube can also be beneficial if virtual classroom lessons are recorded and then later provided for students to review. **Therefore, the usage of YouTube alone would be an indicator for a medium educational experience and the usage of YouTube in addition to the usage of virtual classroom products would be an indicator for good educational experience.**\n\n### Pedagogical Practices\n\nBy Taking a look at the primary sub-functions\u2019 products with the strongest change in engagement from before the pandemic compared to the academic year 2020\/21, we notice that the top 3 sub-functions are the same in both cases: Virtual Classroom, Learning Management Systems (LMS) and Online Course Providers & Technical Skills Development.","55c6cca0":"However, Canvas is in fact also an LMS product by the company Instructure. The LMS product was originally also named Instructure as it can be seen as a product in the LMS sub-function. Therefore, it can be assumed that Canvas should be assigned the sub-function LMS as well. Under this assumption, the primary sub-function \u201cOnline Course Providers & Technical Skills Development\u201d did not have a large engagement gain. Instead, we can see the importance of LMS products.\n\nAn LMS is a software product that helps teachers structure and organise their teaching materials. **Therefore, the usage of LMS products such as Schoology, Google Classroom or Canvas could be an indicator for a good educational experience.**\n\n## Digital Pedagogical Experience Index\n\nDuring the previous EDA, we mainly found three indicators for the quality of digital educational experiences. The first indicator is whether products from the primary sub-function \u201cVirtual Classroom\u201d was used. The second indicator is closely related to the first, as the usage of YouTube could be used alternatively or additionally to products from the primary sub-function \u201cVirtual Classroom\u201d. Lastly, we found that the usage of LMS products such as Schoology, Google Classroom or Canvas can be another indicator for a good educational experience.\n\nBelow an example is shown how districts can be compared using these three indicators. While  in district 1904 more than 60% of students were participating in virtual classrooms on a daily basis, in district 7457 less than 10% of students were participating in virtual classrooms. Additionally, the usage of supplementary video lessons were quite low in both districts. That means, that the lack of attendance in virtual classrooms in district 7457 was not compensated by alternative usage of YouTube but instead is seems like students had to take care of their own studies with little interactions with their teachers and peers. Also, we can see that the percentage of students using an LMS product on a daily basis was half of the percentage of district 1904 in district 7457. \nTherefore, we can assume that the quality of the educational experience was much better in district 1904 than in district 7457.","140075d2":"Based on the above findings, we will create a metric to measure the quality of the pedagogical experience for distance learning as the sum of the above three indicators. We will call this new metric the **Digital Pedagogical Experience Index (DPEI):** \n\n$\\text{DPEI} = \\sum \\text{% Virtual Classroom Products Usage} + \\text{% Supplementary Video Material Usage} + \\sum \\text{% LMS Products Usage}$","dc0288f0":"# Methodology\n\nThe objective of this section is to find a metric to measure the quality of the pedagogical experience for distance learning. To find such a metric, we will first explore the provided LearnPlatform dataset with regards to learning experiences. Then, we will build a metric based on the findings of the Exploratory Data Analysis (EDA).\n\n## LearnPlatform Dataset and Setup\nFor this challenge, we were provided a dataset by LearnPlatform. The dataset mainly contains the engagement data with 8417 unique educational tools of 233 school districts in 2020 in the USA.\n\nThe following **preprocessing** steps were conducted:\n- Remove districts with no state information \n- Remove districts with incomplete 2020 engagement data\n- Remove rows in engagement_data that is not in products_info (8417 unique products in engagement data, but only 369 unique products in `products_info`)\n- Clean values in \u2018Primary Essential Function\u2019 (make 'Sites, Resources & References' and 'Sites, Resources & Reference\u2019 into one )\n\nThe following **feature engineering** steps were conducted:\n- Split columns \u2018Primary Essential Function\u2019 into main and sub functions\n- Create new columns \u2018weekday\u2019, \u2018calendar_week\u2019 for engagement data\n- Filter only weekday data\n- Resample on weekly basis \n- Create new column \u201ccovid phase\u201d\n    - 0: school year 2019\/2020 before covid\n    - 1: school year 2019\/2020 under covid\n    - 2: school year 2020\/2021 under covid"}}