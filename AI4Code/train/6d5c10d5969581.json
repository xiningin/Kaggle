{"cell_type":{"26cfb37f":"code","e40893ff":"code","e89b6168":"code","920d72e7":"code","997da536":"code","94067f6a":"code","7a64f9c7":"code","6a468ac9":"code","76065fa8":"code","f654cf7c":"code","dd7938b8":"code","55502ce8":"code","8d35e5cf":"code","4d649afb":"markdown","27d79ac8":"markdown","1d61d7e6":"markdown","3ec48332":"markdown","87606f9b":"markdown","e14ce278":"markdown","c1b4cf84":"markdown","4dd0553e":"markdown","e5d84f24":"markdown","4b57f087":"markdown","3234c44c":"markdown","983141e0":"markdown"},"source":{"26cfb37f":"import os\nimport shutil\nimport zipfile\nimport matplotlib.pyplot as plt\n\nfrom keras import layers\nfrom keras import models\nfrom keras import optimizers\nfrom keras.preprocessing.image import ImageDataGenerator","e40893ff":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e89b6168":"shutil.rmtree('.\/dogs-vs-cats-small', ignore_errors=True)\nshutil.rmtree('.\/test1', ignore_errors=True)\nshutil.rmtree('.\/train', ignore_errors=True)","920d72e7":"folders = ['train', 'test1']\nfor folder in folders:\n    with zipfile.ZipFile('..\/input\/dogs-vs-cats\/' + folder + \".zip\", \"r\") as z:\n        z.extractall(\".\")","997da536":"original_dataset_dir = '.\/train'\nbase_dir = '.\/dogs-vs-cats-small'\nos.mkdir(base_dir)","94067f6a":"train_dir = os.path.join(base_dir, 'train')\nos.mkdir(train_dir)\nvalidation_dir = os.path.join(base_dir, 'validation')\nos.mkdir(validation_dir)\ntest_dir = os.path.join(base_dir, 'test')\nos.mkdir(test_dir)\n\ntrain_cats_dir = os.path.join(train_dir, 'cats')\nos.mkdir(train_cats_dir)\ntrain_dogs_dir = os.path.join(train_dir, 'dogs')\nos.mkdir(train_dogs_dir)\nvalidation_cats_dir = os.path.join(validation_dir, 'cats')\nos.mkdir(validation_cats_dir)\nvalidation_dogs_dir = os.path.join(validation_dir, 'dogs')\nos.mkdir(validation_dogs_dir)\ntest_cats_dir = os.path.join(test_dir, 'cats')\nos.mkdir(test_cats_dir)\ntest_dogs_dir = os.path.join(test_dir, 'dogs')\nos.mkdir(test_dogs_dir)","7a64f9c7":"fnames = ['cat.{}.jpg'.format(i) for i in range(1000)]\nfor fname in fnames:\n    src = os.path.join(original_dataset_dir, fname)\n    dst = os.path.join(train_cats_dir, fname)\n    shutil.copyfile(src, dst)\nfnames = ['cat.{}.jpg'.format(i) for i in range(1000, 1500)]\nfor fname in fnames:\n    src = os.path.join(original_dataset_dir, fname)\n    dst = os.path.join(validation_cats_dir, fname)\n    shutil.copyfile(src, dst)\nfnames = ['cat.{}.jpg'.format(i) for i in range(1500, 2000)]\nfor fname in fnames:\n    src = os.path.join(original_dataset_dir, fname)\n    dst = os.path.join(test_cats_dir, fname)\n    shutil.copyfile(src, dst)","6a468ac9":"fnames = ['dog.{}.jpg'.format(i) for i in range(1000)]\nfor fname in fnames:\n    src = os.path.join(original_dataset_dir, fname)\n    dst = os.path.join(train_dogs_dir, fname)\n    shutil.copyfile(src, dst)\nfnames = ['dog.{}.jpg'.format(i) for i in range(1000, 1500)]\nfor fname in fnames:\n    src = os.path.join(original_dataset_dir, fname)\n    dst = os.path.join(validation_dogs_dir, fname)\n    shutil.copyfile(src, dst)\nfnames = ['dog.{}.jpg'.format(i) for i in range(1500, 2000)]\nfor fname in fnames:\n    src = os.path.join(original_dataset_dir, fname)\n    dst = os.path.join(test_dogs_dir, fname)\n    shutil.copyfile(src, dst)","76065fa8":"model = models.Sequential()\nmodel.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3)))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(64, (3, 3), activation='relu'))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(128, (3, 3), activation='relu'))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(128, (3, 3), activation='relu'))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Flatten())\nmodel.add(layers.Dropout(0.5))\nmodel.add(layers.Dense(512, activation='relu'))\nmodel.add(layers.Dense(1, activation='sigmoid'))\n\nmodel.summary()","f654cf7c":"model.compile(loss='binary_crossentropy', optimizer=optimizers.RMSprop(lr=1e-4), metrics=['acc'])","dd7938b8":"train_datagen = ImageDataGenerator(\n    rescale=1. \/ 255,\n    rotation_range=40,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True, )\n\ntest_datagen = ImageDataGenerator(rescale=1. \/ 255)\n\ntrain_generator = train_datagen.flow_from_directory(\n    train_dir,\n    target_size=(150, 150),\n    batch_size=32,\n    class_mode='binary')\nvalidation_generator = test_datagen.flow_from_directory(\n    validation_dir,\n    target_size=(150, 150),\n    batch_size=32,\n    class_mode='binary')","55502ce8":"history = model.fit_generator(\n    train_generator,\n    steps_per_epoch=100,\n    epochs=100,\n    validation_data=validation_generator,\n    validation_steps=50)\nmodel.save('cats_and_dogs.h5')","8d35e5cf":"# \u53d6\u51fa\u6570\u636e\nacc = history.history['acc']\nval_acc = history.history['val_acc']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\nepochs = range(len(acc))\n\n# \u7cbe\u5ea6\nplt.plot(epochs, acc, 'bo', label='Training acc')\nplt.plot(epochs, val_acc, 'b', label='Validation acc')\nplt.title('Training and validation accuracy')\nplt.legend()\nplt.show()\n\n# \u635f\u5931\nplt.figure()\nplt.plot(epochs, loss, 'bo', label='Training loss')\nplt.plot(epochs, val_loss, 'b', label='Validation loss')\nplt.title('Training and validation loss')\nplt.legend()\nplt.show()","4d649afb":"### \u5c06\u732b\u7684\u7167\u7247\u5206\u4e3a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6","27d79ac8":"### \u5c06\u72d7\u7684\u7167\u7247\u5206\u4e3a\u8bad\u7ec3\u63a5\u3001\u6d4b\u8bd5\u96c6\u548c\u9a8c\u8bc1\u96c6","1d61d7e6":"### \u5355\u7eaf\u89e3\u538b\u6587\u4ef6","3ec48332":"### \u6253\u5370\u51fa\u5177\u4f53\u6709\u54ea\u4e9b\u6587\u4ef6","87606f9b":"### \u5220\u9664\u6587\u4ef6","e14ce278":"### \u56fe\u7247\u8bfb\u53d6","c1b4cf84":"### \u753b\u56fe","4dd0553e":"### \u5bfc\u5165\u4f9d\u8d56\u5305","e5d84f24":"### \u521b\u5efa\u6587\u4ef6\u5939\n\n\u5305\u62ec **\u8bad\u7ec3\u96c6**\u3001**\u9a8c\u8bc1\u96c6** \u548c **\u6d4b\u8bd5\u96c6** \u6587\u4ef6\u5939\uff0c\u5c06\u732b\u548c\u72d7\u7684\u7167\u7247\u5206\u522b\u533a\u5206\u7a7f\u521b\u5efa\u4e0d\u540c\u6587\u4ef6\u5939\u3002","4b57f087":"### \u7f16\u8bd1\u6a21\u578b","3234c44c":"### \u6784\u5efa\u6a21\u578b","983141e0":"### \u5206\u6279\u8bad\u7ec3\u6a21\u578b"}}