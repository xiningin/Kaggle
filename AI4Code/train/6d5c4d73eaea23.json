{"cell_type":{"5d793b80":"code","3976b941":"code","0bbae949":"code","a6ba80b2":"code","52b5e3e8":"code","ca243fa0":"code","fe542c8b":"code","ab9c6881":"code","63ed9df3":"code","e290a2d9":"markdown","1dc0378e":"markdown","6d7490e5":"markdown","a605d93e":"markdown","a45ef4c8":"markdown","f15b7539":"markdown","11282d96":"markdown"},"source":{"5d793b80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3976b941":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.style.use('bmh')\n","0bbae949":"df = pd.read_csv('\/kaggle\/input\/housesalesprediction\/kc_house_data.csv')\ndf.head()","a6ba80b2":"df.columns","52b5e3e8":"df.info()\n","ca243fa0":"print(df['price'].describe())\nplt.figure(figsize=(9, 8))\nsns.distplot(df['price'], color='g', bins=100, hist_kws={'alpha': 0.4});\nplt.savefig('price-dist.png')\n","fe542c8b":"# df['col_name'] = pd.to_numeric(df['col_name'], errors='coerce')\n\ndf_num = df.select_dtypes(include = ['float64', 'int64'])\nplt.figure(figsize=(9, 8))\ndf_num.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8);\nplt.savefig('int-column-dist.png')","ab9c6881":"df_num_corr = df_num.corr()['price'][:-1]\ngolden_features_list = df_num_corr[abs(df_num_corr) > 0.5].sort_values(ascending=False)\nprint(\"There are {} strongly correlated values with SalePrice:\\n{}\".format(len(golden_features_list), golden_features_list))","63ed9df3":"corr = df_num.drop('price', axis=1).corr()\nplt.figure(figsize=(12, 10))\nsns.heatmap(corr[(corr >= 0.5) | (corr <= -0.4)],\n            cmap='viridis', vmax=1.0, vmin=-1.0, linewidths=0.1,\n            annot=True, annot_kws={\"size\": 8}, square=True);\nplt.savefig('heatmap.png')","e290a2d9":"# Price Distributions","1dc0378e":"# Feature To Feature Relationships","6d7490e5":"# Integer Distributions","a605d93e":"# Correlations","a45ef4c8":"# Columns\/ Features","f15b7539":"# Read dataset","11282d96":"# QuicK look on the dataset"}}