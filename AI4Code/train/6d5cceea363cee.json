{"cell_type":{"ea75988a":"code","53f78867":"code","a8679187":"code","1eaaee7a":"code","cfe211d0":"code","b9c09b20":"code","837f1fa7":"code","de54bdcb":"code","b2f22d88":"code","9b468c6d":"code","a7ca5d5e":"code","7279fe05":"code","33f745a7":"code","770f3205":"code","0c4a7dce":"code","911fac35":"code","a4d675c5":"code","c802ca00":"code","d6eb4d16":"code","881b8c4d":"markdown","7da3be86":"markdown","63e3fd47":"markdown","bff7e143":"markdown","fdf86e63":"markdown","a571f6db":"markdown","59042bcf":"markdown","e8444e9b":"markdown","283a19ae":"markdown","03388c61":"markdown","9a388c32":"markdown","ff184138":"markdown","8b50fa5e":"markdown","2fe193fb":"markdown","12cabe1d":"markdown","202f51f1":"markdown","4119d777":"markdown"},"source":{"ea75988a":"#Importing libraries\n\nimport numpy as np  #Linear Algebra\nimport pandas as pd  #Data Processing\nimport seaborn as sns  #Visualization\nimport matplotlib.pyplot as plt\nimport sqlite3  ","53f78867":"path = \"..\/input\/\"  \ndatabase = path + 'database.sqlite'\nconn = sqlite3.connect(database)\nquery = \"SELECT * FROM sqlite_master WHERE type='table'\"\n\ntables = pd.read_sql_query(query,conn)\ntables","a8679187":"countries = pd.read_sql('SELECT *FROM Country', conn)\ncountries","1eaaee7a":"leagues = pd.read_sql(\"\"\"SELECT *\n                        FROM League\n                        JOIN Country ON Country.id = League.country_id;\"\"\", conn)\nleagues","cfe211d0":"teams = pd.read_sql('SELECT *FROM Team ORDER BY team_long_name', conn)\nteams.head()","b9c09b20":"matches_Spain = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Spain' \n                                ORDER by date\n                               ;\"\"\", conn)\n#matches.head() #It gives us first 5 matches in Spanish League in season 2008\/09\n\nmatches_Eng = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'England' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Ger = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Germany' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Por = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Portugal' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Italy = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Italy' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_France = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'France' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Bel = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Belgium' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Ned = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Netherlands' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Pol = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Poland' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Scot = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Scotland' \n                                ORDER by date\n                               ;\"\"\", conn)\n\nmatches_Swt = pd.read_sql(\"\"\"SELECT Match.id, \n                            Country.name AS country_name, \n                            League.name AS league_name, \n                            season, \n                            stage, \n                            date,\n                            HT.team_long_name AS  home_team,\n                            AT.team_long_name AS away_team,\n                            home_team_goal, \n                            away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Switzerland' \n                                ORDER by date\n                               ;\"\"\", conn)","837f1fa7":"matches = [matches_Spain,matches_Eng,matches_Italy,matches_Ger,matches_Por,matches_France,matches_Swt,matches_Pol,matches_Scot,matches_Ned,matches_Bel]","de54bdcb":"def goal_diff(fun):\n    for i in fun:\n        i['goal_diff'] = i['home_team_goal']-i['away_team_goal']\n        print(i.tail())\n\ngoal_diff(matches)   \n  ","b2f22d88":"def des_stats(fun):\n    for i in fun:\n        print(i.country_name[0])\n        print('')\n        print('Mean')\n        print('Home Goals =',i['home_team_goal'].mean())\n        print('Away Goals =',i['away_team_goal'].mean())\n        print('Goal Diff =',i['goal_diff'].mean())\n        print('')\n        print('Standard Deviation')\n        print('Home Goals =',i['home_team_goal'].std())\n        print('Away Goals =',i['away_team_goal'].std())\n        print('Goal Diff =',i['goal_diff'].std())\n        print('\\n')\n        ","9b468c6d":"des_stats(matches)","a7ca5d5e":"def result(fun):\n    for i in fun:\n        i['win'] = ((i['goal_diff']>0)*1)\n        i['draw'] = ((i['goal_diff']==0)*1)\n        i['lose'] = ((i['goal_diff']<0)*1)\n        print(i.country_name[0])\n        print('')\n        print('win =' ,(i['win'].mean())*100,'%')\n        print('draw =',(i['draw'].mean())*100,'%')\n        print('lose =',(i['lose'].mean())*100,'%')\n        print('\\n')","7279fe05":"result(matches)","33f745a7":"list_win = []\nfor i in matches:\n    list_win.append(i['win'].mean())\n#print(list_win) \n\n\nlist_draw = []\nfor i in matches:\n    list_draw.append(i['draw'].mean())\n#print(list_draw)\n\nlist_lose = []\nfor i in matches:\n    list_lose.append(i['lose'].mean())\n    #print(list_lose)\n\nlist_countries = []\n\nfor i in matches:\n    list_countries.append(i['country_name'][0])\n    \n#print(list_countries)    ","770f3205":"plt.figure(figsize = (15,7))\n\nx = np.arange(len(list_win))\n\nplt.bar(x,list_win,color='green', width = 0.5,label = 'Win')\nplt.bar(x,list_draw,color= 'orange',bottom = list_win,width = 0.5,label = 'Draw')\nplt.bar(x,list_lose,color= 'grey',bottom =[x+y for x,y in zip(list_win,list_draw)],width = 0.5,label = 'Lose')\n\n#label\n\nplt.xticks(x,list_countries, fontsize = 13)\nplt.title('Home-Win-Draw-Lose',fontsize = 22)\nplt.xlabel('Countries', fontsize = 16)\nplt.ylabel('Ratio', fontsize = 16)\n\n\nplt.legend(loc = 'upper right')\n\nplt.savefig('Win_Draw_Lose.png')\nplt.show()\n","0c4a7dce":"for i in matches:\n    i['winner'] = np.where(i['win']==1, i['home_team'],i['away_team'])\n","911fac35":"matches_Spain.ix[matches_Spain['draw']==1]\nmatches_won = matches_Spain.ix[matches_Spain['draw']==1]","a4d675c5":"top_teams_Spain = pd.crosstab(index = matches_Spain['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Eng = pd.crosstab(index = matches_Eng['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Ger = pd.crosstab(index = matches_Ger['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_France = pd.crosstab(index = matches_France['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Italy = pd.crosstab(index = matches_Italy['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Pol = pd.crosstab(index = matches_Pol['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Swt = pd.crosstab(index = matches_Swt['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Ned = pd.crosstab(index = matches_Ned['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Scot = pd.crosstab(index = matches_Scot['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Por = pd.crosstab(index = matches_Por['winner'], columns = 'count').nlargest(10,'count')['count']\ntop_teams_Bel = pd.crosstab(index = matches_Bel['winner'], columns = 'count').nlargest(10,'count')['count']\n\ntop_teams = [top_teams_Spain,top_teams_Eng,top_teams_Ger,top_teams_France,top_teams_Italy,top_teams_Pol,top_teams_Swt,\n            top_teams_Ned,top_teams_Scot,top_teams_Por,top_teams_Bel]\n","c802ca00":"plt.figure(figsize=(19,7))\n#defining all the plots with respect to all the leagues\nax1 = plt.plot(top_teams_Spain,'o',label = 'Spain');\nax2 = plt.plot(top_teams_Eng,'o',label = 'England');\nax3 = plt.plot(top_teams_Ger,'o',label = 'Germany');\nax4 = plt.plot(top_teams_France,'o',label = 'France');\nax5 = plt.plot(top_teams_Italy,'o',label = 'Italy');\nax6 = plt.plot(top_teams_Pol,'o',label = 'Poland');\nax7 = plt.plot(top_teams_Swt,'o',label = 'Switzerland');\nax8 = plt.plot(top_teams_Ned,'o',label = 'Netherlands');\nax9 = plt.plot(top_teams_Scot,'o',label = 'Scotland');\nax10 = plt.plot(top_teams_Por,'o',label = 'Portugal');\nax11 = plt.plot(top_teams_Bel,'ko',label = 'Belgium');\nplt.legend(loc = 'best');\nplt.title('Top Teams in Europe', fontsize= 20)\nplt.xlabel('Leagues',fontsize = 15)\nplt.ylabel('Matches Won',fontsize = 15)\n\n#Annotations for to Top Ten Teams\nplt.annotate('Barcelona',(1,265))\nplt.annotate('Real Madrid',(2,252))\nplt.annotate('Celtic',(81,245))\nplt.annotate('Man United',(11,233))\nplt.annotate('Juventus',(41,225))\nplt.annotate('Bayern Munich',(21,223))\nplt.annotate('PSG',(31,219))\nplt.annotate('Man City',(12,218))\nplt.annotate('FC Basel',(61,218))\nplt.annotate('Ajax',(71,216))\n\n\n\nplt.savefig('Top Teams in Europe.png')\n    ","d6eb4d16":"plt.figure(figsize = (15,7))\nax1 = sns.distplot(top_teams_Spain,hist = False,label = 'La Liga');\nax2 = sns.distplot(top_teams_Eng,hist = False,label = 'EPL');\nax3 = sns.distplot(top_teams_Ger,hist = False,label = 'Bundesliga');\nax4 = sns.distplot(top_teams_France,hist = False,label = 'League 1');\nax5 = sns.distplot(top_teams_Italy,hist = False,label = 'Serie A');\n#ax6 = sns.distplot(top_teams_Pol,hist = False,label = 'Poland');\n#ax7 = sns.distplot(top_teams_Swt,hist = False,label = 'Switzerland');\n#ax8 = sns.distplot(top_teams_Ned,hist = False,label = 'Netherlands');\n#ax9 = sns.distplot(top_teams_Scot,hist = False,label = 'Scotland');\n#ax10 = sns.distplot(top_teams_Por,hist = False,label = 'Portugal');\n#ax11 = sns.distplot(top_teams_Bel,hist = False,label = 'Belgium');\n\nplt.title('Distribution Plot to show the Competitiveness in the Top 5 Leagues in Europe',fontsize=16)\nplt.xlabel('Matches Won',fontsize = 14);\nplt.ylabel('KDE',fontsize = 14)\n\nplt.savefig('Competitiveness in the Top 5 Leagues in Europe.png')\n    ","881b8c4d":"####                                  <font color='green'> First project on Kaggle<\/font>\nI am at the initial stage of this project I'll keep updating it. ","7da3be86":"Dataset given has been collected from https:\/\/www.kaggle.com\/hugomathien\/soccer and it is in the SQLite form. So to read this kind of file in Python we'll have to import the libray sqlite3. If it's not present in your IDE the use '!pip istall sqlite3' in jupyter notebook and it'll get installed in a while. SQL is a conceptual language for working with data stored in databases. In our case, SQLite is the specific implementation. Eventually, we will use SQL lunguage to write queries that would pull data from the DB, manipulate it, sort it, and extract it. The most important component of the DB is its tables - that's where all the data stored. Usually the data would be devided to many tables, and not stored all in one place. Here, most of the time will be spent handling data using SQL in tables.","63e3fd47":"### European Soccer Dataset","bff7e143":"## List of Teams\n\n###### ORDER BY defines the sorting of the output - ascending or descending (DESC)\n\n###### LIMIT, limits the number of rows in the output - after the sorting    ","fdf86e63":" The plot shows you all the teams which have largest wins in their respective leagues so I have taken  **Ten Best Teams** from each league and then after plotting them you'll get the  **Top Ten Teams in Europe** during the seasons 2008-16.","a571f6db":"### Making a list of all the leagues matches<\/font>\n\nSo here we created a list of matches in all respective leagues so that we can iterate over all the leagues to do other calculations easily.","59042bcf":" The function **des_stats** is giving us the standard deviation and mean for the  **Home goals,Away goals and the Goal difference** respectively for all the leagues.","e8444e9b":"### Distribution Plot to show the Competitiveness in the Top 5 Leagues in Europe\nThe distribution plot shows that the leagues that are **normally distributed** have average competition because these leagues show that the teams that win highest and lowest matches in the league have approximate same distance from the mean matches won by a team. France for example shows an approximately normal distribution which indicates that **League 1** (French League) has average competition among the teams.\n\n**Serie A**(Italy) plot is slightly right skewed showing more than average competition while **Bundesliga**(Germany) has a negatively skewed distribution showing that only a handful of teams are leading in the league. \n\nIn **La Liga**(Spain) we have normal distribution but there's a buldge in the curve showing that most of the teams perform around mean while few teams perform exceptionally well.\n\nThe most interesting pattern is in **English Premier League** which is rightly skewed showing that there's no Clear Leader in the den and the league is highly competitive.","283a19ae":"### List of Matches\n    \nIn this exapmle we will show only the columns that interests us, so instead of * we will use the exact names.\n\nSome of the cells have the same name (Country.name,League.name). We will rename them using AS.\n\nAs you can see, this query has much more joins. The reasons is because the DB is designed in a star structure - one table (Match) with all the \"performance\" and metrics, but only keys and IDs, while all the descriptive information stored in other tables (Country, League, Team)    \nAnd then I am creating different tables for all the leagues from the dataset matches which I'll later store in Matches.","03388c61":"#### So here I created a column  winner in all the leagues' table which prints out the name of the team that's winning a match. And then we'll drop the values of draws so that we can take out wins and can find the total number of matches won by a team and then we extract the teams that have won the maximum matches in respective leagues.","9a388c32":"###  List of Countries ","ff184138":"### <font color='orange'>Importing the data from SQLite database<\/font>\n\n##### SO here we'll check our Database and how many tables does it contain. \nThe basic structure of the query is very simple: You define what you want to see after the SELECT, * means all possible columns You choose the table after the FROM You add the conditions for the data you want to use from the table(s) after the WHERE\n\nThe stracture, and the order of the sections matter, while spaces, new lines, capital words and indentation are there to make the code easier to read.","8b50fa5e":" To make the visualization process easy we'll make these  **win,lose and draw %ages** into lists so that we can plot it .","2fe193fb":" The function  **result** will give us the  **win,draw and lose**> percentage for all the leagues so that we can get it easier to visualize. Also the  **win,draw and lose are with respective of the home team.**","12cabe1d":" Here the function **goal_diff** is creating a new column goal difference in each league's table.","202f51f1":"### List of Leagues in Different Countries\n    \nJOIN is used when you want to connect two tables to each other. It works when you have a common key in each of them. Understanding the concept of Keys is crucial for connecting between data set (tables). A key is uniquely identifies each record in a table. It can consinst of one value - usually ID, or from a combination of values that are unique in the table.\nSpecify the common value that is used to connect the tables (the id of the country in that case).\nMake sure that at least one of the values has to be a key in its table. In our case, it's the Country.id. The League.country_id is not unique, as there can be more than one league in the same country","4119d777":" The graph gives us the ratio of  **win,lose and draw** for the  **Home Teams in all leagues.**"}}