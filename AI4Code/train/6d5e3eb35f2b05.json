{"cell_type":{"3fdb9af6":"code","9566d581":"code","afb11275":"code","a871a07f":"code","74900150":"code","759dfc77":"code","85ae46f5":"code","300b1cba":"code","f5841b1e":"code","6df17c3a":"code","b93f9b41":"code","1e89f623":"code","36879321":"code","a4adf93b":"code","edabb785":"code","e06a6c2d":"code","d737852d":"code","8f9b71d0":"code","d74c01fa":"code","1bae7f89":"code","50abfc20":"code","85544289":"code","aa91d331":"code","24b2d271":"code","77b15006":"code","4f37f521":"code","aa5ced24":"code","1fce2876":"code","08f467a1":"code","84c97f44":"code","0cfcef26":"code","d601b7a8":"code","973057e3":"code","9c01f5c6":"code","83bf7c0a":"code","ddcdf4fc":"code","4644b3ad":"code","c5807f81":"code","1e30340b":"code","7dac10f6":"code","dfcd89cc":"code","70bf30cd":"code","b64a3d02":"code","4e10e70b":"code","db68d023":"code","6cc85716":"code","1371d1a7":"markdown","78af6496":"markdown","71c8a096":"markdown","ad9e56d9":"markdown","67e7dcbe":"markdown","b4910b59":"markdown","9465ed28":"markdown","df6edacb":"markdown","0c65b85e":"markdown","b5de9581":"markdown","d1cf7218":"markdown","a5e3708a":"markdown","a5cb0a0a":"markdown","a485d984":"markdown","5d43769b":"markdown","b75e90b0":"markdown","1d8f49fc":"markdown","4feb1323":"markdown"},"source":{"3fdb9af6":"import pandas as pd\nimport seaborn as sb\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","9566d581":"data=pd.read_csv('..\/input\/\/iris\/Iris.csv')","afb11275":"data.tail()","a871a07f":"data.drop('Id',inplace=True,axis=1)","74900150":"data.info()","759dfc77":"data.describe()","85ae46f5":"sb.countplot(data['Species'])","300b1cba":"data.plot(kind='box',subplots=True)","f5841b1e":"for i in data.columns:\n    plt.figure()\n    sb.displot(data[i],bins=20)","6df17c3a":"data.skew()","b93f9b41":"sb.scatterplot(data['PetalLengthCm'],data['PetalWidthCm'],hue=data['Species'])","1e89f623":"sb.scatterplot(data['SepalLengthCm'],data['SepalWidthCm'],hue=data['Species'])","36879321":"sb.scatterplot(data['PetalLengthCm'],data['Species'])\n#clear defined boundaries, high corelation","a4adf93b":"sb.scatterplot(data['PetalWidthCm'],data['Species'])\n\n#clear defined boundaries, high corelation","edabb785":"sb.scatterplot(data['SepalLengthCm'],data['Species'])\n\n#moderately clear defined boundaries, moderately corelation","e06a6c2d":"sb.scatterplot(data['SepalWidthCm'],data['Species'])\n\n#not clear defined boundaries","d737852d":"from sklearn.preprocessing import LabelEncoder","8f9b71d0":"le= LabelEncoder()","d74c01fa":"data['Species'] = le.fit_transform(data['Species'])","1bae7f89":"sb.heatmap(data.corr(),annot=True)","50abfc20":"from scipy.stats import zscore","85544289":"scores = np.abs(zscore(data))\nt = 3\n","aa91d331":"data = data[(scores<t).all(axis=1)]","24b2d271":"data.shape","77b15006":"data.skew()","4f37f521":"from sklearn.model_selection import train_test_split,cross_val_score,GridSearchCV,RandomizedSearchCV\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nfrom sklearn.svm import SVC \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","aa5ced24":"#To Find Right Random STATe\nrs =0\nacc = 0\nsvc = SVC()\nfor i in range(1,200):\n    x_train,x_test,y_train,y_test = train_test_split(data.drop('Species',axis=1),data['Species'],random_state=i)\n    svc.fit(x_train,y_train)\n    pred = svc.predict(x_test)\n    accuracy = accuracy_score(y_test,pred)\n    \n    if (accuracy> acc):\n        acc = accuracy\n        rs = i\n    \nprint('For Random state ',rs,' accuracy is: ',acc)","1fce2876":"X =  data.drop('Species',axis=1)","08f467a1":"y = data['Species'].values.reshape(-1,1)\ny","84c97f44":"x_train,x_test,y_train,y_test = train_test_split(data.drop('Species',axis=1),data['Species'],random_state=46)","0cfcef26":"acc_score = []\ncv = []\nsc = 0 \naccuracy=0\nmodels =[ SVC(),DecisionTreeClassifier(),RandomForestClassifier()]\nfor m in models:\n    m.fit(x_train,y_train)\n    pred = svc.predict(x_test)\n    accuracy = accuracy_score(y_test,pred)\n    acc_score.append(accuracy)\n    print('Accuracy of ',m ,' is ',accuracy)\n    sc = np.mean(cross_val_score(m,X,y,cv=5,scoring='accuracy'))\n    cv.append(sc)\n    print('Cross Validation Score of ',m ,' is ',sc)\n   \n   \n    ","d601b7a8":"dif = []\nfor i in range(0,3):\n    diff = acc_score[i] - cv[i]\n    dif.append(diff)\ndif   ","973057e3":"d = {'Accuracy': acc_score,\n      'Cross_Valid_Score': cv,\n         'Diff': dif\n    }","9c01f5c6":"t = pd.DataFrame(d,index=['SVC','DTC','RF'])","83bf7c0a":"t","ddcdf4fc":"params = {'kernel': ['rbf','linear'], 'C': [1,.1,.01,.001,10]\n         , 'gamma': [1,.1,.01,.001,10]}\nsvc = SVC()\ngrid = GridSearchCV(svc,params,cv=5,scoring='accuracy')","4644b3ad":"grid.fit(X,y)","c5807f81":"grid.best_params_","1e30340b":"grid = RandomizedSearchCV(svc,params,cv=5,n_iter=20,scoring='accuracy')","7dac10f6":"grid.fit(X,y)","dfcd89cc":"grid.best_params_","70bf30cd":"svc = SVC(kernel='linear',gamma=1,C=1)\nsvc.fit(x_train,y_train)\npred = svc.predict(x_test)\naccuracy = accuracy_score(y_test,pred)","b64a3d02":"accuracy","4e10e70b":"import joblib","db68d023":"joblib.dump(svc,'irisModelSVC.pk')","6cc85716":"job = joblib.load('irisModelSVC.pk')","1371d1a7":"**Observations**\n- No Skewness, Normally distributed Data\n- all features in Same Range: No Need of Scaling Data","78af6496":"**Observation**\n\n- Min Difference is for SVC MOdel , Difference meaining error btw observed and Actual, Less Error\/ Least Difference is Chosen\n- High Accuracy is not Choosen for optimal choise as to check the case for OverFitting, i.e Checking Training Score and Testing Socre  for knowing The variance-bias Tradeoff\n- SVC MODel is Optimal Choice","71c8a096":"Finding Correct Model","ad9e56d9":"**Outlier Treatment** - Zscore","67e7dcbe":"Serialization of Final Model","b4910b59":"**Observations**\n- All features follow Gaussian Like structure, i.e no skewness present","9465ed28":"**DATA MODELING:**\n- Finding Right Random State Value\n- Find Right Model with Difference of( Accuracy Score - Cross validation Score), Least Difference value i.e less error will be choosen\n- Hyper Tuning the Selected Model, Evaluate the model\n","df6edacb":"**Observations**\n- We Have Balanced Class Groups","0c65b85e":"## Bivariant Analysis: Scatterplots btw features Or Features And Target","b5de9581":"**Observations**\n- clear defined boundaries, high corelation with Petal length,Width\n- Clear defined Boundaries, moderate corelation with Sepal Length\n- unClear Boundaries with Sepal Width,negative Corelation\n","d1cf7218":"## Univariant Analysis - Distribution of Data and Checking of Outliers via Distribution Plots\/ Boxplots","a5e3708a":"# HyperParameter Tuning for SVC","a5cb0a0a":"# LAbeling the Categorical DAta","a485d984":"**Checknig Correlation Map**","5d43769b":"# EDA","b75e90b0":"**Observations**\n- OUtlier Detection: Only Sepal widthCm has a few Outliers","1d8f49fc":"**FInd Random State**","4feb1323":"## IRIS DATA :\n- 4 Features: Sepal Length, Sepal Width, Petal Length , PEtal Width\n- Target: Species: 3 Types\/classes"}}