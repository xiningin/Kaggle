{"cell_type":{"c96eaeec":"code","0e087915":"code","e7cf5b24":"code","639be6dd":"code","112fafa8":"code","8fe43152":"code","027bd7f2":"code","efb261ce":"code","35435e56":"code","5dad40b1":"code","484f9d81":"code","1f06cc9c":"code","66775fbc":"code","7f97f352":"code","787764af":"code","78dc775c":"markdown","77809a2f":"markdown","2cfe20d6":"markdown","a6d95b23":"markdown"},"source":{"c96eaeec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint(os.listdir('..\/input'))\n\n# Any results you write to the current directory are saved as output.","0e087915":"#read data\ndata = pd.read_csv('..\/input\/uncover\/UNCOVER\/harvard_global_health_institute\/hospital-capacity-by-state-20-population-contracted.csv')\n#data = data.set_index('#')\ndata.head()","e7cf5b24":"#indexing using square brakets\ndata[\"total_hospital_beds\"][0]\n#or\ndata.total_hospital_beds[0]","639be6dd":"#using loc accessor\ndata.loc[1,[\"total_hospital_beds\"]]","112fafa8":"#selecting only some column\ndata[[\"total_hospital_beds\", \"total_icu_beds\"]]","8fe43152":"#Difference between selecting columns: series, dataframe\nprint(type(data[\"total_hospital_beds\"]))\nprint(type(data[[\"total_hospital_beds\"]]))","027bd7f2":"### Slicing and indexing series\ndata.loc[0:10, \"total_hospital_beds\": \"total_icu_beds\"]","efb261ce":"#Reverse slicing\ndata.loc[10:0:-1, \"total_hospital_beds\": \"total_icu_beds\"]","35435e56":"#From something to end\ndata.loc[1:10, \"total_hospital_beds\":]","5dad40b1":"### Creating boolean series\nboolean = data.total_hospital_beds>6894.0\ndata[boolean]","484f9d81":"#Combining filters\nfirst_filter = data.hospital_bed_occupancy_rate>0.62\nsecond_filter = data.icu_bed_occupancy_rate>0.55\ndata[first_filter & second_filter]","1f06cc9c":"#Filtering column based others\ndata.hospital_bed_occupancy_rate[data.icu_bed_occupancy_rate<0.62]","66775fbc":"#Plain python function\ndef div(n):\n    return n\/2\ndata.total_hospital_beds.apply(div)","7f97f352":"#We can use lambda function\ndata.total_hospital_beds.apply(lambda n : n\/2)","787764af":"#Defining column using other columns\ndata[\"Total Bed\"] = data.total_hospital_beds + data.total_icu_beds\ndata.head()","78dc775c":"# **Transforming Data**\n* Plain python function\n* **Lambda function: ** to apply arbitrary python function to every element.\n* Defining column using other columns.\n","77809a2f":"# Slicing Data Frame****\n* Difference between selecting columns\n    * Series and data frames\n* Slicing and indexing series\n* Reverse slicing\n* From something to end","2cfe20d6":"# **Indexing Data Frames**\n* Indexing using square brakets\n* Using column attribute and row label\n* Using loc accessor\n* Selecting only some columns.","a6d95b23":"# **Filtering Data Frames**\nCreating boolean series combining filters column base other."}}