{"cell_type":{"2d619929":"code","8209e741":"code","6a91cd27":"code","8938668e":"code","cdeab134":"code","52d8d519":"code","7197b8e0":"code","27278191":"code","35f5a0ac":"code","ea63686e":"code","76fa55e3":"code","b6a9dc6a":"code","7bc3e8d2":"code","c2a413b5":"code","e2f70848":"code","04b1afda":"code","ad0b4bca":"code","7e288ca1":"code","ad68f7db":"code","0f4bfc1b":"code","910c79cd":"code","eadd6e9a":"code","e980abf4":"code","c0301750":"code","4089d8c0":"code","7c1dbc63":"code","e03521b4":"code","91402aaf":"code","c05aa565":"code","8b13358b":"code","7f185241":"code","eeb78da0":"code","c7398f72":"code","961f46d4":"code","09374412":"code","9cb37381":"code","e27f0bad":"code","975f01f2":"code","de413531":"code","843a40d3":"code","e2aa75f0":"code","2d71be1d":"code","8be60da7":"code","e923809a":"code","3fa70b00":"code","e5334e14":"code","02ce8753":"code","ae321e61":"code","d978f39e":"code","edb423c7":"code","bb20f5d5":"code","122fca25":"code","12c4fa06":"code","80b9f525":"code","7a012372":"code","994d896f":"code","fcbd7285":"code","841b6d4d":"code","32c88dec":"code","675ea68e":"code","879a71b9":"code","a076ef09":"code","7acebf71":"code","fe30204e":"code","8945679b":"code","6ede7375":"code","e102df69":"code","cd1a2919":"code","b505a77d":"code","1de18f16":"code","4f4b7979":"code","f20309b6":"code","54fb6bf9":"code","8b8a6f22":"code","94fc9834":"code","0c917f14":"code","58e481a6":"code","b5c4976c":"code","35de7a44":"code","d7bc6430":"code","c619561b":"code","24155c36":"code","1f46a1b2":"code","1029c8e3":"code","c7d9bec9":"code","b2c8dcdd":"code","ba75c911":"code","f1fe77ea":"code","d24b95c4":"code","4b130ac7":"code","a6b1f9cd":"code","723e5c78":"code","4182586e":"code","43bb4aad":"code","e7fd7473":"code","cf277de2":"code","3616d898":"code","1102b43d":"code","cd7e67f4":"code","d0355f8e":"code","e6d8983b":"code","5745a9b2":"code","493baf5e":"code","ed26b5a1":"code","d7be77c5":"code","05ce3ecf":"code","f3bd10d1":"code","648463de":"code","e3b07d6f":"code","dbeb9e86":"code","f01260aa":"code","dab56752":"code","3931a753":"code","44f0e92f":"code","318e9980":"code","7f27ee3b":"code","4e74925f":"code","2209ef43":"code","1e005f31":"code","c5897cd6":"code","40bd8f19":"code","6fcd35ea":"code","51598caf":"code","6bfea43f":"code","bc002d04":"code","c472eb11":"code","89652a9d":"code","16c26087":"code","17c12eaf":"code","9ee19ffc":"code","0af9f517":"code","f273cf95":"code","9cdaf93b":"code","53a37088":"code","1b077c6a":"code","f931c9d1":"code","e71ba1ee":"code","ff8befa0":"code","cd7099d0":"code","91097631":"code","a2c8cac2":"code","914a86d8":"code","2ac426c6":"code","726d012c":"code","dee33eae":"code","bcfbcc8e":"code","1c3ceb87":"code","beb0cfea":"code","0b8c8848":"code","c98a63ca":"code","db9b7331":"code","340e1d5d":"code","b5b1483c":"code","85378d66":"code","b88c0110":"code","f1a057c6":"code","31c56f04":"code","66b1b171":"code","e84cbb3a":"code","742e88c2":"code","dbf4f8a1":"code","54f881eb":"code","2bc664ec":"code","c1eed650":"code","05cbac38":"code","9d96721f":"code","2d90bdd3":"code","5c9ad9b1":"code","3bec0fef":"code","77971b26":"markdown","8c869cf5":"markdown","f43084d1":"markdown","d3f17efb":"markdown","25609389":"markdown","403c8695":"markdown","ff4b79fa":"markdown","f3f23261":"markdown","a6bdb453":"markdown","d7807346":"markdown","356f85d4":"markdown","8174e441":"markdown","30164c5b":"markdown","7d95e65c":"markdown","3805f487":"markdown","1a44da63":"markdown","26d62395":"markdown","31077a40":"markdown","54320cb2":"markdown","1ef60e91":"markdown","dbc62eaf":"markdown","34829fcd":"markdown","2a174b51":"markdown","be200313":"markdown","4df54685":"markdown","bff20882":"markdown","b1771b71":"markdown","07418118":"markdown","e048fe04":"markdown","0fb430fb":"markdown"},"source":{"2d619929":"from copy import copy\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn import metrics\n%matplotlib inline","8209e741":"data = pd.read_csv('..\/input\/hr-analysis\/train.csv')\ndata.head()","6a91cd27":"data.info()","8938668e":"data.duplicated().sum()","cdeab134":"plt.figure(figsize=(10,13))\nsns.heatmap(data.isnull(), cbar = False)\nplt.yticks([])\nplt.show()","52d8d519":"data.isnull().sum()","7197b8e0":"round((data.isnull().sum() \/ data.shape[0])*100, 2)","27278191":"print('Number of Rows Containing 4 NULLs or more:', (data.shape[0] - data.dropna(thresh=10).shape[0]))\nprint('Percentage:', round(((data.shape[0] - data.dropna(thresh=10).shape[0])\/data.shape[0])*100, 2), '%')","35f5a0ac":"data.dropna(thresh=10, inplace=True)","ea63686e":"data.company_size.replace('10\/49', '10-49', inplace=True)","76fa55e3":"data.company_size.replace('100-500', '100-499', inplace=True)","b6a9dc6a":"data.shape","7bc3e8d2":"data.isnull().sum()","c2a413b5":"training_data = data.dropna(thresh=14)\ntraining_data.shape","e2f70848":"training_data.drop('enrollee_id', axis=1, inplace=True);","04b1afda":"training_data_2 = copy(training_data)","ad0b4bca":"training_data.head()","7e288ca1":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    training_data_2[column] = encoder[column].fit_transform(training_data_2[column])","ad68f7db":"training_data_2.head()","0f4bfc1b":"plt.figure(figsize=(18,9.5))\nsns.heatmap(training_data_2.corr(),cbar = True, annot =True, cmap=\"Blues\");","910c79cd":"def normalize_columns(column):\n    return (training_data_2[column] - training_data_2[column].min()) \/ (training_data_2[column].max() - training_data_2[column].min())","eadd6e9a":"for column in training_data.columns:\n    training_data_2[column] = normalize_columns(column)","e980abf4":"training_data_2.head()","c0301750":"columns = ['city_development_index', 'relevent_experience', 'education_level', 'major_discipline', 'experience',\n                    'company_type', 'last_new_job', 'training_hours', 'target']","4089d8c0":"X = training_data_2.loc[:,columns].values\nY = training_data.enrolled_university","7c1dbc63":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=30)","e03521b4":"rf_grid = {\n 'max_depth': [10, 20, 30, None],\n 'max_features': ['auto', 'sqrt'],\n 'n_estimators': [200, 400, 600]}","91402aaf":"from sklearn.ensemble import RandomForestClassifier\n\neu_classifier = GridSearchCV(estimator= RandomForestClassifier(), param_grid=rf_grid, cv = 3, n_jobs=-1,verbose=1)\neu_classifier.fit(x_train, y_train) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (eu_classifier.best_score_, eu_classifier.best_params_))","c05aa565":"eu_predictions = eu_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, eu_predictions))","8b13358b":"accuracy = eu_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')\n\naccuracy = eu_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(eu_classifier, x_test, y_test, display_labels= encoder['enrolled_university'].classes_, ax = ax, cmap=\"Blues\", values_format = '.0f')\nchart.confusion_matrix;","7f185241":"columns = ['city', 'city_development_index', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']","eeb78da0":"X = training_data_2.loc[:,columns].values\nY = training_data.major_discipline","c7398f72":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=30)","961f46d4":"# Random Forest\nmd_classifier = RandomForestClassifier(n_estimators = 500, criterion = 'entropy', random_state = 42)\nmd_classifier.fit(x_train, y_train) \n\naccuracy = md_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')\n\naccuracy = md_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(md_classifier, x_test, y_test, display_labels= encoder['major_discipline'].classes_, ax = ax, cmap=\"Blues\", values_format='.0f')\nchart.confusion_matrix;","09374412":"df_3 = copy(data)","9cb37381":"df_3.fillna('0', inplace=True)","e27f0bad":"x_test = df_3[df_3['enrolled_university'] == '0']\nx_test.shape","975f01f2":"columns = ['enrollee_id', 'city_development_index', 'relevent_experience', 'education_level', 'major_discipline', 'experience',\n                    'company_type', 'last_new_job', 'training_hours', 'target']\n\nx_test = x_test.loc[:, columns]\nx_test.head()","de413531":"x_test.shape","843a40d3":"encoding_columns_eu = [ 'relevent_experience', 'education_level', 'major_discipline', 'experience', 'company_type', 'last_new_job', 'target']\neu_encoder = {}\nfor column in encoding_columns_eu:\n    encoder[column] = LabelEncoder()\n    x_test[column] = encoder[column].fit_transform(x_test[column])","e2aa75f0":"x_test.head()","2d71be1d":"def normalize_columns(column):\n    return (x_test[column] - x_test[column].min()) \/ (x_test[column].max() - x_test[column].min())","8be60da7":"for column in x_test.columns[1:]:\n    x_test[column] = normalize_columns(column)","e923809a":"x_test.head()","3fa70b00":"enrolled_university = copy(x_test.enrollee_id)","e5334e14":"enrolled_university = pd.DataFrame({'enrollee_id':enrolled_university, 'enrolled_university':eu_classifier.predict(x_test.iloc[:,1:])})","02ce8753":"enrolled_university.head()","ae321e61":"for i in enrolled_university.enrollee_id.unique():\n  df_3.loc[df_3.enrollee_id == i, 'enrolled_university'] = enrolled_university.query(f'enrollee_id == {i}').enrolled_university","d978f39e":"df_3.enrolled_university.unique()","edb423c7":"x_test = df_3[df_3['major_discipline'] == '0']\nx_test.shape","bb20f5d5":"columns = ['enrollee_id', 'city', 'city_development_index', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']\n\nx_test = x_test.loc[:, columns]\nx_test.head()","122fca25":"x_test.shape","12c4fa06":"encoding_columns_md = [ 'city', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']\nmd_encoder = {}\nfor column in encoding_columns_md:\n    encoder[column] = LabelEncoder()\n    x_test[column] = encoder[column].fit_transform(x_test[column])","80b9f525":"x_test.head()","7a012372":"def normalize_columns(column):\n    return (x_test[column] - x_test[column].min()) \/ (x_test[column].max() - x_test[column].min())","994d896f":"for column in x_test.columns[1:]:\n    x_test[column] = normalize_columns(column)","fcbd7285":"x_test.head()","841b6d4d":"major_discipline = copy(x_test.enrollee_id)","32c88dec":"major_discipline = pd.DataFrame({'enrollee_id':major_discipline, 'major_discipline':md_classifier.predict(x_test.iloc[:,1:])})","675ea68e":"major_discipline.head()","879a71b9":"for i in major_discipline.enrollee_id.unique():\n  df_3.loc[df_3.enrollee_id == i, 'major_discipline'] = major_discipline.query(f'enrollee_id == {i}').major_discipline","a076ef09":"df_3.major_discipline.unique()","7acebf71":"df = copy(df_3)","fe30204e":"df.head()","8945679b":"df.replace('0', 'Unknown', inplace=True)","6ede7375":"color = sns.color_palette('muted')\ncolor_2 = sns.color_palette(\"Paired\")\ncolor_3 = sns.color_palette('pastel')\ncolor_3","e102df69":"# Null Values\nnull_values = [5039, 4779, 4089, 2838, 457, 342, 367, 59]\ncolumns_null_values = ['company_type', 'company_size', 'gender', 'major_discipline', 'enrolled_university', 'education_level', 'last_new_job', 'experience']\n\nplt.figure(figsize=(13,8))\n\nplt.title('Null Values', fontweight=\"bold\")\nplt.xlabel('Column', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nsns.barplot(x=columns_null_values, y=null_values, color=color[0]);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.xticks((0,1,2,3,4,5,6, 7),('Company Type', 'Company Size', 'Gender', 'Major Discipline', 'Enrolled University', 'Education Level', 'Last_New Job', 'Experience'), rotation=15 );\n\nfor i in range(8):\n  plt.text(i, null_values[i]+50, null_values[i], ha='center')\n\nplt.savefig('null.png')","cd1a2919":"plt.figure(figsize=(13,8))\nsns.histplot(data=df, x='city_development_index', color=color[9]);\n\nplt.title('City Development Index Distribution', fontweight=\"bold\")\nplt.xlabel('City Development Index', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","b505a77d":"city_10 = df['city'].value_counts()[:11]\n\nplt.figure(figsize=(13,8))\nsns.barplot(x=city_10, y=city_10.index, color=color[9]);\n#plt.xaxis.set_visible(False)\nplt.xlabel('Count')\nplt.ylabel('City')\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['bottom'].set_visible(False)\nplt.title('Top 10 Cities', fontweight=\"bold\")\nplt.xlabel('Count', fontweight=\"bold\")\nplt.ylabel('City', fontweight=\"bold\")\nplt.xticks([])\nfor i in range(len(city_10)):\n    plt.text(city_10[i]+50, i, city_10[i])","1de18f16":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='relevent_experience', color=color[9]);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Relevant Experience', fontweight=\"bold\")\nplt.xlabel('Relevant Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","4f4b7979":"order = ['Male', 'Female', 'Other', 'Unknown']\nplt.figure(figsize=(8,9))\nsns.countplot(data=df, x='gender', color=color[9], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Gender', fontweight=\"bold\")\nplt.xlabel('Gender', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","f20309b6":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='enrolled_university', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Enrolled University', fontweight=\"bold\")\nplt.xlabel('Enrolled University', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","54fb6bf9":"plt.figure(figsize=(8,9))\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\n\nsns.countplot(data=df, x='education_level', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Education Level', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","8b8a6f22":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='major_discipline', color=color[1], order=df.major_discipline.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Major Discipline', fontweight=\"bold\")\nplt.xlabel('Major Discipline', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","94fc9834":"order = ['<1']\nfor i in range(20):\n  order.append(str(i+1))\norder.append('>20')\norder.append('Unknown')\n\nplt.figure(figsize=(15,8));\nsns.countplot(data=df, x='experience', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Experience Per Count of trainees', fontweight=\"bold\")\nplt.xlabel('Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","0c917f14":"plt.figure(figsize=(8,9))\norder = ['<10', '10-49', '50-99', '100-499', '500-999', '1000-4999', '5000-9999', '10000+', 'Unknown']\nsns.countplot(data=df, x='company_size', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Size', fontweight=\"bold\")\nplt.xlabel('Company Size', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=20);","58e481a6":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='company_type', color=color[1], order=df.company_type.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Type', fontweight=\"bold\")\nplt.xlabel('Company Type', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);","b5c4976c":"plt.figure(figsize=(8,9))\norder = ['never', '1', '2', '3', '4', '>4', 'Unknown']\nlabels = ('0','1','2','3','4','>4', 'Unknown')\nsns.countplot(data=df, x='last_new_job', color=color[9], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Last New Job', fontweight=\"bold\")\nplt.xlabel('Last New Job', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks((0,1,2,3,4,5,6),labels);","35de7a44":"plt.figure(figsize=(8,9))\nsns.histplot(data=df, x='training_hours', bins=30, color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours', fontweight=\"bold\")\nplt.xlabel('Training Hours (hr)', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","d7bc6430":"plt.figure(figsize=(8,9))\nsns.kdeplot(data=df, x='training_hours', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours', fontweight=\"bold\")\nplt.xlabel('Training Hours (hr)', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","c619561b":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='target', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","24155c36":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='relevent_experience', hue='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Relevant Experience vs. Target', fontweight=\"bold\")\nplt.xlabel('Relevant Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));\nplt.savefig('13.png')","1f46a1b2":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='gender', hue='target', order=['Male', 'Female', 'Other', 'Unknown']);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Gender vs. Target', fontweight=\"bold\")\nplt.xlabel('Gender', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","1029c8e3":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='enrolled_university', hue='target');\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Enrolled University vs. Target', fontweight=\"bold\")\nplt.xlabel('Enrolled University', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","c7d9bec9":"plt.figure(figsize=(8,9))\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\n\nsns.countplot(data=df, x='education_level', hue='target', order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Education Level vs. Target', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","b2c8dcdd":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='major_discipline', hue='target', order=df.major_discipline.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Major Discipline vs. Target', fontweight=\"bold\")\nplt.xlabel('Major Discipline', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","ba75c911":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='company_type', hue='target', order=df.company_type.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Type vs. Target', fontweight=\"bold\")\nplt.xlabel('Company Type', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","f1fe77ea":"order = ['<1']\nfor i in range(20):\n  order.append(str(i+1))\norder.append('>20')\norder.append('Unknown')\n\nplt.figure(figsize=(16,7))\nsns.countplot(data=df, x='experience', hue='target', order=order);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Experience vs. Target', fontweight=\"bold\")\nplt.xlabel('Trainee Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend(labels=('Not Looking for A Job', 'Looking for A Job'));\nplt.savefig('15.png')","d24b95c4":"plt.figure(figsize=(9,7))\norder = ['<10', '10-49', '50-99', '100-499', '500-999', '1000-4999', '5000-9999', '10000+', 'Unknown']\n\nsns.countplot(data=df, x='company_size', hue='target', order=order);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Size vs. Target', fontweight=\"bold\")\nplt.xlabel('Company Size', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","4b130ac7":"plt.figure(figsize=(8,9))\norder = ['never', '1', '2', '3', '4', '>4', 'Unknown']\nsns.countplot(data=df, x='last_new_job', hue='target', order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Last New Job vs. Target', fontweight=\"bold\")\nplt.xlabel('Last New Job', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","a6b1f9cd":"plt.figure(figsize=(8,9))\nsns.violinplot(data=df, y='city_development_index', x='target', inner='quartile');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('City Development Index vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('City Development Index', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","723e5c78":"plt.figure(figsize=(8,9))\nsns.boxplot(data=df, y='city_development_index', x='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('City Development Index vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('City Development Index', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","4182586e":"plt.figure(figsize=(8,9))\nsns.violinplot(data=df, y='training_hours', x='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('Training Hours (hr)', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","43bb4aad":"plt.figure(figsize=(7,8));\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\nsns.swarmplot(data=df, x='education_level', y='training_hours', order=order, palette=color);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Education Level vs. Training Hours', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Training Hours', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.savefig('swarm.png')","e7fd7473":"plt.figure(figsize=(8,5))\nsns.countplot(data=df, x='education_level', hue='relevent_experience');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Education Level vs. Relevant Experience', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);","cf277de2":"df_2 = copy(data)","3616d898":"df_2.fillna('0', inplace=True)","1102b43d":"df_2.drop('enrollee_id', axis=1, inplace=True);\ndf_2.head()","cd7e67f4":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_2[column] = encoder[column].fit_transform(df_2[column])","d0355f8e":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_2.corr(),cbar = True, annot =True, cmap=\"Blues\");","e6d8983b":"def normalize_columns(column):\n    return (df_2[column] - df_2[column].min()) \/ (df_2[column].max() - df_2[column].min())","5745a9b2":"for column in df_2.columns:\n    df_2[column] = normalize_columns(column)","493baf5e":"df_2.head()","ed26b5a1":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","d7be77c5":"X = df_2.loc[:,columns].values\nY = df_2.target.values","05ce3ecf":"X.shape","f3bd10d1":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","648463de":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_resample(x_train, y_train.ravel())","e3b07d6f":"xgb_grid = {\n            'min_child_weight': [1, 5],\n            'gamma': [0.5, 1],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4]\n        }","dbeb9e86":"xgb_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_classifier.best_score_, xgb_classifier.best_params_))","f01260aa":"xgb_classifier.best_params_","dab56752":"accuracy = xgb_classifier.score(x_train, y_train)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","3931a753":"accuracy = xgb_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","44f0e92f":"xgb_predictions = xgb_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_predictions))","318e9980":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_1.png')","7f27ee3b":"metrics.plot_roc_curve(xgb_classifier, x_test, y_test)\nplt.savefig('auc_1.png')","4e74925f":"df_3.drop('enrollee_id', axis=1, inplace=True);\ndf_3.head()","2209ef43":"df_3.shape","1e005f31":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_3[column] = encoder[column].fit_transform(df_3[column])","c5897cd6":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_3.corr(),cbar = True, annot =True, cmap=\"Blues\");","40bd8f19":"def normalize_columns(column):\n    return (df_3[column] - df_3[column].min()) \/ (df_3[column].max() - df_3[column].min())","6fcd35ea":"for column in df_3.columns:\n    df_3[column] = normalize_columns(column)","51598caf":"df_3.head()","6bfea43f":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","bc002d04":"X = df_3.loc[:,columns].values\nY = df_3.target.values","c472eb11":"X.shape","89652a9d":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","16c26087":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_resample(x_train, y_train.ravel())","17c12eaf":"xgb_grid = {\n            'min_child_weight': [1, 5],\n            'gamma': [0.5, 1],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4]\n        }","9ee19ffc":"xgb_2_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_2_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_2_classifier.best_score_, xgb_2_classifier.best_params_))","0af9f517":"xgb_2_classifier.best_params_","f273cf95":"accuracy = xgb_2_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')","9cdaf93b":"accuracy = xgb_2_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","53a37088":"xgb_2_predictions = xgb_2_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_2_predictions))","1b077c6a":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_2_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_2.png')","f931c9d1":"metrics.plot_roc_curve(xgb_2_classifier, x_test, y_test)\nplt.savefig('auc_2.png')","e71ba1ee":"df_4 = copy(data)\ndf_4.head()","ff8befa0":"null_columns = ['gender','enrolled_university', 'education_level', 'major_discipline', 'experience', 'company_size', 'company_type', 'last_new_job' ]\n\nfor i in null_columns:\n  df_4[i].fillna(df_4[i].mode()[0], inplace=True)","cd7099d0":"df_4.drop('enrollee_id', axis=1, inplace=True);\ndf_4.head()","91097631":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_4[column] = encoder[column].fit_transform(df_4[column])","a2c8cac2":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_4.corr(),cbar = True, annot =True, cmap=\"Blues\");","914a86d8":"def normalize_columns(column):\n    return (df_4[column] - df_4[column].min()) \/ (df_4[column].max() - df_4[column].min())","2ac426c6":"for column in df_4.columns:\n    df_4[column] = normalize_columns(column)","726d012c":"df_4.head()","dee33eae":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","bcfbcc8e":"X = df_4.loc[:,columns].values\nY = df_4.target.values","1c3ceb87":"X.shape","beb0cfea":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","0b8c8848":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_resample(x_train, y_train.ravel())","c98a63ca":"xgb_grid = {\n            'min_child_weight': [1, 5],\n            'gamma': [0.5, 1],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4]\n        }","db9b7331":"xgb_3_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_3_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_3_classifier.best_score_, xgb_3_classifier.best_params_))","340e1d5d":"xgb_3_classifier.best_params_","b5b1483c":"accuracy = xgb_3_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')","85378d66":"accuracy = xgb_3_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","b88c0110":"xgb_3_predictions = xgb_3_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_3_predictions))","f1a057c6":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_3_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_3.png')","31c56f04":"metrics.plot_roc_curve(xgb_3_classifier, x_test, y_test)\nplt.savefig('auc_3.png')","66b1b171":"test = pd.read_csv('..\/input\/hr-analysis\/test.csv')\ntest.head()","e84cbb3a":"test.info()","742e88c2":"test.isnull().sum()","dbf4f8a1":"null_columns = ['gender','enrolled_university', 'education_level', 'major_discipline', 'experience', 'company_size', 'company_type', 'last_new_job' ]\n\nfor i in null_columns:\n  test[i].fillna(test[i].mode()[0], inplace=True)","54f881eb":"test.head()","2bc664ec":"test.drop(['enrollee_id', 'gender', 'company_type'], axis=1, inplace=True)","c1eed650":"encoding_columns = ['city', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'last_new_job']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    test[column] = encoder[column].fit_transform(test[column])","05cbac38":"def normalize_columns(column):\n    return (test[column] - test[column].min()) \/ (test[column].max() - test[column].min())","9d96721f":"for column in test.columns:\n    test[column] = normalize_columns(column)","2d90bdd3":"test.head()","5c9ad9b1":"test['target'] = xgb_3_classifier.predict(test.values)","3bec0fef":"test.target.value_counts().plot.pie(colors=color, autopct='%1.0f%%')","77971b26":"# Creating The Model Using SMOTE (with Predicted NULL Values and Unknown) \n","8c869cf5":"- ## Normalizing Test Data","f43084d1":"- ## Bivariate Charts","d3f17efb":"- ## XGBoost Classifier Using SMOTE with Predicted NULL Values","25609389":"- ## Normalizing The Data","403c8695":"- ## Scaling The Data","ff4b79fa":"- ## Normalizing Training data","f3f23261":"# Reading The Data","a6bdb453":"## Question to be asked about the Data:\nQ1: All columns vs Target<br>\nQ2: Distribution data of all columns<br>\nQ3: What are the three most important things we need to focus on to improve employee\nengagement?<br>\nQ4: What are the three most important things we need to focus on to decrease the numer looking for a new job?<br>\nQ5: What are the trainee most effective features that does not look for another job?<br>\nQ6: what is the effect of training hours that causing the trainee to look for another job?<br>","d7807346":"- ## `2` Major Discipline","356f85d4":"# Creating The Model Using SMOTE (Replacing NULL with 0)","8174e441":"# Predicting NULL Values","30164c5b":"- ## Encoding The Data","7d95e65c":"- ## Normalizing Data ","3805f487":"- ## Scaling The test data","1a44da63":"# Creating The Model Using SMOTE(With Predicted NULL Values and Mode)","26d62395":"- ## Univariate Charts","31077a40":"# Predicting The Target in Test Data ","54320cb2":"  - ## Filling Enrolled University Column","1ef60e91":"- ## Detting The Data Ready","dbc62eaf":"- ## Normalizing The Data","34829fcd":"- ## `1.`Enrolled University Column","2a174b51":"- ## XGBoost Classifier Using SMOTE Replacing NULL with *0*","be200313":"- ## Encoding The Data","4df54685":"- ## XGBoost Classifier Using SMOTE(Replacing NULL Values with Mode)","bff20882":"- ## Predicting Target","b1771b71":"# Exploratory Data Analysis","07418118":"- ## Filling Major Discipline Column","e048fe04":"- ## Getting the training data ready","0fb430fb":"- ## The Columns to predict their null values\n    - enrolled_university\n    - education_level\n    - major_discipline\n    - experience\n    - company_size\n    - company_type\n    - last_new_job\n    - gender"}}