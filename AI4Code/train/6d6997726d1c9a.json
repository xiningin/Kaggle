{"cell_type":{"57a6a806":"code","209671d6":"code","1f201196":"code","c93a050d":"code","9fe35102":"code","19292c36":"code","d8689a0a":"code","d1bd5521":"code","23016eb3":"code","da453ae6":"code","5b2e225f":"markdown","b4b74371":"markdown","68c84f0f":"markdown","a96e01f6":"markdown"},"source":{"57a6a806":"import os\n\ncaptcha_images_folder = \"..\/input\/captcha-images\/captcha_images\"\ncaptchas = [\n    os.path.join(captcha_images_folder, f) for f in os.listdir(captcha_images_folder)\n]","209671d6":"import cv2\n\ndef preprocess_CAPTCHA(img):\n    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    gray_with_border = cv2.copyMakeBorder(gray, 8, 8, 8, 8, cv2.BORDER_REPLICATE)\n    preprocessed = cv2.threshold(\n        gray_with_border, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU\n    )[1]\n    return gray_with_border, preprocessed","1f201196":"def get_CAPTCHA_label(path_to_file):\n    filename = os.path.basename(path_to_file)\n    label = filename.split(\".\")[0]\n    return label","c93a050d":"def find_bounding_rectangles_of_contours(contours):\n    letter_bounding_rectangles= []\n    for contour in contours:\n        (x,y,w,h) = cv2.boundingRect(contour)\n        if w\/h > 1.25:\n            half_width = int(w\/2)\n            letter_bounding_rectangles.append((x,y,half_width, h))\n            letter_bounding_rectangles.append((x+half_width, y, half_width, h))\n        else:\n            letter_bounding_rectangles.append((x,y,w,h))\n    return letter_bounding_rectangles","9fe35102":"def CAPTCHA_to_gray_scale_and_bounding_rectangles(captcha_image_file):\n    image = cv2.imread(captcha_image_file)\n    gray, preprocessed = preprocess_CAPTCHA(image)\n    contours = cv2.findContours(\n        preprocessed.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE\n    )\n    contours = contours[0]\n    letter_bounding_rectangles = find_bounding_rectangles_of_contours(contours)\n    letter_bounding_rectangles = sorted(letter_bounding_rectangles, key=lambda x: x[0])\n    return gray, letter_bounding_rectangles","19292c36":"def bounding_rectangle_to_letter_image(letter_bounding_box, grayscaled):\n    x,y,w,h = letter_bounding_box\n    letter_image = grayscaled[y-2:y+h+2, x-2:x+w+2]\n    return letter_image","d8689a0a":"captcha_processing_output_folder = \"extracted_letter_images\"\ncharacter_counts = {}\n\n\ndef crop_bounding_rectangles_and_save_to_file(\n    letter_bounding_rectangles, gray, captcha_label\n):\n    \"\"\"Saves the individual letters of a CAPTCHA.\"\"\"\n    for letter_bounding_rectangle, current_letter in zip(\n        letter_bounding_rectangles, captcha_label\n    ):\n        letter_image = bounding_rectangle_to_letter_image(\n            letter_bounding_rectangle, gray\n        )\n\n        save_path = os.path.join(captcha_processing_output_folder, current_letter)\n        if not os.path.exists(save_path):\n            os.makedirs(save_path)\n\n        character_count = character_counts.get(current_letter, 1)\n\n        p = os.path.join(save_path, str(character_count) + \".png\")\n        cv2.imwrite(p, letter_image)\n\n        character_counts[current_letter] = character_count + 1","d1bd5521":"!pip install imutils","23016eb3":"import imutils\nimport numpy as np\n\nfor captcha_image_file in captchas:\n    captcha_label = get_CAPTCHA_label(captcha_image_file)\n    gray, letter_bounding_rectangles = CAPTCHA_to_gray_scale_and_bounding_rectangles(captcha_image_file)\n    if( len(letter_bounding_rectangles) != 4):\n        continue\n    crop_bounding_rectangles_and_save_to_file(letter_bounding_rectangles,gray,captcha_label)\n    ","da453ae6":"## Next up Training the actual captcha solver\n","5b2e225f":"![](.\/extracted_letter_images\/L\/339.png)","b4b74371":"Taken from chapter 5 of [Machine learning for cyberscurity cookbook](https:\/\/github.com\/PacktPublishing\/Machine-Learning-for-Cybersecurity-Cookbook\/blob\/master\/Chapter05\/CAPTCHA%20Breaker\/Processing%20a%20CAPTCHA%20Dataset.ipynb)","68c84f0f":"## Processing a Captcha dataset","a96e01f6":"This is an example of a segmented letter:"}}