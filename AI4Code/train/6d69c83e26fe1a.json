{"cell_type":{"c6726dc3":"code","863f9235":"code","cb29eb08":"code","97e45f39":"code","3087d3ee":"code","858a45db":"code","e58495d8":"code","82d71a19":"code","499e578d":"code","9d661fb5":"code","1e536cf9":"code","b37be2f1":"code","2e00b436":"code","b168b1b3":"code","611f1993":"code","59095aab":"code","6346a582":"markdown","5687033b":"markdown","b1b67665":"markdown","9a1bf7fb":"markdown","64e193fe":"markdown","6c632607":"markdown","db7cfdb6":"markdown","9ffab530":"markdown","9beda0a3":"markdown","e8216481":"markdown","414c76a2":"markdown","9144f354":"markdown","53817f96":"markdown","d1d94149":"markdown","33a40db4":"markdown","0ba818d4":"markdown"},"source":{"c6726dc3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","863f9235":"a_solar=pd.read_csv(\"\/kaggle\/input\/a_solar.txt\")\nb_dream=pd.read_csv(\"\/kaggle\/input\/b_dream.txt\")\nc_soup=pd.read_csv(\"\/kaggle\/input\/c_soup.txt\")\nd_maelstrom=pd.read_csv(\"\/kaggle\/input\/d_maelstrom.txt\")\ne_igloos=pd.read_csv(\"\/kaggle\/input\/e_igloos.txt\")\nf_glitch=pd.read_csv(\"\/kaggle\/input\/f_glitch.txt\")","cb29eb08":"print(a_solar['5 3'][0:int(a_solar.columns[0].split()[1])])","97e45f39":"print(b_dream['100 100'][0:int(b_dream.columns[0].split()[1])])","3087d3ee":"print(c_soup['200 200'][0:int(c_soup.columns[0].split()[1])])","858a45db":"print(d_maelstrom['300 200'][0:int(d_maelstrom.columns[0].split()[1])])","e58495d8":"print(e_igloos['500 400'][0:int(e_igloos.columns[0].split()[1])])","82d71a19":"print(f_glitch['500 400'][0:int(f_glitch.columns[0].split()[1])])","499e578d":"dev_space_a = list()\nman_space_a = list()\nprint(\"free seats for developers:\")\nfor i in range(int(a_solar.columns[0].split()[1])):\n    for j in range(int(a_solar.columns[0].split()[0])):\n        if (a_solar.iloc[i,0][j] == '_'):\n            print(j,i)\n            dev_space_a.append(str(j) +' '+ str(i))\nprint(\"free seats for managers:\")            \nfor i in range(int(a_solar.columns[0].split()[1])):\n    for j in range(int(a_solar.columns[0].split()[0])):\n        if (a_solar.iloc[i,0][j] == 'M'):\n            print(j,i)\n            man_space_a.append(str(j) +' '+ str(i))","9d661fb5":"dev_space_b = list()\nman_space_b = list()\nprint(\"free seats for developers:\")\nfor i in range(int(b_dream.columns[0].split()[1])):\n    for j in range(int(b_dream.columns[0].split()[0])):\n        if (b_dream.iloc[i,0][j] == '_'):\n            print(j,i)\n            dev_space_b.append(str(j) +' '+ str(i))\nprint(\"free seats for managers:\")            \nfor i in range(int(b_dream.columns[0].split()[1])):\n    for j in range(int(b_dream.columns[0].split()[0])):\n        if (b_dream.iloc[i,0][j] == 'M'):\n            print(j,i)\n            man_space_b.append(str(j) +' '+ str(i))","1e536cf9":"dev_space_c = list()\nman_space_c = list()\nprint(\"free seats for developers:\")\nfor i in range(int(c_soup.columns[0].split()[1])):\n    for j in range(int(c_soup.columns[0].split()[0])):\n        if (c_soup.iloc[i,0][j] == '_'):\n            print(j,i)\n            dev_space_c.append(str(j) +' '+ str(i))\nprint(\"free seats for managers:\")            \nfor i in range(int(c_soup.columns[0].split()[1])):\n    for j in range(int(c_soup.columns[0].split()[0])):\n        if (c_soup.iloc[i,0][j] == 'M'):\n            print(j,i)\n            man_space_c.append(str(j) +' '+ str(i))","b37be2f1":"dev_space_d = list()\nman_space_d = list()\nprint(\"free seats for developers:\")\nfor i in range(int(d_maelstrom.columns[0].split()[1])):\n    for j in range(int(d_maelstrom.columns[0].split()[0])):\n        if (d_maelstrom.iloc[i,0][j] == '_'):\n            print(j,i)\n            dev_space_d.append(str(j) +' '+ str(i))\nprint(\"free seats for managers:\")            \nfor i in range(int(d_maelstrom.columns[0].split()[1])):\n    for j in range(int(d_maelstrom.columns[0].split()[0])):\n        if (d_maelstrom.iloc[i,0][j] == 'M'):\n            print(j,i)\n            man_space_d.append(str(j) +' '+ str(i))","2e00b436":"dev_space_e = list()\nman_space_e = list()\nprint(\"free seats for developers:\")\nfor i in range(int(e_igloos.columns[0].split()[1])):\n    for j in range(int(e_igloos.columns[0].split()[0])):\n        if (e_igloos.iloc[i,0][j] == '_'):\n            print(j,i)\n            dev_space_e.append(str(j) +' '+ str(i))\nprint(\"free seats for managers:\")            \nfor i in range(int(e_igloos.columns[0].split()[1])):\n    for j in range(int(e_igloos.columns[0].split()[0])):\n        if (e_igloos.iloc[i,0][j] == 'M'):\n            print(j,i)\n            man_space_e.append(str(j) +' '+ str(i))","b168b1b3":"dev_space_f = list()\nman_space_f = list()\nprint(\"free seats for developers:\")\nfor i in range(int(f_glitch.columns[0].split()[1])):\n    for j in range(int(f_glitch.columns[0].split()[0])):\n        if (f_glitch.iloc[i,0][j] == '_'):\n            print(j,i)\n            dev_space_f.append(str(j) +' '+ str(i))\nprint(\"free seats for managers:\")            \nfor i in range(int(f_glitch.columns[0].split()[1])):\n    for j in range(int(f_glitch.columns[0].split()[0])):\n        if (f_glitch.iloc[i,0][j] == 'M'):\n            print(j,i)\n            man_space_f.append(str(j) +' '+ str(i))","611f1993":"devcnt = int(a_solar.iloc[int(a_solar.columns[0].split()[1]):int(a_solar.columns[0].split()[1])+1,0])\nmancnt = int(a_solar.iloc[int(a_solar.columns[0].split()[1]) + devcnt +1 :int(a_solar.columns[0].split()[1]) + devcnt +2,0])\ndevs = data.iloc[int(a_solar.columns[0].split()[1])+1:int(a_solar.columns[0].split()[1])+1+devcnt,0]\nmans = data.iloc[int(a_solar.columns[0].split()[1]) + devcnt + 2:int(a_solar.columns[0].split()[1]) + devcnt + 2 + mancnt,0]","59095aab":"myfile = open('outputFile_a_solar.txt', 'w')\nfor a in range(len(dev_space_a)):\n    myfile.write(dev_space_a[a])\n    myfile.write(\"\\n\")\nfor b in range(devcnt-len(dev_space_a)):\n    myfile.write('X')\n    myfile.write(\"\\n\")\nfor c in range(len(man_space_a)):\n    myfile.write(man_space_a[c])\n    myfile.write(\"\\n\")\nfor d in range(mancnt-len(man_space_a)):\n    myfile.write('X')\n    myfile.write(\"\\n\")\nmyfile.close()\nmyfile.close()","6346a582":"## C_soup","5687033b":"## e_igloos","b1b67665":"## b_dream","9a1bf7fb":"# Free seats","64e193fe":"# Some example code for text file generation:  (without any algorithm with the goal to score points)","6c632607":"## a_solar","db7cfdb6":"# Further work:\n* ### Get the developers and managers abilities \n* ### Make an algorithm to score more points. \n\n### There will be possible to evaluate the outputs at [this page](https:\/\/challenges.reply.com\/tamtamy\/challenges\/category\/coding#\/home)","9ffab530":"# e_igloos","9beda0a3":"## b_dream","e8216481":"# Seats\n* '#' = unavailable seats\n* _ = available for developers\n* M = available for managers\n\n","414c76a2":"## C_soup","9144f354":"## a_solar","53817f96":"## f_glitch","d1d94149":"# f_glitch","33a40db4":"## d_maelstroem","0ba818d4":"# d_maelstrom"}}