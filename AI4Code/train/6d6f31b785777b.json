{"cell_type":{"80f2cc66":"code","672b9370":"code","452f8098":"code","82e07b3e":"code","98f1c7d8":"code","42333d8e":"code","959ffcf2":"code","24457c4d":"code","5e620eb7":"code","322613e6":"code","2185ad9a":"code","8d159ac2":"code","fe320d9d":"code","51465210":"code","80770837":"code","d1ca75ba":"code","37f747db":"code","ce18978c":"code","d5b24d28":"code","38b12023":"markdown","3cd9a870":"markdown","6f01d53f":"markdown","e166455b":"markdown","6b118ea6":"markdown","0a5787ea":"markdown","143e375c":"markdown","3997fe75":"markdown","6246d1b5":"markdown","1578f38e":"markdown","98e81a34":"markdown","af4adf66":"markdown","2991f537":"markdown","fdd3892d":"markdown","238c41e4":"markdown","35815fcd":"markdown","9466d9cb":"markdown","fff8a7f6":"markdown","16f127ae":"markdown"},"source":{"80f2cc66":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\nplt.style.use(\"seaborn-bright\")  # Seaborn styles plots with matplotlib.\n\ncolors = [\"#FF6363\", \"#676FA3\"]\n\nTRAIN_DATA_PATH = r\"..\/input\/titanic\/train.csv\"\ntrain = pd.read_csv(TRAIN_DATA_PATH, sep=\",\", index_col=0)","672b9370":"print(train.isnull().mean())","452f8098":"x = train['Survived'].value_counts()\nlabel = ['Not Survived', 'Survived']\n\nplt.figure(figsize=(5, 5))\nplt.pie(x, labels=label, autopct='%1.1f%%', colors=colors)\nplt.tight_layout()\nplt.show()","82e07b3e":"class_survived = train.groupby([\"Pclass\"])[\"Survived\"].value_counts(normalize=True).rename('Survived Percentage').reset_index()\np = sns.barplot(x=\"Pclass\", y=\"Survived Percentage\", hue=\"Survived\", data=class_survived, palette=colors)","98f1c7d8":"sex_survived = train.groupby([\"Sex\"])[\"Survived\"].value_counts(normalize=True).rename('Survived Percentage').reset_index()\np = sns.barplot(x=\"Sex\", y=\"Survived Percentage\", hue=\"Survived\", data=sex_survived, palette=colors)","42333d8e":"class_sex_survived = train.groupby([\"Pclass\", \"Sex\"])[\"Survived\"].value_counts(normalize=True).rename('Survived Percentage')\nprint(class_sex_survived)","959ffcf2":"sibsp_survived = train.groupby([\"SibSp\"])[\"Survived\"].value_counts(normalize=True).rename('Survived Percentage').reset_index()\np = sns.barplot(x=\"SibSp\", y=\"Survived Percentage\", hue=\"Survived\", data=sibsp_survived, palette=colors)","24457c4d":"parch_survived = train.groupby([\"Parch\"])[\"Survived\"].value_counts(normalize=True).rename('Survived Percentage').reset_index()\np = sns.barplot(x=\"Parch\", y=\"Survived Percentage\", hue=\"Survived\", data=parch_survived, palette=colors)","5e620eb7":"train[\"Number of Companions\"] = train[\"SibSp\"] + train[\"Parch\"]\n\ncompanion_survived = train.groupby([\"Number of Companions\"])[\"Survived\"].value_counts(normalize=True).rename(\n    'Survived Percentage').reset_index()\np = sns.barplot(x=\"Number of Companions\", y=\"Survived Percentage\", hue=\"Survived\", data=companion_survived, palette=colors)","322613e6":"train[\"Alone\"] = (train[\"Number of Companions\"] < 1).astype(int)\nalone_survived = train.groupby([\"Alone\"])[\"Survived\"].value_counts(normalize=True).rename('Survived Percentage').reset_index()\np = sns.barplot(x=\"Alone\", y=\"Survived Percentage\", hue=\"Survived\", data=alone_survived, palette=colors)","2185ad9a":"combined_survived = train.groupby([\"Pclass\", \"Sex\", \"Alone\"])[\"Survived\"].value_counts(normalize=True).rename(\n    'Survived Percentage')\nprint(combined_survived)","8d159ac2":"train[\"Sex Bool\"] = train[\"Sex\"].map({'male': 1, 'female': 0})\n\n# Populate Age_Fill\ntrain['Age Filled'] = train['Age'].groupby([train['Pclass'], train['Sex'], train[\"Alone\"]]).apply(lambda x: x.fillna(x.median()))","fe320d9d":"print(train[\"Age Filled\"][train['Age'].isnull()].head())\ntrain['Age'].fillna(train[\"Age Filled\"][train['Age'].isnull()], inplace=True)  # Assign the filled ages.","51465210":"age_survived = train.groupby([\"Age\"])[\"Survived\"].value_counts(normalize=True).rename('Survived Percentage').reset_index()\n\nplt.figure(figsize=(15, 5))\np = sns.barplot(x=pd.cut(age_survived['Age'], 8), y=age_survived[\"Survived Percentage\"], hue=age_survived[\"Survived\"],\n                palette=colors)","80770837":"sns.boxenplot(x=train[\"Age\"])","d1ca75ba":"filtered = train.filter([\"Pclass\", \"Sex\", \"Alone\", \"Age\"])\nprint(filtered.head())","37f747db":"filtered[\"Sex\"] = pd.get_dummies(filtered['Sex'])[\"female\"]","ce18978c":"print(filtered[\"Sex\"].head())","d5b24d28":"filtered.corr()","38b12023":"### The impact of companions on the `feature` `Survived`\nExploration of the relationship between `Survived` and `Number of Siblings` *(SibSp)*:","3cd9a870":"To do this, we binary encode the `feature` `Sex`. After this process, all `female` passengers will have the number `1` and all `male` passengers the number `0`.","6f01d53f":"### Exploration of the relationship between the `features` `Survived`, `Sex` and `Passenger Class`:","e166455b":"Exploration of the relationship between `Survived` and `Number of Parents` *(Parch)*:","6b118ea6":"From this information we can create a new feature `Number of Companions` which adds the `features` `SibSp` and `Parch`:","0a5787ea":"### The impact of `Passenger Class` *(Pclass)* to the `feature` `Survived`:","143e375c":"Firstly, let us check the percentage of the information, that is not available per `feature`:","3997fe75":"We can further generalize the feature `Number of Companions`. For this we use a boolean feature if a passenger travels alone or not:","6246d1b5":"This means, 19% of the `feature` `Age` and 77% of the `feature` `Feature Cabin` has no entries. Thus, the `feature` `Feature Cabin` will be dropped, since it is difficult to fill such a huge amount of missing data. For the other `features`, we are free to explore their relationship with the `feature` `Survived`.","1578f38e":"### The combination of all relevant `features`","98e81a34":"Since the group between the ages `70` and `80` looks a little strange, let us visualize the box plot:","af4adf66":"### Relationship between the `features` `Survived` and `Sex`:","2991f537":"Let us have a look to the filled data and let us fill the missing values:","fdd3892d":"## Plots\n### Percentage of overall `Survived` passengers","238c41e4":"### Relationship between the `features` `Survived` and `Age`:","35815fcd":"## Correlation\n\nAfter we determine the most important `features`, we should check how much the `features` are correlated with each other.","9466d9cb":"Finally, we compute the correlation matrix:","fff8a7f6":"# Titanic Data Exploration\n\nA notebook to find out which features have the highest impact on survival rate.","16f127ae":"## Exploring the Age\n\nTo examine the influence of the `feature` `Age`, the rows that do not contain an information must be filled. To do this, we will use the `median` value of the grouped `features` `Passenger Class`, `Sex` and the `feature` `Alone`:"}}