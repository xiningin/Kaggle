{"cell_type":{"ea56e7dc":"code","37215e60":"code","b3583b22":"code","51d21e54":"code","e123d779":"code","f2d632a4":"code","7dd332bf":"code","cb84187c":"code","29fe6fa9":"code","21d2b539":"code","eabbddf0":"code","f8a585db":"code","e45a992d":"code","16712e21":"code","14765fbc":"code","2aba96b1":"code","02f1fb55":"code","77ec65da":"code","726a3492":"code","05dfc81d":"code","66b0b38e":"code","93dcbba3":"code","550d7f18":"code","8a95e202":"code","3b760be9":"code","2e4fc8e7":"code","0cc25193":"code","41f18015":"code","eae9a9b9":"code","fdb2aa29":"code","e7b87381":"code","4233beb5":"code","b86982a3":"code","913d866f":"code","adc67c3e":"code","2cd0afdb":"code","59f5c90c":"code","eaf5fdb4":"code","3b6aefdf":"code","2c187562":"code","a983c0b6":"code","968b0839":"code","0f57559b":"code","76a5317f":"code","654ede5f":"code","7a29f31a":"code","559a760e":"code","1d1d9e53":"code","fb28fa39":"code","1acdc376":"code","9bbeb266":"code","8f239251":"code","5824feda":"code","a5ed7683":"markdown","01bec558":"markdown","0a8ddfc2":"markdown","5334af4d":"markdown","5c3b2b0d":"markdown","c9e051c5":"markdown","f2b888b2":"markdown","2faffcd5":"markdown","eda8c5c3":"markdown","82bb5431":"markdown","0a5159f8":"markdown","ef5ca633":"markdown","710912f9":"markdown","e523c4e1":"markdown","32fa3a38":"markdown","d226ecc0":"markdown","57215431":"markdown","df67da9b":"markdown","ac3926a1":"markdown","f7a1e801":"markdown","37f060a1":"markdown","77c1ebbe":"markdown","83a5ad49":"markdown","7aca2ff6":"markdown","863e8d04":"markdown","4f3848bd":"markdown","62d0f412":"markdown","7bd39eee":"markdown","6726a179":"markdown","20714618":"markdown","4a40458b":"markdown","15271d96":"markdown","096c73b8":"markdown","dc5a2d70":"markdown","c3dad40d":"markdown","83ca68af":"markdown","9b1ec20f":"markdown","72274b15":"markdown","b224dad9":"markdown","d8853cf2":"markdown","5e6422d0":"markdown","9b245453":"markdown","f333aa08":"markdown","8ea9fa24":"markdown","0e90dbcd":"markdown","788f7f84":"markdown","7f2fe549":"markdown","b0e4ce24":"markdown","a07bc331":"markdown","944af61b":"markdown","ffe900c2":"markdown","1483d69e":"markdown","56890945":"markdown","86b2fad5":"markdown","b190ecf0":"markdown","e7268081":"markdown","d31d1c42":"markdown","e8a4fc52":"markdown","18e28f46":"markdown","8a4d7ff4":"markdown","3c99fb7f":"markdown","9b576ffa":"markdown","47f10d27":"markdown","e557cbbd":"markdown","73492216":"markdown","691a9a8f":"markdown","b07a7ed5":"markdown","5a2c4357":"markdown","8f94e82e":"markdown","2ee91e8a":"markdown","dfd61b4b":"markdown","1bc52a80":"markdown","259ce757":"markdown","bde1a6c9":"markdown","d88a9bf0":"markdown","b45720d5":"markdown","a0a9d479":"markdown","345656df":"markdown","449ad4dd":"markdown","cc94c535":"markdown","737ecf70":"markdown","f8659961":"markdown","9f3fd52d":"markdown","046b0c53":"markdown","bcc1ddcd":"markdown","ab6fedd9":"markdown","963626b0":"markdown","eb7b4329":"markdown","974a7356":"markdown"},"source":{"ea56e7dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n    \n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37215e60":"import matplotlib.pyplot as plt\nimport matplotlib.colors as colors\nimport matplotlib.cm as cm\nimport seaborn as sns\nfrom plotly.graph_objs import *\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.offline import iplot\npd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)\n%matplotlib inline","b3583b22":"df=pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv',encoding='unicode_escape',low_memory=False)\ndf.head(2)","51d21e54":"df.drop(index=0,inplace=True)","e123d779":"sns.set_context('notebook',font_scale=2.3)\nsns.set_style('whitegrid')\nfig, ax1 = plt.subplots(figsize=(15,5))\ngraph = sns.countplot(x='Q1',palette='Paired',saturation=9.75,data=df,order=df['Q1'].value_counts().index)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=90)\nfor p in graph.patches:\n    graph.annotate(format(p.get_height(), '.1f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   size=18,\n                   xytext = (0,-7), \n                   textcoords = 'offset points')\nplt.xlabel(\"Age Category of people who took Kaggle 2020 Surveys\", size=25)\nplt.ylabel(\"Count based on their Age category\", size=25)\nplt.title(\"Age wise count analysis of  Kaggle users\")\nplt.show()","f2d632a4":"df.head(2)","7dd332bf":"fig, ax = plt.subplots(1,1, figsize=(28,6))\nsns.set(context='talk',palette='ocean_r',style='whitegrid',font_scale=1.8)\nax=sns.countplot(x='Q2',palette='husl',data=df,order=df['Q2'].value_counts().index)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.1f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center',size=20,\n                   xytext = (0,8), \n                   textcoords = 'offset points')\nplt.xlabel(\"Gender of kaggle Users\", size=28)\nplt.ylabel(\"Count\", size=24)\nplt.title(\"Gender count of Kaggle users\")\nplt.show()","cb84187c":"sns.set(font_scale=50.5)\nsns.set_context('poster')\nfig, ax = plt.subplots(1,1,figsize=(25,25))\n#ax=df['Q5'].value_counts().plot(kind='bar')\nax=sns.countplot(y='Q3',palette='Set2',data=df,order=df['Q3'].value_counts().index)\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(\"{:.2f}%\".format((p.get_width())*100\/len(df['Q3'])),\n                (x + width\/2, y + height\/2), ha='left', va='center',fontsize=25)\nplt.ylabel(\"C O U N T R I E S\", size=35)\nplt.xlabel(\"Count and Percentage\", size=35)\nplt.title(\"Countries Where Kaggle Users Reside\")\nplt.show()\n","29fe6fa9":"figure=go.Pie(values=df['Q4'].value_counts(),labels=['Bachelor\u2019s degree', 'Master\u2019s degree', 'Some college\/university without bachelor\u2019s degree',\n                       'Doctoral degree', 'I prefer not to answer', \"Professional degree\", 'No formal education past high school'],name=str(['Bachelor\u2019s degree','Master\u2019s degree','Some college\/university without bachelor\u2019s degree','Doctoral degree','I prefer not to answer','Professional degree','No formal education past high school']),title=\"Education Analysis of kaggle users\",\n             )\n#fig.update_traces(textposition='outside', textinfo='percent+label')\n#fig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\nfig=go.Figure(data=figure)\nfig.show()","21d2b539":"sns.set_context('poster')\nfig, ax = plt.subplots(1,1,figsize=(20,10))\n#ax=df['Q5'].value_counts().plot(kind='bar')\nax=sns.countplot(y='Q5',palette='Set2',data=df,order=df['Q5'].value_counts().index)\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(\"{:.2f}%\".format((p.get_width())*100\/len(df['Q5'])),\n                (x + width\/2, y + height\/2), ha='left', va='center',fontsize=32)\nplt.ylabel(\"Current Status of kaggle Users\", size=35)\nplt.xlabel(\"Count and Percentage\", size=35)\nplt.title(\"Current Status Count of Kaggle Users\")\nplt.show()\n\n","eabbddf0":"Coding=df['Q6'].value_counts().index\ncount=df['Q6'].value_counts()\nCoding_Exp=go.Bar(x=list(Coding),y=df['Q6'].value_counts(),marker = dict(color =['red' if (y==4546) else 'orange' if (y==4505) else 'tan' for y in count]))\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,1)',title = 'Coding Experience of Kaggle Users' ,xaxis = dict(title = 'Experience in years', automargin=True), yaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Coding_Exp,layout=layout)\nfig.show()","f8a585db":"Language=df['Q8'].value_counts().index\ncount=df['Q8'].value_counts()\nPreferred_Language=go.Bar(x=list(Language),y=df['Q8'].value_counts(),marker = dict(color =['orange' if (y>=14000) else 'red' for y in count]))\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,1)',title = 'Preferred_Programming_Language by Kaggle Users For Aspiring Data Scientist' ,xaxis = dict(title = 'L A N G U A G E S', automargin=True), yaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Preferred_Language,layout=layout)\nfig.show()","e45a992d":"labels=[\"A personal computer or laptop\",\"A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)\",\"A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)\",\"None\",\"Other\"]\nexplode=[0.2,0,0,0,0]\nplt.figure(figsize=(15,10))\ndf['Q11'].value_counts().plot(kind='pie',labels=labels,explode=explode,autopct='%.2f')\nplt.title(\"kaggle Users preferable Working Platform\")\nplt.show()","16712e21":"sns.set(context='poster',palette='ocean_r',style='darkgrid',font_scale=1.4)\nfig,ax = plt.subplots(1,1, figsize=(25,8))\nax=sns.countplot(x='Q13',palette='Set3',saturation=10.75,data=df,order=df['Q13'].value_counts().index)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.1f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0,6), \n                   textcoords = 'offset points')\nax.set(title='Usage Count of kaggle users on TPU (tensor processing unit)')\nplt.show()","14765fbc":"df['Q15'].value_counts()","2aba96b1":"plt.figure(figsize=(30,20))\nsns.set(context='talk',palette='ocean_r',style='darkgrid',font_scale=2.7)\nax=sns.countplot(y='Q15',data=df,order=df['Q15'].value_counts().index)\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(\"{:.2f}%\".format((p.get_width())*100\/len(df['Q5'])),\n                (x + width\/2, y + height\/2), ha='left', va='center',fontsize=38)\nax.set(title='Machine Learning Experience Of Kaggle Users',xlabel=\"count and percentage\",ylabel='Experience in years')\nplt.show()","02f1fb55":"figure_Q20=go.Pie(values=df['Q20'].value_counts(),hole=0.6,title=\"Size Of the Company\",labels=list(df['Q20'].value_counts().index),pull=[0.2,0,0,0,0])\n#fig.update_traces(textposition='outside', textinfo='percent+label')\n#fig.update_layout(margin=dict(t=0, b=0, l=0, r=0))\nfig=go.Figure(data=figure_Q20)\nfig.show()","77ec65da":"figure_Q22=go.Pie(values=df['Q22'].value_counts(),labels=list(df['Q22'].value_counts().index),title=\"Implementation of ML methods\")\n#fig.update_traces(textposition='outside', textinfo='percent+label')\nfig=go.Figure(data=figure_Q22)\nfig.update_layout(margin=dict(t=0, b=0, l=0, r=0))\nfig.show()","726a3492":"df['Q24'].value_counts()","05dfc81d":"figure_Q24=go.Pie(values=df['Q24'].value_counts(),labels=list(df['Q24'].value_counts().index),title=\"Compensations Per Annum\",pull=[0.2])\n#fig.update_traces(textposition='outside', textinfo='percent+label')\nfig.update_layout(margin=dict(t=0, b=0, l=0, r=0))\nfig=go.Figure(data=figure_Q24)\nfig.show()","66b0b38e":"df['Q25'].value_counts()","93dcbba3":"figure_Q25=go.Pie(values=df['Q25'].value_counts(),labels=list(df['Q25'].value_counts().index),title=\"money spent on ML\/Cloud Services\",pull=[0.2,0,0,0,0.1,0.2],hole=0.6)\n#fig.update_traces(textposition='outside', textinfo='percent+label')\nfig.add_annotation(text=\"Text annotation with arrow\",\n            showarrow=True,\n            arrowhead=8)\nfig=go.Figure(data=figure_Q25)\nfig.update_layout(margin=dict(t=0, b=0, l=0, r=0))\nfig.show()","550d7f18":"df['Q30'].value_counts()","8a95e202":"products=df['Q30'].value_counts().index\ncount=df['Q30'].value_counts()\nBig_Data_Products=go.Bar(x=list(products),y=df['Q30'].value_counts(),marker = dict(color =['maroon' if (y<52) else 'purple' if (y>=764) else 'gold' for y in count]))\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,1)',title = 'Favourite Big Data Products among Kaggle Users' ,xaxis = dict(title = 'Big Data Products', automargin=True), yaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Big_Data_Products,layout=layout)\nfig.show()","3b760be9":"df['Q32'].value_counts().reset_index()","2e4fc8e7":"Tools=df['Q32'].value_counts().index\nVisualisation_Tools=go.Bar(x=list(Tools),y=df['Q32'].value_counts(),marker={'color':['red' if (y==540) else 'red' if (y==462) else 'green' for y in df['Q32'].value_counts() ]})\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,1)',title = 'Mostly preferred Business intelligence(BI) Tools by Kaggle Users' ,xaxis = dict(title = 'BI Tools', automargin=True), yaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Visualisation_Tools,layout=layout)\nfig.show()","0cc25193":"Tools=df['Q38'].value_counts().index\nPreferred_Tools=go.Bar(x=list(Tools),y=df['Q38'].value_counts(),marker={'color': 'darkblue'})\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = 'Primarly Used Tool to analyze Data' ,xaxis = dict(title = 'Tools', automargin=True), yaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Preferred_Tools,layout=layout)\nfig.show()","41f18015":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q17' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nPreferred_ML_Algorithms=go.Bar(y=labels,x=sorted(sizes),marker={'color':['gold' if x==10560 else 'gold' if x==8804 else 'red' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = 'Mostly used ML Algorithms on a regular basis',orientation=270,yaxis = dict(title = 'ML Agorithms', automargin=True),xaxis = dict(title = 'Count')\n,template=\"plotly_white\")\nfig=go.Figure(data=Preferred_ML_Algorithms,layout=layout)\nfig.show()\n   ","eae9a9b9":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q7' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nMostly_used_Programming_lang=go.Bar(y=labels,x=sorted(sizes),marker={'color':['brown' if x==15530 else 'brown' if x==7535 else 'violet' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = 'Mostly used Programming languages on a regular basis',orientation=270,yaxis = dict(title = 'P R O G R A M M I N G     LANGUAGES', automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Mostly_used_Programming_lang,layout=layout)\nfig.show()\n   ","fdb2aa29":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q9' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nMostly_used_IDE=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['red' if (x==11211) else 'red'if (x==5873) else 'darkviolet' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used IDE'S on a regular basis\",orientation=270,yaxis = dict(title =\"IDE's\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Mostly_used_IDE,layout=layout)\nfig.show()","e7b87381":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q10' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nMostly_used_notebooks=go.Bar(x=labels,y=sorted(sizes),marker={'color':['maroon' if (y==6329) else 'maroon' if (y==5992) else 'gold' for y in sorted(sizes)]})\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used notebooks on a regular basis\",orientation=270,yaxis = dict(title =\"IDE's\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Mostly_used_notebooks,layout=layout)\nfig.show()","4233beb5":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q12' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nMostly_used_IDE=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['greenyellow' if (x==960) else 'goldenrod'if (x==666) else 'darkviolet' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used Specialized Hardwares on a regular basis\",orientation=270,yaxis = dict(title =\"H A R D W A R E S\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Mostly_used_IDE,layout=layout)\nfig.show()","b86982a3":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q14' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nMostly_used_VL=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['goldenrod' if (x==123420) else 'goldenrod'if (x==8821) else 'coral' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used Visualization Libraries on a regular basis\",orientation=270,yaxis = dict(title =\"Visualization Libraries\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Mostly_used_VL,layout=layout)\nfig.show()","913d866f":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q16' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFrameworks=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['yellowgreen' if (x==10250) else 'yellowgreen'if (x==6934) else 'cyan' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used ML Frameworks on a regular basis\",orientation=270,yaxis = dict(title =\"Visualization Libraries\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Frameworks,layout=layout)\nfig.show()","adc67c3e":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q18' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nCV=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['yellow' if (x==3512) else 'yellow'if (x==2139) else 'cyan' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used Computer Vision on a regular basis\",orientation=270,yaxis = dict(title =\"CV Methods\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=CV,layout=layout)\nfig.show()","2cd0afdb":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q19' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nNLP=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['red' if (x==2110) else 'red'if (x==1514) else 'dodgerblue' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used NLP  on a regular basis\",orientation=270,yaxis = dict(title =\"N  L  P     Methods\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=NLP,layout=layout)\nfig.show()","59f5c90c":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q26' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\ncmp=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['maroon' if (x==5236) else 'maroon'if (x==5146) else 'magenta' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used Cloud Computing Platforms on a regular basis\",orientation=270,yaxis = dict(title =\"Cloud Computing Platforms\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=cmp,layout=layout)\nfig.show()","eaf5fdb4":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q27' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\ncp=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['gold' if (x==2650) else 'gold'if (x==3252) else 'gold'if (x==949)else 'maroon' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used Cloud Computing Products on a regular basis\",orientation=270,yaxis = dict(title =\"Cloud Computing Products\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=cp,layout=layout)\nfig.show()","3b6aefdf":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q28' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nmlp=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['ivory' if (x==2838) else 'ivory'if (x==3382) else 'ivory'if (x==612)else 'gold' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used ML Products on a regular basis\",orientation=270,yaxis = dict(title =\"Machine Learning Products\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=mlp,layout=layout)\nfig.show()","2c187562":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q29' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nBP=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['lightblue' if (x==4101) else 'lightblue'if (x==3064) else 'lawngreen' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used BIG DATA Products on a regular basis\",orientation=270,yaxis = dict(title =\"BIG DATA   Products\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=BP,layout=layout)\nfig.show()","a983c0b6":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q31' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nBI=go.Bar(y=labels,x=sorted(sizes),marker={'color': ['lawngreen' if (x==3742) else 'lawngreen'if (x==3143) else 'lightcoral' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used BUSINESS INTELIGENCE Products on a regular basis\",orientation=270,yaxis = dict(title =\"BIG DATA Products\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=BI,layout=layout)\nfig.show()","968b0839":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q33' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nAML=go.Bar(y=labels,x=sorted(sizes),marker={'color':['gold' if (x==3274) else 'gold'if (x==4679) else 'gold'if (x==681)else 'magenta' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly used Automated Machine Learning Tools on a regular basis\",orientation=270,yaxis = dict(title =\"AML TOOLS\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=AML,layout=layout)\nfig.show()","0f57559b":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q35' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nTML=go.Bar(y=labels,x=sorted(sizes),marker={'color':['lightseagreen' if (x==3199) else 'lightseagreen'if (x==4732) else 'lightseagreen'if (x==371)else 'indigo' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly Used Tools to manage ML Experiments Used on a regular basis\",orientation=270,yaxis = dict(title =\"AML TOOLS\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=TML,layout=layout)\nfig.show()","76a5317f":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q36' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nDeploy=go.Bar(y=labels,x=sorted(sizes),marker={'color':['green' if (x==3434) else 'green'if (x==2317) else 'yellow' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly Used Tools to Deploy ML or Data Analysis\",orientation=270,yaxis = dict(title =\"D E P L O Y      TOOLS\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Deploy,layout=layout)\nfig.show()","654ede5f":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q37' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nPlatforms=go.Bar(y=labels,x=sorted(sizes),marker={'color':['darkred' if (x==7382) else 'darkred'if (x==4843) else 'crimson' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Mostly Used Platforms For Data Science Courses\",orientation=270,yaxis = dict(title =\"P L A T F O R M S\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=Platforms,layout=layout)\nfig.show()","7a29f31a":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q39' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFMS=go.Bar(y=labels,x=sorted(sizes),marker={'color':['red' if (x==7838) else 'red'if (x==6903) else 'cadetblue' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Favorite media sources that report on data science topics\",orientation=270,yaxis = dict(title =\"P L A T F O R M S\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FMS,layout=layout)\nfig.show()","559a760e":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q26' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFCMP=go.Bar(y=labels,x=sorted(sizes),marker={'color':['darkorange' if (x==5236) else 'darkorange'if (x==5146) else 'fuchsia' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Future Preferrable Cloud Computing Platforms\",orientation=270,yaxis = dict(title =\"Cloud Computing P L A T F O R M S\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FCMP,layout=layout)\nfig.show()","1d1d9e53":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q27' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFCMP=go.Bar(y=labels,x=sorted(sizes),marker={'color':['darkorange' if (x==2650) else 'darkorange' if (x==3252) else 'darkorange' if (x==949) else 'burlywood' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Preferable Future Cloud Computing Products\",orientation=270,yaxis = dict(title =\"Cloud Computing P R O D U C T S\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FCMP,layout=layout)\nfig.show()","fb28fa39":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q28' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFMLP=go.Bar(y=labels,x=sorted(sizes),marker={'color':['beige' if (x==2838) else 'beige' if (x==3382) else 'beige' if (x==612) else 'blue' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Preferrable Future Machine Learning Products\",orientation=270,yaxis = dict(title =\"ML P R O D U C T S\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FMLP,layout=layout)\nfig.show()","1acdc376":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q29' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFBDP=go.Bar(y=labels,x=sorted(sizes),marker={'color':['peru' if (x==4101) else 'peru' if (x==3064) else  'teal' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Preferrable Future BIG DATA Products\",orientation=270,yaxis = dict(title =\"BIG DATA P R O D U C T S\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FBDP,layout=layout)\nfig.show()","9bbeb266":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q31' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFBIT=go.Bar(y=labels,x=sorted(sizes),marker={'color':['olivedrab' if (x==3742) else 'olivedrab' if (x==3143) else 'mistyrose'  for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Preferrable Future BUSINESS INTELIGENCE Products\",orientation=270,yaxis = dict(title =\"BI TOOLS\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FBIT,layout=layout)\nfig.show()","8f239251":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q33' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFAMLT=go.Bar(y=labels,x=sorted(sizes),marker={'color':['rebeccapurple' if (x==3274) else 'powderblue'  for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Preferrable Future Automated ML Tools\",orientation=270,yaxis = dict(title =\"AML TOOLS\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FAMLT,layout=layout)\nfig.show()","5824feda":"labels=[]\nsizes=[]        \nfor col in df.columns:\n        if 'Q34' in col:\n            labels.extend(df[col].value_counts().reset_index()['index'].tolist())\n            sizes.extend(df[col].value_counts().reset_index()[col].tolist())\nFSAMLT=go.Bar(y=labels,x=sorted(sizes),marker={'color':['thistle' if (x==2479) else 'thistle' if (x==2752) else 'thistle' if (x==361) else 'tomato' for x in sorted(sizes)]},orientation='h')\nlayout = Layout(\n    plot_bgcolor='rgba(0,0,0,0)',title = \"Preferrable Future Specific Automated ML Tools\",orientation=270,yaxis = dict(title =\"AML TOOLS\", automargin=True), xaxis = dict(title = 'Count')\n,template=\"plotly_dark\")\nfig=go.Figure(data=FSAMLT,layout=layout)\nfig.show()","a5ed7683":"## Kaggle users(4277)have selected MATLAB as their regularly used Programming Languages followed by bash(3827-users),swift(3367-users)and so forth.","01bec558":"# Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most?","0a8ddfc2":"# On which platforms have you begun or completed data science courses? ","5334af4d":"# Who\/what are your favorite media sources that report on data science topics? ","5c3b2b0d":"## Which types of specialized hardware do you use on a regular basis? ","c9e051c5":"From the above Bar chart,we can clearly see that Tableau and Microsoft power BI were the Favourite Business intelligence tools among Kaggle users(based on the Survey conducted in 2020)followed by Google Data Studio so on and so forth.","f2b888b2":"BERT,gpt-3 were the regularly used ML algorithms followed by RNN(Recurrent neural networks),Generative Adversarial Networks,CNN(Convolution neural networks)and so forth.","2faffcd5":"## Mostly used Visulaization Libraries used kaggle Users on a regular basis were Leaflet\/folium,Geoplotlib,Bokeh and so forth.","eda8c5c3":"# What programming language would you recommend an aspiring data scientist to learn first? ?","82bb5431":"## GPT-3,BERT,XLnet were the regularly used NLP methods on a regular basis.","0a5159f8":"# In which country do you currently reside?","ef5ca633":"# What is the highest level of formal education that you have attained or plan to attain within the next 2 years?","710912f9":"## Majority Of the Kaggle users(4546) have (3-5)years of experience Closely followed by 4505 users Falls in between 1-2years. ","e523c4e1":"MATLAB,VIM,Sublime Text were the IDE'S used by kaggle users on a regular Basis.Least count is on Jupyter IDE.","32fa3a38":"# Which of the following business intelligence tools do you use most often? ","d226ecc0":"# Which of the following cloud computing platforms do you use on a regular basis? ","57215431":"## From the above Bar plot,we can find that most of the Kaggle users were between (25-29)Age    Groups Followed by (22-24),(18-21) and so forth.","df67da9b":"## Most of them selected Google Cloud App Engine as Future Preferrable Cloud Computing roducts Followed by Google Cloud Run.","ac3926a1":"## Full ML Auto Pipelines like Google Cloud,H20 Driveless AI were selected by kaggle users as Future preferrable Automated ML Tools.","f7a1e801":"## What data visualization libraries or tools do you use on a regular basis?  ","37f060a1":"RStudio,Jupyterlab(6107-users) and Statistical tools like (MS Excel.Google Sheets)were the primary used tools for Data Analysis by Kaggle Users","77c1ebbe":"# For how many years have you been writing code and\/or programming?","83a5ad49":"## Mostly used Bigdata products among kaggle users were MYSQL(764-users selected it)followed by PostgreSQL(521users)and lowest one is Google cloud firestore(47).","7aca2ff6":"# ****Let's start Visualizing the DATA ****","863e8d04":"# What is the size of the company where you are employed?","4f3848bd":"## Mostly used ML products also belongs to Google(Products like Cloud Vision AI,Natural language,ML Engine)Followed by Microsoft Azure cognitive services and Amazon sage maker.","62d0f412":"## Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis? ","7bd39eee":"## Most of them selected Tencen Cloud as Future Preferrable Cloud Computing Platforms Followed by Alibaba Cloud.","6726a179":"# Which categories of computer vision methods do you use on a regular basis?  ","20714618":"Nearly (36%)of the kaggle users were employed in a Firm where it consist of 0-49 employees(Employee size of the Firm).I think they are working in the Startups.","4a40458b":"# **What is your age (# years)?****\n","15271d96":"## most of them selected Automated Machine Learning Pipe lines like Google Cloud Auto ML,H20 Driveless AI.","096c73b8":"# Which of the following machine learning frameworks do you use on a regular basis?","dc5a2d70":"## Databricks collaborative Notebooks was the mostly used nootebooks on a regular basis by kaggle users.","c3dad40d":"# What type of computing platform do you use most often for your data science projects?","83ca68af":"## If you Liked my Visual Analysis please UPVOTE\ud83d\udd3c\u2714\ufe0f.Kaggel Survey 2020 Analysis has Comes to an end.See you Again Until Next Time\ud83d\ude03\ud83d\udc4b \ud83d\udc4b \ud83d\udc4b .  ","9b1ec20f":"# Which of the following integrated development environments (IDE's) do you use on a regular basis?","72274b15":"## Google products were selected as Future preferable BIG DATA products by Kaggle Users followed by Amazon,Microsoft,IBM so on and so forth.","b224dad9":"# Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?","d8853cf2":"## Shiny,Colab,Kaggle  were the mostly used Public Platforms used by Kaggle users to deploy Machine Learning Applications. ","5e6422d0":"## Mostly used cloud computing platforms among kaggle users were Tencent cloud,Alibaba Cloud,VMware Cloud so on and so forth.","9b245453":"## Automated MAchine Learning Tools like MLbox,Xcessiv,Auto_ml,Auto-sklearn were the future preferrable Automated ML Tools by kaggle users.","f333aa08":"# Current Status Of Kaggle Users?","8ea9fa24":"# What is the primary tool that you use at work or school to analyze data? ","0e90dbcd":"## Mostly used BIG DATA Products among kaggle users were Google cloud Firestore,Cloud SQL,Cloud Big query followed by Microsoft and Amazon products.","788f7f84":"## Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis? ","7f2fe549":"## Nearly 12050 kaggle Users have never used TPU's and 2112 users have used TPU's 2-5times followed by 1922 users mentioned that they have used TPU's once in their Data Science Projects.","b0e4ce24":"# Which of the following natural language processing (NLP) methods do you use on a regular basis?","a07bc331":"# Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years?","944af61b":"# In the next 2 years, do you hope to become more familiar with any of these specific machine learning products?","ffe900c2":"# Do you use any of the following machine learning products on a regular basis? ","1483d69e":"# Which of the following ML algorithms do you use on a regular basis?","56890945":"# Which categories of automated machine learning tools (or partial AutoML tools) do you hope to become more familiar","86b2fad5":"# Which of the following hosted notebook products do you use on a regular basis? ","b190ecf0":"# What programming languages do you use on a regular basis?","e7268081":"## SAP Analytics cloud,Sisense,Alteryx were the Future preferable BUSINESS INTELLIGENCE Tools preferred by Kaggle Users. ","d31d1c42":"## Majority of the kaggle users have equally selected GAN,VAE,VGG,inception,RestNet,NASNet,Efficient,etc and so forth.","e8a4fc52":"# Does your current employer incorporate machine learning methods into their business?","18e28f46":"## Slack communities acted as Favourite Media Platform to discuss Data Science Topics followed by Journal Publications and so forth.","8a4d7ff4":"## TPUs and GPUs were the mostly used Hardwares by kaggle users.","3c99fb7f":"# Approximately how many times have you used a TPU (tensor processing unit)?","9b576ffa":"## Where do you publicly share or deploy your data analysis or machine learning applications?","47f10d27":"## Google products were selected as Future preferable Machine Learning products by Kaggle Users.","e557cbbd":"Nearly 21% have said that,they are exploring ML methods ,so there are chances that they might put ML models into production.20% have never used ML methods. ","73492216":"## Most of the Kaggle Users have attained University Degree or doing University Courses Right now.Closely Followed by Cloud-certification programs From AWS,Azure.Majority of them have taken Data Science Courses from LinkedIn Learning,Udemy,Udacity,Fast.ai,DataCamp and So forth.","691a9a8f":"# Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services?","b07a7ed5":"## From the above Bar Plot, we can clearly see that majority of the kaggle users prefer PYTHON(\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\ud83d\udc0d)-71% as their First Preferable language to recommend Aspiring Data Scientist.","5a2c4357":"# Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you hope to become more familiar with in the next 2 years? ","8f94e82e":"## JAX framework preferred by (6192-users) followed by tidy models,caret and so forth.","2ee91e8a":"# What is your current yearly compensation (approximate $USD)?","dfd61b4b":"# In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products?","1bc52a80":"## Domino Model Monitor was used by most of the kaggle users used it as a tool to manage ML Experiments","259ce757":"## From the above pie chart,we can clearly see that Nearly 20percent(19.8)have 0-999Dollars compensations per annum.","bde1a6c9":"## Approximately (30%) Of the Kaggle Users belongs to MY COUNTRY(INDIA),followed by USA and Brazil.","d88a9bf0":"# Do you use any of the following cloud computing products on a regular basis?","b45720d5":"# Do you use any tools to help manage machine learning experiments?","a0a9d479":"## I am a newbie\ud83d\ude03in Data Science\ud83d\udca1.I have used Basic tools like Pandas,Numpy,Seaborn and        Plotly to Perform Visual Analysis on this Survey Dataset.\n# **Import necessary Libraries to Perform Visualization Analysis on Kaggle       2020 DATA SURVEY**","345656df":"SAP Analytics cloud,Sisense,Alteryx finds place in the Top Three of the Survey Conducted by Kaggle.","449ad4dd":"# Which of the following business intelligence tools do you use on a regular basis?","cc94c535":"Most of the Kaggle users(Nearly-31%) have under 1 year experience of using ML methods followed by 17% kaggle users have 1-2years of experience and so forth.","737ecf70":"# From the above PIE(\ud83e\udd67\ud83e\udd67)chart,we can clearly see that, A big PAC MAN(78%)Eating others.Majority of the Users preferred Laptops or PC's as the  Computing Platform For Data Science Projects.","f8659961":"## Nearly 40.2% of the kaggle users have attained Bachelor's degree or Doing it now.Closely followed by Master's degree.","9f3fd52d":"## Nearly 37% kaggle users have never spent any money on ML\/cloud computing services","046b0c53":"# For how many years have you used machine learning methods?","bcc1ddcd":"### The Kaggle Survey-2020 Count tells us that most of the Kaggle users were Man(15789-users).","ab6fedd9":"## From teh above Graph we can say that most of the kaggle users are Students Followed by Data Scientist and Software Engineer.","963626b0":"# Which specific automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with?","eb7b4329":"# What is your gender? - Selected Choice","974a7356":"## From the Bar plot ,we can clearly see that Mostly used cloud computing products belongs to Google(cloud App Engine,RUn,Cloud Functions,Compute Engine)Followed by Microsoft Azure Services."}}