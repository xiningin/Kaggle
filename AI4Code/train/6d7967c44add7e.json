{"cell_type":{"94aee72f":"code","22d50992":"code","78d8afd9":"code","d7f47d3f":"code","540a4262":"code","3e49c43e":"code","aea6a132":"code","5705e1ae":"code","825821a7":"code","bc89f65b":"code","aae447e0":"code","c2731108":"code","ce85826a":"markdown","69363cd4":"markdown","0a5e5dcb":"markdown","79cb52ad":"markdown"},"source":{"94aee72f":"import tensorflow as tf\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tensorflow import keras","22d50992":"class myCallback(tf.keras.callbacks.Callback):\n        def on_epoch_end(self, epoch, logs={}):\n            if(logs.get('accuracy')>0.95):\n                print(\"\\nReached 95% accuracy so cancelling training!\")\n                self.model.stop_training = True","78d8afd9":"mnist = tf.keras.datasets.fashion_mnist","d7f47d3f":"(training_images, training_labels), (test_images, test_labels) = mnist.load_data()\ncallbacks = myCallback()","540a4262":"training_images=training_images.reshape(60000, 28, 28, 1)\ntraining_images=training_images \/ 255.0\ntest_images = test_images.reshape(10000, 28, 28, 1)\ntest_images=test_images\/255.0","3e49c43e":"model = tf.keras.models.Sequential([\n                                    tf.keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(28, 28, 1)),\n                                    tf.keras.layers.MaxPooling2D(2, 2),\n                                    tf.keras.layers.Conv2D(32, (3,3), activation='relu'),\n                                    tf.keras.layers.MaxPooling2D(2, 2),\n                                    tf.keras.layers.Flatten(),\n                                    tf.keras.layers.Dense(128, activation='relu'),\n                                    tf.keras.layers.Dense(10, activation='softmax')\n                                    ])","aea6a132":"model.compile(\n                optimizer = 'adam',\n                loss = 'sparse_categorical_crossentropy',\n                metrics = 'accuracy'\n              )","5705e1ae":"model.summary()","825821a7":"model.fit(\n            training_images,\n            training_labels,\n            epochs=20,\n            callbacks=[callbacks]\n          )","bc89f65b":"model.evaluate(test_images, test_labels)","aae447e0":"print(test_labels[:100])","c2731108":"f, axarr = plt.subplots(3,4)\nFIRST_IMAGE=0\nSECOND_IMAGE=7\nTHIRD_IMAGE=25\nCONVOLUTION_NUMBER = 1\nfrom tensorflow.keras import models\nlayer_outputs = [layer.output for layer in model.layers]\nactivation_model = tf.keras.models.Model(inputs = model.input, outputs = layer_outputs)\nfor x in range(0,4):\n  f1 = activation_model.predict(test_images[FIRST_IMAGE].reshape(1, 28, 28, 1))[x]\n  axarr[0,x].imshow(f1[0, : , :, CONVOLUTION_NUMBER], cmap='inferno')\n  axarr[0,x].grid(False)\n  f2 = activation_model.predict(test_images[SECOND_IMAGE].reshape(1, 28, 28, 1))[x]\n  axarr[1,x].imshow(f2[0, : , :, CONVOLUTION_NUMBER], cmap='inferno')\n  axarr[1,x].grid(False)\n  f3 = activation_model.predict(test_images[THIRD_IMAGE].reshape(1, 28, 28, 1))[x]\n  axarr[2,x].imshow(f3[0, : , :, CONVOLUTION_NUMBER], cmap='inferno')\n  axarr[2,x].grid(False)","ce85826a":"I upgrade the last notebook from [HERE](https:\/\/www.kaggle.com\/eng0mohamed0nabil\/computer-vision-with-fashion-mnist) \nwith convoultional and polling layer \n\n\n---\n\n\n\n---\n\n**My target is :**\n\n1.   Stopping training automatically  after reaching the required accuracy ( **95%** )using callbacks class\n2.  Visualizing the Convolutions and Pooling\n\n\n \n\n\n","69363cd4":"<a href=\"https:\/\/colab.research.google.com\/github\/mohnabil2020\/machine_learning\/blob\/master\/Computer_vision_with_Fashion_MNIST_(UPGRADED).ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","0a5e5dcb":"**Visualizing the Convolutions and Pooling :**\n\n\n---\n\n","79cb52ad":"**Each training and test example is assigned to one of the following labels:**\n\n![alt text](https:\/\/pravarmahajan.github.io\/assets\/images\/fashion-MNIST\/labels_table.png)"}}