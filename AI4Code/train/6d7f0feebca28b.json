{"cell_type":{"eb816563":"code","a5e8904b":"code","8ecc9f9b":"code","21d450ab":"code","34169ea9":"code","0219e4d1":"code","2ef78ef0":"code","9cadf937":"code","ec0bbdc8":"code","3f1b6ae9":"code","5483c336":"markdown","48b3e1ae":"markdown","32ef742d":"markdown"},"source":{"eb816563":"# Julia setup credit: @marketneutral, https:\/\/www.kaggle.com\/marketneutral\/julia-live-on-kaggle\n# Julia version of baseline notebook: https:\/\/www.kaggle.com\/junhyeok99\/catboost-baseline\nfrom datetime import datetime\nimport numpy as np\nfrom IPython.display import Image, display","a5e8904b":"%%bash\n\nJULIA_VERSION=\"1.7.1\"\nJULIA_PACKAGES=\"\"\"DataFrames CSV MLLabelUtils MLJ EvoTrees\n                  MLJXGBoostInterface NearestNeighborModels \n                  MLJLinearModels LightGBM\n                \"\"\"\n\nJULIA_VER=`cut -d '.' -f -2 <<< \"$JULIA_VERSION\"`\nBASE_URL=\"https:\/\/julialang-s3.julialang.org\/bin\/linux\/x64\"\nURL=\"$BASE_URL\/$JULIA_VER\/julia-$JULIA_VERSION-linux-x86_64.tar.gz\"\nwget -nv $URL -O \/tmp\/julia.tar.gz\ntar -x -f \/tmp\/julia.tar.gz -C \/usr\/local --strip-components 1\nrm \/tmp\/julia.tar.gz\nfor PKG in `echo $JULIA_PACKAGES`; do\n    echo \"Installing Julia package $PKG...\"\n    julia -e 'using Pkg; pkg\"add '$PKG'\"'\ndone","8ecc9f9b":"# we set the environment variable for number of threads\n\nimport os\nos.environ['JULIA_NUM_THREADS'] = \"4\"","21d450ab":"%%time\n!pip install --quiet julia\nimport julia\nfrom julia.api import Julia\njulia.install()\njl = Julia(compiled_modules=False)  # cannot use precompiled packages with pyjulia on linux :-(\n# https:\/\/pyjulia.readthedocs.io\/en\/latest\/troubleshooting.html\n%load_ext julia.magic","34169ea9":"%%julia\n\nusing Base.Threads\nprintln(nthreads())","0219e4d1":"%%julia \nusing CSV\nusing DataFrames\nusing Dates\nusing MLLabelUtils\nusing MLJ","2ef78ef0":"%%julia\n# Import data\ninput_dir = \"..\/input\/tabular-playground-series-jan-2022\"\ndf_train = CSV.File(\"$input_dir\/train.csv\") |> DataFrame\ndf_test = CSV.File(\"$input_dir\/test.csv\") |> DataFrame\nfirst(df_train, 5)","9cadf937":"%%julia\n# preprocess data\ndf_all = vcat(df_train, df_test, cols=:union)\n\ndf_all[:, \"year\"] = year.(df_all[:, \"date\"])\ndf_all[:, \"month\"] = month.(df_all[:, \"date\"])\ndf_all[:, \"day\"] = day.(df_all[:, \"date\"])\ndf_all[:, \"dayofweek\"] = dayofweek.(df_all[:, \"date\"])\ndf_all[:, \"dayofmonth\"] = dayofmonth.(df_all[:, \"date\"])\ndf_all[:, \"dayofyear\"] = dayofyear.(df_all[:, \"date\"])\n\nselect!(df_all, Not([\"row_id\", \"date\", \"num_sold\"]));\n\nfor col in [\"country\", \"product\", \"store\"]\n    classes = length(unique(df_all[:, col]))\n    labels = convertlabel(LabelEnc.Indices(Float32, classes), df_all[:, col])\n    select!(df_all, Not(col));\n    df_all[:, col] = labels\nend\n    \nn_train = size(df_train, 1)\nx_train = df_all[1:n_train, :]\nx_test = df_all[n_train+1:end, :]\ny_train = df_train[:, \"num_sold\"]\n\nfirst(x_train, 5)","ec0bbdc8":"%%julia\n# load models\n# This is extra slow in Kaggle, because none of the packages are precompiled \nEvoTreeRegressor = @load EvoTreeRegressor\nXGBoostRegressor = @load XGBoostRegressor\nLGBMRegressor = @load LGBMRegressor\nKNNRegressor = @load KNNRegressor pkg=NearestNeighborModels\nRidgeRegressor = @load RidgeRegressor pkg=MLJLinearModels\nElasticNetRegressor = @load ElasticNetRegressor pkg=MLJLinearModels\n\nstack = Stack(;metalearner=RidgeRegressor(lambda=0.1),\n                resampling=CV(),\n                constant=ConstantRegressor(),\n                elastic=ElasticNetRegressor(),\n                knn=KNNRegressor(),\n                evo=EvoTreeRegressor(),\n                xgb=XGBoostRegressor(),\n                lgb=LGBMRegressor())\n\n# fit model\nmach = machine(stack, x_train, y_train)\nfit!(mach; verbosity=0)\n\n# make predictions on test data\npreds = predict(mach, x_test)","3f1b6ae9":"%%julia\n# Submit predictions\ndf_sub = CSV.File(\"$input_dir\/sample_submission.csv\") |> DataFrame\nselect!(df_sub, Not(\"num_sold\")) # drop sample num_sold \ndf_sub[:, \"num_sold\"] = preds\nCSV.write(\"submission.csv\", df_sub)","5483c336":"# Install Julia","48b3e1ae":"# Run Julia Notebook in Cells","32ef742d":"# Run Julia Code"}}