{"cell_type":{"3d2a5918":"code","a7469647":"code","2516dcac":"code","6902d957":"code","93eb709d":"code","0a01e55c":"code","7ef32f63":"code","cd106338":"code","018eae04":"code","66efdf99":"code","76b369cf":"code","89b3a52d":"code","c59e4ecb":"code","98b46899":"markdown"},"source":{"3d2a5918":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.ensemble import RandomForestRegressor\nfrom matplotlib import pyplot as plt\nplt.rcParams['figure.figsize'] = (10,6)\npd.set_option('max_column', 100)\npd.set_option('max_row', 200)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a7469647":"## Preprocess the data\ndef preprocess (dataset):\n    processed_dataset = dataset.copy()\n    processed_dataset['d-1']=processed_dataset['Revenue'].shift(periods=1)\n    processed_dataset['d-2']=processed_dataset['Revenue'].shift(periods=2)\n    processed_dataset['d-3']=processed_dataset['Revenue'].shift(periods=3)\n    processed_dataset['d-4']=processed_dataset['Revenue'].shift(periods=4)\n    return processed_dataset","2516dcac":"## Split train and test\ndef split_train_test(dataset, end_of_training_date):\n    \n    \n    return training_data, testing_data","6902d957":"## Split label and predictor\ndef split_label_and_predictor(train_or_test_data):\n    \n    # x_data = \n    # y_data = \n    \n    return x_data, y_data","93eb709d":"def fit(x_train, y_train):\n    regr = RandomForestRegressor()\n    regr.fit(x_train, y_train)\n    return regr","0a01e55c":"def predict(est, x_test):\n    y_pred = est.predict(x_test)\n    return y_pred","7ef32f63":"df = pd.read_csv('\/kaggle\/input\/uisummerschool\/Online_sales.csv')\ndf['Date'] = df['Date'].astype(str)\ndf['Date'] = pd.to_datetime(df['Date'])\ndf.head()","cd106338":"df_rev = df.groupby('Date')['Revenue'].sum().reset_index(name='Revenue')\nadd_data = [['2017-12-01', 0], ['2017-12-02', 0], ['2017-12-03', 0],\n            ['2017-12-04', 0], ['2017-12-05', 0], ['2017-12-06', 0],\n            ['2017-12-07', 0], ['2017-12-08', 0], ['2017-12-09', 0],\n            ['2017-12-10', 0], ['2017-12-11', 0], ['2017-12-10', 0],\n            ['2017-12-13', 0], ['2017-12-14', 0]\n           ] \n  \n# Create the pandas DataFrame \nadd_data_df = pd.DataFrame(add_data, columns = ['Date', 'Revenue']) \nadd_data_df['Date'] = add_data_df['Date'].astype(str)\nadd_data_df['Date'] = pd.to_datetime(add_data_df['Date'])\n\ndf_rev = df_rev.append(add_data_df)\ndf_rev.head()","018eae04":"## Preprocess\ndaily_online_revenue = preprocess(df_rev).set_index('Date')\ndaily_online_revenue.head(10)\n","66efdf99":"## Split\ntraining_data, test_data = split_train_test(daily_online_revenue,\"2017-11-30\")\nX_train, y_train = split_label_and_predictor(training_data)\nX_test, y_test = split_label_and_predictor(test_data)","76b369cf":"# Fit the model\nmodel = fit(X_train, y_train)","89b3a52d":"# Predict the model\na = list(daily_online_revenue.iloc[-5:, :]['Revenue'])\nfor i in range(0, 5):\n    temp = a[-5:]\n    y = predict(model, [temp])\n    a.append(y[0])","c59e4ecb":"# Save the result to CSV\n\n# Your code goes here\n","98b46899":"**Main Code**"}}