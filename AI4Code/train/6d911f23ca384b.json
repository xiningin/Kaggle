{"cell_type":{"814c6762":"code","b1fe92e2":"code","8645e147":"code","e8ba62d5":"code","89c17678":"code","affb9619":"code","0bbf6669":"code","c2521915":"code","e37e5ae0":"code","017e6a7b":"code","b27466d4":"code","104fee26":"code","5ded1739":"code","4be777ec":"code","5f10e03e":"code","c2df0fdf":"code","3f358f83":"code","d6507c7d":"code","fcdb77d9":"code","fae33958":"code","5c3846d1":"code","a2ee419c":"code","5dbdd5e9":"code","1313b89c":"code","0cbd084c":"code","a0868319":"code","97d4423e":"code","19e96f94":"code","c17560a7":"code","2bec8a91":"code","fc14a48b":"code","c75b61cc":"code","81bc2576":"code","29454ba7":"code","0ddb4a39":"code","fb09f533":"code","b9d14415":"code","cd4d4c02":"code","e02c40dc":"code","51611cef":"code","4aad44fe":"code","0a139e37":"code","d71f19e3":"code","bafbf0ed":"code","c7b60776":"code","9c14e3e0":"code","b9f0e277":"code","0fa3bcf2":"code","e698e6b2":"code","de161c7f":"code","6673ccd5":"code","00e39935":"code","0e5f426d":"code","5b822b6a":"code","24278ca2":"code","44d4f472":"code","1c6ff1b1":"code","99096674":"code","1fbcaa88":"code","55bd985e":"code","d979c55e":"code","19fa5bac":"markdown","3a1349fe":"markdown","a5aa9d79":"markdown","9b70db23":"markdown","60490bad":"markdown","8db75d09":"markdown","c204ce27":"markdown","6afe617b":"markdown","ce11c051":"markdown","2818ffe2":"markdown","234a5ae3":"markdown","6552592d":"markdown","b6361222":"markdown","2b2c54d8":"markdown","05445751":"markdown","25977b8b":"markdown","48d6c713":"markdown","371377e7":"markdown","5f298923":"markdown","030a6d41":"markdown","eb73e70c":"markdown","ab234e9e":"markdown","4a197875":"markdown","80dc5452":"markdown","f230ee01":"markdown","6c9e13ff":"markdown","c61b1b00":"markdown","1222ce59":"markdown","ec4b623b":"markdown","666e5582":"markdown","c3409ea4":"markdown","16db7ad5":"markdown","740cd9da":"markdown","41bc41ac":"markdown","ba89ef65":"markdown"},"source":{"814c6762":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nfrom IPython.display import Image,display_svg,SVG\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor,RandomForestClassifier \nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.model_selection import cross_val_score, GridSearchCV, train_test_split\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import recall_score, accuracy_score\nfrom sklearn import set_config\nset_config(display='diagram')\nimport warnings\nwarnings.filterwarnings(\"ignore\")","b1fe92e2":"data = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv') \ndata.sample(10)","8645e147":"data.shape","e8ba62d5":"data.info()","89c17678":"for col in data.columns:\n    plt.hist(data[col],edgecolor='black')\n\n    plt.title(col+ \" Distribution\")\n    plt.xlabel(col)\n    plt.ylabel('frequency')\n\n    plt.show()","affb9619":"data.describe()","0bbf6669":"# Finding correlation between the features\ndata.corr()","c2521915":"data.drop(['BloodPressure','SkinThickness'],axis=1,inplace=True)\ndata.sample(5)","e37e5ae0":"# Outliers in Pregnancies column\n\nsns.boxplot(data['Outcome'],y=data['Pregnancies']);","017e6a7b":"# Outliers in glucose levels\nsns.boxplot(data['Outcome'],y=data['Glucose']);","b27466d4":"# Outliers in Insulin levels\n\nsns.boxplot(data['Outcome'],y=data['Insulin']);","104fee26":"# Outliers in BMI\n\nsns.boxplot(data['Outcome'],y=data['BMI']);","5ded1739":"# Outliers in Age\n\nsns.boxplot(data['Outcome'],y=data['DiabetesPedigreeFunction']);","4be777ec":"# Outliers in Age\n\nsns.boxplot(data['Outcome'],y=data['Age']);","5f10e03e":"p25_preg = data['Pregnancies'].quantile(0.25)\np75_preg = data['Pregnancies'].quantile(0.75)\niqr_preg = p75_preg - p25_preg\n# We dont want calculated upper range. We know that pregnancies more than 7 or 8 is inhuman.\nupper_preg = p75_preg + 0.5 * iqr_preg\nlower_preg = p25_preg - 1.5 * iqr_preg","c2df0fdf":"data[data['Pregnancies']>upper_preg]","3f358f83":"data[data['Pregnancies']<lower_preg]","d6507c7d":"data['Pregnancies'] = np.where(data['Pregnancies']>upper_preg, upper_preg, data['Pregnancies'])\n\n# Check if there are any outliers\ndata[data['Pregnancies']>upper_preg]","fcdb77d9":"p25_glu = data['Glucose'].quantile(0.25)\np75_glu = data['Glucose'].quantile(0.75)\niqr_glu = p75_glu - p25_glu\nupper_glu = p75_glu + 1.5 * iqr_glu\nlower_glu = p25_glu - 1.5 * iqr_glu","fae33958":"data[data['Glucose']>upper_glu]","5c3846d1":"data[data['Glucose']<lower_glu]","a2ee419c":"data = data[data['Glucose']>lower_glu]\ndata.shape","5dbdd5e9":"p25_in = data['Insulin'].quantile(0.25)\np75_in = data['Insulin'].quantile(0.75)\niqr_in = p75_in - p25_in\nupper_in = p75_in + 1.5 * iqr_in\nlower_in = p25_in - 1.5 * iqr_in","1313b89c":"print(data[data['Insulin']>upper_in].shape)\ndata[data['Insulin']>upper_in]","0cbd084c":"print(data[data['Insulin']<lower_in].shape)\ndata[data['Insulin']<lower_in]","a0868319":"data['Insulin'] = np.where(data['Insulin']>upper_in, upper_in, data['Insulin'])\nprint(data.shape)\n# Check if there are any outliers\ndata[data['Insulin']>upper_in]","97d4423e":"upper_bmi = 55\nlower_bmi = 15","19e96f94":"print(data[data['BMI']>upper_bmi].shape)\ndata[data['BMI']>upper_bmi]","c17560a7":"print(data[data['BMI']<lower_bmi].shape)\ndata[data['BMI']<lower_bmi]","2bec8a91":"data = data[data['BMI']>lower_bmi]\ndata.shape","fc14a48b":"data = data[data['BMI']<upper_bmi]\ndata.shape","c75b61cc":"p25_dpf = data['DiabetesPedigreeFunction'].quantile(0.25)\np75_dpf = data['DiabetesPedigreeFunction'].quantile(0.75)\niqr_dpf = p75_dpf - p25_dpf\nupper_dpf = p75_dpf + 1.5 * iqr_dpf\nlower_dpf = p25_dpf - 1.5 * iqr_dpf","81bc2576":"print(data[data['DiabetesPedigreeFunction']>upper_dpf].shape)\ndata[data['DiabetesPedigreeFunction']>upper_dpf]","29454ba7":"print(data[data['DiabetesPedigreeFunction']<lower_dpf].shape)\ndata[data['DiabetesPedigreeFunction']<lower_dpf]","0ddb4a39":"data['DiabetesPedigreeFunction'] = np.where(data['DiabetesPedigreeFunction']>upper_dpf, upper_dpf, data['DiabetesPedigreeFunction'])\nprint(data.shape)\n# Check if there are any outliers\ndata[data['DiabetesPedigreeFunction']>upper_dpf]","fb09f533":"p25_age = data['Age'].quantile(0.25)\np75_age = data['Age'].quantile(0.75)\niqr_age = p75_age - p25_age\nupper_age = p75_age + 1.5 * iqr_age\nlower_age = p25_age - 1.5 * iqr_age","b9d14415":"print(data[data['Age']>upper_age].shape)\ndata[data['Age']>upper_age]","cd4d4c02":"print(data[data['Age']<lower_age].shape)\ndata[data['Age']<lower_age]","e02c40dc":"data['Age'] = np.where(data['Age']>upper_age, upper_age, data['Age'])\nprint(data.shape)\n# Check if there are any outliers\ndata[data['Age']>upper_age]","51611cef":"for col in data.columns:\n    plt.hist(data[col],edgecolor='black')\n\n    plt.title(col+ \" Distribution\")\n    plt.xlabel(col)\n    plt.ylabel('frequency')\n\n    plt.show()","4aad44fe":"data.describe()","0a139e37":"sns.scatterplot(data['Glucose'],data['Insulin'],hue=data['Outcome']);","d71f19e3":"def murammat(df):\n    \n    df_noisy1 = df[df['Insulin'] == 0]\n    df_noisy1.drop(['Insulin'],axis=1,inplace=True)\n    df = df[df['Insulin'] > 0]\n    df_noisy2 = df[df['Insulin'] >= 300]\n    df_noisy2.drop(['Insulin'],axis=1,inplace=True)\n    df = df[df['Insulin'] < 300]\n    y = df.Insulin.values\n    df.drop(['Insulin'],axis=1,inplace=True)\n    X=df.values\n    sc_X = StandardScaler()\n    X=sc_X.fit_transform(X)\n    regressor = LinearRegression()\n    regressor.fit(X,y)\n    repaired1=regressor.predict(sc_X.transform(df_noisy1.values))\n    df_noisy1['Insulin'] = repaired1\n    repaired2=regressor.predict(sc_X.transform(df_noisy2.values))\n    df_noisy2['Insulin'] = repaired2\n    df_repaired = df_noisy1.append(df_noisy2)\n    df_repaired =df_repaired[['Pregnancies', 'Glucose', 'Insulin', 'BMI', 'DiabetesPedigreeFunction',\n       'Age', 'Outcome']]\n\n    return df_repaired\n","bafbf0ed":"data_repaired=murammat(data)\ndata = data[data['Insulin'] > 0]\ndata = data[data['Insulin'] < 300]\ndata = data.append(data_repaired)\nsns.scatterplot(data['Glucose'],data['Insulin'],hue=data['Outcome']);","c7b60776":"for col in data.columns:\n    plt.hist(data[col],edgecolor='black')\n\n    plt.title(col+ \" Distribution\")\n    plt.xlabel(col)\n    plt.ylabel('frequency')\n\n    plt.show()","9c14e3e0":"data.shape","b9f0e277":"data","0fa3bcf2":"df=data[data.Outcome == 1]","e698e6b2":"data[data.Outcome == 0].shape","de161c7f":"dataset=data[data.Outcome == 0].sample(261)\ndataset.shape","6673ccd5":"dataset=dataset.append(df)\ndataset.shape","00e39935":"dataset=dataset.sample(frac=1).reset_index(drop=True)\ndataset","0e5f426d":"for col in dataset.columns:\n    plt.hist(dataset[col],edgecolor='black')\n\n    plt.title(col+ \" Distribution\")\n    plt.xlabel(col)\n    plt.ylabel('frequency')\n\n    plt.show()","5b822b6a":"X = dataset.iloc[:,:-1].values\ny = dataset.iloc[:,-1].values","24278ca2":"rf1 = RandomForestClassifier(n_estimators=50, criterion='gini',max_depth=4)\ndiabetes_diagnosis = Pipeline([\n    ('rf1',rf1)\n])","44d4f472":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)","1c6ff1b1":"diabetes_diagnosis.fit(X_train,y_train)","99096674":"y_pred=diabetes_diagnosis.predict(X_test)","1fbcaa88":"y_pred","55bd985e":"accuracy_score(y_test,y_pred)","d979c55e":"recall_score(y_test,y_pred)","19fa5bac":"***This is a noisy\/obsolete data. We should trim it***","3a1349fe":"***Change in stats of the data:***","a5aa9d79":"## Distribution of data","9b70db23":"### Dealing with outliers in Pregnancies column","60490bad":"***The primary factors which play a major role in Diabetes diagnosis are number of pregnancies, blood glucose level,insulin, BMI, DiabetesPedigreeFunction and age of the patient***","8db75d09":"***Almost all the columns are skewed. We need to try to bring the data into normal form.***","c204ce27":"## Distribution of data post outlier detection ","6afe617b":"***Since there are 29 outliers. It's obvious that we will cap them***","ce11c051":"## Dealing with outliers in BMI column","2818ffe2":"## Outlier Detection ","234a5ae3":"***We need to deal with outliers in columns like Pregnancies, Glucose, Insulin, BMI, DiabetesPedigreeFunction and Age***","6552592d":"## Building deployment ready, secure pipeline","b6361222":"## Content","2b2c54d8":"We have chosen **max_depth = 4** and **n_estimators= 50** because we want pretty high accuracy, **BUT** since we are dealing with **Diabetes Prediction**, we want even higher Recall. \n*We have to face the curse of precision-recall tradeoff*. We can't afford wrong prediction (False Negative) of a **Diabetic** patient","05445751":"***This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.***","25977b8b":"***Many instances in Insuline data are wrong. There has been mistake in taking survey. Some having insulin as 0 and on the other hand some having insulin 300+***\n","48d6c713":"*We can learn from the data found on UCI Machine Learning Repository which contains data on female patients at least 21 years old of Pima Indian heritage.*\n\n*We have 768 instances and the following 8 attributes:*\n\n- Number of times pregnant (preg)\n- Plasma glucose concentration a 2 hours in an oral glucose tolerance test (plas)\n- Diastolic blood pressure in mm Hg (pres)\n- Triceps skin fold thickness in mm (skin)\n- 2-Hour serum insulin in mu U\/ml (insu)\n- Body mass index measured as weight in kg\/(height in m)^2 (mass)\n- Diabetes pedigree function (pedi)\n- Age in years (age)\n\n*A particularly interesting attribute used in the study was the Diabetes Pedigree Function, pedi. It provided some data on diabetes mellitus history in relatives and the genetic relationship of those relatives to the patient. This measure of genetic influence gave us an idea of the hereditary risk one might have with the onset of diabetes mellitus. Based on observations in the proceeding section, it is unclear how well this function predicts the onset of diabetes.*","371377e7":"***The datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.***","5f298923":"## Context","030a6d41":"## Exploratory Data Analysis","eb73e70c":"***Blood pressure and skin thickness don't help much in prediction of diabetes. Hence, I would remove those features***","ab234e9e":"***Pregnancy column also contains outliers as we can see maximum value is 17. Number of pregnancies beyond 5-7 is inhuman.***","4a197875":"***Since there are 33 outliers. It's obvious that we will cap them***","80dc5452":"### Dealing with outliers in DiabetesPedigreeFunction column","f230ee01":"## Choice of algorithm\n\n- Random Forest\n\n***Since Random Forest Classifier algorithm is susceptible to variations in frequency distribution of categories, we need to feed equal number of Diabetic as well as non-diabetic patients data into the algorithm***","6c9e13ff":"***BMI has almost 14 outliers and we will remove them***","c61b1b00":"## Importing libraries and dataset","1222ce59":"# Diabetes diagnosing ","ec4b623b":"***As we can see there are many readings where glucose, skin thickness, insulin and BMI are 0. That is not possible. It means there are outliers present in the data. The decision tree algorithm is susceptible to outliers***","666e5582":"#### Capping the data in Pregnancies column","c3409ea4":"### Dealing with outliers in Insulin column","16db7ad5":"### Dealing with outliers in Glucose column","740cd9da":"### Dealing with outliers in Age column","41bc41ac":"## Distribution of data post EDA","ba89ef65":"***Since data in other columns of these outliers seem right, we won't trimm the data. Instead, we will cap them***"}}