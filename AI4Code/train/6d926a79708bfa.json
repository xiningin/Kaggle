{"cell_type":{"7cf1337b":"code","9143c633":"code","10f89c72":"code","95891f41":"code","b7d5169a":"code","0ebd336a":"code","fd45ad60":"code","d7a217b4":"code","bb38b549":"markdown","5d3e7cda":"markdown","39898fce":"markdown","6a108db7":"markdown","15ac0a78":"markdown","f8113396":"markdown","23a628c7":"markdown","e43c0640":"markdown","20347d4b":"markdown","a2432d0b":"markdown"},"source":{"7cf1337b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\n\ndata = pd.read_csv(\"..\/input\/did-it-rain-in-seattle-19482017\/seattleWeather_1948-2017.csv\")\ndata =data[~data.isin([np.nan, np.inf, -np.inf]).any(1)]\nprint(data.head())","9143c633":"data.drop([\"DATE\"],axis = 1,inplace = True)\n\nprint(data.head())","10f89c72":"t = data[data.RAIN == True]\nf = data[data.RAIN == False]\n\nplt.figure(1)\nplt.scatter(t.TMAX,t.TMIN,color=\"red\",label=\"TRUE\",alpha= 0.3)\nplt.scatter(f.TMAX,f.TMIN,color=\"green\",label=\"FALSE\",alpha= 0.3)\n\nplt.xlabel(\"TMAX\")\nplt.ylabel(\"TMIN\")\nplt.legend()\nplt.show()","95891f41":"data.RAIN = [1 if each == True else 0 for each in data.RAIN]\ny = data.RAIN.values\nx_data = data.drop([\"RAIN\"], axis = 1)","b7d5169a":"x = (x_data -np.min(x_data))\/ (np.max(x_data) - np.min(x_data))\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state=1)","0ebd336a":"knn = KNeighborsClassifier(n_neighbors = 2) \nknn.fit(x_train,y_train)\n\nprediction = knn.predict(x_test)","fd45ad60":"print(\"{} nn score {}\".format(2,knn.score(x_test,y_test)))","d7a217b4":"score_list=[]\nfor i in range(1,15):\n    knn2 = KNeighborsClassifier(n_neighbors = i)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\nplt.figure(2)    \nplt.plot(range(1,15),score_list)\nplt.ylabel(\" reliability scores\")\nplt.xlabel(\"k values\")\nplt.show()","bb38b549":"**Conclusion:**\nWe will see on our graph that the best k values for our model very close to 2 and we use 2 it means our model will look 2 nearest neighbours for predict it did rain or not ","5d3e7cda":"**6)**\nnow we create our model with sklearn library","39898fce":"**1)**\nIn first step we will import libaries and our dataset and we will see first 100 rows of our data also we will drop nan and infinity values from our dataframe\n","6a108db7":"**3)**\nNow we will make plotting TMAX column will be our x label and TMIN column will be our y label and of course Trues and Falses in RAIN column our values\n","15ac0a78":"**Intro:**\nIt is a kernel calculate the weather with K- Nearest Neighbour algorithm\n","f8113396":"**7)**\nLets print our score","23a628c7":"**5)**\nIt is the time make normalization(convert to values between 0-1 to protect weight coefficients) and split our datas to tests and trains\n","e43c0640":"**2)**\nSecond step we will drop DATE values ","20347d4b":"**8)**\nFinally lets find the best k value for our model and draw figure y label is reliability scores x values are k values between (1-15)","a2432d0b":"**4)**\nwe will change True values to 1 and false values to 0 for make easier predictions and define our features(x_data) and results(y) "}}