{"cell_type":{"7af5fcdb":"code","8c6c708e":"code","99d97aec":"code","bebef6df":"code","e35a7a98":"code","7d23b15e":"code","ee977daf":"code","9097a9be":"code","483c0e02":"code","9f457e2a":"code","a8ec88f9":"code","56c8dbb6":"code","7cf5181f":"markdown","0ee2eff9":"markdown","38efcef3":"markdown","f9c6111f":"markdown","0cab3487":"markdown","3081ca18":"markdown","30a6fbf9":"markdown","a32fd64d":"markdown","0c5b02d6":"markdown","ef1520ea":"markdown"},"source":{"7af5fcdb":"# Read in the data\nimport pandas as pd\nimport numpy as np\nhappiness2015 = pd.read_csv(\"..\/input\/world-happiness\/2015.csv\")\nhappiness2016 = pd.read_csv(\"..\/input\/world-happiness\/2016.csv\")\nhappiness2017 = pd.read_csv(\"..\/input\/world-happiness\/2017.csv\")\nhappiness2018 = pd.read_csv(\"..\/input\/world-happiness\/2018.csv\")\nhappiness2019 = pd.read_csv(\"..\/input\/world-happiness\/2019.csv\")\nhappiness2020 = pd.read_csv(\"..\/input\/world-happiness-reports\/World_Happiness_2020.csv\")","8c6c708e":"#Quick exploration of the data\n\nhappiness_list = [happiness2015,happiness2016,happiness2017,happiness2018,happiness2019,happiness2020]\nhappiness_d = []\nfor item in happiness_list:\n     happiness_loop = item.columns\n     size = len(happiness_loop)\n     happiness_d.append(happiness_loop)\n     print(\"Size: \"+str(size))\n     print(happiness_loop)\n\nfor item in range(len(happiness_d)):\n     for n_item in range(len(happiness_d[item])):\n         if item != len(happiness_d)-1:\n             if happiness_d[item][n_item] not in happiness_d[item+1]:\n                 print(happiness_d[item][n_item])","99d97aec":"#add the \"Region\" column to happiness2017\n\nhappiness2015.set_index(\"Country\", inplace=True)\nhappiness2017.set_index(\"Country\", inplace=True)\n\n# Use a for loop to iterate over the countries\nfor idx, row in enumerate(happiness2015.itertuples()):\n    try:\n        happiness2017.loc[row[0], \"Region\"] = happiness2015.loc[row[0]][\"Region\"]\n    except:\n        pass\n\n#confirm it worked\nhappiness2017.head(10)","bebef6df":"#add the region column to happiness2018\n\nhappiness2018.rename({\"Country or region\": \"Country\"}, axis=1, inplace=True)\n\nhappiness2018.set_index(\"Country\", inplace=True)\n\n# Use a for loop to iterate over the countries\nfor idx, row in enumerate(happiness2015.itertuples()):\n    try:\n        happiness2018.loc[row[0], \"Region\"] = happiness2015.loc[row[0]][\"Region\"]\n    except:\n        pass\n\n#confirm it worked\nhappiness2018.head(10)","e35a7a98":"#add the region column to happiness2019\n\nhappiness2019.rename({\"Country or region\": \"Country\"}, axis=1, inplace=True)\n\nhappiness2019.set_index(\"Country\", inplace=True)\n\n# Use a for loop to iterate over the countries\nfor idx, row in enumerate(happiness2015.itertuples()):\n    try:\n        happiness2019.loc[row[0], \"Region\"] = happiness2015.loc[row[0]][\"Region\"]\n    except:\n        pass\n\n#confirm it worked\nhappiness2019.head(10)","7d23b15e":"#add the region column to happiness2020\n\nhappiness2020.rename({\"Country name\": \"Country\"}, axis=1, inplace=True)\n\nhappiness2020.set_index(\"Country\", inplace=True)\n\n# Use a for loop to iterate over the countries\nfor idx, row in enumerate(happiness2015.itertuples()):\n    try:\n        happiness2020.loc[row[0], \"Region\"] = happiness2015.loc[row[0]][\"Region\"]\n    except:\n        pass\n\n#confirm it worked\nhappiness2020.head(10)","ee977daf":"#rename the Economy columns\nhappiness2015.rename({\"Economy (GDP per Capita)\": \"Economy\"}, axis=1, inplace=True)\nhappiness2016.rename({\"Economy (GDP per Capita)\": \"Economy\"}, axis=1, inplace=True)\nhappiness2017.rename({\"Economy..GDP.per.Capita.\": \"Economy\"}, axis=1, inplace=True)\nhappiness2018.rename({\"GDP per capita\": \"Economy\"}, axis=1, inplace=True)\nhappiness2019.rename({\"GDP per capita\": \"Economy\"}, axis=1, inplace=True)\nhappiness2020.rename({\"Explained by: Log GDP per capita\": \"Economy\"}, axis=1, inplace=True)\n\n#rename the Social Support columns\nhappiness2015.rename({\"Family\": \"Social Support\"}, axis=1, inplace=True)\nhappiness2016.rename({\"Family\": \"Social Support\"}, axis=1, inplace=True)\nhappiness2017.rename({\"Family\": \"Social Support\"}, axis=1, inplace=True)\nhappiness2018.rename({\"Social support\": \"Social Support\"}, axis=1, inplace=True)\nhappiness2019.rename({\"Social support\": \"Social Support\"}, axis=1, inplace=True)\ndel happiness2020['Social support']\nhappiness2020.rename({\"Explained by: Social support\": \"Social Support\"}, axis=1, inplace=True)\n\n#rename the Health columns\nhappiness2015.rename({\"Health (Life Expectancy)\": \"Health\"}, axis=1, inplace=True)\nhappiness2016.rename({\"Health (Life Expectancy)\": \"Health\"}, axis=1, inplace=True)\nhappiness2017.rename({\"Health..Life.Expectancy.\": \"Health\"}, axis=1, inplace=True)\nhappiness2018.rename({\"Healthy life expectancy\": \"Health\"}, axis=1, inplace=True)\nhappiness2019.rename({\"Healthy life expectancy\": \"Health\"}, axis=1, inplace=True)\nhappiness2020.rename({\"Explained by: Healthy life expectancy\": \"Health\"}, axis=1, inplace=True)\n\n#rename the Freedom columns\nhappiness2018.rename({\"Freedom to make life choices\": \"Freedom\"}, axis=1, inplace=True)\nhappiness2019.rename({\"Freedom to make life choices\": \"Freedom\"}, axis=1, inplace=True)\nhappiness2020.rename({\"Explained by: Freedom to make life choices\": \"Freedom\"}, axis=1, inplace=True)\n\n#rename the Trust columns\nhappiness2015.rename({\"Trust (Government Corruption)\": \"Trust\"}, axis=1, inplace=True)\nhappiness2016.rename({\"Trust (Government Corruption)\": \"Trust\"}, axis=1, inplace=True)\nhappiness2017.rename({\"Trust..Government.Corruption.\": \"Trust\"}, axis=1, inplace=True)\nhappiness2018.rename({\"Perceptions of corruption\": \"Trust\"}, axis=1, inplace=True)\nhappiness2019.rename({\"Perceptions of corruption\": \"Trust\"}, axis=1, inplace=True)\nhappiness2020.rename({\"Explained by: Perceptions of corruption\": \"Trust\"}, axis=1, inplace=True)\n\n#rename the Generosity columns\ndel happiness2020['Generosity']\nhappiness2020.rename({\"Explained by: Generosity\": \"Generosity\"}, axis=1, inplace=True)\n\n#rename the Happiness Score columns\nhappiness2017.rename({\"Happiness.Score\": \"Happiness Score\"}, axis=1, inplace=True)\nhappiness2018.rename({\"Score\": \"Happiness Score\"}, axis=1, inplace=True)\nhappiness2019.rename({\"Score\": \"Happiness Score\"}, axis=1, inplace=True)\nhappiness2020.rename({\"Ladder score\": \"Happiness Score\"}, axis=1, inplace=True)\n\n#rename the Happiness Rank columns\nhappiness2017.rename({\"Happiness.Rank\": \"Happiness Rank\"}, axis=1, inplace=True)\nhappiness2018.rename({\"Overall rank\": \"Happiness Rank\"}, axis=1, inplace=True)\nhappiness2019.rename({\"Overall rank\": \"Happiness Rank\"}, axis=1, inplace=True)\n#how to add column of numbers starting at 1? Tried these:\n#happiness2020['Happiness Rank'] = np.arange(happiness2020.shape[0])\n#happiness2020['Happiness Rank'] = happiness2020.index + 1\n\n#add a column for the years\nhappiness2015[\"Year\"] = 2015\nhappiness2016[\"Year\"] = 2016\nhappiness2017[\"Year\"] = 2017\nhappiness2018[\"Year\"] = 2018\nhappiness2019[\"Year\"] = 2019\nhappiness2020[\"Year\"] = 2020","9097a9be":"happiness2016.set_index(\"Country\", inplace=True)\n\n#explore the data again\nhappiness_list = [happiness2015,happiness2016,happiness2017,happiness2018,happiness2019,happiness2020]\nhappiness_d = []\nfor item in happiness_list:\n     happiness_loop = item.columns\n     size = len(happiness_loop)\n     happiness_d.append(happiness_loop)\n     print(\"Size: \"+str(size))\n     print(happiness_loop)\n\nfor item in range(len(happiness_d)):\n     for n_item in range(len(happiness_d[item])):\n         if item != len(happiness_d)-1:\n             if happiness_d[item][n_item] not in happiness_d[item+1]:\n                 print(happiness_d[item][n_item])\n","483c0e02":"happiness_2015_2020 = pd.concat([happiness2015, happiness2016, happiness2017, happiness2018, happiness2019, happiness2020], join='inner', sort=True)\nhappiness_2015_2020 = happiness_2015_2020[['Region', 'Year', 'Happiness Score', 'Economy', 'Social Support', 'Health', 'Freedom', 'Trust', 'Generosity']]\nhappiness_2015_2020","9f457e2a":"pivot_table_combined_mean = happiness_2015_2020.pivot_table(values='Happiness Score', index='Year')\n\npivot_table_combined_mean.plot(kind='barh', title='Mean Happiness Scores by Year', xlim=(0,10), legend=False)","a8ec88f9":"def label(element):\n    if element > 1:\n        return 'High'\n    else:\n        return 'Low'\neconomy_apply = happiness_2015_2020['Economy'].apply(label)\nfactors = ['Economy', 'Social Support', 'Health', 'Freedom', 'Trust', 'Generosity']\n\nfactors_impact = happiness_2015_2020[factors].applymap(label)\n\nfactors_impact.head(5)","56c8dbb6":"melt = pd.melt(happiness_2015_2020, id_vars = ['Region', 'Happiness Score'], value_vars= ['Economy', 'Social Support', 'Health', 'Freedom', 'Trust', 'Generosity'])\nmelt['Percentage'] = round(melt['value']\/melt['Happiness Score'] * 100, 2)\n\npv_melt = melt.pivot_table(index='variable', values='value')\npv_melt.plot(kind='barh', title='Mean Happiness Scores 2015-2020', xlim=(0,1.5), legend=False)\n","7cf5181f":"Now the \"Region\" columns are added where they were missing, and are consistent across the dataframes. Now I will need to rename the columns so they have consistent labels. I will also add a \"Year\" column to each dataframe, because I am going to concatenate them into one, and want to be able to tell the corresponding year to the rows.","0ee2eff9":"Above shows a quick exploration to investigate why happiness may not have gone down in 2020. This table makes the data a bit easier to look at. It shows the top 5 happiest countries in 2015, and shows that 'Economy' and 'Social Support' (sometimes referred to as the 'Family' factor) had a high impact on the happiness scores. This is enough to formulate a hypothesis that 'Economy' and 'Social Support' have the highest impact on the World Happiness Score. I want to perform an analysis that includes all five years of data to see if this is true.","38efcef3":"In this project I will be exploring data from the World Happiness report years 2015-2020 in order to see what changes have occured over this time period. I would also like to understand which factors contribute most to a country's happiness score.","f9c6111f":"Now that the data is concatenated I will be able to see if there was any change in happiness over the past five years.","0cab3487":"Now I want to confirm the labels of each column are consistent.","3081ca18":"There is no significant change in happiness per year, even for 2020! This is surprising after what we have gone through in 2020, but the World Happiness Score is not calculated as we normally think of happiness; 'happiness' is calculated using these six factors. Therefore it is possible that when one of the factors went down in 2020 (Economy), another increased to compensate. Next I would like to see which factors contribute the most to the total Happiness Score.","30a6fbf9":"Above I show the average percentage over the five years that each factor is of the overall Happiness Score (the factors add to the total Happiness Score). It is confirmed that 'Economy' and 'Social Support' have the highest impact on the Happiness Score. Therefore, if governments are trying to increase their Happiness score, they should focus their efforts in these areas.\n\nGovernemnts could also try to use these two factors to balance the other. For example, economies have taken a hit this year because of the pandemic. While every effort should be taken to mitigate the recession, 'Social Support' should not be overlooked. World leaders could encourage families to depend on one another, foster a sense of unity, and urge neighbors to look out for one another. To take it a step further, they could create a program to help connect volunteers to eldery citizens and those with suppresssed immune systems. The volunteers could deliver groceries and check in on their neighbors in need.","a32fd64d":"All the column labels now match! Next I will concatenate the data. Then I wil be ready to start analyzing.","0c5b02d6":"The \"Region\" column is added at the far right. Now I will perform the same function for the 2018, 2019, and 2020 datasets for consistency.","ef1520ea":"Some observations about the data above, there are differing titles for the columns and different numbers of columns, with a range of 10-21 columns. I'll need to do some cleaning. \n\nAt the bottom I have returned the titles of columns that have differing names so they are easy to identify. I will clean the data in order. Some of the differing columns won't need to be fixed becasue they're not important for my analysis (ex. \"Whisker.high\") so I will skip these. Once I have the important columns in common (the factors that make up the Happiness Score), I will be able to combine the dataframes and the irrelevant columns will be removed.\n\nI will start by adding the \"Region\" column in happiness2017 (it is missing) by adding the \"Region\" column from happiness2015. "}}