{"cell_type":{"72caa934":"code","08be8899":"code","336cd72f":"code","678222ec":"code","047d884d":"code","8fd6a3aa":"code","bf22f829":"code","24b5a6b6":"code","5d1c1ebd":"code","c3cf936c":"code","2467a795":"code","cc83ed0e":"code","46ed216c":"code","58d98cbe":"code","1a39e220":"code","b931ebd8":"code","8f0ccd9c":"code","08112c22":"code","fec69e7c":"code","39d0f08c":"code","03f36c9b":"code","6e89b656":"code","2a3a661e":"code","cd9afe3b":"code","48b95362":"code","ba49a0fe":"code","eaec9568":"code","c698ce64":"code","76248dd9":"code","52aaa2ac":"code","d1f645be":"code","cbbfeae1":"code","9588e7f0":"code","c87047a5":"code","4ec978f5":"code","06cd5878":"code","d7f78db8":"code","17bf71cc":"code","c081cf3f":"code","c0dbe6a8":"code","00fd0736":"code","ffb37a9c":"code","9fd6edd9":"code","89b7c0c5":"code","3fc3b1f1":"code","b4ae085e":"code","e003390b":"code","79da124f":"code","007abf91":"code","41a18260":"code","d7bca779":"code","8f56bc6f":"code","c70b6cf7":"code","5f487344":"code","2a72635e":"code","c481503f":"code","2ed11fcb":"code","06e49476":"markdown","a0f93008":"markdown","7523f6ab":"markdown","47b2dabb":"markdown","28f780e1":"markdown","ff3d6a52":"markdown","d0d0ccdc":"markdown","c49c6aa3":"markdown","8fd49978":"markdown","987d2867":"markdown","93483b8f":"markdown","2f9eae1e":"markdown","1a96831d":"markdown","7d2484ad":"markdown","f0035973":"markdown","e5bba312":"markdown","61da6a05":"markdown","cc514410":"markdown","73b41490":"markdown","8f077e60":"markdown","bcb2ff6d":"markdown","d0c07be2":"markdown","f8e35d07":"markdown","38eaf30d":"markdown","8f224c46":"markdown","3098dc4d":"markdown","f882e9ea":"markdown","b98056f5":"markdown","f50be611":"markdown","66b946e2":"markdown","6c7f189c":"markdown","6ce2af8a":"markdown","6aea6339":"markdown","00bdab36":"markdown","0aaadd00":"markdown","2a31b068":"markdown","138e7738":"markdown","c9a25979":"markdown","89f1fe65":"markdown","80b7dbd8":"markdown","ed105881":"markdown","25326c74":"markdown"},"source":{"72caa934":"import numpy as np\nimport pandas as pd \nimport datetime as dt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","08be8899":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","336cd72f":"train = pd.read_csv('\/kaggle\/input\/nyc-taxi-trip-duration\/train.zip')\ntest = pd.read_csv('\/kaggle\/input\/nyc-taxi-trip-duration\/test.zip')\nsample_submission = pd.read_csv('\/kaggle\/input\/nyc-taxi-trip-duration\/sample_submission.zip')","678222ec":"train.head(3)","047d884d":"test.head(3)","8fd6a3aa":"train.info()","bf22f829":"train.isnull().sum()","24b5a6b6":"from scipy import stats\nfrom scipy.stats import norm","5d1c1ebd":"plt.scatter(range(train.shape[0]),np.sort(train['trip_duration']))","c3cf936c":"sns.distplot(train.trip_duration.values, fit = norm)","2467a795":"sns.distplot(np.log1p(train.trip_duration.values), fit = norm)","cc83ed0e":"train['trip_duration'] = np.log(train['trip_duration'].values)","46ed216c":"feature_names=list(test)\ndf_train=train[feature_names]\ndf=pd.concat((df_train, test))","58d98cbe":"print(train.shape, test.shape, df.shape)","1a39e220":"df.head(3)","b931ebd8":"df['pickup_datetime'] = pd.to_datetime(df['pickup_datetime'])","8f0ccd9c":"df['month'] = df['pickup_datetime'].dt.month\ndf['day'] = df['pickup_datetime'].dt.day\ndf['weekday'] = df['pickup_datetime'].dt.weekday\ndf['hour'] = df['pickup_datetime'].dt.hour\ndf['dayofweek'] = df['pickup_datetime'].dt.dayofweek","08112c22":"df.drop(['pickup_datetime'], axis=1, inplace=True)","fec69e7c":"sns.countplot(df['hour'])","39d0f08c":"sns.countplot(df['dayofweek'])","03f36c9b":"df['dist_long'] = df['pickup_longitude'] - df['dropoff_longitude']\ndf['dist_lat'] = df['pickup_latitude'] - df['dropoff_latitude']","6e89b656":"df['dist'] = np.sqrt(np.square(df['dist_long']) + np.square(df['dist_lat']))","2a3a661e":"def ft_haversine_distance(lat1, lng1, lat2, lng2):\n    lat1, lng1, lat2, lng2 = map(np.radians, (lat1, lng1, lat2, lng2))\n    AVG_EARTH_RADIUS = 6371 #km\n    lat = lat2 - lat1\n    lng = lng2 - lng1\n    d = np.sin(lat * 0.5) ** 2 + np.cos(lat1) * np.cos(lat2) * np.sin(lng * 0.5) ** 2\n    h = 2 * AVG_EARTH_RADIUS * np.arcsin(np.sqrt(d))\n    return h\n\ndf['distance'] = ft_haversine_distance(df['pickup_latitude'].values,\n                                       df['pickup_longitude'].values, \n                                       df['dropoff_latitude'].values,\n                                       df['dropoff_longitude'].values)","cd9afe3b":"df.boxplot(column='distance')","48b95362":"#df = df[(df.distance < 200)]","ba49a0fe":"g_vendor = train.groupby('vendor_id')['trip_duration'].mean()\nsns.barplot(g_vendor.index,g_vendor.values)","eaec9568":"sfflag = train.groupby('store_and_fwd_flag')['trip_duration'].mean()\nsns.barplot(sfflag.index,sfflag.values)","c698ce64":"pc = train.groupby('passenger_count')['trip_duration'].mean()\nsns.barplot(pc.index,pc.values)","76248dd9":"df = pd.concat([df, pd.get_dummies(df['store_and_fwd_flag'],prefix = 'store')], axis=1)\ndf.drop(['store_and_fwd_flag'], axis=1, inplace=True)\n\ndf = pd.concat([df, pd.get_dummies(df['vendor_id'],prefix = 'vendor')], axis=1)\ndf.drop(['vendor_id'], axis=1, inplace=True)","52aaa2ac":"df.head(3)","d1f645be":"cor = df.corr()\nmask = np.array(cor)\nmask[np.tril_indices_from(mask)] = False\nfig,ax= plt.subplots()\nfig.set_size_inches(20,10)\nsns.heatmap(cor,mask= mask,square=True,annot=True)","cbbfeae1":"from sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import mean_squared_log_error\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nfrom sklearn.linear_model import LinearRegression","9588e7f0":"df.head(3)","c87047a5":"df.drop([\"id\"], axis=1, inplace=True)","4ec978f5":"new_train = df[:train.shape[0]]\nnew_test = df[train.shape[0]:]","06cd5878":"target = train['trip_duration']","d7f78db8":"X_train, X_val, y_train, y_val = train_test_split(new_train, target, test_size=0.2, shuffle=True)","17bf71cc":"def rmsle_score(preds, true):\n    rmsle_score = (np.sum((np.log1p(preds)-np.log1p(true))**2)\/len(true))**0.5\n    return rmsle_score","c081cf3f":"from sklearn.metrics.scorer import make_scorer\n\nRMSLE = make_scorer(rmsle_score)","c0dbe6a8":"import statsmodels.api as sm","00fd0736":"model = sm.OLS(target.values, new_train.astype(float))","ffb37a9c":"re = model.fit()\nre.summary()","9fd6edd9":"import lightgbm as lgbm","89b7c0c5":"lgb_params = {\n    'metric' : 'rmse',\n    'learning_rate': 0.1,\n    'max_depth': 25,\n    'num_leaves': 1000, \n    'objective': 'regression',\n    'feature_fraction': 0.9,\n    'bagging_fraction': 0.5,\n    'max_bin': 1000 }\n","3fc3b1f1":"lgb_df = lgbm.Dataset(new_train,target)","b4ae085e":"lgb_model = lgbm.train(lgb_params, lgb_df, num_boost_round=1500)","e003390b":"pred = lgb_model.predict(new_test)","79da124f":"pred_lgb = np.exp(pred)","007abf91":"import xgboost as xgb","41a18260":"params = {\n    'booster':            'gbtree',\n    'objective':          'reg:linear',\n    'learning_rate':      0.1,\n    'max_depth':          14,\n    'subsample':          0.8,\n    'colsample_bytree':   0.7,\n    'colsample_bylevel':  0.7,\n    'silent':             1\n}","d7bca779":"dtrain = xgb.DMatrix(new_train, target)","8f56bc6f":"gbm = xgb.train(params,\n                dtrain,\n                num_boost_round = 200)","c70b6cf7":"pred_test = np.exp(gbm.predict(xgb.DMatrix(new_test)))","5f487344":"#ensemble = (0.8*pred_lgb + 0.4*pred_test) 0.42295\n#ensemble = (0.7*pred_lgb + 0.3*pred_test) 0.38148\nensemble = (0.6*pred_lgb + 0.4*pred_test) #0.38124\n#ensemble = (0.55*pred_lgb + 0.45*pred_test) 0.38126","2a72635e":"sub = pd.DataFrame()\nsub['id'] = test.id\nsub['trip_duration'] = ensemble\nsub.head(3)","c481503f":"sub = pd.DataFrame()\nsub['id'] = test.id\nsub['trip_duration'] = ensemble\nsub.head(3)","2ed11fcb":"sub.to_csv('submission.csv', index=False)","06e49476":"> \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uc744 \uc6d0 \ud56b \uc778\ucf54\ub529\uc744 \uc774\uc6a9\ud558\uc5ec \ubc94\uc8fc\ud654 \ud574\uc90d\ub2c8\ub2e4.","a0f93008":"\ubaa9\ucc28:\n\n**[I. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \ud655\uc778](#one)**\n\n- [a. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \uacb0\uce21\uce58 \ud655\uc778](#one-a)\n\n**[II. EDA & FE](#two)**\n\n- [a. \ud0c0\uac9f \ubcc0\uc218](#two-a)\n- [b. \ub370\uc774\ud130 \ud569\uce58\uae30](#two-b)\n- [c. \ub0a0\uc9dc \ubcc0\uc218](#two-c)\n- [d. \uac70\ub9ac \ubcc0\uc218](#two-d)\n- [e. \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc6d0\ud56b \uc778\ucf54\ub529](#two-e)\n- [f. \uc0c1\uad00 \uad00\uacc4](#two-f)\n\n**[III. \ubaa8\ub378\ub9c1](#three)**\n\n- [a. train_test_split](#three-a)\n- [b. RMSLE](#three-b)\n- [c. \ud1b5\uacc4\ud655\uc778](#three-c)\n- [d. lightgbm](#three-d)\n- [e. xgboost](#three-e)\n\n**[IV. \uc608\uce21](#four)**\n\n- [a. \uc559\uc0c1\ube14](#four-a)","7523f6ab":"### d.\uac70\ub9ac \ubcc0\uc218 <a id=\"two-d\"><\/a>","47b2dabb":"> \ub370\uc774\ud130 \uc804\ucc98\ub9ac\ub97c \ud3b8\ub9ac\ud558\uac8c \ud558\uae30 \uc704\ud574\uc11c train\ub370\uc774\ud130\uc640 test \ub370\uc774\ud130\ub97c \ud569\ucce4\ub2e4.","28f780e1":"## New York City Taxi Trip Duration","ff3d6a52":">train[train.trip_duration < train.trip_duration.quantile(0.99)] \uc720\uc758\uc218\uc9001%\uc5d0 \ud574\ub2f9\ud558\ub294 \ub370\uc774\ud130 \ubc94\uc704\ub97c \uc9c0\uc815\ud55c\ub4a4\uc5d0 \ud0c0\uac9f\ubcc0\uc218\ub97c \uc124\uc815\ud574\uc8fc\uace0 \uc0b4\ud3b4\ubcf4\uc558\ub354\ub2c8 \uc804\ubcf4\ub2e4 \ud3b8\uc911\uc774 \ub35c \uc2ec\ud574\uc9c4 \uac83\uc744 \ubcfc \uc218 \uc788\ub2e4.","d0d0ccdc":"### e. \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc6d0\ud56b \uc778\ucf54\ub529<a id=\"two-e\"><\/a>","c49c6aa3":"> \uacf5\uae09\uc5c5\uccb4 \ubcc4\ub85c \uadf8\ub8f9\ubc14\uc774\ub97c \ud55c \uc0c1\ud0dc\uc5d0\uc11c \ud0c0\uac9f\ubcc0\uc218\ub97c \ud655\uc778\ud574\ubcf8 \uacb0\uacfc \ubcc4 \ucc28\uc774\ub294 \uc5c6\ub294\uac83\uac19\ub2e4","8fd49978":"## I.\ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \ud655\uc778 <a id=\"one\"><\/a>","987d2867":"1. \ubcc0\uc218 | \uc124\uba85\n------- | -------\n**id** | \uac01 \uc5ec\ud589\uc5d0 \ub300\ud55c \uc2dd\ubcc4\uc790\n**vendor_id** | \uc5ec\ud589 \uae30\ub85d\uacfc \uad00\ub828\ub41c \uc81c\uacf5\uc790\ub97c \ub098\ud0c0\ub0b4\ub294 \ucf54\ub4dc \n**pickup_datetime** | \ubbf8\ud130\uac00 \uc791\ub3d9 \ub41c \ub0a0\uc9dc \ubc0f \uc2dc\uac04  \n**dropoff_datetime** | \ubbf8\ud130\uac00 \uc791\ub3d9\ub418\uc9c0 \uc54a\ub294 \ub0a0\uc9dc \ubc0f \uc2dc\uac04  \n**passenger_count** | \ucc28\ub7c9\uc758 \uc2b9\uac1d \uc218 (\uc6b4\uc804\uc790 \uc785\ub825 \uac12) \n**pickup_longitude** | \ubbf8\ud130\uac00 \uc0ac\uc6a9 \ub41c \uacbd\ub3c4\n**pickup_latitude** | \ubbf8\ud130\uac00 \uc0ac\uc6a9 \ub41c \uc704\ub3c4 \n**dropoff_longitude** | \ubbf8\ud130\uac00 \uc0ac\uc6a9 \uc548 \ub41c \uacbd\ub3c4\n**dropoff_latitude** | \ubbf8\ud130\uac00 \uc0ac\uc6a9 \uc548 \ub41c \uc704\ub3c4\n**store_and_fwd_flag** | \uc774 \ud50c\ub798\uadf8\ub294 \ucc28\ub7c9\uc774 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uacf5\uae09 \uc5c5\uccb4\uc5d0 \ubcf4\ub0b4\uae30 \uc804\uc5d0 \uc5ec\ud589 \ub808\ucf54\ub4dc\uac00 \ucc28\ub7c9 \uba54\ubaa8\ub9ac\uc5d0 \ubcf4\uc720\ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4 (Y = \uc800\uc7a5 \ubc0f \uc804\ub2ec, N = \uc800\uc7a5 \ubc0f \uc804\ub2ec \uc5ec\ud589\uc774 \uc544\ub2d8).\n**trip_duration** | \uc5ec\ud589 \uc2dc\uac04 (\ucd08)","93483b8f":"### d. lightgbm <a id=\"three-d\"><\/a>","2f9eae1e":"### c. \ud1b5\uacc4 \ud655\uc778 <a id=\"three-c\"><\/a>","1a96831d":"### a.\ud0c0\uac9f\ubcc0\uc218 \ud655\uc778 <a id=\"two-a\"><\/a>","7d2484ad":"### c.\ub0a0\uc9dc \ubcc0\uc218 <a id=\"two-c\"><\/a>","f0035973":">\ub85c\uadf8 \ubcc0\ud658 \ud6c4 \uc815\uaddc\uc131\uc744 \ub744\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc73c\ubbc0\ub85c \ud0c0\uac9f\ubcc0\uc218\uc778 trip_duration \ud53c\ucc98\uc5d0 \ub300\ud574\uc11c \ub85c\uadf8\ubcc0\ud658\uc744 \uc2dc\ucf1c\uc900\ub2e4","e5bba312":"### a.\uc559\uc0c1\ube14 <a id=\"four-a\"><\/a>","61da6a05":"> xgboost \ubaa8\ub378\uc744 \uc774\uc6a9\ud558\uc5ec\uc11c \ud559\uc2b5\uc2dc\ud0a8\ub2e4\uc74c\uc5d0 \uc608\uce21\uce58\ub97c \uad6c\ud574\uc90d\ub2c8\ub2e4","cc514410":"Submissions are evaluated one the Root Mean Squared Logarithmic Error (RMSLE)\n\n$$ \\sqrt{\\frac{1}{n} \\sum_{i=1}^n (\\log(p_i + 1) - \\log(a_i+1))^2 } $$\n${n}$ is the number of hours in the test set\n$p_i$ is your predicted count\n$a_i$ is the actual count\n$\\log(x)$ is the natural logarithm","73b41490":"> rmsle score\ub97c \ub9cc\ub4e4\uc5b4\uc8fc\uc5b4\uc11c \ubaa8\ub378\uc744 \ube44\uad50\ud560\ub54c \ud3c9\uac00\uce58\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4","8f077e60":"\ud558\ubc84\uc0ac\uc778 \uacf5\uc2dd(Haversine Formula) \uc740 \uc8fc\uc5b4\uc9c4 \uc9c0\uc810\uc5d0 \ub300\ud574 \uad6c (Sphere) \uc758 \ub450 \uc9c0\uc810 \uc0ac\uc774\uc758 \ucd5c\ub2e8\uac70\ub9ac(great-circle distance) \ub97c \uad6c\ud558\ub294 \uacf5\uc2dd\uc774\ub2e4.\n\n$$ 2rarcsin\\sqrt{\\sin^2(\\frac{\u03c6_2 -\u03c6_1}{2}) + cos(\u03c6_1)cos(\u03c6_2)sin^2(\\frac{\u03bb_2 -\u03bb_1}{2})} $$","bcb2ff6d":"### a. train_test_split <a id=\"three-a\"><\/a>","d0c07be2":"### b. RMSLE <a id=\"three-b\"><\/a>","f8e35d07":"### e. xgboost <a id=\"three-d\"><\/a>","38eaf30d":"### f. \uc0c1\uad00 \uad00\uacc4<a id=\"two-f\"><\/a>","8f224c46":"> df \ub370\uc774\ud130\ub97c \uc804\ucc98\ub9ac\ub97c \ub05d\ub9c8\uce5c \ub2e4\uc74c\uc5d0 \ub2e4\uc2dc \ub370\uc774\ud130\ub97c \ub098\ub204\uc5b4 \uc8fc\uc5c8\uc73c\uba70 \uac80\uc99d\uc744 \uc704\ud574\uc11c trian_test_split\uc744 \ud558\uc600\uace0 gridsearchcv\ub97c \ud1b5\ud574\uc11c \ubaa8\ub378\ub9c1\uc744 \ud560\ub54c \uac80\uc99d\ub370\uc774\ud130\ub85c 8:2\ub85c \ub098\ub204\uc5c8\uc2b5\ub2c8\ub2e4.","3098dc4d":"## IV. \uc608\uce21 <a id=\"four\"><\/a>","f882e9ea":">\ubaa8\ub378\uc758 \uc124\uba85\ub825\uc774 0.338\uc774\uba70 \uac01 \ud53c\ucc98\uc758 p-value\uac00 0.0000\uc73c\ub85c \uc720\uc758\uc218\uc900 5%\ubcf4\ub2e4 \ub0ae\uc558\uc73c\uba70 \n\ub2e4\uc911\uacf5\uc120\uc131\uc758 \ubb38\uc81c\ub294 \uc5c6\ub294\uac83\uc73c\ub85c \ubcf4\uc778\ub2e4","b98056f5":"### b.\ub370\uc774\ud130 \ud569\uce58\uae30 <a id=\"two-b\"><\/a>","f50be611":">boxplot \ud655\uc778 \uacb0\uacfc \uc774\uc0c1\uce58 \uc81c\uac70\ub97c \ud574\uc90d\ub2c8\ub2e4.","66b946e2":">\uacb0\uce21\uce58 \ud655\uc778 \uacb0\uacfc \uc5c6\ub294\uac83\uc73c\ub85c \ud310\ub2e8\ub418\uc5c8\ub2e4.","6c7f189c":"> lightgbm \ubaa8\ub378\uc744 \uc774\uc6a9\ud558\uc5ec\uc11c \ud559\uc2b5\uc2dc\ud0a8\ub2e4\uc74c\uc5d0 \uc608\uce21\uce58\ub97c \uad6c\ud574\uc90d\ub2c8\ub2e4","6ce2af8a":"> \ud53d\uc5c5\uc774 \uc0c8\ubcbd\uc5d0\ub294 \ub9e4\uc6b0 \ub0ae\uace0 6\uc2dc~8\uc2dc \uc0ac\uc774\uc5d0 \uc81c\uc77c \ub192\uc740\uac83\uc744 \uc54c \uc218 \uc788\ub2e4","6aea6339":"> \ud53d\uc5c5\uc774 \uc6d4\uc694\uc77c\uc5d0 \uc81c\uc77c \ub0ae\uc740\uac83\uc744 \ubcfc \uc218 \uc788\ub2e4.","00bdab36":"> \uc559\uc0c1\ube14\uc744 \ud1b5\ud574\uc11c lgb\uc640 xgb\ub97c 6:4 \ube44\uc728\ub85c \ud55c\ub2e4\uc74c\uc5d0 submission \ud30c\uc77c\uc744 \ub9cc\ub4e4\uc5b4 \uc81c\ucd9c\ud569\ub2c8\ub2e4.","0aaadd00":"\uc0b0\uc810\ub3c4 \ud655\uc778 \uacb0\uacfc \uc774\uc0c1\uce58\uac00 \uc874\uc7ac \ud558\ub294\uac83 \uac19\ub2e4","2a31b068":">distplot \ud655\uc778 \uacb0\uacfc \uc815\uaddc\uc131\uc744 \ub744\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uba71\ubcc0\ud658\uc740 \uce58\ud574\uc900\ub2e4","138e7738":"## III. \ubaa8\ub378\ub9c1 <a id=\"three\"><\/a>","c9a25979":">'store_and_fwd_flag'\ub294 \uc5ec\ud589 \uc2dc\uac04\uc744 \uc798 \uad6c\ubcc4\ud558\ub294 \uac83\ucc98\ub7fc \ubcf4\uc778\ub2e4","89f1fe65":"## II. EDA & FE <a id=\"two\"><\/a>","80b7dbd8":">\ubbf8\ud130\uae30\uac00 \uc2dc\uc791\ub418\uace0 \ub05d\ub09c \uac01\uac01\uc758 \uacbd\ub3c4 \uc704\ub3c4\ub9cc\ud07c \ube7c\uc900\ub2e4\uc74c\uc5d0 \ucd1d \ud569\uacc4\ub97c \uad6c\ud574\uc11c \uc0c8\ub85c\uc6b4 \ud30c\uc0dd\ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5c8\ub2e4","ed105881":"### a. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \uacb0\uce21\uce58 \ud655\uc778 <a id=\"one-a\"><\/a>","25326c74":">\ub450 \uc704\ub3c4\uc640 \uacbd\ub3c4 \uc0ac\uc774\uc758 \uac70\ub9ac\ub97c \uad6c\ud558\ub294 \uacf5\uc2dd\uc73c\ub85c \ud558\ubc84\uc0ac\uc778 \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud574\uc11c \uac70\ub9ac \ud53c\ucc98\ub97c \uad6c\ud574\uc90d\ub2c8\ub2e4."}}