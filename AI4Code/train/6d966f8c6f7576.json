{"cell_type":{"e0cdf4ab":"code","28eef162":"code","27d5f646":"code","313b4c8b":"code","ff5f9ccd":"code","ae563033":"code","05859f64":"code","aaa43f63":"code","e9fa241a":"code","06d2164a":"code","f76cc93e":"code","737698e8":"code","0656f6aa":"code","96359d91":"code","0c2885f1":"code","7d26d960":"code","0818e068":"code","5d44e1d9":"code","cdd49f1b":"code","1f7a2651":"code","0167bb48":"code","6234b124":"code","af160602":"code","a2dee81d":"code","baa85fc4":"code","ef3e8bae":"code","3273dece":"code","be6fe86f":"code","543956b4":"code","e7ec691c":"code","54b81e31":"code","0fa24905":"code","e0227782":"code","12e7d2e1":"code","deecd06f":"code","6dfc6869":"code","e7249aa6":"code","a47b4d09":"code","292e0fca":"code","f9af0b9b":"code","6f09ed69":"code","d859de22":"code","1eaa4c95":"code","07327621":"code","35ba91f2":"code","6746be0e":"markdown","f5eb16f6":"markdown","b5cd0826":"markdown","cfde31c2":"markdown","18e97844":"markdown","d27fce9b":"markdown","5b4e4727":"markdown","8d81a211":"markdown","29d3da43":"markdown","62deb2b7":"markdown","2af4bace":"markdown","6990e682":"markdown","58c01a22":"markdown"},"source":{"e0cdf4ab":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nimport statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom xgboost import XGBRegressor","28eef162":"column_names = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV']\ndata = pd.read_csv('\/kaggle\/input\/boston-house-prices\/housing.csv', header=None, delimiter=r\"\\s+\", names=column_names)","27d5f646":"data.tail()","313b4c8b":"data.isnull().sum()","ff5f9ccd":"data.corr()['MEDV']","ae563033":"sns.scatterplot(x=data['MEDV'], y=data['LSTAT'])","05859f64":"sns.scatterplot(x=data['MEDV'], y=data['RM'])","aaa43f63":"data['MEDV'].hist()","e9fa241a":"len(data[data['MEDV'] >=49.9])","06d2164a":"data = data[~(data['MEDV'] >= 49.9)]","f76cc93e":"X = data.drop(['MEDV'], axis=1)\ny = data.MEDV\nprint(sm.OLS(y,X).fit().summary())","737698e8":"X.corr()['NOX']","0656f6aa":"X = X.drop(['NOX'], axis=1)","96359d91":"x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=7)","0c2885f1":"LR = LinearRegression()\nLR.fit(x_train, y_train)\ny_pred = LR.predict(x_test)\nr2 = round(r2_score(y_test, y_pred), 3)\nrmse = round(np.sqrt(mean_squared_error(y_test, y_pred, squared=False)), 3)","7d26d960":"print('r2_score:', r2)\nprint('rmse:', rmse)","0818e068":"pred_act = pd.DataFrame(np.c_[y_pred, y_test], columns={'pred', 'act'})","5d44e1d9":"pred_act.head(9).T","cdd49f1b":"sns.scatterplot(x=pred_act['pred'], y=pred_act['act'])\nplt.xlabel(\"pred\")\nplt.ylabel(\"act\")","1f7a2651":"data_models = [['LinearRegression', r2, rmse]]","0167bb48":"ABR = AdaBoostRegressor(n_estimators=100, random_state=42)\nABR.fit(x_train, y_train)\ny_pred = ABR.predict(x_test)\nr2 = round(r2_score(y_test, y_pred), 3)\nrmse = round(np.sqrt(mean_squared_error(y_test, y_pred, squared=False)), 3)","6234b124":"print('r2_score:', r2)\nprint('rmse:', rmse)","af160602":"pred_act = pd.DataFrame(np.c_[y_pred, y_test], columns={'pred', 'act'})","a2dee81d":"pred_act.head(9).T","baa85fc4":"sns.scatterplot(x=pred_act['pred'], y=pred_act['act'])\nplt.xlabel(\"pred\")\nplt.ylabel(\"act\")","ef3e8bae":"data_models.insert(0, ['AdaBoostRegressor', r2, rmse])","3273dece":"GBR = GradientBoostingRegressor(n_estimators=100, random_state=42)\nGBR.fit(x_train, y_train)\ny_pred = GBR.predict(x_test)\nr2 = round(r2_score(y_test, y_pred), 3)\nrmse = round(np.sqrt(mean_squared_error(y_test, y_pred, squared=False)), 3)","be6fe86f":"print('r2_score:', r2)\nprint('rmse:', rmse)","543956b4":"pred_act = pd.DataFrame(np.c_[y_pred, y_test], columns={'pred', 'act'})","e7ec691c":"pred_act.head(9).T","54b81e31":"sns.scatterplot(x=pred_act['pred'], y=pred_act['act'])\nplt.xlabel(\"pred\")\nplt.ylabel(\"act\")","0fa24905":"data_models.insert(1, ['GradientBoostingRegressor', r2, rmse])","e0227782":"XGBR = XGBRegressor(n_estimators=100, random_state=42)\nXGBR.fit(x_train, y_train)\ny_pred = XGBR.predict(x_test)\nr2 = round(r2_score(y_test, y_pred), 3)\nrmse = round(np.sqrt(mean_squared_error(y_test, y_pred, squared=False)), 3)","12e7d2e1":"print('r2_score:', r2)\nprint('rmse:', rmse)","deecd06f":"pred_act = pd.DataFrame(np.c_[y_pred, y_test], columns={'pred', 'act'})","6dfc6869":"pred_act.head(9).T","e7249aa6":"sns.scatterplot(x=pred_act['pred'], y=pred_act['act'])\nplt.xlabel(\"pred\")\nplt.ylabel(\"act\")","a47b4d09":"data_models.insert(2, ['XGBRegressor', r2, rmse])","292e0fca":"ETR = ExtraTreesRegressor(n_estimators=100, random_state=42)\nETR.fit(x_train, y_train)\ny_pred = ETR.predict(x_test)\nr2 = round(r2_score(y_test, y_pred), 3)\nrmse = round(np.sqrt(mean_squared_error(y_test, y_pred, squared=False)), 3)","f9af0b9b":"print('r2_score:', r2)\nprint('rmse:', rmse)","6f09ed69":"pred_act = pd.DataFrame(np.c_[y_pred, y_test], columns={'pred', 'act'})","d859de22":"pred_act.head(9).T","1eaa4c95":"sns.scatterplot(x=pred_act['pred'], y=pred_act['act'])\nplt.xlabel(\"pred\")\nplt.ylabel(\"act\")","07327621":"data_models.insert(2, ['ExtraTreesRegressor', r2, rmse])","35ba91f2":"pd.DataFrame(data_models, columns=['model', 'r2', 'rmse']).sort_values('r2', ascending=False)","6746be0e":"# MODELS","f5eb16f6":"# RESULT","b5cd0826":"## LinearRegression:  r2_score: 0.77 \/\/ rmse: 1.873","cfde31c2":"In addition, the NOX variable correlates very strongly with other variables, so it can interfere with our learning. Let's delete it.","18e97844":"## AdaBoostRegressor: r2_score: 0.888 \/\/ rmse: 1.566","d27fce9b":"# DATA PREPROCESSING","5b4e4727":"<li>LSTAT and RM strongly correlate with the variable MEDV","8d81a211":"## GradientBoostingRegressor: r2_score: 0.91 \/\/ rmse: 1.482","29d3da43":"<li>The graphs with correlating variables show that there are outliers MEDV = 50.","62deb2b7":"<li>no missing values","2af4bace":"<li>P>|t| value of the NOX variable is as close as possible to 1 (0.846), and t is >>>> 0 (0.195). \n<li>If the value of T is close to 0, and the value of P tends to 1, then this variable will be statistically unreliable for our model.","6990e682":"## ExtraTreesRegressor: r2_score: 0.931 \/\/ rmse: 1.389","58c01a22":"## XGBRegressor: r2_score: 0.894 \/\/ rmse: 1.544"}}