{"cell_type":{"d12630c8":"code","9622baf9":"code","6c40b452":"code","4fca972b":"code","bf2b6cd4":"code","4bff121e":"code","2fd6aa24":"markdown","540149c9":"markdown","583858f3":"markdown","50fca635":"markdown","c0bace7f":"markdown","bb4fc64a":"markdown","4519d7cd":"markdown"},"source":{"d12630c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Path of file to read\ndata_path = '..\/input\/college-basketball-players-20092021\/CollegeBasketballPlayers2009-2021.csv'\ntotal_ball_data = pd.read_csv(data_path, low_memory = False)\n\n# Only include rows in which a player was drafted, and before 2021 (2021 will be used as test data)\nball_data_1 = total_ball_data.loc[total_ball_data['pick'] >= 1]\nball_data = ball_data_1.loc[ball_data_1['year'] < 2021]","9622baf9":"# Shows a preview of data\nball_data.head()","6c40b452":"# Creates a target object for the pick and calls it y\ny = ball_data.pick\n\n# Creates X by using specific statistics\nfeatures = ['Min_per', 'ftr', 'year','AST_per', 'TO_per', 'FT_per', 'twoP_per', 'TP_per', 'blk_per', 'stl_per']\nX = ball_data[features]\n\n# Split into validation and training data\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n","4fca972b":"# Specify a Random Forest Model\nball_model = DecisionTreeRegressor(max_leaf_nodes=100, random_state=1)\n# Fit the model\nball_model.fit(train_X, train_y)\n\n# Make predictions on validation data and calculate the mean absolute error\nval_preds = ball_model.predict(val_X)\nval_mae = mean_absolute_error(val_preds, val_y)\nprint(\"Validation MAE: {:,.5f}\".format(val_mae))","bf2b6cd4":"# Test data, using 2021\nball_data_2021 = ball_data_1.loc[ball_data_1['year'] == 2021]\ntest_X_2021 = ball_data_2021[features]\n\n# Make predictions\ntest_preds_2021 = ball_model.predict(test_X_2021)\n\n# Find MAE\ntest_mae_2021 = mean_absolute_error(test_preds_2021, ball_data_2021.pick)\n\n# Save predictions in right format\noutput = pd.DataFrame({'Name': ball_data_2021.player_name, 'Pick': test_preds_2021, 'Actual Pick' : ball_data_2021.pick})\noutput.to_csv('predictions2021.csv', index=False)\n\nprint(\"2021 Test MAE: {:,.5f}\".format(test_mae_2021))","4bff121e":"# Path to file for test data for 2022\ntest_data_path = '..\/input\/college-basketball-players-20092021\/CollegeBasketballPlayers2022.csv'\n\n# Read test data file\ntest_data = pd.read_csv(test_data_path)\n\n# Create test_X only using columns from prediction\ntest_X = test_data[features]\n\n# Make predictions\ntest_preds = ball_model.predict(test_X)\n\n# Save predictions in right format\noutput = pd.DataFrame({'Name': test_data.player_name, 'Pick': test_preds})\noutput.to_csv('predictions2022.csv', index=False)","2fd6aa24":"We start with the boiler plate: importing all necessary libraries and functions such as mean_absolute_error. Additionally, we read in the data using pandas. I decide to focus only on players who were actually drafted into the NBA. I also only look at players from 2009-2020, opting to use 2021 as a test data set.\n","540149c9":"We set the draft pick as the target, and set the statistics minutes %, free throw rate, year, assist %, turnover %, free throw %, 2-pointer %, 3-pointer %, block %, and steals % as the features. I would like to change these statistics eventually after figuring out which statistics matter the most.","583858f3":"After fitting the data to the model and running the model on the prediction data, our mean absolute error is around 15. This means that our predictions for the pick, are on average 15 off from reality. There's definitely room for improvement here, and I would like to compare this value to the MAE after I find the correct combination of statistics to use.","50fca635":"**Background**\n\nThe NBA Draft is one of the most unpredictable events in sports. Even advanced analytics of the modern era fail to stop teams from making inaccurate picks. For instance, let's look back at the 2018 draft class. Deandre Ayton and Marvin Bagley III were taken over Luka Doncic and Trae Young!\n\nOf course, there's no solution that will completely eliminate bad picks. However, I hope to use my College Basketball Players 2009-2021 dataset to predict what pick a player should be taken. In the future, I would like to incorporate the players' NBA data in order to predict stats such as winshares or PER based on college stats. ","c0bace7f":"Finally, I make predictions for 2022. The 2022 NBA draft has not occurred yet, so we cannot compare with reality to find the MAE.","bb4fc64a":"Overall, the model shows some promise but there is definitely room for improvement. This is one of my first projects so please feel free to respond with any feedback! \nCheers to finding the next Steph Curry!","4519d7cd":"Now, we run our model on the test data from 2021, getting an MAE of 14.5. This is a good sign, since it is possible for the test MAE to be much higher than the validation MAE due to errors such as overfitting."}}