{"cell_type":{"83aee4d0":"code","337e145d":"code","551b55ca":"code","c2af3032":"code","fa1e6bf5":"code","760c69ca":"code","ba25f609":"code","f8ee9dcf":"code","67990215":"code","d0631ffb":"code","7e24f127":"code","cb1c7776":"code","bdb46c21":"code","852d20a9":"code","7f77cae0":"code","9a23eb07":"code","f3b51a99":"code","30093183":"code","d9959d81":"code","a805485c":"code","f70d9c3f":"code","bb3bc915":"markdown","81947a68":"markdown","ec7c2260":"markdown","1f35cea8":"markdown","d2456c25":"markdown","9e23916f":"markdown","a4b620c3":"markdown","0234ea4d":"markdown","02a16cd5":"markdown","4c71cf5e":"markdown","beccdefc":"markdown","3281547b":"markdown"},"source":{"83aee4d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","337e145d":"df = pd.read_csv(\"\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2021-03-31.csv\")","551b55ca":"from tabulate import tabulate\n\ndata_info=[[i,df[i].dtypes, df[i].count(), df[i].max()] for i in df.columns]\n\nprint(tabulate(data_info, headers=[\"Column\", \"Type\", \"Count\", \"Max\"]))","c2af3032":"df.describe()","fa1e6bf5":"df.describe().apply(lambda x: x.apply(lambda s :\"{:.2f}\".format(s)))","760c69ca":"df.head(5) # ilk 5 Sat\u0131r","ba25f609":"df.tail(5)","f8ee9dcf":"df[\"Time_year\"]=df[\"Timestamp\"].apply(lambda x: datetime.fromtimestamp(x).date().year)\ndf[\"Time_month\"]=df[\"Timestamp\"].apply(lambda x: datetime.fromtimestamp(x).date().month)\ndf[\"Time_day\"]=df[\"Timestamp\"].apply(lambda x: datetime.fromtimestamp(x).date().day)\ndf[\"Time_hour\"]=df[\"Timestamp\"].apply(lambda x: datetime.fromtimestamp(x).time())\ndf[\"Time\"]=df[\"Timestamp\"].apply(lambda x: datetime.fromtimestamp(x))\ndf","67990215":"df[\"turev_price\"]=(df[\"Close\"]-df[\"Open\"])\/df[\"Open\"]\ndf.head(10)","d0631ffb":"df.dropna(inplace=True)\ndf.reset_index(drop=True, inplace=True)\ndf","7e24f127":"plt.figure(figsize=(30,10))\nplt.subplot(1,1,1)\nplt.scatter(df[\"Time\"], ((df[\"High\"]-df[\"Low\"])\/df[\"High\"]))\nplt.ylabel(\"En y\u00fcksek de\u011fer ile en d\u00fc\u015f\u00fck de\u011ferin fark\u0131n\u0131n, en y\u00fcksek de\u011fere oran\u0131.\", fontsize=12)\nplt.xlabel(\"Zaman\", fontsize=12)\nplt.title(\"BTC de\u011ferinin en ayn\u0131 g\u00fcn i\u00e7inde en y\u00fcksek ve en d\u00fc\u015f\u00fck de\u011ferlerinin oran\u0131\", fontsize = 16)\nplt.show()","cb1c7776":"plt.figure(figsize=(30,10))\nplt.subplot(1,1,1)\nplt.scatter(df[\"Time\"], ((df[\"High\"]-df[\"Low\"])\/df[\"High\"]))\nplt.ylabel(\"En y\u00fcksek de\u011fer ile en d\u00fc\u015f\u00fck de\u011ferin fark\u0131n\u0131n, en y\u00fcksek de\u011fere oran\u0131.\", fontsize=12)\nplt.xlabel(\"Zaman\", fontsize=12)\nplt.title(\"BTC de\u011ferinin en ayn\u0131 g\u00fcn i\u00e7inde en y\u00fcksek ve en d\u00fc\u015f\u00fck de\u011ferlerinin oran\u0131\", fontsize = 16)\nplt.show()","bdb46c21":"plt.figure(figsize=(30,10))\nplt.plot( df[\"Time\"], df[\"Open\"],color=\"green\", label=\"Open \/ Time\")\nplt.legend(loc=\"upper left\")\nplt.xlabel(\"Timestamp\")\nplt.ylabel(\"Open Value\")\nplt.title(\"BTC OPEN de\u011ferleri \", fontsize=16)\nplt.show()","852d20a9":"plt.figure(figsize=(30,10))\nplt.subplot(1,1,1)\nsns.barplot(x=df[\"Time_year\"],y=df[\"Open\"], hue=df[\"Time_month\"])\nplt.title(\"BTC OPEN de\u011ferleri \", fontsize=16)\nplt.show()\n","7f77cae0":"plt.figure(figsize=(30,10))\nplt.subplot(1,1,1)\nplt.scatter(df[\"Time\"],df[\"Volume_(BTC)\"])\nplt.plot(df[\"Time\"],df[\"Open\"], color=\"red\")\nplt.title(\"BTC OPEN de\u011ferleri ile i\u015flem hacminin il\u015fkisi\", fontsize=16)\nplt.show()","9a23eb07":"plt.figure(figsize=(30,10))\ndf[\"High\"].plot(kind=\"line\", x=df[\"Time_year\"], y=df[\"High\"],  color=\"black\", label=\"High\", linewidth=0.5, alpha=1, grid=True, linestyle=\"-\")\ndf[\"Low\"].plot(kind=\"line\", x=df[\"Time_year\"], y=df[\"Low\"], color=\"red\",label=\"Low\", linewidth=0.5)\nplt.legend(loc=\"upper left\")\nplt.ylabel(\"High and Low\")\nplt.xlabel(\"x Axis\")\nplt.title(\"BTC high and Low De\u011ferleri\", fontsize=16)\nplt.show()\n","f3b51a99":"df.corr()","30093183":"plt.subplots(figsize=(18,18))\nsns.heatmap(df.corr(), annot=True, linewidth=.5,fmt=\".1f\")\nplt.show()","d9959d81":"k=0\nfor i, value in df.iterrows():   \n    if value[\"Open\"]>=0:\n        k+=1\n        if k==2:\n            dt_obj=datetime.fromtimestamp(value[\"Timestamp\"])\n            print(\"ilk olarak, {}. sat\u0131rda {} an\u0131nda haraket g\u00f6r\u00fclm\u00fc\u015ft\u00fcr.\".format(i,dt_obj))\n            print(\"{} an\u0131nda ki de\u011fer: {}\".format(dt_obj,value[\"Open\"]))          \n            break","a805485c":"x= dict(df[df[\"Open\"]==df[\"Open\"].max()])\ny= dict(df[df[\"Open\"]==df[\"Open\"].min()])\nw=pd.DataFrame(df[df[\"Open\"]==df[\"Open\"].max()])\nzdf=pd.DataFrame(df[df[\"Open\"]==df[\"Open\"].min()])\n\n\n#print(len(x))\n#print(len(y))\n#print(x)\nprint(datetime.fromtimestamp(x[\"Timestamp\"]))\nprint(w)\nprint(zdf)\n\nfor i, value in zdf.iterrows():\n    print(\"min de\u011fer ilk g\u00f6rd\u00fc\u011f\u00fcm\u00fcz an :\" , datetime.fromtimestamp(value.Timestamp))\n    break","f70d9c3f":"df_max = df[df[\"Open\"]==df[\"Open\"].max()]\n\nprint(\"Max. A\u00e7\u0131l\u0131\u015f Tarihi: \", datetime.fromtimestamp(df_max[\"Timestamp\"]))\nprint(\"Ula\u015f\u0131lan maksimum a\u00e7\u0131l\u0131\u015f der\u011feri : \", df[\"Open\"].max()) \n","bb3bc915":"Tablomuzu temizledik ve anlayaca\u011f\u0131m\u0131z \u015fekilde d\u00fczenledik \u015fimdi bunu art\u0131k g\u00f6rselle\u015ftirebiliriz. ","81947a68":"BTC, yukar\u0131daki tabloya g\u00f6e 2018 y\u0131l\u0131na kadar pek ciddi art\u0131\u015f g\u00f6stermezken 2018 dan itibaren de\u011feri h\u0131zla artm\u0131\u015ft\u0131r. ","ec7c2260":"Yukar\u0131daki tabloya g\u00f6re, 2013,2014,2015 y\u0131llar\u0131nda ayn\u0131 g\u00fcn i\u00e7erisinde BTC'nin de\u011feri en dip ve en tepe noktas\u0131 aras\u0131ndaki fark \u00e7ok fazla olmu\u015f ve sonras\u0131nda daha sakin bir s\u00fcre\u00e7 ya\u015fam\u0131\u015f.","1f35cea8":"Timestamp s\u00fctununda bulunan zaman bilgisini anlayamad\u0131\u011f\u0131m i\u00e7in yeni bir s\u00fctunlar olu\u015fturup orada anla\u015f\u0131l\u0131r zaman bilgisini tutmak istiyorum. ","d2456c25":"Yukar\u0131daki tabloya g\u00f6re, 2014 ve 2018 y\u0131l\u0131 d\u00fc\u015f\u00fc\u015f ile ge\u00e7erken, bunun d\u0131\u015f\u0131nda genelde y\u00fckseli\u015f ile ge\u00e7mi\u015ftir. \u00f6zellikle 2020 y\u0131\u0131l\u0131 Ekim ay\u0131ndan sonra h\u0131zl\u0131 art\u0131\u015f g\u00f6r\u00fcn\u00fcyor.  \n","9e23916f":"**scientific notation** olarak verilerin sergilenmesi nedeni ile bu tablo benim i\u00e7in anla\u015f\u0131l\u0131r de\u011fil o nedenle bu tabloyu biraz d\u00fczenliyorum. ","a4b620c3":"\u00d6ncelikle elimizde bulunan datay\u0131 tan\u0131mak istiyorum. Bunun i\u00e7in **describe**() fonksiyonunu kullan\u0131yorum. ","0234ea4d":"a\u00e7\u0131l\u0131\u015f ve kapan\u0131\u015f aras\u0131ndaki art\u0131\u015f ve azal\u0131\u015f trendinin volume nas\u0131l bir katk\u0131s\u0131 var merak ediyorum. ","02a16cd5":"Yukar\u0131daki Correlation tablosun da g\u00f6r\u00fcnuyor ki, Open, Close, Low ve high de\u011ferleri aras\u0131nda do\u011fru orant\u0131 var. ","4c71cf5e":"**Not**: Timestamp s\u00fctununda bulunan veriyi anla\u015fl\u0131r tarih \u015feklinde Time ba\u015fl\u0131kl\u0131 bir s\u00fctunda yeniden olu\u015fturunca, 31 Aral\u0131k 2011 sabah\u0131 saat 07:52 den , 31 Mart 2021 saat 00:00'a kadar her dakika olu\u015fturulm\u0131\u015f kay\u0131tlardan olu\u015ftu\u011funu anl\u0131yorum.    ","beccdefc":"Baz\u0131 sat\u0131rlar\u0131n NaN olarak kay\u0131t edildi\u011fini g\u00f6r\u00fcyorum yani hi\u00e7 i\u015flem g\u00f6rmemi\u015f olan zamanlar var. Daha temiz bir tablo i\u00e7in i\u015flem g\u00f6rmemi\u015f anlar\u0131 tablodan temizlemek yani tablodan \u00e7\u0131karmak istiyorum","3281547b":"Bu tabloda, ger\u00e7ekle\u015fen i\u015flem hacmi g\u00f6r\u00fcn\u00fcyor ve 2017 y\u0131l\u0131na kadar \u00e7ok yo\u011f\u0131n i\u015flem hacmi olurken 2017 den sonra i\u015flem hacim daha d\u00fc\u015f\u00fck ve sakin bir g\u00fczerhgah izlemi\u015f durumda. df[\"Open\"] de\u011ferlerine bakarak y\u00fckselen BTC de\u011feri nedeni ile i\u015flem hacminin d\u00fc\u015ft\u00fc\u011f\u00fcn\u00fc d\u00fc\u015f\u00fcn\u00fcyorum. "}}