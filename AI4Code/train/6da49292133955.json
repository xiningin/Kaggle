{"cell_type":{"210009f1":"code","0ebcd54c":"code","389c9866":"code","929c05c7":"code","1bdb9e72":"code","c287041f":"markdown"},"source":{"210009f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        pass\n        #print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ebcd54c":"import PIL\nfrom PIL import Image\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize = (10,15))\nfor i in range(1,8):\n    plt.subplot(4,4,i)\n    try:\n        img = Image.open(\"\/kaggle\/input\/cookie\/kaggledataset\/\" +str(i)+ \"\/cookie\"+str(i)+\".jpg\")\n    except:\n        pass\n    plt.imshow(img)","389c9866":"def remove_noise(image):\n    return cv2.medianBlur(image,3)\n\n\ndef threshold_func(data_array):\n        \n    data_array = data_array.reshape(1,2500)\n\n    threshold = data_array.sum()\/2500\n    threshold = (threshold*50)\/100\n    \n    data_array = data_array.reshape(50,50)\n    for i in range(50):\n        for j in range(50):\n            if data_array[i][j] < threshold:\n                data_array[i][j] = 0\n            else:\n                data_array[i][j] = 255\n                \n    return data_array","929c05c7":"import cv2\nplt.figure(figsize = (10,15))\nfor i in range(1,9):\n    plt.subplot(4,4,i)\n    \n    img = cv2.imread(\"\/kaggle\/input\/cookie\/kaggledataset\/\" +str(i)+ \"\/cookie\"+str(i)+\".jpg\",0)\n    img = cv2.resize(img, (50,50))\n    img = threshold_func(img)\n    #img = remove_noise(img)\n\n    try:\n        plt.imshow(img, cmap = 'gray')\n    except:\n        pass","1bdb9e72":"import cv2\nplt.figure(figsize = (10,15))\nfor i in range(1,9):\n    plt.subplot(4,4,i)\n    \n    img = cv2.imread(\"\/kaggle\/input\/cookie\/kaggledataset\/\" +str(i)+ \"\/cookie\"+str(i)+\".jpg\",0)\n    img = cv2.resize(img, (50,50))\n    img = threshold_func(img)\n    img = remove_noise(img)\n\n    try:\n        plt.imshow(img, cmap = 'gray')\n    except:\n        pass","c287041f":"# Preprocessing"}}