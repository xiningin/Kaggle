{"cell_type":{"43aa1d6f":"code","5852ef71":"code","754dc08e":"code","28a42783":"code","e1253e20":"code","a03d28e7":"code","65096d5a":"code","77bd143b":"code","6cc2f151":"code","441b2a1e":"code","3f5518b1":"code","57bde124":"code","8b6b9cf3":"code","41d38f78":"code","169b2c41":"code","8f17e091":"code","71614f7d":"code","49be42ee":"markdown","7086a1ec":"markdown","da6e65cf":"markdown","f66aef4e":"markdown","cfdb8dd8":"markdown","bfe455ad":"markdown","1b6cab38":"markdown","0206ca97":"markdown"},"source":{"43aa1d6f":"import pandas as pd\nimport sklearn as sk\nimport numpy as np\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import svm\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import  RandomForestClassifier\nfrom sklearn.neural_network import MLPClassifier","5852ef71":"df_treino = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\", sep = \",\", header=0)\ndf_treino = df_treino.dropna()\ndf_treino","754dc08e":"df_treino.info()","28a42783":"df_teste=pd.read_csv(\"..\/input\/adult-pmr3508\/test_data.csv\", sep=\",\",header=0)\ndf_teste = df_teste.dropna()\ndf_teste","e1253e20":"df_teste.info()","a03d28e7":"num_treino = df_treino[[ \"age\",\"education.num\", \"capital.gain\", \"capital.loss\", \"hours.per.week\", \"income\" ]]\n\ncat_treino = df_treino.drop([\"age\",\"education.num\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"] , axis = 1)\n\nnum_teste = df_teste[[\"age\",\"education.num\", \"capital.gain\", \"capital.loss\", \"hours.per.week\" ]]\n\ncat_teste = df_teste.drop([\"age\",\"education.num\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"], axis = 1)","65096d5a":"cat_treino = pd.get_dummies(cat_treino)\ncat_teste = pd.get_dummies(cat_teste)\n\ncat_treino.head()","77bd143b":"df_treino = pd.concat([cat_treino, num_treino], axis = 1)\ndf_teste = pd.concat([cat_teste, num_teste], axis =1)\ndf_treino.head()","6cc2f151":"X_treino=df_treino[[\"age\",\"education.num\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"]]\nY_treino= df_treino.income\nX_teste=df_teste[[\"age\",\"education.num\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"]]","441b2a1e":"naive_bayes = GaussianNB()\nacuracia_nb = cross_val_score(naive_bayes, X_treino, Y_treino)\n\nacuracia_nb.mean()","3f5518b1":"\nsvmC = svm.SVC()\nsvmC.fit(X_treino, Y_treino)\n\nacuracia_SVM = cross_val_score(svmC, X_treino, Y_treino)\nacuracia_SVM.mean()","57bde124":"LR = LogisticRegression()\nacuracia_LR= cross_val_score(LR,X_treino,Y_treino)\nacuracia_LR.mean()","8b6b9cf3":"random = RandomForestClassifier()\nacuracia_random = cross_val_score(random, X_treino, Y_treino)\n\nacuracia_random.mean()","41d38f78":"neural = MLPClassifier(max_iter=200, early_stopping=True)\nacuracia_neural = cross_val_score(neural, X_treino, Y_treino)\n\nacuracia_neural.mean()","169b2c41":"print(\"acur\u00e1cia Naive Bayes : \" + str(acuracia_nb.mean()))\nprint(\"acur\u00e1cia Suport Vector Machine : \" + str(acuracia_SVM.mean()))\nprint(\"acur\u00e1cia Regress\u00e3o Log\u00edstica: \" + str(acuracia_LR.mean()))\nprint(\"acur\u00e1cia Random Forest: \" + str(acuracia_random.mean()))\nprint(\"acur\u00e1cia Redes Neurais \" + str(acuracia_neural.mean()))\n","8f17e091":"random.fit(X_treino, Y_treino)\nY_teste= random.predict(X_teste)","71614f7d":"inserir= pd.DataFrame()\ninserir[\"income\"] = Y_teste\ninserir[\"Id\"] = df_teste.index\ninserir.to_csv('submission.csv',index = False)\ninserir","49be42ee":"**a) Naive Bayes**","7086a1ec":"Ao analisarmos as acur\u00e1cias dos diferentes classificadores, percebemos que o que apresenta melhor desempenho \u00e9 o Random Forest. Assim esse que ser\u00e1 aplicado \u00e0 base de teste","da6e65cf":"# Comparando os diferentes classificadores","f66aef4e":"**c) Regress\u00e3o Log\u00edstica**","cfdb8dd8":"**e) Rede Neurais**","bfe455ad":"# Classificadores\n\nA seguir se encontram os classificadores utilizados","1b6cab38":"**d) Random Forest**","0206ca97":"**b) Support Vector Machine**"}}