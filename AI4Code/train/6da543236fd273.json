{"cell_type":{"e5e02b85":"code","2369eb57":"code","4da7d843":"code","8dce57b5":"code","3e4a2fa9":"code","09695ad1":"code","8bd9de5b":"code","ee5a2cff":"code","79453edc":"code","4580dacb":"code","9cc54584":"code","0d00aa21":"code","6083242a":"code","504813f9":"code","86f99925":"code","0d5de72a":"code","f066ca90":"code","6b6ad668":"code","836dc93e":"code","e4be71be":"code","12ea2a79":"code","2090498d":"code","67bc49c0":"code","44cca4e3":"code","f2bea3c2":"code","b97e475b":"code","b38b87b6":"code","ccaffbae":"code","fbd92cd6":"code","e3094ef4":"code","f9e66c2e":"code","062aca15":"code","f5f92126":"code","7a75c9c4":"code","571b12e9":"code","01554a4d":"code","101b16db":"code","bfce8f25":"code","2c9ede8d":"code","ea900ea2":"code","fb7105a0":"markdown","8986de3f":"markdown","45e303d9":"markdown","e59a23ad":"markdown","9017f0bb":"markdown","6e144dc7":"markdown","d892fd9d":"markdown","f1097692":"markdown","358b6ea8":"markdown","4949e982":"markdown","755ac010":"markdown","7cd7be17":"markdown","ebd52543":"markdown","dd631fb6":"markdown","780322bf":"markdown","8c882d6a":"markdown","371f95c3":"markdown","d68ab76a":"markdown"},"source":{"e5e02b85":"import statistics\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\npd.options.display.max_columns= None\npd.options.display.max_rows= None\nnp.set_printoptions(suppress=True)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score","2369eb57":"data = pd.read_csv(\"..\/input\/lending-club\/accepted_2007_to_2018Q4.csv.gz\")","4da7d843":"data.head(5)","8dce57b5":"data.info(verbose= True)","3e4a2fa9":"data.describe()","09695ad1":"data.isnull().sum()","8bd9de5b":"data.shape","ee5a2cff":"cols_to_drop = [\"id\", \"member_id\",\"issue_d\",\"earliest_cr_line\", \"funded_amnt\", \"funded_amnt_inv\", \"int_rate\", \"grade\", \"sub_grade\", \"emp_title\", \"pymnt_plan\", \"url\", \"desc\", \"title\", \"zip_code\", \"addr_state\", \"initial_list_status\", \"out_prncp\", \"out_prncp_inv\", \"total_pymnt\", \"total_pymnt_inv\", \"last_pymnt_d\", \"last_pymnt_amnt\", \"next_pymnt_d\", \"last_credit_pull_d\", \"last_fico_range_high\", \"last_fico_range_low\", \"policy_code\", \"hardship_flag\", \"hardship_type\", \"hardship_reason\", \"hardship_status\", \"deferral_term\", \"hardship_amount\", \"hardship_start_date\", \"hardship_end_date\", \"payment_plan_start_date\", \"hardship_length\", \"hardship_dpd\", \"hardship_loan_status\", \"orig_projected_additional_accrued_interest\", \"hardship_payoff_balance_amount\", \"hardship_last_payment_amount\", \"disbursement_method\", \"debt_settlement_flag\", \"debt_settlement_flag_date\", \"settlement_status\", \"settlement_date\", \"settlement_amount\", \"settlement_percentage\", \"settlement_term\"]","79453edc":"data.drop(columns =cols_to_drop, inplace = True )","4580dacb":"data.head()","9cc54584":"data.shape","0d00aa21":"drop_nan = data.isnull().sum()\ndrop_nan = drop_nan[drop_nan.values > (len(data) * 0.30)]\ndrop_nan_dun = pd.DataFrame(drop_nan)\ndrop_nan_dun = drop_nan.index\ndrop_nan_dun","6083242a":"data.drop(labels= drop_nan_dun, inplace = True, axis = 1)","504813f9":"data.head()","86f99925":"data.shape","0d5de72a":"data.groupby(\"loan_status\").mean()","f066ca90":"credit_policy = \"Does not meet the credit policy. Status:\"\nlen_credit_policy = len(credit_policy)\nremove_credit_policy = (\n    lambda status: status[len_credit_policy:]\n    if credit_policy in str(status)\n    else status\n)\ndata[\"loan_status\"] = data[\"loan_status\"].map(remove_credit_policy)\n\nrows_to_drop = data[\n    (data[\"loan_status\"] != \"Charged Off\") & (data[\"loan_status\"] != \"Fully Paid\")\n].index\ndata.drop(index=rows_to_drop, inplace=True)\n\ndata.groupby(\"loan_status\")[\"loan_status\"].count()","6b6ad668":"data[\"loan_status\"].unique()","836dc93e":"data.groupby(\"loan_status\").mean()","e4be71be":"data.isnull().sum()","12ea2a79":"for col in data.columns:\n  if isinstance(data[col][0], float):\n    # do the median.\n    median_data = statistics.median(data[col][:])\n    data[col].fillna(median_data, inplace = True)\n    #print(median_data)\n  else: # isinstance(df[col][0], str):\n    # do the mode.\n    mode_data = statistics.mode(data[col][:])\n    data[col].fillna(mode_data, inplace = True)\n    #print(mode_data)","2090498d":"data.isnull().sum()","67bc49c0":"cor = data.corr()\nplt.figure(figsize=(25,25))\n\nsns.heatmap(cor, annot=True, cmap='viridis', square = True)","44cca4e3":"#Convert columns Types \n\ndata.term.replace((' 36 months', ' 60 months'),(36 ,60), inplace = True) \ndata.emp_length.replace(('10+ years','2 years','< 1 year','3 years','1 year','5 years','4 years','6 years','8 years','7 years','9 years'),(10,2,0.5,3,1,5,4,6,8,7,9), inplace  = True)\ndata.home_ownership.replace(('MORTGAGE', 'RENT','OWN','ANY', 'OTHER','NONE'),(1,2,3,4,5,6), inplace = True) \ndata.verification_status.replace(('Source Verified', 'Verified','Not Verified'),(1,2,3), inplace = True) \ndata.loan_status.replace(('Fully Paid\t', 'Charged Off\t'),(1,0), inplace = True) \ndata.purpose.replace(('debt_consolidation', 'credit_card','home_improvement','other', 'major_purchase','medical','small_business','car','moving','vacation','house','wedding','renewable_energy','educational'),(1,2,3,4,5,6,7,8,9,10,11,12,13,14), inplace = True) \ndata.application_type.replace(('Individual','Joint App'),(1,2), inplace  = True)\n","f2bea3c2":"x = data.drop(columns =[\"loan_status\"])\ny = data[\"loan_status\"]","b97e475b":"scaler = StandardScaler()\nscaler_data = scaler.fit_transform(x)","b38b87b6":"x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.25, shuffle = True)","ccaffbae":"log_model = LogisticRegression(solver= \"sag\", random_state= 33, max_iter = 1000)\nlog_model.fit(x_train,y_train)","fbd92cd6":"#model score with train data\n\nlog_model.score(x_train,y_train)\n","e3094ef4":"#model score with test data\n\n\nlog_model.score(x_test,y_test)","f9e66c2e":"print(\"Logistic Regression model train score is\", log_model.score(x_train,y_train))","062aca15":"print(\"Logistic Regression model test score is\", log_model.score(x_test,y_test))","f5f92126":"log_model.classes_","7a75c9c4":"log_model.n_iter_","571b12e9":"y_pred = log_model.predict(x_test)","01554a4d":"cm = confusion_matrix(y_test, y_pred)","101b16db":"print(\"Confusion Matrix is: \\n \",cm)","bfce8f25":"sns.heatmap(cm,center = True)\nplt.show()\n#Fully paid = 1\n#Charged off = 0","2c9ede8d":"AccScore = accuracy_score(y_test, y_pred, normalize= True)","ea900ea2":"print('Accuracy Score is: ', AccScore)","fb7105a0":"# Start our Classification model","8986de3f":"* Here we won't deal with current loan becasue we don't Know if it will be charged off or fully paid in the future, also we will remove (Defaluters, Late (16-30 days),Late (31-120 days),in grace period)\n* we will add The credit policy to both of Charged off and Fully Paid","45e303d9":"Standarize data in simmilar range","e59a23ad":"After that we will remove columns that have more than 35% of Null values","9017f0bb":"replace verification_status data:\n1. Not Verified = 1.0\n1. Source Verified = 2.0\n1. Verified = 3.0","6e144dc7":"replace home_ownership data:\n1. MORTGAGE = 1.0\n1. RENT = 2.0\n1. OWN = 3.0\n1. ANY = 4.0\n1. NONE = 5.0\n1. OTHER = 6.0","d892fd9d":"# We have a big point here to Focus on:\nThe data has a lot of columns about lending club data, the data contains several columns about irrelevant data that not created untill the loan been accepted, so just I want to consider the data columns that focus on the process before accepting the applicant to take the Loan.\n\nHere I will remove some columns that are irrelevant","f1097692":"# Lets see our Target(loan_status) and see how to manage it","358b6ea8":"replace purpose data:\n1. debt_consolidation = 1\n1. credit_card = 2\n1. home_improvement = 3\n1. other = 4\n1. major_purchase = 5\n1. medical = 6\n1. small_business = 7\n1. car = 8\n1. moving = 9\n1. vacation = 10\n1. house = 11\n1. wedding = 12\n1. renewable_energy = 13\n1. educational = 14","4949e982":"let's split data to Input and Target","755ac010":"replace loan_status data:\n1. Fully paid = 1\n1. Charged of = 0","7cd7be17":"replace term data:\n1. 36 months = 36\n1. 60 months = 60\n","ebd52543":"# Calculate Confusion Matrix and Accuracy Score ","dd631fb6":"here we have problem with converting Object to float, so we can replace Categorical data with numbers that describe the classification work","780322bf":"replace application_type data:\n1. Individual = 1\n1. Joint App = 2","8c882d6a":"# The Questions Here are:\n* How to predict if the lender will fully pay the money be lent from Lending club? \n* How to decrease the risk of Not pay back?","371f95c3":"# Okay, Thats Great, There is no Null values in the data and Now we can Start Our Model","d68ab76a":"replace emp_length data:\n1. 10+ years = 11\n1. 2 years = 2\n1. < 1 year = 0\n1. 3 years = 3\n1. 1 year = 1\n1. 5 years = 5\n1. 4 years = 4\n1. 6 years = 6\n1. 8 years = 8\n1. 7 years = 7\n1. 9 years = 9"}}