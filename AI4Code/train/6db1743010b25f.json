{"cell_type":{"1407e54a":"code","955a52f2":"code","cd6216a6":"code","5617925f":"code","171afa53":"code","123d7d4a":"code","499bc3cb":"code","d77e2628":"code","535a32aa":"code","308eaf3b":"code","870ec05e":"code","9290c4e9":"code","b1505770":"code","2ae0f5cd":"code","47b3b048":"code","16371d52":"code","cc265315":"code","75e167fe":"code","df005147":"code","07689a43":"code","b0e10777":"code","4c031214":"code","19e4943c":"code","3e8d7ba9":"code","7a5c7d94":"code","076c4ef0":"code","89822d24":"code","fbef5d98":"code","b48dc00b":"code","42b00481":"code","6c670089":"code","b9aa99e2":"code","103c9061":"code","eeee95b6":"code","032257f3":"code","c6194b3f":"code","e18079f4":"code","de459c6b":"code","87332cb0":"code","a5062137":"markdown","7068859c":"markdown","234da102":"markdown","ee24d2ed":"markdown","7cfa3312":"markdown","4ddfc931":"markdown","0389115c":"markdown","15a063fb":"markdown","e0c2c58d":"markdown","8dea2ea6":"markdown","2be28599":"markdown","24833519":"markdown","c77688ba":"markdown","9ed90056":"markdown","2e724efb":"markdown","0f1a4b08":"markdown","7003c8ca":"markdown","5116ae7e":"markdown","5cc3f4ee":"markdown","de318f8e":"markdown"},"source":{"1407e54a":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","955a52f2":"pd.set_option('display.max_rows',None)","cd6216a6":"df = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')","5617925f":"df.head()","171afa53":"df.shape","123d7d4a":"#missing data\ntotal = df.isnull().sum().sort_values(ascending=False)\npercent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nf, ax = plt.subplots(figsize=(15, 6))\nplt.xticks(rotation='90')\nsns.barplot(x=missing_data.index, y=missing_data['Percent'])\nplt.xlabel('features', fontsize=15)\nplt.ylabel('Percent of missing values', fontsize=15)\nplt.title('Percent missing data by feature', fontsize=15)\nmissing_data.head()","499bc3cb":"df['Rating'].describe()","d77e2628":"plt.figure(figsize=(10,5))\nsns.kdeplot(data = df.Rating, color = 'g',shade = True)\nplt.title('Rating Distribution')\nplt.xlabel('Rating')\nplt.ylabel('Frequency')\nplt.show()","535a32aa":"df.loc[df.Rating > 5.0]","308eaf3b":"df = df.drop([10472])","870ec05e":"plt.figure(figsize=(10,5))\nsns.kdeplot(data = df.Rating, color = 'g',shade = True)\nplt.title('Rating Distribution')\nplt.xlabel('Rating')\nplt.ylabel('Frequency')\nplt.show()","9290c4e9":"## handle missing values \ndf['Rating'] = df['Rating'].fillna(df['Rating'].median())","b1505770":"df.describe()","2ae0f5cd":"plt.figure(figsize=(10,5))\nsns.kdeplot(data = df.Rating, color = 'g',shade = True)\nplt.title('Rating Distribution')\nplt.xlabel('Rating')\nplt.ylabel('Frequency')\nplt.show()","47b3b048":"print( len(df['Category'].unique()) , \"categories\")\n\nprint(\"\\n\", df['Category'].unique())","16371d52":"plt.figure(figsize=(7,10))\nsns.countplot(data = df, y = 'Category',order = df['Category'].value_counts().index)\nplt.title('Number of apps in each category')\nplt.ylabel('Categories')\nplt.xlabel('Count of apps in each category')","cc265315":"df['Reviews'].head()","75e167fe":"df['Reviews'] = pd.to_numeric(df['Reviews'],errors='coerce')","df005147":"df['Reviews'].head()","07689a43":"df.Size.head()","b0e10777":"len(df[df['Size'] == 'Varies with device'])","4c031214":"df['Size'] = df['Size'].replace('Varies with device', 0) ","19e4943c":"df['Size'] = df['Size'].replace({'k': '*1e3', 'M': '*1e6'}, regex=True).map(pd.eval).astype(int)","3e8d7ba9":"df['Installs'].isnull().sum()","7a5c7d94":"df['Installs'].head(10)","076c4ef0":"df['Installs'] = df['Installs'].replace({'\\,' : '', '\\+' : ''},regex = True).astype(int)","89822d24":"df['Type'].isnull().sum()","fbef5d98":"df['Type'] = df['Type'].fillna(df['Type'].mode()[0])","b48dc00b":"# Data to plot\nlabels =df['Type'].value_counts(sort = True).index\nsizes = df['Type'].value_counts(sort = True)\n\n\ncolors = [\"palegreen\",\"orangered\"]\nexplode = (0.1,0)  # explode 1st slice\n\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=270,)\n\nplt.title('Percent of Free App in store',size = 20)\nplt.show()","42b00481":"df['Type'] = df['Type'].map({'Free':0,\"Paid\":1})","6c670089":"df['Type'].value_counts()","b9aa99e2":"df['Price'] = df['Price'].replace({'\\$' : ''},regex = True).astype(float)","103c9061":"df['Content Rating'].value_counts()","eeee95b6":"df = pd.get_dummies(df, columns= [\"Content Rating\"])","032257f3":"print( len(df['Genres'].unique()) , \"genres\")\n\nprint(\"\\n\", df['Genres'].unique())","c6194b3f":"df[\"Last Updated\"].head()","e18079f4":"df['Current Ver'] = df['Current Ver'].fillna(df['Current Ver'].mode()[0])","de459c6b":"df['Android Ver'] = df['Android Ver'].fillna(df['Android Ver'].mode()[0])","87332cb0":"df.isnull().sum()","a5062137":"## Content Rating","7068859c":"### most of the application are free(approx 93%)","234da102":"## Price","ee24d2ed":"## Size","7cfa3312":"## Last Updated","4ddfc931":"## Type","0389115c":"### Category","15a063fb":"## Installs","e0c2c58d":"### Rating","8dea2ea6":"### convert 'Varies with device' to Nan","2be28599":"## Genres","24833519":"### Family and Game are the categories which has maximum apps","c77688ba":"### Reviews","9ed90056":"#### remove + and , from values","2e724efb":"## Current Version","0f1a4b08":"### Reviews col should be numeric type. Convert it","7003c8ca":"### remove '$' symbol from values","5116ae7e":"## Android Version","5cc3f4ee":"### Rating of apps should be upto 5.0 , but there is one record where it's rating is 19.0. We will drop it.","de318f8e":"### Average rating is more than 4"}}