{"cell_type":{"0e487089":"code","47034c20":"code","e37b97f9":"code","82b2ed1e":"code","503733e2":"code","36ebd549":"code","23fae7c9":"code","34b8468c":"code","75de7b6d":"code","3183bf7a":"code","a0dbb85d":"code","cfdb7335":"markdown","30b0aecc":"markdown","2d02785d":"markdown","5de76aab":"markdown","a4ab620e":"markdown","b341f077":"markdown"},"source":{"0e487089":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os","47034c20":"import matplotlib.pyplot as plt\nfrom matplotlib import patches, patheffects\nimport imageio","e37b97f9":"def read_image_locs(dirname='..\/input\/siim-covid19-detection\/train'):\n    collect = []\n    for dirname, _, filenames in os.walk(dirname):\n        for filename in filenames:\n            study, series = dirname.split(\"\/\")[-2:]\n            image = filename.replace(\".dcm\", \"\")\n            collect.append((study, series, image))\n    locs = pd.DataFrame(collect, columns=(\"study\", \"series\", \"image\"))\n    return locs\n\ntrain_image_locs = read_image_locs()","82b2ed1e":"image_level = pd.read_csv(\"..\/input\/siim-covid19-detection\/train_image_level.csv\")\nstudy_level = pd.read_csv(\"..\/input\/siim-covid19-detection\/train_study_level.csv\")","503733e2":"image_level.head()","36ebd549":"study_level.head()","23fae7c9":"study_level_ = study_level.copy()\nstudy_level_.id = study_level_.id.str.replace(\"_study\", \"\")\nmerged = image_level.merge(study_level_, left_on=\"StudyInstanceUID\", right_on=\"id\", suffixes=(\"_image\", \"_study\"))\nmerged = merged.rename({'Negative for Pneumonia': 'Negative', 'Typical Appearance': 'Typical', 'Indeterminate Appearance': 'Indeterminate', 'Atypical Appearance': 'Atypical'}, \n              axis=\"columns\")\nmerged.head()","34b8468c":"merged.shape, image_level.shape, study_level.shape","75de7b6d":"(merged[['Negative', 'Typical', 'Indeterminate', 'Atypical']].sum(axis=\"columns\") != 1).sum()","3183bf7a":"def get_boxes_and_labels(image_info):\n    if pd.isna(image_info.boxes):\n        boxes, labels = [], []\n    else:\n        boxes = eval(image_info.boxes)\n        label = image_info[['Negative', 'Typical', 'Indeterminate', 'Atypical']].T\n        label = label[label.astype(\"bool\")].index[0]\n        labels = len(boxes)*[label]\n    return boxes, labels\n    \ndef draw_boxes(ax, image_info, color=\"tab:orange\"):\n    for box, label in zip(*get_boxes_and_labels(image_info)):\n        rect = patches.Rectangle((box[\"x\"], box[\"y\"]), box[\"width\"], box[\"width\"], fill=False, edgecolor=color)\n        ax.add_patch(rect)\n        text = ax.text(box[\"x\"], box[\"y\"], label, color=color, fontsize=20)\n        text.set_path_effects([patheffects.Stroke(linewidth=3, foreground='black'),\n                   patheffects.Normal()]) \ndef plot_xray(idx, ax):\n    image_info = merged.iloc[idx]\n    image_loc = train_image_locs[train_image_locs[\"study\"] == image_info[\"StudyInstanceUID\"]]\n    image_file = '..\/input\/siim-covid19-detection\/train\/' + \"\/\".join(image_loc.values[0,:]) + \".dcm\"\n    im = imageio.imread(image_file)\n    ax.imshow(im, cmap=\"gray\")\n    ax.axis(\"off\")\n    \n    draw_boxes(ax, image_info)","a0dbb85d":"fig, axes = plt.subplots(4, 4, figsize=(20, 20))\nidxs = [i for i in range(axes.size)]\nprint(type(axes))\nfor idx, ax in zip(idxs, axes.flat):\n    plot_xray(idx, ax)","cfdb7335":"In this notebook I do simple EDA, ending with plotting some of the training data","30b0aecc":"Here I check that the last four columns are indeed one hot encoded, i.e. that exactly one of these equals one, while the three equals zero for each row","2d02785d":"# Plot X-ray","5de76aab":"Here I check that the merged dataframe contains the same number of rows as the image dataframe","a4ab620e":"The brightness varies a lot between each image, so some form of brightness equilization should be done.","b341f077":"Here I merge the study and image dataframes to get study id and labels associated with each image"}}