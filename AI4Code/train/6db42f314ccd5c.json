{"cell_type":{"8818aa3b":"code","b83c59c7":"code","8f7aadbc":"code","b36f0e14":"code","90173605":"code","1308edcb":"code","5af6f4f4":"code","1c571053":"code","090ce6d9":"code","a8c4232d":"markdown","0f154a29":"markdown","5c732046":"markdown","6eba9366":"markdown","506ea551":"markdown","4b977417":"markdown","69ada867":"markdown","36a52ba5":"markdown"},"source":{"8818aa3b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\n%matplotlib inline","b83c59c7":"# References : https:\/\/www.icij.org\/investigations\/fincen-files\/download-fincen-files-transaction-data\/\ndata = pd.read_csv(\"\/kaggle\/input\/the-fincen-files\/transactions_map.csv\")","8f7aadbc":"data.head()","b36f0e14":"# Total transaction amount 35.68 billion from 2000-2017 \ndata[\"amount_transactions\"].sum()","90173605":"data[\"year\"] = pd.to_datetime(data[\"begin_date\"], errors='coerce').dt.year\ntemp = data.groupby([\"year\"])[\"amount_transactions\"].sum().to_frame().reset_index()\ntemp[\"year\"] = temp[\"year\"].apply(lambda x: int(x))\ntemp[\"amount_transactions\"] = temp[\"amount_transactions\"].apply(lambda x: round(x\/1000000000,2))\nax = temp.plot.bar(x=\"year\", y=\"amount_transactions\", figsize=(15,5), title=\"Transferred amount every year between financial institutions in different countries\")\nx_offset = -0.03\ny_offset = 0.02\nfor p in ax.patches:\n    b = p.get_bbox()\n    val = b.y1 + b.y0        \n    ax.annotate(val, ((b.x0 + b.x1)\/2 + x_offset, b.y1 + y_offset))\ndel temp","1308edcb":"#data[\"amount_transactions\"] = data[\"amount_transactions\"].apply(lambda x : round(x\/1000000000.0,4))\ncountry_total_received_amount = data.groupby([\"beneficiary_bank_country\"])[\"amount_transactions\"].sum().to_frame().reset_index()\ncountry_total_received_amount.sort_values([\"amount_transactions\"], ascending=False, inplace=True)\nx = country_total_received_amount[\"beneficiary_bank_country\"].tolist()[:10]\ny = country_total_received_amount[\"amount_transactions\"].tolist()[:10]\nothers_amount = sum(country_total_received_amount[\"amount_transactions\"].tolist()[10:])\nx.append(\"others\")\ny.append(others_amount)\ndel country_total_received_amount\nfig1, ax1 = plt.subplots()\nax1.pie(y, labels=x, autopct='%1.1f%%',\n        shadow=True, startangle=90)\n# ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n\ndel x\ndel y","5af6f4f4":"temp = data.loc[data[\"beneficiary_bank_country\"]==\"Russia\"].groupby([\"year\"])[\"amount_transactions\"].sum().to_frame().reset_index()\ntemp[\"year\"] = temp[\"year\"].apply(lambda x: int(x))\ntemp[\"amount_transactions\"] = temp[\"amount_transactions\"].apply(lambda x: round(x\/1000000000,2))\nax = temp.plot.bar(x=\"year\", y=\"amount_transactions\", figsize=(15,5), title=\"Russia received amount every year\")\nx_offset = -0.03\ny_offset = 0.02\nfor p in ax.patches:\n    b = p.get_bbox()\n    val = b.y1 + b.y0        \n    ax.annotate(val, ((b.x0 + b.x1)\/2 + x_offset, b.y1 + y_offset))\ndel temp","1c571053":"#data[\"amount_transactions\"] = data[\"amount_transactions\"].apply(lambda x : round(x\/1000000000.0,4))\nbeneficiary_bank_received_amount = data.groupby([\"beneficiary_bank\"])[\"amount_transactions\"].sum().to_frame().reset_index()\nbeneficiary_bank_received_amount.sort_values([\"amount_transactions\"], ascending=False, inplace=True)\nbeneficiary_bank_received_amount[\"amount_transactions\"] = beneficiary_bank_received_amount[\"amount_transactions\"].apply(lambda x : round(x\/1000000000.0,4))\nax = beneficiary_bank_received_amount[:10].plot.bar(x=\"beneficiary_bank\", y=\"amount_transactions\", figsize=(15,5), title=\"Top 10 Beneficiary banks\")\nx_offset = -0.03\ny_offset = 0.02\nfor p in ax.patches:\n    b = p.get_bbox()\n    val = b.y1 + b.y0        \n    ax.annotate(val, ((b.x0 + b.x1)\/2 + x_offset, b.y1 + y_offset))\n","090ce6d9":"originator_bank_received_amount = data.groupby([\"originator_bank\"])[\"amount_transactions\"].sum().to_frame().reset_index()\noriginator_bank_received_amount.sort_values([\"amount_transactions\"], ascending=False, inplace=True)\noriginator_bank_received_amount[\"amount_transactions\"] = originator_bank_received_amount[\"amount_transactions\"].apply(lambda x : round(x\/1000000000.0,4))\nax = originator_bank_received_amount[:10].plot.bar(x=\"originator_bank\", y=\"amount_transactions\", figsize=(15,5), title=\"Top 10 Originator banks\")\nx_offset = -0.03\ny_offset = 0.02\nfor p in ax.patches:\n    b = p.get_bbox()\n    val = b.y1 + b.y0        \n    ax.annotate(val, ((b.x0 + b.x1)\/2 + x_offset, b.y1 + y_offset))","a8c4232d":"**Insights (basics) - Will update the notebook once I go deeper.**\n* The total transactions amount shared between different financial institutions in different countries is **35.68 billion** over the period  of time (2000-2017).\n* In **2013**, a higher amount (**7.87 billion**) got transferred between financial institutions in different countries.\n* **Russia** is most money received country. Its **20.4%** of **35.68 billion** over a period of time (2000-2017).\n  - Top 10 beneficiary countries\n     - Russia\n     - Latvia\n     - Switzerland\n     - Singapore\n     - Hong Kong\n     - United Kingdom\n     - United States\n     - Netherlands\n     - Cayman Islands\n     - Cyprus \n* In 2011, Russia received a higher amount **3.22 billion**.\n* **Rosbank** received a highest amount **3.55 billion** over a period of time 2000-2017.\n  - Top 10 beneficiary banks\n      - Rosbank\n      - Credit Suisse AG\n      - Rigensis Bank AS\n      - ING Netherland NV\n      - Deutsche Bank AG -- London Branch\n      - JPMorgan\n      - Societe Generale Bank And Trust Singapore SA\n      - Hong Kong And Shanghai Banking Corp\n      - Bank Soyuz\n      - Caledonian Bank Ltd\n* **Amsterdam Trade Bank NV** transferred a highest amount **3.15 billion** over a period 2000-2017.\n  - Top 10 originator banks\n      - Amsterdam Trade Bank NV\n      - AS Expobank\n      - Deutsche Bank AG\n      - ING Netherland NV\n      - Rigensis Bank AS\n      - Rosbank\n      - JPMorgan Chase Bank\n      - Gazprombank\n      - Caledonian Bank Ltd\n      - Societe Generale Private Banking\n","0f154a29":"* In 2011, Russia received a higher amount **3.22 billion**","5c732046":"* **Amsterdam Trade Bank NV** transferred a highest amount **3.15 billion** over a period 2000-2017","6eba9366":"* **Russia** is most money received country. Its **20.4%** of **35.68 billion** over a period of time (2000-2017)","506ea551":"* The total transactions amount shared between different financial institutions in different countries is **35.68 billion** over the period  of time (2000-2017)","4b977417":"* In **2013**, a higher amount (**7.87 billion**) got transferred between financial institutions in different countries.","69ada867":"**Fields description**\n- id = transaction identification number generated by ICIJ\n- icij_sar_id = SAR ID number generated by ICIJ that shows all the transactions that were extracted from the same report.\n- filer_org_name_id = financial institution that filed the report with FinCEN\n- filer_org_name = financial institution that filed the report with FinCEN\n- begin_date = date the first transaction in the reported transaction by the filer (set of transactions with the same originator and beneficiary) took place\n- end_date = date the last transaction in the reported transaction by the filer (set of transactions with same originator and beneficiary) took place\n- origsame originator and beneficiary) took place\n- originator_bank_id = bank where the transaction (s) was originated\n- originator_bank = bank where the transaction (s) was originated\n- originator_bank_country = location country of the originator bank\n- originator_iso = originator bank ISO code of the bank location country\n- beneficiary_bank_id = bank where the transaction (s) was received\n- beneficiary_bank = bank where the transaction (s) was received\n- beneficiary_bank_country = location country of the beneficiary bank\n- beneficiary_iso = beneficiary bank ISO code of the bank location country\n- number_transactions = number of transactions\n- amount_transactions = total amount of the transactions","36a52ba5":"* Rosbank received a highest amount **3.55 billion** over a period of time 2000-2017"}}