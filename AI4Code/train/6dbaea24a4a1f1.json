{"cell_type":{"aa5b5c3a":"code","350fa21b":"code","a9e4ef1c":"code","2888f68b":"code","4b867270":"code","c36b2df5":"code","1b18ec4e":"code","ee73d120":"code","fadccb4a":"code","6266361e":"code","d1029f3e":"code","bed4ee67":"code","bb15af1b":"code","0a042763":"code","13a6e8f5":"code","a5ebfaa2":"code","6b2136a9":"code","00fc6cae":"code","1b2c1a07":"code","0d0bce55":"code","31107467":"code","ed756cf8":"code","dd0bb937":"code","2b32cd4d":"code","e4c6634c":"code","016ab252":"code","50c8af5e":"code","13b0c0cc":"code","ffa190b8":"code","ef39bd84":"code","3f04c76b":"code","3a8f6809":"code","8d2b3c80":"code","e0c9d37f":"code","ddca0f6e":"code","f2e227be":"code","70a9bc6f":"code","22d42de0":"code","2f7601f3":"code","d5e8a7f2":"code","1a29c40c":"code","e31b87a4":"code","4ba5a5b6":"code","a70379b8":"code","f1ef71ec":"code","66b6925b":"code","b799e046":"code","ba6ef312":"code","f4225dd8":"code","d514ff4f":"code","52a2bdf0":"code","992447a0":"code","65871763":"code","3c012701":"code","9ea8a554":"code","70aa21cb":"code","d12736a5":"code","112077e6":"code","62524a4f":"code","0609c965":"code","a6fe28eb":"code","cffe1b49":"code","963c8cf6":"code","4cfc0b6d":"code","d794907c":"code","ee2bc4f1":"code","f1509b9d":"code","507926f4":"code","8b4d24cf":"code","8c831a1f":"code","f66b2bee":"code","3ee6d8de":"code","c32cae5d":"code","cbbb351d":"code","b576b637":"code","a6c3fe6b":"code","86c018b2":"code","add65cfd":"code","15610b79":"code","ac39df86":"code","67b52f66":"code","8cbde4c3":"code","126bea8f":"markdown","bba75580":"markdown","1ceccc67":"markdown","bcb579c6":"markdown","27d25abe":"markdown","653f5b7b":"markdown","c875f26e":"markdown","e7fb71c1":"markdown","b040a43f":"markdown","a93cf2b1":"markdown","28612652":"markdown","24fb3290":"markdown","07983691":"markdown","37e54186":"markdown","92f0516b":"markdown","0b91b220":"markdown","3b08e3f1":"markdown","5d6fb82e":"markdown","0828d8b2":"markdown","2eda7757":"markdown","922b4340":"markdown","900684f0":"markdown","b7ff3e56":"markdown","53896807":"markdown","67832566":"markdown","20b7a5fa":"markdown"},"source":{"aa5b5c3a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","350fa21b":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\n#pd.read_csv\ub294 csv\ud30c\uc77c\uc744 pandas dataframe\ud615\uc2dd\uc73c\ub85c \ubc14\uafb8\uc5b4 \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\uae30 \uc27d\uac8c \ud569\ub2c8\ub2e4.","a9e4ef1c":"train.head()\n#pandas\uc758 head method\ub97c \uc0ac\uc6a9\ud558\uba74 \ub370\uc774\ud130\ub97c \uc704\uc5d0\uc11c n\uac1c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. (default : 5)","2888f68b":"train.info()\n#pandas\uc758 info method\ub97c \uc0ac\uc6a9\ud558\uba74 \ub370\uc774\ud130\uc758 \uc790\ub8cc\ud615, null\uac12\uc758 \uc218\ub97c \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n#null \uac12\ub4e4\uc774 \uba87\uac1c \ubcf4\uc785\ub2c8\ub2e4.","4b867270":"train = train.set_index(\"PassengerId\")\ntest = test.set_index(\"PassengerId\")\n#PassengerId\ub294 id\uc785\ub2c8\ub2e4 index\ub85c \uc0ac\uc6a9\ud574\ubd05\uc2dc\ub2e4.\n#pandas\uc758 set_index\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 column\uc744 index\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","c36b2df5":"sns.set(rc = {'figure.figsize':(10,5)})\nsns.barplot(x=\"Pclass\", y=\"Survived\",data=train)\n#1\ub4f1\uc11d\uc77c\uc218\ub85d \uc0dd\uc874\uc728\uc774 \ub192\uc2b5\ub2c8\ub2e4.\n#\uc804\ucc98\ub9ac \uc5c6\uc774 \ud559\uc2b5 \ud560 \ub54c \uadf8\ub300\ub85c \uc0ac\uc6a9\ud574\ub3c4 \ub420 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n#seaborn\uc744 \uc774\uc6a9\ud558\uc5ec \ub9c9\ub300\uadf8\ub798\ud504\ub97c \uadf8\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","1b18ec4e":"train[\"Name\"].head()","ee73d120":"train[\"Name_2\"] = train[\"Name\"].str.split(\",\").str[1].str.split(\".\").str[0].str[1:]\ntest[\"Name_2\"] = test[\"Name\"].str.split(\",\").str[1].str.split(\".\").str[0].str[1:]\n#\uc774\ub984\uc744 \uc27c\ud45c\ub85c \uad6c\ubd84\ud558\uace0 2\ubc88\uc9f8 \uc778\uc790\uc5d0\uc11c \ub9c8\uce68\ud45c\ub85c \uad6c\ubd84\ud558\uc5ec 1\ubc88\uc9f8\uc5d0 \uc788\ub294 \uacbd\uce6d\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4.\n#pandas\uc5d0\uc11c \ubb38\uc790\uc5f4 \ub370\uc774\ud130\ub97c \ud55c\ubc88\uc5d0 \ucc98\ub9ac\ud558\uae30 \uc704\ud558\uc5ec str\ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","fadccb4a":"train[\"last_name\"] = train[\"Name\"].str.split(\",\").str[0]\ntest[\"last_name\"] = test[\"Name\"].str.split(\",\").str[0]\n#\uc774\ub984\uc744 \uc27c\ud45c\ub85c \uad6c\ubd84\ud558\uace0 1\ubc88\uc9f8\uc5d0 \uc788\ub294 \uc131\uc528\ub97c \ub9ac\ud134\ud558\uc5ec \uc77c\ud589 \ub4f1\uc758 feature\ub97c \uc774\uc6a9\ud569\ub2c8\ub2e4.","6266361e":"train[\"last_name\"].nunique()\n#\uc131\uc528\uac00 \ub9ce\uc2b5\ub2c8\ub2e4.\n#pandas\uc758 nunique\ub97c \uc0ac\uc6a9\ud558\uba74 \uace0\uc720\uac12\uc758 \uc218\ub97c \uc54c \uc218 \uc788\uace0 unique\ub97c \uc0ac\uc6a9\ud558\uba74 \uace0\uc720\uac12\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","d1029f3e":"imsi_df = pd.concat([train,test],axis=0)\ntrain[\"last_name_sum\"] = train[\"last_name\"].map(dict(imsi_df[\"last_name\"].value_counts()))\ntest[\"last_name_sum\"] = test[\"last_name\"].map(dict(imsi_df[\"last_name\"].value_counts()))\n#\uac19\uc740 \uc131\uc528\uac00 \uba87 \uba85 \uc788\ub294\uc9c0\ub85c feature\ub97c \ucd94\uac00\ud569\uc2dc\ub2e4(sibsp\ub098 parch\uc640 \ube44\uc2b7\ud55c \ud6a8\uacfc\ub97c \uae30\ub300\ud574\ubd05\uc2dc\ub2e4.)\n#\uc774 \ub54c test data\ub97c \ubcf4\uc720\ud558\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 test data\uc5d0\uc11c\uc758 \uc815\ubcf4\ub3c4 \ud568\uaed8 \uc774\uc6a9\ud569\ub2c8\ub2e4.\n#\uace0\uc720\uac12\ubcc4\ub85c \uba87\uac1c \uc788\ub294\uc9c0 \uacc4\uc0b0\ud574\uc11c \ub515\uc154\ub108\ub9ac\ub97c \uc774\uc6a9\ud574 \ub300\uc785\uc2dc\ucf1c \uc0c8\ub85c\uc6b4 feature\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.","bed4ee67":"train = train.drop(\"last_name\",axis=1)\ntest = test.drop(\"last_name\",axis=1)\n#\uc131\uc528 column\uc740 drop \ud569\uc2dc\ub2e4.\n#drop\uc744 \ud1b5\ud574 \ud2b9\uc815\ud589, \ud2b9\uc815\uc5f4\uc744 \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","bb15af1b":"sns.set(rc = {'figure.figsize':(20,10)})\nsns.barplot(x=\"Name_2\", y=\"Survived\",data=train)\n#\uacbd\uce6d\uc5d0 \ub300\ud574\uc11c\ub294 one hot encoding\uc744 \ud558\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","0a042763":"train[train[\"Name_2\"]==\"Rev\"]\n#\uc2e0\ubd80\ub2d8\uc740 \ubaa8\ub450 \ub3cc\uc544\uac00\uc168\uc2b5\ub2c8\ub2e4.","13a6e8f5":"train[train[\"Name_2\"]==\"Don\"]\n#Don\uc774\ub780 \uacbd\uce6d\uc740 \uc120\uc0dd\ub2d8\uc774\ub77c\uace0 \ud558\ub124\uc694.\n#\uc704\uc758 \ubc29\ubc95\ucc98\ub7fc \"train\" dataframe\uc5d0\uc11c name_2 column\uc758 \uac12\uc774 rev\uc778 \ud589\uc744 \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","a5ebfaa2":"train[train[\"Name_2\"]==\"Capt\"]\n#Capt\uc778\ub370 \uc120\uc7a5\ub2d8\uc740 \uc544\ub2c8\ub124\uc694 \ubaa8\ub974\uaca0\uc2b5\ub2c8\ub2e4.","6b2136a9":"train[train[\"Name_2\"]==\"Sir\"]\n#\uae30\uc0ac \uc791\uc704\ub97c \ubc1b\uc740 \ubd84\ub3c4 \ud55c\uba85\uc788\uc5c8\ub358 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","00fc6cae":"train[train[\"Name_2\"]==\"Lady\"]\n#\uc704\uc5d0 \uc788\ub294 \ubd84\uacfc \uc77c\ud589\uc778 \uac83 \uac19\ub124\uc694","1b2c1a07":"train[train[\"Name_2\"]==\"Ms\"]\n#\ud55c\ubd84 \uacc4\uc2ed\ub2c8\ub2e4.","0d0bce55":"train[train[\"Name_2\"]==\"Mme\"]\n#madame(\ub9c8\ub2f4) \ud504\ub791\uc2a4 \uae30\ud63c \uc5ec\uc131\uc5d0\uac8c \uc8fc\uc5b4\uc9c0\ub294 \ud638\ub77c\uace0 \ud569\ub2c8\ub2e4.(\uacf5\uacbd\uc758 \uc758\ubbf8\ub3c4 \uc788\ub294 \uac83 \uac19\ub124\uc694.)","31107467":"train[train[\"Name_2\"]==\"Mlle\"]\n#Mademoiselle(\ub9c8\ub4dc\ubaa8\uc544 \uc824) \ud504\ub791\uc2a4 \ubbf8\ud63c \uc5ec\uc131\uc5d0\uac8c \uc8fc\uc5b4\uc9c0\ub294 \ud638\ub77c\uace0 \ud569\ub2c8\ub2e4.(\uc131\ucc28\ubcc4\uc758 \uc774\uc720\ub85c \uc694\uc998\uc5d0\ub294 \uc798 \uc4f0\uc774\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud569\ub2c8\ub2e4.)","ed756cf8":"train[train[\"Name_2\"]==\"Jonkheer\"]\n#Jonkheer\ub294 \uadc0\uc871 \ub0b4\uc5d0\uc11c \ub0ae\uc740 \uacbd\uce6d\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4.\n#\ud55c\uba85\uc774\uae30 \ub54c\ubb38\uc5d0 Jonkheer\uc758 \uc0dd\uc874\uc728\uc740 0%\uc785\ub2c8\ub2e4.","dd0bb937":"train = train.drop(\"Name\",axis=1)\ntest = test.drop(\"Name\",axis=1)\n#\uc774\uc81c Name feature\ub97c drop\ud574\uc90d\uc2dc\ub2e4.","2b32cd4d":"sns.set(rc = {'figure.figsize':(10,5)})\nsns.barplot(x=\"Sex\", y=\"Survived\",data=train)\n#\uc5ec\uc131\uc758 \uc0dd\uc874\uc728\uc774 \ub0a8\uc131\uc5d0 \ube44\ud574 \uad49\uc7a5\ud788 \ub192\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n#\ucc28\uc774\uac00 \ud06c\uae30 \ub54c\ubb38\uc5d0 \ud559\uc2b5 \ud560 \ub54c ordinal encoding\uc744 \uc774\uc6a9\ud558\uc5ec \uc774\uc6a9\ud574\uc90d\uc2dc\ub2e4.","e4c6634c":"train[\"Age\"].unique()[:50]\n#\ub098\uc774\ub294 \uadf8\ub300\ub85c \ud559\uc2b5\uc2dc\ud0a4\uac70\ub098 binning\ud558\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","016ab252":"sns.set(rc = {'figure.figsize':(10,5)})\nsns.barplot(x=\"SibSp\", y=\"Survived\",data=train)\n#\ub3d9\uc2b9\uc790 \uc911 \ud615\uc81c, \ubc30\uc6b0\uc790\uc758 \uc218\uac00 1~2\uba85\uc778 \ubd84\ub4e4\uc758 \uc0dd\uc874\uc728\uc774 \ube44\uad50\uc801 \ub192\uac8c \ub098\ud0c0\ub0ac\uc2b5\ub2c8\ub2e4.\n#\ub3d9\uc2b9\uc790 \uc911 \ud615\uc81c, \ubc30\uc6b0\uc790\uc758 \uc218\uac00 \uc5c6\ub294 \ubd84\uc740 \uc0dd\uc874\uc728\uc774 \ub0ae\uc558\uc2b5\ub2c8\ub2e4.","50c8af5e":"train[train[\"SibSp\"]>=5].sort_values(\"SibSp\")\n#\ub3d9\uc2b9\uc790 \uc911 \ud615\uc81c, \ubc30\uc6b0\uc790\uc758 \uc218\uac00 5\uba85 \uc774\uc0c1\uc778 \ubd84\ub4e4\uc740 \ubaa8\ub450 \uc0ac\ub9dd\ud558\uc168\uc2b5\ub2c8\ub2e4.\n#\ub3d9\uc2b9\uc790 \uc911 \ud615\uc81c, \ubc30\uc6b0\uc790\uc758 \uc218\uac00 6\uba85\uc774\uba74 \uadf8 \uc77c\ud589\uc5d0 \ub300\ud574 SibSp\uac00 5\ub85c \ud45c\ud604\ub420 \uac83\uc785\ub2c8\ub2e4\ub9cc 5\uba85 \uc77c\ud589\uc5d0 1\uba85\uc774 \ubd80\uc871\ud558\uace0 8\uba85 \uc77c\ud589\uc5d0 2\uba85\uc774 \ubd80\uc871\ud558\ub124\uc694.\n#sort_values\ub97c \uc0ac\uc6a9\ud558\uba74 \ud2b9\uc815 column\uc744 \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","13b0c0cc":"test[test[\"SibSp\"]>=5]\n#test \ub370\uc774\ud130\uc5d0 \uacc4\uc2dc\ub124\uc694.","ffa190b8":"train[(train[\"SibSp\"]==3)|(train[\"SibSp\"]==4)][\"Survived\"].sum()\/len(train[(train[\"SibSp\"]==3)|(train[\"SibSp\"]==4)])\n#\ub3d9\uc2b9\uc790 \uc911 \ud615\uc81c, \ubc30\uc6b0\uc790\uc758 \uc218\uac00 3~4\uba85\uc778 \ubd84\ub4e4\ub3c4 \ud655\uc2e4\ud558\uac8c \ub9ce\uc774 \uc0b4\uc544\ub0a8\uc558\ub2e4\uace0 \ud558\uae30\uc5d4 \uc560\ub9e4\ud569\ub2c8\ub2e4.","ef39bd84":"sns.set(rc = {'figure.figsize':(10,5)})\nsns.barplot(x=\"Parch\", y=\"Survived\",data=train)\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 1~2\uba85\uc778 \ubd84\ub4e4\uc758 \uc0dd\uc874\uc728\uc774 \ube44\uad50\uc801 \ub192\uac8c \ub098\ud0c0\ub0ac\uc2b5\ub2c8\ub2e4.\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 \uc5c6\ub294 \ubd84\uc740 \uc0dd\uc874\uc728\uc774 \ub0ae\uc558\uc2b5\ub2c8\ub2e4.","3f04c76b":"train[(train[\"Parch\"]==4) | (train[\"Parch\"]==6)]\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 4,6\uba85\uc778 \ubd84\ub4e4\uc740 \ubaa8\ub450 \uc0ac\ub9dd\ud558\uc168\uc2b5\ub2c8\ub2e4.\n#\uadfc\ub370 \uc77c\ud589\uc774 6\uba85\uc774\uba74 parch\uac00 6\uc778 \ub370\uc774\ud130\ub3c4 6\uac1c \uc774\uc0c1 \uc788\uc5b4\uc57c \ud558\ub294\uac70 \uc544\ub2cc\uac00\uc694 \ubaa8\ub974\uaca0\uc2b5\ub2c8\ub2e4.\n#Fortune, Mr. Mark\ub294 \ud638\uc2e4\uc744 3\uac1c \uc608\uc57d\ud588\uc2b5\ub2c8\ub2e4. \uac00\uc871\ub4e4 \ud638\uc2e4\uc744 \ud55c\ubc88\uc5d0 \uc608\uc57d\ud55c \uac78\uc218\ub3c4 \uc788\uaca0\ub124\uc694.","3a8f6809":"train[train[\"Parch\"]==5]\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 5\uba85\uc778 \ubd84\ub4e4\uc740 \ud45c\ubcf8\uc774 \uc801\uc2b5\ub2c8\ub2e4. 5\ubd84\uc911 \ud55c\ubd84\ub9cc \uc0b4\uc544\ub0a8\uc558\uc2b5\ub2c8\ub2e4.","8d2b3c80":"train[train[\"Parch\"]==3]\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 3\uba85\uc778 \ubd84\ub4e4\uc740 5\ubd84 \uc911 3\ubd84\uc774 \uc0b4\uc544\ub0a8\uc73c\uc168\uc2b5\ub2c8\ub2e4.","e0c9d37f":"len(train[train[\"Parch\"]==2])\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 2\uba85\uc778 \ubd84\ub4e4\ub3c4 \uaf64 \uc788\ub124\uc694.","ddca0f6e":"len(train[train[\"Parch\"]==1])\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 1\uba85\uc778 \ubd84\ub4e4\ub3c4 \uaf64 \uc788\ub124\uc694.","f2e227be":"len(train[train[\"Parch\"]==0])\n#\ub3d9\uc2b9\uc790 \uc911 \ubd80\ubaa8\ub2d8\uacfc \uc544\uc774\ub4e4\uc758 \uc218\uac00 0\uba85\uc778 \ubd84\ub4e4\uc774 \ub300\ub2e4\uc218\ub124\uc694.","70a9bc6f":"train[\"Ticket\"].unique()[:50]\n#\ubaa8\ub974\uaca0\uc2b5\ub2c8\ub2e4.","22d42de0":"train = train.drop(\"Ticket\",axis=1)\ntest = test.drop(\"Ticket\",axis=1)","2f7601f3":"train[\"Fare\"].unique()[:50]\n#\uac00\uaca9\uc740 \uadf8\ub300\ub85c \ud559\uc2b5\uc2dc\ud0a4\uac70\ub098 binning\ud558\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","d5e8a7f2":"train[\"Cabin\"] = train[\"Cabin\"].str[0]\ntest[\"Cabin\"] = test[\"Cabin\"].str[0]\n#\uc120\uc2e4\ubc88\ud638\uc5d0\uc11c titanic\ud638\uc758 deck\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","1a29c40c":"sns.set(rc = {'figure.figsize':(10,5)})\nsns.barplot(x=\"Cabin\", y=\"Survived\",data=train)\n#NaN\uac12\uc744 \ud3ec\ud568\ud558\uc5ec one_hot_encoding\uc744 \uc774\uc6a9\ud558\uc5ec \ucc98\ub9ac\ud574\uc8fc\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","e31b87a4":"sns.set(rc = {'figure.figsize':(10,5)})\nsns.barplot(x=\"Embarked\", y=\"Survived\",data=train)\n#\ud0d1\uc2b9\ud55c \ud56d\uad6c\ub294 one hot encoding\uc744 \ud558\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","4ba5a5b6":"train.head()\n#nan \uac12\uc740 \uc778\uacf5\uc9c0\ub2a5\uc774 \ud559\uc2b5\ud558\uae30 \uc5b4\ub835\uae30 \ub54c\ubb38\uc5d0 \uac12\uc744 \ucc44\uc6cc\uc8fc\uc5b4\uc57c\ud569\ub2c8\ub2e4.\n#\ubb38\uc790\uc5f4\uac12\uc740 \uc778\uacf5\uc9c0\ub2a5\uc774 \ud559\uc2b5\ud558\uae30 \uc5b4\ub835\uae30 \ub54c\ubb38\uc5d0 \uac12\uc744 \uc22b\uc790\ub85c \ubcc0\uacbd\ud574\uc57c\ud569\ub2c8\ub2e4.","a70379b8":"sex_mapping={\"male\":0,\"female\":1}\ntrain[\"Sex\"]=train[\"Sex\"].map(sex_mapping)\ntest[\"Sex\"]=test[\"Sex\"].map(sex_mapping)\n#\uc131\ubcc4\uc774 \uc0dd\uc874\uc5d0 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce58\uae30 \ub54c\ubb38\uc5d0 ordinal encoding\uc744 \uc774\uc6a9\ud558\uc5ec \uce58\ud658\ud574\uc90d\ub2c8\ub2e4.\n#OrdinalEncoder\ub97c \uc0ac\uc6a9\ud574\ub3c4 \uc88b\uc2b5\ub2c8\ub2e4.\n#\uc704\uc5d0 \ud55c\ubc88 \ub4f1\uc7a5\ud558\uc600\uc9c0\ub9cc map\uc744 \uc774\uc6a9\ud558\uc5ec \ub515\uc154\ub108\ub9ac\ub97c \ub300\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","f1ef71ec":"test[\"Fare\"] = test[\"Fare\"].fillna(test[\"Fare\"].mean())\ntrain[\"Embarked\"] = train[\"Embarked\"].fillna(train[\"Embarked\"].mode()[0])\n#\ud3c9\uade0\uac12, \ucd5c\ube48\uac12 \ub4f1\uc744 \uc0ac\uc6a9\ud558\uc5ec \uacb0\uce21\uce58\ub97c \ucc44\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n#\uacb0\uce21\uac12\uc740 fillna\ub97c \uc774\uc6a9\ud558\uc5ec \ucc44\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","66b6925b":"train = pd.get_dummies(train, columns = [\"SibSp\",\"Parch\",\"Name_2\",\"Embarked\"])\ntest = pd.get_dummies(test, columns = [\"SibSp\",\"Parch\",\"Name_2\",\"Embarked\"])\ntrain = pd.get_dummies(train, columns = [\"Cabin\"], dummy_na = True)\ntest = pd.get_dummies(test, columns = [\"Cabin\"], dummy_na = True)\n#pandas\uc758 get_dummies\ub97c \uc774\uc6a9\ud558\uc5ec one hot encoding\uc744 \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n#dummy_na \uc635\uc158\uc744 true\ub85c \uc124\uc815\ud558\uba74 nan \uac12\uc744 \ud558\ub098\uc758 \uac12\uc73c\ub85c \uc778\uc2dd\ud569\ub2c8\ub2e4.","b799e046":"train.info()","ba6ef312":"test.info()","f4225dd8":"train[\"Parch_9\"] = 0 #parch_9\ub77c\ub294 column\uc744 \uc0c8\ub85c \ub9cc\ub4e4\uace0 \uac12\uc744 \ubaa8\ub450 0\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4.\ntest[\"Name_2_Capt\"] = 0\ntest[\"Name_2_Jonkheer\"] = 0\ntest[\"Name_2_Lady\"] = 0\ntest[\"Name_2_Major\"] = 0\ntest[\"Name_2_Mlle\"] = 0\ntest[\"Name_2_Mme\"] = 0\ntest[\"Name_2_Sir\"] = 0\ntest[\"Name_2_the Countess\"] = 0\ntest[\"Cabin_T\"] = 0\ntest = test.rename(columns = {\"Name_2_Dona\":\"Name_2_Don\"})\n#data\uac00 \ub2e4\ub974\ub124\uc694 column\uc218\ub97c \ub9de\ucdb0\uc90d\uc2dc\ub2e4.\n#dona\uc640 don \ubaa8\ub450 \uc120\uc0dd\ub2d8\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4.","d514ff4f":"len(train.columns)","52a2bdf0":"len(test.columns)","992447a0":"age_fill_df = train.dropna()\nX = age_fill_df.drop([\"Survived\",\"Age\"],axis=1)\ny = age_fill_df[\"Age\"]\nage_fill_df = test.dropna()\nX = pd.concat([X,age_fill_df.drop([\"Age\"],axis=1)],axis=0)\ny = pd.concat([y,age_fill_df[\"Age\"]],axis=0)\n#X\ub294 \ub098\uc774\ub97c \uc81c\uc678\ud55c feature\uc774\uace0 y\ub294 \ub098\uc774\uac12\uc785\ub2c8\ub2e4.\n#concat\uc744 \uc774\uc6a9\ud558\uc5ec \ub450 dataframe\uc744 \uacb0\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n#pandas\uc758 dropna\ub97c \uc0ac\uc6a9\ud558\uba74 \uacb0\uce21\uac12\uc774 \uc788\ub294 \ud589\uc744 \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","65871763":"from catboost import CatBoostRegressor\ncat_cols = list(X.columns)\ncat_cols.remove(\"Fare\")\ncat_cols.remove(\"last_name_sum\")\nmodel = CatBoostRegressor(cat_features = cat_cols)\nmodel.fit(X,y,verbose=0)\n#\ubc94\uc8fc\ud615 feature\uac00 \ub9ce\uae30 \ub54c\ubb38\uc5d0 \ubc94\uc8fc\ud615 column\ub4e4\uc744 \uc9c0\uc815\ud574\uc11c catboost\ub97c \uc774\uc6a9\ud558\uc5ec \ud559\uc2b5\uc2dc\ud0b5\ub2c8\ub2e4.\n#catboost\ub294 \ubc94\uc8fc\ud615 feature\uac00 \ub9ce\uc744 \ub54c \uc88b\uc740 \uc131\ub2a5\uc744 \ubcf4\uc774\uba70 \ud558\uc774\ud37c \ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd\uc774 \ud06c\uac8c \ud544\uc694\ud558\uc9c0 \uc54a\uc544\uc11c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.","3c012701":"imsi_df = train[train[\"Age\"].isnull()]\nimsi_df[\"Age\"] = np.around(model.predict(train[train[\"Age\"].isnull()].drop([\"Survived\",\"Age\"],axis=1)))\ntrain = pd.concat([train.dropna(),imsi_df],axis=0)\ntrain = train.sort_index()\n\nimsi_df = test[test[\"Age\"].isnull()]\nimsi_df[\"Age\"] = np.around(model.predict(test[test[\"Age\"].isnull()].drop([\"Age\"],axis=1)))\ntest = pd.concat([test.dropna(),imsi_df],axis=0)\ntest = test.sort_index()\n#\uc608\uce21\ud55c \uac12\uc744 \uc801\uc6a9\ud558\uc5ec data\ub97c \uc7ac\uad6c\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4.","9ea8a554":"train.isnull().sum()\n#\uacb0\uce21\uac12\uc774 \ubaa8\ub450 \ucc44\uc6cc\uc9c4 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","70aa21cb":"from sklearn.preprocessing import RobustScaler\nrobust = RobustScaler().fit(train[[\"Age\"]])\ntrain[\"Age\"] = robust.transform(train[[\"Age\"]])\nrobust = RobustScaler().fit(train[[\"Fare\"]])\ntrain[\"Age\"] = robust.transform(train[[\"Fare\"]])\n#scaler\ub97c \uc0ac\uc6a9\ud558\uba74 \uc218\uce58\ud615 \ub370\uc774\ud130\uc758 \uac12\uc744 \ud2b9\uc815 \ubc94\uc704\ub0b4\uc5d0 \ube44\uc2b7\ud558\uac8c \ub9de\ucdb0\uc90d\ub2c8\ub2e4.","d12736a5":"from sklearn.preprocessing import RobustScaler\nrobust = RobustScaler().fit(test[[\"Age\"]])\ntest[\"Age\"] = robust.transform(test[[\"Age\"]])\nrobust = RobustScaler().fit(test[[\"Fare\"]])\ntest[\"Fare\"] = robust.transform(test[[\"Fare\"]])","112077e6":"cat_cols = list(train.columns)\ncat_cols.remove(\"Survived\")\ncat_cols.remove(\"last_name_sum\")\ncat_cols.remove(\"Age\")\ncat_cols.remove(\"Fare\")\ntrain[cat_cols] = train[cat_cols].astype(\"category\")\ntest[cat_cols] = test[cat_cols].astype(\"category\")\ntrain[\"Survived\"] = train[\"Survived\"].astype(int)\n#\uc774\uc720\ub294 \uc798 \ubaa8\ub974\uaca0\uc9c0\ub9cc \uc2a4\ucf00\uc77c\ub9c1 \uc774\ud6c4 \uac12\ub4e4\uc774 \ub2e4 float\ud615\uc2dd\uc73c\ub85c \ubc14\ub00c\uc5b4\uc11c category\ub85c \ubc14\uafd4\uc90d\ub2c8\ub2e4.\n#column\uc758 \uc790\ub8cc\ud615\uc740 astype\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","62524a4f":"train['Age'] = pd.cut(train[\"Age\"], bins=5,labels=range(5))\ntest[\"Age\"] = pd.cut(test[\"Age\"], bins=5,labels=range(5))\ntrain[\"Fare\"] = pd.cut(train[\"Fare\"], bins=10,labels=range(10))\ntest[\"Fare\"] = pd.cut(test[\"Fare\"], bins=10,labels=range(10))\n#\uc218\uce58\ud615 feature\ub97c \ubc94\uc8fc\ud615 feature\ub85c \ubcc0\ud658\ud574\uc8fc\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4.","0609c965":"train[\"Age\"] = train[\"Age\"].astype(int)\ntrain[\"Fare\"] = train[\"Fare\"].astype(int)\ntest[\"Age\"] = test[\"Age\"].astype(int)\ntest[\"Fare\"] = test[\"Fare\"].astype(int)\n#\ubcc0\ud658 \ud6c4 \uce74\ud14c\uace0\ub9ac\uc778 \uac12\uc744 int\ub85c \ubcc0\ud658\ud574\uc90d\ub2c8\ub2e4.","a6fe28eb":"train.head()\n#\ubcc0\ud658\uc774 \ub41c \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","cffe1b49":"from xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n#\uc5ec\ub7ec\uac00\uc9c0 \ubaa8\ub378\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n#\uac01\uac01\uc758 \ubaa8\ub378\uc5d0 \ub300\ud55c \uc774\ud574\uac00 \uace7 \uc88b\uc740 \uc608\uce21\uc744 \uc720\ub3c4\ud569\ub2c8\ub2e4.\n#\ub54c\ubb38\uc5d0 \uc801\uc5b4\ub3c4 boosting, tree \uacc4\uc5f4 \uc54c\uace0\ub9ac\uc998\uc774 \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0, \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378 \uad00\ub828 \uac1c\ub150\uc740 \uc544\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","963c8cf6":"from sklearn.metrics import accuracy_score\n#\uc815\ud655\ub3c4\ub97c \ud3c9\uac00\uc9c0\ud45c\ub85c \uc0ac\uc6a9\ud560 \uc608\uc815\uc774\uae30 \ub54c\ubb38\uc5d0 accuracy_score\ub97c import\ud569\ub2c8\ub2e4.","4cfc0b6d":"X = train.drop(\"Survived\",axis=1)\ny = train[\"Survived\"]\n#X\ub294 \uc608\uce21\ud560 \uac12\uc744 \uc81c\uc678\ud55c \ud559\uc2b5\uc5d0 \uc0ac\uc6a9\ud560 feature\uc785\ub2c8\ub2e4.\n#y\ub294 \uc608\uce21\ud560 feature\uc785\ub2c8\ub2e4.","d794907c":"from sklearn.model_selection import train_test_split\nX_train,X_val,y_train,y_val = train_test_split(X,y,test_size=0.2,random_state=62)\n#\ud559\uc2b5\uc744 \ud558\uace0 overfitting\ub41c \uc804\uccb4 dataset\uc73c\ub85c \uac80\uc99d\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 validation dataset\uc744 8\ub300 2\uc758 \ube44\uc728\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4.","ee2bc4f1":"model = XGBClassifier(eval_metric = \"logloss\",tree_method=\"gpu_hist\", enable_categorical=True, use_label_encoder=False)\nmodel.fit(X_train,y_train)\npred = model.predict(X_val)\naccuracy_score(pred,y_val)\n#model\uc758 hyperparameter\ub97c \uc124\uc815\ud558\uace0 \ud559\uc2b5\uacfc \uc608\uce21\uc758 \uacfc\uc815\uc744 \uac70\uce69\ub2c8\ub2e4.\n#\uadf8 \ud6c4, \uc608\uce21\uac12\uacfc \uac80\uc99d\uac12\uc744 \ube44\uad50\ud558\uc5ec \uc810\uc218\ub97c \uc0b0\ucd9c\ud569\ub2c8\ub2e4.","f1509b9d":"model = LGBMClassifier()\nmodel.fit(X_train,y_train)\npred = model.predict(X_val)\naccuracy_score(pred,y_val)","507926f4":"cat_cols = list(X.columns)\ncat_cols.remove(\"last_name_sum\")\ncat_cols.remove(\"Age\")\ncat_cols.remove(\"Fare\")\nmodel = CatBoostClassifier(cat_features = cat_cols)\nmodel.fit(X_train,y_train,verbose=0)\npred = model.predict(X_val)\naccuracy_score(pred,y_val)","8b4d24cf":"model = RandomForestClassifier()\nmodel.fit(X_train,y_train)\npred = model.predict(X_val)\naccuracy_score(pred,y_val)","8c831a1f":"model = DecisionTreeClassifier()\nmodel.fit(X_train,y_train)\npred = model.predict(X_val)\naccuracy_score(pred,y_val)","f66b2bee":"model = GradientBoostingClassifier()\nmodel.fit(X_train,y_train)\npred = model.predict(X_val)\naccuracy_score(pred,y_val)","3ee6d8de":"model = KNeighborsClassifier()\nmodel.fit(X_train,y_train)\npred = model.predict(X_val)\naccuracy_score(pred,y_val)","c32cae5d":"from sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import cross_val_score\nfold = StratifiedKFold(n_splits=5, shuffle = True, random_state=62)\n#\uac80\uc99d\uc14b\uc774 \uc804\uccb4 \ub370\uc774\ud130\ub97c \ub300\ud45c\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uae30 \ub54c\ubb38\uc5d0 fold\ub9cc\ud07c \uac80\uc99d\uc14b\uc744 \ub9cc\ub4e4\uc5b4 \uad50\ucc28\ud574\uc11c \uac80\uc99d\ud558\ub294 \uac83\uc744 cross validation\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4.","cbbb351d":"model = XGBClassifier(eval_metric = \"logloss\")\nscore = cross_val_score(model , X , y ,cv=fold)\nprint(np.mean(score))\n#5\ubc88\uc758 \uac80\uc99d \uacb0\uacfc\uc758 \uc810\uc218\uc758 \ud3c9\uade0\uc73c\ub85c \uc810\uc218\ub97c \uc815\ud569\ub2c8\ub2e4.","b576b637":"model = LGBMClassifier()\nscore = cross_val_score(model , X , y ,cv=fold)\nprint(np.mean(score))","a6c3fe6b":"model = CatBoostClassifier(verbose=0,cat_features = cat_cols)\nscore = cross_val_score(model , X , y ,cv=fold)\nprint(np.mean(score))","86c018b2":"model = RandomForestClassifier()\nscore = cross_val_score(model , X , y ,cv=fold)\nprint(np.mean(score))","add65cfd":"model = DecisionTreeClassifier()\nscore = cross_val_score(model , X , y ,cv=fold)\nprint(np.mean(score))","15610b79":"model = GradientBoostingClassifier()\nscore = cross_val_score(model , X , y ,cv=fold)\nprint(np.mean(score))","ac39df86":"model = KNeighborsClassifier()\nscore = cross_val_score(model , X , y ,cv=fold)\nprint(np.mean(score))","67b52f66":"model = CatBoostClassifier(verbose=0,cat_features=cat_cols)\nmodel.fit(X,y)\npred = model.predict(test)\n#\uac00\uc7a5 \uc88b\uc740 \uc131\ub2a5\uc744 \ubcf4\uc778 catboost\ub97c \uc774\uc6a9\ud569\ub2c8\ub2e4.","8cbde4c3":"sample_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\nsample_submission[\"Survived\"] = pred\nsample_submission.to_csv(\"submission.csv\", index=False)\n#dataframe\uc744 to_csv\ub97c \uc774\uc6a9\ud558\uc5ec csv\ub85c \ub9cc\ub4ed\ub2c8\ub2e4.","126bea8f":"**age**","bba75580":"# **\ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30 + \uc57d\uac04\uc758 \uc804\ucc98\ub9ac**","1ceccc67":"**Parch**","bcb579c6":"**cabin**","27d25abe":"**\uc774\uc81c Age \uacb0\uce21\uce58\ub97c \ucc44\uc6cc\uc90d\uc2dc\ub2e4.**\n\n**\ub098\uc774\ub97c \uc81c\uc678\ud55c feature\ub4e4\uc758 \uac12\uacfc \ub098\uc774 \uac12\uc744 \ud559\uc2b5\ud55c\ub2e4\uc74c, \ub098\uc774 \uac12\uc774 \uacb0\uce21\ub41c \ud589\ub4e4\uc758 \ub2e4\ub978 feature\ub4e4\uc744 \uc774\uc6a9\ud558\uc5ec \ub098\uc774\uc758 \uacb0\uce21 \uac12\uc744 \ucc44\uc6cc\ub123\uc2b5\ub2c8\ub2e4.**","653f5b7b":"**\ub370\uc774\ud130\ub97c \ubcf4\ub2e4 \ub354\uc9c1\uad00\uc801\uc73c\ub85c \uc218\uc815\ud558\ub294 \uae30\ubc95\uc5d0\ub294 kmeans, pca \ub4f1 \uc5ec\ub7ec\uac00\uc9c0 \uae30\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.**\n\n**\uadf8\ub7ec\ub098 kmeans\ubcf4\ub2e4\ub294 binning\uc774 \ub354 \uc801\ud569\ud558\ub2e4\uace0 \uc0dd\uac01\ud588\uc2b5\ub2c8\ub2e4.**\n\n**\ub610, pca\ub294 \uc218\ud559\uc801 \uc774\ud574\uac00 \uc644\ubcbd\ud558\uc9c0 \uc54a\uc544\uc11c \ucd94\ud6c4\uc5d0 \uc124\uba85\uc744 \ud558\uae30 \ud798\ub4e4\ub2e4\uace0 \ud310\ub2e8\ub418\uc5b4 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.**","c875f26e":"**\uc774\uc678\uc5d0\ub3c4 grid search, optuna\ub97c \uc774\uc6a9\ud558\uc5ec hyperparameter search\ub97c \uc9c4\ud589\ud560 \uc218 \uc788\uace0**\n\n**stacking, pseudo labeling \ub4f1\uc744 \uc774\uc6a9\ud558\uc5ec \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.**\n\n**\uadf8\ub7ec\ub098 \ub370\uc774\ud130\uc758 \uc218\uac00 \uc801\uc740 \uc810\uacfc catboost\ub294 \ud558\uc774\ud37c \ud30c\ub77c\ubbf8\ud130\uc758 \uc601\ud5a5\uc744 \ud06c\uac8c \ubc1b\uc9c0 \uc54a\ub294\ub2e4\ub294 \uc810 \ub54c\ubb38\uc5d0 \uadf8\ub7f0\uc9c0**\n\n**\uc704\uc758 \uae30\ubc95\ub4e4\uc744 \uc2dc\ub3c4\ud574\ubcf4\uc558\uc9c0\ub9cc \uc131\ub2a5\uc774 \ud5a5\uc0c1\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.**\n\n**\uc704 \uae30\ubc95\ub4e4\uc740 \ub098\uc911\uc5d0 tps \uac19\uc740 \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud558\uc5ec \ub2e4\ub904\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.**","e7fb71c1":"# **submission**","b040a43f":"**Ticket**","a93cf2b1":"**PassengerId**","28612652":"# **\ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30**\n\n**pandas\uc758 read_csv \uae30\ub2a5\uc5d0 \ud30c\uc77c \uacbd\ub85c\ub97c \uc785\ub825\ud558\uba74 csv \ud30c\uc77c\uc744 \uc77d\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4**\n\n\uacbd\ub85c\ub294 copy file path \uae30\ub2a5\uc744 \uc774\uc6a9\ud558\uba74 \ud3b8\ud569\ub2c8\ub2e4.(data \ud30c\uc77c \uc624\ub978\ucabd\uc5d0 copy \ubc84\ud2bc\uc774 \uc788\uc2b5\ub2c8\ub2e4.)","24fb3290":"# Import\n\n**python\uc5d0\uc11c\ub294 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud558\uc5ec import\ud558\ub294 \uacfc\uc815\uc744 \uac70\uce69\ub2c8\ub2e4.**\n\n***import pandas***\ub97c \uc9c4\ud589\ud558\uba74 pandas \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 import \ub418\uc9c0\ub9cc \ubcf4\ud1b5\uc740 pandas.~\ub97c \uce58\uae30 \uadc0\ucc2e\uc544\uc11c as pd\ub85c \ucd95\uc57d\ud569\ub2c8\ub2e4.\n\n**as pd\ub97c \ubd99\uc774\uba74 \ub2e4\uc74c\ubd80\ud130 pandas\ub97c pd\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.**\n\n**\uc774\uc640 \uac19\uc774 numpy\ub97c np\ub85c \ucd95\uc57d\ud558\uace0 matplotlib\ub97c plt, seaborn\uc744 sns\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.**","07983691":"**SibSp**","37e54186":"\uc774\ub984\uc5d0 \ub530\ub77c \uc0dd\uc874\uc728\uc774 0%\uac70\ub098 100%\uc778 \ud2b9\uc774 \ucf00\uc774\uc2a4\ub97c \uc870\uc0ac\ud574\ubcf4\uc558\ub294\ub370 \ubcf4\ud3b8\uc801\uc73c\ub85c\ub294 \uadf8 \ud638\uce6d\uc758 \uc218\uac00 \uc801\uc5b4\uc11c \uc0dd\uc874\uc728\uc774 \uadf9\ub2e8\uc801\uc73c\ub85c \ub098\ud0c0\ub09c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uadf8\ub9ac\uace0 \uc2e0\ubd80\ub2d8(rev)\ub4e4\uc740 \ubaa8\ub450 \ud76c\uc0dd\ub418\uc2e0 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","92f0516b":"**\uc774 \ub178\ud2b8\ubd81\uc740 \uce90\uae00\uc5d0 \ucc98\uc74c \uc785\ubb38\ud55c \ud559\uc0dd\ub4e4\uc744 \uc704\ud558\uc5ec \uc81c\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4.**\n\n**\uc81c\uac00 \ucc98\uc74c \ud0c0\uc774\ud0c0\ub2c9 \uc0dd\uc874\uc790 \uc608\uce21 \ubb38\uc81c\ub97c \ud574\uacb0\ud55c \ub2e4\uc74c tabular playground\uc744 \uacbd\ud5d8\ud558\uba70 \uc5bb\uc740 \uae30\uc220\ub4e4\uc744 \uc911\uc2ec\uc73c\ub85c \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4.**\n\n**tabular data\uc5d0 \ub300\ud574\uc11c\ub294 \ud0c0\uc774\ud0c0\ub2c9 \uc0dd\uc874\uc790 \uc608\uce21 \ubb38\uc81c\uac00 \ucd08\uc2ec\uc790 \uad6d\ub8f0\uc774\ub77c\uace0 \uc0dd\uac01\ub418\uc5b4 \ud0c0\uc774\ud0c0\ub2c9 \uc0dd\uc874\uc790 \uc608\uce21 \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4.**\n\n**\ud0c0\uc774\ud0c0\ub2c9 \ubb38\uc81c\ub294 \uc624\ub79c\uae30\uac04 \uc5f0\uad6c\ub418\uc5c8\ub358 \ub9cc\ud07c \uc5ec\ub7ec\uac00\uc9c0 \uae30\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.**\n\n**\uc774 \ub178\ud2b8\ubd81\uc740 \uc77c\ubc18 tabular data\ub97c \ub2e4\ub8e8\ub294 \uac83\uacfc \uac19\uc774 \uc9c4\ud589\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.**\n\n***\uadf8\ub9ac\uace0 \uc808\ub300 \ud0c0\uc774\ud0c0\ub2c9 \ub300\ud68c\uc5d0\uc11c \uc720\ucd9c\ub41c \uc11c\ube0c\ubbf8\uc158\uc744 \uc81c\ucd9c\ud558\uc9c0 \ub9c8\uc138\uc694.(mmo\uac19\uc740 \uc774\uc0c1\ud55c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uace0 \uc548\ud55c \ucc99 \ud558\ub294 \ub4f1)***","0b91b220":"**fare**","3b08e3f1":"**Name**","5d6fb82e":"**Pclass**","0828d8b2":"**Embarked**","2eda7757":"\uc8fc\uc758 : gpu\ub97c \uc0ac\uc6a9\ud558\ub294 \ucee4\ub110\uc785\ub2c8\ub2e4 \ud55c\ubc88 \uc2e4\ud589\uc2dc\ud0a4\uace0 \uc6b0\uce21 \uc0c1\ub2e8\uc758 \uc804\uc6d0\uc744 \uaebc\uc11c gpu \uc190\uc2e4\uc744 \uc904\uc774\uc2dc\uae38 \ubc14\ub78d\ub2c8\ub2e4.","922b4340":"**encoding**","900684f0":"# **\uc5ec\ub7ec\uac00\uc9c0 model\uc744 \uc774\uc6a9\ud55c \ud559\uc2b5**","b7ff3e56":"**cross_validation**","53896807":"**train_test_split**","67832566":"**sex**","20b7a5fa":"![image.png](attachment:4a66a488-41cb-4c38-9f30-36bf8211605d.png)\n\nhttps:\/\/titanicofficers.com\/titanic_06_boxhall_07.html(\uc774\ubbf8\uc9c0 \ucd9c\ucc98)"}}