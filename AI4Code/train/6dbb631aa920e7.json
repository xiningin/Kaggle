{"cell_type":{"2aff5874":"code","b1bb3955":"code","6ca6ad9f":"code","223ab5f6":"code","a5a291aa":"code","58c54889":"code","ace494c1":"code","2d68ab2f":"code","5ebf8929":"code","36ff6616":"code","a276c43c":"code","a1eb5a35":"code","9bb84667":"code","842d2f35":"code","04d7e327":"code","3f19eb13":"code","99f37f3d":"code","84778b19":"code","d96bf26b":"code","9a145eaf":"markdown","bff1ac39":"markdown","cda69c62":"markdown","4449c8b9":"markdown","ac662227":"markdown","da2ac662":"markdown","122b718f":"markdown","295ecca6":"markdown","f3f4c9b7":"markdown","a01f245d":"markdown","3aad61fe":"markdown","1df6293e":"markdown","aa26180c":"markdown","778a9b2e":"markdown"},"source":{"2aff5874":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # Linear Algebra\nimport pandas as pd # Data Processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b1bb3955":"#Load the dataset\nIris=pd.read_csv('..\/input\/iris\/Iris.csv')\nIris.head(n=10)#Checking the first 10 rows of the dataset","6ca6ad9f":"Iris.info()#Checking the type of data we have in dataset\nIris.isnull().sum()#Checking for null values, as there is no missing data.Hence we can process the dataset","223ab5f6":"#Now dropping the Id column, which is unnecessary for further analysis\nIris.drop('Id',axis=1,inplace=True)#axis=1 means removing col wise\nIris.head(n=10)#Again checking for the first 10 rows of dataset","a5a291aa":"#Exploratory Data Analysis\n#Sepal Length VS Sepal Width\nfig=Iris[Iris.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',marker='x',color='#fa6c33',label='Setosa')\nfig=Iris[Iris.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',marker='*',color='#3c8991',label='Versicolor',ax=fig)\nfig=Iris[Iris.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',marker='D',color='#d5081e',label='Virginica',ax=fig)\nfig.set_xlabel('Sepal Length')\nfig.set_ylabel('Sepal Width')\nfig.set_title('Sepal Length VS Sepal Width')\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nsns.set_style(\"darkgrid\")\nplt.show()","58c54889":"#Exploratory Data Analysis\n#Petal Length VS Petal Width\nfig=Iris[Iris.Species=='Iris-setosa'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',marker='x',color='#270c8c',label='Setosa')\nfig=Iris[Iris.Species=='Iris-versicolor'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',marker='o',color='#d5081e',label='Versicolor',ax=fig)\nfig=Iris[Iris.Species=='Iris-virginica'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',marker='>',color='#45aa53',label='Virginica',ax=fig)\nfig.set_xlabel('Petal Length')\nfig.set_ylabel('Petal Width')\nfig.set_title('Petal Length VS Petal Width')\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nsns.set_style(\"darkgrid\")\nplt.show()","ace494c1":"#Violin plot\n\nplt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='SepalLengthCm',palette='muted',inner='quartile',data=Iris)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='SepalWidthCm',palette='muted',inner='quartile',data=Iris)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='PetalLengthCm',palette='muted',inner='quartile',data=Iris)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='PetalWidthCm',palette='muted',inner='quartile',data=Iris)\nplt.show()\n","2d68ab2f":"#Histogram\nIris.hist(edgecolor='black', bins=15,color='#C11321',linewidth=1.8)\nfig=plt.gcf()\nfig.set_size_inches(15,9)\nplt.show()","5ebf8929":"# Pair Plot using seaborn library\npairplot=sns.pairplot(Iris,hue='Species',palette='husl',diag_kind=\"kde\",kind='scatter')","36ff6616":"# Area Plot\nIris.plot.area(y=['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm'],alpha=0.5,figsize=(13,9));","a276c43c":"# Heat map\nfig=plt.gcf()\nfig.set_size_inches(13,9)\nfig=sns.heatmap(Iris.corr(),annot=True,cmap='YlGnBu',linewidths=1.5,linecolor='k', vmin=0.5,vmax=1.0,square=True,cbar_kws={\"orientation\": \"vertical\"},cbar=True)","a1eb5a35":"#Splitting the dataset into X and Y..for that we need below sckitlearn library\nX=Iris.iloc[:,0:4]\nY=Iris.iloc[:,4]\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=100)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(Y_train.shape)\nprint(Y_test.shape)","9bb84667":"# Importing all the necessary packages to use the various classification algorithms\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import svm\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics #To check accuracy of the model","842d2f35":"#Logistic Regression\nlogistic=LogisticRegression()\nlogistic.fit(X_train,Y_train)\ny_prediction=logistic.predict(X_test)\naccuracy_logistic=metrics.accuracy_score(y_prediction,Y_test)\nprint('The accuracy of the Logistic Regression is',accuracy_logistic)\n","04d7e327":"#Decision Tree\ndecision_tree=DecisionTreeClassifier()\ndecision_tree.fit(X_train,Y_train)\ny_prediction=decision_tree.predict(X_test)\naccuracy_decision_tree=metrics.accuracy_score(y_prediction,Y_test)\nprint('The accuracy of the Decision Tree Classifier is',accuracy_decision_tree)\n","3f19eb13":"#KNearestNeighbors\nknn=KNeighborsClassifier(n_neighbors=3) \nknn.fit(X_train,Y_train)\ny_prediction=knn.predict(X_test)\naccuracy_knn=metrics.accuracy_score(y_prediction,Y_test)\nprint('The accuracy of the KNN is',accuracy_knn)","99f37f3d":"#Support Vecotr Machine--SVM\nsv=svm.SVC()\nsv.fit(X_train,Y_train)\ny_prediction=sv.predict(X_test)\naccuracy_svm=metrics.accuracy_score(y_prediction,Y_test)\nprint('The accuracy of svm is',accuracy_svm)","84778b19":"from sklearn.ensemble import GradientBoostingClassifier\nmodel=GradientBoostingClassifier(learning_rate=0.01,random_state=10)\nmodel.fit(X_train,Y_train)\ny_prediction=model.predict(X_test)\naccuracy_gradientboostingclassifier=metrics.accuracy_score(y_prediction,Y_test)\nprint(\"The accuracy of the gradientboostingclassifier is\",accuracy_gradientboostingclassifier)","d96bf26b":"Models=pd.DataFrame({'Algorithm':['Logistic Regression','Decision Tree','KNearestNeighbors','Support Vector Machine','Gradient Boosting'],'Accuracy':[accuracy_logistic,accuracy_decision_tree,accuracy_knn,accuracy_svm,accuracy_gradientboostingclassifier]})\nModels.sort_values(by='Accuracy',ascending=False)","9a145eaf":"The above plot shows the relationship between Sepal Length and Sepal Width****","bff1ac39":"#Now lets see how length and width are distributed among Sepals and Petals using a histogram\n\n* A histogram is a graphical display of data using bars of different heights. In a histogram, each bar groups numbers into ranges. Taller bars show that more data falls in that range. A histogram displays the shape and spread of continuous sample data.\n\n","cda69c62":"Wow! The above plot looks so amazing,now i am so excited to see how data is distributed among Petal Length and Petal Width..Without any delay let see..","4449c8b9":"* Area Plot : Area Plot gives us a visual representation of Various dimensions of Iris flower and their range in dataset.","ac662227":"*****The above plot shows the relationship between Petal Length and Petal Width","da2ac662":"Below algorithm is a part of Ensemble Learning---Gradient Boosting","122b718f":"Heat map: Heat map is used to find out the correlation between different features in the dataset.High positive or negative value shows that the features have high correlation.This helps us to select the parmeters for machine learning.","295ecca6":"The above plot shows how length and width are distributed..hope you liked my presentation..let's see some more..\nLet's check Pair Plot****\n\n* A pairs plot allows us to see both distribution of single variables and relationships between two variables . Pair plots are a great method to identify trends for follow-up analysis and, fortunately, are easily implemented in Python!","f3f4c9b7":"# The above Dataframe shows that high accuracy with logistic,knn and svm..If you like it kindly give me an upvote.!****","a01f245d":"Everythig looks so amazing right.! Data visualization is done using different plots..hope you liked it.!\n* Now it's time to choose an machine learning algorithm,when we look up to the dataset..As the data which we have is lablled so we are using following Machine Learning Classification Algorithms for prediction..\n","3aad61fe":"#The above violin plot shows density of length and width of the Species..the thinner part shows that there is lesser density..The thicker part shows that there is higher density","1df6293e":"#Data cleaning is done, now it's time for some Exploratory Data Analysis(EDA)\n#First and foremost,we are going to see how data is distributed among Sepal length and Sepal width using a Scatter plot\n\n* **A scatter plot is a type of plot or mathematical diagram using Cartesian coordinates to display values for typically two variables for a set of data. If the points are coded, one additional variable can be displayed.","aa26180c":"#Now let us see how length and width may vary according to the species\n**# using violin plot from seaborn**\n\n* *A violin plot is a method of plotting numeric data. It is similar to a box plot, with the addition of a rotated kernel density plot on each side. Violin plots are similar to box plots, except that they also show the probability density of the data at different values, usually smoothed by a kernel density estimator*","778a9b2e":"In the above data we have removed Id col which is unnecessary, now data is all good for further analysis..\nHope you guys enjoy while coding.."}}