{"cell_type":{"02301cc2":"code","5ec852ca":"code","4d6584ba":"code","4f9cf8ac":"code","9d0859cb":"code","68e880dd":"code","73eddbc2":"code","4d38e510":"code","c1c05326":"code","0c1f5aec":"markdown","385afed8":"markdown"},"source":{"02301cc2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport random\nimport matplotlib.pyplot as plt\nfrom mlxtend.data import loadlocal_mnist\n%matplotlib inline\nimport os","5ec852ca":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4d6584ba":"training_images_filepath = '\/kaggle\/input\/mnist-dataset\/train-images.idx3-ubyte'\ntraining_labels_filepath = '\/kaggle\/input\/mnist-dataset\/train-labels.idx1-ubyte'\ntest_images_filepath = '\/kaggle\/input\/mnist-dataset\/t10k-images.idx3-ubyte'\ntest_labels_filepath = '\/kaggle\/input\/mnist-dataset\/t10k-labels.idx1-ubyte'","4f9cf8ac":"X_train, y_train = loadlocal_mnist( training_images_filepath, training_labels_filepath)\nX_test, y_test = loadlocal_mnist(test_images_filepath, test_labels_filepath)","9d0859cb":"print('Dimension of training images:', np.shape(X_train))\nprint('Dimension of trainig labels:',np.shape(y_train))\nprint('Dimension of testing images:', np.shape(X_test))\nprint('Dimension of testing labels:',np.shape(y_test))","68e880dd":"# reshape the arrays:\nX_train = X_train.reshape(60000, 28, 28)\nX_test = X_test.reshape(10000, 28, 28)","73eddbc2":"print('Dimension of training images:', np.shape(X_train))\nprint('Dimension of testing images:', np.shape(X_test))","4d38e510":"def show(image, title):\n    index = 1 \n    plt.figure(figsize=(10,5))\n\n    for x in zip(image, title):        \n        image = x[0]        \n        title = x[1]\n        plt.subplot(2, 5, index)        \n        plt.imshow(image, cmap=plt.cm.gray)  \n        plt.title(x[1], fontsize = 9)\n        index += 1","c1c05326":"image = []\ntitle = []\nfor i in range(0, 5):\n    r = random.randint(1, len(X_train))\n    image.append(X_train[r])\n    title.append('training image:' + str(y_train[r]))       \n\nfor i in range(0, 5):\n    r = random.randint(1, len(X_test))\n    image.append(X_test[r])\n    title.append('testing image:' + str(y_test[r]))\n    \nshow(image, title)","0c1f5aec":"### Showing images with labels:","385afed8":"### Reading the files"}}