{"cell_type":{"abe7b1eb":"code","9ffe53ef":"code","e0eb554d":"code","8e27b553":"code","0717e6ca":"code","99cbe180":"code","1f54f764":"code","ae78e446":"code","3cab07ec":"code","125dfe44":"code","36620bc2":"code","fd20e4e9":"code","e53791fb":"code","1123c7df":"code","24c0bce0":"code","fd29194c":"code","d44aad99":"code","2284a23f":"code","43d93d12":"code","1ce8a777":"code","c75a365c":"code","afa9a1bc":"markdown","0811f7b6":"markdown","5989f657":"markdown","f9665954":"markdown","37835f86":"markdown","e8c1f5c1":"markdown","2733a851":"markdown","c7663197":"markdown","beac2940":"markdown","0fd2ac2d":"markdown"},"source":{"abe7b1eb":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\n# Any results you write to the current directory are saved as output.","9ffe53ef":"Train_data = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/train.csv')\nTest_data = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/test.csv')\nclass_map = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/class_map.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/sample_submission.csv')","e0eb554d":"Train_data.head()","8e27b553":"class_map.head()","0717e6ca":"# count the number of classes for each target\nn_classes = class_map.groupby(by=['component_type']).count()","99cbe180":"n_classes.head()","1f54f764":"sns.set(style=\"darkgrid\")\nk = ['vowel_diacritic','grapheme_root','consonant_diacritic']\nsns.countplot(data = class_map ,x = 'component_type',order = k)\n","ae78e446":"HEIGHT = 137\nWIDTH = 236","3cab07ec":"b_train_data = pd.read_parquet(f'\/kaggle\/input\/bengaliai-cv19\/train_image_data_0.parquet')\n\nimageid = b_train_data.iloc[:, 0]\nimage = b_train_data.iloc[:, 1:].values.reshape(-1, HEIGHT, WIDTH)\n","125dfe44":"f, ax = plt.subplots(5, 5, figsize=(16, 8))\nax = ax.flatten()\n\nfor i in range(25):\n    ax[i].imshow(image[i], cmap='Greys')\n","36620bc2":"def listToString(s):  \n    \n    # initialize an empty string \n    str1 = \"\"  \n    \n    # traverse in the string   \n    for ele in s:  \n        str1 += ele   \n    \n    # return string   \n    return str1  \n        ","fd20e4e9":"from wordcloud import WordCloud\n\n\ns = listToString(Train_data['grapheme'] )\n\n# Read the whole text.\ntext = s\n\n# Generate a word cloud image\nwordcloud = WordCloud().generate(text)\n\n# Display the generated image:\n# the matplotlib way:\nimport matplotlib.pyplot as plt\n\n\n# take relative word frequencies into account, lower max_font_size\nwordcloud = WordCloud(background_color=\"white\",max_words=len(s),max_font_size=70, relative_scaling=.5, font_path = \"\/kaggle\/input\/bengalifont\/Nikosh.ttf\").generate(text)\nplt.figure(figsize=(30, 30))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","e53791fb":"\n#sns.set(style=\"darkgrid\")\nplt.figure(figsize=(20, 10))\nsns.countplot(data = Train_data ,x = 'grapheme_root',color=\"c\")\n\n","1123c7df":"type(image[1])","24c0bce0":"rand_num = random.randint(0,len(image))\nrand_num","fd29194c":"plt.imshow(image[rand_num])\nplt.title(\"input_img\")\nplt.show()","d44aad99":"flipped_img = np.fliplr(image[rand_num])\nplt.imshow(flipped_img)\nplt.title(\"flipped_img\")\nplt.show()","2284a23f":"import skimage\nimg = image[rand_num]\nimg = skimage.util.random_noise(img, mode='gaussian', seed=None, clip=True)\nplt.imshow(img)\nplt.show()","43d93d12":"from skimage.transform import rotate\nimg = image[rand_num]\nimg = rotate(img, 15)\nplt.imshow(img)\nplt.show()","1ce8a777":"from skimage.transform import rotate\nimg = image[rand_num]\nimg = rotate(img, -15)\nplt.imshow(img)\nplt.show()","c75a365c":"import numpy as np\nfrom skimage import exposure\nimg = image[rand_num]\nv_min, v_max = np.percentile(img, (0.2, 99.8))\nimg = exposure.rescale_intensity(img, in_range=(v_min, v_max))\n\nplt.imshow(img)\nplt.show()\n","afa9a1bc":"## Train_data\nContains,\n1. Image_id -> Id of training Image\n2. grapheme_root -> character number (vowel + consonant)\n3. vowel_diacritic -> root vowel id number\n4. consonant_diacritic -> root consonant id number","0811f7b6":"# Augmentations\n## Flipping","5989f657":"## Gaussian Noice","f9665954":"## To Start with the Chalange go for\n## Bengali.AI : Design ResNet Layer by Layer\nhttps:\/\/www.kaggle.com\/chekoduadarsh\/bengali-ai-tutorial-design-resnet-layer-by-layer","37835f86":"## Class_map\n\nProvides us the number of unique elements in each class and their label to be reffered to Train_data","e8c1f5c1":"## Rotate","2733a851":"## Classical Research Papers and Repos on bengali letter classifications\n\n1. https:\/\/www.researchgate.net\/publication\/322112791_Handwritten_Bangla_Character_Recognition_Using_The_State-of-Art_Deep_Convolutional_Neural_Networks\n2. https:\/\/www.researchgate.net\/publication\/328214545_BARD_Bangla_Article_Classification_Using_a_New_Comprehensive_Dataset\n3. https:\/\/arxiv.org\/html\/1902.11133 (Bengali Handwritten Character Classification using Transfer Learning on Deep Convolutional Neural Network)\n4. https:\/\/github.com\/srdg\/bangla-dl\n5. https:\/\/github.com\/dibyatanoy\/Bengali-Handwritten-Character-Recognition-Using-Convolutional-Neural-Networks\n6. https:\/\/github.com\/tanvirfahim15\/BARD-Bangla-Article-Classifier","c7663197":"# <span style=\"color:blue\">Bengali<\/span>\n![](http:\/\/www.ukindia.com\/zip\/zben02.gif)\nBengali also known by its endonym Bangla, is an Indo-Aryan language primarily spoken by the Bengalis in South Asia. It is brahmic language which is assumed to be evoloved from Sanskrit\n\n### <span style=\"color:red\">Dont forget to upvote if you like!!<\/span>\n## Alphabets\nThe Bengali script can be divided into vowels and vowel diacritics\/marks, consonants and consonant conjuncts, diacritical and other symbols, digits, and punctuation marks. Vowels & consonants are used as alphabet and also as diacritical marks. Bengali contains 28 letters\n### Vowels\nThe Bengali script has a total of 9 vowel graphemes, each of which is called sw\u00f4r\u00f4b\u00f4rn\u00f4 \"vowel letter\"\n\n| Vowels  | Vowels phoneme  | \n|---|---|\n| **\u0985**  |\u00f4|\n|  **\u0986 ** | a  |\n|  **\u0987** | i  |\n| **\u0988** | \u012b\/ee |\n| **\u0989** | u  |\n| **\u098a** | \u016b\/oo |\n|**\u098b** |  \u1e5b\/ri |\n| **\u09e0** | \u1e5d\/rri |\n| **\u098c** | \u1e37\/li |\n| **\u09e1** | \u1e39\/lli |\n\n#### Complex Vowels\nBengali also has 4 complex vowels\n\n| Complex Vowels  | Vowels phoneme  | \n|---|---|\n| **\u098f ** | e |\n| **\u0990** | oi |\n| **\u0993** | o |\n| **\u0994** | ou |\n\n### Consonants\nConsonant letters are called b\u00e6nj\u00f4nb\u00f4rn\u00f4 \"consonant letter\" in Bengali. The names of the letters are typically just the consonant sound plus the inherent vowel. \n![](https:\/\/i.ytimg.com\/vi\/2FtVGjJC68I\/maxresdefault.jpg)\n\n\n\nSince they work on combination there are 19 x 9 letters to be identified.","beac2940":"## Change Intensity (Make letters Clear if their intensity is low)","0fd2ac2d":"## Histogramic Distribution of Grapheme root"}}