{"cell_type":{"2efc3759":"code","bfffb507":"code","5bd2f26f":"code","4fb5f88a":"code","38400f07":"code","f0b87012":"code","5f6822e8":"code","992f0995":"code","b0340789":"code","05edd3f4":"code","a33d39ad":"code","746e84b0":"code","c935270d":"code","9988d6ea":"code","8a6b3a99":"code","4f27d8be":"code","1cd3431b":"code","9b1bbca4":"code","814997bf":"code","03db6f9e":"code","8a6ea859":"code","faf395d7":"code","449b1787":"code","3b692083":"code","01a6dec6":"code","722ce811":"code","513f4798":"code","7acefdbb":"code","3382cc58":"code","c0782bf9":"code","bf736c51":"code","bef826cc":"code","8771254e":"code","e9234e66":"code","a1639862":"code","a567468a":"code","bb99a318":"code","0e37b57d":"code","1ee13a83":"code","1f57d0eb":"code","3466bfc0":"code","c54ad0b9":"code","0af78d2d":"code","76b8a7c2":"code","05b42d30":"code","1886d4da":"code","96c45f71":"code","bd539d63":"code","63877852":"code","c4d828a4":"code","93b4a396":"code","7daa58b7":"code","12fbf7e1":"code","d9fb0595":"code","39e30ffb":"code","725df88a":"code","98dc9302":"code","b4f8b026":"code","a4ad3f2d":"code","d0690181":"code","df56e005":"code","a6c676ea":"code","26a5e63b":"code","34a40693":"code","109280ff":"code","66cd58f9":"code","9e306cad":"code","30e2066c":"markdown","e889994b":"markdown","527b76c9":"markdown","40acb89d":"markdown","786079b7":"markdown","2910c9bb":"markdown","460f3339":"markdown","53561939":"markdown","e8c16151":"markdown","0096c050":"markdown","c3e156c0":"markdown","a35a0c23":"markdown","24854439":"markdown","a4bbac48":"markdown","fdaa4897":"markdown","c3243176":"markdown","1e29fc28":"markdown","86a260f3":"markdown","4052b6ba":"markdown","3d57a250":"markdown","7eaac0de":"markdown","6f8d6729":"markdown","3309c98a":"markdown","440cf5c5":"markdown","dd7ead78":"markdown","6c0b73b2":"markdown","44f0f0fa":"markdown","baef468c":"markdown","5df15d09":"markdown","1cdfc824":"markdown","1abd37cb":"markdown","9b3b2c35":"markdown","0ba03ff0":"markdown","26896a77":"markdown","31931488":"markdown","7cd48210":"markdown","b40a18b0":"markdown","8f0c3449":"markdown","9fb36dd7":"markdown","704042ad":"markdown","429a3e50":"markdown","c9d95a1d":"markdown","5740c91a":"markdown","796e1116":"markdown","bb31c33d":"markdown","f52d5344":"markdown","0e7cc8d5":"markdown","878a4da7":"markdown","cd963b1a":"markdown","73e83786":"markdown","e122ca50":"markdown","382d5d4b":"markdown","61f0d7ab":"markdown","9649415e":"markdown","5ab2e8c7":"markdown","9c7e1fc0":"markdown","5e97b740":"markdown","d310b4e1":"markdown","1c6d9bc2":"markdown","3d07c41c":"markdown","809b5883":"markdown","d1b19ec5":"markdown","04cb46cb":"markdown","5398db9f":"markdown","d762f5c9":"markdown","003c620b":"markdown","a568cc70":"markdown","64c9ca08":"markdown","1409b149":"markdown","423d90d2":"markdown","5a984d97":"markdown","f7f06eb9":"markdown"},"source":{"2efc3759":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nfrom __future__ import print_function\nimport matplotlib\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #plot graphs to analyze the data\nimport csv\nfrom PIL import Image # converting images into arrays\nfrom matplotlib.colors import LinearSegmentedColormap\nimport matplotlib.patches as mpatches\nfrom wordcloud import WordCloud, STOPWORDS\nimport seaborn as sns\nimport folium\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output","bfffb507":"df_crime_report=pd.read_csv(\"..\/input\/Crime_Data_from_2010_to_Present.csv\")\nprint(\"Data Loaded\")","5bd2f26f":"df_crime_report.head()","4fb5f88a":"df_crime_report.shape","38400f07":"df_crime_report.columns = list(map(str, df_crime_report.columns))\n\n# let's check the column labels types now\nall(isinstance(column, str) for column in df_crime_report.columns)","f0b87012":"df_crime_report_area=df_crime_report.set_index('Area Name')\n\n# let's view the first five elements and see how the dataframe was changed\ndf_crime_report_area.head()","5f6822e8":"df_crime_report[\"Area Name\"].drop_duplicates()","992f0995":"criminal_in_areas = np.zeros(21)\ncriminal_in_areas","b0340789":"arearows=[\"77th Street\",\n\"Central\",\n\"Devonshire\",\n\"Foothill\",\n\"Harbor\",\n\"Hollenbeck\",\n\"HollyWood\",\n\"Mission\",\n\"N HollyWood\",\n\"Newton\",\n\"Northeast\",\n\"Olympic\",\n\"Pacific\",\n\"Rampart\",\n\"Southeast\",\n\"SouthWest\",\n\"Topanga\",\n\"Van Nuys\",\n\"West LA\",\n\"West Valley\",\n\"Wilshire\",]","05edd3f4":"df_areanames=df_crime_report[\"Area Name\"]\ndf_areanames.head()","a33d39ad":"for index,item in enumerate(df_areanames):\n    if item==\"77th Street\":\n        criminal_in_areas[0]+=1\n    elif item==\"Central\":\n        criminal_in_areas[1]+=1\n    elif item==\"Devonshire\":\n        criminal_in_areas[2]+=1\n    elif item==\"Foothill\":\n        criminal_in_areas[3]+=1\n    elif item==\"Harbor\":\n        criminal_in_areas[4]+=1\n    elif item==\"Hollenbeck\":\n        criminal_in_areas[5]+=1\n    elif item==\"Hollywood\":\n        criminal_in_areas[6]+=1\n    elif item==\"Mission\":\n        criminal_in_areas[7]+=1\n    elif item==\"N Hollywood\":\n        criminal_in_areas[8]+=1\n    elif item==\"Newton\":\n        criminal_in_areas[9]+=1\n    elif item==\"Northeast\":\n        criminal_in_areas[10]+=1\n    elif item==\"Olympic\":\n        criminal_in_areas[11]+=1\n    elif item==\"Pacific\":\n        criminal_in_areas[12]+=1\n    elif item==\"Rampart\":\n        criminal_in_areas[13]+=1\n    elif item==\"Southeast\":\n        criminal_in_areas[14]+=1\n    elif item==\"Southwest\":\n        criminal_in_areas[15]+=1\n    elif item==\"Topanga\":\n        criminal_in_areas[16]+=1\n    elif item==\"Van Nuys\":\n        criminal_in_areas[17]+=1\n    elif item==\"West LA\":\n        criminal_in_areas[18]+=1\n    elif item==\"West Valley\":\n        criminal_in_areas[19]+=1\n    elif item==\"Wilshire\":\n        criminal_in_areas[20]+=1\n    ","746e84b0":"df_crime_counter=pd.DataFrame(criminal_in_areas,index=arearows)\ndf_crime_counter","c935270d":"df_crime_counter.plot(kind='Bar',stacked=False,figsize=(15,10))\nplt.title('Crime Numbers in Areas')\nplt.ylabel('Number Crimes')\nplt.xlabel('Areas')\n\nplt.show()","9988d6ea":"df_crime_report[\"Victim Age\"].fillna(df_crime_report[\"Victim Age\"].mean(),inplace=True)","8a6b3a99":"df_mean_by_Area=df_crime_report.groupby([\"Area Name\"]).mean()\ndf_mean_by_Area","4f27d8be":"df_mean_by_Area[\"Victim Age\"].plot(kind=\"Bar\",stacked=False,figsize=(15,10))\nplt.title('Victims Average Ages in Different Areas')\nplt.ylabel('Age')\nplt.xlabel('Areas')\n\nplt.show()","1cd3431b":"explode_list = [0.1, 0, 0.1, 0, 0.1, 0,0.1, 0, 0.1, 0, 0.1, 0,0.1, 0, 0.1, 0, 0.1, 0,0.1, 0, 0.1]\ndf_crime_counter.plot(kind=\"pie\",figsize=(15,10),autopct='%1.1f%%',startangle=90, shadow=True,subplots=True,explode=explode_list)","9b1bbca4":"crime_in_years=np.zeros(10)\ncrime_in_years","814997bf":"for item,index in enumerate(df_crime_report[\"Date Occurred\"]):\n    if \"2010\" in index:\n        crime_in_years[0]+=1\n    elif \"2011\" in index:\n        crime_in_years[1]+=1\n    elif \"2012\" in index:\n        crime_in_years[2]+=1\n    elif \"2013\" in index:\n        crime_in_years[3]+=1\n    elif \"2014\" in index:\n        crime_in_years[4]+=1\n    elif \"2015\" in index:\n        crime_in_years[5]+=1\n    elif \"2016\" in index:\n        crime_in_years[6]+=1\n    elif \"2017\" in index:\n        crime_in_years[7]+=1\n    elif \"2018\" in index:\n        crime_in_years[8]+=1\n    elif \"2019\" in index:\n        crime_in_years[9]+=1\n    ","03db6f9e":"yearscolumn=[\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\"]","8a6ea859":"crime_in_years=pd.DataFrame(crime_in_years,index=yearscolumn)\ncrime_in_years","faf395d7":"crime_in_years.plot(kind=\"line\",figsize=(10,5),stacked=False)\nplt.title(\"Crime numbers in Years\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Crime Numbers\")\n\nplt.show()","449b1787":"df_dene=np.zeros((21,10))","3b692083":"\ni=0\nfor area,date in zip(df_crime_report[\"Area Name\"],df_crime_report[\"Date Occurred\"]):\n  \n    if \"2010\" in date:\n        if area==\"77th Street\":\n            df_dene[0][0]+=1\n        elif area==\"Central\":\n            df_dene[1][0]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][0]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][0]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][0]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][0]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][0]+=1\n        elif  area==\"Newton\":\n            df_dene[7][0]+=1\n        elif  area==\"Mission\":\n            df_dene[8][0]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][0]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][0]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][0]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][0]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][0]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][0]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][0]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][0]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][0]+=1\n        elif  area==\"West LA\":\n            df_dene[18][0]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][0]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][0]+=1\n    elif  \"2011\" in date:\n        i=1\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2012\" in date:\n        i=2\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2013\" in date:\n        i=3\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2014\" in date:\n        i=4\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2015\" in date:\n        i=5\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2016\" in date:\n        i=6\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2017\" in date:\n        i=7\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2018\" in date:\n        i=8\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1\n    elif \"2019\" in date:\n        i=9\n        if area==\"77th Street\":\n            df_dene[0][i]+=1\n        elif area==\"Central\":\n            df_dene[1][i]+=1\n        elif  area==\"Devonshire\":\n            df_dene[2][i]+=1\n        elif  area==\"Foothill\":\n            df_dene[3][i]+=1\n        elif  area==\"Harbor\":\n            df_dene[4][i]+=1\n        elif  area==\"Hollenbeck\":\n            df_dene[5][i]+=1\n        elif  area==\"Hollywood\":\n            df_dene[6][i]+=1\n        elif  area==\"Newton\":\n            df_dene[7][i]+=1\n        elif  area==\"Mission\":\n            df_dene[8][i]+=1\n        elif  area==\"N Hollywood\":\n            df_dene[9][i]+=1\n        elif  area==\"Northeast\":\n            df_dene[10][i]+=1\n        elif  area==\"Olympic\":\n            df_dene[11][i]+=1\n        elif  area==\"Pacific\":\n            df_dene[12][i]+=1\n        elif  area==\"Rampart\":\n            df_dene[13][i]+=1\n        elif  area==\"Southeast\":\n            df_dene[14][i]+=1\n        elif  area==\"Southwest\":\n            df_dene[15][i]+=1\n        elif  area==\"Topanga\":\n            df_dene[16][i]+=1\n        elif  area==\"Van Nuys\":\n            df_dene[17][i]+=1\n        elif  area==\"West LA\":\n            df_dene[18][i]+=1\n        elif  area==\"West Valley\":\n            df_dene[19][i]+=1\n        elif  area==\"Wilshire\":\n            df_dene[20][i]+=1","01a6dec6":"df_dene","722ce811":"df_areas_years=pd.DataFrame(df_dene, columns=yearscolumn,index=arearows)\ndf_areas_years['Total'] = df_areas_years.sum (axis = 1)\n","513f4798":"years = list(map(str, range(2010, 2020)))\nyears","7acefdbb":"df_Newton=df_areas_years.loc[[\"Newton\"],years].transpose()\ndf_Newton.describe()","3382cc58":"df_Newton.plot(kind='box',vert=True,figsize=(5,5))\nplt.title('Crimes in Newton from 2011 to 2019')\nplt.ylabel('Number of Crimes')\n\nplt.show()","c0782bf9":"df_Van_Nuys_Newton=df_areas_years.loc[[\"Van Nuys\",\"Newton\"],years].transpose()\ndf_Van_Nuys_Newton.describe()","bf736c51":"df_Van_Nuys_Newton.plot(kind='box',vert=True,figsize=(5,5))\nplt.title('Crimes in Newton and Van Nuys from 2011 to 2019')\nplt.ylabel('Number of Crimes')\n\nplt.show()","bef826cc":"df_all_box=df_areas_years.loc[:,years].transpose()\ndf_all_box.describe()","8771254e":"df_all_box.plot(kind='box',vert=True,figsize=(20,10))\nplt.title('Crimes in all areas from 2011 to 2019')\nplt.ylabel('Number of Crimes')\n\nplt.show()","e9234e66":"df_Newton.index=df_Newton.index.astype(int)\ndf_Newton.index.name=\"year\"\ndf_Newton.reset_index(\"year\",inplace=True)\ndf_Newton","a1639862":"df_Newton.plot(kind=\"scatter\",x='year',y='Newton')","a567468a":"df_trio=df_areas_years.loc[[\"Foothill\",\"Pacific\",\"Topanga\"],years].transpose()\ncount, bin_edges = np.histogram(df_trio)\ndf_trio.head()","bb99a318":"df_trio.plot(kind='hist',xticks=bin_edges,figsize=(8,5))\nplt.title('Histogram of Crimes from Foothill,Pacific,Topanga between 2010 and 2019')\nplt.ylabel('Number of Aras') \nplt.xlabel('Number of Crimes') \n\nplt.show()","0e37b57d":"def create_waffle_chart(df_chart,categories, values, height, width, colormap, value_sign='',):\n    \n    # compute the proportion of each category with respect to the total\n    total_values = sum(values)\n    category_proportions = [(float(value) \/ total_values) for value in values]\n\n    # compute the total number of tiles\n    total_num_tiles = width * height # total number of tiles\n    print ('Total number of tiles is', total_num_tiles)\n    \n    # compute the number of tiles for each catagory\n    tiles_per_category = [round(proportion * total_num_tiles) for proportion in category_proportions]\n\n    # print out number of tiles per category\n    for i, tiles in enumerate(tiles_per_category):\n        print (df_chart.index.values[i] + ': ' + str(tiles))\n    \n    # initialize the waffle chart as an empty matrix\n    waffle_chart = np.zeros((height, width))\n\n    # define indices to loop through waffle chart\n    category_index = 0\n    tile_index = 0\n\n    # populate the waffle chart\n    for col in range(width):\n        for row in range(height):\n            tile_index += 1\n\n            # if the number of tiles populated for the current category \n            # is equal to its corresponding allocated tiles...\n            if tile_index > sum(tiles_per_category[0:category_index]):\n                # ...proceed to the next category\n                category_index += 1       \n            # set the class value to an integer, which increases with class\n            waffle_chart[row, col] = category_index\n    \n    # compute cumulative sum of individual categories to match color schemes between chart and legend\n    values_cumsum = np.cumsum(values)\n    total_values = values_cumsum[len(values_cumsum) - 1]\n\n    # create legend\n    legend_handles = []\n    for i, category in enumerate(categories):\n        if value_sign == '%':\n            label_str = category + ' (' + str(values[i]) + value_sign + ')'\n        else:\n            label_str = category + ' (' + value_sign + str(values[i]) + ')'\n            \n        color_val = colormap(float(values_cumsum[i])\/total_values)\n        if i==0:\n            colors=[color_val]\n        if i!=0:\n            colors.append(color_val)\n        legend_handles.append(mpatches.Patch(color=color_val, label=label_str))\n    \n    cmap_name = 'my_list'\n    cm = LinearSegmentedColormap.from_list(\n        cmap_name, colors,)\n    # instantiate a new figure object\n    fig = plt.figure()\n\n    # use matshow to display the waffle chart\n    plt.matshow(waffle_chart, cmap=cm)\n    plt.colorbar()\n\n    # get the axis\n    ax = plt.gca()\n\n    # set minor ticks\n    ax.set_xticks(np.arange(-.5, (width), 1), minor=True)\n    ax.set_yticks(np.arange(-.5, (height), 1), minor=True)\n    \n    # add dridlines based on minor ticks\n    ax.grid(which='minor', color='w', linestyle='-', linewidth=2)\n\n    plt.xticks([])\n    plt.yticks([])\n\n    \n\n    # add legend to chart\n    plt.legend(\n        handles=legend_handles,\n        loc='lower center', \n        ncol=len(categories),\n        bbox_to_anchor=(0., -0.2, 0.95, .1)\n    )","1ee13a83":"df_trio=  df_trio.transpose()","1f57d0eb":"df_trio['Total'] =  df_trio.sum (axis = 1)\ndf_trio","3466bfc0":"width = 40 # width of chart\nheight = 10 # height of chart\ncategories = df_trio.index.values # categories\nvalues = df_trio['Total'] # correponding values of categories\n\ncolormap = plt.cm.coolwarm # color map class","c54ad0b9":"create_waffle_chart(df_trio,categories, values, height, width, colormap)","0af78d2d":"df_quartio=df_areas_years.loc[[\"Foothill\",\"Pacific\",\"Topanga\",\"Harbor\"],years]\ndf_quartio['Total'] =  df_quartio.sum (axis = 1)\ncategories = df_quartio.index.values # categories\nvalues = df_quartio['Total'] # correponding values of categories","76b8a7c2":"create_waffle_chart(df_quartio,categories, values, height, width, colormap)","05b42d30":"height=20\nwidth=100\ncategories = df_areas_years.index.values # categories\nvalues = df_areas_years['Total'] # correponding values of categories\ncreate_waffle_chart(df_areas_years,categories, values, height, width, colormap)","1886d4da":"total_crime=df_areas_years['Total'].sum()\ntotal_crime","96c45f71":"df_areas_years.index","bd539d63":"df_areas_years.index = list(map(str, df_areas_years.index))\n\n# let's check the column labels types now\nall(isinstance(index, str) for column in df_areas_years.index)","63877852":"max_words = 100\nword_string = ''\nfor area in df_areas_years.index.values:\n    # check if country's name is a single-word name\n    if len(area.split(' ')) == 1:\n        repeat_num_times = int(df_areas_years.loc[area, 'Total']\/float(total_crime)*max_words)\n        word_string = word_string + ((area + ' ') * repeat_num_times)\n                                     \n# display the generated text\nword_string","c4d828a4":"# create the word cloud\nwordcloud = WordCloud(background_color='white').generate(word_string)\n\nprint('Word cloud created!')","93b4a396":"# display the cloud\nfig = plt.figure()\nfig.set_figwidth(14)\nfig.set_figheight(18)\n\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis('off')\nplt.show()","7daa58b7":"for area in df_areas_years.index.values:\n    # check if country's name is a single-word name\n    if len(area.split(' ')) != 1:\n        print(area)","12fbf7e1":"# we can use the sum() method to get the total crime per year\ndf_tot = pd.DataFrame(df_areas_years[years].sum(axis=0))\n\n# change the years to type float (useful for regression later on)\ndf_tot.index = map(float, df_tot.index)\n\n# reset the index to put in back in as a column in the df_tot dataframe\ndf_tot.reset_index(inplace=True)\n\n# rename columns\ndf_tot.columns = ['year', 'total']\n\n# view the final dataframe\ndf_tot.head()","d9fb0595":"df_areas_years.index.name=\"area\"\ndf_areas_years","39e30ffb":"ax = sns.regplot(x='year', y='total', data=df_tot)","725df88a":"df_crime_report.head()","98dc9302":"df_location_2010=[]\ndf_location_2011=[]\ndf_location_2012=[]\ndf_location_2013=[]\ndf_location_2014=[]\ndf_location_2015=[]\ndf_location_2016=[]\ndf_location_2017=[]\ndf_location_2018=[]\ndf_location_2019=[]\ndf_location_2010_crime_code=list()\ndf_location_2011_crime_code=list()\ndf_location_2012_crime_code=list()\ndf_location_2013_crime_code=list()\ndf_location_2014_crime_code=list()\ndf_location_2015_crime_code=list()\ndf_location_2016_crime_code=list()\ndf_location_2017_crime_code=list()\ndf_location_2018_crime_code=list()\ndf_location_2019_crime_code=list()","b4f8b026":"\nfor location,index,category in zip(df_crime_report[\"Location \"],df_crime_report[\"Date Occurred\"],df_crime_report[\"Crime Code Description\"]):\n    \n    if \"2010\" in index:\n        df_location_2010.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2011\" in index:\n        df_location_2011.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2012\" in index:\n        df_location_2012.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2013\" in index:\n        df_location_2013.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2014\" in index:\n        df_location_2014.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2015\" in index:\n        df_location_2015.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2016\" in index:\n        df_location_2016.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2017\" in index:\n        df_location_2017.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2018\" in index:\n        df_location_2018.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    elif \"2019\" in index:\n        df_location_2019.extend(location.replace('(',' ').replace(')',' ').split(',',1))\n        df_location_2010_crime_code.append(category)\n    \n#df_location=df_crime_report[\"Location \"].str.replace('(',' ').str.replace(')',' ').str.split(\",\", n = 1, expand = True) ","a4ad3f2d":"print(len(df_location_2010)==len(df_location_2011))\n","d0690181":"df_location_2010_x=[]\ndf_location_2010_y=[]\ni=0","df56e005":"for element in df_location_2010:\n    if i==0:\n        df_location_2010_y.append(element)\n        i=1\n    elif i==1:\n        df_location_2010_x.append(element)\n        i=0","a6c676ea":"location_columns=[\"x\",\"y\",\"category\"]\ndf_locations_2010=pd.DataFrame(list(zip(df_location_2010_x,df_location_2010_y,df_location_2010_crime_code)),columns=location_columns)","26a5e63b":"df_locations_2010.head()","34a40693":"df_location_1000=df_locations_2010.head(2000)","109280ff":" # define usa's geolocation coordinates\nusa_latitude =   34.052235\nusa_longitude = -118.243683\n\n # define the world map centered around Usa with a higher zoom level\nusa_map = folium.Map(location=[usa_latitude, usa_longitude], zoom_start=10)\n\n\n # display world map\nusa_map","66cd58f9":"# instantiate a feature group for the incidents in the dataframe\nincidents = folium.map.FeatureGroup()\n\n# loop through the 100 crimes and add each to the incidents feature group\nfor lat, lng, in zip(df_location_1000.y, df_location_1000.x):\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n        )\n    )\n\n# add incidents to map\nusa_map.add_child(incidents)","9e306cad":"from folium import plugins\n\n# let's start again with a clean copy of the map of San Francisco\nusa_map = folium.Map(location = [usa_latitude, usa_longitude], zoom_start = 10)\n\n# instantiate a mark cluster object for the incidents in the dataframe\nincidents = plugins.MarkerCluster().add_to(usa_map)\n\n# loop through the dataframe and add each data point to the mark cluster\nfor lat, lng, label, in zip(df_location_1000.y, df_location_1000.x, df_location_1000.category):\n    folium.Marker(\n        location=[lat, lng],\n        icon=None,\n        popup=label,\n    ).add_to(incidents)\n\n# display map\nusa_map","30e2066c":"# Manipulate Data for Maps<a id=\"6\"><\/a>","e889994b":"Creates DataFrame","527b76c9":"Checks if the lenght of two years are the same. So I know that the code above worked.","40acb89d":"Now let's read the file.","786079b7":"<p style=\"color:blue;\">As you can see above 77 Streeth hast the most crimes. And SouthWest the second most. The others are almost the equal. <\/p>","2910c9bb":"I am doing the same thing but now for two areas.","460f3339":"Take a look on the sape of the dataset.","53561939":"Creates a dataframe from the array. And adds a column named total.","e8c16151":"The code part below sets the column named Area Name to index. <br>\nI selected Area Name to be indexed because I want to analyze the data related to Area Names.","0096c050":"Creating an array with 21 columns.","c3e156c0":"<p style=\"color:red;font-size:20px;\">Now I want to make something bigger. I want to make a plot for all areas. <\/p>","a35a0c23":"So now I want to create Seaborn plot.","24854439":"<a id=\"1\"><\/a>","a4bbac48":"Fills null values with mean value.","fdaa4897":"I create these lists to assign values to them.","c3243176":"# Graphics on Map<a id=\"7\"><\/a>","1e29fc28":"# Visualizing per Area <a id=\"1\"><\/a>\nSo now I am going to edit the dataet and visualize it per Area.","86a260f3":"<p style=\"color:red;font-size:20px\">And now the code part below is very very cool. It groups the places and swhos where the crime has been commited and if you click on the thing it shows the category of the crime.","4052b6ba":"# Box Plots on Manipulated Data <a id=\"3\"><\/a>","3d57a250":"Makes a plot from the created dataframe.","7eaac0de":"# Crime Report from 2010-2019 Analysis\n<div class=\"alert alert-block alert-info\" style=\"margin-top: 20px\">\n1. [Introduction and Data Import](#0)<br>\n2. [Visualizing per Area](#1)<br>\n3. [Manipulate Data for Years](#2)<br>\n4. [Box Plots on Manipulated Data ](#3)<br>\n5. [Scatter and Histogram on Manipulated Data](#4)<br>\n6. [Waffle Chart, WordCloud and Seaborn Plots on Manipulated Data](#5)<br>\n7. [Manipulate Data for Maps](#6)<br>\n8. [Graphics on Map](#7)<br>\n\n<hr>\n","6f8d6729":"The code part below has  a lot of if statements. Basically, it selects the year first and then the area where the crime has been commited and increases the value of it.","3309c98a":"I want to make a plot for only Newton(Area) so I create a dataframe from the dataframe that wa created just above and take only the column Newton and years.","440cf5c5":"Code part below creates a dataframe and shows the first 5 rows.","dd7ead78":"A line plot through the years.","6c0b73b2":"For Histograms I need numeric values. The code part below changes the values to numeric values and makes the index name as \"year\" and turns it to column.","44f0f0fa":"I am using a datframe I created before .","baef468c":"<p style=\"color:blue;\">77th Street hat the most crimes and Hollenbeck the less.","5df15d09":"<p style=\"color:blue;\">Only single-word values are in the wordcloud. The values shown below are not in the wordcloud.","1cdfc824":"Let's show the first 5 rows","1abd37cb":"<p style=\"color:blue;\">2017 is the year with the most crimes commited. 2014 the less.","9b3b2c35":"it checks and increases the crime numbers for every year","0ba03ff0":"Box plots are showing the values as shown below.","26896a77":"<p style=\"color:blue;\">Newton has the youngest criminals and Topanga has the oldest.","31931488":"It's enough to call the function with the parameters to create the waffle chart.","7cd48210":"Ok let's go further. I want to create a Wordcloud. And therefore I need the total value. The code part below \u0131s copy paste from Ibm's course.","b40a18b0":"The code part below creates a dataframe including only Area Names","8f0c3449":"So first I create an array with 10 columns.For every year between 2010 and 2019","9fb36dd7":"I want to create a histogram for the areas FootHill, Pacific, Topange. You may ask why did I select these there Areas. I selected the areas randomly.","704042ad":"<p style=\"color:blue;\"> As you can see above Pacific has the value 12093 4 times. Possibly Pacific is the area with the mmost crimes commited.","429a3e50":"Creates a dataframe from the filled dataframe and groups by Area Name. So There are only 1 of every Area.","c9d95a1d":"The code part below creates 2 dimensional 21 to 10 array. I have chosen 21 and 10 beacuse there are 10 years and 21 areas.","5740c91a":"I am taking only the first 2000 crimes of 2010. The more data the slower the program.","796e1116":"And creates a Plot.","bb31c33d":"So the code part below splits the location by comma and add them to the list.","f52d5344":"<p style=\"color:blue;\"> It didn't work as I excepted. The colors are almost the same and because of that we are not able to recognize the areas.","0e7cc8d5":"<img src=\"https:\/\/ibm.box.com\/shared\/static\/9nkxsfihu8mgt1go2kfasf61sywlu123.png\" width=440, align=\"center\">","878a4da7":"# Scatter and Histogram on Manipulated Data<a id=\"4\"><\/a>","cd963b1a":"x and y of the coordinates.","73e83786":"The code part below shows unique indexes of Area Names. So I know how many Areas are in the dataset.","e122ca50":"<p style=\"color:red;font-size:20px;\">Now I want to make something bigger. I want to make a plot for all areas. <\/p>","382d5d4b":"The code part below creates a dataframe. Crimes in Years.","61f0d7ab":"# Waffle Chart, WordCloud and Seaborn Plots on Manipulated Data<a id=\"5\"><\/a>","9649415e":"Creating map of Las Angeles.","5ab2e8c7":"Creates a Dataframe from the arrays I cretaed above and shows it.","9c7e1fc0":"A pie chart for it to understand the file better.","5e97b740":"Now I want to show the exact place where the crimes has been commited.","d310b4e1":"Adding a value named sum. Sums all values from all rows and adds them to Totals index.","1c6d9bc2":"The values below are  arbitrary. You can change the values as you like. ","3d07c41c":"At the last point, the line falls down very sharply. That's beacuse we are still in 2019 and the point shows 2019.","809b5883":"Only the values with single-word are used in the cloud.","d1b19ec5":"<p style=\"color:red;font-size:20px\">Important<\/p>So there is a function below. Ibm has a visualization course and the function below is similar in the course. But their function has mistakes. I fixed the mistakes and created the function below.","04cb46cb":"The code part below shows the numbers of array.","5398db9f":"And creating box plot for both areas.","d762f5c9":"The code part below creates an an array with 21 columns. As you might see above there are 21 areas.","003c620b":"I want to plot a waffle chart for 4 areas.","a568cc70":"The code part below is important for the next code parts. It takes 2010 -2011-2012-2013----2019 in a list. ","64c9ca08":"The code part below counts the crimes per Area.","1409b149":"adds y and x of coordinates.","423d90d2":"The codes below is for changing the column names to strings. It will be helpful in further code blocks.<br>\nAt the end of the code block it's checking if all the columns are stirng or not.","5a984d97":"# Introduction and Data Import <a id=\"0\"><\/a>\nHello\nI will be trying to analyze the dataset named crime report 2010-2019 in Usa. The dataset has 17 areas in it. You can see them on the analyzing process.<br>\nLet's first import the library I will be using during the analzye.","f7f06eb9":"# Manipulate Data for Years <a id=\"2\"><\/a>\nI want to see the dataset and crimes per year. For this I need to use very much code."}}