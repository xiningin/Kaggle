{"cell_type":{"c24885d9":"code","ed476a73":"code","2ea72769":"code","623d01e0":"code","5b6c7e57":"code","8e2bbc68":"code","d0f61376":"code","b6de1058":"code","e8f44178":"code","39b64e58":"code","ac3820a0":"code","b03cd2a1":"code","7e55e18d":"code","0396d7f5":"code","6b28fab6":"code","27f1a1bf":"code","50d52476":"code","134dc30c":"code","3f26210d":"code","438a2d27":"code","0beabc37":"code","471ea329":"code","d8e81cc9":"markdown","d7f41783":"markdown","1523a591":"markdown","69598615":"markdown","5ec82741":"markdown","affef991":"markdown","0882cb5d":"markdown","69a101e9":"markdown","27fbdd69":"markdown","f60d65f2":"markdown","39714324":"markdown","3b8fbac5":"markdown","4921a1d5":"markdown","7a835a09":"markdown","6a92b209":"markdown","013ca47d":"markdown","84b48849":"markdown","ece8e4b9":"markdown","1cd67039":"markdown","d83a8289":"markdown"},"source":{"c24885d9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Dense,Conv1D,Flatten\nfrom tensorflow.keras.models import Sequential, Model\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nimport seaborn as sns\nfrom plotly import graph_objects as go\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nimport plotly.offline as py\nimport xgboost as xgb\n%matplotlib inline","ed476a73":"data=pd.read_csv('..\/input\/bank-customer-churn-modeling\/Churn_Modelling.csv',engine='python')","2ea72769":"data.describe()","623d01e0":"data.info()","5b6c7e57":"sizes = data['Exited'].value_counts(sort = True)\ncolors = [\"grey\",\"purple\"] \nplt.rcParams['figure.figsize'] = 5,5# Plot\nplt.pie(sizes, explode=None, labels=['No','Yes'], colors=colors,autopct='%1.1f%%', shadow=True, startangle=270,)\nplt.title('Percentage of Churn in Dataset')\nplt.show()","8e2bbc68":"df_plot = data.groupby('Gender').Exited.mean().reset_index()\nplot_data = [\n    go.Bar(\n        x=df_plot['Gender'],\n        y=df_plot['Exited'],\n        width = [0.5, 0.5],\n        marker=dict(\n        color=['green', 'blue']))]\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        yaxis={\"title\": \"Churn Rate\"},\n        title='Gender',\n        plot_bgcolor  = 'rgb(243,243,243)',\n        paper_bgcolor  = 'rgb(243,243,243)',\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npy.iplot(fig)","d0f61376":"df_plot = data.groupby('CreditScore').Exited.mean().reset_index()\nplot_data = [\n    go.Scatter(\n        x=df_plot['CreditScore'],\n        y=df_plot['Exited'],\n        mode='markers',\n        name='Low',\n        marker= dict(size= 7,\n            line= dict(width=1),\n            color= 'blue',\n            opacity= 0.8\n           ),\n    )]\nplot_layout = go.Layout(\n        yaxis= {'title': \"Churn Rate\"},\n        xaxis= {'title': \"Credit score\"},\n        title='Credit Score based Churn rate',\n        plot_bgcolor  = \"rgb(243,243,243)\",\n        paper_bgcolor  = \"rgb(243,243,243)\",\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npy.iplot(fig)","b6de1058":"df_plot = data.groupby('Tenure').Exited.mean().reset_index()\nplot_data = [\n    go.Scatter(\n        x=df_plot['Tenure'],\n        y=df_plot['Exited'],\n        mode='markers',\n        name='Low',\n        marker= dict(size= 6,\n            line= dict(width=1),\n            color= 'red',\n            opacity= 0.8\n           ),\n    )]\nplot_layout = go.Layout(\n        yaxis= {'title': \"Churn Rate\"},\n        xaxis= {'title': \"Tenure\"},\n        title='Tenure based Churn rate',\n        plot_bgcolor  = \"rgb(243,243,243)\",\n        paper_bgcolor  = \"rgb(243,243,243)\",\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npy.iplot(fig)","e8f44178":"X= data.iloc[:,3:-1]\ny= data.iloc[:,-1].values","39b64e58":"for col in X.select_dtypes(include=['object']):\n    encoder=LabelEncoder()\n    X[col]=encoder.fit_transform(X[col])","ac3820a0":"X.head()","b03cd2a1":"x_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","7e55e18d":"sc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","0396d7f5":"model=Sequential()\nmodel.add(Flatten(input_shape=(10,)))\nmodel.add(Dense(100,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))","6b28fab6":"model.compile(optimizer='adam',metrics=['accuracy'],loss='BinaryCrossentropy')","27f1a1bf":"model.fit(x_train,y_train,batch_size=64,validation_split=0.1,epochs=100)","50d52476":"preds=model.predict(x_test)\npreds=np.where(preds>0.5,1,0)","134dc30c":"accuracy_score(y_test,preds)\n","3f26210d":"conf=pd.DataFrame(confusion_matrix(y_test,preds))\nconf.index=['Actual_0','Actual_1']\nconf.columns=['Predicted_0','Predicted_1']\nconf","438a2d27":"xgb_model = xgb.XGBClassifier(max_depth=5, learning_rate=0.08, objective= 'binary:logistic',n_jobs=-1)\nxgb_model.fit(x_train, y_train)\nprint('Accuracy of XGB classifier on training set: {:.2f}'.format(xgb_model.score(x_train, y_train)))\nprint('Accuracy of XGB classifier on test set: {:.2f}'.format(xgb_model.score(x_test, y_test)))","0beabc37":"preds=xgb_model.predict(x_test)","471ea329":"conf=pd.DataFrame(confusion_matrix(y_test,preds))\nconf.index=['Actual_0','Actual_1']\nconf.columns=['Predicted_0','Predicted_1']\nconf","d8e81cc9":"## Tensorflow model","d7f41783":"### Gender wise plotting ","1523a591":"## Exploratory Data Analysis","69598615":"Taking threshold as 0.5 and making the result 0 and 1","5ec82741":"The accuracy of the model is around <b>85.9%<\/b>","affef991":"## Xgboost Model","0882cb5d":"## Reading and Cleaning dataset","69a101e9":"The confusion matrix for the model test prediction results is shown below","27fbdd69":"The prediction for category 1 (churned) is improved","f60d65f2":"Lower credit score customers have high chance of churning out.","39714324":"Customer having higher tenure is less susceptible to churning","3b8fbac5":"The accuracy of this model is improved to 87%","4921a1d5":"The columns of object category are transformed into numeric categorical labels.","7a835a09":"The model was able to most of 0 (not churned) correctly compared to 1. the data is biased since most of the data is of customers who have not churned","6a92b209":"### Based on Tenure","013ca47d":"### CreditScore plotting","84b48849":"Standardised the values with mean =0 and standard deviation =1","ece8e4b9":"The confusion matrix for the model test prediction results is shown below","1cd67039":"## Transforming and Splitting data","d83a8289":"We can see that females have higher churn rate compared to males"}}