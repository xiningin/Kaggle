{"cell_type":{"3fa32502":"code","e162eeec":"code","3f71a8fc":"code","b632742c":"code","c8bae76c":"code","3adbc17a":"code","d5e84d5a":"code","4ad1a002":"code","4e51f55a":"code","66e6acd8":"code","674b18fb":"code","93095c3d":"markdown","e88c4be7":"markdown","ec631fb4":"markdown","423ac4d6":"markdown"},"source":{"3fa32502":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e162eeec":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Not limiting the column number when displaying dataframe\npd.set_option(\"display.max_columns\", None)","3f71a8fc":"df = pd.read_csv(\"..\/input\/covid-19-apple-mobility-trends\/applemobilitytrends.csv\", sep = \",\", skipinitialspace = True, low_memory = False)\ndf.head()","b632742c":"df.tail()","c8bae76c":"df.info()","3adbc17a":"print(df.columns)","d5e84d5a":"rows = df.shape[0]\ncols = df.shape[1]\n\nprint(\"Before cleaning, there are \" + str(rows) + \" rows and \" + str(cols) + \" columns in this dataframe.\")","4ad1a002":"dupRows = df.duplicated().sum()\nprint(\"There are \" + str(dupRows) + \" duplicated rows in the dataframe.\")","4e51f55a":"df.isnull().sum()","66e6acd8":"df.nunique()","674b18fb":"df.memory_usage()","93095c3d":"# **<span style = \"color: #a93226;\">LOADING & DISPLAYING DATA<\/span>**","e88c4be7":" # **<span style = \"color: #a93226;\">TABLE OF CONTENTS<\/span>**\n \n\n**IMPORTING LIBRARIES**\n\n**LOADING & DISPLAYING DATA**\n\n**FIRST DATA ANALYSIS STEPS**\n\n\n# **<span style = \"color: #a93226;\">IMPORTING LIBRARIES<\/span>**","ec631fb4":"# <h1 style = \"background: #a93226; border:0; color:white\"><center>GET STARTED<\/center><\/h1>","423ac4d6":"# **<span style = \"color: #a93226;\">FIRST DATA ANALYSIS STEPS<\/span>**"}}