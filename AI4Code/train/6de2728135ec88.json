{"cell_type":{"ddcdfc71":"code","177d5436":"code","bc046ded":"code","cbdaa0e8":"code","3ccdface":"code","6ca6f8c3":"code","dfe1809d":"code","82b64dbf":"code","8ea6b038":"code","181ee0a2":"code","11cde276":"code","0cdbe9ef":"code","a3f99e35":"code","8808f910":"code","74503e1c":"code","f9454f6d":"code","038fa4cb":"markdown","ba61acdf":"markdown","45ed920c":"markdown","5ab6c609":"markdown","747b8b63":"markdown","e723746b":"markdown","17e47d17":"markdown","60bc53db":"markdown","0e5cf1a5":"markdown","6dd1068f":"markdown","91264ca2":"markdown","f10878a3":"markdown","ba9b4b2b":"markdown","42aca57d":"markdown","6acfd41f":"markdown","e575a5a6":"markdown","c79a0509":"markdown","b46c5479":"markdown"},"source":{"ddcdfc71":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","177d5436":"#To Handle Dataset\nimport pandas as pd\nimport numpy as np\nfrom collections import defaultdict\n\n#To make plots and Visualize the Data\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline\n\n#TO Build a ML Model\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score, mean_squared_error,mean_absolute_error\n","bc046ded":"#Read all the Excel Files which have Report Data from 2016 to 2020\n\n##########     Reading the 2020 Report ##########################\ndf_2020=pd.read_csv('..\/input\/world-happiness-report\/2020.csv')\n\n#There is no Happiness Rank in the Datset while Remaining Datasets Have. good part is data is ordered as per the Rank\ndf_2020['Happiness Rank'] =  range(1, len(df_2020.index)+1)\n\n#Renaming the Columns so that all datasets have similar Header Names which will be Required later to Analyse Data from cumulative Years\n\ndf_2020 = df_2020.rename(columns = {'Country name' : 'Country', 'Ladder score' : 'Happiness Score', \n                        'Logged GDP per capita' : 'Economy (GDP per Capita)', 'Social support' : 'Family', \n                                    'Healthy life expectancy' : 'Health (Life Expectancy)',\n                        'Freedom to make life choices' : 'Freedom', \n                                    'Perceptions of corruption' : 'Trust (Government Corruption)'})\n\n#Adding Year Column in order to differentiate data easily\ndf_2020['Year']=2020\n\n##########     Reading the 2019 Report ##########################\ndf_2019 = pd.read_csv('..\/input\/world-happiness-report\/2019.csv')\ndf_2019['Year']=2019\ndf_2019 = df_2019.rename(columns = {'Overall rank':'Happiness Rank', 'Country or region' : 'Country', 'Score' : 'Happiness Score',\n                                      'GDP per capita' : 'Economy (GDP per Capita)', 'Social support' : 'Family',\n                                      'Healthy life expectancy' : 'Health (Life Expectancy)','Freedom to make life choices' : 'Freedom'\n                                     , 'Perceptions of corruption' : 'Trust (Government Corruption)'})\n\n\n##########     Reading the 2018 Report ##########################\ndf_2018 = pd.read_csv('..\/input\/world-happiness-report\/2018.csv')\ndf_2018['Year']=2018\ndf_2018 = df_2018.rename(columns = {'Overall rank':'Happiness Rank', 'Country or region' : 'Country', 'Score' : 'Happiness Score',\n                                      'GDP per capita' : 'Economy (GDP per Capita)', 'Social support' : 'Family',\n                                      'Healthy life expectancy' : 'Health (Life Expectancy)',\n                                      'Freedom to make life choices' : 'Freedom',\n                                      'Perceptions of corruption' : 'Trust (Government Corruption)'})\n\n##########     Reading the 2017 Report ##########################\ndf_2017 = pd.read_csv('..\/input\/world-happiness-report\/2017.csv')\ndf_2017 = df_2017.rename(columns = {'Happiness.Rank':'Happiness Rank', 'Happiness.Score' : 'Happiness Score', \n                                      'Economy..GDP.per.Capita.' : 'Economy (GDP per Capita)', 'Health..Life.Expectancy.' : 'Health (Life Expectancy)',\n                                      'Trust..Government.Corruption.' : 'Trust (Government Corruption)', 'Dystopia.Residual' : 'Dystopia Residual'})\ndf_2017['Year']=2017\n\n##########     Reading the 2016 Report ##########################\ndf_2016= pd.read_csv('..\/input\/world-happiness-report\/2016.csv')\ndf_2016['Year']=2016\n\n##########     Reading the 2015 Report ##########################\ndf_2015 = pd.read_csv('..\/input\/world-happiness-report\/2015.csv')\ndf_2015['Year']=2015\n\n##########  Concat all the Years Data into a single dataframe ##########################\ndf_all = pd.concat([df_2020,df_2019,df_2018,df_2017,df_2016,df_2015])\n\ndf_all=df_all[['Country', 'Happiness Rank', 'Happiness Score', 'Economy (GDP per Capita)',\n                                   'Family', 'Health (Life Expectancy)', 'Freedom','Trust (Government Corruption)',\n                                   'Generosity', 'Year']]\n#Print Top 5 rows from the dataset\ndf_all.head()","cbdaa0e8":"df_2020.info()","3ccdface":"df_2020.describe()","6ca6f8c3":"## Visualising Regions with Top Happiness Score \nplt.figure(figsize=(10,5))\ndf_2020.head(20).groupby('Regional indicator').agg({'Country':'count'}).sort_values(by='Country',ascending=False).plot(kind='bar',color='g',title='')\nplt.show()\n\n## Visualising Regions with Least Happiness Score \nplt.figure(figsize=(10,5))\ndf_2020.tail(20).groupby('Regional indicator').agg({'Country':'count'}).sort_values(by='Country',ascending=True).plot(kind='bar',color='r')\nplt.show()","dfe1809d":"plt.rcParams['figure.figsize'] = (16,16)\n## Visulaize the Variability of Each Metric using Histogram plot.\ndf_2020[['Happiness Score',\n        'upperwhisker', 'lowerwhisker',\n       'Economy (GDP per Capita)', 'Family', 'Health (Life Expectancy)',\n       'Freedom', 'Generosity', 'Trust (Government Corruption)',\n        'Explained by: Log GDP per capita',\n       'Explained by: Social support', 'Explained by: Healthy life expectancy',\n       'Explained by: Freedom to make life choices',\n       'Explained by: Generosity', 'Explained by: Perceptions of corruption',\n       'Dystopia + residual']].hist();\n\ndf_2020.columns","82b64dbf":"#Visualizing the Top 10 Happiest Countries using Pie Chart\n\ntop10_countryname = df_2020[\"Country\"].iloc[0:10]\ntop10_countryscore = df_2020[\"Happiness Score\"].iloc[0:10]\nfig1, ax1 = plt.subplots(figsize=(10,6))\nax1.pie(top10_countryscore, explode = (0,0,0,0,0,0,0,0,0,0.1), labels=top10_countryname, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"The score comparison of Top 10 countries\")\nplt.show()","8ea6b038":"df_top20 = df_2020[-10:].sort_values('Happiness Score', ascending = True)\npx.bar(df_top20, x='Happiness Score', y='Country',orientation='h',title=\"Least 10 happiest countries\")","181ee0a2":"#Corelation of each Variable with each other\nplt.figure(figsize=(10,7))\ncol=df_all[['Economy (GDP per Capita)', 'Family', 'Health (Life Expectancy)',\n       'Freedom', 'Trust (Government Corruption)', 'Generosity','Happiness Score']].corr()\nsns.heatmap(col,annot=True,fmt='.2f');\nplt.title(\"Correlation Map from Past 5 years\")\n\ncol=df_2020[['Explained by: Log GDP per capita', 'Explained by: Social support',\n       'Explained by: Healthy life expectancy',\n       'Explained by: Freedom to make life choices',\n       'Explained by: Generosity', 'Explained by: Perceptions of corruption',\n       'Dystopia + residual','Happiness Score']].corr()\nplt.figure(figsize=(10,7))\nsns.heatmap(col,annot=True)\nplt.title('Correlattion Map for 2020 Dataset')\nplt.show()","11cde276":"#FIll missing Values with Mean\ndf_all.fillna((df_all.mean()), inplace = True)\ndf_2020.fillna((df_2020.mean()), inplace = True)","0cdbe9ef":"fig, axes = plt.subplots(nrows=3, ncols=2,constrained_layout=True,figsize=(10,10))\nsns.barplot(x='Economy (GDP per Capita)',y='Country',\n                        data=df_all.nlargest(10,'Economy (GDP per Capita)'),\n                        ax=axes[0,0],palette=None)\nsns.barplot(x='Health (Life Expectancy)' ,y='Country',\n                        data=df_all.nlargest(10,'Health (Life Expectancy)'),\n                        ax=axes[0,1],palette=None)\nsns.barplot(x='Happiness Score' ,y='Country',\n                        data=df_all.nlargest(10,'Happiness Score'),\n                        ax=axes[1,0],palette=None)\nsns.barplot(x='Generosity' ,y='Country',\n                        data=df_all.nlargest(10,'Generosity'),\n                        ax=axes[1,1],palette=None)\nsns.barplot(x='Freedom' ,y='Country',\n                        data=df_all.nlargest(10,'Freedom'),\n                        ax=axes[2,0],palette=None)\nsns.barplot(x='Trust (Government Corruption)' ,y='Country',\n                        data=df_all.nlargest(10,'Trust (Government Corruption)'),\n                        ax=axes[2,1],palette=None)","a3f99e35":"countries=['India','United States','United Kingdom','Russia','China','Canada','Germany','France','Switzerland', 'Iceland', 'Denmark', 'Norway', 'Finland',\n       'Netherlands','Japan', 'South Korea','Italy']\ndf_i=df_all[df_all['Country'].isin(countries)]\nfig=px.line(df_i,x='Year',y='Happiness Score',color='Country',title='Countries Trend with Happiness Score')\nfig.show()\n\nfig=px.line(df_i,x='Year',y='Economy (GDP per Capita)',color='Country',title='Countries Trend with Economy (GDP per Capita)')\nfig.show()\n\nfig=px.line(df_i,x='Year',y='Trust (Government Corruption)',color='Country',title='Countries Trend with Trust (Government Corruption)')\nfig.show()","8808f910":"def lmmodel(df):\n    '''\n    INPUT - DataFrame\n    OUTPUT - Returns \n    r2 score for Test Dataset \n    Length of Test Datset\n    r2 score for Train Dataset\n    Length of Train Dataset\n    '''\n    #Choosing X and Y columns Y- Happiness Score which needs to be Predicted X - Features to Tarin Model\n    y=df['Happiness Score']\n    X=df[['Economy (GDP per Capita)', 'Family', 'Health (Life Expectancy)','Freedom', 'Generosity',\n           'Trust (Government Corruption)']]\n    \n    #Splitting Test and Train Dataset\n    X_train,X_test,Y_train,Y_test= train_test_split(X,y,test_size=0.2,random_state=42)\n    \n    #Initiating Linear Regression Model\n    lin_reg = LinearRegression()\n    \n    #Fit the Model\n    lin_reg.fit(X_train,Y_train)\n    \n    #Predict the Happiness Score for Test and Train Dataset\n    y_test_preds = lin_reg.predict(X_test)\n    y_train_preds = lin_reg.predict(X_train)\n    \n    #Finding Score, Mean Squared Error and Mean Absolute Error\n    score=lin_reg.score(X_test, Y_test)\n    mse = mean_squared_error(Y_test, y_test_preds)\n    mae = mean_absolute_error(Y_test, y_test_preds)\n    \n    #R2 Score for Model\n    r2_test = r2_score(Y_test, y_test_preds)\n    r2_train = r2_score(Y_train, y_train_preds) \n    \n    #Length of Test and Train Dataset\n    len_ytest = len(y_test_preds)\n    len_ytrain = len(y_train_preds)\n    \n    return r2_test, len_ytest, r2_train, len_ytrain\n\n    ","74503e1c":"#Predicting Happiness Score for 2020 Dataset by using lmmodel Function\nr2_test, len_ytest, r2_train,len_ytrain = lmmodel(df_2020)\nprint(\"The r-squared score for the Test model using only quantitative variables was {} on {} values.\".format(r2_test,len_ytest))\nprint(\"The r-squared score for the Test model using only quantitative variables was {} on {} values.\".format(r2_train,len_ytrain))\n#Predicting Happiness Score for total Dataset by using lmmodel Function\n\nr2_test, len_ytest, r2_train,len_ytrain = lmmodel(df_all)\nprint(\"The r-squared score for the Train model using only quantitative variables was {} on {} values.\".format(r2_test,len_ytest))\nprint(\"The r-squared score for the Train model using only quantitative variables was {} on {} values.\".format(r2_train,len_ytrain))","f9454f6d":"fig = plt.figure(figsize = (16, 8))\n(ax1, ax2,ax3), (ax4,ax5, ax6) = fig.subplots(2,3)\n\n#Plotting Trust in Government FOr Top 10 Happiest Countries over the Years\nax1.set_title(\"Trust in the government 2015\")\ndf_all[df_all['Year'] == 2015][['Country','Trust (Government Corruption)']][:10].set_index('Country').plot(kind='bar', ax=ax1, legend=False)\n\nax2.set_title(\"Trust in the government 2016\")\ndf_all[df_all['Year'] == 2016][['Country','Trust (Government Corruption)']][:10].set_index('Country').plot(kind='bar', ax=ax2, legend=False)\n\nax3.set_title(\"Trust in the government 2017\")\ndf_all[df_all['Year'] == 2017][['Country','Trust (Government Corruption)']][:10].set_index('Country').plot(kind='bar', ax=ax3, legend=False)\n\nax4.set_title(\"Trust in the government 2018\")\ndf_all[df_all['Year'] == 2018][['Country','Trust (Government Corruption)']][:10].set_index('Country').plot(kind='bar', ax=ax4, legend=False)\n\nax5.set_title(\"Trust in the government 2019\")\ndf_all[df_all['Year'] == 2019][['Country','Trust (Government Corruption)']][:10].set_index('Country').plot(kind='bar', ax=ax5, legend=False)\n\nax6.set_title(\"Trust in the government 2020\")\ndf_all[df_all['Year'] == 2020][['Country','Trust (Government Corruption)']][:10].set_index('Country').plot(kind='bar', ax=ax6, legend=False)\n\nplt.tight_layout(pad=0.3)","038fa4cb":"**Conclusion** : Happiness Score is correlated with GDP,Health expectancy and Social support and is not corellated to Generosity for 2020 Dataset\n\nHappiness Score is correlated with Family,Freedom to Make choices and is not corellated to Generosity for the Data from Past 5 years(2016-2020)","ba61acdf":"**Conclusion** - Trust in Government has been drstically decresed in Year 2020 compared to past 5 years.While Iceland has their Trust in government increasing over years","45ed920c":"Most important step before we start working on the data is **Assess** the Raw Data and **Clean** the Data\nIn this Report we have 6 different Excels with each excel contains the Report from 2015 to 2020. \nInteresting part is :\n**1.** Not all the Excels have same column Names \n**2.** 2020 Report has Few Extra Columns which the other Datasets doesn't Have","5ab6c609":"****Happiness Score comparison of Top 10 countries****","747b8b63":"# Which Region Has Highest Happiest Countries?","e723746b":"# Will Trust in Government Show Great Impact on Happiness Score?","17e47d17":"# What is the Correlation Between Each Metric","60bc53db":"Below Conclusions are drawn based on the observations we got from the data\n\n1.Happiest Countries have Higher GDP Per Capita, Social Support from Family, Trust in Government, More Life Expectancy and \npeople have more Freedom to make Life choices compared to Unhappiest Countries\n\n2.Generosity doesn\u2019t impact the Happiness Score of a country. Least Happy Countries are more generous\n\n3. Finland ranked 1st for the past 3 Years with the Highest Happiness Score of 7.5\n\n4. Some of the Countries have seen an increase in 2020 but many countries faced a downfall of the Happiness score never seen in 5 years.\n\n5.Trust in the government and support of family has fallen over the years.\n\n6.There is a vast difference in the economic state of countries, which may be a big factor impacting the happiness of the countries.\n","0e5cf1a5":"# Analysis of World Happiness Report","6dd1068f":"**Introduction** - World Happiness Report is ranked among 156 Countries based on a Cantril Ladder Survey. Nationally representative samples of respondents are asked to think of a ladder, the best possible life for them being a 10, and the worst possible experience is a 0. They are then asked to rate their own current lives on that 0 to 10 scale.\n\nI always Wondered what are the Metrics that are used to define a Happiness Score for a country.\n\nDataset is taken from Kaggle's Website\n\nFor this project, I was interestested in Analysing World Happiness Report and understand few findings from the Dataset:\n\n**1.Which Region Has Highest Happiest Countries?**\n\n**2.Will Trust in Government Show Great Impact on Happiness Score?**\n\n**3.Trend of All the Features for Different Countries Over Time**","91264ca2":"### Trend of Different Features over the Years against the Happiness Score - Analysed for Few Countries","f10878a3":"Plot and Visulaize Top 10 Countries for Each Feature","ba9b4b2b":"**Conclusion** : Western Europe Region have Highestwith highest Happiness Score While Latin Americs and Carribean with the Least","42aca57d":"# Import Libraries Needed","6acfd41f":"## Least 10 Countries by Overall Happiness Score","e575a5a6":"# Designing Linear Regression Model to Predict Happiness Score","c79a0509":"## Histogram shows the Variablity of Each Metric","b46c5479":"**Filling Missing Values with Mean of each column**\n\nFilling Missing Values with Mean of Each Column. Here Mean Method is choosen because Each row is a country and every country has a different score for each metric so mode can't be choosen. That's why Mean Method will take the Average of the entire column and fill null values with it which is Reasonable Replacement"}}