{"cell_type":{"3f8d7a46":"code","87a3caea":"code","40a95547":"code","6fc65fea":"code","4885dd41":"code","9420f2ca":"code","a2a3220b":"code","38cba58f":"code","80430032":"code","b2c06bdb":"code","6775e9a2":"code","a3d0cfe1":"code","6257825c":"code","403f4657":"code","5414e5ed":"code","e9b282d6":"code","753b6df9":"code","d1f4b069":"code","29c97272":"markdown","89f8ea58":"markdown","723fbe36":"markdown","a8ff9d86":"markdown","9e08d27f":"markdown","c47647a6":"markdown","6595ef0e":"markdown","26543665":"markdown","6443639a":"markdown"},"source":{"3f8d7a46":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","87a3caea":"mega = pd.read_excel('\/kaggle\/input\/lottery-br\/megas.xls')\nlotofacil = pd.read_excel('\/kaggle\/input\/lottery-br\/d_lotfac.xls')","40a95547":"mega.info()","6fc65fea":"mega.head()","4885dd41":"mega['ball_01']","9420f2ca":"lotofacil.info()","a2a3220b":"lotofacil","38cba58f":"# Vamos excluir da 17\u00ba coluna em diante.\nlotofacil = lotofacil.drop(columns=lotofacil.columns[17:]) # love it","80430032":"lotofacil","b2c06bdb":"mega.head()","6775e9a2":"df = mega\ncount_draw1 = df['ball_01'].value_counts().to_dict()\ncount_draw2 = df['ball_02'].value_counts().to_dict()\ncount_draw3 = df['ball_03'].value_counts().to_dict()\ncount_draw4 = df['ball_04'].value_counts().to_dict()\ncount_draw5 = df['ball_05'].value_counts().to_dict()\ncount_draw6 = df['ball_06'].value_counts().to_dict()\n\npowerball = pd.DataFrame([count_draw1, count_draw2, count_draw3, count_draw4, count_draw5, count_draw6]) \npowerball = powerball.sort_index(axis=1)\npw = powerball\npw = pw.T\npw.columns = ['total_draw_1','total_draw_2','total_draw_3','total_draw_4','total_draw_5','total_draw_6']\npw['SUPER_TOTAL'] = pw.sum(axis=1)\npw ","a3d0cfe1":"import matplotlib.pyplot as plt # https:\/\/matplotlib.org\/\n\nfig, ax = plt.subplots(figsize=(12, 24))\n\ngroup_data = list(pw['SUPER_TOTAL'])\ngroup_names = list(pw.keys())\n\npw['SUPER_TOTAL'].plot.barh(group_names, group_data)\nplt.style.use('bmh')\nax.set(xlim=[180, 260], xlabel='N\u00famero de repti\u00e7\u00f5es', ylabel='Dezenas',title='Repeti\u00e7\u00f5es')\n","6257825c":" # Criando Dataframe com base na contagem de vezes que aparece cada n\u00famero\n\nc = pw.T\nx01 = c[1] + c[2] + c[3] + c[4] + c[5] + c[6] + c[7] + c[8] + c[9] + c[10]\nx11 = c[11] + c[12] + c[13] + c[14] + c[15] + c[16] + c[17] + c[18] + c[19] + c[20]\nx21 = c[21] + c[22] + c[23] + c[24] + c[25] + c[26] + c[27] + c[28] + c[29] + c[30]\nx31 = c[31] + c[32] + c[33] + c[34] + c[35] + c[36] + c[37] + c[38] + c[39] + c[40]\nx41 = c[41] + c[42] + c[43] + c[44] + c[45] + c[46] + c[47] + c[48] + c[49] + c[50]\nx51 = c[51] + c[52] + c[53] + c[54] + c[55] + c[56] + c[57] + c[58] + c[59] + c[60]\n\ndezenas = pd.DataFrame([x01, x11, x21, x31, x41, x51])\ndezenas = dezenas.T\ndezenas.columns = ['n1-10','n11-20','n21-30','n31-40','n41-50','n51-60']\ndezenas = dezenas.T\ndezenas\n","403f4657":"fig, ax = plt.subplots(figsize=(6, 6))\n\n\ngroup_data = list(dezenas['SUPER_TOTAL'])\ngroup_names = list(dezenas.keys())\n\ndezenas['SUPER_TOTAL'].plot.barh(group_names, group_data)\nplt.style.use('bmh')\nax.set(xlim=[2180, 2280], xlabel='N\u00famero de repti\u00e7\u00f5es', ylabel='Dezenas',title='Repeti\u00e7\u00f5es')","5414e5ed":"\ndf1 = lotofacil\nfacil_01 = df1['ball_01'].value_counts().to_dict()\nfacil_02 = df1['ball_02'].value_counts().to_dict()\nfacil_03 = df1['ball_03'].value_counts().to_dict()\nfacil_04 = df1['ball_04'].value_counts().to_dict()\nfacil_05 = df1['ball_05'].value_counts().to_dict()\nfacil_06 = df1['ball_06'].value_counts().to_dict()\nfacil_07 = df1['ball_07'].value_counts().to_dict()\nfacil_08 = df1['ball_08'].value_counts().to_dict()\nfacil_09 = df1['ball_09'].value_counts().to_dict()\nfacil_10 = df1['ball_10'].value_counts().to_dict()\nfacil_11 = df1['ball_11'].value_counts().to_dict()\nfacil_12 = df1['ball_12'].value_counts().to_dict()\nfacil_13 = df1['ball_13'].value_counts().to_dict()\nfacil_14 = df1['ball_14'].value_counts().to_dict()\nfacil_15 = df1['ball_15'].value_counts().to_dict()\n\n\nlotofacil = pd.DataFrame([facil_01, facil_02, facil_03, facil_04, facil_05, facil_06, facil_07, facil_08, facil_09, facil_10, facil_11, facil_12,facil_13, facil_14, facil_15]) \nlotofacil = lotofacil.sort_index(axis=1)\n\nlotofacil = lotofacil.T\nlotofacil.columns = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\n# lotofacil['TOTAL'] = lotofacil.sum(axis=1)\nlotofacil ","e9b282d6":"#Convertendo dataframe para matriz para que possamos ordenar os n\u00fameros.\nlotofacil = lotofacil.to_numpy()\nlotofacil.sort(axis=1)","753b6df9":"# Agora  que ficou ordenado, vamos retornar para dataframe para que possamos manipular.\n#lotofacil = pd.DataFrame({'Draw1': df2[:, 0], 'Draw2': df2[:, 1], 'Draw3': df2[:, 2], 'Draw4': df2[:, 3], 'Draw5': df2[:, 4], 'Draw6': df2[:, 5]})\nlotofacil = pd.DataFrame({'Draw1': lotofacil[:, 0], 'Draw2': lotofacil[:, 1], 'Draw3': lotofacil[:, 2], 'Draw4': lotofacil[:, 3], 'Draw5': lotofacil[:, 4], 'Draw6': lotofacil[:, 5], 'Draw7': lotofacil[:, 6], 'Draw8': lotofacil[:, 6], 'Draw9': lotofacil[:, 7], 'Draw10': lotofacil[:, 9], 'Draw11': lotofacil[:, 10], 'Draw12': lotofacil[:, 11], 'Draw13': lotofacil[:, 12], 'Draw14': lotofacil[:, 13], 'Draw15': lotofacil[:, 14]})\nnew_index = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nlotofacil = lotofacil.reindex(new_index)\nlotofacil['TOTAL'] = lotofacil.sum(axis=1)\nlotofacil","d1f4b069":"fig, ax = plt.subplots(figsize=(12, 24))\n\ngroup_data = list(lotofacil['TOTAL'])\ngroup_names = list(lotofacil.keys())\n\nlotofacil['TOTAL'].plot.barh(group_names, group_data)\nplt.style.use('bmh')\nax.set(xlim=[1080, 1190], xlabel='N\u00famero de repti\u00e7\u00f5es', ylabel='Dezenas',title='Repeti\u00e7\u00f5es')","29c97272":"## MEGA-SENA: Qual conjunto de dezenas tem sa\u00eddo mais? ","89f8ea58":"mega.describe()","723fbe36":"## MEGASENA","a8ff9d86":"## MEGASENA - Gr\u00e1fico coms os n\u00fameros mais sorteados","9e08d27f":"# Ocorr\u00eancias","c47647a6":"## MEGASENA - Quantas vezes cada n\u00famero foi sorteado e em qual posi\u00e7\u00e3o?","6595ef0e":"# Informa\u00e7\u00f5es gerais sobre cada dataframe","26543665":"### Removendo colunas desnecess\u00e1rias.","6443639a":"## LOTOFACIL"}}