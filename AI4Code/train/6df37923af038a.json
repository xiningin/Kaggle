{"cell_type":{"348c9a57":"code","2541016b":"code","537f733b":"code","b906f5f6":"code","27c2dbc1":"code","5e21f0a9":"code","088b8ad2":"code","d9704282":"code","4633c2a1":"code","e3b11733":"code","8ec229ae":"code","26cad0ca":"code","063f36af":"markdown","9803952d":"markdown","198ff359":"markdown","c27c8379":"markdown","29aaebc9":"markdown","a8fc8880":"markdown"},"source":{"348c9a57":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","2541016b":"data=pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\ndata.head()","537f733b":"data.isna().sum()","b906f5f6":"data=data.dropna(thresh=10)\ndata=data.dropna(subset=['date_added','duration','rating'])\ndata=data.fillna('no data')\ndata=data.drop_duplicates()","27c2dbc1":"data[\"date_added\"]=pd.to_datetime(data['date_added'])\n\ndata['month_added']=data['date_added'].dt.month\ndata['month_name_added']=data['date_added'].dt.month_name()\ndata['year_added']=data['date_added'].dt.year\n\ndata.head()","5e21f0a9":"sns.palplot(['#221f1f', '#b20710', '#e50914','#f5f5f1'])\n\nplt.title(\"my palette \",loc='left',fontfamily='serif',fontsize=15,y=1.2)\nplt.show()","088b8ad2":"# https:\/\/www.businessinsider.com\/how-netflix-has-looked-over-the-years-2016-4\n\ntl_dates=[\n    \"1997\\nBegin\",\n    \"1998\\nDVD&Mail Service\",\n    \"2003\\nPublic\",\n    \"2007\\nStreaming service\",\n    \"2016\\nGlobal\",\n    \"2021\\nRight now, Netflix.\"\n]\n\ntl_x=[1, 2, 4, 5.5, 8,9]\n\nfig, ax = plt.subplots(figsize=(15, 4))\nbackground_color = '#F2F2F2'\nfig.patch.set_facecolor(background_color) \nax.set_facecolor(background_color) \n\nax.set_ylim(-2, 1.75)\nax.set_xlim(0, 10)\n\nax.axhline(0, xmin=0.1, xmax=0.9, c='#e50914', zorder=1)\n\nax.scatter(tl_x, np.zeros(len(tl_x)), s=120, c='#f5f5f1', zorder=2)\nax.scatter(tl_x, np.zeros(len(tl_x)), s=30, c='#221f1f', zorder=3)\n\nfor x, date in zip(tl_x, tl_dates):\n    ax.text(x, -0.55, date, ha='center', \n            fontfamily='serif', fontweight='bold',\n            color='#4a4a4a',fontsize=11)\n    \nfor spine in [\"left\", \"top\", \"right\", \"bottom\"]:\n    ax.spines[spine].set_visible(False)\n\n    ax.set_xticks([]) \nax.set_yticks([]) \n\nax.set_title(\"Netflix through the years\", fontweight=\"bold\", fontfamily='serif', fontsize=16, color='#221f1f')\nax.text(1.2,1.57,\"Netflix's website in 1999 looked nothing like it does today \u2014 here's how it has evolved over the years\", fontfamily='serif', fontsize=12, color='#221f1f')\n\nplt.show()","d9704282":"df=pd.DataFrame(data['type'].value_counts(normalize=True)).T\n\nfig, ax = plt.subplots(1,1,figsize=(6.5, 2.5),dpi=200)\n\nfig.patch.set_facecolor('#F2F2F2')\nax.set_facecolor('#F2F2F2')\nax.barh(df.index, df['Movie'], \n        color='#b20710', alpha=0.9, label='Movie')\nax.barh(df.index, df['TV Show'], left=df['Movie'], \n        color='#221f1f', alpha=0.9, label='TV Show')\n\nfor i in df.index:\n    ax.annotate(f\"{int(df['Movie'][i]*100)}%\", \n                   xy=(df['Movie'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=40, fontweight='light', fontfamily='serif',\n                   color='white')\n\n    ax.annotate(\"Movie\", \n                   xy=(df['Movie'][i]\/2, -0.25),\n                   va = 'center', ha='center',fontsize=15, fontweight='light', fontfamily='serif',\n                   color='white')\n    \nfor i in df.index:\n    ax.annotate(f\"{int(df['TV Show'][i]*100)}%\", \n                   xy=(df['Movie'][i]+df['TV Show'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=40, fontweight='light', fontfamily='serif',\n                   color='white')\n    ax.annotate(\"TV Show\", \n                   xy=(df['Movie'][i]+df['TV Show'][i]\/2, -0.25),\n                   va = 'center', ha='center',fontsize=15, fontweight='light', fontfamily='serif',\n                   color='white')\n\nfig.text(0.125,1.03,'Movie & TV Show distribution', fontfamily='serif',fontsize=15, fontweight='bold')\nfig.text(0.125,0.92,'There are more Movie than TV shows on Netflix.',fontfamily='serif',fontweight='light',fontsize=12)  \n\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)\n    \nax.legend().set_visible(False)\nax.set_xticks([])\nax.set_yticks([])\nplt.show()","4633c2a1":"df=data['country'].value_counts()[:11].drop('no data',axis=0)\n","e3b11733":"df=data['country'].value_counts()[:11].drop('no data',axis=0)\ndf.index=['USA','India','UK','Japan','S.Korea','Canada','Spain','France','Mexico','Egypt']\n\ncolor_map=['#221f1f' for _ in range(10)]\ncolor_map[0]=color_map[1]='#e50914'\n\nfig=plt.figure(dpi=200)\ngs=fig.add_gridspec(1,1)\nax=fig.add_subplot(gs[0,0])\nfig.patch.set_facecolor('#F2F2F2')\nax.set_facecolor('#F2F2F2')\nax.bar(df.index,df,zorder=2,color=color_map)\n\nfor i in df.index:\n    m=df.loc[i]\n    ax.annotate(f'{m}',\n               xy=(i,m+150),va='center',ha='center',fontweight='light',fontfamily='serif',\n               fontsize=8)\n\nax.set_ylim(0,3500)\nax.grid(axis='y',linestyle=':',alpha=0.4,zorder=1)\nax.set_xticks(range(10))\nax.set_xticklabels(df.index,fontsize=6,fontfamily='serif',fontweight='light')\nfor s in ['top','right','left']:\n    ax.spines[s].set_visible(False)\n\nax.tick_params(which='both',axis='both',length=0)\n\nfig.text(0.152, 1.01, 'Top 10 countries on Netflix', fontsize=15, fontweight='bold', fontfamily='serif')\nfig.text(0.152, 0.95, 'The three most frequent countries have been highlighted.', fontsize=12, fontweight='light', fontfamily='serif')\n\nfig.text(1.1, 1.01, 'Insight', fontsize=15, fontweight='bold', fontfamily='serif')\n\nfig.text(1.1, 0.84, '''\nThe United States and India have the largest number\nand Korea ranks fifth.\n''', fontsize=12, fontweight='light', fontfamily='serif')\n\nimport matplotlib.lines as lines\nl1 = lines.Line2D([1, 1], [0, 1], transform=fig.transFigure, figure=fig,color='black',lw=0.2)\nfig.lines.extend([l1])\n\nplt.show()","8ec229ae":"idx=data['country'].value_counts()[:11].drop('no data',axis=0).index\ndf=data.groupby('country')['type'].value_counts(normalize=True).unstack().loc[idx]\ndf=df.sort_values(by='Movie',ascending=True)\n\nfig, ax = plt.subplots(1,1,figsize=(15, 8),dpi=200)\nax.set_facecolor('#F2F2F2')\nfig.patch.set_facecolor('#F2F2F2')\nax.barh(df.index, df['Movie'], \n        color='#b20710', alpha=0.8, label='Movie')\nax.barh(df.index, df['TV Show'], left=df['Movie'], \n        color='#221f1f', alpha=0.8, label='TV Show')\n\nfor i in df.index:\n    m=df['Movie']\n    n=df['TV Show']\n    ax.annotate(f'{m[i]:.2%}',xy=(m[i]\/2,i),fontweight='light',fontfamily='serif',fontsize=9,color='white',\n               va='center',ha='center')\n    ax.annotate(f'{n[i]:.2%}',xy=(m[i]+n[i]\/2,i),fontweight='light',fontfamily='serif',fontsize=9,color='white',\n               va='center',ha='center')\n    \nfor s in ['top','right','bottom','left']:\n    ax.spines[s].set_visible(False)\nax.tick_params(which='both',axis='both',length=0)\nax.set_xticks([])\nax.set_yticklabels(df.index,fontweight='bold',fontfamily='serif',fontsize=10)\n\nfig.text(0.13, 0.93, 'Top 10 countries Movie & TV Show split', fontsize=15, fontweight='bold', fontfamily='serif')   \nfig.text(0.131, 0.89, 'Percent Stacked Bar Chart', fontsize=12,fontfamily='serif')   \n\nfig.text(0.75,0.9,\"Movie\", fontweight=\"bold\", fontfamily='serif', fontsize=15, color='#b20710')\nfig.text(0.805,0.9,\"|\", fontweight=\"bold\", fontfamily='serif', fontsize=15, color='#221f1f')\nfig.text(0.82,0.9,\"TV Show\", fontweight=\"bold\", fontfamily='serif', fontsize=15, color='#221f1f')\n\nfig.text(0.95, 0.92, 'Insight', fontsize=15, fontweight='bold', fontfamily='serif')\n\nfig.text(0.95, 0.86, '''\nIndia has a large proportion of movies, and Korea has a low proportion of movies.\n''', fontsize=12, fontweight='light', fontfamily='serif')\n\nl1 = lines.Line2D([0.93,0.93],[0.1,0.9], transform=fig.transFigure, figure=fig,color='black',lw=0.2)\nfig.lines.extend([l1])\nplt.show()","26cad0ca":"us=data[data['country']=='United States']['year_added'].value_counts().sort_index()\nkor=data[data['country']=='South Korea']['year_added'].value_counts().sort_index()\n\nfig, ax = plt.subplots(1, 1, figsize=(12, 6),dpi=200)\ncolor = [\"#b20710\", \"#221f1f\"]\n\nfor i, country in enumerate([us,kor]):\n    ax.fill_between(country.index, 0, country, color=color[i], label=country,alpha=0.9,zorder=i)\n      \nax.yaxis.tick_right()\n\nfor s in ['top', 'right','bottom','left']:\n    ax.spines[s].set_visible(False)\n\nax.grid(False)\n\nax.set_xlim(2008,2020)\nplt.xticks(np.arange(2008, 2021, 1))\n\nfig.text(0.13, 0.85, 'Movies & TV Shows added over time', fontsize=15, fontweight='bold', fontfamily='serif')\nfig.text(0.13, 0.58, \n'''Netflix peak global content amount was in 2019.\n\nFew contents have been added as they have slowed down due to COVID-19.\nWhen looking at the difference in content\nbetween the United States and Korea, it is severe.'''\n, fontsize=12, fontweight='light', fontfamily='serif')\n\n\nfig.text(0.13,0.2,\"USA\", fontweight=\"bold\", fontfamily='serif', fontsize=15, color='#b20710')\nfig.text(0.19,0.2,\"|\", fontweight=\"bold\", fontfamily='serif', fontsize=15, color='black')\nfig.text(0.2,0.2,\"S.Korea\", fontweight=\"bold\", fontfamily='serif', fontsize=15, color='#221f1f')\n\nax.tick_params(axis='both', which='both',length=0)\n\nplt.show()","063f36af":"### palette","9803952d":"### preprocessing","198ff359":"### missing values\n\nThere are several ways to process missing values. This time, we will fill it up, but drop it if there are two or more nan values in each row.","c27c8379":"### load data","29aaebc9":"### load library","a8fc8880":"### Recently, the squid game has gained sensational popularity. I wish I could see the contents view data."}}