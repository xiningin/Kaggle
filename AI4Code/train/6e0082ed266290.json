{"cell_type":{"3317a669":"code","a872cca9":"code","7f3b1412":"code","c4d15f28":"code","355ee236":"code","407b58bc":"code","e9366a39":"code","0ac262f9":"code","2a7d97ea":"code","8d107db3":"code","5664fbeb":"code","423ff97a":"code","bcaabb5d":"code","e93a3551":"code","633e2552":"code","8ceca784":"code","4712340b":"code","b154d5c2":"code","0e8ed53e":"code","55b3a568":"code","b5c5d42e":"code","42a5b931":"code","d813c6f3":"code","0f6dcff4":"code","0e184ca1":"code","a6305212":"code","926b009d":"code","29fc595e":"code","fec5376b":"markdown","b44700bf":"markdown","49ba7f34":"markdown","aa80ad69":"markdown","fece53ee":"markdown","ead0e293":"markdown","8eb84ff2":"markdown","5abce80c":"markdown","e460e537":"markdown","16f30e52":"markdown","63338bde":"markdown","27379754":"markdown","d7c85a0b":"markdown","c4c08417":"markdown","38ba85c8":"markdown","3a061b06":"markdown","7db90775":"markdown","a8a4b194":"markdown","e35f4e6b":"markdown","7f9c6f5b":"markdown","5391deb2":"markdown","c6960095":"markdown","3b851d9e":"markdown","9594533f":"markdown","0ace81c4":"markdown","9817ab9c":"markdown","45f57b61":"markdown","a4555263":"markdown","4dcaf250":"markdown","1cd68ce9":"markdown","a6f495ad":"markdown","b80619bf":"markdown","52c23a19":"markdown"},"source":{"3317a669":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_context('poster')\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nprint(os.listdir(\"..\/input\"))","a872cca9":"df = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","7f3b1412":"df.sample(5)","c4d15f28":"df.info()","355ee236":"df.describe()","407b58bc":"df.select_dtypes('object').nunique()","e9366a39":"passmark = 40\ndf['math pass'] = np.where(df['math score'] < passmark , 'No' , 'Yes')\ndf['reading pass'] = np.where(df['reading score'] < passmark , 'No' , 'Yes')\ndf['writing pass'] = np.where(df['writing score'] < passmark , 'No' , 'Yes')\ndf.head()","0ac262f9":"df['final student status'] = df.apply(lambda x : 'Passed' if x['math pass'] == 'Yes' and x['reading pass'] == 'Yes' and x['writing pass'] == 'Yes' else 'Failed' , axis = 1)\n\ndf.head()","2a7d97ea":"df['total score'] = df['math score'] + df['reading score'] + df['writing score']\ndf.head()","8d107db3":"df['final student status'].value_counts()","5664fbeb":"df.sort_values(by=['total score'] , ascending=False)[:10]","423ff97a":"group_by_course_gender_data = df[['test preparation course' , 'gender' , 'math score' , 'math score' , 'writing score']]\\\n.groupby(['test preparation course' , 'gender']).agg('median')\n\ngroup_by_course_gender_data","bcaabb5d":"group_by_course_gender_data.loc['none'].loc['female']['writing score']","e93a3551":"df[['race\/ethnicity' , 'gender' , 'total score']]\\\n.groupby(['race\/ethnicity' , 'gender']).agg(['max' , 'min' , 'median'])","633e2552":"sns.set()\nsns.pairplot(df , diag_kind = 'kde')\nplt.show()","8ceca784":"sns.pairplot(df , hue = 'gender')\nplt.show()","4712340b":"sns.set_style(\"whitegrid\")\n\nplt.rcParams['figure.figsize'] = (7 ,  4)\nsns.countplot(df['gender'] , data = df , palette = 'Set1' , linewidth = 1.5 , edgecolor = 'black')\nplt.xlabel('Gender' , fontsize = 15)\nplt.ylabel('Count', fontsize = 15)\nplt.show()","b154d5c2":"plt.rcParams['figure.figsize'] = (20 , 8)\nsns.set_style(\"ticks\")\n\nsns.countplot(df['math score'], palette = 'muted')\nplt.xlabel('Math Score' , fontsize = 15)\nplt.ylabel('Count' , fontsize = 15)\nplt.xticks(rotation = 90)\nplt.show()","0e8ed53e":"plt.rcParams['figure.figsize'] = (16 , 8)\nsns.barplot(x = df['race\/ethnicity'] , y = df['total score'] , data = df , order = ['group A' , 'group B' , 'group C' , 'group D',  'group E']  ,\n            hue = df['test preparation course'] , palette = 'Blues_r' , linewidth = 2 , edgecolor = 'blue' , alpha = .8 , capsize = .1)\nplt.xlabel('Race' , fontsize = 15)\nplt.ylabel('Total Score' , fontsize = 15)\n\nplt.legend(loc = 4)\nplt.show()","55b3a568":"plt.rcParams['figure.figsize'] = (18 , 6)\n\nplt.subplot(1 , 3 , 1)\nsns.barplot(x = df['lunch'] , y = df['math score'] , data = df  , hue = df['gender'] , palette = 'Blues_r' , linewidth = 2 , edgecolor = 'blue' , alpha = .8 , capsize = .1)\nplt.title('Math' , fontsize = 20)\nplt.legend(loc = 4)\n\nplt.subplot(1 , 3 , 2)\nsns.barplot(x = df['lunch'] , y = df['reading score'] , data = df  , hue = df['gender'] , palette = 'Reds_r' , linewidth = 2 , edgecolor = 'red' , alpha = .8 , capsize = .1)\nplt.title('Reading', fontsize = 20)\nplt.legend(loc = 4)\n\nplt.subplot(1 , 3 , 3)\nsns.barplot(x = df['lunch'] , y = df['writing score']   , hue = df['gender'] , palette = 'Greens_r' , linewidth = 2 , edgecolor = 'green' , alpha = .8 , capsize = .1)\nplt.title('Writing', fontsize = 20)\nplt.legend(loc = 4)\n\nplt.show()","b5c5d42e":"plt.rcParams['figure.figsize'] = (7 , 3)\nsns.boxplot(x = df['total score'] , data = df , palette = 'Accent')\nplt.xlabel('Total Score' , fontsize  = 15)\nplt.show()","42a5b931":"sns.set()\nplt.rcParams['figure.figsize'] = (16 , 8)\n\nsns.boxplot(x = df['gender'] , y = df['math score'] , data = df , hue = df['test preparation course'] , palette=\"Set3\" , linewidth = 2.5)\nplt.xlabel('Gender' , fontsize = 15)\nplt.ylabel('Math Score' , fontsize = 15)\nplt.show()","d813c6f3":"plt.rcParams['figure.figsize'] = (16 , 8)\n\nsns.violinplot(x = df['gender'] , y = df['reading score'] , data = df , hue = df['test preparation course'] , palette=\"Set2\" , linewidth = 2.5)\nplt.xlabel('Gender' , fontsize = 15)\nplt.ylabel('Reading Score' , fontsize = 15)\nplt.legend(loc = 4)\nplt.show()","0f6dcff4":"sns.set()\nplt.rcParams['figure.figsize'] = (16 , 8)\n\nsns.boxenplot(x = df['gender'] , y = df['writing score'] , data = df , hue = df['test preparation course'] , palette=\"Set1\")\nplt.xlabel('Gender' , fontsize = 15)\nplt.ylabel('Writing Score' , fontsize = 15)\nplt.legend(loc = 4)\nplt.show()","0e184ca1":"sns.set()\nplt.rcParams['figure.figsize'] = (16 , 8)\n\nsns.swarmplot(x = df['lunch'] , y = df['total score'] , data = df)\nplt.xlabel('Lunch' , fontsize = 15)\nplt.ylabel('Total Score' , fontsize = 15)\nplt.show()","a6305212":"sns.set_style(\"ticks\")\nplt.rcParams['figure.figsize'] =(16 , 6)\n\nsns.stripplot(x = df['parental level of education']  , y = df['total score'] , data = df , marker = '*')\nplt.xlabel('Parental Level of Education' , fontsize = 15)\nplt.ylabel('Total Score' , fontsize = 15)\nplt.show()","926b009d":"plt.rcParams['figure.figsize'] = (8  , 8)\ndf['final student status'].value_counts().plot.pie(colors = ['orange' , 'green'] , explode = (0.1 , 0))\nplt.title('Final Student Status', fontweight = 30, fontsize = 20)\nplt.xlabel('')\nplt.ylabel('')\nplt.show()","29fc595e":"sns.set()\nplt.rcParams['figure.figsize'] = (20 , 6)\n\nplt.subplot(1 , 3 , 1)\nsns.distplot(df['math score'] , color = 'red')\nplt.title('Math' , fontsize = 20)\nplt.xlabel('Math Score' , fontsize = 15)\n\nplt.subplot(1 , 3 , 2)\nsns.distplot(df['reading score'] , color = 'red')\nplt.title('Reading', fontsize = 20)\nplt.xlabel('Reading Score' , fontsize = 15)\n\nplt.subplot(1 , 3 , 3)\nsns.distplot(df['writing score']   , color = 'red')\nplt.title('Writing', fontsize = 20)\nplt.xlabel('Writing Score' , fontsize = 15)\n\nplt.show()","fec5376b":"<p id='17'><h3><b>Strip Plot<\/b><\/h3><\/p>","b44700bf":"<p id='12'><h3><b>Bar Plot<\/b><\/h3><\/p>","49ba7f34":"<p id='6'><h3><b>Sorting Values<\/b><\/h3><\/p>","aa80ad69":"**Top 10 students :**","fece53ee":"<p id='16'><h3><b>Swarm Plot<\/b><\/h3><\/p>","ead0e293":"**As this graph shows, students with higher degree would get better scores than students with lower degree :**","8eb84ff2":"**General statistics of dataset :**","5abce80c":"<p><h2>If you like it, please upvote.<\/h2><\/p>\n<p><h2>Thank You.<\/h2><\/p>\n<p>Last Updated: <b>03\/09\/2020<\/b><\/p>","e460e537":"**General Information about columns of dataset :**","16f30e52":"<p id='11'><h3><b>Count Plot<\/b><\/h3><\/p>","63338bde":"<p id='4'><h2><b>Analyzing Dataset and Feature Engineering<\/b><\/h2><\/p>\n<p id='5'><h3><b>Feature Engineering<\/b><\/h3><\/p>","27379754":"**Taking 5 random samples from dataset :**","d7c85a0b":"As this graph shows, group E has the best performance and group A has the worst performance","c4c08417":"<p id='9'><h2><b>Seaborn Library<\/b><\/h2><\/p>\n<p id='10'><h3><b>Pair Plot<\/b><\/h3><\/p>","38ba85c8":"<p id='15'><h3><b>Boxen Plot<\/b><\/h3><\/p>","3a061b06":"<p id='13'><h3><b>Box Plot<\/b><\/h3><\/p>","7db90775":"**How many of students are male and how many are female :**","a8a4b194":"**Math scores distribution :**","e35f4e6b":"**According to bottom graph males have better performance than females on math subject. In general if anybody compeleted the 'test preparation course'  would get a better score in math exam**","7f9c6f5b":"<p id='20'><h2><b>Sources<\/b><\/h2><\/p>\n<p><h4>https:\/\/seaborn.pydata.org<\/h4><\/p>\n<p><h4>https:\/\/www.codecademy.com\/articles\/seaborn-design-i<\/h4><\/p>\n<p><h4>https:\/\/www.kaggle.com\/roshansharma\/student-performance-analysis<\/h4><\/p>\n<p><h4>https:\/\/www.kaggle.com\/kralmachine\/seaborn-tutorial-for-beginners<\/h4><\/p>\n\n","5391deb2":"**performances of each group on math subject :**","c6960095":"<p id='1'><h2><b>Initial Data Analysis<\/b><\/h2><\/p>\n<p id='2'><h3><b>Importing Essential Libraries<\/b><\/h3><\/p>","3b851d9e":"**Math , reading and writing scores distributions :**","9594533f":"<p id='18'><h3><b>Pie Chart<\/b><\/h3><\/p>","0ace81c4":"<p id='19'><h3><b>Dist Plot<\/b><\/h3><\/p>","9817ab9c":"<p id='14'><h3><b>Violin Plot<\/b><\/h3><\/p>","45f57b61":"<p id='3'><h3><b>Importing CSV File and Overview<\/b><\/h3><\/p>","a4555263":"<p id='8'><h4><b>Multi-level Index Data Frame Indexing<\/b><\/h4><\/p>","4dcaf250":"# Student Performance in Exams Data Visualization\nIn this kernel we are going to analyze students preformance in exams with multiple aspects.\n\nThis kernel has 3 major concepts and each concept has multiple minor sebsets.","1cd68ce9":"<p id='7'><h3><b>Group By<\/b><\/h3><\/p>","a6f495ad":"**Correlations between continuous features with pair plot :**","b80619bf":"<h3><b>Table of Content<\/b><\/h3>\n<ul>\n    <a href='#1'><li>Initial Data Analysis<\/li><\/a>\n        <ul>\n            <a href='#2'><li>Importing Essential Libraries<\/li><\/a>\n            <a href='#3'><li>Importing CSV File and Overview<\/li><\/a>\n        <\/ul>\n    <a href='#4'><li>Analyzing Dataset and Feature Engineering<\/li><\/a>\n        <ul>\n            <a href='#5'><li>Feature Engineering<\/li><\/a>\n            <a href='#6'><li>Sorting Values<\/li><\/a>\n            <a href='#7'><li>Group By<\/li><\/a>\n                <ul>\n                    <a href='#8'><li>Multi-level Index Data Frame Indexing<\/li><\/a>\n                <\/ul>\n        <\/ul>\n    <a href='#9'><li>Seaborn Library<\/li><\/a>\n        <ul>\n            <a href='#10'><li>Pair Plot<\/li><\/a>\n            <a href='#11'><li>Count Plot<\/li><\/a>\n            <a href='#12'><li>Bar Plot<\/li><\/a>\n            <a href='#13'><li>Box Plot<\/li><\/a>\n            <a href='#14'><li>Violin Plot<\/li><\/a>\n            <a href='#15'><li>Boxen Plot<\/li><\/a>\n            <a href='#16'><li>Swarm Plot<\/li><\/a>\n            <a href='#17'><li>Strip Plot<\/li><\/a>\n            <a href='#18'><li>Pie Chart<\/li><\/a>\n            <a href='#19'><li>Dist Plot<\/li><\/a>\n        <\/ul>\n   <a href='#20'><li>Sources<\/li><\/a>\n<\/ul>","52c23a19":"**Categorical features unique values :**"}}