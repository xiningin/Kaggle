{"cell_type":{"8c1f5199":"code","cea40594":"code","74943260":"code","e4e40c07":"code","e385b95a":"code","984f885e":"code","6b107c56":"code","756b3d29":"code","550591c9":"code","9f5c502d":"code","92c151b9":"code","11b45a63":"code","c7eb6c0f":"code","b29c50c3":"code","39fc401e":"code","98901714":"code","496206ff":"code","5da11c11":"code","6bce4b4d":"code","c73b462a":"code","5c5c5003":"code","95a9b77c":"code","9cc9bcca":"code","1548ba3e":"code","60e31b28":"code","50f4f09f":"code","fedb1742":"code","939f40c3":"code","280f3e60":"code","674bd49f":"code","a7194d7a":"code","34213b95":"code","51b3975c":"markdown","be2e100f":"markdown","a1f523f8":"markdown","39dfee86":"markdown","9c5bf0bb":"markdown","d5068717":"markdown","6b487869":"markdown","7336b34d":"markdown","8c44e1f2":"markdown","b9fcd228":"markdown","99d2697f":"markdown","a24be26e":"markdown","f4d1297d":"markdown","995f7078":"markdown","011310d3":"markdown","5c022f2a":"markdown","25f2a138":"markdown","7f101a10":"markdown","b5dd6a96":"markdown","991ce38a":"markdown","47716bcc":"markdown","d16e8dff":"markdown","4dada56b":"markdown","53f077b7":"markdown","fb3a70b6":"markdown","68fd14fe":"markdown","f76330d3":"markdown","2f3321a3":"markdown","ab8d637d":"markdown","ab66b21e":"markdown","ba198b6b":"markdown","7cbd4475":"markdown","93cf343e":"markdown","71f28421":"markdown","a01fb627":"markdown","d04513e0":"markdown","c4ab1ab9":"markdown"},"source":{"8c1f5199":"import numpy as np\nimport pandas as pd \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import classification_report\nimport seaborn as sns","cea40594":"credit_card_data = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')","74943260":"credit_card_data.head()","e4e40c07":"credit_card_data.tail()","e385b95a":"credit_card_data.info()","984f885e":"credit_card_data.isnull().sum()","6b107c56":"count = credit_card_data['Class'].value_counts(normalize=True).mul(100).reset_index(drop=False)\ncount.columns = ['flflmnt_sts_id','percent']\n(count.pipe((sns.catplot,'data'), x='flflmnt_sts_id',y='percent',hue='percent',kind='bar'))","756b3d29":"legit = credit_card_data[credit_card_data.Class == 0]\nfraud = credit_card_data[credit_card_data.Class == 1]","550591c9":"print(legit.shape)\nprint(fraud.shape)","9f5c502d":"legit.Amount.describe()","92c151b9":"fraud.Amount.describe()","11b45a63":"credit_card_data.groupby('Class').mean()","c7eb6c0f":"#sample will pick random rows from the legit data\n\nlegit_sample = legit.sample(n=492)","b29c50c3":"#making a new dataset which will have same amount of rows of fraud and legit transactions\n\nnew_dataset = pd.concat([legit_sample,fraud], axis = 0)","39fc401e":"new_dataset.head()","98901714":"new_dataset.tail()","496206ff":"new_dataset.info()","5da11c11":"new_dataset.Class.value_counts()","6bce4b4d":"new_dataset.groupby('Class').mean()","c73b462a":"X = new_dataset.drop(columns=['Class', 'Time'],axis=1)     # Features\nY = new_dataset['Class']                         #Target","5c5c5003":"X","95a9b77c":"Y","9cc9bcca":"# 20% of the data will be taken for the Testing and 80% of the data will be taken for the Training\n\nX_train,X_test,Y_train,Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)","1548ba3e":"print(X.shape, X_train.shape, X_test.shape)","60e31b28":"# Defining Logistic Regression into a variable\nmodel = LogisticRegression(solver='liblinear')","50f4f09f":"# Fitting the train dataset into the model for Training\nmodel.fit(X_train,Y_train)","fedb1742":"# Accuracy on training data\nX_train_prediction = model.predict(X_train)\ntraining_data_accuracy = accuracy_score(X_train_prediction,Y_train)","939f40c3":"# Accuracy on test data\nX_test_prediction = model.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction,Y_test)","280f3e60":"print('Accuracy on Training Data: ',training_data_accuracy)\nprint('Accuracy on Test Data: ',test_data_accuracy)","674bd49f":"from xgboost import XGBClassifier\nparams = {\n            'objective':'binary:logistic',\n            'max_depth': 8,\n            'alpha': 10,\n            'learning_rate': 0.1,\n            'n_estimators':1000\n        }         \n\n# instantiate the classifier \nxgb_clf = XGBClassifier(**params)\nX = credit_card_data.drop(columns=['Class', 'Time'],axis=1) # Features\nY = credit_card_data['Class'] # Target\nX_train,X_test,Y_train,Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)\n# fit the classifier to the training data\nxgb_clf.fit(X_train, Y_train)","a7194d7a":"# Accuracy on test data\nX_test_prediction = xgb_clf.predict(X_test)","34213b95":"classification_report(Y_test, X_test_prediction, output_dict=True)","51b3975c":"* **Finding:**\n\nHere, this shows the dataset is very unbalanced because the class of fraud transaction is very less and this can interfere with our machine learning algorithm. Our model may not be able to differentiate between Fraud and Legit trasaction using this dataset. \n\nOne thing that can be done is distributing the Legit and Fraud class trasaction in equal amounts.","be2e100f":"* **Findings:**\n\nNow, this dataset is balanced as the count of Legit and Fraud is equal. Now our model can easily work with this and differentiate between Fraud and Legit transactions.","a1f523f8":"# **3: Process**\n**Key Objective:**\n\n* Observe and familiarize with data\n* Check for null or missing values\n* Perform sanity check of data","39dfee86":"## **Process for this model building**\n1. Importing necessary libraries and dataset\n2. Getting familiar with the dataset\n3. Cleaning the dataset\n4. Processing the dataset\n5. Splitting the data into Train and Test data\n6. Training the model using Train data\n7. Checking the accuracy score of the model","9c5bf0bb":"**Statistical measures of data**","d5068717":"**Seperating data for analysis**","6b487869":"### **Accuracy Score**","7336b34d":"**Training the Logistic Regression model with training data**","8c44e1f2":"* **Findings:**\n\nWe can see that numbers have not changed a lot as this looks almost similar to the previous means.","b9fcd228":"**Last 5 rows of the dataset**","99d2697f":"**First 5 Rows of the dataset**","a24be26e":"* **Finding:**\n\nThe last entry of time is 172792 seconds which is equal to 2 Days of Dataset.","f4d1297d":"Build a sample dataset containing similar distribution of normal transaction and Fraud Transaction.\n\nNo. of Fraud Transaction - 492","995f7078":"**Columns Information:**\n\n1. Time: Time of the transaction (Counted in seconds)\n2. Amount: Amount of transaction (in US Dollars)\n3. V1-V28 : Features of a particular transaction\n4. Class: Informs about whether the transaction in legit or not (0: Legit , 1: Fraud)","011310d3":"# **2. Prepare**","5c022f2a":"# **4. Spliting the data into train and test data**","25f2a138":"# **1. Introduction**\n\nIt is important that credit card companies are able to recognize fraudulent credit card transactions so that customers are not charged for items that they did not purchase.\n\n","7f101a10":"**Compare values for both transaction**","b5dd6a96":"## **Acknowledgements**\nThis public dataset can be found on this [link](https:\/\/www.kaggle.com\/mlg-ulb\/creditcardfraud).","991ce38a":"### **Using Logistic Regression**","47716bcc":"## **Drawbacks:**\n\n* We loose information by dropping out the data\n* Metric of accuracy is not convincing for the imbalanced problem\n* Model is not fine tuned","d16e8dff":"**Distribution of legit transaction & fraud transaction**","4dada56b":"**Finding:**\n\n* Accuracy on train dataset is above 90% which is considered fairly good.\n* Accuracy on test dataset is above 90% which is considered fairly good.","53f077b7":"# **5. Model Training**","fb3a70b6":"* **Finding:**\n\nLook at the mean difference of both transaction. Fraud is having a greater mean than legit transaction.","68fd14fe":"Datatype looks good. No need to change here anything","f76330d3":"## **Content**\nThis data file includes information about the time of transaction, different features of transaction, amount of transaction and if the transaction is legit or not.","2f3321a3":"**Loading the dataset to a Pandas DataFrame**","ab8d637d":"**Splitting the data into Features and Targets**","ab66b21e":"**Importing Libraries**","ba198b6b":"**Checking the no. of Null Values**","7cbd4475":"**Information on the Dataset**\n\n* The dataset contains transactions made by credit cards in September 2013 by European cardholders.\n* This dataset presents transactions that occurred in two days, where we have 492 frauds out of 284,807 transactions. The dataset is highly unbalanced, the positive class (frauds) account for 0.172% of all transactions.\n\n**Limitations of Dataset:**\n\n* Data is only of approximately 2 Days of time period.\n\n**Is Data ROCCC ?**\n\nA good data source is ROCCC which stands for **R**eliable, **O**riginal, **C**omprehensive, **C**urrent, and **C**ited.\n\n* Reliable - LOW - Not reliable as it only has data of 2 Days\n* Original - MED - Collected and analysed during a research collaboration of [Worldline and the Machine Learning Group](https:\/\/mlg.ulb.ac.be\/)\n* Comprehensive - LOW - Parameters are hidden to protect the credit card information\n* Current - LOW - Data is not known how old this data is and may be not relevant\n* Cited - MED - Data collected from Worldline and the Machine Learning Group\n\nOverall, the dataset is considered to be of Good quality data but data is only of 2 Days. Hence, it is not recommended to produce recommendations based on this data.","93cf343e":"**Datatype of each column**","71f28421":"**Merging 2 Dataframes**","a01fb627":"**Under-Sampling the Dataset**","d04513e0":"# **6. Model Evaluation**","c4ab1ab9":"This also looks good. Moving Further."}}