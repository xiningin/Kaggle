{"cell_type":{"45899887":"code","ab06b467":"code","532c8bd9":"code","93128f0a":"code","29c0711a":"code","7898ade0":"code","0cb19c9d":"code","636a345b":"code","c78c5aa4":"code","bee5c6f0":"code","ba1118e1":"code","3d58083c":"code","e3f23059":"code","fbe790c5":"code","5fe350c0":"code","0a541338":"code","1dc5d045":"code","27553e5a":"code","77201490":"code","1ee87ee4":"code","fd28f865":"code","7f2fb564":"code","bc7b2740":"markdown","76c87677":"markdown","3fc17737":"markdown","5866f322":"markdown","ddd293cf":"markdown"},"source":{"45899887":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ab06b467":"travel = pd.read_csv(\"..\/input\/travel insurance.csv\", delimiter=\",\")\ntravel.head()","532c8bd9":"print(travel['Gender'].value_counts())\n\nprint(travel.isnull().any())\n\nprint(travel['Gender'].isnull().sum())","93128f0a":"travel = travel.dropna()\n\n# check again...\n\nprint(travel['Gender'].any() == np.nan)","29c0711a":"travel['Age'].describe()\n\n# Drop the max age of 118 since there is no one on Earth that old...","7898ade0":"travel = travel[travel.Age != 118]","0cb19c9d":"travel['Duration'].describe()\n# will remove the instance of 0 Duration","636a345b":"travel = travel[travel.Duration != 0]","c78c5aa4":"print(travel['Duration'].any() == 0)\n\n## What about the number of claims approved, and\/or what can we say about our target variable?\n\ntravel['Claim'].value_counts()","bee5c6f0":"import seaborn as sns\n\nbins = np.linspace(travel.Duration.min(), travel.Duration.max(), 10)\ng = sns.FacetGrid(travel, col=\"Gender\", hue=\"Claim\", palette=\"Set2\", col_wrap=2)\ng.map(plt.hist, 'Duration', bins=bins, ec=\"k\")\n\ng.axes[-1].legend()\nplt.show()","ba1118e1":"bins = np.linspace(travel.Age.min(), travel.Age.max(),10)\ng = sns.FacetGrid(travel, col='Gender',hue='Claim', palette='Set2', col_wrap=2)\ng.map(plt.hist, 'Age', bins=bins, ec='k')\n\ng.axes[-1].legend()\nplt.show()","3d58083c":"travel.groupby(['Gender'])['Claim'].value_counts(normalize=True)\ntravel['Gender'].replace(to_replace=['F','M'], value=[0,1],inplace=True)","e3f23059":"Feature = travel[['Duration', 'Distribution Channel', 'Net Sales',  'Age', 'Gender']]\nFeature = pd.concat([Feature,pd.get_dummies(travel['Distribution Channel'])], axis=1)","fbe790c5":"Feature.head()","5fe350c0":"X = Feature[['Duration', 'Net Sales', 'Age', 'Gender', 'Offline','Online']]","0a541338":"X.head()","1dc5d045":"y = travel['Claim']\ny = travel['Claim'].replace(to_replace=['Yes','No'], value=[0,1]).values\ny[0:5]","27553e5a":"# now use train\/split to split data\nfrom sklearn.model_selection import train_test_split\n\nX_trainset, X_testset, y_trainset, y_testset = train_test_split(X, y, test_size=0.3, random_state=3)","77201490":"print(X_trainset.shape)\nprint(y_trainset.shape)\n\nprint(X_testset.shape)\nprint(y_testset.shape)","1ee87ee4":"from sklearn import preprocessing\nX = preprocessing.StandardScaler().fit(X).transform(X)\nX[0:5]","fd28f865":"from sklearn.linear_model import LogisticRegression\n\nLR = LogisticRegression(C=0.01, solver='liblinear').fit(X_trainset,y_trainset)\nyhat=LR.predict(X_trainset)\ny_proba=LR.predict_proba(X_trainset)\n","7f2fb564":"from sklearn.metrics import jaccard_similarity_score\n\nprint(jaccard_similarity_score(y_trainset, yhat))","bc7b2740":"### Pre-Processing ###","76c87677":"Checking for Null values (can see some in Gender)","3fc17737":"Checking the data in the 'Duration' column","5866f322":"### Some Visualizations... ###","ddd293cf":"Checking the data in the 'Age' column"}}