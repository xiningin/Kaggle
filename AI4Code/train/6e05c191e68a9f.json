{"cell_type":{"2358a4b1":"code","e9d5c977":"code","80e0ad62":"code","e6464c44":"code","efd198ce":"code","8a8d4b54":"code","16e76a6f":"code","35d186ec":"code","ab58cda4":"code","bcd6636a":"code","6a8fa45a":"code","5ddb1b6b":"code","96ba85d1":"code","90b3addb":"code","6bbeb21c":"code","39e58126":"code","18f14e2a":"code","0cc82906":"code","5bbea87c":"code","4f5c9e9a":"code","e6b067ea":"code","775e4955":"code","5f1db84e":"code","f6824d31":"code","c133910d":"code","6ff5fcf1":"code","b8f860e2":"code","89d2d2ee":"code","47c3449c":"code","3232b424":"code","6ed97faa":"code","4bcefdcc":"code","a4830809":"code","3164d977":"code","23b33691":"code","a8976d09":"code","9d47ae39":"code","e7e2df4b":"code","26218416":"code","0f8797f0":"code","09782aff":"code","4e5fa41b":"code","134e184f":"code","0b23a963":"code","a6ea7b12":"code","dfb62e03":"code","75fd0ec5":"code","9780ae96":"code","be38973e":"code","9183d8a3":"code","1925f145":"markdown","4ab74f9d":"markdown","a93c14d7":"markdown","b6c6616c":"markdown","3610f600":"markdown","b05adee4":"markdown","8fb6fb2c":"markdown","408e43ac":"markdown","3e57805d":"markdown","6421b305":"markdown","b32776ec":"markdown","1274cafa":"markdown","83e2a3b1":"markdown","7fd34a60":"markdown","d007ec21":"markdown","5a857621":"markdown","163d8009":"markdown","192e742a":"markdown","5845b64c":"markdown","0ef97368":"markdown","ad52f911":"markdown","48da62cf":"markdown","20a7e7c7":"markdown","1624490b":"markdown","09a046d8":"markdown","ef345243":"markdown","dd195176":"markdown","68ea5971":"markdown","7f384a1a":"markdown","cd8138d5":"markdown","bb9a8403":"markdown","ac12753b":"markdown","48107db0":"markdown","d6f27f3e":"markdown","16957758":"markdown"},"source":{"2358a4b1":"# Importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","e9d5c977":"# Importing the data\nmarket_data = pd.read_csv('..\/input\/marketing-data\/marketing_data.csv')","80e0ad62":"col_meaning = {'ID':'The ID of the customer',\n'Year_Birth' :'Year of birth of the customer',\n'Education' :'Education level of the customer',\n'Marital_Status' :'Marital status of the customer',\n'Income': \"customer's yearly household income\",\n'Kidhome' :\"number of small children in the customer's househlod\",\n'Teenhome' : \"number of teenagers in the customer's household\",\n'Dt_Customer' :\"date of customer's enrollment with the company\",\n'Recency': 'number of days since the last purchase',\n'MntWines' : 'amount spent on wines in last 2 years',\n'MntFruits' : 'amount spent on fruits in last 2 years',\n'MntMeatProducts': 'amount spent on meat products in last 2 years',\n'MntFishProducts':'amount spent on fish products in last 2 years',\n'MntSweetProduct' :'amount spent on sweet products in last 2 years',\n'MntGoldProds': 'amount spent on gold products in last 2 years',\n'NumDealsPurchases':'number of purchases made with discount',\n'NumWebPurchases':\"number of purchasesmade through company's website\",\n'NumCatalogPurchases' :'number of purchases made using catalogue',\n'NumStorePurchases' :'number of purchases made directly in stores',\n'NumWebVisitsMonth' :\"number of visits to company's website in last month\",\n'AcceptedCmp3': '1 if the customer accepted the offer in the 3rd campaign, 0 otherwise',\n'AcceptedCmp4' : '1 if the customer accepted the offer in the 4th campaign, 0 otherwise',\n'AcceptedCmp5' : '1 if the customer accepted the offer in the 5th campaign, 0 otherwise',\n'AcceptedCmp1' :'1 if the customer accepted the offer in the 1st campaign, 0 otherwise',\n'AcceptedCmp2':'1 if the customer accepted the offer in the 2nd campaign, 0 otherwise',\n'Response(target)' :'1 if the customer accepted the offer in the last campaign, 0 otherwise',\n'Complain':'1 if the customer complained in the last 2 years',\n'Country': 'country where customer is situated'}","e6464c44":"market_data.head()","efd198ce":"# checking missing values \nprint(market_data.isna().sum())\nplt.figure(figsize = (15,6))\nsns.heatmap(market_data.isnull())\nplt.show()","8a8d4b54":"market_data.rename(columns = {' Income ':'Income'}, inplace = True)","16e76a6f":"def converter(x):\n    try: \n        return float(x.split('$')[1].replace(',',''))\n    except AttributeError: # as there are some missing values \n        return np.NaN\n    \nmarket_data['Income'] =  market_data['Income'].apply(converter)   ","35d186ec":"market_data['Dt_Customer'] = pd.to_datetime(market_data.Dt_Customer)\nmarket_data['DT_month'] = market_data.Dt_Customer.dt.month\nmarket_data['DT_year'] = market_data.Dt_Customer.dt.year","ab58cda4":"print('Before:',market_data.Education.unique())\nmarket_data.Education.replace({'2n Cycle':'Master'},inplace = True)\nprint('After:',market_data.Education.unique())","bcd6636a":"market_data.Education.value_counts()","6a8fa45a":"print(market_data.Marital_Status.unique())\nmarket_data.Marital_Status.replace({'Alone':'Single','YOLO':'Single','Absurd':'Single'}, inplace = True)\nprint(market_data.Marital_Status.unique())","5ddb1b6b":"plt.figure(figsize = (15,6))\nplots = sns.countplot(x = 'Marital_Status',data = market_data,palette='icefire')\ntotal = market_data.Marital_Status.count()\n\nfor bar in plots.patches:\n    _ = plots.annotate(format((bar.get_height()\/total)*100, '.2f')+'%', \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height() - (bar.get_height()-3.1)\/2), ha='center', va='center',\n                   size=15, xytext=(0, 0),bbox=dict(boxstyle=\"round4,pad=0.6\", fc=\"w\", ec=\"black\", lw=2),\n                   textcoords='offset points')","96ba85d1":"plt.figure(figsize = (15,6))\nplots = sns.countplot(x = 'Education',data = market_data,palette='viridis')\nplt.title('How much customers we have in each education level')\ntotal = market_data.Education.count()\nfor bar in plots.patches:\n    _ = plots.annotate(format((bar.get_height()\/total)*100, '.2f')+\"%\", \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height() - (bar.get_height()-3.1)\/2), ha='center', va='center',\n                   size=15, xytext=(0, 0),bbox=dict(boxstyle=\"round4,pad=0.3\", fc=\"w\", ec=\"black\", lw=2),\n                   textcoords='offset points')","90b3addb":"market_data.groupby(by = ['Education'], as_index = False, sort = False)['Income'].agg(['mean','median','std']).rename(columns = {'mean':'Mean_income','median':'Median_income','std':'std_of_income'}).reset_index()","6bbeb21c":"plt.figure(figsize = (15,6))\nsns.barplot(x = 'Education',y = 'Income', data = market_data, \n            estimator = np.median,palette = 'rainbow')\nplt.show()","39e58126":"g1 = sns.FacetGrid(data = market_data,row = 'Education',height=5,\n    aspect=1.9)\ng2 = g1.map(sns.histplot,'Income')\nplt.show()\nplt.figure(figsize = (15,6))\nsns.boxplot(x = 'Income',y = 'Education', data = market_data).set_title(\n'Income affected by your education level',fontsize = 22)\nplt.show()","18f14e2a":"# Let's remove that one outlier\nQ1 = market_data.Income.quantile(q = 0.25)\nQ3 = market_data.Income.quantile(q = 0.75)\nIQR = Q3 - Q1\nfloor = Q1 - 1.5*IQR\nceling = Q3 + 1.5*IQR\nmar_data = market_data[(market_data.Income >= floor)\n            & (market_data.Income <= celing)]\nprint('No. of datapoints dropped:',(market_data.shape[0] - mar_data.shape[0]))","0cc82906":"# performing the same preprocessing on mar_data \nmar_data.Education.replace({'2n Cycle':'Master'},inplace = True)\nmar_data.Marital_Status.replace({'Alone':'Single','YOLO':'Single','Absurd':'Single'},inplace = True)","5bbea87c":"plt.figure(figsize = (15,6))\nsns.histplot(x = 'Income',data = mar_data,color = 'lightgreen')\nplt.vlines(x = Q1,ymin = 0,ymax = 190,color = 'red')\nplt.vlines(x = Q3,ymin = 0,ymax = 190,color = 'red')\nplt.title('The 25th and the 75th percentile of Income distribution', fontsize = 22)\nplt.show()","4f5c9e9a":"min_ = min(mar_data.Income)\nmax_= max(mar_data.Income)\nmar_data['Income_segment'] = pd.cut(mar_data.Income,bins = [min_,Q1,Q3,max_], labels = ['Low','Medium','High'])\nmar_data.Income_segment.value_counts()","e6b067ea":"plt.figure(figsize = (15,6))\nplots = sns.countplot(x = 'Country',data = market_data,palette='icefire_r')\ntotal = market_data.Country.count()\nplt.title('Customers from different countries')\nfor bar in plots.patches:\n    _ = plots.annotate(format((bar.get_height()\/total)*100, '.2f')+'%', \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height() - (bar.get_height()-3.1)\/2), ha='center', va='center',\n                   size=10, xytext=(0, 0),bbox=dict(boxstyle=\"round4,pad=0.6\", fc=\"w\", ec=\"black\", lw=2),\n                   textcoords='offset points')","775e4955":"plt.figure(figsize = (15,6))\nsns.countplot(x = 'Income_segment', hue = 'Country',data = mar_data,palette='crest')\nplt.title('Customers from different countries with different Income classes',fontsize = 22)\nplt.show()\ncol = mar_data.Income_segment.unique().tolist()[:-1]\ncolor_ = list(np.full(8,'gray'))\ncolor_[3] = 'orange'\nplt.figure(figsize = (12,4))\nprint('    Percentage of people in different income classes from each country:')\nfor j,i in enumerate(col):\n    ax = plt.subplot(1,3,j+1)\n    rich = mar_data[mar_data.Income_segment == i]\n    (rich.Country.value_counts() \/ mar_data.Country.value_counts()).plot.bar(\n     color = color_,ax = ax)\n    plt.title(i+' Income')\n    plt.tight_layout()","5f1db84e":"plt.figure(figsize = (15,6))\nsns.boxplot(x = 'Country',y = 'Income',\n            hue = 'Education',palette = 'rocket_r', data = mar_data)\nplt.title('The Income of people in different countries based on their education level',fontsize = 22)\nplt.show()","f6824d31":"col = mar_data.Income_segment.unique().tolist()[:-1]\nplt.figure(figsize = (12,4))\nprint('  Percentage of people in different income classes from each education class:')\nfor j,i in enumerate(col):\n    ax = plt.subplot(1,3,j+1)\n    rich = mar_data[mar_data.Income_segment == i]\n    (rich.Education.value_counts() \/ mar_data.Education.value_counts()).plot.bar(\n     colormap = 'crest',ax = ax)\n    plt.title(i+\" Income\")\n    plt.tight_layout()","c133910d":"col = mar_data.Income_segment.unique().tolist()[:-1]\nplt.figure(figsize = (12,4))\nprint('  Percentage of people in different income classes from each marital status:')\nfor j,i in enumerate(col):\n    ax = plt.subplot(1,3,j+1)\n    rich = mar_data[mar_data.Income_segment == i]\n    (rich.Marital_Status.value_counts() \/ mar_data.Marital_Status.value_counts()).plot.bar(\n     color = ['lightgreen','lightblue'],ax = ax)\n    plt.title(i+\" Income\")\n    plt.tight_layout()","6ff5fcf1":"s1 = sns.FacetGrid(data = market_data,row = 'Education',height=4,\n    aspect=2)\ns2 = s1.map(sns.countplot,'Marital_Status')\nplt.xticks(rotation = 45)\nplt.show()","b8f860e2":"# creating a new feature of customer's age\nmar_data['Age'] = [2014 - int(i) for i in mar_data.Year_Birth]","89d2d2ee":"plt.figure(figsize = (15,6))\nsns.histplot(x = 'Age', data = mar_data, element=\"bars\")\nplt.title('Distribution of the Age of customers', fontsize = 22)\nplt.show()","47c3449c":"# Let's remove that one outlier\nQ1 = mar_data.Age.quantile(q = 0.25)\nQ3 = mar_data.Age.quantile(q = 0.75)\nIQR = Q3 - Q1\nfloor = Q1 - 1.5*IQR\nceling = Q3 + 1.5*IQR\nmar_data1 = mar_data[(mar_data.Age >= floor)\n            & (mar_data.Age <= celing)]\nprint('No. of datapoints dropped:',(mar_data.shape[0] - mar_data1.shape[0]))\nplt.figure(figsize = (15,6))\nsns.histplot(x = 'Age', data = mar_data1, element=\"bars\", color = 'cyan')\nplt.title(\"The 25th and the 75th percentile of customer's Age distribution\", fontsize = 22)\nplt.vlines(x = Q1,ymin = 0,ymax = 300,color = 'red')\nplt.vlines(x = Q3,ymin = 0,ymax = 300,color = 'red')\nplt.show()","3232b424":"plt.figure(figsize = (15,6))\nsns.boxplot(x = 'Education',y = 'Age',hue = 'Income_segment' ,data = mar_data1, palette = 'YlOrBr')\nplt.show()","6ed97faa":"# creating a new column of total child in home\nmar_data1['Total_child'] = mar_data1.Teenhome + mar_data1.Kidhome","4bcefdcc":"plt.figure(figsize = (15,6))\nsns.countplot(x = 'Total_child', hue = 'Marital_Status',\n              data = mar_data1,palette = 'Spectral')\nplt.show()\n\ncol = mar_data1.Total_child.unique().tolist()[:]\nplt.figure(figsize = (13,4))\nprint('                           Percentage of people having total no. of child from each marital status:')\nfor j,i in enumerate(col):\n    ax = plt.subplot(1,4,j+1)\n    dj = mar_data1[mar_data1.Total_child == i]\n    (dj.Marital_Status.value_counts() \/ mar_data1.Marital_Status.value_counts()).plot.bar(\n        ax = ax, color = 'lightgreen')\n    plt.title(str(i)+\" Child at home\")\n    plt.tight_layout()","a4830809":"plt.figure(figsize = (15,6))\nsns.boxplot(x = 'Marital_Status',y = 'Age',hue = 'Income_segment' ,data = mar_data1, palette = 'YlOrBr')\nplt.title(\"Does income depends on age and marital status!\",fontsize = 22)\nplt.show()\nplt.figure(figsize = (15,6))\nsns.boxplot(x = 'Marital_Status',y = 'Age',hue = 'Total_child' ,data = mar_data1, palette = 'Spectral')\nplt.title(\"Does your age and marital status shows how many children you have\",fontsize = 22)\nplt.show()","3164d977":"print ('Recency:',col_meaning['Recency'])\n# creating a new column \nq1 = mar_data.Recency.quantile(q = .25)\nq3 = mar_data.Recency.quantile(q = .75)\nmax_ = max(mar_data.Recency)\n\nprint('Q1:{:.3f}, Q3:{:.3f}'.format(q1,q3))\nprint('Max:',max_)\n\n# Let's create a 3 gruops uptoQ1:small, Q2-Q3:medium, Q3-end:large\nmar_data1['recency_grp'] = pd.cut(mar_data1.Recency, bins = [-1,q1,q3,max_],\n                                labels = ['small','medium','large'])","23b33691":"plt.figure(figsize = (20,12))\nplt.subplot(221)\nsns.boxplot(y = 'recency_grp',x = 'Age' ,data = mar_data1, palette = 'binary')\nplt.title(\"Does recency depends on age!\",fontsize = 22)\nplt.subplot(222)\nsns.violinplot(x = 'recency_grp',y = 'Age', hue = 'Education' ,data = mar_data1, palette = 'binary')\nplt.title(\"Does recency depends on your education\",fontsize = 22)\nplt.subplot(223)\nsns.violinplot(x = 'recency_grp',y = 'Age',hue = 'Total_child' ,data = mar_data1, palette = 'binary')\nplt.title(\"Does recency depends on how many children you have\",fontsize = 22)\nplt.subplot(224)\nsns.boxplot(x = 'recency_grp',y = 'Age',hue = 'Marital_Status' ,data = mar_data1, palette = 'binary')\nplt.title(\"Does recency depends on your marital status\",fontsize = 22)\nplt.show()","a8976d09":"col_meaning['Dt_Customer']","9d47ae39":"plt.figure(figsize = (15,6))\np = list(np.full(12,'grey'))\np[2],p[4],p[7],p[9] = 'green','green','green','green'\np[6] = 'red'\nplots = sns.countplot(x = 'DT_month', data = market_data, palette= p)\ntotal = market_data.DT_month.count()\nfor bar in plots.patches:\n    _ = plots.annotate(format((bar.get_height()\/total)*100, '.2f')+'%', \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height() - (bar.get_height()-3.1)\/2), ha='center', va='center',\n                   size=12, xytext=(0, 0),bbox=dict(boxstyle=\"round4,pad=0.6\", fc=\"w\", ec=\"black\", lw=2),\n                   textcoords='offset points')","e7e2df4b":"cp = market_data.groupby(by = 'Country')[['MntWines','MntFruits',\n       'MntMeatProducts','MntFishProducts','MntSweetProducts',\n       'MntGoldProds']].sum()\ncp['Sum'] = cp.MntWines\t+ cp.MntFruits + cp.MntMeatProducts + cp.MntFishProducts + cp.MntSweetProducts + cp.MntGoldProds\nsumation = cp.pop('Sum')\ncp1 = round(cp.div(sumation, axis = 0),3)\ncp1","26218416":"# variables\nlabels = ['MntWines','MntFruits',\n       'MntMeatProducts','MntFishProducts','MntSweetProducts',\n       'MntGoldProds']\ncolors = ['#1D2F6F', '#8390FA', '#6EAF46', '#FAC748','red','gray']\ntitle = 'Product Sales By product type and Country\\n'\nsubtitle = 'Proportion of products ordered by Country'\ndef plot_stackedbar_p(df, labels, colors, title, subtitle):\n    fields = df.columns.tolist()\n# figure and axis\n    fig, ax = plt.subplots(1, figsize=(12, 10))\n# plot bars\n    left = len(df) * [0]\n    for idx, name in enumerate(fields):\n        plt.barh(df.index, df[name], left = left, color=colors[idx])\n        left = left + df[name]\n# title and subtitle\n    plt.title(title, loc='left',fontsize = 22)\n    plt.text(0, ax.get_yticks()[-1] + 0.75, subtitle)\n# legend\n    plt.legend(labels, bbox_to_anchor=([0.48, 1.0, 0.65, 0.1]), ncol=2, frameon=False)\n# remove spines\n    ax.spines['right'].set_visible(False)\n    ax.spines['left'].set_visible(False)\n    ax.spines['top'].set_visible(False)\n    ax.spines['bottom'].set_visible(False)\n# format x ticks\n    xticks = np.arange(0,1.1,0.1)\n    xlabels = ['{}%'.format(i) for i in np.arange(0,101,10)]\n    plt.xticks(xticks, xlabels)\n# adjust limits and draw grid lines\n    plt.ylim(-0.5, ax.get_yticks()[-1] + 0.5)\n    ax.xaxis.grid(color='gray', linestyle='dashed')\nplt.show()\n    \nplot_stackedbar_p(cp1, labels, colors, title, subtitle)","0f8797f0":"dz = pd.pivot_table(data = market_data, values = ['MntWines','MntFruits',\n       'MntMeatProducts','MntFishProducts','MntSweetProducts',\n       'MntGoldProds'], index = 'Education',aggfunc='mean')\ndz = dz.reset_index()\ndz","09782aff":"plt.figure(figsize = (10,10))\ncol = dz.columns[1:]\np = {0:'gray',1:'gray',2:'gray',3:'flare',4:'gray',5:'YlOrBr'}\nfor i,product in enumerate(col):\n    ax = plt.subplot(3,2,i+1)\n    sns.barplot(x = 'Education',y = product,\n                        order = dz.sort_values(product).Education,\n                        data = dz,palette=p[i],ax = ax)\n    plt.title(product+' mostly ordered by:')\n    plt.tight_layout()","4e5fa41b":"mar_data1['age_grp'] = pd.cut(mar_data1.Age,bins = [18,30,40,50,60,75],\n                              labels = ['18-30','30-40','40-50','50-60','60-75'])\nmar_data1.age_grp.value_counts()","134e184f":"plt.figure(figsize = (16,8))\nsns.boxplot(y = 'MntWines',x = 'age_grp', hue = 'Marital_Status', palette = 'icefire',data = mar_data1)\nplt.show()\nplt.figure(figsize = (16,8))\nsns.boxplot(y = 'MntWines',x = 'age_grp', hue = 'Education', palette = 'icefire',data = mar_data1)\nplt.show()","0b23a963":"plt.figure(figsize = (15,6))\nplt.subplot(121)\nsns.barplot(x = 'Teenhome', y = 'MntWines', data = market_data)\nplt.subplot(122)\nsns.barplot(x = 'Kidhome', y = 'MntWines', data = market_data)\nplt.show()","a6ea7b12":"plt.figure(figsize = (10,10))\ncol = ['MntWines','MntFruits',\n       'MntMeatProducts','MntFishProducts','MntSweetProducts',\n       'MntGoldProds']\n\nfor i,product in enumerate(col):\n    ax = plt.subplot(3,2,i+1)\n    sns.barplot(x = 'Marital_Status',y = product,\n                        data = market_data,palette='viridis',ax = ax)\n    plt.title(product+' mostly ordered by:')\n    plt.tight_layout()","dfb62e03":"def addlabels(x,y):\n    for i in range(len(x)):\n        plt.text(i,y[i],y[i],fontsize=12,fontweight = 'bold')\nplt.figure(figsize = (10,6))\ncol = ['AcceptedCmp1','AcceptedCmp2','AcceptedCmp3','AcceptedCmp4']\nfor i,j in enumerate(col):\n    ax = plt.subplot(2,2,i+1)\n    mar_data1[j].value_counts(normalize = True).plot.bar(\n        ax = ax, colormap = 'flare_r')\n    x = mar_data1[j].unique()\n    y = (round(mar_data1[j].value_counts(normalize = True),2)).values.tolist()\n    addlabels(x , y)\n    plt.title(j)\n    plt.tight_layout()","75fd0ec5":"def Campaign(var,text,color_ = 'lightblue'):\n    \"\"\" var = variable you want to check the relation with\n              different marketing campaign\n        text = text to print as title\n        color_ = color of the plot\n    \"\"\"\n    col = ['AcceptedCmp1','AcceptedCmp2','AcceptedCmp3','AcceptedCmp4']\n    for i in col:\n        print(i)\n        print('*'*len(i))\n        dc = mar_data1[mar_data1[i] == 1]\n        print(dc[var].value_counts() \/ mar_data1[var].value_counts())\n        plt.figure(figsize = (15,5))\n        (dc[var].value_counts() \/ mar_data1[var].value_counts()).plot.bar(color = color_)\n        plt.title(i+' affecting the buying behaviour of customers for each {} in percentage'.format(text))\n        plt.show()\n\nCampaign(var = 'Education',text = 'education level',color_ = 'green')","9780ae96":"Campaign(var = 'age_grp',text = 'age group',color_ = 'purple')","be38973e":"Campaign(var = 'Marital_Status',text = 'marital status')","9183d8a3":"col_ = ['Total_child','Marital_Status','Education']\nfor k in col_:\n    purchase = mar_data1.groupby(by = k, as_index = False)[['NumWebPurchases',\n    'NumCatalogPurchases','NumStorePurchases']].mean()\n    col = purchase.columns[1:]\n    print(k)\n    print('*'*len(k))\n    plt.figure(figsize = (11,4))\n    for j,i in enumerate(col):\n        ax = plt.subplot(1,3,j+1)\n        sns.barplot(x = k, y = i, data = purchase,ax = ax ,palette='icefire')\n        plt.title(i)\n        plt.tight_layout()\n    plt.show()","1925f145":"1) It is very clear that people with just basic education are earning much less compare to any other classes in all the different countries. <br>\n2) In India people with PhD are earning way more than the Graduates compare to other countries.","4ab74f9d":"1) From the above plots we can see that unlike teens people who don't have any young kids at home (may be they are young themselves, or single ) orders more wine compare to those who have kids.","a93c14d7":"1) The outcome of the 2nd campaign looks realy bad comapre to others.","b6c6616c":"1) The first campaign attracted more married people.<br>\n2) The second and third campaigns attracted more divorcees.<br>\n3) And the 4th one attracted more widows.<br>","3610f600":"Ok there are few outliers that we have to take care of.","b05adee4":"In the Education column <br>\nBasic - who passed school education <br>\nGraduation - who has completed a course for degree or diploma <br>\n2n Cycle - ? <br>\nMaster - who obtain Master degree <br>\nPhD - who obtain PhD <br>\nSo, after few searches I got some info from the guy who uploaded this data on kaggle and according to him Master and 2n Cycle are kind of same so we are going to replace these names.","8fb6fb2c":"1) In general widows are earning more compare to others as around 85% of the widows, from the total widows in the dataset, are in the Medium or High Income class.(but why \ud83e\udd14)","408e43ac":"1) It seems like widows are ordering the most of all the different products. (as shown in the above bar plot, mean as estimator)","3e57805d":"1) In general PhD holders are of higher age, explains why most widows are in this class, followed by masters, which explain why most married people are in this class, and people with basic educations are generaly younger people, which explains why there are no widows or divorced people are in this group.<br>\n<br>\n2) We can notice that people in Low Income class are generaly younger compare to other income classes.<br>\n<br>\n3) We can also notice a people with High Income are slight younger than the people with Medium Income in case of PhD holders and Masters.","6421b305":" Income is the only column that have missing values","b32776ec":"Converting the dtype from 'object' to 'datetime64' so that we can create new columns for month and year of enrollment of the customers","1274cafa":"1) It seems like company is unable to acquire more customers in the month of july.","83e2a3b1":"1) Well we can see that 1st marketing campaign attracted more graduates, the 2nd & 4th one more phd holders, and the 3rd one the entire basic education group.","7fd34a60":"1) We can see that as the age incrases the orders of wine also increases.<br>\n2) We can also see so many singles at the age group of 60-75 as well(may be they never got married).<br>\n3) Phd holders are realy drinking a lot of wine even the younger ones of age group 18-30.","d007ec21":"1) Here we can see that in general PhD holders are earning more money than people with Basic education, which make sence as PhD is the heighest education level among all education classes present here. <br>\n2) But for some reason degree or diploma holders(Graduation) have higher income compare to masters. <br>","5a857621":"1) Most customers of company are married about 38.57%, followed by people in livings and singles.","163d8009":"1) These plots shows that we have few outliers in Income column mostly from Graduation and PhD. <br>\n2) We can also see that the distribution plot of income for graduation is bimodal and have the heighest frequency where Basic has the lowest and it's median also lies much below than the other three classes(i.e. Graduation,PhD, and Master)<br>","192e742a":"1) In general widows and divorcees are of higher age group compare to others, and singles are generally of lower age group.<br>\n2) We can also notice that widows have very small spread and generaly of age greater than 45 or 50. <br>\n3) People with Lower Income in all the marital status are generaly of younger age compare to others in that same marital status.<br>\n4) Also in case of married people and widows as the age is increasing so is their income. <br>\n5) Generaly in all the different marital status people having 1 or no child at home are of lower age group compare to others in that same marital status and the number of children keeps increasing as their age is increasing but that is not the case for the widows.<br>\n6) In case of widows higher age group have no children at their home which makes sence as they are old people and their children must have grown older, which is also applied to older married people as well.<br>","5845b64c":"1) More than half of our customers are degree or diploma holders followed by Masters and PhD. <br>\n2) We have very few customers that have completed just their schooling. <br>","0ef97368":"Creating a function to remove the '$' sign from the Income and converting the dtype from 'object' to 'float'","ad52f911":"##### **Cleaning the data alittle bit**","48da62cf":"##### Removing outliers from Income column","20a7e7c7":"1) Most of the buyers from all the different countries belongs to Medium Income class followed by high Income class.<br>\n\n2) From the above plots we can see that out of all the Indians that buy products from this company around 20% belongs to High Income class, which is the lowest percentage among all the other countries in that class, more than 50% indians belongs to Middle Income class, and around 30% in the Lower Income class. <br>\n\n","1624490b":"1) People with basic education are not ordering wine that much, as they are younger in age, and Phd holders are ordering the most amount of wine, as most of them are older in age.","09a046d8":"1) More married peoples have Masters, more singles are graduates, and more phd holders are in living. <br>\n2) Most widows are phd holders, and we know in general phd holders are earning more, so it explains that widows, in our dataset, are earning more.<br>","ef345243":"1) Almost half of the customers are from Spain( may be the company is a spanish comapny ) followed by South Africa and Canada. ","dd195176":"1) It shows that most of the people have only 1 child at their home followed by 0 (i.e. no child) and 2 children. <br>\n2) percentage of widows and singles, from total number of widows and single present in the dataset respectively, are higher in the 0 chlid class compare to others, and no widows, present in our dataset, have more than 2 children .<br>\n3) And btw why single people have child at home?\ud83e\udd14(may be it's not their child I guess)\ud83e\udd28","68ea5971":"The column ' Income ' has blank spaces on both sides that we should remove\n","7f384a1a":"1) Well it doesn't seem like recency depends on any of these parameters that much.","cd8138d5":"1) Here we can see that the 1st campaign attracted people of age group 18-30 & 60-75 more.<br>\n2) The 2nd campaign more between 50-60.<br>\n3) The 3rd campaign again more youngsters of age group 18-30.<br>\n4) And the 4th campaign attracted more older generation people of age groups of 50-60 and 60-75.<br>","bb9a8403":"1) The best selling product of the company is wine as almost 50% order from all the different countries are wine, followed by meat products (25%-30%).<br>\n2) Montenegro people prefer fish products a little more compare to other countries, and doesn't order fruit products that much.<br>\n3) Considering preference for meat products Indians order more, out of all the different products ordered by Indians excluding wine, and for gold products Australians order more, out of all the different products ordered by Australians excluding wine of course.<br>","ac12753b":"#### About the columns","48107db0":"1) All the people having only basic education are belongs to Low Income class. <br>\n<br>\n2) Percentage of graduates,from the total graduates in the dataset, are slightly more in High Income class compare to PhD holders but in general PhD holders are earning more compare to others as around 83% of the PhD holders, from the total PhD holders in the dataset, are in the Medium or High Income class. <br>","d6f27f3e":"In Marital status I think 'Alone' is similar to 'Single',<br>\n'YOLO'(you only live once)\ud83d\ude44 is kinda sound like they are single and want to enjoy their life to the fullest I guess\ud83e\udd14, So I am replacing these clases by the class 'Single'.<br>\nAnd I didn't get what the 'Absurd' class refers to so I am also adding this to the class 'Single'.","16957758":"1) It looks like people generaly like in store purchases more, followed by web purchases. ( I think it might have reveresed due to the pandemic)<br>"}}