{"cell_type":{"d28e42ef":"code","813959c4":"code","e6e64564":"code","9b4be159":"code","7421067d":"code","da6c4301":"code","1fe4e3b3":"code","016afe99":"code","e993a2d0":"code","347d871a":"code","ff79d63f":"markdown","97a67222":"markdown","5426212f":"markdown","a27b9375":"markdown","9b25c8dd":"markdown","c7cf7cb3":"markdown","006d6bdb":"markdown","5de76e10":"markdown","951cc08e":"markdown","1393d908":"markdown","ada0e55f":"markdown","323c529b":"markdown","96d62c34":"markdown","63865f98":"markdown"},"source":{"d28e42ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","813959c4":"# so the rate_of_spread  0.11988 based on 3 days increase \n# This gives us the most probable predication of the spread \n\ncuurent_count = 100 # based on March 15 early morning count\n\nrate_of_spread =  0.140\n\nthislist = [cuurent_count]\nlast_count = thislist[0]\n\nfor x in range(113):\n    last_count = last_count + last_count*rate_of_spread\n    thislist.append(last_count)\n\n    \nprint(thislist)\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n\n#30days \nplt.plot(thislist)\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n\n\n#### real data \n\n","e6e64564":"#### Real Data \n#real_data  = pd.read_csv(\"\/kaggle\/input\/covid19april6\/complete_april6.csv\")\nreal_data  = pd.read_csv(\"\/kaggle\/input\/covid19-corona-virus-india-dataset\/complete.csv\")\n#real_data['total_count'] = real_data['Total Confirmed cases (Indian National)'] + real_data['Total Confirmed cases ( Foreign National )']\nreal_data.head()\n\n#real = real_data[real_data['Date']>='2020-03-15'].groupby(['Date'])['total_count'].agg('sum')\n\n\nreal = real_data[real_data['Date']>='2020-03-15'].groupby(['Date'])['Total Confirmed cases'].agg('sum')\n\nprint(real)\n\nreal_daily_count = real.to_numpy()\nprint(real_daily_count)\n\n\ndaily_increase =  np.copy(real_daily_count)\n\nprev= real_daily_count[0]\n\n\nfor index, value in np.ndenumerate(daily_increase):\n        id = index[0]\n        daily_increase[id] = value - prev\n        prev = value\n\nprint(daily_increase)","9b4be159":"\n#15days \nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\n\n\nax = plt.subplot(111)\nax.plot(np.arange(113), thislist[:-1], label='Predicted')\nax.plot(np.arange(113), real_daily_count, label='Real')\nplt.title('Prediction vs Real')\nax.legend()\nplt.show()\n\n\n\n\n#15days \nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nax = plt.subplot(111)\nax.plot(np.arange(113), daily_increase, label='Daily Increase')\nplt.title('Prediction vs Real')\nax.legend()\nplt.show()","7421067d":"#### Real Data \n#real_data  = pd.read_csv(\"\/kaggle\/input\/covid19april6\/complete_april6.csv\")\ntest_data  = pd.read_excel(\"\/kaggle\/input\/covid19-india-complete-data\/COVID19 India Complete Dataset April 2020.xlsx\",\"State-Wise Testing Data\")\n#real_data['total_count'] = real_data['Total Confirmed cases (Indian National)'] + real_data['Total Confirmed cases ( Foreign National )']\n#test_data = test_data[test_data[\"State\"] == \"West bengal\"]\n\ntest_data = test_data[test_data[\"State\"] ==  \"West Bengal\"]\n\ntest_data = test_data.sort_values(by=\"Updated On\")\n\ntest_data[\"Total Tested\"].plot()","da6c4301":"cuurent_count = 100 # based on March 15 early morning count\n\nrate_of_spread =  .05\n\nthislist = [cuurent_count]\nlast_count = thislist[0]\n\nfor x in range(30):\n    last_count = last_count + last_count*rate_of_spread\n    thislist.append(last_count)\n\n    \nprint(thislist)\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#5days \nplt.plot(thislist[:-25])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#10days \nplt.plot(thislist[:-20])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#15days \nplt.plot(thislist[:-15])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#20days \nplt.plot(thislist[:-10])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#25days \nplt.plot(thislist[:-5])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#30days \nplt.plot(thislist)\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()","1fe4e3b3":"cuurent_count = 100 # based on March 15 early morning count\n\nrate_of_spread =  .1\n\nthislist = [cuurent_count]\nlast_count = thislist[0]\n\nfor x in range(30):\n    last_count = last_count + last_count*rate_of_spread\n    thislist.append(last_count)\n\n    \nprint(thislist)\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#5days \nplt.plot(thislist[:-25])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#10days \nplt.plot(thislist[:-20])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#15days \nplt.plot(thislist[:-15])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#20days \nplt.plot(thislist[:-10])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#25days \nplt.plot(thislist[:-5])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#30days \nplt.plot(thislist)\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()","016afe99":"cuurent_count = 100 # based on March 15 early morning count\n\nrate_of_spread =  .25\n\nthislist = [cuurent_count]\nlast_count = thislist[0]\n\nfor x in range(30):\n    last_count = last_count + last_count*rate_of_spread\n    thislist.append(last_count)\n\n    \nprint(thislist)\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#5days \nplt.plot(thislist[:-25])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#10days \nplt.plot(thislist[:-20])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#15days \nplt.plot(thislist[:-15])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#20days \nplt.plot(thislist[:-10])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#25days \nplt.plot(thislist[:-5])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#30days \nplt.plot(thislist)\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()","e993a2d0":"cuurent_count = 100 # based on March 15 early morning count\n\nrate_of_spread =  .5\n\nthislist = [cuurent_count]\nlast_count = thislist[0]\n\nfor x in range(30):\n    last_count = last_count + last_count*rate_of_spread\n    thislist.append(last_count)\n\n    \nprint(thislist)\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#5days \nplt.plot(thislist[:-25])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#10days \nplt.plot(thislist[:-20])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#15days \nplt.plot(thislist[:-15])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#20days \nplt.plot(thislist[:-10])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#25days \nplt.plot(thislist[:-5])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#30days \nplt.plot(thislist)\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()","347d871a":"cuurent_count = 100 # based on March 15 early morning count\n\nrate_of_spread =  1\n\nthislist = [cuurent_count]\nlast_count = thislist[0]\n\nfor x in range(30):\n    last_count = last_count + last_count*rate_of_spread\n    thislist.append(last_count)\n\n    \nprint(thislist)\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#5days \nplt.plot(thislist[:-25])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#10days \nplt.plot(thislist[:-20])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#15days \nplt.plot(thislist[:-15])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#20days \nplt.plot(thislist[:-10])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#25days \nplt.plot(thislist[:-5])\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()\n\n#30days \nplt.plot(thislist)\nplt.ylabel('infected count')\nplt.xlabel('Days from  March  15th')\nplt.ticklabel_format(style='sci', axis='y', scilimits=(-999907374182400,999907374182400))\nplt.show()","ff79d63f":"Comment: rate_of_spread =  .1 , unfortunately looks unlikely even with all quarentine procedures ","97a67222":"Comment:  rate_of_spread =  .05 is highly optimistic ","5426212f":"# ********State-wise COVID-19 samples tested West Bengal","a27b9375":"> **Spread over next 30 days considering each currently identified person infects .5 person**","9b25c8dd":"> **Spread over next 30 days considering each currently identified person infects .1 person**","c7cf7cb3":"Spread over next 30 days considering each currently identified person infects .25 person","006d6bdb":"> **Spread over next 30 days considering each currently identified person infects 1 person**","5de76e10":"# Now lets plot above predicted count against the real counts till April 7th","951cc08e":"Based on understanding of the virus without proper protocols the can infect upto 15 a day.","1393d908":"# Probable prediction based on Mar 18th count = 151\n# so the rate_of_spread  0.11988 based on 3 days increase \n# This gives us the most probable predication of the spread \n","ada0e55f":"# In this model I have presented different predictions of the spread of corona confirmed cases in India. \n# \nI considered that each confirmed persons theoretically contaminates \"r\" new persons each day.\n\nFor simplicity, I did not consider other factors such as :\n1. people recovering \n2. human immunity built that causes less infections\n3. unidentified cases\n4. impact of corantine\/selfisolation \n\n# Let's see how the graphs look.","323c529b":"Comments: even if rate_of_spread is between .01 and .05 this will impact a very large portion of the whole population if not contained earlier","96d62c34":"Comment:  this is where other countries are such as Italy, Iran, S. Korea, US .\nOn the other hand the outbreak is lesser in Japan, Singapore .","63865f98":"# > **Spread over next 30 days considering each currently identified person infects .05 person**"}}