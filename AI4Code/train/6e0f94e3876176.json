{"cell_type":{"fb0cee2e":"code","6518871c":"code","cbdce836":"code","6b1ea513":"code","8f744c55":"code","458e4f64":"code","d3f9c582":"code","0d0486f0":"code","a106d75b":"markdown","bdad9e6e":"markdown","286d363f":"markdown","db6fbff4":"markdown","8f46f75b":"markdown","5ae585cd":"markdown"},"source":{"fb0cee2e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom keras import models\nfrom keras import layers\nfrom keras.utils import to_categorical","6518871c":"train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\nX_train = train.drop(labels = [\"label\"], axis=1)\nX_train = X_train.values\nX_train = X_train.astype('float32')\/255\n\nY_train = train[\"label\"]\nY_train = Y_train.values\nY_train = to_categorical(Y_train)\n\nX_test = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\nX_test = X_test.values\nX_test = X_test.astype('float32')\/255","cbdce836":"network = models.Sequential()\nnetwork.add(layers.Dense(512, activation='relu', input_shape=(28*28,)))\nnetwork.add(layers.Dense(10,activation='softmax'))\nnetwork.compile(optimizer='rmsprop', \n                loss = 'categorical_crossentropy',\n                metrics = ['accuracy'])","6b1ea513":"network.fit(X_train, Y_train, epochs=5, batch_size=128)","8f744c55":"results = network.predict(X_test)\nresults = np.argmax(results, axis=1)\nresults = pd.Series(results, name=\"Label\")","458e4f64":"id = pd.Series(range(1,28001), name=\"ImageId\")","d3f9c582":"submission = pd.concat([id, results], axis=1)","0d0486f0":"submission.to_csv(\"mnist_basic.csv\", index=False)","a106d75b":"Predicting results using network and X_test","bdad9e6e":"We need numpy.ndarray type to make model with keras\n\npandas.values \u2192 numpy.ndarray","286d363f":"Making Model (named network)\n\nit's just basic model","db6fbff4":"Then We can submit this \"mnist_basic.csv\" to kaggle contest\n\naccuracy is about 97.5% \n\nthanks\n","8f46f75b":"Fitting model by X_train and Y_train","5ae585cd":"MNIST very simple code : without cnn\n\nWe can get 97.5% accuracy for test data"}}