{"cell_type":{"d0cbc991":"code","2bc57bcc":"code","8b6a61de":"code","9be28d33":"code","8e436f4a":"code","74684f8c":"code","9e5d414e":"code","1024f316":"code","508cd5ac":"code","7f7ca1cf":"code","f1ece168":"code","b91091f6":"code","6f5ab0df":"code","402aabe9":"code","0d42e82a":"code","d2d5e07e":"markdown","289ec098":"markdown","a202a0e6":"markdown","d89aba47":"markdown","f33bd6d4":"markdown","83e7aa5e":"markdown","9f4783a7":"markdown"},"source":{"d0cbc991":"\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport os\nprint(os.listdir(\"..\/input\"))\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","2bc57bcc":"pokedata = pd.read_csv('..\/input\/Pokemon.csv')","8b6a61de":"pokedata.info() \n","9be28d33":"pokedata.head() ","8e436f4a":"pokedata.columns","74684f8c":"print('Max Total: '+pokedata.loc[pokedata['Total'].idxmax()].Name+' \/ '+'TotalValue: '+str(pokedata['Total'].max()))","9e5d414e":"print('Max Defense: '+pokedata.loc[pokedata['Defense'].idxmax()].Name+' \/ '+'DefenseValue: '+str(pokedata['Defense'].max()))","1024f316":"print('Max Attack: '+pokedata.loc[pokedata['Attack'].idxmax()].Name+' \/ '+'AttackValue: '+str(pokedata['Attack'].max()))","508cd5ac":"print('Min Total: '+pokedata.loc[pokedata['Total'].idxmin()].Name+' \/ '+'TotalValue: '+str(pokedata['Total'].min()))","7f7ca1cf":"pokedata['Type 1'].value_counts() #Pokemon Types","f1ece168":"pokedata.corr()","b91091f6":"f,ax = plt.subplots(figsize=(18,18))\nsns.heatmap(pokedata.corr(), annot=True, linewidths= .5, fmt= '.1f',ax=ax)\nplt.show()","6f5ab0df":"pokedata.Speed.plot(kind = 'line', color = 'g',label = 'Speed',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\npokedata.Defense.plot(color = 'r',label = 'Defense',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","402aabe9":"# Scatter Plot \n# x = attack, y = defense\npokedata.plot(kind='scatter', x='Attack', y='Defense',alpha = 0.5,color = 'red')\nplt.xlabel('Attack')              # label = name of label\nplt.ylabel('Defence')\nplt.title('Attack Defense Scatter Plot')            # title = title of plot","0d42e82a":"# Histogram\n# bins = number of bar in figure\npokedata.Speed.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","d2d5e07e":"2. pokedata'n\u0131n i\u00e7inde ne var ne yok bunlar hakk\u0131nda \nbilgi al\u0131yoruz.","289ec098":"3. default ilk 5 pokemon'umuzu listeliyoruz. dilersek parantez i\u00e7erisine de\u011fer girerek istedi\u011fimiz say\u0131da pokemon g\u00f6rebiliriz. ","a202a0e6":"Korelasyon haritas\u0131n\u0131 yazd\u0131ral\u0131m. ","d89aba47":"Yukar\u0131daki tabloda special defence ile defence aras\u0131nda bir ili\u015fki oldu\u011fu ya da defansif \u00f6zellikleri iyi olan bir pokemon'un ofansif \u00f6zelliklerinin de iyi olmas\u0131 beklenebilir.  ","f33bd6d4":"1. \u0130lk \u00f6nce kullanaca\u011f\u0131m\u0131z k\u00fct\u00fcphaneleri ve datasetimizi okutuyoruz. ","83e7aa5e":"4. pokedata'n\u0131n i\u00e7erisindeki kolon isimlerini bu mod\u00fclle g\u00f6r\u00fcnt\u00fcleyebiliriz. ","9f4783a7":"Pokedata'n\u0131n korelasyon analizi i\u00e7in pokedata.corr() kullanabiliriz. \n\"Korelasyon analizi, iki de\u011fi\u015fken aras\u0131nda ili\u015fki olup olmad\u0131\u011f\u0131n\u0131, e\u011fer varsa bu ili\u015fkinin ne y\u00f6nde ve ne derecede oldu\u011funu belirlemek i\u00e7in kullan\u0131lan bir istatistiksel y\u00f6ntemdir. \u00d6rne\u011fin; Sosyal medya ara\u00e7lar\u0131n\u0131n kullan\u0131m\u0131 ile Depresyon aras\u0131ndaki ili\u015fkinin ara\u015ft\u0131r\u0131lmas\u0131nda korelasyon analizi kullan\u0131lmaktad\u0131r. \"\nDe\u011fer 1 ya da 1e yak\u0131n ise pozitif bir ili\u015fki, e\u011fer -1 ve -1e yak\u0131n ise negatif bir ili\u015fki vard\u0131r diyebiliriz. \n\n"}}