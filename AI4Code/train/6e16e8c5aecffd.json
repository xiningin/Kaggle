{"cell_type":{"05cf77db":"code","42c857f6":"code","e2e1c353":"code","9f1e493e":"code","dfbcc1d1":"code","1d6acf55":"code","06a1e85b":"code","484450b0":"code","989d294f":"code","b8f32c9f":"code","e16cfc53":"code","e07a4914":"code","3531d4a5":"code","90a0a275":"code","1b798b1d":"code","acd6e168":"code","7cc588e0":"code","cf7c3998":"code","ef7660de":"code","e81cc29d":"code","6a2466b2":"code","dcb4f9ec":"code","5da2953c":"code","c44d8510":"code","25fd2706":"code","799b3190":"code","036b1932":"code","72173cac":"code","76a656a7":"code","7754181b":"code","2cf7f830":"code","ebb8a495":"code","c5cbbaec":"code","780a2156":"code","07226a7c":"code","fdd3adf5":"code","caaabd97":"code","016c8423":"code","04ea943f":"code","e34501a3":"code","96b4a0a4":"code","37cf40aa":"code","538baba6":"code","9497e45d":"code","1178a0d5":"code","df647b38":"code","0a2819cb":"code","baa1dc59":"code","0d577ff6":"code","7f3757a6":"code","7afeeb0d":"code","3df0a315":"code","c03bbce9":"code","fbe63413":"code","b4e3dd5c":"code","b1471c2d":"code","8f4624f2":"code","e8c5de59":"code","3ed5a6c1":"code","2d9f2332":"code","b9d23f52":"code","0eec66ce":"code","584edb76":"code","baddd42f":"code","1a85c6b8":"code","763bb5c2":"code","0b40edee":"code","4c19180f":"code","726bc0fe":"code","44b41325":"code","cb70cd6b":"code","06893db5":"code","45635f1c":"code","22518ed6":"code","f5b783c1":"code","897ef13f":"code","f516f7dd":"code","f245b1b8":"code","5330d455":"code","5f7a17f6":"code","066a6e50":"code","36240b94":"code","459c85da":"code","755343a4":"code","e185d62e":"code","d3e5106f":"code","45e77606":"code","24dbf8b6":"code","5222878f":"code","cff78ef5":"code","c76e32a7":"code","64188dd4":"code","6ded5df0":"code","c12ea384":"code","292ef51a":"code","412f0f47":"code","bfec781f":"code","ec1879f6":"code","b65418ef":"code","fc3f5b25":"code","a2833e58":"code","cd37e75c":"code","8c7400f3":"code","eadb908b":"code","83151f94":"code","caf59ab3":"code","aa62b4a7":"code","0757ea0f":"code","ff9d577c":"code","2c05525b":"code","fa98446c":"code","8e0828af":"code","b6958f61":"code","83786980":"code","ac83ea24":"code","fad76036":"markdown","ab9d0ef6":"markdown","cb21266f":"markdown","503b34fa":"markdown","7116555b":"markdown","4f501bc6":"markdown","47ba5d09":"markdown","9f6daf37":"markdown","5709294f":"markdown","d4978a1b":"markdown","39a35bfa":"markdown","70d2290b":"markdown","627e2cdb":"markdown","73e3d505":"markdown","b4facadc":"markdown","148ce8b3":"markdown","f27884b6":"markdown","5c4bde5e":"markdown","e45ddd73":"markdown","696217f9":"markdown","f6328e0e":"markdown","171ddf5f":"markdown","aca3b4eb":"markdown","b16c9ad3":"markdown","8d31b336":"markdown","05722be7":"markdown","b8390134":"markdown","ad187fae":"markdown","8916e682":"markdown","700f929b":"markdown","c8526bc0":"markdown","cc1f1af6":"markdown","da6b97da":"markdown","bc29eb97":"markdown","3c426591":"markdown","5067f1ac":"markdown","1b446a67":"markdown","020222e3":"markdown","e4069000":"markdown","78a54db4":"markdown","912ea33b":"markdown","d25c582c":"markdown","6985e334":"markdown","fc40a6d9":"markdown","91e4c841":"markdown","3acc2cd6":"markdown","615602e3":"markdown","73d5cfa3":"markdown","a8c2dab4":"markdown","f57a5928":"markdown","12b8564e":"markdown","4f27f33a":"markdown","655dfd3e":"markdown","3a234da6":"markdown","0b086473":"markdown","265a2ff1":"markdown","8a2c6365":"markdown","088950e4":"markdown","ac2b3f94":"markdown","77e6371d":"markdown","2347ee29":"markdown","ca7f1958":"markdown","3fb061ae":"markdown","e85a374f":"markdown","df2dc24c":"markdown","8333446d":"markdown","d782a32a":"markdown","453948df":"markdown","be8505e4":"markdown","92d3e69e":"markdown","f48ca44c":"markdown","78bc9fe1":"markdown","2ed218f6":"markdown","4e27191f":"markdown","6dd0cb5f":"markdown","e24e15b6":"markdown","89be27fe":"markdown","5e844a25":"markdown","2d2a8ebd":"markdown","d9197d88":"markdown","55a33a4c":"markdown","975a0b16":"markdown","db9ae57e":"markdown","17985a47":"markdown","41f68020":"markdown","54ba983f":"markdown","79571a65":"markdown","e8328a89":"markdown","eb3b3e4f":"markdown","0ef584ad":"markdown","4ad528bb":"markdown","17a50b2c":"markdown","ee4b183e":"markdown","679de192":"markdown","e82832ef":"markdown","608baa44":"markdown","40694370":"markdown","b5853e42":"markdown","5bc2a8a8":"markdown","d61e30d9":"markdown","ffc76c12":"markdown","d6532168":"markdown","7a385ef1":"markdown"},"source":{"05cf77db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","42c857f6":"\natletas = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv')\nregioes = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv')\n\n","e2e1c353":"print('Atletas:', atletas.shape)\nprint('Regi\u00f5es:', regioes.shape)","9f1e493e":"regioes.info()","dfbcc1d1":"region_nulos = regioes[regioes['region'].isnull()]","1d6acf55":"region_nulos.sample(3).T","06a1e85b":"regioes[regioes['NOC'] == 'ROT']","484450b0":"regioes.drop(168, inplace=True)","989d294f":"regioes[regioes['NOC'] == 'TUV']","b8f32c9f":"regioes.drop(208, inplace=True)","e16cfc53":"regioes[regioes['NOC'] == 'UNK']","e07a4914":"regioes.drop(213, inplace=True)","3531d4a5":"region_nulos.rename(columns={'notes': 'regionc'}, inplace=True)","90a0a275":"region_nulos.rename(columns={'region': 'notes'}, inplace=True)","1b798b1d":"region_nulos.rename(columns={'regionc': 'region'}, inplace=True)\n","acd6e168":"region_nulos.sample(3)","7cc588e0":"regioes.drop('notes', axis=1, inplace=True)","cf7c3998":"regioes = regioes.append(region_nulos, ignore_index=True)","ef7660de":"regioes[regioes['NOC'] == 'ROT']","e81cc29d":"regioes[regioes['NOC'] == 'UNK']","6a2466b2":"regioes[regioes['NOC'] == 'TUV']\n","dcb4f9ec":"atletas.sample(5).T","5da2953c":"regioes.sample(5).T","c44d8510":"atletasreg = pd.merge(atletas[atletas[\"Season\"] != 'Winter'], regioes, how='left', on=['NOC', 'NOC'])","25fd2706":"print('Atletas:', atletas.shape)\nprint('Atletasreg:', atletasreg.shape)","799b3190":"atletasreg.info()","036b1932":"atletasreg.sample(5).T","72173cac":"region_nulos = atletasreg[atletasreg['region'].isnull()]","76a656a7":"region_nulos.sample(5).T","7754181b":"region_nulos = region_nulos[['NOC', 'Team', 'ID']].groupby(['NOC', 'Team']).sum().reset_index()","2cf7f830":"region_nulos.info()","ebb8a495":"region_nulos.drop('ID', axis=1, inplace=True)","c5cbbaec":"region_nulos.head(8)","780a2156":"region_nulos.drop(0, inplace=True)","07226a7c":"region_nulos.drop(1, inplace=True)","fdd3adf5":"region_nulos.drop(3, inplace=True)","caaabd97":"region_nulos.drop(4, inplace=True)","016c8423":"region_nulos.rename(columns={'Team':'region'}, inplace=True)","04ea943f":"region_nulos.head(4)","e34501a3":"regioes = regioes.append(region_nulos, ignore_index=True)","96b4a0a4":"atletasreg = pd.merge(atletas[atletas[\"Season\"] != 'Winter'], regioes, how='left', on=['NOC', 'NOC'])","37cf40aa":"atletasreg.info()","538baba6":"atletasreg.rename(columns={'Age':'Idade'}, inplace=True)\natletasreg.rename(columns={'City':'Cidade'}, inplace=True)\natletasreg.rename(columns={'Event':'Modalidade'}, inplace=True)\natletasreg.rename(columns={'Games':'Jogos'}, inplace=True)\natletasreg.rename(columns={'Height':'Altura'}, inplace=True)\natletasreg.rename(columns={'Medal':'Medalha'}, inplace=True)\natletasreg.rename(columns={'Name':'Nome'}, inplace=True)\natletasreg.rename(columns={'NOC':'SigladoPais'}, inplace=True)\natletasreg.rename(columns={'region':'Pais'}, inplace=True)\natletasreg.rename(columns={'Season':'Estacao'}, inplace=True)\natletasreg.rename(columns={'Sex':'Sexo'}, inplace=True)\natletasreg.rename(columns={'Sport':'Esporte'}, inplace=True)\natletasreg.rename(columns={'Team':'Equipe'}, inplace=True)\natletasreg.rename(columns={'Weight':'Peso'}, inplace=True)\natletasreg.rename(columns={'Year':'Ano'}, inplace=True)","9497e45d":"atletasreg.head(5).T","1178a0d5":"atletasreg[atletasreg['Pais'] == 'Brazil']","df647b38":"atletasreg[atletasreg['Equipe'] == 'Demi-Mondaine-17']","0a2819cb":"def atribuiouro(s):\n    if s == \"Gold\":\n       return 1\n    else:\n       return 0","baa1dc59":"atletasreg['Ouro'] = atletasreg['Medalha'].apply(atribuiouro)","0d577ff6":"atletasreg['Ouro'].sum()","7f3757a6":"def atribuiprata(s):\n    if s == \"Silver\":\n       return 1\n    else:\n       return 0","7afeeb0d":"atletasreg['Prata'] = atletasreg['Medalha'].apply(atribuiprata)","3df0a315":"atletasreg['Prata'].sum()","c03bbce9":"def atribuibronze(s):\n    if s == \"Bronze\":\n       return 1\n    else:\n       return 0","fbe63413":"atletasreg['Bronze'] = atletasreg['Medalha'].apply(atribuibronze)","b4e3dd5c":"atletasreg['Bronze'].sum()","b1471c2d":"atletasreg['Total'] = atletasreg['Ouro'] + atletasreg['Prata'] + atletasreg['Bronze']","8f4624f2":"atletasreg.sample(10).T","e8c5de59":"Paises = atletasreg[['Pais', 'SigladoPais', 'Equipe', 'Ouro', 'Prata', 'Bronze']].groupby(['Pais', 'SigladoPais', 'Equipe']).sum().reset_index()","3ed5a6c1":"#Paises.to_excel(\"PaisesA.xlsx\", sheet_name='PaisesF')","2d9f2332":"paises_trad = pd.read_excel('\/kaggle\/input\/tradcp\/Paises-Trad.xlsx') #, sheet='PaisesA-Tradu\u00e7\u00e3o')","b9d23f52":"paises_trad.info()","0eec66ce":"atletasreg = pd.merge(atletasreg, paises_trad, how='left', on=['Pais', 'Pais'])","584edb76":"atletasreg.info()","baddd42f":"atletasreg = atletasreg.fillna({\"Altura\": atletasreg['Altura'].mean()\/\/1, \"Idade\": atletasreg['Idade'].mean()\/\/1,  \"Peso\": atletasreg['Peso'].mean()\/\/1})","1a85c6b8":"atletasreg.nlargest(50, 'Altura')","763bb5c2":"Esportes = atletasreg[['Esporte', 'ID']].groupby(['Esporte']).sum().reset_index()","0b40edee":"#Esportes.to_excel(\"\/kaggle\/input\/tradcp\/Esportes.xlsx\", sheet_name='Trad')","4c19180f":"Esportes_trad = pd.read_excel('\/kaggle\/input\/tradcp\/Esportes-Trad.xlsx')","726bc0fe":"Esportes_trad.info()","44b41325":"atletasreg = pd.merge(atletasreg, Esportes_trad, how='left', on=['Esporte', 'Esporte'])","cb70cd6b":"atletasreg.info()","06893db5":"atletasreg.drop('notes', axis=1, inplace=True)","45635f1c":"atletasreg['Altura'] = atletasreg['Altura']\/100","22518ed6":"atletasreg['Estacao_PT_BR'] = 'Ver\u00e3o'","f5b783c1":"atletasreg.Estacao_PT_BR.value_counts()","897ef13f":"Modalidades = atletasreg[['Modalidade', 'Ouro']].groupby(['Modalidade']).sum().reset_index()","f516f7dd":"#Modalidades.to_excel(\"Modalidades.xlsx\", sheet_name='Trad')","f245b1b8":"Modalidades_trad = pd.read_excel('\/kaggle\/input\/tradcp\/Modalidades-Trad.xlsx')","5330d455":"Modalidades_trad.info()","5f7a17f6":"atletasreg = pd.merge(atletasreg, Modalidades_trad, how='left', on=['Modalidade', 'Modalidade'])","066a6e50":"atletasreg.tail(5).T","36240b94":"Cidades = atletasreg[['Cidade', 'Ano']].groupby(['Cidade']).mean().reset_index()","459c85da":"#Cidades.to_excel(\"Cidades.xlsx\", sheet_name='Trad')","755343a4":"Cidades_trad = pd.read_excel('\/kaggle\/input\/tradcp\/Cidades-Trad.xlsx')","e185d62e":"atletasreg = pd.merge(atletasreg, Cidades_trad, how='left', on=['Cidade', 'Cidade'])","d3e5106f":"atletasreg.head(5).T","45e77606":"%matplotlib inline","24dbf8b6":"qmI = atletasreg","5222878f":"qmI.info()","cff78ef5":"qmI.drop('ID', axis=1, inplace=True)\nqmI.drop('Nome', axis=1, inplace=True)\nqmI.drop('Sexo', axis=1, inplace=True)\nqmI.drop('Idade', axis=1, inplace=True)\nqmI.drop('Altura', axis=1, inplace=True)\nqmI.drop('Peso', axis=1, inplace=True)","c76e32a7":"qmI.drop_duplicates(inplace=True)","64188dd4":"qmV = qmI[['Ano', 'Pais-PT-BR', 'Ouro', 'Prata', 'Bronze', 'Total']].groupby(['Ano', 'Pais-PT-BR']).sum().reset_index()","6ded5df0":"qmV[qmV['Pais-PT-BR'] == 'Estados Unidos']","c12ea384":"qmT = qmV[qmV['Pais-PT-BR'] == 'Estados Unidos']","292ef51a":"plt.figure(figsize=(15,5))\nsns.pointplot(x='Ano', y='Ouro', data=qmT, color='green')\nplt.title('As medalhas de Ouro dos Estados Unidos nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=30) #diminuindo a escala de y\nplt.grid(True, color='grey')","412f0f47":"plt.figure(figsize=(15,5))\nsns.pointplot(x='Ano', y='Prata', data=qmT, color='green')\nplt.title('As medalhas de Prata dos Estados Unidos nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=30) #diminuindo a escala de y\nplt.grid(True, color='grey')","bfec781f":"plt.figure(figsize=(15,5))\nsns.pointplot(x='Ano', y='Bronze', data=qmT, color='green')\nplt.title('As medalhas de Bronze dos Estados Unidos nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=20) #diminuindo a escala de y\nplt.grid(True, color='grey')","ec1879f6":"plt.figure(figsize=(15,10))\nsns.pointplot(x='Ano', y='Total', data=qmT, color='green')\nplt.title('O total de medalhas dos Estados Unidos nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=20) #diminuindo a escala de y\nplt.grid(True, color='grey')","b65418ef":"qmY = qmI[['Ano', 'Ouro', 'Prata', 'Bronze', 'Total']].groupby(['Ano']).sum().reset_index()","fc3f5b25":"qmY.head(50)","a2833e58":"qmB = qmV[qmV['Pais-PT-BR'] == 'Brasil']","cd37e75c":"plt.figure(figsize=(15,5))\nsns.pointplot(x='Ano', y='Ouro', data=qmB, color='green')\nplt.title('As medalhas de Ouro do Brasil nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=10) #diminuindo a escala de y\nplt.grid(True, color='grey')","8c7400f3":"plt.figure(figsize=(15,5))\nsns.pointplot(x='Ano', y='Prata', data=qmB, color='green')\nplt.title('As medalhas de Prata do Brasil nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=10) #diminuindo a escala de y\nplt.grid(True, color='grey')","eadb908b":"plt.figure(figsize=(15,5))\nsns.pointplot(x='Ano', y='Bronze', data=qmB, color='green')\nplt.title('As medalhas de Bronze do Brasil nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=12) #diminuindo a escala de y\nplt.grid(True, color='grey')","83151f94":"plt.figure(figsize=(15,10))\nsns.pointplot(x='Ano', y='Total', data=qmB, color='green')\nplt.title('O total de medalhas do Brasil nas Ol\u00edmpiadas')\nplt.locator_params(axis='y', nbins=27) #diminuindo a escala de y\nplt.grid(True, color='grey')","caf59ab3":"#qmI[['Ano', 'Pais-PT-BR', 'Ouro', 'Prata', 'Bronze', 'Total']].groupby(['Ano', 'Pais-PT-BR']).sum().reset_index()\nqmOuroB = qmV[qmV['Pais-PT-BR'] == 'Brasil']\nqmOuroE = qmV[qmV['Pais-PT-BR'] == 'Estados Unidos']\nqmOuroC = qmV[qmV['Pais-PT-BR'] == 'Cuba']\nqmOuroR = qmV[qmV['Pais-PT-BR'] == 'R\u00fassia']\nqmAno = qmY\n","aa62b4a7":"qmOuroB.info()","0757ea0f":"qmOuroB.drop('Prata', axis=1, inplace=True)\nqmOuroB.drop('Bronze', axis=1, inplace=True)\nqmOuroB.drop('Total', axis=1, inplace=True)\nqmOuroE.drop('Prata', axis=1, inplace=True)\nqmOuroE.drop('Bronze', axis=1, inplace=True)\nqmOuroE.drop('Total', axis=1, inplace=True)\nqmOuroC.drop('Prata', axis=1, inplace=True)\nqmOuroC.drop('Bronze', axis=1, inplace=True)\nqmOuroC.drop('Total', axis=1, inplace=True)\nqmOuroR.drop('Prata', axis=1, inplace=True)\nqmOuroR.drop('Bronze', axis=1, inplace=True)\nqmOuroR.drop('Total', axis=1, inplace=True)\nqmAno.drop('Prata', axis=1, inplace=True)\nqmAno.drop('Bronze', axis=1, inplace=True)\nqmAno.drop('Total', axis=1, inplace=True)\nqmAno.drop('Ouro', axis=1, inplace=True)","ff9d577c":"qmOuroB.rename(columns={'Ouro':'Brasil'}, inplace=True)\nqmOuroE.rename(columns={'Ouro':'EUA'}, inplace=True)\nqmOuroC.rename(columns={'Ouro':'Cuba'}, inplace=True)\nqmOuroR.rename(columns={'Ouro':'R\u00fassia'}, inplace=True)\n","2c05525b":"qmOuroB.drop('Pais-PT-BR', axis=1, inplace=True)\nqmOuroE.drop('Pais-PT-BR', axis=1, inplace=True)\nqmOuroC.drop('Pais-PT-BR', axis=1, inplace=True)\nqmOuroR.drop('Pais-PT-BR', axis=1, inplace=True)","fa98446c":"qmOuro = pd.merge(qmAno, qmOuroB, how='left', on=['Ano', 'Ano'])\nqmOuro = pd.merge(qmOuro, qmOuroE, how='left', on=['Ano', 'Ano'])\nqmOuro = pd.merge(qmOuro, qmOuroC, how='left', on=['Ano', 'Ano'])\nqmOuro = pd.merge(qmOuro, qmOuroR, how='left', on=['Ano', 'Ano'])","8e0828af":"qmOuro.head(50)","b6958f61":"qmOuro = qmOuro.fillna({\"Brasil\": qmOuro['Brasil'].min(), \"EUA\": 0,  \"Cuba\": qmOuro['Cuba'].min(), \"R\u00fassia\": qmOuro['R\u00fassia'].min()})\n","83786980":"qmOuro.head(50)","ac83ea24":"ax = plt.gca()\nqmOuro.plot(kind='line',x='Ano',y='Brasil',color='green', ax=ax)\nqmOuro.plot(kind='line',x='Ano',y='EUA', color='blue', ax=ax)\nqmOuro.plot(kind='line',x='Ano',y='R\u00fassia', color='red', ax=ax)\nqmOuro.plot(kind='line',x='Ano',y='Cuba', color='Yellow', ax=ax)\nplt.show()","fad76036":"Exibi\u00e7\u00e3o de amostra de 10 registros com visualiza\u00e7\u00e3o transposta da base combinada de atletas e regi\u00f5es.","ab9d0ef6":"Apresenta\u00e7\u00e3o da quantidade total de medalhas por jogos.","cb21266f":"Altera\u00e7\u00e3o do nome do campo de \"regionc\" para \"region\".","503b34fa":"Gr\u00e1fico mostrando a compara\u00e7\u00e3o na obten\u00e7\u00e3o de medalhas de ouro por Brasil, Estados Unidos, Cuba e R\u00fassia.","7116555b":"Inclus\u00e3o dos campos com o nome do pa\u00eds traduzido do ingl\u00eas para o portugu\u00eas e o continente no dataframe \"atletasreg\".","4f501bc6":"Gr\u00e1fico com a exibi\u00e7\u00e3o das medalhas de bronze obtidas pelo Brasil.","47ba5d09":"Exibi\u00e7\u00e3o de amostras de registros com visualiza\u00e7\u00e3o transposta dos dataframes atletas e regi\u00f5es.","9f6daf37":"Inclus\u00e3o do campo com o nome da cidade traduzido do ingl\u00eas para o portugu\u00eas no dataframe \"atletasreg\".","5709294f":"Exibi\u00e7\u00e3o dos campos dispon\u00edveis na base de Regi\u00f5es.","d4978a1b":"Exibi\u00e7\u00e3o das medalhas obtidas Jogos a Jogos pelos Estados Unidos.","39a35bfa":"Exibi\u00e7\u00e3o dos \u00faltimos 05 registros do dataframe \"atletas_reg\".","70d2290b":"Exporta\u00e7\u00e3o do dataframe \"Esportes\" para uma planilha Excel.","627e2cdb":"Cria\u00e7\u00e3o do campo \"Bronze\" no dataframe \"atletasreg\" para receber o valor \"1\" quando o registro apontar o valor \"Bronze\" no campo \"Medalha\". ","73e3d505":"Exibi\u00e7\u00e3o dos registros com o campo \"Pais\" igual a \"Brazil\".","b4facadc":"Exibi\u00e7\u00e3o dos campos existentes no dataframe \"qmI\".","148ce8b3":"Exibi\u00e7\u00e3o dos campos existentes no dataframe \"Esportes_trad\".","f27884b6":"Cria\u00e7\u00e3o de dataframe \"Paises\" com o total de medalhas de Ouro, Prata e Bronze para planilha de entrada de dados para tradu\u00e7\u00e3o dos nomes dos pa\u00edses e seus respectivos continentes.","5c4bde5e":"Cria\u00e7\u00e3o de dataframe espec\u00edfico com os registros cujo campo \"region\" est\u00e1 com valor nulo. ","e45ddd73":"\nCria\u00e7\u00e3o do Dataframe \"Cidades_trad\" com a tradu\u00e7\u00e3o dos nomes das cidades do idioma ingl\u00eas para o idioma portugu\u00eas.","696217f9":"Cria\u00e7\u00e3o do dataframe \"qmV\" a partir do dataframe \"qMI\" contendo o desempenhos dos pa\u00edses por medalhas em cada Jogos Ol\u00edmpicos.","f6328e0e":"Cria\u00e7\u00e3o do campo \"Estacao_PT_BR\" no dataframe \"atletasreg\" para receber o valor traduzido da esta\u00e7\u00e3o.","171ddf5f":"Valida\u00e7\u00e3o do acr\u00e9scimo dos registros de valores nulos a partir da exibi\u00e7\u00e3o dos registros ajustados.","aca3b4eb":"Cria\u00e7\u00e3o do Dataframe \"Esportes_trad\" com a tradu\u00e7\u00e3o dos nomes dos esportes do idioma ingl\u00eas para o idioma portugu\u00eas.","b16c9ad3":"Nova exibi\u00e7\u00e3o dos campos dispon\u00edveis na base \"atletas_reg\".","8d31b336":"Exporta\u00e7\u00e3o do dataframe \"Paises\" para uma planilha Excel.","05722be7":"Cria\u00e7\u00e3o de dataframe com os registros com o campo \"region\" (pa\u00eds) que apresenta valor nulo.","b8390134":"Exibi\u00e7\u00e3o da identifica\u00e7\u00e3o da posi\u00e7\u00e3o do registro com valor nulo.","ad187fae":"Somat\u00f3rio dos valores do campo \"Ouro\" do Dataframe \"atletasreg\".","8916e682":"Exibi\u00e7\u00e3o dos primeiros 8 registros do dataframe \"region_nulos\".","700f929b":"Exlus\u00e3o dos registros duplicados existentes no dataframe \"qmI\".","c8526bc0":"Gr\u00e1fico com a exibi\u00e7\u00e3o das medalhas de ouro obtidas pelo Brasil.","cc1f1af6":"Exporta\u00e7\u00e3o do dataframe \"Cidades\" para uma planilha Excel.\n","da6b97da":"Cria\u00e7\u00e3o do Dataframe \"Modalidades_trad\" com a tradu\u00e7\u00e3o dos nomes das modalidades do idioma ingl\u00eas para o idioma portugu\u00eas.","bc29eb97":"Exibi\u00e7\u00e3o de amostra de registros com visualiza\u00e7\u00e3o transposta da base combinada de atletas e regi\u00f5es.","3c426591":"Nova exibi\u00e7\u00e3o dos campos existentes no dataframe \"atletas_reg\".","5067f1ac":"Exporta\u00e7\u00e3o do dataframe \"Modalidades\" para uma planilha Excel.","1b446a67":"Contagem dos valores do campo \"Estacao_PT_BR\" no dataframe \"atletasreg\".","020222e3":"Exibi\u00e7\u00e3o, na forma transposta, dos cinco primeiros registros do dataframe \"atletasreg\".","e4069000":"Gr\u00e1fico com a exibi\u00e7\u00e3o das medalhas de prata obtidas pelo Brasil.","78a54db4":"Exibi\u00e7\u00e3o dos tamanhos das bases de dados Atletas e Atletasreg.","912ea33b":"Gr\u00e1fico com a exibi\u00e7\u00e3o do total de medalhas obtidas pelos Estados Unidos.","d25c582c":"Exibi\u00e7\u00e3o, na forma transposta, dos primeiros 5 registros do dataframe \"atletasreg\". ","6985e334":"Exclus\u00e3o do campo \"notes\" do dataframe \"atletasreg\".","fc40a6d9":"Exibi\u00e7\u00e3o de 3 registros do dataframe \"region_nulos\" na forma transposta.","91e4c841":"Tratamento dos registros com valor nulo para adequa\u00e7\u00e3o da base de dados de regi\u00f5es","3acc2cd6":"Exclus\u00e3o do registro com valor nulo.","615602e3":"Cria\u00e7\u00e3o do campo \"Total\" para receber o somat\u00f3rio dos valores dos campos \"Ouro\", \"Prata\" e \"Bronze\".","73d5cfa3":"Duplica\u00e7\u00e3o do Dataframe \"atletasreg\" para tratamento espec\u00edfico no dataframe \"qmI\"","a8c2dab4":"Nova exibi\u00e7\u00e3o dos campos existentes no dataframe \"atletas_reg\".","f57a5928":"Gr\u00e1fico com a exibi\u00e7\u00e3o das medalhas de prata obtidas pelos Estados Unidos.","12b8564e":"Cria\u00e7\u00e3o de dataframe \"Esportes\" para planilha de entrada de dados para tradu\u00e7\u00e3o dos nomes dos esportes.","4f27f33a":"Exibi\u00e7\u00e3o dos tamanhos das bases de dados importadas para o Dataframe.","655dfd3e":"Mostrando o desempenho dos pa\u00edses (Brasil, Estados Unidos, Cuba e R\u00fassia) na obten\u00e7\u00e3o das medalhas de ouro na hist\u00f3ria dos Jogos Ol\u00edmpicos (investiga\u00e7\u00e3o de valores nulos nos campos).","3a234da6":"Mostrando o desempenho dos pa\u00edses (Brasil, Estados Unidos, Cuba e R\u00fassia) na obten\u00e7\u00e3o das medalhas de ouro na hist\u00f3ria dos Jogos Ol\u00edmpicos.","0b086473":"Substitui\u00e7\u00e3o da base de dados \"region_nulos\" detalhada por uma base com agrupamento dos campos \"NOC\" (Sigla do Pa\u00eds) e \"Team\" (Equipe). ","265a2ff1":"Gr\u00e1fico com a exibi\u00e7\u00e3o das medalhas de bronze obtidas pelos Estados Unidos.","8a2c6365":"Gr\u00e1fico com a exibi\u00e7\u00e3o do total de medalhas obtidas pelo Brasil.","088950e4":"Exibi\u00e7\u00e3o de amostra de registros com visualiza\u00e7\u00e3o transposta da base combinada de atletas e regi\u00f5es com o campo \"region\" de valor nulo.","ac2b3f94":"Exibi\u00e7\u00e3o da identifica\u00e7\u00e3o da posi\u00e7\u00e3o do registro com valor nulo.","77e6371d":"An\u00e1lise dos Resultados dos Jogos Ol\u00edmpicos de 1896 a 2016","2347ee29":"Exclus\u00e3o do registro com valor nulo.","ca7f1958":"Altera\u00e7\u00e3o dos nomes dos campos do dataframe \"atletasreg\". Os nomes foram alterados do ingl\u00eas para o portugu\u00eas.","3fb061ae":"Acr\u00e9scimo na tabela de regioes com os registros da tabela region_nulos.","e85a374f":"Inclus\u00e3o do campo com o nome da modalidade traduzido do ingl\u00eas para o portugu\u00eas no dataframe \"atletasreg\".","df2dc24c":"Preenchimento dos valores nulos do campo \"altura\" com a m\u00e9dia geral dos valores preenchidos para o campo.","8333446d":"Altera\u00e7\u00e3o do nome do campo de \"region\" para \"notes\".","d782a32a":"Refazimento da base de dados \"atletasreg\" a partir da jun\u00e7\u00e3o das bases de dados de atletas e regi\u00f5es para uso do campo \"region\" que representa o pa\u00eds. O campo usado como chave foi o campo \"NOC\", representa a sigla do pa\u00eds, dispon\u00edvel nas duas tabelas. Na jun\u00e7\u00e3o, foram descartadas as linhas do dataframe atletas com valor = Winter (inverno) para o campo Season (Esta\u00e7\u00e3o). O refazimento foi necess\u00e1rio devido a novos registros inclu\u00eddos na base de regi\u00f5es.\n","453948df":"Exclus\u00e3o registros duplicados e\/ou desnecess\u00e1rios do dataframe \"region_nulos\".","be8505e4":"Cria\u00e7\u00e3o de dataframe \"Cidades\" com a m\u00e9dia dos anos para planilha de entrada de dados para tradu\u00e7\u00e3o dos nomes das cidades.\n","92d3e69e":"Preechendo os campos nulos da tabela.","f48ca44c":"Exclus\u00e3o do campo \"notes\" do dataframe \"regioes\".","78bc9fe1":"Somat\u00f3rio dos valores do campo \"Prata\" do Dataframe \"atletasreg\".","2ed218f6":"Cria\u00e7\u00e3o do campo \"Prata\" no dataframe \"atletasreg\" para receber o valor \"1\" quando o registro apontar o valor \"Silver\" no campo \"Medalha\". ","4e27191f":"Cria\u00e7\u00e3o do campo \"Ouro\" no dataframe \"atletasreg\" para receber o valor \"1\" quando o registro apontar o valor \"Gold\" no campo \"Medalha\". ","6dd0cb5f":"Exibi\u00e7\u00e3o dos campos existentes no dataframe \"paises_trad\".","e24e15b6":"Inclus\u00e3o do campo com o nome do esporte traduzido do ingl\u00eas para o portugu\u00eas no dataframe \"atletasreg\".","89be27fe":"Cria\u00e7\u00e3o do dataframe \"qmB\" a partir do dataframe \"qmV\" com as medalhas obtidas pelo Brasil.","5e844a25":"Exibi\u00e7\u00e3o dos campos existentes no dataframe \"Modalidades_trad\".\n","2d2a8ebd":"Cria\u00e7\u00e3o dos Dataframes a partir das bases de dados de atletas e regi\u00f5es dispon\u00edveis no Kaggle.","d9197d88":"Exclus\u00e3o do registro com valor nulo.","55a33a4c":"Cria\u00e7\u00e3o do Dataframe \"paises_trad\" com a tradu\u00e7\u00e3o dos nomes dos pa\u00edses do idioma ingl\u00eas para o idioma portugu\u00eas.","975a0b16":"Exclus\u00e3o do campo desnecess\u00e1rio \"ID\" do dataframe \"region_nulos\".","db9ae57e":"Gr\u00e1fico com a exibi\u00e7\u00e3o das medalhas de ouro obtidas pelos Estados Unidos.","17985a47":"Exclus\u00e3o dos campos \"ID\", \"Nome\", \"Sexo\", \"Idade\", \"Altura\", \"Peso\" do dataframe \"QMI\". A exclus\u00e3o dos campos \u00e9 necess\u00e1ria para an\u00e1lise do quadro de medalhas.","41f68020":"Exibi\u00e7\u00e3o dos campos dispon\u00edveis na base combinada de atletas e regi\u00f5es.","54ba983f":"Exibi\u00e7\u00e3o dos campos dispon\u00edveis na base \"region_nulos\".","79571a65":"Acr\u00e9scimo dos registros tratados que anteriormente estavam com o campo \"region\" preenchido com valores nulos preenchidos com os valores constantes do campo \"notes\" do dataframe \"region_nulos\" para \"regioes\".","e8328a89":"Cria\u00e7\u00e3o de dataframe \"qmY\" contendo a quantidade total de medalhas por jogos.","eb3b3e4f":"Cria\u00e7\u00e3o do dataframe \"qmT\" a partir do dataframe \"qmV\" com as medalhas obtidas pelos Estados Unidos.","0ef584ad":"Exibi\u00e7\u00e3o da identifica\u00e7\u00e3o da posi\u00e7\u00e3o do registro com valor nulo.","4ad528bb":"Altera\u00e7\u00e3o do nome do campo de \"notes\" para \"regionc\".","17a50b2c":"Cria\u00e7\u00e3o de dataframe \"Modalidades\" com o total de medalhas de Ouro para planilha de entrada de dados para tradu\u00e7\u00e3o dos nomes das modalidades.","ee4b183e":"Exibi\u00e7\u00e3o dos primeiros 4 registros do dataframe \"region_nulos\".","679de192":"Exibi\u00e7\u00e3o de 3 registros do dataframe \"region_nulos\" na forma transposta.","e82832ef":"Juntando os daframes de ano e ouro do Brasil, Estados Unidos, Cuba e R\u00fassia.","608baa44":"Somat\u00f3rio dos valores do campo \"Bronze\" do Dataframe \"atletasreg\".","40694370":"Exibi\u00e7\u00e3o dos registros que apresentam os 50 maiores valores para o campo \"altura\". ","b5853e42":"Exibi\u00e7\u00e3o dos registros com o campo \"Equipe\" igual a \"Demi-Mondaine-17\".","5bc2a8a8":"Transforma\u00e7\u00e3o do valor do campo altura de cent\u00edmetros para metros.","d61e30d9":"Nova exibi\u00e7\u00e3o dos campos existentes no dataframe \"qmOuroB\" (medalhas de Ouro do Brasil).","ffc76c12":"Criando Dataframes com o pa\u00eds na coluna para compara\u00e7\u00e3o na obten\u00e7\u00e3o de medalhas de ouro nos Jogos Ol\u00edmpicos","d6532168":"Altera\u00e7\u00e3o do nome do campo \"Team\" para \"region\" para aproveitamento da informa\u00e7\u00e3o dispon\u00edvel no campo \"Team\" para uso no campo \"Region\".","7a385ef1":"Cria\u00e7\u00e3o de uma nova base de dados \"atletasreg\" a partir da jun\u00e7\u00e3o das bases de dados de atletas e regi\u00f5es para uso do campo \"region\" que representa o pa\u00eds. O campo usado como chave foi o campo \"NOC\", representa a sigla do pa\u00eds, dispon\u00edvel nas duas tabelas. Na jun\u00e7\u00e3o, foram descartadas as linhas do dataframe atletas com valor = Winter (inverno) para o campo Season (Esta\u00e7\u00e3o)."}}