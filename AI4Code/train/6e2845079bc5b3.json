{"cell_type":{"3fc3da22":"code","327ad97a":"code","2f5fa50a":"code","b4daef1b":"code","e54cae39":"code","4b5dd7d2":"code","8d1212ce":"code","d0139dc1":"code","0f58f820":"markdown","b27ec648":"markdown","6f820702":"markdown","76cccce1":"markdown","e2d53ad0":"markdown"},"source":{"3fc3da22":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","327ad97a":"# \u0130lk olarak uzerinde i\u015flem yapacag\u0131m\u0131z data dosyas\u0131n\u0131 se\u00e7elim\n\ndata = pd.read_csv(\"\/kaggle\/input\/protein-data-set\/pdb_data_no_dups.csv\")","2f5fa50a":"# data hakk\u0131nda genel bilgiler\n\ndata.info()","b4daef1b":"# Sat\u0131r ve sutun say\u0131lar\u0131 \n\ndata.shape","e54cae39":"# Sutun isimleri\n\ndata.columns","4b5dd7d2":"data.dtypes","8d1212ce":"# sutunlarda hangi degerlerden ka\u00e7 tane oldugunu bulma\n\ndef deger_sayisi(variable):\n    \n    var = data[variable]  # columnun  degi\u015fkenlerni atad\u0131k \n    varValue = var.value_counts()\n    \n    print(\"{} : \\n {}\" .format(variable,varValue))","d0139dc1":"category = [\"classification\" , \"experimentalTechnique\" , \"macromoleculeType\" , \"crystallizationMethod\" , \"phValue\"]\n\nfor i in category:\n    deger_sayisi(i)","0f58f820":"<font color = 'purple' > <strong>Numerik Degi\u015fkenler (Numeric Variables) : <\/strong><\/font> Say\u0131lardan olu\u015fan featurelard\u0131r .\n\n* residueCount\n\n* structureMolecularWeight  \n\n* resolution \n\n\n","b27ec648":"<strong>Datam\u0131z 14 sutun ve 141401 sat\u0131rdan olu\u015fuyor .<\/strong>","6f820702":"**14 columndan 6 tanesi object, 7 tanesi float , 1 tanesi de integer degerlerden olu\u015fuyor .**\n\n<font color='blue'><strong>Kategorik Degi\u015fkenler (Categorical Variables) : <\/strong> <\/font> 2 ve ya daha fazla kategoriden olu\u015fan featurelard\u0131r.\n\n* classification\n\n* experimentalTechnique\n\n* macromoleculeType\n\n* crystallizationMethod\n\n* phValue \n\n","76cccce1":"**Sutun isimleri duzgun bir \u015fekilde yaz\u0131lm\u0131\u015f .Upper lover case ya da bo\u015fluk gibi sorunlar olmad\u0131g\u0131 i\u00e7in duzeltme yapmaya gerek yok.**","e2d53ad0":"-  structureId   : Protein yap\u0131s\u0131n\u0131n Id degeri .\n\n- classification :   Protein yap\u0131s\u0131n\u0131n s\u0131n\u0131f\u0131 .\n\n- experimentalTechnique :   Deneyde kullan\u0131lan teknik . \n\n- macromoleculeType :   Molekul tipi .\n\n- residueCount :   Kalan art\u0131k say\u0131s\u0131 .   \n\n- resolution :   \u00c7\u00f6zum  sonucu \n\n- structureMolecularWeight :Molekul ag\u0131rl\u0131g\u0131\n\n- crystallizationMethod  :   Molekulu kristalize (molekulu kat\u0131\u015ft\u0131rma) metodu\n\n- crystallizationTempK   :   Kristalize etme s\u0131cakl\u0131g\u0131 (Kelvin turunden )  \n\n- densityMatthews           \n\n- densityPercentSol         \n\n- pdbxDetails               \n\n- phValue                   \n\n- publicationYear         \n\n"}}