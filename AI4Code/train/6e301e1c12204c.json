{"cell_type":{"9c69f1a3":"code","dd53b8d6":"code","ae941412":"code","73fde72e":"code","933f9ed9":"code","c8c95c82":"code","49a876c6":"code","73b6f234":"code","359bc66f":"code","655d723f":"code","5d418fa3":"code","fcc32b78":"code","38ef1b2a":"code","58b06872":"code","ce2dc0c7":"code","141ecfd2":"code","c33fcb96":"code","587b9d1b":"code","591138c9":"code","fd75f614":"code","eb20e4a9":"code","56d44e4e":"code","10541a64":"code","9573b427":"code","bbd7721d":"code","1ac782a8":"code","59909c2e":"code","5fb1c119":"code","89d4aed1":"code","96f631b0":"markdown","44a1210d":"markdown","e71243c5":"markdown","3cf9ce72":"markdown","e7798471":"markdown","ab8b9302":"markdown","cd15116a":"markdown","235ae5cd":"markdown","0759602e":"markdown","e8e53aa1":"markdown","2b5533ab":"markdown","0c242ea6":"markdown","470ac33f":"markdown","13ed4d8d":"markdown","59f682b8":"markdown","05d358c5":"markdown","c659c511":"markdown","ea559d67":"markdown","e061f979":"markdown","cfe7e47c":"markdown","95d1f4ce":"markdown","8ccdb162":"markdown","69f6c187":"markdown","c9fde775":"markdown","ee88ec02":"markdown","a009a59c":"markdown","c8562516":"markdown","df5a27ea":"markdown","6481f1dd":"markdown","99f9ddd1":"markdown","bab3d15e":"markdown","a08bad9c":"markdown","ee4c994b":"markdown","899d35d6":"markdown","43ea8e4d":"markdown","19505a19":"markdown","06e2ade1":"markdown","0daf0d88":"markdown","16a63f87":"markdown","0ef5c9ee":"markdown"},"source":{"9c69f1a3":"%%HTML\n<style type=\"text\/css\">\n\ndiv.h2 {\n    background-color: #00b050; \n    color: white; \n    padding: 5px; \n    padding-right: 300px; \n    font-size: 25px;  \n    margin-top: 2px;\n    margin-bottom: 10px;\n}\n\ndiv.h3 {\n    background-color: white; \n    color: #fe0000; \n    padding: 5px; \n    padding-right: 300px; \n    font-size: 20px; \n    margin-top: 2px;\n    margin-bottom: 10px;\n}\n<\/style>","dd53b8d6":"# install awesomeness\n!pip install pywaffle\n!pip install bubbly","ae941412":"import os\nimport pandas as pd\nimport numpy as np\nfrom itertools import islice\n\n# import viz libraries here\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pywaffle import Waffle\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\nfrom bubbly.bubbly import bubbleplot\n\n# Disable warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# for slide deck embed\nfrom IPython.display import HTML","73fde72e":"# Global Functions and Utility functions\n\nCOLOR_ASSOCIATION = {\n    '#00b050': 'Good',\n    '#91cf4f': 'Satisfactory',\n    '#fefe00': 'Moderate',\n    '#ffbf00': 'Poor',\n    '#fe0000': 'Very Poor',\n    '#bf0000': 'Severe',\n    '#737373': 'Not Available'\n}\n\ndef trim(x):\n    \"\"\"Strip of trailing whitespace\"\"\"\n    \n    return x.strip()\n\ndef order_bucket(old, order=['Good', 'Satisfactory', 'Moderate', 'Poor', 'Very Poor', 'Severe', 'Not Available']):\n    \"\"\"Order by bucket\n    `old` => Old dictionary\n    `order` => Order of AQI buckets (optional)\n    \"\"\"\n    \n    new = {}\n    for cat in order:\n        try:\n            new[cat] = old[cat]\n        except:\n            continue\n    return new","933f9ed9":"# Loading the data\n\nhome = \"..\/input\/air-quality-data-in-india\"\ntry:\n    cd = pd.read_csv(os.path.join(home, \"city_day.csv\"))\n    ch = pd.read_csv(os.path.join(home, \"city_hour.csv\"))\n    sd = pd.read_csv(os.path.join(home, \"station_day.csv\"))\n    sh = pd.read_csv(os.path.join(home, \"station_hour.csv\"))\n    st = pd.read_csv(os.path.join(home, \"stations.csv\"))\n    city = pd.read_csv(\"\/kaggle\/input\/top-500-indian-cities\/cities_r2.csv\")\n    city_co = pd.read_csv(\"\/kaggle\/input\/indian-cities-database\/Indian Cities Database.csv\")\n    \nexcept:\n    print(\"File names have changed!\")","c8c95c82":"# prepare data on cities\n\ncity['name_of_city'] = city['name_of_city'].apply(trim)\nnew_names = {\n    'Ahmadabad': 'Ahmedabad',\n    'Amravati': 'Amaravati',\n    'Gurgaon': 'Gurugram',\n    'Greater Mumbai': 'Mumbai',\n    'Greater Hyderabad': 'Hyderabad',\n}\ncity['name_of_city'] = city['name_of_city'].replace(new_names)\n\nrel_cols = [\n    'name_of_city',\n    'state_name',\n    'population_total',\n    'population_male',\n    'population_female',\n    '0-6_population_total',\n    'literates_total',\n    'literates_male',\n    'literates_female',\n    'sex_ratio',\n    'effective_literacy_rate_total',\n    'total_graduates',\n]\ncity = city[rel_cols]\n\ncities = ['Ahmedabad',\n 'Aizawl',\n 'Amaravati',\n 'Amritsar',\n 'Bengaluru',\n 'Bhopal',\n 'Brajrajnagar',\n 'Chandigarh',\n 'Chennai',\n 'Coimbatore',\n 'Delhi',\n 'Ernakulam',\n 'Gurugram',\n 'Guwahati',\n 'Hyderabad',\n 'Jaipur',\n 'Jorapokhar',\n 'Kochi',\n 'Kolkata',\n 'Lucknow',\n 'Mumbai',\n 'Patna',\n 'Shillong',\n 'Talcher',\n 'Thiruvananthapuram',\n 'Visakhapatnam']\ncity_t = city[city['name_of_city'].isin(cities)]\n\n# combine data into `df`\ndf = pd.merge(\n    left=cd,\n    right=city_t,\n    left_on='City',\n    right_on='name_of_city',\n    how='outer'\n)","49a876c6":"HTML('<div class=\"canva-embed\" data-design-id=\"DAEHX8BoyPA\" data-height-ratio=\"0.5625\" style=\"padding:56.2500% 5px 5px 5px;background:rgba(0,0,0,0.03);border-radius:8px;\"><\/div><script async src=\"https:&#x2F;&#x2F;sdk.canva.com&#x2F;v1&#x2F;embed.js\"><\/script><a href=\"https:&#x2F;&#x2F;www.canva.com&#x2F;design&#x2F;DAEHX8BoyPA&#x2F;view?utm_content=DAEHX8BoyPA&amp;utm_campaign=designshare&amp;utm_medium=embeds&amp;utm_source=link\" target=\"_blank\" rel=\"noopener\">AQI Analysis Executive Summary<\/a> by Ramshankar Yadhunath')","73b6f234":"# Day-wise AQI levels across Indian cities from 2015-2020 (Scaled Representation) \n\nmpl.rc_file_defaults()\n\n# prepare data\ntemp = cd.fillna('Not Available')\ntemp = pd.DataFrame(temp['AQI_Bucket'].value_counts()).to_dict()['AQI_Bucket']\ntemp = order_bucket(temp) # order the dict based on AQI buckets\n\n# plot\nfig = plt.figure(\n    title={\n        'label': 'Day-wise AQI levels across Indian cities from 2015-2020 (Scaled Representation)\\nTotal Records:29531\\n',\n        'loc': 'left',\n        'fontdict': {\n            'fontsize': 15,\n        }\n    },\n    FigureClass=Waffle, \n    rows=10, \n    columns=20,\n    values=temp, \n    colors=['#00b050', '#91cf4f', \"#fefe00\", \"#ffbf00\", \"#fe0000\", \"#bf0000\", \"#737373\"],\n    labels=[f\"{k} ({round((v\/cd.shape[0]*100),2)}%)\" for k, v in temp.items()],\n    #legend={'loc': 'upper left', 'bbox_to_anchor': (1.1, 1)},\n    legend={\n        # 'labels': [f\"{k} ({v}%)\" for k, v in data.items()],  # lebels could also be under legend instead\n        'loc': 'lower left',\n        'bbox_to_anchor': (0, -0.2),\n        'ncol': 4,\n        'framealpha': 0,\n        'fontsize': 12\n    },\n    block_arranging_style='style',\n    figsize=(10, 20),\n    starting_location='NW',\n    vertical=False,\n)\n# show plot\nplt.show()","359bc66f":"# setting matplotlib parameters\nplt.rcParams['figure.figsize'] = 12, 8\nplt.rcParams['font.family'] = 'serif'\nplt.rcParams['font.serif'] = 'Ubuntu'\nplt.rcParams['font.monospace'] = 'Ubuntu Mono'\nplt.rcParams['axes.labelweight'] = 'bold'\nplt.rcParams['axes.labelsize'] = 15\nplt.rcParams['xtick.labelsize'] = 12\nplt.rcParams['ytick.labelsize'] = 12\nplt.rcParams['axes.titlesize'] = 20\nplt.rcParams['figure.titlesize'] = 20\nplt.rcParams['figure.titleweight'] = 'bold'\nplt.rcParams['axes.titlelocation'] = 'left'\nplt.rcParams['axes.titleweight'] = 'bold'\nplt.rcParams['legend.shadow'] = False\nplt.rcParams['legend.frameon'] = True\n\n# plotting num records per city\ntemp = pd.DataFrame(cd['City'].value_counts()).sort_values(by='City', ascending=True).to_dict()['City']\nwith plt.style.context('ggplot'):\n    fig, ax = plt.subplots()\n    ax.axvline(x=1005, c='#737373', linestyle='--')\n    ax.barh(list(temp.keys()), list(temp.values()), label='Low Number of Records', color=['#737373']*12 + ['#30a2da']*14)\n    ax.legend()\n    ax.yaxis.grid(False)\n    ax.text(x=1050, y='Shillong', s='50% of maximum records\\navailable for a city')\n    ax.set_xlabel(\"\\nNumber of Records\")\n    ax.set_ylabel(\"Name of City\\n\")\n    fig.suptitle(\"Available Number of Daily AQI Records per City (2015-2020)\")\n    #ax.set_title(\"Available number of daily AQI records per city (2015-2020)\")","655d723f":"# wmr will mean they have enough records to compare\n# wlr means these places need to be provided more records if the pollution levels are getting worse here\n# btw, the govt. does prioritise areas when they need to make a comparison\n\n# cities with more than 1005 records\nCITIES_WMR = ['Thiruvananthapuram',\n 'Jaipur',\n 'Jorapokhar',\n 'Amritsar',\n 'Visakhapatnam',\n 'Gurugram',\n 'Patna',\n 'Hyderabad',\n 'Lucknow',\n 'Bengaluru',\n 'Mumbai',\n 'Chennai',\n 'Delhi',\n 'Ahmedabad'] \n\n# cities with less than 1005 records\nCITIES_WLR = ['Aizawl',\n 'Ernakulam',\n 'Kochi',\n 'Bhopal',\n 'Chandigarh',\n 'Shillong',\n 'Coimbatore',\n 'Guwahati',\n 'Kolkata',\n 'Talcher',\n 'Brajrajnagar',\n 'Amaravati']","5d418fa3":"# custom aggregate functions\n\ndef unique_cnt(series):\n    \"\"\"Returns count of unique values in a series\"\"\"\n    \n    return len(series.unique())\n\ndef active_station_cnt(series):\n    \"\"\"Returns count of active stations\"\"\"\n    \n    return (list(series).count('Active'))\n\ndef asset_plot(df, xlabel, title):\n    \"\"\" Plot a bar plot of quantity of a particular asset to a city\n    > Ensure that the `df` follows a structure as follows\n    | City | StationId |\n    \n    \"\"\"\n    \n    # preapre data for wmr and wlr\n    wmr = df[df['City'].isin(CITIES_WMR)]\n    wlr = df[df['City'].isin(CITIES_WLR)]\n    \n    \n    # set to default values\n    mpl.rc_file_defaults()\n    plt.rcParams['figure.figsize'] = 10, 8\n    plt.rcParams['font.family'] = 'serif'\n    plt.rcParams['font.serif'] = 'Ubuntu'\n    plt.rcParams['font.monospace'] = 'Ubuntu Mono'\n    plt.rcParams['axes.labelweight'] = 'bold'\n    plt.rcParams['axes.labelsize'] = 15\n    plt.rcParams['xtick.labelsize'] = 12\n    plt.rcParams['ytick.labelsize'] = 12\n    plt.rcParams['axes.titlesize'] = 15\n    plt.rcParams['figure.titlesize'] = 20\n    plt.rcParams['figure.titleweight'] = 'bold'\n    plt.rcParams['axes.titlelocation'] = 'left'\n    plt.rcParams['axes.titleweight'] = 'normal'\n    with plt.style.context('ggplot'):\n        fig, axs = plt.subplots(nrows=2, ncols=1, sharex=True)\n        axs[0].barh(list(wmr['City']), list(wmr['StationId']), color='#30a2da')\n        axs[1].barh(list(wlr['City']), list(wlr['StationId']), color='#30a2da')\n        #ax.yaxis.grid(False)\n        #ax.xaxis.grid(False)\n        \n        #axs[0].set_xlabel(f\"\\n{xlabel}\")\n        axs[0].set_title(f\"Cities with more records\")\n        #axs[0].set_ylabel(\"Name of City\\n\")\n        #axs[1].set_xlabel(f\"\\n{xlabel}\")\n        axs[1].set_title(f\"Cities with less records\")\n        fig.text(0.5, 0.04, 'Number of Stations', ha='center', fontsize=12)\n        fig.suptitle(f\"{title} (2015-2020)\")\n    ","fcc32b78":"# number of stations per city(daywise measures)\nstation_data = pd.merge(sd, st)\n\n# gives a count of stations in each city\ncity_station_cnt = station_data.groupby(['City'], as_index=False).\\\n    agg({'StationId': unique_cnt}).\\\n    sort_values(by='StationId')\n\n# wmr and wlr\ncity_station_cnt_wmr = city_station_cnt[city_station_cnt['City'].isin(CITIES_WMR)]\ncity_station_cnt_wlr = city_station_cnt[city_station_cnt['City'].isin(CITIES_WLR)]\n\n# plot the num of stations per city\nasset_plot(city_station_cnt, 'Count of Stations', 'Number of Stations per City')","38ef1b2a":"# replace missing AQI_Bucket values with 'Not Available'\nstation_data['AQI_Bucket'].fillna('Not Available', inplace=True)\nstation_data.head()\n\n# AQI levels across cities for 5 years\ncity_buckets_wmr = station_data[station_data['City'].isin(CITIES_WMR)].groupby(['City', 'AQI_Bucket']).agg({'Date':'count'})\ntemp_wmr = city_buckets_wmr.unstack(level='AQI_Bucket', fill_value=0)\ntemp_wmr = temp_wmr['Date'][['Good', 'Satisfactory', 'Moderate', 'Poor', 'Very Poor', 'Severe', 'Not Available']]\ncity_buckets_wlr = station_data[station_data['City'].isin(CITIES_WLR)].groupby(['City', 'AQI_Bucket']).agg({'Date':'count'})\ntemp_wlr = city_buckets_wlr.unstack(level='AQI_Bucket', fill_value=0)\ntemp_wlr = temp_wlr['Date'][['Good', 'Satisfactory', 'Moderate', 'Poor', 'Very Poor', 'Severe', 'Not Available']]\n\n# making into percentages\ntemp_wmr['Total'] = temp_wmr.apply('sum', axis=1)\ntemp_wmr['Good'] = round(temp_wmr['Good'] \/ temp_wmr['Total'], 2) * 100\ntemp_wmr['Satisfactory'] = round(temp_wmr['Satisfactory'] \/ temp_wmr['Total'], 2) * 100\ntemp_wmr['Moderate'] = round(temp_wmr['Moderate'] \/ temp_wmr['Total'], 2) * 100\ntemp_wmr['Poor'] = round(temp_wmr['Poor'] \/ temp_wmr['Total'], 2) * 100\ntemp_wmr['Very Poor'] = round(temp_wmr['Very Poor'] \/ temp_wmr['Total'], 2) * 100\ntemp_wmr['Severe'] = round(temp_wmr['Severe'] \/ temp_wmr['Total'], 2) * 100\ntemp_wmr['Not Available'] = round(temp_wmr['Not Available'] \/ temp_wmr['Total'], 2) * 100\ntemp_wmr = temp_wmr.drop(['Total'], axis=1)\n\ntemp_wlr['Total'] = temp_wlr.apply('sum', axis=1)\ntemp_wlr['Good'] = round(temp_wlr['Good'] \/ temp_wlr['Total'], 2) * 100\ntemp_wlr['Satisfactory'] = round(temp_wlr['Satisfactory'] \/ temp_wlr['Total'], 2) * 100\ntemp_wlr['Moderate'] = round(temp_wlr['Moderate'] \/ temp_wlr['Total'], 2) * 100\ntemp_wlr['Poor'] = round(temp_wlr['Poor'] \/ temp_wlr['Total'], 2) * 100\ntemp_wlr['Very Poor'] = round(temp_wlr['Very Poor'] \/ temp_wlr['Total'], 2) * 100\ntemp_wlr['Severe'] = round(temp_wlr['Severe'] \/ temp_wlr['Total'], 2) * 100\ntemp_wlr['Not Available'] = round(temp_wlr['Not Available'] \/ temp_wlr['Total'], 2) * 100\ntemp_wlr = temp_wlr.drop(['Total'], axis=1)\n\n\n# plot\nmpl.rc_file_defaults()\nplt.rcParams['figure.figsize'] = 20, 10\nplt.rcParams['font.family'] = 'serif'\nplt.rcParams['font.serif'] = 'Ubuntu'\nplt.rcParams['font.monospace'] = 'Ubuntu Mono'\nplt.rcParams['axes.labelweight'] = 'bold'\nplt.rcParams['axes.labelsize'] = 15\nplt.rcParams['xtick.labelsize'] = 12\nplt.rcParams['ytick.labelsize'] = 12\nplt.rcParams['axes.titlesize'] = 15\nplt.rcParams['figure.titlesize'] = 20\nplt.rcParams['figure.titleweight'] = 'bold'\nplt.rcParams['axes.titlelocation'] = 'left'\nplt.rcParams['axes.titleweight'] = 'normal'\nwith plt.style.context('ggplot'):\n    fig, axs = plt.subplots(nrows=2, ncols=1, sharex=True)\n    temp_wmr.apply(lambda x: x*100\/sum(x), axis=1).plot(kind='barh',\n                                                    stacked=True,\n                                                    legend=False,\n                                                    color=['#00b050', '#91cf4f', \"#fefe00\", \"#ffbf00\", \"#fe0000\", \"#bf0000\", \"#737373\"],\n                                                    ax=axs[0])\n    temp_wlr.apply(lambda x: x*100\/sum(x), axis=1).plot(kind='barh',\n                                                    stacked=True,\n                                                    legend=False,\n                                                    color=['#00b050', '#91cf4f', \"#fefe00\", \"#ffbf00\", \"#fe0000\", \"#bf0000\", \"#737373\"],\n                                                    ax=axs[1])\n    axs[0].set_title(f\"Cities with more records\")\n    axs[0].set_ylabel('')\n    axs[1].set_title(f\"Cities with less records\")\n    axs[1].set_ylabel('')\n    fig.text(0.5, 0.04, 'Number of Measurements', ha='center', fontsize=15)\n    fig.suptitle(f\"Overall AQI Classifications per City (2015-2020)\")","58b06872":"# prep data for 3-class categorization\n\ntemp_wmr = temp_wmr.reset_index()\ntemp_wmr['Acceptable'] = temp_wmr['Good'] + temp_wmr['Satisfactory']\ntemp_wmr['Unacceptable'] = temp_wmr['Moderate'] + temp_wmr['Poor'] + temp_wmr['Very Poor'] + temp_wmr['Severe']\ntemp_wmr.sort_values(by='Unacceptable', ascending=False)\n\ntemp_wlr = temp_wlr.reset_index()\ntemp_wlr['Acceptable'] = temp_wlr['Good'] + temp_wlr['Satisfactory']\ntemp_wlr['Unacceptable'] = temp_wlr['Moderate'] + temp_wlr['Poor'] + temp_wlr['Very Poor'] + temp_wlr['Severe']\ntemp_wlr.sort_values(by='Unacceptable', ascending=False)","ce2dc0c7":"# move this func on top later\ndef three_cat_comp(df1, df2):\n    \"\"\" Interactive comparison across 3 categories \"\"\"\n\n    fig = go.Figure()\n    fig = make_subplots(rows=2, cols=1, \n                       subplot_titles=('Cities with more records', 'Cities with less records'))\n    fig.add_trace(go.Bar(\n        x=df1['City'],\n        y=df1['Acceptable'],\n        name='Acceptable levels',\n        marker_color='#00b050',\n    ), row=1, col=1)\n\n    fig.add_trace(go.Bar(\n        x=df1['City'],\n        y=df1['Unacceptable'],\n        name='Unacceptable levels',\n        marker_color='#bf0000',\n    ), row=1, col=1)\n\n    fig.add_trace(go.Bar(\n        x=df1['City'],\n        y=df1['Not Available'],\n        name='Missing Records',\n        marker_color='#737373',\n    ), row=1, col=1)\n    \n    fig.add_trace(go.Bar(\n        x=df2['City'],\n        y=df2['Acceptable'],\n        marker_color='#00b050',\n        showlegend=False,\n    ), row=2, col=1)\n\n    fig.add_trace(go.Bar(\n        x=df2['City'],\n        y=df2['Unacceptable'],\n        marker_color='#bf0000',\n        showlegend=False,\n    ), row=2, col=1)\n\n    fig.add_trace(go.Bar(\n        x=df2['City'],\n        y=df2['Not Available'],\n        marker_color='#737373',\n        showlegend=False,\n    ), row=2, col=1)\n\n    fig.update_layout(template='ggplot2', barmode='group', xaxis_tickangle=-45, title_text='Percentages of AQI Levels per City (2015-2020)',\n                     height=700, width=1000)\n    \n    return fig.show()\n\n# call the function\nthree_cat_comp(temp_wmr, temp_wlr)","141ecfd2":"cd['AQI_Bucket'] = cd['AQI_Bucket'].fillna('Not Available')\n\ndef to_level(x):\n    \"\"\"Converting to a level\"\"\"\n    \n    if(x in ['Good', 'Satisfactory']):\n        return 'Level 1'\n    elif(x in ['Moderate', 'Poor']):\n        return 'Level 2'\n    elif(x in ['Very Poor', 'Severe']):\n        return 'Level 3'\n    elif(x == 'Not Available'):\n        return 'Level 4'\n\ndef window(seq, n=2):\n    '''Source: https:\/\/stackoverflow.com\/questions\/47297585\/building-a-transition-matrix-using-words-in-python-numpy'''\n    \"\"\"Sliding window width n from seq.  From old itertools recipes.\"\"\"\n    \n    it = iter(seq)\n    result = tuple(islice(it, n))\n    if len(result) == n:\n        yield result\n    for elem in it:\n        result = result[1:] + (elem,)\n        yield result\n        \ndef make_trans_mat(states):\n    \"\"\"Make transition probability matrix\"\"\"\n    \n    # get the counts\n    pairs = pd.DataFrame(window(states), columns=['Current', 'Next'])\n    c = pairs.groupby('Current', as_index=False).agg({'Next': 'count'})\n    c.columns = ['Current', 'Total']\n    k = pd.DataFrame(pairs.groupby('Current')['Next'].value_counts())\n    k.columns = ['Count']\n    k = k.reset_index()\n    \n    # calculate probabilities\n    t_mat = pd.merge(k, c)\n    t_mat['Prob'] = t_mat['Count'] \/ t_mat['Total']\n    t_mat = t_mat.pivot(index='Current', columns='Next', values='Prob').fillna(0)\n    \n    return t_mat\n\ndef model_city(city):\n    \"\"\"Build the model for a city\"\"\"\n    \n    # define states\n    t_city = cd[cd['City']==city]\n    t_city['Level'] = t_city['AQI_Bucket'].apply(to_level)\n    \n    # make_trans_mat\n    possible_states = list(t_city['Level'])\n    return make_trans_mat(possible_states)\n\ndef agg_models(cities):\n    \"\"\"Aggregate models\"\"\"\n    \n    # prep data\n    i = 0\n    c_name = cities[i]\n    temp = model_city(cities[i])\n    temp['City'] = c_name\n    for i in range(1, len(cities)):\n        city_df = model_city(cities[i])\n        city_df['City'] = cities[i]\n        temp = pd.concat([temp, city_df])\n        \n    # rename\n    temp = temp[['Level 1', 'Level 2', 'Level 3', 'City']]\n    temp = temp.fillna(0)\n    return temp\n\ndef plot_probs(city_list, level_no, mode='imp'):\n    \"\"\"\n    Plot probs for `cities` to transition into `level no`\n    from any other level\n    \"\"\"\n    \n    nxt = f'Level {level_no}'\n    \n    # aggregate data\n    e = agg_models(city_list).sort_values(by=nxt, ascending=False).reset_index()\n    e = e[(e['Current']!=nxt) & (e['Current']!='Level 4')][['Current', nxt, 'City']]\n\n    # overlook very small probabilities\n    e[nxt] = round(e[nxt], 2)\n    e = e[e[nxt]>0.0]\n    \n    # create the dataframes\n    improvements = e[e['Current']>nxt].reset_index(drop=True)\n    deteriorations = e[e['Current']<nxt].reset_index(drop=True)\n    \n    if(mode=='imp'):\n        return improvements.style.set_caption(f'Improvements to Level {level_no}')\\\n            .background_gradient(cmap='inferno')\n    elif(mode=='det'):\n        return deteriorations.style.set_caption(f'Deteriorations to Level {level_no}')\\\n            .background_gradient(cmap='inferno')","c33fcb96":"# plotting transition probability matrix for Ahmedabad\nmodel_city('Ahmedabad')","587b9d1b":"plot_probs(CITIES_WMR, 2, 'det')","591138c9":"plot_probs(CITIES_WLR, 2, mode='det')","fd75f614":"plot_probs(CITIES_WMR, 3, 'det')","eb20e4a9":"plot_probs(CITIES_WLR, 3, mode='det')","56d44e4e":"plot_probs(CITIES_WMR, 2)","10541a64":"plot_probs(CITIES_WMR, 1)","9573b427":"plot_probs(CITIES_WLR, 2)","bbd7721d":"# convert to datetime\ncd['Date'] = pd.to_datetime(cd['Date'])\n\n# engineer into year, month\ndef ret_yr(x):\n    \n    return (x.strftime(\"%Y\"))\n\ndef ret_mon(x):\n    \n    return (x.strftime(\"%B\"))\n\ncd['Year'] = cd['Date'].apply(ret_yr)\ncd['Month'] = cd['Date'].apply(ret_mon)\n\n# convert to BTX\ncd['BTX'] = cd['Benzene'] + cd['Toluene'] + cd['Xylene']","1ac782a8":"def cnt_acc(series):\n    \n    return (list(series).count('Good') + (list(series).count('Satisfactory')))\n\ndef cnt_unacc(series):\n    \n    return (list(series).count('Moderate') + (list(series).count('Poor')) \n           + list(series).count('Very Poor') + list(series).count('Severe'))\n\ndef cnt_navail(series):\n    \n    return (list(series).count('Not Available'))\n\n# feature engineer\ncd_tot = cd.groupby(['City', 'Year'], as_index=False).agg({'Date':'count'})\ncd_tot.columns = ['City', 'Year', 'Recorded']\ncd_acc = cd.groupby(['City', 'Year'], as_index=False).agg({'AQI_Bucket':cnt_acc})\ncd_acc.columns = ['City', 'Year', 'Acceptable']\ncd_acc = cd_acc.drop(['City', 'Year'], axis=1)\ncd_unacc = cd.groupby(['City', 'Year'], as_index=False).agg({'AQI_Bucket':cnt_unacc})\ncd_unacc.columns = ['City', 'Year', 'Unacceptable']\ncd_unacc = cd_unacc.drop(['City', 'Year'], axis=1)\ncd_navail = cd.groupby(['City', 'Year'], as_index=False).agg({'AQI_Bucket':cnt_navail})\ncd_navail.columns = ['City', 'Year', 'Not Available']\ncd_navail = cd_navail.drop(['City', 'Year'], axis=1)\n\n# filter it\nyr_wise = pd.concat([cd_tot, cd_acc, cd_unacc, cd_navail], axis=1)\nfiltered = ['Ahmedabad', 'Patna', 'Delhi', 'Gurugram', 'Lucknow', 'Kolkata', 'Talcher', 'Guwahati']\nyr_wise_f = yr_wise[yr_wise['City'].isin(filtered)]\n\n# convert to percentages\nyr_wise_f['Acceptable_Percent'] = round((yr_wise_f['Acceptable'] \/ yr_wise_f['Recorded']) * 100, 2)\nyr_wise_f['Unacceptable_Percent'] = round((yr_wise_f['Unacceptable'] \/ yr_wise_f['Recorded']) * 100, 2)\nyr_wise_f['Not_Available_Percent'] = round((yr_wise_f['Not Available'] \/ yr_wise_f['Recorded']) * 100, 2)\n\nyr_wise_f['Year'] = yr_wise_f['Year'].astype('int')","59909c2e":"fig = make_subplots(rows=3, cols=2, subplot_titles=['2015', '2016', '2017', '2018', '2019', '2020'])\n\n# add traces\nyear = yr_wise_f[yr_wise_f['Year']==2015]\nfig.add_trace(\n    go.Scatter(x=year['Unacceptable_Percent'],\n              y=year['Not_Available_Percent'],\n              mode='markers',\n              text=year['City'],\n              marker = dict(\n                  size=15,\n                  color = ['rgb(127,60,141)', 'rgb(17,165,121)', 'rgb(57,105,172)', 'rgb(128,186,90)', 'rgb(230,131,16)'],\n              ),\n              opacity=0.8,\n              showlegend=False),\n    row=1, col=1)\n\nyear = yr_wise_f[yr_wise_f['Year']==2016]\nfig.add_trace(\n    go.Scatter(x=year['Unacceptable_Percent'],\n              y=year['Not_Available_Percent'],\n              mode='markers',\n              text=year['City'],\n              marker = dict(\n                  size=15,\n                  color = ['rgb(127,60,141)', 'rgb(17,165,121)', 'rgb(57,105,172)', 'rgb(128,186,90)', 'rgb(230,131,16)'],\n              ),\n              opacity=0.8,\n              showlegend=False),\n    row=1, col=2)\n\nyear = yr_wise_f[yr_wise_f['Year']==2017]\nfig.add_trace(\n    go.Scatter(x=year['Unacceptable_Percent'],\n              y=year['Not_Available_Percent'],\n              mode='markers',\n              text=year['City'],\n              marker = dict(\n                  size=15,\n                  color = ['rgb(127,60,141)', 'rgb(17,165,121)', 'rgb(57,105,172)', 'rgb(128,186,90)', 'rgb(230,131,16)', 'rgb(249,123,114)'],\n              ),\n              opacity=0.8,\n              showlegend=False),\n    row=2, col=1)\n\nyear = yr_wise_f[yr_wise_f['Year']==2018]\nfig.add_trace(\n    go.Scatter(x=year['Unacceptable_Percent'],\n              y=year['Not_Available_Percent'],\n              mode='markers',\n              text=year['City'],\n              marker = dict(\n                  size=15,\n                  color = ['rgb(127,60,141)', 'rgb(17,165,121)', 'rgb(57,105,172)', 'rgb(231,63,116)', 'rgb(128,186,90)', 'rgb(230,131,16)', 'rgb(249,123,114)'],\n              ),\n              opacity=0.8,\n              showlegend=False),\n    row=2, col=2)\n\nyear = yr_wise_f[yr_wise_f['Year']==2019]\nfig.add_trace(\n    go.Scatter(x=year['Unacceptable_Percent'],\n              y=year['Not_Available_Percent'],\n              mode='markers',\n              text=year['City'],\n              marker = dict(\n                  size=15,\n                  color = ['rgb(127,60,141)', 'rgb(17,165,121)', 'rgb(57,105,172)', 'rgb(242,183,1)', 'rgb(231,63,116)', 'rgb(128,186,90)', 'rgb(230,131,16)', 'rgb(249,123,114)'],\n              ),\n              opacity=0.8,\n              showlegend=False),\n    row=3, col=1)\n\nyear = yr_wise_f[yr_wise_f['Year']==2020]\nfig.add_trace(\n    go.Scatter(x=year['Unacceptable_Percent'],\n              y=year['Not_Available_Percent'],\n              mode='markers',\n              text=year['City'],\n              marker = dict(\n                  size=15,\n                  color = ['rgb(127,60,141)', 'rgb(17,165,121)', 'rgb(57,105,172)', 'rgb(242,183,1)', 'rgb(231,63,116)', 'rgb(128,186,90)', 'rgb(230,131,16)', 'rgb(249,123,114)'],\n              ),\n              opacity=0.8,\n              showlegend=False),\n    row=3, col=2)\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Percentage of Unacceptable AQI Levels\", row=1, col=1, range=[-10,110])\nfig.update_xaxes(title_text=\"Percentage of Unacceptable AQI Levels\", row=1, col=2, range=[-10,110])\nfig.update_xaxes(title_text=\"Percentage of Unacceptable AQI Levels\", row=2, col=1, range=[-10,110])\nfig.update_xaxes(title_text=\"Percentage of Unacceptable AQI Levels\", row=2, col=2, range=[-10,110])\nfig.update_xaxes(title_text=\"Percentage of Unacceptable AQI Levels\", row=3, col=1, range=[-10,110])\nfig.update_xaxes(title_text=\"Percentage of Unacceptable AQI Levels\", row=3, col=2, range=[-10,110])\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Percentage of Indeterminable AQI Levels\", row=1, col=1, range=[-20,110])\nfig.update_yaxes(title_text=\"\", row=1, col=2, range=[-20,110])\nfig.update_yaxes(title_text=\"Percentage of Indeterminable AQI Levels\", row=2, col=1, range=[-20,110])\nfig.update_yaxes(title_text=\"\", row=2, col=2, range=[-20,110])\nfig.update_yaxes(title_text=\"Percentage of Indeterminable AQI Levels\", row=3, col=1, range=[-20,110])\nfig.update_yaxes(title_text=\"\", row=3, col=2, range=[-20,110])\n\nfig.update_layout(template='ggplot2',\n    title={\n        \"text\": \"Unacceptable AQI Levels vs Missing AQI Levels\",\n        \"font\": {\"family\": \"Rockwell\", \"size\": 25},\n        \"xanchor\": \"center\",\n        \"yanchor\": \"top\",\n    },\n    width=900,\n    height=1200,\n)\nfig.show()","5fb1c119":"# filter cities\nfiltered = ['Ahmedabad', 'Patna', 'Delhi', 'Gurugram', 'Lucknow', 'Kolkata', 'Talcher', 'Guwahati']\ncity_f = city[city['name_of_city'].isin(filtered)]\nbubble = pd.merge(\n    left=yr_wise_f,\n    right=city_f,\n    left_on='City',\n    right_on='name_of_city',\n)\n\n# prep data for bubble plot\nbubble = bubble[(bubble['City']!='Guwahati') & (bubble['City']!='Talcher') & (bubble['City']!='Kolkata')]\n# area of each city in sq kms.\nareas = pd.DataFrame({\n    'City': ['Ahmedabad', 'Delhi', 'Gurugram', 'Lucknow', 'Patna'],\n    'Area(km2)': [464, 1484, 732, 349, 136]\n})\nbubble = pd.merge(bubble, areas)\n# per_capita_income\nper_cap_inc = pd.DataFrame({\n    'City': ['Ahmedabad', 'Delhi', 'Gurugram', 'Lucknow', 'Patna'],\n    'Per_Capita_Income(INR)': [173000, 360644, 122000, 71000, 106000]\n})\nbubble = pd.merge(bubble, per_cap_inc)\n\nfig = px.scatter(bubble, x=\"Unacceptable_Percent\", y=\"Not_Available_Percent\", animation_frame=\"Year\", animation_group=\"City\",\n           color=\"City\", hover_name=\"City\", size='Area(km2)', size_max=65, color_discrete_sequence=px.colors.qualitative.G10)\nfig.update_layout(template='ggplot2',\n    title={\n        \"text\": f\"The Five Year Transition of AQI in our Top 5 Cities\",\n        \"font\": {\"family\": \"Rockwell\", \"size\": 25},\n        \"xanchor\": \"center\",\n        \"yanchor\": \"top\",\n    },\n    height=500,\n    xaxis_title='Recorded Days with Unacceptable AQI Levels(%)',\n    yaxis_title='Recorded Days with Indeterminable AQI Levels(%)',\n)\nfig.show()","89d4aed1":"# subset data\ndata = bubble[bubble['Year']==2015]\n\n# comparing cities\nfig = px.scatter(data, x=\"Per_Capita_Income(INR)\", y=\"0-6_population_total\",\n           color=\"City\", hover_name=\"City\", size='Area(km2)', size_max=50, color_discrete_sequence=px.colors.qualitative.G10)\nfig.update_layout(template='ggplot2',\n    title={\n        \"text\": f\"Comparing Cities by Area, Income and Child Population\",\n        \"font\": {\"family\": \"Rockwell\", \"size\": 25},\n        \"xanchor\": \"center\",\n        \"yanchor\": \"top\",\n    },\n    height=500,\n    xaxis_title='Per Capita Income(INR)',\n    yaxis_title='Child Population (0-6 years)',\n)\nfig.show()","96f631b0":"<center><h1>Making every bit count - Where to invest to combat air pollution in India?<\/h1><\/center>\n<center><i>Identifying the cities that require immediate attention to their increasing air pollution<\/i><\/center>\n<br>\n<br>\n<p><i>Snap...pop...crackle...snap...flare...<\/i> - The fire kept modifying its tone as I fed more twigs and leaves into its mouth with the long handle outdoor broom I was holding. I was 10 years old. Along with my grandfather, I was burning all the dry leaves and twigs that were lying on our backyard. It was fun to do it! But, looking back I realise that I was unknowingly contributing to the air pollution problem in India.<br>    \n    <strong>Did my grandfather and I want to pollute the environment? Nope.<\/strong><br>\n    <strong>But were we? Yes.<\/strong><br>\n    Air pollution is an evil, but not necessarily a ploy of bad people. When countries and local industries are fighting for survival, they somehow tend to forget their obligations to the environment. It's not entirely their fault. Hence, I believe the strongest focus to deal with air pollution or any kind of pollution is to not place a ton of sanctions but to provide an alternative way for people to live the lives they dream of.\n<\/p>\nIn this notebook, I make an attempt to understand how investments can be made in order to minimize the effect of air pollution in a city. \n<br>\n<br>\n<strong>NOTE:<\/strong>\nThe work here is my interpretation of the data at hand. The recommendations I will suggest are based on what I find is true through my analysis. They need not necessarily resonate in the same tone with every reader.\n    \n    ","44a1210d":"<div class=\"h2\">Preliminary Analysis<\/div>\n\nIn this section, some preliminary groundwork is performed which will become more relevant as the analysis progresses.","e71243c5":"<div class=\"h3\">How do AQI levels distribute for all cities over the last 5 years?<\/div>","3cf9ce72":"\ud83d\udca1 **INSIGHTS**\n- Ahmedabad has the lowest probability(10%) of showing an improvement to level 2 the next day if it was at level 3 today\n- Other cities that have low probs here are Patna(11%), Lucknow(15%), Delhi(17%) and Gurugram(19%)","e7798471":"\ud83d\udca1 **INSIGHTS**\n\n- Naturally, cities with more records in the data have more stations\n    - Delhi has over 35 stations\n    - Mumbai and Bengaluru rank second with 10 stations\n    - Ahmedabad, Jorapokhar, Visakhapatnam and Amritsar have only 1 station each\n- Amongst the cities in WLR, Kolkata is an outlier. It has 7 stations, while all others in this group only have 1 station\n    - Does this mean Kolkata is not registering enough entries into the database? Is this a possible problem with administration?","ab8b9302":"<div class=\"h2\">Summary<\/div>\n\nIn summary, the three main cities that have been chosen are Ahmedabad, Lucknow and Patna. Ahmedabad is to be given the initial investment for the next 3 years. If this is succesful, investment should go to Lucknow and Patna before any other city in this dataset.  \n\nGurugram needs to be kept under observation for its rapid decline in air quality. However, instead of directly funding to improve air in Gurugram, it would be better to inform the tech giants in Gurugram(almost 50% of Fortune 500 companies have offices here) about the problem. They could tackle the issue as a part of their CSR activities to improve the living standards of their employees.  \n\nThe following slide deck gives a brief view of why the 3 above cities need to be funded. The deck is typically all you need to read, *Potential Investor*.","cd15116a":"![](https:\/\/www.halifax.ca\/sites\/default\/files\/pages\/in-content\/2018-06\/Brush-Burning-HRM.jpg)\n<center><i>But, what if those twigs were being burnt because we needed warmth? Are we still wrong?<\/i><\/center>","235ae5cd":"<div class=\"h2\">Methodology<\/div>\n\nThe following methodology was used in order to tackle the problem at hand. Across these 7 steps, the pool of prospective cities that could be provided the funding was continuously shortened in order to narrow down to the 3 main cities of the 25+ ones at the start.\n\n![](https:\/\/github.com\/ry05\/aqi_project\/blob\/master\/methodology_aqi.png?raw=true)\n\n**Step 1: Understanding the Data**  \nThe 5 .csv datasets(city_day.csv, city_hour.csv, station_day.csv, station_hour.csv and stations.csv) were observed. Possible combinations of these datasets were realised. \n\n**Step 2: Formulate Questions**  \nQuestions other than the ones asked by the task author were formulated. An important idea that emerged from this step was to **not impute missing values**, but rather treat them as **problems with the data collection of a city**.\n\n**Step 3: Analysis on the Basis of Number of Available Records**   \n**Step 4: Modelling Level Transition between Days of a City**  \n**Step 5: Year-wise AQI Change in Cities**  \nThe above 3 steps dealt with analysis on the AQI dataset.\n\n**Step 6: Analysing with Socio-economic Indicators**  \nCombining other kinds of data to make a more rounded judgement of which city should receive the funding.\n\n**Step 7: Design a Rough Plan**  \nDesigning a rough plan suggesting ideas to make improvements in the 3 chosen cities, the use of funds and a method to track progress.  ","0759602e":"In the above visualization, I introduce a new way of classifying the AQI levels in order to simplify viz:\n- If the AQI bucket is Good or Satisfactory, it's put into the **Acceptable** label => Means it does not harm people too much\n- If the AQI bucket is Moderate, Poor, Very Poor or Severe, it's put into the **Unacceptable** label => Means it can cause harm to a healthy population\n- **Missing** is a new label that takes into account the missing or null values of AQI buckets => Missing data is a red flag as it indicates poor administration or faulty apparatus\n\n\n\ud83d\udca1 **INSIGHTS**\n\n- Over the last 5 years, Ahmedabad has had the lowest amount of Acceptable levels, 3rd highest amount of Unacceptable levels and the highest amount in terms of Missing levels in all WMR cities\n    - Other cities that look troubled are Delhi, Gurugram, Patna, Lucknow, Jaipur and Jorapokhar\n- Thiruvananthapuram is a happy outlier in that top bar plot\n- Amongst the WLR cities, Bhopal looks the most troubled\n    - Other cities in WLR that have recorded more Unacceptable days than Acceptable ones are Brajrajnagar and Talcher","e8e53aa1":"<div class=\"h3\">How to measure progress?<\/div>\n\nProgress in Ahmedabad after the first 3 years can be measured based on the following metrics:\n\n- UALP\n    - Unacceptable AQI Level Day Percentage\n    - Investment has been succesful if UALP has declined constantly(atleast by 10%) for the last 3 years(With no increase in IALP by more than 3%)\n    - As of 2019, UALP measures were as follows:\n        - Ahmedabad = 96.44%\n        - Lucknow = 79.45%\n        - Patna = 83.56%\n    - If the plan works, Ahmedabad will see a UALP of atmost 66.44% by 2024. \n- IALP\n    - Indeterminable AQI Level Day Percentage\n    - It is also a responsibility to ensure that IALP never rises above 3% in any of the next 3 years\n- Number of e-carpool cars in each city\n    - Also include a count of number of cab drivers who have switched to e-carpool\n    - Any increase in the proportion of e-vehicles is positive\n    \nThere can definitely be more metrics created from the **Rough Plan** demonstrated before. In a real-world scenario, metrics need to be defined by taking way more parameters into consideration. Hence, I shall stop at these 3 simple metrics.","2b5533ab":"<div class=\"h2\">References<\/div>\n\n### Domain Knowledge References\n1. [Air Pollutants](https:\/\/en.wikipedia.org\/wiki\/Air_pollution#Pollutants)\n2. [UNEP Monitoring Air Quality](https:\/\/www.unep.org\/explore-topics\/air\/what-we-do\/monitoring-air-quality)\n3. [UNEP's Air Programme](https:\/\/www.unep.org\/explore-topics\/air)\n4. [UNEP's 2016 report on \"Actions on Air Quality\"](https:\/\/www.unenvironment.org\/resources\/assessment\/actions-air-quality?_ga=2.209423066.934997296.1598950157-760778986.1598950157)\n5. [UNEP's Air Programme](https:\/\/www.unep.org\/explore-topics\/air)\n6. [Ministry of Environment, Forestry and Climate Change - Govt. of India](http:\/\/moef.gov.in\/environment\/pollution\/)\n\n### Kaggle Kernels for Inspiration\n1. https:\/\/www.kaggle.com\/romandovega\/chaieda-air-quality-in-india-eda-using-tableau \n2. https:\/\/www.kaggle.com\/parulpandey\/breathe-india-covid-19-effect-on-pollution\n3. https:\/\/www.kaggle.com\/rohanrao\/calculating-aqi-air-quality-index-tutorial","0c242ea6":"<div class=\"h3\">Which cities are under the radar as of now?<\/div>\n\nWith the analysis so far, a few cities have emerged as potential recipients of the monetary funding to improve their state. These are =>\n- Ahmedabad: A very high percentage of the days it has registered measurements show unacceptable AQI levels\n- Delhi: Same as Ahmedabad. Also, it's highly discussed in national and international media\n- Kolkata: *The more stations, but less number of records* phenomenon puts Kolkata under scrutiny for poor administration\n- Other cities that make it to this list are \n    - Gurugram\n    - Patna\n    - Lucknow\n    - Jaipur\n    - Jorapokhar\n    - Bhopal\n    - Brajrajnagar\n    - Talcher","470ac33f":"### The Idea\nThe AQI levels for a city is not uniform throughout the last 5 years. Sometimes, the level has been bad for human respiration and at other times, harmless. However, what if we hypothesized that the **AQI level of a city on day d depends on the AQI level of the same city on day (d-1)**. This does follow the Markovian property (though it is not completely based on it).  \n\nAQI of a city on any given day is a result of several factors like:\n- The population\n- The vehicles on the road\n- The industries\n- and others...\n\nMost of these factors will be common between days. Hence, if a particular city on a given day is on a given AQI level, there is a high chance it would remain in the same the next day. This helps to know a city is **bad** if this level is bad. But, it tells nothing about the **volatility of a city's AQI level**. Simply put, we want an ideal city that can change into an AQI level the next day if it has a bad one today. \n\n### The Method\n1. Convert the AQI levels in the dataset into 4 levels\n    - Good and Satisfactory => Level 1\n    - Moderate and Poor => Level 2\n    - Very Poor and severe => Level 3\n    - Not Available => Level 4\n2. Create a transition matrix showing the probability of a day in a city to change to a Level i if it i's currently in Level j\n3. Order the cities based on the probability for each city to transition from one level i to the next level j\n    - If i > j, it is an improvement\n    - If i < j, it is a deterioration\n4. Cities that have high probabbilities of deterioration and low probabilities of improvement are the ones that need most focus\n\n### An Example\nHere is an example to make the above idea more clearer in practice.","13ed4d8d":"For a nuts and bolts understanding of how the analysis was conducted, **please read on.**","59f682b8":"Based on the analysis so far, **Ahmedabad** is the city that should receive the initial funding for 3 years. This is because of the findings in the Level Transition Diagram-based approach that indicates Ahmedabad to have constantly deteriorating air quality and long periods of bad air quality and very little subsequent natural improvement. \n\n**Lucknow and Patna** are to be the 2 cities that should be funded if the funding to Ahmedabad is successful. This is because of the relative importance to these regions due to low income and high child population. \n\n**Why not Gurugram \u2753** \nGurugram has shown steep decline, no doubt. However, **it's a city with a larger area**. Moreover, being one of the fastest growing areas in the country the amount required to perform any kind of improvement or initiative to curb air pollution **will most likely be significantly higher**. Since there is such a doubt cast, Gurugram has been excluded from this top 3 list.\n\n**Why not Delhi \u2753**\nSame reasons as that for Gurugram. But, in addition to that **Delhi's air pollution problem is internationally discussed**. Everybody is talking about it already. Therefore, it will probably receive funding from other sources. It is the other cities that are only placed in \"lists of most polluted cities\" and see little media visibility that require funding to improve the lives of its citizens.","05d358c5":"<div class=\"h2\">Analysis<\/div>","c659c511":"<div class=\"h3\">Using a State Transition Idea to Prioritize Cities based on Air Pollution Levels<\/div>\n\nFrom above, we have 11 cities that make it into the list of cities we need to consider for monetary investment. What we need next is a way to filter these cities into 3 main cities. In this section, I discuss one approach: Modelling the Pollution in a City as a State(or Level) Transition diagram.","ea559d67":"\ud83d\udca1 **INSIGHTS**\n- The most records a city in the given dataset has is 2009\n- 12 out of the 26 cities have total day-wise records for 2015-2020 which is lesser than the maximum number of records available for a city i.e 2009 for Mumbai, Delhi, Lucknow, Chennai, Bengaluru, Ahmedabad, Hyderabad\n- I have considered a 50% threshold of 2009 to divide the cities into WMR and WLR\n    - WMR: With More Records (In blue)\n    - WLR: With Less Records (In grey)\n- Why do the WLR states have low records?\n    - Hypothesis 1: Maybe they don't have the resources\n    - Hypothesis 2: Maybe they are not prioritized by AQI\n- Cities with low records may or may not be crossed out for investment on the basis of whether\n    - They have low records because they are clean and safe\n    - They have low records because they are not efficiently monitored","e061f979":"The above transition probability matrix can be visualized as follows:\n\n<center><img src=\"https:\/\/github.com\/ry05\/aqi_project\/blob\/master\/ahmedabad_transition.png?raw=true\" width=\"900\" height=\"700\"><\/center>\n<center><i>Credits: Author<\/i><\/center>\n<br>\n\nIt shows that if a given day in Ahmedabad has an AQI classification lying in Level 2, there is a 21% chance for the next day to have a classification in Level 3(deterioration probability). And the probability for the next day to be Level 1(improvement probability) is as low as 2%!","cfe7e47c":"\ud83d\udca1 **INSIGHTS**\n\n* As the years progress, a general trend sees the cities move towards the bottom right.\n    * The bottom right is a region with high UALP and low IALP\n    * This indicates that data collection has in general become better for these cities over the given time period\n    * The year 2017 is an outlier in the sense that both Ahmedabad and Patna have shown a higher IALP measure than what they did have in 2016. Especially, Patna with a rise of about 50% from 2016 in the IALP. This however is restored to 1% in 2018. This does cast reasonable doubt.\n* The following states are removed from this list of 8 states for the following reasons:\n    * Talcher => It has a population of around 40,000 only which is way lesser than the other cities. So, a fair comparison is not possible\n    * Guwahati => Data available only for 2019 and 2020\n    * Kolkata => Data available for only 2018,2019 and 2020\n\n**NOTE:** In an earlier statement, I had cast doubt on Kolkata's administration because of the lower number of records inspite of having more stations in place. This could be because Kolkata has only begun registering records since 2018(3 years lesser than the time for most other cities in this data)\n\nThe above visualization does provide insights. But, a more improve way of seeing a pattern would be using a bubble chart with only the 5 top cities (Ahmedabad, Delhi, Patna, Gurugram and Lucknow) in consideration.","95d1f4ce":"\ud83d\udca1 **INSIGHTS**\n\n- In a general look, it is evident that 'Cities with less records' have measured more Good or Satisfactory classifications than the 'Cities with more records'.\n- In the first set, Thiruvananthapuram registered the highest percentage of it's daily measurements as of 2015-2020 as \"Good\" or \"Satisfactory\". Ahmedabad on the other hand has less than 5% of it's entries from 2015-2020 under the positive category(Good or Satisfactory).\n- Ahmedabad also has close to 35% of it's entries under the 'Not Available' status.","8ccdb162":"**NOTE:** Size of the point represents geographical area of the city.\n\n\ud83d\udca1 **INSIGHTS**\n\n* Run the visualization first and keep your eyes on Gurugram\n    - Notice how Gurugram travels the farthest diagonal path to get from **High IALP-Low UALP region** to **Low IALP-High UALP region**\n    - This shows how Gurugram is getting worse faster than other cities\n    - This might be attributed to Gurugram's quick growth as [India's fastest growing IT Tech Region](https:\/\/ceoworld.biz\/2016\/12\/02\/indias-top-12-tech-cities-digital-indian-cities-survey-2016\/)\n* Ahmedabad starts 2015 with an IALP of about 28%, but in the next 2 years it records back to back increases in IALP measures to 68% and 81%. From 2018 however, it has stayed below 4%.\n    - The increase of IALP in 2016 and 2017 is however a point to note\n    - Because of the high IALP measures, the low UALP values don't have significance for these couple of years in Ahmedabad\n* Delhi has had very good data collection practices in place, the highest IALP it registered was only 2.47% and it came in 2017\n    - It started of with UALP of 99.73% in 2015\n    - After a series of fluctuations, it is currently at 86.34% in 2020\n* Patna has recorded oscillations similar to Ahmedabad\n* Lucknow has shown a sharp dive in UALP in 2020 compared to 2019. But, 2020 is not over! So, any change or pattern observed in 2020 from 2019 is not to be conclusive","69f6c187":"\ud83d\udca1 **INSIGHTS**\n- Jorapokhar has the highest probability of all cities in WMR to transition into Level 2 from Level 1 (34%)\n- It is followed by Patna(32%), Delhi(28%), Gurugram(25%), Jaipur(23%) and Ahmedabad(23%) [Top 5]","c9fde775":"\ud83d\udca1 **INSIGHTS**\n- Guwahati has a 12% probability of going into level 3 the next day if its at level 2 today\n- Talcher is second with a 5% probability","ee88ec02":"**NOTE:** Size of the point represents geographical area of the city.\n\n\n\ud83d\udca1 **INSIGHTS**\n\n* Delhi has the highest child population, but also the largest per capita income. In fact, Delhi is an outlier in this 5 city group!\n* Ahmedabad has already been identified as a highly polluted city w.r.t the **State\/Level Transition Diagram** analysis before\n    - In the above bubble plot, it can also be noticed that Ahmedabad has a high child population value\n* The other 3 cities are of specific interest\n* Lucknow is a city with a higher child population and lower per capita income than Patna and Gurugram. This makes it a *region of urgency*(relative to these 5 cities)\n* Patna is between Lucknow and Gurugram in terms of the two factors considered here\n* Gurugram has been noticed to have a sharp decline in AQI w.r.t to the other cities in previos analysis. However, it has a very low count of child population and a higher per capita income than the Patna and Lucknow\n\n","a009a59c":"<div class=\"h2\">Introduction<\/div>\n\nThis notebook is a submission to the [Where to deploy resources in India to combat air pollution](https:\/\/www.kaggle.com\/rohanrao\/air-quality-data-in-india\/tasks?taskId=1877) hosted by [@romandovega](https:\/\/www.kaggle.com\/romandovega) on the [Air Quality Data in India](https:\/\/www.kaggle.com\/rohanrao\/air-quality-data-in-india) dataset compiled by [@rohanrao](https:\/\/www.kaggle.com\/rohanrao).  \n\nIn a crux, the task requires a submission that would convince a rich uncle to provide monetary investment to improve the quality of air in a given city. The necessity is to tie up all loose ends with data-based evidence and also present a rough plan as to how things must be done and also how progress can be measured. A maximum of 3 cities can be chosen from the prospective list of 25+ cities present in the dataset at the time of this analysis.","c8562516":"<div class=\"h3\">Not all cities have the same number of days measured !<\/div>\n\nIf we are going to compare cities, the comparison must ideally be between cities with comparable size of records. However, some cities have more records while others have far less. Therefore, it was necessary to take this into consideration while building the case.","df5a27ea":"<div class=\"h3\">Unacceptable AQI Levels and Indeterminable AQI Levels - New metrics?<\/div>\n<br>\n\nFrom a previous classification, there were 2 categories =>\n* Acceptable (Good and Satisfactory AQI levels)\n* Unacceptable (Moderate, Poor, Very Poor and Severe levels)\n* Not Available (Missing AQI levels)\n\n**NOTE:** The **Not Available** classification is better called as **Indeterminable** levels. It means that even if data is collected for individual pollutant levels, the collected data did not conform to the requirements to generate a final AQI bucket for the day.\n\n\n\ud83d\udd0d **METRICS CREATED**\n\nFor this section, two key metrics are used:\n* `Unacceptable AQI Level Percentage`(UALP) = (`Number of Unacceptable AQI Levels` \/ `Number of Records`) * 100\n* `Indeterminable AQI Level Percentage`(IALP) = (`Number of Indeterminable AQI Levels` \/ `Number of Records`) * 100\n\n`Record` => A record is registered when there is an entry for a given day in the dataset. A record for a given day does not indicate that the day has a determinable AQI level.\n\n\nIdeally, a city that is high priority on the AQI index will have a high UALP. Having a high IALP indicates problems with the data collection of the city.","6481f1dd":"\ud83d\udca1 **INSIGHTS**\n- Ahmedabad has the lowest probability(2%) of showing an improvement to level 1 the next day if it was at level 2 today\n- Other cities that have low probs here are Delhi(5%), Hyderabad(6%), Chennai(6%), Gurugram(7%) and Patna(8%)","99f9ddd1":"\ud83d\udca1 **INSIGHTS**\n- Only 5% of all entries recorded have an AQI that would inflict no harm on any section of the demography\n- Categories Poor, Very Poor and Severe (i.e the ones that are capable of harming healthy people) contribute to around 1\/5th of all entries\n- 16% of all entries have missing AQI levels!","bab3d15e":"<div class=\"h2\">India's National Air Quality Index<\/div>\n\nIndia's National Air Quality Index programme was put into effect in the year 2015 as a step to monitor the air quality in the country. It was initially started in 14 cities and later extended to 34 ([Source](http:\/\/moef.gov.in\/environment\/pollution\/)).  \n\nAs per the AQI classification, any AQI measure can fall into a particular bucket. This bucket is represented by \n\n![](https:\/\/i.imgur.com\/XmnE0rT.png)\n<center><i>Source: Calculating AQI Tutorial by Rohan Rao<\/i><\/center>\n<br>\n\nFurther information on how AQI is calculated is provided in detail, with code by Rohan Rao in his [notebook](https:\/\/www.kaggle.com\/rohanrao\/calculating-aqi-air-quality-index-tutorial).  ","a08bad9c":"\ud83d\udca1 **INSIGHTS**\n- Kolkata has the lowest probability(11%) of showing an improvement to level 2 the next day if it was at level 3 today amongst the WLR cities\n- Talcher follows with 17%","ee4c994b":"\ud83d\udca1 **INSIGHTS**\n- Amongst WLR cities, Brajrajnagar(22%) and Talcher(20%) are the top 2 cities in terms of deteriorations to level 2","899d35d6":"<div class=\"h3\">Which cities are under the radar now?<\/div>\n\nAs seen in all the analyses of the previous sections, **Ahmedabad** is a **high-priority city** when it comes to AQI. It has the highest probabilities to deteriorate from one level to the other (5th highest for level 1=>level2 and highest for level2=>level3). It also has the lowest probabilities to improve from one level to another.\n\nTherefore, Ahmedabad is most likely the city that requires the initial monetary funding to improve its pollution.  \n\nOther cities that are still under consideration for the second and third spots are =>\n- Patna\n- Delhi\n- Gurugram\n- Lucknow\n- Kolkata\n- Talcher\n- Guwahati","43ea8e4d":"<div class=\"h2\">Rough Plan to Use the Investment<\/div>\n\nThis section draws focus on some of the opportunities that the investment can be used for in order to improve the state of air quality in Ahmedabad, Lucknow and Patna. There are 3 main kinds of areas where I feel the funding can be applied:\n\n![](https:\/\/github.com\/ry05\/aqi_project\/blob\/master\/where_to_invest.png?raw=true)\n\n## Invest in Clean Technology\n\n**Clean technology** is any process, product or service that reduces negative environmental impacts through significant energy efficiency improvements, the sustainable use of resources, or environmental protection activities.([Source](https:\/\/en.wikipedia.org\/wiki\/Clean_technology)). A couple of ways the *uncle* could invest his money would be to\n\n- Set up a Money-lending firm or bank\n    - Provide low-interest loans for people to convert their vehicles into CNG-run from petrol-run or diesel-run\n    - Provide incentives to those who are willing to give away their old fuel-driven vehicles and switch to electric-vehicles. The extra money could be used by the family for a purpose like long-term deposits for children\n- Launch an Electric Carpool Startup*ask \n    - The traditional carpool system with only electric cars\n    - Provide free rides and offers to attract people\n    - This can generate livelihood for cab-drivers without causing pollution to the environment\n    - Autorickshaw drivers can be targetted and brought into the revolution as [here](https:\/\/bengaluru.citizenmatters.in\/e-rickshaws-air-pollution-bengaluru-policy-transport-28136#:~:text=According%20to%20it%2C%20in%20a,sector%20is%200.44%20million%20tonne.)\n    - Under this startup, more solar-powered battery charge stations for any e-vehicle can be setup. This is important, sans this everything else fails\n\n## Invest in Community-driven Change\n\nInitiatives fail because people are not ready to accept it. People are not ready to accept because most initiatives and ideas are brought into effect without a public study or social research. Therefore, investment has to be put into creating an organization that would **ask people questions** and **act on their responses**. Basically, bring about effective change in existing behaviour of citizens, by involving them as key stakeholders in any relevant policy decision.\n\n- Ask the Right Questions\n    - Use social surveys to collect data\n    - Make data open, but maintain ethical standards\n    - Understand the *why* behind behaviours\n        - Why do people not change their polluting vehicles?\n        - Why do people not adhere to government regulations?\n        - Why do people not want to carpool?\n        - Is their cultural relevance to how people's lifestyles are?\n- Make People Responsible\n    - Involve local communities like for example, an apartment locality\n    - Make people take initiative, rather than wait for govt. policy\n\n## Invest in Making Connections\n\nAlone, it will be difficult to make a change. So, its important to form the right partnerships. Develop plans with corporations to help out as part of their CSR. Create accountability by keeping all transactions open and public. ","19505a19":"\ud83d\udca1 **INSIGHTS**\n- Ahmedabad has the highest(20%) chance of deteriorating to Level 3 the next day if it was at Level 2 today\n- It's followed by Delhi(12%), Gurugram(12%), Lucknow(9%) and Patna(8%)","06e2ade1":"Hope it was a good read! Thank you ;)","0daf0d88":"With the above insights provided by the **State Transition Idea**, we now can quantify the priority of each city involved more definitively.","16a63f87":"<div class=\"h3\">Comparing our top 5 cities on the basis of socio-economic factors<\/div>\n\nThe analysis has so far focused on the specific AQI data available. However, to choose the most relevant cities to be provided the monetary investment, there is a need for comparing the filtered citites across other indicators. For this purpose, I am comparing the cities across 2 other indicators:\n* Per Capita Income of the City(In INR)\n* Population of Children under 6 years in the City\n\n\ud83d\udcda **RELEVANCE OF THESE METRICS**\n\nDirect consequences of air pollution are respiratory troubles and health disorders. Naturally, treating health issues is an expenditure. These treatments can at times be extra costs(or burden) on families that are not well off. Therefore, the **per capita income of a city** is a factor in deciding which city needs the investment to reduce air pollution and subsequently decrease medical expenditure due to respiratory problems.\n\nChildren are the most vulnerable of all age groups. Also, children have always been the most protected groups across human civilization. It is also a fact that children spend time outdoors playing games with their friends and tend to be in direct contact with air more. Therefore, cities with a larger **child population(under 6 years)** are to be given some consideration.\n\nFinally, cities with low per capita income and high child population is to be given a very high priority as these fall under a *region of urgency*. \n\n\ud83d\udcbe **SOURCE OF DATA**\n\nThe two indicators used in this section have been compiled from the following sources:\n\n* Population of Children under 6 years in the City => [Top 500 Indian Cities - Based on 2011 Census](https:\/\/www.kaggle.com\/zed9941\/top-500-indian-cities)\n* Per Capita Income of the City(INR) => \n    - Compiled manually from multiple sources\n    - Ahmedabad: https:\/\/www.prsindia.org\/sites\/default\/files\/budget_files\/State%20Budget%20Analysis%20-%20Gujarat%202020-21_Final.pdf\n    - Delhi: https:\/\/www.prsindia.org\/sites\/default\/files\/budget_files\/Delhi%20Budget%20Analysis%20-%202019-20.pdf\n    - Gurgaon: https:\/\/economictimes.indiatimes.com\/work-career\/best-cities-to-move-into-if-you-are-starting-a-new-career\/gurgaon\/slideshow\/55224194.cms\n    - Patna: https:\/\/patna.nic.in\/economy\/#:~:text=As%20of%202015%2C%20GDP%20per,rate%20is%207.29%20per%20cent.\n    - Lucknow: https:\/\/www.hindustantimes.com\/lucknow\/kasganj-s-per-capita-gdp-fourth-highest-in-uttar-pradesh\/story-8tSlU6yrjAeF9H92835X5I.html\n    \n\u2757 **DISCLOSURE**\n\nThe data above has been collected through multiple different sources as there was no single source to get this from. There is some difference between the years when each city's per capita income was collected was collected. However, this difference is not more than 3 years with Patna's being the earliest at 2015 and Ahmedabad's the latest at 2017-18.","0ef5c9ee":"In the visualization below, each subplot represents a year. The idea of the visualization is to show the transition of each of the 8 cities across the UALP and IALP measures for the last 6 years.\n\nUALP is on the X Axis and IALP is on the Y Axis."}}