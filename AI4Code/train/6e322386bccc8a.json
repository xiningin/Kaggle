{"cell_type":{"8336b037":"code","8d40a11a":"code","e0e554a0":"code","9f56553e":"code","80a010ea":"code","bee649d6":"code","540af13b":"code","18919652":"code","3b71f17e":"code","bd311134":"markdown","82c61576":"markdown","3301d828":"markdown","4b866fbf":"markdown"},"source":{"8336b037":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8d40a11a":"game_data = pd.read_csv(r'\/kaggle\/input\/european-football-database-20192020\/E0.csv')\ngame_data","e0e554a0":"# removing extraneous data - just want to start with win rate analysis. Will do other info later\n\nwin_data = game_data[['Date','HomeTeam','AwayTeam', 'FTHG', 'FTAG','FTR']]\nwin_data","9f56553e":"# Adjusting the info to make the upcoming steps simpler\n\npd.set_option('mode.chained_assignment', None)\nwin_data['HomeWin'] = win_data['FTR'].apply(lambda x: 1 if x is 'H' else 0)\nwin_data['HomeLoss'] = win_data['FTR'].apply(lambda x: 1 if x is 'A' else 0)\nwin_data['HomeDraw'] = win_data['FTR'].apply(lambda x: 1 if x is 'D' else 0)\n\nwin_data['AwayWin'] = win_data['FTR'].apply(lambda x: 1 if x is 'A' else 0)\nwin_data['AwayLoss'] = win_data['FTR'].apply(lambda x: 1 if x is 'H' else 0)\nwin_data['AwayDraw'] = win_data['FTR'].apply(lambda x: 1 if x is 'D' else 0)\n# win_data = win_data[['Date','HomeTeam', 'AwayTeam', 'HomeWin', 'HomeLoss','HomeDraw']]\nwin_data = win_data.drop('FTR', axis=1)\nwin_data","80a010ea":"# splitting data for before and after break\npreCOVID = win_data.iloc[:288]\npostCOVID = win_data.iloc[288:]","bee649d6":"# as of 02\/07\/2020\n\ntable = win_data.groupby('HomeTeam').agg({'HomeTeam': 'count', 'FTHG': 'mean', 'FTAG' : 'mean', 'HomeWin' : 'sum', 'HomeDraw' : 'sum', 'HomeLoss' : 'sum'})\naway = win_data.groupby('AwayTeam').agg({'AwayTeam': 'count', 'FTAG': 'mean', 'FTHG' : 'mean', 'AwayWin' : 'sum', 'AwayDraw' : 'sum', 'AwayLoss' : 'sum'})\ntable = pd.concat([table,away], axis=1)\ntable['Points'] = table['HomeWin']*3 + table['HomeDraw']*1 + table['AwayWin']*3 + table['AwayDraw']*1\ntable = table.sort_values('Points', ascending = False)\ntable","540af13b":"# pre-COVID break\npd.options.display.float_format = '{:,.1f}'.format\n\ndata = preCOVID.groupby('HomeTeam').agg({'HomeTeam': 'count', 'FTHG': 'mean', 'FTAG' : 'mean', 'HomeWin' : 'sum', 'HomeDraw' : 'sum', 'HomeLoss' : 'sum'})\ndata.columns = ['# pre-COVID matches', 'Ave. Goals For', 'Ave. Goals Against', 'Won', 'Drawn', 'Lost']\n\ndata['WinRate'] = data['Won']\/data['# pre-COVID matches'] * 100\ndata = data.sort_values('WinRate', ascending = False)\n\n# post-COVID break\npd.options.display.float_format = '{:,.1f}'.format\n\ndata2 = postCOVID.groupby('HomeTeam').agg({'HomeTeam': 'count', 'FTHG': 'mean', 'FTAG' : 'mean', 'HomeWin' : 'sum', 'HomeDraw' : 'sum', 'HomeLoss' : 'sum'})\ndata2.columns = ['# post-COVID matches', 'Ave. Goals For', 'Ave. Goals Against', 'Won', 'Drawn', 'Lost']\n\ndata2['WinRate'] = data2['Won']\/data2['# post-COVID matches'] * 100\ndata2 = data2.sort_values('WinRate', ascending = False)\n\nhome = pd.concat([data,data2], axis=1)\nhome","18919652":"# checking the Liverpool result because I thought something went wrong - they haven't lost a single home game!\nliverpool = win_data[win_data['HomeTeam'] == 'Liverpool']\nliverpool","3b71f17e":"# pre-COVID\n\npd.options.display.float_format = '{:,.1f}'.format\n\ndata3 = preCOVID.groupby('AwayTeam').agg({'AwayTeam': 'count', 'FTAG': 'mean', 'FTHG' : 'mean', 'AwayWin' : 'sum', 'AwayDraw' : 'sum', 'AwayLoss' : 'sum'})\ndata3.columns = ['# pre-COVID matches', 'Ave. Goals For', 'Ave. Goals Against', 'Won', 'Drawn', 'Lost']\n\ndata3['WinRate'] = data3['Won']\/data3['# pre-COVID matches'] * 100\ndata3 = data3.sort_values('WinRate', ascending = False)\n\n# post-COVID break\n\ndata4 = postCOVID.groupby('AwayTeam').agg({'AwayTeam': 'count', 'FTAG': 'mean', 'FTHG' : 'mean', 'AwayWin' : 'sum', 'AwayDraw' : 'sum', 'AwayLoss' : 'sum'})\ndata4.columns = ['# post-COVID matches', 'Ave. Goals For', 'Ave. Goals Against', 'Won', 'Drawn', 'Lost']\n\ndata4['WinRate'] = data4['Won']\/data4['# post-COVID matches'] * 100\ndata4 = data4.sort_values('WinRate', ascending = False)\n\naway = pd.concat([data3,data4], axis=1)\naway","bd311134":"# Current Table","82c61576":"# Home Stats","3301d828":"# Away Stats","4b866fbf":"![Image](https:\/\/www.telegraph.co.uk\/content\/dam\/football\/2019\/08\/12\/TELEMMGLPICT000206209364_trans%2B%2BK3Ytq28vYzV8vgytz3tt20cdhPuOVqLHI0GKTHeusDU.jpeg)\n# Are teams playing worse?  \nA friend commented on the fact that the quality of play seemed much worse since the league has resumed, and says a big effect must be the lack of fans watching live in the stadium (i.e. the 12th player). It's hard to find a specific causal link, so I'll just explore the difference in play before and after the COVID-enforced break on the EPL.  \n\nThere aren't enough post-COVID games yet to make conclusions, though this notebook will be updated as games are played. The league resumed earlier in the Bundesliga so there is enough data to start making conclusions - I'd recommend looking at that notebook till more EPL games are played: (https:\/\/www.kaggle.com\/adityadesai13\/effect-of-covid-19-on-bundesliga-team-performance)."}}