{"cell_type":{"b52fb754":"code","7339be15":"code","29c6c11f":"code","de41e38c":"code","0650a8fc":"code","aa4c04b8":"code","7a018ed8":"code","5ddd401f":"code","8cfce7fc":"code","474a750f":"code","0f72abc4":"code","07c022a0":"code","d7b39965":"markdown","918baf71":"markdown","e3f50fba":"markdown","b6d704aa":"markdown","888b6451":"markdown","1c4f743f":"markdown","c07f1011":"markdown"},"source":{"b52fb754":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7339be15":"# import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","29c6c11f":"#import data\ndata = pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\ndata.head()","de41e38c":"data[\"class\"] = [1 if i==\"Abnormal\" else 0 for i in data[\"class\"]]\ndata.head()","0650a8fc":"malign = data[data[\"class\"]==1]\nbenign = data[data[\"class\"]==0]\n\nplt.scatter(malign.pelvic_incidence, malign.degree_spondylolisthesis, color=\"red\", label=\"malign\")\nplt.scatter(benign.pelvic_incidence, benign.degree_spondylolisthesis, color=\"green\", label=\"benign\")\nplt.legend()\nplt.xlabel(\"sacral_slope\")\nplt.ylabel(\"pelvic_radius\")\nplt.show()","aa4c04b8":"y = data[\"class\"].values\nx_data = data.drop([\"class\"],axis=1)","7a018ed8":"# normalization\nx = (x_data - np.min(x_data)) \/ (np.max(x_data) - np.min(x_data))","5ddd401f":"# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","8cfce7fc":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(x_train,y_train)","474a750f":"print(\"K=3 score : {}\".format(knn.score(x_test,y_test)))","0f72abc4":"score_list = []\nfor k in range(1,25):\n    knn2 = KNeighborsClassifier(n_neighbors = k)\n    knn2.fit(x_train, y_train)\n    score_list.append(knn2.score(x_test,y_test))\nprint(\"k = {} and max score : {}\".format(score_list.index(max(score_list)), max(score_list)))","07c022a0":"#show the accuracy values with diffrent K values\n\nplt.plot(range(1,25),score_list)\nplt.xlabel(\"K values\")\nplt.ylabel(\"Accuracy\")\nplt.show()","d7b39965":"* I choose the number K to be 3\n* and print the score\n\n* but I don't know is this accuracy the best","918baf71":"* we have to find best K value \n* we try some k values with for loop then choose the best one","e3f50fba":"- The class columns contain Abnormal and Normal. \n- I want to change this to 1 or 0.","b6d704aa":"* We completed the data processing\n\n* Now we can create the KNN model :\n\n* first of all import the model\n* than create a model which is knn ( n_neighbours => this is K number)\n* and the last step is fit the model with x_train and y_train","888b6451":"* I create x and y data but x data not normalized so \u0131 will normalize x data after \u0131 select","1c4f743f":"* I want to show you some data parts that are malign and benign","c07f1011":"* and I separate the data into x and y"}}