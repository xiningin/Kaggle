{"cell_type":{"9eba29f2":"code","1b519cd0":"code","d41a2bca":"code","d1e38570":"code","85ee5aaf":"code","f99655ee":"code","11e93e74":"code","43b2cd95":"code","82563bbb":"code","c534d348":"code","19005531":"code","f450c444":"code","01e1373a":"code","dd92e26d":"code","a9642f27":"code","02dda2e2":"code","8e3d9bf8":"code","66739845":"code","f46658d7":"code","2f565120":"code","4b5c960e":"code","2761e44c":"code","19e6ebf4":"code","0ffb30c9":"code","f5e577f8":"code","d718060b":"code","04fa9842":"code","973ade0f":"code","0b7b7c3f":"code","149664db":"code","dd7444b9":"code","0f382a1c":"code","a585fda6":"code","79a01870":"code","cb453692":"code","f533aff2":"code","81f77186":"code","5394e32d":"code","baf13506":"code","6b9957d5":"code","f14cd79a":"code","9117a5ca":"code","aff870a6":"code","889c22b5":"code","639fa389":"code","e79cb376":"code","0450a559":"code","9acefdf4":"code","b62c18df":"code","e1e8faa9":"code","ee810f9d":"code","f35be490":"code","86908d8e":"code","9507e131":"code","2ff08393":"code","5ecca47e":"code","429973b6":"code","a4dbde70":"code","68a46b8f":"code","9f0b01af":"code","0379a113":"code","e7a079a4":"code","2cc3d1dc":"code","b6939101":"code","916cbc18":"code","dea34f96":"code","e2388f33":"code","1cc84a96":"code","8beae5e2":"code","c8558389":"code","f8e498d3":"code","b1476ecf":"code","13fd47ea":"code","302a510f":"code","7bac8bba":"code","f8c87603":"code","e73470c2":"code","209d86a5":"code","0ece7c2a":"code","450bec77":"code","2403bb90":"code","0c82f316":"code","51135da5":"code","9deb1299":"code","466c0c9a":"code","7ff215f4":"code","1b10e905":"code","93ba6b6b":"markdown","0360a267":"markdown","2f890c4c":"markdown","5d89368e":"markdown","eb742db8":"markdown","80855052":"markdown","191f4a99":"markdown","a0971afc":"markdown","44fa6b98":"markdown","89bf2e50":"markdown","232f175e":"markdown","e72135b7":"markdown","4f33d73c":"markdown","4f471cfd":"markdown","15286de4":"markdown","860b4ad0":"markdown","0ca8ff89":"markdown","47a2ae87":"markdown"},"source":{"9eba29f2":"import numpy as np ","1b519cd0":"# Simple Example : we will create list then transform it to Numpy array \nexample_list = [1,2,3]\nexample_list","d41a2bca":"np.array(example_list)","d1e38570":"nested_list = [[1,2,3],[4,5,6]]\nnested_list","85ee5aaf":"np.array(nested_list)","f99655ee":"# Use arange function to generate NumPy array that contain integers within specific range \nnp.arange(1,10)","11e93e74":"# Additional parameter to arange function (step Parameter)\nnp.arange(0,10,2)","43b2cd95":"#generate vector of zeros \nnp.zeros(3)","82563bbb":"#generate 2D array of zeros \nnp.zeros((4,5))","c534d348":"#generate vector of ones \nnp.ones(3)","19005531":"#generate 2D array of ones\nnp.ones((4,5))","f450c444":"# using linspace to generate elements with equal distance between them\n\nnp.linspace(0,15,4) # third parameter here is the number of elements you want ","01e1373a":"# linspace can generate float numbers \nnp.linspace(0,7,10)","dd92e26d":"# generate 2D matrix with eye function ( generate a matrix with 1 on diagonal , 0 otherwise )\nnp.eye(5)","a9642f27":"# get array of random values from Uniform distribution \nnp.random.rand(5)","02dda2e2":"# 2D array example \nnp.random.rand(3,3)","8e3d9bf8":"# get array of random values from Standard Normal distribution \nnp.random.randn(5)","66739845":"np.random.randn(3,3)","f46658d7":"# generate random integer in specific range\nnp.random.randint(1,10)","2f565120":"# generate array of random integers in specific range\nnp.random.randint(1,15,4)","4b5c960e":"# generate 2D array of random integers in specific range\nnp.random.randint(1,20,(3,4))","2761e44c":"# Must give seed the same number everytime you run the code to ensure that your code is reproducible\nnp.random.seed(42)\n# unlike the above cells , if you run this cells multiple times you'll get the same results \nnp.random.rand(5)","19e6ebf4":"arr = np.arange(1,11)\narr","0ffb30c9":"# get the shape of array using shape attribute \narr.shape","f5e577f8":"# you can reshape the array to any other shape that have the same number of elements \n# example : arr have 10 elements can be reshaped to arr of shape (2,5) and arr of shape (5,2)\narr.reshape(2,5)","d718060b":"# if you want to reshape the array in its place you can reassign the above function to the variable arr \narr = arr.reshape(2,5)","04fa9842":"arr","973ade0f":"random_arr = np.random.randint(0,30,10)","0b7b7c3f":"random_arr","149664db":"# get maximum of array \nrandom_arr.max()","dd7444b9":"# get index of the maximum value in array \nrandom_arr.argmax()","0f382a1c":"# get minimum value in array \nrandom_arr.min()","a585fda6":"# get index of minimum value in array \nrandom_arr.argmin()","79a01870":"# get the datatype of your array \nrandom_arr.dtype","cb453692":"# repeat given element (or elements) for fixed number of times \nnp.repeat(5,3)","f533aff2":"arr = np.arange(0,11)","81f77186":"arr","5394e32d":"# Select a single value \narr[3]","baf13506":"# Indexing start with 0 , so first element will be in arr[0]\narr[0]","6b9957d5":"# Select multiple values from array \narr[1:4]","f14cd79a":"# Select from beginning of array to specific index \narr[:6]","9117a5ca":"# Select from specific index to the last element of array \narr[5:]","aff870a6":"# Assign single value \narr[2] = -1 ","889c22b5":"arr","639fa389":"# Assign value to multiple array indexes\narr[2:5] = 100 ","e79cb376":"arr","0450a559":"# let's try slicing \nslice_arr = arr[1:5]","9acefdf4":"slice_arr","b62c18df":"# Assign values to all elements of numpy array \nslice_arr[:] = 10","e1e8faa9":"slice_arr","ee810f9d":"arr","f35be490":"slice_arr = arr[1:5].copy()","86908d8e":"slice_arr[:] = -1 ","9507e131":"slice_arr","2ff08393":"arr","5ecca47e":"# 2D array example\narr_2d = np.array([[1,2,3],[4,5,6],[7,8,9]])","429973b6":"arr_2d","a4dbde70":"arr_2d.shape","68a46b8f":"# get the third row in arr_2d\n\narr_2d[2]","9f0b01af":"# to access single value in 2d array you should give 2 indexes , 1 for row and 1 for column \n\narr_2d[1][1]","0379a113":"# another way to get single value \n\narr_2d[1,1]","e7a079a4":"# get more than 1 row \n\narr_2d[:2]","2cc3d1dc":"# get more than 1 row with specific columns included \n\narr_2d[:2,1]","b6939101":"arr = np.arange(1,15)","916cbc18":"arr","dea34f96":"# Try simple condition \narr>5","e2388f33":"# let's select elements based on the previous condition , it should return elements which match the condition only \n\ncondition = arr>5\narr[condition]","1cc84a96":"# another example \narr[arr>10]","8beae5e2":"arr = np.arange(0,10)","c8558389":"arr","f8e498d3":"# adding number to array \narr + 5","b1476ecf":"# subtracting number to array \narr - 3","13fd47ea":"# multiply array by itself \narr * arr","302a510f":"# minus array from itself \narr - arr ","7bac8bba":"# square root of array \nnp.sqrt(arr)","f8c87603":"# sin of array \nnp.sin(arr)","e73470c2":"# log of array \nnp.log(arr)","209d86a5":"# get sum of array \narr.sum()","0ece7c2a":"# get mean of array \narr.mean()","450bec77":"# variance of array \narr.var()","2403bb90":"# standard deviation of array \narr.std()","0c82f316":"arr_2d = np.arange(0,25).reshape(5,5)","51135da5":"arr_2d.shape","9deb1299":"arr_2d","466c0c9a":"# total sum of array \narr_2d.sum()","7ff215f4":"# sum of each row in the array \narr_2d.sum(axis=1)","1b10e905":"# sum of each column in the array \narr_2d.sum(axis=0)","93ba6b6b":"you will notice that the update in slice_arr affects the values in arr because both of them point to the same array","0360a267":"first we will discuss transforming of lists to numpy arrays ","2f890c4c":"<a id=\"intro3\"><\/a>\n# Indexing and Selection ","5d89368e":"<a id=\"intro4\"><\/a>\n# NumPy Operations","eb742db8":"We can create a NumPy ndarray object by using the array() function","80855052":"Generate Random arrays ","191f4a99":"<a id=\"intro\"><\/a>\n# NumPy Arrays ","a0971afc":"Conditional Selection : select values with specific conditions ","44fa6b98":"**In This Notebook we will discuss NumPy Package , one of the most used python packages in data science and machine learning .**\n![](https:\/\/en.wikipedia.org\/wiki\/NumPy#\/media\/File:NumPy_logo_2020.svg)","89bf2e50":"problem of using random is that everytime you run the code you get different results , to solve this problem we will use \nseed function ","232f175e":"# Numpy Package Basics\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">NumPy Arrays <\/a><\/li>\n<li><a href=\"#intro2\">Some NumPy Array Attributes and Methods <\/a><\/li>\n<li><a href=\"#intro3\">Indexing and Selection <\/a><\/li>\n<li><a href=\"#intro4\">NumPy Operations <\/a><\/li>\n<\/ul>","e72135b7":"<a id=\"intro2\"><\/a>\n# Some NumPy Array Attributes and Methods ","4f33d73c":"you can notice that this time arr didn't get the update we do in slice_arr","4f471cfd":"To overcome this problem you can get a copy of arr in slice_arr and then update the values ","15286de4":"There are many ways to generate arrays in Numpy , we will discuss some of them ","860b4ad0":"first we import numpy package ","0ca8ff89":"we can try the same for multi dimensional data (nested lists) ","47a2ae87":"Summary functions on array "}}