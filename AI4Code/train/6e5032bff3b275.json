{"cell_type":{"d198c48f":"code","16f280c2":"code","aa3475cf":"code","99f8d10b":"code","6835dcab":"code","e8fef4e8":"code","b3f4d06f":"code","b5dc864e":"code","7ecff60c":"code","a744849c":"code","a51f0540":"code","29815017":"code","e64d23b7":"code","de9879a4":"code","38e25f60":"code","14d2479b":"code","c211b32c":"code","003f0235":"code","58ed515c":"code","328f2922":"code","d06491db":"code","db572e95":"code","eb8113f4":"code","9fe325bb":"code","6665c5ce":"code","2e33075e":"code","4ed35a35":"code","d8fd4c5e":"code","e9f13ea6":"code","e0055910":"code","ac85149b":"markdown","dbdca3a1":"markdown","bfdd2934":"markdown","602e804d":"markdown","5f8164b2":"markdown","c02c130d":"markdown","70e1f398":"markdown","1799c7f6":"markdown","7e372daf":"markdown","65f76580":"markdown","c653c3e4":"markdown","f196ac6b":"markdown","62c099d5":"markdown","d2e9d7de":"markdown","1d925abe":"markdown","178be9ef":"markdown","06cc38ce":"markdown","93d98710":"markdown","27dc4883":"markdown"},"source":{"d198c48f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16f280c2":"seattle_weather=pd.read_csv('\/kaggle\/input\/seattle_weather (1).csv')\naustin_weather=pd.read_csv('\/kaggle\/input\/austin_weather.csv')","aa3475cf":"plt.figure(figsize=(50,50))\n# Create a Figure and an Axes with plt.subplots\nfig, ax = plt.subplots()\nax.plot(seattle_weather[\"DATE\"], seattle_weather[\"MLY-PRCP-NORMAL\"],label='Seattle',marker=\"o\",linestyle=\"None\")\nax.plot(austin_weather[\"DATE\"], austin_weather[\"MLY-PRCP-NORMAL\"],label='Austin',marker=\"v\")\n\n# Customize the x-axis label\nax.set_xlabel(\"Time (months)\")\n\n# Customize the y-axis label\nax.set_ylabel(\"Precipitation (inches)\")\n\n# Add the title\nax.set_title(\"Weather patterns in Austin and Seattle\")\nax.legend()\n# Display the figure\nplt.show()","99f8d10b":"plt.figure(figsize=(50,50))\n# Create a Figure and an Axes with plt.subplots\nfig, ax = plt.subplots()\nax.hist(seattle_weather[\"MLY-PRCP-NORMAL\"],label='Seattle',bins=20)\nax.hist(austin_weather[\"MLY-PRCP-NORMAL\"],label='Austin',bins=20)\n\n# Customize the x-axis label\nax.set_xlabel(\"Precipitation Total in (inches)\")\n\n# Customize the y-axis label\nax.set_ylabel(\"Number of times in year\")\n\n# Add the title\nax.set_title(\"Weather patterns in Austin and Seattle\")\nax.legend()\n# Display the figure\nplt.show()","6835dcab":"plt.figure(figsize=(100,50))\n# Create a Figure and an Axes with plt.subplots\nfig, ax = plt.subplots(2,1)\nax[0].hist(seattle_weather[\"MLY-PRCP-NORMAL\"],label='Seattle',bins=20)\nax[1].hist(austin_weather[\"MLY-PRCP-NORMAL\"],label='Austin',bins=20,color=\"r\")\n\n# Customize the x-axis label\nax[1].set_xlabel(\"Precipitation Total in (inches)\")\n\n# Customize the y-axis label\nax[0].set_ylabel(\"Frequency over year\")\nax[1].set_ylabel(\"Frequency over year\")\n\n# Add the title\nax[0].set_title(\"Weather patterns in Austin and Seattle\")\nax[0].legend()\nax[1].legend()\n# Display the figure\nplt.show()","e8fef4e8":"climate_change=pd.read_csv('\/kaggle\/input\/climate_change.csv',parse_dates=True, index_col='date')","b3f4d06f":"fig,ax=plt.subplots()\nplt.figure(figsize=(60,60))\nax.plot(climate_change.index,climate_change['relative_temp'])\nax.set_xlabel(\"Time\")\nax.set_ylabel(\"Relative Temp over years\")\nplt.show()","b5dc864e":"fig,ax=plt.subplots()\nplt.figure(figsize=(60,60))\nTwentyFirstCentuary=climate_change['2010-01-01':'2020-12-31']\nax.plot(TwentyFirstCentuary.index,TwentyFirstCentuary['relative_temp'])\nax.set_xlabel(\"Time(years in decade)\")\nax.set_ylabel(\"Relative Temp over years\")\nplt.show()","7ecff60c":"fig,ax=plt.subplots()\nplt.figure(figsize=(60,60))\nTwentySixteen=climate_change['2016-01-01':'2016-12-31']\nax.plot(TwentySixteen.index,TwentySixteen['relative_temp'],marker=\"v\",color='r')\nax.set_xlabel(\"Time(months)\")\nax.set_ylabel(\"Relative Temp over years\")\nplt.show()","a744849c":"fig,ax=plt.subplots()\nplt.figure(figsize=(60,60))\nax.plot(climate_change.index,climate_change['relative_temp'],color='b')\nax2=ax.twinx()\nax2.plot(climate_change.index,climate_change['co2'],color='r')\nax.set_xlabel(\"Time\")\nax.set_ylabel(\"Relative Temp over years\",color='b')\nax.tick_params('y',colors='b')\nax2.set_ylabel(\"Co2 over years\",color='r')\nax2.tick_params('y',colors='r')\nplt.show()","a51f0540":"def plotTimeSeriesData(axes,x,y,xlabel,ylabel,color_name):\n    axes.plot(x,y,color=color_name)\n    axes.set_xlabel(xlabel)\n    axes.set_ylabel(ylabel,color=color_name)\n    axes.tick_params('y',colors=color_name)    ","29815017":"fig,ax=plt.subplots()\nplt.figure(figsize=(60,60))\nplotTimeSeriesData(ax,climate_change.index,climate_change['relative_temp'],'Time',\"Relative Temp over years\",'b')\nax2=ax.twinx()\nplotTimeSeriesData(ax2,climate_change.index,climate_change['co2'],'Time',\"co2 over years\",'r')","e64d23b7":"fig,ax=plt.subplots()\nplt.figure(figsize=(60,60))\nplotTimeSeriesData(ax,climate_change.index,climate_change['relative_temp'],'Time',\"Relative Temp over years\",'b')\nax2=ax.twinx()\nplotTimeSeriesData(ax2,climate_change.index,climate_change['co2'],'Time',\"co2 over years\",'r')\nax.annotate(\">1 degree\", xytext=(pd.Timestamp('2008-10-06'),-0.2), xy=(pd.Timestamp('2015-10-06'),1), arrowprops={\"arrowstyle\":\"->\",\"color\":\"gray\"})\nplt.show()","de9879a4":"# Index_Col =0 means treat first column in the csv file as index\nmedals=pd.read_csv('\/kaggle\/input\/medals_by_country_2016.csv',index_col=0)","38e25f60":"fig,ax=plt.subplots()\nplt.figure(figsize=(50,50))\nax.bar(medals.index,medals[\"Gold\"])\nax.set_xlabel('Countries wise')\nax.set_ylabel('Number of Gold medals')\nplt.show()","14d2479b":"# ax.set_xticklabel(label vlaues,rotation=in degrees), used to rotate the labels by user mentioned angle\nfig,ax=plt.subplots()\nplt.figure(figsize=(50,50))\nax.bar(medals.index,medals[\"Gold\"])\nax.set_xticklabels(medals.index,rotation=90)\nax.set_xlabel('Countries wise')\nax.set_ylabel('Number of Gold medals')\nplt.show()","c211b32c":"fig,ax=plt.subplots()\nplt.figure(figsize=(50,50))\nax.bar(medals.index,medals[\"Gold\"],label=\"Gold\")\nax.bar(medals.index,medals[\"Silver\"],bottom=medals['Gold'],label='Silver')\nax.bar(medals.index,medals[\"Bronze\"], bottom=medals['Gold']+medals['Silver'], label=\"Bronze\")\nax.set_xticklabels(medals.index,rotation=90)\nax.set_xlabel('Countries wise')\nax.set_ylabel('Number of Gold medals')\nax.legend()\nplt.show()","003f0235":"mens_rowing=pd.read_csv('\/kaggle\/input\/summer2016.csv')\nfig,ax=plt.subplots()\nplt.figure(figsize=(50,50))\nax.bar(\"Rowing\",mens_rowing[\"Height\"].mean(),yerr=mens_rowing[\"Height\"].std())\nplt.show()","58ed515c":"plt.style.use(\"default\")\nfig, ax = plt.subplots()\n\n# Add Seattle temperature data in each month with error bars\nax.errorbar(seattle_weather[\"DATE\"],seattle_weather[\"MLY-TAVG-NORMAL\"],yerr=seattle_weather[\"MLY-TAVG-STDDEV\"])\nax.errorbar(austin_weather[\"DATE\"],austin_weather[\"MLY-TAVG-NORMAL\"], yerr=austin_weather[\"MLY-TAVG-STDDEV\"])\nax.set_ylabel(\"Temperature (Fahrenheit)\")\n\nplt.show()\n","328f2922":"fig,ax=plt.subplots()\nax.hist(mens_rowing['Height'])\n\nax.set_xlabel('Height')\nax.set_ylabel('Frequency')\nax.legend()\nplt.show()","d06491db":"fig,ax=plt.subplots()\nax.hist(mens_rowing['Height'],histtype=\"step\")#Histtype=step will create a graph of hollow lines\n\nax.set_xlabel('Height')\nax.set_ylabel('Frequency')\nax.legend()\nplt.show()","db572e95":"mens_gymnastics=mens_rowing[mens_rowing[\"Sport\"]==\"Gymnastics\"]","eb8113f4":"mens_rowings=mens_rowing[mens_rowing[\"Sport\"]==\"Rowing\"]","9fe325bb":"fig,ax=plt.subplots()\nax.boxplot([mens_rowing['Height'],mens_gymnastics[\"Height\"]])\nax.set_xticklabels([\"Rowing\",\"Gymnastics\"])\nax.set_ylabel(\"Height(cm)\")\nplt.show()","6665c5ce":"fig,ax=plt.subplots()\nax.scatter(climate_change[\"co2\"],climate_change[\"relative_temp\"])\nax.set_xlabel(\"CO2(ppm)\")\nax.set_ylabel(\"Relative temperature (Celsius)\")\nplt.show()","2e33075e":"eighties=climate_change[\"1980-01-01\": \"1989-12-31\"]\nnineties=climate_change[\"1990-01-01\": \"1999-12-31\"]\nfig,ax=plt.subplots()\nax.scatter(eighties['co2'],eighties['relative_temp'],color=\"red\",label=\"eighties\")\nax.scatter(nineties['co2'],nineties['relative_temp'],color=\"blue\",label=\"nineties\")\nax.legend()\nax.set_xlabel(\"Co2(ppm)\")\nax.set_ylabel(\"Relative temperature (Celsius)\")\nplt.show()","4ed35a35":"# Plot style\n# We can change style of the plot by using plt.style.use(\"Name of the style\")","d8fd4c5e":"plt.style.use(\"bmh\")\neighties=climate_change[\"1980-01-01\": \"1989-12-31\"]\nnineties=climate_change[\"1990-01-01\": \"1999-12-31\"]\nfig,ax=plt.subplots()\nax.scatter(eighties['co2'],eighties['relative_temp'],color=\"red\",label=\"eighties\")\nax.scatter(nineties['co2'],nineties['relative_temp'],color=\"blue\",label=\"nineties\")\nax.legend()\nax.set_xlabel(\"Co2(ppm)\")\nax.set_ylabel(\"Relative temperature (Celsius)\")\nplt.show()","e9f13ea6":"# TO save figure we can use fig.savefig('Name required')","e0055910":"plt.style.use(\"bmh\")\neighties=climate_change[\"1980-01-01\": \"1989-12-31\"]\nnineties=climate_change[\"1990-01-01\": \"1999-12-31\"]\nfig,ax=plt.subplots()\nax.scatter(eighties['co2'],eighties['relative_temp'],color=\"red\",label=\"eighties\")\nax.scatter(nineties['co2'],nineties['relative_temp'],color=\"blue\",label=\"nineties\")\nax.legend()\nax.set_xlabel(\"Co2(ppm)\")\nax.set_ylabel(\"Relative temperature (Celsius)\")\nplt.show()\nfig.savefig(\"co.png\")","ac85149b":"# ax.hist(value,label,bins(number of divisions),histtype=step(creates a hollow line\")) \n# By Default bins =10 ","dbdca3a1":"We can even write a function for the above visualization to make the code reusable","bfdd2934":"## Line indicates the median height\n## median (Q2\/50th Percentile): the middle value of the dataset.\n## first quartile (Q1\/25th Percentile): the middle number between the smallest number (not the \u201cminimum\u201d) and the median of the dataset.\n## third quartile (Q3\/75th Percentile): the middle value between the median and the highest value (not the \u201cmaximum\u201d) of the dataset.\n## interquartile range (IQR): 25th to the 75th percentile.\n## whiskers (shown in blue)\n## outliers (shown as green circles)\n## \u201cmaximum\u201d: Q3 + 1.5*IQR\n## \u201cminimum\u201d: Q1 -1.5*IQR\n![image.png](attachment:image.png)\n","602e804d":"# Histogram\n### Shows entire distribution of values","5f8164b2":"## The above image shows that the relative temprature rises from 0 deg to around 1.25 deg in between year 2010 to 2020","c02c130d":"1. ax.plot (x,y,label=\"\",marker=\"0\",linestyle=\"\",color=\"\")\n\n#label = Tells the name to be used for the data plotted , mainly used to diffrentiate data when multiple plots are in one graph\n#marker = Tells how the plotting points will look like , for Exmaple:- \"o\" will make a circle and \"v\" will created a inverted triangle as shown in below graph\n#linestyle : It specify how we want the line to look like\n           # For Example: \"--\" for dashed line\n                         #\"solid\" for solid line\n                         #\"None\" for no line only\n#color : Specifies the color we want to use for plotting ","70e1f398":"## For loading time series data into data frame we need to set few arguments in read_csv()\n### parse_dates = True means the dates will be treated as date format rather than strings\n### index_col = in this we will specify the column we want to treat as date type","1799c7f6":"# Plotting time series with different variables\n    # Important function used:\n    1) ax.twinx() : This means the x-axis remain same when we plot 2 different variable in same graph\n    2) ax.tick_params ('x'\/'y', colors=color_to_be_used)","7e372daf":"Now as we can see the highest relative temperature so far is recorded in year 2016, we can even also find out in which month the temperature was highest by reducing the time frame taken into consideration","65f76580":"# Scatter Plots","c653c3e4":"# Bar Charts","f196ac6b":"Annotate a plot of time series data, annotate() used when we want to point out to some data points\n    axes.annotate(comment_To_mention,xy=position where we want to point,xytext= postion where we want our text to be placed in the graph ,arrowprops={defines arrow style to be used})","62c099d5":"## Now we are plotting data that will reflect relative temperature over time","d2e9d7de":"# Adding Error Bar to Bar Charts","1d925abe":"#fig, ax = plt.subplots(x,y,sharey=True\/False) x : Number of rows , y= Number of columns\n#sharey : True means y axis is divided equally incase of subplots and False  means y-axis is not evenly divided\n","178be9ef":"# Plotting Time Series Data","06cc38ce":"# Stacked Bar charts\n### Used when we want to display multiple data into a single chart","93d98710":"![image.png](attachment:image.png)","27dc4883":"# Box Plots"}}