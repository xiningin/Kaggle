{"cell_type":{"5e36ae2c":"code","0c11920f":"code","566f766a":"code","846ba39a":"code","b135b4c1":"code","0d7c5936":"code","74a40608":"code","21f9591b":"code","f80a7295":"code","def649b1":"code","feb5a401":"code","19eec2a7":"code","ebbcd349":"code","fe21944c":"code","9f9c4149":"code","b56160b0":"code","93416d24":"code","46211706":"code","42396fc9":"code","748f0fde":"code","0c30a224":"code","98714350":"code","f04c0809":"code","936d3082":"code","86dfb176":"code","51cfbe8e":"code","612f2cbc":"code","e679b331":"code","11826288":"code","189c6328":"code","ac8b0102":"code","c1492c92":"code","e6175b86":"code","69799875":"code","ceb4c16d":"code","9136e070":"code","f1c182e6":"code","ea92844d":"code","97d664d0":"code","ba3a8e3e":"code","27452b12":"code","2bb0945a":"code","22c2464b":"code","20ba6a94":"code","2cbc129a":"code","4ce55b1a":"code","8c58cfcb":"code","f4a9aef3":"code","9f0f5f50":"code","670e4cd2":"code","d9e58d7f":"markdown"},"source":{"5e36ae2c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c11920f":"df=pd.read_csv(\"\/kaggle\/input\/regression2020\/r2.csv\")","566f766a":"df\n","846ba39a":"y=df.btech","b135b4c1":"x=df.loc[:,['Tenth','twelve']]","0d7c5936":"x","74a40608":"model = LinearRegression().fit(x, y)","21f9591b":"print(x)","f80a7295":"x.to_numpy().reshape(-1,1)","def649b1":"x1=x.squeeze() ","feb5a401":"type(x1)","19eec2a7":"model = LinearRegression().fit(x, y)","ebbcd349":" pip install openpyxl xlsxwriter xlrd","fe21944c":"fd=pd.read_excel(\"\/kaggle\/input\/fish-data\/fish_data.xlsx\")","9f9c4149":"fd","b56160b0":"bs=pd.read_excel(\"\/kaggle\/input\/beer-sales\/beer_sales.xlsx\")","93416d24":"hd=pd.read_csv(\"\/kaggle\/input\/housedata\/data.csv\")","46211706":"y=hd.price","42396fc9":"X=hd.iloc[:,2:13]","748f0fde":"X.info()","0c30a224":"df=pd.DataFrame({\"R2 values\":[1]})","98714350":"l=[]\n","f04c0809":"for i in range(1,150):\n    from sklearn.model_selection import train_test_split\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)\n    model = LinearRegression().fit(X_train, y_train)\n    r2=model.score(X_train, y_train)\n    print(r2)\n    l.append(r2)\n    py=model.predict(X_test)\n    df1=pd.DataFrame({\"Actual\":y_test,\"Predicted\":py})\n    ","936d3082":"df1.to_csv(\"test33pred.csv\")","86dfb176":"df=pd.DataFrame({\"R2 values\":l})\ndf","51cfbe8e":"df.to_csv(\"test33.csv\")","612f2cbc":"X_train","e679b331":"import numpy as np\nfrom sklearn.linear_model import LinearRegression\n","11826288":"model = LinearRegression().fit(X_train, y_train)","189c6328":"r2=model.score(X_train, y_train)\nprint(r2)","ac8b0102":"hp.info()","c1492c92":"train=hp.iloc[0:4000]","e6175b86":"test=hp.iloc[4000:4600]","69799875":"train_y=train.price\ntest_y=test.price","ceb4c16d":"train_y","9136e070":"train_x=train.iloc[:,1:13]\ntest_x=test.iloc[:,1:13]","f1c182e6":"train_x.info()","ea92844d":"model = LinearRegression().fit(train_x, train_y)","97d664d0":"r2=model.score(train_x, train_y)\nprint(r2)","ba3a8e3e":"r2test=model.score(test_x, test_y)\nprint(r2test)","27452b12":"train_x","2bb0945a":"train_x.info()","22c2464b":"train_x1=train_x.iloc[:,[0,1,2,3,4,7,8]]\ntest_x1=test_x.iloc[:,[0,1,2,3,4,7,8]]","20ba6a94":"train_x1.info()","2cbc129a":"model1 = LinearRegression().fit(train_x1, train_y)","4ce55b1a":"r2=model1.score(train_x1, train_y)\nprint(r2)","8c58cfcb":"r2=model1.score(test_x1, test_y)\nprint(r2)","f4a9aef3":"cd=pd.read_excel(\"\/kaggle\/input\/concrete-comprehensive-strength\/Concrete_Data.xls\")","9f0f5f50":"cd.info()","670e4cd2":"cd.head()","d9e58d7f":"**\/kaggle\/input\/concrete-comprehensive-strength\/Concrete_Data.xls**\n"}}