{"cell_type":{"b301aacf":"code","ce816b0d":"code","088a3ed0":"code","e0581a8a":"code","b541880b":"code","95cb1fe0":"code","6842b4f9":"code","fa7e3bcb":"code","047ddee6":"code","44d6f9fb":"code","35da706e":"code","aec541a1":"code","27b1e20f":"code","c82e908b":"code","6d939ab2":"code","d0471897":"code","0698451f":"code","d076bd7d":"code","b7ef0d3a":"code","51360bd5":"code","1f99e9ae":"code","0ecf82b4":"code","9d6f53bf":"code","af6dc364":"code","62c20a83":"code","626ea3ca":"code","b0521a61":"code","5ab362a3":"code","c9a3d395":"code","c21c5197":"code","863baac7":"code","fcab44ae":"code","89a70630":"code","a2269741":"code","4e78978c":"code","387720f0":"code","cfb0294c":"markdown","38533b9a":"markdown","bae7d4db":"markdown","6ed5f0c9":"markdown","5dbb758f":"markdown","8a946591":"markdown","8eb86aa4":"markdown"},"source":{"b301aacf":"import pandas as pd\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import datasets, linear_model, preprocessing, svm\nfrom sklearn.preprocessing import StandardScaler, Normalizer\nimport math\nimport matplotlib\nimport seaborn as sns\nimport os\nfrom textwrap import wrap\n#import ML packages\nfrom sklearn.linear_model import LinearRegression\nfrom scipy.stats import linregress\n\n\n%matplotlib inline","ce816b0d":"print(os.listdir('..\/input\/'))","088a3ed0":"df1 = pd.read_csv('..\/input\/tc20171021.csv', error_bad_lines = False)#, sep=',', header=0)#, encoding='cp1252')","e0581a8a":"df1.sample(10)","b541880b":"df1.describe()","95cb1fe0":"df1.Make.value_counts()","6842b4f9":"df1['YearsOld'] = 2018-df1.Year","fa7e3bcb":"#df1 = df1[df1.YearsOld >= 5]","047ddee6":"groupped = df1.groupby('Model').size().reset_index().rename(columns={0: 'count'})\nfew = groupped[groupped['count'] < 5]\n#df1 = df1[~df1.Model.isin(few.Model)]","44d6f9fb":"(groupped['count'] < 5).value_counts()","35da706e":"groupped = df1.groupby('Model')\ngroupped = groupped.apply(lambda x: x.YearsOld.max() - x.YearsOld.min()).reset_index().rename(columns={0: 'Span'})\nfew = groupped[groupped['Span'] < 5]\n#df1 = df1[~df1.Model.isin(few.Model)]","aec541a1":"(groupped['Span'] < 5).value_counts()","27b1e20f":"groupped = df1.groupby('Model')\ngroupped = groupped.apply(lambda x: x.YearsOld.min()).reset_index().rename(columns={0: 'Youngest'})\nfew = groupped[groupped['Youngest'] > 10]\n#df1 = df1[~df1.Model.isin(few.Model)]","c82e908b":"(groupped['Youngest'] > 10).value_counts()","6d939ab2":"df1.isnull().sum()","d0471897":"df1[df1.Make == \"Jeep\"].Model.value_counts()","0698451f":"def fit(df): \n    GrpYr = plotme.groupby('YearsOld')\n    Quint50 = GrpYr.quantile(0.5).reset_index()#GrpYr.median().reset_index()\n    Quint10 = GrpYr.quantile(0.1).reset_index()\n    Quint90 = GrpYr.quantile(0.90).reset_index()\n    \n    Y = Quint50[['Price']].values#df[['Price']].values\n    X = Quint50[['YearsOld']].values#df[['YearsOld']].values\n    \n    return ((X*Y).mean(axis=1) - X.mean()*Y.mean(axis=1)) \/ ((X**2).mean() - (X.mean())**2)","d076bd7d":"def model(df):\n    GrpYr = plotme.groupby('YearsOld')\n    Quint50 = GrpYr.quantile(0.5).reset_index()#GrpYr.median().reset_index()\n    Quint10 = GrpYr.quantile(0.1).reset_index()\n    Quint90 = GrpYr.quantile(0.90).reset_index()\n    \n    y = Quint50[['Price']].values#df[['Price']].values\n    X = Quint50[['YearsOld']].values#df[['YearsOld']].values\n    \n    fit = LinearRegression(fit_intercept=False).fit(X, y)\n    \n    return [np.squeeze(fit.coef_)]#,fit.predict(0)]\n\ndef group_predictions(df, date):\n    date = pd.to_datetime(date)\n    df.date = pd.to_datetime(df.date)\n\n    day = np.timedelta64(1, 'D')\n    mn = df.date.min()\n    df['date_delta'] = df.date.sub(mn).div(day)\n\n    dd = (date - mn) \/ day\n\n    return df.groupby('group').apply(model, delta=dd)","b7ef0d3a":"df = pd.DataFrame({'A': 'a a b'.split(), 'B': [1,2,3], 'C': [4,6, 5], 'D': [21,22,23]})\nprint(df.head())\ng = df.groupby('A')\ng.apply(lambda x: [x.C.max() - x.B.min(),4])","51360bd5":"df = pd.DataFrame(np.random.rand(5,5), columns=list('ABCDE'))\nprint(df.head())\nf = {'B':['prod'], 'D': lambda g: df.loc[g.index].E.sum()}\n\ndf.groupby('A').agg(f)","1f99e9ae":"df = pd.DataFrame({'A': 'a a b'.split(), 'B': [1,2,3], 'C': [4,20, 5], 'D' : ['1','1','3']})\nprint(df.head())\ng = df.groupby(['D','A'])\ng.apply(lambda x: linregress(x.C.values,x.B.values).slope)","0ecf82b4":"df1.head()","9d6f53bf":"MMGrp = df1.groupby(['Make','Model'])\n\n#f = {'B':['prod'], 'D': lambda g: df.loc[g.index].E.sum()}\nf = {'Price': [lambda x: linregress(df1.loc[x.index].YearsOld,x).slope,'count'], 'YearsOld' : ['min']}\n\nMMdf = MMGrp.agg(f)\n\n#MMdf = MMGrp.apply(lambda x: linregress(x.YearsOld.values,x.Price.values).slope).reset_index().rename(columns={0: 'dpdy'})\nMMdf.head()","af6dc364":"bm = MMdf['YearsOld']['min']<=10\nbm.value_counts()","62c20a83":"MMdf['Price']['<lambda>']","626ea3ca":"MMdf.dropna(inplace = True)\n\n#MMdf.rename(columns={0: 'd$\/d(year)'})\n\nprint('Gain Value Over Time: %d' % (len(MMdf.index) - len(MMdf[MMdf['Price']['<lambda>'] < 0].index)))\n\nMMdf = MMdf[MMdf['Price']['<lambda>'] < 0]\n\nMMdf.head()","b0521a61":"MMdf.sort_values(by = ('Price','<lambda>'),ascending = False).head(500)","5ab362a3":"MMdf.reset_index(inplace = True)","c9a3d395":"MMdf[MMdf['Make']=='Jeep']","c21c5197":"out = MMdf.to_csv('MMdf.csv')\nprint(out)","863baac7":"def plotQuints(plotme, ShowAll = False):\n    plt.figure(figsize=(20,10),facecolor='white')\n    \n    \n    GrpYr = plotme.groupby('YearsOld')\n    Quint50 = GrpYr.quantile(0.5).reset_index()#GrpYr.median().reset_index()\n    Quint10 = GrpYr.quantile(0.1).reset_index()\n    Quint90 = GrpYr.quantile(0.90).reset_index()\n    \n    if ShowAll: plt.plot(plotme.Year,plotme.Price,'.k', label = 'All Data')\n\n    plt.plot(Quint50.Year,Quint50.Price,'or', label = 'Median')\n    plt.plot(Quint10.Year,Quint10.Price,'-g', label = '10th quintile')\n    plt.plot(Quint90.Year,Quint90.Price,'-y', label = '90th quintile')\n    \n    wrapLength = 200\n    \n    plt.title('Make(s): ' + \"\\n\".join(wrap(\", \".join(plotme.Make.unique()),wrapLength)) + \"\\n Model(s): \" + \"\\n\".join(wrap(\", \".join(plotme.Model.unique()),wrapLength)))\n    plt.xlabel('Year')\n    plt.ylabel('Price ($)')\n    plt.legend()\n    \n    plt.grid(True)\n    \n    plt.xlim(plotme.Year.max()+1, plotme.Year.min()-1)\n    \n    plt.show()","fcab44ae":"def plotQuintsMileage(plotme, ShowAll = False):\n    plt.figure(figsize=(20,10),facecolor='white')\n    \n    GrpYr = plotme.groupby('YearsOld')\n    Quint50 = GrpYr.quantile(0.5).reset_index()#GrpYr.median().reset_index()\n    Quint10 = GrpYr.quantile(0.1).reset_index()\n    Quint90 = GrpYr.quantile(0.90).reset_index()\n    \n    if ShowAll: plt.plot(plotme.Mileage,plotme.Price,'.k', label = 'All Data')\n\n    plt.plot(Quint50.Mileage,Quint50.Price,'or', label = 'Median')\n    plt.plot(Quint10.Mileage,Quint10.Price,'-g', label = '10th quintile')\n    plt.plot(Quint90.Mileage,Quint90.Price,'-y', label = '90th quintile')\n    \n    wrapLength = 200\n    \n    sTitle = 'Make(s): ' + \"\\n\".join(wrap(\", \".join(plotme.Make.unique()),wrapLength))\n    sTitle = sTitle + \"\\n Model(s): \" + \"\\n\".join(wrap(\", \".join(plotme.Model.unique()),wrapLength))\n    sTitle = sTitle + \"\\n Year(s): \" + \"\\n\".join(wrap(\", \".join(plotme.Year.sort_values().apply(str).unique()),wrapLength))\n    \n    plt.title(sTitle)\n    plt.xlabel('Mileage')\n    plt.ylabel('Price ($)')\n    plt.legend()\n    \n    plt.grid(True)\n    \n    plt.show()","89a70630":"df1.head()","a2269741":"df1.head()","4e78978c":"plotme = df1[df1.Make == 'Honda']\n#plotme = df1[df1.Model == 'LibertyRenegade']\n#plotme =df1[df1.Model.str.startswith('Forester2.5i')]\nplotme =plotme[plotme.Model.str.startswith('CR-VEX-L')]\n\n#plotme = plotme[plotme.YearsOld <= 20]#.sample(1000)\n#plotme = plotme[plotme.YearsOld > 3]\n\nplotQuints(plotme,True)\n\n\n\n\n\nplotme =plotme[plotme.Year == 2014]\nplotQuintsMileage(plotme,True)","387720f0":"df1[df1.Model.str.startswith('Escape')].count()","cfb0294c":"# I'm not going to buy a car less than five years old. Those data points will just skew the delcine rate ","38533b9a":"# I want to buy a car less than 10 years old so I'll remove models with no production in last decade","bae7d4db":"# I'll only consider Models with atleast 5 data points","6ed5f0c9":"plotMedian.head()","5dbb758f":"# They also must have been in production for at least 5 years","8a946591":"GrpYr = plotme.groupby('YearsOld')\nQuint50 = GrpYr.quantile(0.5).reset_index()#GrpYr.median().reset_index()\nQuint10 = GrpYr.quantile(0.1).reset_index()\nQuint90 = GrpYr.quantile(0.90).reset_index()\n\nY = np.squeeze(Quint50[['Price']].values)#df[['Price']].values\nX = np.squeeze(Quint50[['YearsOld']].values)#df[['YearsOld']].values","8eb86aa4":"linregress(X, Y)"}}