{"cell_type":{"21e5c307":"code","ad17dc52":"code","2774b700":"code","2cd3dc4f":"code","fd3d20a3":"code","6c171b38":"code","65b1f97c":"code","a05f6230":"code","15e1373a":"code","bcf94f87":"code","77d8df47":"code","2a5b5bc4":"code","2a5da968":"code","76793bd1":"code","d4390188":"code","fa63e09a":"markdown","5add448c":"markdown","d6c9bc40":"markdown","4d683dd1":"markdown","d059b806":"markdown","6c01ccfe":"markdown","9c1a8d95":"markdown","2d641907":"markdown","1a96af71":"markdown","c02d7924":"markdown","cbd6b1c9":"markdown","1cfb2e60":"markdown","f2ce34a5":"markdown","e80149a4":"markdown","b4410b0d":"markdown","cda88544":"markdown","eac85bbf":"markdown","06fb1546":"markdown","06981c5d":"markdown"},"source":{"21e5c307":"import tensorflow as tf\nprint(tf.__version__)","ad17dc52":"#?tf.square","2774b700":"a = 4 + 2j #complex number\nb = 6 + 7j\n\nprint('a:',a,\"b:\",b,'\\n')\n\nprint(a-b,'\\n')\nprint(a*b,'\\n')\n\nc = a + b\n\nprint(c,'\\n')\n\nd = tf.square(c)\nprint(d,'\\n')","2cd3dc4f":"c = tf.constant([[1.4, 2.0, 2], [8, 2, 5]])\nprint(\"Elements :\\n\",c)","fd3d20a3":"import numpy as np\ny = np.array([[1, 2, 2], [8, 2, 5]])\nprint(y)\n# We can also convert a tensor into a numpy array by using .numpy()\nc.numpy()","6c171b38":"print('Tensor Data Type', c.dtype)\nprint(\"Tensor Dimension :\",c.ndim)\nprint('Tensor Shape', c.shape)\n# You can notice the similarity with numpy \n# You can also call the different default tensors as you would do for numpy","65b1f97c":"random_variable = tf.ones(shape=(3,3))\n\nprint(type(random_variable))\nprint(random_variable,'\\n')\n\n\n#random variable\ntf_variable = tf.Variable(random_variable)\nprint(type(tf_variable))\nprint(tf_variable,'\\n')\n\n#you can also update the values of your variable.\ntf_variable.assign(tf.zeros(shape = (3,3)))\nprint(tf_variable)","a05f6230":"# computing derivative for the function 3x^2 at x = 3\n\nx = tf.constant(3.0) #gradient at\n\nwith tf.GradientTape() as g:\n    g.watch(x) #record the operations\n    y = 3* x**2\ndy_dx = g.gradient(y, x) \nprint(dy_dx)","15e1373a":"# We can also use nested GradientTape() for the second derivative\n#computing second derivative for the function 4x^3 at x = 4.0\n\nx = tf.constant(4.0)\nwith tf.GradientTape() as gt:\n    gt.watch(x)\n    with tf.GradientTape() as g:\n        g.watch(x)  \n        y = 4* x**3\n    dy_dx = g.gradient(y, x)\nd2y_dx2 = gt.gradient(dy_dx,x)\nprint(d2y_dx2)","bcf94f87":"#your code here\n","77d8df47":"#your code here\n","2a5b5bc4":"#your code here\n","2a5da968":"#your code here\nx = tf.constant(1.0) ","76793bd1":"#your code here for dot product\na = tf.constant([[1,2,3],[4,5,6],[7,8,9]])\nb = tf.constant([[1],[2],[3]])","d4390188":"# your code here for element wise product\n","fa63e09a":"#### 5. Calculate dot product of matrices [[1,2,3],[4,5,6],[7,8,9]] and [[1],[2],[3]] using tensorflow functions. Also, find the element wise multiplication of the two.","5add448c":"#### 3. Subtract 1 from every element of the above matrix.\n","d6c9bc40":"# <center> Tensorflow Basics","4d683dd1":"#### 4. Calculate the third derivative of the function 4x^3 + x^2 + 1 at x = 1","d059b806":"### Find a detailed reference to creating different tensors:\n\n\n1.   [Converting python\/numpy objects to tensors](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/convert_to_tensor)\n2.   [Generating random values from a normal distribution](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/random\/normal)\n3.   [Converting tensor values to strings ](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/strings\/as_string)\n4.   [Createing a tensor of ones](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/ones)\n5.   [Creating a tensor of zeroes](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/zeros)\n6.   [TensorFlow for maths](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/math)\n\n\n\n","6c01ccfe":"-------","9c1a8d95":"#### 1. Create a constant tensor array 'x' like [2,3,4] and find element wise e^x.  Refer to the website [here](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/math\/exp).\n\n","2d641907":"----------------","1a96af71":"We can get the dimensions and the datatype of the a tf.tensor as demonstrated below - ","c02d7924":"## Reference Links - Deep Learning Programming Frameworks\n\n* **Intro to Google Colab, free GPU and TPU for Deep Learning (Episode 1) -** https:\/\/www.youtube.com\/watch?v=vVe648dJOdI\n\n* **Introduction to Tensorflow & Keras for Deep Learning with Python (3.2) -** https:\/\/www.youtube.com\/watch?v=PsE73jk55cE\n\n* **Introduction to Tensorflow and Keras -** https:\/\/github.com\/jeffheaton\/t81_558_deep_learning\/blob\/master\/t81_558_class_03_2_keras.ipynb\n\n* **TensorFlow Tutorial -** https:\/\/www.tensorflow.org\/tutorials\n\n* **Visualise the derivative of a function here -** https:\/\/www.mathsisfun.com\/calculus\/derivative-plotter.html\n\n* **TensorFlow 2.0 Introduction -** https:\/\/colab.research.google.com\/drive\/1F_EWVKa8rbMXi3_fG0w7AtcscFq7Hi7B#forceEdit=true&sandboxMode=true","cbd6b1c9":"## TensorFlow Fundamentals\nAs per the TensorFlow website, TensorFlow is \"an end-to-end open source platform for machine learning. It has a comprehensive, flexible ecosystem of tools, libraries and community resources that lets researchers push the state-of-the-art in ML and developers easily build and deploy ML powered applications.\"\n\nLearning to work with tensorflow comes handy in developing ML and DL models and in this notebooks we will quickly have a look at the fundamentals\/basics of tensorflow. Note that a very detailed understanding of TensorFlow are not required for this course and we will cover some very basic concepts here. You can go ahead and explore this [site](https:\/\/www.tensorflow.org\/) if you are further interested.","1cfb2e60":"* You can find more on updating a variable [here](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable#assign_add).","f2ce34a5":"## GradientTapeGradientTape : \nNow we learn about the <b>[`GradientTape`](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape)<\/b> which is used to record operations for automatic differentiation.\n\n* TensorFlow Tutorial 6- GradientTape in TensorFlow - https:\/\/www.youtube.com\/watch?v=tDG52BjkGUY","e80149a4":"## Basic operations with TensorFlow","b4410b0d":"#### 2. Declare a variable with a 3*2 shaped floating elements array with elements picked from a random normal distributions.   ","cda88544":"* You can get its value as a Numpy array by calling `.numpy()`:","eac85bbf":"# <center> Practice Questions","06fb1546":"### [Variables](https:\/\/www.tensorflow.org\/guide\/variable) with tf.Variable()\n\nA tensorflow Variable is a tensor that is used to store value that can later be updated. You need to initialize a variable with some value at the time of creation.A tensorflow Variable is a tensor that is used to store value that can later be updated. You need to initialize a variable with some value at the time of creation.","06981c5d":"## Tensors\nAs we Know, tensors are array of numbers arranged in space. We can call a vector(1-D array) as a 1st order tensor and matrix(2-D Array) as a 2nd order tensor and so on. Below, find out how to create a [constant](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/constant) tensor:\n\n\n\n\n"}}