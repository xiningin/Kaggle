{"cell_type":{"0da7d3a5":"code","dcd6e11b":"code","1853b127":"code","7cbadb6d":"code","276bb78d":"code","90d93de8":"code","52f55b74":"code","36c4907d":"code","4aafe7c9":"code","9f9eebce":"code","b9c3b009":"code","51808f61":"code","4be9f9d1":"code","a3b147c6":"code","f08ecad9":"code","72eab5cc":"code","1f0d96d5":"markdown","d777c684":"markdown","4cf0f77f":"markdown","a7aebcc8":"markdown"},"source":{"0da7d3a5":"#import library\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport math\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report, mean_squared_error","dcd6e11b":"df = pd.read_csv('..\/input\/room-occupancy\/room-occupancy.csv')","1853b127":"df.shape","7cbadb6d":"df.head()","276bb78d":"df.describe()","90d93de8":"df.info()","52f55b74":"#heatmap correlation\nplt.figure(figsize = (12,9))\nsns.heatmap(df.corr(), vmax = 0.9, square = True)","36c4907d":"#split data\nX = df.drop('Occupancy', axis = 1)\ny = df['Occupancy']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 1)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)","4aafe7c9":"rf = RandomForestClassifier(random_state = 1, max_features = 'sqrt', n_jobs = 1, verbose = 1)\nrf.fit(X_train, y_train)\nprint(rf)","9f9eebce":"#prediction\ny_pred = rf.predict(X_test)\nprint(y_pred)","b9c3b009":"#accuracy score\naccuracy = accuracy_score(y_test, y_pred)\nprint('Accuracy Score : ', accuracy)\nprint('Percentage : ', int(accuracy * 100), '%')","51808f61":"#check RMSE\nmse = mean_squared_error(y_test, y_pred)\nrmse = math.sqrt(mse)\nprint('Root Mean Squared Error : ', rmse)","4be9f9d1":"#classification report\nreport = classification_report(y_test, y_pred)\nprint(report)","a3b147c6":"feature = pd.Series(rf.feature_importances_, index = X_train.columns).sort_values(ascending = False)\nprint(feature)","f08ecad9":"plt.figure(figsize = (10,6))\nsns.barplot(x = feature, y = feature.index)\nplt.title(\"Features Importance\")\nplt.xlabel('Feature Importance Score')\nplt.ylabel('Features')\nplt.show()","72eab5cc":"plt.figure(figsize = (5,6))\nx = [np.count_nonzero(df['Occupancy'] == 0),\n    np.count_nonzero(df['Occupancy'] == 1)]\nactivities = ['No Chances of Room Occupancy', 'Chance of Room Occupancy']\nplt.pie(x, labels = activities, radius = 1.3, startangle = 70, autopct = '%.1f%%', shadow = True)\nplt.title(\"Occupancy Classification\")\nplt.show()","1f0d96d5":"# Room Occupancy Vacancy Prediction","d777c684":"## Check Feature Importance","4cf0f77f":"## Data Extraction","a7aebcc8":"## Random Forest Model"}}