{"cell_type":{"9b4a5a12":"code","88a18300":"code","64b6e901":"code","240e1778":"code","0f203348":"code","0fdc5bae":"code","f545e9d2":"code","b984b9bd":"code","ee475988":"markdown"},"source":{"9b4a5a12":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport scipy as sc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport gc\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nfrom tqdm import tqdm_notebook\nimport datetime\nimport time\nimport random\nfrom joblib import Parallel, delayed\n\n\nimport lightgbm as lgb\nfrom tensorflow import keras\nfrom gplearn.genetic import SymbolicRegressor\nfrom catboost import Pool, CatBoostRegressor\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import GridSearchCV, KFold, RandomizedSearchCV\nfrom sklearn.feature_selection import RFECV, SelectFromModel\n\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import NuSVR, SVR\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor","88a18300":"train_X_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_X_features_865.csv\")\ntrain_X_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_X_features_865.csv\")\ny_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_y.csv\", index_col=False,  header=None)\ny_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_y.csv\", index_col=False,  header=None)","64b6e901":"train_X = pd.concat([train_X_0, train_X_1], axis=0)\ntrain_X = train_X.reset_index(drop=True)\nprint(train_X.shape)\ntrain_X.head()","240e1778":"train_y = pd.concat([y_0, y_1], axis=0)\ntrain_y = train_y.reset_index(drop=True)\ntrain_y.columns = ['time_to_failure']\ntrain_y['time_to_failure'].shape","0f203348":"test_X = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/test_X_features_10.csv\")\ntest_X.drop('seg_id',inplace=True,axis=1)","0fdc5bae":"scaler = StandardScaler()\ntrain_columns = train_X.columns\n\ntrain_X[train_columns] = scaler.fit_transform(train_X[train_columns])\ntest_X[train_columns] = scaler.transform(test_X[train_columns])","f545e9d2":"from tpot import TPOTRegressor\nfrom sklearn.datasets import load_boston\nfrom sklearn.model_selection import train_test_split\n\ntpot = TPOTRegressor(generations=5, population_size=15, verbosity=2,scoring='neg_mean_absolute_error',cv=5)\ntpot.fit(train_X, train_y)\nprint(tpot.score(train_X, train_y))\n# tpot.export('tpot_boston_pipeline.py')","b984b9bd":"preds = tpot.predict(test_X)\n\nsample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = preds.flatten()\nsample_submission.to_csv('submission.csv', index=False)","ee475988":"# TPOT"}}