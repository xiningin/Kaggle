{"cell_type":{"9b55f73e":"code","314dd34e":"code","1bc8172d":"code","0af7e465":"code","0f08c176":"code","776f34cd":"code","e54738b6":"code","e50459b0":"code","6f6dc00d":"code","9a7b9d7b":"code","858ac176":"code","e122d0d8":"code","e5c1b032":"code","1a1ae6da":"code","961d473d":"code","4a08c05d":"code","098a6cf6":"code","0b6893be":"code","1b0c2650":"markdown","cfd22197":"markdown","8b284720":"markdown","d4026689":"markdown","4f9b4bd4":"markdown","2509c819":"markdown","5a0eb3dc":"markdown","27a0c9ff":"markdown","662b1128":"markdown"},"source":{"9b55f73e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","314dd34e":"import plotly.graph_objects as go\nfrom plotly.offline import iplot","1bc8172d":"data = pd.read_csv('\/kaggle\/input\/euro-2020-top-players\/euro2020.csv')","0af7e465":"data.head()","0f08c176":"dataDf2 = data.sort_values(by=['Goals'],ascending=False)\ndataDf2 = dataDf2[dataDf2['Goals'] > 0]","776f34cd":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x= dataDf2['Player'],\n    y= dataDf2['Goals'],\n    name='Goals',\n    hovertext = dataDf2['Country']\n))\nfig.add_trace(go.Bar(\n    x= dataDf2['Player'],\n    y= dataDf2['Total attempts'],\n    name='Attempts',\n    hovertext = dataDf2['Position']\n))\nfig.add_trace(go.Scatter(\n    x= dataDf2['Player'],\n    y= dataDf2['On target'],\n    name='On target',\n    hovertext = dataDf2['Position']\n))\nfig.add_trace(go.Scatter(\n    x= dataDf2['Player'],\n    y= dataDf2['Off target'],\n    name='Off target',\n    hovertext = dataDf2['Position']\n))\nfig.update_layout(title={\n        'text': \"Players with more goals\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n                  yaxis=dict(\n                            title='goals',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Player',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = \"plotly_dark\"\n                  )\niplot(fig)","e54738b6":"data3 = data.sort_values(by=['Assists'],ascending=False)\ndata3 = data3[data3['Assists'] > 0]","e50459b0":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x= data3['Player'],\n    y= data3['Assists'],\n    name = 'Assists',\n    hovertext= data3[\"Country\"]\n))\nfig.add_trace(go.Scatter(\n    x= data3['Player'],\n    y= data3['Match played'],\n    name = 'Matches played',\n    hovertext= data3[\"Country\"]\n))\nfig.update_layout(title={\n        'text': \"Players with more Assists\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n                  yaxis=dict(\n                            title='Assists',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Player',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = \"plotly_dark\"\n                  )\niplot(fig)","6f6dc00d":"data4 = data.sort_values(by=['Fouls suffered'],ascending=False)\ndata4 = data4[data4['Fouls suffered'] > 0]","9a7b9d7b":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x= data4['Player'],\n    y= data4['Fouls suffered'],\n    name = 'Fouls suffered',\n    hovertext= data4[\"Country\"]\n))\nfig.add_trace(go.Scatter(\n    x= data4['Player'],\n    y= data4['Fouls committed'],\n    name = 'Fouls committed',\n    hovertext= data4[\"Country\"]\n))\nfig.update_layout(title={\n        'text': \"Players with more Fouls suffered\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n                  yaxis=dict(\n                            title='Fouls suffered',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Player',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = \"plotly_dark\"\n                  )\niplot(fig)","858ac176":"data5 = data.sort_values(by=['Fouls committed'],ascending=False)\ndata5 = data5[data5['Fouls committed'] > 0]","e122d0d8":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x= data5['Player'],\n    y= data5['Fouls committed'],\n    name = 'Fouls committed',\n    hovertext= data5[\"Country\"]\n))\nfig.add_trace(go.Bar(\n    x= data5['Player'],\n    y= data5['Yellow cards'],\n    name = 'Yellow cards'\n))\nfig.update_layout(title={\n        'text': \"Players with more Fouls committed\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n                  yaxis=dict(\n                            title='Fouls committed',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Player',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = \"plotly_dark\"\n                  )\niplot(fig)","e5c1b032":"data6 = data.sort_values(by=['Top speed'],ascending=False)\ndata6 = data6[data6['Top speed'] > 20]","1a1ae6da":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x= data6['Player'],\n    y= data6['Top speed'],\n    name = 'Top speed',\n    hovertext= data6[\"Country\"]\n))\nfig.add_trace(go.Scatter(\n    x= data6['Player'],\n    y= data6['Distance covered'],\n    name = 'Distance covered'\n))\nfig.update_layout(title={\n        'text': \"Faster players\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n                  yaxis=dict(\n                            title='Speed',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Player',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = \"plotly_dark\"\n                  )\niplot(fig)","961d473d":"data7 = data.sort_values(by=['Passing accuracy'],ascending=False)\ndata7 = data7[data7['Passing accuracy'] > 70]","4a08c05d":"fig =go.Figure(go.Bar(\n    x= data7['Player'],\n    y= data7['Passing accuracy'],\n    name = 'Passing accuracy',\n    hovertext= data7[\"Country\"]\n))\nfig.add_trace(go.Bar(\n    x= data7['Player'],\n    y= data7['Assists'],\n    name = 'Assists'\n))\nfig.update_layout(barmode='stack',\n    title={\n        'text': \"Players with more accurate passing\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n                  yaxis=dict(\n                            title='accurate passing',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Player',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = \"plotly_dark\"\n                  )\niplot(fig)","098a6cf6":"data8 = data.sort_values(by=['Balls recovered'],ascending=False)\ndata8 = data8[data8['Balls recovered'] > 0]","0b6893be":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x= data8['Player'],\n    y= data8['Balls recovered'],\n    name='Balls recovered',\n    hovertext = data8['Country']\n))\nfig.add_trace(go.Bar(\n    x= data8['Player'],\n    y= data8['Tackels'],\n    name='Tackels',\n    hovertext = data8['Position']\n))\nfig.add_trace(go.Scatter(\n    x= data8['Player'],\n    y= data8['Fouls committed'],\n    name='Fouls committed',\n    hovertext = data8['Position']\n))\nfig.update_layout(title={\n        'text': \"Players with more Balls recovered\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n                  yaxis=dict(\n                            title='Balls recovered',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Player',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = \"plotly_dark\"\n                  )\niplot(fig)","1b0c2650":"# faster players","cfd22197":"# greatest foulers","8b284720":"# greatest scorers","d4026689":"# greatest assistants","4f9b4bd4":"# greatest ball retrievers","2509c819":"# more accurate passing players","5a0eb3dc":"# Loading the data","27a0c9ff":"# Importing the libraries","662b1128":"# greatest foul sufferers"}}