{"cell_type":{"40e35e27":"code","f02a6ed0":"code","13c9cea5":"code","980bf1e2":"code","c2732a7f":"code","9be92cc0":"code","0fc3e73c":"code","4bf2103e":"code","4826a19b":"code","5500ffd4":"code","0020f595":"code","08364939":"code","0eff3d13":"code","cc43ba80":"markdown","309a736b":"markdown","3f118120":"markdown","e92d794f":"markdown","38ae953a":"markdown","db774146":"markdown","8a1adc3d":"markdown","2acd6d7a":"markdown","56485d70":"markdown","6a24468e":"markdown","07cfe050":"markdown","cfee21c2":"markdown","7b095bb9":"markdown"},"source":{"40e35e27":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport ast\nfrom PIL import Image\nimport os\nimport plotly\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nfrom plotly.graph_objs import *\nimport os\nimport re\nimport random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ninit_notebook_mode()\nfrom wordcloud import WordCloud, STOPWORDS\n\nprint(\"Files are:\\n\")\nprint('\\n'.join(os.listdir('..\/input\/sf-restaurant-scores-lives-standard\/')))\n# Any results you write to the current directory are saved as output.","f02a6ed0":"res_vio = pd.read_csv('..\/input\/sf-restaurant-scores-lives-standard\/restaurant-scores-lives-standard.csv')","13c9cea5":"res_vio.head(5)","980bf1e2":"res_vio.tail(5)","c2732a7f":"num_rows, num_cols = res_vio.shape\nprint(\"There are {} Rows and {} Cols\".format(num_rows, num_cols))","9be92cc0":"res_vio.isna().sum()","0fc3e73c":"def prep_data():\n    df = pd.read_csv('..\/input\/sf-restaurant-scores-lives-standard\/restaurant-scores-lives-standard.csv')\n    #df.set_index(['business_name', 'business_address'], inplace=True)\n    df[\"inspection_date\"] = pd.to_datetime(df['inspection_date'], infer_datetime_format=True)\n    df.drop(columns=['business_city', 'business_state', 'business_postal_code', 'business_location', 'business_phone_number'], inplace=True)\n    return df\nres_vio = prep_data()","4bf2103e":"res_vio.head(10)","4826a19b":"temp = res_vio[['inspection_type', 'risk_category']]\nfig = {\n  \"data\": [\n    {\n      \"values\": temp['inspection_type'].value_counts(),\n      \"labels\": list(temp['inspection_type'].value_counts().index),\n      \"name\": \"Inspections Type\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .1,\n      \"type\": \"pie\"\n    }],\n  \"layout\": {\n        \"title\":\"Types of Inspections\"\n    }\n}\niplot(fig, filename='pie')","5500ffd4":"temp = res_vio[['inspection_type', 'risk_category']]\nfig = {\n  \"data\": [\n    {\n      \"values\": temp['risk_category'].value_counts(),\n      \"labels\": list(temp['risk_category'].value_counts().index),\n      \"name\": \"Inspections Type\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .4,\n      \"type\": \"pie\"\n    }],\n  \"layout\": {\n        \"title\":\"Risk Category Distribution\"\n    }\n}\niplot(fig, filename='pie')","0020f595":"d = {'inspection_score': 'mean', 'business_latitude': 'first', 'business_longitude':'first', 'violation_id':'count', 'risk_category':'last'}\nres_vio_agg = res_vio.groupby(by=[\"business_name\",\"business_address\", 'inspection_date'], as_index=True).aggregate(d).dropna()","08364939":"worst_100 = res_vio_agg.nsmallest(100, 'inspection_score').reset_index()\ntop_100 = res_vio_agg.nlargest(100, 'inspection_score').reset_index()\ndata = [\n    go.Scattermapbox(\n        lat=top_100[\"business_latitude\"],\n        lon=top_100[\"business_longitude\"],\n        mode='markers',\n        name=\"Top 100\",\n        marker=dict(\n            size = top_100[\"inspection_score\"].apply(lambda x: (x \/ 10) + 10),\n            color='rgb(135, 14, 87)',\n            opacity=0.5\n        ),\n        text= top_100.apply(lambda x: \"Resturant Name:\\t{}<\/br>Street:\\t{}<\/br>Inspection Score(X\/100):\\t{:,}<\/br># Violations:\\t{}\".format(x[\"business_name\"], x[\"business_address\"], x[\"inspection_score\"], x[\"violation_id\"]), axis=1)\n    ),\n     go.Scattermapbox(\n        lat=worst_100[\"business_latitude\"],\n        lon=worst_100[\"business_longitude\"],\n        mode='markers',\n        name=\"Worst 100\",\n        marker=dict(\n            size = worst_100[\"inspection_score\"].apply(lambda x: (x \/ 2) + 5),\n            color='rgb(50, 14, 25)',\n            opacity=0.5\n        ),\n        text= worst_100.apply(lambda x: \"Resturant Name:\\t{}<\/br>Street:\\t{}<\/br>Inspection Score(X\/100):\\t{:,}<\/br># Violations:\\t{}\".format(x[\"business_name\"], x[\"business_address\"], x[\"inspection_score\"],x[\"violation_id\"]), axis=1)\n    ),\n    \n]\n\nlayout = go.Layout(\n    autosize=True,\n    hovermode='closest',\n    title=\"Top & Worst 100 Resturants on the Map\", \n    mapbox=dict(\n        accesstoken=\"pk.eyJ1Ijoic3luY3VzaCIsImEiOiJjam05aTEyNHUwMDNnM3JscjRvODFuMDY1In0.Iw54eGGxr-h70qh86bMFjA\",\n        bearing=0,\n        center=dict(\n            lat=37.7749,\n            lon=-122.4194\n        ),\n        pitch=0,\n        zoom=10\n    ),\n)\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='Multiple Mapbox')","0eff3d13":"d = {'inspection_score': 'last', 'business_latitude': 'last', 'business_longitude':'last', 'violation_id':'last', 'risk_category':'last', 'inspection_date':'last', 'violation_description':'last'}\nlast_inspections = res_vio.groupby(by=[\"business_name\",\"business_address\"], as_index=True).aggregate(d).dropna()\nlow_risk = last_inspections[last_inspections[\"risk_category\"] == \"Low Risk\"].reset_index()\nmed_risk = last_inspections[last_inspections[\"risk_category\"] == \"Moderate Risk\"].reset_index()\nhigh_risk = last_inspections[last_inspections[\"risk_category\"] == \"High Risk\"].reset_index()\nr = lambda: random.randint(0,255)\ndata = []\ncolors = ['rgb(0, 255, 114)', 'rgb(229, 247, 113)', 'rgb(255, 38, 106)']\nfor i,(df, name) in enumerate([(low_risk,\"Low\"), (med_risk, \"Moderate\"), (high_risk, \"High\")]):\n    temp = go.Scattermapbox(\n            lat=df[\"business_latitude\"],\n            lon=df[\"business_longitude\"],\n            mode='markers',\n            name=name,\n            marker=dict(\n                size = df[\"inspection_score\"].apply(lambda x: (x \/ 10) + 10),\n                color=colors[i],\n                opacity=0.5\n            ),\n            text= df.apply(lambda x: \"Resturant Name:\\t{}<\/br>Street:\\t{}<\/br>Inspection Score(X\/100):\\t{:,}<\/br># Violations:\\t{}<\/br>Last Inspection:\\t{:%d, %b %Y}<\/br>Violation:\\t{}\".format(x[\"business_name\"], x[\"business_address\"], x[\"inspection_score\"], x[\"violation_id\"], x[\"inspection_date\"], x['violation_description']), axis=1)\n    )\n    data.append(temp)\n\nlayout = go.Layout(\n    autosize=True,\n    hovermode='closest',\n    title=\"Risk Map of Most Recent Inspections\", \n    mapbox=dict(\n        accesstoken=\"pk.eyJ1Ijoic3luY3VzaCIsImEiOiJjam05aTEyNHUwMDNnM3JscjRvODFuMDY1In0.Iw54eGGxr-h70qh86bMFjA\",\n        bearing=0,\n        center=dict(\n            lat=37.7749,\n            lon=-122.4194\n        ),\n        pitch=0,\n        zoom=10\n    ),\n)\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='Multiple Mapbox')","cc43ba80":"# Table of Contents\n------------------------------------------------\n1. [ Introduction ](#1)\n2. [Packages Import & Data Import ](#2)\n3. [Data Head & Tail](#3)\n4. [Analysis](#4)","309a736b":"# #Rows with Nan Values","3f118120":"## Data Head after Cleaning","e92d794f":"## Cleaning the Data","38ae953a":"# Sneak Peak at the Data <a id=\"3\"><\/a>\n\n## Head","db774146":"# All Time Worst & Best Resturants","8a1adc3d":"## Data Integrity","2acd6d7a":"# Packages Import & Data Import <a id=\"2\"><\/a>","56485d70":"## Data Import","6a24468e":"# Introduction <a id=\"1\"><\/a>\n\n> San Francisco (SF; \/\u02ccs\u00e6n fr\u0259n\u02c8s\u026asko\u028a, fr\u00e6n-\/, Spanish for 'Saint Francis'; Spanish: [san fran\u02c8sisko]), officially the City and County of San Francisco, is the cultural, commercial, and financial center of Northern California. San Francisco is the 13th most populous city in the United States, and the 4th most populous in California, with 884,363 residents as of 2017. It covers an area of about 46.89 square miles (121.4 km2), mostly at the north end of the San Francisco Peninsula in the San Francisco Bay Area, making it the second most densely populated large US city, and the fifth most densely populated U.S. county, behind only four of the five New York City boroughs. San Francisco is also part of the fifth most populous primary statistical area in the United States, the San Jose\u2013San Francisco\u2013Oakland, CA Combined Statistical Area (8.8 million residents).\n\n![](https:\/\/images.huffingtonpost.com\/2013-08-31-waterbarview.jpg)","07cfe050":"## Tail","cfee21c2":"# Are Unscheduled Inspections Effective ?\n\n-------------------------------------------\n\nViolations that are from unscheduled inspections 74%\n\nViolations that are from scheduled inspections  0.168 %\n\n## Unscheduled inspections are super effective !\n\n","7b095bb9":"# Analysis  <a id=\"4\"><\/a>\n----------------------------------"}}