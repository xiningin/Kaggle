{"cell_type":{"735527fa":"code","1f1c31f6":"code","b7498cd4":"code","68b4ce96":"code","62f7ed81":"code","cd9d9057":"code","fda6018b":"code","66b743ca":"code","a773a624":"code","86e06047":"code","f2f3cb83":"code","d8f32143":"code","91046ff4":"code","e855c711":"code","3080c968":"code","35d76bd8":"code","125bf06f":"code","1e57489d":"code","4afc3b4c":"code","3c301692":"code","28f08a58":"code","08402a88":"code","56081b0b":"code","360c5d38":"code","9afd6ec0":"code","036dfcba":"code","43df9e18":"code","7f0052bb":"code","4ab0dd58":"code","d236f140":"code","4b60cc62":"code","4f3abc0e":"code","9b4dc7fa":"code","09c102b6":"code","1f217820":"code","aee992f3":"code","66b8d3dc":"code","427692b4":"code","58a3c958":"code","7d4eb3ee":"code","08acd985":"code","af7d75eb":"code","663026e9":"code","9a6fb76a":"code","fcb2b08d":"code","d7a38160":"code","11f3f8f0":"code","803b4ed6":"code","b691c15a":"code","76f2a134":"code","3fa6102f":"code","07309546":"code","b8f69765":"code","327d080c":"code","1e7e0a1b":"code","73c1dcee":"code","a325ac68":"code","8920a283":"code","66006eca":"code","9be47178":"code","7cf90169":"code","74eca1d7":"code","12731b8c":"code","e4cb08eb":"code","3263c3f3":"code","00095031":"code","b1bf9052":"code","1a13e98f":"code","015a33fe":"code","f78f3f3b":"code","1fb80311":"code","af6fc662":"code","fc6539bc":"code","508d6cd6":"code","ff33a394":"code","be603119":"code","82a03a48":"code","bb56f7b7":"markdown","c01220a2":"markdown","0ddb3d32":"markdown","83025853":"markdown","01e974f4":"markdown","7b91b5a0":"markdown","63fd2bfe":"markdown","bc7d860a":"markdown","83df28b5":"markdown","cf540be7":"markdown","846df87f":"markdown","a7b58bea":"markdown","41c55a79":"markdown","e011f4e7":"markdown","436b42dc":"markdown","5d0940e5":"markdown","2a7f66ef":"markdown","5737c880":"markdown","0da78bcd":"markdown","1a11ae5d":"markdown","555bf8d1":"markdown","bce3c3c3":"markdown","65d0e4b7":"markdown","8fb2d31f":"markdown","c14f417e":"markdown","ed8322f0":"markdown","cc8e99cf":"markdown","ee7f781a":"markdown","1b075c0a":"markdown","20ba1ed0":"markdown","f798ce09":"markdown","81cb08ba":"markdown","7d909ef8":"markdown","b53fb1a2":"markdown","a3d1a6c7":"markdown","c93eb00a":"markdown","595d079f":"markdown","16722751":"markdown","ff560863":"markdown","91d7600e":"markdown","2dd66fd5":"markdown","7c61e094":"markdown","454d174e":"markdown","ac9875a4":"markdown","e38fd3c2":"markdown","94841761":"markdown","c3243ed4":"markdown","a5e85f7c":"markdown","bf2ce103":"markdown","9b26731d":"markdown","f9362e6c":"markdown","475fcc83":"markdown","44dae969":"markdown"},"source":{"735527fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1f1c31f6":"raw_df = pd.read_csv('..\/input\/AppleStore.csv')","b7498cd4":"raw_df.info()","68b4ce96":"explore_df = raw_df.copy()","62f7ed81":"explore_df.head()","cd9d9057":"explore_df.size_bytes.hist()","fda6018b":"explore_df.size_bytes.describe()","66b743ca":"size_megabytes = explore_df.size_bytes \/ 10**6\nsize_megabytes.head()","a773a624":"size_megabytes.describe()","86e06047":"explore_df.price.hist()","f2f3cb83":"explore_df.price.describe()","d8f32143":"bins = pd.cut(explore_df.price, [-1, 0, 15, 20, 30, 50 ,100, 200, 300])\nexplore_df.groupby(bins)['price'].agg(['count', 'sum'])","91046ff4":"explore_df[explore_df.price > 15].sort_values(by=['price'], ascending=False)","e855c711":"explore_df[explore_df.price > 15].sort_values(by=['price'], ascending=False).price.hist()","3080c968":"explore_df.rating_count_tot.describe()","35d76bd8":"explore_df.rating_count_tot.hist()","125bf06f":"bins = pd.cut(explore_df.rating_count_tot, [-1, 0, 10, 10**2, 10**3, 10**4, 10**5, 10**6, 2*10**6, 5*10**6])\nexplore_df.groupby(bins)['rating_count_tot'].agg(['count', 'sum'])","1e57489d":"explore_df[explore_df.rating_count_tot > 1000000].rating_count_tot.hist(figsize=(8,8))","4afc3b4c":"explore_df.rating_count_ver.describe()","3c301692":"explore_df.rating_count_ver.hist()","28f08a58":"explore_df.sort_values(by=['rating_count_ver'], ascending=False)","08402a88":"explore_df.user_rating.describe()","56081b0b":"explore_df.user_rating.hist()","360c5d38":"explore_df[explore_df.user_rating == 0].shape","9afd6ec0":"explore_df[(explore_df.user_rating == 0) & (explore_df.rating_count_tot == 0)].shape","036dfcba":"explore_df.user_rating_ver.describe()","43df9e18":"explore_df.user_rating_ver.hist()","7f0052bb":"explore_df[['user_rating', 'user_rating_ver']].hist()","4ab0dd58":"explore_df = explore_df.rename(columns={\"sup_devices.num\": \"sup_devices_num\", \"ipadSc_urls.num\": \"ipadSc_urls_num\", \"lang.num\": \"lang_num\"})","d236f140":"explore_df.sup_devices_num.describe()","4b60cc62":"explore_df.sup_devices_num.hist()","4f3abc0e":"explore_df[explore_df.sup_devices_num < 20].sup_devices_num.hist()","9b4dc7fa":"explore_df[(20 < explore_df.sup_devices_num) & (explore_df.sup_devices_num < 30)].sup_devices_num.hist()","09c102b6":"explore_df[(30 < explore_df.sup_devices_num) & (explore_df.sup_devices_num < 50)].sup_devices_num.hist()","1f217820":"explore_df.lang_num.describe()","aee992f3":"explore_df[explore_df.lang_num == 75]","66b8d3dc":"explore_df.lang_num.hist()","427692b4":"print(explore_df[explore_df.lang_num > 40].shape)\nexplore_df[explore_df.lang_num > 40]","58a3c958":"explore_df.describe(include=['O']) # include object type columns to describe","7d4eb3ee":"explore_df[explore_df.track_name == \"Mannequin Challenge\"]","08acd985":"explore_df.prime_genre.value_counts()","af7d75eb":"explore_df.prime_genre.value_counts().plot(kind='pie', figsize=(15,15))","663026e9":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns","9a6fb76a":"sns.set() # set styling to default, I like it more\nsns.pairplot(data=explore_df.drop(['Unnamed: 0'], axis=1), palette=\"husl\", hue=\"prime_genre\")","fcb2b08d":"sns.lmplot(x=\"id\", y=\"size_bytes\", data=explore_df, scatter_kws={'alpha':0.3})","d7a38160":"sns.lmplot(x=\"size_bytes\", y=\"price\", data=explore_df, scatter_kws={'alpha':0.3})","11f3f8f0":"sns.lmplot(x=\"size_bytes\", y=\"user_rating\", data=explore_df, scatter_kws={'alpha':0.3})","803b4ed6":"sns.lmplot(x=\"size_bytes\", y=\"sup_devices_num\", data=explore_df, scatter_kws={'alpha':0.3})","b691c15a":"sns.lmplot(x=\"size_bytes\", y=\"lang_num\", data=explore_df, scatter_kws={'alpha':0.3})","76f2a134":"sns.lmplot(x=\"price\", y=\"user_rating\", data=explore_df, scatter_kws={'alpha':0.3})","3fa6102f":"sns.lmplot(x=\"price\", y=\"sup_devices_num\", data=explore_df, scatter_kws={'alpha':0.3})","07309546":"sns.lmplot(x=\"price\", y=\"lang_num\", data=explore_df, scatter_kws={'alpha':0.3})","b8f69765":"sns.lmplot(x=\"rating_count_tot\", y=\"user_rating\", data=explore_df, scatter_kws={'alpha':0.3})","327d080c":"sns.lmplot(x=\"lang_num\", y=\"user_rating\", data=explore_df, scatter_kws={'alpha':0.3})","1e7e0a1b":"sns.lmplot(x=\"sup_devices_num\", y=\"user_rating\", data=explore_df, scatter_kws={'alpha':0.3})","73c1dcee":"sns.set()\nplt.figure(figsize=(12,12))\nsns.heatmap(explore_df.corr(), vmin=-1, vmax=1, annot=True, fmt=\".3f\")","a325ac68":"sns.set()\nplt.figure(figsize=(20,20))\nsns.violinplot(data=explore_df, x=\"prime_genre\", y=\"price\")\nplt.xticks(rotation=-90)","8920a283":"sns.set()\nplt.figure(figsize=(12,12))\nsns.boxplot(data=explore_df[explore_df.prime_genre != 'Education'], x=\"prime_genre\", y=\"price\")\nplt.xticks(rotation=-90)","66006eca":"sns.set()\nplt.figure(figsize=(12,12))\nsns.boxplot(data=explore_df[explore_df.prime_genre == 'Education'], x=\"prime_genre\", y=\"price\")\nplt.xticks(rotation=-90)","9be47178":"explore_df[(explore_df.prime_genre == 'Education') & (explore_df.price > 50)]","7cf90169":"sns.set()\nplt.figure(figsize=(20,20))\nsns.violinplot(data=explore_df, x=\"prime_genre\", y=\"user_rating\")\nplt.xticks(rotation=-90)","74eca1d7":"sns.set()\nplt.figure(figsize=(20,20))\nsns.boxplot(data=explore_df, x=\"prime_genre\", y=\"user_rating\")\nplt.xticks(rotation=-90)","12731b8c":"explore_df[explore_df.prime_genre == 'Productivity'].user_rating.describe()","e4cb08eb":"explore_df[explore_df.prime_genre == 'Music'].user_rating.describe()","3263c3f3":"explore_df[explore_df.prime_genre == 'Catalogs'].user_rating.describe()","00095031":"sns.set()\nplt.figure(figsize=(20,20))\nsns.violinplot(data=explore_df, x=\"cont_rating\", y=\"price\")\nplt.xticks(rotation=-90)","b1bf9052":"sns.set()\nplt.figure(figsize=(20,20))\nsns.boxplot(data=explore_df, x=\"cont_rating\", y=\"user_rating\")\nplt.xticks(rotation=-90)","1a13e98f":"productivity_applications = explore_df[explore_df.prime_genre == 'Productivity']\nproductivity_applications = productivity_applications.drop(columns=['Unnamed: 0', 'id', 'prime_genre'], axis=1)\nproductivity_applications.info()","015a33fe":"sns.set()\nplt.figure(figsize=(12,12))\nsns.heatmap(productivity_applications.corr(), vmin=-1, vmax=1, annot=True, fmt=\".3f\")","f78f3f3b":"sns.set()\nplt.figure(figsize=(20,20))\nsns.boxplot(data=productivity_applications, x=\"cont_rating\", y=\"user_rating\")\nplt.xticks(rotation=-90)","1fb80311":"medical_applications = explore_df[explore_df.prime_genre == 'Medical']\nmedical_applications = medical_applications.drop(columns=['Unnamed: 0', 'id', 'prime_genre'], axis=1)\nmedical_applications.info()","af6fc662":"sns.set()\nplt.figure(figsize=(12,12))\nsns.heatmap(medical_applications.corr(), vmin=-1, vmax=1, annot=True, fmt=\".3f\")","fc6539bc":"sns.set()\nplt.figure(figsize=(20,20))\nsns.boxplot(data=medical_applications, x=\"cont_rating\", y=\"user_rating\")\nplt.xticks(rotation=-90)","508d6cd6":"prime_genre_average_prices = explore_df.groupby(['prime_genre'])['price'].mean().reset_index(level=0).sort_values(by='price', ascending=False)\nsns.set()\nplt.figure(figsize=(15,15))\nplt.xticks(rotation=-90)\nsns.barplot(x='prime_genre', y='price', data=prime_genre_average_prices)","ff33a394":"content_rating_average_prices = explore_df.groupby(['cont_rating'])['price'].mean().reset_index(level=0).sort_values(by='price', ascending=False)\nsns.set()\nplt.figure(figsize=(15,15))\nplt.xticks(rotation=-90)\nsns.barplot(x='cont_rating', y='price', data=content_rating_average_prices)","be603119":"prime_genre_average_rating = explore_df.groupby(['prime_genre'])['user_rating'].mean().reset_index(level=0).sort_values(by='user_rating', ascending=False)\nsns.set()\nplt.figure(figsize=(15,15))\nplt.xticks(rotation=-90)\nsns.barplot(x='prime_genre', y='user_rating', data=prime_genre_average_rating)","82a03a48":"content_rating_average_user_rating = explore_df.groupby(['cont_rating'])['user_rating'].mean().reset_index(level=0).sort_values(by='user_rating', ascending=False)\nsns.set()\nplt.figure(figsize=(15,15))\nplt.xticks(rotation=-90)\nsns.barplot(x='cont_rating', y='user_rating', data=content_rating_average_user_rating)","bb56f7b7":"It looks like there's nothing wrong with these applications - other than being overpriced. Even though we can see there is a huge gap in the distribution of prices, since that data is meaningful we should not remove those outliers.  \nWe should not remove values just because some values have higher or lower values than the others since they are also carrying information about our data, remove outlier data only if you think it is a mistake.","c01220a2":"Let's see how `price` and `user_rating`  is effected by `prime_genre` and `cont_rating`.","0ddb3d32":"It appears that majority of the users are rating over 4.5 for Productivity apps, and over 4.0 for Music apps whereas they are rating around 1.75 for Catalog apps.","83025853":"It looks like user ratings for apps are mostly higher. We may examine 0s and their reasons, is that because they do not have ratings in total or are they really that bad?","01e974f4":"We have total of 17 columns and 7197 rows each row representing a mobile application.","7b91b5a0":"### Univariate Analysis: Numerical Attributes\n\nLet's first examine:\n\n- size_bytes\n- price\n- rating_count_tot\n- rating_count_ver\n- user_rating\n- user_rating_ver\n- sup_devices.num\n- ipadSc_urls.num\n- lang.num\n\nThese in this order.","63fd2bfe":"Yeah, I proved it. Those are the applications that do not have any ratings, this also tells us that - we already know it but anyway - 0 is not a valid value when rating an application.","bc7d860a":"I really do not like the names that contain dots in it since they are kinda confusing me like are they attributes, or what? (And I am not the only one that is confused, Python is also confused). So I will rename this variables to `sup_devices_num`.  \n\nWe also have `ipadSc_urls.num` and `lang.sum` so I will change them too.","83df28b5":"##\u00a0Univariate Analysis\nLet's examine each variable on their own to get a better understanding of them.","cf540be7":"Yeah, we were right. We have outliers. It is time to examine those values and try to find a reason of their values and decide if that value is acceptable or not.","846df87f":"Assuming that this is the number of languages supported by the application.","a7b58bea":"Just by using `.describe(include=['O'])` we got lots of information about these columns now.\n\n- We have 7195 unique Track Names, but there are **2** applications with the same name: ***Mannequin Challenge***\n- All applications are using **USD** as their currency, so we may ignore this column in later analysis.\n- Majority of the applications are rated as** 4+** (which is the *lowest* rating in the system). The ones that may contain *\"Medical\/Treatment Information, Gambling and Contests, and Unrestricted Web Access\"* have higher `cont_rating`\n- There are **4** categories in total for `cont_rating`.\n- Againg majority of the applications belongs to **Games** category.\n- There are **23** categories in total for `prime_genre`.","41c55a79":"### track_name\n\nName of the applications.","e011f4e7":"### prime_genre\n\nPrimary Genre of the application","436b42dc":"### size_bytes","5d0940e5":"Let's check what do we have here.","2a7f66ef":"The distribution of suport device number looks like divided into three main groups one is centered around **37**, one is around **24** and other is around **15**.   \nThis might be interesting to analyze the reason behind this separation, and the effects of this on the `user ratings`, `prices`, `total number of rating` these apps get.","5737c880":"It appears that majority of the applications' prices are 0s. And only a few of them are higher than 15.  \nLet's see which applications they are.","0da78bcd":"Some interesting relation that catches my eye:\n\n- id-size_bytes\n- size_bytes-pricing\n- size_bytes-user_rating\n- size_bytes-sup_devices_num\n- size_bytes-lang_sum\n- price-user_rating\n- price-sup_devices_num\n- price-lang_sum\n- rating_count_total - user_rating\n- lang_sum-user_rating","1a11ae5d":"### user_rating_ver\n\nUser ratings for the latest version.","555bf8d1":"This looks like this applications are mostly belong to big companies, that can provide many languages, that can afford to do that. This `lang_sum` attribute might be a good indicator of higher `user_rating`s for applications. This is just an assumption based on the applications I see, but we will get to see this in detail in `Multivariate Analysis` part.","bce3c3c3":"There are 929 apps that do not have any ratings. And only 6 applications over 1 million ratings.  ","65d0e4b7":"### rating_count_ver\n\nRatings for the last version.\n\nWe can analyze the change in the last version ratings.","8fb2d31f":"There are 2-3 apps that are certainly outliers for this category, let's take a look at them.","c14f417e":"There are 929 applications that has 0 user rating score, we saw this number before. It was the number of applications that do not have any ratings, coincidence? I don't think so.","ed8322f0":"## Multivariate Analysis\n\nNow let's get into the funnier part and analyze the relations between these attributes.","cc8e99cf":"# App Store Applications\n\nHi everyone, I am Recep and this is my first project in Kaggle! \n\nI see Data Analysis as a journey where we are in a huge (depending on the data size :)) cave  alone, and only with a torch in our hand, and we look around with that torch to see if there's something useful, and we try to get the best out of that cave. This is exactly what I am going to do right now.\n\nWhat do we have here?\n- We will see, but probably IOS Applications and some different statistics about them.\n\nWhat are we going to do?\n- We are first going to see what do we have,\n- We will then try to analyze relations between the statistics","ee7f781a":"### rating_count_tot\n\nTotal number of  ratings","1b075c0a":"Oh, **Google** again. Cool.  ","20ba1ed0":"After manually checking these apps, I found out that they those are the real prices for those applications. ($299.99... that price!)","f798ce09":"There are only a few applications that provides over 40 languages. We can check them easily.","81cb08ba":"I really like to use **Seaborn** as my main visualization library, so I first imported that and we will get to plotting in a minute.  \nTaking a look back at the notes I have taken while doing Univariate Analysis,  `user_ratings` and `prices` can be a good starting point.  \nBut first lets get the benefits of having **Seaborn** with us, and plot a **pairplot**  to take a step back, and look at the relations in a zoomed out perspective","7d909ef8":"Now let's see the distribution again.","b53fb1a2":"## Conclusion","a3d1a6c7":"It appears that price has more variance for the apps that are for 4+ audience, and rest content rated applications has maximum of $50. Prices are mostly around 0 for all content rates but for 17+ category it can easily be seen that those applications cannot be priced more than $25.","c93eb00a":"I can conclude that **9+ Productivity** applications would be best rated application category among these categories and **4+ Medical Applications** would be most suitable ones to be priced highest. **Educational** genre is also open to be priced high but I am looking from a more general perpective.  \n\n**FINAL TIP:** If you are thinking of making a high rated application go for 9+, Productivity apps! :)\n\n","595d079f":"Wow, I was not expecting this. Looks like applications got worse ratings than their overall ratings in their latest versions.  \n\nIncrease in the 0s is also expected since this just only considers the ratings for the latest version of that app, and it is more likely to be un-rated for the latest version rather than for all previous versions.","16722751":"Most of the users are happy with their 9+ content rated applications, they are OK\/using_peacefully their 4+ and 12+ applications but there are some users going hard in their ratings for 17+ applications.  ","ff560863":"## Data Dictionary\n\n- **id:** ID of the app in the app store.\n- **track_name:** Name of the app in the app store.\n- **size_bytes:** Size of the application in bytes.\n- **currency:** Currency of the application's price.\n- **price:** Price of the application in the app store.\n- **rating_count_tot:** How many ratings this app got in total.\n- **rating_count_ver:** Rating count for the last version (Maybe?)\n- **user_rating:** User ratings\n- **user_rating_ver:** User rating for the latest version (Maybe?)\n- **ver:** Latest version of the application.\n- **cont_rating:** A content rating rates the suitability of TV broadcasts, movies, comic books, or video games to its audience. \n- **prime genre:** Genre of the application.\n- **sup_devices.num:** Number of devices this application can be used.\n- **ipadSc_urls.num:**  No idea.\n- **lang.num:** Number of languages it provides.\n- **vpp_lic:** No idea.","91d7600e":"Again we have some outliers as expected, let's see again what applications have those values.","2dd66fd5":"Assuming that ideas are given as serials in ascending order, we can say that the second row is newer. But this does not give us any important information.","7c61e094":"### price","454d174e":"75 Languages? Really? Which application is that?","ac9875a4":"### user_rating","e38fd3c2":"### sup_devices.num\n\nNumber of devices that can run this application.","94841761":"Distribution of the user ratings for latest versions of the apps are almost identical with the total user ratings for those apps. I was excepting to see an increase towards the end in this plot since new versions of applications should get better ratings - otherwise what is the point of releasing new versions, right?  \n  \nLet's see them side by side and maybe my expectations will be satisfied.","c3243ed4":"### Univariate Analysis: Categorical Attributes\n\n- track_name: Name of the app in the app store.\n- currency: Currency of the application's price.\n- ver: Latest version of the application.\n- cont_rating: Who is the targeted audience. Is that for people who are odler than 4 (4+), or 18 (18+)?\n- prime genre: Genre of the application.","a5e85f7c":"Productivity and Music Genres has the highest (on average) user rating where as Catalogs has the lowest.","bf2ce103":"The variance in the prices of educational apps are too much for us and violinplot prevents us seeing what really is the distribution. Let's try to get a better look at it.","9b26731d":"Again, assuming that `id`s are given in serial order, increasing everytime a new application is submitted. So the later an application is submitted to the store, the higher `id` it will have. \n\nWe can say that applications sizes are increasing in time.","f9362e6c":"Size in bytes is kinda overwhelming to visualize the difference. It may be better to convert it to the another measure.","475fcc83":"Having this type of histogram usually indicates that we have some outlier values.","44dae969":"### lang.sum"}}