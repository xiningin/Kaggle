{"cell_type":{"f1aa9cdc":"code","f2e52560":"code","fe98ac3d":"code","f4c4423d":"code","4f1a5175":"code","e9fcf7ae":"code","ec0db771":"code","caeb82ec":"code","5f6ffc77":"code","8cd54cc6":"code","b2d1197a":"code","cf7b9b5e":"code","0ce5c022":"code","44a8aaf6":"code","15b11271":"code","f2cf0de8":"code","89705821":"markdown","4782d211":"markdown","2c6a2659":"markdown","9a4bbadd":"markdown","cb4e437a":"markdown","e10d4dd3":"markdown","dff07c18":"markdown"},"source":{"f1aa9cdc":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.metrics import confusion_matrix, classification_report","f2e52560":"data = pd.read_csv('..\/input\/banknote-authenticationcsv\/BankNote_Authentication.csv')","fe98ac3d":"data","f4c4423d":"data.info()","4f1a5175":"plt.figure(figsize=(12, 10))\nsns.heatmap(data.corr(), annot=True, vmin=-1.0, cmap='mako')\nplt.show()","e9fcf7ae":"plt.figure(figsize=(16, 16))\nsns.pairplot(data)\nplt.show()","ec0db771":"y = data['class'].copy()\nX = data.drop('class', axis=1).copy()","caeb82ec":"plt.figure(figsize=(10, 10))\nfor i in range(len(X.columns)):\n    plt.subplot(2, 2, i + 1)\n    sns.distplot(X[X.columns[i]])\nplt.show()","5f6ffc77":"plt.figure(figsize=(10, 10))\nplt.pie(y.value_counts(), labels=[\"GENUINE\", \"FORGED\"], autopct='%.2f%%', colors=['cornflowerblue', 'lightcoral'])\nplt.title(\"Class Distribution\")\nplt.show()","8cd54cc6":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, shuffle=True, random_state=1)","b2d1197a":"scaler = StandardScaler()\nscaler.fit(X_train)\n\nX_train = pd.DataFrame(scaler.transform(X_train), index=X_train.index, columns=X.columns)\nX_test = pd.DataFrame(scaler.transform(X_test), index=X_test.index, columns=X.columns)","cf7b9b5e":"X_train","0ce5c022":"y_train","44a8aaf6":"model = LogisticRegression()\nmodel.fit(X_train, y_train)","15b11271":"print(\"Test Accuracy: {:.2f}%\".format(model.score(X_test, y_test) * 100))","f2cf0de8":"y_pred = model.predict(X_test)\n\ncm = confusion_matrix(y_test, y_pred)\nclr = classification_report(y_test, y_pred, target_names=[\"GENUINE\", \"FORGED\"])\n\nplt.figure(figsize=(6, 6))\nsns.heatmap(cm, annot=True, fmt='g', vmin=0, cmap='Blues', cbar=False)\nplt.xticks(np.arange(2) + 0.5, [\"GENUINE\", \"FORGED\"])\nplt.yticks(np.arange(2) + 0.5, [\"GENUINE\", \"FORGED\"])\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Actual\")\nplt.title(\"Confusion Matrix\")\nplt.show()\n\nprint(\"Classification Report:\\n----------------------\\n\", clr)","89705821":"# Preprocessing","4782d211":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/UuyH60UIDPQ","2c6a2659":"# Task for Today  \n\n***\n\n## Bank Note Forgery Detection  \n  \nGiven *data about images of bank notes*, let's try to predict if a given note is **forged** or not.  \n  \nWe will use a logistic regression model to make our predictions.","9a4bbadd":"# Training","cb4e437a":"# Exploratory Data Analysis","e10d4dd3":"# Results","dff07c18":"# Getting Started"}}