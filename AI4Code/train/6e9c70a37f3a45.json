{"cell_type":{"2abc6096":"code","f4e7982f":"code","c8e20b9e":"code","94163daa":"code","9dd81e53":"code","0d87878d":"code","8adf2d34":"code","5d9f25ed":"code","3d3ed777":"code","ed538428":"code","620b2a47":"code","aa8e7002":"code","f347ff1c":"code","bc502d92":"code","d58e36e0":"markdown","493ecb4b":"markdown","9c4c463e":"markdown","9b0f57ad":"markdown","6b78856c":"markdown","71c1f660":"markdown","8cbb2e2d":"markdown","258a4bfe":"markdown","8818cb85":"markdown","f887bebf":"markdown","15792e36":"markdown","fa0e0fc7":"markdown","90199096":"markdown","b9add6b5":"markdown","f9665fe7":"markdown","440f88cc":"markdown","7c506d9a":"markdown","f5883225":"markdown","34ed5d27":"markdown","09783777":"markdown","990c8ee2":"markdown","3faf145e":"markdown","2699c560":"markdown","379554fa":"markdown"},"source":{"2abc6096":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f4e7982f":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nhab = pd.read_csv(\"..\/input\/haberman.csv\",names = ['Age', 'Operation_year', 'Positive_axillary_nodes', 'Survival_status'])\nhab.info()","c8e20b9e":"features = list(hab.columns[:-1])\nclasses = hab.Survival_status.value_counts()\nprint(\"No. of points:\",len(hab))\nprint(\"No. of features:\",len(features),' namely',','.join(features))\nprint(\"No. of classes:\",len(classes))\nprint(\"No. of points per classes:\\n\",classes)","94163daa":"hab.describe()","9dd81e53":"'''f = plt.figure(figsize=(48,28))\nhab1 = hab.groupby(['Age','Survival_status']).size()\nhab1.unstack().plot(kind='bar',figsize=(28,10),fontsize=20,label=['survived 5 years or longer','died within 5 year'])\nplt.show()'''\n","0d87878d":"f,ax = plt.subplots(1,2,figsize=(18,8))\nhab['Survival_status'].value_counts().plot(kind='pie',explode=[0,0.1],autopct='%1.1f%%', ax=ax[0],labels=['survived 5 years or longer','died within 5 year'],fontsize=15, shadow=True)\nax[0].set_title('Survival Status',fontsize=25)\nax[0].set_ylabel('')\nsns.countplot(hab['Survival_status'], ax=ax[1])\nax[1].set_title('Survival Status',fontsize=25)\nax[1].set_xticklabels(labels=['survived 5 years or longer','died within 5 year'],fontsize=15)\nfor p in ax[1].patches:\n    ax[1].annotate('{:d}'.format(p.get_height()), (p.get_x()+0.35, p.get_height()+3),fontsize=15)\nplt.show()","8adf2d34":"for idx, feature in enumerate(list(hab.columns)[:-1]):\n    g=sns.FacetGrid(hab, hue=\"Survival_status\", size=6) \\\n       .map(sns.distplot, feature) \\\n       .add_legend()\n    new_labels = ['survived 5 years or longer','died within 5 year'] \n    for t, l in zip(g._legend.texts, new_labels): t.set_text(l) \n    plt.ylabel(\"Density\")\n    plt.title(\"Histogram of \"+feature)\n    plt.show()","5d9f25ed":"class_1 = hab.loc[hab[\"Survival_status\"] == 1];\nclass_2 = hab.loc[hab[\"Survival_status\"] == 2];\n","3d3ed777":"for idx, feature in enumerate(list(hab.columns)[:-1]):\n    plt.figure(figsize=(10,5))\n    \n    label = ['PDF of those who survived 5 years or longer','CDF of those who survived 5 years or longer','PDF of those who died within 5 year','CDF of those who died within 5 year']\n    \n    counts, bin_edges = np.histogram(class_1[feature], bins=10,density = True)\n    pdf = counts\/(sum(counts))\n    print(\"PDF: \",pdf);\n    print(\"Bin edges: \",bin_edges);\n    \n    cdf = np.cumsum(pdf)\n    plt.plot(bin_edges[1:],pdf)\n    plt.plot(bin_edges[1:], cdf)\n    \n    counts, bin_edges = np.histogram(class_2[feature], bins=10,density = True)\n    pdf = counts\/(sum(counts))\n    print(\"PDF: \",pdf);\n    print(\"Bin edges: \",bin_edges);  \n\n    cdf = np.cumsum(pdf)\n    plt.plot(bin_edges[1:],pdf)\n    plt.plot(bin_edges[1:], cdf)\n    \n    plt.ylabel(\"Density\")\n    plt.title(\"PDF and CDF of \"+feature)\n    \n    plt.legend(label)\n    \n    plt.show()\n","ed538428":"labels = ['survived 5 years or longer','died within 5 year']\nfig, axes = plt.subplots(1, 3, figsize=(25, 5))\n\nfor idx, feature in enumerate(list(hab.columns)[:-1]):\n\n    ax=sns.boxplot(x='Survival_status',y=feature, data=hab,hue = \"Survival_status\",ax=axes[idx])\n    medians = hab.groupby(['Survival_status'])[feature].median().values\n    median_labels = [str(np.round(s, 2)) for s in medians]\n    pos = range(len(medians))\n    for tick,label in zip(pos,ax.get_xticklabels()):\n        ax.text(pos[tick]-0.1, medians[tick]+0.2, median_labels[tick], \n            horizontalalignment='center', size='x-large', color='b', weight='semibold')\n    h, l = ax.get_legend_handles_labels()\n    ax.legend(h, labels, title=\"Survival Status\")\n    ax.set_title(\"Box plot between {} and Survival_status\".format(feature))\n    #plt.legend(label)\n\nplt.show()","620b2a47":"labels = ['survived 5 years or longer','died within 5 year']\nfig, axes = plt.subplots(1, 3, figsize=(25, 5))\n\nfor idx, feature in enumerate(list(hab.columns)[:-1]):\n\n    ax=sns.violinplot(x='Survival_status',y=feature, data=hab,hue = \"Survival_status\",ax=axes[idx])\n    medians = hab.groupby(['Survival_status'])[feature].median().values\n    median_labels = [str(np.round(s, 2)) for s in medians]\n    pos = range(len(medians))\n    for tick,label in zip(pos,ax.get_xticklabels()):\n        ax.text(pos[tick]-0.1, medians[tick]+0.2, median_labels[tick], \n            horizontalalignment='center', size='x-large', color='b', weight='semibold')\n    h, l = ax.get_legend_handles_labels()\n    ax.legend(h, labels, title=\"Survival Status\")\n    ax.set_title(\"Violin plot between {} and Survival_status\".format(feature))\n    #plt.legend(label)\n\nplt.show()","aa8e7002":"for idx, feature in enumerate(list(hab.columns)[:-1]):\n    plt.figure(figsize=(10,5))\n    label = ['survived 5 years or longer','died within 5 year']\n    plt.plot(class_1[feature], np.zeros_like(class_1[feature]), 'o')\n    plt.plot(class_2[feature], np.zeros_like(class_2[feature]), 'o')\n    plt.title(\"1-D scatter plot for {}\".format(feature))\n    plt.xlabel(feature)\n    plt.legend(label)\n    plt.show()","f347ff1c":"import itertools\npairs=list(itertools.combinations(list(hab.columns)[:-1],2))\nfor p in pairs:\n    label = ['survived 5 years or longer','died within 5 year']\n    sns.set_style(\"whitegrid\");\n    sns.FacetGrid(hab, hue=\"Survival_status\", size=5) \\\n       .map(plt.scatter, p[0], p[1]) \n    plt.legend(label)\n    plt.show()","bc502d92":"label = ['survived 5 years or longer','died within 5 year']\nsns.set_style(\"whitegrid\");\nax=sns.pairplot(hab, hue=\"Survival_status\", vars = [\"Age\", \"Operation_year\", \"Positive_axillary_nodes\"],size=4);\nplt.legend(label)\nplt.show()\n","d58e36e0":"**Observations:**\n* Average age of the patient is 52 yrs and the range lies between 30 to 80 out of which: \n\n   * About 25 % of the patients have the age around 30-44.\n   * About 75% of the patients have the age around 30-60.\n\n* Max number of positive auxillary nodes detected is 52.\n     * About 25% of the patients have no positive axillary lymph nodes.\n     * About 75 % of the patients have around 0-4 positive axillary lymph nodes.           \n* About 75% of the patients have survived 5 years or more than it.\n* About 25% of the patients have survived less than 5 years.\n","493ecb4b":"### Scatter Plot\n* visualizes the bivariate relationships among several pairs of variables.\n* The graph looks like a bunch of dots, but some of the graphs are a general shape or move in a general direction.\n* To test the linear relationship between continuous variables Scatter plot is a good option. We can find out how one variable is changing w.r.t. another variable.","9c4c463e":"### CDF\nThe cumulative distribution function (CDF) of a real-valued random variable X is the probability that X will take a value less than or equal to x.","9b0f57ad":"### PAIR PLOT\nA pairs plot allows us to see both distribution of single variables and relationships between two variables.\n","6b78856c":"### BOX PLOT\n* Efficient way for presenting data, especially when it comes to comparing multiple groups thereof.\n* We can mark-off the five-number summary of a data set (minimum, 25th percentile, median, 75th percentile, maximum). \n* The box contains 50% of the data, and the upper edge of the box represents the 75th percentile, while the lower edge is the 25th percentile.\n* The median is represented by a line drawn in the middle of the box. \n* The interquartile range(IQR) is the difference between the upper quartile and the lower quartile.\n* Useful because it is less influenced by extreme values as it limits the range to the middle 50% of the values.","71c1f660":"**OBSERVATIONS:**\n* No of instances = 306\n* There is no missing values in all of the three attributes.\n* All the attribute's values are in integer.","8cbb2e2d":"## Bi-variate analysis\n* Analysis of exactly two variables.\n* One of the simplest forms of statistical analysis, used to find out if there is a relationship between two sets of values.\n\nExamples: **scatter plots, pair-plots**","258a4bfe":"### STATISTICAL INFORMATION","8818cb85":"### VIOLIN PLOT\n* A Violin Plot is used to visualise the distribution of the data and its probability density.\n* It's a combination of a Box Plot and a Density Plot.\n* The thick black bar in the centre represents the interquartile range, the thin black line extended from it represents the 95% confidence intervals, and the white dot is the median.\n","f887bebf":"### PDF\n* A histogram can be used to illustrate the shape, or the distribution, of data. It plot the frequency of score occurrences in a continuous data set that has been divided into classes, called bins. The height of the bins either represents counts, or it represents proportions.\n* A probability density function (PDF) is the continuous version of the histogram with densities (consider infinitesimal small bin widths).\n* It specifies\u00a0how the probability density is distributed over the range of values that a random variable can take.","15792e36":"**Observation:**\n\nData is having imbalanced classes.","fa0e0fc7":"**Observations:**\n* Out of **306** patients **225** patients *survived 5 years or longer* than it i.e. About **73.5%** of the total patients lived for *5 years or longer than that*.\n* **81** patients *died within 5 years* i.e **26.5%** of the total patients *died within 5 years*.","90199096":"**Observation:**\nAs we can the Survival status classes are overlapping massively in each of the Histogram of feature. But from the last one we can conclude that around 56-58% people who survived 5 years or longer had 0-5 Positive axillary nodes.","b9add6b5":"## Univariate Analysis\n It provides summary statistics for each field in the raw data set. \n Example:  **PDF ,CDF ,Box plot ,Violin plot**.\n It does not deal with cause or relationships and the main purpose of the analysis is to describe the data and find patterns  that exist within it.\n \n","f9665fe7":"**Observations:**\n* Classes are linearly inseparable in all the cases and doesn't convey much info.\n* But we can draw little info from the plot between Positive axillary nodes and age, that the person having age between 50-60 and no of lymph detected between the range 0-3 have some chances to survive.\n","440f88cc":" ## Objective\n***To predict the patient survival who had undergone surgery for breast cancer.***","7c506d9a":"**Observations**\n* The patients who operated after 1965 had chances to survive and below 1960 had chances to die.\n* Those who died within 5 years had atleast 4 positive axillary nodes.","f5883225":"## Higher Level Statics","34ed5d27":"**Observation**\n*  About 16% who survived 5 years or more than it are aged around 35-38.\n* About 12% who died within 5 years had  47-52 +ve axillary nodes ","09783777":"**2D Scatter plot**","990c8ee2":"### How many survived 5 years or more than it?","3faf145e":"**Observations:**\n* Of around 41-67 aged people died within 5 years.\n* Below 37 aged people had chances to survive 5 years or longer than that.\n* 1D scatter plot for operation year and +ve axillary nodes are not useful as they don't give much information.","2699c560":"**1D scatter plot**","379554fa":"# ABOUT HABERNMAN'S SURVIVAL DATA SET\nThe dataset contains cases from a study that was conducted between 1958 and 1970 at the University of Chicago's Billings Hospital on the survival of patients who had undergone surgery for breast cancer.\n***\n### ATTRIBUTES:\n\n**Age:** Age of patient at time of operation (numerical) .  \n\n**Op_Year:** Patient's year of operation (year - 1900, numerical) \n\n**Axil_nodes: **Number of positive axillary nodes detected (numerical) \n\n**Surv_status: **Survival status (class attribute) \n\n  ----------------**1** = the patient survived 5 years or longer \n\n----------------**2** = the patient died within 5 year\n                    \n\n\n"}}