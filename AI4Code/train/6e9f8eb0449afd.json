{"cell_type":{"e29d480b":"code","8c3f04ce":"code","6d0c1acf":"code","630be8f7":"code","7f2a0c1c":"code","c1478d4b":"code","fc56a40b":"code","42548cba":"code","cd1cc607":"code","9f7fc024":"code","dd934327":"code","a4096fa2":"code","02abcc0e":"code","d08fb0ec":"code","07518c97":"code","17006b3d":"code","0e995a2d":"code","b5fd5e40":"code","c1028edf":"code","ffcc2f7d":"code","718514da":"code","0a639d88":"code","32a17628":"code","35c0922d":"code","bae16043":"code","ddb1d851":"code","c2cba183":"code","75c3df1e":"code","d5ff9591":"code","44956414":"code","3d7e0219":"code","28c09424":"code","93958fd4":"code","9e90fa4c":"code","32f31585":"code","6b7a5df6":"code","021cc30a":"code","86601f21":"code","6ba67711":"code","fcca0b29":"code","145a25ce":"code","3ac36a43":"code","e57d2764":"code","c40ee465":"code","a608a2e8":"code","85c9908f":"code","0d11b834":"code","de3d89d0":"markdown","2d5b09d8":"markdown","bbcb6036":"markdown","a94ce545":"markdown"},"source":{"e29d480b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8c3f04ce":"df_train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_train.head()","6d0c1acf":"df_test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndf_test.head()","630be8f7":"df_test_pred=pd.read_csv('..\/input\/titanic-leaked\/titanic.csv')\ndf_test_pred","7f2a0c1c":"df_result=pd.read_csv('..\/input\/titanic\/gender_submission.csv')\ndf_result","c1478d4b":"y=df_train.Survived\ny1=df_test_pred.Survived","fc56a40b":"X=df_train[['Pclass', 'Sex', 'SibSp','Parch', 'Fare', 'Embarked']].copy()\nX1=df_test[['Pclass', 'Sex', 'SibSp','Parch', 'Fare', 'Embarked']].copy()","42548cba":"X_train = pd.get_dummies(X[['Pclass', 'Sex', 'Embarked']].astype(str))\nX_train=X_train.join(X[['Fare','SibSp','Parch']])","cd1cc607":"X_train=X_train.drop('Embarked_nan',axis=1)","9f7fc024":"X_train.isna().sum()","dd934327":"X_train['Age']=df_train['Age'].interpolate()","a4096fa2":"X_test = pd.get_dummies(X1[['Pclass', 'Sex', 'Embarked']].astype(str))\nX_test=X_test.join(X1[['Fare','SibSp','Parch']])\nX_test['Age']=df_test['Age'].interpolate()\nX_test.isna().sum()","02abcc0e":"X_test.Fare=X_test.Fare.fillna(X_test.Fare.mean())","d08fb0ec":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X_train)\n\nX_train = scaler.transform(X_train)\nX_test= scaler.transform(X_test)","07518c97":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=13)\nclassifier.fit(X_train, y)","17006b3d":"y_pred = classifier.predict(X_test)","0e995a2d":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nprint(accuracy_score(y1, y_pred))","b5fd5e40":"error = []\n\n# Calculating error for K values between 1 and 40\nfor i in range(1, 40):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y)\n    pred_i = knn.predict(X_test)\n    error.append(np.mean(pred_i != y1))","c1028edf":"plt.figure(figsize=(12, 6))\nplt.plot(range(1, 40), error, color='red', linestyle='dashed', marker='o',\n         markerfacecolor='blue', markersize=10)\nplt.title('Error Rate K Value')\nplt.xlabel('K Value')\nplt.ylabel('Mean Error')","ffcc2f7d":"df_result['Survived']=y_pred\ndf_result.to_csv('submissionknn1.csv',index=False)","718514da":"from sklearn.ensemble import RandomForestClassifier\nclassifier2 = RandomForestClassifier(n_estimators=300,max_features=4)\nclassifier2.fit(X_train, y)","0a639d88":"y_pred = classifier2.predict(X_test)","32a17628":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nprint(accuracy_score(y1, y_pred))","35c0922d":"error = []\n\n# Calculating error for K values between 1 and 40\nfor i in range(1,9):\n    e=[]\n    for j in range(10, 1000,100):\n        knn = RandomForestClassifier(n_estimators=j,max_features=i)\n        knn.fit(X_train, y)\n        pred_i = knn.predict(X_test)\n        e.append(np.mean(pred_i != y1))\n    error.append(e)","bae16043":"np.argwhere(error == np.min(error))","ddb1d851":"plt.figure(figsize=(12, 6))\nplt.plot(range(1, 11), error[4], color='red', linestyle='dashed', marker='o', markerfacecolor='blue', markersize=10)\nplt.title('Error Rate K Value')\nplt.xlabel('n Value')\n# plt.xticks([i for i in range(0,1000,50)])","c2cba183":"error[4]","75c3df1e":"error[11]","d5ff9591":"error[8]","44956414":"df_gender_submission['Survived']=y_pred\ndf_gender_submission.to_csv('submissionRF.csv',index=False)","3d7e0219":"from xgboost import XGBClassifier","28c09424":"model = XGBClassifier(n_estimators=100)\nmodel.fit(X_train, y)","93958fd4":"y_pred=model.predict(X_test)","9e90fa4c":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nprint(accuracy_score(y1, y_pred))","32f31585":"error = []\n\n# Calculating error for K values between 1 and 40\nfor i in range(0, 1000,100):\n    knn = XGBClassifier(n_estimators=i)\n    knn.fit(X_train, y)\n    pred_i = knn.predict(X_test)\n    error.append(np.mean(pred_i != y1))","6b7a5df6":"plt.figure(figsize=(12, 6))\nplt.plot(range(10, 1000,100), error, color='red', linestyle='dashed', marker='o', markerfacecolor='blue', markersize=10)\nplt.title('Error Rate K Value')\nplt.xlabel('n Value')","021cc30a":"import tensorflow as tf\nimport keras","86601f21":"from keras.models import Sequential\nfrom keras.layers import Dense","6ba67711":"X_train.shape","fcca0b29":"def train(i=128,j=256):\n    model = Sequential()\n    model.add(Dense(i, input_dim=12, activation='relu'))\n    model.add(Dense(j, activation='relu'))\n    model.add(Dense(1, activation='sigmoid'))\n    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n    model.fit(X_train,y,epochs=50,validation_data=(X_test,y1),verbose=0)\n    y_pred=rounded = [round(x[0]) for x in model.predict(X_test)]\n    return accuracy_score(y1,y_pred)","145a25ce":"train()","3ac36a43":"accuracy=[]\nfor i in range(3,10):\n    accuracy.append(train(2**i,2**i+1))","e57d2764":"for i in accuracy:\n    print(i)","c40ee465":"df_test","a608a2e8":"print()","85c9908f":"df_gender_submission.Survived=y_pred","0d11b834":"df_gender_submission.to_csv('submissionANN.csv',index=False)","de3d89d0":"# Scaling","2d5b09d8":"# Preparing DATA","bbcb6036":"# **KNN**","a94ce545":"# \n**RANDOM FOREST**"}}