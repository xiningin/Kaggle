{"cell_type":{"f920a9c6":"code","0c34d8c0":"code","e8119002":"code","38d0360c":"code","811f30b5":"code","0de6f3f6":"code","eb84d8a2":"code","8c826e33":"code","b3c31756":"code","cd75ab97":"code","7a0c584a":"code","091b482c":"markdown","fb615c8c":"markdown","5ca5be1a":"markdown","2ac1a79e":"markdown","8cc4ff80":"markdown","3a8f8edc":"markdown"},"source":{"f920a9c6":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","0c34d8c0":"# Working Folders\ninp_folder = '\/kaggle\/input\/covid19-rj\/'\nout_folder = '\/kaggle\/working\/'\n\n# Original File: rio_covid19_kaggle.csv (https:\/\/www.kaggle.com\/resendeacm\/covid19-rj\/)\nfilename = inp_folder + 'rio_covid19_kaggle.csv'\n\n# Retrieve Main Dataset\ndf = pd.read_csv(filename, header=0)\n\n# Time Course: Rio de Janeiro (City)\nrio_city_general = df.groupby(['Date']).sum().reset_index()\n\n# Last Recorded Day: All Neighborhoods\nlast_day = df['Date'][-1:].iloc[0]\nlast_recorded = df[df['Date'] == last_day]\nlast_recorded_cases = last_recorded.sort_values(by=['Cases'], ascending=False)\nlast_recorded_deaths = last_recorded.sort_values(by=['Deaths'], ascending=False)\nlast_recorded_recovered = last_recorded.sort_values(by=['Recovered'], ascending=False)","e8119002":"# Time Course Table: Rio de Janeiro (City)\nrio_city_general.tail(10).style.background_gradient(cmap='Blues', subset=[\"Cases\"])\\\n                      .background_gradient(cmap='Reds', subset=[\"Deaths\"])\\\n                      .background_gradient(cmap='Greens', subset=[\"Recovered\"])","38d0360c":"# Time Course Figure: Rio de Janeiro (City)\nfig, axes = plt.subplots(figsize=(10,8))\n\n# Plot Quantities\nrio_city_general.plot(x='Date', y='Cases', style='--bo', markersize=5, ax=axes)\nrio_city_general.plot(x='Date', y='Deaths', style='--ro', markersize=5, ax=axes)\nrio_city_general.plot(x='Date', y='Recovered', style='--go', markersize=5, ax=axes)\nplt.grid(alpha=0.3)\n\n# Fill Curves\nplt.fill_between(rio_city_general['Date'], 0, rio_city_general['Deaths'], color='red', alpha=0.3)\nplt.fill_between(rio_city_general['Date'], 0, rio_city_general['Recovered'], color='green', alpha=0.15)\nplt.fill_between(rio_city_general['Date'], 0, rio_city_general['Cases'], color='blue', alpha=0.1)\n\n# Plot Labels & Title\nplt.ylabel('Confirmed Cases, Deaths & Recovered')\nplt.title('Rio de Janeiro (City): Status COVID-19')\n\n# Save Figure\nplt.savefig(out_folder + 'rio_city_general.png')\nplt.show()\nplt.close()","811f30b5":"# Last Recorded Day: All Neighborhoods - Sorted (Confirmed Cases)\nlast_recorded_cases.head(10).style.background_gradient(cmap='Blues',subset=[\"Cases\"])\\\n                         .background_gradient(cmap='Reds',subset=[\"Deaths\"])\\\n                         .background_gradient(cmap='Greens',subset=[\"Recovered\"])","0de6f3f6":"# Last Recorded Day: TOP10 Neighborhoods (Confirmed Cases)\nfig, axes = plt.subplots(figsize=(10,8))\nplt.axes(axisbelow=True)\n\n# Plot Quantities\nplt.barh(last_recorded_cases['Neighborhood'].values[:10], last_recorded_cases['Cases'].values[:10], color=\"slateblue\")\nplt.grid(alpha=0.3)\n\n# Plot Labels & Title\nplt.xlabel(\"Confirmed Cases\")\nplt.title(\"TOP10 Neighborhoods (COVID-19 Confirmed Cases): \" + last_day)\n\n# Save Figure\nplt.tight_layout()\nplt.savefig(out_folder + 'top10_confirmed_cases.png')\nplt.show()\nplt.close()","eb84d8a2":"# Last Recorded Day: All Neighborhoods - Sorted (Deaths)\nlast_recorded_deaths.head(10).style.background_gradient(cmap='Blues',subset=[\"Cases\"])\\\n                          .background_gradient(cmap='Reds',subset=[\"Deaths\"])\\\n                          .background_gradient(cmap='Greens',subset=[\"Recovered\"])","8c826e33":"# Last Recorded Day: TOP10 Neighborhoods (Deaths)\nfig, axes = plt.subplots(figsize=(10,8))\nplt.axes(axisbelow=True)\n\n# Plot Quantities\nplt.barh(last_recorded_deaths['Neighborhood'].values[:10], last_recorded_deaths['Deaths'].values[:10], color=\"crimson\")\nplt.grid(alpha=0.3)\n\n# Plot Labels & Title\nplt.xlabel(\"Deaths\")\nplt.title(\"TOP10 Neighborhoods (COVID-19 Deaths): \" + last_day)\n\n# Save Figure\nplt.tight_layout()\nplt.savefig(out_folder + 'top10_deaths.png')\nplt.show()\nplt.close()","b3c31756":"# Last Recorded Day: All Neighborhoods - Sorted (Recovered)\nlast_recorded_recovered.head(10).style.background_gradient(cmap='Blues',subset=[\"Cases\"])\\\n                             .background_gradient(cmap='Reds',subset=[\"Deaths\"])\\\n                             .background_gradient(cmap='Greens',subset=[\"Recovered\"])","cd75ab97":"# Last Recorded Day: TOP10 Neighborhoods (Recovered)\nfig, axes = plt.subplots(figsize=(10,8))\nplt.axes(axisbelow=True)\n\n# Plot Quantities\nplt.barh(last_recorded_recovered['Neighborhood'].values[:10], last_recorded_recovered['Recovered'].values[:10], color=\"darkcyan\")\nplt.grid(alpha=0.3)\n\n# Plot Labels & Title\nplt.xlabel(\"Recovered\")\nplt.title(\"TOP10 Neighborhoods (COVID-19 Recovered): \" + last_day)\n\n# Save Figure\nplt.tight_layout()\nplt.savefig(out_folder + 'top10_recovered.png')\nplt.show()\nplt.close()","7a0c584a":"# Last Recorded Day: TOP10 Neighborhoods (Confirmed Cases)\ntop10_confirmed = last_recorded_cases['Neighborhood'].values[:10]\n\n# Subplot Options\ncols = 2\nrows = int(len(top10_confirmed)\/2)\nfig, axes = plt.subplots(nrows=rows, ncols=cols, figsize=(15,20))\n\n# TOP10 Plot\nfor cont, neighborhood in enumerate(top10_confirmed):\n    # Neighborhood\/Position Relation\n    i = int(cont\/cols)\n    j = cont - i*cols\n    \n    # Select Neighborhood & Plot Quantities\n    dfplot = df[df['Neighborhood'] == neighborhood]\n    dfplot.plot(x='Date', y='Cases', style='--bo', markersize=5, ax=axes[i,j])\n    dfplot.plot(x='Date', y='Deaths', style='--ro', markersize=5, ax=axes[i,j])\n    dfplot.plot(x='Date', y='Recovered', style='--go', markersize=5, ax=axes[i,j])\n    axes[i,j].grid(alpha=0.3)\n    \n    # Fill Curves\n    axes[i,j].fill_between(dfplot['Date'], 0, dfplot['Deaths'], color='red', alpha=0.3)\n    axes[i,j].fill_between(dfplot['Date'], 0, dfplot['Recovered'], color='green', alpha=0.15)\n    axes[i,j].fill_between(dfplot['Date'], 0, dfplot['Cases'], color='blue', alpha=0.1)\n    \n    # Plot Labels & Title\n    axes[i,j].set_title(neighborhood + ' (COVID-19)')\n    axes[i,j].set_ylabel('Confirmed Cases, Deaths & Recovered')\n\n# Save Figure\nfig.tight_layout(pad=3.0)\nplt.savefig(out_folder + 'top10_time_course.png')\nplt.show()\nplt.close()","091b482c":"### Time Course: Some Neighborhoods","fb615c8c":"<img src=\"https:\/\/i.imgur.com\/H6b3KTo.png\" width=\"13%\" align=\"left\"><br>\n\nIf you find this notebook useful, please support data sharing by referencing [its original source](https:\/\/www.kaggle.com\/resendeacm\/covid19-rj). Don't forget to upvote, please. :)\n***\n\n### Context - [World Health Organization (WHO)](https:\/\/www.who.int\/health-topics\/coronavirus#tab=tab_1)\n\n+ Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus (2019-nCoV).\n+ At this time, there are no specific vaccines or treatments for COVID-19. However, there are many ongoing clinical trials evaluating potential treatments.\n+ The best way to prevent and slow down transmission is to be well informed about the COVID-19 virus, the disease it causes, and how it spreads. \n+ As of 28 April 2020, 71.886 cases have been confirmed in Brazil.\n","5ca5be1a":"### Time Course: Rio de Janeiro (City)","2ac1a79e":"### Pre-Processing","8cc4ff80":"### Imports","3a8f8edc":"### Last Recorded Day: Neighborhood Analysis"}}