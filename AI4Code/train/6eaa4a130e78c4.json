{"cell_type":{"e12c2e07":"code","9c5f42f5":"code","66e88f47":"code","be4e1781":"code","9d174450":"code","bfb450bd":"code","3d5facac":"code","603d7304":"code","80e8d283":"code","b455252e":"code","70cbf227":"code","f3802052":"code","ac0ca329":"code","02ec56b7":"code","446dd501":"code","2e437045":"code","2c22514c":"code","b7baf212":"code","ea502ffe":"code","f3a09235":"code","fbe56f40":"code","5969dff3":"code","4bcbaae1":"code","e4e0db03":"code","646e3cb3":"code","0366604b":"code","169e6f82":"code","5a3397c3":"code","24f2e488":"code","3fa36b8e":"code","6b5b49f2":"code","96c61d5d":"code","40960858":"code","89323929":"code","726de08f":"code","2fa2bba6":"code","472f19de":"code","e4f3930b":"markdown","59aa758c":"markdown","3f62a47c":"markdown","67ec4062":"markdown","9249783d":"markdown","c3441338":"markdown","f422a5b3":"markdown"},"source":{"e12c2e07":"import numpy as np \nimport pandas as pd \nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import Normalizer\nfrom sklearn.model_selection import train_test_split","9c5f42f5":"train = pd.read_csv('..\/input\/Train.csv')\ntest = pd.read_csv('..\/input\/Test.csv')","66e88f47":"train.describe()","be4e1781":"test.describe()","9d174450":"train.isnull().sum()","bfb450bd":"test.isnull().sum()","3d5facac":"#plotting correlations\nnum_feat=train.columns[train.dtypes!=object]\nnum_feat=num_feat[1:-1] \nlabels = []\nvalues = []\nfor col in num_feat:\n    labels.append(col)\n    values.append(np.corrcoef(train[col].values, train.target.values)[0,1])\n\nind = np.arange(len(labels))\nwidth = 0.9\nfig, ax = plt.subplots(figsize=(12,8))\nrects = ax.barh(ind, np.array(values), color='red')\nax.set_yticks(ind+((width)\/2.))\nax.set_yticklabels(labels, rotation='horizontal')\nax.set_xlabel(\"Correlation coefficient\")\nax.set_title(\"Correlation Coefficients w.r.t target\");","603d7304":"#Heatmap\ncorrMatrix=train[num_feat].corr()\nsns.set(font_scale=1.10)\nplt.figure(figsize=(10, 10))\nsns.heatmap(corrMatrix, vmax=.8, linewidths=0.01,\n            square=True,annot=True,cmap='viridis',linecolor=\"white\")\nplt.title('Correlation between features');","80e8d283":"plt.hist((train.target),bins=152)\nplt.show()","b455252e":"# Let's see how the numeric data is distributed.\n\ntrain.hist(bins=10, figsize=(20,15), color='#E14906')\nplt.show()","70cbf227":"combined = train.append(test)\ncombined.reset_index(inplace=True)\n","f3802052":"combined.describe()","ac0ca329":"y = combined['target']\nx = combined.drop('target', axis=1)","02ec56b7":"y.describe()","446dd501":"x.describe()","2e437045":"X_train, X_test, y_train, y_test = train_test_split(x, y ,test_size=0.2)","2c22514c":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","b7baf212":"# Implimenting Linear Regression from inbuilt function of sklearn\nfrom sklearn.linear_model import LinearRegression\nreg=LinearRegression(fit_intercept=True)\nmodel = reg.fit(X_train,y_train)\npredict = model.predict(X_test)","ea502ffe":"#Predicting Score\nfrom sklearn.metrics import r2_score\nprint(r2_score(y_test,predict))","f3a09235":"print(\"Training Score %.4f\"%reg.score(X_train,y_train))\nprint(\"Testing Score %.4f\"%reg.score(X_test,y_test))","fbe56f40":"from sklearn.model_selection import cross_val_score","5969dff3":"scores=cross_val_score(reg,X_train,y_train,cv=10,scoring='r2')","4bcbaae1":"print(scores)","e4e0db03":"print(scores.mean())","646e3cb3":"print(scores.std())","0366604b":"scores=cross_val_score(reg,X_train,y_train,cv=10,scoring='neg_mean_squared_error')","169e6f82":"print(scores)","5a3397c3":"#Average loss\nprint(scores.mean())","24f2e488":"print(scores.std())","3fa36b8e":"y_pred = reg.predict(X_test)\nplt.figure(figsize=(10, 5))\nplt.scatter(y_test, y_pred, s=20)\nplt.title('Predicted vs. Actual')\nplt.xlabel('Actual target')\nplt.ylabel('Predicted target')\n\nplt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)],'r')\nplt.tight_layout()","6b5b49f2":"y_pred.shape","96c61d5d":"print(\"predicted values for 400 test data are\", y_pred)","40960858":"df = pd.DataFrame(y_pred)\n","89323929":"df.index.names = [\"index\"]","726de08f":"df.columns = [\"Predicted values\"]","2fa2bba6":"df.head()","472f19de":"df.to_csv('predictedres.csv')","e4f3930b":"# Linear Regression \n\nBy merging train.csv and test.csv data and then splitting in 80:20 ratio\n\nthen creating model\n\nand calculating score","59aa758c":"## Linear Regression fit","3f62a47c":"### Calculating loss\n","67ec4062":"# Cross Validation","9249783d":"### So we got cleaned data\n\nAll are contineous","c3441338":"### Splitting into 80:20","f422a5b3":"### Predicted Values"}}