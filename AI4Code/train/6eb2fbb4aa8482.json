{"cell_type":{"11776ab1":"code","2bc49a92":"code","01ca7d74":"code","634b0607":"code","aa234a18":"code","a4111158":"code","13039e92":"markdown","eb45e074":"markdown"},"source":{"11776ab1":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","2bc49a92":"# all our submissions paths\nvoters = [\n    \"..\/input\/tps-apr-data-visualization-and-engineering\/lightautoml_utilized_300s_f1_metric.csv\",\n    \"..\/input\/n3-tps-april-21-lightautoml-starter\/submission_N3.csv\",\n    \"..\/input\/tps-april-2021-lgbm-optuna\/submission.csv\",\n    \"..\/input\/bagged-lgbms\/submission_prob.csv\"\n]\n\n# Our voters\nvoter_tags = [\"AndresHG\", \"alexryzhkov\", \"Tommaso Guerrini\", \"danzel\"]","01ca7d74":"combined_votes = pd.DataFrame()\n\nfor voter in voters:\n    d = pd.read_csv(voter)\n    combined_votes = pd.concat([combined_votes, d[['Survived']]], \n                             axis=1)\n    \ncombined_votes.columns=voter_tags    \n\ncombined_votes_corr = combined_votes.corr()\n\nsns.set(font_scale=1.3)\n\nfig,axes=plt.subplots(figsize=(12,12))\n\nsns.heatmap(combined_votes_corr,\n           annot=True,\n           vmin=0.7,\n           vmax=1,\n           fmt='.3f',\n           linewidth=1,\n         annot_kws={\"fontsize\":8})\n\nplt.title('Vote Correlations')\nplt.tight_layout()","634b0607":"combined_votes[\"Results\"] = combined_votes.sum(axis=1)","aa234a18":"# predict 1 if the majority of our voters say so\ncombined_votes[\"Survived\"] = combined_votes[\"Results\"].apply(lambda x: 1 if x > len(voters)\/2 else 0)","a4111158":"# create our submission\nsub_df = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv\")\nsub_df[\"Survived\"] = combined_votes[\"Survived\"]\nsub_df.to_csv(\"submission.csv\", index=False)","13039e92":"## What is voting ensembling?\nThe answer is fairly simple. \n\nWe just look at each row of our submission and retrive the prediction of each model (the votes). Then we count the votes for \"Survived\" (1) or \"Not Survived\" (0) and the prediction with the most votes wins.","eb45e074":"\n# Voting Baseline - Solving the Synthanic using Democracy\nThis notebook provides a simple baseline to ensemble submissions using voting.\n\n\n### Credits\nI used a random selection of public notebooks. All credit goes to the creators:\n\n@andreshg: https:\/\/www.kaggle.com\/andreshg\/tps-apr-data-visualization-and-engineering\n\n@Alexander Ryzhkov: https:\/\/www.kaggle.com\/alexryzhkov\/n3-tps-april-21-lightautoml-starter\n\n@tomwarrens: https:\/\/www.kaggle.com\/tomwarrens\/tps-april-2021-lgbm-optuna\n\n@springmanndaniel: https:\/\/www.kaggle.com\/springmanndaniel\/bagged-lgbms"}}