{"cell_type":{"1cb57231":"code","0b183df9":"code","b5167313":"code","3c79d236":"code","601d4711":"code","efe1984e":"code","573c4273":"code","21686760":"code","9409ee80":"code","0c8405e3":"code","4a53e265":"code","2e23089f":"code","0d98db07":"code","da5882b0":"code","809eeba7":"code","6a98d9c5":"code","30fb2ca4":"code","2ee8dd24":"code","fd427001":"code","6a44c00f":"code","c58a1931":"code","195e2209":"markdown","767dbe8c":"markdown","4b4c86a2":"markdown","ab4b5bed":"markdown","51aa86ba":"markdown","00c4b9af":"markdown","466aec51":"markdown","fc76ecd2":"markdown","3f768422":"markdown","e99e2f8a":"markdown","8e743e05":"markdown","10af7183":"markdown","93abfdd7":"markdown","4d206f3c":"markdown","0b9f3867":"markdown","417119ff":"markdown","5bf93f2f":"markdown","3ada927f":"markdown","02f79fff":"markdown","9f56f0c3":"markdown","cba638c8":"markdown","066206a6":"markdown","6471ef10":"markdown","6710fc79":"markdown","1e521edb":"markdown","68c3cfd9":"markdown","0a13e391":"markdown","ea8ed2be":"markdown","d1877705":"markdown","33e1bf59":"markdown","56a32400":"markdown","377befee":"markdown","54320eff":"markdown"},"source":{"1cb57231":"#imports\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport matplotlib.pyplot as plt  # Matlab-style plotting\nimport seaborn as sns\ncolor = sns.color_palette()\nsns.set_style('darkgrid')\nimport warnings\ndef ignore_warn(*args, **kwargs):\n    pass\nwarnings.warn = ignore_warn #ignore annoying warning (from sklearn and seaborn)\nimport re # RegEx for string manipulaion\nfrom matplotlib import rc\nfrom scipy import stats\nfrom scipy.stats import norm, skew #for some statistics\nfont = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 15}\n\nrc('font', **font)\n\npd.set_option('display.float_format', lambda x: '{:.3f}'.format(x)) #Limiting floats output to 3 decimal points\n\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\")) #check the files available in the directory","0b183df9":"df = pd.read_csv(\"..\/input\/app-store-apple-data-set-10k-apps\/AppleStore.csv\")\ndf_description = pd.read_csv(\"..\/input\/app-store-apple-data-set-10k-apps\/appleStore_description.csv\")","b5167313":"print(\"Dataset: iOS App Store\")\nprint(\"Columns: \", list(df.columns))\nprint(\"Top five entries: \\n\", df.head(5))\nprint(\"Total entries: \", len(df))\nprint(\"Dataset: iOS App Store apps discription\")\nprint(\"Columns: \", list(df_description.columns))\nprint(\"Top five entries: \\n\", df_description.head(5))\nprint(\"Total entries: \", len(df_description))","3c79d236":"print(df['track_name'][70])\nprint(df['track_name'][84])\nprint(df['track_name'][1497])\nprint(df['track_name'][1511])\nprint(df['track_name'][5013])","601d4711":"def is_English(string):\n    non_ascii = 0\n\n    for character in string:\n        if ord(character) > 127:\n            non_ascii += 1\n\n    if non_ascii > 3:\n        return False\n    else:\n        return True\n\nprint(is_English('Docs To Go\u2122 Free Office Suite'))\nprint(is_English('Instachat <img draggable=\"false\" class=\"emoji\" alt=\"<img draggable=\"false\" class=\"emoji\" alt=\"<img draggable=\"false\" class=\"emoji\" alt=\"<img class=\"emoji\" alt=\"\ud83d\ude1c\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">'))\nprint(is_English('\u7231\u5947\u827aPPS -\u300a\u6b22\u4e50\u98822\u300b\u7535\u89c6\u5267\u70ed\u64ad'))","efe1984e":"ios_english = []\nfor i in range(len(df)):\n    app = df.iloc[i]\n    name = df['track_name'][i]\n    if is_English(name):\n        ios_english.append(app)","573c4273":"len(ios_english)","21686760":"ios_final = []\nfor app in ios_english:\n    price = float(app[5])\n    if price == 0.0:\n        ios_final.append(app)","9409ee80":"len(ios_final)","0c8405e3":"train = pd.DataFrame(ios_final, columns=df.columns)\ntrain.columns","4a53e265":"train.drop([\"Unnamed: 0\", \"price\", \"currency\"], axis=1, inplace=True)","2e23089f":"train.dtypes","0d98db07":"train.describe(include =['object', 'float64', 'int64'] )","da5882b0":"train.describe(include =['float64', 'int64'] )","809eeba7":"train.describe(include =['object'] )","6a98d9c5":"from collections import Counter\nfreq_counter = dict(Counter(train[\"prime_genre\"]))\nfreq_counter_pair = list(zip(freq_counter.keys(), freq_counter.values()))\nfreq_counter_pair.sort(key=lambda x: x[1], reverse = True)\nx = []\ny = []\nGenres_set = []\ni = 0\nfor x_, y_ in freq_counter_pair:\n    x.append(i)\n    i += 1\n    Genres_set.append(x_)\n    y.append(y_)\nfreq_table = pd.DataFrame(columns=[\"prime_genre\", \"Number of apps\"])\nfreq_table[\"prime_genre\"] = Genres_set\nfreq_table[\"Number of apps\"] = y\n\nf, ax = plt.subplots(figsize=(16, 16))\nfig = sns.barplot(x=x, y=y)\nax.title.set_text(\"Genre vs Total Number of Apps (Most common apps by Category)\")\nax.set_xlabel(\"prime_genres\")\nax.set_ylabel(\"Total Number of Apps\")\n\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Genres_set)), Genres_set)\nfreq_table","30fb2ca4":"# xs and ys were created above and using it here\ny_tmp = []\nfor i in y:\n    y_tmp.append(i\/len(train)*100)\nf, ax = plt.subplots(figsize=(16, 12))\nfig = sns.barplot(x=x, y=y_tmp)\nax.title.set_text(\"Genre vs Total Number of Apps (Most common apps by Category)\")\nax.set_xlabel(\"prime_genres\")\nax.set_ylabel(\"Total Number of Apps (in %)\")\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Genres_set)), Genres_set)\nprint()","2ee8dd24":"var = 'prime_genre'\ndata = pd.concat([train['rating_count_tot'], train[var].map(lambda x: Genres_set.index(x))], axis=1)\nf, ax = plt.subplots(figsize=(16, 12))\nresult = data.groupby([\"prime_genre\"])['rating_count_tot'].aggregate(np.mean).reset_index().sort_values('rating_count_tot', ascending=False)\nnew_mapping = list(result['prime_genre'])\nnew_list = []\nfor i in data['prime_genre']:\n    new_list.append(new_mapping.index(i))\ndata['prime_genre'] = new_list\nGenres_set_ = []\nfor i in new_mapping:\n    Genres_set_.append(Genres_set[i])\nfig = sns.barplot(x=var, y=\"rating_count_tot\", data=data)\nax.title.set_text(\"Prime Genre vs Average Number of content_rating_tot (Most popular apps by prime_genre)\")\nax.set_ylabel(\"rating_count_total\")\nax.set_xlabel(\"prime_genres\")\n\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Genres_set)), Genres_set_)\nprint()","fd427001":"train[train['prime_genre'] == 'Navigation']","6a44c00f":"train[train['prime_genre'] == 'Reference']","c58a1931":"train[(train['prime_genre'] == 'Social Networking') & (train['rating_count_tot'] > 100000)]","195e2209":"Part 3: Analysing features more deeply and determining entries that are more acceptable for our final answer which is to determine the entry or entries that attract more users (or that have more downloads). Here we have only one feature to analyze i.e. genres.","767dbe8c":"Let's take a look at our datasets.","4b4c86a2":"So we've got 7197 apps in df(app store) dataframe as well as df_description dataframe. In this project we need only the first dataframe which is df dataframe. Let's start our preprocessing.","ab4b5bed":"In the third task we need to get apps which are in english language (or remove 'non-english apps'). Below is the function to determine whether the given string is in english or not. In this function if more than three non ASCII characters are found then we return false that means this string is not in english, otherwise true.","51aa86ba":"On average, navigation apps have the highest number of user reviews, but this genre is heavily dominated by Waze and Google Maps, which have close to half a million user reviews together","00c4b9af":"Part 4: After getting the answers of each features, determine the final answer which is the app profiles that are more profitable (attract more users). The final answer is again from part 3:\n\n(the most profitable app profiles by prime_genres)\nAn app with prime_genre as 'Reference' is the most profitable app profile.","466aec51":"Let's see the description of all the columns.","fc76ecd2":"Part 2: Part 2 is to determine the features which are important for analysis because some features like current version, size might not correlate with the feature like rating except for some exceptional cases. Here from the columns we can see that user_rating, content rating and prime_genre are the features that are important for analysis. Out of these content rating and user_ratings are too obvious, more rated and good reviewed and appropriate content rating app will get more installers. So here I've decided 'prime_genre' feature for our analysis. So our profitable app profiles will be consisting genres only.","3f768422":"**Profitable App Profiles for the iOS App Store**\n\nBelow is an advanced analysis of apps that are availale in the iOS App Store and determined the profitable app profiles. Here I've used iOS App Store dataset available in kaggle ([click here](https:\/\/www.kaggle.com\/ramamet4\/app-store-apple-data-set-10k-apps)). The profitable app profile is determined by the features and attributes (category, genre, etc.) that attract more users to download or buy such app. The prime goal of an app to be in the iOS App Store is to have more users. I have determined why such app could attracts more users, what are the categories that attract people the most, what genres give more profit to the iOS App Store by attracting more users (or installers) or increase total rating on app store.\n\nOver View\n\n1. In the begining I've done preprocessing on the dataset to clean the data as the dataset has some problems which are mentioned below\n    * Invalid entries\n    * Duplicates & nan entries\n    * Apps that target local people or specific communities or have language other than English are invalid and can cause more confusion in analysis.\n    * Paid apps (We need only free apps because paid apps are more diverse and create more confusion because of the unique features)\n2. After getting the cleaned dataset for the analysis, I've determined the features which are important for analysis because some features like current version, last update might not correlate with the feature like installs except for some exceptional cases. (Category & Genres)\n3. After getting features that are important for the analysis, analysing those features more deeply and determining entries that are more acceptable for our final answer which is to determine the entry or entries that attract more users (or that have more downloads).\n4. After getting the answers of each features, I've determined the final answer which is the app profiles that are more profitable (attract more users).","e99e2f8a":"After looking at this columns we can see that 'Unnamed: 0' is an invalid\/redundant column so removing it. Also we don't need price as well as currency column so removing it.","8e743e05":"Here ios_english list is the list of all the apps that are in english language.\n\nOur fourth task is to remove paid apps as paid apps are more diverse and create more confusion because of their unique features which are not described in the dataset. Below is the code for selecting the apps which are free. ios_final list contains the apps that are free.","10af7183":"Let's make a new list of apps which are in english language. Below is the code for getting a list of apps which are in english language.","93abfdd7":"From the above data we can conclude that most common apps by 'prime_genre' is 'Games'","4d206f3c":"Let's analyze the third most popular genre which is 'Social'.","0b9f3867":"Similar to the 'Navigation' genre this field has 11 apps with more than 0.1M content rating total and two apps i.e. Facebook and Pinterest with morethan a million content rating total. On average, social networking apps genre is heavily influenced by Facebook and Pinterest.","417119ff":"Let's see the discription of the columns that are numeric.","5bf93f2f":"Let's check how many apps we've got.","3ada927f":"Let's see the second most popular genre which is 'Reference'.","02f79fff":"Let's see the discription of the columns that are objects.","9f56f0c3":"**Most Popular Apps by Genre in the App Store:**\n\nIn this dataframe popularity measurements can be given by the column 'content_rating_tot' so below is the plot","cba638c8":"Loading the dataset:","066206a6":"Fortunately in this dataset we don't have any invalid or duplicate entry. So our first two tasks are done already. But this dataset contains apps which are not in english language. Let's see some examples. For handling nan values we need to explore the dataset and it is done in later.","6471ef10":"First we need to import libraries and set some parameters that are required for the analysis. Below is the code for that.","6710fc79":"Conclusion:\n\nIn this project our task was to determine profitable app profiles for the iOS App store market. Here we've done ananlysis of apps that are availale in the iOS App Store and determined the profitable app profiles. Here the most profitable app profile means the most popular app profile. We can measure this by content rating total.\n\n* In the part 1, we did preprocessing on the dataset to clean the data as the dataset has some problems which are 1. Invalid entries, 2. Duplicates & nan entries, 3. Apps that target local people or specific communities or have language other than English are invalid and can cause more confusion in analysis and 4. Paid apps (We need only free apps because paid apps are more diverse and create more confusion because of the unique features).\n* After getting the preprocessed dataset for the analysis(in part 2), we determined the features which are important for analysis which was 'prime_enres' in the dataset.\n* After getting features which are important for the analysis, we analysed those features more deeply and determined entries that are more acceptable for our final answer which was to determine the entry or entries that attract more users (or that have more downloads) or which has more total content rating.\n    * In this part we determinded most comon apps by prime genre in the iOS App store first. (App-frequency chart)\n    * Then we determined most popular apps by genre in the iOS App store. (App-popularity chart)\n    * From above two charts we analyzed some genres and determined the most profitable app profile.\nAfter analyzing 'prime_genres' features, we determined the final answer which is the app profiles that are more profitable (attract more users) which is as below. \nAns: Apps which belongs to the genre 'Referance' are the apps which are the most profitable to the iOS App Store Market. But the main thing is that the app must have uniqueness and people must like their uniqueness in order to have more installers or more total content rating. Combining these two sentences we can also see that uniqueness and people's review can have strong correlation with ratings and reviews or the total content rating. It implies that all of these apps from this genre must have uniqueness and people must like their uniqueness (interesting features) in order to have more installers. An example can be given as: we create an app which is in genre \"Reference\" that shows us not only books but also takes quizzes and shows quotes. This such app profiles are most profitable for the iOS App Store market.\n\nHope you enjoyed this analysis. If you like this then please give an upvote. Thank you.","1e521edb":"Now the cleaning is completed, so converting the list to dataframe.","68c3cfd9":"Below is the code to show frequency table and graph of all 23 prime_genres.","0a13e391":"Here we can see that only bible has total rating count of approx 1 million. The second highest is around .2 million. This fiesd seems to be the most profitable in this store because this field is well diversed and yet not influenced by any dominators (except bible).","ea8ed2be":"**Most common apps by genre in the App Store:**\n\nHere we need to show the frequency table of 23 prime genres. This is shown in the graph.","d1877705":"The same thing applies for music and whether. So the fields like social networking, music, navigation are seemed more popular than they are.  But so far we've got our the most profiatble app profile that is Books and references which is out answer for this part.","33e1bf59":"* Appeoximately 75% of all the apps are from Games, Photo & Genre, Entertainment genres.","56a32400":"Here we can see that the App Store contains large number of Games and apps which are for fun and entertainment. Let's check how much.","377befee":"Part 1: Preprocessing on the dataset to clean the data and make it appropriate for further analysis\n\nIn this part I've done preprocessing on the dataset to clean the data as the dataset has some problems which are mentioned below\n\n* Invalid entries\n* Duplicates & nan entries\n* Apps that target local people or specific communities or have language other than English are invalid and can cause more confusion in analysis.\n* Paid apps (We need only free apps because paid apps are more diverse and create more confusion because of the unique features) The below are the steps to clean the dataset.","54320eff":"Let's check how many apps are in english."}}