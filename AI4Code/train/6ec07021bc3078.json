{"cell_type":{"6d4b6b22":"code","d296fa5d":"code","91a0da43":"code","c327dc99":"code","269479bb":"code","40dca93b":"code","a9feaea6":"code","638b97b0":"code","5881aa9b":"code","3d886758":"code","aa9c210a":"code","c3b280ca":"code","8d0e772f":"code","b7a9bfa8":"code","a0578a57":"markdown","4779d578":"markdown","2cb05acd":"markdown","1d6c85f1":"markdown","3cec5d3d":"markdown","1acb9fa4":"markdown","b352f892":"markdown","21ac2071":"markdown","d6bb6062":"markdown"},"source":{"6d4b6b22":"!pip install pywaffle","d296fa5d":"import numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nfrom pywaffle import Waffle\n","91a0da43":"data= pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\", low_memory=False)\nquestions=data.loc[0,:]\ndata=data.loc[1:,:]","c327dc99":"Age=data['Q1'].value_counts()\ncolors= ['#74d2e7','#48a9c5','#0085ad','#8db9ca','#4298b5','#005670','#00205b','#009f4d','#84bd00','#efdf00','#fe5000']\nfig = go.Figure(data=[go.Bar(x=Age.index,y=Age.values,marker_color=colors)])\nfig.update_traces(texttemplate=list(Age.values), textposition='outside',marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Q1 Age Distribution')\nfig.show()\nfig = go.Figure(data=[go.Pie(labels=Age.index,values=Age.values)])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent', textfont_size=18,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Q1 Age Distribution')\nfig.show()","269479bb":"gender =data['Q2'].value_counts()\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=6,\n    columns=10,\n    values=gender.values[0:2],\n    colors = (['#09347a','#ae63e4']),\n    title={'label': 'Gender Distribution', 'loc': 'center'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(gender.index[0:2], gender) ],\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1,1)},\n    font_size=50, \n    icons = ['male','female'],\n    icon_legend=True,\n    figsize=(12,10)\n)","40dca93b":"gender=data.groupby('Q1')['Q2'].value_counts().unstack()\nx=gender.index\nfig = go.Figure(go.Bar(x=x, y=gender['Nonbinary'].values, name='Nonbinary'))\nfig.add_trace(go.Bar(x=x, y=gender['Prefer to self-describe'].values, name='Prefer to self-describe'))\nfig.add_trace(go.Bar(x=x, y=gender['Prefer not to say'].values, name='Prefer not to say'))\nfig.add_trace(go.Bar(x=x, y=gender['Man'].values, name='Man',marker_color='#213e97'))\nfig.add_trace(go.Bar(x=x, y=gender['Woman'].values, name='Woman',marker_color='#ae63e4'))\n\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Q1 , Q2 Age and Gender')\n\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'total descending'})\nfig.show()","a9feaea6":"country_df = data['Q3'].value_counts().rename_axis('country').reset_index(name='counts')\ncountry_df = country_df[country_df['country'] != 'Other']\n\nfrom geopy.geocoders import Nominatim\nimport folium\nfrom folium.plugins import MarkerCluster\n\ngeolocator = Nominatim(user_agent='world_map')\ndef geolocate(country):\n    try:\n        loc = geolocator.geocode(country)\n        return (loc.latitude, loc.longitude)\n    except:\n        return np.nan\n\ncountry_df['country'].replace({'Iran, Islamic Republic of...' : 'Iran','Republic of Korea':'North Korea'},inplace=True)\ncountry_df['coord'] = country_df['country'].apply(lambda x : geolocate(x))\n\ncountry_df['latitude']=  [x[0] for x in country_df['coord']]\ncountry_df['longitude'] = [x[1] for x in country_df['coord']]\nall_users = country_df.counts.sum()\n\nworld_map= folium.Map(tiles=\"cartodbpositron\")\nmarker_cluster = MarkerCluster().add_to(world_map)\nfor i in range(len(country_df)):\n        lat = country_df.iloc[i]['latitude']\n        long = country_df.iloc[i]['longitude']\n        radius=5\n        popup_text = \"\"\"\n                    {}% of all Users <br>\"\"\"\n        popup_text = popup_text.format('{:.2f}'.format(country_df.iloc[i]['counts']*100\/country_df.counts.sum()))\n        folium.CircleMarker(location = [lat, long], radius=radius, popup= popup_text, fill =True).add_to(marker_cluster)\nworld_map","638b97b0":"country=pd.DataFrame()\ncountry['country']=data.groupby(['Q3']).count().index\ncountry['count']=data.groupby(['Q3']).size().values\ncountry=country.sort_values(by=['count'],ascending=False)\nfig=px.bar(country,y='country',x='count',color='country',title=\"Q3 Country\")\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(\n    autosize=True,\n    width=850,\n    height=1200,\n    margin=dict(\n        l=5,\n        r=5,\n        b=25,\n        t=25,\n        pad=1))\nfig.show()","5881aa9b":"fig_sunburst = px.sunburst(data,\n                           path=['Q3', 'Q2', 'Q1'],#[Continent, Country, Sex, Age]\n                           template='seaborn',\n                           maxdepth=2,\n                           title='Q3,Q2,Q1')\nfig_sunburst.update_traces(textinfo='label+percent entry')# Shows % in graph\nfig_sunburst.update_layout(margin=dict(t=25, l=0, r=0, b=0))","3d886758":"Dgree=pd.DataFrame()\nDgree['counts']=data['Q4'].value_counts().values\nDgree['names']=data['Q4'].value_counts().index\nDgree=Dgree.sort_values(by=['counts'])\ncolors= ['#8B0000','#B22222','#FF0000','#DC143C','#CD5C5C','#F08080','#E9967A','#FA8072']\nfig = px.bar(Dgree, y=\"names\", x=\"counts\")\nfig.update_traces(texttemplate=list(np.around(Dgree['counts']\/data.index.size*100,2)), textposition='inside',marker_color=colors,marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Q4 Education')\n\nfig.show()","aa9c210a":"Dgree=pd.DataFrame()\nDgree['counts']=data['Q5'].value_counts().values\nDgree['names']=data['Q5'].value_counts().index\nDgree=Dgree.sort_values(by=['counts'])\ncolors= ['#0099e5','#0099e5','#ff4c4c','#34bf49','#00a98f','#00a98f','#000000','#be0027','#cf8d2e','#e4e932','#2c9f45','#371777','#52325d','#511378']\nfig = px.bar(Dgree, y=\"names\", x=\"counts\")\nfig.update_traces(texttemplate=list(np.around(Dgree['counts']\/data.index.size*100,2)), textposition='inside',marker_color=colors,marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Q5 Title')\n\nfig.show()","c3b280ca":"Dgree=pd.DataFrame()\nDgree['counts']=data['Q6'].value_counts().values\nDgree['names']=data['Q6'].value_counts().index\nDgree=Dgree.sort_values(by=['counts'])\ncolors= ['#004d73','#004d73','#00334e','#007fdb','#dbebfa','#832561','#11862f','#bfca02','#848a8c']\nfig = px.bar(Dgree, y=\"names\", x=\"counts\")\nfig.update_traces(texttemplate=list(np.around(Dgree['counts']\/data.index.size*100,2)), textposition='inside',marker_color=colors,marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Q6 Experience Years')\n\nfig.show()","8d0e772f":"data[['Q5','Q6']]=data[['Q5','Q6']].fillna(\"none\")\nfig_sunburst = px.sunburst(data,\n                           path=['Q5','Q6'],#[Continent, Country, Sex, Age]\n                           template='seaborn',\n                           maxdepth=3,\n                           title='Q5,Q6')\nfig_sunburst.update_traces(textinfo='label+percent entry')# Shows % in graph\nfig_sunburst.update_layout(margin=dict(t=25, l=0, r=0, b=0))","b7a9bfa8":"linkColor = ['#f3f3f3'] * 50\nfor x in range(4,16): linkColor[x] = '#B5EAD7'\n\nfig = go.Figure(data=[go.Sankey( arrangement = \"snap\",\n    node = dict(\n      pad = 10,\n      thickness = 5,\n      line = dict(color = \"black\", width = 0),\n      label = [\"2020 Survey\", \"Worker\", \"Student\", \"Started Coding 30+\", \"Currently not employed\",\n               \"Other\", \"Data Scientist\", \"Data Analyst\", \"Research Scientist\", \"Product\/Project Manager\", \"Software Engineer\", \"Business Analyst\", \"Machine Learning Engineer\", \"Statistician\", \"Data Engineer\", \"DBA\/Database Engineer\",\n               ],\n        x = [0, 0.25, 0.25, 0.35, 1],\n        y = [0, 0.25, 0.25, 0.05, 1],\n      color = 'lightblue'\n    ),\n    link = dict(\n      source = [   0,    0,     0,    1,   3,   3,   3,  3,    3,   3,   3,   3,   3,   3,   3,  3,    1,    1,    1,    1,    1,    1,   1,   1,   1,   1,  1], \n      target = [   2,    4,     1,    3,   5,   6,   4,  7,    8,   9,  10,  11,  12,  13,  14, 15,    6,   10,    5,    7,    8,   12,  11,   9,  14,  13, 15],\n      value =  [5171, 1652, 12454, 5038, 894, 612, 589, 507, 462, 423, 368, 368, 171, 114, 110, 56, 2676, 1968, 1737, 1475, 1174, 1082, 798, 692, 437, 290, 125],\n      color = linkColor\n\n  ))])\n\nfig.update_layout(title=\"Kagglers Current Role\" \\\n          '<br><span style=\"font-size:10px\"><i>Do You Want to Be a Data Scientist Too?<\/span><\/i>')\nfig.show()","a0578a57":"i'm starting to learn Data Science from 9 month and this is my third Notebook in kaggle i'm in beginner level","4779d578":"# In which country do you currently reside ?","2cb05acd":"# What is your age (# years)?","1d6c85f1":"# What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\n\n","3cec5d3d":"# Select the title most similar to your current role (or most recent title if retired): - Selected Choice\n","1acb9fa4":"# For how many years have you been writing code and\/or programming?\n","b352f892":"# Analyzing Kaggle Data 2020","21ac2071":"![](https:\/\/i.pinimg.com\/originals\/ec\/22\/21\/ec2221f03145276371eff4a398ce0065.jpg)","d6bb6062":"# What is your gender? - Selected Choice"}}