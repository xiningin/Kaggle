{"cell_type":{"52e637c3":"code","13ebf155":"code","6064f3cf":"code","b7c2743f":"code","68674a69":"code","ff8d2134":"code","3bbff8fa":"code","8f1bcf72":"code","fb537f4c":"code","4a8fd30b":"code","5b61939f":"code","fae8aada":"code","4019ce18":"code","fb7be97d":"code","16249dd2":"code","e5995f7a":"code","c5b8ebda":"code","9d1395d0":"code","d4d47657":"code","8b9b8041":"code","e599bf09":"code","5ea4036d":"code","b06908cb":"code","53fa5a6e":"code","17d19d3d":"code","0f0a02d2":"code","27fb672d":"code","70590ef7":"code","8516c968":"code","b1cb6bd9":"code","7d988c48":"code","ccd83b17":"code","034582c6":"code","67f19fab":"code","e7a5091d":"code","20ee3ad4":"code","f9e4e032":"code","9a7e3c02":"code","5b343b5e":"code","3b3cfcce":"code","ab361553":"code","864d78f0":"code","b97c18f6":"code","3e8693e0":"code","bdb8125f":"code","0fe4263a":"code","fe1f2647":"code","d1ada79b":"code","1e27c430":"code","6fa09df3":"code","8de0571e":"code","61221a6b":"code","775fa209":"code","fae2cb0a":"code","4d5ebcb4":"markdown","a2e783ba":"markdown","55e32733":"markdown","924e99a8":"markdown","168d82e6":"markdown","b5fb6c4f":"markdown","73605a7e":"markdown","da70a351":"markdown","36b54697":"markdown","fb563008":"markdown","02ec9e1f":"markdown","cd55522a":"markdown","3d7e4826":"markdown","4447f958":"markdown","81e76205":"markdown","afbe1b74":"markdown","128bbeb2":"markdown","761662ed":"markdown","9d794e9a":"markdown","052f4cb3":"markdown","c2607b28":"markdown","84a93c93":"markdown","e3b4964b":"markdown","949b7378":"markdown","2a368389":"markdown","d34dc26b":"markdown","8e4068f5":"markdown"},"source":{"52e637c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","13ebf155":"import pandas as pd\nmultiple_choice_responses = pd.read_csv(\"..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv\")\nother_text_responses = pd.read_csv(\"..\/input\/kaggle-survey-2019\/other_text_responses.csv\")\nquestions_only = pd.read_csv(\"..\/input\/kaggle-survey-2019\/questions_only.csv\")\nsurvey_schema = pd.read_csv(\"..\/input\/kaggle-survey-2019\/survey_schema.csv\")","6064f3cf":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.offline as py\nimport pycountry\n\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots","b7c2743f":"multiple_choice_responses","68674a69":"print(multiple_choice_responses[:1].values)","ff8d2134":"undergraduates = multiple_choice_responses[multiple_choice_responses['Q4'] == \"Bachelor\u2019s degree\"]","3bbff8fa":"undergraduates_count = multiple_choice_responses['Q4'][multiple_choice_responses['Q4'] == \"Bachelor\u2019s degree\"].value_counts().values[0]\nmasters_count = multiple_choice_responses['Q4'][multiple_choice_responses['Q4'] == \"Master\u2019s degree\"].value_counts().values[0]\ndoctors_count = multiple_choice_responses['Q4'][multiple_choice_responses['Q4'] == \"Doctoral degree\"].value_counts().values[0]","8f1bcf72":"print('number of bachelor degree kagglers:', undergraduates_count)\nprint('number of master degree kagglers:', masters_count)\nprint('number of doctoral degree kagglers:', doctors_count)","fb537f4c":"# degree_count = pd.DataFrame(data = [undergraduates_count,masters_count,doctors_count],index = ['bachlors','masters','doctors'])    \n\ndegree_total = len(multiple_choice_responses)\ndegree_bachlor = undergraduates_count\/degree_total*100\ndegree_master = masters_count\/degree_total*100\ndegree_doctor = doctors_count\/degree_total*100","4a8fd30b":"degree_doctor","5b61939f":"df = pd.DataFrame(data = [degree_bachlor,degree_master,degree_doctor],\n                          columns = ['Number of responses'], index = ['bachelor','master','doctor'])\ndf.index.names = ['Highest Education of respondents']\n\ndf.plot(kind='bar',color='c',legend=False,linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(10,8)\nplt.title('Percentages of respondent highest education', fontsize = 15)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='right')\nplt.ylabel('Percentage of Respondents',fontsize=15)\nplt.show()","fae8aada":"students_count = undergraduates['Q1'][(undergraduates['Q1'] == \"18-21\") | (multiple_choice_responses['Q1'] == \"22-24\")].value_counts().values[0]\nworking_count = undergraduates_count-students_count","4019ce18":"print('number of bachelor degree kagglers age<24:', students_count)\nprint('number of bachelor degree kagglers age>24:', working_count)","fb7be97d":"df_age = pd.DataFrame(data = [students_count,working_count],\n                          columns = ['Number of respondents'], index = ['18-24','>24'])\ndf_age.index.names = ['Age of respondents']\n\ndf_age.plot(kind='bar',color='c',legend=False,linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(10,8)\nplt.title('Age of Bachelor degree respondents', fontsize = 15)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='right')\nplt.ylabel('Number of Respondents',fontsize=15)\nplt.show()","16249dd2":"undergraduates['Q23']=undergraduates['Q23'].fillna(value=\"no experience\")","e5995f7a":"undergraduates['Q23'][undergraduates['Q23'] == \"< 1 years\"].value_counts()","c5b8ebda":"no_exp = undergraduates['Q23'][undergraduates['Q23'] == \"no experience\"].value_counts().values[0]\nless_exp =  undergraduates['Q23'][undergraduates['Q23'] == \"< 1 years\"].value_counts().values[0] + undergraduates['Q23'][undergraduates['Q23'] == \"1-2 years\"].value_counts().values[0]\nsome_exp = undergraduates['Q23'][undergraduates['Q23'] == \"2-3 years\"].value_counts().values[0] + undergraduates['Q23'][undergraduates['Q23'] == \"3-4 years\"].value_counts().values[0] + undergraduates['Q23'][undergraduates['Q23'] == \"4-5 years\"].value_counts().values[0] + undergraduates['Q23'][undergraduates['Q23'] == \"5-10 years\"].value_counts().values[0]\nlots_exp = undergraduates['Q23'][undergraduates['Q23'] == \"10-15 years\"].value_counts().values[0] + undergraduates['Q23'][undergraduates['Q23'] == \"20+ years\"].value_counts().values[0]","9d1395d0":"print (no_exp)\nprint(less_exp)\nprint(some_exp)\nprint(lots_exp)","d4d47657":"len(undergraduates['Q23'])","8b9b8041":"df_exp = pd.DataFrame(data = [no_exp,less_exp,some_exp,lots_exp],\n                          columns = ['Number of respondents'], index = ['no experience','< 2 years','2-10 years','> 10 years'])\ndf_exp.index.names = ['Level of experience']\n\ndf_exp.plot(kind='bar',color='c',legend=False,linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(10,8)\nplt.title('Experience in Machine Learning of Bachelor degree respondents', fontsize = 15)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='right')\nplt.ylabel('Number of Respondents',fontsize=15)\nplt.show()","e599bf09":"undergraduates['Q5']","5ea4036d":"topnum = 15\ncount_title = undergraduates['Q5'].value_counts()[:topnum].reset_index()","b06908cb":"count_title","53fa5a6e":"pie_title = go.Pie(labels=count_title['index'],values=count_title['Q5'],name=\"bachelor degree respondents' job titles\",hole=0.5,domain={'x': [0.1,0.66]})\nlayout = dict(title = 'Top-12 job titles with bachelor degree respondents', font=dict(size=12), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.38, y=0.5, text='job titles', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_title], layout=layout)\npy.iplot(fig)","17d19d3d":"for n in undergraduates.columns:\n    print(n)","0f0a02d2":"undergraduates['Q10']","27fb672d":"top_num = 30\ncount_salary = undergraduates['Q10'].value_counts()[:top_num].reset_index()","70590ef7":"count_salary","8516c968":"df_comp = pd.DataFrame(data = count_salary['Q10'].values,\n                          columns = ['Number of respondents'], index = count_salary['index'].values)\ndf_comp.index.names = ['Compensation']\n\ndf_comp.plot(kind='bar',color='c',legend=False,linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(40,20)\nplt.title('Compensation of Bachlor degree respondents', fontsize = 20)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='center')\nplt.ylabel('Number of Respondents',fontsize=20)\nplt.show()","b1cb6bd9":"undergraduates['Q10']=undergraduates['Q10'].fillna(value=\"$0-999\")","7d988c48":"no_money = len(undergraduates['Q10'][undergraduates['Q10'] == \"$0-999\"])\nless_money =  len(undergraduates['Q10'][undergraduates['Q10'] == \"1,000-1,999\"]) + len(undergraduates['Q10'][undergraduates['Q10'] == \"2,000-2,999\"]) + len(undergraduates['Q10'][undergraduates['Q10'] == \"3,000-3,999\"]) + len(undergraduates['Q10'][undergraduates['Q10'] == \"4,000-4,999\"]) + len(undergraduates['Q10'][undergraduates['Q10'] == \"5,000-7,499\"]) + len(undergraduates['Q10'][undergraduates['Q10'] == \"7,500-9,999\"])\nsome_money = len(undergraduates['Q10'][undergraduates['Q10'] == \"10,000-14,999\"]) + len(undergraduates['Q10'][undergraduates['Q10'] == \"15,000-19,999\"]) + len(undergraduates['Q23'][undergraduates['Q23'] == \"15,000-19,999\"]) + len(undergraduates['Q23'][undergraduates['Q23'] == \"20,000-24,999\"]) + len(undergraduates['Q10'][undergraduates['Q10'] == \"25,000-29,999\"])\nmore_money = len(undergraduates['Q10'][(undergraduates['Q10'] == \"30,000-39,999\") | (undergraduates['Q10'] == \"40,000-49,999\")])\nmuch_money = len(undergraduates['Q10'][(undergraduates['Q10'] == \"50,000-59,999\") | (undergraduates['Q10'] == \"60,000-69,999\")])\nlots_money = len(undergraduates['Q10'][(undergraduates['Q10'] == \"70,000-79,999\") | (undergraduates['Q10'] == \"80,000-89,999\") | (undergraduates['Q10'] == \"90,000-99,999\")])\nhigh_money = len(undergraduates['Q10'][(undergraduates['Q10'] == \"100,000-124,999\") | (undergraduates['Q10'] == \"125,000-149,999\")])\ntons_money = len(undergraduates['Q10'][(undergraduates['Q10'] == \"150,000-199,999\") | (undergraduates['Q10'] == \"200,000-249,999\") | (undergraduates['Q10'] == \"250,000-299,999\")])\ninsane_money = len(undergraduates['Q10'][(undergraduates['Q10'] == \"300,000-500,000\") | (undergraduates['Q10'] == \"> $500,000\")])","ccd83b17":"df_money = pd.DataFrame(data = [no_money, less_money, some_money, more_money, much_money, lots_money, high_money, tons_money, insane_money],\n                          columns = ['Number of respondents'], index = [\"$0-999\", \"$1,000-9,999\", \"$10,000-29,999\", \"$30,000-49,999\", \"$50,000-69,999\", \"$70,000-99,999\", \"$100,000-149,999\", \"$150,000-299,999\", \"> $300,000\"])\ndf_money.index.names = ['Compensation']\n\ndf_money.plot(kind='bar',color='g',legend=False,linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(18,8)\nplt.title('Compensation of Bachelor degree respondents', fontsize = 15)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='center')\nplt.ylabel('Number of Respondents',fontsize=15)\nplt.show()","034582c6":"rich_guys = undergraduates['Q5'][(undergraduates['Q10'] == \"100,000-124,999\") | (undergraduates['Q10'] == \"125,000-149,999\") | (undergraduates['Q10'] == \"150,000-199,999\") | (undergraduates['Q10'] == \"200,000-249,999\") | (undergraduates['Q10'] == \"250,000-299,999\") | (undergraduates['Q10'] == \"300,000-500,000\") | (undergraduates['Q10'] == \"> $500,000\")]","67f19fab":"rich_title = rich_guys.value_counts()[:topnum].reset_index()","e7a5091d":"rich_title","20ee3ad4":"pie_rich = go.Pie(labels=rich_title['index'],values=rich_title['Q5'],name=\"job titles for people making 6 figures\",hole=0.5,domain={'x': [0.1,0.66]})\nlayout = dict(title = 'Job titles for people making 6 figures', font=dict(size=12), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.38, y=0.5, text='job titles', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_rich], layout=layout)\npy.iplot(fig)","f9e4e032":"rich_ages = undergraduates['Q1'][(undergraduates['Q10'] == \"100,000-124,999\") | (undergraduates['Q10'] == \"125,000-149,999\") | (undergraduates['Q10'] == \"150,000-199,999\") | (undergraduates['Q10'] == \"200,000-249,999\") | (undergraduates['Q10'] == \"250,000-299,999\") | (undergraduates['Q10'] == \"300,000-500,000\") | (undergraduates['Q10'] == \"> $500,000\")]","9a7e3c02":"rich_age = rich_ages.value_counts()[:topnum].reset_index()","5b343b5e":"rich_age","3b3cfcce":"sci_ages = undergraduates['Q1'][((undergraduates['Q10'] == \"100,000-124,999\") | (undergraduates['Q10'] == \"125,000-149,999\") | (undergraduates['Q10'] == \"150,000-199,999\") | (undergraduates['Q10'] == \"200,000-249,999\") | (undergraduates['Q10'] == \"250,000-299,999\") | (undergraduates['Q10'] == \"300,000-500,000\") | (undergraduates['Q10'] == \"> $500,000\")) & (undergraduates['Q5'] == \"Data Scientist\")]","ab361553":"sci_age = sci_ages.value_counts()[:topnum].reset_index()","864d78f0":"sci_age","b97c18f6":"\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=rich_age['index'], values=rich_age['Q1'], name=\"ages for people making 6 figures\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=sci_age['index'], values=sci_age['Q1'], name=\"ages for data scientists making 6 figures\"),\n              1, 2)\nfig.update_traces(hole=.5, hoverinfo=\"label+percent+name\")\nfig.update_layout(\n    title_text=\"Age Distribution for all bachelor degree respondents and data scientist making 6 figures\",font=dict(size=12), legend=dict(orientation=\"h\"),\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='all', x=0.20, y=0.5, font_size=20, showarrow=False),\n                 dict(text='data scientists', x=0.88, y=0.5, font_size=20, showarrow=False)])\n\nfig.show()","3e8693e0":"rich_countries = undergraduates['Q3'][(undergraduates['Q10'] == \"100,000-124,999\") | (undergraduates['Q10'] == \"125,000-149,999\") | (undergraduates['Q10'] == \"150,000-199,999\") | (undergraduates['Q10'] == \"200,000-249,999\") | (undergraduates['Q10'] == \"250,000-299,999\") | (undergraduates['Q10'] == \"300,000-500,000\") | (undergraduates['Q10'] == \"> $500,000\")]\nrich_country = rich_countries.value_counts()[:topnum].reset_index()\nsci_countries = undergraduates['Q3'][((undergraduates['Q10'] == \"100,000-124,999\") | (undergraduates['Q10'] == \"125,000-149,999\") | (undergraduates['Q10'] == \"150,000-199,999\") | (undergraduates['Q10'] == \"200,000-249,999\") | (undergraduates['Q10'] == \"250,000-299,999\") | (undergraduates['Q10'] == \"300,000-500,000\") | (undergraduates['Q10'] == \"> $500,000\")) & (undergraduates['Q5'] == \"Data Scientist\")]\nsci_country = sci_countries.value_counts()[:topnum].reset_index()","bdb8125f":"fig_country = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig_country.add_trace(go.Pie(labels=rich_country['index'], values=rich_country['Q3'], name=\"countries for people making 6 figures\"),\n              1, 1)\nfig_country.add_trace(go.Pie(labels=sci_country['index'], values=sci_country['Q3'], name=\"countries for data scientists making 6 figures\"),\n              1, 2)\nfig_country.update_traces(hole=.5, hoverinfo=\"label+percent+name\")\nfig_country.update_layout(\n    title_text=\"Country Distribution for all bachelor degree respondents and data scientist making 6 figures\",font=dict(size=12), legend=dict(orientation=\"h\"),\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='all', x=0.20, y=0.5, font_size=20, showarrow=False),\n                 dict(text='data scientists', x=0.88, y=0.5, font_size=20, showarrow=False)])\n\nfig_country.show()","0fe4263a":"twit_under= len(undergraduates[undergraduates['Q12_Part_1'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nhack_under= len(undergraduates[undergraduates['Q12_Part_2'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nreddit_under= len(undergraduates[undergraduates['Q12_Part_3'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nkaggle_under= len(undergraduates[undergraduates['Q12_Part_4'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\ncourse_under= len(undergraduates[undergraduates['Q12_Part_5'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nyoutube_under= len(undergraduates[undergraduates['Q12_Part_6'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\npodcast_under= len(undergraduates[undergraduates['Q12_Part_7'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nblogs_under= len(undergraduates[undergraduates['Q12_Part_8'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\njournal_under= len(undergraduates[undergraduates['Q12_Part_9'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nslack_under= len(undergraduates[undergraduates['Q12_Part_10'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nnone_under= len(undergraduates[undergraduates['Q12_Part_11'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nother_under= len(undergraduates[undergraduates['Q12_Part_12'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nprint(twit_under)\nprint(hack_under)\nprint(reddit_under)\nprint(kaggle_under)\nprint(course_under)\nprint(youtube_under)\nprint(podcast_under)\nprint(blogs_under)\nprint(journal_under)\nprint(slack_under)\nprint(none_under)\nprint(other_under)\n","fe1f2647":"df_media = pd.DataFrame(data = [twit_under, hack_under, reddit_under, kaggle_under, course_under, youtube_under, podcast_under, blogs_under, journal_under, slack_under, none_under, other_under],\n                          columns = ['Number of responses'], index = ['Twitter','Hacker News','Reddit','Kaggle','course forum','Youtube','Podcast','Blogs','Journals','Slack','None','Other'])\n\ndf_media.plot(kind='bar',color='c',legend=False,linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(20,8)\nplt.title('Percentages of Media Sources Used by Respondents', fontsize = 15)\nplt.xticks(rotation=0,fontsize='14', horizontalalignment='center')\nplt.xlabel('Media Sources', fontsize=15)\nplt.ylabel('Percentage of Respondents',fontsize=15)\nplt.show()","d1ada79b":"udacity_under= len(undergraduates[undergraduates['Q13_Part_1'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\ncoursera_under= len(undergraduates[undergraduates['Q13_Part_2'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nedx_under= len(undergraduates[undergraduates['Q13_Part_3'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\ndatacamp_under= len(undergraduates[undergraduates['Q13_Part_4'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\ndataquest_under= len(undergraduates[undergraduates['Q13_Part_5'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nkaggle_under= len(undergraduates[undergraduates['Q13_Part_6'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nfastai_under= len(undergraduates[undergraduates['Q13_Part_7'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nudemy_under= len(undergraduates[undergraduates['Q13_Part_8'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nlinkedin_under= len(undergraduates[undergraduates['Q13_Part_9'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nuniversity_under= len(undergraduates[undergraduates['Q13_Part_10'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nnoneC_under= len(undergraduates[undergraduates['Q13_Part_11'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\notherC_under= len(undergraduates[undergraduates['Q13_Part_12'].isnull()==False])\/len(undergraduates['Q12_Part_1'])*100\nprint(udacity_under)\nprint(coursera_under)\nprint(edx_under)\nprint(datacamp_under)\nprint(dataquest_under)\nprint(kaggle_under)\nprint(fastai_under)\nprint(udemy_under)\nprint(linkedin_under)\nprint(university_under)\nprint(noneC_under)\nprint(otherC_under)\n","1e27c430":"df_course = pd.DataFrame(data = [udacity_under, coursera_under, edx_under, datacamp_under, dataquest_under, kaggle_under, fastai_under, udemy_under, linkedin_under, university_under, noneC_under, otherC_under],\n                          columns = ['Number of responses'], index = ['Udacity','Coursera','Edx','Datacamp','Dataquest','Kaggle','Fast.ai','Udemy','Linkedin','University','None','Other'])\n\ndf_course.plot(kind='bar',color='c',legend=False,linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(20,8)\nplt.title('Percentages of Course Platform Used by Respondents', fontsize = 15)\nplt.xticks(rotation=0,fontsize='14', horizontalalignment='center')\nplt.xlabel('Course Platforms', fontsize=15)\nplt.ylabel('Percentage of Respondents',fontsize=15)\nplt.show()","6fa09df3":"colors1 = ['dodgerblue', 'plum', '#F0A30A','#8c564b'] \ncounts = undergraduates['Q2'].value_counts(sort=True)\nlabels = counts.index\nvalues = counts.values\n\npie = go.Pie(labels=labels, values=values, marker=dict(colors=colors1))\nlayout = go.Layout(title='Gender Distribution for Bachelor degree kagglers')\nfig = go.Figure(data=[pie], layout=layout)\npy.iplot(fig)","8de0571e":"# undergraduates['Q3'].replace({'United States of America':'United States','Viet Nam':'Vietnam','China':\"People 's Republic of China\",\"United Kingdom of Great Britain and Northern Ireland\":'United Kingdom',\"Hong Kong (S.A.R.)\":\"Hong Kong\"},inplace=True)","61221a6b":"topn = 10\ncount_country = undergraduates['Q3'].value_counts()[:topn].reset_index()","775fa209":"count_country","fae2cb0a":"pie_country = go.Pie(labels=count_country['index'],values=count_country['Q3'],name=\"country of residence\",hole=0.4,domain={'x': [0.2,0.66]})\nlayout = dict(title = 'Top-10 countries with bachelor degree respondents', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.43, y=0.5, text='countries', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_country], layout=layout)\npy.iplot(fig)","4d5ebcb4":"#### Most bachelor degree kagglers who makes 6 figures live in US, over 60%. USA does attract lots of high end talents.","a2e783ba":"## Country of residence of bachelor degree kagglers\n### Wow, more than half bachelor degree kagglers are from India, whereas only 16% from 2nd place -- USA, where Kaggle's from. What does this tells us? Indian young people are weigh more interested in data science than Americans? ","55e32733":"#### from this graph we can tell that nearly half of the bachelor degree respondents are students and software engineer, which help they learn coding and better prepare for the future data science career. \n#### And more importantly, more than 30% of bachelor degree respondents have data science related job, including Data Scientist, Data Analyst, Business Analyst, Data Engineer and Research Scientist\n#### Even more than 15% of bachelor degree respondents became data scientist, which requires at least a master degree or even phd at most of data scientist job postings","924e99a8":"## Course Platforms That Bachelor Degree Kagglers use","168d82e6":"#### From this table, we can see more people making 6 figures at ages 25-34, when they are young but also have some experience in the industry\n#### And from second subplot we can see more people in 25-34 range are data scientists, and they are making 6 figures. As data science becomes popular in recent years, younger engineers are more likely to be attracted to become data scientists.","b5fb6c4f":"#### where most bachelor degree respondents don't have or have minimal income, still more than 1000 people make more than 50,000 dollars. And even more than 400 people are making more than 100,000 dollars per year","73605a7e":"## Experiences","da70a351":"## Compensation","36b54697":"#### From this result we can tell that most of bachlor degree respondents are new to data science, but also around more than 800 people have some to lots of experience","fb563008":"## I always wonder if a bachelor degree will be enough for one to be a data scientist. So I want to explore how bachelor degree kagglers do in this survey\n![](https:\/\/www.incimages.com\/uploaded_files\/image\/970x450\/getty_506903004_200013332000928076_348061.jpg)","02ec9e1f":"#### Are those people who're making more than 100,000 dollars doing data science work at their job?","cd55522a":"## Education\n### aroud 30% of respondents hold a bachelor degree","3d7e4826":"### References:\n1. https:\/\/www.kaggle.com\/kaggle-survey-2019\n2. https:\/\/www.kaggle.com\/parulpandey\/geek-girls-rising-myth-or-reality?scriptVersionId=23660751","4447f958":"#### Kaggle, Youtube and various blogs are most popular Media Sources among bachelor degree kagglers. I'm surprised to see blogs to be the 3rd place. Now I'm curious about what blogs are they really looking at??? XDD","81e76205":"#### Coursera, Kaggle, and Udemy are the most popular course platform of bachelor degree respondents. Also 20% of the respondents learned data science from university, which ranks 5th. I'm happy to see that universities are teaching students the latest technologies and following the trend. ","afbe1b74":"## Conclusion:\n### I'm pleasant to see the results of this kernel. I can answer to myself: yes, having a bachelor degree can also make you be a data scientist! At least we can get a good foundation first and then learn from various resources like online course platforms and media sources. Keep learning and stay strong! Cheers~\n### It's also interesting to see that most bachelor degree respondents are living in India, but most of them making 6 figures are working in USA. So I think we need to look for place to work wisely. USA has more and better opportunities over other countries. ","128bbeb2":"#### Now we see in the 400 people making 6 figures, most of them are data scientist, then software engineer. Of course, kaggle's survey attracts more data scientist.","761662ed":"## Gender Distribution\n### Same as lots of technology fields, weigh more male bachelor degree kagglers than female","9d794e9a":"![](https:\/\/www.timeshighereducation.com\/sites\/default\/files\/institution\/header_image\/sfu-the-header-web.jpg)","052f4cb3":"## Job Titles","c2607b28":"## Analyze bachelor degree kagglers who're making 6 figures","84a93c93":"## Ages","e3b4964b":"## Media Sources That Bachelor Degree Kagglers use","949b7378":"## I came up with some questions:\n*  how many kagglers' education level is bachelor degree?\n*  how long have they been doing data science?\n*  how many of them have found a data science position?\n*  how much do they earn at their current data science position?\n*  how much for the rest of people not in data science positions earn?\n*  how many people in the rest want to pursue a data science career or just want to do it as a hobby?\n*  what's their favorite programming language?\n*  what are their ages?\n*  where do undergraduate kagglers live?\n*  which online learning platforms do they use?\n*  what IDE do they use?\n*  what cloud platform do they use?\n*  how much money do they spend on data science?\n\n## So let's explore the data about bachelor degree respondents together!\n![](https:\/\/www.ricsrecruit.com\/getasset\/59ba5b52-9d47-4e2e-9e0a-578fcf54afdd\/)","2a368389":"### From this graph, I can assume:\n#### more than 1500 respondents studying in university are interested in data science\n#### more than 4300 respondents left university but still interested in data science","d34dc26b":"### This Kernel is still in progress, PLEASE STAY TUNED!!!","8e4068f5":"# How Bachelor Degree Kagglers Ace in Data Science"}}