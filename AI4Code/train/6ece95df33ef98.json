{"cell_type":{"149ae017":"code","6b3a4655":"code","c13d2de4":"code","53a0b8b1":"code","73c3fbfc":"code","cacebe8c":"code","85316861":"code","58593e7e":"code","805b0e18":"code","fa0543ca":"code","d11910d7":"code","c6de2ce0":"code","6a2e4b99":"code","71c5b912":"code","7753c44a":"code","d413f70c":"code","a49e9065":"code","fbaa59cd":"code","af4547c2":"code","47b67d3e":"code","240bbe83":"code","7069e4be":"code","29db194d":"code","bffb259b":"code","49820670":"code","d7b50bfb":"code","c32187ef":"code","6a9ea565":"code","66dc21d6":"code","c2725adb":"code","3ffb2961":"code","33f294ff":"code","1ec7d2c9":"code","c678c200":"code","d74bdf3f":"code","40aa779a":"code","80e7c0e4":"code","6baf02a2":"code","c0b7249b":"code","78bff0d5":"code","f60db48f":"code","f5b64c47":"code","6d6047ca":"code","b42307d3":"code","8a5edbfc":"code","79a1bef0":"markdown","0b201e48":"markdown","1b020214":"markdown","00da6bf2":"markdown","1b44e622":"markdown","adf21ee2":"markdown","4e70480c":"markdown","9619f6d1":"markdown"},"source":{"149ae017":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b3a4655":"import pandas as pd","c13d2de4":"df=pd.read_csv(\"\/kaggle\/input\/insurance-prediction\/insurance.csv\")","53a0b8b1":"df","73c3fbfc":"#info\ndf.info()","cacebe8c":"#Checking for null values\ndf.isnull().sum().sum()","85316861":"#describe\ndf.describe()","58593e7e":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")","805b0e18":"sns.pairplot(df[['age','bmi','children','smoker','region','charges']])\nplt.show()","fa0543ca":"sns.heatmap(df.corr(),cmap='BuPu')\nplt.show()","d11910d7":"#age v charges\nsns.relplot(data=df,x=\"age\",y=\"charges\",hue=\"charges\")\nplt.show()","c6de2ce0":"#sex vs charges\nsns.relplot(data=df,x=\"sex\",y=\"charges\",hue=\"charges\",style=\"sex\")\nplt.show()","6a2e4b99":"#distributuion of sex\nplt.figure(figsize=(6,6))\nmy_lab=[\"Male\",\"Female\"]\ndf.sex.value_counts().plot(kind='pie',labels=my_lab)\nplt.legend()\nplt.show()","71c5b912":"#bmi vs Charges\nsns.relplot(data=df,x=\"bmi\",y='charges',hue=\"charges\",style=\"sex\")\nplt.show()","7753c44a":"#No of childern\ndf.children.value_counts().plot(kind=\"barh\",color=\"purple\")\nplt.xlabel(\"Count\")\nplt.ylabel(\"No of childern\")\nplt.show()","d413f70c":"sns.relplot(data=df,x=\"children\",y=\"charges\",hue=\"charges\",style=\"children\")\nplt.show()","a49e9065":"#Smoker or not\ndf.smoker.value_counts().plot(kind='pie')\nplt.show()","fbaa59cd":"#Smoking vs charges\nsns.relplot(data=df,x=\"smoker\",y=\"charges\",hue=\"charges\")\nplt.show()","af4547c2":"#Region\ndf.region.value_counts().plot(kind='bar',color='green')\nplt.show()","47b67d3e":"sns.relplot(data=df,x='region',y='charges',hue='charges')\nplt.show()","240bbe83":"#Splitting the data\ntarget=df['charges']\ndata=df.drop(columns=['charges'])","7069e4be":"#Standardization\nfrom sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\ndata=sc.fit_transform(data)","29db194d":"data","bffb259b":"print(data,target)","49820670":"#Splitting into train and test\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(data,target,test_size=.3)","d7b50bfb":"print(x_train,y_train)","c32187ef":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()","6a9ea565":"#Training\nlr.fit(x_train,y_train)","66dc21d6":"from sklearn.metrics import mean_squared_error,r2_score","c2725adb":"#Score\nprint(mean_squared_error(lr.predict(x_train),y_train))\nprint(r2_score(lr.predict(x_train),y_train))","3ffb2961":"#Test\nprint(mean_squared_error(lr.predict(x_test),y_test))\nprint(r2_score(lr.predict(x_test),y_test))","33f294ff":"from sklearn.preprocessing import PolynomialFeatures\npoly=PolynomialFeatures()","1ec7d2c9":"poly_train=poly.fit_transform(x_train)\npoly_test=poly.fit_transform(x_test)","c678c200":"#train\npl=LinearRegression()\npl.fit(poly_train,y_train)","d74bdf3f":"#scores\nprint(mean_squared_error(pl.predict(poly_train),y_train))\nprint(r2_score(pl.predict(poly_train),y_train))","40aa779a":"#test\nprint(mean_squared_error(pl.predict(poly_test),y_test))\nprint(r2_score(pl.predict(poly_test),y_test))","80e7c0e4":"from sklearn.ensemble import RandomForestRegressor\nrf=RandomForestRegressor(max_depth=10,min_samples_leaf=15,n_jobs=20)","6baf02a2":"#Train\nrf.fit(x_train,y_train)","c0b7249b":"#Score\nprint(mean_squared_error(rf.predict(x_train),y_train))\nprint(r2_score(rf.predict(x_train),y_train))","78bff0d5":"#Test\nprint(mean_squared_error(rf.predict(x_test),y_test))\nprint(r2_score(rf.predict(x_test),y_test))","f60db48f":"from sklearn.tree import DecisionTreeRegressor\ndt=DecisionTreeRegressor(max_depth=6,min_samples_leaf=10)","f5b64c47":"#train\ndt.fit(x_train,y_train)","6d6047ca":"#Score\nprint(mean_squared_error(dt.predict(x_train),y_train))\nprint(r2_score(dt.predict(x_train),y_train))","b42307d3":"#Test\nprint(mean_squared_error(dt.predict(x_test),y_test))\nprint(r2_score(dt.predict(x_test),y_test))\n","8a5edbfc":"#savinig result\npd.DataFrame(dt.predict(x_test)).to_csv(\"DT_predictions.csv\")","79a1bef0":"- Random Forest\n","0b201e48":"## Splitting and Scaling","1b020214":"-Decision Tree","00da6bf2":"## Models","1b44e622":"## Data Visualization","adf21ee2":"- Polynomial Rgression","4e70480c":"- Linear Regression","9619f6d1":"## Reading and cleaning the data"}}