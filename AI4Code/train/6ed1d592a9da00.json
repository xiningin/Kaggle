{"cell_type":{"50aec1c2":"code","16239801":"code","0a41219b":"code","38c40849":"code","3c7712dc":"code","29976160":"code","24e2582a":"code","d5f6519d":"code","ba572d3a":"code","8aed8435":"code","e254c3b1":"code","01e58843":"code","f6294917":"code","9695810d":"code","2821957a":"code","7fe883c7":"code","ba527dfd":"code","5858afd4":"code","e33caecb":"code","2c2ff31a":"code","0f9b29d6":"markdown","c611543d":"markdown","f5d5ea74":"markdown"},"source":{"50aec1c2":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport pickle as pck\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\n%matplotlib inline\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix","16239801":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0a41219b":"train = pd.read_csv('\/kaggle\/input\/pe-files-malwares\/dataset_malwares.csv', sep=',')\ntest = pd.read_csv('\/kaggle\/input\/pe-files-malwares\/dataset_test.csv', sep=',')","38c40849":"train","3c7712dc":"test","29976160":"train.isnull().any().sum()","24e2582a":"# #The target is Malware Column {0=Benign, 1=Malware}\n\nX = train.drop(['Name', 'Malware'], axis = 1)\ny = train['Malware']","d5f6519d":"X_train, X_test, y_train, y_test= train_test_split(X,y, test_size=0.2, random_state=101)\nX_train.head()","ba572d3a":"# Feature Scaling\n\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X_train)","8aed8435":"X_new = pd.DataFrame(X_scaled, columns = X.columns)","e254c3b1":"X_new.head()","01e58843":"# Principal Component Analysis\n\nskpca = PCA(n_components = 55)\nX_pca = skpca.fit_transform(X_new)\nprint('Variance sum : ', skpca.explained_variance_ratio_.cumsum()[-1])","f6294917":"# Build The Model\nmodel = RandomForestClassifier(n_estimators = 100, random_state = 0, oob_score = True, max_depth = 16, max_features = 'sqrt')\nmodel.fit(X_pca, y_train)","9695810d":"X_test_scaled = scaler.transform(X_test)\nX_new_test = pd.DataFrame(X_test_scaled, columns = X.columns)\nX_test_pca = skpca.transform(X_new_test)","2821957a":"# Predict\n\ny_pred = model.predict(X_test_pca)","7fe883c7":"print(classification_report(y_pred, y_test))","ba527dfd":"sns.heatmap(confusion_matrix(y_pred, y_test), annot = True, fmt = 'd', cmap = plt.cm.Blues, cbar = False)","5858afd4":"from sklearn.pipeline import Pipeline\npipe = Pipeline([('scale', scaler),('pca', skpca),('clf', model)])","e33caecb":"X_testing = test.drop('Name', axis = 1)\n\nX_testing_scaled = pipe.named_steps['scale'].transform(X_testing)\nX_testing_pca = pipe.named_steps['pca'].transform(X_testing_scaled)\ny_testing_pred = pipe.named_steps['clf'].predict_proba(X_testing_pca)","2c2ff31a":"pd.concat([test['Name'], pd.DataFrame(y_testing_pred)], axis = 1)","0f9b29d6":"# Split The Train Data\n","c611543d":"# Import The Dataset","f5d5ea74":"# Import Libraries"}}