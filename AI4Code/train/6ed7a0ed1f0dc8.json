{"cell_type":{"9ba093ed":"code","d1130ff9":"code","d90171b7":"code","33823bfb":"code","6933c0f3":"code","06da3673":"code","d7a180ab":"code","8e223123":"code","98c0b459":"code","c9072910":"code","107e8d70":"code","25ea9ec8":"code","284f6887":"code","99669c50":"code","fce06053":"code","b8ac6386":"markdown","8fcee0ae":"markdown","fcfa5db5":"markdown","553c22b3":"markdown","85dc5f43":"markdown","e08f681d":"markdown","0d4c4d41":"markdown","eeba478b":"markdown","35617bfc":"markdown","da288cb5":"markdown","4845037f":"markdown","ef66aa34":"markdown","65760d7f":"markdown","09bc4d60":"markdown","415f1c02":"markdown","a4b630fc":"markdown"},"source":{"9ba093ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d1130ff9":"from folium.plugins import HeatMap\nfrom folium import plugins\nfrom collections import namedtuple\nfrom shapely.geometry import Point\n\nimport geopandas # working with geospatial data in python easier\nimport folium #visualize spatial data in an interactive manner\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns # data visualization library based on matplotlib\nimport missingno as msn\nimport matplotlib.pyplot as plt","d90171b7":"# acp = All Crime in Philidelphia\nacp = pd.read_csv(\"\/kaggle\/input\/philadelphiacrimedata\/crime.csv\")\n# returns the first 5 parts of the acp dataframe\nacp.head() ","33823bfb":"# remove all na values from the dataset\n# acpc == All Crime Philidelphia Cleaned\nacpc = acp.dropna()\n\n# changing dtype police district to int\nacpc = acpc.astype({'Police_Districts': 'int64'})\n\n# order based on date\nacpc['Dispatch_Date_Time'] = pd.to_datetime(acpc['Dispatch_Date_Time'])\nacpc = acpc.sort_values(by='Dispatch_Date_Time', ascending=True)\n\n# creating a seperate list for each year, month and day \nacpc['Year_Nr'] = acpc['Dispatch_Date_Time'].dt.year\nacpc['Month_Nr'] = acpc['Dispatch_Date_Time'].dt.month\nacpc['Day_Nr'] = acpc['Dispatch_Date_Time'].dt.day\n\n# removing the year 2017 since it's not a complete year\nacpc = acpc[acpc.Year_Nr != 2017]\n\n# showing the first 5 rows\nacpc.head()","6933c0f3":"sns.catplot(x='Year_Nr',\n            kind='count',\n            palette=(\"pastel\"),\n            height=6,\n            aspect=2,\n            data=acpc)\n\nplt.xticks(size=12)\nplt.yticks(size=12)\nplt.xlabel(\"Year\", fontsize=14)\nplt.ylabel(\"Count\", fontsize=14)\nplt.title(\"Total number of crimes commited per year\", fontsize=16)","06da3673":"sns.catplot(x='Month_Nr',\n           kind='count',\n           height=6,\n           aspect=2,\n           palette=(\"pastel\"),\n           data=acpc)\n\nplt.xticks(size=12)\nplt.yticks(size=12)\nplt.xlabel(\"Month\", fontsize=14)\nplt.ylabel(\"Count\", fontsize=14)\nplt.title(\"Number of Crimes Commited per Month\", fontsize=16)\n","d7a180ab":"sns.catplot(x='Hour',\n           kind='count',\n           height=6,\n           aspect=2,\n           palette=(\"pastel\"),\n           data=acpc)\nplt.xticks(size=12)\nplt.yticks(size=12)\nplt.xlabel(\"Hour\", fontsize=14)\nplt.ylabel(\"Count\", fontsize=14)\nplt.title(\"Number of Crimes Commited per Hour\", fontsize=16)","8e223123":"sns.catplot(y='Text_General_Code',\n           kind ='count',\n           height = 8,\n           aspect =1.5, \n           palette=(\"pastel\"),\n           order=acpc.Text_General_Code.value_counts().index,\n           data=acpc)\n\nplt.xticks(size=12)\nplt.yticks(size=12)\nplt.xlabel(\"Count\", fontsize=14)\nplt.ylabel(\"Type of Crime\", fontsize=14)\nplt.title(\"Number of Times a Specific Crime was Commited\", fontsize=16)","98c0b459":"sns.catplot(x='Police_Districts',\n           kind='count',\n           height=6,\n           aspect=2,\n           palette=(\"pastel\"),\n           data=acpc)\nplt.xticks(size=12)\nplt.yticks(size=12)\nplt.xlabel(\"Police District\", fontsize=14)\nplt.ylabel(\"Count\", fontsize=14)\nplt.title(\"Number of Crimes Commited per Police District\", fontsize=16)","c9072910":"lon = acpc['Lon']\nlat = acpc['Lat']\navgLon = sum(lon)\/len(lon)\navgLat = sum(lat)\/len(lat)\n\ndistricts_location = acpc[['Police_Districts', 'Lon', 'Lat']]\ndistricts = districts_location.groupby(['Police_Districts']).mean().reset_index()\n\n\ncrime_map = folium.Map(location=[avgLat, avgLon], \n                       tiles = \"Stamen Toner\",\n                      zoom_start = 11)\n\n# Add data for heatmp \ndata_heatmap = acpc[-25000:]\ndata_heatmap = data_heatmap[['Lat','Lon']]\ndata_heatmap = [[row['Lat'],row['Lon']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\nfor i in range(len(districts)):\n    folium.Marker([districts['Lat'][i], districts['Lon'][i]], popup='District ' + str(districts['Police_Districts'][i])).add_to(crime_map)\n\n# Plot!\ncrime_map","107e8d70":"lon = acpc['Lon']\nlat = acpc['Lat']\navgLon = sum(lon)\/len(lon)\navgLat = sum(lat)\/len(lat)\n\ncrime_map = folium.Map(location=[avgLat, avgLon], \n                       tiles = \"Stamen Toner\",\n                      zoom_start = 11)\n\n# Add data for heatmp \ndata_heatmap = acpc[-25000:]\ndata_heatmap = data_heatmap[['Lat','Lon']]\ndata_heatmap = [[row['Lat'],row['Lon']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\n# Plot!\ncrime_map","25ea9ec8":"#showing all types of crimes commited\nacpc.Text_General_Code.unique()\n\n# The most dangerous crime (weapon involved) types that can be commited\ndangerous = ['Weapon Violations', 'Robbery Firearm', 'Homicide - Criminal', 'Aggravated Assault Firearm', 'Homicide - Gross Negligence', 'Homicide - Justifiable']\n# creating a new dataframe with all the dangerous crimes in it\ndangerous_data = acpc[acpc['Text_General_Code'].isin(dangerous)]\n\ndangerous_data.head()","284f6887":"lon = dangerous_data['Lon']\nlat = dangerous_data['Lat']\navgLon = sum(lon)\/len(lon)\navgLat = sum(lat)\/len(lat)\n\ncrime_map = folium.Map(location=[avgLat, avgLon], \n                       tiles = \"Stamen Toner\",\n                       zoom_start = 11)\n\n# Add data for heatmp \ndata_heatmap = dangerous_data[dangerous_data.Year_Nr == 2016]\ndata_heatmap = data_heatmap[['Lat','Lon']]\ndata_heatmap = [[row['Lat'],row['Lon']] for index, row in data_heatmap.iterrows()]\n\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\n# Plot!\ncrime_map","99669c50":"Theft = ['Thefts', 'Theft from Vehicle', 'Motor Vehicle Theft', 'Receiving Stolen Property', 'Recovered Stolen Motor Vehicle']\ntheft_data = acpc[acpc['Text_General_Code'].isin(Theft)]","fce06053":"lon = theft_data['Lon']\nlat = theft_data['Lat']\navgLon = sum(lon)\/len(lon)\navgLat = sum(lat)\/len(lat)\n\ncrime_map = folium.Map(location=[avgLat, avgLon], \n                       tiles = \"Stamen Toner\",\n                       zoom_start = 11)\n\n# Add data for heatmap \ndata_heatmap = theft_data[theft_data.Year_Nr == 2016]\ndata_heatmap = data_heatmap[['Lat','Lon']]\ndata_heatmap = [[row['Lat'],row['Lon']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\n# Plot!\ncrime_map","b8ac6386":"<h1><center>City of Philadelphia - Crime Data<\/center><\/h1>\n<img src=\"https:\/\/www.uwishunu.com\/wp-content\/uploads\/2011\/01\/east-steps-150dpi-680uw.jpg\" widht = 300 height = 500>","8fcee0ae":"# Feature Exploration","fcfa5db5":"## Feature Engineering & Cleaning","553c22b3":"<b>Figure 1: Total number of crimes commited per year<\/b> <br>\nThe first figure shows you the total nubmer of crimes commited per year. From this figure we can conclude that almost every year there is a decrease in the number of crimes happening. Good job Philly PD!!","85dc5f43":"<b>Figure 4: Number of Times a Specific Crime was Commited<\/b><br>\nIn figure 4, the number of times each crime is commited is visualized. Where the named category Assualts and Theft are crimes that are commited the most within Philadelphia","e08f681d":"<b>Figure 3: Number of crimes commited per hour<\/b><br>\nIn the third figure we can see that the number of crimes happening reaches a peak at 16:00h and is at its lowest point around 06:00h.\nWhich is probably due to the sleeping scheduele of people. Furthermore it might be intersting to look at the different types of crime happening around each hour.","0d4c4d41":"<b>Figure 5: Number of Times a Specific Crime was Commited<\/b><br>\nIn the last figure, figure 5, the number of times a crime is commited in each district is visualized. From this we can see that most crimes happen district 11","eeba478b":"# Theft Crimes","35617bfc":"# Heatmap\nThe following heatmaps shows the areas in which most crimes, thef crime and violent crime happen","da288cb5":"<b>Figure 2: Number of crimes commited per Month<\/b> <br>\nFigure 2 shows us the number of crimes happening in each month. Given this figure we can see that a decrease happens towards the end of the year throughout the beginning of the year. This might be due to the outside temperature of these months.\n","4845037f":"Given the previous image, an indication is given of where each district is placed in the map below.","ef66aa34":"# Voilent Crimes","65760d7f":"# Feature Exploration, Engineering and Cleaning\nI'll start by first exploring the data on hand, identify possible feature engineering opportunities as well as numerically encode any categorical features.","09bc4d60":"### Loading the data","415f1c02":"# Introduction\nThis dataset contains crime incidents from the Philadelphia Police Department. Part I crimes include violent offenses such as aggravated assault, rape, arson, among others. Part II crimes include simple assault, prostitution, gambling, fraud, and other non-violent offenses. The dataset previously had separate endpoints for various years and types of incidents. These have since been consolidated into a single dataset.","a4b630fc":"# Visualisations"}}