{"cell_type":{"42492ddf":"code","40b07b7d":"code","60819466":"code","8b3e75c3":"code","8a1f70da":"code","774d0649":"code","4bd7fb93":"code","c247dc4b":"code","f4cd04a3":"code","18b75ebd":"code","f3f5d92b":"code","05cb5479":"code","9232f4ca":"code","97c54910":"code","eb2289bb":"code","b300ec62":"code","198e524e":"code","f2ddc366":"code","3c5a0418":"markdown","8403a958":"markdown","7df24a8d":"markdown","98427648":"markdown","aa642d1a":"markdown","1acd8703":"markdown","6c679d02":"markdown","9c24f5e6":"markdown","09392609":"markdown","bdfb8499":"markdown","f8aea40d":"markdown","e60317af":"markdown","647f62e7":"markdown","ad721f1c":"markdown","d8ce9c85":"markdown","f06c5728":"markdown"},"source":{"42492ddf":"# Work with Data - the main Python libraries\nimport numpy as np\nimport pandas as pd\n\n# For import data\nimport os\n\n# Visualization\nimport matplotlib.pyplot as plt\n\n# Modeling and Prediction\nfrom fbprophet import Prophet\n\nimport warnings\nwarnings.simplefilter('ignore')","40b07b7d":"# Import files with data from Kaggle dataset\ndataset_files = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        dataset_files.append(os.path.join(dirname, filename))\ndataset_files","60819466":"# Selection Air Quality station 0, 1, ... 4\nstation_num = 0  # Vinnytsia city, Soborna St., 36","8b3e75c3":"# Data download\ndata = pd.read_csv(dataset_files[station_num], sep=',', header=0)\ndata","8a1f70da":"# All phenomenon (\u043f\u043e\u043a\u0430\u0437\u043d\u0438\u043a \u044f\u043a\u043e\u0441\u0442\u0456 \u0430\u0442\u043c\u043e\u0441\u0444\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u0432\u0456\u0442\u0440\u044f)\nphenomenon_list = data['phenomenon'].unique().tolist()\nphenomenon_list","774d0649":"# Selection phenomenon (\u043f\u043e\u043a\u0430\u0437\u043d\u0438\u043a \u044f\u043a\u043e\u0441\u0442\u0456 \u0430\u0442\u043c\u043e\u0441\u0444\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u0432\u0456\u0442\u0440\u044f)\nnum_phenomenon = 0\nphenomenon_name = phenomenon_list[num_phenomenon]\nphenomenon_name","4bd7fb93":"# Selection phenomenon in dataset\ndf = data[data['phenomenon']==phenomenon_name]\ndf","c247dc4b":"# Selection data for forecasting \ndf = df[['logged_at', 'value']].reset_index(drop=True)\ndf.columns = ['ds', 'y']\ndf","f4cd04a3":"# Set date as date & time \ndf['ds'] = pd.to_datetime(df['ds'], format='%Y-%m-%d %H:%M:%S', errors='ignore')\ndf","18b75ebd":"#df.resample(\"1d\").sum().fillna(0)\n#df['y'].rolling('1hour', min_periods=1).mean()","f3f5d92b":"# # Filtering the missing data\n# df = df.dropna().reset_index(drop=True)\n# df.tail(5)","05cb5479":"# Build the plot\ndf['y'] = df['y'].astype('float')\ndf['y'].plot()","9232f4ca":"# Selection of data from the given number of measurements (date and time)\n# df = df[1113:].reset_index(drop=True)\n# df.head()","97c54910":"# Build Prophet model with parameters ans structure \n# Without holidays\nmodel = Prophet(daily_seasonality=False, weekly_seasonality=False, yearly_seasonality=True, \n                changepoint_range=1, changepoint_prior_scale = 0.3)\nmodel.add_seasonality(name='weekly', period=7, fourier_order=2, \n                      mode = 'multiplicative', prior_scale = 0.25)\nmodel.add_seasonality(name='monthly', period=3, fourier_order=2, \n                      mode = 'multiplicative', prior_scale = 0.15)\n\n# Training model for df\nmodel.fit(df)","eb2289bb":"# Make a forecast\nforecasting_period = 7200  # 2 hours\nfuture = model.make_future_dataframe(periods = forecasting_period, freq='S')\nforecast = model.predict(future)","b300ec62":"# Draw plot of the values with forecasting data\nfigure = model.plot(forecast, xlabel = 'Date & Time', ylabel = phenomenon_name)","198e524e":"# Draw plot with the components (trend and seasonalities) of the forecasts\nfigure_component = model.plot_components(forecast)","f2ddc366":"# Ouput the prediction for the next time\nforecast[['yhat_lower', 'yhat', 'yhat_upper']] = forecast[['yhat_lower', 'yhat', 'yhat_upper']].round(2)\nforecast[['ds', 'yhat_lower', 'yhat', 'yhat_upper']].tail(10)","3c5a0418":"## 5. Prediction & Visualization<a class=\"anchor\" id=\"5\"><\/a>\n\n[Back to Table of Contents](#0.1)","8403a958":"**TASK:** Try to make a prediction for another value of num_phenomenon.","7df24a8d":"# Dataset [Air Quality Monitoring](https:\/\/www.kaggle.com\/vbmokin\/air-quality-monitoring)","98427648":"**ADDITIONAL TASK:** Try above to set the given number as a reference point.","aa642d1a":"**TASK:** Try to aggregate data, i.e. go from every second data to total or average data per day or hour.","1acd8703":"<a class=\"anchor\" id=\"0.1\"><\/a>\n## Table of Contents\n\n1. [Import libraries](#1)\n1. [Download data](#2)\n1. [EDA & FE](#3)\n1. [Modeling](#4)\n1. [Prediction & Visualization](#5)","6c679d02":"**ADDITIONAL TASK:** Try changing the parameters of the Prophet model and evaluate how this will affect the shape of the curve and the accuracy of the simulation","9c24f5e6":"**TASK:** Try to change to forecasting_period (duration of the forecast period in seconds)","09392609":"## 1. Import libraries<a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","bdfb8499":"I hope you find this notebook useful and enjoyable.\n\nYour comments and feedback are most welcome.\n\n[Go to Top](#0)","f8aea40d":"## 2. Download data<a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","e60317af":"## Acknowledgements\n\n### Notebooks:\n* [Data Science for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/data-science-for-tabular-data-advanced-techniques)\n* [EDA for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/eda-for-tabular-data-advanced-techniques)\n* [COVID in UA: Prophet with 4, Nd seasonality](https:\/\/www.kaggle.com\/vbmokin\/covid-in-ua-prophet-with-4-nd-seasonality)\n* [AI-ML-DS Training. L1T : COVID in UA - Prophet](https:\/\/www.kaggle.com\/vbmokin\/ai-ml-ds-training-l1t-covid-in-ua-prophet?scriptVersionId=63736090)\n\n### Libraries from GitHub:\n- https:\/\/facebook.github.io\/prophet\/\n- https:\/\/facebook.github.io\/prophet\/docs\/\n- https:\/\/github.com\/facebook\/prophet","647f62e7":"## 4. Modeling<a class=\"anchor\" id=\"4\"><\/a>\n\n[Back to Table of Contents](#0.1)","ad721f1c":"As you can see there is a problem with '2.6200' in the column 'phenomenon'.","d8ce9c85":"# Air Quality Station Forecasting by Prophet","f06c5728":"## 3. EDA & FE<a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)"}}