{"cell_type":{"a030591a":"code","436e8899":"code","f8240a13":"code","a5913467":"code","fdea841f":"code","5f82fd94":"code","bca7c1cf":"code","71e6e6f9":"markdown","8488982f":"markdown","08cf9578":"markdown","c89ed0ae":"markdown","a90fd3b7":"markdown","bece3d98":"markdown","4d5d9caa":"markdown","56bd4e2c":"markdown"},"source":{"a030591a":"import pandas as pd\nimport numpy as np\n\ndataset = pd.read_csv(\"..\/input\/brain-tumor\/data.csv\")\ndataset.dtypes","436e8899":"dataset = dataset.sample(frac = 1)","f8240a13":"from sklearn.model_selection import cross_val_score\n\ndef rmse_cv(model, X, y, cv):\n    rmse= np.sqrt(-cross_val_score(model, X, y, scoring=\"neg_mean_squared_error\", cv = cv))\n    return(rmse)\n","a5913467":"X = dataset.iloc[:,:-1]\ny = dataset.iloc[:,-1]\ny = pd.get_dummies(y)\ny = y[\"tumor\"]","fdea841f":"from sklearn import preprocessing\nscaler = preprocessing.StandardScaler().fit(X)\nX = scaler.transform(X.values)","5f82fd94":"from sklearn import linear_model\n\nclf = linear_model.LogisticRegression()\nclf.fit(X,y)\nprint(rmse_cv(clf, X, y, 5))\nprint(clf.score(X,y))","bca7c1cf":"from sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.model_selection import train_test_split\n\ntrain_score = []\ntest_score = []\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42) \nclf = AdaBoostClassifier(n_estimators=500)\nclf.fit(X_train, y_train)\nprint(clf.score(X_test, y_test))\nclf = linear_model.LogisticRegression()\nclf.fit(X_train, y_train)\nprint(clf.score(X_test, y_test))\n","71e6e6f9":"With zeroes on 4 of the 5 splits and a score of 1 on the whole dataset, I'd consider this solved as far as the size of the dataset can tell us.\n\nIt's important to consider that there is potentially problems in the real world due to the small training size.","8488982f":"Perform logistic regression","08cf9578":"Split X and y and convert y into a column of zeroes and ones","c89ed0ae":"Try AdaBoost Classifier and Logistic Regression with test train split","a90fd3b7":"Scale X in case it is required","bece3d98":"Setup a cross validation function","4d5d9caa":"The target column is in order so before anything I want to shuffle it so that won't cause an issue down the track. It isn't neccessarily a problem but it is worth eliminating that source of error at the beginning.df = df.sample(frac = 1)","56bd4e2c":"Load the dataset and find the target column"}}