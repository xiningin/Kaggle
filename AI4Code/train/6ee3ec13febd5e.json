{"cell_type":{"95b0ead2":"code","e28853b4":"code","9d3916e8":"code","a1ef8f1e":"code","add8b6b4":"code","f9a7fe4e":"code","8f806158":"code","0ebc2527":"code","a78156e9":"code","83b98a23":"code","795bf9f5":"code","30224264":"code","8ddc6ca5":"code","73ecc9c5":"code","338fa5cc":"code","63f4d177":"code","0ea9d8df":"code","128d6aed":"code","e015dab6":"code","330f2d17":"code","f43516fa":"code","694ab333":"code","298b02ff":"code","4aea097a":"code","d4971132":"code","9af85f35":"code","f6e4aec8":"code","73200bdc":"code","228b109d":"code","33cba4cf":"code","cef69cd2":"code","c515c2b3":"code","65326f25":"code","98804c90":"code","14ae85eb":"code","8bcd8bca":"code","a23db0c4":"code","213c6319":"code","bdb1c38b":"code","ef0a9618":"code","a48c3669":"markdown","817b5d25":"markdown","a97b2b79":"markdown","288ba2a9":"markdown","3c1e39f8":"markdown","b7ca4f98":"markdown","6bcfcd07":"markdown","4ef02907":"markdown","0203761e":"markdown","71606199":"markdown","d55225d9":"markdown","7176a1d3":"markdown","0f71bda1":"markdown","ac94686b":"markdown","28926abb":"markdown"},"source":{"95b0ead2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e28853b4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","9d3916e8":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n","a1ef8f1e":"train.head()","add8b6b4":"test.head()","f9a7fe4e":"train.shape","8f806158":"test.shape","0ebc2527":"train.isnull().sum()","a78156e9":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","83b98a23":"sns.countplot(x='Survived',data=train)","795bf9f5":"sns.countplot(x='Survived',hue='Sex',data=train,palette='rainbow')","30224264":"sns.countplot(x='Survived',hue='Pclass',data=train,palette='rainbow')","8ddc6ca5":"sns.set_style('whitegrid')\nsns.barplot(x='Pclass',y='Age',data=train,palette='winter')","73ecc9c5":"sns.heatmap(test.isnull(),yticklabels=False,cbar=False,cmap='viridis')","338fa5cc":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 25\n\n    else:\n        return Age","63f4d177":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)\ntest['Age'] = test[['Age','Pclass']].apply(impute_age,axis=1)","0ea9d8df":"train.drop('Cabin',axis=1,inplace=True)\ntest.drop('Cabin',axis=1,inplace=True)","128d6aed":"train.dropna(inplace=True)","e015dab6":"train.isnull().sum()","330f2d17":"test.isnull().sum()","f43516fa":"test['Fare']=test['Fare'].fillna(test['Fare'].mean())","694ab333":"train.drop(['Name', 'Ticket'], axis = 1,inplace=True)","298b02ff":"test.drop(['Name', 'Ticket'], axis = 1,inplace=True)","4aea097a":"train.head(2)","d4971132":"train = pd.get_dummies(data=train,columns=['Sex','Embarked'],drop_first=True)","9af85f35":"train.head(2)","f6e4aec8":"test = pd.get_dummies(data=test,columns=['Sex','Embarked'],drop_first=True)","73200bdc":"test.head(2)","228b109d":"women = train.loc[train.Sex_male == 0][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","33cba4cf":"men = train.loc[train.Sex_male == 1][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","cef69cd2":"y=train['Survived']\nX=train.drop(['Survived','PassengerId'],axis=1)","c515c2b3":"X_test_Final=test.drop(['PassengerId'],axis=1)","65326f25":"from sklearn.model_selection import train_test_split","98804c90":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)","14ae85eb":"from sklearn.ensemble import RandomForestClassifier","8bcd8bca":"model_rf = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel_rf.fit(X_train,y_train)","a23db0c4":"y_pred = model_rf.predict(X_test)","213c6319":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nprint(accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))","bdb1c38b":"predictions = model_rf.predict(X_test_Final)","ef0a9618":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","a48c3669":"### Features and Labels","817b5d25":"#### Embarked column is also having 2 Nan values in train data ,we will delete this two rows","a97b2b79":"## Loading Dataset","288ba2a9":"#### Now our train and test data are ready to use","3c1e39f8":"#### we will drop cabin and impute age column be average wrt Pclass for train and test data","b7ca4f98":"#### 0-not survived\n#### 1-survived","6bcfcd07":"## Model","4ef02907":"### Train-test-Split","0203761e":"## Checking and working for missing value","71606199":"## Importing Libraries","d55225d9":"### Converting categorical into numerical","7176a1d3":"#### check the average age by passenger class.","0f71bda1":"## EDA","ac94686b":"#### in test data Fare column is having 1 Nan value ,we will impute this value with mean","28926abb":"#### Yellow lines shows missing values .As we can see here maximum of the data from the Cabin column are missing here so we can delete that column.We will fill Age column"}}