{"cell_type":{"aa22fb59":"code","2cea8a09":"code","6265acbd":"code","8d763f77":"code","91811d95":"code","94980f02":"code","1ff27f21":"code","b7f05ba2":"code","36209245":"code","80af7709":"code","7beda68f":"code","f9691f6e":"code","9815fa89":"code","617cb22f":"code","cb8581b0":"code","d7d9f318":"code","e25fb74d":"code","13d47fdc":"code","ce2d10d3":"markdown","e5dbee1e":"markdown","a62860a5":"markdown","340dc20c":"markdown","e5c605d4":"markdown","23fa63e8":"markdown","156314a1":"markdown","df25170d":"markdown","51346118":"markdown","1225e416":"markdown","784463f8":"markdown","7c1721c0":"markdown","4602abbe":"markdown","7ff2a640":"markdown","e0d6e360":"markdown","c740fbbb":"markdown","ef63e562":"markdown","c77d9180":"markdown"},"source":{"aa22fb59":"from sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import accuracy_score","2cea8a09":"breast_cancer = load_breast_cancer()\ndata = pd.DataFrame(breast_cancer.data,columns=breast_cancer.feature_names)\ndata['target'] = pd.Series(breast_cancer.target)\ndata.head()","6265acbd":"data.info()","8d763f77":"data.describe()","91811d95":"col = data.columns       # .columns gives columns names in data \nprint(col)","94980f02":"ax = sns.countplot(data.target,label=\"Count\")\nB, M = data.target.value_counts()\nprint('Number of Benign: ',B)\nprint('Number of Malignant : ',M)","1ff27f21":"print(data.columns)","b7f05ba2":"featureMeans = list(data.columns[:10])\nfeatureMeans","36209245":"correlationData = data[featureMeans].corr()\nsns.pairplot(data[featureMeans].corr(), diag_kind='kde', size=2);","80af7709":"plt.figure(figsize=(10,10))\nsns.heatmap(data[featureMeans].corr(), annot=True, square=True, cmap='coolwarm')\nplt.show()","7beda68f":"bins = 12\nplt.figure(figsize=(15,15))\nfor idx,atr in enumerate(featureMeans):\n    plt.subplot(5, 2, idx+1)\n    sns.distplot(data[data['target']==1][atr], bins=bins, color='green', label='M')\n    sns.distplot(data[data['target']==0][atr], bins=bins, color='red', label='B')\n    plt.legend(loc='upper right')\nplt.tight_layout()\nplt.show()","f9691f6e":"from sklearn.decomposition import PCA\n\nimport matplotlib.pyplot as plt\n\npca = PCA(n_components=2)\nX_r = pca.fit_transform(data.loc[:,featureMeans])\n\ncolors = ['navy', 'turquoise']\nfor color, i, target_name in zip(colors, [0, 1], data.loc[:, 'target']):\n    plt.scatter(X_r[data.loc[:, 'target'] == i, 0], X_r[data.loc[:, 'target'] == i, 1], color=color, alpha=.8, label=target_name)\nplt.legend(loc='best', shadow=False, scatterpoints=1)\nplt.title('PCA')\nplt.plot()","9815fa89":"X = data.loc[:,featureMeans]\ny = data.loc[:, 'target']","617cb22f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.95, random_state = 42)","cb8581b0":"pipeline = Pipeline([('scaler', StandardScaler()), ('clf', KNeighborsClassifier(n_neighbors = 5))])\nscores = cross_val_score(pipeline, X, y, cv=5) \n\nprint('Acur\u00e1cia - %.2f +- %.2f' % (scores.mean() * 100, scores.std() * 100))","d7d9f318":"data_gs, data_cv, target_gs, target_cv = train_test_split(X, y, test_size=0.95, random_state=42)","e25fb74d":"pipeline = Pipeline([('scaler', StandardScaler()), ('clf', KNeighborsClassifier())])\nparameters = {'clf__n_neighbors': [3,4,5,6,7], 'clf__p': [1, 2, 5]}\nclf = GridSearchCV(pipeline, \n                    parameters,\n                    scoring='accuracy',\n                    cv=5)\nclf.fit(data_gs, target_gs)\nscores = cross_val_score(clf.best_estimator_, data_cv, target_cv, cv=5)\n\nprint(clf.best_params_)\nprint('Accuracy - %.2f +- %.2f' % (scores.mean() * 100, scores.std() * 100))","13d47fdc":"clf = clf.best_estimator_\nkf = StratifiedKFold(n_splits = 5)\nacc = []\nfor train_index, test_index in kf.split(data_cv, target_cv):\n    X_train,X_test = data_cv.iloc[train_index],data_cv.iloc[test_index]\n    y_train,y_test = target_cv.iloc[train_index],target_cv.iloc[test_index]\n    \n    scaler = StandardScaler()\n    X_train = scaler.fit_transform(X_train)\n    X_test = scaler.transform(X_test)\n    \n    clf.fit(X_train,y_train)\n    y_pred = clf.predict(X_test)\n    acc.append(accuracy_score(y_pred,y_test))\n\nacc = np.array(acc)\nprint('Accuracy - %.2f +- %.2f' % (acc.mean() * 100, acc.std() * 100))","ce2d10d3":"## Data Visualization","e5dbee1e":"## Data Analysis","a62860a5":"This database is also available through the UW CS ftp server:\nftp ftp.cs.wisc.edu\ncd math-prog\/cpo-dataset\/machine-learn\/WDBC\/\n\nAlso can be found on UCI Machine Learning Repository: https:\/\/archive.ics.uci.edu\/ml\/datasets\/Breast+Cancer+Wisconsin+%28Diagnostic%29","340dc20c":"### K Fold","e5c605d4":"* K values between 3 and 7 \n* p  values of 1 (Manhattan), 2 (Euclidean), and 5 (Minkowski).","23fa63e8":"## Data Preprocessing","156314a1":"**Cross validation**: 94.20 +- 1.20\n\n\n\n**Grid Search**: {'clf__n_neighbors': 3, 'clf__p': 1} 92.42 +- 1.90\n\n\n\n**KFold**: 92.42 +- 1.90\n","df25170d":"## Conclusion","51346118":"## imports","1225e416":"* mean\n* standard error \n* worst (mean of the three largest values) \n\nOf these features were computed for each image, resulting in 30 features. \n\nAll feature values are recoded with four significant digits.\n\nMissing attribute values: none","784463f8":"## Models","7c1721c0":"### Cross validation\n\n5 cicle with 20% of test data","4602abbe":"### Our dataset already contains the mean values of all the columns","7ff2a640":"Future work: Use PCA method, carefully supervised by receiver operating characteristic (ROC) curve analysis","e0d6e360":"# Breast Cancer Dataset","c740fbbb":"## Read dataset","ef63e562":"## Clean Dataset","c77d9180":"### Grid Search"}}