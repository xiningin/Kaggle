{"cell_type":{"38225a9b":"code","2f1f2de0":"code","de858127":"code","2e0c2174":"code","7a25f600":"code","f5c58883":"code","7f08bfe2":"code","b3337582":"code","bd1042a3":"code","ec327dee":"code","764cc2dc":"code","8f9e9306":"code","01424959":"code","e56f4665":"code","2cd4ccdd":"code","e8c6a0e1":"code","7dcdf598":"code","3c2b2240":"code","0320bc7e":"code","cd29b5ab":"markdown","a8997d15":"markdown","1e6e68d9":"markdown","041694fc":"markdown","6fe4153a":"markdown","2d1ac150":"markdown","f38c2378":"markdown","b9fa1de8":"markdown","f371c519":"markdown"},"source":{"38225a9b":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.lines import Line2D\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nimport math\n\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","2f1f2de0":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","de858127":"train.head(10)","2e0c2174":"test.head(10)","7a25f600":"x_features=[\"PassengerId\",\"Pclass\",\"Name\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Ticket\",\"Fare\",\"Cabin\",\"Embarked\"]\ntrain_x=train[x_features]\ntrain_y=train[\"Survived\"]\ndf_test=test.copy()","f5c58883":"train.info()","7f08bfe2":"df_test.info()","b3337582":"train.describe().T","bd1042a3":"train.isnull().sum()\ntest.isnull().sum()\n#\u5e74\u9f62\u3092\u5e73\u5747\u5024\u3067\u57cb\u3081\u308b\ndf=[train_x,df_test]#\u30c8\u30ec\u30a4\u30f3\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066\u304a\u304f\u7bb1\nfor i in range(2):\n    df[i][\"Age\"]=df[i][\"Age\"].fillna(df[i][\"Age\"].mean()).astype(int)#\u5e73\u5747\u3067\u57cb\u3081\u308b\n    df[i][\"Embarked\"]=df[i][\"Embarked\"].fillna(\"S\")\n    df[i][\"Fare\"]=df[i][\"Fare\"].fillna(df[i][\"Fare\"].mean()).astype(int)\n    df[i].drop(columns=[\"Cabin\",\"Ticket\",\"Name\"],inplace=True)\n#train_x[\"Age\"].fillna(train_x[\"Age\"].mean(),inplace=True)\n#df_test[\"Age\"].fillna(test[\"Age\"].mean(),inplace=True)\n#embarked\u306e\u6b20\u640d\u5024\u306e\u884c\u3092\u6d88\u3059,Fare\u306e\u6b20\u640d\u5024\u306e\u884c\u3092\u6d88\u3059\n#train_x.dropna(subset=[\"Embarked\"],inplace=True)\n#df_test.dropna(subset=[\"Embarked\"],inplace=True)","ec327dee":"df[0].isnull().sum()\ndf[1].isnull().sum()","764cc2dc":"int_column=[\"Pclass\",\"Age\",\"SibSp\",\"Parch\",\"Fare\"]\n\ntmp = df[0].copy()\nfig, ax=plt.subplots(figsize=(24,6),ncols=5,nrows=1)\nplt.subplots_adjust(hspace=0.3)\n\nax[0].hist(tmp[\"Pclass\"])\nax[1].hist(tmp[\"Age\"])#plot\u3067\u306f\u6642\u7cfb\u5217\u306e\u3088\u3046\u306b\u306a\u308b\u3000age_band\u306b\u3059\u308b\u5fc5\u8981\u3042\u308a\nax[2].hist(tmp[\"SibSp\"])\nax[3].hist(tmp[\"Parch\"])\nax[4].hist(tmp[\"Fare\"])\nfor i in range(5):\n    ax[i].set_title(f\"{int_column[i]}\",fontsize=14)\nplt.show()","8f9e9306":"category_column=[\"Survived\",\"Sex\",\"Embarked\"]\nfig, ax=plt.subplots(figsize=(24,6),ncols=3,nrows=1)\nplt.subplots_adjust(hspace=0.3)\n\nax[0].bar(range(2),train[\"Survived\"].value_counts().values,tick_label=train[\"Survived\"].unique())\nax[1].bar(range(2),tmp[\"Sex\"].value_counts().values,tick_label=tmp[\"Sex\"].value_counts().keys())\nax[2].bar(range(3),tmp[\"Embarked\"].value_counts().values,tick_label=tmp[\"Embarked\"].unique())\n\nfor i in range(3):\n    ax[i].set_title(f\"{category_column[i]}\",fontsize=14)\n#Cabin\u306e1\u6587\u5b57\u76ee\u306e\u82f1\u8a9e\u3092\u62bd\u51fa\n#df[\"Cabin\"].str[:1].reset_index().groupby(\"Cabin\").count()","01424959":"for i in range(2):\n    df[i]=pd.get_dummies(df[i],columns=[\"Sex\"])\n    df[i]=pd.get_dummies(df[i],columns=[\"Embarked\"])\n    df[i]=pd.get_dummies(df[i],columns=[\"Pclass\"])\n    df[i][\"Age\"]=df[i][\"Age\"].apply(lambda x:math.floor(int(x)\/10)*10)","e56f4665":"#\u30e2\u30c7\u30eb\u306b\u3064\u304b\u3046\u30c8\u30ec\u30a4\u30f3\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u5909\u6570\u3001\u76ee\u7684\u5909\u6570\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u5909\u6570\u3092\u7528\u610f\nX_train=df[0].drop(columns=[\"PassengerId\"])\nY_train=train_y\nX_test=df[1].drop(columns=[\"PassengerId\"])","2cd4ccdd":"#\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u5206\u5272\nrandom_seed=1\nX_train, X_val, Y_train, Y_val=train_test_split(X_train,Y_train,test_size=0.4,\\\n                                                random_state=random_seed)","e8c6a0e1":"# \u5b66\u7fd2\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\nparams = {\n    \"n_estimators\" : [2, 5, 10, 15, 20, 30],\n    \"criterion\" : [\"gini\"],\n    \"min_samples_split\" : [2, 3, 5, 10, 15, 20],\n    \"max_depth\" : [2, 3, 5, 10, 15],\n    \"random_state\" : [1],\n    \"verbose\" : [False],\n}\n#\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0,RandomForestClassifier()\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6700\u9069\u306a\u3082\u306e\u3092\u898b\u3064\u3051\u308b\nmodel=GridSearchCV(RandomForestClassifier(),params,cv=3)\nmodel = model.fit(X_train, Y_train)#\u5b66\u7fd2\nmodel = model.best_estimator_#\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u305f\u30e2\u30c7\u30eb\n\n# \u691c\u8a3c\u7528\u30bb\u30c3\u30c8\u3092\u7528\u3044\u3066\u8a55\u4fa1\nmodel.score(X_val, Y_val)","7dcdf598":"# \u4e88\u6e2c\nresults = model.predict(X_test)\nresults = pd.Series(results, name = \"Survived\")","3c2b2240":"# \u63d0\u51fa\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\nsubmission = pd.concat([test[\"PassengerId\"], results], axis = 1)\nsubmission.to_csv(\"titanic_submission.csv\", index = False)\nsubmission","0320bc7e":"features = X_train.columns\nimportance = model.feature_importances_\nindices = np.argsort(importance)\n\nplt.figure(figsize = (8,6))\nplt.barh(range(len(indices)), importance[indices], color='cornflowerblue', align='center')\nplt.yticks(range(len(indices)), features[indices])\nplt.show()","cd29b5ab":"## \u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\n- \u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306b\u5165\u308c\u308b\u305f\u3081\u306b\u6570\u5024\u5316\u3059\u308b(Sex,Embarked,Pclass)\n- Age\u309210\u6b73\u3054\u3068\u306e\u968e\u7d1a\u306b\u5206\u3051\u308b","a8997d15":"- X_train\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u3067\u306e\u3001\u30c8\u30ec\u30a4\u30f3\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u5909\u6570\n- X_val\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u3067\u306e\u3001\u8a55\u4fa1\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u5909\u6570\n- Y_train\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u3067\u306e\u3001\u30c8\u30ec\u30a4\u30f3\u30c7\u30fc\u30bf\u306e\u76ee\u7684\u5909\u6570\n- Y_val\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u3067\u306e\u3001\u8a55\u4fa1\u30c7\u30fc\u30bf\u306e\u76ee\u7684\u5909\u6570","1e6e68d9":"## \u6b20\u640d\u5024\u306e\u78ba\u8a8d\n- Age\u306b\u6b20\u640d\u5024171\u500b\n- Cabin\u306b687\u500b \\\nAge\u306f\u5e73\u5747\u5024\u3067\u57cb\u3081\u308b\u3053\u3068\u306b\u3057\u305f(\u30e2\u30c7\u30eb\u306b\u3088\u3063\u3066\u306f\u6b20\u640d\u5024\u306e\u307e\u307e\u6271\u3048\u308b)\\\nCabin\u306b\u306f\u6b20\u640d\u5024\u304c\u591a\u3059\u304e\u308b\u306e\u3067\u5217\u3054\u3068\u9664\u5916\\\nTicket,Name\u3082\u6271\u3044\u306b\u304f\u3044\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u524a\u9664","041694fc":"## \u7279\u5fb4\u91cf\u306e\u53ef\u8996\u5316\nfeature_importances\u306b\u3088\u308a\u3001\u3069\u306e\u8aac\u660e\u5909\u6570\u304c\u30e2\u30c7\u30eb\u306b\u5bc4\u4e0e\u3057\u3066\u3044\u308b\u304b\u304c\u5206\u304b\u308b","6fe4153a":"## \u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3068\u4e88\u6e2c\n- \u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306b\u3088\u308b\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3068\u8a55\u4fa1\u307e\u3067","2d1ac150":"## \u5909\u6570\u306b\u3064\u3044\u3066\n| \u5909\u6570\u540d      | \u5909\u6570\u306e\u8aac\u660e                                 | \u5909\u6570\u306e\u578b |                | \n| :---------: | :----------------------------------------: | :------: | :------------: | \n| PassengerID | \u4e57\u5ba2\u8b58\u5225\u30e6\u30cb\u30fc\u30afID                         | int      |                | \n| Survived    | \u751f\u5b58\u30d5\u30e9\u30b0(0=\u6b7b\u4ea1\u30011=\u751f\u5b58)                 | int      |                | \n| Pclass      | \u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9                             | int      |                | \n| Name        | \u4e57\u5ba2\u306e\u540d\u524d                                 | object   |                | \n| Sex         | \u6027\u5225                                       | object   |                | \n| Age         | \u5e74\u9f62(0.42\u304b\u308980)                                       | float    | \u6b20\u640d\u3042\u308a,\u5de6\u306b\u504f\u3063\u305f\u5206\u5e03| \n| SibSp       |  \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u306b\u540c\u4e57\u3063\u3066\u3044\u308b\u5144\u5f1f\/\u914d\u5076\u8005\u306e\u6570 | int      | \u5de6\u306b\u504f\u3063\u305f\u5206\u5e03 | \n| Parch       | \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u306b\u540c\u4e57\u3057\u3066\u3044\u308b\u89aa\/\u5b50\u4f9b\u306e\u6570      | int      | \u5de6\u306b\u504f\u3063\u305f\u5206\u5e03 | \n| Ticket      | \u30c1\u30b1\u30c3\u30c8\u756a\u53f7                               | object   |                | \n| Fare        | \u6599\u91d1                                       | float    |                | \n| Cabin       | \u5ba2\u5ba4\u756a\u53f7                                   | object   |          \u6b20\u640d\u591a\u6570      |\u3000\n| Embarked    | \u51fa\u6e2f\u5730(S,C,Q,Nan)                                     | object   |   \u6b20\u640d\u3042\u308a             | ","f38c2378":"## \u5206\u6790\u306e\u6d41\u308c\n1. \u524d\u51e6\u7406\n- \u30c7\u30fc\u30bf\u306e\u5206\u5e03\u3084\u69cb\u9020\u306e\u78ba\u8a8d\n- \u6b20\u640d\u5024\u3001\u306f\u305a\u308c\u5024\u306e\u78ba\u8a8d\n- \u53ef\u8996\u5316\n- \u6b20\u640d\u5024\u306e\u51e6\u7406\n- \u30e2\u30c7\u30eb\u3067\u4f7f\u3046\u5909\u6570\u306e\u6a19\u6e96\u5316\u3001\u6b63\u898f\u5316\u3001\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3084\u6570\u5024\u5909\u6570\u3078\u306e\u5909\u63db\n2. \u30e2\u30c7\u30eb\u306e\u69cb\u7bc9(\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3001GBDT\u6728\u3001NN\u306a\u3069\u69d8\u3005)\n3.  \u30e2\u30c7\u30eb\u306b\u3088\u308b\u4e88\u6e2c\u3068\u8a55\u4fa1(\u8a55\u4fa1\u6307\u6a19\u3092\u30e2\u30c7\u30eb\u306b\u7d44\u307f\u8fbc\u3080)\n4.  \u7279\u5fb4\u91cf\u306e\u5bc4\u4e0e\u7387\u306e\u53ef\u8996\u5316","b9fa1de8":"## \u53ef\u8996\u5316\u3092\u3057\u3066\u3044\u304f\n\u6570\u5024\u30c7\u30fc\u30bf\u306b\u95a2\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u5206\u5e03\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306b\u3059\u308b-\n- matplotlib\u306b\u3088\u308b\u53ef\u8996\u5316\n- seaborn\u306b\u3088\u308b\u53ef\u8996\u5316(\u4eca\u56de\u306fmatplotlib\u3067\u53ef\u8996\u5316)","f371c519":"### \u30c8\u30ec\u30a4\u30f3\u30c7\u30fc\u30bf\u3092\u8aac\u660e\u5909\u6570\u3068\u76ee\u7684\u5909\u6570\u306b\u5206\u3051\u308b\n- train_x:\u30c8\u30ec\u30a4\u30f3\u30c7\u30fc\u30bf\u306b\u8aac\u660e\u5909\u6570\n- train_y:\u30c8\u30ec\u30a4\u30f3\u30c7\u30fc\u30bf\u306e\u76ee\u7684\u5909\u6570"}}