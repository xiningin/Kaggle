{"cell_type":{"fae2e9b0":"code","1dd68a82":"code","5fbe36aa":"code","1723960d":"code","9febddf7":"code","7a235c6b":"code","25aa322b":"code","223b93c2":"markdown","3e35882d":"markdown","5e97db2f":"markdown","02df0fe8":"markdown","266e23ec":"markdown"},"source":{"fae2e9b0":"import random\nimport pandas as pd\nimport plotly.express as px\nimport xgboost\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nrandom.seed(64)\nnp.random.seed(64)","1dd68a82":"%time df_test = pd.read_parquet('..\/input\/tps202112-parquet\/test.pq')\n%time df = pd.read_parquet('..\/input\/tps202112-parquet\/train.pq')","5fbe36aa":"df.info()","1723960d":"label_encoder = LabelEncoder()\nX_train, y_train = df.drop(columns=['Id', 'Cover_Type']), label_encoder.fit_transform(df.Cover_Type)\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=.2, shuffle=True)\n\nX_test = df_test.drop(columns=['Id'])","9febddf7":"sane_defaults = {\n    'objective': 'multi:softmax',\n    'num_class': len(label_encoder.classes_),\n    'tree_method': 'gpu_hist',\n    'sampling_method': 'gradient_based',\n    'subsample': .25,\n    'max_depth': 4,\n    'learning_rate': .10,\n    'colsample_bytree': .5,\n    'eval_metric': ['mlogloss', 'merror'],\n    'predictor': 'gpu_predictor'\n}\n\nbooster = xgboost.train(\n    params=sane_defaults,\n    dtrain=xgboost.DMatrix(X_train, label=y_train),\n    num_boost_round=3000,\n    early_stopping_rounds=50,\n    evals=[(xgboost.DMatrix(X_val, label=y_val), 'val')],\n    verbose_eval=100\n)","7a235c6b":"px.bar(\n    x=booster.get_fscore().keys(),\n    y=booster.get_fscore().values(),\n    title='Feature importance'\n)","25aa322b":"sub = df_test[['Id']].assign(\n    Cover_Type=label_encoder.inverse_transform(booster.predict(xgboost.DMatrix(X_test)).astype(np.int8))\n)\n\nsub.to_csv('submission.csv', index=False)\n!head -n 5 submission.csv","223b93c2":"Feature importance\n==","3e35882d":"Let's submit:","5e97db2f":"XGBoost baseline\n==\n\nThis notebook is an example of using the output of a previous notebook as input. It uses the output of [this notebook](https:\/\/www.kaggle.com\/kaaveland\/tps202112-parquet), which converts the competition dataset into parquet format, which is much faster to load, and has appropriate datatypes for the columns, instead of getting everything as `int64`.\n\nCheck this out:","02df0fe8":"Bonus: Training a booster\n==\n\nJust to submit something from this notebook:","266e23ec":"And of course, the `DataFrame`has the correct dtypes in it:"}}