{"cell_type":{"9817e021":"code","c5d86146":"code","149d0855":"code","8a02d51a":"code","8ab9e09e":"code","9ff4b5a6":"code","4b801124":"code","64af0ede":"code","5efd39d9":"code","4b1769bc":"code","64aece1b":"code","33f3498b":"code","fa7fd830":"code","2929bb53":"code","5afcd77d":"code","4b697c62":"code","7e12d03a":"code","6f497656":"code","3e8e90b4":"code","1f4f9739":"code","e618b6cf":"code","bc7918df":"code","d2843d4f":"code","679eb827":"code","1e5b7b08":"code","4fdc6718":"code","448fb2cc":"code","1d8f1a5e":"code","9858d5ec":"code","6fed1623":"code","4a3fa161":"code","7b1e1694":"code","93fbd3cd":"code","88aae95e":"code","3ad3b4ec":"code","f06f971d":"code","1f8b5e83":"code","a052ffda":"code","41f02c69":"markdown","d2806c85":"markdown","ae7dabc8":"markdown","66f5b5ea":"markdown","181f1ffd":"markdown","e2be5d71":"markdown","0775ed30":"markdown","cf0fc545":"markdown","dda49030":"markdown","0b89c6cd":"markdown","28a55ddc":"markdown","a2e4ae71":"markdown","c8ee9110":"markdown","ea7dc914":"markdown","7b6bca44":"markdown","113d6f13":"markdown","66eef504":"markdown","e53c5a05":"markdown","0a6cd9fc":"markdown","d2157642":"markdown","0a1db792":"markdown","b3a9483e":"markdown","e64d0ad0":"markdown","2d9e6066":"markdown","5259060b":"markdown","692ecc01":"markdown","63f22363":"markdown","b6d478e9":"markdown","bd77438d":"markdown","895e6f5b":"markdown","787ff15c":"markdown","898b28b7":"markdown","4fe6bd20":"markdown","0007d33e":"markdown","1c7dd3e4":"markdown","a3d7a1cc":"markdown","afe2c777":"markdown","0877a6a6":"markdown","c577ec82":"markdown","fa0f6335":"markdown","9c6e64ac":"markdown","c8ce813b":"markdown"},"source":{"9817e021":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c5d86146":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom sklearn.model_selection import train_test_split, GridSearchCV, RandomizedSearchCV, RepeatedStratifiedKFold\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix, ConfusionMatrixDisplay, PrecisionRecallDisplay, roc_curve, auc\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')","149d0855":"from IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = 'all'\npd.set_option('display.max_columns', 500)","8a02d51a":"df = pd.read_csv('\/kaggle\/input\/brfss-2020-survey-data\/brfss2020.csv')\ndf.info()\ndf.head()","8ab9e09e":"df_selected = df[['SEXVAR', '_IMPRACE', '_AGE65YR', 'GENHLTH', '_RFBMI5', '_TOTINDA', '_SMOKER3', 'DRNKANY5', 'DIABETE4', 'CVDSTRK3', 'CVDCRHD4', 'CVDINFR4']]\ndf_selected.head()","9ff4b5a6":"df_selected.isnull().sum()\ndf_selected = df_selected.dropna()","4b801124":"df_selected['SEXVAR'].value_counts()\ndf_selected = df_selected.rename(columns={\"SEXVAR\":\"Gender\"})\nsns.countplot(x='Gender', data=df_selected)","64af0ede":"df_selected['_IMPRACE'].value_counts()\ndf_selected = df_selected.rename(columns={\"_IMPRACE\":\"Race\"})\nsns.countplot(x='Race', hue='Gender', data=df_selected)","5efd39d9":"df_selected['_AGE65YR'].value_counts()\ndf_selected.drop(df_selected[df_selected['_AGE65YR'] == 3].index, inplace = True)\ndf_selected = df_selected.rename(columns={\"_AGE65YR\":\"Over 65 Years Old\"})\nsns.countplot(x='Over 65 Years Old', hue='Gender', data=df_selected)","4b1769bc":"df_selected['GENHLTH'].value_counts()\ndf_selected = df_selected[(df_selected['GENHLTH'] != 7) & (df_selected['GENHLTH'] != 9)]\ndf_selected = df_selected.rename(columns={\"GENHLTH\":\"General Health Status\"})\nsns.countplot(x='General Health Status', hue='Gender', data=df_selected)","64aece1b":"df_selected['_RFBMI5'].value_counts()\ndf_selected.drop(df_selected[df_selected['_RFBMI5'] == 9].index, inplace = True)\ndf_selected = df_selected.rename(columns={\"_RFBMI5\":\"Obesity and Overweight Status\"})\nsns.countplot(x='Obesity and Overweight Status', hue='Gender', data=df_selected)","33f3498b":"df_selected['_TOTINDA'].value_counts()\ndf_selected.drop(df_selected[df_selected['_TOTINDA'] == 9].index, inplace = True)\ndf_selected = df_selected.rename(columns={\"_TOTINDA\":\"Physical Activity Status\"})\nsns.countplot(x='Physical Activity Status', hue='Gender', data=df_selected)","fa7fd830":"df_selected['_SMOKER3'].value_counts()\ndf_selected.drop(df_selected[df_selected['_SMOKER3'] == 9].index, inplace = True)\nchg = {2 : 1, 3 : 2, 4 : 3}\ndf_selected['_SMOKER3'].replace(to_replace=chg, inplace=True)\ndf_selected = df_selected.rename(columns={\"_SMOKER3\" : \"Tobacco Usage\"})\nsns.countplot(x='Tobacco Usage', hue='Gender', data=df_selected)","2929bb53":"df_selected['DRNKANY5'].value_counts()\ndf_selected = df_selected[(df_selected['DRNKANY5'] != 7) & (df_selected['DRNKANY5'] != 9)]\ndf_selected = df_selected.rename(columns={\"DRNKANY5\":\"Alcohol Usage\"})\nsns.countplot(x='Alcohol Usage', hue='Gender', data=df_selected)","5afcd77d":"df_selected['DIABETE4'].value_counts()\ndf_selected = df_selected[(df_selected['DIABETE4'] != 7) & (df_selected['DIABETE4'] != 9)]\nchg = {3 : 2, 4 : 1}\ndf_selected['DIABETE4'].replace(to_replace=chg, inplace = True)\ndf_selected = df_selected.rename(columns={\"DIABETE4\":\"Diabetes Status\"})\nsns.countplot(x='Diabetes Status', hue='Gender', data=df_selected)","4b697c62":"df_selected['CVDSTRK3'].value_counts()\ndf_selected = df_selected[(df_selected['CVDSTRK3'] != 7) & (df_selected['CVDSTRK3'] != 9)]\ndf_selected = df_selected.rename(columns={\"CVDSTRK3\" : \"Stroke Status\"})\nsns.countplot(x='Stroke Status', hue='Gender', data=df_selected)","7e12d03a":"df_selected['CVDCRHD4'].value_counts()\ndf_selected = df_selected[(df_selected['CVDCRHD4'] != 7) & (df_selected['CVDCRHD4'] != 9)]\ndf_selected = df_selected.rename(columns={\"CVDCRHD4\" : \"Coronary Heart Disease Status\"})\nsns.countplot(x='Coronary Heart Disease Status', hue='Gender', data=df_selected)","6f497656":"df_selected['CVDINFR4'].value_counts()\ndf_selected = df_selected[(df_selected['CVDINFR4'] != 7) & (df_selected['CVDINFR4'] != 9)]\nchg = {1 : 0, 2 : 1}\ndf_selected['CVDINFR4'].replace(to_replace=chg, inplace = True)\ndf_selected = df_selected.rename(columns={\"CVDINFR4\" : \"Heart Attack Status\"})\nsns.countplot(x='Heart Attack Status', hue='Gender', data=df_selected)","3e8e90b4":"df_selected.info()\ndf_selected.head()","1f4f9739":"df_selected.hist(alpha=0.5, figsize=(12, 12))\nplt.show()","e618b6cf":"df_sampled = df_selected.sample(frac = 0.1, random_state = 42)\ndf_sampled.info()","bc7918df":"X = df_sampled.drop(columns=['Heart Attack Status'])\ny = df_sampled['Heart Attack Status']","d2843d4f":"scaled_X = MinMaxScaler(feature_range=(0,1)).fit_transform(X)\nX = pd.DataFrame(scaled_X, columns=X.columns)\nX.head()","679eb827":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)","1e5b7b08":"param_grid = {'n_neighbors': np.arange(5, 50),\n              'leaf_size': np.arange(30, 50),\n              'weights' : ['uniform', 'distance'],\n              'metric' : ['euclidean', 'manhattan']}\n\nknn_rscv = RandomizedSearchCV(\n    KNeighborsClassifier(),\n    param_grid,\n    n_iter = 50,\n    verbose = True, \n    cv = 3, \n    n_jobs = -1,\n    scoring = 'accuracy',\n    return_train_score = True)\n\nknn_rscv.fit(X, y)","4fdc6718":"#check top performing n_neighbors value\nbest_param = knn_rscv.best_params_\nprint(best_param)\n#check mean score for the top performing value of n_neighbors\nknn_rscv.best_score_","448fb2cc":"knn = KNeighborsClassifier(n_neighbors = best_param['n_neighbors'], weights = best_param['weights'], metric = best_param['metric'], leaf_size = best_param['leaf_size']) \nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_test)","1d8f1a5e":"accuracy = accuracy_score(y_test.values, y_pred)\nprint(f\"Accuracy of model: {accuracy}\\n\")\nprint(classification_report(y_test, y_pred))","9858d5ec":"knn_cm = confusion_matrix(y_test, y_pred)\ndisp = ConfusionMatrixDisplay(confusion_matrix = knn_cm)\ndisp.plot()","6fed1623":"probs = knn_rscv.predict_proba(X_test)\npreds = probs[:,1]\nfpr, tpr, threshold = roc_curve(y_test, preds)\nroc_auc = auc(fpr, tpr)\n\nplt.figure()\nplt.plot(fpr, tpr, label='RandomizedSearchCV (area = %0.2f)' % roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.show()","4a3fa161":"# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')","7b1e1694":"param_grid = {'solver': ['newton-cg', 'lbfgs', 'liblinear'],\n              'penalty': ['l1', 'l2'],\n              'C' : np.logspace(-4, 4, 20)}\n\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=1)\n\nlr_rscv = RandomizedSearchCV(\n    LogisticRegression(),\n    param_grid,\n    n_iter = 50,\n    verbose = True, \n    cv = cv, \n    n_jobs = -1,\n    scoring = 'accuracy',\n    return_train_score = True)\n\nlr_rscv.fit(X, y)","93fbd3cd":"#check top performing model parameters\nbest_param = lr_rscv.best_params_\nprint(best_param)\n#check top performing model's score\nlr_rscv.best_score_","88aae95e":"lr = LogisticRegression(solver = best_param['solver'], penalty = best_param['penalty'], C = best_param['C'])\nlr.fit(X_train, y_train)","3ad3b4ec":"y_pred = lr.predict(X_test)","f06f971d":"accuracy = accuracy_score(y_test.values, y_pred)\nprint(f\"Accuracy of model: {accuracy}\\n\")\nprint(classification_report(y_test, y_pred))","1f8b5e83":"knn_cm = confusion_matrix(y_test, y_pred)\ndisp = ConfusionMatrixDisplay(confusion_matrix = knn_cm)\ndisp.plot()","a052ffda":"probs = lr_rscv.predict_proba(X_test)\npreds = probs[:,1]\nfpr, tpr, threshold = roc_curve(y_test, preds)\nroc_auc = auc(fpr, tpr)\n\nplt.figure()\nplt.plot(fpr, tpr, label='RandomizedSearchCV (area = %0.2f)' % roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.show()","41f02c69":"**DIABETE4**","d2806c85":"**CVDSTRK3**","ae7dabc8":"In the CVDINFR4 column, participants who had a heart attack also called a myocardial infarction are marked with 1. Participants who stated that they did not had it are marked with 2. 9 means missing values. 7 means Don\u2019t know\/Not Sure. Both of them removed. \n\nFor better reading, the column has been renamed to 'Heart Attack Status'.\n\nAfter editing:\n\n* 0 means Had Heart Attack\n* 1 means Not Had Heart Attack\n\nThis variable is the dependent variable of the project.","66f5b5ea":"In the CVDCRHD4 column, participants who had angina or coronary heart disease are marked with 1. Participants who stated that they did not had it are marked with 2. 9 means missing values. 7 means Don\u2019t know\/Not Sure. Both of them removed.\n\nFor better reading, the column has been renamed to 'Coronary Heart Disease Status'.","181f1ffd":"**CVDINFR4**","e2be5d71":"### **Splitting the Dataset as Train and Test Sets**","0775ed30":"The Behavioral Risk Factor Surveillance System (BRFSS) is a collaborative project between all of the states in the United States and participating US territories and the Centers for Disease Control and Prevention (CDC). \n\nBRFSS\u2019s objective is to collect uniform state-specific data on health risk behaviors, chronic diseases and conditions, access to health care, and use of preventive health services related to the leading causes of death and disability in the United States. BRFSS conducts both landline and mobile phone-based surveys with individuals over the age of 18. General factors assessed by the BRFSS in 2020 included health status and healthy days, exercise, insufficient sleep, chronic health conditions, oral health, tobacco use, cancer screenings, and access to healthcare.\n\nSurvey data has been published annually by the [CDC](https:\/\/www.cdc.gov\/) since 1984. You can find the [original dataset](https:\/\/www.cdc.gov\/brfss\/annual_data\/annual_2020.html) as a ASCII format and past years data from [here](https:\/\/www.cdc.gov\/brfss\/annual_data\/annual_data.htm).\n\nSurvey data is shared by CDC in ASCII format. After converting the data to csv format, it was also published on [Kaggle](https:\/\/www.kaggle.com\/aemreusta\/brfss-2020-survey-data).\n\nThe aim of this project is to build a model with relatively high accuracy and AUC that could serve as an awareness-tool for those at high risk of developing heart disease.\n\nThe data contains information about 401958 unique survey participant. As a result of my research to select the ones related to coronary artery disease among a total of 279 different features, according to the information I got from the Texas Heart Institute [website](https:\/\/www.texasheart.org\/heart-health\/heart-information-center\/topics\/heart-disease-risk-factors\/), there are 13 risk factors.\n\n1. High Blood Pressure (Hypertension)\n2. High Blood Cholesterol\n3. Diabetes\n4. Obesity and Overweight\n5. Smoking\n6. Physical Inactivity\n7. Gender\n8. Heredity\n9. Age\n10. Stress\n11. Sex Hormones\n12. Birth Control Pills\n13. Alcohol\n\nFeatures containing those information from survey data:\n\n* Diabetes -> DIABETE4\n* Obesity and Overweight -> \\_RFBMI5\n* Smoking -> \\_SMOKER3\n* Physical Inactivity -> \\_TOTINDA\n* Gender -> SEXVAR\n* Heredity -> \\_IMPRACE\n* Age -> \\_AGE65YR\n* Alcohol -> DRNKANY5\n\nUnfortunately, the survey data does not contain other important information. As I continued to research, I found in a different [article](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC5686931\/) that angina or coronary heart disease and stroke are directly related to coronary artery disease. After that, I also selected these features from survey data.\n\n* Coronary Heart Disease -> CVDCRHD4\n* Stroke -> CVDSTRK3\n\nAlso, the heart attack(also called a myocardial infarction) feature selected as the **dependent\/response** feature.\n\n* Heart Attack -> CVDINFR4","cf0fc545":"## **Predictive Modelling**","dda49030":"### **Taking Sample From Dataset**","0b89c6cd":"**DRNKANY5**","28a55ddc":"**_SMOKER3**","a2e4ae71":"In the \\_TOTINDA column, participants who have done physical activity or exercise outside of their regular job in the last 30 days are marked with 1. Participants who stated that they did not do it are marked with 2. 9 means missing values and removed.\n\nFor better reading, the column has been renamed to 'Physical Activity Status'.","c8ee9110":"Since missing values are very few compared to the size of the data, there is no problem in deleting them.","ea7dc914":"**GENHLTH**","7b6bca44":"SEXVAR column contains participants gender information. 1 means male and 2 means female. For better reading, the column renamed as 'Gender'.","113d6f13":"**SEXVAR**","66eef504":"**Last Shape of Data Set**","e53c5a05":"## **Results**","0a6cd9fc":"### **K Neighbors Classifier**","d2157642":"**CVDCRHD4**","0a1db792":"The \\_IMPRACE column contains participants race information. \n\n* 1 means White \n* 2 means Black\n* 3 means Asian\n* 4 means American Indian\/Alaskan Native\n* 5 means Hispanic\n* 6 means Other race\n\nFor better reading, the column renamed as 'Race'.","b3a9483e":"## **Setting the Working Environment**","e64d0ad0":"The GENHLTH column contains participants general health information. \n\n* 1 means excellent\n* 2 means very good\n* 3 means good\n* 4 means fair\n* 5 means poor\n* 7 and 9 means Don\u2019t know\/Not Sure\/Refused\n\nFor better reading, the column renamed as 'General Health Status'. Uncertain values removed.","2d9e6066":"# **Heart Attack Prediction Model**","5259060b":"In the CVDSTRK3 column, participants who had stroke at least one time in their life are marked with 1. Participants who stated that they did not had it are marked with 2. 9 means missing values. 7 means Don\u2019t know\/Not Sure. Both of them removed.\n\nFor better reading, the column has been renamed to 'Stroke Status'.","692ecc01":"**_TOTINDA**","63f22363":"## **Reading Data and Selecting The Variables**","b6d478e9":"### **Logistic Regression**","bd77438d":"**_AGE65YR**","895e6f5b":"The \\_SMOKER3 column contains information about participants tobacco usage. \n\n* 1 means Everyday smoker\n* 2 means Someday smoker\n* 3 means Former smoker\n* 4 means Non-smoker\n* 9 means Don\u2019t know\/Not Sure\/Refused\n\nFor better reading, the column renamed as 'Tobacco Usage'. Uncertain values removed. Since the effects of smoking some days and smoking everyday on heart attack are not very different, these two values were combined and all the variables were renamed.\n\n After editing:\n\n* 1 means smoker\n* 2 means former smoker\n* 3 means non-smoker","787ff15c":"## **Data Cleaning and Exploration**","898b28b7":"To avoid a strong class imbalance between cases with and without heart attack, project can be performed with a dataset of 50% with and without heart attack. Likewise, it can be used in a dataset with 60% heart attack and 40% without heart attack. \n\nSince K Means Classifier is not a very suitable model for large data sets, if Random Forests, Gradient Boosting, AdaBoost, Neural Networks are used instead of using it, the entire data set can be included in the training of the model. And it would also be good to see the performance of these models.","4fe6bd20":"**\\_RFBMI5**","0007d33e":"**\\_IMPRACE**","1c7dd3e4":"The DIABETE4 column contains information about participants diabetes mellitus. \n\n* 1 means Has Diabetes\n* 2 means Has Diabetes but Only During Pregnancy Period just for Female Participants\n* 3 means Not Has Diabetes\n* 4 means Has Pre-diabetes or Borberline Diabetes\n* 7 means Don\u2019t know\/Not Sure \n* 9 means Refused\n\nFor better reading, the column renamed as 'Diabetes Status'. Uncertain values removed. Since the effects of pregnancy diabetes on heart attack are not very important, they were combined with 'Not Has Diabetes'. On the other hand, since pre-diabetes or borderline diabetes is associated with heart diseases, these were combined with 'Has Diabetes'.\n\nAfter editing:\n\n* 1 means Has Diabetes\n* 2 means Not Has Diabetes","a3d7a1cc":"The \\_RFBMI5 column contains information about the participants' obesity and overweight status using the BMI score. Those with a BMI score of 25 and above marked 2, lower ones marked as 1. 9 means missing values and removed.\n\nFor better reading, the column renamed as 'Obesity and Overweight Status'.","afe2c777":"**Looking for Missing Values and Handling Them**","0877a6a6":"### **Feature Works**","c577ec82":"It is reasonable to choose a very small portion of the dataset, since training a model in free cloud services and finding parameters on a dataset of this size takes a lot of time, and often even cannot be completed successfully.","fa0f6335":"The accuracy values of both models are very close to each other and are at an acceptable level. Likewise, the AUC is above 0.8 and quite high. But the scores of precision and recall to heart attack prediction show us that something is wrong. Also, f1 score confirm this. The reason for this problem may be the large difference between the number of people who have had a heart attack and those who have not. The logistic regression model seems more suitable for this project because of the calculation method it uses.","9c6e64ac":"The \\_AGE65YR column contains information about the age of the participants. Participants aged 65 and older are marked as 2, while younger ones are marked as 1. 3 means missing values and they removed.\n\nFor better reading, the column renamed as 'Over 65 Years Old'.","c8ce813b":"In the DRNKANY5 column, participants who having had at least one drink of alcohol in the past 30 days are marked with 1. Participants who stated that they did not drink it are marked with 2. 9 means missing values. 7 means Don\u2019t know\/Not Sure. Both of them removed.\n\nFor better reading, the column has been renamed to 'Physical Activity Status'."}}