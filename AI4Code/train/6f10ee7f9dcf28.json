{"cell_type":{"e1327f8b":"code","eec9965b":"code","b3f6f2e3":"code","55e941fc":"code","90c0ad4c":"code","a3b8bcc7":"code","525b4c19":"code","1f186be7":"code","6f8f7d10":"code","bf7eae52":"code","3589b4bc":"code","c59d1375":"code","c0288f88":"code","1b015371":"code","d6f4f64c":"code","3f1ee34d":"code","f9efcd1a":"code","18e96cd2":"code","5b8f568a":"code","d37c163e":"code","cd5c1ca7":"code","daf60b8d":"code","b94de638":"code","78bb03e0":"code","77d0632f":"code","c37a6b93":"code","e6ed80b8":"code","5bf84d2b":"markdown","f5315cab":"markdown","48eac834":"markdown","742d5c85":"markdown","c0a38f3d":"markdown","c287ad7e":"markdown","72de7141":"markdown","28027d9b":"markdown","66329675":"markdown","97a33c06":"markdown","3cc1cb78":"markdown","d96db37a":"markdown","659bfa5c":"markdown"},"source":{"e1327f8b":"# Import \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib.image import imread\nimport cv2\nimport seaborn as sns\nfrom tensorflow.keras.models import Sequential, load_model\nfrom tensorflow.keras.layers import Dense,Conv2D,Flatten,Dropout,MaxPool2D\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom tensorflow.keras.utils import to_categorical\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.preprocessing import image\nplt.rcParams['figure.figsize'] = (12,7)\n\n# Input data files are available in the \"..\/input\/\" directory.\n\nimport os\nprint(os.listdir(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\"))","eec9965b":"infected = os.listdir(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\")\ninfected_path = \"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\"\nprint(\"Length of infected data = \",len(infected),'images')\nuninfected = os.listdir(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\")\nuninfected_path = \"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\"\nprint(\"Length of uninfected data = \",len(uninfected),'images')","b3f6f2e3":"for i in range(5):\n    plt.subplot(1,5,i+1)\n    plt.imshow(cv2.imread(infected_path+'\/'+infected[i]))\n    plt.title('PARASITIZED CELL')\n    plt.tight_layout()\nplt.show()","55e941fc":"for i in range(5):\n    plt.subplot(1,5,i+1)\n    plt.imshow(cv2.imread(uninfected_path+'\/'+uninfected[i]))\n    plt.title('UNINFECTED CELL')\n    plt.tight_layout()\nplt.show()","90c0ad4c":"dim1 = []\ndim2 = []\nfor file in infected:\n    try:\n        imag = imread(infected_path+'\/'+file)\n        d1,d2,colors = imag.shape\n        dim1.append(d1)\n        dim2.append(d2)\n    except:\n        None","a3b8bcc7":"sns.jointplot(dim1,dim2)","525b4c19":"print('Mean of X dimensions - ',np.mean(dim1))\nprint('Mean of Y dimensions - ',np.mean(dim2))","1f186be7":"cv2.imread(infected_path+'\/'+infected[0]).max()","6f8f7d10":"img_shape = (130,130,3)\nimage_gen = ImageDataGenerator(rotation_range = 20,\n                              width_shift_range = 0.1,\n                              height_shift_range=0.1,\n                              rescale=1 \/ 255,\n                              shear_range=0.1,\n                              zoom_range=0.1,\n                              horizontal_flip=True,\n                              fill_mode='nearest',\n                              validation_split=0.2)","bf7eae52":"image_gen.flow_from_directory('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images')","3589b4bc":"train = image_gen.flow_from_directory('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images',\n                                     target_size =img_shape[:2],\n                                     color_mode='rgb',\n                                     batch_size = 16,\n                                     class_mode='binary',shuffle=True,\n                                     subset=\"training\")\n\nvalidation = image_gen.flow_from_directory('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images',\n                                     target_size = img_shape[:2],\n                                     color_mode='rgb',\n                                     batch_size = 16,\n                                     class_mode='binary',\n                                     subset=\"validation\",shuffle=False)\n\n","c59d1375":"train.class_indices","c0288f88":"# Model 1 ---\nmodel = Sequential()\n\nmodel.add(Conv2D(filters=32,kernel_size=(3,3),input_shape = (130,130,3),activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(filters=64,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(filters=64,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\n\nmodel.add(Flatten())\nmodel.add(Dense(128,activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])","1b015371":"model.summary()","d6f4f64c":"early = EarlyStopping(monitor='val_loss',patience=2,verbose=1)","3f1ee34d":"model.metrics_names","f9efcd1a":"model.fit_generator(train,\n                   epochs=20,\n                   validation_data=validation,\n                   callbacks=[early])","18e96cd2":"losses = pd.DataFrame(model.history.history)","5b8f568a":"losses[['loss','val_loss']].plot()","d37c163e":"losses[['accuracy','val_accuracy']].plot()","cd5c1ca7":"predictions = model.predict_generator(validation)","daf60b8d":"predictions = predictions>0.5 # The most important factor, directly control precision and recall.","b94de638":"print('Confusion Matrix: \\n',confusion_matrix(validation.classes,predictions),'\\n')\nprint('Classification Report: \\n\\n',classification_report(validation.classes,predictions))","78bb03e0":"model.save('model.h5')","77d0632f":"img = image.load_img(infected_path+'\/'+infected[22],target_size = img_shape)\nimg","c37a6b93":"img_arr = image.img_to_array(img)","e6ed80b8":"model.predict_classes(img_arr.reshape(1,130,130,3))","5bf84d2b":"Let's create the model - ","f5315cab":"<h3>**Data Visualisation - ** <\/h3>\n\n<h4>&nbsp;&nbsp;&nbsp;&nbsp; Infected Data - <\/h4>\n","48eac834":"As we can see that there is clear difference between infected and uninfected cells. There is a small clot inside infected cells while unifected cells are clean. \nNow, let's explore the dimension of cells as we have to reshape them before feeding them to algorithm.","742d5c85":"So, classes 0 are labelled as Parasitized and 1 as Uninfected.","c0a38f3d":"Let's see how to use this model - ","c287ad7e":"Let's check the mean of dimensions. We can use this value to reshape all the images.","72de7141":"Also let's check if the array values of images are normalised.","28027d9b":"Adding Early Stopping Parameter - ","66329675":"So, values are not normalised too.\nLet's create a ImageGenerator and we will use this to divide the data into train and validation set, normalise the dataset and reshape the imeges - ","97a33c06":"Saving the model - ","3cc1cb78":"So, our model predicted this image to be of class 0 which is Parasitized and this image is of infected cell. So our model prediction is right.","d96db37a":"<h4>&nbsp;&nbsp;&nbsp;&nbsp; Uninfected Data - <\/h4>","659bfa5c":"Let's generate the test and validation dataset - \n"}}