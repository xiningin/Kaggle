{"cell_type":{"14d634ff":"code","ff37fafc":"code","d621b2b6":"code","96322067":"code","3d6dd29e":"code","b3455ca1":"code","96934ca1":"code","97708292":"code","20f21136":"code","c5751214":"code","aa072512":"code","b78740aa":"code","86f5d558":"code","a2afebb3":"code","fa91651c":"code","5d67fc29":"code","7f6641a4":"code","a57ae4a2":"code","66775a3c":"code","cb4e2368":"code","3c6e7669":"code","004e0cf7":"code","e64b39e5":"markdown","0568113b":"markdown","3aa5b127":"markdown","e2e58ca7":"markdown","60907c52":"markdown","d565b5a1":"markdown","f4467e2c":"markdown","f49c5a3f":"markdown","16c37868":"markdown","a38ad59a":"markdown","b29f2009":"markdown","b6ffaf91":"markdown","fec3aacc":"markdown","fcecc554":"markdown","6f624594":"markdown","a5f05457":"markdown","bf76e656":"markdown","33cb1c4e":"markdown","64ee535d":"markdown","d13d2ca6":"markdown","3a14655a":"markdown","9f9fe170":"markdown","f982ed94":"markdown","2cded71d":"markdown","851d2443":"markdown","3ca1bcfa":"markdown","658c744d":"markdown","2f050f80":"markdown","8b028180":"markdown","4a15ff88":"markdown"},"source":{"14d634ff":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n%matplotlib inline\nfrom datetime import datetime\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ff37fafc":"df = pd.read_csv('\/kaggle\/input\/forest-fires-in-brazil\/amazon.csv', encoding = 'windows-1251')\ndf['number'] = round(df['number'])\ndf.head()","d621b2b6":"df['date'].unique()","96322067":"df.drop('date', inplace = True, axis = 1)\ndf.info()","3d6dd29e":"df['month'].unique()","b3455ca1":"df['month'].replace({'Janeiro' : 'Jan', 'Fevereiro' : 'Feb', 'Mar\u0437o' : 'March',\n                    'Abril' : 'Apr', 'Maio' : 'May', 'Junho' : 'June', \n                     'Julho' : 'July', 'Agosto' : 'Aug', 'Setembro' : 'Sep',\n                     'Outubro' : 'Oct', 'Novembro' : 'Nov', 'Dezembro' : 'Dec'\n                    }, inplace = True)\ndf['month_year'] = pd.to_datetime(df['month'] + '.' + df['year'].astype('str'))\ndf.head()","96934ca1":"latitude={\n    'Acre':-9.02,'Alagoas':-9.57,'Amapa':02.05,'Amazonas':-5.00,'Bahia':-12.00,'Ceara':-5.00,\n          \n          'Distrito Federal':-15.45,'Espirito Santo':-20.00,'Goias':-15.55,'Maranhao':-5.00,'Mato Grosso':-14.00\n          \n          ,'Minas Gerais':-18.50,'Par\u0431':-3.20,'Paraiba':-7.00,'Pernambuco':-8.00,'Piau':-7.00,'Rio':-22.90,\n          \n          'Rondonia':-11.00,'Roraima':-2.00,'Santa Catarina':-27.25,'Sao Paulo':-23.32,'Sergipe':-10.30,\n         \n         'Tocantins':-10.00\n         }\n\n\nlongitude={\n    'Acre':-70.8120,'Alagoas':-36.7820,'Amapa':-50.50,'Amazonas':-65.00,'Bahia':-42.00,'Ceara':-40.00,\n    \n    'Distrito Federal':-47.45,'Espirito Santo':-40.45,'Goias':-50.10,'Maranhao':-46.00,'Mato Grosso':-55.00,\n    \n    'Minas Gerais':-46.00,'Par\u0431':-52.00,'Paraiba':-36.00,'Pernambuco':-37.00,'Piau':-73.00, 'Rio':-43.17,\n    \n    'Rondonia':-63.00,'Roraima':-61.30,'Santa Catarina':-48.30,'Sao Paulo':-46.37,'Sergipe':-37.30,\n    \n    'Tocantins':-48.00\n}\ndf['latitude'] = df['state'].map(latitude)\ndf['longitude'] = df['state'].map(longitude)\n\n# calculations\ngroup_by_state = df \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = False) \\\n    .reset_index() \\\n    .drop('index', axis = 1)\n\n# viz\nfig = plt.figure(figsize = (25, 10))\nax = fig.add_axes([0, 0, 1, 1])\n\n# chart\nax.bar(x = group_by_state['state'][:1], height = group_by_state['number'][:1], color = 'maroon')\nax.bar(x = group_by_state['state'][2:5], height = group_by_state['number'][2:5], color = 'firebrick')\nax.bar(x = group_by_state['state'][5:], height = group_by_state['number'][5:])\n\n# axis\nsns.despine()\n\n# annotate\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate('{:.0f}'.format(height), (x + width\/2, y + height*1.02), ha='center', color = 'black', fontsize = 16, fontweight = 'bold') \n\n# ticks\nplt.yticks(range(0, 100001, 10000))\nplt.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\nplt.xticks(rotation = 90)\n\n# title\nplt.title('Number of fires by state', x = 0.05, y = 1.1, color = 'black', fontsize = 26, fontweight = 'bold')\n\nplt.show()","97708292":"# calculations\nm_g = df \\\n    .query(\"state == 'Mato Grosso'\")\nm_g_by_year = m_g \\\n    .groupby('year', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .reset_index() \\\n    .drop('index', axis = 1)\n\n# viz\n\nfig = plt.figure(figsize = (13, 6))\nax = fig.add_axes([0, 0, 1, 1])\n\nsns.lineplot(x = m_g_by_year['year'], y = m_g_by_year['number'], lw = 3)\nplt.scatter(x = m_g_by_year['year'], y = m_g_by_year['number'], color = 'black', zorder = 3, lw = 2)\nplt.scatter(x = m_g_by_year['year'][11] , y = m_g_by_year['number'][11], color = 'firebrick', zorder = 3, lw = 12)\nplt.axhline(y = m_g_by_year['number'].mean(), color = 'firebrick', ls = '--', lw = 2)\n\n# ticks\nax.xaxis.set_major_locator(plt.MaxNLocator(12))\nax.set_xlim(1996.5, 2018)\nplt.yticks(range(0, 8501, 500))\nplt.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\n\n# axis\nsns.despine()\n\n# labels\nplt.xlabel('Year', color = 'black', fontsize = 16, fontweight = 'bold')\nplt.ylabel('Number', color = 'black', fontsize = 16, fontweight = 'bold')\n\n# title\nplt.title('Number of fires by year in Mato Grosso', x = 0.20, y = 1.1, color = 'black', fontsize = 20, fontweight = 'bold')\n\n\nplt.show()","20f21136":"# calculations\ngroup_by_year = df \\\n    .groupby('year', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .reset_index() \\\n    .drop('index', axis = 1)\n\n# viz\nfig = plt.figure(figsize = (13, 6))\nax = fig.add_axes([0, 0, 1, 1])\n\nsns.lineplot(x = group_by_year['year'], y = group_by_year['number'], lw = 3)\nplt.scatter(x = group_by_year['year'] , y = group_by_year['number'], color = 'black', zorder = 3, lw = 2)\nplt.scatter(x = group_by_year['year'][5] , y = group_by_year['number'][5], color = 'firebrick', zorder = 3, lw = 12)\nplt.scatter(x = group_by_year['year'][17] , y = group_by_year['number'][17], color = 'firebrick', zorder = 3, lw = 12)\nplt.scatter(x = group_by_year['year'][18] , y = group_by_year['number'][18], color = 'firebrick', zorder = 3, lw = 12)\nplt.axhline(y = group_by_year['number'].mean(), color = 'firebrick', ls = '--', lw = 2)\n\n# ticks\nax.xaxis.set_major_locator(plt.MaxNLocator(12))\nax.set_xlim(1996.5, 2018)\nplt.yticks(range(0, 45001, 5000))\nplt.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\n\n# axis\nsns.despine()\n\n# labels\nplt.xlabel('Year', color = 'black', fontsize = 16, fontweight = 'bold')\nplt.ylabel('Number', color = 'black', fontsize = 16, fontweight = 'bold')\n\n# title\nplt.title('Number of fires by year', x = 0.12, y = 1.1, color = 'black', fontsize = 20, fontweight = 'bold')\n\n\nplt.show()","c5751214":"# calculations\nby_state_2003 = df \\\n    .query('year == 2003') \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = False)\nby_state_2003['latitude'] = by_state_2003['state'].map(latitude)\nby_state_2003['longitude'] = by_state_2003['state'].map(longitude)\n\n# viz\nfig = px.scatter_geo(data_frame= by_state_2003, scope='south america',lat = 'latitude',lon = 'longitude',\n                     size= 'number' , color = 'state', projection= 'hammer', hover_name = 'state')\nfig.update_layout(title = dict(\n    text='Fires in 2003 by state',\n    x=0.2,\n    font=dict(\n        color='black',\n        size=24)))\nfig.show()","aa072512":"# calculations\nby_state_2015 = df \\\n    .query('year == 2015') \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = False)\nby_state_2015['latitude'] = by_state_2015['state'].map(latitude)\nby_state_2015['longitude'] = by_state_2015['state'].map(longitude)\n\n# viz\nfig = px.scatter_geo(data_frame= by_state_2015, scope='south america',lat = 'latitude',lon = 'longitude',\n                     size= 'number' , color = 'state', projection= 'hammer', hover_name = 'state')\nfig.update_layout(title = dict(\n    text='Fires in 2015 by state',\n    x=0.2,\n    font=dict(\n        color='black',\n        size=24)))\nfig.show()","b78740aa":"# calculations\nby_state_2016 = df \\\n    .query('year == 2016') \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = False)\nby_state_2016['latitude'] = by_state_2016['state'].map(latitude)\nby_state_2016['longitude'] = by_state_2016['state'].map(longitude)\n\n# viz\nfig = px.scatter_geo(data_frame= by_state_2016, scope='south america',lat = 'latitude',lon = 'longitude',\n                     size= 'number' , color = 'state', projection= 'hammer', hover_name = 'state')\nfig.update_layout(title = dict(\n    text='Fires in 2016 by state',\n    x=0.2,\n    font=dict(\n        color='black',\n        size=24)))\nfig.show()","86f5d558":"# calculations\ngroup_by_month_year = df \\\n    .groupby(df['month_year'], as_index = False) \\\n    .agg({'number' : 'sum'})\n\n# viz\nfig = plt.figure(figsize = (13, 6))\nax1 = fig.add_axes([0, 0, 1.2, 1])\nax2 = fig.add_axes([1.3, 0, 0.7, 1])\n\n# chart\n\n# figure\nsns.violinplot(x = group_by_month_year['number'], ax = ax1)\nsns.swarmplot(x = group_by_month_year['number'], ax = ax1, color = 'black')\n\n# axis\nsns.despine()\n\n# ticks\nax1.set_xticks(range(0, 7501, 500))\nax2.set_xticks(range(0, 7001, 1000))\nax1.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\n\n# labels\nax1.set_xlabel('')\nax2.set_xlabel('')\n\n# title\nax1.set_title('Distribution of the number of fires by month_year', x = 0.3, y = 1.1, color = 'black', fontsize = 26, fontweight = 'bold')\n\n# table\n\n# axis\nax2.axis('off')\n\n# calculations\nstats_list = []\nfor x in group_by_month_year['number'].describe():\n    stats_list.append(round(x, 2))\nnames = ['count', 'mean', 'std', 'min', '25%', 'median', '75%', 'max']\ndf_stats = pd.DataFrame({'Parametre' : names, 'Value' : stats_list})\nlist_ = []\nfor n in range(len(df_stats)):\n    x = df_stats.loc[n,:]\n    list_.append(x)\n\n# colors for table\ncolor_list=[['white', 'white']]\n\n# table\ntable=ax2.table(cellColours=color_list*8, cellText = list_, cellLoc ='center', loc ='upper left', colWidths=[0.1, 0.1],\n                  colLabels=df_stats.columns,colColours=['white', 'white'])          \n\n# fontsize\ntable.auto_set_font_size(False) \ntable.set_fontsize(18)\n\n# skale\ntable.scale(2.8, 3.8) \n\n# text\nax2.text(100, 1.025, 'Main statistics', color='black', fontsize = 20, fontweight='bold')\n\nplt.show()","a2afebb3":"def detected_extrem_values(data, column):\n    q25, q75 = column.quantile([0.25, 0.75])\n    intr_qr = q75-q25\n    lower_bound = q25 - 1.5 * intr_qr\n    upper_bound = q75 + 1.5 * intr_qr\n    extreme_values = data[(column < lower_bound) | (column > upper_bound)]\n    return extreme_values\n\n# calculations\nsort_by_month_year = group_by_month_year.sort_values('number', ascending = False).head(4)\nextreme_values = detected_extrem_values(group_by_month_year, group_by_month_year['number'])\n\n# fig\nplt.figure(figsize = (25, 10))\n\n# charts\nsns.lineplot(x = group_by_month_year['month_year'], y = group_by_month_year['number'], lw = 3)\nplt.scatter(x = extreme_values['month_year'], y = extreme_values['number'], color = 'firebrick', lw = 12, zorder = 3)\nplt.scatter(x = sort_by_month_year['month_year'][1:], \n            y = sort_by_month_year['number'][1:], \n            color = 'firebrick', lw = 8, zorder = 3, alpha = 0.6)\nplt.axhline(y = group_by_month_year['number'].mean(), color = 'firebrick', ls = '--')\n\n# ticks\nplt.yticks(range(0, 7501, 500))\nplt.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 14)\n\n# axis\nsns.despine()\n\n# annotate\nplt.text(extreme_values['month_year'], extreme_values['number']+200, '08-2006', color = 'black', fontsize = 14, fontweight = 'bold')\nplt.text(sort_by_month_year['month_year'][1:2], sort_by_month_year['number'][1:2] + 200, '07-2016', color = 'black', fontsize = 14, fontweight = 'bold')\nplt.text(sort_by_month_year['month_year'][2:3], sort_by_month_year['number'][2:3] + 200, '07-2002', color = 'black', fontsize = 14, fontweight = 'bold')\nplt.text(sort_by_month_year['month_year'][3:4], sort_by_month_year['number'][3:4] + 200, '08-2000', color = 'black', fontsize = 14, fontweight = 'bold')\n\n# labels\nplt.xlabel('Month_Year', color = 'black', fontsize = 16, fontweight = 'bold')\nplt.ylabel('Number', color = 'black', fontsize = 16, fontweight = 'bold')\n\n# title\nplt.title('Number of fires by month and year', x = 0.12, y = 1.1, color = 'black', fontsize = 20, fontweight = 'bold')\n\nplt.show()","fa91651c":"# calculations\naugust_2006 = df \\\n    .query(\"month == 'Aug' and year == 2006\")\ngroup_by_state_august_2006 = august_2006 \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'})\\\n    .sort_values('number', ascending = False).reset_index() \\\n    .drop('index', axis = 1)\ngroup_by_state_august_2006['latitude'] = group_by_state_august_2006['state'].map(latitude)\ngroup_by_state_august_2006['longitude'] = group_by_state_august_2006['state'].map(longitude)\n\n# viz\nfig = px.scatter_geo(data_frame= group_by_state_august_2006, scope='south america',lat = 'latitude',lon = 'longitude',\n                     size= 'number' , color = 'state', projection= 'hammer', hover_name = 'state')\nfig.update_layout(title = dict(\n    text='Fires in August 2006 by state',\n    x=0.2,\n    font=dict(\n        color='black',\n        size=24)))\nfig.show()","5d67fc29":"# calculations\njuly_2016 = df \\\n    .query(\"month == 'July' and year == 2016\")\ngroup_by_state_july_2016 = july_2016 \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'})\\\n    .sort_values('number', ascending = False).reset_index() \\\n    .drop('index', axis = 1)\ngroup_by_state_july_2016['latitude'] = group_by_state_july_2016['state'].map(latitude)\ngroup_by_state_july_2016['longitude'] = group_by_state_july_2016['state'].map(longitude)\n\n# viz\nfig = px.scatter_geo(data_frame= group_by_state_july_2016, scope='south america',lat = 'latitude',lon = 'longitude',\n                     size= 'number' , color = 'state', projection= 'hammer',\n                     hover_name = 'state')\nfig.update_layout(title = dict(\n    text='Fires in July 2016 by state',\n    x=0.2,\n    font=dict(\n        color='black',\n        size=24)))\nfig.show()","7f6641a4":"# calculations\njuly_2002 = df \\\n    .query(\"month == 'July' and year == 2002\")\ngroup_by_state_july_2002 = july_2002 \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'})\\\n    .sort_values('number', ascending = False).reset_index() \\\n    .drop('index', axis = 1)\ngroup_by_state_july_2002['latitude'] = group_by_state_july_2002['state'].map(latitude)\ngroup_by_state_july_2002['longitude'] = group_by_state_july_2002['state'].map(longitude)\n\n# viz\nfig = px.scatter_geo(data_frame= group_by_state_july_2002, scope='south america',lat = 'latitude',lon = 'longitude',\n                     size= 'number' , color = 'state', projection= 'hammer',\n                     hover_name = 'state')\nfig.update_layout(title = dict(\n    text='Fires in July 2002 by state',\n    x=0.2,\n    font=dict(\n        color='black',\n        size=24)))\nfig.show()","a57ae4a2":"# calculations\naugust_2000 = df \\\n    .query(\"month == 'Aug' and year == 2000\")\ngroup_by_state_august_2000 = august_2000 \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'})\\\n    .sort_values('number', ascending = False).reset_index() \\\n    .drop('index', axis = 1)\ngroup_by_state_august_2000['latitude'] = group_by_state_july_2002['state'].map(latitude)\ngroup_by_state_august_2000['longitude'] = group_by_state_july_2002['state'].map(longitude)\n\n# viz\nfig = px.scatter_geo(data_frame= group_by_state_august_2000, scope='south america',lat = 'latitude',lon = 'longitude',\n                     size= 'number' , color = 'state', projection= 'hammer',\n                     hover_name = 'state')\nfig.update_layout(title = dict(\n    text='Fires in August 2000 by state',\n    x=0.2,\n    font=dict(\n        color='black',\n        size=24)))\nfig.show()","66775a3c":"# lists\nseasons = []\nhalf_years = []\n\n# cycles\nfor i in df['month']:\n    if i in ['Dec', 'Jan', 'Feb']:\n        season = 'winter'\n    elif i in ['March', 'Apr', 'May']:\n        season = 'spring'\n    elif i in ['June', 'July', 'Aug']:\n        season = 'summer'\n    else:\n        season = 'autumn'\n    seasons.append(season)\n\nfor i in df['month']:\n    if i in ['Jan', 'Feb', 'March', 'Apr', 'May', 'June']:\n        half_year = 'half_year_1'\n    else:\n        half_year = 'half_year_2'\n    half_years.append(half_year)\n\n# columns\ndf['season'] = seasons\ndf['half_year'] = half_years\n\n# calculations\ngoup_by_half_year = df \\\n    .groupby('half_year', as_index = False) \\\n    .agg({'number' : 'sum'}) \ngoup_by_half_year['percentage'] = round(goup_by_half_year['number'] \/ sum(goup_by_half_year['number']) * 100, 2)\n\n# fig\nfig = plt.figure(figsize = (13, 6))\nax1 = fig.add_axes([0, 0, 1, 1])\nax2 = fig.add_axes([1.2, 0, 1, 1])\n\n# barh\nax1.barh(width = goup_by_half_year['percentage'][0] + goup_by_half_year['percentage'][1], y = 0, color = 'firebrick')\nax1.barh(width = goup_by_half_year['percentage'][0], y = 0)\n\n# group_name\nax1.text((goup_by_half_year['percentage'][0] + goup_by_half_year['percentage'][1])\/14, 0.45, f\"{goup_by_half_year['half_year'][0]}\", color = 'black', fontsize = 30, fontweight = 'bold')\nax1.text((goup_by_half_year['percentage'][0] + goup_by_half_year['percentage'][1])\/1.8, 0.45, f\"{goup_by_half_year['half_year'][1]}\", color = 'black', fontsize = 30, fontweight = 'bold')\n\n# # group_percentage\nax1.text((goup_by_half_year['percentage'][0] + goup_by_half_year['percentage'][1])\/8.5, 0.05, f\"{goup_by_half_year['percentage'][0]}%\", color = 'black', fontsize = 30, fontweight = 'bold')\nax1.text((goup_by_half_year['percentage'][0] + goup_by_half_year['percentage'][1])\/1.7, 0.05, f\"{goup_by_half_year['percentage'][1]}%\", color = 'black', fontsize = 30, fontweight = 'bold')\n\n# # absolute_values\nax2.text(0.01, 0.9, f\"{goup_by_half_year['half_year'][0]}:\", color = '#1f77b4', fontsize = 30, fontweight = 'bold')\nax2.text(0.01, 0.8, f\"{goup_by_half_year['number'][0]}\", color = '#1f77b4', fontsize = 30, fontweight = 'bold')\nax2.text(0.01, 0.6, f\"{goup_by_half_year['half_year'][1]}:\", color = 'firebrick', fontsize = 30, fontweight = 'bold')\nax2.text(0.01, 0.5, f\"{goup_by_half_year['number'][1]}:\", color = 'firebrick', fontsize = 30, fontweight = 'bold')\n\n# # axis\nax1.axis('off')\nax2.axis('off')\n\n# # title\nplt.title('The ratio of half year', x = -0.95,  y = 1.2, color = 'black', fontsize = 36, fontweight = 'bold')\n\nplt.show()","cb4e2368":"# calculations\nhalf_year_1 = df \\\n    .query(\"half_year == 'half_year_1'\")\nhalf_year_1_by_state = half_year_1 \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = True) \\\n    .reset_index() \\\n    .drop('index', axis = 1)\nhalf_year_2 = df \\\n    .query(\"half_year == 'half_year_2'\")\nhalf_year_2_by_state = half_year_2 \\\n    .groupby('state', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = True) \\\n    .reset_index() \\\n    .drop('index', axis = 1)\n\n# viz\nfig = plt.figure()\nax1 = fig.add_axes([0, 0, 1, 1])\nax2 = fig.add_axes([1.6, 0, 1, 1])\n\n# chart\nax1.barh(y = half_year_1_by_state['state'][18:], width = half_year_1_by_state['number'][18:])\nax2.barh(y = half_year_2_by_state['state'][18:], width = -half_year_2_by_state['number'][18:], color = 'firebrick')\n\n# annotate_1\nax1.text(0, 4, f\"{half_year_1_by_state['state'][22]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(55000, 4, f\"{half_year_1_by_state['number'][22]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(0, 3, f\"{half_year_1_by_state['state'][21]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(20000, 3, f\"{half_year_1_by_state['number'][21]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(0, 2, f\"{half_year_1_by_state['state'][20]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(18300, 2, f\"{half_year_1_by_state['number'][20]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(0, 1, f\"{half_year_1_by_state['state'][19]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(17700, 1, f\"{half_year_1_by_state['number'][19]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(0, 0, f\"{half_year_1_by_state['state'][18]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(17100, 0, f\"{half_year_1_by_state['number'][18]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax1.text(0, 5, 'half_year_1', color = 'black', fontweight = 'bold', fontsize = 18)\n\n# annotate_2\nax2.text(-8000, 4, f\"{half_year_2_by_state['state'][22]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-52000, 4, f\"{half_year_2_by_state['number'][22]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-12750, 3, f\"{half_year_2_by_state['state'][21]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-49600, 3, f\"{half_year_2_by_state['number'][21]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-9950, 2, f\"{half_year_2_by_state['state'][20]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-45800, 2, f\"{half_year_2_by_state['number'][20]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-3700, 1, f\"{half_year_2_by_state['state'][19]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-44500, 1, f\"{half_year_2_by_state['number'][19]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-4600, 0, f\"{half_year_2_by_state['state'][18]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-37300, 0, f\"{half_year_2_by_state['number'][18]}\", color = 'black', fontweight = 'bold', fontsize = 16)\nax2.text(-12000, 5, 'half_year_2', color = 'black', fontweight = 'bold', fontsize = 18)\n\n# ticks\nax1.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\nax2.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\nax1.axis('off')\nax2.axis('off')\n\n# title\nax1.set_title('Number of fires by state', x = 0.32, y = 1.25, color = 'black', fontsize = 20, fontweight = 'bold')\n\nplt.show()","3c6e7669":"# calculations\ngroup_by_season = df \\\n    .groupby('season', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = False)\n\n# viz\nfig = plt.figure()\nax = fig.add_axes([0, 0, 1, 1])\n\n# chart\nax.bar(x = group_by_season['season'], height = group_by_season['number'])\n\n# axis\nsns.despine()\n\n# annotate\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate('{:.0f}'.format(height), (x + width\/2, y + height*1.02), ha='center', color = 'black', fontsize = 16, fontweight = 'bold') \n\n# ticks\nplt.yticks(range(0, 250001, 25000))\nplt.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\n\n# title\nplt.title('Number of fires by season', x = 0.26, y = 1.1, color = 'black', fontsize = 20, fontweight = 'bold')\n\nplt.show()","004e0cf7":"# calculations\ngroup_by_month = df \\\n    .groupby('month', as_index = False) \\\n    .agg({'number' : 'sum'}) \\\n    .sort_values('number', ascending = False)\n\n# viz\nfig = plt.figure(figsize = (13,6))\nax = fig.add_axes([0, 0, 1, 1])\n\n# chart\nax.bar(x = group_by_month['month'], height = group_by_month['number'])\n\n# axis\nsns.despine()\n\n# annotate\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate('{:.0f}'.format(height), (x + width\/2, y + height*1.02), ha='center', color = 'black', fontsize = 16, fontweight = 'bold') \n\n# ticks\nplt.yticks(range(0, 100001, 10000))\nplt.tick_params(direction='out', length=6, width=3, colors='black', grid_color='black', labelsize = 16)\n\n# title\nplt.title('Number of fires by season', x = 0.14, y = 1.1, color = 'black', fontsize = 22, fontweight = 'bold')\n\nplt.show()","e64b39e5":"**The highest number of fires was in Bahia - 995, Minas Gerais - 959 \u0438 Piau - 911.**","0568113b":"**Months are written in Portuguese, for convenience I  translate them in English and create a month_year column.**\n* Janeiro - January\n* Fevereiro - February\n* Mar\u0437o - March\n* Abril - April\n* Maio - May\n* Junho - June\n* Julho - July\n* Agosto - August\n* Setembro - September\n* Outubro - October\n* Novembro - November\n* Dezembro - December","3aa5b127":"# Period","e2e58ca7":"**For geo-visualization, let's create columns with latitude and longitude. I took the data from [@sahib12](https:\/\/www.kaggle.com\/sahib12) in his excellent [work](https:\/\/www.kaggle.com\/sahib12\/data-vizualization-for-brazil-forest-fires).**","60907c52":"**The largest number of fires was in Mato Grosso - 3.6\u043a, Piau - 3.5\u043a \u0438 Paraiba - 3.4\u043a.**","d565b5a1":"**The largest number of fires in summer and autumn ~ 23k. Least number of fires in spring - 9.3k.**","f4467e2c":"**The highest number of fires was in Goias - 925, Sao Paulo - 915 \u0438 Paraiba - 856.**","f49c5a3f":"# Conclusion\n\n**Having examined these data, I want to note that before starting this analysis, I had never before conducted an analysis on this topic, with any statistics, figures and facts I got acquainted only from the news, social media, networks. Accordingly, the results I received came as a shock to me. Since I did not expect to see so many fires. Main results of work:**\n* State with the most fires - Mato Grosso;\n* The largest number of fires was in 2003, 2015 and 2016, during these years there were different top 3 states by the number of fires;\n* The largest number of fires occurred in August 2006;\n* Almost 2\/3 of the fires occurred in the second half of the year, the top 5 states, depending on the half of the year, are different;\n* The greatest number of fires was in summer and autumn;\n* The highest number of fires was in July.","16c37868":"**The graph shows that almost 70%f the fires occurred in the 2nd half of the year. We can make a conclusion about the seasonality of fires by half-year. It is also interesting to look at the number of fires in the states by half a year..**","a38ad59a":"**From the graph, we observe that the largest number of fires was in the state of Mato Grosso - 96k, and 3 more states can be distinguished by the number of fires - Sao Paulo, Rio, Bahia.**","b29f2009":"**High variability is observed. The minimum number of fires in this state was in 1998 - 2.4k. The maximum number of fires was in 2009 - 8.2k.**\n\n**On average, there were 4.8k fires per year.**","b6ffaf91":"**Now let's check the number of fires in each month. But first, let's study the distribution of the number of fires.**","fec3aacc":"**Short info about Mato Grosso:**\n\n![](https:\/\/avatars.mds.yandex.net\/i?id=77139b3708668e3e627cfa67e952c6f8-4589829-images-thumbs&n=13)\n\n**Mato Grosso** - the third largest by area, located in the Central-West region. The state has 1.66% of the Brazilian population and is responsible for 1.9% of the Brazilian GDP. A state with a flat landscape that alternates between vast chapadas and plain areas, Mato Grosso contains three main ecosystems: the Cerrado, the Pantanal and the Amazon rainforest. A state with a flat landscape that alternates between vast chapadas and plain areas, Mato Grosso contains three main ecosystems: the Cerrado, the Pantanal and the Amazon rainforest.","fcecc554":"# States","6f624594":"**Incorrect data in the date**","a5f05457":"# Seasonality","bf76e656":"![](https:\/\/pbs.twimg.com\/media\/Eh5dK_mXsAA0fuW.jpg)","33cb1c4e":"**Now let's check the number of fires by state in 2003, 2015 and 2016.**","64ee535d":"# Introduction\n\n**Analyzed data by:**\n* year - the year when the fires occurred;\n* state - the state in which the fires occurred;\n* month - month in which the fires occurred;\n* number - the number of fires;\n* date - date of fire.\n\n\n**In the process, I will add the following data:**\n* longitude;\n* latitude;\n* half_year - half year in which the fires occurred;\n* season - the season of the year in which the fires occurred.\n\n**I'm going to analyze the data by state, by period and by \"season\".**","d13d2ca6":"**The highest number of fires was in Rio - 1009, Rondonia - 969 \u0438 Goiaa - 837.**","3a14655a":"**It can be seen from the graph that in different semesters the largest number of fires in different states.**","9f9fe170":"**The graph shows one pronounced outburst - 08.2006. Also noted 3 more pronounced peaks. Let's check the data for these months, we will study in which states there were fires.**","f982ed94":"**The study period is 20 years - from 1998 to 2017. Over the entire period, there were almost 700k fires. The largest number of fires was in 2003, 2015 and 2016.**\n\n**On average, there were ~ 35k fires per year.**","2cded71d":"**The largest number of fires was in Mato Grosso - 6.2\u043a, Piau - 2.8\u043a \u0438 Paraiba - 2.7\u043a.**","851d2443":"* The number of months studied - 239;\n* There is a slight displacement of the data to the right, which is caused by the outlier. The largest number of fires by month and year ~ in the range 1.2k - 4.3k;\n* Average number of fires per month - 2.9k;\n* Minimum number of fires - 0;\n* The maximum number of fires - 7.;\n* We also observe one pronounced outburst.","3ca1bcfa":"**Let's analyze the number of fires by year**","658c744d":"**The largest number of fires was in Mato Grosso - 7\u043a, Rio - 3.4\u043a \u0438 Sao Paulo - 3.3\u043a.**","2f050f80":"**Let;s check the value of fires in the stete.**","8b028180":"**The highest number of fires was in Tocantins - 976, Matto Grosso - 941 \u0438 Par\u0431 - 772.**","4a15ff88":"**The largest number of fires occurred in July, and there were also many fires in October, August and November.**"}}