{"cell_type":{"6734e682":"code","b644ecae":"code","787ed819":"code","439760db":"code","882c12a6":"code","c65b92f5":"markdown"},"source":{"6734e682":"import numpy as np\nimport os\nimport cv2\nfrom matplotlib import pyplot as plt","b644ecae":"from albumentations import (\n    Blur, CLAHE, ChannelDropout, ChannelShuffle, ColorJitter, Downscale,\n    Equalize, FDA, FancyPCA, GaussNoise, GaussianBlur, GlassBlur, HistogramMatching,\n    HueSaturationValue, IAAAdditiveGaussianNoise, IAAEmboss, IAASharpen, IAASuperpixels,\n    ISONoise, MedianBlur, MotionBlur, MultiplicativeNoise, Normalize, RGBShift,\n    RandomBrightnessContrast, RandomFog, RandomGamma, RandomRain, RandomShadow, RandomSnow, RandomSunFlare,\n    CenterCrop, CoarseDropout, Crop, CropNonEmptyMaskIfExists, ElasticTransform, Flip, GridDistortion, GridDropout,\n    HorizontalFlip, IAAAffine, IAACropAndPad, IAAFliplr, IAAFlipud, IAAPerspective, IAAPiecewiseAffine, Lambda,\n    LongestMaxSize, MaskDropout, NoOp, OpticalDistortion, PadIfNeeded, RandomCrop, RandomCropNearBBox, RandomGridShuffle,\n    RandomResizedCrop, RandomRotate90, RandomScale, RandomSizedBBoxSafeCrop, RandomSizedCrop, Resize, Rotate, ShiftScaleRotate,\n    SmallestMaxSize, Transpose, VerticalFlip\n)  # \u56fe\u50cf\u53d8\u6362\u51fd\u6570\n","787ed819":"image = cv2.imread('..\/input\/cassava-leaf-disease-classification\/train_images\/1000723321.jpg', 1)  # BGR\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)","439760db":"def testAlbumentations(image):\n    '''Test Albumentations API'''\n    '''Spatial-level transforms'''\n\n    aug = Blur(p=1)\n    img_Blur = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = CLAHE(p=1)\n    img_CLAHE = aug(image=image)['image']# \u9700\u8981\n\n    aug = ChannelDropout(p=1)\n    img_ChannelDropout = aug(image=image)['image']# \u4e0d\u7528\u5427\n\n    aug = ChannelShuffle(p=1)\n    img_ChannelShuffle = aug(image=image)['image']# \u4e0d\u7528\u5427\n\n    aug = ColorJitter(p=1)\n    img_ColorJitter = aug(image=image)['image']# \u53ef\u4ee5\u8003\u8651\n\n    aug = Downscale(p=1)\n    img_Downscale = aug(image=image)['image']# \u4e0d\u7528\u5427\n\n    aug = Equalize(p=1)\n    img_Equalize = aug(image=image)['image']# \u4e0d\u7528\u5427\n\n    # domain_adaptation.FDA \u53ef\u4ee5\u7814\u7a76\n\n    aug = FancyPCA(p=1)\n    img_FancyPCA = aug(image=image)['image']# \u53ef\u4ee5\n\n    # FromFloat\n\n    aug = GaussNoise(p=1)\n    img_GaussNoise = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = GaussianBlur(p=1)\n    img_GaussianBlur = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = GlassBlur(p=1)\n    img_GlassBlur = aug(image=image)['image']# \u53ef\u4ee5\n\n    # aug = HistogramMatching(p=1)\n    # img_HistogramMatching = aug(image=image)['image']\n\n    aug = HueSaturationValue(p=1)\n    img_HueSaturationValue = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = IAAAdditiveGaussianNoise(p=1)\n    img_IAAAdditiveGaussianNoise = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = IAAEmboss(p=1)\n    img_IAAEmboss = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = IAASharpen(p=1)\n    img_IAASharpen = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = IAASuperpixels(p=1)\n    img_IAASuperpixels = aug(image=image)['image']# \uff1f\n\n    aug = ISONoise(p=1)\n    img_ISONoise = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = MedianBlur(p=1)\n    img_MedianBlur = aug(image=image)['image']# \u53ef\u4ee5 (\u7528\u50cf\u7d20\u70b9\u90bb\u57df\u7070\u5ea6\u503c\u7684\u4e2d\u503c\u6765\u4ee3\u66ff\u8be5\u50cf\u7d20\u70b9\u7684\u7070\u5ea6\u503c\uff0c\u8ba9\u5468\u56f4\u7684\u50cf\u7d20\u503c\u63a5\u8fd1\u771f\u5b9e\u7684\u503c\u4ece\u800c\u6d88\u9664\u5b64\u7acb\u7684\u566a\u58f0\u70b9\n\n    aug = MotionBlur(p=1)\n    img_MotionBlur = aug(image=image)['image']# \u4e0d\u7528\u5427\n\n    aug = MultiplicativeNoise(p=1)\n    img_MultiplicativeNoise = aug(image=image)['image']# \u4e0d\u7528\u5427\n\n    aug = Normalize(mean=(0.43032044, 0.49672633, 0.31342009), std=(0.21909042, 0.22394303, 0.20059192), p=1)\n    img_Normalize = aug(image=image)['image']# \u9700\u8981\n\n    aug = RGBShift(p=1)\n    img_RGBShift = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = RandomBrightnessContrast(p=1)\n    img_RandomBrightnessContrast = aug(image=image)['image']# \u9700\u8981\n\n    aug = RandomFog(p=1)\n    img_RandomFog = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = RandomGamma(p=1)\n    img_RandomGamma = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = RandomRain(p=1)\n    img_RandomRain = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = RandomShadow(p=1)\n    img_RandomShadow = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = RandomSnow(p=1)\n    img_RandomSnow = aug(image=image)['image']# \u4e0d\u7528\n\n    aug = RandomSunFlare(p=1)\n    img_RandomSunFlare = aug(image=image)['image']# \u4e0d\u7528\n\n    '''Spatial-level transforms'''\n    # CenterCrop\n    aug = ElasticTransform(p=1)\n    img_ElasticTransform = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = CoarseDropout(fill_value=(0.43032044, 0.49672633, 0.31342009), p=1)\n    img_CoarseDropout = aug(image=image)['image']# \u9700\u8981\n\n    aug = GridDistortion(p=1)\n    img_GridDistortion = aug(image=image)['image']# \u9700\u8981\n\n    aug = GridDropout(p=1)\n    img_GridDropout = aug(image=image)['image']# \u4e0d\u7528\n\n    aug = IAAAffine(p=1)\n    img_IAAAffine = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = IAAPerspective(p=1)\n    img_IAAPerspective = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = IAAPiecewiseAffine(p=1)\n    img_IAAPiecewiseAffine = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = OpticalDistortion(p=1)\n    img_OpticalDistortion = aug(image=image)['image']# \u53ef\u4ee5\n\n    aug = RandomGridShuffle(p=1)\n    img_RandomGridShuffle = aug(image=image)['image']# \u53ef\u4ee5\n\n    '''\u7a7a\u95f4\u51e0\u4f55\u53d8\u6362\u7c7b'''\n\n    # \u4eff\u5c04\u53d8\u6362\n\n    # \u89c6\u89c9\u53d8\u6362\n\n    # \u5206\u6bb5\u4eff\u5c04\n\n    '''\u50cf\u7d20\u989c\u8272\u53d8\u6362\u7c7b'''\n\n    '''\u591a\u6837\u672c\u5408\u6210\u7c7b'''\n\n    # show\n    plt.subplots_adjust(hspace=0.4)\n    plt.axis('off')\n    plt.subplot(2, 2, 1)\n    plt.imshow(image)\n    plt.title(\"original\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_Blur)\n    plt.title(\"Blur\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_CLAHE)\n    plt.title(\"CLAHE\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_ColorJitter)\n    plt.title(\"ColorJitter\")\n    plt.show()\n    \n    plt.subplots_adjust(hspace=0.4)\n    plt.subplot(2, 2, 1)\n    plt.imshow(img_GaussianBlur)\n    plt.title(\"GaussianBlur\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_Equalize)\n    plt.title(\"Equalize\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_FancyPCA)\n    plt.title(\"FancyPCA\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_GaussNoise)\n    plt.title(\"GaussNoise\")\n    plt.show()\n\n    plt.subplots_adjust(hspace=0.4)\n    plt.subplot(2, 2, 1)\n    plt.imshow(img_GlassBlur)\n    plt.title(\"GlassBlur\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_ISONoise)\n    plt.title(\"ISONoise\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_HueSaturationValue)\n    plt.title(\"HueSaturationValue\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_IAAAdditiveGaussianNoise)\n    plt.title(\"IAAAdditiveGaussianNoise\")\n    plt.show()\n\n    plt.subplots_adjust(hspace=0.4)\n    plt.subplot(2, 2, 1)\n    plt.imshow(img_IAAEmboss)\n    plt.title(\"IAAEmboss\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_IAASharpen)\n    plt.title(\"IAASharpen\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_IAASuperpixels)\n    plt.title(\"IAASuperpixels\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_MedianBlur)\n    plt.title(\"MedianBlur\")\n    plt.show()\n\n    plt.subplots_adjust(hspace=0.4)\n    plt.subplot(2, 2, 1)\n    plt.imshow(img_MotionBlur)\n    plt.title(\"MotionBlur\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_MultiplicativeNoise)\n    plt.title(\"MultiplicativeNoise\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_RandomBrightnessContrast)\n    plt.title(\"RandomBrightnessContrast\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_RGBShift)\n    plt.title(\"RGBShift\")\n    plt.show()\n\n    plt.subplots_adjust(hspace=0.4)\n    plt.subplot(2, 2, 1)\n    plt.imshow(img_RandomFog)\n    plt.title(\"RandomFog\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_RandomGamma)\n    plt.title(\"RandomGamma\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_RandomRain)\n    plt.title(\"RandomRain\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_RandomShadow)\n    plt.title(\"RandomShadow\")\n    plt.show()\n\n    plt.subplots_adjust(hspace=0.4)\n    plt.subplot(2, 2, 1)\n    plt.imshow(img_ElasticTransform)\n    plt.title(\"ElasticTransform\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_CoarseDropout)\n    plt.title(\"CoarseDropout\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_GridDistortion)\n    plt.title(\"GridDistortion\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_IAAAffine)\n    plt.title(\"IAAAffine\")\n    plt.show()\n\n    plt.subplots_adjust(hspace=0.4)\n    plt.subplot(2, 2, 1)\n    plt.imshow(img_IAAPerspective)\n    plt.title(\"IAAPerspective\")\n    plt.subplot(2, 2, 2)\n    plt.imshow(img_IAAPiecewiseAffine)\n    plt.title(\"IAAPiecewiseAffine\")\n    plt.subplot(2, 2, 3)\n    plt.imshow(img_OpticalDistortion)\n    plt.title(\"OpticalDistortion\")\n    plt.subplot(2, 2, 4)\n    plt.imshow(img_RandomGridShuffle)\n    plt.title(\"RandomGridShuffle\")\n    plt.show()","882c12a6":"testAlbumentations(image)","c65b92f5":"# **Do some data augmentation experiment with Albumentations API**"}}