{"cell_type":{"d31953d0":"code","dae97e22":"code","af5e90b0":"code","eb2ed666":"code","da4240db":"code","993a5807":"code","ef6064d7":"code","aa6cd0ad":"code","2e10e8a6":"code","6330adb2":"markdown","f80381e8":"markdown","9c5c9669":"markdown","cfd86496":"markdown","633c84a4":"markdown"},"source":{"d31953d0":"import tensorflow as tf\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","dae97e22":"data = fetch_california_housing()\n\nx, xtest, y, ytest = train_test_split(data.data, data.target)\n\nxtrain, xvalid, ytrain, yvalid = train_test_split(x, y)","af5e90b0":"scaler = StandardScaler()\nxtrain = scaler.fit_transform(xtrain)\nxvalid = scaler.fit_transform(xvalid)\nxtest = scaler.fit_transform(xtest)","eb2ed666":"xtrain.shape[1:]","da4240db":"model = tf.keras.models.Sequential([\n    tf.keras.layers.Input(shape=[8,]),\n    \n    tf.keras.layers.Dense(128, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(1)\n])\nmodel.summary()\n\nmodel.compile(loss='mse', optimizer=tf.keras.optimizers.SGD(lr=0.001))","993a5807":"history = model.fit(xtrain, ytrain, epochs = 10, validation_data=(xvalid, yvalid))","ef6064d7":"print(f\"Loss = {model.evaluate(xtest, ytest)}\")","aa6cd0ad":"preds = model.predict(xtest)","2e10e8a6":"plt.scatter(xtest[:,0],ytest,color='green', label='Actual result')\nplt.scatter(xtest[:,0],preds,color='red', label='Prediction')\nplt.legend();","6330adb2":"# Evaluating the model loss on the test set","f80381e8":"# Getting the dataset and splitting into train,validation and test sets","9c5c9669":"# Scale the features to a uniform volume","cfd86496":"# Training the model on 10 epochs with validation set","633c84a4":"# Making the model and compiling it"}}