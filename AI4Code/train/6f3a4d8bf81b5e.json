{"cell_type":{"cdb4d9b3":"code","0394e9d8":"code","6293cb9f":"code","6f6b54b8":"code","5ce24f4e":"code","a222769b":"code","f5b05cd7":"code","2b7772c3":"code","80372813":"code","94736ab9":"code","222469a0":"code","53a84190":"code","19ce83af":"code","5df9b388":"code","fef15664":"code","142a3e01":"code","df0c9fc9":"code","e2f97eab":"code","32ffac6d":"code","b50acee3":"code","f74cd6c2":"code","608ca9f5":"code","0f4f7bbc":"code","c9c4fa97":"code","bb141c0b":"code","22d534f3":"code","0042b7c7":"code","8db4b097":"code","f6bee3be":"code","76ee1b24":"code","6f16e2d1":"code","e46dae94":"code","32ef728e":"code","139305f7":"code","38a8a6fe":"code","75922d22":"code","5d5cbd0b":"code","bdb538f1":"code","43996c77":"code","75a24465":"code","d4972179":"code","d219e5ee":"code","7eec8bb1":"code","59654046":"code","66bf7a79":"code","bb0e7f13":"markdown","92e0f309":"markdown"},"source":{"cdb4d9b3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os","0394e9d8":"df= pd.read_csv(\"..\/input\/rfcx-species-audio-detection\/train_tp.csv\")\ndf.head()","6293cb9f":"df.describe()","6f6b54b8":"print(df.species_id.unique())","5ce24f4e":" len(df) - len(df.recording_id.unique()) ","a222769b":"fp = pd.read_csv(\"..\/input\/rfcx-species-audio-detection\/train_fp.csv\")","f5b05cd7":" len(fp) - len(fp.recording_id.unique()) ","2b7772c3":"duplicate = [i  for i in fp.recording_id.unique() if i in df.recording_id.unique()]","80372813":"df[df['recording_id']=='015113cad']","94736ab9":"fp[fp['recording_id']=='015113cad']","222469a0":"df.describe()","53a84190":"df.t_min.hist()","19ce83af":"df.t_max.hist()","5df9b388":"df['duration'] = df['t_max'] - df['t_min']","fef15664":"df.duration.hist()","142a3e01":"df[df['recording_id']=='c12e0a62b']","df0c9fc9":"df_train = df.copy()\ndf_train.drop_duplicates(subset=['recording_id'], keep=False, inplace=True)","e2f97eab":"df_train['type'] = df_train['species_id']\ndf_train['species_id'] = df_train['species_id'].apply(lambda x: [x])\ndf_train['t_min'] = df_train['t_min'].apply(lambda x: [x])\ndf_train['t_max'] = df_train['t_max'].apply(lambda x: [x])\n","32ffac6d":"df_train.head()","b50acee3":"dt = df.recording_id.value_counts()\nindex = dt[dt>1].index","f74cd6c2":"recording_id_all = []\nspecies_id_all = []\nt_min_all = []\nt_max_all = []\nfor idx in index:\n    tmp = df[df['recording_id']==idx].values\n    species_id_tmp = []\n    t_min_tmp = []\n    t_max_tmp = []\n    for item in tmp:\n        species_id_tmp.append(item[1])\n        t_min_tmp.append(item[3])\n        t_max_tmp.append(item[5])\n    recording_id_all.append(idx)\n    species_id_all.append(species_id_tmp)\n    t_min_all.append(t_min_tmp)\n    t_max_all.append(t_max_tmp)","608ca9f5":"df_dup = pd.DataFrame({\"recording_id\": recording_id_all,\n                     \"species_id\":species_id_all,\n                      \"t_min\":t_min_all,\n                      \"t_max\":t_max_all,\n                      \"type\":25\n                      })","0f4f7bbc":"df_all = pd.concat((df_train, df_dup))","c9c4fa97":"df_all.sample(20)","bb141c0b":"from sklearn.model_selection import StratifiedKFold\n\ndef sampling_k_elements(group, k=50):\n    if len(group) < k:\n        return group\n    return group.sample(k)\n    \ntrain_full_df = (\n            df_all.groupby(\"type\")\n            .apply(sampling_k_elements)\n            .reset_index(drop=True)\n        )\n\nskf = StratifiedKFold(n_splits=5, shuffle=True, random_state=2020)\n\ntrain_full_df[\"fold\"] = -1\nfor fold_id, (train_index, val_index) in enumerate(skf.split(train_full_df, train_full_df[\"type\"])):\n    train_full_df.iloc[val_index, -1] = fold_id\ntrain_full_df.head()","22d534f3":"for use_fold in range(5):\n#     train_full_df = pd.read_csv(\"\/content\/drive\/Shareddrives\/Working\/Kaggle\/RainForest\/train_tp.csv\")\n    train_file_list = train_full_df.query(\"fold != @use_fold\")\n    val_file_list = train_full_df.query(\"fold == @use_fold\")\n    print(\"[fold {}] train: {}, val: {}\".format(use_fold, len(train_file_list), len(val_file_list)))\n    print(train_file_list.type.value_counts())","0042b7c7":"train_full_df.duration.hist()","8db4b097":"train_full_df.to_csv(\"train_preprocessing.csv\",index=False)","f6bee3be":"len(train_full_df)- len(train_full_df.recording_id.value_counts())","76ee1b24":"for i in train_full_df.species_id.values:\n    for j in i:\n        pass","6f16e2d1":"dfx= pd.read_csv(\"train_preprocessing.csv\")","e46dae94":"for i in dfx.species_id.values:\n    for j in i:\n        pass","32ef728e":"train_full_df.head()","139305f7":"fp = pd.read_csv(\"..\/input\/rfcx-species-audio-detection\/train_fp.csv\")\nfp.head()","38a8a6fe":"fp = fp[fp['recording_id'].isin(train_full_df.recording_id.tolist())]","75922d22":"df_train = fp.copy()\ndf_train.drop_duplicates(subset=['recording_id'], keep=False, inplace=True)\ndf_train['type'] = df_train['species_id']\ndf_train['species_id'] = df_train['species_id'].apply(lambda x: [x])\ndf_train['t_min'] = df_train['t_min'].apply(lambda x: [x])\ndf_train['t_max'] = df_train['t_max'].apply(lambda x: [x])","5d5cbd0b":"dt = fp.recording_id.value_counts()\nindex = dt[dt>1].index\nrecording_id_all = []\nspecies_id_all = []\nt_min_all = []\nt_max_all = []\nfor idx in index:\n    tmp = fp[fp['recording_id']==idx].values\n    species_id_tmp = []\n    t_min_tmp = []\n    t_max_tmp = []\n    for item in tmp:\n        species_id_tmp.append(item[1])\n        t_min_tmp.append(item[3])\n        t_max_tmp.append(item[5])\n    recording_id_all.append(idx)\n    species_id_all.append(species_id_tmp)\n    t_min_all.append(t_min_tmp)\n    t_max_all.append(t_max_tmp)","bdb538f1":"df_dup = pd.DataFrame({\"recording_id\": recording_id_all,\n                     \"species_id\":species_id_all,\n                      \"t_min\":t_min_all,\n                      \"t_max\":t_max_all,\n                      \"type\":25\n                      })\n\ndf_all = pd.concat((df_train, df_dup))","43996c77":"df_all","75a24465":"df_all = df_all[['recording_id', 'species_id', 't_min', 't_max']]","d4972179":"df_all.columns = ['recording_id', 'FPspecies_id', 'FPt_min', 'FPt_max']","d219e5ee":"df_all.head()","7eec8bb1":"df_x = train_full_df.join(df_all.set_index('recording_id'), on='recording_id') ","59654046":"df_x","66bf7a79":"df_x.to_csv(\"train_tp_fp.csv\",index=False)","bb0e7f13":"## Remove duplicate\n","92e0f309":"## False positive"}}