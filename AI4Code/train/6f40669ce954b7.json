{"cell_type":{"1fcad6f0":"code","d0542e17":"code","bc5509bd":"code","2ace6cf7":"code","c400b32f":"code","efb181a3":"code","b9fbe075":"code","9b7d5fd5":"code","a937ebcf":"code","b862ae93":"code","59d1abe0":"code","237eb047":"code","e387e213":"code","784a696a":"code","6814676b":"code","4e513523":"code","84f78cd7":"code","0e8d596b":"code","94ac2aed":"code","41b4b105":"code","49d5ab5a":"code","326b9e17":"code","33efb11e":"code","15bf4c93":"code","ab661fb0":"code","fdfde611":"code","d7d07c55":"code","6c360c29":"code","9fd95bb2":"code","3f1f6103":"code","68ca1644":"code","ace8c2c4":"code","9705478d":"code","44e88641":"code","a7820821":"code","19196648":"code","f8b0bdb6":"code","7cc2e35a":"code","4c7880e2":"code","a6383c6b":"code","d10bacb5":"code","5132b632":"code","fd7a63be":"code","ca529e2f":"code","8e50392a":"code","278260bb":"code","e419d8f9":"code","9201f22e":"code","ead4cdba":"markdown","6ae53a73":"markdown","bead9e52":"markdown","8846bb49":"markdown","a6e4fcff":"markdown","8aae2075":"markdown","0dac49b4":"markdown","dd2fa8c3":"markdown","77d72aa0":"markdown"},"source":{"1fcad6f0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas_profiling import ProfileReport\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","d0542e17":"train_df = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain_df.describe(include='all')","bc5509bd":"#exploratory data analysis \nprofile = ProfileReport(train_df, title='Pandas Profiling Report', explorative=True)\nprofile.to_widgets()","2ace6cf7":"train_df.head()","c400b32f":"#try create corelation of target feature with rest of the feature value.\ntrain_df[train_df.columns[:]].corr()['Survived']","efb181a3":"plt.figure(figsize=(16, 6))\nheatmap = sns.heatmap(train_df.corr(), vmin=-1, vmax=1, annot=True)\nheatmap.set_title('Correlation Heatmap', fontdict={'fontsize':12}, pad=12);","b9fbe075":"#check the null value per column\ntrain_df.isnull().sum()","9b7d5fd5":"sns.heatmap(train_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","a937ebcf":"#look at numeric and categorical values separately \ndf_num = train_df[['Age','SibSp','Parch','Fare']]\ndf_cat = train_df[['Survived','Pclass','Sex','Ticket','Cabin','Embarked']]","b862ae93":"# here we will create histogram for numarical value.\nfor i in df_num:\n    sns.displot(train_df[i])","59d1abe0":"#now we will check our dependent variable and numarical independent variable realtion using pivot table\npd.pivot_table(train_df, index ='Survived', values = ['Age','SibSp','Parch','Fare'])","237eb047":"#here i will create a bar plot for categorical variable\nfor i in df_cat:\n    sns.barplot(x = df_cat[i].value_counts().index, y = df_cat[i].value_counts()).set_title(i)\n    plt.show()","e387e213":"#creating pivot table for catgorical variable\nprint(pd.pivot_table(train_df, index='Survived', values='Name', aggfunc='count', columns='Pclass'))\nprint()\nprint(pd.pivot_table(train_df, index='Survived', values='Name', aggfunc='count', columns='Sex'))\nprint()\nprint(pd.pivot_table(train_df, index='Survived', values='Name', aggfunc='count', columns='Embarked'))","784a696a":"#drop cabin from train data\ntrain_df.drop('Cabin', axis=1, inplace=True)","6814676b":"train_df['Age'].fillna(int(train_df['Age'].mean()), inplace=True)","4e513523":"sns.heatmap(train_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","84f78cd7":"#there 2 NAN value in Embarked droping those 2 row\ntrain_df.dropna(inplace=True)","0e8d596b":"# creating one hot encoding for catgorical value\nsex = pd.get_dummies(train_df['Sex'],drop_first=True)\nembark = pd.get_dummies(train_df['Embarked'],drop_first=True)","94ac2aed":"#droping name and ticket because of poor corealtion and sex and emarked beacuse we create dumies for that\ntrain_df.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","41b4b105":"train_df = pd.concat([train_df,sex,embark],axis=1)\ntrain_df.head()","49d5ab5a":"# forgot to drop PassengerId\n#train_df.drop('PassengerId', axis=1, inplace=True)\ntrain_df.head()","326b9e17":"from sklearn.model_selection import train_test_split","33efb11e":"x, y = train_df.drop('Survived',axis=1), train_df['Survived']","15bf4c93":"x_train, x_test, y_train, y_test = train_test_split(x, y)","ab661fb0":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report","fdfde611":"lr = LogisticRegression(max_iter = 2000)\nlr.fit(x_train, y_train)","d7d07c55":"predictions = lr.predict(x_test)\naccuracy=confusion_matrix(y_test,predictions)\naccuracy","6c360c29":"accuracy=accuracy_score(y_test,predictions)\naccuracy","9fd95bb2":"cv = cross_val_score(lr,x_train, y_train,cv=5)\ncv","3f1f6103":"print(classification_report(y_test,predictions))","68ca1644":"rf = RandomForestClassifier(random_state = 1)\nrf.fit(x_train, y_train)\ncv = cross_val_score(rf,x_train,y_train,cv=5)\nprint(cv)\nprint(cv.mean())","ace8c2c4":"predictions_rf = rf.predict(x_test)\naccuracy=confusion_matrix(y_test,predictions_rf)\naccuracy","9705478d":"accuracy=accuracy_score(y_test,predictions_rf)\naccuracy","44e88641":"print(classification_report(y_test,predictions_rf))","a7820821":"test_sub = pd.read_csv('..\/input\/titanic\/test.csv')\ntest_sub.describe()","19196648":"test_sub.isnull().sum()","f8b0bdb6":"sns.heatmap(test_sub.isnull(),yticklabels=False,cbar=False,cmap='viridis')","7cc2e35a":"int(test_sub['Age'].mean())","4c7880e2":"test_sub.drop('Cabin', axis=1, inplace=True)\ntest_sub['Age'].fillna(int(test_sub['Age'].mean()), inplace=True)","a6383c6b":"sns.heatmap(test_sub.isnull(),yticklabels=False,cbar=False,cmap='viridis')","d10bacb5":"sex = pd.get_dummies(test_sub['Sex'],drop_first=True)\nembark = pd.get_dummies(test_sub['Embarked'],drop_first=True)","5132b632":"test_sub.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","fd7a63be":"test_sub = pd.concat([test_sub,sex,embark],axis=1)\ntest_sub.head()","ca529e2f":"test_sub.count()","8e50392a":"test_sub['Fare'].fillna(test_sub['Fare'].dropna().median(), inplace=True)\ntest_sub.count()","278260bb":"predictions_sub = rf.predict(test_sub)","e419d8f9":"final = pd.DataFrame({\n        \"PassengerId\": test_sub[\"PassengerId\"],\n        \"Survived\": predictions_sub\n    })","9201f22e":"final.to_csv('random_forest_submission.csv', index=False)","ead4cdba":"still i row where is NAN i am not sure what to do with now i will try to figure it out in future as i can not drop this test value.","6ae53a73":" Based on above exploratry data analysis Fare, Pclass, Sex these are some important feature and passengerId and cabin we have to drop because of high null value and very poor corealtion","bead9e52":"looks like age follow the normal distribuation so may be we can use mean value to fill the NAN value.","8846bb49":"# Feature Engineering\n\nbased on our explortary data analysis above now we will do do some feature engineering and feature selection.","a6e4fcff":"this panda profile as u can see above have almost all EDA metrice required. and in just one line of code, but as starter in data science i dont want to make habbit of using short cut for now. so we try to do Exploratory data analysis by our self and try to make some infrenceses from it.","8aae2075":"lot of missing value in cabin and age has some missing value cabin we will drop as there are to many missing value for age we have to figiue it out how we can fill these value by using some statistic method. Embarked also have 2 missing value.","0dac49b4":"i thought age might be having a positive correlation with survival but it's not also unfortunately fare show some positive correlation with the target variable.","dd2fa8c3":"My First Kaggale notebook","77d72aa0":"# ML Model Buliding "}}