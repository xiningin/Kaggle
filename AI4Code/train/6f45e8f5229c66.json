{"cell_type":{"d69b57eb":"code","306327a2":"code","058e56b5":"code","6052265b":"code","0d6d6e1c":"code","15296058":"code","008b3894":"code","cdef5bbb":"code","a297eb2f":"code","301c78d1":"code","530951e6":"code","0cc2a25c":"code","9eb1c255":"code","33e2ed61":"code","1bb7891d":"code","69f7e5ef":"code","45beb367":"code","569ebebb":"code","3bed0e2c":"code","97284408":"code","406b10fe":"code","2c22dd49":"code","f92ffb6f":"code","b25d3111":"code","d0f30b7c":"code","634dfcac":"code","144756f4":"code","eed44e2a":"code","7122d866":"markdown","4eee71d8":"markdown","c7eb194a":"markdown","9c3abc63":"markdown"},"source":{"d69b57eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","306327a2":"eval1=pd.read_csv('\/kaggle\/input\/the-insurance-company-tic-benchmark\/tic_2000_eval_data.csv')\neval1.head()","058e56b5":"col1=eval1.columns.values\ncol1","6052265b":"train=pd.read_csv('\/kaggle\/input\/the-insurance-company-tic-benchmark\/tic_2000_train_data.csv').dropna()\ntrain","0d6d6e1c":"col2=train.columns.values\ncol2","15296058":"from matplotlib import pyplot as plt\nimport seaborn as sns","008b3894":"train.hist(column='MOSTYPE',bins=10,color='violet',grid=False)\nplt.box(on=None)","cdef5bbb":"sns.scatterplot(data=train,x='MOPLMIDD',y='MGEMLEEF')","a297eb2f":"sns.distplot(train['MRELGE'])","301c78d1":"sns.barplot(data=train,x='MOSHOOFD',y='MOSTYPE',hue='CARAVAN')","530951e6":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nlr=LogisticRegression(C=0.01,solver='sag')\ny=train[['CARAVAN']]\nX=train.iloc[:,:85]\nX = preprocessing.StandardScaler().fit(X).transform(X.astype(float))\nX_train,X_test,y_train,y_test=train_test_split(X,y,random_state=4,test_size=0.2)","0cc2a25c":"print(X_train.shape)\nprint(X_test.shape)","9eb1c255":"lr.fit(X_train,y_train)","33e2ed61":"pred=lr.predict(X_test)\npred","1bb7891d":"from sklearn import metrics\nprint('Accuracy train set' ,metrics.accuracy_score(y_train,lr.predict(X_train)))\nprint('Accuracy test set',metrics.accuracy_score(y_test,pred))","69f7e5ef":"eval2=eval1.iloc[:,:85]\nresult=lr.predict(eval2)\ndf=pd.DataFrame(result)\ndf\n","45beb367":"from sklearn.neighbors import KNeighborsClassifier\nneigh=KNeighborsClassifier(n_neighbors=3,algorithm='auto').fit(X_train,y_train)\nneigh.predict(X_test)","569ebebb":"metrics.accuracy_score(y_test,neigh.predict(X_test))","3bed0e2c":"df1=neigh.predict(eval2)\npd.DataFrame(df1)","97284408":"from sklearn.tree import DecisionTreeClassifier\ndtc=DecisionTreeClassifier(criterion='entropy',max_depth=4).fit(X_train,y_train)\ndtc.predict(X_test)","406b10fe":"dtc.predict(eval2)","2c22dd49":"print(metrics.accuracy_score(y_test,dtc.predict(X_test)))","f92ffb6f":"from sklearn.cluster import KMeans \nfrom sklearn.datasets.samples_generator import make_blobs ","b25d3111":"clusternum=3\nmeans=KMeans(init='k-means++',n_clusters=clusternum,n_init=12)\nmeans.fit(X)","d0f30b7c":"labels=means.labels_\nprint(labels)","634dfcac":"train['CLUSTERS']=labels\ntrain","144756f4":"train.groupby('CLUSTERS').mean()","eed44e2a":"area=np.pi*(X[:,1])**2\nplt.scatter(X[:,0],X[:,3],s=area,c=labels.astype(float),alpha=1.5)\nplt.xlabel('features')\nplt.ylabel('Caravan',fontsize=10)\nplt.show()","7122d866":"Using Decision Tree Classifier","4eee71d8":"Using K-Means Cluster","c7eb194a":"Using Logistic Regression Classifier","9c3abc63":"Using K-Neighbors Classifiers"}}