{"cell_type":{"f901e566":"code","278cef9e":"code","bb1d8744":"code","06a7f32b":"code","a0d1f5a1":"code","9b0ae3f8":"code","7d4bee3c":"code","3f04c342":"code","e41cafc3":"code","ea6795a6":"code","c545ee37":"code","1f2dcf25":"code","f611b0ee":"code","4ddd7445":"code","8b539e99":"code","27b0b508":"code","ec075a99":"code","18602882":"code","3b29502c":"code","2b236cb3":"code","46612e11":"code","3f45c7b4":"code","bffbe323":"code","2fca3133":"code","24518b35":"code","32e384c9":"code","7ac63134":"code","b8fd0da4":"code","edd04757":"code","eac4bcf6":"code","a5e6fcfb":"code","ba508c9b":"code","dd0fbdfb":"code","e6ff71b0":"code","05f9806a":"code","05238499":"code","766c96c3":"code","9a471e29":"code","0c253cf8":"code","8629dcfd":"code","30978907":"code","750af129":"markdown","1b85cb72":"markdown","941ceb66":"markdown","faff4321":"markdown","bff665a5":"markdown","d163524e":"markdown","ca64174f":"markdown","b9a3a2c5":"markdown","b0800e40":"markdown","8dafd47a":"markdown"},"source":{"f901e566":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","278cef9e":"# import seaborn lib as sns\nimport seaborn as sns\n\ndata_set = sns.load_dataset(\"tips\")\n\n\n\ndata_set.head(3)\n","bb1d8744":"# Getting the all data set names \n\n# you can replace tips the sns.load_dataset(\"tips\") what ever dataset you need to work with \n\n\nall_data_sets = sns.get_dataset_names()\nprint(all_data_sets)\n","06a7f32b":"#Return a path to the cache directory for example datasets.\n\nsns.get_data_home()\n\n","a0d1f5a1":"penguins = sns.load_dataset(\"penguins\")\npenguins.head()\n","9b0ae3f8":"sns.displot(data=penguins, x=\"flipper_length_mm\")","7d4bee3c":"# Use the kind parameter to select a different representation:\nsns.displot(data=penguins, x=\"flipper_length_mm\", kind=\"kde\")","3f04c342":"sns.displot(data=penguins, x=\"flipper_length_mm\", kind=\"ecdf\")","e41cafc3":"# While in histogram mode, it is also possible to add a KDE curve:\nsns.displot(data=penguins, x=\"flipper_length_mm\", kde=True)","ea6795a6":"# bivariate means two values or two variables here !!!\n\n#To draw a bivariate plot, assign both x and y\n\nsns.displot(data=penguins, x=\"flipper_length_mm\", y=\"bill_length_mm\")\n","c545ee37":"# Rug-plot \ntips = sns.load_dataset(\"tips\")\nsns.kdeplot(data=tips, x=\"total_bill\")\nsns.rugplot(data=tips, x=\"total_bill\")","1f2dcf25":"sns.scatterplot(data=tips, x=\"total_bill\", y=\"tip\")\nsns.rugplot(data=tips, x=\"total_bill\", y=\"tip\", height=-.02, clip_on=False)","f611b0ee":"# Bar plot\n\ntips = sns.load_dataset(\"tips\")\nsns.barplot(x=\"day\", y=\"total_bill\", data=tips)","4ddd7445":"import numpy as np \n# try with np.sum and np.mea\nsns.barplot(x=\"day\", y=\"total_bill\", hue=\"sex\", data=tips,estimator=np.std)","8b539e99":"sns.barplot(x=\"day\", y=\"tip\", data=tips, capsize=.2)","27b0b508":"# Countplot \ntitanic = sns.load_dataset(\"titanic\")\nsns.countplot(x=\"class\", data=titanic)","ec075a99":"sns.countplot(x=\"class\", hue=\"who\", data=titanic) # added hue parameter ","18602882":"tips = sns.load_dataset(\"tips\")\nsns.boxplot(x=\"day\", y=\"total_bill\", data=tips)","3b29502c":"# strip plot\n#Group the strips by a categorical variable:\ntips = sns.load_dataset(\"tips\")\nsns.stripplot(x=\"day\", y=\"total_bill\", data=tips)","2b236cb3":"sns.stripplot(x=\"sex\", y=\"total_bill\", hue=\"day\", data=tips)","46612e11":"# swarmplot\n# Draw a categorical scatterplot with non-overlapping points.\n\nsns.swarmplot(x=\"day\", y=\"total_bill\", data=tips)","3f45c7b4":"# added hue args\nsns.swarmplot(x=\"day\", y=\"total_bill\", hue=\"sex\", data=tips)\n","bffbe323":"sns.violinplot(x=\"day\", y=\"total_bill\", data=tips, inner=None)\nsns.swarmplot(x=\"day\", y=\"total_bill\", data=tips,color=\"white\", edgecolor=\"gray\")","2fca3133":"flights = sns.load_dataset(\"flights\")\nfls_cor = flights.corr()\nsns.heatmap(fls_cor)","24518b35":"sns.heatmap(fls_cor,annot=True,cmap='coolwarm') ","32e384c9":"flights = flights.pivot(\"month\", \"year\", \"passengers\")","7ac63134":"#here index and col not in order , they are clustring(grouping) the common data\nsns.clustermap(flights,cmap='mako') \n","b8fd0da4":"# Pair plot \n# Plot pairwise relationships in a dataset.\npenguins = sns.load_dataset(\"penguins\")\nsns.pairplot(penguins)\n","edd04757":"# added categorical hue args\nsns.pairplot(penguins, hue=\"species\")","eac4bcf6":"sns.pairplot(penguins, hue=\"species\", diag_kind=\"hist\")","a5e6fcfb":"# FacetGrid\n# Multi-plot grid for plotting conditional relationships.\n\ntips = sns.load_dataset(\"tips\")\nsns.FacetGrid(tips)","ba508c9b":"# Assign column and\/or row variables to add more subplots to the figure:\nsns.FacetGrid(tips, col=\"time\", row=\"sex\")","dd0fbdfb":"obj = sns.FacetGrid(tips, col=\"time\",  row=\"sex\")\nobj.map(sns.scatterplot, \"total_bill\", \"tip\")\n","e6ff71b0":"obj = sns.FacetGrid(tips, col=\"time\", hue=\"sex\")\nobj.map_dataframe(sns.scatterplot, x=\"total_bill\", y=\"tip\")\nobj.set_axis_labels(\"Total bill\", \"Tip\")\nobj.add_legend()","05f9806a":"# lmplot  Linear model plot\nimport seaborn as sns; sns\n\ntips = sns.load_dataset(\"tips\")\ng = sns.lmplot(x=\"total_bill\", y=\"tip\", data=tips)","05238499":" sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", data=tips)","766c96c3":"sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", data=tips,markers=[\"o\", \"x\"])","9a471e29":"sns.lmplot(x=\"size\", y=\"total_bill\", hue=\"day\", col=\"day\",data=tips, height=6, aspect=.4, x_jitter=.1)","0c253cf8":"# Reg plot regression plot\ntips = sns.load_dataset(\"tips\")\nax = sns.regplot(x=\"total_bill\", y=\"tip\", data=tips)","8629dcfd":"# Fit a higher-order polynomial regression:\n\nans = sns.load_dataset(\"anscombe\")\n\nax = sns.regplot(x=\"x\", y=\"y\", data=ans.loc[ans.dataset == \"II\"],\n                 scatter_kws={\"s\": 80},\n                 order=2, ci=None)","30978907":"# Fit the regression model using log(x) function : \nsns.regplot(x=\"size\", y=\"total_bill\", data=tips,\n                 x_estimator=np.mean, logx=True)","750af129":"# 0.Utitility \n## Seaborn Utils (Utility functions) you should know \ud83d\udca8\ud83d\udca8\n### Load an example dataset from the online repository (requires internet).\n","1b85cb72":"## **Description**\n0. **Utils**\n1. **Distribution plot**\n2. **Categorical plot**\n3. **Matrix plot**\n4. **Grids**\n5. **Regression plot**\n6. **Style and color**\n\n","941ceb66":"# 4. **Grids**","faff4321":"# **Introduction to seaborn for Beginners**\n***\n   # Seabron : -> \n   \n## **Seaborn is a Python data *visualization* library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.**","bff665a5":"# **1.Distribution plot**","d163524e":"### Estimator parameter \nlike import numpy as np \nnp.std\nnp.sum\nnp.mean(defalut)\n","ca64174f":"# 5. **Regression plot**","b9a3a2c5":"# 6. **Style and color**\n\n# difference between cmap and pallate\n\n# palette is for seaborn\n\n# cmap is for matplotlib\n\n# but remember  that seaborn is built with matplotlib lib\n\n# there is bunch a ways we can done with it's all up to you \n\n# you can refer --> 1.https:\/\/matplotlib.org\/stable\/tutorials\/colors\/colors.html\n\n# 2.https:\/\/seaborn.pydata.org\/generated\/seaborn.set_theme.html#seaborn.set_theme\n\n","b0800e40":"#  **2.Categorical plot**","8dafd47a":"# 3. **Matrix plot**"}}