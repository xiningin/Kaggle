{"cell_type":{"c4bc49b4":"code","c7b7b047":"code","7d04c62c":"code","0d8fc7ed":"code","1620e807":"code","b8b4ac3f":"code","33b19de7":"code","0e0c4b39":"code","bddd9cc3":"code","c5c28d24":"code","f3291eec":"code","1e2431bd":"code","1b4eda7b":"code","fe9d602b":"code","8ddab7e0":"code","c311e959":"markdown"},"source":{"c4bc49b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c7b7b047":"data = pd.read_csv(\"..\/input\/2017.csv\")","7d04c62c":"data.info()","0d8fc7ed":"data.corr()","1620e807":"#correlation map\nf,ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","b8b4ac3f":"data.head(10)","33b19de7":"data.columns","0e0c4b39":"# Line Plot\ndata.Freedom.plot(kind = \"line\", color = \"red\",label = \"Freedom\",linewidth = 1, alpha = 0.6, grid = True,linestyle = \":\")\ndata.Generosity.plot( color = \"green\",label = \"Generosity\",linewidth = 1, alpha = 0.5, grid = True,linestyle = \"-\")\nplt.legend(loc = \"upper right\")\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.title(\"Line Plot\")\nplt.show()","bddd9cc3":"#Scatter Plot\ndata.plot(kind = \"scatter\",x =\"Freedom\", y = \"Generosity\",alpha =.5,color=\"orange\")\nplt.xlabel(\"Freedom\")\nplt.ylabel(\"Generosity\")\nplt.title(\"Freedom Generosity Scatter Plot\")\nplt.show()","c5c28d24":"# Histogram\ndata.Freedom.plot(kind = \"hist\", bins = 50,figsize=(10,10))\nplt.show()","f3291eec":"#clf() = clean it up again\ndata.Freedom.plot(kind =\"hist\", bins = 50)\nplt.clf()","1e2431bd":"series = data['Freedom']\nprint(type(series))\ndata_frame = data [['Freedom']]\nprint(type(data_frame))","1b4eda7b":"x= data[\"Freedom\"]< 0.2\ndata[x]","fe9d602b":"# Filtering Pandas with logical_and\ndata[np.logical_and(data[\"Freedom\"]<0.2, data[\"Happiness.Score\"]>5)]","8ddab7e0":"#This line gives us the same result with previous code line.\n\ndata[(data[\"Freedom\"]<0.2) & (data[\"Happiness.Score\"]>5)]","c311e959":"Here is the end of my homework."}}