{"cell_type":{"126bb19a":"code","ef662eeb":"code","ca0e64e0":"code","5917f661":"code","12d0899b":"code","78ceefa8":"code","42a0cf66":"code","e24b950a":"code","eb656902":"code","9c1a87eb":"code","59d033ec":"code","5c0e3638":"code","15568924":"code","0a04852b":"code","f47028cb":"code","75cdd556":"code","fac78650":"code","f7f3f81a":"code","72571ab6":"code","7b311d59":"code","d3c0aeda":"code","f4177f60":"code","1f65df6f":"code","f5e9b398":"code","fdfe98c1":"code","e2ae3da7":"code","ebc1d2d9":"code","ca9f46a1":"code","044dae9a":"code","1ef16f78":"code","4c23d101":"code","1461a88d":"code","7a8fcf3d":"code","76d5dcd3":"code","c8facfd7":"code","744e1b64":"markdown","6d58f852":"markdown"},"source":{"126bb19a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ef662eeb":"import torch\nimport fastai\nfrom fastai.tabular.all import *\nfrom fastai.text.all import *\nfrom fastai.vision.all import *\nfrom fastai.medical.imaging import *\nfrom fastai import *\n\nimport time\nfrom datetime import datetime\n\nprint(f'Notebook last run on {datetime.fromtimestamp(time.time()).strftime(\"%Y-%m-%d, %H:%M:%S UTC\")}')\nprint('Using fastai version ',fastai.__version__)\nprint('And torch version ',torch.__version__)","ca0e64e0":"from PIL import Image\n\nimg = Image.open(\"..\/input\/mars-eiffel-deepdream\/eiffel.jpg\")\nimg","5917f661":"TensorTypes = (TensorImage,TensorMask,TensorPoint,TensorBBox)","12d0899b":"def _add1(x): return x+1\ndumb_tfm = RandTransform(enc=_add1, p=0.5)\nstart,d1,d2 = 2,False,False\nfor _ in range(40):\n    t = dumb_tfm(start, split_idx=0)\n    if dumb_tfm.do: test_eq(t, start+1); d1=True\n    else:           test_eq(t, start)  ; d2=True\nassert d1 and d2\ndumb_tfm","78ceefa8":"_,axs = subplots(1,2)\nshow_image(img, ctx=axs[0], title='original')\nshow_image(img.flip_lr(), ctx=axs[1], title='flipped');","42a0cf66":"img.resize((64,64))","e24b950a":"timg = TensorImage(image2tensor(img))\ntpil = PILImage.create(timg)","eb656902":"tpil.resize((64,64))","9c1a87eb":"TensorTypes = (TensorImage,TensorMask,TensorPoint,TensorBBox)\n\ndef flip_lr(x:Image.Image): return x.transpose(Image.FLIP_LEFT_RIGHT)\ndef flip_lr(x:TensorImageBase): return x.flip(-1)\ndef flip_lr(x:TensorPoint): return TensorPoint(_neg_axis(x.clone(), 0))\ndef flip_lr(x:TensorBBox):  return TensorBBox(TensorPoint(x.view(-1,2)).flip_lr().view(-1,4))","59d033ec":"img = PILImage(PILImage.create(timg).resize((600,400)))\nimg","5c0e3638":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,sz in zip(axs.flatten(), [300, 500, 700]):\n    show_image(img.crop_pad(sz), ctx=ax, title=f'Size {sz}');","15568924":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,mode in zip(axs.flatten(), [PadMode.Zeros, PadMode.Border, PadMode.Reflection]):\n    show_image(img.crop_pad((600,700), pad_mode=mode), ctx=ax, title=mode);","0a04852b":"_,axs = plt.subplots(1,3,figsize=(12,4))\nf = RandomCrop(200)\nfor ax in axs: show_image(f(img), ctx=ax);","f47028cb":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax in axs: show_image(f(img, split_idx=1), ctx=ax);","75cdd556":"test_eq(ResizeMethod.Squish, 'squish')","fac78650":"Resize(224)","f7f3f81a":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,method in zip(axs.flatten(), [ResizeMethod.Squish, ResizeMethod.Pad, ResizeMethod.Crop]):\n    rsz = Resize(256, method=method)\n    show_image(rsz(img, split_idx=0), ctx=ax, title=method);","72571ab6":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,method in zip(axs.flatten(), [ResizeMethod.Squish, ResizeMethod.Pad, ResizeMethod.Crop]):\n    rsz = Resize(256, method=method)\n    show_image(rsz(img, split_idx=1), ctx=ax, title=method);","7b311d59":"crop = RandomResizedCrop(256)\n_,axs = plt.subplots(3,3,figsize=(9,9))\nfor ax in axs.flatten():\n    cropped = crop(img)\n    show_image(cropped, ctx=ax);","d3c0aeda":"_,axs = subplots(1,3)\nfor ax in axs.flatten(): show_image(crop(img, split_idx=1), ctx=ax);","f4177f60":"test_eq(cropped.shape, [256,256])","1f65df6f":"RatioResize(256)(img)","f5e9b398":"test_eq(RatioResize(256)(img).size[0], 256)\ntest_eq(RatioResize(256)(img.dihedral(3)).size[1], 256)","fdfe98c1":"timg = TensorImage(array(img)).permute(2,0,1).float()\/255.\ndef _batch_ex(bs): return TensorImage(timg[None].expand(bs, *timg.shape).clone())","e2ae3da7":"tflip = FlipItem(p=1.)","ebc1d2d9":"bbox = TensorBBox(((tensor([[1.,0., 2.,1]]) -1)[None]))\nx=test_eq(tflip(bbox,split_idx=0), tensor([[1.,0., 0.,1]]) -1)","ca9f46a1":"_,axs = subplots(2, 4)\nfor ax in axs.flatten():\n    show_image(DihedralItem(p=1.)(img, split_idx=0), ctx=ax)","044dae9a":"x = flip_mat(torch.randn(100,4,3))\ntest_eq(set(x[:,0,0].numpy()), {-1,1}) #might fail with probability 2*2**(-100) (picked only 1s or -1s)","1ef16f78":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,sz in zip(axs.flatten(), [300, 500, 700]):\n    show_image(img.crop_pad(sz), ctx=ax, title=f'Size {sz}')","4c23d101":"_,axs = plt.subplots(1,3,figsize=(12,4))\nf = RandomCrop(200)\nfor ax in axs: show_image(f(img), ctx=ax)","1461a88d":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax in axs: show_image(f(img, split_idx=1), ctx=ax)","7a8fcf3d":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,method in zip(axs.flatten(), [ResizeMethod.Squish, ResizeMethod.Pad, ResizeMethod.Crop]):\n    rsz = Resize(256, method=method)\n    show_image(rsz(img, split_idx=0), ctx=ax, title=method)","76d5dcd3":"crop = RandomResizedCrop(256)\n_,axs = plt.subplots(3,3,figsize=(9,9))\nfor ax in axs.flatten():\n    cropped = crop(img)\n    show_image(cropped, ctx=ax)","c8facfd7":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, @mpwolke was Here.' )","744e1b64":"The Eiffel Tower is a wrought-iron lattice tower on the Champ de Mars in Paris, France. It is named after the engineer Gustave Eiffel, whose company designed and built the tower.\n\nConstructed from 1887 to 1889 as the entrance to the 1889 World's Fair, it was initially criticised by some of France's leading artists and intellectuals for its design, but it has become a global cultural icon of France and one of the most recognisable structures in the world. The Eiffel Tower is the most-visited paid monument in the world; 6.91 million people ascended it in 2015. https:\/\/en.wikipedia.org\/wiki\/Eiffel_Tower","6d58f852":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTISZb0KWQljFWxMQI0rph-W_53sjmgBNg5PQ&usqp=CAU)hoteldesgrandeshommes.com"}}