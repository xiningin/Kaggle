{"cell_type":{"de67dca0":"code","9b58d2cd":"code","a3a6c39b":"code","11d06e8f":"markdown"},"source":{"de67dca0":"import re\n\nimport parsel\n\n\nresults = {}  # dictionary the maps (zip code => borough)\n\n# scrap information from the web page\n\nhtml = open(r'..\/input\/nyczipcodes\/NYC Neighborhood ZIP Code Definitions.html', encoding='utf8').read()\nsel = parsel.Selector(html)\n\ncur_borough = None\n_rows = sel.css('tr')[1:]\nfor _r in _rows:\n    borough = _r.css('[headers=\"header1\"]::text').extract_first()\n    if borough:\n        cur_borough = borough    \n    zip_codes = _r.css('[headers=\"header3\"]::text').extract_first()\n    zip_codes = zip_codes.strip()  # remove beginning space    \n    zip_codes = re.split(r',\\s?', zip_codes)  # split on the comma\n    for zc in zip_codes:\n        results[zc] = cur_borough\n\n# input missing values\n\nmissing = {\n    '10282': 'Manhattan',\n    '11001': 'Queens',\n    '11109': 'Queens',\n    '10311': 'Staten Island'    \n}\nresults.update(missing)\n\nlist(results.items())[:5]","9b58d2cd":"import pandas as pd\n\n\n# create table with results\ndf = pd.read_csv('..\/input\/data-science-for-good\/2016 School Explorer.csv', index_col='Location Code')\nend_df = df['Zip'].apply(lambda x: results[str(x)]).rename('Borough').to_frame()\n\nend_df.sample(20, random_state=1)","a3a6c39b":"end_df.to_csv('NYC Schools Boroughs.csv')","11d06e8f":"# Retrieve school boroughs\n\nIn this kernel I will retrieve the boroughs of each school, based on their zip codes.\n\nInformation was found on this [site][1].\n\n[1]: https:\/\/www.health.ny.gov\/statistics\/cancer\/registry\/appendix\/neighborhoods.htm"}}