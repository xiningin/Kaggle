{"cell_type":{"f054f3ec":"code","5a7c76d9":"code","249847b5":"code","2f2857d9":"code","d07ea6fe":"code","0eacd839":"code","395a263d":"code","68ab3174":"code","eea2a762":"code","f4a7d1c1":"code","26022afe":"code","51325f66":"code","dbd7c089":"code","274b5b83":"code","0831e89e":"code","e0ad8993":"code","6d30a549":"code","0ee8980d":"code","c36056b2":"markdown","6d3d8164":"markdown","c8e32d2a":"markdown","86e76899":"markdown","280f3b61":"markdown","fc3ec9fd":"markdown","8481c27c":"markdown","c7a9c64e":"markdown","6b3c3af7":"markdown","c5e07927":"markdown","74148ed0":"markdown","0d63d1e9":"markdown","7233385f":"markdown","b24d147f":"markdown","ffdf71bb":"markdown","ddd832af":"markdown"},"source":{"f054f3ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a7c76d9":"from sklearn.preprocessing import StandardScaler, MinMaxScaler, MaxAbsScaler, QuantileTransformer\nfrom sklearn.feature_selection import SelectKBest, f_classif","249847b5":"df_tr=pd.read_csv(r'\/kaggle\/input\/practice-house-prices\/train.csv')\ndf_ts=pd.read_csv(r'\/kaggle\/input\/practice-house-prices\/test.csv')\n","2f2857d9":"data=df_tr\ndata.head(2)","d07ea6fe":"li_col=data.columns.to_list()\nli_ty=[]\n\nfor i in range(len(li_col)):\n    if data[li_col[i]].dtypes not in li_ty:\n        li_ty.append(data[li_col[i]].dtypes)\n        \nprint(li_ty)        \n","0eacd839":"print(data.isnull().sum())\n","395a263d":"data = data.fillna(0)\n","68ab3174":"data.columns","eea2a762":"li_cat=[]\n# print(li_col)\nfor i in range(len(li_col)):\n    if data[li_col[i]].dtypes=='O':\n        li_cat.append(li_col[i])\n        \nprint(li_cat)    ","f4a7d1c1":"for i in range(len(li_col)):\n    if data[li_col[i]].dtypes=='O':\n        data[li_col[i]] = data[li_col[i]].astype('category')\n        data[li_col[i]] = data[li_col[i]].cat.codes","26022afe":"fig, axes = plt.subplots(nrows=4,ncols=1)\nfig.set_size_inches(10, 30)\n\n\nsb.boxplot(data=data,y=\"SalePrice\",x=\"OverallQual\",orient=\"v\",ax=axes[0], palette=\"Oranges\")\nsb.boxplot(data=data,y=\"SalePrice\",x=\"LandSlope\",orient=\"v\",ax=axes[1], palette=\"Oranges\")\nsb.boxplot(data=data,y=\"SalePrice\",x=\"BsmtExposure\",orient=\"v\",ax=axes[2], palette=\"Oranges\")\nsb.boxplot(data=data,y=\"SalePrice\",x=\"PavedDrive\",orient=\"v\",ax=axes[3], palette=\"Oranges\")","51325f66":"factor = 2\nupper_lim = data['OverallQual'].mean () + data['OverallQual'].std () * factor\nlower_lim = data['OverallQual'].mean () - data['OverallQual'].std () * factor\n\nno_outliers = data[(data['OverallQual'] < upper_lim) & (data['OverallQual'] > lower_lim)]\nno_outliers","dbd7c089":"li_int=[]\nfor i in range(len(li_col)):\n    if data[li_col[i]].dtypes=='int64':\n        li_int.append(li_col[i])\n        \nprint(li_int)    ","274b5b83":"scaled_data = data[['MSSubClass']]\n\nprint('Mean:', scaled_data.MSSubClass.mean())\nprint('Standard Deviation:', scaled_data.MSSubClass.std())","0831e89e":"(data['LotArea']<0).any().any()","e0ad8993":"log_data = data[['LotArea']]\nlog_data['LotArea_log'] = (data['LotArea'] + 1).transform(np.log)\nlog_data","6d30a549":"# feature_sel_data = data.drop(['SalePrice'], axis=1)\n\n\n# # for i in range(len(li_col)):\n# #     if data[li_col[i]].dtypes=='O':\n# #         feature_sel_data[li_col[i]] = feature_sel_data[li_col[i]].cat.codes\n\n# # feature_sel_data.GarageFinish=feature_sel_data.GarageFinish.cat.codes\n\n# # Use 3 features\n# selector = SelectKBest(f_classif, k=3)\n\n# selected_data = selector.fit_transform(data, data['SalePrice'])\n# selected_data","0ee8980d":"grouped_data = data.groupby('SalePrice')\n\nsums_data = grouped_data['WoodDeckSF', 'YearBuilt'].sum().add_suffix('_sum')\navgs_data = grouped_data['WoodDeckSF', 'YearBuilt'].mean().add_suffix('_mean')\n\nsumed_averaged = pd.concat([sums_data, avgs_data], axis=1)\nsumed_averaged","c36056b2":"### finding out columns which are Object Type containing string","6d3d8164":"# Handling Outliers","c8e32d2a":"# Log Transform","86e76899":"# Categorical Encoding","280f3b61":"### Source:\n\nhttps:\/\/rubikscode.net\/2020\/11\/15\/top-9-feature-engineering-techniques\/\n\n### IDEA:\n\nhttps:\/\/www.datacamp.com\/community\/tutorials\/feature-selection-python\nhttps:\/\/machinelearningmastery.com\/feature-selection-with-real-and-categorical-data\/\nhttps:\/\/machinelearningmastery.com\/feature-engineering-and-selection-book-review\/\nhttps:\/\/machinelearningmastery.com\/feature-selection-machine-learning-python\/","fc3ec9fd":"### applied to positive numbers only","8481c27c":"# Feature Selection","c7a9c64e":"# Imputation","6b3c3af7":"### finding out columns which are integer type","c5e07927":"# Scaling\n### applied to numerical data","74148ed0":"## There are some methods which overlap between Data Preprocessing and Feature Engineering\/Feature Selection like Imputation, Dimensionality Reduction and etc.","0d63d1e9":"### Detecting Outliers","7233385f":"# Feature Grouping","b24d147f":"### Removing Outliers","ffdf71bb":"### target variable is SalePrice","ddd832af":"## finding out different dtypes and storing the columns in different list"}}