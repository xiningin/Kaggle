{"cell_type":{"5342de3e":"code","1dd756f1":"code","34541a69":"code","f1b04de4":"code","9af29234":"code","05fbe8d7":"code","18b6f9d6":"markdown","a869f8be":"markdown","14a70036":"markdown","bc279b57":"markdown","49261b79":"markdown"},"source":{"5342de3e":"##################################################\n# Imports\n##################################################\n\nimport numpy as np\nimport cv2\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n\n##################################################\n# Params\n##################################################\n\nDATA_BASE_FOLDER = '\/kaggle\/input\/image-classification-fashion-mnist'","1dd756f1":"##################################################\n# Load dataset\n##################################################\n\nx_train = np.load(os.path.join(DATA_BASE_FOLDER, 'train.npy'))\nx_valid = np.load(os.path.join(DATA_BASE_FOLDER, 'validation.npy'))\nx_test = np.load(os.path.join(DATA_BASE_FOLDER, 'test.npy'))\ny_train = pd.read_csv(os.path.join(DATA_BASE_FOLDER, 'train.csv'))['class'].values\ny_valid = pd.read_csv(os.path.join(DATA_BASE_FOLDER, 'validation.csv'))['class'].values\ny_labels = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']\n\n# Plot random images of different classes\nplt.figure(figsize=(25, 5))\nfor idx in range(20):\n    plt.subplot(1, 20, idx + 1)\n    img = x_train[idx].reshape(28, 28)\n    plt.title(f'{y_labels[y_train[idx]]}')\n    plt.imshow(img, cmap='gray')\n    plt.axis('off')\nplt.show()","34541a69":"##################################################\n# Process the data here, if needed\n##################################################\n\n'''\nAny manipulation of the dataset in order to feed the data to the algorithm in the correct \"format\".\n'''\n\n\n\n\n\n\n\n\n\n\n","f1b04de4":"##################################################\n# Implement you model here\n##################################################\n\n\n\n\n\n\n\n\n","9af29234":"##################################################\n# Evaluate the model here\n##################################################\n\n# Use this function to evaluate your model\ndef accuracy(y_pred, y_true):\n    '''\n    input y_pred: ndarray of shape (N,)\n    input y_true: ndarray of shape (N,)\n    '''\n    return (1.0 * (y_pred == y_true)).mean()\n\n# Report the accuracy in the train and validation sets.\n\n\n\n\n\n\n\n","05fbe8d7":"##################################################\n# Save your test prediction in y_test_pred\n##################################################\n\ny_test_pred = None\n\n# Create submission\nsubmission = pd.read_csv(os.path.join(DATA_BASE_FOLDER, 'sample_submission.csv'))\nif y_test_pred is not None:\n    submission['class'] = y_test_pred\nsubmission.to_csv('my_submission.csv', index=False)","18b6f9d6":"# Send the submission for the challenge","a869f8be":"# Welcome to the Fashion-MNIST Challenge!\n\nWebsite reference: https:\/\/github.com\/zalandoresearch\/fashion-mnist","14a70036":"# Model\n\nHere you have to implement a model (or more models, for finding the most accurate) for classification.\n\nYou can use the [`sklearn`](https:\/\/scikit-learn.org\/stable\/) (or optionally other more advanced frameworks such as [`pytorch`](https:\/\/pytorch.org\/) or [`tensorflow`](https:\/\/www.tensorflow.org\/)) package that contains a pool of models already implemented that perform classification. (SVMs, NNs, LR, kNN, ...)","bc279b57":"# Evaluation","49261b79":"# Dataset\n\nThe dataset contains 50k train + 10k validation images of 10 different categories ('T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot').\n\nEach image is a 28x28 grayscale, and for simplicity here is flattened into a 784 dimensional vector."}}