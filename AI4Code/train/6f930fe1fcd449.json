{"cell_type":{"1ce8ca5c":"code","55bf1ee8":"code","476955fe":"code","cd048a55":"code","0271684f":"code","06db5ae7":"code","04ec2c18":"code","5907aa66":"code","49d06173":"code","9d25301d":"code","614cc829":"code","3b2617b4":"code","5a0d9320":"code","ce56c90e":"code","e8d6600c":"code","e1f123aa":"code","36d6c809":"code","6a5592c5":"code","16678391":"code","9fc75173":"code","760805c2":"code","d87a37be":"markdown","80bc8e37":"markdown","3dafbe80":"markdown","347075a9":"markdown","5f41fc1b":"markdown","41f4a143":"markdown","3981697c":"markdown","03d59a7c":"markdown","b4f80b3a":"markdown","08162c6a":"markdown","1d007205":"markdown","2d9a9eb8":"markdown","e06f3ea1":"markdown"},"source":{"1ce8ca5c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport matplotlib.ticker as ticke\nimport seaborn as sns\nimport os\nfrom glob import glob\nfrom os import listdir\nfrom os.path import join, isfile, isdir\nfrom PIL import Image\nfrom tqdm import tqdm\n%matplotlib inline","55bf1ee8":"data = pd.read_csv('..\/input\/data\/Data_Entry_2017.csv')","476955fe":"data.head()","cd048a55":"data.describe()","0271684f":"data.isnull().sum()","06db5ae7":"unique_pt = data['Patient ID'].nunique()\nprint(f'Total number of unique patient in this dataset is {unique_pt}')","04ec2c18":"data = data[['Image Index','Finding Labels','Follow-up #','Patient ID','Patient Age','Patient Gender']]\n\n#create new columns for each decease\npathology_list = ['Cardiomegaly','Emphysema','Effusion','Hernia','Nodule','Pneumothorax','Atelectasis','Pleural_Thickening','Mass','Edema','Consolidation','Infiltration','Fibrosis','Pneumonia']\n\nfor pathology in pathology_list :\n    data[pathology] = data['Finding Labels'].apply(lambda x: 1 if pathology in x else 0)","5907aa66":"data.head()","49d06173":"patient_age_max = data['Patient Age'].max()\npatient_age_min = data['Patient Age'].min()\n\nprint(f'maximum patient age is {patient_age_max}')\nprint(f'minimum patient age is {patient_age_min}')","9d25301d":"patient_age = data['Patient Age'].value_counts()\nprint(patient_age)","614cc829":"patient_age_above_100 = data[data['Patient Age'] >100]['Patient Age']\npatient_age_less_10 = data[data['Patient Age'] <10]['Patient Age']\n\nprint(f'There are ({len(patient_age_above_100)}) patients with age more than 100 years')\nprint(f'There are ({len(patient_age_less_10)}) patients with age less than 10 years')","3b2617b4":"above_100_years =data.loc[patient_age_above_100.index]\nabove_100_years","5a0d9320":"less_10_years =data.loc[patient_age_less_10.index]\nless_10_years.head()","ce56c90e":"no_finding_less_10 = less_10_years.loc[(less_10_years[pathology_list] !=0).any(axis=1)]\nlen(no_finding_less_10)","e8d6600c":"plt.figure(figsize=(15,10))\ngs = gridspec.GridSpec(8,1)\nax1 = plt.subplot(gs[:8, :])\n# ax2 = plt.subplot(gs[7, :])\ndata1 = pd.melt(data,\n             id_vars=['Patient Gender'],\n             value_vars = list(pathology_list),\n             var_name = 'Category',\n             value_name = 'Count')\ndata1 = data1.loc[data1.Count>0]\ng=sns.countplot(y='Category',hue='Patient Gender',data=data1, ax=ax1, order = data1['Category'].value_counts().index)\nax1.set( ylabel=\"\",xlabel=\"\")\nax1.legend(fontsize=20)\nax1.set_title('X Ray partition (total number = 121120)',fontsize=18);\n","e1f123aa":"df_age =pd.read_csv('..\/input\/data\/Data_Entry_2017.csv')\ng = sns.factorplot(x=\"Patient Age\", col=\"Patient Gender\",data=df_age, kind=\"count\",size=10, aspect=0.8,palette=\"GnBu_d\");\ng.set_xticklabels(np.arange(0,100))\ng.set_xticklabels(step=10)\ng.fig.suptitle('Age distribution by sex',fontsize=22);\ng.fig.subplots_adjust(top=.9)","36d6c809":"f, axarr = plt.subplots(7, 2, sharex=True,figsize=(15, 20))\n\ni=0\nj=0\nx=np.arange(0,100,10)\nfor pathology in pathology_list :\n    g=sns.countplot(x='Age', hue=\"Patient Gender\",data=data[data['Finding Labels']==pathology], ax=axarr[i, j])\n    axarr[i, j].set_title(pathology)   \n    g.set_xlim(0,90)\n    g.set_xticks(x)\n    g.set_xticklabels(x)\n    j=(j+1)%2\n    if j==0:\n        i=(i+1)%7\nf.subplots_adjust(hspace=0.3)","6a5592c5":"f, (ax1,ax2) = plt.subplots( 2, figsize=(15, 10))\n\nfollow_up = data[data['Follow-up #']<15]\ng = sns.countplot(x='Follow-up #',data=follow_up,palette=\"GnBu_d\",ax=ax1);\n\nax1.set_title('Follow-up distribution');\ndata = df[df['Follow-up #']>14]\ng = sns.countplot(x='Follow-up #',data=follow_up,palette=\"GnBu_d\",ax=ax2);\nx=np.arange(15,100,10)\ng.set_ylim(15,450)\ng.set_xlim(15,100)\ng.set_xticks(x)\ng.set_xticklabels(x)\nf.subplots_adjust(top=1)","16678391":"#First display Top 10 multiple deseases\ndf=data.groupby('Finding Labels').count().sort_values()\n# df=df[['|' in index for index in data.index.values]]\ndata","9fc75173":"#combining the path of all the folders of images.\n\nmy_glob = glob('..\/input\/data\/images*\/images\/*.png')\nall_image_paths = {os.path.basename(x): x for x in my_glob}\ndata['full_path'] = data['Image Index'].map(all_image_paths.get)","760805c2":"data.drop('Finding Labels',axis =1 ,inplace=True)\ndata.head()","d87a37be":"### Display patient number by Follow-up ","80bc8e37":"# 2. DATA VISUALIZATION\n\n### number of each diseases by patient gender\n","3dafbe80":"### Try to find links between pathologies.","347075a9":"### Now check age distribution by sex:\n","5f41fc1b":"#### It's obvious that there are many outliers in age columns there are 16 records with ages more than 100 years and about 1400 record with ages less than 10 years they may children born with this lung diseases but let's investigate them deeper may they have a X-RAY in dataset but labeled as 'NO FINDINGS' \n\n* HINT no findings in data set mean columns in pathology_list all have 0\n","41f4a143":"### Display pathologies distribution by age&sex.","3981697c":"### There are more than 500 record for patient with age less than 10 years and hasn't any psotivie '1' for any type of diseases ","03d59a7c":"<font size= 3.5>\n    \n    So lets drop Finding labels columns we don't need it anymore\n    \n<\/font>","b4f80b3a":"# 1. NIH Chest X-ray Dataset\n\n## National Institutes of Health Chest X-Ray Dataset\nChest X-ray exams are one of the most frequent and cost-effective medical imaging examinations available. However, clinical diagnosis of a chest X-ray can be challenging and sometimes more difficult than diagnosis via chest CT imaging. The lack of large publicly available datasets with annotations means it is still very difficult, if not impossible, to achieve clinically relevant computer-aided detection and diagnosis (CAD) in real world medical sites with chest X-rays. One major hurdle in creating large X-ray image datasets is the lack resources for labeling so many images. Prior to the release of this dataset, (Openi)[https:\/\/openi.nlm.nih.gov\/] was the largest publicly available source of chest X-ray images with 4,143 images available.\n\nThis NIH Chest X-ray Dataset is comprised of 112,120 X-ray images with disease labels from 30,805 unique patients. **To create these labels, the authors used Natural Language Processing to text-mine disease classifications from the associated radiological reports.** **The labels are expected to be >90% accurate and suitable for weakly-supervised learning.** The original radiology reports are not publicly available but you can find more details on the labeling process in this Open Access paper: \"ChestX-ray8: Hospital-scale Chest X-ray Database and Benchmarks on Weakly-Supervised Classification and Localization of Common Thorax Diseases.\" [(Wang et al)](https:\/\/www.nih.gov\/news-events\/news-releases\/nih-clinical-center-provides-one-largest-publicly-available-chest-x-ray-datasets-scientific-community)\n.\n\n\n## 1.2 Data limitations:\nThe image labels are NLP extracted so there could be some erroneous labels but the NLP labeling accuracy is estimated to be >90%. Very limited numbers of disease region bounding boxes (See BBoxlist2017.csv) Chest x-ray radiology reports are not anticipated to be publicly shared. Parties who use this public dataset are encouraged to share their \u201cupdated\u201d image labels and\/or new bounding boxes in their own studied later, maybe through manual annotation\n\n\n\n### File contents\nImage format: 112,120 total images with size 1024 x 1024\n* images_001.zip: Contains 4999 images\n* images_002.zip: Contains 10,000 images\n* images_003.zip: Contains 10,000 images\n* images_004.zip: Contains 10,000 images\n* images_005.zip: Contains 10,000 images\n* images_006.zip: Contains 10,000 images\n* images_007.zip: Contains 10,000 images\n* images_008.zip: Contains 10,000 images\n* images_009.zip: Contains 10,000 images\n* images_010.zip: Contains 10,000 images\n* images_011.zip: Contains 10,000 images\n* images_012.zip: Contains 7,121 images\nREADME_ChestXray.pdf: Original README file\n\n### BBoxlist2017.csv: Bounding box coordinates. Note: Start at x,y, extend horizontally w pixels, and vertically h pixels\nImage Index: File name\nFinding Label: Disease type (Class label)\nBbox x\nBbox y\nBbox w\nBbox h\n\n### Dataentry2017.csv: Class labels and patient data for the entire dataset\nImage Index: File name\nFinding Labels: Disease type (Class label)\nFollow-up #\nPatient ID\nPatient Age\nPatient Gender\nView Position: X-ray orientation\nOriginalImageWidth\nOriginalImageHeight\nOriginalImagePixelSpacing_x\nOriginalImagePixelSpacing_y\n\n### 1.3 Class descriptions\nThere are 15 classes (14 diseases, and one for \"No findings\"). Images can be classified as \"No findings\" or one or more disease classes:\n\n* Atelectasis\n* Consolidation\n* Infiltration\n* Pneumothorax\n* Edema\n* Emphysema\n* Fibrosis\n* Effusion\n* Pneumonia\n* Pleural_thickening\n* Cardiomegaly\n* Nodule Mass\n* Hernia","08162c6a":"### DROP UNUSED COLUMNS AND EXPAND FINDING LABELS COLUMN","1d007205":"**FINDINGS**\n\n1. Here we have **112120** records for different patient so let's find how many unique patient we have in this dataset and the distribution of them\n\n2. There is no null values in our dataframe ","2d9a9eb8":"# 1. DATA analysis\n\n## 1.1 DATA LOADING","e06f3ea1":"### Let's explore patient age column to figure out if there is any outliers "}}