{"cell_type":{"44100ffe":"code","11269879":"code","9012fa26":"code","69ace08c":"code","39aaf016":"code","64ce99ff":"code","88a9eaa8":"code","25bf88a8":"code","84f3ae6f":"code","2695eb45":"code","fee66e3e":"code","97ae5a42":"code","c80ef0ea":"code","fd2f2cae":"code","f95daed3":"code","a2fd76db":"code","0a942c8b":"code","4a267b69":"code","49610b81":"code","3f5bd4e2":"code","9b6d91ae":"code","ae1633e3":"markdown","f296e9d9":"markdown"},"source":{"44100ffe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","11269879":"import matplotlib.pyplot as plt\nimport seaborn as sns","9012fa26":"data = pd.read_csv('..\/input\/battles.csv')\ndata_cd = pd.read_csv('..\/input\/character-deaths.csv')\ndata_cp = pd.read_csv('..\/input\/character-predictions.csv') ","69ace08c":"data.info()","39aaf016":"data.corr()","64ce99ff":"f,ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data.corr(), annot = True,ax=ax)\nplt.show()","88a9eaa8":"data.head()","25bf88a8":"data.columns","84f3ae6f":"data.major_death.plot(color = \"red\", label = \"major_death\",grid = True, linestyle = ':')\ndata.major_capture.plot(color = \"green\", label = \"major_capture\",grid = True, linestyle = '-.')\nplt.legend()\nplt.xlabel(\"major_death\")\nplt.ylabel(\"major_capture\")\nplt.title(\"death_capture_comparison\")\nplt.show()","2695eb45":"data.plot(kind ='scatter', x='major_death', y='major_capture', alpha = 0.5, color='red')\nplt.xlabel('major_death')\nplt.ylabel('major_capture')\nplt.title('death_capture_comparison')\nplt.show()","fee66e3e":"data.plot(kind ='scatter', x='attacker_size', y='defender_size', alpha = 0.5, color='red')\nplt.xlabel('attacker_size')\nplt.ylabel('defender_size')\nplt.title('attacker_and_defender_size_comparison')\nplt.show()","97ae5a42":"data.major_death.plot(kind = \"hist\", color =\"r\", bins=50, figsize=(10,10), grid = True)\nplt.show()","c80ef0ea":"data_cd.columns","fd2f2cae":"data_cd.columns = [each.split()[0]+\"_\"+each.split()[1] if(len(each.split())>1) else each for each in data_cd.columns]","f95daed3":"data_cd.columns","a2fd76db":"data_cd.Death_Chapter.plot(kind = \"hist\", color =\"r\", bins=30, figsize=(10,10), grid = True)\nplt.title('Death_Chapter')\nplt.xlabel('Death_Chapter')\nplt.ylabel('how many death')\nplt.show()","0a942c8b":"type(data)\nseries = data[\"major_death\"]\nprint(type(series))\ndata_frame = data[[\"major_death\"]]\nprint(type(data_frame))","4a267b69":"data.head(15)","49610b81":"#i want to learn wich one is the bigest war and i use two filter\nfilter1 = data['attacker_size'] > 10000\nfilter2 = data['defender_size'] > 10000\ndata[filter1 & filter2]","3f5bd4e2":"print(data['attacker_outcome'])","9b6d91ae":"data[(data['attacker_outcome'] == \"loss\")]","ae1633e3":"**i am wondering what is the comparison between death rate and capture rate**","f296e9d9":"**but as i saw no more correlation between death and capture rates **"}}