{"cell_type":{"3a582222":"code","e100c6ae":"code","f1ddde46":"code","cf0edc6f":"code","60599aaf":"code","3e56a229":"code","55912e34":"code","1d78b032":"code","69113c30":"code","7b6ea66d":"code","cda14760":"code","752f3a88":"code","ee1d9e8b":"code","6f231c11":"code","3bc82bf3":"code","e64e4f86":"code","1b57d592":"code","d70e1fb2":"code","1b65ade7":"code","be2b235d":"code","11ad7c43":"code","9469e75e":"code","4b699f79":"code","10d1c0a1":"code","97c3cd32":"code","0ae4592d":"code","f9dd06b4":"code","a8ca4187":"code","2026e9fc":"code","9a407973":"code","af2a32ab":"code","fc6b81fb":"code","31bf9020":"code","9ef47126":"code","54b4a98b":"code","775ca077":"code","2efe7bf0":"code","4105b5e4":"code","9092a8ad":"code","985ac8a0":"code","1d7ce566":"code","2801c6d8":"code","8c1c4436":"code","c4cc945b":"code","5f27337b":"code","8c4b0248":"code","b7fea6df":"code","44760ad9":"code","dcc90bea":"code","094f80e1":"code","e45a1f16":"code","bb2420e3":"code","e4f05076":"code","7a9ccc47":"code","68ca5a3b":"code","50bf09d9":"code","e69143a2":"code","569a5015":"code","5276e1ee":"code","68a8d8f7":"code","400e629b":"code","bc996634":"code","41ccd096":"code","03f79c3f":"code","3784336e":"code","a4f437a4":"code","3cf66efe":"code","dda3b18f":"code","74ebc31b":"code","aedbed17":"markdown","ce37acf0":"markdown","fcf362c6":"markdown","5e3788ca":"markdown","faecc03b":"markdown","f55e01d3":"markdown","8abc8687":"markdown","4ec14924":"markdown"},"source":{"3a582222":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e100c6ae":"path = '\/kaggle\/input\/competitive-data-science-predict-future-sales\/'","f1ddde46":"sales_train = pd.read_csv(path+'sales_train.csv')\nsales_train.head(5)","cf0edc6f":"item_categories = pd.read_csv(path+'item_categories.csv')\nitem_categories.head()","60599aaf":"shops = pd.read_csv(path+'shops.csv')\nshops.head()","3e56a229":"items = pd.read_csv(path+'items.csv')\nitems.head()","55912e34":"test = pd.read_csv(path+'test.csv')\ntest.head()","1d78b032":"test['date_block_num'] = 34","69113c30":"test = test.merge(items,how='left',on='item_id')","7b6ea66d":"test.drop(['item_name'], axis=1,inplace= True)","cda14760":"test.head()","752f3a88":"sales_train = sales_train.merge(shops,how='left',on='shop_id')","ee1d9e8b":"sales_train = sales_train.merge(items,how='left',on='item_id')","6f231c11":"sales_train = sales_train.merge(item_categories,how='left',on='item_category_id')","3bc82bf3":"sales_train.head()","e64e4f86":"sales_train['total_price_per_day'] = sales_train.item_cnt_day * sales_train.item_price","1b57d592":"sales_train.head()","d70e1fb2":"sales_train[['day','month','year']] = sales_train.date.str.split(\".\",expand=True)","1b65ade7":"sales_train.head()","be2b235d":"sales_train_shop_item = sales_train.groupby(by=['date_block_num','shop_id','item_id','item_category_id'])[['item_cnt_day','total_price_per_day']].sum()","11ad7c43":"sales_train_shop_item = sales_train_shop_item.reset_index()","9469e75e":"sales_train_shop_item.rename(columns={\"item_cnt_day\":\"item_cnt_month\"}, inplace=True)\nsales_train_shop_item.rename(columns={\"total_price_per_day\":\"total_price_per_month\"}, inplace=True)","4b699f79":"sales_train_shop_item.head()","10d1c0a1":"sales_min = sales_train.groupby(by=['date_block_num','shop_id','item_id','item_category_id'])[['item_cnt_day','total_price_per_day']].min()","97c3cd32":"sales_min = sales_min.reset_index()","0ae4592d":"sales_min.head()","f9dd06b4":"sales_train_shop_item['min_item_cnt_month'] = sales_min['item_cnt_day']\nsales_train_shop_item['min_price_per_month'] = sales_min['total_price_per_day']","a8ca4187":"sales_train_shop_item.head()","2026e9fc":"sales_max = sales_train.groupby(by=['date_block_num','shop_id','item_id','item_category_id'])[['item_cnt_day','total_price_per_day']].max()","9a407973":"sales_max = sales_max.reset_index()","af2a32ab":"sales_train_shop_item['max_item_cnt_month'] = sales_max['item_cnt_day']\nsales_train_shop_item['max_price_per_month'] = sales_max['total_price_per_day']","fc6b81fb":"sales_train_shop_item.head()","31bf9020":"sales_avg = sales_train.groupby(by=['date_block_num','shop_id','item_id','item_category_id'])[['item_cnt_day','total_price_per_day']].mean()","9ef47126":"sales_avg = sales_avg.reset_index()","54b4a98b":"sales_train_shop_item['avg_item_cnt_month'] = sales_avg['item_cnt_day']\nsales_train_shop_item['avg_price_per_month'] = sales_avg['total_price_per_day']","775ca077":"test.head()","2efe7bf0":"sales_train_shop_item.head()","4105b5e4":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures","9092a8ad":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\"]]\ny = sales_train_shop_item[\"total_price_per_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[['date_block_num','shop_id','item_id']])\ny_test = reg.predict(pred)\nprint(y_test)","985ac8a0":"test['total_price_per_month'] = y_test","1d7ce566":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\"]]\ny = sales_train_shop_item[\"min_item_cnt_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[['date_block_num','shop_id','item_id','total_price_per_month']])\ny_test = reg.predict(pred)\nprint(y_test)","2801c6d8":"test['min_item_cnt_month'] = y_test","8c1c4436":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\",\"min_item_cnt_month\"]]\ny = sales_train_shop_item[\"min_price_per_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[['date_block_num','shop_id','item_id','total_price_per_month',\"min_item_cnt_month\"]])\ny_test = reg.predict(pred)\nprint(y_test)","c4cc945b":"test['min_price_per_month'] = y_test","5f27337b":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\",\"min_price_per_month\"]]\ny = sales_train_shop_item[\"max_item_cnt_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[['date_block_num','shop_id','item_id','total_price_per_month','min_price_per_month']])\ny_test = reg.predict(pred)\nprint(y_test)","8c4b0248":"test['max_item_cnt_month'] = y_test","b7fea6df":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\",\"max_item_cnt_month\"]]\ny = sales_train_shop_item[\"max_price_per_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[['date_block_num','shop_id','item_id','total_price_per_month',\"max_item_cnt_month\"]])\ny_test = reg.predict(pred)\nprint(y_test)","44760ad9":"test['max_price_per_month'] = y_test","dcc90bea":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\",\"max_item_cnt_month\",\"min_item_cnt_month\"]]\ny = sales_train_shop_item[\"avg_item_cnt_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[['date_block_num','shop_id','item_id','total_price_per_month','max_item_cnt_month','min_item_cnt_month']])\ny_test = reg.predict(pred)\nprint(y_test)","094f80e1":"test['avg_item_cnt_month'] = y_test","e45a1f16":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\",\"avg_item_cnt_month\"]]\ny = sales_train_shop_item[\"avg_price_per_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[['date_block_num','shop_id','item_id','total_price_per_month',\"avg_item_cnt_month\"]])\ny_test = reg.predict(pred)\nprint(y_test)","bb2420e3":"test['avg_price_per_month'] = y_test","e4f05076":"test.head()","7a9ccc47":"X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\",\"min_item_cnt_month\",\"min_price_per_month\",\"max_item_cnt_month\",\"max_price_per_month\",\"avg_item_cnt_month\",\"avg_price_per_month\"]]\ny = sales_train_shop_item[\"item_cnt_month\"]\npoly = PolynomialFeatures(degree=3)\nX_ = poly.fit_transform(X)\nreg = LinearRegression().fit(X_, y)\npred = poly.fit_transform(test[[\"date_block_num\", \"shop_id\", \"item_id\",\"total_price_per_month\",\"min_item_cnt_month\",\"min_price_per_month\",\"max_item_cnt_month\",\"max_price_per_month\",\"avg_item_cnt_month\",\"avg_price_per_month\"]])\ny_test = reg.predict(pred)\nprint(y_test)","68ca5a3b":"submit = pd.DataFrame({'ID':np.arange(len(y_test)),'item_cnt_month':np.clip(y_test, a_min = 0, a_max = 20)},columns=['ID','item_cnt_month'])","50bf09d9":"submit.head()","e69143a2":"submit.to_csv('submission.csv',index = False)","569a5015":"# sample_submission = pd.read_csv(path+'sample_submission.csv')\n# sample_submission.head()","5276e1ee":"# from sklearn.linear_model import LinearRegression\n# from sklearn.preprocessing import PolynomialFeatures\n# from xgboost import XGBRegressor","68a8d8f7":"# sales_train_shop_item.head()","400e629b":"# X = sales_train_shop_item[[\"date_block_num\", \"shop_id\", \"item_id\"]]\n# y = sales_train_shop_item[\"item_cnt_month\"]\n# # poly = PolynomialFeatures(degree=3)\n# # X_ = poly.fit_transform(X)\n# xgb_model = XGBRegressor(max_depth=8, \n#                          n_estimators=500, \n#                          min_child_weight=1000,  \n#                          colsample_bytree=0.7, \n#                          subsample=0.7, \n#                          eta=0.3, \n#                          seed=0)\n# xgb_model.fit(X, y, eval_metric=\"rmse\")","bc996634":"# reg = LinearRegression().fit(X_, y)","41ccd096":"# test.head(5)","03f79c3f":"# y_test = xgb_model.predict(test[['date_block_num','shop_id','item_id']])\n# # pred = poly.fit_transform(test[['date_block_num','shop_id','item_id']])","3784336e":"# y_test = reg.predict(pred)","a4f437a4":"# y_test","3cf66efe":"# submit = pd.DataFrame({'ID':np.arange(len(y_test)),'item_cnt_month':np.clip(y_test, a_min = 0, a_max = 20)},columns=['ID','item_cnt_month'])","dda3b18f":"# submit.describe()","74ebc31b":"# submit.to_csv('submission.csv',index = False)","aedbed17":"**For predicting avg_price_per_month**","ce37acf0":"**For predicting min_item_count_month**","fcf362c6":"**For predicting min_price_per_month**","5e3788ca":"**For predicting total price**","faecc03b":"**For predicting max_price_per_month**","f55e01d3":"**For predicting max_item_cnt_month**","8abc8687":"**For predicting avg_item_cnt_month**","4ec14924":"**Predicting the item_cnt_month**"}}