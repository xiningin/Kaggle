{"cell_type":{"2649e46b":"code","53fa6a56":"code","ee466fa0":"code","e9d66baf":"code","28f1ed0d":"code","efb182c0":"code","0e1a2b11":"code","de55c216":"code","392d4067":"code","de427132":"code","5b74853e":"code","13c239ff":"code","3b9447b3":"code","d5cf911f":"code","7e521603":"code","d714b5e8":"code","726c952f":"code","2805d03e":"code","96cf67cb":"code","e5150efd":"code","6c2c94dd":"code","7170613b":"code","e127c44d":"code","ce21a802":"code","6c0967a6":"code","770dcc9d":"code","f32405c8":"code","d5c2b4b8":"code","012a4c27":"code","6609f69f":"code","d5f2ec1f":"code","e2c7057c":"code","4ebb669d":"code","47fbc6c8":"code","b4579f92":"code","78ad4f71":"code","4767a4b9":"code","95184b2a":"code","40ba6ff4":"code","56bf1542":"code","99fc0015":"code","24ee0217":"code","1e895d64":"code","d651c84c":"code","815bed19":"code","a01915a5":"code","2b219174":"code","c082cfdf":"code","9e5d1b3a":"code","59e040ec":"code","d946c47d":"code","15acf2ff":"code","eca88fb5":"code","3ae49a0f":"code","d21783d7":"code","ccc59e1e":"code","7cdd5dd4":"code","732b537b":"code","e2e8a959":"code","a844469d":"code","9d4d953c":"code","3120c11a":"code","ba2e1fd8":"code","6d898580":"code","af9a4ad6":"code","07e9f233":"code","f4798f69":"code","fe1d4b24":"code","9a619a4f":"code","10adfc33":"code","ea25386d":"code","aedd1f80":"code","e081ce18":"code","f428229c":"code","f8e0d00a":"code","0e452375":"code","10b7f869":"code","57881344":"code","53f14154":"code","58c04eba":"code","bb3e6cfa":"code","00a0cdc3":"code","c6fecf44":"code","db71aec5":"code","0b2caf83":"code","911162ff":"code","b1728f2d":"code","9503d9ff":"code","e405a8d8":"code","9d3885eb":"code","7bc79922":"code","3aff5193":"code","38b06cfe":"code","491171cf":"code","1adce770":"code","ae948308":"code","ae44253e":"code","bec65797":"code","44eea08d":"code","9305ac71":"code","5847bf4a":"code","a92605fc":"code","29b3a1ba":"code","598b056a":"markdown","3ded7765":"markdown","e59e929b":"markdown","33422037":"markdown","9ce5a4c5":"markdown","065f8b63":"markdown","8aa66443":"markdown","87d21b7e":"markdown","1ac53fbd":"markdown","7a078d5f":"markdown","d9d78af6":"markdown","bca0e037":"markdown","f5e66329":"markdown","5bb509d4":"markdown","d41393ee":"markdown","f96e2ed6":"markdown","74129ac8":"markdown","926bea26":"markdown","30874591":"markdown","995fae81":"markdown"},"source":{"2649e46b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno #data set\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 NULL \uac12\uc744 \ud45c\ud604\ud574\uc90c\nimport warnings #ignore warning\n%matplotlib inline\n\nplt.style.use('seaborn') #\ucc28\ud2b8 \uc2a4\ud0c0\uc77c\uc744 seaborn \uc73c\ub85c \uc0ac\uc6a9\nsns.set(font_scale=2.5) #\ucc28\ud2b8 \uae00\uc790\ub97c 2.5\ub85c \uace0\uc815\nwarnings.filterwarnings('ignore') # warning \ubb34\uc2dc\n","53fa6a56":"df_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')","ee466fa0":"df_train.head(10) #default = 5, data set\uc744 \uc6d0\ud558\ub294 \uac1c\uc218\ubcc4\ub85c \ub098\ud0c0\ub0c4","e9d66baf":"df_train.describe() #data set\uc5d0 \ud3c9\uade0\uac12\uc744 \ub098\ud0c0\ub0b4\uc90c","28f1ed0d":"df_train.columns","efb182c0":"for col in df_train.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100*(df_train[col].isnull().sum())\/df_train[col].shape[0])\n    print(msg)\n'''\n\uac01 col\uc5d0 NaN data\uc758 Percent\ub97c \ubcf4\uae30\uc704\ud55c \uc791\uc5c5\n\uc989 \ucd1d 891\uac1c\uc758 data set\uc5d0\uc11c \uac01 columns\ub4e4\uc774 \ucc28\uc9c0\ud558\ub294 NaN \ube44\uc728\uc744 \uacc4\uc0b0\n'''","0e1a2b11":"for col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100*(df_test[col].isnull().sum())\/df_test[col].shape[0])\n    print(msg)","de55c216":"msno.matrix(df=df_train.iloc[:,:],figsize=(8,8),color=(0.5,0.5,0.5))\n'''\nmsno\ub294 \uc544\ub798 \uadf8\ub9bc\uacfc \uac19\uc740 matrix\ub97c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.\n\ube48\uce78\uc774 \uc758\ubbf8\ud558\ub294\uac83\uc740 NaN\uac12\uc774\ub2e4.\n'''","392d4067":"msno.bar(df=df_train.iloc[:,:],figsize=(8,8),color=(0.5,0.5,0.5))\n#matrix \ub9d0\uace0 bar\ub85c NaN \uac12\uc744 \ud45c\ud604","de427132":"f, ax = plt.subplots(1,2,figsize=(18, 8))\n#plt.subplots(low,col,figsize=(low,col)) -> 1\ud589\uc5d0 2\uac1c\uc758 \uadf8\ub9bc\uc744 \uadf8\ub9ac\ub294\uac83\uc744 \uc758\ubbf8\ud55c\ub2e4, figsize\ub294 \uadf8\ub9bc\uc758 \ud06c\uae30\ub97c \uc870\uc808\ud55c\ub2e4.\n\ndf_train['Survived'].value_counts().plot.pie(explode=[0,0.1], autopct= '%1.1f%%',ax=ax[0],shadow=True)\n# df_train['Survived'].value_counts() = \uc0ac\ub9dd,\uc0dd\uc874\uc744 0,1\uac12\uc73c\ub85c count\ud574\uc900\ub2e4. \uc774\uac83\uc758 data type\uc740 series\uc774\ubbc0\ub85c plot\uc744 \uac16\ub294\ub2e4. \uc989 \uc5f0\uc18d\uc801\uc778 \uac12\uc774\ubbc0\ub85c \ud45c\ud604 \ud560 \uc218 \uc788\ub2e4.\n# explode\ub294 pie chart \uac04\uaca9\uc744 \uc8fc\ub294\uac83, autopct\ub294 pie chart\uc5d0 percent\ud45c\uc2dc, ax\ub294 \uc5f4\uc744 \uc758\ubbf8\ud558\ubbc0\ub85c 2\uac1c\uac00 \uc874\uc7ac\ud558\uace0 \uccab\ubc88\uc9f8 \uc5f4\uc5d0 pie chart\ub97c \uadf8\ub824\uc8fc\ub294\uac83\uc774\ub2e4.\nax[0].set_title('Pie plot - Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived',data=df_train, ax=ax[1])\n#countplot('col name', data = data set, ax=position)\nax[1].set_title('Count plot - Survived')\nplt.show()","5b74853e":"#Pclass \uc5d0 \ub530\ub978 \uc0dd\uc874\ub960\uc744 \uc54c\uc544\ubcf4\uc790\ndf_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).count()","13c239ff":"df_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).sum()","3b9447b3":"df_train[['Pclass','Survived']]\n#\uc6d0\ud558\ub294 col\uc758 \uac12\uc744 \ud655\uc778\ud558\uace0\uc2f6\uc744\ub54c \uc758 \ubb38\ubc95","d5cf911f":"pd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True).style.background_gradient(cmap='summer_r')\n#crosstab\uc744 \uc774\uc6a9\ud558\uc5ec Survived\uc758 \uac12\uc5d0 \ub530\ub978 Pclass\ub97c \ud45c\ud604","7e521603":"df_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending = False).plot()\n# Survived\uac12\uc5d0 \ub530\ub978 Pclass\uc758 \ud3c9\uade0\uac12\uc744 sort_values\ub85c \uc815\ub82c, ascending = False(\ub0b4\ub9bc\ucc28\uc21c),True(\uc624\ub984\ucc28\uc21c), \ucf54\ub4dc\ud615\uc2dd\uc774 pandas DataFrame\uc774\uae30 \ub54c\ubb38\uc5d0 plot \uc744 \uac00\uc9c0\uace0\uc788\ub2e4 -> bar\ub85c\ub3c4 \ud45c\ud604\uac00\ub2a5","d714b5e8":"y_position = 1.02\nf, ax = plt.subplots(1, 2, figsize=(18,8))\ndf_train['Pclass'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'], ax=ax[0])\nax[0].set_title('Number of passengers By Pclass', y=y_position)\nax[0].set_ylabel('Count')\nsns.countplot('Pclass',hue = 'Survived', data=df_train, ax=ax[1])\n# hue\ub97c \uc774\uc6a9\ud558\uc5ec Survived\ub97c \uc0c9\uae54\ub85c \uad6c\ubd84\ud558\uc5ec \ubcf4\uc5ec\uc900\ub2e4\nax[1].set_title('Pclass: Survived vs Dead', y=y_position)\nplt.show()","726c952f":"f, ax = plt.subplots(1, 2, figsize=(18,8))\ndf_train[['Sex','Survived']].groupby(['Sex'],as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex',hue='Survived', data =df_train, ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()","2805d03e":"df_train[['Sex','Survived']].groupby(['Sex'],as_index=False).mean().sort_values(by = 'Survived', ascending = False)","96cf67cb":"pd.crosstab(df_train['Sex'], df_train['Survived'],margins = True ).style.background_gradient(cmap='summer_r')","e5150efd":"sns.factorplot('Pclass','Survived', hue='Sex', data=df_train, size=5 , aspect=2)\n#\ucd95\uc744 \uc815\ud574\uc8fc\uc9c0 \uc54a\uace0 \uadf8\ub798\ud504\ub97c \ub098\ud0c0\ub0b4\ub294 \ubc29\ubc95","6c2c94dd":"sns.factorplot(x='Sex',y='Survived',col='Pclass',data=df_train, saturation=5, size=9, aspect=1)\n#\ucd95\uc744 \uc815\ud574\uc8fc\uace0 \uadf8\ub798\ud504\ub97c \ub098\ud0c0\ub0b4\ub294 \ubc29\ubc95, hue \ub300\uc2e0 col\uc744 \uc0ac\uc6a9\ud588\uc744\ub54c","7170613b":"sns.factorplot(x='Sex',y='Survived',hue='Pclass',data=df_train, saturation=5, size=9, aspect=1)\n#hue \ub97c \uc0ac\uc6a9\ud588\uc744\ub54c","e127c44d":"print('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d: {:.1f} years'.format(df_train['Age'].max()))\nprint('\uc81c\uc77c \ub098\uc774 \uc801\uc740 \ud0d1\uc2b9\uac1d: {:.1f} years'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774: {:.1f} years'.format(df_train['Age'].mean()))\n","ce21a802":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\nsns.kdeplot(df_train[df_train['Survived']==1]['Age'], ax=ax)\nplt.title('Survived')\nsns.kdeplot(df_train[df_train['Survived']==0]['Age'], ax=ax)\nplt.legend(['Survived=1','Survived=0'])\nplt.show()\n\n\n'''\nkdeplot\ub294 \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \uc774\uc5b4\uc11c \uadf8\ub824\uc8fc\ub294\uac83 \ndf_train[df_train['Survived']==1\ndf_train\uc5d0 Survived\uc911 1\uac12\uc778\uac83\ub9cc \ucd94\ub824\ub0c4\ndf_train[df_train['Survived']==0\ndf_train\uc5d0 Survived\uc911 0\uac12\uc778\uac83\ub9cc \ucd94\ub824\ub0c4\n'''","6c0967a6":"plt.figure(figsize=(8, 6))\ndf_train['Age'][df_train['Pclass']==1].plot(kind='kde')\ndf_train['Age'][df_train['Pclass']==2].plot(kind='kde')\ndf_train['Age'][df_train['Pclass']==3].plot(kind='kde')\nplt.legend(['1st Pclass','2nd Pclass','3nd Pclass'])\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')","770dcc9d":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\nsns.kdeplot(df_train[(df_train['Survived']==0)& (df_train['Pclass']==1)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived']==1)& (df_train['Pclass']==1)]['Age'], ax=ax)\nplt.title('1st Class')\nplt.legend(['Survived=1','Survived=0'])","f32405c8":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\nsns.kdeplot(df_train[(df_train['Survived']==0)& (df_train['Pclass']==2)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived']==1)& (df_train['Pclass']==2)]['Age'], ax=ax)\nplt.title('2nd Class')\nplt.legend(['Survived=1','Survived=0'])","d5c2b4b8":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\nsns.kdeplot(df_train[(df_train['Survived']==0)& (df_train['Pclass']==3)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived']==1)& (df_train['Pclass']==3)]['Age'], ax=ax)\nplt.title('3nd Class')\nplt.legend(['Survived=1','Survived=0'])","012a4c27":"change_age_survival_ratio = []\n\nfor i in range(1,80):\n    change_age_survival_ratio.append(df_train[df_train['Age']<i]['Survived'].sum()\/len(df_train[df_train['Age']<i]['Survived']))\n    \nplt.figure(figsize=(7,7))\nplt.plot(change_age_survival_ratio)\nplt.title('Suvival rate change depending on range of Age', y=1)\nplt.ylabel('Survival rate')\nplt.xlabel('Range of Age(0~x)')\nplt.show()","6609f69f":"i=10\ndf_train[df_train['Age']<i]['Survived'].sum()\/len(df_train[df_train['Age']<i]['Survived'])","d5f2ec1f":"df_train[df_train['Age']<10]['Survived'].sum()","e2c7057c":"len(df_train[df_train['Age']<10]['Survived'])","4ebb669d":"f, ax = plt.subplots(1,2,figsize=(18,8))\nsns.violinplot('Pclass','Age',hue='Survived',data=df_train,scale='count',split=True,ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0,110,20))\n\nsns.violinplot('Sex','Age',hue='Survived',data=df_train, scale='count',split=True,ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0,110,20))\nplt.show()","47fbc6c8":"f, ax = plt.subplots(1,1,figsize=(7,7))\ndf_train[['Embarked','Survived']].groupby(['Embarked'],as_index=True).mean().sort_values(by='Survived',ascending=False).plot.bar(ax=ax)","b4579f92":"df_train[['Embarked','Survived']].groupby(['Embarked'],as_index=True).mean().sort_values(by='Embarked')","78ad4f71":"f, ax = plt.subplots(2, 2, figsize=(20,15))\nsns.countplot('Embarked', data=df_train, ax=ax[0,0])\nax[0,0].set_title('(1) No. Of Passengers Boared')\n\nsns.countplot('Embarked',hue='Sex',data=df_train,ax=ax[0,1])\nax[0,1].set_title('(2) Male-Female split for embarked')\n\nsns.countplot('Embarked',hue='Survived',data=df_train,ax=ax[1,0])\nax[1,0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked',hue='Pclass',data=df_train,ax=ax[1,1])\nax[1,1].set_title('(4) Embarked vs Pclass')\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\n# \uadf8\ub798\ud504 \uac04\uaca9\uc744 \uc870\uc808\ud568\nplt.show()\n","4767a4b9":"df_train['FamilySize'] = df_train['SibSp']+df_train['Parch']+1\ndf_test['FamilySize'] = df_test['SibSp']+df_test['Parch']+1\n#\uac00\uc871 \ud504\ub808\uc784\uc744 \uc0dd\uc131\ud574\uc900\ub2e4. { SibSP(\ud615\uc81c,\uc790\ub9e4,\ubc30\uc6b0\uc790) + Parch(\ubd80\ubaa8,\uc790\uc2dd) }+\uc790\uae30\uc790\uc2e0(1)","95184b2a":"df_test.loc[df_test.Fare.isnull(), 'Fare'] = df_test['Fare'].mean()","40ba6ff4":"f, ax = plt.subplots(1,3,figsize=(40,10))\nsns.countplot('FamilySize', data=df_train,ax=ax[0])\nax[0].set_title('(1)No. Of Passenger Boarded',y=1.02)\n\nsns.countplot('FamilySize',hue='Survived', data=df_train,ax=ax[1])\nax[1].set_title('(2) Survived countplot depending on FamilySize', y=1.02)\n\ndf_train[['FamilySize','Survived']].groupby(['FamilySize'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived countplot depending on FamilySize', y=1.02)\n\nplt.subplots_adjust(wspace=0.2,hspace=0.5)\nplt.show()","56bf1542":"fig, ax = plt.subplots(1,1,figsize=(8,8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness:{:.2f}'.format(df_train['Fare'].skew()),ax=ax)\ng = g.legend(loc='best')\n\n'''\nSkewness = \"\uc65c\ub3c4\" \ub77c\ub294\ub73b\uc73c\ub85c \ud1b5\uacc4\ud559\uc5d0\uc11c \uc790\ub8cc\uc758 \ubd84\ud3ec\ubaa8\uc591\uc774 \ud3c9\uade0\uc744 \uc911\uc2ec\uc73c\ub85c\ubd80\ud130 \ud55c \ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc838\uc788\ub294 \uacbd\ud5a5\uc744 \ub098\ud0c0\ub0b4\ub294 \ucc99\ub3c4 \uc774\ub2e4.\nSkewness\uac12\uc740 \uc88c\uce21\uc73c\ub85c \uc3e0\ub9ac\uba74 \uc591\uc218, \uc6b0\uce21\uc73c\ub85c \uc3e0\ub9ac\uba74 \uc74c\uc218\ub85c \ub098\ud0c0\ub09c\ub2e4. \ndistplot series\uac12\uc744 \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc73c\ub85c \ub098\ud0c0\ub0b4\uc90c\n\n\uc544\ub798 \ubd84\ud3ec\ub3c4\ub85c \ud559\uc2b5\uc744 \ud558\uba74 \uc81c\ub300\ub85c\ub41c \ud559\uc2b5\uacb0\uacfc\uac00 \ub098\uc624\uc9c0 \uc54a\uc744\uc218\ub3c4 \uc788\uae30\ub54c\ubb38\uc5d0 Log\uac12\uc744 \ucde8\ud574\uc900\ub2e4.\n'''\n","99fc0015":"df_train['Fare'] = df_train['Fare'].map(lambda i: np.log(i) if i>0 else 0)\n\n# lambda \ubb38\ubc95\uc740 \ud55c\uc904\ub85c \ucf54\ub529\uc744 \ud560 \uc218 \uc788\ub294 \ud30c\uc774\uc36c\uc758 \ud2b9\uc9d5\uc744 \uac16\ub294 \ubb38\ubc95\uc774\ub2e4. map\uc744 \uc774\uc6a9\ud558\uc5ec \uac12 \uce58\ud658\uc744 \ud574\uc90c, \uc8fc\ub85c map\uc740 lambda\uc640 \ub9ce\uc774 \uc4f0\uc778\ub2e4. \n# i\uac12\uc774 0 \uc774\uc0c1\uc774\uba74 log(i)\ub97c \ucde8\ud558\uace0, \uc544\ub2c8\ub77c\uba74 0\uac12\uc744 \ucde8\ud55c\ub2e4.","24ee0217":"fig, ax = plt.subplots(1,1,figsize=(8,8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness:{:.2f}'.format(df_train['Fare'].skew()),ax=ax)\ng = g.legend(loc='best')\n\n'''\nLog \uac12\uc744 \uc801\uc6a9\uc2dc\ucf1c\uc11c Skewness\uac12\uc774 0\uc5d0 \uc218\ub834\ud558\ub3c4\ub85d \ub9cc\ub4e4\uc5b4\uc904\uc218 \uc788\ub2e4. -> \ud559\uc2b5\uc5d0 \ud6a8\uacfc\uc801\uc778 \ub370\uc774\ud130\uac12\n'''","1e895d64":"df_train['Initial']=df_train['Name'].str.extract('([a-zA-Z]*)\\.')\ndf_test['Initial'] = df_test['Name'].str.extract('([a-zA-Z]*)\\.')\n# [a-zA-Z]* : \uc54c\ud30c\ubcb3 \ubaa8\ub450(\uc18c\ubb38\uc790, \ub300\ubb38\uc790 \uc0c1\uad00\uc5c6\uc774) *(\ubb34\ud55c\ubc18\ubcf5) \\.(.\uc774 \ubd99\uc740 \uac83\ub4e4 \uc804\ubd80 \ucd94\ucd9c)\n","d651c84c":"pd.crosstab(df_train['Initial'],df_train['Sex']).T.style.background_gradient(cmap='summer_r')","815bed19":"df_train['Initial'].replace(['Mile','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don','Dona'],\n                            ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr','Mr'], inplace=True)\n\ndf_test['Initial'].replace(['Mile','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don','Dona'],\n                            ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr','Mr'], inplace=True)","a01915a5":"df_train.groupby('Initial').mean()","2b219174":"df_train.groupby('Initial')['Survived'].mean().plot.bar()","c082cfdf":"df_all = pd.concat([df_train, df_test])\n# concat\uc744 \uc774\uc6a9\ud558\uc5ec df_train\uacfc df_test\ub97c \ud569\ucce4\ub2e4.","9e5d1b3a":"df_all.groupby('Initial').mean()","59e040ec":"df_train.loc[2:5,:]\n# location \uc744 \ud65c\uc6a9\ud558\uc5ec \uc6d0\ud558\ub294 \ubc94\uc704\uc758 \uac12\ub9cc \ubd88\ub7ec\uc62c\uc218 \uc788\ub2e4","d946c47d":"df_train.loc[df_train['Survived'] == 1]\n# location\uc744 \uc774\uc6a9\ud558\uc5ec Survived \uac12\uc774 1\uc778 \ub370\uc774\ud130\ub9cc \ubd88\ub7ec\uc628\ub2e4 -> bolean Indexing","15acf2ff":"df_train.loc[df_train['Age'].isnull() & (df_train['Initial']=='Mr')]\n# location\uc744 \uc774\uc6a9\ud558\uc5ec Age Frame\uc5d0 Null\uac12\uc774\uace0 Initial\uc5d0 Mr \uc774 \ud3ec\ud568\ub41c \uc0ac\ub78c\ub9cc \ucd94\ucd9c\ud55c\ub2e4.","eca88fb5":"df_train.loc[df_train['Age'].isnull() & (df_train['Initial']=='Mr'), 'Age'] =33\n# \ub098\uc774\uac12\uc774 Null\uc774\uace0 \uc774\ub984\uc5d0 Mr\uc774 \ubd99\uc740\uc0ac\ub78c\uc758 \ub098\uc774\ub97c 33\uc138\ub85c \uc9c0\uc815\ud574\uc900\ub2e4.\ndf_train.loc[(df_train['Initial']=='Mr'), 'Age']\n# Age\uc5d0 Null \uac12\uc774 \uc5c6\uc73c\ubbc0\ub85c \uc774\ub984\uc774 Mr\uc778 \uc0ac\ub78c\uc758 \ub098\uc774\ub9cc \ud655\uc778\ud55c\ub2e4","3ae49a0f":"df_train.loc[df_train['Age'].isnull() & (df_train['Initial']=='Mr'), 'Age'] =33\ndf_train.loc[df_train['Age'].isnull() & (df_train['Initial']=='Mrs'), 'Age'] =20\ndf_train.loc[df_train['Age'].isnull() & (df_train['Initial']=='Other'), 'Age'] =5\ndf_train.loc[df_train['Age'].isnull() & (df_train['Initial']=='Miss'), 'Age'] =48\ndf_train.loc[df_train['Age'].isnull() & (df_train['Initial']=='Master'), 'Age'] =27\n\n\ndf_test.loc[df_test['Age'].isnull() & (df_test['Initial']=='Mr'), 'Age'] =33\ndf_test.loc[df_test['Age'].isnull() & (df_test['Initial']=='Mrs'), 'Age'] =20\ndf_test.loc[df_test['Age'].isnull() & (df_test['Initial']=='Other'), 'Age'] =5\ndf_test.loc[df_test['Age'].isnull() & (df_test['Initial']=='Miss'), 'Age'] =48\ndf_test.loc[df_test['Age'].isnull() & (df_test['Initial']=='Master'), 'Age'] =27\n\nprint('train Null data percent = {:.0f}%'.format(df_train['Age'].isnull().sum()))\nprint('test Null data percent = {:.0f}%'.format(df_test['Age'].isnull().sum()))\n\n# df_train\uacfc df_test \uc758 Age frame\uc5d0 Null\uac12\uc744 \uc804\ubd80 \ucc44\uc6cc Null\uac12\uc744 \uc5c6\uc5e0","d21783d7":"df_train['Embarked'].isnull().sum()\ndf_train['Embarked'].fillna('S',inplace=True)\n# Embarked frame\uc5d0 Null\uac12\uc774 2\uac1c\ubfd0\uc774\ubbc0\ub85c \uac00\uc7a5\ub9ce\uc740 S\ub85c \uac12\uc744 \ucc44\uc6cc\uc8fc\uace0 \ub9c8\ubb34\ub9ac","ccc59e1e":"df_train['Age_cat'] = 0","7cdd5dd4":"df_train.loc[df_train['Age']<10,'Age_cat'] = 0\ndf_train.loc[(10<= df_train['Age']) & (df_train['Age']<20) ,'Age_cat'] =1\ndf_train.loc[(20<= df_train['Age']) & (df_train['Age']<30) ,'Age_cat'] =2\ndf_train.loc[(30<= df_train['Age']) & (df_train['Age']<40) ,'Age_cat'] =3\ndf_train.loc[(40<= df_train['Age']) & (df_train['Age']<50) ,'Age_cat'] =4\ndf_train.loc[(50<= df_train['Age']) & (df_train['Age']<60) ,'Age_cat'] =5\ndf_train.loc[(60<= df_train['Age']) & (df_train['Age']<70) ,'Age_cat'] =6\ndf_train.loc[(70<= df_train['Age']),'Age_cat'] =7","732b537b":"df_test['Age_cat'] = 0\ndf_test.loc[df_test['Age']<10,'Age_cat'] = 0\ndf_test.loc[(10<= df_test['Age']) & (df_test['Age']<20) ,'Age_cat'] =1\ndf_test.loc[(20<= df_test['Age']) & (df_test['Age']<30) ,'Age_cat'] =2\ndf_test.loc[(30<= df_test['Age']) & (df_test['Age']<40) ,'Age_cat'] =3\ndf_test.loc[(40<= df_test['Age']) & (df_test['Age']<50) ,'Age_cat'] =4\ndf_test.loc[(50<= df_test['Age']) & (df_test['Age']<60) ,'Age_cat'] =5\ndf_test.loc[(60<= df_test['Age']) & (df_test['Age']<70) ,'Age_cat'] =6\ndf_test.loc[(70<= df_test['Age']),'Age_cat'] =7\n\n# \uc774\uc640\uac19\uc740 \ubc29\ubc95\uc73c\ub85c Categorize\ub97c \ud560 \uc218 \uc788\ub2e4.","e2e8a959":"df_train.head(10)","a844469d":"def category_age(x):\n    if x <10:\n        return 0\n    elif x<20:\n        return 1\n    elif x<30:\n        return 2\n    elif x<40:\n        return 3\n    elif x<50:\n        return 4\n    elif x<60:\n        return 5\n    elif x<70:\n        return 6\n    else:\n        return 7","9d4d953c":"#df_train['Age'].apply(category_age)\n# apply\ub294 \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec \uc801\uc6a9\ud574\uc904\ub54c \uc4f0\uc784","3120c11a":"df_train['Age_cat_2'] = df_train['Age'].apply(category_age)\n# \ud568\uc218\uc640 apply\ub97c \uc774\uc6a9\ud558\uc5ec \uc774\uc6a9\ud558\uc5ec \uc704\uc758 \ubc29\ubc95\ubcf4\ub2e4 \uc880\ub354 \uc27d\uac8c Categorize\ub97c \ud560 \uc218 \uc788\ub2e4.","ba2e1fd8":"print((df_train['Age_cat'] == df_train['Age_cat_2']).all())\n'''\nall\uc744 \uc4f8\uacbd\uc6b0 Data \uac12\uc774 \ubaa8\ub450 True\uc77c\ub54c True\ub97c \ubc18\ud658, \uc544\ub2c8\uba74 False\nany\ub97c \uc4f8\uacbd\uc6b0 Data \uac12\uc774 \ud558\ub098\ub77c\ub3c4 True\uc774\uba74 True\ub97c \ubc18\ud658, \uc544\ub2c8\uba74 False\n\n'''","6d898580":"df_train.drop(['Age','Age_cat_2'], axis=1, inplace=True)\ndf_test.drop(['Age'],axis=1,inplace=True)\n# \ud544\uc694\uc5c6\ub294 col\uc744 \uc5c6\uc5d0\uae30\uc704\ud574 drop\uc744 \uc0ac\uc6a9 ","af9a4ad6":"df_train.Initial.unique()","07e9f233":"df_train['Initial']=df_train['Initial'].map({'Master':0,'Miss':1,'Mr':2,'Mrs':3,'Other':4})\ndf_test['Initial']=df_test['Initial'].map({'Master':0,'Miss':1,'Mr':2,'Mrs':3,'Other':4})","f4798f69":"df_train.Embarked.unique()","fe1d4b24":"df_train['Embarked'].value_counts()","9a619a4f":"df_train['Embarked'] = df_train['Embarked'].map({'C':0,'Q':1,'S':2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C':0,'Q':1,'S':2})","10adfc33":"df_train['Embarked'].isnull().any()\n#Embarked\uc758 Null\uac12\uc744 \ubaa8\ub450 \ucc44\uc6e0\uae30\ub54c\ubb38\uc5d0 False\uac12\uc774 \ub098\uc634","ea25386d":"df_train['Sex']=df_train['Sex'].map({'female':0,'male':1})\ndf_test['Sex']=df_test['Sex'].map({'female':0,'male':1})","aedd1f80":"heatmap_data = df_train[['Survived','Pclass','Sex','Fare','Embarked','FamilySize','Initial','Age_cat']]","e081ce18":"colormap = plt.cm.BuGn\nplt.figure(figsize=(12,10))\nplt.title('Pearson Correlation of Features', y=1.05,size=20)\nsns.heatmap(heatmap_data.astype(float).corr(),linewidths=0.1,vmax=1.0,square=True,cmap=colormap,linecolor='White',annot=True,annot_kws={'size':16})\ndel heatmap_data\n'''\nastype\uc740 heatmap data\uc758 \ub370\uc774\ud130\ub97c float\ud615\ud0dc\ub85c \ubc14\uafd4\uc8fc\ub294\uac83\ncorr = Correlation (\uc0c1\uad00\uad00\uacc4)\ub97c \uad6c\ud574\uc90c\n''' ","f428229c":"df_train = pd.get_dummies(df_train, columns=['Initial'], prefix='Initial')\ndf_test = pd.get_dummies(df_test, columns=['Initial'], prefix='Initial')\n\n'''\npandas\ub97c \uc774\uc6a9\ud558\uc5ec One-Hot encoding\uc744 \ub9e4\uc6b0 \uac04\ub2e8\ud558\uac8c \ud560 \uc218 \uc788\ub2e4.\npd.get_dummies\ub97c \uc774\uc6a9\ud558\uba74 One-Hot encoding\uc774 \ub418\ub294\ub370 \uc774\ub54c One-Hot encoding\uc744 \ud55c \uce74\ud14c\uace0\ub9ac\uc758 \uc218\ub300\ub85c column\uc774 \uc0dd\uae30\uac8c \ub41c\ub2e4.\n\uc0c8\ub85c \uc0dd\uae34 column\ub4e4\uc744 prefix\ub97c \uc774\uc6a9\ud558\uc5ec \uad6c\ubd84\ud558\uae30 \uc27d\uac8c \ub9cc\ub4e4\uc5b4\uc904\uc218\uc788\ub2e4.\n\n\ud558\uc9c0\ub9cc dummies\uc758 \ub2e8\uc810\uc740 \uce74\ud14c\uace0\ub9ac\uac00 100\uac1c \uc815\ub3c4 \ub418\ub294 data set\uc77c \uacbd\uc6b0 \ud559\uc2b5\ud558\ub294\ub370 \ub9e4\uc6b0 \ud070 \uc601\ud5a5\uc744 \ub07c\uce60\uc218 \uc788\uc73c\ubbc0\ub85c \uc8fc\uc758\ud574\uc57c\ud55c\ub2e4.\n'''\n","f8e0d00a":"df_train.head()","0e452375":"df_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')\n#\uc704\uc640 \uac19\uc740 \uc124\uba85\uc774\ub2e4.","10b7f869":"df_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\ndf_test.drop(['PassengerId', 'Name',  'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\n# \ud544\uc694\ud55c columns\ub9cc \ub0a8\uae30\uace0 \ubaa8\ub450 \uc9c0\uc6b4\ub2e4","57881344":"df_train.head()","53f14154":"df_test.head()","58c04eba":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics # \ubaa8\ub378\uc758 \ud3c9\uac00\ub97c \uc704\ud574\uc11c \uc501\ub2c8\ub2e4\nfrom sklearn.model_selection import train_test_split # traning set\uc744 \uc27d\uac8c \ub098\ub220\uc8fc\ub294 \ud568\uc218\uc785\ub2c8\ub2e4.","bb3e6cfa":"X_train = df_train.drop('Survived', axis = 1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","00a0cdc3":"(X_test== np.inf).sum()","c6fecf44":"(X_test== -np.inf).sum()","db71aec5":"X_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size=0.3, random_state=2018)\n# supervised learning, test_size = 0.3 ->\uc608\uce21 \ub370\uc774\ud130 30%\ub9cc \uc0ac\uc6a9 , train_size = 70% ->\ud6c8\ub828 \ub370\uc774\ud130 70% \uc0ac\uc6a9","0b2caf83":"model = RandomForestClassifier()\nmodel.fit(X_tr,y_tr)\n# RandomForestClassifier default setting \uc73c\ub85c \ud559\uc2b5","911162ff":"prediction = model.predict(X_vld)\n#\ud559\uc2b5\ud55c \uacb0\uacfc\ub85c \uc608\uce21","b1728f2d":"print('\ucd1d {}\uba85 \uc911 {:.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874 \ub9de\ucda4'.format(y_vld.shape[0],100*metrics.accuracy_score(prediction,y_vld)))\n#metrics.accuracy_score(prediction,y_vld) \uc5d0\uc11c prediction\uacfc y_vld\ub97c \ube44\uad50\ud558\uc5ec \uc815\ud655\ub3c4\ub97c \ubf51\uc544\ub0c4","9503d9ff":"from pandas import Series","e405a8d8":"feature_importance = model.feature_importances_\nSeries_feat_imp = Series(feature_importance, index=df_test.columns)","9d3885eb":"feature_importance","7bc79922":"df_test.columns","3aff5193":"df_train.head()","38b06cfe":"df_test.head()","491171cf":"plt.figure(figsize=(8, 8))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","1adce770":"submission = pd.read_csv('..\/input\/gender_submission.csv')","ae948308":"submission.head(10)","ae44253e":"prediction = model.predict(X_test)\nsubmission['Survived'] = prediction","bec65797":"submission.to_csv('.\/my_first_submission.csv', index=False)","44eea08d":"for col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100*(df_test[col].isnull().sum())\/df_test[col].shape[0])\n    print(msg)","9305ac71":"df_test['Fare'].mean()","5847bf4a":"df_test['Fare'].fillna(35, inplace=True)","a92605fc":"#\ucc3e\ub294\ubc29\ubc95\n#(df_train['feature']== np.inf).sum()\n#(df_train['feature']== -np.inf).sum()","29b3a1ba":"#\ucc44\uc6b0\ub294\ubc95\n#df_train[feat_name].replace([np.inf, -np.inf], 0, inplace=True)","598b056a":"# Embarked","3ded7765":"# Categorize Age","e59e929b":"### 1. Age frame\uc758 Null\uac12\uc744 \ucc44\uc6cc\ub123\ub294 \uc791\uc5c5\uc744 \ud574\uc57c\ud55c\ub2e4.\n### 2. \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \uc774\uc6a9\ud558\uc5ec \uc774\ub984\uc5d0 \ub530\ub77c Age\uac12\uc744 \ub123\uc5b4\uc8fc\ub3c4\ub85d \ud55c\ub2e4","33422037":"# plot\uc758 \ud06c\uae30\uac00 2\ucc28\uc6d0\uc77c\ub54c","9ce5a4c5":"# \uc131\ubcc4","065f8b63":"# location \ud65c\uc6a9\ubc95","8aa66443":"# Fare","87d21b7e":"## Both Sex and Pclass","1ac53fbd":"# Violinplot(Pclass, Sex, Age)","7a078d5f":"# Machine learning prediction - feature importance and prediction on test set\n","d9d78af6":"# inf data \ucc3e\uae30, \ucc44\uc6b0\uae30 \uafc0\ud301","bca0e037":"# Age","f5e66329":"# groupby\ub97c \uc774\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uc815\ub82c","5bb509d4":"# Family-SibSp+Parch","d41393ee":"# One-hot encoding on Initial and Embarked","f96e2ed6":"# Model development - Machine learningl(Randomforest)","74129ac8":"# Change string to categorical and Pearson coefficient","926bea26":"# Feature engineering","30874591":"# Embarked","995fae81":"# Pclass"}}