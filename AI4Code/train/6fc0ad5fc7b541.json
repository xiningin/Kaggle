{"cell_type":{"78bea800":"code","dd57cba1":"code","d334c6ff":"code","2bd00df5":"code","df13f212":"code","fb66592b":"code","37dd6f18":"code","bef4301e":"code","5293ad49":"code","d323702b":"code","d2001e39":"code","3bcecf22":"code","638e777d":"code","3ecaa120":"code","2e998242":"code","08e28f06":"code","361077de":"code","ee573c98":"code","ea840675":"code","91b17332":"code","e30b0788":"code","151a85dd":"code","ccf219e5":"code","aedd5d63":"markdown","ed8eb3a1":"markdown","cb4dac86":"markdown","9526218f":"markdown","021adb16":"markdown","7c574ebb":"markdown","08ae43ad":"markdown"},"source":{"78bea800":"#importing libaries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","dd57cba1":"#importing dataset\nds = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","d334c6ff":"#reviewing dataset\npd.set_option('display.max_columns',None)\nds.head()","2bd00df5":"ds.describe()","df13f212":"#dropping unnecessary features\nds.drop(['Unnamed: 32'], axis = 1, inplace = True)","fb66592b":"#checking type of feaures\nds.info()","37dd6f18":"#dataset has 569 rows and 31 columns\nds.shape","bef4301e":"#checking for null values\nds.isnull().sum()","5293ad49":"#taking care of categorical values\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nds['diagnosis']=le.fit_transform(ds['diagnosis'])","d323702b":"ds.info()","d2001e39":"ds.head()","3bcecf22":"plt.figure(figsize=(16,14))\nsns.heatmap(ds.corr(), cmap='Greens', annot = True)\nplt.title(\"Correlation Map\", fontweight = \"bold\", fontsize=16)","638e777d":"#defining dependent and independent variables\nx = ds.drop('diagnosis', axis=1)\ny = ds['diagnosis']","3ecaa120":"#splitting data into training and testing set\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)","2e998242":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.fit_transform(x_test)","08e28f06":"#training model\nfrom sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(max_iter = 10000)\nlr.fit(x_train,y_train)\n\n#getting confusion matrix\nfrom sklearn.metrics import confusion_matrix\ny_pred = lr.predict(x_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('confusion matrix:\\n',cm)\n\n#checking accuracy\nfrom sklearn.metrics import accuracy_score\nlra = accuracy_score(y_test,y_pred)\nprint('accuracy score = ',lra)","361077de":"#training model\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski',p = 2)\nknn.fit(x_train,y_train)\n\n#getting confusion matrix\nfrom sklearn.metrics import confusion_matrix\ny_pred = knn.predict(x_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('confusion matrix:\\n',cm)\n\n#checking accuracy\nfrom sklearn.metrics import accuracy_score\nknna = accuracy_score(y_test,y_pred)\nprint('accuracy score = ',accuracy_score(y_test,y_pred))","ee573c98":"#training model\nfrom sklearn.svm import SVC\nsvc = SVC(kernel = 'linear')\nsvc.fit(x_train,y_train)\n\n#getting confusion matrix\nfrom sklearn.metrics import confusion_matrix\ny_pred = svc.predict(x_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('confusion matrix:\\n',cm)\n\n#checking accuracy\nfrom sklearn.metrics import accuracy_score\nsva =accuracy_score(y_test,y_pred)\nprint('accuracy score = ',accuracy_score(y_test,y_pred))","ea840675":"#training model\nfrom sklearn.svm import SVC\nsvc = SVC(kernel = 'rbf')\nsvc.fit(x_train,y_train)\n\n#getting confusion matrix\nfrom sklearn.metrics import confusion_matrix\ny_pred = svc.predict(x_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('confusion matrix:\\n',cm)\n\n#checking accuracy\nfrom sklearn.metrics import accuracy_score\nsva2 = accuracy_score(y_test,y_pred)\nprint('accuracy score = ',accuracy_score(y_test,y_pred))","91b17332":"#training model\nfrom sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(x_train,y_train)\n\n#getting confusion matrix\nfrom sklearn.metrics import confusion_matrix\ny_pred = nb.predict(x_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('confusion matrix:\\n',cm)\n\n#checking accuracy\nfrom sklearn.metrics import accuracy_score\nnba = accuracy_score(y_test,y_pred)\nprint('accuracy score = ',accuracy_score(y_test,y_pred))","e30b0788":"#training model\nfrom sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier(criterion = 'entropy')\ndt.fit(x_train,y_train)\n\n#getting confusion matrix\nfrom sklearn.metrics import confusion_matrix\ny_pred = dt.predict(x_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('confusion matrix:\\n',cm)\n\n#checking accuracy\nfrom sklearn.metrics import accuracy_score\ndta = accuracy_score(y_test,y_pred)\nprint('accuracy score = ',accuracy_score(y_test,y_pred))","151a85dd":"#training model\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators = 60, criterion = 'entropy',random_state = 0)\nrf.fit(x_train,y_train)\n\n#getting confusion matrix\nfrom sklearn.metrics import confusion_matrix\ny_pred = rf.predict(x_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('confusion matrix:\\n',cm)\n\n#checking accuracy\nfrom sklearn.metrics import accuracy_score\nrfa = accuracy_score(y_test,y_pred)\nprint('accuracy score = ',accuracy_score(y_test,y_pred))","ccf219e5":"#comparing accuracies\nplt.figure(figsize= (8,7))\nac = [lra,knna,sva,sva2,nba,dta,rfa]\nname = ['Logistic Regression','knn','svm','Kernel Svm','Naive Bayes','Decision Tree', 'Random Forest']\nsns.barplot(x = ac,y = name,palette='pastel')\nplt.title(\"Plotting the Model Accuracies\", fontsize=16, fontweight=\"bold\")","aedd5d63":"**NO MISSING DATA**","ed8eb3a1":"**APPLYING MODELS**","cb4dac86":"**THERE WAS A TIE BETWEEN RANDOM FOREST AND KERNEL SVM WITH AN ACCURACY OF 98.2 %**","9526218f":"**APPLYING FEATURE SCALING MAY IMPROVE ACCURACY**","021adb16":"Changing incorrect datatypes to correct data types.\n<br>\nObject datatype to int datatype","7c574ebb":"**PREDICTING BREAST CANCER USING VARIOUS CLASSIFICATION MODELS.**\n* The features that have been computed from digitized images of the cell nuclei, which can be used to build a model to predict whether a tumor is benign or malignant.\n* 1 = Malignant (Cancerous) - Present (M)\n* 0  = Benign (Not Cancerous) -Absent (B)","08ae43ad":"**WE CAN EITHER REMOVE THE HIGH CORRELATED FEATURES OR WE CAN USE ALL THE FEATURES, I AM USING ALL FEATURES.**\n* **REMOVING CORRELATED FEATURES MAY INCREASE ACCURACY**"}}