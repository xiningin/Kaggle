{"cell_type":{"847b0539":"code","95514fd9":"code","774d3a0d":"code","adab221a":"code","1fe2712d":"code","d18dfcb1":"code","19ee48d5":"code","d1b98f16":"code","4e7469a5":"code","32e47b7f":"code","c2629ba8":"code","f995691c":"code","3585ef06":"code","625e613f":"code","c860fe55":"code","2bb34a92":"code","9f9c3612":"code","a3bf55b4":"code","022a739d":"code","092eb0cf":"code","0ad314f3":"code","eff58317":"code","c1d27adc":"code","e121c37a":"code","d1e31314":"code","ac693fe9":"code","47c05f64":"code","6a907b66":"code","28225534":"code","ff5d9949":"code","96b9c80f":"code","74a9f16f":"code","ec8df68c":"code","0d548b83":"code","7e01ab7f":"code","e87b140d":"code","b0a0f7f4":"code","cc75efbb":"code","48b54596":"code","b23b3c6a":"code","4006e9d6":"code","d0b7cc4a":"code","797f321d":"code","29947a03":"code","1798dbb8":"code","ea92f07b":"code","611e477a":"code","86fa6845":"code","9128d8f7":"code","fa5e082d":"code","6560ed7b":"code","deb0addf":"code","21669652":"code","5fbc11fd":"code","7c9e2f75":"code","4173a2a2":"code","81c9988c":"code","6b9ad9ee":"code","d6be4908":"code","25bd5315":"code","6ceacdc1":"code","6f0a6772":"code","f85033e8":"code","b98d89be":"code","675ac149":"code","a4610834":"code","da6ec52b":"code","a1242ebc":"code","c95549b4":"code","483d70f5":"code","b463a931":"code","363ae485":"code","8cf1a829":"code","cfc86f62":"code","84b5a758":"code","917a2d85":"code","7e0a8711":"code","51e8e701":"code","3d2aa24f":"code","d2962e04":"code","aee54b34":"code","94ae1209":"code","541a058f":"code","eeaa3292":"code","029e82c1":"code","7b4876ae":"code","a921a271":"code","0eb2eaf2":"code","08286045":"code","f6272e06":"code","ac471b5d":"code","5d6f4d99":"code","234ff268":"code","cc54de2f":"code","17abe856":"code","e055912e":"code","49d104c5":"code","0e220b0b":"code","62ca3748":"code","f12bdfb2":"code","d5216b82":"code","254d4eeb":"code","2dce46bd":"code","27b901bf":"code","16a4bbff":"code","375581d6":"code","c4e16f36":"code","a1dd52b9":"code","b798bfa1":"code","05a4ca01":"code","e84f1a46":"code","07e8c8c7":"code","e40dfa5e":"code","901ada03":"code","78751616":"code","f2e14283":"code","56c3720e":"code","7e251620":"code","3a8a16d5":"code","6ec9b147":"code","05f715e2":"code","590241d0":"code","830469e2":"code","cf2c3998":"code","7b490d21":"code","c047430a":"code","69abde04":"code","e78b7290":"code","c1194690":"code","ef9cca35":"code","5bcdced9":"code","9391eedf":"code","228f4f81":"markdown","c39a9f68":"markdown","e384eb34":"markdown","aae6cdf9":"markdown","3b06ee07":"markdown","31d5c831":"markdown","e5b650d3":"markdown","48d5d5f2":"markdown","7145e95f":"markdown","3c35cc0d":"markdown","c0f7e430":"markdown","046561cf":"markdown","003f9abb":"markdown","f72379ea":"markdown","6a66ae90":"markdown","eced2ba0":"markdown","a2b681cb":"markdown","e9873016":"markdown","f424215d":"markdown","35c794e0":"markdown","98ad9fd8":"markdown","46f71933":"markdown","f07c0b7a":"markdown","ca87ee91":"markdown","7edd5ffa":"markdown","74e56061":"markdown","1cbf0e8a":"markdown","bc4ebbef":"markdown","869c1b9d":"markdown"},"source":{"847b0539":"v_message = \"Hi. How are you ? \"\n\nv_name = \"abd\u00fcssamed\"\nv_surname = \"do\u011fan\"\nv_fullname = v_name + \" \" + v_surname\n\nv_var1 = \"10\"\nv_var2 = \"50\"\nv_varSum = v_var1 + v_var2\n\nprint(v_message)\n\nprint()\nprint(v_fullname)\n\nprint()\nprint(\"v_varSum : \" , v_varSum)","95514fd9":"#len function :\nprint(\"Length of v_fullname is \" , len(v_fullname))\n\n#title function :\nprint()\nprint(\"Full Name is \" , v_fullname.title())\n\n#upper function :\nprint()\nprint(\"Upper of Full Name is \" , v_fullname.upper())\n\n#lower function :\nprint()\nprint(\"Full Name is \" , v_fullname.lower())\n\n#type\nprint()\nprint(\"Type of v_fullname is \" , type(v_fullname))","774d3a0d":"v_chr1 = v_fullname[1]\nv_chr2 = v_fullname[8]\n\nprint(\"v_chr1 : \" , v_chr1 , \" and v_chr2 : \" , v_chr2)","adab221a":"# Integer\nv_num1 = 12.5\nv_num2 = 20\nv_numSum = v_num1 + v_num2\n\nprint(\"v_num1 : \" , v_num1 , \" and type : \" , type(v_num1))\n\nprint()\nprint(\"Sum of Num1 and Num2 is : \" , v_numSum , \" and type : \" , type(v_numSum))","1fe2712d":"# Float\nv_num3 = 30.5\nv_numSum2 = v_num3 + v_num2\n\nprint(\"v_num3 : \" , v_num3 , \" and type : \" , type(v_num3))\n\nprint()\nprint(\"Sum of Num2 and Num3 is : \" , v_numSum2 , \" and type : \" , type(v_numSum2))","d18dfcb1":"# Integer\nv_num1 = 12\nv_num2 = 20\nv_numSum = v_num1 + v_num2\n\nprint(\"v_num1 : \" , v_num1 , \" and type : \" , type(v_num1))\n\nprint()\nprint(\"Sum of Num1 and Num2 is : \" , v_numSum , \" and type : \" , type(v_numSum))","19ee48d5":"# Float\nv_num3 = 30.5\nv_numSum2 = v_num3 + v_num2\n\nprint(\"v_num3 : \" , v_num3 , \" and type : \" , type(v_num3))\n\nprint()\nprint(\"Sum of Num2 and Num3 is : \" , v_numSum2 , \" and type : \" , type(v_numSum2))","d1b98f16":"def f_SayHello():\n    print(\"Hello\")\n    \nf_SayHello()","4e7469a5":"def f_SayMessage(v_message):\n    print(v_message)\n    \nf_SayMessage(\"I am Do\u011fan\")\n","32e47b7f":"f_SayHello2()","c2629ba8":"f_getFullName(\"Abd\u00fcssamed\" , \"DO\u011eAN\" , 15)","f995691c":"def f_Calc1(f_Num1 , f_Num2 , f_Num3):\n    a_Sonuc = f_Num1 + f_Num2 + f_Num3\n    print(\"Sonu\u00e7 =\", a_Sonuc)\n    ","3585ef06":"f_Calc1(100 , 250 , 50)","625e613f":"# return function\ndef f_Calc2(a_Num1 , a_Num2 , a_Num3):\n    a_Out = a_Num1+a_Num2+a_Num3*2\n    print(\"Hi from f_Calc2\")\n    return a_Out\n    ","c860fe55":"a_gelen =  f_Calc2(1,2,3)\nprint(\"Score is : \" , a_gelen)","2bb34a92":"# Default Functions :\ndef f_getSchoolInfo(a_Name,a_StudentCount,a_City = \"ISTANBUL\"):\n    print(\"Name : \" , a_Name , \" St Count : \" , a_StudentCount \n          , \" City : \" , a_City)","9f9c3612":"f_getSchoolInfo(\"Ayaza\u011fa A\u0130HL\" , 269)\nf_getSchoolInfo(\"Ankara A\u0130HL\" , 432 , \"ANKARA\")\n","a3bf55b4":"# Flexible Functions :\n\ndef f_Flex1(a_Name , *a_messages):\n    \n    print ( \"Hi\" , a_Name , \" your first message is :\" , a_messages[1] )\n","022a739d":"f_Flex1(\"Do\u011fan\" , \"hi\" , \"Hello\" , \"How are you ?\")","092eb0cf":"# Lambda Function :\n\na_result1 = lambda x : x*3\nprint(\"Result is : \" , a_result1(3))","0ad314f3":"def f_alan(kenar1,kenar2):\n    print(kenar1*kenar2)","eff58317":"f_alan(7,12)","c1d27adc":"l_list1 = [9,7,5,3,1,0]\nprint(l_list1)\nprint(\"Type of 'l_list1' is : \" , type(l_list1))","e121c37a":"v_list1_4 = l_list1[3]\nprint(v_list1_4)\nprint(\"Type of 'v_list1_4' is : \" , type(v_list1_4))","d1e31314":"l_list2 = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\nprint(l_list2)\nprint(\"Type of 'l_list2' is : \" , type(l_list1))","ac693fe9":"v_list1_4 = l_list1[3]\nprint(v_list1_4)\nprint(\"Type of 'v_list1_4' is : \" , type(v_list1_4))\n","47c05f64":"v_list2_x3 = l_list2[-3]\nprint(v_list2_x3)","6a907b66":"l_list2_2 = l_list2[0:4]\nprint(l_list2_2)","28225534":"#Append\nl_list2_2.append(\"Saturday\")\nprint(l_list2_2)\n\nl_list2_2.append(\"Tuesday\")\nprint(l_list2_2)\n\n","ff5d9949":"#Len\nv_len_l_list2_2 = len(l_list2_2)\nprint(\"Size of 'l_list2_2' is : \",v_len_l_list2_2)\nprint(l_list2_2)","96b9c80f":"#Reverse\nl_list2_2.reverse()\nprint(l_list2_2)","74a9f16f":"#Sort\nl_list2_2.sort()\nprint(l_list2_2)","ec8df68c":"#Remove\n\n#First add 'Saturday' then Remove 'Tuesday'\nl_list2_2.append(\"Tuesday\")\nprint(l_list2_2)","0d548b83":"l_list2_2.remove(\"Saturday\")\nprint(l_list2_2)","7e01ab7f":"d_dict1 = {\"Pencil\":\"Kalem\" , \"Short\" : \"K\u0131sa\" , \"Lenght\": \"Uzun\", \"Teacher\": \"\u00d6\u011fretmen \/ Hoca\"}\n\nprint(d_dict1)\nprint(type(d_dict1))","e87b140d":"v_short = d_dict1[\"Short\"]\nprint(v_short)\nprint(type(v_short))","b0a0f7f4":"#Keys & Values\n\nv_keys = d_dict1.keys()\nv_values = d_dict1.values()\n\n\nprint(v_keys)\nprint(type(v_keys))\n\nprint()\nprint(v_values)\nprint(type(v_values))","cc75efbb":"v_var1 = 12\nv_var2 = 24\n\nif v_var1 > v_var2:\n    print(v_var1 , \" is greater then \" , v_var2)\nelif v_var1 < v_var2:\n    print(v_var1 , \" is smaller then \" , v_var2)\nelse :\n    print(\"This 2 variables are equal\")","48b54596":"# < , <= , > , >= , == , <>\ndef f_Comparison1(v_Comp1 , v_Comp2):\n    if v_Comp1 > v_Comp2:\n        print(v_Comp1 , \" is greater then \" , v_Comp2)\n    elif v_Comp1 < v_Comp2:\n        print(v_Comp1 , \" is smaller then \" , v_Comp2)\n    else :\n        print(\"These \" , v_Comp1 , \" variables are equal\")\n        \nf_Comparison1(22,44)\nf_Comparison1(66,33)\nf_Comparison1(85,85)","b23b3c6a":"# using 'IN' with LIST\n\n\ndef f_IncludeOrNot(v_search, v_searchList):\n    if v_search in v_searchList :\n        print(\"I found what you were looking for! \",v_search , \" is in list.\")\n    else :\n        print(v_search , \" is not in list. Sorry :(\")\n\nl_list = list(d_dict1.keys())\nprint(l_list)\nprint(type(l_list))\n\nf_IncludeOrNot(\"Lenght\" , l_list)\nf_IncludeOrNot(\"School\" , l_list)","4006e9d6":"for a in range(0,10):\n    print(\"Hello \" , a)","d0b7cc4a":"v_loveMessage = \"I Love You\"\nprint(v_loveMessage)","797f321d":"for v_chrs in v_loveMessage:\n    print(v_chrs)\n    print(\"------\")","29947a03":"for v_chrs in v_loveMessage.split():\n    print(v_chrs)","1798dbb8":"print(l_list1)\nv_sum_list1 = sum(l_list1)\nprint(\"Sum of l_list1 is : \" , v_sum_list1)\n\nprint()\nv_cum_list1 = 0\nv_loopindex = 0\nfor v_current in l_list1:\n    v_cum_list1 = v_cum_list1 + v_current\n    print(v_loopindex , \" nd value is : \" , v_current)\n    print(\"Cumulative is : \" , v_cum_list1)\n    v_loopindex = v_loopindex + 1\n    print(\"------\")","ea92f07b":"i = 0\nwhile(i < 4):\n    print(\"Hi\" , i)\n    i = i+1","611e477a":"print(l_list1)\nprint()\n\ni = 0\nk = len(l_list1)\n\nwhile(i<k):\n    print(l_list1[i])\n    i=i+1","86fa6845":"#Let's find minimum and maximum number in list\n\nl_list2 = [3,5,7,-6,-100,255,71,34,-85]\n\nv_min = 0\nv_max = 0\n\nv_index = 0\nv_len = len(l_list2)\n\nwhile (v_index < v_len):\n    v_current = l_list2[v_index]\n    \n    if v_current > v_max:\n        v_max = v_current\n    \n    if v_current < v_min:\n        v_min = v_current\n    \n    v_index = v_index+1\n\nprint (\"Maximum number is : \" , v_max)\nprint (\"Minimum number is : \" , v_min)","9128d8f7":"# Import library to use\nimport numpy as np","fa5e082d":"v_array1 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nv_array2_np = np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])","6560ed7b":"print(\"v_array1 : \" , v_array1)\nprint(\"Type of v_array1 : \" , type(v_array1))","deb0addf":"print(\"v_array2_np : \" , v_array2_np)\nprint(\"Type of v_array2_np : \" , type(v_array2_np))","21669652":"# shape\nv_shape1 = v_array2_np.shape\nprint(\"v_shape1 : \" , v_shape1 , \" and type is : \" , type(v_shape1))","5fbc11fd":"# Reshape\nv_array3_np = v_array2_np.reshape(5,3)\nprint(v_array3_np)","7c9e2f75":"v_shape2 = v_array3_np.shape\nprint(\"v_shape2 : \" , v_shape2 , \" and type is : \" , type(v_shape2))","4173a2a2":"# Dimension\nv_dimen1 = v_array3_np.ndim\nprint(\"v_dimen1 : \" , v_dimen1 , \" type is : \" , type(v_dimen1))","81c9988c":"# Dtype.name\nv_dtype1 = v_array3_np.dtype.name\nprint(\"v_dtype1 : \" , v_dtype1 , \" and type is : \" , type(v_dtype1))","6b9ad9ee":"# Size\nv_size1 = v_array3_np.size\nprint(\"v_size1 : \" , v_size1 , \" and type : \" , type(v_size1))","d6be4908":"# Let's create 3x4 array\nv_array4_np = np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\nprint(v_array4_np)\nprint(\"---------------\")\nprint(\"Shape is : \" , v_array4_np.shape)","25bd5315":"# Zeros\nv_array5_np = np.zeros((4,7))\nprint(v_array5_np)","6ceacdc1":"# Update an item on this array \nv_array5_np[2,5] = 78\nprint(v_array5_np)","6f0a6772":"# Ones\nv_array6_np = np.ones((5,3))\nprint(v_array6_np)","f85033e8":"# Empty\nv_array7_np = np.empty((2,3))\nprint(v_array7_np)","b98d89be":"# Arrange\nv_array8_np = np.arange(52,68,2)\nprint(v_array8_np)\nprint(v_array8_np.shape)","675ac149":"# Linspace\nv_array9_np = np.linspace(10,30,5)\nv_array10_np = np.linspace(10,30,20)\n\nprint(v_array9_np)\nprint(v_array9_np.shape)\nprint(\"-----------------------\")\nprint(v_array10_np)\nprint(v_array10_np.shape)","a4610834":"# Sum , Subtract , Square\nv_np1 = np.array([1,9,3])\nv_np2 = np.array([5,8,2])\n\nprint(v_np1 + v_np2)\nprint(v_np1 - v_np2)\nprint(v_np2 - v_np1)\nprint(v_np1 ** 2)","da6ec52b":"# Sinus\nprint(np.sin(v_np2))","a1242ebc":"# True \/ False\nv_np2_TF = v_np2 < 8\nprint(v_np2_TF)\nprint(v_np2_TF.dtype.name)","c95549b4":"# Element wise Prodcut\nv_np1 = np.array([1,9,3])\nv_np2 = np.array([5,8,2])\nprint(v_np1 * v_np2)","483d70f5":"# Transpose\nv_np5 = np.array([[2,4,8],[3,6,1]])\nv_np5Transpose = v_np5.T\nprint(v_np5)\nprint(v_np5.shape)\nprint()\nprint(v_np5Transpose)\nprint(v_np5Transpose.shape)","b463a931":"# Matrix Multiplication\nv_np6 = v_np5.dot(v_np5Transpose)\nprint(v_np6)","363ae485":"# Exponential --> We will use on Statistics Lesson\nv_np5Exp = np.exp(v_np5)\n\nprint(v_np5)\nprint(v_np5Exp)","8cf1a829":"# Random \nv_np8 = np.random.random((6,6)) # --> It will get between 0 and 1 random numbers\nprint(v_np8)","cfc86f62":"#Sum , Max ,Min\nv_np8Sum = v_np8.sum()\nprint(\"Sum of array : \", v_np8Sum)\nprint(\"Max of array : \", v_np8.max())\nprint(\"Min of array : \", v_np8.min())","84b5a758":"# Sum with Column or Row\nprint(\"Sum of Columns :\")\nprint(v_np8.sum(axis=0)) # --> Sum of Columns\nprint()\nprint(\"Sum of Rows :\")\nprint(v_np8.sum(axis=1)) #Sum of Rows","917a2d85":"# Square , Sqrt\nprint(np.sqrt(v_np8))\nprint()\nprint(np.square(v_np8))","7e0a8711":"# Add\nv_np10 = np.array([1,4,7,10,13])\nv_np11 = np.array([10,20,30,40,50])\n\nprint(np.add(v_np10,v_np11))","51e8e701":"v_np12 = np.array([1,2,3,4,5,6,7,8,9])\n\nprint(\"First item is : \" , v_np12[0])\nprint(\"Third item is : \" , v_np12[2])","3d2aa24f":"# Get top 4 rows :\nprint(v_np12[0:4])","d2962e04":"# Reverse\nv_np12_Rev = v_np12[::-1]\nprint(v_np12_Rev)","aee54b34":"v_np13 = np.array([[1,2,3,4,5],[11,12,13,14,15]])\nprint(v_np13)\nprint()\nprint(v_np13[1,3]) #--> Get a row\n\nprint()\nv_np13[1,3] = 314 #--> Update a row\nprint(v_np13)","94ae1209":"# Get all rows but 3rd columns :\nprint(v_np13[:,2])","541a058f":"#Get 2nd row but 2,3,4th columns\nprint(v_np13[1,1:4])","eeaa3292":"# Get last row all columns\nprint(v_np13[-1,:])","029e82c1":"# Get last columns but all rows\nprint(v_np13[:,-1])","7b4876ae":"#Flatten\nv_np14 = np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])\nv_np15 = v_np14.ravel()\n\nprint(v_np14)\nprint(\"Shape of v_np14 is : \" ,v_np14.shape)\nprint()\nprint(v_np15)\nprint(\"Shape of v_np15 is : \" ,v_np15.shape)\nprint()","a921a271":"# Reshape\nv_np16 = v_np15.reshape(3,4)\nprint(v_np16)\nprint(\"Shape of v_np16 is : \" ,v_np16.shape)","0eb2eaf2":"v_np17 = v_np16.T\nprint(v_np17)\nprint(\"Shape of v_np17 is : \" ,v_np17.shape)","08286045":"v_np20 = np.array([[1,2],[3,4],[5,6]])\n\nprint(v_np20)\nprint()\nprint(v_np20.reshape(2,3))\n\nprint()\nprint(v_np20) #--> It has not changed !!","f6272e06":"# Resize\nv_np20.resize((2,3))\nprint(v_np20) # --> Now it changed !  Resize can change its shape","ac471b5d":"v_np21 = np.array([[1,2],[3,4]])\nv_np22 = np.array([[5,6],[7,8]])\n\nprint(v_np21)\nprint()\nprint(v_np22)","5d6f4d99":"# Vertical Stack\nv_np23 = np.vstack((v_np21,v_np22))\nv_np24 = np.vstack((v_np22,v_np21))\n\nprint(v_np23)\nprint()\nprint(v_np24)","234ff268":"# Horizontal Stack\nv_np25 = np.hstack((v_np21,v_np22))\nv_np26 = np.hstack((v_np22,v_np21))\n\nprint(v_np25)\nprint()\nprint(v_np26)","cc54de2f":"v_list1 = [1,2,3,4]\nv_np30 = np.array(v_list1)\n\nprint(v_list1)\nprint(\"Type of list : \" , type(v_list1))\nprint()\nprint(v_np30)\nprint(\"Type of v_np30 : \" , type(v_np30))","17abe856":"v_list2 = list(v_np30)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))","e055912e":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","49d104c5":"v_list2[0] = 55\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","0e220b0b":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)","62ca3748":"v_list2[0] = 71\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","f12bdfb2":"# Import Library\nimport pandas as pd","d5216b82":"# Let's create Data Frame from Dictionary\nv_dict1 = { \"COUNTRY\" : [\"TURKEY\",\"AFGHAN\u0130STAN\",\"GERMANY\",\"FRANCE\",\"U.S.A\",\"AZERBAIJAN\",\"IRAN\"],\n            \"CAPITAL\":[\"ISTANBUL\",\"KABUL\",\"BERLIN\",\"PARIS\",\"NEW YORK\",\"BAKU\",\"TAHRAN\"],\n            \"POPULATION\":[15.07,5.11,3.57,2.12,8.62,4.3,8.69]}\n\nv_dataFrame1 = pd.DataFrame(v_dict1)\n\nprint(v_dataFrame1)\nprint()\nprint(\"Type of v_dataFrame1 is : \" , type(v_dataFrame1))","254d4eeb":"# get top 5 rows\nv_head1 = v_dataFrame1.head()\nprint(v_head1)\nprint()\nprint(\"Type of v_head1 is :\" ,type(v_head1))","2dce46bd":"# get top 100 rows\nprint(v_dataFrame1.head(100))","27b901bf":"# get last 5 rows\nv_tail1 = v_dataFrame1.tail()\nprint(v_tail1)\nprint()\nprint(\"Type of v_tail1 is :\" ,type(v_tail1))","16a4bbff":"# Columns\nv_columns1 = v_dataFrame1.columns\nprint(v_columns1)\nprint()\nprint(\"Type of v_columns is : \" , type(v_columns1))","375581d6":"v_info1 = v_dataFrame1.info()\nprint(v_info1)\nprint()\nprint(\"Type of v_info1 is : \" , type(v_info1))","c4e16f36":"v_dtypes1 = v_dataFrame1.dtypes\nprint(v_dtypes1)\nprint()\nprint(\"Type of v_dtypes1 is : \" , type(v_dtypes1))","a1dd52b9":"v_descr1 = v_dataFrame1.describe()\nprint(v_descr1)\nprint()\nprint(\"Type of v_descr1 is : \" , type(v_descr1))","b798bfa1":"v_country1 = v_dataFrame1[\"POPULATION\"]\nprint(v_country1)\nprint()\nprint(\"Type of v_country1 is : \" , type(v_country1))","05a4ca01":"# Add new column\nv_currenyList1 = [\"TRY\",\"GBP\",\"EUR\",\"EUR\",\"USD\",\"AZN\",\"IRR\"]\nv_dataFrame1[\"CURRENCY\"] = v_currenyList1\n\nprint(v_dataFrame1.head())","e84f1a46":"# Get all rows ,  1 column\nv_AllCapital = v_dataFrame1.loc[:,\"CAPITAL\"]\nprint(v_AllCapital)\nprint()\nprint(\"Type of v_AllCapital is : \" , type(v_AllCapital))","07e8c8c7":"# Get top 3 rows of Currency\nv_top3Currency = v_dataFrame1.loc[0:3,\"CURRENCY\"]\nprint(v_top3Currency)","e40dfa5e":"v_CityCountry = v_dataFrame1.loc[:,[\"CAPITAL\",\"COUNTRY\",\"BLABLA\"]] #--> BLABLA not defined !!!\nprint(v_CityCountry)","901ada03":"v_Reverse1 = v_dataFrame1.loc[::-1,:]\nprint(v_Reverse1)","78751616":"print(v_dataFrame1.loc[:,:\"POPULATION\"])\nprint()\nprint(v_dataFrame1.loc[:,\"POPULATION\":])","f2e14283":"#Get data with column index (not column name)\nprint(v_dataFrame1.iloc[:,2])","56c3720e":"v_filter1 = v_dataFrame1.POPULATION > 4\nprint(v_filter1)","7e251620":"v_filter2 = v_dataFrame1[\"POPULATION\"] < 9\nprint(v_filter2)","3a8a16d5":"print(v_dataFrame1[v_filter1 & v_filter2])","6ec9b147":"print(v_dataFrame1[v_dataFrame1[\"CURRENCY\"] == \"TRY\"])\n","05f715e2":"v_meanPop =v_dataFrame1[\"POPULATION\"].mean()\nprint(v_meanPop)\n\nv_meanPopNP = np.mean(v_dataFrame1[\"POPULATION\"])\nprint(v_meanPopNP)","590241d0":"for a in v_dataFrame1[\"CURRENCY\"]:\n    print(a)","830469e2":"v_dataFrame1[\"POP LEVEL\"] = [\"Low\" if v_meanPop > a else \"HIGH\" for a in v_dataFrame1[\"POPULATION\"]]\nprint(v_dataFrame1)","cf2c3998":"print(v_dataFrame1.columns)\n\nv_dataFrame1.columns = [a.lower() for a in v_dataFrame1.columns]\n\nprint(v_dataFrame1.columns)","7b490d21":"v_dataFrame1.columns = [a.split()[0]+\"_\"+a.split()[1] if (len(a.split())>1) else a for a in v_dataFrame1.columns]\nprint(v_dataFrame1.columns)","c047430a":"v_dataFrame1[\"test1\"] = [5,10,15,20,25,30,35]\nprint(v_dataFrame1)","69abde04":"print(v_dataFrame1)","e78b7290":"v_data1 = v_dataFrame1.head()\nv_data2 = v_dataFrame1.tail()\n\nprint(v_data1)\nprint()\nprint(v_data2)","c1194690":"v_dataConcat1 = pd.concat([v_data1,v_data2],axis=0) # axis = 0 --> VERTICAL CONCAT\nv_dataConcat2 = pd.concat([v_data2,v_data1],axis=0) # axis = 0 --> VERTICAL CONCAT\n\nprint(v_dataConcat1)\nprint()\nprint(v_dataConcat2)","ef9cca35":"v_CAPITAL = v_dataFrame1[\"capital\"]\nv_POPULATION = v_dataFrame1[\"population\"]\n\nv_dataConcat3 = pd.concat([v_CAPITAL,v_POPULATION],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nv_dataConcat4 = pd.concat([v_POPULATION,v_CAPITAL],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nprint(v_dataConcat3)\nprint()\nprint(v_dataConcat4)","5bcdced9":"v_dataFrame1[\"population\"] = [a*2 for a in v_dataFrame1[\"test1\"]]\nprint(v_dataFrame1)","9391eedf":"def f_multiply(v_population):\n    return v_population*3\n\nv_dataFrame1[\"test2\"] = v_dataFrame1[\"population\"].apply(f_multiply)\nprint(v_dataFrame1)","228f4f81":"<a id=\"9.\"><\/a> <br>\n# 9. Pandas","c39a9f68":"<a id=\"9.7.\"><\/a> <br>\n**9.7.Transforming Data **","e384eb34":"- *Examples*","aae6cdf9":"<a id=\"9.5.\"><\/a> <br>\n**9.6.Drop and Concatenating Data**","3b06ee07":"<a id=\"8.\"><\/a> <br>\n# 8. Numpy","31d5c831":"<a id=\"2.\"><\/a> <br>\n# 2. Function","e5b650d3":"<a id=\"8.3.\"><\/a> <br>\n**8.3. Indexing and Slicing **","48d5d5f2":"<a id=\"6.\"><\/a> <br>\n# 6. For Loop","7145e95f":"<a id=\"8.1.\"><\/a> <br>\n**8.1. Basic**","3c35cc0d":"<a id=\"5.\"><\/a> <br>\n# 5. If Else","c0f7e430":"<a id=\"9.1.\"><\/a> <br>\n**9.1.Introduction **","046561cf":"<a id=\"9.3.\"><\/a> <br>\n**9.3.Indexing and Slicing **","003f9abb":"<a id=\"9.4.\"><\/a> <br>\n**9.4.Filtering **","f72379ea":"1.2) Numbers Variables :\n\n","6a66ae90":"<a id=\"8.4.\"><\/a> <br>\n**8.4.Shape Manipulation **","eced2ba0":"> Some Functions :","a2b681cb":"<a id=\"9.5.\"><\/a> <br>\n**9.5.List Comprehension **","e9873016":"*2.2) NUMBERS :*","f424215d":"<a id=\"7.\"><\/a> <br>\n# 7. While Loop","35c794e0":"<a id=\"3.\"><\/a> <br>\n# 3. List","98ad9fd8":"<a id=\"8.5.\"><\/a> <br>\n**8.5.Stacking Arrays **","46f71933":"<a id=\"8.6.\"><\/a> <br>\n**8.6.Convert and Copy Array **","f07c0b7a":"<a id=\"10.\"><\/a> <br>\n# 10. Matplotlib\n\n#  > S O O N","ca87ee91":"<a id=\"8.2.\"><\/a> <br>\n**8.2. Basic Operations **","7edd5ffa":"*1.1) Strings Variables :*","74e56061":"<a id=\"4.\"><\/a> <br>\n# 4. Dictionary","1cbf0e8a":"# INTRODUCTION\n\n<ul>\n    <li><a href=\"#1.\">1. Variables and Simple Data Types<\/a><\/li>\n    <li><a href=\"#2.\">2. Functions<\/a><\/li>\n    <li><a href=\"#3.\">3. List<\/a><\/li>\n    <li><a href=\"#4.\">4. Dictionary<\/a><\/li>\n    <li><a href=\"#5.\">5. If Else<\/a><\/li>\n    <li><a href=\"#6.\">6. For Loop<\/a><\/li>\n    <li><a href=\"#7.\">7. While Loop<\/a><\/li>\n    <li><a href=\"#8.\">8. Numpy<\/a><\/li>\n        <ul>\n            <li><a href=\"#8.1.\">8.1. Basics<\/a><\/li>\n            <li><a href=\"#8.2.\">8.2. Basic Operations<\/a><\/li>\n            <li><a href=\"#8.3.\">8.3. Indexing and Slicing<\/a><\/li>\n            <li><a href=\"#8.4.\">8.4. Shape Manipulation<\/a><\/li>\n            <li><a href=\"#8.5.\">8.5. Stacking Arrays<\/a><\/li>\n            <li><a href=\"#8.6.\">8.6. Convert and Copy Array<\/a><\/li>\n        <\/ul>\n    <li><a href=\"#9.\">9. Pandas<\/a><\/li>\n        <ul>\n            <li><a href=\"#9.1.\">9.1. Introduction<\/a><\/li>\n            <li><a href=\"#9.2.\">9.2. Basic Methods<\/a><\/li>\n            <li><a href=\"#9.3.\">9.3. Indexing and Slicing<\/a><\/li>\n            <li><a href=\"#9.4.\">9.4. Filtering<\/a><\/li>\n            <li><a href=\"#9.5.\">9.5. List Comprehension<\/a><\/li>\n            <li><a href=\"#9.6.\">9.6. Drop and Concatenating Data<\/a><\/li>\n            <li><a href=\"#9.7.\">9.7. Transforming Data<\/a><\/li>\n        <\/ul>\n    <li><a href=\"#10.\">10. Matplotlib<\/a><\/li>\n        <ul>\n            <li><a href=\"#10.1.\">10.1. Pandas Review<\/a><\/li>\n            <li><a href=\"#10.2.\">10.2. Line Plot<\/a><\/li>\n            <li><a href=\"#10.3.\">10.3. Scatter Plot<\/a><\/li>\n            <li><a href=\"#10.4.\">10.4. Histogram<\/a><\/li>\n            <li><a href=\"#10.5.\">10.5. Bar Plot<\/a><\/li>\n            <li><a href=\"#10.6.\">10.6. Sub Plot<\/a><\/li>\n        <\/ul>\n<\/ul>","bc4ebbef":"<a id=\"1.\"><\/a> <br>\n# 1. Variable","869c1b9d":"<a id=\"9.2.\"><\/a> <br>\n**9.2.Basic Methods **"}}