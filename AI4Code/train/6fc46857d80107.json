{"cell_type":{"dbcc327a":"code","bfe66578":"code","19a82d69":"code","aca1853c":"code","84fec0a2":"code","5d74779a":"code","cfc85056":"code","244e4620":"code","c64e8f9a":"code","251361fd":"code","38bfde8c":"code","65c760d3":"code","34517898":"code","e4f286ac":"code","8439162f":"code","3902d219":"code","c81ae402":"markdown","980159f8":"markdown","74236c0d":"markdown","75094566":"markdown","1e13a344":"markdown","ad3569c9":"markdown","8c265c20":"markdown","e6f96064":"markdown","366ff3ee":"markdown","e7a279c2":"markdown","8d389b5f":"markdown","12dbf5bd":"markdown","4120caf9":"markdown","31311759":"markdown","d53aed7f":"markdown","7324be81":"markdown","e17ea2e7":"markdown","6d67035b":"markdown","4817839f":"markdown","fc420de8":"markdown"},"source":{"dbcc327a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport sqlite3\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bfe66578":"con=sqlite3.connect('\/kaggle\/input\/clubhouse-dataset\/Clubhouse_Dataset_v1.db')\ncursor=con.cursor()\ncursor.execute('SELECT name FROM sqlite_master WHERE type=\"table\";')\nprint(cursor.fetchall())\n","19a82d69":"df=pd.read_sql_query('SELECT * FROM user',con)\ndf.head()\n","aca1853c":"df.replace('null','',inplace=True)\ndf.head()\n\n","84fec0a2":"sns.set_palette('pastel')\nsns.set_style('dark')\nsns.set_theme()\nplt.figure(figsize=(20,6))\ndf['time_created']=pd.to_datetime(df['time_created']).apply(lambda x:x.date())\n#Creating a seperate dataframe with the time and number of unique ids created\ngrowth_over_time=pd.DataFrame(df.groupby('time_created')['user_id'].nunique(dropna=True).reset_index())\ngrowth_over_time.columns=['time_created','unique_ids']\n\n#plotting the line chart\ng=sns.lineplot(x='time_created',y='unique_ids', data=growth_over_time,color='green')\n#we'll convert the 1000's into 'k' for the y-axis\nyticks=[ '%.f k'%g for g in g.get_yticks()\/1000]\ng.set_yticklabels(yticks)\n\n\n\n","5d74779a":"\nplt.figure(figsize=(20,6))\nprint(type(df['num_followers']))\nbins=[0,100,500,1000,500000,df['num_followers'].max()]\nfollowers_category=['<100','100 - 500','500 - 1000','1000-500000','>500000']\nnumber_of_users=pd.cut(df['num_followers'],bins=bins,labels=followers_category)\n\nprint(number_of_users.value_counts())\n\ng=sns.barplot(y=number_of_users.value_counts().index,x=number_of_users.value_counts(normalize=True)*100)\nplt.xlabel('Number of Users (%)')\nplt.ylabel('Number of Followers')\n\n","cfc85056":"plt.figure(figsize=(10,10))\nnumber_of_users.value_counts().plot.pie(autopct=\"%.1f%%\",explode=[.3]*5,labels=followers_category)\nplt.title('Number of users with said category of followers',fontsize=15,pad=10)\nplt.ylabel('')","244e4620":"import plotly.express as px\n\nfig=px.pie(number_of_users,values=number_of_users.value_counts(),names=number_of_users.value_counts().index)\nfig.show()","c64e8f9a":"import plotly.graph_objects as go\n\nfig=go.Figure(data=[go.Pie(values=number_of_users.value_counts(),labels=number_of_users.value_counts().index,pull=[0.02]*5,hole=.3),])\nfig.show()","251361fd":"Number_of_unique_Instas=df['instagram'].nunique()\nNot_linked=df[df['instagram']=='']['instagram'].count()\nTotal_count=df['instagram'].count()\n\nprint(df['instagram'].isna().any())\nprint('Number of unique Instagram accounts linked:  %.f '%Number_of_unique_Instas)\nprint('Number of Clubhouse accounts not linked to an Instagram account: %.f'%Not_linked)\nprint('Total Number of instagrams accounts associated with multiple Clubhouse accounts: %.f'%(Total_count - Not_linked - Number_of_unique_Instas) )\n\nplt.figure(figsize=(15,6))\nplt.title('Instagram users with Multiple Clubhouse accounts',pad=15)\nf=sns.barplot(x=df[df['instagram']!='']['instagram'].value_counts().nlargest(10).index,y=df[df['instagram']!='']['instagram'].value_counts().nlargest(10))\nplt.xticks(rotation=90,fontsize=15)\nplt.ylabel('Number of Clubhouse accounts')\nplt.xlabel('Instagram Users')","38bfde8c":"Number_of_unique_Twits=df['twitter'].nunique()\nNot_linked=df[df['twitter']=='']['twitter'].count()\nTotal_count=df['twitter'].count()\n\nprint(df['twitter'].isna().any())\nprint('Number of unique Twitter accounts linked:  %.f '%Number_of_unique_Twits)\nprint('Number of Clubhouse accounts not linked to an Twitter account: %.f'%Not_linked)\nprint('Total Number of Twitter accounts associated with multiple Clubhouse accounts: %.f'%(Total_count - Not_linked - Number_of_unique_Twits) )\n\nplt.figure(figsize=(15,6))\nplt.title('Twitter users with Multiple Clubhouse accounts',pad=15)\nf=sns.barplot(x=df[df['twitter']!='']['twitter'].value_counts().nlargest(10).index,y=df[df['twitter']!='']['twitter'].value_counts().nlargest(10))\nplt.xticks(rotation=90,fontsize=15)\nplt.ylabel('Number of Clubhouse accounts')\nplt.xlabel('Twitter Users')","65c760d3":"plt.figure(figsize=(8,8))\nproportion_of_instas=Number_of_unique_Instas\/df.shape[0]*100\nproportion_of_twits=Number_of_unique_Twits\/df.shape[0]*100\nproportion_not_linked= df[(df['instagram']=='')&(df['twitter']=='')].shape[0]\/df.shape[0]*100\nproportion_linked_to_both=df[(df['instagram']!='')&(df['twitter']!='')].shape[0]\/df.shape[0]*100\nf= sns.barplot(x=['Instagram','Twitter','Linked To Both','Not Linked To Either'],y=[proportion_of_instas,proportion_of_twits,proportion_linked_to_both,proportion_not_linked])\nfor i in f.patches:\n    f.text(i.get_x()+.2,i.get_height()+.3,'%.2f%%'%i.get_height(),weight='bold')\nplt.title('Accounts linked',pad=30,fontsize=15 )","34517898":"df.nlargest(10,columns='num_followers')","e4f286ac":"max_invites=pd.DataFrame(df['invited_by_user_profile'].value_counts().reset_index())\nmax_invites.columns=['user_id','Number_of_invites_sent_by_user']\nmax_invites\n","8439162f":"New_df=pd.merge(df,max_invites,on='user_id',how='inner')\nNew_df.nlargest(15,columns='Number_of_invites_sent_by_user')","3902d219":"plt.figure(figsize=(15,6))\ninvites_top_10=New_df.nlargest(10,columns='Number_of_invites_sent_by_user')\nsns.barplot(x=invites_top_10.name,y=invites_top_10.Number_of_invites_sent_by_user)\nplt.xticks(rotation=45)\nplt.xlabel('User name')\nplt.ylabel('Number of invites sent')","c81ae402":"#### *JAZMINsisters is really digging this app. Wonderful!*","980159f8":"# *3. To link or not to link*","74236c0d":"#### *Easier on the eyes*\n*Hover over the chart*\n\n*Click on the legend to exculde a given category*","75094566":"# *2. Proportion of Users with respect to their follower count*\n","1e13a344":"#### *All things are better with some pie* :P\n","ad3569c9":"*1. **47.86%** of all profiles are linked to Instagram*\n\n*2. **34.54%** of all profiles are linked to Twitter*\n\n*3.  **22.98%** of all profiles are linked to both*\n\n*4. **40.46%** of all profiles chose not to link their account*","8c265c20":"#### *I notice Tiffany, Jared and Meek Mill among the few celebrities. Let me know in the comments if you have a favorite celebrity in there*","e6f96064":"#### *Twitter meets Clubhouse*","366ff3ee":"#### *Signups were at a peak during the start of 2021 with a steady build up from the month of November of last year*","e7a279c2":"#### *Instagram meets Clubhouse*","8d389b5f":"#### *looks like David Castain has invited the most number of people. He's an entrprenuer and philanthropist and he already sounds like a cool dude*","12dbf5bd":"##### *Anyways, hope this was informative and thanks for reading!*\n\n##### *Any and all feedback is appreciated*","4120caf9":"#### *This is what I am talking about!*\n*Donuts for life*","31311759":"# *5. Top 10 users that invited the most number of people*","d53aed7f":"#### *First lets checkout the database to locate the name of the table we are searching for.*","7324be81":"#### *Looks like we have a bunch of null values. So lets replace that with spaces.*","e17ea2e7":"# *Clubhouse*\n\n#### *Clubhouse is an invitation-only social media app for iOS that facilitates auditory communication through rooms that can accommodate groups of up to 5,000 people. The audio-only app hosts virtual rooms for live discussions, with opportunities for individuals to participate through speaking and listening. Prominent celebrities that have jumped in on this includes Elon Musk, Bill Gates, Ashton Kutcher, Oprah and etc.*\n\n#### *I am still waiting for my invite. Just putting it out there.* ","6d67035b":"# *4. Top 10 Users with the highest number of followers*","4817839f":"#### *We can observe that more than 70% of the users in Clubhouse have less than 100 followers followed by a 20% within the 100-500 followers band group.*","fc420de8":"#### *Much better!*\n#  *1. Now lets take a look at their growth over time*\n"}}