{"cell_type":{"7d977ca8":"code","e3b0334a":"code","a1130d84":"code","e4bb9697":"code","5504adb0":"code","94b8ce6d":"code","1d000fef":"code","32013168":"code","7d18462a":"code","f4000743":"code","92682da6":"code","a3f34781":"code","600dbf77":"code","60968766":"code","558aeb25":"code","e14b66f8":"code","f88586f8":"code","85040c88":"code","6daa97dd":"code","507cd4b8":"code","42ebe220":"code","621012b5":"code","bc5dd110":"code","bce4d20f":"code","835fa5bb":"code","aced1cfa":"code","cb13a8ae":"code","88171d12":"code","f32a549e":"code","85b13ca3":"code","bd3f9b92":"code","f0cfa7cf":"code","b8de687d":"code","3ead9db6":"code","de7c0ebc":"code","5f6163e7":"code","4108826e":"code","e75e5f98":"code","ee09f921":"code","72258ef9":"code","e3c457e6":"code","ee1d5f0a":"code","5919ca3f":"code","8414f754":"code","dc9d1e01":"code","435dcdb8":"code","ce4dc904":"markdown","d11f5729":"markdown","b50ba528":"markdown","f80501c9":"markdown","03c6c79c":"markdown","50f709bb":"markdown","5730d39e":"markdown","aa6872db":"markdown","e87ac679":"markdown","d3d0d42a":"markdown","7ab925e3":"markdown","8432cae0":"markdown","a1e9dcc1":"markdown","04010725":"markdown","1dbfb3fe":"markdown","05891e59":"markdown","8fcccdfc":"markdown","11238390":"markdown","83eddb32":"markdown","ba653903":"markdown","833910ea":"markdown","c90131d2":"markdown","2d0309b8":"markdown","ffc609b6":"markdown","605f0754":"markdown","de077c8c":"markdown","4778c78c":"markdown","75d26deb":"markdown","06e54114":"markdown"},"source":{"7d977ca8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sbn\nimport os","e3b0334a":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import MultinomialNB, GaussianNB","a1130d84":"from sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix, recall_score, precision_score, f1_score\nfrom sklearn.preprocessing import MinMaxScaler","e4bb9697":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ntrain_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\nx_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ny_test = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\npd.set_option(\"display.max_columns\", 12)\ntrain_data.head()","5504adb0":"train_data.shape","94b8ce6d":"x_test.shape","1d000fef":"train_data.drop([\"PassengerId\", \"Name\", \"Ticket\", \"Cabin\", \"Embarked\"], axis = 1, inplace = True)\nx_test.drop([\"PassengerId\", \"Name\", \"Ticket\", \"Cabin\", \"Embarked\"], axis = 1, inplace = True)\ny_test.drop([\"PassengerId\"], axis = 1, inplace = True)","32013168":"train_data[\"Sex\"] = np.where(train_data[\"Sex\"] == \"female\", 1, 0)\nx_test[\"Sex\"] = np.where(x_test[\"Sex\"] == \"female\", 1, 0)","7d18462a":"Missing_values_percent = 100*(train_data.isnull().sum()\/len(train_data[\"Sex\"]))\nprint(Missing_values_percent)","f4000743":"sbn.displot(train_data[\"Age\"], kde = True, bins = 40)\nplt.show()","92682da6":"train_data[\"Age\"].fillna(train_data[\"Age\"].mean(), inplace = True)","a3f34781":"sbn.displot(train_data[\"Age\"], kde = True, bins = 20)\nplt.show()","600dbf77":"Missing_values_percent = 100*(train_data.isnull().sum()\/len(train_data[\"Sex\"]))\nprint(Missing_values_percent)","60968766":"Missing_values_percent_test = 100*(x_test.isnull().sum()\/len(x_test[\"Sex\"]))\nprint(Missing_values_percent_test)","558aeb25":"sbn.displot(x_test[\"Age\"], kde = True, bins = 30)\nplt.show()","e14b66f8":"x_test[\"Age\"].fillna(x_test[\"Age\"].mean(), inplace = True)","f88586f8":"sbn.displot(x_test[\"Age\"], kde = True, bins = 20)\nplt.show()","85040c88":"x_test[\"Fare\"].fillna(x_test[\"Fare\"].mean(), inplace = True)","6daa97dd":"Missing_values_percent_test = 100*(x_test.isnull().sum()\/len(x_test[\"Sex\"]))\nprint(Missing_values_percent_test)","507cd4b8":"train_data.dtypes","42ebe220":"x_test.dtypes","621012b5":"y_test.dtypes","bc5dd110":"plt.figure(figsize = (7,6))\nDatacopy1 = train_data.copy()\nDatacopy1['Sex'] = Datacopy1['Sex'].replace({1: 'female', 0: 'male'})\nsbn.countplot(x= \"Sex\", hue= \"Survived\", data = Datacopy1)\nplt.show()","bce4d20f":"plt.figure(figsize = (6,6))\nYes_Survived_train = Datacopy1.loc[train_data[\"Survived\"] == 1]\nYes_Survived_train = Yes_Survived_train[\"Sex\"]\nYes_Survived_train.value_counts().plot(kind='pie', autopct='%1.1f%%')\nplt.title(\"Survivors\")\nplt.show()","835fa5bb":"plt.figure(figsize = (6,6))\nNO_Survived_train = Datacopy1.loc[train_data[\"Survived\"] == 0]\nNO_Survived_train = NO_Survived_train[\"Sex\"]\nNO_Survived_train.value_counts().plot(kind='pie', autopct='%1.1f%%')\nplt.title(\"No Survivors\")\nplt.show()","aced1cfa":"plt.figure(figsize = (7,6))\nDatacopy2 = train_data.copy()\nDatacopy2['Pclass'] = Datacopy2['Pclass'].replace({3: '3rd', 2: '2nd', 1: '1st'})\nsbn.countplot(x= \"Pclass\", hue= \"Survived\", data = Datacopy2)\nplt.show()","cb13a8ae":"plt.figure(figsize = (10,8))\nsbn.heatmap(train_data.corr(), annot = True, vmin = 0, cmap = \"coolwarm\")\nplt.show()","88171d12":"triu = np.triu(train_data.corr())\nplt.figure(figsize = (10,8))\nsbn.heatmap(train_data.corr(), annot = True, vmin = 0, vmax = 1, cmap = \"coolwarm\", mask = triu)\nplt.show()","f32a549e":"tril = np.tril(train_data.corr())\nplt.figure(figsize = (10,8))\nsbn.heatmap(train_data.corr(), annot = True, vmin = 0, vmax = 1, cmap = \"coolwarm\", mask = tril)\nplt.show()","85b13ca3":"norm = MinMaxScaler(feature_range = (0, 1))\nx_train = train_data.drop([\"Survived\"], axis = 1)\nx_train = norm.fit_transform(x_train)\nx_test = norm.fit_transform(x_test)\ny_train = train_data[\"Survived\"]","bd3f9b92":"ModelKNN = KNeighborsClassifier()","f0cfa7cf":"# Fine-tuning\nK_values = np.array([2, 3, 5, 7, 9, 11])\nmetric = [\"minkowski\", \"chebyshev\"]\np = np.array([1, 2, 3, 4])\nparam_grid = {\"n_neighbors\": K_values, \"metric\": metric, \"p\": p}\nGridKNN = GridSearchCV(estimator = ModelKNN, param_grid = param_grid,cv = 5)\nGridKNN.fit(x_train, y_train)","b8de687d":"print(GridKNN.best_score_)\nprint(GridKNN.best_estimator_.n_neighbors)\nprint(GridKNN.best_estimator_.metric)\nprint(GridKNN.best_estimator_.p)","3ead9db6":"ModelKNN = KNeighborsClassifier(n_neighbors=5, p=1, metric = \"minkowski\")\nModelKNN.fit(x_train, y_train)","de7c0ebc":"y_pred = ModelKNN.predict(x_test)","5f6163e7":"Matrix = confusion_matrix(y_test, y_pred)\nprint(Matrix)","4108826e":"plt.figure(figsize = (7,5))\nsbn.heatmap(Matrix, annot = True, vmin = 0,vmax = 300, cmap = \"coolwarm\")\nplt.show()","e75e5f98":"print(f\"Accuracy: {accuracy_score(y_test, y_pred)}\")\nprint(f\"Recall: {recall_score(y_test, y_pred)}\")\nprint(f\"Precision: {precision_score(y_test, y_pred)}\")\nprint(f\"f1_score: {f1_score(y_test, y_pred)}\")","ee09f921":"ModelNBGaussian = GaussianNB()\nModelNBMultino = MultinomialNB()\nModelNBGaussian.fit(x_train, y_train)\nModelNBMultino.fit(x_train, y_train)","72258ef9":"y_predGaussian = ModelNBGaussian.predict(x_test)\ny_predMultino = ModelNBMultino.predict(x_test)","e3c457e6":"MatrixNBGaussian = confusion_matrix(y_test, y_predGaussian)\nprint(MatrixNBGaussian)","ee1d5f0a":"plt.figure(figsize = (7,5))\nsbn.heatmap(MatrixNBGaussian, annot = True, vmin = 0,vmax = 300, cmap = \"coolwarm\")\nplt.show()","5919ca3f":"print(f\"Accuracy: {accuracy_score(y_test, y_predGaussian)}\")\nprint(f\"Recall: {recall_score(y_test, y_predGaussian)}\")\nprint(f\"Precision: {precision_score(y_test, y_predGaussian)}\")\nprint(f\"f1_score: {f1_score(y_test, y_predGaussian)}\")","8414f754":"MatrixMultinomialNB = confusion_matrix(y_test, y_predMultino)\nprint(MatrixMultinomialNB)","dc9d1e01":"plt.figure(figsize = (7,5))\nsbn.heatmap(MatrixMultinomialNB, annot = True, vmin = 20,vmax = 300, cmap = \"coolwarm\")\nplt.show()","435dcdb8":"print(f\"Accuracy: {accuracy_score(y_test, y_predMultino)}\")\nprint(f\"Recall: {recall_score(y_test, y_predMultino)}\")\nprint(f\"Precision: {precision_score(y_test, y_predMultino)}\")\nprint(f\"f1_score: {f1_score(y_test, y_predMultino)}\")","ce4dc904":"# ${\\color{darkred}{4.1}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","d11f5729":"# ${\\color{darkred}{3.2.}}$ ${\\color{darkblue}{\\textbf{Missing Values Treatment}}}$  $\\color{red}{\u2713}$","b50ba528":"# ${\\color{darkred}{5.1}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","f80501c9":"# $\\large{\\color{darkred}{3.}}$ $\\large{\\color{darkblue}{\\textbf{Data Preprocessing}}}$","03c6c79c":"${\\color{darkred}{\\textbf{Prediction}}}$","50f709bb":"# $\\large{\\color{darkred}{2.}}$ $\\large{\\color{darkblue}{\\textbf{Reading the data}}}$ $\\color{red}{\u2713}$","5730d39e":"# ${\\color{darkred}{3.1.}}$ ${\\color{darkblue}{\\textbf{Codification of Categorical variables}}}$  $\\color{red}{\u2713}$","aa6872db":"${\\color{darkred}{\\textbf{MultinomialNB}}}$","e87ac679":"${\\color{darkred}{\\textbf{The survival rate for women was higher than for men.}}}$","d3d0d42a":"GaussianNB\n\nAccuracy: 0.9282296650717703\n\nRecall: 0.9605263157894737\n\nPrecision: 0.8588235294117647\n\nf1_score: 0.906832298136646","7ab925e3":"# ${\\color{darkred}{1.1.}}$ ${\\color{darkblue}{\\textbf{Standard libraries}}}$ $\\color{red}{\u2713}$","8432cae0":"${\\color{darkred}{\\textbf{train_data}}}$ $\\color{blue}{\u2713}$","a1e9dcc1":"# ${\\color{darkred}{1.2.}}$ ${\\color{darkblue}{\\textbf{KNN and MultinomialNB - GaussianNB}}}$ $\\color{red}{\u2713}$","04010725":"# $\\large{\\color{darkred}{5.}}$ $\\large{\\color{darkblue}{\\textbf{Naive Bayes}}}$ $\\color{red}{\u2713}$","1dbfb3fe":"${\\color{darkred}{\\textbf{Medium (-.3 to -.5) correlation (-): Pclass and Survived - Pclass and Age}}}$\n\n${\\color{darkred}{\\textbf{Medium (.3 to .5) correlation (+): SibSp and\tParch}}}$\n\n${\\color{darkred}{\\textbf{Large (-.5 to -1.0) correlation (-): Pclass and Fare}}}$\n\n${\\color{darkred}{\\textbf{Large (.5 to 1.0) correlation (+): Sex and Survived}}}$","05891e59":"${\\color{darkred}{\\textbf{Prediction}}}$","8fcccdfc":"# $\\large{\\color{darkred}{4.}}$ $\\large{\\color{darkblue}{\\textbf{KNN}}}$ $\\color{red}{\u2713}$","11238390":"# $\\Large{\\color{darkblue}{\\textbf{KNN vs Naive Bayes}}}$","83eddb32":"# $\\large{\\color{darkred}{1.}}$ $\\large{\\color{darkblue}{\\textbf{Importing Libraries}}}$ $\\color{red}{\u2713}$","ba653903":"# ${\\color{darkred}{3.3.}}$ ${\\color{darkblue}{\\textbf{dtypes}}}$ $\\color{red}{\u2713}$","833910ea":"${\\color{darkred}{\\textbf{x_test}}}$ $\\color{blue}{\u2713}$","c90131d2":"${\\color{darkred}{\\textbf{Heatmap}}}$","2d0309b8":"---------------\/\/-------------------------\/\/---------------------","ffc609b6":"# ${\\color{darkred}{1.3.}}$ ${\\color{darkblue}{\\textbf{Data split, fine-tuning and Analysis}}}$ $\\color{red}{\u2713}$","605f0754":"# ${\\color{darkred}{3.5.}}$ ${\\color{darkblue}{\\textbf{Data train split}}}$ $\\color{red}{\u2713}$","de077c8c":"# ${\\color{darkred}{3.4.}}$ ${\\color{darkblue}{\\textbf{Correlation}}}$ $\\color{red}{\u2713}$","4778c78c":"![Untitled (12).jpg](attachment:73e0f29a-573f-4dc0-86f0-5bc47780da51.jpg)","75d26deb":"${\\color{darkred}{\\textbf{GaussianNB}}}$","06e54114":"![titanic2-0349859403-2203948..capa_widexl.jpg](attachment:527f8e68-cdc8-439c-ab46-bc32512f8cea.jpg)"}}