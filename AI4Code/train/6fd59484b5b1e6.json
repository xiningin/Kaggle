{"cell_type":{"834f439f":"code","26c8f422":"code","63c8ef1f":"code","d4aabe30":"code","17d60834":"code","ae01c7e0":"code","49e9cf92":"code","6cd4db8c":"code","f04f6e1d":"code","d1eeb31f":"code","0aec3677":"code","907aaf61":"code","4f9e112d":"code","6f3b05cb":"code","030649db":"code","c47e41b6":"code","15647f20":"code","a96962a9":"code","25c6784d":"code","bb6be0dc":"code","6fbf4fbc":"code","00895e95":"code","31d73ad3":"code","c61eea7c":"code","cfadd1e6":"code","75254a6c":"code","4eaeb906":"code","6ec2f63d":"code","c2013a85":"code","3f4e5a3e":"code","df23f6ba":"code","567a6bde":"markdown","9038f96f":"markdown","346594bf":"markdown","ef4c8c3a":"markdown","6103d2aa":"markdown","6c80a72f":"markdown","f25b23da":"markdown","91cc5dbf":"markdown","42f1c0d6":"markdown","ee00e84c":"markdown","03bc0bc5":"markdown","f689c121":"markdown","3b9b6508":"markdown","bdcaf485":"markdown","1aa935cf":"markdown","1b1b00d7":"markdown","3f5c0eb1":"markdown"},"source":{"834f439f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt","26c8f422":"df= pd.read_csv('..\/input\/iris\/Iris.csv')","63c8ef1f":"df.head()","d4aabe30":"df.drop(columns='Id',inplace= True)","17d60834":"df.info()","ae01c7e0":"df.describe()","49e9cf92":"sns.pairplot(df,hue='Species')","6cd4db8c":"df.replace(['Iris-setosa','Iris-versicolor','Iris-virginica'],['setosa','versicolor','virginica'],inplace=True)","f04f6e1d":"df.groupby('Species').count().T","d1eeb31f":"(df['Species'].value_counts()).plot(kind='bar',color = ['red', 'green','blue'])","0aec3677":"#axs = plt.subplots(1,4)\n#sns.barplot(x='Species',y='PetalWidthCm',data=df,ax=axs[0,0])\n#sns.barplot(x='Species',y='PetalLengthCm',data=df,ax=axs[0,1])\n#sns.barplot(x='Species',y='SepalWidthCm',data=df,ax=axs[0,2])\n#sns.barplot(x='Species',y='SepalLengthCm',data=df,ax=axs[0,3])","907aaf61":"sns.barplot(x='Species',y='SepalLengthCm',data=df)","4f9e112d":"sns.barplot(x='Species',y='PetalLengthCm',data=df)","6f3b05cb":"sns.barplot(x='Species',y='SepalWidthCm',data=df)","030649db":"sns.barplot(x='Species',y='PetalWidthCm',data=df)","c47e41b6":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler","15647f20":"df_encoded= df.copy()","a96962a9":"label= LabelEncoder()\ndf_encoded['labels']= label.fit_transform(df['Species'])","25c6784d":"list(label.inverse_transform([0, 1, 2]))","bb6be0dc":"df_encoded['labels'].astype('category')","6fbf4fbc":"x= df_encoded.drop(columns=['labels','Species'])\ny=df_encoded['labels']","00895e95":"x_scaled= StandardScaler().fit_transform(x)","31d73ad3":"x_train,x_test,y_train,y_test= train_test_split(x_scaled,y,test_size= 0.3,random_state=101)","c61eea7c":"accuracy=[]\nfor i in range(1,40):\n  knn= KNeighborsClassifier(n_neighbors=i)\n  score= cross_val_score(knn,df_encoded.drop(columns=['Species']),df_encoded['labels'],cv=10)\n  accuracy.append(score.mean())","cfadd1e6":"plt.figure(figsize=(10,6))\nplt.plot(range(1,40),accuracy,color='black',linestyle='dashed',marker='o',markerfacecolor='red',markersize=10)\nplt.xlabel('K')\nplt.ylabel('accuracy rate')","75254a6c":"error_rate = []\nfor i in range(1,40):\n knn = KNeighborsClassifier(n_neighbors=i)\n knn.fit(x_train,y_train)\n pred_i = knn.predict(x_test)\n error_rate.append(np.mean(pred_i != y_test))\n\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', \n         marker='o',markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')\nprint(\"Minimum error:-\",min(error_rate),\"at K =\",error_rate.index(min(error_rate)))","4eaeb906":"acc = []\n# Will take some time\nfrom sklearn import metrics\nfor i in range(1,40):\n    neigh = KNeighborsClassifier(n_neighbors = i).fit(x_train,y_train)\n    yhat = neigh.predict(x_test)\n    acc.append(metrics.accuracy_score(y_test, yhat))\n    \nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),acc,color = 'blue',linestyle='dashed', \n         marker='o',markerfacecolor='red', markersize=10)\nplt.title('accuracy vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Accuracy')\nprint(\"Maximum accuracy:-\",max(acc),\"at K =\",acc.index(max(acc)))","6ec2f63d":"neigh1 = KNeighborsClassifier(n_neighbors = i).fit(x_train,y_train)\npred1 = neigh1.predict(x_test)\nprint(metrics.confusion_matrix(y_test,pred1))\nprint(metrics.classification_report(y_test,pred1))","c2013a85":"def predict(x_input):\n  neigh2 = KNeighborsClassifier(n_neighbors = 6).fit(x_train,y_train)\n  pred2 = neigh1.predict(x_input)\n  if pred2.flatten()==0:\n    print('Belongs to species : Setosa')\n  elif pred2.flatten()==1:\n    print('Belongs to species : Versicolor')\n  else:\n    print('Belongs to species : Virginica')","3f4e5a3e":"x_input=[[10,20,4,30]]\npredict(x_input)","df23f6ba":"#x_input=[]\n#for i in ['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']:\n  #a = float(input(f'Enter the value for {i}:'))\n  #x_input.append(a)\n#x_input= (np.array(x_input)).reshape(1,-1)\n#predict(x_input)","567a6bde":"Observation:\n\nBoth error rate and Accuracy rate K=6 as the optimum value","9038f96f":"# Visualizing the features indivually using barplot","346594bf":"# Accuracy Rate","ef4c8c3a":"# Splitting the dataset into dependent (Y) and independent (X) variables","6103d2aa":"# Encoding the target feature into numbers using label encoding and then converting the feature into categorical data type","6c80a72f":"# **KNN model**","f25b23da":"# Visualizing the features of the dataset with respect to the target feature inorder visualize the clusters formations:","91cc5dbf":"### **Observations:**\n\nNo outliers or missing values noticed.","42f1c0d6":"# for user-input independent features the below can be used:","ee00e84c":"## Observations:\n\nThe length and width of petal and length Sepal seems to be in the incresing from setosa to virginica while incase sepal width Setosa seems to be higher","03bc0bc5":"## Now lets try and classify a value","f689c121":"### Observations:\n\nThe above visualization proved that this is a balanced dataset","3b9b6508":"## Utilizing info() and describe to check the type of Data and to see probable missing values and outliers:","bdcaf485":"### **Observations:**\n\n- The setosa category seems to be forming a separate cluster throughout while overlapping is observed for other two categories","1aa935cf":"# ERROR Rate","1b1b00d7":"# Choosing the value of k by calculating the rate of accuracy using cross-validaion","3f5c0eb1":"# Checking if the categories are balanced or imbalanced using groupby and barplot:"}}