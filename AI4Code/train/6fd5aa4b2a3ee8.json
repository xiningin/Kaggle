{"cell_type":{"23b9a6b4":"code","fbbc5306":"code","18246138":"code","4249861f":"code","e294a1e9":"code","930cec2b":"code","b5d0844d":"code","2a7f8583":"code","2c73b5a9":"code","88286cda":"code","dd825ae1":"code","a1341f1e":"code","678797a5":"code","189e858c":"code","9f928470":"code","5bc57652":"code","aabf9dc5":"code","a51686ae":"code","e37b0267":"code","e57c9be2":"code","9a21037a":"code","fed71617":"code","1a2d585b":"markdown","cc6d0070":"markdown","70541b20":"markdown","670eb34a":"markdown","1b7596b0":"markdown","bac6f816":"markdown","9235cbc6":"markdown","432a9915":"markdown","5d72ab80":"markdown","6105470f":"markdown","eb037f14":"markdown","07bfec5c":"markdown","f4ed5429":"markdown","b89fce92":"markdown","d4c7d99b":"markdown","1c71bc9d":"markdown","fc75e5d9":"markdown","2c9a4917":"markdown","80b884f0":"markdown","a5bf26df":"markdown","d04874a2":"markdown"},"source":{"23b9a6b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fbbc5306":"# reading data\ntrain = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","18246138":"train.shape, test.shape","4249861f":"train.isna().sum().sort_values()[-19:-1]","e294a1e9":"test.isna().sum().sort_values()[-33:-1]","930cec2b":"#Filling with \"NA\" string\nfor col in ['Alley','FireplaceQu','Fence','MiscFeature','PoolQC']:\n    train[col].fillna('NA', inplace=True)\n    test[col].fillna('NA', inplace=True)","b5d0844d":"train['LotFrontage'].value_counts()","2a7f8583":"train['LotFrontage'].fillna(train[\"LotFrontage\"].value_counts().to_frame().index[0], inplace=True)\ntest['LotFrontage'].fillna(test[\"LotFrontage\"].value_counts().to_frame().index[0], inplace=True)","2c73b5a9":"train[['GarageQual','GarageFinish','GarageYrBlt','GarageType','GarageCond']].isna().head(7)","88286cda":"for col in ['GarageQual','GarageFinish','GarageYrBlt','GarageType','GarageCond']:\n    train[col].fillna('NA',inplace=True)\n    test[col].fillna('NA',inplace=True)","dd825ae1":"for col in ['BsmtQual','BsmtCond','BsmtFinType1','BsmtFinType2','BsmtExposure']:\n    train[col].fillna('NA',inplace=True)\n    test[col].fillna('NA',inplace=True)","a1341f1e":"train['Electrical'].value_counts()","678797a5":"train['Electrical'].fillna('SBrkr',inplace=True)","189e858c":"missings = ['GarageCars','GarageArea','KitchenQual','Exterior1st','SaleType','TotalBsmtSF','BsmtUnfSF','Exterior2nd',\n            'BsmtFinSF1','BsmtFinSF2','BsmtFullBath','Functional','Utilities','BsmtHalfBath','MSZoning']\ntrain[missings].head()","9f928470":"numerical=['GarageCars','GarageArea','TotalBsmtSF','BsmtUnfSF','BsmtFinSF1','BsmtFinSF2','BsmtFullBath','BsmtHalfBath']\ncategorical = ['KitchenQual','Exterior1st','SaleType','Exterior2nd','Functional','Utilities','MSZoning']","5bc57652":"# using Imputer class of sklearn libs.\nfrom sklearn.preprocessing import Imputer\nimputer = Imputer(strategy='median',axis=0)\nimputer.fit(test[numerical] + train[numerical])\ntest[numerical] = imputer.transform(test[numerical])\ntrain[numerical] = imputer.transform(train[numerical])","aabf9dc5":"for i in categorical:\n    train[i].fillna(train[i].value_counts().to_frame().index[0], inplace=True)\n    test[i].fillna(test[i].value_counts().to_frame().index[0], inplace=True)    ","a51686ae":"train[train['MasVnrType'].isna()][['SalePrice','MasVnrType','MasVnrArea']]","e37b0267":"print(train[train['MasVnrType']=='None']['SalePrice'].median())\nprint(train[train['MasVnrType']=='BrkFace']['SalePrice'].median())\nprint(train[train['MasVnrType']=='Stone']['SalePrice'].median())\nprint(train[train['MasVnrType']=='BrkCmn']['SalePrice'].median())","e57c9be2":"train['MasVnrArea'].fillna(181000,inplace=True)\ntest['MasVnrArea'].fillna(181000,inplace=True)\n\ntrain['MasVnrType'].fillna('NA',inplace=True)\ntest['MasVnrType'].fillna('NA',inplace=True)","9a21037a":"print(train.isna().sum().sort_values()[-5:-1])\nprint(test.isna().sum().sort_values()[-5:-1])","fed71617":"# train.to_csv('new_train',index=False)\n# test.to_csv('new_test',index=False)","1a2d585b":"<pre>This column is categorical columns but it has numerical values.so i'm gonna fill this values with most frequent value of the column, below code return most frequent value.<pre\/> \ntrain[\"LotFrontage\"].value_counts().to_frame().index[0]","cc6d0070":"### in this column, maximum value has 'SBrkr' category.so simply fillna with 'SBrkr'.","70541b20":"for categorical columns filling NaN with most frequent value of the column.","670eb34a":" ### 5) LotFrontage: Linear feet of street connected to property","1b7596b0":"### Belows bunch of columns has 1,2,4 missing values.so i'm gonna use same strategy for all columns.","bac6f816":"<pre>here i am going to clean data or fill NaN values.\nunderstanding all coulumns and then apply best strategy for filling null values.\nso lets start<pre\/>\n*if you find anything helpful please upvote*","9235cbc6":"# Data Cleaning","432a9915":"in the test set 32 columns has null values","5d72ab80":"saving files (optional)","6105470f":"for numerical columns filling NaN as median value.","eb037f14":"### In below 6-9 columns,null value means there is no Garage, because these columns has same no of missing values and with same rows.so ican say that null values means No Garage. ","07bfec5c":"### 11)BsmtQual: Evaluates the height of the basement\n\n       Ex\tExcellent (100+ inches)\t\n       Gd\tGood (90-99 inches)\n       TA\tTypical (80-89 inches)\n       Fa\tFair (70-79 inches)\n       Po\tPoor (<70 inches\n       NA\tNo Basement\t\t\n### 12)BsmtCond: Evaluates the general condition of the basement\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical - slight dampness allowed\n       Fa\tFair - dampness or some cracking or settling\n       Po\tPoor - Severe cracking, settling, or wetness\n       NA\tNo Basement\t\n### 13)BsmtExposure: Refers to walkout or garden level walls\n\n       Gd\tGood Exposure\n       Av\tAverage Exposure (split levels or foyers typically score average or above)\t\n       Mn\tMimimum Exposure\n       No\tNo Exposure\n       NA\tNo Basement\t\n### 14)BsmtFinType1: Rating of basement finished area\n\n       GLQ\tGood Living Quarters\n       ALQ\tAverage Living Quarters\n       BLQ\tBelow Average Living Quarters\t\n       Rec\tAverage Rec Room\n       LwQ\tLow Quality\n       Unf\tUnfinshed\n       NA\tNo Basement\n### 15)BsmtFinType2: Rating of basement finished area (if multiple types)\n\n       GLQ\tGood Living Quarters\n       ALQ\tAverage Living Quarters\n       BLQ\tBelow Average Living Quarters\t\n       Rec\tAverage Rec Room\n       LwQ\tLow Quality\n       Unf\tUnfinshed\n       NA\tNo Basement","f4ed5429":"## Thank you, upvote if you like","b89fce92":"### for belows columns applying same strategy of Garage,null values means No Basement.","d4c7d99b":"dereferencing numerical and categorical columns.","1c71bc9d":"### 1)MiscFeature: Miscellaneous feature not covered in other categories\nhere null values means,NA means the house does not have any features so,simply NA is a one type of category so,filled as 'NA'.belows categories of MiscFeature Columns\n\n           Elev\tElevator\n           Gar2\t2nd Garage (if not described in garage section)\n           Othr\tOther\n           Shed\tShed (over 100 SF)\n           TenC\tTennis Court\n           NA\tNone \n### 2)Alley: Type of alley access to property\nhere null values means,NA means the house does not have alley access so,simply NA is a one type of category so,filled as 'NA'.belows categories of Alley Columns\n\n           Grvl\tGravel\n           Pave\tPaved\n           NA \tNo alley access\n### 3)FireplaceQu: Fireplace quality\nhere null values means,NA means the house does not have Fireplace so,simply NA is a one type of category so,filled as 'NA'. belows categories of FireplaceQu Columns\n\n           Ex\tExcellent - Exceptional Masonry Fireplace\n           Gd\tGood - Masonry Fireplace in main level\n           TA\tAverage - Prefabricated Fireplace in main living area or Masonry Fireplace in basement\n           Fa\tFair - Prefabricated Fireplace in basement\n           Po\tPoor - Ben Franklin Stove\n           NA\tNo Fireplace\n### 4)Fence: Fence quality\nhere null values means,NA means the house does not have Fence so,simply NA is a one type of category so,filled as 'NA'.belows categories of Fence Columns\n\n           GdPrv\tGood Privacy\n           MnPrv\tMinimum Privacy\n           GdWo\tGood Wood\n           MnWw\tMinimum Wood\/Wire\n           NA\tNo Fence\n### 4)PoolQC: Pool quality <- same as above, NaN = No pool\n\t\t\n       Ex\tExcellent\n       Gd\tGood\n       TA\tAverage\/Typical\n       Fa\tFair\n       NA\tNo Pool\t      ","fc75e5d9":"there are 18 features has null rows ","2c9a4917":"### 16)Electrical: Electrical system\n\n       SBrkr\tStandard Circuit Breakers & Romex\n       FuseA\tFuse Box over 60 AMP and all Romex wiring (Average)\t\n       FuseF\t60 AMP Fuse Box and mostly Romex wiring (Fair)\n       FuseP\t60 AMP Fuse Box and mostly knob & tube wiring (poor)\n       Mix\tMixed","80b884f0":"> that's it, there no missing values","a5bf26df":"### 17)MasVnrType: Masonry veneer type\n\n       BrkCmn\tBrick Common\n       BrkFace\tBrick Face\n       CBlock\tCinder Block\n       None\tNone\n       Stone\tStone\n carefully here Null value means not \"None\", because the column(17) has already 'None's. value\t\n### 18)MasVnrArea: Masonry veneer area in square feet <- for this column filling NaN with median value if 'saleprice' which 'masVnrType' in 'BrkFace' category. look below code you will understand.","d04874a2":"\t\t\n### 6)GarageType: Garage location\n\t\t\n       2Types\tMore than one type of garage\n       Attchd\tAttached to home\n       Basment\tBasement Garage\n       BuiltIn\tBuilt-In (Garage part of house - typically has room above garage)\n       CarPort\tCar Port\n       Detchd\tDetached from home\n       NA\tNo Garage\n### 7)GarageFinish: Interior finish of the garage\n\n       Fin\tFinished\n       RFn\tRough Finished\t\n       Unf\tUnfinished\n       NA\tNo Garage\n### 8)GarageQual: Garage quality\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor\n       NA\tNo Garage\n### 9)GarageCond: Garage condition\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor\n       NA\tNo Garage\n       \n ### 10)GarageYrBlt: Year garage was built <- if there is no garage then not possible build year so , filling with NA"}}