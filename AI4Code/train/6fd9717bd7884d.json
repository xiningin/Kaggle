{"cell_type":{"ce7b5431":"code","c1d4d4f2":"code","092291c5":"code","3db56a42":"code","296d7b24":"code","6992119b":"code","0f3eec33":"markdown"},"source":{"ce7b5431":"import lightgbm as lgb\nimport pandas as pd\nimport numpy as np\n\nfrom datetime import datetime\nfrom pathlib import Path\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import RepeatedStratifiedKFold","c1d4d4f2":"path=Path(\"..\/input\/\")\ntrain=pd.read_csv(path\/\"train.csv\").drop(\"ID_code\",axis=1)\ntest=pd.read_csv(path\/\"test.csv\").drop(\"ID_code\",axis=1)","092291c5":"## Inspiration from\n#https:\/\/www.kaggle.com\/jiweiliu\/lgb-2-leaves-augment\ndef augment(train,num_n=1,num_p=2):\n    newtrain=[train]\n    \n    n=train[train.target==0]\n    for i in range(num_n):\n        newtrain.append(n.apply(lambda x:x.values.take(np.random.permutation(len(n)))))\n    \n    for i in range(num_p):\n        p=train[train.target>0]\n        newtrain.append(p.apply(lambda x:x.values.take(np.random.permutation(len(p)))))\n    return pd.concat(newtrain)\n#df=oversample(train,2,1)","3db56a42":"param = {\n   \"objective\" : \"binary\",\n    \"metric\" : \"auc\",\n    \"boosting\": 'gbdt',\n    \"max_depth\" : -1,\n    \"num_leaves\" : 13,\n    \"learning_rate\" : 0.01,\n    \"bagging_freq\": 5,\n    \"bagging_fraction\" : 0.4,\n    \"feature_fraction\" : 0.05,\n    \"min_data_in_leaf\": 80,\n    \"min_sum_heassian_in_leaf\": 10,\n    \"tree_learner\": \"serial\",\n    \"boost_from_average\": \"false\",\n    \"bagging_seed\" : 10,\n    \"verbosity\" : 1,\n}","296d7b24":"result=np.zeros(test.shape[0])\n\nrskf = RepeatedStratifiedKFold(n_splits=5, n_repeats=5,random_state=10)\nfor counter,(train_index, valid_index) in enumerate(rskf.split(train, train.target),1):\n    print (counter)\n    \n    #Train data\n    t=train.iloc[train_index]\n    t=augment(t)\n    trn_data = lgb.Dataset(t.drop(\"target\",axis=1), label=t.target)\n    \n    #Validation data\n    v=train.iloc[valid_index]\n    val_data = lgb.Dataset(v.drop(\"target\",axis=1), label=v.target)\n    \n    #Training\n    model = lgb.train(param, trn_data, 1000000, valid_sets = [val_data], verbose_eval=500, early_stopping_rounds = 3000)\n    result +=model.predict(test)\n","6992119b":"submission = pd.read_csv(path\/'sample_submission.csv')\nsubmission['target'] = result\/counter\nfilename=\"{:%Y-%m-%d_%H_%M}_sub.csv\".format(datetime.now())\nsubmission.to_csv(filename, index=False)","0f3eec33":"Big thanks to Jiwei Liu for Augment insight!\nhttps:\/\/www.kaggle.com\/jiweiliu\/lgb-2-leaves-augment\n"}}