{"cell_type":{"ee7b4032":"code","1f532cf9":"code","f65a2670":"code","2b05dc25":"code","9abdb085":"code","3fffdb12":"code","dc5f9397":"code","a745a95a":"code","b0c915ea":"code","a0449fa6":"code","be669768":"code","d3e4a8f6":"code","52e7ba80":"code","41b2cee0":"code","d56bfb28":"code","f72e0759":"code","cc765bec":"code","57f90112":"code","4c5df0a9":"code","2bfe1b63":"code","af910472":"code","17bb0810":"code","09643c4d":"code","60001a68":"code","4a48c87c":"code","07c1c703":"code","60e741db":"code","84588c70":"code","eccff3a7":"code","f3c57dfb":"code","40241ad8":"code","436f4ed3":"code","092028a6":"code","eed92edd":"code","ff086a5c":"code","8a6814cd":"code","6c204ccc":"code","485379d3":"code","ad989bbd":"code","dc9c5f09":"code","36ac24b5":"code","cfb3b577":"markdown","80bbc2f5":"markdown","07ced885":"markdown","ba4af443":"markdown","1322ad9f":"markdown","ed66a17f":"markdown","3a320e17":"markdown","6cbd90e5":"markdown","7d0fdeb8":"markdown","d02367bd":"markdown","27a58d60":"markdown","4711bcd8":"markdown","758345f7":"markdown","4168bd4b":"markdown","f4e84d5b":"markdown","94542f16":"markdown","d4180b81":"markdown","038a5f1b":"markdown","c6d0bb56":"markdown","519b7a96":"markdown","90076a0c":"markdown","b7f14437":"markdown","3caa8b9c":"markdown","910aaf1f":"markdown","c89d3404":"markdown","e7c2380e":"markdown","92cdf80a":"markdown","ebaa9829":"markdown","385ed64e":"markdown","ad8ac675":"markdown","74879c74":"markdown","93c7ab0b":"markdown","1c60a8c9":"markdown","95603b05":"markdown","f00c8326":"markdown","fa2ea73b":"markdown","b3769e2f":"markdown","f6bce144":"markdown","d8a450ff":"markdown","69409593":"markdown","a9bf7671":"markdown","d9d80898":"markdown","dc877ae4":"markdown","aac8eb82":"markdown","d69254f8":"markdown","957dd245":"markdown","28733471":"markdown","9eb030ea":"markdown","7a3d09d4":"markdown"},"source":{"ee7b4032":"import numpy as np\nimport pandas as pd","1f532cf9":"df = pd.read_csv(\"..\/input\/ranzcr-clip-catheter-line-classification\/train.csv\")\n\nLABELS = [\n    'ETT - Abnormal', 'ETT - Borderline', 'ETT - Normal',\n    'NGT - Abnormal', 'NGT - Borderline', 'NGT - Incompletely Imaged', 'NGT - Normal', \n    'CVC - Abnormal', 'CVC - Borderline', 'CVC - Normal',\n    'Swan Ganz Catheter Present'\n]\n\ndf.head()","f65a2670":"DEBUG = True\nif DEBUG:\n    df = df.sample(frac = 0.01).reset_index(drop = True)\n    print(df.shape)","2b05dc25":"from sklearn.model_selection import train_test_split\ntrain, valid = train_test_split(df, test_size = 0.1)\nprint(train.shape, valid.shape)","9abdb085":"train.head()","3fffdb12":"path = train.iloc[0, 0]\npath","dc5f9397":"path = \"..\/input\/ranzcr-clip-catheter-line-classification\/train\" + \"\/\" + path + \".jpg\"\npath","a745a95a":"import cv2\nimage = cv2.imread(path)\nimage.shape","b0c915ea":"import matplotlib.pyplot as plt\nplt.imshow(image)\nplt.show()","a0449fa6":"image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\nplt.imshow(image)\nplt.show()","be669768":"path = train.iloc[1, 0]\npath = \"..\/input\/ranzcr-clip-catheter-line-classification\/train\" + \"\/\" + path + \".jpg\"\nimage2 = cv2.imread(path)\nimage2.shape","d3e4a8f6":"from albumentations import Resize\ndummy = Resize(width = 300, height = 300)(image = image)\ndummy","52e7ba80":"image = Resize(width = 300, height = 300)(image = image)[\"image\"]\nimage.shape","41b2cee0":"plt.imshow(image)\nplt.show()","d56bfb28":"image2 = Resize(width = 300, height = 300)(image = image)[\"image\"]\nimage2.shape","f72e0759":"from albumentations.pytorch import ToTensorV2\nimage = ToTensorV2()(image = image)[\"image\"]\nimage.shape","cc765bec":"from torch.utils.data import Dataset\n\nclass TrainDataset(Dataset):\n    def __init__(self, df):\n        self.df = df\n        self.studyuid = df[\"StudyInstanceUID\"].values\n        self.labels = df[LABELS].values\n        \n    def __len__(self):\n        return self.df.shape[0]\n    \n    def __getitem__(self, idx):\n        path = self.studyuid[idx]\n        path = \"..\/input\/ranzcr-clip-catheter-line-classification\/train\" + \"\/\" + path + \".jpg\"\n        image = cv2.imread(path)\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n        image = Resize(300, 300)(image = image)[\"image\"]\n        image = ToTensorV2()(image = image)[\"image\"]\n        labels = self.labels[idx]\n        return image, labels","57f90112":"train_dataset = TrainDataset(train)\ntrain_dataset[0]","4c5df0a9":"image, label = train_dataset[0]\nplt.imshow(image.permute(1, 2, 0))\nplt.show()\nprint(label)","2bfe1b63":"from torch.utils.data import DataLoader","af910472":"train_loader = DataLoader(train_dataset, batch_size = 8, shuffle = True)","17bb0810":"for batch in train_loader:\n    print(batch[0].shape)","09643c4d":"valid_dataset = TrainDataset(valid)\nvalid_loader = DataLoader(valid_dataset, batch_size = 16, shuffle = False)","60001a68":"import sys\nsys.path.append('..\/input\/pytorch-image-models\/pytorch-image-models-master')\nimport timm\nfrom pprint import pprint\npprint(timm.list_models(pretrained = True))","4a48c87c":"import torch.nn as nn\n\nclass Effnet(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.effnet = timm.create_model(model_name = \"tf_efficientnet_b0\", pretrained = False)\n        n_features = self.effnet.classifier.in_features\n        self.effnet.classifier = nn.Linear(n_features, len(LABELS))\n    \n    def forward(self, x):\n        x = self.effnet(x)\n        return x","07c1c703":"model = Effnet()","60e741db":"import torch\nDEVICE = \"cuda\" if torch.cuda.is_available() else \"cpu\"","84588c70":"model = model.to(DEVICE)\nprint(DEVICE)","eccff3a7":"criterion = nn.BCEWithLogitsLoss()","f3c57dfb":"optimizer = torch.optim.Adam(model.parameters())","40241ad8":"model.train()\nfor X, y in train_loader:\n    optimizer.zero_grad()\n    X = X.float().to(DEVICE)\n    y = y.float().to(DEVICE)\n    pred = model(X)\n    loss = criterion(pred, y)\n    loss.backward()\n    optimizer.step()","436f4ed3":"model.eval()\nvalid_loss = 0\nwith torch.no_grad():\n    for X, y in valid_loader:\n        X = X.float().to(DEVICE)\n        y = y.float().to(DEVICE)\n        pred = model(X)\n        loss = criterion(pred, y)\n        valid_loss += loss.item()\nvalid_loss \/= len(valid_loader)\nprint(\"Loss:\", valid_loss)","092028a6":"for epoch in range(10):\n    model.train()\n    for X, y in train_loader:\n        optimizer.zero_grad()\n        X = X.float().to(DEVICE)\n        y = y.float().to(DEVICE)\n        pred = model(X)\n        loss = criterion(pred, y)\n        loss.backward()\n        optimizer.step()\n    model.eval()\n    valid_loss = 0\n    with torch.no_grad():\n        for X, y in valid_loader:\n            X = X.float().to(DEVICE)\n            y = y.float().to(DEVICE)\n            pred = model(X)\n            loss = criterion(pred, y)\n            valid_loss += loss.item()\n    valid_loss \/= len(valid_loader)\n    print(\"Loss:\", valid_loss)","eed92edd":"model = Effnet().to(DEVICE)\n\ncriterion = nn.BCEWithLogitsLoss()\noptimizer = torch.optim.Adam(model.parameters())\n\nbest_loss = np.inf\nfor epoch in range(10):\n    model.train()\n    for X, y in train_loader:\n        optimizer.zero_grad()\n        X = X.float().to(DEVICE)\n        y = y.float().to(DEVICE)\n        pred = model(X)\n        loss = criterion(pred, y)\n        loss.backward()\n        optimizer.step()\n    model.eval()\n    valid_loss = 0\n    with torch.no_grad():\n        for X, y in valid_loader:\n            X = X.float().to(DEVICE)\n            y = y.float().to(DEVICE)\n            pred = model(X)\n            loss = criterion(pred, y)\n            valid_loss += loss.item()\n    valid_loss \/= len(valid_loader)\n    print(f\"EPOCH:{epoch}, Loss:{valid_loss}\")\n    if valid_loss < best_loss:\n        best_loss = valid_loss\n        torch.save(model.state_dict(), \"effnet.pth\")\n        print(\"saved...\")","ff086a5c":"class TestDataset(Dataset):\n    def __init__(self, df):\n        self.df = df\n        self.studyuid = df[\"StudyInstanceUID\"].values\n        \n    def __len__(self):\n        return self.df.shape[0]\n\n    def __getitem__(self, idx):\n        path = self.studyuid[idx]\n        path = \"..\/input\/ranzcr-clip-catheter-line-classification\/test\" + \"\/\" + path + \".jpg\"\n        image = cv2.imread(path)\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n        image = Resize(300, 300)(image = image)[\"image\"]\n        image = ToTensorV2()(image = image)[\"image\"]\n        return image","8a6814cd":"test = pd.read_csv(\"..\/input\/ranzcr-clip-catheter-line-classification\/sample_submission.csv\")\ntest_dataset = TestDataset(test)\ntest_loader = DataLoader(test_dataset, batch_size = 32, shuffle = False)","6c204ccc":"model = Effnet().to(DEVICE)\nmodel.load_state_dict(torch.load(\".\/effnet.pth\"))","485379d3":"submit_preds = []\n\nmodel.eval()\nwith torch.no_grad():\n    for X in test_loader:\n        X = X.float().to(DEVICE)\n        submit_preds.append(model(X).sigmoid().to(\"cpu\"))\n    submit_preds = np.concatenate([p.numpy() for p in submit_preds], axis = 0)","ad989bbd":"submit = pd.DataFrame(submit_preds, columns = LABELS)\nsubmit.head()","dc9c5f09":"submit[\"StudyInstanceUID\"] = test[\"StudyInstanceUID\"]\nsubmit = pd.concat([submit.iloc[:, -1], submit.iloc[:, :-1]], axis = 1)\nsubmit.to_csv(\"submission.csv\", index = False)","36ac24b5":"print(test.shape, submit.shape)","cfb3b577":"\u3061\u3063\u3061\u3083\u304f\u306a\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u306f\u7dad\u6301\u3055\u308c\u3066\u3044\u307e\u3059\u3002","80bbc2f5":"cv2\u3067\u8aad\u307f\u8fbc\u3080\u3068\u8272\u304cBGR(\u9752\u7dd1\u8d64)\u306e\u9806\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u306e\u3067RGB(\u8d64\u7dd1\u9752)\u306b\u5909\u3048\u307e\u3059\u3002\n\n\u5909\u63db\u3059\u308b\u610f\u5473\u304c\u3042\u308b\u304b\u306f\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u3059\u307f\u307e\u305b\u3093\u3002","07ced885":"\u6700\u521d\u306b.train\u3067\u5b66\u7fd2\u30e2\u30fc\u30c9\u306b\u3057\u307e\u3059\u3002\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u306f\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u4e88\u6e2c\u3059\u308b\u524d\u306b\u4e00\u5ea6.zero_grad\u3067optimizer\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\nfor\u6587\u3067train_loader\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u307e\u3059\u3002X\u3068y\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u307e\u3057\u305f\u3002\n\npytorch\u306e\u5b66\u7fd2\u6642\u306ffloat\u578b\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067.float\u3067\u5909\u63db\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305f\u30e2\u30c7\u30eb\u306b\u5165\u308c\u308b\u30c7\u30fc\u30bf\u3067\u3082to(DEVICE)\u3067CPUorGPU\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u308c\u3082\u5fd8\u308c\u304c\u3061\u3002\n\nmodel\u306bX\u3092\u5165\u308c\u308b\u3068EfficientNet\u306b\u901a\u3063\u3066\u4e88\u6e2c\u30e9\u30d9\u30eb\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001\u640d\u5931\u95a2\u6570\u306b\u6e21\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u3053\u3067\u306f(\u4e88\u6e2c, \u6b63\u89e3)\u306e\u9806\u306b\u3057\u307e\u3059\u3002\u9006\u306b\u6e21\u3059\u3068\u5909\u306a\u7d50\u679c\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n\u3059\u308b\u3068\u8aa4\u5dee\u3092\u8a08\u7b97\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u6b21\u306b.backward()\u3067\u30e2\u30c7\u30eb\u306b\u8aa4\u5dee\u3092\u6559\u3048\u3066\u3042\u3052\u307e\u3059\u3002\n\n\u6700\u5f8c\u306boptimizer\u306e.step\u3067\u6700\u9069\u5316\u624b\u6cd5\u306b\u5f93\u3063\u3066\u30e2\u30c7\u30eb\u304c\u6539\u5584\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u51e6\u7406\u3092\u30d0\u30c3\u30c1\u306e\u6570\u3060\u3051\u7e70\u308a\u8fd4\u3057\u3066\uff11\u56de\u306e\u5b66\u7fd2\u304c\u7d42\u308f\u308a\u307e\u3059\u3002","ba4af443":"# 5. \u30e2\u30c7\u30eb\u4f5c\u6210\n\u30e2\u30c7\u30eb\u306fEfficientNet\u3092\u4f7f\u3044\u307e\u3059\u3002","1322ad9f":"\u4e00\u5fdc\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3002\u554f\u984c\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u53f3\u4e0a\u306e\"Save Version\"\u304b\u3089\u4fdd\u5b58\u3057\u3066\u30d7\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u4e0b\u306b\u3042\u308b\"output\"\u304b\u3089\"submit\"\u3092\u62bc\u305b\u3070\u63d0\u51fa\u3067\u304d\u307e\u3059\u3002","ed66a17f":"\"StudyInstanceUID\"\u304b\u3089\u753b\u50cf\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u30e2\u30c7\u30eb\u306b\u5b66\u7fd2\u3055\u305b\u307e\u3059\u3002","3a320e17":"Dataset\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u30af\u30e9\u30b9\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n__init__\uff1a\u521d\u671f\u5316\u6761\u4ef6\u3002\u5f15\u6570\u306ftrain\u3068\u304b\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3067\u3059\u3002self\u306f\u5fc5\u9808\u306a\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\n\n__len__\uff1a\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3002\u57fa\u672c\u7684\u306b\u521d\u671f\u5316\u6642\u306b\u6e21\u3057\u305f\u30c7\u30fc\u30bf\u306e\u884c\u6570\u3067\u3059\u3002\n\n__getitem__\uff1a\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3068\u304d\u306b\u5fc5\u8981\u3002index\u304c\u5f15\u6570\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3068\u304d\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u5f15\u6570\u306b\u306a\u308b\u306e\u3067\u3001\u4f8b\u3048\u3070\uff10\u304c\u5165\u3063\u305f\u3068\u304d\u306fstudyuid\u306e\uff11\u500b\u76ee\u306e\u30d1\u30b9\u304c\u5bfe\u8c61\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5f8c\u306f\u3055\u3063\u304d\u307e\u3067\u3068\u540c\u3058\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3066\u753b\u50cf\u30c7\u30fc\u30bf\u306fimage\u3001\u8a72\u5f53\u3059\u308b\u30e9\u30d9\u30eb(\u6b63\u89e3)\u306flabels\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","6cbd90e5":"\u753b\u50cf\u306e\u30d1\u30b9\u3092\uff11\u3064\u53d6\u308a\u51fa\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u304b\u3089\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002","7d0fdeb8":"# \u6982\u8981\n\u3053\u3093\u306a\u4eba\u5411\u3051\uff1a\u6a5f\u68b0\u5b66\u7fd2\u521d\u5fc3\u8005\u3002\u30e2\u30c7\u30eb\u4f5c\u6210\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u4eba\u3002\u4e0a\u4f4d\u30ab\u30fc\u30cd\u30eb\u3092\u30b3\u30d4\u30da\u3059\u308b\u3060\u3051\u306b\u306a\u3063\u3061\u3083\u3066\u308b\u4eba\u3002\n\npytorch\u3067\u57fa\u672c\u7684\u306a\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n\u203b\u79c1\u306e\u5099\u5fd8\u9332\u3082\u517c\u306d\u3066\u3044\u308b\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002","d02367bd":"DataLoader\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6e21\u3057\u307e\u3059\u3002\n\n\u3064\u3044\u3067\u306b\u4ee5\u4e0b\u306e\u5f15\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nbatch_size\uff1a\u4e00\u5ea6\u306b\u4f55\u679a\u53d6\u308a\u51fa\u3059\u304b\u3002\u591a\u3044\u307b\u3069\u5b66\u7fd2\u304c\u65e9\u3044\u3051\u3069\u30e1\u30e2\u30ea\u3092\u4f7f\u3046\u3002\u5c0f\u3055\u3044\u307b\u3069\u30e1\u30e2\u30ea\u3092\u6291\u3048\u308b\u304c\u5b66\u7fd2\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u3001\uff11\u679a\u306e\u7279\u5fb4\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u53d7\u3051\u308b\u3002\n\nshuffle\uff1a\u30e9\u30f3\u30c0\u30e0\u306a\u9806\u3067\u53d6\u308a\u51fa\u3059\u3002\n\n\u4ed6\u306b\u3082drop_last\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u672c\u683c\u7684\u306b\u5b66\u7fd2\u3055\u305b\u305f\u3044\u6642\u306f\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002","27a58d60":"\u30e2\u30c7\u30eb\u4f5c\u6210\u3060\u3051\u304c\u76ee\u7684\u306a\u306e\u3067\u30c7\u30fc\u30bf\u6570\u3092\u6e1b\u3089\u3057\u307e\u3059\u3002\u5b9f\u969b\u306b\u63d0\u51fa\u3059\u308b\u6642\u306fFalse\u306b\u3057\u307e\u3057\u3087\u3046\u3002","4711bcd8":"\u8a55\u4fa1\u30c7\u30fc\u30bf\u3067\u3082\u540c\u3058\u3053\u3068\u3092\u3057\u307e\u3059\u3002\n\n\u3057\u304b\u3057shuffle\u306f\u4e0d\u8981\u3067\u3059\u3057\u5b66\u7fd2\u307b\u3069\u8a08\u7b97\u304c\u91cd\u304f\u306a\u3044\u306e\u3067batch_size\u3082\u5909\u3048\u307e\u3057\u305f\u3002","758345f7":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308b\u3068\u304d\u306fpandas\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u6e21\u3057\u307e\u3059\u3002\u3053\u308c\u304c__init__\u306e\u5f15\u6570\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\uff10\u3092\u6e21\u3057\u3066\u6700\u521d\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u6700\u521d\u306b\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u3001\u6b21\u306b\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002","4168bd4b":"# 6. \u5b66\u7fd2\n\u5b66\u7fd2\u3059\u308b\u30b9\u30c6\u30c3\u30d7\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\u30fb\u640d\u5931\u95a2\u6570\u3092\u6c7a\u3081\u308b\n\n\u30fb\u6700\u9069\u5316\u624b\u6cd5(optimizer)\u3092\u6c7a\u3081\u308b\n\n\u30fbtrain_loader\u3067\u5b66\u7fd2\u3055\u305b\u308b\n\n\u30fbvalid_loader\u3067\u6027\u80fd\u3092\u78ba\u8a8d\u3059\u308b","f4e84d5b":"pytorch\u306b\u5165\u308c\u305f\u3044\u306e\u3067ToTensorV2\u306b\u5165\u308c\u307e\u3059\u3002\u3055\u3063\u304d\u3068\u540c\u3058\u304f\u8f9e\u66f8\u578b\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\"image\"\u3067\u53d6\u308a\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30b5\u30a4\u30ba\u3092\u898b\u308b\u3068\u8272\u3092\u793a\u3059\uff13\u304c\u5148\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\npytorch\u306e\u4ed5\u69d8\u3067\u5b66\u7fd2\u6642\u306f\u8272\u304c\u6700\u521d\u306b\u6765\u3066\u3044\u306a\u3044\u3068\u30c0\u30e1\u3067\u3059\u3002\u30b3\u30b3\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u3067\u3059\u304c\u5909\u63db\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002","94542f16":"\u3053\u306e\u3088\u3046\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3060\u3051\u3092\u4f7f\u3063\u3066\u753b\u50cf\u3068\u30e9\u30d9\u30eb\u3068\u53d6\u308a\u51fa\u3059\u30b7\u30b9\u30c6\u30e0\u304c\u3067\u304d\u307e\u3057\u305f\u3002","d4180b81":"cv2\u3067\u30d1\u30b9\u304b\u3089\u753b\u50cf\u3092\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002","038a5f1b":"train_test_split\u3067\u5b66\u7fd2\u30c7\u30fc\u30bf(\u52c9\u5f37)\u3068\u8a55\u4fa1\u30c7\u30fc\u30bf(\u7b54\u3048\u5408\u308f\u305b)\u306b\u5206\u3051\u307e\u3059\u3002\n\n\u3053\u306e\u5206\u5272\u65b9\u6cd5\u306f\u9069\u5f53\u306a\u306e\u3067\u3001\u9ad8\u30b9\u30b3\u30a2\u3092\u72d9\u3044\u305f\u3044\u65b9\u306fGroupKFold\u306b\u3057\u305f\u308a\u3057\u307e\u3057\u3087\u3046\u3002","c6d0bb56":"\uff12\u679a\u76ee\u306e\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3059\u3002\u4f55\u679a\u304b\u78ba\u8a8d\u3059\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u304c\u753b\u50cf\u306b\u3088\u3063\u3066\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\u30b5\u30a4\u30ba\u3092\u7d71\u4e00\u3057\u306a\u3044\u3068\u5b66\u7fd2\u6642\u306b\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u308b\u306e\u3067\u52a0\u5de5\u3057\u307e\u3057\u3087\u3046\u3002","519b7a96":"\u753b\u50cf\u306f\u30ec\u30f3\u30c8\u30b2\u30f3\u5199\u771f\u3067\u3059\u3002","90076a0c":"\u6700\u9069\u5316\u624b\u6cd5\u3067\u3059\u3002\u8272\u3005\u3042\u308a\u307e\u3059\u304c\u30e1\u30b8\u30e3\u30fc\u306aAdam\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3055\u3063\u304d\u4f5c\u3063\u305f\u30e2\u30c7\u30eb(model)\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002","b7f14437":"\u5b66\u7fd2\u7528\u753b\u50cf\u306f\"train\"\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u3042\u308a\u307e\u3059\u3002","3caa8b9c":"\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3068\u3057\u3066\u63d0\u51fa\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u3055\u3063\u304d\u306e\u4e88\u6e2c\u7d50\u679c\u3092\u5165\u308c\u3066\u5217\u540d\u306fLABELS\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002","910aaf1f":"# 2. \u753b\u50cf\u8aad\u307f\u8fbc\u307f","c89d3404":"\u8a08\u7b97\u306bCPU\u3092\u4f7f\u3046\u304bGPU\u3092\u4f7f\u3046\u304b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u53f3\u7aef\u306e\"setting\"\u304b\u3089GPU\u3092ON\u306b\u3067\u304d\u307e\u3059\u3002\uff08\u73fe\u6642\u70b9\u3067\u903143\u6642\u9593\u7121\u6599\uff09\n\nON\u306b\u3057\u3066\u3044\u308b\u3068torch.cuda.is_available\u304cTrue\u306b\u306a\u308b\u306e\u3067DEVICE\u306fcuda(GPU\u306e\u7a2e\u985e)\u306b\u306a\u308a\u307e\u3059\u3002False\u306a\u3089CPU\u306e\u307e\u307e\u3002","e7c2380e":"EfficientNet\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306ftimm\u3068\u3044\u3046\u753b\u50cf\u5206\u985e\u30e2\u30c7\u30eb\u306e\u30bb\u30c3\u30c8\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002Dataset\u306b\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u308b\u306e\u3067\"+Add data\"\u304b\u3089input\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\npip install\u3067\u5165\u308c\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u672c\u30b3\u30f3\u30da\u3067\u306f\u63d0\u51fa\u6642\u306b\u30cd\u30c3\u30c8\u3092\u63a5\u7d9a\u3067\u304d\u306a\u3044\u306e\u3067\u4f7f\u3048\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002","92cdf80a":"\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002","ebaa9829":"test_loader\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u3066\u30e2\u30c7\u30eb\u306b\u6e21\u3057\u307e\u3059\u3002\n\n\u51fa\u529b\u3055\u308c\u308b\u5024\u3092.sigmoid\u3067\uff10\uff5e\uff11\u306b\u30b9\u30b1\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30c7\u30fc\u30bf\u3092cpu\u306b\u5bfe\u5fdc\u3055\u305b\u306a\u3044\u3068\u5f8c\u3005\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067to(\"cpu\")\u3092\u4ed8\u3051\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5404\u30d0\u30c3\u30c1\u306e\u4e88\u6e2c\u7d50\u679c\u3092\u30ea\u30b9\u30c8(submit_preds)\u306b\u5165\u308c\u3066\u304a\u304d\u3001\u6700\u5f8c\u306bnumpy\u306e.concatenate\u3067\u884c\u65b9\u5411(axis = 0)\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u63d0\u51fa\u7528\u306e\u4e88\u6e2c\u5024\u304c\u3067\u304d\u307e\u3057\u305f\u3002","385ed64e":"# 8. pytorch\u3067\u3084\u308b\u3053\u3068\u307e\u3068\u3081\n\u2460\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8(init, len, getitem)\u3068\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc\u3092\u4f5c\u308b\u3002\n\n\u2461\u30e2\u30c7\u30eb\u3092\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3059\u308b\u3002forward\u3067\u5b66\u7fd2\u3059\u308b\u6d41\u308c\u3092\u304f\u3080\u3002\n\n\u2462\u640d\u5931\u95a2\u6570(criterion)\u3068\u6700\u9069\u5316\u624b\u6cd5(optimizer)\u3092\u6c7a\u3081\u308b\u3002\n\n\u2463\u5b66\u7fd2\u3055\u305b\u308b\u3002(model.train, for ... loader, zero_grad, criterion(pred, \u6b63\u89e3), backward, step)\n\n\u2464\u8a55\u4fa1\u3059\u308b\u3002(model.eval)\n\n\u2465\u5b66\u7fd2\u3068\u8a55\u4fa1\u3092\u7e70\u308a\u8fd4\u3059(\u6027\u80fd\u304c\u826f\u304f\u306a\u308c\u3070\u4e0a\u66f8\u304d\u3059\u308b)\n\n\u2466\u63d0\u51fa\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u3092\u4f5c\u308a\u3001\u4e88\u6e2c\u3059\u308b","ad8ac675":"\u640d\u5931\u95a2\u6570\u3067\u3059\u3002\u51fa\u529b\u7d50\u679c\u3092\uff10\uff5e\uff11\u306e\u7bc4\u56f2(\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570)\u306b\u30b9\u30b1\u30fc\u30eb\u3057\u3066\u304b\u3089\u4e88\u6e2c\u3068\u306e\u8aa4\u5dee\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002","74879c74":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\n\n\u4e3b\u306bvalid_loader\u3068\u540c\u3058\u3053\u3068\u3092\u3057\u3066\u3044\u307e\u3059\u3002","93c7ab0b":"# 4. DataLoader\n\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc\u306b\u5165\u308c\u307e\u3059\u3002","1c60a8c9":"\uff11\u5ea6\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u76f4\u3057\u305f\u3044\u306e\u3067\u3053\u308c\u307e\u3067\u5b9f\u884c\u3057\u305f\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\nbest_loss\u3068\u3057\u3066\u6700\u5c0f\u306e\u8aa4\u5dee\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30b9\u30bf\u30fc\u30c8\u306f\u7121\u9650\u5927\u3067\u3059\u3002\n\n\u3082\u3057\u8a55\u4fa1\u30c7\u30fc\u30bf\u3067\u306e\u8aa4\u5dee\u304c\u3053\u308c\u307e\u3067\u306e\u6700\u5c0f\u8aa4\u5dee\u3088\u308a\u3082\u5c0f\u3055\u304b\u3063\u305f\u3089\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\u3064\u3044\u3067\u306b\u30e2\u30c7\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u3053\u3046\u3059\u308b\u3068\u5168\u3066\u306e\u5b66\u7fd2\u304c\u7d42\u308f\u308b\u9803\u306b\u306f\u6700\u3082\u8aa4\u5dee\u306e\u5c0f\u3055\u304b\u3063\u305f\u30e2\u30c7\u30eb\u304c\u4e0a\u66f8\u304d\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u5b66\u7fd2\u306f\u7d42\u308f\u308a\u3002\u4eca\u56de\u7d39\u4ecb\u3057\u305f\u306e\u306f\u6700\u4f4e\u9650\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3053\u3068\u3060\u3051\u3067\u3059\u3002","95603b05":"\u5909\u6570model\u3068\u3057\u3066EfficientNet\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002","f00c8326":"torch.nn\u306eModule\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nsuper\u3068init\u306f\u5b9a\u578b\u6587\u306a\u306e\u3067\u6c17\u306b\u305b\u305a\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\n\nEfficientNet\u3092timm.create_model\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u30e2\u30c7\u30eb\u540d\u306f\u3055\u3063\u304d\u51fa\u529b\u3057\u305f\u30ea\u30b9\u30c8\u306e\u4e2d\u304b\u3089\u9078\u3073\u307e\u3059\u3002\n\nEfficientNet\u306b\u306fB0\uff5eB7\u307e\u3067\u3042\u308a\u4eca\u56de\u306fB0\u3067\u3059\u3002\n\npretrained=True\u306b\u3059\u308b\u3068\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u30cd\u30c3\u30c8\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u30cd\u30c3\u30c8OFF\u3067\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\n\n\u6700\u5f8c\u306e\u51fa\u529b\u5f62\u5f0f\u3092\u5909\u66f4\u3057\u305f\u3044\u306e\u3067.classifier\u306e\u90e8\u5206\u3092Linear(\u5168\u7d50\u5408\u5c64)\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\u3053\u306e\u6642\u306e\u5165\u529b\u30b5\u30a4\u30ba\u304c\u5fc5\u8981\u306a\u306e\u3067n_features\u3068\u3057\u3066\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u51fa\u529b\u30b5\u30a4\u30ba\u306f\u4e88\u6e2c\u3057\u305f\u3044LABELS\u306e\u6570\u3067\u3059\u3002\n\nforward\u306f\u5b9f\u969b\u306b\u5b66\u7fd2(\u4e88\u6e2c)\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3067\u3059\u3002\u5165\u529b\u3092x\u3068\u3057\u3066EfficientNet\u306b\u901a\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002","fa2ea73b":"# 7. \u4e88\u6e2c","b3769e2f":"## \u25c6\u4e00\u9023\u306e\u6d41\u308c\u307e\u3068\u3081\u25c6","f6bce144":"\u30e2\u30c7\u30eb\u306b\u4f7f\u7528\u3059\u308bCPUorGPU\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u5fd8\u308c\u304c\u3061\u3002\n\nEfficientNet\u306f\u8a08\u7b97\u304c\u91cd\u3044\u306e\u3067\u3067\u304d\u308c\u3070GPU\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u7bc0\u7d04\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30e2\u30c7\u30eb\u306e\u6539\u5584\u306a\u3069\u30c7\u30d0\u30c3\u30b0\u6642\u306fOFF\u306b\u3057\u3066\u672c\u683c\u7684\u306b\u5b66\u7fd2\u3055\u305b\u305f\u3044\u6642\u306bON\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3059\u3002","d8a450ff":"# 3. Dataset\npytorch\u3067\u5b66\u7fd2\u3059\u308b\u6642\u306f\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3089\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc\u304c\u5fc5\u8981\u3067\u3059\u3002\u5148\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002","69409593":"ID\u304c\uff11\u5217\u76ee\u306b\u5fc5\u8981\u306a\u306e\u3067\u8db3\u3057\u3066\u304a\u304d\u307e\u3059\u3002.to_csv\u3067CSV\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nindex = False\u306b\u3057\u306a\u3044\u3068\u4f59\u8a08\u306a\u5217\u304c\u3067\u304d\u308b\u306e\u3067\u6ce8\u610f\u3002","a9bf7671":"300 x 300\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","d9d80898":"# 1. \u30c7\u30fc\u30bf\u78ba\u8a8d\n\u30b3\u30f3\u30da\u306e\u5185\u5bb9\u306f\u5225\u306e\u30ce\u30fc\u30c8\u306b\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u305c\u3072\u3054\u89a7\u304f\u3060\u3055\u3044\u3002(\u5ba3\u4f1d)\n\n[https:\/\/www.kaggle.com\/tomohiroh\/ranzcr](http:\/\/)","dc877ae4":"\u540c\u3058\u3053\u3068\u3092\uff12\u679a\u76ee\u306e\u753b\u50cf\u306b\u5b9f\u884c\u3059\u308b\u3068\u30b5\u30a4\u30ba\u304c\u7d71\u4e00\u3055\u308c\u3066\u3044\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u3002","aac8eb82":"\u30e2\u30c7\u30eb\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002","d69254f8":"test\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\u5b66\u7fd2\u7528\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3002\n\n\u30d1\u30b9\u306ftest\u306e\u30d1\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305f\u6b63\u89e3\u30e9\u30d9\u30eb\u3092\u6301\u305f\u306a\u3044\u306e\u3067\u51fa\u529b\u306fimage\u306e\u307f\u3067\u3059\u3002","957dd245":"albumentations\u306eResize\u3067\u30b5\u30a4\u30ba\u3092\u5909\u3048\u307e\u3059\u3002\n\n\u5909\u63db\u5f8c\u306e\u30c7\u30fc\u30bf\u306f\u8f9e\u66f8\u578b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\"image\"\u3067\u53d6\u308a\u51fa\u3055\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002","28733471":"\u540c\u3058\u3053\u3068\u3092\u8907\u6570\u56de\u7e70\u308a\u8fd4\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u3067\u3082\u5341\u5206\u306a\u306e\u3067\u3059\u304c\u6bce\u56de\u5fc5\u305a\u8aa4\u5dee\u304c\u5c0f\u3055\u304f\u306a\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\n\n\u3064\u307e\u308a\u6700\u5f8c\u306e\u30e2\u30c7\u30eb\u304c\u6700\u9ad8\u306e\u6027\u80fd\u3092\u51fa\u3059\u3068\u306f\u9650\u3089\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002","9eb030ea":"\u8a55\u4fa1\u30c7\u30fc\u30bf\u3067\u6027\u80fd\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u6700\u521d\u306b.eval\u3067\u8a55\u4fa1\u30e2\u30fc\u30c9\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u3053\u308c\u3082\u4f55\u3057\u3066\u308b\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u3002\u3002\n\n\u8a55\u4fa1\u6642\u306f\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u305f\u304f\u306a\u3044\u306e\u3067torch.no_grad\u3067\u30ed\u30c3\u30af\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5b66\u7fd2\u6642\u3068\u540c\u3058\u8981\u9818\u3067Xy\u3092\u53d6\u308a\u51fa\u3057float\u578b\u306b\u3057\u3066\u4e88\u6e2c\u3055\u305b\u307e\u3057\u3087\u3046\u3002\n\n\u6b21\u306b\u640d\u5931\u95a2\u6570\u3092\u8a08\u7b97\u3057\u307e\u3059\u304c\u4eca\u56de\u306f\u30e2\u30c7\u30eb\u306b\u8aa4\u5dee\u3092\u4f1d\u3048\u308b(backward)\u3053\u3068\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n\u5168\u30d0\u30c3\u30c1\u3067\u306e\u8aa4\u5dee\u306e\u5e73\u5747\u3092\u3068\u308a\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u304c\uff11\u56de\u76ee\u306e\u5b66\u7fd2\u3067\u306e\u6027\u80fd\u3067\u3059\u3002","7a3d09d4":"for\u6587\u3067\u5168\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\n\nbatch_size\u3092\uff18\u306b\u3057\u305f\u306e\u3067\u4e00\u5ea6\u306b\uff18\u679a\u306e\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}}