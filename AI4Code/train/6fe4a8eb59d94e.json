{"cell_type":{"4babfe9f":"code","a07d476d":"code","fc85ffc9":"code","8bcc555d":"code","385b31f4":"code","b98c457c":"code","d57f5847":"code","55e6ef24":"code","e3fd2c2f":"code","38bce6e2":"code","68849ff9":"code","0d10d9e5":"code","a10a5ce2":"code","745ddfae":"code","56386085":"code","f3064d2c":"code","32d0d619":"code","ad39093d":"code","06e5f54c":"code","5203ca34":"code","f04fde9a":"code","3fdbf89c":"code","4a5fa55c":"code","015a50b5":"code","2f660797":"markdown","aa24abe3":"markdown","495a8918":"markdown","51d23379":"markdown","02f70a47":"markdown","ac299a7c":"markdown","36281aae":"markdown","f911292a":"markdown","9b018a07":"markdown","5b9013ed":"markdown","90fd816e":"markdown"},"source":{"4babfe9f":"\n\nimport numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfrom sklearn import linear_model\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import r2_score\nfrom sklearn import preprocessing\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nimport seaborn as sns\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\n\n%matplotlib inline\n\n","a07d476d":"df=pd.read_csv(\"\/kaggle\/input\/vehicle-dataset-from-cardekho\/CAR DETAILS FROM CAR DEKHO.csv\")","fc85ffc9":"df.head()","8bcc555d":"df.shape","385b31f4":"df.isna().any()\n","b98c457c":"fdf = df[['year', 'km_driven','fuel', 'seller_type', 'transmission', 'owner','selling_price']]\nfdf.head()","d57f5847":"plt.figure(1, figsize=(8, 6))\nplt.bar(fdf.year,fdf.selling_price, color='blue',alpha=0.4)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Selling price\")\nplt.show()","55e6ef24":"plt.figure(1, figsize=(10, 12))\nplt.scatter(fdf.km_driven,fdf.selling_price, color='red',alpha=0.2)\nplt.xlabel(\"Kms driven\")\nplt.ylabel(\"Selling price\")\nplt.show()","e3fd2c2f":"plt.figure(1, figsize=(10, 10))\nplt.scatter(fdf.seller_type,fdf.selling_price, color='orange',alpha=0.2)\nplt.xlabel(\"Seller Type\")\nplt.ylabel(\"Selling price\")\nplt.show()","38bce6e2":"plt.figure(1, figsize=(10, 8))\nplt.scatter(fdf.owner,fdf.selling_price, color='green',alpha=0.2)\nplt.xlabel(\"Owner\")\nplt.ylabel(\"Selling price\")\nplt.show()","68849ff9":"print(fdf['fuel'].unique())\nprint(fdf['seller_type'].unique())\nprint(fdf['transmission'].unique())\nprint(fdf['owner'].unique())","0d10d9e5":"X=fdf.values\nx=X[:,0:6]\ny=X[:,6]","a10a5ce2":"x[0:3]","745ddfae":"f=preprocessing.LabelEncoder()\nf.fit(['Petrol','Diesel','CNG','LPG','Electric'])\nx[:,2]=f.transform(x[:,2])\n\n\ns=preprocessing.LabelEncoder()\ns.fit(['Individual','Dealer','Trustmark Dealer'])\nx[:,3]=s.transform(x[:,3])\n\nt=preprocessing.LabelEncoder()\nt.fit(['Manual','Automatic'])\nx[:,4]=t.transform(x[:,4])\n\no=preprocessing.LabelEncoder()\no.fit(['Test Drive Car','First Owner' ,'Second Owner', 'Third Owner','Fourth & Above Owner' ])\nx[:,5]=o.transform(x[:,5])","56386085":"x[0:3]","f3064d2c":"x=preprocessing.StandardScaler().fit(x).transform(x.astype(float))\nx[0:2]","32d0d619":"xtrain1,xtest1,ytrain,ytest=train_test_split(x,y,test_size=0.1,random_state=3)\nprint(xtrain1.shape,ytrain.shape,xtest1.shape,ytest.shape)\npoly=PolynomialFeatures(degree=2)\nxtrain=poly.fit_transform(xtrain1)\nxtest=poly.fit_transform(xtest1)","ad39093d":"Lr2=linear_model.LinearRegression()\nLr2.fit(xtrain1,ytrain)\n","06e5f54c":"Lr=linear_model.LinearRegression()\nLr.fit(xtrain,ytrain)\nyhat1=Lr.predict(xtest)\nprint(\"R2 score :\",r2_score(ytest,yhat1))\nsns.distplot(ytest-yhat1, color='red')","5203ca34":"Br=linear_model.BayesianRidge()\nBr.fit(xtrain,ytrain)\nyhat2=Br.predict(xtest)\nprint(\"R2 score :\",r2_score(ytest,yhat2))\nsns.distplot(ytest-yhat2, color='blue')\n","f04fde9a":"L=linear_model.Lasso(alpha=0.2)\nL.fit(xtrain,ytrain)\nyhat3=L.predict(xtest)\nprint(\"R2 score :\",r2_score(ytest,yhat3))\nsns.distplot(ytest-yhat3, color='green')","3fdbf89c":"R=linear_model.Ridge(alpha=.5)\nR.fit(xtrain,ytrain)\nyhat4=R.predict(xtest)\nprint(\"R2 score :\",r2_score(ytest,yhat4))\nsns.distplot(ytest-yhat4, color='yellow')\n","4a5fa55c":"importance = abs(Lr2.coef_)\nfor i,v in enumerate(importance):\n    print('Feature: %0d, Score: %.5f' %(i,v))","015a50b5":"plt.bar([x for x in range(len(importance))], importance)\nplt.show()","2f660797":"**Bayesian Ridge Regression:-**","aa24abe3":"**Some Data Visualizations :-**","495a8918":"All four of the linear models perform very similarly and have similar variability while fitting the data. In feature importance, it's evident that Car seller and Owner type has a very less effect on the price than the other features","51d23379":"**Linear Regression :-**","02f70a47":"Getting the feature importance from the trained model :-","ac299a7c":"**Lasso Model:-**","36281aae":"**Converting non-numeric labels into numeric data :-**","f911292a":"**Viewing the data**","9b018a07":"**Scaling the feature values and splitting the data into test train sets:-**","5b9013ed":"**Checking if the given data's features has any null values**","90fd816e":"**Ridge Regression :-**"}}