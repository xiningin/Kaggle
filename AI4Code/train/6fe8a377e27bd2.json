{"cell_type":{"719340ff":"code","d1b31053":"code","7d09e887":"code","c4356798":"code","0547acb1":"code","0fab32fe":"code","15e02e3a":"code","a14e83d3":"code","0e1e47c5":"code","2a386058":"code","227f9fc2":"code","1e8ccc11":"code","a272b77f":"code","05233a3b":"code","80839a82":"code","483490fa":"code","b588ca4d":"code","a9d7e0e5":"code","65996586":"code","b3f696a2":"code","60581d26":"code","86f113f9":"markdown","2350a946":"markdown","224899bf":"markdown","add662f3":"markdown","24258de7":"markdown","66acbdf8":"markdown","f8123b5d":"markdown","997036d7":"markdown","ccdf3f13":"markdown","008ae0c2":"markdown","62819172":"markdown","c0e5e84b":"markdown","2fe6d352":"markdown","373000bb":"markdown","409ef3e7":"markdown","7629f99e":"markdown"},"source":{"719340ff":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import f1_score, accuracy_score, confusion_matrix\nimport seaborn as sns","d1b31053":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7d09e887":"cd \/kaggle\/input\/disease-symptom-description-dataset","c4356798":"df = pd.read_csv('dataset.csv')\ndf.head()","0547acb1":"df.describe()","0fab32fe":"df.isna().sum()","15e02e3a":"df.isnull().sum()","a14e83d3":"cols = df.columns\ndata = df[cols].values.flatten()\n\ns = pd.Series(data)\ns = s.str.strip()\ns = s.values.reshape(df.shape)\n\ndf = pd.DataFrame(s, columns=df.columns)\ndf.head()","0e1e47c5":"df = df.fillna(0)\ndf.head()","2a386058":"df1 = pd.read_csv('Symptom-severity.csv')\ndf1.head()","227f9fc2":"df1['Symptom'].unique()","1e8ccc11":"vals = df.values\nsymptoms = df1['Symptom'].unique()\n\nfor i in range(len(symptoms)):\n    vals[vals == symptoms[i]] = df1[df1['Symptom'] == symptoms[i]]['weight'].values[0]\n    \nd = pd.DataFrame(vals, columns=cols)\nd.head()","a272b77f":"d = d.replace('dischromic _patches', 0)\nd = d.replace('spotting_ urination',0)\ndf = d.replace('foul_smell_of urine',0)\ndf.head()","05233a3b":"(df[cols] == 0).all()","80839a82":"df['Disease'].value_counts()","483490fa":"df['Disease'].unique()","b588ca4d":"data = df.iloc[:,1:].values\nlabels = df['Disease'].values","a9d7e0e5":"x_train, x_test, y_train, y_test = train_test_split(data, labels, shuffle=True, train_size = 0.85)\nprint(x_train.shape, x_test.shape, y_train.shape, y_test.shape)","65996586":"model = SVC()\nmodel.fit(x_train, y_train)","b3f696a2":"preds = model.predict(x_test)","60581d26":"conf_mat = confusion_matrix(y_test, preds)\ndf_cm = pd.DataFrame(conf_mat, index=df['Disease'].unique(), columns=df['Disease'].unique())\nprint('F1-score% =', f1_score(y_test, preds, average='macro')*100, '|', 'Accuracy% =', accuracy_score(y_test, preds)*100)\nsns.heatmap(df_cm)","86f113f9":"**Check for null and NaN values**","2350a946":"**Plot the confusion matrix for 25 diseases and calculate f1, accuracy**","224899bf":"**Split the data, labels with shuffle**","add662f3":"**Read the dataset**","24258de7":"**Get the names of diseases from data**","66acbdf8":"**Get overall list of symptoms**","f8123b5d":"**Fill the NaN values with zero**","997036d7":"**Remove the trailing space from the symptom columns**","ccdf3f13":"**Throw predictions**","008ae0c2":"**Dataset characteristics**","62819172":"**Select the features as symptoms column and label as Disease column**","c0e5e84b":"**Encode symptoms in the data with the symptom rank**","2fe6d352":"**Initialize and train a Support vector classifier**","373000bb":"**Symptom severity rank**","409ef3e7":"**Assign symptoms with no rank to zero**","7629f99e":"**Check if entire columns have zero values so we can drop those values**"}}