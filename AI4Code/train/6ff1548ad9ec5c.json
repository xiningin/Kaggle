{"cell_type":{"8d506ae6":"code","0b6e28e2":"code","0cabba3b":"code","2d8c8856":"code","46152875":"code","e6e10fa1":"code","fd5fee5d":"code","6ccfb178":"code","133855a7":"code","771bb6f0":"code","c22a1b9d":"code","723a1b79":"code","3cc0474e":"code","9c87eb59":"code","a218e966":"code","6202a4a5":"code","51b8f575":"code","a769d623":"code","f9db5696":"code","5deb5920":"code","0e44c219":"code","bd15b760":"code","9cf36be6":"code","efdc454e":"code","1b93f975":"code","cc3e82e2":"code","f227074e":"code","b2f679a3":"markdown","f2d1e166":"markdown","e3bd90ab":"markdown","67d8a1a8":"markdown","ca5a54e1":"markdown","86bafd4f":"markdown","49875ddb":"markdown","1185770e":"markdown","1c61952d":"markdown","17fe1567":"markdown","cfcda722":"markdown","034e25f1":"markdown","cf0ccb30":"markdown","3adcf848":"markdown","291efcf0":"markdown","792cb5ed":"markdown"},"source":{"8d506ae6":"#import basic libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import OrderedDict\nplt.style.use('ggplot')\n%matplotlib inline\nplt.rcParams['font.size'] = 12","0b6e28e2":"train_df = pd.read_csv('..\/input\/train.csv')\ntest_df = pd.read_csv('..\/input\/test.csv')\nprint('train data shape :',train_df.shape)\nprint('test data shape :',test_df.shape)","0cabba3b":"#snapshot of training data\ntrain_df.head()","2d8c8856":"#check distribution of target classes in training dataset\ny=train_df['Target']\ny.value_counts()","46152875":"#check nulls in train dataset\ntrain_null = train_df.isnull().sum()\ntrain_null[train_null > 0]","e6e10fa1":"#check nulls in test dataset\ntest_null = test_df.isnull().sum()\ntest_null[test_null > 0]","fd5fee5d":"train_df.info()","6ccfb178":"# Groupby the household and figure out the number of unique values\ntrain_grphh = train_df.groupby('idhogar')['Target'].apply(lambda x: x.nunique() == 1)\nerr_train = train_grphh[train_grphh !=True]\nprint('Number of households with incorrect poverty level :',len(err_train))","133855a7":"#let's correct the poverty level in incorrect records\nfor household in err_train.index:\n    #find correct poverty level\n    target = int(train_df[(train_df['idhogar']==household) & (train_df['parentesco1']==1.0)]['Target'])\n    #set correct poverty level\n    train_df.loc[train_df['idhogar']==household,'Target'] = target","771bb6f0":"poverty_level = OrderedDict({1: 'extreme', 2: 'moderate', 3: 'vulnerable', \n                               4: 'non vulnerable'})\nfig,ax = plt.subplots(figsize=(10,6))\nax.yaxis.label.set_color('black')\nax.xaxis.label.set_color('black')\nsns.countplot(x='Target',data=train_df,color='blue')\nplt.xticks([x - 1 for x in poverty_level.keys()], \n           list(poverty_level.values()), rotation = 60)\nplt.xlabel('Poverty Level')\nplt.title('Poverty Level Distribution')","c22a1b9d":"#let's check distribution of number of males & females in a household\nlegend_label = ('male < 12','male > 12','female < 12','female > 12')\nplt.figure(figsize=(20,14))\nfor i,col in enumerate(['r4h1','r4h2','r4m1','r4m2']) :\n    ax = plt.subplot(2,2,i+1)\n    #sns.kdeplot(data = train_df[col])\n    sns.barplot(x='Target',y=col,data=train_df)\n    plt.title(legend_label[i]+' distribution')\n    plt.xticks([x - 1 for x in poverty_level.keys()], \n           list(poverty_level.values()))\n    plt.xlabel('Poverty Level')\n    ax.legend('') #to remove legend","723a1b79":"#let's check distribution of basic faicilities like water and electricity in a household\nlegend_label = ('Water Supply','Electricity Supply')\nplt.figure(figsize=(16,10))\nfor i,col in enumerate(['abastaguano','noelec']) :\n    ax = plt.subplot(1,2,i+1)\n    #sns.kdeplot(data = train_df[col])\n    sns.barplot(x='Target',y=col,data=train_df)\n    plt.title(legend_label[i]+' distribution')\n    plt.xticks([x - 1 for x in poverty_level.keys()], \n           list(poverty_level.values()))\n    plt.xlabel('Poverty Level')\n    ax.legend('') #to remove legend","3cc0474e":"#let's check availabilty of electronic appliances like refrigerator and television in households\nlegend_label = ('Refrigerator','Television')\nplt.figure(figsize=(16,10))\nfor i,col in enumerate(['refrig','television']) :\n    ax = plt.subplot(1,2,i+1)\n    #sns.kdeplot(data = train_df[col])\n    sns.barplot(x='Target',y=col,data=train_df)\n    plt.title(legend_label[i]+' distribution')\n    plt.xticks([x - 1 for x in poverty_level.keys()], \n           list(poverty_level.values()))\n    plt.xlabel('Poverty Level')\n    ax.legend('') #to remove legend","9c87eb59":"#let's check distribution of electronic gadgets in a household\nlegend_label = ('Mobile','Computer','Tablet')\nplt.figure(figsize=(20,14))\nfor i,col in enumerate(['mobilephone','computer','v18q']) :\n    ax = plt.subplot(1,3,i+1)\n    #sns.kdeplot(data = train_df[col])\n    sns.barplot(x='Target',y=col,data=train_df)\n    plt.title(legend_label[i]+' distribution')\n    plt.xticks([x - 1 for x in poverty_level.keys()], \n           list(poverty_level.values()))\n    plt.xlabel('Poverty Level')\n    ax.legend('') #to remove legend","a218e966":"#let's check number of rooms and bedrooms in households with respect to poverty level\nlegend_label = ('Rooms','Bedrooms')\nplt.figure(figsize=(16,10))\nfor i,col in enumerate(['rooms','bedrooms']) :\n    ax = plt.subplot(1,2,i+1)\n    #sns.kdeplot(data = train_df[col])\n    sns.barplot(x='Target',y=col,data=train_df)\n    plt.title(legend_label[i]+' distribution')\n    plt.xticks([x - 1 for x in poverty_level.keys()], \n           list(poverty_level.values()))\n    plt.xlabel('Poverty Level')\n    ax.legend('') #to remove legend","6202a4a5":"#let's check number of rooms and bedrooms in households with respect to poverty level\nlegend_label = ('Children below 19','Seniors 65+')\nplt.figure(figsize=(16,10))\nfor i,col in enumerate(['hogar_nin','hogar_mayor']) :\n    ax = plt.subplot(1,2,i+1)\n    #sns.kdeplot(data = train_df[col])\n    sns.barplot(x='Target',y=col,data=train_df)\n    plt.title(legend_label[i]+' distribution')\n    plt.xticks([x - 1 for x in poverty_level.keys()], \n           list(poverty_level.values()))\n    plt.xlabel('Poverty Level')\n    ax.legend('') #to remove legend","51b8f575":"#Distribution of total members\nplt.figure(figsize=(16,8))\nsns.kdeplot(train_df['hogar_total'])\nplt.xlabel('Total members')\nplt.title('Distribution of total members in household')","a769d623":"#Align training and test dataset to find common features\ntrain_df,test_df = train_df.align(test_df,join='inner',axis=1)\n\nprint('Training Features shape: ', train_df.shape)\nprint('Testing Features shape: ', test_df.shape)","f9db5696":"#let's join train and test data\ndata = pd.concat([train_df,test_df],axis=0)\ndata.head()","5deb5920":"#check distinct values in object(categorical) column\ncat_cols = data.nunique()==2\ncat_cols = list(cat_cols[cat_cols].keys())","0e44c219":"#change 'yes' to 1 and 'no' to 0 in below 3 columns to make consistent values in columns \n# as per description given on data page\ncols = ['edjefe', 'edjefa','dependency']\ndata[cols] = data[cols].replace({'no': 0, 'yes':1}).astype(float)\n\n#interaction features\ndata['hogar_mid'] = data['hogar_adul'] - data['hogar_mayor']\ndata['bedroom%'] =  data['bedrooms']\/data['rooms']\ndata['person\/rooms'] = data['rooms']\/data['hhsize']\ndata['male_ratio'] = data['r4h3']\/data['r4t3']\ndata['female_ratio'] = data['r4m3']\/data['r4t3']\ndata['female_per_room'] = data['r4m3']\/data['rooms']\ndata['female_per_bedroom']  = data['r4m3']\/data['bedrooms']\ndata['hogarmid_per_bedroom']  = data['hogar_mid']\/data['bedrooms']","bd15b760":"#drop columns contains mostly null values and other columns like id and idhogar not useful in model\ndata.drop(labels=['v2a1','v18q1','rez_esc','Id','idhogar'],axis=1,inplace=True)\nprint('data shape after dropping null columns :',data.shape)","9cf36be6":"#impute missing values with -1\ndata.fillna(-1,inplace=True)","efdc454e":"train_df = data[:len(train_df)]\ntest_df = data[len(train_df):]\nprint('Training data shape: ', train_df.shape)\nprint('Testing data shape: ', test_df.shape)","1b93f975":"#import ML models and metrics\nfrom sklearn.metrics import f1_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import f1_score,make_scorer\nfrom sklearn.model_selection import cross_val_score\n\n# Custom scorer for cross validation\nscorer = make_scorer(f1_score, greater_is_better=True, average = 'macro')","cc3e82e2":"X = train_df\nlogR = LogisticRegression(class_weight='balanced',C=0.0005)\ncv_score = cross_val_score(logR, X, y, cv = 10, scoring = scorer)\nprint(f'10 Fold Cross Validation F1 Score = {round(cv_score.mean(), 4)} with std = {round(cv_score.std(), 4)}')\n","f227074e":"logR.fit(X,y)\npreds_log = logR.predict(test_df)\nsub_log = pd.DataFrame({'Id':test_df.index, 'Target':preds_log})\nsub_log.to_csv('sub_log1.csv', index=False)\n","b2f679a3":"#### We can see people at extreme poverty level have at least 4 rooms including two bedrooms.","f2d1e166":"#### We can see there is not much signigicant difference between people of different poverty level who owns a mobile phone. And least people from extreme poverty level owns a computer. For a tablet, there is not much significant difference between extreme and moderate poverty level.","e3bd90ab":"## Feature Engineering","67d8a1a8":"#### Surprisingly, more people at moderate poverty level have no water supply as comparison to extreme. But for electricity, it seems normal as more people at extreme poverty level have no electricity as compared to other levels.","ca5a54e1":"#### We can see from above two cells that columns v2a1, v18q1, rez_esc are missing for most of the observations in both training and test dataset.","86bafd4f":"## Modelling","49875ddb":"#### Here, we can see that number of observations in training data set is very less than test dataset (almost 40%).","1185770e":"#### Around 40% of households have 4 individuals in family.A few households have more than 8 members in family.","1c61952d":"#### People at extreme poverty level have more children(<19) as compared to other level.","17fe1567":"#### *As seen in above figure, we are dealing with imbalanced class problem!*","cfcda722":"#### We can see in above figure that number of childrens(both male and female) have direct impact on poverty level. It has a decreasing trend in poverty level, as number of children decreases. ","034e25f1":"#### It is clarified in discussion, that correct poverty level is poverty level of head of the family. We can identity it using parentesco1 column with value 1. Let's use this to correct poverty level in errorneous records.","cf0ccb30":"## Exploratory Data Analysis","3adcf848":"#### From discussion in [thread](https:\/\/www.kaggle.com\/c\/costa-rican-household-poverty-prediction\/discussion\/61403#358941), poverty level is not consistent throughout the household. As per suggested by organizers, it is a data discrepany. So we will try to handle it here.","291efcf0":"#### Here, we can see that household having more males less than 12(male childs) tend to fall in extreme category.","792cb5ed":"This is my first attempt with minimal feature engineering and basic logistic regression model\non Costa Rican Household Poverty model."}}