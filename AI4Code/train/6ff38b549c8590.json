{"cell_type":{"a73c503b":"code","f054a17d":"code","0e605167":"code","56e31bab":"code","76977ec9":"code","8b3a0228":"code","716ce7b4":"code","13b6a88a":"code","794e0258":"code","120094ae":"code","ceb5fe4a":"code","c37e2931":"markdown","6b3a55e1":"markdown","9d2b9f5e":"markdown","6feb5b06":"markdown","d50f8661":"markdown","d54d2f04":"markdown","9e756dc3":"markdown","dca20261":"markdown"},"source":{"a73c503b":"!pip install git+https:\/\/github.com\/python-visualization\/branca","f054a17d":"import pandas as pd \nimport folium\nimport folium.plugins as plugins\nimport numpy as np\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","0e605167":"folium.branca.__version__","56e31bab":"\"\"\"\nimport base64\n\nimport folium\n\ndef _repr_html_(self, **kwargs):\n    html = base64.b64encode(self.render(**kwargs).encode('utf8')).decode('utf8')\n    onload = (\n        'this.contentDocument.open();'\n        'this.contentDocument.write(atob(this.getAttribute(\\'data-html\\')));'\n        'this.contentDocument.close();'\n    )\n    if self.height is None:\n        iframe = (\n            '<div style=\"width:{width};\">'\n            '<div style=\"position:relative;width:100%;height:0;padding-bottom:{ratio};\">'\n            '<iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;'\n            'border:none !important;\" '\n            'data-html={html} onload=\"{onload}\" '\n            'allowfullscreen webkitallowfullscreen mozallowfullscreen>'\n            '<\/iframe>'\n            '<\/div><\/div>').format\n        iframe = iframe(html=html, onload=onload, width=self.width, ratio=self.ratio)\n    else:\n        iframe = ('<iframe src=\"about:blank\" width=\"{width}\" height=\"{height}\"'\n                  'style=\"border:none !important;\" '\n                  'data-html={html} onload=\"{onload}\" '\n                  '\"allowfullscreen\" \"webkitallowfullscreen\" \"mozallowfullscreen\">'\n                  '<\/iframe>').format\n        iframe = iframe(html=html, onload=onload, width=self.width, height=self.height)\n    return iframe\n\nfolium.branca.element.Figure._repr_html_ = _repr_html_\n\"\"\"","76977ec9":"folium.branca.__version__","8b3a0228":"import inspect\ninspect.getsource(folium.branca.element.Figure._repr_html_)","716ce7b4":"\nnp.random.seed(3141592)\ninitial_data = (\n    np.random.normal(size=(500, 2)) * np.array([[1, 1]]) +\n    np.array([[48, 5]])\n)\n\nmove_data = np.random.normal(size=(500, 2)) * 0.01\n\ndata = [(initial_data + move_data * i).tolist() for i in range(1000)]\n\nweight = 1  # default value\nfor time_entry in data:\n    for row in time_entry:\n        row.append(weight)","13b6a88a":"len(data)","794e0258":"m = folium.Map([48., 5.], tiles='stamentoner', zoom_start=6)\n\nhm = plugins.HeatMapWithTime(data)\n\nhm.add_to(m)\n\nm","120094ae":"\n\nfrom datetime import datetime, timedelta\n\n\ntime_index = [\n    (datetime.now() + k * timedelta(1)).strftime('%Y-%m-%d') for\n    k in range(len(data))\n]\n\n","ceb5fe4a":"m = folium.Map([48., 5.], tiles='stamentoner', zoom_start=6)\n\nhm = plugins.HeatMapWithTime(\n    data,\n    index=time_index,\n    auto_play=True,\n    max_opacity=0.3\n)\n\nhm.add_to(m)\n\nm","c37e2931":"## Generating data","6b3a55e1":"## This kernel is just to test folium heatmapwithtime","9d2b9f5e":"## Map example - HeatMapWithTime","6feb5b06":"## Including date for index","d50f8661":"## dependencies","d54d2f04":"## Monkey patch code - ","9e756dc3":" ## Install branca from github -\n(Keep internet option on in settings for this to work)","dca20261":"## Inpect code from branca -"}}