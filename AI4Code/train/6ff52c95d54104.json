{"cell_type":{"8a3afd46":"code","ea8fc183":"code","f1c480a3":"code","0a03d0a7":"code","80ead60d":"code","93585d9e":"code","89bf8bc5":"code","0d4a4230":"code","69b658b5":"code","48acc881":"code","c2cd55e8":"code","f1a64351":"code","d1986274":"code","5199147e":"code","79006b89":"code","4ab42dc1":"code","aed1d95c":"code","5ca33028":"code","2b33c291":"code","48276988":"code","36875d9a":"code","e0cfbe8a":"markdown","e8ace7ba":"markdown","57fe2327":"markdown","9bfb5910":"markdown","299942cd":"markdown","b8e0a31b":"markdown","68a0da1c":"markdown","99675dd5":"markdown","19bb6ac8":"markdown","bec36be3":"markdown","f32dc47d":"markdown"},"source":{"8a3afd46":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea8fc183":"df = pd.read_csv('..\/input\/imdb-films-by-actor-for-10k-actors\/actorfilms.csv', delimiter=',',  encoding='utf8')\ndf.head()","f1c480a3":"df.isnull().sum()","0a03d0a7":"df[\"Actor\"].value_counts()","80ead60d":"df[\"Film\"].value_counts()","93585d9e":"#Code by Devasshree Madhugiri https:\/\/www.kaggle.com\/devsubhash\/fitness-trackers-market-analysis-eda\n\n#average ratings by Brand\nround(df.groupby('Actor')['Rating'].mean().sort_values(ascending=False).iloc[:10],1)","89bf8bc5":"#Code by Devasshree Madhugiri https:\/\/www.kaggle.com\/devsubhash\/fitness-trackers-market-analysis-eda\n\n#average ratings by Brand\nround(df.groupby('Actor')['Votes'].mean().sort_values(ascending=True).iloc[:10],1)","0d4a4230":"#Code by Devasshree Madhugiri https:\/\/www.kaggle.com\/devsubhash\/fitness-trackers-market-analysis-eda\n\n#color palette for this notebook\ncolors = [\"#F72585\",\"#B5179E\",\"#7209B7\",\"#560BAD\",\"#480CA8\",\"#3A0CA3\",\\\n\"#3F37C9\",\"#4361EE\",\"#4895EF\",\"#4CC9F0\",\"#a5a58d\"]\npalette = sns.color_palette(palette = colors)\n\nsns.palplot(palette, size =1)\nplt.show()","69b658b5":"Morgan = df[(df['Actor']=='Morgan Freeman')].reset_index(drop=True)\nMorgan.head()","48acc881":"#Code by Devasshree Madhugiri https:\/\/www.kaggle.com\/devsubhash\/fitness-trackers-market-analysis-eda\n\n# Rating vs Votes\n#filter by Actor\nlist = [\"Morgan Freman\",\"Fred Astaire\",\"Lauren Bacall\",\"Brigitte Bardot\",\"John Belushi\",\"Ingrid Bergman\",\"Humphrey Bogart\",\"Marlon Brando\",\"Richard Burton\",\"Gary Cooper\",\"Bette Davis\"]\nseries = df[\"Actor\"].isin(list)\ndf_f = df[series]\nfig, ax = plt.subplots(figsize=(15,6))\nax = sns.stripplot(x=\"Rating\", y=\"Votes\", data=df_f,hue=\"Actor\", palette=colors,size=7, marker=\"o\")","c2cd55e8":"#Code by Devasshree Madhugiri https:\/\/www.kaggle.com\/devsubhash\/fitness-trackers-market-analysis-eda\n\n#average battery life\ndata={\"Actor\":[\"Morgan Freeman\",\"Fred Astaire\",\"Lauren Bacall\",\"Brigitte Bardot\",\"John Belushi\",\"Ingrid Bergman\",\"Humphrey Bogart\",\"Marlon Brando\",\"Richard Burton\",\"Gary Cooper\",\"Bette Davis\"],\n      \n      \"Rating\":[6.7,7.2,8.2,6.5,8.1,7.5,8.0,8.4,7.2,7.9,8.1]}\ndf_actor=pd.DataFrame(data)\n\nsns.set_style('white')\nplt.figure(figsize=(10,7))\nax=sns.barplot(x=\"Rating\", y=\"Actor\",data=df_actor, palette= colors)","f1a64351":"#Code by Puru Behl https:\/\/www.kaggle.com\/accountstatus\/mt-cars-data-analysis\n\nsns.distplot(df['Rating'])\nplt.axvline(df['Rating'].values.mean(), color='red', linestyle='dashed', linewidth=1)\nplt.title('IMDb Ratings distribution');","d1986274":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Actors by Rating\ntop_actor = df.sort_values(by='Rating', ascending=False)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_actor.Actor, x=top_actor.Rating, palette= colors)\nplt.xticks()\nplt.xlabel('Rating')\nplt.ylabel('Actor')\nplt.title('Top 20 Actors by Rating')\nplt.show()","5199147e":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Actors by number of Votes\ntop_actor = df.sort_values(by='Votes', ascending=False)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_actor.Actor, x=top_actor.Votes, palette= colors)\nplt.xticks()\nplt.xlabel('Votes')\nplt.ylabel('Actor')\nplt.title('Top 20 Actors by Votes')\nplt.show()","79006b89":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Films by number of Votes\ntop_film = df.sort_values(by='Rating', ascending=True)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_film.Film, x=top_film.Rating, palette= colors)\nplt.xticks()\nplt.xlabel('Rating')\nplt.ylabel('Film')\nplt.title('20 Films by Ratings')\nplt.show()","4ab42dc1":"#Code by Firat Gonen https:\/\/www.kaggle.com\/frtgnn\/elo-eda-lgbm\/notebook \n\nplt.figure(figsize=(10, 6))\nplt.title('IMDb Votes Distribution')\nsns.despine()\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})\n\nsns.distplot(df['Votes'], hist=True, color='red', rug=False,norm_hist=True);","aed1d95c":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Films by Ratings (ascending False)\ntop_film = df.sort_values(by='Rating', ascending=False)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_film.Film, x=top_film.Rating, palette= colors)\nplt.xticks()\nplt.xlabel('Rating')\nplt.ylabel('Film')\nplt.title('Top 20 Films by Ratings')\nplt.show()","5ca33028":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Films by number of Votes\ntop_film = df.sort_values(by='Votes', ascending=True)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_film.Film, x=top_film.Votes, palette= colors)\nplt.xticks()\nplt.xlabel('Votes')\nplt.ylabel('Film')\nplt.title('Top 20 Films by Votes')\nplt.show()","2b33c291":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Actor)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Pastel1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","48276988":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Film)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","36875d9a":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#Fixed by Statwhizz dropping duplicates and adding film\/rating  @toomuchsauce\n\n\n#The Best 20 Films by Ratings (ascending False)\ntop_film = df.sort_values(by='Rating', ascending=False)[['Film', 'Rating']].drop_duplicates()[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_film.Film, x=top_film.Rating, palette= colors)\nplt.xticks()\nplt.xlabel('Rating')\nplt.ylabel('Film')\nplt.title('Top 20 Films by Ratings')\nplt.show()","e0cfbe8a":"#Again, I've never heard about any of this films.","e8ace7ba":"#IMDb (an acronym for Internet Movie Database)\n\n\"IMDb is an online database of information related to films, television programs, home videos, video games, and streaming content online \u2013 including cast, production crew and personal biographies, plot summaries, trivia, ratings, and fan and critical reviews. Originally a fan-operated website, the database is now owned and operated by IMDb.com, Inc., a subsidiary of Amazon.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/IMDb","57fe2327":"#Except Brando, Morgan Freeman and Pacino I don't know the majority here.\n\n#Even changing to Ascending True i didn't get the top Actors.","9bfb5910":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcR7gDQROCSDhOAJ340u9i0gskJOXVIHhYRaBQ&usqp=CAU)thesubsequent.com","299942cd":"#I used to know Ali McGraw, not Melinda McGraw.","b8e0a31b":"#Those were suppose to be on the top. According to www.imdb.com\/poll\n\nMorgan Freeman. (7 movies): 1-The Shawshank Redemption 2-The Dark Knight 3-Se7en 4-The Dark Knight Rises 5-Batman Begins 6-Unforgiven 7-Million Dollar Baby.\n\nAl Pacino. \n\nRobert Duvall. \n\nRobert De Niro. \n\nChristian Bale. \n\nMichael Caine. \n\nGary Oldman. \n\nHarrison Ford.\n\nhttps:\/\/www.imdb.com\/poll\/yyTyxd5coRY\/","68a0da1c":"#Why only 2 films if I have written between brackets 20?\n\n#Line to fix by Statwhizz aka toomuch sauce\n\ntop_film = df.sort_values(by='Rating', ascending=False)[['Film', 'Rating']].drop_duplicates()[:20]","99675dd5":"That's all for now.","19bb6ac8":"#None of them I recognize the name.","bec36be3":"#I don't know any of those Top names","f32dc47d":"W  = weighted rating\n\nR = average for the movie as a number from 1 to 10 (mean) = (Rating)\n\nv  = number of votes for the movie = (votes)\n\nm = minimum votes required to be listed in the Top 250 (currently 25,000)\n\nC = the mean vote across the whole report (currently 7.0)\n\n\n\"The W in this formula is equivalent to a Bayesian posterior mean (see Bayesian statistics).\"\n\n\"The IMDb also has a Bottom 100 feature which is assembled through a similar process although only 10,000 votes must be received to qualify for the list.\"\n\n\"The Top 250 list comprises a wide range of feature films, including major releases, cult films, independent films, critically acclaimed films, silent films, and non-English-language films. Documentaries, short films and TV episodes are not currently included.\"\n\n\"Since 2015, there has been a Top 250 list devoted to ranking television shows.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/IMDb#Statistics"}}