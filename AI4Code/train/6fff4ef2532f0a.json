{"cell_type":{"4cee602e":"code","4acddf5c":"code","c4c163fb":"code","4aa1dda0":"code","e5cdda68":"code","cc12bed5":"code","870b3097":"code","25fafcff":"code","980db226":"code","9a0d4472":"code","e438eec3":"code","b2537e53":"code","261827a2":"code","bea32ea4":"code","cdd48108":"code","e2bb0c89":"code","4eab80c4":"code","38839f78":"code","d1555a55":"code","2650d650":"code","aca480cb":"code","ba6ef33d":"code","efd186a8":"code","7d63e564":"code","869824c1":"code","2c004ea2":"code","a19b081c":"code","424ee2ab":"code","3a948cd4":"code","3825558d":"code","18bbb8ba":"code","c09e672b":"markdown","ae253dc7":"markdown","ad3f775b":"markdown","5fd00c46":"markdown"},"source":{"4cee602e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4acddf5c":"import seaborn as sns","c4c163fb":"train_df = pd.read_csv('\/kaggle\/input\/bike-sharing-demand\/train.csv')","4aa1dda0":"train_df.info()","e5cdda68":"train_df.drop(['atemp','casual','registered'],axis=1,inplace=True)","cc12bed5":"def extract_features(df):\n    df.datetime = pd.to_datetime(df.datetime)\n    df['hour'] = df.datetime.dt.hour\n    df['month'] = df.datetime.dt.month\n    df['weekday'] = df.datetime.dt.weekday\n","870b3097":"extract_features(train_df)","25fafcff":"train_df.head()","980db226":"# sns.pairplot(data=train_df[['weekday','hour','month','count']],hue='count')","9a0d4472":"train_df['count'].hist()","e438eec3":"train_df['count'] = np.log1p(train_df['count'])","b2537e53":"train_df['count'].hist()","261827a2":"# sns.pairplot(data=train_df,hue='count')","bea32ea4":"train_df.columns.drop('count')","cdd48108":"train_df.describe().T","e2bb0c89":"corr = train_df.corr()","4eab80c4":"sns.heatmap(corr,cmap='coolwarm',annot=True)","38839f78":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.ensemble import ExtraTreesRegressor\n","d1555a55":"X_train, X_test, y_train, y_test = train_test_split(train_df.drop(['count','datetime'],axis=1), train_df['count'], test_size=0.33, random_state=42)","2650d650":"\n# poly = PolynomialFeatures(degree=3)\n# X_train_ = poly.fit_transform(X_train)\n# reg = LinearRegression().fit(X_train_,y_train)\nreg = ExtraTreesRegressor(n_estimators=15, random_state=42).fit(X_train, y_train)","aca480cb":"reg.score(X_train,y_train)\n","ba6ef33d":"# X_test_ = poly.fit_transform(X_test)\nreg.score(X_test,y_test)","efd186a8":"test_df = pd.read_csv('\/kaggle\/input\/bike-sharing-demand\/test.csv')\nextract_features(test_df)","7d63e564":"x_test = test_df.drop(['datetime','atemp'],axis=1)","869824c1":"x_test.head()","2c004ea2":"# X_test__ = poly.fit_transform(x_test)\ny_log = reg.predict(x_test)\ny_result = np.expm1(y_log)","a19b081c":"y_result = np.expm1(y_log)","424ee2ab":"result = pd.DataFrame({'datetime':test_df.datetime,'count':y_result})","3a948cd4":"result['count']=result['count'].astype(int)\n","3825558d":"result.to_csv('\/kaggle\/working\/bike_share_prediction.csv',index=False)","18bbb8ba":"result","c09e672b":"### fixing count skewing","ae253dc7":"# Group 9\n# Amr Osama Abdelsalam\n# Gouda Ebrahem Gouda\n# Ahmed Elsaid Abdo\n# Mohamed Amin Atallah","ad3f775b":"### extracting month and hour and week day features","5fd00c46":"### atemp is highly correlated to temp and casula and registered are missing in the test data"}}