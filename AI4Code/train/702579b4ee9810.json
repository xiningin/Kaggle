{"cell_type":{"3243481b":"code","83c26943":"code","276bd3fe":"code","bb4efbd2":"code","f1dace2c":"code","8748d6c6":"code","2fa55493":"code","df2cefbe":"code","58396af8":"code","d66554e4":"code","d86f9ac8":"code","086e5569":"code","aec3413a":"code","0093d5b9":"code","3b67d5ed":"code","aa12a06f":"code","cbda812d":"code","b5e5f680":"code","0ddcdc68":"code","eaa6e0e8":"code","0b8f44e9":"code","c3ec5a6d":"code","da98a309":"code","46cc0c06":"code","34ff8da4":"code","ad6e3007":"code","ee749d6f":"code","8e58df21":"code","fb9b7c31":"code","796a2062":"code","cf5c006a":"code","0257d5f0":"code","5ac07cb8":"code","6b7633e5":"code","01f28e62":"code","1cf13545":"code","31298369":"code","04127096":"code","dc0ba6aa":"markdown","aae39fb5":"markdown","1d73c81a":"markdown","325dffad":"markdown","940cbed0":"markdown","4e6e1e93":"markdown","90abb421":"markdown","8b8a19d9":"markdown","99fbd927":"markdown","f178d886":"markdown","04393861":"markdown","e7d4cc66":"markdown","de8f6894":"markdown","35be627d":"markdown","6f52bf70":"markdown","7ad18853":"markdown","228e289f":"markdown","43299406":"markdown","07fa95f2":"markdown","cbe8c41f":"markdown","47c57752":"markdown","e69db3e1":"markdown","396efe3e":"markdown","6d846e29":"markdown"},"source":{"3243481b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83c26943":"!pip install pycaret -q\n!pip install optuna -q","276bd3fe":"def score(x1, x2):\n    return (10*x1)**2 + x2**2\n\nimport optuna\noptuna.logging.set_verbosity(30)\n\ndef objective(trial):\n    hyperparameter1 = trial.suggest_uniform('hyperparameter1', -10, 10)\n    hyperparameter2 = trial.suggest_uniform('hyperparameter2', -10, 10)\n    return score(hyperparameter1, hyperparameter2)\n\nstudy = optuna.create_study()\nstudy.optimize(objective, n_trials=100,)","bb4efbd2":"print(study.best_params)","f1dace2c":"optuna.visualization.plot_param_importances(study)","8748d6c6":"optuna.visualization.plot_slice(study, params=['hyperparameter1',\"hyperparameter2\"])","2fa55493":"optuna.visualization.plot_contour(study, params=['hyperparameter1',\"hyperparameter2\"])","df2cefbe":"from pycaret.datasets import get_data\ndataset = get_data('credit').drop_duplicates()","58396af8":"dataset.columns","d66554e4":"data = dataset.sample(frac=0.3, random_state=786)\ndata_unseen = dataset.drop(data.index)\n\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\n\nprint('Data for Modeling: ' + str(data.shape))\nprint('Unseen Data For Predictions ' + str(data_unseen.shape))","d86f9ac8":"X = data.drop(\"default\",axis=1)\ny = data[\"default\"]\nX_test = data_unseen.drop(\"default\",axis=1)\ny_test = data_unseen[\"default\"]\ntrain_data = lgb.Dataset(X, y)","086e5569":"import lightgbm as lgb\nfrom sklearn.metrics import roc_auc_score\nparams = {}\nmodel = lgb.train(params, train_data)\ny_predict = model.predict(X_test)\nprint(f\"auc: {roc_auc_score(y_test, y_predict)}\")","aec3413a":"from sklearn.model_selection import train_test_split\ndef objective(trial):\n    param = {\n        # 'objective': trial.suggest_categorical(\"objective\",  ['RMSE', 'MAE']),\n        # 'lambda_l1': trial.suggest_loguniform('lambda_l1', 1e-8, 10.0),\n        'num_leaves': trial.suggest_int('num_leaves', 2, 256),\n        'max_depth': trial.suggest_int('max_depth', 5, 10),\n        'feature_fraction': trial.suggest_discrete_uniform('feature_fraction', 0.4, 1.0, 0.1),\n        # 'bagging_fraction': trial.suggest_uniform('bagging_fraction', 0.4, 1.0),\n        # 'min_data_in_leaf': trial.suggest_int('min_data_in_leaf', 5, 100),\n    }\n\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.33, random_state=42)\n    train_data = lgb.Dataset(X_train, y_train)\n    model = lgb.train(param, train_data)\n    y_predict = model.predict(X_valid)\n    return roc_auc_score(y_valid,y_predict)\n\nstudy = optuna.create_study(direction='maximize')\nstudy.optimize(objective, n_trials=20)","0093d5b9":"print('Number of finished trials:', len(study.trials))\nprint('Best trial:', study.best_trial.params)","3b67d5ed":"model = lgb.train(study.best_trial.params,train_data)\ny_predict = model.predict(X_test)\nprint(f\"auc: {roc_auc_score(y_test, y_predict)}\")","aa12a06f":"optuna.visualization.plot_param_importances(study)","cbda812d":"optuna.visualization.plot_contour(study, params=['num_leaves',\"max_depth\"])","b5e5f680":"from pycaret.classification import *\n\nexp_clf102 = setup(data = data, target = 'default', session_id=123,\n#                   normalize = True, \n#                   transformation = True, \n#                   ignore_low_variance = True,\n#                   bin_numeric_features = ['LIMIT_BAL', 'AGE'],\n                  )","0ddcdc68":"top5 = compare_models(n_select=5, fold=5,sort=\"AUC\")","eaa6e0e8":"for model in top5:\n    print(model)","0b8f44e9":"lightbgm_model = top5[3]","c3ec5a6d":"lightbgm_model = create_model('lightgbm', fold = 5)","da98a309":"predict_model(lightbgm_model);","46cc0c06":"tuned_lgb = tune_model(lightbgm_model, optimize='AUC',fold=5, n_iter=20,choose_better=True)","34ff8da4":"predict_model(tuned_lgb);","ad6e3007":"final_lgb = finalize_model(tuned_lgb)","ee749d6f":"predicted = predict_model(final_lgb,data_unseen)\npredicted.head()","8e58df21":"roc_auc_score(predicted[\"default\"],predicted[\"Score\"])","fb9b7c31":"tuned_top5 = [tune_model(model, optimize='AUC',fold=5,choose_better=True) for model in top5]","796a2062":"for model in tuned_top5:\n    predict_model(model)","cf5c006a":"final_cat = finalize_model(tuned_top5[0])","0257d5f0":"predicted = predict_model(final_cat,data_unseen)\nroc_auc_score(predicted[\"default\"],predicted[\"Score\"])","5ac07cb8":"plot_model(tuned_lgb, plot='calibration')","6b7633e5":"calibrated_lgb = calibrate_model(tuned_lgb,fold=5)","01f28e62":"plot_model(calibrated_lgb, plot='calibration')","1cf13545":"predict_model(calibrated_lgb);","31298369":"final_clb_lgb = finalize_model(calibrated_lgb)","04127096":"predicted = predict_model(final_clb_lgb,data_unseen)\nroc_auc_score(predicted[\"default\"],predicted[\"Score\"])","dc0ba6aa":"### 20\u56de\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u305f\u7d50\u679c\u3001\u3088\u308a\u7cbe\u5ea6\u304c\u9ad8\u3044\u30e2\u30c7\u30eb\u3092\u5f97\u305f","aae39fb5":"\u4e88\u60f3\u306e\u901a\u308a`feature_fraction`\u306e\u5f71\u97ff\u5ea6\u304c\u4f4e\u3044","1d73c81a":"\u5de6\u4e0b\u3092\u4e2d\u5fc3\u306b\u30b5\u30fc\u30c1\u30f3\u30b0\u3057\u305f\u3002","325dffad":"\u5b9f\u306f\u4e00\u756a\u7cbe\u5ea6\u304c\u9ad8\u3044\u306e\u306fLightgbm\u3067\u306f\u306a\u304f\u3066\u3001CatBoost\u3067\u3042\u308b\u3002","940cbed0":"## \u74b0\u5883\u8a2d\u5b9a\n\u307e\u305a\u3001\u74b0\u5883\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3053\u3053\u3067\u306f\u3001\u30c7\u30fc\u30bf\u3068\u76ee\u6a19\u5909\u6570\u3001\u307e\u3060\u3001\u30c7\u30fc\u30bf\u3082\u524d\u51e6\u7406\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002  \n\u8a2d\u5b9a\u306e\u4e2d\u3067\u81ea\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3059\u308b\u3002","4e6e1e93":"x1, x2 \u306e\uff12\u3064\u306e\u5909\u6570\u3092\u4f5c\u3063\u305f\u3002  \nx1, x2\u4e21\u65b9\u3068\u3082\uff10\u306b\u8fd1\u3044\u307b\u3046\u304c\u826f\u3044\u3002  \n\u6700\u7d42\u7d50\u679c\u306b\u5bfe\u3059\u308b\u5f71\u97ff\u306b\u3064\u3044\u3066\u3001x1\u306e\u5f71\u97ff\u306fx2\u306e100\u500d\u3002\n","90abb421":"\u30ea\u30b9\u30c8\u304b\u3089\u76f4\u63a5\u30e2\u30c7\u30eb\u3092\u9078\u629e\u3057\u3066\u3055\u3089\u306a\u308b\u64cd\u4f5c\u3092\u52a0\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002  \n`create_model`\u3067\u65b0\u3057\u3044\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002","8b8a19d9":"\u7cbe\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u305f\u3002","99fbd927":"\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067\u3059\u3079\u3067\u306e\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3059\u308b","f178d886":"### \u30c7\u30fc\u30bf","04393861":"\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066CV\u3067\u6027\u80fd\u3092\u6bd4\u8f03\u3059\u308b","e7d4cc66":"\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u3002","de8f6894":"### \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u305b\u305a\u3067\u4e88\u6e2c\u3059\u308b","35be627d":"x1\u306e\u307b\u3046\u306f0\u306b\u8fd1\u3044\u3068\u3053\u308d\u306b\u30b5\u30fc\u30c1\u30f3\u30b0\u3057\u3066\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u308b\u3002","6f52bf70":"# Optuna ","7ad18853":"\u898b\u305f\u3053\u3068\u304c\u306a\u3044\u30c7\u30fc\u30bf\u3067\u5b9f\u969b\u306e\u6027\u80fd\u3092\u30c6\u30b9\u30c8\u3057\u3066\u307f\u308b\u3002","228e289f":"\u30ea\u30b9\u30c8\u306e\u4e2d\u306f\u666e\u901a\u306e`sklearn`\u306eAPI\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3002","43299406":"Optuna\u3067\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u305flightgbm\u3088\u308a\u9ad8\u3044\u7cbe\u5ea6\u3092\u51fa\u3057\u305f\u3002","07fa95f2":"TOP5\u306e\u30e2\u30c7\u30eb\u3092\u4e00\u62ec\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u3002","cbe8c41f":"# pycrate\u306e\u7d39\u4ecb","47c57752":"## \u7c21\u5358\u306a\u30c7\u30e2","e69db3e1":"## \u5b9f\u969b\u306e\u30c7\u30e2","396efe3e":"calibration","6d846e29":"`tune_model`\u3067\u81ea\u52d5\u7684\u306b\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30e9\u30f3\u30c0\u30e0\u30b5\u30fc\u30c1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002  \n`optimize`\u3067\u6700\u9069\u5316\u3057\u305f\u3044\u6307\u6a19\u3092\u9078\u629e\u3067\u304d\u308b\u3002\uff08\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u7684\u306a\u6307\u6a19\u306f\u4f7f\u3048\u306a\u3044\uff09  \n`n_iter`\u3067\u5b9f\u9a13\u306e\u56de\u6570\u3092\u9078\u3076\u3002  \n`choose_better`\uff1a\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u7d50\u679c\u304c\u826f\u304f\u306a\u304b\u3063\u305f\u3089\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30e2\u30c7\u30eb\u306b\u623b\u308b\u3002"}}