{"cell_type":{"f9001034":"code","e8b62c47":"code","f8e5a5e7":"code","7ed63754":"code","f799d04d":"code","979fbbad":"code","0d3ce934":"code","9d02ba2b":"code","09773f08":"code","241b18b3":"code","522d9fc1":"code","1f927f34":"code","75c4dbd0":"code","4ca4be4f":"code","52b45cf5":"code","dc55f4b9":"code","23f5b95b":"code","0f258b62":"code","84a17996":"code","0d744f72":"code","af6ead73":"code","03e2c45a":"code","c47a8035":"code","4cc3dfc0":"code","1d387baf":"code","80e3946c":"code","18e72258":"code","24d20a9b":"code","622c7ee1":"markdown","e3afd57a":"markdown","d2bc207f":"markdown","f517db3a":"markdown","bf029ba4":"markdown","30b35ec9":"markdown","715dc22f":"markdown","4712337a":"markdown","3a98f689":"markdown","b4d23505":"markdown","b43cb3d3":"markdown","964cbd06":"markdown","2e775b68":"markdown","1eb09071":"markdown"},"source":{"f9001034":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","e8b62c47":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/data.csv\")\ndata","f8e5a5e7":"data.drop(\"Rank\",axis=1, inplace=True)","7ed63754":"data.columns[0]","f799d04d":"data.drop(data.columns[0], axis=1,inplace=True)","979fbbad":"data.columns.values","0d3ce934":"data[\"Total\"] = data.sum(axis=1)\ndata","9d02ba2b":"data.City.unique()","09773f08":"def Germany(country):\n    if \"germany\" in country.lower():\n        return True\n    return False\n\ndataGermany = data[data[\"City\"].apply(Germany)]","241b18b3":"dataGermany","522d9fc1":"GerMean = round(dataGermany[\"Total\"].mean())\nGerMean","1f927f34":"def Austria(country):\n    if \"austria\" in country.lower():\n        return True\n    return False\ndataAustria = data[data[\"City\"].apply(Austria)]","75c4dbd0":"dataAustria","4ca4be4f":"AustMean = round(dataAustria[\"Total\"].mean())\nAustMean","52b45cf5":"def Switzerland(country):\n    if \"switzerland\" in country.lower():\n        return True\n    return False\n\ndataSwitzerland = data[data[\"City\"].apply(Switzerland)]","dc55f4b9":"dataSwitzerland","23f5b95b":"SwitzMean = round(dataSwitzerland[\"Total\"].mean())\nSwitzMean","0f258b62":"def France(country):\n    if \"france\" in country.lower():\n        return True\n    return False\n\ndataFrance = data[data[\"City\"].apply(France)]","84a17996":"dataFrance","0d744f72":"FranceMean = round(dataFrance[\"Total\"].mean())\nFranceMean","af6ead73":"def Belgium(country):\n    if \"belgium\" in country.lower():\n        return True\n    return False\n\ndataBelgium = data[data[\"City\"].apply(Belgium)]","03e2c45a":"dataBelgium","c47a8035":"BelgMean = round(dataBelgium[\"Total\"].mean())\nBelgMean","4cc3dfc0":"def Netherlands(country):\n    if \"netherlands\" in country.lower():\n        return True\n    return False\n\ndataNeth = data[data[\"City\"].apply(Netherlands)]","1d387baf":"dataNeth","80e3946c":"NethMean = round(dataNeth[\"Total\"].mean())\nNethMean","18e72258":"x = [\"Germany\", \"Austria\", \"Switzerland\", \"France\", \"Belgium\", \"Netherlands\"]\ny = [GerMean, AustMean, SwitzMean, FranceMean, BelgMean, NethMean]","24d20a9b":"plt.figure(figsize=(18,6))\nplt.bar(x,y)\nplt.ylim(50,160)\nplt.xlabel(\"Countries\",size=18)\nplt.ylabel(\"Average Expenses (Euro)\", size=18)\nplt.title(\"Supermarket Expenses in Western Europe\",size=25)\nplt.show()","622c7ee1":"### France","e3afd57a":"### Germany","d2bc207f":"# Supermarket Expenses In Western Europe","f517db3a":"## Relevant Libraries","bf029ba4":"## Add Column for Total Expenses","30b35ec9":"### Belgium","715dc22f":"## Bar Plot with Matplotlib","4712337a":"## Drop Useless Columns","3a98f689":"### Source: Numbeo.com\n### This analysis was executed to show supermarket expenses in western european countries.\n### Currency: Euro.","b4d23505":"## Split the Data by Country","b43cb3d3":"### Switzerland","964cbd06":"### Netherlands","2e775b68":"## Data","1eb09071":"### Austria"}}