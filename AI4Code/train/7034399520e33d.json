{"cell_type":{"0deaadb6":"code","faa7da37":"code","2b54b4b6":"code","247f27be":"code","292e66e0":"code","c7ea1330":"code","ce73cbab":"code","8d88eddd":"code","331b73f4":"code","89570000":"code","b76b3ea8":"code","ff5f13cc":"code","f90519f5":"code","9bd7c873":"code","ad35bc4e":"code","ba1caec3":"code","5972b46e":"code","24be6b36":"markdown"},"source":{"0deaadb6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","faa7da37":"# Load Data\n\ntrain = pd.read_csv(\"..\/input\/bigquery-geotab-intersection-congestion\/train.csv\")\ntest = pd.read_csv(\"..\/input\/bigquery-geotab-intersection-congestion\/test.csv\")\n","2b54b4b6":"# We will create one hot encoding for entry , exit direction fields for train, test set\n\ndfen = pd.get_dummies(train[\"EntryHeading\"],prefix = 'en')\ndfex = pd.get_dummies(train[\"ExitHeading\"],prefix = 'ex')\ntrain = pd.concat([train,dfen],axis=1)\ntrain = pd.concat([train,dfex],axis=1)","247f27be":"dfent = pd.get_dummies(test[\"EntryHeading\"],prefix = 'en')\ndfext = pd.get_dummies(test[\"ExitHeading\"],prefix = 'ex')\ntest = pd.concat([test,dfent],axis=1)\ntest = pd.concat([test,dfext],axis=1)","292e66e0":"train.shape,test.shape","c7ea1330":"test.head()","ce73cbab":"train.columns","8d88eddd":"X = train[[\"IntersectionId\",\"Hour\",\"Weekend\",\"Month\",'en_E',\n       'en_N', 'en_NE', 'en_NW', 'en_S', 'en_SE', 'en_SW', 'en_W', 'ex_E',\n       'ex_N', 'ex_NE', 'ex_NW', 'ex_S', 'ex_SE', 'ex_SW', 'ex_W']]\ny1 = train[\"TotalTimeStopped_p20\"]\ny2 = train[\"TotalTimeStopped_p50\"]\ny3 = train[\"TotalTimeStopped_p80\"]\ny4 = train[\"DistanceToFirstStop_p20\"]\ny5 = train[\"DistanceToFirstStop_p50\"]\ny6 = train[\"DistanceToFirstStop_p80\"]\n\n\n\n\n","331b73f4":"testX = test[[\"IntersectionId\",\"Hour\",\"Weekend\",\"Month\",'en_E',\n       'en_N', 'en_NE', 'en_NW', 'en_S', 'en_SE', 'en_SW', 'en_W', 'ex_E',\n       'ex_N', 'ex_NE', 'ex_NW', 'ex_S', 'ex_SE', 'ex_SW', 'ex_W']]","89570000":"from sklearn.linear_model import LinearRegression","b76b3ea8":"lr = LinearRegression()","ff5f13cc":"lr.fit(X,y1)\npred1 = lr.predict(testX)\nlr.fit(X,y2)\npred2 = lr.predict(testX)\nlr.fit(X,y3)\npred3 = lr.predict(testX)\nlr.fit(X,y4)\npred4 = lr.predict(testX)\nlr.fit(X,y5)\npred5 = lr.predict(testX)\nlr.fit(X,y6)\npred6 = lr.predict(testX)","f90519f5":"# Appending all predictions\nall_preds = []\nfor i in range(len(pred1)):\n    for j in [pred1,pred2,pred3,pred4,pred5,pred6]:\n        all_preds.append(j[i])\n        \n\n","9bd7c873":"len(all_preds)","ad35bc4e":"sub  = pd.read_csv(\"..\/input\/bigquery-geotab-intersection-congestion\/sample_submission.csv\")","ba1caec3":"sub[\"Target\"] = all_preds","5972b46e":"sub.to_csv(\"benchmark_beat_lr.csv\",index = False)","24be6b36":" ### Approach: We will make 6 predictions based on features - IntersectionId , Hour , Weekend , Month , entry & exit directions .Target variables will be TotalTimeStopped_p20 ,TotalTimeStopped_p50,TotalTimeStopped_p80,DistanceToFirstStop_p20,DistanceToFirstStop_p50,DistanceToFirstStop_p80 ."}}