{"cell_type":{"b673238d":"code","a5016a7f":"code","37b8f7af":"code","71293d4f":"code","f39be855":"code","dc55fc5c":"code","2e02ed15":"code","995b5a74":"code","0043cbec":"code","4032cf65":"code","8f907bc4":"code","7c498327":"code","ecca8916":"code","8d177987":"code","a8c49f93":"code","425764fe":"code","0e9c70c6":"code","98f72cb9":"code","2d3a1c73":"code","3d05a59b":"code","e4e80227":"code","d203c9be":"code","deb226e3":"code","f6103b65":"code","fd3dcacc":"code","79aef487":"code","dcf90940":"code","48096480":"code","5b27a9bd":"code","cea83e54":"code","ef4d2bb7":"code","71cc6711":"code","651faff5":"code","afeb8b56":"code","7abe4823":"code","898f9b36":"code","92a1058d":"markdown","cd497664":"markdown","5a6f4ad0":"markdown","9945ef96":"markdown","c8bdc856":"markdown","df73315a":"markdown","a73a8dc5":"markdown","1c7c06d4":"markdown","b88bbe4a":"markdown","4edc50c0":"markdown","66d1c609":"markdown","2abbd6b7":"markdown","caad1ea3":"markdown","87929d84":"markdown","1ccf105e":"markdown","ce297730":"markdown","2219fd56":"markdown","c5932387":"markdown","c257cf05":"markdown","6ce1419d":"markdown"},"source":{"b673238d":"import numpy as np\nimport pandas as pd","a5016a7f":"df = pd.read_csv(\"..\/input\/churn-modelling\/Churn_Modelling.csv\")","37b8f7af":"df.shape","71293d4f":"df.columns","f39be855":"df.dtypes","dc55fc5c":"df.head()","2e02ed15":"df.tail()","995b5a74":"# Importing essential libraries for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0043cbec":"# Visualizing the count of 'exited customers' in the dataset\nplt.figure(figsize=(8,8))\nsns.countplot(x='Exited', data=df)\nplt.xlabel('0: Customers still with the bank, 1: Customers exited the bank')\nplt.ylabel('Count')\nplt.title('Bank Customers Churn Visualization')\nplt.show()","4032cf65":"df.isna().any()","8f907bc4":"df.drop(['RowNumber','CustomerId','Surname'], axis=1, inplace=True)\ndf.columns","7c498327":"# Converting 'Geography' and 'Gender' column\ngeography = pd.get_dummies(df['Geography'], drop_first=True)\ngender = pd.get_dummies(df['Gender'], drop_first=True)","ecca8916":"# Appending columns to original dataframe\ndf = pd.concat([df, geography, gender], axis=1)\ndf.columns","8d177987":"df.drop(['Geography', 'Gender'], axis=1, inplace=True)","a8c49f93":"X = df.drop('Exited', axis=1)\ny = df['Exited']","425764fe":"# Splitting the dataset into train and test sets.\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)\nprint('X_train size: {}, X_test size: {}'.format(X_train.shape, X_test.shape))","0e9c70c6":"# Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","98f72cb9":"# Importing the Keras libraries and packages\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","2d3a1c73":"# Initialising the ANN\nclassifier = Sequential()","3d05a59b":"# Adding the input layer and the first hidden layer\nclassifier.add(Dense(units=6, kernel_initializer='he_uniform', activation='relu', input_dim=11))","e4e80227":"# Adding the second hidden layer\nclassifier.add(Dense(units=6, kernel_initializer='he_uniform', activation='relu'))","d203c9be":"# Adding the output layer\nclassifier.add(Dense(units=1, kernel_initializer='glorot_uniform', activation='sigmoid'))","deb226e3":"# Compiling the ANN\nclassifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","f6103b65":"# Fitting the ANN to the Training set\nmodel_history = classifier.fit(X_train, y_train, batch_size=10, validation_split=0.33, epochs=100)","fd3dcacc":"# List all data in history\nmodel_history.history.keys()","79aef487":"# Summarize history for accuracy\nplt.figure(figsize=(8,8))\nplt.plot(model_history.history['accuracy'])\nplt.plot(model_history.history['val_accuracy'])\nplt.title('Model Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='lower right')\nplt.show()","dcf90940":"# Summarize history for loss\nplt.figure(figsize=(8,8))\nplt.plot(model_history.history['loss'])\nplt.plot(model_history.history['val_loss'])\nplt.title('Model Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper right')\nplt.show()","48096480":"# Predicting the Test set results\ny_pred = classifier.predict(X_test)","5b27a9bd":"y_pred","cea83e54":"y_pred = (y_pred > 0.5)\ny_pred","ef4d2bb7":"# Making the Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","71cc6711":"# Plotting confusion matrix\nplt.figure(figsize=(8,6))\nsns.heatmap(cm, cmap='Blues', annot=True, xticklabels=['Did not Exit', 'Exit'], yticklabels=['Did not Exit', 'Exit'])\nplt.xlabel('Predicted values')\nplt.ylabel('Actual values')\nplt.title('Confusion Matrix for ANN model')\nplt.show()","651faff5":"# Calculate the Accuracy\nfrom sklearn.metrics import accuracy_score\nscore = accuracy_score(y_pred,y_test)\nprint('The accuracy for ANN model is: {}%'.format(score*100))","afeb8b56":"def predict_exit(sample_value):\n  \n  # Convert list to numpy array\n  sample_value = np.array(sample_value)\n\n  # Reshape because sample_value contains only 1 record\n  sample_value = sample_value.reshape(1, -1)\n\n  # Feature Scaling\n  sample_value = sc.transform(sample_value)\n\n  return classifier.predict(sample_value)","7abe4823":"# Predictions\n# Value order 'CreditScore','Age','Tenure','Balance','NumOfProducts','HasCrCard','IsActiveMember','EstimatedSalary','Germany','Spain','Male'.\nsample_value = [738, 62, 10, 83008.31, 1, 1, 1, 42766.03, 1, 0, 1]\nif predict_exit(sample_value)>0.5:\n  print('Prediction: High change of exit!')\nelse:\n  print('Prediction: Low change of exit.')","898f9b36":"# Predictions\n# Value order 'CreditScore','Age','Tenure','Balance','NumOfProducts','HasCrCard','IsActiveMember','EstimatedSalary','Germany','Spain','Male'.\nsample_value = [805, 45, 9, 116585.97, 1, 1, 0, 189428.75, 1, 0, 0]\nif predict_exit(sample_value)>0.5:\n  print('Prediction: High change of exit!')\nelse:\n  print('Prediction: Low change of exit.')","92a1058d":"<a id = '9.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Confusion Matrix<\/strong><\/p>\n","cd497664":"<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Dataset - large sample of the bank's customers.<\/strong><\/p>\n<p style = \"font-size : 20px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>To make this dataset, the bank gathered information such as customer id, credit score, gender, age, tenure, balance, if the customer is active, has a credit card, etc. During a period of 6 months, the bank observed if these customers left or stayed in the bank.<\/strong><\/p>\n\n\n\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Aim <\/strong><\/p>\n<p style = \"font-size : 20px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Goal is to make an Artificial Neural Network that can predict, based on geo-demographical and transactional information given above, if any individual customer will leave the bank or stay (customer churn). Also, rank all the customers of the bank, based on their probability of leaving.\n<\/strong><\/p>\n\n","5a6f4ad0":"<p style = \"font-size : 24px; color : #DC143C ; font-family : 'Comic Sans MS';  \"><strong>Please upvote this kernel if you like it. It motivates me to produce more quality content :)<\/strong><\/p>","9945ef96":"<a id = '0'><\/a>\n<p style = \"font-size : 35px; color : #34656d ; font-family : 'Comic Sans MS'; text-align : center; background-color : #f9b208; border-radius: 5px 5px;\"><strong>Table of Contents<\/strong><\/p> \n\n* [Imporing Libraries](#1.0)\n* [Loading the data](#2.0)\n* [Exploratory Data Analysis (EDA)](#3.0) \n* [Feature Engineering](#4.0) \n* [Data Preprocessing](#5.0) \n* [Building Artificial Neural Network (ANN)](#6.0) \n* [How does ANN work?](#7.0) \n* [Model Evaluation](#8.0) \n* [Confusion Matrix](#9.0) \n* [Accuracy](#10.0) \n* [Predictions](#11.0) ","c8bdc856":"<img style=\"float: center;  border:5px solid #FF00FF; width:100%\" src = https:\/\/www.digipay.guru\/wp-content\/uploads\/2020\/05\/customer-onboarding-banks-feature.jpg>","df73315a":"<a id = '10.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Accuracy<\/strong><\/p>\n","a73a8dc5":"<a id = '7.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>How does ANN work?<\/strong><\/p>\n\n<p style = \"font-size : 22px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>It is truly said that the working of ANN takes its roots from the neural network residing in human brain. ANN operates on something referred to as Hidden State. These hidden states are similar to neurons. Each of these hidden state is a transient form which has a probabilistic behavior. A grid of such hidden state act as a bridge between the input and the output.\n We have an input layer which is the data we provide to the ANN. We have the hidden layers, which is where the magic happens. Lastly, we have the output layer, which is where the finished computations of the network are placed for us to use.<\/strong><\/p>\n\n\n\n\n\n\n\n![1*f0hA2R652htmc1EaDrgG8g.png](http:\/\/cdn-images-1.medium.com\/max\/600\/1*f0hA2R652htmc1EaDrgG8g.png)\n<p style = \"font-size : 22px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Initially the weights of the network can be randomly. When the input in given to the input layer the process moves forward and the hidden layer receives the input combined with the weights. This process goes on till the final layer of output is reached and result is given. When the result is out it is compared to the actual value and a back propagation algorithm comes into play to adjust the weights of the network linkages to better the result. What do the neurons in the layers then do? They are responsible for the learning individually. They consist of activation function that allows the signal to pass or not depending on which activation function is being used and what input came from the previous layer. We'll see activation functions in detail now.<\/strong><\/p>\n\n\n![flowchart-ANN.png](http:\/\/www.analyticsvidhya.com\/blog\/wp-content\/uploads\/2014\/10\/flowchart-ANN.png)","1c7c06d4":"<p style = \"font-size : 50px; color : #532e1c ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffb037; border-radius: 5px 5px;\"><strong>Bank Customer's Churn Classification with Deep Learning<\/strong><\/p>\n\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong> Classifying bank customers based on their previous bank activities, that they will exit\/leave the bank or not.<\/strong><\/p>\n\n\n\n\n","b88bbe4a":"<p style = \"font-size : 20px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong> Results - 86% Accuracy achieved.<\/strong><\/p>\n\n\n","4edc50c0":"<a id = '2.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Loading the dataset<\/strong><\/p>\n","66d1c609":"![genes-10-00553-g001.png](https:\/\/www.mdpi.com\/genes\/genes-10-00553\/article_deploy\/html\/images\/genes-10-00553-g001.png)","2abbd6b7":"<p style = \"font-size : 20px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Total correct predictions that customers stay in bank = 1502<\/strong><\/p>\n<p style = \"font-size : 20px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Total correct predictions that customers leave the bank = 218<\/strong><\/p>\n<p style = \"font-size : 20px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Total incorrect predictions that customers stay in the bank = 187<\/strong><\/p>\n<p style = \"font-size : 20px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Total incorrect predictions that customers leave in the bank = 93<\/strong><\/p>\n\n\n\n\n\n","caad1ea3":"<a id = '1.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Importing Libraries<\/strong><\/p>\n","87929d84":"<a id = '6.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Building Artificial Neural Network (ANN)<\/strong><\/p>\n\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Artificial neural networks are one of the main tools used in machine learning. As the \u201cneural\u201d part of their name suggests, they are brain-inspired systems which are intended to replicate the way that we humans learn. Neural networks consist of input and output layers, as well as (in most cases) a hidden layer consisting of units that transform the input into something that the output layer can use. ANNs have three layers that are interconnected. The first layer consists of input neurons. Those neurons send data on to the second layer, which in turn sends the output neurons to the third layer. ANNs are considered non-linear statistical data modeling tools where the complex relationships between inputs and outputs are modeled or patterns are found.<\/strong><\/p>\n\n\n\n\n","1ccf105e":"![1*Dvx1j18vyKyvLlIpxzVSmQ.png](https:\/\/miro.medium.com\/max\/456\/1*Dvx1j18vyKyvLlIpxzVSmQ.png)","ce297730":"<a id = '11.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong> Predictions<\/strong><\/p>\n\n","2219fd56":"<a id = '5.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Data Preprocessing<\/strong><\/p>\n\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Split the dataset into independent features (ie: X) and label (ie: y).<\/strong><\/p>\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Split the dataset further into train and test sets.<\/strong><\/p>\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Apply feature scaling to train and test sets of independent features.<\/strong><\/p>\n\n\n\n\n\n\n","c5932387":"<a id = '4.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Feature Engineering<\/strong><\/p>\n\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Converting categorical features into numerical features using get_dummies()<\/strong><\/p>\n\n","c257cf05":"<a id = '8.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Model Evaluation<\/strong><\/p>\n","6ce1419d":"<a id = '3.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Exploratory Data Analysis (EDA)<\/strong><\/p>"}}