{"cell_type":{"f52b4b13":"code","0c43cb5f":"code","f9314242":"code","70430b24":"code","1c907002":"code","5ae75cf0":"code","908b71f5":"code","08ced8b1":"code","62b22a14":"code","cbdd0b7d":"code","828fae6d":"code","9405cf49":"code","28611900":"code","f93bac3e":"code","6d003373":"code","d086d419":"code","56e081e1":"code","587249e0":"code","e3ed171a":"code","85ba4ced":"code","7c23fcd6":"code","627b483f":"code","e538ddfa":"code","055adfe2":"code","c57ca5f4":"code","76394367":"code","5fc78c4a":"code","0b7d7046":"code","fb0fdf44":"code","dd1b7934":"code","802ac115":"code","46a18d3e":"code","bd75999c":"code","43be0944":"code","f13278c5":"code","e4df6eb0":"code","e69b0abd":"markdown","8c068766":"markdown","4099b23a":"markdown","c5dbcc05":"markdown","1b97469e":"markdown","ba44daf4":"markdown","efcd37de":"markdown","21db87a3":"markdown","5d66df7c":"markdown","aaee0c7b":"markdown","217bad3d":"markdown","f232e2d3":"markdown","dcdd1677":"markdown","c158eb80":"markdown","6c6ff8ed":"markdown","47bafdc5":"markdown","bcf661a3":"markdown","1187af00":"markdown"},"source":{"f52b4b13":"import pandas as pd\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\nimport numpy as np\n ","0c43cb5f":"train = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')\nprint(train.shape)\ntrain.head()","f9314242":"train.describe()","70430b24":"train.columns.isnull()","1c907002":"train.time_step.value_counts()","5ae75cf0":"unique_breaths = train['breath_id'].unique()\nnum_breaths = len(unique_breaths)\nprint(num_breaths)","908b71f5":"train['breath_id'][:500].plot();","08ced8b1":"breath_lengths = train[['id','breath_id']].groupby('breath_id').count()['id']\nbreath_lengths.unique()","62b22a14":"# Each breath consist of 80 values\nBREATH_LENGTH = breath_lengths.unique()[0]","cbdd0b7d":"r_c_std_in_breaths = train[['breath_id','R','C']].groupby('breath_id').std()\nprint(r_c_std_in_breaths['R'].unique())\nprint(r_c_std_in_breaths['C'].unique())","828fae6d":"r_values = train[['breath_id', 'R']].groupby('breath_id').mean()['R']\nprint(r_values)\nprint()\nprint('Unique values:')\nprint(r_values.value_counts())\n\nr_unique = np.sort(r_values.unique()).astype(int)","9405cf49":"c_values = train[['breath_id', 'C']].groupby('breath_id').mean()['C']\nprint(c_values)\nprint()\nprint('Unique values:')\nprint(c_values.value_counts())\n\nc_unique = np.sort(c_values.unique()).astype(int)","28611900":"rc_values = np.array([\n    [r, c, len(train[(train['R'] == r) & (train['C'] == c)])\/\/BREATH_LENGTH] \n    for r in r_unique \n    for c in c_unique\n])\n\nx = range(len(rc_values))\nplt.bar(x, rc_values[:,2])\nplt.xticks(x, [str(r) + '_' + str(c) for r, c in rc_values[:,:2] ])\nplt.xlabel('R_C')\nplt.ylabel('Number counts')\nplt.show()","f93bac3e":"first_breath  = train[train['breath_id'] == 1]\nsecond_breath = train[train['breath_id'] == 2]\n\nx = range(BREATH_LENGTH)\nt1 = first_breath['time_step']\nt2 = second_breath['time_step']\nplt.plot(x, t1)\nplt.plot(x, t2, ls = '--')","6d003373":"breath_timestep = (max(t1) - min(t1)) \/ BREATH_LENGTH","d086d419":"plt.plot(train.pressure[:1000])","56e081e1":"plt.plot(train.pressure[:80])\nplt.plot(train.u_in[:80])\nplt.show()","587249e0":"X = train['u_in'].tolist()\ntrain_y = train['pressure'].tolist()\n#test_x = test['columns_in'].values\nminimo = np.min(X)\nmaximo = np.max(X)\nX -= minimo\nX \/= maximo\n\nminimo = np.min(train_y)\nmaximo = np.max(train_y)\ntrain_y -= minimo\ntrain_y \/= maximo\n\n\n","e3ed171a":"n = 80\nX = [X[i:i + n] for i in range(0, len(X), n)]\ntrain_y = [train_y[i:i + n] for i in range(0, len(train_y), n)]","85ba4ced":"lin_reg = LinearRegression()\nlin_reg.fit(X, train_y)\ntrain_predictions = lin_reg.predict(X)","7c23fcd6":"plt.plot(train_predictions[1])","627b483f":"test = pd.read_csv(\"..\/input\/ventilator-pressure-prediction\/test.csv\")","e538ddfa":"X_test = test['u_in'].tolist()\n\ntst_minimo = np.min(X_test)\ntst_maximo = np.max(X_test)\nX_test -= tst_minimo\nX_test \/= tst_maximo\n\n","055adfe2":"n = 80\nX_test = [X_test[i:i + n] for i in range(0, len(X_test), n)]","c57ca5f4":"test_predictions = lin_reg.predict(X_test)","76394367":"plt.plot(test_predictions[0])","5fc78c4a":"minimo = np.min(train.pressure.tolist())\nmaximo = np.max(train.pressure.tolist())\ntest_predictions = test_predictions * maximo + minimo","0b7d7046":"plt.plot(test_predictions[0])","fb0fdf44":"test_predictions.shape","dd1b7934":"test_predictions[0]","802ac115":"test_predictions = np.array(test_predictions)\nsamples, _ = test_predictions.shape\npressure = []\ntest_predictions = list(test_predictions)\n\nfor signal in range(samples):\n    breath_pressure = test_predictions[signal-1]#[j for i in test_predictions[signal] for j in i]\n    pressure.extend(breath_pressure)","46a18d3e":"len(pressure)","bd75999c":"sub = pd.read_csv('..\/input\/ventilator-pressure-prediction\/sample_submission.csv')","43be0944":"sub.pressure = pressure","f13278c5":"sub.head()","e4df6eb0":"sub.to_csv('submission_regression.csv', index=False)","e69b0abd":"From that we hipotesized that it would be possible to fit a linear regression  between u_in and pressure","8c068766":"## Load training data and EDA","4099b23a":"One time step seems to correspond to about {[](http:\/\/)breath_timestep}","c5dbcc05":"So does C:","1b97469e":"## Linear Regression model trainig\n","ba44daf4":"## Predict over test set","efcd37de":"There is about a factor two scatter in the various R\/C combinations.\n\nFor R = 20 we see C = 50 most often, for R = 5, 50 we see C = 10 most often.\n\n","21db87a3":"## R and C\nR and C values are constant within each breath (having zero standard deviation)","5d66df7c":"# Simple Linear Regression between *u_in* and *pressure*","aaee0c7b":"## Assigning predicted values to submission csv","217bad3d":"## Select input feature and target vector","f232e2d3":"Denormalizing output","dcdd1677":"R has only three distinct values:","c158eb80":"it seems to have a strong relation with *u_in* time series","6c6ff8ed":"### Time steps in individual breaths\nTake a look at time sampling for the first two breaths. Looks like pretty uniform sampling in time.","47bafdc5":"## What about the target vector *pressure*?","bcf661a3":"## Import libraries","1187af00":"Vladimir Sim\u00f5es da Luz Junior\n\n[LinkedIn](https:\/\/www.linkedin.com\/in\/vladimir-simoes-da-luz-junior\/)\n\n[GitHub](https:\/\/www.linkedin.com\/in\/vladimir-simoes-da-luz-junior\/)\n\nThis is a baseline solution in order to undestand the RC relationship between \"*u_in*\" and the target vector \"*pressure*\". Simple EDA and fit of simple Linear Regression. Each individual breath was selected as the model input. Therefore each input\/output signal is an array of 80 values.\n"}}