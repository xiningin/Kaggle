{"cell_type":{"efb1a677":"code","81a0b561":"code","51433dcc":"code","631b4d7f":"code","cb05320e":"code","edbafa55":"code","b417ab08":"code","a19beffa":"code","bc3ec3c5":"code","2d56d98b":"code","b5d7719d":"code","d85d2da4":"code","4506dd4e":"code","1e6e216d":"code","f05981d0":"code","fc40afb8":"code","0118ee51":"code","c63e5d73":"code","d070d9b2":"code","d6f1df50":"code","296b32fd":"code","250bd561":"code","9d861608":"code","f47c7b0c":"code","142e5704":"code","1b1e70fa":"code","2a45a187":"code","767fb6ec":"code","686cd032":"code","2f208bfb":"code","53ada169":"code","b5f54a73":"code","a5cd86d7":"code","47fe4a6b":"code","d91f4e4e":"code","f4857080":"code","2b9fd8d4":"code","a37f1433":"code","e9732ee5":"code","7d70aae0":"code","b320f805":"code","4d1d48b0":"code","f01d424a":"markdown","2a6206e1":"markdown","2a4f7b9c":"markdown","5fc60d8d":"markdown","636cdc25":"markdown","a0826b04":"markdown","cd9fa0a1":"markdown","bf5f8f7f":"markdown","0eee46f7":"markdown","806f667b":"markdown","28949d18":"markdown","000c6869":"markdown","3489cba7":"markdown","a6456dc2":"markdown","0b8e6879":"markdown","eaefeefd":"markdown","909eead7":"markdown","1079a218":"markdown","f426249d":"markdown","a4a90708":"markdown","927b206e":"markdown","618643e0":"markdown","89079952":"markdown","d6f64299":"markdown","c5e73955":"markdown","2c3678c5":"markdown","77f6931c":"markdown","5c7b42a5":"markdown","d7da5b1b":"markdown","bfcc5726":"markdown","bf2a8529":"markdown","77f23628":"markdown","8abe9688":"markdown","347f961f":"markdown","db069c3c":"markdown","5a551259":"markdown","6b18d48d":"markdown","a4900e21":"markdown","70ea12ff":"markdown","0c9ecc97":"markdown","afd0b3a1":"markdown","a137bf97":"markdown","63a9b1ab":"markdown"},"source":{"efb1a677":"import pandas as pd\nimport numpy as np\nimport random\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n#set the seed to assure you get the same answers, otherwise, you could remove the following line\nrandom.seed(100)\n\nfile = '..\/input\/ab_data1.csv'\ndf = pd.read_csv(file)","81a0b561":"df.head()","51433dcc":"df.shape[0]","631b4d7f":"df.user_id.nunique()","cb05320e":"\"%.4f\" % (df.converted.sum() \/ df.converted.count())","edbafa55":"df.groupby(['group','landing_page']).count()['converted']","b417ab08":"df.isnull().sum()","a19beffa":"#df2 = df[(df.group == 'treatment') & (df.landing_page == 'new_page')]\ndf2 = df.query(\"group == 'treatment' & landing_page == 'new_page'\")\ndf2.head()","bc3ec3c5":"# Double Check all of the corresponding rows were removed - this should be 0\ndf2[((df2['group'] == 'treatment') & (df2['landing_page'] == 'new_page')) == False].shape[0]","2d56d98b":"df2.user_id.nunique()","b5d7719d":"df2[df2.user_id.duplicated() == True]\n# Row 2893, user_id 773192","d85d2da4":"df2.drop_duplicates(subset='user_id', keep='first', inplace=True)","4506dd4e":"\"%.4f\"% (df.converted.sum() \/ df.converted.count())","1e6e216d":"obs_old = df.query('group == \"control\"')['converted'].sum() \/ \\\n        df.query('group == \"control\"')['converted'].count()\n'%.4f' % obs_old","f05981d0":"obs_new = df.query('group == \"treatment\"')['converted'].sum() \/ \\\ndf.query('group == \"treatment\"')['converted'].count()\n'%.4f' % obs_new","fc40afb8":"null_rate = df['converted'].sum() \/ df.shape[0]\nnull_rate","0118ee51":"df.drop_duplicates(subset='user_id', keep='first', inplace=True)\n# Use a sample size for each page equal to the ones in ab_data1.csv. \ndf.groupby('landing_page').count()['user_id']","c63e5d73":"n_new , n_old = 145319 , 145261","d070d9b2":"new_page_converted = np.random.choice(2,n_new,p=[1-null_rate,null_rate])\nnew_page_converted","d6f1df50":"old_page_converted = np.random.choice(2,n_old,p=[1-null_rate,null_rate])\nold_page_converted","296b32fd":"new_page_converted.sum() \/ n_new - old_page_converted.sum() \/ n_old","250bd561":"p_diffs = []\n# bootstrap sampling with python, several minites may cost\nfor _ in range (10000):\n    bootstrap_new = np.random.choice(2,n_new,p=[1-null_rate,null_rate])\n    bootstrap_old = np.random.choice(2,n_old,p=[1-null_rate,null_rate])\n    p_new = bootstrap_new.sum() \/n_new\n    p_old = bootstrap_old.sum() \/ n_old\n    p_diffs.append(p_new - p_old)\n    ","9d861608":"# convert list to array\np_diffs = np.array(p_diffs)","f47c7b0c":"plt.hist(p_diffs)\nobs_diff = obs_new-obs_old\nplt.axvline(x = obs_diff,color='red')","142e5704":"(p_diffs > obs_diff).mean()","1b1e70fa":"import statsmodels.api as sm\n\nconvert_old = df.query('landing_page == \"old_page\"')['converted'].sum()\nconvert_new = df.query('landing_page == \"new_page\"')['converted'].sum()","2a45a187":"z_score, p_value = sm.stats.proportions_ztest\\\n([convert_new,convert_old],[n_new, n_old],alternative='larger')\n(z_score, p_value)","767fb6ec":"# check if NaN contains in column 'converted'\ndf[df.converted.isna() ==True]","686cd032":"df.dropna(inplace=True)","2f208bfb":"df['interpret']=1 \ndf = df.join(pd.get_dummies(df['group']))","53ada169":"#rename treatment row\ndf.rename(index = str,columns = {'treatment':'ab_page'},inplace = True)","b5f54a73":"# drop column :control\ndf.drop('control',axis = 1,inplace=True)","a5cd86d7":"# change datatype into integer\ndf.converted = df.converted.astype(int)\ndf.head()","47fe4a6b":"log_mod = sm.Logit(df.converted,df[['ab_page','interpret']])\nresult = log_mod.fit()","d91f4e4e":"result.summary()","f4857080":"file1 = '..\/input\/countries.csv'\ncountries_df = pd.read_csv(file1)\ndf_new = countries_df.set_index('user_id').join(df.set_index('user_id'), how='inner')","2b9fd8d4":"### Create the necessary dummy variables\ndf_new[['CA','UK','US']] = pd.get_dummies(df_new['country'])","a37f1433":"# drop CA row to keep two columns\ndf_new.drop('CA',axis=1,inplace=True)","e9732ee5":"df_new.head()","7d70aae0":"df_new['interpret'] = 1 # add column for interpret\n\nmod1 = sm.Logit(df_new.converted,df_new[['interpret','US','UK']])\nmod1.fit().summary()","b320f805":"df_new['page_UK'] = df_new['ab_page'] * df_new['UK']\ndf_new['page_US'] = df_new['ab_page'] * df_new['US']","4d1d48b0":"### Fit Your Linear Model And Obtain the Results\nmod2 = sm.Logit(df_new.converted,df_new[['interpret','page_US','page_UK','US','UK','ab_page']])\nmod2.fit().summary()\n","f01d424a":"h. Simulate 10,000 $p_{new}$ - $p_{old}$ values using this same process similarly to the one you calculated in parts **a. through g.** above.  Store all 10,000 values in a numpy array called **p_diffs**.","2a6206e1":"**Observation**:  p_values (except interpret) are all above the Type I Error: 5% show **NO** significant effects on conversion. ","2a4f7b9c":"c. Given that an individual was in the `treatment` group, what is the probability they converted?","5fc60d8d":"e. Simulate $n_{new}$ transactions with a convert rate of $p_{new}$ under the null.  Store these $n_{new}$ 1's and 0's in **new_page_converted**.","636cdc25":"d. Remove **one** of the rows with a duplicate **user_id**, but keep your dataframe as **df2**.","a0826b04":"f. Now, you are considering other things that might influence whether or not an individual converts.  Discuss why it is a good idea to consider other factors to add into your regression model.  Are there any disadvantages to adding additional terms into your regression model? <br>\n> Advantage: By using multiple logistic regression, model will make better predictions. And we can try time series analysis later.\n\n> Disadvantages: landing_page is categorical variable that should be applied in dummy variable, can't be added into regression model directly.","cd9fa0a1":"d. Provide the summary of your model below, and use it as necessary to answer the following questions.","bf5f8f7f":"`2.` For the rows where **treatment** is not aligned with **new_page** or **control** is not aligned with **old_page**, we cannot be sure if this row truly received the new or old page. \n\na. Now let's create a new dataset that meets the specifications above. Store your new dataframe in `df2`<br>\n**two ways on dataframe query are suggested**.","0eee46f7":"d. Consider your results from a. through c. above, and explain below whether you think there is sufficient evidence to say that the new treatment page leads to more conversions. <br>\n**Not sufficient. We could even see that the new 'treatment' group has lower convertion rate than the whole group rate in (a.) and 'control' group rate in (b.)**","806f667b":"i. Plot a histogram of the **p_diffs**. Refering to the value in **PART 1, step 4, b,c** to get **obs_diff**","28949d18":"k. In words, explain what you just computed in part j.  What is this value called in scientific studies?  What does this value mean in terms of whether or not there is a difference between the new and old pages? <br>\nIt's called p value. At a Type I error rate of 5%, p is larger than it, hence we fail to reject the Null hypothesis. The old pages have higher or equal converted rate than new pages in **88.44%** probability.","000c6869":"c. The number of unique users in the dataset.","3489cba7":"<a id='regression'><\/a>\n### Part III - A regression approach on A\/B Testing\n\n`1.` In this final part, you will see that the result you acheived in the previous A\/B test can also be acheived by performing regression.<br>\n\na. Since each row is either a conversion or no conversion, what type of regression should you be performing in this case?  <br>\n**For categorical variable: convertion, Logic regression model is preferred. **","a6456dc2":"g. Find $p_{new}$ - $p_{old}$ for your simulated values from part (e) and (f).","0b8e6879":"c. Use **statsmodels** to import your regression model.  Instantiate the model, and fit the model using the two columns you created in part **b.** to predict whether or not an individual converts.","eaefeefd":"**here, we noticed user visiting records with the same user_id got duplicated.**  see more on Question C in part ||<br>\n\nd. The proportion of users converted. ( keep in format of 4 decimal digit)","909eead7":"1. c. What is $n_{new}$? d. What is $n_{old}$?","1079a218":"<a id='conclusions'><\/a>\n## Conclusions\n### Overall, we fail to reject the Null hypothesis.Old_pages should be kept. But if we consider the timestamp as another factors, result may be different.\n","f426249d":"e. The number of samples on 2 demonsions grouped by control\/treatment and new\/old page","a4a90708":"In this regression model, \n$$ H_0\uff1ap_{old}  =  p_{new}$$\n$$H_1\uff1ap_{old} \\neq  p_{new} $$ \nBecause the alternative is defaulted as 'two-sided', **p_value = 0.23**<br>For the hypotheses testing in the **Part II**,which alternative is 'larger-sided' in regression model,its **p_value = 0.8844**<br>","927b206e":"a. Read in the dataset and take a look at the top few rows here:","618643e0":"f. Do any of the rows have missing values?","89079952":"`3.` Use **df2** and the cells below to answer the following questions:\n\na. How many unique **user_id**s are in **df2**?","d6f64299":"<a id='ab_test'><\/a>\n### Part II - A\/B Test\n\nNotice that because of the time stamp associated with each event, you could technically run a hypothesis test continuously as each observation was observed.  \n\nHowever, then the hard question is do you stop as soon as one page is considered significantly better than another or does it need to happen consistently for a certain amount of time?  How long do you run to render a decision that neither page is better than another?  **These questions are the difficult parts associated with A\/B tests in general.  **\n\n`1.` For now, consider you need to make the decision just based on all the data provided.  If you want to assume that the old page is better unless the new page proves to be definitely better at a Type I error rate of 5%, what should your null and alternative hypotheses be?  You can state your hypothesis in terms of words or in terms of **$p_{old}$** and **$p_{new}$**, which are the converted rates for the old and new pages.","c5e73955":"f. Simulate $n_{old}$ transactions with a convert rate of $p_{old}$ under the null.  Store these $n_{old}$ 1's and 0's in **old_page_converted**.","2c3678c5":"j. What proportion of the **p_diffs** are greater than the actual difference observed in **ab_data1.csv**?<br>","77f6931c":"m. Now use `stats.proportions_ztest` to compute your test statistic and p-value.  [Here](http:\/\/knowledgetack.com\/python\/statsmodels\/proportions_ztest\/) is a helpful link on using the built in.","5c7b42a5":"`4.` Use `df` in the below cells to answer some statistical questions. **keep in 4 decimal digit**\n\na. What is the probability of an individual converting regardless of the page they receive? ","d7da5b1b":"n. What do the z-score and p-value you computed in the previous question mean for the conversion rates of the old and new pages?  Do they agree with the findings in parts **j.** and **k.**?\n\nz_score  \u2013 test statistic for the z-test, p_value  \u2013 p-value 0.9125 for the z-test. They approximately agree with the findings in parts j. and k. p_value = 0.8844","bfcc5726":"e. What is the p-value associated with **ab_page**? Why does it differ from the value you found in **Part II**?","bf2a8529":"**we found that country didn't have an great impact on conversion** p-value > 5% and the bad coefficient factor on each city.","77f23628":"b. There is one **user_id** repeated in **df2**.  What is it? What is the row information for the repeat **user_id**? ","8abe9688":"By default, proportions_ztest has a parameter alternative='two-sided',  In the two sample test, **larger** means that the '>' symbol in part J","347f961f":"# Basic A\/B Testing with Regression Methods\n\n## Table of Contents\n- [Introduction](#intro)\n- [Part I - Probability](#probability)\n- [Part II - A\/B Test](#ab_test)\n- [Part III - Regression](#regression)\n\n### Project implemented based on Udacity Data Analyst Nanodegree\n\n<a id='intro'><\/a>\n### Introduction\n\nA\/B tests are very commonly performed by data analysts and data scientists.  It is important that you get some practice working with the difficulties of these. For this project, you will be working to understand the results of an A\/B test run by an**e-commerce website**.  Your goal is to work through this notebook to help the company understand if they should implement the new page, keep the old page, or perhaps run the experiment longer to make their decision. \n\n\n\n<a id='probability'><\/a>\n#### Part I - Probability\n\n`1.` To get started,  read in the `ab_data1.csv` data. Store it in `df`.","db069c3c":"l. We could also use a built-in to achieve similar results.  Though using the built-in might be easier to code, the above portions are a walkthrough of the ideas that are critical to correctly thinking about statistical significance. Fill in the below to calculate the number of conversions for each page, as well as the number of individuals who received each page. Let `n_old` and `n_new` refer the the number of rows associated with the old page and new pages, respectively.","5a551259":"**Hypothese Testing** <br>\n**$p_{new}$ - $p_{old}$ means the differences in converted success rate between the two pages **\n$$H_0\uff1ap_{old}  =  p_{new} $$\n$$H_1\uff1ap_{old} \\neq  p_{new} $$\nAssume under the null hypothesis, $p_{new}$ and $p_{old}$ both have \"true\" success rates equal to the **converted** success rate regardless of page - that is $p_{new}$ and $p_{old}$ are equal. Furthermore, assume they are equal to the **converted** rate in **ab_data1.csv** regardless of the page. <br>\nUse a sample size for each page equal to the ones in **ab_data1.csv**. Perform the sampling distribution for the difference in **converted** between the two pages over 10,000 iterations of calculating an estimate from the null. ","6b18d48d":"b. Use the below cell to find the number of rows in the dataset.","a4900e21":"b. The goal is to use **statsmodels** to fit the regression model you specified in part **a.** to see if there is a significant difference in conversion based on which page a customer receives.  However, you first need to create a column for the intercept, and create a dummy variable column for which page each user received.  Add an **intercept** column, as well as an **ab_page** column, which is 1 when an individual receives the **treatment** and 0 if **control**.","70ea12ff":"a. What is the **convert rate** for $p_{new}$ under the null?  <br>\nb. What is the **convert rate** for $p_{old}$ under the null?","0c9ecc97":"h. Though you have now looked at the individual factors of country and page on conversion, we would now like to look at an **interaction between page and country** to see if there significant effects on conversion.  Create the necessary additional columns, and fit the new model.  \n\nProvide the summary results, and your conclusions based on the results.","afd0b3a1":"> $p_{old}$ should be the same as the $p_{new}$ under the null","a137bf97":"### Bonus Part of this project\ng. Now along with testing if the conversion rate changes for different pages, also add an effect based on which country a user lives. You will need to read in the **countries.csv** dataset and merge together your datasets on the approporiate rows.  [Here](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.join.html) are the docs for joining tables. \n\nDoes it appear that country had an impact on conversion?  Don't forget to create dummy variables for these country columns - **Hint: You will need two columns for the three dummy variables.** <br>Provide the statistical output as well as a written response to answer this question.","63a9b1ab":"b. Given that an individual was in the `control` group, what is the probability they converted?"}}