{"cell_type":{"f3856dc5":"code","5b8e1d29":"code","d8c8143e":"code","c19385c1":"code","a6da8db2":"code","e7546196":"code","ac5540be":"code","bc2c489f":"code","d4308e92":"code","d3beed34":"code","84378f29":"code","f4d9d595":"code","793191ef":"code","45575885":"code","fa6bd3a7":"code","de5389a1":"code","c38d38eb":"code","80408467":"code","16e09c5a":"code","c7c31036":"code","b1a17d3e":"markdown","a1cc635f":"markdown","5920129d":"markdown","d2639463":"markdown","6aaa5417":"markdown","de8cbc16":"markdown","8c5983a2":"markdown","c4f93513":"markdown","abd4977a":"markdown","d6d1ab18":"markdown","c26e5411":"markdown","813150ed":"markdown","2c313805":"markdown","cbadbb80":"markdown"},"source":{"f3856dc5":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5b8e1d29":"df20_O = pd.read_csv('\/kaggle\/input\/nflstats\/2020O.csv')\ndf20_D = pd.read_csv('\/kaggle\/input\/nflstats\/2020D.csv')\ndf19_O = pd.read_csv('\/kaggle\/input\/nflstats\/2019O.csv')\ndf19_D = pd.read_csv('\/kaggle\/input\/nflstats\/2019D.csv')","d8c8143e":"df19D = df19_D[['Tm', 'Cmp%', 'Int%', 'Sk%', 'Rate']]\ndf20D = df20_D[['Tm', 'Cmp%', 'Int%', 'Sk%', 'Rate']]","c19385c1":"df19D = df19D.drop(df19D.index[[25]])\ndf20D = df20D.drop(df20D.index[[25]])","a6da8db2":"df19D['Cmp%'] = pd.to_numeric(df19D['Cmp%'], downcast=\"float\")\ndf19D['Int%'] = pd.to_numeric(df19D['Int%'], downcast=\"float\")\ndf19D['Sk%'] = pd.to_numeric(df19D['Sk%'], downcast=\"float\")\n\ndf20D['Cmp%'] = pd.to_numeric(df20D['Cmp%'], downcast=\"float\")\ndf20D['Int%'] = pd.to_numeric(df20D['Int%'], downcast=\"float\")\ndf20D['Sk%'] = pd.to_numeric(df20D['Sk%'], downcast=\"float\")","e7546196":"df19D['Missed_Stops%'] = -(-0.33*df19D['Cmp%'] + df19D['Int%'] + 0.83*df19D['Sk%'])\ndf20D['Missed_Stops%'] = -(-0.33*df20D['Cmp%'] + df20D['Int%'] + 0.83*df20D['Sk%'])","ac5540be":"df19D.sort_values('Rate', ascending = True).head()","bc2c489f":"df20D.sort_values('Rate', ascending = True).head()","d4308e92":"df19D.sort_values('Missed_Stops%', ascending = True).head()","d3beed34":"df20D.sort_values('Missed_Stops%', ascending = True).head()","84378f29":"df19O = df19_O[['Player','Cmp','Att','Int','Sk','1D','Yds', 'QBR' ]]\ndf20O = df20_O[['Player','Cmp','Att','Int','Sk','1D','Yds', 'QBR' ]]","f4d9d595":"df19O['EYards'] = (df19O['Cmp']*df19O['Yds'])\/(df19O['Att'] + df19O['Int'] + df19O['Sk']-df19O['1D'])\ndf20O['EYards'] = (df20O['Cmp']*df20O['Yds'])\/(df20O['Att'] + df20O['Int'] + df20O['Sk']-df20O['1D'])","793191ef":"df19O['Yards_diff'] = df19O['Yds']-df19O['EYards']\ndf20O['Yards_diff'] = df20O['Yds']-df20O['EYards']","45575885":"df19O.sort_values('Yards_diff', ascending = False).head()","fa6bd3a7":"df20O.sort_values('Yards_diff', ascending = False).head()","de5389a1":"df20O.sort_values('Yards_diff', ascending = True).head()","c38d38eb":"df19O.sort_values('Yards_diff', ascending = True).head()","80408467":"df19_rec = df19_O[['Player', 'QBrec']]\ndf19_rec['QBrec'] = df19_rec['QBrec'].str.split('-')\ndf19_rec['QBrec'] = df19_rec['QBrec'].apply(lambda x: x[0])\n\ndf20_rec = df20_O[['Player', 'QBrec']]\ndf20_rec['QBrec'] = df20_rec['QBrec'].str.split('-')\ndf20_rec['QBrec'] = df20_rec['QBrec'].apply(lambda x: x[0])","16e09c5a":"df19_ovr = df19_rec.merge(df19O, on = 'Player')\ndf20_ovr = df20_rec.merge(df20O, on = 'Player')","c7c31036":"import matplotlib.pyplot as plt\nfrom scipy import stats\n\ndf20_ovr['QBrec'] = pd.to_numeric(df20_ovr['QBrec'], downcast=\"float\")\nslope, intercept, r_value, p_value, std_err = stats.linregress(df20_ovr['QBrec'], df20_ovr['EYards'])\n\nplt.scatter(df20_ovr['QBrec'], df20_ovr['EYards'])\n\nline = slope*df20_ovr['QBrec']+intercept\nplt.plot(df20_ovr['QBrec'], line, 'r')\nprint(\"r-squared:\", r_value**2)","b1a17d3e":"I had to input the win totals by hand, so I did the defensive regression plot on excel, see below. Another similar r_squared value of 0.3 showing again decent correclation between the defensive efficency statistic and win%.","a1cc635f":"Again, good to see some very poor and inefficent QBs have a large difference between their efficent yards and actual yards (for example Wentz atrocious 2020 season, Mr. 30 int. season Jameis Winston in 2019, Drew Lock and Sam Dornald in 2020, ect).","5920129d":"As you can see by the sorting outputs above, even though this is a relativily simple stat; it seems that good passing defenses (teams which allow low QB ratings in this case) correspond to a lower Missed_Stops%. Similarly, the teams which preform worse in this stat seem to give up higher QB ratings. Again, this is a stat that measures a teams's passing defence- which doesn't necessarily correspond to their overall team defence. It is nice to see teams like 2019 SF, 2020 PIT and 2019 NE leading the pack- as these teams had well known prolific defences. ","d2639463":"Lastly, we'll want to see if these new statistics have any predictive power. For example, if we do simple linear regression with Missed_Stops% or Eyards v.s Win%, do we find any correclation? ","6aaa5417":"The goal of this notebook is to take some of what I learned from Stephen Shea and Christopher Baker's beautiful book on basketball analytics; and apply it to NFL statistics. A link to the book is here: https:\/\/www.amazon.com\/Basketball-Analytics-Objective-Strategies-Understanding\/dp\/1492923176","de8cbc16":"My second efficency stat measures the effictivness and efficency of NFL QBs for 2019 and 2020. Again, I want to stay away for TDs which can fluctuate from year to year; I'll focus on creating an efficency rating for a QB using the features above to look for QBs that are above\/below the average starter. (EYards referes to efficent yards).","8c5983a2":"And expectantly, alot of good QBs have small or negative differences between their yards and efficent yards.","c4f93513":"The first statistic I want to show is how efficent teams are at preventing yards given up due to passes. Specifically, I wanted to see how efficent defenses were at stoping drives using sacks, interceptions and by limiting completion percentages. ","abd4977a":"Next, I'll look at the difference between a players yards and their 'efficent' yards. ","d6d1ab18":"I chose to use data from the past 2 NFL seasons to see how my new statistics fared","c26e5411":"The coefficents were chosen because you need a completion from at least 1\/3 (33%) of your passes to continue the drive, 83% of the time a sack will stop a drive (https:\/\/www.reddit.com\/r\/nfl\/comments\/6hm23i\/the_tangible_value_of_nfl_sacks_how_likely_a_sack\/) and 100% of the time an interception will. ","813150ed":"Notice I'm not using TD% - this is often highly variable. Also, if a team gives up a large pass and brings down the WR at the 1 yard line and then runs it in for a score- this is just as bad as a team giving up a passing TD. I wanted to measure how well a team could prevent the opposing passing offence from functioning. ","2c313805":"![graph.png](attachment:b5ccb509-303d-4fa0-b079-2bec173adbe6.png)","cbadbb80":"With regression we can show there is some correlation between being an efficent QB and winning more football games. "}}