{"cell_type":{"fbb1b552":"code","ce9b56ae":"code","87762983":"code","e9d0a94a":"code","ba1b228d":"code","72fae1ad":"code","2e7e8e4e":"code","bc405fd8":"code","063f913e":"code","d27ae55b":"code","ac72a909":"code","14e75839":"code","d4b6c237":"code","7e353e80":"code","494b86b1":"code","b25d8794":"code","2aa87124":"code","27d4881f":"code","7e006499":"code","872a5b4a":"code","177deaaf":"code","1e970cb4":"code","a704b2ec":"code","5094bb96":"code","d06b8136":"code","c6099eb9":"code","fc61116c":"code","a025ca44":"code","f7e347b2":"code","cde07af5":"code","2b810258":"code","cb71337a":"code","6315798f":"code","669f6935":"code","47f65c2f":"code","1f6c727a":"markdown","b8349abf":"markdown"},"source":{"fbb1b552":"import numpy as np\nimport pandas as pd","ce9b56ae":"data = pd.read_csv(\"..\/input\/brasilian-houses-to-rent\/houses_to_rent.csv\")\ndata.head()","87762983":"data.shape","e9d0a94a":"data.drop('Unnamed: 0', axis=1, inplace=True)\ndata","ba1b228d":"data['floor'].replace(to_replace='-', value=0, inplace=True)\ndata","72fae1ad":"data['animal'].replace(to_replace='acept', value=0, inplace=True)\ndata['animal'].replace(to_replace='not acept', value=1, inplace=True)\n\ndata['furniture'].replace(to_replace='furnished', value=0, inplace=True)\ndata['furniture'].replace(to_replace='not furnished', value=1, inplace=True)","2e7e8e4e":"data","bc405fd8":"for col in ['hoa','rent amount','property tax','fire insurance','total']:\n    data[col].replace(to_replace='R\\$', value='', regex=True, inplace=True)\n    data[col].replace(to_replace=',', value='', regex=True, inplace=True)","063f913e":"data.isin(['Sem info']).any()","d27ae55b":"data['hoa'].replace(to_replace='Sem info', value=0, inplace=True)\ndata.isin(['Sem info']).any()","ac72a909":"data.isin(['Incluso']).any()","14e75839":"data['hoa'].replace(to_replace='Incluso', value=0, inplace=True)\ndata['property tax'].replace(to_replace='Incluso', value=0, inplace=True)\ndata.astype(dtype=np.int64)","d4b6c237":"data=data.sample(frac=1).reset_index(drop=True)","7e353e80":"data","494b86b1":"y=data['city']\nX=data.drop(['city'], axis=1)","b25d8794":"X","2aa87124":"from sklearn.model_selection import train_test_split","27d4881f":"from sklearn.preprocessing import MinMaxScaler","7e006499":"scaler = MinMaxScaler()\nscaler.fit(X)\nX= scaler.transform(X)","872a5b4a":"X","177deaaf":"X=pd.DataFrame(X)\nX","1e970cb4":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, )","a704b2ec":"y_train.shape","5094bb96":"from sklearn.linear_model import LogisticRegression as LR\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier as MLP","d06b8136":"log_model = LR(verbose=1)\nsvm_model = SVC(verbose=1)\nnn_model = MLP(hidden_layer_sizes=(16,16), activation = 'relu', solver='adam', verbose=1)","c6099eb9":"log_model.fit(X_train, y_train)\nsvm_model.fit(X_train, y_train)\nnn_model.fit(X_train, y_train)","fc61116c":"print(log_model.score(X_test, y_test))","a025ca44":"print(svm_model.score(X_test, y_test))","f7e347b2":"print(nn_model.score(X_test, y_test))","cde07af5":"#\ud558\uc9c0\ub9cc!! \/\/ skewed data\n#\ub2e8\uc21c score\ub85c\ub294 \ubcc4\ub85c \ud06c\uac8c \ub9d0\ud574\uc8fc\ub294 \uac83\uc774 \uc5c6\ub2e4. \ub370\uc774\ud130\uc758 \ubd88\uade0\ud615\uc774 \uc2ec\ud558\uae30 \ub54c\ubb38\nprint(data[data.columns[0]].sum()\/data.shape[0])","2b810258":"##\ub530\ub77c\uc11c precision\uacfc recall data\uc758 \uc870\ud654 \ud3c9\uade0\uc778 f1_score\ub97c \uc0ac\uc6a9\ud558\uc790.\nfrom sklearn.metrics import f1_score","cb71337a":"log_pred = log_model.predict(X_test)\nsvm_pred = svm_model.predict(X_test)\nnn_pred = nn_model.predict(X_test)","6315798f":"log_pred","669f6935":"log_pred.shape","47f65c2f":"print(f1_score(log_pred, y_test))\nprint(f1_score(svm_pred, y_test))\nprint(f1_score(nn_pred, y_test))","1f6c727a":"Try to use 3 models for the prediction today!!\n1. Logistic regression, 2. SVM, 3. neural network","b8349abf":"DataFrame\uc758 \ubaa8\ub4e0 \uac12\ub4e4\uc774 \uc815\uc0c1\uc801\uc73c\ub85c casting \ub418\uc5c8\uc74c\uc744 \uc54c \uc218 \uc788\ub2e4."}}