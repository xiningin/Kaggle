{"cell_type":{"b9802f15":"code","f316251a":"code","9cd19853":"code","9482c6cb":"code","6a1f4a9c":"code","cbc33b3c":"code","71ffe5ff":"code","cdbbc665":"code","c1de3e1a":"code","84157b56":"code","85ad3a1e":"code","632610aa":"code","e5f7a9ec":"code","f3784cf7":"code","af9570f5":"code","d10111c6":"code","16bce7cb":"code","b22f4f51":"code","df82cf72":"code","a89a3b1c":"code","067d330a":"code","36d16a7b":"code","085dbd4a":"code","e6ecb686":"code","0cd778ff":"code","de56f2d4":"markdown","0b287e2c":"markdown","cda6c720":"markdown","ae15f076":"markdown","b59c3609":"markdown","400b763d":"markdown","dc41cf30":"markdown","ede2b1de":"markdown","2e9260ab":"markdown","a456edb0":"markdown","5cf760c9":"markdown","a685391c":"markdown","81dd6a6d":"markdown"},"source":{"b9802f15":"!pip install git+https:\/\/github.com\/brazil-data-cube\/wlts.py","f316251a":"import wlts","9cd19853":"service = wlts.WLTS('http:\/\/brazildatacube.dpi.inpe.br\/dev\/wlts')\nservice","9482c6cb":"service.collections","6a1f4a9c":"service['mapbiomas_amz_4_1']","cbc33b3c":"# service['mapbiomas_fabi']","71ffe5ff":"tj = service.tj(latitude=-12.0, longitude=-54.0, collections='mapbiomas_amz_4_1,terraclass_amz')\ntj","cdbbc665":"tj.df()","c1de3e1a":"tj2 = service.tj(latitude=-3.014626, longitude=-55.884531, collections='mapbiomas_amz_4_1,prodes_amz_legal,terraclass_amz')\ntj2.df()","84157b56":"tj3 = service.tj(latitude=-3.558805, longitude=-53.305502, collections='mapbiomas_amz_4_1,prodes_amz_legal')\ntj3.df()","85ad3a1e":"tj_null = service.tj(latitude=-23.238155, longitude=-45.018637, collections='mapbiomas_amz_4_1')\ntj_null","632610aa":"!pip install git+https:\/\/github.com\/brazil-data-cube\/sample.py","e5f7a9ec":"!pip install wtss","f3784cf7":"import sample\nfrom wtss import *\nfrom matplotlib import pyplot as plt","af9570f5":"sample_service = sample.sample(wfs=\"http:\/\/brazildatacube.dpi.inpe.br\/bdc\/geoserver\", auth=(\"reader\", \"G30r3@d3rGS\"))","d10111c6":"sample_service.datasets","16bce7cb":"sample_service.dataset('BDC Sample Dataset - Bahia Test Area')","b22f4f51":"obs_bdc = sample_service.dataset('BDC Sample Dataset - Bahia Test Area').observation","df82cf72":"fig, ax = plt.subplots(figsize=(20,15))\n\nobs_bdc.plot(ax=ax, cmap='Set2', column='class_name',edgecolor='black', legend=True,legend_kwds={'title': \"Classes\", 'fontsize': 15})","a89a3b1c":"obs_bdc.loc[obs_bdc['class_name'] == 'Pasture'].head()","067d330a":"obs_bdc.to_file(\"my_save_bdc_obs.shp\",  encoding=\"utf-8\")","36d16a7b":"tj_bdc = service.tj(latitude=obs_bdc.iloc[93]['location'].y , longitude=obs_bdc.iloc[93]['location'].x, collections='mapbiomas_cerrado_4_1,prodes_cerrado')\ntj_bdc.df()","085dbd4a":"service = WTSS('http:\/\/www.esensing.dpi.inpe.br')","e6ecb686":"coverage = service['MOD13Q1']\nts = coverage.ts(attributes=('red', 'nir', 'ndvi'),\n                 latitude=-12.0, longitude=-54.0,\n                 start_date='2018-09-01', end_date='2019-08-31')","0cd778ff":"ts.plot()","de56f2d4":"### 1.2 Importanto a biblioteca <a id=\"sec-1-2\"><\/a>","0b287e2c":"### 1.6 Opera\u00e7\u00e3o trajectory <a id=\"sec-1-6\"><\/a>","cda6c720":"### 1.4 Opera\u00e7\u00e3o list_collections <a id=\"sec-1-4\"><\/a>","ae15f076":"## 2. Usando o wlts.py com outros clientes do BDC. <a id=\"sec-2\"><\/a>","b59c3609":"## Introdu\u00e7\u00e3o <a id=\"wlts-0\"><\/a>\n\nWLTS \u00e9 um servi\u00e7o que visa facilitar o acesso a essas diversas cole\u00e7\u00f5es de dados de uso e cobertura do solo por meio de uma API. Esta API permite realizar consultas em v\u00e1rios conjuntos de dados e retorna a trajet\u00f3ria do uso e cobertura do solo dessa cole\u00e7\u00f5es.\n\nWLTS \u00e9 baseado em tr\u00eas opera\u00e7\u00f5es:\n\n- **list_collections**: retorna a lista de todas as cole\u00e7\u00f5es dispon\u00edveis no servi\u00e7o. \n- **describe_collection**: retorna os metadados de uma determinada cole\u00e7\u00e3o de dados.\n- **trajectory**: retorna as trajet\u00f3rias de uso e cobertura do solo a partir das cole\u00e7\u00f5es, dada uma localiza\u00e7\u00e3o no espa\u00e7o. O resultado cont\u00e9m as informa\u00e7\u00f5es da classe, data e a cole\u00e7\u00e3o associada ao item de dados.","400b763d":"<hr style=\"border: 1px solid #0984e3;\">","dc41cf30":"### 1.5 Opera\u00e7\u00e3o describe_collection <a id=\"sec-1-5\"><\/a>","ede2b1de":"### 1.1 Instala\u00e7\u00e3o do `wlts.py` <a id=\"sec-1-1\"><\/a>","2e9260ab":"<hr style=\"border: 1px solid #0984e3;\">","a456edb0":"### 1.3 Inicializando o wlts: definindo a url do servi\u00e7o <a id=\"sec-1-3\"><\/a>","5cf760c9":"## 1. Python Client Library for WLTS. <a id=\"sec-1\"><\/a>\n\nDispon\u00edvel em: [http:\/\/github.com\/brazil-data-cube\/wlts.py](http:\/\/github.com\/brazil-data-cube\/wlts.py)","a685391c":"<img src=\"https:\/\/brazil-data-cube.github.io\/tech-talks\/_static\/logo-bdc-techtalks.png\" align=\"right\" width=\"150\" \/>\n\n#  Web Land Trajectory Service (WLTS) \n\n**Python Client Library for wlts (wlts.py)**\n\nFabiana Zioti, Gilberto Ribeiro, Karine Reis\n","81dd6a6d":"<hr style=\"border: 1px solid #0984e3;\">"}}