{"cell_type":{"ed1a4b7b":"code","452b7c23":"code","f64dd814":"code","6df8387c":"code","e96246d3":"code","0cf45551":"code","5af58586":"code","39368834":"code","d1ca3044":"code","dabb3183":"code","a5697091":"code","63232f01":"code","5ada4e8f":"code","2a7b1585":"code","39205390":"code","274c6cc8":"code","dba4f5cb":"code","7af4b5ce":"code","12d2257a":"code","684f8d1b":"code","90e84dc2":"code","9c5cb008":"code","6f7e314a":"code","de99d647":"code","931db39a":"code","73f69858":"code","da39d720":"code","8fabecf9":"code","966404f9":"code","18894cad":"code","9d617847":"code","12021c98":"markdown","29559383":"markdown","af4beb9d":"markdown","6b530d69":"markdown","16ed4f40":"markdown","24c7964c":"markdown","36c5fb38":"markdown","35e27d07":"markdown","a4b65917":"markdown","34e7e6b8":"markdown","0fc4b8f3":"markdown","fcff48b1":"markdown","d8bdd60f":"markdown","6271327e":"markdown"},"source":{"ed1a4b7b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","452b7c23":"# Reading Cardio Dataset\n\ncardio=pd.read_csv('\/kaggle\/input\/cardiogoodfitness\/CardioGoodFitness.csv')\n","f64dd814":"# Displaying first five rows of the dataset\n# The default parameter of head() is five. we can set the parameter inside the () \n\ncardio.head()\n","6df8387c":"# Summary Statistics of the categorical data data\n# round() function display the numeric data in round figure.\n\ncardio.describe(include='object').round()         \n","e96246d3":"# Summary Statistics of the numric data\n# round() function display the numeric data in round figure.\n\ncardio.describe().round()","0cf45551":"# Checking the shape of the data ( number of rows and columns)\n\ncardio.shape","5af58586":"# Displaaying the Data Types\ncardio.dtypes","39368834":"# Displaying count of non-null values\n\ncardio.info()","d1ca3044":"# Checking missing values in the dataset\n  \ncardio.isnull().sum()\n","dabb3183":"# Checking duplicate values in the data set\n\ncardio.duplicated(subset=None,keep='first').sum()","a5697091":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(10,10))\nsns.boxplot(data=cardio)","63232f01":"# Prroduct usage by Gender and Marital Status by Creating Pivot Table\n\ngroup=pd.pivot_table(cardio,values='Usage',index=['Product','Gender'],columns=['MaritalStatus'])\ngroup\n","5ada4e8f":"group=cardio[['Product','Age','Income','Education','Usage','Miles','Fitness']].groupby('Product').mean().round()\ngroup","2a7b1585":"agegroup=cardio[['Gender','Usage']].groupby('Gender').mean().round()\nagegroup","39205390":"maritalgroup=cardio[['MaritalStatus','Usage','Miles','Fitness']].groupby('MaritalStatus').mean().round(2)\nmaritalgroup","274c6cc8":"# checking number male and female using the product category \n\ngenuser=pd.pivot_table(cardio,values='Income',index=['Product'],columns=['Gender'],aggfunc=len)\ngenuser","dba4f5cb":"genuser=pd.pivot_table(cardio,values='Age',index=['Product'],aggfunc='mean')\ngenuser","7af4b5ce":"gp=cardio[['Product','Education']].groupby('Education').count()\ngp","12d2257a":"go=pd.pivot_table(cardio,values='Age',index=['Product'],columns=['Education'],aggfunc=len)\ngo","684f8d1b":"ms=pd.pivot_table(cardio,values='Age',index=['Product'],columns=['MaritalStatus'],aggfunc=len)\nms","90e84dc2":"ic=pd.pivot_table(cardio,values='Income',index=['Product'],aggfunc='mean').round()\nic","9c5cb008":"pd.crosstab(cardio.Product,cardio.Education,margins=True,margins_name='Total')","6f7e314a":"pd.crosstab([cardio.Product,cardio.Gender],[cardio.Usage,cardio.MaritalStatus],margins=True,margins_name='Total')","de99d647":"cardio['Age_Group']=pd.cut(cardio.Age,bins=[15,20,25,30,35,40,45,50],labels=['15-20','20-25','25-30','30-35','35-40','40-45','45-50'])\ncardio.head()","931db39a":"pd.crosstab(cardio.Age_Group,cardio.Product,margins=True,margins_name='Total')","73f69858":"cardio['Income_level']=pd.cut(cardio.Income,bins=[25000,35000,45000,55000,65000,75000,85000,95000,105000],labels=['25000-35000','35000-45000','45000-55000','55000-65000','65000-75000','75000-85000','85000-95000','95000-105000'])\ncardio.head()","da39d720":"pd.crosstab(cardio.Income_level,cardio.Product,margins=True,margins_name='Total')","8fabecf9":"pd.crosstab(cardio.Usage,cardio.Fitness,margins=True,margins_name='Total')\n\n","966404f9":"fu=pd.pivot_table(cardio,values='Fitness',index='Usage',aggfunc='mean').round(2)\nfu","18894cad":"ml=cardio[cardio.Gender=='Male']\nfl=cardio[cardio.Gender=='Female']\n\nsl=cardio[cardio.MaritalStatus=='Single']\npt=cardio[cardio.MaritalStatus=='Partnered']\n\n\nprint('The average Usage of men is:',ml['Usage'].mean())\nprint('The average Usage of women is:',fl['Usage'].mean())\nprint('The average Fitness of men is:',ml['Fitness'].mean())\nprint('The average Fitness of women is:',fl['Fitness'].mean())\nprint('The average Usage of single people is:',sl['Usage'].mean())\nprint('The average Usage of partnered people is:',pt['Usage'].mean())","9d617847":"import matplotlib.pyplot as plt\ncardio.hist(figsize=(30,30))","12021c98":"**No missing values in the data set**","29559383":"***Data shape***","af4beb9d":"# *3. Information About The Dataset*","6b530d69":"**There are 3 objects and 6 integer type data**","16ed4f40":"Unique gives the total number of unique variables. \nTop gives the variable which occur in the most in a particular column.\nFrequency gives the number of times the top variable occur","24c7964c":"***Duplicate Values***","36c5fb38":"***Data Types***","35e27d07":"***Missing Values***","a4b65917":"# *1. Loading & Displaying The Dataset* ","34e7e6b8":"***Outliers***","0fc4b8f3":"***There are 180 rows and 9 columns***","fcff48b1":"# *2. Summary Statistics*","d8bdd60f":"***No-null Values***","6271327e":"**No duplicate values in the data set**"}}