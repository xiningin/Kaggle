{"cell_type":{"820ebc58":"code","2d3b7efe":"code","1cb83186":"code","b222e006":"code","595b84b5":"code","80d7cfce":"code","23241865":"code","058db9f8":"code","e0a80661":"code","7e208f1f":"code","db92ba09":"code","b08019a0":"code","1adee38e":"code","ad272a98":"code","5e116eac":"code","f650889e":"code","f2422347":"code","25145100":"code","b1c4b049":"code","b338ae92":"code","0b12875f":"code","7d3766a4":"code","f4570e20":"code","1eeb619d":"code","55c40ef3":"code","738643da":"code","680a58b2":"markdown","d0a7eaf9":"markdown","db685480":"markdown"},"source":{"820ebc58":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d3b7efe":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls","1cb83186":"summer=pd.read_csv('..\/input\/olympic-games\/summer.csv')\nwinter=pd.read_csv('..\/input\/olympic-games\/winter.csv')\ntrack=pd.read_csv('..\/input\/running\/data.csv')\ncountries=pd.read_csv('..\/input\/olympic-games\/dictionary.csv')","b222e006":"summer.head()","595b84b5":"winter.head()","80d7cfce":"track.head()","23241865":"summer.head()","058db9f8":"summer['Athlete']=summer['Athlete'].str.split(', ').str[::-1].str.join(' ')\nsummer['Athlete']=summer['Athlete'].str.title()\nwinter['Athlete']=winter['Athlete'].str.split(', ').str[::-1].str.join(' ')\nwinter['Athlete']=winter['Athlete'].str.title()","e0a80661":"summer.head()","7e208f1f":"countries.head()","db92ba09":"summer=summer.merge(countries,left_on='Country',right_on='Code',how='left')\nsummer.head()","b08019a0":"summer=summer[['Year','City','Sport','Discipline','Athlete','Country_x','Gender','Event','Medal','Country_y']]\nsummer.columns=['Year','City','Sport','Discipline','Athlete','Code','Gender','Event','Medal','Country']","1adee38e":"summer.head()","ad272a98":"summer[summer['Gender']=='Men']['Athlete'].value_counts()[:1]","5e116eac":"print('The Highest Decorated Male Athlete is: ',summer[summer['Gender']=='Men']['Athlete'].value_counts()[:1].index[0],'with: ',summer[summer['Gender']=='Men']['Athlete'].value_counts()[:1].values[0],' medals')\nprint('The Highest Decorated Female Athlete is: ',summer[summer['Gender']=='Women']['Athlete'].value_counts()[:1].index[0],'with: ',summer[summer['Gender']=='Women']['Athlete'].value_counts()[:1].values[0],' medals')","f650889e":"medals=summer.groupby(['Athlete','Medal'])['Sport'].count().reset_index().sort_values(by='Sport',ascending=False)\nmedals=medals.drop_duplicates(subset=['Medal'],keep='first')\nmedals.columns=[['Athlete','Medal','Count']]\nmedals","f2422347":"medals_country=summer.groupby(['Country','Medal'])['Gender'].count().reset_index().sort_values(by='Gender',ascending=False)\nmedals_country=medals_country.pivot('Country','Medal','Gender').fillna(0)\ntop=medals_country.sort_values(by='Gold',ascending=False)[:11]\ntop.plot.barh(width=0.8,color=['#CD7F32','#FFDF00','#D3D3D3'])\nfig=plt.gcf()\nfig.set_size_inches(12,12)\nplt.title('Medals Distribution Of Top 10 Countries (Summer Olympics)')\nplt.show()","25145100":"fig,ax=plt.subplots(1,2,figsize=(18,15))\nmen=summer[summer['Gender']=='Men']\nmen=men.groupby(['Athlete','Medal'])['Code'].count().reset_index().sort_values(by='Code',ascending=False)\nmen=men[men['Athlete'].isin(summer['Athlete'].value_counts().index[:15])]\nmen=men.pivot('Athlete','Medal','Code')\nmen.plot.barh(width=0.8,color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Best Male Athletes')\nax[0].set_ylabel('Athlete')\n\nwomen=summer[summer['Gender']=='Women']\nwomen=women.groupby(['Athlete','Medal'])['Code'].count().reset_index().sort_values(by='Code',ascending=False)\nwomen=women[women['Athlete'].isin(summer['Athlete'].value_counts().index[:30])]\nwomen=women.pivot('Athlete','Medal','Code')\nwomen.plot.barh(width=0.8,color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[1])\nax[1].set_title('Best Female Athletes')\nax[1].set_ylabel('')\nplt.show()","b1c4b049":"summer.loc[summer['Discipline'].str.contains('Wrestling'),'Discipline']='Wrestling'\nsummer.loc[summer['Discipline'].str.contains('Weightlifting'),'Discipline']='Weightlifting'\ntest=summer[summer['Country'].isin(summer['Country'].value_counts()[:10].index)]\ntest=test[test['Discipline'].isin(summer['Discipline'].value_counts()[:10].index)]\ntest=test.groupby(['Country','Discipline'])['Sport'].count().reset_index()\ntest=test.pivot('Discipline','Country','Sport')\nsns.heatmap(test,cmap='RdYlGn',annot=True,fmt='2.0f')\nfig=plt.gcf()\nfig.set_size_inches(8,6)\nplt.show()","b338ae92":"test1=summer.groupby(['Country','Year'])['Medal'].count().reset_index()\ntest1=test1[test1['Country'].isin(summer['Country'].value_counts()[:5].index)]\ntest1=test1.pivot('Year','Country','Medal')\ntest1.plot()\nfig=plt.gcf()\nfig.set_size_inches(18,8)\nplt.title('Medals By Years By Country')\nplt.show()","0b12875f":"print('The Highest Decorated Male Athlete is: ',winter[winter['Gender']=='Men']['Athlete'].value_counts()[:1].index[0],'with: ',winter[winter['Gender']=='Men']['Athlete'].value_counts()[:1].values[0],' medals')\nprint('The Highest Decorated Male Athlete is: ',winter[winter['Gender']=='Women']['Athlete'].value_counts()[:1].index[0],'with: ',winter[winter['Gender']=='Women']['Athlete'].value_counts()[:1].values[0],' medals')","7d3766a4":"winter=winter.merge(countries,left_on='Country',right_on='Code',how='left')\nwinter=winter[['Year','City','Sport','Discipline','Athlete','Country_x','Gender','Event','Medal','Country_y']]\nwinter.columns=['Year','City','Sport','Discipline','Athlete','Code','Gender','Event','Medal','Country']\nmedals=winter.groupby(['Athlete','Medal'])['Sport'].count().reset_index().sort_values(by='Sport',ascending=False)\nmedals=medals.drop_duplicates(subset=['Medal'],keep='first')\nmedals.columns=[['Athlete','Medal','Count']]\nmedals","f4570e20":"medals_map = winter.groupby(['Country','Code'])['Medal'].count().reset_index()\nmedals_map.head()","1eeb619d":"medals_country=winter.groupby(['Country','Medal'])['Gender'].count().reset_index().sort_values(by='Gender',ascending=False)\nmedals_country=medals_country.pivot('Country','Medal','Gender').fillna(0)\ntop=medals_country.sort_values(by='Gold',ascending=False)[:11]\ntop.plot.barh(width=0.8,color=['#CD7F32','#FFDF00','#D3D3D3'])\nfig=plt.gcf()\nfig.set_size_inches(8,8)\nplt.title('Medals Distribution Of Top 10 Countries (Winter Olympics)')\nplt.show()","55c40ef3":"fig,ax=plt.subplots(1,2,figsize=(18,12))\nmen=winter[winter['Gender']=='Men']\nmen=men.groupby(['Athlete','Medal'])['Code'].count().reset_index().sort_values(by='Code',ascending=False)\nmen=men[men['Athlete'].isin(winter['Athlete'].value_counts().index[:15])]\nmen=men.pivot('Athlete','Medal','Code')\nmen.plot.barh(width=0.8,color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Best Male Athletes')\nax[0].set_ylabel('Athlete')\n\nwomen=winter[winter['Gender']=='Women']\nwomen=women.groupby(['Athlete','Medal'])['Code'].count().reset_index().sort_values(by='Code',ascending=False)\nwomen=women[women['Athlete'].isin(winter['Athlete'].value_counts().index[:10])]\nwomen=women.pivot('Athlete','Medal','Code')\nwomen.plot.barh(width=0.8,color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[1])\nax[1].set_title('Best Female Athletes')\nax[1].set_ylabel('')\nplt.show()","738643da":"USA_medal_male=summer[(summer['Country']=='United States')&(summer['Gender']=='Men')]\nUSA_medal_female=summer[(summer['Country']=='United States')&(summer['Gender']=='Women')]\nfig,ax=plt.subplots(2,figsize=(15,8))\nmale=USA_medal_male.groupby(['Medal','Year'])['Event'].count().reset_index()\nmale=male.pivot('Year','Medal','Event')\nmale.plot(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_xlabel(' ')\nax[0].set_title('Performance Of USA Men')\nfemale=USA_medal_female.groupby(['Medal','Year'])['Event'].count().reset_index()\nfemale=female.pivot('Year','Medal','Event')\nfemale.plot(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[1])\nax[1].set_title('Performance Of USA Women')\nplt.show()","680a58b2":"**Now let's check Medals by Country**","d0a7eaf9":"## Winter Game Analysis","db685480":"## Athletes with the Highest Medal Type"}}