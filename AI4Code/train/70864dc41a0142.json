{"cell_type":{"a53c3ab9":"code","5424b273":"code","c310a3c9":"code","80da4a38":"code","963224da":"code","db081e70":"code","27cb4f45":"code","0cb7a18b":"code","2ca7a34c":"code","96d197f0":"code","02952acc":"code","34d1c7db":"code","713c2c32":"code","90ca93b7":"code","960e8194":"code","19c57e10":"code","1942939f":"code","82fe519f":"code","14b2e2fc":"code","b886b20d":"code","017b921a":"markdown","d6861bc6":"markdown","4a8fafed":"markdown","ff2823d0":"markdown","294bd239":"markdown","de498b84":"markdown","f8df9b08":"markdown","280e6e66":"markdown","714aed39":"markdown","f8abaa62":"markdown","8a3fbfab":"markdown","9411f881":"markdown","4e2da9ba":"markdown"},"source":{"a53c3ab9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sea\nfrom sklearn.preprocessing import StandardScaler,LabelEncoder,MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBRegressor\nfrom sklearn.impute import SimpleImputer","5424b273":"df_train=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_train.shape","c310a3c9":"def checkForNull(df):\n    colList=df.columns\n    for col in colList:\n        nullCount=pd.isnull(df[col]).sum()\n        if(nullCount!=0):\n            print(\"{}-->{}\".format(col,nullCount))\n            \ndef imputeData(df):\n    colList=df.columns\n    for col in colList:\n        if(df[col].dtypes=='O'):\n            imp = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\n            df_temp=imp.fit_transform(np.array(df[col]).reshape(-1,1))\n            df[col]=LabelEncoder().fit_transform(df_temp)\n        else:\n            imp = SimpleImputer(missing_values=np.nan, strategy='median')\n            df[col]=imp.fit_transform(np.array(df[col]).reshape(-1,1))","80da4a38":"checkForNull(df_train)","963224da":"df_train=df_train.drop(['Id','Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1,inplace=False)\ndf_train.head(5)","db081e70":"sea.scatterplot(df_train['LotFrontage'],df_train['SalePrice'])\nplt.show()","27cb4f45":"df_train=df_train.drop(df_train.loc[df_train['LotFrontage']>250].index,axis=0)\ndf_train=df_train.drop(df_train.loc[df_train['LotArea']>100000].index,axis=0)\ndf_train=df_train.drop(df_train.loc[(df_train['OverallCond']==2) & (df_train['SalePrice']>300000)].index,axis=0)\ndf_train=df_train.drop(df_train.loc[df_train['LowQualFinSF']>550].index,axis=0)\ndf_train=df_train.drop(df_train.loc[(df_train['GrLivArea']>4000) & (df_train['SalePrice']<300000)].index,axis=0)\ndf_train=df_train.drop(df_train.loc[(df_train['OpenPorchSF']>500) & (df_train['SalePrice']<100000)].index,axis=0)\ndf_train=df_train.drop(df_train.loc[df_train['EnclosedPorch']>500].index,axis=0)\ndf_train=df_train.drop(df_train.loc[df_train['MiscVal']>3000].index,axis=0)\ndf_train.shape","0cb7a18b":"checkForNull(df_train)","2ca7a34c":"imputeData(df_train)","96d197f0":"checkForNull(df_train)","02952acc":"X=df_train.drop('SalePrice',axis=1)\nscaler=MinMaxScaler().fit(np.array(df_train['SalePrice']).reshape(-1,1))\nY=scaler.transform(np.array(df_train['SalePrice']).reshape(-1,1))\n#X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=101)","34d1c7db":"from sklearn.feature_selection import SelectKBest,chi2\nbest=SelectKBest(chi2,k=70).fit(X,df_train['SalePrice'])\nbest_X=best.transform(X)\n\nX_train,X_test,Y_train,Y_test=train_test_split(best_X,Y,test_size=0.1,random_state=101)","713c2c32":"indices = np.argsort(best.scores_)[::-1]\nfor i in indices:\n    print(\"{}--->{}\".format(df_train.columns[i],best.scores_[i]))","90ca93b7":"boost=XGBRegressor(n_estimators=150,learning_rate=0.09,max_depth=10,booster='gbtree',verbosity=0,n_jobs=-1,random_state=47)\nboost.fit(X_train,Y_train)\nnp.sqrt(mean_squared_error(Y_train,boost.predict(X_train)))","960e8194":"np.sqrt(mean_squared_error(Y_test,boost.predict(X_test)))","19c57e10":"df_test=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ncheckForNull(df_test)","1942939f":"df_test=df_test.drop(['Id','Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1,inplace=False)\ndf_test.head(5)","82fe519f":"imputeData(df_test)","14b2e2fc":"checkForNull(df_test)","b886b20d":"output=boost.predict(best.transform(df_test))\nout_transformed=scaler.inverse_transform(output.reshape(-1,1)).reshape(-1,)\nout_transformed","017b921a":"Lets create a function to check for columns with null values\n\na function for imputing the null values. Null values will be replaced by Most frequent value for Catagorical Values and Median for Numerical Values","d6861bc6":"Impute the missing data","4a8fafed":"We can see the selected features and sort them with their score.\n\n-1 for sort in decreasing order.","ff2823d0":"Verify for no null values","294bd239":"Again check for null values for remaining column","de498b84":"Transform the target values","f8df9b08":"House Price prediction with use of XGBoost","280e6e66":"Out of total 1460 rows columns Alley,'FireplaceQu',PoolQC,Fence and MiscFeature dont have much data i.e have mostly null values. So we will remove them.","714aed39":"Similar changes for test data","f8abaa62":"After prediction we will inverse the transformation to get actual values.","8a3fbfab":"Next task is to remove the outliners.\n\nOutliners are the data points that shows abnormality with respect to other data points.\n\nLets plot each column and process the data which will involve the dropping of rows.","9411f881":"We will do feature selection using SelectKBest.\n\nWe will use the feature for prediction according to its importance.","4e2da9ba":"Here comes the XGBoost with its tuned parameters"}}