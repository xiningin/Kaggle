{"cell_type":{"dd808d15":"code","9380a0ee":"code","4aa018f4":"code","203b0a09":"code","d7c4ed6e":"code","cada078e":"code","8b201fb4":"code","1f14bea1":"markdown","57176bfe":"markdown","4fc4e0f3":"markdown"},"source":{"dd808d15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9380a0ee":"%%time\ndef get_int(x):\n    try:\n        return int(x[3:])\n    except:\n        return 1000\n    \ndef read_data():\n    test_df = pd.read_csv(\"https:\/\/numerai-public-datasets.s3-us-west-2.amazonaws.com\/latest_numerai_tournament_data.csv.xz\")\n    feature_cols = test_df.columns[test_df.columns.str.startswith('feature')]\n    mapping = {0.0 : 0, 0.25 : 1, 0.5 : 2, 0.75 : 3, 1.0 : 4}\n    for c in feature_cols:\n        test_df[c] = test_df[c].map(mapping).astype(np.uint8)\n        \n    # also cast era to int\n    test_df[\"era\"] = test_df[\"era\"].apply(get_int)\n    \n    return test_df\n\ntest_df = read_data()","4aa018f4":"print(test_df.shape)\ntest_df.head()","203b0a09":"[f for f in test_df.columns.values.tolist() if 'target' in f]\n","d7c4ed6e":"test_df['data_type'].value_counts()\n","cada078e":"test_df.to_feather('test.feather')\nprint('feather saved!')","8b201fb4":"test_df.to_csv('test.csv', index=False)\nprint('csv saved!')","1f14bea1":"# Save\nI save the data as the feather format as well as csv.","57176bfe":"Fetch the latest Numerai Tournament Data. Since the features are all quantiles, I cast those to int to reduce the memory demand.","4fc4e0f3":"# Download"}}