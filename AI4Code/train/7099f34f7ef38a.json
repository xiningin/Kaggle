{"cell_type":{"da89e666":"code","16f01557":"code","831fa44c":"code","d9dfb9f6":"code","7ce80599":"code","5671f389":"code","f7d8f60a":"code","585d6a3c":"code","dd4e7891":"code","f550f87e":"code","f5d5035c":"code","f0ba27f7":"code","a5a02377":"code","8e799e50":"markdown"},"source":{"da89e666":"import os\nimport numpy as np\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Dropout\nimport scipy.ndimage\nimport pandas as pd\nimport tensorflow as tf","16f01557":"data_dir = \"..\/input\/rice-leaf-diseases\/rice_leaf_diseases\"\nclasses = os.listdir(data_dir)","831fa44c":"image_size = (100, 100)\nbatch_size = 16","d9dfb9f6":"train_ds = tf.keras.preprocessing.image_dataset_from_directory(\n    data_dir,\n    subset= \"training\",\n    validation_split = 0.2,\n    seed=1,\n    image_size = image_size,\n    batch_size = batch_size,\n    label_mode = \"categorical\",\n    class_names = classes\n)\n\nval_ds = tf.keras.preprocessing.image_dataset_from_directory(\n    data_dir,\n    subset= \"validation\",\n    validation_split = 0.2,\n    seed=1,\n    image_size = image_size,\n    batch_size = batch_size,\n    label_mode = \"categorical\",\n    class_names = classes\n)","7ce80599":"for images, labels in train_ds.take(1):\n    print(images)\n    print(labels)","5671f389":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(15,15))\n\nplt.figure()\nfor images, labels in train_ds.take(1):\n    for i in range(15):\n        ax = plt.subplot(3,5,i+1)\n        plt.imshow(images[i].numpy().astype(\"uint8\"))\n        plt.title(classes[np.argmax(labels[i])])\n        plt.axis(\"off\")\nplt.show()","f7d8f60a":"modelo = keras.Sequential(\n[\n    keras.Input(shape=image_size + (3,)),\n    keras.layers.Rescaling(1\/255),\n    layers.Flatten(),\n    layers.Dense(512, activation=\"relu\"),\n    layers.Dense(len(classes), activation = \"softmax\")\n]\n)","585d6a3c":"modelo.build(image_size)\nmodelo.summary()\n\nopt = keras.optimizers.Adam(learning_rate=0.001)\nmodelo.compile(loss = \"categorical_crossentropy\", optimizer=opt, metrics=[\"accuracy\"])","dd4e7891":"history = modelo.fit(\n    train_ds,\n    epochs=10,\n    shuffle=True,\n    verbose=1,\n    validation_data=val_ds\n)","f550f87e":"val_samples = tf.concat([x for [x,_] in val_ds], axis=0).numpy().shape[0]\nval_samples = sum([16 for [_,_] in val_ds])\nval_samples","f5d5035c":"y_val = []\ny_val_pred = []\n\nfor images, targets in train_ds.take(val_samples \/\/ batch_size):\n    for i in range(batch_size):\n        img_array = images[i].numpy().astype(\"uint8\")\n        prediction = modelo.predict(np.array([img_array]))\n        y_val_pred.append(np.argmax(prediction))\n        y_val.append(np.argmax(targets[i]))","f0ba27f7":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_val, y_val_pred)","a5a02377":"import plotly.express as px\n\nfig = px.imshow(\n    cm, \n    labels = dict(x=\"Predicciones\", y=\"Reales\"),\n    x=classes,\n    y=classes\n)\nfig.update_xaxes(side=\"top\")\nfig.show()","8e799e50":"B.Scikitlearn\n\nUtilice el dataset Rice Leaf Diseases Dataset para predecir las enfermedades de la planta de arroz.\n\n1.Implemente y Ajuste un Multi Layers Perceptron con Scikitlearn (3 pts)\n\n2.Muestre sus resultados con una matriz de confusi\u00f3n o un reporte (4 pts)"}}