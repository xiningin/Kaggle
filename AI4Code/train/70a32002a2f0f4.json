{"cell_type":{"adbb1687":"code","ece37a82":"code","36f891e4":"code","ab2cc23b":"code","1c4adc8f":"code","7c45da63":"code","266bb3ce":"code","2910170d":"code","ff724041":"code","4ca55c5b":"code","aeb59406":"code","9fad7cc5":"code","6cce3d09":"code","0da9613f":"code","a2150696":"code","0ce54a3b":"code","280ed9f2":"code","0746e774":"code","788d3a20":"code","525ecf23":"code","43f0c15d":"code","92bc8e00":"code","0f05cef5":"code","32616769":"code","4ccfe844":"code","65c95bbe":"code","8d0d58e3":"code","b58b5d96":"code","eb6d417c":"code","d76a3b39":"code","1487b9db":"code","5da2a4bb":"code","5ef1ad0d":"code","b2209fc0":"code","21968a0f":"code","84598763":"code","7b5459d9":"code","e72c8bee":"markdown","ac3f8864":"markdown","3d6965df":"markdown","e3acc5bd":"markdown","d75804b8":"markdown","e36da876":"markdown","84aafd34":"markdown","afb60c0d":"markdown","1862c0a4":"markdown","0b82710e":"markdown","979e8814":"markdown","f3c2f76a":"markdown","0becc37e":"markdown","17d448af":"markdown","1577756f":"markdown","c9847c8d":"markdown","ace67dea":"markdown","c3c744e8":"markdown","3cf044bd":"markdown","0c07af3b":"markdown","c8ee2dea":"markdown","aaecd114":"markdown","d3862dba":"markdown","79964005":"markdown","015b109c":"markdown","dc08a45b":"markdown","aeb47836":"markdown","acb191f2":"markdown","c3ef739e":"markdown","7e454071":"markdown","f10b1abd":"markdown","8d7dde2c":"markdown","53c0594b":"markdown","bc27df8a":"markdown","69bf438d":"markdown","9f1bf76b":"markdown","3f2cdccf":"markdown","348db3b4":"markdown","fc49563a":"markdown","d227a5a8":"markdown","7d21737c":"markdown","0876930d":"markdown","620c9b1d":"markdown","7f1450bf":"markdown","e8a96d51":"markdown","43a43a56":"markdown","4c3d4dd2":"markdown","ca20f1aa":"markdown"},"source":{"adbb1687":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport datetime\nfrom collections import Counter\nimport ast\nimport re\nfrom PIL import Image\nfrom wordcloud import WordCloud\nimport requests\nfrom io import BytesIO\nimport warnings\nwarnings.filterwarnings(\"ignore\")","ece37a82":"import os\nfrom os import path","36f891e4":"# get data directory (using getcwd() is needed to support running example in generated IPython notebook)\n# d = path.dirname(__file__) if \"__file__\" in locals() else os.getcwd()","ab2cc23b":"df = pd.read_csv('..\/input\/ted-talks\/ted_main.csv')\ndf.head()","1c4adc8f":"df.shape","7c45da63":"df.isnull().sum()","266bb3ce":"df.describe()","2910170d":"df.dtypes","ff724041":"df['film_date'] = df['film_date'].apply(lambda x: datetime.date.fromtimestamp(int(x)).strftime('%Y-%m-%d %H:%M:%S'))\ndf['published_date'] = df['published_date'].apply(lambda x: datetime.date.fromtimestamp(int(x)).strftime('%Y-%m-%d %H:%M:%S'))","4ca55c5b":"df.sample(5)","aeb59406":"df['film_date'], df['published_date'] = pd.to_datetime(df['film_date']), pd.to_datetime(df['published_date'])","9fad7cc5":"#Number of ted talks published or filmed by year\npub_year=df['published_date'].dt.year.value_counts().sort_index()\nfilm_year=df['film_date'].dt.year.value_counts().sort_index()\n\nfig, (ax1, ax2) = plt.subplots(2,1,figsize=(15,6))\nfilm_year.plot(kind='bar', ax=ax1)\npub_year.plot(kind='bar', ax=ax2)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=0)\nax2.set_xticklabels(ax2.get_xticklabels(), rotation=0)\nax1.set_xlabel('Filmed Year')\nax2.set_xlabel('Published Year')\nfor i, v in enumerate(film_year):\n    ax1.text(i-0.25,v+2, str(v),color='black',fontweight='bold')\nfor i, v in enumerate(pub_year):\n    ax2.text(i-0.15,v+2, str(v),color='black',fontweight='bold')\nax1.title.set_text('Number of Ted Talks Filmed By Year')\nax2.title.set_text('Number of Ted Talks Published By Year')\nplt.subplots_adjust(bottom=0, top=2)\nplt.show()","6cce3d09":"# Which video received greater number of first level comments\ndf_comm = df[['main_speaker','title','published_date','comments']].sort_values(by=['comments']).reset_index(drop=True)\nfig,ax=plt.subplots(figsize=(15,6))\nplt.barh(df_comm['title'].tail(), df_comm['comments'].tail())\nfor i, v in enumerate(df_comm['comments'].tail()):\n    ax.text(v\/v,i, str(v),color='white',fontweight='bold')\nplt.title('Ted Talks with Most First Level Comments')\nplt.xlabel('Number of Comments')\nplt.ylabel('Title')\nplt.show()\n\nprint(df_comm.tail())","0da9613f":"#Views by quantile \ncom_quantile = pd.qcut(df['views'], q=4).value_counts().sort_index()\nplt.figure(figsize=(10,6))\ncom_quantile.plot(kind='bar')\nplt.xticks(rotation=0)\nplt.xlabel('Number of views')\nplt.title('Quantile on Views')\nplt.show()","a2150696":"# Top 10 ted talk events with most published videos\ntop10_event = df['event'].value_counts().sort_values(ascending=False).head(10)\nfig, ax=plt.subplots(figsize=(15,6))\ntop10_event.plot(kind='bar')\nplt.xlabel('Events')\nfor i, v in enumerate(top10_event):\n    ax.text(i-0.05,v+1, str(v),color='black',fontweight='bold')\nplt.xticks(rotation=0)\nplt.title('Top 10 Ted Talks Events with Most Published Videos')\nplt.show()","0ce54a3b":"events = df['event'].value_counts().sort_values(ascending=False)\nevent_2012 = [(i,v) for i,v in events.iteritems() if('2012' in i)]\n\nevent_2012_tag = [tag[0] for tag in event_2012]\nevent_2012_val = [val[1] for val in event_2012]\n\nfig, ax = plt.subplots(figsize=(15,6))\nplt.barh(event_2012_tag,event_2012_val)\nplt.xlabel('Events')\nfor i, v in enumerate(event_2012_val):\n    ax.text(v,i, str(v),color='black',fontweight='bold')\nplt.title('Ted Talks Events on 2012')\nplt.show()\n\nprint('Total number of videos published on Ted Talks events with 2012 labelling: ',sum(val for val in event_2012_val))","280ed9f2":"# What is the top 10 common tags in ted talks\nflat_list=[]\nfor index, row in df.iterrows():\n    tag = ast.literal_eval(row['tags'])\n    for item in tag:\n        flat_list.append(item)\n\ntag_count = Counter(flat_list)\nprint('Total types of tags:',len(tag_count))","0746e774":"tag_cat = [tag[0] for tag in tag_count.most_common(10)]\ntag_val = [tag[1] for tag in tag_count.most_common(10)]\n\nfig, ax = plt.subplots()\nplt.pie(tag_val, labels=tag_val, autopct='%1.1f%%', shadow=True, startangle=90)\nax.axis('equal') \nplt.title('Top 10 Most Common Tags in Ted Talks')\nplt.legend(tag_cat,bbox_to_anchor=(1.5,1), fontsize=10, bbox_transform=plt.gcf().transFigure)\nplt.subplots_adjust(bottom=0, top=1.3)\nplt.show()","788d3a20":"#Create word cloud of tags\n\n# read the mask image\n# taken from https:\/\/cdn.freebiesupply.com\/images\/large\/2x\/ted-logo-white.png\nd = '..\/input\/word-cloud-mask\/'\nted_talk_mask = np.array(Image.open(d + \"ted-logo-white.png\"))\n\nwc = WordCloud(mask=ted_talk_mask, background_color=\"white\",width=800, height=400, contour_width=1).generate_from_frequencies(tag_count)\n\n# show\nplt.figure(figsize=(15,8))\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title('Word Cloud of Tags')\nplt.show()","525ecf23":"#Which tag viewed most by audiences\ntag_cat_view = []\nfor tag in tag_count:\n    view_counts = 0\n    for i in range(len(df)):\n        #Match the token\n        if(re.search(\"'\"+tag+\"'\",df['tags'][i])):\n            view_counts = view_counts + df['views'][i]\n    #Append into list for visualization\n    tag_cat_view.append((tag,view_counts))\n    \n# Sort it in descending order\ntag_cat_view.sort(key=lambda x:x[1], reverse=True)","43f0c15d":"tag_cat_view_cat = [x[0] for x in tag_cat_view[:10]]\ntag_cat_view_view = [x[1] for x in tag_cat_view[:10]] \n\nfig,ax=plt.subplots(figsize=(15,6))\nplt.barh(tag_cat_view_cat, tag_cat_view_view)\nfor i, v in enumerate(tag_cat_view_view):\n    ax.text(v\/v,i, str(v),color='white',fontweight='bold')\nplt.xticks(rotation=0)\nplt.ylabel('Categories')\nplt.xlabel('Number of Views')\nplt.title('Top 10 Categories Viewed By Audiences')\nplt.show()","92bc8e00":"# Who gave the most ted talks\ndf_most_active_speaker = df.groupby(['main_speaker','speaker_occupation']).agg(\n    counts=('speaker_occupation', 'count'), average_views=('views','mean')).reset_index(\n).sort_values(by='counts',ascending=False)\nprint(df_most_active_speaker[df_most_active_speaker['counts'] >= 5])","0f05cef5":"top_5_active_speaker = df_most_active_speaker[df_most_active_speaker['counts'] >= 5]\nfig,ax=plt.subplots(figsize=(15,6))\nplt.bar(top_5_active_speaker['main_speaker'], top_5_active_speaker['counts'])\nfor i, v in enumerate(top_5_active_speaker['counts']):\n    ax.text(i-0.05,v\/v-0.8, str(v),color='white',fontweight='bold')\nplt.xlabel('Speakers')\nplt.xticks(rotation=45)\nplt.title('Most Active Speakers in Ted Talks')\nplt.show()","32616769":"print(df[df['main_speaker'] == 'Hans Rosling'][['main_speaker','title','tags']])","4ccfe844":"ignore_process_occupation = ['SURVEILLANCE AND CYBERSECURITY COUNSEL', 'NEUROSCIENCE AND CANCER RESEARCHER', \n                             'FOOD AND AGRICULTURE EXPERT', 'SCULPTOR OF LIGHT AND SPACE', 'PLANETARY AND ATMOSPHERIC SCIENTIST', \n                             'HEALTH AND TECHNOLOGY ACTIVIST', 'ENVIRONMENTAL AND LITERACY ACTIVIST', \n                             'PROFESSOR OF MOLECULAR AND CELL BIOLOGY','HIV\/AIDS FIGHTER', '9\/11 MOTHERS']\noccupations = []\nfor index, row in df.iterrows():\n    speaker_occupation = str(row['speaker_occupation']).upper().strip()\n    if(re.search(r'FOUNDER', speaker_occupation)):\n        \n        speaker_occupation = re.sub(r'COFOUNDER|CO-FOUNDERS','CO-FOUNDER', speaker_occupation)\n        if('CO-FOUNDER' in speaker_occupation):\n            occupations.append('CO-FOUNDER')\n        if('BLOGGER' in speaker_occupation): #BLOGGER; CO-FOUNDER, SIX APART\n            occupations.append('BLOGGER')\n        if('EXECUTIVE DIRECTOR' in speaker_occupation):\n            occupations.append('EXECUTIVE DIRECTOR')\n        if('CEO' in speaker_occupation):\n            occupations.append('CEO')\n        if('DESIGNER' in speaker_occupation):\n            occupations.append('DESIGNER')\n        if('FOUNDER' in speaker_occupation):\n            occupations.append('FOUNDER')\n    elif(re.search(r'COO', speaker_occupation)):\n        occupations.append(speaker_occupation.split(',')[0])\n    elif(re.search(r'DIRECTOR', speaker_occupation)):\n        if(' AND ' in speaker_occupation):\n            occupations.extend(speaker_occupation.split(' AND '))\n        elif('DIRECTOR OF' in speaker_occupation):\n            occupations.append(speaker_occupation.split(',')[0])\n        elif(',' in speaker_occupation):\n            speaker_occupation = re.sub(r'\/',', ', speaker_occupation)\n            speaker_occupation = re.sub(r';',',', speaker_occupation)\n            speaker_occupation = speaker_occupation.replace(', IDEO','')\n            speaker_occupation = speaker_occupation.replace(', THE INSTITUTE FOR GLOBAL HAPPINESS','')\n            speaker_occupation = speaker_occupation.replace(', NSA','')\n            occupations.extend(speaker_occupation.split(','))\n    elif(re.search(r' AND |[+;.,\/]', speaker_occupation)):\n        if(speaker_occupation in ['EXECUTIVE CHAIR, FORD MOTOR CO.']): #SINGER-SONGWRITER\n            occupations.append(speaker_occupation.split(',')[0])\n        elif(speaker_occupation in ignore_process_occupation):\n            occupations.append(speaker_occupation)\n        else:\n            speaker_occupation = re.sub(r' AND |[\/]',', ', speaker_occupation)\n            speaker_occupation = speaker_occupation.replace(' + ',', ')\n            speaker_occupation = re.sub(r';',',', speaker_occupation)\n            speaker_occupation = speaker_occupation.replace(' ...','')\n            if('SINGER-SONGWRITER' == speaker_occupation):\n                speaker_occupation = speaker_occupation.replace('-',', ')\n\n            occupations.extend(speaker_occupation.split(', '))\n        ","65c95bbe":"occupations_counts = Counter(occupations)\nprint(occupations_counts)","8d0d58e3":"#Counts of Top 10 speakers occupations in ted talks\noccupations_counts_cat = [occ[0] for occ in occupations_counts.most_common(10)]\noccupations_counts_val = [occ[1] for occ in occupations_counts.most_common(10)]\n\nfig, ax = plt.subplots(figsize=(15,6))\nplt.bar(occupations_counts_cat,occupations_counts_val)\nfor i, v in enumerate(occupations_counts_val):\n    ax.text(i-0.1,v\/v, str(v),color='white',fontweight='bold')\nplt.title('Top 10 Speakers Occupations in Ted Talks')\nplt.xlabel('Speakers Occupations')\nplt.ylabel('Counts')\nplt.show()","b58b5d96":"#Which speakers have higher average views per talk\ntop_ten_most_average_views_speaker = df_most_active_speaker.sort_values(by='average_views').tail(10)\nfig, ax = plt.subplots(figsize=(15,6))\nplt.barh(top_ten_most_average_views_speaker['main_speaker'],top_ten_most_average_views_speaker['average_views'])\nfor i, v in enumerate(top_ten_most_average_views_speaker['average_views']):\n    ax.text(v\/v, i, str(v), color='white', fontweight='bold')\nplt.xlabel('Views')\nplt.ylabel('Speakers')\nplt.title('Top 10 Average Views by Speakers')\nplt.show()\n\nprint(top_ten_most_average_views_speaker.tail(10))","eb6d417c":"#Top 10 up to date most views videos\ndf_most_views = df[['main_speaker', 'title', 'views','published_date']].sort_values(\n    by='views').reset_index(drop=True)\n\nfig, ax = plt.subplots(figsize=(8,6))\nplt.barh(df_most_views['title'].tail(10),df_most_views['views'].tail(10))\nfor i, v in enumerate(df_most_views['views'].tail(10)):\n    ax.text(v\/v, i, str(v), color='white', fontweight='bold')\nplt.title('Top 10 Most Views Ted Talks')\nplt.xlabel('Views')\nplt.ylabel('Titles')\nplt.show()\n\ndf_most_views.tail(10)","d76a3b39":"df_ext = df.copy()","1487b9db":"for index, row in df.iterrows():\n    rates = ast.literal_eval(row['ratings'])\n    for item in rates:\n        if(index == 0): #to create new column\n            df_ext[item['name']] = item['count']\n        else:\n            df_ext[item['name']][index] = item['count']\n\ndf_ext.head(5)        ","5da2a4bb":"df_ext.columns","5ef1ad0d":"df_ext.drop('ratings',axis=1, inplace=True)","b2209fc0":"#Which ted talks received higher number of ratings\nrating_col = ['Funny', 'Beautiful', 'Ingenious', 'Courageous', 'Longwinded',\n       'Confusing', 'Informative', 'Fascinating', 'Unconvincing', 'Persuasive',\n       'Jaw-dropping', 'OK', 'Obnoxious', 'Inspiring']\n\ndf_ext['sum_ratings'] = df_ext[rating_col].sum(axis=1)\n\ndf_ext_sum_rate_sort = df_ext[['name','sum_ratings']].sort_values(by='sum_ratings').reset_index(drop=True)\n\nfig, ax = plt.subplots(figsize=(10,6))\nplt.barh(df_ext_sum_rate_sort['name'][-10:],df_ext_sum_rate_sort['sum_ratings'][-10:])\n# plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))\nfor i, v in enumerate(df_ext_sum_rate_sort['sum_ratings'][-10:]):\n    ax.text(v\/df_ext_sum_rate_sort['sum_ratings'][i], i, str(v), color='white', fontweight='bold')\nplt.title('Ted Talks with Higher Number of Ratings')\nplt.xlabel('Total Ratings')\nplt.ylabel('Titles')\nplt.show()","21968a0f":"df_ext['main_rating'] = df_ext[rating_col].idxmax(axis=1)\n\nmost_rel_rat = df_ext['main_rating'].value_counts()\nfig, ax = plt.subplots(figsize=(15,6))\nplt.bar(most_rel_rat.index,most_rel_rat.values)\nfor i, v in enumerate(most_rel_rat):\n    ax.text(i-0.2, v+10, str(v), color='black', fontweight='bold')\nplt.title('Ted Talks Main Ratings')\nplt.xticks(rotation=45)\nplt.ylabel('Count')\nplt.xlabel('Main Rating')\nplt.show()","84598763":"# Which ted talks considered as poor rating\nfor rate in ['Confusing','Obnoxious','Longwinded','Unconvincing']:\n    print(df_ext[['main_rating','name',rate,'sum_ratings']][df_ext['main_rating'].isin([rate])].reset_index\n          (drop=True))","7b5459d9":"fig, ax = plt.subplots(figsize=(20,20))\nax = sns.heatmap(df_ext.corr(), annot = True)","e72c8bee":"Speakers occupations in ted_talks dataset are very dirty, where different people have their own filling style. Some of them fill their multiple occupations through slash(\/), 'AND', plus(+), comma(,), and even dash(-). Some terms even have different namings such as co-founder, cofounder, or cofounders. Furthermore, there are some occupations cannot be separatede even though they contain 'AND', slash(\/), such '9\/11 MOTHERS', 'SURVEILLANCE AND CYBERSECURITY COUNSEL', etc. <br><br>\n\nThrough scrutinizing on the speakers occupations, these are the occupations that should not be processed:<br> \n('SURVEILLANCE AND CYBERSECURITY COUNSEL', 'NEUROSCIENCE AND CANCER RESEARCHER', 'FOOD AND AGRICULTURE EXPERT', 'SCULPTOR OF LIGHT AND SPACE', 'PLANETARY AND ATMOSPHERIC SCIENTIST', 'HEALTH AND TECHNOLOGY ACTIVIST', 'ENVIRONMENTAL AND LITERACY ACTIVIST', 'PROFESSOR OF MOLECULAR AND CELL BIOLOGY','HIV\/AIDS FIGHTER', '9\/11 MOTHERS')<br><br>\n\nSome occupations that should be processed in more details including:<br>\n('FOUNDER','COO','DIRECTOR', and some symbols such as ellipsis(...), semicolon(;), etc)\n\n*<i>P\/S: The code below may look inefficient, if there are any suitable method for cleaning the data, hopefully can provide some suggestions on it.<\/i>","ac3f8864":"### Which speakers gave the most Ted Talks?","3d6965df":"## Data Exploration","e3acc5bd":"### Which speakers have the higher average views of their Ted Talks?","d75804b8":"<li>It can be observed that the ted talks videos starts filming since 1972, but only start to publish at 2006. <br>\n<li>Number of filmed ted talks increased drastically since 2009.<br>\n<li>Most ted talks videos were published on year 2012.","e36da876":"### Quantile on Ted Talks views","84aafd34":"## Introduction\n\n<b>TED talks<\/b> is a platform for speakers to present their ideas mainly <b>technology, entertainment, and design<\/b> (<b>TED<\/b>) at TED Conference. <br>\nThe maximum length of each talk is limited to 18minutes. <[Source](https:\/\/whatis.techtarget.com\/definition\/TED-talk)><br>\nThe dataset used has 2550 rows of Ted Talks data until 2017. <br>\nExploratory data analysis is performed on the dataset to get insights about the Ted Talks. <br>\nAs I'm still a beginner in data analysis, therefore I'm welcoming any suggestion to help improve the data analysis of this notebook.  Your suggestions will be greatly appreciated.","afb60c0d":"#### Hope that this notebook could help generates more insights on data analysis on Ted Talks. ","1862c0a4":"Among 416 tags, the top 10 most common tags used in Ted Talks videos are technology, science, global issues, culture, TEDx, design, business, entertainment, health, and innovation. Well, it fits with the TED(technology, entertainment, and design) main theme.","0b82710e":"Make a copy of main dataframe","979e8814":"Identify the datatype of each feature:","f3c2f76a":"\"Militant atheism\" shows highest first level comments followed by \"Do schools kill creativity?\". <br>\nThese 2 ted talks videos were published since year 2006 and year 2007 respectively, in which they have been published for longer years compared to the other ted talks with higher first level comments. <br>\nIt is worth noting that \"How do you explain consciousness?\" have received 2673 first level comments since publishing on year 2014 until year 2017.","0becc37e":"## Import libraries and dataset","17d448af":"### Which Ted Talks tag categories viewed most by audiences?","1577756f":"### Which Ted Talks videos have the most first level comments?","c9847c8d":"### What are the ratings for each Ted Talks?","ace67dea":"Display the counts of each speaker occupation","c3c744e8":"Check number of rows and column in ted_main dataset:","3cf044bd":"The dataset has no any missing value","0c07af3b":"As we go deeper into Ted Talks events with 2012 label, there are only 178 published videos instead of 306 published videos.<br>\n'TED2012' and 'TEDGlobal 2012' have most of the videos published (135 videos) among the 178 published videos. ","c8ee2dea":"Hans Rosling given the most Ted Talks (9 times), followed by Juan Enriquez (7 times), and Marco Tempest (6 times) and Rives (6 times)","aaecd114":"Most of the Ted Talks given by Hans Rosling revolving around global issues, economics, and health.","d3862dba":"Convert film_date and published_date into datetime format","79964005":"### Correlation Analysis","015b109c":"From the data that have been processed, most of the speakers occupations in Ted Talks are author, followed by activist and writer.","dc08a45b":"### What is the top 10 common tags used in Ted Talks?","aeb47836":"Identify missing values within the dataset:","acb191f2":"<li><b>name<\/b>: The official name of the TED Talk. Includes the title and the speaker. <br>\n<li><b>title<\/b>: The title of the talk <br>\n<li><b>description<\/b>: A blurb of what the talk is about. <br>\n<li><b>main_speaker<\/b>: The first named speaker of the talk. <br>\n<li><b>speaker_occupation<\/b>: The occupation of the main speaker. <br>\n<li><b>num_speaker<\/b>: The number of speakers in the talk. <br>\n<li><b>duration<\/b>: The duration of the talk in seconds. <br>\n<li><b>event<\/b>: The TED\/TEDx event where the talk took place. <br>\n<li><b>film_date<\/b>: The Unix timestamp of the filming. <br>\n<li><b>published_date<\/b>: The Unix timestamp for the publication of the talk on TED.com <br>\n<li><b>comments<\/b>: The number of first level comments made on the talk. <br>\n<li><b>tags<\/b>: The themes associated with the talk. <br>\n<li><b>languages<\/b>: The number of languages in which the talk is available. <br>\n<li><b>ratings<\/b>: A stringified dictionary of the various ratings given to the talk (inspiring, fascinating, jaw dropping, etc.) <br>\n<li><b>related_talks<\/b>: A list of dictionaries of recommended talks to watch next. <br>\n<li><b>url<\/b>: The URL of the talk. <br>\n<li><b>views<\/b>: The number of views on the talk. <br>","c3ef739e":"Based on the correlation of the features: <br>\n<li>Comments shows irrelevant to number of speakers, and less imapct on video duration.<br>\n<li>Ted Talks that are longwinded shows positive correlation to video duration, which implies that longwinded videos normally have longer video duration.\n<li>Ted Talks that have positive ratings normally show higher views compared to Ted Talks with negative ratings. ","7e454071":"### What are the Top 10 Ted Talks events with most published videos?","f10b1abd":"Culture, technology, and science tags videos received most views by audiences.<br>\nTo improve the views of their Ted Talks videos, speakers should present more ideas about culture, technology and science.","8d7dde2c":"'Do schools kill creativity?' with the most views and one of the earliest Ted Talks published received highest number of ratings, which is total of 93850 ratings, followed by 'My stroke of insight' (70665 ratings) and 'Your body language may shape who you are' (65968 ratings). <br>\nAlthough 'My stroke of insight' only has 21mil views compared to 'Do schools kill creativity?'(47mil views) and 'Your body language may shape who you are' (43mil views), but it has the second most highest number of ratings.<br>\n**If you are interested on 'My stroke of insight', you may click on the link to watch it: [Jill Bolte Taylor: My stroke of insight'](https:\/\/www.ted.com\/talks\/jill_bolte_taylor_my_stroke_of_insight)","53c0594b":"25% of Ted Talks videos have their view counts at least 1.7mil, while 50% of Ted Talks videos have their views at least 1.1mil","bc27df8a":"### What are the main speakers occupations in Ted Talks?","69bf438d":"Most of the Ted Talks videos have main rating that show positive, such as inspiring, informative, fasicnating, funny, etc.<br>\nHowever, there are some Ted Talks videos with main rating that show negative, such as unconvincing, longwinded, obnoxious and confusing. <br>\nEven though there are nagative main rating of Ted Talks videos, but these videos are just made up a small part. <br>\nHence, Ted Talks is still a good platform for audiences to gain inspiring and informative knowledge.","9f1bf76b":"### What are the Ted Talks videos that show negative main rating?","3f2cdccf":"### What are the main ratings of Ted Talks videos?","348db3b4":"drop 'ratings' column from dataframe, as it has been splitted into multiple columns.","fc49563a":"Amy Cuddy has the highest average views (43mil) of her Ted Talks, and with just a single talk. This shows that her talk probably bring some positive impacts and very inspiring to audiences.<br>\n**If you are interested on how good is her talk, you may click on the link to watch it: [Amy Cuddy: 'Your body language may shape who you are'](https:\/\/www.ted.com\/talks\/amy_cuddy_your_body_language_may_shape_who_you_are?language=en)","d227a5a8":"### Small notes\n\n====================================================================<br>\nFor simple WordCloud\npip install wordcloud or conda install -c conda-forge wordcloud\n\nTo import and install WordCloud with mask effect\n\ngit clone https:\/\/github.com\/amueller\/word_cloud.git\ncd word_cloud\npip install .\n\n====================================================================<br>\nFor row filtering\nhttps:\/\/cmdlinetips.com\/2018\/02\/how-to-subset-pandas-dataframe-based-on-values-of-a-column\/\n\n====================================================================<br>\nFor annotation on bar plot\nhttps:\/\/stackoverflow.com\/questions\/52182746\/matplotlib-horizontal-bar-plot-add-values-to-bars\n\n====================================================================<br>\nAvoid overlapping of legend on pie chart\nhttps:\/\/stackoverflow.com\/questions\/23577505\/how-to-avoid-overlapping-of-labels-autopct-in-a-matplotlib-pie-chart\n","7d21737c":"More Ted Talks videos were published on TED events rather than TEDGlobal events.<br>\nAlthough year 2012 has the higher published Ted Talks videos with 306 counts, but there is just a single event in 2012 fitted into Top 10 Ted Talks events with most published videos.","0876930d":"### How many Ted Talks have been filmed and published?","620c9b1d":"View basic statistical details of ted_main dataset:","7f1450bf":"Ken Robinson with 'Do schools kill creativity?' has the most views in Ted Talks, followed by Amy Cuddy with 'Your body language may shape who you are'.<br>\n'Do schools kill creativity?' has been published for a longer time compared to 'Your body language may shape who you are'.<br>\n**If you are interested on 'Do schools kill creativity?', you may click on the link to watch it: [Sir Ken Robinson: Do schools kill creativity'](https:\/\/www.ted.com\/talks\/sir_ken_robinson_do_schools_kill_creativity)","e8a96d51":"### Which Ted Talks videos received most ratings by audiences?","43a43a56":"Get the ratings for each ted talk","4c3d4dd2":"# Data Analysis on Ted Talks","ca20f1aa":"### Which Ted Talks videos have most views?"}}