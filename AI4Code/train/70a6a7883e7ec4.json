{"cell_type":{"e0833448":"code","0f460ee0":"code","5672098f":"code","6e9b9520":"code","721856c5":"code","91dc5ae8":"code","c9dc856c":"code","7af84188":"code","560f3a72":"code","83935b2f":"code","d26f637b":"code","afe5bd08":"code","bf02e5aa":"code","bc705a27":"code","171ca75e":"code","d86d608f":"code","f378bdcd":"code","e532f546":"code","a58db0b1":"code","19e68acf":"code","cb66b8f7":"markdown","d770aee5":"markdown","59e88eab":"markdown","abb15ff6":"markdown","bcb23b58":"markdown","fcf4944d":"markdown","8bfc9f3b":"markdown","7f29848a":"markdown","b7a7dcd9":"markdown","f3db62a4":"markdown","30ad4361":"markdown","9588fb1b":"markdown","2a8382d4":"markdown","e8c52f99":"markdown","612e8ef0":"markdown","f4058934":"markdown","19fd8698":"markdown","58fe8dc6":"markdown","9fb11930":"markdown","5717164a":"markdown","6d64ecfa":"markdown","75a665c7":"markdown","e3b45d01":"markdown","151ab5b5":"markdown"},"source":{"e0833448":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom collections import Counter as cnt\nimport math\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0f460ee0":"filename = '\/kaggle\/input\/videogamesales\/vgsales.csv'\ndf = pd.read_csv(filename)","5672098f":"df.info()","6e9b9520":"all_pubs = df['Publisher']\n\ncom_pub = all_pubs.mode()[0]\nprint(com_pub)","721856c5":"pub_count = cnt(all_pubs)\ntop_pub = {'name': 'TobyFox', 'count': 2}\n\nfor pub, count in pub_count.items():\n    curr_pub = {'name': pub, 'count': count}\n    if curr_pub['count'] > top_pub['count']:\n        top_pub['name'] = pub\n        top_pub['count'] = count       \nprint(top_pub['name'])    ","91dc5ae8":"all_pfs = df['Platform']\n\ncom_plt = all_pfs.mode()[0]\nprint(com_plt)","c9dc856c":"pf_count = cnt(all_pfs)\ntop_pf = {'name': 'PC', 'count': 2000}\n\nfor pf, count in pf_count.items():\n    curr_pf = {'name': pf, 'count': count}\n    if curr_pf['count'] > top_pf['count']:\n        top_pf['name'] = pf\n        top_pf['count'] = count       \nprint(top_pf['name'])  ","7af84188":"all_gens = df['Genre']\n\ncom_gen = all_gens.mode()[0]\nprint(com_gen)","560f3a72":"gen_count = cnt(all_gens)\ntop_gen = {'name': 'Management', 'count': 100}\n\nfor gen, count in gen_count.items():\n    curr_gen = {'name': gen, 'count': count}\n    if curr_gen['count'] > top_gen['count']:\n        top_gen['name'] = gen\n        top_gen['count'] = count       \nprint(top_gen['name'])","83935b2f":"top_sales = df[['Name', 'Global_Sales']].sort_values('Global_Sales', ascending=False).head(20)\n\nprint(top_sales)","d26f637b":"med_NA_sales = df['NA_Sales'].median()\n\nprint(med_NA_sales)","afe5bd08":"top_half = df[df['NA_Sales'] >= med_NA_sales][['Name', 'NA_Sales']].sort_values('NA_Sales').head(5)\nbot_half = df[df['NA_Sales'] <= med_NA_sales][['Name', 'NA_Sales']].sort_values('NA_Sales', ascending=False).head(5)\nlist = top_half.append(bot_half)\nprint(list)","bf02e5aa":"na_sales_std = df['NA_Sales'].std()\n\nprint(na_sales_std)","bc705a27":"na_mean = df['NA_Sales'].mean()\nvariance = 0\n\nfor sales in df['NA_Sales']:\n    variance = variance + (sales - na_mean)**2\nvariance = variance \/ (df['NA_Sales'].size-1)\n\nlong_way_sd = math.sqrt(variance)\n\nprint(long_way_sd)","171ca75e":"df.head(1)","d86d608f":"pf_df = df[['Platform']].value_counts()\nprint('Average Global Sales Data for Each Console Platform:')\n\nfor pf,cnt in pf_df.items():\n    pf = pf[0]\n    cnt = round(df[df['Platform'] == pf][['Global_Sales']].sum().item()\/df[df['Platform'] == pf][['Global_Sales']].size, 2)\n    print(f'{pf}: {cnt}')","f378bdcd":"top_sega = df[df['Platform'] == 'GEN'][['Name', 'Global_Sales']].sort_values('Global_Sales', ascending=False).head(1)\n\nprint(top_sega)","e532f546":"poor_seller = df[df['Year'] == 1997][['Name', 'Global_Sales']].sort_values('Global_Sales').head(1)\n\nprint(poor_seller)","a58db0b1":"top_rpg = df[df['Genre'] == 'Role-Playing'][['Name', 'Global_Sales']].sort_values('Global_Sales', ascending=False).head(10)\n\nprint(top_rpg)","19e68acf":"def test():\n    def assert_equal(actual,expected):\n        assert actual == expected, f\"Expected {expected} but got {actual}\"\n    \n    # Which company is the most common video game publisher?\n    assert_equal(com_pub, 'Electronic Arts')\n    \n    # What\u2019s the most common platform?\n    assert_equal(com_plt, 'DS')\n\n    # What about the most common genre?\n    assert_equal(com_gen, 'Action')\n    \n    # What are the top 20 highest grossing games?\n    assert_equal(top_sales.iloc[0].Name, 'Wii Sports')\n\n    # For North American video game sales, what\u2019s the median? (Number in millions)\n    assert_equal(med_NA_sales, 0.08)\n    \n    # I will provide a secondary output showing ten games surrounding the median sales output, sorting the games with same median value in descending order.\n    assert_equal(list.iloc[0].Name, 'Ultimate Shooting Collection')\n   \n    # What is the top selling Sega Genesis game?\n    assert_equal(top_sega.iloc[0].Name, 'Sonic the Hedgehog 2')\n    \n    # What was the poorest selling game in 1997?\n    assert_equal(poor_seller.iloc[0].Name, 'Worms 2')\n    \n    # What are the top 10 RPGs of all time?\n    assert_equal(top_rpg.iloc[0].Name, 'Pokemon Red\/Pokemon Blue')\n    \n    \n    \n    \n\n    print(\"Success!!!\")\n\ntest()","cb66b8f7":"### What are the top 10 RPGs of all time? (AKA: Have you played Pokemon, Cloud?)\n\n**Here we found a list RPGs then ordered their global sales data in descending order:**","d770aee5":"**Here, we use a counter to see which genre is mentioned the most times in the data:**","59e88eab":"### For the top-selling game of all time, how many standard deviations above\/below the mean are its sales for North America?","abb15ff6":"**If its North American sales are 41.49 million, then Wii Sports' Standard Deviation is 41.49\/.817 = ~50.6 times above\/below the mean.**","bcb23b58":"### Which company is the most common video game publisher?\n**The easy way to find this is to simply use the .mode() method:**","fcf4944d":"# Data Analysis with Pandas\n## Utilizes Video Game Sales Data\n### Michael Greene 1\/19\/22\n\n**This notebook is meant to analyze a subset of video game sales data to answer several questions based off of the statistical information returned.**\n\n+ Questions I will attempt to answer:\n  + Which company is the most common video game publisher?\n  + What\u2019s the most common platform?\n  + What about the most common genre?\n  + What are the top 20 highest grossing games?\n  + For North American video game sales, what\u2019s the median?\n    + I will provide a secondary output showing ten games surrounding the median sales output, sorting the games with same median value in descending order.\n  + For the top-selling game of all time, how many standard deviations above\/below the mean are its sales for North America?\n  + The Nintendo Wii seems to have outdone itself with games. How does its average number of sales compare with all of the other platforms?\n  + What is the top selling Sega Genesis game?\n  + What was the poorest selling game in 1997?\n  + What are the top 10 RPGs of all time?","8bfc9f3b":"### What is the top selling Sega Genesis game?\n\n**Here we found a list of all Sega Games then ordered the highest grossing one by descending order:**","7f29848a":"### The Nintendo Wii seems to have outdone itself with games. How does its average number of sales compare with all of the other platforms?\n\n**Here we used the .value_counts() method to list all occurences of each platform. We then iterated through each unique occurence of a console and collected its global sales data using the .sum() method. Then we finally divided the total sales data by the number of games published for that console. All sales data is rounded up to the nearest hundredth. The Wii comes in at 8th behind the GameBoy, NES, Sega Genesis, SNES, PS4, X-Box360, and even the Atari 2600 consoles in average sales per title:**","b7a7dcd9":"**Here, we use a counter to see which publisher is mentioned the most times in the data:**","f3db62a4":"### What are the top 20 highest grossing games?\n**We use the .head() method for this problem, listing the first 20 games sorted by global sales:**","30ad4361":"### For North American video game sales, what\u2019s the median sales figure?\n**I will provide a secondary output showing ten games surrounding the median sales output, sorting the games with same median value in descending order. This will give us an idea of average seling games in NA:**","9588fb1b":"**Here I looked for 5 games >= to the median sales and 5 games <= to the median sales to gather a sampling of average selling titles in North America:**","2a8382d4":"**We can see the top selling game of all time (in this dataset) is Wii Sports:**","e8c52f99":"**Here we can view all the columns of information we have access to in this data frame:**","612e8ef0":"**Then I solved for standard deviation the long way by writing an algorithm which iterates though the Data Frame:**","f4058934":"**First I solved for standard deviation the easy way by using the built in Pandas method:**","19fd8698":"### ","58fe8dc6":"### Testing Suites","9fb11930":"### What was the poorest selling game in 1997?\n\n**Here we found a list of games made in 1997 then ordered their global sales data in ascending order:**","5717164a":"**I am fairly sure this data is incomplete because Minecraft easily shatters these records.**","6d64ecfa":"**If we are estimating these numbers in the millions, then this means a 'middle' sales range in North America should be around 80,000 units.**","75a665c7":"### What\u2019s the most common platform?\n**The easy way to find this is to simply use the .mode() method:**","e3b45d01":"### What about the most common genre??\n**The easy way to find this is to simply use the .mode() method:**","151ab5b5":"**Here, we use a counter to see which platform is mentioned the most times in the data:**"}}