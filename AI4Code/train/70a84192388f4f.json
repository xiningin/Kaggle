{"cell_type":{"6f02ea68":"code","4e108f5d":"code","92b83c73":"code","70d3fff3":"code","1ef2527f":"code","28842a7d":"code","07f0eb13":"code","a1c0f41e":"markdown"},"source":{"6f02ea68":"import re\nimport time\nimport json\nimport random\n\nimport pandas as pd\nimport requests\nfrom pandas.io.json import json_normalize\n\npd.set_option('display.max_columns', 100)","4e108f5d":"MIN_SLEEP_TIME = 60\nAMOUNT_PER_PACKET = 100\nTOTAL_NOTEBOOK_AMOUNT = 5000","92b83c73":"start_url = 'https:\/\/www.kaggle.com\/kernels.json?sortBy=voteCount&group=everyone&pageSize=' + str(AMOUNT_PER_PACKET)\n\nheaders = {\"User-Agent\": \"Mozilla\/5.0 (Windows NT 10.0; WOW64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/\"\n                         \"58.0.3029.110 Safari\/537.36 SE 2.X MetaSr 1.0\"}\n\nproxies = {\"http\": \"http:\/\/123.207.96.189:80\"}","70d3fff3":"def get_table_from_url(url):\n    \n    if 'after' not in url:\n        response = requests.get(start_url, proxies=proxies, headers=headers)\n    else:\n        response = requests.get(url, proxies=proxies, headers=headers)\n\n    text = response.text\n    nested_text = json.loads(text)\n    df_packet = pd.io.json.json_normalize(nested_text)\n\n    connect_id = df_packet.id[AMOUNT_PER_PACKET-1]\n    new_url = 'https:\/\/www.kaggle.com\/kernels.json?sortBy=voteCount&group=everyone&pageSize=' + str(AMOUNT_PER_PACKET) + '&after=' + str(connect_id)\n    \n    return df_packet, new_url","1ef2527f":"full_table, next_url = get_table_from_url(start_url)\n\nwhile full_table.shape[0] < TOTAL_NOTEBOOK_AMOUNT:\n    \n    print('Top ' + str(full_table.shape[0]) + ' notebooks information collected')\n    table_to_add, next_url = get_table_from_url(next_url)\n    full_table = pd.concat([full_table, table_to_add])\n    \n    sleep_time = MIN_SLEEP_TIME + random.random()*10\n    print('Let\\'s sleep for ' + str(sleep_time) + ' seconds!')\n    time.sleep(sleep_time)","28842a7d":"first_columns = ['id','title','totalVotes', 'author.id', 'author.displayName', 'scriptUrl','totalComments', 'scriptVersionDateCreated', 'isFork', 'languageName', 'isNotebook', 'isGpuEnabled', 'bestPublicScore', 'lastRunExecutionTimeSeconds','medal',]\ncolumn_names_sorted = first_columns + list(set(full_table.columns) - set(first_columns))\ntable_sorted = full_table[column_names_sorted].reset_index(drop=True)\n\noutput_name = 'top_' + str(TOTAL_NOTEBOOK_AMOUNT) + '_voted_kaggle_notebooks.csv'\ntable_sorted.to_csv(output_name)","07f0eb13":"table_sorted.head()","a1c0f41e":"To prevent causing trouble for the server, let's set a large sleeping time, 60 seconds.\n\nThis notebook introduced how the [data](https:\/\/www.kaggle.com\/nz0722\/top-5000-kaggle-notebooks) was collected."}}