{"cell_type":{"d4f84171":"code","424f695f":"code","ceafb553":"code","b1a27485":"code","4394e2be":"code","1eb93b69":"code","0a0d8cb6":"code","7ed825f5":"code","2a0206bf":"code","bda36a6b":"code","d6d59fe8":"code","45b2f5e6":"code","6700d3a9":"code","bc9331f7":"code","779c88d4":"code","be5b0c20":"code","56edb5df":"code","f822e506":"code","131d8206":"code","37eef3f0":"code","891adc3e":"code","6ebf1436":"code","8637abca":"code","0fe4621e":"code","4dc9aa02":"code","27c6622e":"code","5272e1a0":"code","3f4a28f4":"code","829fa1c2":"code","f3922287":"code","dfaa6582":"code","d0bebc1f":"code","979c9166":"code","faed1e7e":"code","415db4f7":"code","225fa66d":"code","da8d5c43":"code","58ff79be":"code","e2479e02":"code","8fbd9c3c":"code","50f2c7d8":"markdown","8b748e9d":"markdown","20faf24d":"markdown"},"source":{"d4f84171":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","424f695f":"#Loading Data and Its module\nimport pandas as pd\ntrain=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n\ndata_train=train.copy()\ndata_test=test.copy()","ceafb553":"#Change to Category and drop Id\ntrain['MSSubClass'] = train['MSSubClass'].astype('object')\ntrain.drop(['Id'],axis=1, inplace=True)\ntest['MSSubClass'] = test['MSSubClass'].astype('object')\ntest.drop(['Id'],axis=1, inplace=True)\ntrain['MoSold'] = train['MoSold'].astype('object')\ntest['MoSold'] = test['MoSold'].astype('object')\ntrain['YrSold'] = train['YrSold'].astype('object')\ntest['YrSold'] = test['YrSold'].astype('object')","b1a27485":"#Checking Null\ndata_train.info()","4394e2be":"data_train","1eb93b69":"!pip install klib","0a0d8cb6":"#Plotting Missing Value\nimport klib\nklib.missingval_plot(data_train)","7ed825f5":"data_train.drop(['Id'],axis=1, inplace=True)\ndata_train1=data_train.dropna(axis=1)\ndata_train1.info()","2a0206bf":"data_test1=data_test.dropna(axis=1)\ndata_test1.info()","bda36a6b":"cat=[]\ncon=[]\n\nfor i in data_train1.columns:\n    if data_train1[i].dtypes=='object':\n        cat.append(i)\n    else:\n        con.append(i)","d6d59fe8":"cat","45b2f5e6":"import seaborn as sns\nimport matplotlib.pyplot as plt \nplt.figure(figsize = (30,30))\n_=sns.heatmap(data_train1.corr(),annot=True)","6700d3a9":"plot=klib.corr_plot(data_train1,target=\"SalePrice\", annot=True)","bc9331f7":"Train_use=['SalePrice','OverallQual','GrLivArea',\n'GarageCars','GarageArea','TotalBsmtSF','1stFlrSF','FullBath','TotRmsAbvGrd','YearBuilt','YearRemodAdd','MSZoning',\n 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', 'ExterQual', 'ExterCond', 'Foundation', 'Heating', 'HeatingQC', 'CentralAir', 'KitchenQual', 'Functional', 'PavedDrive', 'SaleType', 'SaleCondition']\n\ndata_train_final=data_train1[Train_use]","779c88d4":"Test_use=['Id','OverallQual','GrLivArea',\n'GarageCars','GarageArea','TotalBsmtSF','1stFlrSF','FullBath','TotRmsAbvGrd','YearBuilt','YearRemodAdd','MSZoning',\n 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', 'ExterQual', 'ExterCond', 'Foundation', 'Heating', 'HeatingQC', 'CentralAir', 'KitchenQual', 'Functional', 'PavedDrive', 'SaleType', 'SaleCondition']\n\ndata_test_final=data_test[Test_use]","be5b0c20":"data_train_final.shape\n","56edb5df":"data_test_final.shape","f822e506":"data_train_final","131d8206":"data_train_final[cat]","37eef3f0":"train_final = pd.get_dummies(data_train_final, drop_first = True, columns = cat)","891adc3e":"train_final.shape","6ebf1436":"# copying all predictor variables into X and Target variable in Y\nX = train_final.drop(['SalePrice'], axis=1)\nY = train_final['SalePrice']","8637abca":"from sklearn.model_selection import train_test_split","0fe4621e":"train_X, test_X, train_Y, test_Y = train_test_split(X,Y, test_size = 0.2, random_state=42) ","4dc9aa02":"train_X","27c6622e":"from sklearn.linear_model import LinearRegression\nLR= LinearRegression()\nmodel=LR.fit(train_X, train_Y)","5272e1a0":"LR.coef_","3f4a28f4":"LR.score(train_X, train_Y)","829fa1c2":"pred_Y=model.predict(test_X)","f3922287":"pred_Y","dfaa6582":"test_=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest_","d0bebc1f":"a=data_train_final.drop(['SalePrice'],axis=1)\na","979c9166":"b=data_test_final.drop(['Id'],axis=1)\nc=data_test_final['Id']","faed1e7e":"datas=a.append(b)\ndatas","415db4f7":"tests = pd.get_dummies(datas, drop_first = True, columns = cat )\ntests.reset_index()\ntests","225fa66d":"datatest=tests.iloc[1460:,:]\na=datatest.fillna(method='ffill')\na.isna().sum()","da8d5c43":"Prediction=model.predict(a)\nPrediction=pd.DataFrame(Prediction)\nPrediction.rename(columns={0:'SalePrice'})\nfinal=Prediction.join(c)\nfinal","58ff79be":"final=final.rename(columns={0:'SalePrice'})\nfinal","e2479e02":"submission=final[['Id','SalePrice']]\nsubmission","8fbd9c3c":"submission.to_csv('Submission.csv', index=False)","50f2c7d8":"We can see that, the data contain many na.","8b748e9d":"#Let's use Data Testing","20faf24d":"We will use one hot encoder and combine with data train first, to capture all of category data to be encoded."}}