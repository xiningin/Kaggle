{"cell_type":{"d6aae4e2":"code","063e4bb9":"code","9700cff1":"code","9540fc87":"code","497ac0a6":"code","b5528111":"code","b9d63180":"code","450eb818":"code","963ed360":"code","9bf4d951":"code","95e4d67f":"code","84c86534":"code","9fff1596":"code","fb086ffc":"code","2de4c70a":"code","ec94157d":"code","5f600f5b":"code","c33df19f":"code","38b6c618":"code","14e29857":"markdown","294c576e":"markdown","c2e4715b":"markdown","0c59c47c":"markdown"},"source":{"d6aae4e2":"import sys\n!{sys.executable} -m pip install bar_chart_race","063e4bb9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport bar_chart_race as bcr\nfrom IPython.display import HTML\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom IPython.display import Video\nimport os","9700cff1":"data_dir='..\/input\/top500\/top500'","9540fc87":"files=os.listdir('..\/input\/top500\/top500')\nprint(files)\nprint(len(files))","497ac0a6":"data = pd.read_csv('..\/input\/top500\/top500\/June 2021.csv')\ndata[0:2].T","b5528111":"print(data.columns.tolist())","b9d63180":"cols=['Name']","450eb818":"def conj(A):\n    A2=A.replace(' - ',' ').replace(', ',' ').replace('  ',' ').split(' ')[0:5]\n    a=''\n    for item in A2:\n        a+=item+' '\n    return a","963ed360":"data=pd.DataFrame(columns=cols)\nfor file in files:\n    path=os.path.join(data_dir,file)\n    datai=pd.read_csv(path)\n    datai['file']=file[0:-4]\n    datai['Name2']=datai['Name'].apply(lambda x:conj(x))\n    data=pd.concat([data,datai])\ndata=data.reset_index(drop=True)\ndata","9bf4d951":"print(len(data[data['HPCG [TFlop\/s]']=='False']))\nprint(len(data[data['Linpack Performance (Rmax)']=='False']))\nprint(len(data[data['Theoretical Peak (Rpeak)']=='False']))\nprint(len(data[data['Name']=='False']))","95e4d67f":"data['year']=data['file'].apply(lambda x: x.split(' ')[-1])\ndata2=data[['year','Name2','HPCG [TFlop\/s]','Manufacturer:']]\ndata2=data2.reset_index(drop=True)\ndata2","84c86534":"drop2=data2[data2['HPCG [TFlop\/s]']==False].index.tolist()\ndata3=data2.drop(index=drop2)\ndrop3=data3[data3['HPCG [TFlop\/s]']=='False'].index.tolist()\ndata4=data3.drop(index=drop3).sort_values('year').reset_index(drop=True)\ndata4","9fff1596":"drop=[]\nfor i in range(1,len(data4)):\n    if data4.iloc[i,0]==data4.iloc[i-1,0] and data4.iloc[i,1]==data4.iloc[i-1,1]:\n        drop+=[i]\nprint(drop)\ndata4=data4.drop(index=drop).reset_index(drop=True)\ndata4","fb086ffc":"drop=[]\nfor i in range(len(data4)):\n    for j in range(i+1,len(data4)):\n        if data4.iloc[i,0]==data4.iloc[j,0] and data4.iloc[i,1]==data4.iloc[j,1]:\n            drop+=[j]\nprint(drop)\ndata4=data4.drop(index=drop).reset_index(drop=True)\ndata4","2de4c70a":"data4['HPCG [TFlop\/s]']=data4['HPCG [TFlop\/s]'].apply(lambda x: float(x.replace(',','')))","ec94157d":"# set double indexes and unstack!!!\ndata4a=data4.set_index(['year','Name2']).unstack()['HPCG [TFlop\/s]']\ndata4a","5f600f5b":"data4a2 = data4a.fillna(0)\ndata4a2","c33df19f":"df = data4a2\nbcr.bar_chart_race(\n    df=df,\n    filename='BCR_SupercomputerTop12.mp4',\n    orientation='h',\n    sort='desc',\n    n_bars=12,\n    fixed_order=False,\n    fixed_max=False,\n    steps_per_period=15,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.85,\n    period_label={'x': .99, 'y': .10, 'ha': 'right', 'va': 'center'},\n    #period_fmt='%B %d, %Y',\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,'s': '',\n                                      'ha': 'right', 'size': 8, 'family':'IPAGothic'},\n    #perpendicular_bar_func='median',\n    period_length=1700,\n    figsize=(6,4),\n    dpi=400,\n    cmap='dark24',\n    title='Supercomputer Top 12 -- HPCG [TFlop\/s]',\n    title_size=10,\n    bar_label_size=7,\n    tick_label_size=7,\n    shared_fontdict={'family':'IPAGothic','color':'.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha':.8},\n    filter_column_colors=True)","38b6c618":"Video(\"\/kaggle\/working\/BCR_SupercomputerTop12.mp4\", width=800, height=600, embed=True)","14e29857":"# Data preparation","294c576e":"# Dataframe for Bar Chart Race","c2e4715b":"# Supercomputer Top 12 - Bar Chart Race\n* cf. https:\/\/www.dexplo.org\/bar_chart_race\/\n* cf. https:\/\/github.com\/dexplo\/bar_chart_race\/","0c59c47c":"# Create Bar Chart Race\n"}}