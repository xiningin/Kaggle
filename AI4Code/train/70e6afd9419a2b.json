{"cell_type":{"5f49ec6a":"code","996fa0cc":"code","159b2073":"code","effe8e72":"code","8b973a2b":"code","0d838d49":"code","1b773ab3":"code","3b1d1ac4":"code","4e2cb876":"markdown","a456d3ed":"markdown","94755fde":"markdown","df86c362":"markdown"},"source":{"5f49ec6a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","996fa0cc":"PATH = '\/kaggle\/input\/m5-forecasting-accuracy\/'\nstv = pd.read_csv(f'{PATH}sales_train_validation.csv')\nss = pd.read_csv(f'{PATH}sample_submission.csv')\ncal = pd.read_csv(f'{PATH}calendar.csv')\nsell_prices = pd.read_csv(f'{PATH}sales_train_validation.csv')","159b2073":"def fsd(stv): \n    \"\"\"Get the first non zero entry of a row in the stv DataFrame, \n    and add it as the 'fsd' column, giving first sale day for M5 series\"\"\"\n    stv['fsd'] = 0 # initialize at zero, awaiting update from loop\n    for i in range(1,1914):\n        # Does fsd still need first day value? If yes, show True\n        fsd_as_reverse_bool = ~(stv.fsd.astype(bool))\n        # Convert to int to multiply\n        fsd_int = fsd_as_reverse_bool.astype('int')\n        # Does day i have a non-zero sale? Convert to int\n        d_i = stv['d_' + str(i)].astype('bool').astype('int')\n        # Update fsd column \n        stv['fsd'] += i * (fsd_int) * d_i","effe8e72":"fsd(stv)","8b973a2b":"# Set the time series length column\nstv['ts_length'] = 1914 - stv.fsd","0d838d49":"stv.ts_length.head()","1b773ab3":"tsl = stv.ts_length\ntsl.hist(figsize=(10,7))","3b1d1ac4":"stv[['id', 'fsd', 'ts_length']].to_csv('id_fsd_ts_length.csv', index=False)","4e2cb876":"# Function: Adds column to sales_train_validation which shows the first day with a positive value for each series.","a456d3ed":"# Histogram of the effective time series lengths of all items at all stores.","94755fde":"# Csv file with id, fsd, and ts_length in output","df86c362":"# Adding on the effective time series length as a column"}}