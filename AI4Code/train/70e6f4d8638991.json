{"cell_type":{"8d23e432":"code","4468b3e2":"code","5d679e0e":"code","2caddb30":"code","cdfc84af":"code","14c87caa":"code","1cd9820d":"code","c616b839":"code","fd31799c":"code","f0343554":"code","dafcc7fc":"code","c1018b13":"code","761a05f2":"code","648fb913":"code","51de3eb3":"code","3e6d0449":"code","33fdc3d5":"code","177c826e":"code","bc9c1e3a":"code","af522974":"code","54efa904":"code","666c3b51":"code","e0ede017":"code","a592eb0e":"code","1ce2275e":"code","6a24ff56":"code","75538f9a":"code","3581180a":"code","e4a27313":"code","e9fdee49":"code","a385be71":"markdown","006ab55c":"markdown","793d4109":"markdown","6f2d3cc7":"markdown","5a58049a":"markdown","af2d0ed9":"markdown","dc0223fd":"markdown","c70b74eb":"markdown","bd93b0d0":"markdown","65d08067":"markdown","1ee92375":"markdown","7873dfbe":"markdown","d44b59ff":"markdown","d90f5c91":"markdown","672c1aea":"markdown","ad81cbe3":"markdown"},"source":{"8d23e432":"#importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set(color_codes=True)","4468b3e2":"#Importing the dataset\n\ndata = '..\/input\/Iris.csv'\ndataset = pd.read_csv(data)","5d679e0e":"#View of top 5 data row\ndataset.head(5)","2caddb30":"#Removing the Id column as unnecessary part\ndataset = dataset.drop('Id',axis=1)","cdfc84af":"#Review the dataset without Id column\ndataset.head(5)","14c87caa":"#information about the data\ndataset.info()","1cd9820d":"#class distribution of data\ndataset.groupby('Species').size()","c616b839":"#description of data\ndataset.describe()","fd31799c":"#boxplot\nplt.figure(figsize=(20,8)) #setting figure size\ndataset.plot(kind='box',sharex=False,sharey=False)","f0343554":"#boxplot by each category of species\ndataset.boxplot(by='Species',figsize=(12,8))","dafcc7fc":"#detailed boxplot of sepal length\nsns.set(style='darkgrid',palette='deep')\nplt.figure(figsize=(12,6))\nplt.title(\"Compare the distribution of Sepal Length\")\nsns.boxplot(x='Species',y= 'SepalLengthCm',data=dataset)\nplt.show()","c1018b13":"#detailed boxplot of sepal Width\nsns.set(style='darkgrid',palette='deep')\nplt.figure(figsize=(12,6))\nplt.title(\"Compare the distribution of Sepal Width\")\nsns.boxplot(x='Species',y= 'SepalWidthCm',data=dataset)\nplt.show()","761a05f2":"#detailed boxplot of Petal length\nsns.set(style='darkgrid',palette='deep')\nplt.figure(figsize=(12,6))\nplt.title(\"Compare the distribution of Petal Length\")\nsns.boxplot(x='Species',y= 'PetalLengthCm',data=dataset)\nplt.show()","648fb913":"#detailed boxplot of petal width\nsns.set(style='darkgrid',palette='deep')\nplt.figure(figsize=(12,6))  #setting figure size\nplt.title(\"Compare the distribution of Petal Width\")\nsns.boxplot(x='Species',y= 'PetalWidthCm',data=dataset)\nplt.show()","51de3eb3":"#histograms \ndataset.hist(edgecolor='black',linewidth=2)","3e6d0449":"#pairplot \n#scatter plot for features and histogram with custom marker\nsns.pairplot(dataset,hue='Species',markers=['o','s','D'],diag_kind='hist')\n\n#removing the spines from the plot\nsns.despine()\n\n#show plot\nplt.show()","33fdc3d5":"#pairplot \n#scatter plot for features and kde with custom marker\nsns.pairplot(dataset,hue='Species',markers=['o','s','D'],diag_kind='kde')\n\n#removing the spines from the plot\nsns.despine()\n\n#show plot\nplt.show()","177c826e":"#pairplot \n#scatter plot for features and regression with custom marker\nsns.pairplot(dataset,hue='Species',markers=['o','s','D'],kind='reg')\n\n#removing the spines from the plot\nsns.despine()\n\n#show plot\nplt.show()","bc9c1e3a":"#swarmplot\nplt.figure(figsize=(12,8))  #setting figsize\n\n#melt the dataset\ndata1 = pd.melt(dataset,'Species',var_name='measurement')\n\n#categorical scatterplot\nsns.swarmplot(x='measurement',y='value',hue='Species',palette='deep',data=data1)\n\n#removing the spines from the plot\nsns.despine()\n\n#show plot\nplt.show()","af522974":"#Violine Plot of PetalLength\nplt.figure(figsize=(12,8)) #setting figuresize\n\n#plotting violineplot\nsns.violinplot(x='Species',y='PetalLengthCm',palette='deep',data=dataset)\n\n#removing spines\nsns.despine()\n\n#show plot\nplt.show()","54efa904":"#Violine Plot of PetalWidth\nplt.figure(figsize=(12,8)) #setting figuresize\n\n#plotting violineplot\nsns.violinplot(x='Species',y='PetalWidthCm',palette='deep',data=dataset)\n\n#removing spines\nsns.despine()\n\n#show plot\nplt.show()","666c3b51":"#Violine Plot of SepalLength\nplt.figure(figsize=(12,8)) #setting figuresize\n\n#plotting violineplot\nsns.violinplot(x='Species',y='SepalLengthCm',palette='deep',data=dataset)\n\n#removing spines\nsns.despine()\n\n#show plot\nplt.show()","e0ede017":"#Violine Plot of SepalWidth\nplt.figure(figsize=(12,8)) #setting figuresize\n\n#plotting violineplot\nsns.violinplot(x='Species',y='SepalWidthCm',palette='deep',data=dataset)\n\n#removing spines\nsns.despine()\n\n#show plot\nplt.show()","a592eb0e":"#Creating dataset of dependent(X)and Independent(y)variables\nX = dataset.iloc[:,:-1].values\ny= dataset.iloc[:,-1].values\n\n#Splitting dataset into training and test set\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test =train_test_split(X,y,test_size=0.2,random_state=0)\n","1ce2275e":"#Logistics Regression\n#importing the library\nfrom sklearn.linear_model import LogisticRegression\n#creating local variable classifier\nclassifier = LogisticRegression()\n#Training the model\nclassifier.fit(X_train,y_train)\n\n#predicting the value of Y\ny_pred = classifier.predict(X_test)\n\n#importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#summary of the model predicion\nprint(classification_report(y_test,y_pred))\nprint('Confusion Matrix:\\n',confusion_matrix(y_test,y_pred))\n\n#accuracy score of the model\nfrom sklearn.metrics import accuracy_score\nprint('accuracy score :',accuracy_score(y_pred,y_test))\n","6a24ff56":"#K-Nearest Neighbour\n#importing the library\nfrom sklearn.neighbors import KNeighborsClassifier\n#creating local variable classifier\nclassifier = KNeighborsClassifier(n_neighbors=8)\n#Training the model\nclassifier.fit(X_train,y_train)\n\n#predicting the value of Y\ny_pred = classifier.predict(X_test)\n\n#importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#summary of the model predicion\nprint(classification_report(y_test,y_pred))\nprint('Confusion Matrix:\\n',confusion_matrix(y_test,y_pred))\n\n#accuracy score of the model\nfrom sklearn.metrics import accuracy_score\nprint('accuracy score :',accuracy_score(y_pred,y_test))","75538f9a":"#Support Vector Machine(SVM)\n#importing the library\nfrom sklearn.svm import SVC\n#creating local variable classifier\nclassifier = SVC(kernel='linear',random_state=0)\n#Training the model\nclassifier.fit(X_train,y_train)\n\n#predicting the value of Y\ny_pred = classifier.predict(X_test)\n\n#importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#summary of the model predicion\nprint(classification_report(y_test,y_pred))\nprint('Confusion Matrix:\\n',confusion_matrix(y_test,y_pred))\n\n#accuracy score of the model\nfrom sklearn.metrics import accuracy_score\nprint('accuracy score :',accuracy_score(y_pred,y_test))","3581180a":"#Kernel SVM\n#importing the library\nfrom sklearn.svm import SVC\n#creating local variable classifier\nclassifier = SVC(kernel='rbf',gamma ='scale',random_state=0)\n#Training the model\nclassifier.fit(X_train,y_train)\n\n#predicting the value of Y\ny_pred = classifier.predict(X_test)\n\n#importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#summary of the model predicion\nprint(classification_report(y_test,y_pred))\nprint('Confusion Matrix:\\n',confusion_matrix(y_test,y_pred))\n\n#accuracy score of the model\nfrom sklearn.metrics import accuracy_score\nprint('accuracy score :',accuracy_score(y_pred,y_test))","e4a27313":"#Naive Bayes\n#importing the library\nfrom sklearn.naive_bayes import GaussianNB\n#creating local variable classifier\nclassifier = GaussianNB()\n#Training the model\nclassifier.fit(X_train,y_train)\n\n#predicting the value of Y\ny_pred = classifier.predict(X_test)\n\n#importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#summary of the model predicion\nprint(classification_report(y_test,y_pred))\nprint('Confusion Matrix:\\n',confusion_matrix(y_test,y_pred))\n\n#accuracy score of the model\nfrom sklearn.metrics import accuracy_score\nprint('accuracy score :',accuracy_score(y_pred,y_test))","e9fdee49":"#Decision Tree Classifier\n#importing the library\nfrom sklearn.tree import DecisionTreeClassifier\n#creating local variable classifier\nclassifier = DecisionTreeClassifier()\n#Training the model\nclassifier.fit(X_train,y_train)\n\n#predicting the value of Y\ny_pred = classifier.predict(X_test)\n\n#importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#summary of the model predicion\nprint(classification_report(y_test,y_pred))\nprint('Confusion Matrix:\\n',confusion_matrix(y_test,y_pred))\n\n#accuracy score of the model\nfrom sklearn.metrics import accuracy_score\nprint('accuracy score :',accuracy_score(y_pred,y_test))","a385be71":"# **Summary statistics of data **","006ab55c":"### **K-Nearest Neighbour**","793d4109":"### **Kernel SVM**","6f2d3cc7":"## **Pairplot**\n Finding relationships between variables across multiple dimensions","5a58049a":"## **SwarmPlot**","af2d0ed9":"## **ViolinePlot**","dc0223fd":"## **Boxplot**\nThe boxplot is a quick way of visually summarizing one or more groups of numerical data through their quartiles.","c70b74eb":"### **Support Vector Machine(SVM)**","bd93b0d0":"### **Naive Bayes**","65d08067":"### **Logistics Regression**","1ee92375":"# **Applying Machine Learning **\n\n### **Applying different Classificaion Models:**","7873dfbe":"## **Histogram**","d44b59ff":"### **Decision Tree Classifier**","d90f5c91":"From the boxplot chart analysis, there are clear differences in the size of the **Sepal Length**, **Sepal Width** ,**Petal Length** and **Petal Width** among the different species (**Iris-setosa**,**Iris-versicolor**,**Iris-virginica**)","672c1aea":"#       **Importing the libraries:**","ad81cbe3":"# **Visualizations:**"}}