{"cell_type":{"7e5ae15d":"code","e153e714":"code","e69b6616":"code","ba677c65":"code","dc8d8a3d":"code","fd3f8613":"code","1743873f":"code","f3b9445b":"code","025b9330":"code","c25a7471":"code","996cea5e":"code","1ba2db99":"code","45c1f9c4":"code","54ad90a4":"code","73428f87":"code","25200518":"code","1bb59bc4":"code","651132d1":"code","5027ba32":"code","dd98f50d":"code","19cca612":"code","0a5563cc":"code","c32262b1":"code","e86efc84":"code","7309272e":"code","13a9ae50":"code","84d0b5a6":"code","7a8bafe4":"code","4ca851bc":"code","4c30bb99":"code","146c8a11":"code","07f2843a":"code","d32a1812":"code","e0009ad9":"code","a11b1314":"code","afd4129d":"code","0934b16b":"code","0a994d5e":"code","d794eef1":"code","e1673e82":"code","2d15d2ab":"code","294b07af":"code","ba7c13f5":"code","645fc6e4":"code","a5c5d3fd":"code","319803ec":"code","3d12ee8c":"code","424ad295":"code","4f256fac":"code","2fdd3958":"code","c2c6ccde":"code","3f9e2e98":"code","3f2ed2d2":"code","8d35fd0d":"code","eafdda18":"code","ed67f76e":"code","c4d4849d":"code","8d5d2d57":"code","f3ed5729":"code","66a34b70":"code","b8d7238d":"code","74f92244":"code","08d34c8c":"code","95b0fb10":"code","824b0abc":"code","b60019cd":"code","d39afa80":"code","92d5cc63":"code","54fbec57":"code","bf09a302":"markdown","0b3cb360":"markdown","b2ce20d2":"markdown","75a2e88a":"markdown","d6f29ab7":"markdown","e63f8edd":"markdown","dca5ea65":"markdown","1d7fa5b5":"markdown","078fd312":"markdown","e184e263":"markdown","5cd45798":"markdown","7c69d5ad":"markdown","354c7476":"markdown","525f6c79":"markdown","0a26fade":"markdown","80435490":"markdown","fb3ec8cc":"markdown","522b472b":"markdown","76c2c8c1":"markdown","e0760279":"markdown","df903159":"markdown","dc37eaa7":"markdown","e6263d24":"markdown","bbea8c14":"markdown","44303050":"markdown","61265ed8":"markdown","7701e513":"markdown","4fc87ff9":"markdown"},"source":{"7e5ae15d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pickle","e153e714":"heart=pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")\nheart.head()","e69b6616":"heart.isnull().sum()","ba677c65":"heart[\"DEATH_EVENT\"].unique()","dc8d8a3d":"heart.describe()","fd3f8613":"heart.head(5)","1743873f":"heart[(heart[\"creatinine_phosphokinase\"]>9)&(heart[\"creatinine_phosphokinase\"]<120)&(heart[\"ejection_fraction\"]>50)&\n     (heart[\"ejection_fraction\"]<74)&(heart[\"platelets\"]>149999)&\n     (heart[\"platelets\"]<351000)]","f3b9445b":"heart[\"DEATH_EVENT\"].value_counts()","025b9330":"sns.boxplot(heart[\"age\"])","c25a7471":"heart[\"ejection_fraction\"].describe()","996cea5e":"sns.boxplot(heart[\"ejection_fraction\"])","1ba2db99":"%matplotlib\nsns.boxplot(heart[\"platelets\"])","45c1f9c4":"heart=heart[(heart[\"platelets\"]<400000)&(heart[\"platelets\"]>80000)]","54ad90a4":"heart=heart[heart[\"ejection_fraction\"]<70]","73428f87":"sns.boxplot(heart[\"serum_creatinine\"])","25200518":"heart[\"serum_creatinine\"].describe()","1bb59bc4":"heart[heart[\"serum_creatinine\"]>5]","651132d1":"sns.boxplot(heart[\"serum_sodium\"])","5027ba32":"heart[\"sex\"]=heart[\"sex\"].apply(lambda x:\"male\" if x==1 else \"female\")","dd98f50d":"sns.countplot(heart[\"sex\"])","19cca612":"heart","0a5563cc":"plt.figure(figsize=(30,18))\nsns.countplot(heart[(heart[\"creatinine_phosphokinase\"]>9)&(heart[\"creatinine_phosphokinase\"]<121)][\"creatinine_phosphokinase\"],hue=heart[\"DEATH_EVENT\"])","c32262b1":"sns.countplot(heart[\"diabetes\"],hue=heart[\"DEATH_EVENT\"])","e86efc84":"%matplotlib inline\nsns.barplot(heart[\"diabetes\"],heart[\"DEATH_EVENT\"])","7309272e":"heart[heart[\"diabetes\"]==1][\"DEATH_EVENT\"].value_counts()","13a9ae50":"sns.boxplot(heart[\"ejection_fraction\"])","84d0b5a6":"plt.figure(figsize=(15,10))\nsns.countplot(heart[\"ejection_fraction\"],hue=heart[\"DEATH_EVENT\"])","7a8bafe4":"sns.countplot(heart[\"high_blood_pressure\"],hue=heart[\"DEATH_EVENT\"])","4ca851bc":"%matplotlib inline\nplt.figure(figsize=(20,10))\nsns.countplot(heart[\"platelets\"],hue=heart[\"DEATH_EVENT\"])","4c30bb99":"heart[heart[\"platelets\"]<150000][\"DEATH_EVENT\"].value_counts()","146c8a11":"heart[heart[\"platelets\"]>350000][\"DEATH_EVENT\"].value_counts()","07f2843a":"heart[(heart[\"platelets\"]>=150000)&(heart[\"platelets\"]<=350000)][\"DEATH_EVENT\"].value_counts()","d32a1812":"heart[\"serum_creatinine\"]","e0009ad9":"plt.figure(figsize=(20,10))\nsns.countplot(heart[\"serum_creatinine\"],hue=heart[\"DEATH_EVENT\"])","a11b1314":"plt.figure(figsize=(20,10))\nsns.barplot(heart[\"serum_creatinine\"],heart[\"DEATH_EVENT\"])\n","afd4129d":"heart[(heart[\"serum_creatinine\"]>0.8)&(heart[\"serum_creatinine\"]<=1.2)][\"DEATH_EVENT\"].value_counts()","0934b16b":"plt.figure(figsize=(20,10))\nsns.barplot(heart[\"serum_sodium\"],heart[\"DEATH_EVENT\"])\n","0a994d5e":"plt.figure(figsize=(20,10))\nsns.countplot(heart[\"serum_sodium\"],hue=heart[\"DEATH_EVENT\"])\n","d794eef1":"heart[(heart[\"serum_sodium\"]<133)|(heart[\"serum_sodium\"]>145)][\"DEATH_EVENT\"].value_counts()","e1673e82":"heart[heart[\"smoking\"]==1][\"DEATH_EVENT\"].value_counts()","2d15d2ab":"heart[\"time\"]","294b07af":"plt.figure(figsize=(20,10))\n\nsns.countplot(heart[\"time\"],hue=heart[\"DEATH_EVENT\"])","ba7c13f5":"heart[heart[\"time\"]<73][\"DEATH_EVENT\"].value_counts()","645fc6e4":"from sklearn.ensemble import ExtraTreesClassifier","a5c5d3fd":"model=ExtraTreesClassifier()","319803ec":"X=heart.drop([\"DEATH_EVENT\",\"sex\"],axis=\"columns\")\ny=heart[\"DEATH_EVENT\"]","3d12ee8c":"model.fit(X,y)","424ad295":"print(model.feature_importances_) #use inbuilt class feature_importances of tree based classifiers","4f256fac":"#plot graph of feature importances for better visualization\nfeat_importances = pd.Series(model.feature_importances_, index=X.columns)\nfeat_importances.nlargest(10).plot(kind='barh')\nplt.show()","2fdd3958":"X=heart[[\"time\",\"ejection_fraction\",\"serum_creatinine\",\"age\",\"platelets\",\"creatinine_phosphokinase\"]]\ny=heart[\"DEATH_EVENT\"]","c2c6ccde":"from sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix","3f9e2e98":"Xtrain,Xtest,ytrain,ytest=train_test_split(X,y,random_state=61,test_size=0.2)","3f2ed2d2":"from sklearn.preprocessing import StandardScaler\nscale=StandardScaler()\nXtrain=scale.fit_transform(Xtrain)\nXtest=scale.transform(Xtest)","8d35fd0d":"ytrain.shape","eafdda18":"models={\"svc\":{\n    \"model\":SVC()\n},\n        \"dtc\":{\n            \"model\":DecisionTreeClassifier()\n        },\n       \"rfc\":{\n            \"model\":RandomForestClassifier()\n        },\n        \"lr\":{\n            \"model\":LogisticRegression()\n        },\n        \"gbc\":{\n            \"model\":GradientBoostingClassifier()\n        },\n        \"knc\":{\n            \"model\":KNeighborsClassifier()\n        },\n       \n       \n       }","ed67f76e":"for name,modell in models.items():\n    mod=modell[\"model\"].fit(Xtrain,ytrain)\n    ypred=mod.predict(Xtest)\n    print(f\"The accuracy of {name} is {accuracy_score(ypred,ytest)}\")","c4d4849d":"#for i in range(0,100):\n #   for name,modell in models.items():\n  #      Xtrain,Xtest,ytrain,ytest=train_test_split(X,y,random_state=i,test_size=0.2)\n   #     mod=modell[\"model\"].fit(Xtrain,ytrain)\n    #    ypred=mod.predict(Xtest)\n     #   print(f\"The accuracy of {name} for random {i} is {accuracy_score(ytest,ypred)}\")","8d5d2d57":"for i in range(1,100):\n    rfc=RandomForestClassifier(random_state=i).fit(Xtrain,ytrain)\n    ypred=rfc.predict(Xtest)\n    #print(f\"The accuracy for random {i} is {accuracy_score(ytest,ypred)}\")","f3ed5729":"rfc=RandomForestClassifier(random_state=72)\nrfc.fit(Xtrain,ytrain)\nypred=rfc.predict(Xtest)\nprint(f\"The accuracy is {accuracy_score(ypred,ytest)}\")","66a34b70":"mat=confusion_matrix(ytest,ypred)\nmat","b8d7238d":"sns.heatmap(mat,annot=True,xticklabels=[\"Survived\",\"Died\"],yticklabels=[\"Survived\",\"Died\"])\nplt.xlabel(\"Actual value\")\nplt.ylabel(\"Predicted value\")\nplt.title(\"GETTING ACTUAL AND MISLABELLED DATA POINTS\")","74f92244":"pd.DataFrame({\"Actual\":ytest,\"Predicted\":ypred})","08d34c8c":"from sklearn.metrics import classification_report\nprint(classification_report(ytest,ypred))","95b0fb10":"from sklearn.metrics import precision_recall_curve\nprecision ,recall,thresholds=precision_recall_curve(ytest,ypred)","824b0abc":"precision","b60019cd":"recall","d39afa80":"thresholds","92d5cc63":"pickle.dump(rfc,open(\"model3.pkl\",\"wb\"))\n","54fbec57":"model3=pickle.load(open(\"model3.pkl\",\"rb\"))\n","bf09a302":"The highest deaths had creatinine of 23,46 ,60,68,69,70,76,81,94,99,104,110-113","0b3cb360":"### SERUM SODIUM","b2ce20d2":"Here I created a pickle file which I will reference when I want to deploy the model into an app.","75a2e88a":"### PLATELETS TO DEATH","d6f29ab7":"### SERUM CREATININE","e63f8edd":"Here , I want to use ExtraTreesClassifier to get the most important features in my dataset.","dca5ea65":"### NORMAL PERSON ANALYSIS","1d7fa5b5":"### DATA MODELLING","078fd312":"### SMOKING","e184e263":"More males than females","5cd45798":"time is Follow up period in days","7c69d5ad":"We see that most people that were diabetes free survived more; but still many people with diabetes also survived","354c7476":"### CREATININE PHOSPHASE TO DEATH","525f6c79":"Most people in the normal createnine range survived but most people with extreme createnine values died","0a26fade":"Most people with diabetes survived","80435490":"### HIGH BLOOD PRESSURE TO DEATH","fb3ec8cc":"SO , at low values and extreme values of serum sodium, more deaths may occur","522b472b":"Here, we have data between 40-95 years old.\n<br><br>Normal value of createning phosphokinase is between 10 mcg\/l to 120 mcg\/l\n<br>Ejection fraction normal range is between 53 and 73%\n<br>As we age, our heart ages also age, the walls thickken\n<br>E.F below 53 for women and 52 for men is low... E.F <45% is a potential factor for heart issues\n<br>HBP increases heart failure chance\n<br>Normal platelet range is 150000 to 350000\n<br>Normal serum cretinine is 0.84 to 1.21 or 0.6 to 1.21\n<br>Creatiine more than 5 may indicate serious kidney impairment\n<br>Diabetes may cause high createnine\n<br>Normal serum sodium  is 135 to 145\n","76c2c8c1":"Here, we see that majority of our dataset did not have high blood pressure and majority of the people that had high blood pressure did not die from heart failure","e0760279":"THe range is still in the normal level range that's why we did'nt get so much deaths","df903159":"We see that follow up days less than 73 recorded more deaths by a large margin","dc37eaa7":"### TIME","e6263d24":"We see that as serum creatinine value reaches 1.8, more people died from heart failure. So, we can conclude that serum creatinine value has direct inference with the heart failure. ","bbea8c14":"Cardiovascular diseases (CVDs) are the number 1 cause of death globally, taking an estimated 17.9 million lives each year, which accounts for 31% of all deaths worlwide.\nHeart failure is a common event caused by CVDs and this dataset contains 12 features that can be used to predict mortality by heart failure.\n\nMost cardiovascular diseases can be prevented by addressing behavioural risk factors such as tobacco use, unhealthy diet and obesity, physical inactivity and harmful use of alcohol using population-wide strategies.\n\nPeople with cardiovascular disease or who are at high cardiovascular risk (due to the presence of one or more risk factors such as hypertension, diabetes, hyperlipidaemia or already established disease) need early detection and management wherein a machine learning model can be of great help.","44303050":"### DIABETES TO DEATH","61265ed8":"We see that most people with very low ejection fraction died but as the ejection fraction reaches 30, most of them survived","7701e513":"Serum sodium less than 133 recorded many deaths and serum sodium values greater than 145 recorded many deaths too","4fc87ff9":"### EJECTION FRACTION TO DEATH"}}