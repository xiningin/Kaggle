{"cell_type":{"b757e4e6":"code","6557ccb0":"code","5140041a":"code","ff94377c":"code","aa3ce0ab":"code","08a47cdd":"code","e86641fa":"code","afc79837":"code","73cbab00":"code","03f04d58":"code","1f27002d":"code","8f4ad471":"code","2ed6d47c":"code","47989c3a":"code","f1158ef9":"code","27873841":"code","c335dceb":"code","285cc8b5":"code","d60a994d":"code","9dd94dc2":"code","0961feec":"code","d498b4d3":"code","aefb3ec7":"code","07daf0b1":"code","2a7dabe4":"code","3a1fbf62":"code","d189a75f":"code","4bc43688":"code","f4bfc1b6":"code","8d87f7b5":"code","e52e991c":"code","1facf674":"code","06a7ff5e":"code","5afbb68e":"code","8877a0fe":"code","3640d581":"code","f2e806b4":"code","52a2f0f5":"code","632eb648":"code","a4756881":"code","67321152":"code","5870259e":"code","38392ae2":"code","21a0b6a2":"markdown","8ab5563d":"markdown","5cae1b60":"markdown"},"source":{"b757e4e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6557ccb0":"Dataset contains more than 2000 job listing for data analyst positions, with different Job Title names such as:\n\nTarget:\nJob Title(Diff data analyst)\nSalary\nLoction(City\/State)\nRating\n","5140041a":"# Data Manuplation\nimport pandas as pd\nimport numpy as np\n\n# Data Visualization\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\n\nimport re\n\n%matplotlib inline\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n","ff94377c":"df = pd.read_csv('..\/input\/data-analyst-jobs\/DataAnalyst.csv')\ndf.head()","aa3ce0ab":"df.shape","08a47cdd":"df.info()","e86641fa":"df.values","afc79837":"# Dropping Columns from DataFrame\ndf.drop(['Unnamed: 0','Job Description',\"Company Name\",'Headquarters', 'Size', 'Founded','Type of ownership','Revenue','Competitors','Easy Apply'], 1,  inplace=True)","73cbab00":"# Renaming Column names\ndf.rename(columns={ \"Job Title\":\"Job_Title\", \n                  \"Salary Estimate\": \"Salary_Estimate\"}, inplace=True)\n","03f04d58":"df.head()","1f27002d":"# Splitting  Job_Title into understandable\nsplit_Job_Title= df.Job_Title.str.split(' -|\u2014|, ', expand= True)\n\nsplit_Job_Title","8f4ad471":"# Cleaned Job_Title column\nsplit_Job_Title = split_Job_Title.replace({'Data Analyst 2': 'Data Analyst II',\n                                           'Data Analyst 3': 'Data AnalystIII',\n                                           'RQS': 'Data Security Analyst',\n                                           'JPSC-7176':'Senior Data Analyst',\n                                           'Data Analyst *Temp-Hire*':'Data Analyst',\n                                           'Data Analyst-IT II':'Data Analyst II',\n                                           'IT Data Analyst':'Data Analyst',\n                                           'CCB Risk':'Fraud Risk Data Analyst','Analyst':'Analyst Data Intelligence',\n                                           'CDHP': 'Data Analyst Team Lead','ACA':'Data Analyst','VP':'Research Project Analyst\/Data Management',\n                                           'JPSC-8461':'Data Analyst','.net': 'Business Analyst\\Data Analyst','.Net Developer':'Data Design Analyst',\n                                           \"Technical Business Analyst (SQL\": 'Technical Business Analyst (SQL Data analytics ETL)',\n                                           'Data Systems Analyst (7199U':'Data Systems Analyst',\n                                            'Sr. Data Analyst': 'Senior Data Analyst', \n                                            'Sr Data Analyst': 'Senior Data Analyst',\n                                            'Data Analyst Junior': 'Junior Data Analyst',\n                                          '#104252 Division Data and Financial Analyst': 'Data and Finanical Analyst',\n                                            '#105009 Research Data Analyst':'Research Data Analyst',\n                                           '(Data Analyst) BA\/BSA':'Data Analyst','(REMOTE) Sr. Risk Analyst (IT}':'Senior Risk Analyst',\n                                           '(Risk Data Analyst)':\"Risk Data Analyst\",'(Data Risk Analyst: Data Modeler)':'Risk Data Analyst'})","2ed6d47c":"# Salary Column Cleaning\ndf['Salary_Estimate'] = df['Salary_Estimate'].apply(lambda x: '$0K-$0K' if x == '-1' else x)\ndf['Salary_Estimate'] = df['Salary_Estimate'].apply(lambda x: x.split('(')[0])\n\nsalary= df['Salary_Estimate'].str.split('-', expand=True)\ndf['MinSalary($\/k)'] = pd.to_numeric(salary[0].str.extract('(\\d+)', expand=False))\ndf['MaxSalary($\/k)'] = pd.to_numeric(salary[1].str.extract('(\\d+)', expand=False))\n\ndf.head()","47989c3a":"#df.drop(['Salary_Estimate',\"MinSalary\",'MaxSalary','MinSalary($)'],axis=1,inplace=True)\ndf.drop(['Salary_Estimate'],axis=1,inplace=True)","f1158ef9":"# Industry Column Cleaning\ndf['Industry'] = df['Industry'].apply(lambda x: 'NAN' if x == '-1' else x)\ndf['Industry'].value_counts().head()","27873841":"# Sector column Cleaning\ndf['Sector'] = df['Sector'].apply(lambda x: 'NAN' if x == '0' else x)\ndf['Sector'].value_counts().head()","c335dceb":"# split into state & City\nsplit_Location= df.Location.str.split(',',expand=True)\nsplit_Location","285cc8b5":"# Assign Coulmn names\nsplit_Location.columns=['City','State','None']\n\nsplit_Location","d60a994d":"# Adding columns to our output DataFrame\ndf= pd.concat([df, split_Location,split_Job_Title], axis = 1)","9dd94dc2":"df.head()","0961feec":"df.drop(['Job_Title','Location','None',1,2,3,4,5],1, inplace= True)","d498b4d3":"# Rename Job_title after cleaning\ndf.rename(columns={0:'Job_Title'}, inplace=True)","aefb3ec7":"\ndf.head()","07daf0b1":"popular_titles= df['Job_Title'].value_counts().nlargest(n=20)\n#popular_titles= popular_titles[popular_titles==True]\n#popular_titles.plot()\npopular_titles","2a7dabe4":"plt.figure(figsize=(10,5))\n\nax=sns.barplot(x=df['Job_Title'].value_counts()[0:20],y=df['Job_Title'].value_counts()[0:20].index)\nplt.title('Top 20 Job_Titles by Job Posts')\nplt.ylabel('')\nplt.xlabel('')\nplt.show()","3a1fbf62":"plt.figure(figsize=(10,5))\nax=sns.barplot(x=df['MinSalary($\/k)'].value_counts()[0:20],y=df['MinSalary($\/k)'].value_counts()[0:20].index)\nplt.title('Salary_Estimate by Glassdoor')\nplt.ylabel('')\nplt.xlabel('')\nplt.show()","d189a75f":" #Transform into categorical\ndf['Job_Title'] = pd.Categorical(df['Job_Title'])\ndf.dtypes\n# Plot bar plot (titles, age and sex)\nplt.figure(figsize=(15,5))\nax=sns.barplot(x=df['Job_Title'].value_counts()[0:20],y=df['City'].value_counts()[0:20].index)\n","4bc43688":"Sector = df.groupby(['Sector']).mean()\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=Sector.index,y=Sector['MinSalary($\/k)'],name='Mininum Mean Salary',text=Sector['MinSalary($\/k)'],textposition='auto' ))\nfig.add_trace(go.Bar(x=Sector.index,y=Sector['MaxSalary($\/k)'],name='Maximum Mean Salary',text=Sector['MinSalary($\/k)'],textposition='auto'))\nfig.update_layout(title='Mean Salary',barmode='stack')\nfig.show()","f4bfc1b6":"location = df[df['Job_Title']=='Data Analyst']['State'].value_counts()\nfig = px.pie(location,names=location.index,values=location,height=600)\nfig.update_traces(textposition='inside',textinfo='label+percent',hole=.3)\n\nfig.show()","8d87f7b5":"role = df['Job_Title'].value_counts().nlargest(n=15)\nfig = px.pie(role, values = role.values, names = role.index,  title=\"Top 15 Job_Titles\", color=role.values,\n       color_discrete_sequence=px.colors.qualitative.Prism)\nfig.update_traces(opacity=0.7,marker_line_color='rgb(8,48,107)',marker_line_width=1.5)\nfig.update_layout(title_x=0.5)\nfig.show()","e52e991c":"z=df.groupby(['Job_Title']).mean()\nz.iloc[20:30]","1facf674":"df.plot.scatter(x='MinSalary($\/k)', y='State',figsize=(10,5))","06a7ff5e":"f,axes= plt.subplots(1,2, sharey=False, figsize=(10,5), dpi=100, facecolor= 'white')\n\ntable1= pd.pivot_table(df, index='State', columns='MaxSalary($\/k)', values='Rating').plot(kind='bar', ax=axes[0])\ntable1= pd.pivot_table(df, index='State', columns='MaxSalary($\/k)', values='MinSalary($\/k)').plot(kind='bar', ax=axes[1])\n\naxes[0].set_ylabel('Rating_score')\naxes[1].set_ylabel('Basic_Salary')\naxes[0].set_ylim((0,9.9))\naxes[0].set_ylim((0,1.4));\n","5afbb68e":"df.sort_values(['Rating','MaxSalary($\/k)'], ascending=(True, False), inplace= None)\ndf.head(10)","8877a0fe":"### Univarient Analysis","3640d581":"df.groupby(['Job_Title']).count()","f2e806b4":"freq_table= df.groupby(['Job_Title']).size().reset_index(name='Count')\nfreq_table.head()","52a2f0f5":"freq_table['Counts']=freq_table['Count']\/sum(freq_table['Count'])*100\nfreq_table","632eb648":"freq_table= df.groupby(['Rating']).size().reset_index(name='Count')\nfreq_table.head(10)","a4756881":"plt.figure(figsize=(10,5))\nx = df['Rating']\nplt.hist(x, bins=20, color='green')\nplt.title('Rating of companies')\nplt.xlabel('Rating')\nplt.ylabel('Count')\nplt.show()\n","67321152":"plt.figure(figsize=(10,5))\ndf.boxplot()","5870259e":"df['MinSalary($\/k)'].median()","38392ae2":"np.percentile(df['MaxSalary($\/k)'],75)","21a0b6a2":"> > **Top 20 Job Titles**","8ab5563d":"Bar plot gives us an estimate of central tendency for a numeric variable (height of each rectangle) and an indication of the \n\nuncertainty around that estimate (error bars in black).","5cae1b60":"Data Preparation"}}