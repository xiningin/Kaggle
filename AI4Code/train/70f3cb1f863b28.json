{"cell_type":{"c1369852":"code","0e836178":"code","1d512063":"code","68158f33":"code","8b26236e":"code","ef36cdcd":"code","52bd7505":"code","f0db06bf":"code","b771f06a":"code","b91b1dbb":"code","a98ac28d":"code","fb593d1a":"code","8437dd28":"code","7a68b4e4":"code","be66f040":"code","fc30c0d3":"code","81766981":"markdown","e0b51b85":"markdown","81e1ae30":"markdown","9f651ae8":"markdown","76fbff92":"markdown","f7ac482f":"markdown","458f7d1d":"markdown"},"source":{"c1369852":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0e836178":"# loading data\ndf = pd.read_csv(\"..\/input\/cardiovascular-disease-dataset\/cardio_train.csv\",sep=';')\ndf.head(3)","1d512063":"df['age'] = df.age.apply(lambda x:x\/\/365)","68158f33":"bmi = round((df.weight\/df.height\/df.height)*10000)\ncat_bmi = []\nfor n in bmi:\n    if n <19:\n        val = 2\n    elif n>19 and n<25:\n        val = 1\n    elif n>25 and n<30:\n        val = 3\n    else:\n        val = 4\n    cat_bmi.append(val)","8b26236e":"df['bmi'] = cat_bmi","ef36cdcd":"bpc = []\nfor n,v in zip(df.ap_hi, df.ap_lo):\n    if n <= 120 and v <= 80:\n        val = 1\n    elif n>120 and n<130 and v<80:\n        val = 2\n    elif n>=130 and n<140 or v>80 and n<89:\n        val =3\n    elif n>=140 and n<180 or v>=90 and v<120:\n        val = 4\n    elif n >=180 or v >=120:\n        val = 5\n    bpc.append(val)\n\ndf['bpc'] = bpc","52bd7505":"ageq = []\nfor a in df.age:\n    if a<=30:\n        val = 1\n    elif a>30 and a<=40:\n        val = 2\n    elif a>40 and a<=50:\n        val = 3\n    else:\n        val = 4\n    ageq.append(val)\n    \ndf['age'] = ageq","f0db06bf":"df = df.drop(['id','height','weight','ap_hi','ap_lo'], axis=1)","b771f06a":"df.head(5)","b91b1dbb":"x = df[['age','gender','gluc','smoke','bmi','bpc','cholesterol','alco','active']]\ny = df[['cardio']]","a98ac28d":"from sklearn.model_selection import train_test_split","fb593d1a":" X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)","8437dd28":"from sklearn.neural_network import MLPClassifier\nmlp = MLPClassifier(hidden_layer_sizes=(150,100,50), activation='relu', solver='adam', max_iter=100)","7a68b4e4":"mlp.fit(X_train,y_train)","be66f040":"y_pred = mlp.predict(X_test)\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix, classification_report\nprint(accuracy_score(y_test, y_pred)*100)\ncm = confusion_matrix(y_test, y_pred)","fc30c0d3":"classification_report(y_test, y_pred)","81766981":"catergorising by age group","e0b51b85":"calculating blood pressure category and encoding it.\nhttps:\/\/www.webmd.com\/hypertension-high-blood-pressure\/guide\/diastolic-and-systolic-blood-pressure-know-your-numbers#1","81e1ae30":"using neural network","9f651ae8":"applying changes to age","76fbff92":"calculating bmi(Body mass index) using (df.weight\/df.height\/df.height)*10000\nhttps:\/\/www.medicalnewstoday.com\/articles\/323622.php","f7ac482f":"droping columns","458f7d1d":"this is a part of webapp\nfull version of webapp can be find out at https:\/\/github.com\/yedu-YK\/cardio_django\nhopeing for your feedback\n"}}