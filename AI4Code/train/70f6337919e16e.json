{"cell_type":{"89392161":"code","0fafc76e":"code","461c05bd":"code","cae5a1e3":"code","cb77abcf":"code","76718a3d":"code","27e2ea32":"code","a7af9a03":"code","1796ef5f":"code","25a18306":"code","634ea221":"code","565dadf1":"code","73575f47":"code","91cb8779":"code","d4df0562":"code","17610b66":"markdown","c1ce0b81":"markdown"},"source":{"89392161":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport os\nprint(os.listdir(\"..\/input\"))","0fafc76e":"def load_train_data():\n    return pd.read_csv('..\/input\/quickdraw_train.csv', index_col='id')\n\ndef load_test_data():\n    return pd.read_csv('..\/input\/quickdraw_test_x.csv', index_col='id')","461c05bd":"df_train = load_train_data()\ndf_test = load_test_data()","cae5a1e3":"def make_pixel_agg(df):\n    columns = [f for f in df.columns if 'pix' in f]\n    df['mean'] = df[columns].mean(axis = 1)\n    df['var'] = df[columns].var(axis = 1)\n    df['no_dead'] = df[columns][df[columns] == 0].count(axis=1)\n    return df\n\ndef pixel_location(df):\n    columns = [f for f in df.columns if 'pix' in f]\n    df['up_or_down'] = np.where(df[columns[:392]].sum(axis=1) > df[columns[392:]].sum(axis=1), 1, 0)\n    df['biggest_pixel'] = np.argmax(df[columns].values, axis=1)\n    return df","cb77abcf":"df_train = make_pixel_agg(df_train)\ndf_train = pixel_location(df_train)\n\ndf_test = make_pixel_agg(df_test)\ndf_test = pixel_location(df_test)","76718a3d":"df_train.head()","27e2ea32":"import seaborn as sns\nsns.set(style=\"whitegrid\")\nsns.set(rc={'figure.figsize':(15, 15)})\nax = sns.barplot(x=\"subcategory\", y=\"mean\", data=df_train)\nplt.setp(ax.get_xticklabels(), rotation=90)","a7af9a03":"ax = sns.barplot(x=\"subcategory\", y=\"var\", data=df_train)\nplt.setp(ax.get_xticklabels(), rotation=90)","1796ef5f":"ax = sns.barplot(x=\"subcategory\", y=\"no_dead\", data=df_train)\nplt.setp(ax.get_xticklabels(), rotation=90)","25a18306":"import catboost as cb\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder","634ea221":"df_train.columns","565dadf1":"columns_to_use = ['mean', 'var','no_dead', 'up_or_down', 'biggest_pixel']\n\nX_train, X_test, y_train, y_test = train_test_split(df_train[columns_to_use],\n                                                   df_train['category'].values,\n                                                   stratify = df_train['category'])\nle = LabelEncoder()\ny_train = le.fit_transform(y_train.flatten())\ny_test  = le.transform(y_test.flatten())","73575f47":"X_train.columns","91cb8779":"clf = cb.CatBoostClassifier(iterations = 500,learning_rate=0.1, eval_metric = 'Accuracy')\nclf.fit(X_train, y_train, cat_features = [3], eval_set = [(X_train, y_train),(X_test, y_test)])\n","d4df0562":"clf.feature_importances_","17610b66":"72% Accuracy for Binary Classification - Food or Animal?","c1ce0b81":"## **Catboost!**"}}