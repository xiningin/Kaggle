{"cell_type":{"000b0b57":"code","5b39cf95":"code","1b74422b":"code","4ea1855b":"code","868f7be3":"code","1bd3eb35":"code","fef5657c":"code","cdf4a87a":"code","7aaff198":"code","14bd7cbd":"code","3ff8ba6a":"code","6cd70b92":"code","d8173c02":"code","f764826e":"code","a853ddf5":"code","1153a2f6":"code","91a965c9":"code","02292cf4":"code","c16ed601":"code","10b4d36d":"code","8c4baced":"code","1b53319f":"code","b1bd174c":"code","882568bd":"markdown","d16b3c13":"markdown","a3535e25":"markdown","714fe61b":"markdown"},"source":{"000b0b57":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\n","5b39cf95":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","1b74422b":"df = pd.read_csv(\"\/kaggle\/input\/GP Orders - 4.csv\",encoding=\"utf-8\", delimiter=',')\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","4ea1855b":"df = df.rename(columns={'Order Number': 'Order_Number',\"Order Status\":\"Order_Status\", \"Book Name\":\"Book_Name\",\"Order Date\":\"Order_Date\",\"City (Billing)\":\"Billing_City\"})\ndf.head(5)","868f7be3":"df.isnull().sum()","1bd3eb35":"df[df['Book_Name'].isna()]","fef5657c":"df[df['Billing_City'].isna()]","cdf4a87a":"df.dropna(inplace= True)","7aaff198":"nRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","14bd7cbd":"df.Order_Status.unique()","3ff8ba6a":"df.Order_Status.value_counts()\n","6cd70b92":"histogram= df.Order_Status.hist()","d8173c02":"df.Billing_City.nunique()","f764826e":"df.Billing_City.value_counts()","a853ddf5":"cities = df.Billing_City.unique()\ncities","1153a2f6":"#Convert Billing_City into lower case letters\ndf['Billing_City'] = df['Billing_City'].str.lower()\ndf['Billing_City'] = df['Billing_City'].str.strip()","91a965c9":"#Convert Book_Name into lower case letters\ndf['Book_Name'] = df['Book_Name'].str.lower()\ndf['Book_Name'] = df['Book_Name'].str.strip()\ndf","02292cf4":"#Shout out muhammadismail99 for this function\n\nfrom itertools import chain\n\n# return list from series of comma-separated strings\ndef chainer(s):\n    return list(chain.from_iterable(s.str.split('\/')))\n\n# calculate lengths of splits\nlens = df['Book_Name'].str.split('\/').map(len)\n\n# create new dataframe, repeating or chaining as appropriate\ndf = pd.DataFrame({'Order_Number': np.repeat(df['Order_Number'], lens),\n                    'Order_Status': np.repeat(df['Order_Status'], lens),\n                    'Book_Name': chainer(df['Book_Name']),\n                    'Order_Date': np.repeat(df['Order_Date'], lens),\n                    'Billing_City': np.repeat(df['Billing_City'], lens)})","c16ed601":"nRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","10b4d36d":"df.head(50)","8c4baced":"top_selling_books = df[df['Order_Status']=='Completed']['Book_Name'].value_counts()\ntop_selling_books.head(1)","1b53319f":"\ntop10 = df[\"Book_Name\"].value_counts().nlargest(10).to_frame()\n\ngraph = px.bar(top10, y =top10['Book_Name'], x = top10.index, title = 'Top 10 Books ')\n\ngraph.update_xaxes(title=\"Books\")\ngraph.update_yaxes(title=\"Count\")\ngraph.update_traces()\ngraph.show()","b1bd174c":"df[\"Order_Date\"] = pd.DatetimeIndex(df[\"Order_Date\"])\ndf['date'] = df['Order_Date'].dt.date\ndf['time'] = df['Order_Date'].dt.time\ndf[\"Day_Name\"] = df[\"Order_Date\"].dt.day_name()\ndf[\"Month_Name\"] = df[\"Order_Date\"].dt.month_name()\ndf['year'] = df[\"Order_Date\"].dt.year\ndf","882568bd":"There is 1 csv file in the current version of the dataset:\n","d16b3c13":"Best Selling Book","a3535e25":"Rename column names for better EDA and Let's take a quick look at what the data looks like:","714fe61b":"Distribution graphs (histogram\/bar graph) of sampled columns:"}}