{"cell_type":{"c942c238":"code","d370f489":"code","7a18f2f9":"code","f8f6e6f2":"code","ed952dee":"code","d23a4be7":"code","9024bd8a":"code","fdd5c96e":"code","ede2a42e":"code","adbed51d":"markdown","e77dc923":"markdown","0ca1a44c":"markdown","5574d496":"markdown","26cd4f68":"markdown","14c772cf":"markdown","c3b1c080":"markdown","e50678c3":"markdown","a1eeb282":"markdown"},"source":{"c942c238":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d370f489":"import speech_recognition as sr\nimport pyttsx3\nimport datetime\nimport wikipedia\nimport webbrowser\nimport os\nimport smtplib\nimport re\nimport subprocess\nimport cv2\nimport matplotlib.pyplot as plt\nfrom ecapture import ecapture as ec\n\n\nimport speech_recognition as sr\nimport os\nimport sys\nimport re\nimport webbrowser\nimport smtplib\nimport requests\nimport subprocess\nfrom pyowm import OWM\nfrom urllib.request import urlopen\nfrom socket import timeout\n#import youtube_dl\n#import vlc\n#import urllib\n#import urllib2\nimport json\n#from bs4 import BeautifulSoup as soup\n#from urllib2 import urlopen\n#import wikipedia\nimport random\nfrom time import strftime\nimport ctypes\nimport time","7a18f2f9":"engine = pyttsx3.init('sapi5')\nvoices = engine.getProperty('voices')\nprint(voices[1].id)\nengine.setProperty('voice',voices[0].id)\n\n\ndef speek(audio):\n    engine.say(audio)\n    engine.runAndWait()","f8f6e6f2":"def wishMe():\n    hour = int(datetime.datetime.now().hour)\n    if hour>=0 and hour<12:\n        speek(\"good morning!,sir\" )\n        \n    elif hour>=12 and hour<18:\n        speek(\"good afternoon sir\")\n        \n    else:\n        speek(\"good evening!, sir\")\n        \n    speek(\"Hello i am Pointer. please tell me how may i help you!\")","ed952dee":"def takeCommand():\n    \n    r = sr.Recognizer()\n    m = sr.Microphone()\n    \n    print(\"A moment of silence, please...\")\n    with m as source:r.adjust_for_ambient_noise(source)\n    print(\"Say something!\")\n    with m as source:audio = r.listen(source)\n    print(\"Got it! Now to recognize it...\")\n    value = \"\"\n    \n   # r = sr.Recognizer()\n   # with sr.Microphone() as source:\n   #     print(\"Listening...\")\n   #     r.pause_threshold = 1\n   #     audio = r.listen(source)\n\n    try:\n        print(\"Recognizing...\")    \n        value = r.recognize_google(audio, language='en-in')\n        print(f\"User said: {value}\\n\")\n\n    except Exception as e:\n        # print(e)    \n        print(\"Say that again please...\")  \n        return \"None\"\n    return value","d23a4be7":"def sendEmail(to, content):\n    server = smtplib.SMTP('smtp.gmail.com', 587)\n    server.ehlo()\n    server.starttls()\n    server.login('yourgmailid@gmail.com', 'your_password')\n    server.sendmail('yourgmailid@gmail.com', to, content)\n    server.close()","9024bd8a":"def note(text):\n    date = datetime.datetime.now()\n    file_name = str(date).replace(\":\", \"-\") + \"-note.txt\"\n    with open(file_name, \"w\") as f:\n        f.write(text)\n\n    subprocess.Popen([\"notepad.exe\", file_name])","fdd5c96e":"def Find_location(querry):\n    if \"find location\" in querry:           \n        speek(\"what is the location\")\n        location = takeCommand().lower()\n        url = 'https:\/\/google.nl\/maps\/place\/' + location + '\/&amp;'\n        webbrowser.get().open(url)\n        speek(\"Hold on , I will show you the location of \" + location + \" is.\")","ede2a42e":"if __name__ ==\"__main__\":\n    NOTE_STRS = [\"make a note\", \"write this down\", \"remember this\"]\n   # loc = [\"find location\", \"find the location\",\"pointer find the location\",\"get me the location\",\"check location\",\"check the location\"]\n    code = [\"open code\",\"I need to update my code\",\"open visual studio\"]\n    #speek(\"himanshu, is a boy\")\n    wishMe()\n    #querry = takeCommand().lower()\n    #respond(querry)\n    \n    \n    #while True:\n    if 1:\n        \n            querry = takeCommand().lower()\n            print(querry)\n            \n            if \"wikipedia\" in querry:\n                speek(\"Searching Wikipedia... please wait!\")\n                querry = querry.replace(\"wikipedia\",\"\")\n                result = wikipedia.summary(querry, sentences=2)\n                speek(\"According to wikipedia\")\n                print(result)\n                speek(result)\n                \n            elif \"who are you\" in querry:\n                speek(\"hello i am pointer not like a dangling pointer, i am your assistance\")\n            \n            \n            elif \"what\\ 's up\" in querry:\n                speek(\"just doing my thing\")\n                \n            \n            elif \"hey\" in querry or \"hello\" in querry:\n                speek(\"hello sir\")\n                \n            \n            elif \"open youtube\" in querry:\n                speek(\"opening youtube sir\")\n                webbrowser.open(\"youtube.com\")\n                \n            \n            elif \"open google\" in querry:\n                speek(\"opening your dream google sir\")\n                webbrowser.open(\"google.com\")\n                \n            \n            elif 'how are you' in querry: \n                speek(\"I am fine, Thank you\") \n                speek(\"How are you, Sir\")\n                \n            \n            elif \"who i am\" in querry: \n                speek(\"you are my boss himanshu, basically you are from rajasthan\")\n                \n            \n            elif \"who made you\" in querry or \"who created you\" in querry:  \n                speek(\"I have been created by himanshu.\")\n                \n            \n            elif \"what's your name\" in querry or \"What is your name\" in querry: \n                speek(\"My friends call me pointer\")\n                \n            elif \"play music\" in querry:\n                music_dir = \"\"\n                songs = os.listdir(\"your music dir path\")\n                print(songs)\n                os.startfile(os.path.join(music_dir,songs[0]))\n                \n            elif \"the time\" in querry:\n                strTime = datetime.datetime.now().strftime(\"%H:%M:%S\")\n                speek(f\"sir, the time is {strTime}\")\n            \n            \n            elif querry:  \n                Find_location(querry)\n                \n                #speek(\"what is the location\")\n                #location = takeCommand().lower()\n                #url = 'https:\/\/google.nl\/maps\/place\/' + location + '\/&amp;'\n                #webbrowser.get().open(url)\n                #speek(\"Hold on , I will show you the location of \" + location + \" is.\") \n            \n                \n            elif querry:\n                for ide in code:\n                    if ide in querry:\n                        CodePath = \"your IDE path\"\n                        os.startfile(CodePath)\n                        #break\n                        speek(\"opening visual studio code, i know you love coding, but only for few time hahaha\")\n        \n            elif \"email to me\" in querry:\n                try:\n                    speek(\"what should i say!\")\n                    content = takeCommand()\n                    to = \"senderid@gmail.com.\"\n                    sendEmail(to, content)\n                    speek(\"email has been sent\")\n                    \n                except Exception as e:\n                    print(e)\n                    speek(\"sorry my boss. i am not able to send email\")\n                    \n                    \n                    \n                    \n            elif 'open' in querry:\n                reg_ex = re.search('open (.+)', querry)\n                if reg_ex:\n                    domain = reg_ex.group(1)\n                    print(domain)\n                    url = 'https:\/\/www.' + domain\n                    webbrowser.open(url)\n                    speek('The website you have requested has been opened for you Sir.')\n                else:\n                    pass\n                \n                \n            elif 'launch' in querry:\n                reg_ex = re.search('launch (.*)', querry)\n                if reg_ex:\n                    appname = reg_ex.group(1)\n                    appname1 = appname+\".app\"\n                    subprocess.Popen([\"open\", \"-n\", \"\/Applications\/\" + appname1], stdout=subprocess.PIPE)\n                    speek('I have launched the desired application')\n                                \n                    \n            elif 'current weather' in querry:\n                reg_ex = re.search('current weather in (.*)', querry)\n                if reg_ex:\n                     city = reg_ex.group(1)\n                     owm = OWM(API_key='91cfde31bb1956791c4b1ac80abd4784')\n                     obs = owm.weather_at_place('bangalore')\n                     w = obs.get_weather()\n                     k = w.get_status()\n                     x = w.get_temperature(unit='celsius')\n                     speek('Current weather in %s is %s. The maximum temperature is %0.2f and the minimum temperature is %0.2f degree celcius' % (city, k, x['temp_max'], x['temp_min']))\n                    \n                \n                \n            elif 'exit pointer' in querry:\n                 speek('Bye bye Sir. Have a nice day')\n                 sys.exit()\n                 \n            elif \"camera\" in querry:\n                speek(\"opening camera sir\")\n                cap = cv2.VideoCapture(0)\n                cap.set(3,480) \n                cap.set(4,360) \n                while True:\n                \tret,frame = cap.read()\n                    #cv2.imshow('frame', frame)\n                \tplt.show()\n                \tif cv2.waitKey(1) == ord('q'):\n                \t\tbreak\n                \n                cap.release()\n                cv2.destroyAllWindows() \n                \n            elif 'lock window' in querry: \n                    speek(\"locking the device\") \n                    ctypes.windll.user32.LockWorkStation()\n                    \n                \n            elif \"camera\" in querry or \"take a photo\" in querry: \n                ec.capture(0, \"pointer Camera \", \"img.jpg\") \n                \n            elif \"don't listen\" in querry or \"stop listening\" in querry: \n                speek(\"for how much time you want to stop pointer from listening commands\") \n                a = int(takeCommand()) \n                time.sleep(a) \n                print(a)\n                \n                       \n                \n            elif querry:\n                for phrase in NOTE_STRS:\n                    if phrase in querry:\n                        speek(\"What would you like me to write down?\")\n                        note_text = takeCommand().lower()\n                        note(note_text)\n                        speek(\"I've made a note of that.\")\n                        \n            elif 'news' in querry: \n                  \n                try:  \n                    jsonObj = urlopen('''https:\/\/newsapi.org \/ v1 \/ articles?source = the-times-of-india&sortBy = top&apiKey =\\\\times of India Api key\\\\''') \n                    data = json.load(jsonObj) \n                    i = 1\n                      \n                    speek('here are some top news from the times of india') \n                    print('''=============== TIMES OF INDIA ============'''+ '\\n') \n                      \n                    for item in data['articles']: \n                          \n                        print(str(i) + '. ' + item['title'] + '\\n') \n                        print(item['description'] + '\\n') \n                        speek(str(i) + '. ' + item['title'] + '\\n') \n                        i += 1\n                except Exception as e: \n                      \n                    print(str(e)) ","adbed51d":"**takecommand() method it will take voice input from your system microphone. for that recognize_google API will help you**\nwhich will interpret user voice response","e77dc923":"**note whaere you can ask to assistance like pointer open notepad. it will open notepad.**","0ca1a44c":"**Send Email.\nYou can also ask your desktop assistant to send the email.\nHow it works : If you have said the word email in your command then the bot will ask for receipient, If my response is rajat, the bot will use pthons smtplib library. The smtplib module defines an SMTP client session object that can be used to send mail to any Internet machine with an SMTP or ESMTP listener daemon. Sending mail is done with Python\u2019s smtplib using an SMTP server. First it will initaite gmail SMTP using smtplib.SMTP(), then identify the server using ehlo() function, then encypting the session starttls(), then login to your mailbox using login(), then sending the message using sendmail().**","5574d496":"**Now you can call wishMe() method it will show you the time according to hour. so based on condition assistance will wish you **","26cd4f68":"> Import all dependencies********","14c772cf":"if you want to find any location on google map. ask \"find location\" to assistance it will find loaction for you","c3b1c080":"**So our first step is to create the method which will interpret user voice response. what type of voice you want (Male \/Female) you can select below. after that will wi apply some task like time, weather,map, notepad, google search, everything","e50678c3":"**So here in this article, we are going to build a voice-based application which is capable of doing Some Task\n\n**Dependencies and requirements :\nSystem requirements: Python 2.7, Spyder IDE, MacOS Mojave(version 10.14)\nInstall all these python libraries :\npip install SpeechRecognition\npip install beautifulsoup4\npip install webbrowser\npip install youtube-dl\npip install pyowm\npip install wikipedia\n\n**Lot of Dependencies you have to install you can see in code******","a1eeb282":"**This is a small voice assistance which will take input voice command and based on condition it will match command with querry then it provide output **"}}