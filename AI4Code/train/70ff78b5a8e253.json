{"cell_type":{"1d235da5":"code","58cccfb5":"code","28a5d82b":"code","ebe7e89e":"code","587fb1f1":"code","2ae6d909":"code","315c6096":"code","073bcbb4":"code","ff1ec221":"code","d8c84083":"code","6177eead":"code","00b3ad25":"code","584327f5":"code","6665cfbd":"code","bc017dd0":"code","b9dde537":"code","20aa6659":"code","2093154c":"code","04d07631":"code","d3a84281":"code","a6c385db":"code","0907ebcd":"code","020dbd5c":"code","301e8518":"code","e3ea3d54":"code","5a551dfd":"code","911e0df6":"code","6f66a33b":"code","37adcbbe":"code","6d0fead1":"code","6e9440a5":"code","5bb5baf2":"code","c56631af":"code","b5adfa1f":"code","026391b9":"code","52d5948c":"code","147ba421":"code","957acf1c":"code","12abca8f":"code","94be67b2":"code","c19e4604":"code","aebe9e10":"code","4c477481":"code","9fdfb3f6":"code","4c2d4e0a":"code","fe26a8e3":"code","6488f563":"code","0b3d37d6":"code","2a4ca243":"code","bd4b4a04":"code","a58fd59b":"code","5f5b1981":"code","9b149d64":"code","c0a1b5a0":"code","e6626e20":"code","743168ec":"code","9cc68174":"code","a57bd75a":"code","ec0577e7":"code","b566d531":"code","89d2f654":"code","2ba8d9e1":"code","9ca2eebe":"code","089af1a3":"code","d04bc061":"code","5e118096":"code","64ffd87e":"code","853680c9":"code","070bdcea":"code","1c83aad3":"code","7d3e9e78":"code","66d4452a":"code","87af3da2":"code","ca299324":"code","c5f71e8b":"code","be90cf40":"code","9fd9a63e":"code","b96aa283":"code","7c50078d":"code","d6281ee7":"code","5d349b8d":"code","fe320c17":"code","287740c7":"code","c47843bc":"code","5543bfb4":"code","5260e487":"code","38892abc":"code","4e961063":"code","6a401479":"code","f292a629":"markdown","98f466aa":"markdown","357d2f59":"markdown","5c678bae":"markdown","38884bb6":"markdown","99b56828":"markdown","a6dc93ee":"markdown","3ff96efd":"markdown","be986145":"markdown","630c49ed":"markdown","9ede46a2":"markdown","cd82152b":"markdown","fd3ee673":"markdown","9d59643e":"markdown","356b4123":"markdown","0ba1e7de":"markdown","0724e832":"markdown","7a534b40":"markdown","3c4241c7":"markdown","65006915":"markdown","8a1a2694":"markdown","38df2d85":"markdown","b1a44acf":"markdown","a58f0932":"markdown"},"source":{"1d235da5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","58cccfb5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom pandas import plotting\n\n#plotly \nimport plotly.offline as py\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\ninit_notebook_mode(connected=True)\nimport plotly.figure_factory as ff\nimport plotly.express as px\n","28a5d82b":"plt.style.use('seaborn-darkgrid')\n\norange_black = ['#fdc029', '#df861d', 'FF6347', '#aa3d01',\n                '#a30e15', '#800000', '#171820']\n\nplt.rcParams['figure.figsize'] = (10,5) \nplt.rcParams['figure.facecolor'] = '#FFFACD' \nplt.rcParams['axes.facecolor'] = 'FFFFE0' \nplt.rcParams['axes.grid'] = True \nplt.rcParams['grid.color'] = orange_black[3]\nplt.rcParams['grid.linestyle'] = '--' ","ebe7e89e":"df=pd.read_csv('..\/input\/delhi-crime-data\/Delhi Accident Data.csv')\ndf.head()","587fb1f1":"df=df.drop([\"Unnamed: 7\",\"Unnamed: 8\",\"Unnamed: 9\"], axis=1)","2ae6d909":"df.head()","315c6096":"df.info()","073bcbb4":"df.isnull().sum()","ff1ec221":"df['DISTRICT'].value_counts()","d8c84083":"col = \"DISTRICT\"\ngrouped = df[col].value_counts().reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","6177eead":"df.head()","00b3ad25":"df['VICTIM'].value_counts()","584327f5":"cnt=0\nfor i in df['VICTIM'].value_counts():\n    if i <100:\n        cnt=cnt+1\n        \nprint(cnt)\n        ","6665cfbd":"col = \"VICTIM\"\ngrouped = df[col].value_counts().sort_values(ascending=False).head(10).reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\nplt.figure(figsize=(10,10))\n\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","bc017dd0":"df['VICTIM'].value_counts().sort_values(ascending=False).head(10).plot(kind='barh', figsize=(10,10))\nplt.grid(b=True)\nplt.title(\"Victims \")\nplt.show()","b9dde537":"(df['VICTIM'].value_counts().sort_values(ascending=False)\/len(df)*100).head(10).plot(kind='barh', figsize=(10,10))\nplt.grid(b=True)\nplt.title(\" % of Victims \")\nplt.show()","20aa6659":"df=df.rename(columns={\"# INJURED\":\"No of INJURED\"})","2093154c":"df.columns","04d07631":"fig=px.sunburst(df, path=['VICTIM', 'TYPE OF ACCIDENT' , \"DISTRICT\"], values=\"No of INJURED\",\n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","d3a84281":"fig=px.sunburst(df, path=[\"DISTRICT\",'VICTIM',  ], values=\"No of INJURED\",\n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=20, l=20, r=20, b=20))\nfig.show()","a6c385db":"fig=px.sunburst(df, path=[\"DISTRICT\",'VICTIM', 'TYPE OF ACCIDENT' ], values=\"No of INJURED\",\n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=20, l=20, r=20, b=20))\nfig.show()","0907ebcd":"fig=px.sunburst(df, path=[\"DISTRICT\", 'TYPE OF ACCIDENT','VICTIM' ], values=\"No of INJURED\",\n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=20, l=20, r=20, b=20))\nfig.show()","020dbd5c":"fig=px.sunburst(df, path=['VICTIM',\"DISTRICT\", 'TYPE OF ACCIDENT' ], values=\"No of INJURED\",\n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=20, l=20, r=20, b=20))\nfig.show()","301e8518":"df.head()","e3ea3d54":"col = \"VEHICLE AT FAULT\"\ngrouped = df[col].value_counts().reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","5a551dfd":"df['VEHICLE AT FAULT'].value_counts()","911e0df6":"col = \"VEHICLE AT FAULT\"\ngrouped = df[col].value_counts().sort_values(ascending=False).head(10).reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","6f66a33b":"col = \"TYPE OF ACCIDENT\"\ngrouped = df[col].value_counts().reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","37adcbbe":"fig=px.sunburst(df, path=[ 'TYPE OF ACCIDENT' , \"DISTRICT\"],\n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","6d0fead1":"df.head()","6e9440a5":"df.info()","5bb5baf2":"df.info()","c56631af":"df.head()","b5adfa1f":"df.info()","026391b9":"df['YEAR'].value_counts()","52d5948c":"df['# KILLED '].head(50).plot(kind='line')\ndf['No of INJURED'].head(50).plot(kind='line')","147ba421":"col = \"No of INJURED\"\ngrouped = df[col].value_counts().sort_values(ascending=False).head(10).reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","957acf1c":"col = \"# KILLED \"\ngrouped = df[col].value_counts().reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","12abca8f":"col = \"YEAR\"\ngrouped = df[col].value_counts().reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","94be67b2":"df.columns","c19e4604":"fig=px.sunburst(df, path=[ 'TYPE OF ACCIDENT', 'VICTIM'],values='# KILLED ',\n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","aebe9e10":"fig=px.sunburst(df, path=[ 'TYPE OF ACCIDENT', 'VICTIM'],values='No of INJURED', \n                color_discrete_map={'(?)':'black', 'Lunch':'gold', 'Dinner':'darkblue'})\nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","4c477481":"fig=px.sunburst(df, path=[ 'TYPE OF ACCIDENT', 'VICTIM'],values='No of INJURED', \n               color_continuous_midpoint=np.average(df['No of INJURED'], weights=df['# KILLED ']))\nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","9fdfb3f6":"dff=df","4c2d4e0a":"dff.head()","fe26a8e3":"dff.info()","6488f563":"dff['YEAR']=pd.to_datetime(dff['YEAR'])\ndff['year_added']=dff['YEAR'].dt.year\n","0b3d37d6":"dff.head()","2a4ca243":"dff['year_added'].value_counts()","bd4b4a04":"col = \"DISTRICT\"\n\nvc1 = dff[col].value_counts().reset_index()\nvc1 = vc1.rename(columns = {col : \"count\", \"index\" : col})\nvc1['percent'] = vc1['count'].apply(lambda x : 100*x\/sum(vc1['count']))\nvc1 = vc1.sort_values(col)\n\ntrace1 = go.Bar(x=vc1[col], y=vc1[\"count\"], name=\"TV Shows\", marker=dict(color=\"#a678de\"))\ndata = trace1\nlayout = go.Layout(title=\"District Counts\", legend=dict(x=0.1, y=1.1, orientation=\"h\"))\nfig = go.Figure(data, layout=layout)\nfig.show()","a58fd59b":"col = \"VICTIM\"\n\nvc1 = dff[col].value_counts().reset_index()\nvc1 = vc1.rename(columns = {col : \"count\", \"index\" : col})\nvc1['percent'] = vc1['count'].apply(lambda x : 100*x\/sum(vc1['count']))\nvc1 = vc1.sort_values(col)\n\ntrace1 = go.Bar(x=vc1[col], y=vc1[\"count\"], name=\"TV Shows\", marker=dict(color=\"#a678de\"))\ndata = trace1\nlayout = go.Layout(title=\"Victims \", legend=dict(x=0.1, y=1.1, orientation=\"h\"))\nfig = go.Figure(data, layout=layout)\nfig.show()","5f5b1981":"fig=px.histogram(dff, x=\"VICTIM\" , color=\"DISTRICT\")\nfig.show()","9b149d64":"fig=px.histogram(dff, color=\"VICTIM\" , x=\"DISTRICT\")\nfig.show()","c0a1b5a0":"df=pd.read_csv('..\/input\/delhi-crime-data\/Delhi Accident Data.csv')\ndf.head()","e6626e20":"df=df.drop([\"Unnamed: 7\",\"Unnamed: 8\",\"Unnamed: 9\"], axis=1)\n","743168ec":"df.head()","9cc68174":"df['YEAR'].value_counts()","a57bd75a":"x=df[df['YEAR']==2008]","ec0577e7":"x.head()","b566d531":"x['DISTRICT'].value_counts()","89d2f654":"x1=x[x['DISTRICT']==\"NEW DELHI\"]","2ba8d9e1":"x1['VICTIM'].count()\n","9ca2eebe":"x1[\"# INJURED\"].sum()","089af1a3":"x1['# KILLED '].sum()","d04bc061":"x1['TYPE OF ACCIDENT'].count()","5e118096":"fig=px.histogram(x, color=\"VICTIM\" , x=\"DISTRICT\")\n#fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n#fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.update_layout(template=\"plotly_dark\")\nfig.show()","64ffd87e":"sns.countplot(x='VICTIM', hue=\"DISTRICT\", data=x)","853680c9":"fig=px.sunburst(x, path=['DISTRICT', ],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()\nfig=px.sunburst(x, path=['DISTRICT', ],values='# KILLED ')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","070bdcea":"fig=px.sunburst(x, path=[ 'DISTRICT','TYPE OF ACCIDENT','VICTIM' ],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","1c83aad3":"fig=px.sunburst(x, path=[ 'DISTRICT','VEHICLE AT FAULT','VICTIM','TYPE OF ACCIDENT' ],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","7d3e9e78":"fig=px.sunburst(x, path=[ 'TYPE OF ACCIDENT', 'VICTIM', 'DISTRICT'],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","66d4452a":"x=df[df['YEAR']==2009]","87af3da2":"x['DISTRICT'].value_counts()","ca299324":"fig=px.sunburst(x, path=['DISTRICT', ],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()\nfig=px.sunburst(x, path=['DISTRICT', ],values='# KILLED ')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","c5f71e8b":"x=df[df['YEAR']==2010]","be90cf40":"x['DISTRICT'].value_counts()","9fd9a63e":"x['# INJURED'].sum()","b96aa283":"x['# KILLED '].sum()","7c50078d":"fig=px.sunburst(x, path=['DISTRICT', ],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()\nfig=px.sunburst(x, path=['DISTRICT', ],values='# KILLED ')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","d6281ee7":"x=df[df['YEAR']==2011]","5d349b8d":"x['DISTRICT'].value_counts()","fe320c17":"x['# INJURED'].sum()","287740c7":"x['# KILLED '].sum()","c47843bc":"fig=px.sunburst(x, path=['DISTRICT', ],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()\nfig=px.sunburst(x, path=['DISTRICT', ],values='# KILLED ')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","5543bfb4":"x=df[df['YEAR']==2012]","5260e487":"x['DISTRICT'].value_counts()","38892abc":"x['# INJURED'].sum()","4e961063":"x['# KILLED '].sum()","6a401479":"fig=px.sunburst(x, path=['DISTRICT', ],values='# INJURED')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()\nfig=px.sunburst(x, path=['DISTRICT', ],values='# KILLED ')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","f292a629":"# Year 2011","98f466aa":"# VICTIM counts and their types","357d2f59":"# TYPE OF ACCIDENT counts and their contribution","5c678bae":"**Inference**\n* It can beseen that SIMPLE ACCIDENT had occured at more number of times. \n*> SIMPLE ACCIDENT when compared with the different DISTRICT of DELHI , it is observed that SOUTH EAST DELHI observed maximum number of SIMPE ACCIDENT (7532), Next is NEW DELHI (6793), and 3rd one is NORTH DELHI(ROHINI) (6032). Like wise we can see CENTRAL DELhI,SOUTH WEST DELHI etc.\n*> FATAL ACCIDENT compared with DIFFERENT DISTRICT-  IT is seen that the more number of fatal accident is observed at NORTH DELHI(ROHINI) (2770), NEW DELHI(2351), SOUTH EAST DELHI(2166), CENTRA DELHI(2109) , WEST DELHI(2010),etc. These are thr top DISTRICTS which had experienced maximum number of FATAL ACCIDENT. \n*> NON-INJURY compare with DISTRIC-  it can be seen that SOUTH EAST DELHI expreienced maximum NON INJURIES accident (398),NEW DELHI (122) and rest have very few NON-INJURY.   ","38884bb6":"**Inference**\n* From the above figure it can be seen that top 10 victims in road accidents. \n* As it can be seen that number of accidents are much higher in DELHI.\n* The most affected by the accidents are pedestrain , since those who are using pedetrain . were hit mostly 42.1% of the tota victims.\n* The second most affected due to accidents are S\/C & M\/C those are 34.7% of al the victims. \n* 3rd one is those people who have cars. Their percentage is 5.59 %.\n","99b56828":"* It is not working , we use other method of trend analysis","a6dc93ee":"# YEAR 2009","3ff96efd":"# Changing the name of the columns ","be986145":"# Checking the missing values ","630c49ed":"**Inference**\n* First observation is that the accident occuring through out the state has not much variation. \n* As we can see that SOUTH EAST DELHI districs is more prone to road accident as % of accident is highest in this districs (13.3%)\n* 2nd is NEW DELHI with 12.6 % of tota accident (9526).\n* 3rd is NORTH DELHI (ROHINI) \n* Since last 4 state EAST DEHI (7.39%), SHAHDARA(6.4%), SOUTH DELHI(4.91%), NORTH EAST DELHI(4.16%). These districts expreience the less number of accidents compared to the rest of the districs","9ede46a2":"# Conditional distribution of TYPE OF ACCIDENT and DISTRICT","cd82152b":"**Inference**\n* We can see that Maximum accident that ouurs on DElHI's road is SIMPPLE ACCIDENT which is 73.8 % (55,883).Here we can conclude that 74 accident out of 100 are simple and fear of lossing lives after the accident is less.\n* While the %age of FATAL ACCIDENT is 24.4%(18,361) of total accident. It can be concluded that almost 24 people out of every 100 accidents  experience severe injuries which may incude death and life long disabiities. Since the actual number of fatal accident is quite high. \n* Third one is NON_INJURY which is amost 2% of tota accident. AS it can be said only 2 out of every 100, which is very less.\n* Since avoiding 100% accident on the road is not possibe but in case the fatal accident can decrease , the overall casualties can be reduced","fd3ee673":"# Year 2012","9d59643e":"# Dataset detais \n* YEAR- it is showing the year when data was recorded\n* DISTRICT- Districts of Delhi\n* VEHICLE AT FAULT- \n* VICTIM- Those whe were hit\n* TYPE OF ACCIDENT- Accident is fata or not\n* No OF INJURED- Number of injuries during the accident\n* NO OF KILLED- Number of persons were killed after the accidents ","356b4123":"# Sunbrust chart using plotly","0ba1e7de":"# Type of accidenf and Victims","0724e832":"# Visualizing only top 10 ","7a534b40":"# Setting the Year column as INDEX ","3c4241c7":"# Trend Analysis","65006915":"# Vehicle at fault ","8a1a2694":"# Back to original dataset we get that\n","38df2d85":"# Year 2010","b1a44acf":"# Cointing the districs of Delhi","a58f0932":"SInce tge Year column is of integer type, so we have to chnage the year column into the DATETIME type"}}