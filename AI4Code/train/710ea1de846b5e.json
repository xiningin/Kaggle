{"cell_type":{"942367d4":"code","a90c0541":"code","a7920eb4":"code","567adcdf":"code","82c796dd":"code","b94dc698":"code","ce0244de":"code","32ba6b8b":"code","6b66210a":"code","50913407":"code","89165b04":"code","7c4faa2a":"code","e7349d4f":"code","d501eea3":"code","ac0bd871":"code","919ab75b":"code","13e24bef":"code","947c320f":"code","ea5b8b3a":"markdown","8493bbed":"markdown","619b016c":"markdown","41987191":"markdown","c27d8bff":"markdown","afa65033":"markdown","0a8a8ab8":"markdown","c9238610":"markdown","2c313e28":"markdown","bd48ac4d":"markdown","3f39e6b2":"markdown","6ff09f08":"markdown","136df54b":"markdown","75e4c2d3":"markdown","d7313da2":"markdown","498119f9":"markdown","19efef9a":"markdown","92b01dea":"markdown"},"source":{"942367d4":"import pandas as pd\nimport numpy as np\nimport datetime\nimport glob\nimport copy\n\nfrom plotly import subplots\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nimport gc\n\nimport warnings  \nwarnings.filterwarnings('ignore')\ninit_notebook_mode(connected=True)\n\nfrom IPython.core.display import display, HTML, Javascript\n\n\n# define the colour palette to be used\npalette_darkgrey = \"#383C45\"\npalette_silver = \"#A2A5A9\"\npalette_green = \"#4DC000\"\npalette_blue = \"#278BD3\"\npalette_platinum = \"#E3E4E5\"\n\npalette_grey2 = \"#676A6C\"\npalette_grey3 = \"#959894\"\npalette_grey4 = \"#C4C5BB\"\n\n# dictionary to map state names to their abbreviation. Credits @rogerallen on github\nus_state_to_abbrev = {\n    \"Alabama\": \"AL\",\n    \"Alaska\": \"AK\",\n    \"Arizona\": \"AZ\",\n    \"Arkansas\": \"AR\",\n    \"California\": \"CA\",\n    \"Colorado\": \"CO\",\n    \"Connecticut\": \"CT\",\n    \"Delaware\": \"DE\",\n    \"Florida\": \"FL\",\n    \"Georgia\": \"GA\",\n    \"Hawaii\": \"HI\",\n    \"Idaho\": \"ID\",\n    \"Illinois\": \"IL\",\n    \"Indiana\": \"IN\",\n    \"Iowa\": \"IA\",\n    \"Kansas\": \"KS\",\n    \"Kentucky\": \"KY\",\n    \"Louisiana\": \"LA\",\n    \"Maine\": \"ME\",\n    \"Maryland\": \"MD\",\n    \"Massachusetts\": \"MA\",\n    \"Michigan\": \"MI\",\n    \"Minnesota\": \"MN\",\n    \"Mississippi\": \"MS\",\n    \"Missouri\": \"MO\",\n    \"Montana\": \"MT\",\n    \"Nebraska\": \"NE\",\n    \"Nevada\": \"NV\",\n    \"New Hampshire\": \"NH\",\n    \"New Jersey\": \"NJ\",\n    \"New Mexico\": \"NM\",\n    \"New York\": \"NY\",\n    \"North Carolina\": \"NC\",\n    \"North Dakota\": \"ND\",\n    \"Ohio\": \"OH\",\n    \"Oklahoma\": \"OK\",\n    \"Oregon\": \"OR\",\n    \"Pennsylvania\": \"PA\",\n    \"Rhode Island\": \"RI\",\n    \"South Carolina\": \"SC\",\n    \"South Dakota\": \"SD\",\n    \"Tennessee\": \"TN\",\n    \"Texas\": \"TX\",\n    \"Utah\": \"UT\",\n    \"Vermont\": \"VT\",\n    \"Virginia\": \"VA\",\n    \"Washington\": \"WA\",\n    \"West Virginia\": \"WV\",\n    \"Wisconsin\": \"WI\",\n    \"Wyoming\": \"WY\",\n    \"District of Columbia\": \"DC\",\n    \"American Samoa\": \"AS\",\n    \"Guam\": \"GU\",\n    \"Northern Mariana Islands\": \"MP\",\n    \"Puerto Rico\": \"PR\",\n    \"United States Minor Outlying Islands\": \"UM\",\n    \"U.S. Virgin Islands\": \"VI\",\n}\n\n\n'''\nfunction annotation_helper(...)\n\nHelper for annotations in plotly, while reducing the amount of code in the block, it also:\n- Allows us to provide the text into an array of \n  strings(one for each new line) instead of one really long <br> separated text param\n- Provides basic functionality for line spacing(s) between each line\n'''\n\ndef annotation_helper(fig, texts, x, y, line_spacing, align=\"left\", bgcolor=\"rgba(0,0,0,0)\", borderpad=0, ref=\"axes\", width=100):\n    \n    is_line_spacing_list = isinstance(line_spacing, list)\n    total_spacing = 0\n    \n    for index, text in enumerate(texts):\n        if is_line_spacing_list and index!= len(line_spacing):\n            current_line_spacing = line_spacing[index]\n        elif not is_line_spacing_list:\n            current_line_spacing = line_spacing\n        \n        fig.add_annotation(dict(\n            x= x,\n            y= y - total_spacing,\n            width = width,\n            showarrow=False,\n            text= text,\n            bgcolor= bgcolor,\n            align= align,\n            borderpad=4,\n            xref= \"x\" if ref==\"axes\" else \"paper\",\n            yref= \"y\" if ref==\"axes\" else \"paper\"\n        ))\n        \n        total_spacing  += current_line_spacing\n\n# Helper functions to assign the values for high_hispanic_black_pct        \ndef assign_high_hispanic_black_pct(x):\n    pct = x[\"pct_black_hispanic\"]\n    if pct >= 0.4:\n        return True\n    elif pct < 0.4:\n        return False\n    else:\n        return np.NaN\n    \ndef assign_high_hispanic_black_pct_categorical(x):\n    pct = x[\"pct_black\/hispanic\"]\n    if pct in [\"[0.4, 0.6[\", \"[0.6, 0.8[\", \"[0.8, 1[\"]:\n        return True\n    elif pct in  [\"[0, 0.2[\", \"[0.2, 0.4[\"]:\n        return False\n    else:\n        return np.NaN\n","a90c0541":"# concat the district-wise engagement data from all files\n# code excerpt to merge the district-wise data from Ruchi Bhatia - \"\ud83d\ude37COVID-19 Impact on Digital Learning\ud83d\udcbb: EDA + W&B\"\n\npath = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/' \nall_files = glob.glob(path + \"\/*.csv\")\n\nengagement_data = []\n\nfor filename in all_files:\n    district_data = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    district_data[\"district_id\"] = district_id\n    engagement_data.append(district_data)\n\nengagement_df = pd.concat(engagement_data)\nengagement_df[\"district_id\"] = engagement_df[\"district_id\"].astype(int)\n\n# read the district and product info files\ndistricts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\nproducts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\n\nengagement_districts_merged = pd.merge(engagement_df, districts_info,how=\"left\", on=\"district_id\")\nengagement_districts_products_merged = pd.merge(engagement_districts_merged, products_info, how=\"left\", left_on=\"lp_id\", right_on=\"LP ID\")\n\n# dropping all engagement info without a state\nengagement_full = engagement_districts_products_merged[engagement_districts_products_merged[\"state\"].notnull()]\n\n# garbage collection to free up space\ndel engagement_df\ndel engagement_districts_merged\ndel engagement_districts_products_merged\ngc.collect()","a7920eb4":"nces_data = pd.read_csv(\"..\/input\/nces-public-school-characteristics-20182019\/Public_School_Characteristics_2018-19.csv\")\nnces_df = nces_data[ [\"OBJECTID\",\"STABR\",\"NMCNTY\",\"LEAID\",\"TOTFRL\",\"FRELCH\",\"REDLCH\",\"TOTAL\",\"HI\",\"BL\",\"WH\",\"STUTERATIO\",\"CHARTER_TEXT\",\"MAGNET_TEXT\"] ]\n\nnces_df[\"pct_black_hispanic\"] = (nces_df[\"HI\"] + nces_df[\"BL\"]) \/ nces_df[\"TOTAL\"]\nnces_df[\"pct_free_reduced_lunch\"] = nces_df[\"TOTFRL\"] \/ nces_df[\"TOTAL\"]\n\n# nces_df[\"high_pct_black_hispanic\"] = (nces_df[\"pct_black_hispanic\"] >= 0.4) # Previous method that would incorrectly label nulls as False. Redone next\nnces_df[\"high_pct_black_hispanic\"] = nces_df.apply(lambda x: assign_high_hispanic_black_pct(x), axis=1)","567adcdf":"engagement_by_hispanic_black = engagement_full[engagement_full[\"state\"].notnull()].groupby([\"pct_black\/hispanic\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 800,\n    height = 550,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_02_04= engagement_by_hispanic_black[engagement_by_hispanic_black[\"pct_black\/hispanic\"]==\"[0.2, 0.4[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_by_hispanic_black[engagement_by_hispanic_black[\"pct_black\/hispanic\"]==\"[0.4, 0.6[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_by_hispanic_black[engagement_by_hispanic_black[\"pct_black\/hispanic\"]==\"[0.6, 0.8[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\nengagement_08_10= engagement_by_hispanic_black[engagement_by_hispanic_black[\"pct_black\/hispanic\"]==\"[0.8, 1[\"]\nfig.add_trace(go.Scatter(\n                    x= engagement_08_10[\"time\"],\n                    y= engagement_08_10[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_darkgrey, width=1.8),\n                    name='80-100%'))\n\nengagement_00_02= engagement_by_hispanic_black[engagement_by_hispanic_black[\"pct_black\/hispanic\"]==\"[0, 0.2[\"]\n\n\n# draws the filled in learning gap\nfig.add_trace(go.Scatter(\n                    x=engagement_00_02[\"time\"], \n                    y= engagement_00_02[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=\"#ccc\", width=0),\n                    fill=\"tonexty\",                                                                                              \n                    hoverinfo='none', \n))\n\nfig.add_trace(go.Scatter(\n                    x=engagement_00_02[\"time\"], \n                    y= engagement_00_02[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     0-20%'))\n\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_darkgrey),\n    \"<b>Hispanic\/black students <\/b>\",\n    \"8 districts\" \n]\n\nannotation_helper(fig, text, datetime.date(2020, 11, 20), 440, [25,30], width=200)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>Hispanic\/black <\/b>\" % (palette_green),\n    \"116 districts\" \n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 150, [25,30])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n]\n\nannotation_helper(fig, text, datetime.date(2020, 11, 5), 175, [25,30], width=50, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>average engagement index<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 3, 15), 520, [35], width=200)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Did districts with students of color engage less?<\/span>\", \n    \"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'> Districts with more hispanic\/black students<\/b> seem to engage more, contrary to our expectation. <\/span>\" % (palette_darkgrey) ,\n    \"<span style='font-size:13px; font-family:Helvetica'> This result could skewed due to a smaller sample size in these districts,ie 8 compared to the 116 <\/span>\",\n    \"<span style='font-size:13px; font-family:Helvetica'> in <b style='color:%s'>white-dominated school districts<\/b>. <\/span>\" % (palette_green)\n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=600)\n\nfig.show()","82c796dd":"engagement_grouped = engagement_full.groupby([\"district_id\",\"time\"])[\"engagement_index\"].mean().reset_index()\nengagement_rolling = engagement_grouped.groupby(\"district_id\")[\"engagement_index\"].rolling(14).mean().reset_index()\n\nengagement_grouped = engagement_grouped.join(engagement_rolling[\"engagement_index\"], rsuffix=\"_rolling\")\nengagement_by_district = pd.merge(engagement_grouped, districts_info,how=\"left\", on=\"district_id\")\n\ndistricts = districts_info[districts_info[\"state\"].notnull()][\"district_id\"].unique()\n\nfig = subplots.make_subplots(\n    rows=1, \n    cols=2, \n    horizontal_spacing = 0.1, \n    shared_yaxes=True\n)\n\nfor district_id in districts:\n    \n    district_df = engagement_by_district[engagement_by_district[\"district_id\"]== district_id]\n    \n    state = district_df[\"state\"].iloc[0]\n    \n    color = \"#bbb\";\n    opacity = 0.6;\n    \n    engagement = district_df[\"engagement_index\"].rolling(moving_average_window).mean()\n    \n    if not district_df[\"state\"].isnull().values.any():\n        trace = go.Scatter(\n            x= district_df[\"time\"],\n            y= engagement,\n            mode='lines', \n            opacity= opacity,\n            line= dict(color=color, width=1),\n            customdata = district_df[[\"state\",\"district_id\"]].join(engagement),\n            hovertemplate = '<b>%{customdata[0]}<\/b><br>district id: %{customdata[1]}<br>Avg. engagement: %{customdata[2]:.0f}',\n            name= \"\"\n        )\n        \n    if state==\"New York\" or state==\"Arizona\":\n        \n        trace_highlighted = go.Scatter(\n            x= district_df[\"time\"],\n            y= engagement,\n            mode='lines', \n            opacity= 1,\n            line= dict(color=palette_darkgrey, width=1.3),\n            customdata = district_df[[\"state\",\"district_id\"]].join(engagement),\n            hovertemplate = '<b>%{customdata[0]}<\/b><br>district id: %{customdata[1]}<br>Avg. engagement: %{customdata[2]:.0f}',\n            name= \"\"\n        )\n        \n        if state == \"New York\":\n            fig.append_trace(trace_highlighted,1,1);\n            fig.append_trace(trace,1,2);\n        else:\n            fig.append_trace(trace,1,1);\n            fig.append_trace(trace_highlighted,1,2);\n        \n    else:    \n        fig.append_trace(trace,1,1);\n        fig.append_trace(trace,1,2);\n\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Engagement outliers<\/span>\"\nsmall_title_format = \"<span style='font-size:14px; font-family:Helvetica'>Average engagement index of each district, highlighting those in NY (left) <br>and AZ (right) with <b>higher share of black and hispanic students<\/b>.\"\n\n\nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    showlegend = False,\n    margin = dict(t=160,pad=0),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M3\",tickformat=\"%b\\n%Y\"),\n    xaxis2 = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M3\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    yaxis2 = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    plot_bgcolor='#fff',\n    height = 400,\n    width = 700\n)\n\n# New York has a hispanic\/black dominant district which performs abnormally better than all other districts\ntext = [\n    \"<span style='font-family:Tahoma; font-size:12px'><b>Hispanic\/black district <\/b> <\/span>\",\n    \"<span style='font-family:Tahoma; font-size:12px'>in New York that performs <\/span>\",\n    \"<span style='font-family:Tahoma; font-size:12px'><b>unusally better<\/b> <\/span>\",\n]\n\nannotation_helper(fig, text, 0.17, 1., [0.075,0.075], width=250, ref=\"paper\")\nfig.add_shape(\n    type=\"line\",xref=\"paper\", yref=\"paper\",\n    x0=0.17, x1=0.122,\n    y0=0.91, y1=0.91,\n    line=dict( color= palette_grey2, width=1),\n)\n\n\n# Arizona has only 1 district which has a massive peak in August\ntext = [\n    \"<span style='font-family:Tahoma; font-size:12px'><b>Arizona<\/b> has only one<\/span>\",\n    \"<span style='font-family:Tahoma; font-size:12px'>district, which has a <\/span>\",\n    \"<span style='font-family:Tahoma; font-size:12px'><b>sudden growth<\/b> in August <\/span>\",\n]\n\nannotation_helper(fig, text, 1.2, 1.02, [0.075,0.075], width=250, ref=\"paper\")\nfig.add_shape(\n    type=\"line\",xref=\"paper\", yref=\"paper\",\n    x0=0.842, x1=0.842,\n    y0=0.755, y1=0.505,\n    line=dict( color= palette_grey2, width=1),\n)\n\nfig['layout'].update(layout)\niplot(fig)","b94dc698":"states = [\"Illinois\", \"California\", \"Connecticut\", \"Virginia\", \"Massachusetts\", \"Ohio\"]\n\nstate_counts = {\n    \"Illinois\": {\"higher\": 5, \"lower\": 13},\n    \"California\": {\"higher\": 6, \"lower\": 6},\n    \"Connecticut\": {\"higher\": 5, \"lower\": 25},\n    \"Virginia\": {\"higher\": 1, \"lower\": 3},\n    \"Massachusetts\": {\"higher\": 1, \"lower\": 20},\n    \"Ohio\": {\"higher\": 1, \"lower\": 10},\n}\n\n\nweeks_window_size = 3\n\nfig = subplots.make_subplots(\n    rows=3, \n    cols=2, \n    horizontal_spacing = 0.075, \n    vertical_spacing = 0.18, \n    shared_yaxes = True,\n    subplot_titles = [\"  \"]*6,\n )\n\n\nfor index, state in enumerate(states):\n    \n    state_df = engagement_full[engagement_full[\"state\"] == state]\n    \n    state_df[\"high_pct_black_hispanic\"] = state_df.apply(lambda x: assign_high_hispanic_black_pct_categorical(x), axis=1)\n    state_df[\"time\"] = pd.to_datetime(state_df[\"time\"])\n    \n    color = \"#bbb\";\n    opacity = 0.6;\n    \n    low_pct_black_hispanic = state_df[state_df[\"high_pct_black_hispanic\"]== False].resample('W', on='time')['time','engagement_index'].mean()\n    trace2 = go.Scatter(\n                    x= low_pct_black_hispanic.index, \n                    y= low_pct_black_hispanic[\"engagement_index\"].rolling(weeks_window_size, center=True).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=1.7),\n                    name='Low blk\/hisp',\n                    showlegend= False\n    )\n    \n    trace_learning_gap = go.Scatter(\n                    x= low_pct_black_hispanic.index,\n                    y= low_pct_black_hispanic[\"engagement_index\"].rolling(weeks_window_size, center=True).mean(),\n                    mode='lines',\n                    line= dict(color= palette_grey3, width=0),\n                    fill=\"tonexty\", \n#                     name='learning gap',\n                    showlegend= False,\n                    hoverinfo= \"none\"\n    )\n    \n    high_pct_black_hispanic = state_df[state_df[\"high_pct_black_hispanic\"]==True].resample('W', on='time')['time','engagement_index'].mean()\n    trace1 = go.Scatter(\n                    x= high_pct_black_hispanic.index, \n                    y= high_pct_black_hispanic[\"engagement_index\"].rolling(weeks_window_size, center=True).mean(),\n                    mode='lines',\n                    line= dict(color=palette_darkgrey, width=1.5),\n                    name='High blk\/hisp',\n                    showlegend= False\n    )\n        \n    fig.append_trace(trace1, index\/\/2  + 1, index % 2 + 1);\n    fig.append_trace(trace_learning_gap, index\/\/2  + 1, index % 2 + 1);\n    fig.append_trace(trace2, index\/\/2  + 1, index % 2 + 1);\n    \n\nfig.add_trace(go.Bar(x=[low_pct_black_hispanic.index[0]], y=[low_pct_black_hispanic], marker=dict(color=\"#ccc\"), name=\"Learning Gap\", visible=\"legendonly\"))\nfig.add_trace(go.Bar(x=[low_pct_black_hispanic.index[0]], y=[low_pct_black_hispanic], marker=dict(color=palette_green), name=\"< 40% students are black\/hispanic\", visible=\"legendonly\"))\nfig.add_trace(go.Bar(x=[low_pct_black_hispanic.index[0]], y=[low_pct_black_hispanic], marker=dict(color=\"#000\"), name=\">= 40% students are black\/hispanic\", visible=\"legendonly\"), 1, 1)\n\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>State-wise engagement trends<\/span>\"\nsmall_title_format = \"<span style='font-size:14px; font-family:Helvetica'> We see that most states show a marked learning gap with <b style='color:%s'>white-dominated districts<\/b> leading the pack<\/span>\" % (palette_green)\n\nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    legend = dict(\n        orientation=\"h\",\n        traceorder=\"reversed\",\n        yanchor=\"top\",\n        y=1.250,\n        font=dict(family=\"Helvetica\", size=14, color=\"rgba(0,0,0,100)\"),\n        bgcolor = 'rgba(255,255,255,100)',\n        xanchor=\"left\",\n        x=0.4,\n    ),\n\n    margin = dict(t=350, b=100, pad=0),\n    \n    xaxis  = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M2\",tickformat=\"%b\\n%Y\"),\n    xaxis2 = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M2\",tickformat=\"%b\\n%Y\"),\n    xaxis3 = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M2\",tickformat=\"%b\\n%Y\"),\n    xaxis4 = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M2\",tickformat=\"%b\\n%Y\"),\n    xaxis5 = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M2\",tickformat=\"%b\\n%Y\"),\n    xaxis6 = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M2\",tickformat=\"%b\\n%Y\"),\n    \n    yaxis1 = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey, range=[0,410]),\n    yaxis2 = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey, range=[0,410]),\n    yaxis3 = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey, range=[0,410]),\n    yaxis4 = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey, range=[0,410]),\n    yaxis5 = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey, range=[0,410]),\n    yaxis6 = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey, range=[0,410]),\n    \n    hovermode = \"x unified\",\n\n    plot_bgcolor='#fff',\n    height= 1000,\n    width = 750\n)\n\nfor index, annotation in enumerate(states):\n    state = states[index]\n    text = [\n        \"<span style='font-size:15px; font-family: Helvetica; font-weight: 600'>\" + state + \"<\/span>\",\n        \"<span style='font-size:11px; font-style: italic'>(n_lower=\" + str(state_counts[state][\"lower\"]) + \", n_higher=\" + str(state_counts[state][\"higher\"]) + \")<\/span>\"\n    ]\n\n    x = [0.01, 0.9][index % 2]\n    y = [1.065, 0.665, 0.24][index\/\/ 2]\n    \n    annotation_helper(fig, text, x, y, [0.03], width=200, ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:12px; font-family: Tahoma;'>Where <b>n_higher<\/b> = num. districts with more than 40%, <\/span>\",\n    \"<span style='font-size:12px; font-family: Tahoma;'>           <b>n_lower<\/b> = num. districts with less than 40% hispanic\/black students <\/span>\"\n]\n\nannotation_helper(fig, text, 0.00, -0.125, [0.025], width=400, ref=\"paper\")\n\n\nfig['layout'].update(layout)\niplot(fig)","ce0244de":"engagement_by_hispanic_black = engagement_full[(engagement_full[\"state\"].notnull()) & (engagement_full[\"pct_black\/hispanic\"].notnull())]\nengagement_by_hispanic_black[\"high_pct_black_hispanic\"] = engagement_by_hispanic_black[\"pct_black\/hispanic\"].isin([\"[0.4, 0.6[\", \"[0.6, 0.8[\", \"[0.8, 1[\"])\n\nengagement_by_hispanic_black = engagement_by_hispanic_black.groupby([\"high_pct_black_hispanic\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey, range=[0,255]),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 800,\n    height = 550,\n    plot_bgcolor= \"#fff\",\n    hoverlabel = dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_08_10= engagement_by_hispanic_black[engagement_by_hispanic_black[\"high_pct_black_hispanic\"]== True ]\nfig.add_trace(go.Scatter(\n                    x= engagement_08_10[\"time\"],\n                    y= engagement_08_10[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_darkgrey, width=1.5),\n                    name='80-100%'))\n\n# draws the filled in learning gap\nengagement_00_02= engagement_by_hispanic_black[engagement_by_hispanic_black[\"high_pct_black_hispanic\"]== False ]\nfig.add_trace(go.Scatter(\n                    x=engagement_00_02[\"time\"], \n                    y= engagement_00_02[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=\"#ccc\", width=0),\n                    fill=\"tonexty\",                                                                                              \n                    hoverinfo='none', \n))\n\nfig.add_trace(go.Scatter(\n                    x=engagement_00_02[\"time\"], \n                    y= engagement_00_02[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=2),\n                    name='     0-20%'))\n\n\ntext = [\n    \"<span style='font-family:Tahoma; font-size:12px'>Districts with<\/span>\",\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-100%%<\/b>\" % (palette_darkgrey),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>Hispanic\/black <\/b>\" % (palette_darkgrey),\n    \"<span style='font-family:Tahoma; font-size:11px'>show lower engagement<\/span>\",\n    \"<span style='font-family:Tahoma; font-size:11px'>for most of the year.<\/span>\" \n]\nannotation_helper(fig, text, datetime.date(2020, 10, 28), 100, [11,9,12,11], align=\"right\", width=200)\n\n\ntext = [\n    \"<span style='font-family:Tahoma; font-size:12px'>Districts with<\/span>\",\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-40%%<\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>Hispanic\/black<\/b>\" % (palette_green),\n    \"<span style='font-family:Tahoma; font-size:11px'>Perform better on average.<\/span>\" \n]\nannotation_helper(fig, text, datetime.date(2020, 7, 15), 200, [11,9,12], width=150)\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>average engagement index<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day average<\/span>\" % palette_grey2,\n]\nannotation_helper(fig, text, datetime.date(2020, 3, 5), 255, [10], width=200)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Alternate grouping of Black\/Hispanic percent<\/span>\", \n    \"<span style='font-size:13px; font-family:Helvetica'> When grouping the race data as mentioned earlier, we see how <b style='color:%s'>white-dominated<\/b><\/span>\" % (palette_green) ,\n    \"<span style='font-size:13px; font-family:Helvetica'> <b style='color:%s'>districts<\/b> have higher engagement values when compared with <b style='color:%s'>black\/hispanic<\/b><\/span>\" % (palette_green, palette_darkgrey), \n    \"<span style='font-size:13px; font-family:Helvetica'> <b style='color:%s'>majority school districts<\/b>.<\/span>\" % (palette_darkgrey) \n]\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=600)\n\nfig.show()","32ba6b8b":"counts = districts_info[districts_info[\"locale\"].notnull()].groupby([\"locale\",\"pct_black\/hispanic\"])[\"pct_black\/hispanic\"].count()\n\nx_labels = counts[\"City\"].keys().tolist()\ntotals = {}\n\nfor group in x_labels:\n    totals[group] = districts_info[districts_info[\"pct_black\/hispanic\"] == group][\"district_id\"].count()\n\nlocales = [\"Rural\", \"Town\", \"Suburb\", \"City\"]\n\n\nfig = go.Figure()\n\nfor index,locale in enumerate(locales):\n    y = counts[locale].astype(\"float\")\n    bar_widths = []\n    color = [palette_grey2, palette_grey3, palette_platinum, palette_green][3 - index]\n    \n    for key in y.keys():\n        y[key] = (y[key] \/ totals[key])       \n        bar_widths.append(0.5  * ( totals[key] \/ np.sum(list(totals.values())) ) )\n    \n    trace = go.Bar(\n        name= locale, \n        x= np.cumsum(bar_widths)-np.array(bar_widths)\/2, \n        y= y, \n        width=bar_widths,\n        marker_color= color,\n        marker_line_color = \"#fefefe\",\n        marker_line_width = 1.5,\n        hoverinfo = \"none\",\n#         offset=0\n    )\n    fig.add_trace(trace)\n\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Makeup of each diversity group<\/span>\"\nsmall_title_format = \"<span style='font-size:14px; font-family:Helvetica'>Data on districts with higher hispanic or black populations include <b>almost no <b style='color:%s'>town<\/b> or <b style='color:%s'>rural<\/b> locales<\/b><\/span>\" % (palette_grey4, palette_green)\n\nlabels = [\n    \"<span style='font-family:Tahoma'><b style='font-size:13px;'> 0-20% Hispanic\/Black students<\/b> <br><span style='font-size:11px;'> 116 districts <\/span> <\/span>\",\n    \"<span style='font-family:Tahoma'><b style='font-size:12px;'>20-40<\/b> <br><span style='font-size:11px;'>24 districts <\/span> <\/span>\",\n    \"<span style='font-family:Tahoma'><b style='font-size:12px;'>40-60<\/b> <br><span style='font-size:11px;'>17 <\/span> <\/span>\",\n    \"<span style='font-family:Tahoma'><b style='font-size:12px;'>60-80<\/b> <br><span style='font-size:11px;'>11 <\/span> <\/span>\",\n    \"<span style='font-family:Tahoma'><b style='font-size:12px;'>        80-100<\/b> <br><span style='font-size:11px;'>8 <\/span> <\/span>\",\n] \n\nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=200, b=0, pad=0),\n    \n    legend = dict(\n        orientation=\"h\",\n        traceorder=\"reversed\",\n        yanchor=\"top\",\n        y=1.13,\n        font=dict(family=\"Helvetica\", size=14, color=\"rgba(0,0,0,100)\"),\n        xanchor=\"left\",\n        x=-0.01\n    ),\n    xaxis = dict(tickvals = np.cumsum(bar_widths)- np.array(bar_widths)\/2, side=\"top\", tickangle=0, ticktext=labels),\n    yaxis = dict( dtick=0.2, tickformat=\"% \", tickfont = dict(size=11), ticks=\"outside\"),\n    barmode='stack',\n\n    plot_bgcolor='#fff',\n    height= 750,\n    width = 800\n)\n\n# High black\/hispanic districts have a smaller sample size from city and suburban areas only.\n\ntext = [\n    \"<span style='font-size:12px; font-family: Tahoma;'> High hispanic\/black population <\/span>\",\n    \"<span style='font-size:12px; font-family: Tahoma;'> districts have <b>smaller sample<\/b>  <\/span>\",\n    \"<span style='font-size:12px; font-family: Tahoma;'> <b>sizes<\/b>, while only coming from  <\/span>\",\n    \"<span style='font-size:12px; font-family: Tahoma;'> <b style='color: %s'>city<\/b> and <b style='color: %s'>suburban<\/b> locales<\/span>\" % (palette_darkgrey, palette_grey3),\n]\n\nannotation_helper(fig, text, 0.424, 0.96, [0.036, 0.036, 0.036], bgcolor=\"#fefefe\", width=170)\n\n# Locale distribution of each diversity group\ntext = [\n    \"<span style='font-size:11px; font-family: Tahoma; color: #444;'> Distribution of<\/span>\",\n    \"<span style='font-size:11px; font-family: Tahoma; color: #444;'> each diversity<\/span>\",\n    \"<span style='font-size:11px; font-family: Tahoma; color: #444;'> group by locale<\/span>\"\n]\n\nannotation_helper(fig, text, -0.155, 0.935, [0.0243, 0.0243], align=\"right\", width=90, ref=\"paper\")\n\n# bar widths indicate proportion of districts in each group compared to the total\ntext = [\n    \"<span style='font-size:11px; font-family: Tahoma; color: #444;'> <b>Bar width indicates number of districts<\/b> in each group compared to the total<\/span>\",\n]\n\nannotation_helper(fig, text, 0.002, 0.988, [0.0243], width=450, ref=\"paper\")\n\n# Change the bar mode\nfig.update_layout(layout)\nfig.show()\n","6b66210a":"district_spending_df = districts_info[[\"state\",\"pp_total_raw\", \"pct_black\/hispanic\"]]\n\n# take the average of upper and lower bounds of pp_total_raw\ndistrict_spending_df[\"pp_total_raw_mean\"] = district_spending_df[\"pp_total_raw\"].str.replace(\"[\",\"\").str.split(\",\").str[0].astype(float) + districts_info[\"pp_total_raw\"].str.replace(\"[\",\"\").str.split(\",\").str[1].astype(float)\ndistrict_spending_df[\"pp_total_raw_mean\"] = district_spending_df[\"pp_total_raw_mean\"] \/ 2\n\n\n# create a field to indicate higher black\/hispanic population group\ndistrict_spending_df[\"high_pct_black_hispanic\"] = district_spending_df.apply(lambda x: assign_high_hispanic_black_pct_categorical(x), axis=1)\n\nspending_by_pct_black_hisp = district_spending_df.groupby([\"state\",\"high_pct_black_hispanic\"])[\"pp_total_raw_mean\"].mean()\n\n\n# Chart start\nfig = go.Figure()\n\nspending_by_pct_black_hisp_high = spending_by_pct_black_hisp[(spending_by_pct_black_hisp.index.get_level_values(\"high_pct_black_hispanic\") == True) & (spending_by_pct_black_hisp.notnull())]\nspending_by_pct_black_hisp_low = spending_by_pct_black_hisp[(spending_by_pct_black_hisp.index.get_level_values(\"high_pct_black_hispanic\") == False) & (spending_by_pct_black_hisp.notnull())]\n\nfor state in spending_by_pct_black_hisp.index.get_level_values(\"state\").append(spending_by_pct_black_hisp.index.get_level_values(\"state\")).unique():\n    \n    state_spending = spending_by_pct_black_hisp[spending_by_pct_black_hisp.index.get_level_values(\"state\") == state]\n    state_spending_high = spending_by_pct_black_hisp_high[spending_by_pct_black_hisp_high.index.get_level_values(\"state\") == state]\n    state_spending_low = spending_by_pct_black_hisp_low[spending_by_pct_black_hisp_low.index.get_level_values(\"state\") == state]\n    \n    if state_spending.isnull().sum() == 0 and state_spending.shape[0]==2:     \n\n        fig.add_shape(\n            type = 'line',\n            x0 = state_spending_high.values[0],\n            y0 = state,\n            x1 = state_spending_low.values[0],\n            y1 = state,\n            line = dict(color= palette_silver , width = 5)\n        )\n    \n\nstates_with_low_and_high_spendings = spending_by_pct_black_hisp_high.index.get_level_values(\"state\").intersection(spending_by_pct_black_hisp_low.index.get_level_values(\"state\"))\n\nfig.add_trace(go.Scatter(\n    x = spending_by_pct_black_hisp_high[spending_by_pct_black_hisp_high.index.get_level_values(\"state\").isin(states_with_low_and_high_spendings)].values, \n    y = states_with_low_and_high_spendings,\n    mode = 'markers',\n    marker_color = palette_darkgrey,\n    marker_size = 14,\n#     marker_line = dict(width=5, color=\"#fff\"),\n    name = 'more than 40%'\n    ))\n\nfig.add_trace(go.Scatter(\n    x = spending_by_pct_black_hisp_low[spending_by_pct_black_hisp_low.index.get_level_values(\"state\").isin(states_with_low_and_high_spendings)].values, \n    y = states_with_low_and_high_spendings,\n    mode = 'markers',\n    marker_color = palette_green,\n    marker_size = 9,\n#     marker_line = dict(width=1, color=\"#fff\"),\n    name = 'less than 40%'\n))\n\ntext = [\n    \"<span style='font-size:11px; font-family: Tahoma;'>   USD spent per <\/span>\",\n    \"<span style='font-size:11px; font-family: Tahoma;'>student, on average  <\/span>\"\n]\n\nannotation_helper(fig, text, -0.02, -0.115, [0.065], width=450, ref=\"paper\")\n   \nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>The gap in spending on students<\/span>\"\nsmall_title_format = \"<span style='font-size:14px; font-family:Helvetica'> We look at how the average per pupil expenditure varies between the <br> <b style='color: %s'>high<\/b> and <b style='color: %s'>low<\/b> black or hispanic populations in each state.<\/span>\" % (palette_darkgrey, palette_green)\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=110, b=40, pad=0),\n    \n    legend = dict(\n        title=\"Spending where percentage of <br>black or hispanic students:\",\n        yanchor=\"top\",\n        y=0.92,\n        xanchor=\"left\",\n        x=0.1,\n        bgcolor=\"rgba(0,0,0,0)\",\n        font=dict(size=11),\n        itemsizing=\"constant\"\n    ),\n    \n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_grey2, range=[0,18000], dtick=4000, tickformat=\"r\", ticks=\"outside\"),\n    yaxis= dict(\n        side=\"right\",\n        showline=False, \n        showgrid=True, \n        gridwidth=1, \n        gridcolor='#ddd', \n        linecolor=palette_darkgrey,\n        categoryorder = 'array', \n        categoryarray = [\"Indiana\", \"North Carolina\", \"Virginia\", \"Illinois\", \"Washington\", \"Massachusetts\"]\n    ),\n\n    plot_bgcolor='#fff',\n    height= 400,\n    width = 650\n)\n        \nfig.update_layout(layout)\nfig.show()","50913407":"'''\n#Plotly version of above table\n\ntrace1 = go.Table(\n            columnwidth = [1,2.2],\n            header = dict(values=[ 'Free or Reduced-Price <br>Lunch (FRPL) %', '<br>Category',],                        \n                        line_color= palette_grey2,\n                        fill_color= palette_darkgrey,\n                        font_color= \"white\",\n                        font_size = 12,\n                        height = 30,\n                        align='left'),\n            cells = dict(\n                values=[\n                            [\"    0-25%\", \"  25-50%\", \"  50-75%\", \" 75-100%\"],\n                            [\"Low-poverty school\", \"Mid-low poverty school\", \"Mid-high poverty school\", \"High-poverty school\"], \n                ], \n            line_color='darkslategray',\n            line_width=0.5,\n            fill_color='white',\n            font_size = 13,\n            height = 28,\n            align=['left','left'])\n        )\n\n\nlayout = dict(\n            margin = dict(t=0,b=0,l=100,r=10),\n            width = 600,\n            height= 160\n        )\n\nfig = go.Figure()\nfig.add_trace(trace1)\n\nfig['layout'].update(layout)\niplot(fig)\n''';\n","89165b04":"nces_minority_frl = nces_df[(nces_df[\"pct_black_hispanic\"]>0) & (nces_df[\"pct_free_reduced_lunch\"]>0)].groupby(\"STABR\")[\"pct_black_hispanic\",\"pct_free_reduced_lunch\"].mean().reset_index()\n\n# Using plotly express for trendline feature\nfig = px.scatter(\n    nces_minority_frl, \n    x='pct_black_hispanic', \n    y='pct_free_reduced_lunch', \n    hover_name=\"STABR\",\n    hover_data=[\"pct_black_hispanic\", \"pct_free_reduced_lunch\"],\n    opacity=0.4, \n    trendline='ols', \n    trendline_color_override= palette_grey2,\n    labels={\n             \"pct_free_reduced_lunch\": \"Percent free or reduced lunch\",\n             \"pct_black_hispanic\": \"Percent of black\/hispanic students\",\n    },\n)\n\nfig.update_traces(marker = dict( color = palette_grey3, size = 12, opacity=0.5, line_width=1.5, line_color= palette_grey2 ), line_dash=\"dash\", line_width=1, showlegend=False)\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Students of color and district poverty levels<\/span>\"\nsmall_title_format = \"<span style='font-size:15px; font-family:Helvetica'>As the percentage of black or hispanic students rises, we see a trend of <br>larger share of students eligible for the free\/reduced lunch program.  <\/span>\"\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=110, b=0),\n    \n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_grey2, range=[0,1], dtick=0.25, tickformat=\"%\" ),\n    yaxis= dict(\n        showline=True, linewidth=1, linecolor=palette_grey2,\n        showgrid=True, \n        gridwidth=1, \n        gridcolor='#ddd', \n        dtick=0.25,\n        tickformat=\"%\",\n        range=[0,1.05]\n    ),\n\n    plot_bgcolor='#fff',\n    height= 550,\n    width = 600\n)\n\nfig.update_layout(layout)\nfig.show()","7c4faa2a":"nces_minority_teacher_ratio = nces_df[(nces_df[\"pct_free_reduced_lunch\"]>0) & (nces_df[\"STUTERATIO\"]>0) & (nces_df[\"pct_black_hispanic\"].notnull())].groupby([\"NMCNTY\",\"STABR\"])[\"pct_free_reduced_lunch\",\"STUTERATIO\",\"pct_black_hispanic\",\"TOTAL\"].mean().reset_index()\n\nfig = go.Figure()\n    \ntrace = go.Scatter(\n    x = nces_minority_teacher_ratio['STUTERATIO'], \n    y = nces_minority_teacher_ratio['pct_free_reduced_lunch'],\n    customdata = nces_minority_teacher_ratio[[\"NMCNTY\",\"STABR\",\"TOTAL\"]],\n    hovertemplate = '<b>%{customdata[0]}<\/b><br>%{customdata[1]}<br>average number of students: %{customdata[2]:.0f}',\n    name=\"\",\n    mode = \"markers\",\n    marker = dict( \n        color = [ palette_darkgrey if pct > 0.4 else palette_green for pct in nces_minority_teacher_ratio[\"pct_black_hispanic\"]], \n        size = nces_minority_teacher_ratio['TOTAL'] \/\/ 27, \n        line_color = \"#ddd\",\n        opacity= 0.6\n    ),\n)\n    \nfig.add_trace(trace)\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Student-teacher ratios and poverty levels <\/span>\"\nsmall_title_format = \"<span style='font-size:15px; font-family:Helvetica'> At the county level, <b style='color:%s; font-size:16px'>white majority districts<\/b> and <b 'color:%s; font-size:16px'>black\/hispanic districts<\/b> show <br>similar student teacher ratio values. Circle radius indicates the average number of students.<\/span>\" % (palette_green, palette_darkgrey)\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=110, b=0),\n    \n    xaxis = dict(\n        title=\"Student teacher ratio\",\n        showline=True, \n        linewidth=1, \n        linecolor=palette_grey2,\n        dtick= 5,\n        range=[0,40]\n        ),\n    yaxis = dict(\n#         title=\"Percent Free or Reduced Lunch\",\n        showline=True, linewidth=1, linecolor=palette_grey2,\n        showgrid=True, \n        gridwidth=1, \n        gridcolor='#ddd', \n        dtick=0.25,\n        tickformat=\"%\",\n        range=[0,1.05]\n    ),\n\n    plot_bgcolor='#fff',\n    height= 600,\n    width = 700\n)\n\nfig.add_shape(\n    type=\"line\",\n    x0=15.32, y0=0, x1=15.32, y1=1,\n    line=dict(\n        color= palette_darkgrey,\n        width=2,\n    )\n)\n\ntext = [\n    \"<span style='font-size:12px; font-family: Helvetica; color: #222; font-weight: 600; '>15.32<\/span>\",\n    \"<span style='font-size:11px; font-family: Helvetica; color: #444;'>average student<\/span>\",\n    \"<span style='font-size:11px; font-family: Helvetica; color: #444;'>to teacher ratio<\/span>\"\n]\nannotation_helper(fig, text, 18.95, 0.08, [0.027, 0.026], align=\"left\", width=90)\n\ntext = [\n    \"<span style='font-size:12px; font-family: Helvetica; color: #444;'>Percent eligible for<\/span>\",\n    \"<span style='font-size:12px; font-family: Helvetica; color: #444;'>free or reduced<\/span>\",\n    \"<span style='font-size:12px; font-family: Helvetica; color: #444;'>lunch program<\/span>\"\n]\nannotation_helper(fig, text, -0.0045, 0.92, [0.027, 0.026], align=\"left\", width=100, ref=\"paper\")\n\nfig.update_layout(layout)\nfig.show()","e7349d4f":"'''\n# uncomment to display data for following table\nstats_df = nces_df[(nces_df[\"pct_free_reduced_lunch\"]>0) & (nces_df[\"STUTERATIO\"]>0) & (nces_df[\"pct_black_hispanic\"].notnull()) ].groupby([\"high_pct_black_hispanic\",\"NMCNTY\",\"STABR\"])[\"pct_free_reduced_lunch\",\"STUTERATIO\",\"pct_black_hispanic\",\"TOTAL\"].mean().reset_index()\n\nprint(nces_minority_teacher_ratio.mean())\ndisplay(stats_df[stats_df[\"high_pct_black_hispanic\"] == False].describe())\ndisplay(stats_df[stats_df[\"high_pct_black_hispanic\"] == True].describe())\n\n# The number of counties above and below national average\navg_str = stats_df[\"STUTERATIO\"].mean()\ndisplay((stats_df[stats_df[\"high_pct_black_hispanic\"] == False][\"STUTERATIO\"] < avg_str).value_counts())\ndisplay((stats_df[stats_df[\"high_pct_black_hispanic\"] == True ][\"STUTERATIO\"] < avg_str).value_counts())\n''';","d501eea3":"states = [\"Illinois\", \"California\", \"Connecticut\", \"Virginia\", \"Massachusetts\", \"Ohio\"]\nlabels = [\"< 20%\", \"20-40%\", \"40-60%\", \"60-80%\", \"80-100%\"]\n\nfig = subplots.make_subplots(\n    rows= 3, \n    cols= 2, \n    shared_yaxes=True, \n    shared_xaxes=True, \n    horizontal_spacing = 0.02, \n    vertical_spacing = 0.075 )\n\n\npct_access_df = engagement_full[engagement_full[\"Product Name\"]==\"Google Docs\"]\npct_access_means = pct_access_df.groupby([\"state\",\"pct_black\/hispanic\"])[\"pct_access\"].mean()\n\nfor index, state in enumerate(states):\n    \n    state_df = pct_access_means[state]\n    \n    trace = go.Bar(\n        x = state_df.values,\n        y = labels,\n        width = 0.9,\n        marker = dict( color= [palette_green] + [palette_grey3]*2 + [palette_grey2] + [palette_darkgrey]),\n        text = np.round(state_df.values,2),\n        texttemplate = \" <span style='color: #fff'>%{text}<\/span> \",\n        textposition = \"inside\",\n        insidetextanchor=\"start\",\n        name = state,\n        orientation = \"h\",\n        hoverinfo = \"none\",\n    )\n    \n    \n    background = go.Bar(\n        x = [30]*5,\n        y = labels,\n        width = 0.9,\n        marker = dict( color= \"#e1e1e1\" ),\n#         marker = dict( color= \"#fff\" ),\n        name = state,\n        orientation = \"h\",\n        hoverinfo = \"none\",\n    )\n        \n    fig.append_trace(background, index\/\/2  + 1, index % 2 + 1);\n    \n    fig.append_trace(trace, index\/\/2  + 1, index % 2 + 1); \n    \nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Daily page loads across diversity groups<\/span>\"\nsmall_title_format = \"<span style='font-size:14px; font-family:Helvetica'> We compare the percentage of students in each group that use a selected online learning<br> product, <b>Google Docs<\/b>, at least once a day <\/span>\" # % (palette_darkgrey, palette_green)\n     \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    showlegend = False,\n    margin = dict(t=250, l=100, pad=6),\n    plot_bgcolor='#fff',\n    xaxis5 = dict(dtick = 15),\n    xaxis6 = dict(dtick = 15),\n    yaxis ={'categoryorder':'array', 'categoryarray': labels[::-1]},\n    yaxis3={'categoryorder':'array', 'categoryarray': labels[::-1]},\n    yaxis5={'categoryorder':'array', 'categoryarray': labels[::-1]},\n    bargap = 0.05,\n    barmode=\"overlay\",\n    height = 800,\n    width = 700\n)\n\nfig.update_layout(layout)\n\nfig[\"data\"][2].x = np.concatenate((fig[\"data\"][2].x, [0]))\nfig[\"data\"][5].x = np.concatenate((fig[\"data\"][5].x, [0,0]))\n\nfor index, annotation in enumerate(states):\n    state = states[index]\n    text = [\n        \"<span style='font-size:14px; font-family: Helvetica; font-weight: 600'>\" + state + \"<\/span> (<span style='font-size:12px'>\" + str(state_counts[state][\"lower\"] +  state_counts[state][\"higher\"]) + \" districts<\/span>)\"\n    ]\n\n    x = [-0.01, 0.91][index % 2]\n    y = [1.1, 0.69, 0.28][index\/\/ 2]\n    \n    annotation_helper(fig, text, x, y, [0.03], width=200, ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:11px; font-family: Helvetica; color: #444;'> Percentage of<\/span>\",\n    \"<span style='font-size:11px; font-family: Helvetica; color: #444;'> black or hispanic<\/span>\",\n    \"<span style='font-size:11px; font-family: Helvetica; color: #444;'> students<\/span>\"\n]\n\nannotation_helper(fig, text, -0.2, 1.1, [0.0243, 0.0243], align=\"right\", width=90, ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:12px; font-family: Helvetica; color: #444;'> Average % of students that <b>loaded Google Docs at least once a day<\/b>.<\/span>\",\n]\n\nannotation_helper(fig, text, -0.012, 1.055, [0.0243], align=\"left\", width=500, ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:12px; font-family: Tahoma;'> Empty bars indicate that there is no data available for this group.<\/span>\"\n]\n\nannotation_helper(fig, text, -0.025, -0.12, [0.025], width=400, ref=\"paper\")\n    \nfig.show()","ac0bd871":"engagement_pct_access_by_district =  engagement_full.groupby([\"state\",\"district_id\"])[\"engagement_index\",\"pct_access\"].mean().reset_index()\n\ncorr = engagement_pct_access_by_district[\"engagement_index\"].corr(engagement_pct_access_by_district[\"pct_access\"])\n\n# we switch to plotly express for this graph to utilise its in-built trendline feature\nfig = px.scatter(\n    engagement_pct_access_by_district, \n    x='engagement_index', \n    y='pct_access', \n    opacity=0.4, \n    trendline='ols', \n    trendline_color_override= palette_grey2,\n    hover_name = \"state\",\n    labels={\n             \"engagement_index\": \"Average Engagement index\",\n             \"pct_access\": \"Average Percent access\",\n    },\n)\n\nfig.update_traces(marker = dict( color = palette_grey3, size = 12, opacity=0.5, line_width=1.5, line_color= palette_grey2 ), line_dash=\"dash\", line_width=1, showlegend=False)\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Comparing engagement and percent access<\/span>\"\nsmall_title_format = \"<span style='font-size:14px; font-family:Helvetica'> Engagement index and percent access for a given district are <b>highly <br> correlated<\/b> with one another, having a Pearson correlation of %s\" % (np.round(corr,3))\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=110, b=0),\n    \n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_grey2, range=[0,1501] ),\n    yaxis= dict(\n        showline=False, \n        showgrid=True, \n        gridwidth=1, \n        gridcolor='#ddd', \n        linecolor=palette_darkgrey,\n        dtick=1,\n    ),\n\n    plot_bgcolor='#fff',\n    height= 550,\n    width = 600\n)\n\nfig.update_layout(layout)\nfig.show()","919ab75b":"# Data preparation for product engagement table\nproducts_list = [\"Google Docs\", \"Google Classroom\", \"Canvas\", \"YouTube\", \"Schoology\", \"Meet\", \"Kahoot!\", \"Google Forms\", \"Google Drive\", \"Google Sheets\", \"ClassLink\", \"Instagram\", \"Big Ideas Math\", \"Zoom\"]\n\nselected_products_data = engagement_full[engagement_full[\"Product Name\"].isin(products_list)]\nselected_products_data[\"high_pct_black_hispanic\"] = selected_products_data.apply(lambda x: assign_high_hispanic_black_pct_categorical(x), axis=1)\n\n\nselected_products_data_grouped = selected_products_data.groupby([\"Product Name\", \"high_pct_black_hispanic\"])[\"engagement_index\"].mean().reset_index()\nselected_products_data_grouped = selected_products_data_grouped.merge(products_info[[\"Product Name\", \"Primary Essential Function\"]])\n\n\n# Chart creation for product engagement table\nproduct_engagement_high = selected_products_data_grouped[selected_products_data_grouped[\"high_pct_black_hispanic\"] == True ].set_index('Product Name').loc[products_list].reset_index()\nproduct_engagement_low  = selected_products_data_grouped[selected_products_data_grouped[\"high_pct_black_hispanic\"] == False].set_index('Product Name').loc[products_list].reset_index()\n\ndiff = np.round(product_engagement_high[\"engagement_index\"] - product_engagement_low[\"engagement_index\"])\ndiff_colors = [\"grey\" if d>0 else \"white\" for d in diff ]\ndiff_font_colors = [\"white\" if d>0 else \"black\" for d in diff ]\n\ntrace = go.Table(\n            columnwidth = [1.3,2.5,1.5,1.5,1],\n            header = dict(values=[ 'Product Name', 'Category', 'Low hispanic black population', 'High hispanic black population', 'Difference'],                        \n                        line_color= palette_grey2,\n                        fill_color= \"#494949\",\n                        font_color= \"white\",\n                        font_size = 12,\n                        height = 30,\n                        align='left'),\n            cells = dict(\n                values=[\n                    products_list,\n                    product_engagement_high[\"Primary Essential Function\"].str.split(\"-\").str[0:2].str.join(\"-\"),\n                    np.round(product_engagement_high[\"engagement_index\"], 2), \n                    np.round(product_engagement_low[\"engagement_index\"] , 2),\n                    diff\n                ], \n            line_color='darkslategray',\n            line_width=0.5,\n            fill_color=['white','white','white', 'white', diff_colors],\n            font_size = 13,\n            font_color= ['black','black','black','black', diff_font_colors],\n            height = 24,\n            align=['left','left','left','left','right']\n            )\n        )\n\n\nlayout = dict(\n            margin = dict(t=0,b=0,l=50,r=10),\n            width = 800,\n            height = 650,\n)\n\nfig = go.Figure()\nfig.add_trace(trace)\n\nfig['layout'].update(layout)\niplot(fig)","13e24bef":"# Data preparation for engagement slope chart\nengagement_full[\"time\"] = pd.to_datetime(engagement_full[\"time\"])\n\nengagement_march    = engagement_full[( engagement_full[\"time\"].dt.month == 3 ) & ( engagement_full[\"state\"].notnull() ) & ( engagement_full[\"pct_black\/hispanic\"].notnull() ) & ( engagement_full[\"Provider\/Company Name\"] == \"Google LLC\")]\nengagement_march[\"high_pct_black_hispanic\"] = engagement_march.apply(lambda x: assign_high_hispanic_black_pct_categorical(x), axis=1)\n\n\nengagement_december = engagement_full[(engagement_full[\"time\"].dt.month == 12) & ( engagement_full[\"state\"].notnull() ) & ( engagement_full[\"pct_black\/hispanic\"].notnull() ) & ( engagement_full[\"Provider\/Company Name\"] == \"Google LLC\")]\nengagement_december[\"high_pct_black_hispanic\"] = engagement_december.apply(lambda x: assign_high_hispanic_black_pct_categorical(x), axis=1)\n\nengagement_march_groupby    = engagement_march.groupby([\"state\",\"high_pct_black_hispanic\"])[\"engagement_index\"].mean()\nengagement_december_groupby = engagement_december.groupby([\"state\",\"high_pct_black_hispanic\"])[\"engagement_index\"].mean()\n\n\n\n# Chart creation for engagement slope chart\nfig = subplots.make_subplots(\n    rows=1, \n    cols=2, \n    horizontal_spacing = 0.035, \n    vertical_spacing = 0.18, \n    shared_yaxes = True,\n )\n\nengagement_month_groupby = pd.merge(engagement_december_groupby, engagement_march_groupby, right_index = True, left_index = True, suffixes=[\"_december\",\"_march\"], how=\"inner\")\n\ndef label_helper(index, positive_slope):\n    state = index[0]\n    state_abbrev = us_state_to_abbrev[state.replace(\"Of\",\"of\")]\n    high = index[1] == True\n    \n    color = palette_grey3 if positive_slope else palette_darkgrey\n    font_weight = 400 if positive_slope else 600\n    \n    high_exclude_list = [\"FL\",\"NC\", \"CA\"]\n    \n    low_exclude_list  = [\"IL\", \"CA\",  \"WA\", \"VA\", \"MA\", \"NC\"]\n    \n    if state_abbrev not in (high_exclude_list if high else low_exclude_list):\n        return [\"\", \"<span style='color: %s; font-weight: %d; font-size:9px'>%s<\/span>\" % (color, font_weight, us_state_to_abbrev[index[0].replace(\"Of\",\"of\")])]\n    else:\n        return [\"\",\"\"]\n    \n\nfor index in engagement_month_groupby.index:\n    \n    engagement_slope_data = engagement_month_groupby[engagement_month_groupby.index  == index]\n    engagement_march = engagement_slope_data[\"engagement_index_march\"].values[0]\n    engagement_december = engagement_slope_data[\"engagement_index_december\"].values[0]\n    \n    high_hispanic_black = index[1]\n    positive_slope = engagement_march < engagement_december\n    \n    color = palette_grey3 if positive_slope else palette_darkgrey\n    width = 1 if positive_slope else 2.5\n    \n    trace = go.Scatter(\n        x= [0,1],\n        y= [engagement_march, engagement_december], \n        mode='lines+markers+text', \n        showlegend = False,\n        text= label_helper(index, positive_slope),\n        textposition=['middle left', 'middle right'],\n        marker = dict(color=color),\n        line = dict(\n            color = color, \n            width = width\n        ),\n        hoverinfo = \"none\",\n    )\n\n    fig.add_trace(trace, 1, 1 if index[1]==True else 2)\n    \nfig.add_shape(type='line', x0=0, x1=0, y0=0, y1=1, xref='x1', yref='paper', line = dict(color= palette_grey2, width = 1))\nfig.add_shape(type='line', x0=1, x1=1, y0=0, y1=1, xref='x1', yref='paper', line = dict(color= palette_grey2, width = 1))\nfig.add_shape(type='line', x0=0, x1=0, y0=0, y1=1, xref='x2', yref='paper', line = dict(color= palette_grey2, width = 1))\nfig.add_shape(type='line', x0=1, x1=1, y0=0, y1=1, xref='x2', yref='paper', line = dict(color= palette_grey2, width = 1))\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Impact of the pandemic on engagement<\/span>\"\nsmall_title_format = \"<span style='font-size:14px; font-family:Helvetica'>We compare the change in engagement for the two types of districts by state, from the start of the<br>pandemic to when case numbers reached their peak in December.<\/span>\"\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=150, b=40, r=20),\n    \n    xaxis  = dict( range=[-0.025,1.075], showticklabels=False),\n    xaxis2 = dict( range=[-0.025,1.075], showticklabels=False),\n    yaxis  = dict(\n        range=[0,3900],\n        showline=False, \n        showgrid=True, \n        gridwidth=1, \n        gridcolor='#ddd', \n        linecolor=palette_grey2,\n    ),\n    yaxis2 = dict(\n        range=[0,3900],\n        showline=False, \n        showgrid=True, \n        gridwidth=1, \n        gridcolor='#ddd', \n        linecolor=palette_grey2,\n    ),\n    \n    plot_bgcolor='#fff',\n    height= 600,\n    width = 600\n)\n\ntext = [\n    \"<span style='font-size:11px; font-family: Tahoma; color: %s'>Engagement<\/span>\" % (palette_darkgrey),\n    \"<span style='font-size:11px; font-family: Tahoma; color: %s'>index in<\/span>\" % (palette_darkgrey)\n]\nannotation_helper(fig, text, -0.207, 1.025, [0.035], width=100, align=\"right\", ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:11px; font-family: Tahoma; color: %s'>March<\/span>\" % (palette_grey2),\n    \"<span style='font-size:11px; font-family: Tahoma; color: %s'>2020<\/span>\" % (palette_grey2)\n]\nannotation_helper(fig, text, 0.01 , 1.025, [0.035], width=100, ref=\"paper\")\nannotation_helper(fig, text, 0.635, 1.025, [0.035], width=100, ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:11px; font-family: Tahoma; color: %s'>December<\/span>\" % (palette_grey2),\n    \"<span style='font-size:11px; font-family: Tahoma; color: %s'>2020<\/span>\" % (palette_grey2)\n]\nannotation_helper(fig, text, 0.233, 1.025, [0.035], width=100, align=\"right\", ref=\"paper\")\nannotation_helper(fig, text, 0.968, 1.025, [0.035], width=100, align=\"right\", ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:13px; font-weight:600; font-family: Tahoma; color: %s'>Districts with higher black<\/span>\" % (palette_darkgrey),\n    \"<span style='font-size:13px; font-weight:600; font-family: Tahoma; color: %s'>and hispanic population<\/span>\" % (palette_darkgrey)\n]\nannotation_helper(fig, text, 0.025, 0.91, [0.035], width=200, align=\"center\", ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:13px; font-weight:600; font-family: Tahoma; color: %s'>Districts with lower black<\/span>\" % (palette_darkgrey),\n    \"<span style='font-size:13px; font-weight:600; font-family: Tahoma; color: %s'>and hispanic population<\/span>\" % (palette_darkgrey)\n]\nannotation_helper(fig, text, 0.96, 0.91, [0.035], width=200, align=\"center\", ref=\"paper\")\n\ntext = [\n    \"<span style='font-size:12px; font-family: Tahoma; '>* some engagement data for New York is not shown, see below.<\/span>\"\n]\nannotation_helper(fig, text, -0.025, -0.08, [0.025], width=400, ref=\"paper\")\n\nfig.update_layout(layout)\nfig.show()\n\n\n\n# Statistics on data for next table\nengagement_month_changes = engagement_month_groupby[engagement_month_groupby.index.get_level_values(\"state\") != \"New York\"].groupby(\"high_pct_black_hispanic\").mean()\nengagement_month_changes[\"change\"] = (engagement_month_changes[\"engagement_index_december\"] - engagement_month_changes[\"engagement_index_march\"]) \/ engagement_month_changes[\"engagement_index_march\"]\n\n# uncomment below to print summary table \n# display(engagement_month_changes.join(engagement_month_groupby.groupby(\"high_pct_black_hispanic\")[\"engagement_index_december\"].count(), rsuffix=\"_count\"))","947c320f":"html = \"\"\"\n<link rel=\"stylesheet\" href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/4.0.0\/css\/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW\/dAiS6JXm\" crossorigin=\"anonymous\">\n<style>\n    .dark-table-data{\n        border-radius: 5px;\n        background: #494949;\n        color: #efefef !important;\n        font-weight: 600;\n        margin: 0px !important;\n        padding: 2px 10px;\n    }\n    \n    .light-table-data{\n        margin: 0px !important;\n        padding: 2px 10px;\n    }\n    \n    thead.thead-dark tr th{\n        background: #494949 !important;\n    }\n    \n    .sidenote{\n        font-size: 13px;\n        border: 1px solid #d7d7d7;\n        padding: 1px 10px 2px;\n        box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.3);\n        margin-bottom: 3px;\n    }\n    .sidenote span{\n        font-size: 12px;\n    }\n<\/style>\n\"\"\"\nHTML(html)","ea5b8b3a":"## Conclusion\n\nThroughout the course of this notebook we see how students from less-privileged backgrounds face inequalities in their online learning experience. From the data we see how the coronavirus pandemic has done little to level the playing field of American education, and instead has widened the gaps that have always existed. No student should have his success or education predetermined by the circumstances of his birth and steps must be taken to bridge this inequality.\n\nPerhaps once schools have adapted to this online learning approach we may see changes as students are able to leverage learning resources that are freely available online. This may even pave the way for reimagining the traditional methods of education in US, adopting the useful parts of the current remote learning model.\n\n## References:\n1. [NCES - Public school students eligible for free or reduced-price lunch](https:\/\/nces.ed.gov\/fastfacts\/display.asp?id=898): Dives deeper into the free reduced lunch plan and how it is utilised in their analyses.\n2. [NCES - Public School Characteristics 2018-19 Edge Open Data](https:\/\/data-nces.opendata.arcgis.com\/datasets\/nces::public-school-characteristics-2018-19\/about): Public school data to give a better understanding of public schooling.\n3. [UM-Dearborn - How serious is the COVID \u201clearning gap\u201d?](https:\/\/umdearborn.edu\/news\/articles\/how-serious-covid-learning-gap): Article on the learning loss due to widespread school shutdowns.\n4. [McKinsey - Mind the Gap](https:\/\/www.mckinsey.com\/industries\/public-and-social-sector\/our-insights\/covid-19-and-learning-loss-disparities-grow-and-students-need-help): In depth exploration of the widening of the learning gap in the midst of the pandemic.\n5. [ChalkBeat - A nationwide divide](https:\/\/www.chalkbeat.org\/2020\/9\/11\/21431146\/hispanic-and-black-students-more-likely-than-white-students-to-start-the-school-year-online): Explores the learning gap and the way that schools and students cope with the learning loss.\n\n## Massive Thanks\n- Ruchi Bhatia: Used her amazing notebook [\ud83d\ude37COVID-19 Impact on Digital Learning\ud83d\udcbb: EDA + W&B](https:\/\/www.kaggle.com\/ruchi798\/covid-19-impact-on-digital-learning-eda-w-b) for reference in initial data prep to join the competition data.\n\n- Dar\u00edo Weitz: [Marimekko Charts with Plotly Express](https:\/\/towardsdatascience.com\/marimekko-charts-with-plotly-express-you-can-also-lie-with-charts-4ee98a30ed66): Marimekko charts aren't available out of the box in Plotly, so I used this article to get started. \n","8493bbed":"We see a moderate correlation between the between these two metrics. This tells us that in general, school districts with greater populations of black and hispanic students tend to **have higher poverty levels**.\n\n\n## Student teacher ratios\nWe look at how the schools are staffed, in particular the number of students per teacher in the school. While the national average is around the 15:1 mark, schools should aim to do better than this number( lower student-teacher ration is better). Hover over each circle for additional information.\n\n\n<p class=\"sidenote\"> Source: NCES Public School Characteristics 2018-2019\n    <br>\n    <span style=\"font-style:italic\">note: Student-teacher ratio values are from 2018-2019 and thus only serve to give us an idea of how this metric varies across both groups. Data from schools without student race information were not included.<\/span> \n<\/p>","619b016c":"We see that **districts up till the 80% black\/hispanic student mark are line with our intuition** that the greater the black or hispanic population, the lower the online engagement. However contrary to this trend, students in the category with the highest percentage of minority race students had the highest engaement scores. We will look into some of the reasons for the same later on.","41987191":"Certain district data for New York was removed due to the fact that it would require a completely different scale than the above graph to be shown clearly. For instance New York has a march engagement value of 11,572 while the rest of the states have their corresponding engagement values in the 0 - 2,300 range. (*tip: clicking the \"Autoscale\" button at the top of the Plotly chart will reset the axes to include the NY data.*)\n\n\nWe see a summary of our results in the table below.\n\n\n<table class=\"table\" style=\"width: 550px;\">\n    \n  <thead class=\"thead-dark\" style=\"background:#494949 !important; \">\n  <tr>\n      <th> Districts with<br>Hispanic\/ black students(%)<\/th>\n      <th> Less than 40% <\/th>\n      <th> 40% or higher<\/th>\n  <\/tr>\n  <\/thead>\n\n  <tbody>\n  <tr>\n      <td>Number of districts<\/td>\n      <td><p class=\"dark-table-data\">16<\/p><\/td>\n      <td><p class=\"light-table-data\">14<\/p><\/td>\n  <\/tr>     \n  <tr>\n      <td>Average Engagment in March 2020<\/td>\n      <td><p class=\"dark-table-data\">1692.57<\/p><\/td>\n      <td><p class=\"light-table-data\">1200.51<\/p><\/td>\n  <\/tr>    \n  <tr>\n      <td>Average Engagment in December 2020<\/td>\n      <td><p class=\"dark-table-data\">1324.75<\/p><\/td>\n      <td><p class=\"light-table-data\">812.64<\/p><\/td>\n  <\/tr>\n  <tr>\n      <td>Engagement change (March to December)<\/td>\n      <td><p class=\"light-table-data\"> +27% <\/p><\/td>\n      <td><p class=\"dark-table-data\"> +47% <\/p><\/td>\n  <\/tr> \n  <\/tbody>\n    \n<\/table>\n\n<br>\nWe see how even though districts with higher black and hispanic population had lower engagement rates across the board, they had a higher percentage change from their original engagement rates. This is in part due to their <b>lower online activity at the start of the pandemic<\/b> , when online learning wasn't essential.","c27d8bff":"We see that the numbers aren't too different for student teacher ratios and both groups even have a similar share of schools that do better than the national average( *lower* student-teacher ratio than national average). A summary of the same is provided below:\n<table class=\"table\" style=\"width: 550px;\">\n    \n  <thead class=\"thead-dark\">\n  <tr>\n      <th> Counties with Hispanic<br>& black students (2018-19)<\/th>\n      <th> Less than 40% <\/th>\n      <th> 40% or higher<\/th>\n  <\/tr>\n  <\/thead>\n\n  <tbody>\n  <tr>\n      <td>Number of counties<\/td>\n      <td><p class=\"light-table-data\">2745<\/p><\/td>\n      <td><p class=\"light-table-data\">1381<\/p><\/td>\n  <\/tr>     \n  <tr>\n      <td>Eligible for Free\/Reduced Lunch<\/td>\n      <td><p class=\"light-table-data\">49.07<\/p><\/td>\n      <td><p class=\"dark-table-data\">74.61<\/p><\/td>\n  <\/tr>    \n  <tr>\n      <td>Student teacher ratio<\/td>\n      <td><p class=\"dark-table-data\">15.61<\/p><\/td>\n      <td><p class=\"light-table-data\">15.41<\/p><\/td>\n  <\/tr>\n  <tr>\n      <td>Counties with better student teacher ratio than national avg.<\/td>\n      <td><p class=\"dark-table-data\"> 61.37% <\/p><\/td>\n      <td><p class=\"light-table-data\"> 60.24% <\/p><\/td>\n  <\/tr> \n  <\/tbody>\n    \n<\/table>","afa65033":"We see in quite a few cases that districts with the lower percentages of black and hispanic students tend to have higher share of students engaging with online learning products.\n\n\n## Does greater access to learning tools mean higher engagement index?\nWhile I did imply earlier that it could be possible that a district could have higher engagement rates even with a low percentage of students having access to online learning, eg. if a minority of students had good access to learning and made up the majority of the recorded page loads. To see if this is true we plot each district, with its average engagement_index and pct_access.\n\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning\n<\/p>","0a8a8ab8":"We see how the two are **highly correlated** and that this trend is closely followed by most districts. Deviations from the this are probably due to different average number of page loads per student in each district.\n\n## What did the students engage with?\nHaving answered the question of **who** actually participates in online learning, a natural follow-up question would be **what are they engaging with**? For this we look at the same division of students, except now we will focus on how they engage with some of the more popular products.\n\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning - Product info\n    <br>\n    <span style=\"font-style:italic\">note: Only the 14 products with highest engagement numbers were included.<\/span> \n<\/p>","c9238610":"## How did engagement levels change in each state due to the pandemic?\nWe see how student participation changed for the two groups on either side of this educational divide in the following chart. Data was aggregated on a state level to see where online learning activity rose or fell in comparison with their pre-pandemic levels.\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning\n<\/p>","2c313e28":"While I picked some of the cases where the learning gap was more pronounced, it was a similar pattern that would be seen across almost all states. There seems to be a trend of **lower engagement by districts with higher black and hispanic populations** across the board.\n\n\nGrouping the race data in the above manner makes the learning gap **easier to visualise** - we are no longer working with 5 different race categories which might be difficult to compare all five at the same time. Additionally it also **increases the sample size** on either side of the divide helping us deal with oddities due to smaller sample sizes for the high hispanic\/black districts. For these reasons you will see this grouping quite a bit in this analysis.\n\nIn fact when we use this treatment on the first graph in this notebook, we get the following:","bd48ac4d":"# The shift to online learning\n\nWhile high engagement numbers from certain districts might indicate that students are motivated to engage in their learning, it doesn't directly tell us about the share of students that are actually engaging in the learning process in that district. The bulk of the engagement might just be coming from those students that have better circumstances, while others might have little to no engagement. \n\nLuckily for us we are provided with data regarding the percentage of student that have at least one load of the product each day. We see how this differs in different sections of society below.\n\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning\n    <br>\n    <span style=\"font-style:italic\">note: We only focus on Google Docs to prevent our results from being biased by students in certain groups using products that have much lower usage rates in general.<\/span> \n<\/p>","3f39e6b2":"While we were aware of the fact that the higher black\/hispanic districts had smaller sample sizes, we now see that a lot of their data also comes from **more developed locales** which could possibly higher engagement levels in general. This makes the fact that we are still able to find evidence of these districts underperforming all the more surprising.\n\n\nWe may also entertain the possibility of a **selection bias** in the data. With page loads being recorded via a chrome extension, we only survey those that actually have **internet access and a laptop\/desktop** (chrome doesn't have browser extensions on mobile) for learning. These assumptions would fail to capture engagement data from lower income households that are unable to access online learning resources in the first place.\n\n\n# The victims of the learning gap\nThe students that are the most affected by the learning gap tend to belong to **racial minorities, lower income level families**, with inadequate access to quality education and online resources. Many households also lack a dedicated space or device for students to learn on.\n\nThe schools these students are often **understaffed**, have **obsolete learning equipment** and **limited funds** to work with. It is also these same institutions which struggled the most with the shift to online learning - the first few weeks of lockdown would be spent on training staff members to use remote teaching tools, distributing laptops to students and getting meals to low-income families.\n\nIn the below chart we look at the gaps in expenditures per student, within the same state.\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning - District info\n    <br>\n    <span style=\"font-style:italic\">note: We consider the per student spending of a district to be the mean of the upper and lower bounds of its 'ppt_total_raw' field. Data includes all states that have spending data for both groups.<\/span> \n<\/p>","6ff09f08":"### 3. Distribution of our data\nThe competition data includes engagement data on 233 districts across 23 states. In and of itself this is a large dataset and an invaluable source of student engagement data. \n\nBut one has to understand the US has approximately 13,800 school districts spread over 52 state\/jurisdictions. Since we're working with an incomplete dataset of the education landscape in the US, its possible that our specific selection of districts might affect the analysis. So when comparing districts across different diversity groups, it makes sense to check if the data is coming from similar types of locales. \n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning - District info\n    <br>\n    <span style=\"font-style:italic\">note: Data only includes districts whose locale data is present.<\/span> \n<\/p>","136df54b":"Of the six available states we see how in three states- Massachusetts, Illinois and Virginia, **spending is more for higher white population districts**, whereas North Carolina shows the **opposite trend**. Washington and Indiana both show the same spending in both groups.\n\n## Free or Reduced Lunch eligibility\nAt a quick glance, this metric simply shows the percentage of students in a school who are eligible for free or reduced-price lunch (FRPL) under the National School Lunch Program (NSLP), but beneath the surface, it serves as a **proxy measure for the concentration of low-income students** in the school. The NCES itself uses this metric to group schools into the following categories:\n\n\n<br>\n<table class=\"table\" style=\"width: 500px\">\n  <thead class=\"thead-dark\">\n  <tr>\n      <th>Free or Reduced-Price Lunch (FRPL) %<\/th>\n      <th>Category<\/th>\n  <\/tr>\n  <\/thead>\n    \n  <tbody>\n  <tr>\n      <td>0-25%<\/td>\n      <td>Low-poverty school<\/td>\n  <\/tr>    \n  <tr>\n      <td>25-50%<\/td>\n      <td>Mid-low poverty school<\/td>\n  <\/tr>  \n  <tr>\n      <td>50-75%<\/td>\n      <td>Mid-high poverty school<\/td>\n  <\/tr>   \n  <tr>\n      <td>75-100%<\/td>\n      <td>High-poverty school<\/td>\n  <\/tr> \n  <\/tbody>\n<\/table>\n\n<br>\n\nWith this classification in mind, lets look at whether there is any correlation between the poverty level of school districts and the percentage of its students that are of black or hispanic origins.\n\nEarlier we used the percentage of black and hispanic students in the district to determine how well off the district was. With this new classification in mind, it would be interesting to see how our old basis of comparison of districts stacks against the current poverty classifications. We do so it the following chart.\n\n<p class=\"sidenote\"> Source: NCES Public School Characteristics 2018-2019\n    <br>\n    <span style=\"font-style:italic\">note: The data is from 2018-2019 and being well before the pandemic, is only intended to give us a general sense of the state of public schools in the US.<\/span> \n<\/p>","75e4c2d3":"While the previous trend prevails with white-majority schools showing higher engagement across the table - we see a few exceptions to this. Namely **YouTube, Meet** and **Zoom** all have higher engagement in districts with higher share of black and hispanic students. ","d7313da2":"### Reasons for anomalies in 80-100% hispanic\/black group\n\nSimply exploring the reason for these results uncovers several underlying issues in our dataset. Simply plotting the average engagements of this group might not immediately reveal an accurate picture of their online learning, and we will dive deeper into the data and look at some of the reasons behind why we get these results:\n\n### 1. Outliers in the district data\nWhen we look into districts with higher percentages of hispanic or black students we find a few cases like those of New York and Arizona, which have **unusally higher engagement** records. These districts seem to bias our 80-100% hispanic black group in our previous chart, especially since it has only 8 districts in total.\n\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning\n    <br>\n    <span style=\"font-style:italic\">note: Districts without any state are excluded. Data is plotted with a 14 day average.<\/span> \n<\/p>","498119f9":"## Engagement Gap by Racial Diversity\nLearnPlatform provides us with information relating to the page load activity of students on a school district level and has supplemented this data with details about the district(racial breakdown, per student spending, etc.) and the product for which the engagement is recorded. \n\nSo we start by looking at a broad overview of how the average engagement varied based on the percentage of black or hispanic students in the district.\nFrom past trends one might expect that school districts with higher **white populations might have better quailty of remote education**, while those with higher black and hispanic populations might suffer with the shift to digital learning platforms.\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning\n    <br>\n    <span style=\"font-style:italic\">note: engagement data which doesn't belong to any state is excluded. Data is plotted with a 14 day average.<\/span> \n<\/p>","19efef9a":"Due to working with an incomplete set of school districts it is hard to tell whether these two highlighted districts just happen to be very high engagement districts or if districts in NY and AZ just have higher engagements in general. Currently **Arizona** (with only 1 district) **has the highest average engagement** among all the states followed by **New York**( 8 districts) **in the second** spot.\n\n### 2. State-wise data\nIn our initial graph we simply averaged across data from all states. This worked well for a broad overview but we have to consider that **not all states can be treated the same** - districts in different states may not always be comparable to one another due to the general quality of education in a particular state, school shutdown policies, differences in COVID case numbers\/deaths, etc. So now we look at the same data, but only grouping the districts in each state\n\n\n<p class=\"sidenote\"> Source: LearnPlatform COVID-19 Impact on Digital Learning\n    <br>\n    <span style=\"font-style:italic\">note: Data is aggregated on weekly basis, of which we plot the data with a moving average. We also group data with &lt40% and >=40% black\/hispanic students separately to get a better visual of the learning gap in each state. <br>Only selected states shown below. <\/span> \n<\/p>","92b01dea":"# The Learning Gap\nIn early 2020 the spread of the pandemic prompted the closing of schools in the US, with many to all shifting their focus to online learning. Students and teachers would utilise an online mode of learning to make up for the learning loss due lack of in-person teaching.\n\nWith this shift to remote learning, students from lower-income families are being left behind because they dont have acess to high-quality remote education or an environment conducive for online learning - including a quite space without distractions, devices that they do not need to share, high speed internet and parental\/academic supervision. This has lead to the further widening of the already existing learning gap for these students - a group which is arguably the most in need of quality learning.\n\nIn this notebook we try to leverage LearnPlatform's student engagement data to better evaluate this learning gap and to understand how it is prevalent even with the shift to online learning."}}