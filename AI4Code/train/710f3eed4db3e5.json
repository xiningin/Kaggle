{"cell_type":{"e73f30f6":"code","ea18228c":"code","ea75d901":"code","85630ae1":"code","8d1e2122":"code","aa489bfd":"code","2e1692fb":"code","96abbf42":"code","960c847a":"code","9d6004e8":"code","c1ee91fa":"code","dfc828a1":"code","f9c78c32":"code","4457f952":"code","8bfebb6b":"code","d52668af":"code","0d5bfac5":"markdown","34c3548d":"markdown","d3a69d32":"markdown","d726be57":"markdown","cf57edc6":"markdown","8130aacd":"markdown","fb3547d4":"markdown","756f8adb":"markdown","37791490":"markdown","e36b4a1c":"markdown","3e42917d":"markdown","230c4dc3":"markdown","af149432":"markdown","3271001f":"markdown","5cc79603":"markdown"},"source":{"e73f30f6":"emptyList= []","ea18228c":"#Append elements into the empty list using .append()\n\nemptyList.append(1)\nemptyList.append(2)\nemptyList.append(3)","ea75d901":"emptyList","85630ae1":"simpleTuple = (1,2,3)","8d1e2122":"simpleTuple[2]","aa489bfd":"for item in simpleTuple:\n    print(item)\n\nfor item in emptyList:\n    print(item)","2e1692fb":"for index, item in enumerate(simpleTuple):\n    print(index, item)\n\n#This also works for list.","96abbf42":"X_num = [0,1,2,3,4,5,6,7,8]\ny_num = [0,1,2,3,4,1,2,3,4]\n\nfrom pylab import plot, show\nplot(X_num, y_num,marker = 'o')\nshow()","960c847a":"nyc_temp = [53.9, 56.3, 56.4, 53.4, 54.5, 55.8, 56.8, 55.0, 55.3, 54.0, 56.7, 56.4, 57.3]\nyears = range(2000,2013)\nplot(years,nyc_temp, marker='o')\nshow()","9d6004e8":"from pylab import legend, xlabel, ylabel, title, axis\n\nnyc_temp_2000 = [31.3, 37.3, 47.2, 51.0, 63.5, 71.3, 72.3, 72.7, 66.0, 57.0, 45.3, 31.1]\nnyc_temp_2006 = [40.9, 35.7, 43.1, 55.7, 63.1, 71.0, 77.9, 75.8, 66.6, 56.2, 51.9, 43.6]\nnyc_temp_2012 = [37.3, 40.9, 50.9, 54.8, 65.1, 71.0, 78.8, 76.7, 68.8, 58.0, 43.9, 41.5]\n\nmonths = range(1,13)\nplot(months, nyc_temp_2000, months, nyc_temp_2006, months, nyc_temp_2012)\nlegend([2000,2006,2012])\ntitle('Average Monthly temperature for three years')\nxlabel('Month')\nylabel('Temprature in Fehrenhite')\naxis(ymax = 90,ymin = 20, xmin = 1)\nshow()","c1ee91fa":"from matplotlib import pyplot as plt\n\nnyc_temp_2000 = [31.3, 37.3, 47.2, 51.0, 63.5, 71.3, 72.3, 72.7, 66.0, 57.0, 45.3, 31.1]\nnyc_temp_2006 = [40.9, 35.7, 43.1, 55.7, 63.1, 71.0, 77.9, 75.8, 66.6, 56.2, 51.9, 43.6]\nnyc_temp_2012 = [37.3, 40.9, 50.9, 54.8, 65.1, 71.0, 78.8, 76.7, 68.8, 58.0, 43.9, 41.5]\n\nmonths = range(1,13)\n\nplt.plot(months, nyc_temp_2000)\nplt.plot(months, nyc_temp_2006)\nplt.plot(months, nyc_temp_2012)\nplt.legend([2000,2006,2012])\nplt.title('Average Monthly temperature for three years')\nplt.xlabel('Month')\nplt.ylabel('Temprature in Fehrenhite')\nplt.axis(ymax = 90,ymin = 20, xmin = 1)\nplt.show()\n","dfc828a1":"from matplotlib import pyplot as plt\n\ndef graph_plot(X,y):\n    plt.plot(X,y,marker = 'o')\n    plt.title('Variation in Gravity with Distance')\n    plt.xlabel('Distance in Meters')\n    plt.ylabel('Gravitational force in newtons')\n    plt.show()\n\ndef getData():\n    r = range(100, 1001, 50)\n    # Empty list to store the calculated values of F\n    F = []\n    G = 6.674*(10**-11)\n    m1 = 0.5\n    m2 = 1.5\n    for dist in r:\n        force = G*(m1*m2)\/(dist**2)\n        F.append(force)\n    graph_plot(r,F)\n    \ngetData()\n    ","f9c78c32":"from matplotlib import pyplot as plt\n\ndef frange(start, end, increment):\n    numbers = []\n    while start<end:\n        numbers.append(start)\n        start = start + increment\n    \n    return numbers\n### We\u2019ve defined a function frange() (\u201cfloating point\u201d range)","4457f952":"import math\n\ndef draw_graph(x,y):\n    plt.plot(x,y)\n    plt.xlabel('x-coordinate')\n    plt.ylabel('y-coordinate')\n    plt.title('Projectile motion of a ball')\n    \ndef draw_trajectory(u,theta):\n    theta = math.radians(theta)\n    \n    g = 9.81\n    \n    t_flight  = (2 * u * math.sin(theta))\/g\n    \n    intervals = frange(0,t_flight,0.001)\n    x = []\n    y = []\n    for t in intervals:\n        x.append(u*math.cos(theta)*t)\n        y.append(u*math.sin(theta)*t - 0.5*g*t*t)\n    draw_graph(x,y)\n    \nif __name__ == '__main__':\n    try:\n        u =[20,30,40]\n        theta = 45\n        \n    except ValueError:\n        print('You entered an invalid input')\n        \n    else:\n        for i in range(0,3):\n                draw_trajectory(u[i],theta)","8bfebb6b":"def drawEq(x,y):\n    plt.plot(x,y)\n    plt.xlabel('X')\n    plt.ylabel('y')\n    plt.title('Quadratic equation plot')\n    plt.xlim(0,20)\n    \ndef quadFunc(x):\n    length = len(x)\n    y = []\n    for i in range(0,length):\n        y.append(x[i] ** 2 + x[i]**4 + 1)\n    \n    return y\n\nif __name__ == '__main__':\n    x_values = range(1,20)\n    y = []\n    y = quadFunc(x_values)\n    drawEq(x_values,y)\n    plt.show()\n\n","d52668af":"def fibo(x):\n    if x == 1:\n        return [1]\n    if x == 2:\n        return [1,1]\n    \n    a = 1\n    b = 1\n    series = [a, b]\n    \n    for i in range(x):\n        c = a + b \n        series.append(c)\n        a = b\n        b = c\n    \n    return series\n\ndef drawFibo(x,y):\n    x1 = []\n    for i in range(0,x):\n        x1.append(i)\n    plt.plot(x1,y)\n    plt.xlabel('No.')\n    plt.ylabel('Ratio')\n    plt.title('Ratio between consecutive Fibonacci numbers')\n\n\nif __name__ == '__main__':\n    \n    x = 100\n    series = fibo(x)\n    y  = []\n    for i in range(x):\n        y.append(series[i+1]\/series[i])\n    \n    drawFibo(x,y)\n    ","0d5bfac5":"## Working with pylab in Python","34c3548d":"### Gravitational Force","d3a69d32":"#### Graphing the Average Annual Temperature in New York City","d726be57":"### Fibonacci Sequence","cf57edc6":"### Projectile Motion","8130aacd":"### Lists ","fb3547d4":"## Working with matplotlib.pyplot in Python","756f8adb":"## Plotting with Formulas","37791490":"# Visualizing data with Graphs","e36b4a1c":"You can refer to an individual number in simpletuple using the corresponding index in brackets, just as with lists","3e42917d":"### Tuples","230c4dc3":"#### Iterating over a List or Tuple","af149432":"The key difference between a List and Tuple is that list is mutable whereas Tuple is not.","3271001f":"### Exploring a Quadratic Function Visually","5cc79603":"#### Comparing the Monthly Temperature Trends of New York City"}}