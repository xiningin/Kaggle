{"cell_type":{"3589c171":"code","01d375d1":"code","03b24733":"code","45ce5421":"code","3063ab92":"code","e0c9d672":"code","c2652883":"code","a19c70d2":"code","27b575ab":"code","c334007f":"code","8fc0f8c1":"code","2fe2e948":"code","1ffafd6f":"markdown"},"source":{"3589c171":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","01d375d1":"import statsmodels.formula.api as sm\nimport matplotlib.pyplot as plt\nimport seaborn as sns","03b24733":"wine_data = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","45ce5421":"wine_data.head()","3063ab92":"wine_data.tail()","e0c9d672":"X=wine_data.drop('quality',1) #feautres\/independent variable\ny=wine_data['quality'] #dependent \/target variable\n\nimport statsmodels.api as sm\nXc=sm.add_constant(X)\n\nmodel=sm.OLS(y,Xc).fit()\nmodel.summary()","c2652883":"model.params","a19c70d2":"wine_data['quality'].value_counts()","27b575ab":"from sklearn.model_selection import train_test_split\nX_train ,X_test,y_train,y_test= train_test_split(X,y,test_size=0.30,random_state=4)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","c334007f":"correlation= wine_data.corr()\nfig= plt.subplots(figsize=(10,10))\nsns.heatmap(correlation,vmax=1, square=True, annot=True, cmap='Blues')","8fc0f8c1":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n","2fe2e948":"linear_regressor = LinearRegression()\nlinear_regressor.fit(X_train,y_train)\ny_pred= linear_regressor.predict(X_test)\n\naccuracy=linear_regressor.score(X_test,y_test)\nprint( accuracy)\n\nrmse_linear= mean_squared_error(y_test, y_pred)\nprint(rmse_linear)","1ffafd6f":"*RMSE is 0.39 , and the model has got 34% accuracy.*"}}