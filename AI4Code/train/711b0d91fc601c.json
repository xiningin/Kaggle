{"cell_type":{"28ba96e5":"code","1c58e1ce":"code","a5af6872":"code","c9a0723a":"code","c307ea64":"code","397cf885":"code","66da1166":"code","96620b9e":"code","f138d8e2":"code","ff7fef64":"code","c9214811":"code","47fb2710":"code","86910a6d":"code","d5eeba19":"code","df6219f5":"code","834cd84f":"code","fcdc2001":"code","10859857":"code","e12fdf45":"code","6fa12172":"code","9e5e0b93":"code","8a6a4e69":"code","c1536f9b":"code","26d04de3":"code","d4c14c45":"code","5e5deb14":"code","4b192706":"code","42392658":"code","2e3e51e1":"code","b44d85b0":"code","98f45d21":"code","1a125a2a":"code","5a5b0fc6":"code","019817a9":"code","d85cb0d4":"code","b8c4bdb4":"code","c3faa1d4":"code","ea1650f2":"code","90bac126":"code","4e0d2ac1":"code","8bcd36fb":"code","1dd57d88":"code","3ed44f66":"code","1149c569":"code","3c4edb96":"code","899cdf65":"markdown"},"source":{"28ba96e5":"!pip install japanize-matplotlib","1c58e1ce":"!pip install git+https:\/\/github.com\/darecophoenixx\/wordroid.sblo.jp","a5af6872":"%matplotlib inline\nfrom IPython.display import SVG, Image\nfrom keras.utils.vis_utils import model_to_dot\n\nimport random\n\nimport numpy as np\nimport pandas as pd\nfrom sklearn import datasets\nfrom sklearn import preprocessing\nfrom sklearn.decomposition import PCA\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport japanize_matplotlib\nplt.rcParams['font.family']","c9a0723a":"img_cnt = 0","c307ea64":"def save_img():\n    global img_cnt\n    img_cnt += 1\n    img_name = 'img_{0:03}.png'.format(img_cnt)\n    print(img_name)\n    plt.savefig(img_name)","397cf885":"def hexbin(x, y, color, **kwargs):\n    cmap = sns.light_palette(color, as_cmap=True)\n    plt.hexbin(x, y, cmap=cmap, **kwargs)\ndef scatter(x, y, color, **kwargs):\n    plt.scatter(x, y, marker='.')","66da1166":"df_part = pd.read_csv('..\/input\/ks2020-encode-data-001\/encoded_01.csv', index_col=0)\ndf_part.head()","96620b9e":"df_out_wgt_user = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001\/out_user.csv', index_col=0)\nX_df_user = df_out_wgt_user\nwgt_user = df_out_wgt_user.values\ndf_out_wgt_user.head()","f138d8e2":"df_out_wgt_col = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001\/out_col.csv', index_col=0)\nX_df_col = df_out_wgt_col\nwgt_prod = df_out_wgt_col.values\ndf_out_wgt_col.head()","ff7fef64":"X_df = df_out_wgt_user","c9214811":"from som import som\nfrom som.keras import sksom_keras2\n\nK_shape = (4, 3)\nsinit = som.SimpleSOM(K_shape, initialization_func='linear')\nsinit._initialize(X_df.values)","47fb2710":"img = som.conv2img(sinit.K, K_shape)\nplt.figure(figsize=(10, 10))\nplt.imshow(img)\nsave_img()","86910a6d":"K_init = sinit.K\nsobj = sksom_keras2(kshape=K_shape, init_K=K_init, form='hex')","d5eeba19":"df1= pd.DataFrame(sobj.landmarks_[:,:5])\ndf1['cls'] = 'K'\ndf1.head()\ndf2 = pd.DataFrame(X_df.values[:,:5])\ndf2['cls'] = 'X'\ndf2.head()\ndf = pd.concat([df2, df1], axis=0)\ndf.head()\ndf.shape\nsns.pairplot(df, markers=['.', 's'], hue='cls', plot_kws={'alpha': 0.5}, diag_kind='hist')\nsave_img()","df6219f5":"%%time\nfrom keras.optimizers import RMSprop, Adam, SGD\nhst = sobj.fit(X_df.values, batch_size=X_df.values.shape[0])","834cd84f":"fig, ax = plt.subplots(1, 1, figsize=(8,8))\nax.plot(list(range(len(sobj.hst['MeanDist2ClosestLM']))), sobj.hst['MeanDist2ClosestLM'], label=\"MeanDist2ClosestLM\")\nplt.legend(loc=\"best\")\nsave_img()","fcdc2001":"fig, ax = plt.subplots(1, 1, figsize=(8,8))\nax.plot(list(range(len(sobj.hst['loss']))), sobj.hst['loss'], label=\"Train loss\")\nplt.legend(loc=\"best\")\nsave_img()","10859857":"img = som.conv2img(sobj.landmarks_, K_shape)\nplt.figure(figsize=(10, 10))\nplt.imshow(img)\nsave_img()","e12fdf45":"ax = sobj.plot_hex(figsize=(3.6, 3.8), s=6900)\n\nfor i, m in enumerate(sobj.predict(X_df_col.values)):\n    b, a = divmod(m, sobj.kshape[1])\n    txt = X_df_col.index.values[i]\n    plt.text(a, b, txt, ha='center', va='center',\n           bbox=dict(facecolor='lightblue', alpha=0.5, lw=0))\nsave_img()","6fa12172":"img = som.conv2img(sobj.landmarks_, K_shape)\nplt.figure(figsize=(20, 20))\nplt.imshow(img)\n\nfor i, m in enumerate(sobj.predict(X_df_col.values)):\n    b, a = divmod(m, sobj.kshape[1])\n    txt = X_df_col.index.values[i]\n    plt.text(a, b, txt, ha='center', va='center',\n           bbox=dict(facecolor='lightblue', alpha=0.5, lw=0))\n\nsave_img()","9e5e0b93":"sobj.predict(X_df.values)","8a6a4e69":"df1= pd.DataFrame(sobj.landmarks_[:,:5])\ndf1['cls'] = 'K'\ndf1.head()\ndf2 = pd.DataFrame(X_df.values[:,:5])\ndf2['cls'] = 'X'\ndf2.head()\ndf = pd.concat([df2, df1], axis=0)\ndf.head()\ndf.shape\nsns.pairplot(df, markers=['.', 's'], hue='cls', plot_kws={'alpha': 0.5}, diag_kind='hist')\nsave_img()","c1536f9b":"%%time\nhst = sobj.fit(X_df.values, r=(K_shape[0]\/30.0, K_shape[0]\/30.0), batch_size=X_df.values.shape[0], optimizer=Adam(learning_rate=0.001\/8))","26d04de3":"fig, ax = plt.subplots(1, 1, figsize=(8,8))\nax.plot(list(range(len(sobj.hst['MeanDist2ClosestLM']))), sobj.hst['MeanDist2ClosestLM'], label=\"MeanDist2ClosestLM\")\nplt.legend(loc=\"best\")\nsave_img()","d4c14c45":"fig, ax = plt.subplots(1, 1, figsize=(8,8))\nax.plot(list(range(len(sobj.hst['loss']))), sobj.hst['loss'], label=\"Train loss\")\nplt.legend(loc=\"best\")\nsave_img()","5e5deb14":"sobj.landmarks_[:3,:3]","4b192706":"sobj.kmeans.cluster_centers_[:3,:3]","42392658":"K_init[:3,:3]","2e3e51e1":"img = som.conv2img(sobj.landmarks_, K_shape)\nplt.figure(figsize=(10, 10))\nplt.imshow(img)\nsave_img()","b44d85b0":"ax = sobj.plot_hex(figsize=(3.6, 3.8), s=6900)\n\nfor i, m in enumerate(sobj.predict(X_df_col.values)):\n    b, a = divmod(m, sobj.kshape[1])\n    txt = X_df_col.index.values[i]\n    plt.text(a, b, txt, ha='center', va='center',\n           bbox=dict(facecolor='lightblue', alpha=0.5, lw=0))\nsave_img()","98f45d21":"img = som.conv2img(sobj.landmarks_, K_shape)\nplt.figure(figsize=(20, 20))\nplt.imshow(img)\n\nfor i, m in enumerate(sobj.predict(X_df_col.values)):\n    b, a = divmod(m, sobj.kshape[1])\n    txt = X_df_col.index.values[i]\n    plt.text(a, b, txt, ha='center', va='center',\n           bbox=dict(facecolor='lightblue', alpha=0.5, lw=0))\nsave_img()","1a125a2a":"df1= pd.DataFrame(sobj.landmarks_[:,:5])\ndf1['cls'] = 'K'\ndf1.head()\ndf2 = pd.DataFrame(X_df.values[:,:5])\ndf2['cls'] = 'X'\ndf2.head()\ndf = pd.concat([df2, df1], axis=0)\ndf.head()\ndf.shape\nsns.pairplot(df, markers=['.', 's'], hue='cls', plot_kws={'alpha': 0.5}, diag_kind='hist')\nsave_img()","5a5b0fc6":"ix, jx = 0,1\nplt.figure(figsize=(10,10))\nax = sns.kdeplot(data=X_df_user, x=str(ix), y=str(jx),\n                 cmap=\"Reds\", shade=True, thresh=0.05)\nax.scatter(sobj.landmarks_[:,ix], sobj.landmarks_[:,jx], marker='X')\nfor ii, col in enumerate(range(sobj.landmarks_.shape[0])):\n        text = '\u30af\u30e9\u30b9' + str(ii)\n        xy = (sobj.landmarks_[ii,ix], sobj.landmarks_[ii,jx])\n        ax.annotate(text, xy=xy)\nsave_img()","019817a9":"ix, jx = 0,2\nplt.figure(figsize=(10,10))\nax = sns.kdeplot(data=X_df_user, x=str(ix), y=str(jx),\n                 cmap=\"Reds\", shade=True, thresh=0.05)\nax.scatter(sobj.landmarks_[:,ix], sobj.landmarks_[:,jx], marker='X')\nfor ii, col in enumerate(range(sobj.landmarks_.shape[0])):\n        text = '\u30af\u30e9\u30b9' + str(ii)\n        xy = (sobj.landmarks_[ii,ix], sobj.landmarks_[ii,jx])\n        ax.annotate(text, xy=xy)\nsave_img()","d85cb0d4":"df_res = pd.DataFrame({'cls': sobj.predict(X_df.values[:X_df_user.shape[0],:])}, index=X_df_user.index)\ndf_res","b8c4bdb4":"cnt = pd.DataFrame({'grp': sobj.predict(X_df.values[:X_df_user.shape[0],:])}).groupby('grp').size()\ncnt","c3faa1d4":"df_part.columns.values\nll = []\nfor ee in df_part.columns.values:\n    tmp = pd.crosstab(df_res['cls'], df_part[ee], margins=True, normalize='index')\n    #print(tmp)\n    ll.append(tmp.values[:,1])\n\nres = pd.DataFrame(np.c_[ll].T, index=tmp.index, columns=df_part.columns)\nres.iloc[:,:10]","ea1650f2":"res.iloc[:,10:20]","90bac126":"res.iloc[:,20:30]","4e0d2ac1":"res.iloc[:,30:]","8bcd36fb":"cnt1 = cnt.values\ncnt1 = np.r_[cnt1, cnt.values.sum()]\ncnt1 = pd.DataFrame(cnt1)\ncnt1.index = res.index.values\ncnt1\nres1 = pd.concat([res, pd.DataFrame(cnt1)], axis=1)\nres1.columns.values[-1] = 'cnt'\nres1","1dd57d88":"df_lm = pd.DataFrame(sobj.landmarks_)\ndf_lm","3ed44f66":"X_df_col_som_out = X_df_col.copy()\nX_df_col_som_out['cls'] = sobj.predict(X_df_col.values)\nX_df_col_som_out","1149c569":"X_df_user_som_out = X_df_user.copy()\nX_df_user_som_out['cls'] = sobj.predict(X_df_user.values)\nX_df_user_som_out","3c4edb96":"X_df_user_som_out.to_csv('som_out_user.csv')\nX_df_col_som_out.to_csv('som_out_col.csv')\ndf_lm.to_csv('som_out_LM.csv')\nres1.to_csv('som_cls_crosstab.csv')","899cdf65":"[WordAndDoc2vec](https:\/\/github.com\/darecophoenixx\/wordroid.sblo.jp\/wiki\/WordAndDoc2vec)"}}