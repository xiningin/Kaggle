{"cell_type":{"766bbd62":"code","690fcc88":"code","83cdee1f":"code","010d8a26":"code","fddd7e75":"code","936cfeb2":"code","267fd9d5":"code","130f9fb2":"code","a9aea801":"code","d7a0d3c1":"code","e11753d3":"code","21c7c6ee":"code","3104ed49":"code","2b8d0f52":"markdown","2865465b":"markdown","97c9af7c":"markdown","1cd9640f":"markdown","f89fb4fb":"markdown","ca064368":"markdown","a59c4cf4":"markdown","b9498b07":"markdown","135a2b16":"markdown"},"source":{"766bbd62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","690fcc88":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt","83cdee1f":"import h2o\nfrom h2o.estimators.gbm import H2OGradientBoostingEstimator\nfrom h2o.automl import H2OAutoML\nh2o.init()","010d8a26":"train_df = h2o.import_file('..\/input\/learn-together\/train.csv')\ntest_df = h2o.import_file('..\/input\/learn-together\/test.csv')","fddd7e75":"test_df.shape","936cfeb2":"train_df[\"Cover_Type\"].describe()","267fd9d5":"#Drop Id columns\ntrain_df = train_df.drop('Id', axis = 1)\n#test_ids = test_df[\"Id\"].squeeze() \n#test_df = test_df.drop('Id', axis = 1)\n\n# Make target as categorical\ntrain_df['Cover_Type'] = train_df['Cover_Type'].asfactor()\n\n#Predictor Columns\nx_col = train_df.columns\nx_col = x_col.remove('Cover_Type')\n\ny_col = 'Cover_Type'\n\n#Split data into training and validation\nd = train_df.split_frame(ratios = [0.8], seed = 42)\nhf_train = d[0] # using 80% for training\nhf_valid = d[1] # rest 20% for testing","130f9fb2":"aml = H2OAutoML(seed = 42, max_models=10, max_runtime_secs=1800, verbosity='info')\naml.train(x = x_col, y = y_col, training_frame = hf_train, validation_frame=hf_valid)","a9aea801":"print(aml.leaderboard)","d7a0d3c1":"print(aml.leader)","e11753d3":"from sklearn.metrics import accuracy_score, f1_score\n\npreds = aml.leader.predict(hf_valid)\naccuracy_score(preds['predict'].as_data_frame(), hf_valid['Cover_Type'].as_data_frame())","21c7c6ee":"h2o.save_model(aml.leader)","3104ed49":"#Output\npreds = aml.leader.predict(test_df)\n\n# Save test predictions to file\noutput = pd.DataFrame({'Id': test_df[\"Id\"].as_data_frame().squeeze(),\n                       'Cover_Type': preds['predict'].as_data_frame().squeeze()})\n\noutput.to_csv('submission.csv', index=False)","2b8d0f52":"Target column \"Cover_Type\" is integer so we convert it to factor. We split dataset into Training and Validation set.","2865465b":"### Start H2O\nImport the h2o Python module and H2OAutoML class and initialize a local H2O cluster.","97c9af7c":"### Leaderboard\n\nOnce the model is trained, you can access the Leaderboard. The leader model is stored at aml.leader and the leaderboard is stored at aml.leaderboard The leaderboard stores the snapshot of the top models. ","1cd9640f":"For classification, the response should be encoded as categorical (aka. \"factor\" or \"enum\"). Let's take a look.","f89fb4fb":"## Introduction\nAutoML is a function in H2O that automates the process of building large number of models, with the goal of finding the \u201cbest\u201d model without any prior knowledge. In this article, we will look into AutoML from H2O.ai.","ca064368":"### Run AutoML\nFor the AutoML function, we just specify how long we want to train for and we\u2019re set. For this example, we will train for 300 seconds.","a59c4cf4":"### Save Leader Model","b9498b07":"### Prediction (Output)","135a2b16":"### Load Data\n\nWe load the train and test data on H2O."}}