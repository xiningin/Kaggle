{"cell_type":{"30eff348":"code","c83a6b7c":"code","fa95d9d3":"code","40199484":"code","2b160204":"code","28340158":"code","821409e1":"code","e637e994":"code","26c817fe":"code","dc855406":"code","87cac0c6":"markdown","cb516003":"markdown","edbacee0":"markdown","83bb6b6f":"markdown","3b4087f7":"markdown","f9956da8":"markdown","b0ad31fa":"markdown","7cb5c85e":"markdown","1bc4fd96":"markdown"},"source":{"30eff348":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Flatten,Dense,Conv2D,MaxPooling2D,ZeroPadding2D,Dropout\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nprint(tf.__version__)","c83a6b7c":"img_width=64\nimg_height=64","fa95d9d3":"datagen=ImageDataGenerator(1\/255.0,validation_split=0.2)","40199484":"train_data_generator=datagen.flow_from_directory(directory=\"..\/input\/handwritten-digit-classification\/database\",\n                                                 target_size=(img_width,img_height),\n                                                 class_mode='categorical',\n                                                 batch_size=16,\n                                                 subset='training'\n)\nprint(len(train_data_generator))","2b160204":"validation_data_generator=datagen.flow_from_directory(directory=\"..\/input\/handwritten-digit-classification\/database\",\n                                                 target_size=(img_width,img_height),\n                                                 class_mode='categorical',\n                                                 batch_size=16,\n                                                 subset='validation'\n)","28340158":"train_data_generator.labels","821409e1":"model=Sequential()\nmodel.add(Conv2D(30, (3, 3),input_shape=(img_width,img_height,3),activation=\"relu\"))\n\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(30, (3, 3),activation=\"relu\"))\n\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Flatten())  # this converts our 3D feature maps to 1D feature vectors\n\nmodel.add(Dense(64))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(10,activation=\"softmax\"))\n\nmodel.summary()\n","e637e994":"model.compile(loss='categorical_crossentropy',\n              optimizer='adam',\n              metrics=['accuracy'])","26c817fe":"history=model.fit_generator(generator=train_data_generator,\n                            steps_per_epoch=len(train_data_generator),\n                            epochs=5,\n                            validation_data=validation_data_generator,\n                            validation_steps=len(validation_data_generator)\n                           )\nmodel.save(\"weight1.h5\")","dc855406":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epochs')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()\n\n# summarize history for loss\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epochs')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","87cac0c6":"# Thank for reading my Notebook If you like this please upvoted","cb516003":"# Training data creation","edbacee0":"# Import necessary Library","83bb6b6f":"* Scalling all the images","3b4087f7":"# Model Accuracy","f9956da8":"# Training Convolutional Neural Network","b0ad31fa":"# Introduction\n*           In this dataset you can learn how to classify the images using Convolutional Neural Network.CNN was implemented using keras","7cb5c85e":"* Resize all the images into same size because whenever we are training a Convolutional neural network we have to use the image in a same size","1bc4fd96":"# Hand Written Digits Classifications\n* Introduction\n* Import necessary Library\n* Training  Convolutional Neural Network \n* Model Accuracy\n"}}