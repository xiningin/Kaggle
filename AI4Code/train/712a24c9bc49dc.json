{"cell_type":{"2122eb15":"code","dda8c67b":"code","a6a92272":"code","0f248022":"code","36c8b049":"code","c6019e90":"code","ef6176ad":"code","ac02c3bf":"code","3313561a":"code","0f50352d":"code","64aad6c7":"code","f000497d":"code","a060b504":"code","66c8b5ba":"code","d9010c43":"code","ba0720fa":"code","ac0b273e":"code","d668d764":"code","f3f0b0ba":"code","3a3e5b13":"code","7a01f6a3":"code","5e19de14":"code","068255ac":"code","6ffc19dc":"markdown"},"source":{"2122eb15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dda8c67b":"import numpy as np\nimport pandas as pd\n\nimport sklearn.model_selection as model_selection\n\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_transformer\n\n\n#For the missing values \nfrom sklearn.impute import KNNImputer","a6a92272":"# Binning and creating Dummy Variables\nfrom sklearn.feature_selection import SelectKBest, chi2\nfrom sklearn.preprocessing import KBinsDiscretizer","0f248022":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","36c8b049":"train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\nsub_test = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","c6019e90":"train.head()","ef6176ad":"train.tail()","ac02c3bf":"y = train['SalePrice']\nX = train.drop(['SalePrice','Id'], axis = 1)","3313561a":"X_train, X_test, y_train, y_test = model_selection.train_test_split(X,y,test_size=0.2, random_state = 200)","0f50352d":"numerical_features = [ c for c,dtype in zip(X.columns, X.dtypes) if dtype.kind in ['i','f']]\n\nprint('Numerical : ' + str(numerical_features))","64aad6c7":"# Building Pipeline","f000497d":"preprocessor = make_column_transformer(\n    (make_pipeline(\n    KNNImputer(n_neighbors=10),\n    KBinsDiscretizer(n_bins=6),\n    SelectKBest(chi2, k=15),\n    ), numerical_features)\n)","a060b504":"regModel = make_pipeline(preprocessor, LinearRegression())","66c8b5ba":"# Fit Model","d9010c43":"regModel.fit(X_train, y_train)","ba0720fa":"# Check Accuracy","ac0b273e":"y_train_pred = regModel.predict(X_train)\ny_test_pred = regModel.predict(X_test)","d668d764":"print(f'Train RMSE : {np.sqrt(mean_squared_error(y_train,y_train_pred)):.0f}')\nprint(f'Test RMSE : {np.sqrt(mean_squared_error(y_test,y_test_pred)):.0f}')","f3f0b0ba":"# make submission","3a3e5b13":"y_sub_pred = regModel.predict(sub_test.drop(['Id'], axis = 1))","7a01f6a3":"submission_df = pd.DataFrame({'Id':sub_test['Id'], 'SalePrice': y_sub_pred})","5e19de14":"submission_df.to_csv('Reg_Model_pipline.csv', index= False)","068255ac":"submission_df.head()","6ffc19dc":"We have to split the data into train and test "}}