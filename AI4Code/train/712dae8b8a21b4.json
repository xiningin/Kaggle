{"cell_type":{"460f6177":"code","73198425":"code","68234fdf":"code","7aa4e511":"code","b1236df5":"code","7736d510":"code","fb7fb78c":"code","18b5eb20":"code","fbd103f4":"code","68e4b254":"code","5f465f2a":"code","b2b53cf6":"code","2cabf5b5":"code","8b8dcc16":"code","07ccc4ab":"code","c957fc6a":"code","e032fcbf":"code","53ee1ee3":"code","9b6bde5b":"code","5fbe1995":"code","f6afca62":"code","f21425f7":"code","ffd713dc":"code","da2938f7":"code","42680d65":"code","0df6a526":"code","63a0d0b7":"code","8a2f2324":"code","3ea3c320":"code","bb6ebe9d":"code","47ae995a":"code","3263077c":"code","57f0794b":"code","d0e3fd87":"code","4aaa032f":"code","933d98f6":"code","2d52a5a1":"code","c61bdd1a":"code","9d0b1d98":"code","13cfda92":"markdown","e54a972f":"markdown","9b78f4ad":"markdown"},"source":{"460f6177":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","73198425":"import numpy as np\nimport pandas as pd\nimport scipy\nfrom sklearn.feature_extraction import DictVectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import Ridge\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\n\n%matplotlib inline\nfrom matplotlib import pyplot as plt","68234fdf":"# \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u043f\u0443\u0442\u044c \u043a \u0434\u0430\u043d\u043d\u044b\u043c \ntrain_df = pd.read_csv(\"..\/input\/howpop\/howpop_train.csv\")\ntest_df  = pd.read_csv(\"..\/input\/howpop\/howpop_test.csv\")","7aa4e511":"train_df.head(5).T","b1236df5":"train_df","7736d510":"train_df.shape, test_df.shape","fb7fb78c":"train_df['published'].apply(lambda ts: pd.to_datetime(ts).value).plot();","18b5eb20":"train_df.corr()","fbd103f4":"[abs(i) for i in np.array(train_df.corr()).flatten() \n if (i > 0.9) & (i < 1)]","68e4b254":"train_df","5f465f2a":"train_df.info()","b2b53cf6":"# \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043ay published \u043a \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0443\ntrain_df['published'] = train_df['published'].apply(pd.to_datetime)\ntest_df['published'] = test_df['published'].apply(pd.to_datetime)","2cabf5b5":"train_df.published.apply(lambda ts: pd.to_datetime(ts).year).value_counts()","8b8dcc16":"features = ['author', 'flow', 'domain','title']\ntrain_size = int(0.7 * train_df.shape[0])","07ccc4ab":"len(train_df), train_size","c957fc6a":"X, y = train_df.loc[:, features],  train_df['favs_lognorm'] #\u043e\u0442\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043e\u0442 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n\nX_test = test_df.loc[:, features]","e032fcbf":"X_train, X_valid = X.iloc[:train_size, :], X.iloc[train_size:,:]\n\ny_train, y_valid = y.iloc[:train_size], y.iloc[train_size:]","53ee1ee3":"vectorizer_title = TfidfVectorizer(min_df=3, max_df=0.3, ngram_range=(1, 3))\nX_train_title = vectorizer_title.fit_transform(X_train['title'])\nX_valid_title = vectorizer_title.transform(X_valid['title'])\nX_test_title = vectorizer_title.transform(X_test['title'])","9b6bde5b":"X_train_title.shape","5fbe1995":"#\u041c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0432 \u0432\u0438\u0434\u0435 {'\u0442\u0435\u0440\u043c\u0438\u043d': \u0438\u043d\u0434\u0435\u043a\u0441 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430,...}\nvectorizer_title.vocabulary_\n#\u0417\u0434\u0435\u0441\u044c \u0442\u0430\u043a \u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u043b\u043e\u0432\u0430\u0440\u044c\n#\u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435 \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u0438 \u0434\u043b\u044f TfidfVectorizer \u0441 analyzer='word' \u0438 analyzer='char'\nvectorizer_title_ch.vocabulary_","f6afca62":"feats = ['author', 'flow', 'domain']\nX_train[feats][:5]","f21425f7":"X_train[feats][:5].fillna('-')","ffd713dc":"#\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0433\u0434\u0435 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (\u0438\u043c\u0435\u043d\u043d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c),\n#\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u0438 \u0432 \u0432\u0438\u0434\u0435 '\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435_\u043a\u043e\u043b\u043e\u043d\u043a\u0438':'\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435'\nX_train[feats][:5].fillna('-').T.to_dict()","da2938f7":"#\u0412 DictVectorizer \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0432 \u0432\u0438\u0434\u0435 '\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435_\u043a\u043e\u043b\u043e\u043d\u043a\u0438':'\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435',\n#\u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c .values()\nX_train[feats][:5].fillna('-').T.to_dict().values()","42680d65":"#\u0412 \u0438\u0442\u043e\u0433\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u0430\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0430\ndict_vect = DictVectorizer()\ndict_vect_matrix = dict_vect.fit_transform(X_train[feats][:5].fillna('-').T.to_dict().values())\ndict_vect_matrix","0df6a526":"#\u0412 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0435\u0439\u0441\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0435 5 \u0441\u0442\u0440\u043e\u043a (\u043f\u043e \u0447\u0438\u0441\u043b\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432) \u0438 9 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n#\u0414\u0430\u043b\u0435\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u043f\u043e\u0447\u0435\u043c\u0443 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0438\u043c\u0435\u043d\u043d\u043e 9\ndict_vect_matrix.shape","63a0d0b7":"for col in feats:\n    print(col,len(X_train[col][:5].fillna('-').unique()))","8a2f2324":"#\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u0430\u043c\u0430\u044f \u043f\u0435\u0440\u0432\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f 'author=@DezmASter' - \u0442\u043e \u0435\u0441\u0442\u044c \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 1 \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0430\u0432\u0442\u043e\u0440 @DezmASter\ndict_vect.feature_names_","3ea3c320":"vectorizer_feats = DictVectorizer()\n\nX_train_feats = vectorizer_feats.fit_transform(X_train.loc[:, feats].fillna('-').T.to_dict().values())\nX_valid_feats = vectorizer_feats.transform(X_valid.loc[:, feats].fillna('-').T.to_dict().values())\nX_test_feats = vectorizer_feats.transform(X_test.loc[:, feats].fillna('-').T.to_dict().values())","bb6ebe9d":"X_train_feats.shape","47ae995a":"vectorizer_title_ch = TfidfVectorizer(analyzer='char')\n\nX_train_title_ch = vectorizer_title_ch.fit_transform(X_train['title'])\nX_valid_title_ch = vectorizer_title_ch.transform(X_valid['title'])\nX_test_title_ch = vectorizer_title_ch.transform(X_test['title'])\nX_train_new = scipy.sparse.hstack([X_train_title, X_train_feats, X_train_title_ch])\nX_valid_new = scipy.sparse.hstack([X_valid_title, X_valid_feats, X_valid_title_ch])\nX_test_new =  scipy.sparse.hstack([X_test_title, X_test_feats, X_test_title_ch])","3263077c":"%%time\nmodel1 = Ridge(alpha=0.1, random_state=1)\nmodel1.fit(X_train_new, y_train)","57f0794b":"train_preds1 = model1.predict(X_train_new)\nvalid_preds1 = model1.predict(X_valid_new)\n\nprint('\u041e\u0448\u0438\u0431\u043a\u0430 \u043d\u0430 \u0442\u0440\u0435\u0439\u043d\u0435',mean_squared_error(y_train, train_preds1))\nprint('\u041e\u0448\u0438\u0431\u043a\u0430 \u043d\u0430 \u0442\u0435\u0441\u0442\u0435',mean_squared_error(y_valid, valid_preds1))","d0e3fd87":"%%time\nmodel2 = Ridge(alpha=1.0,random_state=1)\nmodel2.fit(X_train_new, y_train)","4aaa032f":"train_preds2 = model2.predict(X_train_new)\nvalid_preds2 = model2.predict(X_valid_new)\n\nprint('\u041e\u0448\u0438\u0431\u043a\u0430 \u043d\u0430 \u0442\u0440\u0435\u0439\u043d\u0435', mean_squared_error(y_train, train_preds2))\nprint('\u041e\u0448\u0438\u0431\u043a\u0430 \u043d\u0430 \u0442\u0435\u0441\u0442\u0435', mean_squared_error(y_valid, valid_preds2))","933d98f6":"%%time\nmodel = Ridge()\nmodel.fit(X_train_new, y_train)\ntest_preds = model.predict(X_test_new)","2d52a5a1":"sample_submission = pd.read_csv('..\/..\/data\/habr_sample_submission.csv', \n                                index_col='url')","c61bdd1a":"sample_submission.head()","9d0b1d98":"ridge_submission = sample_submission.copy()\nridge_submission['favs_lognorm'] = test_preds\n# \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0431\u0435\u0439\u0437\u043b\u0430\u0439\u043d \"\u041f\u0440\u043e\u0441\u0442\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435\"\nridge_submission.to_csv('ridge_baseline.csv') ","13cfda92":"\u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0430\u0442\u0435\u0439 \u043d\u0430 TechMedia (\u0425\u0430\u0431\u0440) \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\n\u0412 \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0412\u0430\u043c \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0441 \u0442\u0435\u043c, \u043a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 TfidfVectorizer \u0438 DictVectorizer, \u0437\u0430\u0442\u0435\u043c \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438 Ridge \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u044f\u0445 \u043d\u0430 \u0425\u0430\u0431\u0440\u0430\u0445\u0430\u0431\u0440\u0435. \u041f\u0440\u043e\u0439\u0434\u044f \u0432\u0441\u0435 \u0448\u0430\u0433\u0438, \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u0435\u0439\u0437\u043b\u0430\u0439\u043d \u0434\u043b\u044f \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f (\u043d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 old \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e). \u041e\u0442\u0432\u0435\u0442\u044c\u0442\u0435 \u043d\u0430 \u0432\u0441\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0432 \u044d\u0442\u043e\u0439 \u0442\u0435\u0442\u0440\u0430\u0434\u043a\u0435 \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442\u044b \u0432 \u0433\u0443\u0433\u043b-\u0444\u043e\u0440\u043c\u0435.\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0436\u0438\u0442\u0435, \u043a\u0430\u043a \u043c\u043d\u043e\u0433\u043e \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a \u043d\u0430\u0431\u0435\u0440\u0435\u0442 \u0441\u0442\u0430\u0442\u044c\u044f, \u0437\u043d\u0430\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0435 \u0442\u0435\u043a\u0441\u0442 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438\n\n\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0430 \u043d\u0430 \u0425\u0430\u0431\u0440\u0435 \u043f\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044e \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438. \u041a\u0430\u043a \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0425\u0430\u0431\u0440\u0430 \u043c\u043e\u0433\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0442\u0430\u0442\u044c\u0438 \u043a \u0441\u0435\u0431\u0435 \u0432 \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u043e\u0435. \u041e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043b\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0443 \u0441\u0442\u0430\u0442\u044c\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a. \u0411\u0443\u0434\u0435\u043c \u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0447\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a, \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u044c\u0435, \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0445\u043e\u0440\u043e\u0448\u043e \u043e\u0442\u0440\u0430\u0436\u0430\u0435\u0442 \u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c.\n\n\u0411\u043e\u043b\u0435\u0435 \u0444\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e, \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0430\u0442\u044c\u0438 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043b\u044e \u0441\u0442\u0430\u0442\u0435\u0439 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a \u043c\u0435\u043d\u044c\u0448\u0435 \u0447\u0435\u043c \u0443 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0430\u0442\u044c\u0438. \u0410 \u0442\u043e\u0447\u043d\u0435\u0435, \u0434\u043e\u043b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0447\u0438\u0441\u043b\u043e\u0432\u0443\u044e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u0441\u0442\u0430\u0442\u044c\u0438 0 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0441\u0442\u0430\u0442\u044c\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430 \u0440\u043e\u0432\u043d\u043e \u0441\u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442 \u0441\u0442\u0430\u0442\u044c\u0438. \u0418 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430 \u0441\u0442\u0430\u0442\u044c\u044f \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441\u043e \u0441\u0440\u0435\u0434\u043d\u0438\u043c, \u0442\u0435\u043c \u0432\u044b\u0448\u0435 \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e.\n\n\u041f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c: \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438 \u0441\u043a\u0430\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435","e54a972f":"#\u041d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0435 \u0432 numpy array \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e .toarray()\ndict_vect_matrix.toarray()","9b78f4ad":"\u0423\u0431\u0435\u0434\u0438\u043c\u0441\u044f, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 published"}}