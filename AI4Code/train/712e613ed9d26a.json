{"cell_type":{"0282906e":"code","ea4b7599":"code","260b26a7":"code","1223ad5d":"code","847325fb":"code","d29d80e4":"code","b8bf3406":"code","ab7d8685":"code","616f8417":"code","a04874be":"code","b12c9b42":"code","38c2249d":"code","dfb8cf4c":"code","1c4d926c":"code","aa75c8e4":"code","25f8b588":"code","f8239db1":"markdown","b588f184":"markdown","53fd67fd":"markdown"},"source":{"0282906e":"# Importing all the necessary modules\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.neighbors import KNeighborsRegressor","ea4b7599":"data = pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")","260b26a7":"data.describe().T","1223ad5d":"data.info()","847325fb":"plt.figure(figsize=(10, 10))\nsns.boxplot(data=data, x=\"region\", y=\"charges\")","d29d80e4":"# data.drop(columns=[\"region\"], axis=1, inplace=True)\ndata = pd.get_dummies(data, columns=[\"sex\", \"smoker\", \"region\"])\ndata.head()","b8bf3406":"data.drop(columns=[\"sex_female\", \"smoker_no\"], inplace=True)","ab7d8685":"data.head()","616f8417":"target = data[\"charges\"]\nfeatures = data.drop(columns=[\"charges\"])","a04874be":"plt.figure(figsize=(10, 10))\nsns.heatmap(features.corr(), annot=True)","b12c9b42":"X_train, X_test, y_train, y_test = train_test_split(features, target, random_state=10, test_size=0.25)","38c2249d":"scaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","dfb8cf4c":"list_of_models = [LinearRegression(), SVR(), DecisionTreeRegressor(), RandomForestRegressor(), GradientBoostingRegressor(), KNeighborsRegressor()]\nfor model in list_of_models:\n    print(model.__str__())\n    print(cross_val_score(model, X_train_scaled, y_train).mean())\n    print()","1c4d926c":"regressor = GradientBoostingRegressor(loss=\"huber\", criterion=\"mae\")\nregressor.fit(X_train_scaled, y_train)\ny_pred = regressor.predict(X_test_scaled)\nprint(\"Cross Val Score:\", cross_val_score(regressor, X_train_scaled, y_train).mean())","aa75c8e4":"print(\"Mean Absolute Error:\", mean_absolute_error(y_test, y_pred))","25f8b588":"plt.figure(figsize=(10, 10))\nplt.scatter(range(len(y_test)), y_test-y_pred)\nplt.xlabel(\"Count\")\nplt.ylabel(\"Y_Test - Y_Pred\")\nplt.title(\"Test Vs Predicted Values\")","f8239db1":"# Removing correlated columns from dataset","b588f184":"# Selecting Gradient Boost Regressor based on the above results","53fd67fd":"# We are going to create a model that best fits the existing dataset and will help us estimate the insurance charges based on different factors like age, sex, bmi, children, smoking habbit and region where they stay."}}