{"cell_type":{"80597c40":"code","2b2a8e9c":"code","43e29994":"code","4b5807fb":"code","7ed06a16":"code","80687d73":"code","7ab4ccaa":"code","231b13af":"code","ddbd7ea1":"code","a116286c":"code","5a2206ae":"code","9b049d34":"code","bd1d2ef8":"code","42f35a5c":"code","67020708":"code","62c1ab53":"code","2d24c3c7":"code","027b4a07":"code","43f8e4ce":"code","17918e3d":"code","2213d242":"code","54721ac4":"code","536e8e6e":"code","0dd6b088":"code","6959744f":"code","7248cc3e":"code","05188aa0":"code","93dc4b90":"markdown","e90a2506":"markdown","74f20a6c":"markdown","6ca09b4c":"markdown","043da5c0":"markdown"},"source":{"80597c40":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly\nplotly.offline.init_notebook_mode(connected=True)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2b2a8e9c":"df = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/names.csv\")\nprint(df.shape)\ndf.head().style.set_properties(**{'background-color':'Aquamarine',\n                                     'color': 'purple'})","43e29994":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'Green',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"2\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Species Names\")\nplt.show()","4b5807fb":"df2 = pd.read_csv('..\/input\/homosapiens-genomic-data\/rankedlineage.csv', low_memory=False)\nprint(df2.shape)\ndf2.head()","7ed06a16":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'Red',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df2[\"root\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Root Names\")\nplt.show()","80687d73":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf1 = pd.read_csv('..\/input\/homosapiens-genomic-data\/uniprot_swiss.tsv', delimiter=',', nrows = nRowsRead)\ndf1.dataframeName = 'uniprot_swiss.csv'\nnRow, nCol = df1.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf1.head().style.set_properties(**{'background-color':'bisque',\n                                     'color': 'purple'})","7ab4ccaa":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'Yellow',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df1[\"Protein names\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Protein Names\")\nplt.show()","231b13af":"df3 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/host.csv\")\nprint(df3.shape)\ndf3.head().style.set_properties(**{'background-color':'CadetBlue',\n                                     'color': 'purple'})","ddbd7ea1":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'Red',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df3[\"2\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Human Vertebrates\")\nplt.show()","a116286c":"df4 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/transcript.csv\")\nprint(df4.shape)\ndf4.head().style.set_properties(**{'background-color':'Chartreuse',\n                                     'color': 'purple'})","5a2206ae":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df4.protein_coding)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","9b049d34":"df5 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/hgnc_complete.csv\", low_memory=False)\nprint(df5.shape)\ndf5.head().style.set_properties(**{'background-color':'BurlyWood',\n                                     'color': 'purple'})","bd1d2ef8":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'skyblue',\n                      height =600,\n                      width = 2800\n                     ).generate(str(df5[\"locus_type\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Locus Type\")\nplt.show()","42f35a5c":"df6 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/typeoftype.csv\")\nprint(df6.shape)\ndf6.head().style.set_properties(**{'background-color':'DarkSalmon',\n                                     'color': 'purple'})","67020708":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'pink',\n                      height =600,\n                      width = 2800\n                     ).generate(str(df6[\"basic type material\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Basic Type Material\")\nplt.show()","62c1ab53":"df7 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/Homo_sapiens.gene_info.csv\")\nprint(df7.shape)\ndf7.head().style.set_properties(**{'background-color':'LavenderBlush',\n                                     'color': 'purple'})","2d24c3c7":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'pink',\n                      height =600,\n                      width = 2800\n                     ).generate(str(df7[\"Full_name_from_nomenclature_authority\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Full Name from Nomenclature Authority\")\nplt.show()","027b4a07":"df8 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/gencode.csv\")\nprint(df8.shape)\ndf8.head().style.set_properties(**{'background-color':'skyblue',\n                                     'color': 'purple'})","43f8e4ce":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df8.Unspecified)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Pastel1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","17918e3d":"df9 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/typematerial.csv\")\nprint(df9.shape)\ndf9.head().style.set_properties(**{'background-color':'LightCoral',\n                                     'color': 'purple'})","2213d242":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'pink',\n                      height =600,\n                      width = 2800\n                     ).generate(str(df9[\"2\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Species Names\")\nplt.show()","54721ac4":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf10 = pd.read_csv('..\/input\/homosapiens-genomic-data\/uniprot-tremble.tsv', delimiter=',', nrows = nRowsRead)\ndf10.dataframeName = 'uniprot-tremble.csv'\nnRow, nCol = df10.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf10.head().style.set_properties(**{'background-color':'bisque',\n                                     'color': 'purple'})","536e8e6e":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf11 = pd.read_csv('..\/input\/homosapiens-genomic-data\/RefSeq_rna (1).tsv', delimiter=',', nrows = nRowsRead)\ndf11.dataframeName = 'RefSeq_rna (1).csv'\nnRow, nCol = df11.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf11.head().style.set_properties(**{'background-color':'bisque',\n                                     'color': 'purple'})","0dd6b088":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf12 = pd.read_csv('..\/input\/homosapiens-genomic-data\/gene.tsv', delimiter=';', nrows = nRowsRead)\ndf12.dataframeName = 'gene.csv'\nnRow, nCol = df12.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf12.head().style.set_properties(**{'background-color':'LightGreen',\n                                     'color': 'purple'})","6959744f":"df13 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/citations.csv\")\nprint(df13.shape)\ndf13.head(2).style.set_properties(**{'background-color':'LightCoral',\n                                     'color': 'purple'})","7248cc3e":"df14 = pd.read_csv(\"\/kaggle\/input\/homosapiens-genomic-data\/delnodes.csv\")\nprint(df14.shape)\ndf9.head().style.set_properties(**{'background-color':'YellowGreen',\n                                     'color': 'purple'})","05188aa0":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.Organism)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","93dc4b90":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRbPib6aALgtXoKFXeqSHH9r7kTWibVRFX45Mys-aNYqvuGh33lzjDVQdGZg2AmNl1rXWQ&usqp=CAU)youtube.com","e90a2506":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTyy3uQa3-4mFCiYyIzNkteTbCLvGnmgAxWLw&usqp=CAU)patents.google.com","74f20a6c":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTKqeowUePeedoQHPnkHmTVDwZDxyirizSJ82anGMcSmdWN5HhRmKJ-ksnho1J4ICEUWwM&usqp=CAU)semanticscholar.org","6ca09b4c":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSYIFgKor6pLqJ_XnYpF8zHK2gqKCf94_w7Jw&usqp=CAU)slideshare.net","043da5c0":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQUOGfKlWOZOUgB3ZNePwOzACg_lzWxiHNl1A&usqp=CAU)xenonstack.com"}}