{"cell_type":{"4718e08c":"code","28603a4b":"code","72762338":"code","ae99fd21":"code","4370050e":"code","c4151782":"code","1d8dec46":"code","a10eeff7":"code","50651e5e":"code","d50488c1":"code","367bc3c7":"code","ead964d9":"code","01c4545d":"code","c8136013":"code","14ee5009":"code","0f24f0f1":"markdown","8ccd7b49":"markdown","e65d1614":"markdown","51c4684f":"markdown","74721b0b":"markdown"},"source":{"4718e08c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","28603a4b":"import os\nos.listdir('..\/input\/goblin-portraits\/images\/')[:5]","72762338":"from PIL import Image","ae99fd21":"imgs_dir = '..\/input\/goblin-portraits\/images\/'\nImage.open(imgs_dir + '00e67f01bb81bea81b8e.jpg')","4370050e":"Image.open(imgs_dir + '0430395cd38013467a15.jpg')","c4151782":"len(os.listdir('..\/input\/goblin-portraits\/images\/'))","1d8dec46":"Image.open(imgs_dir + '0551372bdc314dd9feed.jpg')","a10eeff7":"import numpy as np\nsegmaps_dir = '..\/input\/goblin-portraits\/images\/'\nsegmap = np.array(Image.open(segmaps_dir + '0430395cd38013467a15.jpg'))\nsegmap","50651e5e":"np.unique(segmap)","d50488c1":"np.array(Image.open(imgs_dir + '0430395cd38013467a15.jpg')).shape","367bc3c7":"np.array(Image.open(imgs_dir + '0551372bdc314dd9feed.jpg')).shape","ead964d9":"import matplotlib.pyplot as plt\nfig, axarr = plt.subplots(1, 2, figsize=(12, 4))\naxarr[0].imshow(np.array(Image.open(imgs_dir + '0430395cd38013467a15.jpg')))\naxarr[1].imshow(np.array(Image.open(segmaps_dir + '0430395cd38013467a15.jpg')))","01c4545d":"fig, axarr = plt.subplots(1, 2, figsize=(12, 4))\naxarr[0].imshow(np.array(Image.open(imgs_dir + '0551372bdc314dd9feed.jpg')))\naxarr[1].imshow(np.array(Image.open(segmaps_dir + '0551372bdc314dd9feed.jpg')))","c8136013":"%ls ..\/input\/goblin-portraits\/","14ee5009":"import matplotlib.pyplot as plt\nfig, axarr = plt.subplots(1, 2, figsize=(12, 4))\naxarr[0].imshow(np.array(Image.open(imgs_dir + '0551372bdc314dd9feed.jpg')))\naxarr[1].imshow(np.array(Image.open('..\/input\/goblin-portraits\/images\/0551372bdc314dd9feed.jpg')))","0f24f0f1":"It didn't worked for me. See the original from Aleksey Bilogur on the link below. ","8ccd7b49":"#Data exploration","e65d1614":"#Codes from Aleksey Bilogur  https:\/\/www.kaggle.com\/residentmario\/250-segmented-bob-ross-paintings-starter-kernel\/notebook","51c4684f":"##Codes from Aleksey Bilogur https:\/\/www.kaggle.com\/residentmario\/250-segmented-bob-ross-paintings-starter-kernel\/notebook","74721b0b":"Stick around, I will be right back    @mpwolke"}}