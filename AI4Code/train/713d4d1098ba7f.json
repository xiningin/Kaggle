{"cell_type":{"5643d7ad":"code","3bcd3955":"code","ed823f0b":"code","e8dd3be2":"code","607a0eef":"code","031ea246":"code","c18a9058":"code","93d324ff":"code","5d46653f":"code","45e484c5":"code","d9e2d83c":"code","aeb22938":"code","abdd8e20":"code","d96b9610":"code","95eaddb6":"code","f8f0e01e":"code","4e2ca171":"code","52d619de":"code","8f5b096e":"code","66bcb288":"code","52da2594":"code","1d5c162e":"code","8c8be4da":"code","515bc73d":"code","ad879cde":"code","15ade8d4":"code","28e9c19f":"code","9e696b04":"code","a696746e":"code","9e26e6cd":"code","458a92cd":"code","64e92259":"code","a3888f85":"code","a1af29e8":"code","8b488db5":"code","65f6b8e3":"code","73421028":"code","6b9d8b00":"code","1b65b90f":"code","18d9ce79":"code","a02f1d7e":"code","a2bcbac7":"code","c97822cb":"code","f1fd17a1":"code","b30df4da":"code","8958f1d3":"code","94020c89":"code","9485c551":"code","48ad3aa3":"code","78f5dda1":"code","39b112a1":"code","87b8b0aa":"code","6efaf747":"code","558e7deb":"code","65f65625":"code","167f8237":"code","87dbf13d":"code","ca9a31db":"code","2ab513c2":"code","ad3400e7":"code","1755fb57":"code","d878ea88":"code","784e4987":"code","0fcaf803":"markdown","b818b506":"markdown","c68284c0":"markdown","bffcac1c":"markdown","15d4e147":"markdown","080873bf":"markdown","7279ef97":"markdown","bcc9fc26":"markdown","fb59f427":"markdown","39d6108c":"markdown","9a7a1ef3":"markdown","0a6eebf0":"markdown","75412ed9":"markdown","b7f8b51e":"markdown","81f7709a":"markdown","16075f49":"markdown","ab7904dc":"markdown","cb1578ba":"markdown","085418f1":"markdown","c16fb1c2":"markdown","d4a5e007":"markdown","31f62c9c":"markdown","2cbedd0f":"markdown","080fd66b":"markdown","7eaef207":"markdown","f310db1f":"markdown","8303c761":"markdown","15ba7a75":"markdown","e24750b0":"markdown","aacd47d1":"markdown","7b4768b5":"markdown","3ed17e5c":"markdown","e5feb188":"markdown","e41fc45b":"markdown","32d80104":"markdown","e9313a96":"markdown","40260403":"markdown","568b4513":"markdown","7605d657":"markdown","c03a8ced":"markdown","be8f3a98":"markdown","4c4549c9":"markdown","53efd822":"markdown","989b654a":"markdown","023c9005":"markdown","f09d7283":"markdown","a6688868":"markdown","499afa61":"markdown","3b0eeed4":"markdown","590c3274":"markdown","60ff9b96":"markdown","be52dccb":"markdown","eb01026f":"markdown","407ce809":"markdown","ce940361":"markdown","3c656575":"markdown","e1ab50ac":"markdown"},"source":{"5643d7ad":"import warnings\nimport itertools\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport lightgbm as lgb\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\n\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nsns.set_style('whitegrid')","3bcd3955":"df_choice = pd.read_csv('..\/input\/multipleChoiceResponses.csv')","ed823f0b":"df_choice.head()","e8dd3be2":"print(\"Number of replies to the survey :\", df_choice.shape[0])","607a0eef":"question_names = df_choice.iloc[0]\ndf_choice = df_choice.drop(0, axis=0)","031ea246":"print(question_names['Q9'])","c18a9058":"print(df_choice['Q9'].unique())","93d324ff":"df_choice = df_choice[df_choice['Q9'].notnull()]\ndf_choice = df_choice[df_choice['Q9'] != 'I do not wish to disclose my approximate yearly compensation']","5d46653f":"print(df_choice.shape[0], \"replies left\")","45e484c5":"order = ['0-10,000', '10-20,000', '20-30,000', '30-40,000', '40-50,000', \n  '50-60,000', '60-70,000', '70-80,000', '80-90,000', '90-100,000', \n  '100-125,000', '125-150,000', '150-200,000', '200-250,000', '250-300,000', \n  '300-400,000', '400-500,000', '500,000+']\n\nplt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q9'], order=order)\nplt.xticks(rotation=-45)\nplt.xlabel(\"Yearly Income ($)\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"Yearly income repartition\", fontsize=15)\nplt.show()","d9e2d83c":"dic = {'0-10,000': 5000, '10-20,000': 15000, '20-30,000': 25000, '30-40,000': 35000, \n       '40-50,000': 45000, '50-60,000': 55000, '60-70,000': 65000, '70-80,000': 75000, \n       '80-90,000': 85000, '90-100,000': 95000, '100-125,000': 112500, \n       '125-150,000': 137500, '150-200,000': 175000, '200-250,000': 225000, \n       '250-300,000': 275000, '300-400,000': 350000, '400-500,000': 450000, \n       '500,000+':500000}\n\ndf_choice['target'] = df_choice['Q9'].apply(lambda x: dic[x])","aeb22938":"liars = df_choice[df_choice['Q6'] == \"Student\"]\nliars = liars[liars['target'] >= 500000]","abdd8e20":"liars.head(10)","d96b9610":"df_choice = df_choice[df_choice['target'] < 500000]","95eaddb6":"print(question_names['Q1'])","f8f0e01e":"plt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q1'])\nplt.xlabel(\"Gender\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"Gender Repartition among the Kaggle Community\", fontsize=15)\nplt.show()\nplt.show()","4e2ca171":"plt.figure(figsize=(15,10))\nsns.violinplot(x='Q1', y='target', data=df_choice)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Gender\", fontsize=12)\nplt.title(\"Distribution of the Yearly income for Different Genders\", fontsize=15)\nplt.show()","52d619de":"print(question_names['Q2'])","8f5b096e":"order = ['18-21', '22-24', '25-29', '30-34','35-39', '40-44', '45-49', '50-54', '55-59', '60-69', '70-79', '80+']\nplt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q2'], order=order)\nplt.xlabel(\"Age\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"Age Repartition of Kagglers\", fontsize=15)\nplt.show()","66bcb288":"plt.figure(figsize=(15,10))\nsns.boxplot(x='Q2', y='target', data=df_choice, order=order, showfliers=False)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Age\", fontsize=12)\nplt.title(\"Distribution of the Yearly Income for Age Groups\", fontsize=15)\nplt.show()","52da2594":"print(question_names['Q3'])","1d5c162e":"country_dic = {'Morocco': 'Africa',\n             'Tunisia': 'Africa',\n             'Austria': 'Europe',\n             'Hong Kong (S.A.R.)': 'Asia',\n             'Republic of Korea': 'Asia',\n             'Thailand': 'Asia',\n             'Czech Republic': 'Europe',\n             'Philippines': 'Asia',\n             'Romania': 'Europe',\n             'Kenya': 'Africa',\n             'Finland': 'Europe',\n             'Norway': 'Europe',\n             'Peru': 'South America',\n             'Iran, Islamic Republic of...': 'Middle East',\n             'Bangladesh': 'Asia',\n             'New Zealand': 'Oceania',\n             'Egypt': 'Africa',\n             'Chile': 'South America',\n             'Belarus': 'Europe',\n             'Hungary': 'Europe',\n             'Ireland': 'Europe',\n             'Belgium': 'Europe',\n             'Malaysia': 'Asia',\n             'Denmark': 'Europe',\n             'Greece': 'Europe',\n             'Pakistan': 'Asia',\n             'Viet Nam': 'Asia',\n             'Argentina': 'South America',\n             'Colombia': 'South America',\n             'Indonesia': 'Oceania',\n             'Portugal': 'Europe',\n             'South Africa': 'Africa',\n             'South Korea': 'Asia',\n             'Switzerland': 'Europe',\n             'Sweden': 'Europe',\n             'Israel': 'Middle East',\n             'Nigeria': 'Africa',\n             'Singapore': 'Asia',\n             'I do not wish to disclose my location': 'dna',\n             'Mexico': 'North America',\n             'Ukraine': 'Europe',\n             'Netherlands': 'Europe',\n             'Turkey': 'Asia',\n             'Poland': 'Europe',\n             'Australia': 'Oceania',\n             'Italy': 'Europe',\n             'Spain': 'Europe',\n             'Japan': 'Asia',\n             'France': 'Europe',\n             'Canada': 'North America', \n             'United Kingdom of Great Britain and Northern Ireland': 'Europe',\n             'Germany': 'Europe',\n             'Brazil': 'South America',\n             'Russia': 'Russia',\n             'Other': 'Other',\n             'China': 'China',\n             'India': 'India',\n             'United States of America': 'USA'}","8c8be4da":"df_choice['Q3'] = df_choice['Q3'].apply(lambda x: country_dic[x])","515bc73d":"plt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q3'], order=df_choice['Q3'].value_counts().index)\nplt.xticks(rotation=-70)\nplt.xlabel(\"Country \/ Region\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"Where are Kagglers from ?\", fontsize=15)\nplt.show()","ad879cde":"plt.figure(figsize=(15,10))\nsns.violinplot(x='Q3', y='target', data=df_choice, order=df_choice['Q3'].value_counts().index)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Nationality\", fontsize=12)\nplt.title(\"Distribution of the Yearly Income for Different Regions\", fontsize=15)\nplt.show()","15ade8d4":"df = df_choice[df_choice['Q1'] != \"Prefer not to say\"]\ndf = df[df['Q1'] != \"Prefer to self-describe\"]","28e9c19f":"plt.figure(figsize=(15,10))\nsns.violinplot(x='Q3', y='target', hue='Q1', data=df, split=True, order=df_choice['Q3'].value_counts().index)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Nationality\", fontsize=12)\nplt.title(\"Illustration of the Gender Wage Gap for Different Regions\", fontsize=15)\nplt.show()","9e696b04":"print(question_names['Q4'])","a696746e":"order = ['Doctoral degree', 'Master\u2019s degree', 'Bachelor\u2019s degree',  'Some college\/university study without earning a bachelor\u2019s degree',\n         'Professional degree', 'No formal education past high school', 'I prefer not to answer']\n\nplt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q4'], order=order)\nplt.xticks(rotation=-70)\nplt.xlabel(\"Studies\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"Which Level of Study do Kagglers Have ?\", fontsize=15)\nplt.show()","9e26e6cd":"plt.figure(figsize=(15,10))\nsns.violinplot(x='Q4', y='target', data=df_choice, order=order)\nplt.xticks(rotation=-70)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Nationality\", fontsize=12)\nplt.title(\"Distribution of the Yearly Income for Different Levels of Study\", fontsize=15)\nplt.show()","458a92cd":"df = df[df['Q3'] == 'USA']\n\nplt.figure(figsize=(15,10))\nsns.violinplot(x='Q4', y='target', hue='Q1', data=df, split=True, order=order)\nplt.xticks(rotation=-70)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Studies\", fontsize=12)\nplt.title(\"Illustration of the Gender Wage Gap for Different Levels of Education in the USA\", fontsize=15)\nplt.show()","64e92259":"print(question_names['Q5'])","a3888f85":"plt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q5'], order=df_choice['Q5'].value_counts().index)\nplt.xticks(rotation=-80)\nplt.xlabel(\"Major\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"What's Kagglers' Fields of Study ?\", fontsize=15)\nplt.show()","a1af29e8":"plt.figure(figsize=(15,10))\nsns.violinplot(x='Q5', y='target', data=df_choice, order=df_choice['Q5'].value_counts().index)\nplt.xticks(rotation=-80)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Major\", fontsize=12)\nplt.title(\"Distribution of the Yearly Income for Different Fields of Study\", fontsize=15)\nplt.show()","8b488db5":"print(question_names['Q6'])","65f6b8e3":"plt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q6'], order=df_choice['Q6'].value_counts().index)\nplt.xticks(rotation=-70)\nplt.xlabel(\"Profession\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"What's Kagglers' Job ?\", fontsize=15)\nplt.show()","73421028":"plt.figure(figsize=(15,10))\nsns.boxplot(x='Q6', y='target', data=df_choice, order=df_choice['Q6'].value_counts().index, showfliers=False)\nplt.xticks(rotation=-70)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Profession\", fontsize=12)\nplt.title(\"Distribution of the Yearly Income for Different Types of Jobs\", fontsize=15)\nplt.show()","6b9d8b00":"plt.figure(figsize=(15,10))\nsns.violinplot(x='Q6', y='target', hue='Q1', data=df, split=True, order=df['Q6'].value_counts().index)\nplt.xticks(rotation=-70)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Profession\", fontsize=12)\nplt.title(\"Illustration of the Gender Wage Gap for Different Professions in the USA\", fontsize=15)\nplt.show()","1b65b90f":"# Mean salary of each job\nmeans = df.groupby(['Q6'])['target'].mean().sort_values(ascending=False)\n\n# Women proportion of each job\nd = {\"Female\":1, \"Male\":0}\ndf['Q1'] = df['Q1'].apply(lambda x: d[x])\nwomen_perc = df.groupby(['Q6'])['Q1'].mean()\n\n# Joining\ndf_job = pd.concat([means, women_perc], axis=1)","18d9ce79":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_job.index, y='Q1', data=df_job, order=means.index)\nplt.xticks(rotation=-70)\nplt.ylabel(\"Women proportion\", fontsize=12)\nplt.xlabel(\"Profession\", fontsize=12)\nplt.title(\"Percentage of Women in Jobs, Sorted by Average Salary in the USA \", fontsize=15)\nplt.show()","a02f1d7e":"# Linear regression\nz = np.polyfit(df_job['Q1'], df_job['target'], 1)\np = np.poly1d(z)\n\nplt.figure(figsize=(15,10))\nplt.scatter(df_job['Q1'], df_job['target'], label='Samples')\nplt.plot(np.arange(0, 0.6, 0.01), p(np.arange(0, 0.6, 0.01)), linestyle=':', label='Trend')\nplt.ylabel(\"Average Yearly Income of the Job ($)\", fontsize=12)\nplt.xlabel(\"Percentage of Women in the Job\", fontsize=12)\nplt.title(\"In the USA, the Higher Earning the Job, the fewer Women\", fontsize=15)\nplt.legend()\nplt.show()","a2bcbac7":"print(question_names['Q7'])","c97822cb":"plt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q7'], order=df_choice['Q7'].value_counts().index)\nplt.xticks(rotation=-70)\nplt.xlabel(\"Industry of Employer\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"Where do people work ?\", fontsize=15)\nplt.show()","f1fd17a1":"plt.figure(figsize=(15,10))\nsns.boxplot(x='Q7', y='target', data=df_choice, order=df_choice['Q7'].value_counts().index, showfliers=False)\nplt.xticks(rotation=-70)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Industry\", fontsize=12)\nplt.title(\"Distribution of the Yearly Income for Different Industries of Employment\", fontsize=15)\nplt.show()","b30df4da":"question_names['Q8']","8958f1d3":"order = ['0-1', '1-2', '2-3',  '3-4', '4-5', '5-10', '10-15', '15-20', '20-25', '25-30', '30 +']\n\nplt.figure(figsize=(15,10))\nsns.countplot(df_choice['Q8'], order=order)\nplt.xlabel(\"Years of Experience\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.title(\"How Experienced are Kagglers in their Current Jobs ?\", fontsize=15)\nplt.show()","94020c89":"plt.figure(figsize=(15,10))\nsns.violinplot(x='Q8', y='target', data=df_choice, order=order)\nplt.xticks(rotation=-70)\nplt.ylabel(\"Yearly Income ($)\", fontsize=12)\nplt.xlabel(\"Profession\", fontsize=12)\nplt.title(\"Distribution of the Yearly Income in Function of the Years of Experience\", fontsize=15)\nplt.show()","9485c551":"features = [\"Q1\", \"Q2\", \"Q3\", \"Q4\", \"Q5\", \"Q6\", \"Q7\", \"Q8\"]\ntarget = [\"target\"]\n\ndf = df_choice[features + target]\n\ndf = df.fillna('?')","48ad3aa3":"dic_age = {'30-34': 32, '22-24': 23, '35-39': 37, '18-21': 19.5, '40-44': 42, '25-29': 27, '55-59': 57, '60-69': 64.5, '45-49': 47, '50-54': 52, '70-79': 74.5, '80+': 80}\ndic_exp = {'5-10': 7.5, '0-1': 0.5, '10-15': 12.5, '3-4': 3.5, '1-2': 1.5, '2-3': 2.5, '15-20': 17.5, '4-5': 4.5, '25-30': 27.5, '20-25': 22.5, '30 +': 30, '?': 0}\n\ndf['Q2'] = df['Q2'].apply(lambda x: dic_age[x])\ndf['Q8'] = df['Q8'].apply(lambda x: dic_exp[x])\n\nfor q in [\"Q1\", \"Q3\", \"Q4\", \"Q5\", \"Q6\", \"Q7\"]:\n    df[q] = df[q].astype('category')\n    \ncat_columns = df.select_dtypes(['category']).columns\ndf[cat_columns] = df[cat_columns].apply(lambda x: x.cat.codes)","78f5dda1":"df = df.rename(index=str, columns={\"Q1\": 'Gender', \"Q2\": 'Age', \"Q3\": 'Country', \"Q4\": 'Education', \"Q5\": 'Major', \"Q6\": 'Profession', \"Q7\": 'Industry', \"Q8\": 'Experience'})","39b112a1":"classes = ['less than 10k', 'between 10k and 30k', 'between 30k and 50k', 'between 50k and 80k', 'between 80k and 125k', 'more than 100k']","87b8b0aa":"dic_target = {5000: 0,  \n              15000: 1, 25000: 1, \n              35000: 2, 45000: 2, \n              55000: 3,  65000: 3,  75000: 3,\n              85000: 4, 95000: 4, 112500: 4,\n              137500: 5,  175000: 5, 225000: 5, 275000: 5, 350000: 5,  450000: 5\n             }\n\ndf['target'] = df['target'].apply(lambda x: dic_target[x])","6efaf747":"plt.figure(figsize=(15,10))\nsns.countplot(df['target'])\nplt.xticks(range(0, 7), classes)\nplt.ylabel(\"Count\", fontsize=12)\nplt.xlabel(\"Yearly income ($)\", fontsize=12)\nplt.title(\"Reparition of our New Classes\", fontsize=15)\nplt.show()","558e7deb":"df.head()","65f65625":"df_train, df_test = train_test_split(df, test_size=0.2)","167f8237":"print(f\"Training on {df_train.shape[0]} samples.\")","87dbf13d":"features = ['Gender', 'Age', 'Country', 'Education', 'Major', 'Profession', 'Industry', 'Experience']\n      \ndef run_lgb(df_train, df_test):\n    params = {\"objective\" : \"multiclass\",\n              \"num_class\": 6,\n              \"metric\" : \"multi_error\",\n              \"num_leaves\" : 30,\n              \"min_child_weight\" : 50,\n              \"learning_rate\" : 0.05,\n              \"bagging_fraction\" : 0.7,\n              \"feature_fraction\" : 0.7,\n              \"bagging_seed\" : 420,\n              \"verbosity\" : -1\n             }\n    \n    lg_train = lgb.Dataset(df_train[features], label=(df_train[\"target\"].values))\n    lg_test = lgb.Dataset(df_test[features], label=(df_test[\"target\"].values))\n    model = lgb.train(params, lg_train, 1000, valid_sets=[lg_test], early_stopping_rounds=100, verbose_eval=100)\n    \n    return model","ca9a31db":"model = run_lgb(df_train, df_test)","2ab513c2":"pred_train = model.predict(df_train[features], num_iteration=model.best_iteration)\npred_test = model.predict(df_test[features], num_iteration=model.best_iteration)","ad3400e7":"fig, ax = plt.subplots(figsize=(12,10))\nlgb.plot_importance(model, max_num_features=50, height=0.8, ax=ax)\nax.grid(False)\nplt.ylabel('Feature', size=12)\nplt.xlabel('Importance', size=12)\nplt.title(\"Importance of the Features our LightGBM Model\", fontsize=15)\nplt.show()","1755fb57":"def plot_confusion_matrix(cm, classes, title='Confusion matrix', normalize=False, cmap=plt.cm.Blues):\n    if normalize:\n        cm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n    fmt = '.2f' if normalize else 'd'\n\n    fig, ax = plt.subplots(figsize=(15, 10))\n    ax.imshow(cm, interpolation='nearest', cmap=cmap)\n\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title, size=15)\n    plt.colorbar()\n    plt.grid(False)\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45)\n    plt.yticks(tick_marks, classes)\n\n    thresh = (cm.max()+cm.min()) \/ 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, format(cm[i, j], fmt),\n                 horizontalalignment=\"center\",\n                 color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label', size=12)\n    plt.xlabel('Predicted label', size=12)","d878ea88":"conf_mat_train = confusion_matrix(np.argmax(pred_train, axis=1), df_train[target].values)\n\nplot_confusion_matrix(conf_mat_train, classes, title='Confusion matrix on train data', normalize=True)","784e4987":"conf_mat_test = confusion_matrix(np.argmax(pred_test, axis=1), df_test[target].values)\n\nplot_confusion_matrix(conf_mat_test, classes, title='Confusion matrix on test data', normalize=True)","0fcaf803":"### 2.2 - Age","b818b506":"As expected, North American, Oceanian and Middle East Kagglers earn a bit more. Mostly because life is not cheap the economical system permits high wages.","c68284c0":"**Gender is by far the least important feature ! **\n\nThis does not mean that the gender pay gap does not exist but it does show that this is not what matters when determining the salary of a Kaggler.\n\nThe profession is the most important parameter, and we have shown earlier that higher earning jobs had a higher proportion of men. \n\n\n\nWe also notice that studies (education & major) have little influence on earnings. **It is what you do more than what you did that will determine your income.**\n","bffcac1c":"Only numerical values interest us.","15d4e147":"Top earning jobs are Chief Officer, Manager and Principal Investigator. Which I believe should be jobs held by older people (?).\n\n#### Checking the wage gap in the US in the same profession","080873bf":"### 3.5 Results\n#### Feature importance","7279ef97":"### 2.7 - Industry","bcc9fc26":"Not sure how to deal with the two outliers. Let us keep them as they are.","fb59f427":"Come one, you can't be a student and earn more than 500k a year. But if you do, please tell me the trick. To avoid obvious trolls I will exclude people that indicated earning more than 500k.","39d6108c":"The three categories that stand out are students *(again, well they're not paid)*, Non-profit\/Services and Academics\/Education. Nothing incoherent, as those last two are paid by the state.\n\nI was expecting more contrasted results, but a model can definitely learn something from this.","9a7a1ef3":"#### More about the gender pay gap","0a6eebf0":"### Summary : \n- **1 - Target visualization**\n- **2 - EDA & Gender Wage Gap Analysis**\n- **3 - Model designing & Results**\n\n\n","75412ed9":"### 2.1 - Gender","b7f8b51e":"# Kagglers' Gender Pay Gap & Salary Prediction\n\n#### In this kernel, I will use the answers to the 8 first questions : \n- Gender\n- Age\n- Nationality\n- Education\n- Major\n- Profession\n- Industry of profession\n- Ancienety\n\nTo try to predict the answer to the 9th : **The annual income**.\n\n > #### **I will also tackle the issue of the gender pay gap in this dataset.**\n \n#### **Don't forget to leave an upvote !**","81f7709a":"Once again, logical results. The salary is a strictly increasing function of your experience in the job.","16075f49":"Gender is always an interesting feature. Let's see what we got.","ab7904dc":"### I am going to stop here for the features. I might add more in the future but these should be enough to get some results.","cb1578ba":"The more you study, the more you earn ? It is a bit visible here, but it is not very obvious.","085418f1":"The first line is the name of the question, we store it separately.","c16fb1c2":"Again, this is going to be hard to learn from this, because most jobs are similar. However, students and research assistant are expected to earn less. ","d4a5e007":"It is a bit hard to determine whether what you studied will determine your income. There is no big difference between people who majored Computer Science and in Engineering or Mathematics. ","31f62c9c":"## 3 - Model","2cbedd0f":"Simple feature. Always useful.","080fd66b":"Salaries highly vary depending on the country you work in. I regroup most country by continent \/ region, except for the five most represented ones (USA, India, China, Russia and Brazil)\nNote that Asia mean Asia except India, China and Russia; that North America is Cana and Mexico only; and that South America does not count Brazil.","7eaef207":"### 2.6 - Profession","f310db1f":"Well profession has to determine your salary. At least a little.","8303c761":"As expected, low paid and high paid scientist are the easier to detect. Mostly because the range of high paid person I took is very wide, and because students are easy to detect.","15ba7a75":"## 2 - Features EDA\nI'm going to go through the first questions, checking if they can be useful for the prediction task.","e24750b0":"### 3.1 - Input data","aacd47d1":"The wage gap is visible here, and appears to be higher in Europe and in North America than in Asia. I will focus on the gender pay gap in the USA for the next visualizations. ","7b4768b5":"### 3.3 - Train \/ Test split","3ed17e5c":"### 3.2 - Target\nLet us say we want to predict the income in thousands of USD. I will tackle the problem as a classification one.\nIn fact, a regression one will give a bad accuracy on lower salaries. I believe it is more important to make a distinction between earn 40k and 60k than between earning 200k and 250k.\n\nTherefore I make 6 categories : \n- less than 10k\n- between 10k and 30k\n- between 30k and 50k\n- between 50k and 80k\n- between 80k and 125k\n- more than 100k","e5feb188":"There surely has to be domains that pay better, because more money is involved.","e41fc45b":"### 2.8 - Experience","32d80104":"The older you are, the more you earn. Until you retire. Therefore the distribution is understandable.","e9313a96":"## 0 - Loading data\nWe focus on the multipe choice responses questions, as they are much easier to feed to a model.","40260403":"The repartition is quite logical, however it is going to be complicated to predict lower populated class, and I will have to do some merging. But let us keep it like this for now.\nHowever, we make the target numerical by taking the mean of the interval, for vizualisation purpose","568b4513":"As expected, the distributions are very similar, but perhaps a model can learn a bit from this. I expect more from the next feature.","7605d657":"#### Can we spot obvious trolls ?\nFor instance, students that make half a million a year...","c03a8ced":"So far, so good !","be8f3a98":"Inside a same job, the pay gap seems to be smaller. It is harder to directly come to a conclusion. Overall, men seem to gain more, but women do better as Chief Officer, and approximately as much as men in most jobs.\n\n\nThis and the previous graph leads us to think that men tend to occupy higher earning jobs. Let us verify this.","4c4549c9":"### 3.4 Gradient Boosting\n\nNote that I did not bother tweeking the parameters. The goal here is not to get the better results but to check the importance of each feature.","53efd822":"The distribution of male and female salaries is quite similar so far. I am a bit more concerned about the other categories.","989b654a":"#### Gender wage gap in different countries","023c9005":"We also rename our columns, for easier feature understanding.","f09d7283":"### 2.4 - Education","a6688868":"This *(kind of)* shows what I wanted to. There is still two features so let us not stop here.","499afa61":"### 2.3 - Nationality","3b0eeed4":" ### Tools used :\n - *Pandas* and *numpy* for manipulating the data\n - *Matplotlib* and *Seaborn* for dataviz\n - *LightGBM* for the model\n - *ScikitLearn* for some Machine Learning tools.","590c3274":"It is correlated to age, but I believe it is more precise to predict salary.","60ff9b96":"### 2.5 - Major","be52dccb":"#### *Thanks for reading ! *\nThis took me quite a while to do, hope you enjoyed and learned some stuff!","eb01026f":"#### Confusion Matrices\nWe make sure our model had correct predictions.","407ce809":"We need our classifier to understand our data, therefore we categorize it. However, age and experience have a logical order that we need to keep. We take the average of each interval as the feature.","ce940361":"The studies you did are linked to your income, at least in the beginning of your career.","3c656575":"## 1 - Analyzing our target","e1ab50ac":"This shows that the gender pay gap is not (only) caused by a difference of education in the USA, as there is differencies inside each type of studies. \n\nFurthermore, recent studies have shown that women tend to study more than men in the USA. This is not really the case here because women are under-represented. But the point I'm making is that the length of studies is not the cause of the pay gap."}}