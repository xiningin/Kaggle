{"cell_type":{"9c854318":"code","3c3a83dd":"code","c0ee7cf5":"code","39757e25":"code","2c44d8f8":"code","c7754639":"code","fef44200":"code","55672ae8":"code","accd09fc":"code","c3be02ff":"code","dd031fe9":"code","2c8b0051":"code","0cdba27d":"code","962e9d8c":"code","6140168b":"code","0eb0356e":"code","7eb23c06":"code","8eb402d8":"code","b41f7086":"code","91de925e":"markdown","c0f72b01":"markdown","3633aeca":"markdown","e3584a1f":"markdown","3c1733c0":"markdown","158447f8":"markdown","a1cd8f7a":"markdown","667fbc00":"markdown","39b13f06":"markdown","c971c5ba":"markdown","278920ab":"markdown","7fba3ab5":"markdown","bcbce1c2":"markdown"},"source":{"9c854318":"import pandas as pd\nimport numpy as np\nimport sqlite3 as sql\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3c3a83dd":"# connecting the data base through sqlite\n# conn = sql.connect(\"..\/input\/database.sqlite\")\n# db= \"..\/input\/database.sqlite\"\n# conn=sql.connect(db)\n\n# this query gets the team table joined with the team attributes table \n\n# teams_query=\"\"\" select DISTINCT t.team_long_name team,\n#                                 ta.date date,\n#                                 ta.buildUpPlaySpeed,\n#                                 ta.buildUpPlayDribbling,\n#                                 ta.buildUpPlayPassing \n#                 from Team\n#                    join Team_Attributes ta on ta.team_api_id=t.team_api_id\n#                 \"\"\"\n# teams_df=pd.read_sql_query(teams_query,db)\n# teams_df.to_csv('teams.csv',index=False)\n\nteams_df=pd.read_csv('..\/input\/csv-files\/teams.csv')\nteams_df.tail()","c0ee7cf5":"teams_df.fillna(teams_df.mean(),inplace=True)\nteams_df.info()","39757e25":"teams_df.head()","2c44d8f8":"teams_df.groupby('team').mean().sort_values(['buildUpPlaySpeed','buildUpPlayDribbling','buildUpPlayPassing'],ascending=False).head(5)","c7754639":"gr1=teams_df.groupby('team').mean().sort_values(['buildUpPlaySpeed'],ascending=False).head(5)\ngr1.plot(kind='bar');","fef44200":"gr2=teams_df.groupby('team').mean().sort_values(['buildUpPlayDribbling'],ascending=False).head(5)\ngr2.plot(kind='bar');","55672ae8":"gr3=teams_df.groupby('team').mean().sort_values(['buildUpPlayPassing'],ascending=False).head(5)\ngr3.plot(kind='bar');","accd09fc":"# this query gets the palyer and player attributes tables joined them gets the players with most penalties\n\n# players_query='''\n#                 select DISTINCT p.player_name,penalties from player p\n#                 join player_attributes pa\n#                 on pa.player_api_id=p.player_api_id\n#                 order by 2 desc\n#                 limit (5)\n#             '''\n# top_penalties_players=pd.read_sql_query(players_query,db)\n# top_penalties_players=top_penalties_players.to_csv('players.csv',index=False)\n\ntop_penalties_players=pd.read_csv('..\/input\/csv-files\/players.csv')\ntop_penalties_players.head()","c3be02ff":"sns.barplot(y=\"player_name\", x=\"penalties\",data=top_penalties_players)\nplt.xlim(80,100)","dd031fe9":"# this query joins country,league,match,team,team attributes tables together \n# and shows the team attributes in every match for both home and away team then write the output to winners.csv file\n\n# winners_query=\"\"\" with sub as (\n#                                 select DISTINCT c.name country,l.name league,ht.team_long_name home_team,at.team_long_name away_team,home_team_goal,away_team_goal,CASE when home_team_goal>away_team_goal then ht.team_long_name when home_team_goal<away_team_goal then at.team_long_name else 'draw' end as Winner,m.date match_date,season,stage,h_ta.date team_atrribute_date,h_ta.chanceCreationPassing,h_ta.chanceCreationCrossing,h_ta.chanceCreationShooting,h_ta.defencePressure,h_ta.defenceAggression,h_ta.defenceTeamWidth,a_ta.date team_atrribute_date,a_ta.chanceCreationPassing,a_ta.chanceCreationCrossing,a_ta.chanceCreationShooting,a_ta.defencePressure,a_ta.defenceAggression,a_ta.defenceTeamWidth from match m \n#                                 join country c on m.country_id=c.id \n#                                 join League l on m.league_id=l.id \n#                                 join team ht on ht.team_api_id=m.home_team_api_id\n#                                 join team at on at.team_api_id=m.away_team_api_id \n#                                 join Team_Attributes h_ta on h_ta.team_api_id=m.home_team_api_id\n#                                 join Team_Attributes a_ta on a_ta.team_api_id=m.away_team_api_id\n#                     )\n#                     select * from sub\n#                     where Winner!='draw'\n#                 \"\"\"\n# winners_df=pd.read_sql_query(winners_query,db)\n# winners_df.to_csv('winners.csv',index=False)\n\nwinners_df=pd.read_csv('..\/input\/csv-files\/winners\/winners.csv')","2c8b0051":"winners_df.head(2)","0cdba27d":"#creating a new column to indicate if the home team scored or no\nhome_scr = []\n\nfor g in winners_df.home_team_goal.tolist():\n    if g > 0:\n        home_scr.append('scored')\n    else:\n        home_scr.append('zero score')\n\nwinners_df['home_scr'] = np.array(home_scr)\n\nwinners_df.head()","962e9d8c":"# filtering the df to get only home team winners and dropping the away team attributes \nwinners_df=pd.read_csv('..\/input\/csv-files\/winners\/winners.csv')\nhome_winners_df=winners_df.query('Winner == home_team')\nhome_winners_df.drop(home_winners_df.columns[17:],axis=1 , inplace=True)\nhome_winners_df.head(3)","6140168b":"group1=home_winners_df.groupby('Winner').mean()\ngroup1.head()","0eb0356e":"sns.pairplot(group1);","7eb23c06":"# filtering the df to get only away team winners and dropping the home team attributes \nwinners_df=pd.read_csv('..\/input\/csv-files\/winners\/winners.csv')\naway_winners_df=winners_df.query('Winner == away_team')\naway_winners_df.drop(away_winners_df.columns[10:17],axis=1 , inplace=True)\naway_winners_df.head(3)","8eb402d8":"group2=away_winners_df.groupby('Winner').mean()\ngroup2.head()","b41f7086":"sns.pairplot(group2);","91de925e":"* Getting the top 10 improved teams in terms of teams attributes over the period and analyzing by each attribute","c0f72b01":"<a id='conclusions'><\/a>\n## Conclusions\n\nThe results here showed the required answers for the questions we had by shaping the needed data frame the best fit the answer of each question.\n* At first we showed the most improved teams in terms of the attributes during the period from 2008 to 2016 \n* Secondly we framed the needed data that gave us the players who had most penalties\n* Finally we used the winning teams data frame and divided it into two data frames home team winners and away team winners so we can a clear relation between the victories and the team attributes in both conitions\n\nSome Challanges and limitations:\n* Many columns in the Match table are empty it would make analysis more accurate if these values were recorded.\n* The DB has many unuseful records and is kind of intensive but sql helped in solving that issue.\n* As the DB has many tables after doing some joins the output csv files were big in size \n\n### Refrences I used\n* Stackoverflow\n* Github\n* Pandas and Seaborn docs\n","3633aeca":"<a id='q2'><\/a>\n### Research Question 2: Which players had the most penalties? ","e3584a1f":"From the figures it's showing that the home teams most effective attributes for winning are:\n* Defence Pressure,  \n* Defence Aggression\n* Defence TeamWidth\n\nAs the positive correlation is clear for each one of them and of course the home team goal also has a positive correlation with the victory.","3c1733c0":"From the figures it's showing that the away teams most effective attributes for winning are:\n* Defence Pressure,  \n* Defence Aggression\n* Defence TeamWidth\n* Chance Creation Shooting\n\nAs the positive correlation is clear for each one of them and of course the away team goal also has a positive correlation with the victory.","158447f8":"This query shows which players had the most penaltites and the most one is **Rickie Lambert**\n\n---","a1cd8f7a":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n<a id='q1'><\/a>\n### Research Question 1: What teams improved the most over the time period?","667fbc00":"### Data Cleaning (Replacing the Null values)","39b13f06":"**These are the most improved teams in terms of attributes in the period for 2008 to 2016 also there are two common teams in more than one attribute result (Falkirk , FC Arouca)**\n\n---","c971c5ba":"<a id='intro'><\/a>\n## Introduction\nThis soccer database comes from Kaggle and is well suited for data analysis and machine learning. It contains data for soccer matches,players, and teams from several European countries from 2008 to 2016. This dataset is quite extensive, and we encourage you to read more about it here.\n\n**note:** I imported the data using sqlite then saved the needed output in csv files for easier analysis so I commented all the sql code after connecting and running the queries\n\nQuestions:\n<ul>\n        <li><a href='#q1'>Q1: What teams improved the most over the time period?<\/a><\/li>\n        <li><a href='#q2'>Q2: Which players had the most penalties?<\/a><\/li>\n        <li><a href='#q3'>Q3: What team attributes lead to the most victories?<\/a><\/li>\n     <\/ul>","278920ab":"\n# Best Improved Teams and Players who had most penalties\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n    <ul>\n        <li><a href='#q1'>Q1: What teams improved the most over the time period?<\/a><\/li>\n        <li><a href='#q2'>Q2: Which players had the most penalties?<\/a><\/li>\n        <li><a href='#q3'>Q3: What team attributes lead to the most victories?<\/a><\/li>\n     <\/ul>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>\n","7fba3ab5":"<a id='q3'><\/a>\n### Research Question 3: What team attributes lead to the most victories?\n","bcbce1c2":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n### General Properties"}}