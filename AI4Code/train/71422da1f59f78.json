{"cell_type":{"9be8d4ae":"code","417db52b":"code","d2cd97d7":"code","e85b20ae":"code","895c20b4":"code","f1ad1569":"code","51cbf6d0":"code","0fbcd463":"code","82fa9a51":"code","5d75bd0f":"code","13da70b4":"code","3300a4c0":"code","3c35db2a":"code","0417589e":"code","207e2d72":"code","c2fa409e":"code","0ca3a028":"code","56150717":"code","969a05ec":"code","4729a3a3":"code","0ed9df39":"code","1cd43ac4":"markdown","47567c5d":"markdown","e3de5111":"markdown","36d5c6be":"markdown","3dde498f":"markdown","b4e96e3a":"markdown","06b5c69a":"markdown","97b630ea":"markdown","ed1c71d5":"markdown","70d993f4":"markdown","f212756b":"markdown","9e4b64d5":"markdown","cf4bde9a":"markdown","bf61a285":"markdown"},"source":{"9be8d4ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","417db52b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# scikit-learn\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import LinearSVC\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder","d2cd97d7":"df = pd.read_csv('..\/input\/Iris.csv')\ndf.head(10)","e85b20ae":"df.info()","895c20b4":"df.columns","f1ad1569":"df.describe(include='all')","51cbf6d0":"df.drop('Id', inplace=True, axis=1)","0fbcd463":"df.head()","82fa9a51":"df.isnull().any()","5d75bd0f":"df['Species'].value_counts()","13da70b4":"sns.pairplot(df, hue='Species', palette='Set2');","3300a4c0":"sns.distplot(df['SepalLengthCm'], color='red');","3c35db2a":"sns.boxplot(df['SepalLengthCm'])","0417589e":"label = LabelEncoder()\ndf['Species'] = label.fit_transform(df['Species'])","207e2d72":"scaler = StandardScaler()\nscaled_df = scaler.fit_transform(df.drop('Species', axis=1))\nX = scaled_df\ny = df['Species'].as_matrix()","c2fa409e":"df.head(12)","0ca3a028":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)","56150717":"clf_lr = LogisticRegression(C=10)\nclf_lr.fit(X_train, y_train)\ny_pred = clf_lr.predict(X_test)\nprint(accuracy_score(y_test, y_pred))","969a05ec":"knn = KNeighborsClassifier()\nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_test)\nprint(accuracy_score(y_test, y_pred))","4729a3a3":"linear_svm = LinearSVC()\nlinear_svm.fit(X_train, y_train)\ny_pred = linear_svm.predict(X_test)\nprint(accuracy_score(y_test, y_pred))","0ed9df39":"svm = SVC()\nsvm.fit(X_train, y_train)\ny_pred = svm.predict(X_test)\nprint(accuracy_score(y_test, y_pred))","1cd43ac4":"# Preparing the data","47567c5d":"### KNN","e3de5111":"### Normalizing features","36d5c6be":"### Logistic Regression","3dde498f":"### Splitting into training and testing sets","b4e96e3a":"Since algorithm only accepts numerical values first we have to encode the 'Species' column using LabelEncoder from scikit-learn ","06b5c69a":"# Inspecting the data","97b630ea":"### Label Encoding","ed1c71d5":"### Linear Support Vector Machine (SVM)","70d993f4":"# Loading the dataset","f212756b":"# Import necessary modules","9e4b64d5":"# Modelling","cf4bde9a":"# Visualizing the data","bf61a285":"### SVM (with 'rbf' kernel)"}}