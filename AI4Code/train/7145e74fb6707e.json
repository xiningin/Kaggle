{"cell_type":{"035f68cd":"code","e1a86414":"code","d775df53":"code","fb096441":"code","b13cfafe":"code","419d070e":"code","6ed8d2bb":"code","75e88817":"code","48df9be6":"code","8519b708":"code","e080f493":"code","4326333a":"code","f72286ca":"code","910c2642":"code","12a46a3a":"code","b0a723b2":"markdown"},"source":{"035f68cd":"import numpy as np \nimport pandas as pd\nimport re\nimport glob\nimport os\nimport sys\nimport json","e1a86414":"root_path = '\/kaggle\/input\/CORD-19-research-challenge\/'\nmetadata_path = f'{root_path}\/metadata.csv'\n\nall_json = glob.glob(f'{root_path}\/**\/*.json', recursive=True)\nlen(all_json)","d775df53":"# load metadata\nmetadata = pd.read_csv(metadata_path)\nmetadata.head()","fb096441":"metadata.sha.isnull().sum()","b13cfafe":"class FileReader:\n    def __init__(self, file_path):\n        with open(file_path) as file:\n            content = json.load(file)\n            self.paper_id = content['paper_id']\n            self.title = content['metadata']['title']\n            self.abstract = []\n            self.body_text = []\n            # Abstract\n            for entry in content['abstract']:\n                self.abstract.append(entry['text'])\n            # Body text\n            for entry in content['body_text']:\n                self.body_text.append(entry['text'])\n            self.abstract = '\\n'.join(self.abstract)\n            self.body_text = '\\n'.join(self.body_text) # could change this if we want to delineate sections\n            \n    def __repr__(self):\n        return f'{self.paper_id}: {self.abstract[:200]}... {self.body_text[:200]}...'\nfirst_row = FileReader(all_json[0])\nprint(first_row)","419d070e":"dict_ = {'paper_id': [], 'title':[], 'abstract': [], 'body_text': []}\nfor idx, entry in enumerate(all_json):\n    if idx % (len(all_json) \/\/ 10) == 0:\n        print(f'Processing index: {idx} of {len(all_json)}')\n    content = FileReader(entry)\n    dict_['paper_id'].append(content.paper_id)\n    dict_['title'].append(content.title)\n    dict_['abstract'].append(content.abstract)\n    dict_['body_text'].append(content.body_text)\ndf_covid = pd.DataFrame(dict_, columns=['paper_id', 'title', 'abstract', 'body_text'])\ndf_covid.head()","6ed8d2bb":"# any true nulls in the data?\ndf_covid.isnull().sum(axis=0)","75e88817":"# quite a few empty titles and abstracts\n(df_covid == '').sum(axis=0)","48df9be6":"# no duplicate paper IDs\ndf_covid['paper_id'].is_unique","8519b708":"sum(df_covid[['title','abstract','body_text']].duplicated())","e080f493":"sum(df_covid['body_text'].duplicated())","4326333a":"# a few dupes - get rid of those\ndf_covid.drop_duplicates('body_text', inplace=True)","f72286ca":"df_covid.shape","910c2642":"full_df = df_covid\\\n    .merge(metadata.rename(columns={'sha':'paper_id'}).drop(['abstract','title'], axis=1), \n           on='paper_id', how='left')\n\nfull_df.head()","12a46a3a":"full_df.drop_duplicates('body_text', inplace=True)\nprint(f\"{full_df.shape[0]} rows in the output dataframe\")\n\nfull_df.to_csv('covid_corpus_33k.csv', index=False)","b0a723b2":"# Clean and export CORD data\nMuch of the JSON loading code was taken from [this notebook](https:\/\/www.kaggle.com\/ivanegapratama\/covid-eda-initial-exploration-tool)."}}