{"cell_type":{"ad0a0ea9":"code","4da7539c":"code","90adb103":"code","0755ae25":"code","5cfbd167":"code","e22b4d6e":"code","b5bfa28c":"code","ddd2b980":"code","e4d3d49d":"code","0f6194e6":"code","1be5c03e":"code","18e0e7b6":"code","6c837f4e":"code","f29006f0":"code","92cf4477":"code","3f458705":"code","34bcb2ac":"code","bfda8cf6":"code","455cbacb":"code","c29e384f":"code","3189e980":"code","a1f79081":"markdown","0943f4b5":"markdown","38a876d4":"markdown","605f5d47":"markdown","8abe5df5":"markdown"},"source":{"ad0a0ea9":"import pandas as pd    # data structure library\nimport numpy as np         # for scientific computing\nimport matplotlib.pyplot as plt      # for ploting in python\nfrom sklearn.model_selection import train_test_split   # to split our dataset into two\nfrom sklearn.linear_model import LogisticRegression  \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import svm","4da7539c":"df = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\ndf.head()","90adb103":"data = df.copy()\n","0755ae25":"encode = LabelEncoder()\ndata['species'] = encode.fit_transform(data['species'])","5cfbd167":"data.head()","e22b4d6e":"x = data[['sepal_length', 'sepal_width', 'petal_length', 'petal_length']]  # features\nx.head()","b5bfa28c":"y = data['species']   # the label","ddd2b980":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)","e4d3d49d":"reg = LogisticRegression() # perform a logistic regression \nreg.fit(x_train, y_train)","0f6194e6":"y_pred = reg.predict(x_test)\ny_pred","1be5c03e":"accuracy_score(y_test, y_pred)","18e0e7b6":"neigh = KNeighborsClassifier(n_neighbors = 4) #KNN algorithm\nneigh.fit(x_train,y_train)","6c837f4e":"yhat = neigh.predict(x_test)","f29006f0":"yhat[0:10]","92cf4477":"accuracy_score(y_test, yhat)","3f458705":"clf = svm.SVC(kernel='rbf')   # support vector machine\nclf.fit(x_train, y_train)","34bcb2ac":"predict_y = clf.predict(x_test)\npredict_y[0:10]","bfda8cf6":"accuracy_score(y_test, predict_y)","455cbacb":"Tree = DecisionTreeClassifier(criterion=\"entropy\", max_depth = 4) # decision tree classifier\nTree.fit(x_train,y_train)","c29e384f":"prediction = Tree.predict(x_test)\nprediction[0:10]","3189e980":"accuracy_score(y_test, prediction)","a1f79081":"To perform classification algorithm on our Iris dataset, first we import the necessary libraries ","0943f4b5":"We pass the data into pandas Dataaframe ","38a876d4":"Now we are ready to split the data","605f5d47":"The support vector machine gave us the best accuracy with an accuracy of  100% ","8abe5df5":"This is my very first project in Data Science. "}}