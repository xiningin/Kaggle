{"cell_type":{"dc5d5e92":"code","39e6f83b":"code","a0d77717":"code","3977fa98":"code","e570da24":"code","7a40ed2e":"code","8b1ad440":"code","12aef907":"code","10af6244":"code","766f9c9a":"code","6bf5c38b":"code","ee65c0b5":"code","3ca262a0":"code","e31f2241":"code","36c636c5":"code","c4a9c789":"code","42dfbd66":"code","e65f8f9b":"code","80eb9e5d":"code","479c45e7":"code","acfc8455":"code","1c64f893":"code","2f1a1f11":"code","be2f275d":"code","49c41d03":"code","43f6db2d":"code","d63e8a4f":"code","16ca17e8":"code","5492b5d0":"code","d79bad3c":"code","89e19de0":"code","cacf8569":"code","aa92abd3":"markdown","452fa50b":"markdown","16b5d85d":"markdown","6d024b78":"markdown","5ed99be5":"markdown","cece9849":"markdown","659086a6":"markdown","add00e5e":"markdown","a6c634a6":"markdown","a83ad73e":"markdown","793d617d":"markdown","b914a9c1":"markdown","2464809e":"markdown","97b22e91":"markdown","37037c58":"markdown","6bc33483":"markdown","747a842b":"markdown","5b6b5031":"markdown","f5a1ebba":"markdown","d4038505":"markdown","a6c37d8d":"markdown","4114020a":"markdown","051debd1":"markdown","fe50456e":"markdown","66a4565c":"markdown","80ff35af":"markdown","3ba367fb":"markdown"},"source":{"dc5d5e92":"import pandas as pd\nimport numpy as np\n\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","39e6f83b":"cust_data = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', sep =  \"\\t\" )","a0d77717":"cust_data","3977fa98":"cust_data.dtypes","e570da24":"cust_data.isna().sum()","7a40ed2e":"cust_data.drop(columns = ['Z_CostContact', 'Z_Revenue'], inplace = True)","8b1ad440":"cust_data['total_amount_spent'] = cust_data['MntWines'] + cust_data['MntFruits'] + cust_data['MntMeatProducts'] + cust_data['MntFishProducts'] + cust_data['MntSweetProducts'] + cust_data['MntGoldProds']","12aef907":"cust_data['toal_accept_offer'] = cust_data['AcceptedCmp1'] + cust_data['AcceptedCmp2'] + cust_data['AcceptedCmp3'] + cust_data['AcceptedCmp4'] + cust_data['AcceptedCmp5']","10af6244":"px.histogram(cust_data, x=\"Marital_Status\", color=\"Marital_Status\", title = \"Number of Marital Status\",width=800, height=400)","766f9c9a":"marital_status_map = {\n    'Married' : 'In relationship',\n    'Together' : 'In relationship',\n    'Single' : 'Not in relationship',\n    'Divorced' : 'Not in relationship',\n    'Widow' : 'Not in relationship',\n    'Alone' : 'Not in relationship',\n    'Absurd' : 'Not in relationship',\n    'YOLO' : 'Not in relationship'\n}\n\ncust_data['Marital_Status'] = cust_data['Marital_Status'].map(marital_status_map)","6bf5c38b":"cust_data['Total_Child'] = cust_data['Kidhome'] + cust_data['Teenhome']\ncust_data.drop(columns = ['Kidhome', 'Teenhome'], inplace = True)\n\ncust_data['Has_Child'] = cust_data['Total_Child'].apply(lambda x : 'Has Child' if x > 0 else 'No Child')","ee65c0b5":"cust_data['Registered_Age'] = pd.to_datetime(cust_data['Dt_Customer']).dt.year - cust_data['Year_Birth']\ncust_data.drop(columns = 'Dt_Customer', inplace = True)","3ca262a0":"cust_data['Num_total_purchase'] = cust_data['NumWebPurchases'] + cust_data['NumCatalogPurchases'] + cust_data['NumStorePurchases']","e31f2241":"cust_data['Avg_spent_per_bill'] = cust_data['total_amount_spent']\/cust_data['Num_total_purchase']","36c636c5":"cust_data['Percent_deal_used'] = (cust_data['NumDealsPurchases']\/cust_data['Num_total_purchase'])*100","c4a9c789":"cust_data[cust_data['Num_total_purchase'] == 0][['NumDealsPurchases', 'Num_total_purchase', 'total_amount_spent']]","42dfbd66":"cust_data = cust_data[cust_data['Num_total_purchase'] != 0]","e65f8f9b":"px.box(cust_data, y = 'Income', width=500, height=500,title = 'Income Distribution')","80eb9e5d":"# Customer profile with outlier data at Income\ncust_data[(cust_data['Income'] == cust_data['Income'].max())].T","479c45e7":"cust_data = cust_data.drop(2233)","acfc8455":"missing_modelling = cust_data.drop(columns =  ['ID', 'Year_Birth'])\n\neducate_oh = pd.get_dummies(missing_modelling['Education'])\nmarit_oh = pd.get_dummies(missing_modelling['Marital_Status'])\nchild_oh = pd.get_dummies(missing_modelling['Has_Child'])\nmissing_modelling.drop(columns = ['Education', 'Marital_Status', 'Has_Child'], inplace = True)\n\nmissing_modelling = pd.concat([missing_modelling, educate_oh, marit_oh, child_oh], axis = 1)","1c64f893":"missing_income = missing_modelling[missing_modelling['Income'].isna()]\nmissing_income.drop(columns = 'Income', inplace = True)\n\nincome_model = missing_modelling[~missing_modelling['Income'].isna()]","2f1a1f11":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\nscaler.fit(income_model[list(income_model.columns)[1:]])\n\nincome_model[list(income_model.columns)[1:]] = scaler.transform(income_model[list(income_model.columns)[1:]])\nmissing_income[list(missing_income.columns)] = scaler.transform(missing_income[list(missing_income.columns)])","be2f275d":"y = income_model[['Income']]\nX = income_model.drop(columns = 'Income')","49c41d03":"from sklearn.model_selection import train_test_split, cross_validate\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 9981)","43f6db2d":"rf_reg = RandomForestRegressor()\n\ncv_result_rf_reg = cross_validate(rf_reg, X, y, cv = 10, scoring = 'neg_root_mean_squared_error')\nprint(\"Mean RMSE from 10 folds is (Random Forest)\", -1*cv_result_rf_reg['test_score'].mean()) ","d63e8a4f":"rf_reg.fit(X, y)\ny_predict = rf_reg.predict(X)\nprint(\"RMSE is \", mean_squared_error(y_predict, y, squared = False))","16ca17e8":"missing_income['Income_predicted'] = rf_reg.predict(missing_income)","5492b5d0":"cust_data = cust_data.join(missing_income[['Income_predicted']])\n\ncust_data['Income'].fillna(cust_data['Income_predicted'], inplace = True)\ncust_data.drop(columns = 'Income_predicted', inplace = True)","d79bad3c":"# Drop un-used columns \ncust_data.drop(columns = ['ID', 'Year_Birth'], inplace = True)","89e19de0":"'''  \n- Drop unnecessary columns out\n- Accepted by campaign 1 - 5 + latest campaign have been combined to total campaign accepted\n- All categorical columns have encoded to one-hot encoding\n'''\ncust_data.drop(columns = ['AcceptedCmp3', 'AcceptedCmp2', 'AcceptedCmp1', 'AcceptedCmp5', 'AcceptedCmp4',\n                         'Response'], inplace = True)\n\neducate_oh = pd.get_dummies(cust_data['Education'])\nmarit_oh = pd.get_dummies(cust_data['Marital_Status'])\nchild_oh = pd.get_dummies(cust_data['Has_Child'])\n\ncust_data.drop(columns = ['Education', 'Marital_Status', 'Has_Child'], inplace = True)\n\ncust_data_model = pd.concat([cust_data, educate_oh, marit_oh, child_oh], axis = 1)","cacf8569":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\n","aa92abd3":"# Data Exploratory Analysis","452fa50b":"# Clustering\nComparing difference types of clustering algorithm.\n- K-Mean Clustering\n- DBSCAN\n- ...\n- ...","16b5d85d":"Data preprocessing for training Income missing model\n- Drop unneccessary columns `ID`, `Year_Birth`\n- Perform one-hot encoder on  `Education`, `Marital_Status`, `Has_Child`","6d024b78":"Drop columns with no variation\n- `Z_CostContact` and `Z_Revenue`","5ed99be5":"## Check Missing Value \n- Only ```Income``` have missing value (24 rows), consider to use Regression model to fill up.","cece9849":"- ```Marital_Status```\nGroup in to 2 Groups = 'In relationship', 'Not in relationship'\n\nThanks @ankitkalauni and @dmitryuarov for initial notebook for cleanup this fields","659086a6":"## Fill missing value of `Income` be regression method.","add00e5e":"Create `Avg_spent_per_bill` by divided the `total_amount_spent` with `Num_total_purchase`","a6c634a6":"Remove outlier on `Income`\n- One data point at 666.66k on `Income`","a83ad73e":"## K-Mean Clustering\n**Pro**\n- Pretty fast\n- Less complexity (Calculate distance between data point and initial center point)\n\n**Cons**\n- Need to select number cluster at first.\n- Initial center points is random, this might lead to inconsistency in producton level.","793d617d":"Seperate target variable and dependence varaibles","b914a9c1":"### Optimize number of clusters with Within-Cluster-Sum-of-Squares (WCSS)\nAnother well-known name is `Elbow` method. General idea is select the cluster number at lowest WCSS.\n\nWCSS is the sum of squares the distance from each datapoint within cluster and all cluster.\n\n![image.png](attachment:bfb0cb88-00c7-475f-9455-ad5d3cd5e19e.png)\n","2464809e":"- Combine number of `Kidhome` and `Teenhome` to be `Total_Child`\n- Create new features `Has_Child`","97b22e91":"Create `Num_total_purchase` by sum `NumWebPurchases`, `NumCatalogPurchases`, `NumStorePurchases`\n\nNegect of `NumDealsPurchases` due to assume that it probably be the subset of `Num_total_purchase`","37037c58":"# Data Preparation for Clustering Modelling","6bc33483":"Create total accept campaign time by combine\n- AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n- AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n- AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n- AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n- AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n- Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\nto be `total_accept_offer`","747a842b":"Seperate missing row for fill up with prediction model later","5b6b5031":"# Clean up Data & Feature Engineering","f5a1ebba":"Create total buy column by combine \n- MntWines: Amount spent on wine in last 2 years\n- MntFruits: Amount spent on fruits in last 2 years\n- MntMeatProducts: Amount spent on meat in last 2 years\n- MntFishProducts: Amount spent on fish in last 2 years\n- MntSweetProducts: Amount spent on sweets in last 2 years\n- MntGoldProds: Amount spent on gold in last 2 years\n\nto be `total_amount_spent`","d4038505":"Remove row that `Num_total_purchase` is 0 but have `total_amount_spent`\n\n-> Suspect error from data collection\n\n","a6c37d8d":"RandomForestRegressor will be used  as machine learning model to learn on Income data, and predict on unseen data for fill up missing Income.\n\n- Overall performance check have done by 10 folds cv. (`MEAN RMSE` = 8751.765)\n- Model to be used in predict missing value will use full dataset. (`RMSE` = 3325.927)\n\n(Ps. This is and quick and dirty version, we can fine tune and select the model for better imputation)","4114020a":"Fill predicted income values back to original missing income column.","051debd1":"Create `Registered_Age` by get the year of `Dt_Customer` subtract with `Year_Birth`","fe50456e":"## Attributes\n\nPeople\n- ID: Customer's unique identifier\n- Year_Birth: Customer's birth year\n- Education: Customer's education level\n- Marital_Status: Customer's marital status\n- Income: Customer's yearly household income\n- Kidhome: Number of children in customer's household\n- Teenhome: Number of teenagers in customer's household\n- Dt_Customer: Date of customer's enrollment with the company\n- Recency: Number of days since customer's last purchase\n- Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\nProducts\n\n- MntWines: Amount spent on wine in last 2 years\n- MntFruits: Amount spent on fruits in last 2 years\n- MntMeatProducts: Amount spent on meat in last 2 years\n- MntFishProducts: Amount spent on fish in last 2 years\n- MntSweetProducts: Amount spent on sweets in last 2 years\n- MntGoldProds: Amount spent on gold in last 2 years\n\nPromotion\n\n- NumDealsPurchases: Number of purchases made with a discount\n- AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n- AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n- AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n- AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n- AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n- Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\nPlace\n\n- NumWebPurchases: Number of purchases made through the company\u2019s web site\n- NumCatalogPurchases: Number of purchases made using a catalogue\n- NumStorePurchases: Number of purchases made directly in stores\n- NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month","66a4565c":"Create `Percent_deal_used` by divided the `NumDealsPurchases` with `Num_total_purchase`","80ff35af":"Scaling the data on non-missing Income dataset for better performance of machine learning model","3ba367fb":"# Read in Dataset and Preliminary Data"}}