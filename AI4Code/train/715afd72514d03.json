{"cell_type":{"85b265a2":"code","b7ef072d":"code","1a6d3a79":"code","9426b3e6":"code","41c5200a":"code","38125adb":"code","f6fe260f":"code","dcec1575":"code","718e3f2e":"code","f41c6ced":"code","1711fa42":"markdown","e00f5a91":"markdown","3239b081":"markdown","3e66609b":"markdown","909e3f6e":"markdown","4bf0e629":"markdown","b86b7199":"markdown","8906309d":"markdown","bc9bc80b":"markdown","5f392af5":"markdown","5d4a950d":"markdown","d25fdd09":"markdown","cf304dd5":"markdown","7eabe62d":"markdown","f29c5115":"markdown","f6639516":"markdown"},"source":{"85b265a2":"!pip install dabl","b7ef072d":"import pandas as pd\nimport numpy as np\nimport dabl","1a6d3a79":"# Read in the house price dataset\ndf = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","9426b3e6":"dabl.plot(df, 'SalePrice')","41c5200a":"from sklearn.datasets import load_wine\nfrom dabl.utils import data_df_from_bunch\n\nwine_bunch = load_wine()\nwine_df = data_df_from_bunch(wine_bunch)\n\ndabl.plot(wine_df, 'target')","38125adb":"import matplotlib.pyplot as plt\n%matplotlib inline\nfrom dabl.datasets import load_adult\nfrom dabl.plot import class_hists\n\ndata = load_adult()\n\n# histograms of age for each gender\nclass_hists(data, \"age\", \"gender\", legend=True)\n# plt.show()","f6fe260f":"titanic = pd.read_csv(dabl.datasets.data_path(\"titanic.csv\"))","dcec1575":"titanic_clean = dabl.clean(titanic, verbose=0)","718e3f2e":"fc = dabl.SimpleClassifier(random_state=0) #dabl Simple Classifier\n\n# Divide data into X and y\nX = titanic_clean.drop(\"survived\", axis=1)\ny = titanic_clean.survived","f41c6ced":"%%time\n\nfc.fit(X, y)","1711fa42":"We need to use dabl.clean before we use the \"SimpleClassifier\" function which will allow us to see which baseline model performs the best","e00f5a91":"dabl allows you to do univariate EDA on the target variable and also bivariate EDA on categorical features v.s. target and numerical features v.s. target","3239b081":"### Target Variable, categorical features v.s. target, numerical features v.s. target (Classification)","3e66609b":"We use the titanic dataset which is already loaded in the dabl package (under .datasets)","909e3f6e":"As you can see, it only took 1.55 seconds to try 4 classifiers and measure the common classification metrics (e.g. roc_auc, f1_macro, accuracy etc.) for each of them. You can see which model has the best baseline. This may save you some time as opposed to you having to fit those 4 models separately which will definitely take a longer time.","4bf0e629":"Currently, it does not support anything for text or image data, but more functions for these type of data are expected to be on the way. Also, functions for model explanability, hyper parameter tuning etc. are being developed at the moment, so future potential of this package is high!","b86b7199":"### Class Distribution","8906309d":"# Intro to dabl Package","bc9bc80b":"## If you found this kernel helpful, please consider upvoting!","5f392af5":"### Read in Libraries","5d4a950d":"### Useful tool for initial model building","d25fdd09":"For machine learning tasks, initial phases of data cleaning, pre-processing and analysis take a long time. dabl packge aims to make this process simple and more automated! It is still under development but some of the functions are already super useful, so I recommend using them! This package was created by Andreas Mueller, a core-developer for our well-known ML package Scikit-learn and also a Principal Research SDE at Microsoft.","cf304dd5":"### Target Variable, categorical features v.s. target, numerical features v.s. target (Regression)","7eabe62d":"In this dataset, we want to predict \"House Prices\", so the feature named 'SalePrice' is our target variable. We want to know how the distribution of the Sales Price looks like and also what kind of relationship different features have with Sales Price.","f29c5115":"The documentation website is as follows:\n\nhttps:\/\/amueller.github.io\/dabl\/dev\/index.html","f6639516":"dabl allows you to examine distributions of different classes of the target variable (in a classification problem)"}}