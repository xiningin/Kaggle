{"cell_type":{"19ebd3ef":"code","2f299556":"code","0e8224ec":"code","d7ac68f3":"code","85895a47":"code","d1db3dc2":"code","89e6ab9b":"code","6032e9d0":"code","33082fde":"code","992190c0":"code","08190620":"markdown","8dbc6e5e":"markdown","01573ba4":"markdown","bb40146e":"markdown","adb015fe":"markdown","903b2521":"markdown","065a6214":"markdown"},"source":{"19ebd3ef":"%config Completer.use_jedi = False\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nfrom collections import Counter\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression, Lasso\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix, plot_confusion_matrix, recall_score, precision_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom sklearn.cluster import KMeans, DBSCAN\nfrom sklearn.feature_selection import chi2, SelectFromModel, SelectKBest\nfrom sklearn.model_selection import GridSearchCV, RandomizedSearchCV, cross_val_score, RepeatedStratifiedKFold\nfrom sklearn.svm import SVC\nfrom imblearn.over_sampling import RandomOverSampler, SMOTE","2f299556":"data = pd.read_csv('..\/input\/lung-cancer-dataset\/lung_cancer_examples.csv')\ndata.head()","0e8224ec":"data = data.drop(['Name', 'Surname'], axis=1)\ndata.head()","d7ac68f3":"labelled_data = data.copy()\n\nlabelled_data['Result'] = labelled_data['Result'].map({0: 'Alive', 1: 'Dead'})\n\nlabelled_data.head()","85895a47":"data.isnull().sum()","d1db3dc2":"for feature in data.columns:\n    print(feature, ':', len(data[feature].unique()))\n    print(feature, ':', data[feature].unique())\n    print()","89e6ab9b":"correlation = data.drop(['Result'], axis=1).corr()\nplt.figure(figsize=(10, 10))\nsns.heatmap(correlation, annot=True)\nplt.show()","6032e9d0":"fig = go.Figure(data=[go.Pie(labels=list(Counter(labelled_data['Result']).keys()),\n                     values=list(Counter(labelled_data['Result']).values()),\n                     title='Result Count Distribution',\n                     name='')])\nfig.update_traces(textfont_size=20)\nfig.update_layout(font=dict(size=18))\n\nfig.show()","33082fde":"features = list(data.drop(['Result'], axis=1).columns)\nfeatures","992190c0":"fig, ax = plt.subplots(len(features), 2, figsize=(14,22))\n\nfor i in range(len(features)):\n    sns.kdeplot(ax=ax[i, 0], x=features[i], hue='Result', data=data, fill = True)\n    sns.boxplot(ax=ax[i, 1], x=features[i], data=data)\nfig.tight_layout(pad=1)\nplt.show()","08190620":"### Observations\n- There is no outlier in the dataset.\n- Patients in area with low AQ are prone to lung cancer.\n- High Alcohol Consumption is directly related to Cancer.","8dbc6e5e":"# Dataset Details\n1. Name, Surname -> Represents the patient name. (of no use)\n2. Age -> Age of the patient.\n3. Smokes -> Smoking level of the patient.\n4. AreaQ -> Air Quality of the area where patient resides. (Ref. from the comment section)\n5. Alkhol -> Alcohol intake level of the patient.\n\n- **Result** -> Patient detected with Lung Cancer.","01573ba4":"# Imports","bb40146e":"### Observations\n- No missing values in the dataset","adb015fe":"### Observations\n- AreaQ is negatively correlated with Alkhol and Smokes.\n- Alkhol is positively correlated with Age and Smokes.","903b2521":"# EDA","065a6214":"### Observations\n- Data is slightly imbalanced but we can skip this as ratio is negligible"}}