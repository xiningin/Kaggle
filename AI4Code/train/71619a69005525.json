{"cell_type":{"2383bd71":"code","074c306f":"code","a08051af":"markdown"},"source":{"2383bd71":"import datetime\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline\nimport json \nimport requests\nfrom pandas.io.json import json_normalize \nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\n\n\nr = requests.get('https:\/\/api.covid19india.org\/raw_data.json')\ndata=r.json()\ndmp=json.dumps(data)\np_obj = json.loads(dmp)\n\ndf = json_normalize(data, 'raw_data', errors='ignore')\ndf['dateannounced'] = pd.to_datetime(df['dateannounced'],format='%d\/%m\/%Y', errors='coerce')\ndf['statuschangedate'] = pd.to_datetime(df['statuschangedate'],format='%d\/%m\/%Y', errors='coerce')\n\ndf['currentstatus']= df['currentstatus'].replace('Migrated', 3) \ndf['currentstatus']= df['currentstatus'].replace('Recovered', 2) \ndf['currentstatus']= df['currentstatus'].replace('Hospitalized', 1) \ndf['currentstatus']= df['currentstatus'].replace('Deceased', 9) \n\n\ndf['currentstatus'] = pd.to_numeric(df['currentstatus'], downcast=\"integer\",errors='coerce')\ndf['currentstatus'] = df['currentstatus'].fillna(0)\n","074c306f":"import pandas as pd\nimport numpy as np\nimport scipy.stats as sp\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression as lm\nimport datetime\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nimport math\nfrom sklearn.preprocessing import PolynomialFeatures\n%matplotlib inline\n\ndf  = df[df.currentstatus==1]\ndf1 = df[df.detectedstate!=\"Maharashtra\"]\ndf2 = df[df.detectedstate==\"Maharashtra\"]\ndf3 = df1.groupby('dateannounced').currentstatus.cumsum(axis=0)\ndf4 = df2.groupby('dateannounced').currentstatus.cumsum(axis=0)\n\n\ndf_mah = df[df.detectedstate==\"Maharashtra\"]\ndf_mah1 = df_mah.groupby('dateannounced').currentstatus.cumsum(axis=0)\n\ndf_mum = df_mah[df_mah.detecteddistrict==\"Mumbai\"]\ndf_mum1 = df_mum.groupby('dateannounced').currentstatus.cumsum(axis=0)\ndf_mum_new = df_mum.groupby('dateannounced').currentstatus.cumsum(axis=0)\n\n\ndf_pun = df_mah[df_mah.detecteddistrict==\"Pune\"]\ndf_pun1 = df_pun.groupby('dateannounced').currentstatus.cumsum(axis=0)\ndf_pun_new = df_pun.groupby('dateannounced').currentstatus.cumsum(axis=0)\n\n#### India Total #####\n\ny=np.array(df1['currentstatus'].dropna().values.cumsum(), dtype=int)\nx=np.array(df1['dateannounced'],dtype=int)\n\nx_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.8,test_size=0.2)\nx_train= x_train.reshape(-1, 1)\ny_train= y_train.reshape(-1, 1)\nx_test = x_test.reshape(-1, 1)\ny_test = y_test.reshape(-1, 1)\n\npoly_features = PolynomialFeatures(degree=3)\nx_train_poly = poly_features.fit_transform(x_train)\n\npoly_model = lm()\npoly_model.fit(x_train_poly, y_train)\n\n\nx_pred = np.linspace(x.min(), x.max()+600000000000000, 200)         \nx_pred = x_pred.reshape(-1, 1)\nx_pred =np.array(x_pred ,dtype='datetime64[ns]')\nx =np.array(x ,dtype='datetime64[ns]')\n\ny_pred = poly_model.predict(poly_features.fit_transform(x_pred))\ny_pred  = [0 if i < 0 else i for i in y_pred]\n\n#### India Total #####\n\n\n#### Maharashtra Total #####\ny_mah=np.array(df_mah['currentstatus'].dropna().values.cumsum(), dtype=int)\nx_mah=np.array(df_mah['dateannounced'].dropna(),dtype=float)\n\n\nx_mah_train,x_mah_test,y_mah_train,y_mah_test=train_test_split(x_mah,y_mah,train_size=0.8,test_size=0.2)\n\nx_mah_train= x_mah_train.reshape(-1, 1)\ny_mah_train= y_mah_train.reshape(-1, 1)\nx_mah_test = x_mah_test.reshape(-1, 1)\ny_mah_test = y_mah_test.reshape(-1, 1)\n\n\nx_mah_test=np.array(x_mah_test,dtype='datetime64[ns]')\n\n\npoly_features = PolynomialFeatures(degree=3)\nx_mah_train_poly = poly_features.fit_transform(x_mah_train)\n\npoly_model = lm()\npoly_model.fit(x_mah_train_poly, y_mah_train)\n\n\n\nx_mah_pred = np.linspace(x_mah.min(), x_mah.max()+600000000000000, 200)         \nx_mah_pred = x_mah_pred.reshape(-1, 1)\nx_mah_pred =np.array(x_mah_pred ,dtype='datetime64[ns]')\nx_mah =np.array(x_mah ,dtype='datetime64[ns]')\ny_mah_pred = poly_model.predict(poly_features.fit_transform(x_mah_pred))\ny_mah_pred  = [0 if i < 0 else i for i in y_mah_pred]\n###### Maharashtra Total #####\n\n\n\n###### Mumbai Total #####\n\ny_mum=np.array(df_mum['currentstatus'].dropna().values.cumsum(), dtype=int)\nx_mum=np.array(df_mum['dateannounced'].dropna(),dtype=float)\n\n\nx_mum_train,x_mum_test,y_mum_train,y_mum_test=train_test_split(x_mum,y_mum,train_size=0.8,test_size=0.2)\n\nx_mum_train= x_mum_train.reshape(-1, 1)\ny_mum_train= y_mum_train.reshape(-1, 1)\nx_mum_test = x_mum_test.reshape(-1, 1)\ny_mum_test = y_mum_test.reshape(-1, 1)\n\n\nx_mum_test=np.array(x_mum_test,dtype='datetime64[ns]')\n\n\npoly_features = PolynomialFeatures(degree=3)\nx_mum_train_poly = poly_features.fit_transform(x_mum_train)\n\npoly_model_mum= lm()\npoly_model_mum.fit(x_mum_train_poly, y_mum_train)\n\n\nx_mum_pred = np.linspace(x_mum.min(), x_mum.max()+600000000000000, 200)         \nx_mum_pred = x_mum_pred.reshape(-1, 1)\nx_mum_pred =np.array(x_mum_pred ,dtype='datetime64[ns]')\nx_mum =np.array(x_mum ,dtype='datetime64[ns]')\ny_mum_pred = poly_model_mum.predict(poly_features.fit_transform(x_mum_pred))\ny_mum_pred  = [0 if i < 0 else i for i in y_mum_pred]\n\n\n###### Mumbai Total #####\n\n###### Pune Total #####\n\n\ny_pun=np.array(df_pun['currentstatus'].dropna().values.cumsum(), dtype=int)\nx_pun=np.array(df_pun['dateannounced'].dropna(),dtype=float)\n\n\nx_pun_train,x_pun_test,y_pun_train,y_pun_test=train_test_split(x_pun,y_pun,train_size=0.8,test_size=0.2)\n\nx_pun_train= x_pun_train.reshape(-1, 1)\ny_pun_train= y_pun_train.reshape(-1, 1)\nx_pun_test = x_pun_test.reshape(-1, 1)\ny_pun_test = y_pun_test.reshape(-1, 1)\n\n\nx_pun_test=np.array(x_pun_test,dtype='datetime64[ns]')\n\n\npoly_features = PolynomialFeatures(degree=3)\nx_pun_train_poly = poly_features.fit_transform(x_pun_train)\n\npoly_model_pun= lm()\npoly_model_pun.fit(x_pun_train_poly, y_pun_train)\n\n\n\nx_pun_pred = np.linspace(x_pun.min(), x_pun.max()+600000000000000, 200)         \nx_pun_pred = x_pun_pred.reshape(-1, 1)\nx_pun_pred =np.array(x_pun_pred ,dtype='datetime64[ns]')\nx_pun =np.array(x_pun ,dtype='datetime64[ns]')\ny_pun_pred = poly_model_pun.predict(poly_features.fit_transform(x_pun_pred))\ny_pun_pred  = [0 if i < 0 else i for i in y_pun_pred]\n\n\n\n#### Pune Total ####\n\n\n\ny1=np.array(df3.fillna(0),dtype=int)\ny2=np.array(df4.fillna(0),dtype=int)\nx1=np.array(df1['dateannounced'].dropna(),dtype=float)\nx2=np.array(df2['dateannounced'].dropna(),dtype=float)\n\n\nx1_train,x1_test,y1_train,y1_test=train_test_split(x1,y1,train_size=0.8,test_size=0.2)\nx1_train= x1_train.reshape(-1, 1)\ny1_train= y1_train.reshape(-1, 1)\nx1_test = x1_test.reshape(-1, 1)\ny1_test = y1_test.reshape(-1, 1)\n\nx2_train,x2_test,y2_train,y2_test=train_test_split(x2,y2,train_size=0.8,test_size=0.2)\nx2_train= x2_train.reshape(-1, 1)\ny2_train= y2_train.reshape(-1, 1)\nx2_test = x2_test.reshape(-1, 1)\ny2_test = y2_test.reshape(-1, 1)\n\npoly_features = PolynomialFeatures(degree=3)\n\nx1_train_poly = poly_features.fit_transform(x1_train)\nx2_train_poly = poly_features.fit_transform(x2_train)\n  \npoly_model1 = lm()\npoly_model1.fit(x1_train_poly, y1_train)\n\npoly_model2 = lm()\npoly_model2.fit(x2_train_poly, y2_train)\n\n\nx1_pred = np.linspace(x1.min(), x1.max()+600000000000000, 200)         \nx1_pred = x1_pred.reshape(-1, 1)\nx1_pred =np.array(x1_pred ,dtype='datetime64[ns]')\nx1 =np.array(x1 ,dtype='datetime64[ns]')\n\nx2_pred = np.linspace(x2.min(), x2.max()+600000000000000, 200)         \nx2_pred = x2_pred.reshape(-1, 1)\nx2_pred =np.array(x2_pred ,dtype='datetime64[ns]')\nx2 =np.array(x2 ,dtype='datetime64[ns]')\n\ny1_pred = poly_model1.predict(poly_features.fit_transform(x1_pred))\ny1_pred  = [0 if i < 0 else i for i in y1_pred]\n\ny2_pred = poly_model2.predict(poly_features.fit_transform(x2_pred))\ny2_pred  = [0 if i < 0 else i for i in y2_pred]\n\n\n\n#### Mumbai New #####\ny_new_mum=np.array(df_mum_new.fillna(0),dtype=int)\nx_new_mum=np.array(df_mum['dateannounced'].dropna(),dtype=float)\n\n\nx_new_mum_train,x_new_mum_test,y_new_mum_train,y_new_mum_test=train_test_split(x_new_mum,y_new_mum,train_size=0.8,test_size=0.2)\nx_new_mum_train= x_new_mum_train.reshape(-1, 1)\ny_new_mum_train= y_new_mum_train.reshape(-1, 1)\nx_new_mum_test = x_new_mum_test.reshape(-1, 1)\ny_new_mum_test = y_new_mum_test.reshape(-1, 1)\npoly_features = PolynomialFeatures(degree=3)\n\nx_new_mum_train_poly = poly_features.fit_transform(x_new_mum_train)\n  \npoly_model_new_mum = lm()\npoly_model_new_mum.fit(x_new_mum_train_poly, y_new_mum_train)\n\n\nx_new_mum_pred = np.linspace(x_new_mum.min(), x_new_mum.max()+600000000000000, 200)         \nx_new_mum_pred = x_new_mum_pred.reshape(-1, 1)\nx_new_mum_pred =np.array(x_new_mum_pred ,dtype='datetime64[ns]')\nx_new_mum =np.array(x_new_mum ,dtype='datetime64[ns]')\n\ny_new_mum_pred = poly_model_new_mum.predict(poly_features.fit_transform(x_new_mum_pred))\ny_new_mum_pred  = [0 if i < 0 else i for i in y_new_mum_pred]\n#### Mumbai New #####\n\n#### Pune New ####\n\n\ny_new_pun=np.array(df_pun_new.fillna(0),dtype=int)\nx_new_pun=np.array(df_pun['dateannounced'].dropna(),dtype=float)\n\n\nx_new_pun_train,x_new_pun_test,y_new_pun_train,y_new_pun_test=train_test_split(x_new_pun,y_new_pun,train_size=0.8,test_size=0.2)\nx_new_pun_train= x_new_pun_train.reshape(-1, 1)\ny_new_pun_train= y_new_pun_train.reshape(-1, 1)\nx_new_pun_test = x_new_pun_test.reshape(-1, 1)\ny_new_pun_test = y_new_pun_test.reshape(-1, 1)\npoly_features = PolynomialFeatures(degree=3)\n\nx_new_pun_train_poly = poly_features.fit_transform(x_new_pun_train)\n  \npoly_model_new_pun = lm()\npoly_model_new_pun.fit(x_new_pun_train_poly, y_new_pun_train)\n\n\nx_new_pun_pred = np.linspace(x_new_pun.min(), x_new_pun.max()+600000000000000, 200)         \nx_new_pun_pred = x_new_pun_pred.reshape(-1, 1)\nx_new_pun_pred =np.array(x_new_pun_pred ,dtype='datetime64[ns]')\nx_new_pun =np.array(x_new_pun ,dtype='datetime64[ns]')\n\ny_new_pun_pred = poly_model_new_pun.predict(poly_features.fit_transform(x_new_pun_pred))\ny_new_pun_pred  = [0 if i < 0 else i for i in y_new_pun_pred]\n\n#### Pune New ####\n\n\n\nfig, (ax, ax_mah, ax_mum, ax_pun) = plt.subplots(1,4,figsize=(30,5),sharey=True)\nfig, (ax1, ax2, ax_new_mum, ax_new_pun) = plt.subplots(1,4,figsize=(30,5),sharey=True)\n\nax.scatter(x_pred, y_pred, color='grey')\nax.scatter(x,y, edgecolor='Blue', facecolor='Blue', alpha=0.7)\nax.set_ylabel('India Total', fontsize=20)\nax.tick_params(labelrotation=45)\nax.grid(b=True, which='major', color='#666666', linestyle='-')\nax.minorticks_on()\nax.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax.legend\nax.set_title(\"India Excluding Maharashtra Total\", fontsize=20)\nax.set_xlabel('Date', fontsize=20)\nax.legend( ('Polynomial Regression','India Excluding Maharashtra Total'), loc='upper left', shadow=True)\n\n\nax_mah.scatter(x_mah_pred, y_mah_pred, color='grey' )\nax_mah.scatter(x_mah,y_mah, edgecolor='Orange', facecolor='Orange', alpha=0.7 )\nax_mah.set_ylabel('Maharashtra Total', fontsize=20)\nax_mah.tick_params(labelrotation=45)\nax_mah.grid(b=True, which='major', color='#666666', linestyle='-')\nax_mah.minorticks_on()\nax_mah.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax_mah.legend\nax_mah.set_title(\"Maharashtra Total\", fontsize=20)\nax_mah.set_xlabel('Date', fontsize=20)\nax_mah.legend( ('Polynomial Regression','Maharashtra Total'), loc='upper left', shadow=True)\n\n\nax_mum.scatter(x_mum_pred, y_mum_pred, color='grey' )\nax_mum.scatter(x_mum,y_mum, edgecolor='Orange', facecolor='Orange', alpha=0.7 )\nax_mum.set_ylabel('Mumbai Total', fontsize=20)\nax_mum.tick_params(labelrotation=45)\nax_mum.grid(b=True, which='major', color='#666666', linestyle='-')\nax_mum.minorticks_on()\nax_mum.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax_mum.legend\nax_mum.set_title(\"Mumbai Total\",fontsize=20)\nax_mum.set_xlabel('Date', fontsize=20)\nax_mum.legend( ('Polynomial Regression','Mumbai Total'), loc='upper left', shadow=True)\n\n\nax_pun.scatter(x_pun_pred, y_pun_pred, color='grey' )\nax_pun.scatter(x_pun,y_pun, edgecolor='Orange', facecolor='Orange', alpha=0.7 )\nax_pun.set_ylabel('Pune Total', fontsize=20)\nax_pun.tick_params(labelrotation=45)\nax_pun.grid(b=True, which='major', color='#666666', linestyle='-')\nax_pun.minorticks_on()\nax_pun.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax_pun.legend\nax_pun.set_title(\"Pune Total\",fontsize=20)\nax_pun.set_xlabel('Date', fontsize=20)\nax_pun.legend( ('Polynomial Regression','Pune Total'), loc='upper left', shadow=True)\n\n\nax1.scatter(x1_pred, y1_pred, color='grey' )\nax1.scatter(x1,y1, edgecolor='Blue', facecolor='Blue', alpha=0.7 )\nax1.set_ylabel('Daily New - India Exluding Maharashtra', fontsize=20)\nax1.tick_params(labelrotation=45)\nax1.grid(b=True, which='major', color='#666666', linestyle='-')\nax1.minorticks_on()\nax1.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax1.legend\nax1.set_title(\"India Excluding Maharashtra Daily New Cases\")\nax1.set_xlabel('Date', fontsize=20)\nax1.set_xlabel('Date', fontsize=20)\nax1.legend( ('Polynomial Regression','India Exluding Maharashtra Daily New'), loc='upper left', shadow=True)\n\nax2.scatter(x2_pred, y2_pred, color='grey')\nax2.scatter(x2,y2, edgecolor='Orange', facecolor='Orange', alpha=0.7)\nax2.set_ylabel('Daily New - India  Maharashtra', fontsize=20)\nax2.set_title(\"Maharashtra Daily New Cases\",fontsize=20)\nax2.set_xlabel('Date', fontsize=20)\nax2.tick_params(labelrotation=45)\nax2.grid(b=True, which='major', color='#666666', linestyle='-')\nax2.minorticks_on()\nax2.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax2.legend( ('Polynomial Regression','Maharashtra Daily New'), loc='upper left', shadow=True);\n\n\nax_new_mum.scatter(x_new_mum_pred, y_new_mum_pred, color='grey' )\nax_new_mum.scatter(x_new_mum,y_new_mum, edgecolor='Orange', facecolor='Orange', alpha=0.7 )\nax_new_mum.set_ylabel('Daily New - India  Maharashtra', fontsize=20)\nax_new_mum.tick_params(labelrotation=45)\nax_new_mum.grid(b=True, which='major', color='#666666', linestyle='-')\nax_new_mum.minorticks_on()\nax_new_mum.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax_new_mum.legend\nax_new_mum.set_title(\"Daily New Mumbai\",fontsize=20)\nax_new_mum.set_xlabel('Date', fontsize=20)\nax_new_mum.legend( ('Polynomial Regression','Daily New Mumbai'), loc='upper left', shadow=True)\n\n\nax_new_pun.scatter(x_new_pun_pred, y_new_pun_pred, color='grey' )\nax_new_pun.scatter(x_new_pun,y_new_pun, edgecolor='Orange', facecolor='Orange', alpha=0.7 )\nax_new_pun.set_ylabel('Daily New - India  Maharashtra', fontsize=20)\nax_new_pun.tick_params(labelrotation=45)\nax_new_pun.grid(b=True, which='major', color='#666666', linestyle='-')\nax_new_pun.minorticks_on()\nax_new_pun.grid(b=True, which='minor', color='#999999', linestyle='-', alpha=0.2)\nax_new_pun.legend\nax_new_pun.set_title(\"Daily New Pune\",fontsize=20)\nax_new_pun.set_xlabel('Date', fontsize=20)\nax_new_pun.legend( ('Polynomial Regression','IDaily New Pune'), loc='upper left', shadow=True);\n\n\n\n\n","a08051af":"# <p><span style=\"color: #000080; background-color: #ffffff;\"><strong>Analysis of Covid19 data for India Maharashtra Mumbai and Pune &nbsp;<\/strong><\/span><\/p>\n<hr \/>\n<p>&nbsp;<\/p>"}}