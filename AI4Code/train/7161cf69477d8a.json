{"cell_type":{"10620d79":"code","4f46bd2e":"code","3e63cecf":"code","f5d741c2":"code","4f632265":"code","987d79c8":"code","6e79b01e":"code","9919535e":"code","9b664152":"code","af24fa8f":"code","79d12eea":"code","bfcd33ff":"code","5c1584d1":"code","22e6114f":"code","aa6f6232":"code","f9adec03":"code","f7c3c976":"code","8dc48a22":"code","9bb6e98d":"code","61e59aa8":"code","4d0d2068":"code","99487550":"code","b303c974":"code","dd35f940":"code","56f2d4fc":"code","aecb3990":"code","91f4f275":"markdown","6999029f":"markdown","bb300354":"markdown","2f9a206c":"markdown","d4827c57":"markdown"},"source":{"10620d79":"import numpy as np\nimport matplotlib.pyplot as plt\nimport cv2\nimport os","4f46bd2e":"image = cv2.imread('..\/input\/cotton-disease-dataset\/Cotton Disease\/train\/diseased cotton leaf\/dis_leaf (101)_iaip.jpg')\ntype(image)","3e63cecf":"plt.imshow(image)","f5d741c2":"image = cv2.imread('..\/input\/cotton-disease-dataset\/Cotton Disease\/train\/diseased cotton plant\/dd (104)_iaip.jpg')\ntype(image)","4f632265":"plt.imshow(image)","987d79c8":"image = cv2.imread('..\/input\/cotton-disease-dataset\/Cotton Disease\/train\/fresh cotton leaf\/d (100)_iaip.jpg')\ntype(image)","6e79b01e":"plt.imshow(image)","9919535e":"image = cv2.imread('..\/input\/cotton-disease-dataset\/Cotton Disease\/train\/fresh cotton plant\/dsd (143)_iaip.jpg')\ntype(image)","9b664152":"plt.imshow(image)","af24fa8f":"from keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, Dropout, BatchNormalization\nfrom keras.layers import Flatten, Dense\nfrom keras.preprocessing.image import ImageDataGenerator","79d12eea":"\n# Initializing the CNN\nclassifier = Sequential()\n\n# Convolution Step 1\nclassifier.add(Conv2D(96, 11, strides = (4, 4), padding = 'valid', input_shape=(224, 224, 3), activation = 'relu'))\n\n# Max Pooling Step 1\nclassifier.add(MaxPooling2D(pool_size = (2, 2), strides = (2, 2), padding = 'valid'))\nclassifier.add(BatchNormalization())\n\n# Convolution Step 2\nclassifier.add(Conv2D(256, 11, strides = (1, 1), padding='valid', activation = 'relu'))\n\n# Max Pooling Step 2\nclassifier.add(MaxPooling2D(pool_size = (2, 2), strides = (2, 2), padding='valid'))\nclassifier.add(BatchNormalization())\n\n# Convolution Step 3\nclassifier.add(Conv2D(384, 3, strides = (1, 1), padding='valid', activation = 'relu'))\nclassifier.add(BatchNormalization())\n\n# Convolution Step 4\nclassifier.add(Conv2D(384, 3, strides = (1, 1), padding='valid', activation = 'relu'))\nclassifier.add(BatchNormalization())\n\n# Convolution Step 5\nclassifier.add(Conv2D(256, 3, strides=(1,1), padding='valid', activation = 'relu'))\n\n# Max Pooling Step 3\nclassifier.add(MaxPooling2D(pool_size = (2, 2), strides = (2, 2), padding = 'valid'))\nclassifier.add(BatchNormalization())\n\n# Flattening Step\nclassifier.add(Flatten())\n\n# Full Connection Step\nclassifier.add(Dense(units = 4096, activation = 'relu'))\nclassifier.add(Dropout(0.4))\nclassifier.add(BatchNormalization())\nclassifier.add(Dense(units = 4096, activation = 'relu'))\nclassifier.add(Dropout(0.4))\nclassifier.add(BatchNormalization())\nclassifier.add(Dense(units = 1000, activation = 'relu'))\nclassifier.add(Dropout(0.2))\nclassifier.add(BatchNormalization())\nclassifier.add(Dense(units = 4, activation = 'softmax'))\nclassifier.summary()","bfcd33ff":"from keras.optimizers import Adam\nadam=Adam(lr=0.001)","5c1584d1":"classifier.compile(optimizer=adam, loss=\"categorical_crossentropy\", metrics = ['accuracy'])","22e6114f":"train_datagen = ImageDataGenerator(rescale=1.\/225,\n                                  shear_range=0.2,\n                                  zoom_range=0.2,\n                                  horizontal_flip=True)\ntest_datagen = ImageDataGenerator(rescale=1.\/225)","aa6f6232":"train_path= '..\/input\/cotton-disease-dataset\/Cotton Disease\/train\/'\ntest_path = '..\/input\/cotton-disease-dataset\/Cotton Disease\/val\/'","f9adec03":"train_data = train_datagen.flow_from_directory(train_path,\n                                              target_size=(224,224),\n                                              batch_size=64,\n                                              class_mode= 'categorical')\ntest_data = test_datagen.flow_from_directory(test_path,\n                                              target_size=(224,224),\n                                              batch_size=64,\n                                              class_mode= 'categorical')","f7c3c976":"from keras.callbacks import EarlyStopping\nearlystopping=EarlyStopping()","8dc48a22":"# fit the model\nhistory = classifier.fit_generator(\n  train_data,\n  validation_data=test_data,\n  epochs=5,\n # callbacks=[early_stopping],\n  steps_per_epoch=len(train_data),\n  validation_steps=len(test_data)\n)","9bb6e98d":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","61e59aa8":"from keras.applications.vgg16 import VGG16\nfrom keras.applications.vgg16 import preprocess_input\n\nfrom keras.applications import InceptionV3\nfrom keras.applications import ResNet50\nfrom keras.models import Model","4d0d2068":"vgg = VGG16(include_top=False, weights='imagenet', input_shape=(224,224,3))\nvgg.summary()","99487550":"for layer in vgg.layers:\n    layer.trainable=False\n","b303c974":"x = Flatten()(vgg.output)\nx = Dense(512,activation='relu')(x)\nx = Dense(512,activation='relu')(x)\nprediction = Dense(4,activation='sigmoid')(x)\nmodel = Model(inputs=vgg.input, outputs=prediction)\nmodel.summary()","dd35f940":"model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","56f2d4fc":"history=model.fit_generator(train_data,\n                           validation_data=test_data,\n                           epochs=5,\n                           steps_per_epoch=len(train_data),\n                           validation_steps=len(test_data))","aecb3990":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","91f4f275":"#### Diseased cotton plant","6999029f":"#### fresh cotton leaf","bb300354":"#### Diseased cotton leaf","2f9a206c":"#### Fresh cotton plant","d4827c57":"### VGG16 Architecture"}}