{"cell_type":{"c85f1423":"code","991e775e":"code","b83badea":"code","3d1e32b4":"code","6b48897c":"code","d683ff05":"code","4c91e5db":"code","8fc904b0":"code","7ca16e5a":"code","99a340cb":"code","aaed7892":"code","f026d61d":"code","1e045799":"code","07cf58e9":"code","3d2ad922":"code","cbf156fb":"code","19650660":"code","4780d2b8":"code","d3496ee1":"code","dc679f28":"code","c2dd0928":"code","1fb0441c":"code","f23f5df1":"code","70bc033e":"code","a704e05f":"code","f059ae2e":"code","717e3bdf":"code","b2b93038":"markdown"},"source":{"c85f1423":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","991e775e":"neutral_df=pd.read_csv('\/kaggle\/input\/jigsaw-toxic-coomens-annotations\/jigsaw_train_hate_annotationprob.csv')","b83badea":"neutral_df.head()","3d1e32b4":"neutral_df=neutral_df[neutral_df['toxic'] ==0]","6b48897c":"len(neutral_df)","d683ff05":"neutral_df.tail()","4c91e5db":"neutral_df=neutral_df[['text','neutral_speech_agreement']]","8fc904b0":"neutral_df.head()","7ca16e5a":"neutral_df=neutral_df.rename(columns={\"neutral_speech_agreement\": \"scoring1\"})","99a340cb":"n=round(len(neutral_df)\/2)\ndf1 = neutral_df.iloc[:n, :].reset_index(drop=True)\ndf2 = neutral_df.iloc[n:, :].reset_index(drop=True)\nneutral_df=df1.iloc[:,:]\nneutral_df['text2']=df2.loc[:,'text']\nneutral_df['scoring2']=df2.loc[:,'scoring1']\nneutral_df['scoring1']=1-neutral_df['scoring1']\nneutral_df['scoring2']=1-neutral_df['scoring2']","aaed7892":"#bigger the score more neutral More toxic is negative \nneutral_df['compare']=neutral_df['scoring2']-neutral_df['scoring1']","f026d61d":"neutral_df['text'][0]","1e045799":"neutral_df['text2'][0]","07cf58e9":"neutral_df['text'][1]","3d2ad922":"neutral_df['text2'][1]","cbf156fb":"neutral_df['text'][4]","19650660":"neutral_df['text2'][4]","4780d2b8":"neutral_df=neutral_df.dropna()","d3496ee1":"len(neutral_df)","dc679f28":"neutral_df.head()","c2dd0928":"import seaborn as sns","1fb0441c":"sns.distplot(neutral_df['compare'])","f23f5df1":"neutral_df=neutral_df[(neutral_df['compare'] <-0.2)|(neutral_df['compare'] >0.2)]","70bc033e":"len(neutral_df)","a704e05f":"neutral_df.to_csv('neutral_toxicity_rating.csv')","f059ae2e":"neutral_df['text'][1]","717e3bdf":"neutral_df['text2'][1]","b2b93038":"The corpus was trained on very small neutral annotation 5000k at most. "}}