{"cell_type":{"d4046775":"code","5a74eee8":"code","832d5e97":"code","3de05749":"code","7c71d8c6":"code","b8dd0b6d":"code","815cd190":"code","a04fa834":"code","fc989a54":"code","dee4296d":"code","a871afec":"code","4b00de1c":"code","bc2a77d5":"code","75d999d9":"markdown","d5cac118":"markdown"},"source":{"d4046775":"import pandas as pd\nimport geopandas as gpd\nimport numpy as np\nimport folium\nfrom folium import Marker","5a74eee8":"from geopandas.tools import geocode\n","832d5e97":"result = geocode(\"bourgogne, casablanca morocco\", provider=\"nominatim\")\nresult","3de05749":"point = result.geometry.iloc[0]\nprint(\"Latitude:\", point.y)\nprint(\"Longitude:\", point.x)","7c71d8c6":"universities = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/top_universities.csv\")\nuniversities.head()","b8dd0b6d":"def my_geocoder(row):\n    try:\n        point = geocode(row, provider='nominatim').geometry.iloc[0]\n        return pd.Series({'Latitude': point.y, 'Longitude': point.x, 'geometry': point})\n    except:\n        return None\n\nuniversities[['Latitude', 'Longitude', 'geometry']] = universities.apply(lambda x: my_geocoder(x['Name']), axis=1)\n\nprint(\"{}% of addresses were geocoded!\".format(\n    (1 - sum(np.isnan(universities[\"Latitude\"])) \/ len(universities)) * 100))\n\n# Drop universities that were not successfully geocoded\nuniversities = universities.loc[~np.isnan(universities[\"Latitude\"])]\n#tranform to geopandas\nuniversities = gpd.GeoDataFrame(universities, geometry=universities.geometry)\nuniversities.crs = {'init': 'epsg:4326'}\nuniversities.head()","815cd190":"# Create a map\nm = folium.Map(location=[54, 15], tiles='openstreetmap', zoom_start=2)\n\n# Add points to the map\nfor idx, row in universities.iterrows():\n    Marker([row['Latitude'], row['Longitude']], popup=row['Name']).add_to(m)\n\n# Display the map\nm","a04fa834":"world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\neurope = world.loc[world.continent == 'Europe'].reset_index(drop=True)\n\neurope_stats = europe[[\"name\", \"pop_est\", \"gdp_md_est\"]]\neurope_boundaries = europe[[\"name\", \"geometry\"]]","fc989a54":"europe_stats.head()","dee4296d":"# Use an attribute join to merge data about countries in Europe\neurope = europe_boundaries.merge(europe_stats, on=\"name\")\neurope.head()","a871afec":"european_universities = gpd.sjoin(universities, europe)\n\nprint(universities.head(), europe.head())","4b00de1c":"# Investigate the result\nprint(\"We located {} universities.\".format(len(universities)))\nprint(\"Only {} of the universities were located in Europe (in {} different countries).\".format(\n    len(european_universities), len(european_universities.name.unique())))\n\neuropean_universities.head()","bc2a77d5":"ax= europe.plot(color='none', edgecolor='black', figsize=(10,10))\n\neuropean_universities.plot(ax=ax)","75d999d9":"the geocoding transform an address to a marker in a map, \nwe will use geopandas to get the geocode","d5cac118":"This notebook follows the course: https:\/\/www.kaggle.com\/learn\/geospatial-analysis\nThe comments and notes are personal approaches."}}