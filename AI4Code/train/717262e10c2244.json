{"cell_type":{"3a8aa779":"code","2b260b24":"code","39dee4b3":"code","984196c1":"code","c1f4e06f":"code","2aff0c05":"code","a9dfeb8c":"code","deeb396c":"code","8892aec9":"code","e80d5c6a":"code","5ff7bac7":"code","3c1dab1f":"code","ba1b741b":"code","568ab5cf":"code","f6fee45e":"code","d59cc6e9":"code","d8201318":"code","7557512d":"code","b584db62":"code","28096faf":"code","01d709bd":"markdown","fc28fda8":"markdown","7b3d0169":"markdown","68a7d724":"markdown","e34c5ce9":"markdown"},"source":{"3a8aa779":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2b260b24":"df=pd.read_csv('\/kaggle\/input\/fraud-detection-bank-dataset-20k-records-binary\/fraud_detection_bank_dataset.csv')","39dee4b3":"df.head()","984196c1":"df=df.drop('Unnamed: 0', axis=1)","c1f4e06f":"df.describe()","2aff0c05":"pip install pycaret","a9dfeb8c":"from pycaret.classification import *","deeb396c":"exp1 = setup(df, target = 'targets', ignore_features = None,silent=True)","8892aec9":"compare_models()","e80d5c6a":"cb = create_model('catboost')","5ff7bac7":"tuned_cb = tune_model(cb)","3c1dab1f":"plot_model(tuned_cb)","ba1b741b":"interpret_model(tuned_cb)","568ab5cf":"from sklearn.model_selection import train_test_split","f6fee45e":"X=df.drop('targets',axis=1)\ny=df['targets']","d59cc6e9":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.30, random_state=10)","d8201318":"def make_cm(matrix, columns):\n    n = len(columns)\n    \n    act = ['correct data'] * n\n    pred = ['predict data'] * n\n\n    cm = pd.DataFrame(matrix, \n        columns=[pred, columns], index=[act, columns])\n    return cm","7557512d":"tuned_cb.fit(X_train,y_train)\ny_pred=tuned_cb.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix\ndf_matrix=make_cm(\n    confusion_matrix(y_test,y_pred),['0','1'])\ndisplay(df_matrix)\n\nfrom sklearn.metrics import precision_recall_fscore_support\nprecision,recall,fscore,_=precision_recall_fscore_support(y_test,y_pred,average='binary')\nprint(f' precision: {precision:.4f}  recall: {recall: .4f}  Fscore:  {fscore:.4f}')","b584db62":"import seaborn as sns\nimport matplotlib.pyplot as plt\ny_proba0=tuned_cb.predict_proba(X_test)[:,1]\n\ny0=y_proba0[y_test==0]\ny1=y_proba0[y_test==1]\n\nplt.figure(figsize=(6,6))\nplt.title('Bank Analysis')\nsns.distplot(y1,kde=False,norm_hist=True,\n             bins=50,color='b',label='1')\nsns.distplot(y0,kde=False,norm_hist=True,\n             bins=50,color='k',label='0')\nplt.xlabel('thres')\nplt.legend()\nplt.show()","28096faf":"def pred(tuned_cb,X,thres):\n  y_proba=tuned_cb.predict_proba(X)\n  y_proba1=y_proba[:,1]\n  y_pred=(y_proba1>thres).astype(int)\n  return y_pred\n\n\nthres_list=np.arange(0.8,0,-0.05)\n\nfor thres in thres_list:\n  y_pred=pred(tuned_cb,X_test,thres)\n  pred_sum=y_pred.sum()\n  precision,recall,fscore,_=precision_recall_fscore_support(y_test,y_pred,average='binary')\n  print(f' thres : {thres:.2f} pred_sum : {pred_sum} precision: {precision:.4f}  recall: {recall: .4f}  Fscore:  {fscore:.4f})')","01d709bd":"# 1. Choose the model by PyCaret","fc28fda8":"# In CatBoost Classifier, when I set Thres=0.75, I can get precision 0.95 and max recall 0.75","7b3d0169":"# 2. Create the model","68a7d724":"# I chose CatBoost Classifier as model","e34c5ce9":"# 3. Tune Thres to hit both precision over 95% and highest recall"}}