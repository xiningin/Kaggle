{"cell_type":{"ad382627":"code","14021ba7":"code","6b53f520":"code","559732d0":"code","b47a1875":"code","2b412254":"code","6bf62711":"code","3717491a":"code","a954ca7b":"markdown","983d9fa7":"markdown","f13a2322":"markdown","16c7b1d0":"markdown","ce9c1280":"markdown","59662b04":"markdown"},"source":{"ad382627":"import torch\n\nx = torch.tensor([3.], requires_grad=True)\nf = x ** 3\nf.backward()\nprint(x.grad)","14021ba7":"x = torch.tensor([3.], requires_grad=True)\nf = x ** 3\ng = torch.autograd.grad(f, x, create_graph=True)\ng[0].backward()\nx.grad","6b53f520":"\nx = torch.tensor([3.], requires_grad=True)\nf = x ** 3\ng = torch.autograd.grad(f, x, create_graph=True)\nh = torch.autograd.grad(g, x, create_graph=True)\ni = torch.autograd.grad(h, x, create_graph=True)\ni[0].backward()\nprint(g)\nprint(h)\nprint(i)\nprint(x.grad)","559732d0":"import torch\ncoefficients_order=10\n\ndef grad(f, x):\n    return torch.autograd.grad(f, x, create_graph=True)\n\nx = torch.tensor([0.], requires_grad=True)\nf = torch.sin(x)\nresult = []\ngrad_result = [grad(f, x)]\nfor i in range(coefficients_order):\n    grad_result.append(grad(grad_result[-1], x))    \n\ncnt = 1.\nfor num, data in enumerate(grad_result):\n    result.append(data[0].detach()\/cnt)\n    cnt = cnt * (num + 2)\n    \ncoefficient = torch.stack(result)","b47a1875":"x = torch.linspace(0, 10, 100)\nmatrix = torch.zeros(x.shape[0], coefficient.shape[0])\nfor i in range(coefficient.shape[0]):\n    matrix[:,i] = x **(i+1)\nmatrix.shape","2b412254":"result_y = torch.mm(matrix, coefficient)","6bf62711":"import matplotlib.pyplot as plt\nimport numpy as np\nplt.plot(x.detach().numpy()[:55], result_y.detach().numpy()[:55], label=\"pytorch \\nMaclaurin series \\norder={}\".format(coefficients_order))\nplt.plot(x.detach().numpy()[:55], np.sin(x.detach().numpy()[:55]), label=\"sin(x)\")\nplt.legend(loc=\"best\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.show()","3717491a":"x","a954ca7b":"# First\u2010order differentiation","983d9fa7":"# Forth\u2010order differentiation","f13a2322":"# create matrix for Maclaurin series","16c7b1d0":"# Second\u2010order differentiation","ce9c1280":"# Obtaining Maclaurin series coefficients","59662b04":"# Show the result"}}