{"cell_type":{"e301cb19":"code","78b4761d":"code","71bfd7ab":"code","38b2eed3":"code","d3f6b72d":"code","75a9b15f":"code","5945af8f":"code","d744aa0b":"code","e60d0628":"code","5fa02e7e":"code","859c3dc5":"code","bef4bef2":"code","3f5574a3":"markdown","8c4d2373":"markdown","0ddb499a":"markdown","e9c5ddfa":"markdown","9a8a3a19":"markdown","2eb18ac7":"markdown"},"source":{"e301cb19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Visualization libraries\nimport matplotlib\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nsns.set()\n\n# NLP libraries\nimport re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import accuracy_score, recall_score\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","78b4761d":"review_df = pd.read_csv('..\/input\/reviews\/Restaurant_Reviews.tsv', delimiter='\\t')\nreview_df.head()","71bfd7ab":"corpus = []\nfor i in range(0,1000):\n    review = re.sub('[^a-zA-Z]', ' ', review_df['Review'][i])\n    review = review.lower()\n    review = review.split()\n    ps = PorterStemmer()\n    review = [ps.stem(word) for word in review if not word in set(stopwords.words('english'))]\n    review = ' '.join(review)\n    corpus.append(review)","38b2eed3":"cv = CountVectorizer(max_features = 1500)\nX = cv.fit_transform(corpus).todense()\ny = review_df.iloc[:,1].values","d3f6b72d":"X_train, X_test, y_train, y_test = train_test_split(X , y, test_size = 0.20, random_state = 0)","75a9b15f":"classifier = GaussianNB()\nclassifier.fit(X_train, y_train)","5945af8f":"y_pred = classifier.predict(X_test)","d744aa0b":"Confusion_Matrix = confusion_matrix(y_test, y_pred)\nAccuracy_Score = accuracy_score(y_test, y_pred)","e60d0628":"df_cm = pd.DataFrame(Confusion_Matrix, range(2),\n                  range(2))\n#plt.figure(figsize = (10,7))\nsns.set(font_scale=1.4)#for label size\nsns.heatmap(df_cm, annot=True,annot_kws={\"size\": 16})# font size\nprint(\"Accuracy Score is :\", Accuracy_Score)","5fa02e7e":"knn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)","859c3dc5":"Confusion_Matrix = confusion_matrix(y_test, y_pred)\nAccuracy_Score = accuracy_score(y_test, y_pred)","bef4bef2":"df_cm = pd.DataFrame(Confusion_Matrix, range(2),\n                  range(2))\n#plt.figure(figsize = (10,7))\nsns.set(font_scale=1.4)#for label size\nsns.heatmap(df_cm, annot=True,annot_kws={\"size\": 16})# font size\nprint(\"Accuracy Score is :\", Accuracy_Score)","3f5574a3":"### K-Nearest Neighbor(KNN) Classifier ","8c4d2373":"### Split dataset into 'test' and 'train' dataset","0ddb499a":"### Bag of words","e9c5ddfa":"### Stemming: Clean the dataset to remove the stopwords","9a8a3a19":"### Read CSV into a pandas dataframe","2eb18ac7":"### Naive Bayes Classifier"}}