{"cell_type":{"5aa9c9cb":"code","90bea3c5":"code","0da7d059":"code","f2eddcf5":"code","72ab76e4":"code","e363ed6d":"code","37d8a79d":"code","b778abf0":"code","643569ff":"code","d7b6e14f":"code","1fee34ab":"code","30ad8873":"code","14fdcaba":"code","ba1b27dd":"code","37b22f40":"code","d1e66ede":"code","897815fb":"code","b4c00699":"code","9a75a2cc":"code","8a3fca0d":"code","976d5d6e":"code","a023cf06":"code","a1c77769":"code","cf089365":"code","e87939ac":"code","2e14fa3e":"code","fbe1e006":"code","fe6fbd1f":"code","41994609":"code","f40545f7":"code","e696e4c9":"code","c84956c4":"code","a391b597":"code","2305c681":"code","cbd840fb":"code","c39d271e":"code","ce9c7074":"code","eed40946":"code","c8f251b5":"code","492bd37c":"code","f38bb484":"code","13e58254":"code","30409460":"code","cc37c94a":"code","b7a10728":"code","61ecfbda":"code","e0816f47":"code","506df683":"code","7f05ec6e":"code","64e46d43":"code","5a17a255":"code","996bc86e":"code","9170e512":"code","2196ccc6":"code","4da7a979":"code","77dee9c7":"markdown","cb79fd7d":"markdown","d41d7446":"markdown","10ebcef0":"markdown","340a685e":"markdown","b2717a5c":"markdown","75e39c37":"markdown","1cfd2a1a":"markdown","92d62822":"markdown","f07c16c6":"markdown","1cd102ab":"markdown"},"source":{"5aa9c9cb":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","90bea3c5":"df = pd.read_excel('\/kaggle\/input\/superstore\/US Superstore data.xls')\ndf.head()","0da7d059":"df.isnull().sum()","f2eddcf5":"df.City.nunique()","72ab76e4":"df.City.value_counts()","e363ed6d":"len(df.State.value_counts())","37d8a79d":"df.State.value_counts()","b778abf0":"df.Category.value_counts().plot(kind='bar')\nplt.xticks(rotation=0)\nplt.show()","643569ff":"pd.crosstab( df['Sub-Category'],df['Category'])","d7b6e14f":"pd.crosstab( df['Region'],df['Category']).plot(kind='bar',stacked='True', figsize=(10,7))\nplt.xticks(rotation=0)\nplt.plot()","1fee34ab":"pd.crosstab( df['Region'],df['Category']).plot(kind='bar', figsize=(10,7))\nplt.xticks(rotation=0)\nplt.plot()","30ad8873":"((df.groupby(['Region','Category']).count()['Row ID'])\/(df.groupby('Region').count()['Row ID'])*100).plot(kind='bar')","14fdcaba":"((df.groupby(['Region','Category']).count()['Row ID'])\/(df.groupby('Region').count()['Row ID'])*100).plot(kind='bar')","ba1b27dd":"# adding %ge profit column:\ndf['% profit'] = df['Profit']\/df['Sales']*100\ndf.head()","37b22f40":"max(df['% profit'])","d1e66ede":"min(df['% profit'])","897815fb":"loss = df[df['% profit']<0]\nloss","b4c00699":"df.info","9a75a2cc":"1871\/9994*100","8a3fca0d":"# city\/state\/region wise profit\n\nprofit_city = df.groupby('City').sum()['Profit']","976d5d6e":"profit_city","a023cf06":"# top 5 cities with highest profit\nprofit_city.sort_values(ascending=False).head()","a1c77769":"# top 5 cities with lowest profit\nprofit_city.sort_values(ascending=True).head()","cf089365":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nplt.xticks(rotation=45)\nprofit_city.sort_values(ascending=False).head().plot(kind='bar', ax=axes[0])\n# plt.title('Maximum Profit')\nplt.legend()\nprofit_city.sort_values(ascending=True).head().plot(kind='bar', ax=axes[1])\n# plt.setp(axes.get_xticklabels(), rotation=45)\n# plt.xticks(rotation=45)\n# plt.title('Minimum Profit')\nplt.show()","e87939ac":"# state wise profit distribution\nstate_profit = df.groupby('State').sum()['Profit']\nstate_profit","2e14fa3e":"plt.figure(figsize=(15,5))\nsns.barplot(x=state_profit.index, y=state_profit.values)\nplt.xticks(rotation=90)\n\nplt.show()","fbe1e006":"state_profit.sort_values(ascending=False)","fe6fbd1f":"df_state_profit = pd.DataFrame(state_profit)\ndf_state_profit.head()","41994609":"df_state_profit['% Contribution'] = df_state_profit['Profit']\/sum(df_state_profit['Profit'])*100\ndf_state_profit","f40545f7":"sum(df_state_profit['Profit'])","e696e4c9":"# region wise profit:\nregion_profit = pd.DataFrame(df.groupby('Region').sum()['Profit'])\nregion_profit","c84956c4":"plt.pie(region_profit, labels=region_profit.index, autopct='%.2f', explode=(0,0,0,0.1), shadow=True)\nplt.show()","a391b597":"# city wise sale:\ncity_sale = pd.DataFrame(df.groupby('City').sum()['Sales'])\n\n# state wise sale\nstate_sale = pd.DataFrame(df.groupby('State').sum()['Sales'])\n\n# region wise sale\nregion_sale = pd.DataFrame(df.groupby('Region').sum()['Sales'])","2305c681":"# maximum sale city wise\ncity_sale.sort_values(by='Sales',ascending=False).head(10)","cbd840fb":"# top 10 cities with lowest sales:\ncity_sale.sort_values(by='Sales',ascending=True).head(10)","c39d271e":"# maximum sale w.r.t. states:\nstate_sale.sort_values(by='Sales',ascending=False).head(5)","ce9c7074":"# lowest sales w.r.t. states:\nstate_sale.sort_values(by='Sales',ascending=True).head(5)","eed40946":"# maximum and minmum sale w.r.t. region:\nregion_sale.sort_values(by='Sales', ascending=True)","c8f251b5":"df[df['Discount']==df['Discount'].max()].groupby('Product Name').sum()['Quantity'].sort_values(ascending=False)","492bd37c":"df[df['Discount']==df['Discount'].max()]","f38bb484":"df['Discount'].max()\n","13e58254":"# most popular product:\n\ndf.groupby('Product Name').sum()['Quantity'].sort_values(ascending = False)","30409460":"# Regular\/loyal customer:\ndf.groupby(['Customer ID','Customer Name']).count()['Row ID'].sort_values(ascending=False)","cc37c94a":"# Creating Order_Month Column:\nimport datetime as dt","b7a10728":"df['Order Date']","61ecfbda":"df['Order_Month']=df['Order Date'].dt.month\ndf","e0816f47":"df['Order Date'].dt.strftime('%B')","506df683":"# creating function:\n\ndef season(x):\n    # spring: March to May\n    if x>=3 and x<=5:\n        a = 'Spring'\n    \n    # summer: June to August\n    elif x>=6 and x<=8:\n        a = 'Summer'\n    \n    # fall(autmn): September to November\n    elif x>=9 and x<=11:\n        a = 'Fall'\n    \n    # winter: December to February:\n    else:\n        a = 'Winter'\n    return a","7f05ec6e":"# creating season column:\n\ndf['Season'] = df['Order_Month'].apply(season)\ndf","64e46d43":"pd.crosstab(df['Season'], df['Category']).plot(kind='bar',stacked=True)\nplt.xlabel('Season')\nplt.ylabel('Quantity')\nplt.show()","5a17a255":"# creating Year column:\ndf['Year'] = df['Order Date'].dt.year\ndf.head()","996bc86e":"df.groupby(['Year']).max()['Profit']","9170e512":"df.groupby(['Year'],)['State','Profit']","2196ccc6":"# year and state wise maximum profit\ndf.sort_values('Profit', ascending=False).groupby('Year')['State','Profit'].first()","4da7a979":"df.sort_values('Sales', ascending=False).groupby('Year')['State','Sales'].first()","77dee9c7":"- William Brown is regular customer to our store.","cb79fd7d":"- Above plot shows that maximum sale is during Fall.","d41d7446":"- There are total 192 products with Discount as high as 80%.","10ebcef0":"- Above table represents the state which registered maximum profit per year.","340a685e":"- Staples has high sales volume with total of 215 orders.","b2717a5c":"- NYC has maximum sales followed by LA and Seattle.\n- Abilene has lowest sales.","75e39c37":"Inference:\n- For every region maximum sell is in office category.\n- Maximum office sell is in west region, whereas least is in south.\n- From overall sell in each region, distribution of each category is similar.","1cfd2a1a":"- South region has maximum sales where as West has lowest.","92d62822":"Inference:\n- NYC has maximum profit where as Philadelphia has lowest profit.\n- The minimum profit is well below 0 which means one needs to rectify which cities are having less than zero profit and why.","f07c16c6":"- Above table represents the state which registered maximum Sales per year.","1cd102ab":"- CA has maximum sales where as North Dakota has lowest."}}