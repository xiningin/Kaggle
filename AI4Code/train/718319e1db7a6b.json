{"cell_type":{"339163ba":"code","b77fdd57":"code","1db9d6b0":"code","b7ba345f":"code","424ce8c5":"code","07d1b717":"code","556cd1cc":"code","05f75869":"code","9d52f7d8":"code","765485f6":"code","f7e565c2":"code","d7f7599b":"code","6e80a1d4":"code","ab27bac6":"markdown","f1b30e9b":"markdown"},"source":{"339163ba":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split \nfrom matplotlib import pyplot as plt\n\nfrom sklearn.datasets import load_digits","b77fdd57":"digits = load_digits()","1db9d6b0":"dir(digits)","b7ba345f":"df = pd.DataFrame(digits.data, digits.target)\ndf.head()","424ce8c5":"df['target'] = digits.target\ndf.head()","07d1b717":"X = df.drop(['target'],axis='columns')\ny = df.target","556cd1cc":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2)","05f75869":"from sklearn.svm import SVC\nrbf_model = SVC(C=20, kernel='rbf')","9d52f7d8":"len(X_train)","765485f6":"len(X_test)","f7e565c2":"rbf_model.fit(X_train, y_train)\nrbf_model.score(X_test, y_test)","d7f7599b":"linear_model = SVC(kernel='linear')\nlinear_model.fit(X_train,y_train)","6e80a1d4":"linear_model.score(X_test,y_test)","ab27bac6":"### Using RBF kernel","f1b30e9b":"### Using Linear kernel"}}