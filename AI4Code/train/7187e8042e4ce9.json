{"cell_type":{"509c3aa2":"code","76f5055a":"code","524b83fb":"code","3fcde4e5":"code","6cc00f33":"code","bdf72d52":"code","7250db4f":"code","5996fa83":"code","d7a2d76f":"code","52e3f2aa":"code","bb516fae":"code","4ade8d13":"code","84d1566b":"code","bd933ca3":"code","f344e4e2":"code","517526ba":"code","6ecdfa89":"code","24f24aed":"code","1f4222f0":"code","3e7d0f44":"code","583fecac":"code","eea7c066":"code","edf399b8":"code","2a6fd403":"code","ba677297":"code","a29f8cf0":"code","629d0ca2":"code","324f7b15":"code","cad45ee6":"code","b06ef300":"code","c00f1918":"code","1ed92402":"markdown","0dbb64f6":"markdown","792795aa":"markdown","967db482":"markdown","178b26fe":"markdown","e5dcf727":"markdown","40ef06b9":"markdown","ea7ad605":"markdown","a40bfd26":"markdown","25c27322":"markdown","d6b59ae5":"markdown","870da651":"markdown","ef4ea73f":"markdown","133fa9c5":"markdown","7fdca38c":"markdown","beeee053":"markdown","c0659445":"markdown","431d0678":"markdown","55f30487":"markdown","0fbbf6ed":"markdown","a5f467a4":"markdown","d9b5e4da":"markdown","77455b25":"markdown"},"source":{"509c3aa2":"import pandas as pd\nimport numpy as np\n\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules","76f5055a":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","524b83fb":"df= pd.read_csv('\/kaggle\/input\/supermarket-data\/supermarket_data.csv') \ndf","3fcde4e5":"df.describe()","6cc00f33":"df.isna().sum()","bdf72d52":"df['SHOP_DATE'] = pd.to_datetime(df['SHOP_DATE'], format='%Y%m%d')","7250db4f":"print('there are : ',len(df['BASKET_ID'].unique()),'baskets\/transactions')","5996fa83":"print('there are : ',len(df['PROD_CODE'].unique()),'unique products')","d7a2d76f":"prod_sold = df.groupby(['PROD_CODE'])['QUANTITY'].count().reset_index().rename(columns={'QUANTITY':'PROD_COUNT'})\nprod_sold","52e3f2aa":"total_count_of_items = len(df['PROD_CODE'])\nprint(\"Total count of items: \", total_count_of_items)","bb516fae":"sum(df['QUANTITY'])","4ade8d13":"prod_sold['PROD_PERC'] = prod_sold['PROD_COUNT']\/total_count_of_items #each item's contribution \nprod_sold['TOTAL_PERC'] =  prod_sold.PROD_PERC.cumsum()\n\ntop_prod_sold = prod_sold.sort_values('PROD_PERC',ascending=False).head(50)\ntop_prod_sold['TOTAL_PERC'] =  top_prod_sold.PROD_PERC.cumsum() #cumulative contribution of top items\n\nprint(prod_sold[prod_sold['TOTAL_PERC'] <= 0.2].shape)\n\ntop_prod_sold","84d1566b":"df['YEAR_MONTH'] = df['SHOP_DATE'].map(lambda date: date.year*100 + date.month)\ndf_revenue = df.groupby(['YEAR_MONTH']).agg({'SPEND' : 'sum'}).reset_index()\ndf_revenue.head()","bd933ca3":"plot_data = [go.Scatter(\n                 x = df_revenue['YEAR_MONTH'],\n                 y = df_revenue['SPEND'],\n             )]\n\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Revenue\")\n\nfig1 = go.Figure(data=plot_data, layout=plot_layout)\nfig1","f344e4e2":"df_revenue['MONTHLYGROWTH'] = df_revenue['SPEND'].pct_change()\ndf_revenue.head()","517526ba":"plot_data = [go.Bar(\n                 x = df_revenue['YEAR_MONTH'],\n                 y = df_revenue['MONTHLYGROWTH'],\n             )]\n\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Revenue Growth Rate\")\n\nfig2 = go.Figure(data=plot_data, layout=plot_layout)\nfig2","6ecdfa89":"df_cust = df.groupby('YEAR_MONTH')['CUST_CODE'].nunique().reset_index()\ndf_cust.head()","24f24aed":"plot_data = [go.Scatter(\n                 x = df_cust['YEAR_MONTH'],\n                 y = df_cust['CUST_CODE'],\n             )]\n\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Customer\")\n\nfig3 = go.Figure(data=plot_data, layout=plot_layout)\nfig3","1f4222f0":"df_cust['MONTHLYGROWTH'] = df_cust['CUST_CODE'].pct_change()\ndf_cust.head()","3e7d0f44":"plot_data = [go.Bar(\n                 x = df_cust['YEAR_MONTH'],\n                 y = df_cust['MONTHLYGROWTH'],\n             )]\n\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Customer Growth Rate\")\n\nfig4 = go.Figure(data=plot_data, layout=plot_layout)\nfig4","583fecac":"df_store = df.groupby(['STORE_CODE']).agg({'SPEND' : 'sum'}).reset_index()\ndf_store","eea7c066":"plot_data = [go.Pie(\n                 labels = df_store['STORE_CODE'], \n                 values = df_store['SPEND'],\n             )]\n\nplot_layout = go.Layout(\n    title = \"Revenue by store\")\n\nfig5 = go.Figure(data=plot_data, layout=plot_layout)\nfig5","edf399b8":"basket = df.groupby(['BASKET_ID', 'PROD_CODE'])['QUANTITY']\\\n        .sum().unstack().reset_index().fillna(0)\\\n        .set_index('BASKET_ID')\nbasket","2a6fd403":"def encode_units(x):\n    if x <= 0:\n        return 0\n    if x >= 1:\n        return 1","ba677297":"basket_sets = basket.applymap(encode_units)\nbasket_sets","a29f8cf0":"# minimum support can be select using expected transaction per period\ndef determine_min_support(df, expected_txn_per_day):\n    min_dt = pd.to_datetime(df['SHOP_DATE'].min(), format='%Y%m%d', errors='coerce')\n    max_dt = pd.to_datetime(df['SHOP_DATE'].max(), format='%Y%m%d', errors='coerce')\n    delta = max_dt - min_dt\n\n    actual_txn = len(df)\n    expected_txn = expected_txn_per_day * delta.days\n    \n    return expected_txn \/ actual_txn\n\n# in this case, i will select only product with a least 12 transactions\nmin_sup = determine_min_support(df,12)\nmin_sup = round(min_sup,2)\nmin_sup","629d0ca2":"frequent_itemsets = apriori(basket_sets, min_support=min_sup, use_colnames=True)\nfrequent_itemsets","324f7b15":"#with minimum support: 0.01 and minimum lift: 1, there are 28 rules\nrules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)\nprint('there are ',len(rules),'rules')","cad45ee6":"rules.head()","b06ef300":"#filter rules with minimum confidence = 0.3 and lift > 1 \nrules[ (rules['lift'] >= 1) &\n      (rules['confidence'] >= 0.3) ]","c00f1918":"# #output the results to a csv file\n# rules.to_csv(\"retail_basket.csv\")","1ed92402":"Checking the DataSet for null values:","0dbb64f6":"### How many products are in the data set?","792795aa":"### Revenue by store","967db482":"This shows us that the top 20 products are responsible for 14.4% of the entire sales and the top 1000 products are responsible for 20% of the sales!","178b26fe":"Thus, using the dataset provided, we could generate 5 association rules. This number can be varied by tweaking the parameters like support and confidence. Higher the values, lesser the number of rules and vice versa. \n\nHowever, when we set these parameters high, the quality of the generated rules is also high. We have to strike a middle ground between the quality of rules and their quantity.\n\nUltimately, it all depends on the requirements of the business.","e5dcf727":"## This notebook is about applying Market Basket Analysis (MBA) using Association rule mining on supermarket data.","40ef06b9":"# EDA","ea7ad605":"\n- minimum support = 0.01\n\n means the itemset occurs in 1% of the transactions.  min_support should be selected as per the requirement of the business.\n\n- minimum confidence = 0.3 or 30%\n\n means that, whenever the customer bought items in the antecedent, 30% of the times he\/she also bought items in the consequents. The higher the min_confidence, the lesser the rules we generate.\n\n- lift > 1\n\n means that, there is a dependence between the antecedent and consequent\n\n","a40bfd26":"### How many baskets\/transaction are in the data set?","25c27322":"## Preprocessing data\n\nconsolidate the items into 1 transaction per row with each product","d6b59ae5":"## Generate rules","870da651":"### Contribution of top \"sold products\" to total sales","ef4ea73f":"### Monthly revenue","133fa9c5":"Association rules can be applied in many ways, one of the most popular one appears in a shopping baskets data sets, as it can bring valuable information to the shops, and it can answer many questions like: How the catalog of products should be designed? Where each product should be located in the shop? Which products should receive a promotion? Additionally, we can predict customer behavior.","7fdca38c":"### Monthly Revenue Growth Rate","beeee053":"\nAs we can see in the results above, we obtained a large lift value. As the value in this top is greater than 1, it means that the occurrence of the first product (for example, PRD0900173) has a positive effect on the occurrence of the product (PRD0903052)\n\nConfident of the rule is 38.4%, which means that 38.4% of the time the antecedent items occurred, we also had the consequent in the transaction (i.e., 38.4% of times, customers who bought PRD0900173 also bought PRD0903052).","c0659445":"# Market base analysis ","431d0678":"There are a lot of zeros in the data but we also need to make sure any positive values are converted to a 1 and anything less than 0 is set to 0","55f30487":"### Monthly Customer Growth Rate","0fbbf6ed":"## Generate frequent itemsets","a5f467a4":"## Conclusion ","d9b5e4da":"### Monthly Customer","77455b25":"# load data"}}