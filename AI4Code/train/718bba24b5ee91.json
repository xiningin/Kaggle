{"cell_type":{"9950bb1c":"code","8ec34915":"code","3c95f089":"code","86c0e004":"code","8f9af500":"code","3a3c4cb1":"code","3d630a0d":"code","8d9daa55":"code","c0babdd9":"code","cc4a1ae1":"code","302f9b70":"code","71e74267":"code","a338743d":"code","54604bcc":"code","f3c5b982":"code","5c9c9fad":"code","df4edab4":"code","a7b54c32":"code","a37ccdf1":"code","f2ed516d":"code","4b4bc0d5":"code","f51d043a":"code","4663d7ee":"code","c4c2d04d":"code","11b8e25a":"code","bc718acb":"code","0710b327":"code","495bb973":"code","f6b288dc":"code","1a5aa202":"code","07b35a23":"code","57d71981":"code","569da5fe":"code","0b2aef86":"code","1d6123bd":"code","06a4ef68":"code","b584728c":"code","2fcc1b9e":"code","fa009b03":"code","ad9da87a":"code","dacbe260":"code","82c327f1":"code","3e44d27d":"code","cafd9366":"code","7d6008e7":"code","57ad6d34":"code","79410360":"code","a1c7b11b":"code","ce02c67b":"code","0eefcd38":"code","40730754":"code","6713c48c":"code","3b66bc9c":"code","47c96335":"code","630b5d33":"code","f7ab752d":"code","698d13b3":"code","78601815":"code","bdf5f68b":"code","d90bf454":"code","5e395614":"code","596e1db1":"code","86bc845b":"code","f1a85a28":"code","2171ed8c":"code","43cb7e6c":"code","3890381a":"code","00bb0554":"code","9bdb23b9":"code","c89dd4a1":"code","f80e3a6c":"code","bf74741a":"code","1c10dc0d":"code","17a62f6c":"code","4e4699bb":"code","85bb01ef":"code","65d05252":"code","d9c1f611":"code","7bf40014":"code","c1e6f03b":"code","75dc823f":"code","b9ed28cd":"code","3e11dbbe":"code","b14b2ee4":"code","3e3113f3":"code","a51a65b1":"code","4dd984d3":"code","c0dc53a0":"code","54e66e4e":"code","d91c8f42":"code","adce8ff5":"code","0d1cc652":"code","270c5771":"code","4d569127":"code","084d9063":"code","91532f60":"code","1e0f06f7":"code","b9a33fbf":"code","9b9a1cf4":"code","f79cc9ba":"code","34a98e58":"code","09362542":"code","cae6e63a":"code","6a857d0c":"code","cd2140f9":"code","7f57dfff":"code","c75eb50c":"code","c0f7d693":"code","19c3ffd9":"code","696566f0":"code","1ca20d1c":"code","1f42eafc":"code","9f5370a1":"code","ac9e2877":"code","9c5d8125":"code","d8323196":"code","11c5e9e8":"code","fb689b06":"code","5ac85e86":"code","16593cdc":"code","2930a1ee":"code","c9363b7d":"code","9c978117":"code","7a920271":"code","d3c95dae":"code","74bfc4f4":"code","c7bc7134":"code","54d1f05a":"code","956ce3a1":"code","eec4cf6f":"code","fdbddecf":"code","eebfe02b":"code","9899eef5":"code","f75e01aa":"code","07774d40":"code","25a81e6a":"code","ff577b8f":"code","f8656d53":"code","664584db":"code","a9b2fc33":"code","08cabad9":"code","d988feb2":"code","e92eea37":"code","03c28e4f":"code","adf3a8ff":"code","331d2d59":"code","74fb7a7b":"code","b2f660da":"code","62e6cba1":"code","0587a931":"code","28134b25":"code","1bab69a6":"code","22c7fd5b":"code","e98713e2":"code","5fd04713":"code","18677ea1":"code","f60a6ab8":"code","ac054ef8":"code","4ac4d6cb":"code","6a471eb4":"code","1e5675b5":"code","3899f001":"code","3ea82735":"code","eab45641":"code","ab4e7add":"code","0e655a91":"code","51e20990":"code","563d25f4":"code","b53f1824":"code","525bedf6":"code","ba817a23":"code","c81972bc":"code","40c33cc9":"code","c8477b90":"code","4d5d5993":"code","5a7c20e9":"code","9d1490e9":"code","0da21c08":"code","455b742c":"code","e734ab4f":"code","f230f0af":"code","ad044218":"code","99e5dcea":"code","ab71d1f3":"code","fa55d5fe":"markdown","43310f91":"markdown","70cec5a9":"markdown","0cabcb29":"markdown","1a81bacf":"markdown","a311454a":"markdown","7817401f":"markdown","32101e33":"markdown","d0f6d580":"markdown","173d0bea":"markdown","a29221a5":"markdown","5a97fa79":"markdown","2f481048":"markdown","ae9f4395":"markdown","81a81d55":"markdown","63290916":"markdown","119132ae":"markdown","cfabb1a7":"markdown","7a689406":"markdown","89accf98":"markdown","841a21f0":"markdown","094b9f93":"markdown","78e89ec3":"markdown","2decedec":"markdown","48848743":"markdown","5460aa36":"markdown","ae2cf6e3":"markdown","0d6a595e":"markdown","55ba0c6a":"markdown","24f83e12":"markdown"},"source":{"9950bb1c":"!pip install dataprep by\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfrom mpl_toolkits.mplot3d import Axes3D\nimport statsmodels.api as sm\nimport missingno as msno\nimport statsmodels.stats.api as sms\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import scale\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom scipy.stats import levene\nfrom scipy.stats import shapiro\nfrom scipy.stats.stats import pearsonr\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn.preprocessing import scale\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\nfrom sklearn import linear_model\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor, GradientBoostingClassifier\nimport xgboost as xgb\nfrom xgboost import XGBRegressor, XGBClassifier\nfrom lightgbm import LGBMRegressor, LGBMClassifier\nfrom catboost import CatBoostRegressor, CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn import tree\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.manifold import Isomap,TSNE\nfrom sklearn.feature_selection import mutual_info_classif\nfrom tqdm.notebook import tqdm\nfrom scipy.stats import ttest_ind\nimport plotly.offline as pyo\nimport scipy.stats as stats\nimport pymc3 as pm\nfrom dataprep.eda import *\nfrom dataprep.eda import plot\nfrom dataprep.eda import plot_diff\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda import plot_missing\nimport plotly.figure_factory as ff\nfrom collections import Counter\nimport pandas_profiling as pp\nfrom mpl_toolkits.basemap import Basemap\nimport datetime as dt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\n\nfilterwarnings(\"ignore\", category=DeprecationWarning) \nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","8ec34915":"HR_JOB_CSV = pd.read_csv(\"..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")\nData = HR_JOB_CSV.copy()","3c95f089":"HR_JOB_CSV","86c0e004":"Data.drop([\"enrollee_id\",\"city\"],axis=1,inplace=True)","8f9af500":"Data[\"experience\"].replace({np.NaN:0,\">20\":22,\"<1\":0},inplace=True)","3a3c4cb1":"Data[\"last_new_job\"].replace({np.NaN:0,\">4\":5,\"never\":0},inplace=True)","3d630a0d":"Data[\"relevent_experience\"].replace({\"Has relevent experience\":\"YES\",\"No relevent experience\":\"NO\"},inplace=True)","8d9daa55":"Data[\"experience\"] = Data[\"experience\"].astype(int)","c0babdd9":"Data[\"last_new_job\"] = Data[\"last_new_job\"].astype(int)","cc4a1ae1":"def company_size_normal(x):\n    \n    if x == \"<10\":\n        return \"LOCAL\"\n    elif x == \"50-99\" or x == \"10\/49\":\n        return \"SMALL\"\n    elif x == \"100-500\":\n        return \"MEDIUM_SCALE\"\n    elif x == \"500-999\":\n        return \"UPPER_SCALE\"\n    elif x == \"1000-4999\" or x == \"5000-9999\":\n        return \"EXTENDED\"\n    elif x == \"10000+\":\n        return \"LARGE_SCALE\"","302f9b70":"def last_new_job_normal(x):\n    if x == 0:\n        return \"NEVER\"\n    elif 0 < x <= 2:\n        return \"LITTLE_TIME\"\n    elif x > 2:\n        return \"WAITING_TOO_MUCH\"\n    else:\n        pass","71e74267":"def experience_normal(x):\n    \n    if x == 0:\n        return 0\n    elif 0 < x <= 3:\n        return \"JUNIOR\"\n    elif 3 < x <= 7:\n        return \"MIDDLE_EXPERIENCE\"\n    elif 7 < x <= 15:\n        return \"SENIOR\"\n    elif x > 15:\n        return \"DOMINATE_BUSINESS\"","a338743d":"def city_index_normal(x):\n    \n    if x > 0:\n        return \"%.2f\" % x","54604bcc":"Data[\"company_size\"] = Data[\"company_size\"].apply(lambda x: company_size_normal(x))","f3c5b982":"Data[\"experience\"] = Data[\"experience\"].apply(lambda x: experience_normal(x))","5c9c9fad":"Data[\"last_new_job\"] = Data[\"last_new_job\"].apply(lambda x: last_new_job_normal(x))","df4edab4":"Data[\"city_development_index\"] = Data[\"city_development_index\"].apply(lambda x: city_index_normal(x))","a7b54c32":"Data[\"city_development_index\"] = Data[\"city_development_index\"].astype(float)","a37ccdf1":"Data[\"experience\"].replace({0:np.NaN},inplace=True)","f2ed516d":"Data","4b4bc0d5":"print(\"INFO:\\n\")\nprint(Data.info())","f51d043a":"print(\"COLUMN:\\n\")\nprint(Data.columns)","4663d7ee":"print(\"SHAPE: \",Data.shape)\nprint(\"SIZE: \",Data.size)","c4c2d04d":"print(\"DUPLICATED VALUES:\\n\")\nprint(Data.duplicated().sum())","11b8e25a":"print(\"NAN VALUES:\\n\")\nprint(Data.isna().sum())","bc718acb":"print(\"VALUE:\\n\")\nprint(Data[\"city_development_index\"].value_counts())","0710b327":"print(\"VALUE:\\n\")\nprint(Data[\"gender\"].value_counts())","495bb973":"print(\"VALUE:\\n\")\nprint(Data[\"relevent_experience\"].value_counts())","f6b288dc":"print(\"VALUE:\\n\")\nprint(Data[\"enrolled_university\"].value_counts())","1a5aa202":"print(\"VALUE:\\n\")\nprint(Data[\"education_level\"].value_counts())","07b35a23":"print(\"VALUE:\\n\")\nprint(Data[\"major_discipline\"].value_counts())","57d71981":"print(\"VALUE:\\n\")\nprint(Data[\"experience\"].value_counts())","569da5fe":"print(\"VALUE:\\n\")\nprint(Data[\"company_size\"].value_counts())","0b2aef86":"print(\"VALUE:\\n\")\nprint(Data[\"company_type\"].value_counts())","1d6123bd":"print(\"VALUE:\\n\")\nprint(Data[\"last_new_job\"].value_counts())","06a4ef68":"print(\"VALUE:\\n\")\nprint(Data[\"training_hours\"].value_counts())","b584728c":"print(\"VALUE:\\n\")\nprint(Data[\"target\"].value_counts())","2fcc1b9e":"Data.sort_values(by=[\"city_development_index\"],inplace=True)","fa009b03":"Data = Data.reset_index(drop=True)","ad9da87a":"Data","dacbe260":"msno.matrix(Data,figsize=(17,5))\nplt.tight_layout()\nplt.show()","82c327f1":"msno.bar(Data,figsize=(17,5))\nplt.tight_layout()\nplt.show()","3e44d27d":"msno.heatmap(Data,figsize=(17,5))\nplt.tight_layout()\nplt.show()","cafd9366":"figure = plt.figure(figsize=(17,5))\nNAN_DATA = Data.isna().sum().sort_values(ascending=False).to_frame()\nsns.heatmap(NAN_DATA,fmt=\"d\",cmap=\"hot\")\nplt.title(\"NAN VALUES\")\nplt.tight_layout()\nplt.show()","7d6008e7":"Mode_Data = Data.copy()","57ad6d34":"Data.columns[1:9]","79410360":"Mode_Data[\"gender\"].fillna(Mode_Data[\"gender\"].mode()[0],inplace=True)\nMode_Data[\"enrolled_university\"].fillna(Mode_Data[\"enrolled_university\"].mode()[0],inplace=True)\nMode_Data[\"education_level\"].fillna(Mode_Data[\"education_level\"].mode()[0],inplace=True)\nMode_Data[\"major_discipline\"].fillna(Mode_Data[\"major_discipline\"].mode()[0],inplace=True)\nMode_Data[\"experience\"].fillna(Mode_Data[\"experience\"].mode()[0],inplace=True)\nMode_Data[\"company_size\"].fillna(Mode_Data[\"company_size\"].mode()[0],inplace=True)\nMode_Data[\"company_type\"].fillna(Mode_Data[\"company_type\"].mode()[0],inplace=True)","a1c7b11b":"print(\"NAN VALUES:\\n\")\nprint(Mode_Data.isna().sum())","ce02c67b":"Mode_Data = Mode_Data.reset_index(drop=True)","0eefcd38":"Mode_Data","40730754":"Data.dropna(inplace=True)","6713c48c":"print(\"NAN VALUES:\\n\")\nprint(Data.isna().sum())","3b66bc9c":"Data = Data.reset_index(drop=True)","47c96335":"Data","630b5d33":"Label_Func = LabelEncoder()\n\nEncoded_Mode = Mode_Data.copy()\nEncoded_Data = Data.copy()","f7ab752d":"Mode_Data.columns[1:10]","698d13b3":"for x_columns in Mode_Data.columns[1:10]:\n    Encoded_Mode[x_columns] = Label_Func.fit_transform(Encoded_Mode[x_columns])","78601815":"Encoded_Mode = Encoded_Mode.astype(np.float32)","bdf5f68b":"print(\"INFO:\\n\")\nprint(Encoded_Mode.info())","d90bf454":"Encoded_Mode","5e395614":"for x_columns in Data.columns[1:10]:\n    Encoded_Data[x_columns] = Label_Func.fit_transform(Encoded_Data[x_columns])","596e1db1":"Encoded_Data = Encoded_Data.astype(np.float32)","86bc845b":"print(\"INFO:\\n\")\nprint(Encoded_Data.info())","f1a85a28":"Encoded_Data","2171ed8c":"plt.style.use(\"dark_background\")","43cb7e6c":"Pearson_Mode = Encoded_Mode.corr(method=\"pearson\")\nSpearman_Mode = Encoded_Mode.corr(method=\"spearman\")","3890381a":"Pearson_Data = Encoded_Data.corr(method=\"pearson\")\nSpearman_Data = Encoded_Data.corr(method=\"spearman\")","00bb0554":"figure = plt.figure(figsize=(25,10))\n\nsns.heatmap(Pearson_Mode,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"hot\")\nplt.title(\"PEARSON MODE\")\nplt.tight_layout()\nplt.show()","9bdb23b9":"figure = plt.figure(figsize=(25,10))\n\nsns.heatmap(Spearman_Mode,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"jet\")\nplt.title(\"SPEARMAN MODE\")\nplt.tight_layout()\nplt.show()","c89dd4a1":"figure = plt.figure(figsize=(25,10))\n\nsns.heatmap(Pearson_Data,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"hot\")\nplt.title(\"PEARSON DATA\")\nplt.tight_layout()\nplt.show()","f80e3a6c":"figure = plt.figure(figsize=(25,10))\n\nsns.heatmap(Spearman_Data,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"jet\")\nplt.title(\"SPEARMAN DATA\")\nplt.tight_layout()\nplt.show()","bf74741a":"print(Pearson_Mode)","1c10dc0d":"print(Pearson_Data)","17a62f6c":"print(Spearman_Mode)","4e4699bb":"print(Spearman_Data)","85bb01ef":"Cov_Mode = Encoded_Mode.cov()\nCov_Data = Encoded_Data.cov()","65d05252":"figure = plt.figure(figsize=(25,10))\n\nsns.heatmap(Cov_Mode,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"Spectral\")\nplt.title(\"COVARIANCE MODE\")\nplt.tight_layout()\nplt.show()","d9c1f611":"figure = plt.figure(figsize=(25,10))\n\nsns.heatmap(Cov_Data,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"Spectral\")\nplt.title(\"COVARIANCE DATA\")\nplt.tight_layout()\nplt.show()","7bf40014":"print(Cov_Mode)","c1e6f03b":"print(Cov_Data)","75dc823f":"print(\"INFO:\\n\")\nprint(Data.info())","b9ed28cd":"Data.columns","3e11dbbe":"print(\"GENDER-TARGET MAX\\n\")\nprint(Data.groupby([\"gender\"])[\"target\"].max())","b14b2ee4":"print(\"RELEVENT EXPERIENCE-TARGET MAX\\n\")\nprint(Data.groupby([\"relevent_experience\"])[\"target\"].max())","3e3113f3":"print(\"ENROLLED UNIVERSITY-TARGET MAX\\n\")\nprint(Data.groupby([\"enrolled_university\"])[\"target\"].max())","a51a65b1":"print(\"EDUCATION-TARGET MAX\\n\")\nprint(Data.groupby([\"education_level\"])[\"target\"].max())","4dd984d3":"print(\"DISCIPLINE-TARGET MAX\\n\")\nprint(Data.groupby([\"major_discipline\"])[\"target\"].max())","c0dc53a0":"print(\"COMPANY SIZE-TARGET MAX\\n\")\nprint(Data.groupby([\"company_size\"])[\"target\"].max())","54e66e4e":"print(\"COMPANY TYPE-TARGET MAX\\n\")\nprint(Data.groupby([\"company_type\"])[\"target\"].max())","d91c8f42":"print(\"LAST TIME NEW JOB-TARGET MAX\\n\")\nprint(Data.groupby([\"last_new_job\"])[\"target\"].max())","adce8ff5":"print(\"GENDER TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"gender\",\"target\"])[\"training_hours\"].mean())","0d1cc652":"print(\"RELEVENT EXPERIENCE TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"relevent_experience\",\"target\"])[\"training_hours\"].mean())","270c5771":"print(\"ENROLLED UNIVERSITY TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"enrolled_university\",\"target\"])[\"training_hours\"].mean())","4d569127":"print(\"EDUCATION TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"education_level\",\"target\"])[\"training_hours\"].mean())","084d9063":"print(\"DISCIPLINE TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"major_discipline\",\"target\"])[\"training_hours\"].mean())","91532f60":"print(\"COMPANY SIZE TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"company_size\",\"target\"])[\"training_hours\"].mean())","1e0f06f7":"print(\"COMPANY TYPE TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"company_type\",\"target\"])[\"training_hours\"].mean())","b9a33fbf":"print(\"LAST TIME NEW JOB TARGET-TRAINING HOURS MEAN\\n\")\nprint(Data.groupby([\"last_new_job\",\"target\"])[\"training_hours\"].mean())","9b9a1cf4":"print(\"TARGET-INDEX MEAN\\n\")\nprint(Data.groupby([\"target\"])[\"city_development_index\"].mean())","f79cc9ba":"print(\"TARGET GENDER-INDEX MEAN\\n\")\nprint(Data.groupby([\"gender\",\"target\"])[\"city_development_index\"].mean())","34a98e58":"print(\"TARGET RELEVENT EXPERIENCE-INDEX MEAN\\n\")\nprint(Data.groupby([\"relevent_experience\",\"target\"])[\"city_development_index\"].mean())","09362542":"print(\"TARGET ENROLLED UNIVERSITY-INDEX MEAN\\n\")\nprint(Data.groupby([\"enrolled_university\",\"target\"])[\"city_development_index\"].mean())","cae6e63a":"print(\"TARGET EDUCATION LEVEL-INDEX MEAN\\n\")\nprint(Data.groupby([\"education_level\",\"target\"])[\"city_development_index\"].mean())","6a857d0c":"print(\"TARGET DISCIPLINE-INDEX MEAN\\n\")\nprint(Data.groupby([\"major_discipline\",\"target\"])[\"city_development_index\"].mean())","cd2140f9":"print(\"TARGET COMPANY SIZE-INDEX MEAN\\n\")\nprint(Data.groupby([\"company_size\",\"target\"])[\"city_development_index\"].mean())","7f57dfff":"print(\"TARGET COMPANY TYPE-INDEX MEAN\\n\")\nprint(Data.groupby([\"company_type\",\"target\"])[\"city_development_index\"].mean())","c75eb50c":"print(\"TARGET LAST TIME NEW JOB-INDEX MEAN\\n\")\nprint(Data.groupby([\"last_new_job\",\"target\"])[\"city_development_index\"].mean())","c0f7d693":"Target_0 = Data[Data[\"target\"] == 0]\nTarget_1 = Data[Data[\"target\"] == 1]\n\nTarget_0 = Target_0.reset_index(drop=True)\nTarget_1 = Target_1.reset_index(drop=True)","19c3ffd9":"print(\"MAX \/ MIN EXPERIENCE FOR (NOT LOOKING FOR A JOB)\")\nprint(Target_0[\"experience\"].max())\nprint(Target_0[\"experience\"].min())\nprint(\"----\"*10)\nprint(\"MAX \/ MIN EXPERIENCE FOR (LOOKING FOR A JOB)\")\nprint(Target_1[\"experience\"].max())\nprint(Target_1[\"experience\"].min())","696566f0":"print(\"MAX \/ MIN COMPANY SIZE FOR (NOT LOOKING FOR A JOB)\")\nprint(Target_0[\"company_size\"].max())\nprint(Target_0[\"company_size\"].min())\nprint(\"----\"*10)\nprint(\"MAX \/ MIN COMPANY SIZE FOR (LOOKING FOR A JOB)\")\nprint(Target_1[\"company_size\"].max())\nprint(Target_1[\"company_size\"].min())","1ca20d1c":"print(\"MAX \/ MIN COMPANY TYPE FOR (NOT LOOKING FOR A JOB)\")\nprint(Target_0[\"company_type\"].max())\nprint(Target_0[\"company_type\"].min())\nprint(\"----\"*10)\nprint(\"MAX \/ MIN COMPANY TYPE FOR (LOOKING FOR A JOB)\")\nprint(Target_1[\"company_type\"].max())\nprint(Target_1[\"company_type\"].min())","1f42eafc":"print(\"MAX \/ MIN LAST TIME NEW JOB FOR (NOT LOOKING FOR A JOB)\")\nprint(Target_0[\"last_new_job\"].max())\nprint(Target_0[\"last_new_job\"].min())\nprint(\"----\"*10)\nprint(\"MAX \/ MIN LAST TIME NEW JOB FOR (LOOKING FOR A JOB)\")\nprint(Target_1[\"last_new_job\"].max())\nprint(Target_1[\"last_new_job\"].min())","9f5370a1":"print(\"MAX \/ MIN DISCIPLINE FOR (NOT LOOKING FOR A JOB)\")\nprint(Target_0[\"major_discipline\"].max())\nprint(Target_0[\"major_discipline\"].min())\nprint(\"----\"*10)\nprint(\"MAX \/ MIN DISCIPLINE FOR (LOOKING FOR A JOB)\")\nprint(Target_1[\"major_discipline\"].max())\nprint(Target_1[\"major_discipline\"].min())","ac9e2877":"print(\"MAX \/ MIN RELEVENT EXPERIENCE FOR (NOT LOOKING FOR A JOB)\")\nprint(Target_0[\"relevent_experience\"].max())\nprint(Target_0[\"relevent_experience\"].min())\nprint(\"----\"*10)\nprint(\"MAX \/ MIN RELEVENT EXPERIENCE FOR (LOOKING FOR A JOB)\")\nprint(Target_1[\"relevent_experience\"].max())\nprint(Target_1[\"relevent_experience\"].min()) ","9c5d8125":"figure = plt.figure(figsize=(25,8))\n  \nsns.kdeplot(x=Target_0[\"city_development_index\"],label=\"NOT LOOKING FOR A JOB\")\nsns.kdeplot(x=Target_1[\"city_development_index\"],label=\"LOOKING FOR A JOB\")\nplt.legend(prop=dict(size=10))\nplt.title(\"DEVELOPMENT INDEX\")\nplt.tight_layout()\nplt.show()","d8323196":"figure = plt.figure(figsize=(25,8))\n  \nsns.distplot(x=Target_0[\"city_development_index\"],label=\"NOT LOOKING FOR A JOB\")\nsns.distplot(x=Target_1[\"city_development_index\"],label=\"LOOKING FOR A JOB\")\nplt.legend(prop=dict(size=10))\nplt.title(\"DEVELOPMENT INDEX\")\nplt.tight_layout()\nplt.show()","11c5e9e8":"figure = plt.figure(figsize=(25,15))\n  \nsns.barplot(x=Target_0[\"city_development_index\"],y=Target_0[\"major_discipline\"],hue=Target_0[\"company_size\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-DEVELOPMENT INDEX-COMPANY SIZE\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","fb689b06":"figure = plt.figure(figsize=(25,15))\n  \nsns.barplot(x=Target_1[\"city_development_index\"],y=Target_1[\"major_discipline\"],hue=Target_1[\"company_size\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-DEVELOPMENT INDEX-COMPANY SIZE\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","5ac85e86":"figure = plt.figure(figsize=(25,15))\n  \nsns.barplot(x=Target_0[\"city_development_index\"],y=Target_0[\"major_discipline\"],hue=Target_0[\"company_type\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-DEVELOPMENT INDEX-COMPANY TYPE\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","16593cdc":"figure = plt.figure(figsize=(25,15))\n  \nsns.barplot(x=Target_1[\"city_development_index\"],y=Target_1[\"major_discipline\"],hue=Target_1[\"company_type\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-DEVELOPMENT INDEX-COMPANY TYPE\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","2930a1ee":"figure = plt.figure(figsize=(25,15))\n  \nsns.barplot(x=Target_0[\"city_development_index\"],y=Target_0[\"major_discipline\"],hue=Target_0[\"last_new_job\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-DEVELOPMENT INDEX-LAST TIME NEW JOB\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","c9363b7d":"figure = plt.figure(figsize=(25,15))\n  \nsns.barplot(x=Target_1[\"city_development_index\"],y=Target_1[\"major_discipline\"],hue=Target_1[\"last_new_job\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-DEVELOPMENT INDEX-LAST TIME NEW JOB\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","9c978117":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_0[\"major_discipline\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","7a920271":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_1[\"major_discipline\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","d3c95dae":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_0[\"company_size\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"COMPANY SIZE\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","74bfc4f4":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_1[\"company_size\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"COMPANY SIZE\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","c7bc7134":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_0[\"company_type\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"COMPANY TYPE\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","54d1f05a":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_1[\"company_type\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"COMPANY TYPE\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","956ce3a1":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_0[\"experience\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"EXPERIENCE\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","eec4cf6f":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_1[\"experience\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"EXPERIENCE\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","fdbddecf":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_0[\"education_level\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"EDUCATION\/NOT LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","eebfe02b":"figure = plt.figure(figsize=(25,10))\n  \nplt.hist(Target_1[\"education_level\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"EDUCATION\/LOOKING FOR A JOB\")\nplt.tight_layout()\nplt.show()","9899eef5":"figure = plt.figure(figsize=(25,8))\n  \nsns.barplot(x=Data[\"city_development_index\"],y=Data[\"major_discipline\"],hue=Data[\"target\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-DEVELOPMENT INDEX\/TARGET\")\nplt.tight_layout()\nplt.show()","f75e01aa":"figure = plt.figure(figsize=(25,8))\n  \nsns.barplot(x=Data[\"city_development_index\"],y=Data[\"company_size\"],hue=Data[\"target\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-COMPANY SIZE\/TARGET\")\nplt.tight_layout()\nplt.show()","07774d40":"figure = plt.figure(figsize=(25,8))\n  \nsns.barplot(x=Data[\"city_development_index\"],y=Data[\"company_type\"],hue=Data[\"target\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-COMPANY TYPE\/TARGET\")\nplt.tight_layout()\nplt.show()","25a81e6a":"figure = plt.figure(figsize=(25,8))\n  \nsns.barplot(x=Data[\"city_development_index\"],y=Data[\"experience\"],hue=Data[\"target\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-EXPERIENCE\/TARGET\")\nplt.tight_layout()\nplt.show()","ff577b8f":"figure = plt.figure(figsize=(25,8))\n  \nsns.barplot(x=Data[\"city_development_index\"],y=Data[\"gender\"],hue=Data[\"target\"])\nplt.legend(prop=dict(size=10))\nplt.title(\"DISCIPLINE-GENDER\/TARGET\")\nplt.tight_layout()\nplt.show()","f8656d53":"figure = plt.figure(figsize=(15,8))\n\nsns.histplot(x=Data[\"city_development_index\"],hue=Data[\"experience\"],multiple=\"stack\",edgecolor=\".3\",linewidth=.5)\n\nplt.title(\"INDEX-EXPERIENCE\")\nplt.tight_layout()\nplt.show()","664584db":"figure = plt.figure(figsize=(15,8))\n\nsns.histplot(x=Data[\"gender\"],hue=Data[\"target\"],multiple=\"stack\",edgecolor=\".3\",linewidth=.5)\n\nplt.title(\"GENDER-TARGET\")\nplt.tight_layout()\nplt.show()","a9b2fc33":"figure = plt.figure(figsize=(15,8))\n\nsns.histplot(x=Data[\"experience\"],hue=Data[\"target\"],multiple=\"stack\",edgecolor=\".3\",linewidth=.5)\n\nplt.title(\"EXPERIENCE-TARGET\")\nplt.tight_layout()\nplt.show()","08cabad9":"figure = plt.figure(figsize=(15,8))\n\nsns.histplot(x=Data[\"major_discipline\"],hue=Data[\"target\"],multiple=\"stack\",edgecolor=\".3\",linewidth=.5)\n\nplt.title(\"DISCIPLINE-TARGET\")\nplt.tight_layout()\nplt.show()","d988feb2":"figure = plt.figure(figsize=(15,8))\n\nsns.histplot(x=Data[\"company_size\"],hue=Data[\"target\"],multiple=\"stack\",edgecolor=\".3\",linewidth=.5)\n\nplt.title(\"COMPANY SIZE-TARGET\")\nplt.tight_layout()\nplt.show()","e92eea37":"figure = plt.figure(figsize=(15,8))\n\nsns.histplot(x=Data[\"company_type\"],hue=Data[\"target\"],multiple=\"stack\",edgecolor=\".3\",linewidth=.5)\n\nplt.title(\"COMPANY TYPE-TARGET\")\nplt.tight_layout()\nplt.show()","03c28e4f":"figure = plt.figure(figsize=(15,8))\n\nsns.histplot(x=Data[\"education_level\"],hue=Data[\"target\"],multiple=\"stack\",edgecolor=\".3\",linewidth=.5)\n\nplt.title(\"EDUCATION-TARGET\")\nplt.tight_layout()\nplt.show()","adf3a8ff":"figure = plt.figure(figsize=(25,12))\n\nsns.scatterplot(x=Data[\"city_development_index\"],y=Data[\"training_hours\"],hue=Data[\"target\"])\n\nplt.title(\"INDEX-TRAINING\/TARGET\")\nplt.tight_layout()\nplt.show()","331d2d59":"figure = plt.figure(figsize=(25,12))\n\nsns.scatterplot(x=Data[\"city_development_index\"],y=Data[\"training_hours\"],hue=Data[\"education_level\"])\n\nplt.title(\"INDEX-TRAINING\/EDUCATION\")\nplt.tight_layout()\nplt.show()","74fb7a7b":"figure = plt.figure(figsize=(25,12))\n\nsns.lineplot(x=Data[\"city_development_index\"],y=Data[\"training_hours\"],hue=Data[\"target\"])\n\nplt.title(\"INDEX-TRAINING\/TARGET\")\nplt.tight_layout()\nplt.show()","b2f660da":"figure = plt.figure(figsize=(25,12))\n\nsns.lineplot(x=Data[\"city_development_index\"],y=Data[\"training_hours\"],hue=Data[\"education_level\"])\n\nplt.title(\"INDEX-TRAINING\/EDUCATION\")\nplt.tight_layout()\nplt.show()","62e6cba1":"figure = px.sunburst(Data,\n                  path=['target', 'gender', 'education_level'])\n\nfigure.update_layout(title_text=\"<b>TARGET-GENDER-EDUCATION<b>\", \n                  titlefont={'size': 24, 'family':'Serif'},\n                  width=750, \n                  height=750,\n                 )\nfigure.show()\n\nplt.tight_layout()\nplt.show()","0587a931":"figure = px.sunburst(Data,\n                  path=['target', 'company_size', 'experience'])\n\nfigure.update_layout(title_text=\"<b>TARGET-COMPANY SIZE-EXPERIENCE<b>\", \n                  titlefont={'size': 24, 'family':'Serif'},\n                  width=750, \n                  height=750,\n                 )\nfigure.show()\n\nplt.tight_layout()\nplt.show()","28134b25":"figure = go.Figure()\nfigure.add_trace(\n    go.Pie(\n        labels=Data['target'],\n        values=None,\n        pull=[0, 0, 0.15, 0, 0, 0],\n        ),   \n    )\nfigure.update_traces(\n    hoverinfo='label+value',\n    textinfo='label+percent',\n    textfont_size=12,\n    marker=dict(\n        colors=['lightseagreen', 'lightsalmon'],\n        line=dict(color='#000000',\n                  width=2)\n        )\n    )\nfigure.layout.update(title=\"<b> TARGET <b>\",\n                  titlefont={'size':28, 'family': 'Serif',},\n                  showlegend=False, \n                  height=600, \n                  width=600, \n                  template=None, \n                 )\nannotations = []\nannotations.append(dict(xref='paper', yref='paper',\n                        x=0.12, y=1.03,\n                        text=\"<i>TARGET TOTAL VALUES<i>\",\n                             font=dict(\n                                 family='Arial', \n                                 size=14, \n                                 color='black'\n                             ),\n                        showarrow=False)\n                  )\nfigure.update_layout(annotations=annotations)\nfigure.show()","1bab69a6":"figure = go.Figure()\nfigure.add_trace(\n    go.Pie(\n        labels=Data['education_level'],\n        values=None,\n        pull=[0, 0, 0.15, 0, 0, 0],\n        ),   \n    )\nfigure.update_traces(\n    hoverinfo='label+value',\n    textinfo='label+percent',\n    textfont_size=12,\n    marker=dict(\n        colors=['lightseagreen', 'lightsalmon'],\n        line=dict(color='#000000',\n                  width=2)\n        )\n    )\nfigure.layout.update(title=\"<b> EDUCATION <b>\",\n                  titlefont={'size':28, 'family': 'Serif',},\n                  showlegend=False, \n                  height=600, \n                  width=600, \n                  template=None, \n                 )\nannotations = []\nannotations.append(dict(xref='paper', yref='paper',\n                        x=0.12, y=1.03,\n                        text=\"<i>EDUCATION TOTAL VALUES<i>\",\n                             font=dict(\n                                 family='Arial', \n                                 size=14, \n                                 color='black'\n                             ),\n                        showarrow=False)\n                  )\nfigure.update_layout(annotations=annotations)\nfigure.show()","22c7fd5b":"figure = go.Figure()\nfigure.add_trace(\n    go.Pie(\n        labels=Data['company_type'],\n        values=None,\n        pull=[0, 0, 0.15, 0, 0, 0],\n        ),   \n    )\nfigure.update_traces(\n    hoverinfo='label+value',\n    textinfo='label+percent',\n    textfont_size=12,\n    marker=dict(\n        colors=['lightseagreen', 'lightsalmon'],\n        line=dict(color='#000000',\n                  width=2)\n        )\n    )\nfigure.layout.update(title=\"<b> COMPANY TYPE <b>\",\n                  titlefont={'size':28, 'family': 'Serif',},\n                  showlegend=False, \n                  height=600, \n                  width=600, \n                  template=None, \n                 )\nannotations = []\nannotations.append(dict(xref='paper', yref='paper',\n                        x=0.12, y=1.03,\n                        text=\"<i>COMPANY TYPE TOTAL VALUES<i>\",\n                             font=dict(\n                                 family='Arial', \n                                 size=14, \n                                 color='black'\n                             ),\n                        showarrow=False)\n                  )\nfigure.update_layout(annotations=annotations)\nfigure.show()","e98713e2":"figure = go.Figure()\nfigure.add_trace(\n    go.Pie(\n        labels=Data['experience'],\n        values=None,\n        pull=[0, 0, 0.15, 0, 0, 0],\n        ),   \n    )\nfigure.update_traces(\n    hoverinfo='label+value',\n    textinfo='label+percent',\n    textfont_size=12,\n    marker=dict(\n        colors=['lightseagreen', 'lightsalmon'],\n        line=dict(color='#000000',\n                  width=2)\n        )\n    )\nfigure.layout.update(title=\"<b> EXPERIENCE <b>\",\n                  titlefont={'size':28, 'family': 'Serif',},\n                  showlegend=False, \n                  height=600, \n                  width=600, \n                  template=None, \n                 )\nannotations = []\nannotations.append(dict(xref='paper', yref='paper',\n                        x=0.12, y=1.03,\n                        text=\"<i>EXPERIENCE TOTAL VALUES<i>\",\n                             font=dict(\n                                 family='Arial', \n                                 size=14, \n                                 color='black'\n                             ),\n                        showarrow=False)\n                  )\nfigure.update_layout(annotations=annotations)\nfigure.show()","5fd04713":"figure = plt.figure(figsize=(25,17))\nsns.barplot(data=Data,x=list(Data.index),y=list(Data[\"company_size\"]),palette=\"hot\")\nplt.legend(prop=dict(size=10))\nplt.title(\"COMPANY SIZE TOTAL\")\n\nplt.tight_layout()\nplt.show()","18677ea1":"figure = plt.figure(figsize=(25,17))\nsns.barplot(data=Data,x=list(Data.index),y=list(Data[\"company_type\"]),palette=\"hot\")\nplt.legend(prop=dict(size=10))\nplt.title(\"COMPANY TYPE TOTAL\")\n\nplt.tight_layout()\nplt.show()","f60a6ab8":"figure = plt.figure(figsize=(25,17))\nsns.barplot(data=Data,x=list(Data.index),y=list(Data[\"education_level\"]),palette=\"hot\")\nplt.legend(prop=dict(size=10))\nplt.title(\"EDUCATION TOTAL\")\n\nplt.tight_layout()\nplt.show()","ac054ef8":"plot(Data)","4ac4d6cb":"plot(Data, \"target\")","6a471eb4":"pp.ProfileReport(Data)","1e5675b5":"for x_col in Encoded_Data.columns:\n    print(x_col)\n    print(\"---\"*5)\n    print(\"%.4f - %.4f\" % shapiro(Encoded_Data[x_col]))\n    print(\"---\"*15)","3899f001":"for x_col in Encoded_Mode.columns:\n    print(x_col)\n    print(\"---\"*5)\n    print(\"%.4f - %.4f\" % shapiro(Encoded_Mode[x_col]))\n    print(\"---\"*15)","3ea82735":"print(\"%.4f - %.4f\" % levene(Encoded_Data[\"city_development_index\"],Encoded_Data[\"education_level\"],\n                            Encoded_Data[\"company_type\"],Encoded_Data[\"target\"]))","eab45641":"print(\"%.4f - %.4f\" % levene(Encoded_Mode[\"city_development_index\"],Encoded_Mode[\"education_level\"],\n                            Encoded_Mode[\"company_type\"],Encoded_Mode[\"target\"]))","ab4e7add":"Data_For_Outlier = Encoded_Data.copy()","0e655a91":"CLF_Function = LocalOutlierFactor()\n\nCLF_Function.fit_predict(Data_For_Outlier)","51e20990":"General_Score = CLF_Function.negative_outlier_factor_\n\nSorted_Score = np.sort(General_Score)\n\nprint(Sorted_Score[:150])\n\n# checking outlier, look where the biggest jump took place","563d25f4":"point = Sorted_Score[3] # it is index 3\nprint(point)\nprint(\"---\"*10)\nprint(Data_For_Outlier[General_Score == point])","b53f1824":"Delete_Outlier_Data = Encoded_Data.copy()","525bedf6":"outliers = General_Score < point\nprint(Delete_Outlier_Data[outliers])\nprint(\"---\"*20)\nprint(Delete_Outlier_Data[outliers].index)","ba817a23":"Outliers_Index_List = [Delete_Outlier_Data[outliers].index]\n\nfor d_i in Outliers_Index_List:\n    Delete_Outlier_Data.drop(index=d_i,inplace=True)","c81972bc":"Delete_Outlier_Data = Delete_Outlier_Data.reset_index(drop=True)","40c33cc9":"Encoded_Data","c8477b90":"Delete_Outlier_Data","4d5d5993":"Main_Data = Delete_Outlier_Data.copy()","5a7c20e9":"X_values = Main_Data.drop(\"target\",axis=1)\nX_target = Main_Data[\"target\"]","9d1490e9":"X_Train,X_Test,Y_Train,Y_Test = train_test_split(X_values,X_target,test_size=0.2,random_state=42,shuffle=True)","0da21c08":"print(\"X TRAIN SHAPE: \",X_Train.shape)\nprint(\"X TEST SHAPE: \",X_Test.shape)\nprint(\"Y TRAIN SHAPE: \",Y_Train.shape)\nprint(\"Y TEST SHAPE: \",Y_Test.shape)","455b742c":"Scaler_Function = StandardScaler()\n\nX_Train = Scaler_Function.fit_transform(X_Train)\nX_Test = Scaler_Function.fit_transform(X_Test)","e734ab4f":"lj_m = LogisticRegression(solver=\"liblinear\").fit(X_Train,Y_Train)\ngnb_m = GaussianNB().fit(X_Train,Y_Train)\nknnc_m = KNeighborsClassifier().fit(X_Train,Y_Train)\ncartc_m = DecisionTreeClassifier(random_state=42).fit(X_Train,Y_Train)\nrfc_m = RandomForestClassifier(random_state=42,verbose=False).fit(X_Train,Y_Train)\ngbmc_m = GradientBoostingClassifier(verbose=False).fit(X_Train,Y_Train)\nxgbc_m = XGBClassifier().fit(X_Train,Y_Train)\nlgbmc_m = LGBMClassifier().fit(X_Train,Y_Train)\ncatbc_m = CatBoostClassifier(verbose=False).fit(X_Train,Y_Train)","f230f0af":"model_m = [lj_m,gnb_m,knnc_m,cartc_m,rfc_m,gbmc_m,xgbc_m,lgbmc_m,catbc_m]","ad044218":"for model in model_m:\n    name = model.__class__.__name__\n    predict = model.predict(X_Test)\n    R2CV = cross_val_score(model,X_Test,Y_Test,cv=10,verbose=False).mean()\n    error = -cross_val_score(model,X_Test,Y_Test,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n    print(name + \": \")\n    print(\"-\" * 10)\n    print(\"ACC-->\",accuracy_score(Y_Test,predict))\n    print(\"R2CV-->\",R2CV)\n    print(\"MEAN SQUARED ERROR-->\",np.sqrt(error))\n    print(\"-\" * 30)","99e5dcea":"r = pd.DataFrame(columns=[\"MODELS\",\"R2CV\"])\nfor model in model_m:\n    name = model.__class__.__name__\n    R2CV = cross_val_score(model,X_Test,Y_Test,cv=10,verbose=False).mean()\n    result = pd.DataFrame([[name,R2CV*100]],columns=[\"MODELS\",\"R2CV\"])\n    r = r.append(result)\n    \nfigure = plt.figure(figsize=(20,8))   \nsns.barplot(x=\"R2CV\",y=\"MODELS\",data=r,color=\"green\")\nplt.xlabel(\"R2CV\")\nplt.ylabel(\"MODELS\")\nplt.xlim(0,100)\nplt.title(\"MODEL ACCURACY COMPARISON\")\nplt.show()","ab71d1f3":"r = pd.DataFrame(columns=[\"MODELS\",\"error\"])\nfor model in model_m:\n    name = model.__class__.__name__\n    error = -cross_val_score(model,X_Test,Y_Test,cv=10,scoring=\"neg_mean_squared_error\").mean()\n    result = pd.DataFrame([[name,np.sqrt(error)]],columns=[\"MODELS\",\"error\"])\n    r = r.append(result)\n    \nfigure = plt.figure(figsize=(20,8))   \nsns.barplot(x=\"error\",y=\"MODELS\",data=r,color=\"red\")\nplt.xlabel(\"ERROR\")\nplt.ylabel(\"MODELS\")\nplt.xlim(0,2)\nplt.title(\"MODEL ERROR COMPARISON\")\nplt.show()","fa55d5fe":"#### City Development Index\n\nThe City Development Index was developed for the Second United Nations Conference on Human Settlements (Habitat II) in 1996 and measures the level of development in cities. The Urban Indicators Programme of the United Nations Human Settlements Programme (UN-Habitat) developed the indicator so that they could rank cities of the world according to their level of development and as a display of indicators depicting development. The CDI cuts across the different clusters identified in the Urban Indicator Framework as it is based on five sub indices namely, infrastructure, waste, health, education and city product. It is useful as it provides a snap-shot view of how cities are doing with respect to the different indices. It was invented by Dr Joe Flood, first Coordinator of the Urban Indicators Program, following a statistical analysis of city indicators data.\n\n* Calculating the City Development Index\n\nThe City Development Index is calculated according to the formulae in the table below. It has separate sub-indices for Infrastructure, Waste Management, Health, Education, and City Product, which are averaged to form the CDI. Each sub-index is a combination of several indicators that have been normalized to give a value between 0 and 1. Because the variables used to make up the CDI are strongly related to each other, there are a number of ways to calculate the CDI that give almost identical results. For this report, the weightings given to each indicator have been initially calculated by a statistical process called Principal Components Analysis and then simplified. This formulation of the index by and large uses the same formulae as in UNDP Human Development Report (1999), for the Health, Education and City Product sub-indices.\n\nFor meaningful ranking of cities, the index requires data that are essentially complete, robust and precise - so not many variables are suitable. All the underlying data had to be checked for accuracy and completeness. Where there were missing data or based on very inaccurate estimates, they were either replaced by data from another national city of similar size, by country-wide figures (or national urban data, if available) or by figures for a nearby city or place at a similar level of development (but only if absolutely necessary). Also, Formal waste disposal or Wastewater treated is taken as zero if not provided. Where City Product was not provided, it was calculated so that City Product x Household size = 0.45 x Mean Household Income (which is similar to the main estimation formula). For most transition countries 0.35 x Household Income is used since, in transition economies, much GDP goes into indirect services and subsidies. The resultant city products must be somewhere in the vicinity of the National GDP per person, otherwise household incomes are presumed incorrect and adjusted","43310f91":"#### NORMALITY","70cec5a9":"#### SPECIFIC DISCRIMINATION","0cabcb29":"#### VALUE CONTROL","1a81bacf":"#### RE-BUILT","a311454a":"* Normality - the distribution of observations from which samples were collected is a normal \"bell\" curve. b) Homogeneity of variances - requires that different treatments do not change variability of observations. ... AOV is only valid when variances of different samples (treatments) are homogeneous.","7817401f":"#### HOMOGENEITY","32101e33":"#### OUTLIER","d0f6d580":"#### MODE DATA","173d0bea":"# HISTORY\n\n#### Context and Content\nA company which is active in Big Data and Data Science wants to hire data scientists among people who successfully pass some courses which conduct by the company. Many people signup for their training. Company wants to know which of these candidates are really wants to work for the company after training or looking for a new employment because it helps to reduce the cost and time as well as the quality of training or planning the courses and categorization of candidates. Information related to demographics, education, experience are in hands from candidates signup and enrollment.\n\nThis dataset designed to understand the factors that lead a person to leave current job for HR researches too. By model(s) that uses the current credentials,demographics,experience data you will predict the probability of a candidate to look for a new job or will work for the company, as well as interpreting affected factors on employee decision.\n\n\n#### Features\n\n* enrollee_id : Unique ID for candidate\n\n* city: City code\n\n* city_ development _index : Developement index of the city (scaled)\n\n* gender: Gender of candidate\n\n* relevent_experience: Relevant experience of candidate\n\n* enrolled_university: Type of University course enrolled if any\n\n* education_level: Education level of candidate\n\n* major_discipline :Education major discipline of candidate\n\n* experience: Candidate total experience in years\n\n* company_size: No of employees in current employer's company\n\n* company_type : Type of current employer\n\n* lastnewjob: Difference in years between previous job and current job\n\n* training_hours: training hours completed\n\n#### TARGET\n\n* 0 \u2013 Not looking for job change\n* 1 \u2013 Looking for a job change","a29221a5":"* An outlier is an observation that lies an abnormal distance from other values in a random sample from a population. In a sense, this definition leaves it up to the analyst (or a consensus process) to decide what will be considered abnormal. Before abnormal observations can be singled out, it is necessary to characterize normal observations.","5a97fa79":"* In statistics, a sequence of random variables is homoscedastic if all its random variables have the same finite variance. This is also known as homogeneity of variance. The complementary notion is called heteroscedasticity. The spellings homoskedasticity and heteroskedasticity are also frequently used.","2f481048":"#### DELETING NAN VALUES","ae9f4395":"#### GROUPBY MEANING","81a81d55":"#### GRAPHIC","63290916":"* Is p-value of 0.05 Significant?\n\nA p-value less than 0.05 (typically \u2264 0.05) is statistically significant. It indicates strong evidence against the null hypothesis, as there is less than a 5% probability the null is correct (and the results are random)\n\nP-value of 0.01 infers, assuming the postulated null hypothesis is correct, any difference seen (or an even bigger \u201cmore extreme\u201d difference) in the observed results would occur 1 in 100 (or 1%) of the times a study was repeated. The P-value tells you nothing more than this.\n\nThe p-value is calculated using the sampling distribution of the test statistic under the null hypothesis, the sample data, and the type of test being done (lower-tailed test, upper-tailed test, or two-sided test).\n\nThe p-value for: ... an upper-tailed test is specified by:\n\n* p-value = P(TS ts | H 0 is true) = 1 - cdf(ts)","119132ae":"#### NAN VALUES CHECKING","cfabb1a7":"#### MAIN CSV","7a689406":"#### SEPARATING DATA BY TARGETS","89accf98":"# PACKAGES AND LIBRARIES","841a21f0":"#### INFORMATION","094b9f93":"#### SORTING DATA","78e89ec3":"# DATA REVIEW AND RE-BUILT","2decedec":"#### CORRELATION CONTROLLING","48848743":"#### ENCODED DATA","5460aa36":"# PREDICTION PROCESS","ae2cf6e3":"#### CHART","0d6a595e":"#### APPLY THE CV METHOD ON THE MODELS FOR YOUR OWN WORKS\n-----------\n#### END OF THE PROJECT","55ba0c6a":"![](https:\/\/media-exp1.licdn.com\/dms\/image\/C5616AQFxT0DJmBdslQ\/profile-displaybackgroundimage-shrink_200_800\/0\/1586855130123?e=1632960000&v=beta&t=BUxtqVQ-Sgt7IJH7lGh7_5o6ND-p5kH1Ae-NDbi_Jlg)","24f83e12":"#### COVARIANCE CONTROLLING"}}