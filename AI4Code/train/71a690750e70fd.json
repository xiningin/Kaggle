{"cell_type":{"9b2528a1":"code","d0818489":"code","c31a4cb4":"code","d727806e":"code","381c65df":"code","efcafd78":"code","7dfc3d3c":"code","2786aa6a":"code","47b4a8e1":"code","b0791579":"code","6e95a67e":"code","26ca3132":"code","fffb7893":"code","0afb3fdd":"code","205ea7e4":"code","9f391aaf":"code","311b8df5":"code","0b9dc42e":"code","1b52a793":"code","0f432278":"code","e676c375":"code","ee1ee25c":"code","678dea3e":"code","8e5525b8":"code","753bb92f":"code","956d4aee":"code","1dc1a1e1":"code","3cfc415c":"code","fdd75065":"code","f7ccad66":"code","589ccffe":"code","611a91b9":"code","d42c46ef":"code","098548da":"code","39427017":"code","4412a3f6":"code","ca6d90f0":"code","8d384354":"code","fb48d88a":"code","056b9725":"code","66213ac5":"code","1546f255":"code","9cf4b20e":"code","7d6d2b13":"code","3841ff09":"code","499245c1":"code","d8f4c441":"code","992eacca":"code","e0895e39":"code","4d3c1f1e":"code","5a18eb53":"code","80b33935":"code","78b25012":"code","5a0eba9e":"code","fa16ee28":"code","7d9b98ee":"code","8558ff57":"code","6305ac7f":"code","7837096e":"code","90bc98e2":"code","f30b1b3c":"code","93d3bb92":"code","5eb9a59a":"code","a99bca11":"code","10c69a7d":"code","b2fdeb45":"code","2c57727d":"code","5d2ffce7":"code","49ecbfba":"code","7afea4ea":"code","30b99e39":"code","73342b88":"code","c399e839":"markdown","cfea442a":"markdown","05d5d24e":"markdown","4b408e95":"markdown","36b122f9":"markdown","2fae88ad":"markdown","02ceced6":"markdown","fa6138f9":"markdown","824b6399":"markdown","3ef4cb00":"markdown","0641355f":"markdown","9629444c":"markdown","d084aa7f":"markdown","795f8df1":"markdown","ed4432c5":"markdown","d0273d31":"markdown","be46bef5":"markdown","04901ab9":"markdown","4ec31c1f":"markdown","06953566":"markdown","ac750317":"markdown","09021f2e":"markdown","205626b0":"markdown","c50d9609":"markdown","e938086a":"markdown","9e466659":"markdown","1e86bba1":"markdown","561de3cf":"markdown","00563603":"markdown","6308c561":"markdown","8dad9d77":"markdown","c66af177":"markdown","884e4181":"markdown","520111ba":"markdown","28399099":"markdown","4a58d546":"markdown","aef78d05":"markdown","3b72974d":"markdown","365a072c":"markdown","0ab597d1":"markdown","4488070d":"markdown","fc8c5716":"markdown","be44c920":"markdown","289e0444":"markdown","2bea19d4":"markdown","202aa8a0":"markdown","3a52edeb":"markdown","aa5d4ca0":"markdown","e342fea7":"markdown","74ef16b4":"markdown","d2ef718a":"markdown","ec93069e":"markdown","5e13d22e":"markdown","a3c5201c":"markdown","6d2ffb77":"markdown","7c32e29f":"markdown","05a377b1":"markdown","78141788":"markdown","33cede49":"markdown","0ef424ef":"markdown","e411f5f5":"markdown","e9637f52":"markdown","631f511c":"markdown","41ed346e":"markdown","e46d9424":"markdown"},"source":{"9b2528a1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale=1.5)\n\nimport missingno as msno\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","d0818489":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","c31a4cb4":"df_train.head()","d727806e":"df_train.describe()","381c65df":"df_test.describe()","efcafd78":"for col in df_train.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100* (df_train[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","7dfc3d3c":"for col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:2f}%'.format(col, 100*(df_train[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","2786aa6a":"msno.matrix(df=df_train.iloc[:, :], figsize=(8,8), color=(0.8, 0.5, 0.2))","47b4a8e1":"msno.matrix(df=df_test.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","b0791579":"msno.bar(df=df_test.iloc[:, :], figsize=(8, 8), color=(0.5, 0.8, 0.2))","6e95a67e":"f, ax = plt.subplots(1, 2, figsize=(10, 4))\n\ndf_train['Survived'].value_counts().plot.pie(explode=[0, 0.1], autopct='%.2f%%', ax=ax[0], shadow=True)\nax[0].set_title('Pie Plot - Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df_train, ax=ax[1])\nax[1].set_title('Count plot - Survived')\n\nplt.show()","26ca3132":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).count()","fffb7893":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).sum()","0afb3fdd":"pd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True).style.background_gradient(cmap='PuBu')","205ea7e4":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar()","9f391aaf":"y_position = 1.02\nf, ax = plt.subplots(1, 2, figsize=(10, 4))\ndf_train['Pclass'].value_counts().plot.bar(ax=ax[0])\nax[0].set_title('Number of Passengers By Pclass', y=y_position)\nax[0].set_ylabel('Count')\nsns.countplot('Pclass', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('Pclass: Survived vs Dead', y=y_position)\nplt.show()","311b8df5":"f, ax = plt.subplots(1, 2, figsize=(10, 4))\ndf_train[['Sex', 'Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()","0b9dc42e":"df_train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","1b52a793":"pd.crosstab(df_train['Sex'], df_train['Survived'], margins=True).style.background_gradient(cmap='PuBu')","0f432278":"sns.factorplot('Pclass', 'Survived', hue='Sex', data=df_train, size=6, aspect=1.5)","e676c375":"sns.factorplot(x='Sex', y='Survived', col='Pclass', data=df_train, saturation=1, size=6, aspect=0.5)","ee1ee25c":"print('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d : {:.1f} Years'.format(df_train['Age'].max()))\nprint('\uc81c\uc77c \uc5b4\ub9b0 \ud0d1\uc2b9\uac1d : {:.1f} Years'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774 : {:.1f} Years'.format(df_train['Age'].mean()))","678dea3e":"fig, ax = plt.subplots(1, 1, figsize=(6, 4))\nsns.kdeplot(df_train[df_train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Age'], ax=ax)\nplt.legend(['Survived', 'Dead'])\nplt.show()","8e5525b8":"# Age distribution withing classes\nplt.figure(figsize=(8, 6))\ndf_train['Age'][df_train['Pclass'] == 1].plot(kind='kde')\ndf_train['Age'][df_train['Pclass'] == 2].plot(kind='kde')\ndf_train['Age'][df_train['Pclass'] == 3].plot(kind='kde')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st', '2nd', '3rd'])","753bb92f":"cummulate_survival_ratio = []\nfor i in range(1, 80):\n    cummulate_survival_ratio.append(df_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived']))\n    \nplt.figure(figsize=(7, 7))\nplt.plot(cummulate_survival_ratio)\nplt.title('Survival rate change depending on range of Age', y=1.02)\nplt.ylabel('Survival rate')\nplt.xlabel('Range of Age(0~x)')\nplt.show()","956d4aee":"f, ax=plt.subplots(1, 2, figsize=(12,5))\nsns.violinplot(\"Pclass\", \"Age\", hue=\"Survived\", data=df_train, scale='count', split=True, ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0, 110, 20))\nsns.violinplot(\"Sex\", \"Age\", hue=\"Survived\", data=df_train, scale='count', split=True, ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0, 110, 20))\nplt.show()","1dc1a1e1":"f, ax = plt.subplots(1, 1, figsize=(7, 7))\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax)","3cfc415c":"f, ax=plt.subplots(2, 2, figsize=(15,12))\nsns.countplot('Embarked', data=df_train, ax=ax[0, 0])\nax[0,0].set_title('(1) No. Of Passengers Boarded')\nsns.countplot('Embarked', hue='Sex', data=df_train, ax=ax[0, 1])\nax[0,1].set_title('(2) Male-Female Split for Embarked')\nsns.countplot('Embarked', hue='Survived', data=df_train, ax=ax[1, 0])\nax[1,0].set_title('(3) Embarked vs Survived')\nsns.countplot('Embarked', hue='Pclass', data=df_train, ax=ax[1, 1])\nax[1,1].set_title('(4) Embarked vs Pclass')\nplt.subplots_adjust(wspace=0.4, hspace=0.5)\nplt.show()","fdd75065":"df_train['FamilySize'] = df_train['SibSp'] + df_train['Parch'] + 1\ndf_test['FamilySize'] = df_test['SibSp'] + df_test['Parch'] + 1","f7ccad66":"print(\"Maximum size of Family: \", df_train['FamilySize'].max())\nprint(\"Minimum size of Family: \", df_train['FamilySize'].min())","589ccffe":"f, ax = plt.subplots(1, 3, figsize=(20, 10))\nsns.countplot('FamilySize', data=df_train, ax=ax[0])\nax[0].set_title('(1) No. Of Passengers Boarded', y=1.02)\n\nsns.countplot('FamilySize', hue='Survived', data=df_train, ax=ax[1])\nax[0].set_title('(2) Survived countplot depending on FamilySize', y=1.02)\n\ndf_train[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=True).mean().plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived rate depending on FamilySize', y=1.02)\n\nplt.subplots_adjust(wspace=0.4, hspace=0.5)\nplt.show()","611a91b9":"fig, ax = plt.subplots(1, 1, figsize=(7, 7))\ng = sns.distplot(df_train['Fare'], label='Skewness : {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng= g.legend(loc='best')","d42c46ef":"df_test.loc[df_test.Fare.isnull(), 'Fare'] = df_train['Fare'].mean()","098548da":"df_train['Fare'] = df_train['Fare'].map(lambda i : np.log(i) if i > 0 else 0)\ndf_test['Fare'] = df_test['Fare'].map(lambda i : np.log(i) if i > 0 else 0)","39427017":"fig, ax = plt.subplots(1, 1, figsize=(7, 7))\ng = sns.distplot(df_train['Fare'], label='Skewness : {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","4412a3f6":"df_train.head()","ca6d90f0":"df_train['Ticket'].value_counts()","8d384354":"import numpy as np\nimport pandas as pd \nfrom pandas import Series\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale=1.5)\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline\n","fb48d88a":"df_train['Initial'] = df_train.Name.str.extract('([A-Za-z]+)\\.')\ndf_test['Initial'] = df_test.Name.str.extract('([A-Za-z]+)\\.')","056b9725":"pd.crosstab(df_train['Initial'], df_train['Sex']).T.style.background_gradient(cmap='PuBu')","66213ac5":"df_train['Initial'].replace(['Capt', 'Col', 'Countess', 'Don', 'Dr', 'Jonkheer', 'Lady', 'Major', 'Mlle', 'Mme', 'Ms', 'Rev', 'Sir'],\n                           ['Mr', 'Other', 'Other', 'Mr', 'Mr', 'Other', 'Mrs', 'Mr', 'Miss', 'Miss', 'Miss', 'Other', 'Mr'], inplace=True)\n\ndf_test['Initial'].replace(['Capt', 'Col', 'Countess', 'Don', 'Dr', 'Jonkheer', 'Lady', 'Major', 'Mlle', 'Mme', 'Ms', 'Rev', 'Sir'],\n                           ['Mr', 'Other', 'Other', 'Mr', 'Mr', 'Other', 'Mrs', 'Mr', 'Miss', 'Miss', 'Miss', 'Other', 'Mr'], inplace=True)","1546f255":"df_train.groupby('Initial').mean()","9cf4b20e":"df_train.groupby('Initial')['Survived'].mean().plot.bar()","7d6d2b13":"df_train.groupby('Initial').mean()","3841ff09":"df_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mr'),'Age'] = 33\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mrs'),'Age'] = 36\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Master'),'Age'] = 5\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Miss'),'Age'] = 22\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Other'),'Age'] = 45\n\ndf_test.loc[(df_train.Age.isnull())&(df_test.Initial=='Mr'),'Age'] = 33\ndf_test.loc[(df_train.Age.isnull())&(df_test.Initial=='Mrs'),'Age'] = 36\ndf_test.loc[(df_train.Age.isnull())&(df_test.Initial=='Master'),'Age'] = 5\ndf_test.loc[(df_train.Age.isnull())&(df_test.Initial=='Miss'),'Age'] = 22\ndf_test.loc[(df_train.Age.isnull())&(df_test.Initial=='Other'),'Age'] = 45","499245c1":"print('Embarked has', sum(df_train['Embarked'].isnull()),'Null values')","d8f4c441":"df_train['Embarked'].fillna('S', inplace=True)\ndf_test['Embarked'].fillna('S', inplace=True)","992eacca":"df_train['Age_cat'] = 0\ndf_train.loc[df_train['Age'] < 10, 'Age_cat'] = 0\ndf_train.loc[(10 <= df_train['Age']) & (df_train['Age'] < 20), 'Age_cat'] = 1\ndf_train.loc[(20 <= df_train['Age']) & (df_train['Age'] < 30), 'Age_cat'] = 2\ndf_train.loc[(30 <= df_train['Age']) & (df_train['Age'] < 40), 'Age_cat'] = 3\ndf_train.loc[(40 <= df_train['Age']) & (df_train['Age'] < 50), 'Age_cat'] = 4\ndf_train.loc[(50 <= df_train['Age']) & (df_train['Age'] < 60), 'Age_cat'] = 5\ndf_train.loc[(60 <= df_train['Age']) & (df_train['Age'] < 70), 'Age_cat'] = 6\ndf_train.loc[70 <= df_train['Age'], 'Age_cat'] = 7\n\ndf_test['Age_cat'] = 0\ndf_test.loc[df_test['Age'] < 10, 'Age_cat'] = 0\ndf_test.loc[(10 <= df_test['Age']) & (df_test['Age'] < 20), 'Age_cat'] = 1\ndf_test.loc[(20 <= df_test['Age']) & (df_test['Age'] < 30), 'Age_cat'] = 2\ndf_test.loc[(30 <= df_test['Age']) & (df_test['Age'] < 40), 'Age_cat'] = 3\ndf_test.loc[(40 <= df_test['Age']) & (df_test['Age'] < 50), 'Age_cat'] = 4\ndf_test.loc[(50 <= df_test['Age']) & (df_test['Age'] < 60), 'Age_cat'] = 5\ndf_test.loc[(60 <= df_test['Age']) & (df_test['Age'] < 70), 'Age_cat'] = 6\ndf_test.loc[70 <= df_test['Age'], 'Age_cat'] = 7","e0895e39":"# df_test['Age_cat'] = 0\n# df_test.loc[df_train['Age'] < 10, 'Age_cat'] = 0\n# df_test.loc[(10 <= df_test['Age']) & (df_test['Age'] < 20), 'Age_cat'] = 1\n# df_test.loc[(20 <= df_test['Age']) & (df_test['Age'] < 30), 'Age_cat'] = 2\n# df_test.loc[(30 <= df_test['Age']) & (df_test['Age'] < 40), 'Age_cat'] = 3\n# df_test.loc[(40 <= df_test['Age']) & (df_test['Age'] < 50), 'Age_cat'] = 4\n# df_test.loc[(50 <= df_test['Age']) & (df_test['Age'] < 60), 'Age_cat'] = 5\n# df_test.loc[(60 <= df_test['Age']) & (df_test['Age'] < 70), 'Age_cat'] = 6\n# df_test.loc[70 <= df_test['Age'], 'Age_cat'] = 7","4d3c1f1e":"def category_age(x):\n    if x < 10:\n        return 0\n    elif x < 20:\n        return 1\n    elif x < 30:\n        return 2\n    elif x < 40:\n        return 3\n    elif x < 50:\n        return 4\n    elif x < 60:\n        return 5\n    elif x < 70:\n        return 6\n    else:\n        return 7    \n    \ndf_train['Age_cat_2'] = df_train['Age'].apply(category_age)","5a18eb53":"print('1\ubc88 \ubc29\ubc95, 2\ubc88 \ubc29\ubc95 \ub458\ub2e4 \uac19\uc740 \uacb0\uacfc\ub97c \ub0b4\uba74 True \uc918\uc57c\ud568 -> ', (df_train['Age_cat'] == df_train['Age_cat_2']).all())\n","80b33935":"df_train.drop(['Age', 'Age_cat_2'], axis=1, inplace=True)\ndf_test.drop(['Age'], axis=1, inplace=True)","78b25012":"df_train['Initial'] = df_train['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})\ndf_test['Initial'] = df_test['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})","5a0eba9e":"df_train['Embarked'].unique()","fa16ee28":"df_train['Embarked'].value_counts()","7d9b98ee":"df_train['Embarked'] = df_train['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","8558ff57":"df_test['Embarked'].isnull().any()","6305ac7f":"df_train['Sex'] = df_train['Sex'].map({'female': 0, 'male': 1})\ndf_test['Sex'] = df_test['Sex'].map({'female': 0, 'male': 1})","7837096e":"heatmap_data = df_train[['Survived', 'Pclass', 'Sex', 'Fare', 'Embarked', 'FamilySize', 'Initial', 'Age_cat']]\n\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(14, 12))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0, square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={\"size\": 16})\n\ndel heatmap_data","90bc98e2":"df_train = pd.get_dummies(df_train, columns=['Initial'], prefix='Initial')\ndf_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Initial'], prefix='Initial')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')","f30b1b3c":"df_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\ndf_test.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)","93d3bb92":"df_train.head()\ndf_test.head()","5eb9a59a":"#importing all the required ML packages\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split","a99bca11":"X_train = df_train.drop('Survived', axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","10c69a7d":"X_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size = 0.3, random_state=2018)","b2fdeb45":"model = RandomForestClassifier()\nmodel.fit(X_tr, y_tr)\nprediction = model.predict(X_vld)","2c57727d":"print('\ucd1d {}\uba85 \uc911 {:.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874\uc744 \ub9de\ucda4'.format(y_vld.shape[0], 100 * metrics.accuracy_score(prediction, y_vld)))","5d2ffce7":"from pandas import Series\n\nfeature_importance = model.feature_importances_\nSeries_feat_imp = Series(feature_importance, index=df_test.columns)","49ecbfba":"plt.figure(figsize=(7, 7))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","7afea4ea":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission.head()","30b99e39":"prediction = model.predict(X_test)\nsubmission['Survived'] = prediction","73342b88":"submission.to_csv('.\/my_titanic_tutorial.csv', index=False)","c399e839":"* Age\uc758 \ud3c9\uade0\uc744 \uc774\uc6a9\ud574 Null vlaue\ub97c \ucc44\uc6b0\ub3c4\ub85d\ud558\uaca0\uc2b5\ub2c8\ub2e4. \n* pandas dataframe\uc744 \ub2e4\ub8f0 \ub54c\uc5d0\ub294 boolean array\ub97c \uc774\uc6a9\ud574 indextinf \ud558\ub294 \ubc29\ubc95\uc774 \ucc38\uc73c\ub85c \ud3b8\ud569\ub2c8\ub2e4.\n* \uc544\ub798 \ucf54\ub4dc \uccab \uc904\uc744 \ud574\uc11d\ud558\uc790\uba74, isnull()\uc774\uba74\uc11c initial\uc774 Mr\uc778 \uc870\uac74\uc744 \ub9cc\uc871\ud558\ub294 row(\ud0d1\uc2b9\uac1d)\uc758 'Age'\uc758 \uac12\uc744 33\uc73c\ub85c \uce58\ud658\ud55c\ub2e4 \uc785\ub2c8\ub2e4.\n* loc + boolean + column\uc744 \uc0ac\uc6a9\ud574 \uac12\uc744 \uce58\ud658\ud558\ub294 \ubc29\ubc95\uc740 \uc790\uc8fc \uc4f0\uc774\ubbc0\ub85c \uaf2d \uc775\uc219\ud574\uc9d1\uc2dc\ub2e4.","cfea442a":"* \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, distribution\uc774 \ub9e4\uc6b0 \ube44\ub300\uce6d\uc778 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4(high skewness). \ub9cc\uc77c \uc774\ub300\ub85c \ubaa8\ub378\uc5d0 \ub123\uc5b4\uc900\ub2e4\uba74 \uc790\uce6b \ubaa8\ub378\uc774 \uc798\ubabb \ud559\uc2b5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uba87 \uac1c \uc5c6\ub294 outlier\uc5d0 \ub300\ud574\uc11c \ub108\ubb34 \ubbfc\uac04\ud558\uac8c \ubc18\uc751\ud55c\ub2e4\uba74, \uc2e4\uc81c \uc608\uce21 \uc2dc\uc5d0 \uc88b\uc9c0 \ubabb\ud55c \uacb0\uacfc\ub97c \ubd80\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* outlier\uc758 \uc601\ud5a5\uc744 \uc904\uc774\uae30 \uc704\ud574 Fare\uc5d0 log\ub97c \ucde8\ud558\uaca0\uc2b5\ub2c8\ub2e4. \n* \uc5ec\uae30\uc11c \uc6b0\ub9ac\ub294 pandas\uc758 \uc720\uc6a9\ud55c \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. dataFrame\uc758 \ud2b9\uc815 columns\uc5d0 \uacf5\ud1b5\ub41c \uc791\uc5c5(\ud568\uc218)\ub97c \uc801\uc6a9\ud558\uace0 \uc2f6\uc73c\uba74 \uc544\ub798\uc758 map, \ub610\ub294 apply\ub97c \uc0ac\uc6a9\ud558\uba74 \ub9e4\uc6b0 \uc190\uc27d\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc6b0\ub9ac\uac00 \uc9c0\uae08 \uc6d0\ud558\ub294 \uac83\uc740 Fare columns\uc758 \ubaa8\ub4e0 \ub370\uc774\ud130\uc5d0 log\uac12\uc744 \ucde8\ud558\ub294 \uac83\uc778\ub370, \ud30c\uc774\uc36c\uc758 \uac04\ub2e8\ud55c lambda \ud56d\uc218\ub97c \uc774\uc6a9\ud574 \uac04\ub2e8\ud55c \ub85c\uadf8\ub97c \uc801\uc6a9\ud558\ub294 \ud568\uc218\ub97c map\uc5d0 \uc778\uc218\ub85c \ub123\uc5b4\uc8fc\uba74, Fare columns \ub370\uc774\ud130\uc5d0 \uadf8\ub300\ub85c \uc801\uc6a9\ub429\ub2c8\ub2e4. \ub9e4\uc6b0 \uc720\uc6a9\ud55c \uae30\ub2a5\uc774\ub2c8 \uaf2d \uc219\uc9c0\ud558\uc138\uc694!","05d5d24e":"## 2.4 Age","4b408e95":"## 1.2 Target label \ud655\uc778","36b122f9":"## 4.3 Feature importance ","2fae88ad":"* \uc774\ubc88\uc5d0\ub294 Age feature\ub97c \uc0b4\ud3b4\ubd05\uc2dc\ub2e4.","02ceced6":"* FamilySize\uc640 \uc0dd\uc874\uc758 \uad00\uacc4\ub97c \ud55c\ubc88 \uc0b4\ud3b4\ubd05\uc2dc\ub2e4.","fa6138f9":"* \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, \uc870\uae08\uc758 \ucc28\uc774\ub294 \uc788\uc9c0\ub9cc \uc0dd\uc874\ub960\uc740 \uc880 \ube44\uc2b7\ud55c \uac70 \uac19\uc2b5\ub2c8\ub2e4. \uadf8\ub798\ub3c4 C\uac00 \uac00\uc7a5 \ub192\uad70\uc694.\n* \ubaa8\ub378\uc5d0 \uc5bc\ub9c8\ub098 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc9c0\ub294 \ubaa8\ub974\uaca0\uc9c0\ub9cc, \uadf8\ub798\ub3c4 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n* \uc0ac\uc2e4, \ubaa8\ub378\uc744 \ub9cc\ub4e4\uace0 \ub098\uba74 \uc6b0\ub9ac\uac00 \uc0ac\uc6a9\ud55c feature\ub4e4\uc774 \uc5bc\ub9c8\ub098 \uc911\uc694\ud55c \uc5ed\ud560\uc744 \ud588\ub294 \uc9c0 \ud655\uc778\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ucd94\ud6c4\uc5d0 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uace0 \ub09c \ub2e4\uc74c\uc5d0 \uc0b4\ud3b4 \ubcfc \uac83\uc785\ub2c8\ub2e4.","824b6399":"* \ubcf4\ub2e4\uc2dc\ud53c, Pclass\uac00 \uc88b\uc744\uc218\ub85d(1st) \uc0dd\uc874\ub960\uc774 \ub192\uc740 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc880 \ub354 \ubcf4\uae30 \uc27d\uac8c \uadf8\ub798\ud504\ub97c \uadf8\ub824\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. seaborn\uc758 countplot\uc744 \uc774\uc6a9\ud558\uba74, \ud2b9\uc815 label\uc5d0 \ub530\ub978 \uac1c\uc218\ub97c \ud655\uc778\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","3ef4cb00":"## 4.4 Prediction on Test Set","0641355f":"* pandas\uc758 crosstab\uc744 \uc0ac\uc6a9\ud558\uba74 \uc704 \uacfc\uc815\uc744 \uc880 \ub354 \uc218\uc6d4\ud558\uac8c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","9629444c":"* \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c female\uc774 \uc0b4 \ud655\ub960\uc774 male\ubcf4\ub2e4 \ub192\uc740 \uac78 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \n* \ub610\ud55c \ub0a8\uc790, \uc5ec\uc790 \uc0c1\uad00\uc5c6\uc774 \ud074\ub798\uc2a4\uac00 \ub192\uc744\uc218\ub85d \uc0b4 \ud655\ub960\uc774 \ub192\uc2b5\ub2c8\ub2e4.\n* \uc704 \uadf8\ub798\ud504\ub97c hue\ub300\uc2e0 column\uc73c\ub85c \ud558\uba74 \uc544\ub798\uc640 \uac19\uc544\uc9d1\ub2c8\ub2e4.","d084aa7f":"\uc55e\uc73c\ub85c \uc6b0\ub9ac\uac00 \ud574\uc57c\ud560 \ud504\ub85c\uc138\uc2a4\ub294 \ub300\ub7b5 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4.\n1. \ub370\uc774\ud130\uc14b \ud655\uc778 - \ub300\ubd80\ubd84 \uce90\uae00 \ub370\uc774\ud130\ub4e4\uc740 \uc798 \uc815\uc81c\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \uac00\ub054 null data\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774\ub97c \ud655\uc778\ud558\uace0, \ud5a5\ud6c4 \uc218\uc815\ud569\ub2c8\ub2e4.\n2. \ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d(Exploratory data analysis) - \uc5ec\ub7ec feature\ub4e4\uc744 \uac1c\ubcc4\uc801\uc73c\ub85c \ubd84\uc11d\ud558\uace0,\nfeature\ub4e4 \uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.\n\uc5ec\ub7ec \uc2dc\uac01\ud654 \ud234\uc744 \uc0ac\uc6a9\ud558\uc5ec insight\ub97c \uc5bb\uc2b5\ub2c8\ub2e4.\n3. feature engineering - \ubaa8\ub378\uc744 \uc138\uc6b0\uae30\uc5d0 \uc55e\uc11c, \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc77c \uc218 \uc788\ub3c4\ub85d feature\ub4e4\uc744 engineering\ud569\ub2c8\ub2e4. one-hot encoding, class\ub85c \ub098\ub204\uae30, \uad6c\uac04\uc73c\ub85c \ub098\ub204\uae30, \ud14d\uc2a4\ud2b8 \ub370\uc774\ud130 \ucc98\ub9ac \ub4f1\uc744 \ud569\ub2c8\ub2e4.\n4. model \ub9cc\ub4e4\uae30 - sklearn\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub378\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \ud30c\uc774\uc36c\uc5d0\uc11c \uba38\uc2e0\ub7ec\ub2d8\uc744 \ud560 \ub54c\ub294 sklearn\uc744 \uc0ac\uc6a9\ud558\uba74 \uc218\ub9ce\uc740 \uc54c\uace0\ub9ac\uc998\uc744 \uc77c\uad00\ub41c \ubb38\ubc95\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb3c\ub860 \ub525\ub7ec\ub2dd\uc744 \uc704\ud574 tensorflow, pytorch \ub4f1\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n5. \ubaa8\ub378 \ud559\uc2b5 \ubc0f \uc608\uce21 - trainset\uc744 \uac00\uc9c0\uace0 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a8 \ud6c4 testset\uc744 \uac00\uc9c0\uace0 prediction \ud569\ub2c8\ub2e4.\n6. \ubaa8\ub378 \ud3c9\uac00 - \uc608\uce21 \uc131\ub2a5\uc774 \uc6d0\ud558\ub294 \uc218\uc900\uc778\uc9c0 \ud310\ub2e8\ud569\ub2c8\ub2e4. \ud480\ub824\ub294 \ubb38\uc81c\uc5d0 \ub530\ub77c \ubaa8\ub378\uc744 \ud3c9\uac00\ud558\ub294 \ubc29\uc2dd\ub3c4 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \ud559\uc2b5\ub41c \ubaa8\ub378\uc774 \uc5b4\ub5a4 \uac83\uc744 \ud559\uc2b5\ud558\uc600\ub294\uc9c0 \ud655\uc778\ud574\ubd05\ub2c8\ub2e4.","795f8df1":"## 2.8 Fare\n* Fare\ub294 \ud0d1\uc2b9\uc694\uae08\uc774\uba70, continuous feature\uc785\ub2c8\ub2e4. \ud55c\ubc88 histogram\uc744 \uadf8\ub824\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","ed4432c5":"## 3.5 Drop columns","d0273d31":"* \uc218\uce58\ud654\uc2dc\ud0a8 \uce74\ud14c\uace0\ub9ac \ub370\uc774\ud130\ub97c \uadf8\ub300\ub85c \ub123\uc5b4\ub3c4 \ub418\uc9c0\ub9cc, \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc774\uae30 \uc704\ud574 one-hot encoding\uc744 \ud574\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc218\uce58\ud654\ub294 \uac04\ub2e8\ud788 \ub9e4\ud551\ud558\ub294 \uac83 one-hot encoding\uc740 (0, 1)\ub85c \uc774\ub8e8\uc5b4\uc9c4 \ubca1\ud130\ub85c \ud45c\uc2dc","be46bef5":"## 2.9 Cabin\n* \uc774 feature\ub294 NaN\uc774 \ub300\ub7b5 80% \uc774\ubbc0\ub85c, \uc0dd\uc874\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc911\uc694\ud55c \uc815\ubcf4\ub97c \uc5bb\uc5b4 \ub0b4\uae30\uac00 \uc27d\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.\n* \uadf8\ub7ec\ubbc0\ub85c \uc6b0\ub9ac\uac00 \uc138\uc6b0\ub824\ub294 \ubaa8\ub378\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\uc9c0 \uc54a\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","04901ab9":"* \uc774\ubc88\uc5d0\ub294 Sex, Pclass \ub450 \uac00\uc9c0\uc5d0 \uad00\ud558\uc5ec \uc0dd\uc874\uc774 \uc5b4\ub5bb\uac8c \ub2ec\ub77c\uc9c0\ub294 \uc9c0 \ud655\uc778\ud574 \ubd05\uc2dc\ub2e4.\n* seaborn\uc758 factorplot\uc744 \uc774\uc694\ud558\uba74, \uc190 \uc27d\uac8c 3\uac1c\uc758 \ucc28\uc6d0\uc73c\ub85c \uc774\ub8e8\uc5b4\uc9c4 \uadf8\ub798\ud504\ub97c \uadf8\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","4ec31c1f":"## 2.1 Pclass","06953566":"* Class\uac00 \ub192\uc744\uc218\ub85d \ub098\uc774 \ub9ce\uc740 \uc0ac\ub78c\uc758 \ube44\uc911\uc774 \ucee4\uc9d0\n* \ub098\uc774\ub300\uac00 \ubcc0\ud558\uba74\uc11c \uc0dd\uc874\ub960\uc774 \uc5b4\ub5bb\uac8c \ub418\ub294 \uc9c0 \ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4.\n* \ub098\uc774 \ubc94\uc704\ub97c \uc810\uc810 \ub113\ud600\uac00\uba70, \uc0dd\uc874\ub960\uc774 \uc5b4\ub5bb\uac8c \ub418\ub294 \uc9c0 \ud55c\ubc88 \ubd05\uc2dc\ub2e4.","ac750317":"## 2.2 Sex","09021f2e":"* \ud074\ub798\uc2a4\uac00 \ub192\uc744\uc218\ub85d, \uc0dd\uc874 \ud655\ub960\uc774 \ub192\uc740 \uac78 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pclass 1,2,3 \uc21c\uc11c\ub300\ub85c 63%, 48%, 25% \uc785\ub2c8\ub2e4.\n* \uc6b0\ub9ac\ub294 \uc0dd\uc874\uc5d0 Pclass\uac00 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\uace0 \uc0dd\uac01\ud574 \ubcfc \uc218 \uc788\uc73c\uba70, \ub098\uc911\uc5d0 \ubaa8\ub378\uc744 \uc138\uc6b8 \ub54c \uc774 feature\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc744 \uac83\uc774\ub77c \ud310\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","205626b0":"* \uc774\uc81c \ubcf8\uaca9\uc801\uc73c\ub85c Null\uc744 \ucc44\uc6b8 \uac83\uc785\ub2c8\ub2e4. null data\ub97c \ucc44\uc6b0\ub294 \ubc29\ubc95\uc740 \uc815\ub9d0 \ub9ce\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. statistics\ub97c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95\ub3c4 \uc788\uace0, null data\uac00 \uc5c6\ub294 \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uc0c8\ub85c\uc6b4 \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc744 \ub9cc\ub4e4\uc5b4 \uc608\uce21\ud574\uc11c \ucc44\uc6cc \ub123\ub294 \ubc29\uc2dc\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc11c\ub294 statistics\ub97c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.\n* \uc5ec\uae30\uc11c statistics\ub294 train data\uc758 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc5b8\uc81c\ub098 test\ub97c unseen\uc73c\ub85c \ub454 \uc0c1\ud0dc\ub85c \ub194\ub46c\uc57c \ud558\uba70, train\uc5d0\uc11c \uc5bb\uc740 statistics\ub97c \uae30\ubc18\uc73c\ub85c test\uc758 null data\ub97c \ucc44\uc6cc\uc918\uc57c\ud569\ub2c8\ub2e4.","c50d9609":"* \uc774\ubc88\uc5d0\ub294 \uc131\ubcc4\ub85c \uc0dd\uc874\ub960\uc774 \uc5b4\ub5bb\uac8c \ub2ec\ub77c\uc9c0\ub294\uc9c0 \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n* \ub9c8\ucc2c\uac00\uc9c0\ub85c pandas groupby\uc640 seaborn countplot\uc744 \uc0ac\uc6a9\ud574\uc11c \uc2dc\uac01\ud654\ud574\ubd05\uc2dc\ub2e4.","e938086a":"* log\ub97c \ucde8\ud558\ub2c8, \uc774\uc81c \ube44\ub300\uce6d\uc131\uc774 \ub9ce\uc774 \uc0ac\ub77c\uc9c4 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc6b0\ub9ac\ub294 \uc774\ub7f0 \uc791\uc5c5\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub378\uc774 \uc880 \ub354 \uc88b\uc740 \uc131\ub2a5\uc744 \ub0b4\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc0ac\uc2e4 \ubc29\uae08\ud55c \uac83\uc740 feature engineering\uc5d0 \ub4e4\uc5b4\uac00\ub294 \ubd80\ubd84\uc778\ub370, \uc5ec\uae30\uc11c \uc791\uc5c5\ud588\uc2b5\ub2c8\ub2e4. \n* \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uae30\uc704\ud574, \uadf8\ub9ac\uace0 \uadf8 \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc774\uae30 \uc704\ud574 feature \ub4e4\uc5d0 \uc5ec\ub7ec \uc870\uc791\uc744 \uac00\ud558\uac70\ub098, \uc0c8\ub85c\uc6b4 feature\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc744 feature engineering\uc774\ub77c\uace0 \ud558\ub294\ub370, \uc6b0\ub9ac\ub294 \uc774\uc81c \uadf8\uac83\uc744 \uc0b4\ud3b4\ubcfc \uac83\uc785\ub2c8\ub2e4.","9e466659":"* Figure(1) - \uc804\uccb4\uc801\uc73c\ub85c \ubd24\uc744 \ub54c, S\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc0ac\ub78c\uc774 \ud0d1\uc2b9\ud588\uc2b5\ub2c8\ub2e4.\n* Figure(2) - C\uc640 Q\ub294 \ub0a8\ub140\uc758 \ube44\uc728\uc774 \ube44\uc2b7\ud558\uace0, S\ub294 \ub0a8\uc790\uac00 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.\n* Figure(3) - \uc0dd\uc874\ud655\ub960\uc774 S\uac00 \uac00\uc7a5 \ub0ae\ub2e4\ub294 \uac78 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* Figure(4) - Class\ub85c Split \ud574\uc11c \ubcf4\ub2c8, C\uac00 \uc0dd\uc874\ud655\ub960\uc774 \ub192\uc740 \uac74 \ud074\ub798\uc2a4\uac00 \ub192\uc740 \uc0ac\ub78c\uc774 \ub9ce\uc774 \ud0c0\uc11c \uadf8\ub807\uc2b5\ub2c8\ub2e4. S\ub294 3rd Class\uac00 \ub9ce\uc544\uc11c \uc0dd\uc874 \ud655\ub960\uc774 \ub0ae\uac8c \ub098\uc654\uc2b5\ub2c8\ub2e4.","1e86bba1":"## 3.2 Change Age(continuous to categorical)\n* Age\ub294 \ud604\uc7ac continuous feature\uc785\ub2c8\ub2e4. \uc774\ub300\ub85c \uc368\ub3c4 \ubaa8\ub378\uc744 \uc138\uc6b8 \uc218 \uc788\uc9c0\ub9cc, Age\ub97c \uba87\uac8c\uc758 group\uc73c\ub85c \ub098\ub204\uc5b4 category\ud654 \uc2dc\ucf1c\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4. continuous\ub97c categorical\ub85c \ubc14\uafb8\uba74 \uc790\uce6b information loss\uac00 \uc0dd\uae38 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4\ub9cc, \ubcf8 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc18c\uac1c\ud558\ub294 \uac83\uc774 \ubaa9\uc801\uc774\ubbc0\ub85c \uc9c4\ud589\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.\n* \ubc29\ubc95\uc740 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. dataframe\uc758 indexing \ubc29\ubc95\uc778 loc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c1\uc811\ud574 \uc904 \uc218\ub3c4 \uc788\uace0, \uc544\ub2c8\uba74 apply\ub97c \uc0ac\uc6a9\ud574 \ud568\uc218\ub97c \ub123\uc5b4\uc904 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n* \uccab\ubc88\uc9f8\ub85c loc\ub97c \uc0ac\uc6a9\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4. loc\ub294 \uc790\uc8fc \uc4f0\uac8c \ub418\ubbc0\ub85c \uadf8 \uc0ac\uc6a9\ubc95\uc744 \uc219\uc9c0\ud558\uba74 \uc88b\uc2b5\ub2c8\ub2e4.\n* \ub098\uc774\ub294 10\uc0b4 \uac04\uaca9\uc73c\ub85c \ub098\ub204\uaca0\uc2b5\ub2c8\ub2e4.","561de3cf":"## 4.2 Model generation and prediction","00563603":"* Train, Test set\uc5d0\uc11c Age(\ub458\ub2e4 \uc57d 20%), Cabin(\ub458\ub2e4 \uc57d 77%), Embarked(Train\ub9cc 0.22%) null data\uac00 \uc874\uc7ac\ud558\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* MANO\ub77c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uba74 null data\uc758 \uc874\uc7ac\ub97c \ub354 \uc27d\uac8c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","6308c561":"## 1.1 Null data check","8dad9d77":"## 2.10 Ticket\n* \uc774 feature\ub294 NaN\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8 string data\uc774\ubbc0\ub85c \uc6b0\ub9ac\uac00 \uc5b4\ub5a4 \uc791\uc5c5\ub4e4\uc744 \ud574\uc8fc\uc5b4\uc57c \uc2e4\uc81c \ubaa8\ub378\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294\ub370, \uc774\ub97c \uc704\ud574\uc120 \uc544\uc774\ub514\uc5b4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.","c66af177":"* Pclass\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, Sex\ub3c4 \uc608\uce21 \ubaa8\ub378\uc5d0 \uc4f0\uc77c \uc911\uc694\ud55c feature\uc784\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","884e4181":"* pandas\uc758 crosstab\uc744 \uc774\uc6a9\ud558\uc5ec \uc6b0\ub9ac\uac00 \ucd94\ucd9c\ud55c Initial\uacfc Sex\uac04\uc758 count\ub97c \uc0b4\ud3b4\ubd05\uc2dc\ub2e4.","520111ba":"* \uc67c\ucabd \uadf8\ub9bc\uc740 Pclass \ubcc4\ub85c Age\uc758 distribution\uc774 \uc5b4\ub5bb\uac8c \ub2e4\ub978\uc9c0, \uac70\uae30\uc5d0 \uc0dd\uc874\uc5ec\ubd80\uc5d0 \ub530\ub77c \uad6c\ubd84\ud78c \uadf8\ub798\ud504\uc785\ub2c8\ub2e4.\n* \uc624\ub978\ucabd \uadf8\ub9bc\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\ub85c Sex \ubcc4\ub85c Age\uc758 distribution\uc774 \uc5b4\ub5bb\uac8c \ub2e4\ub978\uc9c0 \ubcf4\uc5ec\uc8fc\ub294 \uadf8\ub798\ud504\uc785\ub2c8\ub2e4.\n* \uc0dd\uc874\ub9cc \ubd24\uc744 \ub54c, \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \ub098\uc774\uac00 \uc5b4\ub9b4 \uc218\ub85d \uc0dd\uc874\uc744 \ub9ce\uc774 \ud55c \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc624\ub978\ucabd \uadf8\ub9bc\uc5d0\uc11c \ubcf4\uba74, \uba85\ud655\ud788 \uc5ec\uc790\uac00 \uc0dd\uc874\uc744 \ub9ce\uc774 \ud55c \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \n* \uc5ec\uc131\uacfc \uc544\uc774\ub97c \uba3c\uc800 \ucc59\uae34 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","28399099":"## 3.1.2 Fill Null in Embarked","4a58d546":"## 2.3 Both Sex and Pclass","aef78d05":"* \ud14c\uc774\ube14\uc5d0\uc11c \ubcf4\ub2e4\uc2dc\ud53c, PassengerID \uc22b\uc790\uc640 \ub2e4\ub978, \uadf8\ub7ec\ub2c8\uae4c null data\uac00 \uc874\uc7ac\ud558\ub294 \uc5f4(feature)\uc774 \uc788\ub294 \uac70 \uac19\uc2b5\ub2c8\ub2e4.\n* \uc774\ub97c \uc880 \ub354 \ubcf4\uae30 \ud3b8\ud558\ub3c4\ub85d \uadf8\ub798\ud504\ub85c \uc2dc\uac01\ud654\ud574\uc11c \uc0b4\ud3b4\ubd05\uc2dc\ub2e4.","3b72974d":"* figure(1) - \uac00\uc871\uc758 \ud06c\uae30\uac00 1~11\uae4c\uc9c0 \uc788\uace0, \ub300\ubd80\ubd84\uc740 1\uba85\uc774\uace0 2,3,4 \uba85 \uc21c\uc785\ub2c8\ub2e4.\n* figure(2), (3) - \uac00\uc871 \ud06c\uae30\uc5d0 \ub530\ub978 \uc0dd\uc874 \ube44\uad50\uc785\ub2c8\ub2e4. \uac00\uc871\uc774 4\uba85\uc778 \uacbd\uc6b0\uac00 \uac00\uc7a5 \uc0dd\uc874 \ud655\ub960\uc774 \ub192\uc2b5\ub2c8\ub2e4. \uac00\uc871 \uc218\uac00 \ub108\ubb34 \uc791\uc544\ub3c4(1), \ub108\ubb34 \ucee4\ub3c4(5,6,7,8,11) \uc0dd\uc874 \ud655\ub960\uc774 \uc791\uc2b5\ub2c8\ub2e4. 3~4\uba85 \uc815\ub3c4\uac00 \uc0dd\uc874 \ud655\ub960\uc774 \ub192\uc740 \uac78 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","365a072c":"## 2.6 Embarked\n* Embarked\ub294 \ud0d1\uc2b9\ud55c \ud56d\uad6c\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4\n* \uc704\uc5d0\uc11c \ud574\uc654\ub358 \uac83\uacfc \ube44\uc2b7\ud558\uac8c \ud0d1\uc2b9\ud55c \uacf3\uc5d0 \ub530\ub978 \uc0dd\uc874\ub960\uc744 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","0ab597d1":"* \uba3c\uc800 Pclass\uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Pclass\ub294 ordinal, \uc11c\uc218\ud615 \ub370\uc774\ud130\uc785\ub2c8\ub2e4. \uce74\ud14c\uace0\ub9ac\uc774\uba74\uc11c, \uc21c\uc11c\uac00 \uc788\ub294 \ub370\uc774\ud130 \ud0c0\uc785\uc785\ub2c8\ub2e4.\n* \uba3c\uc800 Pclass\uc5d0 \ub530\ub978 \uc0dd\uc874\ub960\uc758 \ucc28\uc774\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc5d1\uc140\uc758 \ud53c\ubc97\ucc28\ud2b8\uc640 \uc720\uc0ac\ud55c \uc791\uc5c5\uc744 \ud558\uac8c \ub418\ub294\ub370, pandas dataframe \uc5d0\uc11c\ub294 groupby\ub97c \uc0ac\uc6a9\ud558\uba74 \uc27d\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c pivot\uc774\ub77c\ub294 \uba54\uc18c\ub4dc\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n* 'Pclass', 'Survived'\ub97c \uac00\uc838\uc628 \ud6c4, Pclass\ub85c \ubb36\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uace0\ub098\uba74 \uac01 Pclass\ub9c8\ub2e4 0,1\uc774 count\uac00 \ub418\ub294\ub370, \uc774\ub97c \ud3c9\uade0\ub0b4\uba74 \uac01 Pclass \ubcc4 \uc0dd\uc874\ub960\uc774 \ub098\uc635\ub2c8\ub2e4.\n* \uc544\ub798\uc640 \uac19\uc774 count()\ub97c \ud558\uba74, \uac01 class\uc5d0 \uba87 \uba85\uc774 \uc788\ub294\uc9c0 \ud655\uc778 \ud560 \uc218 \uc788\uc73c\uba70, sum()\uc744 \ud558\uba74, 216\uba85 \uc911 \uc0dd\uc874\ud55c(Survived=1) \uc0ac\ub78c\uc758 \ucd1d \ud569\uc744 \uc8fc\uac8c \ub429\ub2c8\ub2e4.","4488070d":"* \uc6b0\ub9ac\uac00 EDA\uc5d0\uc11c \uc0b4\ud3b4\ubd24\ub4ef\uc774, Sex\uc640 Pclass\uac00 Survived\uc5d0 \uc0c1\uad00\uad00\uacc4\uac00 \uc5b4\ub290 \uc815\ub3c4 \uc788\uc74c\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc0dd\uac01\ubcf4\ub2e4 fare\uc640 Embarked\ub3c4 \uc0c1\uad00\uad00\uacc4\uac00 \uc788\uc74c\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \ub610\ud55c \uc6b0\ub9ac\uac00 \uc5ec\uae30\uc11c \uc5bb\uc744 \uc218 \uc788\ub294 \uc815\ubcf4\ub294 \uc11c\ub85c \uac15\ud55c \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\ub294 feature\ub4e4\uc774\uc5c6\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.\n* \uc774\uac83\uc740 \uc6b0\ub9ac\uac00 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0ac \ub54c, \ubd88\ud544\uc694\ud55c (redundant, superfluous) feature\uac00 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. -1, 1 \uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c4 feature A, B\uac00 \uc788\ub2e4\uba74, \uc6b0\ub9ac\uac00 \uc5bb\uc744 \uc218 \uc788\ub294 \uc815\ubcf4\ub294 \uc0ac\uc2e4 \ud558\ub098\uc77c \uac70\ub2c8\uae50\uc694.\n* \uc774\uc81c \uc2e4\uc81c\ub85c \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc55e\uc11c\uc11c data preprocessing(\uc804\ucc98\ub9ac)\uc744 \uc9c4\ud589\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","fc8c5716":"## 2.5 Pclass, Sex, Age","be44c920":"## 3.1 Fill Null\n## 3.1.1 Fill Null in Age using title\n* Age\uc5d0\ub294 null data\uac00 177\uac1c\ub098 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ucc44\uc6b8 \uc218 \uc788\ub294 \uc5ec\ub7ec\uac00\uc9c0 \uc544\uc774\ub514\uc5b4\uac00 \uc788\uc744 \uac83\uc778\ub370, \uc5ec\uae30\uc11c \uc6b0\ub9ac\ub294 title + statistics\ub97c \uc0ac\uc6a9\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \n* \uc601\uc5b4\uc5d0\uc11c\ub294 Miss, Mrr, \uac19\uc740 title\ub9ac \uc874\uc7ac\ud569\ub2c8\ub2e4. \uac01 \ud0d1\uc2b9\uac1d\uc758 \uc774\ub984\uc5d0\ub294 \uaf2d \uc774\ub7f0 title\uc774 \ub4e4\uc5b4\uac00\uac8c \ub418\ub294\ub370 \uc774\ub97c \uc0ac\uc6a9\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n* pandas series\uc5d0\ub294 data\ub97c string\uc73c\ub85c \ubc14\uafd4\uc8fc\ub294 str method, \uac70\uae30\uc5d0 \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \uc801\uc6a9\ud558\uac8c \ud574\uc8fc\ub294 extract method\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec title\uc744 \uc27d\uac8c \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. title\uc744 column\uc5d0 \uc800\uc7a5\ud558\uaca0\uc2b5\ub2c8\ub2e4.","289e0444":"## 3.3 Change Initial, Embarked and Sex (string to numerical)\n* \ud604\uc7ac Initial\uc740 Mr, Mrs, Miss, Master, Other \ucd1d 5\uac1c\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7f0 \uce74\ud14c\uace0\ub9ac\ub85c \ud45c\ud604\ub418\uc5b4\uc838 \uc788\ub294 \ub370\uc774\ud130\ub97c \ubaa8\ub378\uc5d0 \uc778\ud48b\uc73c\ub85c \ub123\uc5b4 \uc904 \ub54c \uc6b0\ub9ac\uac00 \ud574\uc57c\ud560 \uac83\uc740 \uba3c\uc800 \ucef4\ud4e8\ud130\uac00 \uc778\uc2dd\ud560 \uc218 \uc788\ub3c4\ub85d \uc218\uce58\ud654 \uc2dc\ucf1c\uc918\uc57c \ud569\ub2c8\ub2e4. \n* map method\ub97c \uac00\uc9c0\uace0 \uac04\ub2e8\ud788 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc0ac\uc804 \uc21c\uc11c\ub300\ub85c \uc815\ub9ac\ud558\uc5ec mapping \ud558\uaca0\uc2b5\ub2c8\ub2e4.","2bea19d4":"* Sklearn\uc740 \uba38\uc2e0\ub7ec\ub2dd\uc758 \ucc98\uc74c\ubd80\ud130 \ub05d\uae4c\uc9c0\uac00 \ub2e4 \uc788\uc2b5\ub2c8\ub2e4. feature engineering, preprocessing, \uc9c0\ub3c4 \ud559\uc2b5 \uc54c\uace0\ub9ac\uc998, \ube44\uc9c0\ub3c4 \ud559\uc2b5 \uc54c\uace0\ub9ac\uc998, \ubaa8\ub378 \ud3c9\uac00, \ud30c\uc774\ud504\ub77c\uc778 \ub4f1 \uba38\uc2e0\ub7ec\ub2dd\uc5d0 \uad00\ub828\ub41c \ubaa8\ub4e0 \uc9c1\uc5c5\ub4e4\uc774 \uc190\uc26c\uc6b4 \uc778\ud130\ud398\uc774\uc2a4\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130 \ubd84\uc11d + \uba38\uc2e0\ub7ec\ub2dd\uc744 \ud558\uace0 \uc2f6\ub2e4\uba74, \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ubc18\ub4dc\uc2dc \uc219\uc9c0\ud574\uc57c\ud569\ub2c8\ub2e4. \n* \uc9c0\uae08 \ud0c0\uc774\ud0c0\ub2c9 \ubb38\uc81c\ub294 target class(survived)\uac00 \uc788\uc73c\uba70, target class\ub294 0, 1\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc73c\ubbc0\ub85c (binary) binary classfication \ubb38\uc81c\uc785\ub2c8\ub2e4.\n* \uc6b0\ub9ac\uac00 \uc9c0\uae08 \uac00\uc9c0\uace0 \uc788\ub294 train set\uc758 survived\ub97c \uc81c\uc678\ud55c input\uc744 \uac00\uc9c0\uace0 \ubaa8\ub378\uc744 \ucd5c\uc801\ud654\uc2dc\ucf1c\uc11c \uac01 \uc0d8\ud50c(\ud0d1\uc2b9\uac1d)\uc758 \uc0dd\uc874\uc720\ubb34\ub97c \ud310\ub2e8\ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uc5b4 \ub0c5\ub2c8\ub2e4.\n* \uadf8 \ud6c4 \ubaa8\ub378\uc774 \ud559\uc2b5\ud558\uc9c0 \uc54a\uc558\ub358 test set\uc744 input\uc73c\ub85c \uc8fc\uc5b4\uc11c test set\uc758 \uac01 \uc0d8\ud50c\uc758 \uc0dd\uc874 \uc720\ubb34\ub97c \uc608\uce21\ud574\ubd05\ub2c8\ub2e4.","202aa8a0":"* \uc9c0\uae08\uae4c\uc9c0 \ubcf8 Sex, Pclass, Age, Survived \ubaa8\ub450\uc5d0 \ub300\ud574\uc11c \ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4. \uc774\ub97c \uc27d\uac8c \uadf8\ub824\uc8fc\ub294 \uac83\uc774 seaborn\uc758 violinplot\uc785\ub2c8\ub2e4.\n* x \ucd95\uc740 \uc6b0\ub9ac\uac00 \ub098\ub220\uc11c \ubcf4\uace0 \uc2f6\uc5b4\ud558\ub294 case(\uc5ec\uae30\uc120 Pclass, Sex)\ub97c \ub098\ud0c0\ub0b4\uace0, y \ucd95\uc740 \ubcf4\uace0 \uc2f6\uc5b4\ud558\ub294 distribution(Age) \uc785\ub2c8\ub2e4.","3a52edeb":"* target label\uc774 \uc5b4\ub5a4 distribution\uc744 \uac00\uc9c0\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubd10\uc57c \ud569\ub2c8\ub2e4.\n* \uc9c0\uae08 \uac19\uc740 binary classification \ubb38\uc81c\uc758 \uacbd\uc6b0\uc5d0\uc11c, 1\uacfc 0\uc758 \ubd84\ud3ec\uac00 \uc5b4\ub5a0\ub0d0\uc5d0 \ub530\ub77c \ubaa8\ub378\uc758 \ud3c9\uac00 \ubc29\ubc95\uc774 \ub2ec\ub77c\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","aa5d4ca0":"* \ud30c\uc774\uc36c\uc5d0\uc11c \ud14c\uc774\ube14\ud654 \ub41c \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\ub294 \ub370 \uac00\uc7a5 \ucd5c\uc801\ud654\ub418\uc5b4 \uc788\uc73c\uba70, \ub9ce\uc774 \uc4f0\uc774\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 pandas\uc785\ub2c8\ub2e4.\n* \uc6b0\ub9ac\ub294 pandas\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\uc14b\uc758 \uac04\ub2e8\ud55c \ud1b5\uacc4\uc801 \ubd84\uc11d \ubd80\ud130, \ubcf5\uc7a1\ud55c \ucc98\ub9ac\ub4e4\uc744 \uac04\ub2e8\ud55c \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud574\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \ud30c\uc774\uc36c\uc73c\ub85c \ub370\uc774\ud130\ubd84\uc11d\uc744 \ud55c\ub2e4\uace0 \ud558\uba74 \ubc18\ub4dc\uc2dc \ub2a5\uc219\ud574\uc838\uc57c \ud560 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc774\ub2c8, \uc5ec\ub7ec \ucee4\ub110\ub4e4\uc744 \uacf5\ubd80\ud558\uc2dc\uba74\uc11c \uc0ac\uc6a9\ubc95\uc5d0 \uc775\uc219\ud574\uc9c0\ub3c4\ub85d \ubc18\ubcf5 \ub610 \ubc18\ubcf5\ud558\uc2dc\uae38 \uad8c\uc7a5\ud569\ub2c8\ub2e4.\n* \uce90\uae00\uc5d0\uc11c \ub370\uc774\ud130\uc14b\uc740 \ubcf4\ud1b5 train, testset\uc73c\ub85c \ub098\ub258\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","e342fea7":"* \uc774\uc81c \ubcf8\uaca9\uc801\uc73c\ub85c \ub370\uc774\ud130 \ubd84\uc11d\uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ub294 \ub9e4\uc6b0 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774 \ub9ce\uc740 \ub370\uc774\ud130 \uc548\uc5d0 \uc228\uaca8\uc9c4 \uc0ac\uc2e4\uc744 \ucc3e\uae30 \uc704\ud574\uc120 \uc801\uc808\ud55c \uc2dc\uac01\ud654\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\n* \uc2dc\uac01\ud654 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 matplotlib, seaborn, plotly \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \ubaa9\uc801\uc5d0 \ub9de\ub294 \uc18c\uc2a4\ucf54\ub4dc\ub97c \uc815\ub9ac\ud574\ub450\uc5b4 \ud544\uc694\ud560 \ub54c\ub9c8\ub2e4 \ucc38\uace0\ud558\uba74 \ud3b8\ud569\ub2c8\ub2e4.","74ef16b4":"## 2.7 Family - SibSp(\ud615\uc81c\uc790\ub9e4) + Parch(\ubd80\ubaa8, \uc790\ub140)\n* SibSp\uc640 Parch\ub97c \ud569\uce58\uba74 Family\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. Family\ub85c \ud569\uccd0\uc11c \ubd84\uc11d\ud574 \ubd05\uc2dc\ub2e4.","d2ef718a":"## 4 Building machine learning model and prediction using the trained model","ec93069e":"* \uc704 table\uc744 \ucc38\uace0\ud558\uc5ec, \ub0a8\uc790, \uc5ec\uc790\uac00 \uc4f0\ub294 Initial\uc744 \uad6c\ubd84\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. replace \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, \ud2b9\uc815 \ub370\uc774\ud130 \uac12\uc744 \uc6d0\ud558\ub294 \uac12\uc73c\ub85c \uce58\ud658\ud574\uc90d\ub2c8\ub2e4.","5e13d22e":"* \uc0dd\uc874\uc5d0 \ub530\ub978 Age\uc758 histogram\uc744 \uadf8\ub824\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","a3c5201c":"* \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, \ub098\uc774\uac00 \uc5b4\ub9b4\uc218\ub85d \uc0dd\uc874\ub960\uc774 \ud655\uc2e4\ud788 \ub192\uc740 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc6b0\ub9ac\ub294 \uc774 \ub098\uc774\uac00 \uc911\uc694\ud55c feature\ub85c \uc4f0\uc77c \uc218 \uc788\uc74c\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4.","6d2ffb77":"## 3. Feature engineering\n* \ubcf8\uaca9\uc801\uc778 feature engineering\uc744 \uc2dc\uc791\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n* \uac00\uc7a5 \uba3c\uc800, dataset\uc5d0 \uc874\uc7ac\ud558\ub294 null data\ub97c \ucc44\uc6b0\ub824\uace0 \ud569\ub2c8\ub2e4.\n* \uc544\ubb34 \uc22b\uc790\ub85c \ucc44\uc6b8 \uc218\ub294 \uc5c6\uace0, null data\ub97c \ud3ec\ud568\ud558\ub294 feature\uc758 statistics\ub97c \ucc38\uace0\ud558\uac70\ub098, \ub2e4\ub978 \uc544\uc774\ub514\uc5b4\ub85c \ucc44\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* null data\ub97c \uc5b4\ub5bb\uac8c \ucc44\uc6b0\ub290\ub0d0\uc5d0 \ub530\ub77c \ubaa8\ub378\uc758 \uc131\ub2a5\uc774 \uc88c\uc9c0\uc6b0\uc9c0\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc2e0\uacbd\uc368\uc918\uc57c \ud560 \ubd80\ubd84\uc785\ub2c8\ub2e4.\n* Feature engineering\uc740 \uc2e4\uc81c \ubaa8\ub378\uc758 \ud559\uc2b5\uc5d0 \uc4f0\ub824\uace0 \ud558\ub294 \uac83\uc774\ubbc0\ub85c, train\ubfd0\ub9cc \uc544\ub2c8\ub77c test\ub3c4 \ub611\uac19\uc774 \uc801\uc6a9 \ud574\uc8fc\uc5b4\uc57c \ud569\ub2c8\ub2e4.","7c32e29f":"## 1. Dataset \ud655\uc778","05a377b1":"* \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, \ub098\uc774\uac00 \uc5b4\ub9b0 \uacbd\uc6b0 \uc0dd\uc874 \ud655\ub960\uc774 \ub192\ub2e4\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","78141788":"* Embarked\ub3c4 C, Q, S\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. map\uc744 \uc774\uc6a9\ud574 \ubc14\uafd4\ubd05\uc2dc\ub2e4.\n* \uadf8\ub7ec\uae30 \uc55e\uc11c\uc11c, \ud2b9\uc815 column\uc5d0 \uc5b4\ub5a4 \uac12\ub4e4\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubcf4\ub294 \ubc29\ubc95\uc744 \uc7a0\uae50 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uac04\ub2e8\ud788 unique() \uba54\uc18c\ub4dc, value_counts()\ub97c \uc368\uc11c count\uae4c\uc9c0 \ubcf4\ub294 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.","33cede49":"## One-hot encoding on Initial and Embarked","0ef424ef":"* \ub450 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc798 \uc801\uc6a9\ub410\ub2e4\uba74, \ub458\ub2e4 \uac19\uc740 \uacb0\uacfc\ub97c \ub0b4\uc57c\ud569\ub2c8\ub2e4.\n* \uc774\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 Series \uac04 boolean \ube44\uad50 \ud6c4 all() \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud569\uc2dc\ub2e4. all() \uba54\uc18c\ub4dc\ub294 \ubaa8\ub4e0 \uac12\uc774 True\uba74 True, \ud558\ub098\ub77c\ub3c4 False\uba74 False\ub97c \uc90d\ub2c8\ub2e4.","e411f5f5":"* Embarked\ub294 Null value\uac00 2\uac1c\uc774\uace0, S\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud0d1\uc2b9\uac1d\uc774 \uc788\uc5c8\uc73c\ubbc0\ub85c, \uac04\ub2e8\ud558\uac8c Null\uc744 S\ub85c \ucc44\uc6b0\uaca0\uc2b5\ub2c8\ub2e4.","e9637f52":"* \uc548\ud0c0\uae5d\uac8c\ub3c4 \uc8fd\uc740 \uc0ac\ub78c\uc774 61.62%\ub85c \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.\n* target label\uc758 \ubd84\ud3ec\uac00 \uc81c\ubc95 \uade0\uc77c(balanced)\ud569\ub2c8\ub2e4. \ubd88\uade0\uc77c\ud55c \uacbd\uc6b0, \uc608\ub97c \ub4e4\uc5b4\uc11c 100\uc911 1\uc774 99, 0\uc774 1\uac1c\uc778 \uacbd\uc6b0\uc5d0\ub294 \ub9cc\uc57d \ubaa8\ub378\uc774 \ubaa8\ub4e0 \uac83\uc744 1\uc774\ub77c \ud574\ub3c4 \uc815\ud655\ub3c4\uac00 99%\uac00 \ub098\uc624\uac8c \ub429\ub2c8\ub2e4. 0\uc744 \ucc3e\ub294 \ubb38\uc81c\ub77c\uba74 \uc774 \ubaa8\ub378\uc744 \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \uc904 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uc9c0\uae08 \ubb38\uc81c\uc5d0\uc11c\ub294 \uadf8\ub807\uc9c0 \uc54a\uc73c\ub2c8 \uacc4\uc18d \uc9c4\ud589\ud558\uaca0\uc2b5\ub2c8\ub2e4.","631f511c":"* \ubcf4\ub2e4\uc2dc\ud53c, \uc5ec\uc790\uac00 \uc0dd\uc874\ud560 \ud655\ub960\uc774 \ub192\uc2b5\ub2c8\ub2e4.","41ed346e":"## 2. Exploratory data analysis","e46d9424":"* \uc6b0\ub9ac\uac00 \ub2e4\ub8e8\ub294 \ubb38\uc81c\uc5d0\uc11c feature\ub294 Pclass, Age, SibSp, Parch, Fare \uc774\uba70, \uc608\uce21\ud558\ub824\ub294 target label\uc740 Survived\uc785\ub2c8\ub2e4.\n* pandas dataframe\uc5d0\ub294 describe() \uba54\uc18c\ub4dc\uac00 \uc788\ub294\ub370, \uc774\ub97c \uc4f0\uba74 \uac01 feature\uac00 \uac00\uc9c4 \ud1b5\uacc4\uce58\ub4e4\uc744 \ubc18\ud658\ud574\uc90d\ub2c8\ub2e4."}}