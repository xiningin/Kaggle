{"cell_type":{"8a840288":"code","4b065099":"code","f7f064c2":"code","3c3417c7":"code","66883cb9":"code","25d6294a":"code","208d4b76":"code","e0ecf93b":"code","35ca559c":"code","83dbca9d":"code","641c6d1c":"code","b52d6317":"code","e4ace7a5":"code","26daa754":"code","c403c2f9":"code","cb7b816b":"code","c762807b":"code","6ca67638":"code","14f67554":"code","20a3b49d":"code","8191b51b":"code","d802a4da":"code","54dd8de8":"code","7304ecd0":"code","ad552ae8":"code","02dd4146":"code","15b69aae":"code","bfc21b6a":"code","0c7220b7":"code","a7c5a114":"code","8144951a":"code","f9d47930":"code","15292293":"code","f1da3d29":"code","de1fe7b0":"code","ecfd9d0c":"code","2c5cdd48":"code","73e75ae1":"code","74369dda":"code","c409f73c":"code","aa849e1d":"code","0fd06ed6":"markdown","c39215a4":"markdown","2b25e087":"markdown","41a2779c":"markdown","6c04a9a0":"markdown","12e3daa2":"markdown","fa6f7952":"markdown","71d48e26":"markdown","008ea826":"markdown","7ac36806":"markdown","4f968b79":"markdown","0b617ddf":"markdown"},"source":{"8a840288":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b065099":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f7f064c2":"data_set = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","3c3417c7":"data_set.head()","66883cb9":"data_set.info()","25d6294a":"sns.barplot(x = data_set['Pclass'],y = data_set['Survived'])","208d4b76":"sns.barplot(x = 'Sex', y = 'Survived',data = data_set)","e0ecf93b":"sns.barplot(x = 'Embarked', y = 'Survived', data = data_set)","35ca559c":"sns.FacetGrid(data= data_set, hue=\"Survived\", height=5) \\\n   .map(sns.distplot, \"Age\") \\\n   .add_legend()","83dbca9d":"sns.pairplot(data_set[[\"Survived\",\"Pclass\",\"Fare\",\"Age\"]], hue=\"Survived\", height=3)","641c6d1c":"data_set.isnull().sum()","b52d6317":"from sklearn.impute import SimpleImputer\nimputer = SimpleImputer(strategy = 'median', missing_values = np.nan)","e4ace7a5":"age = data_set.iloc[:,5:6].values","26daa754":"data_set['Age'] =imputer.fit_transform(age)","c403c2f9":"data_set['Age'].isnull().sum()","cb7b816b":"data_set['Embarked'].value_counts().idxmax()","c762807b":"data_set['Embarked'] = data_set['Embarked'].fillna('mode')","6ca67638":"data_set.isnull().sum()","14f67554":"data_set = data_set.drop(['SibSp','Parch','Ticket','Name','Cabin'],axis = 1)","20a3b49d":"data_set","8191b51b":"sns.heatmap(data_set.corr(),annot = True, cmap = 'Blues')","d802a4da":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()","54dd8de8":"data_set['Embarked'] = encoder.fit_transform(data_set['Embarked'])","7304ecd0":"data_set['Sex'] = data_set['Sex'].replace(to_replace = ['male','female'], value = [0,1])\ndata_set","ad552ae8":"x = data_set.iloc[:,[0,2,3,4,5,6]].values\ny = data_set.iloc[:,1].values\n","02dd4146":"from sklearn.linear_model import LogisticRegression\nreg_model = LogisticRegression()","15b69aae":"reg_model.fit(x,y)","bfc21b6a":"test_set = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_set.head()","0c7220b7":"test_set = test_set.drop(['Name','SibSp','Parch','Cabin','Ticket'],axis = 1)\ntest_set","a7c5a114":"test_set.isnull().sum()","8144951a":"test_set['Embarked'] = encoder.transform(test_set['Embarked'])\ntest_set['Sex'] = test_set['Sex'].replace(to_replace = ['male','female'], value = [0,1])","f9d47930":"t_age = test_set.iloc[:,3:4].values\ntest_set['Age'] = imputer.transform(t_age)","15292293":"test_set","f1da3d29":"test_set['Fare'].mean()","de1fe7b0":"test_set['Fare'] = test_set['Fare'].replace(to_replace = np.nan,value = 35.6200)","ecfd9d0c":"test_set.isnull().sum()","2c5cdd48":"x_test = test_set.iloc[:,:].values \nx_test","73e75ae1":"y_pred = reg_model.predict(x_test)","74369dda":"y_pred","c409f73c":"submit = pd.DataFrame(test_set['PassengerId'])","aa849e1d":"submit['Survived'] = y_pred\nsubmit","0fd06ed6":"## correlation check","c39215a4":"## handling categorical data","2b25e087":"## Model_selection -- logistic regression","41a2779c":"\n* ###### we can infer from the above barplot that people embarked at c has higher rate of survival","6c04a9a0":"###### the avg age of survival is around 30?\n","12e3daa2":"##  dropping unrelated columns","fa6f7952":"## submission formatting","71d48e26":"## test_set preprocessing","008ea826":"##### so the first class people and females have a high survival rate.","7ac36806":"## Exploratory data analysis","4f968b79":"## Titanic survivor prediction using logistic regression","0b617ddf":"## filling missing data "}}