{"cell_type":{"71f54fe3":"code","45a97992":"code","c612511e":"code","15bd2aa3":"code","3291e1fd":"code","b6b9d20c":"code","a5e07d6d":"code","90dce6be":"code","d65a4f76":"code","d97ce893":"code","f7fdfaca":"code","85e5f8b0":"code","c35c2a11":"code","0fd7ee56":"code","314135d5":"code","273593c7":"code","a55b3684":"code","d49b2007":"code","3dfd217b":"code","7e40c034":"code","0e6ba76d":"code","fd2c1c45":"markdown","6707ffed":"markdown","a97b45fa":"markdown"},"source":{"71f54fe3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","45a97992":"data = pd.read_csv(\"..\/input\/marvel-wikia-data.csv\")\n# we create dataframe with pd.read_csv code.","c612511e":"data.columns\n","15bd2aa3":"#Also you can try this code for create dataframe\neye = [\"Black\",\"Blue\"]\nage = [\"25\",\"46\"]\nlist_label = [\"eye\",\"age\"]\nlist_column = [eye,age]\nzipped = dict(zip(list_label,list_column))\ndf = pd.DataFrame(zipped)\ndf","3291e1fd":"#you can add new columns\ndf[\"gender\"] = [\"female\",\"male\"]\ndf","b6b9d20c":"#broadcasting\ndf[\"income\"] = 0\ndf","a5e07d6d":"data1 = data.loc[:,[\"page_id\",\"APPEARANCES\"]]\ndata1.plot()","90dce6be":"data1.plot(subplots = True)\nplt.show()","d65a4f76":"#scatter plot\ndata1.plot(kind=\"scatter\",x=\"APPEARANCES\",y=\"page_id\")\nplt.show()","d97ce893":"#histogram plot\ndata1.plot(kind=\"hist\",y =\"APPEARANCES\",bins=50,range=(0,250),normed = True)\nplt.show()","f7fdfaca":"fig, axes = plt.subplots(nrows=2,ncols=1)\ndata1.plot(kind=\"hist\",y = \"APPEARANCES\",bins=50, range=(0,250),normed=True,ax = axes[0])\ndata1.plot(kind=\"hist\",y = \"APPEARANCES\",bins=50, range=(0,250), normed = True, ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt","85e5f8b0":"data.describe()","c35c2a11":"time_list = [\"1995-05-05\",\"1997-07-12\",\"1990-07-05\"]\nprint(type(time_list[1]))\n#this is a string\n#you may want to create datetime object\ndatetime_object = pd.to_datetime(time_list)\nprint(type(datetime_object))","0fd7ee56":"data2 = data.head()\ndata2","314135d5":"date_list = [\"1950-01-10\",\"1965-12-12\",\"1992-03-10\",\"1998-01-11\",\"1963-03-15\"]\ndatetime_object = pd.to_datetime(date_list)\ndata2[\"date\"]=datetime_object\ndata2 = data2.set_index(\"date\")\ndata2","273593c7":"print(data2.loc[\"1950-01-10\"])","a55b3684":"print(data2.loc[\"1950-01-10\":\"1963-03-15\"])","d49b2007":"data2.resample(\"A\").mean()\n#A=year","3dfd217b":"#M = month\ndata2.resample(\"M\").mean()","7e40c034":"data2.resample(\"M\").first().interpolate(\"linear\")\n","0e6ba76d":"data2.resample(\"M\").mean().interpolate(\"linear\")","fd2c1c45":" INDEXING PANDAS TIME SERIES\n* datetime = object\n* parse_dates(boolean): Transform date to ISO 8601 (yyyy-mm-dd hh:mm:ss ) format","6707ffed":"RESAMPLING PANDAS TIME SERIES\n* Resampling: statistical method over different time intervals\n    * Needs string to specify frequency like \"M\" = month or \"A\" = year\n* Downsampling: reduce date time rows to slower frequency like from daily to weekly\n* Upsampling: increase date time rows to faster frequency like from daily to hourly\n* Interpolate: Interpolate values according to different methods like \u2018linear\u2019, \u2018time\u2019 or index\u2019 \n    ","a97b45fa":"VISUAL EXPLORATORY DATA ANALYSIS"}}