{"cell_type":{"99853617":"code","c315ac0b":"code","9e3652be":"code","3145078b":"code","bf074086":"code","5145f2d7":"code","abbc2384":"code","340d5889":"markdown","221ce4c5":"markdown","c0f135a6":"markdown","169a403e":"markdown","37910ad0":"markdown","e928ac9f":"markdown","74ee5135":"markdown","ac52552b":"markdown","eafc5229":"markdown","9c68e06a":"markdown","a58c831c":"markdown","c3b0a2d6":"markdown","df696d6a":"markdown"},"source":{"99853617":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","c315ac0b":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9e3652be":"sub18978 = pd.read_csv('..\/input\/tps7-18978\/submission.csv')","3145078b":"sub19336 = pd.read_csv('..\/input\/tps7-19336\/submission.csv')","bf074086":"def ensembling(main, support, coeff1, coeff2, coeff3): \n    \n    suba  = main.copy() \n    subav = suba.values\n       \n    subb  = support.copy()\n    subbv = subb.values    \n           \n    ense  = main.copy()    \n    ensev = ense.values  \n \n    for i in range (len(main)):\n        \n        pera1 = subav[i, 1]\n        pera2 = subav[i, 2]\n        pera3 = subav[i, 3]\n        \n        perb1 = subbv[i, 1]\n        perb2 = subbv[i, 2]\n        perb3 = subbv[i, 3]\n\n        per1 = (pera1 * coeff1) + (perb1 * (1.0 - coeff1))\n        per2 = (pera2 * coeff2) + (perb2 * (1.0 - coeff2))\n        per3 = (pera3 * coeff3) + (perb3 * (1.0 - coeff3))\n        \n        ensev[i, 1] = per1\n        ensev[i, 2] = per2\n        ensev[i, 3] = per3\n        \n    ense.iloc[:, 1:] = ensev[:, 1:] \n    \n    ###############################    \n    X  = suba.iloc[:, 1]\n    Y1 = subb.iloc[:, 1]\n    Y2 = ense.iloc[:, 1]\n    \n    plt.style.use('seaborn-whitegrid') \n    plt.figure(figsize=(9, 9), facecolor='lightgray')\n    plt.title(f'\\nP R E D I C T  1\\n\\ntarget_carbon_monoxide\\n')   \n    \n    \n    plt.scatter(X, Y1, s=2.0, label='Support')    \n    plt.scatter(X, Y2, s=2.0, label='Generated')\n    plt.scatter(X, X , s=0.1, label='Main(X=Y)')\n    \n    plt.legend(fontsize=12, loc=2)\n    plt.savefig('predict1.png')\n    plt.show()     \n    ###############################      \n    X  = suba.iloc[:, 2]\n    Y1 = subb.iloc[:, 2]\n    Y2 = ense.iloc[:, 2]\n    \n    plt.style.use('seaborn-whitegrid') \n    plt.figure(figsize=(9, 9), facecolor='lightgray')\n    plt.title(f'\\nP R E D I C T  2\\n\\ntarget_benzene\\n')   \n    \n    \n    plt.scatter(X, Y1, s=2.0, label='Support')    \n    plt.scatter(X, Y2, s=2.0, label='Generated')\n    plt.scatter(X, X , s=0.1, label='Main(X=Y)')\n    \n    plt.legend(fontsize=12, loc=2)\n    plt.savefig('predict2.png')\n    plt.show()     \n    ############################### \n    X  = suba.iloc[:, 3]\n    Y1 = subb.iloc[:, 3]\n    Y2 = ense.iloc[:, 3]\n    \n    plt.style.use('seaborn-whitegrid') \n    plt.figure(figsize=(9, 9), facecolor='lightgray')\n    plt.title(f'\\nP R E D I C T  3\\n\\ntarget_nitrogen_oxides\\n')   \n    \n    \n    plt.scatter(X, Y1, s=2.0, label='Support')    \n    plt.scatter(X, Y2, s=2.0, label='Generated')\n    plt.scatter(X, X , s=0.1, label='Main(X=Y)')\n    \n    plt.legend(fontsize=12, loc=2)\n    plt.savefig('predict3.png')\n    plt.show()     \n    ############################### \n    \n    return ense      \n","5145f2d7":"sub = ensembling(sub18978, sub19336, 0.00, 1.00, 1.00)","abbc2384":"sub.to_csv(\"submission.csv\",index=False)\n# Public Score: 0.18874\n!ls","340d5889":"<div class=\"alert alert-success\">  \n<\/div>","221ce4c5":"<div>\n    <h1 align=\"center\">Smart Ensembling<\/h1>\n    <h1 align=\"center\">Tabular Playground Series - Jul 2021<\/h1>   \n    <h4 align=\"center\">By: Somayyeh Gholami & Mehran Kazeminia<\/h4>\n<\/div>","c0f135a6":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">If you find this work useful, please don't forget upvoting :)<\/h1>\n<\/div>","169a403e":"## Data Set","37910ad0":"<div class=\"alert alert-success\">  \n<\/div>","e928ac9f":"Thanks to: hiro5299834 https:\/\/www.kaggle.com\/hiro5299834\/tps-jul-2021-pycaret-with-pseudo-labels","74ee5135":"<div class=\"alert alert-success\">  \n<\/div>","ac52552b":"<div class=\"alert alert-success\">  \n<\/div>","eafc5229":"## Import","9c68e06a":"<div class=\"alert alert-success\">  \n<\/div>","a58c831c":"<div class=\"alert alert-success\">  \n<\/div>","c3b0a2d6":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">Ensembling<\/h1>\n<\/div>","df696d6a":"Thanks to: maximkazantsev https:\/\/www.kaggle.com\/maximkazantsev\/tps-07-21-eda-lightautoml"}}