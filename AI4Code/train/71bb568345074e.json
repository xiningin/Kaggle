{"cell_type":{"fa5e5c0c":"code","62c81afa":"code","c68ad896":"code","e563d9fb":"code","6e3dc06c":"code","fa317916":"code","eecd9631":"code","30669bf9":"code","08f1a3f7":"code","ada04586":"code","3a4b5f8f":"code","96d9f2ae":"code","23a263b1":"code","30612eac":"code","61b70ba2":"code","51a08561":"code","34dd2076":"code","cfc0fb15":"code","611e4328":"code","c860c669":"code","98aa398d":"code","70c4685d":"code","99c6aaa7":"markdown"},"source":{"fa5e5c0c":"#importing the library for python analytics\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","62c81afa":"#importing dataset\ntrain = pd.read_csv(\"..\/input\/titanic-traincsv\/titanic_train.csv\")\ntrain.head(5)","c68ad896":"\ntrain.info()","e563d9fb":"#finding the null values in every column\ntrain.isnull().sum()","6e3dc06c":"#plotting heatmap of discrepencies in data\nsns.heatmap(train.isnull(),yticklabels=False)","fa317916":"#visualization survived and dead people using counterplot \nsns.countplot(x=train['Survived'],data=train)","eecd9631":"train['Survived'].value_counts()","30669bf9":"#visualization survived and dead people using counterplot wrt to SEX\nsns.countplot(x=train['Survived'], hue = train['Sex'],data=train)","08f1a3f7":"#visualization survived and dead people using counterplot wrt to Pclass\nsns.countplot(x=train['Survived'], hue = train['Pclass'])","ada04586":"#Different age of people present on titanic\nsns.displot(x=train['Age'].dropna(),bins = 40)","3a4b5f8f":"#Number of sibbling and spouse Visualization\nsns.countplot(x=train['SibSp'])","96d9f2ae":"train['SibSp'].value_counts()","23a263b1":"plt.hist(train[\"Fare\"])\nplt.show()","30612eac":"train['Fare'].value_counts()","61b70ba2":"sns.boxplot(x = 'Pclass', y = 'Age', data = train)","51a08561":"#Removing the desprepencies from age column\ndef age_impute(col):\n    Age = col[0]\n    Pclass = col[1]\n\n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        elif Pclass == 3:\n            return 24\n    else:\n        return Age","34dd2076":"train['Age'] = train[['Age', 'Pclass']].apply(age_impute, axis =1)","cfc0fb15":"sns.heatmap(train.isnull(),yticklabels=False)","611e4328":"#Dropping the column \"Cabin\"\ntrain_1=train.drop(\"Cabin\",axis=1)","c860c669":"sns.heatmap(train_1.isnull(),yticklabels=False)","98aa398d":"#countplot for visualizing deaths wrt age\nsns.countplot(x=train[\"Survived\"],hue=train[\"Age\"]>=35)","70c4685d":"train_1[\"Survived\"].value_counts()","99c6aaa7":"DATA CLEANING\n"}}