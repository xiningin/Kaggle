{"cell_type":{"833fe40a":"code","572cc443":"code","2cc54e47":"code","872e16c5":"code","4edb1c20":"code","2168697f":"code","b2d10390":"code","59e94f4d":"code","a4930900":"code","62b30c6e":"code","3971e9d6":"code","e7ede550":"code","196eb583":"code","5bcb66bb":"code","1f02ca50":"code","d7697ad1":"code","bc7cc061":"code","21e4fe64":"code","742d2c71":"code","d6d4bce2":"code","d054b009":"code","7a2b558d":"code","314f8c3e":"code","87074b1d":"code","238f23a0":"code","4fe5f322":"code","6b9f30d0":"code","7be2423c":"code","2ada800b":"code","f17dce11":"code","28a6255a":"code","e840ea97":"markdown","a5a8add6":"markdown","b778f0f3":"markdown","bb9abda1":"markdown","50e91105":"markdown","1fafac56":"markdown","40de2ad3":"markdown","b47deec5":"markdown","72991f42":"markdown","9ebda4b6":"markdown","57a876dd":"markdown"},"source":{"833fe40a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","572cc443":"df=pd.read_csv('..\/input\/nf-dataset\/netflix.csv')","2cc54e47":"df.shape","872e16c5":"df=df.drop(['director','cast'],axis=1)","4edb1c20":"df.head()","2168697f":"#changing date_added column from object to datetime\ndf['date_added']=pd.to_datetime(df['date_added'])","b2d10390":"df.dtypes","59e94f4d":"#color palette for this notebook\n#using Netflix Brand Colors\ncolors = ['#E50914','#B81024','#221F1F',\"#C08F73\",'#F5F5F1']\npalette = sns.color_palette(palette = colors)\n\nsns.palplot(palette, size =2)\nplt.show()","a4930900":"#total running time of the content on the platform\ntime=df['running_time'].sum()\nday=time\/24\nyear=day\/365\n\nprint(\"Netflix platform has content worth of about\",round(year,1),\"years\",\"or\",day,\"days or\",time,\"mins\")","62b30c6e":"#average running time\nprint(\"Average running time of the content is\",round(df[\"running_time\"].mean(axis=0),1),\"mins\")","3971e9d6":"#Top 5 countries by count of releases\ndf['title'].groupby(df['country']).count().sort_values(ascending=False).iloc[:5]","e7ede550":"#Top 5 countries by count of releases for Movies\ndf[df['type'] == 'Movie'].groupby('type')['country'].value_counts().iloc[:5]","196eb583":"#Top 5 countries by count of releases for TVshows\ndf[df['type'] == 'TV Show'].groupby('type')['country'].value_counts().iloc[:5]","5bcb66bb":"#create month from date_added\ndf['month'] = pd.DatetimeIndex(df['date_added']).month\n\n#changing month numbers to string\ndf['month']=pd.to_datetime(df['month'], format='%m').dt.month_name().str.slice(stop=3)\ndf.iloc[:2]","1f02ca50":"# Top 5 months wrt content releases\ndf['date_added'].groupby(df['month']).count().sort_values(ascending=False).iloc[:5]","d7697ad1":"# Top 5 ratings by release year\ndf['show_id'].groupby(df['rating']).count().sort_values(ascending=False).iloc[:5]","bc7cc061":"# Audience ages\ndf['show_id'].groupby(df['Suggested_Viewer_Age']).count().sort_values(ascending=False).iloc[:5]\n","21e4fe64":"# Audience segments\naud=df['show_id'].groupby(df['Audience group']).count().sort_values(ascending=False)\naud","742d2c71":"!pip install pywaffle","d6d4bce2":"from pywaffle import Waffle","d054b009":"#Audience group: \n\ndata = {'Adults': 4337,'Young Adults\/Teens': 2564,'All': 609,'Kids':277}\nfig = plt.figure(FigureClass=Waffle, \n    rows=5,\n    columns=10, \n    values=data, \n    figsize=(10,6),\n    colors=['#E50914','#221F1F','#B81024',\"#C08F73\"],\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1.1, 1)},\n    icons='tv',        \n    font_size=35, \n    icon_legend=True\n)\nplt.show()","7a2b558d":"# Distribution of Content on platform by decade\ndf['show_id'].groupby(df['Decade']).count().sort_values(ascending=False)","314f8c3e":"#Content in 2010 decade vs 2000\nprint(\"Increase in content for 2010 decade vs previous decade 2000 is\",round((5711-728)\/728*100,0),\"%\")","87074b1d":"pd.unique(df[['genre_1', 'genre_2','genre_3']].values.ravel('K'))","238f23a0":"df_cat=pd.DataFrame(pd.unique(df[['genre_1', 'genre_2','genre_3']].values.ravel('K')))\n#rename empty column\ndf_1=df_cat.rename(columns = {0 : \"Genre\"})\n#dropna \ndf_1.dropna(inplace=True)\ndf_1.iloc[:5]","4fe5f322":"#Available Genres on the platform\ndf_1.nunique()","6b9f30d0":"df['type'].groupby(df['type']).count()","7be2423c":"# Distribution of Content on platform\nexplode = [0.03,0.1]\ndf.groupby(['type']).sum().plot(kind='pie', y='release_year',explode = explode,autopct='%1.1f%%',colors=['#E50914','#221F1F'],textprops={'color':\"w\",'size':\"large\"})","2ada800b":"#decadewise content for audiences\nsns.catplot(y=\"Audience group\", x=\"Decade\", data=df,palette=['#E50914','#221F1F'],hue='type')","f17dce11":"#typewise content for audiences\nsns.countplot(y=\"Audience group\", data=df,palette=['#E50914','#221F1F'],hue='type')","28a6255a":"sns.catplot(y=\"type\", x=\"release_year\", data=df,palette=['#E50914','#221F1F'])","e840ea97":"<h3 style=\"font-family: Trebuchet MS;background-color:#edf2f4;color:#B81024;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Importing & Reading the dataset \ud83d\udcdd <\/centre><\/strong><\/h3>","a5a8add6":"<h3 style=\"font-family: Trebuchet MS;background-color:#edf2f4;color:#B81024;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Dataset Exploration <\/centre><\/strong><\/h3>","b778f0f3":"![WhatsApp Image 2021-09-26 at 11.16.29 PM.jpeg](attachment:7188a22a-91fa-4d9c-88c3-dd88d5fd7221.jpeg)","bb9abda1":"<h3 style=\"font-family: Trebuchet MS;background-color:#edf2f4;color:#B81024;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>If you found this notebook useful, please Upvote. Thanks!<\/centre><\/strong><\/h3>","50e91105":"<h3 style=\"font-family: Trebuchet MS;background-color:#edf2f4;color:#B81024;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Installing PyWaffle <\/centre><\/strong><\/h3>","1fafac56":"<h3 style=\"font-family: Trebuchet MS;background-color:#edf2f4;color:#B81024;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Conclusion <\/centre><\/strong><\/h3>","40de2ad3":"\nThis analysis will try to answer the some\/all of following questions:\n\n1.  Are more TV shows being released than Movies? \n2.  Which country has the highest number of TV shows?\n3.  Which country has the highest number of Movies?\n4.  Which content rating has the highest number of releases?\n5.  Which type of content is being released most?\n6.  Has there been an effect of Pandemic on the type of content?\n7.  How much content is there for kids? \n8.  Average Running time of the content on the platform\n9.  Releases in Categories of content \n","b47deec5":"# Exploratory Data Analysis on popular video streaming website - NETFLIX\n\nOriginal Data for this analysis is available at- https:\/\/www.kaggle.com\/shivamb\/netflix-shows\n\nThis notebook uses a cleaned version of the data with additional columns for the EDA (edited in Excel before importing).\n\nThese new columns are -\n\n*  **running_time**- Numerical column created from the 'duration' column to estimate content time on the platform. duration with 'season' string has been ignored due to insufficient data on no. of episodes per season & running time per episode\n*   **Decade** - Numerical column to group content decade wise\n*   **Suggested_Viewer_Age**- Categorical Column for grouping content ratings since different countries have different notations for ratings Eg. TV-MA\/R\/NR\/UR could be for Mature Audiences and not suitable for young viewers. Hence, these could be grouped as per age levels\n*   **Audience group**- categorical column created from the 'Suggested_Viewer_Age' column values\n*   **Genre_1, Genre_2 and Genre_3**- Categorical columns created from 'listed_in' column from original data as each show_id seems to have multiple tags\n","72991f42":"<p style=\"font-family:'Trebuchet MS', cursive; line-height: 2; font-size: 42px; text-align: center; color: #B81024\">Exploratory Data Analysis on NETFLIX<\/p>\n\n---","9ebda4b6":"Based on the above EDA, here's what we can conclude\n\n\n1.   United States has the highest count for content, both Movies and TV shows\n2.   Netflix platform has content running time lasting upto 61 years!(533979 mins), average running time of the content is about 69 mins\n3.   2010 decade has the most content count and that is 684% higher than the previous decade 2000\n4.   UK has more number of TV shows than Movies\n5. TV shows became popular after 2000\n6. More TV shows released as compared to Movies in the Pandemic time as people stayed indoors\n7. Adults have the most selection for Movies and TV shows\n8. Less than 10% content is suitable for All (Kids\/Family viewing)\n9. More than 55% of the total content is suitable for Mature Audiences\n\n\n\n\n","57a876dd":"From this plot, it is clear that about 56% content is suitable for a Mature audience whereas only 4% content available on the platform is suitable for kids."}}