{"cell_type":{"0003fbd5":"code","86b000f8":"code","22bf3c03":"code","4cc59208":"code","c474b8fd":"code","82942de3":"code","3798700a":"code","e2a0b057":"code","03d70fc8":"code","02cdafcb":"code","4111e804":"code","d67ed1ad":"code","985bc3d3":"code","3e0fca62":"code","48c98b24":"code","2ff56c76":"code","ab317eb0":"code","2874d287":"markdown","03012e8b":"markdown","339b12ff":"markdown","5ca448dd":"markdown","9c588abb":"markdown","c1cedaee":"markdown"},"source":{"0003fbd5":"import numpy as np \nimport pandas as pd \nimport glob\nimport os\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\nimport plotly.express as px\n\nimport plotly.graph_objects as go\nfrom plotly.offline import iplot","86b000f8":"sub_715 = pd.read_csv('..\/input\/brain-tumor-3d-blender-csv\/RSNA_Public\/715.csv')\nsub_684 = pd.read_csv('..\/input\/brain-tumor-3d-blender-csv\/RSNA_Public\/684.csv')\nsub_683 = pd.read_csv('..\/input\/brain-tumor-3d-blender-csv\/RSNA_Public\/683.csv')\nsub_674 = pd.read_csv('..\/input\/brain-tumor-3d-blender-csv\/RSNA_Public\/674.csv')","22bf3c03":"sub_715=sub_715.sort_values(by=['BraTS21ID'], ascending=True)\nsub_715=sub_715.reset_index(drop=True)\nsub_715.head(3)","4cc59208":"sub_684=sub_684.sort_values(by=['BraTS21ID'], ascending=True)\nsub_684=sub_684.reset_index(drop=True)\nsub_684.head(3)","c474b8fd":"sub_683=sub_683.sort_values(by=['BraTS21ID'], ascending=True)\nsub_683=sub_683.reset_index(drop=True)\nsub_683.head(3)","82942de3":"sub_674=sub_674.sort_values(by=['BraTS21ID'], ascending=True)\nsub_674=sub_674.reset_index(drop=True)\nsub_674.head(3)","3798700a":"\nhist_data = [sub_715.MGMT_value, sub_684.MGMT_value, sub_683.MGMT_value, sub_674.MGMT_value]\ngroup_labels = ['sub_715', 'sub_684', 'sub_683', 'sub_674']\n\nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False)\n\nfig.update_layout(\n    width = 700,\n    height = 400\n)\nfig.show()","e2a0b057":"# dict for the dataframes and their names\ndfs = {\"sub_715\" : sub_715, \"sub_684\": sub_684, \"sub_683\" : sub_683, \"sub_674\" : sub_674}\n\n# plot the data\nfig = go.Figure()\nfor i in dfs:\n    fig = fig.add_trace(go.Scatter(x = dfs[i][\"BraTS21ID\"],\n                                   y = dfs[i][\"MGMT_value\"], \n                                   mode=\"markers\",\n                                   name = i))\n    fig = fig.add_trace(\n        go.Scatter(\n            x=[0, 1010],\n            y=[0.5, 0.5],\n            mode=\"lines\",\n            line=go.scatter.Line(color=\"gray\"),\n            showlegend=False)\n    )\n\nfig.update_layout(\n    width = 700,\n    height = 500\n)\nfig.show()\n","03d70fc8":"data=np.corrcoef(hist_data)\nfig = px.imshow(data,x=group_labels,y=group_labels)\nfig.show()","02cdafcb":"Finalsubmission = sub_715.copy()\nFinalsubmission['MGMT_value'] =\\\nsub_715['MGMT_value'].values*0.604+\\\nsub_684['MGMT_value'].values*0.185+\\\nsub_683['MGMT_value'].values*0.105+\\\nsub_674['MGMT_value'].values*0.106","4111e804":"Finalsubmission['BraTS21ID'] = Finalsubmission['BraTS21ID'].apply(lambda x: str(x).zfill(5))","d67ed1ad":"Finalsubmission.head(3)","985bc3d3":"Fsubmission = Finalsubmission.set_index('BraTS21ID')\nFsubmissionDict = Fsubmission['MGMT_value'].to_dict()","3e0fca62":"listOfStudyPaths = glob.glob('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/test\/*')\nlistOfStudies = [eachPath.split('\/')[-1] for eachPath in listOfStudyPaths]\n\npredList = []\nfor eachStudy in listOfStudies:\n    if eachStudy not in FsubmissionDict:\n        predList.append('0.500')\n    else:\n        score = float(FsubmissionDict[eachStudy])\n        predList.append(score)\n        \nsubmission = pd.DataFrame({'BraTS21ID':listOfStudies,'MGMT_value':predList})\n","48c98b24":"submission=submission.sort_values(by=['BraTS21ID'], ascending=True)\nsubmission=submission.reset_index(drop=True)\nsubmission.head(5)","2ff56c76":"submission.to_csv('submission.csv', index=False)","ab317eb0":"plt.figure(figsize=(5, 5))\nplt.hist(submission[\"MGMT_value\"]);","2874d287":"# blending\nGenerally, blending uses many separate models to compute the initial prediction. the goal of mixing the predictions in some way is to achieve an even better final prediction.","03012e8b":"# \ud83e\udde0Brain Tumor 3D blender ","339b12ff":"## Other notebooks in this competition\n\n* [Brain Tumor 3D [Training]](https:\/\/www.kaggle.com\/ammarnassanalhajali\/brain-tumor-3d-training) \n* [Brain Tumor 3D [Inference]](https:\/\/www.kaggle.com\/ammarnassanalhajali\/brain-tumor-3d-inference)\n* [Brain Tumor 3D [EDA]](https:\/\/www.kaggle.com\/ammarnassanalhajali\/brain-tumor-3d-eda)\n\n\n## Please if this kernel is useful, <font color='red'>please upvote !!<\/font>","5ca448dd":"# Please if this kernel is useful, <font color='red'>please upvote !!<\/font>","9c588abb":"#### <font color='red'>Important Note:<\/font> Please don't use this notebook as a final submission, that will lead you to get a low private score because I used a 0.5 as score for all points in the private data.\n### In this notebook, I just want to explain the blending and how it can improve the score.\n\n## Good Luck","c1cedaee":"\n# Solutions for blending\n\n1. https:\/\/www.kaggle.com\/rluethy\/efficientnet3d-with-one-mri-type (Score=0.684)\n1. https:\/\/www.kaggle.com\/ammarnassanalhajali\/brain-tumor-3d-inference (Score=0.683)\n1. https:\/\/www.kaggle.com\/syerwin\/efficientnet3d-with-one-mri-type (Score=0.674)\n1. https:\/\/www.kaggle.com\/hijest\/1-rsna-miccai-not-smart-ensemble  (Score=0.715)\n\n"}}