{"cell_type":{"e935db4f":"code","dfe2c6bb":"code","33fcfb7c":"code","6dcb1f1e":"code","a047a350":"code","50fe51b3":"code","8e7ba5fd":"code","e5edbf88":"code","14cf9773":"code","a999ed38":"code","e1564551":"code","b8dff3db":"code","f9b2f48a":"code","d4550c19":"code","5acb8822":"code","db5fc2ad":"code","cdd9387f":"code","c5f45c9f":"markdown","6f29812d":"markdown","287007cf":"markdown","64f8114b":"markdown","7b1b4ea4":"markdown","523f7edb":"markdown","ab6dc376":"markdown","3f24dd76":"markdown","ed2fc0e7":"markdown","a5900e33":"markdown"},"source":{"e935db4f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nfrom IPython.display import Image, display","dfe2c6bb":"player_df = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/player_punt_data.csv')\nplay_player_role_df = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/play_player_role_data.csv')\nvideo_review_df = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/video_review.csv')\nprint(video_review_df.shape)","33fcfb7c":"# Combine Relevant Player Information, Position, Role, Number\nmaster_player_df = pd.merge(player_df, play_player_role_df,\n                          how='inner',\n                          on=['GSISID']).drop(columns=['Season_Year'])\nmaster_player_df.head()","6dcb1f1e":"# Check summary counts to see if any are even needed\nprint(video_review_df['Player_Activity_Derived'].value_counts())\nprint('---')\nprint(video_review_df['Turnover_Related'].value_counts())\nprint('---')\nprint(video_review_df['Primary_Impact_Type'].value_counts())\nprint('---')\nprint(video_review_df['Primary_Partner_Activity_Derived'].value_counts())\nprint('---')\nprint(video_review_df['Friendly_Fire'].value_counts())","a047a350":"# Now that we have a descriptive idea of what's going on, I'm gonna just drop these columns\n# and also clear up the unclear designation and convert it to NaN\ndroppers = ['Player_Activity_Derived', 'Turnover_Related', 'Primary_Partner_Activity_Derived', \n            'Friendly_Fire', 'Season_Year']\nvideo_review_df.drop(columns=droppers, inplace=True)\n\n# Remove 'Unclear' designation\nvideo_review_df.loc[33, 'Primary_Partner_GSISID'] = 'NaN'","50fe51b3":"'''Control Video Footage'''\nvideo_footage_control_df = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/video_footage-control.csv')\nprint(video_footage_control_df.shape)\nvideo_footage_control_df.tail(1)","8e7ba5fd":"# # Use for printing out video links\n# for i in range(len(video_footage_control_df)):\n#     print(video_footage_control_df.loc[i, 'Preview Link'])","e5edbf88":"'''Concussion Video Footage'''\nvideo_footage_injury_df = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/video_footage-injury.csv')\nprint(video_footage_injury_df.shape)\nvideo_footage_injury_df.head(1)","14cf9773":"# # Injury Video Links; search for player who is injured; watch the film, be the film....\n# for i in range(len(injured_players)):\n#     print(i, injured_players['PREVIEW LINK (5000K)'][i])","a999ed38":"# Preprocess to allow easier join between video review data and the actual footage data\nrename_columns = {'gamekey': 'GameKey', 'playid': 'PlayID', 'season': 'Season_Year'}\nvideo_footage_injury_df.rename(columns=rename_columns, inplace=True)\n\n# Combine Video Review and Video Injury DataFrames to have the injured player and partner player data\ninjury_play = pd.merge(video_review_df, video_footage_injury_df, \n                       how='inner', \n                       on=['GameKey', 'PlayID'])\ninjury_play.head(1)","e1564551":"# Lets Drop Some More Data I consider uncritical for getting a feel for the data\ndroppers = ['Season_Year', 'Type', 'Week', 'Home_team', 'Visit_Team', 'Qtr']\ninjury_play.drop(columns=droppers, inplace=True)","b8dff3db":"# Join Info (their jersey number, position, role) on Players Who are Injured\ninjured_players = pd.merge(injury_play, master_player_df,\n                           how='inner',\n                           on=['GSISID', 'GameKey', 'PlayID'])\n\nprint('Shape:', injured_players.shape)\ninjured_players.head(1)","f9b2f48a":"# Drop Certain Rows After Identifying Concussed Players Jersey Number from video\ndrop_rows = [1, 7, 17, 20, 23, 26, 27, 28, 29, 32, 33, 36, 38, 39, 45, 46, 47, 50, 52, 55, 57]\ninjured_players.drop(labels=drop_rows, inplace=True)\ninjured_players.reset_index(drop=True, inplace=True)","d4550c19":"# Read in only concussion data (dataset formed in a different notebook)\n# Contains NGS data for plays involving a concussion\nngs_concussion = pd.read_csv('..\/input\/ngsconcussion\/NGS-concussion.csv')\nngs_concussion.head()","5acb8822":"# Convert Primary_Partner_GSISID from str to float\ninjured_players['Primary_Partner_GSISID'] = injured_players['Primary_Partner_GSISID'].astype('float')","db5fc2ad":"from IPython.display import display, HTML\n\ndef make_html(game_key, play_id):\n    return '<img src=\"{}\" style=\"display:inline;margin:1px\"\/>'\\\n    .format('..\/input\/ngsconcussion\/' + str(game_key) + '_' + str(play_id) + '.gif')","cdd9387f":"# Map Routes of concussed player and partner player\n# and give approximate speeds throughout their route\nfor i in range(len(injured_players)):\n    # Get necessary values for query of NGS data\n    game_key = injured_players.loc[i, 'GameKey']\n    play_id = injured_players.loc[i, 'PlayID']\n    concussed_id = injured_players.loc[i, 'GSISID']\n    partner_id = injured_players.loc[i, 'Primary_Partner_GSISID']\n    print('GameKey:', game_key, 'PlayID:', play_id)\n    print('Play Description:', injured_players.loc[i,'PlayDescription'])\n    print('Primary Impact Type:', injured_players.loc[i, 'Primary_Impact_Type'])\n    print('Concussed:', concussed_id, 'Role:', injured_players.loc[i, 'Role'])\n    print('Partner:', partner_id)\n    # Visualizing play with .gif file\n    display(HTML(''.join(make_html(game_key, play_id))))\n    \n    # Concussed player\n    where_condition = (\n        (ngs_concussion['GameKey'] == game_key)&\\\n        (ngs_concussion['PlayID'] == play_id) &\\\n        (ngs_concussion['GSISID'] == concussed_id))\n    concussion = ngs_concussion[where_condition].copy()\n    # Reorder by Time and reset index\n    concussion.sort_values(by=['Time'], inplace=True)\n    concussion.reset_index(drop=True, inplace=True)\n    \n    # Partner player\n    where_condition = (\n        (ngs_concussion['GameKey'] == game_key)&\\\n        (ngs_concussion['PlayID'] == play_id) &\\\n        (ngs_concussion['GSISID'] == partner_id))\n    partner = ngs_concussion[where_condition].copy()\n    partner.sort_values(by=['Time'], inplace=True)\n    partner.reset_index(drop=True, inplace=True)\n\n    # Variables for Mapping\n    concussion_x = concussion['x']\n    concussion_y = concussion['y']\n    partner_x = partner['x']\n    partner_y = partner['y']\n    speed1 = concussion['dis'] \/ 0.1\n    speed2 = partner['dis'] \/ 0.1\n    \n    # Mapping of play\n    sns.set()\n    plt.figure(figsize=(10,5))\n    cmap = plt.get_cmap('coolwarm')\n    plt.scatter(concussion_x, concussion_y, c=speed1, cmap=cmap, alpha=0.5)\n    if partner_id != 'NaN':\n        plt.scatter(partner_x, partner_y, c=speed2, cmap=cmap, alpha=0.5)\n    plt.clim(0, 12)\n    plt.colorbar(label='yards\/sec')\n    # Normal length of field is 120 yards\n    plt.xlim(-10, 130)\n    plt.xticks(np.arange(0, 130, step=10),\n               ['End', 'Goal Line', '10', '20', '30', '40', '50', '40', '30', '20', '10', 'Goal Line', 'End'])\n    # Normal width is 53.3 yards\n    plt.ylim(-10, 65)\n    plt.yticks(np.arange(0, 65, 53.3), ['Sideline', 'Sideline'])\n    plt.title('Playing Field')\n    plt.xlabel('yardline')\n    plt.ylabel('width of field')\n    plt.show()\n    print('---')","c5f45c9f":"## NGS DATA: CONCUSSION PLAY ANALYSIS\n- <b>Next Gen Stats<\/b>:player level data that describes the movement of each player during a play. NGS data is processed by BIOCORE to produce relevant speed and direction data. The NGS data is identified using GameKey, PlayID, and GSISID. Player data for each play is provided as a function of time (Time) for the duration of the play.\n- Players are recorded at every <b>10th of a second or 100 milliseconds<\/b>\n- Field dimensions: 120 yards by 53.3 yards\n- Speed can be calculated with Time and dis\n- <b>Event<\/b> record pretty regular events","6f29812d":"<img src=\"..\/input\/ngsconcussion\/149_3663.gif\" width='250px'\/>******\n ","287007cf":"- Observations:\n    - So we know things involve tackling and blocking (you need contact of some sort to have a concussion)\n    - We see no plays were turnover related although play (GameKey: 274, PlayID: 3609) was turnover related by my idea of a turnover. Maybe they're classifying based off wether there was an actual turnover or if there was a fumble\/muff\/interception going on.\n    - We can see majority of concussions are related to a helmet hitting some other mass minus the one 'unclear' instance\n    - Majority of concussions are not a result of friendly fire\n    - There are 4 plays that have no designated primary_partner: two were helmet-to-ground, 1 was unclear, and 1 was helmet to helmet (H2H).\n        - If you review those videos two latter videos, the 'unclear' designation was a clear helmet to the back of the head of #44 by Houston Player #55\/56 (not sure of number; could probably verify with GSISID from NGS data for the play) and for the H2H you can see Dolphins #34 make a diving head tackle on Baltimore #21.\n            - This information you can deduce by looking at the play video later in the analysis. <b>I MIGHT REPLACE THESE NAN AND UNCLEAR LATER WITH THE CORRECT DATA IF IT SEEMS USEFUL FOR MY OWN ANALYSIS<\/b>","64f8114b":"### Reasoning for analyzing speeds\n- Again this notebook is more to explore parts of the play. I wanted to understand what speeds the concussed player and the partner player were running at throughout the play. I care more about distributions than averages. Mostly to see severity of impact. I plot their routes with their corresponding speeds. I do not label each player because it's only used as reference to what's in the actual videos. I do not evaluate 'o' and 'dir' variables because previous analyses didn't seem to give any useful information to me. Maybe it helps if you're a biomechanical engineer.","7b1b4ea4":"## VIDEO SECTION\n#### VIDEO REVIEW\n- <b>Player Punt Data<\/b>: Player level data that specifies the traditional football position for each player. Each player is identified using his GSISID.\n- <b>Play Player Role Data<\/b>: Play and player level data that specifies a punt specific player role. This dataset will specify each player that played in each play. A player\u2019s role in a play is uniquely defined by the Gamekey PlayID and GSISID.\n- <b>Video Review<\/b>: Injury level data that provides a detailed description of the concussion-producing event. Video Review data are only available in cases in which the injury play can be identified. Each video review case can be identified using a combination of GameKey, PlayID, and GSISID. A brief narrative of the play events is provided.\n- <b>Primary Impact Type<\/b>: gives source of trauma; Unclear means exactly what you think\n- <b>Primary_Partner_GSISID<\/b>: usual suspects?\n    - If both the player and partner are concuseed, then each player will be listed as a player\n- <b>37 Concussions<\/b> Identified out of 6681 punts = 0.5538%","523f7edb":"<img src=\"https:\/\/i.imgur.com\/xgKeain.jpg\" width=\"250px\"\/>[](http:\/\/)","ab6dc376":"- This analysis is for getting an idea of what's happening in the punts that result in a concussion. We'll look primarily at who is concussed and the primary partner of the conussed player.","3f24dd76":"- I get the concussed player's information to identify their jersey number in the video. With potentially multiple jersey numbers associated with a player, this was needed information to focus on what events led up to the concussion. I watched the film and cross referenced plays where it was unclear as to the players number with game recaps (googled) to identify the concussed players number.","ed2fc0e7":"- All mentions of a play are in this format: (GameKey, PlayId)\n- Video link for play <b>(281, 1526)<\/b> is incorrect.\n    - Play can be identified from times (13:52 to 14:03) of video (https:\/\/www.youtube.com\/watch?v=NsBDbLWcLyM)\n    - Looks like an illegal block above the waist (https:\/\/operations.nfl.com\/the-rules\/nfl-video-rulebook\/illegal-block-above-the-waist\/) that was not called\n- Note: fastest times for 40 yard dash range from 4.22 - 4.30 seconds, which is equivalent to 9.30 - 9.48 yards\/sec\n    - Reference: https:\/\/en.wikipedia.org\/wiki\/40-yard_dash\n- Some players are at moments reaching higher velocities than these amazing 40 yard sprinters average yards\/sec. Just guessing there might be shoves in the back with some plays and maybe competition pushes your speeds a bit :P.\n- Some plays result in high impact collisions others are at speeds similar to an average punt play (analysis in a different notebook for a different time). Just hoping this notebook might be useful to someone who likes to see player routes with speed. Cheers!","a5900e33":"## VIDEO FOOTAGE"}}