{"cell_type":{"b7865f65":"code","ffcbddba":"code","261ab44b":"code","716b78f7":"code","b020f1ea":"code","7353c774":"code","c0a3e66f":"code","c56ddb0e":"code","c989d3b5":"code","65e32b6e":"code","7ae854a1":"code","2e634ef2":"code","c14aec7b":"code","c3cf71fb":"code","a75a520f":"code","e1d90c9f":"code","86276b92":"code","363830af":"code","393b1a38":"markdown","5d8f54df":"markdown","6a03a4fc":"markdown","4509d826":"markdown","e63616a5":"markdown","ea866c84":"markdown","8b945509":"markdown"},"source":{"b7865f65":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport matplotlib.pyplot as plt\n\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ffcbddba":"rent1=pd.read_csv(\"\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent.csv\")\nrent2=pd.read_csv(\"\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv\")","261ab44b":"rent1.head()","716b78f7":"rent1.info()","b020f1ea":"rent2.head()","7353c774":"rent2.info()","c0a3e66f":"# First we need to get rid of string values. Because of my not enough information about this subject I replaced sem info and Incluso as 0.\nrent1.hoa.replace(\"Sem info\",\"0\",inplace=True)\nrent1.hoa.replace(\"Incluso\",\"0\",inplace=True)\n# In this part we changed object to integer.\n\nrent1_hoa=[]\nrent1_hoa=[each.replace(\"R$\",\"0\") for each in rent1.hoa]\nrent1_hoa=[int(each.replace(\",\",\"\")) for each in rent1_hoa]\n","c56ddb0e":"# For rent amount we don't need to get rid of non-numerical values.\nrent1_rent_amount=[each.replace(\"R$\",\"\") for each in rent1[\"rent amount\"]]\nrent1_rent_amount=[int(each.replace(\",\",\"\")) for each in rent1_rent_amount]","c989d3b5":"# Again I changed Incluse to 0.\nrent1[\"property tax\"].replace(\"Incluso\",\"0\",inplace=True)\n\nrent1_property_tax=[each.replace(\"R$\",\"\") for each in rent1[\"property tax\"]]\nrent1_property_tax=[int(each.replace(\",\",\"\")) for each in rent1_property_tax]","65e32b6e":"# Fire insurance has no non-numerical values.\nrent1_fire_insurance=[each.replace(\"R$\",\"\") for each in rent1[\"fire insurance\"]]\nrent1_fire_insurance=[int(each.replace(\",\",\"\")) for each in rent1_fire_insurance]","7ae854a1":"#  Total has no non-numerical values.\nrent1_total=[each.replace(\"R$\",\"\") for each in rent1.total]\nrent1_total=[int(each.replace(\",\",\"\")) for each in rent1_total]","2e634ef2":"# Floor values were object, because of that we changed them to integer.\nrent1.floor.replace(\"-\",\"0\",inplace=True)\nrent1.floor=rent1.floor.astype(int)\n\nrent2.floor.replace(\"-\",\"0\",inplace=True)\nrent2.floor=rent2.floor.astype(int)","c14aec7b":"\ny=rent1.total[:20]\n\ntrace1=go.Bar(\n              x=rent1.rooms,\n              y=y,\n              name=\"Rooms\",\n              marker=dict(color=\"rgba(255,122,32,0.5)\",\n                          line=dict(color=\"rgb(0,0,0)\",width=0.025)),\n              text=rent1.rooms\n)\n\ntrace2=go.Bar(\n              x=rent1[\"parking spaces\"],\n              y=y,\n              name=\"Parking Spaces\",\n              marker=dict(color=\"rgba(123,212,10,0.5)\",\n                        line=dict(color=\"rgb(0,0,0)\",width=0.025)),\n              text=rent1[\"parking spaces\"]\n    \n)\n\ndata=[trace1,trace2]\nlayout=go.Layout(barmode=\"group\")\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","c3cf71fb":"df1=rent1.bathroom.iloc[:20]\ndf2=rent2.bathroom.iloc[:20]\ndf3=pd.concat([df1,df2],axis=0,ignore_index=True)\n\npie_list=[df3]\nlabels=df3.unique()\n\n\nfig = { \n    \"data\": [\n        {\n            \"values\": pie_list,\n            \"labels\": labels,\n            \"domain\":{\"x\":[0,.5]},\n            \"name\":\"Number of Bathroom Rates\",\n            \"hoverinfo\":\"label+percent+name\",\n            \"hole\":.3,\n            \"type\":\"pie\",\n            \n        },\n    ],\n    \"layout\": {\n        \"title\":\"House's Numbers of Bathroom Rates\",\n        \"annotations\":[\n            {\"font\":{\"size\":20},\n             \"showarrow\":False,\n             \"text\":\"Number of Bathrooms\",\n             \"x\":0.2,\n             \"y\":1\n            },\n        ]\n    }\n    \n}\n\n\niplot(fig)","a75a520f":"import plotly.figure_factory as ff\n\ndf=rent2.iloc[:100]\ndata=df.loc[:,[\"property tax (R$)\",\"fire insurance (R$)\",\"total (R$)\"]]\n\ndata[\"index\"]=np.arange(1,len(data)+1)\n\nfig=ff.create_scatterplotmatrix(data,diag=\"box\",index=\"index\",colormap=\"Portland\",colormap_type=\"cat\",height=700,width=700)\n\niplot(fig)","e1d90c9f":"rent2.head()","86276b92":"plt.subplots(figsize=(8,8))\n\n\n\nwordcloud=WordCloud(\n                     background_color=\"white\",\n                     width=512,\n                     height=384,\n                    ).generate(\"\".join(rent2.city))\n\n\n\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.savefig(\"graph.png\")\n\nplt.show()","363830af":"trace1=go.Scatter3d(\n    x=rent1_total[:20],\n    y=rent1_property_tax[:20],\n    z=rent1_fire_insurance[:20],\n    mode=\"markers\",\n    marker=dict(size=10,\n                color=\"rgb(250,42,134)\",))\n\ndata=[trace1]\nlayout=go.Layout(\nmargin=dict(\n            l=0,\n            r=0,\n            b=0,\n            t=0\n    )\n)\n\nfig=go.Figure(data=data,layout=layout)\n\niplot(fig)","393b1a38":"# INTRODUCTION\n   This kernel is about understanding correlation between rent amount and house's features.\n   <br>\n   Este n\u00facleo trata da compreens\u00e3o da correla\u00e7\u00e3o entre o valor do aluguel e os recursos da casa.\n    \n   1. [Load and Check Data](#1) \n   1. [Variable Description](#2)\n   1. [Visualization and Data Correcting](#3)\n       * [Data Correcting](#4)\n       * [Visualization](#5)\n\n","5d8f54df":"1. City: The City where house has been built. \/ A cidade onde a casa foi constru\u00edda.\n1. Area: Property area. \/ Property area.\n1. Rooms: Amount of rooms that house has. \/ Quantidade de quartos que a casa possui.\n1. Bathroom: Amount of bathrooms that house has. \/ Quantidade de banheiros que a casa possui.\n1. Parking Space: Amount of parking spaces that house has. \/ Quantidade de vagas de estacionamento que a casa possui.\n1. Floor: Amount of floors that building has. \/ Quantidade de andares que o pr\u00e9dio possui.\n1. Animal: Acceptance of animal of the house owner. \/ Aceita\u00e7\u00e3o do animal do dono da casa.\n1. Furniture: Is the house furnished or not furnished. \/ A casa est\u00e1 mobilada ou n\u00e3o?\n1. Hoa: Homeowners association tax. \/ Valor do condominio.\n1. Rent Amount: Rent amount. \/ Valor do aluguel.\n1. Property Tax: Tax amount for the property. \/ Valor do imposto para a propriedade.\n1. Fire Insurance: Insurance against fire accidents. \/ Seguro contra acidentes de inc\u00eandio.\n1. Total: Total of the money will be spent. \/ Total do dinheiro ser\u00e1 gasto.","6a03a4fc":"<a id=\"4\"><\/a><br>\n## Data Correcting","4509d826":"<a id=\"5\"><\/a><br>\n## Visualization","e63616a5":"<a id=\"2\"><\/a><br>\n# Variable Description","ea866c84":"<a id=\"1\"><\/a><br>\n# Load and Check Data","8b945509":"<a id=\"3\"><\/a><br>\n# Visualization and Data Correcting"}}