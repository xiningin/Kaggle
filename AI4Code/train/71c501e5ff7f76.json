{"cell_type":{"c3c1b3ec":"code","8ab76050":"code","e4624934":"code","48e65d76":"code","d8ce71a6":"code","aab6f13c":"code","4815eb59":"code","fd94a165":"code","034f64d0":"code","95d10e88":"code","4640f9f2":"code","8cbe6db3":"code","cf446682":"code","c70d5e0a":"markdown","ed4a3b07":"markdown","c909ecc4":"markdown","f2c94904":"markdown","f1c6dfd0":"markdown","0a15da81":"markdown","a4265e70":"markdown","1fdcb4e9":"markdown","fd8a0413":"markdown"},"source":{"c3c1b3ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8ab76050":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nsns.set()\ntrain_df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/titanic\/test.csv\")\nsubmit_df = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","e4624934":"train_df.describe()","48e65d76":"test_df.describe()","d8ce71a6":"test_shape = test_df.shape\ntrain_shape = train_df.shape\n \nprint(test_shape)\nprint(train_shape)","aab6f13c":"def kesson_table(df): \n        null_val = df.isnull().sum()\n        percent = 100 * df.isnull().sum() \/ len(df)\n        kesson_table = pd.concat([null_val, percent], axis=1)\n        kesson_table_ren_columns = kesson_table.rename(columns = {0 : '\u6b20\u640d\u6570', 1 : '%'})\n        return kesson_table_ren_columns\n \nkesson_table(train_df)","4815eb59":"kesson_table(test_df)","fd94a165":"train_df[\"Age\"] = train_df[\"Age\"].fillna(train_df[\"Age\"].median())\ntrain_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"S\")\n \nkesson_table(train_df)","034f64d0":"train_df[\"Sex\"][train_df[\"Sex\"] == \"male\"] = 0\ntrain_df[\"Sex\"][train_df[\"Sex\"] == \"female\"] = 1\ntrain_df[\"Embarked\"][train_df[\"Embarked\"] == \"S\" ] = 0\ntrain_df[\"Embarked\"][train_df[\"Embarked\"] == \"C\" ] = 1\ntrain_df[\"Embarked\"][train_df[\"Embarked\"] == \"Q\"] = 2\n \ntrain_df.head(10)","95d10e88":"test_df[\"Age\"] = test_df[\"Age\"].fillna(test_df[\"Age\"].median())\ntest_df[\"Sex\"][test_df[\"Sex\"] == \"male\"] = 0\ntest_df[\"Sex\"][test_df[\"Sex\"] == \"female\"] = 1\ntest_df[\"Embarked\"][test_df[\"Embarked\"] == \"S\"] = 0\ntest_df[\"Embarked\"][test_df[\"Embarked\"] == \"C\"] = 1\ntest_df[\"Embarked\"][test_df[\"Embarked\"] == \"Q\"] = 2\ntest_df.Fare[152] = test_df.Fare.median()\n \ntest_df.head(10)","4640f9f2":"from sklearn import tree\n\ntarget = train_df[\"Survived\"].values\nfeatures_one = train_df[[\"Pclass\", \"Sex\", \"Age\", \"Fare\"]].values\n \nmy_tree_one = tree.DecisionTreeClassifier()\nmy_tree_one = my_tree_one.fit(features_one, target)\n \ntest_features = test_df[[\"Pclass\", \"Sex\", \"Age\", \"Fare\"]].values\n \nmy_prediction = my_tree_one.predict(test_features)\n\nmy_prediction.shape","8cbe6db3":"print(my_prediction)","cf446682":"submission = pd.DataFrame({\n        \"PassengerId\": test_df[\"PassengerId\"],\n        \"Survived\": my_prediction\n    })\n\nsubmission.to_csv('submission.csv', index=False)","c70d5e0a":"\u30fb\u6b20\u640d\u5024\u3092\u88dc\u3046\u3000\n\nisnull()\u3067\u8981\u7d20\u3054\u3068\u306b\u6b20\u640d\u5024\u304b\u5224\u5b9a","ed4a3b07":"\u30fb\u300cAge\u300d\u3068\u300cCabin\u300d\u306e\u6b20\u640d\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u6b20\u640d\u30c7\u30fc\u30bf\u3092\u4ee3\u7406\u30c7\u30fc\u30bf\u306b\u5165\u308c\u66ff\u3048\u308b\u3002\u4eca\u56de\u306f\u300cCabin\u300d\u306f\u4f7f\u308f\u306a\u3044\u306e\u3067\u3001\u300cEmbarked\u300d\u3092\u4fee\u6b63\u3002\n\u203bfillna()\uff1a\u3000Pandas\u30e1\u30bd\u30c3\u30c9\u3001\u6b20\u640d\u3092\u5225\u306e\u30c7\u30fc\u30bf\u3067\u57cb\u3081\u308b\u3002","c909ecc4":"\u30fbpandas\u306edescribe()\u306b\u3066\u3001\u300ctrain\u300d\u300ctest\u300d\u306eCSV\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u7d71\u8a08\u91cf\u3092\u78ba\u8a8d\u3002","f2c94904":"\u30fbPassengerId \u2013 \u4e57\u5ba2\u8b58\u5225\u30e6\u30cb\u30fc\u30afID\n\n\u30fbSurvived \u2013 \u751f\u5b58\u30d5\u30e9\u30b0\uff080=\u6b7b\u4ea1\u30011=\u751f\u5b58\uff09\n\n\u30fbSex \u2013 \u6027\u5225\uff08male=\u7537\u6027\u3001female\uff1d\u5973\u6027\uff09\n\n\u30fbEmbarked \u2013 \u51fa\u6e2f\u5730\uff08\u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u3078\u4e57\u3063\u305f\u6e2f\uff09","f1c6dfd0":"\u4e88\u6e2c\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba\u3068\u4e2d\u8eab\u3092\u78ba\u8a8d\u3002\u76ee\u7684\u306e\u4e88\u6e2c\u5024\u306f\uff10\u3068\uff11\u3067\u8868\u3055\u308c\u305f\u751f\u304b\u6b7b\u3002","0a15da81":"\u30fb\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u306fPandas\u306eSettingWithCopyWarning\u3068\u3044\u3046\u3082\u306e\u3067\u3001https:\/\/linus-mk.hatenablog.com\/entry\/2019\/02\/02\/200000\n\n\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u306b\u539f\u56e0\u7a76\u660e\u306b\u5f79\u7acb\u3064\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u5f8c\u65e5\u3057\u3063\u304b\u308a\u3068\u7406\u89e3\u3057\u4fee\u6b63\u3059\u308b\u3002\ntest\u3082\u540c\u69d8\u306e\u51e6\u7406\u3092\u65bd\u3059\u3002","a4265e70":"\u30fb\u524d\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u3001\u4e88\u6e2c\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u3002\u300c\u6c7a\u5b9a\u6728\u300d\u3092\u4f7f\u7528\u3059\u308b\u3002","1fdcb4e9":"\u30fb\u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u30c7\u30fc\u30bf\u306e\u6587\u5b57\u5217\u3092\u6570\u5b57\u306b\u5909\u63db\u3002\u300cSEX\u300d\u3068\u300cEmbarked\u300d\u306e\uff12\u7a2e\u985e\u3002\n\n\u3000SEX\u306f\u300cmale\u300d\u300cfemale\u300d\u306e\u4e8c\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u6587\u5b57\u5217\u3001Embarked\u306f\u300cS\u300d\u300cC\u300d\u300cQ\u300d\u306e\u4e09\u3064\u306e\u6587\u5b57\u5217\u3068\u306a\u308b\u3002\n \nC = Cherbourg\nQ = Queenstown\nS = Southampton","fd8a0413":"\u300ctrain\u300d\u3001\u300ctest\u300d\u4e8c\u3064\u306e\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3002"}}