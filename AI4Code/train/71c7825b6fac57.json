{"cell_type":{"e06560a4":"code","a2b2a835":"code","dbae090a":"code","09f74738":"code","eb4a121b":"code","ee98f2a1":"code","02742ce3":"code","56affb66":"code","3b22257b":"code","0ab0f5b0":"code","079ba515":"code","d5f84330":"code","e07520af":"code","a39b0d71":"code","0ef83df2":"code","f818e893":"code","8ffdc477":"code","6b6cb026":"code","cce5eac9":"code","424e53ed":"code","e4cda9e3":"code","160eae23":"code","072582c8":"code","6d81e26e":"code","fdc200c4":"code","ffdc96ef":"code","c6eb1014":"code","3747d396":"code","dcfe3e1d":"code","cdcac928":"code","e117695d":"code","554e68af":"code","0fffdaf1":"code","ca5330d2":"code","e99b3191":"code","39f228b3":"code","3919f412":"code","7db71267":"code","0990420c":"code","449132ea":"code","494bae2a":"code","86785fa8":"code","2ee48c8c":"code","ed053b0c":"code","37c4d99e":"code","3a254620":"code","2553bd09":"code","9746049f":"code","7440aafd":"code","5a6b9976":"code","691e087a":"code","2c3707b4":"code","4b655ad9":"code","81394a7c":"code","ab25d34c":"code","36b52163":"code","5e002386":"code","8f812bc9":"code","c2095278":"code","228093b2":"code","8c7c7b6f":"code","19a48dd2":"code","8d899128":"code","a7d3be78":"code","a279f900":"code","cf9f0ecb":"code","727717cc":"code","ee473323":"code","49b27b01":"markdown","5413d70f":"markdown","05cd4063":"markdown","4376f1f4":"markdown","c0f5cc55":"markdown","c3180d0e":"markdown","59707739":"markdown","a6a8eef5":"markdown","d57e388f":"markdown","80ab7612":"markdown","26abe2d1":"markdown","ee01131a":"markdown","63a9d728":"markdown","f4be900d":"markdown","08fa0fa1":"markdown","5c0e33ff":"markdown","31449ecc":"markdown","5b6865a6":"markdown","6fe0924a":"markdown","842bd598":"markdown","c959c207":"markdown","24e338a8":"markdown","b29d5ed4":"markdown","371ce6d0":"markdown","46243c34":"markdown","17020403":"markdown","b27b1745":"markdown","1f04fd68":"markdown","233c021f":"markdown","1351e896":"markdown","7e75771f":"markdown","a666c6df":"markdown","cac1639c":"markdown","c36c9bfb":"markdown","ce9a0b9a":"markdown","7d50a925":"markdown","98dbf62f":"markdown","af547a88":"markdown","aadbc21b":"markdown","3735a22d":"markdown","9b07fedb":"markdown","dd2f9584":"markdown","618b8a4b":"markdown","ed18af77":"markdown","701353c8":"markdown","cff49705":"markdown","df018b93":"markdown","76a470ab":"markdown","e657f7d1":"markdown","96c18d23":"markdown","2881f419":"markdown","b67f0ee0":"markdown"},"source":{"e06560a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a2b2a835":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder","dbae090a":"data = pd.read_csv(\"\/kaggle\/input\/graduate-mis-student-data-yocketapp\/Yocket-dataset.csv\", na_values=['NA ', 'N.A. '], error_bad_lines = False)","09f74738":"data.head()","eb4a121b":"data.columns = data.columns.str.lower()","ee98f2a1":"data.drop(data.columns[data.columns.str.contains('unnamed',case = False)],axis = 1, inplace = True)\ndata.head()","02742ce3":"data.describe()","56affb66":"data[data.university=='University']","3b22257b":"data.drop(data[data.university=='University'].index, axis=0, inplace=True)\ndata = data.reset_index(drop=True)","0ab0f5b0":"data = data.drop(columns='name')","079ba515":"data['university'].unique()","d5f84330":"data[data.university.isin(['University of Washingto', 'Texas A&M; University, College Statio', 'Illinois Institute of Technolog'])]","e07520af":"data.loc[data.university.isin(['University of Washingto', 'Texas A&M; University, College Statio', 'Illinois Institute of Technolog']), ['university','course']] = [('Illinois Institute of Technology','Management Information System'), ('Texas A&M; University, College Station','Management Information System'), ('University of Washington','Management Information System')]","a39b0d71":"data['university'].unique()","0ef83df2":"data['course'].unique()","f818e893":"data = data.drop(columns='course')","8ffdc477":"data = data.drop(columns='year')","6b6cb026":"sns.heatmap(data.isna())","cce5eac9":"print(\"Percent of empty gre_scores = {} %\".format(len(data[data.gre_score.isna()][\"gre_score\"])\/len(data[\"gre_score\"])*100))\nprint(\"Percent of empty test_score = {} %\".format(len(data[data.test_score.isna()][\"test_score\"])\/len(data[\"test_score\"])*100))\nprint(\"Percent of empty work_ex = {} %\".format(len(data[data.work_ex.isna()][\"work_ex\"])\/len(data[\"work_ex\"])*100))","424e53ed":"data[data[\"gre_score\"].isna()][[\"gre_score\",\"test_score\"]].isnull().count()","e4cda9e3":"data = data.dropna()\ndata.head()","160eae23":"sns.heatmap(data.isna())","072582c8":"data.head()","6d81e26e":"data.dtypes","fdc200c4":"data[['gre_score', 'test_score']] = data[['gre_score', 'test_score']].apply(pd.to_numeric)","ffdc96ef":"data.work_ex = data.work_ex.str.strip(to_strip='months ').apply(pd.to_numeric)","c6eb1014":"for i in data.loc[:, \"undergrad_score\"].index:\n    if \"CGPA\" in data.loc[i, \"undergrad_score\"]:\n        data.loc[i, \"undergrad_score\"] = pd.to_numeric(data.loc[i, \"undergrad_score\"].strip(\"CGPA \"))*9.5\n    elif \"%\" in data.loc[i, \"undergrad_score\"]:        \n        data.loc[i, \"undergrad_score\"] = data.loc[i, \"undergrad_score\"].strip(\"%\")\ndata.undergrad_score = pd.to_numeric(data.undergrad_score)","3747d396":"data.loc[data[\"eng_test\"]==\"IELTS\", \"test_score\"] = data.loc[data[\"eng_test\"]==\"IELTS\", \"test_score\"].replace({9.0:120, 8.5:117, 8.0:114, 7.5:109, 7.0:101, 6.5:93, 6.0:78, 5.5:59, 5.0:45, 4.5:34, 4.0:31})\ndata = data.drop(columns=\"eng_test\")","dcfe3e1d":"data.head()","cdcac928":"data.dtypes","e117695d":"data.describe()","554e68af":"data[\"status\"].unique()","0fffdaf1":"data[\"status\"] = pd.to_numeric(data[\"status\"].replace({\"Reject\": \"0\", \"Admit\": \"1\", \"Applied\": \"2\", \"Interested\": \"3\"}))","ca5330d2":"data.loc[data['work_ex']<0, 'work_ex'] = 0","e99b3191":"data.loc[data['work_ex']<0, 'work_ex']","39f228b3":"binInterval = [0, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132, 144]\nbinLabels   = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\ndata['work_ex_yrs'] = pd.to_numeric(pd.cut(data['work_ex'], bins = binInterval, labels=binLabels, include_lowest = True))","3919f412":"data = data.drop(columns='work_ex').reset_index(drop=True)\ndata.head()","7db71267":"data.groupby('university')[\"status\"].unique()","0990420c":"data = data[data['university']!='University of Iowa']","449132ea":"data = data[data['university']!='University of California, Los Angeles']","494bae2a":"data = data.reset_index(drop=True)","86785fa8":"############################################################################################################################","2ee48c8c":"sns.distplot(data[data['status']==0]['test_score'], color = 'r')\nsns.distplot(data[data['status']==1]['test_score'], color = 'g')\nplt.legend(['Reject','Admit'])\nplt.xlabel('Test Score')\nplt.title('English Proficiency Test Score Distribution')","ed053b0c":"display('Test Scores with a value of zero: ',data[data['test_score']==0].shape[0])\nsns.set_style('whitegrid')\nsns.lmplot(x='gre_score', y='test_score', data=data).set(xlabel=\"GRE Score\", ylabel = \"Test Score\", title = \"GRE Score vs Test Score\")","37c4d99e":"data = data.drop(index = data[data['test_score']==0].index).reset_index(drop=True)","3a254620":"sns.distplot(data[data['status']==0]['test_score'], color = 'r')\nsns.distplot(data[data['status']==1]['test_score'], color = 'g')\nplt.legend(['Reject','Admit'])\nplt.xlabel('Test Score')\nplt.title('English Proficiency Test Score Distribution')","2553bd09":"sns.distplot(data[data['status']==0]['gre_score'], color = 'r')\nsns.distplot(data[data['status']==1]['gre_score'], color = 'g')\nplt.legend(['Reject','Admit'])\nplt.xlabel('GRE Score')\nplt.title('GRE Score Distribution')","9746049f":"sns.distplot(data[data['status']==0]['work_ex_yrs'], color = 'r')\nsns.distplot(data[data['status']==1]['work_ex_yrs'], color = 'g')\nplt.legend(['Reject','Admit'])\nplt.xlabel('Work Experience (in Years)')\nplt.title('Work Experience (in Years) Distribution')","7440aafd":"sns.distplot(data[data['status']==0]['undergrad_score'], color = 'r')\nsns.distplot(data[data['status']==1]['undergrad_score'], color = 'g')\nplt.legend(['Reject','Admit'])\nplt.xlabel('Undergrad Score')\nplt.title('Undergrad Scores Distribution')","5a6b9976":"univ = data[data['status']==1].groupby('university').mean()['gre_score'].sort_values(ascending=False).reset_index()\nuniv","691e087a":"bins = 6\nbinLength = (univ.describe().loc['max'][0] - univ.describe().loc['min'][0]) \/ bins\nbinLength","2c3707b4":"list(range(int(univ.describe().loc['min'][0]), int(univ.describe().loc['max'][0]), int(binLength)))","4b655ad9":"binInterval = list(range(int(univ.describe().loc['min'][0]), int(univ.describe().loc['max'][0]), int(binLength)))\nbinLabels   = list(range(1,len(binInterval)))\nuniv['rating'] = pd.cut(univ['gre_score'], bins = binInterval, labels=binLabels, right=True)","81394a7c":"univ=univ[['university','rating']]","ab25d34c":"univ.loc[:,'rating']= pd.to_numeric(univ.loc[:,'rating']).fillna(len(binLabels)+1)","36b52163":"temp=[]\nfor i in data['university'].index:\n    for j in univ['university'].index:\n        if data.iloc[i,0]==univ.iloc[j,0]:\n            temp.append(univ.iloc[j,1])","5e002386":"data['rating'] = pd.Series(temp)","8f812bc9":"test = data[data[\"status\"].isin([2,3])]\nuniv_backup = test['university']\ntest = test.drop(columns=[\"status\",\"university\"])\ntest","c2095278":"train = data[data[\"status\"].isin([0,1])].drop(columns=[\"university\"])\ntrain","228093b2":"y = train[\"status\"]","8c7c7b6f":"X = train.drop(columns='status')","19a48dd2":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, shuffle=False)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","8d899128":"#Logistic Regression:\nLR = LogisticRegression(random_state = 0, solver = 'lbfgs', multi_class='ovr', max_iter = 10000).fit(X_train, y_train)\ny_pred = LR.predict(X_test)","a7d3be78":"accuracy = accuracy_score(y_test, y_pred)*100\ndisplay(\"Accuracy of Logistic Regression = {:.2f}%\".format(accuracy))\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test,y_pred))","a279f900":"sns.distplot(y_test,label = 'Actual')\nsns.distplot(y_pred, label ='Predicted')\nplt.legend(loc=\"upper left\")\nplt.xlabel('Prediction level')","cf9f0ecb":"display('Accuracy with the training model: ', accuracy)\ndisplay('Accuracy on setting status to Admit: ',train['status'].value_counts(normalize=True)[1]*100)","727717cc":"importance = LR.coef_[0]\nfeature_importance = pd.DataFrame(sorted(zip(importance, X.columns)), columns=['Value','Feature'])\nsns.barplot(x=\"Feature\", y=\"Value\", data=feature_importance.sort_values(by=\"Value\", ascending=False))\nplt.xticks(rotation=90)","ee473323":"test[\"status\"] = LR.predict(test)\ntest['status'] = test['status'].replace({0:'Reject', 1:'Admit'})\ntest['university'] = univ_backup\ntest = test[['university', 'gre_score', 'test_score', 'undergrad_score', 'work_ex_yrs', 'status']]\ntest.to_csv(\"output.csv\")\ntest","49b27b01":"I will be deleting these rows as they serve no real purpose to my analysis:","5413d70f":"<h5>3. Course:<\/h5>\nNow, I'll start by going through unique values in the \"Course\" column:","05cd4063":"In order to predict the result of the application of a candidate as \"Admit\" or \"Reject\" (1 or 0), Logistic Regression Algorithm is being implemented as follows:","4376f1f4":"As we saw previously, there are a few scores with a value of zero. Without this test score, we will not be able to correctly predict the decision\/status of an application. There are two ways to go forward:\n1. Find out if \"Test Score\" has correlation with any of the fields and predict it using Linear Regression.\n2. Delete the rows with \"Test Score\" values of zero.","c0f5cc55":"On further inspection, I found that the column names repeated in the form of a new row in the dataframe:","c3180d0e":"I start by importing relevant libraries to my notebook:","59707739":"Now that the Rating column has been established, I'll start by diving the data into testing and training data.","a6a8eef5":"Let's review the feature importance graph to understand how each feature contributed to the model:","d57e388f":"Takeaways:\n1. \"GRE Score\", \"Test Score\", \"Undergrad Score\", and \"Work Ex\" will have to be converted to a numerical data type.\n2. The \"Undergrad Score\" and \"Work Ex\" columns have strings \"CGPA\", \"%\", and \"months\" which can be removed from the dataframe for ease of calculations.","80ab7612":"The testing data contains applications with status as \"Applied\" or \"Interested\" to predict the status of their application:","26abe2d1":"Finally, let's review the data types and describe the dataframe columns:","ee01131a":"For Undergrad Scores below 75, the Admit to Reject ratio is low. As the scores increase above 75, this ratio increases, which means that higher number of candidates with scores above 75 got an Admit.","63a9d728":"The accuracy of this Logistic Regression algorithm is 68.92%. This means that if a candidate is predicted to get an Admit, he\/she will have a 68.92% chance of receiving an admit and a 31.08% chance of receiving a Reject.\n\nTo understand the accuracy better, I have generated the plot for distribution of Actual and Predicted values:","f4be900d":"First impressions of the data show that it will require changes to the column names (I'll be making it lowercase for ease of access) and removal of the redundant index column.","08fa0fa1":"It seems that some names are missing a letter at the end:","5c0e33ff":"On visualizing the plot again, it can be observed that the redundant fields are not present and the graph looks cleaner.","31449ecc":"Takeaways:\n1. For our calculations & analysis, the categorical column \"Status\" can be given numerical values.\n2. In the \"Work Ex\" column, the lowest value is -1 which is not possible. For those rows, let's provide a value of 0.\n3. \"Work Ex\" in months can be converted to \"Work Ex\" in years.\n4. \"Test Score\" cannot be 0. Probably, the person did not take the English Proficiency Test and updated their score as 0 in their respective profiles. If there is a correlation between any value in the dataframe with \"Test Score\", we can predict it using Linear Regression Technique. I will review this once I start Exploratory Data Analysis.","5b6865a6":"For our calculations, GRE Score and TOEFL Score are very important, and their absence causes those rows to be irrelevant. Hence, I'll be removing these rows from the dataframe:","6fe0924a":"Let's use the trained model to predict the result of applications which were marked \"Applied\" or \"Interested\":","842bd598":"<h3>Conclusion:<\/h3>\n\nWe performed intensive Data Cleaning to improve our understanding of the data. On the clean data, Exploratory Data Analysis was performed to see how the variables affect the status of an application. We further improved the features so that they could be used to train our Logistic Regression algorithm. Finally, we trained our model, reviewed the accuracy and importance of the features, and predicted the status of applications which were marked \"Interested\" or \"Applied\".","c959c207":"Now, I will import the data obtained from kaggle into a dataframe:","24e338a8":"For GRE Scores less than 310, the Admit to Reject Ratio is low. This ratio increases as GRE Score increases (above 310).","b29d5ed4":"<h5>2. University:<\/h5>\nI'll start by going through each value in the \"University\" column:","371ce6d0":"Thanks for reading! This is my first analytics project so it would be helpful if you guys review it and let me know how I can improve.","46243c34":"<h5>4. Undergrad Score Distribution:<\/h5>","17020403":"<h3>Exploratory Data Analysis<\/h3>\n\nIn order to understand the relationship between the multiple columns or as I should start calling them: variables, I will be performing Exploratory Data Analysis:","b27b1745":"<h5>4. Year:<\/h5>\nJust like \"Course\" column, the \"Year\" column doesn't serve the purpose of predicting the status of one's application as most universities usually have a standard which doesn't change based on the year of application. Hence, I'll be removing that column from the dataframe:","1f04fd68":"Note: Although insights are drawn from the distributions, they may vary from one university to another based on the universities' selection criteria.","233c021f":"I will now be updating those names with the actual University names:","1351e896":"<h5>3. Work Experience (in Years) Distribution:<\/h5>","7e75771f":"Splitting X and y variables into testing and training data:","a666c6df":"Now let's take a closer look at the data:","cac1639c":"For Test Scores lower than 100, the Admit to Reject ratio is low. Above scores of 100, the ratio increases, i.e., chances of getting an Admit increase.","c36c9bfb":"Once the algorithm has been trained and the values predicted, I'll check for the accuracy of the algorithm by generating an accuracy score, confusion matrix and classification report as follows:","ce9a0b9a":"Similarly, in order to normalize the IELTS and TOEFL scores in the \"Test Score\" column of the dataframe, I will refer to the official score comparision table present [here](https:\/\/www.ets.org\/s\/toefl\/pdf\/linking_toefl_ibt_scores_to_ielts_scores.pdf)","7d50a925":"Takeaways:\n\n1. University of Iowa data is not useful as it does not provide insights into the previous Admits or Rejects. Hence, I'll be removing that.\n2. University of California, Los Angeles data only shows the rejections and not acceptances. This could mean that nobody who applied got accepted, or this data is not reliable as not many people apply to this university for MS-MIS course. Hence, I'll be removing that too.","98dbf62f":"There is a correlation between \"GRE Score\" and \"Test Score\". So, through Linear Regression, I calculated the required values of the Test Scores. However, the predicted values had a very high Mean Squared Error. Therefore, I decided that it would be better to drop the rows with Test Scores of value zero.","af547a88":"Before stripping the \"CGPA\" and \"%\" from \"Undergrad Score\" column, I will convert the CGPA to Percentage by multiplying CGPA with 9.5 in order to normalize the column.","aadbc21b":"<h3>Prediction of Status of the Application<\/h3>\n\nI'll begin by categorizing the universities based on the average GRE Scores at which they accept an application. This categorical column will be called 'Rating' of a university and will be used in the calculations instead of the university name:","3735a22d":"<h3>Data Types<\/h3>","9b07fedb":"As the work experience of the candidate increases, the Admit to Reject ratio also increases, i.e., chances of getting an Admit also increases.","dd2f9584":"Now, we can't perform our analysis on universities which don't have any information to provide, i.e., those universities whose application status is only in \"Interested\" or \"Applied\". So, I'll be finding those and removing them from the list:","618b8a4b":"If I had predicted all applications to receive an \"Admit\", the accuracy would've been 53.36%. With our trained algorithm, this accuracy increased to 68.92%. (This is not a very huge difference considering the efforts taken to reach this point.)","ed18af77":"<h1>MS-MIS Grad School Admit Predictor:<\/h1>\n\nMaster of Science in Management Information Systems is a growing and competitive field in the tech industry. Every year, thousands of Indian students apply to various colleges for this competitive course. Utilizing the MS-MIS data which I got from Kaggle, I applied Data Cleaning, Exploratory Data Analysis, and Logistic Regression algorithm to predict the status of the students who were \"Interested\" in applying or had \"Applied\" to a certain university.","701353c8":"<h3>Column-wise Data Cleaning<\/h3>\n<h5>1. Name:<\/h5>\nUsername of the candidate plays no actual role in my analysis. hence, I'll be removing the column:","cff49705":"<h5>1. English Proficiency Test Score Distribution:<\/h5>","df018b93":"<h5>2. GRE Score Distribution:<\/h5>","76a470ab":"Now, I'm going to view the first few rows of my dataframe to get an initial idea about it:","e657f7d1":"Well, each college has a different name for similar course. And since the data has been extracted entirely for the MIS course, I believe that the \"Course\" column doesn't really serve the purpose. So, I'll be removing it from the dataframe:","96c18d23":"<h3>Null Value Check<\/h3>\nLet's check for Null Values across the dataframe:","2881f419":"The training data contains applications with status as \"Admit\" or \"Reject\":","b67f0ee0":"Observation:\n\nThe Likelihood of receiving an admit depends a lot of the rating of the University. As the rating of a University increases, the chance of receiving an Admit reduces.\n\nTakeaway:\n\nThis means that the University and GRE Scores (as ratings were derived based on these scores) play a very important role in deciding the result of an application."}}