{"cell_type":{"54f7287f":"code","22a7310a":"code","9b036ad1":"code","4d92883c":"code","f3436ed8":"code","afb4b1c6":"code","bbad13d8":"code","6fecab0a":"code","160f3c3b":"code","cb0b985c":"code","56da59ea":"code","51fe5cee":"code","2d798cd9":"code","8f28476d":"code","22eeb2ff":"code","698126f7":"markdown","6f8c1a4f":"markdown","efea7c82":"markdown","123b78dd":"markdown","041d1492":"markdown","a7432fd2":"markdown"},"source":{"54f7287f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import linear_model","22a7310a":"#Download the vehicle model dataset\n# https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/ML0101ENv3\/labs\/FuelConsumptionCo2.csv\n\n\ndata=pd.read_csv('..\/input\/fuelconsumption\/FuelConsumption_file.csv')\ndata.head()","9b036ad1":"# Let\u2019s select some features to explore more :\ndata = data[['ENGINESIZE','CO2EMISSIONS']]\n\n\n# ENGINESIZE vs CO2EMISSIONS:\nplt.scatter(data['ENGINESIZE'],data['CO2EMISSIONS'])\nplt.xlabel('Engine')\nplt.ylabel('CO2')\nplt.show()","4d92883c":"print(len(data))\nint((len(data)*0.8))\n","f3436ed8":"# Generating training and testing data from our data:\n# We are using 80% data for training.\ntrain = data[:(int((len(data)*0.8)))]\ntest = data[(int((len(data)*0.8))):]\n\n\n# Modeling:\n# Using sklearn package to model data :\nregr = linear_model.LinearRegression()\ntrain_x = np.array(train[['ENGINESIZE']])\ntrain_y = np.array(train[['CO2EMISSIONS']])\nregr.fit(train_x,train_y)\n\n\n# The coefficients:\nprint ('coefficients : ',regr.coef_) #Slope\nprint ('Intercept : ',regr.intercept_) #Intercept","afb4b1c6":"# Plotting the regression line:\nplt.scatter(train['ENGINESIZE'], train['CO2EMISSIONS'])\nplt.plot(train_x, regr.coef_*train_x + regr.intercept_, '-r')\nplt.plot(train_x, regr.coef_*train_x + regr.intercept_, '-r')\nplt.xlabel('Engine size')\nplt.ylabel('Emission')\nplt.show()","bbad13d8":"test_x = np.array(test[['ENGINESIZE']])\ntest_y = np.array(test[['CO2EMISSIONS']])\n\n\n# Plotting the regression line:\nplt.scatter(test['ENGINESIZE'], test['CO2EMISSIONS'])\nplt.plot(test_x, regr.coef_*test_x + regr.intercept_, '-r')\nplt.plot(test_x, regr.coef_*test_x + regr.intercept_, '-r')\nplt.xlabel('Engine size')\nplt.ylabel('Emission')\nplt.show()\n\n","6fecab0a":"#Predicting \n\n# Predicting values:\n# Function for predicting future values :\ndef get_regression_predictions(input_features,intercept,slope):\n predicted_values = input_features*slope + intercept\n return predicted_values\n# Predicting emission for future car:\n\n\n\nmy_engine_size = 3.5\nestimatd_emission = get_regression_predictions(my_engine_size,regr.intercept_[0],regr.coef_[0][0])\nprint ('Estimated Emission :',estimatd_emission)","160f3c3b":"# Checking various accuracy:\nfrom sklearn.metrics import r2_score\ntest_y = regr.predict(test_x)\n\nprint('Mean absolute error: %.2f' % np.mean(np.absolute(test_y,test_y)))\nprint('Mean sum of squares (MSE): %.2f' % np.mean((test_y-test_y) ** 2))\nprint('R2-score: %.2f' % r2_score(test_y , test_y) )","cb0b985c":"#Download the vehicle model dataset\n# https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/ML0101ENv3\/labs\/FuelConsumptionCo2.csv\n\n\ndata=pd.read_csv('https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/ML0101ENv3\/labs\/FuelConsumptionCo2.csv')\ndata.head()","56da59ea":"train=data[:int(len(data)*0.8)]\nprint(train.head())\n\ntest=data[int(len(data)*0.8):]\nprint(test.head())","51fe5cee":"X_train=train[['MODELYEAR','ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY','FUELCONSUMPTION_COMB','FUELCONSUMPTION_COMB_MPG']]\n\n\ny_train=train[['CO2EMISSIONS']]\n\nX_test=test[['MODELYEAR','ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY','FUELCONSUMPTION_COMB','FUELCONSUMPTION_COMB_MPG']]\n\n\ny_test=test[['CO2EMISSIONS']]","2d798cd9":"\n# Modeling:\n# Using sklearn package to model data :\nregr = linear_model.LinearRegression()\ntrain_x = np.array(X_train)\ntrain_y = np.array(y_train)\nregr.fit(train_x,train_y)","8f28476d":"test_x = np.array(X_test)\ntest_y = np.array(y_test)\n\npredict=regr.predict(test_x)","22eeb2ff":"# Check accuracy:\nfrom sklearn.metrics import r2_score\nR = r2_score(test_y , predict)\nprint ('R\u00b2 :',R)","698126f7":"# simple linear regression","6f8c1a4f":"# Multivariable linear regression\n\n\nIn simple linear regression, we were only able to consider one input feature for predicting the value of the output feature. However, in Multivariable Linear Regression, we can predict the output based on more than one input feature. Here is the formula for multivariable linear regression.\n\ny=B0 + B1*X1 + B2*X2 ...... + Bn*Xn\nB0 = Constant or y intercept of line\nB1,B2,Bn = Cooefficent of input feature\nX1,X2,Xn = Input feature on which output is based\nY  = Output","efea7c82":"# Linear Regression\n","123b78dd":"Simple Linear Regression:\n\n\nIn simple linear regression, we predict the output\/dependent variable based on only one input feature. The simple linear regression is given by:\nLinear regression equation.\n\n\n\n\ny=b0 + b1 * X1\n\nb0 = Constant or y intercept of line\nb1 = Cooefficent of input feature\nX1 = Input feature on which output is based\nY  = Output","041d1492":"\n\nSome real-life examples of linear regression :\n\n(1) To predict sales of products.\n(2) To predict economic growth.\n(3) To predict petroleum prices.\n(4) To predict the emission of a new car.\n(5) Impact of GPA on college admissions.\n\n\nThere are two types of linear regression :\nSimple Linear Regression\nMultivariable Linear Regression\n\n","a7432fd2":"**The accuracy of the model increases when we trained our model with many independent features. The more your data passed it will give better accuracy.\n\n**"}}