{"cell_type":{"b36153da":"code","5d6b1d8c":"code","ccd36cd5":"code","1e18eb43":"code","3d297c3f":"code","105fa861":"code","b94e5e74":"code","7d484b6f":"code","3cec8bd0":"code","67186b98":"code","4ac3251f":"code","3cc1255c":"code","98ea13e6":"code","8f100590":"code","db972299":"code","1691f3f3":"code","aa846b94":"code","51000e03":"code","919eb57b":"code","c575b229":"code","04145bcc":"code","e4d7661d":"code","4c26af01":"code","f74fb14c":"code","7612170d":"code","8c8ca3f7":"code","36bc5c5e":"code","39d5531d":"code","8e210cfd":"code","aae1c9b8":"code","8afa538f":"code","bd148b8f":"code","c6328fd2":"code","763d793f":"code","34a238d0":"code","c459cad1":"code","c742d7b8":"code","75dfb062":"code","01f65c6f":"code","0ece3364":"code","a660d4ae":"code","e40f3c87":"code","7346f24e":"code","3818b9e7":"markdown","0a93e043":"markdown","23560e40":"markdown","9e55693f":"markdown","ce4b2899":"markdown","2c0bad1d":"markdown","52130390":"markdown","cf7aabff":"markdown","f6723857":"markdown","ff7a4499":"markdown","35564141":"markdown","11323dd1":"markdown","97f8cbfc":"markdown"},"source":{"b36153da":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","5d6b1d8c":"df_house_train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_house_train","ccd36cd5":"df_house_test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ndf_house_test","1e18eb43":"df_house_train.info()","3d297c3f":"replace_map = {'MSZoning': {'A': 1, 'I': 1, 'RH': 4, 'RL': 7,\n                                  'C': 2, 'RP': 3, 'RM': 5 , 'FV': 6}}\nlabels = df_house_train['MSZoning'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'MSZoning' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\n\ndf_copy = df_house_train.copy()\ndf_copy.replace(replace_map_comp, inplace=True)\ndf_lc = df_copy.copy()\ndf_lc['MSZoning'] = df_lc['MSZoning'].astype('category')","105fa861":"replace_map = {'Street': {'Grvl': 0, 'Pave': 1}}\nlabels = df_copy['Street'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Street' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc1= df_copy.copy()\ndf_lc1.replace(replace_map_comp, inplace=True)\ndf_lc1 = df_lc1.copy()\ndf_lc1['Street'] = df_lc1['Street'].astype('category')","b94e5e74":"replace_map = {'Alley': {'Grvl': 0, 'Pave': 1, 'NA':3}}\nlabels = df_lc1['Alley'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Alley' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc2= df_lc1.copy()\ndf_lc2.replace(replace_map_comp, inplace=True)\ndf_lc2 = df_lc1.copy()\ndf_lc2['Alley'] = df_lc2['Alley'].astype('category')","7d484b6f":"replace_map = {'LotShape': {'Reg': 4, 'IR1': 3, 'IR2':2,'IR3':1}}\nlabels = df_lc2['LotShape'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'LotShape' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc3= df_lc2.copy()\ndf_lc3.replace(replace_map_comp, inplace=True)\ndf_lc3['LotShape'] = df_lc3['LotShape'].astype('category')","3cec8bd0":"replace_map = {'Utilities': {'AllPub': 4, 'NoSewr': 3, 'NoSeWa':2,'ELO':1}}\nlabels = df_lc3['Utilities'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Utilities' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc4= df_lc3.copy()\ndf_lc4.replace(replace_map_comp, inplace=True)\ndf_lc4['Utilities'] = df_lc4['Utilities'].astype('category')","67186b98":"replace_map = {'LotConfig': {'Inside': 5, 'Corner': 4, 'CulDSac':3,'FR2':2,'FR3':1}}\nlabels = df_lc3['LotConfig'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'LotConfig' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc5= df_lc4.copy()\ndf_lc5.replace(replace_map_comp, inplace=True)\ndf_lc5['LotConfig'] = df_lc5['LotConfig'].astype('category')","4ac3251f":"replace_map = {'LandSlope': {'Gtl':3,'Mod':2,'Sev':1}}\nlabels = df_lc5['LandSlope'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'LandSlope' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc6= df_lc5.copy()\ndf_lc6.replace(replace_map_comp, inplace=True)\ndf_lc6['LandSlope'] = df_lc6['LandSlope'].astype('category')","3cc1255c":"replace_map = {'RoofMatl': {'Tar&Grv':3,'WdShngl':2,'WdShngl':1, 'Roll':4,'Metal':5,'Membran':6,'CompShg':7,'ClyTile':8}}\nlabels = df_lc6['RoofMatl'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'RoofMatl' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc7= df_lc6.copy()\ndf_lc7.replace(replace_map_comp, inplace=True)\ndf_lc7['RoofMatl'] = df_lc7['RoofMatl'].astype('category')","98ea13e6":"replace_map = {'ExterQual': {'Ex': 5, 'Gd': 4, 'TA':3,'Fa':2,'Po':1}}\nlabels = df_lc7['ExterQual'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'ExterQual' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc8= df_lc7.copy()\ndf_lc8.replace(replace_map_comp, inplace=True)\ndf_lc8['ExterQual'] = df_lc8['ExterQual'].astype('category')","8f100590":"replace_map = {'Foundation': {'BrkTil':6,'CBlock': 5, 'PConc': 4, 'Slab':3,'Stone':2,'Wood':1}}\nlabels = df_lc7['Foundation'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Foundation' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc9= df_lc8.copy()\ndf_lc9.replace(replace_map_comp, inplace=True)\ndf_lc9['Foundation'] = df_lc9['Foundation'].astype('category')","db972299":"replace_map = {'BsmtQual': {'Ex':6,'Gd': 5, 'TA': 4, 'Fa':3,'Po':2,'NA':1}}\nlabels = df_lc9['BsmtQual'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'BsmtQual' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc10= df_lc9.copy()\ndf_lc10.replace(replace_map_comp, inplace=True)\ndf_lc10['BsmtQual'] = df_lc10['BsmtQual'].astype('category')","1691f3f3":"replace_map = {'BsmtCond': {'Ex':6,'Gd': 5, 'TA': 4, 'Fa':3,'Po':2,'NA':1}}\nlabels = df_lc10['BsmtCond'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'BsmtCond' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc11= df_lc10.copy()\ndf_lc11.replace(replace_map_comp, inplace=True)\ndf_lc11['BsmtCond'] = df_lc11['BsmtCond'].astype('category')","aa846b94":"replace_map = {'BsmtExposure': {'Ex':6,'Gd': 5, 'TA': 4, 'Fa':3,'Po':2,'NA':1}}\nlabels = df_lc11['BsmtExposure'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'BsmtExposure' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc12= df_lc11.copy()\ndf_lc12.replace(replace_map_comp, inplace=True)\ndf_lc12['BsmtExposure'] = df_lc12['BsmtExposure'].astype('category')","51000e03":"replace_map = {'Heating':{'Floor':6,'GasA': 5, 'GasW': 4, 'Grav':3,'OthW':2,'Wall':1} }\nlabels = df_lc12['Heating'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Heating' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc13= df_lc12.copy()\ndf_lc13.replace(replace_map_comp, inplace=True)\ndf_lc13['Heating'] = df_lc13['Heating'].astype('category')","919eb57b":"replace_map = {'HeatingQC': {'Ex': 5, 'Gd': 4, 'TA':3,'Fa':2,'Po':1}}\nlabels = df_lc13['HeatingQC'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'HeatingQC' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc14= df_lc13.copy()\ndf_lc14.replace(replace_map_comp, inplace=True)\ndf_lc14['HeatingQC'] = df_lc14['HeatingQC'].astype('category')","c575b229":"replace_map = {'CentralAir': {'N': 1, 'Y': 2}}\nlabels = df_lc14['CentralAir'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'CentralAir' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc15= df_lc14.copy()\ndf_lc15.replace(replace_map_comp, inplace=True)\ndf_lc15['CentralAir'] = df_lc15['CentralAir'].astype('category')","04145bcc":"replace_map = {'Electrical': {'SBrkr': 5, 'FuseA': 4, 'FuseF':3,'FuseP':2,'Mix':1}}\nlabels = df_lc15['Electrical'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Electrical' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc16= df_lc15.copy()\ndf_lc16.replace(replace_map_comp, inplace=True)\ndf_lc16['Electrical'] = df_lc16['Electrical'].astype('category')","e4d7661d":"replace_map = {'KitchenQual': {'Ex':5,'Gd': 4, 'TA': 3, 'Fa':2,'Po':1}}\nlabels = df_lc16['KitchenQual'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'KitchenQual' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc17= df_lc16.copy()\ndf_lc17.replace(replace_map_comp, inplace=True)\ndf_lc17['KitchenQual'] = df_lc17['KitchenQual'].astype('category')","4c26af01":"replace_map = {'Functional':{'Typ':8,'Min1':7,'Min2':6,'Mod': 5, 'Maj1': 4, 'Maj2':3,'Sev':2,'Sal':1} }\nlabels = df_lc17['Functional'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Functional' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc18= df_lc17.copy()\ndf_lc18.replace(replace_map_comp, inplace=True)\ndf_lc18['Functional'] = df_lc18['Functional'].astype('category')","f74fb14c":"replace_map = {'GarageType':{'2Types':7,'Attchd':6,'Basment': 5, 'BuiltIn': 4, 'CarPort':3,'Detchd':2,'NA':1} }\nlabels = df_lc18['GarageType'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'GarageType' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc19= df_lc18.copy()\ndf_lc19.replace(replace_map_comp, inplace=True)\ndf_lc19['GarageType'] = df_lc19['GarageType'].astype('category')","7612170d":"replace_map = {'GarageQual': {'Ex':6,'Gd': 5, 'TA': 4, 'Fa':3,'Po':2,'NA':1}}\nlabels = df_lc19['GarageQual'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'GarageQual' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc20= df_lc19.copy()\ndf_lc20.replace(replace_map_comp, inplace=True)\ndf_lc20['GarageQual'] = df_lc20['GarageQual'].astype('category')","8c8ca3f7":"replace_map = {'PoolQC': {'Ex':5,'Gd': 4, 'TA': 3, 'Fa':2,'NA':1}}\nlabels = df_lc20['PoolQC'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'PoolQC' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc21= df_lc20.copy()\ndf_lc21.replace(replace_map_comp, inplace=True)\ndf_lc21['PoolQC'] = df_lc21['PoolQC'].astype('category')","36bc5c5e":"replace_map = {'Fence': {'GdPrv':5,'MnPrv': 4, 'GdWo': 3, 'MnWw':2,'NA':1}}\nlabels = df_lc21['Fence'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Fence' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndf_lc22= df_lc21.copy()\ndf_lc22.replace(replace_map_comp, inplace=True)\ndf_lc22['Fence'] = df_lc22['Fence'].astype('category')","39d5531d":"print(df_lc22.dtypes)","8e210cfd":"df_lc22.to_csv('train_values.csv')\ndf= pd.read_csv('train_values.csv')\ndf","aae1c9b8":"plt.figure(figsize=(20,10))\nsns.heatmap( df.isnull() , yticklabels=False ,cbar=False )\n","8afa538f":"df=df.fillna(value=df['LotFrontage'].mean())\ndf.to_csv('train_values_cleaned.csv')","bd148b8f":"\ndf['Alley']=df['Alley'].fillna(value=0)\ndf.to_csv('train_values_cleaned.csv')","c6328fd2":"df['BsmtQual']=df['BsmtQual'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')","763d793f":"df['BsmtCond']=df['BsmtCond'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')","34a238d0":"df['BsmtExposure']=df['BsmtExposure'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')","c459cad1":"df['Electrical']=df['Electrical'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')      ","c742d7b8":"df['GarageType']=df['GarageType'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')","75dfb062":"df['GarageQual']=df['GarageQual'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')","01f65c6f":"df['PoolQC']=df['PoolQC'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')","0ece3364":"df['Fence']=df['Fence'].fillna(value=0)\n\ndf.to_csv('train_values_cleaned.csv')","a660d4ae":"df_cleaned= pd.read_csv('train_values_cleaned.csv')\ndf_cleaned","e40f3c87":"df_cleaned=df_cleaned.drop(['Unnamed: 0','Unnamed: 0.1'],axis=1)\n","7346f24e":"plt.figure(figsize=(20,10))\nsns.heatmap( df_cleaned.isnull() , yticklabels=False ,cbar=False )\n","3818b9e7":"## Encoding Categorical Data by Replace Values: \n## - Replace Values\n## It is just replacing the categories with the desired numbers. This can be achieved with the help of the replace() function in pandas. The idea is that you have the liberty to choose whatever numbers you want to assign to the categories according to the business use case.","0a93e043":"## 2- Select the columns that regression model will train with \"we will clean it frist by giving it a numeric degree\"\n","23560e40":"# It's the same steps but on 25 cols, so don't get bored!","9e55693f":"## 5- Fill the nan values with mean or 0, if it object data type replace with 0","ce4b2899":"## Save df_lc22 to train_values\n","2c0bad1d":"## 4- Create heate map to indecate the nan values in all dataset","52130390":"## 3- Check the types :\n","cf7aabff":"## 3- Replacing the strings data with the defree no we decided:\n## ..........................................................................................\n### By indexing the labels with numiric values and map it.. then change to categorical data for the model to consider in its calculation that it is a categorical data \n### This will be useful when the categories count is high and you don't want to type out each mapping. You will store the category names in a list called labels and then zip it to a seqeunce of numbers and iterate over it.","f6723857":"# DONE!","ff7a4499":"#### - MSZoning: Identifies the general zoning classification of the sale.\n\t\t\n       A\tAgriculture - 1 \n       C\tCommercial - 2\n       FV\tFloating Village Residential - 6\n       I\tIndustrial  - 1\n       RH\tResidential High Density - 4\n       RL\tResidential Low Density - 7\n       RP\tResidential Low Density Park - 3\n       RM\tResidential Medium Density - 5\n\n\n#### - Street: Type of road access to property 1,2\n\n       Grvl\tGravel- 1\n       Pave\tPaved - 2\n#### - Alley: Type of alley access to property 3,2,1\n\n       Grvl\tGravel - 1\n       Pave\tPaved -  2\n       NA \tNo alley access - 3\n\t\t\n#### - LotShape: General shape of property\n\n       Reg\tRegular\t- 4\n       IR1\tSlightly irregular - 3\n       IR2\tModerately Irregular- 2\n       IR3\tIrregular- 1\n#### - Utilities: Type of utilities available\n\t\t\n       AllPub\tAll public Utilities (E,G,W,& S) - 4\t\n       NoSewr\tElectricity, Gas, and Water (Septic Tank) - 3\n       NoSeWa\tElectricity and Gas Only - 2\n       ELO\tElectricity only - 1\n#### - LotConfig: Lot configuration\n\n       Inside\tInside lot  - 5\n       Corner\tCorner lot - 4\n       CulDSac\tCul-de-sac - 3\n       FR2\tFrontage on 2 sides of property  - 2\n       FR3\tFrontage on 3 sides of property - 1\n    \n####  - LandContour: Flatness of the property\n\n       Lvl\tNear Flat\/Level -\t4\n       Bnk\tBanked - Quick and significant rise from street grade to building - 3\n       HLS\tHillside - Significant slope from side to side - 2\n       Low\tDepression - 1\n\t\n#### - LandSlope: Slope of property\n\t\t\n       Gtl\tGentle slope -  3\n       Mod\tModerate Slope\t - 2\n       Sev\tSevere Slope,  - 1\n\n\t\n#### - OverallQual: Rates the overall material and finish of the house\n\n       10\tVery Excellent \n       9\tExcellent\n       8\tVery Good\n       7\tGood\n       6\tAbove Average\n       5\tAverage\n       4\tBelow Average\n       3\tFair\n       2\tPoor\n       1\tVery Poor\n       \n       \n       \n #### - OverallCond: Rates the overall condition of the house\n\n       10\tVery Excellent\n       9\tExcellent\n       8\tVery Good\n       7\tGood\n       6\tAbove Average\t\n       5\tAverage\n       4\tBelow Average\t\n       3\tFair\n       2\tPoor\n       1\tVery Poor\n\t\t\n\n\n   #### - RoofMatl: Roof material\n\n       ClyTile\tClay or Tile  -  8\n       CompShg\tStandard (Composite) Shingle  -  7\n       Membran\tMembrane -  6\n       Metal\tMetal  - 5\n       Roll\tRoll  - 4\n       Tar&Grv\tGravel & Tar -  3\n       WdShake\tWood Shakes -  2\n       WdShngl\tWood Shingles  - 1\n\n\n#### - ExterQual: Evaluates the quality of the material on the exterior \n\t\t\n       Ex\tExcellent  -  5\n       Gd\tGood -  4\n       TA\tAverage\/Typical -  3\n       Fa\tFair  - 2\n       Po\tPoor  - 1\n\n\t\t\n#### - Foundation: Type of foundation\n\t\t\n       BrkTil\tBrick & Tile  - 6\n       CBlock\tCinder Block -  5\n       PConc\tPoured Contrete\t -  4\n       Slab\tSlab  - 3\n       Stone\tStone  - 2\n       Wood\tWood  - 1\n#### - BsmtQual: Evaluates the height of the basement\n\n       Ex\tExcellent (100+ inches)\t 6\n       Gd\tGood (90-99 inches) 5\n       TA\tTypical (80-89 inches) 4\n       Fa\tFair (70-79 inches) 3\n       Po\tPoor (<70 inches) 2\n       NA\tNo Basement 1\n\t\t\n#### - BsmtCond: Evaluates the general condition of the basement\n\n       Ex\tExcellent 6\n       Gd\tGood 5\n       TA\tTypical - slight dampness allowed 4\n       Fa\tFair - dampness or some cracking or settling 3\n       Po\tPoor - Severe cracking, settling, or wetness 2\n       NA\tNo Basement 1\n\t\n#### - BsmtExposure: Refers to walkout or garden level walls\n\n       Gd\tGood Exposure 5\n       Av\tAverage Exposure (split levels or foyers typically score average or above) 4\t\n       Mn\tMimimum Exposure 3\n       No\tNo Exposure 2\n       NA\tNo Basement 1\n\n\n\n\n#### - Heating: Type of heating\n\t\t\n       Floor\tFloor Furnace 6\n       GasA\tGas forced warm air furnace 5\n       GasW\tGas hot water or steam heat 4\n       Grav\tGravity furnace\t 3\n       OthW\tHot water or steam heat other than gas 2\n       Wall\tWall furnace 1\n\t\t\n#### - HeatingQC: Heating quality and condition\n\n       Ex\tExcellent 5\n       Gd\tGood 4\n       TA\tAverage\/Typical 3\n       Fa\tFair 2\n       Po\tPoor 1\n\t\t\n#### - CentralAir: Central air conditioning\n\n       N\tNo 1\n       Y\tYes 2\n       \n       \n   #### - Electrical: Electrical system\n\n       SBrkr\tStandard Circuit Breakers & Romex - 5\n       FuseA\tFuse Box over 60 AMP and all Romex wiring (Average) -\t4\n       FuseF\t60 AMP Fuse Box and mostly Romex wiring (Fair) - 3\n       FuseP\t60 AMP Fuse Box and mostly knob & tube wiring (poor) - 2\n       Mix\tMixed - 1\n\n\n\n\n\n#### - KitchenQual: Kitchen quality\n\n       Ex\tExcellent 5\n       Gd\tGood 4\n       TA\tTypical\/Average 3\n       Fa\tFair 2\n       Po\tPoor 1\n\n\n\n#### - Functional: Home functionality (Assume typical unless deductions are warranted)\n\n       Typ\tTypical Functionality 8\n       Min1\tMinor Deductions 1 7\n       Min2\tMinor Deductions 2 6\n       Mod\tModerate Deductions 5\n       Maj1\tMajor Deductions 1 4\n       Maj2\tMajor Deductions 2 3\n       Sev\tSeverely Damaged 2\n       Sal\tSalvage only 1\n\t\t\n\n\t\t\n#### - GarageType: Garage location\n\t\t\n       2Types\tMore than one type of garage 7\n       Attchd\tAttached to home 6\n       Basment\tBasement Garage 5\n       BuiltIn\tBuilt-In (Garage part of house - typically has room above garage) 4\n       CarPort\tCar Port 3\n       Detchd\tDetached from home 2\n       NA\tNo Garage 1\n\t\t\n\n\t\t\n\n#### - GarageQual: Garage quality\n\n       Ex\tExcellent 6\n       Gd\tGood 5\n       TA\tTypical\/Average 4\n       Fa\tFair 3\n       Po\tPoor 2\n       NA\tNo Garage 1\n\t\t\n\n\t\t\n\n\t\t\n\n#### - PoolQC: Pool quality\n\t\t\n       Ex\tExcellent 5\n       Gd\tGood 4\n       TA\tAverage\/Typical 3\n       Fa\tFair 2\n       NA\tNo Pool 1\n\t\t\n#### - Fence: Fence quality\n\t\t\n       GdPrv\tGood Privacy 5\n       MnPrv\tMinimum Privacy 4\n       GdWo\tGood Wood 3\n       MnWw\tMinimum Wood\/Wire 2\n       NA\tNo Fence 1\n\n\t\t\n\n\t\t\n","35564141":"## All heatmap is in black!","11323dd1":"## 1- Importing libraries & Data:","97f8cbfc":"# 6- Create heate map to indecate the nan values in all dataset again"}}