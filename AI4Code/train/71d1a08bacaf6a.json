{"cell_type":{"09f93d92":"code","3b0efcd9":"code","461ab000":"code","132ebc51":"code","8785e6fc":"code","d3033bbf":"code","42f6df72":"code","ceb2101a":"code","9c108245":"code","59b1c03c":"code","96449119":"code","e355012e":"code","01eb859e":"code","a11d71e7":"code","6ad5b129":"code","6db4f66d":"code","e63a9e03":"code","3cc67a31":"code","ea7a41c0":"code","e23ae15b":"code","52a38b05":"code","824c4089":"code","142d3f76":"code","2b0c9a42":"code","ee0ac858":"code","c552e7d4":"code","d190c9e2":"code","4b0ce108":"code","02a44c2a":"code","dd2ceb2e":"code","6c3ec45a":"code","c02874a2":"code","631e3269":"code","58652068":"code","f20e5ace":"code","2433a26d":"code","c20b6d07":"code","5750f2f8":"code","1077daf5":"code","104070d8":"code","056fbe86":"code","30330814":"code","bda1c93f":"code","8dbe8fda":"code","4155dd7c":"code","e2024e78":"code","3211d2a0":"code","d4203783":"code","f3d4b977":"code","eb1402a9":"code","109bdc46":"code","fa4720ca":"code","cce4d0d6":"code","1c120b30":"code","81f3d128":"code","ba4e2f39":"code","797c5f77":"code","87b1c07e":"markdown","8f91ed36":"markdown","4519ecd8":"markdown","9907ea51":"markdown","71e004b2":"markdown","44257e15":"markdown","1cc3c1e3":"markdown","6381180d":"markdown","83b3da6d":"markdown","186fe8d8":"markdown","d5cbe117":"markdown","c456aa5a":"markdown","1e98f89b":"markdown","0a2bbbd9":"markdown","1166346a":"markdown","2d08b185":"markdown","40604c3a":"markdown","dff20832":"markdown","2af8c67d":"markdown","29208e1b":"markdown","fcafd78c":"markdown","82c4cd34":"markdown","0d7dfabe":"markdown","f581db30":"markdown","b4d9d541":"markdown","8da0cebc":"markdown","e168ef3b":"markdown","e7c43853":"markdown","9c72ee84":"markdown","77f98926":"markdown","7822cfc6":"markdown","e4a5abfc":"markdown","d3e0796d":"markdown","0d6709e1":"markdown","079ed6b2":"markdown","5d13dc0f":"markdown","26dfd86d":"markdown","d5a2f430":"markdown","a60e1ddc":"markdown","dd5ad99e":"markdown","6a819a4a":"markdown","1c6bba73":"markdown","2b1c1b4c":"markdown","4db047af":"markdown","d0f288ce":"markdown","43f966cf":"markdown"},"source":{"09f93d92":"import pandas as pd\ndaily_steps= pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailySteps_merged.csv\")\ndaily_intensities = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyIntensities_merged.csv\")\ndaily_calories= pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyCalories_merged.csv\")","3b0efcd9":"\nprint(f\"Shape of daily_steps is{daily_steps.shape}\")\nprint(f\"Shape of daily_intensities is{daily_intensities.shape}\")\nprint(f\"Shape of daily_calories is{daily_calories.shape}\")","461ab000":"daily_calories.columns","132ebc51":"daily_intensities.columns","8785e6fc":"daily_steps.columns","d3033bbf":"daily_calories.rename(columns={\"ActivityDay\" : \"ActivityDate\"},inplace=True)\ndaily_steps.rename(columns={\"ActivityDay\" : \"ActivityDate\",\"StepTotal\":\"TotalSteps\"},inplace=True)\ndaily_intensities.rename(columns={\"ActivityDay\" : \"ActivityDate\",\"StepTotal\":\"TotalSteps\"},inplace=True)","42f6df72":"daily_calories.columns","ceb2101a":"daily_intensities.columns","9c108245":"daily_steps.columns","59b1c03c":"daily_steps.head()","96449119":"daily_calories.head()","e355012e":"daily_intensities.head()","01eb859e":"daily_data =daily_steps.merge(daily_calories.merge(daily_intensities,on=[\"ActivityDate\",\"Id\"]))","a11d71e7":"daily_data.shape","6ad5b129":"daily_data.columns","6db4f66d":"daily_data.head()","e63a9e03":"daily_data.nunique(axis=0)# getting the count of unique values from each column","3cc67a31":"daily_data.duplicated().values.any()# checking for duplicate values","ea7a41c0":"daily_data.info()","e23ae15b":"daily_data.ActivityDate = pd.to_datetime(daily_data[\"ActivityDate\"])","52a38b05":"type(daily_data.ActivityDate[0])","824c4089":"hourly_calories = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyCalories_merged.csv\")\nhourly_intensities = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyIntensities_merged.csv\")\nhourly_steps = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlySteps_merged.csv\")","142d3f76":"print(f\"Shape of hourly_calories is{hourly_calories.shape}\")\nprint(f\"Shape of hourly_intensities is{hourly_intensities.shape}\")\nprint(f\"Shape of hourly_steps is{hourly_steps.shape}\")","2b0c9a42":"hourly_calories.columns","ee0ac858":"hourly_intensities.columns","c552e7d4":"hourly_steps.columns","d190c9e2":"hourly_calories.head()","4b0ce108":"hourly_intensities.head()","02a44c2a":"hourly_steps.head()","dd2ceb2e":"#Converting the values in Id column into String\nhourly_calories.Id = hourly_calories.Id.astype(str)\nhourly_intensities.Id = hourly_intensities.Id.astype(str)\nhourly_steps.Id = hourly_steps.Id.astype(str)","6c3ec45a":"for i in range(len(hourly_calories.Id)):# It checks the lenth of each value in Id column and if the length is larger than 10(i.e. if it contains blanck spaces ), it strips the values\n    if len(hourly_calories.Id[i]) >10:\n        hourly_calories.Id[i]=hourly_calories.Id[i].str.strip()\nfor i in range(len(hourly_intensities.Id)):\n    if len(hourly_intensities.Id[i]) >10:\n        hourly_intensities.Id[i]=hourly_intensities.Id[i].str.strip()\nfor i in range(len(hourly_steps.Id)):\n    if len(hourly_steps.Id[i]) >10:\n        hourly_steps.Id[i]=hourly_steps.Id[i].str.strip()","c02874a2":"hourly_data = hourly_calories.merge(hourly_intensities.merge(hourly_steps,on=[\"Id\",\"ActivityHour\"]))\nhourly_data.shape","631e3269":"hourly_data.head()","58652068":"hourly_data.nunique()","f20e5ace":"hourly_data.info()","2433a26d":"hourly_data.ActivityHour = pd.to_datetime(hourly_data[\"ActivityHour\"])","c20b6d07":"hourly_data[\"hour\"] = hourly_data[\"ActivityHour\"].dt.hour","5750f2f8":"hourly_data.columns # successfuly created new column","1077daf5":"hourly_data.sample(10)","104070d8":"heartrate = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/heartrate_seconds_merged.csv\")\nheartrate.head()","056fbe86":"heartrate.info()","30330814":"heartrate[\"Time\"] = pd.to_datetime(heartrate[\"Time\"])\ntype(heartrate.Time[0])","bda1c93f":"heartrate[\"hour\"] = heartrate[\"Time\"].dt.hour","8dbe8fda":"heartrate.columns # thus successfully formed new column","4155dd7c":"daily_data[\"day_of_week\"] = daily_data[\"ActivityDate\"].dt.dayofweek","e2024e78":"daily_data.columns # confirmed the new column ","3211d2a0":"import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use(\"seaborn\")","d4203783":"daily_data_weekday = daily_data.groupby(\"day_of_week\").agg({\"Calories\":pd.Series.mean,\"TotalSteps\":pd.Series.mean})","f3d4b977":"daily_data_weekday","eb1402a9":"weekday = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\n\nplt.figure(figsize = (8,3),dpi = 120)\nplt.title(\"Average Number of Steps taken vs Average Calories burnt in a Week\")\n\nplt.xticks(daily_data_weekday.index,weekday,fontsize=10)\n\nax1 = plt.gca()\nax2 = ax1.twinx()\n\nax1.set_ylabel(\"Number of Steps\",color=\"#1167b1\",fontsize = 10)\nax2.set_ylabel(\"Calories\",color =\"r\",fontsize = 10)\n\nax1.plot(daily_data_weekday.index,daily_data_weekday.TotalSteps,color = \"#1167b1\")\nax2.plot(daily_data_weekday.index,daily_data_weekday.Calories,color = \"red\")\n\nplt.show()","109bdc46":"daily_data.head()","fa4720ca":"daily_data.SedentaryActiveDistance.unique()# here values present in SedentaryActiveDistance are very small compare to other columns so we can neglect those values in analysis.","cce4d0d6":"\nxpos = np.arange(len(weekday))\nplt.figure(figsize = (8,3),dpi = 120)\nplt.bar(xpos-0.2,daily_data.groupby(\"day_of_week\").VeryActiveDistance.mean(),width = 0.2,label=\"Active\")\nplt.bar(xpos,daily_data.groupby(\"day_of_week\").ModeratelyActiveDistance.mean(),width =0.2,label = \"Moderate\")\nplt.bar(xpos+0.2,daily_data.groupby(\"day_of_week\").LightActiveDistance.mean(),width =0.2,label = \"Light\")\nplt.legend(loc= \"upper left\")\nplt.title(\"Intensity of covering the distance per day\")\nplt.ylabel(\"Distance\")\nplt.xticks(xpos,weekday)\nplt.tight_layout()","1c120b30":"x = np.arange(24)\nplt.figure(dpi =90)\n\nplt.subplot(4,1,1)# it creates the plot at first position\nplt.title(\" Average of Number of Steps vs Intensity vs Calories burnt vs Heart Rate each hour in a day\")\nplt.tight_layout()\n\nplt.plot(x,heartrate.groupby(\"hour\").Value.mean(),color = \"yellow\",label = \"Heart Rate\")\nplt.ylabel(\"Heart Rate\")\nplt.legend()\nplt.subplot(4,1,2)# it creates the plot at second position\n\nplt.plot(x,hourly_data.groupby(\"hour\").Calories.mean(),color = \"red\",label = \"Calories\")\nplt.ylabel(\"Calories\")\nplt.legend()\nplt.subplot(4,1,3)\nplt.plot(x,hourly_data.groupby(\"hour\").TotalIntensity.mean(),color = \"green\",label = \"Intensity\")\nplt.ylabel(\"Intensity\")\nplt.legend()\nplt.subplot(4,1,4)\nplt.plot(x,hourly_data.groupby(\"hour\").StepTotal.mean(),color=\"blue\",label=\"Steps\")\nplt.ylabel(\"Number of Steps\")\nplt.xlabel(\"Time\")\nplt.legend()\n\nplt.tight_layout()","81f3d128":"\nplt.subplot(4,1,1)# it creates the plot at first position\nplt.title(\" Maximum of Number of Steps vs Intensity vs Calories burnt vs Heart Rate each hour in a day\")\nplt.tight_layout()\n\nplt.plot(x,heartrate.groupby(\"hour\").Value.max(),color = \"yellow\",label = \"Heart Rate\")\nplt.ylabel(\"Heart Rate\")\nplt.legend()\nplt.subplot(4,1,2)# it creates the plot at first position\n\nplt.plot(x,hourly_data.groupby(\"hour\").Calories.max(),color = \"red\",label = \"Calories\")\nplt.ylabel(\"Calories\")\nplt.legend()\nplt.subplot(4,1,3)\nplt.plot(x,hourly_data.groupby(\"hour\").TotalIntensity.max(),color = \"green\",label = \"Intensity\")\nplt.ylabel(\"Intensity\")\nplt.legend()\nplt.subplot(4,1,4)\nplt.plot(x,hourly_data.groupby(\"hour\").StepTotal.max(),color=\"blue\",label=\"Steps\")\nplt.ylabel(\"Number of Steps\")\nplt.xlabel(\"Time\")\nplt.legend()\n\n","ba4e2f39":"sleepDay = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/sleepDay_merged.csv\")\nsleepDay.head()\nsleepDay.shape\n\n\nsleepDay.SleepDay = pd.to_datetime(sleepDay[\"SleepDay\"])\nsleepDay[\"day_of_week\"] = pd.DatetimeIndex(sleepDay[\"SleepDay\"]).day_of_week\nsleepDay.columns","797c5f77":"plt.figure(dpi=80)\nplt.subplot(2,1,1)\nplt.plot(xpos,sleepDay.groupby(\"day_of_week\").TotalMinutesAsleep.mean(),color = \"green\")\nplt.title(\"Average sleep (minutes) per Day\")\nplt.ylabel(\"minutes\")\nplt.xticks(xpos,weekday)\n\nplt.subplot(2,1,2)\nplt.plot(xpos,daily_data.groupby(\"day_of_week\").TotalSteps.mean(),color = \"b\")\nplt.title(\"Average steps taken per Day\")\nplt.ylabel(\"Number of Steps\")\nplt.xticks(xpos,weekday)\nplt.tight_layout()","87b1c07e":"#### 4.1.3 Transforming Dataframes","8f91ed36":"## Recommendations \n 1. **Provide data on daily activity  with simple but interactive dashboards** \n  * Users should receive data on their daily activities with interactive dashboards so that they can properly understand their activities and calories burned and should receive recommendations for the next few days \n \n 2. **Promotion of the rewards system for active users**\n  * From the results we can see  users are taking action and covering most of the distance lightly rather than actively. We should encourage users by assigning them weekly tasks. New activities should only be proposed when the previous activity has been successfully completed.Users who maintain their performance for a predefined  period should receive or improve rewards. Users can show off their achievements on social media platforms. \n \n 3. **Notifications to sleep well** \n  * Based on the results, we can see that people who takes more steps, do not get enough sleep. We should provide  sleep time notifications, we can also provide  podcast recommendations with relaxing music or books from their favorite genres. \n 4. **Aesthetically Attractive Gadgets** \n  * We need to provide users with gadgets which are more aesthetic and can be used comfortably, so that users can wear gadgets  most of the time of the day.","4519ecd8":"#### 4.1 Daily Data","9907ea51":"#### 5.1 Average Number of Steps taken vs Average Calories burnt in a Week\nNow lets check which day of the week has the highest Step count and calories burnt on that perticular day.\n","71e004b2":"Checking whether the values in \"Id\" column contain any blank spaces or not and if present remove the blank spaces. ","44257e15":"Lets check how actively users cover distance in week","1cc3c1e3":"## 3. Prepare\n\nWe are using public data that explores the daily habits of users of smart devices. \n\n**FitBit Fitness Tracker Data** (CC0: public domain, dataset made available through Mobius): This Kaggle dataset contains the personal fitness trackers of thirty Fitbit users. Thirty eligible Fitbit users have agreed to send personal tracking data, including minute-level output for exercise, heart rate, and sleep tracking. It includes information on daily activity, steps and heart rate which can be used to explore user habits.\n\nThe dataset contains 18 CSV files each containing different quantitative data of users collected by FitBit Devices.\n","6381180d":"## 2. Ask","83b3da6d":"#### 5.3 Average of Number of Steps vs Intensity vs Calories burnt vs Heart Rate each hour in a day","186fe8d8":"Columns \"Id\" and \"Activityhour are common in each dataframe, so we can combine all the dataframes into single dataframe \"hourly_data\".","d5cbe117":"Changing the type of \"Date\" column from str to Datetime and Making new seperate column \"hour\" so that we can group the data hourly.","c456aa5a":"#### 4.1.4 Data Cleaning","1e98f89b":"We can find exact same observations as the average data above.","0a2bbbd9":"\"Id\" column is common in all four dataframe, so we can merge them together with \"Id\" column. Also date column has different name in dataframe, so changing the name to \"ActivityDate\". ","1166346a":"#### 4.2 Hourly Data","2d08b185":"Now checking the datatype of values present in each column and also for null values.","40604c3a":"#### 4.2.2 Checking Date Frames","dff20832":"### 2.2 Key Stakeholders\n*\t**Ur\u0161ka Sr\u0161en**: Bellabeat\u2019s cofounder and Chief Creative Officer \n*\t**Sando Mur**: Mathematician and Bellabeat\u2019s cofounder; key member of the Bellabeat executive team \n*\t**Bellabeat marketing analytics team**: A team of data analysts responsible for collecting, analyzing, and reporting data that helps guide Bellabeat\u2019s marketing strategy.\n","2af8c67d":"For finding the relationship between the amount of sleep per day and the average steps taken in that perticular day, we first import dataset and transform the dataset to creat proper analysis.","29208e1b":"#### 4.2.3 Data Cleaning ","fcafd78c":"All four data frames have same number of rows(940) but different number of columns. Thus checking columns in each dataframe.","82c4cd34":"Each dataframe has columns \"Id\" and \"ActivityDate\" in common, so we can merge all the three datasets into single dataframe \"daily_data\".","0d7dfabe":"Firstly we try to find the relationship between the steps taken and the calories burnt in each day of week. To visualize this we have to make seperate column for the day of the week and then will group the data accordingly.","f581db30":"From the graph, it can easily be seen that, \n * As users take more steps per day, more calories are likely to be burned. \n * Likewise, fewer steps burn fewer calories. \n * Users prefer to take more steps on Mondays and Fridays. \n * But in midweek and on Saturdays the number of steps decreases so Calories burned also decreases.","b4d9d541":"## 5. Analyze \nNow in this steps we will try to put data on various plots to get better understading of the insights from the data. ","8da0cebc":"Here we can observe that, \n \n* Almost all three charts have the  same deviation. \n* From 12:00 p.m. to 5:00 a.m., calories burned are almost zero because this period generally corresponds to hours of sleep. \n* From around 7 a.m., the number of steps taken by  users begins to increase and reaches the maximum level of 600 steps per hour from almost 5 p.m. to 6 p.m. \n* As the number of steps increases, the intensity increases and more calories are burned between 12:00 p.m. and 2:00 p.m. and then from 4:00 p.m. to 7:00 p.m. \n* Heart rate increases and decreases with the number of steps.","e168ef3b":"Here we can observe that,\n\n* Users prefer to cover most of the distance Lightly rather than going actively.\n* There is no significant change in the amount of distance traveled in each category","e7c43853":"It can be observed that,\n* Users who take more steps usually take less sleep.","9c72ee84":"## 6. Act","77f98926":"## 1. Summary\n**Bellabeat** is a high-tech company that makes smart, health-focused products that educate and inspire women around the world. Collecting data on activity, sleep, stress and reproductive health has enabled Bellabeat to provide women with knowledge about their health and habits. Since its inception in 2013, Bellabeat has grown rapidly and quickly positioned itself as a technology company for the well-being of women.  \n\nThe main task of this case study is to analyze data on the suitability of smart devices that could help unlock new growth opportunities for the business. devices. This information will then be used to orient the company's marketing strategy.\n","7822cfc6":"#### 5.5 Sleep vs Steps Taken","e4a5abfc":"## 4. Process\n\nFor this case study, I am using **Python** for analysis as the data available in large data set and also to share the findings with stakeholders with better visualization \n","d3e0796d":"All the columns of \"hourly_data\" have 22099 non null values. But values in calumn \"ActivityHour\" are of type \"object\". Thus we have to convert them into TimeStamp.","0d6709e1":"Lets check whether participants who sleep more also take more steps or fewer steps per day? Is there any relationship between that? ","079ed6b2":"### 2.1 Business Task\nTo analyze smart device usage data in order to gain insight into how consumers use non-Bellabeat smart devices.\n","5d13dc0f":"\n\nNow lets make subplots to check the hourly data of users taking how much steps with how much intensity to burn certain calories.","26dfd86d":"#### 4.1.1 Importing all the Daily datasets","d5a2f430":"In some datasets, data is given in **daily** whereas in some datasets contains **hourly** data. Thus we first process daily data and then hourly data.","a60e1ddc":"Lets now consider hourlyhertarate data","dd5ad99e":"#### 5.4 Maximum of Number of Steps vs Intensity vs Calories burnt vs Heart Rate each hour in a day","6a819a4a":"Lets creat a new column \"hour\" to make grouping according to hour. Then we can use this column for analyzing with different aspects.","1c6bba73":"#### 5.2 Intensity of covering the distance per day","2b1c1b4c":"Now lets check the data present in each dataframe","4db047af":"#### 4.2.1 Importing all the data sets","d0f288ce":"#### 4.1.2 Checking the data frames","43f966cf":"Dataframe does not have any null values but values in ActivityDate are of \"object\" type.Thus converting them into \"TimeStamp\"."}}