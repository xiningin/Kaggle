{"cell_type":{"a84ffccb":"code","753e93bd":"code","843caf14":"code","ad0a7c3d":"code","5eb37597":"code","feb0e29f":"code","877decf1":"code","b76cb302":"code","b47eba15":"code","31d9d1a2":"code","c28e09cc":"code","59c2c1c2":"code","977d55f2":"code","ad0017cf":"code","6b2b8ae7":"code","b8ad60eb":"code","e78b16d3":"markdown","a5ddf186":"markdown","dddd4b54":"markdown","c2f5d9f0":"markdown","e8107226":"markdown","a6855af9":"markdown","b220e4bc":"markdown","5f1771be":"markdown","574fe989":"markdown","86950c32":"markdown"},"source":{"a84ffccb":"import numpy as np\nimport pandas as pd\nimport cv2\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport hashlib\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\nfrom tqdm.notebook import tqdm\nfrom PIL import Image\n\nDIR_INPUT = '\/kaggle\/input\/cassava-leaf-disease-classification'","753e93bd":"train_df = pd.read_csv(DIR_INPUT + '\/train.csv')\ntrain_df","843caf14":"def calculate_hash(im):\n    md5 = hashlib.md5()\n    md5.update(np.array(im).tostring())\n    \n    return md5.hexdigest()\n    \ndef get_image_meta(image_id, image_src, dataset='train'):\n    im = Image.open(image_src)\n    extrema = im.getextrema()\n\n    meta = {\n        'image_id': image_id,\n        'dataset': dataset,\n        'hash': calculate_hash(im),\n        'r_min': extrema[0][0],\n        'r_max': extrema[0][1],\n        'g_min': extrema[1][0],\n        'g_max': extrema[1][1],\n        'b_min': extrema[2][0],\n        'b_max': extrema[2][1],\n        'height': im.size[1],\n        'width': im.size[0],\n        'format': im.format,\n        'mode': im.mode\n    }\n    return meta","ad0a7c3d":"data = []\n\nfor i, image_id in enumerate(tqdm(train_df['image_id'].values, total=train_df.shape[0])):\n    data.append(get_image_meta(image_id, f'{DIR_INPUT}\/train_images\/{image_id}'))","5eb37597":"meta_df = pd.DataFrame(data)\nmeta_df.head()","feb0e29f":"meta_df.groupby(by='dataset')[['width', 'height']].aggregate(['min', 'max'])","877decf1":"duplicates = meta_df.groupby(by='hash')[['image_id']].count().reset_index()\nduplicates = duplicates[duplicates['image_id'] > 1]\nduplicates.reset_index(drop=True, inplace=True)\n\nduplicates = duplicates.merge(meta_df[['image_id', 'hash']], on='hash')\n\nduplicates.head(20)","b76cb302":"def show_images(image_ids):\n    \n    col = 5\n    row = min(len(image_ids) \/\/ col, 5)\n    \n    fig, ax = plt.subplots(row, col, figsize=(16, 8))\n    ax = ax.flatten()\n\n    for i, image_id in enumerate(image_ids):\n        image = cv2.imread(f'{DIR_INPUT}\/train_images\/{image_id}')\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\n        ax[i].set_axis_off()\n        ax[i].imshow(image)\n        ax[i].set_title(image_id)","b47eba15":"train_df[['CBB', 'CBSD', 'CGM', 'CMD', 'Healthy']] = pd.get_dummies(train_df[\"label\"])\n\nfig = go.Figure(data=[\n    go.Pie(labels=train_df.columns[2:],\n           values=train_df.iloc[:, 2:].sum().values)\n])\nfig.show()","31d9d1a2":"train_df[\"label\"].value_counts()","c28e09cc":"show_images(train_df.sample(n=15)['image_id'].values)","59c2c1c2":"show_images(train_df[train_df['label'] == 4].sample(n=15)['image_id'].values)","977d55f2":"show_images(train_df[train_df['label'] == 0].sample(n=15)['image_id'].values)","ad0017cf":"show_images(train_df[train_df['label'] == 1].sample(n=15)['image_id'].values)","6b2b8ae7":"show_images(train_df[train_df['label'] == 2].sample(n=15)['image_id'].values)","b8ad60eb":"show_images(train_df[train_df['label'] == 3].sample(n=15)['image_id'].values)","e78b16d3":"## Cassava Mosaic Disease (CMD)","a5ddf186":"## Healthy leaves","dddd4b54":"# Target distribution","c2f5d9f0":"## Cassava Brown Streak Disease (CBSD)","e8107226":"## Cassava Bacterial Blight (CBB)","a6855af9":"# Image metadata","b220e4bc":"### Image sizes\nIt looks like all of the images have the same size: 800x600px","5f1771be":"## Random images","574fe989":"## Cassava Green Mottle (CGM)","86950c32":"### Duplicated images\nThere is no duplication in the training set."}}