{"cell_type":{"0b7e9da6":"code","0f9fa046":"markdown"},"source":{"0b7e9da6":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\ndf = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv', low_memory=False)\ndf_play = df[df.NflId==df.NflIdRusher].copy()\n\ndf_play['YardsFromOwnGoal'] = np.where(df_play.FieldPosition == df_play.PossessionTeam,\n                                       df_play.YardLine, 50 + (50-df_play.YardLine))\ndf_play[['prev_game', 'prev_play', 'prev_team', 'prev_yfog', 'prev_yards']] = df_play[\n        ['GameId', 'PlayId', 'Team', 'YardsFromOwnGoal', 'Yards']].shift(1)\n\nfilt = (df_play.GameId==df_play.prev_game) & (df_play.Team==df_play.prev_team) & (df_play.PlayId-df_play.prev_play<30)\ndf_play.loc[filt,'est_prev_yards'] = df_play[filt]['YardsFromOwnGoal'] - df_play[filt]['prev_yfog']\n\nplt.figure(figsize=(8,8))\nplt.title('deduced yards for %d of %d plays' % (sum(filt), len(filt)))\nplt.scatter(*zip(*df_play[['est_prev_yards', 'prev_yards']].dropna().values), alpha=0.1)\nplt.xlabel('deduced yards')\nplt.ylabel('actual yards')\nplt.show()","0f9fa046":"It is possible to almost perfectly deduce Yards of the previous play by looking at the change in YardLine, for over a quarter of the plays in the train set. I have not applied this to the test set (yet), but I would like to know:\n\n1. is it allowed to do this?\n2. is the playid logic guaranteed to be the same in the private test set?\n\nIn my opinion, because we were not given Yards for the test set, the organizers do not want us to train a model using the test set. So, to make sure that it is impossibe:\n\n3. will the playid logic be changed in the private test set, to create a level playing field that is not influenced by online training within the private set?\n\nI would prefer the latter."}}