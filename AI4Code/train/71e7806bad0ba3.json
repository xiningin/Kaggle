{"cell_type":{"5bc45c94":"code","5d1061b4":"code","d0d89034":"code","31e898b9":"code","949c4336":"code","d153680a":"code","7d730e13":"code","1d4f1d20":"code","0ceab57c":"code","cc65f2bd":"markdown","26f06e16":"markdown","5a83682b":"markdown","b0422f58":"markdown","8ff19485":"markdown","f2e2c895":"markdown","e5eb5fa5":"markdown"},"source":{"5bc45c94":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5d1061b4":"from sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.model_selection import train_test_split\n\n# For training random forest model\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error","d0d89034":"# Load the training data\ntrain = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\", index_col=0)\ntest = pd.read_csv(\"..\/input\/30-days-of-ml\/test.csv\", index_col=0)\n\n# Preview the data\ntrain.head()","31e898b9":"# Separate target from features\ny = train['target']\nfeatures = train.drop(['target'], axis=1)\n\n# Preview features\nfeatures.head()","949c4336":"# List of categorical columns\nobject_cols = [col for col in features.columns if 'cat' in col]\n\n# ordinal-encode categorical columns\nX = features.copy()\nX_test = test.copy()\nordinal_encoder = OrdinalEncoder()\nX[object_cols] = ordinal_encoder.fit_transform(features[object_cols])\nX_test[object_cols] = ordinal_encoder.transform(test[object_cols])\n\n# Preview the ordinal-encoded features\nX.head()","d153680a":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, random_state=0)","7d730e13":"# Define the model \nmodel = RandomForestRegressor(random_state=1, n_estimators=500, criterion='mse')\n\n# Train the model (will take about 10 minutes to run)\nmodel.fit(X_train, y_train)\npreds_valid = model.predict(X_valid)\nprint(mean_squared_error(y_valid, preds_valid, squared=False))","1d4f1d20":"# Use the model to generate predictions\npredictions = model.predict(X_test)\n\n# Save the predictions to a CSV file\noutput = pd.DataFrame({'Id': X_test.index,\n                       'target': predictions})\noutput.to_csv('submission.csv', index=False)","0ceab57c":"output","cc65f2bd":"## Data Loading process\ndata into pd Data frame","26f06e16":"## Validation set from the Training data.","5a83682b":"## Train the model","b0422f58":"## Feature Selection\nThe next code cell separates the target (which we assign to y) from the training features (which we assign to features).","8ff19485":"## Libraries Import for ML models","f2e2c895":"## Submission","e5eb5fa5":"## Prepare the data"}}