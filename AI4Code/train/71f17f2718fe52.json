{"cell_type":{"f1b86c44":"code","f3d3ca4f":"code","8d250634":"code","c1ff6b3b":"code","93f6a961":"code","7843b8ab":"code","f6ce59f5":"code","3855ab85":"code","d68efbcd":"code","492c585e":"code","54c1ba1a":"code","b1f895c3":"code","41a353d7":"code","87a4c90d":"code","f9d31879":"code","61c8fd89":"code","69fca073":"code","4f74f5b0":"code","94fe0ad4":"code","ca86e4a4":"code","e3f6b081":"code","6882b762":"code","a67f2558":"code","46a052fc":"code","d7d3a876":"code","6ff20f91":"code","df7fda7e":"code","3f8d7d1e":"code","b56147a7":"code","7a335f7d":"code","25aa4d50":"code","9b174627":"code","6a3d4ad3":"code","7048147d":"code","44024ba6":"code","bbded1b8":"code","334dc0c4":"code","b4ce61fa":"code","a65495be":"code","5d7cb4ad":"code","1d052fc3":"code","a9a82c2e":"code","bedc62c0":"code","856b3ac3":"code","993f9098":"code","47434c86":"code","b6213317":"code","b2e6cfeb":"code","2ab6fa5e":"code","d9211441":"code","a010a756":"code","9343726f":"code","877a6d08":"code","25709130":"code","d8dd1ba9":"code","31b46d76":"code","01e8c89f":"code","08df4485":"code","2bf6eea5":"code","f5446127":"code","8e4e9d4d":"code","83fa6be8":"code","9d0e888c":"code","ae4b1261":"code","533e6514":"code","2eaa8582":"code","49c93588":"code","fed5bdb0":"code","a2065db5":"code","7dd627d8":"code","5c11a6fe":"code","1f7dd15a":"code","ae34e87b":"code","247a5723":"code","9b586c01":"code","071e4606":"code","68a166d2":"code","3b26c1b5":"code","c3079b0a":"code","4d54ada6":"code","7381ffa5":"code","3e4c5215":"code","faec4720":"code","5af26afe":"code","1274cae5":"code","0d61e49a":"code","ab4df769":"code","30630bf6":"markdown","d0127309":"markdown","4955c5aa":"markdown","5e1c24e3":"markdown","17a88609":"markdown","f7d2ebfe":"markdown","ad21bd60":"markdown","3cff9a73":"markdown","0db22767":"markdown","f6d5ca0b":"markdown","27a7553b":"markdown","af3f1873":"markdown","07b2e6f8":"markdown","e882ff7e":"markdown","2fd05fa3":"markdown","8314b11f":"markdown","f452748d":"markdown","0439ae0f":"markdown","c9abc240":"markdown","316b81ac":"markdown","23b620f8":"markdown","2427fd83":"markdown","f614631e":"markdown","1c470bc5":"markdown","8d3eae30":"markdown","86d285dc":"markdown","d7f54440":"markdown","9298ffc3":"markdown","75e5778e":"markdown","a32a7f24":"markdown","fa012c27":"markdown","80ddf144":"markdown","b827db42":"markdown","8e319b9f":"markdown","9638e0b5":"markdown","9a482e51":"markdown","5c666c59":"markdown","5a85c826":"markdown","c873deb2":"markdown","e96c6cfe":"markdown","10d53358":"markdown","50e28a96":"markdown","62b270fc":"markdown","7f0d1fe9":"markdown","a7e12f34":"markdown","571d533d":"markdown","0aa66437":"markdown","3bb166d2":"markdown","81b14d59":"markdown","b7ea0cab":"markdown","63f34032":"markdown","4479c63e":"markdown","967c47cf":"markdown","0514bca4":"markdown","524b6acb":"markdown","169c9aa5":"markdown","caa1016f":"markdown","c8dcb116":"markdown","855b5e5d":"markdown","8ee278f9":"markdown","0d1f0568":"markdown","a8203d0b":"markdown","242a9092":"markdown","3d92c38e":"markdown","03f0f13d":"markdown","1158f1bb":"markdown","f7d58c2c":"markdown","dcb71ae3":"markdown","214e4b7a":"markdown","f63ec309":"markdown","f4adf511":"markdown","89fb6422":"markdown","2b944045":"markdown","80c094ca":"markdown"},"source":{"f1b86c44":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime","f3d3ca4f":"df=pd.read_csv('..\/input\/noshowappointments\/KaggleV2-May-2016.csv')\ndf.sample(5)","8d250634":"df.info()","c1ff6b3b":"df.rename(str.lower, axis='columns' ,inplace=True)\ndf.rename({'no-show':'no_show'}, axis='columns' ,inplace=True)\ndf.head()","93f6a961":"print('patient id duplicates:',df.patientid.duplicated().sum())\nprint('appointment id duplicates:',df.appointmentid.duplicated().sum())","7843b8ab":"df.set_index('appointmentid' , inplace=True)\ndf.sample(1)","f6ce59f5":"print('Number of Patients with unique ID:',len(df.patientid.unique()))\nprint('Number of Appointments:',df.patientid.value_counts().sum())","3855ab85":"print('Number of entries before removing dulicates:',df.shape[0])\nprint('Duplicated entries:',df.duplicated().sum())\ndf.drop_duplicates(inplace=True)\nprint('Number of entries after removing dulicates:',df.shape[0])","d68efbcd":"for column in df.columns.drop(['patientid','scheduledday','appointmentday','neighbourhood']):\n    print(f'{column}:{df[column].unique()}\\n')\nprint(f'Value Counts:{df[df.age==-1].age.value_counts()}')    ","492c585e":"print(\"sum of people older than 1 year who suffer from:\")\nprint(df[df.age!=1].iloc[:,7:11].sum())\nprint(\"sum of people that are 1 year old who suffer from\")\nprint(df[df.age==1].iloc[:,7:11].sum())","54c1ba1a":"df.loc[df.age == -1,'age'] = 1\ndf[df.age == -1]","b1f895c3":"print('number of unique values')\ndf.handcap.value_counts()","41a353d7":"df.sms_received.value_counts()\nprint('Number ofduplicates:',df.duplicated().sum())","87a4c90d":"df['ap_year']=pd.to_datetime(df.appointmentday).dt.year\ndf['ap_month']=pd.to_datetime(df.appointmentday).dt.month\ndf['ap_dom']=pd.to_datetime(df.appointmentday).dt.day\ndf['ap_dow']=pd.to_datetime(df.appointmentday).dt.dayofweek\ndf['ap_doy']=pd.to_datetime(df.appointmentday).dt.dayofyear\ndf['ap_hr']=pd.to_datetime(df.appointmentday).dt.hour\ndf.appointmentday=pd.to_datetime(df.appointmentday).dt.date\ndf['sc_year']=pd.to_datetime(df.scheduledday).dt.year\ndf['sc_month']=pd.to_datetime(df.scheduledday).dt.month\ndf['sc_dom']=pd.to_datetime(df.scheduledday).dt.day\ndf['sc_dow']=pd.to_datetime(df.scheduledday).dt.dayofweek\ndf['sc_doy']=pd.to_datetime(df.scheduledday).dt.dayofyear\ndf['sc_hr']=pd.to_datetime(df.scheduledday).dt.hour\ndf.scheduledday=pd.to_datetime(df.scheduledday).dt.date\ndf.head(1)\nprint('Number ofduplicates:',df.duplicated().sum())","f9d31879":"df['waiting_days']=df.appointmentday - df.scheduledday\ndf['waiting_days']=df.waiting_days.dt.days\ndf.waiting_days.value_counts().sort_index().head()","61c8fd89":"df=df.drop(df[df.waiting_days< 0].index)\ndf.waiting_days.value_counts().sort_index().head()","69fca073":"df.head()","4f74f5b0":"def get_num_vars(data):\n    \"\"\" a function that returns a list of a numeric non binary \"0\" or \"1\" variables in dataframe\n    Args:\n        data (pandas dataframe): supplied only with dataframes\n    Returns:\n        list (list): returns a list with numeric non binary variables\n    \"\"\"    \n    num_vars=[]\n    numeric_vars=data.dtypes[data.dtypes!= 'object'].index\n    for numeric_var in numeric_vars:\n        condition= (len(data[numeric_var].unique()) == 2) & (data[numeric_var].unique().sum() == 1)\n        if not condition:\n            num_vars.append(numeric_var)\n        else:\n          print(numeric_var,data[numeric_var].unique())\n    return(num_vars)","94fe0ad4":"# extracting numerical variables from dataset\nnumeric_vars=get_num_vars(df)\nnumeric_vars.index('patientid')\nnumeric_vars.pop(0)\nnumeric_vars","ca86e4a4":"numeric_vars=get_num_vars(df)\nnumeric_vars.pop(numeric_vars.index('patientid'))\nQ1 = df[numeric_vars].quantile(0.25) # 1st quartile for all numerical vars\nQ3 = df[numeric_vars].quantile(0.75) # 3rt quartile for all numerical vars \nIQR = Q3 - Q1                        # Inter quartile range for all numerical vars\nlower_fence=Q1-1.5*IQR               # lower fence\nupper_fence=Q3+1.5*IQR               # upper fence\nprint(lower_fence)\nprint(upper_fence)","e3f6b081":"# using this cell to build up the query statement, which we will evaulate later.\ncond=[]\ntot='2'\n# Outlier removal statment according to lower fencer and upper fence\nfor var, fence in lower_fence.items():\n    condi=f'(df[\"{var}\"] >= {fence})'\n    cond.append(condi)\n\nfor var, fence in upper_fence.items():\n    condi = f'(df[\"{var}\"] <= {fence})'\n    cond.append(condi)\n\ncond=' & '.join(cond)\ncond","6882b762":"med=df[eval(cond)].copy()\nmed","a67f2558":"#creating age groups\nmed['age_group']=pd.cut(med['age'],bins=[0,3,16,40,60,103],right=False,\n                            labels=['Baby 0-2','Teen 3-15', 'Young Adults 16-39','Middle-aged 40-59', 'Elderly 60+'])\nmed['age_group'].value_counts().sort_index()","46a052fc":"print('Number of entries after removing outliers:',med.shape[0])","d7d3a876":"med['no_show_bin']=pd.get_dummies(med['no_show'],drop_first=True)","6ff20f91":"med.describe()","df7fda7e":"med.patientid.value_counts()","3f8d7d1e":"inspection=med[med.patientid==8.221460e+14].sort_values('appointmentid')\ninspection[['patientid','scheduledday','sc_hr','ap_doy','sms_received','no_show']]","b56147a7":"inspection.loc[5667980:5673265,['patientid','scheduledday','sc_hr','waiting_days','ap_doy','sms_received','no_show']]","7a335f7d":"re_med=med.copy()","25aa4d50":"print('Total number of rescheduls in dataset: ',med.duplicated(subset=['patientid','scheduledday']).sum())","9b174627":"#Re-ordering dataset according to appointmentid , assuming the increase in its value is chronological\nmed=med.sort_values('appointmentid')\nmed.drop_duplicates(subset=['patientid','scheduledday'],keep='last',inplace=True)\nmed.duplicated().sum()","6a3d4ad3":"print('Number of entries after removing reschedules:',med.shape[0])","7048147d":"med.patientid.value_counts()","44024ba6":"inspection=med[med.patientid==6.264200e+12]\ninspection[:10]","bbded1b8":"med.duplicated().sum()","334dc0c4":"#aquiring desired columns for analysis and sorting the values\nre_meds=re_med.sort_values(['patientid','scheduledday','sc_hr'])[['patientid','scheduledday','sc_doy','sc_hr','waiting_days','ap_doy','no_show_bin']]","b4ce61fa":"res=re_meds[re_meds.duplicated(subset=['patientid','scheduledday'],keep=False)]\nres","a65495be":"#Calculating the number of scheduling attempts for each patient for every day\nper_day=res.groupby(['patientid','sc_doy'])['no_show_bin'].count().sort_values().reset_index().rename({'no_show_bin':'re_scds per day'},axis='columns')\n#removing the 1 count from the calculation to reflect reschedueling attempts per patient per day\nper_day['re_scds per day']-=1\nper_day","5d7cb4ad":"#calculating the average rescheduels per day for every unqiue patient\nre_scds=per_day.groupby('patientid')['re_scds per day'].mean().reset_index().sort_values('re_scds per day').rename({'re_scds per day':'avg_re_scds_per_patient'},axis='columns')\n# Rounding values to be 1,2,3,4,5 or 6\nre_scds['avg_re_scds_per_patient'] = re_scds['avg_re_scds_per_patient'].round(0)","1d052fc3":"sns.displot(data=re_scds,x='avg_re_scds_per_patient',bins=5)\nplt.yscale('log');","a9a82c2e":"#Merging med dataset with a new feature \"avg_re_scds_per_patient\"\nmed=pd.merge(med,re_scds,how='left',left_on='patientid',right_on='patientid')\n# filling empty entires in the new feature with 0, indicating its\nmed.avg_re_scds_per_patient.fillna(0,inplace=True)\nmed.isna().sum()","bedc62c0":"med.age.value_counts()","856b3ac3":"med.age.describe()","993f9098":"bins = np.arange(0, med['age'].max()+1, 1)\n# plt.hist(data=med, x='age', bins=bins,edgecolor='black');\nsns.displot(data=med, x='age', bins=bins,height=5,aspect=2.3);","47434c86":"base_color = sns.color_palette()[0]\nalt=sns.color_palette()[7]","b6213317":"plt.figure(figsize=(12,7))\nsns.countplot(data=med,x='age_group',color=base_color);\nplt.xlabel('Age group',fontsize=13)\nplt.ylabel('Count',fontsize=13)\nplt.title('Age group distribution',fontsize=15);\nsns.despine()","b2e6cfeb":"def bar_data(d,var):\n    counts=d[var].value_counts().sort_index()\n    idx=d[var].value_counts().sort_index().index\n    pct=d[var].value_counts(normalize=True).sort_index()\n    txt = ['{:0.1f}%'.format(v) for v in pct*100]\n    return counts,idx,txt ","2ab6fa5e":"counts,idx,txt = bar_data(med,'gender')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='gender' ,color=base_color)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],                     # y axis co-ordinate\n             txt[i],                        # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","d9211441":"med.appointmentday.describe()","a010a756":"nbd_counts=med.neighbourhood.value_counts()\nnbd_idx=med.neighbourhood.value_counts().index\nnbd_pct=med.neighbourhood.value_counts(normalize=True)\nnbd_txt = ['{:0.1f}%'.format(v) for v in nbd_pct*100] \nplt.figure(figsize = [7, 15]) \nsns.countplot(data=med,y='neighbourhood',color=base_color,order=nbd_idx)\nplt.xlabel('count')\nsns.despine()\nfor i in range (nbd_counts.shape[0]):\n    plt.text(nbd_counts.values[i],  # x axis co-ordinate\n             i,                      # y axis co-ordinate\n             nbd_txt[i],       # text names to be displayed\n             ha='left',              # horizontal aligment\n             va='center')","9343726f":"counts,idx,txt = bar_data(med,'scholarship')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='scholarship' ,color=base_color)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],# y axis co-ordinate\n             txt[i],                 # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","877a6d08":"counts,idx,txt = bar_data(med,'hipertension')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='hipertension' ,color=base_color)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],# y axis co-ordinate\n             txt[i],                 # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","25709130":"counts,idx,txt = bar_data(med,'diabetes')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='diabetes' ,color=base_color)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],# y axis co-ordinate\n             txt[i],                 # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","d8dd1ba9":"counts,idx,txt = bar_data(med,'alcoholism')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='alcoholism' ,color=base_color)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],# y axis co-ordinate\n             txt[i],                 # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","31b46d76":"counts,idx,txt = bar_data(med,'handcap')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='handcap' ,color=base_color)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],# y axis co-ordinate\n             txt[i],                 # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","01e8c89f":"counts,idx,txt = bar_data(med,'sms_received')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='sms_received' ,color=base_color)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],# y axis co-ordinate\n             txt[i],                 # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","08df4485":"counts,idx,txt = bar_data(med,'no_show')\nfig=plt.figure(figsize=(7,5))\ng=sns.countplot(data=med ,x='no_show' ,color=base_color,order=med.no_show.value_counts().index)\n\nfor i in range (len(counts)):\n    plt.text(i,                             # x axis co-ordinate\n             counts[i],# y axis co-ordinate\n             txt[i],                 # text names to be displayed\n             ha='center',                   # horizontal aligment\n             va='bottom')","2bf6eea5":"counts,idx,txt=bar_data(med,'avg_re_scds_per_patient')\nplt.figure(figsize=(13,7))\ncolors = [base_color if (index in idx[1:]) else '#A9A9A9' for index in idx ]\ng=sns.countplot(data=med ,x='avg_re_scds_per_patient' ,palette=colors)\n[plt.text(i, counts[idx[i]],txt[i], ha='center',va='bottom',size=9) for i in range(len(counts))];\nplt.yscale('log')\nplt.yticks([10,30,100,300,1000,3000,10000,30000],['10','30','100','300','1k','3k','10k','30k'])\nplt.xlabel(\"Number of average reschedules per day\",fontsize=13)\nplt.ylabel('Frequency (Log Scale)',fontsize=13);\nplt.title(\"There is a 16% chance that a patient rescheduels an appointment at least 1 time per day (Log Scale)\",fontsize=15)\nsns.despine();","f5446127":"med.sc_year.value_counts()\n# All occurences happened in 2016","8e4e9d4d":"med.ap_year.value_counts()\n# All occurences happened in 2016","83fa6be8":"fig=plt.subplots(2,1,figsize=(18,7))\nplt.subplot(2,1,1)\nplt.hist(data=med,x='sc_doy',bins=45,edgecolor='black')\n# plt.xticks(np.arange(0,43+1,1),[date.strftime('%d-%m') for date in idx],rotation=-45);\nplt.subplot(2,1,2)\nax2=plt.hist(data=med, x='ap_doy',bins=np.arange(88.5, 152.5+1, 1),edgecolor='black')\nplt.xticks(np.arange(89, 152+2, 2),np.arange(89, 152+2, 2));\nsns.despine()","9d0e888c":"fig=plt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\ncounts,idx,txt = bar_data(med,'sc_month')\nsns.countplot(data=med ,x='sc_month',order=idx,color=base_color)\n[plt.text(i, counts[idx[i]],txt[i], ha='center',va='bottom',size=12) for i in range (len(counts))];\nplt.subplot(1,2,2)\ncounts,idx,txt = bar_data(med,'ap_month')\nsns.countplot(data=med ,x='ap_month',order=idx,color=base_color);\n[plt.text(i, counts[idx[i]],txt[i], ha='center',va='bottom',size=12) for i in range (len(counts))];\nsns.despine()","ae4b1261":"week_names=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']","533e6514":"fig=plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\ncounts,idx,txt = bar_data(med,'sc_dow')\ng = sns.countplot(data=med ,x='sc_dow',color=base_color)\n[plt.text(i, counts[idx[i]],txt[i], ha='center',va='bottom',size=9) for i in range(len(counts))];\nplt.xticks(np.arange(0,7,1),week_names);\nplt.xlabel('Schedueling day');\nplt.subplot(1,2,2)\ncounts,idx,txt = bar_data(med,'ap_dow')\ng = sns.countplot(data=med ,x='ap_dow',color=base_color)\n[plt.text(i, counts[idx[i]],txt[i], ha='center',va='bottom',size=9) for i in range(len(counts))];\nplt.xticks(np.arange(0,7,1),week_names);\nplt.xlabel('Appointment day');","2eaa8582":"counts,idx,txt = bar_data(med,'sc_hr')\nfig = plt.figure(figsize=(12,7))\ncolors = [base_color if (hour in [7,13]) else '#A9A9A9' for hour,value in counts.items() ]\ng = sns.countplot(data=med ,x='sc_hr',palette=colors)\n[plt.text(i, counts[idx[i]],txt[i], ha='center',va='bottom',size=12) for i in range(len(counts))];\n# plt.xticks(np.arange(0,7,1),week_names);\nplt.xlabel('Schedueling Hour',size=13);\nplt.ylabel('Frequency',size=13);\nplt.title(\"Peaks observed at 7AM and 1PM when patients book appointments\",size=15);\nsns.despine()","49c93588":"counts,idx,txt = bar_data(med,'ap_hr')\n# colors = [base_color if (hour in [7,13]) else alt for hour,value in counts.items() ]\ng = sns.countplot(data=med ,x='ap_hr')\n# [plt.text(i, counts[idx[i]],txt[i], ha='center',va='bottom',size=9) for i in range(len(counts))];\n# plt.xticks(np.arange(0,7,1),week_names);\nplt.xlabel('Appointment Hour');\nplt.ylabel('Frequency');","fed5bdb0":"med.columns","a2065db5":"fig=plt.figure(figsize=(12,7))\nbins = np.arange(0, med['waiting_days'].max()+1, 1)\nfreq, bins, patches =plt.hist(data=med, x='waiting_days', bins=bins,edgecolor='black');\nplt.xticks(np.arange(0.5,med['waiting_days'].max()+1.5,1),np.arange(0,med['waiting_days'].max()+1,1));\nplt.xlabel('Days till Rendezvous',size=13);","7dd627d8":"fig=plt.figure(figsize=(12,7))\nax = fig.add_subplot(1,1,1)\nax.grid(zorder=0)\nax.xaxis.grid(color='#A9A9A9', linestyle='-')\nbins = np.arange(0, med['waiting_days'].max()+1, 1)\n\nfreq, bins, patches =plt.hist(data=med, x='waiting_days', bins=bins,edgecolor='black',zorder=3);\nbin_centers = np.diff(bins)*0.5 + bins[:-1]\nplt.yscale('log')\npatches[20].set_fc('#A9A9A9')\nfor n,(fr, x, patch) in enumerate(zip(freq, bin_centers, patches)):\n  patches[n].set_fc('#A9A9A9')\n  height = int(freq[n])\n  plt.annotate(\"{:.0%}\".format(height\/len(med)),xy = (x, height),xytext = (0,0.2),textcoords = \"offset points\",\n               ha = 'center', va = 'bottom')\npatches[0].set_fc(base_color)\nplt.xticks(np.arange(0.5,med['waiting_days'].max()+1.5,1),np.arange(0,med['waiting_days'].max()+1,1));\nplt.ylabel('Frequency (log scale)');\nplt.yticks([10,30,100,300,1000,3000,10000,30000],['10','30','100','300','1k','3k','10k','30k']);\nplt.ylabel('Frequency (log scale)',size=13);\nplt.xlabel('Days till Rendezvous',size=13);\nplt.title('35% of the appointments are scheduled to be in the same day (Log Scale)',y=1.05,size=15);\nplt.xlim(-1,37.25)\nsns.despine()","5c11a6fe":"# the % of the appointments scheduled to happen in the same day\nmed.groupby('waiting_days')['no_show'].value_counts(normalize=True)[0]*100","1f7dd15a":"wd_counts = med.waiting_days.value_counts().sort_index()\nhighlights =  med.waiting_days.value_counts()[[7,14,21,28,35]]\nweek_txt= [f\"{int(ind\/7)} weeks\" for ind in highlights.index ]\nweek_txt[0]='1 week'\nweek= pd.Series(week_txt,index=[7,14,21,28,35])","ae34e87b":"colors = [base_color if (index in highlights.index) else '#A9A9A9' for index,value in wd_counts.items() ]\ncounts,idx,txt = bar_data(med,'waiting_days')\nfig = plt.figure(figsize=(12,7))\ng = sns.countplot(data=med ,x='waiting_days' ,palette=colors)\n[plt.text(index,value+100,week[index], ha='center',va='bottom',size=12) for index,value in highlights.items() ]  \n                           \nplt.yscale('log')\nplt.yticks([10,30,100,300,1000,3000,10000],['10','30','100','300','1k','3k','10k']);\nplt.xticks(np.arange(idx.min(),idx.max()+7,7),np.arange(idx.min(),idx.max()+7,7));\nplt.ylabel('Frequency (log scale)',size=13);\nplt.xlabel('Days till Rendezvous',size=13);\nplt.title('Tendancy of schedueling appointments by weekly basis (Log Scale)',size=15);\nplt.xlim(-0.5,37.5)\nsns.despine()","247a5723":"corr=med[['age','sc_hr','waiting_days','avg_re_scds_per_patient']].corr()\nmask = np.triu(np.ones_like(corr, dtype=bool))\nplt.figure(figsize=(15,5))\nsns.heatmap(corr, annot = True, \n            fmt = '.2f', cmap = 'coolwarm',\n            mask=mask, center = 0);","9b586c01":"data=med.groupby(['sc_dow','ap_dow']).size().reset_index(name='count')\ndata_pivot=data.pivot(index='sc_dow',columns='ap_dow',values='count')\ndata_pivot","071e4606":"plt.figure(figsize=[12,7])\nsns.heatmap(data_pivot,annot=True,fmt='d',cmap='YlGnBu',vmin=0)\nplt.xticks(np.arange(0.5,5.5+1,1),week_names[:-1])\nplt.yticks(np.arange(0.5,5.5+1,1),week_names[:-1],va='center',rotation=0)\nplt.ylabel('Schedule\\nDay',size=13,rotation=0,ha='center',va='center',labelpad=35);\nplt.xlabel('Appointment Day',size=13);","68a166d2":"med[['sc_dow','no_show_bin']].describe()","3b26c1b5":"import warnings\nwarnings.filterwarnings('ignore')\nfig =plt.figure(figsize=(12,7))  \nax = fig.add_subplot(1,1,1)\nax.yaxis.grid(color='gray', linestyle='-',zorder=0)\nsns.lineplot(data=med, x='waiting_days',y='no_show_bin',lw=4,ax=ax,zorder=3)\nplt.ylabel('Probability\\nOf not attending\\nAn Appointment',size=13,rotation=0,ha='left',va='bottom',labelpad=110);\nplt.xlabel('Days till Appointment',size=13)\nplt.yticks(plt.yticks()[0],pd.DataFrame([\"{:.0%}\".format(yy) for yy in plt.yticks()[0]])[0].values)\nplt.title('The longer the waiting time for an appointment, the more likely patients not turning up',size=15,y=1.05)\nplt.legend(['_','95% confidence interval region'],frameon=False,prop={'size':12},loc='best');\nsns.despine()","c3079b0a":"fig=plt.figure(figsize=(12,7))\nax = fig.add_subplot(1,1,1)\nax.yaxis.grid(color='gray', linestyle='-',zorder=0)\ng=sns.lineplot(data=med, x='age',y='no_show_bin',lw=4,palette=[base_color],zorder=3)\nplt.xlim(0, 80)\nplt.title('Older patients are less likely not to show up than younger ones',size=15);\nplt.ylabel('Probability\\nOf not attending\\nAn Appointment',size=13,rotation=0,va='top',ha='left',labelpad=90);\nplt.yticks(plt.yticks()[0],pd.DataFrame([\"{:.0%}\".format(yy) for yy in plt.yticks()[0]])[0].values)\nplt.xlabel('Age',size=13);\nplt.ylim(0,0.4);\nplt.legend(['_','95% confidence interval region'],frameon=False,prop={'size':12},loc='best');\nsns.despine()","4d54ada6":"fig=plt.figure(figsize=(12,7))\nax = fig.add_subplot(1,1,1)\nax.yaxis.grid(color='gray', linestyle='-',zorder=0)\ng=sns.lineplot(data=med, x='age',y='no_show_bin',lw=4,zorder=3,hue='age_group',\n    hue_order=['Baby 0-2','Teen 3-15','Young Adults 16-39','Middle-aged 40-59', 'Elderly 60+'],\n    palette=sns.cubehelix_palette(5,start=2.5,rot=0.2,hue=1))\nplt.xlim(0, 80)\nplt.title('Older patients are less likely not to show up than younger ones',size=15);\nplt.ylabel('Probability\\nOf not attending\\nAn Appointment',size=13,rotation=0,va='top',ha='left',labelpad=90);\nplt.yticks(plt.yticks()[0],pd.DataFrame([\"{:.0%}\".format(yy) for yy in plt.yticks()[0]])[0].values)\nplt.xlabel('Age',size=13);\nplt.ylim(0,0.4);\nplt.legend(title=False,frameon=False,prop={'size':12})\nsns.despine()","7381ffa5":"fig=plt.figure(figsize=(12,7))\nax = fig.add_subplot(1,1,1)\nax.grid(zorder=0)\nax.yaxis.grid(color='gray', linestyle='-',zorder=0)\nsns.pointplot(data=med,x='sc_hr',y='no_show_bin',ci=False,ax=ax,zorder=3)\nplt.xlabel('Schedueling Hour',size=13);\nplt.ylabel('Probability\\nof not attending\\nan appointment',size=13,rotation=0,ha='left',labelpad=106);\nplt.title(\"Depending on when patients scheduel an appointment during the day, there is difference chances of not showing up\",size=15,y=1.05);\nplt.ylim(0,0.3)\nplt.yticks(plt.yticks()[0],pd.DataFrame([\"{:.0%}\".format(yy) for yy in plt.yticks()[0]])[0].values)\nplt.xlim(-1,12)\nsns.despine()","3e4c5215":"fig=plt.figure(figsize=(12,7))\nsns.pointplot(data=med,x='avg_re_scds_per_patient',y='no_show_bin',ci=False,\n             order=[0,1,2,3,4,5])\nplt.xlabel(\"Average reschedules per day\",fontsize=13)\nplt.ylabel('Probability\\nof not attending\\nan appointment',size=13,rotation=0,ha='left',labelpad=106);\nplt.title(\"The more times an appointment is reschedueled per day, the less likely to attend it\",size=15);\nplt.yticks(plt.yticks()[0],pd.DataFrame([\"{:.0%}\".format(yy) for yy in plt.yticks()[0]])[0].values)\nsns.despine()","faec4720":"fig = plt.figure(figsize=(12,7))\n\nbins_x = np.arange(0, 102+4, 4)\nbins_y = np.arange(6, 20+1, 1)\n# Use cmin to set a minimum bound of counts \n# Use cmap to reverse the color map. \nh2d = plt.hist2d(data = med, x = 'age', y = 'sc_hr', cmin=0.5, cmap='viridis_r', bins = [bins_x, bins_y])\n#plt.xticks(np.arange(89, 152+3, 3),np.arange(89, 152+3, 3))\n#plt.yticks(np.arange(123, 152+3, 3),np.arange(123, 152+3, 3))\nplt.colorbar()\nplt.xlabel('Age')\nplt.ylabel('Schedule hour');","5af26afe":"def minu(t):\n    t=str(t).split('.')\n    if t[1]== '5':\n        t[1]='30'\n    else:\n        t[1]='00'\n    if int(t[0]) < 12:\n        out= t[0]+':'+t[1]+\" AM\"\n    else:\n        out= t[0]+':'+t[1]+\" PM\"\n    return out","1274cae5":"fig=plt.figure(figsize=(12,7))\nsns.kdeplot(data=med, y=\"sc_hr\", x=\"age\", fill=True, thresh=0, levels=100, cmap=\"mako\");\nplt.xlabel('Age',size=13);\nplt.xticks(np.arange(0,102+8,8),np.arange(0,102+8,8))\nplt.title('Around 7:00 AM, scheduled appointments for patients younger than 8 years old,\\nbetween 50 and 56 years old are more frequent',y=1.05,size=15)\nplt.ylabel('Schedule \\nHour',size=13,rotation=0,va='center',labelpad=30);\nplt.yticks(plt.yticks()[0],pd.DataFrame([minu(yy) for yy in plt.yticks()[0]])[0].values);\nplt.ylim(5,20)\nplt.xlim(-5,100);","0d61e49a":"sns.countplot(data=med,x='sms_received',palette=['#042069','#fb1239'],hue='no_show_bin',dodge=True)\nplt.xticks([0,1],[\"Didn't received SMS\",'Received SMS']);\nplt.legend(labels=['Showed up',\"Didn't Show up\"],title=False,frameon=False)\nsns.despine()","ab4df769":"sms_counts=med.groupby('sms_received')['no_show_bin'].value_counts()\nno_sms_r=sms_counts[0][1]\/sms_counts[0].sum()\nsms_r=sms_counts[1][1]\/sms_counts[1].sum()\nprint('no sms no show rate:',f'{no_sms_r:.1%}')\nprint('sms no show rate:',f'{sms_r:.1%}')\nf'{(sms_r - no_sms_r):.1%}'","30630bf6":"All the handicaped patients were removed in the outlier removal process.","d0127309":"# Medical Appointments No-Show Case Study:<br>Appointments Data Analysis \n","4955c5aa":"## Timestamp segregation","5e1c24e3":"Scheduling rendezvous peaks at 7AM and gradually decreases till 12PM ,Peaks again at 1PM & 2PM and gradually decreases again till 10PM","17a88609":"### Does the time of scheduling an appointment during the day , influence the likelihood of not turning up?","f7d2ebfe":"So we have around 110,527 entries , none of them has null values which is good.<br \/>\nHowever, is there any duplicates or unqiues among `patientID` and `AppointmentID`? possibaly we can use one of them as an index to our data set?<br \/>\n<br \/>\nFor the sake of convenience , i'll lower the cases for all column names and use underscores to seperate between two words. ","ad21bd60":"Unfortunately, everytime this happens, a new `appointmentID` is generated, infact, there should be less appointments in the dataset after this fact check,I will be removing all appointments scheduled in the same day for every unique `patientid` and keeping last chronological entry only in `med` data set, but also, I'll make a new data set called `re_med` to investigate the rescheduling phenomenon.","3cff9a73":"### What is gender distripution?","0db22767":"Looks like `AppointmentID` has no duplicates so we can use it as an index.<br \/>\n`PatientID` duplicating make sense , it means that the same patient had several appointments.","f6d5ca0b":"`waiting_days` looks good to go now!","27a7553b":"#### Day of Year Distribution","af3f1873":"Most of the schedueled appointments happened in may and less over the preceding months.","07b2e6f8":"<a id='uni'><\/a>\n# Univariate Exploration","e882ff7e":"### Do the patients who didn't reveive SMS messages are more likely not to show up?","2fd05fa3":"Concentrations observed around 7AM schedule time for appointments. they are associated with patients of age less than 8 years old and between 50 and 56 years old","8314b11f":"<a id='wrangling'><\/a>\n# Data Wrangling\n","f452748d":"### Do specific schedule weekdays associate with certain appointment weekdays?","0439ae0f":"## Data Cleaning","c9abc240":"$$ H_0 : P_{sms} \\leq P_{nosms} $$\n$$ H_1 : P_{sms} > P_{nosms} $$\nRephrased into:\n$$ H_0 : P_{sms} - P_{nosms} \\leq 0 $$\n$$ H_1 : P_{sms} - P_{nosms} > 0 $$\n\nWhere $P$ is the probabilty of not showing up","316b81ac":"Age distribution is multimodel, peaks are around 0, 20, 40 and 55","23b620f8":"35% of all the appointments are scheduled to happen in the same day, but around 4% of those appointments, their patients don't show up.","2427fd83":"### What is the distripution of scheduled day and appointment day?","f614631e":"### How many appointments involved someone with diabetes disease?","1c470bc5":"<a id='conclusions'><\/a>\n# Conclusion\n- Around 16% of the patients reschedule their appointment atleast 1 time per day.\n- Several workdays (4-April_2016, 23-May-2016) had an unexplained inactivity.\n- Tuesday is the busiest day for appointments while Thursday and Friday are the quietest, disregarding days off.\n- Tuesday is the busiest day for scheduling appointments while Friday is the quietest, disregarding days off.\n- Peak times where scheduling takes place are 7 AM and 1 PM.\n- 35% of all the appointments are scheduled to happen in the same day, but around 4% of those appointments, their patients don't show up.\n- There is a tendancy for scheduling appointments by weekly basis since they are represented as peaks in the `waiting_days` distribution.\n- The likelehood of not showing up for an appointment increases, the longer the patient wait for his\/her particular appointment.\n- Older patients are more likely to show up for an appointment than younger ones.\n- The more times a patient rescheduel his\/her appointment the less likely he\/she show up.\n- Concentrations observed around 7AM schedule time for appointments. they are associated with patients of age less than 8 years old and between 50 and 56 years old.","8d3eae30":"\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory data analysis<\/a><\/li>\n<li><a href=\"#uni\">Univariate exploration<\/a><\/li>\n<li><a href=\"#re\">Rescheduling phenomenon investigation<\/a><\/li>\n<li><a href=\"#time\">Timestamp analysis<\/a><\/li>\n<li><a href=\"#bi\">Bivariate exploration<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<li><a href=\"#limitations\">Limitations<\/a><\/li>\n<\/ul>","86d285dc":"Appointments that are schedueled to happen peaks also at Tuesday, following the same trend like graph on the left","d7f54440":"### Is age related to not showing up for appointments?","9298ffc3":"While `waiting days` 0, 2 & 4 have higher frequencies than other days, It looks like the peaks in the distribution corresponds exactly to weekly standard counts, 7 days is 1 week, 14 days is 2 weeks ........ and so on, so \"patients\" or \"staff\" tend to schedule appointments more by weekly basis, assuming they don't schedule during the 1st week.","75e5778e":"looks like no schedueling rendezvous occur on saturday and sunday... Day off maybe? There is also Higher engagement on Tuesday followed by less engagment in the other days","a32a7f24":"<a id='re'><\/a>\n### Rescheduling Phenomenon Investigation","fa012c27":"<a id='eda'><\/a>\n# Exploratory Data Analysis","80ddf144":"Now lets check the unique values for each column to verify **data integrity**.","b827db42":"### How many appointments involved someone with hipertension disease?","8e319b9f":"## Outlier removal","9638e0b5":"Do  duplicate entries exist among our data set?","9a482e51":"Looks like when Appointments get scheduled they don't get assigned a specific hour.","5c666c59":"### I noticed multiple issues with columns' unique values and they are:\n- There is one unique value in `age` which is `-1` , that doesnt make any sense.<br \/>\n- Why does `handcap` column has unique values from `0` to `4`? , my first intial thought was it would be a binary stating if patient is handicaped or not as in 1 and 0.\n- `sms_recieved` column has `0` and `1` values only indicating that its binary , however on the data description, it states that it can varry from `0` to `5` indicating number of `sms_recieved` , was it swapped out with `handcap` column?","5a85c826":"- My intial thought that `-1` might had been a misentry , a 1 year old kid is less likely to have `hipertension` , `diabetes` & `alchololism` issues , the following cells show clearly the sum of 1 year old kids and how many of them suffer from certain issues , my fix would be is changing the `-1` into `1`","c873deb2":"### How many appointments involved someone with alcoholism issues?","e96c6cfe":"### Do patients that reschedule their appointments during the day are more likely not to show up?","10d53358":"Now these values are more realistic, 20 appointments is more digestable than 62 appointments in 3 month period (to be discovered later on).","50e28a96":"It doesn't look like there is any strong linear correlation between any of these numeric variables.","62b270fc":"<a id='limitations'><\/a>\n# Limitations\n\n- One thing that i found to be strange , the fact that majority of data samples comes from scheduel day after march 2016, with earliest record at november 2015, this is a 5 months difference and thats huge , during this period there are 402 appointments only, why there wasn't more appointments during this period, i find it also weird that after march 2016 it shows significant growth for appointments. was the selection process for the sample biased?, if so this could mean that calculations above are insignificant and could be wrong.\n- Most of the data attributes like `diabetes`, `no_show` , `sms_received`, `hipertension` and `scholarship` are imbalanced, and it is difficult to do classification based on them.\n- One of these imbalance issues is demonstrated regarding `sms_received` and `no_show` attributes, and at some point it shows that the `no_show` rate for the group who recieved SMS is high than that of the group who didn't receive an SMS, which is counterintuitive.\n- There is a large portion of the data numerically considered as outliers, and after removing the reschedules to analyse the actual appointments, we're down from 110,527 to 67,750 entries, which make certain categories in some attributes of the data set more or less at a critical state to run analysis on.","7f0d1fe9":"### How many appointments patients did not show up for?","a7e12f34":"- After doing a little research on kaggle , i found this [message](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments\/discussion\/29699#229356) from the data set creator stating that the numbers in `handcap` column refers to the amount of disabilities that the patient is suffering from. so nothing to be changed.","571d533d":"- 93 Saturday\n- 94 Sunday\n- 95 Mon (4-april-2016) **unclear**\n- 100 Saturday\n- 101 Sunday\n- 107 Saturday\n- 108 Sunday\n- 112 Thu (21-april-2016) [Tiradentes Day](https:\/\/www.calendarlabs.com\/holidays\/brazil\/2016#:~:text=Apr%2021%2C%202016-,Tiradentes%20Day,-Sunday)\n- 113 Fri (22-april-2016) **unclear** possibly to link with Saturday\n- 114 Saturday\n- 115 Sunday\n- 121 Saturday\n- 122 Sunday\n- 135 Saturday\n- 136 Sunday\n- 142 Saturday\n- 143 Sunday\n- 144 Mon (23-May-2016) **unclear**\n- 147 Thu (26-May-2016) [Corpus Christi](https:\/\/www.calendarlabs.com\/holidays\/brazil\/2016#:~:text=May%2026%2C%202016-,Corpus%20Christi,-Wednesday)\n- 148 Fri (27-May-2016) **unclear** possibly to link with Saturday\n- 149 Saturday \n- 150 Sunday","0aa66437":"<a id='bi'><\/a>\n# Bivariate Exploration","3bb166d2":"### How does age distribution look like?","81b14d59":"#### Setting up a new column (waiting_days) to describe how many days between:\n- Schedule day : the day the patient set up an appointment day in the future.\n- Appointment day: the day the patient was expected to show up.","b7ea0cab":"- Prior to the previous markdown cell , it clearly states that `0` means No sms recieved and `1` means message sent , so i will change nothing.","63f34032":"### Are there any particular waiting days associated with more pre-schedueled appointments?","4479c63e":"#### Year distribution","967c47cf":"### How many appointments had someone with scholarship program?","0514bca4":"<a id='intro'><\/a>\n## Introduction\n\n### In this report we will investigate 110,527 medical appointments & its 14 associated variables.\n\nThe following is the data description that is found on [Kaggle](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments).<br \/>\n<br \/>\n- PatientId: Identification of a patient.\n- AppointmentID: Identification of each appointment.\n- Gender: Male or Female.\n- Schedule day : the day the patient set up an appointment day.\n- Appointment day: the day the patient was expected to show up.\n- Age: How old is the patient.\n- Neighbourhood: Where the appointment takes place.\n- Scholarship: True of False.\n- Hipertension: True or False.\n- Diabetes: True or False.\n- Alcoholism: True or False.\n- Handcap: True or False.\n- SMS_received: 1 or 0.\n- No-show: 1 or 0.","524b6acb":"Although gaps should represent Days off on saturday and sunday, some gaps seem to be **bigger** than two days. To investigate this phenomenon,I'm using [Days of Year calender](https:\/\/asd.gsfc.nasa.gov\/Craig.Markwardt\/doy2016.html) and [official brazil holidays in 2016](https:\/\/www.timeanddate.com\/holidays\/brazil\/2016#:~:text=20%20Mar,Government%20Holiday) to explain the reasoning behind these wide gaps.","169c9aa5":"### What are the congested  hours for scheduling appointments?","caa1016f":"Looks like we have 5 invalid entries, one (-6 days) and four (-1 days) , I'm not sure why they exist , but I decided to remove them.","c8dcb116":"<a id='time'><\/a>\n## Timestamp analysis","855b5e5d":"### What do the peaks represent in the waiting days distribution?","8ee278f9":"Again, since the diagonal has the highest counts, the heat map depicts the tendancy to schedule appointments by weekly basis, as shown before in the univariate analysis for the waiting days.","0d1f0568":"### How does age group distripution look like?","a8203d0b":"### Does waiting more days relates to not attending appointments?","242a9092":"It's hard to tell, because the quantity of patients who recieved SMS compared to ones who didn't isn't balanced, and the results are **counterintuitive**, in an ideal case we would need the same amount people to receive SMS , and then perfom A\/B test to see if the difference is statistically significant to indicate whether `no_shows` are associated with more or less patients who recieved SMS.","3d92c38e":"Month distribution","03f0f13d":"There is also an interesting multimodal pattern!","1158f1bb":"### How many appointments involved a handicaped patient?","f7d58c2c":"### Are there certain hourly scheduling times associated with a specific age group?","dcb71ae3":"Notice how duplicates re-emerged, we will address this later.","214e4b7a":"### How many appointments patients were sent a SMS?","f63ec309":"While the change in the likelihood of not showing up for an appointment **isn't significant**, we can spot a positive correlation between 7AM and 11AM , and between 1PM and 4PM","f4adf511":"### Do patients tend to reschedule their appointments?","89fb6422":"We have atleast 46666 unqiue patients, and some of them had up to 62 appointments, quite strange, lets check patient ID 8.221460e+14","2b944045":"I've discovered something interesting, it seems there is **rescheduling phenomenon** occuring during same day, here is a sequence of appointments for patient number `8221460` ","80c094ca":"### What does the distribution for neighbourhoods look like?"}}