{"cell_type":{"00161187":"code","247f8151":"code","3603f28c":"code","be78ba0b":"code","0f574dbe":"code","ac94726d":"code","98b14b58":"code","ddab203d":"code","92018944":"markdown","ebecc33d":"markdown","2b552a31":"markdown","2416d184":"markdown","6022ddd4":"markdown","c10fd957":"markdown","2236452f":"markdown","7d55ae1f":"markdown"},"source":{"00161187":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","247f8151":"# Lists in python\n# Printing the car brand names in list\nmy_list=[ \"Maruti\",\"Hyundai\" , \"Toyota\", \"Tata Motors\" , \"Mahindra\", \"Kia\"]\nprint(my_list)","3603f28c":"# Accessing the elements of the list by index\n\nmy_list=[ \"Maruti\",\"Hyundai\" , \"Toyota\", \"Tata Motors\" , \"Mahindra\", \"Kia\"]\nprint(my_list[0])# it will print the elemnet at the index 0\nprint(my_list[1])\nprint(my_list[2])\nprint(my_list[3])\nprint(my_list[4])\nprint(my_list[5])\n","be78ba0b":"# Negative Indexing In the List\nmy_list=[ \"Maruti\",\"Hyundai\" , \"Toyota\", \"Tata Motors\" , \"Mahindra\", \"Kia\"]\n\nprint(my_list[-1])# here -1 refers to the last index item\nprint(my_list[-2])\nprint(my_list[-3])\nprint(my_list[-4])\nprint(my_list[-5])\n\n","0f574dbe":"# when we slice the list , the starting index is exclusive but the end index is inclusive \n\nmy_list=[ \"Maruti\",\"Hyundai\" , \"Toyota\", \"Tata Motors\" , \"Mahindra\", \"Kia\"]\n\nprint(my_list[0:5]) # this will print elements from index 0 to 5\nprint(my_list[0:2]) # this will print elements from index 0 to 2\nprint(my_list[0:3]) # this will print elements from index 0 to 3\n\nprint(my_list[0:4])# this will print elements from index 0 to 4\nprint(my_list[0:5])# this will print elements from index 0 to 5\n\n","ac94726d":"# list are immutable , meaning their elements can be changed unlike string or tuple\n\nmy_list=[ \"Maruti\",\"Hyundai\" , \"Toyota\", \"Tata Motors\" , \"Mahindra\", \"Kia\"]\nmy_list[0]=\"Volkswagen\";# this  will change the item at index 0 to Volkswagen\nprint(my_list)\n# it will change the 2nd item to 3th item\nmy_list[1:3]=['Audi',\"BMW\",\" Porsche\"]\nprint(my_list)\n\n","98b14b58":"numbers=[2,3,4,5,6,7]\n# this will add 8 to the list\nnumbers.append(8)\nprint(numbers)\n# if you want to add more than 2 numbers then u will use\nnumbers.extend([9,11,13])\nprint(numbers)\n# this will print re 3 times \nprint([\"re\"]*3)\n# now see if we want to print hello 5 times this is called repeating of lists\nprint([\"hello\"]*5)\n# insert() Method \n# this will give 3 at index 1\nnumbers.insert(1,3)\nprint(numbers)","ddab203d":"numbers=[2,3,4,5,6,7]\n# this will delete the item at specific index\ndel numbers[3]\nprint(numbers)\n# deleting multiple items \ndel numbers[1:3]\nprint(numbers)\n# this will delete the entire list\n#del numbers\n# see if you print this list after deleting the list then you will find error\n#print(numbers)\n# we can also use remove() or pop() method to remove an item at the given index \n# the pop()  method removes and returns the last item if the index is not provided\nnumbers.remove(2)\nprint(numbers)\nnumbers2=[6,7,8,9,10]\nnumbers2.pop(4)\nprint(numbers2)\n","92018944":"# Deleting the element in the list","ebecc33d":"# Negative Indexing In Python List","2b552a31":"# List Slicing In Python\n\n","2416d184":"# Python List Methods \n''' append() : it adds an element to the last of the list\n''' extend() : adds all the element of the list to another list\n''' insert() : add elemnet at the defined index \n''' remove() : removes the item from the list \n''' pop()  : returns and remove an element at given index \n''' clear() : removes all the items from the list ","6022ddd4":"# Changing the Elements In The List","c10fd957":"# Printing the Lists In Python","2236452f":"#  Appending and Extending lists in Python \n","7d55ae1f":"# Accessing the elements of the list by index"}}