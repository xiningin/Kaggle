{"cell_type":{"fcbe83d5":"code","a06b0d16":"code","af1dd7c4":"code","34a3d12f":"code","df020202":"code","c3ceace3":"code","d470e476":"code","ad96fb62":"code","184a3acb":"code","1b01c3ff":"code","1c3458a9":"code","eb7de28b":"code","9c9bebfa":"code","2a3d73f6":"code","a3b98992":"code","9dec331e":"code","64266c96":"code","688671f7":"code","d8de1f84":"code","53337c9b":"code","289aac33":"code","5de981e5":"code","8d715ef7":"code","b08f2128":"code","baa62acb":"code","60d9184b":"code","07056ae7":"code","07248aa5":"code","4b16c541":"code","0e5fd579":"code","d416fef2":"code","2e6a07d9":"code","39b14ef6":"code","ae1bee03":"code","1161d659":"code","1f1e3638":"code","301bcd7f":"code","fa41b998":"code","d41df174":"code","1952edaf":"code","5bbe9ef4":"markdown","e939640d":"markdown","3830331d":"markdown","e1611ff7":"markdown","4a24c0de":"markdown","66dfb6b1":"markdown","d3bdb8ec":"markdown","f908c596":"markdown","24c9009c":"markdown","3d74faed":"markdown","884e5451":"markdown","fe9e047d":"markdown","b7e31988":"markdown","808e8f37":"markdown","558ca29f":"markdown","016b7e5b":"markdown","bdf07316":"markdown","c2604985":"markdown","1ec84af3":"markdown","813aaa74":"markdown","6b073e0f":"markdown","129f12ee":"markdown","a45c765b":"markdown","646b8dbc":"markdown","652482c0":"markdown"},"source":{"fcbe83d5":"\n\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom datetime import datetime as dt\n\n\nfrom sklearn.feature_selection import f_classif, mutual_info_classif\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler, MinMaxScaler, PolynomialFeatures\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\n\nfrom sklearn.metrics import plot_confusion_matrix, plot_roc_curve, plot_precision_recall_curve, confusion_matrix, mean_squared_error, accuracy_score, precision_score, brier_score_loss\nfrom sklearn.metrics import auc, roc_auc_score, roc_curve, recall_score, f1_score, log_loss, average_precision_score\n\n\nfrom statistics import mode\nfrom sklearn import preprocessing\nfrom pandas import Series\nfrom sklearn.model_selection import GridSearchCV\nimport pandas_profiling\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/output'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","a06b0d16":"RANDOM_SEED=42","af1dd7c4":"train_data = pd.read_csv(\"\/kaggle\/input\/sf-dst-scoring\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/sf-dst-scoring\/test.csv\")\nsample=pd.read_csv('\/kaggle\/input\/sf-dst-scoring\/sample_submission.csv')\ntest_data.info()","34a3d12f":"#\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u0447\u0435\u0442\u0430 \u0441\u0442\u0430\u0442.\u0432\u0435\u043b\u0438\u0447\u0438\u043d \u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\n#\u0414\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\ndef plot_str(df,col):\n\n    print('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u0430 (\u043d\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439):', col)\n    fig,ax=plt.subplots()\n    sns.countplot(x=df.loc[:,col], ax=ax)\n    plt.show()\n#\u043f\u043e\u0438\u0441\u043a \u043f\u0443\u0441\u0442\u044b\u0445  Nan \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u043e\u043c  \u0441\u0442\u043e\u043b\u0431\u0446\u0435, \u0440\u0430\u0441\u0447\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n    n=100-(df[col].count()\/df.shape[0]*100)\n    print('\u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 ', len(df[col].dropna().unique()))\n    print ('\u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439,%', round(n,2))\n    df.default.unique()\n\n#\u0414\u043b\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\ndef plot_num (df,col_name, borders=None):\n    sns.set(rc={'figure.figsize':(5, 5)})\n    print('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u0430 (\u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439):', col_name)\n    \n    fig,ax=plt.subplots()\n    df.loc[:,col_name].hist(ax=ax)\n    ax.set_xlabel(col_name)\n    ax.set_ylabel('\u043a\u043e\u043b-\u0432\u043e')\n    plt.show()\n    print (df[col_name].count())\n    print (df.shape[0])\n\n    n=100-(df[col_name].count()\/df.shape[0]*100)\n    print ('\u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439,%', round(n,2))\n    \n    if borders is not None:\n        print ('\u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044e ', borders)\n        display(df[(~df.loc[:,col_name].between(borders[0],borders[1]))&pd.notnull(df.loc[:,col_name])])\n\n#\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \"\u0443\u0441\u043e\u0432\"  \ndef get_boxplot(df,column):\n    fig, ax = plt.subplots(figsize = (5, 5))\n    sns.boxplot(x='default', y=column, \n                data=df.loc[df.loc[:, column].isin(df.loc[:, column].value_counts().index[:30])],\n               ax=ax)\n    plt.xticks(rotation=45)\n    ax.set_title('Boxplot \u0434\u043b\u044f ' + column)\n    plt.show()   \n    \n#\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e \u0440\u0430\u0441\u0447\u0435\u0442\u0443 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430 \u0441\u0442\u044c\u044e\u0434\u0435\u043d\u0442\u0430 \u0438\u0437 \ndef get_stat_dif(df,column):\n    cols = df.loc[:, column].value_counts(dropna =True).index[:30]\n    combinations_all = list(combinations(cols, 2))\n    for comb in combinations_all:\n        if ttest_ind(df.loc[df.loc[:, column] == comb[0], 'score'], \n                        df.loc[df.loc[:, column] == comb[1], 'score']).pvalue <= 0.05\/len(combinations_all): # \u0423\u0447\u043b\u0438 \u043f\u043e\u043f\u0440\u0430\u0432\u043a\u0443 \u0411\u043e\u043d\u0444\u0435\u0440\u043e\u043d\u0438\n            print('\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438', column)\n            break\n#\u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 ROC AUC \u043a\u0440\u0438\u0432\u043e\u0439 \ndef roc(y_test, y_probs):\n    sns.set(rc={'figure.figsize':(5, 5)})\n\n    fpr, tpr, threshold = roc_curve(y_test, y_probs)\n    roc_auc = roc_auc_score(y_test, y_probs)\n    plt.figure()\n    plt.plot([0, 1], label='Baseline', linestyle='--')\n    plt.plot(fpr, tpr, label = 'Regression')\n    plt.title('Logistic Regression ROC AUC = %0.5f' % roc_auc)\n    plt.ylabel('True Positive Rate')\n    plt.xlabel('False Positive Rate')\n    plt.legend(loc = 'lower right')\n    plt.show()\n\n# \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 confusion matrix    \ndef conf_matrix(lastmodel,X_test,y_test):\n    sns.set(rc={'figure.figsize':(5, 5)})\n    \n    class_names = ['NonDefault', 'Default']\n    titles_options = [(\"Confusion matrix\", None)]\n    for title, normalize in titles_options:\n        disp = plot_confusion_matrix(lastmodel, X_test, y_test, \n                                     display_labels=class_names, \n                                     cmap=plt.cm.Blues, \n                                     normalize=normalize)\n        disp.ax_.set_title(title)\n\n        print(title)\n        print(disp.confusion_matrix)\n\n    plt.show()\n#\u041c\u0435\u0442\u0440\u0438\u043a\u0438\ndef metrics(Y_valid, Y_pred):\n    print('accuracy_score: {}'.format(np.round(accuracy_score(Y_valid, Y_pred), 4)))\n    print('f1_score: {}'.format(np.round(f1_score(Y_valid, Y_pred), 4)))\n    print('precision_score: {}'.format(np.round(precision_score(Y_valid, Y_pred), 4)))\n    print('recall_score: {}'.format(np.round(recall_score(Y_valid, Y_pred), 4)))\n    \n# \u0421\u0430\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ndef impotant_cols(df,cols, data):\n  imp_num = pd.Series(f_classif(df[df['test_file'] == 0][cols], df[df['test_file'] == 0]['default'])[0], index = cols)\n  imp_num.sort_values(inplace = True)\n  imp_num.plot(kind = 'barh', figsize=(15,10))\n  return ''    \n\n#\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\ndef split_train_valid (union_df, train_label, test_file_label, target):\n    df=union_df.copy()\n    X_train=df[df[train_label]==1].drop (columns=[target,train_label,test_file_label,'client_id'])\n    Y_train=df[df[train_label]==1][target] \n    \n    X_valid=union_df[(union_df[train_label]==0) & (union_df[test_file_label]==0)].drop (columns=[target,train_label,test_file_label,'client_id']) \n    Y_valid=union_df[(union_df[train_label]==0) & (union_df[test_file_label]==0)][target]\n    \n    return X_train, X_valid, Y_train, Y_valid #, test_file\n","df020202":"#\u0413\u0440\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445\nsns.set(rc={'figure.figsize':(10, 3)})\ncols = train_data.columns[2:33] # 30 \u043a\u043e\u043b\u043e\u043d\u043e\u043a\n\n# \u0436\u0435\u043b\u0442\u044b\u0439 - \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0441\u0438\u043d\u0438\u0439 - \u043d\u0435 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435\ncolours = ['#000099', '#ffff00'] \nsns.heatmap(data=train_data[cols].notnull(), cmap=sns.color_palette(colours))\nplt.show()\nprint ('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439')\nsns.set(rc={'figure.figsize':(5, 5)})\nprint(train_data['default'].value_counts(normalize=True))\n\n#\u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f\nfig,ax=plt.subplots()\nsns.countplot(x=train_data['default'], ax=ax)\nplt.show()\n\nprint ('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441 \u043d\u0435\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u043e\u0439 \u0433\u0440\u0430\u0444\u043e\u0439 \"\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\"')\nfig,ax=plt.subplots()\nprint(train_data[train_data.education.isnull()]['default'].value_counts(normalize=True))\nsns.countplot(x=train_data[train_data.education.isnull()]['default'], ax=ax)\nplt.show()\n\ntrain_data.head()","c3ceace3":"#\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0441\u043f\u0438\u0441\u043a\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445, \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 \u0431\u0443\u043b\u0435\u0432\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\nnum_cols=['client_id', 'age', 'decline_app_cnt', 'bki_request_cnt', 'income','score_bki']\ncat_cols=['education', 'home_address','work_address', 'sna', 'app_date', 'first_time','region_rating']\nbool_cols=['sex', 'car', 'car_type', 'good_work', 'foreign_passport']","d470e476":"fig, axes = plt.subplots(1, 6, figsize=(25,5))\nfor col, i in zip(num_cols, range(6)):\n    sns.histplot(train_data[col], kde=False, ax=axes.flat[i])\nplt.show()    \n\n#\u0421\u0442\u0440\u043e\u0438\u043c boxplot \u0434\u043b\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n\n\nfor column in num_cols:\n    print (column)\n    get_boxplot(train_data,column)\n\n","ad96fb62":"for column in train_data.columns:\n    if (column in cat_cols or column in bool_cols)  and column not in ['index', 'app_date', 'default']:    \n        plot_str(train_data,column)","184a3acb":"#\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c test \u0438 train \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n#\u0434\u043e\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0442\u0435\u0441\u0442 \u043a\u043e\u043b\u043e\u043d\u043a\u043e\u0439 default, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432 \u043d\u0435\u043c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\ntest_data['default'] = 0\n# test_file=1 - \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0439\u0434\u0443\u0442 \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u0443\u044e \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443\n# test_file=0 - \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0442\u043e\u043c \u043f\u043e\u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u044e \u0438 \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0438\n\ntrain_data['test_file'] = 0\ntest_data['test_file'] = 1\ntest_data['train'] = 0\nXt = train_data\n\n# \u0414\u0435\u043b\u0438\u043c train \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e\nX_train, X_valid=train_test_split(Xt, train_size=0.7, random_state=42, stratify=Xt.default)\n\n\nX_train['train']=1\nX_valid['train']=0\ntrain_data=X_train.append(X_valid, sort=False)\nunion_data = test_data.append(train_data, sort=False)\nunion_data.train=union_data.train.fillna(0)","1b01c3ff":"#\u041f\u0440\u0435\u0431\u043e\u0440\u0430\u0437\u0443\u0435\u043c \u0434\u0430\u0442\u0443\nunion_data['app_date_date'] = pd.to_datetime(union_data['app_date'])\n#\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438\nunion_data['date_dow']= union_data['app_date_date'].apply(lambda x: dt.weekday(x))\n#\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \u043c\u0435\u0441\u044f\u0446, \u0433\u043e\u0434\nunion_data['date_month']= union_data['app_date_date'].map(lambda x: x.month)\nunion_data['date_year']= union_data['app_date_date'].map(lambda x: x.year)\n#\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \u0434\u0430\u0432\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u044f\u0432\u043a\u0438\nunion_data['date_age']= union_data['app_date_date'].apply(lambda x: (dt.today()-x).days )\n#\u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446\nunion_data.drop('app_date', axis=1, inplace=True)\n","1c3458a9":"union_data[union_data['train']==1]","eb7de28b":"print(union_data[union_data['test_file']==0].date_year.value_counts()) \nprint(union_data[union_data['test_file']==0].date_month.value_counts() )\nprint(union_data[union_data['test_file']==0].date_dow.value_counts()) \nfig,ax=plt.subplots()\nsns.countplot(union_data[union_data['test_file']==0]['date_dow'], ax=ax)\nplt.show()\nfig, axes = plt.subplots(figsize=(10,5))\nsns.boxplot(x=union_data[union_data['test_file']==0]['default'], y=union_data['date_dow'])\nplt.show()\nfig, axes = plt.subplots(figsize=(10,5))\nsns.boxplot(x=union_data[union_data['test_file']==0]['default'], y=union_data['date_age'])\n","9c9bebfa":"print(union_data.education.unique())\ndict_ed = {'GRD':1, 'SCH':2, 'UGR':3, 'PGR':4, 'ACD':5}\ndict_ed\nunion_data['education_cod'] = union_data['education'].map(dict_ed)\nunion_data.head()","2a3d73f6":"# \u041f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - \u043d\u043e\u0432\u044b\u0439 \u0432\u0438\u0434 \u043a\u0430\u0442\u0435\u0433\u043e\u0438\u0440\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\nunion_data['education_cod']=union_data['education_cod'].fillna(6)\n#\u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446\nunion_data.drop('education', axis=1, inplace=True)","a3b98992":"#\u041a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\nlabel_encoder = LabelEncoder()\nfor c in bool_cols:\n    union_data[c] = label_encoder.fit_transform(union_data[c])\n     \nunion_data.head()","9dec331e":"#\u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043b\u0438\u0448\u043d\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0438 \u0441\u0442\u0440\u043e\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \"\u043d\u0430\u0438\u0432\u043d\u0443\u044e\" \u043c\u043e\u0434\u0435\u043b\u044c\nunion_data.drop(['app_date_date', 'date_month', 'date_year'], axis=1, inplace=True)\n","64266c96":"\nX_train, X_valid, Y_train, Y_valid=split_train_valid (union_data, 'train', 'test_file', 'default')\nmodel_0 = LogisticRegression(solver='liblinear')\nmodel_0.fit(X_train, Y_train)\nY_pred = model_0.predict(X_valid)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c ROC AUC \n\nprobs = model_0.predict_proba(X_valid)\nprobs = probs[:,1]\nroc(Y_valid,probs)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043e\u043a\n\nconf_matrix(model_0,X_valid,Y_valid)\n\n# \u043c\u0435\u0442\u0440\u0438\u043a\u0438\nmetrics(Y_valid, Y_pred)","688671f7":"plt.rcParams['figure.figsize'] = (15,10)\n\nmatrix = np.triu(union_data[union_data['test_file'] == 0].corr())\nsns.heatmap(union_data.corr(), annot=False, mask=matrix, cmap= 'coolwarm')","d8de1f84":"impotant_cols(union_data,union_data[union_data['test_file'] == 0].columns, union_data.default)","53337c9b":"def quant_4 (data, col): #quant=0.25 \u0438\u043b\u0438 0.75\n   # print (data,col)\n    IQR = data[col].quantile(q=0.75) - data[col].quantile(0.25)\n    print ('IQR ',IQR)\n    perc75 = data[col].quantile(0.75)\n    \n    high_border = perc75 + 1.5*IQR\n    print ('high_border ',round(high_border,0))\n    data[col] = data[col].apply(lambda x: high_border if x>high_border else x)\n    return data\n\n#quant_4(union_data,'decline_app_cnt')\n#\u0437\u0430\u043c\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u043d\u044b\u0445 \u0437\u0430\u044f\u0432\u043e\u043a \u0441\u0438\u043b\u044c\u043d\u043e \u0443\u0445\u0443\u0434\u0448\u0438\u043b\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.\n\n#quant_4(union_data,'bki_request_cnt')\n#quant_4(union_data,'income')\nunion_data.info()","289aac33":"union_data['income_cat']=union_data['income'].copy()\n#\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0434\u043e\u0445\u043e\u0434\u0430\nunion_data['income_cat']=union_data['income_cat'].apply(lambda x: 0 if x<=20000 else (1 if 20<x<=40 else (2 if 40<x<=60 else (3 if 60<x<=80 else 4))) )\nmean_income=pd.DataFrame(union_data.groupby('region_rating')['income'].mean())\n#\u0414\u043e\u0445\u043e\u0434 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\nmean_income.columns=['income_y']\nunion_data=union_data.merge(mean_income, how='left', left_on='region_rating',  right_on='region_rating' )\nunion_data['income_reg']=union_data['income']\/union_data['income_y']\nunion_data=union_data.drop(columns=['income_y'])","5de981e5":"union_data['address']=union_data['home_address']+union_data['work_address']\nunion_data['car']=union_data['car']+union_data['car_type']\n\nunion_data=union_data.drop(columns=['home_address','work_address','car_type'])","8d715ef7":"\ncolumn_names_to_normalize = ['date_age','income', 'decline_app_cnt']#'date_age']'bki_request_cnt',\n\nX= union_data[column_names_to_normalize].values\nMinMaxScaler = StandardScaler()\nx_scaled = MinMaxScaler.fit_transform(X)\ndf_temp = pd.DataFrame(x_scaled, columns=column_names_to_normalize, index = union_data.index)\nunion_data[column_names_to_normalize] = df_temp\n","b08f2128":"\n# \u0414\u0435\u043b\u0438\u043c train \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e\nX_train, X_valid, Y_train, Y_valid=split_train_valid (union_data, 'train', 'test_file', 'default')\n\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c:\n\nmodel_1 = LogisticRegression(solver='liblinear')\nmodel_1.fit(X_train, Y_train)\nY_pred = model_1.predict(X_valid)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c ROC AUC \n\nprobs = model_1.predict_proba(X_valid)\nprobs = probs[:,1]\nroc(Y_valid,probs)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043e\u043a\n\nconf_matrix(model_1,X_valid,Y_valid)\n\n# \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438\nmetrics(Y_valid, Y_pred)\n","baa62acb":"num_cols\ncols_to_ln=['age','decline_app_cnt','income']#'bki_request_cnt',\n#\u041e\u043f\u044b\u0442\u043d\u044b\u043c \u043f\u0443\u0442\u0435\u043c \u0432\u044b\u044f\u0441\u043d\u0435\u043d\u043e, \u0447\u0442\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 bki_request_cnt \u043d\u0435 \u0443\u043b\u0443\u0447\u0448\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c, \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0435\u0433\u043e \u0438\u0437 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\n\nfig, axes = plt.subplots(1, 3, figsize=(20,5))\nprint ('\u0414\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f')\nfor col, i in zip(cols_to_ln, range(3)):\n    sns.histplot(union_data[col], kde=False, ax=axes.flat[i])\nplt.show()\nunion_data_ln=union_data.copy()\n#(np.log(union_data[cols_to_ln]+1)).hist(figsize=(25,10),bins=100)\nfor i in cols_to_ln:\n    union_data_ln[i] = np.log(union_data[i]+1)\n\nfig, axes = plt.subplots(1, 3, figsize=(20,5))    \nprint ('\u041f\u043e\u0441\u043b\u0435 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f')\nfor col, i in zip(cols_to_ln, range(3)):\n    sns.histplot(union_data_ln[col], kde=False, ax=axes.flat[i])\nplt.show()    ","60d9184b":"# \u0414\u0435\u043b\u0438\u043c train \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e\nX_train, X_valid, Y_train, Y_valid=split_train_valid (union_data_ln, 'train', 'test_file', 'default')\n#\u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c:\n\nmodel_1_1 = LogisticRegression(solver='liblinear')\nmodel_1_1.fit(X_train, Y_train)\nY_pred = model_1_1.predict(X_valid)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c ROC AUC \n\nprobs = model_1_1.predict_proba(X_valid)\nprobs = probs[:,1]\nroc(Y_valid,probs)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043e\u043a\n\nconf_matrix(model_1_1,X_valid,Y_valid)\n\n# \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438\nmetrics(Y_valid, Y_pred)\n","07056ae7":"union_data.head()\npoly_cols=['age','decline_app_cnt', 'score_bki', 'bki_request_cnt', 'income', 'date_age']","07248aa5":"#\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\"\"\"\npf = PolynomialFeatures(2)\n#\u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435, \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u0435\u0433\u043e \u043a \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439\"\"\"\npoly_data = pf.fit_transform(union_data_ln[poly_cols])[:, len(poly_cols):]\npoly_cols = pf.get_feature_names()[len(poly_cols):]\npoly_df = pd.DataFrame(poly_data, columns=poly_cols)\nunion_data_ln_poly = union_data_ln.join(poly_df, how='left')\n","4b16c541":"union_data_ln_poly","0e5fd579":"impotant_cols(union_data_ln_poly,union_data_ln_poly[union_data_ln_poly['test_file'] == 0].columns, union_data_ln_poly.default)","d416fef2":"#\u041e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nunion_data_ln_poly=union_data_ln_poly[['default','client_id','test_file','train','score_bki','sna', 'first_time','address','decline_app_cnt', 'region_rating', 'bki_request_cnt', 'foreign_passport',\n                                       'income','income_reg','car','good_work','date_age', 'education_cod','age','sex', 'x0^2','x2 x3']]\n#dummy - \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\n#\u041f\u043e \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u044b \u0438\u0437 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438:\n#'x0 x3','income_cat',,'income_cat'\nunion_data_ln_poly_dum = pd.get_dummies(union_data_ln_poly, columns=['education_cod', 'sna', 'first_time', 'address','sex', 'car', 'good_work', 'foreign_passport','region_rating'], dummy_na=False)","2e6a07d9":"plt.rcParams['figure.figsize'] = (15,10)\n\nmatrix = np.triu(union_data_ln_poly_dum[union_data_ln_poly_dum['test_file'] == 0].corr())\nsns.heatmap(union_data_ln_poly_dum.corr(), annot=False, mask=matrix, cmap= 'coolwarm')","39b14ef6":"# \u0414\u0435\u043b\u0438\u043c train \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e\nX_train, X_valid, Y_train, Y_valid=split_train_valid (union_data_ln_poly_dum, 'train', 'test_file', 'default')\n#'decline_app_cnt',\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c:","ae1bee03":"# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c: \n\nC= 1 #\u041a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u041f\u0440\u0438 \u0443\u0441\u0438\u043b\u0435\u043d\u0438\u0438 \u0438\u043b\u0438 \u043e\u0441\u043b\u0430\u0431\u043b\u0435\u043d\u0438\u0438 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0430\u0434\u0430\u0435\u0442 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435\nclass_weight='balanced'#\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u043a\u0430\u043a \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443. \u041d\u0438\u0436\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u044b \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u0431\u0430\u043b\u0430\u043d\u0438\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \n\nn_jobs=1\nmodel = LogisticRegression(C=C, n_jobs=n_jobs, solver='liblinear', class_weight=class_weight ,penalty='l2',max_iter = 1000)\nmodel.fit(X_train, Y_train)\nY_pred = model.predict(X_valid)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c ROC AUC \n\nprobs = model.predict_proba(X_valid)\nprobs = probs[:,1]\nroc(Y_valid,probs)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043e\u043a\n\nconf_matrix(model,X_valid,Y_valid)\n\n# \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438\nmetrics(Y_valid, Y_pred)","1161d659":"union_data_ln_poly_dum","1f1e3638":"from imblearn.under_sampling import NearMiss, TomekLinks, RandomUnderSampler\nR = RandomUnderSampler()\nnm = NearMiss()\nX_train_miss, Y_train_miss = R.fit_resample(X_train, Y_train)\n\nprint('\u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u043a\u043e\u043b-\u0432\u043e \u043c\u0435\u0442\u043e\u043a \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c default=1: {}'.format(sum(Y_train_miss == 0)))\nprint('\u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u043a\u043e\u043b-\u0432\u043e \u043c\u0435\u0442\u043e\u043a \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c default=0: {}'.format(sum(Y_train_miss == 1)))","301bcd7f":"# \u0414\u0435\u043b\u0438\u043c train \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e\n#X_train, X_valid, Y_train, Y_valid=split_train_valid (union_data, 'train', 'test_file', 'default')\n#\u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c:\n\nmodel_2_1 = LogisticRegression(solver='liblinear')\nmodel_2_1.fit(X_train_miss, Y_train_miss)\nY_pred = model_2_1.predict(X_valid)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c ROC AUC \n\nprobs = model_2_1.predict_proba(X_valid)\nprobs = probs[:,1]\nroc(Y_valid,probs)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043e\u043a\n\nconf_matrix(model_2_1,X_valid,Y_valid)\n\n# \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438\nmetrics(Y_valid, Y_pred)","fa41b998":"from imblearn.over_sampling import SMOTE, ADASYN,RandomOverSampler\n#oversample = SMOTE()\noversample = RandomOverSampler(sampling_strategy='minority')\nX_train_over, Y_train_over = oversample.fit_resample(X_train, Y_train)\n\n#nm = NearMiss()\n#X_train_miss, Y_train_miss = nm.fit_resample(X_train, Y_train.ravel())\n\nprint('\u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u043a\u043e\u043b-\u0432\u043e \u043c\u0435\u0442\u043e\u043a \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c default=1: {}'.format(sum(Y_train_over == 0)))\nprint('\u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u043a\u043e\u043b-\u0432\u043e \u043c\u0435\u0442\u043e\u043a \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c default=0: {}'.format(sum(Y_train_over == 1)))\n\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c:\n\nmodel_2_2 = LogisticRegression(solver='liblinear')\nmodel_2_2.fit(X_train_miss, Y_train_miss)\nY_pred = model_2_2.predict(X_valid)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c ROC AUC \n\nprobs = model_2_2.predict_proba(X_valid)\nprobs = probs[:,1]\nroc(Y_valid,probs)\n\n# \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043e\u043a\n\nconf_matrix(model_2_2,X_valid,Y_valid)\n\n# \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438\nmetrics(Y_valid, Y_pred)\n","d41df174":"# \u0414\u0435\u043b\u0438\u043c train \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0432\u0430\u043b\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e (\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0412\u0421\u042e \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443)\nX_train=union_data_ln_poly_dum.query('test_file==0').drop (columns=['default','test_file','train','client_id'])\nY_train=union_data_ln_poly_dum.query('test_file==0')['default']\n\n\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c:\n\n\nmodel_total = LogisticRegression(C=C, n_jobs=n_jobs, solver='liblinear', class_weight=class_weight ,penalty='l2',max_iter = 1000)\nmodel_total.fit(X_train, Y_train)","1952edaf":"sub_test_union=union_data_ln_poly_dum.query('test_file==1')\n#display(sub_test)\nsub_test=sub_test_union.drop(['default','test_file','train', 'client_id'], axis=1)\ny_pred_final = model_total.predict_proba(sub_test)[:, 1]\nsubmission = pd.concat([sub_test_union.client_id,pd.Series(y_pred_final,name='default')],axis=1)\ndisplay(submission)\nsubmission.to_csv('submission.csv', index=False)","5bbe9ef4":"### \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u044b\u0432\u043e\u0434\u044b\n1. app_date - \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438: 1. \u0414\u0415\u041d\u042c \u041d\u0415\u0414\u0415\u041b\u0418, 2. \u041c\u0415\u0421\u042f\u0426 3.\u0414\u0410\u0412\u041d\u041e\u0421\u0422\u042c \u0417\u0410\u042f\u0412\u041a\u041c (\u041e\u0422 \u0422\u0415\u041a\u0423\u0429\u0415\u0419 \u0414\u0410\u0422\u042b). \u0421\u0430\u043c \u043f\u043e \u0441\u0435\u0431\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u0442\u043e\u043c \u0443\u0434\u0430\u043b\u0438\u0442\u044c.\n2. education - \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0447\u0430\u0441\u0442\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0449\u0438\u043c\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c - SCH, \u0437\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u0432\u0438\u0434 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0434\u043b\u044f \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0447\u0442\u043e \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c. \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u043a\u043e\u0434\u043e\u043c. \u0417\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f \u0443\u0440\u043e\u0432\u043d\u044f \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f. \n3. sex - \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u043b \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0430 \u043a\u0430\u043a 0 \u0438 1. \u041c\u0443\u0436\u0447\u0438\u043d \u0438 \u0436\u0435\u043d\u0449\u0438\u043d \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0440\u0435\u0434\u0438 \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u043e\u0432.\n4. car, car_type - \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a 0 \u0438 1. \n5. good_work - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0445\u043e\u0440\u043e\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b. \u0442\u0430\u043a\u0436\u0435 \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043a\u0430\u043a 0 \u0438 1\n6. home_address, work_address - \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441\u0430. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043a\u043e\u0440\u0435\u043b\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433 \u0441 \u0434\u0440\u0443\u0433\u043e\u043c \u0438 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c \u0440\u0435\u0433\u0438\u043e\u043d\u0430. \u041d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c.\n7. first_time - \u0434\u0430\u0432\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0435.\n8. foreign_passport - \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u0430\u0433\u0440\u0430\u043d\u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430.\n","e939640d":"\u041f\u043e\u0434\u0431\u043e\u0440 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u043b\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u043e\u043f\u044b\u0442\u043d\u044b\u043c \u043f\u0443\u0442\u0435\u043c. ","3830331d":"### \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","e1611ff7":"\u041e\u0446\u0435\u043d\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043d\u0435 \u043f\u043e\u0432\u043b\u0438\u044f\u043b\u043e \u043d\u0430 \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u043b\u0438\u0448\u044c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u043e \u0435\u0433\u043e. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435, \u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0435\u0441\u0442\u044c, \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.","4a24c0de":"## \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435:\n### 1. \u0427\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b","66dfb6b1":"\u0418\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043d\u0435\u043c:\n1. \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0435 education, \u043f\u043e\u0437\u0436\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0449\u0438\u043c\u0441\u044f \u0437\u043d\u0430\u0435\u043d\u0438\u0435\u043c \u0438\u043b\u0438 \u043d\u043e\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c (\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c\u0441\u044f \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f).\n2. 19 \u043a\u043e\u043b\u043e\u043d\u043e\u043a: \n    7 \u0427\u0438\u0441\u043b\u043e\u0432\u044b\u0445 (client_id, age, decline_app_cnt, bki_request_cnt, income,score_bki,region_rating), \n    6 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 (education, home_address,work_address, sna, app_date, first_time) \u0438 \n    6 \u0431\u0443\u043b\u0435\u0432\u044b\u0445 (sex, car, car_type, good_work, foreign_passport, default)\n3. \u0415\u0441\u0442\u044c \u043e\u0434\u043d\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u0441 \u0434\u0430\u0442\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u043b\u0435\u0436\u0430\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.\n4. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f  - default \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442, \u043d\u043e \u043e\u0447\u0435\u043d\u044c \u043f\u043b\u043e\u0445\u043e \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0430: \u043e\u0446\u0435\u043d\u043a\u0430 default=1 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0440\u0435\u0436\u0435, \u044d\u0442\u043e \u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043a\u0440\u0435\u0434\u0438\u0442\u044b \u0447\u0430\u0449\u0435 \u0434\u0430\u044e\u0442, \u0447\u0435\u043c \u043e\u0442\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0432 \u0432\u044b\u0434\u0430\u0447\u0435 \u043a\u0440\u0435\u0434\u0438\u0442\u0430.\n   \u0412 \u0441\u0432\u044f\u0437\u0438 \u0441 \u044d\u0442\u0438\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c, \u043a\u0430\u043a \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u0432\u043e\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443.","d3bdb8ec":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0414\u0430\u043d\u043d\u044b\u0435, \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0438 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e.","f908c596":"### \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0435\u0434\u0438\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0438\u0437 train  \u0438 test","24c9009c":"\u041f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438. \u0422\u0430\u043a\u0436\u0435 \u0437\u0430\u0448\u0438\u0444\u0440\u0443\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 education \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0443\u0441\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0447\u0430\u0441\u0442\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0449\u0438\u043c\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.\n\u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u044d\u0442\u0438 \u043f\u0443\u0441\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u044c \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0431\u0430\u043b\u0430\u043d\u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0438 \u043d\u0430 \u044d\u0442\u0438\u0445 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0445. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0434\u043b\u044f \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434.\n\n\u041f\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e education: \u0412\u044b\u044f\u0441\u043d\u0435\u043d\u0430 \u0433\u0440\u0430\u0434\u0430\u0446\u0438\u044f \u0443\u0440\u043e\u0432\u043d\u0435\u0439 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432 \u0441\u043e\u043e\u0442\u0432\u0442\u0441\u0432\u0438\u0438 \u0441 \u0443\u0440\u043e\u0432\u043d\u044f\u043c\u0438:\n* 1 - SCH - school - \u0442\u0435, \u0443 \u043a\u043e\u0433\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 (\u0442\u043e\u043b\u044c\u043a\u043e \u0448\u043a\u043e\u043b\u0430).\n* 2 - UGR - undergraduate - \u0431\u0430\u043a\u0430\u043b\u0430\u0432\u0440\u044b.\n* 3 - GRD - \u043c\u0430\u0433\u0438\u0441\u0442\u0440\u044b\n* 4 - PGR - postgraduate - \u0443\u0447\u0451\u043d\u0430\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u044c PhD (\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b \u043d\u0430\u0443\u043a \u043f\u043e-\u043d\u0430\u0448\u0435\u043c\u0443)\n* 5 - ACD - \u0432\u044b\u0441\u0448\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c. \u041c\u043e\u0436\u043d\u043e \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0432\u044b\u0441\u0448\u0435\u0439 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0435\u0439.\n\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0435\u0441\u043b\u0438 \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0442\u044c \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e \u0443\u0440\u043e\u0432\u043d\u044f \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a:\n\nSCH, UGR, GRD, PGR, ACD\n","3d74faed":"## \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f submission","884e5451":"### \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0441\u0438\u043b\u044c\u043d\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 (\u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0445 \u043f\u043e\u043f\u0430\u0440\u043d\u043e)","fe9e047d":"### \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435\u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439: \n\u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043a\u0440\u0438\u0432\u0430\u044f ROC AUC \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043d\u0435\u043f\u043b\u043e\u0445\u043e, \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 (\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c, \u043f\u043e\u043b\u043d\u043e\u0442\u0430, F-\u043c\u0435\u0440\u0430) \u043e\u0447\u0435\u043d\u044c \u043d\u0438\u0437\u043a\u0438\u0435. Accuracy \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0438\u0437-\u0437\u0430 \u044f\u0432\u043d\u043e\u0433\u043e \u0434\u0438\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u043a\u043b\u0430\u0441\u0441\u043e\u0432. \u041f\u043e \u0432\u0438\u0434\u0438\u043c\u043e\u043c\u0443, \u0438\u0437-\u0437\u0430 \u0434\u0438\u0437\u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u043e\u0437\u0438\u0442\u0438\u0432\u043d\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a, \u0432 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0447\u0435\u043c recall \u043e\u0447\u0435\u043d\u044c \u043d\u0438\u0437\u043a\u0438\u0439.\n\u041f\u043b\u0430\u043d:\n1. \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u043e\u0440\u0435\u043b\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u0443\u044e \u043c\u0430\u0442\u0440\u0438\u0446\u0443, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043b\u0438\u0448\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.\n\n2. \u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c dummy-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n3. \u0421\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043f\u043e \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439, \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n4. \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b.","b7e31988":"\u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0434\u0440\u0443\u0433\u0438\u043c (\u043e\u0442\u043b\u0438\u0447\u043d\u044b\u043c \u043e\u0442 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f) \u0432\u0438\u0434\u043e\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0439 \u0432\u0438\u0434 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0432\u043b\u0438\u044f\u043b \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u043b\u0443\u0447\u0448\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 (\u0434\u0430\u043b \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f ROC).","808e8f37":"\u0427\u0443\u0442\u044c \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u043d\u043e \u0434\u0438\u0441\u0431\u0430\u043b\u0430\u043d\u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0441\u0438\u043b\u044c\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438.\n\u0420\u0430\u0441\u0448\u0438\u0440\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e: \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","558ca29f":"### \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432:\n1. \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0434\u043e\u0445\u043e\u0434 \u043d\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c: 0: <20000, 1: \u043e\u0442 20 \u0434\u043e 40\u0442, 2: \u043e\u0442 40 \u0434\u043e 60\u0442, 3: \u043e\u0442 60-80\u0442, 4: >80\n2. \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443.","016b7e5b":"\u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 undersamoling \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 imblearn \u0431\u044b\u043b \u0432\u044b\u0431\u0440\u0430\u043d \u043c\u0435\u0442\u043e\u0434, \u0434\u0432\u0430\u0448\u0438\u0439 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u0438\u0439 \u0440\u043e\u0441\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439. \u0422\u0430\u043a\u0438\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u043c \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f, \u043a\u0430\u043a \u043d\u0438 \u0441\u0442\u0440\u0430\u043d\u043d\u043e, \u043c\u0435\u0442\u043e\u0434 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0443. \u041c\u0435\u0442\u043e\u0434\u044b, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0439 \u043e\u0442\u043e\u0431\u0440\u0430\u0442\u044c \u0441\u043e\u0441\u0435\u0434\u0435\u0439, \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0441\u0435\u0434\u044f\u0445, \u043e\u0442\u0430\u0440\u0431\u043e\u0442\u0430\u043b\u0438 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0445\u0443\u0436\u0435.\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c over_sampling:","bdf07316":"\u043f\u043e\u0441\u043b\u0435 Oversampling \u0442\u0430\u043a\u0436\u0435 \u0432\u0438\u0434\u0438\u043c \u0440\u0435\u0437\u043a\u043e\u0435 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u0432 \u043f\u043e\u043b\u044c\u0437\u0443 \u043b\u043e\u0436\u043d\u043e-\u043d\u0435\u0433\u0430\u0442\u0438\u0432\u043d\u044b\u0445, \u043f\u0440\u0438 \u0442\u043e\u043c, \u0447\u0442\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0442\u0430\u043a\u0438\u043c\u0438 \u0436\u0435. \n### \u0412\u044b\u0432\u043e\u0434 \u043f\u043e Oversampling \u0438 Undersampling\n\u042d\u0442\u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u0430\u044e\u0442 \u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0438\u0434\u043d\u043a\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 (\u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0439 \u043b\u043e\u0433\u0438\u043a\u0438 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043c\u0430 \u0443\u0440\u043e\u0432\u043d\u043e\u0432\u0435\u0448\u0438\u0432\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438.\n\u041f\u043e\u0434\u0431\u043e\u0440 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043a\u0430\u043a \u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u0443\u0440\u0430\u0432\u043d\u043e\u0432\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430. \n\u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u043e\u0434\u0431\u043e\u0440\u0430 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u043f\u043e\u043a\u0430\u0437\u0430\u043b \u0441\u0435\u0431\u044f \u043e\u0447\u0435\u043d\u044c \u043f\u043b\u043e\u0445\u043e, \u043b\u0443\u0447\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043b \u043c\u0435\u0442\u043e\u0434 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438.\n### \u0412\u044b\u0432\u043e\u0434 \u043f\u043e class_weight\n\u041f\u0430\u0440\u043c\u0430\u0435\u0442\u0440 LogisticRegression, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0439 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0432\u0435\u0441\u0430 \u0434\u043b\u044f \u0443\u0440\u0430\u0432\u043d\u043e\u0432\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u043e\u043a\u0430\u0437\u0430 \u0441\u0435\u0431\u044f \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043b\u0443\u0447\u0448\u0435, \u0447\u0435\u043c \u0443\u0440\u0430\u0432\u043d\u043e\u0432\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Oversampling \u0438 Undersampling\n","c2604985":"#### \u0421\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u043e\u0432 \u043f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438, \u0433\u043e\u0434\u0430\u043c \u0438 \u043c\u0435\u0441\u044f\u0446\u0430\u043c:\n\u0412 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0443\u0432\u0438\u0434\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430 2014 \u0433\u043e\u0434, \u0437\u0430 4 \u043f\u0435\u0440\u0432\u044b\u0445 \u043c\u0435\u0441\u044f\u0446\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0433\u043e\u0434 \u0438 \u043c\u0435\u0441\u044f\u0446 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430, \u043f\u043e\u0441\u043a\u043e\u043b\u043a\u0443 \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0430\u043c \u043d\u0435\u043f\u043e\u043b\u043d\u0430\u044f (\u043d\u0435 \u043e\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0433\u043e\u0434).\n\n\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438 \u0437\u0430\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u0442 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f, \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043e \u043b\u043e\u0433\u0438\u0447\u043d\u043e: \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u0430\u044f\u0432\u043e\u043a \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0431\u0443\u0434\u043d\u0438. \n\n\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0442\u0430\u0436\u0435 boxplot \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \"\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438\": \u041e\u0442\u043a\u0430\u0437 \u0438\u043b\u0438 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0437\u0430\u044f\u0432\u043a\u0438 \u043f\u043e \u043a\u0440\u0435\u0434\u0438\u0442\u0443 \u043c\u0430\u043b\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438.\n\n\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043b\u0438 \u043e\u0442\u043a\u0430\u0437 \u043f\u043e \u043a\u0440\u0435\u0434\u0438\u0442\u0443 \u043e\u0442 \u0434\u0430\u0432\u043d\u043e\u0441\u0442\u0438 \u0437\u0430\u044f\u0432\u043a\u0438: \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c boxplot \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430. \u041f\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0443 \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0435\u0441\u0442\u044c. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c.\n\n\u0418\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u0438\u0437 \u0434\u0430\u0442\u044b, \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438 \u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \"\u0434\u0430\u0432\u043d\u043e\u0441\u0442\u0438\" \u0437\u0430\u044f\u0432\u043a\u0438.     ","1ec84af3":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u0432\u043e\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443 (\u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0435\u0441\u0442\u044c \u044f\u0432\u043d\u044b\u0439 (\u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439) \u0434\u0438\u0441\u0431\u0430\u043b\u0430\u043d\u0441 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0430\u043c \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a).\n2.1 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c under_sampling.","813aaa74":"### \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u044b\u0432\u043e\u0434\u044b \u043f\u043e \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c. \n1. client_id - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0421\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043a\u043e\u0440\u0435\u043b\u043b\u0438\u0440\u0443\u0435\u0442 \u0441 \u0434\u0430\u0442\u043e\u0439 \u043f\u043e\u0434\u0430\u0447\u0438 \u0437\u0430\u044f\u0432\u043a\u0438 \u0438 \u043e\u0437\u043d\u0430\u0447\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u043e\u043c\u0435\u0440 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u0431\u0430\u043d\u043a\u0435. \u0421\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0435 \u043f\u0440\u0438\u0433\u043e\u0434\u0438\u0442\u0441\u044f, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043f\u043e\u0437\u0436\u0435.\n2. age - \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432. \u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0434\u043e 40-45 \u043b\u0435\u0442 \u043b\u0435\u0442. \n3. decline_app_cnt, bki_request_cnt \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u043e\u0432 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043e\u043a - \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043d\u0435\u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u043e, \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u0435\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \u0422\u0430\u043a\u0436\u0435 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u0432\u044b\u0431\u0440\u043e\u0441\u044b, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043d\u0430 \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 4 \u043a\u0432\u0430\u0440\u0442\u0438\u043b\u044f \u043b\u0438\u0431\u043e \u043d\u0430 \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u044b\u0431\u0440\u043e\u0441\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u0438 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438.\n4. income - \u0434\u043e\u0445\u043e\u0434 \u0442\u0430\u043a\u0436\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u043d\u0435\u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u043e, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c.\n5. score_bki - \u0441\u043a\u043e\u0440\u0438\u043d\u0433\u043e\u0432\u044b\u0439 \u0431\u0430\u043b\u043b \u043f\u043e \u0411\u041a\u0418 - \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0431\u043b\u0438\u0436\u0435\u043d\u043e \u043a \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u043c\u0443\n6. region_rating - \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0440\u0435\u0433\u0438\u043e\u043d\u0430. \u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a: \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0430. \u042d\u0442\u043e \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0430 \u043f\u043e \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0443 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u043c\/\u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0443. \u041f\u0440\u0438\u0437\u043d\u0430\u043a \u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0439 \u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \n\n### \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043d\u0435\u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c  \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c","6b073e0f":"\u041d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0430\u043b\u0430 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435, \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0430\u043b\u0430 \u0445\u043e\u0442\u044f \u0431\u044b \u0434\u0430\u0432\u0430\u0442\u044c \u043e\u0442\u043a\u0430\u0437\u044b \u043f\u043e \u043a\u0440\u0435\u0434\u0438\u0442\u0443. \u041e\u0434\u043d\u0430\u043a\u043e \u043b\u043e\u0436\u043d\u043e-\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a \u043e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c \u043d\u0430 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0438\u0441\u0442\u0438\u043d\u043e-\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445, \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0438 \u043f\u043e\u043b\u043d\u043e\u0442\u044b (P \u0438 R) \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e \u043d\u0438\u0437\u043a\u0438\u0435, \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430 (F-\u043c\u0435\u0440\u0430) \u0442\u0430\u043a\u0436\u0435 \u043d\u0438\u043a\u0443\u0434\u0430 \u043d\u0435 \u0433\u043e\u0434\u0438\u0442\u0441\u044f. \u041c\u043e\u0434\u0435\u043b\u044c \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435.\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0435 \u0440\u0430\u0437 \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439 \u0438 \u043f\u0440\u043e\u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u0443\u0435\u043c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:","129f12ee":"**1. \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438**\n\n\u0421\u0438\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438: \ncar_type \u0438 car, \nwork address \u0438 home_address\n\n\u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u044d\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043a\u0430\u043a \u0441\u0443\u043c\u043c\u0443:\n\n\u0442\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438 \u043a\u0430\u043a \u043d\u0435\u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0439. \n","a45c765b":"### \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b","646b8dbc":"\u0411\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0442\u0432\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c decline_app_cnt \u0438 bki_reques_cnt.\n\u041f\u043e\u043f\u044b\u0442\u043a\u0430 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u043d\u0430 \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 4 \u043a\u0432\u0430\u0440\u0442\u0438\u043b\u044f \u0443\u0441\u043f\u0435\u0445\u043e\u043c \u043d\u0435 \u0443\u0432\u0435\u043d\u0447\u0430\u043b\u0430\u0441\u044c, \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043c\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c. ","652482c0":"### \u041d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 ()\n\u041f\u043e\u0441\u043b\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c ROC \u043e\u0449\u0443\u0442\u0438\u043c\u043e \u0432\u044b\u0440\u043e\u0441 - \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0430 \u043a \u0440\u0430\u0437\u043d\u0438\u0441\u0442\u044f \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432"}}