{"cell_type":{"4acd986b":"code","da94aa3b":"code","88015b55":"code","65499d17":"code","03aa6509":"code","ca539744":"code","66d5712f":"code","199beea8":"code","387dc3a0":"code","3ace747b":"code","824fbcf5":"code","522e00cb":"code","ff3249ab":"code","c9f3a8b8":"code","5af4ced5":"code","21963bfa":"code","ec3c4213":"code","81e782ef":"code","8c3b51dd":"code","264112a9":"markdown","6c1352f0":"markdown","e35f82ad":"markdown","98486bf8":"markdown","6b21a929":"markdown","6b0bab59":"markdown","6bcec2c4":"markdown","c3befb7b":"markdown","17a466f8":"markdown","2d399b33":"markdown","19f1fae0":"markdown","c0442071":"markdown","ccd46194":"markdown","8670c4ca":"markdown","dfc5cce6":"markdown","880b0046":"markdown","25242257":"markdown","43c51d63":"markdown"},"source":{"4acd986b":"import numpy as np # linear algebra\nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","da94aa3b":"#Create Panda Dataframe\npandas_df = pd.DataFrame(\n                         [[1, 1, 3, 4, pd.NA, '20220-01-01'],\n                         [2, 2, 3, 4, pd.NA, '20220-01-01'],  \n                         [3, 3, 3, 4, pd.NA, '20221-01-01'],\n                         [4, 4, 4, 4, pd.NA, '20221-01-01'],\n                         [ 5, pd.NA , 5 , pd.NA, pd.NA,\n                           '20221-01-01']],\n                            \n                            columns=['A', 'B', 'C', 'D', 'E',\n                                     'Date'],\n    \n                            index = ['one', 'tow', \n                                     'three', 'four', 'empty' ])\n","88015b55":"#explore data\npandas_df","65499d17":"#We have named the Series as data. Therefore \n#ignore_index=False does not return a TypeError\n#the row is appended to the DataFrame.\nnew_row = pd.Series(data={'A':99, 'B':99, 'C':99, 'D':99, 'Date':'20220-01-01'}, name='Added')\npandas_df = pandas_df.append(new_row, ignore_index=False)\n\n\"\"\"\nif you want to add \/ insert line to the data frame without index name:\nnew_row = {'A':99, 'B':99, 'C':99, 'D':99, 'Date':'20220-01-01'}\npandas_dataframe = pandas_dataframe.append(new_row, ignore_index=True)\n\n\"\"\"\n\npandas_df","03aa6509":"#select all rows where A > 4\npandas_df_above_4 = pandas_df[pandas_df.A >4]\n\npandas_df_above_4","ca539744":"#based on num values?\npandas_df_eq_99 = pandas_df.loc[pandas_df['A'] ==99]\npandas_df_eq_99\n\n\n","66d5712f":"df_bd = pandas_df[['B','D']]\ndf_bd","199beea8":"df_b_to_d = pandas_df.loc[:,'B':'D']\ndf_b_to_d","387dc3a0":"df_rows = pandas_df.loc[[\"tow\", \"three\"],\n                           [\"A\", \"B\", \"C\", \"D\"]]\ndf_rows\n","3ace747b":"# [start:stop:step]\ndf_step = pandas_df[2:4:1]\ndf_step\n","824fbcf5":"origianl_data = pandas_df\nfillna_zero = pandas_df.fillna(0)\nfillna_zero","522e00cb":"#Drop Row\/Column Only if All the Values are Null\ndf_drop_empty = origianl_data.dropna(how='all', axis=1)\ndf_drop_empty\n","ff3249ab":"print(\"Columns number before dropping Null column: \",\n       len(origianl_data.dtypes))\nprint(\"Columns number after dropping Null column: \",\n       len(df_drop_empty.dtypes))","c9f3a8b8":"fillna_zero.set_index(['Date'], inplace=True)\nfillna_zero","5af4ced5":"pandas_df1 = pd.DataFrame([[1, 1],\n                           [1, 1]],\n                            columns=['A', 'B'])\n\npandas_df1.set_index\n\npandas_df2 = pd.DataFrame([[2, 2],            \n                           [3, 3]],\n                            columns=['C', 'D'])\n\npandas_df2.set_index\n\npandas_df1\n\n","21963bfa":"pandas_df2","ec3c4213":"# please note using: left_index=True, right_index=True\nresult_dataframe = pd.merge(pandas_df1, pandas_df2, left_index=True, right_index=True)\nresult_dataframe = pandas_df1.join(pandas_df2)\nresult_dataframe","81e782ef":"renamed_df = pandas_df.rename(columns=dict(A='AA', B='BB'))\nrenamed_df","8c3b51dd":"#copy data fram\nmultiply_df = pandas_df\nmultiply_df['D'] = multiply_df['D'] * 10\nmultiply_df","264112a9":"**Select (filter) rows based on numeric  column values**","6c1352f0":"**Fill missing values NA with zero**","e35f82ad":"**Add or Insert Row to Pandas DataFrame with index name**","98486bf8":"**select rows by lable (slice rows)**","6b21a929":"**Please consider upvoting if you found it useful to you :)**\n\n**Thanks.**","6b0bab59":"**Multiply one dataframe column with a value**\n\n**(apply operations on one column)**","6bcec2c4":"**Select rows based on column values (filter)**","c3befb7b":"# Create Panda Dataframe","17a466f8":"**select data using: start, stop, step**","2d399b33":"**Drop Row\/Column Only if All the Values are Null**","19f1fae0":"**select columns B, D only (slice columns)**","c0442071":"**change dataframe index**","ccd46194":"**Rename Dataframe column**","8670c4ca":"**select columns range B to D (slice columns)**","dfc5cce6":"> If you want to filter base on string values \n\n> subsetDataFrame = DataFrame[DataFrame['Product'] == 'Apples']","880b0046":"**Merging tow data frames (no common cuolmns between them)**","25242257":"# Visual Pandas","43c51d63":"Learn from: \n[Visual Guide To Pandas Video](https:\/\/www.youtube.com\/watch?v=9d5-Ti6onew)\n\ni will cover many topics...enjoy. "}}