{"cell_type":{"acfdc47b":"code","982240b0":"code","441583b6":"code","b3263470":"code","16a36dc9":"code","6ed93e1d":"code","61ecedb6":"code","ca09884a":"code","e6c49e36":"code","8fb40901":"code","6fe1d56f":"code","ff3d1b51":"code","111bc5e6":"code","cc5f58f1":"code","244543ab":"code","34dc12e3":"code","f99256f1":"code","016eeac8":"code","d1e06b21":"code","0ad018d8":"code","7f33ed13":"code","1f42aeb2":"markdown","3397416c":"markdown","21f4ccc8":"markdown","174545fd":"markdown","fef3ed5c":"markdown","29ce3eff":"markdown","b275294a":"markdown","2ce6233e":"markdown","f7577a65":"markdown","c3293079":"markdown","8b726a15":"markdown","c363985b":"markdown","2be5549e":"markdown","ba27a8fd":"markdown","27134952":"markdown","3bb79257":"markdown","0a516bb1":"markdown","05870693":"markdown","29d4d119":"markdown","412a2cbd":"markdown","a7ed87f0":"markdown","f9f9d3d7":"markdown","43e7327c":"markdown","853fe6dc":"markdown"},"source":{"acfdc47b":"pip install scikit-learn","982240b0":"import numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report","441583b6":"df = pd.read_csv('..\/input\/iris\/Iris.csv')\ndf.head()","b3263470":"from sklearn.datasets import load_iris\ndata = load_iris()","16a36dc9":"df.info()","6ed93e1d":"df.isnull().sum()","61ecedb6":"df.iloc[:,1:].describe()","ca09884a":"for y in df.iloc[:,1:5].columns:\n    fig = px.box(df, x=\"Species\", y=y)\n    fig.show()","e6c49e36":"matrix_corr = df.iloc[:,1:5].corr()\n\nfig = go.Figure()\nfig.add_trace(\n    go.Heatmap(\n        x = matrix_corr.columns,\n        y = matrix_corr.index,\n        z = np.array(matrix_corr),\n        colorscale='Greens'\n    )\n)","8fb40901":"fig = px.scatter(df, x='SepalLengthCm', y='PetalWidthCm', color='Species', symbol=\"Species\")\nfig.show()","6fe1d56f":"fig = px.scatter(df, x='SepalLengthCm', y='PetalLengthCm', color='Species', symbol=\"Species\")\nfig.show()","ff3d1b51":"fig = px.scatter(df, x='PetalLengthCm', y='PetalWidthCm', color='Species', symbol=\"Species\")\nfig.show()","111bc5e6":"#label = LabelEncoder()\n\n#df.iloc[:,-1] = label.fit_transform(df.iloc[:,-1])\n#df.head()\u00e0","cc5f58f1":"sns.countplot(x=\"Species\", data=df)","244543ab":"X = np.array(df.iloc[:, 1:-1])","34dc12e3":"y = np.array(df.iloc[:,-1])","f99256f1":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, stratify=y)","016eeac8":"model = LogisticRegression()\nmodel.fit(X_train, y_train)","d1e06b21":"y_pred = model.predict(X_test)\nprint('The accuracy of the Logistic Regression is', accuracy_score(y_pred, y_test))","0ad018d8":"conf_mat = confusion_matrix(y_pred, y_test)\nsns.heatmap(conf_mat, annot=True)","7f33ed13":"print(classification_report(y_pred, y_test))","1f42aeb2":"$Accuracy = \\frac{TP+TN}{TP+TN+FP+FN}$, $Precision = \\frac{TP}{TP+FP}$,   $Recall = \\frac{TP}{TP+FN}$\n\n$F_1 score = \\frac{2\\times Precision \\times Recall}{Precision + Recall}$","3397416c":"### Classification Report","21f4ccc8":"## Define features X","174545fd":"## Check data information","fef3ed5c":"## Split data into train and validation\n\n**Recommended test sizes for crossvalidation : [20, 25, 30]**","29ce3eff":"## PetalWidthCm variation by SepalLengthCm","b275294a":"## Pearson correlation matrix ","2ce6233e":"## Logistic Regression Predictions","f7577a65":"## Boxplot Species by :\n* SepalLengthCm\n* SepalWidthCm\n* PetalLengthCm\n* PetalWidthCm","c3293079":"# Introduction to Machine Learning : Iris Dataset for Classification","8b726a15":"## Steps for supervised learning : Classification\n\n* preprocess data if needed\n* Define features and define target\n* Data Standardization\n* Split data into train and validation datasets\n* Fit model on training data\n* Predict validation data\n* Evalue model performances with metrics (confusion matrix, classification report, ...)\n* Adjust parameters if needed","c363985b":"## Load dataset from input folder","2be5549e":"## PetalLengthCm variation by SepalLengthCm","ba27a8fd":"## Check for missing values","27134952":"## Define target y ","3bb79257":"### Fit model","0a516bb1":"## Import libraries","05870693":"A logistic regression model predicts a dependent data variable by analyzing the relationship between one or more existing independent variables.","29d4d119":"## PetalWidthCm variation by PetalLengthCm","412a2cbd":"### Confusion matrix","a7ed87f0":"### Predict test values","f9f9d3d7":"## Descriptive statistics","43e7327c":"## Check if data is unbalaned","853fe6dc":"## Load dataset from sklearn"}}