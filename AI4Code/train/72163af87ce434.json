{"cell_type":{"ab43533b":"code","48c4d147":"code","1ef87955":"code","a87c4830":"code","12fad138":"code","0e119e4b":"code","6cd31313":"code","0837ae65":"code","c43a74d2":"code","ae777e02":"code","8e2b6ce3":"code","302553ee":"code","07a2e505":"code","162fcccd":"code","32a5b96a":"code","951bc07d":"code","e0d02398":"code","b93bd915":"code","5ba384b1":"code","bfba51f6":"code","91c8cec7":"code","3448b926":"code","6292a8c9":"code","cbceb51b":"code","e9d2184a":"code","5081756a":"code","9ef3ec3d":"code","fb77c14d":"code","77ec4167":"code","a7086c51":"code","62f78890":"code","49285025":"code","af1940d1":"code","63b5cca8":"code","573b9e8a":"code","6322e9e8":"code","eff2577d":"code","8ef04daf":"code","84c6f92b":"code","d855529a":"code","a71c8919":"code","3fac0ddb":"code","c746f97d":"code","e458f757":"code","c45e3686":"code","5d6f65aa":"code","adcbade8":"code","daacfb7b":"code","bc3378ae":"code","62027793":"code","99cbb500":"code","a65ff376":"code","a5164cf6":"markdown","e0218928":"markdown","56056dd1":"markdown","4b4771e2":"markdown","70622f79":"markdown","d0a4f989":"markdown","afc00c23":"markdown","eef8b903":"markdown","dc618a61":"markdown","2dedc322":"markdown","cffaade2":"markdown","2dc2d261":"markdown","4525c616":"markdown","28f0f67a":"markdown","2f21585f":"markdown","15cb9d7a":"markdown","5fd2a408":"markdown","3c1688ef":"markdown","e54a2c34":"markdown"},"source":{"ab43533b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.tree import DecisionTreeRegressor\n\n\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","48c4d147":"data = pd.read_csv(\"\/kaggle\/input\/toyata-cars-dataset\/toyata.txt\", na_values = (\"??\", \"????\"), index_col = 0 )\ndata","1ef87955":"data.shape","a87c4830":"data.info()","12fad138":"data.isnull().sum()","0e119e4b":"print(data.Doors.unique())\nprint(\"Doors Feature Data type :\", data.Doors.dtype)","6cd31313":"data.Doors.value_counts()","0837ae65":"doors_map = {\"2\":2,\"3\":3,\"4\":4,\"5\":5, \"three\":3, \"four\":4,\"five\":5,}\ndata[\"Doors\"] = data[\"Doors\"].map(doors_map)","c43a74d2":"data.Doors.value_counts()","ae777e02":"data.isnull().sum()","8e2b6ce3":"data.MetColor.value_counts()","302553ee":"data.FuelType.value_counts()","07a2e505":"fueltype_map = {'Petrol' :2, 'Diesel' :1, 'CNG':3}\ndata[\"FuelType\"] = data[\"FuelType\"].map(fueltype_map)","162fcccd":"data.FuelType.value_counts()","32a5b96a":"data['Age'] = data[\"Age\"].fillna(data.Age.mean())\ndata[\"KM\"] = data[\"KM\"].fillna(data.KM.mean())\ndata[\"HP\"] = data[\"HP\"].fillna(data.HP.mean())\ndata[\"MetColor\"] = data[\"MetColor\"].fillna(data.MetColor.mode()[0])\ndata[\"FuelType\"] = data[\"FuelType\"].fillna(data.FuelType.mode()[0])","951bc07d":"data.isnull().sum()","e0d02398":"data.describe().T","b93bd915":"data","5ba384b1":"X = data.drop(\"Price\", axis = 1)\ny = data.Price","bfba51f6":"print(\"X Shape :\", X.shape)\nprint(\"y Shape :\", y.shape)","91c8cec7":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.7, random_state = 12)","3448b926":"print(\"X_train Shape :\", X_train.shape)\nprint(\"X_test Shape  :\", X_test.shape)\nprint(\"y_train Shape :\", y_train.shape)\nprint(\"y_test Shape  :\", y_test.shape)","6292a8c9":"regressor_OLS = sm.OLS(endog=y, exog=X).fit()\nregressor_OLS.summary()","cbceb51b":"lr_model = LinearRegression()\nlr_model.fit(X_train, y_train)","e9d2184a":"lr_pred = lr_model.predict(X_test)","5081756a":"print('Mean Absolute Error          :', metrics.mean_absolute_error(y_test,lr_pred))\nprint('Mean Squared Error           :', metrics.mean_squared_error(y_test,lr_pred))\nprint('RMSE(Root Mean Squared Error):', np.sqrt(metrics.mean_squared_error(y_test,lr_pred)))","9ef3ec3d":"#calculating r-square\nlr_model.score(X_test, y_test)","fb77c14d":"print(\"Linear model coefficients :\", lr_model.coef_)\nprint(\"Linear model intercept    :\", lr_model.intercept_)","77ec4167":"rf_model = RandomForestRegressor()\nrf_model.fit(X_train, y_train)","a7086c51":"rf_pred = rf_model.predict(X_test)","62f78890":"print('Mean Absolute Error          :', metrics.mean_absolute_error(y_test,rf_pred))\nprint('Mean Squared Error           :', metrics.mean_squared_error(y_test,rf_pred))\nprint('RMSE(Root Mean Squared Error):', np.sqrt(metrics.mean_squared_error(y_test,rf_pred)))","49285025":"rf_score = rf_model.score(X_test, y_test)\nrf_score","af1940d1":"sns.distplot(y_test- rf_pred)\nplt.show()","63b5cca8":"plt.scatter(y_test,rf_pred)\nplt.title(\"Scatter plot predictions\")\nplt.show()","573b9e8a":" #Randomized Search CV\n\nn_estimators = [int(x) for x in np.linspace(start = 100, stop = 1200, num = 12)]\nmax_features = ['auto', 'sqrt']\nmax_depth = [int(x) for x in np.linspace(5, 30, num = 6)]\nmin_samples_split = [2, 5, 10, 15, 100]\nmin_samples_leaf = [1, 2, 5, 10]\n","6322e9e8":"# Create the random grid\nrandom_grid = {'n_estimators': n_estimators,\n               'max_features': max_features,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf}\n\nprint(random_grid)","eff2577d":"\nrf_random = RandomizedSearchCV(estimator = rf_model, param_distributions = random_grid,scoring='neg_mean_squared_error', \n                               n_iter = 10, cv = 5, verbose=2, random_state=42, n_jobs = 1)","8ef04daf":"rf_random.fit(X_train,y_train)","84c6f92b":"rf_random.best_params_","d855529a":"rf_random.best_score_","a71c8919":"pred = rf_random.predict(X_test)","3fac0ddb":"print('Mean Absolute Error          :', metrics.mean_absolute_error(y_test,pred))\nprint('Mean Squared Error           :', metrics.mean_squared_error(y_test,pred))\nprint('RMSE(Root Mean Squared Error):', np.sqrt(metrics.mean_squared_error(y_test,pred)))","c746f97d":"new_rf = RandomForestRegressor(n_estimators = 1000,min_samples_split = 2,\n                               min_samples_leaf = 1,max_features = 'sqrt',max_depth = 25)\nnew_rf.fit(X_train, y_train)","e458f757":"new_pred = new_rf.predict(X_test)\n","c45e3686":"print('Mean Absolute Error          :', metrics.mean_absolute_error(y_test,new_pred))\nprint('Mean Squared Error           :', metrics.mean_squared_error(y_test,new_pred))\nprint('RMSE(Root Mean Squared Error):', np.sqrt(metrics.mean_squared_error(y_test,new_pred)))","5d6f65aa":"new_rf_score = new_rf.score(X_test, y_test)\nnew_rf_score","adcbade8":"sns.distplot(y_test-pred)\nplt.show()","daacfb7b":"plt.scatter(y_test,pred)\nplt.title(\"Scatter plot predictions\")\nplt.show()","bc3378ae":"dt_reg = DecisionTreeRegressor()\ndt_reg.fit(X_train, y_train)","62027793":"dt_pred = dt_reg.predict(X_test)","99cbb500":"print('Mean Absolute Error          :', metrics.mean_absolute_error(y_test,dt_pred))\nprint('Mean Squared Error           :', metrics.mean_squared_error(y_test,dt_pred))\nprint('RMSE(Root Mean Squared Error):', np.sqrt(metrics.mean_squared_error(y_test,dt_pred)))","a65ff376":"dt_score = dt_reg.score(X_test, y_test)\ndt_score","a5164cf6":"## EDA Process","e0218928":"## Handaling Missing Values","56056dd1":"### Observation Point :\n1) In the data set 1436 rows 10 features.\n\n2) Age, KM, Fueltype, Metcolor and HP features are having some null values.\n\n3) In the Doors feature numeric and character data types present.\n\n4) Dependent feature(PRICE), it's continuous data so we apply to Regression problem.","4b4771e2":"### Best parameters with random forest model","70622f79":"# Toyata Cars Data","d0a4f989":"## Data Splitting","afc00c23":"## Linear Regression Model Buliding","eef8b903":"## Importing Data set","dc618a61":"#### Explaing Point:\n1) It's clear to data types and converting to data type.","2dedc322":"## Decision Tree Regressoin Model","cffaade2":"## Hyperparameter Tunning","2dc2d261":"### Observation Point:\n1) we could see that the features and its data type, along with Null count\n\n2) Fueltype and Doors features are Object data type and remaining features are int64, float64 data type.","4525c616":"## Ordinary Least Squares regression (OLS) Model ","28f0f67a":"### Observation Point:\n1) Age = 100,\n\n2) KM = 15,\n\n3) Fueltype = 100,\n\n4) Metcolor = 150,\n\n5) HP = 6\n\nNull values count of each feature.","2f21585f":"## Data Cleaning","15cb9d7a":"### Dataset Description:\nPrice : Price of the Car(Dependent Varible)\n\nAge : Age of the Car.\n\nKM : Car runnig distance in KiloMeters.\n\nFueltype : Which type fuel used in car like Petrol, CNG, Diesel.\n\nHP : Horsepower of the car.\n\nMetcolor : Color Type of the car.\n\nAutomatic : Car gear system automatic(0: Manullay, 1: Automatic).\n\nCC : cubic centimetres, car engine size describe.\n\nDoors : No.of Doors of the Car.\n\nWeight : Weight of the car.","5fd2a408":"## Importing Requrid Libraies","3c1688ef":"## Random Forest Model Buliding","e54a2c34":"### Observation Point:\n1) In Doors features 'Object' dataype so convert into int datatype\n\n2) In the unique values of Doors features \"Four\", \"Five\", Three\" present.\n\n3) It sense the numaric data present in character data, so converting to datatypes."}}