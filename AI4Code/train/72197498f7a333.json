{"cell_type":{"b8aec37b":"code","58472a4f":"code","692d7093":"code","cc31fecf":"code","759b0a11":"code","3da33b32":"code","26a6f4d2":"code","15e63e08":"code","5e6458e3":"code","e216a958":"code","2a593328":"code","15f25058":"code","d3acafe4":"code","ce7881f7":"code","18169eda":"code","ee019fd3":"code","56f1ab61":"code","3ac27ae4":"code","1d1c211d":"code","d36dc89c":"code","eb10ba1d":"code","89517c6e":"code","8cdc960e":"code","d7b532ab":"code","58c3e567":"code","ca2fd307":"code","609f46aa":"code","44855bc3":"code","4e1caace":"code","ee3039cb":"code","a253d9e6":"code","dc91d547":"code","6a38735d":"code","6c0f9741":"code","6ad1940d":"code","804b9604":"code","fb18e8d9":"code","4eafbdae":"code","0b5fe3cb":"code","ccfbcdd5":"code","c4e8df6b":"code","4681a0a1":"code","6f778e4a":"code","dbb73802":"code","eb5b7ecd":"code","55838b6f":"code","1cb9b548":"code","48b14d2c":"code","37caf404":"code","ad5735c0":"code","c970fb37":"code","6151f93b":"code","123ae42f":"code","adac1ffa":"code","baeaca6c":"markdown","bd74cd0f":"markdown","d11f49e6":"markdown","887182f7":"markdown","8b3e7b7a":"markdown","fdc6bbac":"markdown","3e86627b":"markdown","ad1b49cf":"markdown","8534679d":"markdown"},"source":{"b8aec37b":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt","58472a4f":"df = pd.read_csv(\"gender-classifier-DFE-791531.csv\" ,encoding='latin1')","692d7093":"df.head(4)","cc31fecf":"df.shape","759b0a11":"df.info()","3da33b32":"import seaborn as sns \nsns.heatmap(df.corr(),annot = True)\nplt.rcParams[\"figure.figsize\"]=20,10","26a6f4d2":"df.corr().transpose()","15e63e08":"df.isnull().sum()","5e6458e3":"df.columns","e216a958":"df['gender:confidence'].value_counts()","2a593328":"df = df[df['gender:confidence'] >=0.99]","15f25058":"df['gender:confidence'].value_counts()","d3acafe4":"df['gender'].value_counts()","ce7881f7":"df['gender'].hist(bins=12)","18169eda":"df['gender'].describe()","ee019fd3":"df['gender'].fillna(df['gender'].mode()[0])","56f1ab61":"df.shape","3ac27ae4":"df['gender'].isnull().sum()","1d1c211d":"df['gender'].replace(to_replace = 'unknown' ,value = 'male' ,inplace = True)","d36dc89c":"df['gender'].value_counts()","eb10ba1d":"df.isnull().sum()","89517c6e":"df['description'].describe()","8cdc960e":"df['description'].fillna(df['description'].mode()[0],inplace = True)","d7b532ab":"df.shape","58c3e567":"df.dropna()","ca2fd307":"df.head(4)","609f46aa":"df.shape","44855bc3":"import re \n","4e1caace":"def normalize_text(text):\n    \n    text = str(text)\n    text = text.lower()\n        \n    text = re.sub('\\s\\W',' ',text)\n    text = re.sub('\\W\\s',' ',text)\n        \n    text = re.sub('\\s+',' ',text)\n    text = re.sub('[^\\x00-\\x7F]+',' ', text)\n    text = re.sub('https?:\\\/\\\/.*[\\r\\n]*', ' ', text)\n    text = re.sub('[?!+%{}:;.,\"\\'()\\[\\]_]', '',text)\n    text = re.sub('\\s+',' ',text)\n    return text\n\ndf['text_norm'] = [normalize_text(s) for s in df['text']]\ndf['description_norm'] = [normalize_text(s) for s in df['description']]","ee3039cb":"df.head()","a253d9e6":"df.shape","dc91d547":"df['description_norm']","6a38735d":"df.reset_index(inplace = True)","6c0f9741":"df.columns","6ad1940d":"from sklearn.feature_extraction.text import CountVectorizer\nvectorizer = CountVectorizer()\n#vectorizer = vectorizer.fit(df.ix[train_rows, :][\"text_norm\"])\nvectorizer.fit_transform(df['text_norm'])","804b9604":"df.drop_duplicates(subset=None, keep='first', inplace=True)","fb18e8d9":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","4eafbdae":"cat_col = ['_unit_state','text_norm', 'description_norm','sidebar_color','link_color', 'name', 'profileimage',\n          'created', 'description', 'profile_yn','gender',]","0b5fe3cb":"for each_col in cat_col:\n    df[each_col] = le.fit_transform(df[each_col])","ccfbcdd5":"from sklearn.neural_network import MLPClassifier\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import train_test_split","c4e8df6b":"X = df[['_golden', '_unit_state', '_trusted_judgments',\n        'gender:confidence', 'profile_yn',\n       'profile_yn:confidence', 'created',  'fav_number',\n       'link_color', 'name', 'profileimage', 'retweet_count', 'sidebar_color',\n        'tweet_count',  'tweet_id', \n       'text_norm', 'description_norm']].values\ny = df['gender'].values","4681a0a1":"from sklearn.model_selection import train_test_split","6f778e4a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","dbb73802":"clf = MLPClassifier(solver='lbfgs', alpha=1e-5,hidden_layer_sizes=(5, 2), random_state=1)\nclf.fit(X, y)","eb5b7ecd":"y_pred = clf.predict(X_test)\ny_pred","55838b6f":"clf.predict_proba(X_test)","1cb9b548":"from sklearn.metrics import accuracy_score","48b14d2c":"accuracy_score(y_test, y_pred)","37caf404":"from sklearn.naive_bayes import MultinomialNB\n\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score","ad5735c0":"nb = MultinomialNB()\nnb = nb.fit(X_train, y_train)\nprint(classification_report(y_test, nb.predict(X_test)))\naccuracy_score(y_test, nb.predict(X_test))","c970fb37":"import tensorflow as tf","6151f93b":"from sklearn.preprocessing import OrdinalEncoder\nfrom keras.models import Sequential\nfrom keras.layers import Dense","123ae42f":"# prepare input data\ndef prepare_inputs(X_train, X_test):\n    oe = OrdinalEncoder()\n    oe.fit(X_train)\n    X_train_enc = oe.transform(X_train)\n    X_test_enc = oe.transform(X_test)\n    return X_train_enc, X_test_enc\n \n# prepare target\ndef prepare_targets(y_train, y_test):\n    le = LabelEncoder()\n    le.fit(y_train)\n    y_train_enc = le.transform(y_train)\n    y_test_enc = le.transform(y_test)\n    return y_train_enc, y_test_enc\n \n","adac1ffa":"\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1)\n# prepare input data\nX_train_enc, X_test_enc = prepare_inputs(X_train, X_test)\n# prepare output data\ny_train_enc, y_test_enc = prepare_targets(y_train, y_test)\n# define the  model\nmodel = Sequential()\nmodel.add(Dense(10, input_dim=X_train_enc.shape[1], activation='relu', kernel_initializer='he_normal'))\nmodel.add(Dense(1, activation='sigmoid'))\n# compile the keras model\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n# fit the keras model on the dataset\nmodel.fit(X_train_enc, y_train_enc, epochs=100, batch_size=16, verbose=2)\n# evaluate the keras model\n_, accuracy = model.evaluate(X_test_enc, y_test_enc, verbose=0)\nprint('Accuracy: %.2f' % (accuracy*100))","baeaca6c":"Replacing unknown values","bd74cd0f":"EDA","d11f49e6":"Filling Missng Values","887182f7":"# gender-classifier\n","8b3e7b7a":"Missing values","fdc6bbac":"removing nan value","3e86627b":"LabelEncoder","ad1b49cf":"sklearn.neural_network","8534679d":"Project file , description and guide\nhttps:\/\/drive.google.com\/drive\/folders\/1uaX90aHGTNzrDEItD0KqGXxMFPhKx1nX?usp=sharing"}}