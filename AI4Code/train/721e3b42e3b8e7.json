{"cell_type":{"f37accd8":"code","7e784613":"code","05b93911":"code","7ef640e5":"code","5937d42b":"code","0c3f6522":"code","230f5f58":"code","d7f2a6f4":"code","4db29774":"code","b3c9e375":"code","40383c1a":"code","cff5414f":"code","02e784ac":"code","ae7e3f36":"code","613cc3db":"markdown","7953f5c0":"markdown","1ed161ab":"markdown","91388375":"markdown","eb3d5eb1":"markdown","23ed4c1c":"markdown","359ef2c8":"markdown","d236ae1f":"markdown","a6393873":"markdown","902de116":"markdown"},"source":{"f37accd8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n \n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e784613":"base_data = pd.read_csv('..\/input\/google-trends-dataset\/trends.csv')","05b93911":"base_data.head(5)","7ef640e5":"base_data.tail(-5)","5937d42b":"base_data.head(-5)","0c3f6522":"### Now that the data is loaded properly, lets check how many variables  and total records are present in this dataset. we will use shape propery for that.","230f5f58":"base_data.shape","d7f2a6f4":"base_data.columns","4db29774":"base_data.dtypes","b3c9e375":"print(\"Sample data : \" )\nprint(\"\\nFirst five countries found are :\" ,list(base_data['location'].unique()[:5]))\nprint(\"\\nsample five year found are :\" ,list(base_data['year'].unique()[:5]))\nprint(\"\\nsample five ranks found are :\" ,list(base_data['rank'].unique()[:5]))\nprint(\"\\nsample five queries found are :\" ,list(base_data['query'].unique()[:5]))\n#print(list(base_data['year'].unique()))\n#print(list(base_data['rank'].unique()))\n#print(list(base_data['query'].unique()))","40383c1a":"# historical query trend, draw line chart \nprint(base_data.groupby('year').size())\nbase_data.groupby('year').size().plot()\n","cff5414f":" base_data_global  = base_data[base_data.location==\"Global\"]","02e784ac":"base_data_global.shape","ae7e3f36":" \nbase_data_sorted = base_data.groupby('location', sort=False).size().reset_index()\n ","613cc3db":"### Want to get fancy and take a look at both top and bottom records at once. Try adding minus (-) sign to either head() or tail() function","7953f5c0":"### So this dataset has five variables location, year, category, rank and query.  Do you want to know the data type of each variables? \n\n### Well, we have one more property dtypes that we can use. \n","1ed161ab":"### After the data is loaded and we have basic details, I am curious about what \n* Each details each field has \n* Does all field have good quality information or not i.e is there any missing data present. \n\n### Lets check each variable now.\nwe can take a look at year wise trend using either table or a line chart\n","91388375":"### We know the dataset name and url now. Lets load up the data into base_data data frame using pandas. Our favourite panda after Po!!","eb3d5eb1":"### As we can see starting year 2011, the total queries has jumped from around 500 range to 2500, this is a 5 times incrased tracffic to google. That means Business for Google. \n","23ed4c1c":"### Learn filtering \n\n#### If you look closely at top entries of country variable, you would see Global is one of the categories. Lets assume this is top level category above all countries. \n\n#### Lets filter data for this category \n","359ef2c8":"### Lets check how many records are filtered. we will use same shape property used earlier.","d236ae1f":"### so the dataset havbe 26955 records and 5 variables. How do we know name of each variable? \n### Well, lets check the variable name using columns property. ","a6393873":"### **Let check if the data is loaded properly or as you would like to say in in data enginnering you would call it like \"lets check if the data is ingested properly\". We will take a look at few  sample records. We will use pandas head() function for this.**","902de116":"**What, you want to look at records at bottom. Oh so you are curious type. Good! **\n\nYes, you can do it in pandas. we will use tail function. "}}