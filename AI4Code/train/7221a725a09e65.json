{"cell_type":{"830bfebb":"code","34a6fb8f":"code","832ea94f":"code","79d17f61":"code","e2d23440":"code","053e2aca":"code","b466ad6a":"code","2df71d0e":"code","37cfbc81":"code","e2ed8304":"code","539df591":"code","7ea07752":"code","f46455ac":"code","7afdc592":"code","c8f4653b":"code","6b3edc1d":"code","62a3c632":"code","f2e886a9":"code","90c12fd6":"code","b3bf0baa":"code","fb97593b":"code","84addd38":"code","e1e79e4d":"code","6ab37705":"code","0311df22":"code","9b7fe347":"code","6b7d1a5d":"code","0f0f1390":"code","408686a5":"code","7f80e61b":"code","530965e0":"code","71d03ca1":"code","87f8e1e2":"code","280733fd":"code","ef5f175d":"code","01014b66":"markdown","5427d36a":"markdown","6e3a5c23":"markdown","b82e89a5":"markdown","3beea130":"markdown","ba736eb0":"markdown","cb933f0e":"markdown","a5acf31b":"markdown","e272ce14":"markdown","1680032a":"markdown","c2bd5c05":"markdown","b8ed730e":"markdown","4a60a539":"markdown","ae0ac915":"markdown","a2779ae5":"markdown","cd8299e8":"markdown","4498103c":"markdown","07c9e445":"markdown","626141b7":"markdown","ff41acc0":"markdown","d782c926":"markdown","bdd98e35":"markdown","997e1e04":"markdown","856e0af5":"markdown","e7c2ed3a":"markdown","83d921d1":"markdown","331df14f":"markdown","a56451f6":"markdown","8e6e9e55":"markdown","5979f081":"markdown","3a0f177e":"markdown","7b9b05d8":"markdown","e932f3b2":"markdown","ff53c48d":"markdown","ef4d11bf":"markdown","9781454c":"markdown","27074a44":"markdown","c54ed482":"markdown"},"source":{"830bfebb":"import datetime\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nfrom folium import plugins\nimport plotly.express as px\n\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom wordcloud import WordCloud\n\n!pip install alphashape\nimport alphashape\n\n%matplotlib inline\nsns.set()","34a6fb8f":"dateparse = lambda x: datetime.datetime.strptime(x, '%Y-%m-%d %H:%M:%S')\n\ndata = pd.read_csv('..\/input\/crimes-in-boston\/crime.csv', encoding='latin-1',\n                   parse_dates=['OCCURRED_ON_DATE'], date_parser=dateparse)","832ea94f":"data.head(5)","79d17f61":"data.info()","e2d23440":"data.isna().sum()","053e2aca":"data.describe()","b466ad6a":"for column in data:\n    print(f'{column}: {data[column].unique().size}')","2df71d0e":"for column in ['DISTRICT', 'SHOOTING', 'YEAR', 'UCR_PART']:\n    print(f'{column}: {data[column].unique()}')","37cfbc81":"data.drop(['INCIDENT_NUMBER', 'OFFENSE_CODE', 'OFFENSE_DESCRIPTION', 'Location'], axis=1, inplace=True)","e2ed8304":"rename = {'OFFENSE_CODE_GROUP': 'Group',\n          'DISTRICT': 'District',\n          'REPORTING_AREA': 'Area',\n          'SHOOTING': 'If_shooting',\n          'OCCURRED_ON_DATE': 'Date',\n          'YEAR': 'Year',\n          'MONTH': 'YMonth',\n          'DAY_OF_WEEK': 'WDay',\n          'HOUR': 'DHour',\n          'UCR_PART': 'UCR_part',\n          'STREET': 'Street',\n          'Long': 'Lon'}\n\ndata.rename(index=str, columns=rename, inplace=True)","539df591":"data.WDay = pd.Categorical(data.WDay,\n                           categories=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n                           ordered=True)","7ea07752":"data.Lat.replace(-1, None, inplace=True)\ndata.Lon.replace(-1, None, inplace=True)","f46455ac":"data['YDay'] = data['Date'].dt.dayofyear\ndata['Mday'] = data['Date'].dt.day","7afdc592":"data.head(5)","c8f4653b":"data.columns","6b3edc1d":"data_counties = data[['District', 'Lat', 'Lon']].dropna()","62a3c632":"neigh = KNeighborsClassifier(n_neighbors=500, n_jobs=-1)\nneigh.fit(data_counties[['Lat', 'Lon']], data_counties['District'])","f2e886a9":"data_counties['District'] = neigh.predict(data_counties[['Lat', 'Lon']])","90c12fd6":"district_groups = data_counties.groupby(['District'])\ngeojson = {'type': 'FeatureCollection'}\ngeojson['features'] = []\n\nfor district, data_district in dict(list(district_groups)).items():\n    hull_curr = list(alphashape.alphashape(data_district[['Lon', 'Lat']].values,\n                                           alpha=np.sqrt(data_district.shape[0]) * 1.5).exterior.coords)\n    geojson['features'].append({'type': 'Feature',\n                                'geometry': {\n                                    'type': 'Polygon',\n                                    'coordinates': [hull_curr]\n                                },\n                                'properties': {'district': district}})","b3bf0baa":"fig = px.choropleth_mapbox(data_counties, geojson=geojson, color='District',\n                           locations='District', featureidkey='properties.district',\n                           center={'lat': 42.315, 'lon': -71.1},\n                           mapbox_style='carto-positron', zoom=10.5,\n                           opacity=0.5)\nfig.update_layout(margin={'r': 0, 't': 0, 'l': 0, 'b': 0})\nfig.show()","fb97593b":"# \u041e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0430 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\ndef bar_chart(x_vals, y_vals, title=None, x_label=None, y_label=None, if_plot_vals=False):\n    n = len(x_vals)\n    x_pos = np.arange(n)\n\n    plt.figure(figsize=(12, 8))\n    plt.bar(x_pos, y_vals, align='center', alpha=0.6)\n    plt.xticks(x_pos, x_vals)\n    if title:\n        plt.title(title)\n    if x_label:\n        plt.xlabel(x_label)\n    if y_label:\n        plt.ylabel(y_label)\n\n    if if_plot_vals:\n        for pos, val in zip(x_pos, y_vals):\n            plt.text(pos, val, val, ha='center')\n\n    plt.show()","84addd38":"data_year = data.groupby(['Year']).size().reset_index(name='Counts')\n\nbar_chart(data_year.Year, data_year.Counts, 'All crimes each year', 'Year', 'Counts')","e1e79e4d":"data_2016 = data[data['Year'] == 2016]","6ab37705":"data_month = data_2016.groupby(['YMonth']).size().reset_index(name='Counts')\ndata_month.YMonth.replace([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n                          ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                          inplace = True)\n\nbar_chart(data_month.YMonth, data_month.Counts, 'Crimes each month (2016)', 'Month', 'Counts')","0311df22":"data_yday = data_2016.groupby(['YDay']).size().reset_index(name='Counts')\n\nfig, ax = plt.subplots(figsize=(12, 8))\nsns.lineplot(x='YDay',\n             y='Counts',\n             ax=ax,\n             data=data_yday)\nplt.title('Crimes each day (2016)')\nplt.xlabel('Day')","9b7fe347":"data_wday = data_2016.groupby(['WDay']).size().reset_index(name='Counts')\n\nbar_chart(data_wday.WDay, data_wday.Counts, 'Crimes each week day (2016)', 'Day', 'Count')","6b7d1a5d":"data_hour = data_2016.groupby(['DHour']).size().reset_index(name='Counts')\n\nbar_chart(data_hour.DHour, data_hour.Counts, 'Crimes each hour (2016)', 'Hour', 'Count')","0f0f1390":"sns.catplot(y='UCR_part',\n            kind='count',\n            height=7,\n            aspect=1.5,\n            order=data_2016.UCR_part.value_counts().index,\n            data=data_2016)","408686a5":"sns.catplot(y='District',\n            kind='count',\n            height=8,\n            aspect=1.5,\n            order=data_2016.District.value_counts().index,\n            data=data_2016)","7f80e61b":"data_wc = data_2016.Group.apply(lambda x: x.replace(' ', ''))\ntext = ' '.join(data_wc)\n\nwordcloud = WordCloud(collocations=False, width=1600, height=800, max_font_size=300,\n                      background_color='white', random_state=5).generate(text)\n\nplt.figure(figsize=(20, 17))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis('off')\nplt.show()","530965e0":"map_crimes = folium.Map(location=[42.315, -71.1], zoom_start=12, tiles='Stamen Toner')\ndata_heat = data_2016[['Lat', 'Lon']].dropna().values\nplugins.HeatMap(data_heat, radius=10).add_to(map_crimes)\nmap_crimes","71d03ca1":"map_crimes = folium.Map(location=[42.315, -71.1], zoom_start=12)\ndata_sample = data_2016[['District', 'Lat', 'Lon']].dropna().sample(10000)\nmap_dict = {'A1': 'red', 'C11': 'blue', 'E13': 'green', 'B2': 'gray',\n            'D14': 'purple', 'C6': 'pink', 'A7': 'cadetblue', 'E5': 'orange',\n            'D4': 'darkred', 'B3': 'lightgreen', 'E18': 'darkblue', 'A15': 'darkgreen'}\ndata_sample.District = data_sample.District.map(map_dict)\nfor lat, long, target in zip(data_sample.Lat, data_sample.Lon, data_sample.District):\n    folium.Circle((lat, long),\n                   radius=5,\n                   color=target,\n                   fill_color='#3186cc').add_to(map_crimes)\nmap_crimes","87f8e1e2":"data_county = data_2016.groupby(['District']).size().reset_index(name='Counts')\n\nfig = px.choropleth_mapbox(data_county, geojson=geojson, color='Counts',\n                           locations='District', featureidkey='properties.district',\n                           color_continuous_scale=\"Viridis\", range_color=(0, 20000),\n                           center={'lat': 42.315, 'lon': -71.1},\n                           mapbox_style=\"carto-positron\", zoom=10.5,\n                           opacity=0.5, labels={'Area': 'Crimes number'})\nfig.update_layout(margin={'r': 0, 't': 0, 'l': 0, 'b': 0})\nfig.show()","280733fd":"map_crimes = folium.Map(location=[42.315, -71.1], zoom_start=12, min_zoom=12)\ndata_heat_time = data_2016[['Lat', 'Lon', 'YMonth']].dropna()\ndata_heat_time = [data_heat_time[data_heat_time['YMonth'] == i][['Lat', 'Lon']].values.tolist() for i in range(1, 13)]\nplugins.HeatMapWithTime(data_heat_time, radius=4, auto_play=False, max_opacity=0.8).add_to(map_crimes)\nmap_crimes","ef5f175d":"map_crimes = folium.Map(location=[42.315, -71.1], zoom_start=12, tiles='Stamen Terrain')\ndata_sample = data_2016[['Group', 'Lat', 'Lon', 'District']].dropna().sample(800)\nmap_dict = {'A1': 'red', 'C11': 'blue', 'E13': 'green', 'B2': 'gray',\n            'D14': 'purple', 'C6': 'pink', 'A7': 'cadetblue', 'E5': 'orange',\n            'D4': 'darkred', 'B3': 'lightgreen', 'E18': 'darkblue', 'A15': 'darkgreen'}\ndata_sample.District = data_sample.District.map(map_dict)\nfor index, row in data_sample.iterrows():\n    folium.Marker(row[['Lat', 'Lon']],\n                  popup=row['Group'],\n                  icon=folium.Icon(color=row['District'])).add_to(map_crimes)\nmap_crimes","01014b66":"\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435: \u043f\u043e \u0434\u043d\u044f\u043c \u0432 \u0433\u043e\u0434\u0443","5427d36a":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b","6e3a5c23":"\u041f\u043e \u043e\u043a\u0440\u0443\u0433\u0430\u043c","b82e89a5":"\u0412\u044b\u0434\u0435\u043b\u0438\u043c 2 \u043f\u0438\u043a\u0430: \u0432 \u043e\u0431\u0435\u0434 \u0438 \u043f\u043e\u0434 \u043a\u043e\u043d\u0435\u0446 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0434\u043d\u044f.","3beea130":"### \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","ba736eb0":"\u041f\u043e \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c","cb933f0e":"\u0423\u0434\u0430\u043b\u0438\u043c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b","a5acf31b":"\u0418\u0437\u0431\u0430\u0432\u0438\u043c\u0441\u044f \u043e\u0442 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439","e272ce14":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u0432\u0441\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c","1680032a":"\u041f\u043e \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u0442\u044f\u0436\u0435\u0441\u0442\u0438","c2bd5c05":"\u041f\u043e \u0447\u0430\u0441\u0430\u043c","b8ed730e":"\u041f\u043e\u043b\u0443\u0447\u0438\u043c \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u043c\u0435\u0442\u043e\u043a","4a60a539":"\u0421\u0430\u043c\u0438 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","ae0ac915":"\u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u0432 \u043a\u0440\u0430\u0439\u043d\u0438\u0435 2015 \u0438 2018 \u0433\u043e\u0434\u044b \u0441\u0438\u043b\u044c\u043d\u043e \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0432 2016 \u0438 2017. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0438\u043c \u0433\u043e\u0434\u0430\u043c \u043d\u0435 \u043f\u043e\u043b\u043d\u044b. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438 \u0440\u0430\u0434\u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u044b \u0434\u0430\u043b\u0435\u0435 \u0431\u0443\u0434\u0435\u043c \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u043a\u0430\u043a\u043e\u043c\u0443-\u043d\u0438\u0431\u0443\u0434\u044c \u043f\u043e\u043b\u043d\u043e\u043c\u0443 \u0433\u043e\u0434\u0443, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 2016-\u043e\u043c\u0443.","a2779ae5":"#### \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0430\u043c \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0439","cd8299e8":"\u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b","4498103c":"\u041d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u043c \u0440\u043e\u0441\u0442 \u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043b\u0430 \u043a \u043b\u0435\u0442\u0443 \u0438 \u0443\u043f\u0430\u0434\u043e\u043a \u043a \u0437\u0438\u043c\u0435. \u041c\u043e\u0436\u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c 2 \u043f\u0438\u043a\u0430: \u0432 \u0430\u0432\u0433\u0443\u0441\u0442\u0435 \u0438 \u0432 \u044f\u043d\u0432\u0430\u0440\u0435. \u0412\u0442\u043e\u0440\u043e\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d \u0441 \u043e\u0442\u043c\u0435\u0447\u0430\u044e\u0449\u0438\u043c\u0441\u044f \u041d\u043e\u0432\u044b\u043c \u0413\u043e\u0434\u043e\u043c.","07c9e445":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u0441\u0435\u0445 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0433\u043e\u0434\u0430\u043c","626141b7":"### \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435","ff41acc0":"### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438","d782c926":"#### \u041d\u0430\u0439\u0434\u0435\u043c \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u043e\u043a\u0440\u0443\u0433\u043e\u0432","bdd98e35":"### \u041e\u0447\u0438\u0441\u0442\u043a\u0430\/\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","997e1e04":"\u041f\u043e \u043c\u0435\u0441\u044f\u0446\u0430\u043c","856e0af5":"\u0423\u0434\u0430\u043b\u0438\u043c \u0437\u0430\u0432\u0435\u0434\u043e\u043c\u043e \u043d\u0435\u043f\u043e\u043b\u043d\u044b\u0435\/\u043d\u0435\u0442\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435","e7c2ed3a":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0435\u0441\u044f \u0433\u0440\u0430\u043d\u0438\u0446\u044b","83d921d1":"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a \u0435\u0434\u0438\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443","331df14f":"\u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043e\u043a\u0440\u0443\u0433\u043e\u0432","a56451f6":"\u0423\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u043c \u0434\u043d\u0438 \u043d\u0435\u0434\u0435\u043b\u0438","8e6e9e55":"\u041f\u043e \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c, \u043e\u043a\u0440\u0443\u0433\u0430\u043c \u0438 \u0442\u0438\u043f\u0443","5979f081":"\u041f\u043e \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c \u0438 \u043e\u043a\u0440\u0443\u0433\u0430\u043c","3a0f177e":"### \u0410\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0438\u0445","7b9b05d8":"\u041f\u043e \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u043c\u0435\u0441\u044f\u0446\u0430\u043c)","e932f3b2":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","ff53c48d":"\u041f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438","ef4d11bf":"\u041f\u043e \u0442\u0438\u043f\u0443 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f","9781454c":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445","27074a44":"\u0421\u043d\u043e\u0432\u0430 \u043e\u0442\u043c\u0435\u0442\u0438\u043c \u043c\u043e\u043d\u043e\u0442\u043e\u043d\u043d\u043e\u0441\u0442\u044c: \u0440\u043e\u0441\u0442 \u043a \u043f\u044f\u0442\u043d\u0438\u0446\u0435 \u0438 \u0443\u043f\u0430\u0434\u043e\u043a \u0432 \u043a\u043e\u043d\u0446\u0435 \u043d\u0435\u0434\u0435\u043b\u0438.","c54ed482":"\u0422\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u043d\u043e \u0441 \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430"}}