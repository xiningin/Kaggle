{"cell_type":{"07431668":"code","afcff432":"code","a52f1449":"code","2fefc428":"code","b25a6b12":"code","49f7bf20":"code","f106bf7f":"code","03488411":"code","efcb59c3":"code","8e59050f":"code","0062bd35":"code","275764e0":"code","89221b7f":"code","0ff796de":"code","a911981f":"code","30dc8055":"code","fadbbe54":"code","04c11bdb":"code","87608c55":"code","a350f165":"code","463c0da0":"code","2eb3c980":"code","d89da114":"code","12c11132":"code","36b8e5e4":"code","43b3056b":"code","97fd5530":"code","0704291c":"code","ac12b14a":"code","434463b6":"code","7ffaf1b3":"code","4fda6823":"code","b0b5f2f1":"code","b1542d80":"code","be0744d6":"code","a3a011df":"code","4e241de9":"code","aa381543":"code","5aad5f44":"code","c97b25d7":"markdown","f81a6246":"markdown","04337ed3":"markdown","653196b6":"markdown","eface98a":"markdown","bc9bc1b7":"markdown","706a8ee5":"markdown","cb7e47a3":"markdown","78997528":"markdown","f1423125":"markdown","43756dab":"markdown","26cfa3e2":"markdown","52f59c78":"markdown","893ea241":"markdown","af6247e0":"markdown","6e5b5b34":"markdown"},"source":{"07431668":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","afcff432":"df=pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")\ndf.head()","a52f1449":"df.isnull().sum()","2fefc428":"df.describe()","b25a6b12":"df.info()","49f7bf20":"df_columns=[\"sex\",\"smoker\"]","f106bf7f":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nfor i in df_columns:\n    df[i]=le.fit_transform(df[i])","03488411":"df.head()","efcb59c3":"df_region=pd.get_dummies(df.region)\ndf=pd.concat([df,df_region],axis=1)\ndf=df.drop([\"region\"],axis=1)","8e59050f":"df.head()","0062bd35":"df.shape","275764e0":"corr=df.corr()","89221b7f":"plt.figure(figsize=(10,10))\nsns.heatmap(corr,annot=True)","0ff796de":"sns.countplot(x ='smoker', data = df)","a911981f":"plt.figure(figsize=(20,10))\nsns.countplot(df[\"age\"])","30dc8055":"plt.figure(figsize=(20,10))\nsns.countplot(df[\"children\"])","fadbbe54":"ax = sns.stripplot(x='smoker', y='charges', data=df)","04c11bdb":"sns.stripplot(x='children', y='charges', data=df,\n              jitter=True, hue='smoker', dodge=True)","87608c55":"plt.figure(figsize=(8,8))\nsns.violinplot(x='smoker', y='charges', data=df,\n               hue='sex', split=True)","a350f165":"df_columns=[\"age\",\"sex\",\"bmi\",\"children\",\"charges\"]","463c0da0":"for i in df_columns:\n    g = sns.FacetGrid(df, col='smoker')\n    g = g.map(sns.kdeplot, i)","2eb3c980":"sns.pairplot(df.drop([\"northeast\",\"northwest\",\"southeast\",\"southwest\"],axis=1),hue=\"smoker\",palette=\"coolwarm\")","d89da114":"sns.scatterplot(x=\"bmi\",y=\"charges\",hue=\"smoker\",data=df)","12c11132":"sns.scatterplot(x=\"charges\",y=\"bmi\",hue=\"children\",data=df)","36b8e5e4":"sns.barplot(x ='children', y ='charges', data = df,palette ='plasma')","43b3056b":"plt.subplot(111)\nsns.distplot(df[\"charges\"], bins=10, kde=True)\nplt.show()\n\nplt.subplot(121)\nsns.distplot(df[\"age\"],bins=10,kde=True)\nplt.show()","97fd5530":"plt.figure(figsize=(20,10))\nsns.boxplot('age', 'charges', data=df)","0704291c":"plt.figure(figsize=(20,10))\nsns.stripplot(x='age', y='charges', data=df)","ac12b14a":"df_columns=[\"age\",\"sex\",\"bmi\",\"children\",\"smoker\"]","434463b6":"for feature in df_columns:\n    data=df.copy()\n    plt.figure(figsize=(10,10))\n    data.groupby(feature)[\"charges\"].median().plot.bar()\n    plt.ylabel(\"charges\")\n    plt.title(feature)\n    plt.show()","7ffaf1b3":"X=df.drop([\"charges\"],axis=1)\ny=df[\"charges\"]","4fda6823":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)","b0b5f2f1":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(X_train,y_train)","b1542d80":"lr_pred = lr.predict(X_test)","be0744d6":"print(lr.score(X_test,y_test))","a3a011df":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10, random_state = 0)\nregressor.fit(X, y)","4e241de9":"regressor_pred = regressor.predict(X_train)","aa381543":"regressor.score(X_test,y_test)","5aad5f44":"from sklearn.metrics import r2_score,mean_squared_error\nprint('MSE train data: %.3f' % (\nmean_squared_error(y_train,regressor_pred)))\nprint('R2 train data: %.3f' % (\nr2_score(y_train,regressor_pred)))","c97b25d7":"Now, we have a column \"region\" which has 4 different categorical values:\n\n->northeast\n\n->northwest\n\n->southeast\n\n->southwest\n\n\n**So we will apply One Hot Encoding**","f81a6246":"**TRAINING THE DATASET ON LINEAR REGRESSION MODEL**","04337ed3":"We came to know from the above observation that \"charges\" column have a very strong\/high correlation with the \"smoker\" column.","653196b6":"**NOW TRYING A DIFFERENT MODEL**","eface98a":"**PREDICTING THE RESULT**","bc9bc1b7":"**It infers that as the age grows the charges also increases**","706a8ee5":"We used the random forest model and got a score of 97%, which is petty good.","cb7e47a3":"**SPLITTING FEATURES INTO INDEPENDENT AND DEPENDENT VARIABLES**","78997528":"**SPLITTING THE DATASET INTO TRAINING AND TEST SET**","f1423125":"**IMPORTING DATASET**","43756dab":"**DATA VISUALISATION**","26cfa3e2":"So at last we got the mean square error as 5098416.425\nand R2 score as 96%","52f59c78":"We used the linear regression model and got a score of 79%","893ea241":"**PREDICTING THE RESULT**","af6247e0":"As the columns \"sex\" and \"smoker\" are categorical with only two different values so we will apply Label Encoder to it.","6e5b5b34":"**TRAINING THE DATASET INTO TEST SET AND TRAIING SET**"}}