{"cell_type":{"d3dc922d":"code","ff70c8b3":"code","f36eea10":"code","74c6b4d0":"code","b7486822":"code","ef20c188":"code","67e1ffda":"code","b62eff07":"code","d0cb18af":"code","69055fa5":"code","67fee4e7":"code","65337cda":"code","d45ff07d":"markdown","82c5321c":"markdown","e70095d6":"markdown","719b0b7a":"markdown","b01dd6b8":"markdown","f307f855":"markdown","0a3be717":"markdown","2921fd1d":"markdown","a7c60ed6":"markdown","fe5d1dc0":"markdown","3152610f":"markdown","495c55e3":"markdown","4cab5e3e":"markdown","10ef7ec5":"markdown"},"source":{"d3dc922d":"\n\nimport numpy as np \nimport math\nimport pandas as pd \nimport datetime\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n%matplotlib inline\n\nimport seaborn as sns\nsns.set_style(\"dark\")\nfrom matplotlib.pyplot import pie, axis, show\nfrom sklearn import preprocessing\nfrom scipy.stats import skew, boxcox\nfrom sklearn import metrics\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n","ff70c8b3":"main_data = pd.read_csv(\"..\/input\/paysim1\/PS_20174392719_1491204439457_log.csv\")","f36eea10":"df = main_data.copy()\ndf['percentage'] = np.where(df['amount']>df['oldbalanceOrg'], 100.0, (df['amount']\/df['oldbalanceOrg'])*100)\ndf['dest']=df['nameDest'].astype(str).str[0]","74c6b4d0":"main_data.info()","b7486822":"fig, ax = plt.subplots()\nplt.rcParams['figure.figsize'] = (20, 16)\nsns.set_theme(style=\"whitegrid\")\ntips = sns.load_dataset(\"tips\")\nsns.countplot(x='type', data=main_data,palette=\"tab20_r\",edgecolor='black')\nfor p in ax.patches:\n    ax.annotate(str(format(int(p.get_height()), ',d')), (p.get_x(), p.get_height()*1.01))\nplt.title('Total transactions',fontsize=25,color='#E43A36')\ndf_pie=main_data.groupby(['type']).size()\n#axis('equal');\n#pie(df_pie, labels=df_pie.index);\n# Pie chart\nplt.rcParams['figure.figsize'] = (8, 6)\nlabels = df_pie.index\nsizes = df_pie\n# only \"explode\" the 2nd slice (i.e. 'Hogs')\nexplode = (0.02, 0.02, 0.02, 0.02,0.02)\n#add colors\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99','#FAE959']\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',\n        shadow=True, startangle=90,wedgeprops={\"edgecolor\":\"0\",'linewidth': 0.5,'linestyle': 'solid', 'antialiased': True})\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')\nplt.tight_layout()\nplt.title('% OF ALL TYPES OF TRANSACTIONS',fontsize=25,color='#E43A36')\nplt.show()","ef20c188":"y_true = list(main_data['isFraud'])\ny_pred = list(main_data['isFlaggedFraud'])\ncf_matrix = metrics.confusion_matrix(y_true, y_pred)\nsns.heatmap(cf_matrix, annot=True, cmap='YlGnBu')\nplt.xlabel(\"isFlaggedFraud\")\nplt.ylabel(\"isFraud\")\nplt.title(\"Confusion matrix for simulator results\")","67e1ffda":"# This code is taken from https:\/\/www.kaggle.com\/netzone\/eda-and-fraud-detection\n\nfig, axs = plt.subplots(2, 2, figsize=(10, 10))\ntmp = main_data.loc[(main_data.type == 'TRANSFER'), :]\n\na = sns.boxplot(x = 'isFlaggedFraud', y = 'amount', data = tmp, ax=axs[0][0])\naxs[0][0].set_yscale('log')\nb = sns.boxplot(x = 'isFlaggedFraud', y = 'oldbalanceDest', data = tmp, ax=axs[0][1])\naxs[0][1].set(ylim=(0,0.5e8 ))\nc = sns.boxplot(x = 'isFlaggedFraud', y = 'oldbalanceOrg', data=tmp, ax=axs[1][0])\naxs[1][0].set(ylim=(0, 3e7))\nd = sns.regplot(x = 'oldbalanceOrg', y = 'amount', data=tmp.loc[(tmp.isFlaggedFraud ==1), :], ax=axs[1][1])\nplt.show()","b62eff07":"plt.figure(figsize=(18,8))\nax = plt.gca()\nsns.lineplot(x=list(range(1,744)),y=df.groupby('step')['isFraud'].sum(),color='blue',alpha=0.5,linewidth=4)\nplt.xlim(0,200)\nplt.xlabel('Time lapse')\nplt.ylabel('Number of fraudulent transactions per hour')\nplt.title('A time series graph of frequency of fraudulent transactions',fontsize=25,color='#E43A36')","d0cb18af":"fig, ax = plt.subplots()\ndf_fraud=main_data[main_data['isFraud']==1]\nsns.countplot(x='type',data=df_fraud, ax=ax,palette=\"tab20_r\",edgecolor='black',alpha=0.75)\ndef change_width(ax, new_value) :\n    for patch in ax.patches :\n        current_width = patch.get_width()\n        diff = current_width - new_value\n\n        # we change the bar width\n        patch.set_width(new_value)\n\n        # we recenter the bar\n        patch.set_x(patch.get_x() + diff * .5)\n\nchange_width(ax, .5)\nfor p in ax.patches:\n    ax.annotate(str(format(int(p.get_height()), ',d')), (p.get_x(), p.get_height()*1.01))\nplt.title('FRAUDULENT TRANSCATIONS',fontsize=25,color='#E43A36')\nplt.show()","69055fa5":"list1=list(df[df['isFraud']==1].groupby(['dest']).size())\nlist2=list(df[df['isFraud']==0].groupby(['dest']).size())\nnewlist=list1+list2\nnewlist\nplt.rcParams['figure.figsize'] = (8, 6)\nlabels = ['Customers(Fraud)','Customers(not Fraud)','Merchants']\nsizes = newlist\n# only \"explode\" the 2nd slice (i.e. 'Hogs')\nexplode = (0.05,0.05, 0.05)\n#add colors\ncolors = ['#ff9999','#ff9999','#66b3ff']\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',\n        shadow=True, startangle=90,wedgeprops={\"edgecolor\":\"0\",'linewidth': 0.5,'linestyle': 'solid', 'antialiased': True})\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')\nplt.tight_layout()\nplt.title('Total transactions distribution on types of recipients',fontsize=25,color='#E43A36',)\nplt.show()","67fee4e7":"df_heatmap = main_data[['amount','oldbalanceOrg','newbalanceOrig','oldbalanceDest','newbalanceDest','isFraud','isFlaggedFraud']]\nsns.heatmap(df_heatmap.corr(), cmap=\"YlGnBu\", annot=True)\nplt.title('CORRELATION HEATMAP OF ALL PARAMS',fontsize=25,color='#E43A36')","65337cda":"newscatplot=df[df['isFraud']==1]\nplt.figure(figsize=(8,8))\nax = plt.gca()\nax.set_ylim(0,2*1e7)\nax.set_xlim(0,2*1e7)\ndf.plot.scatter(x='oldbalanceOrg',y='amount', ax=ax,edgecolors='black',s=100,alpha=0.1,label=\"Legit transaction\")\nnewscatplot.plot.scatter(x='oldbalanceOrg',y='amount', color='#FCD735', ax=ax,edgecolors='red',s=100,alpha=0.1,label=\"Fraud transcation\")\nplt.title('Amount vs Balance',fontsize=25,color='#E43A36')","d45ff07d":"*Fraud category has more dependence on Amount category, we will try to plot it*","82c5321c":"### Plotting types of transactions which fall under the Fraud category","e70095d6":"*There are in total about 0.1% transactions and all are in the Customer's Category*","719b0b7a":"# EDA","b01dd6b8":"### Checking the performance of simulator ","f307f855":"### Scatter Plot between Amount and Balance, highlighting the fraud transaction","0a3be717":"### Plotting different types of transactions","2921fd1d":"### Plotting the Frequency of the Fraud Transaction on a graph","a7c60ed6":"### Plotting heatmap to check correlation between different parameters","fe5d1dc0":"### Boxplotting the various parameters where the system has flagged transactions","3152610f":"There are various inferences from the above graph\n* *Firstly,The fraud line is inclined equally from both axis which implies that whenever the amount dealt was equal to the balance, it was most likely a Fraud*\n* *After a while the fraud line hits a constant limit, which implies that there is limit in some form to the maximum amount which can be CASH OUT or TRANSFER, hence there are no fraud amounts which surpass this limit*","495c55e3":"*The Fraud Check System in place has performed poorly, catching almost negligible percentage of fraud transcation, 16 in total, whereas there are more than 8000 fraud transactions in total, but it has not wrongly flagged legit transactions*","4cab5e3e":"\n\n### There are two types of transactions based on Recipients, One is normal customer and the other one is Merchant, with simple checking it was found that all the transactions pertaining with the Merchants were legit and none of them was found to be fraud, same is described in the below pie chart.\n\n","10ef7ec5":"*There are only two types of transcations which fall under fraud category as shown in the above bar plot*"}}