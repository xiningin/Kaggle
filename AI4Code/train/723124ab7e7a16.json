{"cell_type":{"ffb50cf1":"code","28346272":"code","08561354":"code","af2953e8":"code","6658e67b":"code","08b0dfaa":"code","33913630":"code","3edccb01":"code","38098ebe":"code","eaf12138":"code","be628097":"code","e5427d1a":"code","4a3600a0":"code","8f585792":"code","f334d626":"code","3c4dc2fa":"code","95950b12":"code","e78cd1d9":"code","d25e9116":"code","8701ff00":"code","45f48266":"code","ed0c2a4d":"code","6e9c5df9":"code","8be03957":"code","0aead716":"code","0370cdf1":"code","ee9e0f95":"code","31fd486e":"code","b8c4eb9d":"code","3a95a98d":"code","1c10583a":"markdown","716216af":"markdown","11ac38e3":"markdown","3d47cbf3":"markdown","72f396bb":"markdown","26e87112":"markdown","2190e375":"markdown","a0ed591b":"markdown","897d15da":"markdown","e51ddc69":"markdown","e1530671":"markdown","621b5487":"markdown","8ed8f152":"markdown","1c7a86a7":"markdown","baee72da":"markdown","2f42f3f2":"markdown","a31102f3":"markdown","77e43369":"markdown","4fcf4163":"markdown","541c5c7b":"markdown","503b5c52":"markdown"},"source":{"ffb50cf1":"import numpy as np\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport plotly.express as px\nimport time\n\nimport warnings\nwarnings.filterwarnings(action='ignore')\n\n## XGBoost\nimport xgboost as xgb\nfrom xgboost.sklearn import XGBRegressor","28346272":"train_df = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv')","08561354":"print(train_df.info())\nprint(\"*********\")\nprint(test_df.info())","af2953e8":"print(train_df.shape)\nprint(test_df.shape)","6658e67b":"sns.distplot(train_df['target_carbon_monoxide'] ,fit = norm)\nfig = plt.figure()\nres = stats.probplot(train_df['target_carbon_monoxide'], plot=plt)","08b0dfaa":"train_df['log_target_carbon_monoxide'] = np.log(train_df['target_carbon_monoxide'])\nsns.distplot(train_df['log_target_carbon_monoxide'] ,fit = norm)\nfig = plt.figure()\nres = stats.probplot(train_df['log_target_carbon_monoxide'], plot=plt)","33913630":"sns.distplot(train_df['target_benzene'] ,fit = norm)\nfig = plt.figure()\nres = stats.probplot(train_df['target_benzene'], plot=plt)","3edccb01":"train_df['log_target_benzene'] = np.log(train_df['target_benzene'])\nsns.distplot(train_df['log_target_benzene'] ,fit = norm)\nfig = plt.figure()\nres = stats.probplot(train_df['log_target_benzene'], plot=plt)","38098ebe":"sns.distplot(train_df['target_nitrogen_oxides'] ,fit = norm)\nfig = plt.figure()\nres = stats.probplot(train_df['target_nitrogen_oxides'], plot=plt)","eaf12138":"train_df['log_target_nitrogen_oxides'] = np.log(train_df['target_nitrogen_oxides'])\nsns.distplot(train_df['log_target_nitrogen_oxides'] ,fit = norm)\nfig = plt.figure()\nres = stats.probplot(train_df['log_target_nitrogen_oxides'], plot=plt)","be628097":"independent_variables = ['deg_C','relative_humidity','absolute_humidity','sensor_1','sensor_2','sensor_3','sensor_4','sensor_5']","e5427d1a":"sns.distplot(train_df[\"deg_C\"], fit = norm)","4a3600a0":"sns.distplot(train_df[\"relative_humidity\"], fit = norm)","8f585792":"sns.distplot(train_df[\"absolute_humidity\"], fit = norm)","f334d626":"sns.distplot(train_df[\"sensor_1\"], fit = norm)","3c4dc2fa":"sns.distplot(train_df[\"sensor_2\"], fit = norm)","95950b12":"sns.distplot(train_df[\"sensor_3\"], fit = norm)","e78cd1d9":"sns.distplot(train_df[\"sensor_4\"], fit = norm)","d25e9116":"sns.distplot(train_df[\"sensor_5\"], fit = norm)","8701ff00":"for idx, feature in enumerate(independent_variables):\n    plt.hist(train_df[feature], bins=30, alpha=0.5, label='Train set')\n    plt.hist(test_df[feature], bins=30, alpha=0.5, label='Test set')\n    plt.title(feature + \" Train\/Test\")\n    plt.xlabel(feature)\n    plt.ylabel('Frequency')\n\n    plt.legend()\n    plt.show()","45f48266":"corr_mat = train_df.corr()\ncols = corr_mat.index\nf, ax = plt.subplots(figsize=(12, 9))\nhm = sns.heatmap(corr_mat, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)","ed0c2a4d":"sns.jointplot(\n    data=train_df,\n    x=\"target_carbon_monoxide\", y=\"target_benzene\",\n)","6e9c5df9":"sns.jointplot(\n    data=train_df,\n    x=\"target_carbon_monoxide\", y=\"target_nitrogen_oxides\",\n)","8be03957":"sns.jointplot(\n    data=train_df,\n    x=\"target_benzene\", y=\"target_nitrogen_oxides\",\n)","0aead716":"sns.pairplot(train_df)","0370cdf1":"columns = test_df.columns[1:]\nX_train = train_df[columns].values\nX_test = test_df[columns].values","ee9e0f95":"target_1 = train_df['target_carbon_monoxide'].values.reshape(-1,1)\ntarget_2 = train_df['target_benzene'].values.reshape(-1,1)\ntarget_3 = train_df['target_nitrogen_oxides'].values.reshape(-1,1)","31fd486e":"xgb = XGBRegressor()\nxgb.fit(X_train, target_1)\ntest_target_1 = xgb.predict(X_test)\n\nxgb.fit(X_train, target_2)\ntest_target_2 = xgb.predict(X_test)\n\nxgb.fit(X_train, target_3)\ntest_target_3 = xgb.predict(X_test)","b8c4eb9d":"final = pd.DataFrame()\n\nfinal['date_time'] = test_df['date_time']\nfinal['target_carbon_monoxide'] = test_target_1\nfinal['target_benzene'] = test_target_2\nfinal['target_nitrogen_oxides'] = test_target_3\n\nfinal.head()","3a95a98d":"now = str(time.time()).split('.')[0]\nfinal.to_csv('submit-'+ now + '.csv', index=False)","1c10583a":"<font size=\"5\">The distribution for benzene does not seem normal even for its Log values.<\/font>","716216af":"<font size=\"5\">Importing the Dataset<\/font>","11ac38e3":"absolute_humidity is similar to normal distribution","3d47cbf3":"sensor_2 is similar to normal distribution","72f396bb":"<font size=\"5\"> In case of Nitrogen Oxide its Log values are having a normal distribution.<\/font>","26e87112":"<font size='5'> The distribution is deviated from a normal distribution. Lets check the distribution after taking the Log of this target variable.<\/font>","2190e375":"<font size=\"5\">Let us begin by exploring the target variables and observe their distribution in the training data.<\/font>","a0ed591b":"<font size=\"5\"> Now we will have a look at the distribution of independent variables in the train and test dataset.<\/font>","897d15da":"sensor_4 is similar to normal distribution","e51ddc69":"sensor_3 is not similar to normal distribution. It is a little left skewed","e1530671":"sensor_1 is not similar to normal distribution. It is a little left skewed.","621b5487":"### A strong perfect correlation exists between benzene and carbon monoxide","8ed8f152":"sensor_5 is not similar to normal distribution. It is left skewed","1c7a86a7":"<font size=\"5\">The Dataset does not have any empty cells and all the variables are numerical. That is one less thing to worry about. :)<\/font>","baee72da":"### Upto benzene value 30 we have strong correlation","2f42f3f2":"### A strong correlation exists between nitrogen oxides and carbon monoxide","a31102f3":"## Let's train a model!!","77e43369":"relative_humidity is similar to normal distribution","4fcf4163":"<font size='5'>The log value to carbon monoxide seems closer to normal distribution<\/font>","541c5c7b":"deg_Cis similar to normal distribution","503b5c52":"### deg_C and relative_humidity both have negative correlation and both have low correlation with target variables\n### absolute_humidity has low correlation with targetand all other variables except a slightly medium correlation \n### with sensor_4 and deg_C\n### sensor 1 through 5 have a significant correlation with each other and with the target variables\n### sensor 1, 2, 4, 5 have a positive correlation with target\n### sensor 3 has a negative correlation with target"}}