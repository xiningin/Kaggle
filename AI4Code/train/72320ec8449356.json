{"cell_type":{"d2763600":"code","c0ccdd46":"code","9ffc3c2b":"code","af2ba7b9":"code","1d936989":"code","90851f4a":"code","58dc1cde":"code","18191ae8":"code","1f8e298c":"code","37617866":"code","3d19f3ac":"code","4a525c26":"code","b4c15869":"code","2675d2bc":"code","0efb7809":"code","50ef883c":"code","e5bf4bb5":"code","6e195ce6":"code","5180de7b":"code","a94b71f4":"code","4bb3f358":"code","36e889e1":"code","b9f6ba6b":"markdown","d776919c":"markdown","6eefb55e":"markdown","0b64be50":"markdown","b286824f":"markdown"},"source":{"d2763600":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\n%matplotlib inline\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n# Any results you write to the current directory are saved as output.","c0ccdd46":"sub1 = pd.read_csv('..\/input\/ieee-blend\/lgb_sub.csv')\nsub2 = pd.read_csv('..\/input\/ieee-blend\/submission_IEEE (1).csv')\nsub3 = pd.read_csv('..\/input\/ieee-blend\/submission_IEEE.csv')\nsub4 = pd.read_csv('..\/input\/ieee-blend\/submission.csv')\ntemp=pd.read_csv('..\/input\/ieee-blend\/lgb_sub.csv')","9ffc3c2b":"sns.set()\nplt.hist(sub1['isFraud'],bins=100)\nplt.show()","af2ba7b9":"sns.set()\nplt.hist(sub2['isFraud'],bins=100)\nplt.show()","1d936989":"sns.set()\nplt.hist(sub3['isFraud'],bins=100)\nplt.show()","90851f4a":"sns.set()\nplt.hist(sub4['isFraud'],bins=100)\nplt.show()","58dc1cde":"#temp['isFraud'] = 0.35*sub1['isFraud'] + 0.30*sub2['isFraud'] + 0.25*sub3['isFraud'] + 0.10*sub4['isFraud'] \n#temp.to_csv('submission8.csv', index=False )","18191ae8":"temp['isFraud'] = 0.60*sub4['isFraud'] + 0.40*sub3['isFraud']\ntemp.to_csv('submission_p2_1.csv', index=False )","1f8e298c":"sub_path = \"..\/input\/ieee-blend\"\nall_files = os.listdir(sub_path)\nall_files","37617866":"outs = [pd.read_csv(os.path.join(sub_path, f), index_col=0) for f in all_files]\nconcat_sub = pd.concat(outs, axis=1)\ncols = list(map(lambda x: \"ieee\" + str(x), range(len(concat_sub.columns))))\nconcat_sub.columns = cols\nconcat_sub.reset_index(inplace=True)\nconcat_sub.head()\nncol = concat_sub.shape[1]","3d19f3ac":"# check correlation\nconcat_sub.iloc[:,1:ncol].corr()","4a525c26":"corr = concat_sub.iloc[:,1:7].corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","b4c15869":"# get the data fields ready for stacking\nconcat_sub['ieee_max'] = concat_sub.iloc[:, 1:ncol].max(axis=1)\nconcat_sub['ieee_min'] = concat_sub.iloc[:, 1:ncol].min(axis=1)\nconcat_sub['ieee_mean'] = concat_sub.iloc[:, 1:ncol].mean(axis=1)\nconcat_sub['ieee_median'] = concat_sub.iloc[:, 1:ncol].median(axis=1)","2675d2bc":"concat_sub.describe()","0efb7809":"cutoff_lo = 0.7\ncutoff_hi = 0.3","50ef883c":"concat_sub['isFraud'] = concat_sub['ieee_mean']\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_mean.csv', \n                                        index=False, float_format='%.6f')","e5bf4bb5":"concat_sub['isFraud'] = concat_sub['ieee_median']\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_median.csv', \n                                        index=False, float_format='%.6f')\n","6e195ce6":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), 1, \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             0, concat_sub['ieee_median']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_pushout_median.csv', \n                                        index=False, float_format='%.6f')","5180de7b":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), \n                                    concat_sub['ieee_max'], \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             concat_sub['ieee_min'], \n                                             concat_sub['ieee_mean']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_minmax_mean.csv', \n                                        index=False, float_format='%.6f')","a94b71f4":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), \n                                    concat_sub['ieee_max'], \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             concat_sub['ieee_min'], \n                                             concat_sub['ieee_median']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_minmax_median.csv', \n                                        index=False, float_format='%.6f')","4bb3f358":"sub_base = pd.read_csv('..\/input\/ieee-blend\/lgb_sub.csv')","36e889e1":"concat_sub['ieee_base'] = sub_base['isFraud']\nconcat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), \n                                    concat_sub['ieee_max'], \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             concat_sub['ieee_min'], \n                                             concat_sub['ieee_base']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_minmax_bestbase.csv', \n                                        index=False, float_format='%.6f')","b9f6ba6b":"**submission_p2_1.csv tops the chart**\n**vote if you love blend**","d776919c":"**Hist Graph of scores**","6eefb55e":"**THIS KERNAL IS BLEND OF **\nSo awesome kernels present Right now \n\n**vote if you love blend**\n\n1. https:\/\/www.kaggle.com\/raghaw\/ensemble-on-fire {already blended}\n2. https:\/\/www.kaggle.com\/vincentlugat\/ieee-lgb-bayesian-opt\/output {lgb+bayesian}\n3. https:\/\/www.kaggle.com\/ryches\/keras-nn-starter-w-time-series-split\/output {Keras NN}\n4. https:\/\/www.kaggle.com\/timon88\/lgbm-baseline-small-fe-no-blend\/output {lgbm+fe}","0b64be50":"## phase 1 [Ensemble]\n\n\n","b286824f":"## phase 2 [Stacking]\n\n"}}