{"cell_type":{"4b1237da":"code","2d14b80d":"code","a8ed09a0":"code","7800bb8d":"code","d4af2001":"code","7dbd72f9":"code","6db76350":"code","a948e055":"code","189ff169":"code","ad88810b":"code","8dc8678e":"code","9a883991":"code","49e01a8b":"code","431ab8f7":"code","81072138":"code","e988e2a8":"code","0bb3860f":"code","9d320d3d":"code","8cd74278":"code","e26e58a8":"code","1b8ee2ff":"markdown","23c75cc0":"markdown","1df1c06c":"markdown","fa8469ca":"markdown","0daa4058":"markdown","7b7829d5":"markdown","ef1e997b":"markdown","ef1b9b99":"markdown"},"source":{"4b1237da":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.feature_selection import SelectKBest,chi2,f_classif\nfrom sklearn.model_selection import  train_test_split,KFold,GridSearchCV,StratifiedShuffleSplit,cross_val_score,RandomizedSearchCV\nfrom sklearn.linear_model import LogisticRegression,LogisticRegressionCV\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import RandomForestClassifier,VotingClassifier\nfrom sklearn.metrics import confusion_matrix,accuracy_score,plot_confusion_matrix\n%matplotlib inline\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2d14b80d":"data=pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\ndata.head()","a8ed09a0":"data.isna().sum()","7800bb8d":"data['target']=data['target'].astype('category')\ncol=['sex','fbs','cp','restecg','exang','slope','thal']\ncat=pd.DataFrame(data=data[col]).astype('category')\nnum=data.drop(col,axis=1)\nsns.countplot(x=\"sex\",data=cat,hue=\"cp\")\nplt.legend([])\n#plot depicting the distribution of different types of chest pain and their corresponding count in each gender","d4af2001":"data.info()","7dbd72f9":"#female positive class patients above the age of 50\nfg=data.where((data['age']>=50) & (data['sex']==0) & (data['target']==1)).dropna().shape[0]\n#female positive class patients less than 50\nfl=data.where((data['age']<50) & (data['sex']==0) & (data['target']==1)).dropna().shape[0]\n\n#male positive class patients above the age of 50\nmg=data.where((data['age']>=50) & (data['sex']==1) & (data['target']==1)).dropna().shape[0]\n#male positive class patients less than 50\nml=data.where((data['age']<50) & (data['sex']==1) & (data['target']==1)).dropna().shape[0]\n\n\n# male=data['sex'].sum()\n# female=data.shape[0]-data['sex'].sum()\n# male=data['sex'].value_counts()[1]\n# female=data['sex'].value_counts()[0]\nlabels=[\"WG\",\"WL\",\"MG\",\"ML\"]\nsizes=[fg,fl,mg,ml]\nfig,ax1=plt.subplots()\nax1.pie(sizes,labels=labels,shadow=True,startangle=90, autopct='%1.1f%%')\nplt.legend([\"Women >= 50 yrs\",\"Women <50 yrs\",\"Men >=50 yrs\",\"Men <50 yrs\"],loc=\"right\")\nplt.show()\n#plot shows that below the age of 50 men are more susceptible to CHD while above 50 years the both have same susceptibility\n","6db76350":"pos_class=data.where(data['target']==1).dropna()\nneg_class=data.where(data['target']==0).dropna()\n\nsns.distplot(pos_class['age'])\n#plot gives information about the frequency of individuals in their fifties are more prone to suffer from \n#heart diseases","a948e055":"data['target'].value_counts().plot.bar()","189ff169":"# Covariance provides insights on the relation between different features\n\nplt.figure(figsize=(20,20))\nsns.heatmap(num.corr(),annot=True,cmap=plt.cm.Reds)\nplt.show()","ad88810b":"Y=data['target']\nX=data.drop('target',axis=1)\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=0)","8dc8678e":"# Scaling the data\n\nscaler=StandardScaler().fit(x_train)\nX_train=scaler.transform(x_train)\nX_test=scaler.transform(x_test)","9a883991":"#Naive Bayes algorithm\n\nnb=GaussianNB().fit(x_train,y_train)\ny_pred_nb=nb.predict(x_test)\nlog_conf=plot_confusion_matrix(nb,x_test,y_test,cmap=plt.cm.Blues,normalize='true')\nprint(\"Model Accuracy\",format(accuracy_score(y_test,y_pred_nb)*100,\".3f\"),\"%\")","49e01a8b":"#Logistic Regression\n\nlog=LogisticRegression(max_iter=500,solver='newton-cg').fit(X_train,y_train)\ny_pred=log.predict(X_test)\nlog_conf=plot_confusion_matrix(log,X_test,y_test,cmap=plt.cm.Blues,normalize='true')\nprint(\"Model Accuracy\",format(accuracy_score(y_test,y_pred)*100,\".3f\"),\"%\")","431ab8f7":"#SVM\n\nsvc=SVC().fit(X_train,y_train)\ny_svc_pred=log.predict(X_test)\nplot_confusion_matrix(svc,X_test,y_test,cmap=plt.cm.Blues,normalize='true')\nprint(\"Model Accuracy\",format(accuracy_score(y_test,y_svc_pred)*100,\".3f\"),\"%\")","81072138":"c=np.logspace(-2,10,20)\ngamma=np.logspace(-9,10,20)\nparam_grid={\"gamma\":gamma,\"C\":c}\nshuf=StratifiedShuffleSplit(n_splits=10,test_size=0.4,random_state=0)\ngrid=GridSearchCV(SVC(),param_grid=param_grid,cv=5)\ngrid.fit(X_train,y_train)\nprint(\"param=  \", grid.best_params_,\"\\n score= \",grid.best_score_)","e988e2a8":"sel=SelectKBest(score_func=f_classif,k=\"all\").fit(X,Y)\nfeatures=pd.DataFrame({\"Scores\":sel.scores_,\"features\":X.columns})\nplt.figure(figsize=(15,15))\nsns.barplot(x=\"Scores\",y=\"features\",data=features)","0bb3860f":"important_features=features[features[\"Scores\"]>=40]\nimportant_features","9d320d3d":"c=np.logspace(-2,10,20)\ngamma=np.logspace(-9,10,20)\nparam_grid={\"gamma\":gamma,\"C\":c}\nshuf=StratifiedShuffleSplit(n_splits=10,test_size=0.4,random_state=0)\ngrid=GridSearchCV(SVC(),param_grid=param_grid,cv=5)\ngrid.fit(X_train,y_train)\nprint(\"param=  \", grid.best_params_,\"\\n score= \",grid.best_score_)","8cd74278":"consider=important_features[\"features\"]\nX=data[consider]\nY=data['target']\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.25,random_state=0)\nscaler=StandardScaler().fit(x_train)\nX_train=scaler.transform(x_train)\nX_test=scaler.transform(x_test)\n","e26e58a8":"rnd=RandomForestClassifier(random_state=0).fit(x_train,y_train)\ny_pred_rnd=rnd.predict(x_test)\nplot_confusion_matrix(rnd,x_test,y_test,cmap=plt.cm.Blues,normalize='true')\nprint(\"Model Accuracy\",format(accuracy_score(y_test,y_pred_rnd)*100,\".3f\"),\"%\")","1b8ee2ff":"# Random Forests","23c75cc0":"## selecting features that have scores>=40","1df1c06c":"# Introduction\n\nCoronary Heart Disease(CHD) globally claims many lives anually. There are many risk factors that have to be considered like diabetes, high blood pressure,abnormal pulse rate, high cholestrol\n\n\n## dataset information\n1.   age: the age of the individual whose attributes are being considered\n2.   Sex:\n    *   0: Female\n    *   1: Male\n3.cp-Chest Pain Type:\n    *   1: [typical angina](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC5680106\/#:~:text=Typical%20angina%20(TA)%20is%20defined,coronary%20artery%20disease%20(CAD).)\n    *   2: [atypical angina](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC2763472\/)\n    *   3: [non-anginal pain](https:\/\/pubmed.ncbi.nlm.nih.gov\/2255129\/)\n    *   4: asymptomatic\n\n4. trestbps:normal resting blood-pressure  ( in Hg)\n5. chol: serum cholestoral (in mg\/dl)\n6.  restecg: resting electrocardiographic results\n    * Value 0: normal\n    * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n7. thalach: maximum heart rate achieved\n8. exang: exercise induced angina (1 = yes; 0 = no)\n9. oldpeak = ST depression induced by exercise relative to rest\n10. slope: the slope of the peak exercise ST segment\n    * Value 1: upsloping\n    * Value 2: flat\n    * Value 3: downsloping\n11. ca: number of major vessels (0-3) colored by flourosopy\n12. thal: 3 = normal; 6 = fixed defect; 7 = reversable defect\n14. fbs: (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n","fa8469ca":"## splitting the data","0daa4058":"# number of samples of each class","7b7829d5":"## Hyper parameter tuning","ef1e997b":"# inspecting the presence of null values","ef1b9b99":"checking if feature selection techniques imporoves the model performance"}}