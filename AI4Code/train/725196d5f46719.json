{"cell_type":{"d35b7995":"code","9f00192f":"code","e42700b6":"code","84a06c1e":"code","1ece96d1":"code","8b9c0f8a":"code","1ac93319":"code","957462c3":"code","aaf344a2":"code","1d7f398c":"code","fbb21b38":"code","639f6645":"code","dbf6179d":"code","8f31da29":"code","66ddc248":"code","484696a3":"code","d2d9a901":"code","cebccd07":"code","d0f04fac":"markdown","fd52a984":"markdown","5476f894":"markdown","79d1c5ed":"markdown","edc53d87":"markdown","1e60c6a9":"markdown","848b23d6":"markdown","62a38da7":"markdown","58587068":"markdown"},"source":{"d35b7995":"from IPython.display import Image\nImage(\"..\/input\/autoedaimage\/AutoEDA.png\")","9f00192f":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas_profiling as pp","e42700b6":"df_train = pd.read_csv(\"..\/input\/loan-eligible-dataset\/loan-train.csv\")\n\ndf_train.head()","84a06c1e":"df_test = pd.read_csv(\"..\/input\/loan-eligible-dataset\/loan-test.csv\")\n\ndf_test.head()","1ece96d1":"df_train.shape","8b9c0f8a":"df_test.shape","1ac93319":"pp.ProfileReport(df_train)","957462c3":"!pip install dataprep  # Please use it for the first time if it is not installed in your environment\n\nfrom dataprep.eda import create_report, plot, plot_correlation, plot_missing","aaf344a2":"plot(df_train)","1d7f398c":"create_report(df_train)","fbb21b38":"plot(df_train, \"Property_Area\")","639f6645":"!pip install sweetviz # Please use it for the first time if it is not installed in your environment","dbf6179d":"import sweetviz as sv","8f31da29":"analysis_report = sv.analyze(df_train)","66ddc248":"# analysis_report.show_html() # This will generate a separate report named SWEETVIZ_REPORT.html\nanalysis_report.show_notebook(w=\"100%\",h=\"full\")","484696a3":"analysis_report2 = sv.analyze([df_train,'Train'], target_feat='Loan_Status')","d2d9a901":"analysis_report2.show_notebook(w=\"100%\",h=\"full\")","cebccd07":"analysis_report3 = sv.compare([df_train,'Train'],[df_test,'Test'],target_feat='Loan_Status')\n\nanalysis_report3.show_notebook(w=\"100%\",h=\"full\")","d0f04fac":"### Features:\n\n* General Overview - Quick insights of all variables in the dataset using the plot dataframe.\n* Details about each variables \/ features in the dataset by using create_report - overview, variables, interactions, correlations, missing values\n* Interactions - based on x-axis and y-axis scatter plots\n* Correlations between variables - Pearson's Correlation Coefficient, Spearman's Rank Correlation Coefficient, Kendall's Rank Correlation Coefficient\n* Missing Values - Bar chart, Spectrum, Heatmap, Dendogram representations\n* We can pick one particular feature and analyze - Stats, Bar chart, Pie chart, Word Count, Word Frequency etc as per applicability\n\n\n### When To Use?\n\n* Dataset size is fairly very large (this seems to be 10X faster than Pandas Profiling tools due to it's highly optimized Dask-based computing module)\n* Need some quick insights about an unknown dataset\n* Use this as a basis for your further EDA analysis on top of it","fd52a984":"### Features:\n\n* General Overview - Quick insights of all variables in the dataset\n* Details about each variables \/ features in the dataset\n* Interactions between numeric variables\n* Correlations between variables - Pearson's Correlation Coefficient, Spearman's Rank Correlation Coefficient, Kendall's Rank Correlation Coefficient, Phik Correlation Coefficient, Cramer's V for displaying association measure for nominal random variables\n* Missing Values - Count, Matrix, Heatmap, Dendogram representations\n* Sample data - first and last 10 rows\n\n\n### When To Use?\n\n* Dataset size is not very large\n* Need some quick insights about an unknown dataset\n* Use this as a basis for your further EDA analysis on top of it","5476f894":"# 2. AutoEDA - DataPrep","79d1c5ed":"### Please do provide your feedback, comments and any specific experiences around AutoEDA techniques, what has worked for you, for which industry use cases etc.","edc53d87":"# 3. AutoEDA - SweetViz","1e60c6a9":"### Features:\n\n* General Overview - Quick insights of all variables in the dataset using the associations \/ correlation in the form of a heatmap (including how many duplicates, categorical\/numerical\/text variables etc.)\n* Details about each variables \/ features in the dataset - missing values, distinct etc.\n* Compares Train and Test datasets\n* Provides visualization of target variable in context of train dataset\n\n\n### When To Use?\n\n* Need some quick insights about an unknown dataset\n* Use this as a basis for your further EDA analysis on top of it\n* Need to compare some quick statistical insights between train and test datasets","848b23d6":"# 1. AutoEDA - Pandas Profiling\n\n### Dataset Reference: Loan Prediction dataset from Kaggle","62a38da7":"# Final Interpretation - AutoEDA:\n\n* If we want to get quick insights on statistical inferences, missing values, duplicates, categorical\/numerical\/text features, correlations, interactions, top and bottom 10 rows, comparision between train and test datasets, then we can leverage some of these AutoEDA libraries and their capabilities.\n\n* This helps in saving time significantly as we quickly generate some statistical inferences, insights as part of these reports \/ outcomes.\n\n* If the dataset is large, we may use \"DataPrep\" which seems to be 10X faster than Pandas Profiling as it uses Dask based computing methods.\n\n* We have used one sample dataset (Loan Eligible \/ Loan Prediction dataset) for the analysis to demonstrate features of various techniques. These can be used based on scenarios, data context, business need, feasibility etc. These are non-exhaustive list.\n\n* Some of the AutoEDA libraries in Python are as follows:\n    * Pandas Profiling\n    * DataPrep\n    * SweetViz\n    * AutoViz\n    * LUX\n    * DTale\n\n\nWe will keep adding more experiments.","58587068":"## Objective: To explore various AutoEDA capabilities and perform analysis on a given dataset"}}