{"cell_type":{"aab727d3":"code","b1234567":"code","ea9fd547":"code","b6548bbd":"code","91448e9e":"code","71b0659a":"code","6acf7ffd":"code","f36ff283":"code","d135ca0f":"code","981fafd3":"code","ee6f7549":"code","dd24716b":"code","f0ac9bc4":"code","ae2240a1":"code","53de9223":"code","c6139045":"code","6b893c76":"code","68404436":"code","1b1109c7":"code","d62d4d64":"code","b718c8f3":"code","e77e22fb":"code","b0496daa":"code","766bee92":"markdown","f0c8ae55":"markdown","13801a7b":"markdown","e9b31ab0":"markdown","b57b8a33":"markdown","d913bd28":"markdown","07c84f0e":"markdown","168bbcd9":"markdown","e1b3646b":"markdown","52769e33":"markdown","a114f51c":"markdown","0e964047":"markdown","397b5949":"markdown","19a0e62e":"markdown","59fe9bf3":"markdown","acadcc16":"markdown","a9d9d7ad":"markdown","7222f4a2":"markdown","48c6d626":"markdown","092686b1":"markdown","0eaa51d4":"markdown","ca83d31f":"markdown","f2b83128":"markdown","ffd5708c":"markdown","3cff10bf":"markdown","519fb3c0":"markdown","122649be":"markdown","9f85e95a":"markdown","1e93a077":"markdown","34ed2c5c":"markdown","c55656cc":"markdown","e89a46a2":"markdown","5d402729":"markdown","af41a3bb":"markdown","05efea2a":"markdown","2a82aa43":"markdown","224b579e":"markdown"},"source":{"aab727d3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import roc_auc_score\nimport gc\nimport os, sys\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\nfrom unidecode import unidecode\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport cufflinks as cf\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\nimport re\nsns.set(style='whitegrid')\nimport os","b1234567":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ea9fd547":"train=pd.read_csv('\/kaggle\/input\/massp-health-insurance-prediction\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/massp-health-insurance-prediction\/test.csv')","b6548bbd":"train.head(10)","91448e9e":"test.head(10)","71b0659a":"print(train.shape)\nprint(test.shape)","6acf7ffd":"## C\u00e1c c\u1ed9t d\u1ef1 li\u1ec7u t\u1eadp train bao g\u1ed3m \ntrain.columns","f36ff283":"temp = train[\"Response\"].value_counts()\ndf = pd.DataFrame({'labels': temp.index,\n                   'values': temp.values\n                  })\ndf.iplot(kind='pie',labels='labels',values='values', title='Response')","d135ca0f":"def missing_values_table(df):\n    # Total missing values\n    mis_val = df.isnull().sum()       \n    # Percentage of missing values\n    mis_val_percent = 100 * df.isnull().sum() \/ len(df)       \n    # Make a table with the results\n    mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)        \n    # Rename the columns\n    mis_val_table_ren_columns = mis_val_table.rename(\n    columns = {0 : 'Missing Values', 1 : '% of Total Values'})        \n    # Sort the table by percentage of missing descending\n    mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n    '% of Total Values', ascending=False).round(1)\n    return mis_val_table_ren_columns","981fafd3":"## B\u1ea3ng d\u1eef li\u1ec7u thi\u1ebfu \u1edf t\u1eadp train \nmissing_values_table(train)","ee6f7549":"missing_values_table(test)","dd24716b":"train.dtypes.value_counts()","f0ac9bc4":"numerical_columns=['Age', 'Region_Code','Annual_Premium','Vintage']\ncategorical_columns=['Gender','Driving_License','Previously_Insured','Vehicle_Age','Vehicle_Damage','Response']","ae2240a1":"def plot_stats(train, feature, label,width =12 ):\n    temp = train[feature].value_counts()\n    df1 = pd.DataFrame({feature: temp.index,'S\u1ed1 l\u01b0\u1ee3ng kh\u00e1ch h\u00e0ng ': temp.values})\n\n    # Calculate the percentage of target = 1 per category value\n    cat_perc = train[[feature, label]].groupby([feature],as_index=False).mean()\n    cat_perc.sort_values(by=label, ascending=False, inplace=True)\n    \n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(width,6))\n    \n    sns.set_color_codes(\"pastel\")\n    s = sns.barplot(ax=ax1, x = feature, y = \"S\u1ed1 l\u01b0\u1ee3ng kh\u00e1ch h\u00e0ng \",data=df1)\n   \n    s = sns.barplot(ax=ax2, x = feature, y = label, order=cat_perc[feature], data = cat_perc)\n\n    plt.ylabel('Percent of target with value 1 [%]', fontsize=10)\n    plt.tick_params(axis='both', which='major', labelsize=10)\n    plt.show();","53de9223":"plot_stats(train, 'Gender', 'Response')","c6139045":"plot_stats(train, 'Driving_License', 'Response')","6b893c76":"plot_stats(train, 'Previously_Insured', 'Response')","68404436":"plot_stats(train, 'Vehicle_Age', 'Response')","1b1109c7":"plot_stats(train, 'Vehicle_Damage', 'Response')","d62d4d64":"def plot_numeric_var(col):\n    figure(num=None, figsize=(10, 4), dpi=80)\n    ax1 = sns.kdeplot(train.loc[train['Response'] == 1, col] , label = 'Customer is interested', linewidth=5.0)\n    sns.kdeplot(train.loc[train['Response'] == 0, col] , label = 'Customer is not interested', linewidth=5.0)\n\n    ax1.tick_params(axis='both', which='major', labelsize=15)\n    ax1.set_ylabel('Density', size=20)\n    ax1.set_xlabel(col, size=18)\n\n    leg = plt.legend()\n    leg_texts = leg.get_texts()\n    plt.setp(leg_texts, fontsize='x-large')\n    plt.grid()\n    plt.show()","b718c8f3":"plot_numeric_var('Age')","e77e22fb":"plot_numeric_var('Annual_Premium')","b0496daa":"plot_numeric_var('Vintage')","766bee92":"Nh\u1eadn x\u00e9t: \n+ Kh\u00f4ng c\u00f3 ch\u00eanh l\u1ec7ch l\u1edbn gi\u1eef kh\u00e1ch h\u00e0ng \u0111\u00e3 v\u00e0 ch\u01b0a s\u1eed d\u1ee5ng b\u1ea3o hi\u1ec3m. \n+ \u1ede c\u1ed9t c\u00f3 target 1, t\u1ec9 l\u1ec7 2 lo\u1ea1i kh\u00e1ch h\u00e0ng n\u00e0y g\u1ea7n nh\u01b0 b\u1eb1ng nhau ","f0c8ae55":"### Ch\u00fang ta th\u1ea5y d\u1ef1 li\u1ec7u kh\u00e1 s\u1ea1ch s\u1ebd, kh\u00f4ng c\u00f3 d\u1eef li\u1ec7u thi\u1ebfu. Good news !!!!","13801a7b":"### Ch\u00fang ta s\u1ebd chia th\u00e0nh 2 tr\u01b0\u1eddng d\u1eef li\u1ec7u, d\u1eef li\u1ec7u s\u1ed1 v\u00e0 d\u1eef li\u1ec7u ph\u00e2n lo\u1ea1i, c\u1ee5 th\u1ec3 c\u00e1c tr\u01b0\u1eddng s\u1ebd \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i nh\u01b0 sau","e9b31ab0":"| C\u1ed9t | \u00dd ngh\u0129a  | \n| --- | --- | \n| Response | Target c\u1ee7a d\u1eef li\u1ec7u| \n| id | id kh\u00e1ch h\u00e0ng |\n| Gender | gi\u1edbi t\u00ednh |\n| Age | Tu\u1ed5i kh\u00e1ch h\u00e0ng  | \n| Driving_License | Kh\u00e1ch h\u00e0ng ch\u01b0a c\u00f3 b\u1eb1ng l\u00e1i hay ch\u01b0a | \n| Region_Code | M\u00e3 khu v\u1ef1c c\u1ee7a kh\u00e1ch h\u00e0ng | \n| Previously_Insured | Kh\u00e1ch h\u00e0ng \u0111\u00e3 c\u00f3 B\u1ea3o hi\u1ec3m Xe c\u1ed9 | \n| Vehicle_Age | Tu\u1ed5i th\u1ecd c\u1ee7a xe  |\n| Vehicle_Damage |Xe c\u00f3 b\u1ecb h\u1ecfng h\u00f3c hay kh\u00f4ng | \n| Annual_Premium | S\u1ed1 ti\u1ec1n kh\u00e1ch h\u00e0ng c\u1ea7n tr\u1ea3 d\u01b0\u1edbi d\u1ea1ng ph\u00ed b\u1ea3o hi\u1ec3m trong n\u0103m | \n| Policy_Sales_Channel | M\u00e3 \u1ea9n danh cho k\u00eanh ti\u1ebfp c\u1eadn kh\u00e1ch h\u00e0ng | \n| Vintage | S\u1ed1 ng\u00e0y, Kh\u00e1ch h\u00e0ng \u0111\u00e3 \u0111\u01b0\u1ee3c li\u00ean k\u1ebft v\u1edbi c\u00f4ng ty  | \n","b57b8a33":"Nh\u1eadn x\u00e9t: \n+ C\u00f3 s\u1ef1 ph\u00e2n ph\u1ed1i kh\u00f4ng \u0111\u1ed3ng \u0111\u1ec1u gi\u1eefa \u1edf c\u00e1c \u0111\u1ed9 tu\u1ed5i \u0111\u1ed1i v\u1edbi target. Kh\u00e1c h\u00e0ng c\u00f3 \u0111\u1ed9 tu\u1ed5i l\u1edbn h\u01a1n (40-50) c\u00f3 xu h\u01b0\u1edbng mua b\u1ea3o hi\u1ec3m \n+ \u0110\u1ed9 tu\u1ed5i t\u1eadp trung 20-30","d913bd28":"# <a id='2.2'>2.2. Ph\u00e2n t\u00edch d\u1eef li\u1ec7u tr\u01b0\u1eddng ph\u00e2n lo\u1ea1i <\/a> ","07c84f0e":"\n#### Ph\u00e2n lo\u1ea1i c\u00e1c tr\u01b0\u1eddng d\u1eef li\u1ec7u ","168bbcd9":"T\u1eadp train c\u00f3 190554 m\u1eabu d\u1eef li\u1ec7u, t\u1eadp test c\u00f3 190555 m\u1eabu d\u1eef li\u1ec7u. D\u1eef li\u1ec7u kh\u00e1c l\u1edbn !!!","e1b3646b":"Nh\u1eadn th\u1ea5y kh\u00e1ch h\u00e0ng n\u1eef \u00edt h\u01a1n, nh\u01b0ng \u1edf nh\u1eefng kh\u00e1ch h\u00e0ng c\u00f3 reponse =1, t\u1ec9 l\u1ec7 nam n\u1eef kh\u00e1 \u0111\u1ed3ng \u0111\u1ec1u","52769e33":"#### S\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n pandas \u0111\u1ec3 g\u1ecdi c\u00e1c d\u1eef li\u1ec7u ","a114f51c":"## Outline\n\n- <a href='#1'>1. Gi\u1edbi thi\u1ec7u d\u1eef li\u1ec7u<\/a>\n    - <a id='#1-1'>1.1. Th\u00f4ng tin t\u1ed5ng quan d\u1eef li\u1ec7u <\/a> \n    - <a id='#1-1'>1.2. Th\u00f4ng tin t\u1ed5ng quan target <\/a> \n    - <a id='#1-1'>1.3. Metric \u0111\u00e1nh gi\u00e1 <\/a>\n\n- <a href='#2'>2. Khai ph\u00e1 d\u1eef li\u1ec7u <\/a>  \n    - <a id='#2-1'>2.1. T\u1ed5ng quan d\u1eef li\u1ec7u thi\u1ebfu <\/a> \n    - <a id='#2-1'>2.2. Tr\u01b0\u1eddng d\u1eef li\u1ec7u s\u1ed1  (numeric) <\/a> \n    - <a id='#2-2'>2.3. Tr\u01b0\u1eddng d\u1eef li\u1ec7u ph\u00e2n lo\u1ea1i (categotical)<\/a>\n","0e964047":"#### In tr\u01b0\u1eddng d\u1eef li\u1ec7u b\u1ecb thi\u1ebfu","397b5949":"# <a id='2.2'>2.2. Ph\u00e2n t\u00edch d\u1eef li\u1ec7u s\u1ed1 <\/a>  ","19a0e62e":"## \u0110\u1ecbnh ngh\u0129 h\u00e0m ki\u1ec3m tra d\u1eef li\u1ec7u thi\u1ebfu","59fe9bf3":"### Ti\u1ebfp t\u1ee5c v\u1edbi c\u1ed9t d\u1eef li\u1ec7u 'Vehicle_Age'","acadcc16":"V\u1edbi b\u00e0i to\u00e1n classification , target ch\u00eanh l\u1ec7ch gi\u1eefa 2 l\u1edbp, th\u01b0\u1eddng s\u1eed d\u1ee5ng AUC (Area Under The Curve) score \u0111o \u0111\u1ea1c \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a m\u00f4 h\u00ecnh.\n\n\n [AUC (Area Under The Curve)](https:\/\/towardsdatascience.com\/understanding-auc-roc-curve-68b2303cc9c5) l\u00e0 di\u1ec7n t\u00edch d\u01b0\u1edbi \u0111\u01b0\u1eddng cong ROC.\n\n![logo price](https:\/\/miro.medium.com\/max\/361\/1*pk05QGzoWhCgRiiFbz-oKQ.png)","a9d9d7ad":"# <a id='1.3'>1.3 Metric \u0111o \u0111\u1ea1c \u0111\u1ed9 ch\u00ednh x\u00e1c<\/a>","7222f4a2":"Vi\u1ebft h\u00e0m gi\u00fap v\u1ebd \u0111\u1ed3 th\u1ecb t\u00ednh t\u1ea7n su\u1ea5t xu\u1ea5t hi\u1ec7n v\u00e0 ph\u1ea7n tr\u0103m c\u00e1c ph\u00e2n lo\u1ea1i","48c6d626":"# <a id='1'>1.Gi\u1edbi thi\u1ec7u v\u1ec1 data<\/a>\n\n#### L\u1ea5y link dataset\n","092686b1":"# <a id='2'>2.Ph\u00e2n t\u00edch d\u1eef li\u1ec7u <\/a>","0eaa51d4":"## Nh\u1eadp c\u00e1c th\u01b0 vi\u1ec7n","ca83d31f":"### T\u1eadp hu\u1ea5n luy\u1ec7n (training set)","f2b83128":"Notebook n\u00e0y s\u1ebd ph\u00e2n t\u00edch d\u1eef li\u1ec7u cu\u1ed9c thi [MaSSP - Health Insurance Prediction](https:\/\/www.kaggle.com\/c\/massp-health-insurance-prediction\/discussion?sort=votes).\n\n<font size=\"+3\" color='#053c96'><b>Bussiness Goal<\/b><\/font>\n\n- Vi\u1ec7c x\u00e2y d\u1ef1ng m\u1ed9t m\u00f4 h\u00ecnh \u0111\u1ec3 d\u1ef1 \u0111o\u00e1n li\u1ec7u kh\u00e1ch h\u00e0ng c\u00f3 quan t\u00e2m \u0111\u1ebfn **b\u1ea3o hi\u1ec3m xe c\u1ed9** hay kh\u00f4ng l\u00e0 v\u00f4 c\u00f9ng h\u1eefu \u00edch \u0111\u1ed1i v\u1edbi c\u00f4ng ty,  v\u00ec t\u1eeb \u0111\u00f3, c\u00f4ng ty c\u00f3 th\u1ec3 l\u1eadp k\u1ebf ho\u1ea1ch chi\u1ebfn l\u01b0\u1ee3c truy\u1ec1n th\u00f4ng \u0111\u1ec3 ti\u1ebfp c\u1eadn nh\u1eefng kh\u00e1ch h\u00e0ng \u0111\u00f3 v\u00e0 t\u1ed1i \u01b0u h\u00f3a m\u00f4 h\u00ecnh kinh doanh v\u00e0 doanh thu c\u1ee7a m\u00ecnh.\n\n- B\u00e2y gi\u1edd, \u0111\u1ec3 d\u1ef1 \u0111o\u00e1n xem li\u1ec7u kh\u00e1ch h\u00e0ng c\u00f3 quan t\u00e2m \u0111\u1ebfn b\u1ea3o hi\u1ec3m xe c\u1ed9 hay kh\u00f4ng, b\u1ea1n c\u00f3 th\u00f4ng tin v\u1ec1 nh\u00e2n kh\u1ea9u h\u1ecdc (gi\u1edbi t\u00ednh, tu\u1ed5i, lo\u1ea1i m\u00e3 v\u00f9ng), Xe c\u1ed9 (Tu\u1ed5i xe, Thi\u1ec7t h\u1ea1i), Ch\u00ednh s\u00e1ch (Ph\u00ed b\u1ea3o hi\u1ec3m, k\u00eanh t\u00ecm ngu\u1ed3n cung \u1ee9ng), v.v. T\u1eeb nh\u1eefng th\u00f4ng tin nh\u00e2n kh\u1ea9u h\u1ecdc, c\u00f4ng ty mu\u1ed1n x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh d\u1ef1 \u0111o\u00e1n li\u1ec7u kh\u00e1ch h\u00e0ng c\u00f3 quan t\u00e2m \u0111\u1ebfn b\u1ea3o hi\u1ec3m xe c\u1ed9 hay kh\u00f4ng? \n\n\n<img src=\"https:\/\/jordandream.com\/wp-content\/uploads\/2021\/03\/Motor-Insurance.jpg\" alt=\"drawing\" width=\"600\"\/>","ffd5708c":"#### Nh\u1eadn x\u00e9t: D\u1eef li\u1ec7u kh\u00f4ng c\u00e2n b\u1eb1ng, kh\u00e1ch h\u00e0ng c\u00f3 tr\u1ea3 l\u1eddi l\u00e0 0 chi\u1ebfm 87.7%, \u0111\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng kh\u00f3 kh\u0103n ch\u00fang ta c\u1ea7n ph\u1ea3i x\u1eed l\u00fd trong qu\u00e1 tr\u00ecnh x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh","3cff10bf":"### K\u1ebft th\u00fac ph\u1ea7n n\u00e0y v\u1edbi d\u1eef li\u1ec7u **Vehicle_Damage**","519fb3c0":"T\u1ea5t c\u00e0 kh\u00e1ch h\u00e0ng \u0111\u01b0\u1ee3c kh\u1ea3o s\u00e1t \u0111\u1ec1u c\u00f3 b\u1eb1ng l\u00e1i xe, c\u00f3 th\u1ec3 th\u1ea5y data \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn l\u1ecdc k\u0129 c\u00e0ng ","122649be":"## T\u1ed5ng k\u1ebft: \nSau khi ph\u00e2n t\u00edch d\u1eef li\u1ec7u, c\u00f3 m\u1ed9t s\u1ed1 \u0111i\u1ec3m ch\u00fa \u00fd sau:\n+ D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c cung c\u1ea5p kh\u00e1c s\u1ea1ch s\u1ebd\n+ C\u00f3 11 tr\u01b0\u1eddng th\u00f4ng tin, bao g\u1ed3m d\u1eef li\u1ec7u s\u1ed1 v\u00e0 d\u1eef li\u1ec7u ph\u00e2n lo\u1ea1i \n+ \u0110a s\u1ed1 c\u00e1c tr\u01b0\u1eddng d\u1eef li\u1ec7u c\u00f3 ph\u00e2n b\u1ed1 kh\u00e1 \u0111\u1ec1u \u1edf 2 target, kh\u00f4ng c\u00f3 c\u1ed9t d\u1eef li\u1ec7u n\u00e0o th\u1ec3 hi\u1ec7n t\u1ea7m quan tr\u1ecdng n\u1ed5i b\u1eadt v\u1edbi c\u1ed9t target","9f85e95a":"#### h\u00e0m v\u1ebd ph\u00e2n ph\u1ed1i c\u1ee7a d\u1eef li\u1ec7u s\u1ed1 thoe t\u1eebng target ","1e93a077":"Nh\u1eadn x\u00e9t: \n+ Kh\u00f4ng qu\u00e1 kh\u00e1c bi\u1ec7t gi\u1eefa kh\u00e1c h\u00e0ng interested v\u00e0 kh\u00f4ng interesed \u1edf tr\u01b0\u1eddng d\u1eef li\u1ec7u n\u00e0y\n+ Annual_Premium  trung b\u00ecnh t\u1ea7m 40k","34ed2c5c":"Nh\u1eadn x\u00e9t: \n+ D\u1eef li\u1ec7u c\u1ed9t n\u00e0y kh\u00f4ng c\u00f3 s\u1ef1 ch\u00eanh l\u1ec7ch l\u1edbn (50-50)\n+ T\u01b0\u01a1ng t\u1ef1 \u0111\u1ed1i v\u1edbi kh\u00e1ch h\u00e0ng c\u00f3 c\u00e2u tr\u1ea3 l\u1eddi l\u00e0 1.","c55656cc":"### Quan s\u00e1t t\u01b0\u01a1ng quan kh\u00e1ch h\u00e0ng c\u00f3 b\u1eb1ng l\u00e1i xe v\u1edbi c\u1ed9t target","e89a46a2":"# <a id='1.1'>1.1. T\u1ed5ng quan c\u00e1c tr\u01b0\u1eddng d\u1eef li\u1ec7u <\/a>","5d402729":"# <a id='2.1'>2.1. Ph\u00e2n t\u00edch d\u1eef li\u1ec7u thi\u1ebfu <\/a>","af41a3bb":"### T\u1eadp ki\u1ec3m tra (Testing set)","05efea2a":"# <a id='1.2'>1.2 T\u1ed5ng quan v\u1ec1 target<\/a>","2a82aa43":"### Quan s\u00e1t t\u01b0\u01a1ng quan kh\u00e1ch h\u00e0ng \u0111\u00e3 x\u1eed d\u1ee5ng b\u1ea3o hi\u1ec3m tr\u01b0\u1edbc \u0111\u00f3 (Previously_Insured) v\u1edbi c\u1ed9t target","224b579e":"Nh\u1eadn x\u00e9t: \n+ C\u00f3 3 ph\u00e2n lo\u1ea1i ch\u00ednh: 1-2 n\u0103m, B\u00e9 h\u01a1n 1 n\u0103m, l\u1edbn h\u01a1n 2 n\u0103m\n+ Kh\u00e1ch h\u00e0ng l\u00e2u n\u0103m chi\u1ebfm t\u1ec9 l\u1ec7 \u00edt\n+ Kh\u00f4ng c\u00f3 ch\u00eanh l\u1ec7ch gi\u1eefa c\u00e1c nh\u00f3m kh\u00e1ch h\u00e0ng \u0111\u1ed1i v\u1edbi target b\u1eb1ng 1. T\u1eeb \u0111\u1ea5y cho th\u1ea5y, kh\u00e1ch h\u00e0ng l\u00e2u n\u0103m c\u00f3 xu h\u01b0\u1edbng ch\u1ecdn b\u1ea3o hi\u1ec3m xe c\u1ed9 "}}