{"cell_type":{"dfcedf0d":"code","69aafa90":"code","9e79e6d9":"code","669052d0":"code","9bd0bba6":"code","96fc999f":"code","da797be0":"code","e2838150":"code","52770ea7":"code","40ae1919":"code","7be5038d":"code","18a6ead2":"code","75fefeca":"code","2eb95020":"code","1d3b84d1":"code","1f946676":"code","7fc0e549":"code","68bb1d25":"code","4a42f5d3":"code","8f950647":"code","872d972b":"code","90282657":"code","4fafd117":"code","7fd017a8":"code","500daba3":"code","8273625f":"code","12427bd9":"code","7a74a2eb":"code","8472ca20":"code","3d7cb611":"code","47f3b5c0":"code","daa705a0":"code","026ec8f4":"code","0f26c6bc":"code","8a6af683":"code","b279b30a":"code","5a041c7c":"code","4dcc95b5":"code","252bab4c":"code","5a3c7814":"code","7e6cd092":"code","df8ff572":"code","f336a83e":"code","251f659f":"code","ec8cd838":"code","a0516c07":"code","663bd986":"code","5b33bf4c":"code","12135f17":"code","d48ae435":"code","7fa5f3e4":"code","a870b61a":"code","9fd63d12":"code","2de3e7b3":"code","a1baced0":"code","0c829ae6":"code","7250d52f":"code","a926cfcb":"code","1f7e0b28":"code","31c78569":"code","3699f563":"code","bbf51fc9":"code","3de1c6fd":"code","84cb5980":"code","90b90ae4":"code","b5d6c732":"code","b68da0b1":"code","e26b4dee":"markdown","33f778ed":"markdown","02ca4a28":"markdown","390c727e":"markdown","5a105bdd":"markdown","7308abeb":"markdown","2b041045":"markdown","7d5dddfe":"markdown","dca2b298":"markdown","a6418bb9":"markdown","316e5ad7":"markdown","78b0b4e9":"markdown","c8397f8c":"markdown","889977f2":"markdown","600486aa":"markdown","b608f3ce":"markdown","88e02ce6":"markdown","59fe5cc4":"markdown","a65deb7c":"markdown","3576b34a":"markdown","eb36edcf":"markdown","ceb04a4d":"markdown","6270938f":"markdown","56682116":"markdown","3ec1c5b3":"markdown","1293cc51":"markdown","88d87171":"markdown","ff47200a":"markdown","156f4219":"markdown","a8e9adda":"markdown","3fc6d69f":"markdown","c459be70":"markdown","979c23f9":"markdown","afecc805":"markdown","513f94e2":"markdown","29f7c47c":"markdown","b54c2d22":"markdown","11ee3cd5":"markdown","9838ef45":"markdown","f43acaa6":"markdown","7d81c4ec":"markdown","a6f9641e":"markdown","9a91e600":"markdown","a01900e5":"markdown","d4ba1772":"markdown","154ccbe4":"markdown","f7bce9cd":"markdown","92d36334":"markdown","8794fa4b":"markdown","6b9373fc":"markdown","9a188037":"markdown","7adc7578":"markdown","ff4e31eb":"markdown","3815b26e":"markdown","73b41c68":"markdown","e9a6b1f2":"markdown","73846ea4":"markdown","268156d4":"markdown","bcb82409":"markdown","5c3e898c":"markdown","db382afd":"markdown","d31b365d":"markdown","6c3d22e3":"markdown","70728a04":"markdown","18a08cb5":"markdown","d125eb26":"markdown","205ba7bc":"markdown","8fdd56cb":"markdown","d65bf692":"markdown","7c0a270a":"markdown","e82635fc":"markdown","3f9083ab":"markdown","881a9490":"markdown","3e25c859":"markdown","53ac9ad1":"markdown","358da256":"markdown","c31122c9":"markdown","bc02e787":"markdown","3534b147":"markdown","a62e6b1a":"markdown","14b7c51f":"markdown","9d407e2f":"markdown"},"source":{"dfcedf0d":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","69aafa90":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.utils import shuffle\nfrom sklearn.model_selection import train_test_split\n  \nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import roc_auc_score, f1_score, precision_score, recall_score, accuracy_score, auc, roc_curve\n\n\nimport xgboost as xgb\n\nimport optuna\n\nseed=42\n\nplt.style.use(\"seaborn-whitegrid\")\nplt.rc(\"figure\", autolayout=True)\nplt.rc(\"axes\", labelweight=\"bold\", labelsize=\"large\", titleweight=\"bold\", titlesize=14, titlepad=10)","9e79e6d9":"def num_plot(df, col, title, symb):\n    fig, ax = plt.subplots(2, 1, sharex=True, figsize=(8,5),gridspec_kw={\"height_ratios\": (.2, .8)})\n    ax[0].set_title(title,fontsize=18)\n    sns.boxplot(x=col, data=df, ax=ax[0],color = \"#1D8EF5\")\n    ax[0].set(yticks=[])\n    sns.histplot(x=col, data=df, ax=ax[1],color = \"#33AAFF\", edgecolor=\"#1D1EA2\")\n    ax[1].set_xlabel(col, fontsize=16)\n    plt.axvline(df[col].mean(), color='darkgreen', linestyle='--',linewidth=2.2, label='mean=' + str(np.round(df[col].mean(),1)) + symb)\n    plt.axvline(df[col].median(), color='red', linestyle='--',linewidth=2.2, label='median='+ str(np.round(df[col].median(),1)) + symb)\n    plt.axvline(df[col].mode()[0], color='purple', linestyle='--',linewidth=2.2, label='mode='+ str(np.round(df[col].mode()[0],1)) + symb)\n    plt.legend(bbox_to_anchor=(1, 1.03), ncol=1, fontsize=17, fancybox=True, shadow=True, frameon=True)\n    plt.tight_layout()\n    plt.show()","669052d0":"df=pd.read_csv('\/kaggle\/input\/bank-marketing-dataset\/bank.csv')","9bd0bba6":"df.head()","96fc999f":"df.columns","da797be0":"df.info()","e2838150":"df.describe()","52770ea7":"df['day'] = df['day'].astype(object)","40ae1919":"df=df.drop('duration', axis=1)","7be5038d":"df_clean = df.copy()","18a6ead2":"df_clean.describe()","75fefeca":"sns.heatmap(df.corr(), cmap='RdBu', annot=True, vmin=-1, vmax=1)\nplt.title('Correlation Matrix')\nplt.show()","2eb95020":"num_plot(df_clean, 'age', 'Age Distribution', 'yo')","1d3b84d1":"num_plot(df_clean, 'balance', 'Balance Distribution', '$')","1f946676":"num_plot(df_clean, 'campaign', 'Campaign Distribution', '')","7fc0e549":"num_plot(df_clean, 'pdays', 'Pdays Distribution', 'days')","68bb1d25":"df_clean['new_cust'] = df_clean['pdays'] == -1","4a42f5d3":"df_clean['new_cust'] = df_clean['new_cust'].map({False:0, True:1})","8f950647":"df=df_clean","872d972b":"palette = {'yes':'green', 'no':'red'}\npalette = {'yes':'#46C646', 'no':'#FF0000'}","90282657":"plt.figure(figsize=(8, 5.5));\nplt.title('Job vs campaign success')\ng = sns.countplot(x= 'job', hue = 'deposit', data=df, palette=palette)\nplt.xticks(rotation=70)\nplt.yticks([])\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","4fafd117":"plt.figure(figsize=(5, 4.5));\nplt.title('Marital Status vs campaign success')\ng = sns.countplot(x= 'marital', hue = 'deposit', data=df, palette=palette);\nplt.xticks(rotation=70)\nplt.yticks([])\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","7fd017a8":"plt.figure(figsize=(5, 4));\nplt.title('Education vs campaign success')\ng = sns.countplot(x= 'education', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nplt.yticks([])\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","500daba3":"plt.figure(figsize=(4, 4));\nplt.title('Default vs campaign success')\ng = sns.countplot(x= 'default', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.yticks([])\nplt.show()","8273625f":"plt.figure(figsize=(4, 4));\nplt.title('Loan vs campaign success')\ng = sns.countplot(x= 'loan', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.yticks([])\nplt.show()","12427bd9":"plt.figure(figsize=(4, 5));\nplt.title('Contact vs campaign success')\ng = sns.countplot(x= 'contact', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nplt.yticks([])\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","7a74a2eb":"plt.figure(figsize=(4, 5));\nplt.title('Housing vs campaign success')\ng = sns.countplot(x= 'housing', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nplt.yticks([])\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","8472ca20":"plt.figure(figsize=(18, 4));\nplt.title('Day vs campaign success')\ng = sns.countplot(x= 'day', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nplt.yticks([])\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","3d7cb611":"plt.figure(figsize=(8, 4));\nplt.title('Month vs campaign success')\ng = sns.countplot(x= 'month', hue = 'deposit', data=df, order=['jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec'], palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nplt.yticks([])\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","47f3b5c0":"plt.figure(figsize=(5, 4));\nplt.title('Poutcome vs campaign success')\ng = sns.countplot(x= 'poutcome', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nplt.yticks([])\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","daa705a0":"plt.figure(figsize=(5, 4));\nplt.title('New_customer vs campaign success')\ng = sns.countplot(x= 'new_cust', hue = 'deposit', data=df, palette=palette);\nplt.legend(title='Succes?', ncol=1, fancybox=True, shadow=True)\nplt.yticks([])\nfor container in g.containers:\n    g.bar_label(container, padding = 2)\nplt.show()","026ec8f4":"sns.regplot(x='age',y='balance', data=df)\nplt.show()","0f26c6bc":"df['age_cate'] = pd.cut(df['age'], bins=[0, 35, 55, 70, float('Inf')], labels=['0-35', '35-55', '55-70', '70-95'])","8a6af683":"plt.figure(figsize=(6,4))\nsns.boxplot(x='age_cate', y='balance', hue='deposit', data=df, palette=palette)\nplt.ylabel('balance($) log transform.')\nplt.xlabel('Age')\nplt.title('Balance VS Age by Deposit')\nplt.yscale('log')\nplt.legend(bbox_to_anchor=(1.3, 0.6), title='Succes?', loc = 'lower right', fontsize=13, fancybox=True, shadow=True, frameon=True)\nplt.show()","b279b30a":"df_clean = df_clean.replace(['yes','no'], [1,0])","5a041c7c":"cat_feat = df_clean.select_dtypes(include=\"object\").columns","4dcc95b5":"cat_feat","252bab4c":"df_clean['job'].value_counts()","5a3c7814":"df_clean['job'] = df_clean['job'].replace('unknown', np.nan)","7e6cd092":"df_clean['age_cate'].value_counts()","df8ff572":"df_clean['age_cate'] = df_clean['age_cate'].map({'0-35':0,'35-55':1,'55-70':2,'70-95':3})","f336a83e":"df_clean['marital'].value_counts()","251f659f":"df_clean['marital'] = df_clean['marital'].map({'single':0,'married':1,'divorced':2})","ec8cd838":"df_clean['education'].value_counts()","a0516c07":"df_clean['education'] = df_clean['education'].map({'primary':0,'secondary':1,'tertiary':2, 'unknown':np.nan})","663bd986":"df_clean['contact'].value_counts()","5b33bf4c":"df_clean['contact'] = df_clean['contact'].map({'telephone':0,'cellular':1, 'unknown':np.nan})","12135f17":"df_clean['month'].value_counts()","d48ae435":"df_clean['month'] = df_clean['month'].map({'jan':0,'feb':1,'mar':2,'apr':3,'may':4,'jun':5,'jul':6,'aug':7,'sep':8,'oct':9,'nov':10,'dec':11})","7fa5f3e4":"df_clean['poutcome'].value_counts()","a870b61a":"df_clean = df_clean[df_clean['poutcome']!='other']","9fd63d12":"df_clean['poutcome'] = df_clean['poutcome'].replace('unknown',np.nan)","2de3e7b3":"df_clean.isna().sum()","a1baced0":"encoded_df = pd.get_dummies(df_clean, drop_first=True)","0c829ae6":"X = encoded_df.drop('deposit', axis=1)\r\ny = encoded_df['deposit']","7250d52f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, stratify=y, random_state=42)","a926cfcb":"X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size = 0.15, stratify=y_train, random_state=42)","1f7e0b28":"def objective(trial, X_train=X_train, X_val=X_val, y_train=y_train, y_val=y_val):\n    param = {\n        'objective' : 'binary:logistic',\n        'eval_metric' : 'auc',\n        'lambda': trial.suggest_loguniform('lambda', 1e-3, 10.0),\n        'alpha': trial.suggest_loguniform('alpha', 1e-3, 10.0),\n        'colsample_bytree': trial.suggest_float('colsample_bytree', 0.1,1),\n        'subsample': trial.suggest_categorical('subsample', [0.4,0.5,0.6,0.7,0.8,1.0]),\n        'learning_rate': trial.suggest_loguniform('learning_rate', 1e-2,0.5),\n        'n_estimators': trial.suggest_categorical('n_estimators', [1000,1500,2000,2500,3000,3500]),\n        'max_depth': trial.suggest_int('max_depth', 3,10),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 20),\n    }\n\n\n    model = xgb.XGBClassifier(**param,use_label_encoder=False)    \n    model.fit(X_train, y_train, eval_set=[(X_val, y_val)], early_stopping_rounds=100, verbose=False,)   \n    preds = model.predict(X_val)\n    score = accuracy_score(y_val, preds)\n\n    return score","31c78569":"study = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=50)\n\nprint(\"Number of finished trials: \", len(study.trials))\nprint(\"Best trial:\")\ntrial = study.best_trial\n\nprint(\"  Value: {}\".format(trial.value))\nprint(\"  Params: \")\n\nhp = study.best_params\n\nfor key, value in trial.params.items():\n    print(\"    {}: {}\".format(key, value))","3699f563":"xgb_model = xgb.XGBClassifier(**hp)","bbf51fc9":"xgb_model.fit(X_train, y_train, eval_set=[(X_val, y_val)], early_stopping_rounds=100, verbose=0)","3de1c6fd":"y_pred_xgb = xgb_model.predict(X_test)","84cb5980":"print(classification_report(y_test, y_pred_xgb,target_names = ['No','Yes']))","90b90ae4":"plt.figure(figsize = (4, 5))\n\nprobs = xgb_model.predict_proba(X_test)\npreds = probs[:,1]\nfprxgb, tprxgb, _ = roc_curve(y_test, preds)\nroc_aucxgb = auc(fprxgb, tprxgb)\n\nplt.plot(fprxgb, tprxgb, 'b', label = 'AUC = %0.2f' % roc_aucxgb)\nplt.plot([0, 1], [0, 1],'r--')\nplt.title('ROC XGBoost ',fontsize=20)\nplt.ylabel('True Positive Rate',fontsize=15)\nplt.xlabel('False Positive Rate',fontsize=15)\nplt.legend(loc = 'lower right', fontsize=15, fancybox=True, shadow=True, frameon=True,handlelength=0)\nplt.show()","b5d6c732":"xgb_model.feature_names = encoded_df.drop('deposit', axis = 1).columns\nfeat_df= pd.DataFrame({'feature': xgb_model.feature_names,'importance':xgb_model.feature_importances_})\nsorted_df=feat_df.sort_values('importance', ascending=False)","b68da0b1":"plt.figure(figsize=(6,3))\nsns.barplot(x='importance', y='feature', data=sorted_df.head(10), palette='mako' )\nplt.title('Feature Importance to predict success by XGBoost')\nplt.xlabel('Feature Importance (%)')\nplt.ylabel('')\nplt.show()","e26b4dee":"Depending on the categorical feature, we will choose if encoding it by one hot encoding or leabel encoding.","33f778ed":"## Default vs campaign success","02ca4a28":"## Contact vs campaign success","390c727e":"We can encode this feature with ordinal encoding. Moreover, there are 417 samples with unknown education: they will be labeled as nan values.","5a105bdd":"## Housing vs campaign success","7308abeb":"The following project focus on the analysis of a dataset 'Bank Marketing' which contains data about customers and aims to get useful insights from the data and predict if a new customer will accept a deposit offer or not.<br>\n\nThe project is structured as follows:\n\n- Data Cleaning + Feature Engineering\n- Exploratory Data Analysis\n- Data preparation for ML algorithms (encoding)\n- XGBOOST training and Hyperparameter optimization\n- Results Summary","2b041045":"The great majority of customers have missing values for poutcome (over 7000) meaning that most of the customers have not been previously contacted. We will encode the feature by one hot encoding and drop the rows with 'poutcome='other' since it is not clear what it means.","7d5dddfe":"## Education","dca2b298":"# Feature Importance","a6418bb9":"<img src=\"https:\/\/i.imgur.com\/8xFCrIJ.png\" width=\"1000px\">","316e5ad7":"**Dataset information:**\n#### bank client data:\n1 - age (numeric)<br>\n2 - job : type of job (categorical: 'admin.','blue-collar','entrepreneur','housemaid','management','retired','self-employed','services','student','technician','unemployed','unknown')<br>\n3 - marital : marital status (categorical: 'divorced','married','single','unknown'; note: 'divorced' means divorced or widowed)<br>\n4 - education (categorical: 'basic.4y','basic.6y','basic.9y','high.school','illiterate','professional.course','university.degree','unknown')<br>\n5 - default: has credit in default? (categorical: 'no','yes','unknown')<br>\n6 - balance: bank balance <br>\n7 - housing: has housing loan? (categorical: 'no','yes','unknown')<br>\n8 - loan: has personal loan? (categorical: 'no','yes','unknown')<br>\n#### Info related with the last contact of the current campaign:\n9 - contact: contact communication type (categorical: 'cellular','telephone')<br>\n10 - month: last contact month of year (categorical: 'jan', 'feb', 'mar', ..., 'nov', 'dec')<br>\n11 - day_of_week: last contact day of the week (categorical: 'mon','tue','wed','thu','fri')<br>\n12 - duration: last contact duration, in seconds (numeric). Important note: this attribute highly affects the output target (e.g., if duration=0 then y='no'). Yet, the duration is not known before a call is performed. Also, after the end of the call y is obviously known. Thus, this input should only be included for benchmark purposes and should be discarded if the intention is to have a realistic predictive model.<br>\n#### other attributes:\n13 - campaign: number of contacts performed during this campaign and for this client (numeric, includes last contact)<br>\n14 - pdays: number of days that passed by after the client was last contacted from a previous campaign (numeric;-1  means client was not previously contacted)<br>\n15 - previous: number of contacts performed before this campaign and for this client (numeric)<br>\n16 - poutcome: outcome of the previous marketing campaign (categorical: 'failure','nonexistent','success')<br>\n\nOutput variable (desired target):<br>\n17 - deposit - has the client subscribed a term deposit? (binary: 'yes','no')<br>\n\n","78b0b4e9":"## Month","c8397f8c":"## Poutcome vs campaign success","889977f2":"This variable presents a long tail distribtion, as the previous ones.","600486aa":"From this plot we can see that older customers tends to have a higher bank balance and that customers who accepted the deposit tended to have a higher balance compared to the customers who refused the deposit.","b608f3ce":"The distribution is heavily right skewed, with some negative values as well.","88e02ce6":"From the correlation matrix, the only interesting correlation is the moderate positive correlation (+0.51) between 'previous' and pdays'.","59fe5cc4":"There is no hierarchy among these features. However since there are just 2 features excluding 'unknown', we could impute these by 1 and 0. <br>\nWe will replace the rows with unknown contact with nan values.","a65deb7c":"Is there a relationship between balance and age?","3576b34a":"<img src=\"https:\/\/i.imgur.com\/3s4oCPA.png\" width=\"1000px\">","eb36edcf":"**We can see that customers who had previously been contacted tends to accept the deposit**","ceb04a4d":"The distribution of 'Age' is right skewed, with similar value of mean and median and a lower mode.","6270938f":"We can encode this variable by ordinal encoding.","56682116":"## Contact","3ec1c5b3":"## Marital status","1293cc51":"There is no hierarchy, so this variable should be encoded by one hot encoding. Moreover, there are 63 samples with unknown jobs: we will label them as nan values and let XGBoost encode them.","88d87171":"There no missing values and there are a lot of categorical features in the data. They will be analyzed first and then encoded before the ML training.","ff47200a":"**Customers without a Housing Loan tends to accept the deposit.**","156f4219":"# Data Preparation for ML algorithms","a8e9adda":"The great majority of customers in the dataset have pdays=-1 (not previously contacted). We could create a new binary feature to indentify customers who have previosuly been contacted or not.","3fc6d69f":"We encode the remaining features with one hot encoding:","c459be70":"## Campaign analysis","979c23f9":"## Custom functions definition","afecc805":"## Loan vs campaign success","513f94e2":"# Exploratory Data Analysis","29f7c47c":"- The most important features to determine if a new customer will accept the deposit is poutcome (>30%):<br>\n    - **This means that the deposit satisfied the customers who accepted it previously, however, currently, the company is probably aiming at the 'wrong' customers** \n <br>\n- Moreover, accoring to XGBoost, other important features to predict the success of a deposit are:\n    - Contact: by looking at the data it looks like the great majority of customers with unknown contact did not accept the deposit: it should be investigated why these contacts are missing.\n    - Housing: customers without housing loans seems to accept the deposit\n    ","b54c2d22":"## pdays Analysis","11ee3cd5":"# BANK MARKETING PROJECT","9838ef45":"## Age analysis","f43acaa6":"## Train - Test split","7d81c4ec":"# Campaign Success Prediction results dashboard:","a6f9641e":"## Marital Status vs campaign success","9a91e600":"**We cannot draw any particular conclusion.**","a01900e5":"## Train - Validation split","d4ba1772":"**We cannot draw any particular conclusion.**","154ccbe4":"## Job","f7bce9cd":"# Bank Marketing Analysis results dashboard:","92d36334":"# Results Summary","8794fa4b":"## Balance Analysis","6b9373fc":"**We cannot draw any particular conclusion.**","9a188037":"Some first insights on the data:<br>\n- Age:\n    - the medium age is 41 years old.\n    - the minimum age is 18 years old.\n    - the maximum age is 95 years old.\n- Balance:\n    - The std deviation looks high (3225) compared to the mean (1528).<br>\n- Housing and deposit look balanced as their mean value is close to 0.5\n- From the column 'previous' we can see that most of the clients have been already contacted, since the value is close to 1 (0.8325)\n- Day should be converted to object type","7adc7578":"**NOTE: The dataset contains lots of missing, unknown or 'other' values for categorical features, which is bad for prediction. It is recommended to the company to collect better the data and have less uncertain values.**","ff4e31eb":"## Age cate","3815b26e":"Then, we can analysze the remaing categorical features.","73b41c68":"## Education vs campaign success","e9a6b1f2":"## Day vs campaign success","73846ea4":"First, we create a copy of the original dataframe where we will perform some data cleaning.","268156d4":"# Categorical Features encoding","bcb82409":"**It looks like that customers with a personal loan tends to refuse the deposit**","5c3e898c":"## Month vs campaign success","db382afd":"**We can see that customers who previously accepted the deposit tends to accept the deposit by a large margin.**","d31b365d":"Then we further split the train set into a new train and validation set to monitor the accuracy on the validation set and prevent overfitting.","6c3d22e3":"- XGBoost achives good results in terms of precision, recall and accuracy, with values around 70%.\n- The most important features to determine if a new customer will accept the deposit is poutcome (>30%):<br>\n    - **This means that the deposit satisfied the customers who accepted it previously, however, currently, the company is probably aiming at the 'wrong' customers** \n <br>\n- Moreover, accoring to XGBoost, other important features to predict the success of a deposit are:\n    - Contact: by looking at the data it looks like the great majority of customers with unknown contact did not accept the deposit: it should be investigated why these contacts are missing.\n    - Housing: customers without housing loans seems to accept the deposit","70728a04":"# XGBoost","18a08cb5":"# Data Cleaning and Feature Engineering","d125eb26":"**It looks like that customers tends to accept more the deposit on march, april, september and october.**","205ba7bc":"First, we encode the target variable.<br>\nWe note that the target column presents just two possible values: 'yes' or 'no'. Since these binary values appears in more columns, we encode all the 'yes' and 'no' in the whole dataframe with 0 and 1.","8fdd56cb":"This plot looks messy, we will create a categorical column for 'age'.","d65bf692":"**We can see that customers with job type as 'student' or 'retired' tends to accept the deposit, while 'blue collars' largely refused the deposit.**","7c0a270a":"**We cannot draw any particular conclusion.**","e82635fc":"We can encode the month feature by ordinal label encoding.","3f9083ab":"**We do not have enough data for customers with default=1 to draw a conclusion.**","881a9490":"We can encode this feature by ordinal encoding","3e25c859":"## Poutcome","53ac9ad1":"**Thanks for reading my notebook ! Let me know if you have questions or if you want me to check out your works !!**","358da256":"## Job Vs deposit","c31122c9":"Main results from the data analysis:\n- Customers who previously accepted the deposit tends to accept the deposit.\n- Customers with job type as 'student' or 'retired' tends to accept the deposit, while blue collars tends to refuse the deposit.\n- Customers without a personal loan tends to accept the deposit.\n- Customers without a Housing Loan tends to accept the deposit.\n- Customers tends to accept more the deposit on march, april, september and october.","bc02e787":"As written in the dataset description, the duration column should be dropped since it includes an information which cannot be known before the call to the client.","3534b147":"In this section, we will perform some data preprocessing on the features. First, we will perform some transformations on skewed features.","a62e6b1a":"We will first create a copy called 'df' of the original 'df1' dataset where we will perform data cleaning.","14b7c51f":"## New_cust VS campaign success","9d407e2f":"To allow a better visualization, different palette will be chosen for the following plots."}}