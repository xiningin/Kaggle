{"cell_type":{"df70d657":"code","c3386526":"code","f9c22cf7":"code","e938aa30":"code","899541d6":"code","8e333f6d":"code","f18d1465":"code","706ff2fb":"code","9878681b":"code","590f7d25":"code","01eb7e9a":"code","86327580":"code","a971977e":"code","b98fca38":"code","462335b6":"code","d2f51d1d":"code","68659815":"markdown","e7d1974d":"markdown","62e997ce":"markdown","12951c1e":"markdown","d8a4c3ce":"markdown","f6ee2780":"markdown","2e3c1a7a":"markdown"},"source":{"df70d657":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport warnings\n\nfrom sklearn.metrics import accuracy_score,classification_report\n%matplotlib inline\nwarnings.filterwarnings('ignore')","c3386526":"data = pd.read_csv('..\/input\/customer-clustering\/segmentation data.csv')","f9c22cf7":"data.head()","e938aa30":"data = data.set_index('ID')","899541d6":"data.info()","8e333f6d":"sns.pairplot(data)","f18d1465":"plt.figure(figsize=(18,8),num=1)\nm=1\nfor i in data.drop(['Age','Income'],axis=1).columns:\n    plt.subplot(2,3,m)\n    sns.countplot(x=i,palette='CMRmap',data=data)\n    m+=1","706ff2fb":"plt.figure(figsize=(16,12),num=1)\nm=1\nfor i in data.drop(['Age','Income'],axis=1).columns:\n    plt.subplot(2,3,m)\n    sns.boxplot(x=i,y='Income',palette='CMRmap',data=data)\n    m+=1","9878681b":"plt.figure(figsize=(16,12),num=1)\nm=1\nfor i in data.drop(['Age','Income'],axis=1).columns:\n    plt.subplot(2,3,m)\n    sns.boxplot(x=i,y='Age',palette='CMRmap',data=data)\n    m+=1","590f7d25":"from sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score","01eb7e9a":"Sum_of_squared_distances = []\nK = range(1,10)\nfor num_clusters in K :\n kmeans = KMeans(n_clusters=num_clusters)\n kmeans.fit(data)\n Sum_of_squared_distances.append(kmeans.inertia_)\nplt.plot(K,Sum_of_squared_distances,)\n\nplt.show()","86327580":"range_n_clusters = [2, 3, 4, 5, 6,7,8]\nsilhouette_avg = []\nfor num_clusters in range_n_clusters:\n  # initialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters)\n    kmeans.fit(data)\n    cluster_labels = kmeans.labels_\n  # silhouette score\n    silhouette_avg.append(silhouette_score(data, cluster_labels))\nplt.plot(range_n_clusters,silhouette_avg,)\nplt.show()","a971977e":"kmeans = KMeans(n_clusters=4)\nkmeans.fit(data)\ndata['cluster_labels'] = kmeans.labels_","b98fca38":"data.groupby('cluster_labels').median()","462335b6":"data.groupby('cluster_labels').mean()","d2f51d1d":"plt.figure(figsize=(10,8))\nsns.scatterplot(x='Age',y='Income',hue='cluster_labels',data=data,palette='coolwarm_r')","68659815":"# Importing Libraries","e7d1974d":"Resetting the index","62e997ce":"# Reading & Viewing the data","12951c1e":"# CLustering","d8a4c3ce":"# <center> Clustering customers","f6ee2780":"Thus we choose 4 clusters","2e3c1a7a":"# EDA"}}