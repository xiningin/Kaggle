{"cell_type":{"ac4a6cf2":"code","36ef8df9":"code","426f5bd5":"code","703554d4":"code","40c3edc8":"code","d97829ce":"code","0d87b636":"code","6594233e":"code","7964ee36":"code","8f6962a6":"code","b5064742":"code","068568cc":"code","93317fcb":"code","c16fd5aa":"code","c518b340":"code","e28bb8e6":"code","faf8cffa":"code","b42ebbe6":"code","3aef16ce":"code","dc3b8459":"code","1a76074a":"code","19c2c06a":"code","63a77c90":"code","c877be08":"markdown","c6e7a4dc":"markdown","b077f496":"markdown","c527c706":"markdown","93b93b78":"markdown"},"source":{"ac4a6cf2":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt","36ef8df9":"data = pd.read_csv('..\/input\/drug-classification\/drug200.csv')\ndata","426f5bd5":"data['Drug'].value_counts() # 5 different drug types","703554d4":"# split label y from attributes X\nX = data.drop('Drug', axis=1)\ny = data['Drug']","40c3edc8":"from sklearn.preprocessing import LabelEncoder, OrdinalEncoder","d97829ce":"# transform labels into numerical categories\nle = LabelEncoder()\ny_encoded = le.fit_transform(y)","0d87b636":"data['encoded_label'] = y_encoded # add encoded labels to df\ndata.drop(columns=['Drug'], inplace=True) # and drop the old label","6594233e":"# transform the categorical attributes sex, bp, cholesterol into numerical\noe = OrdinalEncoder()\ndata[['Sex', 'BP', 'Cholesterol']] = oe.fit_transform(data[['Sex', 'BP', 'Cholesterol']])","7964ee36":"data # display transformed df","8f6962a6":"# split attributes with label again\nX = data.drop('encoded_label', axis=1)\ny = data['encoded_label']","b5064742":"from sklearn.tree import DecisionTreeClassifier\n\nfrom sklearn import tree\nimport graphviz","068568cc":"tree_clf = DecisionTreeClassifier()\ntree_clf.fit(X, y)","93317fcb":"text_representation = tree.export_text(tree_clf)\nprint(text_representation)","c16fd5aa":"features = ('Age', 'Sex', 'BP', 'Cholesterol', 'Na_to_K')\nlabel = ('DrugY', 'drugC', 'drugX', 'drugA', 'drugB')\n\nfig = plt.figure(figsize=(15,10))\n_ = tree.plot_tree(tree_clf, \n                   feature_names=features,  \n                   class_names=label,\n                   filled=True)","c518b340":"wine_data = pd.read_csv('..\/input\/wine-quality-binary-classification\/wine.csv')\nwine_data","e28bb8e6":"highest_alcohol = wine_data['alcohol'].max()\nhighest_alcohol","faf8cffa":"X = wine_data.drop('quality', axis=1)\ny = wine_data['quality']","b42ebbe6":"tree_clf2 = DecisionTreeClassifier(criterion='entropy') # no max_depth, no min_samples_split => this will  be a pretty big tree :)\ntree_clf2.fit(X, y)","3aef16ce":"features = ('fixed acidity','volatile acidity','citric acid','residual sugar',\t\n            'chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol')\nclasses = ('bad', 'good')\n\n\ndot_data = tree.export_graphviz(tree_clf2, out_file=None, feature_names=features, class_names=classes,\n                     rounded=True, filled=True)","dc3b8459":"graph = graphviz.Source(dot_data) # inside output folder.\ngraph.render(\"dot_data\") ","1a76074a":"# some regularization with max_depth => Lower will make the model faster but not as accurate; higher leads to higher accuracy but risks overfitting and may be slow.\n\ntree_clf3 = DecisionTreeClassifier(max_depth=4)\ntree_clf3.fit(X, y)","19c2c06a":"features = ('fixed acidity','volatile acidity','citric acid','residual sugar',\t\n            'chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol')\nclasses = ('bad', 'good')\n\n\ndot_data3 = tree.export_graphviz(tree_clf3, out_file=None, feature_names=features, class_names=classes,\n                     rounded=True, filled=True)","63a77c90":"graph = graphviz.Source(dot_data3) # inside output folder.\ngraph.render(\"dot_data3\") ","c877be08":"# **Drug Classification**\nhttps:\/\/www.kaggle.com\/prathamtripathi\/drug-classification","c6e7a4dc":"![tree3.png](attachment:187233c3-4c4f-45db-80c6-f83d7e2ebe2b.png)","b077f496":"In total there are 5 features and multiple classes(5 different drugs).\n\n1. Age (numerical, cont.)\n2. Sex (categorical, binary)\n3. BP (categorical, ordered)\n4. Cholesterol (categorical, ordered)\n5. Na_to_K (numerical, cont.)\n6. Drug (categorical, multi)","c527c706":"![image.png](attachment:f770f9ab-528c-4654-9e69-6d04410fa528.png)","93b93b78":"# **Wine Dataset**\nhttps:\/\/www.kaggle.com\/nareshbhat\/wine-quality-binary-classification"}}