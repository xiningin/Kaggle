{"cell_type":{"3ef5088c":"code","5b1dbd59":"code","332f69c4":"code","75b4e1d2":"code","576aa0f7":"code","572fe7a0":"code","8ae4a1a0":"code","6e7db759":"code","558006b3":"code","ae263c90":"code","253cbd33":"code","ab7ba777":"code","7e7a0ba4":"code","ca1b3dec":"code","48532d21":"code","b1a0e836":"code","2a53ce5c":"code","8c949866":"code","a49b4db2":"code","5a47eece":"code","95706423":"code","466fc8fd":"code","f57d116e":"code","92feabc7":"code","989efcec":"code","5e16b212":"code","6a4485a1":"code","a606cb09":"code","b65f58cf":"code","85561823":"code","0b040e8e":"code","042a613c":"code","d5eece16":"code","a5c9eedd":"code","9da23486":"code","3ae13fea":"code","05d1e544":"code","5d1acf8b":"code","0ab4935d":"code","e63620df":"code","3cd39a43":"code","d80ed28d":"code","d1e3686a":"code","e93e47a2":"code","1233fda5":"code","431d1d24":"code","7d42ff0c":"code","f49c4d92":"code","c65b66c6":"code","18cc8e1c":"code","26372115":"code","65c2a2d1":"code","bd4a533f":"code","1ffb8790":"code","b0df0dec":"code","9cf5719d":"code","1cd94fd7":"code","e26e522d":"code","5bce986c":"code","afa8bc49":"code","ba7819c2":"code","73dc533d":"code","c445dc25":"code","4d617e16":"code","4851a81a":"code","fe1c7075":"code","00d7f4f4":"code","7f8fbccb":"code","6f9462cd":"code","b5483a3d":"code","b54e3d36":"code","3e246bc3":"code","47502b29":"code","099fbefa":"code","4bedffaa":"code","bfa226a3":"code","af66bdbe":"code","dfdbead4":"code","b53aaa11":"code","354079bb":"code","46cc599f":"code","f5bc103b":"code","9fd56dc4":"code","5f9da321":"code","88c00eba":"markdown","03d9ea80":"markdown","52040788":"markdown","6f2eba3c":"markdown","bfca5116":"markdown","970ad2cc":"markdown","70e5705b":"markdown","b723aa95":"markdown","5cddc187":"markdown","4e2e8552":"markdown","20051a8c":"markdown","5f2ddf37":"markdown","ad0e73af":"markdown","1e173398":"markdown","77d9c4cc":"markdown","fe476ee2":"markdown","0929c083":"markdown","af47bd21":"markdown","20808040":"markdown","b9bd336f":"markdown","eb517781":"markdown","a73654c3":"markdown","90b34ae4":"markdown","f486333e":"markdown","fa1075db":"markdown","b929f594":"markdown","c01cbf06":"markdown","1012d74e":"markdown","573a1988":"markdown","b8e0ee93":"markdown","364984f7":"markdown","c93ccc9e":"markdown","d718ae82":"markdown","3cc8d4d3":"markdown","343d44c6":"markdown","ac4869e8":"markdown","3501cbca":"markdown","cd4ec25e":"markdown","e7d2622d":"markdown","14c9770c":"markdown","5cca0c6c":"markdown","5d099c91":"markdown","45c111d3":"markdown","c282f7ba":"markdown","c8faf30c":"markdown","dcd61456":"markdown","cc643bb1":"markdown","0249119b":"markdown","24c9acb7":"markdown","e261a95a":"markdown","30a376d8":"markdown","605699fa":"markdown","db6f3976":"markdown","1e41dbf2":"markdown","909c0d13":"markdown","a840b067":"markdown","e1e6a5fa":"markdown","bd663570":"markdown","b1107ad8":"markdown","450ef448":"markdown","aff1635a":"markdown","4ce384dd":"markdown","3b266f7d":"markdown","c3b7ec40":"markdown","0dd9ed4f":"markdown"},"source":{"3ef5088c":"import os\nimport json\nimport numpy as np\nimport pandas as pd\nfrom pandas.io.json import json_normalize\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolor = sns.color_palette()\n\n%matplotlib inline\n\nfrom plotly import tools\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nfrom sklearn import model_selection, preprocessing, metrics\nimport lightgbm as lgb\n\npd.options.mode.chained_assignment = None\npd.options.display.max_columns = 999","5b1dbd59":"# Main files\ntrain = pd.read_csv(\"..\/input\/train.csv\",\n                    dtype={'fullVisitorId': 'str'} # Important!!\n                   )\ntest = pd.read_csv(\"..\/input\/test.csv\",\n                  dtype={'fullVisitorId': 'str'}, # Important!!\n                  )","332f69c4":"print('Size of train data', train.shape)\nprint('Size of test data', test.shape)","75b4e1d2":"train.shape","576aa0f7":"test.shape","572fe7a0":"train.head()","8ae4a1a0":"def string_to_dict(dict_string):\n    # Convert to proper json format, from a string. json.load is for dictionary\n    return json.loads(dict_string)\n\njson_cols = [\"device\", \"geoNetwork\",\"totals\",\"trafficSource\"]\n\n\ndef create_new_dataset(df):\n    new = df.copy()\n    for col in json_cols:\n        new[col] = new[col].apply(string_to_dict)\n        #the following line will convert the JSON values into series and concatenat to the train dataframe\n        new = pd.concat([new,(pd.io.json.json_normalize(new[col]))], axis=1)\n\n    new = new.drop([\"device\", \"geoNetwork\",\"totals\",\"trafficSource\"], axis = 1)\n    \n    return new","6e7db759":"new_train = create_new_dataset(train)\nnew_test = create_new_dataset(test)","558006b3":"new_train.info()","ae263c90":"pd.value_counts(new_train.dtypes).plot(kind=\"bar\")\nplt.title(\"type of train data\")","253cbd33":"new_train.describe()","ab7ba777":"# Check for duplicates\nidsUnique = len(set(new_train.sessionId ))\nidsTotal = new_train.shape[0]\nidsDupli = idsTotal - idsUnique\nprint(\"There are \" + str(idsDupli) + \" duplicate sessionId for \" + str(idsTotal) + \" total entries\")","7e7a0ba4":"#Check Unique values\nconstant_column = [col for col in new_train.columns if len(new_train[col].unique()) == 1]\nprint(list(constant_column))\n","ca1b3dec":"new_train.drop(columns=constant_column,inplace=True)\nnew_test.drop(columns=constant_column,inplace=True)\n\nprint(f'Dropped {len(constant_column)} columns.')","48532d21":"def add_time_features(df):\n    df['date'] = pd.to_datetime(df['date'], format='%Y%m%d', errors='ignore')\n    df['year'] = df['date'].apply(lambda x: x.year)\n    df['month'] = df['date'].apply(lambda x: x.month)\n    df['day'] = df['date'].apply(lambda x: x.day)\n    df['weekday'] = df['date'].apply(lambda x: x.weekday())\n    df['visitStartTime_'] = pd.to_datetime(df['visitStartTime'],unit=\"s\")\n    df['visitStartTime_year'] = df['visitStartTime_'].apply(lambda x: x.year)\n    df['visitStartTime_month'] = df['visitStartTime_'].apply(lambda x: x.month)\n    df['visitStartTime_day'] = df['visitStartTime_'].apply(lambda x: x.day)\n    df['visitStartTime_weekday'] = df['visitStartTime_'].apply(lambda x: x.weekday())\n    return df\ndate_features = [#\"year\",\"month\",\"day\",\"weekday\",'visitStartTime_year',\n    \"visitStartTime_month\",\"visitStartTime_day\",\"visitStartTime_weekday\"]","b1a0e836":"add_time_features(new_train)\nadd_time_features(new_test)","2a53ce5c":"#Target data is non numerical and has NaN. Remember our target variable has to be the log\nnew_train.transactionRevenue = new_train.transactionRevenue.astype(float)\ntarget= np.log(new_train.transactionRevenue.dropna())\n\n#Histogram\n\nplt.figure(figsize=(12,7))\nsns.distplot(target);\nplt.xlabel(\"Revenue\")\nplt.ylabel(\"Number of Buyers\")\nplt.title(\"Target Distribution\")\n","8c949866":"print (\"Skew is:\", target.skew())\nprint(\"Kurtosis: %f\" % target.kurt())","a49b4db2":"grouped = new_train.groupby('fullVisitorId')[\"transactionRevenue\"].sum().reset_index()\ntarget_group = np.log(grouped.loc[grouped['transactionRevenue'] > 0, 'transactionRevenue'])\n\nplt.figure(figsize=(12,7))\nsns.distplot(target_group);\nplt.xlabel(\"Revenue\")\nplt.ylabel(\"Number of Buyers\")\nplt.title(\"Target Distribution\")\n","5a47eece":"print (\"Skew is:\", target_group.skew())\nprint(\"Kurtosis: %f\" % target_group.kurt())","95706423":"#https:\/\/www.kaggle.com\/sudalairajkumar\/simple-exploration-baseline-ga-customer-revenue\n\nnzi = pd.notnull(new_train[\"transactionRevenue\"]).sum()\nnzr = (grouped[\"transactionRevenue\"]>0).sum()\nprint(\"Number of instances in train set with non-zero revenue : \", nzi, \" and ratio is : \", nzi \/ new_train.shape[0])\nprint(\"Number of unique customers with non-zero revenue : \", nzr, \"and the ratio is : \", nzr \/ grouped.shape[0])","466fc8fd":"numeric_features = new_train.select_dtypes(include=[np.number])\nnumeric_features.dtypes","f57d116e":"#Original code from : https:\/\/www.kaggle.com\/sudalairajkumar\/simple-exploration-baseline-ga-customer-revenue\n\nfrom plotly import tools\n\ndef scatter_plot(cnt_srs, color):\n    trace = go.Scatter(\n        x=cnt_srs.index[::-1],\n        y=cnt_srs.values[::-1],\n        showlegend=False,\n        marker=dict(\n            color=color,\n        ),\n    )\n    return trace\n\ncnt_srs = new_train.groupby('date')['transactionRevenue'].agg(['size', 'count'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\"]\ncnt_srs = cnt_srs.sort_index()\n#cnt_srs.index = cnt_srs.index.astype('str')\ntrace1 = scatter_plot(cnt_srs[\"count\"], 'red')\ntrace2 = scatter_plot(cnt_srs[\"count of non-zero revenue\"], 'blue')\n\nfig = tools.make_subplots(rows=2, cols=1, vertical_spacing=0.08,\n                          subplot_titles=[\"Date - Count\", \"Date - Non-zero Revenue count\"])\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig['layout'].update(height=800, width=800, paper_bgcolor='rgb(233,233,233)', title=\"Date Plots\")\npy.iplot(fig, filename='date-plots')\n","92feabc7":"new_train.visitId.value_counts()[:10]","989efcec":"new_train.visitNumber.value_counts()[:10]","5e16b212":"new_train.visitStartTime.value_counts()[:10]","6a4485a1":"categorical_features = new_train.select_dtypes(exclude=[np.number])\ncategorical_features.dtypes","a606cb09":"sns.countplot(new_train.channelGrouping,order=new_train.channelGrouping.value_counts().iloc[0:10].index)\nplt.xticks(rotation=90);","b65f58cf":"new_train.fullVisitorId.value_counts()[:10]","85561823":"new_train.sessionId.value_counts()[:10]","0b040e8e":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.browser,order=new_train.browser.value_counts().iloc[0:10].index)\nplt.xticks(rotation=90);","042a613c":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.deviceCategory)\nplt.xticks(rotation=90);","d5eece16":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.isMobile)\nplt.xticks(rotation=90);","a5c9eedd":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.operatingSystem,order=new_train.operatingSystem.value_counts().iloc[0:10].index)\nplt.xticks(rotation=90);","9da23486":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.city,order=new_train.city.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);\n","3ae13fea":"plt.figure(figsize=(18,7))\nsns.countplot(new_train.city,order=new_train.city.value_counts().iloc[1:100].index)\nplt.xticks(rotation=90);","05d1e544":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.continent,order=new_train.continent.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","5d1acf8b":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.country,order=new_train.country.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","0ab4935d":"plt.figure(figsize=(18,7));\nsns.countplot(new_train.metro,order=new_train.metro.value_counts().iloc[:50].index);\nplt.xticks(rotation=90);","e63620df":"plt.figure(figsize=(18,7));\nsns.countplot(new_train.metro,order=new_train.metro.value_counts().iloc[2:50].index);\nplt.xticks(rotation=90);","3cd39a43":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.networkDomain,order=new_train.networkDomain.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","d80ed28d":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.region,order=new_train.region.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","d1e3686a":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.subContinent,order=new_train.subContinent.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","e93e47a2":"sns.countplot(new_train.bounces)\nplt.xticks(rotation=90);","1233fda5":"new_train.bounces.value_counts()","431d1d24":"new_train.bounces.isnull().sum()","7d42ff0c":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.hits,order=new_train.hits.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","f49c4d92":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.newVisits,order=new_train.newVisits.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","c65b66c6":"new_train.newVisits.value_counts()","18cc8e1c":"new_train.newVisits.isnull().sum()","26372115":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.pageviews,order=new_train.pageviews.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","65c2a2d1":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.adContent,order=new_train.adContent.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","bd4a533f":"plt.figure(figsize=(12,7))\nsns.countplot(new_train[\"adwordsClickInfo.adNetworkType\"])\nplt.xticks(rotation=90);","1ffb8790":"new_train[\"adwordsClickInfo.adNetworkType\"].value_counts()","b0df0dec":"new_train[\"adwordsClickInfo.adNetworkType\"].isnull().sum()","9cf5719d":"plt.figure(figsize=(12,7))\nsns.countplot(new_train[\"adwordsClickInfo.gclId\"],order=new_train[\"adwordsClickInfo.gclId\"].value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","1cd94fd7":"plt.figure(figsize=(12,7))\nsns.countplot(new_train[\"adwordsClickInfo.isVideoAd\"],order=new_train[\"adwordsClickInfo.isVideoAd\"].value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","e26e522d":"new_train[\"adwordsClickInfo.isVideoAd\"].value_counts()","5bce986c":"new_train[\"adwordsClickInfo.isVideoAd\"].isnull().sum()","afa8bc49":"plt.figure(figsize=(12,7))\nsns.countplot(new_train[\"adwordsClickInfo.page\"],order=new_train[\"adwordsClickInfo.page\"].value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","ba7819c2":"plt.figure(figsize=(12,7))\nsns.countplot(new_train[\"adwordsClickInfo.slot\"],order=new_train[\"adwordsClickInfo.slot\"].value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","73dc533d":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.campaign,order=new_train.campaign.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","c445dc25":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.campaignCode,order=new_train.campaignCode.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","4d617e16":"new_train.campaignCode.value_counts()","4851a81a":"new_train.campaignCode.isnull().sum()","fe1c7075":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.isTrueDirect,order=new_train.isTrueDirect.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","00d7f4f4":"new_train.isTrueDirect.value_counts()","7f8fbccb":"new_train.isTrueDirect.isnull().sum()","6f9462cd":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.keyword,order=new_train.keyword.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","b5483a3d":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.medium,order=new_train.medium.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","b54e3d36":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.referralPath,order=new_train.referralPath.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","3e246bc3":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.source,order=new_train.source.value_counts().iloc[:50].index)\nplt.xticks(rotation=90);","47502b29":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.year)\nplt.xticks(rotation=90);","099fbefa":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.month)\nplt.xticks(rotation=90);","4bedffaa":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.day)\nplt.xticks(rotation=90);","bfa226a3":"plt.figure(figsize=(12,7))\nsns.countplot(new_train.weekday)\nplt.xticks(rotation=90);\n#{0: 'Monday', 1: 'Tuesday', 2: 'Wednesday', 3: 'Thursday', 4: 'Friday', 5: 'Saturday', 6: 'Sunday'}","af66bdbe":"def horizontal_bar_chart(cnt_srs, color):\n    trace = go.Bar(\n        y=cnt_srs.index[::-1],\n        x=cnt_srs.values[::-1],\n        showlegend=False,\n        orientation = 'h',\n        marker=dict(\n            color=color,\n        ),\n    )\n    return trace","dfdbead4":"cnt_srs = new_train.groupby('visitNumber')['transactionRevenue'].agg(['size', 'count', 'mean'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\", \"mean\"]\ncnt_srs = cnt_srs.sort_values(by=\"count\", ascending=False)\n\ntrace3 = horizontal_bar_chart(cnt_srs[\"count\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace4 = horizontal_bar_chart(cnt_srs[\"count of non-zero revenue\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace5 = horizontal_bar_chart(cnt_srs[\"mean\"].head(10), 'rgba(50, 171, 96, 0.6)')\n\nfig = tools.make_subplots(rows=1, cols=3, \n                          vertical_spacing=0.04, \n                          subplot_titles=[\"VisitNumber - Count\",\n                                          \"VisitNumber - Non-zero Revenue Count\", \n                                          \"VisitNumber - Mean Revenue\"]);\n\nfig.append_trace(trace3, 1, 1)\nfig.append_trace(trace4, 1, 2)\nfig.append_trace(trace5, 1, 3)\nfig['layout'].update(height=600, width=1200, paper_bgcolor='rgb(233,233,233)', title=\"Device Plots\")\npy.iplot(fig, filename='device-plots');","b53aaa11":"cnt_srs = new_train.groupby('channelGrouping')['transactionRevenue'].agg(['size', 'count', 'mean'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\", \"mean\"]\ncnt_srs = cnt_srs.sort_values(by=\"count\", ascending=False)\n\ntrace3 = horizontal_bar_chart(cnt_srs[\"count\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace4 = horizontal_bar_chart(cnt_srs[\"count of non-zero revenue\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace5 = horizontal_bar_chart(cnt_srs[\"mean\"].head(10), 'rgba(50, 171, 96, 0.6)')\n\nfig = tools.make_subplots(rows=1, cols=3, \n                          vertical_spacing=0.04, \n                          subplot_titles=[\"Channel Grouping - Count\",\n                                          \"Channel Grouping - Non-zero Revenue Count\", \n                                          \"Channel Grouping - Mean Revenue\"]);\n\nfig.append_trace(trace3, 1, 1)\nfig.append_trace(trace4, 1, 2)\nfig.append_trace(trace5, 1, 3)\nfig['layout'].update(height=600, width=1200, paper_bgcolor='rgb(233,233,233)', title=\"Device Plots\")\npy.iplot(fig, filename='device-plots');","354079bb":"# Device Browser\n\n#size includes NaN values, count does not:\ncnt_srs = new_train.groupby('browser')['transactionRevenue'].agg(['size', 'count', 'mean'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\", \"mean\"]\ncnt_srs = cnt_srs.sort_values(by=\"count\", ascending=False)\n\ntrace1 = horizontal_bar_chart(cnt_srs[\"count\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace2 = horizontal_bar_chart(cnt_srs[\"count of non-zero revenue\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace3 = horizontal_bar_chart(cnt_srs[\"mean\"].head(10), 'rgba(50, 171, 96, 0.6)')\n\nfig = tools.make_subplots(rows=1, cols=3, \n                          vertical_spacing=0.04, \n                          subplot_titles=[\"Device Browser - Count\",\n                                          \"Device Browser - Non-zero Revenue Count\", \n                                          \"Device Browser - Mean Revenue\"]);\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 3)\nfig['layout'].update(height=600, width=1200, paper_bgcolor='rgb(233,233,233)', title=\"Device Plots\")\npy.iplot(fig, filename='device-plots');","46cc599f":"cnt_srs = new_train.groupby('deviceCategory')['transactionRevenue'].agg(['size', 'count', 'mean'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\", \"mean\"]\ncnt_srs = cnt_srs.sort_values(by=\"count\", ascending=False)\n\ntrace3 = horizontal_bar_chart(cnt_srs[\"count\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace4 = horizontal_bar_chart(cnt_srs[\"count of non-zero revenue\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace5 = horizontal_bar_chart(cnt_srs[\"mean\"].head(10), 'rgba(50, 171, 96, 0.6)')\n\nfig = tools.make_subplots(rows=1, cols=3, \n                          vertical_spacing=0.04, \n                          subplot_titles=[\"Device Category - Count\",\n                                          \"Device Category - Non-zero Revenue Count\", \n                                          \"Device Category - Mean Revenue\"]);\n\nfig.append_trace(trace3, 1, 1)\nfig.append_trace(trace4, 1, 2)\nfig.append_trace(trace5, 1, 3)\nfig['layout'].update(height=600, width=1200, paper_bgcolor='rgb(233,233,233)', title=\"Device Plots\")\npy.iplot(fig, filename='device-plots');\n","f5bc103b":"cnt_srs = new_train.groupby('operatingSystem')['transactionRevenue'].agg(['size', 'count', 'mean'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\", \"mean\"]\ncnt_srs = cnt_srs.sort_values(by=\"count\", ascending=False)\n\ntrace3 = horizontal_bar_chart(cnt_srs[\"count\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace4 = horizontal_bar_chart(cnt_srs[\"count of non-zero revenue\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace5 = horizontal_bar_chart(cnt_srs[\"mean\"].head(10), 'rgba(50, 171, 96, 0.6)')\n\nfig = tools.make_subplots(rows=1, cols=3, \n                          vertical_spacing=0.04, \n                          subplot_titles=[\"Device OS - Count\",\n                                          \"Device OS - Non-zero Revenue Count\", \n                                          \"Device OS - Mean Revenue\"]);\n\nfig.append_trace(trace3, 1, 1)\nfig.append_trace(trace4, 1, 2)\nfig.append_trace(trace5, 1, 3)\nfig['layout'].update(height=600, width=1200, paper_bgcolor='rgb(233,233,233)', title=\"Device Plots\")\npy.iplot(fig, filename='device-plots');","9fd56dc4":"cnt_srs = new_train.groupby('pageviews')['transactionRevenue'].agg(['size', 'count', 'mean'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\", \"mean\"]\ncnt_srs = cnt_srs.sort_values(by=\"count\", ascending=False)\n\ntrace3 = horizontal_bar_chart(cnt_srs[\"count\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace4 = horizontal_bar_chart(cnt_srs[\"count of non-zero revenue\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace5 = horizontal_bar_chart(cnt_srs[\"mean\"].head(10), 'rgba(50, 171, 96, 0.6)')\n\nfig = tools.make_subplots(rows=1, cols=3, \n                          vertical_spacing=0.04, \n                          subplot_titles=[\"Page Views - Count\",\n                                          \"Page Views - Non-zero Revenue Count\", \n                                          \"Page Views - Mean Revenue\"]);\n\nfig.append_trace(trace3, 1, 1)\nfig.append_trace(trace4, 1, 2)\nfig.append_trace(trace5, 1, 3)\nfig['layout'].update(height=600, width=1200, paper_bgcolor='rgb(233,233,233)', title=\"Device Plots\")\npy.iplot(fig, filename='device-plots');","5f9da321":"cnt_srs = new_train.groupby('continent')['transactionRevenue'].agg(['size', 'count', 'mean'])\ncnt_srs.columns = [\"count\", \"count of non-zero revenue\", \"mean\"]\ncnt_srs = cnt_srs.sort_values(by=\"count\", ascending=False)\n\ntrace3 = horizontal_bar_chart(cnt_srs[\"count\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace4 = horizontal_bar_chart(cnt_srs[\"count of non-zero revenue\"].head(10), 'rgba(50, 171, 96, 0.6)')\ntrace5 = horizontal_bar_chart(cnt_srs[\"mean\"].head(10), 'rgba(50, 171, 96, 0.6)')\n\nfig = tools.make_subplots(rows=1, cols=3, \n                          vertical_spacing=0.04, \n                          subplot_titles=[\"Continent - Count\",\n                                          \"Continent - Non-zero Revenue Count\", \n                                          \"Continent - Mean Revenue\"]);\n\nfig.append_trace(trace3, 1, 1)\nfig.append_trace(trace4, 1, 2)\nfig.append_trace(trace5, 1, 3)\nfig['layout'].update(height=600, width=1200, paper_bgcolor='rgb(233,233,233)', title=\"Device Plots\")\npy.iplot(fig, filename='device-plots');","88c00eba":"<a id =\"6\"><\/a><h2>6. Exploratory Data Analysis (EDA)<\/h2>\n<a id =\"6_1\"><\/a><h3>6.1. Univariate Distribution<\/h3>\n<a id =\"6_1_1\"><\/a><h4>6.1.1.  Distribution of the target variable\u00a0: **transactionRevenue** <\/h4>\n\ntransactionRevenue contains the revenue information we are trying to predict. Total transaction revenue, expressed as the value passed to Analytics multiplied by 10^6 (e.g., 2.40 would be given as 2400000).","03d9ea80":"<a id =\"6_2_4\"><\/a><h4>6.2.4.  deviceCategory  vs Target <\/h4>","52040788":"<img src=\"https:\/\/storage.googleapis.com\/kaggle-media\/competitions\/RStudio\/google_store.jpg\">","6f2eba3c":"<a id =\"6_1_3_9\"><\/a><h4>6.1.3.9  Distribution of **Continent**<\/h4>\nThe continent from which sessions originated, based on IP address.","bfca5116":"<a id =\"6_2_2\"><\/a><h4>6.2.2.  ChannelGrouping vs Target <\/h4>\nSee the origin which is bringing most spenders!","970ad2cc":"<a id='6_2_8'><\/a><h4>6.2.8. **Bivariate Analysis Conclusions** <\/h4>\n\n**VisitNumber vs Target**\nHow many session does a user need to buy something?\n\n- Most users visited one time the website;\n- From those who purchased at least an item, the visit number count distribution is the same. There is a high number of users that only visited once the website and purchased an item;\n- Nevertheless, the more visits a user makes to website the more he spends. For example, from a single visit to seven visits the number of revenue increased. However 8 visits present a higher mean revenue than 9 or 10.\n- **In the end, users need at least one visit to purchase something and the biggest spenders are the one that on average visit the website 8 times.**\n\n\n**ChannelGrouping vs Target**\nSee the origin which is bringing most spenders!\n\n- Organic Search, Social, Direct and Referral bring most of the clients to the store\n- When looking only to users that purchased something, Social has small impact on revenue. Moreover, although Organic Search and Direct still bring buyers it is Referral that brings most of the buyers.\n- **Amazingly, although Display does not brin many people to the website it does bring those who spend more on average! Following is Direct as expected, Referral, Paid Search and Organic Search.**\n\n\n**Browser vs Target**\nDo users using Chrome spend more?\n\n- Most users use Chrome, Safari and Firefox\n- The majority of users that made purchase came from the same three Browsers with equal distribution. More purchases from Chrome, Safari and Firefox respectively.\n- **Biggest spenders use Firefox, followed by Chrome, Safari, Edge and IE. Therefore chrome users do not spend more.**\n\n**Browser vs Target**\n- Most people use the computer to buy articles and the majority of revenues comes from this device category.\n\n\n**Device OS vs Target**\n- The rank of the majority of users goes as follows: Windows, Mac, Android, iOS, Linux and Chrome OS.\n- The rank for people who purchase something is : Mac, Windows, ChromeOS, Linux, iOS, Android\n- **Biggest buyers are ChromeOS users! The rest goes as follow: Windows,Mac, Android, iOS, Linux, Windows Phone.**\n","70e5705b":"<a id =\"6_1_3_18\"><\/a><h4>6.1.3.18  Distribution of **pageviews**<\/h4>\nTotal number of pageviews within the session.","b723aa95":"<a id =\"6_1_3_23\"><\/a><h4>6.1.3.23  Distribution of **adwordsClickInfo.page**<\/h4>\nPage number in search results where the ad was shown","5cddc187":"<a id =\"6_1_3_1\"><\/a><h4>6.1.3.1  Distribution of **channelGrouping**<\/h4>\nThe channel via which the user came to the Store. The Default Channel Group associated with an end user's session for this View.","4e2e8552":"<a id =\"6_1_3_13\"><\/a><h4>6.1.3.13  Distribution of **region**<\/h4>\nThe region from which sessions originate, derived from IP addresses. In the U.S., a region is a state, such as New York.","20051a8c":"<a id =\"6_1_3_24\"><\/a><h4>6.1.3.24  Distribution of **adwordsClickInfo.slot**<\/h4>\nPosition of the Ad. Takes one of the following values:{\u201cRHS\", \"Top\"}","5f2ddf37":"<h2><a id=\"5\"><\/a>5. Glimpse of Data<\/h2>","ad0e73af":"<a id =\"6_1_3_19\"><\/a><h4>6.1.3.19  Distribution of **adContent**<\/h4>\nThe ad content of the traffic source. Can be set by the utm_content URL parameter.","1e173398":"<a id =\"6_1_3_31\"><\/a><h4>6.1.3.31  Distribution of **source**<\/h4>\nThe source of the traffic source. Could be the name of the search engine, the referring hostname, or a value of the utm_source URL parameter.","77d9c4cc":"<a id =\"6_1_2_2\"><\/a><h4>6.1.2.2  Distribution of **VisitId**<\/h4>\nAn identifier for this session. This is part of the value usually stored as the _utmb cookie. This is only unique to the user. For a completely unique ID, you should use a combination of fullVisitorId and visitId.","fe476ee2":"<a id =\"6_1_1_1\"><\/a><h4>6.1.1.1.  Target variable\u00a0: **transactionRevenue** presents NaN values <\/h4>\n\nDuring my analysis I noticed that the target variable had null values for the training dataset. Assuming that each row corresponds to a visit to the website and not necessary a purchase, it is normal to have rows with null values. ","0929c083":"<a id =\"6_2_3\"><\/a><h4>6.2.3.  Browser vs Target <\/h4>\nDo users using Chrome spend more?","af47bd21":"<a id =\"6_1_3_12\"><\/a><h4>6.1.3.12  Distribution of **networkDomain**<\/h4>\nThe domain name of user's ISP, derived from the domain name registered to the ISP's IP address.","20808040":"<a id =\"6_1_3_21\"><\/a><h4>6.1.3.21  Distribution of **adwordsClickInfo.gclId**<\/h4>\nThe Google Click ID","b9bd336f":"# Table of Contents\n- <a href='#1'>1. Introduction<\/a>\n- <a href='#2'>2. Evaluation - Root Mean Squared Error (RMSE)<\/a>\n- <a href='#3'>3. Make Assumptions<\/a>\n- <a href='#4'>4. Retrieving the Data<\/a>\n- <a href='#5'>5. Glimpse of Data<\/a>\n- <a href='#6'>6. Exploratory Data Analysis (EDA)<\/a>\n    - <a href='#6_1'>6.1. Univariate Distribution<\/a>\n        - <a href='#6_1_1'>6.1.1. Distribution of the target variable : transactionRevenue<\/a>\n            - <a href='#6_1_1_1'>6.1.1.1. Target variable : transactionRevenue presents NaN values<\/a>        \n        - <a href='#6_1_2'>6.1.2. Numerical Distribution<\/a>\n            - <a href='#6_1_2_1'>6.1.2.1 Distribution of date<\/a>\n            - <a href='#6_1_2_2'>6.1.2.2 Distribution of VisitId<\/a>\n            - <a href='#6_1_2_3'>6.1.2.3 Distribution of visitNumber<\/a>\n            - <a href='#6_1_2_4'>6.1.2.4 Distribution of visitStartTime<\/a>\n        - <a href='#6_1_3'>6.1.3. Categorical Distribution<\/a>\n            - <a href='#6_1_3_1'>6.1.3.1 Distribution of channelGrouping<\/a>\n            - <a href='#6_1_3_2'>6.1.3.2 Distribution of fullVisitorId<\/a>\n            - <a href='#6_1_3_3'>6.1.3.3 Distribution of sessionId<\/a>\n            - <a href='#6_1_3_4'>6.1.3.4 Distribution of browser<\/a>    \n            - <a href='#6_1_3_5'>6.1.3.5 Distribution of deviceCategory <\/a>\n            - <a href='#6_1_3_6'>6.1.3.6 Distribution of isMobile<\/a>\n            - <a href='#6_1_3_7'>6.1.3.7 Distribution of operatingSystem<\/a>\n            - <a href='#6_1_3_8'>6.1.3.8 Distribution of city<\/a>\n            - <a href='#6_1_3_9'>6.1.3.9 Distribution of continent<\/a>\n            - <a href='#6_1_3_10'>6.1.3.10 Distribution of country<\/a>\n            - <a href='#6_1_3_11'>6.1.3.11 Distribution of metro<\/a>\n            - <a href='#6_1_3_12'>6.1.3.12 Distribution of networkDomain<\/a> \n            - <a href='#6_1_3_13'>6.1.3.13 Distribution of region<\/a>\n            - <a href='#6_1_3_14'>6.1.3.14 Distribution of subContinent<\/a>\n            - <a href='#6_1_3_15'>6.1.3.15 Distribution of bounces<\/a>\n            - <a href='#6_1_3_16'>6.1.3.16 Distribution of hits<\/a>           \n            - <a href='#6_1_3_17'>6.1.3.17 Distribution of newVisits<\/a>\n            - <a href='#6_1_3_18'>6.1.3.18 Distribution of PageViews<\/a>\n            - <a href='#6_1_3_19'>6.1.3.19 Distribution of adContent<\/a>\n            - <a href='#6_1_3_20'>6.1.3.20 Distribution of adwordsClickInfo.adNetworkType<\/a>\n            - <a href='#6_1_3_21'>6.1.3.21 Distribution of adwordsClickInfo.gclId<\/a>\n            - <a href='#6_1_3_22'>6.1.3.22 Distribution of adwordsClickInfo.isVideoAd<\/a>\n            - <a href='#6_1_3_23'>6.1.3.23 Distribution of adwordsClickInfo.page<\/a>\n            - <a href='#6_1_3_24'>6.1.3.24 Distribution of adwordsClickInfo.slot<\/a>\n            - <a href='#6_1_3_25'>6.1.3.25 Distribution of campaign<\/a>\n            - <a href='#6_1_3_26'>6.1.3.26 Distribution of campaignCode<\/a>\n            - <a href='#6_1_3_27'>6.1.3.27 Distribution of isTrueDirect<\/a>\n            - <a href='#6_1_3_28'>6.1.3.28 Distribution of keyword<\/a>\n            - <a href='#6_1_3_29'>6.1.3.29 Distribution of medium<\/a>\n            - <a href='#6_1_3_30'>6.1.3.30 Distribution of referralPath<\/a>\n            - <a href='#6_1_3_31'>6.1.3.31 Distribution of source<\/a>\n            - <a href='#6_1_3_32'>6.1.3.32 Distribution of new Date Features<\/a>                                               \n            - <a href='#6_1_3_33'>**6.1.3.33 Univariate Analysis Conclusions**<\/a>                           \n    - <a href='#6_2'>6.2. Bivariate Distribution<\/a>        \n        - <a href='#6_2_1'>6.2.1. VisitNumber vs Target<\/a>        \n        - <a href='#6_2_2'>6.2.2. ChannelGrouping vs Target <\/a>            \n        - <a href='#6_2_3'>6.2.3. Browser vs Target <\/a>            \n        - <a href='#6_2_4'>6.2.4. deviceCategory vs Target<\/a>    \n        - <a href='#6_2_5'>6.2.5. Device OS vs Target <\/a>    \n        - <a href='#6_2_6'>6.2.6. Pageviews vs Target <\/a>  \n        - <a href='#6_2_7'>6.2.7. Continent vs Target  <\/a>        \n        - <a href='#6_2_8'>**6.2.8. Bivariate Analysis Conclusions** <\/a>        ","eb517781":"<a id =\"6_1_3_28\"><\/a><h4>6.1.3.28  Distribution of **keyword**<\/h4>\nThe keyword of the traffic source, usually set when the trafficSource.medium is \"organic\" or \"cpc\". Can be set by the utm_term URL parameter.","a73654c3":"<a id =\"6_1_3_33\"><\/a><h4>6.1.3.33 Univariate Analysis Conclusions<\/h4>\n\n### General Overview\n\nWe have 50 types of Object data that must be converted into another type.\nThere is 1 BOOL type of data feature that needs to be converted.\nThere was 19 features which only presented a single values. These were dropped.\nCreated new time_features (year, month, day, weekday, etc)\n\n\n### Exploratory Data Analysis\n\n- **Target Variable** : log value of the target presents a normal distribution. Skewness of 0.33\n\n**Numerical Distribution**\n- **Date** :  it appears that the sales tend to increase from November to December, as expected. Around the year sales are constant\n- **VisitId** : For a completely unique ID, we should use a combination of fullVisitorId and visitId.\n- **visitNumber** : Most users only have one session, the first session. I believe this means that most users visit once the website and don't return back. At least, as if they do not clean their cookies. **How many session does a user need to buy something?**\n- **visitStartTime** : This feature is expressed as POSIX time and need to be converted. However, is this feature worth having?\n\n#### Categorical Distribution\n\n#### Related to device\n- **channelGrouping** : Most users access the site through a Organic Search (Google, Yahoo) and Social Media (Facebook, Twitter). The direct access and referral also have high number. Paid Search and Affiliates does not bring much consumers. Are they worth to have? **See the origin which is bringing most spenders!**\n- **fullVisitorId** : For a completely unique ID, we should use a combination of fullVisitorId and visitId.\nIMPORTANT: Due to the formatting of fullVisitorId you must load the Id's as strings in order for all Id's to be properly unique!\n- **sessionId** : Don't believe is relevant...\n- **browser** : Most used browsers are Chrome, Safari and Firefox. **Do users using Chrome spend more?**\n- **deviceCategory** : Desktop users dominate purchases. Following is mobile and tablet. This makes sense, for me, since I also do prefer doing purchases online on the computer.\n- **isMobile** : Most users do not use Mobile as seen before. This needs to be converted to a label feature instead of Boolean.\n- **operatingSystem** : Windows, Mac, Android,iOS, Linux and Chrome OS are the only OS with impact. **Should we join all other in a single category such as \"Others\"?**\n\n\n#### Related to geoNetwork\n\n- **city** : There are a lot of Users that do not have the IP of their city or the value Not Set. There area lot of users from the area of California (Mountain View, San Francisco, San Jose, Los Angeles).\n- **continent** : Most Sales go to the Americas, Asia and Europe.\n- **country** : The USA most be the biggest delegate of purchases from the American continent. Regarding Asia, India and Vietnam and Thailand seem to be the the representatives. On the other hand, for Europe UK, Turkey and Germany.\n- **metro** : This features seems a repetition of the country and city.. However it has different values, per city.\n- **networkDomain** : Don't see how this feature might influence the purchase value\n- **region** : Seems to present the same results as metro\n- **subContinent** : Same results as Continent\n- **sessionId** :\n- **socialEngagementType** :\n\n#### Related to totals\n\n- **bounces** : There are 450 630 bounce sessions with value 1.0 and 453 023 with NaN. **Should the NaN have value zero?**\n- **hits** : Most sessions have one hit until 5. **Does anyone can take more info from these?**\n- **newVisits** 703 060 have value 1.0 whereas 200 593 have NaN. **Convert NaN to zero? Moreover, see the tendency of new vs old visits purchase**\n- **pageviews** : Most people appear to only visit one page. Does it mean they stay at the homepage or just look at the one they were redirected to? **By increasing the nr of pages surfed, so does the probability of buying?**\n\n#### Related to trafficSource\n- **adContent** The majority of purchase is related to Google Merchandise Collection and Google Online Store.\n- **adwordsClickInfo.adNetworkType** : Only 7 values are not Google Search from a total of 21453. The rest, 882193 observations have the value NaN\n- **adwordsClickInfo.gclId** : 21460 present the value False and 882193 the value NaN. Similar to adNetworkType.\n- **adwordsClickInfo.isVideoAd**\n- **adwordsClickInfo.page**\n- **adwordsClickInfo.slot** Two values considered. **Convert to label categories**\n- **campaign** most observations do to have a value set\n- **campaignCode** **only 1 value is not NaN**. So we can drop this column.\n- **isTrueDirect** 274 005 sessions accessed the website by typing the URL. The rest is NaN\n- **keyword**\n- **medium**\n- **referralPath**\n- **source**\n\n\n","90b34ae4":"<a id =\"6_1_2\"><\/a><h4>6.1.2.  Numerical Distribution<\/h4>","f486333e":"<a id =\"6_1_3_20\"><\/a><h4>6.1.3.20  Distribution of **adwordsClickInfo.adNetworkType**<\/h4>\nNetwork Type. Takes one of the following values: {\u201cGoogle Search\", \"Content\", \"Search partners\", \"Ad Exchange\", \"Yahoo Japan Search\", \"Yahoo Japan AFS\", \u201cunknown\u201d}","fa1075db":"<a id =\"6_1_3_4\"><\/a><h4>6.1.3.4  Distribution of **browser**<\/h4>\nThe browser used (e.g., \"Chrome\" or \"Firefox\").","b929f594":"<a id =\"6_1_3_7\"><\/a><h4>6.1.3.7  Distribution of **operatingSystem**<\/h4>\nThe operating system of the device (e.g., \"Macintosh\" or \"Windows\").","c01cbf06":"<a id =\"6_1_3_26\"><\/a><h4>6.1.3.26  Distribution of **campaignCode**<\/h4>\nValue of the\u00a0utm_id\u00a0campaign tracking parameter, used for manual campaign tracking.","1012d74e":"<a id =\"6_1_3_10\"><\/a><h4>6.1.3.10  Distribution of **country**<\/h4>\nThe country from which sessions originated, based on IP address.","573a1988":"<a id =\"6_1_3\"><\/a><h4>6.1.3.  Categorical Distribution<\/h4>","b8e0ee93":"The test dataset is bit smaller in terms of observations","364984f7":"We can see some features presenting some JSON values. Let's correct that.","c93ccc9e":"<a id =\"6_1_3_3\"><\/a><h4>6.1.3.3  Distribution of **sessionId**<\/h4>\nA unique identifier for each user of the Google Merchandise Store.The unique visitor ID (also known as client ID).","d718ae82":"<a id =\"6_1_3_2\"><\/a><h4>6.1.3.2  Distribution of **fullVisitorId**<\/h4>","3cc8d4d3":"<a id =\"6_1_2_1\"><\/a><h4>6.1.2.1  Distribution of **date**<\/h4>\nThe date on which the user visited the Store. The date of the session in YYYYMMDD format.","343d44c6":"<a id =\"6_1_3_30\"><\/a><h4>6.1.3.30  Distribution of **referralPath**<\/h4>\nIf trafficSource.medium is \"referral\", then this is set to the path of the referrer. (The host name of the referrer is in trafficSource.source.)","ac4869e8":"<a id =\"6_1_3_22\"><\/a><h4>6.1.3.22  Distribution of **adwordsClickInfo.isVideoAd**<\/h4>\nTrue if it is a Trueview video ad.","3501cbca":"<h2><a id=\"4\"><\/a>4. Retrieving the Data<\/h2>","cd4ec25e":"<a id =\"2\"><\/a><h2>2. Evaluation - Root Mean Squared Error (RMSE)<\/h2>\n\nSubmissions are scored on the root mean squared error. \n\nFor each **fullVisitorId** in the test set, **you must predict the natural log of their total revenue in PredictedLogRevenue**. \n","e7d2622d":"I saw there were some columns with only one value. This will have no impact on the prediction so let's find all those columns and drop them.","14c9770c":"Around 1.3% of customers generated  revenues.","5cca0c6c":"<a id =\"6_1_3_29\"><\/a><h4>6.1.3.29  Distribution of **medium**<\/h4>\nThe medium of the traffic source. Could be \"organic\", \"cpc\", \"referral\", or the value of the utm_medium URL parameter.","5d099c91":"<a id =\"6_1_3_14\"><\/a><h4>6.1.3.14  Distribution of **subContinent**<\/h4>\nThe sub-continent from which sessions originated, based on IP address of the visitor.","45c111d3":" ## <a id =\"1\"><\/a> 1. Google Analytics Customer Revenue Prediction \n\nThe 80\/20 rule has proven true for many businesses\u2013only a small percentage of customers produce most of the revenue. As such, marketing teams are challenged to make appropriate investments in promotional strategies.\n\nRStudio, the developer of free and open tools for R and enterprise-ready products for teams to scale and share work, has partnered with Google Cloud and Kaggle to demonstrate the business impact that thorough data analysis can have.\n\nIn this competition, **you\u2019re challenged to analyze a Google Merchandise Store (also known as GStore, where Google swag is sold) customer dataset to predict revenue per customer.** Hopefully, the outcome will be more actionable operational changes and a better use of marketing budgets for those companies who choose to use data analysis on top of GA data.\n\n","c282f7ba":"<a id =\"6_2\"><\/a><h3>6.2. Bivariate Distribution<\/h3>\nThese analysis was done using the code of user <a href = \"https:\/\/www.kaggle.com\/sudalairajkumar\/simple-exploration-baseline-ga-customer-revenue\">@SRK<\/a>","c8faf30c":"<a id =\"6_1_2_4\"><\/a><h4>6.1.2.4  Distribution of **visitStartTime**<\/h4>\nThe timestamp (expressed as POSIX time).","dcd61456":"<a id =\"6_1_3_17\"><\/a><h4>6.1.3.17  Distribution of **newVisits**<\/h4>\nTotal number of new users in session (for convenience). If this is the first visit, this value is 1, otherwise it is null.","cc643bb1":"<a id =\"6_1_3_16\"><\/a><h4>6.1.3.16  Distribution of **hits**<\/h4>\nTotal number of hits within the session.\nA hit is one download of one file from your web site. So, if your home page is comprised of three images, a style sheet (style.css, for example) and the page itself (let\u2019s say index.html), then every time a browser downloads that page, four hits are recorded.","0249119b":"The training set has 903 653 observations (each one is a visit to the store) and 12 features,","24c9acb7":"**What should I expect the data format to be?**\n\nBoth train.csv and test.csv contain the columns listed under Data Fields. Each row in the dataset is one visit to the store. Because we are predicting the log of the total revenue **per user**, be aware that not all rows in test.csv will correspond to a row in the submission, but **all unique fullVisitorIds will correspond to a row in the submission**.\n\n**IMPORTANT: Due to the formatting o\nf fullVisitorId you must load the Id's as strings in order for all Id's to be properly unique!**\n\nThere are multiple columns which contain JSON blobs of varying depth. In one of those JSON columns, totals, the sub-column transactionRevenue contains the revenue information we are trying to predict. This sub-column exists only for the training data.\n\n**What am I predicting?**\nWe are predicting the natural log of the sum of all transactions per user. \n\n\n**Take Notice**\n - Note that we're predicting the natural log of the total revenue per unique user\n - Please note that the IDs we're using in this competition must be loaded as strings to properly deduplicate \/ match with BigQuery. Be wary of loading this data in programs like Excel that might also truncate or alter the IDs.\n - In addition to the regular prizes, this competition will have a special prize for R users","e261a95a":"<a id =\"6_1_3_11\"><\/a><h4>6.1.3.11  Distribution of **metro**<\/h4>\n\nThe Designated Market Area (DMA) from which sessions originate.","30a376d8":"<a id =\"6_1_3_8\"><\/a><h4>6.1.3.8  Distribution of **city**<\/h4>\nUsers' city, derived from their IP addresses or Geographical IDs.","605699fa":"<a id =\"6_1_3_32\"><\/a><h4>6.1.3.32  Distribution of new Date Features<\/h4>","db6f3976":"<a id =\"6_2_6\"><\/a><h4>6.2.6.  Pageviews  vs Target <\/h4>","1e41dbf2":"Our target variable appears to have a normal distribution. However, our intended target is the sum of the log transaction revenue per users. Let's see that distribution.","909c0d13":"<a id =\"3\"><\/a><h2>3. Make Assumptions<\/h2>\n\nBefore looking at the data made available I always like to think what possible conclusions I might take depending on the available data. By doing this brainstorm, there is a higher chance you will think about relationship that you might not have tought if you limited your logic to the known data.\n\nSo, what are the factors that influence <a href = \"https:\/\/your.googlemerchandisestore.com\/index\"> Google Merchandise Store<\/a> sales values?\n\n- Clients with ages ranging between 18 and 30, will be responsible for the majority of sales;\n- Male gender will higher sales values then Female gender;\n- Apparel, mostly shirts and sweatshirts, and Bundles will be the most sold item in the site\n- The month with highest sales will be end of the year (December)\n- Asia and North America are the regions of the world which buy more products\n- Customer that spend more on these item have interest in technology, lifestyle, Sports, Gameing (data from Google profile)\n- Most buyers are from Tier 1 and 2 cities\n- Web platform is the most used to purchase this items\n- The majority of client's pay with credit card\n- Sales will be affected by shipping price\n- Do the store ship to all countries?\n\n","a840b067":"<a id =\"6_1_3_51\"><\/a><h4>6.1.3.5  Distribution of **deviceCategory**<\/h4>\nThe type of device (Mobile, Tablet, Desktop)","e1e6a5fa":"<a id =\"6_1_3_25\"><\/a><h4>6.1.3.25  Distribution of **campaign**<\/h4>\nThe campaign value. Usually set by the utm_campaign URL parameter.","bd663570":"<a id =\"6_1_3_6\"><\/a><h4>6.1.3.6  Distribution of **isMobile**<\/h4>\nIf the user is on a mobile device, this value is true, otherwise false.","b1107ad8":"<a id =\"6_2_5\"><\/a><h4>6.2.5.  Device OS  vs Target <\/h4>","450ef448":"Both distributions are quite similar.","aff1635a":"<a id =\"6_2_7\"><\/a><h4>6.2.7.  Continent  vs Target <\/h4>","4ce384dd":"<a id =\"6_1_2_3\"><\/a><h4>6.1.2.3  Distribution of **visitNumber**<\/h4>\nThe session number for this user. If this is the first session, then this is set to 1.","3b266f7d":"<a id =\"6_1_3_15\"><\/a><h4>6.1.3.15  Distribution of **bounces**<\/h4>\nTotal bounces (for convenience). For a bounced session, the value is 1, otherwise it is null.","c3b7ec40":"<a id =\"6_2_1\"><\/a><h4>6.2.1.  VisitNumber vs Target <\/h4>\nHow many session does a user need to buy something?","0dd9ed4f":"<a id =\"6_1_3_27\"><\/a><h4>6.1.3.27  Distribution of **isTrueDirect **<\/h4>\nTrue if the source of the session was Direct (meaning the user typed the name of your website URL into the browser or came to your site via a bookmark), This field will also be true if 2 successive but distinct sessions have exactly the same campaign details. Otherwise NULL."}}