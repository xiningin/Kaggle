{"cell_type":{"bf9e20ac":"code","ad550a9f":"code","33beef5f":"code","c59db64c":"code","0971d185":"code","a208159c":"code","26f794a9":"code","ec14bdef":"code","2b482415":"code","c22e8441":"code","6f6dac49":"code","a0186ac4":"code","a502cfea":"code","44668f8b":"code","4832684c":"code","bdc5b28c":"code","e0283569":"code","eca17d5d":"code","97a90e2a":"code","0c94705d":"code","02fad346":"code","1135a64f":"code","d720bd83":"code","26c561c0":"markdown","535f9add":"markdown","92e8b730":"markdown","a0d2adde":"markdown","9160cbe0":"markdown","1149a6f7":"markdown","c9849c72":"markdown","c7034fd6":"markdown","990042bd":"markdown"},"source":{"bf9e20ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad550a9f":"school_cdf = pd.read_csv(\"\/kaggle\/input\/world-university-rankings\/timesData.csv\")\nschool_cdf.head()","33beef5f":"school_cdf.columns","c59db64c":"school_cdf.describe()","0971d185":"school_cdf.info()","a208159c":"def bar_plot(variable):\n    \"\"\"\n    \n        input: variable ex: teaching\n        output: bar plot & value count\n    \"\"\"\n    #get feature\n    var = school_cdf[variable]\n    #count number of value\/sample\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)    \n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable, varValue))","26f794a9":"cat1 = [\"teaching\", \"research\", \"citations\", \"student_staff_ratio\", \"international_students\", \"total_score\"]\nfor n in cat1:\n    bar_plot(n)","ec14bdef":"def detect_outliers(df, features):\n    outlier_indices = []\n    \n    for n in features:\n        # 1st quartile\n        Q1 = np.percentile(df[n], 25)\n        \n        # 3rd quartile\n        Q3 = np.percentile(df[n], 75)\n    \n        # IQR\n        IQR = Q3 - Q1\n        \n        # Outlier Step\n        outlier_step = IQR * 1.5\n        \n        # detect outlier and their indeces\n        outlier_list_col = df[(df[n] < Q1 - outlier_step) | (df[n] > Q3 + outlier_step)].index\n        \n    \n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n        \n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers\n#float64(4): teaching, research, citations and student_staff_ratio","2b482415":"school_cdf.loc[detect_outliers(school_cdf, [\"teaching\", \"research\", \"citations\", \"student_staff_ratio\"])]\n#there is no outliers for this dataset","c22e8441":"school_cdf_len = len(school_cdf)\n\nschool_cdf.info()","6f6dac49":"school_cdf.columns[school_cdf.isnull().any()]","a0186ac4":"school_cdf.isnull().sum()","a502cfea":"school_cdf[school_cdf[\"student_staff_ratio\"].isnull()]","44668f8b":"print(school_cdf[\"student_staff_ratio\"].mean())","4832684c":"school_cdf[\"student_staff_ratio\"] = school_cdf[\"student_staff_ratio\"].fillna(\"18.4\")\nschool_cdf[school_cdf[\"student_staff_ratio\"].isnull()]\n#work properly","bdc5b28c":"# drop country\nschool_cdf.drop(columns=[\"country\",\"female_male_ratio\", \"world_rank\"], inplace = True)","e0283569":"school_cdf.head()","eca17d5d":"#string to numeric\nstr_col = school_cdf.select_dtypes([\"object\"]).columns\nschool_cdf[str_col] = school_cdf[str_col].replace('-', 0)\nschool_cdf[\"num_students\"] = school_cdf[\"num_students\"].str.replace(',', '')\nschool_cdf[\"international_students\"] = school_cdf[\"international_students\"].str.replace(\"%\", \"\")\n\nschool_cdf[str_col] = school_cdf[str_col].apply(pd.to_numeric, errors=\"coerce\", axis = 1)\n\nschool_cdf[\"international_students\"] = school_cdf[\"international_students\"] \/ 100","97a90e2a":"school_cdf.isna().sum()","0c94705d":"school_cdf.drop(columns=[\"university_name\"], inplace = True)","02fad346":"school_cdf.isna().sum()","1135a64f":"school_cdf.dropna(inplace=True)\n\n#I will use index as rank of universities\n\nschool_cdf.index = np.arange(1, len(school_cdf)+1)","d720bd83":"print(school_cdf.dtypes)\nprint(school_cdf.isna().sum())\nschool_cdf.head(10)","26c561c0":"<a id = '2'><\/a><\/br>\n# Variable Description\n\n1. world_rank: world rank for the university\n1. teaching: university score for teaching (the learning environment)\n1. international: university score international outlook (staff, students, research)\n1. research: university score for research (volume, income and reputation)\n1. citations: university score for citations (research influence)\n1. income: university score for industry income (knowledge transfer)\n1. num_students: number of students at the university\n1. student_staff_ratio: Number of students divided by number of staff\n1. international_students: Percentage of students who are international\n1. female_male_ratio: Female student to Male student ratio\n","535f9add":"<a id = '3'><\/a><\/br>\n# Univariate Variable Analysis","92e8b730":"<a id = '7'><\/a><\/br>\n## Fill Missing Value\n- This is an only tutorial. Filling in the missing information with photos will not mean anything for this data. But I will use my script to practice anyway.\n- student_staff_ratio have 59 missing value","a0d2adde":"<a id = '6'><\/a><\/br>\n## Find Missing Value","9160cbe0":"<a id = '5'><\/a><\/br>\n# Missing Values\n* Find Missing Value\n* Fill Missing Value","1149a6f7":"1. float64(4): teaching, research, citations and student_staff_ratio\n1. int64(1)year\n1. object(9): world_rank, university_name, country, international, income, total_score, num_students, international_students and female_male_ratio","c9849c72":"<a id = '1'><\/a><\/br>\n# Load and Check Data","c7034fd6":"<a id = '4'><\/a><\/br>\n# Outlier Detection","990042bd":"# Introduction\nThis is world university ranking exploratory data analysis. I try to analyze basicly these universities.\n\n\n<font color = 'blue'>\nContent\n\n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n     * [Univariate Variable Analysis](#3)\n1. [Outlier Detection](#4)\n1. [Missing Values](#5)\n    * [Find Missing Values](#6)\n    * [Fill Missing Values](#7)\n    "}}