{"cell_type":{"700a2f58":"code","e6488d72":"code","ce54c1b7":"code","cc387b4f":"code","42917af7":"code","6a4b77eb":"code","44262dd0":"code","a02409e4":"code","6af53544":"code","9e1594ab":"code","c0affef9":"code","f9c96dd4":"code","da72ff9f":"code","7be8a6ac":"code","0758d8cf":"code","144a6fd0":"markdown"},"source":{"700a2f58":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6488d72":"train = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv')","ce54c1b7":"y_train = train[\"Cover_Type\"]\nX_train = train.drop(['Id',\"Cover_Type\"], axis=1)\nX_test = test.drop(['Id'], axis=1)","cc387b4f":"from catboost import CatBoostClassifier\nclf_CatBoostClassifier = CatBoostClassifier(**params,verbose=0, task_type=\"GPU\")\nclf_CatBoostClassifier.fit(X_train, y_train)\nsample_submission.iloc[:,1] = clf_CatBoostClassifier.predict(X_test)\nsample_submission.to_csv('submission_CatBoostClassifier.csv',index=False)\nsample_submission.head()","42917af7":"train.head()","6a4b77eb":"train.iloc[:, 1:11].hist(figsize=(20,10), bins=50);","44262dd0":" train[\"Cover_Type\"].hist(figsize=(3,3));","a02409e4":"train[\"Cover_Type\"].value_counts()","6af53544":"train.iloc[:, 11:25].describe()","9e1594ab":"train.iloc[:, 25:40].describe()","c0affef9":"train.iloc[:, 40:55].describe()","f9c96dd4":"test.iloc[:, 1:11].hist(figsize=(20,10), bins=50);","da72ff9f":"test.iloc[:, 11:25].describe()","7be8a6ac":"test.iloc[:, 25:40].describe()","0758d8cf":"test.iloc[:, 40:55].describe()","144a6fd0":"**EDA =>**  (Below section is optional EDA)"}}