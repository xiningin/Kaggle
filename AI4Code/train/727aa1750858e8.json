{"cell_type":{"1ed16c2f":"code","b075b9de":"code","15bc8ae5":"code","1dfba2a5":"code","89fe9c2f":"code","0770b496":"code","fd3b169d":"code","cd11e0b7":"code","29218db7":"code","7da24bc2":"code","48794f95":"code","d2ae1805":"code","f387e8ed":"code","ef3b6cd7":"code","00831fe8":"code","431f5fef":"code","5788f5a4":"code","8a2793a4":"code","133511fc":"code","fb8f5f0e":"code","10868e2c":"code","926a18c4":"code","bdca5656":"code","41ac1657":"code","602fd918":"code","57adfebf":"code","33469712":"code","f975848d":"code","913d1ddf":"code","11a61334":"code","ad46392a":"code","533eb7ac":"code","5edf5998":"code","37a5a8e6":"code","1f242297":"code","4fb486a0":"code","65770292":"code","58a2bbe6":"code","b2ecf79e":"code","c21efd82":"code","9b14b69d":"code","d26bc2a4":"code","f8aeeed0":"code","196646e4":"code","27e1c67f":"code","09d8485a":"code","37688d67":"code","b2fb5b36":"code","98ca80bf":"code","1ab5da46":"code","a099969b":"code","2bc8fc35":"code","c65c3aaa":"code","d1e3c2e5":"code","f1d9479c":"code","e12e4f15":"code","0ce349f4":"code","013c4dc4":"code","cc874171":"code","054be75a":"code","cea62db1":"markdown","90f13baa":"markdown","5c8f063f":"markdown","03eb3410":"markdown","474447ac":"markdown","1ffd27b4":"markdown","08a19db5":"markdown","fdf33767":"markdown","25709c7b":"markdown","a75cebb8":"markdown","55157372":"markdown","38ac4ead":"markdown","314879ed":"markdown","fac34805":"markdown","6dc72c2f":"markdown","c17dfc37":"markdown","d4e06159":"markdown","71e790d3":"markdown","5fbd886a":"markdown","cdb4342d":"markdown","b83fe217":"markdown","521c42b8":"markdown"},"source":{"1ed16c2f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b075b9de":"# importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pickle\nimport warnings\nwarnings.filterwarnings('ignore')","15bc8ae5":"titanic_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv');","1dfba2a5":"titanic_data.head()","89fe9c2f":"# The NULL Values\nsns.heatmap(titanic_data.isnull(),cmap='viridis')","0770b496":"titanic_data['Survived'].value_counts()","fd3b169d":"titanic_data.groupby('Sex')['Survived'].value_counts()","cd11e0b7":"sns.countplot(x='Sex',hue='Survived',data=titanic_data)","29218db7":"# Survival Rate= How many male were alived \/ Total number of males?\ntitanic_data.groupby('Sex')['Survived'].value_counts()[3]\/titanic_data['Sex'].value_counts()[0]*100","7da24bc2":"# Survival Rate= How many female were alived \/ Total number of Females?\ntitanic_data.groupby('Sex')['Survived'].value_counts()[0]\/titanic_data['Sex'].value_counts()[1]*100","48794f95":"titanic_data.groupby('Sex')['Pclass'].value_counts()","d2ae1805":"sns.countplot(x='Sex',hue='Pclass',data=titanic_data,palette='cool')","f387e8ed":"titanic_data.groupby(['Pclass','Sex'])['Fare'].mean()","ef3b6cd7":"titanic_data.groupby(['Pclass','Sex'])['Fare'].mean().plot(kind='bar')","00831fe8":"sns.barplot(x='Pclass',y='Fare',hue='Sex',data=titanic_data,palette='viridis')","431f5fef":"titanic_data.groupby(['Pclass','Sex'])['Survived'].value_counts()","5788f5a4":"plt.figure(figsize=(15,5))\ntitanic_data.groupby(['Pclass','Sex'])['Survived'].value_counts().sort_values(ascending=False).plot(kind='bar')","8a2793a4":"alone=titanic_data[(titanic_data['Parch']==0) & (titanic_data['SibSp']==0)]","133511fc":"alone['Survived'].value_counts(normalize=True)","fb8f5f0e":"print(titanic_data[\"SibSp\"].value_counts())\n\nprint(titanic_data[\"Parch\"].value_counts())\n\ntitanic_data['Family_size']= titanic_data['SibSp']+titanic_data['Parch']+1\ntest['Family_size']= test['SibSp']+test['Parch']+1\n\nprint(titanic_data[\"Family_size\"].value_counts())\n\n# Proportion of people survived for each class\nprint(titanic_data[\"Survived\"].groupby(titanic_data[\"Family_size\"]).mean().sort_values(ascending=False))","10868e2c":"titanic_data.isnull().sum()","926a18c4":"titanic_data.drop(['Cabin'], axis=1, inplace=True)\ntest.drop(['Cabin'], axis=1, inplace=True)","bdca5656":"titanic_data.groupby(['Pclass','Sex'])['Age'].mean()","41ac1657":"#creating column title\ntitanic_data['Title'] = titanic_data['Name'].str.split(', ', expand=True)[1].str.split('.', expand=True)[0]\ntitanic_data['Title'].value_counts()","602fd918":"test['Title'] = test['Name'].str.split(', ', expand=True)[1].str.split('.', expand=True)[0]","57adfebf":"Common_Title = ['Mr', 'Miss', 'Mrs', 'Master']\ntitanic_data['Title'].replace(['Ms', 'Mlle', 'Mme'], 'Miss', inplace=True)\ntitanic_data['Title'].replace(['Lady'], 'Mrs', inplace=True)\ntitanic_data['Title'].replace(['Sir', 'Rev'], 'Mr', inplace=True)\ntitanic_data['Title'][~titanic_data.Title.isin(Common_Title)] = 'Others'","33469712":"test['Title'].replace(['Ms', 'Mlle', 'Mme'], 'Miss', inplace=True)\ntest['Title'].replace(['Lady'], 'Mrs', inplace=True)\ntest['Title'].replace(['Sir', 'Rev'], 'Mr', inplace=True)\ntest['Title'][~test.Title.isin(Common_Title)] = 'Others'","f975848d":"sns.boxplot(x='Title', y='Age', data=titanic_data)\nplt.show()","913d1ddf":"titanic_data.groupby(['Title'])['Age'].mean()","11a61334":"titanic_data[\"Age\"]=titanic_data.groupby('Title')['Age'].apply(lambda x:x.fillna(x.mean()))","ad46392a":"test[\"Age\"]=test.groupby(['Pclass'])['Age'].apply(lambda x:x.fillna(x.mean()))","533eb7ac":"# Replace The NaN value for Fare\ntest['Fare'].fillna(test['Fare'].median(),inplace=True)","5edf5998":"# Fill the Vallues with \"S\" in the place of NULL values of EMbarked column\ntitanic_data['Embarked'].fillna('S',inplace=True)","37a5a8e6":"print(titanic_data.isnull().sum())\nprint(test.isnull().sum())","1f242297":"# Fare\nsns.distplot(titanic_data.Fare)\nplt.show()","4fb486a0":"titanic_data.boxplot('Fare')","65770292":"# Print 3 bins of Fare column\nprint(pd.cut(titanic_data['Fare'], 3).value_counts())\n\n# Plot the histogram\nsns.distplot(titanic_data[\"Fare\"])\nplt.show()\n\n# Print binned Fares by surviving rate\nprint(titanic_data['Survived'].groupby(pd.cut(titanic_data['Fare'], 3)).mean())","58a2bbe6":"titanic_data.loc[titanic_data.Fare>512, 'Fare'] = 263\ntitanic_data.Fare.sort_values(ascending=False).head(5)","b2ecf79e":"titanic_data['FarePerPerson']= titanic_data['Fare']\/titanic_data['Family_size']\ntitanic_data['FarePerPerson']","c21efd82":"test['FarePerPerson']= test['Fare']\/test['Family_size']","9b14b69d":"titanic_data.head()","d26bc2a4":"from sklearn.preprocessing import LabelEncoder\nlabel=LabelEncoder()\ntitanic_data['Embarked']=label.fit_transform(titanic_data['Embarked'])\ntest['Embarked']=label.fit_transform(test['Embarked'])","f8aeeed0":"titanic_data['Sex']=label.fit_transform(titanic_data['Sex'])\ntest['Sex']=label.fit_transform(test['Sex'])","196646e4":"titanic_data['Title']=label.fit_transform(titanic_data['Title'])\ntest['Title']=label.fit_transform(test['Title'])","27e1c67f":"titanic_data.head()","09d8485a":"# Drop Unnecessary Columns\ntitanic_data.drop(['Name','PassengerId','SibSp','Parch','Ticket'],axis=1,inplace=True)","37688d67":"# Drop Unnecessary Columns\ntest.drop(['Name','SibSp','Parch','Ticket'],axis=1,inplace=True)","b2fb5b36":"X=titanic_data.drop('Survived',axis=1)\ny=titanic_data['Survived']","98ca80bf":"from sklearn.model_selection import train_test_split","1ab5da46":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","a099969b":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=200, random_state=2)","2bc8fc35":"plt.rcParams[\"figure.figsize\"] = (10,6)\nmodel.fit(X_train,y_train)\nimportance = pd.DataFrame({'feature':X_train.columns, 'importance': np.round(model.feature_importances_,3)})\nimportance = importance.sort_values('importance', ascending=False).set_index('feature')\nimportance.plot(kind='bar', rot=0)\nplt.show()","c65c3aaa":"from sklearn.model_selection import GridSearchCV\ngrid_param = {\n 'n_estimators': [100, 200, 300],\n 'criterion':['gini', 'entropy'],\n 'min_samples_split': [2, 10, 20],\n 'min_samples_leaf': [1, 5],\n 'bootstrap': [True, False],\n}\ngd_sr = GridSearchCV(estimator=model,\n param_grid=grid_param,\n scoring='accuracy',\n cv=5,\n n_jobs=-1)\ngd_sr.fit(X_train, y_train)\nbest_parameters = gd_sr.best_params_\nprint(best_parameters)","d1e3c2e5":"model = RandomForestClassifier(n_estimators=200, bootstrap=False, criterion= 'gini', min_samples_leaf=5, min_samples_split=2, random_state=2)","f1d9479c":"model.fit(X_train,y_train)","e12e4f15":"model.predict(X_test)","0ce349f4":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test,model.predict(X_test))*100","013c4dc4":"from sklearn.model_selection import cross_val_score\nOverall_accuracies = cross_val_score(estimator=model, X=X_train, y=y_train, cv=5)\nprint(Overall_accuracies)\nOverall_accuracies.mean()*100","cc874171":"test_data = test.drop(\"PassengerId\", axis=1).copy()\nprediction = model.predict(test_data)","054be75a":"submission = pd.DataFrame({\n        \"PassengerId\": test[\"PassengerId\"],\n        \"Survived\": prediction\n    })\n\nsubmission.to_csv('submission.csv', index=False)","cea62db1":"# Hyper Parameter Tuning","90f13baa":"So 537 People Were Travelling Alone, and Thier Survival Rate is around 30% which is lesser than the people travelling with the Siblings and Parents. So We have seen that the alone people has a low survival rate than the people who travelling with siblings and Parents","5c8f063f":"# Feature Engineering","03eb3410":"#### OK so we have find some Relations next let's do the same with the Name, means Extract the Titles from the name and then find mean of thise and check for that","474447ac":"### Here we have seen that the Common names\/Most frequents are Mr, Miss,Mrs and Master so let's do accordingly","1ffd27b4":"# How many Females and Males Travelling in different Pclass?","08a19db5":"# Feature Importance","fdf33767":"# How many People were travelling Alone? What's thier Survival Rate?","25709c7b":"# What is the survival rate if the person is a Male and Female?","a75cebb8":"# How many Females and Males were survived? Is Sex is an Imp Feature?","55157372":"# One Hot Encoding","38ac4ead":"# How many people were survived travelling in different Passenger Classes based on gender?","314879ed":"# So we have got 83% Accuracy Which is Pretty Good!","fac34805":"# Fare","6dc72c2f":"# Let's check the relationship between fare and family size","c17dfc37":"Cabin: data missing > 70% . Cabin data can be ignored.","d4e06159":"# Let's Now Handle the Missing Value","71e790d3":"# Model Building","5fbd886a":"# Now Let's See our Data","cdb4342d":"# Thanks A Lot.","b83fe217":"Yes It IS!","521c42b8":"# Which Passenger Class Contains more Fare in the basis of gender?\n"}}