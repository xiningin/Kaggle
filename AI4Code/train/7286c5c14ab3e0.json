{"cell_type":{"2ba6cb9a":"code","475ca13c":"code","53292db7":"code","92784f91":"code","cc3e5981":"code","4cfbecca":"code","7058b245":"code","944fdd7d":"code","5021caf6":"code","1fb22ee9":"code","d6f98dfa":"code","b6bfb99a":"code","69bb1203":"code","2778de75":"code","6e676c26":"code","03c58f8b":"code","b36d78cb":"code","8450d97b":"markdown","9a868817":"markdown","bfb9aae1":"markdown","0ba5ce89":"markdown","54942f20":"markdown","7b0477eb":"markdown","b2b7d6df":"markdown","0b6787bd":"markdown","373b04a5":"markdown","4b7423fe":"markdown","9c599920":"markdown"},"source":{"2ba6cb9a":"import numpy as np\nimport tensorflow as tf\nimport os\nimport glob\nimport matplotlib.pyplot as plt","475ca13c":"x_path_list = sorted(glob.glob('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/CXR_png\/*.png'))\nfor i in range(6) :\n    test_path_lisTex_path_list = sorted(x_path_list)\ny_path_list = sorted(glob.glob('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/masks\/*.png'))\nlen(x_path_list), len(y_path_list)","53292db7":"def datagen(batch_size=32) :\n    global x_path_list, y_path_list\n    while True:\n        start = 0\n        end = batch_size\n        \n        while end  < len(x_path_list): \n            x = [] \n            y = []\n            for i in range(start,end) :\n                img_x = tf.keras.preprocessing.image.load_img(x_path_list[i], target_size=(128,128), color_mode='grayscale', interpolation='lanczos')\n                img_x = tf.keras.preprocessing.image.img_to_array(img_x)\n                img_x = img_x \/ 255.0\n                x.append(img_x)\n                img_y = tf.keras.preprocessing.image.load_img(y_path_list[i], target_size=(128,128), color_mode='grayscale', interpolation='lanczos')\n                img_y = tf.keras.preprocessing.image.img_to_array(img_y)\n                img_y = img_y \/ 255.0\n                y.append(img_y)\n            x = np.asarray(x)\n            y = np.asarray(y)\n            yield x, y\n            start += batch_size\n            end += batch_size","92784f91":"sample_img_x, sample_img_y = next(datagen(1))\nplt.imshow(sample_img_x[0], cmap='gray')\nplt.show()\nplt.imshow(sample_img_y[0], cmap='gray')\nplt.show()","cc3e5981":"train = datagen(2)","4cfbecca":"def loss(y_true, y_pred) :\n    error = tf.sqrt(tf.reduce_sum(tf.square(y_true - y_pred)))\n    return error","7058b245":"model = tf.keras.models.Sequential([\n    tf.keras.layers.Input((128,128,1)),\n    tf.keras.layers.BatchNormalization(),\n    tf.keras.layers.Conv2D(16,3,padding='same',activation=tf.keras.layers.LeakyReLU(0.2)),\n    tf.keras.layers.MaxPool2D(2),\n    tf.keras.layers.Conv2D(32,3,padding='same',activation=tf.keras.layers.LeakyReLU(0.2)),\n    tf.keras.layers.MaxPool2D(2),\n    tf.keras.layers.Conv2D(64,3,padding='same',activation=tf.keras.layers.LeakyReLU(0.2)),\n    tf.keras.layers.BatchNormalization(),\n    tf.keras.layers.Conv2DTranspose(64,3,padding='same',activation=tf.keras.layers.LeakyReLU(0.2)),\n    tf.keras.layers.Conv2DTranspose(32,3,strides=2,padding='same',activation=tf.keras.layers.LeakyReLU(0.2)),\n    tf.keras.layers.Conv2DTranspose(16,3,strides=2,padding='same',activation=tf.keras.layers.LeakyReLU(0.2)),\n    tf.keras.layers.Conv2DTranspose(1,3,padding='same',activation=tf.keras.layers.Activation('sigmoid')),\n])\n\nmodel.compile(loss=loss, optimizer=tf.keras.optimizers.Adam(1e-4), metrics=['mae'])\n\nmodel.summary()","944fdd7d":"model.fit(train, epochs=100, steps_per_epoch=10)","5021caf6":"sample_img_pred = model.predict(sample_img_x)\nsample_img_pred.shape","1fb22ee9":"plt.imshow(sample_img_pred[0], cmap='gray')","d6f98dfa":"def predict(path) :\n    img = tf.keras.preprocessing.image.load_img(path, target_size=(128,128), color_mode='grayscale', interpolation='lanczos')\n    img = tf.keras.preprocessing.image.img_to_array(img)\n    img = img \/ 255.0\n    pred = model.predict(np.array([img]))\n    plt.imshow(img, cmap='gray')\n    plt.show()\n    plt.imshow(np.round(pred[0]), cmap='gray')\n    plt.show()","b6bfb99a":"predict('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/test\/CHNCXR_0025_0.png')","69bb1203":"predict('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/test\/CHNCXR_0193_0.png')","2778de75":"predict('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/test\/CHNCXR_0352_1.png')","6e676c26":"predict('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/test\/CHNCXR_0491_1.png')","03c58f8b":"predict('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/test\/CHNCXR_0562_1.png')","b36d78cb":"predict('..\/input\/chest-xray-masks-and-labels\/Lung Segmentation\/test\/CHNCXR_0220_0.png')","8450d97b":"# **Initializing the Data Generator**","9a868817":"# **Removing Test Data from Overall Dataset**","bfb9aae1":"# **Creating a custom Data Generator**","0ba5ce89":"# **Initializing and Compiling the Model**","54942f20":"# **Examples from Test Set**","7b0477eb":"# **Visualizing a sample from the dataset**","b2b7d6df":"# **Importing Required Libraries**","0b6787bd":"# **Custom function for Segmentation**","373b04a5":"# **Sample Prediction**","4b7423fe":"# **Training the model using train data**","9c599920":"# **Creating a Custom Loss Function**"}}