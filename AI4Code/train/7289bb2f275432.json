{"cell_type":{"d37a48e1":"code","d6a0f254":"code","195ae831":"code","418351d4":"code","d16400fc":"code","c686ce0c":"code","724cae6b":"code","40a3d9e1":"code","88236c79":"code","2397dbe3":"code","6f49e244":"code","06b57f29":"code","8470ef55":"code","c2816050":"code","e1ead074":"code","1a6467ca":"code","af77ea66":"code","c8f5d521":"code","5a510761":"markdown","ffe6e805":"markdown","22422705":"markdown","1358bbb4":"markdown","58e7a3ad":"markdown","905f3784":"markdown","ea0e698b":"markdown","06438f13":"markdown","9a0748c5":"markdown","6fb52b40":"markdown","680db19b":"markdown"},"source":{"d37a48e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current dirory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d6a0f254":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","195ae831":"df = pd.read_csv(\"..\/input\/microsoft-stock-time-series-analysis\/Microsoft_Stock.csv\")","418351d4":"df.head()","d16400fc":"df.info()","c686ce0c":"df.describe()","724cae6b":"# This is wrong because of date column dtype is wrong\ndf.Date.max()","40a3d9e1":"df[\"Date\"] = pd.to_datetime(df[\"Date\"],format=\"%m\/%d\/%Y %H:%M:%S\")","88236c79":"# After changing dytpe\ndf.Date.max()","2397dbe3":"# Start Date\ndf.Date.min()","6f49e244":"# All Years Open-Close\nfig = px.line(df, x=df.Date, y=[\"Open\",\"Close\"], log_y=True)\n\nfig.update_layout(title=dict(text=\"All Years Open-Close\",font=dict(size=22)))\n\nfig.show()","06b57f29":"# All Years High-Low\nfig = px.line(df, x=df.Date, y=[\"High\",\"Low\"],log_y=True)\n\nfig.update_layout(title=dict(text=\"All Years High-Low\",font=dict(size=22)))\n\nfig.show()","8470ef55":"year_2021 = df[df.Date>=\"2021\/1\/1\"].sort_values(by=\"Date\")\nfig = px.line(year_2021, x=\"Date\", y=[\"Open\",\"Close\"], labels=dict(x=\"Date\",y=\"Price\"),log_y=True)\n\nfig.update_layout(title=dict(text=\"Open-Close 2021\",font=dict(size=22)))\n\nfig.show()","c2816050":"year_2021 = df[df.Date>=\"2021\/1\/1\"].sort_values(by=\"Date\")\nyear_2021[\"Mean Low-High\"] = (df[\"High\"]+df[\"Low\"])\/2\n\nfig = px.line(year_2021, x=\"Date\", y=[\"High\",\"Mean Low-High\",\"Low\"], log_y=True, color_discrete_sequence=[\"#a34b74\",\"#65bfac\",\"#5b92b5\"])\n\nfig.update_layout(title=dict(text=\"Low-High 2021\",font=dict(size=22)))\nfig.show()","e1ead074":"# All times Monthly Avarage Volume\nplt.figure(figsize=(12,8))\ndf.groupby([df.Date.dt.year,df.Date.dt.month])[\"Volume\"].mean().plot(color=\"#ad4073\",marker=\".\")\nplt.xlabel(\"Date\",color=\"#913653\", size=18)\nplt.ylabel(\"Volumne\",color=\"#913653\", size=18)\nplt.title(\"All Times Monthly Avarage Volume\",size=22)\n\nplt.yscale(\"log\")\nplt.grid(color=\"blue\", linestyle=\"--\", which=\"minor\")\nplt.xticks(fontsize=12) \nplt.yticks(fontsize=12, color=\"#3d8f6e\") \nplt.show()","1a6467ca":"plt.style.use(\"seaborn\")\nplt.figure(figsize=(12,6))\ng = sns.barplot(x=df.Date.dt.year, y=df.Volume, palette=\"Spectral\")\nplt.title(\"Yearly Volume\",fontsize=22)\ng.set_yscale(\"log\")\nplt.xticks(fontsize=12) \nplt.yticks(fontsize=12) \nplt.xlabel(\"Year\",fontsize=16)\nplt.ylabel(\"Volume\",fontsize=16)\nplt.grid(which=\"minor\",color=\"black\", linestyle=\"--\")\nplt.show()","af77ea66":"# All Times Monthly Total Volume\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize=(12,6))\nsns.barplot(x=df.Date.dt.month, y=df.Volume, palette=\"Set2\")\nplt.title(\"All Times Monthly Total Volume\",fontsize=18, fontstyle=\"oblique\")\nplt.yscale(\"log\")\nplt.xticks(fontsize=12) \nplt.yticks(fontsize=12, color=\"#3d8f6e\") \nplt.xlabel(\"Month\",fontsize=16)\nplt.ylabel(\"Volume\",fontsize=16)\nplt.grid(which=\"minor\",color=\"black\", linestyle=\"--\")\nplt.show()","c8f5d521":"# All Years by Month vs Volume\n\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize=(20,10))\nsns.barplot(x=df.Date.dt.month, y=df.Volume, hue=df.Date.dt.year, palette=\"Spectral\")\nplt.legend(loc=\"upper left\")\nplt.yscale(\"log\")\nplt.title(\"All Years by Month vs Volume\")\nplt.xlabel(\"Month\",fontsize=15)\nplt.ylabel(\"Volume\", fontsize=15)\nplt.grid(which=\"minor\",color=\"#84449c\", linestyle=\"--\")\nplt.show()","5a510761":"# EDA","ffe6e805":"***Note:*** **Plotly Graphs are a interactive graphs so you can select whatever you want area.**","22422705":"**All Years Open-Close**","1358bbb4":"**Low-High 2021**","58e7a3ad":"**All Years High-Low**","905f3784":"**Open-Close 2021**","ea0e698b":"**All Times Monthly Total Volume**","06438f13":"**Changing Date Colum format object to pandas DateTime**","9a0748c5":"**All Times Monthly Avarage Volume**","6fb52b40":"**All Years by Month vs Volume**","680db19b":"**Yearly Volume**"}}