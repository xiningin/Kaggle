{"cell_type":{"a8f2a49e":"code","80d8a9df":"code","a9139fe4":"code","71d7ef7c":"code","4a25869c":"code","3364d00d":"code","ce5ce1b0":"code","1bbdaf86":"code","d522b39a":"code","a93a0e48":"code","b31b6e22":"code","a8ff171b":"code","f61590a6":"code","72d10a4b":"code","1af276de":"code","669497c1":"markdown","852f00b0":"markdown","80608a4d":"markdown","35b7682e":"markdown","7878a6d5":"markdown","ac24ba80":"markdown","a4b6bfa0":"markdown","8f9089d8":"markdown","364b5428":"markdown","38a7e537":"markdown","0ef9511b":"markdown"},"source":{"a8f2a49e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","80d8a9df":"import matplotlib.pyplot as plt\n%matplotlib inline","a9139fe4":"df = pd.read_csv(\"\/kaggle\/input\/daily_covid19_data_tr.csv\")","71d7ef7c":"df.tail()","4a25869c":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.Active_Cases,use_line_collection=True)\n\nplt.title('Active Cases', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 100000, 10000),size=20)\n\n\nplt.show()","3364d00d":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.daily_new_cases, use_line_collection=True)\n\nplt.title('Daily New Cases', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 6000, 500),size=20)\n\n\n\nplt.show()","ce5ce1b0":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.daily_new_recovered, use_line_collection=True)\n\nplt.title('Daily New Recovered', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\nplt.xlim(13, 56)\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 6000, 500),size=20)\n\n\n\nplt.show()","1bbdaf86":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.intensive_care_number,use_line_collection=True)\n\nplt.title('Active Intensive Care Patients', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\nplt.xlim(14, 56)\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 2250, 250),size=20)\n\n\n\nplt.show()","d522b39a":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.intubated_care_number, use_line_collection=True)\n\nplt.title('Active Intubated Care Patients', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\nplt.xlim(15, 56)\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 1400, 200),size=20)\n\n\nplt.show()","a93a0e48":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.Recovered,use_line_collection=True)\n\nplt.title('Total Recovered', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\nplt.xlim(15, 56)\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 80000, 5000),size=20)\n\n\n\nplt.show()","b31b6e22":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.Deaths, use_line_collection=True)\n\nplt.title('Total Deaths', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 4500, 500),size=20)\n\n\n\nplt.show()","a8ff171b":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.daily_new_deaths, use_line_collection=True)\n\nplt.title('Daily New Deaths', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\nplt.xlim(4, 56)\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(np.arange(0, 140,25),size=20)\n\n\nplt.show()","f61590a6":"plt.figure(figsize=(16, 9))\n\nplt.stem(df.date, df.tested_person_number, use_line_collection=True)\n\nplt.title('Total Tested', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\n\nplt.xticks(size=10, rotation=90)\nplt.yticks(np.arange(0, 1400000, 100000),size=20)\n\n\nplt.show()\n","72d10a4b":"plt.figure(figsize=(16, 9))\n\nplt.plot(df.date, df.Active_Cases,label=\"Active Cases\", marker=\"o\")\nplt.plot(df.date, df.Recovered, label=\"Recovered\", marker = \"o\")\n\nplt.title('Active Cases & Total Recovered', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\nplt.xlim(5, 56)\n\nplt.legend(loc=2, ncol=10)\n\nplt.xticks(size=10, rotation=90)\n\n\n\nplt.show()","1af276de":"plt.figure(figsize=(16, 9))\n\nplt.plot(df.date, df.intubated_care_number, marker= \"o\", label=\"Active Intubated\",)\nplt.plot(df.date, df.intensive_care_number, marker= \"o\", label=\"Active Intensive Care\",)\n\nplt.title('Active Intubated & Active Intensive Care Patient', size=30)\n\nplt.xlabel('Date', size=20)\nplt.ylabel('# of People', size=20)\n\nplt.xlim(14, 56)\n\nplt.legend(loc=2, ncol=10)\n\nplt.xticks(size=10,rotation=90)\nplt.yticks(size=20)\n\nplt.show()","669497c1":"# Daily New Cases","852f00b0":"# Total Deaths","80608a4d":"# Daily New Recovered People","35b7682e":"# Total Tested People","7878a6d5":"# Active Cases & Total Recovered People","ac24ba80":"# Daily New Deaths","a4b6bfa0":"# Active Intensive Care Patients","8f9089d8":"# Active Intubated Care Patients","364b5428":"# Active Cases","38a7e537":"# Total Recovered People","0ef9511b":"# Active Intubated & Active Intensive Care Patient"}}