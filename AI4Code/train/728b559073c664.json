{"cell_type":{"be19e573":"code","a3832d5c":"code","187681cb":"markdown"},"source":{"be19e573":"#I need these extensions to create an array and a dataset and run functions in python\n\nimport numpy as np \nimport pandas as pd\n\n#calling my csv \nimport csv\nspreadsheet= pd.read_csv('..\/input\/sales.csv')\n\n#this will print an info summary in python\nspreadsheet.describe()\n\n#this outputs info sale= spreadsheet.sales print (sale)\n\ntotal = sum(spreadsheet.sales)\nprint (\"Our total sales \" + str(total))\nimport matplotlib.pyplot as plt\n\nlabels = ['Jan','Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsales = [6226,1521,1842,2051,1728, 2138, 7479, 4434,3615,5472,7224,1812]\nexpenditure = [3808,3373,3965,1098,3046,2258,2084,2799,1649,1116,1431,3532]\n\nx = np.arange(len(labels))\nwidth = 0.55\n\n\nfig, ax = plt.subplots()\n\nsuts1 = ax.bar(x - width\/2, sales, width, label='sales')\nsuts2 = ax.bar(x + width\/2, expenditure, width, label='expenditure')\n \nax.set_ylabel('Amounts in Pound sterling')\nax.set_title('Graph to show our monthly income vs monthly expenditure')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\ndef autolabel(rects): \n    \"\"\"Attach a text label above each bar in rects, displaying its height.\"\"\" \n    for sut in suts1:\n        height = sut.get_height()\n        ax.annotate('{}'.format(height), \n        xy=(sut.get_x() + sut.get_width() \/ 2, height),\n        xytext=(0, 5),\n        textcoords=\"offset points\", \n        ha='center', va='bottom')\n    for sut in suts2:\n        height = sut.get_height()\n        ax.annotate('{}'.format(height),\n                xy=(sut.get_x() + sut.get_width() \/2, height),\n                xytext=(0, 5), \n                textcoords=\"offset points\",\n                ha='center', va='bottom')","a3832d5c":"#this is Zara's work \n\nimport csv\nimport pandas as pd\n\u200b\n#reading and printing the cvs file\nwith open('sales.csv', 'r') as csv_file:\n    spreadsheet = csv.DictReader(csv_file)\n    print('this is the spreadsheet')\n    for row in spreadsheet:\n        print(row['year'], row['month'], row['sales'], row['expenditure'])\n\u200b\n#printing the sales in a list\nwith open('sales.csv', 'r') as csv_file:\n    spreadsheet = csv.DictReader(csv_file)\n    print('sales from the month are below')\n    for row in spreadsheet:\n        print(row['sales'])\n\u200b\n#output total sales across all months\ntotal = 0\nwith open('sales.csv', 'r') as csv_file:\n    spreadsheet = csv.DictReader(csv_file)\n    total = sum(float(row[\"sales\"]) for row in spreadsheet)\n    print('below is the total sales')\n    print(total)\n\u200b\ntotal1 = 0\nwith open('sales.csv', 'r') as csv_file:\n    spreadsheet = csv.DictReader(csv_file)\n    total1 = sum(float(row[\"expenditure\"]) for row in spreadsheet)\n    print('below is the total expenditure')\n    print(total)\nprint('sales minus expenditures = profit, see below: ')\nprint(total1 - total)\n\ndf.to_csv(\"file_path\", index=False)\n\n#high\/low months sales\n#high\/low months expenditure\n#high\/low months profi","187681cb":"#I need these extensions to create an array and a dataset and run functions in python\nimport numpy as np \nimport pandas as pd\n\n\n#calling my csv\nimport csv\nspreadsheet = pd.read_csv('..\/input\/sales.csv')\n\n#this will print an info summary in python\nspreadsheet.describe()\n\n#this outputs info\nsale= spreadsheet.sales\nprint (sale)\n\ntotal = sum(spreadsheet.sales)\nprint (\"Our total sales \" + str(total))\n\n# Import the libraries\nimport matplotlib.pyplot as plt\n\nlabels = ['Jan','Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsales = [6226,1521,1842,2051,1728, 2138, 7479, 4434,3615,5472,7224,1812]\nexpenditure = [3808,3373,3965,1098,3046,2258,2084,2799,1649,1116,1431,3532]\n\nx = np.arange(len(labels))\nwidth = 0.55\n\n\nfig, ax = plt.subplots()\n\nsuts1 = ax.bar(x - width\/2, sales, width, label='sales')\nsuts2 = ax.bar(x + width\/2, expenditure, width, label='expenditure')\n \nax.set_ylabel('Amounts in Pound sterling')\nax.set_title('Graph to show our monthly income vs monthly expenditure')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for sut in suts1:\n        height = sut.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(sut.get_x() + sut.get_width() \/ 2, height),\n                    xytext=(0, 5),  \n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n    for sut in suts2:\n        height = sut.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(sut.get_x() + sut.get_width() \/2, height),\n                    xytext=(0, 5), \n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\nautolabel(suts1)\nautolabel(suts2)\n\nfig.tight_layout()\nplt.show()\n"}}