{"cell_type":{"035b5b89":"code","62684b2c":"code","effdda1a":"code","6e20760b":"code","cf26ff72":"code","6ebc4dc1":"markdown","eb1a682a":"markdown","1514a8ff":"markdown"},"source":{"035b5b89":"# import necessary public library\nimport re","62684b2c":"def re_repl_count(pattern,replacement_texts,line):\n    count = 0\n    tmp = re.findall(pattern,line)\n    count = len(tmp)\n    result_str = re.sub(pattern,replacement_texts,line) \n    return result_str, count;","effdda1a":"with open('reformatted.txt','w') as fout:\n    with open('\/kaggle\/input\/phylotree\/mtDNA tree Build 17.htm','r',encoding='latin-1') as stream:\n        contents = str(stream.read()).replace('\\n',' ')\n        contents, count1 = re_repl_count(r'<\/tr>\\s+<tr ',r'<\/tr>\\n<tr ',contents)\n        contents, count1 = re_repl_count(r'<\/tr>\\s+(<!\\[if support)',r'<\/tr>\\n\\1',contents)\n        fout.write(contents)","6e20760b":"with open('result.csv', 'w') as fout:\n    isTree = False\n    \"\"\"\n    font517826  - state = @M~ - black\n    font617826  - state = @m~ - black italic\n    font917826  - state = @N~ - blue\n    font1017826 - state = @n~ - blue italic\n    \"\"\"\n    state = 0\n    row_count = 0\n    with open('reformatted.txt','r') as fin:\n        for line in fin:\n            if re.search(r'<td [^>]*?>L0<\/td>',line):\n                isTree = True\n            if re.search(r'<!\\[if support',line):\n                isTree = False\n            if isTree:\n                row_count += 1\n                tmp, count = re_repl_count(r'<\/?span[^>]*?>',r'',line)\n                tmp, count = re_repl_count(r'>\\s+',r'>',tmp)\n                tmp, count = re_repl_count(r'\\s+<',r'<',tmp)\n                tmp, count = re_repl_count(r'<td [^>]*?>&nbsp;<\/td>',r'_',tmp)\n                tmp, count = re_repl_count(r'<tr [^>]*?>',r'',tmp)\n                \n                tmp, count = re_repl_count(r'<td [^>]*?><a><\/a><\/td>',r'',tmp)   \n                tmp, count = re_repl_count(r'<td [^>]*?><a\\s+target=\"_blank\"\\s+href=\"([^\"]*?)\">([^<]*?)<\/a><\/td>',r';\\1;\\2',tmp)\n                tmp, count = re_repl_count(r's+;http',r';http',tmp)\n                tmp, count = re_repl_count(r'_+<\/tr>',r'<\/tr>',tmp)\n                tmp, count = re_repl_count(r'_+;http',r';http',tmp)\n                               \n                tmp, count = re_repl_count(r'<font\\s+class=\"font517826\">',r'@M~',tmp)\n                tmp, count = re_repl_count(r'<font\\s+class=\"font617826\">',r'@m~',tmp)\n                tmp, count = re_repl_count(r'<font\\s+class=\"font917826\">',r'@N~',tmp)\n                tmp, count = re_repl_count(r'<font\\s+class=\"font1017826\">',r'@n~',tmp)\n                tmp, count = re_repl_count(r'<\/font>',r'%',tmp)\n\n                # for gene entry with label, remove the closing tag for the label\n                tmp, count = re_repl_count(r'<\/td>(<td class[^>]*?>)',r'\\1',tmp)\n                tmp, count = re_repl_count(r'(<td class[^>]*?>)',r';\\1',tmp)\n                tmp, count = re_repl_count(r'(<td class[^>]*?>)(?=[^@])',r'\\1@M~',tmp)\n                tmp, count = re_repl_count(r'(?<=[^%>;])@',r'%@',tmp)\n                tmp, count = re_repl_count(r'(?<=[^%])<\/td>',r'%',tmp)\n                tmp, count = re_repl_count(r'<td class[^>]*?>',r'',tmp)\n                # Remove closing tag for gene entry\n                tmp, count = re_repl_count(r'<\/td>',r'',tmp)\n                \n                tmp, col_count = re_repl_count(r'_',r'',tmp)\n                if re.search(r'<td rowspan[^>]*?>',tmp):\n                    col_count = col_count + 1\n                tmp, count = re_repl_count(r'<td rowspan[^>]*?>',r'',tmp)\n                \n                tmp, count = re_repl_count(r'\\s+',r' ',tmp)\n                tmp, count = re_repl_count(r'@.~%',r'',tmp)\n                tmp, count = re_repl_count(r'<\/tr>',r'\\n',tmp) \n                \n                count = 1\n                while (count > 0):\n                    tmp, count = re_repl_count(r'(@.~)([^ %]+)\\s',r'\\1\\2%\\1',tmp)\n                \n                fout.write(str(row_count) + ';' + str(col_count) + ';' + tmp)\n                col_count = 0","cf26ff72":"with open('result_newick.txt','w') as fout:\n    with open('result.csv', 'r') as fin:\n        depth = 0\n        final = ''\n        col_num = 0\n        for line in fin:\n            if re.match('[0-9]+;0;',line) is None:\n                # get a column number\n                col_num, count = re_repl_count(r'[0-9]+;([0-9]+);.+\\n',r'\\1',line)\n                col_num = col_num.rstrip(\"\\n\")\n                # get a label\n                s, count = re_repl_count(r'[0-9]+;[0-9]+;(.*?)\\n',r'\\1',line)\n                # escape exisinting single quotes in labels\n                s, count = re_repl_count(r\"'\",r\"''\",s)\n                \n                # replace parenthesis in gene description with a period\n                s, count = re_repl_count(r\"\\(\",r\".\",s)\n                s, count = re_repl_count(r\"\\)\",r\".\",s)\n                \n                s, count = re_repl_count(r\"@M~([^%]+)%\",r\"<<\\1>>\",s)\n                s, count = re_repl_count(r\"@m~([^%]+)%\",r\"<\\1>\",s)\n                s, count = re_repl_count(r\"@N~([^%]+)%\",r\"<<<<\\1>>>>\",s)\n                s, count = re_repl_count(r\"@n~([^%]+)%\",r\"<<<\\1>>>\",s)\n                \n                # colon used URL causes a problem in Newick format. So replace it with _\n                s, count = re_repl_count(r'http:([^;]+);([^;]+);http:([^;]+);([^;]+)',r'.\\2\"http_\\1\"|\\4\"http_\\3\".',s)\n                s, count = re_repl_count(r'http:([^;]+);([^;]+)',r'.\\2\"http_\\1\".',s)\n                \n                s, count = re_repl_count(r';',r'.',s)\n                # enclose entire string with single quotes.\n                s = \"'\" + s + \"'\"\n                \n                if col_num:\n                    if depth < int(col_num):\n                        diff = int(col_num) - depth\n                        final = final + r'(' * diff + s\n                    if depth == int(col_num):\n                        final = final + r',' + s\n                    if depth > int(col_num):\n                        diff = depth - int(col_num)\n                        final = final +  r')' * diff + s\n                    depth = int(col_num)\n    final = final + r')' * depth + ';'\n    fout.write(final)","6ebc4dc1":"The final resulted file is result_newick.txt.\n\n**Reference:**\nhttp:\/\/scikit-bio.org\/docs\/0.5.1\/generated\/skbio.io.format.newick.html\n\n**Newick tree viewer:**\nhttp:\/\/etetoolkit.org\/treeview\/","eb1a682a":"**Things to be considered in Newick format:**\n- Some characters have special meaning in Newick format.  They need to be either escaped or avoided. \n- Meanings of some of the special characters in Newick format:\n    - semicolon: closes a tree\n    - colon: preceeds distance information - > (A:03,B:0.5,C:1)\n    - comma: separates siblings - > (A,B,C)\n    - single quote: encloses a label or escape another single quote used within a label. Example: L0a'b'f'g'k -> 'L0a''b''f''g''k'    \n    - curly brackets: encloses a tree.\n    - parenthesis: indicates a group of siblings (or children)\n    - square brackets: indicates a comment.\n    - pipe: indicates alternatives\n    - white space, tab, newline need to be escaped or avoided\n  \n**For this dataset:**\n\n**Labels:**\nSome labels contain single quotes. Enclose all labels within single quotes and escape single quotes with preceeding another single quote.\n\n**Gene Descriptions:**\n    To ease visual comprehension a little, opening and closing tags are updated like below:\n    - @M~A7383T% - coding-region mutation. Updated to <<A7383T>>.\n    - @m~A7383T% - preliminary coding-region mutation. Updated to <A7383T>.\n    - @N~A7383T% - control-region mutation. Updated to <<<<A7383T>>>>.\n    - @n~A7383T% - preliminary control-region mutation. Updated to <<<A7383T>>>.\n    Notes 1: Letters (A, T, C, G, a, t, c, g, d), numbers, special characters (!, (, ), ., -) are used here.\n    Notes 2: Parentheses are used in gene description and to group siblings in Newick format. To avoid this conflict, ( and ) are replaced with periods.\n\n**Links:**\n    Links are in the following format. Colon is a special character in Newick format and it is used in URL. So they are replaced with _.:\n    - .EU092665\"http_\/\/www.ncbi.nlm.nih.gov\/nuccore\/EU092665\"|EU092764\"http_\/\/www.ncbi.nlm.nih.gov\/nuccore\/EU092764\".","1514a8ff":"**Observations:**\n\n- Each row has 0 - 2 links.\n- Branches are going only downward.\n- Each entry can be described by row number and column number. (Parent child can be found based on the combination of row-column numbers.)\n- Some entries have labels (e.g. L0a'b'f'g and L0k) and others don't.\n- Each entry can be described by level of depth. The depth level can be found by counting the column number from left.\n- Each entry can be categorized into four different types. Their font types are black, black italic, blue, blue italic."}}