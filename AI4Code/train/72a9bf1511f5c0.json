{"cell_type":{"19cc13f4":"code","5636b29f":"code","a2369916":"code","bfba2562":"code","6e033c11":"code","05b0f270":"code","efe72d02":"code","c22e17cd":"code","364adb13":"code","f5807ef6":"code","6733ebb8":"code","c10245cf":"code","394e765d":"code","06b336d4":"code","f024ff8b":"code","0956ae93":"code","264b34a8":"code","f5b1beda":"code","0912df0f":"code","076ca6f1":"code","66ea4f70":"markdown","978e82b5":"markdown","a15788e3":"markdown","6f3a8cb4":"markdown","e65f5b7c":"markdown","f81c63c8":"markdown","51076912":"markdown","fe17bfe1":"markdown","70b328b7":"markdown","75dffe91":"markdown","f3b3838c":"markdown","acd930a7":"markdown"},"source":{"19cc13f4":"import numpy as np\nimport pandas as pd\n\ndf=pd.read_csv('\/kaggle\/input\/drug-overdose-deaths\/drug_deaths.csv',index_col='Unnamed: 0')","5636b29f":"pd.set_option('max_columns',None)\npd.set_option('max_rows',None)\ndf.head()","a2369916":"columns=df.columns\ncolumns=columns[-21:-4]\nfor i in columns:\n    print(df[i].unique())\n    \n#Converting to int type\ndf[columns[3]]=df[columns[3]].astype('int64')\n\n#Taking only 0 and 1 values for cause of death as Yes or No\ncolumns=columns[2],columns[12],columns[16]\nfor i in columns:\n    for j in range(5105):\n        if df.loc[j,i]=='0' or df.loc[j,i]==0:\n            df.loc[j,i]=0\n        else:\n            df.loc[j,i]=1\n","bfba2562":"#Count of deaths due to each drug\ncolumns=df.columns\ndrugs={}\nfor i in range(-21,-7,1):\n    s=df[columns[i]].sum()\n    print(columns[i],s)\n    drugs[columns[i]]=s\nfor i in range(-6,-4):\n    s=df[columns[i]].sum()\n    print(columns[i],s)\n    drugs[columns[i]]=s","6e033c11":"df.groupby('Other').Other.count()","05b0f270":"#Identifies and merges the same names with different spellings or errors in spellings\nimport fuzzywuzzy\nfrom fuzzywuzzy import process\n\n#Input:dataframe,column name, correct name, min similarity value, max similarity value and words to skip, in the order.\ndef replace_matches(df,column,string_to_match,min_ratio=50,max_ratio=100,leave=[]):\n    strings=df[column].unique()\n    matches=fuzzywuzzy.process.extract(string_to_match,strings,limit=10,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\n    close_matches=[match[0] for match in matches if match[1]>=min_ratio and match[1]<max_ratio and match[0] not in leave]\n    rows=df[column].isin(close_matches)\n    df.loc[rows,column]=string_to_match\n\ndf['Other']=df['Other'].str.lower()\ndf['Other']=df['Other'].str.strip()","efe72d02":"other=df['Other'].unique()\n#Getting word mattchings\nmatches=fuzzywuzzy.process.extract('buprenorphine',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\n#Replacing the matches by correct word\nreplace_matches(df=df,column='Other',string_to_match='buprenorphine',min_ratio=61,leave=['morphine','morphiine','buprop','buprno'])\nrows=df['Other'].isin(['buprenor, carfentanil','bupren, difluoro','bupre','bupren','pcp. bupren','bupren, hexadrone'])\ndf.loc[rows,'Other']='buprenorphine'\n\n#Running for all the different words need to be corrected\nmatches=fuzzywuzzy.process.extract('hydromorphone',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nreplace_matches(df=df,column='Other',string_to_match='hydromorphone',min_ratio=67,leave=['morphine'])\nrows=df['Other'].isin(['hydrom','h-morph','hydromorph, buprenor','hyd-morph','hydr-mor'])\ndf.loc[rows,'Other']='hydromorphone'\n\nmatches=fuzzywuzzy.process.extract('morphine',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nreplace_matches(df=df,column='Other',string_to_match='morphine',min_ratio=59,leave=['hydromorphone','buprenorphine','mitragine'])\nrows=df['Other'].isin(['morphine, no rx in pmp','morphine no 6mam','morph\/cod','morph pcp'])\ndf.loc[rows,'Other']='morphine'\n\nmatches=fuzzywuzzy.process.extract('opioid',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nreplace_matches(df=df,column='Other',string_to_match='opioid',min_ratio=46,leave=['zolpidem','buprenorphine','morphine'])\nrows=df['Other'].isin(['u-47700 synthetic opioid','opiate screen','u-47700','u-47700, carfentanil','u47700'])\ndf.loc[rows,'Other']='opioid'\n\nmatches=fuzzywuzzy.process.extract('zolpidem',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nreplace_matches(df=df,column='Other',string_to_match='zolpidem',min_ratio=50,leave=['opioid','morphine'])\n\nmatches=fuzzywuzzy.process.extract('diphenhydramine',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nreplace_matches(df=df,column='Other',string_to_match='diphenhydramine',min_ratio=56)\nrows=df['Other'].isin(['diphen, chlorphen'])\ndf.loc[rows,'Other']='diphenhydramine'\n\nmatches=fuzzywuzzy.process.extract('phenobarbital',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nreplace_matches(df=df,column='Other',string_to_match='phenobarbital',min_ratio=67)\n\nmatches=fuzzywuzzy.process.extract('difluorofentanyl',other,limit=20,scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nreplace_matches(df=df,column='Other',string_to_match='difluorofentanyl',min_ratio=58,leave=['carfentanil'])","c22e17cd":"#Replacing remaining wrong words\nrows=df['Other'].isin(['buprop','buprno'])\ndf.loc[rows,'Other']='bupropion'\n\nrows=df['Other'].isin(['mdma, n-ethyl-pentylone','mdma, pcp'])\ndf.loc[rows,'Other']='mdma'\n\nrows=df['Other'].isin(['butalb'])\ndf.loc[rows,'Other']='butalbital'\n\nrows=df['Other'].isin(['cod'])\ndf.loc[rows,'Other']='codeine'  \n\nrows=df['Other'].isin(['ket'])\ndf.loc[rows,'Other']='ketamine'\n\nrows=df['Other'].isin(['parox'])\ndf.loc[rows,'Other']='paroxetine'\n\nrows=df['Other'].isin(['pcp, n-ethyl-pentylone','n-ethyl-pentylone','methoxypcp','pcp, morphine nos'])\ndf.loc[rows,'Other']='pcp'\n\nrows=df['Other'].isin(['mitragine','mirtagynine'])\ndf.loc[rows,'Other']='mitragynine'\n\nrows=df['Other'].isin(['others'])\ndf.loc[rows,'Other']='unidentified'\ndf['Other']=df['Other'].str.title()\ndf=df.replace('Other','Unidentified')\ndf=df.replace('Unknown','Unidentified')","364adb13":"#Clean 'Other' column\ndf.groupby('Other').Other.count().sort_values()","f5807ef6":"#Merging all the drugs from the Dataset and the 'Other' column as a datasset\nj=0\nother=df['Other'].unique()\nfor i in df.groupby('Other').Other.count().sort_values(ascending=False):\n    drugs[other[j]]=i\n    j+=1\ndrugsdf=pd.DataFrame(drugs.items())\ndrugsdf=drugsdf.sort_values(by=[1],axis=0,ascending=False)\ndrugsdf.reset_index(drop=True)","6733ebb8":"#No. of deaths caused by different drugs\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(15,5))\nsns.barplot(x=drugsdf[0],y=drugsdf[1],data=drugsdf)\nplt.xticks(rotation=90,size=14)\nplt.yticks(size=14)\nplt.xlabel('Drugs',size=17)\nplt.ylabel('Deaths',size=17)\nplt.title('Deaths Due To Different Drugs',size=20)","c10245cf":"#Yearwise no. of deaths\nplt.figure(figsize=(10,5))\nyear = pd.DataFrame(pd.to_datetime(df['Date']).dt.year.value_counts())\nprint(year)\nsns.barplot(x=year.index.astype('int64'),y=year['Date'],data=year)\nplt.title('Deaths in each Year',size=15)\nplt.xlabel('Year',size=12)\nplt.ylabel('Deaths',size=12)","394e765d":"#Deaths of residents of different cities\ncity=pd.DataFrame(df['ResidenceCity'].value_counts())\ncity","06b336d4":"plt.figure(figsize=(15,5))\nsns.barplot(x=city.index[:40],y=city['ResidenceCity'][:40],data=drugsdf)\nplt.xticks(rotation=90,size=14)\nplt.yticks(size=14)\nplt.xlabel('Residence',size=17)\nplt.ylabel('Deaths',size=17)\nplt.title('Deaths of Residents of Top 40 cities',size=20)","f024ff8b":"#Deaths in different cities\ndeath_city=pd.DataFrame(df['DeathCity'].value_counts())\ndeath_city","0956ae93":"plt.figure(figsize=(15,5))\nsns.barplot(x=death_city.index[:40],y=death_city['DeathCity'][:40],data=death_city)\nplt.xticks(rotation=90,size=14)\nplt.yticks(size=14)\nplt.xlabel('City',size=17)\nplt.ylabel('Deaths',size=17)\nplt.title('Top 40 Cities with Highest no. of Reported Deaths',size=20)","264b34a8":"#Death distribution by sex ratio\nmale = df['Sex'].value_counts().values[0]\nfemale = df['Sex'].value_counts().values[1]\nplt.pie([male,female],labels=['Male','Female'],autopct= lambda x:'{:.2f}%  ({:,.0f})'.format(x,x*sum([male,female])\/100),shadow=True, startangle=90,radius=1.8,textprops={'fontsize':16})","f5b1beda":"#Death distribution by race\nprint(df['Race'].unique())\n\nplt.figure(figsize=(15,5))\nsns.countplot(x='Race',data=df)\nplt.xticks(rotation=90,size=14)\nplt.yticks(size=14)\nplt.xlabel('Race',size=12)\nplt.ylabel('Deaths',size=12)\nplt.title('Deaths Among Different Ethnicities',size=20)","0912df0f":"#Death distribution by age\ndf['Age']=df['Age'].replace('Unidentified',0)\nplt.figure(figsize=(15,5))\nsns.distplot(df['Age'])\nplt.xlabel('Age',size=12)\nplt.title('Death Distribution by Age',size=20)","076ca6f1":"#Word Cloud\nfrom wordcloud import WordCloud\ndeath_city = df['DeathCity'].copy().dropna()\ndeath_city_cloud = ' '.join(city for city in death_city)\nplt.figure(figsize=(10,7))\nwc=WordCloud(width=3000, height=2000).generate(death_city_cloud)\nplt.imshow(wc,interpolation='bilinear')\nplt.axis('off')","66ea4f70":"* Drug overdose deaths peak around the age of 45, steeply rise during the 20's and then steeply decreases after the 50's","978e82b5":"* Most deaths are caused by over dosing on Heroin and Opioids\n\n\n\n","a15788e3":"# Drug Overdose Deaths\n\nEach year more than 170000 people die due to *Drug Overdose*, either accidental or intentional, all over the world. In this notebook I perform EDA on the OD data of Connecticut(state in USA) available from 2012-2018 and visualize the causes and location of deaths.","6f3a8cb4":"* The residents of Hartford are reported the most, among the casualties.\n* The highest no. of deaths occur in Hartford (much more than the no. of residents of Hartford reported dead).","e65f5b7c":"* The word cloud shows the most affected cities","f81c63c8":"## This gives an idea as to where the authorities need to put their focus to reduce Drug Overdose related deaths. ","51076912":"## Cleaning The Dataset","fe17bfe1":"# Visualization","70b328b7":"* OD related deaths increase from 2012-2017 and then decrease for 2018","75dffe91":"* As compared to women, men account for almost triple the no. of deaths.\n* Can be due to the sex ratio or men consume more drugs or women are smarter and more aware while consuming drugs \ud83d\ude02","f3b3838c":"### Cleaning the 'Other' column","acd930a7":"# Thank You \ud83d\ude4f"}}