{"cell_type":{"ec856403":"code","f0b14979":"code","745e2bf7":"code","7cf20927":"code","c907b5fa":"code","d837bc32":"code","2f0ed102":"code","122cb044":"code","bd261bec":"code","8a2184fe":"code","b3ee8273":"code","97ea44cb":"code","f72a078a":"code","96eb5a60":"code","cc1eda93":"code","4381db9b":"code","cea16443":"code","f338fc9c":"code","0c714a4d":"markdown","02392b6e":"markdown","f72ba7ee":"markdown","0ba13c4f":"markdown","6fa1e63b":"markdown","658984db":"markdown","a5d86043":"markdown","a8e85e6b":"markdown","3e52b911":"markdown","744588ed":"markdown","0b5ab4f7":"markdown","fa882b3c":"markdown","d0d79beb":"markdown","455d4588":"markdown","5f55310a":"markdown","12450d7d":"markdown","6834fabf":"markdown","c0e6c0d4":"markdown"},"source":{"ec856403":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current sessions","f0b14979":"from colorama import Fore, Back, Style \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.figure_factory as ff\nplt.style.use(\"seaborn\")\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom mlxtend.plotting import plot_confusion_matrix","745e2bf7":"heart_rate = pd.read_csv(\"\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")\nheart_rate.head()","7cf20927":"print(heart_rate.columns)\nprint(\"=\"*80)\nprint(\"|Check missing value|\")\nprint(\"=====================\")\nprint(heart_rate.isna().sum())\nprint(\"=\"*80)\nfor col in heart_rate.columns:\n    print(col, '\\t',heart_rate[col].nunique())","c907b5fa":"# age distribution\n\nhist_rate =[heart_rate[\"age\"].values]\ngroup_labels = ['age'] \n\nfig = ff.create_distplot(hist_rate, group_labels)\nfig.update_layout(title_text='Age Distribution plot')\n\nfig.show()","d837bc32":"m = heart_rate.DEATH_EVENT[heart_rate.sex==1].mean()\nf = heart_rate.DEATH_EVENT[heart_rate.sex==0].mean()\n\nplt.bar([\"Male\", \"Female\"], [m, f])\nplt.title(\"Mortality Rate per gender\")","2f0ed102":"nbin = np.arange(40, 100, 3)\ndef plot_histogram(df, columns, by, bins, i):\n    fig = plt.figure(i)\n    sns.distplot(df[columns][df[by] == 1],kde=False,color='r', bins=bins, hist=True, label = 1)\n    sns.distplot(df[columns][df[by] == 0],kde=False,color='g', bins=bins, hist=True, label = 0)\n    plt.xlabel(columns)\n    plt.legend()\n    plt.title(\"{} Distribution by {}\".format(columns,by))\n    plt.show()","122cb044":"plot_histogram(heart_rate, \"age\", 'sex', nbin,0)","bd261bec":"plot_histogram(heart_rate, 'age', 'DEATH_EVENT', nbin,1)","8a2184fe":"fig = sns.lmplot(y='creatinine_phosphokinase', x='age', data=heart_rate, hue='DEATH_EVENT',x_bins=10)","b3ee8273":"plt.subplots(figsize=(20,15))\nsns.heatmap(heart_rate.corr(), annot=True, fmt='.2f')","97ea44cb":"def my_regplot(ax, x, y, data, hue):\n    sns.regplot(x=x, y=y, data=data[data[hue]==1][[x,y]], ax=ax, color='orange', label=\"death\")\n    sns.regplot(x=x, y=y, data=data[data[hue]==0][[x,y]], ax=ax, color='green', label='survive')\n    ax.set_xlim(35,100)\n    ax.set_title(\"Analyze the {} feature\".format(y), fontsize=16)\n    ax.legend()","f72a078a":"fig, (ax1, ax2, ax3) = plt.subplots(3, figsize=(10,15))\n# sns.lineplot(x='age', y='ejection_fraction',data=heart_rate, color='r', ax=ax1, hue=\"DEATH_EVENT\")\n# sns.lineplot(x='age', y='serum_creatinine',data=heart_rate, color='r', ax=ax2, hue=\"DEATH_EVENT\")\n# sns.lineplot(x='age', y='',data=heart_rate, color='r', ax=ax3, hue=\"DEATH_EVENT\")\nmy_regplot(ax1, 'age', 'ejection_fraction', heart_rate, \"DEATH_EVENT\")\nmy_regplot(ax2, 'age', 'serum_creatinine', heart_rate, \"DEATH_EVENT\")\nmy_regplot(ax3, 'age', 'serum_sodium', heart_rate, \"DEATH_EVENT\")","96eb5a60":"# Choosing features\nfeats = [\"ejection_fraction\",\"serum_creatinine\",\"serum_sodium\",\"time\"]\ninputdf = heart_rate[feats]\nlabels = heart_rate.DEATH_EVENT\n\nxtrain, xtest, ytrain, ytest = train_test_split(inputdf, labels)","cc1eda93":"# Build - fit data to the model\nneighbor = KNeighborsClassifier(n_neighbors=7)\nneighbor.fit(xtrain, ytrain)","4381db9b":"# Make some prediction on the test set\nprint(np.array(ytest[:10]))\nneighbor.predict(xtest)[:10]","cea16443":"print(Fore.GREEN + \"Accuracy of KNN model: {:.2f}%\".format(100*neighbor.score(xtest,ytest)))","f338fc9c":"cm = confusion_matrix(ytest, neighbor.predict(xtest))\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"K Neighbors Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","0c714a4d":"# Explore the DATA","02392b6e":"## KNN Model","f72ba7ee":"The model works quite good in the first 10 examples that only wrong 1 time.\nLet see how its score on the test set","0ba13c4f":"# Quick KNN-Model for Classification","6fa1e63b":"Male and Female have approximately equal dead rate (\u224833%)","658984db":"### **Let see how the boolean features related to DEATH_EVENT**","a5d86043":"People who have \"high-blood-pressure\" and \"anaemia\" have high dead rate than who don't","a8e85e6b":"There is a similar between the two distributions. Hence the relation between age and sex does not tell us much about the \"DEATH_EVENT\"","3e52b911":"### The Distribution of Age coressponse to \"sex\", \"DEATH_EVENT\" ","744588ed":"## Confusion Matrix","0b5ab4f7":"## Read in DATA","fa882b3c":"As we can see here, the **DEATH_EVENT** is highly related to:\n* **age**\n* **ejection_fraction**\n* **serum_creatinine**\n* **serum_sodium**\n* **time**","d0d79beb":"# About this dataset\nCardiovascular diseases (CVDs) are the number 1 cause of death globally, taking an estimated 17.9 million lives each year, which accounts for 31% of all deaths worlwide.\nCDVs can be referred tp number of conditions. e.g: **heart disease**, **heart attack**, **stroke**,... and also ***Coronary artery Disease (CAD)***. In 2015, CAD affected 110 million people and resulted in 8.9 million deaths [1](https:\/\/doi.org\/10.1016\/S0140-6736(16)31678-6)\n![Heart Disease](https:\/\/cdn.mdedge.com\/files\/s3fs-public\/Image\/November-2017\/fed03405026s_1.png)\nMost cardiovascular diseases can be prevented by addressing behavioural risk factors such as tobacco use, unhealthy diet and obesity, physical inactivity and harmful use of alcohol using population-wide strategies.\n\nPeople with cardiovascular disease or who are at high cardiovascular risk (due to the presence of one or more risk factors such as hypertension, diabetes, hyperlipidaemia or already established disease) need early detection and management wherein a machine learning model can be of great help.","455d4588":"## Overall relations of the features","5f55310a":"## Splitting Data\n\nSince the Death_event is highly related to some features, I only choose those features to the train-test data set.","12450d7d":"## Features Explain\nWe can see all the features in the Data Frame are numerical feature\n\n                                                                 Some Features Explain\n* **sex** (boolean): 1 for Male 0 for Female\n* **anamenia** : a condition in which there is a deficiency of red cells or of haemoglobin in the blood, resulting in tired, weakness, shortness of breath, and a poor ability to exercise.\n* **creatine_phosphokinase**  (mcg\/L):(CPK) or (CK) is a enzyme that catalyzes the reaction of creatine and adenosine triphosphate (ATP). **Phosphocreatine** created from this reaction is used to supply tissues and cells e.g. brain skeletal muscles, and the heart.\n* **diabetes** : a metabolic disease that causes high blood sugar. Result in increased hunger, increased thirst,weight loss,frequent urination,blurry vision,extreme fatigue,sores that don\u2019t heal\n* **ejection_fraction** : Percentage of blood leaving the heart at each contraction (percentage)\n* **high_blood_pressure** : common condition in which the long-term force of the blood against your artery\n* **platelets** (kiloplatelets\/mL): small, colorless cell fragments in our blood that form clots and stop or prevent bleeding.\n* **serum_creatinine** (mg\/dL): Level of serum creatinine in the blood\n* **serum_sodium** (mEq\/L): Level of serum sodium in the blood. Reference range for serum sodium is 135-147 mmol\/L\n* **time** : follow-up period","6834fabf":"# **Import Libraries**","c0e6c0d4":"## Are \"Sex\", \"Age\" indicators of \"DEATH_EVENT\" ?"}}