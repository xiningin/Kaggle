{"cell_type":{"1d923c74":"code","3b66db94":"code","cd8a1c2d":"code","f5dcfa57":"code","60bca007":"code","fe354f80":"code","eb8ec840":"code","5fbb8fd4":"code","7a2601bf":"code","89bd013e":"code","d9b9e3a9":"code","b0aec7ba":"code","610b89ca":"code","4f176688":"code","7479c454":"code","30e08005":"code","18d1bef0":"code","bf76374f":"code","ab7c3252":"code","e2010f07":"markdown","fbddd633":"markdown"},"source":{"1d923c74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3b66db94":"import matplotlib.pyplot as plt","cd8a1c2d":"investments = pd.read_csv(\"\/kaggle\/input\/startup-investments-crunchbase\/investments_VC.csv\",encoding = 'unicode_escape')\ninvestments.head(10)","f5dcfa57":"investments.shape","60bca007":"investments.columns","fe354f80":"investments[\"country_code\"].value_counts(sort=True).iloc[:15].plot.bar(figsize=(15,7), width=.9)\nplt.xticks(rotation=60)\nplt.ylabel(\"#Startups\")\nplt.show()","eb8ec840":"investments[\" market \"].value_counts(sort=True).iloc[:15].plot.bar(figsize=(15,7), width=.9)\nplt.xticks(rotation=60)\nplt.ylabel(\"#Startups\")\nplt.show()","5fbb8fd4":"list(investments.columns[18:])","7a2601bf":"investments[\"procurement_total\"] = investments[investments.columns[18:]].sum(axis=1)\ninvestments[[\"name\", \" funding_total_usd \", \"procurement_total\"]].head(10)","89bd013e":"investments[\"funding_total_usd\"] = investments[\" funding_total_usd \"].str.replace(\",\", \"\").dropna(0)\ninvestments[\"funding_total_usd\"] = investments[\"funding_total_usd\"].str.strip().replace(\"-\", \"0\").fillna(\"0\").astype(int)","d9b9e3a9":"funding_total_ctry = investments.groupby(\"country_code\")[\"funding_total_usd\"].sum()\nfunding_total_mrkt = investments.groupby(\" market \")[\"funding_total_usd\"].sum()\nfunding_mean_ctry = investments.groupby(\"country_code\")[\"funding_total_usd\"].mean()\nfunding_mean_mrkt = investments.groupby(\" market \")[\"funding_total_usd\"].mean()","b0aec7ba":"funding_ctry = pd.merge(funding_mean_ctry, funding_total_ctry, on=\"country_code\")\nfunding_ctry.columns = [\"mean\", \"total\"]","610b89ca":"funding_mrkt = pd.merge(funding_mean_mrkt, funding_total_mrkt, on=\" market \")\nfunding_mrkt.columns = [\"mean\", \"total\"]","4f176688":"def show_bar(df, title=\"\"):\n    df.plot.bar(figsize=(15,7), width=.9)\n    plt.xticks(rotation=60)\n    plt.ylabel(title)\n    plt.show()","7479c454":"def show_top10(df, title=\"\"):\n    df_top10 = df.sort_values(ascending=False)[:10]\n    show_bar(df_top10, title)","30e08005":"show_top10(funding_total_ctry, \"funding total [USD]\")","18d1bef0":"show_top10(funding_total_mrkt, \"funding total [USD]\")","bf76374f":"show_top10(funding_mean_ctry, \"funding mean [USD]\")","ab7c3252":"show_top10(funding_mean_mrkt, \"funding mean [USD]\")","e2010f07":"### Funding Statistics\nCountry and Market","fbddd633":"### Startup Statistics\nCountry and Market"}}