{"cell_type":{"93717c93":"code","9cad1450":"code","319c91e5":"code","cf025ae4":"code","ad3cf99c":"code","7f76273b":"code","3af5b9df":"code","879cdee2":"code","bf28ac89":"code","ca413c14":"code","f828a61f":"code","da5b8fcf":"code","ca9b53eb":"code","b02d4574":"code","1ee11f52":"code","f166b171":"code","5d4a6e52":"code","40bb390e":"code","38c369ea":"code","2817a114":"code","e31bf97d":"code","c4d1199c":"code","c069af60":"code","f5176c29":"code","2bd66911":"code","42b33e3c":"code","6ae1665e":"code","e9883df6":"code","07a38c27":"code","e3d015ed":"code","dcdf0394":"markdown","c4139a13":"markdown","98e325a3":"markdown","9c49526f":"markdown","0c7be1d9":"markdown","59d4c6cf":"markdown","244b90fe":"markdown","690e681d":"markdown","e7526463":"markdown","a1cd812c":"markdown","84faf4a1":"markdown","99bf733e":"markdown","178e4288":"markdown","7bb654f2":"markdown","5b81f724":"markdown","9a2fe867":"markdown","91d35dbb":"markdown","80847bb4":"markdown","85d673b9":"markdown","a3c2165a":"markdown","9ae12b66":"markdown","a0b3ed88":"markdown","3fcd0ea2":"markdown","1d87eff4":"markdown","6069d60a":"markdown"},"source":{"93717c93":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","9cad1450":"df= pd.read_csv('..\/input\/iris\/Iris.csv')\ndf.head()","319c91e5":"df.info()","cf025ae4":"df.shape","ad3cf99c":"df.describe()","7f76273b":"df['Species'].value_counts()","3af5b9df":"df.drop('Id',axis=1,inplace=True)","879cdee2":"fig = df[df.Species == 'Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='royalblue',label='Iris-setosa')\ndf[df.Species == 'Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='darkorange',label='Iris-versicolor',ax=fig)\ndf[df.Species == 'Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='forestgreen',label='Iris-virginica',ax=fig)\n\nfig.set_xlabel('Sepal Length')\nfig.set_ylabel('Sepal Width')\nfig.set_title('Sepal Length vs Width')","bf28ac89":"sns.pairplot(df, hue='Species')","ca413c14":"sns.FacetGrid(df, hue='Species',height=5)\\\n.map(plt.scatter,'SepalLengthCm','SepalWidthCm')\\\n.add_legend()","f828a61f":"fig = df[df.Species == 'Iris-setosa'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='royalblue',label='Iris-setosa')\ndf[df.Species == 'Iris-versicolor'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='darkorange',label='Iris-versicolor',ax=fig)\ndf[df.Species == 'Iris-virginica'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='forestgreen',label='Iris-virginica',ax=fig)\n\nfig.set_xlabel('Petal Length')\nfig.set_ylabel('Petal Width')\nfig.set_title('Petal Length vs Width')\n","da5b8fcf":"df.hist(edgecolor='black',linewidth=1.2)","ca9b53eb":"plt.figure(figsize=(10,10))\n\nplt.subplot(2,2,1)\nsns.violinplot(data=df, x='Species',y='SepalLengthCm')\nplt.subplot(2,2,2)\nsns.violinplot(data=df, x='Species',y='SepalWidthCm')\n\nplt.subplot(2,2,3)\nsns.violinplot(data=df,x='Species', y='PetalLengthCm')\nplt.subplot(2,2,4)\nsns.violinplot(data=df, x='Species', y='PetalWidthCm')","b02d4574":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import svm\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier","1ee11f52":"sns.heatmap(df.corr(), annot=True, cmap='seismic')\nplt.show()","f166b171":"X = df[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\ny = df['Species']","5d4a6e52":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=0)","40bb390e":"X_train.head()","38c369ea":"X_test.head()","2817a114":"y_train.head()","e31bf97d":"model = LogisticRegression()\nmodel.fit(X_train,y_train)\n\nprediction = model.predict(X_test)\nprint('Logistic Regression accuracy = ', metrics.accuracy_score(prediction,y_test))","c4d1199c":"model = svm.SVC()\nmodel.fit(X_train,y_train)\n\nprediction = model.predict(X_test)\nprint('SVM accuracy = ', metrics.accuracy_score(prediction,y_test))","c069af60":"model = DecisionTreeClassifier()\nmodel.fit(X_train,y_train)\n\nprediction = model.predict(X_test)\nprint('Decision Tree accuracy = ', metrics.accuracy_score(prediction,y_test))","f5176c29":"model = KNeighborsClassifier()\nmodel.fit(X_train,y_train)\n\nprediction = model.predict(X_test)\nprint('KNN accuracy = ', metrics.accuracy_score(prediction,y_test))","2bd66911":"sepal_X = df[['SepalLengthCm','SepalWidthCm']]\nsepal_y = df['Species']\n\nsepal_X_train, sepal_X_test, sepal_y_train, sepal_y_test = train_test_split(sepal_X, sepal_y, test_size=0.3,random_state=0)","42b33e3c":"petal_X = df[['PetalLengthCm','PetalWidthCm']]\npetal_y = df['Species']\n\npetal_X_train, petal_X_test, petal_y_train, petal_y_test = train_test_split(petal_X, petal_y, test_size=0.3,random_state=0)","6ae1665e":"model = LogisticRegression()\n\nmodel.fit(sepal_X_train,sepal_y_train)\n\nprediction = model.predict(sepal_X_test)\nprint('Logistic Regression accuracy for Sepal = ', metrics.accuracy_score(prediction,sepal_y_test))\n\nmodel.fit(petal_X_train,petal_y_train)\n\nprediction = model.predict(petal_X_test)\nprint('Logistic Regression accuracy for Petal = ', metrics.accuracy_score(prediction,petal_y_test))","e9883df6":"model = svm.SVC()\n\nmodel.fit(sepal_X_train,sepal_y_train)\n\nprediction = model.predict(sepal_X_test)\nprint('SVM accuracy for Sepal = ', metrics.accuracy_score(prediction,sepal_y_test))\n\nmodel.fit(petal_X_train,petal_y_train)\n\nprediction = model.predict(petal_X_test)\nprint('SVM accuracy for Petal = ', metrics.accuracy_score(prediction,petal_y_test))","07a38c27":"model = DecisionTreeClassifier()\n\nmodel.fit(sepal_X_train,sepal_y_train)\n\nprediction = model.predict(sepal_X_test)\nprint('Decision Tree accuracy for Sepal = ', metrics.accuracy_score(prediction,sepal_y_test))\n\nmodel.fit(petal_X_train,petal_y_train)\n\nprediction = model.predict(petal_X_test)\nprint('Decision Tree accuracy for Petal = ', metrics.accuracy_score(prediction,petal_y_test))","e3d015ed":"model = KNeighborsClassifier()\n\nmodel.fit(sepal_X_train,sepal_y_train)\n\nprediction = model.predict(sepal_X_test)\nprint('KNN accuracy for Sepal = ', metrics.accuracy_score(prediction,sepal_y_test))\n\nmodel.fit(petal_X_train,petal_y_train)\n\nprediction = model.predict(petal_X_test)\nprint('KNN accuracy for Petal = ', metrics.accuracy_score(prediction,petal_y_test))","dcdf0394":"### Decision Tree","c4139a13":"## 2. We will use \"Sepal and Petal features separately\" to Train the algorithm and Check the accuracy.","98e325a3":"### Logistic Regression (LR)","9c49526f":"### K-Nearest Neighbors (KNN)","0c7be1d9":"**CONCLUSION:** By applying the above 4 Machine Learning algorithms, we see that all our models give the exact same High Accuracy.","59d4c6cf":"### Sepal","244b90fe":"### Importing the dataset","690e681d":"### Sepal","e7526463":"### Splitting the Sepal data and Petal data into Train and Test set","a1cd812c":"### Logistic Regression (LR)","84faf4a1":"### Importing the Libraries","99bf733e":"### Petal","178e4288":"As this is a **Classification Problem**, we will use Classification Algorithms to build our model.","7bb654f2":"# Exploratory Data Analysis","5b81f724":"### K-Nearest Neighbors (KNN)","9a2fe867":"# Drop Unwanted Columns","91d35dbb":"**CONCLUSION:** By applying the above 4 Machine Learning algorithms, we see that using Petal over Sepal gives us more accuracy.","80847bb4":"### Decision Tree","85d673b9":"### Support Vector Machine (SVM)","a3c2165a":"### Petal","9ae12b66":"### Importing Packages for Classification algorithms","a0b3ed88":"### Splitting the data into Train and Test set","3fcd0ea2":"## 1. We will use \"ALL\" the features to Train the algorithm and Check the accuracy.","1d87eff4":"In the above figure, we can see that Sepal Length and Width are not correlated. While, the Petal Length and Width are *highly correlated*.","6069d60a":"### Support Vector Machine (SVM)"}}