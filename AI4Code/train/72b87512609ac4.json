{"cell_type":{"28f42ece":"code","acf83423":"code","a9e3976c":"code","17be4d42":"code","61e113e7":"code","e64058f6":"code","c94ea895":"code","03c692f2":"code","90432201":"code","1c42e2de":"code","9fc01c13":"code","eafd2260":"code","bf89d6cf":"code","2298a70d":"code","1c233695":"code","0b090e09":"code","00a1694d":"code","d5f9d163":"code","51d55f3e":"code","cd2f9144":"code","db946494":"code","17c547ba":"code","9d4f5c6f":"code","c6506ea4":"code","52ecba4c":"code","da505bfa":"code","0952d4f4":"code","2eb12034":"code","f8132938":"code","2fc44b09":"code","429de0e1":"code","bf2ee70d":"code","772a5bff":"code","5acb2720":"code","c0cbe66a":"code","312b0dfc":"code","ad198f89":"code","67c5079f":"code","7b4a8814":"code","668736c0":"code","f3e6cd9d":"code","1b36e2b8":"code","a15c2e9e":"code","86ea018a":"code","f43b759d":"code","31a62393":"code","af3d53ce":"code","0e63927e":"code","6e8756d9":"code","fd19a243":"code","c27e0bea":"code","4deb1bab":"code","ac7613a0":"code","0cd1be8f":"code","7b1a7fc0":"code","5dc1743e":"code","8a162ddb":"code","5ee0b795":"code","5781b7f4":"code","6d9f5e38":"code","4a3bb7e6":"code","5516ee0e":"code","c422a202":"code","04f5bebf":"code","0ce57584":"markdown","51af9dfe":"markdown","49798777":"markdown","6756e42f":"markdown","99ca408d":"markdown","e39c0057":"markdown","ada76be7":"markdown","2e7bf495":"markdown","a271d995":"markdown","5925da3f":"markdown"},"source":{"28f42ece":"import pandas as pd\n\ndf_train = pd.read_csv('..\/input\/kbi-kaggle-titatic-2021\/train.csv')\ndf_test = pd.read_csv('..\/input\/kbi-kaggle-titatic-2021\/test.csv')","acf83423":"df_train.head()","a9e3976c":"df_test.head()","17be4d42":"df_train.info()","61e113e7":"df_train.isnull().sum()","e64058f6":"df_train.isnull().sum().sum()","c94ea895":"df_test.info()","03c692f2":"df_train.describe()","90432201":"print(df_train['Age'].mean())\nprint(df_train['Age'].median())\nprint(df_train['Age'].std())\nprint(df_train['Age'].min())\nprint(df_train['Age'].max())","1c42e2de":"print(df_train['Pclass'].mode())","9fc01c13":"df_train['Family'] = df_train['SibSp'] + df_train['Parch']\ndf_test['Family'] = df_test['SibSp'] + df_test['Parch']","eafd2260":"df_train['Title'] = df_train['Name'].str.extract(' (\\S+)\\.')\ndf_test['Title'] = df_test['Name'].str.extract(' (\\S+)\\.')\ndf_train.head()","bf89d6cf":"df_test.info()","2298a70d":"df_train['Title'].replace('Mlle', 'Miss', inplace=True) # \ud504\ub791\uc2a4\uc5b4\ndf_train['Title'].replace('Mme', 'Mrs', inplace=True) # \ud504\ub791\uc2a4\uc5b4\ndf_train['Title'].replace('Ms', 'Miss', inplace=True) # \uc601\uad6d\uc2dd \ud638\uce6d\n\nother_list = ['Capt', 'Col', 'Countess', 'Don','Dona', 'Jonkheer', 'Lady','Major', 'Rev', 'Sir']\ndf_train['Title'].replace(other_list, 'Other', inplace=True)\ndf_train.head()","1c233695":"df_train.loc[(df_train['Title']=='Dr') & (df_train['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Dr']['Age'].median()\ndf_train.loc[(df_train['Title']=='Master') & (df_train['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Master']['Age'].median()\ndf_train.loc[(df_train['Title']=='Miss') & (df_train['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Miss']['Age'].median()\ndf_train.loc[(df_train['Title']=='Mr') & (df_train['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Mr']['Age'].median()\ndf_train.loc[(df_train['Title']=='Mrs') & (df_train['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Mrs']['Age'].median()\ndf_train.loc[(df_train['Title']=='Other') & (df_train['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Other']['Age'].median()","0b090e09":"df_test.loc[(df_test['Title']=='Dr') & (df_test['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Dr']['Age'].median()\ndf_test.loc[(df_test['Title']=='Master') & (df_test['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Master']['Age'].median()\ndf_test.loc[(df_test['Title']=='Miss') & (df_test['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Miss']['Age'].median()\ndf_test.loc[(df_test['Title']=='Mr') & (df_test['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Mr']['Age'].median()\ndf_test.loc[(df_test['Title']=='Mrs') & (df_test['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Mrs']['Age'].median()\ndf_test.loc[(df_test['Title']=='Other') & (df_test['Age'].isnull()), 'Age'] = df_train[df_train['Title']=='Other']['Age'].median()","00a1694d":"df_test.info()","d5f9d163":"df_test.loc[(df_test['Age'].isnull()), 'Age'] = df_train['Age'].median()\ndf_test.loc[(df_test['Fare'].isnull()), 'Fare'] = df_train['Fare'].median()","51d55f3e":"df_train.info()","cd2f9144":"df_test.isnull().sum()","db946494":"df_train['Cabin'] = df_train['Cabin'].fillna('')\ndf_test['Cabin'] = df_test['Cabin'].fillna('')","17c547ba":"df_train['Embarked'] = df_train['Embarked'].fillna('S')\ndf_test['Embarked'] = df_test['Embarked'].fillna('S')","9d4f5c6f":"df_train.isnull().sum()","c6506ea4":"df_train.info()","52ecba4c":"df_train['Sex'].head()","da505bfa":"df_train['Sex'].astype('category').cat.codes","0952d4f4":"# Sex, Cabin, Embarked\ndf_train['Sex'] = df_train['Sex'].astype('category').cat.codes\ndf_train['Cabin'] = df_train['Cabin'].astype('category').cat.codes\ndf_train['Embarked'] = df_train['Embarked'].astype('category').cat.codes\n","2eb12034":"df_test['Sex'] = df_test['Sex'].astype('category').cat.codes\ndf_test['Cabin'] = df_test['Cabin'].astype('category').cat.codes\ndf_test['Embarked'] = df_test['Embarked'].astype('category').cat.codes","f8132938":"df_test.head()","2fc44b09":"df_train.head()","429de0e1":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler().fit(df_train[['Pclass', 'Sex', 'Age', 'Family', 'Fare', 'Embarked']])\nstandardized_X = scaler.transform(df_train[['Pclass', 'Sex', 'Age', 'Family', 'Fare', 'Embarked']])\nstandardized_X_test = scaler.transform(df_test[['Pclass', 'Sex', 'Age', 'Family', 'Fare', 'Embarked']])","bf2ee70d":"standardized_X_DF = pd.DataFrame(data = standardized_X, columns = ['Pclass', 'Sex', 'Age', 'Family', 'Fare', 'Embarked'])\nstandardized_X_DF_test = pd.DataFrame(data = standardized_X_test, columns = ['Pclass', 'Sex', 'Age', 'Family', 'Fare', 'Embarked'])","772a5bff":"standardized_X_DF","5acb2720":"standardized_X_DF_test","c0cbe66a":"from sklearn.model_selection import train_test_split\nX = standardized_X_DF\ny = df_train['Survived']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)","312b0dfc":"X_train","ad198f89":"y_train","67c5079f":"standardized_X_DF.columns","7b4a8814":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression(max_iter=500)\nmodel.fit(X_train, y_train)","668736c0":"model.score(X_train, y_train)","f3e6cd9d":"model.score(X_test, y_test)","1b36e2b8":"model.coef_[0]","a15c2e9e":"df = pd.DataFrame(\n    {\n        'feature': ['Pclass', 'Sex', 'Age', 'Family', 'Fare', 'Embarked'],   \n        'weight': model.coef_[0]\n    }\n)\n\ndf","86ea018a":"df.sort_values('weight')","f43b759d":"df_test.isnull().sum()","31a62393":"standardized_X_DF","af3d53ce":"from sklearn.svm import SVC\n\nsvm = SVC()\nsvm.fit(X_train, y_train)\nsvm.score(X_train, y_train)","0e63927e":"svm.score(X_test, y_test)","6e8756d9":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\nrf.fit(X_train, y_train)\nrf.score(X_train, y_train)","fd19a243":"rf.score(X_test, y_test)","c27e0bea":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(X_train, y_train)\nknn.score(X_train, y_train)","4deb1bab":"rf.score(X_test, y_test)","ac7613a0":"df_test.head(10)","0cd1be8f":"standardized_X_DF_test","7b1a7fc0":"from sklearn.metrics import accuracy_score","5dc1743e":"y_rf_predict = rf.predict(standardized_X_DF_test)","8a162ddb":"y_knn_predict = knn.predict(standardized_X_DF_test)\n","5ee0b795":"y_knn_predict","5781b7f4":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import VotingClassifier\n\nlog_clf = LogisticRegression(random_state=42)\nrnd_clf = RandomForestClassifier(random_state=42)\nsvm_clf = SVC(probability=True, random_state=42)\nknn_clf = KNeighborsClassifier()\n\nestimators=[('lr', log_clf),('rf', rnd_clf),('svc', svm_clf),('knn', knn_clf)]\nvoting_clf = VotingClassifier(estimators=estimators, voting='hard')\nvoting_clf.fit(X_train, y_train)","6d9f5e38":"X_test","4a3bb7e6":"standardized_X_DF_test","5516ee0e":"from sklearn.metrics import accuracy_score\n\nfor clf in (log_clf, rnd_clf, svm_clf,knn_clf, voting_clf):\n    clf.fit(X_train, y_train)\n    y_pred = clf.predict(X_test)\n    print(clf.__class__.__name__, accuracy_score(y_test, y_pred))","c422a202":"for clf in (log_clf, rnd_clf, svm_clf,knn_clf, voting_clf):\n    clf.fit(X_train, y_train)\n    y_pred = clf.predict(standardized_X_DF_test)\n","04f5bebf":"submission = pd.DataFrame({\n  \"PassengerId\": df_test[\"PassengerId\"],\n  \"Survived\": y_pred\n})\n\nsubmission.to_csv('submission1.csv', index=False)","0ce57584":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","51af9dfe":"## \ubaa8\ub378 \uc608\uce21","49798777":"### \ubc94\uc8fc \ub370\uc774\ud130 --> \uc218\uce58\uac12","6756e42f":"## \ubaa8\ub378 \uac1d\uccb4 \uc0dd\uc131, \ud559\uc2b5, \uc608\uce21","99ca408d":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac - \uacb0\uce21\uce58 \uac1c\uc218 \uc138\uae30","e39c0057":"## \ubaa8\ub378 \uc0dd\uc131 \ud559\uc2b5","ada76be7":"## \ud0c0\uc774\ud0c0\ub2c9 \ub370\uc774\ud130 \ub370\uc774\ud130 \uc14b\n\nhttps:\/\/nbviewer.org\/gist\/FinanceData\/02b5aba7dbcf9f32bddd7c17be5d479a\n\n* train.csv https:\/\/goo.gl\/SjTSKj\n* test.csv https:\/\/goo.gl\/RyUg2","2e7bf495":"## \ud1b5\uacc4\ub7c9","a271d995":"\uacb0\uce21\uce58 \ucc98\ub9ac\ud558\uae30","5925da3f":"## \ub370\uc774\ud130 spilt"}}