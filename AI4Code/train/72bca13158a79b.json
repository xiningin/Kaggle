{"cell_type":{"25096ccb":"code","6077feff":"code","d77b00c4":"code","47c7b60d":"code","108b8a23":"code","0bc1a5d1":"code","c2abe5bd":"code","aeabd094":"code","7debe3c4":"code","94cfb7ad":"code","2d5561ff":"code","574ab37f":"code","7a353da0":"code","db00ed62":"code","addc1c48":"code","24eb6b0a":"code","121f90dc":"code","6f00527a":"code","324bb62b":"code","491cab3c":"code","383d595b":"code","c15a1524":"code","5654d465":"code","0fd4f64b":"code","a8fdd5c4":"code","0838be01":"code","02887147":"code","76903d7f":"code","87170368":"code","8d71c7e3":"code","1fb22810":"code","b671466e":"code","356db87f":"code","78d941b4":"code","a42de2f2":"code","e5146e69":"code","0df7383f":"code","98b5a6bf":"code","5ae8197f":"markdown","3799d4f8":"markdown","e24bbf40":"markdown","44cc2646":"markdown","0583bc49":"markdown","43fb3ba3":"markdown","c742d386":"markdown","396917d7":"markdown","1d99aeb8":"markdown","6901b64a":"markdown","28c0d2da":"markdown","ac277324":"markdown","4dde847b":"markdown","13ea256f":"markdown","553cd763":"markdown","fb90792b":"markdown","648f62d4":"markdown","b51d934a":"markdown","66950dd4":"markdown","fbfe1dd0":"markdown","949da366":"markdown","71a57574":"markdown","ac2ae471":"markdown","090fa2a6":"markdown","b4fbd21c":"markdown","4d05d68f":"markdown","23759669":"markdown","e5d6b102":"markdown","9cd0d489":"markdown","ba198ecc":"markdown","948b041b":"markdown","aaf874c1":"markdown","f4454fec":"markdown","0d9711bf":"markdown","d4784310":"markdown","32b2d78f":"markdown","bdd75c6c":"markdown","cd7b53f9":"markdown","f584f42e":"markdown"},"source":{"25096ccb":"import pandas as pd\nimport numpy as np\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.colors\nfrom collections import Counter\nfrom plotly.subplots import make_subplots","6077feff":"df = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")","d77b00c4":"df.head()","47c7b60d":"df.shape","108b8a23":"df.nunique()","0bc1a5d1":"df.isna().sum()","c2abe5bd":"df['rating'].unique()","aeabd094":"df.columns","7debe3c4":"df = df[df['date_added'].notna()]\ndf[df['date_added'].isna()]","94cfb7ad":"df = df[df['rating'].notna()]","2d5561ff":"df.isna().sum()","574ab37f":"df.head(1)","7a353da0":"df.shape","db00ed62":"df['genre'] = df['listed_in'].apply(lambda x :  x.replace(' ,',',').replace(', ',',').split(',')) \nprint(df['genre'].head())\ndf['principal_genre'] = df['genre'].apply(lambda genres: genres[0])\ndf['season_count'] = df.apply(lambda x : x['duration'].split(\" \")[0] if \"Season\" in x['duration'] else \"\", axis = 1)\ndf['duration'] = df.apply(lambda x : x['duration'].split(\" \")[0] if \"Season\" not in x['duration'] else \"\", axis = 1)","addc1c48":"df[\"year_added\"] = pd.DatetimeIndex(df[\"date_added\"]).year\ndf","24eb6b0a":"movie_df = df[df['type'] == 'Movie']\nshow_df = df[df['type'] == 'TV Show']","121f90dc":"movie_df = movie_df.drop(['season_count'], axis=1)\nshow_df = show_df.drop([\"duration\"], axis = 1)","6f00527a":"movie_df['duration'] = movie_df['duration'].astype(int)\nshow_df['season_count'] = show_df['season_count'].astype(int)","324bb62b":"movie_df.head()","491cab3c":"show_df.head()","383d595b":"df.head()","c15a1524":"x = df['type'].value_counts().reset_index()\ngo.Figure(data=[go.Pie(values = x.type, labels = [\"Movies\", \"TV Shows\"], pull=[0, 0.2])],\n                layout=go.Layout(title=\"DISTRIBUTION OF THE TYPE OF CONTENT ON NETFLIX\", template = \"plotly_dark\"))","5654d465":"px.pie(df['rating'].value_counts().reset_index(), values='rating', names='index', title='DISTRIBUTION OF CONTENT RATINGS ON NETFLIX', template = \"plotly_dark\")","0fd4f64b":"df['Content']=1\ndata = df.pivot_table(index=[\"type\",\"release_year\"],values=\"Content\",aggfunc=\"sum\",fill_value=0)\ndata = data.reset_index()\nfig = px.bar(data[data['release_year']>2000],x=\"release_year\",y=\"Content\",color=\"type\",text=\"Content\",title = \"VARIATION OF NUMBER OF MOVIES AND TV SHOWS RELEASED FROM 2000\",template = \"plotly_dark\")\nfig.update_layout(barmode='group')\nfig.update_traces(textposition='outside')\nfig.show()","a8fdd5c4":"t2 = df.groupby(df['year_added'])['type'].agg('describe')\nt2['movies'] = t2.freq\nt2.drop(columns=['top', 'freq', 'unique'], inplace=True)\nt2['tv_shows'] = t2['count'] - t2.movies\nt2 = t2.drop(2021)\nfig = go.Figure()\nfig.add_scatter(x=t2.index, \n                y=t2.tv_shows, \n                fill='tonexty',\n                name='TV Shows',\n                line_color='rgb(103,0,31)'\n               )\nfig.add_scatter(x=t2.index, \n                y=t2.movies, \n                fill='tonexty',\n                name='Movies',\n                line_color='rgb(178,24,43)'\n               )\nfig.add_scatter(x=t2.index, \n                y=t2['count'], \n                line_color='white', \n                line_dash='dash',\n                opacity=.5,\n                name='Total',\n               )\nfig.update_traces(mode='lines')\nfig.update_layout(title_text='CONTENT ADDED OVER TIME',\n                  xaxis_title='Year',\n                  yaxis_title='New Content added',\n                  hovermode=\"x unified\",template = \"plotly_dark\")\n\nfig.show()\n# t2","0838be01":"top_movies_genres = [\n    'International Movies',\n    'Dramas',\n    'Comedies',\n    'Documentaries',\n    'Action & Adventure',\n]\nyear_genre_df = movie_df[(movie_df['principal_genre'].isin(top_movies_genres)) & (movie_df['release_year'] >= 2015)].groupby(['principal_genre', 'release_year']).agg({'title': 'count'})\nyear_genre_df = year_genre_df.reset_index()\nyear_genre_df.columns = ['principal_genre', 'release_year', 'count']\n\nfig = px.sunburst(year_genre_df, path=['release_year', 'principal_genre'], values='count', title = \"DISTRIBUTION OF MOVIES RELEASED EACH YEAR BASED ON GENRE FROM 2015\",template = \"plotly_dark\")\nfig.show()\n# year_genre_df","02887147":"temp = df[df[\"country\"]!=\"Not mentioned\"]\npx.scatter(temp['country'].value_counts().reset_index().head(10), x=\"index\", y=\"country\",color = \"index\", size = \"country\",width = 900, height = 450, title = \"TOP 10 COUNTRIES WITH MOST CONTENT\",template = \"plotly_dark\", size_max = 100)","76903d7f":"x1 = movie_df['duration']\nfig = ff.create_distplot([x1], ['Movie Duration'], bin_size=0.7, curve_type='normal')\nfig.update_layout(title_text='DURATION DISTRIBUTION OF MOVIES', template = \"plotly_dark\")\nfig.show()","87170368":"target_audience = {\n    'TV-PG': 'Older Kids',\n    'TV-MA': 'Adults',\n    'TV-Y7-FV': 'Older Kids',\n    'TV-Y7': 'Older Kids',\n    'TV-14': 'Teens',\n    'R': 'Adults',\n    'TV-Y': 'Kids',\n    'NR': 'Adults',\n    'PG-13': 'Teens',\n    'TV-G': 'Kids',\n    'PG': 'Older Kids',\n    'G': 'Kids',\n    'UR': 'Adults',\n    'NC-17': 'Adults'\n}\ndf['target_audience'] = df['rating'].replace(target_audience)\ndf['count'] = 1\ndata = df.groupby('country')[['country','count']].sum().sort_values(by='count',ascending=False).reset_index()[:10]\ndata = data['country']\n\ncountry_rating = df.loc[df['country'].isin(data)]\ncountry_rating = pd.crosstab(country_rating['country'],country_rating['target_audience'],normalize = \"index\").T\n\ncountry_order = ['United States', 'India', 'United Kingdom', 'Canada', 'Japan', 'France', 'South Korea', 'Spain',\n       'Mexico']\n\nage_order = ['Kids','Older Kids','Teens','Adults']\nplt.style.use('dark_background')\ncmap = matplotlib.colors.LinearSegmentedColormap.from_list(\"\", ['#564d4d','#831010','#db0000'])\nfig, ax = plt.subplots(1, 1, figsize=(12, 12))\n\nsns.heatmap(country_rating.loc[age_order,country_order],cmap=cmap,square=True, linewidth=2.5,cbar=False,\n            annot=True,fmt='1.0%',vmax=.6,vmin=0.05,ax=ax,annot_kws={\"fontsize\":12})\n\nax.set_ylabel('')    \nax.set_xlabel('')\nfig.text(0.13,0.75,\"TARGET AUDIENCE DISTRIBUTION BASED ON CONTENTS PER COUNTRY\", fontfamily='Arial',fontsize=18)\n# df['target_audience']","8d71c7e3":"def country_trace(country, flag = \"movie\"):\n    df[\"from_us\"] = df['country'].fillna(\"\").apply(lambda x : 1 if country.lower() in x.lower() else 0)\n    small = df[df[\"from_us\"] == 1]\n    if flag == \"movie\":\n        small = small[small[\"duration\"] != \"\"]\n    else:\n        small = small[small[\"season_count\"] != \"\"]\n    cast = \", \".join(small['cast'].fillna(\"\")).split(\", \")\n    tags = Counter(cast).most_common(25)\n    tags = [_ for _ in tags if \"\" != _[0]]\n\n    labels, values = [_[0]+\"  \" for _ in tags], [_[1] for _ in tags]\n    trace = go.Bar(y=labels[::-1], x=values[::-1], orientation=\"h\", name=\"\")\n    return trace\n\ntraces = []\ntitles = [\"United States\", \"\",\"India\",\"\", \"United Kingdom\", \"Canada\",\"\", \"Spain\",\"\", \"Japan\"]\nfor title in titles:\n    if title != \"\":\n        traces.append(country_trace(title))\n\nfig = make_subplots(rows=2, cols=5, subplot_titles=titles)\nfig.add_trace(traces[0], 1,1)\nfig.add_trace(traces[1], 1,3)\nfig.add_trace(traces[2], 1,5)\nfig.add_trace(traces[3], 2,1)\nfig.add_trace(traces[4], 2,3)\nfig.add_trace(traces[5], 2,5)\n\nfig.update_layout(height=1200, showlegend=False, template = \"plotly_dark\", title = \"TOP ACTORS\/ACTRESSES COUNTRY WISE WITH THE MOST CONTENT\")\nfig.show()\n# df[\"country\"].head(40)","1fb22810":"px.scatter(df['director'].value_counts().reset_index().head(20), x=\"index\", y=\"director\", size = \"director\", color = \"director\",title = \"TOP 20 DIRECTORS WITH MOST CONTENT WORLDWIDE\", template = \"plotly_dark\", size_max = 50)","b671466e":"n = show_df.dropna()\nn = n[n[\"release_year\"] >= 2015]\nfig = px.treemap(n, path=[\"release_year\",'director', \"title\", \"cast\"],\n                 color='director',\n                 hover_data=['director', 'title'],\n                 color_continuous_scale='Purple',template = \"plotly_dark\", title = \"TREEMAP REPRESENTATION OF TV SHOWS RELEASED FROM 2015\")\nfig.show()","356db87f":"released_year_df = df.loc[df['release_year'] > 2005].groupby(['release_year', 'type']).agg({'show_id': 'count'}).reset_index()\nadded_year_df = df.loc[df['year_added'] > 2005].groupby(['year_added', 'type']).agg({'show_id': 'count'}).reset_index()\n\nfig = go.Figure()\nfig.add_trace(go.Scatter( \n    x=released_year_df.loc[released_year_df['type'] == 'Movie']['release_year'], \n    y=released_year_df.loc[released_year_df['type'] == 'Movie']['show_id'],\n    mode='lines+markers',\n    name='Movie: Year Released',\n    marker_color='lightblue'\n))\nfig.add_trace(go.Scatter( \n    x=released_year_df.loc[released_year_df['type'] == 'TV Show']['release_year'], \n    y=released_year_df.loc[released_year_df['type'] == 'TV Show']['show_id'],\n    mode='lines+markers',\n    name='TV Show: Year Released',\n    marker_color='blue'\n))\nfig.add_trace(go.Scatter( \n    x=added_year_df.loc[added_year_df['type'] == 'Movie']['year_added'], \n    y=added_year_df.loc[added_year_df['type'] == 'Movie']['show_id'],\n    mode='lines+markers',\n    name='Movie: Year Added',\n    marker_color='orange'\n))\nfig.add_trace(go.Scatter( \n    x=added_year_df.loc[added_year_df['type'] == 'TV Show']['year_added'], \n    y=added_year_df.loc[added_year_df['type'] == 'TV Show']['show_id'],\n    mode='lines+markers',\n    name='TV Show: Year Added',\n    marker_color='red'\n))\nfig.update_xaxes(categoryorder='total descending')\nfig.update_layout(template = \"plotly_dark\", title = \"VARIATION OF YEAR RELEASED AND YEAR ADDED OF MOVIES AND TV SHOWS FROM 2005\")\nfig.show()","78d941b4":"fig = px.bar(show_df.sort_values(by = \"season_count\", ascending = False).head(10),x = \"season_count\",y = \"title\", color = \"season_count\", title = \"TOP 10 TV SHOWS\",template = \"plotly_dark\",text=\"season_count\")\nfig.update_traces(textposition=\"outside\")","a42de2f2":"plt.figure(figsize=(14, 7))\nshow_progress = show_df['release_year'].value_counts().sort_index()\nmovie_progress = movie_df['release_year'].value_counts().sort_index()\nplt.style.use('dark_background')\nplt.plot(show_progress.index, show_progress.values, label='TV shows')\nplt.plot(movie_progress.index, movie_progress.values, label='Movie')\nplt.axvline(2019, alpha=0.3, linestyle='--', color='w')\nplt.axvline(2021, alpha=0.3, linestyle='--', color='w')\nplt.axvspan(2019, 2021, alpha=0.2, color='w', label='Coronavirus')\nplt.xticks(list(range(1925, 2026, 5)), fontsize=12)\nplt.title('CONTENT GROWTH THROUGHOUT HISTORY', fontsize=18)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Amount of content', fontsize=14)\nplt.yticks(fontsize=12)\nplt.legend()\nplt.show()","e5146e69":"temp1 = movie_df.sort_values(by = \"duration\").head(20)\ntemp2 = movie_df.sort_values(by = \"duration\", ascending = False).head(20)\nfig = make_subplots(rows = 2 , cols = 1)\nfig.add_trace(\n    go.Bar(name = \"Top 20 Shortest Movies\",x=temp1.title,y=temp1.duration),row = 1 , col = 1)\nfig.add_trace(\n    go.Bar(name = \"Top 20 Longest Movies\", x=temp2.title,y=temp2.duration),row = 2 , col = 1)\nfig.update_layout(template = \"plotly_dark\",height=900, width=1000, title = \"TOP 20 SHORTEST AND LONGEST MOVIES ON NETFLIX\")","0df7383f":"grp = df.groupby('type')\nmovie_df = grp.get_group('Movie')\nmovie_df['duration'] = [int(i.split(' ')[0]) for i in movie_df.duration.dropna()]\nfig = px.violin(movie_df, x='duration', box=True, points=\"all\", labels={'duration':'Duration (in mins)'}, title = \"VIOLIN AND BOX-PLOT REPRESENTATION OF MOVIE DURATION\", template = \"plotly_dark\")\nfig.show()","98b5a6bf":"iso = pd.read_csv('..\/input\/country-codes-and-coordinates\/countries_codes_and_coordinates.csv')[['Country','Alpha-3 code']]\ndf_map = pd.DataFrame()\nx = np.hstack([np.array(i.split(',')) for i in df.country.dropna()])\nunique, counts = np.unique(x, return_counts=True)        \ndf_map['Country'] = unique\ndf_map['count'] = counts\ndf_map = df_map.merge(iso, how='left', on='Country').dropna()\ndf_map['Alpha-3 code'] = df_map['Alpha-3 code'].apply(lambda x:x[2:-1])\n\nfig = go.Figure(data=go.Choropleth(locations=df_map['Alpha-3 code'],\n                                    z=df_map['count'].astype(float),\n                                    colorscale='bluered',\n                                    text=df_map['Country'],\n                                    marker_line_color='white',\n                                    colorbar_title = 'Content count'))\n\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(template = \"plotly_dark\", title = \"GEOGRAPHIC REPRESENTATION OF CONTENT RELEASED IN DIFFERENT COUNTRIES\")                \nfig.show()","5ae8197f":"#### \u2022\tWe can observe that Netflix has a wide range of Movies starting with Movies with a duration of just 3 minutes to Movies with a duration of up to 312 minutes.\n#### \u2022\tThe Shortest Movie on Netflix is called \u201cSilent\u201d which has a duration of 3 minutes and the Longest Movie on Netflix is called \u201cBlack Mirror: Bandersnatch\u201d which has a duration of 312 minutes. \n# ","3799d4f8":"#### \u2022 There are 5372 Movies and 2389 TV Shows available on Netflix across the world.\n#### \u2022 Around 70% of the content on Netflix is Movies.\n# ","e24bbf40":"#### \u2022 Unsurprisingly, the United States stands out with a total of 2555 contents on Netflix. It\u2019s obvious as Netflix is an American company. \n#### \u2022 India ranks second with 923 contents, followed by the UK with 397 contents.\n# ","44cc2646":"# 14.\tContent growth throughout History","0583bc49":"# 3. Variation of number of Movies and TV Shows released from 2000","43fb3ba3":"#### \u2022\tLooking at the above plots it is obvious that since last decade, content addition to Netflix is far higher than released. \n#### \u2022\tThis is may be because streaming platforms are adding old content as well in parallel to current production. \n#### \u2022\tThis Trend is true since the boon of internet era as mostly of the content reach one or another steaming platform. \n#### \u2022\tFrom our plot, impact of recent covid-19 pandemic on content release and content addition can be observed, which is from end 2019 to 2021. \n#### \u2022\tHighest number of movies and shows were added around 2020 and lowest of lowest could be seen at the tail section.\n# ","c742d386":"# 16.\tMedian of Movie Duration of Content available on Netflix","396917d7":"# Analysis of Netflix Movies and TV Shows","1d99aeb8":"# 1. Percentage of each type of content on Netflix (Movie\/TV Show)","6901b64a":"# 7. Duration Distribution of the Movies by Minutes","28c0d2da":"#### \u2022 If we observe carefully, we can see that the duration of movies is normally distributed.\n#### \u2022 Most of the movies released are around 100 minutes long.\n# ","ac277324":"# 4. Variation of content added over time from 2008","4dde847b":"#### \u2022 Over the years, from 2015, we can observe that TV Shows started gaining more and more popularity. \n#### \u2022\tThere is a significant increase in the number of TV Shows released each year from 2015.\n#### \u2022\tTV Shows may even take over Movies in around 5 years. \n# ","13ea256f":"#### \u2022\tAs a TV Show gains more popularity and more viewers, more seasons are produced. \n#### \u2022\tBased on this observation, we can see from the above plot that Grey\u2019s Anatomy is the best TV Show on Netflix having 16 Seasons, followed by Supernatural and NCIS which has 15 Seasons.\n# ","553cd763":"#### \u2022 Interestingly most of the content in India is targeted to Teens.\n#### \u2022 Spain and Mexico are the countries with most of the content for Adults.\n#### \u2022 Adults play a major role as the target audience in almost all the major Countries. \n# ","fb90792b":"#### \u2022 We can observe that there are more Movies than TV Shows being added on Netflix.\n#### \u2022 General trend is that there is new content being added every year.\n#### \u2022 In 2020, the numbers drop, probably because Covid-19 made it harder to produce new content. \n# ","648f62d4":"# 8. Target Audience Distribution based on contents released in each Country","b51d934a":"# 9. Top Actors\/Actresses Country wise with the most content","66950dd4":"# 6. Top 10 Countries with the most content on Netflix","fbfe1dd0":"#### \u2022 We can observe that only few directors have made more than 10 Movies\/TV Shows. \n#### \u2022 Raul Campos, Jan Suter made the most content (18) followed by Marcus Raboy (16).\n# ","949da366":"# 5. Distribution of genres of Movies released every year from 2015","71a57574":"# 15.\tTop 20 Shortest and Longest Movies on Netflix","ac2ae471":"# Import Statements:","090fa2a6":"#### \u2022\tThis interactive plot shows the Countries with Countries with different amounts content on Netflix. \n#### \u2022\tThis Orthographic representation gives a complete picture of the World along with the number of contents released on Netflix in each Country. \n#### \u2022\tWe can clearly see that USA has most content on Netflix.  \n# ","b4fbd21c":"#### \u2022 The entertainment industry mostly favored movies till the last decade, but things are changing, and the focus is shifting towards TV Shows as well. \n#### \u2022 We can see that Covid-19 affected the entertainment industry significantly.\n#### \u2022 Since the past decade, both movies and TV shows gained popularity and most of the content is in the category of Movies.\n#### \u2022 The highest number of Movies released on Netflix was in 2017. (742 Movies)\n#### \u2022 In 2020, we can see the significant increase in the number of TV Shows taking over the number of Movies. \n#### \u2022 We can also observe that this follows a right skewed distribution over the years. \n# ","4d05d68f":"#### \u2022\tAs we can see, from 2005-2019, the content on Netflix grew rapidly.\n#### \u2022\tBut from 2019-2021, there\u2019s a major drop, due to Covid-19. \n# ","23759669":"#### \u2022 The largest count of content is made with the 'TV-MA' rating (2861) \"TV-MA\": For mature audiences only.\n#### \u2022 Second largest is the 'TV-14' rating (1931) \"TV-14\": May be inappropriate for children younger than 14 years of age.\n#### \u2022 Third largest is the 'TV-PG' rating (806) \"TV-PG\": Parental guidance suggested\n#### \u2022 Fourth largest is the very popular 'R' rating (665) \"R\": May be unsuitable for children under the age of 17 (Under 17 requires accompanying parent or adult guardian\")\n# ","e5d6b102":"# Cleaning and Optimizing the Dataset:","9cd0d489":"# 11. Representation of TV Shows from 2015","ba198ecc":"# 10. Top 20 Directors with most content Worldwide","948b041b":"#### \u2022\tThe median movie length is 98 mins, 50% of the movies have a duration between 86 mins and 114 mins. \n#### \u2022\tShortest movie available on Netflix is 3 mins long whereas the longest movie available on Netflix is 312 mins long.\n#### \u2022\tWe can also see that the movie duration is normally distributed.\n# ","aaf874c1":"# 2. Percentage of each content rating on Netflix","f4454fec":"#### \u2022 From the above plot, we can infer that, United States, India, United Kingdom, Canada, Spain, and Japan are the top Countries with the most content on Netflix, as we have seen this earlier in Plot 6. Page 9 of 15\n#### \u2022 Thus, we see that famous Actors like Adam Sandler, Anupam Kher, John Cleese have contributed more to their respective film industries.\n# ","0d9711bf":"# 17.\tGeographic representation of Content Released in each Country","d4784310":"# 12. Variation of year released, and year added of Movies and TV Shows from 2005","32b2d78f":"# Reading and Understanding the Dataset:","bdd75c6c":"# 13. Top 10 TV Shows","cd7b53f9":"# Visualization: ","f584f42e":"#### \u2022 We can observe that from 2015-2019, the major genres and their count increases slightly, but the most popular\/most viewed genre remains the same. (Dramas)\n#### \u2022 More and more content is being produced every year until 2019. After that, Covid-19 took place and there was an overall decrease in the content produced.\n# "}}