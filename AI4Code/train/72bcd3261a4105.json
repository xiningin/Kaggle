{"cell_type":{"bb191b57":"code","72b59424":"code","7b6f4fd4":"code","70b4159f":"code","42f04b61":"code","9000aa8a":"code","2b7eae3a":"code","02809020":"code","ff40dff7":"code","b7157035":"code","a7f28797":"code","d414979c":"code","62618a77":"code","abf3f048":"code","52480908":"code","6b6a146e":"markdown","f1f72d67":"markdown","9cb959e7":"markdown","e5871271":"markdown","bbdf9f98":"markdown","ee85d126":"markdown","9df77453":"markdown","6f24cd11":"markdown","b26f97df":"markdown"},"source":{"bb191b57":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","72b59424":"import numpy as np\nimport pandas as pd\nimport plotly.express as px","7b6f4fd4":"df=pd.read_csv('\/kaggle\/input\/world-cities-average-internet-prices-2020\/cities_internet_prices.19-10-2021.csv')","70b4159f":"df.head()","42f04b61":"df.info()","9000aa8a":"df.isnull().sum()","2b7eae3a":"df.columns = ['City','Region','Country','InternetPrice']\ndf.columns","02809020":"df['Region'] = df['Region'].apply(lambda x : x.replace('\"',''))\ndf['Country'] = df['Country'].apply(lambda x : x.replace('\"',''))\ndf.head()","ff40dff7":"df['InternetPrice'] = round(df['InternetPrice'], ndigits=2)\ndf['InternetPrice']","b7157035":"fig = px.histogram(df['InternetPrice'],\n                   color_discrete_sequence = ['MediumPurple'])\n\nfig.update_layout(title = 'The distribution of Internet Price',\n                  title_x = 0.5,\n                  title_font = dict(size = 18, color = 'DarkSlateBlue'))\n\nfig.show()","a7f28797":"countryaver20 = df.groupby(\"Country\")['InternetPrice'].mean().sort_values(ascending = False).reset_index().head(20)\ncountryaver20['InternetPrice'] = round(countryaver20['InternetPrice'], ndigits=2)\n\nfig = px.bar(countryaver20, \n             x = 'Country',\n             y = 'InternetPrice',\n             color = 'InternetPrice',\n             color_continuous_scale = 'plasma',\n             labels = {\"InternetPrice\":\"Internet Price\"})    \n\nfig.update_layout(title = 'Top 20 Countries with the highest average internet price',\n                  title_x = 0.5,\n                  title_font = dict(size = 18, color = 'DarkSlateBlue'),\n                  xaxis = dict(tickangle = 45))\nfig.show()","d414979c":"countryavert20 = df.groupby(\"Country\")['InternetPrice'].mean().sort_values(ascending = False).reset_index().tail(20)\ncountryavert20['InternetPrice'] = round(countryavert20['InternetPrice'], ndigits=2)\n\nfig = px.bar(countryavert20, \n             x = 'Country',\n             y = 'InternetPrice',\n             color = 'InternetPrice',\n             color_continuous_scale = 'plasma',\n             labels = {\"InternetPrice\":\"Internet Price\"})    \n\nfig.update_layout(title = '20 Countries with the lowest average internet price',\n                  title_x = 0.5,\n                  title_font = dict(size = 18, color = 'DarkSlateBlue'),\n                  xaxis = dict(tickangle = 45))\nfig.show()","62618a77":"countryaver = df.groupby(\"Country\")['InternetPrice'].mean().sort_values(ascending = False).reset_index()\ncountryaver['InternetPrice'] = round(countryaver['InternetPrice'], ndigits=2)\n\nfig = px.choropleth(countryaver,\n                    locations = 'Country',\n                    locationmode = 'country names',\n                    color = 'InternetPrice',\n                    hover_name = 'Country',\n                    color_continuous_scale = 'plasma',\n                    animation_frame = 'Country',\n                    labels = {\"InternetPrice\":\"Internet Price\"})\n\nfig.update_layout(title = 'World Countries - Internet Price',\n                  title_x = 0.5,\n                  title_font = dict(size = 18, color = 'DarkSlateBlue'),\n                  geo = dict(showframe = False,\n                             showcoastlines = False,\n                             projection_type = 'equirectangular'))\n\nfig.show()","abf3f048":"city20 = df.sort_values(\"InternetPrice\", ascending = False).reset_index().head(20)\n\nfig = px.bar(city20, \n             x = 'City',\n             y = 'InternetPrice',\n             color = 'InternetPrice',\n             color_continuous_scale = 'sunset',\n             labels = {\"InternetPrice\":\"Internet Price\"})\n\nfig.update_layout(title = 'Top 20 Cities with the highest average internet price',\n                  title_x = 0.5,\n                  title_font = dict(size = 18, color = 'DarkSlateBlue'),\n                  xaxis = dict(tickangle = 45))\nfig.show()","52480908":"city20 = df.sort_values(\"InternetPrice\", ascending = False).reset_index().tail(20)\n\nfig = px.bar(city20, \n             x = 'City',\n             y = 'InternetPrice',\n             color = 'InternetPrice',\n             color_continuous_scale = 'sunset',\n             labels = {\"InternetPrice\":\"Internet Price\"})\n\nfig.update_layout(title = '20 Cities with the lowest average internet price',\n                  title_x = 0.5,\n                  title_font = dict(size = 18, color = 'DarkSlateBlue'),\n                  xaxis = dict(tickangle = 45))\n\nfig.show()","6b6a146e":"**<font color = DarkSlateBlue size = 5 >Information about data<\/font>**","f1f72d67":"**<font color = DarkSlateBlue size = 5>Load data<\/font>**","9cb959e7":"**<font color = DarkSlateBlue size = 5 >Data Visualization<\/font>**","e5871271":"**<font color = DarkSlateBlue size = 5 >Check the null values<\/font>**","bbdf9f98":"**<font color = DarkSlateBlue size = 5 >Show first five rows of data<\/font>**","ee85d126":"**<font color = DarkSlateBlue size = 5 >Thank you for reading!<\/font>**","9df77453":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","6f24cd11":"[Link to My Kaggle](http:\/\/www.kaggle.com\/carriech)","b26f97df":"**<font color = DarkSlateBlue size = 5 >Import related libraries<\/font>**"}}