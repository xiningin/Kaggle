{"cell_type":{"4d684302":"code","618c6ee3":"code","9e7a5423":"code","24eb6364":"code","c09641f4":"code","081ed651":"code","43c1bdb2":"code","47728df4":"code","6e6f96d5":"code","ce367ed4":"code","61d85909":"code","9fc74899":"markdown"},"source":{"4d684302":"# Import helpful libraries\nimport pandas as pd\nimport numpy as np\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","618c6ee3":"# Load the data, and separate the target\ntrain = pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/train.csv')\n\ny = train.SalePrice","9e7a5423":"# Find most important features relative to target\ncorr = train.corr()\ncorr.sort_values([\"SalePrice\"], ascending=False, inplace=True)\n\nprint(corr.SalePrice[:20])","24eb6364":"# Create new features\nfeatures = [\n    'OverallQual', 'GrLivArea', 'GarageCars', 'GarageArea', 'TotalBsmtSF', \n    '1stFlrSF', 'LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', \n    'BedroomAbvGr', 'TotRmsAbvGrd'\n]\n\nX = train[features]\n\n# Split into validation and training data\ntrain_X, test_X, train_y, test_y = train_test_split(X, y, random_state=1)\n\nX.head()","c09641f4":"# Finding missing value\nX.isnull().sum()","081ed651":"rf_model = RandomForestRegressor(random_state=1)\nrf_model.fit(train_X, train_y)\n\nprediction = rf_model.predict(test_X)\n\nmae_test = mean_absolute_error(prediction, test_y)\n\nprint(f\"MAE on Test set: {mae_test:.3f}\")","43c1bdb2":"# Building a Random Forest model and train it on all of X and y\nfull_rf_model = RandomForestRegressor(random_state=0)\nfull_rf_model.fit(X, y)\n\ntest = pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/test.csv')\ntest_X = test[features]","47728df4":"# Finding missing value\nprint(test_X.shape)\nprint(test_X.isnull().sum())","6e6f96d5":"col = ['GarageCars', 'GarageArea', 'TotalBsmtSF']\n\ntest_X[col] = test_X[col].fillna(0).astype(int)\nprint(test_X.dtypes)","ce367ed4":"print(test_X.shape)\nprint(test_X.isnull().sum())","61d85909":"# Make predictions which we will submit\n\nprediction_test = full_rf_model.predict(test_X)\n\noutput = pd.DataFrame({'Id': test.Id,'SalePrice': prediction_test})\noutput.to_csv('submission.csv', index=False)","9fc74899":"## Prediction using RandomForestRegressor"}}