{"cell_type":{"2ede1e90":"code","d8b2b020":"code","e5b33da1":"code","d05b004e":"code","6c395c55":"code","550e5082":"code","e10df275":"code","b4eae3fe":"code","9d1667f8":"code","44d1a2f1":"code","a2dbadd9":"code","a4ec7c1f":"code","d25660be":"code","05840b4f":"code","0e389b71":"code","37aaf3b6":"code","16b7f9e1":"code","ef6fb606":"markdown"},"source":{"2ede1e90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8b2b020":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e5b33da1":"#Load Data\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","d05b004e":"#Exploratory Analysis\ntrain.info","6c395c55":"test.info","550e5082":"train.head(15)","e10df275":"test.head(10)","b4eae3fe":"#Number of Passengers whose Name is missing\nempty_data = pd.isnull(train.Name).sum()\nprint(empty_data)","9d1667f8":"#Number of Passengers in Train and Test Data whose Cabin is missing\nempty_cabin = pd.isnull(train.Cabin).sum() +  pd.isnull(test.Cabin).sum() \nprint(empty_cabin)","44d1a2f1":"#Empty Embarked Values\ntrain[train[\"Embarked\"].isnull()]","a2dbadd9":"embarked_survive = train.groupby([\"Embarked\",\"Survived\"])[\"PassengerId\"].count()\nprint(embarked_survive)","a4ec7c1f":"#Misising Data of Our Cabin\ntrain[\"Cabin\"].sample(15)","d25660be":"plt.figure(figsize=(25,30))\nsns.countplot(x='Embarked',hue = 'Survived',data = train)\n\nplt.legend(['Survived','Not Survived'],loc = 'upper center',prop = {'size':18})\nplt.title(\"Calculate the Trend of Survival rate\",size= 100,y=1)","05840b4f":"survival_by_gender = train.groupby(\"Sex\").apply(lambda df: sum(df[\"Survived\"] == 1))\nsurvival_by_gender","0e389b71":"plt.figure(figsize = (10,8))\nsns.countplot(x= \"Sex\",hue = 'Survived',data = train)\nplt.title('Survival Trend according to Sex',size=40)","37aaf3b6":"survival_by_class = train.groupby(\"Pclass\")[\"Survived\"].apply(lambda x: {\"Survived\": sum(x == 1), \"Not Survived\": sum(x == 0)})\nsurvival_by_class","16b7f9e1":"plt.figure(figsize=(10,8))\nsns.countplot(x=\"Pclass\",hue = \"Survived\",data = train)\nplt.title(\"Survival trend according to class\")","ef6fb606":"Here we can see that ,The passengers that embarked in port C had more survive rate."}}