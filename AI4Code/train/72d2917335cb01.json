{"cell_type":{"edce0dfc":"code","0d6b3f01":"code","1488ff7c":"code","bd2e44d6":"code","417a3512":"code","c0d69cf3":"code","f141e34c":"code","593987c2":"code","7902a9cf":"code","3ebd336a":"code","7018e608":"code","b45fec0a":"code","907267ec":"code","d4bbe75b":"code","0e5fad72":"code","88cc3458":"code","9cb91003":"code","2be9b72f":"code","aa2a612a":"code","ba393f2c":"code","f6bfb307":"code","0186e4cf":"code","d534f55b":"code","debb9f53":"code","54f2925d":"code","4b3aa566":"code","1d7053cc":"code","88401bd8":"code","cbc5f630":"code","7d469973":"code","2ea8c62c":"code","f36e1c10":"code","48d99ab1":"code","ed5e1f2e":"code","2525b84e":"code","669d28c8":"code","d98c3f19":"code","75fc92e6":"code","a129bc0d":"code","b980c5b2":"code","5012e896":"code","d8e8217a":"code","3cd3e4ba":"code","a8ff889a":"code","e01c4e83":"code","815bd35f":"code","d31c5c76":"code","a2a1cb97":"markdown","ebdc87bf":"markdown","8db2a25e":"markdown","0f943b96":"markdown","169f6fea":"markdown","98a8f2cc":"markdown","61e60281":"markdown","572662ef":"markdown","528886d0":"markdown","75f9ba1c":"markdown","9bd6df43":"markdown","8feca388":"markdown","163319c2":"markdown","8357126b":"markdown","f3cd33f6":"markdown","f3e9789b":"markdown","1a3d7c10":"markdown"},"source":{"edce0dfc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nfrom matplotlib.patches import Polygon\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0d6b3f01":"df = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf","1488ff7c":"df.info()","bd2e44d6":"print(df.columns) # There  are seven feature","417a3512":"df.columns =['Name', 'Author', 'User_Rating', 'Reviews', 'Price', 'Year', 'Genre']\ndf.columns","c0d69cf3":"df.describe()","f141e34c":"genre = df.Genre.unique()\nprint(genre)  # we have two genre. These are Non Ficton and Fiction","593987c2":"df.corr() ","7902a9cf":"plt.figure(figsize=(11,11))\nsns.heatmap(df.corr(), annot = True, linewidths=.8, fmt= '.3f', cmap = \"coolwarm\")\nplt.show()","3ebd336a":"fiction = df[df.Genre == 'Fiction']\nnon_fiction = df[df.Genre == 'Non Fiction']","7018e608":"df.Reviews.plot(kind = 'line', grid = True, label = 'Reviews',linewidth=1,alpha = 0.7, figsize = (7,6))\nplt.legend(loc = 'best')\nplt.ylabel('Reviews')\nplt.show()","b45fec0a":"df.plot(kind = 'scatter', x = 'Price', y = 'Reviews',alpha = 0.5,color = 'y')\nplt.xlabel('Price')              # label = name of label\nplt.ylabel('Reviews')\nplt.title('Price Reviews Scatter Plot')   \nplt.show()","907267ec":"plt.subplot(2,2,1)\nfiction.User_Rating.plot(kind = 'hist', bins = 25,color = 'orange', figsize=(12,12), label = 'Ficton')\nnon_fiction.User_Rating.plot(kind = 'hist', bins = 25,color = 'green', figsize=(12,12), label = 'Non Ficton')\nplt.xlabel('User Rating')\nplt.legend(loc='upper left')\nplt.title('User Rating of Fiction Vs Non Fiction')\n\nplt.subplot(2,2,2)\n\nfiction.Reviews.plot(kind = 'hist', bins = 25,color = 'orange', figsize=(12,12), label = 'Ficton')\nnon_fiction.Reviews.plot(kind = 'hist', bins = 25,color = 'g', figsize=(12,12), label = 'Non Ficton')\nplt.xlabel('Reviews')\nplt.legend(loc='upper right')\nplt.title('Reviews of Fiction Vs Non Fiction')\n\nplt.show()","d4bbe75b":"plt.subplot(2,2,1)\nfiction.Price.plot(kind = 'hist', bins = 75,color = 'orange', figsize=(12,12), label = 'Ficton')\nnon_fiction.Price.plot(kind = 'hist', bins = 75,color = 'g', figsize=(12,12), label = 'Non Ficton')\nplt.xlabel('Price')\nplt.legend(loc='upper right')\nplt.title('Price of Fiction Vs Non Fiction')\n\nplt.subplot(2,2,2)\n\nfiction.Year.plot(kind = 'hist', bins = 50,color = 'orange', figsize=(12,12), label = 'Ficton')\nnon_fiction.Year.plot(kind = 'hist', bins = 50,color = 'g', figsize=(12,12), label = 'Non Ficton')\nplt.xlabel('Year')\nplt.legend(loc='upper left')\nplt.title('Year of Fiction Vs Non Fiction')\nplt.show()","0e5fad72":"year = df.Year.unique()\nplt.figure(figsize=(10,7))\nplt.bar(df.Year,df.Price , color=\"#3265a8\", label = 'Price')\nplt.xlabel('Year')\nplt.ylabel('Price')\nplt.legend(loc='best')\nplt.title('Price - Year')\nplt.show()","88cc3458":"df.Price.mean()","9cb91003":"df[\"price_threshold\"] = [\"high\" if i>df.Price.mean() else \"low\" for i in df.Price]","2be9b72f":"df","aa2a612a":"print(df.Genre.value_counts(dropna = False))","ba393f2c":"print(df.price_threshold.value_counts(dropna =False ))","f6bfb307":"print(df.Year.value_counts(dropna = False))","0186e4cf":"print(df.Author.value_counts(dropna = False))","d534f55b":"df.describe()","debb9f53":"fig,axs = plt.subplots(1,2, figsize = (12,6))\nfig.suptitle('Reviews grouped by genre and price threshold')\n\ndf.boxplot(column = 'Reviews', by = 'Genre', ax = axs[0])\n\ndf.boxplot(column = 'Reviews', by = 'price_threshold', ax = axs[1])\n#plt.tight_layout() \n\n\nplt.show()","54f2925d":"fig, axs = plt.subplots(1,2, figsize = (10,8))\ndf.boxplot(column = 'Price', by = 'Genre', ax = axs[0])\n\ndf.boxplot(column = 'Price', by = 'price_threshold', ax = axs[1])\n\nplt.show()","4b3aa566":"df.describe()","1d7053cc":"tidyData = df.head()\nmelted = pd.melt(frame = tidyData, id_vars= 'Name', value_vars = ['Price', 'Year'] )\nmelted","88401bd8":"melted.pivot(index = 'Name', columns = 'variable', values =  'value')","cbc5f630":"head_tail = pd.concat([df.head(),df.tail()], axis = 0)\nhead_tail","7d469973":"name_author = pd.concat([df.Name,df.Author], axis = 1)\nname_author","2ea8c62c":"df.dtypes","f36e1c10":"df['Genre'] = df['Genre'].astype('category')\ndf.Genre","48d99ab1":"df.dtypes","ed5e1f2e":"df.info() # there is no null ","2525b84e":"df.plot(kind = \"hist\", y = \"Price\", bins = 25, range = (0,25), density = True)\nplt.show()","669d28c8":"df.plot(kind = 'hist', y = \"Price\", bins =25, range= (0,25), density = True, cumulative = True)","d98c3f19":"dt_object = pd.to_datetime(df.Year,format='%Y')\ndf2 =df\ndf2['date'] = dt_object\ndf2 = df2.set_index(\"date\")\ndf2","75fc92e6":"df.Year.sort_values()","a129bc0d":"df2.resample(\"A\").mean()","b980c5b2":"df2.resample(\"A\").sum()","5012e896":"df.set_index([\"Author\",\"Name\"]) # we can see who has written how many books","d8e8217a":"df","3cd3e4ba":"# df.pivot(index = \"price_threshold\", columns = 'Genre', values = 'Reviews') i have a problem","a8ff889a":"df.groupby(\"Year\").mean()","e01c4e83":"df.groupby(\"Year\").max()","815bd35f":"df.groupby(\"Year\").describe()[['Price','User_Rating']]","d31c5c76":"df.info()","a2a1cb97":"## Hierarchical indexing","ebdc87bf":"# This is my first noteebook \n## instructions will be added ","8db2a25e":"# VISUAL EXPLORATORY DATA ANALYSIS","0f943b96":"## Bar Plot","169f6fea":"## Indexing pandas time series","98a8f2cc":"## Groupby","61e60281":"### CONCATENATING DATA","572662ef":"## Correlation map","528886d0":"no clear correlation","75f9ba1c":"## Review of Pandas","9bd6df43":"## Box plot","8feca388":"## Histogram","163319c2":"## Scatter Plot ","8357126b":"### PIVOTING DATA\nReverse of melting \n\nunmelted","f3cd33f6":"## Resampling pandas time series","f3e9789b":"# Cleaning Data\n","1a3d7c10":"## Line Plot"}}