{"cell_type":{"af5c3660":"code","8bfac448":"code","97c8cf1c":"code","9a7eef20":"code","8a53d8fb":"code","3b0fb828":"code","a5bd46c6":"code","2512848a":"code","4a6e2681":"code","dfafc006":"code","a2b982e8":"code","c9e188df":"code","92d37261":"code","3c0ee1e6":"code","6dbd2c73":"code","5448a099":"code","f77a971f":"code","2a7ac0b8":"code","def7895d":"code","3c8307fe":"code","205b9185":"code","be7b049b":"code","5b3cdaa4":"code","4769de05":"code","79c15d97":"code","94b033fd":"code","2930471c":"code","f3317d6b":"code","c80a1e92":"code","1d36fc31":"code","daea3314":"code","f978ca71":"code","b1799313":"code","727e49fb":"markdown","d622f2ab":"markdown","ef2084d2":"markdown","4639f007":"markdown","a80a8e6c":"markdown","787b8576":"markdown","dd96fa39":"markdown","ebc97682":"markdown","79676c00":"markdown","7bc01bca":"markdown","ccef75ec":"markdown"},"source":{"af5c3660":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n","8bfac448":"# Reading the original csv file\ndf = pd.read_csv(\"..\/input\/heart.csv\")","97c8cf1c":"df.columns #View the column headers","9a7eef20":"df.head()  #Peek into the first 5 rows","8a53d8fb":"df.tail()  #Peek into the last 5 rows","3b0fb828":"df.shape   #Look at the Shape of the DataFrame","a5bd46c6":"df.info()  #Look at the data types and look for null values using info()","2512848a":"df.describe() # Descriptive statistics (or) Summary Statistics ","4a6e2681":"# Sorting the DataFrame by Age\nprint(df.sort_values(by=['age']))","dfafc006":"df['sex'] = df['sex'].astype('category') # convert the sex column as categorical using astype() method","a2b982e8":"# Distribution of Age using Histogram\nplt.hist(df.age, bins=10, color='green')\nplt.xlabel('AGE')\nplt.ylabel('Frequency')\nplt.title('Histogram of Age')\nplt.show()","c9e188df":"# Plotting the Rest Blood Pressure against age and comparison between sex\nsns.lmplot(x='age', y='trestbps', data=df, hue='sex', palette='muted')\nplt.show()\nprint('Correlation Coefficient:{}'.format(np.corrcoef(df.age, df.trestbps)[0,1]))","92d37261":"# BeeSwarm plot for classifying common kind of heart defects in males and females\nsns.swarmplot(x='sex', y='thal', data=df, size=7)\nplt.show()","3c0ee1e6":"# Heatmap for itendifying the correlation between different variables\ncorrmat = df.corr()\nf, ax = plt.subplots(figsize=(10,9))\nsns.heatmap(corrmat, square=True, annot = True, annot_kws={'size':10})\nplt.show()","6dbd2c73":"# Regression model between Resting Blood Pressure and Age and effect of blood sugar level of them\nsns.lmplot(x='age', y='trestbps', data=df, hue='fbs')\nplt.show()","5448a099":"# Pair plot between ordinal variables\nsns.set()\ncols1= ['slope','cp', 'thalach', 'target']\nsns.pairplot(df[cols1], size=2)\nplt.show()","f77a971f":"# filtering of DataFrame using Boolean functions\ndf1 = df[(df['sex']==1) & (df['fbs']==1)]\nprint(df1)","2a7ac0b8":"# Usage of groupby function # Multi-leve grouping\nprint(\"Average Cholestrol based on Gender\")\nprint(df.groupby('sex')['chol'].mean())\nprint(\"Average Resting Blood Pressure based on Gender\")\nprint(df.groupby('sex')['trestbps'].mean())","def7895d":"# Grouping using aggregate method\ndf.groupby(['thal','cp']).mean()","3c8307fe":"# Violin Plots to demonstrate the highest heart rate achieved and cholestrol for different chest pain types\nplt.figure(figsize=(10,7))\nplt.subplot(3,1,1)\nsns.violinplot(x='cp', y='thalach', inner='points', data=df)\nplt.xticks\nplt.subplot(3,1,2)\nsns.violinplot(x='cp', y='chol', inner='points', data=df)\nplt.subplot(3,1,3)\nsns.violinplot(x='cp', y='trestbps', inner='points', data=df)\nplt.tight_layout()\nplt.show()","205b9185":"# Beeswarm plot for understanding the defect types for different ages in males and females\nsns.swarmplot(x='sex', y='age', hue='thal', data=df, size=7, palette='deep')\nplt.legend(title='thal', loc='lower center')\nplt.show()","be7b049b":"# Beeswarm Plot to understand the heart failures in males and females with chest pain types\nsns.swarmplot(x='cp', y='trestbps', hue='target', data=df)\nplt.title(\"0: Female , 1: Male\")\nplt.show()","5b3cdaa4":"# Lambda Function to normalize the cholestrol and resting BP between 0 and 1\nnormalize = lambda col_name: df[col_name] \/df[col_name].max()\ndf['trestbps_norm'] = normalize('trestbps')\ndf['chol_norm'] = normalize('chol')","4769de05":"# Joint Plot with Contours for cholestrol levels for age groups\nsns.jointplot(x='age', y='chol_norm', data=df, kind='kde')\nplt.show()","79c15d97":"# Multiple plots using subplot\nplt.figure(figsize=(10,8))\nplt.subplot(3,1,1)\nplt.plot(df['trestbps'])\nplt.subplot(3,1,2)\nplt.plot(df['chol'])\nplt.subplot(3,1,3)\nplt.plot(df['thalach'])\nplt.tight_layout()\nplt.show()","94b033fd":"# Empirical cumulative distribution function to understand the distribution of Resting BP, Cholestrol and Max. HR Ach.\ndef ecdf(data):\n    \"\"\"\n    Function Definition: Empirical cumulative distribution function \n    to understand the distribution of Resting BP, Cholestrol and \n    Max. HR Ach.\n    \n    \"\"\"\n    n=len(data)\n    x=np.sort(data)\n    y=np.arange(1, n+1)\/n\n    return x, y\nx1, y1 = ecdf(df['trestbps'])\nplt.plot(x1, y1, marker='.', linestyle='none')\nplt.xlabel('Resting Blood Pressure')\nplt.ylabel('ECDF')\nplt.title('Empirical Cumulative Distribution Functions')\nplt.margins(0.02)\nplt.show()\nx2, y2 = ecdf(df['chol'])\nplt.plot(x2, y2, marker='.', linestyle='none')\nplt.xlabel('Cholestrol')\nplt.ylabel('ECDF')\nplt.margins(0.02)\nplt.show()\nx3, y3 = ecdf(df['thalach'])\nplt.plot(x3, y3, marker='.', linestyle='none')\nplt.xlabel('Max. HR Achieved')\nplt.ylabel('ECDF')\nplt.margins(0.02)\nplt.show()\nx4, y4 = ecdf(df['oldpeak'])\nplt.plot(x4, y4, marker='.', linestyle='none')\nplt.xlabel('ST depression induced by exercise relative to rest')\nplt.ylabel('ECDF')\nplt.margins(0.02)\nplt.show()","2930471c":"df.isnull().sum()","f3317d6b":"# One Hot encoding of Nominal features\nnom_fet = ['sex', 'cp', 'restecg', 'exang', 'ca', 'thal']\ndf[nom_fet] = df[nom_fet].astype('category')\ndf_nom_fet = df[nom_fet]\ndf_onehot = pd.get_dummies(df_nom_fet, drop_first=False)","c80a1e92":"df.drop(nom_fet, axis=1, inplace=True)","1d36fc31":"df1 = pd.concat([df, df_onehot], axis=1)","daea3314":"cont_fet = ['trestbps', 'chol', 'thalach', 'oldpeak', 'slope']\ndf_cont = df1[cont_fet]\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(df_cont)\nscaled = ss.transform(df_cont)\n\nfor i, col in enumerate(cont_fet):\n    df1[col] = scaled[:,i]","f978ca71":"# Supervised learning ML model using scikit learning module\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nX = df1.drop('target', axis=1).values\ny = df1['target'].values\nknn = KNeighborsClassifier(n_neighbors=10)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)\nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_test)\nprint(\"Test Set Predictions:\\n{}\".format(y_pred))\nprint(\"Score:\", knn.score(X_test, y_test))\n","b1799313":"# Supervised learning ML model using scikit learning module\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\n\nparam_grid = {'n_neighbors':np.arange(1,50)}\nknn = KNeighborsClassifier()\nknn_cv = GridSearchCV(knn, param_grid, cv=5)\nknn_cv.fit(X, y)\nprint(\"Best Params:\", knn_cv.best_params_)\nprint(\"Best score:\", knn_cv.best_score_)\n\n","727e49fb":"This model perform a lot better than the previous model which has a score of just 59%. Though the model without hyperparameter tuning performs better in the test set, the model with hyperparameter tuning using GridSearchCV will out perform the model without tuning when used on unseen data.","d622f2ab":"There is a positive correlation between age and rest blood pressure. The Females tend to have slightly higher chance of high blood pressure than males post the age of 50","ef2084d2":"Data Preprocessing and Data Preparation","4639f007":"Let's Standardize the numeric features with continuous values","a80a8e6c":"Clearly, blood sugar level higher than 120 mg\/dl increases the risk of blood pressure as age increases.","787b8576":"The target has comparitively higher correlation with chest pain and highest heart rate achieved and slope of the ST curve than other variables. ","dd96fa39":"This is my first kernel (Hurray!!) in Kaggle to analyse the causes of Heart disease and build a simple ML model to classify and predict the Heart diseases based on certain features\n\nAttribute Information (Feature Variables): \n1. age \n2. sex \n3. chest pain type (4 values) \n4. resting blood pressure \n5. serum cholestoral in mg\/dl \n6. fasting blood sugar > 120 mg\/dl\n7. resting electrocardiographic results (values 0,1,2)\n8. maximum heart rate achieved \n9. exercise induced angina \n10. oldpeak = ST depression induced by exercise relative to rest \n11. the slope of the peak exercise ST segment \n12. number of major vessels (0-3) colored by flourosopy \n13. thal: 3 = normal; 6 = fixed defect; 7 = reversable defect \n\n14. Target 0 or 1  ----> Target Variable\n\nObjectives:\n1. To predict certain cardiovascular events\n2. Heart disease predominantly occurs in Male or Female\n3. Heart Disease predominantly occurs at which age group\n4. Correlation between \n    a) target & chest pain type\n    b) thal & target\n    c) Gender & Thal\n    d) Age & Thal\n    e) fasting blood sugar & thal\n    f) chol & thal\n    g) chol & tbps","ebc97682":"Visual Exploratory Data Analysis (Visual EDA)","79676c00":"The sample contains more samples from age group 55 to 65 than any other age group","7bc01bca":"Exploratory Data Analysis (EDA)","ccef75ec":"There are no null values"}}