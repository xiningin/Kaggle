{"cell_type":{"32d62f39":"code","a8e04f07":"code","6f2b4065":"code","caf6b6a9":"code","4c62fc26":"code","e1838a98":"code","dd830dae":"code","fc8bb216":"code","1bddf459":"code","78929f64":"code","099706ad":"code","6e57f75c":"code","74771b39":"code","4c6ef7d5":"code","b7dda2ef":"code","8c4f2b87":"code","bd69831f":"code","48aeb6d0":"code","0af695f8":"code","70373f07":"code","9be66b3c":"code","80495764":"code","d14d7272":"code","eab8c007":"code","000611c8":"code","88a8cbf0":"code","b5537ec7":"code","76d819a6":"code","eddd04f9":"code","a33813e0":"code","c6a38d08":"code","c8c5e36d":"code","465bda22":"code","889bd3e8":"code","fbf79d96":"code","b1aadd1d":"code","54deb611":"code","d9d5e009":"code","0d55ef70":"code","c0fb103c":"code","80760021":"code","de15408a":"code","b5ce501a":"code","bcdbe8d0":"code","e388d3ca":"code","37b8a47a":"code","96e4acf4":"markdown","be61b8dd":"markdown","dd5e1dbd":"markdown","32c6d770":"markdown","ca8559da":"markdown","0c8b94e9":"markdown"},"source":{"32d62f39":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8e04f07":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score,precision_score,confusion_matrix","6f2b4065":"df=pd.read_csv('..\/input\/drug-classification\/drug200.csv')","caf6b6a9":"df.info()","4c62fc26":"sns.distplot(df.Age,bins=10)","e1838a98":"df.Sex.unique()","dd830dae":"df.BP.unique()","fc8bb216":"df.Cholesterol.unique()","1bddf459":"df.Drug.unique()","78929f64":"sns.countplot(df.Sex)","099706ad":"sns.countplot(df.Cholesterol)","6e57f75c":"sns.countplot(df.BP)","74771b39":"plt.scatter(df.Na_to_K,range(0,len(df.BP)))","4c6ef7d5":"plt.scatter(df.Age,range(0,len(df.BP)))","b7dda2ef":"df.info()","8c4f2b87":"plt.figure(figsize=(8,8))\nsns.countplot(df.Sex,hue='BP',data=df)","bd69831f":"plt.figure(figsize=(8,8))\nsns.countplot(df.Sex,hue='Cholesterol',data=df)","48aeb6d0":"plt.figure(figsize=(8,8))\nsns.countplot(df.Sex,hue='Drug',data=df)","0af695f8":"sns.scatterplot(df.Na_to_K,df.Age,hue='Sex',data=df)","70373f07":"sns.scatterplot(df.Age,df.Na_to_K,hue='BP',data=df)","9be66b3c":"sns.scatterplot(df.Age,df.Na_to_K,hue='Cholesterol',data=df)","80495764":"sns.scatterplot(df.Age,df.Na_to_K,hue='Drug',data=df)","d14d7272":"sns.boxplot(df.Age)","eab8c007":"sns.boxplot(df.Na_to_K)","000611c8":"def outl(x):\n    sns.boxplot(df[str(x)])\n    iqr=df[str(x)].quantile(0.75)-df[str(x)].quantile(0.25)\n    uiqr=df[str(x)].quantile(0.75) + (1.5*iqr)\n    liqr=df[str(x)].quantile(0.25) - (1.5*iqr)\n    return iqr,uiqr,liqr","88a8cbf0":"outl('Na_to_K')","b5537ec7":"a=df[df['Na_to_K'] > 32.7817].index","76d819a6":"for i in range(0,len(a)):\n    df.loc[a[i],['Na_to_K']] = 32.7817","eddd04f9":"sns.boxplot(df.Na_to_K)","a33813e0":"df=pd.get_dummies(df,drop_first=True)","c6a38d08":"df.columns","c8c5e36d":"x=df.iloc[:,0:6].values\ny=df.iloc[:,6:9].values","465bda22":"train_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.2,random_state=0)","889bd3e8":"train_x.shape","fbf79d96":"test_x.shape","b1aadd1d":"train_y.shape","54deb611":"test_y.shape","d9d5e009":"sc=StandardScaler()\ntrain_x=sc.fit_transform(train_x)\ntest_x=sc.transform(test_x)","0d55ef70":"model=DecisionTreeClassifier()\nmodel.fit(train_x,train_y)\npred_y1=model.predict(test_x)","c0fb103c":"model=RandomForestClassifier()\nmodel.fit(train_x,train_y)\npred_y2=model.predict(test_x)","80760021":"error = []\naccuracy = []\n# Calculating error for K values between 1 and 40\nfor i in range(1,40,2):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(train_x, train_y)\n    pred_i = knn.predict(test_x)\n    error.append(np.mean(pred_i != test_y))\n    accuracy.append(accuracy_score(test_y, pred_i))","de15408a":"plt.figure(figsize=(12, 6))\nplt.plot(range(1,40,2), error, color='red', linestyle='dashed', marker=\n'o',\nmarkerfacecolor='blue', markersize=10)\nplt.title('Error Rate K Value')\nplt.xlabel('K Value')\nplt.ylabel('Mean Error')","b5ce501a":"model=KNeighborsClassifier(n_neighbors=3)\nmodel.fit(train_x,train_y)\npred_y3=model.predict(test_x)","bcdbe8d0":"accuracy_score(pred_y3,test_y)","e388d3ca":"accuracy_score(pred_y2,test_y)","37b8a47a":"accuracy_score(pred_y1,test_y)","96e4acf4":"CHECKING FOR OUTLIERS","be61b8dd":"THERE IS NOT MUCH DIFFERENCE BETWEEN THE NUMBER OF MEN AND WOMEN WITH HIGH BP ","dd5e1dbd":"UNIVARIATE ANALYSIS\n","32c6d770":"THE NUMBER OF MEN WTH HIGH CHOLESTEROL LEVEL IS GREATER THAN NUMBER OF WOMEN WITH HIGH CHOLESTEROL ","ca8559da":"MAXIMUM PEOPLE LIE BETWEEN THE AGE OF 18 TO 70","0c8b94e9":"BIVARIATE ANALYSIS"}}