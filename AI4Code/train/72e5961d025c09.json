{"cell_type":{"146239e1":"code","0be1fa8d":"code","c61c43f4":"code","45890d28":"code","08e4cd4c":"code","423a264c":"code","37072c5e":"code","7af1e4ac":"code","ed7591e0":"code","19bcab9f":"code","1d862c7d":"code","be7d3664":"code","f61958ec":"markdown","b263b619":"markdown","eb5e0d41":"markdown","5a49f241":"markdown","181b328f":"markdown","0badee3e":"markdown","8350d1bc":"markdown","bb81b721":"markdown"},"source":{"146239e1":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0be1fa8d":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","c61c43f4":"df = pd.read_csv(r'\/kaggle\/input\/corona-spread-dataset\/Corona spread data.csv')\ndf.head()","45890d28":"df.shape","08e4cd4c":"df.info()","423a264c":"sns.boxplot(df['conf'])\nplt.show()","37072c5e":"sns.pairplot(df, x_vars=['Temp', 'Humid', 'Pop den'], y_vars='conf', height=4, aspect=1, kind='scatter')\nplt.show()","7af1e4ac":"sns.pairplot(df, x_vars=['BPL', 'PCS H', 'PC I','Lit rate'], y_vars='conf', height=4, aspect=1, kind='scatter')\nplt.show()","ed7591e0":"sns.heatmap(df.corr(), cmap='YlGnBu', annot=True)\nplt.show()","19bcab9f":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\na= df.groupby('Temp').conf.mean().reset_index()\nprint (a) \n\ny= a.conf\nfeatures=['Temp']\nX= a[features]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n\ndependecy_model= RandomForestRegressor(random_state=1)\ndependecy_model.fit(train_X, train_y)\npred= dependecy_model.predict(val_X)\nprint(mean_absolute_error(val_y, pred))\n\nregr= LinearRegression()\nregr.fit(X,y)\ny_pred = regr.predict(X)\n\nplt.plot(X, y_pred)  #The Blue Graph Shows the current trends.\nplt.show()\n\nX_future = np.arange(36, 51)    #The Red Graph Shows the future,i.e. upcoming trends.\nX_future = X_future.reshape(-1, 1)\nfuture_predict = regr.predict(X_future)\n\nplt.plot(X_future, future_predict, 'red')\nplt.show()","1d862c7d":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nb = df.groupby('Humid').conf.mean().reset_index()\nprint (b)\n\ny= b.conf\nfeatures=['Humid']\nX= b[features]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n\ndependecy_model= RandomForestRegressor(random_state=1)\ndependecy_model.fit(train_X, train_y)\npred= dependecy_model.predict(val_X)\nprint(mean_absolute_error(val_y, pred))\n\nregr= LinearRegression()\nregr.fit(X,y)\ny_pred = regr.predict(X)\n\nplt.plot(X, y_pred)   #The Blue Graph Shows the current trends.\nplt.show()\n\nX_future = np.arange(82, 101)    #The Red Graph Shows the future,i.e. upcoming trends.\nX_future = X_future.reshape(-1, 1)\nfuture_predict = regr.predict(X_future)\n\nplt.plot(X_future, future_predict, 'red')\nplt.show()","be7d3664":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nb = df.groupby('PCS H').conf.mean().reset_index()\nprint(b)\n\ny= b.conf\nfeatures=['PCS H']\nX= b[features]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n\ndependecy_model= RandomForestRegressor(random_state=1)\ndependecy_model.fit(train_X, train_y)\npred= dependecy_model.predict(val_X)\nprint(mean_absolute_error(val_y, pred))\n\nregr= LinearRegression()\nregr.fit(X,y)\ny_pred = regr.predict(X)\n\nplt.plot(X, y_pred)   #The Blue Graph Shows the current trends.\nplt.show()\n\nX_future = np.arange(6001, 10001)     #The Red Graph Shows the future,i.e. upcoming trends.\nX_future = X_future.reshape(-1, 1)\nfuture_predict = regr.predict(X_future)\n\nplt.plot(X_future, future_predict, 'red')\nplt.show()","f61958ec":"# **The heatmap, depicting the relation between target and non-target attributes.**","b263b619":"**The purpose of this model is to take in the corona virus spread across al the Indian states, along with a set of respective parameters, such as the temperature, humidity, per capita spending in health, literacy rate, etc. and predict a relation between the spread rate and the aforesaid parameters, while, also producing possible future trends for the same.**","eb5e0d41":"* Graphs depicting relation between Covid Spread i.e. Number of Confirmed cases across India, with the variation of Humidity.","5a49f241":"* Graphs depicting relation between Covid Spread i.e. Number of Confirmed cases across India, with the variation of per Capita Spending in Health.","181b328f":"* Graphs depicting relation between Covid Spread i.e. Number of Confirmed cases across India, with the variation of Temperature.","0badee3e":"# **Importing standard libraries for computation and analysis.**","8350d1bc":"# **Various plots to show the dependencies between target and non-target attributes.**","bb81b721":"# **Taking the dataset csv file as input, by importing it through the filepath.**"}}