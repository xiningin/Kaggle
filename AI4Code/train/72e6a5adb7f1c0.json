{"cell_type":{"037d0dd3":"code","c3196f2e":"code","8a5e3f66":"code","c24c9a39":"code","fb0ee5f0":"code","13689f9f":"code","8a820bf4":"code","7cee0a7a":"code","82fb168a":"code","6c8e825e":"code","fb871a4e":"code","f5cf6f71":"code","767a232c":"code","00c78cc3":"code","826cd442":"code","3e82a0ef":"code","7c96eeea":"code","52a00886":"code","71b2425d":"markdown","f752f489":"markdown","b1b6fc69":"markdown","eb73a90c":"markdown","cf043eb8":"markdown"},"source":{"037d0dd3":"from numpy import mean\nfrom numpy import std\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import OrdinalEncoder\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\nfrom pandas_profiling import ProfileReport\n\nimport warnings\nwarnings.filterwarnings('ignore')","c3196f2e":"train_df = pd.read_csv('..\/input\/30-days-of-ml\/train.csv')\ntest_df = pd.read_csv('..\/input\/30-days-of-ml\/test.csv')\nsubmission_df = pd.read_csv('..\/input\/30-days-of-ml\/sample_submission.csv')","8a5e3f66":"# train  \/ test  shape\n\nprint(train_df.shape)\nprint(test_df.shape)","c24c9a39":"# check for missing values\n\ntrain_df.isnull().sum()","fb0ee5f0":"test_df.isnull().sum()","13689f9f":"cat_col = [col for col in train_df.columns if 'cat' in col]\ncat_col","8a820bf4":"num_col = train_df.select_dtypes(include='number').columns.to_list()\nnum_col","7cee0a7a":"train_df.describe()","82fb168a":"eda_report = ProfileReport(train_df)\neda_report","6c8e825e":"X = train_df.drop(['target'],axis=1)\ny = train_df['target']\nX_test = test_df.copy()\n","fb871a4e":"ordinal_encoder = OrdinalEncoder()\nX[cat_col] = ordinal_encoder.fit_transform(X[cat_col])\nX_test[cat_col] = ordinal_encoder.transform(X_test[cat_col])","f5cf6f71":"X.head()","767a232c":"#train test split\n\nX_train, X_valid, y_train, y_valid = train_test_split(X,y,test_size=0.2,random_state=42)\n","00c78cc3":"# Modelling \n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)","826cd442":"X_train.shape,X_test.shape,y_train.shape,y_valid.shape","3e82a0ef":"prediction_lm = model.predict(X_valid)\nprint(mean_squared_error(y_valid,prediction_lm,squared=False))","7c96eeea":"pred = model.predict(X_test)\n\n# Save the predictions to a CSV file\nsubmission_df['target']=pred\nsubmission_df.to_csv('submission.csv', index=False)","52a00886":"submission_df","71b2425d":"### EDA","f752f489":"### Data Transformation","b1b6fc69":"###  Note : This is a very basic notebook to quickly get started. Shall update rest of techniques with respect to EDA and Model building soon","eb73a90c":"# Build the Model ","cf043eb8":"## \ud83d\udea7\u23f3Work in Progress \ud83d\udea7\u23f3\n\n### Please upvote the notebook if you find it helpful. Thanks for your time \ud83d\ude42\ud83c\udf88"}}