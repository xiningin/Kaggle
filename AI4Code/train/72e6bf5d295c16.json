{"cell_type":{"381df62f":"code","60beed08":"code","25388614":"code","a369400f":"code","fe2b7ff9":"code","cc334554":"code","1f20f063":"code","9fcb3988":"code","8c7370b9":"code","7a9bf953":"code","8905b330":"markdown","7a10923e":"markdown","a5541281":"markdown"},"source":{"381df62f":"from sklearn import datasets \nimport pandas as pd \ndt=datasets.load_wine()\nprint(dt.DESCR)\n# details of wine data","60beed08":"dt2 = pd.DataFrame(dt.data,columns=dt.feature_names)\ndt2[\"target\"] = dt.target\ndt2.head(10)","25388614":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(dt2[dt.feature_names],\n                                               dt.target,test_size=0.2,random_state = 100)\nfrom sklearn.neighbors import KNeighborsClassifier as KNN","a369400f":"for i in range(1,21):\n    cls=KNN(n_neighbors = i)\n    cls.fit(X_train, y_train)\n    print(\"n=\"+str(i)+\" accuracy:\",cls.score(X_test, y_test))","fe2b7ff9":"#Training Set\ny1=[0]*20\nfor i in range(1,21):\n    cls=KNN(n_neighbors = i)\n    cls.fit(X_train, y_train)\n    y1[i-1]=cls.score(X_train, y_train)\n\n#Testing Set\ny2=[0]*20\nfor i in range(1,21):\n    cls=KNN(n_neighbors = i)\n    cls.fit(X_train, y_train)\n    y2[i-1]=cls.score(X_test, y_test)","cc334554":"x = list(range(1,21))\nimport matplotlib.pyplot as plt\nimport numpy as np\nplt.plot(x,y1,label=\"training set\")\nplt.plot(x,y2,label=\"testing set\")\nplt.xlabel(\"n\")\nplt.ylabel(\"accuracy\")\nplt.xticks(np.arange(0,21,1))\nplt.legend()\nplt.show()","1f20f063":"from sklearn import preprocessing\nscaler = preprocessing.StandardScaler()\nscaler.fit(X_train) \n\nX_train2=scaler.transform(X_train)\nX_test2=scaler.transform(X_test)","9fcb3988":"for i in range(1,21):\n    cls=KNN(n_neighbors=i)\n    cls.fit(X_train2,y_train)\n    print(\"n = \"+str(i)+\"accuracy:\"+str(cls.score(X_test2,y_test)))","8c7370b9":"y3=[0]*20\nfor i in range(1,21):\n    cls=KNN(n_neighbors = i)\n    cls.fit(X_train, y_train)\n    y3[i-1]=cls.score(X_test, y_test)\ny4=[0]*20\nfor i in range(1,21):\n    cls=KNN(n_neighbors=i)\n    cls.fit(X_train2,y_train)\n    y4[i-1]=cls.score(X_test2, y_test)","7a9bf953":"x=list(range(1,21))\nimport matplotlib.pyplot as plt\nimport numpy as np\nplt.plot(x,y3,label=\"unstandardized set\")\nplt.plot(x,y4,label=\"standardized set\")\nplt.xlabel(\"n_neighbors\")\nplt.ylabel(\"accuracy\")\nplt.xticks(np.arange(0,21,1))\nplt.legend()\nplt.show()","8905b330":"Obviously, external accuracy is much lower than internal accuracy. This is because that samples are too less. We are going to try to standardize this set of data to enhence the accuracy rate.","7a10923e":"There's highest accuracy when n = 1.","a5541281":"With this diagram, we can see that the accuracy rate is significantly improved."}}