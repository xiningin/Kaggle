{"cell_type":{"a1b25ab7":"code","c7b133da":"code","2b745a2d":"code","22310ec2":"code","1a5ee92a":"code","221e0fe0":"markdown","49f70042":"markdown"},"source":{"a1b25ab7":"#Import libraries\nfrom wordcloud import WordCloud\nfrom IPython.display import Image\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport re\nfrom collections import Counter as cot\nimport warnings\nwarnings.simplefilter('ignore', FutureWarning)\n\n#Lyrics translated in English.\ntext=\"He's a cool guy from Gangnam. Gangnam Style! He's a man's man in Gangnam. Gangnam Style! And she is a kind-hearted and hot woman. I love her. She has class and loves to to enjoy the freedom and having a cup of coffee. I love her. She always looks new when night comes. I love you! She loves to dance all night long. I love you! I\u2019m a cool guy. I'm kind-hearted as you are during the daytime.Yeah, I love coffee as you do. What the differences between us is the fact that men go crazy in the mid of night.I love You. I need you. Let's go crazy.He's a cool guy from Gangnam. Gangnam style! He's a man's man.He's a cool guy from Gangnam. Gangnam style! He's a man's man in Gannam.She is hot. He is hot. She is sexy. I love you. She has class and loves to to enjoy the freedom. I love you. She sometimes wears her hair down. She looks neat. I love you. That makes her a woman's woman. She's smart. I'm a cool guy and know better. But sometimes I know how to turn on and how to build ideas rather than muscles.I'm kinda cool guy. I'm a cool Gannam guy and I know how to act as a cool Gangnam guy. That's Gangnam style. She is hot. She is sexy. Look at the front runner, he is flying. But I know better.I love you. You know I'm a cool Gangnam guy. That's Gangnam Style! I know better. I know how to do it. She's sexy. I love her. I'm sexy too.\"\n#Set an exclusion list for wordcloud.\nexclusion_list = [\"a\",\"the\",\"And\",\"But\",\"she\",\"He\",\"I\",\"you\",\"is\",\"to\"]\n#output a wordcloud image\nwordcloud = WordCloud(background_color=\"white\",collocations = False,stopwords = exclusion_list,width=1000,height=800,prefer_horizontal=True).generate(text)\nwordcloud.to_file(\"wordcloud.png\")\n#Show the wordcloud image\nImage(\"wordcloud.png\")","c7b133da":"#Check frequent words! Let's get started!\nwords = re.split(r'\\s|\\,|\\.|\\(|\\)', text.lower())\nword_list = cot(words)\nlist_a=[]\nlist_b=[]\nfor word, count in word_list.most_common():\n    if len(word) > 6:\n        list_a.append(word)\n        list_b.append(count)\n\nlabel=np.array(list_a)\ny=np.array(list_b)\n\nprint(\"Guess the song title that made a big hit 9 years ago.\")\nplt.pie(y, labels=label,counterclock=False, startangle=90,autopct=\"%1.1f%%\")\nplt.show()","2b745a2d":"import spacy\nnlp = spacy.load(\"en_core_web_sm\")\ndoc = nlp(text)\nprint(\"Noun phrases:\", [chunk.text for chunk in doc.noun_chunks])\nprint(\"------------------------------------------------\")\nprint(\"Verbs:\", [token.lemma_ for token in doc if token.pos_ == \"VERB\"])\nfor ent in doc.ents:\n    print(\"------------------------------------------------\")\n    print(ent.text, ent.start_char, ent.end_char, ent.label_)","22310ec2":"len([chunk.text for chunk in doc.noun_chunks])","1a5ee92a":"len([token.lemma_ for token in doc if token.pos_ == \"VERB\"])","221e0fe0":"**1.Just analyzed a song that made a big hit 9 years ago.**","49f70042":"**2. One of Kaggle buddies let me know a library named \"spacy\". So, let's check it out.**"}}