{"cell_type":{"2185bff5":"code","c0d6fa86":"code","385bcbef":"code","b1e224f8":"code","46dbde6d":"code","b5a518aa":"code","8a823b57":"code","4ae04889":"code","5c13829d":"code","8a07ff1b":"code","d4fa7169":"code","aa1368c6":"code","747891ed":"code","cfff2330":"code","e02eab6b":"code","6f1ecedc":"code","7df8b92c":"code","2b6dcd7c":"code","83d44709":"code","a70b3e75":"markdown","87f63f7c":"markdown","d83aa811":"markdown","09c24ffa":"markdown","e06b13d1":"markdown","b2c6b1f6":"markdown","817f3246":"markdown","78c566b9":"markdown","0c61b682":"markdown","ac9ca332":"markdown"},"source":{"2185bff5":"import tensorflow as tf\nprint(tf.__version__)\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c0d6fa86":"fashion_mnist = tf.keras.datasets.fashion_mnist\n\n((train_images, train_labels), (test_images, test_labels)) = fashion_mnist.load_data()","385bcbef":"class_names = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat',\n               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","b1e224f8":"train_shape = train_images.shape\ntest_shape = test_images.shape\n\nprint(\"Train shape: \", train_shape)\nprint(\"Test shape: \", test_shape)","46dbde6d":"type(train_labels)\nprint(\"Train labels unique: \", np.unique(train_labels, return_counts=True))\nprint(\"Test labels unique: \", np.unique(test_labels, return_counts=True))","b5a518aa":"plt.figure(figsize=(14,7))\nsns.countplot(train_labels)\n#sns.color_palette(\"viridis\", as_cmap=True)\nplt.title(\"Number of digit classes\")","8a823b57":"plt.figure()\nplt.imshow(train_images[0], cmap=plt.cm.binary)\nplt.colorbar()\nplt.grid(False)\nplt.show()","4ae04889":"plt.figure(figsize=(10,10))\nfor i in range(25):\n  plt.subplot(5,5,i+1)\n  plt.xticks([])\n  plt.yticks([])\n  plt.imshow(train_images[i], cmap=plt.cm.binary)\n  plt.xlabel(class_names[train_labels[i]])\nplt.show()","5c13829d":"train_images = train_images.reshape(-1, 28, 28, 1)\ntest_images = test_images.reshape(-1, 28, 28, 1)\n\ntrain_images = train_images.astype('float32') \/ 255.0\ntest_images = test_images.astype('float32') \/ 255.0","8a07ff1b":"from keras.utils import to_categorical\ntrain_labels = to_categorical(train_labels,10)\ntest_labels = to_categorical(test_labels,10)","d4fa7169":"input_shape = (28,28,1)\nmodel = tf.keras.models.Sequential([\n                                 tf.keras.layers.Conv2D(32, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.Conv2D(32, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.BatchNormalization(),\n                                 tf.keras.layers.Dropout(0.25),\n\n                                 tf.keras.layers.Conv2D(64, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.Conv2D(64, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.MaxPooling2D(pool_size=(2,2)),\n                                 tf.keras.layers.Dropout(0.25),\n\n                                 tf.keras.layers.Conv2D(128, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.Conv2D(128, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.BatchNormalization(),\n                                 tf.keras.layers.Dropout(0.25),\n\n                                 tf.keras.layers.Conv2D(256, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.Conv2D(256, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.Conv2D(256, (3,3), padding='same', activation=\"relu\", input_shape=input_shape),\n                                 tf.keras.layers.MaxPooling2D(pool_size=(2,2)),\n\n                                 tf.keras.layers.Flatten(),\n\n                                 tf.keras.layers.Dense(units=512, activation=\"relu\"),\n                                 tf.keras.layers.BatchNormalization(),\n                                 tf.keras.layers.Dropout(0.5),\n\n                                 tf.keras.layers.Dense(units=512, activation=\"relu\"),\n                                 tf.keras.layers.BatchNormalization(),\n                                 tf.keras.layers.Dropout(0.5),\n\n                                 tf.keras.layers.Dense(units=10, activation=\"softmax\")\n])","aa1368c6":"model.summary()","747891ed":"model.compile(loss=\"categorical_crossentropy\",\n              optimizer=\"Adam\",\n              metrics=['accuracy'])","cfff2330":"train_images, val_images, train_labels, val_labels = train_test_split(train_images, train_labels, test_size=0.1, random_state=42)","e02eab6b":"history = model.fit(train_images, \n          train_labels, \n          batch_size=64, \n          epochs=15,\n          validation_data=(val_images, val_labels)\n          )","6f1ecedc":"test_loss, test_acc = model.evaluate(test_images, test_labels)\nprint('Test loss: ', test_loss)\nprint('Test accuracy: ', test_acc)","7df8b92c":"fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(14, 5))\nax1.plot(history.history['loss'], label='Train Loss')\nax1.plot(history.history['val_loss'], label='Val Loss')\nax1.legend()\nax2.plot(history.history['accuracy'], label='Train Accuracy')\nax2.plot(history.history['val_accuracy'], label='Val Accuracy')\nax2.legend()","2b6dcd7c":"predictions = model.predict(test_images)\nprint(np.argmax(np.round(predictions[0])))","83d44709":"plt.imshow(test_images[0].reshape(28, 28), cmap = plt.cm.binary)\nplt.show()","a70b3e75":"* **Preprocessing**","87f63f7c":"* **Data Loading**","d83aa811":"![](https:\/\/github.com\/zalandoresearch\/fashion-mnist\/raw\/master\/doc\/img\/fashion-mnist-sprite.png)","09c24ffa":"**MNIST FASHION RECOGN\u0130ZER**","e06b13d1":"<a href=\"https:\/\/colab.research.google.com\/github\/alicenkbaytop\/DL-Tensorflow-Keras\/blob\/main\/MNIST_Fashion.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","b2c6b1f6":"* **Examples Visualization**","817f3246":"* **Modeling**","78c566b9":"* **Importing Modules**","0c61b682":"* **Evaluating**","ac9ca332":"* **Summary of Model** "}}