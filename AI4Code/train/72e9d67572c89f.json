{"cell_type":{"823d68ca":"code","bbb9a812":"code","1f660362":"code","a08ba9e9":"code","cc843b4b":"code","cd290150":"code","ea98e0db":"code","8f69553d":"code","eca7937e":"code","94865064":"code","7d3c0ff3":"code","5bbcaf16":"code","9f429a3c":"code","ed85678c":"code","8107bbfd":"code","949a3e4a":"code","8c1ae944":"code","2a7ed351":"code","c251f083":"code","a135b7e6":"code","b1aad3d7":"code","18e42376":"code","570687f5":"code","a78ad48f":"markdown","32b0847a":"markdown","b457781d":"markdown","00df4e35":"markdown","68edb113":"markdown","2cf22fc3":"markdown","860985ff":"markdown","75d10fda":"markdown","50365aac":"markdown"},"source":{"823d68ca":"import numpy as np \nimport pandas as pd \nimport math\nfrom sklearn.linear_model import LogisticRegression","bbb9a812":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1f660362":"train = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')","a08ba9e9":"train_time = train['time'].values\ntrain_time_0 = train_time[:50000]","cc843b4b":"for i in range(1,100):\n    train_time_0 = np.hstack([train_time_0, train_time[i*50000:(i+1)*50000]])","cd290150":"train['time'] = train_time_0","ea98e0db":"train_time_0 = train_time[:50000] \n\nfor i in range(1,40):\n    train_time_0 = np.hstack([train_time_0, train_time[i*50000:(i+1)*50000]])\n    \ntest['time'] = train_time_0","8f69553d":"n_groups = 100\ntrain[\"group\"] = 0\nfor i in range(n_groups):\n    ids = np.arange(i*50000, (i+1)*50000)\n    train.loc[ids,\"group\"] = i","eca7937e":"n_groups = 40\ntest[\"group\"] = 0\nfor i in range(n_groups):\n    ids = np.arange(i*50000, (i+1)*50000)\n    test.loc[ids,\"group\"] = i","94865064":"train['signal_2'] = 0\ntest['signal_2'] = 0","7d3c0ff3":"n_groups = 100\nfor i in range(n_groups):\n    sub = train[train.group == i]\n    signals = sub.signal.values\n    imax, imin = math.floor(np.max(signals)), math.ceil(np.min(signals))\n    signals = (signals - np.min(signals))\/(np.max(signals) - np.min(signals))\n    signals = signals*(imax-imin)\n    train.loc[sub.index,\"signal_2\"] = [0,] +list(np.array(signals[:-1]))","5bbcaf16":"n_groups = 40\nfor i in range(n_groups):\n    sub = test[test.group == i]\n    signals = sub.signal.values\n    imax, imin = math.floor(np.max(signals)), math.ceil(np.min(signals))\n    signals = (signals - np.min(signals))\/(np.max(signals) - np.min(signals))\n    signals = signals*(imax-imin)\n    test.loc[sub.index,\"signal_2\"] = [0,] +list(np.array(signals[:-1]))","9f429a3c":"X = train[['signal_2']].values\ny = train['open_channels'].values","ed85678c":"model = LogisticRegression(max_iter=1000)","8107bbfd":"model.fit(X,y)","949a3e4a":"train_preds = model.predict(X)","8c1ae944":"train_preds = np.clip(train_preds, 0, 10)","2a7ed351":"train_preds = train_preds.astype(int)","c251f083":"X_test = test[['signal_2']].values","a135b7e6":"test_preds = model.predict(X_test)\ntest_preds = np.clip(test_preds, 0, 10)\ntest_preds = test_preds.astype(int)\nsubmission['open_channels'] = test_preds","b1aad3d7":"np.set_printoptions(precision=4)","18e42376":"submission['time'] = [format(submission.time.values[x], '.4f') for x in range(2000000)]","570687f5":"submission.to_csv('submission.csv', index=False)","a78ad48f":"# Import Libraries","32b0847a":"# Signal Processing ","b457781d":"# Import train test and Submission file","00df4e35":"# Build Model","68edb113":"Thanks to Bojan for the starter code \n- https:\/\/www.kaggle.com\/tunguz\/simple-ion-ridge-regression-starter","2cf22fc3":"## Process Train Data ","860985ff":"## Process Test Data ","75d10fda":"The following signal processing parts are taken from the following Khoi Nguyen kernel: \n- https:\/\/www.kaggle.com\/suicaokhoailang\/an-embarrassingly-simple-baseline-0-960-lb","50365aac":"# Check files in location"}}