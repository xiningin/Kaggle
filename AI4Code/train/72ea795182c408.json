{"cell_type":{"8a88f731":"code","b674bafb":"code","860c24f4":"code","9dae80a2":"code","9784f3ca":"code","27343ddb":"code","24f87569":"code","ce2a2ae2":"markdown","468ffa63":"markdown","21cb53fd":"markdown","c2e8c98e":"markdown","4198f901":"markdown","5e85a726":"markdown","eb5d32c3":"markdown"},"source":{"8a88f731":"class Solution:\n    def twoSum(self, nums, target):\n        l = []\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    l.append(i)\n                    l.append(j)\n                    return l","b674bafb":"class Solution:\n    def reverse(self, x):\n        if x < 0:\n            x = str(x)[1:][::-1]\n\n            while x[0] == '0':\n                x = x[1:]\n\n            x = 0-int(x)\n\n            if x < -2**31:\n                return 0\n\n            return x\n\n        else:\n            if x <10:\n                return x\n\n            x = str(x)[::-1]\n\n            while x[0] == '0':\n                x = x[1:]\n\n            x = int(x)\n\n            if x > (2**31)-1:\n                return 0\n\n            return x","860c24f4":"class Solution:\n    def isPalindrome(self, x):\n        if x < 0:\n            return False\n\n        reverse = 0\n        original = x\n        \n        while x > 0:\n            reverse = reverse * 10 + x % 10\n            x = x \/\/ 10\n            \n        return reverse == original\n        ","9dae80a2":"class Solution:\n    def romanToInt(self, s):\n        roman = {'M': 1000,'D': 500 ,'C': 100,'L': 50,'X': 10,'V': 5,'I': 1}\n        \n        result = 0\n        for i in range(len(s)-1):\n            if roman[s[i]]<roman[s[i+1]]:\n                result-=roman[s[i]]\n            else:\n                result+=roman[s[i]]\n        else:\n            result+=roman[s[-1]]\n        \n        return result\n        ","9784f3ca":"class Solution:\n    def longestCommonPrefix(self, strs):\n        \n        if len(strs) == 0:\n            return \"\"\n        if len(strs) == 1:\n            return strs[0]\n\n        i = len(strs[0])\n        for j in range(1, len(strs)):\n            i = min(i, len(strs[j]))\n            while i > 0 and strs[0][0:i] != strs[j][0:i]:\n                i -= 1\n            if i == 0:\n                return \"\"\n        return strs[0][0:i]","27343ddb":"class Solution:\n    def isValid(self, s):\n        stack = []\n\n        \n        pairs = {\")\": \"(\",\n                 \"}\": \"{\",\n                 \"]\": \"[\"}\n\n        for c in s:\n            if(c in [\"(\", \"{\", \"[\"]):\n                stack.append(c)\n            elif(len(stack) == 0 or pairs[c] != stack.pop()):\n                return False\n\n        return stack == []\n        ","24f87569":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, l1, l2):\n        if l1 is None and l2 is None:\n            return None\n        elif l1 is None:\n            return l2\n        elif l2 is None:\n            return l1\n\n        if l1.val < l2.val:\n            l1.next = self.mergeTwoLists(l1.next, l2)\n            return l1\n        else:\n            l2.next = self.mergeTwoLists(l1, l2.next)\n            return l2\n        ","ce2a2ae2":"Q2. Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.","468ffa63":"Q5. Write a function to find the longest common prefix string amongst an array of strings.\n\nIf there is no common prefix, return an empty string \"\".","21cb53fd":"Q1. Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nYou can return the answer in any order.","c2e8c98e":"Q4. Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.\n\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\nFor example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\n\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\n\nI can be placed before V (5) and X (10) to make 4 and 9. \nX can be placed before L (50) and C (100) to make 40 and 90. \nC can be placed before D (500) and M (1000) to make 400 and 900.\nGiven a roman numeral, convert it to an integer.","4198f901":"Q6. Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\n\nAn input string is valid if:\n\n        1.Open brackets must be closed by the same type of brackets.\n        2.Open brackets must be closed in the correct order.","5e85a726":"Q7. Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.","eb5d32c3":"Q3. Given an integer x, return true if x is palindrome integer.\n\nAn integer is a palindrome when it reads the same backward as forward. For example, 121 is palindrome while 123 is not."}}