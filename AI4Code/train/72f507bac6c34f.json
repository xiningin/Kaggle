{"cell_type":{"11bdee92":"code","ece6279e":"code","6b08e2c1":"code","342ac99a":"code","aa8c9cf2":"code","d36f3b86":"code","259e5574":"code","fdf862fb":"code","202f1844":"code","673fe2f2":"code","62f58c41":"markdown","3043da23":"markdown","c7015678":"markdown","90e49790":"markdown","82d23ec5":"markdown"},"source":{"11bdee92":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ece6279e":"import pandas as pd\ndfCarPrice = pd.read_csv('\/kaggle\/input\/car-price-prediction\/CarPrice_Assignment.csv')\ndfCarPrice.head()","6b08e2c1":"print(dfCarPrice.columns)\ndfCarPrice.describe()\ndfCarPrice.isnull().sum()  #there is no null data","342ac99a":"#Car id is unnecessary. Drop it\ndfCarPrice.drop(['car_ID'], axis=1, inplace = True)\ndfCarPrice.head()","aa8c9cf2":"import matplotlib.pyplot as plt\nimport seaborn as sns\ncorrelation = dfCarPrice.corr()\nplt.figure(figsize = (20,20))\nsns.heatmap(correlation,annot=True)","d36f3b86":"correlation['price'].sort_values(ascending=False)","259e5574":"dfCarPrice.info()","fdf862fb":"from sklearn.preprocessing import LabelEncoder\nlabelEnc = LabelEncoder()\ndfCateg = dfCarPrice.select_dtypes(include='object')\ndfCateg.head()\n\nfor col in dfCateg.columns:\n    dfCarPrice[col]=labelEnc.fit_transform(dfCarPrice[col])\ndfCarPrice.head()\ndfCarPrice.info()","202f1844":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nX = dfCarPrice.iloc[:,:-1].values #price is the last columns. this line means handle all the columns except the last one\ny = dfCarPrice.iloc[:,-1].values\n\nx_train, x_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state = 42)\nlinReg=LinearRegression()\nlinReg.fit(x_train,y_train)","673fe2f2":"from sklearn import metrics\n\ny_pred = linReg.predict(x_test)\nprint(metrics.r2_score(y_test,y_pred))","62f58c41":"* Not surprisingly correlation between price and engine size, weight of car, horse power, car width, car length bigger than other features. \n* It means ***bigger car, bigger price***","3043da23":"* Let's see correlation between features","c7015678":"For now, we can use linear regression model","90e49790":"that's a good score!","82d23ec5":"As you can see above, there is some categorical data. I have to convert it numerical data. Let's use label encoder! "}}