{"cell_type":{"1b2a2bad":"code","e1b5ca19":"code","b618fc99":"code","f5ad5c6d":"code","ce713e71":"code","8fb5c4e0":"code","0539206b":"code","ceb4f653":"code","afa3b543":"code","ea3c3549":"code","975bc796":"code","ce15f144":"code","c18f44c0":"code","00e21b96":"code","9ee0f4a9":"code","8948017c":"code","c1d68475":"code","0aab295b":"code","2182d772":"code","f137c398":"code","9b31cc9f":"code","2e27d91b":"code","5d2c5f52":"code","e3ffa6e5":"code","0dfa8584":"code","324399c6":"code","5922b3f3":"code","b851aa54":"code","26117b46":"code","8645d776":"code","fb3fd45f":"code","d375002e":"code","37e911f9":"code","64815b48":"code","8843bd96":"code","cea25af4":"markdown"},"source":{"1b2a2bad":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e1b5ca19":"from sklearn.datasets import fetch_openml\nmnist = fetch_openml('mnist_784')\nx = mnist.data\ny = mnist.target","b618fc99":"import matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline","f5ad5c6d":"digit = x[36000]\ndigit_img = digit.reshape(28,28)\n\nplt.imshow(digit_img, cmap=matplotlib.cm.binary, interpolation='nearest')\nplt.axis('off')\nplt.show()","ce713e71":"y[36000]","8fb5c4e0":"# Splitting train and test data\n\nX_train, X_test, y_train, y_test = x[:60000], x[60000:], y[:60000], y[60000:]","0539206b":"# Shuffling dataset\n\nshuffle_index = np.random.permutation(60000)\nX_train, y_train = X_train[shuffle_index], y_train[shuffle_index]","ceb4f653":"# Binary classifier for '9' digit\n\ny_train_9 = (y_train == '9')\ny_test_9 = (y_test == '9')","afa3b543":"np.unique(y_train_9)","ea3c3549":"# SGD Classifier\n\nfrom sklearn.linear_model import SGDClassifier\n\nsgd_clf = SGDClassifier(random_state=42)","975bc796":"sgd_clf.fit(X_train, y_train_9)","ce15f144":"sgd_clf.predict([digit])","c18f44c0":"from sklearn.model_selection import cross_val_score\n\ncross_val_score(sgd_clf, X_train, y_train_9, cv=3, scoring='accuracy')","00e21b96":"from sklearn.model_selection import cross_val_predict\n\ny_train_pred = cross_val_predict(sgd_clf, X_train, y_train_9, cv=3)","9ee0f4a9":"from sklearn.metrics import confusion_matrix\n\nconfusion_matrix(y_train_9, y_train_pred)","8948017c":"from sklearn.metrics import precision_score, recall_score\n\nprecision_score(y_train_9, y_train_pred)","c1d68475":"recall_score(y_train_9, y_train_pred)","0aab295b":"from sklearn.metrics import f1_score\n\nf1_score(y_train_5, y_train_pred)","2182d772":"y_scores = sgd_clf.decision_function([digit])\ny_scores\nthreshold = 0\ny_some_digit_pred = (y_scores >threshold)\ny_some_digit_pred","f137c398":"# How to set threshold for decision function?","9b31cc9f":"# Results for every examples of train set\ny_scores = cross_val_predict(sgd_clf, X_train, y_train_9, cv=3, method='decision_function')\ny_scores","2e27d91b":"from sklearn.metrics import precision_recall_curve\n\nprecisions, recalls, thresholds = precision_recall_curve(y_train_9, y_scores)","5d2c5f52":"def plot_precision_recall_vs_th(precisions, recalls, thresholds):\n    plt.plot(thresholds, precisions[:-1], 'b--', label='Precision')\n    plt.plot(thresholds, recalls[:-1], 'g--', label='Recall')\n    plt.xlabel('Threshold')\n    plt.legend(loc='center left')\n    plt.ylim([0,1])","e3ffa6e5":"plot_precision_recall_vs_th(precisions, recalls, thresholds)\nplt.figure(figsize=(20,10))\nplt.show()","0dfa8584":"plt.plot(recalls[:-1], precisions[:-1])\nplt.xlabel('Recall')\nplt.ylabel('Precision')","324399c6":"import warnings\nwarnings.filterwarnings('always')","5922b3f3":"# Precision - 90% -> threshold = 70 000\n\ny_train_pred_90 = (y_scores > 70000)\nprecision_score(y_train_9, y_train_pred_90, zero_division=1)\nrecall_score(y_train_9, y_train_pred_90, zero_division=1)","b851aa54":"# ROC curve\n\nfrom sklearn.metrics import roc_curve, roc_auc_score\n\nfpr, tpr, thresholds = roc_curve(y_train_9, y_scores)","26117b46":"def plot_roc_curve(fpr, tpr, label=None):\n    plt.plot(fpr, tpr, linewidth=2, label=label)\n    plt.plot([0,1], [0,1], 'k--')\n    plt.axis([0,1,0,1])\n    plt.xlabel('False positive')\n    plt.ylabel('True positive')\n\nplot_roc_curve(fpr, tpr)\nplt.show()","8645d776":"# Area under the curve - AUC score\nroc_auc_score(y_train_9, y_scores)","fb3fd45f":"from sklearn.ensemble import RandomForestClassifier\n\nforest_clf = RandomForestClassifier(random_state=42)\ny_probas_forest = cross_val_predict(forest_clf, X_train, y_train_9, cv=3, method='predict_proba')","d375002e":"y_probas_forest","37e911f9":"y_scores_forest = y_probas_forest[:, 1] #result = probability to positive class\nfpr_forest, tpr_forest, thresholds_forest = roc_curve(y_train_9, y_scores_forest)","64815b48":"plt.plot(fpr, tpr, 'b:', label='SGD')\nplot_roc_curve(fpr_forest, tpr_forest, 'Random Forest')\nplt.legend(loc='lower right')\nplt.show()","8843bd96":"roc_auc_score(y_train_9, y_scores_forest)","cea25af4":"Random Forest Classifier"}}