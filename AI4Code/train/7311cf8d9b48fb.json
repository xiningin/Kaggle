{"cell_type":{"6f39e243":"code","c02c19e7":"code","25719721":"code","6e6ede5e":"code","f19a15c2":"code","4c0f1826":"code","9480e602":"code","86dee8f2":"code","3b014b7e":"code","a878ffa4":"code","5582439f":"code","2b03a5f5":"code","3e909c33":"code","6f08af01":"code","b1c2cdd1":"code","ac24dde2":"markdown","5aa05ebd":"markdown","61a7602a":"markdown","c778ec90":"markdown","5c546216":"markdown","8a6a8e92":"markdown","903ceb8c":"markdown","27f3e2c1":"markdown","58c3c97a":"markdown","eb8d8d23":"markdown","e3729a20":"markdown","86e6d794":"markdown","b881bf6b":"markdown"},"source":{"6f39e243":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom scipy.stats import spearmanr","c02c19e7":"season_2020 = pd.read_excel('\/kaggle\/input\/nba-bubble-games-comparison\/2020 non bubble.xlsx')\nbubble_2020 = pd.read_excel('\/kaggle\/input\/nba-bubble-games-comparison\/2020 bubble games.xlsx')\nbubble_2020.columns = [str(col) + '_b' for col in bubble_2020.columns]\nseason_2020.columns= season_2020.columns.str.lower()\nbubble_2020.columns= bubble_2020.columns.str.lower()\n\nseason_2019 = pd.read_excel('\/kaggle\/input\/nba-bubble-games-comparison\/2019-regular-season.xlsx')\nbubble_2019 = pd.read_excel('\/kaggle\/input\/nba-bubble-games-comparison\/2019-playoffs.xlsx')\nbubble_2019.columns = [str(col) + '_b' for col in bubble_2019.columns]\nseason_2019.columns= season_2019.columns.str.lower()\nbubble_2019.columns= bubble_2019.columns.str.lower()\n\nseason_2018 = pd.read_excel('\/kaggle\/input\/nba-bubble-games-comparison\/2018-regular-season.xlsx')\nbubble_2018 = pd.read_excel('\/kaggle\/input\/nba-bubble-games-comparison\/2018-playoffs.xlsx')\nbubble_2018.columns = [str(col) + '_b' for col in bubble_2018.columns]\nseason_2018.columns= season_2018.columns.str.lower()\nbubble_2018.columns= bubble_2018.columns.str.lower()","25719721":"season_2020.head()","6e6ede5e":"bubble_2020.head()","f19a15c2":"df_2020 = season_2020.merge(bubble_2020, left_on='player', right_on='player_b')\ndf_2020.drop(['player_b', 'team_b', 'age_b'], axis=1, inplace=True)\n\n\ndf_2019 = season_2019.merge(bubble_2019, left_on='player', right_on='player_b')\ndf_2019.drop(['player_b', 'team_b', 'age_b'], axis=1, inplace=True)\n\ndf_2018 = season_2018.merge(bubble_2018, left_on='player', right_on='player_b')\ndf_2018.drop(['player_b', 'team_b', 'age_b'], axis=1, inplace=True)","4c0f1826":"df_2020['min_change'] = np.abs(1- df_2020['min'].divide(df_2020['min_b']))\ndf_2019['min_change'] = np.abs(1- df_2019['min'].divide(df_2019['min_b']))\ndf_2018['min_change'] = np.abs(1- df_2018['min'].divide(df_2018['min_b']))","9480e602":"metrics=['pts', 'fg%', '3p%', 'ft%','oreb', 'dreb', 'reb', 'ast', 'stl', 'blk']","86dee8f2":"for metric in metrics:\n    df_2020[metric + '_change'] = 1-df_2020[metric].divide(df_2020[metric + '_b'])\n    df_2019[metric + '_change'] = 1-df_2019[metric].divide(df_2019[metric + '_b'])\n    df_2018[metric + '_change'] = 1-df_2018[metric].divide(df_2018[metric + '_b'])\n    \ndf_2020 = df_2020.replace([np.inf, -np.inf], np.nan)\ndf_2020.dropna(inplace=True)\n\ndf_2019 = df_2019.replace([np.inf, -np.inf], np.nan)\ndf_2019.dropna(inplace=True)\n\ndf_2018 = df_2018.replace([np.inf, -np.inf], np.nan)\ndf_2018.dropna(inplace=True)","3b014b7e":"metrics_change = [s + '_change' for s in metrics]\nseasons = {2020: df_2020, 2019: df_2019, 2018: df_2018}\ndf_dict = dict()\ndf_output = pd.DataFrame(columns = ['season', 'metric', '\u03c1', 'p-value', 'significant_decrese'])\n\nfor key in seasons.keys():\n    correlation = list()\n    df_tmp = seasons[key]\n    column_1 = df_tmp[\"age\"].values\n    for metric in metrics_change:\n        column_2 = df_tmp[metric].values\n        \n        r,p = spearmanr(column_1, column_2)\n        if r < 0 and p <= 0.05:\n            tmp_list = [key, metric[:-7], r, p, True]\n        else:\n            tmp_list = [key, metric[:-7], r, p, False]\n        correlation.append(tmp_list)\n    df_dict[key] = pd.DataFrame(data = correlation, columns = ['season', 'metric', '\u03c1', 'p-value', 'significant_decrese'])","a878ffa4":"df_dict[2020].sort_values(by=['\u03c1']).reset_index(drop=True)","5582439f":"sns.pairplot(df_2020, y_vars=\"age\", x_vars=[s + '_change' for s in metrics], kind=\"reg\")","2b03a5f5":"df_dict[2019].sort_values(by=['\u03c1']).reset_index(drop=True)","3e909c33":"sns.pairplot(df_2019, y_vars=\"age\", x_vars=[s + '_change' for s in metrics], kind=\"reg\")","6f08af01":"df_dict[2018].sort_values(by=['\u03c1']).reset_index(drop=True)","b1c2cdd1":"sns.pairplot(df_2018, y_vars=\"age\", x_vars=[s + '_change' for s in metrics], kind=\"reg\")","ac24dde2":"# The effect of the NBA bubble on older players\nThis notebook outlines a simple correlation analysis of the effect the NBA bubble had on players based on age. The hypothesis is that family men had a harder time coping with the isolation from family in these trying times. Based on the assumption that older players are more likely to have established a family different metric changes are compared with age to see if there's negative linear correlation to be found between the change in performance and age. For control the variation in performance between playoff and non-playoff games for other seasons is treated in the same manner.","5aa05ebd":"Example of the structure of the data","61a7602a":"### Data is processed","c778ec90":"Season 2017-2018:","5c546216":"### Results","8a6a8e92":"Now these results indicate that older players in general dropped in performance in the NBA bubble. However as one of the fundamental concepts in statistics is that correlation != causation. Therefore we must keep in mind that it does not mean that being away from family during these difficult times had this effect on the players. It's also possible that older players simply had difficulty getting in shape in the limited time they had before the season resumed in the bubble. Keep in mind that the drop in performance seen here can also be gauged by the drop in minutes played but in a team sport like basketball, drop in performance usually leads to a drop in minutes where other players replace the playing time usually allocated to the other player.","903ceb8c":"### Data is imported\nData is fetched from https:\/\/www.nba.com\/stats\/players\/traditional\/?sort=PTS&dir=-1","27f3e2c1":"Any feedback on this project or ideas for further analysis on NBA data is welcomed!","58c3c97a":"Season 2019-2020:","eb8d8d23":"The Spearman Rank correlation and its significance between player age and each metric is computed for each season","e3729a20":"Changes for different metrics are computed and bad values treated","86e6d794":"Season 2018-2019:","b881bf6b":"### Calculating correlations"}}