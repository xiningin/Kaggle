{"cell_type":{"56f369a2":"code","b2fb7c56":"code","7acfd7ac":"code","5f2633c5":"code","3a2b8e93":"code","2b218b45":"code","88d9addf":"code","e7791a5e":"code","a3cf7478":"code","d071a63a":"code","2afb0313":"code","70309c00":"code","e64c1945":"code","c3e4a4cc":"code","1fa791a4":"code","d14314dc":"code","a7f80d47":"code","e4c4ca60":"markdown","eaec7117":"markdown","a097ceaf":"markdown","9c812370":"markdown","7aba8da0":"markdown","4cc0d6fa":"markdown","c18662ac":"markdown","cb07d1ed":"markdown","6948f430":"markdown","5854174d":"markdown","9f430f8b":"markdown","03b1c55f":"markdown"},"source":{"56f369a2":"import os\n\ndef list_all_files_in(dirpath):\n    for dirname, _, filenames in os.walk(dirpath):\n        for filename in filenames:\n            print(os.path.join(dirname, filename))\n\nlist_all_files_in('..\/input')","b2fb7c56":"# Dataframes\nimport pandas as pd\n\n# Linear algebra\nimport numpy as np\n\n# Implicit Feedback Recommendation\nimport implicit\n\n# Sparse matrix\nfrom scipy import sparse\n\n# Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Displaying stuff\nfrom IPython.display import display\n\n# ZIP I\/O\nimport zipfile\n\n# Paths\nfrom pathlib import Path\n\n# Timing & Timestamps\nimport time\nimport datetime\n\n# Serialize Python objects\nimport pickle\n\n# Iteration\nimport itertools\n\n# Progress bar\nfrom tqdm.notebook import tqdm\ntqdm.pandas()\n\n# Disable warnings\nimport warnings; warnings.simplefilter('ignore')\n\ncolor = sns.color_palette()\nsns.set_style('white')","7acfd7ac":"# User Master\ndf_user_list = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/user_list_translated.csv')\n\n# Coupon Master\ndf_coupon_list_train = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/coupon_list_train_translated.csv')\ndf_coupon_list_test = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/coupon_list_test_translated.csv')\n\n# Coupon Listing Area\ndf_coupon_area_train = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/coupon_area_train_translated.csv')\ndf_coupon_area_test = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/coupon_area_test_translated.csv')\n\n# Purchase Logs\ndf_coupon_detail_train = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/coupon_detail_train_translated.csv')\n\n# View Logs\ndf_coupon_visit_train = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/coupon_visit_train_translated.csv')\n\n# # Unimportant\n# df_prefecture_locations = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/prefecture_locations_translated.csv')\n# df_submission = pd.read_csv('..\/input\/coupon-purchase-prediction-translated\/sample_submission.csv')","5f2633c5":"def empty_field_count(df_name, df):\n    print(f'{df_name} empty field count')\n    print(df.isna().sum())\n    print('')","3a2b8e93":"empty_field_count('df_coupon_list_train', df_coupon_list_train)\nempty_field_count('df_coupon_list_test', df_coupon_list_test)\n\nempty_field_count('df_coupon_area_train', df_coupon_area_train)\nempty_field_count('df_coupon_area_test', df_coupon_area_test)\n\nempty_field_count('df_coupon_detail_train', df_coupon_detail_train)\nempty_field_count('df_coupon_visit_train', df_coupon_visit_train)\n\nempty_field_count('df_user_list', df_user_list)","2b218b45":"# coupon_list_train\ncoupon_list_ts_cols = ['DISPFROM', 'DISPEND', 'VALIDFROM', 'VALIDEND']\n\nfor column in coupon_list_ts_cols:\n    df_coupon_list_train[column] = pd.to_datetime(df_coupon_list_train[column])\n    df_coupon_list_test[column] = pd.to_datetime(df_coupon_list_test[column])\n\ndf_coupon_visit_train['I_DATE'] = pd.to_datetime(df_coupon_visit_train['I_DATE'])\n\ndf_user_list['REG_DATE'] = pd.to_datetime(df_user_list['REG_DATE'])\ndf_user_list['WITHDRAW_DATE'] = pd.to_datetime(df_user_list['WITHDRAW_DATE'])","88d9addf":"# df_coupon_visit_train.rename(columns={'VIEW_COUPON_ID_hash':'COUPON_ID_hash'}, inplace=True)\n# df_coupon_list_train.rename(columns={'large_area_name':'LARGE_AREA_NAME', 'ken_name':'PREF_NAME', 'small_area_name':'SMALL_AREA_NAME'},inplace=True)\n# df_coupon_list_test.rename(columns={'large_area_name':'LARGE_AREA_NAME', 'ken_name':'PREF_NAME', 'small_area_name':'SMALL_AREA_NAME'},inplace=True)","e7791a5e":"# Impute user prefecture with mode\n# df_user_list['PREF_NAME'].fillna(df_user_list['PREF_NAME'].value_counts().index[0], inplace=True)\n# df_coupon_list_train.fillna(1, inplace=True)\n# df_coupon_list_test.fillna(1, inplace=True)\n\n# coupon_fillnat_cols = [('VALIDFROM', 'DISPFROM'), ('VALIDEND', 'DISPEND'), ('VALIDPERIOD', 'DISPPERIOD')]\n\n# for col1, col2 in coupon_fillnat_cols:\n#     df_coupon_list_train[col1].fillna(df_coupon_list_train[col2], inplace=True)\n#     df_coupon_list_test[col1].fillna(df_coupon_list_test[col2], inplace=True)\n\n# df_user_list['WITHDRAW_DATE'].fillna(pd.Timestamp.max, inplace=True)","a3cf7478":"plt.figure(figsize=(16, 9))\ncoupons_by_genre = df_coupon_list_train['GENRE_NAME'].value_counts().reset_index(name='count').rename(columns={'index': 'GENRE_NAME'})\nsns.barplot(x='GENRE_NAME', y='count', data=coupons_by_genre)\nplt.title('Purchased coupons by genre')\nplt.xticks(rotation=90)\nplt.show()\n# df_coupon_list_train['GENRE_NAME'].value_counts().plot(kind='bar')","d071a63a":"plt.figure(figsize=(16, 9))\ncoupons_by_area = df_coupon_list_train['small_area_name'].value_counts().reset_index(name='count').rename(columns={'index': 'small_area_name'})\nsns.barplot(x='small_area_name', y='count', data=coupons_by_area)\nplt.title('Purchased coupons by shop area')\nplt.xticks(rotation=90)\nplt.show()","2afb0313":"plt.figure(figsize=(16, 9))\nsns.distplot(a=df_coupon_list_train['DISCOUNT_PRICE'], kde=True)\nplt.title('Coupon distribution by discount rate (train)')\nplt.show()","70309c00":"plt.figure(figsize=(16, 9))\nsns.distplot(a=df_coupon_list_test['DISCOUNT_PRICE'], kde=True)\nplt.title('Coupon distribution by discount rate (test)')\nplt.show()","e64c1945":"plt.figure(figsize=(16, 9))\nsns.barplot(x=df_user_list['PREF_NAME'].value_counts().index, y=df_user_list['PREF_NAME'].value_counts().values)\nplt.title('Users by prefecture')\nplt.xticks(rotation=90)\nplt.show()","c3e4a4cc":"plt.figure(figsize=(16, 9))\ncoupon_list_train = df_coupon_list_train.set_index('COUPON_ID_hash')\nsns.boxplot(y='GENRE_NAME', x='PRICE_RATE', data=coupon_list_train)\nplt.title('Price rate by genre')\nplt.show()","1fa791a4":"coupon_visit_train = pd.merge(df_coupon_visit_train, df_user_list, how='left', on='USER_ID_hash').rename(columns={'VIEW_COUPON_ID_hash': 'COUPON_ID_hash'})\ncoupon_visit_train = coupon_visit_train.join(coupon_list_train, on='COUPON_ID_hash', rsuffix='_coupon')\n\nplt.figure(figsize=(16, 9))\nsns.factorplot(x='AGE', y='GENRE_NAME', hue='SEX_ID', kind='violin', data=coupon_visit_train[coupon_visit_train.PURCHASE_FLG==1], orient='h', size=8, scale='count', split=True, cut=0)\nplt.title('Age distribution by genre name and gender')\nplt.show()","d14314dc":"date_indexed_visit = coupon_visit_train.set_index('I_DATE')","a7f80d47":"fig, ax1 = plt.subplots(figsize=(16, 9))\nweekly_purchases = date_indexed_visit.PURCHASE_FLG.resample('W').sum().rename('total').reset_index()\nax1 = sns.lineplot(data=weekly_purchases, x='I_DATE', y='total')\nax2 = ax1.twinx()\nweekly_views = date_indexed_visit.PURCHASE_FLG.resample('W').size().reset_index(name='count')\nax2 = sns.lineplot(data=weekly_views, x='I_DATE', y='count', color='orange')\nplt.title(\"Weekly purchases vs views\")\nplt.show()","e4c4ca60":"# Purchased coupons by genre","eaec7117":"# Coupon distribution by discount rate","a097ceaf":"# Purchased coupons by shop area","9c812370":"## Column renaming","7aba8da0":"## fillna","4cc0d6fa":"# Imports","c18662ac":"## Convert timestamps to datetime","cb07d1ed":"# Price rate by Genre","6948f430":"# Read CSV","5854174d":"# Users by region","9f430f8b":"# Weekly purchases vs views","03b1c55f":"# Age distribution by genre name and gender"}}