{"cell_type":{"476563e4":"code","63824286":"code","6d76425e":"code","af6265ca":"code","b63cf505":"code","46b3c157":"code","b2cebfad":"code","495f71b9":"code","5c63e577":"code","d32cbff6":"code","a8afca68":"code","35e2ea1f":"code","ee8ece6d":"code","bb849660":"code","5aa96bc1":"code","e28b158f":"code","73c2d17c":"code","d346fe17":"code","6abe0e5b":"code","9839b47b":"code","9f6e7072":"markdown","3d254e84":"markdown","b5f5ee4c":"markdown","45e8fb24":"markdown","e322e9b3":"markdown","21ff94ef":"markdown","44c06cb5":"markdown","31ccb5a5":"markdown","1eeac8dc":"markdown","79fc2381":"markdown","43dbafd9":"markdown","b4ed2eea":"markdown","202db441":"markdown","4fe667b4":"markdown","74306c6a":"markdown","e77d456d":"markdown","03858c2e":"markdown","24e6b71e":"markdown"},"source":{"476563e4":"import sys\nimport random\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf \nfrom tensorflow import keras\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom matplotlib import style \nstyle.use('fivethirtyeight')\nimport pandas as pd \nimport numpy as np \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nss= StandardScaler()","63824286":"train_df = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/train.csv')\ntest_df = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/test.csv')\nsample_df = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/sample_submission.csv')","6d76425e":"train_df.head()","af6265ca":"train_df.describe()","b63cf505":"train_df.isna().count()","46b3c157":"def correllogram(df):\n    fig  = plt.figure(figsize=(10,8),dpi=80)\n    cols = df.columns\n    sns.heatmap(df.corr(),xticklabels=cols,yticklabels=cols,\n                cmap='RdYlGn',center=0,annot=True)\n    \n    plt.show()\ncorrellogram(train_df)","b2cebfad":"def pairplots(df):\n#     fig = plt.figure(figsize=(10,8))\n    cols = ['Age','Region_Code','Annual_Premium','Policy_Sales_Channel','Response']\n    sns.pairplot(df[cols],kind='scatter',height=2.5)\n    plt.tight_layout()\n    plt.show()\npairplots(train_df)","495f71b9":"def density_plot(df):\n    plt.figure(figsize=(10,4))\n#     sns.kdeplot(df.loc[df['cyl'] == 4, \"cty\"], shade=True, color=\"g\", label=\"Cyl=4\", alpha=.7)\n    sns.kdeplot(df.loc[df['Annual_Premium']>25000.0,'Annual_Premium'],shade=True, color=\"g\", label=\"premium>25000\", alpha=.7)\n    sns.kdeplot(df.loc[df['Annual_Premium']>50000.0,'Annual_Premium'],shade=True, color=\"r\", label=\"premium>50000\", alpha=.7)\n    sns.kdeplot(df.loc[df['Annual_Premium']>75000.0,'Annual_Premium'],shade=True, color=\"b\", label=\"premium>75000\", alpha=.7)\n    sns.kdeplot(df.loc[df['Annual_Premium']>100000.0,'Annual_Premium'],shade=True, color=\"y\", label=\"premium>100000\", alpha=.7)\n    plt.show()\n    \n# \ndensity_plot(train_df)","5c63e577":"def bar_graph(df):\n    plt.figure(figsize=(12,6))\n    df['age_cut'] = pd.cut(df['Age'],bins=10)\n    y= df.groupby(['age_cut']).count()\n    x = [i for i in range(10)]\n    labels = [y.index[i] for i in range(len(y.index))]\n    plt.bar(x,y['Gender'].values)\n    plt.xlabel(\"Age Group\",fontsize=12)\n    plt.ylabel('Count of Age Group',fontsize=12)\n    plt.xticks(x,labels,fontsize=12,rotation=45)\n    plt.show()\n    \nbar_graph(train_df)","d32cbff6":"def box_plots(df):\n    style.use('seaborn')\n    sns.boxplot(x='age_cut',y='Annual_Premium',data=df,notch=False)\n    plt.xticks(rotation=45)\n    plt.figure(figsize=(10,6))\nbox_plots(train_df)","a8afca68":"def violin_plots(df):\n    plt.figure(figsize=(10,8))\n    sns.violinplot(x='age_cut',y='Annual_Premium',data=df,scale='width',inner='quartile')\n    plt.show()\nviolin_plots(train_df)","35e2ea1f":"def pie_chart(df):\n    style.use('ggplot')\n    fig,axes= plt.subplots(1,2)\n    labels= train_df.groupby(['Gender']).sum()\n    axes[0].pie(labels['Annual_Premium'].values,labels=['Male','Female'])\n    axes[1].bar([1],labels['Response'][0])\n    axes[1].bar([2],labels['Response'][1])\n    axes[1].legend(['Female','Male'])\n    axes[0].set_xlabel('Annual_Premium_Distribution')\n    axes[1].set_xlabel('Respone_across_Gender')\n    plt.show()\npie_chart(train_df)","ee8ece6d":"def simple_plot(df):\n    y =df.groupby(['age_cut']).mean()\n    x =[x for x in range(len(df.groupby(['age_cut'])))]\n    plt.plot(x,y['Annual_Premium'].values)\n    plt.xticks(x,y.index,rotation=45)\n    plt.xlabel('Age_Group')\n    plt.ylabel(['Mean_Annual_Premium'])\n    plt.show()\nsimple_plot(train_df)","bb849660":"def double_bar_graph(df):\n    fig = plt.figure(figsize=(12,6))\n    ax = fig.add_axes([0,0,1,1])\n    \n    y = df.groupby(['age_cut']).mean()\n    x = np.arange(len(y))\n    ax.bar(x+0.0,y['Previously_Insured'].values,color='red',width=0.25)\n    ax.bar(x+0.25,y['Response'].values,color='g',width=0.25)\n    plt.xlabel(\"Previously_Insured\")\n    plt.xticks(x,y.index)\n    plt.ylabel(\"Response\")\n    plt.show()\ndouble_bar_graph(train_df)","5aa96bc1":"train_df = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/train.csv')\nle =LabelEncoder()\nss =StandardScaler()","e28b158f":"def data_cleansing(df):\n    df.drop(['id'],1,inplace=True)\n    vehicle_age = {'< 1 Year': 0,'1-2 Year': 1,'> 2 Years': 2}\n    df['Vehicle_Age'] = df['Vehicle_Age'].map(vehicle_age)\n    df['Gender'] =  le.fit_transform(df['Gender'])\n    df['Vehicle_Damage'] = le.fit_transform(df['Vehicle_Damage'])\n    return df\ntrain_df =data_cleansing(train_df)","73c2d17c":"X,y = train_df.drop(['Response'],1),train_df['Response']\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)","d346fe17":"X_train = ss.fit_transform(X_train)\nX_test = ss.fit_transform(X_test)","6abe0e5b":"LR  = LogisticRegression()\nLR.fit(X_train,y_train)\nscore= LR.score(X_test,y_test)\nprint(score)","9839b47b":"predictions = LR.predict(X_test)\ncm = metrics.confusion_matrix(y_test, predictions)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Accuracy Score: {0}'.format(score)\nplt.title(all_sample_title, size = 15);","9f6e7072":"<a id=\"8\"><\/a>\n<font color=\"gray\" size=+1.0><b>8. Simple_plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","3d254e84":"<div> <h1> <span style=\"color:Gray\"> Vehicle Insurance Predictions \ud83d\udcca\ud83d\ude97\ud83d\udcc9<\/span><\/h1><\/div>","b5f5ee4c":"<div> <h1> <span style='color:brown'> Thank you!!! <\/span> <\/h1> <\/div>","45e8fb24":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Menu<\/h3>\n\n  \n<font color=\"blue\" size=+1><b>Plots<\/b><\/font>\n* [1. Correllogram](#1)\n* [2. Pair Plots](#2)\n* [3. Density plots](#3)\n* [4. Bar graph](#4)\n* [5. Box plots](#5)\n* [6. Violin plots](#6)\n* [7. Pie chart](#7)\n* [8. Simple plots](#8)\n* [9,Double bar  graph](#9)\n\n<font color=\"red\" size=+1><b>ML models<\/b><\/font>\n* [10. Logistic_Regression](#10)\n","e322e9b3":"<a id=\"1\"><\/a>\n<font color=\"gray\" size=+1.0><b>1.Correllelogram<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","21ff94ef":"# data visualization","44c06cb5":"<a id=\"3\"><\/a>\n<font color=\"gray\" size=+1.0><b>3. Density_plots<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","31ccb5a5":"<a id=\"5\"><\/a>\n<font color=\"gray\" size=+1.0><b>5. Box_Plots<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","1eeac8dc":"<a id=\"6\"><\/a>\n<font color=\"gray\" size=+1.0><b>6. Violin Plots\n    <\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","79fc2381":"<a id=\"7\"><\/a>\n<font color=\"gray\" size=+1.0><b>7. Pie_chart<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","43dbafd9":"<a id=\"10\"><\/a>\n<font color=\"gray\" size=+1.0><b>10. Logistic_regression<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","b4ed2eea":"<a id=\"9\"><\/a>\n<font color=\"gray\" size=+1.0><b>9. double_bar_graph<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","202db441":"<a id=\"2\"><\/a>\n<font color=\"gray\" size=+1.0><b>2. Pair_plots<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","4fe667b4":"<div> <h1> <span style=\"color:brown\"> Please give an upvote if you liked the notebook\ud83d\ude4c<\/span><\/h1><\/div>","74306c6a":"<a id=\"4\"><\/a>\n<font color=\"gray\" size=+1.0><b>4. Bar-Graph<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","e77d456d":"# Data Prediction","03858c2e":"# Data_cleansing","24e6b71e":"![5758c6_14a8fd304c2a4ad1831ff6259a352424_mv2.webp](attachment:5758c6_14a8fd304c2a4ad1831ff6259a352424_mv2.webp)"}}