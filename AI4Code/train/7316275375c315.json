{"cell_type":{"137e72b7":"code","2e220bb0":"code","04006f42":"code","d5acf8f0":"code","7c02ffbc":"code","8f0d4b29":"code","33d9d987":"code","411fc3c0":"code","b7c05d14":"code","090072e2":"code","fb4f6756":"code","6b98b4f3":"code","6e53b1c5":"code","cf366dcc":"code","e6b0b06f":"code","3b9c4edb":"code","c81ab65a":"code","7735f606":"code","17bbf882":"code","262ca37f":"code","fb222999":"code","e7d65f69":"code","26e3237f":"code","c314e60e":"code","350f44ea":"code","ed6a1359":"code","232f8af5":"code","d4e6326d":"code","22373557":"code","f4c5503e":"code","949597d5":"code","5e35d5aa":"code","04c84242":"code","c59c1d9e":"code","87c6d0bb":"code","0698f435":"code","e15fdf31":"code","711ab13f":"markdown","45ab0fe2":"markdown","14ad0060":"markdown","af0da1b6":"markdown","e66dd6df":"markdown","3eec351b":"markdown","b97989c6":"markdown"},"source":{"137e72b7":"# conventional way to import pandas\nimport pandas as pd\n\n# allow plots to appear in the notebook\n%matplotlib inline","2e220bb0":"# read_csv is used to read a comma separated file.\ndf_ufo = pd.read_csv('..\/input\/ufo-sightings\/ufo.csv')","04006f42":"type(df_ufo)","d5acf8f0":"# examine the first 5 rows\ndf_ufo.head()","7c02ffbc":"df_ufo.info()","8f0d4b29":"# examine the column names\ndf_ufo.columns","33d9d987":"# rename two of the columns by using the 'rename' method\ndf_ufo.rename(columns={'Colors Reported':'Colors_Reported', 'Shape Reported':'Shape_Reported'}, inplace=True)\ndf_ufo.columns","411fc3c0":"# select the 'City' Series using bracket notation\n# df_ufo['City']\n\n# or equivalently, use dot notation\ndf_ufo.City\n# type(ufo.City)","b7c05d14":"# create a new 'Location' Series (must use bracket notation to define the Series name)\ndf_ufo['Location'] = df_ufo.City + ', ' + df_ufo.State","090072e2":"df_ufo.head()","fb4f6756":"df_ufo.Location","6b98b4f3":"# remove a single column (axis=1 refers to columns)\ndf_ufo.drop('Colors_Reported', axis=1, inplace=True)\ndf_ufo.head()","6e53b1c5":"# remove multiple columns at once\ndf_ufo.drop(['City', 'State'], axis=1, inplace=True)\ndf_ufo.head()","cf366dcc":"# instead of dropping the columns with missing data, let's try something else.\n# re-read the dataset of UFO reports into a DataFrame\ndf_ufo = pd.read_csv('..\/input\/ufo-sightings\/ufo.csv')\ndf_ufo.head()","e6b0b06f":"# 'isnull' returns a DataFrame of booleans (True if missing, False if not missing)\ndf_ufo.isnull().head(20)","3b9c4edb":"# count the number of missing values in each Series\ndf_ufo.isnull().sum()","c81ab65a":"# use the 'isnull' Series method to filter the DataFrame rows\ndf_ufo[df_ufo.City.isnull()].head(25)","7735f606":"# fill in missing values with a specified value\ndf_ufo['Shape Reported'].fillna(value='Unknown', inplace=True)","17bbf882":"# confirm that the missing values were filled in\ndf_ufo['Shape Reported'].value_counts().head(10)","262ca37f":"df_ufo.shape","fb222999":"# read a dataset of alcohol consumption into a DataFrame, and check the data types\ndf_drinks = pd.read_csv('..\/input\/drinks\/drinks.csv')","e7d65f69":"type(df_drinks)","26e3237f":"df_drinks.info()","c314e60e":"df_drinks.dtypes","350f44ea":"# get the mean of all the numeric columns\ndf_drinks.mean()","ed6a1359":"# describe all of the numeric columns\ndf_drinks.describe()","232f8af5":"# pass the string 'all' to describe all columns\ndf_drinks.describe(include='all')","d4e6326d":"df_drinks.head()","22373557":"df_drinks.tail()","f4c5503e":"df_drinks[df_drinks.beer_servings > 300]","949597d5":"df_drinks[df_drinks.wine_servings > 275]","5e35d5aa":"# calculate the mean beer servings just for countries in Africa\ndf_drinks[df_drinks.continent=='Africa'].beer_servings.mean()","04c84242":"# calculate the mean beer servings for each continent\ndf_drinks.groupby('continent').wine_servings.mean()","c59c1d9e":"# multiple aggregation functions can be applied simultaneously\ndf_drinks.groupby('continent').beer_servings.agg(['count', 'mean', 'min', 'max'])","87c6d0bb":"# What are the 23 countries in North America\ndf_drinks[df_drinks.continent == \"North America\"]","0698f435":"df_drinks.groupby('continent').mean()","e15fdf31":"# side-by-side bar plot of the DataFrame directly above\ndf_drinks.groupby('continent').mean().plot(kind='bar')","711ab13f":"Pandas is a full-featured Python library for data analysis, manipulation, and visualization.\n\n[Pandas website](http:\/\/pandas.pydata.org\/)","45ab0fe2":"**Bracket notation** will always work, whereas **dot notation** has limitations:\n\n- Dot notation doesn't work if there are **spaces** in the Series name\n- Dot notation doesn't work if the Series has the same name as a **DataFrame method or attribute** (like 'head' or 'shape')\n- Dot notation can't be used to define the name of a **new Series** (see below)","14ad0060":"## UFO Sightings\nLet's find some data.  This dataset is shared on GitHub and includes information about UFO sightings.\n\n[http:\/\/bit.ly\/uforeports](http:\/\/bit.ly\/uforeports)","af0da1b6":"**What does \"NaN\" mean?**\n\n- \"NaN\" is not a string, rather it's a special value: **`numpy.nan`**.\n- It stands for \"Not a Number\" and indicates a **missing value**.\n- **`read_csv`** detects missing values (by default) when reading the file, and replaces them with this special value.\n","e66dd6df":"# Pandas: The heart of Data Wrangling","3eec351b":"Countries can be 'grouped by' continent.","b97989c6":"## Beverage Consumption\nLet's find some different data.  This particular dataset is shared on GitHub and includes information about countries and alcohol consumption.\n\n[http:\/\/bit.ly\/drinksbycountry](http:\/\/bit.ly\/drinksbycountry)"}}