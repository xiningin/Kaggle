{"cell_type":{"0827f2fe":"code","4b594f62":"code","a658d768":"code","49c46029":"code","c5cb03ae":"code","613e6fd4":"code","b214d3de":"code","a2bce093":"code","eb8e2616":"code","2f7d1e53":"code","ce3cbc37":"code","4e453c11":"code","2ab8b51b":"code","8b00d76a":"code","aeefd53f":"code","a622d443":"code","30c865cc":"code","dd0ff812":"code","4d3f8747":"code","80f49ed5":"code","80b412d6":"code","66d2c960":"code","9f8d3dd9":"code","ef18a809":"code","133ea105":"code","a2e06ffc":"code","021d3470":"code","adab7da0":"code","50492bb2":"code","e14b177b":"code","e9491bf7":"code","3f2699ee":"code","33c51b20":"code","08af483f":"code","03e5a359":"code","046dd864":"code","fd280c98":"code","ad95c3e0":"code","e291682e":"code","7a405208":"code","8bf9e6a0":"code","dd5e0278":"code","ad206e92":"code","f4a23f89":"markdown","5a1c512f":"markdown","8fc5ed09":"markdown","9f021a75":"markdown","7c8da98f":"markdown","9e47d54d":"markdown","b54b9cd5":"markdown","e1d01320":"markdown","3e2f1294":"markdown","e6a47abc":"markdown","c704d008":"markdown","b757db1b":"markdown","4e87a468":"markdown","deaa2adb":"markdown","78b11c2e":"markdown","d9becfeb":"markdown"},"source":{"0827f2fe":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport datetime as dt\nfrom fbprophet import Prophet","4b594f62":"df=pd.read_csv(\"complete.csv\",parse_dates=True,index_col='Date')","a658d768":"df.head()","49c46029":"nation = pd.read_csv('nation_level_daily.csv')","c5cb03ae":"nation.head()","613e6fd4":"\nsns.set_style('darkgrid')","b214d3de":"def date(dt):\n    l=dt.strip().split()\n    if(l[1]=='January'):\n        return '2020\/01\/'+l[0]\n    elif(l[1]=='February'):\n        return '2020\/02\/'+l[0]\n    elif(l[1]=='March'):\n        return '2020\/03\/'+l[0]\n    elif(l[1]=='April'):\n        return '2020\/04\/'+l[0]\n    elif(l[1]=='May'):\n        return '2020\/05\/'+l[0]\n    elif(l[1]=='June'):\n        return '2020\/06\/'+l[0]\n    elif(l[1]=='July'):\n        return '2020\/07\/'+l[0]\n        ","a2bce093":"nation['Date']=nation['Date'].apply(date)","eb8e2616":"nation['Date']=pd.to_datetime(nation['Date'])","2f7d1e53":"nation.index=nation['Date']","ce3cbc37":"nation.drop('Date',axis=1,inplace=True)","4e453c11":"nation_test = pd.read_csv('tests_day_wise.csv')","2ab8b51b":"nation_test['Update Time Stamp']=nation_test['Update Time Stamp'].apply(lambda x:x.split()[0])","8b00d76a":"nation_test['Update Time Stamp'] = pd.to_datetime(nation_test['Update Time Stamp'],dayfirst=True)","aeefd53f":"nation_test['Month'] = nation_test['Update Time Stamp'].apply(lambda x : x.strftime(\"%B\"))","a622d443":"nation_test.index=nation_test['Update Time Stamp']\n","30c865cc":"nation_test.drop(['Update Time Stamp','Tested As Of'],axis=1,inplace=True)","dd0ff812":"state_test = pd.read_csv('tests_state_wise.csv')\n","4d3f8747":"state_test['Updated On'] = pd.to_datetime(state_test['Updated On'],dayfirst=True)","80f49ed5":"state_test['Month'] = state_test['Updated On'].apply(lambda x : x.strftime(\"%B\"))","80b412d6":"state_test.index = state_test['Updated On']","66d2c960":"state_test.drop('Updated On',axis=1,inplace=True)","9f8d3dd9":"state_level = pd.read_csv('state_level_latest.csv')","ef18a809":"st = state_level.sort_values('Confirmed',ascending=False)[1:11][::-1]['State'].values\ncon = state_level.sort_values('Confirmed',ascending=False)[1:11][::-1]['Confirmed'].values\nde = state_level.sort_values('Confirmed',ascending=False)[1:11][::-1]['Confirmed'].values\nre = state_level.sort_values('Recovered',ascending=False)[1:11][::-1]['Confirmed'].values","133ea105":"district_level = pd.read_csv('district_level_latest.csv')","a2e06ffc":"district = district_level.sort_values('Confirmed',ascending=False)[1:11]['District'][::-1].values\nvalues = district_level.sort_values('Confirmed',ascending=False)[1:11]['Confirmed'][::-1].values","021d3470":"top_District = district_level[district_level['Confirmed']!=0].groupby('State').count().sort_values('District',ascending=False)['District'][:10]","adab7da0":"plt.style.use('seaborn')\nplt.figure(figsize=(14,18))\n#Total Confirmed vs Total Recovery\nplt.subplot(4,1,1)\nnation['Total Confirmed'].plot.area(legend=True)\nnation['Total Recovered'].plot.area(legend=True)\nplt.title('Total Confirmed vs Total Recovered',fontsize=18);\nplt.tight_layout(pad=1.2)\n#Daily Confirmed vs Daily Recoveabsry\nplt.subplot(4,1,2)\nnation['Daily Confirmed'].plot.area(legend=True)\nnation['Daily Recovered'].plot.area(legend=True)\nplt.title('Daily Confirmed vs Daily Recovey',fontsize=18);\nplt.tight_layout(pad=1.2)\n#Total Deceased\nplt.subplot(4,1,3)\nnation['Total Deceased'].plot.area(legend=True,color='black',alpha=0.8)\nplt.title('Total Deceased',fontsize=18);\nplt.subplot(4,1,4)\nnation['Daily Deceased'].plot.area(legend=True,color='gray')\nplt.xlabel('Date',fontsize=16)\nplt.title('Daily Deceased',fontsize=18);\nplt.tight_layout(pad=1.2)","50492bb2":"sizes = [277942,496048,21638,]\nlabels = ['Active', 'Recovered', 'Deaths']\nexplode = [0.05,0.05,0.05]\nplt.figure(figsize=(12,8))\nplt.pie(x=sizes,labels=labels,startangle=9,colors=['#66b3ff','green','red'],autopct=\"%1.1f%%\",explode=explode,shadow=True);\nplt.title(\"Covid-19 India Cases\",fontsize=20);\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\n\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle);\nplt.tight_layout()","e14b177b":"plt.figure(figsize=(14,25))\n#Confirmed Cases\nplt.subplot(5,1,1)\nplt.barh(st,con,color='darkcyan')\nplt.tick_params(size=8,labelsize=13)\nplt.title('Top 10 States(Confirmed Cases)',fontsize=18)\nplt.xlabel('Confirmed Cases',fontsize=16)\n#Recovered Cases\nplt.subplot(5,1,2)\nplt.barh(st,re,color='green',alpha=0.6)\nplt.tick_params(size=8,labelsize=13)\nplt.title('Top 10 States(Recovered Cases)',fontsize=18);\nplt.xlabel('Recovered Cases',fontsize=16)\n#Death Cases\nplt.subplot(5,1,3)\nplt.barh(st,de,color='crimson',alpha=0.8)\nplt.tick_params(size=8,labelsize=13)\nplt.title('Top 10 States(Death Cases)',fontsize=18);\nplt.xlabel('Death Cases',fontsize=16)\nplt.tight_layout(pad=3.0)\n#Top 10 States with Most Affected Districts\nplt.subplot(5,1,4)\nplt.barh(top_District[::-1].index,top_District[::-1].values,color='darkcyan',alpha=0.8)\nplt.tick_params(size=8,labelsize=13)\nplt.title('Top 10 States(With Most Affected Districts)',fontsize=18);\nplt.xlabel('Cases',fontsize=16)\nplt.tight_layout(pad=3.0)\n#Top 10 Districts\nplt.subplot(5,1,5)\nplt.barh(district,values,color='crimson',alpha=0.8)\nplt.tick_params(size=8,labelsize=13)\nplt.title('Top 10 Districts(Accounts for 40% Cases)',fontsize=18);\nplt.xlabel('Cases',fontsize=16)\nplt.tight_layout(pad=3.0)\n","e9491bf7":"plt.style.use('seaborn')\nplt.figure(figsize=(14,10))\nplt.subplot(2,1,1)\nsns.barplot('Month','Total Samples Tested',data=nation_test,palette='viridis');\nplt.title('Total Samples Tested Per Month',fontsize=18);\nplt.subplot(2,1,2)\nsns.barplot('Month','Tests per million',data=nation_test,palette='viridis');\nplt.title('Tests Per Million',fontsize=18);\nplt.tight_layout(pad=2.0)\nplt.show()\n#nation_test['Total Samples Tested'].plot(kind='area')\n#nation_test['Total Positive Cases'].plot(kind='area')\n","3f2699ee":"labels = ['Active','Recovered','Deaths']\nexplode = [0.05,0.05,0.05]\nplt.figure(figsize=(12,14))\n#Maharashtra\nplt.subplot(2,2,1)\nplt.pie(x=[ 93654, 127259,9667],labels=labels,startangle=9,colors=['gold', 'yellowgreen', 'lightcoral'],autopct=\"%1.1f%%\",explode=explode,shadow=True);\nplt.title('Maharashtra',fontsize=20);\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle);\n#Tamil Nadu\nplt.subplot(2,2,2)\nplt.pie(x=[46655, 78161,1765],labels=labels,startangle=9,colors=['gold', 'yellowgreen', 'lightcoral'],autopct=\"%1.1f%%\",explode=explode,shadow=True);\nplt.title('Tamil Nadu',fontsize=20);\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle);\n#Delhi\nplt.subplot(2,2,3)\nplt.pie(x=[21567, 82226,3258],labels=labels,startangle=9,colors=['gold', 'yellowgreen', 'lightcoral'],autopct=\"%1.1f%%\",explode=explode,shadow=True);\nplt.title('Delhi',fontsize=20);\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle);\n#Gujarat\nplt.subplot(2,2,4)\nplt.pie(x=[ 9529, 27742,2009],labels=labels,startangle=9,colors=['gold', 'yellowgreen', 'lightcoral'],autopct=\"%1.1f%%\",explode=explode,shadow=True);\nplt.title('Gujarat',fontsize=20);\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle);\nplt.tight_layout()\nplt.show();","33c51b20":"plt.figure(figsize=(18,20))\n#Total Confirmed Cases\ncase=df[df['Name of State \/ UT']==\"Maharashtra\"][\"Total Confirmed cases\"]\n#Total Cured\ncured=df[df['Name of State \/ UT']==\"Maharashtra\"][\"Cured\/Discharged\/Migrated\"]\n#Total Deaths\ndeath=df[df['Name of State \/ UT']==\"Maharashtra\"][\"Death\"]\n#New cases per day\nnew_case=df[df['Name of State \/ UT']==\"Maharashtra\"][\"New cases\"]\n#New deaths per day\nnew_death=df[df['Name of State \/ UT']==\"Maharashtra\"][\"New deaths\"]\n#New recovery per day\nnew_recovery=df[df['Name of State \/ UT']==\"Maharashtra\"][\"New recovered\"]\n#Total Confirmed vs Total Cured\nplt.subplot(2,2,1)\ncase.plot(kind='line',legend=True,ls='--',lw=2,color='black')\ncured.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('Total Confirmed Cases vs Total Discharged',fontsize=18)\n#New cases per day vs Recovery per day\nplt.subplot(2,2,2)\nnew_case.plot(kind='line',legend=True,ls='--',lw=2,color='black')\nnew_recovery.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('Daily Cases vs Daily Recovery',fontsize=18)\n#Total Deaths\nplt.subplot(2,2,3)\ndeath.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red',label='Total Deaths');\nplt.title('Total Deaths',fontsize=18)\n#New Deaths\nplt.subplot(2,2,4)\nnew_death.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red');\nplt.title('Daily Deaths',fontsize=18)\nplt.show()","08af483f":"plt.figure(figsize=(18,20))\n#Total Confirmed Cases\ncase=df[df['Name of State \/ UT']==\"Tamil Nadu\"][\"Total Confirmed cases\"]\n#Total Cured\ncured=df[df['Name of State \/ UT']==\"Tamil Nadu\"][\"Cured\/Discharged\/Migrated\"]\n#Total Deaths\ndeath=df[df['Name of State \/ UT']==\"Tamil Nadu\"][\"Death\"]\n#New cases per day\nnew_case=df[df['Name of State \/ UT']==\"Tamil Nadu\"][\"New cases\"]\n#New deaths per day\nnew_death=df[df['Name of State \/ UT']==\"Tamil Nadu\"][\"New deaths\"]\n#New recovery per day\nnew_recovery=df[df['Name of State \/ UT']==\"Tamil Nadu\"][\"New recovered\"]\n#Total Confirmed vs Total Cured\nplt.subplot(2,2,1)\ncase.plot(kind='line',legend=True,ls='--',lw=2,color='black')\ncured.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('Total Confirmed vs Total Cured',fontsize=18)\n#New cases per day vs Recovery per day\nplt.subplot(2,2,2)\nnew_case.plot(kind='line',legend=True,ls='--',lw=2,color='black')\nnew_recovery.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('New cases vs Recovery per day',fontsize=18)\n#Total Deaths\nplt.subplot(2,2,3)\ndeath.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red',label='Total Deaths');\nplt.title('Total Deaths',fontsize=18)\n#New Deaths\nplt.subplot(2,2,4)\nnew_death.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red');\nplt.title('New Deaths Per Day',fontsize=18)\nplt.show()","03e5a359":"plt.figure(figsize=(18,20))\n#Total Confirmed Cases\ncase=df[df['Name of State \/ UT']==\"Delhi\"][\"Total Confirmed cases\"]\n#Total Cured\ncured=df[df['Name of State \/ UT']==\"Delhi\"][\"Cured\/Discharged\/Migrated\"]\n#Total Deaths\ndeath=df[df['Name of State \/ UT']==\"Delhi\"][\"Death\"]\n#New cases per day\nnew_case=df[df['Name of State \/ UT']==\"Delhi\"][\"New cases\"]\n#New deaths per day\nnew_death=df[df['Name of State \/ UT']==\"Delhi\"][\"New deaths\"]\n#New recovery per day\nnew_recovery=df[df['Name of State \/ UT']==\"Delhi\"][\"New recovered\"]\n#Total Confirmed vs Total Cured\nplt.subplot(2,2,1)\ncase.plot(kind='line',legend=True,ls='--',lw=2,color='black')\ncured.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('Total Confirmed vs Total Cured',fontsize=18)\n#New cases per day vs Recovery per day\nplt.subplot(2,2,2)\nnew_case.plot(kind='line',legend=True,ls='--',lw=2,color='black')\nnew_recovery.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('New cases vs Recovery per day',fontsize=18)\n#Total Deaths\nplt.subplot(2,2,3)\ndeath.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red',label='Total Deaths');\nplt.title('Total Deaths',fontsize=18)\n#New Deaths\nplt.subplot(2,2,4)\nnew_death.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red');\nplt.title('New Deaths',fontsize=18)\nplt.show()","046dd864":"plt.figure(figsize=(18,20))\n#Total Confirmed Cases\ncase=df[df['Name of State \/ UT']==\"Gujarat\"][\"Total Confirmed cases\"]\n#Total Cured\ncured=df[df['Name of State \/ UT']==\"Gujarat\"][\"Cured\/Discharged\/Migrated\"]\n#Total Deaths\ndeath=df[df['Name of State \/ UT']==\"Gujarat\"][\"Death\"]\n#New cases per day\nnew_case=df[df['Name of State \/ UT']==\"Gujarat\"][\"New cases\"]\n#New deaths per day\nnew_death=df[df['Name of State \/ UT']==\"Gujarat\"][\"New deaths\"]\n#New recovery per day\nnew_recovery=df[df['Name of State \/ UT']==\"Gujarat\"][\"New recovered\"]\n#Total Confirmed vs Total Cured\nplt.subplot(2,2,1)\ncase.plot(kind='line',legend=True,ls='--',lw=2,color='black')\ncured.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('Total Confirmed vs Total Cured',fontsize=18)\n#New cases per day vs Recovery per day\nplt.subplot(2,2,2)\nnew_case.plot(kind='line',legend=True,ls='--',lw=2,color='black')\nnew_recovery.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='green');\nplt.title('New cases vs Recovery per day',fontsize=18)\n#Total Deaths\nplt.subplot(2,2,3)\ndeath.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red',label='Total Deaths');\nplt.title('Total Deaths',fontsize=18)\n#New Deaths\nplt.subplot(2,2,4)\nnew_death.plot(kind='line',legend=True,cmap='coolwarm',ls='dashdot',lw=2,color='red');\nplt.title('Daily Deaths',fontsize=18)\nplt.show()","fd280c98":"TN = state_test[state_test['State']=='Tamil Nadu']\nDelhi = state_test[state_test['State']=='Delhi']\nMaharastra = state_test[state_test['State']=='Maharashtra']\nGujarat = state_test[state_test['State']=='Gujarat']","ad95c3e0":"plt.figure(figsize=(18,18))\n#Tests Conducted by Maharastra\nplt.subplot(2,2,1)\nsns.barplot('Month','Total Tested',data=Maharastra,palette='viridis')\nplt.title('Maharashtra',fontsize=18)\n#Tests Conducted by TamilNadu\nplt.subplot(2,2,2)\nsns.barplot('Month','Total Tested',data=TN,palette='viridis')\nplt.title('Tamil Nadu',fontsize=18);\n#Tests Conducted by Delhi\nplt.subplot(2,2,3)\nsns.barplot('Month','Total Tested',data=Delhi,palette='viridis')\nplt.title('Delhi',fontsize=18)\n#Tests Conducted by Gujarat\nplt.subplot(2,2,4)\nsns.barplot('Month','Total Tested',data=Gujarat,palette='viridis')\nplt.title('Gujarat',fontsize=18)\nplt.suptitle('Total Tests Conducted',fontsize=25)\nplt.show()","e291682e":"plt.figure(figsize=(18,18))\n#Tests Conducted by Maharastra\nplt.subplot(2,2,1)\nsns.barplot('Month','Tests per million',data=Maharastra,palette='deep')\nplt.title('Maharashtra',fontsize=18)\n#Tests Conducted by TamilNadu\nplt.subplot(2,2,2)\nsns.barplot('Month','Tests per million',data=TN,palette='deep')\nplt.title('Tamil Nadu',fontsize=18);\n#Tests Conducted by Delhi\nplt.subplot(2,2,3)\nsns.barplot('Month','Tests per million',data=Delhi,palette='deep')\nplt.title('Delhi',fontsize=18)\n#Tests Conducted by Gujarat\nplt.subplot(2,2,4)\nsns.barplot('Month','Tests per million',data=Gujarat,palette='deep')\nplt.title('Gujarat',fontsize=18)\nplt.suptitle('Total Tests Conducted Per Million',fontsize=25)\nplt.show()","7a405208":"forecast_df = pd.read_csv('nation_level_daily.csv')","8bf9e6a0":"forecast_data = forecast_df[['Date','Daily Confirmed']]\nforecast_data['Date'] = forecast_data['Date'].apply(date)\nforecast_data['Date'] = pd.to_datetime(forecast_data['Date'])\nforecast_data.columns = ['ds','y']\n#Current Cases\nforecast_data.plot(x='ds',y='y',figsize=(12,8),legend=True);\nplt.title('Daily Confirmed Cases',fontsize=18);\nplt.tight_layout()","dd5e0278":"model = Prophet(daily_seasonality=True,seasonality_mode='additive',yearly_seasonality=False)\nmodel.fit(forecast_data)\nfuture = model.make_future_dataframe(periods=12,freq='D')\nforecast = model.predict(future)\npred = forecast[['ds','yhat']]","ad206e92":"plt.figure(figsize=(12,8))\nsns.lineplot(x='ds',y='yhat',data=pred[:-12],label='Daily Cases')\nsns.lineplot(x='ds',y='yhat',data=pred[-12:],label='Predicted Daily Cases')\nplt.title('Prophet Predictions(Daily Cases)',fontsize=16);\nplt.xlabel('Date',fontsize=14);\nplt.ylabel('Cases',fontsize=14);\nplt.tight_layout()","f4a23f89":"## Tests Conducted in India","5a1c512f":"## Thank You!! Stay home!! Stay Safe!!","8fc5ed09":"### Importing Necessary Libraries\n\n\n","9f021a75":"## 2.Tamil Nadu","7c8da98f":"## 1.Maharashtra","9e47d54d":"## Forecasting Using Prophet Model","b54b9cd5":"## Tests Conducted by the Major Affected States`","e1d01320":"## Pan India Analysis","3e2f1294":"## 4.Gujarat","e6a47abc":"# Covid-19 India Data Analysis","c704d008":"## 3.Delhi","b757db1b":"### Reading CSV","4e87a468":"## Please Upvote If you Like this:)\n**Suggestions are highly appreciated**","deaa2adb":"**Let's Explore the Major affected states:**\n - Maharashtra\n - Tamilnadu\n - Delhi\n - Gujarat","78b11c2e":"## Recovered vs Active vs Deaths","d9becfeb":"![virus.jpg](attachment:virus.jpg)\n\n\n**Context**:\n\n  - January 30 The first case of the COVID-19 in India was reported, originating from China.\n  - March 14: Central government declares COVID-19 a 'notified disaster'\n  - March 15: The number of positive cases crosses 100\n  - March 24: Prime Minister Narendra Modi announces 21-day lockdown\n  - March 30: The number of positive cases crosses 1000\n\n**Aim**\n    \n  - This Project Completely focuses on Data analysis of Covid19 in India.\n  - Let's Perform Various Analysis inorder to find the insights behind how rampant covid19 in India.\n    "}}