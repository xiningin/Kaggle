{"cell_type":{"95f3264c":"code","3f4e3b20":"code","4ccc430d":"code","3c1bc10f":"code","7435800e":"code","06e4978b":"code","a7ea40bb":"code","ec4f070f":"code","fde9d932":"code","ae2e567f":"code","5273ec8a":"code","0cad40d4":"code","8e6def12":"code","99ea1b23":"code","bd5a72e5":"code","6bb7ace6":"code","b1dcdf1c":"code","937cc51e":"code","73993eff":"code","a3f2426b":"code","c8db7e64":"code","0e9f7113":"code","5d076746":"code","4792819c":"code","4057a6f8":"code","a3cb839a":"code","f951ba3d":"code","7ffc3c8e":"code","2b0152a3":"code","9a5b5737":"code","a38b36c9":"code","1e5d21f6":"code","4690fa27":"code","5957bbd1":"code","d1b53779":"code","8e8e218f":"code","3918ffb2":"code","6db90ed1":"code","1ce6d6bd":"code","847eef99":"code","3487ac17":"code","e8c262a5":"code","4d84de8b":"code","f97b616a":"code","4bdf1fdd":"code","54fb4534":"code","8cfe0971":"code","709d7a29":"code","6d74e8ef":"code","aa3e39fb":"code","92e72fea":"code","819f4079":"code","17025ab4":"code","0722a7ce":"code","7f4f2e6e":"code","cc304a54":"code","e589a984":"code","27638c51":"code","181554e8":"markdown","f7a16872":"markdown","55594d47":"markdown","8704d3dd":"markdown","80c7d3fb":"markdown","99fd3012":"markdown","3a39847b":"markdown"},"source":{"95f3264c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3f4e3b20":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split","4ccc430d":"df = pd.read_csv('..\/input\/drinking-water-probability\/drinking_water_potability.csv',encoding='utf-8')","3c1bc10f":"df.head()","7435800e":"df.shape","06e4978b":"df.isnull().sum()","a7ea40bb":"df['ph'].median()","ec4f070f":"df['ph'] = df['ph'].fillna(df['ph'].median())","fde9d932":"df['Sulfate'].median()","ae2e567f":"df['Sulfate'] = df['Sulfate'].fillna(df['Sulfate'].median())","5273ec8a":"df['Trihalomethanes'] = df['Trihalomethanes'].fillna(df['Trihalomethanes'].median())","0cad40d4":"df.isnull().sum()","8e6def12":"sns.pairplot(df)","99ea1b23":"tc = df.corr()\ntc","bd5a72e5":"plt.figure(figsize=(10,10))\nsns.heatmap(tc,annot=True)","6bb7ace6":"df.columns","b1dcdf1c":"x = df[['ph', 'Hardness', 'Solids', 'Chloramines', 'Sulfate', 'Conductivity',\n       'Organic_carbon', 'Trihalomethanes', 'Turbidity']]","937cc51e":"y = df[['Potability']]","73993eff":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)","a3f2426b":"x_train.shape","c8db7e64":"y_train.shape","0e9f7113":"from sklearn.ensemble import RandomForestClassifier","5d076746":"model = RandomForestClassifier()","4792819c":"model.fit(x_train,y_train)","4057a6f8":"pred = model.predict(x_test)","a3cb839a":"pred","f951ba3d":"from sklearn import metrics ","7ffc3c8e":"print('The Accuracy is', (metrics.accuracy_score(y_test,pred)*100),'%')","2b0152a3":"from pycaret.classification import*","9a5b5737":"s = setup(data = df, target ='Potability')","a38b36c9":"compare_models()","1e5d21f6":"from sklearn.feature_selection import RFE","4690fa27":"rfe = RFE(model,8)","5957bbd1":"fit = rfe.fit(x_train,y_train)","d1b53779":"fit.ranking_","8e8e218f":"x.columns","3918ffb2":"x1 = x[['ph','Hardness', 'Solids', 'Chloramines', 'Sulfate', 'Conductivity',\n       'Organic_carbon', 'Trihalomethanes']]","6db90ed1":"x1_train,x1_test,y_train,y_test = train_test_split(x1,y,test_size=0.3)","1ce6d6bd":"model1 = RandomForestClassifier()","847eef99":"model1.fit(x1_train,y_train)","3487ac17":"pred1 = model1.predict(x1_test)","e8c262a5":"pred1","4d84de8b":"print('The Accuracy is', (metrics.accuracy_score(y_test,pred1)*100),'%')","f97b616a":"rfe = RFE(model1,7)","4bdf1fdd":"fit = rfe.fit(x1_train,y_train)","54fb4534":"fit.ranking_","8cfe0971":"x1.columns","709d7a29":"x2 = x1[['ph', 'Hardness', 'Solids', 'Chloramines', 'Sulfate', 'Conductivity',\n       'Organic_carbon']]","6d74e8ef":"x2_train,x2_test,y_train,y_test = train_test_split(x2,y,test_size=0.3)","aa3e39fb":"from sklearn.tree import DecisionTreeClassifier","92e72fea":"model2 = DecisionTreeClassifier()","819f4079":"model2.fit(x2_train,y_train)","17025ab4":"predicted = model2.predict(x2_test)","0722a7ce":"print('The Accuracy is', (metrics.accuracy_score(y_test,predicted)*100),'%')","7f4f2e6e":"model3 = RandomForestClassifier()","cc304a54":"model3.fit(x2_train,y_train)","e589a984":"predicted1 = model3.predict(x2_test)","27638c51":"print('The Accuracy is', (metrics.accuracy_score(y_test,predicted1)*100),'%')","181554e8":"# Trying with Pycaret","f7a16872":"#### From the above plot, we can note that the potability of drinking water is lower than the potability of non-drinking water in this data, we have collected.","55594d47":"## Accuracy Score","8704d3dd":"## Plotting The Pair Plot to find the relations between different features and label","80c7d3fb":"### checking for the null\/missing values","99fd3012":"## Splitting the Data as features and label.","3a39847b":"## Model Building "}}