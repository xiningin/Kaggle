{"cell_type":{"325769db":"code","41c4e399":"code","63339e4c":"code","69162222":"code","912a7358":"code","332fe739":"code","4cf41eb8":"code","2fb88c98":"code","e7afe07a":"code","1f196365":"code","d985ecb8":"code","baae5e75":"code","9bd88949":"code","6886597f":"code","142bb2eb":"code","9be09237":"code","033b0780":"code","2ebdc29d":"code","70711aa6":"code","f73333d0":"code","b131a9d9":"code","b28546e9":"code","3dc9d757":"code","03e39905":"code","523cd901":"code","2765e34a":"markdown","79b2ec89":"markdown","1f9b41da":"markdown","3faa5580":"markdown","30cbf48e":"markdown","d652c114":"markdown","1f55e41d":"markdown","82f6f23e":"markdown","7b1bbac5":"markdown","06ecefbf":"markdown","49a50c1c":"markdown","7923078d":"markdown","f6bb176c":"markdown","863d0d66":"markdown","0f5a3a02":"markdown","aaebbd8c":"markdown","27150bee":"markdown","f6342dac":"markdown","1e2fdc57":"markdown","6d4de65f":"markdown"},"source":{"325769db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","41c4e399":"import joblib\nimport numpy as np\nimport pandas as pd\nimport math\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\n# from sklearn.preprocessing import Imputer\nimport seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\nimport requests","63339e4c":"airQualityDF= pd.read_excel(\"\/kaggle\/input\/istanbul2.xlsx\")\nairQualityDF.fillna(0,inplace=True)","69162222":"airQualityDF.shape","912a7358":"listCities = ['Kandilli', '\u00dcsk\u00fcdar', 'Sirinevler', 'Mecidiyekoy', 'Umraniye', 'Basaksehir', 'Esenyurt', 'Sultanbeyli','Kagithane', 'Sultangazi', 'Silivri', 'Sile']\nhkiKandilli = list(airQualityDF.filter(regex = listCities[0]).columns)\nhkiKandilli","332fe739":"def calculateAirQualityIndexSO2(so2):\n    soi2=0\n    if (so2>=0 and so2<=100):\n     soi2= ((50-0)\/(100-0))*(so2-0) + 0\n    if (so2>=101 and so2<=250):\n     soi2= ((100-51)\/(250-101))*(so2-101) + 51\n    if (so2>=251 and so2<=500):\n     soi2= ((150-101)\/(500-251))*(so2-251) + 101\n    if (so2>=501 and so2<=850):\n     soi2= ((200-151)\/(850-501))*(so2-501) + 151\n    if (so2>=851 and so2<=1100):\n     soi2= ((300-201)\/(1100-851))*(so2-851) + 201\n    if (so2>=1101 and so2<= 1500):\n     soi2= ((500-301)\/(1500-1101))*(so2-1101) + 301\n    \n    return soi2","4cf41eb8":"def calculateAirQualityIndexNo2(no2):\n    noi2=0\n    if (no2>=0 and no2<=100):\n     noi2= ((50-0)\/(100-0))*(no2-0) + 0\n    if (no2>=101 and no2<=200):\n     noi2= ((100-51)\/(200-101))*(no2-101) + 51\n    if (no2>=201 and no2<=500):\n     noi2= ((150-101)\/(500-201))*(no2-201) + 101\n    if (no2>=501 and no2<=1000):\n     noi2= ((200-151)\/(1000-501))*(no2-501) + 151\n    if (no2>=1001 and no2<=2000):\n     noi2= ((300-201)\/(2000-1001))*(no2-1001) + 201\n    if (no2>=2001 and no2<= 3000):\n     noi2= ((500-301)\/(3000-2001))*(no2-2001) + 301\n    return noi2","2fb88c98":"def calculateAirQualityIndexPM10(pm10):\n    pm10i2=0\n    if (pm10>=0 and pm10<=50):\n     pm10i2= ((50-0)\/(50-0))*(pm10-0) + 0\n    if (pm10>=51 and pm10<=100):\n     pm10i2= ((100-51)\/(100-51))*(pm10-51) + 51\n    if (pm10>=101 and pm10<=260):\n     pm10i2= ((150-101)\/(260-101))*(pm10-101) + 101\n    if (pm10>=261 and pm10<=400):\n     pm10i2= ((200-151)\/(400-261))*(pm10-261) + 151\n    if (pm10>=401 and pm10<=520):\n     pm10i2= ((300-201)\/(520-401))*(pm10-401) + 201\n    if (pm10>=521 and pm10<= 620):\n     pm10i2= ((500-301)\/(620-521))*(pm10-521) + 301\n    \n    return pm10i2 ","e7afe07a":"def calculateAirQualityIndexPM25(pm25):\n    pm25i2=0\n    if (pm25>=0 and pm25<=12):\n     pm25i2= ((50-0)\/(12-0))*(pm25-0) + 0\n    if (pm25>=12.1 and pm25<=35.4):\n     pm25i2= ((100-51)\/(35.4-12.1))*(pm25-12.1) + 51\n    if (pm25>=35.5 and pm25<=55.4):\n     pm25i2= ((150-101)\/(55.4-35.5))*(pm25-35.5) + 101\n    if (pm25>=55.5 and pm25<=150.4):\n     pm25i2= ((200-151)\/(150.4-55.5))*(pm25-55.5) + 151\n    if (pm25>=150.5 and pm25<=250.4):\n     pm25i2= ((300-201)\/(250.4-150.5))*(pm25-150.5) + 201\n    if (pm25>=250.5 and pm25<= 350.4):\n     pm25i2= ((400-301)\/(350.4-250.5))*(pm25-250.5) + 301\n    if (pm25>=350.5 and pm25<= 505.4):\n     pm25i2= ((500-401)\/(505.4-350.5))*(pm25-350.5) + 401\n    return pm25i2 ","1f196365":"def calculateAirQualityIndexCO(CO):\n    coi2=0\n    if (CO>=0 and CO<=5500):\n     coi2= ((50-0)\/(5500-0))*(CO-0) + 0\n    if (CO>=5501 and CO<=10000):\n     coi2= ((100-51)\/(10000-5501))*(CO-5501) + 51\n    if (CO>=10001 and CO<=16000):\n     coi2= ((150-101)\/(16000-10001))*(CO-10001) + 101\n    if (CO>=16001 and CO<=24000):\n     coi2= ((200-151)\/(24000-16001))*(CO-16001) + 151\n    if (CO>=24001 and CO<=32000):\n     coi2= ((300-201)\/(32000-24001))*(CO-24001) + 201\n    if (CO>=32001 and CO<=40000):\n     coi2= ((500-301)\/(40000-32001))*(CO-32001) + 301\n    return coi2 ","d985ecb8":"def calculateAirQualityIndexO3(O3):\n    o3i2=0\n    if (O3>=0 and O3<=120):\n     o3i2= ((50-0)\/(120-0))*(O3-0) + 0\n    if (O3>=121 and O3<=160):\n     o3i2= ((100-51)\/(160-121))*(O3-121) + 51\n    if (O3>=161 and O3<=180):\n     o3i2= ((150-101)\/(180-161))*(O3-161) + 101\n    if (O3>=181 and O3<=240):\n     o3i2= ((200-151)\/(240-181))*(O3-181) + 151\n    if (O3>=241 and O3<=700):\n     o3i2= ((300-201)\/(700-241))*(O3-241) + 201\n    if (O3>=701 and O3<=1700):\n     o3i2= ((500-301)\/(1700-701))*(O3-701) + 301\n    return o3i2  ","baae5e75":"def calculateHKI():\n    listPM10 = list(airQualityDF.filter(like='PM10').columns)\n    listSO2 = list(airQualityDF.filter(like='SO2').columns)\n    listNO2 = list(airQualityDF.filter(like='NO2').columns)\n    listCO = list(airQualityDF.filter(like='CO').columns)\n    listO3 = list(airQualityDF.filter(like='O3').columns)\n    listPM25 = list(airQualityDF.filter(like='PM 2.5').columns)\n    for pm10 in listPM10:\n        airQualityDF[\"HKI\"+pm10] = airQualityDF[pm10].apply(calculateAirQualityIndexPM10)\n    for so2 in listSO2:\n        airQualityDF[\"HKI\"+so2] = airQualityDF[so2].apply(calculateAirQualityIndexSO2)\n    for no2 in listNO2:\n        airQualityDF[\"HKI\"+no2] = airQualityDF[no2].apply(calculateAirQualityIndexNo2)\n    for co in listCO:\n        airQualityDF[\"HKI\"+co] = airQualityDF[co].apply(calculateAirQualityIndexCO)\n    for O3 in listO3:\n        airQualityDF[\"HKI\"+O3] = airQualityDF[O3].apply(calculateAirQualityIndexO3)\n    for PM25 in listPM25:\n        airQualityDF[\"HKI\"+PM25] = airQualityDF[PM25].apply(calculateAirQualityIndexPM25)\ncalculateHKI()","9bd88949":"def splitHKIValueAndValue(newList):\n    listMaterialName=[]\n    listHighValue = []\n    for dongu in airQualityDF[newList].values:\n        listMaterialName.append(newList[dongu.argmax()].split('-')[1])\n        listHighValue.append(dongu.max())\n    columnName = newList[0].split('HKI')[1].split('-')[0]\n    columnType = columnName+'Type'\n    airQualityDF['AQI-'+columnName] = listHighValue\n    airQualityDF['AQI-'+columnType] = listMaterialName\n\nhkiKandilli = list(airQualityDF.filter(regex = 'HKIKandilli-').columns)\nhkiUskudar = list(airQualityDF.filter(regex = 'HKI\u00dcsk\u00fcdar-').columns)\nhkiSirinevler = list(airQualityDF.filter(regex = 'HKISirinevler-').columns)\nhkiMecidiyekoy = list(airQualityDF.filter(regex = 'HKIMecidiyekoy-').columns)\nhkiUmraniye =list(airQualityDF.filter(regex = 'HKIUmraniye-').columns)\nhkiBasaksehir = list(airQualityDF.filter(regex = 'HKIBasaksehir-').columns)\nhkiEsenyurt = list(airQualityDF.filter(regex = 'HKIEsenyurt-').columns)\nhkiSultanbeyli = list(airQualityDF.filter(regex = 'HKISultanbeyli-').columns)\nhkiKagithane = list(airQualityDF.filter(regex = 'HKIKagithane-').columns)\nhkiSultangazi = list(airQualityDF.filter(regex = 'HKISultangazi-').columns)\nhkiSilivri = list(airQualityDF.filter(regex = 'HKISilivri-').columns)\nhkiSile = list(airQualityDF.filter(regex = 'HKISile-').columns)\n\nsplitHKIValueAndValue(hkiKandilli)\nsplitHKIValueAndValue(hkiUskudar)\nsplitHKIValueAndValue(hkiSirinevler)\nsplitHKIValueAndValue(hkiMecidiyekoy)\nsplitHKIValueAndValue(hkiUmraniye)\nsplitHKIValueAndValue(hkiBasaksehir)\nsplitHKIValueAndValue(hkiEsenyurt)\nsplitHKIValueAndValue(hkiSultanbeyli)\nsplitHKIValueAndValue(hkiKagithane)\nsplitHKIValueAndValue(hkiSultangazi)\nsplitHKIValueAndValue(hkiSilivri)\nsplitHKIValueAndValue(hkiSile)","6886597f":"def calculateGoodOrBadAir(listValues):\n    hkiString=\"\"\n    \n    for value in listValues:\n        listHKIString=[]\n        for hkiValues in airQualityDF[value]:\n            if(hkiValues>=0 and hkiValues<=50):\n                hkiString = \"\u0130yi\"\n            if(hkiValues>=51 and hkiValues<=100):\n                hkiString = \"Orta\"\n            if(hkiValues>=101 and hkiValues<=150):\n                hkiString = \"Hassas\"\n            if(hkiValues>=151 and hkiValues<=200):\n                hkiString = \"Sa\u011fl\u0131ks\u0131z\"\n            if(hkiValues>=201 and hkiValues<=300):\n                hkiString = \"K\u00f6t\u00fc\"\n            if(hkiValues>=301 and hkiValues<=500):\n                hkiString = \"Tehlikeli\"\n            listHKIString.append(hkiString)\n        airQualityDF['HKIStr-'+value.split('-')[1]] = listHKIString\naqiList = list(airQualityDF.filter(regex = 'AQI-').columns)[::2]\ncalculateGoodOrBadAir(aqiList)","142bb2eb":"kandilli = airQualityDF.loc[:,[hkiKandilli[0], hkiKandilli[1], hkiKandilli[2], hkiKandilli[3], hkiKandilli[4], hkiKandilli[5], 'AQI-Kandilli','AQI-KandilliType']]\nplt.figure(figsize=(15,10))\nplt.tight_layout()\nseabornInstance.distplot(kandilli['AQI-Kandilli'])\nplt.show()","9be09237":"airQualityDF.isnull().any()","033b0780":"f,ax=plt.subplots(figsize=(15,8))\nplt.plot(airQualityDF['Tarih'], airQualityDF['Sirinevler-PM10'],color='r', label='PM10',alpha=0.8)\nplt.plot(airQualityDF['Tarih'],airQualityDF['Sirinevler-SO2'],color='b', label='SO2',alpha=0.8)\nplt.legend(loc='upper left')\nplt.show()","2ebdc29d":"winterMonths = []\nwinterValues = []\nsummerMonths = []\nsummerValues = []\nfor days in airQualityDF['Tarih']:\n    if(days.month == 12 or days.month == 1 or days.month == 2):\n        winterValues.append(airQualityDF[airQualityDF['Tarih']==days]['Sirinevler-PM10'].values[0])\n        winterMonths.append(days)\n    if(days.month == 6 or days.month == 7 or days.month == 8):\n        summerValues.append(airQualityDF[airQualityDF['Tarih']==days]['Sirinevler-PM10'].values[0])\n        summerMonths.append(days)\n","70711aa6":"f,ax=plt.subplots(figsize=(15,8))\nplt.plot(winterMonths, winterValues,color='r', label='winter',alpha=0.8)\nplt.plot(summerMonths,summerValues, color='b', label='summer',alpha=0.8)\nplt.title('Yaz ve K\u0131\u015f Aylar\u0131')\nplt.legend(loc='upper left')\nplt.show()","f73333d0":"dailyPM10 = []\ndailyPM10Values = []\nfor year in airQualityDF['Tarih']:\n    if(year.year == 2020 and year.month == 4 and year.day == 1):\n        dailyPM10Values.append(airQualityDF[airQualityDF['Tarih']==year]['Umraniye-PM10'].values[0])\n        dailyPM10.append(year)","b131a9d9":"f,ax=plt.subplots(figsize=(15,8))\nplt.plot(dailyPM10, dailyPM10Values ,color='r', label='PM10',alpha=0.8)\nplt.title('Bir G\u00fcnl\u00fck \u00dcmraniye \u0130l\u00e7esi PM10 De\u011fi\u015fimi')\nplt.legend(loc='upper left')\nplt.show()","b28546e9":"dailyPM10 = []\ndailyPM10Values = []\nfor year in airQualityDF['Tarih']:\n    if(year.year == 2020 and year.month == 4 and year.day == 1):\n        dailyPM10Values.append(airQualityDF[airQualityDF['Tarih']==year]['Basaksehir-PM10'].values[0])\n        dailyPM10.append(year)\ndailySO2 = []\ndailySO2Values = []\nfor year in airQualityDF['Tarih']:\n    if(year.year == 2020 and year.month == 4 and year.day == 1):\n        dailySO2Values.append(airQualityDF[airQualityDF['Tarih']==year]['Basaksehir-SO2'].values[0])\n        dailySO2.append(year)\ndailyO3 = []\ndailyO3Values = []\nfor year in airQualityDF['Tarih']:\n    if(year.year == 2020 and year.month == 4 and year.day == 1):\n        dailyO3Values.append(airQualityDF[airQualityDF['Tarih']==year]['Basaksehir-O3'].values[0])\n        dailyO3.append(year)\ndailyNO2 = []\ndailyNO2Values = []\nfor year in airQualityDF['Tarih']:\n    if(year.year == 2020 and year.month == 4 and year.day == 1):\n        dailyNO2Values.append(airQualityDF[airQualityDF['Tarih']==year]['Basaksehir-NO2'].values[0])\n        dailyNO2.append(year)\n\nf,ax=plt.subplots(figsize=(15,8))\nplt.plot(dailySO2, dailySO2Values ,color='r', label='SO2',alpha=0.8)\nplt.title('Bir G\u00fcnl\u00fck Ba\u015fak\u015fehir \u0130l\u00e7esi SO2 De\u011fi\u015fimi')\nplt.legend(loc='upper left')\nplt.show()\n","3dc9d757":"f,ax=plt.subplots(figsize=(15,8))\nplt.plot(dailyPM10, dailyPM10Values ,color='r', label='PM10',alpha=0.8)\nplt.title('Bir G\u00fcnl\u00fck Ba\u015fak\u015fehir \u0130l\u00e7esi PM10 De\u011fi\u015fimi')\nplt.legend(loc='upper left')\nplt.show()","03e39905":"f,ax=plt.subplots(figsize=(15,8))\nplt.plot(dailyNO2, dailyNO2Values ,color='r', label='NO2',alpha=0.8)\nplt.title('Bir G\u00fcnl\u00fck Ba\u015fak\u015fehir \u0130l\u00e7esi NO2 De\u011fi\u015fimi')\nplt.legend(loc='upper left')\nplt.show()","523cd901":"f,ax=plt.subplots(figsize=(15,8))\nplt.plot(dailyO3, dailyO3Values ,color='r', label='O3',alpha=0.8)\nplt.title('Bir G\u00fcnl\u00fck Ba\u015fak\u015fehir \u0130l\u00e7esi O3 De\u011fi\u015fimi')\nplt.legend(loc='upper left')\nplt.show()","2765e34a":"# CO De\u011feri i\u00e7in yap\u0131lan hesaplama yukar\u0131da yer almaktad\u0131r.","79b2ec89":"# Yukar\u0131daki kod daha okunabilir hale getirilecektir. Hava Kalitesi \u0130ndeksi hesaplanmas\u0131n\u0131n ard\u0131ndan her il\u00e7e i\u00e7in o g\u00fcn i\u00e7erisinde o saat i\u00e7erisinde bulunan en y\u00fcksek de\u011ferin hangi de\u011fer i\u00e7in oldu\u011funu hesaplay\u0131p de\u011fer ile birlikte veri i\u00e7erisine eklenmesi yukar\u0131da yap\u0131lacakt\u0131r. ","1f9b41da":"![image.png](attachment:image.png)","3faa5580":"# Yukar\u0131da ba\u015fl\u0131kta belirtildi\u011fi gibi yaz ve k\u0131\u015f aylar\u0131 al\u0131narak PM10 zararl\u0131 maddesinin \u015eirinevler il\u00e7esinde olan durumu grafi\u011fe d\u00f6k\u00fclm\u00fc\u015ft\u00fcr.","30cbf48e":"# PM2.5 De\u011feri i\u00e7in yap\u0131lan hesaplama yukar\u0131da yer almaktad\u0131r.","d652c114":"# Yukar\u0131da vermi\u015f oldu\u011fum hesaplamalar a\u015fa\u011f\u0131daki fonksiyon \u00fczerinden yap\u0131larak as\u0131l veri i\u00e7erisine eklenecektir.","1f55e41d":"# Yukar\u0131daki \u015fekilde ba\u015fl\u0131kta belirtildi\u011fi gibi \u00f6rnek bir g\u00fcn i\u00e7in \u00dcmraniye il\u00e7esinin PM10 zararl\u0131 maddesinin saatlik de\u011fi\u015fimi g\u00f6sterilmi\u015ftir.","82f6f23e":"** \u00d6rnek olarak Kandilli verilerinin hangi aral\u0131klarda de\u011fer verdi\u011fini g\u00f6rmekteyiz. **","7b1bbac5":"# So2 De\u011feri i\u00e7in yap\u0131lan hesaplama yukar\u0131da yer almaktad\u0131r. ","06ecefbf":"# Yukar\u0131daki kod o g\u00fcn o saat i\u00e7erisinde hesaplanan de\u011ferlerin hangi s\u0131n\u0131rlar i\u00e7erisinde oldu\u011funu g\u00f6stermeye yaramaktad\u0131r.","49a50c1c":"** Sitede yap\u0131lm\u0131\u015f olan hesaplamalar ve g\u00f6sterimler yazm\u0131\u015f oldu\u011fumuz kodlar ile birlikte yap\u0131lm\u0131\u015ft\u0131r. **","7923078d":"# Veri i\u00e7erisinde bulunan \u015fehirler ve \u015fehirlere ait olan bilgiler a\u015fa\u011f\u0131da listelenmi\u015ftir.\n**[Burada verdi\u011fim](http:\/\/havaizleme.gov.tr) adresten al\u0131nan verilere g\u00f6re alttaki de\u011ferler g\u00f6z \u00f6n\u00fcne al\u0131narak hava kalitesi indeksi hesaplanmaktad\u0131r.**","f6bb176c":"# 11158 Sat\u0131r ve 97 S\u00fctunu i\u00e7erisinde bar\u0131nd\u0131rmaktad\u0131r. Her il\u00e7e i\u00e7in 8 ayr\u0131 \u00f6zelli\u011fin bulundu\u011fu veride 12 ayr\u0131 il\u00e7eye yer verilmi\u015ftir. Ek olarak tarih bilgileri ilk s\u00fctun i\u00e7erisinde bulunmaktad\u0131r.","863d0d66":"** Eksik veriler veri ilk okundu\u011funda 0 ile doldurulmu\u015ftur. Verdi\u011fimiz [link](http:\/\/havaizleme.gov.tr) i\u00e7erisinde anla\u015f\u0131ld\u0131\u011f\u0131 \u00fczere hesaplanmayan de\u011ferlerin \u00e7ok bir \u00f6nemi olmamakla birlikte hesaplanan de\u011ferler \u00fczerinden hava kalitesi indeksi hesaplanmaktad\u0131r. Verilerin eksik olup olmad\u0131\u011f\u0131 kontrol edilmi\u015ftir. **","0f5a3a02":"# VER\u0130 ANAL\u0130Z\u0130","aaebbd8c":"# Hava kalitesi indeksi her bir de\u011fer i\u00e7in farkl\u0131 olarak hesaplanmaktad\u0131r. Her biri a\u015fa\u011f\u0131da farkl\u0131 fonksiyonlar i\u00e7erisinde hesaplanarak veri i\u00e7erisine eklenecektir.","27150bee":"# No2 De\u011feri i\u00e7in yap\u0131lan hesaplama yukar\u0131da yer almaktad\u0131r.","f6342dac":"# Yukar\u0131da grafikte, veri i\u00e7indeki t\u00fcm y\u0131llar\u0131n \u015eirinevler il\u00e7esi i\u00e7in k\u0131rm\u0131z\u0131lar: PM10 ve maviler: SO2 olmak \u00fczere de\u011fi\u015fimi g\u00f6sterilmi\u015ftir.","1e2fdc57":"# PM10 De\u011feri i\u00e7in yap\u0131lan hesaplama yukar\u0131da yer almaktad\u0131r.","6d4de65f":"# O3 De\u011feri i\u00e7in yap\u0131lan hesaplama yukar\u0131da yer almaktad\u0131r."}}