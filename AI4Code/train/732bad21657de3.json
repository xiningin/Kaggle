{"cell_type":{"4686e3a5":"code","a52ba964":"code","9c428f82":"code","9d1416eb":"code","89a7eebb":"code","419e91dd":"code","081d0bea":"code","a6201d09":"code","c89ed7c7":"code","52180c4a":"code","8eb0fcc6":"code","c4ac3c95":"code","c69ce5b4":"code","faf9ec2b":"code","083a4e39":"code","b9ccdc78":"code","39a4deaa":"code","f71a392c":"code","1413cb95":"code","6a3f3401":"code","afafcd81":"code","b1f1a8bd":"code","7cfb049c":"code","1f909eab":"code","07aeebe6":"code","f0d68642":"code","5d212a35":"code","223b4e74":"code","771168a8":"markdown","ca572ed3":"markdown","aa79333b":"markdown","ebc2ac8a":"markdown","0a1a3b60":"markdown","f0ce12b2":"markdown","6c99c339":"markdown","d9f81810":"markdown","fe02e42a":"markdown","2077f22a":"markdown","adf0e5c5":"markdown","9a7dc648":"markdown","c0ac41b6":"markdown","de777eb4":"markdown"},"source":{"4686e3a5":"import pandas as pd\nimport ast\nfrom collections import defaultdict\nimport numpy as np\nimport warnings\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom plotnine import *\nfrom scipy import stats\nfrom scipy.stats import norm\n\nwarnings.filterwarnings(\"ignore\")","a52ba964":"# load bechdel data\nbechdel_df = pd.read_csv('..\/input\/movie-bechdel-test-scores\/Bechdel_detailed.csv')\nbechdel_df.rename(columns={'rating': 'bt_score'}, inplace=True) # I find the name rating a little confusing\nbechdel_df = bechdel_df.dropna().reset_index(drop=True)\nbechdel_df.head()","9c428f82":"# load imdb id and tmdb id data\nlinks_df = pd.read_csv('..\/input\/the-movies-dataset\/links.csv', index_col=0)\nlinks_df.head()","9d1416eb":"# Load movie credits data\ncredits_df = pd.read_csv('..\/input\/the-movies-dataset\/credits.csv')\ncredits_df.head()","89a7eebb":"bechdel_df = pd.merge(bechdel_df, links_df, left_on='imdbid', right_on='imdbId', how='inner').drop(columns=['imdbId'])\nbechdel_df = pd.merge(bechdel_df, credits_df, left_on='tmdbId', right_on='id', how='inner').drop(columns=['imdbid', 'submitterid', 'date', 'visible', 'tmdbId', 'id_x', 'id_y'])\nbechdel_df","419e91dd":"count1, count2 = 0, 0\nfor index, row in bechdel_df.iterrows():\n    cast_list = ast.literal_eval(row['cast'])\n    crew_list = ast.literal_eval(row['crew'])\n    if len(cast_list) == 0:\n        count1 += 1\n    if len(crew_list) == 0:\n        count2 += 1\nprint('Empty cast percentage:', str('{:.2f}'.format(count1\/len(bechdel_df) * 100))+'%')\nprint('Empty crew percentage:', str('{:.2f}'.format(count2\/len(bechdel_df) * 100))+'%')","081d0bea":"bechdel_df = bechdel_df[(bechdel_df['cast'] != '[]') & (bechdel_df['crew'] != '[]')].reset_index(drop=True)\nbechdel_df","a6201d09":"bechdel_df.groupby('year')['bt_score'].count().to_frame().tail(20)\n# strange that we don't have recent movies anymore...\n# Having more recent movies might have been more informative\n# but let's analyze what we have","c89ed7c7":"%pip install gender-guesser","52180c4a":"import gender_guesser.detector as gender\nd = gender.Detector()","8eb0fcc6":"gender_df = pd.DataFrame(columns=[\n    'cast_total_num', \n    'cast_female_num', \n    'cast_male_num', \n    'cast_unknown_num',\n    'crew_total_num', \n    'crew_female_num', \n    'crew_male_num',\n    'crew_unknown_num',\n    'Directing_total', \n    'Directing_female',\n    'Directing_male',\n    'Directing_unknown',\n    'Writing_total',\n    'Writing_female',\n    'Writing_male',\n    'Writing_unknown',\n    'Production_total',\n    'Production_female',\n    'Production_male',\n    'Production_unknown',\n    ])\ngender_df.head()","c4ac3c95":"overview_info = defaultdict(int)\n\nfor index, row in bechdel_df.iterrows():\n    cast_info, crew_info, crew_department = defaultdict(int), defaultdict(int), defaultdict(int)\n    cast_list = ast.literal_eval(row['cast'])\n    crew_list = ast.literal_eval(row['crew'])\n\n    # count everything in cast\n    for cast in cast_list:\n        if cast['gender'] == 2: # male\n            cast_info['male'] += 1\n        elif cast['gender'] == 1: # female\n            cast_info['female'] += 1\n        elif cast['gender'] == 0: # unknown gender so we predict from first name\n            first_name = cast['name'].split(' ')[0]\n            predicted_gender = d.get_gender(first_name)\n            if predicted_gender == 'male' or predicted_gender == 'mostly_male':\n                cast_info['male'] += 1\n            elif predicted_gender == 'female' or predicted_gender == 'mostly_female':\n                cast_info['female'] += 1\n            elif predicted_gender == 'unknown' or predicted_gender == 'andy':\n                cast_info['unknown'] += 1\n        else:\n            print(f'Oops1 index{index} is unusal: {cast}')\n    gender_df.at[index, 'cast_total_num'] = len(cast_list)\n    gender_df.at[index, 'cast_female_num'] = cast_info['female']\n    gender_df.at[index, 'cast_male_num'] = cast_info['male']\n    gender_df.at[index, 'cast_unknown_num'] = cast_info['unknown']\n\n    # count evetything in crew\n    for crew in crew_list:\n        if crew['gender'] == 2:\n            crew_info['male'] += 1\n            crew_department[str(crew['department'])+'_male'] += 1\n            crew_department[str(crew['department'])+'_total'] += 1\n        elif crew['gender'] == 1:\n            crew_info['female'] += 1\n            crew_department[str(crew['department'])+'_female'] += 1\n            crew_department[str(crew['department'])+'_total'] += 1\n        elif crew['gender'] == 0:\n            first_name = crew['name'].split(' ')[0]\n            predicted_gender = d.get_gender(first_name)\n            if predicted_gender == 'male' or predicted_gender == 'mostly_male':\n                crew_info['male'] += 1\n                crew_department[str(crew['department'])+'_male'] += 1\n            elif predicted_gender == 'female' or predicted_gender == 'mostly_female':\n                crew_info['female'] += 1\n                crew_department[str(crew['department'])+'_female'] += 1\n            elif predicted_gender == 'unknown' or predicted_gender == 'andy':\n                crew_info['unknown'] += 1\n                crew_department[str(crew['department'])+'_unknown'] += 1\n            crew_department[str(crew['department'])+'_total'] += 1\n        else:\n            print(f'Oops2 index{index} is unusal: {crew}')\n    gender_df.at[index, 'crew_total_num'] = len(crew_list)\n    gender_df.at[index, 'crew_female_num'] = crew_info['female']\n    gender_df.at[index, 'crew_male_num'] = crew_info['male']\n    gender_df.at[index, 'crew_unknown_num'] = crew_info['unknown']\n\n    # aggregate all counts to overview data\n    overview_info['cast_total'] += len(cast_list)\n    for cast_gender, count in cast_info.items():\n        overview_info['cast_'+str(cast_gender)] += count\n    overview_info['crew_total'] += len(crew_list)\n    for crew_gender, count in crew_info.items():\n        overview_info['crew_'+str(crew_gender)] += count\n    for department, count in crew_department.items():\n        overview_info[department] += count\n        gender_df.at[index, department] = count\ngender_df = gender_df.fillna(0)","c69ce5b4":"gender_df.tail(10)","faf9ec2b":"print('Percentage of unknowns in Cast:', str('{:.2f}'.format(overview_info['cast_unknown']\/overview_info['cast_total'] * 100))+'%')\nprint('Percentage of unknowns in Crew:', '{:.2f}'.format(overview_info['crew_unknown']\/overview_info['crew_total'] * 100)+'%')\nprint('Percentage of unknowns in Directing:', str('{:.2f}'.format(overview_info['Directing_unknown']\/overview_info['Directing_total'] * 100))+'%')\nprint('Percentage of unknowns in Writing:', str('{:.2f}'.format(overview_info['Writing_unknown']\/overview_info['Writing_total'] * 100))+'%')\nprint('Percentage of unknowns in Production:', str('{:.2f}'.format(overview_info['Production_unknown']\/overview_info['Production_total'] * 100))+'%')","083a4e39":"bechdel_df['cast_female_ratio'] = gender_df['cast_female_num'] \/ gender_df['cast_total_num']\nbechdel_df['crew_female_ratio'] = gender_df['crew_female_num'] \/ gender_df['crew_total_num']\nbechdel_df['directing_female_ratio'] = gender_df['Directing_female'] \/ gender_df['Directing_total']\nbechdel_df['writing_female_ratio'] = gender_df['Writing_female'] \/ gender_df['Writing_total']\nbechdel_df.head()","b9ccdc78":"bechdel_df.isna().sum()","39a4deaa":"bechdel_df_no_nan = bechdel_df.dropna().reset_index(drop=True)\nbechdel_df_no_nan","f71a392c":"bechdel_df_no_nan['dubious'].value_counts()","1413cb95":"bechdel_df_no_nan_no_dubious = bechdel_df_no_nan[bechdel_df_no_nan['dubious']==0].reset_index(drop=True)\nbechdel_df_no_nan_no_dubious","6a3f3401":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x=\"cast_female_ratio\")) + \n    geom_histogram() + \n    labs(\n        title = 'Histogram of Female Cast Ratio',\n        x = 'Female Cast Ratio',\n        y = 'Frequency'\n    )\n)","afafcd81":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x=\"crew_female_ratio\")) + \n    geom_histogram() + \n    labs(\n        title = 'Histogram of Female Crew Ratio',\n        x = 'Female Crew Ratio',\n        y = 'Frequency'\n    )\n)","b1f1a8bd":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x=\"directing_female_ratio\")) + \n    geom_histogram() + \n    labs(\n        title = 'Histogram of Female Directing Ratio',\n        x = 'Female Directing Ratio',\n        y = 'Frequency'\n    )\n)","7cfb049c":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x=\"writing_female_ratio\")) + \n    geom_histogram() + \n    labs(\n        title = 'Histogram of Female Writing Ratio',\n        x = 'Female Writing Ratio',\n        y = 'Frequency'\n    )\n)","1f909eab":"bechdel_df_no_nan_no_dubious.groupby('bt_score').mean()","07aeebe6":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x='bt_score', y='cast_female_ratio')) + \n        stat_summary() + \n    labs(\n        title = 'Summary Statistics of Cast Female Ratio',\n        x = 'Bechdel Test Score', \n        y = 'Cast Female Ratio',\n    ) \n)","f0d68642":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x='bt_score', y='crew_female_ratio')) + \n        stat_summary() + \n    labs(\n        title = 'Summary Statistics of Crew Female Ratio',\n        x = 'Bechdel Test Score', \n        y = 'Crew Female Ratio',\n    )\n)","5d212a35":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x='bt_score', y='directing_female_ratio')) + \n        stat_summary() + \n    labs(\n        title = 'Summary Statistics of Directing Female Ratio',\n        x = 'Bechdel Test Score', \n        y = 'Directing Female Ratio',\n    )\n)","223b4e74":"(ggplot(bechdel_df_no_nan_no_dubious,\n        aes(x='bt_score', y='writing_female_ratio')) + \n        stat_summary() + \n    labs(\n        title = 'Summary Statistics of Writing Female Ratio',\n        x = 'Bechdel Test Score', \n        y = 'Writing Female Ratio',\n    )\n)","771168a8":"There are many movies in df that have a ratio of 0. Pretty sad. \n\nNow, let's check the means of the 4 groups.","ca572ed3":"Let's check the dubious movies.","aa79333b":"Just by looking at the numbers, it seems that a higher female ratio is correlated with a higher bechdel score. Let's visualize this relationship.","ebc2ac8a":"After merging the three dataframes, we can already see a lot of movies being dropped because of missing information.\n\nTo make things worse, we can see plenty of empty values in cast and crew. Let's calculate the percentage of empty values and see what we should do.","0a1a3b60":"This is not bad at all! Let's drop them then.","f0ce12b2":"# EDA - Data Visualization","6c99c339":"## Extract cast & crew Gender Info\n\nSince there are too many unknowns, I am going to predict the gender from first names. \n\nPackage: https:\/\/pypi.org\/project\/gender-guesser\/","d9f81810":"I'd say this amount of unknown genders is perfectly okay.\n\nNext, we need to think about what gender information we really need.\n\nWhat related closely to female representation can be:\n- Cast female ratio\n- Crew female ratio\n- Director female ratio \n<!-- (or we can make it into a binary variable) -->\n- Writer female ratio\n <!-- (or we can make it into a binary variable) -->\n<!-- - Producer female ratio -->","fe02e42a":"## Load 3 datasets\n\n- The Bechdel data (only has imdb id)\n- The credits data (only has tmdb id)\n- The links data, which has both imdb id and tmdb id, so that we can join the three datasets together to get the movies we want.","2077f22a":"# Conclusion: The higher the female ratio in cast and crew, the more likely is the movie to pass the Bechdel Test. And vice versa.","adf0e5c5":"If the error bars overlap, it means that the group means are not statistically different. We can see that the groups with the bechdel test score of 0, 1 and 2 are not always different, but they are different from the group with bechdel score of 3.","9a7dc648":"# How can we bridge the gap between on-screen and off-screen metrics of female representation in movies?\n\nWhen we talk about female representation in movies, the Bechdel Test is not the only metric. In fact, I did not really know what the Bechdel Test is until a few months ago. What I thought about first when considering female representation is, for example, if the director is a female. \n\nThe Bechdel Test is for on-screen representation, while gender ratios of cast and crew are off-screen representation. \n\n**So the question arises if these metrics are correlated. How can we bridge the gap between on-screen and off-screen metrics?**\n\nBefore the analysis in this notebook, I have done some data cleaning and exploraroty data analysis on the two datasets seperately:\n\n- https:\/\/www.kaggle.com\/alisonyao\/bechdel-vis\n\n- https:\/\/www.kaggle.com\/alisonyao\/gender-ratio-in-cast-and-crew","c0ac41b6":"## Inner join 3 datasets and clean up empty values","de777eb4":"Not many Nans. Let's drop them. "}}