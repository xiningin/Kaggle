{"cell_type":{"85277a4d":"code","a7c38f57":"code","91210850":"code","7f8c7fdf":"code","d61afd20":"code","4fcbbe82":"code","da4ea7d1":"code","18052889":"code","7f5fe3e6":"code","dbf593bf":"code","d15d9a51":"code","8f16e29b":"code","161a7aa0":"code","81166bf7":"code","6d5674d6":"code","924fa2b1":"code","53dbba76":"code","e1673ce3":"code","50add416":"code","9b5356e0":"code","22727d45":"code","afdc46f8":"code","e55da67d":"code","39876f7f":"code","a83c1c96":"code","674ca258":"code","cee68bef":"code","587b0870":"code","47893bcd":"markdown","e0935d3e":"markdown","56ec7cd6":"markdown","b570c4ef":"markdown","e87b7c29":"markdown","908ed77f":"markdown"},"source":{"85277a4d":"!pip install -U imbalanced-learn","a7c38f57":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom imblearn.over_sampling import KMeansSMOTE\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split","91210850":"data = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')","7f8c7fdf":"y1 = data['Amount']\ny2 = data['Class']","d61afd20":"a = []\na.append((y2 == 0).sum())\na.append((y2 == 1).sum())","4fcbbe82":"a[1]\/a[0]","da4ea7d1":"km = KMeansSMOTE(k_neighbors=4,random_state=42,n_jobs=-1,cluster_balance_threshold=0.0017304750013189597)","18052889":"x = data.iloc[:,:-1]","7f5fe3e6":"xres, yres = km.fit_resample(x, y2)","dbf593bf":"rfc = RandomForestClassifier(n_estimators=400,n_jobs=-1,max_depth=6)","d15d9a51":"x_train,x_val,y_train,y_val = train_test_split(xres,yres,random_state=42,test_size=0.1)","8f16e29b":"rfc.fit(x_train, y_train)","161a7aa0":"from sklearn.metrics import plot_confusion_matrix","81166bf7":"plot_confusion_matrix(rfc,x_val,y_val,cmap='Blues');","6d5674d6":"from sklearn.ensemble import IsolationForest","924fa2b1":"ifr = IsolationForest(n_estimators=300,n_jobs=-1,random_state=42,contamination='auto')","53dbba76":"ans = ifr.fit_predict(xres, yres)","e1673ce3":"t = xres[ans == -1]['Time']\nam = xres[ans == -1]['Amount']","50add416":"anti_t = xres[ans  == 1]['Time']\nanti_am = xres[ans == 1]['Amount']","9b5356e0":"am.shape","22727d45":"x.shape","afdc46f8":"y1","e55da67d":"one = pd.DataFrame(y1,columns=['Amount'])","39876f7f":"one['Class'] = y2","a83c1c96":"pd.DataFrame(data.corr()['Amount']).T","674ca258":"plt.plot(range(am.shape[0]), am,label='Outliers')\nplt.plot(range(anti_am.shape[0]), anti_am,color='r',label='Not')\nplt.title('Outliers vs Not');\nplt.ylabel('Amount')\nplt.legend()","cee68bef":"outliers = (ans == -1).sum()","587b0870":"plt.bar(range(-1,2,2),[outliers, ans.shape[0] - outliers])\nplt.xticks(range(-1,2,2),['Outliers','Normal'])\nplt.title('Comparing Outliers and Normal Distribution');","47893bcd":"# Confusion Matrix\n* A fancy name for false_positives and false_negative Compared with true_positive and true_negative\n* Thus giving an overview for classified data","e0935d3e":"# Comparing amounts\n* **Amounts are the main indicator of fraud**\n* A fraud transcation or a phisher will get out with most\n* Thus to explain fraud the amount is a very important indicator","56ec7cd6":"## Clearly\n* We can find out that amount spent by Outliers are way greater than simple transactions","b570c4ef":"# Model\n* Now that we have the resultant oversampled data\n* We can train a stastifactory model to detect the fraud\n* Choice of RanddomForestClassifier is inherited from fact\n* **Trees tend to give better results and explore the features**","e87b7c29":"# Outliers\n* Fact 1 ==> Mostly outliers are fraud\n* Fact 2 ==> When an anamoly occurs data tend to skew\n* On basis of two facts the betterment of the oversampled can be determined","908ed77f":"# Imalance to Balance\n* The imbalanced-learn is good library for fitting\n* The thing it does it finds the nearest points\n* Collect the features of the points\n* Train the model accordingly and Assign clusters"}}