{"cell_type":{"a8bb431a":"code","87cd4699":"code","0d414ddb":"code","9d67a693":"code","5b82813b":"code","1ca2f44e":"code","966269b3":"code","4165149a":"code","71b399b4":"code","fadc1716":"code","98f10c97":"code","bdb4a784":"code","10a38672":"code","e72e9585":"code","92ef7181":"code","48a35e60":"markdown","ec7d9109":"markdown","e2cd9cf7":"markdown","8a8a654f":"markdown","d209c681":"markdown","e95d9d3b":"markdown"},"source":{"a8bb431a":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\n\nfrom xgboost import XGBClassifier, XGBRegressor","87cd4699":"data = pd.read_csv('..\/input\/smart-grid-stability\/smart_grid_stability_augmented.csv')","0d414ddb":"data","9d67a693":"data.info()","5b82813b":"def preprocess_inputs(df, task='classification'):\n    df = df.copy()\n    \n    if task == 'classification':\n        df = df.drop('stab', axis=1)\n        \n        y = df['stabf'].copy()\n        X = df.drop('stabf', axis=1).copy()\n        \n    elif task == 'regression':\n        df = df.drop('stabf', axis=1)\n        \n        y = df['stab'].copy()\n        X = df.drop('stab', axis=1).copy()\n    \n    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, shuffle=True, random_state=1)\n    \n    return X_train, X_test, y_train, y_test","1ca2f44e":"X_train, X_test, y_train, y_test = preprocess_inputs(data, task='classification')","966269b3":"X_train","4165149a":"y_train","71b399b4":"clf = XGBClassifier()\nclf.fit(X_train, y_train)\nprint(\"Classifier trained.\")","fadc1716":"print(\"Classification Test Accuracy: {:.2f}%\".format(clf.score(X_test, y_test) * 100))","98f10c97":"X_train, X_test, y_train, y_test = preprocess_inputs(data, task='regression')","bdb4a784":"X_train","10a38672":"y_train","e72e9585":"reg = XGBRegressor()\nreg.fit(X_train, y_train)\nprint(\"Regressor trained.\")","92ef7181":"print(\"Regression Test R^2 Score: {:.5f}\".format(reg.score(X_test, y_test)))","48a35e60":"# Task for Today  \n\n***\n\n## Smart Grid Stability Prediction  \n\nGiven *data about smart grids*, let's try to predict if a given grid is **stable** or not, and also predict a numerical estimate of its **stability**.  \n  \nWe will use both classification and regression models from XGBoost to make our predictions.","ec7d9109":"# Preprocessing","e2cd9cf7":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/6I2Xf8AfyTk","8a8a654f":"# Getting Started","d209c681":"# Classification Task","e95d9d3b":"# Regression Task"}}