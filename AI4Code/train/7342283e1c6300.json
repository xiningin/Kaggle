{"cell_type":{"a36d3120":"code","7cd3ba9d":"code","8ba02aeb":"code","6d39accb":"code","61d6a1fb":"code","670f994b":"code","d2b0afac":"code","d8dcae40":"code","99f06605":"code","7617aacc":"code","1d6b5247":"code","f7c0083e":"code","98ee0d75":"code","74f190da":"code","1c359261":"code","fd317a67":"code","cb356ded":"code","7b3d103c":"code","5d06aed1":"code","b54eaee3":"code","5bd7b74f":"code","a7b8fd5b":"markdown","3cf396ca":"markdown","e52f0a3a":"markdown","122724f2":"markdown","448d399a":"markdown","90eb516d":"markdown","ee3e6adf":"markdown"},"source":{"a36d3120":"# kita akan mengimport library, disini kita menggunakan numpy, pandas dan matplotlib\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# kita membutuhkan LabelEncoder untuk mengubah data gender menjadi nilai numerik\nfrom sklearn.preprocessing import LabelEncoder\n\n# kemudian StandarScaler untuk membuat pengelompokan k-means dan menganalisis komponen utama \/ PRINCIPAL COMPONENT ANALYSIS (PCA)\nfrom sklearn.preprocessing import StandardScaler\n\n# kemudian tentu kita membutuhkan k-means dan juga membutuhkan dekomposition analisis komponen utama \/ PCA\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA","7cd3ba9d":"# memuat data Mall Customers dengan format csv, \"data\" merupakan nama datanya\n# pd.read.csv => untuk mengimport\ndata = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","8ba02aeb":"#melihat datanya \ndata","6d39accb":"# menghapus kolom customerID\ndata.drop('CustomerID', axis=1, inplace=True)","61d6a1fb":"# mengubah nilai male dan female menjadi satu dan nol, menggunakan LabelEnccoder\nencoder = LabelEncoder()\n\n# kolom gender akan sama dengan encoder dot fit_transform kolom gender\ndata['Gender'] = encoder.fit_transform(data['Gender'])\n\n# membuat variabel  gender_mappings yang akan memberikan kita index dan label\ngender_mappings = {index: label for index, label in enumerate(encoder.classes_)}\n\n# dapat dilihat Female : 0 dan Male : 1\ngender_mappings","670f994b":"# lanjut menskalakan data menggunakan StandarScaler yang di impor\nscaler = StandardScaler()\n\n# buat variiabel scaled_data, dan mengubahnya menjadi DataFrame\nscaled_data = pd.DataFrame(scaler.fit_transform(data), columns=data.columns) ","d2b0afac":"# melihat tampilannya \/ datanya\nscaled_data","d8dcae40":"# Menetapkan beberapa jumlah maksimum clustering, kami memasukkan 50,\n# menyesuaikan algoritma clustering k-meansn baru ke data setiap 50 kali dengan jumlah cluster baru mulai dari 1 hingga 50\nmax_clusters = 50","99f06605":"# kmeans akan memberikan kita model agar sesuai dengan data yang kita gunakan, dan menentukan jumlah cluster masing masing.\n# kita juga akan menentukan n_init, karena inisialisasi acak dari algoritma clustering k-means menjalankannya 10 kali dan kemudian memilih hasil terbaik dari 10 itu (semakin akurat clustering semakin bagus)\nkmeans_tests = [KMeans(n_clusters=i, n_init=10) for i in range(1, max_clusters)]\n\n# setelah itu menghitung inersia masing masing model\ninertias = [kmeans_tests[i].fit(scaled_data).inertia_ for i in range(len(kmeans_tests))]","7617aacc":"#memplot inersia sebagai fungsi dari jumlah cluster\n# Ukuran gambar\nplt.figure(figsize=(7, 5))\n\n# plot di x memiliki range kisaran 1 hingga max_clusters dan di y adalah inertias\nplt.plot(range(1, max_clusters), inertias)\n\n# meletakkan label di x\nplt.xlabel(\"Number of Clusters\")\n\n#meletakkan label di y\nplt.ylabel(\"Inertia\")\n\n# menunjukkan hasilnya\nplt.title(\"Choosing the Number of Cluster\")\nplt.show()","1d6b5247":"# membuat model kmeans dan menyesuaikan dengan scaled_data\nkmeans = KMeans(n_clusters=10, n_init=10)\nkmeans.fit(scaled_data)","f7c0083e":"# membuat variabel clusters, mendapatkan cluster dengan memanggil kmeans dot predict, kemudain di panggil\nclusters = kmeans.predict(scaled_data)\nclusters\n\n# sehingga dapat dilihat hasil dari 200 data, sudah di kelompokkan menjadi 10 klaster (ada yang 0, 1, 2, 3 sampai 9)","98ee0d75":"# membuat objek PCA menggunakan sklearns pca, n_komponents akan dibagi menjadi 2 (tujuannya untuk membuat grafik secara visul)\n# menggunakan pca untuk mendapatkan hasil yang lebih baik dari data yang digunakan, dan juga membantu memahami, melihat data dengan cara yang lebih baik lagi\npca = PCA(n_components=2)\n\n# selanjutnya mengurangi data, kita memiliki 4 fitur di datanya jadi tidak bisa membuat grafik dengan 4 ruang maka dari itu dibagi menjadi 2 grafik\n# sehingga yang sekarang memiliki 2 fitur dan dalam 2 ruang, sehingga pembuatan grafik akan mudah\nreduced_data = pd.DataFrame(pca.fit_transform(scaled_data), columns=['PC1', 'PC2'])\n# (pca.fit_transform(scaled_data) => mengembalikan numpy array dan diubah kembali menjadi dataframe\n# memberi nama kolom dengan nama pc1 dan pc2","74f190da":"# melihat hasilnya, ada 200 data dan sudah dikompresi menjadi 2 yaitu pc1 dan pc2.. yang tadinya ada 4 fitur sekarang menjadi 2 fitur\nreduced_data","1c359261":"# memanggil atribut cluster_centers_\nkmeans.cluster_centers_\n\n# yang muncul adalah array dengan 4 kolom","fd317a67":"# disini kami menggunakan pca model yang sama, yang telah disesuaikan untuk mengubah kembali menjadi 2 dimensi\nreduced_centers = pca.transform(kmeans.cluster_centers_)","cb356ded":"# melihat hasilnya  dengan menggunakan reduced_centers dan akan berubah menjadi 2 dimensi\nreduced_centers","7b3d103c":"# kemudian kita akan menambahkan colom cluster\nreduced_data['cluster'] = clusters","5d06aed1":"# membuka colom yang sudah dibuat\nreduced_data\n\n# bisa kita lihat hasilnya ada pc1 pc2 dan juga kolom cluster yang tadi dibuat","b54eaee3":"# kemudian kita akan mengubah pc2 untuk mendapatkan nilai pc2 sebagai nilai dari cluster\nreduced_data[reduced_data['cluster'] == 7].loc[:, 'PC2']","5bd7b74f":"# yang kita lakukan disini adalah membuat 10 plot data dan setiap cluster akan memiliki warna yang berbeda,\nplt.figure(figsize=(14, 10))\n\nplt.scatter(reduced_data[reduced_data['cluster'] == 0].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 0].loc[:, 'PC2'], color='red')\nplt.scatter(reduced_data[reduced_data['cluster'] == 1].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 1].loc[:, 'PC2'], color='blue')\nplt.scatter(reduced_data[reduced_data['cluster'] == 2].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 2].loc[:, 'PC2'], color='yellow')\nplt.scatter(reduced_data[reduced_data['cluster'] == 3].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 3].loc[:, 'PC2'], color='orange')\nplt.scatter(reduced_data[reduced_data['cluster'] == 4].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 4].loc[:, 'PC2'], color='cyan')\nplt.scatter(reduced_data[reduced_data['cluster'] == 5].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 5].loc[:, 'PC2'], color='magenta')\nplt.scatter(reduced_data[reduced_data['cluster'] == 6].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 6].loc[:, 'PC2'], color='brown')\nplt.scatter(reduced_data[reduced_data['cluster'] == 7].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 7].loc[:, 'PC2'], color='pink')\nplt.scatter(reduced_data[reduced_data['cluster'] == 8].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 8].loc[:, 'PC2'], color='green')\nplt.scatter(reduced_data[reduced_data['cluster'] == 9].loc[:, 'PC1'], reduced_data[reduced_data['cluster'] == 9].loc[:, 'PC2'], color='purple')\n\n# meletakkan label sehingga dapat melihat xlabel adalah untuk pc1, dan ylabel untuk pc2\nplt.scatter(reduced_centers[:, 0], reduced_centers[:, 1], color='black', marker='x', s=300)\nplt.xlabel('PC1')\nplt.ylabel('PC2')\n\n# menampilkan hasil\nplt.show()","a7b8fd5b":"# PCA (Principal componen Analysis) => analisis komponen utama\nmemvisualisasikan data, karna tadi kita sudah melakukan processing dan clustering di awal, jadi data sudah di bagi menjadi beberapa kelompok yaitu dari 0, 1, 2, 3, sampai 9. lamgkah selanjutnya kita akan memvisualisasikannya.","3cf396ca":"disini kita punya data di kaggle, jadi datanya ini tidak berlabel tentang pelanggan mall atau mall customer dan menggunakan algoritma pengelompokan K-means untuk melakukan segmentasi pasar.\n\njadi kalau kita lihat datanya, terdapat kumpulan data yang sangat sederhana berjumlah 200 data dan memiliki 4 kolom diantaranya ada jenis kelamin, usia, pendapatan tahunan dan skor pengeluaran berdasarkan perilaku pelanggan\n\nkemudian kita akan meng-clustring \/ mengelompokkan data pasar menjadi beberapa segmen dan dapat memvisualisasikannya menggunakan analisis komponen utama","e52f0a3a":"# Getting Started","122724f2":"# Preprocessing","448d399a":"bisa dilihat data di atas terdiri dari 200 baris, sehingga kita mengetahui jika melakukan pengelompokan dengan k-means tidak akan menjadi masalah. yang akan dilakukan adalah segmentasi di dalam data yang memiliki pola dasar. Pertama data akan di preprocessing dulu","90eb516d":"# Clustering (Pengelompokan)","ee3e6adf":"# Data Visualization\n\nkemudian kita masuk pada data visualization, tadi kita sudah melakukan preprocessing dan juga melakukan clustering, di data visualization ini kita akan  memplot masing masing dan mewarnai data berdasarkan penugasan clusternya."}}