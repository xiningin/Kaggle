{"cell_type":{"d6ab5a50":"code","b403161d":"code","da622321":"code","9ae7f201":"code","ab87c728":"code","8566c937":"code","77da698e":"code","7a2c132f":"code","3b59ebca":"code","a7efc5b5":"code","dc8075e7":"code","3b43171c":"code","95f62b09":"code","9617f7bd":"code","d220f206":"code","40b7a7c6":"code","9b08549a":"code","4d78a550":"code","f0c5f3fc":"code","fda26722":"markdown"},"source":{"d6ab5a50":"import numpy as np\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import KFold","b403161d":"train=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest=pd.read_csv('..\/input\/digit-recognizer\/test.csv')","da622321":"x_train=train.drop(['label'],axis=1)\ny_train=train['label']","9ae7f201":"x_train=x_train.astype('float32')\ntest=test.astype('float32')\n","ab87c728":"x_train=x_train\/255\ntest=test\/255","8566c937":"x_train=x_train.values.reshape(-1,28,28,1)\ntest=test.values.reshape(-1,28,28,1)","77da698e":"fig,axes=plt.subplots(4,4,figsize=(15,15))\naxes=axes.ravel()\n\nfor i in np.arange(0,16):\n    axes[i].imshow(x_train[i])\n    axes[i].axis(\"off\")","7a2c132f":"from keras.utils import np_utils\ny_train=np_utils.to_categorical(y_train,10)","3b59ebca":"import keras\nfrom keras.models import Sequential\nfrom keras.optimizers import SGD,Adam,RMSprop\nfrom keras.layers import Flatten,Dense,Conv2D,MaxPooling2D,AveragePooling2D,BatchNormalization,Dropout,Activation\n","a7efc5b5":"model=Sequential()\nmodel.add(Conv2D(32,(3,3),activation=\"relu\",kernel_initializer='he_uniform',input_shape=(28,28,1)))\nmodel.add(MaxPooling2D((2,2)))\nmodel.add(Conv2D(64,(3,3),activation=\"relu\",kernel_initializer=\"he_uniform\"))\nmodel.add(Conv2D(32,(3,3),activation=\"relu\",kernel_initializer=\"he_uniform\"))\nmodel.add(MaxPooling2D((2,2)))\nmodel.add(Flatten())\nmodel.add(Dense(100,activation=\"relu\",kernel_initializer=\"he_uniform\"))\nmodel.add(Dense(100,activation=\"relu\",kernel_initializer=\"he_uniform\"))\nmodel.add(Dense(64,activation=\"relu\",kernel_initializer=\"he_uniform\"))\nmodel.add(Dense(10,activation=\"softmax\"))","dc8075e7":"\nmodel.compile(optimizer=RMSprop(),loss=\"categorical_crossentropy\",metrics=['accuracy'])","3b43171c":"model.summary()","95f62b09":"from keras.utils.vis_utils import plot_model\nplot_model(model,show_shapes=True,show_layer_names=True)","9617f7bd":"scores,histories=list(),list()\nkfolds = KFold(5,shuffle=True,random_state=42)\nfor train_ix,test_ix in kfolds.split(x_train):\n    trainX,trainY,testX,testY=x_train[train_ix],y_train[train_ix],x_train[test_ix],y_train[test_ix]\n    history=model.fit(trainX,trainY,validation_data=(testX,testY),epochs=10,batch_size=32)\n    _,acc=model.evaluate(testX,testY)\n    scores.append(acc)\n    histories.append(history)","d220f206":"for i in range(len(histories)):\n  plt.plot(histories[i].history['accuracy'])\n  plt.plot(histories[i].history['val_accuracy'])\nplt.title('Model Accuracy')\nplt.xlabel('epochs')\nplt.ylabel('accuracy')\nplt.legend(['train','test'],loc=\"upper left\")\nplt.show()","40b7a7c6":"for i in range(len(histories)):\n  plt.subplot(2,2,1)\n  plt.plot(histories[i].history['loss'])\n  plt.plot(histories[i].history['val_loss'])\nplt.xlabel('epochs')\nplt.ylabel('loss')\nplt.title('model loss')\nplt.legend(['train','test'],loc='upper left')\nplt.show()","9b08549a":"ytest=model.predict(test)","4d78a550":"y_pred=np.argmax(ytest,axis=1)\ny_pred","f0c5f3fc":"imageId=list(range(1,len(test)+1))\ny_pred_df=pd.DataFrame({'ImageId':imageId,'Label': y_pred})\ny_pred_df.to_csv('\/kaggle\/working\/prediction.csv',index=False)","fda26722":"# Creating Neural Network"}}