{"cell_type":{"00b3d3b4":"code","b01aa924":"code","0b69c503":"code","3cf54062":"code","e172a473":"code","6a840eae":"code","da6a9443":"code","2c020ff8":"markdown","b8cdbe8e":"markdown"},"source":{"00b3d3b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b01aa924":"import sklearn\nfrom sklearn import datasets\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn import tree","0b69c503":"iris = datasets.load_iris()","3cf54062":"# data split using train_test_split\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\nx = iris.data\ny = iris.target\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)","e172a473":"# model decision tree\nclf = tree.DecisionTreeClassifier()","6a840eae":"# make some score with different cv for comparison\nscores = cross_val_score(clf, x, y, cv = 2)\nprint(scores)\nscores = cross_val_score(clf, x, y, cv = 3)\nprint(scores)\nscores = cross_val_score(clf, x, y, cv = 4)\nprint(scores)\nscores = cross_val_score(clf, x, y, cv = 5)\nprint(scores)\nscores = cross_val_score(clf, x, y, cv = 6)\nprint(scores)","da6a9443":"# log\n# version 1.0 program begin\n# version 2.0 -> cv = 4\n# version 3.0 -> cv = 2,3,4,5,6 (for test purpose)\n# version 4.0 -> use test_data_split to split data in order to increase score #result -> achieved","2c020ff8":"As we can see here, we can improve our score from cv=2 until cv=4. then, as you can see, cv>4 will be overfit because the score is more than 1 and even on cv=5 the result was fluctuate.","b8cdbe8e":"**-----Muhammad Rifqi Setiawan-----**"}}