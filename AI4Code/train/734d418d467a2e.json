{"cell_type":{"93fd648f":"code","13f82359":"code","62852a0c":"code","a7d311ac":"code","42436653":"code","b8a391f8":"code","0a1d8845":"code","eb771fad":"code","51482026":"code","f292f356":"code","3ab35e2d":"markdown","f759f406":"markdown","97a26dc2":"markdown","fc860438":"markdown"},"source":{"93fd648f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13f82359":"train_df = pd.read_csv('\/kaggle\/input\/caiis-dogfood-day-2020\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/caiis-dogfood-day-2020\/test.csv')","62852a0c":"train_df = pd.get_dummies(train_df)\ntest_df = pd.get_dummies(test_df)","a7d311ac":"train_df, test_df = train_df.align(test_df, join='left', axis=1)","42436653":"test_df.drop('target', axis=1)","b8a391f8":"from sklearn.ensemble import RandomForestClassifier\nclf = RandomForestClassifier()\nX = train_df.loc[:, train_df.columns != 'target']\nY = train_df['target']","0a1d8845":"clf.fit(X, Y)","eb771fad":"test_df.fillna(0, inplace=True)\ntest_df.drop('target', axis=1, inplace=True)","51482026":"preds = clf.predict(test_df)","f292f356":"submission = pd.DataFrame({'id': test_df['id'], 'target': preds}).set_index('id')\nsubmission.to_csv('RFbaseline.csv') ","3ab35e2d":"### Predict and write out your submission file","f759f406":"### Train your Random Forest Classifier (Note: no hyperparam optimization)","97a26dc2":"## Getting Started Notebook\n\nIn case you're stuck on how to get started with your first model, here's a baseline using SKLearn's implementation of RandomForest.\n\nIt doesn't do any hyperparam tuning, clever feature engineering or data prep beyond the basics...that's your job for the competition :). ","fc860438":"### Read in Data"}}