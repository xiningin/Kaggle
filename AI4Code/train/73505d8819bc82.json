{"cell_type":{"63060270":"code","897e1121":"code","bcbbea30":"code","93df59e8":"code","34efec7d":"markdown","c12b4bc0":"markdown","26770be1":"markdown","1813d87c":"markdown","cafe58a4":"markdown","02ef10fe":"markdown"},"source":{"63060270":"from IPython.display import YouTubeVideo\nYouTubeVideo('mPFq5KMxKVw', width=800, height=450)","897e1121":"from tensorflow.python.keras.applications import ResNet50\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense, Flatten, GlobalAveragePooling2D\n\nnum_classes = 2\nresnet_weights_path = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'\n\nmy_new_model = Sequential()\nmy_new_model.add(ResNet50(include_top=False, pooling='avg', weights=resnet_weights_path))\nmy_new_model.add(Dense(num_classes, activation='softmax'))\n\n# Say not to train first layer (ResNet) model. It is already trained\nmy_new_model.layers[0].trainable = False","bcbbea30":"my_new_model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])","93df59e8":"from tensorflow.python.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n\nimage_size = 224\ndata_generator = ImageDataGenerator(preprocessing_function=preprocess_input)\n\n\ntrain_generator = data_generator.flow_from_directory(\n        '..\/input\/urban-and-rural-photos\/rural_and_urban_photos\/train',\n        target_size=(image_size, image_size),\n        batch_size=24,\n        class_mode='categorical')\n\nvalidation_generator = data_generator.flow_from_directory(\n        '..\/input\/urban-and-rural-photos\/rural_and_urban_photos\/val',\n        target_size=(image_size, image_size),\n        class_mode='categorical')\n\nmy_new_model.fit_generator(\n        train_generator,\n        steps_per_epoch=3,\n        validation_data=validation_generator,\n        validation_steps=1)","34efec7d":"# Your Turn\n**[Try transfer learning](https:\/\/www.kaggle.com\/kernels\/fork\/532365)** yourself.\n\n---\n**[Deep Learning Course Home Page](https:\/\/www.kaggle.com\/learn\/deep-learning)**\n","c12b4bc0":"### Note on Results:\nThe printed validation accuracy can be meaningfully better than the training accuracy at this stage. This can be puzzling at first.\n\nIt occurs because the training accuracy was calculated at multiple points as the network was improving (the numbers in the convolutions were being updated to make the model more accurate).  The network was inaccurate when the model saw the first training images, since the weights hadn't been trained\/improved much yet.  Those first training results were averaged into the measure above.\n\nThe validation loss and accuracy measures were calculated **after** the model had gone through all the data.  So the network had been fully trained when these scores were calculated.\n\nThis isn't a serious issue in practice, and we tend not to worry about it.","26770be1":"### Fit Model","1813d87c":"# Intro\n\n**This is Lesson 4 in the [Deep Learning](https:\/\/www.kaggle.com\/learn\/deep-learning) track**  \n\nAt the end of this lesson, you will be able to use transfer learning to build highly accurate computer vision models for your custom purposes, even when you have relatively little data.\n\n# Lesson\n","cafe58a4":"# Sample Code\n\n### Specify Model","02ef10fe":"### Compile Model"}}