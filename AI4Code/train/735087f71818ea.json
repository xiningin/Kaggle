{"cell_type":{"da759355":"code","54b65d1a":"code","3e4ce370":"code","c9a8305d":"code","f3a978d8":"code","3117fc99":"code","34db8d90":"code","f024ad2b":"code","ff22a207":"code","a9e4ae9d":"code","a41ab678":"code","b0f25c34":"code","2614647e":"code","13c803fb":"code","268f66e0":"code","42089276":"code","7110be7e":"code","779adce9":"code","b5d205b1":"code","e86b6feb":"code","c084a64f":"code","882a9c3b":"code","db4c485a":"code","e808203b":"code","786d38bd":"code","0d8431e8":"code","c0f9daee":"code","de654b51":"code","8f8912a4":"code","669d2451":"code","b1b9d665":"code","0ca37354":"code","8ee3eab0":"code","d212d778":"code","6b00f84c":"code","498843da":"code","e4c72686":"code","8cd326d0":"code","c2cd150c":"code","c91bba86":"markdown","7bbd15e2":"markdown","fa65dac4":"markdown","090b9688":"markdown","00f9eb61":"markdown","1c836fff":"markdown","e9cfd650":"markdown","07767434":"markdown","00f66457":"markdown","e5bf0129":"markdown","1f1b7210":"markdown","e08e5457":"markdown","08684748":"markdown","61c65290":"markdown","dfd3163f":"markdown","95c45150":"markdown","c13fc40c":"markdown","81c24635":"markdown","6c5c9db8":"markdown"},"source":{"da759355":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","54b65d1a":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nfrom sklearn.preprocessing import LabelEncoder\n\nimport warnings\nwarnings.simplefilter('ignore')","3e4ce370":"df = pd.read_csv('\/kaggle\/input\/heart-failure-prediction\/heart.csv')\ndf","c9a8305d":"df.info()","f3a978d8":"df.describe()","3117fc99":"df[df.duplicated()]","34db8d90":"df['HeartDisease'].value_counts()","f024ad2b":"plt.figure(figsize = (15,5))\nsns.barplot('Age','HeartDisease',data = df)\nplt.show()","ff22a207":"plt.figure(figsize = (8,6))\nplots = sns.countplot('Sex',data = df)\n\n\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height(), '.2f'),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=10, xytext=(0, 8),\n                   textcoords='offset points')","a9e4ae9d":"# Age distribution\n\nsns.histplot(x = 'Age', data=df)","a41ab678":"fig1 = px.scatter(df, x ='Age', y='RestingBP')\nfig1","b0f25c34":"plt.figure(figsize=(15,5))\nsns.regplot( x ='Age', y='RestingBP', data =df,color ='r')\n","2614647e":"fig2 = px.scatter(df, x ='Age', y='RestingBP', color = 'RestingECG')\nfig2","13c803fb":"fig3 = px.sunburst(df,path=['Sex','ChestPainType', 'HeartDisease'], title = 'Chest pain type')\nfig3","268f66e0":"fig3 = px.sunburst(df,path=['Sex','ChestPainType','RestingECG'], color ='HeartDisease', title ='ChestPainType with RestingECG')\nfig3","42089276":"sns.catplot(x='ChestPainType', y='RestingBP', data =df)","7110be7e":"sns.catplot(x='ChestPainType', y='RestingBP',kind = 'swarm', hue= 'Sex' ,data =df)","779adce9":"\nsns.catplot(x='ChestPainType', y='RestingBP',kind = 'box', hue= 'HeartDisease' ,data =df, height=5,aspect = 2)\nplt.show()","b5d205b1":"\nsns.catplot(x='ChestPainType', y='RestingBP',kind = 'box',row = 'Sex', hue= 'HeartDisease' ,data =df)\nplt.show()","e86b6feb":"sns.catplot(x ='Sex', y='HeartDisease',kind = 'bar', hue ='ST_Slope', data = df)","c084a64f":"le = LabelEncoder()\n\ndf['chestpain'] = le.fit_transform(df['ChestPainType'])\ndf['ecg'] = le.fit_transform(df['RestingECG'])\ndf['slope'] = le.fit_transform(df['ST_Slope'])\ndf['angina'] = le.fit_transform(df['ExerciseAngina'])\ndf['sex'] = le.fit_transform(df['Sex'])\n\n","882a9c3b":"df","db4c485a":"df.drop(['ChestPainType','RestingECG','ExerciseAngina','ST_Slope','Sex'],inplace = True, axis = 1)","e808203b":"df","786d38bd":"corr = df.corr()\nplt.subplots(figsize=(15,10))\nsns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns, annot=True, cmap=sns.diverging_palette(220, 20, as_cmap=True))\nsns.heatmap(corr, xticklabels=corr.columns,\n            yticklabels=corr.columns, \n            annot=True,\n            cmap=sns.diverging_palette(220, 20, as_cmap=True))","0d8431e8":"x = df.drop(['HeartDisease'],axis = 1)\ny = df['HeartDisease']","c0f9daee":"x","de654b51":"y","8f8912a4":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2, random_state = 1)","669d2451":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","b1b9d665":"#Logistic report\n\nfrom sklearn.metrics import classification_report \nfrom sklearn.linear_model import LogisticRegression\n\nmodel1 = LogisticRegression(random_state=1) \nmodel1.fit(x_train, y_train) \n\ny_pred1 = model1.predict(x_test) \nprint(classification_report(y_test, y_pred1)) ","0ca37354":"#KNN \n\nfrom sklearn.neighbors import KNeighborsClassifier\n\nmodel2 = KNeighborsClassifier() \nmodel2.fit(x_train, y_train)\n\ny_pred2 = model2.predict(x_test) \nprint(classification_report(y_test, y_pred2))\n","8ee3eab0":"#SVC\n\nfrom sklearn.svm import SVC\n\nmodel3 = SVC(random_state=1) \nmodel3.fit(x_train, y_train)\n\ny_pred3 = model3.predict(x_test)\nprint(classification_report(y_test, y_pred3)) ","d212d778":"#Naive Bayes\nfrom sklearn.naive_bayes import GaussianNB\n\nmodel4 = GaussianNB()\nmodel4.fit(x_train, y_train) \ny_pred4 = model4.predict(x_test) \nprint(classification_report(y_test, y_pred4))","6b00f84c":"#Decision tree\n\nfrom sklearn.tree import DecisionTreeClassifier\n\nmodel5 = DecisionTreeClassifier(random_state=1) \nmodel5.fit(x_train, y_train) \n\ny_pred5 = model5.predict(x_test) \nprint(classification_report(y_test, y_pred5))","498843da":"#Random Forest\nfrom sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(random_state=1)\nmodel.fit(x_train, y_train) \n\ny_pred = model.predict(x_test) \nprint(classification_report(y_test, y_pred))","e4c72686":"from xgboost import XGBClassifier\n\nmodel7 = XGBClassifier(random_state=1)\nmodel7.fit(x_train, y_train)\ny_pred7 = model7.predict(x_test)\nprint(classification_report(y_test, y_pred7))","8cd326d0":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred3)\nprint(cm)\naccuracy_score(y_test, y_pred3)","c2cd150c":"cm = confusion_matrix(y_test, y_pred1)\nprint(cm)\naccuracy_score(y_test, y_pred1)","c91bba86":"## There are some exceptional cases in heart diseases","7bbd15e2":"## The above chart shows us the resting BP of each person with respect to age. As age increases BP also increases","fa65dac4":"## Importing the necessary libraries","090b9688":"# *Future work:*\n\n### The model can be hyper parameterized with algorithms and thus accuracy will increase considerabely. In addition to that we can also add more data to check the reliability of the model","00f9eb61":"## There is a high correlation between variables and the target","1c836fff":"# Now we have to standardize it","e9cfd650":"![image.png](attachment:4959428d-9d52-402c-83bf-809f15a3ff8c.png)\n","07767434":"## In the above graph we can see a lot of ST and LVH, ECG readings in patients who are above 50. ","00f66457":"## In our dataset the male distribution is high compared to female distribution","e5bf0129":"## The below chart is interactive","1f1b7210":"Attribute Information\nAge: age of the patient [years]\n\nSex: sex of the patient [M: Male, F: Female]\n\nChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]\n\nRestingBP: resting blood pressure [mm Hg]\n\nCholesterol: serum cholesterol [mm\/dl]\n\nFastingBS: fasting blood sugar [1: if FastingBS > 120 mg\/dl, 0: otherwise]\n\nRestingECG: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria]\n\nMaxHR: maximum heart rate achieved [Numeric value between 60 and 202]\n\nExerciseAngina: exercise-induced angina [Y: Yes, N: No]\n\nOldpeak: oldpeak = ST [Numeric value measured in depression]\n\nST_Slope: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]\n\nHeartDisease: output class [1: heart disease, 0: Normal]","e08e5457":"## The regression line shows there is an increase ","08684748":"## The above bar chart tells us regarding the possibility of heart disease for individual ages. It is clear that people above 50 are highly prone to heart diseases","61c65290":"The HeartDisease distribution is shown above. This means our data is standard and there are less chances of biasing","dfd3163f":"# Classification models","95c45150":"## Splitting the dataset","c13fc40c":"Different algorithms is tried. The results are compared and the best algorithm is choosen","81c24635":"## SVC and Logistic regression model shows high accuracy ( in terms of fl score and recall) There for those two models are shortlisted. But still, we select SVC because the accuracy is a bit higher (on the basis of Confusion matrix). Therefore, we choose SVC as our final model. \n","6c5c9db8":"There are no duplicated values in the dataset"}}