{"cell_type":{"6f62e52d":"code","0bcd08e6":"code","8e976a6f":"code","7ff5be5b":"code","6782fe12":"code","a5521469":"code","77f27ebd":"code","00e26414":"code","b266ff35":"code","dcc93289":"markdown","f9fd73c4":"markdown"},"source":{"6f62e52d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0bcd08e6":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","8e976a6f":"data = pd.read_csv(\"..\/input\/headbrain\/headbrain.csv\")\ndata.shape","7ff5be5b":"data.head(10)","6782fe12":"X = data['Head Size(cm^3)'].values\nY = data['Brain Weight(grams)'].values","a5521469":"Ma#mean of x and y\nmean_x = np.mean(X)\nmean_y = np.mean(Y)\n\n#value of n\nn = len(X)\n\n#finding m and c\nnum = 0\nden = 0\nfor i in range(n):\n    num += (X[i]-mean_x) * (Y[i]-mean_y)\n    den += (X[i]-mean_x)** 2\nm = num \/den\nc = mean_y - (m * mean_x)\nprint(m,c)","77f27ebd":"#plotting\nx_max = np.max(X)+100\nx_min = np.min(X)-100\n\nx = np.linspace(x_min,x_max,1000)\ny = m * x + c\n\nplt.plot(x,y,color=\"red\",label=\"Regression Line\")\nplt.scatter(X,Y,color=\"blue\",label=\"Scatter Plot\")\nplt.xlabel(\"Head Size\")\nplt.ylabel(\"Brain Weight\")\nplt.legend()\nplt.show()\n","00e26414":"#Least Squared Method\nss_t = 0\nss_r = 0\nfor i in range(n):\n    y_pred = m * X[i] + c\n    ss_t += (Y[i]-mean_y)**2\n    ss_r += (Y[i]-y_pred)**2\nr2 = 1 - (ss_r\/ss_t)\nprint(r2)\n","b266ff35":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nX = X.reshape(n,1)\nreg = LinearRegression()\nreg = reg.fit(X,Y)\nY_pred = reg.predict(X)\nr2_score = reg.score(X,Y)\nprint(r2_score)\n","dcc93289":"## Linear Regression(Library)","f9fd73c4":"## Linear Regression(Manual Code)"}}