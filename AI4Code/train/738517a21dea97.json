{"cell_type":{"f54af629":"code","f494a760":"code","6e589bc6":"code","3eb156e9":"code","f1b9cd7a":"code","3b966eda":"code","532e0aba":"code","b5dbd2c4":"code","19d5c6ba":"code","b9f808f7":"code","36fe2a30":"code","a324fc98":"code","8a2e8622":"code","bc1552bb":"code","9b146a42":"code","bec06a2d":"code","4bd8f6a8":"code","ea667916":"code","47076638":"code","b3d5c356":"code","7b125575":"markdown","d30aacbc":"markdown","4944e6ac":"markdown","130c2926":"markdown","d830170d":"markdown","53bf728f":"markdown","875552bc":"markdown","659ce677":"markdown","1f3f8883":"markdown","47c62341":"markdown","79a88542":"markdown","8fd527bf":"markdown","30892035":"markdown","aabdf796":"markdown","24736588":"markdown","f00622fd":"markdown","279a5e3d":"markdown"},"source":{"f54af629":"import pandas as pd\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)\n\nfrom learntools.core import binder; binder.bind(globals())\nfrom learntools.pandas.indexing_selecting_and_assigning import *\nprint(\"Setup complete.\")","f494a760":"reviews.head()","6e589bc6":"# Your code here\ndesc =reviews.description\n\n# Check your answer\nq1.check()","3eb156e9":"#q1.hint()\nq1.solution()","f1b9cd7a":"first_description = reviews.description.iloc[0]\n\n# Check your answer\nq2.check()\nfirst_description","3b966eda":"#q2.hint()\nq2.solution()","532e0aba":"first_row = reviews.iloc[0]\n\n# Check your answer\nq3.check()\nfirst_row","b5dbd2c4":"#q3.hint()\nq3.solution()","19d5c6ba":"first_descriptions = reviews.description.iloc[:10]\n\n# Check your answer\nq4.check()\nfirst_descriptions","b9f808f7":"#q4.hint()\nq4.solution()","36fe2a30":"indices = [1, 2, 3, 5, 8]\nsample_reviews = reviews.loc[indices]\n\n# Check your answer\nq5.check()\nsample_reviews","a324fc98":"#q5.hint()\nq5.solution()","8a2e8622":"cols = ['country', 'province', 'region_1', 'region_2']\nindices = [0, 1, 10, 100]\ndf = reviews.loc[indices, cols]\n\n# Check your answer\nq6.check()\ndf","bc1552bb":"#q6.hint()\nq6.solution()","9b146a42":"cols = ['country', 'variety']\ndf = reviews.loc[:99, cols]\n# Check your answer\nq7.check()\ndf","bec06a2d":"#q7.hint()\nq7.solution()","4bd8f6a8":"italian_wines = reviews[reviews.country == 'Italy']\n\n# Check your answer\nq8.check()","ea667916":"#q8.hint()\nq8.solution()","47076638":"top_oceania_wines = reviews.loc[\n    (reviews.country.isin(['Australia', 'New Zealand']))\n    & (reviews.points >= 95)\n]\n\n# Check your answer\nq9.check()\ntop_oceania_wines","b3d5c356":"#q9.hint()\nq9.solution()","7b125575":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161299) to chat with other Learners.*","d30aacbc":"# Introduction\n\nIn this set of exercises we will work with the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). ","4944e6ac":"Follow-up question: what type of object is `desc`? If you're not sure, you can check by calling Python's `type` function: `type(desc)`.","130c2926":"## 2.\n\nSelect the first value from the description column of `reviews`, assigning it to variable `first_description`.","d830170d":"Look at an overview of your data by running the following line.","53bf728f":"## 5.\n\nSelect the records with index labels `1`, `2`, `3`, `5`, and `8`, assigning the result to the variable `sample_reviews`.\n\nIn other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","875552bc":"**This notebook is an exercise in the [Pandas](https:\/\/www.kaggle.com\/learn\/pandas) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning).**\n\n---\n","659ce677":"## 4.\n\nSelect the first 10 values from the `description` column in `reviews`, assigning the result to variable `first_descriptions`.\n\nHint: format your output as a pandas Series.","1f3f8883":"## 6.\n\nCreate a variable `df` containing the `country`, `province`, `region_1`, and `region_2` columns of the records with the index labels `0`, `1`, `10`, and `100`. In other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","47c62341":"## 8.\n\nCreate a DataFrame `italian_wines` containing reviews of wines made in `Italy`. Hint: `reviews.country` equals what?","79a88542":"## 9.\n\nCreate a DataFrame `top_oceania_wines` containing all reviews with at least 95 points (out of 100) for wines from Australia or New Zealand.","8fd527bf":"## 7.\n\nCreate a variable `df` containing the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the tutorial:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. \n`loc`, meanwhile, indexes inclusively. \n\n> This is particularly confusing when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 1000 entries, while `df.loc[0:1000]` return 1001 of them! To get 1000 elements using `loc`, you will need to go one lower and ask for `df.iloc[0:999]`. ","30892035":"## 1.\n\nSelect the `description` column from `reviews` and assign the result to the variable `desc`.","aabdf796":"# Exercises","24736588":"Run the following cell to load your data and some utility functions (including code to check your answers).","f00622fd":"## 3. \n\nSelect the first row of data (the first record) from `reviews`, assigning it to the variable `first_row`.","279a5e3d":"# Keep going\n\nMove on to learn about **[summary functions and maps](https:\/\/www.kaggle.com\/residentmario\/summary-functions-and-maps)**."}}