{"cell_type":{"d6a62563":"code","a0457301":"code","c4069423":"code","45a34da6":"code","dc81a3dc":"code","614f4381":"code","fbc6971f":"code","a7e245f9":"code","387e4f0f":"code","c16dfbd6":"code","f2433bbb":"code","257ad4e7":"code","8f3cf25a":"code","389cec58":"code","0ee84fb6":"code","fd07feda":"code","035c3740":"code","e676ac45":"code","47ed1cb8":"code","e2f85761":"code","3a8a83e2":"code","963caf5d":"code","75587e94":"code","595d0cc7":"code","678eb0b7":"code","39790b43":"code","c4d59765":"code","e9fcf982":"code","81baf43b":"code","512966f2":"code","ec8ae176":"code","9938e639":"code","336375b5":"code","157ad33e":"code","16210c13":"markdown","89b42a63":"markdown","205bd4a1":"markdown","b0af9acd":"markdown","41069b68":"markdown","5bac2946":"markdown","cb6069a3":"markdown","0c7603e7":"markdown","16837822":"markdown","3adf39f2":"markdown","8c6b30b8":"markdown","3f7dee18":"markdown","eef89681":"markdown","89477f1f":"markdown","2f595e02":"markdown","4057cf3b":"markdown","81bf0421":"markdown","71ef6d41":"markdown","1dd68c9a":"markdown","09f31eaf":"markdown","3c94881d":"markdown","54451bc6":"markdown","19965f6a":"markdown","4ac30e1b":"markdown","890b8dbc":"markdown","27825b2c":"markdown","5ad6ad36":"markdown","d8b4c398":"markdown","be544f97":"markdown","3a74f13d":"markdown"},"source":{"d6a62563":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a0457301":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","c4069423":"print(\"Vari\u00e1veis:\\t{}\\nEntradas:\\t{}\".format(train.shape[1], train.shape[0]))\n","45a34da6":"display(train.dtypes)\n\ndisplay(train.head())","dc81a3dc":"train.describe()","614f4381":"((train.isnull().sum() \/ train.shape[0]).sort_values(ascending=False))*100 ","fbc6971f":"train.hist(figsize=(10,8))\n","a7e245f9":"(train[['Sex','Survived']].groupby(['Sex']).mean())*100","387e4f0f":"sns.countplot(x='Sex', data=train)","c16dfbd6":"sns.countplot(x='Pclass', data=train)","f2433bbb":"sns.countplot(x='Embarked', data=train)","257ad4e7":"age_survived = sns.FacetGrid(train, col='Survived')\nage_survived.map(sns.distplot, 'Age')","8f3cf25a":"train.describe(include=['O'])","389cec58":"train_idx = train.shape[0]\ntest_idx = test.shape[0]","0ee84fb6":"target = train.Survived.copy()\ntrain.drop(['Survived'], axis=1, inplace=True)\n","fd07feda":"df_merged = pd.concat(objs=[train, test], axis=0).reset_index(drop=True)\nprint(\"df_merged.shape: ({} x {})\".format(df_merged.shape[0], df_merged.shape[1]))","035c3740":"df_merged.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1, inplace=True)","e676ac45":"df_merged.isnull().sum()","47ed1cb8":"age_mean = df_merged['Age'].mean()\ndf_merged['Age'].fillna(age_mean, inplace=True)","e2f85761":"fare_top = df_merged['Fare'].value_counts()[0]\ndf_merged['Fare'].fillna(fare_top, inplace=True)","3a8a83e2":"embarked_top = df_merged['Embarked'].value_counts()[0]\ndf_merged['Embarked'].fillna(embarked_top, inplace=True)","963caf5d":"df_merged['Sex'] = df_merged['Sex'].map({'male': 0, 'female': 1})","75587e94":"embarked_dummies = pd.get_dummies(df_merged['Embarked'], prefix='Embarked')\ndf_merged = pd.concat([df_merged, embarked_dummies], axis=1)\ndf_merged.drop('Embarked', axis=1, inplace=True)","595d0cc7":"display(df_merged.head())","678eb0b7":"train = df_merged.iloc[:train_idx]\ntest = df_merged.iloc[train_idx:]","39790b43":"from sklearn.linear_model import LogisticRegression","c4d59765":"lr_model = LogisticRegression(solver='liblinear')\nlr_model.fit(train, target)","e9fcf982":"acc_logReg = round(lr_model.score(train, target) * 100, 2)\nprint(\"Accuracy of the model Logistic Regression: {}\".format(acc_logReg))","81baf43b":"from sklearn.tree import DecisionTreeClassifier","512966f2":"tree_model = DecisionTreeClassifier(max_depth=3)\ntree_model.fit(train, target)","ec8ae176":"acc_tree = round(tree_model.score(train, target) * 100, 2)\nprint(\"Accuracy of the model Decision tree: {}\".format(acc_tree))","9938e639":"print(\"Would my girlfriend and I survive the titanic? \")","336375b5":"vinicius_oliveira = np.array([3,0,22,1,0,15.5,0,0,0,1]).reshape((1,-1))\ngiovanna_lyssa = np.array([3,1,20,1,0,15.5,0,0,0,1]).reshape((1,-1))","157ad33e":"print(\"Vin\u00edcius:\\t{}\".format(tree_model.predict(vinicius_oliveira)[0]))\nprint(\"Giovanna:\\t{}\".format(tree_model.predict(giovanna_lyssa)[0]))","16210c13":"# Completing missing data. #","89b42a63":"# Concatenate train and test data. #","205bd4a1":"# Creating model. #","b0af9acd":"# Probability of surviving by age. #","41069b68":"# Printing results. #","5bac2946":"# Extract column 'survived' and delete it of dataset train. #","cb6069a3":"Created on Thu Jul  2 18:52:11 2020\n\n@author: Vinicius","0c7603e7":"# Percentage of missing data. #","16837822":"# Recovery of data frame. #","3adf39f2":"# Graphic of quantity. #","8c6b30b8":"\n# Converting variable 'Embarked'. #","3f7dee18":"# Deleting not necessary variables. #","eef89681":"# Converting variable 'Sex'. #","89477f1f":"# Histogram of each variable. #","2f595e02":"# Probability of surviving by sex.","4057cf3b":"# Percentage of missing data. #","81bf0421":"# Import train and test data. #","71ef6d41":"# Mine and my girlfriend's variables values. #","1dd68c9a":"# For Age. #","09f31eaf":"\n# For Fare. #","3c94881d":"# Import necessary libraries. #","54451bc6":"# By the tree decision model, we can conclude that my girlfriend would survive titanic, instead me\nSaddy :\/ \n","19965f6a":"# Verifying types of variables. #","4ac30e1b":"# Creating model. #","890b8dbc":"# Importing machine learning library - Decision tree. #","27825b2c":"# Printing model accuracy. #","5ad6ad36":"# Recovering train and test data sets. #","d8b4c398":"\n# For Embarked. #","be544f97":"# Importing machine learning library - Logistic regression. #","3a74f13d":"# Printing model accuracy. #"}}