{"cell_type":{"5f28b477":"code","78c24811":"code","c6f7902e":"code","0ce1e73d":"code","0a6b1299":"code","cacb4b3a":"code","ba26f18a":"code","d1f6bfc5":"code","6e929498":"code","03c28248":"code","b25d3daa":"code","3d607cd1":"code","03ce9f21":"code","80845de0":"code","722fa4dd":"code","505bcda9":"code","70206720":"code","cd893300":"code","32f8e11d":"code","ee3a893f":"code","fae5f67a":"code","95d94385":"code","8a4e352f":"code","d7bcfba4":"code","6d57c273":"code","27c792ad":"code","cc7c76fa":"code","575b7661":"code","bad08494":"code","bf418858":"code","258dd25c":"code","f830c3f4":"code","1524cff0":"code","b6fb46b6":"code","9711bdd6":"markdown","c77ca137":"markdown","adf1d644":"markdown","4fbd7cd3":"markdown","0a8edfec":"markdown","694bbd16":"markdown","6c8f6eb6":"markdown","8578fdd2":"markdown","e83fdaa6":"markdown","fbaf1ae2":"markdown","c9b8d076":"markdown","63ebe3e5":"markdown","a9219023":"markdown","512915a6":"markdown","652e4b62":"markdown"},"source":{"5f28b477":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","78c24811":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas_profiling\n\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)","c6f7902e":"data = pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')","0ce1e73d":"data.head()","0a6b1299":"data.shape","cacb4b3a":"data.info()","ba26f18a":"data.columns","d1f6bfc5":"# seperating movies viewing platforms\nnetflix_content = data.loc[data['Netflix'] == 1]\nhulu_content = data.loc[data['Hulu']==1]\nprime_video_content = data.loc[data['Prime Video']]\ndisney_content = data.loc[data['Disney+']]","6e929498":"# dropping columns of other platforms and unnecessary columns\n\nnetflix_content = netflix_content.drop(['Hulu', 'Prime Video', 'Disney+', 'Type', 'Unnamed: 0','Genres'], axis = 1)\nhulu_content = hulu_content.drop(['Netflix', 'Prime Video', 'Disney+', 'Type', 'Unnamed: 0','Genres'], axis = 1)\nprime_video_content = prime_video_content.drop(['Hulu', 'Netflix', 'Disney+', 'Type', 'Unnamed: 0','Genres'], axis = 1)\ndisney_content = disney_content.drop(['Hulu', 'Prime Video', 'Netflix', 'Type', 'Unnamed: 0','Genres'], axis = 1)","03c28248":"netflix_content.head()","b25d3daa":"data.describe()","3d607cd1":"movies_Genre=data.copy()\ndel movies_Genre['Genres']\ns = data['Genres'].str.split(',').apply(pd.Series, 1).stack()\ns.index = s.index.droplevel(-1)\ns.name = 'Genres'\nmovies_Genre = movies_Genre.join(s)","03ce9f21":"# to seperate genre column in dataset\nseperated_genres = data['Genres'].str.get_dummies(',')\n\n# to concatenate two dataframes\ndata = pd.concat([data, seperated_genres], axis = 1, sort = False)","80845de0":"# Missing values\ndata.isnull().sum()","722fa4dd":"# dropping columns with large missing values\ndata.drop(['Rotten Tomatoes'],axis=1,inplace=True)","505bcda9":"# Number of movies in each platforms\nnetflix_count = len(data[data['Netflix']== 1].index)\nhulu_count = len(data[data['Hulu']== 1].index)\nprime_video_count = len(data[data['Prime Video']==1].index)\ndisney_count = len(data[data['Disney+']==1].index)\nprint('Netflix - ',netflix_count)\nprint('Hulu - ',hulu_count)\nprint('Prime Video - ',prime_video_count)\nprint('Disney+ - ', disney_count)","70206720":"# Saving this to a data frame\n\nlabel=['Netflix','Hulu', 'Prime Video','Disney+']\ncount=[netflix_count,hulu_count,prime_video_count,disney_count]\nplatform = pd.DataFrame(\n    {'Platform': label,\n     'Count': count,\n    })\nplatform","cd893300":"import plotly.express as px\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nfig = px.pie(platform,names='Platform', values='Count')\nfig.update_traces(rotation=45, pull=[0.1,0.03,0.03,0.03,0.03],textinfo=\"percent+label\", title='Number of movies per platform')\nfig.show()","32f8e11d":"lis=[]\nfor i in movies_Genre['Genres']:\n    lis.append(i)\n\nfor k in range(0,len(lis)):\n    lis[k]=str(lis[k]).strip()\n    \nfrom collections import Counter\ngenre_count = Counter(lis)\n\nfrom wordcloud import WordCloud\nwc = WordCloud(background_color='white')\nwc.generate_from_frequencies(genre_count)\nplt.figure(figsize=(20,10))\nplt.imshow(wc,interpolation='bilinear')\nplt.axis('off')\nplt.show()","ee3a893f":"data['Genres'].value_counts().head(10)","fae5f67a":"from plotly import graph_objects as go\n\nfig = go.Figure(go.Funnel(\n    y = ['Drama','Documentary','Comedy','Comedy,Drama','Horror','Drama,Romance','Comedy,Drama,Romance',\n            'Horror,Thriller','Comedy,Romance','Drama,Thriller'],\n    x = [1341,1229,1040,446,436,397,333,297,289,222]))\n\nfig.show()\n","95d94385":"# Count of movies in every each age group\nAge_group1 = data['Age'] == '13+'\nAge_group2 = data['Age'] == '16+'\nAge_group3 = data['Age'] == '18+'\nAge_group4 = data['Age'] == '7+'\nAge_group5 = data['Age'] == 'all'\n\n\nprint(\"13+  :\",Age_group1.sum())\nprint(\"16+  :\",Age_group2.sum())\nprint(\"18+  :\",Age_group3.sum())\nprint(\"7+  :\",Age_group4.sum())\nprint(\"All  :\",Age_group5.sum())","8a4e352f":"# Saving this to a data frame\n\nlabel=['13+','16+', '18+','7+','All']\ncount=['1255','320','3474',\"1462\",'843']\nage_count = pd.DataFrame(\n    {'age_group': label,\n     'Count': count,\n    })\nage_count","d7bcfba4":"fig = px.bar(age_count, x='age_group', y='Count', color='age_group', height=600, title='Age groups')\nfig.show()","6d57c273":"data['Genres'].value_counts().head(10)","27c792ad":"top_5_genres = ['Drama','Documentary','Comedy', 'Comedy,Drama','Horror','Drama,Romance','Comedy,Drama,Romance',\n            'Horror,Thriller','Comedy,Romance','Drama,Thriller']\ntable = data.loc[:,['Year','Genres','IMDb']]\ntable['AvgRating'] = table.groupby([table.Genres,table.Year])['IMDb'].transform('mean')\ntable.drop('IMDb', axis=1, inplace=True)\ntable = table[(table.Year>1999) & (table.Year<2021)]\ntable = table.loc[table['Genres'].isin(top_5_genres)]\ntable = table.sort_values('Year')","cc7c76fa":"fig=px.bar(table,x='Genres', y='AvgRating', animation_frame='Year', \n           animation_group='Genres', color='Genres', hover_name='Genres', range_y=[0,10])\nfig.update_layout(showlegend=False)\nfig.show()","575b7661":"top_rated_movies = data.sort_values('IMDb',ascending = False).head(10)\nfig = px.bar(top_rated_movies, x='Title', y='IMDb', color='IMDb', height=600)\nfig.show()","bad08494":"data.head()","bf418858":"top_10_netflix= netflix_content.sort_values(by = 'IMDb', ascending = False).head(10)\nfig = px.sunburst(top_10_netflix, path= ['IMDb','Title'])\nfig.show()","258dd25c":"top_10_hulu= hulu_content.sort_values(by = 'IMDb', ascending = False).head(10)\nfig = px.treemap(top_10_hulu, path= ['IMDb','Title'])\nfig.show()","f830c3f4":"langs=data['Language'].value_counts().head(10)\nprint(langs)","1524cff0":"# Saving this to a data frame\n\ncount=['10955','503', '276','267','174','166','163','155','151','93']\nlabel=['English','Hindi','English,Spanish',\"Spanish\",'English,French','Italian','French','Japanese','Mandarin','Tamil']\nlanguage_count = pd.DataFrame(\n    {'language': label,\n     'Count': count,\n    })da\nlanguage_count","b6fb46b6":"fig = px.bar(language_count, x='language', y='Count', color='language', height=500, title='Top languages')\nfig.show()","9711bdd6":"## Age group wise analysis","c77ca137":"* Prime video leads in terms of number of movies.\n* Netflix is second\n* Prime video has thrice more movies than Netflix\n* Movies in Hulu and Disney+ are less than 1000","adf1d644":"* Number of English content is way larger than other languages combined","4fbd7cd3":"                                                        Most rated hulu movies","0a8edfec":"                                            Imdb rating wise analysis with respect to Genre","694bbd16":"## Genre wise Analysis","6c8f6eb6":"## Language wise analysis ","8578fdd2":"## Most Rated movies","e83fdaa6":"## Platform wise content analysis","fbaf1ae2":"## Observations\n\n* There are 16744 movies in the data set\n* The latest one was released in 2020 and the oldest is in 1902\n* Average rating is 5.9\n* Average runtime is 93 minutes","c9b8d076":"                                                        \n                                                       Most rated netflix movies","63ebe3e5":"* Most rating collumn have null values in Prime video and Disney+","a9219023":"Where are the good movies? Online movie watching platforms keeps growing up the graph with its popularity, shows and content. This is an EDA or a story telling through its data along with a content-based recommendation system.\n\n<img src=\"https:\/\/pumpkincrash.files.wordpress.com\/2017\/06\/top-movies-2013.jpg\" width=\"1200px\">","512915a6":"* \"Documentary\" shows mostly had an edge on other genres from 2000 to 2020 by rating wise\n* The only period Another genre overtook \"Documentary\" was in 2010, by \"Drama,Romance\" with \"7.375\" as average rating\n* Throuh out the 2000-2020 periods \"Drama,Romance\", \"Drama\" \"Comedy,Drama,Romance\" are the only genres come close with    \"Documentary\" genre\n* It has found \"Horror\" and \"Horror,Thriller\" are the least favourites in rating wise analysis with their graphs never overtook other top 8 genres at all.\n* The average rating of \"Horror, thriller\" genre was 2.5 in 2020 which is the lowest in the period  of 2000-2020 followed by \"Horror\"'s 2.55 in 2010\n","652e4b62":"## Imdb rating wise analysis"}}