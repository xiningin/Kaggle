{"cell_type":{"e85665d4":"code","b529a9fa":"code","64d6242c":"code","6ab23694":"code","77b8f204":"code","4a81afcc":"code","1e454b8f":"markdown","db250c4f":"markdown","656572a1":"markdown","69de55bd":"markdown","29b6672e":"markdown","f699f482":"markdown","f344afd4":"markdown","b082d96b":"markdown","f2dde21a":"markdown","910eeb48":"markdown"},"source":{"e85665d4":"from mpl_toolkits import mplot3d\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D ","b529a9fa":"x1 = np.linspace(0,3,100) \nx2 = np.linspace(0,9,100) \nX1,X2 = np.meshgrid(x1,x2) ","64d6242c":"net_1 = X1 - 1\nnet_2 = -X1 + 2\nnet_3 = X2\nnet_4 = -X2 + 3","6ab23694":"o_1 = np.sign(net_1)\no_2 = np.sign(net_2)\no_3 = np.sign(net_3)\no_4 = np.sign(net_4)","77b8f204":"net_5 = (o_1+o_2+o_3+o_4)-3.5\n\no_5 = np.sign(net_5)","4a81afcc":"fig = plt.figure(figsize=(16,10)) \nax = plt.axes(projection = '3d') \nax.plot_surface(X1,X2,o_5) \nax.set_xlabel('X1') \nax.set_ylabel('X2') \nax.set_zlabel('Output 5') \nax.set_title('Region of convergence')","1e454b8f":"Applying activation function","db250c4f":"The first neural layer with four neurons.","656572a1":"# **ROC of feed forward neural network NNFL Lab 3**","69de55bd":"Plotting Region Of Convergance","29b6672e":"Calculating neuron output for second layer","f699f482":"* Siddhesh Mukesh Mahajan\n* A22\n* 2017BEC047","f344afd4":"$$\\sum_{i=1}^n x_{i}w_{i}$$","b082d96b":"Importing Necessary Libraries","f2dde21a":"$$f(\\sum_{i=1}^n x_{i}w_{i})$$","910eeb48":"Raw Input Data i.e. Input Layer"}}