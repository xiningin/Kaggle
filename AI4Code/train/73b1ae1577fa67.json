{"cell_type":{"1d489700":"code","4eaece4e":"code","b0a96a25":"code","6dec6b19":"code","a6c47374":"code","30bdae03":"code","420a49db":"code","43c92257":"code","9de5d32b":"code","8d625c57":"code","15e0ad65":"code","1e2fa675":"code","26822f16":"code","79f3746b":"code","207e8d4b":"code","066816de":"code","40aca7ab":"code","17b9650f":"code","62132c7b":"code","94da1e05":"code","49081c43":"code","0afedfa5":"code","32e81874":"code","592d6873":"code","1d4be72c":"code","24906eb0":"code","c3a5efcd":"code","5875a8a3":"code","5dcf8835":"code","c25f4056":"code","becb06bf":"code","ccc517ae":"code","03304aa1":"code","f50b26b9":"markdown","b0ea2425":"markdown","9b6742ab":"markdown","3e59a8d5":"markdown","f57257b8":"markdown","3b261709":"markdown","310b4e29":"markdown","4138335d":"markdown","be44b6ae":"markdown","570daf4c":"markdown","3afceb69":"markdown","e934e15c":"markdown","928e100e":"markdown","68969200":"markdown","7a9b327f":"markdown"},"source":{"1d489700":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport pycountry\npy.init_notebook_mode(connected=True)\n\n\n\nimport seaborn as sns\nsns.set()\n\nfrom collections import Counter\n\nimport plotly.express as px\nimport folium\nfrom folium import plugins\n\nfrom sklearn.linear_model import LinearRegression\n\nfrom datetime import date\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4eaece4e":"data_df = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\")\ndata_df .head()","b0a96a25":"data_df.columns","6dec6b19":"data_df.describe","a6c47374":"data_df.info()","30bdae03":"\n#data_df.drop(['Sno'],axis=1,inplace=True)\ndata_df.head()","420a49db":"data_df['Country'].replace({'Mainland China':'China'},inplace=True)\ncountry = data_df['Country'].unique().tolist()\nprint(country)\nprint(\"\\n Affected contries by virus: \", len(country))","43c92257":"union_deneme = []\n\nunion_deneme = data_df[[\"Country\",\"Confirmed\"]].groupby([\"Country\"], as_index = False).sum().sort_values(by=\"Confirmed\", ascending = False).reset_index(drop=True)\nunion_deneme\n","9de5d32b":"death_data = data_df[['Country', 'Deaths']].groupby([\"Country\"], as_index = False).sum().sort_values(by=\"Deaths\", ascending=False).reset_index(drop=True)\ndeath_data = death_data[death_data['Deaths']>0]\ndeath_data","8d625c57":"import datetime\ndata_df['Last Update'] = pd.to_datetime(data_df['Last Update']) \ndata_df['Date'] = [datetime.datetime.date(d) for d in data_df ['Last Update']]\ndata_df['Time'] = [datetime.datetime.time(d) for d in data_df['Last Update']]","15e0ad65":"data_df['Date'] = data_df['Date'].astype(str)\nday = data_df[\"Date\"].values\nday = [my_str.split(\"-\")[2] for my_str in day]\ndata_df[\"Date\"] = day","1e2fa675":"dates = data_df['Date'].unique()\ndates = np.flipud(dates) \n\ndates","26822f16":"all_cases = []\n\nfor i in dates:\n    all_cases.append(data_df[data_df['Date']==i].Confirmed.sum())\n\nplt.figure(figsize=(15, 10));\nplt.plot(dates, all_cases);\nplt.title('Daily Case Numbers', size=15);\nplt.xlabel('Days', size= 10)\nplt.ylabel('Number of Cases', size=15);\nplt.show();","79f3746b":"all_cases = []\n\nfor i in dates:\n    all_cases.append(data_df[data_df['Date']==i].Deaths.sum())\n\nplt.figure(figsize=(15, 10));\nplt.plot(dates, all_cases);\nplt.title('Daily Death Numbers', size=15);\nplt.xlabel('Days', size= 10)\nplt.ylabel('Number of Cases', size=15);\nplt.show();\n\n","207e8d4b":"\nfig = px.scatter_geo(data_df, locations= union_deneme[\"Country\"], locationmode='country names', \n                     color= union_deneme[\"Confirmed\"], hover_name= union_deneme[\"Country\"], range_color= [0, 500], projection=\"natural earth\",\n                    title='Countries Where Cases Spread')\nfig.show()","066816de":"\nfig = px.scatter_geo(data_df, locations= death_data[\"Country\"], locationmode='country names', \n                     color= death_data[\"Deaths\"], hover_name= death_data[\"Country\"], range_color= [0, 500], projection=\"natural earth\",\n                    title='Countries where Deaths Occurred')\nfig.show()","40aca7ab":"f, ax = plt.subplots(figsize=(10, 16))\n\n\nsns.barplot(x=\"Confirmed\", y=\"Province\/State\", data=data_df[1:],\n            label=\"Confirmed\", color=\"b\")\n\n\nsns.barplot(x=\"Recovered\", y=\"Province\/State\", data=data_df[1:],\n            label=\"Recovered\", color=\"g\")\n\nax.legend(ncol=6, loc=\"lower right\", frameon=True)\nax.set(xlim=(0, 1800), ylabel=\"\",\n       xlabel=\"Stats\")\nsns.despine(left=True, bottom=True)","17b9650f":"stateCountry = data_df.groupby(['Country', 'Province\/State']).size().unstack()","62132c7b":"plt.figure(figsize=(15,10))\nsc = sns.heatmap(stateCountry,square=True, cbar_kws={'fraction' : 0.01}, cmap='afmhot_r', linewidth=1)","94da1e05":"data_df.shape","49081c43":"data_df.describe()","0afedfa5":"data_df.isnull().sum()","32e81874":"data_df.drop(['Sno'], axis=1, inplace=True)","592d6873":"data_df['Last Update'] =data_df['Last Update'].apply(pd.to_datetime)","1d4be72c":"data_df.tail()","24906eb0":"data_df['Province\/State'].value_counts()","c3a5efcd":"countries = data_df['Country'].unique().tolist()\nprint(countries)\n\nprint(\"\\nTotal countries affected by virus: \",len(countries))\n","5875a8a3":"data_df","5dcf8835":"# Latest Numbers\n\nprint('Confirmed Cases around the globe : ',data_df['Confirmed'].sum())\nprint('Deaths Confirmed around the globe: ',data_df['Deaths'].sum())\nprint('Recovered Cases around the globe : ',data_df['Recovered'].sum())","c25f4056":"tempState = data_df['Province\/State'].mode()\nprint(tempState)","becb06bf":"## Countries Currently affected by it.\nallCountries = data_df['Country'].unique().tolist()\nprint(allCountries)\n\nprint(\"\\nTotal countries affected by virus: \",len(allCountries))","ccc517ae":"CountryWiseData = pd.DataFrame(data_df.groupby('Country')['Confirmed', 'Deaths', 'Recovered'].sum())\nCountryWiseData['Country'] = CountryWiseData.index\nCountryWiseData.index = np.arange(1, len(allCountries)+1)\n\nCountryWiseData = CountryWiseData[['Country','Confirmed', 'Deaths', 'Recovered']]\n\n#formatted_text('***Country wise Analysis of ''Confirmed'', ''Deaths'', ''Recovered'' Cases***')\nCountryWiseData","03304aa1":"data_df.plot(subplots=True,figsize=(18,18))\nplt.show()","f50b26b9":"* we have empty values in province\/state field\n","b0ea2425":"> 1. Province\/State - City of virus suspected cases.\n2. Country\/Region - Country of virus suspected cases.\n3. last update - Date of update of patient infected\n4. Confirmed - Confirmation by doctors that this patient is infected with deadly virus\n5. Suspected - Number of cases registered\n6. Recovered - Recovery of the patient\n7. Deaths - Death of the patient .","9b6742ab":"<a id = '5'><\/a>\n## Linear Regression","3e59a8d5":"* Outside of China, the number of deaths caused by the virus is low.","f57257b8":"## Countries Where Cases Spread","3b261709":"## Latest Data  On nCoV Virus","310b4e29":"<a id = '3'><\/a>\n# Basic Data Analysis","4138335d":"* The cases were reported mostly from China and its neighbors.","be44b6ae":"<a id = '2'><\/a>\n\n# Variable Description\n\n\n\n","570daf4c":"# Introduction\n\n<font color = 'red'>\n    \nContent:\n\n1. [Load and Check Data](#1)\n2. [Variable Description](#2)\n3. [Basic Data Analysis](#3)\n4. [Visualization](#4)\n5. [Linear Regression](#5)\n","3afceb69":"## Countries where Deaths Occurred","e934e15c":"## Number of Recovered of Cases","928e100e":"## Implementing Data Exploration","68969200":"<a id = '1'> <\/a>\n\n# Load and Check Data","7a9b327f":"<a id = '4'><\/a>\n# Visualization"}}