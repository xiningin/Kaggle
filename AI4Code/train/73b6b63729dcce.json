{"cell_type":{"6e704fb1":"code","45632f85":"code","46a05122":"code","37eac03b":"code","293b656d":"code","bb49505d":"code","492d9b0e":"code","5e9ab70c":"code","2ee1ee67":"markdown"},"source":{"6e704fb1":"# import necessary libraries\nimport os\nimport pandas as pd\nimport numpy as np\nfrom PIL import Image\nfrom sklearn.cluster import KMeans\nfrom joblib import dump","45632f85":"# import image\nim = Image.open(\"..\/input\/bridge.jpeg\")\n# display image\nim","46a05122":"# get pixels of the image\npixel_np = np.asarray(im)\n# reshape array (remove rows and columns)\nimage_height = im.height\nimage_width = im.width\npixel_np = np.reshape(pixel_np, (image_height * image_width, 3))\n# display as df\npd.DataFrame(pixel_np, columns=[\"r\", \"g\", \"b\"]).head()","37eac03b":"# run k-means clustering on the pixel data\nnum_of_centroids = 16 # a 4-bit image is represented by 2^4 colours\nnum_of_runs = 10 # number of times to run the k-means algorithm before determining the best centroids\nmax_iterations = 300 # number of iterations before k-means comes to an end for a single run\nverbosity = 0 # show what's going on when the algorithm is running\n\n# initiate a kmeans object\ncompressor = KMeans(n_clusters=num_of_centroids, n_init=num_of_runs, max_iter=max_iterations, verbose=verbosity)\n# run k-means clustering\ncompressor.fit(pixel_np)","293b656d":"# save the fitted model\ndump(compressor, \"compressor.joblib\")","bb49505d":"# create an array replacing each pixel label with its corresponding cluster centroid\npixel_centroid = np.array([list(compressor.cluster_centers_[label]) for label in compressor.labels_])","492d9b0e":"# convert the array to an unsigned integer type\npixel_centroid = pixel_centroid.astype(\"uint8\")\n# reshape this array according to the height and width of our image\npixel_centroids_reshaped = np.reshape(pixel_centroid, (image_height, image_width, 3), \"C\")","5e9ab70c":"# create the compressed image\ncompressed_im = Image.fromarray(pixel_centroids_reshaped)\n# save compressed image\ncompressed_im.save(\"bridge_compressed.jpeg\")\n# display compressed image\ncompressed_im","2ee1ee67":"# Compressing Images using K-Means Clustering. \n\n*Inspired by Andrew Ng's K-Means Clustering machine learning assignment.*"}}