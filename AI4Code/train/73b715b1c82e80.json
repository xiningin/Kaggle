{"cell_type":{"99672a7e":"code","d96f39bb":"code","53dfc6e6":"code","d901a557":"code","3041acb0":"code","46504346":"code","f7201d36":"code","6b3c040b":"code","fb1d6da8":"code","a049af55":"code","b777639c":"code","d7abd393":"code","48f2cacf":"code","6df4609e":"code","1174dc67":"code","fbb0bd6c":"code","43db7613":"code","c1ab5aef":"code","b022c481":"code","7b7a5fac":"code","ac6b2ed9":"markdown"},"source":{"99672a7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nfrom sklearn.metrics import mean_squared_error\nimport math","d96f39bb":"train=pd.read_csv(\"\/kaggle\/input\/crime-learn\/crime_train.csv\")\nprint(train)\ntest=pd.read_csv(\"\/kaggle\/input\/crime-learn\/crime_test.csv\")\nprint(test)","53dfc6e6":"train","d901a557":"test","3041acb0":"from sklearn.model_selection import train_test_split \nfrom sklearn.preprocessing import Normalizer","46504346":"x_train=train.iloc[:,1:-1]\ny_train=train.iloc[:,-1:]","f7201d36":"x_test=test.iloc[:,1:]","6b3c040b":"x_train","fb1d6da8":"y_train","a049af55":"x_test","b777639c":"from sklearn.linear_model import LinearRegression\nlreg = LinearRegression()\nlreg.fit(x_train, y_train)","d7abd393":"lreg.predict(x_test)","48f2cacf":"y_predict=lreg.predict(x_test)\n","6df4609e":"lreg.score(x_test,y_predict)\n","1174dc67":"lreg.score(x_train,y_train)","fbb0bd6c":"predict=pd.DataFrame(y_predict)\npredict","43db7613":"prediction = pd.DataFrame({'ID': test.ID, 'Prediction': predict.iloc[:,0]})\nprint(prediction)","c1ab5aef":"prediction.to_csv('19mia1028.csv',index=False)","b022c481":"print(y_predict)\nprint(y_train)","7b7a5fac":"y_predict=lreg.predict(x_train)\nprint(f' RMSE =  {np.sqrt(mean_squared_error(y_train,y_predict))}')","ac6b2ed9":"* the score of test dataset > train dataset\n\n* hence the model is good"}}