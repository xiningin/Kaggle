{"cell_type":{"70ee625d":"code","fe566d6b":"code","bc675c39":"code","828a8d86":"code","18ec2299":"code","77b667fb":"code","be0f27f3":"code","583ccfe2":"code","ead5743d":"code","0dadd970":"code","912133ae":"code","4ab267f0":"code","11094c33":"code","4dfd5177":"code","f674e36f":"code","44072b58":"code","5060b26a":"code","f5966d2f":"code","41041ede":"code","997300e3":"code","9f14e45c":"code","4d1d37e4":"code","08fb3125":"code","ef90fa94":"code","4a3171ca":"code","e1fb4405":"code","302f6c7a":"code","cc3f98c4":"code","ca2b3825":"code","99e2f0ca":"code","b2159c1b":"code","cf0a32fe":"code","5f712291":"code","38cbf699":"code","e9feea53":"code","5d531180":"code","de4a8d06":"code","3236095b":"code","c7b42c71":"code","b5e4e766":"code","e30e9b31":"code","4e6b9c42":"code","5da5a225":"code","60ca8f1b":"code","11394781":"code","72c4c16d":"code","2b2b0301":"code","d68e08cd":"code","ab360e8b":"code","dd88ef89":"code","dbc20430":"code","bcc945f4":"code","a33b47e3":"code","ca841696":"code","49760a42":"code","8c06a2d0":"code","24b28585":"code","98afa5a2":"code","15260623":"code","a88658a5":"code","17fd6c15":"code","3ef34d5b":"code","773b53da":"code","e3eeb2a2":"code","e12767c8":"code","5168a097":"code","0eac41cd":"code","3d94a39d":"code","45ea7d78":"code","5c6944d5":"code","88b93bdf":"code","f3c9ab41":"code","cdbc1251":"code","d9d364c6":"code","42a63e34":"code","768b9408":"code","30a2936b":"code","f911231e":"code","f3155b1a":"code","44cad5d6":"code","5b843fd3":"code","424a4996":"code","9ea824e0":"code","715b44ff":"code","8a471276":"code","78147769":"code","0374ccaf":"code","80355b94":"code","217e653e":"code","02e95e49":"code","2b2dbb0e":"code","b4b12aaf":"code","e963b9a0":"code","57bbeeeb":"code","a956a26a":"code","e955c7a7":"code","e087b9ea":"code","3fcc66d6":"code","b34210f9":"code","26a51677":"code","8a5482bb":"code","444d62f8":"code","d7d6ebcb":"code","d08ff93c":"code","f50ca070":"code","0c2df60a":"code","70ba4202":"code","fc9fcea5":"code","5bd64d15":"code","4263548b":"code","3be42eea":"code","6d2dbee1":"code","a8a272af":"code","659d1ac5":"code","96233b3c":"code","0469c554":"code","3b5c4ea2":"code","2d092cbb":"code","a5a9c07f":"code","8cd2f03d":"code","4f868d5c":"code","84cc190b":"markdown","c8059204":"markdown","e7716608":"markdown","f9cb564a":"markdown","0b022767":"markdown","e45dad7c":"markdown","687799f5":"markdown","76a238a1":"markdown","9945f423":"markdown","10ba343b":"markdown"},"source":{"70ee625d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fe566d6b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc675c39":"df = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')","828a8d86":"df.head()","18ec2299":"list(df)","77b667fb":"test = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')","be0f27f3":"test.head()","583ccfe2":"shops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')","ead5743d":"shops.head()","0dadd970":"items = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')","912133ae":"items.head()","4ab267f0":"item_cats = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nitem_cats.head()","11094c33":"test.set_index('ID',inplace=True)","4dfd5177":"test","f674e36f":"df.info()","44072b58":"df.isnull().sum()","5060b26a":"shops.shape","f5966d2f":"shops.columns","41041ede":"shops.set_index('shop_id',inplace=True)","997300e3":"shops.columns","9f14e45c":"df['shop_id'].nunique()","4d1d37e4":"df['date'] = pd.to_datetime(df['date'])","08fb3125":"df['year'] = df['date'].dt.year\ndf['month'] = df['date'].dt.month","ef90fa94":"df.columns","4a3171ca":"item_cats.set_index('item_category_id',inplace=True)","e1fb4405":"item_cats","302f6c7a":"items.set_index('item_id',inplace=True)","cc3f98c4":"items","ca2b3825":"items['item_name'].nunique()","99e2f0ca":"no_item_id = [i for i in range(22170)]","b2159c1b":"for i in no_item_id:\n    if len(df[df['item_id']==i]['item_price'])==0:\n        print(i,'-->',0)\n    else:\n        print(i,'-->',df[df['item_id']==i]['item_price'].iat[0])\n# df[df['item_id']==no_item_id[0]]['item_price'].iat[0]","cf0a32fe":"item_id_and_price = {}\nfor i in no_item_id:\n    if len(df[df['item_id']==i]['item_price'])==0:\n        item_id_and_price[i] = 0\n    else:\n        item_id_and_price[i] = df[df['item_id']==i]['item_price'].iat[0]","5f712291":"test","38cbf699":"item_id_and_price = pd.Series(item_id_and_price)","e9feea53":"test.info()","5d531180":"def get_price(x):\n    return item_id_and_price.get(x,default='data not available')\ntest['item_price'] = test['item_id'].apply(get_price)","de4a8d06":"test","3236095b":"df","c7b42c71":"df.groupby(['year','month']).mean().loc[:,'item_price':'item_cnt_day']","b5e4e766":"plt.figure(figsize=(12,8),dpi=150)\ndf['date_block_num'].value_counts().plot(kind='bar');","e30e9b31":"plt.figure(figsize=(12,8),dpi=150)\ndf['month'].value_counts().plot(kind='bar');","4e6b9c42":"plt.figure(figsize=(12,8),dpi=150)\nsns.countplot(x='month',data=df,hue='year')\nplt.legend(loc='best');","5da5a225":"def seasons(x):\n    if x in [3,4,5]:\n        return 'spring'\n    elif x in [6,7,8]:\n        return 'summer'\n    elif x in [9,10,11]:\n        return 'autumn'\n    else:\n        return 'winter'\ndf['season'] = df['month'].apply(seasons)","60ca8f1b":"df","11394781":"plt.figure(figsize=(12,4),dpi=150)\nsns.countplot(x='season',data=df,hue='year')\nplt.legend(loc='best');","72c4c16d":"plt.figure(figsize=(12,8),dpi=150)\nsns.boxplot(y='item_cnt_day',x='season',hue='year',data=df)","2b2b0301":"df.drop(df[df['season']=='autumn']['item_cnt_day'].idxmax(),inplace=True)\ndf.drop(df[df['season']=='winter']['item_cnt_day'].idxmax(),inplace=True)","d68e08cd":"plt.figure(figsize=(12,8),dpi=150)\nsns.boxplot(y='item_cnt_day',x='season',hue='year',data=df);","ab360e8b":"df['item_cnt_day'].describe()","dd88ef89":"test","dbc20430":"df['shop_id'].nunique()","bcc945f4":"test['shop_id'].nunique()","a33b47e3":"df.groupby('shop_id').mean().loc[:,['item_cnt_day','date_block_num','item_price']]","ca841696":"shop_mean = df.groupby('shop_id').mean().loc[:,['item_cnt_day','date_block_num','item_price']]","49760a42":"shop_mean","8c06a2d0":"test","24b28585":"def mean_price(x):\n    return shop_mean.iat[x,2]\ntest['mean_price_for_shop'] = test['shop_id'].apply(mean_price)","98afa5a2":"def block_num(x):\n    return shop_mean.iat[x,1]\ntest['mean_date_block_num'] = test['shop_id'].apply(block_num)","15260623":"test","a88658a5":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ntest['mean_price_for_shop'] = le.fit_transform(test['mean_price_for_shop'])","17fd6c15":"le = LabelEncoder()\ntest['mean_date_block_num'] = le.fit_transform(test['mean_date_block_num'])","3ef34d5b":"test","773b53da":"df.drop('date',axis=1,inplace=True)","e3eeb2a2":"df","e12767c8":"plt.figure(figsize=(12,8),dpi=150)\nsns.boxplot(x='season',y='item_price',data=df,hue='year'); ","5168a097":"df[df['season']=='winter']['item_price'].idxmax()","0eac41cd":"df.drop(df[df['season']=='winter']['item_price'].idxmax(),inplace=True)","3d94a39d":"plt.figure(figsize=(12,8),dpi=150)\nsns.boxplot(x='season',y='item_price',data=df,hue='year'); ","45ea7d78":"df['item_price'].min(),df['item_price'].max()","5c6944d5":"df[df['item_price']<0]","88b93bdf":"df.drop(df[df['item_price']<0].index,inplace=True)","f3c9ab41":"df['item_price'].min(),df['item_price'].max()","cdbc1251":"df['item_price'].describe().iloc[1:]","d9d364c6":"def item_price_range(x):\n    if 0<=x<249:\n        return 'First'\n    elif 249<=x<=399:\n        return 'Second'\n    elif 399<x<=999:\n        return 'Third'\n    else:\n        return 'Fourth'\ndf['price_range_quartile'] = df['item_price'].apply(item_price_range)\ntest['price_range_quartile'] = test['item_price'].apply(item_price_range)","42a63e34":"df","768b9408":"sns.countplot(x='price_range_quartile',data=df,hue='year')","30a2936b":"test","f911231e":"df","f3155b1a":"df.corr()","44cad5d6":"df.groupby('year').mean()","5b843fd3":"test","424a4996":"def artificial_year(x):\n    if x<5.52:\n        return 2013\n    elif x<17.60:\n        return 2014\n    else:\n        return 2015\ntest['year'] = test['mean_date_block_num'].apply(artificial_year)","9ea824e0":"test","715b44ff":"plt.figure(figsize=(12,8))\nsns.countplot(x='price_range_quartile',data=df,hue='year')","8a471276":"df.head(2)","78147769":"test.columns","0374ccaf":"test1 = test[['mean_date_block_num','shop_id','item_id','item_price','year','price_range_quartile','mean_price_for_shop']]","80355b94":"test1.head(2)","217e653e":"df.head(2)","02e95e49":"def mean_price(x):\n    return shop_mean.iat[x,2]\ndf['mean_price_for_shop'] = df['shop_id'].apply(mean_price)","2b2dbb0e":"le = LabelEncoder()\ndf['mean_price_for_shop'] = le.fit_transform(df['mean_price_for_shop'])","b4b12aaf":"df.head(2)","e963b9a0":"test1.head(2)","57bbeeeb":"sns.countplot(y='season',data=df)","a956a26a":"df.drop(['season','month'],axis=1,inplace=True)","e955c7a7":"df","e087b9ea":"test1","3fcc66d6":"df['year'] = df['year'].astype(str)\ntest1['year'] = test1['year'].astype(str)","b34210f9":"df_dummy = pd.get_dummies(df[['year','price_range_quartile']],drop_first=True)\ntest1_dummy = pd.get_dummies(test1[['year','price_range_quartile']],drop_first=True)","26a51677":"df = pd.concat([df,df_dummy],axis=1)\ntest1 = pd.concat([test1,test1_dummy],axis=1)","8a5482bb":"df.drop('year',axis=1,inplace=True)\ntest1.drop('year',axis=1,inplace=True)","444d62f8":"df.drop('price_range_quartile',axis=1,inplace=True)\ntest1.drop('price_range_quartile',axis=1,inplace=True)","d7d6ebcb":"df.head(2)","d08ff93c":"# df.loc[:,'date_block_num':'year_2015']\ndf = df.iloc[:,:11]","f50ca070":"X = df.drop('item_cnt_day',axis=1)\ny = df['item_cnt_day']","0c2df60a":"X.head(2)","70ba4202":"test1.head(2)","fc9fcea5":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.linear_model import LinearRegression,Lasso,Ridge\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import RandomForestRegressor","5bd64d15":"from sklearn.metrics import mean_absolute_error,mean_squared_error","4263548b":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=101)","3be42eea":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","6d2dbee1":"models = [LinearRegression(),Lasso(),Ridge(),KNeighborsRegressor(),RandomForestRegressor()]\ndata = {}\nfor m in models:\n    m.fit(X_train,y_train)\n    pred = m.predict(X_test)\n    data[str(m)] = [mean_absolute_error(y_test,pred),np.sqrt(mean_squared_error(y_test,pred))]\nmodel_df = pd.DataFrame(data)","a8a272af":"model_df","659d1ac5":"final_model = make_pipeline(StandardScaler(),RandomForestRegressor())","96233b3c":"final_model.fit(X,y)","0469c554":"item_cnt_pred = final_model.predict(test1)","3b5c4ea2":"item_cnt_pred","2d092cbb":"test1.drop(test1.columns,axis=1,inplace=True)","a5a9c07f":"test1['item_cnt_month'] = item_cnt_pred","8cd2f03d":"test1","4f868d5c":"test1.to_csv('submissions.csv')","84cc190b":"Another outlier","c8059204":"Base model with no hyperparameter tuning","e7716608":"Russian seasons<br>\nSpring - March, April, May<br>\nSummer - June to August<br>\nAutumn - Sept to Nov<br>\nWinter - Dec to Feb","f9cb564a":"Encoding the 'mean_price_for_shop' column.","0b022767":"test = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_cats = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')","e45dad7c":"After removing the outliers","687799f5":"## test.set_index('ID',inplace=True)","76a238a1":"From the groupby call we can clearly see that 'item_cnt_day' for a month of a year is higher than that of the previous year","9945f423":"We can see that sales has been pretty low for the 2015 and sales has been reducing in a yearly basis.","10ba343b":"Let's remove the outliers"}}