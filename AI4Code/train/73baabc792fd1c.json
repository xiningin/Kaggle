{"cell_type":{"c5fbd6dd":"code","0815eb08":"code","72ee110c":"code","16a38619":"code","5390d836":"code","b506473a":"code","86de7007":"markdown"},"source":{"c5fbd6dd":"from keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\nfrom keras.layers.normalization import BatchNormalization\nfrom keras.preprocessing.image import ImageDataGenerator\nimport numpy as np\nfrom keras.preprocessing import image\nimport warnings\n\nwarnings.filterwarnings('ignore')","0815eb08":"CNN = Sequential()\nCNN.add(Conv2D(32, (3, 3), input_shape = (64, 64, 3), activation = 'relu'))\nCNN.add(BatchNormalization())\nCNN.add(MaxPooling2D(pool_size = (2, 2)))\nCNN.add(Conv2D(32, (3, 3), activation = 'relu'))\nCNN.add(BatchNormalization())\nCNN.add(MaxPooling2D(pool_size = (2, 2)))\nCNN.add(Flatten())\nCNN.add(Dense(units = 128, activation = 'relu'))\nCNN.add(Dropout(0.2))\nCNN.add(Dense(units = 1, activation = 'sigmoid'))\nCNN.compile(optimizer='adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","72ee110c":"train_datagen = ImageDataGenerator(rescale = 1.\/255, \n                                   rotation_range =7, \n                                   horizontal_flip = True, \n                                   shear_range = 0.2,\n                                   height_shift_range = 0.07,\n                                   zoom_range = 0.2)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","16a38619":"training_set = train_datagen.flow_from_directory('..\/input\/dogs-cats-images\/dataset\/training_set', \n                                                 target_size= (64, 64), \n                                                 batch_size= 32, \n                                                 class_mode='binary')","5390d836":"test_set = test_datagen.flow_from_directory('..\/input\/dogs-cats-images\/dataset\/test_set', \n                                            target_size= (64, 64), \n                                            batch_size= 32, \n                                            class_mode='binary')","b506473a":"CNN.fit_generator(training_set, steps_per_epoch= 39, epochs = 100, validation_data= test_set, validation_steps= 7)","86de7007":"## Detection of cats and dogs with CNN"}}