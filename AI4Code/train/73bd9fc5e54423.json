{"cell_type":{"1f86a868":"code","02112e9d":"code","21f745e0":"code","1b445344":"code","adbfcb4c":"code","63d20f7e":"code","7ba16a37":"code","5923bb50":"code","db1ed47f":"code","17890e7d":"code","189d3457":"code","941dc751":"code","8a71fb5c":"code","336d667e":"code","26ca81cc":"code","3e82beef":"markdown","bc58e660":"markdown","e6e5ab18":"markdown","7a8dd077":"markdown","6003111d":"markdown","9ce658ad":"markdown","28fd9d2e":"markdown","cc00ac39":"markdown","c8ad810c":"markdown","636ec85b":"markdown","52202566":"markdown","6ba030c6":"markdown","816d155a":"markdown","b27df437":"markdown","73037bba":"markdown","3d778b64":"markdown"},"source":{"1f86a868":"# Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport folium\n\nimport plotly as py","02112e9d":"# Importing Dataset\ndf = pd.read_csv('\/kaggle\/input\/covid-19\/Covid_19.csv')\ndf.shape","21f745e0":"# checking columns\n# the names of columns are self-explanatory\ndf.columns","1b445344":"# Checking Null Values\n# There are no null values\ndf.isnull().sum()[df.isnull().sum() > 0]","adbfcb4c":"# Number of unique values in country column\ndf['country'].nunique()","63d20f7e":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = df[df['country'] == 'World']['date'], y = df[df['country'] == 'World']['new_cases'], mode = 'lines+markers', name = 'World', line = dict(color = 'Black', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'India']['date'], y = df[df['country'] == 'India']['new_cases'], mode = 'lines+markers', name = 'India', line = dict(color = 'Skyblue', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'United States']['date'], y = df[df['country'] == 'United States']['new_cases'], mode = 'lines+markers', name = 'United States', line = dict(color = 'Red', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'Brazil']['date'], y = df[df['country'] == 'Brazil']['new_cases'], mode = 'lines+markers', name = 'Brazil', line = dict(color = 'Green', width = 1.5)))\nfig.update_layout(updatemenus = [go.layout.Updatemenu(active = 0, buttons = list(\n[dict(label = 'All', method = 'update', args = [{'visible' : [True, True, True, True]}, {'title' : 'All', 'showlegend' : True}]),\n dict(label = 'World', method = 'update', args = [{'visible' : [True, False, False, False]}, {'title' : 'World', 'showlegend' : True}]),\ndict(label = 'India', method = 'update', args = [{'visible' : [False, True, False, False]}, {'title' : 'India', 'showlegend' : True}]),\ndict(label = 'United Sates', method = 'update', args = [{'visible' : [False, False, True, False]}, {'title' : 'United States', 'showlegend' : True}]),\ndict(label = 'Brazil', method = 'update', args = [{'visible' : [False, False, False, True]}, {'title' : 'Brazil', 'showlegend' : True}])]))])\nfig.show()","7ba16a37":"nuniq = df['country'].nunique()\nuniq = df['country'].unique()\nfig = go.Figure()\nfor i in range(nuniq):\n    fig.add_trace(go.Scatter(x = df[df['country'] == uniq[i]]['date'], y = df[df['country'] == uniq[i]]['new_cases'],\n                            mode = 'lines+markers', name = 'new cases', line = dict(color = 'Skyblue', width = 1.5)))\n\nfig.update_layout(updatemenus = [go.layout.Updatemenu(active = 211,\n                                                     buttons = list([dict(label = uniq[i], method = 'update',\n                                                                         args = [{'visible' : [False]*i + [True] + [False]*(nuniq-1-i)},\n                                                                                {'title' : uniq[i], 'showlegend' : True}]) for i in range(nuniq)]))])\nfig.show()","5923bb50":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = df[df['country'] == 'World']['date'], y = df[df['country'] == 'World']['total_cases'], mode = 'lines+markers', name = 'World', line = dict(color = 'Black', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'India']['date'], y = df[df['country'] == 'India']['total_cases'], mode = 'lines+markers', name = 'India', line = dict(color = 'Skyblue', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'United States']['date'], y = df[df['country'] == 'United States']['total_cases'], mode = 'lines+markers', name = 'United States', line = dict(color = 'Red', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'Brazil']['date'], y = df[df['country'] == 'Brazil']['total_cases'], mode = 'lines+markers', name = 'Brazil', line = dict(color = 'Green', width = 1.5)))\nfig.update_layout(updatemenus = [go.layout.Updatemenu(active = 0, buttons = list(\n[dict(label = 'All', method = 'update', args = [{'visible' : [True, True, True, True]}, {'title' : 'All', 'showlegend' : True}]),\n dict(label = 'World', method = 'update', args = [{'visible' : [True, False, False, False]}, {'title' : 'World', 'showlegend' : True}]),\ndict(label = 'India', method = 'update', args = [{'visible' : [False, True, False, False]}, {'title' : 'India', 'showlegend' : True}]),\ndict(label = 'United Sates', method = 'update', args = [{'visible' : [False, False, True, False]}, {'title' : 'United States', 'showlegend' : True}]),\ndict(label = 'Brazil', method = 'update', args = [{'visible' : [False, False, False, True]}, {'title' : 'Brazil', 'showlegend' : True}])]))])\nfig.show()","db1ed47f":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = df[df['country'] == 'World']['date'], y = df[df['country'] == 'World']['new_deaths'], mode = 'lines+markers', name = 'World', line = dict(color = 'Black', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'India']['date'], y = df[df['country'] == 'India']['new_deaths'], mode = 'lines+markers', name = 'India', line = dict(color = 'Skyblue', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'United States']['date'], y = df[df['country'] == 'United States']['new_deaths'], mode = 'lines+markers', name = 'United States', line = dict(color = 'Red', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'Brazil']['date'], y = df[df['country'] == 'Brazil']['new_deaths'], mode = 'lines+markers', name = 'Brazil', line = dict(color = 'Green', width = 1.5)))\nfig.update_layout(updatemenus = [go.layout.Updatemenu(active = 0, buttons = list(\n[dict(label = 'All', method = 'update', args = [{'visible' : [True, True, True, True]}, {'title' : 'All', 'showlegend' : True}]),\n dict(label = 'World', method = 'update', args = [{'visible' : [True, False, False, False]}, {'title' : 'World', 'showlegend' : True}]),\ndict(label = 'India', method = 'update', args = [{'visible' : [False, True, False, False]}, {'title' : 'India', 'showlegend' : True}]),\ndict(label = 'United Sates', method = 'update', args = [{'visible' : [False, False, True, False]}, {'title' : 'United States', 'showlegend' : True}]),\ndict(label = 'Brazil', method = 'update', args = [{'visible' : [False, False, False, True]}, {'title' : 'Brazil', 'showlegend' : True}])]))])\nfig.show()","17890e7d":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = df[df['country'] == 'World']['date'], y = df[df['country'] == 'World']['total_deaths'], mode = 'lines+markers', name = 'World', line = dict(color = 'Black', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'India']['date'], y = df[df['country'] == 'India']['total_deaths'], mode = 'lines+markers', name = 'India', line = dict(color = 'Skyblue', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'United States']['date'], y = df[df['country'] == 'United States']['total_deaths'], mode = 'lines+markers', name = 'United States', line = dict(color = 'Red', width = 1.5)))\nfig.add_trace(go.Scatter(x = df[df['country'] == 'Brazil']['date'], y = df[df['country'] == 'Brazil']['total_deaths'], mode = 'lines+markers', name = 'Brazil', line = dict(color = 'Green', width = 1.5)))\nfig.update_layout(updatemenus = [go.layout.Updatemenu(active = 0, buttons = list(\n[dict(label = 'All', method = 'update', args = [{'visible' : [True, True, True, True]}, {'title' : 'All', 'showlegend' : True}]),\n dict(label = 'World', method = 'update', args = [{'visible' : [True, False, False, False]}, {'title' : 'World', 'showlegend' : True}]),\ndict(label = 'India', method = 'update', args = [{'visible' : [False, True, False, False]}, {'title' : 'India', 'showlegend' : True}]),\ndict(label = 'United Sates', method = 'update', args = [{'visible' : [False, False, True, False]}, {'title' : 'United States', 'showlegend' : True}]),\ndict(label = 'Brazil', method = 'update', args = [{'visible' : [False, False, False, True]}, {'title' : 'Brazil', 'showlegend' : True}])]))])\nfig.show()","189d3457":"df_world = df[df['country'] == 'World']\ndf_world.shape","941dc751":"temp = df_world[['date', 'total_cases', 'total_deaths']].reset_index(drop = True)\ntm = temp.melt(id_vars = 'date', value_vars = ['total_cases', 'total_deaths'], var_name = 'Case', value_name = 'Count')\n\nfig = px.area(tm, x = 'date', y = 'Count', height = 400, color = 'Case', title = 'Cases over time')\nfig.update_layout(xaxis_rangeslider_visible = True)\nfig.show()","8a71fb5c":"df_india = df[df['country'] == 'India']\n\ntemp = df_india[['date', 'total_cases', 'total_deaths']].reset_index(drop = True)\ntm = temp.melt(id_vars = 'date', value_vars = ['total_cases', 'total_deaths'], var_name = 'Case', value_name = 'Count')\n\nfig = px.area(tm, x = 'date', y = 'Count', height = 400, color = 'Case', title = 'Cases over time')\nfig.update_layout(xaxis_rangeslider_visible = True)\nfig.show()","336d667e":"temp = df[df['date'] == max(df['date'])]\n\n# colour coding for total cases per million\nclr = []\nfor i in range(0, temp.shape[0]):\n    ct = temp.iloc[i]['total_cases_per_million']\n    if(ct <= 50):\n        clr.append('green')\n    elif(50 < ct <= 2500):\n        clr.append('brown')\n    else:\n        clr.append('red')\n\nmp = folium.Map(location = [0,0], min_zoom = 1, max_zoom = 4, start_zoom = 1)\n\nfor i in range(0, temp.shape[0]):\n    folium.Circle(location = [temp.iloc[i]['Lat'], temp.iloc[i]['Long']], color = clr[i], fill = clr[i],\n                 tooltip = '<li><bold>Country: ' + str(temp.iloc[i]['country']) +\n                 '<li><bold>Total Cases: ' + str(temp.iloc[i]['total_cases']) +\n                 '<li><bold>Total Cases per million: ' + str(temp.iloc[i]['total_cases_per_million']) +\n                 '<li><bold>Total Deaths: ' + str(temp.iloc[i]['total_deaths']),\n                 radius = 0.4).add_to(mp)\n\nmp","26ca81cc":"df_coun = df[df['country'] != 'World']\n\nfig = px.choropleth(df_coun, locations = 'country', locationmode = 'country names', color = df_coun['total_cases'],\n                   hover_name = 'country', animation_frame = df_coun['date'],\n                   title = 'Total Cases over time')\nfig.update(layout_coloraxis_showscale = True)\nfig.show()","3e82beef":"**New Deaths everyday for selected countries**","bc58e660":"**Total Cases for selected countries**","e6e5ab18":"Use dropdown menu to select different countries.\n\nMove cursor over the graph to see values on different dates.","7a8dd077":"# **Plotly Graphs**","6003111d":"**Cases in India**","9ce658ad":"Use dropdown menu to select different countries.\n\nMove cursor over the graph to see values on different dates.\n\nThis can be done on all countries. Complete file available on my github - https:\/\/github.com\/AnuragPatel101\/Covid-19\n\nAs an example, I am showing for new cases only","28fd9d2e":"**Total Cases with choropleth map**\n\nIt allows us to see numerical data based on colour coding","cc00ac39":"**Worldwide cases on Folium map**","c8ad810c":"**Worldwide Cases over time with area map**","636ec85b":"**New Cases everyday for selected countries**","52202566":"Move cursor over the graph to see values on different dates.","6ba030c6":"This is like Google Map.\n\nZoom in and Zoom out.\n\nHold cursor to move the map.","816d155a":"Updated on : 26-Nov-2020\n\nThis file traces the spread of covid across countries and the world.\n\nUse dropdown menu in Plotly to get graphs for different countries\n\nComplete file available on my GitHub- https:\/\/github.com\/AnuragPatel101\/Covid-19","b27df437":"Use dropdown menu to select different countries.\n\nMove cursor over the graph to see values on different dates.","73037bba":"Use dropdown menu to select different countries.\n\nMove cursor over the graph to see values on different dates.","3d778b64":"**Total Deaths for selected countries**"}}