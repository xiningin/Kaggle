{"cell_type":{"33e9d107":"code","9d9fa3f1":"code","f5f48b52":"code","27fd23df":"code","32eb1c0b":"code","16e08fba":"code","7806d607":"code","c925a929":"code","c0e8d154":"code","864ea4d8":"code","3f208554":"markdown","0ed467a2":"markdown","88a55c19":"markdown","a0deffcd":"markdown","f528f229":"markdown","072a7c89":"markdown","caa2657b":"markdown","7e1038e0":"markdown"},"source":{"33e9d107":"import matplotlib.pyplot as plt \nimport pandas as pd\nimport numpy as np","9d9fa3f1":"from matplotlib.offsetbox import AnchoredText\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\nfig, ax = plt.subplots(1, 1)\n\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes(\"top\", size=\"11%\", pad=0)\ncax.get_xaxis().set_visible(False)\ncax.get_yaxis().set_visible(False)\ncax.set_facecolor('black')\n\nat = AnchoredText(\"My Log Normal Example\", loc=10,\n                  prop=dict(backgroundcolor='black',\n                            size=12, color='white'))\ncax.add_artist(at)\n\nplt.show()","f5f48b52":"np.random.seed(0)\ndf = pd.DataFrame(np.random.uniform(0,20, size=(4,4)))\ndf = df.div(df.sum(1), axis=0)\nax = df.plot.barh(stacked=True, width=1, legend=False)","27fd23df":"from matplotlib.patches import FancyBboxPatch\n\nax = df.plot.barh(stacked=True, width=1, legend=False)\n\nnew_patches = []\nfor patch in reversed(ax.patches):\n    bb = patch.get_bbox()\n    color=patch.get_facecolor()\n    p_bbox = FancyBboxPatch((bb.xmin, bb.ymin),\n                        abs(bb.width), abs(bb.height),\n                        boxstyle=\"round,pad=-0.0040,rounding_size=0.015\",\n                        ec=\"none\", fc=color,\n                        mutation_aspect=4\n                        )\n    patch.remove()\n    new_patches.append(p_bbox)\n\nfor patch in new_patches:\n    ax.add_patch(patch)","32eb1c0b":"data = np.random.normal(0.1, size=(100,6))\ndata[76:79,:] = np.ones((3,6))+0.2\n\nplt.figure(figsize=(4,3))\n# option 1, specify props dictionaries\nc = \"red\"\nplt.boxplot(data[:,:3], positions=[1,2,3], notch=True, patch_artist=True,\n            boxprops=dict(facecolor=c, color=c),\n            capprops=dict(color=c),\n            whiskerprops=dict(color=c),\n            flierprops=dict(color=c, markeredgecolor=c),\n            medianprops=dict(color=c),\n            )\n\n\n# option 2, set all colors individually\nc2 = \"purple\"\nbox1 = plt.boxplot(data[:,::-2]+1, positions=[1.5,2.5,3.5], notch=True, patch_artist=True)\nfor item in ['boxes', 'whiskers', 'fliers', 'medians', 'caps']:\n        plt.setp(box1[item], color=c2)\nplt.setp(box1[\"boxes\"], facecolor=c2)\nplt.setp(box1[\"fliers\"], markeredgecolor=c2)\n\n\nplt.xlim(0.5,4)\nplt.xticks([1,2,3], [1,2,3])\nplt.show()","16e08fba":"p1, = plt.plot([1, 2, 3], label='Line 1')\np2, = plt.plot([3, 2, 1], label='Line 2')\nplt.legend(handles=[p1, p2], title='title', bbox_to_anchor=(1.05, 1), loc='upper left')","7806d607":"with plt.style.context('dark_background'):\n\n    for param in ['text.color', 'axes.labelcolor', 'xtick.color', 'ytick.color']:\n        plt.rcParams[param] = '0.9'  # very light grey\n    for param in ['figure.facecolor', 'axes.facecolor', 'savefig.facecolor']:\n        plt.rcParams[param] = '#212946'  # bluish dark grey\n    colors = [\n        '#08F7FE',  # teal\/cyan\n        '#FE53BB',  # pink\n        '#F5D300',  # yellow\n        '#00ff41',  # matrix green\n    ]\n    df = pd.DataFrame({'A': [1, 3, 9, 5, 2, 1, 1],\n                       'B': [4, 5, 5, 7, 9, 8, 6]})\n    fig, ax = plt.subplots(figsize=(10, 7))\n    df.plot(marker='o', color=colors, ax=ax)\n    # Redraw the data with low alpha and slighty increased linewidth:\n    n_shades = 10\n    diff_linewidth = 1.05\n    alpha_value = 0.3 \/ n_shades\n    for n in range(1, n_shades+1):\n        df.plot(marker='o',\n                linewidth=2+(diff_linewidth*n),\n                alpha=alpha_value,\n                legend=False,\n                ax=ax,\n                color=colors)\n    # Color the areas below the lines:\n    for column, color in zip(df, colors):\n        ax.fill_between(x=df.index,\n                        y1=df[column].values,\n                        y2=[0] * len(df),\n                        color=color,\n                        alpha=0.1)\n    ax.grid(color='#2A3459')\n    ax.set_xlim([ax.get_xlim()[0] - 0.2, ax.get_xlim()[1] + 0.2])  # to not have the markers cut off\n    ax.set_ylim(0)\n    plt.show()","c925a929":"import matplotlib.pyplot as plt\nimport numpy as np\n\nfig, axes = plt.subplots(nrows=2, ncols=3, figsize=(8.5, 5))\n\nfor ax in axes.flat:\n    ax.set_axis_off()\n    im = ax.imshow(np.random.random((16, 16)), cmap='viridis',\n                   vmin=0, vmax=1)\n\nfig.subplots_adjust(bottom=0.1, top=0.9, left=0.1, right=0.8,\n                    wspace=0.02, hspace=0.02)\n\n# add an axes, lower left corner in [0.83, 0.1] measured in figure coordinate with axes width 0.02 and height 0.8\n\ncb_ax = fig.add_axes([0.83, 0.1, 0.02, 0.8])\ncbar = fig.colorbar(im, cax=cb_ax)\n\ncbar.set_ticks(np.arange(0, 1.1, 0.5))\ncbar.set_ticklabels(['low', 'medium', 'high'])\n\nplt.show()","c0e8d154":"import numpy as np\nimport matplotlib.pyplot as plt\n\nN = 80\nbottom = 8\nmax_height = 4\n\ntheta = np.linspace(0.0, 2 * np.pi, N, endpoint=False)\nradii = max_height*np.random.rand(N)\nwidth = (2*np.pi) \/ N\n\nax = plt.subplot(111, polar=True)\nbars = ax.bar(theta, radii, width=width, bottom=bottom)\n\n# Use custom colors and opacity\nfor r, bar in zip(radii, bars):\n    bar.set_facecolor(plt.cm.jet(r \/ 10.))\n    bar.set_alpha(0.8)\n\nplt.show()\n","864ea4d8":"import matplotlib.pyplot as plt\nfig, ax = plt.subplots(1, 1, figsize=(7, 7))\n\nlabels = ['Frogs', 'Hogs', 'Dogs', 'Logs']\nsizes = [15, 30, 45, 10]\n#colors\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99']\n \nax.pie(sizes, colors = colors, labels=labels, autopct='%1.1f%%', startangle=90, pctdistance=0.85)\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nax.add_artist(centre_circle)\n\nfig.tight_layout()\nplt.show()\n","3f208554":"## Circular \/ polar histogram in python\n\n> https:\/\/stackoverflow.com\/questions\/22562364\/circular-polar-histogram-in-python","0ed467a2":"## Add Box Shape Title\n\n> https:\/\/stackoverflow.com\/questions\/40796117\/how-do-i-make-the-width-of-the-title-box-span-the-entire-plot\/40923440","88a55c19":"## Matplotlib Boxplot Color\n\n> https:\/\/stackoverflow.com\/questions\/41997493\/python-matplotlib-boxplot-color","a0deffcd":"## How to Plot Only One Colorbar for Multiple Plot Using Matplotlib\n\n> https:\/\/jdhao.github.io\/2017\/06\/11\/mpl_multiplot_one_colorbar\/","f528f229":"## Cyberpunk Style with Matplotlib\n\n> https:\/\/towardsdatascience.com\/cyberpunk-style-with-matplotlib-f47404c9d4c5","072a7c89":"## Rounded Corner Barchart\n\n> https:\/\/stackoverflow.com\/questions\/58425392\/bar-chart-with-rounded-corners-in-matplotlib","caa2657b":"## Better visualization of Pie charts by MatPlotLib - Donut Chart\n\n> https:\/\/medium.com\/@kvnamipara\/a-better-visualisation-of-pie-charts-by-matplotlib-935b7667d77f","7e1038e0":"## How to put the legend out of the plot\n\n> https:\/\/stackoverflow.com\/questions\/4700614\/how-to-put-the-legend-out-of-the-plot"}}