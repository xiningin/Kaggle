{"cell_type":{"453a7658":"code","e925427d":"code","824714c7":"code","64b0f57a":"code","a82c0499":"code","10ad4843":"code","ed772e67":"code","fa5d96e0":"code","f8c7c1fc":"code","0dc22c8b":"code","a374c43b":"code","e89ca26a":"code","971fd6f4":"code","46f3c79f":"code","9327b1a8":"code","a7c5c455":"code","dfcf9d2c":"code","9c8c0786":"code","d6150fd1":"code","881342df":"code","bf3318fc":"code","6f4b0ca1":"code","8c565ec7":"code","cb7038ea":"code","c5c2ff1e":"code","0921c358":"code","bef8e3d5":"code","1a2273eb":"code","22459ee7":"code","59d39afc":"code","751949ec":"code","8252fa0f":"code","cfb59e5e":"code","690a2b08":"code","41b5989b":"code","1491336f":"code","59193e03":"code","7c10c9c0":"code","4e8262ba":"code","61a786c3":"markdown","ddcc7dfc":"markdown","bcd25faa":"markdown","e541318e":"markdown","55fed986":"markdown","092d2e54":"markdown","49e4f697":"markdown","b4b40f47":"markdown","f7cace0e":"markdown","4f907b42":"markdown","45877e12":"markdown","6f95c283":"markdown","01b15ac5":"markdown","e4906412":"markdown","489f0bc0":"markdown","7f6558e3":"markdown"},"source":{"453a7658":"# lets import the required libraries\r\n\r\n# for mathemaical operations\r\nimport numpy as np\r\n# for dataframe manipulations\r\nimport pandas as pd\r\n\r\n# for data visualizations\r\nimport seaborn as sns\r\nimport matplotlib.pyplot as plt\r\nimport plotly.express as px\r\n\r\n# setting parameters for visualization\r\nplt.rcParams['figure.figsize'] = (16, 5)\r\nplt.style.use('fivethirtyeight')","e925427d":"import os\nprint(os.listdir(\"..\/input\"))","824714c7":"# lets read the data set\ndata = pd.read_csv('..\/input\/insurance\/insurance.csv')\ndata.shape","64b0f57a":"# lets check the head of the dataset\r\ndata.head()","a82c0499":"# lets check the missing values in the dataset\r\ndata.isnull().sum()","10ad4843":"# lets check the descriptive summary\r\ndata.describe().style.background_gradient(cmap = 'Greens')","ed772e67":"# lets check the distribution of smoker, children and region\r\n\r\nplt.subplot(1, 3, 1)\r\nplt.pie(data['smoker'].value_counts().values,\r\n        labels = data['smoker'].value_counts().index,\r\n        colors = ['gold','silver'],\r\n        startangle = 90,\r\n        shadow = True,\r\n       explode = [0.1, 0])\r\n\r\nplt.subplot(1, 3, 2)\r\nsns.countplot(data['children'], palette = 'magma')\r\nplt.grid()\r\n\r\nplt.subplot(1, 3, 3)\r\nplt.pie(data['region'].value_counts().values,\r\n        labels = data['region'].value_counts().index,\r\n        colors = ['gold','silver','grey','black'],\r\n        startangle = 90,\r\n        shadow = True,\r\n       explode = [0.1, 0, 0, 0])\r\nplt.suptitle('Distribution of Smoker, Children and Regions', fontsize = 15)\r\nplt.show()","fa5d96e0":"# lets check the distribution of age, bmi and expenses\n\nplt.subplot(1, 3, 1)\nsns.distplot(data['age'], color = 'black')\nplt.xlabel('Age')\nplt.grid()\n\nplt.subplot(1, 3, 2)\nsns.distplot(data['bmi'], color = 'orange')\nplt.xlabel('BMI')\nplt.grid()\n\nplt.subplot(1, 3, 3)\nsns.distplot(data['charges'], color = 'aqua')\nplt.xlabel('Charges')\nplt.grid()\n\nplt.suptitle('Distribution of Age, BMI, and Charges', fontsize = 15)\nplt.show()","f8c7c1fc":"pip install statsmodels","0dc22c8b":"# lets understand the impact of age on Medical Expenses\npx.scatter(data, y = 'charges',\n           x = 'age',\n           marginal_y = 'violin',\n           trendline = 'ols')","a374c43b":"# lets understand the impact of bmi on Medical Expenses\npx.scatter(data, y = 'charges',\n           x = 'bmi',\n           marginal_y = 'violin',\n           trendline = 'ols')","e89ca26a":"# lets check the impact of smoking and childrens in Medical Expenses\n\nplt.subplot(1, 2, 1)\nsns.boxplot(data['children'], data['charges'])\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data['smoker'], data['charges'])\n\nplt.suptitle('Impact of Smoking and Childrens on Expenses', fontsize = 20)\nplt.show()","971fd6f4":"# As we can see from the above chart that having 4 and 5 childrens is having similar impact on expenses\r\n# so let's cap these values\r\n\r\ndata['children'] = data['children'].replace((4, 5), (3, 3))\r\n\r\n# lets check the value counts\r\ndata['children'].value_counts()","46f3c79f":"px.scatter(data,\n        x=\"charges\",\n                 y=\"age\",\n                 facet_row=\"children\",\n                 facet_col=\"region\",\n                 color=\"smoker\",\n                 trendline=\"ols\")","9327b1a8":"px.scatter(data,\n        x=\"charges\",\n                 y=\"bmi\",\n                 facet_row=\"children\",\n                 facet_col=\"region\",\n                 color=\"smoker\",\n                 trendline=\"ols\")","a7c5c455":"# A Bubble Chart to Represent the relation of Expense with BMI, Age, smoking\n# only for the North West Region\npx.scatter(data,\n                 x=\"charges\",\n                 y=\"bmi\",\n                 size=\"age\",\n                 color=\"smoker\",\n           hover_name=\"charges\", size_max=15)","dfcf9d2c":"px.bar_polar(data, r=\"charges\", theta=\"region\", color = 'sex', template = 'plotly_dark',\r\n            color_discrete_sequence= px.colors.sequential.Plasma_r)","9c8c0786":"# lets check the impact of Regions in Expenses\n\ndata[['charges', 'region']].groupby(['region']).agg(['min','mean','max']).style.background_gradient(cmap = 'Wistia')","d6150fd1":"# as we can see that all the columns are important, we will not remove any column\r\ndata.head()","881342df":"# lets perform encoding\r\n\r\n# as we know males have higher expense than females, lets encode males as 2, and females as 1, \r\n# similarly smokers, have highers expense, so we will encode smokers as 2, and non smokers as 1,\r\n# as we know that the south east region has higher expense than other regions\r\n\r\ndata['sex'] = data['sex'].replace(('male','female'), (2, 1))\r\ndata['smoker'] = data['smoker'].replace(('yes','no'), (2, 1))\r\ndata['region'] = data['region'].replace(('southeast','southwest','northeast','northwest'),(2, 1, 1, 1))\r\n\r\n# let's check whether any categorical column is left\r\ndata.select_dtypes('object').columns","bf3318fc":"# now lets check our data again\r\ndata.head()","6f4b0ca1":"# lets form dependent and independent sets\n\ny = data['charges']\nx = data.drop(['charges'], axis = 1)\n\nprint(y.shape)\nprint(x.columns)","8c565ec7":"# lets perform train test split\r\n\r\nfrom sklearn.model_selection import train_test_split\r\n\r\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)\r\n\r\nprint(x_train.shape)\r\nprint(x_test.shape)\r\nprint(y_train.shape)\r\nprint(y_test.shape)","cb7038ea":"# lets perform standardization\r\n\r\nfrom sklearn.preprocessing import StandardScaler\r\n\r\nsc = StandardScaler()\r\nx_train = sc.fit_transform(x_train)\r\nx_test = sc.transform(x_test)","c5c2ff1e":"# lets create the Model\r\n\r\n# lets create a simple Linear Regression Model\r\nfrom sklearn.linear_model import LinearRegression\r\n\r\nmodel1 = LinearRegression()\r\nmodel1.fit(x_train, y_train)\r\n\r\ny_pred1 = model1.predict(x_test)","0921c358":"# lets check the Model accuracy\r\nfrom sklearn.metrics import r2_score, mean_squared_error\r\n\r\nmse = mean_squared_error(y_test, y_pred1)\r\nrmse = np.sqrt(mse)\r\nprint(\"RMSE Score :\", rmse)\r\n\r\nr2_score = r2_score(y_test, y_pred1)\r\nprint(\"R2 Score :\",r2_score)","bef8e3d5":"# lets create a Random Forest Model\r\n\r\nfrom sklearn.ensemble import RandomForestRegressor\r\n\r\nmodel2 = RandomForestRegressor()\r\nmodel2.fit(x_train, y_train)\r\n\r\ny_pred2 = model2.predict(x_test)\r\n\r\n# lets check the Model accuracy\r\nfrom sklearn.metrics import r2_score, mean_squared_error\r\n\r\nmse = mean_squared_error(y_test, y_pred2)\r\nrmse = np.sqrt(mse)\r\nprint(\"RMSE Score :\", rmse)\r\n\r\nr2_score = r2_score(y_test, y_pred2)\r\nprint(\"R2 Score :\",r2_score)","1a2273eb":"# lets create a Gradient Boosting Model\r\n\r\nfrom sklearn.ensemble import GradientBoostingRegressor\r\n\r\nmodel3 = GradientBoostingRegressor()\r\nmodel3.fit(x_train, y_train)\r\n\r\ny_pred3 = model3.predict(x_test)\r\n\r\n# lets check the Model accuracy\r\nfrom sklearn.metrics import r2_score, mean_squared_error\r\n\r\nmse = mean_squared_error(y_test, y_pred3)\r\nrmse = np.sqrt(mse)\r\nprint(\"RMSE Score :\", rmse)\r\n\r\nr2_score = r2_score(y_test, y_pred3)\r\nprint(\"R2 Score :\",r2_score)","22459ee7":"# lets create an ensemble by averaging \r\n\r\navg_model = (y_pred1 + y_pred2 + y_pred3)\/3\r\n\r\n# lets check the Model accuracy\r\nfrom sklearn.metrics import r2_score, mean_squared_error\r\n\r\nmse = mean_squared_error(y_test, avg_model)\r\nrmse = np.sqrt(mse)\r\nprint(\"RMSE Score :\", rmse)\r\n\r\nr2_score = r2_score(y_test, avg_model)\r\nprint(\"R2 Score :\",r2_score)","59d39afc":"# lets create an weighted averaging model\r\n\r\n# lets give 50% weight to gradient boosting\r\n# 30% weight to random forest\r\n# and 20% weight to linear regression\r\n\r\nweight_avg_model = 0.2*y_pred1 + 0.3*y_pred2 + 0.5*y_pred3\r\n\r\n# lets check the Model accuracy\r\nfrom sklearn.metrics import r2_score, mean_squared_error\r\n\r\nmse = mean_squared_error(y_test, weight_avg_model)\r\nrmse = np.sqrt(mse)\r\nprint(\"RMSE Score :\", rmse)\r\n\r\nr2_score = r2_score(y_test, weight_avg_model)\r\nprint(\"R2 Score :\",r2_score)","751949ec":"## lets perform cross validaion\r\n\r\nfrom sklearn.model_selection import cross_val_score\r\nscores = cross_val_score(model3, x, y, cv=5)\r\nprint(scores)","8252fa0f":"r2_score = np.array([0.79, 0.87, 0.89])\r\nlabels = np.array(['Linear Regression', 'Random Forest' 'Gradient Boosting'])\r\nindex = np.argsort(r2_score)\r\ncolor = plt.cm.rainbow(np.linspace(0, 1, 4))\r\n\r\nplt.style.use('fivethirtyeight')\r\nplt.rcParams['figure.figsize'] = (4, 4)\r\n\r\nplt.bar(range(len(index)), r2_score[index], color = color)\r\nplt.xticks(range(0, 3), ['Linear Regression', 'Random Forest','Gradient Boosting'], rotation = 90)\r\nplt.title('Comparison of r2 Score', fontsize = 15)\r\nplt.show()","cfb59e5e":"import seaborn as sns\nsns.distplot(data['charges'])","690a2b08":"data['charges'] = np.log1p(data['charges'])\n\n# lets again check the Distribution\nsns.distplot(data['charges'])","41b5989b":"y = data['charges']\nx = data.drop(['charges'], axis = 1)\n\nprint(x.shape)\nprint(y.shape)","1491336f":"# lets perform train test split\r\n\r\nfrom sklearn.model_selection import train_test_split\r\n\r\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)\r\nprint(x_train.shape)\r\nprint(x_test.shape)\r\nprint(y_train.shape)\r\nprint(y_test.shape)","59193e03":"from sklearn.preprocessing import StandardScaler\r\n\r\nsc = StandardScaler()\r\nx_train = sc.fit_transform(x_train)\r\nx_test = sc.transform(x_test)","7c10c9c0":"from sklearn.linear_model import LinearRegression\r\n\r\nmodel = LinearRegression()\r\nmodel.fit(x_train, y_train)\r\n\r\ny_pred = model.predict(x_test)","4e8262ba":"from sklearn.metrics import r2_score\r\n\r\nr2 = r2_score(y_test, y_pred)\r\nprint(r2)","61a786c3":"* With Increasing Age, Expense is expeted to increase, but It is not obvious for all the scenarios.","ddcc7dfc":"### Bivariate Analysis","bcd25faa":"* This Chart makes it clear that BMI is not powerful indicator Expenses, as people having less BMI also have high Medical Expenses.\n* This chart makes it clear that People who smoke have higher Medical Expenses.\n* The Size of Bubble, which represents age, shows that people having higher expenses belong to Higher Expenses category","e541318e":"## Comparison of Models","55fed986":"* This Chart clearly depits that the Southeast region has higher expenses compared to other regions.\n* This Chart clearly shows that Males have Higher Expenses in general in all the regions.","092d2e54":"## Multivariate Analysis","49e4f697":"### Data Processing","b4b40f47":"### Univariate Analysis","f7cace0e":"* as we can see that the scores are not varying much, so we can say that this model is good.","4f907b42":"## Hurray, now we can see that the Expenses Column is in Normal Distribution, hence we can apply the Linear Regression Algorithms into this Dataset","45877e12":"### Above, we have applied Linear Regression model even when the dependent variable is not normally distributed as one of the assumption for applying linear regression is to have \"Dependent variable should be normally distributed\". Now, let's convert this dependent variable into normally distributed distribution and let's see the result obtained with it. ","6f95c283":"* We can clearly see that there is a increasing pattern for BMI as well.\n* For smoker with less BMI: Expense is around 20k\n* For Smokers with High BMI: Expense is around 50K\n* For Non Smokers BMI is not a Huge Factor, The Expense range from 5k to 10k","01b15ac5":"## Predictive Modelling","e4906412":"* The Expenses of Smokers in all regions ranges from 20 to 60k\n* Whereas the Expenses of Non Smokers in all regions ranges from 10 to 20K\n* The Lesser range of Expense is for lesser age people and vice versa.","489f0bc0":"### Apply Log Transformation into the Expenses Column","7f6558e3":"### Apply Splitting"}}