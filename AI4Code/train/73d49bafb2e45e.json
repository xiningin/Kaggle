{"cell_type":{"ab3bebed":"code","d9e13f53":"code","14f1885d":"code","3b0723c5":"code","7d11fa2b":"code","ba1dfed6":"code","b61bd9dc":"code","d1fd1e53":"code","05d896f6":"code","af60cdb1":"code","140a1b64":"code","1223bd77":"code","c9a64c78":"code","343dc523":"code","4a1e9744":"code","fbd7a216":"code","92d9750c":"code","2ec046a1":"markdown","d63874b5":"markdown","48cdc183":"markdown","394b41c7":"markdown","f03659f3":"markdown","22aeaa2f":"markdown","e73190ac":"markdown","90f8a96e":"markdown"},"source":{"ab3bebed":"import numpy as np\nimport pandas as pd\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom tqdm.autonotebook import tqdm\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestRegressor\n\ndevice = 'cuda:0' if torch.cuda.is_available() else 'cpu'","d9e13f53":"tracks_data_df = pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/data.csv')\ntracks_data_df.head()","14f1885d":"tracks_data_df.tail()","3b0723c5":"tracks_data_df.describe()","7d11fa2b":"tracks_data_df.hist(figsize=(15, 15), color='black')\nplt.show()","ba1dfed6":"plt.figure(figsize=(20, 10))\nsns.heatmap(tracks_data_df.corr(), annot=True)","b61bd9dc":"sns.scatterplot(x=\"year\", y=\"popularity\", data=tracks_data_df, alpha=0.03, color='blue')","d1fd1e53":"sns.scatterplot(x=\"danceability\", y=\"popularity\", data=tracks_data_df, alpha=0.03, color='blue')","05d896f6":"sns.scatterplot(x=\"energy\", y=\"popularity\", data=tracks_data_df, alpha=0.03, color='blue')","af60cdb1":"sns.scatterplot(x=\"loudness\", y=\"popularity\", data=tracks_data_df, alpha=0.03, color='blue')","140a1b64":"sns.scatterplot(x=\"tempo\", y=\"popularity\", data=tracks_data_df, alpha=0.03, color='blue')","1223bd77":"features = ['year', 'danceability', 'energy', 'loudness', 'tempo']\ntracks_data = tracks_data_df.copy()\nfeatures_tracks_data = tracks_data_df[features]","c9a64c78":"scaler = StandardScaler()\nscaler.fit(features_tracks_data)\nfeatures_tracks_data = scaler.transform(features_tracks_data)\n\ny_tracks_data = tracks_data.popularity.values \/ 100\n\nX_train, X_test, y_train, y_test = train_test_split(features_tracks_data, y_tracks_data, test_size=0.2, random_state=42)","343dc523":"for column in range(X_train.shape[1]): \n    print(X_train[:, column].min(), X_train[:, column].max())","4a1e9744":"clf = RandomForestRegressor()\nclf.fit(X_train, y_train)","fbd7a216":"preds = clf.predict(X_test)\n\naccuracy = clf.score(X_test, y_test)\nprint(\"Test Accuracy: {:.4f}\".format(accuracy*100))\n\naverage_error = (abs(y_test - preds)).mean()\nprint(\"{:.4f} average error\".format(average_error))","92d9750c":"for index in range(len(preds[:100])): \n    \n    pred = preds[index]\n    actual = y_test[index]\n    \n    print(\"Actual \/ Predicted: {:.4f} \/ {:.4f}\".format(actual, pred))","2ec046a1":"We don't need to worry about outliners, because in this example they barely effect the performance of the model.","d63874b5":"### Visualizing Data","48cdc183":"## Imports","394b41c7":"As you can see above, year, danceability, energy, loudness and tempo are important features for predicting popularity.","f03659f3":"Let's take a look on the correlations between these features and popularity:","22aeaa2f":"## Data Preparation","e73190ac":"### Data normalization","90f8a96e":"## Create Random Forest Regressor\n\nI used a Random Forest Regressor as my model because in this case it actually works better than a Decision Tree Regressor or a simple neural network. "}}