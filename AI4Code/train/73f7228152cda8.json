{"cell_type":{"0c52191b":"code","89cb2cca":"code","fd9ace42":"code","fada352e":"code","d7adc855":"code","35eaa4a5":"code","258c03f3":"code","2a132727":"code","c20c0523":"code","6b1f150e":"code","feb745b3":"code","0bb3507c":"code","44233dc8":"code","e915a5bd":"code","dfebe40a":"code","85763ab3":"code","27aa4cd8":"code","738a0da2":"code","99e96938":"code","d4517268":"code","8bbf5987":"code","d8d34455":"code","613e653e":"code","d129b72b":"code","a505650a":"markdown","8be6cc03":"markdown","30e54abf":"markdown","b5b894a2":"markdown","80a35291":"markdown","f6a8d21c":"markdown","52e89899":"markdown","5dd7809c":"markdown","824f1d4c":"markdown","9d5bccf6":"markdown","cccb3dac":"markdown","b0d03b43":"markdown","1cc4ed90":"markdown","341afc4f":"markdown","ad9e081f":"markdown","c0901234":"markdown"},"source":{"0c52191b":"import numpy as np\nimport pandas as pd \nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nimport seaborn as sns\nfrom sklearn.preprocessing import scale \nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.metrics import roc_auc_score,roc_curve\nimport statsmodels.formula.api as smf\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import tree\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, BaggingClassifier, VotingClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.preprocessing import StandardScaler  \nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","89cb2cca":"diabetes = pd.read_csv(\"..\/input\/diabets\/diabetes.csv\") #datay\u0131 okuma\ndf = diabetes.copy() #datan\u0131n kopyas\u0131n\u0131 alma\ndf = df.dropna() #bo\u015f de\u011ferleri \u00e7\u0131kartma\ndf.head() #ilk 5 g\u00f6zlem","fd9ace42":"df.info() # genel bilgiler\n","fada352e":"df[\"Outcome\"].value_counts() # Outcome de\u011ferleri","d7adc855":"df[\"Outcome\"].value_counts().plot.barh(); #g\u00f6rsel olarak bakma","35eaa4a5":"df.describe().T # istatistiksel baz\u0131 de\u011ferler","258c03f3":"y = df[\"Outcome\"] # ba\u011f\u0131ml\u0131 de\u011fi\u015fken\nX = df.drop([\"Outcome\"], axis=1) # ba\u011f\u0131ms\u0131z de\u011fi\u015fken","2a132727":"X_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.30, \n                                                    random_state=42) # datay\u0131 test train olarak b\u00f6lme","c20c0523":"svm_model = SVC(random_state = 42).fit(X_train, y_train)\ny_pred = svm_model.predict(X_test)\ny_pred_train = svm_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","6b1f150e":"svc_model = SVC(kernel = \"linear\",random_state = 42).fit(X_train, y_train)\ny_pred = svc_model.predict(X_test)\ny_pred_train = svc_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","feb745b3":"cart = DecisionTreeClassifier(max_depth =8, random_state = 42)\ncart_model = cart.fit(X_train, y_train)\ny_pred = cart_model.predict(X_test)\ny_pred_train = cart_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","0bb3507c":"knn = KNeighborsClassifier(n_neighbors = 8, weights = 'distance',leaf_size = 39, p = 150)\nknn_model = knn.fit(X_train, y_train)\ny_pred = knn_model.predict(X_test)\ny_pred_train = knn_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","44233dc8":"rf_model = RandomForestClassifier(random_state = 42, n_estimators=150, max_depth=9, max_leaf_nodes=9).fit(X_train, y_train)\ny_pred = rf_model.predict(X_test)\ny_pred_train = rf_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","e915a5bd":"svc = SVC(probability=True,kernel='linear')\nadb_model = AdaBoostClassifier(base_estimator = svc, random_state = 42).fit(X_train, y_train)\ny_pred = adb_model.predict(X_test)\ny_pred_train = adb_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","dfebe40a":"svc = SVC(probability=True, kernel='linear')\nbag_model = BaggingClassifier(base_estimator = svc, random_state = 42).fit(X_train, y_train)\ny_pred = bag_model.predict(X_test)\ny_pred_train = bag_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","85763ab3":"Knn_clf = KNeighborsClassifier()\nDTree_clf = DecisionTreeClassifier()\nSVC_clf = SVC()\nvoting_clf = VotingClassifier(estimators=[('SVC', SVC_clf), ('DTree', DTree_clf), ('Knn', Knn_clf)], voting='hard')\nvoting_clf.fit(X_train, y_train)\neclf_model = voting_clf.fit(X_train, y_train)\ny_pred = eclf_model.predict(X_test)\ny_pred_train = eclf_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","27aa4cd8":"scaler = StandardScaler()\nscaler.fit(X_train)\nX_train_scaled = scaler.transform(X_train)\nX_test_scaled = scaler.transform(X_test)\nmlpc_model = MLPClassifier(random_state = 42).fit(X_train_scaled, y_train)\ny_pred = mlpc_model.predict(X_test_scaled)\ny_pred_train = mlpc_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","738a0da2":"cat_model = CatBoostClassifier(random_state = 42).fit(X_train, y_train)\ny_pred = cat_model.predict(X_test)\ny_pred_train = cat_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","99e96938":"lgbm_model = LGBMClassifier(random_state = 42).fit(X_train, y_train)\ny_pred = lgbm_model.predict(X_test)\ny_pred_train = lgbm_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","d4517268":"xgb_model = XGBClassifier(random_state = 42).fit(X_train, y_train)\ny_pred = xgb_model.predict(X_test)\ny_pred_train = xgb_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","8bbf5987":"nb = GaussianNB()\nnb_model = nb.fit(X_train, y_train)\ny_pred = nb_model.predict(X_test)\ny_pred_train = nb_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","d8d34455":"gbm_model = GradientBoostingClassifier(random_state=42).fit(X_train, y_train)\ny_pred = gbm_model.predict(X_test)\ny_pred_train = gbm_model.predict(X_train)\nprint(\"** Karma\u015f\u0131kl\u0131k Matrisi **\\n\",confusion_matrix(y_test, y_pred))\nprint(\"** Test Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_test, y_pred))\nprint(\"** Train Seti Do\u011fruluk Oran\u0131 **\\n:\",accuracy_score(y_train, y_pred_train))\nprint(classification_report(y_test, y_pred)) ","613e653e":"modeller = [\n    knn_model,\n    svc_model,\n    nb_model,\n    mlpc_model,\n    cart_model,\n    rf_model,\n    gbm_model,\n    cat_model,\n    lgbm_model,\n]\n\n\nfor model in modeller:\n    isimler = model.__class__.__name__\n    y_pred = model.predict(X_test)\n    dogruluk = accuracy_score(y_test, y_pred)\n    print(\"-\"*28)\n    print(isimler + \":\" )\n    print(\"Accuracy: {:.4%}\".format(dogruluk))","d129b72b":"sonuc = []\n\nsonuclar = pd.DataFrame(columns= [\"Modeller\",\"Accuracy\"])\n\nfor model in modeller:\n    isimler = model.__class__.__name__\n    y_pred = model.predict(X_test)\n    dogruluk = accuracy_score(y_test, y_pred)    \n    sonuc = pd.DataFrame([[isimler, dogruluk*100]], columns= [\"Modeller\",\"Accuracy\"])\n    sonuclar = sonuclar.append(sonuc)\n    \n    \nsns.barplot(x= 'Accuracy', y = 'Modeller', data=sonuclar, color=\"r\")\nplt.xlabel('Accuracy %')\nplt.title('Modellerin Do\u011fruluk Oranlar\u0131');    ","a505650a":"# Yapay Sinir A\u011flar\u0131","8be6cc03":"# Ada Boost Classifier","30e54abf":"# K-nearest neighbors","b5b894a2":"# Cat Boost","80a35291":"# XGBM","f6a8d21c":"# Voting Classifier","52e89899":"# Random Forest Classifier","5dd7809c":"# Support Vector Machines with Linear Kernel","824f1d4c":"# Bagging Classifier","9d5bccf6":"# Decision Tree Classifier","cccb3dac":"# LightGBM","b0d03b43":"# T\u00fcm Modellerin Kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131","1cc4ed90":"# Gaussian Naive Bayes","341afc4f":"# Support Vector Classification","ad9e081f":"# GBM Model","c0901234":"> "}}