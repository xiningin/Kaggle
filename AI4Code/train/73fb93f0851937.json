{"cell_type":{"aabb061b":"code","1c0d2a59":"code","fb7f4686":"code","3eded26e":"code","607390a5":"code","2eb36e6c":"code","4dcf4cb5":"code","f9e19298":"code","93786bd2":"code","9a3de501":"code","8b00afe6":"code","3914606e":"code","baf0f021":"code","c1f09361":"code","f4a08075":"code","eba9f56c":"markdown","f65d1618":"markdown","95410da3":"markdown","3941da2c":"markdown","0efd82d0":"markdown","595a0bed":"markdown","507553e9":"markdown","75a31af0":"markdown","9e310052":"markdown","24403f7e":"markdown","ff590c18":"markdown","87ac51f8":"markdown","a6d24ec9":"markdown"},"source":{"aabb061b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom math import pi\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n\n# Any results you write to the current directory are saved as output.","1c0d2a59":"df = pd.read_csv(\"..\/input\/data.csv\")\ndf.info()","fb7f4686":"ColumnNames = list(df.columns.values)\nColumnNames","3eded26e":"C_Data = pd.concat([df[['ID','Name','Preferred Foot','Position','Age','Overall','Value']],df[ColumnNames[54:88]]],axis=1)\n","607390a5":"C_Data.isnull().sum()","2eb36e6c":"C_Data[C_Data.Position.isnull()]","4dcf4cb5":"C_Data = C_Data.dropna()","f9e19298":"def CleanSalary(param1):\n    param1 = param1.replace('\u20ac','')\n    if 'K' in param1:\n        param1 = float(param1.replace('K',''))*1000\n    elif 'M' in param1:\n        param1 = float(param1.replace('M',''))*1000000\n    return float(param1)\n\nC_Data['Value'] = C_Data['Value'].apply(lambda x: CleanSalary(x))","93786bd2":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom mpl_toolkits.mplot3d import Axes3D \n%matplotlib inline","9a3de501":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(C_Data['Age'],C_Data['Overall'],C_Data['Value'],c='b',marker='.')\nax.set_xlabel('Age', fontsize=12)\nax.set_ylabel('Player Level',fontsize=12,rotation=90)\nax.set_zlabel('Value',fontsize=12,rotation=90)\nax.view_init(15,45)","8b00afe6":"C_Data = pd.concat([df[['Position','Overall']],df[ColumnNames[54:88]]],axis=1)\nHeatmapData = C_Data.groupby('Position').mean()\nsns.heatmap(HeatmapData,cmap='Blues',xticklabels = True,yticklabels = True)","3914606e":"labels = np.array(HeatmapData.columns.values)\nN = len(labels)\n\nPosition = 'CB'\nstats=HeatmapData.loc[Position,labels]\n\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\n\nstats=np.concatenate((stats,[stats[0]]))\nangles=np.concatenate((angles,[angles[0]]))\n\n\nfig=plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, polar=True)\nax.plot(angles, stats, 'o-', linewidth=1)\nax.fill(angles, stats, alpha=0.9)\nax.set_thetagrids(angles * 180\/np.pi, labels)\nax.set_title(Position)\nax.grid(True)","baf0f021":"labels = np.array(HeatmapData.columns.values)\nN = len(labels)\n\nPosition = 'CAM'\nstats=HeatmapData.loc[Position,labels]\n\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\n\nstats=np.concatenate((stats,[stats[0]]))\nangles=np.concatenate((angles,[angles[0]]))\n\n\nfig=plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, polar=True)\nax.plot(angles, stats, 'o-', linewidth=1)\nax.fill(angles, stats, alpha=0.9)\nax.set_thetagrids(angles * 180\/np.pi, labels)\nax.set_title(Position)\nax.grid(True)","c1f09361":"labels = np.array(HeatmapData.columns.values)\nN = len(labels)\n\nPosition = 'ST'\nstats=HeatmapData.loc[Position,labels]\n\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\n\nstats=np.concatenate((stats,[stats[0]]))\nangles=np.concatenate((angles,[angles[0]]))\n\n\nfig=plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, polar=True)\nax.plot(angles, stats, 'o-', linewidth=1)\nax.fill(angles, stats, alpha=0.9)\nax.set_thetagrids(angles * 180\/np.pi, labels)\nax.set_title(Position)\nax.grid(True)","f4a08075":"labels = np.array(HeatmapData.columns.values)\nN = len(labels)\n\nPosition = 'GK'\nstats=HeatmapData.loc[Position,labels]\n\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\n\nstats=np.concatenate((stats,[stats[0]]))\nangles=np.concatenate((angles,[angles[0]]))\n\n\nfig=plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, polar=True)\nax.plot(angles, stats, 'o-', linewidth=1)\nax.fill(angles, stats, alpha=0.9)\nax.set_thetagrids(angles * 180\/np.pi, labels)\nax.set_title(Position)\nax.grid(True)","eba9f56c":"I thought skills, preferred foot, position, age, overall and all skills will be useful to analyze players' positions.","f65d1618":"60 rows with null values are less then 5% of total rows. For this reason I am going to omit these rows.","95410da3":"Now time to see rows which has null values.","3941da2c":"A function to Cleaning salary column.","0efd82d0":"Handling the missing data.","595a0bed":"Visualizations","507553e9":"Average Central Back","75a31af0":"3D plot to describe Age - Player Level - Value","9e310052":"Firstly, I listed all columns in dataset to decide which one will be used in kernel.","24403f7e":"Average Central Attacking Midfielder","ff590c18":"I create some plots about positions in football. Therefore I used Fifa 19 Dataset to explore abilities of players in different positions. \n\nThis is my first to step data analytics world. So I will be glad to recieve any kind of feedbacks from you. \n\nThanks for feedbacks and your answers.","87ac51f8":"Heatmap for position based average skills","a6d24ec9":"Average Striker"}}