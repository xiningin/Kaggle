{"cell_type":{"5c34f0a2":"code","b611e705":"code","4af9c0f7":"code","f923527d":"code","afa81b21":"code","82551acc":"code","3ca8304c":"code","cacbe650":"code","3d8e479c":"code","4dc30542":"code","ce661fc0":"code","5515ed2f":"code","587110b8":"code","d02ec6cb":"code","7f605b79":"code","2468b99c":"code","8cd41560":"code","b4949ff0":"code","c5037230":"markdown","16470b4c":"markdown","e3aebb1e":"markdown","81aedc81":"markdown","1d21787d":"markdown","4f71e4ab":"markdown","e4af8d37":"markdown","a51b7ed5":"markdown","253a3ce3":"markdown","60ec2fc8":"markdown","d8e683e4":"markdown","107b1d12":"markdown","2d0af90e":"markdown","a6acacd1":"markdown","3e64701f":"markdown"},"source":{"5c34f0a2":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom fbprophet import Prophet\nfrom sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor, GradientBoostingRegressor\nfrom xgboost import XGBRegressor, XGBRFRegressor\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import r2_score\nplt.style.use(\"bmh\")","b611e705":"data = pd.read_csv('\/kaggle\/input\/time-series-starter-dataset\/Month_Value_1.csv').dropna()\ndata.head()","4af9c0f7":"df   = pd.DataFrame({\"ds\":[],\"y\":[]})\ndf[\"ds\"] = pd.date_range(start=\"01-01-2015\",end=\"05-01-2020\",freq=\"M\")\ndf[\"y\"]  = data.iloc[:,2]\ndf.head()","f923527d":"train_fb = df[df['ds'] < \"01-01-2019\"]\ntest_fb = df[df['ds'] >= \"01-01-2019\"]","afa81b21":"train_fb.shape, test_fb.shape","82551acc":"forecast_period = len(test_fb)\nfreq = \"M\"\nweekly_seasonality = False","3ca8304c":"model = Prophet(weekly_seasonality=weekly_seasonality)\nmodel.fit(train_fb)\nfuture = model.make_future_dataframe(periods=forecast_period,freq=freq)\ndf_forecast = model.predict(future)","cacbe650":"r2_score(df.y, df_forecast.yhat[:len(df)])","3d8e479c":"ax = df.set_index(\"ds\")\nax[\"y\"].plot(figsize=(10.25,3.45))\nplt.title(\"Sales Data\")\nplt.ylabel(\"Sales Quantity\")\nplt.xlabel(\"Years\")\nplt.show()\nmodel.plot_components(df_forecast,figsize=(9,6))\nplt.show()","4dc30542":"model.plot(df_forecast,xlabel=\"Years\",ylabel=\"Values\",figsize=(9,4))\nplt.legend([\"Actual\",\"Forecast\"])\nplt.show()\nax1 = train_fb.set_index(\"ds\")\nax2 = df_forecast[[\"ds\", \"yhat\"]].set_index(\"ds\")\nax2[\"yhat\"].plot(label=\"Forecast\", lw=3)\nax1[\"y\"].plot(figsize=(10.25,4), color=\"k\", label=\"Actual\")\nplt.title(\"Sales Data\")\nplt.ylabel(\"Sales Quantity\")\nplt.xlabel(\"Years\")\nplt.legend()\nplt.show()","ce661fc0":"pred_fb = df_forecast[[\"ds\", \"yhat_lower\", \"yhat\", \"yhat_upper\"]].tail(forecast_period)\npred_fb.style.background_gradient(\"Blues\")","5515ed2f":"models = [RandomForestRegressor(),AdaBoostRegressor(), GradientBoostingRegressor(), XGBRegressor(), XGBRFRegressor()]","587110b8":"import numpy as np\ndef dataset_generator(df):\n    df['Day'] = [i.day for i in df['ds']]\n    df['Month'] = [i.month for i in df['ds']]\n    df['Year'] = [i.year for i in df['ds']]\n    df['Series'] = np.arange(1,len(df)+1)\n    \n    return df[['Series', 'Year', 'Month', 'Day' ,'y']] ","d02ec6cb":"data = dataset_generator(df)\ndata.head()","7f605b79":"train = data[data['Year'] < 2019]\ntest = data[data['Year'] >= 2019]","2468b99c":"for model in models:\n    print(type(model).__name__)\n    regressor = model\n    regressor.fit(train[['Series', 'Year', 'Month', 'Day']], train['y'])\n    pred = regressor.predict(test[['Series', 'Year', 'Month', 'Day']])\n    print(round(r2_score(test['y'], pred),2))","8cd41560":"regressor = GradientBoostingRegressor()\nregressor.fit(train[['Series', 'Year', 'Month', 'Day']], train['y'])\npred = regressor.predict(test[['Series', 'Year', 'Month', 'Day']])","b4949ff0":"plt.figure(figsize=(10.25,4))\nplt.plot(pred, label=\"Forecast (GBR)\")\nplt.plot(test['y'].values, label=\"Test Data R2: {}\".format(round(r2_score(test['y'], pred),2)))\nplt.legend()\nplt.show()\n\nplt.figure(figsize=(10.25,4))\nplt.plot(pred_fb[\"yhat\"].values, label=\"Forecast (FBProphet)\")\nplt.plot(test_fb['y'].values, label=\"Test Data R2: {}\".format(round(r2_score(test_fb['y'], pred_fb[\"yhat\"]),2)))\nplt.legend()\nplt.show()","c5037230":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Visualization\n<\/div>","16470b4c":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Benchmark\n<\/div>","e3aebb1e":"## Seasonality, Holiday Effects, And Regressors\n\n<center><img src=\"https:\/\/miro.medium.com\/max\/624\/1*cnpHt71qOxrUeWkqGYDuFg.png\"><\/center>","81aedc81":"<div style=\"color:black;\n           display:fill;\n           border-radius:5px;\n           background-color:Beige;\n           font-size:110%;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;\n              color:black;\">\nProphet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well [1].\n<\/p>\n<\/div> ","1d21787d":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     SALES FORECASTING WITH FBPROPHET\n<\/div>","4f71e4ab":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Performance of Model\n<\/div>","e4af8d37":"1.  https:\/\/facebook.github.io\/prophet\/","a51b7ed5":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Dataset\n<\/div>","253a3ce3":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Introduction\n<\/div>","60ec2fc8":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Packages\n<\/div>","d8e683e4":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Prophet\n<\/div>","107b1d12":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Forecasting\n<\/div>","2d0af90e":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     References\n<\/div>","a6acacd1":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:LightSlateGray;\n           font-size:150%;\n           text-align:center;\n           letter-spacing:0.5px\">\n     Gradient Boosting Regressor\n<\/div>","3e64701f":"<center><img src=\"https:\/\/miro.medium.com\/max\/1200\/1*BVIwEoE5oEmHJU8XbV_mKA.png\"><\/center>"}}