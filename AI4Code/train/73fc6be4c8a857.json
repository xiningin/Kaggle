{"cell_type":{"a8cc1477":"code","37df150c":"code","ab06f53d":"code","d7c01967":"code","33533460":"code","9ccfe6ff":"code","c69d251e":"code","326bc347":"code","b3804a66":"code","a76a1a1a":"code","c1696ea7":"markdown","80c5b434":"markdown","12afe0b1":"markdown","afbe0a30":"markdown","38d676b7":"markdown","9c2edfc4":"markdown","21b15c52":"markdown","2dc03317":"markdown","83a107a6":"markdown"},"source":{"a8cc1477":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","37df150c":"dataset = pd.read_csv('..\/input\/Social_Network_Ads.csv')\nX = dataset.iloc[:, [2,3]].values\ny = dataset.iloc[:, 4].values","ab06f53d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n","d7c01967":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","33533460":"from sklearn.tree import DecisionTreeClassifier\nclassifier=DecisionTreeClassifier(criterion=\"entropy\",random_state=0)\nclassifier.fit(X_train,y_train)","9ccfe6ff":"y_pred=classifier.predict(X_test)\nprint(y_pred)","c69d251e":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\n","326bc347":"from sklearn.metrics import accuracy_score\nacc=accuracy_score(y_test, y_pred)\nprint(acc)","b3804a66":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_train, y_train\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Training set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","a76a1a1a":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_test, y_test\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()\n\n","c1696ea7":"importing library\n*  NumPy is a package in Python used for Scientific Computing. The ndarray (NumPy Array) is a multidimensional array used to store values of same datatype\n* matplotlib.pyplot for data visualization \n* pandas for data manipulation  \n","80c5b434":" Feature Scaling","12afe0b1":"Predicting a new result","afbe0a30":"importing dataset to x and y","38d676b7":"Splitting the dataset into the Training set and Test set","9c2edfc4":"confusion_matrix","21b15c52":" Visualising the Training set results\n","2dc03317":"fitting model","83a107a6":" Visualising the Test set results\n"}}