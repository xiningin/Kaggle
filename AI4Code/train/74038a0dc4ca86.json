{"cell_type":{"ab7d9866":"code","57043592":"code","ed2b9f48":"code","c56bf940":"code","19dfccaa":"code","f69d70f1":"code","0ecf9bd8":"code","2677c9b9":"code","c78f592b":"code","f0c46e90":"code","9f3eb017":"code","55614a3c":"code","4149f10f":"code","e10cdbb2":"code","bae07181":"code","50934a4b":"code","1dc3a917":"code","843842d2":"code","7badfd16":"markdown","2284621d":"markdown","801f4e22":"markdown","e2d51b57":"markdown","b48c67b9":"markdown"},"source":{"ab7d9866":"import pandas as pd\nimport numpy as np","57043592":"fifa = pd.read_csv('..\/input\/fifa19\/data.csv')\nscore_below_70 = fifa.loc[(fifa['Overall']<70)]\nscore_above_70 = fifa.loc[(fifa['Overall']>=70)]\nscore_below_70.head()","ed2b9f48":"score_above_70.head()","c56bf940":"fifa['Weight'].mean()","19dfccaa":"fifa['Weight'].fillna('166lbs', inplace = True)\nfifa['Height'].fillna(\"5'11\", inplace = True)\nfifa['Overall'].fillna('66', inplace = True)","f69d70f1":"fifahw = pd.DataFrame(fifa, columns = ['Height','Weight','Overall'])\nfifahw.sample(10)","0ecf9bd8":"import pandas as pd\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport sklearn\n\nsn.heatmap(fifa[['Height','Weight','Overall']].corr(), annot = True)\n\nplt.title('Correlation Matrix')\nplt.show()","2677c9b9":"fifa['Dribbling'].mean()","c78f592b":"fifa['Dribbling'].fillna('55', inplace = True)","f0c46e90":"fifa['FKAccuracy'].mean()","9f3eb017":"fifa['FKAccuracy'].fillna('43', inplace = True)","55614a3c":"sn.heatmap(fifa[['Dribbling','FKAccuracy','Overall']].corr(), annot = True)\n\nplt.title('Correlation Matrix')\nplt.show()","4149f10f":"three_correlated_features = fifa[['Height', 'Weight', 'Overall']]\n#for three_correlated_features:\nx_train, x_test, y_train, y_test = train_test_split(three_correlated_features, target, test_size=0.2, random_state=42)\nmodel = LinearRegression()\nmodel.fit(x_train, y_train)\nprint(model.score(x_test, y_test))\n\n","e10cdbb2":"import seaborn as sns","bae07181":"emissions_china = emissions.loc[(emissions['Entity']=='China')]\nemissions_china_year = emissions_china[['Year','Annual CO\u2082 emissions (tonnes )']]\nemissions_china_year.head()","50934a4b":"emissions_us = emissions.loc[(emissions['Entity']=='United States')]\nemissions_us_year = emissions_us[['Year','Annual CO\u2082 emissions (tonnes )']]\nemissions_us_year.head()","1dc3a917":"import matplotlib.pyplot as plt\nplt.plot(emissions_china_year['Year'],emissions_china_year['Annual CO\u2082 emissions (tonnes )'], label='China')\nplt.plot(emissions_us_year['Year'],emissions_us_year['Annual CO\u2082 emissions (tonnes )'], label='US')\nplt.legend()\nplt.xlabel('Year')\nplt.ylabel('Annual CO\u2082 emissions (tonnes)')\nplt.title('China vs US CO\u2082 emissions')\nplt.show()","843842d2":"Z, hmx, hmy = np.histogram2d(emissions_china_year['Year'],emissions_china_year['Annual CO\u2082 emissions (tonnes )'])\n\nplt.title('Heatmap of China\\'s Carbon Emissions')\nplt.xlabel('Year')\nplt.ylabel('Annual CO\u2082 emissions (tonnes )')\nplt.pcolormesh(hmx,hmy,Z.T)\n\nplt.show()\n","7badfd16":"Now let's try to visualize these two datasets with a correlation matrix.","2284621d":"Looking at this 3d scatterplot, we can see that the versicolor and virginica is actually much more separable, unlike what was indicated in our previous 2d plot. We can therefore conclude that these three features are enough to implement an effective classifier.\n### Heat Map\nAnother plot for visualizing density is a heat map. Heat maps are a bivariate distribution which assigns colors to different regions depending on the density (or frequency or magnitude, depending on which feature you are trying to visualize) of values in that region.","801f4e22":"The Problem:\nWill a player's overall rating surpass a score of 70?\nWill a certain selection of attributes be a better predictor of whether their overall surpasses 70?\n\nHypothesis:\n1. A certain set of attributes representing athleticism (ie height and weight) will be a better predictor than a different set of attributes representing skill (dribbling and accuracy) in determining whether overall > 70\n\n","e2d51b57":"# Cleaning the Dataset\n\nFirst, let's clean the dataset. Let's begin by importing pandas and munpy. ","b48c67b9":"# Comparing The Distribution of CO2 Emissions By Country in 2000 and in 2017\n\nBy: Carnell Zhou cz375\n    Ellen Li el667\n\nIntroduction: \nThe 26th installment of the FIFA series, FIFA 19 is a competitive football simulation video game. The game features a large selection of players from real life, each with factual specifications such as their club, age, preferred foot, wage and nationality as well as appointed numerical scores that estimate their ability in a host of categories including dribbling, ball control, composure, and accuracy. Inside the game, the user can assume control of the different in-game players by passing the ball between them. In addition, the user can control an individual player\u2019s motion, shot-timing (to produce more accurate shots), and dribbling moves to get around defenders.  \n\nDescription:\nThe data set that we chose was a representation of FIFA 19's Player Attributes. The data set details 18206 unique players each with the attributes: Age, Nationality, Overall, Potential, Club, Value, Wage, Preferred Foot, International Reputation, Weak Foot, Skill Moves, Work Rate, Position, Jersey Number, Joined, Loaned From, Contract Valid Until, Height, Weight, LS, ST, RS, LW, LF, CF, RF, RW, LAM, CAM, RAM, LM, LCM, CM, RCM, RM, LWB, LDM, CDM, RDM, RWB, LB, LCB, CB, RCB, RB, Crossing, Finishing, Heading, Accuracy, ShortPassing, Volleys, Dribbling, Curve, FKAccuracy, LongPassing, BallControl, Acceleration, SprintSpeed, Agility, Reactions, Balance, ShotPower, Jumping, Stamina, Strength, LongShots, Aggression, Interceptions, Positioning, Vision, Penalties, Composure, Marking, StandingTackle, SlidingTackle, GKDiving, GKHandling, GKKicking, GKPositioning, GKReflexes, and Release Clause."}}