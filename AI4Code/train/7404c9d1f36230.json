{"cell_type":{"5b18c6b7":"code","ff0518dc":"code","6169eb0f":"code","a7ad58ff":"code","55395a5c":"code","45e71f17":"code","1ddeae2e":"code","b93261e1":"code","0923f654":"code","f3ad44d4":"code","6e8dec3e":"code","36bf1dd6":"code","1ee7c456":"code","e5aa239d":"code","2e9c8208":"code","c9eda23b":"code","2606f513":"code","60042e8e":"code","9dc6dd85":"code","9dde1150":"code","7450b5f0":"code","bc45697d":"code","95248713":"code","063875d1":"code","fbd1c366":"markdown","42b258cc":"markdown","94a69568":"markdown","1602d01a":"markdown","4033dc49":"markdown","c5c86ade":"markdown"},"source":{"5b18c6b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff0518dc":"## import the necessary libraries\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set()","6169eb0f":"## load in the data\ndata = pd.read_csv(\"..\/input\/diabetes\/diabetes.csv\")","a7ad58ff":"## check the data\ndata.head()","55395a5c":"## check the info of the data\ndata.info()","45e71f17":"## check for missing values\ndata.isnull().sum()","1ddeae2e":"## check the columns \ndata.columns","b93261e1":"## check the shape of the dataset\ndata.shape","0923f654":"## descriptive analysis\ndata.describe()","f3ad44d4":"## relationship between features\nsns.pairplot(data)","6e8dec3e":"## correlation\ndata.corr()","36bf1dd6":"## heatmap correlation\nplt.figure(figsize=(20,20))\nsns.heatmap(data.corr(), annot=True, cmap=\"RdYlGn\")","1ee7c456":"## age\nsns.distplot(data[\"Age\"])","e5aa239d":"## Replace zeros in ['Glucose','BloodPressure','SkinThickness','Insulin','BMI','Pregnancies'] with mean\ndata[\"Glucose\"] = data[\"Glucose\"].replace(0,data[\"Glucose\"].mean())\ndata[\"BloodPressure\"] = data[\"BloodPressure\"].replace(0,data[\"BloodPressure\"].mean())\ndata[\"SkinThickness\"] = data[\"SkinThickness\"].replace(0,data[\"SkinThickness\"].mean())\ndata[\"Insulin\"] = data[\"Insulin\"].replace(0,data[\"Insulin\"].mean())\ndata[\"BMI\"] = data[\"BMI\"].replace(0,data[\"BMI\"].mean())\ndata[\"Pregnancies\"] = data[\"Pregnancies\"].replace(0,data[\"Pregnancies\"].mean())","2e9c8208":"## check descriiptive analysis after filling missing value and compare with the previous one\ndata.describe()","c9eda23b":"## select the independent and dependent features \nX = data.drop(columns=\"Outcome\") #you can also use this method - data = data.drop([\"Outcome\"], axis=1)\ny = data[\"Outcome\"]","2606f513":"## split the data into training and test set \nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","60042e8e":"##check the shape of the trianing set \nX_train.shape","9dc6dd85":"## shape of the test size\nX_test.shape","9dde1150":"## Feature scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","7450b5f0":"## modelling and predicting \n\nfrom sklearn.ensemble import RandomForestClassifier\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, y_train)\n\ny_prediction = random_forest.predict(X_test)","bc45697d":"from sklearn.metrics import classification_report, confusion_matrix\n\nprint(classification_report(y_test, y_prediction))","95248713":"## confusion matrix\ncm = confusion_matrix(y_test, y_prediction)\ncm","063875d1":"## plot confusion matrix\nsns.heatmap(cm, annot=True, cmap=\"mako\")","fbd1c366":"As we can see we have no missing value here but it clearly shows in our dataset that we have missing values, curious right? hang on till data cleaning","42b258cc":"# Diabetes\n\n## Diabetes is a disease that occurs when your blood glucose, also called blood sugar, is too high. Blood glucose is your main source of energy and comes from the food you eat. Insulin, a hormone made by the pancreas, helps glucose from food get into your cells to be used for energy.\n","94a69568":"# Modelling and Predicting","1602d01a":"## Data Cleaning","4033dc49":"The missing values we have in this data set are Zeros (0s). we have to replace the zeros with mean ","c5c86ade":"#### Thanks for reading,Suggestions and corrections are welcomed :)"}}