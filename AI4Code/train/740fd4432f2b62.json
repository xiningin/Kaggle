{"cell_type":{"b567add9":"code","4c94665b":"code","20eefe3c":"code","8f534576":"code","99ec9a51":"code","1f08811c":"code","0e6e7d66":"code","7f947461":"code","71ab1c24":"code","8a5cd14f":"code","e43e523c":"code","77156d31":"code","a108cb84":"code","18508b43":"code","476f3b1f":"code","82fd670b":"code","3d313550":"code","189083f7":"code","1e81692a":"code","75dc02fb":"code","de4971ec":"code","30c12dfd":"code","58ae1cb8":"code","b76e8330":"code","61ccbf02":"code","63095208":"code","ab8c8245":"code","50b94e4e":"code","3d7ed87a":"code","7e5fca84":"markdown","ec6c4d70":"markdown","6564cee9":"markdown"},"source":{"b567add9":"!pip install plotly","4c94665b":"import tensorflow as tf\nimport keras\n\nimport sklearn\nfrom sklearn.model_selection import train_test_split, KFold\nfrom sklearn.metrics import jaccard_score\n\nfrom scipy import stats\n\nimport seaborn as sns\n\nimport skimage\nfrom skimage.transform import rotate\n\nfrom tqdm import tqdm\nfrom datetime import datetime\n\nimport numpy as np\nimport os\nimport cv2\nimport pandas as pd\n# import imutils\nimport random\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport plotly.offline as pyoff\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nimport pickle","20eefe3c":"df = pd.read_csv('..\/input\/supermarketdata\/Supermarket Data.csv')\ndf.head()","8f534576":"df.drop(['SHOP_HOUR', 'PROD_CODE', 'PROD_CODE_10', 'PROD_CODE_20', 'PROD_CODE_30', 'PROD_CODE_40', 'CUST_LIFESTAGE', 'STORE_REGION', 'STORE_FORMAT'], axis=1, inplace=True)\ndf.head()","99ec9a51":"df['DATE'] = pd.to_datetime(df['SHOP_DATE'], format='%Y%m%d')\ndf.drop(['SHOP_DATE'], axis=1, inplace=True)","1f08811c":"df['MONTH'] = df['DATE'].map(lambda date: date.year*100 + date.month)\ndf_revenue = df.groupby(['MONTH']).agg({'SPEND' : 'sum'}).reset_index()\ndf_revenue.head()","0e6e7d66":"plot_data = [\n             go.Scatter(\n                 x = df_revenue['MONTH'],\n                 y = df_revenue['SPEND'],\n             )\n]\n\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Revenue\"\n)\n\nfig1 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig1)","7f947461":"df_revenue['MONTHLYGROWTH'] = df_revenue['SPEND'].pct_change()\ndf_revenue.head()","71ab1c24":"plot_data = [\n             go.Bar(\n                 x = df_revenue['MONTH'],\n                 y = df_revenue['MONTHLYGROWTH'],\n             )\n]\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Revenue Growth Rate\"\n)\nfig2 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig2)","8a5cd14f":"df_cust = df.groupby('MONTH')['CUST_CODE'].nunique().reset_index()\ndf_cust.head()","e43e523c":"plot_data = [\n             go.Scatter(\n                 x = df_cust['MONTH'],\n                 y = df_cust['CUST_CODE'],\n             )\n]\n\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Customer\"\n)\n\nfig3 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig3)","77156d31":"df_cust['MONTHLYGROWTH'] = df_cust['CUST_CODE'].pct_change()\ndf_cust.head()","a108cb84":"plot_data = [\n             go.Bar(\n                 x = df_cust['MONTH'],\n                 y = df_cust['MONTHLYGROWTH'],\n             )\n]\nplot_layout = go.Layout(\n    xaxis = {'type': 'category'},\n    title = \"Monthly Customer Growth Rate\"\n)\nfig4 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig4)","18508b43":"df_store = df.groupby(['STORE_CODE']).agg({'SPEND' : 'sum'}).reset_index()\ndf_store","476f3b1f":"plot_data = [\n             go.Pie(\n                 labels = df_store['STORE_CODE'], \n                 values = df_store['SPEND'],\n             )\n]\n\nplot_layout = go.Layout(\n    title = \"Store Revenue\"\n)\n\nfig5 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig5)","82fd670b":"df_basket_size = df.groupby(['BASKET_SIZE']).agg({'SPEND' : 'sum'}).reset_index()\ndf_basket_size","3d313550":"plot_data = [\n             go.Pie(\n                 labels = df_basket_size['BASKET_SIZE'], \n                 values = df_basket_size['SPEND'],\n             )\n]\n\nplot_layout = go.Layout(\n    title = 'Basket Size Revenue'\n)\n\nfig6 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig6)","189083f7":"df_basket_price = df.groupby(['BASKET_PRICE_SENSITIVITY']).agg({'SPEND' : 'sum'}).reset_index()[:3]\ndf_basket_price","1e81692a":"plot_data = [\n             go.Pie(\n                 labels = df_basket_price['BASKET_PRICE_SENSITIVITY'], \n                 values = df_basket_price['SPEND'],\n             )\n]\n\nplot_layout = go.Layout(\n    title = 'Basket Price Revenue'\n)\n\nfig7 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig7)","75dc02fb":"df_basket_type = df.groupby(['BASKET_TYPE']).agg({'SPEND' : 'sum'}).reset_index()[:3]\ndf_basket_type","de4971ec":"plot_data = [\n             go.Pie(\n                 labels = df_basket_type['BASKET_TYPE'], \n                 values = df_basket_type['SPEND'],\n             )\n]\n\nplot_layout = go.Layout(\n    title = 'Basket Type Revenue'\n)\n\nfig8 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig8)","30c12dfd":"df_dominant = df.groupby(['BASKET_DOMINANT_MISSION']).agg({'SPEND' : 'sum'}).reset_index()[:4]\ndf_dominant","58ae1cb8":"plot_data = [\n             go.Pie(\n                 labels = df_dominant['BASKET_DOMINANT_MISSION'], \n                 values = df_dominant['SPEND'],\n             )\n]\n\nplot_layout = go.Layout(\n    title = 'Basket Dominant Mission Revenue'\n)\n\nfig9 = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig9)","b76e8330":"%%sh\npip install -q dash\npip install -q dash_core_components\npip install -q dash_bootstrap_components\npip install -q dash_html_components\npip install -q dash_table","61ccbf02":"%%sh\n# get ngrok\ncurl -O https:\/\/bin.equinox.io\/c\/4VmDzA7iaHb\/ngrok-stable-linux-amd64.zip\nunzip ngrok-stable-linux-amd64.zip","63095208":"%%writefile dash_app.py\n\nimport dash\nimport dash_core_components as dcc\nimport dash_bootstrap_components as dbc\nimport dash_html_components as html\nimport pandas as pd\nimport plotly.express as px\nimport sklearn\n\nfrom sklearn.model_selection import train_test_split, KFold\nfrom sklearn.metrics import jaccard_score\n\nfrom scipy import stats\n\nimport seaborn as sns\n\nimport skimage\nfrom skimage.transform import rotate\n\nfrom tqdm import tqdm\nfrom datetime import datetime\n\nimport numpy as np\nimport os\nimport cv2\nimport pandas as pd\n# import imutils\nimport random\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport plotly.offline as pyoff\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nimport pickle\nexternal_stylesheets = ['https:\/\/codepen.io\/chriddyp\/pen\/bWLwgP.css']\n\napp = dash.Dash(__name__)#, external_stylesheets=external_stylesheets\n\n# %% [code]\ndf = pd.read_csv('..\/input\/supermarketdata\/Supermarket Data.csv')\ndf.head()\n\n# %% [code]\ndf.drop(['SHOP_HOUR', 'PROD_CODE', 'PROD_CODE_10', 'PROD_CODE_20', 'PROD_CODE_30', 'PROD_CODE_40', 'CUST_LIFESTAGE', 'STORE_REGION', 'STORE_FORMAT'], axis=1, inplace=True)\ndf.head()\n\n# %% [code]\ndf['DATE'] = pd.to_datetime(df['SHOP_DATE'], format='%Y%m%d')\ndf.drop(['SHOP_DATE'], axis=1, inplace=True)\n\n# %% [code]\ndf['MONTH'] = df['DATE'].map(lambda date: date.year*100 + date.month)\ndf_revenue = df.groupby(['MONTH']).agg({'SPEND' : 'sum'}).reset_index()\nfig1 = px.line(df_revenue, x='MONTH', y='SPEND', height=400, title=\"Monthly Revenue\")\n\n# %% [code]\ndf_revenue['MONTHLYGROWTH'] = df_revenue['SPEND'].pct_change()\nfig2 = px.bar(df_revenue, x=\"MONTH\", y='MONTHLYGROWTH', height=400, title=\"Monthly Revenue Growth Rate\")\n\n# %% [code]\ndf_cust = df.groupby('MONTH')['CUST_CODE'].nunique().reset_index()\nfig3 = px.line(df_cust, x='MONTH', y='CUST_CODE', height=400, title=\"Monthly Customer\")\n\n# %% [code]\ndf_cust['MONTHLYGROWTH'] = df_cust['CUST_CODE'].pct_change()\nfig4 = px.bar(df_cust, x='MONTH', y='MONTHLYGROWTH', height=400, title=\"Monthly Customer Growth Rate\")\n\n# %% [code]\ndf_store = df.groupby(['STORE_CODE']).agg({'SPEND' : 'sum'}).reset_index()\nfig5 = px.pie(labels=df_store['STORE_CODE'], values=df_store['SPEND'], height=400, title=\"Store Revenue\")\n\n# %% [code]\ndf_basket_size = df.groupby(['BASKET_SIZE']).agg({'SPEND' : 'sum'}).reset_index()\nfig6 = px.pie(labels=df_basket_size['BASKET_SIZE'], values=df_basket_size['SPEND'], height=400, title='Basket Size Revenue')\n\n# %% [code]\ndf_basket_price = df.groupby(['BASKET_PRICE_SENSITIVITY']).agg({'SPEND' : 'sum'}).reset_index()[:3]\n\n# %% [code]\nfig7 = px.pie(labels=df_basket_price['BASKET_PRICE_SENSITIVITY'], values=df_basket_price['SPEND'], height=400, title='Basket Price Revenue')\n\n# %% [code]\ndf_basket_type = df.groupby(['BASKET_TYPE']).agg({'SPEND' : 'sum'}).reset_index()[:3]\nfig8 = px.pie(labels=df_basket_type['BASKET_TYPE'], values=df_basket_type['SPEND'], height=400, title='Basket Type Revenue')\n\n# %% [code]\ndf_dominant = df.groupby(['BASKET_DOMINANT_MISSION']).agg({'SPEND' : 'sum'}).reset_index()[:4]\nfig9 = px.pie(labels=df_dominant['BASKET_DOMINANT_MISSION'], values=df_dominant['SPEND'], height=400, title='Basket Dominant Mission Revenue')\n\nfig1.update_xaxes(type='category')\nfig2.update_xaxes(type='category')\nfig3.update_xaxes(type='category')\nfig4.update_xaxes(type='category')\nfig5.update_xaxes(type='category')\nfig6.update_xaxes(type='category')\nfig7.update_xaxes(type='category')\nfig8.update_xaxes(type='category')\nfig9.update_xaxes(type='category')\n\n## dash app\napp = dash.Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])\nbody = html.Div([\n                 html.H1(\"Supermarket KPI Dashboard\")\n                 , dbc.Row([\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig1))),\n                                width=4\n                            ),\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig2))),\n                            ),\n                 ])\n                 , dbc.Row([\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig3))),\n                                width=4\n                            ),\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig4))),\n                            ),\n                 ])\n                 , dbc.Row([\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig5))),\n                            )\n                 ]), dbc.Row([\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig6))),\n                            ),\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig7))),\n                            )\n                 ]), dbc.Row([\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig8))),\n                            ),\n                            dbc.Col(\n                                dbc.Row(html.Div(dcc.Graph(figure=fig9))),\n                            )\n                 ])\n])\napp.layout = html.Div([body])\n\nif __name__ == \"__main__\":\n    app.run_server(debug = True)","ab8c8245":"# launch ngrok\nget_ipython().system_raw('.\/ngrok http 8050 &')","50b94e4e":"%%sh\n# get url with ngrok\ncurl -s http:\/\/localhost:4040\/api\/tunnels | python3 -c \"import sys, json; print(json.load(sys.stdin)['tunnels'][0]['public_url'])\"","3d7ed87a":"!python dash_app.py","7e5fca84":"# Create Dashboard","ec6c4d70":"# Deploy Dashboard","6564cee9":"# Data Preparation"}}