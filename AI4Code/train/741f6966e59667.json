{"cell_type":{"6300d201":"code","b01211eb":"code","430bf0b3":"code","8642918a":"code","c2cf0e07":"code","e1ee40cc":"code","6c1f8e68":"code","2de81b83":"code","6ed1e21d":"code","c6d5ba99":"code","010094b5":"code","d09b6b8a":"code","09148de3":"code","2fb7e8cf":"code","223596a5":"code","251134cf":"code","494c0130":"code","a8214a0a":"markdown","ef0f2b6e":"markdown","1bfa8fc4":"markdown","64996229":"markdown","e472a3b3":"markdown","fd17970f":"markdown","32b95ad8":"markdown","3535f8c1":"markdown"},"source":{"6300d201":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Conv2D,MaxPool2D,Flatten\nfrom sklearn.metrics import classification_report","b01211eb":"from tensorflow.keras.datasets import fashion_mnist\n\n(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()","430bf0b3":"plt.imshow(x_train[0])","8642918a":"print(x_test.shape)\nprint(x_train.shape)","c2cf0e07":"print(x_train.max())\nprint(x_test.max())","e1ee40cc":"x_train=x_train\/255\nx_test=x_test\/255","6c1f8e68":"print(x_train.min())\nprint(x_test.min())\nprint(x_train.max())\nprint(x_test.max())","2de81b83":"x_train=x_train.reshape(60000,28,28,1)\nx_test=x_test.reshape(10000,28,28,1)","6ed1e21d":"y_cat_train=to_categorical(y_train)\ny_cat_test=to_categorical(y_test)","c6d5ba99":"model=Sequential()\n\nmodel.add(Conv2D(filters=32,kernel_size=(4,4),input_shape=(28,28,1),activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(128,activation='relu'))\nmodel.add(Dense(10,activation='softmax'))\n\nmodel.compile(loss='categorical_crossentropy',\n             optimizer='rmsprop',\n             metrics=['accuracy'])\n","010094b5":"model.summary()","d09b6b8a":"model.fit(x_train,y_cat_train,epochs=10)","09148de3":"model.metrics_names","2fb7e8cf":"model.evaluate(x_test,y_cat_test)","223596a5":"prediction=model.predict_classes(x_test)","251134cf":"print(y_cat_test[0])\nprint(prediction[0])","494c0130":"print(classification_report(y_test,prediction))","a8214a0a":"# Great Job!","ef0f2b6e":"### Training the Model\n**TASK 6: Train\/Fit the model to the x_train set. Amount of epochs is up to you.**","1bfa8fc4":"\n# Deep Learning for Image Classification\n\n------------\n\n## The Challenge\n\n**Your task is to build an image classifier with Keras and Convolutional Neural Networks for the Fashion MNIST dataset. This data set includes 10 labels of different clothing types with 28 by 28 *grayscale* images. There is a training set of 60,000 images and 10,000 test images.**\n\n    Label\tDescription\n    0\t    T-shirt\/top\n    1\t    Trouser\n    2\t    Pullover\n    3\t    Dress\n    4\t    Coat\n    5\t    Sandal\n    6\t    Shirt\n    7\t    Sneaker\n    8\t    Bag\n    9\t    Ankle boot\n    \n ","64996229":"## Building the Model\n\n**TASK 5: Use Keras to create a model consisting of at least the following layers (but feel free to experiment):**\n\n* 2D Convolutional Layer, filters=32 and kernel_size=(4,4)\n* Pooling Layer where pool_size = (2,2)\n\n* Flatten Layer\n* Dense Layer (128 Neurons, but feel free to play around with this value), RELU activation\n\n* Final Dense Layer of 10 Neurons with a softmax activation\n\n**Then compile the model with these parameters: loss='categorical_crossentropy', optimizer='rmsprop', metrics=['accuracy']**","e472a3b3":"## The Data","fd17970f":"### Evaluating the Model","32b95ad8":"## Preprocessing the Data","3535f8c1":"## Visualizing the Data"}}