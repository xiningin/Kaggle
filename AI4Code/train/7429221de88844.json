{"cell_type":{"9a1ca200":"code","170b0f78":"code","c53a964f":"code","f86ee1d7":"code","e35e87dd":"code","b0930ec2":"markdown"},"source":{"9a1ca200":"# imports\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\nimport os\nfrom collections import Counter\n\n%matplotlib inline\n%config InlineBackend.figure_format = 'svg'\n\nprint(os.listdir(\"..\/input\"))","170b0f78":"train_df = pd.read_csv('..\/input\/drugsComTrain_raw.csv')\ntest_df = pd.read_csv('..\/input\/drugsComTest_raw.csv')\n\ntrain_df.info()\ntest_df.info()","c53a964f":"conditions = train_df['condition'].value_counts().sort_values(ascending=False)\ntopk = 25\n\nconditions[0:topk].plot(kind=\"bar\")\nplt.xlabel(\"Conditions\")\nplt.ylabel(\"Counts\")\nplt.title(f\"Top {topk} conditions\")\n\nplt.show()","f86ee1d7":"conditions = train_df['condition'].value_counts().sort_values(ascending=True)\nbottomk = 25\n\nconditions[0:bottomk].plot(kind=\"bar\")\nplt.xlabel(\"Conditions\")\nplt.ylabel(\"Counts\")\nplt.title(f\"Bottom {topk} conditions\")\n\nplt.show()","e35e87dd":"plt.title(\"Distribution of usefulCount\")\nax = sns.distplot(train_df[\"usefulCount\"])\n\nplt.show()","b0930ec2":"# KUC Hackathon Winter 2018\n\n## eXplore by AI @ JU\n\nJadavpur University, India\n\n## Team Members\n\n- Arnav Mandal (@arnavmandal1234)\n- Ayan Sinha Mahapatra (@ayansinhamahapatra)\n- Sayan Goswami (@sayangoswami)"}}