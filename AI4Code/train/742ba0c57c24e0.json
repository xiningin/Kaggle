{"cell_type":{"e8bff2e6":"code","e6dcd8b6":"code","9d88f392":"code","fee632e0":"code","063c03cd":"code","5656516a":"code","b3f5217e":"code","ccb0db29":"code","bf67fd26":"code","7663fcba":"code","0a967415":"code","e5348cd5":"markdown","86051d91":"markdown","8098c349":"markdown","925d9d87":"markdown"},"source":{"e8bff2e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6dcd8b6":"df = pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")\ndf.head()","9d88f392":"df.info()","fee632e0":"df.corr()","063c03cd":"df.trestbps.plot(kind = \"line\",color = \"r\",label = \"trestbps\",alpha = 0.5,grid = True,linewidth = 1,figsize = (12,12))\nplt.xlabel(\"person\")\nplt.ylabel(\"trestbps\")\nplt.title(\"person-trestbps\")\nplt.legend()\nplt.show()","5656516a":"df.plot(kind = \"scatter\",x = \"thalach\",y = \"chol\",color = \"blue\",alpha = 0.5)\nplt.xlabel(\"thalach\")\nplt.ylabel(\"chol\")\nplt.title(\"thalach-chol corr\")\nplt.show()","b3f5217e":"df.cp.plot(kind = \"hist\",bins = 8,figsize = (7,7))\nplt.show()","ccb0db29":"dic = {63 : 145, 37 : 130,41:130}\nprint(dic.keys())\nprint(dic.values())","bf67fd26":"dic[56] = 120\nprint(dic)\ndel dic[41]\nprint(dic)\nprint(41 in dic)\ndic.clear()\nprint(dic)","7663fcba":"a = np.logical_and(df.age>65,df.trestbps<120)\nb = df[a]\nb","0a967415":"liste = list(df.age[np.logical_and(df.age>65,df.trestbps<120)])\nprint(liste)\ni = 0\nwhile liste[i] > 66:\n    for index,value in b[[\"sex\"]][i :i+1].iterrows():\n        print(value[\"sex\"]) \n    i +=1\n    \nb","e5348cd5":"Bir sonraki grafikte ise bir \u00f6nceki grafikte bulunan insanlardan ya\u015f\u0131 66 dan b\u00fcy\u00fck olanlar\u0131n cinsiyetini g\u00f6receksiniz.\n\n(0 = Female , 1 = Male)","86051d91":"A\u015fa\u011f\u0131daki grafikte x eskeninin 120-180, y ekseninin ise 200-300 aras\u0131nda s\u0131kla\u015ft\u0131\u011f\u0131n\u0131 g\u00f6rebiliriz.","8098c349":"Bir sonraki grafikte ya\u015f\u0131 65 ten b\u00fcy\u00fck olup dinlenme kan bas\u0131nc\u0131 120 den d\u00fc\u015f\u00fck olanlar\u0131 g\u00f6receksiniz.","925d9d87":"Sex    (0 = Female , 1 = Male)\n\nFbs    (0 = False , 1 = True)\n\nExang  (0 = No , 1 = Yes)"}}