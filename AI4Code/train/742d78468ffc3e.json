{"cell_type":{"b35a353d":"code","590c8def":"code","6996e52f":"code","a52c1c75":"code","262bbd73":"code","e9f6d6fe":"code","3d9d4ea5":"code","181e980c":"code","669ecb50":"code","0c7c425d":"code","021199d3":"code","0f4b0a58":"markdown","15020dee":"markdown","49fedda2":"markdown","0d050625":"markdown","6a155196":"markdown","da3d9ad1":"markdown","7b0543f0":"markdown","d13d5cc0":"markdown","8baded61":"markdown","a63cd85a":"markdown"},"source":{"b35a353d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","590c8def":"file_path = '..\/input\/weather-dataset\/weatherHistory.csv'","6996e52f":"\ndf = pd.read_csv(file_path)\ndf.shape #96453 records and 12 columns","a52c1c75":"df.dtypes","262bbd73":"df['Formatted Date'] = pd.to_datetime(df['Formatted Date'], utc=True)\ndf['Formatted Date']","e9f6d6fe":"df.dtypes","3d9d4ea5":"df = df.set_index('Formatted Date')\ndf.head()","181e980c":"data_columns = ['Apparent Temperature (C)', 'Humidity']\ndf_monthly_mean = df[data_columns].resample('MS').mean()\ndf_monthly_mean.head()","669ecb50":"import seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.figure(figsize=(14,6))\nplt.title(\"Variation in Apparent Temperature and Humidity with time\")\nsns.lineplot(data=df_monthly_mean)","0c7c425d":"df1 = df_monthly_mean[df_monthly_mean.index.month==4]\nprint(df1)\ndf1.dtypes","021199d3":"import matplotlib.dates as mdates\nfig, ax = plt.subplots(figsize=(15,5))\nax.plot(df1.loc['2006-04-01':'2016-04-01', 'Apparent Temperature (C)'], marker='o', linestyle='-',label='Apparent Temperature (C)')\nax.plot(df1.loc['2006-04-01':'2016-04-01', 'Humidity'], marker='o', linestyle='-',label='Humidity')\nax.set_xticks(['04-01-2006','04-01-2007','04-01-2008','04-01-2009','04-01-2010','04-01-2011','04-01-2012','04-01-2013','04-01-2014','04-01-2015','04-01-2016'])\nax.xaxis.set_major_formatter(mdates.DateFormatter('%d %m %Y'))\nax.legend(loc = 'center right')\nax.set_xlabel('Month of April')","0f4b0a58":"Now since we have been given hourly data, we need to resample it monthly. *Resampling is a convenient method for frequency conversion*.\n*Object must have a datetime like index*","15020dee":"### Plotting the variation in Apparent Temperature and Humidity with time","49fedda2":"Here ***\"MS\"*** denotes: Month starting\nWe are displaying the average apparent temperature and humidity using mean() function.","0d050625":"Plotting the variation in Apparent Temperature and Humidity for the month of April every year:","6a155196":"**Observation **: No change in average humidity. Increase in average apparent temperature can be seen in the year 2009 then again it dropped in 2010 then there was a slight increase in 2011 then a significant drop is observed in 2015 and again it increased in 2016 .","da3d9ad1":"This dataset provides historical data on many meteorological parameters \nsuch as pressure, temperature, humidity, wind_speed, visibility, etc. The dataset has hourly temperature recorded for last 10 years starting from 2006-04-01 00:00:00.000 +0200 to 2016-09-09 23:00:00.000 +0200. It corresponds to Finland, a country in the Northern Europe.","7b0543f0":"**After resampling:**","d13d5cc0":"If we want to specifically retrieve the data of a particular month from every year, say April in this case then :","8baded61":"**Observation **: From the above plot, we can say that humidity remained almost constant in these years. Even the average apparent temperature is almost same (since peaks lie on the same line)","a63cd85a":"But before visualization, we need to make date features -> date time object . \nFor this we use to_datetime() fn"}}