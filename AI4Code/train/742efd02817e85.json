{"cell_type":{"2b750dbb":"code","2d5d9995":"code","7efc63da":"code","19f78b10":"code","7b0d57fc":"code","3a4b54cd":"code","8764f567":"code","62d74b48":"code","4c5c8ed0":"code","b53598de":"markdown","e51ce586":"markdown","a6468a57":"markdown","e0b6745f":"markdown","119d8db4":"markdown","4ee24154":"markdown","1c5241b6":"markdown","5269267e":"markdown","93b79d42":"markdown","38fe3e00":"markdown","16fcb7ba":"markdown","705f71f7":"markdown"},"source":{"2b750dbb":"#Librerias\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt ","2d5d9995":"#Data\ndf = pd.read_csv(\"..\/input\/young-people-survey\/responses.csv\")\ndf.shape","7efc63da":"df = df.iloc[:, 76:133]\ndf.head(5)","19f78b10":"#Drop NAs\ndf = df.dropna()\n#...............................................................................................\n#Encode categorical data\nfrom sklearn.preprocessing import LabelEncoder\n\ndf = df.apply(LabelEncoder().fit_transform)\n","7b0d57fc":"pip install factor_analyzer ","3a4b54cd":"#Try the model with all the variables \nfrom factor_analyzer import FactorAnalyzer         # pip install factor_analyzer \nfa = FactorAnalyzer(rotation=\"varimax\")\nfa.fit(df) \n\n# Check Eigenvalues\nev, v = fa.get_eigenvalues()\nev\n\n# Create scree plot using matplotlib\nplt.scatter(range(1,df.shape[1]+1),ev)\nplt.plot(range(1,df.shape[1]+1),ev)\nplt.title('Scree Plot')\nplt.xlabel('Factors')\nplt.ylabel('Eigenvalue')\nplt.grid()\nplt.show()","8764f567":"#Factor analysis with 5 Factors\nfa = FactorAnalyzer(5, rotation=\"varimax\")\nfa.fit(df)\nAF = fa.loadings_\nAF = pd.DataFrame(AF)\nAF.index = df.columns\nAF","62d74b48":"#Get Top variables for each Factor \nF = AF.unstack()\nF = pd.DataFrame(F).reset_index()\nF = F.sort_values(['level_0',0], ascending=False).groupby('level_0').head(5)    # Top 5 \nF = F.sort_values(by=\"level_0\")\nF.columns=[\"FACTOR\",\"Variable\",\"Varianza_Explica\"]\nF = F.reset_index().drop([\"index\"],axis=1)\nF","4c5c8ed0":"#Show the Top for each Factor \nF = F.pivot(columns='FACTOR')[\"Variable\"]\nF.apply(lambda x: pd.Series(x.dropna().to_numpy()))","b53598de":"Hi! This is a try to group responses into Factors. \nIs my first Kernel so I am open to suggestions for improvement","e51ce586":"Factor 5: Appearence and gestures, Mood swings\n\nMmmm it could be \"Agreeableness\". What do you think it could be represent?","a6468a57":"# 1. Prepare the data","e0b6745f":"MUSIC PREFERENCES (19) 0:19\n\nMOVIE PREFERENCES (12) 19:31\n\nHOBBIES & INTERESTS (32) 31:63\n\nPHOBIAS (10) 63:73\n\nHEALTH HABITS (3) 73:76\n\nPERSONALITY TRAITS, VIEWS ON LIFE & OPINIONS (57) 76:133\n\nSPENDING HABITS (7) 133:140\n\nDEMOGRAPHICS (10 ) 140:150","119d8db4":"# 2. Choose the factors ","4ee24154":"# Conclusion: \nThe first three Factors are very clear: Extraversion, Neuroticism and Conscientiousness.\nThe other two not to much. Anyway is a very  interesting approximation\n\nMaybe doing first a PCA for remove hight correlate variables like \"God\" and \"Final judgement\"could help.\n\nWhat do you think? \n\nThanks you!","1c5241b6":"FACTOR 1: Energy levels, Number of friends, Socializing...\n\nCould be: Extraversion","5269267e":"I will take only: PERSONALITY TRAITS, VIEWS ON LIFE & OPINIONS (57) 76:133","93b79d42":"FACTOR 2: Self-ciricism, Fake, Loneliness... \n\nLooks very similar to \"Neuroticism\"","38fe3e00":"As you can see the most usefull factors for explain the data are between 5-6 until falling significantly.\n\nWe will fit the model with 5 Factors: ","16fcb7ba":"Factor 3: Thinking ahead, Prioritising workload...\n\nvery similar to \"Conscientiousness\"","705f71f7":"Factor 4: Children, God, Finding lost valuables\n\nThis factor could be something like \"religious\" or \"conservative\", maybe have lowest scores of a \"Openness\" in Big Five model. "}}