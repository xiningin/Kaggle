{"cell_type":{"0b728d4f":"code","64c08c70":"code","dbd29272":"code","ceaf87d1":"code","1b4c8f42":"code","a04f3635":"code","791c39af":"code","19f62fcb":"code","a61dfb48":"code","099c8b9d":"code","85dcb56f":"code","04e654d1":"code","7c29196b":"code","94648ae9":"code","c45389aa":"code","1273f891":"code","d262117d":"code","1b63f498":"markdown","da65b683":"markdown","5f270468":"markdown","3626ef67":"markdown","ee7cf5da":"markdown","b2dd1662":"markdown","28ce73f7":"markdown","50132c04":"markdown","20915d70":"markdown"},"source":{"0b728d4f":"import pandas as pd\nimport numpy as np\nimport time\nimport datetime\nimport pytz\nimport os\n\n# Sklearn stuff\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score, StratifiedKFold, GridSearchCV\nfrom sklearn.feature_extraction.text import CountVectorizer","64c08c70":"PATH_TO_DATA = '..\/input\/'\nSEED = 17","dbd29272":"def write_to_submission_file(predicted_labels, filename='submission'):\n    df_submission = pd.DataFrame({'radiant_win_prob': predicted_labels}, \n                                     index=df_test_features.index)\n\n    submission_filename = '{}_{}.csv'.format(filename,\n        datetime.datetime.now(tz=pytz.timezone('Europe\/Athens')).strftime('%Y-%m-%d_%H-%M-%S'))\n    \n    df_submission.to_csv(submission_filename)\n    \n    print('Submission saved to {}'.format(submission_filename))","ceaf87d1":"# Train dataset\ndf_train_features = pd.read_csv(os.path.join(PATH_TO_DATA, 'train_features.csv'), \n                                    index_col='match_id_hash')\ndf_train_targets = pd.read_csv(os.path.join(PATH_TO_DATA, 'train_targets.csv'), \n                                   index_col='match_id_hash')\n\ny_train = df_train_targets['radiant_win'].map({True: 1, False: 0})\n\n# Test dataset\ndf_test_features = pd.read_csv(os.path.join(PATH_TO_DATA, 'test_features.csv'), \n                                   index_col='match_id_hash')","1b4c8f42":"df_full_features = pd.concat([df_train_features, df_test_features])\n\n# Index to split the training and test data sets\nidx_split = df_train_features.shape[0]\n\nheroes_df = df_full_features[[f'{t}{i}_hero_id' for t in ['r', 'd'] for i in range(1, 6)]]","a04f3635":"hero_id_2_roles = {\n                 1: ['Carry', 'Escape', 'Nuker'],\n                 2: ['Initiator', 'Durable', 'Disabler', 'Jungler'],\n                 3: ['Support', 'Disabler', 'Nuker', 'Durable'],\n                 4: ['Carry', 'Disabler', 'Jungler', 'Nuker', 'Initiator'],\n                 5: ['Support', 'Disabler', 'Nuker', 'Jungler'],\n                 6: ['Carry', 'Disabler', 'Pusher'],\n                 7: ['Support', 'Initiator', 'Disabler', 'Nuker'],\n                 8: ['Carry', 'Pusher', 'Escape'],\n                 9: ['Carry', 'Support', 'Escape', 'Nuker', 'Disabler'],\n                 10: ['Carry', 'Escape', 'Durable', 'Nuker', 'Disabler'],\n                 11: ['Carry', 'Nuker'],\n                 12: ['Carry', 'Escape', 'Pusher', 'Nuker'],\n                 13: ['Initiator', 'Disabler', 'Escape', 'Nuker'],\n                 14: ['Disabler', 'Initiator', 'Durable', 'Nuker'],\n                 15: ['Carry', 'Durable', 'Nuker', 'Pusher'],\n                 16: ['Initiator', 'Disabler', 'Nuker', 'Escape', 'Jungler'],\n                 17: ['Carry', 'Escape', 'Nuker', 'Initiator', 'Disabler'],\n                 18: ['Carry', 'Disabler', 'Initiator', 'Durable', 'Nuker'],\n                 19: ['Carry', 'Nuker', 'Pusher', 'Initiator', 'Durable', 'Disabler'],\n                 20: ['Support', 'Initiator', 'Disabler', 'Nuker', 'Escape'],\n                 21: ['Carry', 'Support', 'Disabler', 'Escape', 'Nuker'],\n                 22: ['Nuker'],\n                 23: ['Carry', 'Disabler', 'Initiator', 'Durable', 'Nuker'],\n                 25: ['Support', 'Carry', 'Nuker', 'Disabler'],\n                 26: ['Support', 'Disabler', 'Nuker', 'Initiator'],\n                 27: ['Support', 'Pusher', 'Disabler', 'Nuker', 'Initiator'],\n                 28: ['Carry', 'Durable', 'Initiator', 'Disabler', 'Escape'],\n                 29: ['Initiator', 'Durable', 'Disabler', 'Nuker'],\n                 30: ['Support', 'Nuker', 'Disabler'],\n                 31: ['Support', 'Nuker'],\n                 32: ['Carry', 'Escape', 'Disabler'],\n                 33: ['Disabler', 'Jungler', 'Initiator', 'Pusher'],\n                 34: ['Carry', 'Nuker', 'Pusher'],\n                 35: ['Carry', 'Nuker'],\n                 36: ['Carry', 'Nuker', 'Durable', 'Disabler'],\n                 37: ['Support', 'Initiator', 'Disabler'],\n                 38: ['Initiator', 'Disabler', 'Durable', 'Nuker'],\n                 39: ['Carry', 'Nuker', 'Escape'],\n                 40: ['Support', 'Nuker', 'Initiator', 'Pusher', 'Disabler'],\n                 41: ['Carry', 'Initiator', 'Disabler', 'Escape', 'Durable'],\n                 42: ['Carry', 'Support', 'Durable', 'Disabler', 'Initiator'],\n                 43: ['Carry', 'Pusher', 'Nuker', 'Disabler'],\n                 44: ['Carry', 'Escape'],\n                 45: ['Nuker', 'Pusher'],\n                 46: ['Carry', 'Escape'],\n                 47: ['Carry', 'Durable', 'Initiator', 'Disabler'],\n                 48: ['Carry', 'Nuker', 'Pusher'],\n                 49: ['Carry', 'Pusher', 'Durable', 'Disabler', 'Initiator', 'Nuker'],\n                 50: ['Support', 'Nuker', 'Disabler'],\n                 51: ['Initiator', 'Disabler', 'Durable', 'Nuker'],\n                 52: ['Carry', 'Support', 'Nuker', 'Pusher', 'Disabler'],\n                 53: ['Carry', 'Jungler', 'Pusher', 'Escape', 'Nuker'],\n                 54: ['Carry', 'Durable', 'Jungler', 'Escape', 'Disabler'],\n                 55: ['Initiator', 'Jungler', 'Escape', 'Disabler'],\n                 56: ['Carry', 'Escape', 'Pusher'],\n                 57: ['Support', 'Durable', 'Nuker'],\n                 58: ['Support', 'Jungler', 'Pusher', 'Durable', 'Disabler'],\n                 59: ['Carry', 'Durable', 'Initiator'],\n                 60: ['Carry', 'Initiator', 'Durable', 'Disabler', 'Nuker'],\n                 61: ['Carry', 'Pusher', 'Escape', 'Nuker'],\n                 62: ['Escape', 'Nuker'],\n                 63: ['Carry', 'Escape'],\n                 64: ['Support', 'Nuker', 'Pusher', 'Disabler'],\n                 65: ['Initiator', 'Jungler', 'Disabler', 'Escape'],\n                 66: ['Support', 'Jungler', 'Pusher'],\n                 67: ['Carry', 'Durable', 'Escape'],\n                 68: ['Support', 'Disabler', 'Nuker'],\n                 69: ['Carry', 'Disabler', 'Initiator', 'Durable', 'Nuker'],\n                 70: ['Carry', 'Jungler', 'Durable', 'Disabler'],\n                 71: ['Carry', 'Initiator', 'Disabler', 'Durable', 'Escape'],\n                 72: ['Carry', 'Nuker', 'Disabler'],\n                 73: ['Carry', 'Support', 'Durable', 'Disabler', 'Initiator', 'Nuker'],\n                 74: ['Carry', 'Nuker', 'Disabler', 'Escape', 'Pusher'],\n                 75: ['Carry', 'Support', 'Disabler', 'Initiator', 'Nuker'],\n                 76: ['Carry', 'Nuker', 'Disabler'],\n                 77: ['Carry', 'Pusher', 'Jungler', 'Durable', 'Escape'],\n                 78: ['Carry', 'Initiator', 'Durable', 'Disabler', 'Nuker'],\n                 79: ['Support', 'Disabler', 'Initiator', 'Nuker'],\n                 80: ['Carry', 'Pusher', 'Jungler', 'Durable'],\n                 81: ['Carry', 'Disabler', 'Durable', 'Pusher', 'Initiator'],\n                 82: ['Carry', 'Escape', 'Nuker', 'Disabler', 'Initiator', 'Pusher'],\n                 83: ['Support', 'Initiator', 'Durable', 'Disabler', 'Escape'],\n                 84: ['Support', 'Nuker', 'Disabler', 'Durable', 'Initiator'],\n                 85: ['Support', 'Durable', 'Disabler', 'Nuker'],\n                 86: ['Support', 'Disabler', 'Nuker'],\n                 87: ['Support', 'Disabler', 'Nuker', 'Initiator'],\n                 88: ['Disabler', 'Nuker', 'Initiator', 'Escape'],\n                 89: ['Carry', 'Support', 'Pusher', 'Disabler', 'Initiator', 'Escape'],\n                 90: ['Support', 'Nuker', 'Disabler', 'Jungler'],\n                 91: ['Support', 'Escape', 'Nuker'],\n                 92: ['Support', 'Nuker', 'Durable', 'Disabler', 'Pusher'],\n                 93: ['Carry', 'Escape', 'Disabler', 'Nuker'],\n                 94: ['Carry', 'Disabler', 'Durable'],\n                 95: ['Carry', 'Pusher', 'Disabler', 'Durable'],\n                 96: ['Durable', 'Initiator', 'Disabler', 'Nuker', 'Escape'],\n                 97: ['Initiator', 'Disabler', 'Nuker', 'Escape'],\n                 98: ['Nuker', 'Durable', 'Escape'],\n                 99: ['Carry', 'Durable', 'Initiator', 'Nuker'],\n                 100: ['Initiator', 'Disabler', 'Nuker'],\n                 101: ['Support', 'Nuker', 'Disabler'],\n                 102: ['Support', 'Carry', 'Durable'],\n                 103: ['Initiator', 'Disabler', 'Nuker', 'Durable'],\n                 104: ['Carry', 'Disabler', 'Initiator', 'Durable', 'Nuker'],\n                 105: ['Nuker', 'Disabler'],\n                 106: ['Carry', 'Escape', 'Nuker', 'Disabler', 'Initiator'],\n                 107: ['Nuker', 'Escape', 'Disabler', 'Initiator', 'Durable'],\n                 108: ['Support', 'Nuker', 'Disabler', 'Durable', 'Escape'],\n                 109: ['Carry', 'Pusher', 'Nuker'],\n                 110: ['Support', 'Nuker', 'Initiator', 'Escape', 'Disabler'],\n                 111: ['Support', 'Nuker', 'Disabler', 'Escape'],\n                 112: ['Support', 'Disabler', 'Nuker'],\n                 113: ['Carry', 'Escape', 'Nuker'],\n                 114: ['Carry', 'Escape', 'Disabler', 'Initiator'],\n                 119: ['Support', 'Nuker', 'Disabler', 'Escape'],\n                 120: ['Carry', 'Nuker', 'Disabler', 'Durable', 'Escape', 'Initiator']}","791c39af":"set(role for roles in hero_id_2_roles.values() for role in roles)","19f62fcb":"def bag_of_hero_roles(df):   \n    r_df = df[[f'r{i}_hero_id' for i in range(1, 6)]]\n    d_df = df[[f'd{i}_hero_id' for i in range(1, 6)]]\n    \n    r_roles = r_df.applymap(lambda x: ' '.join(hero_id_2_roles[x])).apply(lambda x: ' '.join(x), axis=1).values\n    d_roles = d_df.applymap(lambda x: ' '.join(hero_id_2_roles[x])).apply(lambda x: ' '.join(x), axis=1).values\n    \n    vectorizer_r = CountVectorizer()\n    vectorizer_d = CountVectorizer()\n    \n    X_r = vectorizer_r.fit_transform(r_roles)\n    X_d = vectorizer_d.fit_transform(d_roles)\n    \n    return pd.concat([pd.DataFrame(X_r.toarray(),\n                                   columns=[f'r_{role[0]}' for role in sorted(vectorizer_r.vocabulary_.items())],\n                                   index=df.index),\n                      pd.DataFrame(X_d.toarray(),\n                                   columns=[f'd_{role[0]}' for role in sorted(vectorizer_d.vocabulary_.items())],\n                                   index=df.index)], axis=1)\n    ","a61dfb48":"bohr = bag_of_hero_roles(heroes_df)","099c8b9d":"bohr.head()","85dcb56f":"def logit_cv(X_train, y_train, cv, random_state=SEED):\n    logit = LogisticRegression(random_state=SEED, solver='liblinear')\n\n    c_values = np.logspace(-2, 1, 20)\n\n    logit_grid_searcher = GridSearchCV(estimator=logit, param_grid={'C': c_values},\n                                       scoring='roc_auc',return_train_score=False, cv=cv,\n                                       n_jobs=-1, verbose=0)\n\n    logit_grid_searcher.fit(X_train, y_train)\n    \n    cv_scores = []\n    for i in range(logit_grid_searcher.n_splits_):\n        cv_scores.append(logit_grid_searcher.cv_results_[f'split{i}_test_score'][logit_grid_searcher.best_index_])\n    print(f'CV scores: {cv_scores}')\n    print(f'Mean: {np.mean(cv_scores)}, std: {np.std(cv_scores)}\\n')\n    \n    return logit_grid_searcher.best_estimator_, np.array(cv_scores) ","04e654d1":"skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=SEED)","7c29196b":"logit = logit_cv(bohr[:idx_split], y_train, cv=skf, random_state=SEED)[0]","94648ae9":"logit.fit(bohr[:idx_split], y_train)\nlogit_pred = logit.predict_proba(bohr[idx_split:])[:, 1]\n\nwrite_to_submission_file(logit_pred, filename='logit_hero_roles')","c45389aa":"r_roles = [role for role in bohr.columns if role[0] == 'r']\nd_roles = [role for role in bohr.columns if role[0] == 'd']\n\nbohr_diff = pd.DataFrame(bohr[r_roles].values - bohr[d_roles].values,\n                         columns=[role[2:] for role in bohr.columns if role[0] == 'r'],\n                         index=bohr.index)","1273f891":"bohr_diff.head()","d262117d":"logit = logit_cv(bohr_diff[:idx_split], y_train, cv=skf, random_state=SEED)[0]","1b63f498":"Not an improvement, but we have reduced the number of features by 2.","da65b683":"In this Kernel we will see that using hero roles can help to slightly increase the LB score.\nThe approach I use is that of the \"bag-of-hero-roles\", i.e. I create a dataframe with each column representing a role within team and the cell values representing the counts of heroes that can support that role .\nHave also a look at the [bah-of-heroes](https:\/\/www.kaggle.com\/kuzand\/bag-of-heroes-logistic-regression) Kernel where a similar approach is used for hero IDs.","5f270468":"<img src='https:\/\/steamuserimages-a.akamaihd.net\/ugc\/1047377062453152758\/48CD2809864A478C11592F098A59F8B76C2A2D14\/'>\n\n# <center> Dota 2: Hero Roles\n    \n\nBased on their attributes, abilities and items, different heroes are good at playing different roles. \nHere is the table with the (official) suggested hero roles and their short descriptions (source: https:\/\/dota2.gamepedia.com\/Role)\n\n|  Role  | Description |\n| ------------- |:-------------| \n| **Carry** | Will become more useful later in the game if they gain a significant gold advantage.|\n| **Nuker** | Can quickly kill enemy heroes using high damage spells with low cooldowns.|\n| **Initiator** | Good at starting a team fight.|\n| **Disabler** | Has a guaranteed disable for one or more of their spells.|\n| **Durable** | Has the ability to last longer in teamfights.|\n| **Escape** | Has the ability to quickly avoid death.|\n| **Support** | Can focus less on massing gold and items, and more on using their abilities to gain an advantage for the team.|\n| **Pusher** | Can quickly siege and destroy towers and barracks at all points in the game.|\n| **Jungler** | Can farm effectively from neutral creeps inside the jungle early in the game.|\n","3626ef67":"**Score on LB: 0.55044**.","ee7cf5da":"Let's write a function that will allow us to create a dataframe with counts of heroes within team that can support each role","b2dd1662":"Here is the dictionary that maps hero IDs to roles","28ce73f7":"# Load data","50132c04":"# Logistic Regression\nLet's try the \"bag-of-hero-roles\" with Logistic Regression","20915d70":"Another approach to try is to take the difference between the Radiant and Dire hero role counts"}}