{"cell_type":{"eb36910c":"code","abb2c63f":"code","8137aa16":"code","bb4dcfe0":"code","047de15f":"code","1b1b74c3":"code","4cce5990":"code","7ed36913":"code","bb2d07f8":"code","2ce92ad8":"code","9c5c56a8":"code","cc5f8fb5":"code","87e45629":"code","35d75fed":"markdown","05e94380":"markdown","90101c96":"markdown","cf62bfde":"markdown","8ec1e4ae":"markdown","242f2a3e":"markdown","ade24fbb":"markdown","caa3393f":"markdown","4af6c11b":"markdown","24d84174":"markdown"},"source":{"eb36910c":"import pandas as pd\n!pip install openpyxl","abb2c63f":"pd.set_option('display.max_columns', 20)\npd.set_option('display.width', 500)","8137aa16":"movie = pd.read_csv('..\/input\/movielens-20m-dataset\/movie.csv')\nrating = pd.read_csv('..\/input\/movielens-20m-dataset\/rating.csv')\ndf = movie.merge(rating, how=\"left\", on=\"movieId\")\ndf.head()","bb4dcfe0":"df.shape","047de15f":"df[\"title\"].nunique()","1b1b74c3":"rating_counts = pd.DataFrame(df[\"title\"].value_counts())\nrating_counts.head()","4cce5990":"rare_movies = rating_counts[rating_counts[\"title\"] <= 1000].index\n\ncommon_movies = df[~df[\"title\"].isin(rare_movies)]\n\ncommon_movies.shape","7ed36913":"common_movies[\"title\"].nunique()","bb2d07f8":"user_movie_df = common_movies.pivot_table(index=[\"userId\"], columns=[\"title\"], values=\"rating\")\n\nuser_movie_df.shape","2ce92ad8":"user_movie_df.head(10)","9c5c56a8":"movie_name = \"Matrix, The (1999)\"\nmovie_name = user_movie_df[movie_name]","cc5f8fb5":"user_movie_df.corrwith(movie_name).sort_values(ascending=False).head(10)","87e45629":"user_movie_df.corrwith(movie_name).sort_values(ascending=False)[1:6]","35d75fed":"The first movie is the movie we are looking for similar ones, so we are listing the movies other than that.\n\nBelow are the top five movies recommended by the item-based recommendation system for The Matrix movie.","05e94380":"Here the number of comments per movie can be seen\n\nMovies that do not receive much interaction can be excluded from the study in order to narrow the scope.","90101c96":"## Step 3: Making Item-Based Movie Suggestions\n\n\nNow that we have the user-movie matrix, we can calculate the correlations.\nIn user_movie_df the columns were the movie name, then if we fetch this column the user id-movie scores will come. This will be assigned to a variable named movie name.\n\n","cf62bfde":"## Introduction\n\nItem based collaborative filtering is a memory-based algorithm for recommender engines. The underlying assumption of this approach is that if Item 1 and Item 3 are considered similar as they are positively rated by both User 1 and User 2. Thus, Item 1 can be recommended to User 3 as it already shows interest in Item 3.\n\n\n![image.png](attachment:9b5c961b-28c2-46d6-846c-cb0bd5c3ad55.png)\n\n**Context**\n\nThe datasets describe ratings and free-text tagging activities from MovieLens, a movie recommendation service. It contains 20000263 ratings and 465564 tag applications across 27278 movies. These data were created by 138493 users between January 09, 1995 and March 31, 2015. This dataset was generated on October 17, 2016.\n\nUsers were selected at random for inclusion. All selected users had rated at least 20 movies.\n\n**Business Problem**\n\nDeveloping a recommendation system based on similarly rated films.\n\n**Attribute Information**\n\nThe two files from the data will be used in this study as rating.csv and movie.csv\n\nrating.csv that contains ratings of movies by users:\n\n* userId\n* movieId\n* rating\n* timestamp\nmovie.csv that contains movie information:\n\n* movieId\n* title\n* genres\n\n**Task Details**\n\n**Step 1:** Preparing the Data Set\n\n**Step 2:** Creating User Movie Df\n\n**Step 3:** Making Item-Based Movie Suggestions","8ec1e4ae":"## Step 2: Creating User Movie Df\n\nOur main goal is to create the user_movie matrix with users in rows and movies in columns.","242f2a3e":"## Step 1: Preparing the Data Set","ade24fbb":"The number of unique movies is 27262","caa3393f":"After narrowing the scope to movies with 1000 or more comments, the total number of comments is 17766015 and the total number of movies is 3159.\n\nThe next step is creating the user_movie matrix with users in rows and movies in columns.","4af6c11b":"The total number of comments is 20000797","24d84174":"There is only the matrix movie and the points given to it. The next step is to look at the correlation between this movie and other movies."}}