{"cell_type":{"fa452697":"code","af1dcc50":"code","c0acabf5":"code","4882f10d":"code","9a597d51":"code","3e406b93":"code","f3c09b3a":"code","3e20ac6b":"code","9a14461f":"code","85d10da9":"code","1a655661":"code","873b457b":"code","dd119ee1":"code","87d026d9":"code","5b5b2249":"code","3b70d847":"code","e197451d":"code","aad58e7e":"code","18f67f20":"code","e9cf9285":"code","feb284ac":"code","71d8cea9":"code","090c21c1":"code","322ee95e":"code","f17f7886":"code","3cd302ab":"code","5ed28cdb":"code","315d2f7d":"code","6fc3c6c2":"code","f59a3abe":"code","93bd18df":"code","63c6fbec":"markdown","9dbb2f41":"markdown","5bf3c956":"markdown","b3aae701":"markdown","c2e506b3":"markdown","d25af748":"markdown","1001b9c7":"markdown","2f9a6a6b":"markdown","17530346":"markdown","cee1bb55":"markdown","2ac95042":"markdown"},"source":{"fa452697":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","af1dcc50":"df_orig = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv') # opening the original dataframe\ndf = df_orig.copy() # we make a copy\n\ndf.info() # find the information of the dataframe","c0acabf5":"df","4882f10d":"gsales = df['Global_Sales']\nnasales = df['NA_Sales']\njpsales = df['JP_Sales']\neusales = df['EU_Sales']\nosales = df['Other_Sales']\nplatform = df['Platform']\ngenre = df['Genre']\npublisher = df['Publisher']\nyear = df['Year']","9a597d51":"# Pandas\n\ndf.plot(kind='scatter', x = 'Year', y = 'Global_Sales', figsize = (20,10))\nplt.show()","3e406b93":"# Matplotlib\n\nplt.figure(figsize=(20,10))\nplt.scatter(year, gsales)\nplt.title('Year X Global Sales')\nplt.xlabel('Year')\nplt.ylabel('Global Sales')\nplt.show()","f3c09b3a":"# Seaborn\n\nplt.figure(figsize=(20,10))\nsns.scatterplot(x = 'Year', y = 'Global_Sales', data = df)\nplt.show()","3e20ac6b":"df = df.dropna()","9a14461f":"df = df.head(200)","85d10da9":"df","1a655661":"# Pandas\n\ndf.plot(kind='bar', x = 'Year', y = 'Global_Sales', figsize = (20,10))\nplt.show()","873b457b":"# Matplotlib\n\nplt.figure(figsize=(20,10))\nplt.bar(year, gsales)\nplt.show()","dd119ee1":"# Seaborn\n\nplt.figure(figsize=(20,10))\nsns.barplot(x = 'Year', y = 'Global_Sales', data = df)\nplt.show()","87d026d9":"# Pandas\n\ndf.groupby(['Year'])['Global_Sales'].sum().plot(kind = 'line', x = 'Year', y = 'Global_Sales', figsize = (20,10))\nplt.show()","5b5b2249":"# Matplotlib\n\nplt.figure(figsize=(20,10))\nplt.plot(df.groupby(['Year'])['Global_Sales'].sum())\nplt.show()","3b70d847":"# Seaborn\n\nplt.figure(figsize=(20,10))\nsns.lineplot(x = 'Year', y = 'Global_Sales', data = df)\nplt.show()","e197451d":"df = df.head(100)","aad58e7e":"# Pandas\n\n# df.plot(kind = 'pie', x = 'Genre', y = 'Global_Sales', figsize = (10,10)) # THE OLD WAY OF PLOTTING PIE PLOT WITH THE STANDARD METHOD DOES NOT WORK\n\ndf.groupby(['Genre']).sum().plot(kind = 'pie', y = 'Global_Sales', figsize = (10,10)) # pandas groupby\nplt.show()","18f67f20":"# Matplotlib\n\nplt.figure(figsize = (10,10))\nplt.pie(df.groupby(['Genre'])['Global_Sales'].sum())\nplt.show()\n\n# This is the part where I'm stuck. I don't know how to provide the legend\/label to the matplotlib pie plot. Can somebody help?","e9cf9285":"# Seaborn: There's no 'direct' library for Seaborn pie chart as far as I know.","feb284ac":"# Pandas\n# pd.DataFrame.boxplot(df) # the standard way of plotting boxplot on the dataframe\n\ndf.plot(kind = 'box', y = ['JP_Sales', 'EU_Sales', 'NA_Sales', 'Other_Sales'], figsize=(20,10))\nplt.show()","71d8cea9":"# Matplotlib\n\nplt.figure(figsize = (20,10))\nplt.boxplot([jpsales, eusales, nasales, osales])\nplt.show()","090c21c1":"# Seaborn\n\nplt.figure(figsize=(20,10))\nsns.boxplot(data = df[['JP_Sales', 'EU_Sales', 'NA_Sales', 'Other_Sales']])\nplt.show()","322ee95e":"df.corr() # degree of correlation from -1 to +1 (negative correlation to positive correlation)","f17f7886":"# I'm just gonna go with Seaborn, it's simple and fast\n\nplt.figure(figsize = (10,10))\nsns.heatmap(df.corr(), annot=True)\nplt.show()","3cd302ab":"# Pandas\n\ndf.hist(figsize=(20,20))\nplt.show()","5ed28cdb":"# Matplotlib: I don't think neither Seaborn nor Matplotlib does better than just simple df.hist()","315d2f7d":"df.groupby(['Year'])['JP_Sales', 'EU_Sales', 'NA_Sales', 'Other_Sales'].sum().plot(kind = 'bar', figsize = (20,10), stacked = True)\nplt.show()","6fc3c6c2":"# Matplotlib\n\nfig, ax = plt.subplots(figsize=(20,10))\nax.bar(year, jpsales, label = 'Japan Sales')\nax.bar(year, eusales, bottom = jpsales, label = 'EU Sales')\nax.bar(year, nasales, bottom = jpsales + eusales, label = 'NA Sales')\nax.bar(year, osales, bottom = jpsales + eusales + nasales, label = 'Other Sales')\nplt.legend()\nplt.show()\n\n# I'm also a bit lost here as the coding is much longer than Pandas. I'm gonna avoid matplotlib then.","f59a3abe":"# Seaborn, too complex. I'm just gonna avoid it.\n# see for example https:\/\/stackoverflow.com\/questions\/59038979\/stacked-bar-chart-in-seaborn","93bd18df":"# Seaborn is enough for producing pairplots\n\nplt.figure(figsize=(10,10))\nsns.pairplot(df)\nplt.show()\n\n# the output might not be meaningful, but the point is just to display the pairplot itself","63c6fbec":"Plot\n\n1. Scatter\n2. Bar\n3. Line\n4. Pie\n5. Boxplot\n6. Correlation Matrix\n7. Histogram\n8. Stacked Bar\n10. Pairplot\n\nSome of them will be using Pandas, then Matplotlib, then SNS. Some of them will be only using one particular library.","9dbb2f41":"# Bar Plot","5bf3c956":"# Histogram","b3aae701":"# Pair Plot","c2e506b3":"# Boxplot","d25af748":"# Correlation Matrix","1001b9c7":"# Pie Plot","2f9a6a6b":"# Overview\n\nThis notebook is to show how we can produce visualization using e.g. Pandas, Matplotlib, and Seaborn.\nThere are several plots which in my opinion produced best by using a particular library.","17530346":"# Scatter Plot","cee1bb55":"# Line Plot","2ac95042":"# Stacked Bar Chart"}}