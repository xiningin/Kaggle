{"cell_type":{"78a3c974":"code","1f06c4e7":"code","6ad6a891":"code","b0aa97bd":"code","8f3f54db":"code","068d4749":"code","9683bc47":"code","a782147c":"code","853f6399":"code","c75d2009":"code","204a0826":"code","9b7386f8":"code","dac6b2d4":"code","70332d77":"code","05a2cc94":"code","f4f6a566":"code","55db4f0f":"code","606549c9":"code","ce291a5d":"code","9fcfafe4":"code","37569f25":"code","1cac6323":"code","1ac22e4b":"code","79629c27":"code","9f52e5f0":"code","3937af98":"code","2dfd6cc7":"code","f296807c":"code","319c77ee":"code","20e0c194":"code","96c1c55f":"code","83f2cea3":"code","25beb1dc":"code","b403a4db":"code","f7baccc4":"code","c6ec41d7":"code","a1c6f991":"code","1a9a3811":"code","8ed35099":"code","22e1682e":"code","a84cb61a":"code","8f9c17c4":"code","ca725643":"code","75245af7":"code","d3f40385":"code","897ca31a":"code","7b1a4437":"code","a47edcc1":"code","8f4c216f":"code","c188da77":"code","e53a9ec4":"code","630b679d":"code","f24c65f7":"code","d9ffc44a":"code","e4c3b987":"code","430a88d2":"code","72348318":"code","e0f117b2":"code","283459fe":"code","817533a9":"code","3c14fea6":"code","d2429177":"code","eebe9927":"code","d00d948c":"code","28f4f9df":"code","dcdc25ad":"code","b6f84dfd":"code","9d987187":"code","37e2a10e":"code","94d42dd3":"code","ede4e9c1":"code","6b91a69d":"code","5036037e":"code","96fc5cde":"code","f3a7f401":"code","474f85e0":"code","cb68afc4":"code","672d48f5":"code","61934e42":"code","73f4fe44":"code","bca235d4":"code","7ea77dea":"code","bcaff678":"code","b9b4bb58":"code","6ea572d7":"code","fccdcf07":"code","647e322b":"code","46ebbf5b":"code","fe72960a":"markdown","7d5a18e7":"markdown","597b73e0":"markdown","e68dddf1":"markdown","02f60211":"markdown","a470e223":"markdown","89ecb8f3":"markdown","0729bbe7":"markdown","d489b679":"markdown","e4cb375d":"markdown","c363b180":"markdown","8d00b092":"markdown","676690f8":"markdown","2e9e34a7":"markdown","75c83cc6":"markdown","0cafc5f8":"markdown","a14d7644":"markdown","23232fb2":"markdown","4c979971":"markdown","ebccebcb":"markdown","d908e32a":"markdown","62f4ab29":"markdown","24e9d581":"markdown","4737dd6e":"markdown","f15f1bac":"markdown","1a718de9":"markdown","3f345680":"markdown","3155f5c2":"markdown","71fc6344":"markdown","dd9e336d":"markdown","4dc2b121":"markdown","fd65b1b5":"markdown","2873aa67":"markdown","7157ab36":"markdown","0b11258c":"markdown","3c530f1f":"markdown","f2e89a65":"markdown","f65e1a1b":"markdown"},"source":{"78a3c974":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f06c4e7":"import gc\nimport time\n\n%matplotlib inline\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# matplotlib and seaborn for plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\npd.set_option('display.max_rows', 100)\npd.set_option('display.max_columns', 200)","6ad6a891":"app_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')\napp_test = pd.read_csv('..\/input\/home-credit-default-risk\/application_test.csv')","b0aa97bd":"# training \ub370\uc774\ud130 \ud53c\uccd0 \uc0b4\ud3b4\ubcf4\uae30\nprint('Training data shape: ', app_train.shape)\napp_train.head()\n\n# Training data \ub294 307511\uac1c\uc758 \ub370\uc774\ud130\uac00 \uc788\uace0 TARGET\uc744 \ud3ec\ud568\ud55c 122\uac1c\uc758 \ud53c\uccd0\ub97c \uac16\uace0 \uc788\ub2e4.","8f3f54db":"# testing \ub370\uc774\ud130 \ud53c\uccd0 \uc0b4\ud3b4\ubcf4\uae30\nprint('Testing data shape: ', app_test.shape)\napp_test.head()\n\n# Testing data\ub294 48744 \uac1c\uc758 \ub370\uc774\ud130\uc640 TARGET \uc774 \ube60\uc9c4 121\uac1c\uc758 \ud53c\uccd0\ub97c \uac16\uace0 \uc788\ub2e4.","068d4749":"# 'TARGET' \uceec\ub7fc \uc0b4\ud3b4\ubcf4\uae30\napp_train['TARGET'].value_counts()","9683bc47":"# TARGET \uceec\ub7fc \ub370\uc774\ud130 \uac1c\uc218 \ud788\uc2a4\ud1a0\uadf8\ub7a8 \uc2dc\uac01\ud654\napp_train['TARGET'].plot.hist();\n\n'''\n0\uc740 \ub300\ucd9c\uc744 \uc81c\ub54c \uc0c1\ud658\ud560 \uc218 \uc788\ub2e4\ub294 \ub73b\uc774\uace0 1\uc740 \ub300\ucd9c\uc0c1\ud658\uc5d0 \uc5b4\ub824\uc6c0\uc744 \uac16\uace0 \uc788\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4. \n'''","a782147c":"# target \uac1c\uc218 \uc2dc\uac01\ud654 2\nf,ax=plt.subplots(1,2,figsize=(12,6))\napp_train.TARGET.value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('Distribution of Target')\nax[0].set_ylabel('')\nsns.countplot('TARGET',data=app_train,ax=ax[1])\nax[1].set_title('Target count')\nplt.show()\n\n# 0\uc774 1\ubcf4\ub2e4 \ud6e8\uc52c \ub354 \ub9ce\uc558\uace0 1\uc740 \ub370\uc774\ud130\uc758 8%\ub9cc\uc744 \ucc28\uc9c0\ud55c\ub2e4. \ube44\uc728\uc774 \ubc18\ubc18\uc774 \uc544\ub2c8\ubbc0\ub85c \ubaa8\ub378\ub9c1 \ud560 \ub54c \uac00\uc911\uce58 \uc870\uc808\uc774 \ud544\uc694\ud558\ub2e4. ","853f6399":"# training \ub370\uc774\ud130 \uce7c\ub7fc \ud655\uc778\napp_train.columns.values","c75d2009":"# column type \uc218 \ud655\uc778\napp_train.dtypes.value_counts()\n\n# int64 \uc640 float64 \ub294 \uc218\uce58\ud615 \ubcc0\uc218\uc774\uace0 object\ub294 string\uc744 \ud3ec\ud568\ud55c \ubc94\uc8fc\ud615 \ubcc0\uc218\uc774\ub2e4. \ub098\uc911\uc5d0 encoding \ud560 \ud544\uc694\uac00 \uc788\uc5b4\ubcf4\uc778\ub2e4. ","204a0826":"# target \ubcc0\uc218\uc640 \ub2e4\ub978 \ubcc0\uc218\ub4e4\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uc558\ub2e4. \uadf8\ub9ac\uace0 sorting \ud558\uc600\ub2e4. \ncorrelations = app_train.corr()['TARGET'].sort_values()\n\n# \uc591\uc758 \uc0c1\uad00\uad00\uacc4 \ub192\uc740 \uac83 15\uac1c, \uc74c\uc758 \uc0c1\uad00\uad00\uacc4 \ub192\uc740 \uac83 15\uac1c \ub098\ud0c0\ub0b4\uae30\nprint('Most Positive Correlations:\\n', correlations.tail(15))\nprint('\\nMost Negative Correlations:\\n', correlations.head(15))\n\n'''\n'DAYS_BIRTH','DAYS_EMPLOYED','REGION_RATING_CLIENT_W_CITY'\uac00 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ubcf4\uc774\ub294 \uac83\ub4e4 \uc911\uc5d0 \uac00\uc7a5 \ub192\uc558\ub2e4.\n'EXT_SOURCE_3','EXT_SOURCE_2','EXT_SOURCE_1'\uac00 \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ubcf4\uc774\ub294 \uac83\ub4e4 \uc911\uc5d0 \uac00\uc7a5 \ub192\uc558\ub2e4. \n\uc774 \ubcc0\uc218\ub4e4\uc744 \uc911\uc810\uc73c\ub85c EDA\ub97c \ud560 \uac83\uc774\ub2e4. \n'''","9b7386f8":"# DAYS_BIRTH \ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30\napp_train['DAYS_BIRTH'].head()","dac6b2d4":"# 'DAYS_BIRTH' \uac00 \uc74c\uc218\uc774\uace0 \ub144 \ub2e8\uc704\ub85c \ubcf4\uae30 \uc704\ud574\uc11c -365\ub85c \ub098\ub208\ub2e4. \n(app_train['DAYS_BIRTH'] \/ -365).describe()","70332d77":"plt.style.use('fivethirtyeight')\n\n# \uace0\uac1d \ub098\uc774\uc5d0 \ub300\ud55c \ud788\uc2a4\ud1a0\uadf8\ub7a8 \ubd84\ud3ec\ub97c \ud655\uc778\ud55c\ub2e4. \nplt.hist(app_train['DAYS_BIRTH']\/-365, edgecolor='k',bins=25)\nplt.title('Age of Client');\nplt.xlabel('Age (years)');\nplt.ylabel('Count');\n\n# \uc774\uc0c1\uac12 \uc5c6\uc774 \ub098\uc774\uac00 \uace0\ub974\uac8c \ubd84\ud3ec\ub418\uc5b4 \uc788\ub2e4. ","05a2cc94":"plt.figure(figsize=(10,8))\n\n# \uc81c\ub54c \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\ub294 \uace0\uac1d\uc758 \ub098\uc774 plot (TARGET=0)\nsns.kdeplot(app_train.loc[app_train['TARGET']==0,'DAYS_BIRTH']\/-365,label='target==0')\n\n# \uc81c\ub54c \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0\ubabb\ud558\ub294 \uace0\uac1d\uc758 \ub098\uc774 plot (TARGET=1)\nsns.kdeplot(app_train.loc[app_train['TARGET']==1,'DAYS_BIRTH']\/-365,label='target==1')\n\nplt.xlabel('Age(years)');\nplt.ylabel('Density');\nplt.title('Distribution of Ages');\n\n# target==1(\ube68\uac04\uc0c9) \uc758 \ubd84\ud3ec\ub97c \ubcf4\uba74 20-30\ub300\uc5d0 \uae30\uc6b8\uc5b4 \uc788\ub294\uac83\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774\ub294 \uc80a\uc740 \uce35\uc77c\uc218\ub85d \ub300\ucd9c \uc0c1\ud658\uc744 \ubabb\ud560 \ud655\ub960\uc774 \ub192\ub2e4\uace0 \uc720\ucd94\ud560 \uc218 \uc788\ub2e4.\n# target==0\uc77c\ub54c\uc640 1\uc77c\ub54c\uc758 TARGET\uacfc\uc758 \ubd84\ud3ec\uac00 \uc0c1\uc774\ud55c\uac83\uc73c\ub85c \ubcf4\uc544 \uc774 \ubcc0\uc218\ub294 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc5d0 \uc720\uc6a9\ud558\uac8c \ud65c\uc6a9\ub420 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4.\n","f4f6a566":"# \ub098\uc774\ub97c \ub098\uc774\ub300 \ubcc4\ub85c \uadf8\ub8f9\uc744 \ub098\ub220\uc11c target=1(\ub300\ucd9c \uc0c1\ud658\uc774 \uc5b4\ub824\uc6b4) \uc758 \ud3c9\uade0\uac12\uc744 \uc0b4\ud3b4\ubcf8\ub2e4.\n# \ucd5c\uc18c 20 \ucd5c\ub300 70\uc73c\ub85c\ud574\uc11c \ucd1d 10\uac1c\ub85c \uadf8\ub8f9\ud551\ud558\uc600\ub2e4. \n# \uacb0\uacfc\ub294 '~'\uc774\uc0c1 '~'\ubbf8\ub9cc\uc73c\ub85c \uadf8\ub8f9\ud551\ub41c\ub2e4.\nnp.linspace(20,70,num=11)","55db4f0f":"# cut() \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc11c 5\uc0b4 \uac04\uaca9\uc73c\ub85c \ub098\uc774\ub300 \uadf8\ub8f9\uc744 \ub098\ub220\ubcf4\uc558\uace0, \uac01 \ub098\uc774\ub300 \ubcc4\ub85c \ub300\ucd9c\uc0c1\ud658\uc744 \ubabb\ud558\ub294 \ube44\uc728\uc744 \uccb4\ud06c\ud558\uc600\ub2e4.\n\nage_data=app_train[['TARGET','DAYS_BIRTH']]\nage_data['DAYS_BIRTH']=-age_data['DAYS_BIRTH']\nage_data['YEARS_BIRTH']=age_data['DAYS_BIRTH']\/365\nage_data['YEARS_BINNED']=pd.cut(age_data['YEARS_BIRTH'],bins=np.linspace(20,70,num=11))\nage_data.head(10)","606549c9":"# bin\uc73c\ub85c groupby \ud558\uace0 \ud3c9\uade0 \uacc4\uc0b0\ud558\uae30\nage_groups  = age_data.groupby('YEARS_BINNED').mean()\nage_groups","ce291a5d":"plt.figure(figsize=(8,8))\n\n# \ub098\uc774\uc640 target \ud3c9\uade0\uc744 bar plot\uc73c\ub85c \uc2dc\uac01\ud654 \ud558\uc600\ub2e4. \nplt.bar(age_groups.index.astype(str), 100*age_groups['TARGET'])\nplt.xticks(rotation=75);\nplt.xlabel('Age Group (years)');\nplt.ylabel('Failur to Reapy(%)')\nplt.title('Failure to Repay by Age Group');\n\n# \uc80a\uc740\uce35\uc77c\uc218\ub85d \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0 \ubabb\ud558\ub294 \uac83\uc73c\ub85c \ub098\ud0c0\ub0ac\ub2e4. \n# 20-25\uc138, 25-30\uc138 30-35\uc138\ub294 \uac01\uac01 \uc57d10% \uc774\uc0c1 \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0 \ubabb\ud588\uace0, 55-60\uc138, 60-65\uc138, 65-70\uc138\ub294 5%\uc774\ud558\ub85c \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0 \ubabb\ud588\ub2e4.","9fcfafe4":"# \ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30 \napp_train['DAYS_EMPLOYED'].head()","37569f25":"# \ud1b5\uacc4\ub7c9 \ud655\uc778\ud558\uae30\napp_train['DAYS_EMPLOYED'].describe()\n# \ucd5c\ub313\uac12\uc774 365243 \uc774\uace0, std \uac12\uc774 \ub9e4\uc6b0 \ud070 \uac83\uc73c\ub85c \ubcf4\uc544 \uc774\uc0c1\uc810\uc774 \uc788\uc744 \uac83\uc774\ub77c \ud310\ub2e8\ub41c\ub2e4. ","1cac6323":"# 365243 \uc774\ub77c\ub294 \ucd5c\ub300\uac12\uc744 \uac16\uace0 \uc788\ub2e4. \uc774\uc0c1\uac12\uc774\ub77c\uace0 \ud310\ub2e8\ud558\uae30\uc5d0\ub294 \uc2dc\uac01\ud654\ub85c \ubcf4\uc558\uc744 \ub54c \ubb34\uc2dc\ud560 \uc218 \uc5c6\uc744 \uc815\ub3c4\ub85c \uadf8 \uc218\uac00 \uc0c1\ub2f9\ud788 \ub9ce\ub2e4.\napp_train['DAYS_EMPLOYED'].plot.hist(title = 'Days Employment Histogram');\nplt.xlabel('Days Employment');","1ac22e4b":"# 365243 \uc744 \uc774\uc0c1\uac12\uc73c\ub85c \ubcf4\uace0, 365243\uc778 \uac12\uacfc \uc544\ub2cc \uac12\uc73c\ub85c \ub098\ub204\uc5b4 target \ube44\uc728\uc744 \uc0b4\ud3b4\ubcf4\uc558\ub2e4.\n\nanom = app_train[app_train['DAYS_EMPLOYED'] == 365243]\nnon_anom = app_train[app_train['DAYS_EMPLOYED'] != 365243]\nprint('\uc774\uc0c1\uac12\uc774 \uc544\ub2cc data\uc758 target \ud3c9\uade0: %0.2f%%' % (100 * non_anom['TARGET'].mean()))\nprint('\uc774\uc0c1\uac12\uc778 data\uc758 target \ud3c9\uade0: %0.2f%%' % (100 * anom['TARGET'].mean()))\n\n'''\n365243\uc744 \uac16\ub294 \ub370\uc774\ud130\uc640 \uc544\ub2cc \ub370\uc774\ud130\ub85c \ub098\ub204\uc5b4\uc11c \ud0c0\uac9f\uac12\uc758 \ud3c9\uade0\uc758 100\uc744 \uacf1\ud574\uc11c \ubd80\ucc44 \ube44\uc728\uc744 \ubcf4\uc558\ub2e4. \n\uc774\uc0c1\uac12\uc73c\ub85c \ubcf4\uc774\ub294 \uace0\uac1d\ub4e4\uc774 \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0\ubabb\ud560 \ud655\ub960\uc774 5.4%\ub85c \ub354 \ub0ae\ub2e4. \n'''","79629c27":"'''\n\uc774\uc0c1\uac12\uc740 \uacb0\uce21\uce58\ub85c \ucc44\uc6b8 \uac83\uc774\ub2e4.\n\uc774 \uacbd\uc6b0 \ubaa8\ub4e0 \uc774\uc0c1\uac12\ub4e4\uc774 \uac19\uc740\uac12(365243)\uc744 \uac16\uace0 \uc788\uc73c\ubbc0\ub85c, \ub2e4 \uac19\uc740 \uac12\uc73c\ub85c \ucc44\uc6cc\uc57c \ud55c\ub2e4. \uadf8\ub9ac\uace0 \ub098\uc911\uc5d0 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc5d0 \uc774 \uc774\uc0c1\uac12\ub4e4\uc744 \n\uc784\uc758\ub85c \ucc44\uc6b4\uac83\uc5d0 \ub300\ud574 \uc54c\ub824\uc904 \uac83\uc774\ub2e4. \uc774\uc0c1\uac12\uc744 \uc22b\uc790\ub85c \ucc44\uc6b0\uc9c0 \uc54a\uace0, \uc0c8\ub85c\uc6b4 boolean \uceec\ub7fc\uc744 \ub9cc\ub4e4\uc5b4\uc11c \uc774\uc0c1\uac12\uc778\uc9c0 \uc544\ub2cc\uc9c0\ub97c \uad6c\ubd84\ud560\uac83\uc774\ub2e4.\n'''\n# \uc774\uc0c1\uac12(365243)\uc778 \uac12\uc5d0 \ub300\ud574\uc11c True , False\ub85c \uad6c\ubd84\napp_train['DAYS_EMPLOYED_ANOM'] = app_train[\"DAYS_EMPLOYED\"] == 365243\n\n# \uc774\uc0c1\uac12\uc744 nan\uac12\uc73c\ub85c \ub300\uce58\napp_train['DAYS_EMPLOYED'].replace({365243:np.nan},inplace=True)\n\n# \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc73c\ub85c \ud655\uc778\ud558\uae30\napp_train['DAYS_EMPLOYED'].plot.hist(title='Days Employment Histogram');\nplt.xlabel('Days Employment');\n\n# 365243\uc758 \uac12\uc774 nan\uac12\uc73c\ub85c \ub300\uce58\ub418\uc5c8\ub2e4.","9f52e5f0":"# test \ub370\uc774\ud130\uc5d0\ub3c4 train \ub370\uc774\ud130\uc640 \ub3d9\uc77c\ud558\uac8c \uc791\uc5c5\ud55c\ub2e4.\napp_test['DAYS_EMPLOYED_ANOM']=app_test['DAYS_EMPLOYED']==365243\napp_test['DAYS_EMPLOYED'].replace({365243:np.nan}, inplace=True)\n\n# True, False\ub85c \ub418\uc5b4\uc788\ub294 \ub370\uc774\ud130 sum\ud558\uba74 True\uc778\uac83 \uac1c\uc218\ub97c \uce74\uc6b4\ud305\ud55c\ub2e4.\nprint('%d \uac1c\uc758 data \uc911\uc5d0 testing data\uc5d0\uc11c %d \uac1c\uc758 \uc774\uc0c1\uac12\uc774 \uc788\ub2e4.'%(len(app_test),app_test['DAYS_EMPLOYED_ANOM'].sum()))","3937af98":"# \ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30\napp_train['REGION_RATING_CLIENT_W_CITY'].head(10)","2dfd6cc7":"# catplot \uc73c\ub85c target \ubcc0\uc218\uc5d0 \ub530\ub978 \ub370\uc774\ud130 \ubd84\ud3ec \uc0b4\ud3b4\ubcf4\uae30\nsns.catplot(x='REGION_RATING_CLIENT_W_CITY', col ='TARGET', data=app_train, kind='count')\n\n# REGION_RATING_CLIENT_W_CITY\uac00 2,3 \uc758 \uacbd\uc6b0 \ub300\ucd9c\uc0c1\ud658\uc744 \ubabb\ud558\ub294 \uac83\uc73c\ub85c \ud310\ub2e8\ub41c\ub2e4. \ubc11\uc5d0\uc11c \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\ub2e4.","f296807c":"# REGION_RATING_CLIENT_W_CITY \uc5d0 \ub300\ud574 TARGET 1\uc758 \ube44\uc728 \ubcf4\uae30\nfor a in range(3):\n    print(len(app_train[(app_train['TARGET']==1)&(app_train['REGION_RATING_CLIENT_W_CITY']==a+1)])\n      \/len(app_train[app_train['REGION_RATING_CLIENT_W_CITY']==a+1])*100)\n\n'''\nREGION_RATING_CLIENT_W_CITY\uac00 1\uc778 \uace0\uac1d\uc758 \ub300\ucd9c\uc0c1\ud658\uc744 \ubabb\ud558\ub294 \uacbd\uc6b0\ub294 4.8%, 2\uc778 \uace0\uac1d\uc758 \uacbd\uc6b0\ub294 7.9%, 3\uc778 \uace0\uac1d\uc758 \uacbd\uc6b0\ub294 11.4% \ub85c \nREGION_RATING_CLIENT_W_CITY \ud3c9\uac00\uac00 3\uc774 \ub098\uc628 \uacbd\uc6b0\uc5d0 \ub300\ucd9c\uc0c1\ud658\uc774 \uc5b4\ub824\uc6b8 \uac83\uc774\ub77c\uace0 \ud310\ub2e8\ub420 \ud655\ub960\uc774 \uac00\uc7a5 \ub192\ub2e4.\n\uc774\ub294 \uc0b4\uace0 \uc788\ub294 \ub3c4\uc2dc\uc758 \ud3c9\uac00\uac00 \uc548\uc88b\uc744 \uc218\ub85d \ub300\ucd9c\uc0c1\ud658\uc744 \ubabb\ud560 \ud655\ub960\ub3c4 \ub192\ub2e4\ub294 \ub73b\uc774\ub2e4.\n'''","319c77ee":"# 'DAYS_BIRTH' \ub97c \ucd94\uac00\ud558\uc5ec \uc0c1\uad00 \uad00\uacc4\ub97c \ubcf4\uc558\ub2e4. 'DAYS_BIRTH' \ub294 app_train \uacfc app_test \uc5d0\uc11c \ub3d9\uc77c\ud558\uac8c \ub144 \ub2e8\uc704\ub85c \ubc14\uafd4\uc900\ub2e4.\n \napp_train['DAYS_BIRTH'] = app_train['DAYS_BIRTH'] \/ -365\napp_test['DAYS_BIRTH'] = app_test['DAYS_BIRTH'] \/ -365\n\next=app_train[['TARGET','EXT_SOURCE_1','EXT_SOURCE_2','EXT_SOURCE_3','DAYS_BIRTH']]\nextcorr = ext.corr()\nextcorr","20e0c194":"# \uc0c1\uad00\uad00\uacc4\ub85c \ud788\ud2b8\ub9f5\uc744 \uadf8\ub824\ubcf4\uc558\ub2e4.\nplt.figure(figsize=(8,6))\nsns.heatmap(extcorr, cmap=plt.cm.RdYlBu_r, vmin=-0.25, annot=True, vmax=0.6)\nplt.title('Correlation Heatmap');\n\n'''\n'EXT_SOURCE'\uc640 'TARGET'\ub294 \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\uc5d0 \uc788\uc73c\ubbc0\ub85c, EXT_SOURCE\uac12\uc774 \uc99d\uac00\ud560\uc218\ub85d target\uac12\uc774 0\uc774 \ub9ce\uc740 \uac83\uc73c\ub85c, \ub300\ucd9c \uc0c1\ud658\uc744 \ud560 \ud655\ub960\uc774 \ub192\ub2e4.\n'DAYS_BIRTH'\ub294 'EXT_SOURCE_1'\uc640 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\uc5d0 \uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uc544 \uc774 score\uc911 \ud558\ub098\ub294 \uace0\uac1d\uc758 \ub098\uc774\uc77c\uac83\uc73c\ub85c \ucd94\uc815\ub41c\ub2e4.\n'''","96c1c55f":"# EXT_SOURCE1,2,3\uc744 TARGET\uac12 \ubcc4\ub85c \ub098\ub220\uc11c kdeplot \uc73c\ub85c \uc2dc\uac01\ud654 \ud558\uc600\ub2e4.\nplt.figure(figsize=(10,12))\n\nfor i, source in enumerate(['EXT_SOURCE_1','EXT_SOURCE_2','EXT_SOURCE_3']):\n    # subplot \uc73c\ub85c \ub098\ub204\uc5b4 \uc8fc\uae30\n    plt.subplot(3,1,i+1)\n    \n    # target \ubcc4\ub85c kdeplot \ub098\ud0c0\ub0b4\uae30\n    sns.kdeplot(app_train.loc[app_train['TARGET']==0,source],label='target==0')\n    sns.kdeplot(app_train.loc[app_train['TARGET']==1,source],label='target==1')\n    \n    # title\uacfc x\ucd95, y\ucd95 \uc9c0\uc815\n    plt.title('Distribution of %s by Target Value' % source)\n    plt.xlabel('%s' %source);\n    plt.ylabel('Density');\n\n# \ub192\uc774 \uc870\uc815\nplt.tight_layout(h_pad=2.5)\n\n'''\nEXT_SOURCE_2 \uc640 EXT_SOURCE_3\uc740 target\uac12\uc5d0 \ub530\ub77c \ucc28\uc774\uac00 \ub098\ud0c0\ub098\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\ntarget \uacfc\uc758 \uc0c1\uad00\uacc4\uc218\uac00 \ub9ce\uc774 \ub192\uc9c0\ub294 \uc54a\uc558\uc9c0\ub9cc, \ntarget\uc774 0\uc778\uc9c0 1\uc778\uc9c0\uc5d0 \ub530\ub77c \uac12\uc774 \ub2e4\ub978\uac83\uc73c\ub85c \ubcf4\uc544 \ubaa8\ub378\uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294 \uc8fc\uc694 \ubcc0\uc218\ub77c\uace0 \ud310\ub2e8\ud560 \uc218 \uc788\ub2e4.\n'''","83f2cea3":"# column type \uc218 \ud655\uc778\napp_train.dtypes.value_counts()\n\n# int64 \uc640 float64 \ub294 \uc218\uce58\ud615 \ubcc0\uc218\uc774\uace0 object\ub294 string\uc744 \ud3ec\ud568\ud55c \ubc94\uc8fc\ud615 \ubcc0\uc218\uc774\ub2e4. \ub098\uc911\uc5d0 encoding \ud560 \ud544\uc694\uac00 \uc788\uc5b4\ubcf4\uc778\ub2e4. ","25beb1dc":"# object \ubcc0\uc218 list\ub85c \ubc14\uafb8\uc5b4 \ud655\uc778\nobject_columns = app_train.dtypes[app_train.dtypes == 'object'].index.tolist()\nobject_columns","b403a4db":"# \uac01\uac01\uc758 \ubcc0\uc218\ub9c8\ub2e4 target \ubd84\ud3ec\ub97c \ud655\uc778\ud558\uc600\ub2e4.\n\nobj =['CODE_GENDER','FLAG_OWN_CAR','FLAG_OWN_REALTY','NAME_INCOME_TYPE','NAME_HOUSING_TYPE',\n      'OCCUPATION_TYPE']\n\ndef show_category_by_target(df, columns):\n    for column in columns:\n        chart = sns.catplot(x=column, col='TARGET', data=df, kind='count')\n        chart.set_xticklabels(rotation=65)\n\nshow_category_by_target(app_train, obj)","f7baccc4":"# target \uac12\uc5d0 \ub530\ub978 \ubd84\ud3ec\ub97c \uc0b4\ud3b4\ubcf4\uc558\ub2e4.\ncond_1 = (app_train['TARGET'] == 1)\ncond_0 = (app_train['TARGET'] == 0)\n\nfor a in obj:\n    print(a)\n    print('\\n\uc5f0\uccb4\uc778 \uacbd\uc6b0\\n',app_train[cond_1][a].value_counts()\/app_train[cond_1].shape[0])\n    print('\\n\uc5f0\uccb4\uac00 \uc544\ub2cc \uacbd\uc6b0\\n',app_train[cond_0][a].value_counts()\/app_train[cond_0].shape[0])\n    print('----------------------------')","c6ec41d7":"# \uc0c1\uad00 \uad00\uacc4\ub97c \ub3c4\ucd9c\ud574 \ubcf4\uc558\ub2e4.\namt=app_train[['TARGET','AMT_CREDIT', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY','AMT_GOODS_PRICE']]\namtcorr = amt.corr()\namtcorr","a1c6f991":"# \uc0c1\uad00\uad00\uacc4\ub85c \ud788\ud2b8\ub9f5\uc744 \uadf8\ub824\ubcf4\uc558\ub2e4.\nplt.figure(figsize=(8,6))\nsns.heatmap(amtcorr, cmap=plt.cm.RdYlBu_r, vmin=-0.25, annot=True, vmax=0.6)\nplt.title('Correlation Heatmap');\n\n'''\nAMT_CREDIT\uacfc AMT_ANNUITY \uc758 \uc0c1\uad00\uad00\uacc4\ub294 0.77\ub85c \ub192\uc558\ub2e4. \uc6d4 \ub300\ucd9c\uae08\uc561\uc774 \ub192\uc73c\uba74 \ub300\ucd9c \uae08\uc561\ub3c4 \ub192\uc544\uc9c0\ub294 \uac83\uc740 \ub2f9\uc5f0\ud55c \uacb0\uacfc\uc774\ub2e4.\nTARGET \uacfc 'AMT_CREDIT', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY' \ubcc0\uc218\ub4e4\uc740 \ubaa8\ub450 \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\uc5c8\ub2e4. \ud558\uc9c0\ub9cc \uadf8 \uc815\ub3c4\ub294 \ud06c\uc9c0 \uc54a\ub2e4.\n'AMT_INCOME_TOTAL'(\uace0\uac1d\uc18c\ub4dd)\uc740 'AMT_CREDIT'\uc640 'AMT_ANNUITY'\uc640 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac16\ub294\ub2e4. \n\uace0\uac1d\uc758 \uc18c\ub4dd\uc774 \ud074 \uc218\ub85d \ub300\ucd9c \uae08\uc561\ub3c4 \ucee4\uc9c4\ub2e4\ub294 \uac83\uc744 \uc720\ucd94\ud560 \uc218 \uc788\ub2e4.\n'AMT_GOODS_PRICE'\ub294 'AMT_CREDIT'\uacfc 'AMT_ANNUITY' \ubcc0\uc218\uc640 \ub192\uc740 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac16\ub294\ub2e4. \n'''","1a9a3811":"# 'AMT_CREDIT', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY'\uc744 TARGET\uac12 \ubcc4\ub85c \ub098\ub220\uc11c kdeplot \uc73c\ub85c \uc2dc\uac01\ud654 \ud558\uc600\ub2e4.\nplt.figure(figsize=(10,12))\n\nfor i, source in enumerate(['AMT_CREDIT', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY']):\n    # subplot \uc73c\ub85c \ub098\ub204\uc5b4 \uc8fc\uae30\n    plt.subplot(3,1,i+1)\n    \n    # target \ubcc4\ub85c kdeplot \ub098\ud0c0\ub0b4\uae30\n    sns.kdeplot(app_train.loc[app_train['TARGET']==0,source],label='target==0')\n    sns.kdeplot(app_train.loc[app_train['TARGET']==1,source],label='target==1')\n    \n    # title\uacfc x\ucd95, y\ucd95 \uc9c0\uc815\n    plt.title('Distribution of %s by Target Value' % source)\n    plt.xlabel('%s' %source);\n    plt.ylabel('Density');\n\n# \ub192\uc774 \uc870\uc815\nplt.tight_layout(h_pad=2.5)\n\n'''\ntarget\uac12\uc5d0 \ub530\ub77c\uc11c \ud070 \ucc28\uc774\ub97c \ubcf4\uc774\uc9c0\ub294 \uc54a\ub294\ub2e4. \uc774\ub294 feature engineering\uc744 \ud1b5\ud574 target \uac12 \uac04\uc758 \ucc28\uc774\ub97c \ub113\ud790 \uc218 \uc788\uc74c\uc744 \uc758\ubbf8\ud560 \uc218 \uc788\ub2e4.\n'''","8ed35099":"# \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4 \uacb0\uce21\uac12\uc758 \uc720\ubb34\ub97c \ud655\uc778\ud55c\ub2e4. \ndef missing_values_table(df):\n        # \ucd1d \uacb0\uce21\uac12\n        miss = df.isnull().sum()\n        \n        # \uacb0\uce21\uac12 \ube44\uc728\n        miss_percent = 100 * miss \/ len(df)\n        \n        # \ud45c \ub9cc\ub4e4\uae30\n        mis_table = pd.concat([miss, miss_percent], axis=1)\n        \n        # column \uc774\ub984 \ub2e4\uc2dc \uc124\uc815\n        mis_val_table = mis_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        # \uacb0\uce21\uac12 \ube44\uc728 \ub192\uc740 \uc21c\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c \ud558\uae30\n        mis_val_table = mis_val_table[\n            mis_val_table.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        # \uc815\ubcf4 \uc694\uc57d\n        print (\"\uc120\ud0dd\ub41c \ub370\uc774\ud130\ud504\ub808\uc784\uc740 \" + str(df.shape[1]) + \"\uac1c\uc758 \uceec\ub7fc\uc774 \uc788\ub2e4.\\n\"      \n            \"\uadf8\uc911\uc5d0\uc11c \" + str(mis_val_table.shape[0]) +\n              \" \uac1c\ub294 \uacb0\uce21\uac12\uc774 \uc788\ub294 \uceec\ub7fc\uc774\ub2e4.\")\n        \n        return mis_val_table","22e1682e":"# \uacb0\uce21\uac12 \ud1b5\uacc4\nmissing_values = missing_values_table(app_train)\nmissing_values.head(20)","a84cb61a":"app_train.shape, app_test.shape","8f9c17c4":"apps = pd.concat([app_train,app_test])\nprint(apps.shape)","ca725643":"apps['TARGET'].value_counts(dropna=False)","75245af7":"# \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c \ub9ac\uc2a4\ud2b8\ub85c \ub9cc\ub4e0 \ud6c4\uc5d0 \uc778\ucf54\ub529 \uc9c4\ud589\nobject_col = apps.dtypes[apps.dtypes == 'object'].index.tolist()\nfor column in object_col:\n    apps[column] = pd.factorize(apps[column])[0]","d3f40385":"apps.info()","897ca31a":"# \uc0c8\ub85c\uc6b4 \ubcc0\uc218 \ucd94\uac00\napps['CREDIT_INCOME_PERCENT'] = apps['AMT_CREDIT'] \/ apps['AMT_INCOME_TOTAL']\napps['ANNUITY_INCOME_PERCENT'] = apps['AMT_ANNUITY'] \/ apps['AMT_INCOME_TOTAL']\napps['CREDIT_TERM'] = apps['AMT_ANNUITY'] \/ apps['AMT_CREDIT']\napps['GOODS_CREDIT_RATIO'] = apps['AMT_GOODS_PRICE']\/apps['AMT_CREDIT']\napps['CREDIT_GOODS_DIFF'] = apps['AMT_CREDIT'] - apps['AMT_GOODS_PRICE']\napps['GOODS_INCOME_RATIO'] = apps['AMT_GOODS_PRICE']\/apps['AMT_INCOME_TOTAL']","7b1a4437":"apps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']].head()","a47edcc1":"# column \ubc29\ud5a5\uc73c\ub85c \ud3c9\uade0 \uad6c\ud558\uae30\napps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']].mean(axis=1)","8f4c216f":"# \uc0c1\uad00\uad00\uacc4\uac00 \ub192\uc740 \uac83\uc5d0 \ub300\ud574 \ub108\ubb34 \uac00\uacf5\ud558\uba74 \uc131\ub2a5\uc774 \uc624\ud788\ub824 \ub5a8\uc5b4\uc9c8 \uc218 \uc788\uc73c\ubbc0\ub85c mean\uacfc std \ub9cc \uad6c\ud558\uc600\ub2e4.\napps['APPS_EXT_SOURCE_MEAN'] = apps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']].mean(axis=1)\napps['APPS_EXT_SOURCE_STD'] = apps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']].std(axis=1)","c188da77":"apps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'APPS_EXT_SOURCE_MEAN','APPS_EXT_SOURCE_STD']].head(10)","e53a9ec4":"# 'APPS_EXT_SOURCE_STD'\uc758 NULL \uac12 \ud3c9\uade0\uc73c\ub85c \ucc44\uc6b0\uae30\napps['APPS_EXT_SOURCE_STD'] = apps['APPS_EXT_SOURCE_STD'].fillna(apps['APPS_EXT_SOURCE_STD'].mean())","630b679d":"apps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'APPS_EXT_SOURCE_MEAN','APPS_EXT_SOURCE_STD']].head(10)","f24c65f7":"# DAYS_BIRTH, DAYS_EMPLOYED \ube44\uc728\ub85c \uc18c\ub4dd\/\uc790\uc0b0 \uad00\ub828 Feature \uac00\uacf5\n\napps['EMPLOYED_BIRTH_RATIO'] = apps['DAYS_EMPLOYED']\/apps['DAYS_BIRTH']\napps['INCOME_EMPLOYED_RATIO'] = apps['AMT_INCOME_TOTAL']\/apps['DAYS_EMPLOYED']\napps['INCOME_BIRTH_RATIO'] = apps['AMT_INCOME_TOTAL']\/apps['DAYS_BIRTH']\napps['CAR_BIRTH_RATIO'] = apps['OWN_CAR_AGE'] \/ apps['DAYS_BIRTH']\napps['CAR_EMPLOYED_RATIO'] = apps['OWN_CAR_AGE'] \/ apps['DAYS_EMPLOYED']","d9ffc44a":"apps.isnull().sum().head(100)","e4c3b987":"ccb = pd.read_csv('..\/input\/home-credit-default-risk\/credit_card_balance.csv')","430a88d2":"ccb.head()","72348318":"ccb.shape","e0f117b2":"# application_train \ub370\uc774\ud130\uc640 credit_card_balance \ub370\uc774\ud130 merge\napp_ccb = ccb.merge(app_train, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='outer')\napp_ccb.shape","283459fe":"missing_values = missing_values_table(ccb)\nmissing_values.head(20)","817533a9":"app_ccb.groupby('SK_ID_CURR').count()","3c14fea6":"app_ccb.groupby('SK_ID_CURR')['SK_ID_CURR'].count()","d2429177":"# boxplot \uc73c\ub85c \uc2dc\uac01\ud654, \ud3c9\uade0\n\nsns.boxplot(app_ccb.groupby('SK_ID_CURR')['SK_ID_CURR'].count())\nprint(app_ccb.groupby('SK_ID_CURR')['SK_ID_CURR'].count().mean())\n\n# \uc774\uc0c1\uac12\uc774 \ub9ce\uc9c0 \uc54a\uace0 \ud3c9\uade0\uc774 37 \uc815\ub3c4\uc774\ub2e4. ","eebe9927":"categorical_features = ccb.select_dtypes(include = [\"object\"]).columns\nnumerical_features = ccb.select_dtypes(exclude = [\"object\"]).columns\nprint(categorical_features)\nprint(numerical_features)","d00d948c":"# 'NAME_CONTRACT_STATUS' \uc758 target \ubd84\ud3ec \uc2dc\uac01\ud654\ndef plot_re(df,t1='',t2=''):\n    f,ax=plt.subplots(1,2,figsize=(18,8))\n    df[[t1,t2]].groupby([t1]).count().plot.bar(ax=ax[0],color='Blue')\n    ax[0].set_title('count of customer on '+t1)\n    sns.countplot(t1,hue=t2,data=df,ax=ax[1],palette=\"spring\")\n    ax[1].set_title(t1+': Target 0 vs Target 1')\n    # Rotate x-labels\n    plt.xticks(rotation=-90)\n    a=plt.show()\n    return a\n\nplot_re(app_ccb,'NAME_CONTRACT_STATUS','TARGET')\n\n'''\ntarget\uc774 1\uc778 \uac12\uc758 'NAME_CONTRACT_STATUS'(\uacc4\uc57d \uc0c1\ud0dc)\ub294 Active\uc778 \uacbd\uc6b0\uac00 \ub9ce\uc558\ub2e4.\n'''","28f4f9df":"# crosstab \uc73c\ub85c \ubcf4\uba74, 0\uc5d0\uc11c completed \ube44\uc728\uc774 1\ubcf4\ub2e4 \ub354 \ub192\uc740 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.\npd.crosstab(app_ccb.TARGET, app_ccb.NAME_CONTRACT_STATUS, dropna=False, normalize='all')","dcdc25ad":"# \uc2dc\uac01\ud654\ub97c \uc704\ud55c \ud568\uc218 \ub9cc\ub4e4\uc5b4 \ub193\uae30\ndef show_hist_by_target(df, columns):\n    cond_1 = (df['TARGET'] == 1)\n    cond_0 = (df['TARGET'] == 0)\n    \n    for column in columns:\n        fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(12, 4), squeeze=False)\n        sns.violinplot(x='TARGET', y=column, data=df, ax=axs[0][0] )\n        sns.distplot(df[cond_0][column], ax=axs[0][1], label='0', color='blue')\n        sns.distplot(df[cond_1][column], ax=axs[0][1], label='1', color='red')   ","b6f84dfd":"# app_train[['SK_ID_CURR', 'TARGET']] \ub450\uac00\uc9c0 \uceec\ub7fc\ub9cc \uac16\uace0 \uc634\n# on='SK_ID_CURR' \uceec\ub7fc \uae30\uc900\uc73c\ub85c \uc870\uc778\n\napp_ccb_target = ccb.merge(app_train[['SK_ID_CURR', 'TARGET']], on='SK_ID_CURR', how='left')\napp_ccb_target.shape","9d987187":"# \uc218\uce58\ud615 \ubcc0\uc218 \ub9ac\uc2a4\ud2b8\ub85c \ub9cc\ub4e4\uae30\nnum_columns = app_ccb_target.dtypes[app_ccb_target.dtypes != 'object'].index.tolist()","37e2a10e":"# 'SK_ID_PREV','SK_ID_CURR','TARGET' \uceec\ub7fc \ud544\uc694\uc5c6\uc74c\n\nnum_columns = [column for column in num_columns if column not in ['SK_ID_PREV', 'SK_ID_CURR', 'TARGET']]\nnum_columns","94d42dd3":"# \uc2dc\uac01\ud654\ub97c \uc704\ud574 show_hist_by_target \ud568\uc218 \ud638\ucd9c\n\nshow_hist_by_target(app_ccb_target, num_columns)\n\n'''\n\uacb0\uacfc : \ubd84\ud3ec\uc5d0 \uc788\uc5b4\uc11c target 0,1\uc774 \uc11c\ub85c \ucc28\uc774\uac00 \uc870\uae08 \ub098\ub294 \ubcc0\uc218\ub294 MONTHS_BALANCE, AMT_BALANCE, AMT_CREDIT_LIMIT_ACTUAL, \nAMT_INST_MIN_REGULARITY,AMT_RECIVABLE,AMT_TOTAL_RECEIVABLE,CNT_INSTALMENT_MATURE_CUM \uc774 \ud574\ub2f9\ub41c\ub2e4. \n\ud558\uc9c0\ub9cc MONTHS_BALANCE\ub294 \uc2e0\uccad\uc77c \uae30\uc900 \uc794\uc561 \uc6d4\uc744 \uc758\ubbf8\ud558\ubbc0\ub85c \ud070 \uc0c1\uad00\uad00\uacc4\ub294 \uc5c6\uc744 \uac83\uc73c\ub85c \uc608\uc0c1\ub41c\ub2e4. \n\uc774\uc5b4\uc11c \uc0c1\uad00\uad00\uacc4 \ubd84\uc11d\uc744 \ud1b5\ud574 \uc720\uc758\ubbf8\ud55c \ubcc0\uc218\ub97c \ucd94\ub824\ub0b4\uaca0\ub2e4.\n'''","ede4e9c1":"# target \ubcc0\uc218\uc640 \ub2e4\ub978 \ubcc0\uc218\ub4e4\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uc558\ub2e4. \uadf8\ub9ac\uace0 sorting \ud558\uc600\ub2e4. \ncorrelations = app_ccb_target.corr()['TARGET'].sort_values()\n\n# \uc591\uc758 \uc0c1\uad00\uad00\uacc4 \ub192\uc740 \uac83 15\uac1c, \uc74c\uc758 \uc0c1\uad00\uad00\uacc4 \ub192\uc740 \uac83 15\uac1c \ub098\ud0c0\ub0b4\uae30\nprint('Most Positive Correlations:\\n', correlations.tail(15))\nprint('\\nMost Negative Correlations:\\n', correlations.head(15))\n\n'''\n\uacb0\uacfc : AMT_BALANCE ,AMT_TOTAL_RECEIVABLE ,AMT_RECIVABLE \ub294 target\uacfc \uc591\uc758 \uc0c1\uad00\uad00\uacc4\uac00 \uc788\uace0, \nCNT_INSTALMENT_MATURE_CUM\ub294 \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac16\uace0 \uc788\ub2e4. \uc774 4\uac1c\uc758 \ubcc0\uc218\ub294 \uc704\uc5d0\uc11c \ud588\ub358 \uc2dc\uac01\ud654\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc5c8\ub4ef\uc774 \uc720\uc758\ubbf8\ud574 \ubcf4\uc778\ub2e4.\nAMT_BALANCE, AMT_CREDIT_LIMIT_ACTUAL, AMT_INST_MIN_REGULARITY,AMT_RECIVABLE,\nAMT_TOTAL_RECEIVABLE,CNT_INSTALMENT_MATURE_CUM \uc744 \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\ub2e4.\n'''","6b91a69d":"'''\nAMT_BALANCE, AMT_CREDIT_LIMIT_ACTUAL, AMT_INST_MIN_REGULARITY,AMT_RECIVABLE,\nAMT_TOTAL_RECEIVABLE,CNT_INSTALMENT_MATURE_CUM  \uc2dc\uac01\ud654\n'''\nf, ax = plt.subplots(2,3,figsize=(14,14))\n\n# AMT_BALANCE\nsns.distplot(app_ccb.AMT_BALANCE.dropna(), kde=True, color='g',\n            ax=ax[0,0]).set_title('AMT_BALANCE')\n# AMT_CREDIT_LIMIT_ACTUAL\nsns.distplot(app_ccb.AMT_CREDIT_LIMIT_ACTUAL.dropna(), kde=True, color='b',\n            ax=ax[0,1]).set_title('AMT_CREDIT_LIMIT_ACTUAL')\n# AMT_INST_MIN_REGULARITY\nsns.distplot(app_ccb.AMT_INST_MIN_REGULARITY.dropna(), kde=True, color='r',\n            ax=ax[0,2]).set_title('AMT_INST_MIN_REGULARITY')\n# CNT_INSTALMENT_MATURE_CUM\nsns.distplot(app_ccb.CNT_INSTALMENT_MATURE_CUM.dropna(), kde=True, color='g',\n            ax=ax[1,0]).set_title('CNT_INSTALMENT_MATURE_CUM')\n# AMT_INST_MIN_REGULARITY\nsns.distplot(app_ccb.AMT_INST_MIN_REGULARITY.dropna(), kde=True, color='b',\n            ax=ax[1,1]).set_title('AMT_INST_MIN_REGULARITY')\n# AMT_CREDIT_LIMIT_ACTUAL\nsns.distplot(app_ccb.AMT_CREDIT_LIMIT_ACTUAL.dropna(), kde=True, color='r',\n            ax=ax[1,2]).set_title('AMT_CREDIT_LIMIT_ACTUAL')\n\n","5036037e":"# mean, median, count \ud0c0\uac9f\ubcc4\ub85c \uc870\uc0ac\ud574\ubcf4\uae30\n\nprint(app_ccb_target.groupby('TARGET').agg({'AMT_BALANCE': ['mean', 'median', 'count','sum','max']}))\nprint(app_ccb_target.groupby('TARGET').agg({'AMT_CREDIT_LIMIT_ACTUAL': ['mean', 'median', 'count','sum','max']}))\nprint(app_ccb_target.groupby('TARGET').agg({'AMT_INST_MIN_REGULARITY': ['mean', 'median', 'count','sum','max']}))\nprint(app_ccb_target.groupby('TARGET').agg({'CNT_INSTALMENT_MATURE_CUM': ['mean', 'median', 'count','sum','max']}))\nprint(app_ccb_target.groupby('TARGET').agg({'AMT_INST_MIN_REGULARITY': ['mean', 'median', 'count','sum','max']}))\nprint(app_ccb_target.groupby('TARGET').agg({'AMT_CREDIT_LIMIT_ACTUAL': ['mean', 'median', 'count','sum','max']}))\n\n'''\nAMT_BALANCE, AMT_CREDIT_LIMIT_ACTUAL, AMT_INST_MIN_REGULARITY,\nAMT_CREDIT_LIMIT_ACTUAL,AMT_INST_MIN_REGULARITY \ub294 TARGET=1\uc77c \uacbd\uc6b0\uc5d0 mean\uc774 \ub192\ub2e4.\n\nCNT_INSTALMENT_MATURE_CUM\ub294 \ud0c0\uac9f\uc774 0\uc778 \uacbd\uc6b0\uc5d0 \ud3c9\uade0\uc774 \ub354 \ub192\ub2e4.\nmax \uac12\uc740 0\uc774 \ubaa8\ub450 \ub2e4 \ud06c\ub2e4. \n'''","96fc5cde":"# \ubcc0\uc218\ub85c \ubc1b\uc544\uc11c ccb_group\uc5d0 \uc800\uc7a5\nccb_group = app_ccb_target.groupby('SK_ID_CURR') \nccb_group.head()","f3a7f401":"agg_dict = {\n    'SK_ID_CURR':['count'],\n    'AMT_BALANCE':['mean', 'max', 'sum'],\n    'AMT_CREDIT_LIMIT_ACTUAL':['mean', 'max', 'sum'], \n    'AMT_INST_MIN_REGULARITY':['mean', 'max', 'sum'],\n    'CNT_INSTALMENT_MATURE_CUM':['mean', 'max', 'sum'],\n    'AMT_CREDIT_LIMIT_ACTUAL':['mean', 'max', 'sum'],\n    'AMT_INST_MIN_REGULARITY':['mean', 'max', 'sum']\n}\n\nccb_amt_agg = ccb_group.agg(agg_dict)\nccb_amt_agg.head()\nccb_amt_agg.shape","474f85e0":"# MultiIndex\ub85c \ub418\uc5b4 \uc788\ub294 \uceec\ub7fc\uba85 \ud655\uc778\n\nccb_amt_agg.columns","cb68afc4":"# \uceec\ub7fc\uba85 \ubcc0\uacbd\nccb_amt_agg.columns = ['CCB_' + ('_').join(column).upper() for column in ccb_amt_agg.columns.ravel()]\nccb_amt_agg.head()","672d48f5":"ccb_amt_agg=ccb_amt_agg.reset_index()\nccb_amt_agg","61934e42":"ccb_amt_agg=ccb_amt_agg.drop(['CCB_SK_ID_CURR_COUNT'],axis=1)\nccb_amt_agg","73f4fe44":"apps = apps.merge(ccb_amt_agg, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='left')\napp_ccb.shape","bca235d4":"# \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c \ub9ac\uc2a4\ud2b8\ub85c \ub9cc\ub4e0 \ud6c4\uc5d0 \uc778\ucf54\ub529 \uc9c4\ud589\nobject_col = apps.dtypes[apps.dtypes == 'object'].index.tolist()\nfor column in object_col:\n    apps[column] = pd.factorize(apps[column])[0]","7ea77dea":"apps","bcaff678":"# \ub370\uc774\ud130 train, test \ub85c \ub098\ub204\uae30\napps_train = apps[~apps['TARGET'].isnull()]\napps_test = apps[apps['TARGET'].isnull()]\napps.shape, apps_train.shape, apps_test.shape","b9b4bb58":"from sklearn.model_selection import train_test_split\n\nftr_app = apps_train.drop(['SK_ID_CURR', 'TARGET'], axis=1)\ntarget_app = apps_train['TARGET']\n\ntrain_x, valid_x, train_y, valid_y = train_test_split(ftr_app, target_app, test_size=0.3, random_state=2020)\ntrain_x.shape, valid_x.shape","6ea572d7":"from lightgbm import LGBMClassifier\n\nclf = LGBMClassifier(\n        n_jobs=-1,\n        n_estimators=1000,\n        learning_rate=0.02,\n        num_leaves=32,\n        subsample=0.8,\n        max_depth=12,\n        silent=-1,\n        verbose=-1\n        )\n\nclf.fit(train_x, train_y, eval_set=[(train_x, train_y), (valid_x, valid_y)], eval_metric= 'auc', verbose= 100, \n        early_stopping_rounds= 100)","fccdcf07":"from lightgbm import plot_importance\n\nplot_importance(clf, figsize=(16, 32))","647e322b":"# \ud559\uc2b5\ub41c Classifier\ub97c \uc774\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc608\uce21\ud558\uace0 \uacb0\uacfc\ub97c Kaggle\ub85c Submit \uc218\ud589\npreds = clf.predict_proba(apps_test.drop(['SK_ID_CURR', 'TARGET'], axis=1))[:, 1 ]","46ebbf5b":"apps_test['TARGET'] = preds\napps_test[['SK_ID_CURR', 'TARGET']].to_csv('apps_baseline05.csv', index=False)","fe72960a":"\ub2e4\uc74c\uacfc \uac19\uc740 \uc0c8\ub85c\uc6b4 \ubcc0\uc218\ub97c \ucd94\uac00\ud558\uc600\ub2e4.\n- 'EMPLOYED_BIRTH_RATIO' : \uace0\uac1d \ub098\uc774\uc5d0 \ub300\ud574 \uc77c\ud55c \ub0a0\uc9dc \ube44\uc728\n- 'INCOME_EMPLOYED_RATIO' : \uc9c1\uc5c5 \uc720\uc9c0 \uae30\uac04\uc5d0 \ub300\ud55c \ucd1d \uc218\uc785 \ube44\uc728\n- 'INCOME_BIRTH_RATIO' : \uace0\uac1d \ub098\uc774\uc5d0 \ub300\ud55c \ucd1d \uc218\uc785 \ube44\uc728\n- 'CAR_BIRTH_RATIO' : \uace0\uac1d \ub098\uc774\uc5d0 \ub300\ud55c \uc18c\uc720 \ucc28\ub7c9 \uc5f0\uc2dd\n- 'CAR_EMPLOYED_RATIO' : \uc9c1\uc5c5 \uc720\uc9c0 \uae30\uac04\uc5d0 \ub300\ud55c \uc18c\uc720 \ucc28\ub7c9 \uc5f0\uc2dd","7d5a18e7":"'REGION_RATING_CLIENT_W_CITY'\ub294 \uace0\uac1d\uc758 \uac70\uc8fc\uc9c0\ub97c \ub098\ud0c0\ub0b4\ub294 \ubcc0\uc218\ub85c, (1,2,3) \uc73c\ub85c \uac70\uc8fc \uc9c0\uc5ed\uc744 \ud3c9\uac00\ud558\uc5ec \ub098\ub208 \ubcc0\uc218\uc774\ub2e4. ","597b73e0":"\ub2e4\uc74c\uacfc \uac19\uc740 \uc0c8\ub85c\uc6b4 \ubcc0\uc218\ub97c \ucd94\uac00 \ud558\uc600\ub2e4.\n- 'APPS_EXT_SOURCE_MEAN': EXT_SOURCE \ub4e4\uc758 \ud3c9\uade0\n- 'APPS_EXT_SOURCE_STD' : EXT_SOURCE \ub4e4\uc758 \ud45c\uc900\ud3b8\ucc28","e68dddf1":"### EDA2 : 'DAYS_EMPLOYED'","02f60211":"### EDA 6 : 'AMT_CREDIT', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY','AMT_GOODS_PRICE'","a470e223":"target \ubcc4 \ubd84\ud3ec\uc640 \uc0c1\uad00\uad00\uacc4\ub85c \uc720\uc758\ubbf8\ud55c \ubcc0\uc218\ub77c\uace0 \ucd94\ub824\ub0b8 6\uac1c\uc758 \ubcc0\uc218\ub97c \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\ub2e4.\n(AMT_BALANCE, AMT_CREDIT_LIMIT_ACTUAL, AMT_INST_MIN_REGULARITY,AMT_RECIVABLE,\nAMT_TOTAL_RECEIVABLE,CNT_INSTALMENT_MATURE_CUM )\n\n- AMT_BALANCE : \ub300\ucd9c \uc6d4\ubcc4 \uc794\uc561\n- AMT_CREDIT_LIMIT_ACTUAL : \uc6d4\ubcc4 \uce74\ub4dc \ud5c8\uc6a9 \ud55c\ub3c4\n- AMT_INST_MIN_REGULARITY : \ucd5c\uc18c \ud560\ubd80 \ub0a9\uc785 \uae08\uc561\n- AMT_TOTAL_RECEIVABLE : \ucd1d \uc6d0\uae08 \ud68c\uc218 \uae08\uc561\n- AMT_RECIVABLE : \ub300\ucd9c \uc6d0\uae08 \ud68c\uc218 \uae08\uc561\n- CNT_INSTALMENT_MATURE_CUM : \ub300\ucd9c \ub0a9\ubd80 \ud69f\uc218\n","89ecb8f3":"## EDA : Application data","0729bbe7":"### Null \uac12 \ud655\uc778","d489b679":"### FE3 : 'DAYS_BIRTH', 'DAYS_EMPLOYED'","e4cb375d":"'DAYS_EMPLOYED'\ub294 \uace0\uac1d \uc18c\ub4dd\uacfc \uad00\ub828\ub41c \ub370\uc774\ud130\ub85c, \ub300\ucd9c \uc2e0\uccad\uc804 \ud604 \uc9c1\uc5c5 \uc720\uc9c0\uae30\uac04\uc744 \uc758\ubbf8\ud55c\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc74c\uc218 \uac12\uc744 \ub744\uba70 \uc77c(days) \ub2e8\uc704 \uc774\ub2e4.","c363b180":"## Modeling","8d00b092":"### FE2 : 'EXT_SOURCE_1','EXT_SOURCE_2','EXT_SOURCE_3'","676690f8":"'DAYS BIRTH' \ub294 \uace0\uac1d\uc758 \uace0\uac1d \ub098\uc774\ub97c \uc2e0\uccad \uc77c\uc790 \uae30\uc900\uc73c\ub85c \ubcc0\ud658\ud55c \uac12\uc774\ub2e4. \ub530\ub77c\uc11c \uc74c\uc218\uac12\uc774\uace0, \uc77c(days) \ub2e8\uc704\uc774\ub2e4. ","2e9e34a7":"### \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc778\ucf54\ub529","75c83cc6":"### SK_ID_CURR\ub2f9 \ud3c9\uade0 SK_ID_PREV \uac74\uc218 \ud655\uc778","0cafc5f8":"### EDA2 : \uc218\uce58\ud615 \ubcc0\uc218","a14d7644":"- 'AMT_CREDIT': \ub300\ucd9c\uae08\uc561\n- 'AMT_INCOME_TOTAL' : \uace0\uac1d \uc18c\ub4dd\n- 'AMT_ANNUITY' : \uc6d4 \ub300\ucd9c \uc9c0\uae09\uc561\n- 'AMT_GOODS_PRICE' : \uc18c\ube44\uc790 \ub300\ucd9c \uc0c1\ud488\uc561","23232fb2":"column type \uc218\ub97c \ud655\uc778 \ud588\uc744 \ub54c, string\uc744 \ud3ec\ud568\ud55c \ubc94\uc8fc\ud615 \ubcc0\uc218\uac00 \uc788\uc5c8\ub2e4. \uac01 \ubcc0\uc218\ub9c8\ub2e4 target \ubd84\ud3ec\ub97c \ud655\uc778\ud574 \ubcf4\uace0 encoding\ud560 \ud544\uc694\uac00 \uc788\ub2e4.","4c979971":"### EDA 4 : 'EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3'","ebccebcb":"## **Imports**","d908e32a":"**\uacb0\uacfc**\n- 'CODE_GENDER': \uc5f0\uccb4\uac00 \uc544\ub2cc \uacbd\uc6b0\uc5d0 \ube44\ud574 \ub0a8\uc131\uc774 \uc5f0\uccb4\uc778 \uacbd\uc6b0\uc5d0 \ube44\uc728\uc774 \ub192\uac8c \ub098\ud0c0\ub0ac\ub2e4. \n- 'FLAG_OWN_CAR': \uc5f0\uccb4\uc778 \uacbd\uc6b0\uc640 \uc5f0\uccb4\uac00 \uc544\ub2cc \uacbd\uc6b0\uc758 \ucc28\uc774\uac00 \ud06c\uc9c0 \uc54a\ub2e4.\n- 'FLAG_OWN_REALTY': \uc5f0\uccb4\uc778 \uacbd\uc6b0\uc640 \uc5f0\uccb4\uac00 \uc544\ub2cc \uacbd\uc6b0\uc758 \ucc28\uc774\uac00 \ud06c\uc9c0 \uc54a\ub2e4. \n- 'NAME_INCOME_TYPE': State servant, working, unemployed \ube44\uc728\uc774 \uc5f0\uccb4\uc77c \ub54c \ub354 \ud06c\uac8c \ub098\ud0c0\ub0ac\ub2e4. \n- 'NAME_HOUSING_TYPE': \ube4c\ub9b0 \uc9d1\uc5d0\uc11c \uc0b4\uac70\ub098 \ubd80\ubaa8\ub2d8\uacfc \ud568\uaed8 \uc0b4 \ub54c \uc5f0\uccb4 \ube44\uc728\uc774 \ub354 \ud06c\uac8c \ub098\ud0c0\ub0ac\ub2e4.\n- 'OCCUPATION_TYPE': \ub178\ub3d9\uc790, \ub4dc\ub77c\uc774\ubc84, \ubcf4\uc548 \uc9c1\ubb34 \uc885\uc0ac\uc790\ub4e4\uc758 \uc5f0\uccb4 \ube44\uc728\uc774 \ub354 \ud06c\uac8c \ub098\ud0c0\ub0ac\ub2e4. ","62f4ab29":"### EDA 5 : \ubc94\uc8fc\ud615 \ubcc0\uc218","24e9d581":"- 'NAME_CONTRACT_TYPE' : \ub300\ucd9c\uc720\ud615\n- 'CODE_GENDER': \uc131\ubcc4\n- 'FLAG_OWN_CAR': \ucc28 \uc18c\uc720 \uc5ec\ubd80\n- 'FLAG_OWN_REALTY': \ubd80\ub3d9\uc0b0 \uc18c\uc720 \uc5ec\ubd80\n- 'NAME_TYPE_SUITE': \ub3d9\ud589\uace0\uac1d\n- 'NAME_INCOME_TYPE': \uc18c\ub4dd\uc720\ud615\n- 'NAME_EDUCATION_TYPE': \uace0\uac1d \uad50\uc721 \ub808\ubca8\n- 'NAME_FAMILY_STATUS': \uace0\uac1d \uac00\uc871 \uc720\ud615\n- 'NAME_HOUSING_TYPE': \uc8fc\ud0dd \uc720\ud615\n- 'OCCUPATION_TYPE': \uc9c1\uc5c5 \uc720\ud615\n- 'WEEKDAY_APPR_PROCESS_START': \ub300\ucd9c\uc2e0\uccad \uc2dc\uc791\uc694\uc77c\n- 'ORGANIZATION_TYPE': \uace0\uac1d \uc9c1\uc7a5 \uc720\ud615\n- 'FONDKAPREMONT_MODE','HOUSETYPE_MODE','WALLSMATERIAL_MODE', 'EMERGENCYSTATE_MODE' : \uace0\uac1d \uac70\uc8fc\uc9c0\uc5ed \ud2b9\uc815\uac12\n\n\uc774 \uc911\uc5d0\uc11c \ub300\ucd9c \uc0c1\ud658 \uc5ec\ubd80\uc640 \uad00\ub828\ub420 \uc218 \uc788\ub294 'CODE_GENDER','FLAG_OWN_CAR','FLAG_OWN_REALTY','NAME_INCOME_TYPE','NAME_HOUSING_TYPE','OCCUPATION_TYPE'\uc5d0 \ub300\ud558\uc5ec \uc0b4\ud3b4\ubcf4\uaca0\ub2e4.","4737dd6e":"### \uacb0\uce21\uac12 \ud655\uc778","f15f1bac":"### \ub370\uc774\ud130 \uac00\uacf5 \uc804 training data, testing data \uacb0\ud569","1a718de9":"### EDA4 : AMT_BALANCE, AMT_CREDIT_LIMIT_ACTUAL, AMT_INST_MIN_REGULARITY,AMT_RECIVABLE, AMT_TOTAL_RECEIVABLE,CNT_INSTALMENT_MATURE_CUM","3f345680":"EXT_SOURCE_1, EXT_SOURCE_2, EXT_SOURCE_3 \ub294 \uc678\ubd80 \uc790\uc6d0\uc73c\ub85c \ubd80\ud130 \uc815\uaddc\ud654\ub41c \uc2a4\ucf54\uc5b4\ub85c \uace0\uac1d \ud589\ub3d9\uc744 \ub098\ud0c0\ub0b8\ub2e4. \n\uc74c\uc758 \uc0c1\uad00\uacc4\uc218 \uc911\uc5d0 \uc0c1\uad00\ub3c4\uac00 \uac00\uc7a5 \ub192\uc558\uae30\uc5d0 \uc774 \uc138\uac00\uc9c0\ub97c \uc911\uc810\uc73c\ub85c EDA\ub97c \uc9c4\ud589\ud558\uc600\ub2e4.\nTARGET \ubcc0\uc218\uc640 EXT_SOURCE\uc640\uc758 \uc0c1\uad00\uad00\uacc4\uc640 EXT_SOURCE \uc11c\ub85c\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uc558\ub2e4.","3155f5c2":"### \ubc94\uc8fc\ud615 \ubcc0\uc218 Label Encoding","71fc6344":"### EDA1 : 'DAYS_BIRTH'","dd9e336d":"## Feature Engineering : Application data","4dc2b121":"### EDA1 : \ubc94\uc8fc\ud615 \ubcc0\uc218","fd65b1b5":"## EDA : CREDIT CARD BALANCE data","2873aa67":"### EDA3 : 'REGION_RATING_CLIENT_W_CITY'","7157ab36":"\ub2e4\uc74c\uacfc \uac19\uc740 \uc0c8\ub85c\uc6b4 \ubcc0\uc218\ub97c \ucd94\uac00\ud558\uc600\ub2e4.\n- CREDIT_INCOME_PERCENT: \uace0\uac1d\uc758 \uc218\uc785\uc5d0 \ub300\ud55c \ub300\ucd9c \uae08\uc561 \ube44\uc728 \n- ANNUITY_INCOME_PERCENT: \uace0\uac1d\uc774 \uc218\uc785\uc5d0 \ub300\ud55c \uc6d4 \ub300\ucd9c \uae08\uc561 \ube44\uc728\n- CREDIT_TERM: \ub300\ucd9c \uac1a\ub294 \uae30\uac04 (\uc6d4 \ub2e8\uc704)\n- GOODS_CREDIT_RATIO: \ucd1d \ub300\ucd9c \uae08\uc561\uc5d0 \ub300\ud55c \ub300\ucd9c \uc0c1\ud488 \uae08\uc561 \ube44\uc728\n- CREDIT_GOODS_DIFF: \ucd1d \ub300\ucd9c \uae08\uc561 - \ub300\ucd9c \uc0c1\ud488 \uae08\uc561\n- GOODS_INCOME_RATIO : \uace0\uac1d \uc218\uc785\uc5d0 \ub300\ud55c \ub300\ucd9c \uc0c1\ud488 \uae08\uc561 \ube44\uc728","0b11258c":"### FE1 : 'AMT_CREDIT', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY','AMT_GOODS_PRICE'","3c530f1f":"### EDA3 :  \uc0c1\uad00\uad00\uacc4 \ubd84\uc11d","f2e89a65":"## Feature Engineering : CREDIT CARD BALANCE data","f65e1a1b":"### Null \uac12 \uc77c\uad04 \ubcc0\ud658"}}