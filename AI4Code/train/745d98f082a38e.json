{"cell_type":{"58fec722":"code","7ebe9c21":"code","3f8422d5":"code","61c366b1":"code","c15ca7e3":"code","539f917d":"code","feeba0bd":"code","1bea2f03":"code","3c411b03":"code","ab84ee10":"markdown","9e9fc6fe":"markdown","69677ddc":"markdown","619abb49":"markdown","4049f0e8":"markdown"},"source":{"58fec722":"#importing libraries\n\nfrom nltk.corpus import stopwords \nfrom nltk.tokenize import word_tokenize ","7ebe9c21":"#Finding the cosine similarity between two sentences X and Y\n\nX = (\"Hi! How are you ?\").lower()\nY = (\"Are you from Banglore ?\").lower()","3f8422d5":"#Tokenize the given sentences into tokens.\nX_list = word_tokenize(X)  \nY_list = word_tokenize(Y) ","61c366b1":"X_list, Y_list","c15ca7e3":"#printing the stopwords in english\nsw = stopwords.words('english')  \nl1 =[];l2 =[] ","539f917d":"sw","feeba0bd":"## remove stop words from the string \nX_set = {w for w in X_list if not w in sw}  \nY_set = {w for w in Y_list if not w in sw} ","1bea2f03":"X_set, Y_set","3c411b03":"# form a set containing keywords of both strings  \nrvector = X_set.union(Y_set)  \nfor w in rvector: \n    if w in X_set: l1.append(1) # create a vector \n    else: l1.append(0) \n    if w in Y_set: l2.append(1) \n    else: l2.append(0) \nc = 0\n  \n# cosine formula  \nfor i in range(len(rvector)): \n        c+= l1[i]*l2[i] \ncosine = c \/ float((sum(l1)*sum(l2))**0.5) \nprint(\"similarity: \", cosine)","ab84ee10":"Cosine similarity is a measure of similarity between two non-zero vectors of an inner product space. \n\n### Definition\nIt is defined to equal the cosine of the angle between them, which is also the same as the inner product of the same vectors normalized to both have length 1.","9e9fc6fe":"### Tokenization\nTokenization is a common task in Natural Language Processing (NLP).\nTokenization is a way of separating a piece of text into smaller units called tokens. Here, tokens can be either words, characters, or subwords. Hence, tokenization can be broadly classified into 3 types \u2013 word, character, and subword (n-gram characters) tokenization.","69677ddc":"### What are stop words?\nStopwords are the words in any language which does not add much meaning to a sentence. They can safely be ignored without sacrificing the meaning of the sentence. For some search engines, these are some of the most common, short function words, such as the, is, at, which, and on. In this case, stop words can cause problems when searching for phrases that include them, particularly in names such as \u201cThe Who\u201d or \u201cTake That\u201d.","619abb49":"# If you find this kernel useful please don't forget to *upvote*","4049f0e8":"## Finding the Sentence Similarity between two sentences"}}