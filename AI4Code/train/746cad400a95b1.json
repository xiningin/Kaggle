{"cell_type":{"f2d57315":"code","01bc0bc1":"code","367fc5c4":"code","f246f6b2":"code","eb5e4b18":"code","c0198e8d":"code","b1521426":"code","dfe95307":"code","1c3c2595":"markdown","d6da6c95":"markdown","33435d15":"markdown","b3bc5f9b":"markdown","0989ff8a":"markdown","5e312013":"markdown","5a8751cc":"markdown","5a26d0cc":"markdown"},"source":{"f2d57315":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","01bc0bc1":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('\/kaggle\/input\/5minute-crafts-video-views-dataset\/5-Minute Crafts.csv')\ndf.head()","367fc5c4":"trending = df[df['active_since_days'] <=7]\ntrending = trending.sort_values(by =['total_views'] , ascending = False).head(5)\npd.DataFrame(trending['title']).reset_index()","f246f6b2":"plt.figure(figsize = (12,6))\nax = sns.scatterplot(data=df[df['total_views']<100000000] , y ='total_views', x ='num_chars')\nplt.title(\"Total Views by Number of Characters Used in Title\", fontsize=14);\nplt.xlabel(\"Total Views\", fontsize=14);\nplt.ylabel(\"Number of Characters Used\", fontsize=14)","eb5e4b18":"plt.figure(figsize = (10,10))\nax = sns.histplot(df, x = 'title_sentiment', stat ='probability', bins = 15)\n\nplt.title(\"Distribution of Video Title Sentiment\");\nplt.xlabel(\"Sentiment Score (Low to High)\", fontsize=14);\nplt.ylabel(\"Percentage\", fontsize=14);\n","c0198e8d":"plt.figure(figsize=(20,6));\nax = sns.histplot(df, x=\"avg_word_len\", stat='probability', bins = 16, color='red')\nplt.title(\"Distribution of average word length\",fontsize=20);\nplt.xlabel(\"Number of average word length against the Video Title\", fontsize=14);\nplt.ylabel(\"Percentage\", fontsize=14);","b1521426":"\nplt.figure(figsize= (15,10))\nvc = df[df['total_views'] < 1000000].groupby(\"num_words\").agg({\"total_views\" : \"mean\"}).reset_index()\n\nplt.figure(figsize=(12,6));\nax = sns.barplot(x=\"num_words\", y=\"total_views\", data=vc)\n\nplt.title(\"Average Views by Number of Words Used\");\nplt.xlabel(\"Number of Words Used\", fontsize=14);\nplt.ylabel(\"Average Views\", fontsize=14);","dfe95307":"plt.figure(figsize=(12,10))\nsns.heatmap(df.corr(), center=0, annot=True)","1c3c2595":"# Total Views by Number of Characters Used in Title","d6da6c95":"# Visualize correlated features","33435d15":"# Top 5 Tending Video of the week","b3bc5f9b":"# Distribution of average word length","0989ff8a":"# Average Views by Number of Words Used","5e312013":"#  Load Dataset","5a8751cc":"# Sentiment Distirbution","5a26d0cc":"# Thank you !!\n**Please upvote if you liked my work !!**"}}