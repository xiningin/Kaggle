{"cell_type":{"ab1dc721":"code","507783e6":"code","c2acc1b5":"code","825fd3c8":"code","2dc49235":"code","e53ff0c6":"code","49ef0bad":"code","5bc9476d":"code","c15335d7":"code","82730c80":"code","d484f651":"code","e6def61b":"code","eaf6b801":"code","8005ba20":"code","b0b915d8":"code","5c00b3c4":"code","b9328c5a":"code","243a06bc":"code","a77f5f99":"code","733c9e63":"code","2eec0b78":"code","0d9b498a":"code","57ce89cf":"code","ac92f0d1":"code","36978778":"code","8b2d2774":"code","a8be40a7":"code","dfba2a3a":"code","b77f7ba1":"code","d304f7f1":"code","42750d73":"code","2f355f8e":"code","bee10bb6":"code","26e8a733":"code","101cc673":"code","40b2fde7":"code","a3e9dce4":"code","56820109":"code","400f9080":"code","03aa8f83":"markdown","b2a80ba9":"markdown","7a91a936":"markdown","de27a11b":"markdown","96156a46":"markdown","8e5a92f1":"markdown","ba007f95":"markdown","3d6923a4":"markdown","f2f289e3":"markdown","d4715fa5":"markdown","b238e4a2":"markdown","f3e980f5":"markdown","3f2e75de":"markdown","2b551c1f":"markdown","6e47afdf":"markdown","e566603b":"markdown","c71c6e6a":"markdown","d904b685":"markdown","46f82a68":"markdown","63244b4d":"markdown","96ff54d0":"markdown","8faf9af0":"markdown","2d5cda67":"markdown","7b561bae":"markdown"},"source":{"ab1dc721":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","507783e6":"df = pd.read_csv(\"..\/input\/shopify-data-science-internship-challenge\/Shopify.csv\")\ndf.head()","c2acc1b5":"df.describe()","825fd3c8":"df.info() # we can safely proceed as there are no nulls in the dataset","2dc49235":"duplicateRows = df[df.duplicated()]\nduplicateRows","e53ff0c6":"df.head()","49ef0bad":"df['shop_id'].nunique()","5bc9476d":"df['shop_id'].value_counts()","c15335d7":"df['order_amount'].value_counts()","82730c80":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(10,10))\nsns.histplot(df['order_amount'], color='red', kde=True)","d484f651":"df['user_id'].value_counts()","e6def61b":"df['user_id'].nunique()","eaf6b801":"df_group_shop = df.groupby('shop_id')['order_id'].mean()\ndf_group_shop.plot.bar(figsize=(20,10))","8005ba20":"df_group_shop = df.groupby('shop_id')['order_id'].median()\ndf_group_shop.plot.bar(figsize=(20,10))","b0b915d8":"df_group_user = pd.DataFrame({'mean_amount': df.groupby('user_id')['order_amount'].mean()}).reset_index()\ndf_group_user","5c00b3c4":"subset_df = df_group_user[df_group_user['mean_amount']>2000]\n#subset_df\nfig = plt.figure(figsize=(20,10))\nplt.bar(subset_df['user_id'], subset_df['mean_amount'])","b9328c5a":"df[df['user_id']==607]","243a06bc":"subset_df = df_group_user[df_group_user['user_id']!=607]\nsubset_df.head()","a77f5f99":"fig = plt.figure(figsize=(20,10))\nplt.bar(subset_df['user_id'], subset_df['mean_amount'])","733c9e63":"# plotting users with more than 2000 dollars of mean purchases\nsubset_df = subset_df[subset_df['mean_amount']>2000]\nfig = plt.figure(figsize=(20,10))\nplt.bar(subset_df['user_id'], subset_df['mean_amount'], color='red')","2eec0b78":"!pip install chart_studio\nimport cufflinks as cf\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable = True)\nimport chart_studio\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot","0d9b498a":"import plotly.express as px\n\npx.bar(subset_df, x='user_id', y='mean_amount', title='Middle-High average spending Users (Hover to see the ID)')","57ce89cf":"subset_df[subset_df['user_id']==878]","ac92f0d1":"df[df['user_id']==878]","36978778":"df[df['user_id']==766]","8b2d2774":"df[df['user_id']==834]","a8be40a7":"df[df['shop_id']==78]","dfba2a3a":"df_group_shop = pd.DataFrame({'mean_amount': df.groupby('shop_id')['order_amount'].mean()}).reset_index()\ndf_group_shop","b77f7ba1":"px.bar(df_group_shop, x='shop_id', y='mean_amount')","d304f7f1":"df[df['shop_id']==42]","42750d73":"clean_df = df[df['user_id']!=607]\nclean_df = clean_df[clean_df['shop_id']!=78]\nclean_df","2f355f8e":"clean_df.describe()","bee10bb6":"clean_df['order_amount'].iplot(kind='hist',\n                              title='Cleaned dataframe Order Amount plot',\n                              xTitle='Order Amount',\n                              yTitle='Count',\n                              theme='solar',\n                              showgrid=False)","26e8a733":"fig = plt.figure(figsize=(20,10))\nsns.histplot(clean_df['order_amount'], color='green', kde=True)","101cc673":"fig = plt.figure(figsize=(20,10))\nplt.bar(clean_df['shop_id'], clean_df['order_amount'], color='#008000')","40b2fde7":"clean_df.head()","a3e9dce4":"px.scatter(clean_df, x='created_at', y='order_amount', color='payment_method')","56820109":"px.scatter(clean_df, x='created_at', y='order_amount', color='shop_id')","400f9080":"clean_df.describe()","03aa8f83":"#### Question 2:\n\nFor this question you\u2019ll need to use SQL. Follow this link: https:\/\/www.w3schools.com\/SQL\/TRYSQL.ASP?FILENAME=TRYSQL_SELECT_ALL to access the data set required for the challenge. Please use queries to answer the following questions. Paste your queries along with your final numerical answers below.\n1. How many orders were shipped by Speedy Express in total?\n2. What is the last name of the employee with the most orders?\u00b6\n3. What product was ordered the most by customers in Germany?\u00b6","b2a80ba9":"There still seems to be an outlier, let's explore further","7a91a936":"#### Shop 78 clearly looks suspicious","de27a11b":"## Question 2","96156a46":"1. Clearly the mean order amount is 3145.13 which is way too high for a sneaker store -> This indicates that some stores or some users might be associated with fraud (outliers)\n2. The median on the other hand is 284 which is much more reasonable and the actual mean should lie between those 2","8e5a92f1":"Clearly user 607 has an insane average amount of purchase and should be highly suspected for fraud","ba007f95":"## Shopify Data Science Challenge Problems:\n","3d6923a4":"Both median and mean of shops have pretty normal distribution, we would have to dig deeper to find outliers","f2f289e3":"#### Q3. What product was ordered the most by customers in Germany?\n\n<br> SELECT ProductName, MaxOrders FROM\n<br> (SELECT ProductID, MAX(NetOrders) as MaxOrders FROM\n<br> (Select *, Count(DISTINCT OrderID) AS NetOrders from \n<br> (SELECT *\n<br> From Orders o Inner Join OrderDetails od\n<br> On o.OrderID = od.OrderID\n<br> Where CustomerID IN\n<br> (Select CustomerID From\n<br> Customers Where Country = 'Germany'))\n<br> Group by ProductID\n<br> Order by COUNT(DISTINCT OrderID) DESC)) t1 Inner Join Products p\n<br> WHERE t1.ProductID = p.ProductID\n\n\n\n<br> <b> Answer: Gorgonzola Telino (number of orders are 5) <\/b>","d4715fa5":"## Conclusion - Answer to Question 1:\n\n1. There are no missing values\n2. There are no duplicates\n3. There are 2 outliers: user id 607 and shop id 78 : These 2 are the main reasons of fraud\n4. Net mean of the cleaned (with no outliers) data is $302.58 $$\n5. Here median (284) could also be used but after removing outliers, mean is a better representative of the spread","b238e4a2":"#### Q2. What is the last name of the employee with the most orders?\n\n<br> SELECT LastName, MAX(NetOrders) FROM\n<br> (Select *, COUNT(DISTINCT OrderID) as NetOrders FROM\n<br> (SELECT o.OrderID, e.EmployeeID, e.LastName, e.FirstName\n<br> FROM Orders o Inner Join Employees e\n<br> ON o.EmployeeID = e.EmployeeID)\n<br> GROUP BY EmployeeID\n<br> ORDER BY COUNT(DISTINCT OrderID) DESC)\n\n\n<br> <b> Answer: Peacock (number of orders are 40) <\/b>","f3e980f5":"## Let's remove the 2 outliers: user id 607 and shop id 78 and observe the data again","3f2e75de":"## User 607 shopping from shop 42 purchased 2000 items every time worth 70400 dollars each time and a net of 12 million dollars over a span of just 18 days with a credit card. This is a huge alert for fraud.","2b551c1f":"#### Q1. How many orders were shipped by Speedy Express in total?\n\n<br> SELECT Count(OrderID) FROM\n<br> Orders o Inner Join Shippers s\n<br> ON o.ShipperID = s.ShipperID\n<br> Where ShipperName = 'Speedy Express'\n\n<br> <b> Answer: 54 <\/b>","6e47afdf":"#### Question 1: Given some sample data, write a program to answer the following:\n\nOn Shopify, we have exactly 100 sneaker shops, and each of these shops sells only one model of shoe. We want to do some analysis of the average order value (AOV). When we look at orders data over a 30 day window, we naively calculate an AOV of $3145.13. Given that we know these shops are selling sneakers, a relatively affordable item, something seems wrong with our analysis.\n\n1. Think about what could be going wrong with our calculation. \n2. Think about a better way to evaluate this data. \n3. What metric would you report for this dataset?\n4. What is its value?\n\n\n","e566603b":"Let's remove the user 607 and plot again","c71c6e6a":"User 878 has a very high one time spending which is through a debit card, shop id is $78$","d904b685":"## Doing basic data exploration","46f82a68":"Wow, shop id 42 and 78 seem to be the culprit of the fraud","63244b4d":"User 766 also has a one time high spending at shop $78$ ","96ff54d0":"#### *Please view the notebook in NBviewer to see all the plotly graphs of this notebook","8faf9af0":"#### Please view the notebook in NBviewer to see all the plotly graphs of this notebook","2d5cda67":"Interestingly, user 834 also has a one time high spending using debit card at shop $78$","7b561bae":"There are no missing values or duplicates in order id. Our dataset is clean and we can proceed"}}