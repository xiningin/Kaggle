{"cell_type":{"3d06a059":"code","2e616fe3":"code","138b101d":"code","a389dd11":"code","cea7ae67":"code","b86bdf56":"code","93f22ddd":"code","2ec0f9e6":"code","65b95709":"code","9037c7f1":"code","1b8843a0":"code","e05afb95":"code","5ffee153":"code","3b291bce":"code","318c071e":"code","7b3c17df":"code","3af143db":"code","711f03ad":"code","f4d0cecd":"code","4900ac6b":"code","4828da40":"code","0ee24db2":"code","e8e496e6":"code","f9976d2f":"code","b639381c":"code","1db3e4bc":"code","99549c0a":"code","fe448d11":"code","c8d55c4d":"code","828b092d":"code","5a9f9cfa":"code","3645d138":"code","e44047d3":"code","b548cac6":"code","f5e60073":"code","3ee5395c":"code","3cc48221":"code","89ec1a9d":"code","0933734e":"code","629f65e3":"markdown","c259eb99":"markdown","7f2e7597":"markdown","f7be4814":"markdown","e2bb93b8":"markdown","241825c2":"markdown","be8f6245":"markdown","7e5c5fde":"markdown","8541cdc3":"markdown","18af62a5":"markdown","111bf2d0":"markdown","81492588":"markdown","f023fb47":"markdown","55de910e":"markdown","5cec18ce":"markdown","f503561a":"markdown","2f425c0a":"markdown","0f8a79ad":"markdown","de380881":"markdown","00966c77":"markdown","69ab7d3b":"markdown","1cf612aa":"markdown","721b6b8a":"markdown","7be9a486":"markdown","caa92247":"markdown","6af2020f":"markdown","4f61ff3d":"markdown","809cc835":"markdown","bfc31342":"markdown","f9ec6f3b":"markdown","975ee52d":"markdown","4896c670":"markdown","47436681":"markdown","4103cbea":"markdown","479cb4e3":"markdown","cecb5e9b":"markdown","50d3e759":"markdown","a95d3bc3":"markdown","843a3480":"markdown","ae535b10":"markdown","55a5da11":"markdown","24431f38":"markdown","b39da6bb":"markdown","ae6d6484":"markdown","c1b462c8":"markdown","5e7b0b5a":"markdown","d5d66002":"markdown","6a5b18b5":"markdown","db97de46":"markdown","42572938":"markdown"},"source":{"3d06a059":"#import libraries\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ncrime= pd.read_csv('..\/input\/crimes-in-boston\/crime.csv', encoding='unicode_escape')\ncrime.info()","2e616fe3":"crime.describe()","138b101d":"crime.head()","a389dd11":"crime.SHOOTING.unique()  # If there is a shot, it is filled with 'Y'. For this reason, I filled all the missing values with 'N'.","cea7ae67":"crime = crime.drop(['INCIDENT_NUMBER','OFFENSE_CODE'], axis=1)\n\n#replace NaN values with 'N' : means No\ncrime.SHOOTING.fillna('N', inplace=True)\n\n#Replace -1 values in Lat\/Long with NaN\ncrime.Lat.replace(-1, None, inplace=True)\ncrime.Long.replace(-1, None, inplace=True)\n\n\n#change the column names\nrename = {'OFFENSE_CODE_GROUP':'Offense_group',\n         'OFFENSE_DESCRIPTION':'Description',\n         'DISTRICT':'District',\n         'REPORTING_AREA':'Area',\n         'SHOOTING':'Shooting',\n         'OCCURRED_ON_DATE':'Date',\n         'YEAR':'Year',\n         'MONTH':'Month',\n         'DAY_OF_WEEK':'Day',\n         'HOUR':'Hour',\n         'UCR_PART':'UCR',\n         'STREET':'Street'}\ncrime.rename(index=str, columns=rename, inplace=True)\n\n#setting the index to be the date will help \ncrime.index = pd.DatetimeIndex(crime.Date)","b86bdf56":"crime_dist = crime.copy()","93f22ddd":"crime.District.unique()","2ec0f9e6":"district_name = {\n'D14':'Brighton',\n'C11':'Dorchester',\n'D4':'South End',\n'B3':'Mattapan',\n'B2':'Roxbury',\n'C6':'South Boston',\n'A1':'Downtown',\n'E5':'West Roxbury',\n'A7':'East Boston',\n'E13':'Jamaica Plain',\n'E18':'Hyde Park',\n'A15':'Charlestown'\n}\ncrime['District'] = crime['District'].map(district_name)","65b95709":"crime.head()","9037c7f1":"crime.resample('M').size()","1b8843a0":"monthly = crime.resample('M').size().to_frame(name='Count')\nmonthly = monthly.reset_index(level='Date')\nimport plotly.express as px\n\nfig = px.line(monthly, x=monthly.Date, y=monthly.Count)\nfig.update_layout(title='Number of Crimes per Month(2015-2018)',\n                   xaxis_title='Month',\n                   yaxis_title='Number of Crimes')\nfig.show()\n\nresults = px.get_trendline_results(fig)\nprint(results)","e05afb95":"#Categorization \n#violation.Offense_group.unique()\n#violation.Offense_group.value_counts()\n\nimport re\nviolation = crime[crime.Offense_group.str.contains('Violation')]\nassault = crime[crime.Offense_group.str.contains('Assault')]\nburglary = crime[crime.Offense_group.str.contains('Burglary')]\nharassment = crime[crime.Offense_group.str.contains('Harassment')]\nlarceny = crime[crime.Offense_group.str.contains('Larceny|Theft')]\nlarceny = larceny[~larceny.Offense_group.str.contains('Recovery')]\n#Investigate = crime[crime.Offense_group.str.contains('Investigate|Search', flags=re.IGNORECASE, regex=True)]\nkilling = crime[crime.Offense_group.str.contains('Manslaughter|Homicide')] #bunlar az say\u0131dayd\u0131 ancak en ciddi su\u00e7lardand\u0131 az row olmas\u0131 sebebiyle de ayn\u0131 categoriye ald\u0131m\nfraud = crime[crime.Offense_group.str.contains('Confidence Games|Fraud|Counterfeiting')]\n#x = crime[crime.Offense_group.str.contains('Missing Person Located', flags=re.IGNORECASE, regex=True)] it was not crime\nmv_accident = crime[crime.Offense_group.str.contains('Accident')]\n#medicaid = crime[crime.Offense_group.str.contains('Medical Assistance')]\nrobbery = crime[crime.Offense_group.str.contains('Robbery')]\ndisputes = crime[crime.Offense_group.str.contains('Verbal Disputes')]\nvandalism = crime[crime.Offense_group.str.contains('Vandalism')]\n\n#A column named Category has been added for each crime category.\nviolation.insert(0, 'Category', 'Violation')\nassault.insert(0, 'Category', 'Assault')\nburglary.insert(0, 'Category', 'Burglary')\nharassment.insert(0, 'Category', 'Harrassment')\nlarceny.insert(0, 'Category', 'Larceny')\n#Investigate = crime[crime.Offense_group.str.contains('Investigate|Search', flags=re.IGNORECASE, regex=True)]\nkilling.insert(0, 'Category', 'Killing') #bunlar az day\u0131dayd\u0131 ancak en ciddi su\u00e7lardand\u0131 az row olmas\u0131 sebebiyle de ayn\u0131 categoriye ald\u0131m\nfraud.insert(0, 'Category', 'Fraud')\n#x = crime[crime.Offense_group.str.contains('Missing Person Located', flags=re.IGNORECASE, regex=True)] it was not crime\nmv_accident.insert(0, 'Category', 'Motor vehicle accident')\n#medicaid = crime[crime.Offense_group.str.contains('Medical Assistance')]\nrobbery.insert(0, 'Category', 'Robbery')\ndisputes.insert(0, 'Category', 'Verbal disputes')\nvandalism.insert(0, 'Category', 'Vandalism')\n\n#A dataframe called categorized_crimes indicativing categorized crimes was created.\nframes = [violation, assault, burglary, harassment, larceny, killing, fraud, mv_accident, robbery, disputes, vandalism]\ncategorized_crimes = pd.concat(frames)\ncategorized_crimes","5ffee153":"categorized_crimes['Date'] = pd.to_datetime(categorized_crimes['Date'])\nmonthly_crimes_count = categorized_crimes.pivot_table(index=pd.Grouper(freq = 'M', key ='Date'), columns='Category', aggfunc=np.size, values= 'Offense_group')\nmonthly_crimes_count\n","3b291bce":"monthly_crimes_count = monthly_crimes_count.reset_index(level='Date')\nmonthly_crimes_count = pd.melt(monthly_crimes_count, id_vars=['Date'])\nmonthly_crimes_count.tail()","318c071e":"\nfig = px.scatter(monthly_crimes_count, x='Date', y=monthly_crimes_count.value, color = 'Category', trendline=\"ols\")\n\nfig.update_layout(title='Number of Crimes for each Crime Category',\n                   yaxis_title='Number of Crimes')\nfig.show()\n\nresults = px.get_trendline_results(fig)\nprint(results)\n","7b3c17df":"plt.figure(figsize=(10,8))\nx = crime.Offense_group.value_counts().head(30).plot(kind='bar', color = 'salmon')","3af143db":"crime.District.value_counts()","711f03ad":"crime['Date'] = pd.to_datetime(crime['Date'])\ndistrict_crimes_count = crime.pivot_table(index=pd.Grouper(freq = 'M', key ='Date'), columns='District', aggfunc=np.size, values= 'Offense_group')\n\ndistrict_crimes_count = district_crimes_count.reset_index(level='Date')\ndistrict_crimes_count = pd.melt(district_crimes_count, id_vars=['Date'])\ndistrict_crimes_count","f4d0cecd":"\nfig = px.scatter(district_crimes_count, x='Date', y=district_crimes_count.value, color = 'District', trendline=\"ols\")\n\nfig.update_layout(title='Number of Crimes for each District',\n                   yaxis_title='Number of Crimes')\nfig.show()\n\nresults = px.get_trendline_results(fig)\nprint(results)","4900ac6b":"plt.figure(figsize=(20,10))\nsns.countplot(x = 'Category', data = categorized_crimes, order = categorized_crimes.Category.value_counts().index, hue='District')","4828da40":"plt.figure(figsize=(10,6))\nsns.countplot(x='Month',data=crime,palette=\"Reds\")","0ee24db2":"crime_2015=crime[crime['Year']==2015]\ncrime_2016=crime[crime['Year']==2016]\ncrime_2017=crime[crime['Year']==2017]\ncrime_2018=crime[crime['Year']==2018]\n\nfig, axes = plt.subplots(1,4, figsize = (32,6))\n\nsns.countplot(x='Month',data=crime_2015,palette = 'Blues',ax = axes[0]).set_title('2015')\nsns.countplot(x='Month',data=crime_2016,palette = 'Greens',ax = axes[1]).set_title('2016')\nsns.countplot(x='Month',data=crime_2017,palette = 'Reds',ax = axes[2]).set_title('2017')\nsns.countplot(x='Month',data=crime_2018,palette = 'Blues',ax = axes[3]).set_title('2018')\n","e8e496e6":"print(crime_2016.Offense_group.count())\nprint(crime_2017.Offense_group.count())","f9976d2f":"all_catcrime = ['Larceny','Motor vehicle accident', 'Violation', 'Assault', 'Vandalism', 'Verbal disputes', 'Fraud','Killing', 'Burglary', 'Robbery','Harrassment']\ncatcrime_month = categorized_crimes.copy()\ncatcrime_month = catcrime_month[catcrime_month['Category'].isin(all_catcrime)]\ncatcrime_month= catcrime_month.groupby(['Month','Category']).size().reset_index(name = 'Number of Crimes')\ncatcrime_month['Months'] = catcrime_month['Month']\n\n#pivot table\ncatcrime_month_reshape = pd.pivot_table(catcrime_month, index=['Month'], columns=['Category'], values='Number of Crimes', aggfunc=np.sum)\n\n\ncatcrime_month_reshape.plot(kind= 'bar', stacked = True, figsize=(15,8),color=['#c8553d','#370617','#6a040f','#9d0208','#f9844a','#450920','#dc2f02','#e85d04','#f48c06','#90be6d','#4d908e'])\nplt.title('Number of Crimes by Type')\nplt.show()","b639381c":"plt.figure(figsize=(10,8))\ncategorized_crimes.Category.value_counts().head(10).plot(kind='bar', color = 'salmon')","1db3e4bc":"catcrime_time = categorized_crimes.copy()\ntop10_catcrime = ['Larceny','Motor vehicle accident', 'Violation', 'Assault', 'Vandalism', 'Verbal disbutes', 'Fraud', 'Burglary', 'Robbery','Harrassment']\ncatcrime_time = catcrime_time[catcrime_time['Category'].isin(all_catcrime)]\ncatcrime_time = catcrime_time.groupby('Hour').size().reset_index(name = 'Number of Crimes')\ncatcrime_time['Hour'] = catcrime_time['Hour'].apply(lambda i: str(i)+':00')\ncatcrime_time","99549c0a":"plt.figure(figsize=(15,8))\nsns.pointplot(data = catcrime_time, x = 'Hour', y = 'Number of Crimes')\nplt.show()\n","fe448d11":"#group crimes \ncatcrime_type = categorized_crimes.copy()\ncatcrime_type = catcrime_type[catcrime_type['Category'].isin(top10_catcrime)]\ncatcrime_type= catcrime_type.groupby(['Hour','Category']).size().reset_index(name = 'Number of Crimes')\ncatcrime_type['Hours'] = catcrime_type['Hour'].apply(lambda i: str(i)+':00')\n\n#pivot table\ncatcrime_type_reshape = pd.pivot_table(catcrime_type, index=['Hour'], columns=['Category'], values='Number of Crimes', aggfunc=np.sum)\n\n\ncatcrime_type_reshape.plot(kind= 'bar', stacked = True, figsize=(15,8),color=['#450920','#370617','#6a040f','#9d0208','#f9844a','#dc2f02','#e85d04','#f48c06','#90be6d','#4d908e'])\nplt.title('Number of Crimes by Type')\nplt.show()","c8d55c4d":"crime_days = crime.groupby('Day').agg('count')\nday_counts = crime_days.Offense_group\nday_counts","828b092d":"sns.lmplot('Lat', \n           'Long',\n           data=crime[:],\n           fit_reg=False, \n           hue = 'District',\n           palette ='Dark2',\n           height=12,\n           ci=2,\n           scatter_kws={\"marker\": \"D\", \n                        \"s\": 10})\nax = plt.gca()\nax.set_title(\"All Crime Distribution per District\")","5a9f9cfa":"sns.lmplot(x=\"Lat\",\n           y=\"Long\",\n           col=\"Category\",\n           hue = 'District',\n           data=categorized_crimes.dropna(), \n           col_wrap=2, height=6, fit_reg=False, \n           sharey=False,\n           scatter_kws={\"marker\": \"D\",\n                            \"s\": 10})","3645d138":"crime_dist","e44047d3":"from urllib.request import urlopen\nimport json\nwith open('..\/input\/police-district\/Police_Districts.geojson') as f:\n    boston_geojson1 = json.load(f)\n\nboston_geojson1['features'][0]","b548cac6":"dist = pd.DataFrame(data= crime_dist.District.value_counts().values, index= crime_dist.District.value_counts().index, columns=['Count'])\ndist = dist.reset_index()\ndist.rename({'index': 'District'}, axis='columns', inplace=True)\ndist","f5e60073":"import folium\nfrom folium import Choropleth, Circle, Marker, plugins\nfrom folium.plugins import HeatMap, MarkerCluster, FastMarkerCluster, HeatMapWithTime\n\ncrime_map = folium.Map(location=[42.361145,-71.057083], tiles='cartodbpositron', zoom_start=11.2)\n\ncrime_map.choropleth(\n    geo_data= boston_geojson1,\n    data= dist,\n    columns= ['District', 'Count'],\n    key_on='feature.properties.DISTRICT',\n    fill_color='GnBu', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Choropleth of Crimes per Police District'\n)\ncrime_map","3ee5395c":"crimes = crime.copy()\ncrimes.dropna( axis = 0, subset = [ 'Lat', 'Long' ], inplace = True )\n\nlats = list(crimes.Lat)\nlongs = list(crimes.Long)\nlocations = [lats,longs]\n\nm = folium.Map(location=[42.361145,-71.057083], tiles='cartodbpositron', zoom_start=11.2)\n\nFastMarkerCluster(data=list(zip(lats, longs))).add_to(m)\n\nm.choropleth(\n    geo_data= boston_geojson1,\n    name='choropleth',\n    data= dist,\n    columns= ['District', 'Count'],\n    key_on='feature.properties.DISTRICT',\n    fill_color='YlOrRd', \n    fill_opacity=0.4, \n    line_opacity=0.2,\n    legend_name='Distribution of Crimes over the City',\n    highlight=False\n    )\nm","3cc48221":"categorized_crime = categorized_crimes.copy()\ndistricts_name = {\n'Brighton':'D14',\n'Dorchester':'C11',\n'South End':'D4',\n'Mattapan':'B3',\n'Roxbury':'B2',\n'South Boston':'C6',\n'Downtown':'A1',\n'West Roxbury':'E5',\n'East Boston':'A7',\n'Jamaica Plain':'E13',\n'Hyde Park':'E18',\n'Charlestown':'A15'\n}\ncategorized_crime['District'] = categorized_crime['District'].map(districts_name)\ncategorized_crime","89ec1a9d":"crimes_overcity = categorized_crime.pivot_table(index=pd.Grouper(key ='District'), columns='Category', aggfunc=np.size, values= 'Offense_group')\ncrimes_overcity = crimes_overcity.reindex(['A15', 'A7', 'A1', 'C6','D4', 'D14', 'E13', 'E5','B3', 'C11', 'E18', 'B2'])\ncrimes_overcity = crimes_overcity.reset_index(level='District')\ncrimes_overcity = pd.melt(crimes_overcity, id_vars=['District'])\ncrimes_overcity","0933734e":"import plotly.express as px\n\nfig = px.choropleth_mapbox(crimes_overcity, geojson=boston_geojson1,  featureidkey ='properties.DISTRICT', locations='District', color='value',\n                           color_continuous_scale=[[0.0, \"rgb(165,0,38)\"],\n                [0.1111111111111111, \"rgb(215,48,39)\"],\n                [0.2222222222222222, \"rgb(244,109,67)\"],\n                [0.3333333333333333, \"rgb(253,174,97)\"],\n                [0.4444444444444444, \"rgb(254,224,144)\"],\n                [0.5555555555555556, \"rgb(224,243,248)\"],\n                [0.6666666666666666, \"rgb(171,217,233)\"],\n                [0.7777777777777778, \"rgb(116,173,209)\"],\n                [0.8888888888888888, \"rgb(69,117,180)\"],\n                [1.0, \"rgb(49,54,149)\"]],\n                           animation_frame=crimes_overcity[\"Category\"],\n                           range_color=(900, 10000),\n                           mapbox_style=\"carto-positron\",\n                           zoom=10, center={\"lat\": 42.361145, \"lon\": -71.057083},\n                           opacity=0.5,\n                           labels={'value':'Number of Crimes'}\n                          )\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","629f65e3":"# What can you say about the distribution of different offenses over the city?","c259eb99":"Let's look at the times when the crime was committed the most. I used the categorized data.","7f2e7597":"As can be seen, driving in Boston can be dangerous.","f7be4814":"New version of the dataframe:","e2bb93b8":"As can be seen, there is no major change. The days when the crime is committed the most are **Monday** and **Friday**, which are the start and end days of the working days.","241825c2":"We can narrow down based on each crime category.\n\n","be8f6245":"1. Over all Boston, the incidents like Larceny Robbery and Burglary show decrease in numbers over time. This shows that theft-like crimes are decreasing in Boston.\n\n2. Through the points on the scatter plot, we can achieve more temporal results. For example, Larceny reveals a seasonal pattern with more crime in summer and less in winter. \n\n3. Assault, Motor Vehicle Accident, Harrassment and Verbal Disputes show an increase in number of incidents over time for the entire city of Boston.\n\n4. Furthermore, Violation, Fraud and Vandalism seem to have decreased in number over time.\n","7e5c5fde":"It seems like, crimes are mostly committed in summer.","8541cdc3":"Only the number of crimes received by years could be misleading for us, as it is seen that **2015 starts from the 6th month and 2018 ends in the 9th month.**","18af62a5":"By selecting the types of crime it is possible to detect the number of crimes as well as the trendline for each type of crime in the plot:","111bf2d0":"\nAs you zoom in on the map above, it gives the number of crimes committed in every street of Boston.\n\nWith the map above, the streets where more crimes are committed can be identified and more resources can be sent to those streets. Those streets can be tried to be made safer. Or we can identify the less dangerous streets and use them as routes.","81492588":"From the visualizations above, we can see an image from the web of the districts and a scatter plot of all crime data geo-locations in the dataset which produced a copy image of the Boston map.\n\nNext I visualized each geographical distribution scatter plot for each of the crimes to understand how the all categorized crimes are distributed across the city. In the countplot I plot above, we can see the distribution of the categories of crime over the city.","f023fb47":"# How has crime changed over the years?","55de910e":"I will use it when I plot a map according to the police districts.","5cec18ce":"Districts should be as a district code.","f503561a":"**If we want to look at the changes in crime over the years by categories.**","2f425c0a":"While reviewing the data, I noticed that there are many offense groups that can be put in the same category. In order to make the crime categories clearer for visualization purposes, I have recategorized them into **11 crime type groups**. \n\n* Assembly or Gathering Violations, Restraining Order Violations, Violations, \nDrug Violation, Firearm Violations, Liquor Violation, License Violation as  **Violation**\n* Simple Assault, Aggrevated Assault as **Assault**\n* Residential Burglary, Other Burglary, Commercial Burglary, Burglary \u2013 No Property Taken  as **Burglary**\n* Harassment, Criminal Harassment  as **Harassment**\n* Larceny, Larceny From Motor Vehicle, Auto Theft as **Larceny**\n* Homocide, Manslaughter as **Killing**\n* Fraud, Counterfeiting, Confidence Games as **Fraud**\n* Motor Vehicle Accident Response as **Motor vehicle accident**\n* Robbery as **Robbery**\n* Verbal Disputes as **Verbal Disputes**\n* Vandalism as **Vandalism**","0f8a79ad":"* According to the data we have, the district where the crime rate is the lowest is Charlestown. According to this data, we can say that Charlestown is the safest district in Boston to live.\n* There has been a marked decrease in the number of crime over the years in Dorchester and Roxbury. However, the number of crimes is still high compared to many districts. According to the data, Roxbury is the most dangerous district to live in.\n* The district where crime is most common are Dorchester, South-End and Roxbury.\n* The crime rates of districts such as Brighton, Downtown, Hyde Park, Jamaica Plain, Mattapan, Roxbury, South Boston, South End and  West Roxbury  did not change much over the years.\n","de380881":"* According to the table we have, larcency incidents are mostly seen in the South end district.\n* The most common incident in Mattapan district is motor vehicle accidents.\n* The district where crime is most common are Dorchester, South-End and Roxbury.\n* The crime of killing all across boston is really minimal.","00966c77":"I am creating a dataframe according to the json format.","69ab7d3b":"# Is it possible to predict where or when a crime will be committed? ","1cf612aa":"#### Distribution of Crime over the Day","721b6b8a":"**Geo Locations of Crimes:**","7be9a486":" **Map of Boston Police Districts and Scatter Plot of all crime geo-locations**\n\n> I want to know how offenses are distributed across the whole city. I created a scatter plot mapping all offenses locations in the dataset.\n\n\n","caa92247":"# CONCLUSION","6af2020f":"First, let's clean up and simplify this data set.","4f61ff3d":"* Looking at the trend above, we see that crimes in Boston **increased slightly in 2016 and 2017**. However, since the data in 2015 and 2018 are missing, we can't say anything definite. \n* In general, there is an **increase towards August and then it falls**. Perhaps there may be a correlation with the average temperature in Boston. For this we need to look at the weather data.","809cc835":"After analysing on the Crimes in Boston dataset, we can see the trends and relations between the types of crimes, location and the occurance of the crime. Some of the takeaways from the analysis are mentioned below:\n\n* It is seen that the most crime occurred in the summer months of July and August.\n\n* Motor-Vehicle accident  response is the most reported incident in the Boston data set.\n\n\n* The districts where crime is most common are Roxbury, Dorchester, South-End and Downtown.\n\n* The city where crime is the most intense seems to be Roxbury","bfc31342":"All crimes were not included in the categorization.I chose to focus on the most common crime that disrupts Boston's reputation.\n\nOn the other hand, although the number of murder and manslaughter crimes is lower, I decided to group them because they are very serious crimes.\n\nAlso, since the number of Burglary, Robbery and Larceny crimes is huge, I did not combine these crimes.","f9ec6f3b":"**What if we want to see the distribution of crime categories by months?**","975ee52d":"* It looks like Larceny and Motor vehicle accident crimes are common all over the city.\n* But Harrassment Robbery, Verbal Disputes crimes have a specific geographic pattern starting to emerge.\n* We can see where the crime clusters appear. While this is a good observation, it is too early to arrive confidence-inspiring conclusions.\n\n","4896c670":"### **CATEGORIZATION**","47436681":"**Distribution of Crime over the Months (2015-2018)**","4103cbea":"I'll also use the categorized_crimes dataframe where needed.","479cb4e3":"As we can see, the crime is mostly committed during the day and falls in the early morning. And it reaches the highest levels during **rush hours**. During these hours, when people are tired and more irritable, crime rates may be increasing. However, in order to say something exactly, the working status of those who committed crime, etc. we need to know about it.\n\nAs can be seen, the crime rate during the day is highest between **5 and 7 o'clock** in the evening. We also know that the most committed crime is motor vehicle accident. Considering that the traffic is very busy during these hours, it can be said that this is the reason for the high crime rate in this hour.","cecb5e9b":"**Distribution of Crime over the Months (for each Years)**","50d3e759":"Looking at the time periods, each crime category seems to have similar proportions within each hour. Violation and Larceny and Motor vehicle accident form a significant portion of crimes committed. ","a95d3bc3":"### **First impressions about the data:** \n\n*   There are 17 columns and 319073 rows. We can see the data type used in every column.\n\n*   Some of the columns like 'INCIDENT_NUMBER' and 'OFFENSE_CODE' in the dataset are not important as well as others so it would not make sense to keep all of them in our final dataframe configuration.\n\n*   Another thing is that there are too many missing values in the SHOOTING column.\n\n*   Or there are columns with degrees of latitude and longitude -1.\n\n*   We can also change the column names to make it easier.\n","843a3480":"Let's also look at the distribution of each crime in the districts.","ae535b10":"#### Distribution of Crime over the Week","55a5da11":"The number of crime increases in the summer season.\n\nAs can be seen, Violation and Larceny and Motor vehicle accident form a significant portion of crimes committed in all months.\n\nWhen we look at the bar plot, we can hardly see the killing. We can say that the number of incidents that resulted in killing in the city of Boston is really few.","24431f38":"When we look at the monthly crime distribution by years, we realize again that we do not have the first 5 months of 2015 and the last 3 months of 2018. This shortcoming will make us wrong in understanding how the crime is distributed by months.\n\nHowever, as we can see from the available data, the number of crime increases in the summer season.\n\nWhen we look at 2016 and 2017 when we know that the data are complete, we do not see a big change in the number of crime.","b39da6bb":"Let's look at the most common crimes when we don't categorize.","ae6d6484":"### **Loading Data and Explanation of Features**","c1b462c8":"In this kernel the crime situations in the city of Boston MA were examined. The aim of this case is to go around the following questions:\n\n1. How has crime changed over the years?\n2. Is it possible to predict where or when a crime will be committed? \n3. What can you say about the distribution of different offenses over the city?","5e7b0b5a":"I used folium to create some maps illustrating some of my findings and make notes below. The maps are interactive. You can zoom in and out and move them around.\n\nI'll show crime distribution per district.","d5d66002":"* This map shows how the crimes vary across the different districts.\n* We can see that crime is concentrated around Roxbury : B2, Dorchester : C4, South-End : D4 and Downtown : A1.\n* The city where crime is the most intense seems to be Roxbury.\n\n* Furthermore, districts with higher crime rates are geographicaly connected.","6a5b18b5":"# INTRODUCTION","db97de46":"**How has different offenses distributed over the city?**","42572938":"People usually know the district name rather than district code. So I will recode the district code to district name."}}