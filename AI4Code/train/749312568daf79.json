{"cell_type":{"1ca23a50":"code","34c48a68":"code","8475beb9":"code","25840fb5":"code","ffeaba40":"code","9c518c03":"code","7fde7280":"code","220483e5":"code","e8827c1b":"code","acc68d79":"code","3ce8832c":"code","facb4b12":"code","079f5514":"code","338ff565":"code","ea25710a":"code","65986a4c":"code","3721a980":"code","647e0919":"code","e09b7c43":"code","2a11eebe":"code","215ddd12":"code","98ad9d8d":"code","2f822ff8":"code","24f88341":"code","f94942b3":"code","906ca9e7":"code","13ee230d":"code","08e83506":"code","76d14820":"code","b7a35c8f":"code","0d95ecc2":"code","35b6b653":"code","61db9dd7":"code","46074825":"code","bff6ca79":"code","f6fec518":"code","c80bd396":"code","ea732a3f":"code","bff6a9bd":"code","f995e412":"code","af6aadb0":"code","f83a1c99":"code","10ebda70":"code","c0186632":"code","fc429e93":"code","1bb43921":"code","cb40edec":"code","c503a3cc":"code","5bdaf288":"code","aa8521c3":"code","ceee556b":"code","13bab611":"code","f31aa0f4":"code","5a205d76":"code","d00a7d3f":"code","c88f56f8":"code","03c01d20":"code","70f7bf59":"code","eb184ad5":"code","61780bdc":"code","2784fd1f":"code","e1f8e4e5":"code","2f50821d":"code","3016d8b9":"code","6060282b":"code","804d9b62":"code","4b00363a":"code","66a134f1":"code","83f49940":"code","064a5570":"code","82d472d1":"code","8d6bdf81":"code","d991c5e5":"code","cd83ca81":"code","9a25ab18":"code","f80697b7":"code","c41edff0":"code","c13b0beb":"code","f3b9d474":"code","69d39270":"code","ed56e4b1":"code","de28e492":"code","3b54f7b6":"code","4760e8f6":"code","e9e343a6":"code","45112915":"code","5c8fd664":"code","256575a3":"code","cf2f2dda":"code","44874bcc":"code","db970a79":"code","43f79ff5":"code","0fcf17c7":"code","f580bab8":"code","c54cb684":"code","8fd00d5b":"code","f971cde6":"code","2a4fef08":"code","a1fb53bd":"code","4255c5e1":"code","f4104b28":"code","0047d198":"code","979f2f33":"code","3cc2e1a8":"code","b92228b9":"code","2af35c90":"code","a2a8df0f":"code","0d30c251":"code","16b200e3":"code","f6571081":"code","b7871595":"code","da7d645b":"code","b6554158":"code","407725dd":"code","b37d8723":"code","87c606fe":"code","7013e573":"code","81defa09":"code","d88e6854":"code","9b4cdf6e":"code","cf246f73":"code","a2eb90cd":"code","ab0cc401":"code","c2fb3dec":"code","22b7197e":"code","a2b68fd4":"code","98b4971b":"code","829311ab":"code","6074f145":"code","ea9b04b9":"code","d8ea15b3":"code","1e800585":"code","a8ab6463":"code","5b18b011":"code","208518d0":"code","d4c0373f":"code","f8527082":"code","76a5ff36":"code","96af4c76":"code","9ee032f5":"code","6be78b5c":"code","9465514e":"code","eb87807a":"code","829638c8":"code","ce9e52ae":"code","3e644ba3":"code","666d5400":"code","9ea2725d":"code","71812676":"code","ece1c016":"code","40c0b287":"code","61cd9035":"code","d6aecba3":"code","11c96992":"code","61900829":"code","489cdfb7":"code","d8f4dae2":"code","37f6c28d":"code","005226c0":"code","f965cf6e":"code","8f3bff02":"code","1d43c5d5":"code","90f3873f":"code","6dbe3743":"code","73dc6709":"code","7f3a9fa1":"code","48ab329c":"code","52e75868":"code","b0569506":"code","33198d6b":"code","93dd4fc2":"code","faae08bf":"code","69ab9f16":"code","6d920e5a":"code","3f519bb4":"code","aab068a9":"code","f8a59489":"code","dec79915":"code","68db71bc":"code","2a8b774c":"code","b37c365e":"code","be5f3e62":"code","072b94de":"code","4f97008d":"code","2720b717":"code","7f7df809":"code","042fec42":"code","4a0a5adb":"code","87c72b27":"code","d2ac2bf1":"code","3bd79789":"code","42695003":"code","cdf8fe69":"code","a1e2cb7e":"code","f709e6ff":"code","f12873b8":"code","35015823":"code","c5e7525c":"code","c9eaff12":"code","8f7723e4":"code","1dc03d66":"code","2494b401":"code","afc48fb8":"code","a627d8ca":"code","9b802f88":"code","de11d31f":"code","8032eeec":"code","312c9bda":"code","049e6916":"code","db74cd49":"code","debcfae5":"code","e7de78fe":"code","0d60b354":"code","1c2e3c28":"code","0a79579c":"code","ca205473":"code","3804b944":"code","4f157156":"code","c7a3a3dc":"code","6f6a43da":"code","abd66269":"markdown","39125ddd":"markdown","ed4e9280":"markdown","d0b740a1":"markdown","b0cd28d6":"markdown","d8ef90c4":"markdown","a15630aa":"markdown","da5a3f8b":"markdown","dec0056a":"markdown","6e0d4ef2":"markdown","d1a5ed41":"markdown","ab9426f1":"markdown","1a09ebfd":"markdown","26706e37":"markdown","1bec12d3":"markdown","2fc09468":"markdown","8a9c90ab":"markdown","e848dc37":"markdown","eaedbc89":"markdown","1dac6fc3":"markdown","8429bc3a":"markdown","b978b5e1":"markdown","9eac68a4":"markdown","19f3bd98":"markdown","392e45f6":"markdown","9948a936":"markdown","b30adc48":"markdown","6af893eb":"markdown"},"source":{"1ca23a50":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","34c48a68":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nfrom collections import Counter","8475beb9":"train = pd.read_csv('\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/sample_submission.csv')\nmonthly_expenditures = pd.read_csv('\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/monthly_expenditures.csv')","25840fb5":"train.head()","ffeaba40":"train.info()","9c518c03":"train['yas'].describe()","7fde7280":"train['kidem_suresi'].describe()","220483e5":"test.head()","e8827c1b":"test.info()","acc68d79":"test['yas'].describe()","3ce8832c":"test['kidem_suresi'].describe()","facb4b12":"train.drop('tarih', axis=1, inplace=True)\ntest.drop('tarih', axis=1, inplace=True)","079f5514":"train['yas'] = train['yas'].astype('int64')\ntest['yas'] = test['yas'].astype('int64')","338ff565":"train['kidem_suresi'] = train['kidem_suresi'].astype('int64')\ntest['kidem_suresi'] = test['kidem_suresi'].astype('int64')","ea25710a":"train['kidem_suresi'].replace(-1, 0, inplace=True)\ntest['kidem_suresi'].replace(-1, 0, inplace=True)","65986a4c":"train.info()","3721a980":"test.info()","647e0919":"print('Veri setindeki bekar ki\u015fi say\u0131s\u0131: ' + str(train[train['target'] == 0].shape[0]))\nprint('Veri setindeki evli ki\u015fi say\u0131s\u0131: ' + str(train[train['target'] == 1].shape[0]))","e09b7c43":"plt.hist(train[train['target'] == 0]['yas'], bins=32)\nplt.xticks(range(18, 51, 2))\nplt.title('Bekarlar\u0131n Ya\u015f Da\u011f\u0131l\u0131m\u0131')\nplt.xlabel('Ya\u015f')\nplt.ylabel('Ki\u015fi Say\u0131s\u0131')\nplt.show()","2a11eebe":"plt.hist(train[train['target'] == 1]['yas'], bins=32)\nplt.xticks(range(18, 51, 2))\nplt.title('Evlilerin Ya\u015f Da\u011f\u0131l\u0131m\u0131')\nplt.xlabel('Ya\u015f')\nplt.ylabel('Ki\u015fi Say\u0131s\u0131')\nplt.show()","215ddd12":"train['egitim'].unique()","98ad9d8d":"train['egitim'].isna().sum()","2f822ff8":"train['egitim'].value_counts()","24f88341":"train.loc[train[train['egitim'] == '2eb5ddd72c'].index, 'egitim'] = np.nan","f94942b3":"sns.countplot(x=train['egitim'])\nplt.show()","906ca9e7":"plt.figure(figsize=[6.4*3\/2, 4.8*3\/2])\nsns.boxplot(x='egitim', y='yas', data=train)\nplt.show()","13ee230d":"#train[train['egitim'].isna()]['yas'].sort_values().values","08e83506":"print(\"'Egitim' s\u00fctunundaki \" + str(train['egitim'].isna().sum()) + ' null de\u011ferden ' + \n      str(train[train['yas'] >= 30]['egitim'].isna().sum()) + ' tanesi 30 ya\u015f \u00fcst\u00fc, ' +\n     str(train[train['yas'] < 30]['egitim'].isna().sum()) + ' tanesi 30 ya\u015f alt\u0131.')","76d14820":"train.loc[train[(train['yas'] >= 30) & train['egitim'].isna()].index, 'egitim'] = '01a4f2c96c'\ntrain.loc[train[(train['yas'] < 30) & train['egitim'].isna()].index, 'egitim'] = '7bb291e291'","b7a35c8f":"train['egitim'].isna().sum()","0d95ecc2":"train['is_durumu'].unique()","35b6b653":"train['is_durumu'].isna().sum()","61db9dd7":"train['is_durumu'].value_counts()","46074825":"train.loc[train[train['is_durumu'] == '3773727d6e'].index, 'is_durumu'] = np.nan","bff6ca79":"sns.countplot(x=train['is_durumu'])\nplt.xticks(rotation=90)\nplt.show()","f6fec518":"plt.figure(figsize=[6.4*3\/2, 4.8*3\/2])\nsns.boxplot(x='is_durumu', y='yas', data=train)\nplt.xticks(rotation=90)\nplt.show()","c80bd396":"#train[train['is_durumu'].isna()]['yas'].sort_values().values","ea732a3f":"train.loc[train[(train['yas'] >= 30) & train['is_durumu'].isna()].index, 'is_durumu'] = '991c4998fb'\ntrain.loc[train[(train['yas'] >= 25) & (train['yas'] < 30) & train['is_durumu'].isna()].index, 'is_durumu'] = '915be3a7a4'\ntrain.loc[train[(train['yas'] < 25) & train['is_durumu'].isna()].index, 'is_durumu'] = 'd36d84f51a'","bff6a9bd":"train['is_durumu'].isna().sum()","f995e412":"train.info()","af6aadb0":"train['meslek_grubu'].unique()","f83a1c99":"train['meslek_grubu'].value_counts()","10ebda70":"plt.figure(figsize=[6.4*3\/2, 4.8*3\/2])\nsns.countplot(x='meslek_grubu', data=train)\nplt.xticks(rotation=90)\nplt.show()","c0186632":"#train.groupby(['egitim', 'is_durumu'])['meslek_grubu'].value_counts()","fc429e93":"def meslek_train(index):\n    eg = train.loc[index, 'egitim']\n    is_ = train.loc[index, 'is_durumu']\n    try:\n        return train[(train['egitim'] == eg) & (train['is_durumu'] == is_)]['meslek_grubu'].value_counts().index[0]\n    except:\n        pass","1bb43921":"for index in train[train['meslek_grubu'].isna()].index:\n    train.loc[index, 'meslek_grubu'] = meslek_train(index)","cb40edec":"train['meslek_grubu'].isna().sum()","c503a3cc":"train['meslek_grubu'].fillna(train['meslek_grubu'].value_counts().index[0], inplace=True)","5bdaf288":"train['meslek_grubu'].value_counts()","aa8521c3":"sns.countplot(x='meslek_grubu', data=train)\nplt.xticks(rotation=90)\nplt.show()","ceee556b":"plt.figure(figsize=[6.4*3\/2, 4.8*3\/2])\nsns.boxplot(x='meslek_grubu', y='yas', data=train)\nplt.xticks(rotation=90)\nplt.show()","13bab611":"train['meslek_grubu'].isna().sum()","f31aa0f4":"train.info()","5a205d76":"test['egitim'].unique()","d00a7d3f":"test['egitim'].isna().sum()","c88f56f8":"test['egitim'].value_counts()","03c01d20":"sns.countplot(x=test['egitim'])\nplt.show()","70f7bf59":"plt.figure(figsize=[6.4*3\/2, 4.8*3\/2])\nsns.boxplot(x='egitim', y='yas', data=test)\nplt.show()","eb184ad5":"test.loc[test[(test['yas'] >= 35) & test['egitim'].isna()].index, 'egitim'] = '01a4f2c96c'\ntest.loc[test[(test['yas'] < 35) & (test['yas'] >= 30) & test['egitim'].isna()].index, 'egitim'] = '7bb291e291'\ntest.loc[test[(test['yas'] < 30) & test['egitim'].isna()].index, 'egitim'] = '7e6640bfe0'","61780bdc":"test['egitim'].isna().sum()","2784fd1f":"test['is_durumu'].unique()","e1f8e4e5":"test['is_durumu'].isna().sum()","2f50821d":"test['is_durumu'].value_counts()","3016d8b9":"sns.countplot(x=test['is_durumu'])\nplt.xticks(rotation=90)\nplt.show()","6060282b":"plt.figure(figsize=[6.4*3\/2, 4.8*3\/2])\nsns.boxplot(x='is_durumu', y='yas', data=test)\nplt.xticks(rotation=90)\nplt.show()","804d9b62":"test.loc[test[test['is_durumu'].isna()].index, 'is_durumu'] = 'd36d84f51a'","4b00363a":"test['is_durumu'].isna().sum()","66a134f1":"test.info()","83f49940":"test['meslek_grubu'].unique()","064a5570":"test['meslek_grubu'].value_counts()","82d472d1":"sns.countplot(x='meslek_grubu', data=test)\nplt.xticks(rotation=90)\nplt.show()","8d6bdf81":"def meslek_test(index):\n    eg = test.loc[index, 'egitim']\n    is_ = test.loc[index, 'is_durumu']\n    try:\n        return test[(test['egitim'] == eg) & (test['is_durumu'] == is_)]['meslek_grubu'].value_counts().index[0]\n    except:\n        pass","d991c5e5":"for index in test[test['meslek_grubu'].isna()].index:\n    test.loc[index, 'meslek_grubu'] = meslek_test(index)","cd83ca81":"test['meslek_grubu'].fillna(test['meslek_grubu'].value_counts().index[0], inplace=True)","9a25ab18":"train['meslek_grubu'].value_counts()","f80697b7":"sns.countplot(x='meslek_grubu', data=test)\nplt.xticks(rotation=90)\nplt.show()","c41edff0":"plt.figure(figsize=[6.4*3\/2, 4.8*3\/2])\nsns.boxplot(x='meslek_grubu', y='yas', data=test)\nplt.xticks(rotation=90)\nplt.show()","c13b0beb":"test['meslek_grubu'].isna().sum()","f3b9d474":"test.info()","69d39270":"y_train = train['target']","ed56e4b1":"egitim_train = pd.get_dummies(train['egitim'])\nis_durumu_train = pd.get_dummies(train['is_durumu'])\nmeslek_grubu_train = pd.get_dummies(train['meslek_grubu'])","de28e492":"train = pd.concat([train.drop(['egitim', 'is_durumu', 'meslek_grubu', 'target'], axis=1), egitim_train, is_durumu_train, meslek_grubu_train], axis=1)","3b54f7b6":"#y_train.index = train['musteri']","4760e8f6":"#train = train.set_index('musteri')","e9e343a6":"egitim_test = pd.get_dummies(test['egitim'])\nis_durumu_test = pd.get_dummies(test['is_durumu'])\nmeslek_grubu_test = pd.get_dummies(test['meslek_grubu'])","45112915":"test = pd.concat([test.drop(['egitim', 'is_durumu', 'meslek_grubu'], axis=1), egitim_test, is_durumu_test, meslek_grubu_test], axis=1)","5c8fd664":"#test = test.set_index('musteri')","256575a3":"monthly_expenditures.head()","cf2f2dda":"monthly_expenditures.info()","44874bcc":"monthly_expenditures['sektor'].unique()","db970a79":"sektor_dict = {'DIJITAL_URUNLR': 'DU',\n               'EGL_SPOR_HOBI': 'ESH',\n               'GIYIM_AKSESUAR': 'GA',\n               'KUYUMCU': 'K',\n               'RESTORAN_CATER': 'RC',\n               'TURIZM_KONAKLM': 'TK',\n               'TASIMACILIK': 'T',\n               'BENZIN_YAKIT': 'BY',\n               'ELKT_ESYA_BILG': 'EEB',\n               'SAGLIK_HIZMTLR': 'SH',\n               'KLP_DERNK_SOSY': 'KDS',\n               'ICKILI_YERLER': 'IY',\n               'BAHCE_CICEKCLK': 'BC'}","43f79ff5":"monthly_expenditures['sektor'].replace(sektor_dict, inplace=True)\n#monthly_expenditures.drop('tarih', axis=1, inplace=True)","0fcf17c7":"monthly_expenditures['aylik_toplam_tutar'] = monthly_expenditures['aylik_toplam_tutar'].astype('int64')","f580bab8":"train_musteri = train['musteri'].values\ntest_musteri = test['musteri'].values","c54cb684":"train_me = monthly_expenditures[monthly_expenditures['musteri'].isin(train_musteri)]","8fd00d5b":"test_me = monthly_expenditures[monthly_expenditures['musteri'].isin(test_musteri)]","f971cde6":"train_musteri_group = train_me.groupby(['musteri', 'sektor'])[['islem_adedi', 'aylik_toplam_tutar']].sum()","2a4fef08":"df_train_islem_adedi = pd.DataFrame(columns=sektor_dict.values())","a1fb53bd":"def islem_adedi(musteri_id):\n    empty_dict = {'DU':0, 'ESH':0, 'GA':0, 'K':0, 'RC':0, 'TK':0, 'T':0, 'BY':0, 'EEB':0, 'SH':0, 'KDS':0, 'IY':0, 'BC':0}\n    musteri_dict = dict(train_musteri_group['islem_adedi'][musteri_id])\n    empty_dict.update(musteri_dict)\n    return empty_dict","4255c5e1":"df_train_islem_adedi = df_train_islem_adedi.append([islem_adedi(musteri_id) for musteri_id in train_musteri], ignore_index=True)","f4104b28":"df_train_islem_adedi = df_train_islem_adedi.astype('int64')","0047d198":"df_train_aylik_tutar = pd.DataFrame(columns=sektor_dict.values())","979f2f33":"def aylik_tutar(musteri_id):\n    empty_dict = {'DU':0, 'ESH':0, 'GA':0, 'K':0, 'RC':0, 'TK':0, 'T':0, 'BY':0, 'EEB':0, 'SH':0, 'KDS':0, 'IY':0, 'BC':0}\n    musteri_dict = dict(train_musteri_group['aylik_toplam_tutar'][musteri_id])\n    empty_dict.update(musteri_dict)\n    return empty_dict","3cc2e1a8":"df_train_aylik_tutar = df_train_aylik_tutar.append([aylik_tutar(musteri_id) for musteri_id in train_musteri], ignore_index=True)","b92228b9":"df_train_aylik_tutar = df_train_aylik_tutar.astype('int64')","2af35c90":"df_train_aylik_tutar.rename(columns={'DU':'DU_t',\n                                     'ESH': 'ESH_t',\n                                     'GA': 'GA_t',\n                                     'K': 'K_t',\n                                     'RC': 'RC_t',\n                                     'TK': 'TK_t',\n                                     'T': 'T_t',\n                                     'BY': 'BY_t',\n                                     'EEB': 'EEB_t',\n                                     'SH': 'SH_t',\n                                     'KDS': 'KDS_t',\n                                     'IY': 'IY_t',\n                                     'BC': 'BC_t'}, inplace=True)","a2a8df0f":"train = pd.concat([train, df_train_islem_adedi, df_train_aylik_tutar], axis=1)","0d30c251":"train","16b200e3":"test_musteri_group = test_me.groupby(['musteri', 'sektor'])[['islem_adedi', 'aylik_toplam_tutar']].sum()","f6571081":"df_test_islem_adedi = pd.DataFrame(columns=sektor_dict.values())","b7871595":"def islem_adedi_2(musteri_id):\n    empty_dict = {'DU':0, 'ESH':0, 'GA':0, 'K':0, 'RC':0, 'TK':0, 'T':0, 'BY':0, 'EEB':0, 'SH':0, 'KDS':0, 'IY':0, 'BC':0}\n    musteri_dict = dict(test_musteri_group['islem_adedi'][musteri_id])\n    empty_dict.update(musteri_dict)\n    return empty_dict","da7d645b":"df_test_islem_adedi = df_test_islem_adedi.append([islem_adedi_2(musteri_id) for musteri_id in test_musteri], ignore_index=True)","b6554158":"df_test_islem_adedi = df_test_islem_adedi.astype('int64')","407725dd":"df_test_aylik_tutar = pd.DataFrame(columns=sektor_dict.values())","b37d8723":"def aylik_tutar_2(musteri_id):\n    empty_dict = {'DU':0, 'ESH':0, 'GA':0, 'K':0, 'RC':0, 'TK':0, 'T':0, 'BY':0, 'EEB':0, 'SH':0, 'KDS':0, 'IY':0, 'BC':0}\n    musteri_dict = dict(test_musteri_group['aylik_toplam_tutar'][musteri_id])\n    empty_dict.update(musteri_dict)\n    return empty_dict","87c606fe":"df_test_aylik_tutar = df_test_aylik_tutar.append([aylik_tutar_2(musteri_id) for musteri_id in test_musteri], ignore_index=True)","7013e573":"df_test_aylik_tutar = df_test_aylik_tutar.astype('int64')","81defa09":"df_test_aylik_tutar.rename(columns={'DU':'DU_t',\n                                    'ESH': 'ESH_t',\n                                    'GA': 'GA_t',\n                                    'K': 'K_t',\n                                    'RC': 'RC_t',\n                                    'TK': 'TK_t',\n                                    'T': 'T_t',\n                                    'BY': 'BY_t',\n                                    'EEB': 'EEB_t',\n                                    'SH': 'SH_t',\n                                    'KDS': 'KDS_t',\n                                    'IY': 'IY_t',\n                                    'BC': 'BC_t'}, inplace=True)","d88e6854":"test = pd.concat([test, df_test_islem_adedi, df_test_aylik_tutar], axis=1)","9b4cdf6e":"train.head()","cf246f73":"test.head()","a2eb90cd":"train.info()","ab0cc401":"test.info()","c2fb3dec":"train.describe()","22b7197e":"test.describe()","a2b68fd4":"#train.to_csv(\"df_train.csv\", index=False)","98b4971b":"#test.to_csv(\"df_test.csv\", index=False)","829311ab":"#y_train.to_csv(\"df_y_train.csv\", index=False)","6074f145":"df_train = train\ndf_test = test","ea9b04b9":"from imblearn.over_sampling import RandomOverSampler\nfrom imblearn.under_sampling import RandomUnderSampler","d8ea15b3":"ros = RandomOverSampler(random_state=42)\ndf_train_res, y_train = ros.fit_resample(df_train, y_train)","1e800585":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler","a8ab6463":"# sc = StandardScaler()\nscaler = MinMaxScaler()","5b18b011":"#train = sc.fit_transform(train_res.drop('musteri', axis=1))\n#test = sc.fit_transform(test.drop('musteri', axis=1))\n\ndf_train = scaler.fit_transform(df_train_res.drop('musteri', axis=1))\ndf_test = scaler.fit_transform(test.drop('musteri', axis=1))","208518d0":"#from sklearn.feature_selection import SelectFromModel\n#from sklearn.linear_model import LogisticRegression","d4c0373f":"#selector = SelectFromModel(estimator=LogisticRegression(max_iter=1000))","f8527082":"#selector.fit(train, y_train.values.ravel())","76a5ff36":"#train = selector.transform(train)\n#test = selector.transform(test)","96af4c76":"#train.shape","9ee032f5":"#test.shape","6be78b5c":"from sklearn.preprocessing import Normalizer","9465514e":"transformer = Normalizer()","eb87807a":"train = transformer.fit_transform(df_train)","829638c8":"from sklearn.ensemble import AdaBoostClassifier","ce9e52ae":"abc = AdaBoostClassifier(n_estimators=10)","3e644ba3":"abc.fit(df_train, y_train.values.ravel())","666d5400":"abc_pred = abc.predict(df_test)","9ea2725d":"Counter(abc_pred)","71812676":"target = pd.Series(abc_pred, name='target')","ece1c016":"submission_abc_minmax_n10 = pd.concat([test['musteri'], target], axis=1)","40c0b287":"submission_abc_minmax_n10.to_csv('submission_abc_minmax_n10.csv', index=False)","61cd9035":"#from xgboost import XGBClassifier","d6aecba3":"#xgb = XGBClassifier()","11c96992":"#xgb.fit(df_train, y_train.values.ravel())","61900829":"#xgb_pred = xgb.predict(df_test)","489cdfb7":"#Counter(xgb_pred)","d8f4dae2":"#target = pd.Series(pred, name='target')","37f6c28d":"#submission_xgb = pd.concat([test['musteri'], target], axis=1)","005226c0":"#submission_xgb.to_csv('submission_xgb.csv', index=False)","f965cf6e":"#from sklearn.svm import SVC\n#from sklearn.model_selection import GridSearchCV","8f3bff02":"#param_grid = {'C': [0.1,1, 10, 100, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']} #","1d43c5d5":"#grid = GridSearchCV(SVC(),param_grid,refit=True,verbose=3)","90f3873f":"#grid.fit(df_train, y_train.values.ravel()) ","6dbe3743":"#grid.best_params_","73dc6709":"#grid.best_estimator_","7f3a9fa1":"#grid_predictions = grid.predict(df_test)","48ab329c":"#Counter(grid_predictions)","52e75868":"#svc = SVC(C=100, gamma=1)","b0569506":"#svc.fit(df_train, y_train.values.ravel())","33198d6b":"#svc_grid_pred = svc.predict(df_test)","93dd4fc2":"#Counter(pred)","faae08bf":"#target = pd.Series(pred, name='target')","69ab9f16":"#submission_svc_grid = pd.concat([test['musteri'], target], axis=1)","6d920e5a":"#submission_svc_grid.to_csv(\"submission_svc_grid.csv\", index=False)","3f519bb4":"#from sklearn.neighbors import KNeighborsClassifier","aab068a9":"#knn = KNeighborsClassifier()","f8a59489":"#knn.fit(df_train, y_train)","dec79915":"#knn_pred = knn.predict(df_test)","68db71bc":"#Counter(knn_pred)","2a8b774c":"#target = pd.Series(knn_pred, name='target')","b37c365e":"#submission_knn5 = pd.concat([test['musteri'], target], axis=1)","be5f3e62":"#submission_knn5.to_csv('submission_knn5.csv', index=False)","072b94de":"#from sklearn.linear_model import SGDClassifier","4f97008d":"#sgd = SGDClassifier(random_state=101)","2720b717":"#sgd.fit(df_train, y_train.values.ravel())","7f7df809":"#sgd_pred = sgd.predict(df_test)","042fec42":"#Counter(sgd_pred)","4a0a5adb":"#target = pd.Series(sgd_pred, name='target')","87c72b27":"#submission_sgd = pd.concat([test['musteri'], target], axis=1)","d2ac2bf1":"#submission_sgd.to_csv('submission_sgd.csv', index=False)","3bd79789":"#from lightgbm import LGBMClassifier\n#from sklearn.model_selection import GridSearchCV","42695003":"#lgbm = LGBMClassifier(learning_rate=0.5,\n#                      max_depth=-1,\n#                      min_child_samples=20,\n#                      n_estimators=500,\n#                      num_leaves=32)","cdf8fe69":"#lgbm.fit(df_train, y_train.values.ravel())","a1e2cb7e":"#lgbm_pred = lgbm.predict(df_test)","f709e6ff":"#Counter(lgbm_pred)","f12873b8":"#lgbm_grid={\n#        \"learning_rate\":[0.1, 0.2, 0.5],\n#        \"n_estimators\":[100,200,500],\n#        \"max_depth\":[-1,1,2,3,4],\n#        \"num_leaves\": [31,32,33,34,36,38,40],\n#        \"min_child_samples\": [20, 25, 30, 25, 40, 45]\n#        }","35015823":"#lgbm_cv_model=GridSearchCV(lgbm,lgbm_grid,cv=5,n_jobs=-1,verbose=2)","c5e7525c":"#lgbm_cv_model.fit(df_train, y_train.values.ravel())","c9eaff12":"#lgbm_cv_model.best_params_","8f7723e4":"#lgbm_cv_model.best_estimator_","1dc03d66":"#lgbm_pred = lgbm_cv_model.predict(df_test)","2494b401":"#target = pd.Series(lgbm_pred, name='target')","afc48fb8":"#submission_lgbm = pd.concat([test['musteri'], target], axis=1)","a627d8ca":"#submission_lgbm.to_csv(\"submission_lgbm.csv\", index=False)","9b802f88":"#from sklearn.ensemble import RandomForestClassifier","de11d31f":"#rfc = RandomForestClassifier()","8032eeec":"#rfc.fit(df_train, y_train.values.ravel())","312c9bda":"#rfc_pred = rfc.predict(df_)","049e6916":"#Counter(rfc_pred)","db74cd49":"#target = pd.Series(rfc_pred, name='target')","debcfae5":"#submission_rfc = pd.concat([test['musteri'], target], axis=1)","e7de78fe":"#submission_rfc.to_csv(\"submission_rfc.csv\", index=False)","0d60b354":"#from sklearn.ensemble import GradientBoostingClassifier","1c2e3c28":"#gbc = GradientBoostingClassifier()","0a79579c":"#gbc.fit(df_train, y_train.values.ravel())","ca205473":"#gbc_pred = gbc.predict(df_test)","3804b944":"#Counter(gbc_pred)","4f157156":"#target = pd.Series(gbc_pred, name='target')","c7a3a3dc":"#submission_gbc = pd.concat([test['musteri'], target], axis=1)","6f6a43da":"#submission_gbc.to_csv('submission_gbc.csv', index=False)","abd66269":"## GradientBoostingClassifier","39125ddd":"## Random Forest Classifier","ed4e9280":"### E\u011fitim s\u00fctunu (Train)","d0b740a1":"## AdaBoostClassifier","b0cd28d6":"### Resampling","d8ef90c4":"### Meslek Grubu s\u00fctunu (Test)","a15630aa":"### E\u011fitim s\u00fctunu (Test)","da5a3f8b":"### Standardization (StandardScaler, MinMaxScaler)","dec0056a":"# Models","6e0d4ef2":"## LGBM with GridSearchCV","d1a5ed41":"### Monthly Expenditures Data Set","ab9426f1":"### \u0130\u015f Durumu s\u00fctunu (Train)","1a09ebfd":"### Meslek Grubu s\u00fctunu (Train)","26706e37":"## KNN","1bec12d3":"# T\u00fcrkiye \u0130\u015f Bankas\u0131 Machine Learning Challenge #3","2fc09468":"## Pre-processing","8a9c90ab":"### Feature Selection","e848dc37":"### Normalization","eaedbc89":"### Ya\u015f ve Evli Olma Durumu (Train)","1dac6fc3":"## SVC with GridSearch","8429bc3a":"## train, test, y_train","b978b5e1":"## Data Exploration & Data Cleaning in Train and Test Data Sets","9eac68a4":"### Merging Monthly Expenditures (Train)","19f3bd98":"### \u0130\u015f Durumu s\u00fctunu (Test)","392e45f6":"## XGBoost","9948a936":"## SGD","b30adc48":"- X_train ==> df_train\n- y_train ==> y_train.values.ravel()\n- X_test ==> df_test","6af893eb":"### Merging Monthly Expenditures (Test)"}}