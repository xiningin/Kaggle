{"cell_type":{"e11b0248":"code","c4097db4":"code","d76f5d14":"code","e1fa3421":"code","ab66c46a":"code","5ef411a3":"code","23bb6ae3":"code","ee748257":"code","199229e8":"code","8cfcff8f":"code","7b846f84":"code","e8f4500a":"code","f35c58d3":"code","8e80bbea":"code","19490db9":"code","7bbd0ef6":"code","ae64de7e":"code","c9903115":"code","6c5b3efc":"code","c72dddc5":"code","3250a43d":"code","ef5d5fa2":"code","b367417b":"code","93a143c3":"code","88a34122":"code","9c8aa6ba":"code","6262c6cf":"code","c1d2d73a":"code","9413c723":"code","4f2f23c2":"code","5cb4aae7":"code","b115eb67":"code","774e403d":"code","8da6b1d4":"code","f439e7ba":"code","31df825e":"code","a1e2bf4b":"code","1dc9061e":"code","c4be5786":"code","24b8ed08":"code","834d415a":"code","9df37e60":"code","9db46aa1":"markdown","d9be1065":"markdown","4842135d":"markdown","49ffc2e6":"markdown","4ee98718":"markdown","dde6f1a8":"markdown","5c479fe4":"markdown","a5ccd0df":"markdown","05f00515":"markdown","eccdf6b2":"markdown","cc1f4e54":"markdown","e5d89512":"markdown","c6ffab7b":"markdown","b10799dd":"markdown","75b09e35":"markdown"},"source":{"e11b0248":"#installation of libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\n\n#to display all columns and rows:\npd.set_option('display.max_columns', None); pd.set_option('display.max_rows', None);\n\n#we determined how many numbers to show after comma\npd.set_option('display.float_format', lambda x: '%.0f' % x)\nimport matplotlib.pyplot as plt","c4097db4":"#calling the dataset\ndf = pd.read_csv(\"..\/input\/online-retail-ii-uci\/online_retail_II.csv\")","d76f5d14":"#selection of the first 5 observations\ndf.head() ","e1fa3421":"#ranking of the most ordered products\ndf.groupby(\"Description\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\", ascending = False).head()","ab66c46a":"#how many invoices are there in the data set\ndf[\"Invoice\"].nunique()","5ef411a3":"#which are the most expensive products\ndf.sort_values(\"Price\", ascending = False).head()","23bb6ae3":"#top 5 countries with the highest number of orders\ndf[\"Country\"].value_counts().head()","ee748257":"#total spending was added as a column\ndf['TotalPrice'] = df['Price']*df['Quantity']","199229e8":"#which countries did we get the most income from\ndf.groupby(\"Country\").agg({\"TotalPrice\":\"sum\"}).sort_values(\"TotalPrice\", ascending = False).head()","8cfcff8f":"#oldest shopping date\ndf[\"InvoiceDate\"].min() ","7b846f84":"#newest shopping date\ndf[\"InvoiceDate\"].max() ","e8f4500a":"#to make the assessment easier, today's date is set as January 1, 2012.  \ntoday = pd.datetime(2012,1,1) \ntoday","f35c58d3":"#changing the data type of the order date\ndf['InvoiceDate'] = pd.to_datetime(df['InvoiceDate'])","8e80bbea":"#taking values greater than 0, this will be easier in terms of evaluation\ndf = df[df['Quantity'] > 0]\ndf = df[df['TotalPrice'] > 0]","19490db9":"#removal of observation units with missing data from df\ndf.dropna(inplace = True) ","7bbd0ef6":"#check for missing values in the dataset\ndf.isnull().sum(axis=0)","ae64de7e":"#size information\ndf.shape ","c9903115":"df.describe([0.01,0.05,0.10,0.25,0.50,0.75,0.90,0.95, 0.99]).T\n#explanatory statistics values of the observation units corresponding to the specified percentages\n#processing according to numerical variables","6c5b3efc":"#customer distribution by country\ncountry_cust_data=df[['Country','Customer ID']].drop_duplicates()\ncountry_cust_data.groupby(['Country'])['Customer ID'].aggregate('count').reset_index().sort_values('Customer ID', ascending=False)","c72dddc5":"#keep only United Kingdom data\ndf_uk = df.query(\"Country=='United Kingdom'\").reset_index(drop=True)\ndf_uk.head()","3250a43d":"df.head()","ef5d5fa2":"df.info() \n#dataframe's index dtype and column dtypes, non-null values and memory usage information","b367417b":"#finding Recency and Monetary values.\ndf_x = df.groupby('Customer ID').agg({'TotalPrice': lambda x: x.sum(), #monetary value\n                                        'InvoiceDate': lambda x: (today - x.max()).days}) #recency value\n#x.max()).days; last shopping date of customers","93a143c3":"df_y = df.groupby(['Customer ID','Invoice']).agg({'TotalPrice': lambda x: x.sum()})\ndf_z = df_y.groupby('Customer ID').agg({'TotalPrice': lambda x: len(x)}) \n#finding the frequency value per capita","88a34122":"#creating the RFM table\nrfm_table= pd.merge(df_x,df_z, on='Customer ID')","9c8aa6ba":"#determination of column names\nrfm_table.rename(columns= {'InvoiceDate': 'Recency',\n                          'TotalPrice_y': 'Frequency',\n                          'TotalPrice_x': 'Monetary'}, inplace= True)","6262c6cf":"rfm_table.head()","c1d2d73a":"#descriptive statistics for Recency\nrfm_table.Recency.describe()","9413c723":"#Recency distribution plot\nimport seaborn as sns\nx = rfm_table['Recency']\n\nax = sns.distplot(x)","4f2f23c2":"#descriptive statistics for Frequency\nrfm_table.Frequency.describe()","5cb4aae7":"#Frequency distribution plot, taking observations which have frequency less than 1000\nimport seaborn as sns\nx = rfm_table.query('Frequency < 1000')['Frequency']\n\nax = sns.distplot(x)","b115eb67":"#descriptive statistics for Monetary\nrfm_table.Monetary.describe()","774e403d":"#Monateray distribution plot, taking observations which have monetary value less than 10000\nimport seaborn as sns\nx = rfm_table.query('Monetary < 10000')['Monetary']\n\nax = sns.distplot(x)","8da6b1d4":"#Split into four segments using quantiles\nquantiles = rfm_table.quantile(q=[0.25,0.5,0.75])\nquantiles = quantiles.to_dict()","f439e7ba":"quantiles","31df825e":"#conversion process\nfrom sklearn.preprocessing import MinMaxScaler\nmin_max_scaler = MinMaxScaler((0,1))\nx_scaled = min_max_scaler.fit_transform(rfm_table)\ndata_scaled = pd.DataFrame(x_scaled)","a1e2bf4b":"df[0:10]","1dc9061e":"plt.figure(figsize=(8,6))\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++',n_init=10, max_iter = 300)\n    kmeans.fit(data_scaled)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","c4be5786":"kmeans = KMeans(n_clusters = 4, init='k-means++', n_init =10,max_iter = 300)\nkmeans.fit(data_scaled)\ncluster = kmeans.predict(data_scaled)\n#init = 'k-means ++' this makes it work faster","24b8ed08":"d_frame = pd.DataFrame(rfm_table)\nd_frame['cluster_no'] = cluster\nd_frame['cluster_no'].value_counts() #the number of people per cluster (Custer ID number)","834d415a":"#RFM Table\nrfm_table.head()","9df37e60":"#cluster average values\nd_frame.groupby('cluster_no').mean() ","9db46aa1":"It is one of the unsupervised learning algorithms. The process is to separate the data according to its specific features and to reveal its characteristic features. Purpose is minimizing the sum of distance between points and maximizing the distance between clusters. This process is clustering.\n\nWhere is clustering used?\n\n    - Clustering of products according to the customer groups who bought them\n    - Clustering of documents, web searches according to similar words used\n    - Customer segmentation\n    - Grouping similar genes in the field of bioinformatics \n    \nThe K-means algorithm is a non-hierarchical, center-based algorithm.\n\nK-means Clustering working principle;\n\nThis process continues until the average distance within a cluster minimizes and maximizes the distance with other clusters. The process begins with the random selection of k centers. The average distance from the center of all points in the cluster is then used to update the position of the centroids (centers). These steps are repeated by fixing the values of the centroids (centers).\n\nThis process continues until the average distance within a cluster minimizes and maximizes the distance with other clusters.\n\nOur aim is to minimize the sum of distances within the cluster and to maximize the sum of distances between clusters. In other words, forming clusters that are more discrete from each other.\n\nTwo metrics can be used here.\n\n   - Inertia: shows how far points in a cluster are. Therefore, a small inertia is targeted. Inertia value starts at zero and increases. (min SSE)\n    \n   - Silhoutte Score: shows how far data points in one cluster are from data points in another cluster. The score range is between -1 and 1, and it is expected to approach 1.\n    \nInertia was used in this study.\n\nIn this study, we will segment the rfm metrics that we previously determined with k-means. We cannot apply the cluster operation to our data set in this state. We need numerical variables to do this. These variables are currently not available. We will apply cluster operation over rfm metric values with k-means.","d9be1065":"# Data Preparation","4842135d":"# Data Understanding","49ffc2e6":"# Resources\n\nhttps:\/\/www.veribilimiokulu.com\/rfm-analizi-ile-musteri-segmentasyonu\/\n\nhttps:\/\/www.youtube.com\/watch?v=DowbzgtH0-0\n\nhttps:\/\/www.youtube.com\/watch?v=fdUofaT8gUw\n\nhttps:\/\/github.com\/nitinkaushik01\/Deep_and_Machine_Learning_Projects\/tree\/master\/Customer_Segmentation_using_RFM_and_KMeans_Models","4ee98718":"## Visualization of Recency, Frequency and Monetary Values","dde6f1a8":"![internet-money-secure-payment-transaction-payment-mechanism-fintech-financial-technology-background-colorful-flat-style-illustration_1302-7478.jpg](attachment:internet-money-secure-payment-transaction-payment-mechanism-fintech-financial-technology-background-colorful-flat-style-illustration_1302-7478.jpg)","5c479fe4":"![2017-PGHD.jpg](attachment:2017-PGHD.jpg)","a5ccd0df":"# Customer Segmentation with K-Means Algorithm","05f00515":"# Business Problem \n\n\nAn e-commerce company wants to segment its customers and determine marketing strategies according to these segments.\n\nFor this, we will define the behavior of customers and create groups according to the clusters in these behaviors.\n\nIn other words, we will take those who exhibit common behaviors into the same groups and we will try to develop sales and marketing specific techniques to these groups.\n\n\n### **Data Set Information**\n\nThis Online Retail II data set contains all the transactions occurring for a UK-based and registered, non-store online retail between 01\/12\/2009 and 09\/12\/2011.The company mainly sells unique all-occasion gift-ware. Many customers of the company are wholesalers.\n\n### **Attribute Information**\n\n- **InvoiceNo**: Invoice number. Nominal. A 6-digit integral number uniquely assigned to each transaction. If this code starts with the letter 'c', it indicates a cancellation.\n- **StockCode**: Product (item) code. Nominal. A 5-digit integral number uniquely assigned to each distinct product.\n- **Description**: Product (item) name. Nominal.\n- **Quantity**: The quantities of each product (item) per transaction. Numeric.\n- **InvoiceDate**: Invice date and time. Numeric. The day and time when a transaction was generated.\n- **UnitPrice**: Unit price. Numeric. Product price per unit in sterling (\u00c2\u00a3).\n- **CustomerID**: Customer number. Nominal. A 5-digit integral number uniquely assigned to each customer.\n- **Country**: Country name. Nominal. The name of the country where a customer resides.","eccdf6b2":"# Conclusion","cc1f4e54":"The important thing here is to determine the correct number of clusters. For this, we apply the Elbow Method.\n\nHere, as the number of clusters increases, we use the part we call elbow and see that the value does not decrease too much after a certain point. For this reason, using 3 or 4 may be more valuable for us.","e5d89512":"# K-Means Segmentation","c6ffab7b":"![online-shopping.jpg](attachment:online-shopping.jpg)","b10799dd":"We have singularized Customer IDs based on 3 variables over rfm metrics.\n\nThis data set was reduced to 4 sets on the basis of numerical variables when k-means was applied.","75b09e35":"# Finding RFM Values\n\nRFM consists of Recency, Frequency, Monetary initials of expressions.\n\nIt is a technique that helps determine marketing and sales strategies based on buying habits of customers.\n\n- **Recency**: Time since customer last purchase\n\n- **Frequency**: Total number of purchases\n\n- **Monetary**: Total spending by the customer"}}