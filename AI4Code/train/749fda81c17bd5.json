{"cell_type":{"667ffa9c":"code","55ef6ab6":"code","be595c07":"code","7f98a7a8":"code","1e7c1782":"code","ecb6c243":"code","4d217fb1":"code","0e9c6314":"code","aca6dba7":"code","c819449d":"code","fe49fa2a":"code","c8c10a8a":"code","c1f2955f":"code","727ed27c":"code","5542dc0f":"code","ad86d9e2":"code","7d983e67":"code","0c1606d5":"code","ac42c3ff":"code","3e26224f":"code","4212f8d0":"code","ae862b20":"code","b9f0339f":"markdown","7d111549":"markdown","6ab13aea":"markdown","06b587ea":"markdown","3246e05b":"markdown"},"source":{"667ffa9c":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nfrom tensorflow import keras\nfrom keras.models import Sequential,load_model\nfrom keras.layers import Dense,GlobalAveragePooling2D,Flatten,Conv2D,BatchNormalization,Dropout,MaxPooling2D,Activation\nfrom keras.preprocessing import image\nfrom keras.preprocessing.image import ImageDataGenerator as Imgen\n\nfrom PIL import Image\nfrom sklearn.metrics import confusion_matrix,classification_report\n\nimport os\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","55ef6ab6":"train_df = pd.read_csv(\"..\/input\/plant-pathology-2021-fgvc8\/train.csv\")\ntrain_path = \"..\/input\/plant-pathology-2021-fgvc8\/train_images\"\ntest_path = \"..\/input\/plant-pathology-2021-fgvc8\/test_images\"","be595c07":"train_df.head(3)","7f98a7a8":"train_df.info()","1e7c1782":"labels = train_df[\"labels\"].value_counts().index\ndata = train_df[\"labels\"].value_counts().values","ecb6c243":"data","4d217fb1":"explode = (0, 0.1, 0, 0,0,0,0,0,0,0,0,0)\npie, ax = plt.subplots(figsize=[10,6])\nplt.pie(x=data, autopct=\"%.1f%%\",explode=explode, labels=labels, pctdistance=0.5)\nplt.title(\"Delivery Tips by type\", fontsize=14);\npie.savefig(\"DeliveryPieChart.png\")","0e9c6314":"class_num = len(train_df[\"labels\"].value_counts())","aca6dba7":"datagen = Imgen(preprocessing_function=keras.applications.xception.preprocess_input,\n                 rotation_range=4,\n                  shear_range=0.2,\n                  zoom_range=0.15,\n                  horizontal_flip=True,\n                  validation_split=0.2\n                 )","c819449d":"train_ds = datagen.flow_from_dataframe(\n    train_df,\n    directory = train_path, \n    x_col = 'image',\n    y_col = 'labels',\n    subset=\"training\",\n    color_mode=\"rgb\",\n    target_size = (224,224),\n    class_mode=\"categorical\",\n    batch_size=32,\n    shuffle=True,\n    seed=123\n)\n\n\nval_ds = datagen.flow_from_dataframe(\n    train_df,\n    directory = train_path,\n    x_col = 'image',\n    y_col = 'labels',\n    subset=\"validation\",\n    color_mode=\"rgb\",\n    target_size = (224,224),\n    class_mode=\"categorical\",\n    batch_size=32,\n    shuffle=True,\n    seed=123\n)","fe49fa2a":"x,y = next(train_ds)\nx.shape","c8c10a8a":"from tensorflow.keras.applications.vgg16 import VGG16","c1f2955f":"vgg = VGG16()","727ed27c":"model = Sequential()\nvgg_layers = vgg.layers\n\nfor i in range(len(vgg_layers)-1):\n    model.add(vgg_layers[i])","5542dc0f":"model.summary()","ad86d9e2":"for l in vgg_layers:\n    l.trainable = False","7d983e67":"model.add(Dense(class_num , activation = \"softmax\"))","0c1606d5":"model.summary()","ac42c3ff":"model.compile(loss = \"categorical_crossentropy\" , optimizer = \"adam\" , metrics=[\"accuracy\"])","3e26224f":"batch_size = 32","4212f8d0":"hist = model.fit_generator(train_ds,\n                           steps_per_epoch = 14900\/\/batch_size,\n                           epochs = 15,\n                           validation_data = val_ds,\n                           validation_steps = 3700\/\/batch_size)","ae862b20":"plt.plot(hist.history[\"acc\"],label = \"training acc\")\nplt.plot(hist.history[\"val_acc\"],label = \"validation acc\")","b9f0339f":"<a id=\"1\"> <\/a>\n# Add Libaries\n","7d111549":"<a id=\"2\"> <\/a>\n# Preproccess\n","6ab13aea":"<br>\n<h1 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #C66363 ; color : #E8D6D8; text-align: center; border-radius: 100px 100px;\">CONTENT <\/h1>\n<br>\n\n* [Add Libaries](#1)\n* [Preproccess](#2)\n* [Prepare And Run Model](#3)\n* [Visualize Model Results](#4)","06b587ea":"<a id=\"4\"> <\/a>\n# Visualize Model Results","3246e05b":"<a id=\"3\"> <\/a>\n# Prepare And Run Model"}}