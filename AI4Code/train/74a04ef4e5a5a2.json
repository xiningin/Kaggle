{"cell_type":{"eb1860b5":"code","208da779":"code","8971f784":"code","baff2d41":"code","032355f1":"code","b0310f19":"code","959c4b8f":"code","e8dc323e":"code","21799e80":"code","aa4574e6":"code","209fc4b0":"code","05c177e9":"code","a07c1c37":"code","babca4b3":"markdown","7bd8fe02":"markdown","0307d512":"markdown"},"source":{"eb1860b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","208da779":"#Import dataset\ndataset = pd.read_csv('..\/input\/car-price-prediction\/CarPrice_Assignment.csv')","8971f784":"#Visualising top 10 records\ndataset.head()","baff2d41":"# Basic info of columnsabs\ndataset.info()","032355f1":"dataset.columns","b0310f19":"dataset_new = dataset[['symboling','wheelbase', 'enginesize','boreratio', 'stroke',\n       'compressionratio', 'horsepower', 'peakrpm', 'citympg', 'highwaympg',\n       'price']]","959c4b8f":"dataset_new","e8dc323e":"x = dataset_new.drop(['price'],axis =1)\ny = dataset_new.price.values","21799e80":"from sklearn.model_selection import train_test_split","aa4574e6":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)","209fc4b0":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","05c177e9":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10, random_state = 0)\nregressor.fit(x_train, y_train)\n","a07c1c37":"y_pred = regressor.predict(x_test)\nnp.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","babca4b3":"## Prediction Results","7bd8fe02":"## Model Building","0307d512":"## Splitting the dataset into the Training set and Test set"}}