{"cell_type":{"33152159":"code","0d4e6236":"code","89a68dac":"code","5b0a8f9b":"code","e6cb5b43":"code","0a56369d":"code","e0c643c6":"code","14d68477":"code","d2dae348":"code","b4864ba5":"code","8a61cf54":"code","9e1e048a":"code","64b652af":"code","d8329638":"code","50dfe258":"code","6940370b":"code","bbeb6465":"code","6aa24b1d":"code","2eca26e0":"markdown","95af201a":"markdown","ae50bdf0":"markdown","2c39d3ef":"markdown"},"source":{"33152159":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Flatten\nfrom keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\n\n%matplotlib inline","0d4e6236":"df_train = pd.read_csv(\"..\/input\/mnist-in-csv\/mnist_train.csv\")\ndf_test = pd.read_csv(\"..\/input\/mnist-in-csv\/mnist_test.csv\")\ndf_train","89a68dac":"df_train.shape","5b0a8f9b":"df_test.shape","e6cb5b43":"X_t = df_train.drop([\"label\"], axis=1)\nY_t = df_train.label.values","0a56369d":"X_test = df_test.drop([\"label\"], axis=1)\nY_test = df_test.label.values","e0c643c6":"# 8\uac1c\uc758 \ub370\uc774\ud130\ub9cc \uc2dc\uac01\ud654\ud574\ubcf4\uae30\nplt.figure(figsize=(6,3))\nX = X_t.to_numpy().reshape(60000, 28, 28)\nfor i in range(8):\n    plt.subplot(2,4,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(X[i], cmap=plt.cm.binary)\n    plt.xlabel(str(Y_t[i]))\nplt.show()","14d68477":"X_train, X_val, Y_train, Y_val = train_test_split(X_t, Y_t, test_size=0.2, stratify = Y_t, random_state = 42)","d2dae348":"print(X_train.shape, Y_train.shape)","b4864ba5":"X_train.values.dtype","8a61cf54":"X_train = X_train.astype(\"float64\")\/255\nX_val = X_val.astype(\"float64\")\/255\nX_test = X_test.astype(\"float64\")\/255","9e1e048a":"Y_train[0]","64b652af":"# one hot encoding\nY_train = to_categorical(Y_train, 10)\nY_val = to_categorical(Y_val, 10)\nY_test = to_categorical(Y_test, 10)","d8329638":"Y_train[0]","50dfe258":"model = Sequential()\nmodel.add(Dense(512, input_dim=784, activation='relu'))\nmodel.add(Dense(10, activation='softmax'))","6940370b":"model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","bbeb6465":"model.fit(X_train, Y_train,\n          batch_size=200,\n          epochs=30,\n          verbose=1, \n          validation_data=(X_val, Y_val))","6aa24b1d":"score = model.evaluate(X_test, Y_test, verbose = 0)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])","2eca26e0":"# \ubaa8\ub378 \uc0dd\uc131","95af201a":"# \ub77c\uc774\ube0c\ub7ec\ub9ac","ae50bdf0":"# \ub370\uc774\ud130 \uc5c5\ub85c\ub4dc","2c39d3ef":"# \ub370\uc774\ud130 \uc804\ucc98\ub9ac"}}