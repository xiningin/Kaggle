{"cell_type":{"8fa7dfb6":"code","0967cfb0":"code","9b8d1fcd":"code","cc665d07":"code","47a5227f":"code","8e0fadb6":"code","0adbcd1c":"code","491f31a3":"code","d19269c4":"code","d23a9f20":"code","a84480be":"code","3a484136":"code","8dfdb1ae":"code","c494463a":"code","1d4abdae":"code","9ebe67e9":"code","b3c5d776":"code","fa0e5977":"code","f7eefa50":"code","782f9928":"code","db387900":"code","497b18c9":"code","713ca3ea":"markdown","02b8c555":"markdown","ef217c9f":"markdown","6904273f":"markdown","c52367ab":"markdown"},"source":{"8fa7dfb6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0967cfb0":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\nimport squarify    \nimport math\nfrom mpl_toolkits.basemap import Basemap\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster","9b8d1fcd":"df = pd.read_csv(\"..\/input\/mayan-site\/scrapedData.csv\", engine='python')\ndf.head()","cc665d07":"df.columns","47a5227f":"df['Country_Area'].value_counts()[:12]","8e0fadb6":"plt.figure(figsize=(14,7))\nsns.set(style=\"white\")\ncolors = ['red','orange','orange','orange','orange','green','green','orange','green','red','blue']\ndf['Country_Area'].value_counts()[:11].plot(kind='bar',edgecolor='k', color=colors, alpha=0.8)\n  \nfor index, value in enumerate(df['Country_Area'].value_counts()[:11]):\n    plt.text(index, value, str(value))\nplt.xlabel(\"Countries, Region\/Province\", fontsize=14)\nplt.ylabel(\"Count of Sites\", fontsize=13)\nplt.title(\"Maya Sites by Country\", fontsize=18)\nplt.show()","0adbcd1c":"df.Longitude[62]=-89.486376","491f31a3":"df[[\"Latitude\", \"Longitude\"]] = df[[\"Latitude\", \"Longitude\"]].apply(pd.to_numeric) ","d19269c4":"#defines the area of the map that will include all the spatial points \nBBox=((df.Latitude.min(), df.Latitude.max(), df.Longitude.min(), df.Longitude.max()))\nBBox","d23a9f20":"#Creating a list with additional area to cover all points into the map\nBBox=[ -94.768, -85.781, 13.710, 22.313]\n\nBBox","a84480be":"#import map layer extracted based on the lat and long values\nla_map = plt.imread('..\/input\/map-maya\/map (1).png')\n\nfig, ax = plt.subplots(figsize = (24,9))\nax.scatter(df.Longitude,df.Latitude, zorder=2, alpha= 0.6, edgecolors='k', c='orange', s=70)\nax.set_title('Maya Sites across Central America')\nax.set_xlim(BBox[0],BBox[1])\nax.set_ylim(BBox[2],BBox[3])\nax.imshow(la_map, zorder=1, extent=BBox, aspect='equal')\nplt.show()","3a484136":"# to remove Nan from the columns\ndf.dropna(inplace=True)","8dfdb1ae":"m_5 = folium.Map(location=[17.462089, -90.443718], tiles='cartodbpositron', zoom_start=6.5)\n\n# Add a heatmap to the base map\nHeatMap(data=df[['Latitude', 'Longitude']], radius=30).add_to(m_5)\n\n# Display the map\nm_5","c494463a":"#  Create the GeoDataFrame\ndf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df[\"Longitude\"], df[\"Latitude\"]) )\n\n# Set the CRS to {'init': 'epsg:4326'}\ndf.crs = {'init': 'epsg:4326'}\ndf.head()","1d4abdae":"belize = gpd.read_file('..\/input\/central-americas\/gadm36_BLZ_1.shp')\nbelize.crs = {'init': 'epsg:4326'}\nbelize.head()","9ebe67e9":"guatemala = gpd.read_file('..\/input\/central-americas\/gadm36_GTM_2.shp')\nguatemala.crs = {'init': 'epsg:4326'}\nguatemala.head()","b3c5d776":"honduras = gpd.read_file('..\/input\/central-americas\/gadm36_HND_1.shp')\nhonduras.crs = {'init': 'epsg:4326'}\nhonduras.head()","fa0e5977":"mexico = gpd.read_file('..\/input\/central-americas\/gadm36_MEX_2.shp')\nmexico.crs = {'init': 'epsg:4326'}\nmexico.head()","f7eefa50":"joined = belize.geometry.append(guatemala.geometry)\njoined","782f9928":"j1=joined.geometry.append(honduras.geometry)\nj1","db387900":"j2=j1.geometry.append(mexico.geometry)\nj2","497b18c9":"ax = j2.plot(figsize=(20,20), color='lightgray', linestyle='-', edgecolors='k')\ndf.plot(ax=ax, markersize=50, color='yellow', edgecolors='k')","713ca3ea":"### **Import Dataset**","02b8c555":"### **Using Folium**","ef217c9f":"### **Mayan Sites by Country-Region**","6904273f":"### **Using GeoPandas**","c52367ab":"### **Plotting spatial points over the Map**"}}