{"cell_type":{"6f099c00":"code","c24cc5b2":"code","7f0980a4":"code","d8a2bdc8":"code","468aec50":"code","1fe6de8e":"code","538e2f13":"code","a9b2827e":"code","8894a9c4":"code","9a0e3dc2":"code","a338f276":"code","f378336c":"code","b1191ee4":"code","c114035e":"code","a4fe74c7":"code","ed730892":"code","1776f2b0":"code","541ed849":"code","09596e1c":"code","3243ec98":"markdown","96d50fda":"markdown","33f25ea8":"markdown","c87a6bdd":"markdown","a2c62239":"markdown","97f4d824":"markdown"},"source":{"6f099c00":"# Import libraries\nimport numpy as np\nimport pandas as pd\nfrom pandas import Series, DataFrame\nfrom sklearn import linear_model\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nimport statsmodels.api as sm\nfrom sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\nimport seaborn as sns; sns.set()\n%matplotlib inline","c24cc5b2":"# import the data set\nmotor_data = pd.read_csv(\"..\/input\/pmsm_temperature_data.csv\")\nmotor_data.head()","7f0980a4":"# Display the shape\nmotor_data.shape","d8a2bdc8":"# Display the data types\nmotor_data.dtypes","468aec50":"# Display any missing values from the data\nmotor_data.isnull().sum()","1fe6de8e":"# Display the statisitcsal desctiption\nmotor_data.describe().T","538e2f13":"# Display any correlation\nmotor_corr = motor_data.corr()\nmotor_corr","a9b2827e":"# Display the correlation data with non-numerical values\nfor col in list(motor_data.columns):\n    motor_corr[col] = pd.cut(motor_corr[col],\n                            (-1, -0.5, -.1, 0.1, 0.5, 1),\n                            labels=[\"NegStrong\", \"NegMedium\", \"Weak\",\n                                   \"PosMedium\", \"PosStrong\"])\nmotor_corr","8894a9c4":"# Save the response variable\nY = motor_data['pm']","9a0e3dc2":"# Save the predictor variables\nX = motor_data.drop('pm', axis=1)","a338f276":"# Standardize the predictor variables\nsc = StandardScaler()\nsc.fit(X)\nX_std = sc.transform(X)","f378336c":"# Feature Selection with backward elimiation use using statsmodel linear regression\n# add the Y-intercept\nX_std0 = sm.add_constant(X_std)","b1191ee4":"# Run OLS on the data\nY_model0 = sm.OLS(Y, X_std0)\nY_model0 = Y_model0.fit()\nY_model0 = Y_model0.summary()\nY_model0","c114035e":"# Use Linear Regression with cross_val_score\nlr = linear_model.LinearRegression()\nscores = cross_val_score(lr, X_std, Y, cv=10)\nprint(\"Mean R-Squared Score\", sum(scores)\/len(scores))","a4fe74c7":"# Use train_tet_split on the data\nX_train, X_test, Y_train, Y_test = train_test_split(X_std, Y,\n                                                   random_state=33,\n                                                   test_size=0.33)","ed730892":"# Train the data\nlr = linear_model.LinearRegression()\nmodel = lr.fit(X_train, Y_train)","1776f2b0":"# Predict on the test data\npredictions = lr.predict(X_test)\npredictions[:5]","541ed849":"# Display the score\nprint(\"R-Sqaured Score:\", model.score(X_test, Y_test))","09596e1c":"# Plot the scores\nplt.scatter(predictions, Y_test)\nplt.xlabel(\"Predicted values\")\nplt.ylabel(\"Actual Values\");","3243ec98":"### Author: Jeffrey Cabrera","96d50fda":"##### Purpose of this notebook is to predict a surface temperature of a permanent Magnet Surface","33f25ea8":"## Dataset Provded by: kaggle.com","c87a6bdd":"# Any feeedback would be greatly appreciated.","a2c62239":"### Columns\n#### ambient: Ambient temperature as measured by a thermal sensor located closely to the stator.\n#### coolant: Coolant temperature. The motor is water cooled. Measurement is taken at outflow.\n#### u_d: Voltage d-component\n#### u_q: Voltage q-component\n#### motor_speed: Motor speed\n#### torque: Torque induced by current.\n#### i_d: Current d-component\n####  i_q: Current q-component\n#### pm: Permanent Magnet surface temperature representing the rotor temperature. This was measured with an infrared thermography unit.\n#### stator_yoke: Stator yoke temperature measured with a thermal sensor.\n#### stator_tooth: Stator tooth temperature measured with a thermal sensor.\n####  stator_winding: Stator winding temperature measured with a thermal sensor.\n#### profile_id: Each measurement session has a unique ID. Make sure not to try to estimate from one session onto the other as they are strongly independent.","97f4d824":"# Electric Motor Temperature"}}