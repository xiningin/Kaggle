{"cell_type":{"1403d8bf":"code","79e0e3d7":"code","0d35c2b8":"code","4d112de7":"code","1ce71109":"code","55f6f385":"code","6cda915a":"code","33bda990":"code","dec28c7f":"code","7e2ab293":"code","cb76b7e4":"code","fc207bcf":"code","6afd6d08":"code","8bad217a":"code","74c9f9f8":"code","8d983c80":"code","45613460":"code","2b19fa8f":"code","0d9a18a5":"code","d5b20ee0":"code","8cfe8b96":"code","bd0a280e":"code","a0a32049":"code","d3e55186":"code","6c3ec7d0":"code","8b3f5de8":"code","5b4be503":"code","29242b7b":"code","c6146e7a":"code","a35929d1":"code","01f7de80":"code","8be5fed3":"code","c1e597ae":"code","d3756e8b":"code","543e828b":"code","2323891a":"code","f0776b15":"code","a1a3b9b7":"markdown","d636c253":"markdown","79aac989":"markdown","1c921d12":"markdown","dc5d28f5":"markdown","2acccfc0":"markdown","1135e341":"markdown","fe8c8eb6":"markdown","9dae0ac8":"markdown"},"source":{"1403d8bf":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport scipy.stats as st \nimport warnings \nwarnings.filterwarnings('ignore')","79e0e3d7":"heart = pd.read_csv('..\/input\/heartdisease\/heart.csv')\nheart.head()","0d35c2b8":"heart.info()","4d112de7":"heart.describe()","1ce71109":"#Change Num_format Categorical Columns to Categorical Format \nCat_list_2 = []\nCat_list_more2 = []\nNum_list = []\nfor i in heart.columns[:-1]: \n  if len(heart[i].unique()) == 2: \n    Cat_list_2.append(i)\n  elif len(heart[i].unique()) > 2 and len(heart[i].unique()) < 6: \n    Cat_list_more2.append(i)\n  else: \n    Num_list.append(i)\nprint(Cat_list_2)\nprint(Cat_list_more2)\nprint(Num_list)","55f6f385":"for i in Cat_list_more2:\n  heart[i] = heart[i].astype('category')","6cda915a":"#Explore age\ni = 'age'\nprint('Unique %s:'%i,heart[i].unique())","33bda990":"print('Skew %s:'%i,st.skew(heart[i]))\nsns.distplot(heart[i])\nplt.show()","dec28c7f":"sns.boxplot(heart[i])\nplt.show()","7e2ab293":"#Explore trestbps\ni = 'trestbps'\nprint('Unique %s:'%i,heart[i].unique())","cb76b7e4":"print('Skew %s:'%i,st.skew(heart[i]))\nsns.distplot(heart[i])\nplt.show()","fc207bcf":"sns.boxplot(heart[i])\nplt.show()","6afd6d08":"#Explore chol\ni = 'chol'\nprint('Unique %s:'%i,heart[i].unique())","8bad217a":"print('Skew %s:'%i,st.skew(heart[i]))\nsns.distplot(heart[i])\nplt.show()","74c9f9f8":"sns.boxplot(heart[i])\nplt.show()","8d983c80":"#Explore thalach\ni = 'thalach'\nprint('Unique %s:'%i,heart[i].unique())","45613460":"print('Skew %s:'%i,st.skew(heart[i]))\nsns.distplot(heart[i])\nplt.show()","2b19fa8f":"sns.boxplot(heart[i])\nplt.show()","0d9a18a5":"#Explore oldpeak\ni = 'oldpeak'\nprint('Unique %s:'%i,heart[i].unique())","d5b20ee0":"print('Skew %s:'%i,st.skew(heart[i]))\nsns.distplot(heart[i])\nplt.show()","8cfe8b96":"sns.boxplot(heart[i])\nplt.show()","bd0a280e":"for i in Cat_list_2: \n  heart[i].value_counts().plot.bar()\n  plt.xticks(rotation = 0)\n  plt.xlabel(i)\n  plt.show()\n  print('\\n')","a0a32049":"for i in Cat_list_more2: \n  heart[i].value_counts().plot.bar()\n  plt.xticks(rotation = 0)\n  plt.xlabel(i)\n  plt.show()\n  print('\\n')","d3e55186":"heart['target'].value_counts().plot.bar()\nplt.xticks(rotation = 0)\nplt.xlabel('target')","6c3ec7d0":"for i in Num_list: \n  sns.kdeplot(data = heart, x = i, hue = 'target')\n  plt.show()\n  print('\\n')","8b3f5de8":"for i in Cat_list_2:\n  sns.countplot(data = heart, \n                x = i,\n                hue = 'target')\n  plt.show()\n  print('\\n')","5b4be503":"for i in Cat_list_more2:\n  sns.countplot(data = heart, \n                x = i,\n                hue = 'target')\n  plt.show()\n  print('\\n')","29242b7b":"sns.pairplot(data = heart, hue = 'target', \n             x_vars = Num_list, y_vars = Num_list,\n             kind = 'kde')\nplt.show()","c6146e7a":"from sklearn.preprocessing import OneHotEncoder","a35929d1":"heart_logit = heart\nfor i in Cat_list_more2:\n  onehot = OneHotEncoder()\n  onehot.fit(heart_logit[[i]])\n  feature = onehot.fit_transform(heart_logit[[i]]).toarray()\n  feature = pd.DataFrame(feature, columns = ['%s_%s'%(i,z) for z in onehot.categories_[0]])\n  heart_logit = pd.concat([heart_logit,feature],axis = 1)\n  cut = heart_logit[i].value_counts().index[-1]\n  heart_logit.drop(i, axis = 1, inplace= True)\n  heart_logit.drop('%s_'%i+str(cut), axis = 1, inplace = True)\nheart_logit.head()","01f7de80":"X = heart_logit.drop('target', axis = 1)\ny = heart['target']","8be5fed3":"X_forscale = X[X.columns[:8]]\nX_forscale = X_forscale.drop(['sex','fbs','exang'],axis = 1)\nX_remain = X[['sex','fbs','exang']]\nfrom sklearn.preprocessing import RobustScaler\nscale = RobustScaler()\nscale.fit(X_forscale)\nX_scale = scale.fit_transform(X_forscale)\nX_scale = pd.DataFrame(X_scale, columns = X_forscale.columns)\nX_scale.head()","c1e597ae":"X = pd.concat([X_scale,X[X.columns[8:]]],axis = 1)\nX = pd.concat([X,X_remain],axis = 1)\nX.head()","d3756e8b":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, stratify = y)\nlogit = LogisticRegression()\nlogit.fit(X_train, y_train)\nyhat_train = logit.predict(X_train)\nyhat_test = logit.predict(X_test)","543e828b":"from sklearn.metrics import confusion_matrix, classification_report, f1_score, precision_score, recall_score","2323891a":"print('accuracy train set:',logit.score(X_train,y_train))\nprint('accuracy test set:',logit.score(X_test,y_test))\nprint('\\n')\nprint(confusion_matrix(y_train, yhat_train))\nprint(confusion_matrix(y_test, yhat_test))\nprint('\\n')\nprint(classification_report(y_train, yhat_train))\nprint(classification_report(y_test, yhat_test))","f0776b15":"report = pd.DataFrame({'Algo':'LogisticRegression',\n                       'Accuracy on test set': logit.score(X_test,y_test),\n                       'Precision': precision_score(y_test, yhat_test),\n                       'Recall': recall_score(y_test, yhat_test),\n                       'F1_score':f1_score(y_test, yhat_test)},index = [0])\nreport","a1a3b9b7":"### Bivariate","d636c253":"### Import and Explore DataFrame","79aac989":"### Model Creation","1c921d12":"###Univariate analysis","dc5d28f5":"### Feature Engineering","2acccfc0":"####Categorical","1135e341":"###Scalling Data","fe8c8eb6":"### Multivariate","9dae0ac8":"#### Num_col"}}