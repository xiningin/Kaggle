{"cell_type":{"2467a27a":"code","608923b7":"code","7472f0b2":"code","2cfab62f":"code","d2ec2aeb":"code","74f4380c":"code","6f38b8f9":"code","6fb37cfc":"code","833c72cf":"code","ca36075e":"code","095e8ded":"markdown","8b97b361":"markdown","34cb476f":"markdown","c687df65":"markdown","c9d28a9b":"markdown","f21fd41e":"markdown"},"source":{"2467a27a":"import numpy as np\nimport pandas as pd\npd.set_option('max_columns', None)\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import LinearSVC, SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\n\nimport warnings\nwarnings.filterwarnings(action='ignore')","608923b7":"train_df = pd.read_csv('..\/input\/video-games-rating-by-esrb\/Video_games_esrb_rating.csv')\ntest_df = pd.read_csv('..\/input\/video-games-rating-by-esrb\/test_esrb.csv')","7472f0b2":"train_df","2cfab62f":"train_df.info()","d2ec2aeb":"def preprocess_inputs(df, scaler, split='train'):\n    df = df.copy()\n    \n    # Drop title column\n    df = df.drop('title', axis=1)\n    \n    # Shuffle the data\n    df = df.sample(frac=1.0, random_state=1).reset_index(drop=True)\n    \n    # Split df into X and y\n    y = df['esrb_rating']\n    X = df.drop('esrb_rating', axis=1)\n    \n    # Scale X\n    if split == 'train':\n        scaler.fit(X)\n    X = pd.DataFrame(scaler.transform(X), index=X.index, columns=X.columns)\n    \n    return X, y","74f4380c":"scaler = StandardScaler()\n\nX_train, y_train = preprocess_inputs(train_df, scaler=scaler, split='train')\nX_test, y_test = preprocess_inputs(test_df, scaler=scaler, split='test')","6f38b8f9":"X_train","6fb37cfc":"y_train","833c72cf":"models = {\n    \"                   Logistic Regression\": LogisticRegression(),\n    \"                   K-Nearest Neighbors\": KNeighborsClassifier(),\n    \"                         Decision Tree\": DecisionTreeClassifier(),\n    \"Support Vector Machine (Linear Kernel)\": LinearSVC(),\n    \"   Support Vector Machine (RBF Kernel)\": SVC(),\n    \"                        Neural Network\": MLPClassifier(),\n    \"                         Random Forest\": RandomForestClassifier(),\n    \"                     Gradient Boosting\": GradientBoostingClassifier(),\n    \"                               XGBoost\": XGBClassifier(eval_metric='mlogloss'),\n    \"                              LightGBM\": LGBMClassifier(),\n    \"                              CatBoost\": CatBoostClassifier(verbose=0)\n}\n\nfor name, model in models.items():\n    model.fit(X_train, y_train)\n    print(name + \" trained.\")","ca36075e":"for name, model in models.items():\n    print(name + \" Accuracy: {:.3f}%\".format(model.score(X_test, y_test) * 100))","095e8ded":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/IoAL3QYcgcw","8b97b361":"# Preprocessing","34cb476f":"# Getting Started","c687df65":"# Results","c9d28a9b":"# Task for Today  \n\n***\n\n## Video Game ESRB Rating Prediction  \n\nGiven *data about video games*, let's try to predict the **ESRB rating** of a given game.\n\nWe will use a variety of classification models to make our predictions.","f21fd41e":"# Training"}}