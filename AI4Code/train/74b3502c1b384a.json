{"cell_type":{"a76dfdee":"code","6b991a18":"code","ec80e86b":"code","c75a6e7c":"code","53340165":"code","1bcfe799":"code","2b4579af":"code","93e5a3b1":"code","e260e734":"code","fa281883":"code","84311361":"code","5c032507":"code","7ebe52c6":"code","7c325ae2":"code","de17b6fe":"code","01c678bb":"code","198237df":"code","e3b367fb":"code","afb7dc7d":"code","d8a5b2e5":"code","315035e6":"code","f62a6fbf":"code","843a218e":"code","7975b679":"code","20d84386":"code","40c56ba9":"code","e1c69e49":"code","37a7cc0a":"code","692eee78":"code","42d6cea2":"code","a6fd5fff":"code","e1c307e4":"code","e4b3c1fb":"code","8685239b":"code","3e1555fa":"code","48d07a48":"code","5031bfec":"code","53de9e8d":"code","ba639ffa":"code","a49f7056":"code","5a099566":"code","ca86e673":"code","1c5fb9e3":"code","33e8cb32":"code","fd713775":"code","e7fc0079":"code","c72c9f48":"code","d769fa37":"code","5b7cf491":"code","f62f98c9":"code","2797f5d3":"code","e960f156":"markdown","134c0141":"markdown","d450967c":"markdown","14ce1acd":"markdown","1fce489a":"markdown","778c5417":"markdown","8b0813af":"markdown","6e1bdbea":"markdown","71b61c72":"markdown","170674a9":"markdown","534b43c8":"markdown","5566ecf1":"markdown","a12c798e":"markdown","4d015540":"markdown"},"source":{"a76dfdee":"#Import various python packages\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\nfrom shapely import wkt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nplt.style.use('fivethirtyeight')","6b991a18":"#Create a pandas dataframe of the Airbnb data\ndata = pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\n\ndata.head(5)","ec80e86b":"#Review the data types\ndata.dtypes","c75a6e7c":"#Review the columns \ndata.columns","53340165":"#Rename a column to accurately reflect Boroughs\ndata.rename(columns={'neighbourhood_group':'boroname'}, inplace=True)","1bcfe799":"#Review the listings by boroname\nplt.figure(figsize=(10,10))\nsns.scatterplot(x='longitude', y='latitude', hue='boroname',s=20, data=data)","2b4579af":"#Get a count by borough\nborough_count = data.groupby('boroname').agg('count').reset_index()","93e5a3b1":"#Plot the count by borough\nfig, ax1 = plt.subplots(1,1, figsize=(6,6)\n                       )\nsns.barplot(x='boroname', y='id', data=borough_count, ax=ax1)\n\nax1.set_title('Number of Listings by Borough', fontsize=15)\nax1.set_xlabel('Borough', fontsize=12)\nax1.set_ylabel('Count', fontsize=12)\nax1.tick_params(axis='both', labelsize=10)","e260e734":"#Here we are using geopandas to bring in a base layer of NYC boroughs\nnyc = gpd.read_file(gpd.datasets.get_path('nybb'))\nnyc.head(5)","fa281883":"#Rename the column to boroname, so that we can join the data to it on a common field\nnyc.rename(columns={'BoroName':'boroname'}, inplace=True)\nbc_geo = nyc.merge(borough_count, on='boroname')","84311361":"#Plot the count by borough into a map\nfig,ax = plt.subplots(1,1, figsize=(10,10))\nbc_geo.plot(column='id', cmap='viridis_r', alpha=.5, ax=ax, legend=True)\nbc_geo.apply(lambda x: ax.annotate(s=x.boroname, color='black', xy=x.geometry.centroid.coords[0],ha='center'), axis=1)\nplt.title(\"Number of Airbnb Listings by NYC Borough\")\nplt.axis('off')","5c032507":"#Now,lets take a look at the count by neighborhood. Use the file downloaded from https:\/\/data.cityofnewyork.us\/City-Government\/Neighborhood-Tabulation-Areas\/cpf4-rkhq\nnbhoods = pd.read_csv('..\/input\/nbhoods\/nynta.csv')\nnbhoods.head(5)","7ebe52c6":"#There is a lot going on here... first rename the column\nnbhoods.rename(columns={'NTAName':'neighbourhood'}, inplace=True)\n\n#Then, since this is a csv file, convert the geometry column text into well known text, this will allow you to plot its geometry correctly\nnbhoods['geom'] = nbhoods['the_geom'].apply(wkt.loads)\n\n#Now convert the pandas dataframe into a Geopandas GeoDataFrame\nnbhoods = gpd.GeoDataFrame(nbhoods, geometry='geom')","7c325ae2":"\n#Lets take a look at what the neighborhoods look like\nfig,ax = plt.subplots(1,1, figsize=(8,8))\nnbhoods.plot(ax=ax)","de17b6fe":"#Lets get a count by neighborhood\nnbhood_count = data.groupby('neighbourhood').agg('count').reset_index()","01c678bb":"#Lets merge the spatial GeoPandas Dataframe (with geometry), with the nbhood_count layer that is aggregated\nnb_count_geo = nbhoods.merge(nbhood_count, on='neighbourhood')\nnb_count_geo.head(3)","198237df":"#Lets take a look at the count by neighborhood\nfig,ax = plt.subplots(1,1, figsize=(10,10))\n\nbase = nbhoods.plot(color='white', edgecolor='black', ax=ax)\n\nnb_count_geo.plot(column='id', cmap='plasma_r', ax=base, legend=True)\n\nplt.title(\"Number of Airbnb Listings by Neighborhood\")\nax.text(0.5, 0.01,'White = No Data',\n       verticalalignment='bottom', horizontalalignment='left',\n       transform=ax.transAxes,\n       color='blue', fontsize=12)\nplt.axis('off')","e3b367fb":"#Create a point of each Airbnb location, and enable the \"data\" dataframe into a geopandas dataframe\ndata = gpd.GeoDataFrame(data, geometry=gpd.points_from_xy(data.longitude, data.latitude))\n\n#Now, do a spatial join... This code here runs an intersect analysis to find which neighborhood the Airbnb location is in\njoined = gpd.sjoin(nbhoods, data, how='inner', op='intersects')","afb7dc7d":"#Lets take a look \njoined.head(3)","d8a5b2e5":"#Drop the second geometry column\njoined.drop(columns='geom', inplace=True)","315035e6":"#Rename the column. \njoined.rename(columns={'neighbourhood_left':'neighbourhood'}, inplace=True)\n\n#Create a count of each neighborhood\nnb_join_count = joined.groupby('neighbourhood').agg('count').reset_index()","f62a6fbf":"#Get the \"true count\". Join this data to the original neighborhoods geometry \ntrue_count = nbhoods.merge(nb_join_count, on='neighbourhood')","843a218e":"#Lets plot the data\nfig,ax = plt.subplots(1,1, figsize=(10,10))\n\nbase = nbhoods.plot(color='white', edgecolor='black', ax=ax)\n\ntrue_count.plot(column='id',cmap='plasma_r', ax=base, legend=True)\nplt.title('Number of Airbnb listings by Neighborhood in NYC')","7975b679":"#Create a data frame, and add data for Yankee stadium to it\nyankee_stadium = pd.DataFrame()\nyankee_stadium['name'] = [\"Yankee Stadium\"]\nyankee_stadium['lon'] = -73.926186\nyankee_stadium['lat'] = 40.829659\nyankee_stadium","20d84386":"#Create a geodataframe of Yankee Stadium\nyankee_stadium= gpd.GeoDataFrame(yankee_stadium, geometry=gpd.points_from_xy(yankee_stadium.lon, yankee_stadium.lat))","40c56ba9":"#Lets plot the data\nfig,ax1 = plt.subplots(1,1, figsize=(10,10))\nbase = nbhoods.plot(color='orange',alpha=0.5, edgecolor='black', ax=ax1)\nyankee_stadium.plot(markersize=300,ax=base)\nplt.title('Yankee Stadium and NYC')","e1c69e49":"#Lets filter the neighborhoods down to Manahattan and the Bronx\nman_bronx_geo = nbhoods.loc[(nbhoods['BoroName'] == 'Manhattan') | (nbhoods['BoroName'] == 'Bronx')]","37a7cc0a":"#Plot Yankee Stadium with the Bronx and Manhattan\nfig,ax = plt.subplots(1,1, figsize=(10,10))\nyankee_stadium.plot(markersize=300,color='red',ax=ax)\nman_bronx_geo.plot(column='BoroName', cmap = 'tab20b',alpha=.5, ax=ax, legend=True)\nplt.title(\"Bronx, Manhattan, and Yankee Stadium\")","692eee78":"#Create a pandas dataframe of the Airbnb data\nsubways = pd.read_csv('..\/input\/nyc-subway-stations\/DOITT_SUBWAY_STATION_01_13SEPT2010.csv')\nsubways.head(5)","42d6cea2":"#Then, since this is a csv file, convert the geometry column text into well known text, this will allow you to plot its geometry correctly\nsubways['geom'] = subways['the_geom'].apply(wkt.loads)\n\n#Now convert the pandas dataframe into a Geopandas GeoDataFrame\nsubways = gpd.GeoDataFrame(subways, geometry='geom')","a6fd5fff":"#Lets take a look at what the neighborhoods look like\nfig,ax = plt.subplots(1,1, figsize=(8,8))\nsubways.plot(ax=ax)\nyankee_stadium.plot(markersize=100,ax=ax)\nplt.title('NYC Subway Stations and Yankee Stadium', fontsize=12)","e1c307e4":"subways = subways[subways['LINE'].str.contains('4') | (subways['LINE'].str.contains('D'))]","e4b3c1fb":"#Lets take a look at what the neighborhoods look like\nfig,ax = plt.subplots(1,1, figsize=(8,8))\nsubways.plot(ax=ax)\nyankee_stadium.plot(markersize=100,ax=ax)\nplt.title('NYC Subway Stations Servicing 4 and D lines, with Yankee Stadium', fontsize=10)","8685239b":"#Plot the count by borough into a map\nfig,ax = plt.subplots(1,1, figsize=(10,10))\n\nyankee_stadium.plot(markersize=300,color='red',ax=ax, label='Yankee Stadium')\n\nsubways.plot(markersize=50, color='green',ax=ax, label='Subways')\n\nman_bronx_geo.plot(column='BoroName', cmap = 'tab20b',alpha=.5, ax=ax, legend=True)\n\nplt.title(\"Bronx, Manhattan, and Yankee Stadium\")\n\nhandles, labels = ax.get_legend_handles_labels()\nfig.legend(handles, labels, loc='center right')","3e1555fa":"#2 miles in feet is .001 * 32.195122 \nyankee_stadium.crs = {'init' :'epsg:2263'}\nstadium_buff = yankee_stadium.buffer(.001 * 32.195122)","48d07a48":"stadium_buff = gpd.GeoDataFrame({'geometry': stadium_buff})","5031bfec":"stadium_buff","53de9e8d":"stadium_buff.crs = {'init' :'epsg:2263'}\ndata.crs = {'init' :'epsg:2263'}","ba639ffa":"airbnbs_within_2m_of_ys = gpd.sjoin(data,stadium_buff, how='inner', op='intersects')","a49f7056":"len(airbnbs_within_2m_of_ys)","5a099566":"#Plot the airbnbs within 2 miles of Yankee stadium\nfig,ax = plt.subplots(1,1, figsize=(10,10))\nairbnbs_within_2m_of_ys.plot(markersize=50,ax=ax, label=\"Airbnbs\")\nyankee_stadium.plot(markersize=300,color='red',ax=ax, label=\"Yankee Stadium\")\n#man_bronx_geo.plot(column='BoroName', cmap = 'tab20b',alpha=.5, ax=ax, legend=True)\nplt.title(\"Airbnbs within 2 miles of Yankee Stadium\")\n\nhandles, labels = ax.get_legend_handles_labels()\nfig.legend(handles, labels, loc='upper right')","ca86e673":"#Lets add our crieria, one by one, and see how many listings are left after each\nprint(\"Starting number of airbnbs: {0}\".format(len(airbnbs_within_2m_of_ys)))\n\nairbnbs_within_2m_of_ys = airbnbs_within_2m_of_ys.loc[airbnbs_within_2m_of_ys['price'] < 250]\nprint(\"Number of airbnbs after cutting price to less than $250: {0} \".format(len(airbnbs_within_2m_of_ys)))\n\nairbnbs_within_2m_of_ys = airbnbs_within_2m_of_ys.loc[airbnbs_within_2m_of_ys['availability_365'] > 240]\nprint(\"Number of airbnbs after selecting those that are available at least 6 months out of the year: {0} \".format(len(airbnbs_within_2m_of_ys)))\n\nairbnbs_within_2m_of_ys = airbnbs_within_2m_of_ys.loc[airbnbs_within_2m_of_ys['number_of_reviews'] >= 10]\nprint(\"Number of airbnbs after selecting those with at least 10 reviews: {0} \".format(len(airbnbs_within_2m_of_ys)))\n\nairbnbs_within_2m_of_ys = airbnbs_within_2m_of_ys.loc[airbnbs_within_2m_of_ys['room_type'] == 'Entire home\/apt']\nprint(\"Number of airbnbs after selecting those that offer the entire home\/apt: {0} \".format(len(airbnbs_within_2m_of_ys)))\n\nairbnbs_within_2m_of_ys = airbnbs_within_2m_of_ys.loc[airbnbs_within_2m_of_ys['minimum_nights'] <= 3]\nprint(\"Number of airbnbs left after selecting airbnbs that have a minimum night stay of 3 or less: {0} \".format(len(airbnbs_within_2m_of_ys)))","1c5fb9e3":"airbnbs_within_2m_of_ys.head()","33e8cb32":"#Plot the airbnbs within 2 miles of Yankee stadium\nfig,ax = plt.subplots(1,1, figsize=(10,10))\nairbnbs_within_2m_of_ys.plot(markersize=100,ax=ax, legend=True, label=\"Airbnbs\")\nyankee_stadium.plot(markersize=300,color='red',ax=ax, label=\"Yankee Stadium\")\nplt.title(\"Airbnbs' near Yankee Stadium that meet our criteria so far\")\n\nhandles, labels = ax.get_legend_handles_labels()\nfig.legend(handles, labels, loc='upper right')","fd713775":"#1\/4 mile in feet is .001 * 3.657 \nsubways.crs = {'init' :'epsg:2263'}\nsubways_buff = subways.buffer(.001 * 3.657)","e7fc0079":"#Create a geodataframe for the subways buffer. Set the crs to 2263\nsubways_buff = gpd.GeoDataFrame({'geometry': subways_buff})\nsubways_buff.crs = {'init' :'epsg:2263'}","c72c9f48":"#Rename the index_right column. It can not be in our final spatial join\nairbnbs_within_2m_of_ys = airbnbs_within_2m_of_ys.rename(columns={'index_right': 'other_name'})","d769fa37":"#Lets find the airbnbs that intersect our subway buffers\nfinal_abs = gpd.sjoin(airbnbs_within_2m_of_ys,subways_buff, how='inner', op='intersects')","5b7cf491":"#How many airbnbs meet all of our conditions?\nprint(\"There are {0} airbnbs that meet all of the conditions\".format(len(final_abs)))","f62f98c9":"#Plot the final results\nfig,ax = plt.subplots(1,1, figsize=(10,10))\nfinal_abs.plot(markersize=100,ax=ax, label=\"Airbnbs\")\nyankee_stadium.plot(markersize=300,color='red',ax=ax, label=\"Yankee Stadium\")\n\nplt.title(\"Airbnbs that meet all conditions\")\n\nhandles, labels = ax.get_legend_handles_labels()\nfig.legend(handles, labels, loc='upper right')","2797f5d3":"#Lets look at the final results\nfinal_abs","e960f156":"<h1 align=\"center\"> Spatial Analysis of Airbnb listings in NYC<\/h1>\n\n <h2> Before we Begin: <\/h2> \n To reproduce this work, you will need to the following datases from the NYC Open Data site:<br>\n 1.   https:\/\/data.cityofnewyork.us\/City-Government\/Neighborhood-Tabulation-Areas\/cpf4-rkhq<br>\n 2.   https:\/\/data.cityofnewyork.us\/Transportation\/Subway-Stations\/arq3-7z49 <br><br>\n **This project also takes advantage of GeoPandas for spatial analysis\/plotting of maps: http:\/\/geopandas.org\/** <br><br>\n \n <h2> Introduction <\/h2>In this kernel I explore the NYC Airbnb listings dataset in a spatial context. I also conduct an analysis to find a listing that meets specific criteria for an upcoming trip where I theoretically attend a New York Yankees baseball game.\n \n <br><br><br>\n <h2> Outline: <\/h2>\n \n I. <b> Understanding our data<\/b> <br>\n a) [Explore Data](#explore)<br>\n \n II. <b> Borough\/Neighborhood Charts and Maps<\/b> <br>\n a) [Borough Plots](#cbbmap)<br>\n b) [Neighborhood Map](#nbmap)<br>\n c) [Fixed Neighborhood Map](#rnbmap)<br>\n \n III. <b> Yankee Stadium Analysis<\/b><br>\n a) [Criteria](#yankeestadium)<br>\n b) [Mapping Yankee Stadium](#yankeesmap)<br>\n c) [Subway Analysis](#subways)<br>\n d) [Criteria Analysis](#criteria)<br>\n e) [Airbnb's near Subways](#abnearsubways)<br>\n \n IV. <b> Final Results! <\/b> <br>\n a) [Airbnbs that meet all criteria](#finalresults)<br>\n","134c0141":"### Lets explore neighborhoods:\n <a id=\"nbmap\"><\/a>\n### We do not have the geometries of neighborhoods, so lets bring in a CSV file from the NYC Open Data Site. It has wkt in a geometry column. \n### We can convert that to a GeoPandas Data Frame","d450967c":"# Borough\/Neighborhood Charts & Maps:\n <a id=\"cbbmap\"><\/a>\n### Lets do an aggregation by borough, look at a bar chart, then use geopandas to read in a basemap","14ce1acd":"# Understanding our Data\n <a id=\"explore\"><\/a>First we will bring in the data, look at its structure, data types, and do make some simple plots","1fce489a":"# Final Results\n##### Here we will do our final analysis. We will identify the airbnbs that meet all of our conditions\n <a id=\"finalresults\"><\/a>","778c5417":"### **I now want to do some additional spatial analysis.**\n#### **Lets say that I am visiting NYC to go check out a Yankee game. ** <br>\n <a id=\"yankeestadium\"><\/a>\n  **Here are my criteria:**\n  <ol>\n     <li> I want to stay within 2 miles of the stadium<\/li>\n     <li> I want to stay within 1\/4 mile of a subway station that services the D or 4 line<\/li>\n     <li> I want to stay in a place that is less than $250 a night <\/li>\n     <li> The host must have more than 10 reviews<\/li>\n     <li> The minimum night max can not be more than 3 days. We are only coming for an extended weekend<\/li>\n     <li> I want to stay in a place where I can have the entire apartment\/home. I have friends coming in<\/li>\n     <\/ol>\n","8b0813af":"### WOAH! See a problem? This is no bueno.\n### Why are there so many areas with missing data?\n### My guess is that the neighborhood names do not exactly align**","6e1bdbea":"### The neighborhood names do not exactly align:\n# <a id=\"rnbmap\"><\/a>\n# **Lets instead do some spatial operations to find exactly where each Airbnb is located**","71b61c72":"### We now have all airbnbs within 2 miles of Yankee Stadium\n##### We should now select all airbnbs that meet our other crtieria\n <a id=\"criteria\"><\/a>\n","170674a9":"#### Looking at Subways:\n <a id=\"subways\"><\/a>\nLets add subway data","534b43c8":"<h1 align=\"center\"> The End!<\/h1>\n\n <h2 align=\"center\"> Thank you for exploring this notebook <\/h2> \n\n","5566ecf1":"### **BEAUTIFUL! **","a12c798e":"### We now need to verify airbnbs within 1\/4 mile of subway stations that serve the D or 4 lines\n# <a id=\"abnearsubways\"><\/a>","4d015540":"# Yankee Stadium Maps & Analysis:\n <a id=\"yankeesmap\"><\/a>\n"}}