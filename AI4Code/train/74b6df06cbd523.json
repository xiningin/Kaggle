{"cell_type":{"508d72ea":"code","93f56ee9":"code","2d945e10":"code","03f4ded9":"code","b70d8b78":"code","7dc514cb":"code","03b49203":"code","645ba0e8":"code","00673bbf":"code","207f6b22":"code","4cd6012c":"code","bbb6a17d":"code","54cfb44e":"code","66319430":"markdown","8f0f35d5":"markdown","5a9e4970":"markdown","f711210c":"markdown","3d101ebd":"markdown","3546294d":"markdown","d31c1377":"markdown","f34fbbba":"markdown","562afab2":"markdown","7547db3b":"markdown","1b9beea7":"markdown","29eef54d":"markdown","cdc971bd":"markdown","888ab158":"markdown","d3ce201a":"markdown","dd23bf9a":"markdown"},"source":{"508d72ea":"from keras.models import Sequential\nfrom keras.layers import Conv2D\nfrom keras.layers import MaxPool2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense\nfrom keras.layers import Dropout # optionally we can remove dropout from our layers\nfrom keras.optimizers import SGD\nfrom keras.optimizers import RMSprop\nfrom keras.preprocessing.image import ImageDataGenerator","93f56ee9":"classifier = Sequential()","2d945e10":"classifier.add(Conv2D(filters = 32,\n                        kernel_size = 3,\n                        input_shape = [128, 128, 3],\n                        activation = 'relu'))","03f4ded9":"classifier.add(MaxPool2D(pool_size = 2,\n                        strides = 2))","b70d8b78":"# Second convolution layer\nclassifier.add(Conv2D(filters = 32,\n                        kernel_size = 3,\n                        activation = 'relu'))\nclassifier.add(Dropout(0.5))\nclassifier.add(MaxPool2D(pool_size = 2,\n                        strides = 2))\n\n# Third convolution layer\nclassifier.add(Conv2D(filters = 32,\n                        kernel_size = 3,\n                        activation = 'relu'))\nclassifier.add(Dropout(0.2))\nclassifier.add(MaxPool2D(pool_size = 2,\n                        strides = 2))\n\n# Fourth convolution layer\nclassifier.add(Conv2D(filters = 32,\n                        kernel_size = 3,\n                        activation = 'relu'))\nclassifier.add(Dropout(0.2))\nclassifier.add(MaxPool2D(pool_size = 2,\n                        strides = 2))","7dc514cb":"classifier.add(Flatten())","03b49203":"classifier.add(Dense(units = 32,\n                   activation = 'relu'))\nclassifier.add(Dense(units = 1,\n                activation = 'sigmoid'))","645ba0e8":"classifier.compile(optimizer = RMSprop(),\n                   loss = 'binary_crossentropy',\n                   metrics = ['accuracy'])","00673bbf":"classifier.summary()","207f6b22":"train_datagen = ImageDataGenerator(\n        rescale = 1.\/255,\n        shear_range = 0.2,\n        zoom_range = 0.2,\n        horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","4cd6012c":"training_set = train_datagen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/',\n                                                 target_size = (128, 128),\n                                                 batch_size = 32,\n                                                 class_mode = 'binary')","bbb6a17d":"test_set = test_datagen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/test\/',\n                                            target_size = (128, 128),\n                                            batch_size = 32,\n                                            class_mode = 'binary')","54cfb44e":"classifier.fit(x = training_set,\n                epochs = 15,\n                validation_data = test_set)","66319430":"# Introduction\nHi!\nThis notebook uses one of the hottest topics in Deep Learning at the moment, the **Convolutional Neural Network**.\nA CNN looks basically like such:\n![](https:\/\/miro.medium.com\/max\/2000\/1*vkQ0hXDaQv57sALXAJquxA.jpeg)\n\n*More information about Convolutional Neural Networks can be found [here](https:\/\/brilliant.org\/wiki\/convolutional-neural-network\/).*","8f0f35d5":"# Step 1 - Convolution","5a9e4970":"# Step 4 - Full connection (output layer)","f711210c":"Providing test set also using batches.","3d101ebd":"# Importing libraries\n*Note about using dropout: There is not a rule of thumb whether or not the use of Dropout between CNN layers improves the results and in this case the results were approximately the same with or without it.*","3546294d":"# Visualising the results\n\nOur model has an accuracy of ~95%, which is without any doubt an outstanding outcome.","d31c1377":"# Step 3 - Flattening","f34fbbba":"# Step 2 - Pooling","562afab2":"# Adding additional layers\nFollowing the same pattern as the first.","7547db3b":"Providing training set using batches.","1b9beea7":"# Visualising the summary of the network","29eef54d":"# Compiling the neural network","cdc971bd":"# Fitting the classifier to the dataset\nAnd, of course, visualising the results of our model.","888ab158":"# Importing train and test images","d3ce201a":"# Thank you for your attention!\nDon't forget to leave an upvote if you enjoyed this notebook and don't forget to leave any feedback or suggestion in the comments below. \n\nHave a nice day! :)","dd23bf9a":"# Initialising the Neural Network"}}