{"cell_type":{"26966ac2":"code","f7bcb625":"code","ce651b0d":"code","f97c51ec":"code","d46f4f3a":"code","96ae4e2f":"code","1d35f9cc":"code","7e96c745":"code","0ca320a0":"code","dc087491":"code","db221670":"code","4b787d17":"code","5e06de7e":"code","04a9679b":"code","08125c00":"code","83b8829b":"code","6175ea45":"code","af5fd114":"code","e99fdfa6":"code","196bf14a":"code","185577eb":"code","87afb35a":"code","b664db0d":"code","4b377e1d":"code","ef0927ce":"code","45a9a70a":"code","f9b511b4":"code","ec7f3c3d":"code","65f4c352":"code","a60eb52e":"code","246606fd":"code","7668a0f5":"code","4a914b98":"code","a98ff4db":"code","bf073862":"code","3ad533b3":"code","aa8d262d":"code","3cae011b":"code","1e4e9b16":"code","cb07b861":"code","d686fa7b":"code","aea78e6a":"code","92d6326c":"code","117be751":"code","ad7d7f36":"code","bea78290":"markdown","eb723f74":"markdown","9d271504":"markdown","9bd6eec6":"markdown","b00018d8":"markdown"},"source":{"26966ac2":"import numpy as np  #For numarical calculation\nimport pandas as pd # This is use dataset related operation\nimport matplotlib.pyplot as plt  #use for visulaization\nimport seaborn as sns    # use for 3d visulization","f7bcb625":"import os\nprint(os.listdir('..\/input\/titanic'))","ce651b0d":"# set our Dataframe\ntrain_df = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('..\/input\/titanic\/test.csv')\nsub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","f97c51ec":"train_df.head(2)","d46f4f3a":"train_df.shape","96ae4e2f":"train_df.isnull().sum()","1d35f9cc":"import pandas_profiling as pp","7e96c745":"pp.ProfileReport(train_df)","0ca320a0":"test_df.head(2)","dc087491":"test_df.shape","db221670":"test_df.isnull().sum()","4b787d17":"train_df['Age']=train_df['Age'].fillna(train_df['Age'].median())","5e06de7e":"test_df.info()","04a9679b":"train_df['Embarked']=train_df['Embarked'].fillna(train_df['Embarked'].mode()[0])","08125c00":"test_df['Age']=test_df['Age'].fillna(test_df['Age'].median())","83b8829b":"train_df.drop(['PassengerId', 'Name', 'Cabin'], axis=1, inplace=True)","6175ea45":"test_df.drop(['PassengerId', 'Name', 'Cabin'], axis=1, inplace=True)","af5fd114":"sns.heatmap(train_df.isnull(), yticklabels=False, cbar=False)","e99fdfa6":"sns.heatmap(test_df.isnull(),yticklabels=False, cbar=False)","196bf14a":"sns.countplot(x='Survived', hue='Sex', data=train_df)","185577eb":"sns.countplot(x='Embarked' , hue='Survived' , data=train_df)","87afb35a":"sns.countplot(x='SibSp', hue='Survived', data=train_df)","b664db0d":"plt.figure(figsize=(10,5))\nsns.distplot(train_df['Age'], bins=24, color='b')","4b377e1d":"columns_obj=train_df.select_dtypes('object').columns","ef0927ce":"from sklearn.preprocessing import LabelEncoder\nLE=LabelEncoder()\ntrain_df[columns_obj]=train_df[columns_obj].apply(LE.fit_transform)\ntest_df[columns_obj]=test_df[columns_obj].apply(LE.fit_transform)\ntrain_df[columns_obj].head()","45a9a70a":"train_df.head()","f9b511b4":"test_df.head()","ec7f3c3d":"train_df.corr()","65f4c352":"from xgboost import XGBClassifier\nregressor=XGBClassifier()","a60eb52e":"# Machine Learning \nX = train_df.drop(['Survived'], 1).values # select independant features\ny = train_df['Survived'].values #select dependant features","246606fd":"from sklearn.preprocessing import StandardScaler\n\nscale = StandardScaler()\nscale.fit(X)\n\nX = scale.transform(X)","7668a0f5":"# Split data to 80% training data and 20% of test to check the accuracy of our model\nfrom sklearn.model_selection import train_test_split, cross_val_score\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","4a914b98":"#hyperparameter optamization\nbooster=['gbtree','gblinear']\nbase_score=[0.25,0.5,0.75,1]","a98ff4db":"n_estimators=[100,500,900,1100,1500]\nmax_depth=[2,3,5,10,15]\nbooster=['gbtree','gblinear']\nlearning_rate=[0.05,0.1,0.15,0.20]\nmin_child_weight=[1,2,3,4]\nhyperparameter_grid = {\n     \n     'n_estimators': n_estimators,\n     'max_depth': max_depth,\n     'learning_rate': learning_rate,\n     'min_child_weight': min_child_weight,\n     'booster': booster,\n     #'base_score': base_score\n }","bf073862":"from sklearn.model_selection import RandomizedSearchCV\nrandom_cv= RandomizedSearchCV( estimator=regressor, param_distributions=hyperparameter_grid, cv=5,n_iter=50,\n                              scoring = 'neg_mean_absolute_error', n_jobs=4,\n                             verbose=5, return_train_score=True,\n                             random_state=42)","3ad533b3":"random_cv.fit(X_train,y_train)","aa8d262d":"\n       \n\nrandom_cv.best_estimator_","3cae011b":"import xgboost\nregressor=xgboost.XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=1, gamma=0,\n              learning_rate=0.05, max_delta_step=0, max_depth=3,\n              min_child_weight=3, missing=None, n_estimators=100, n_jobs=1,\n              nthread=None, objective='binary:logistic', random_state=0,\n              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n              silent=None, subsample=1, verbosity=1)\n\n","1e4e9b16":"regressor.fit(X_train,y_train)","cb07b861":"test_df.head()","d686fa7b":"# Predict our file test\ntest_X = test_df.values\ntest_X = scale.transform(test_X)","aea78e6a":"y_pred=regressor.predict(test_X)","92d6326c":"y_pred","117be751":"sub.head()\nsub.to_csv('submission.csv', index=False)\nsub.head()","ad7d7f36":"sub['Survived'] = y_pred # Best Submission (Top 5% LB)\nsub.to_csv('xgb_submission.csv', index=False)\nsub.head(10)","bea78290":"The competition is simple: use machine learning to create a model that predicts which passengers survived the Titanic shipwreck. ","eb723f74":"Here we clearly seen at Embarked is C survival chance is maximum","9d271504":"we fill tha NAN value in age both set and embarked also and we remove a column like PassengerId and Name","9bd6eec6":"here we clearly seen the strength of survival women is maximum","b00018d8":"here we clearly seen the strength of survival women is maximum"}}