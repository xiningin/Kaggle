{"cell_type":{"00f6304d":"code","1914a017":"code","0fe626d3":"code","8ec20162":"code","802e84af":"code","42fd203f":"code","fefa98a7":"code","bd5a3ec0":"code","7a2aa414":"code","4a639014":"code","e16aed04":"code","7b405eeb":"code","6f75c58c":"code","5646d0b8":"code","82039673":"code","20a41ec2":"code","dc256ff8":"markdown","6440ae8d":"markdown","d502552d":"markdown","a48158fa":"markdown","f165ced1":"markdown","d58e6d24":"markdown","4b1035a6":"markdown","15b8191c":"markdown","2da70070":"markdown","2eb51ab6":"markdown"},"source":{"00f6304d":"import pandas as pd ","1914a017":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n\npd.set_option('display.max_columns', None)\nfrom mlxtend.frequent_patterns import apriori, association_rules","0fe626d3":"def create_invoice_product_df(dataframe, id=False):\n    if id:\n        return dataframe.groupby(['Invoice', \"StockCode\"])['Quantity'].sum().unstack().fillna(0). \\\n            applymap(lambda x: 1 if x > 0 else 0)\n    else:\n        return dataframe.groupby(['Invoice', 'Description'])['Quantity'].sum().unstack().fillna(0). \\\n            applymap(lambda x: 1 if x > 0 else 0)","8ec20162":"def create_rules(dataframe, id=True, country=\"Germany\"):\n    dataframe = dataframe[dataframe['Country'] == country]\n    dataframe = create_invoice_product_df(dataframe, id)\n    #her \u00fcr\u00fcn\u00fcn birlikte g\u00f6r\u00fclme olas\u0131l\u0131klar\u0131\n    frequent_itemsets = apriori(dataframe, min_support=0.01, use_colnames=True)\n    #support de\u011ferine g\u00f6re birliktelik kurallar\u0131n\u0131 \u00e7\u0131kar\u0131yoruz.B\u00fct\u00fcn olas\u0131 \u00e7iftleri i\u00e7in .\n    #consequent support: ikinci \u00fcr\u00fcn\u00fcn al\u0131nma olas\u0131l\u0131\u011f\u0131\n    #antecedent support: ilk \u00fcr\u00fcn\u00fcn al\u0131nma olas\u0131l\u0131\u011f\u0131\n    #lift de\u011ferine odaklanmak mant\u0131kl\u0131d\u0131r.\n    rules = association_rules(frequent_itemsets, metric=\"support\", min_threshold=0.01)\n    return rules","802e84af":"def retail_data_prep(dataframe):\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[dataframe[\"Quantity\"] > 0]\n    dataframe = dataframe[dataframe[\"Price\"] > 0]\n    replace_with_thresholds(dataframe, \"Quantity\")\n    replace_with_thresholds(dataframe, \"Price\")\n    return dataframe","42fd203f":"df_ = pd.read_csv('..\/input\/online-retail-ii-data-set-from-ml-repository\/Year 2010-2011.csv', encoding = 'unicode_escape')\ndf = df_.copy()\ndf['StockCode'].head()","fefa98a7":"df.head()","bd5a3ec0":"df = retail_data_prep(df)\ndf.head()\nrules = create_rules(df)\nrules.head()","7a2aa414":"def check_id(df,StockCode):\n    product_name = df[df[\"StockCode\"] == StockCode][[\"Description\"]].values[0].tolist()\n    print(product_name)\n\n","4a639014":"check_id(df, \"21987\")\ncheck_id(df, \"23235\")\ncheck_id(df, \"22747\")","e16aed04":"df = retail_data_prep(df)\ndf.head()\nrules = create_rules(df)\nrules.head()","7b405eeb":"rules_grm = create_rules(df, country=\"Germany\")\nrules_grm.sort_values(\"lift\", ascending=False).head(20)","6f75c58c":"def arl_recommender(rules_df, product_id,df, rec_count=1):\n    sorted_rules = rules_df.sort_values(\"lift\", ascending=False)\n    recommendation_list = []\n    for i, product in sorted_rules[\"antecedents\"].items():\n        for j in list(product):\n            if j == product_id:\n                #en y\u00fcksek consequent de\u011ferine sahip \u00fcr\u00fcn\u00fc \u00f6nerir\n                recommendation_list.append(list(sorted_rules.iloc[i][\"consequents\"]))\n    recommendation_list = list({item for item_list in recommendation_list for item in item_list})\n    #\u00f6nerilen \u00fcr\u00fcnlerin isimlerini otomatik yazar\n    ids = recommendation_list[:rec_count]\n    for id in ids:\n        print(df[df[\"StockCode\"] == id][[\"Description\"]].values[0].tolist())","5646d0b8":"arl_recommender(rules, \"21987\", df, 1)\n","82039673":"arl_recommender(rules, \"23235\", df, 2)\n","20a41ec2":"arl_recommender(rules, \"22747\", df, 3)","dc256ff8":"Suggestions for products with ID are expressed with their names.\n\nID'li \u00fcr\u00fcnler i\u00e7in \u00f6neriler isimleri ile ifade edilir.","6440ae8d":"**check_id:** Function that writes the names of the products whose IDs are entered.\n**check_id:** ID'leri girilen \u00fcr\u00fcnlerin isimlerini yazan fonksiyon.","d502552d":"We extract association rules based on the **support** value. For all possible pairs .\n**consequent support**: probability of getting the second item\n**antecedent support**: probability of getting the first product\nIt makes sense to focus on **lift** value.\n\n\n**support** de\u011ferine dayal\u0131 olarak birliktelik kurallar\u0131n\u0131 \u00e7\u0131kar\u0131r\u0131z. T\u00fcm olas\u0131 \u00e7iftler i\u00e7in.\n**consequent support**: ikinci \u00f6\u011feyi alma olas\u0131l\u0131\u011f\u0131\n**antecedent support**: ilk \u00fcr\u00fcn\u00fc alma olas\u0131l\u0131\u011f\u0131\n**lift** de\u011ferine odaklanmak mant\u0131kl\u0131d\u0131r.","a48158fa":"We extract association rules based on the support value. For all possible pairs . consequent support: probability of getting the second item antecedent support: probability of getting the first product It makes sense to focus on lift value.\n\n\nDestek de\u011ferine g\u00f6re birliktelik kurallar\u0131n\u0131 \u00e7\u0131kar\u0131yoruz. T\u00fcm olas\u0131 \u00e7iftler i\u00e7in. m\u00fcteakip destek: ikinci \u00f6\u011feyi alma olas\u0131l\u0131\u011f\u0131 \u00f6nc\u00fcl destek: ilk \u00fcr\u00fcn\u00fc alma olas\u0131l\u0131\u011f\u0131 Art\u0131\u015f de\u011ferine odaklanmak mant\u0131kl\u0131d\u0131r.","f165ced1":"Our dataset is ready. Now it's time to read.\nVeri setimiz haz\u0131r. \u015eimdi okuma zaman\u0131","d58e6d24":"The interquartile range is the difference between the first(Q1) and third quartiles(Q3). It can be mathematically represented as IQR = Q3 - Q1.\nThe interquartile range is considered to be a robust statistic because it is not distorted by outliers like the average (or mean).\n\n\u00c7eyrekler aras\u0131 aral\u0131k, birinci(Q1) ve \u00fc\u00e7\u00fcnc\u00fc \u00e7eyrekler(Q3) aras\u0131ndaki farkt\u0131r. Matematiksel olarak IQR = Q3 - Q1 \u015feklinde g\u00f6sterilebilir.\n1. \u00c7eyrekler aras\u0131 aral\u0131k, ortalama (veya ortalama) gibi ayk\u0131r\u0131 de\u011ferler taraf\u0131ndan bozulmad\u0131\u011f\u0131 i\u00e7in sa\u011flam bir istatistik olarak kabul edilir.","4b1035a6":"We arrange the rule according to Germany\nKural\u0131 Almanya'ya g\u00f6re d\u00fczenliyoruz","15b8191c":"We extract the invoices containing the letter C from the data set.\nC harfini i\u00e7eren faturalar\u0131 veri setinden \u00e7\u0131kar\u0131yoruz.","2da70070":"**Business Problem:** We want to recommend products to users who have reached the basket stage.\n**Dataset Story:** The dataset named Online Retail II includes the sales of a UK-based online store between 01\/12\/2009 -09\/12\/2011. The product catalog of this company includes souvenirs. It can also be considered as promotional products. There is also information that most of his customers are wholesalers.\n\n**\u0130\u015f Problemi:** Sepet a\u015famas\u0131na gelmi\u015f kullan\u0131c\u0131lara \u00fcr\u00fcn \u00f6nermek istiyoruz.\n**Veri K\u00fcmesi \u00d6yk\u00fcs\u00fc:** \u00c7evrimi\u00e7i Perakende II adl\u0131 veri k\u00fcmesi, 01\/12\/2009 -09\/12\/2011 tarihleri aras\u0131nda \u0130ngiltere merkezli bir \u00e7evrimi\u00e7i ma\u011fazan\u0131n sat\u0131\u015flar\u0131n\u0131 i\u00e7erir. Bu \u015firketin \u00fcr\u00fcn katalo\u011funda hediyelik e\u015fyalar bulunmaktad\u0131r. Promosyon \u00fcr\u00fcnleri olarak da de\u011ferlendirilebilir. M\u00fc\u015fterilerinin \u00e7o\u011funun toptanc\u0131 oldu\u011fu bilgisi de var.","2eb51ab6":"With the create_invoice_product_df  function, the NAs are removed and the table consists of 1 and 0.\n\ncreate_invoice_product_df i\u015flevi ile NA'lar kald\u0131r\u0131l\u0131r ve tablo 1 ve 0'dan olu\u015fur."}}