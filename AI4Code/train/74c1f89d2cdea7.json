{"cell_type":{"49e0c848":"code","b892eb63":"code","faffd8de":"code","445c8c24":"code","6d590266":"code","1e4d7982":"code","49559cb9":"code","e3bd8faf":"code","6cc15305":"code","1928719b":"code","328b887a":"code","e96e20d2":"code","4ab93d0f":"code","d8928bb6":"code","490460ac":"code","9b452f5e":"code","95a83212":"markdown","57b18120":"markdown","6b9ca3cc":"markdown"},"source":{"49e0c848":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)import plotly.express as px\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b892eb63":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsexemptionscsv\/exemptions.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'exemptions.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","faffd8de":"df.isnull().sum()","445c8c24":"fig = px.bar(df, \n             x='DATE_IMPLEMENTED', y='MEASURE', color_discrete_sequence=['#2B3A67'],\n             title='Measures implemented', text='REGION')\nfig.show()","6d590266":"fig = px.bar(df, \n             x='ENTRY_DATE', y='CATEGORY', color_discrete_sequence=['crimson'],\n             title='Exemptions Category', text='GRANTING_AUTHORITY')\nfig.show()","1e4d7982":"plt.figure(figsize=(20, 10))\nplt.subplot(431)\nsns.countplot(df['REGION'])\nplt.title('REGION')\nplt.xlabel('')\nplt.subplot(432)\nsns.countplot(df['LOG_TYPE'])\nplt.title('LOG_TYPE')\nplt.xlabel('LOG_TYPE')\nplt.xticks(rotation=45)\nplt.subplot(433)\nsns.countplot(df['CATEGORY'])\nplt.title('CATEGORY')\nplt.xlabel('CATEGORY')\nplt.xticks(rotation=45)\nplt.subplot(434)\nsns.countplot(df['MEASURE'])\nplt.xticks(rotation=45)\nplt.title('MEASURE')\nplt.xlabel('MEASURE')","49559cb9":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"MEASURE\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"winter\"))\nplt.title('Measures Adopted',\n         fontsize=15);","e3bd8faf":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"CATEGORY\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"ocean\"))\nplt.title('Exemptions Categories',\n         fontsize=15);","6cc15305":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"REGION\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"rainbow\"))\nplt.title('Regions of Exemptions',\n         fontsize=15);","1928719b":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"SOURCE\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"flag\"))\nplt.title('Source of Exemptions',\n         fontsize=15);","328b887a":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"SOURCE_TYPE\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"Set1\"))\nplt.title('SOURCE TYPE',\n         fontsize=15);","e96e20d2":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"GRANTING_AUTHORITY\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"Set2\"))\nplt.title('Exemptions Granting Authority',\n         fontsize=15);","4ab93d0f":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.MEASURE)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","d8928bb6":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.CATEGORY)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","490460ac":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.COMMENTS)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","9b452f5e":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#a83a32','#a8324e','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Kaggle Notebook Runner: Mar\u00edlia Prata, not a DS. Stick around, I will be right back. @mpwolke' )","95a83212":"#There is many NANs. Though if I remove them I couldn't plot the WordClouds.","57b18120":"#ACAPS - HUMANITARIAN EXEMPTIONS To COVID-19 Government Measures\n\nWorldwide, governments are implementing a range of measures to respond to the COVID19 pandemic. These actions may hamper humanitarian operations, particularly measures that restrict entry, movement, or people gathering. In some contexts, exemptions for\nhumanitarian actors are in place to prevent the disruption of operations. The report explores humanitarian exemptions to measures adopted by governments in response to the COVID-19 pandemic.\n\nACAPS\u2019 reports are a component of their broader effort to monitor the secondary impacts of the pandemic and are based on publicly available data assembled by their team through wide scanning of information across the globe. \nhttps:\/\/www.acaps.org\/sites\/acaps\/files\/products\/files\/20200526_acaps_short_note_covid19_humanitarian_exemptions.pdf","6b9ca3cc":"Policies and Behaviours - Pre-Outbreak Context\n\nHealth\/Living Conditions and Essencial Services\/ Social Cohesion & Protection\/ Humanitarian and Development Operations \n\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQwbEEQoPHPz3Cs3g4F70FBpYJwaukXrd1-vg&usqp=CAU)acaps.org"}}