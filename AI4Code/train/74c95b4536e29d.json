{"cell_type":{"5b94005f":"code","c4a37281":"code","29c51ef6":"code","d4b650c0":"code","1b8c1f81":"code","5501f196":"code","50b8a76a":"code","1eaaa07f":"code","240f88ad":"markdown","20ff4727":"markdown","6f2f21cc":"markdown","1a38646c":"markdown","fb574f7f":"markdown"},"source":{"5b94005f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4a37281":"df = pd.read_csv('\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndf.describe()","29c51ef6":"df.isna().sum()","d4b650c0":"plt.style.use('ggplot')\np = df.hist(figsize=(10,10))","1b8c1f81":"target = df['DEATH_EVENT']\ndf = df.drop('DEATH_EVENT', axis=1)","5501f196":"from sklearn.preprocessing import RobustScaler\n\nscaler = RobustScaler()\n\nscaler.fit(df)\n\nscaled_data = scaler.transform(df)","50b8a76a":"from sklearn.decomposition import PCA\npca = PCA(n_components = 0.99)\n\npca.fit(scaled_data)\nreduced = pca.transform(scaled_data)","1eaaa07f":"plt.figure(figsize=(10,6))\n\nfig, ax =plt.subplots()\nx = np.arange(1,12, step =1)\ny = np.cumsum(pca.explained_variance_ratio_)\n\nplt.ylim(0.0, 1.1)\nplt.plot(x, y, marker='o', linestyle='--', color='b')\n\nplt.xlabel('Number of components')\nplt.ylabel('Cumulative variance (%)')\nplt.title('Number of components vs variance explained')\n\nplt.axhline(y=0.95, color='r', linestyle ='-')\nplt.text(1, 0.85, '95% cutoff')\n\nax.grid(axis='y')\nplt.show()","240f88ad":"Looks like in order to get 95% of variance explained, 8 principal components are needed","20ff4727":"Before we perform PCA, we will need to scale our data so that each feature only has a single unit of variance","6f2f21cc":"Separate out our target column, death event, from main dataframe","1a38646c":"We typically want the explained variance to be between 95-99%:","fb574f7f":"We have no missing values in the dataframe"}}