{"cell_type":{"7363cb2a":"code","28ffcc97":"code","a5228147":"code","9c7693da":"code","2bd8c3e0":"code","b4d7f222":"code","ba25e032":"code","ab0f91eb":"code","385bef4d":"code","0e24d668":"code","07db7c83":"code","9c72ae32":"code","1ed38e50":"markdown","0097252c":"markdown","68cbe024":"markdown","773cefab":"markdown","c8649040":"markdown","8443370d":"markdown","8e77a221":"markdown","d393c0b8":"markdown","305eb0b1":"markdown","00988517":"markdown"},"source":{"7363cb2a":"pip install -q tensorflow-io","28ffcc97":"import matplotlib.pyplot as plt\nimport numpy as np\nimport tensorflow as tf\nimport tensorflow_io as tfio","a5228147":"import glob","9c7693da":"data_directory = '..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification'\nscan_id = \"00000\"\nsplit = \"train\"\nmri_type = 'T2w'","2bd8c3e0":"slices = sorted(glob.glob(f\"{data_directory}\/{split}\/{scan_id}\/{mri_type}\/*.dcm\"))","b4d7f222":"lossy_image = []\nfor i in slices : \n    image_bytes_i = tf.io.read_file(i)\n    image_bytes_i.shape\n    skipped_i = tfio.image.decode_dicom_image(image_bytes_i, on_error='skip', dtype=tf.uint8)\n    lossy_image_i = tfio.image.decode_dicom_image(image_bytes_i, scale='auto', on_error='lossy', dtype=tf.uint8)\n    lossy_image.append(lossy_image_i)\nprint(lossy_image_i.shape)","ba25e032":"len(lossy_image)","ab0f91eb":"plt.imshow(np.squeeze(lossy_image[150].numpy()), cmap='gray')","385bef4d":"plt.imshow(np.squeeze(lossy_image[230].numpy()), cmap='gray')","0e24d668":"data_directory = '..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification'\nscan_id = \"00044\"\nsplit = \"train\"\nmri_type = 'FLAIR'\nslices = sorted(glob.glob(f\"{data_directory}\/{split}\/{scan_id}\/{mri_type}\/*.dcm\"))\nlossy_image = []\nfor i in slices : \n    image_bytes_i = tf.io.read_file(i)\n    image_bytes_i.shape\n    skipped_i = tfio.image.decode_dicom_image(image_bytes_i, on_error='skip', dtype=tf.uint8)\n    lossy_image_i = tfio.image.decode_dicom_image(image_bytes_i, scale='auto', on_error='lossy', dtype=tf.uint8)\n    lossy_image.append(lossy_image_i)","07db7c83":"len(lossy_image)","9c72ae32":"plt.imshow(np.squeeze(lossy_image[150].numpy()), cmap='gray')","1ed38e50":"Here I share my code for MRI reading and viz within TF\n\nit could be a good alternative solution other than the pydicom package \n\nfeel free to comment and to make changes..","0097252c":"we test the viz with the patient with the id 0000","68cbe024":"we store the list of slices ","773cefab":"## viz of the slice 230","c8649040":"## viz of the slice 150","8443370d":"##  YES it is possible ","8e77a221":"Credits :\n\nDecode DICOM files for medical imaging : https:\/\/www.tensorflow.org\/io\/tutorials\/dicom\n\nEfficientnet3D with one MRI type : https:\/\/www.kaggle.com\/rluethy\/efficientnet3d-with-one-mri-type","d393c0b8":"First install tenserflow_io","305eb0b1":"we have here 408 slice in the MRI folder","00988517":"# Reading and Viewing MRI slices without pydicom"}}