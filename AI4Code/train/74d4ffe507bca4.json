{"cell_type":{"34eca63c":"code","d16ec561":"code","2c54f3db":"code","37a1c36f":"code","b17e4aed":"code","8ec9906d":"code","3435f05b":"code","f8633ec5":"code","2d271fbb":"code","502b59a5":"code","8d9d25de":"markdown","c4e70c18":"markdown","00d2f9cd":"markdown","f4f6d43c":"markdown","c02c4fdf":"markdown","068a9d80":"markdown","5598ff2e":"markdown","4e98afa1":"markdown","851c9331":"markdown"},"source":{"34eca63c":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import tree\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom treeviz_util import tree_print\nfrom sklearn.model_selection import train_test_split","d16ec561":"df = pd.read_csv('\/kaggle\/input\/mushroom-classification\/mushrooms.csv')\ndf.head()","2c54f3db":"df = df.replace({'class': {'e': 'edible', 'p': 'poisonous'},\n                'cap-shape': {'b': 'bell', 'c': 'conical', 'x': 'convex', 'f': 'flat', 'k': 'knobbed', 's': 'sunken'},\n\t\t\t\t'cap-surface': {'f': 'fibrous', 'g': 'grooves', 'y': 'scaly', 's': 'smooth'},\n\t\t\t\t'cap-color': {'n': 'brown', 'b': 'buff', 'c': 'cinnamon', 'g': 'gray', 'r': 'green', 'p': 'pink', 'u': 'purple', 'e': 'red', 'w': 'white', 'y': 'yellow'},\n\t\t\t\t'bruises': {'t': 'yes', 'f': 'no'},\n\t\t\t\t'odor': {'a': 'almond', 'l': 'anise', 'c': 'creosote', 'y': 'fishy', 'f': 'foul', 'm': 'musty', 'n': 'none', 'p': 'pungent', 's': 'spicy'},\n\t\t\t\t'gill-attachment': {'a': 'attached', 'd': 'descending', 'f': 'free', 'n': 'notched'},\n\t\t\t\t'gill-spacing': {'c': 'close', 'w': 'crowded', 'd': 'distant'},\n\t\t\t\t'gill-size': {'b': 'broad', 'n': 'narrow'},\n\t\t\t\t'gill-color': {'k': 'black', 'h': 'chocolate', 'n': 'brown', 'b': 'buff', 'g': 'gray', 'r': 'green', 'p': 'pink', 'u': 'purple', 'e': 'red', 'w': 'white', 'y': 'yellow', 'o': 'orange'},\n\t\t\t\t'stalk-shape': {'e': 'enlarging', 't': 'tapering'},\n\t\t\t\t'stalk-root': {'b': 'bulbous', 'c': 'club', 'u': 'cup', 'e': 'equal', 'z': 'rhizomorphs', 'r': 'rooted', '?': 'missing'},\n\t\t\t\t'stalk-surface-above-ring': {'k': 'silky', 'f': 'fibrous', 'y': 'scaly', 's': 'smooth'},\n\t\t\t\t'stalk-surface-below-ring': {'k': 'silky', 'f': 'fibrous', 'y': 'scaly', 's': 'smooth'},\n\t\t\t\t'stalk-color-above-ring': {'n': 'brown', 'b': 'buff', 'c': 'cinnamon', 'g': 'gray', 'o': 'orange', 'p': 'pink', 'e': 'red', 'w': 'white', 'y': 'yellow'},\n\t\t\t\t'stalk-color-below-ring': {'n': 'brown', 'b': 'buff', 'c': 'cinnamon', 'g': 'gray', 'o': 'orange', 'p': 'pink', 'e': 'red', 'w': 'white', 'y': 'yellow'},\n\t\t\t\t'veil-type': {'p': 'partial', 'u': 'universal'},\n\t\t\t\t'veil-color': {'n': 'brown', 'o': 'orange', 'w': 'white', 'y': 'yellow'},\n\t\t\t\t'ring-number': {'n': 'none', 'o': 'one', 't': 'two'},\n\t\t\t\t'ring-type': {'c': 'cobwebby', 'e': 'evanescent', 'f': 'flaring', 'l': 'large', 'n': 'none', 'p': 'pendant', 's': 'sheathing', 'z': 'zone'},\n\t\t\t\t'spore-print-color': {'k': 'black', 'h': 'chocolate', 'n': 'brown', 'b': 'buff', 'r': 'green', 'u': 'purple', 'w': 'white', 'y': 'yellow', 'o': 'orange'},\n\t\t\t\t'population': {'a': 'abundant', 'c': 'clustered', 'n': 'numerous', 's': 'scattered', 'v': 'several', 'y': 'solitary'},\n\t\t\t\t'habitat': {'g': 'grasses', 'l': 'leaves', 'm': 'meadows', 'p': 'paths', 'u': 'urban', 'w': 'waste', 'd': 'woods'}})\ndf.head()","37a1c36f":"y = df['class']\nX = df.drop(columns=['class'])\nX = pd.get_dummies(X)\nX.head()","b17e4aed":"X_train, X_test, y_train, y_test = train_test_split(X, y)","8ec9906d":"y_num = y.replace({'edible': 0, 'poisonous': 1})\ncorrs = pd.DataFrame(columns=['name', 'corr'])\nfor c in X.columns:\n    corr = y_num.corr(X[c])\n    corrs = corrs.append(pd.DataFrame([[c, corr]], columns=['name', 'corr']))\ncorrs.sort_values(by=['corr'])","3435f05b":"dtc = tree.DecisionTreeClassifier(max_depth=3)\ndtc.fit(X_train, y_train)\nscore = dtc.score(X_test, y_test)\nprint(f'Score: {score}\\n')\ntree_print(dtc, X)","f8633ec5":"mlp = MLPClassifier(solver='lbfgs', hidden_layer_sizes=5)\nmlp.fit(X_train, y_train)\nmlp.score(X_test, y_test)","2d271fbb":"[coef.shape for coef in mlp.coefs_]","502b59a5":"mlp_grid = MLPClassifier(solver='lbfgs')\nparameters = {\n    'alpha': [10.0 ** -i for i in range(1, 7)],\n    'hidden_layer_sizes': [5, 39, 117]\n}\ngrid = GridSearchCV(mlp_grid, parameters)\ngrid.fit(X_train, y_train)\ngrid_results = pd.DataFrame(grid.cv_results_)\ngrid_results","8d9d25de":"## Load Dataset","c4e70c18":"## Split into X and y data\nThe data is split so the column 'class' is the y variable and the other columns the X variable. X has been one-hot encoded.","00d2f9cd":"## Convert Labels\nThe labels are converted from single letters to word so it is clearer when you read it.","f4f6d43c":"## Split into testing and training data","c02c4fdf":"## Load Libraries","068a9d80":"## Correlation between columns","5598ff2e":"## Decision Tree","4e98afa1":"### Grid Search","851c9331":"## Multi-layer Perceptron"}}