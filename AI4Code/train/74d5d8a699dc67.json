{"cell_type":{"41eeb480":"code","d555bbcb":"code","f47dcf61":"code","df4ba17f":"markdown","b2475e2c":"markdown","2c5749f8":"markdown","7e796eda":"markdown"},"source":{"41eeb480":"import math","d555bbcb":"def bearing(x1,y1,x2,y2):\n    dx = x2 - x1\n    dy = y2 - y1\n    \n    if dy != 0:\n        a = math.atan(dx\/dy)\n        a = math.degrees (a)\n    \n        if dx > 0 and dy > 0: #both are pos.\n            \n            a = a + 0\n            \n        elif dx < 0 and dy > 0: #dx is neg. and dy is pos.\n            \n            a = a + 360\n            \n        elif dx < 0 and dy <0: #both are neg.\n            \n            a = a + 180\n            \n        elif dx > 0 and dy < 0: #dx is pos. and dy is neg.\n            \n            a = a +180\n            \n        elif dx == 0 and dy < 0: #dx is zero. and dy is neg.\n            a = 180.0\n            \n        elif dx == 0 and dy > 0: #dx is zero. and dy is pos.\n            a = 0.0\n            \n    elif dx > 0 and dy == 0: #dx is pos. and dy is zero #special case\n        a = 90.0\n        \n    elif dx < 0 and dy == 0: #dx is neg. and dy is zero  #special case\n        a = 270.0\n        \n    else: #dx is zero and dy is zero\n        a = \"None\" # Don't do this!\n\n    return a","f47dcf61":"#dx+ dy+\nprint(bearing(1,1,4,4))\n\n#dx- dy+\nprint(bearing(4,1,1,4))\n\n#dx- dy-\nprint(bearing(4,4,1,1))\n\n#dx+ dy-\nprint(bearing(1,4,4,1))\n\n#dx0 dy-\nprint(bearing(1,1,4,1))\n\n#dx0 dy+\nprint(bearing(1,1,1,4))\n\n#dx+ dy0\nprint(bearing(1,4,1,1))\n\n#dx- dy0\nprint(bearing(4,1,1,1))\n\n#dx0 dy0\nprint(bearing(1,1,1,1))\n\n\n\n","df4ba17f":"<font size='+3' color='ff0000'>\n \n* You code is fine, but I wanted to see a data story not a separate notebook and document","b2475e2c":"<font size='+3' color='ff0000'>\n \n* You should have included the images and text in the notebook as requested.","2c5749f8":"<font size='+3' color='ff0000'>\n \n* You should not return a mixture of numbers AND text from a function as it makes it hard to use, return 0 in the case\n* ","7e796eda":"<font size='+3' color='ff0000'>\n \n\n* We would customarily also include a function description as below\n\n    <font size='-1' color='ffffff'>\n<code>\n    def bearing(x1, y1, x2, y2):\n        \"\"\"\n        Summary: calculates whole circle bearings between 0 ansd 360 degrees\n        ------------------\n        arguments:\n        x1: x value of the from coordinate\n        y1: y value of the y coordinate\n        x2: x value to the to coordinate\n        y2: y value of the to coordinate\n        ------------------\n        returns:\n        bearing in decimal degrees\n        ------------------\n        notes:\n        coordinates with matching x and y returns a bearing of 0\n        \"\"\"\n\n        #code here\n    <\/code>"}}