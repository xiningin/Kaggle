{"cell_type":{"831fb49d":"code","be8756dc":"code","780f27fd":"code","c0c18817":"code","f8c2be89":"code","9e35dc09":"code","2141cb40":"code","ed06dc2c":"code","8029f4f1":"code","11e6cdd5":"code","e1f43e26":"code","6fe8e8cc":"code","5c34bbb1":"code","4b805d90":"code","a244d056":"code","6c7759d0":"code","06be350e":"code","f2e5a384":"code","f2b04a97":"code","745a3c77":"code","3275c886":"code","543c78ea":"code","764a9ebd":"code","5626d4cb":"code","760a6c31":"code","92eefdcc":"code","679e255b":"code","2eae14fb":"code","67fb3e13":"code","2057e5cd":"code","fa9c4c74":"code","b81e89cc":"code","d76b7014":"code","00658be7":"code","c830d51d":"code","44661384":"code","9f11b18b":"code","be99b107":"code","d1538efc":"code","f6ebe6b6":"markdown","6b741572":"markdown","6e61e514":"markdown","5119e935":"markdown","c5a35dc2":"markdown","32e8ca1b":"markdown","b2525975":"markdown","bdd59a8f":"markdown","6c943221":"markdown","6b7db7af":"markdown","65250590":"markdown","1a0a2ada":"markdown","162b4cd5":"markdown","d30626e7":"markdown","d9b8a7d7":"markdown","81aba7df":"markdown","c9aca9b1":"markdown","aca7d190":"markdown","63438aa3":"markdown","2bef04df":"markdown","9c104cc4":"markdown","ef5c17ae":"markdown","c59a583d":"markdown","7e202b91":"markdown","db687007":"markdown","1758098e":"markdown","936ca902":"markdown","cd73747e":"markdown","6deecaeb":"markdown"},"source":{"831fb49d":"#loading the data: \nimport numpy as np \nimport pandas as pd \nimport sqlite3\nimport matplotlib.pyplot as plt\n\npath = \"..\/input\/soccer\/\" \ndatabase = path + 'database.sqlite' \n\n# sqlite3.connect() Creates a connection object\nconn = sqlite3.connect(database)\ntables = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_master\n                        WHERE type='table';\"\"\", conn)\ntables","be8756dc":"countries = pd.read_sql('SELECT * FROM Country;', conn)\nplayer = pd.read_sql('SELECT * FROM Player;', conn)\nmatch = pd.read_sql('SELECT * FROM Match;', conn)\nleague = pd.read_sql('SELECT * FROM League;', conn)\nteam= pd.read_sql('SELECT * FROM Team;', conn)\nteam_attr = pd.read_sql('SELECT * FROM Team_Attributes;', conn)","780f27fd":"countries.head(5)","c0c18817":"player.head()","f8c2be89":"player.isnull().sum(), player.duplicated().sum()","9e35dc09":"team.head(3)","2141cb40":"team_attr.head(3)","ed06dc2c":"team.info()","8029f4f1":"team.isnull().sum(), team.duplicated().sum()","11e6cdd5":"team_attr.info()","e1f43e26":"team_attr['date'] = pd.to_datetime(team_attr['date'])","6fe8e8cc":"team_attr= team_attr.drop('buildUpPlayDribbling', axis='columns', inplace=True)","5c34bbb1":"team_attr= pd.read_sql('SELECT * FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id;', conn)\n","4b805d90":"team_attr.head(3)","a244d056":"team_attr.info()","6c7759d0":"league.head(5)","06be350e":"league.info(), league.duplicated().sum()","f2e5a384":"league= pd.read_sql('SELECT * FROM League JOIN Country ON League.country_id= Country.id;', conn)\n","f2b04a97":"match.head(5)","745a3c77":"match.columns","3275c886":"match.info()","543c78ea":"match['date'] = pd.to_datetime(match['date'])","764a9ebd":"match= pd.read_sql('SELECT match_api_id, Country.name as country_name, League.name as league_name, HomeTeam.team_long_name as HomeTeam_long_name, HomeTeam.team_short_name as HomeTeam_short_name , AwayTeam.team_long_name as AwayTeam_long_name , AwayTeam.team_short_name as AwayTeam_short_name, season, stage, date, home_team_api_id, away_team_api_id, home_team_goal,  away_team_goal FROM Match JOIN Country ON Match.country_id= Country.id JOIN League ON Match.league_id= League.id JOIN Team HomeTeam on Match.home_team_api_id=HomeTeam.team_api_id JOIN Team AwayTeam on Match.away_team_api_id=AwayTeam.team_api_id;', conn)\nmatch","5626d4cb":"match.info(), match.duplicated().sum()","760a6c31":"match['home_team_goal'].append(match['away_team_goal']).mean(), match['home_team_goal'].max(), match['away_team_goal'].max()\n","92eefdcc":"match['home_team_goal'].plot(kind='box')","679e255b":"match['away_team_goal'].plot(kind='box')","2eae14fb":"number_of_homeTeam_wins=(match['home_team_goal']>match['away_team_goal']).sum()\nnumber_of_homeTeam_wins","67fb3e13":"number_of_ties=(match['home_team_goal']==match['away_team_goal']).sum()\nnumber_of_ties","2057e5cd":"number_of_awayTeam_wins=(match['away_team_goal']>match['home_team_goal']).sum()\nnumber_of_awayTeam_wins","fa9c4c74":"data = np.array([1,2,3],dtype=int) \ndata[0] = number_of_homeTeam_wins\ndata[1] = number_of_ties\ndata[2] = number_of_awayTeam_wins\n\nlabels = 'Home Team', 'Tie', 'Away Team'\nfig1, ax1 = plt.subplots(figsize=(8,8))\nax1.pie(data, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","b81e89cc":"# importing libraries\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(10,8))\n# plotting first histogram\nplt.hist(match['home_team_goal'], label='Home Team', alpha=.7, edgecolor='red')\n  \n# plotting second histogram\nplt.hist(match['away_team_goal'], label='Away Team', alpha=0.7, edgecolor='yellow')\nplt.legend()\n  \n# Showing the plot using plt.show()\nplt.show()","d76b7014":"def winner(row):\n    if row['home_team_goal'] > row['away_team_goal']:\n        return row['HomeTeam_long_name']\n    elif row['home_team_goal'] < row['away_team_goal']:\n        return row['AwayTeam_long_name']\n    else:\n        return 'Tie'\n\nmatch['Winner'] = match.apply(winner, axis=1)","00658be7":"match['Winner'].value_counts()","c830d51d":"TopWinner=match['Winner'].value_counts()[1:2].index.tolist()\nTopWinner","44661384":"BottomWinner=match['Winner'].value_counts()[-1:].index.tolist()\nBottomWinner","9f11b18b":"topTeam= pd.DataFrame(team_attr[team_attr['team_long_name'].isin(TopWinner)])\n\nbottomTeam=pd.DataFrame(team_attr[team_attr['team_long_name'].isin(BottomWinner)])\n\ntwoTeams=topTeam.append(bottomTeam)","be99b107":"twoTeams.groupby(by = \"team_long_name\").mean()[['buildUpPlaySpeed','buildUpPlayDribbling','buildUpPlayPassing','chanceCreationPassing','chanceCreationCrossing', 'chanceCreationShooting','defencePressure', 'defenceAggression', 'defenceTeamWidth']].plot(kind = \"bar\",figsize=(10,10))\nplt.title('Comparison between the numberical measurement of team attributes in each team.')\nplt.xlabel('Team')\nplt.ylabel('values')","d1538efc":"from subprocess import call\ncall(['python', '-m', 'nbconvert', 'Investigate_a_Dataset.ipynb'])","f6ebe6b6":"According to the plot, there is a large difference between FC Barcelona (more frequent winner) and AC Aries-Avignon mean values for the numerical attributes. <\/br>\nFC Barcelona has a greater defenceTeamWidth, defenceAggression, defencePrressure, and chanceCreation shooting. ","6b741572":"We'll reconstruct the team_attr table using sql by attaching 'team name' columns to make the table more meaningful. ","6e61e514":"Since there are no duplicates, each team must have its own unique id.Therefore, we can use the team table to identity team names in the team_attr table.  <\/br>\nHowever, We can see there are some null values in team_fifa_api_id column, so we might avoid using this column when we inner join team with team_attr table, and instead rely on team_api_id column. ","5119e935":"More than half of the number of rows in this table is null for 'buildUpPlayDribbling' column. Therefore, it might be safer to just drop this column all in all. ","c5a35dc2":"As we can see, this table simply conveys the name of each country id. ","32e8ca1b":"# Does playing in home_country increase the chances of winning? ","b2525975":"There are 296 teams who won atleast once. <\/br>\nWe'll compare the attributes of the top winning team with the bottom winning teams. ","bdd59a8f":"Since a score of 10 is reasonable we can leave the values as they are. ","6c943221":"**League table**","6b7db7af":"checking updates:","65250590":"there are no duplicate rows or null values in this dataset. ","1a0a2ada":"We can see that most of the winning teams are home teams. ","162b4cd5":"<a id='wrangling'><\/a>\n## Data Wrangling and Data Cleaning","d30626e7":"We successfully included team names in the team_attr table.","d9b8a7d7":"We are not concerned with all the 115 columns in this table since it's too large, so we will pick only the most important information. <\/br>\n\nAs a soccer fan\/ analyst, what matters to me in a match is where it took place,when it took place, names of the playing team and their goals.  <\/br>\n\nTherefore we will only need country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal and away_team_goal. <\/br>\n\nSince most of the info we have is in the form of numerical IDs we will need to use the aid of the other tables to get the corresponding name for each ID, making our table more readable.","81aba7df":"<a id='eda'><\/a>\n## Exploratory Data Analysis","c9aca9b1":"# What are the attributes of the most frequent winners? ","aca7d190":"Home teams score higher than away teams.","63438aa3":"It is clear that there are no null values, and none of the data is duplicated ","2bef04df":"**Match Table**","9c104cc4":"Here we can see that we have info related to the player, as well as his\/her id. ","ef5c17ae":"It might be a smart idea to start off by plotting the result of each match","c59a583d":"**Player table**","7e202b91":"<a id='conclusions'><\/a>\n## Conclusions\nMost of the winning teams(around 50%) are Home Teams, indicating that playing at Home might likely increase the team's chances of winning the match. Home Teams also tend to score higher, showing that playing in Home country might infact be an important factor in predicting a team's success. <\/br>\n\nSome of the top winning teams include FC Barcelona, Real Madrid CF, Celtic. When comparing one of the top winning team to a low-scoring team, we figured that the top winning team has \na greater defenceTeamWidth, defenceAggression, defencePrressure, and chanceCreation shooting, all of which might be feature that correlate with the team's success. \n\n### Limitations\n> Comparing the performance of only two teams to distinguish between the attributes of low and high scoring team is not enough to generalise this on all teams. Might try more examples. \n","db687007":"**Team-related tables**","1758098e":"**Country table**","936ca902":"Creating a dataframe for each SQL table: ","cd73747e":"# Project: Investigate a Dataset - [European Soccer Database]\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","6deecaeb":"<a id='intro'><\/a>\n## Introduction\n\n### Dataset Description \n\nDataset about soccer matches includes several tables, all of them reference each other in some way. Information includes current teams and their leagues\/country, players in each team and information about the match such as winning team, date, season, etc. More details will be provided throughout the notebook. \n\n### Question(s) for Analysis\n- Does playing in Home Country increase the chances of winning?\n- What are the attributes of the most frequent winners? \n"}}