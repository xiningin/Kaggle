{"cell_type":{"e00d372c":"code","4144bfbf":"code","9d1269e0":"code","e58a3db5":"code","6c62cee6":"code","9ae061ba":"code","273badf4":"code","54856eb0":"code","f9842ac6":"code","c87f74a8":"code","d8f09a55":"code","b2308483":"code","f195fc73":"code","2169cd8e":"code","9f2f6dbd":"code","6f4a9be3":"code","c19977a3":"code","c3260669":"code","3cb13f02":"code","e527fd50":"code","bb384ec2":"code","f3c999ed":"code","401a28bf":"code","0d7e589d":"code","2649e1f8":"code","1b5559c6":"code","e3a03444":"code","48c609ca":"code","3e94e05d":"code","8882f92f":"code","e415241b":"code","b7667e82":"code","5c24775d":"code","0ed6b6fe":"code","430ab5d1":"code","aa397281":"code","1141718e":"code","820fb4f5":"code","5cfbbc97":"code","e9c3311a":"code","fe3b556e":"code","f08b3001":"code","7ec9b87f":"code","7f11dc6a":"markdown","35b583ed":"markdown","736ec6b4":"markdown","699ffe12":"markdown","e7f64992":"markdown","5b423320":"markdown","8ea5354a":"markdown","dbcb57a6":"markdown","ad2f0533":"markdown","512e6d3d":"markdown","f20ef828":"markdown","924bddf7":"markdown","a3384f79":"markdown","014761e5":"markdown","2e9918b8":"markdown","c29a498b":"markdown","713b417f":"markdown","03148a62":"markdown","ed014964":"markdown","75092224":"markdown","ab490721":"markdown","7042ae49":"markdown","83a6b321":"markdown","853cb483":"markdown","954593dd":"markdown","cf01a96f":"markdown","b3ed2c60":"markdown"},"source":{"e00d372c":"# Lets import some libraries\nimport tensorflow as tf\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# plotting some visualizations\nfrom plotly import tools\nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\n# For oversampling Library (Dealing with Imbalanced Datasets)\nfrom imblearn.over_sampling import SMOTE\nfrom collections import Counter\n\n# Other Libraries\nimport time\n\ndf = pd.read_csv('..\/input\/loan.csv', \n                 low_memory=False,\n                )","4144bfbf":"df.head(5)","9d1269e0":"# replace the name of some columns\ndf = df.rename(\n    columns = {\n        \"loan_amnt\"      : \"loan_amount\",\n        \"funded_amnt\"    : \"funded_amount\",\n        \"funded_amnt_inv\": \"investor_funds\",\n        \"int_rate\"       : \"interest_rate\",\n        \"annual_inc\"     : \"annual_income\"\n    }\n)\n\n# drop irrelvant columns\ndf.drop([\"id\", \"member_id\", \"emp_title\", \"url\", \"desc\", \"title\"], axis=1, inplace=True)","e58a3db5":"fig, ax = plt.subplots(1, 3, figsize=(16,5))\n\nloan_amount    = df[\"loan_amount\"].values\nfunded_amount  = df[\"funded_amount\"].values\ninvestor_funds = df[\"investor_funds\"].values\n\nsns.distplot(loan_amount, ax = ax[0], color=\"#F7522F\")\nax[0].set_title(\"Loan Applied by the borrower\", fontsize=14)\n\nsns.distplot(funded_amount, ax = ax[1], color=\"#2F8FF7\")\nax[1].set_title(\"Amount Funded by the Lender\", fontsize=14)\n\nsns.distplot(investor_funds, ax = ax[2], color=\"#2EAD46\")\nax[2].set_title(\"Total committed by Investors\", fontsize=14)","6c62cee6":"# Lets transform the issue dates\ndf[\"issue_d\"].head()","9ae061ba":"dt_series  = pd.to_datetime(df[\"issue_d\"])\ndf[\"year\"] = dt_series.dt.year","273badf4":"plt.figure(figsize=(12, 8))\nsns.barplot(\"year\", \"loan_amount\", data=df, palette=\"tab10\")\nplt.title('Issuance of Loans', fontsize=16)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Average loan amount issued', fontsize=14)","54856eb0":"df[\"term_number\"] = df[\"term\"].str.extract('(\\d+)').astype(int)","f9842ac6":"# cost of the loan to the lender: service fee charged by LC: 1% of the loan payment every time\n# term: \n# interest_rate: \n# below would give you the interest rate earned by the borrower over the span of loan. \n(df[\"interest_rate\"] * df[\"funded_amount\"])\/(100)","c87f74a8":"df[\"lending_club_service_fees\"] = (df[\"installment\"]*1*df[\"term_number\"])\/100","d8f09a55":"df[\"lending_club_service_fees\"].sum()\n# if all the installment are paid on time, then lending club would have earned $441M over the time period specified in data frame","b2308483":"df[\"loan_status\"].value_counts()","f195fc73":"df[df.loan_status == \"Fully Paid\"].loan_status.count()","2169cd8e":"# Bad Loan\n\nbad_loan = [\"Charged Off\", \"Default\", \"Does not meet the credit policy. Status:Charged Off\", \"In Grace Period\", \"Late (16-30 days)\", \"Late (31-120 days)\"]\ndf[\"loan_condition\"] = np.nan\n\ndef loan_condition(status):\n    if status in bad_loan:\n        return 'Bad Loan'\n    else:\n        return 'Good loan'\n    \ndf[\"loan_condition\"] = df[\"loan_status\"].apply(loan_condition)","9f2f6dbd":"# Let's plot the loan condition based on the above criteria:\n\nf, ax = plt.subplots(1,2, figsize=(16, 8))\n\ncolors = [\"#3791D7\", \"#D72626\"]\nlabels = \"Good Loans\", \"Bad Loans\"\n\nplt.suptitle(\"Information on Loan Conditions\", fontsize=20)\n\ndf[\"loan_condition\"].value_counts().plot.pie(explode=[0, 0.25], autopct=\"%1.2f%%\",\n                                            ax=ax[0],\n                                            shadow=True,\n                                            colors=colors, \n                                            labels=labels,\n                                            fontsize=12,\n                                            startangle=70)\n\nax[0].set_ylabel('% of condition of loans', fontsize=14)\n\npalette = [\"#3791D7\", \"#E01E1B\"]\n\nsns.barplot(x=\"year\", \n            y=\"loan_amount\", \n            hue=\"loan_condition\", \n            data=df, \n            palette=palette, \n            estimator=lambda x: len(x) \/ len(df) * 100)\n\nax[1].set(ylabel=\"(%)\")","6f4a9be3":"# Loans issued by region:\ndf[\"addr_state\"].unique()\n\n# Make a list with each of the regions by the state\n\nwest       = ['CA', 'OR', 'UT','WA', 'CO', 'NV', 'AK', 'MT', 'HI', 'WY', 'ID']\nsouth_west = ['AZ', 'TX', 'NM', 'OK']\nsouth_east = ['GA', 'NC', 'VA', 'FL', 'KY', 'SC', 'LA', 'AL', 'WV', 'DC', 'AR', 'DE', 'MS', 'TN' ]\nmid_west   = ['IL', 'MO', 'MN', 'OH', 'WI', 'KS', 'MI', 'SD', 'IA', 'NE', 'IN', 'ND']\nnorth_east = ['CT', 'NY', 'PA', 'NJ', 'RI','MA', 'MD', 'VT', 'NH', 'ME']\n\n\ndf['region'] = np.nan\n\n# lets attach a region to each addr_state value\n\ndef attach_region(state):\n    if state in west:\n        return 'West'\n    elif state in south_west:\n        return 'SouthWest'\n    elif state in south_east:\n        return 'SouthEast'\n    elif state in mid_west:\n        return 'MidWest'\n    elif state in north_east:\n        return 'NorthEast'\n\ndf[\"region\"] = df[\"addr_state\"].apply(attach_region)","c19977a3":"df[\"region\"].head(5)","c3260669":"# This code will take the current date and transform it into a year-month format:\ndf[\"complete_date\"] = pd.to_datetime(df[\"issue_d\"])\n\ngroup_dates = df.groupby(['complete_date', 'region'], as_index=False).sum()\n\ngroup_dates['issue_d'] = [month.to_period('M') for\n                          month in group_dates['complete_date']]\n\ngroup_dates = group_dates.groupby(['issue_d', 'region'], as_index=False).sum()\n#group_dates = group_dates.groupby(['issue_d', 'region'], as_index=False).sum()\ngroup_dates['loan_amount'] = group_dates['loan_amount']\/1000\n\ndf_dates = pd.DataFrame(data=group_dates[['issue_d', 'region', 'loan_amount']])","3cb13f02":"plt.style.use('dark_background')\ncmap = plt.cm.Set3\n\nby_issued_amount = df_dates.groupby(['issue_d', 'region']).loan_amount.sum()\n\nby_issued_amount.unstack().plot(stacked=False, \n                                colormap=cmap, \n                                grid=False, \n                                legend=True, \n                                figsize=(15,6))\n\nplt.title('Loans issued by Region', fontsize=16)","e527fd50":"# Now lets look at the employement length parameter\ndf[\"emp_length\"].head(20)\n\n# This shows the categorical values associated with emp_length. Can we convert it into numerical values with meaning?","bb384ec2":"employment_length = ['10+ years', '< 1 year', '1 year', '3 years', '8 years', '9 years',\n                    '4 years', '5 years', '6 years', '2 years', '7 years', 'n\/a']\n\nlst = [df]\n\ndf['emp_length_int'] = np.nan\n\nfor col in lst:\n    col.loc[col['emp_length'] == '10+ years', \"emp_length_int\"] = 10\n    col.loc[col['emp_length'] == '9 years', \"emp_length_int\"]   = 9\n    col.loc[col['emp_length'] == '8 years', \"emp_length_int\"]   = 8\n    col.loc[col['emp_length'] == '7 years', \"emp_length_int\"]   = 7\n    col.loc[col['emp_length'] == '6 years', \"emp_length_int\"]   = 6\n    col.loc[col['emp_length'] == '5 years', \"emp_length_int\"]   = 5\n    col.loc[col['emp_length'] == '4 years', \"emp_length_int\"]   = 4\n    col.loc[col['emp_length'] == '3 years', \"emp_length_int\"]   = 3\n    col.loc[col['emp_length'] == '2 years', \"emp_length_int\"]   = 2\n    col.loc[col['emp_length'] == '1 years', \"emp_length_int\"]   = 1\n    col.loc[col['emp_length'] == '< 1 year', \"emp_length_int\"]  = 0.5\n    col.loc[col['emp_length'] == 'n\/a', \"emp_length_int\"]       = 0\n    ","f3c999ed":"df['emp_length_int'].head(10)","401a28bf":"# lets calculate loans by region and by credit score grade\n# change the colormap for tomm:\n\n# region column: region,\n# credit score grade column:\n\nsns.set_style(\"whitegrid\")\n\nf, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2,2)\ncmap = plt.cm.inferno\n\nby_interest_rate = df.groupby(['year', 'region']).interest_rate.mean()\nby_interest_rate.unstack().plot(kind='area', stacked=True, colormap=cmap, grid=False, legend=False, ax=ax1, figsize=(16,12))\nax1.set_title('Average Interest rate by Region', fontsize=14)\n\nby_employment_length = df.groupby(['year', 'region']).emp_length_int.mean()\nby_employment_length.unstack().plot(kind='area', stacked=True, colormap=cmap, grid=False, legend=False, ax=ax2, figsize=(16,12))\nax2.set_title('Averahe Employment length by Region')\n\nby_dti = df.groupby(['year', 'region']).dti.mean()\nby_dti.unstack().plot(kind='area', stacked=True, colormap=cmap, grid=False, legend=False, ax=ax3, figsize=(16,12))\nax3.set_title('Average Debt-to-Income by Region', fontsize=14)\n\nby_income = df.groupby(['year', 'region']).annual_income.mean()\nby_income.unstack().plot(kind='area', stacked=True, colormap=cmap, grid=False, ax=ax4, figsize=(16,12))\nax4.set_title('Average Annual Income by Region', fontsize=14)\nax4.legend(bbox_to_anchor=(-1.0, -0.5, 1.8, 0.1), loc=10,prop={'size':12},\n           ncol=5, mode=\"expand\", borderaxespad=0.)","0d7e589d":"# Bad loans DF\nbadloans_df       = df.loc[df[\"loan_condition\"] == \"Bad Loan\"]\n\nloan_status_cross =  badloans_df.groupby([\"region\", \"loan_status\"], axis=0)","2649e1f8":"loan_status_cross[\"region\", \"loan_status\"].count()","1b5559c6":"badloans_df = df.loc[df[\"loan_condition\"] == \"Bad Loan\"]\n\nloan_status_cross    = pd.crosstab(badloans_df['region'], badloans_df['loan_status']).apply(lambda x: x\/x.sum() * 100)\nnumber_of_loanstatus = pd.crosstab(badloans_df['region'], badloans_df['loan_status'])\n\n# round our values\nloan_status_cross['Charged Off']        = loan_status_cross['Charged Off'].apply(lambda x: round(x,2))\nloan_status_cross['Default']            = loan_status_cross['Default'].apply(lambda x: round(x,2))\nloan_status_cross['In Grace Period']    = loan_status_cross['In Grace Period'].apply(lambda x: round(x, 2))\nloan_status_cross['Late (16-30 days)']  = loan_status_cross['Late (16-30 days)'].apply(lambda x: round(x, 2))\nloan_status_cross['Late (31-120 days)'] = loan_status_cross['Late (31-120 days)'].apply(lambda x: round(x, 2))\nloan_status_cross['Does not meet the credit policy. Status:Charged Off'] = loan_status_cross['Does not meet the credit policy. Status:Charged Off'].apply(lambda x: round(x, 2))\n\n# total transactions\nnumber_of_loanstatus['Total'] = number_of_loanstatus.sum(axis=1)\n\nnumber_of_loanstatus","e3a03444":"# Lets represent the data in a stacked format using Plottly:\n\ncharged_off  = loan_status_cross['Charged Off'].values.tolist()\ndefault      = loan_status_cross['Default'].values.tolist()\ngrace_period = loan_status_cross['In Grace Period'].values.tolist()\nshort_pay    = loan_status_cross['Late (16-30 days)'].values.tolist()\nlong_pay     = loan_status_cross['Late (31-120 days)'].values.tolist()\nnot_meet     = loan_status_cross['Does not meet the credit policy. Status:Charged Off'].values.tolist()\n\n\n# Charged Off representation:\ncharged = go.Bar(\n    x = ['MidWest', 'NorthEast', 'SouthEast', 'SouthWest', 'West'],\n    y = charged_off,\n    name = 'Charged Off',\n    marker = dict(\n        color = 'rgb(192, 148, 246)'\n    ),\n    text = '%'\n)\n\n# Defaults:\ndefaults = go.Bar(\n    x = ['MidWest', 'NorthEast', 'SouthEast', 'SouthWest', 'West'],\n    y = default,\n    name = 'Defaults',\n    marker = dict(\n        color = 'rgb(176, 26, 26)'\n    ),\n    text = '%'\n)\n\n# Credit Policy:\ncredit_policy = go.Bar(\n    x = ['MidWest', 'NorthEast', 'SouthEast', 'SouthWest', 'West'],\n    y = not_meet,\n    name = 'Does not meet credit policy',\n    marker = dict(\n        color='rgb(229, 121, 36)'\n    ),\n    text = '%'\n)\n\n# Grace Period:\ngrace_period = go.Bar(\n    x = ['MidWest', 'NorthEast', 'SouthEast', 'SouthWest', 'West'],\n    y = grace_period,\n    name = 'Grace Period',\n    marker = dict(\n        color='rgb(147, 147, 147)'\n    ),\n    text = '%'\n)\n\n# Short Pay:\nshort_pays = go.Bar(\n    x = ['MidWest', 'NorthEast', 'SouthEast', 'SouthWest', 'West'],\n    y = short_pay,\n    name='Late Payment (16-30 days)', \n    marker = dict(\n        color='rgb(246, 157, 135)'\n    ),\n    text = '%'\n)\n\n# Long pay:\nlong_pays = go.Bar(\n    x = ['MidWest', 'NorthEast', 'SouthEast', 'SouthWest', 'West'],\n    y= long_pay,\n    name='Late Payment (31-120 days)',\n    marker = dict(\n        color = 'rgb(238, 76, 73)'\n        ),\n    text = '%'\n)\n\n\ndata = [charged, defaults, credit_policy, grace_period, short_pays, long_pays]\nlayout = go.Layout(\n    barmode='stack',\n    title = '% of Bad Loan Status by Region',\n    xaxis=dict(title='US Regions')\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='stacked-bar')","48c609ca":"# average interest rates clients pay:\nprint(df['interest_rate'].mean())\n\n# average annual income of clients:\nprint(df['annual_income'].mean())","3e94e05d":"# Getting data by states:\n\n# state columns:\n\n# grouping by our metrics:\nby_loan_amount   = df.groupby([\"region\", \"addr_state\"], as_index=False).loan_amount.sum() \nby_interest_rate = df.groupby([\"region\", \"addr_state\"], as_index=False).interest_rate.mean()\nby_income        = df.groupby([\"region\", \"addr_state\"], as_index=False).annual_income.mean()\nby_total_pymnt   = df.groupby([\"region\", \"addr_state\"], as_index=False).total_pymnt.mean()\nby_tot_cur_bal   = df.groupby([\"region\", \"addr_state\"], as_index=False).tot_cur_bal.mean()\nby_revol_bal     = df.groupby([\"region\", \"addr_state\"], as_index=False).revol_bal.mean()\nby_revol_util    = df.groupby([\"region\", \"addr_state\"], as_index=False).revol_util.mean()\nby_total_acc     = df.groupby([\"region\", \"addr_state\"], as_index=False).total_acc.mean()\n\n# Take this value to a list for visualization\nstates                 = by_loan_amount['addr_state'].values.tolist()\naverage_loan_amounts   = by_loan_amount['loan_amount'].values.tolist()\naverage_interest_rates = by_interest_rate['interest_rate'].values.tolist()\naverage_annual_income  = by_income['annual_income'].values.tolist()\naverage_total_payment  = by_total_pymnt[\"total_pymnt\"].values.tolist()\naverage_tot_cur_bal    = by_tot_cur_bal[\"tot_cur_bal\"].values.tolist()\naverage_revol_bal      = by_revol_bal[\"revol_bal\"].values.tolist()\naverage_revol_util     = by_revol_util[\"revol_util\"].values.tolist()\naverage_total_acc      = by_total_acc[\"total_acc\"].values.tolist()","8882f92f":"from collections import OrderedDict\n\nmetrics_data = OrderedDict([('state_codes',   states),\n                            ('issued_loans',  average_loan_amounts),\n                            ('interest_rate', average_interest_rates),\n                            ('annual_income', average_annual_income),\n                            ('total_pymnt',   average_total_payment),\n                            ('tot_cur_bal',   average_tot_cur_bal),\n                            ('revol_bal',     average_revol_bal),\n                            ('revol_util',    average_revol_util),\n                            ('total_acc',     average_total_acc)])\n\nmetrics_df = pd.DataFrame.from_dict(metrics_data)\nmetrics_df = metrics_df.round(decimals=2)\nmetrics_df.head()","e415241b":"# Now it comes the part where we plot \nfor col in metrics_df.columns:\n    metrics_df[col] = metrics_df[col].astype(str)\n    \nscl = [[0.0, 'rgb(210, 241, 198)'],[0.2, 'rgb(188, 236, 169)'],[0.4, 'rgb(171, 235, 145)'],\\\n            [0.6, 'rgb(140, 227, 105)'],[0.8, 'rgb(105, 201, 67)'],[1.0, 'rgb(59, 159, 19)']]\n\nmetrics_df['text'] = metrics_df['state_codes'] + '<br>' +\\\n'Average loan interest rate: ' + metrics_df['interest_rate'] + '<br>'+\\\n'Average annual income: ' + metrics_df['annual_income'] + '<br>'+\\\n'Average revol  util:' + metrics_df['revol_util']\n\ndata = [ dict(\n        type='choropleth',\n        colorscale = scl,\n        autocolorscale = False,\n        locations = metrics_df['state_codes'],\n        z = metrics_df['issued_loans'], \n        locationmode = 'USA-states',\n        text = metrics_df['text'],\n        marker = dict(\n            line = dict (\n                color = 'rgb(255,255,255)',\n                width = 2\n            ) ),\n        colorbar = dict(\n            title = \"$s USD\")\n        ) ]\n\nlayout = dict(\n    title = 'Lending Clubs Issued Loans <br> (A Perspective for the Business Operations)',\n    geo = dict(\n        scope = 'usa',\n        projection=dict(type='albers usa'),\n        showlakes = True,\n        lakecolor = 'rgb(255, 255, 255)')\n)\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='d3-cloropleth-map')","b7667e82":"# Let's create categories for annual_income since most of the bad loans are located below 100k\n\ndf['income_category'] = np.nan\n\nlst = [df]\n\nfor col in lst:\n    col.loc[col['annual_income'] <= 100000, 'income_category'] = 'Low'\n    col.loc[(col['annual_income'] > 100000) & (col['annual_income'] <= 200000), 'income_category'] = 'Medium'\n    col.loc[col['annual_income'] > 200000, 'income_category'] = 'High'","5c24775d":"sns.countplot(x = \"loan_condition\", data=df)","0ed6b6fe":"df['loan_condition'].unique()","430ab5d1":"# Let's transform the column loan_condition into integrers.\n\nlst = [df]\ndf['loan_condition_int'] = np.nan\n\nfor col in lst:\n    col.loc[df['loan_condition'] == 'Good loan', 'loan_condition_int'] = 0 # Negative (Bad Loan)\n    col.loc[df['loan_condition'] == 'Bad Loan', 'loan_condition_int'] = 1 # Positive (Good Loan)\n    \n# Convert from float to int the column (This is our label)  \ndf['loan_condition_int'] = df['loan_condition_int'].astype(int)","aa397281":"fig, ((ax1, ax2), (ax3, ax4))= plt.subplots(nrows=2, ncols=2, figsize=(14,6))\n\n# Change the Palette types tomorrow!\n\nsns.violinplot(x=\"income_category\", y=\"loan_amount\", data=df, palette=\"Set2\", ax=ax1 )\nsns.violinplot(x=\"income_category\", y=\"loan_condition_int\", data=df, palette=\"Set2\", ax=ax2)\nsns.boxplot(x=\"income_category\", y=\"emp_length_int\", data=df, palette=\"Set2\", ax=ax3)\nsns.boxplot(x=\"income_category\", y=\"interest_rate\", data=df, palette=\"Set2\", ax=ax4)\n","1141718e":"df[\"initial_list_status\"].unique()","820fb4f5":"# Let's visualize how many loans were issued by creditscore\nf, ((ax1, ax2)) = plt.subplots(1, 2)\ncmap = plt.cm.coolwarm\n\nby_credit_score = df.groupby(['year', 'grade']).loan_amount.mean()\nby_credit_score.unstack().plot(legend=False, ax=ax1, figsize=(14, 4), colormap=cmap)\nax1.set_title('Loans issued by Credit Score', fontsize=14)\n    \n    \nby_inc = df.groupby(['year', 'grade']).interest_rate.mean()\nby_inc.unstack().plot(ax=ax2, figsize=(14, 4), colormap=cmap)\nax2.set_title('Interest Rates by Credit Score', fontsize=14)\n\nax2.legend(bbox_to_anchor=(-1.0, -0.3, 1.7, 0.1), loc=5, prop={'size':12},\n           ncol=7, mode=\"expand\", borderaxespad=0.)","5cfbbc97":"fig = plt.figure(figsize=(16,12))\n\nax1 = fig.add_subplot(221)\nax2 = fig.add_subplot(222)\nax3 = fig.add_subplot(212)\n\ncmap = plt.cm.coolwarm_r\n\nloans_by_region = df.groupby(['grade', 'loan_condition']).size()\nloans_by_region.unstack().plot(kind='bar', stacked=True, colormap=cmap, ax=ax1, grid=False)\nax1.set_title('Type of Loans by Grade', fontsize=14)\n\n\nloans_by_grade = df.groupby(['sub_grade', 'loan_condition']).size()\nloans_by_grade.unstack().plot(kind='bar', stacked=True, colormap=cmap, ax=ax2, grid=False)\nax2.set_title('Type of Loans by Sub-Grade', fontsize=14)\n\nby_interest = df.groupby(['year', 'loan_condition']).interest_rate.mean()\nby_interest.unstack().plot(ax=ax3, colormap=cmap)\nax3.set_title('Average Interest rate by Loan Condition', fontsize=14)\nax3.set_ylabel('Interest Rate (%)', fontsize=12)\n","e9c3311a":"# What's the ratio of buyers with high networth vs total number of buyers?\n\nratio_hni_total_lenders = len(df.loc[(df[\"grade\"] == \"A\") | (df[\"grade\"] == \"B\")])  \/ len(df)\nratio_hni_total_lenders","fe3b556e":"fig = plt.figure(figsize=(16,12))\n\nax1 = fig.add_subplot(221)\n\ncmap = plt.cm.coolwarm_r\n\nby_funded_amount = df.groupby(['year', 'loan_condition']).funded_amount.mean()\nby_funded_amount.unstack().plot(ax=ax1, colormap=cmap)\n\nax1.set_title('Average Funded Amount by Loan Condition', fontsize=14)\nax1.set_ylabel('Funded Amount ($)', fontsize=12)","f08b3001":"# (Total Loan Volume Originated) \/ (# of Loans Funded in Same Period)\n\naverage_mortgage_loan_value = df[\"loan_amount\"].sum() \/ len(df)","7ec9b87f":"average_mortgage_loan_value","7f11dc6a":"As we can see, the averagee funded amount for loans categorized as good is increasing, with year 2018 having the highest funded amount. ","35b583ed":"The left hand graph is telling us that # of loans issued by credit score is highest for bucket G and the # of loans issued goes down as the score starts to improve. For example, # of loans issued for people in bucket A is the lowest as they have the healthiest credit score. \n\nThe right hand graph is telling us that interest rates by credit score buckets. There is correlation between credit score and interest rates available on a loan product. A lower credit score leads to higher interest rate charged because of higher percieved risk. ","736ec6b4":"### Good Loans vs Bad Loans\n\n**Types of loans:**\n\nIn this section, we will see what is the amount of bad loans lending club has declared so far, of course we have to understand that there are still loans that are at a risk of defaulting in the future. \n\nWhat we need to know:\n* The amount of bad loans could increment as the days pass by, since we still have a great amount of current loans. \n* Average annual income is an important key metric for finding possible opportunities of investments in a specific region.\n","699ffe12":"**Summary:**\n\n* Currently, bad loans consist 13.14% of total loans but remember that we still have current loans which have the risk of becoming bad loans. (So this percentage is subjected to possible changes.)","e7f64992":"## Assessing Health of the Platform\n\nFor any platform which has a buyer and a seller of service or product and the platform acts as the intermediary which connects these two agents, that's a two-party system. In order to be able to keep both the agents satisfied while they are interacting actively with the platform, we as lending club CFO\/decision makers need to have a pulse on what's the health of the platform.\n\nHealth of the Platform:\n\nHealth is defined by how well is the platform performing for both the buyers and sellers of debt products. \n- Is the buyer getting good APR's when it comes to funding their note? \n- Is the seller satisfied with the ROI on the monies deployed on the platform? and the final question, \n- Is the platform making money in this exchange? \n\nThese three questions will always be asked by the decision makers at Lending Club, because these three questions helps them tell a story to the investors on whether the platform is doing a good job or not?\n\nIf the answers to the above questions are not satisfactory, then questions above are the best starting point when it comes to fine tuning the business. ","5b423320":"**Summary:**\n* Most of the loans issued where in the range of 10K to 20K USD.\n* The year 2018 was the year where most loans were issued. \n* The loans applied by potential borrowers, the amount issued to the borrowers and the amount funded by investors are similarly distributed, meaning that it is most likely that qualified borrowers are going to get the loan they had applied for.","8ea5354a":"#### What's the average loan package that's given to the buyer? And is it increasing?","dbcb57a6":"Which of the KPI's above can't be measured with the given data?\n- Average Cycle Time\n- Pull-Through Rate\n- Cost Per Unit Originated\n- Application Approval Rate\n- Cycle Stages","ad2f0533":"## Business Indicators\n\nBusiness indicators are interesting metrics which help business analysts understand the state of the business and help them make important decisions about various aspects.\n\nYou\u2019ll always track and review multiple numbers. Some will be important: these are your key performance indicators (KPIs), which you\u2019ll track and report every day. Others will be stored away for future use, such as when it\u2019s time to tell the company history to an investor or to make an infographic.\n\nSetting up and managing instrumentation is fairly easy these days with tools like Geckoboard, Mixpanel, Kissmetrics, Totango, Chartbeat, and others. But don\u2019t let your ability to track so many things distract you. *Capture everything, but focus on what\u2019s important.*\n\n\nWe need to remind us that \u2018too much data\u2019 can be counterproductive. You can get lost in strange trends on numbers that aren\u2019t as big-picture as others. You can also lose a lot of time reporting and communicating about numbers that might not lead to action. By stripping our daily KPI reporting down to just a few metrics, it\u2019s clear what we\u2019re focused on as a company and\nhow we\u2019re doing.\n\nFor lending club, the one metric that is most important and above everyone else is:\n\nGood loan and bad loan ratio\n\nThis is the most important ratio because:\n- You need to identify the riskiest areas of your business as quickly as possible, and that\u2019s where the most important question lies. For us, the ratio of good vs bad loans tells us what's the status of the platform and whether the market place is growing or slowing down due to bad debt. **","512e6d3d":"**The Business Perspective**\n\n**Understanding the operative side of business:**\n\nNow we will have a closer look at the operative side of business by state. This will give us a clearer idea in which state we have a higher operating activity. This will allow us to ask further questions such as: \n- Why do we have a higher level of operating activity in this state? Could it be because of economic factors? or the risk level is low and returns are fairly decent?\n\nWhat we need to know:\n* We will focus on three key metrics: \n    - Loans issued by state (Total sum), \n    - average interest rates charged to customers and \n    - average annual income of all customers by state. \n* The purpose of this analysis is to see states that give high returns at a descent risk. \n\nSummary:","f20ef828":"**Summary**\n\n- Borrowers that made part of the high income category took higher loan amounts than people from low and medium income categories. Of course, people with higher annual incomes are more likely to pay loans with a higher amount. (First row to the left of the subplots)\n- Loans that were borrowed by the Low income category had a slightly higher change of becoming a bad loan. (First row to the right of the subplots)\n- Borrowers with High and Medium annual incomes had a longer employment length than people with lower incomes.(Second row to the left of the subplots)\n- Borrowers with a lower income had on average higher interest rates while people with a higher annual income had lower interest rates on their loans. (Second row to the right of the subplots)","924bddf7":"![LC-Logo-Official-min.png](attachment:LC-Logo-Official-min.png)\n\n# Business Metrics in P2P Space\n\nIn this notebook, our aim is to analyze the lending club data set and take a look at the common P2P industry metrics that are used to identify whether business is running fine or it needs a bit of fine tuning. \n\n**What is Lending Club?**\n\nLending Club is a peer to peer lending firm which matches individual lenders with potential customers and earns profit by taking a percentage of the profit depending on the risk the borrrowers take. Lending Club provides the \"bridge\" between investors and borrowers.\n\n**Fundamental Questions to Answer**\n\n\u201cHow much am I making on this deal?\u201d is going to be a fundamental question that should be answered before someone decides to invest the money in a note on the lending club platform. Measuring lending profitability at the loan level provides answers to such critical questions as:\n- What is the true profit margin the lender is earning by booking loans at their proposed rates?\n- Is the grade been used by the lenders to fund a particular loan attracting the kind of profit margings the lender is seeking? If customers who should be buying Chevys are instead buying Mercedes, the lender's consumer loan grade funding is probably mispriced.\n\n\n**Outline:**\n\n1. Introduction:\n    1. General Information\n    2. Data distributions\n    \n2. Business Perspective:\n    1. Understanding the business via the data.\n    2. Understanding bad loans. \n    3. Understanding the risk to the business.\n    4. Defining the KPI's for analysts and product managers\n    \n3. Citations:\n\n    1. [LC Risk Analysis](https:\/\/www.kaggle.com\/janiobachmann\/lending-club-risk-analysis-and-metrics)\n    2. Global Religion 1945-2010: Plotly & Pandas visuals by Anisotropic\n    3. Loan Metrics By State by Frank Vigilante\n    4. Hands on Machine Learning by Aur\u00e9lien G\u00e9ron\n    5. Deep Learning with Neural Networks and TensorFlow by Sentdex\n\n\n**Introduction**\n\nI would be focusing on performing exploratory data analysis and statistical analysis of this data set. I hope to learn the following things from this dataset:\n1. Business metrics that help analysts at Lending club determine business health\n\n","a3384f79":"**Key Performance Indicators for Lending Club Product Managers **\n\n1. Conversion Funnel\n2. Loan Conversion rate\n3. Loan Conversion rate by loan type \n4. Loan efficiency\n5. Loan Conversion by source of loan application\n6. Loan product usage\n7. Loan Decision making process\n8. Instant approvals\n\n\n","014761e5":"### Analysis by Income Category\n\nIn this section, we will create different income categories in order to detect important patterns and go more into depth in our analysis. \n\n**What we need to know:**\n* Low income category: Borrowers that have an annual income lower or equal to 100,000 USD.\n* Medium income category: Borrowers that have an annual income higher than 100,000 USD but lower or equal to 200,000.\n* High income category: Borrowers that have an annual income higher than 200,000 USD.\n\nSummary:\n","2e9918b8":"## Similar Distributions\n\nWe will start with exploration of distribution of the loan amounts and see when did the loan amount issued increased significantly. \n\nWhat we need to know:\n* Understand what amount was mostly issued to borrowers. \n* Which year the loan was issued\n* The distribution of loan amounts in a mutlinomial distribution.","c29a498b":"**Summary so far:**\n* SouthEast, West and NorthEast regions are following a similar pattern of increaes till 2016, then a drop and then continuing the march towards increasing loan amount issued by region.\n","713b417f":"**Question 1: Is the buyer getting good APR on the platform when it comes to funding his request?**\n\nIn order to be able to find out if buyer is getting good APR, we want to see these trends in the data:\n- What's the ratio of buyers with high networth vs total number of buyers? Is it high and helping us lean towards higher % of good loans?\n- What's the average loan package that's given to the buyer? And is it increasing?\n\nOnce we can identify the trends and tie a value to them, the combined value of three questions above will tell us whether a buyer is getting a good APR or not. ","03148a62":"What's the ratio of buyers with high networth vs total number of buyers?","ed014964":"For Grade A & B (representing high quality customers), they capture 48% of total loans issued, pointing to a healthy pipeline of loans. ","75092224":"## Defining the KPI's for analysts and product managers\n","ab490721":"## Citations:\n\n1. https:\/\/www.kaggle.com\/janiobachmann\/lending-club-risk-analysis-and-metrics\n2. Global Religion 1945-2010: Plotly & Pandas visuals by Anisotropic\n3. Loan Metrics By State by Frank Vigilante\n4. Hands on Machine Learning by Aur\u00e9lien G\u00e9ron\n5. Deep Learning with Neural Networks and TensorFlow by Sentdex\n","7042ae49":"**Loans Issued by Region:**\n\nIn this section we want to analyze loans issued by region in order to see region patters that will allow us to understand which region gives Lending Club.\n","83a6b321":"This is one of the indicators of loan profitiability. The closer your average mortgage loan volume is to the conforming limit, the more likely you are to generate strong profit from those revenues.","853cb483":"**A deeper look into bad loans:**\n\n**What we need to know:**\n\n* The number of loans that were classified as bad loans for each region by its loan status. (This will be shown in a dataframe below). \n* This won't give us the exact reasons why a loan is categorized as a bad loan. (other variables that might have influence th condition of the loan), but it will give us a deeper insight on the level of risk in a particular region. \n\n**Summary**\n* NorthEast and SouthEast regions contributed higher percentage to bad loans in an overall bad loans world. \n* Grace Period: NorthEast and SouthEast regions had the highest contribution in grace period of loans. \n* Based on this summary and last data analysis, West has improved its position in bad loans and NorthEast and SouthEast have come up as regions with higher percentage of bad loans vs other regions. \n* This summary does not tell us what *causes* bad loans, only which regions have what percentage of loans as bad loans. ","954593dd":"### Average Mortgage Loan Value","cf01a96f":"The KPIs that fall in this category are some of the most straightforward yet impactful metrics that a data analyst\/business analyst could track. They are broader-based in scope and can provide a great deal of information on the overall health of your operation.\n\n**1. Average Cycle Time:**\n\n*How's it defined:*\n\n(Sum of Days from Application to Funding for All Loans) \/ (# of Loans Funded in Same Period)\n\n*Purpose:*\n\nAverage cycle time is a basic, yet important, performance metric to track for its ability to benchmark overall efficiency. As you begin to pull levers within your processes and integrate improvements, you would expect to see average cycle time decrease on new loans.\n\nA poor cycle time has been shown to correlate directly to pull-through rates and loan profitability metrics. Referral partners and borrowers have expectations that can quickly sour relationships when loans do not close on time, or efficiently.\n\n**2. Pull-Through Rate:**\n\n*How's it defined:*\n\n(# of Funded Loans) \/ (# of Applications Submitted in Same Period)\n\n*Purpose:*\n\nPull-through rate provides a high-level perspective on the overall health your mortgage operation. It\u2019s a very foundational metric meant to speak generally to, among other things, the efficiency of your workflow, the quality of submitted applications, the level of customer service being provided, interest rate competitiveness, and how ideal the customer profile that you\u2019re working with is.\n\nPull-through rate is not used to identify any single portion of your process that is failing, but instead to understand if there are problematic inefficiencies at all, or, conversely, if your process is ready to scale to take on more loan applications.\n\n**3. Average Mortgage Loan Value:**\n\n*How's it defined:*\n\n(Total Loan Volume Originated) \/ (# of Loans Funded in Same Period)\n\n*Purpose:*\n\nAverage mortgage loan volume is one basic indicator of loan profitability. The typical file workload for a conforming conventional loan does not change much whether that loan is for $ 200,000  or $ 453,000. However, the revenue generated differs greatly between those two originated units.\n\nThe closer your average mortgage loan volume is to the conforming limit, the more likely you are to generate strong profit from those revenues.\n\n\n**4. Cost Per Unit Originated:**\n\n*How's it defined:*\n\n(Total Business Expenses) \/ ($ of Loans Funded in Same Period)\n\n*Purpose:*\n\nCost per unit originated measures the efficiency of your operation relative to factors such as staffing and office expense, cycle times, and pull-through rate. Excess overhead expenses can be attained through deficiencies in any of these areas, contributing to a high cost per unit and thus lower profitability on generated revenues.\n\nThis can be particularly exacerbated by a poor hiring plan, due to the high costs associated with salaried employees. Hire too soon and your cost per unit soars. Hire too late and your cycle time lags.\n\nKeeping costs in line with expected performance is critical to maintaining profitability at scale.\n\n**5. Application Approval Rate:**\n\n*How's it defined:*\n\n(# of Approved Applications) \/ (# of Submitted Applications) \n\n*Purpose:*\n\nApplication approval rate provides a couple of important insights into your client acquisition and loan application workflow.\n\nTypically, a low application approval rate is indicative of either a large problem in document gathering and application review processes or a disconnect in your ideal customer profile that is leading to increased submissions of unqualified borrower applications.\n\nA low application approval rate is a red flag that your operation is burning valuable time and money on dead-end applications.\n\n**6. Cycle Stages:**\n\n*How's it defined:*\n\n(Sum of Days in Stage for All Loans) \/ (# of Loans Funded in Same Period)\n\n*Purpose:*\n\nSimilar to the more holistic average cycle time KPI listed above, examining cycle stages seeks to dive deeper into the individual origination stages of each loan and measure effectiveness on a more granular level.\n\nWhen a LOs average cycle time is high or is rising, being able to quickly identify negative changes across various segments makes it much easier to diagnose and resolve problematic processes. Common stages for measurement would include Application, Processing and Document Collection, Underwriting, and Closing\/Funding.\n","b3ed2c60":"Looking at the above chart, we can see average loan amount issued saw a dip in 2016 but it regained the growth track and it kept on increasing with average loan amount touching $16,000 in 2018. This points to higher loan amount been disburbed to customers. "}}