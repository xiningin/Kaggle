{"cell_type":{"6142e7f1":"code","bee49119":"code","d951b066":"code","0ffbab04":"code","6aa5905f":"code","ae06925f":"code","529fbeb7":"code","cecda437":"code","75b185bf":"code","fb4f6d25":"code","1f3fd362":"code","5be7676f":"code","3601da3c":"code","e0181dab":"code","cfe8edf7":"code","b7d61ba0":"code","fc92975b":"code","73df5958":"code","729f5170":"code","d6222a87":"code","7fa221bc":"code","2874f1aa":"code","3ec6c8b8":"code","31cf6582":"code","8145ed4a":"code","56abcb0f":"code","dee2f0dd":"code","099d258e":"code","d4bf535d":"code","f1668ab2":"code","a38da270":"code","4db97a42":"code","28210527":"code","69a74b9a":"code","dcc2264c":"code","35f8c4e4":"code","3692b519":"code","5eca2c95":"code","6b2f73f6":"code","dd50d556":"code","16d99dc2":"code","659d3800":"code","f3736d89":"code","eeda0ad8":"code","c5e3e7c9":"code","8ce6b8eb":"code","e783d9e8":"code","8e5f6a99":"code","40170d2e":"code","3a266e6e":"code","4091c0ba":"code","f7ab3b4c":"code","a1273433":"code","fbd1a1f9":"code","a1f80b55":"code","22f6f65e":"code","6e161928":"code","4e519989":"code","26fcd88b":"code","0cc4f46a":"code","0be420fe":"code","a67de79d":"code","57c643cd":"code","bdaf2993":"code","0b495322":"code","527f022e":"code","c2c36e65":"code","76fc871e":"code","385c3c55":"code","f7399f3a":"code","1703654a":"code","520d775b":"code","c1113b33":"code","df2e7975":"code","4318232d":"code","e77f9f01":"code","3a7c2d3a":"code","65277438":"code","6ad3536c":"code","2dcd3c42":"code","964d9706":"code","e63a570a":"code","2c3ad16b":"code","b39ddf7a":"code","0aab1518":"code","44fbc303":"code","563d1445":"code","e9800dd4":"code","65a5d835":"code","8e381cd2":"code","f0ef3029":"code","b00f5c01":"code","0c16855d":"code","ac1d11af":"code","b894dfde":"code","acf47153":"code","99439c45":"code","01135e20":"code","824573f8":"code","230e92c6":"code","3bc8f360":"code","34a31bff":"code","93e4a92c":"code","c4097c10":"code","5e60b733":"code","f07abff5":"code","4e901f3d":"code","f395caee":"code","4e2c8e7d":"code","2528d284":"code","485eaa4d":"code","04cc6bf8":"code","7a0422a6":"code","49d5b665":"code","935205ac":"code","90523f73":"code","4cd5cd53":"code","3f016fed":"code","a8b5c3c9":"code","5a582d11":"code","52f32ead":"code","34cf299a":"code","9367ef05":"code","918cd60e":"code","28de079a":"code","5cd57ca6":"code","5687939f":"code","5797c6d2":"code","a77ea13e":"code","cf8ecb4c":"code","adfd187d":"code","fcefa985":"code","9c107c7e":"code","9da8dc5d":"code","c663a2ff":"code","d9527683":"code","1c656bbb":"markdown","739e6fb8":"markdown","2af0f1fa":"markdown","924d3c3d":"markdown","563f1e49":"markdown","f15afc37":"markdown","479bfa6e":"markdown","8875ea1f":"markdown","cfdd96f0":"markdown","213aba59":"markdown","14a7be5f":"markdown","b502d2f7":"markdown","363715ce":"markdown","292fe94a":"markdown","bb3be155":"markdown","38ef0611":"markdown","6a61d187":"markdown","c9663ddc":"markdown","c9180cb8":"markdown","1a73270a":"markdown","f03c6c5a":"markdown","2181487b":"markdown","3e2c009b":"markdown","81933525":"markdown","5f505eb5":"markdown","f5efd436":"markdown","6d0b0e99":"markdown","5135fb80":"markdown","5b20e743":"markdown","92fdb637":"markdown","0e1392da":"markdown","e3df9dff":"markdown"},"source":{"6142e7f1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nimport urllib\nfrom geopy.distance import geodesic","bee49119":"!ls '..\/input\/new-york-city-airbnb-open-data'","d951b066":"#data = pd.read_csv('AB_NYC_2019.csv')\ndata = pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')","0ffbab04":"data.head(5)","6aa5905f":"data.shape","ae06925f":"data[[\"price\",\"latitude\",\"longitude\",\"minimum_nights\",\"number_of_reviews\",\"reviews_per_month\",\"calculated_host_listings_count\",\"availability_365\"]].describe()","529fbeb7":"data.isnull().sum()","cecda437":"data.price.describe()","75b185bf":"data = data[data['price']>0]\ndata.head(5)","fb4f6d25":"data['price'].describe()","1f3fd362":"len(data)","5be7676f":"data1 = data[data['price']<= data['price'].mean() + 3*data['price'].std()]\ndata1.head(5)","3601da3c":"len(data1)","e0181dab":"data1.price.describe()","cfe8edf7":"data1.groupby('neighbourhood_group')['id'].agg(['count'])","b7d61ba0":"data1['neighbourhood_group'].value_counts()","fc92975b":"data1.groupby('neighbourhood_group')['id'].agg(['count']).plot(kind=\"bar\")","73df5958":"# plt.figure(figsize=(15,15))\n# nyc_img=plt.imread(urllib.request.urlopen('https:\/\/upload.wikimedia.org\/wikipedia\/commons\/e\/ec\/Neighbourhoods_New_York_City_Map.PNG'))\n# plt.imshow(nyc_img,zorder=0,extent=[-74.258, -73.7, 40.49,40.92])\n# sns.scatterplot(x=data1['longitude'], y=data1['latitude'], hue='neighbourhood_group',s=20, data=data1)\n# plt.legend()\n# plt.show()","729f5170":"sns.set(rc={'figure.figsize':(15,10)})\nsns.distplot(data1['price'],kde_kws={\"label\": 'price'}, bins=20)","d6222a87":"sns.set(rc={'figure.figsize':(15,10)})\nfor groups in data1.neighbourhood_group.unique():\n    sns.distplot(data1.price[data1['neighbourhood_group']==groups],kde_kws={\"label\": groups}, bins=20)","7fa221bc":"f = plt.figure(figsize=(10,30))\nfor i, groups in enumerate(data1.neighbourhood_group.unique()):\n    f.add_subplot(5, 1, i+1)\n    sns.distplot(data1.price[data1['neighbourhood_group']==groups],color=\"r\" ,kde_kws={\"label\": groups}, bins=20)","2874f1aa":"data1['price_log_e'] = np.log(data1['price'])\ndata1.head(5)","3ec6c8b8":"sns.set(rc={'figure.figsize':(15,10)})\nsns.distplot(data1['price_log_e'],kde_kws={\"label\": 'price in log e'}, bins=20)","31cf6582":"stats.normaltest(data1[\"price_log_e\"])","8145ed4a":"data1['price_log_10'] = np.log10(data1['price'])\ndata1.head(5)","56abcb0f":"sns.set(rc={'figure.figsize':(15,10)})\nsns.distplot(data1['price_log_10'],kde_kws={\"label\": 'price in log 10'}, bins=20)","dee2f0dd":"stats.normaltest(data1[\"price_log_10\"])","099d258e":"sns.set(rc={'figure.figsize':(15,10)})\nfor groups in data1.neighbourhood_group.unique():\n    sns.distplot(data1.price_log_10[data1['neighbourhood_group']==groups],kde_kws={\"label\": groups}, bins=20)","d4bf535d":"f = plt.figure(figsize=(10,30))\nfor i, groups in enumerate(data1.neighbourhood_group.unique()):\n    f.add_subplot(5, 1, i+1)\n    sns.distplot(data1.price_log_10[data1['neighbourhood_group']==groups],color=\"r\" ,kde_kws={\"label\": groups}, bins=20)\n    print('Test for Normal Distribution for ' , groups)\n    print('------------------------------------------')\n    print(stats.normaltest(data1[\"price_log_10\"]))\n    print('------------------------------------------')","f1668ab2":"plt.figure(figsize=(15,8))\nsns.violinplot(\"neighbourhood_group\", \"price_log_10\", data=data1)","a38da270":"plt.figure(figsize=(15,8))\nsns.boxplot(\"neighbourhood_group\", \"price_log_10\", data=data1)","4db97a42":"fstat, pval = stats.f_oneway(*[data1.price_log_10[data1.neighbourhood_group == s]\nfor s in data1.neighbourhood_group.unique()])\nprint(\"Oneway Anova log10(price) ~ neighbourhood_group F=%.2f, p-value=%E\" % (fstat, pval))","28210527":"data1[[\"neighbourhood_group\",'price']].groupby(\"neighbourhood_group\").describe()","69a74b9a":"plt.figure(figsize=(15,8))\nsns.violinplot(\"room_type\", \"price_log_10\", data=data1)","dcc2264c":"plt.figure(figsize=(15,8))\nsns.boxplot(\"room_type\", \"price_log_10\", data=data1)","35f8c4e4":"fstat, pval = stats.f_oneway(*[data1.price_log_10[data1.room_type == s]\nfor s in data1.room_type.unique()])\nprint(\"Oneway Anova log10(price) ~ room_type F=%.2f, p-value=%E\" % (fstat, pval))","3692b519":"room = data1.groupby('room_type')['id'].agg(['count'])\nroom.head()","5eca2c95":"room.reset_index(level=0, inplace=True)\nroom.head()","6b2f73f6":"room = room[['room_type','count']]","dd50d556":"plt.pie(\n    room['count'],\n    labels=room['room_type'],\n    shadow=False,\n    startangle=90,\n    autopct='%1.1f%%',\n    )\n\nplt.axis('equal')\n\nplt.tight_layout()\nplt.show()","16d99dc2":"temp = data1[data1['neighbourhood_group'] == 'Manhattan']\ntemp['room_type'].value_counts()","659d3800":"# plt.figure(figsize=(15,15))\n# nyc_img=plt.imread(urllib.request.urlopen('https:\/\/upload.wikimedia.org\/wikipedia\/commons\/e\/ec\/Neighbourhoods_New_York_City_Map.PNG'))\n# plt.imshow(nyc_img,zorder=0,extent=[-74.258, -73.7, 40.49,40.92])\n# sns.scatterplot(x=data1['longitude'], y=data1['latitude'], hue='room_type',s=20, data=data1)\n# plt.legend()\n# plt.show()","f3736d89":"data1.groupby('room_type')['id'].agg(['count']).plot(kind=\"bar\")","eeda0ad8":"# plt.figure(figsize=(15,15))\n# nyc_img=plt.imread(urllib.request.urlopen('https:\/\/upload.wikimedia.org\/wikipedia\/commons\/e\/ec\/Neighbourhoods_New_York_City_Map.PNG'))\n# plt.imshow(nyc_img,zorder=0,extent=[-74.258, -73.7, 40.49,40.92])\n# sns.scatterplot(x=data1['longitude'], y=data1['latitude'], hue='All_year_availability',s=20, data=data1)\n# plt.legend()\n# plt.show()","c5e3e7c9":"data1['availability_365'].dtype","8ce6b8eb":"#data1['All_year_availability'] = 0\n# for i in range(len(data1)):\n#     if int(data1.iloc[i, data1.columns.get_loc('availability_365')]) == 365:\n#         data1.iloc[i, data1.columns.get_loc('All_year_availability')] = 1\n        \ndef edit(x):\n    if x == 365:\n        return 1\n    else:\n        return 0\n    \ndata1['All_year_availability'] = data['availability_365'].apply(edit)\ndata1['All_year_availability'].head()","e783d9e8":"sns.violinplot(\"neighbourhood_group\", \"price_log_10\", hue=\"All_year_availability\",data=data1)","8e5f6a99":"sns.boxplot(\"neighbourhood_group\", \"price_log_10\", hue=\"All_year_availability\",data=data1)","40170d2e":"sns.violinplot(\"neighbourhood_group\", \"price_log_10\", hue=\"All_year_availability\",data=data1 , split=True)","3a266e6e":"sns.violinplot(\"All_year_availability\", \"price_log_10\",data=data1)","4091c0ba":"sns.violinplot(\"All_year_availability\", \"price_log_10\", hue=\"neighbourhood_group\",data=data1)","f7ab3b4c":"sns.boxplot(\"All_year_availability\", \"price_log_10\", hue=\"neighbourhood_group\",data=data1)","a1273433":"sns.boxplot(\"All_year_availability\", \"price_log_10\",data=data1)","fbd1a1f9":"stats.ttest_rel(data1['All_year_availability'],data1[\"price_log_10\"])","a1f80b55":"data1['minimum_nights'].describe()","22f6f65e":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"minimum_nights\",\"price_log_10\", hue=\"neighbourhood_group\", data=data1)","6e161928":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"minimum_nights\",\"price_log_10\", hue=\"room_type\", data=data1)","4e519989":"sns.lmplot(\"minimum_nights\", \"price_log_10\", hue=\"All_year_availability\",data=data1)","26fcd88b":"data1.isnull().sum()","0cc4f46a":"data1[data1['reviews_per_month'].isnull()]","0be420fe":"data1[['reviews_per_month','neighbourhood_group']] = data1[['reviews_per_month','neighbourhood_group']].fillna(value=0)","a67de79d":"data1.reviews_per_month.describe()","57c643cd":"data1.isnull().sum()","bdaf2993":"plt.figure(i,figsize=(20,15))\ncorrelation_matrix = data1[[\"price\",'price_log_10',\"minimum_nights\",\"All_year_availability\",\"number_of_reviews\",\"reviews_per_month\"]].corr().round(2)\nsns.heatmap(data=correlation_matrix ,center=0 , linewidths=.7, annot=True)","0b495322":"temp = data1[data1['reviews_per_month']>0]\ntemp.head(5)","527f022e":"temp.describe()","c2c36e65":"plt.figure(figsize=(15,8))\nsns.violinplot(\"neighbourhood_group\", \"reviews_per_month\", data=temp)","76fc871e":"plt.figure(figsize=(15,10))\nsns.boxplot(\"neighbourhood_group\", \"reviews_per_month\", data=temp)","385c3c55":"fstat, pval = stats.f_oneway(*[temp.reviews_per_month[temp.neighbourhood_group == s]\nfor s in temp.neighbourhood_group.unique()])\nprint(\"Oneway Anova reviews_per_month ~ neighbourhood_group F=%.2f, p-value=%E\" % (fstat, pval))","f7399f3a":"plt.figure(i,figsize=(20,15))\ncorrelation_matrix = temp[[\"price\",'price_log_10',\"minimum_nights\",\"All_year_availability\",\"number_of_reviews\",\"reviews_per_month\"]].corr().round(2)\nsns.heatmap(data=correlation_matrix ,center=0 , linewidths=.7, annot=True)","1703654a":"stats.stats.spearmanr(data1['reviews_per_month'],data1['price_log_10'])","520d775b":"data1.head(5)","c1113b33":"data1.reset_index()","df2e7975":"duplicate_host = data1[data1[['host_id']].duplicated()]\nduplicate_host.head(5)","4318232d":"duplicate = duplicate_host.groupby('host_id')['id'].agg(['count']).sort_values(by=['count'],ascending=False)\nduplicate.head(25)","e77f9f01":"duplicate.reset_index(level=0, inplace=True)","3a7c2d3a":"frames = []\ncounter = 0\nfor ids in duplicate[\"host_id\"]:\n    \n    \n    group_list = []\n    num_list = []\n    \n    temp = data1[data1['host_id'] == ids]\n    price = temp.price.sum()\n    avarage = price\/len(temp)\n    t = temp.groupby('neighbourhood_group')['id'].agg(['count'])\n    t.reset_index(level=0, inplace=True)\n    for i in range(len(t)):\n        group_name = t[\"neighbourhood_group\"][i]\n        if group_name not in group_list:\n            group_list.append(group_name)\n            num_group = t['count'][i]\n            num_list.append(num_group)\n        \n    if 'Brooklyn' not in group_list:\n        group_list.append(\"Brooklyn\")\n        num_list.append(0)\n    if 'Manhattan' not in group_list:\n        group_list.append(\"Manhattan\")\n        num_list.append(0)\n    if 'Queens' not in group_list:\n        group_list.append(\"Queens\")\n        num_list.append(0)\n    if 'Staten Island' not in group_list:\n        group_list.append(\"Staten Island\")\n        num_list.append(0)\n    if 'Bronx' not in group_list:\n        group_list.append(\"Bronx\")\n        num_list.append(0)\n        \n    dict = {'host_id':[ids],'total_price':[price],'average_price':[avarage],'num':[len(temp)]}\n    for i in range(5):\n        d = {group_list[i]:[num_list[i]]}\n        dict.update(d)\n    df_temp = pd.DataFrame(dict,index=[counter])   \n    frames.append(df_temp)\n    counter = counter + 1\nduplicate_price = pd.concat(frames)\nduplicate_price.head(15)","65277438":"data1.pivot_table(values = 'id',index = ['host_id'],columns = ['neighbourhood_group'],aggfunc = 'count').fillna(0)","6ad3536c":"nyc_metro = pd.read_csv('NYC_Transit_Subway_Entrance_And_Exit_Data.csv')\nnyc_metro.head(5)","2dcd3c42":"nyc_metro_location = nyc_metro[['Entrance Latitude','Entrance Longitude']]\nnyc_metro_location.head(5)","964d9706":"nyc_metro_location.describe()","e63a570a":"data1 = data1.reset_index(drop=True)","2c3ad16b":"data1.head(5)","b39ddf7a":"# data1['distance_metro_entrance'] = 0.0","0aab1518":"# for i in range(len(data1)):\n#     Latitude = data1['latitude'][i]\n#     Longitude = data1['longitude'][i]\n#     min_distance = 9999999\n#     for j in range(len(nyc_metro_location)):\n#         metro_Latitude = nyc_metro_location['Entrance Latitude'][j]\n#         metro_Longitude = nyc_metro_location['Entrance Longitude'][j]\n#         origin = (Latitude, Longitude)\n#         dist = (metro_Latitude, metro_Longitude)\n#         distance = geodesic(origin, dist).meters\n#         if distance <= min_distance:\n#             min_distance = distance\n#     data1['distance_metro_entrance'][i] = round(min_distance, 2)\n#     if i%100 == 0:\n#         print(i,round(min_distance, 2))","44fbc303":"data1.head(5)","563d1445":"# data1.to_csv('distance_metro.csv')","e9800dd4":"metro_distance = pd.read_csv('distance_metro.csv')","65a5d835":"metro_distance.head(5)","8e381cd2":"metro_distance['distance_metro_entrance'].describe()","f0ef3029":"plt.figure(figsize=(15,10))\nsns.boxplot(\"neighbourhood_group\", \"distance_metro_entrance\", data=metro_distance)","b00f5c01":"plt.figure(figsize=(15,8))\nsns.violinplot(\"neighbourhood_group\", \"distance_metro_entrance\", data=metro_distance)","0c16855d":"plt.figure(i,figsize=(20,15))\ncorrelation_matrix = metro_distance[[\"price\",'price_log_10',\"minimum_nights\",\"All_year_availability\",\"number_of_reviews\",\"reviews_per_month\",\"distance_metro_entrance\"]].corr().round(2)\nsns.heatmap(data=correlation_matrix ,center=0 , linewidths=.7, annot=True)","ac1d11af":"stats.stats.spearmanr(metro_distance['distance_metro_entrance'],metro_distance['price_log_10'])","b894dfde":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"price_log_10\",\"distance_metro_entrance\", hue=\"neighbourhood_group\", data=metro_distance)","acf47153":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"price_log_10\",\"distance_metro_entrance\", hue=\"room_type\", data=metro_distance)","99439c45":"stats.stats.spearmanr(metro_distance['distance_metro_entrance'],metro_distance['minimum_nights'])","01135e20":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"minimum_nights\",\"distance_metro_entrance\", hue=\"neighbourhood_group\", data=metro_distance)","824573f8":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"minimum_nights\",\"distance_metro_entrance\", hue=\"room_type\", data=metro_distance)","230e92c6":"f = plt.figure(figsize=(10,30))\nfor i, groups in enumerate(metro_distance.neighbourhood_group.unique()):\n    f.add_subplot(5, 1, i+1)\n    sns.distplot(metro_distance.distance_metro_entrance[metro_distance['neighbourhood_group']==groups],color=\"r\" ,kde_kws={\"label\": groups}, bins=20)\n    print('Test for Normal Distribution for ' , groups)\n    print('------------------------------------------')\n    print(stats.normaltest(metro_distance[\"distance_metro_entrance\"]))\n    print('------------------------------------------')","3bc8f360":"# data1['distance_from_central_station'] = 0.0","34a31bff":"data1.head(5)","93e4a92c":"# not efficient code!!\n# central_station_latitude = 40.7527\n# central_station_longitude = -73.9772\n# origin = (central_station_latitude,central_station_longitude)\n# for i in range(len(data1)):\n#     Latitude = data1['latitude'][i]\n#     Longitude = data1['longitude'][i]\n#     dist = (Latitude,Longitude)\n#     min_distance = geodesic(origin, dist).meters\n#     data1['distance_from_central_station'][i] = round(min_distance, 2)\n#     if i%100 == 0:\n#         print(i,round(min_distance, 2))\n\n\ndef find_distance(row):\n    central_station_latitude = 40.7527\n    central_station_longitude = -73.9772\n    origin = (central_station_latitude,central_station_longitude)\n\n    Latitude = row['latitude']\n    Longitude = row['longitude']\n    dist = (Latitude,Longitude)\n    \n    min_distance = geodesic(origin, dist).meters\n    \n    return round(min_distance, 2)\n\ndata1['distance_from_central_station'] = data1.apply(find_distance,axis = 1)\ndata1.head()","c4097c10":"#data1.to_csv('distance_from_central_station.csv')","5e60b733":"# data1 = pd.read_csv('distance_from_central_station.csv')","f07abff5":"plt.figure(figsize=(15,10))\nsns.boxplot(\"neighbourhood_group\", \"distance_from_central_station\", data=data1)","4e901f3d":"plt.figure(figsize=(15,8))\nsns.violinplot(\"neighbourhood_group\", \"distance_from_central_station\", data=data1)","f395caee":"plt.figure(figsize=(15,8))\nsns.violinplot(\"room_type\", \"distance_from_central_station\", data=data1)","4e2c8e7d":"plt.figure(figsize=(15,10))\nsns.boxplot(\"room_type\", \"distance_from_central_station\", data=data1)","2528d284":"plt.figure(figsize=(15,10))\nsns.boxplot(\"All_year_availability\", \"distance_from_central_station\", data=data1)","485eaa4d":"plt.figure(figsize=(15,10))\nsns.boxplot(\"All_year_availability\", \"distance_from_central_station\",hue = 'room_type', data=data1)","04cc6bf8":"plt.figure(figsize=(15,10))\nsns.boxplot(\"All_year_availability\", \"distance_from_central_station\",hue = 'neighbourhood_group', data=data1)","7a0422a6":"stats.stats.spearmanr(data1['distance_from_central_station'],data1['price_log_10'])","49d5b665":"plt.figure(i,figsize=(20,15))\ncorrelation_matrix = data1[[\"price\",'price_log_10',\"minimum_nights\",\"All_year_availability\",\"number_of_reviews\",\"reviews_per_month\",\"distance_from_central_station\"]].corr().round(2)\nsns.heatmap(data=correlation_matrix ,center=0 , linewidths=.7, annot=True)","935205ac":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"price_log_10\",\"distance_from_central_station\", hue=\"neighbourhood_group\", data=data1)","90523f73":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"price_log_10\",\"distance_from_central_station\",line_kws={'color': 'red'}, data=data1)","4cd5cd53":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"price_log_10\",\"distance_from_central_station\", hue=\"room_type\", data=data1)","3f016fed":"f = plt.figure(figsize=(10,30))\nfor i, groups in enumerate(data1.neighbourhood_group.unique()):\n    f.add_subplot(5, 1, i+1)\n    sns.distplot(data1.distance_from_central_station[data1['neighbourhood_group']==groups],color=\"r\" ,kde_kws={\"label\": groups}, bins=20)\n    print('Test for Normal Distribution for ' , groups)\n    print('------------------------------------------')\n    print(stats.normaltest(data1[\"distance_from_central_station\"]))\n    print('------------------------------------------')","a8b5c3c9":"data1['distance_from_JFK_airport'] = 0.0","5a582d11":"data1.head(5)","52f32ead":"# not efficient code !!!\n# JFK_airport_latitude = 40.6413\n# JFK_airport_longitude = -73.7781\n# origin = (JFK_airport_latitude,JFK_airport_longitude)\n# for i in range(len(data1)):\n#     Latitude = data1['latitude'][i]\n#     Longitude = data1['longitude'][i]\n#     dist = (Latitude,Longitude)\n#     min_distance = geodesic(origin, dist).meters\n#     data1['distance_from_JFK_airport'][i] = round(min_distance, 2)\n#     if i%100 == 0:\n#         print(i,round(min_distance, 2))\n\ndef find_distance(row):\n    JFK_airport_latitude = 40.6413\n    JFK_airport_longitude = -73.7781\n    origin = (JFK_airport_latitude,JFK_airport_longitude)\n\n    Latitude = row['latitude']\n    Longitude = row['longitude']\n    dist = (Latitude,Longitude)\n    \n    min_distance = geodesic(origin, dist).meters\n    \n    return round(min_distance, 2)\n\ndata1['distance_from_JFK_airport'] = data1.apply(find_distance,axis = 1)","34cf299a":"plt.figure(figsize=(15,10))\nsns.boxplot(\"neighbourhood_group\", \"distance_from_JFK_airport\", data=data1)","9367ef05":"plt.figure(figsize=(15,8))\nsns.violinplot(\"neighbourhood_group\", \"distance_from_JFK_airport\", data=data1)","918cd60e":"plt.figure(figsize=(15,8))\nsns.violinplot(\"room_type\", \"distance_from_JFK_airport\", data=data1)","28de079a":"plt.figure(figsize=(15,10))\nsns.boxplot(\"room_type\", \"distance_from_JFK_airport\", data=data1)","5cd57ca6":"plt.figure(figsize=(15,10))\nsns.boxplot(\"All_year_availability\", \"distance_from_JFK_airport\", data=data1)","5687939f":"plt.figure(figsize=(15,10))\nsns.boxplot(\"All_year_availability\", \"distance_from_JFK_airport\",hue = 'room_type', data=data1)","5797c6d2":"f = plt.figure(figsize=(10,30))\nfor i, groups in enumerate(data1.neighbourhood_group.unique()):\n    f.add_subplot(5, 1, i+1)\n    sns.distplot(data1.distance_from_JFK_airport[data1['neighbourhood_group']==groups],color=\"r\" ,kde_kws={\"label\": groups}, bins=20)\n    print('Test for Normal Distribution for ' , groups)\n    print('------------------------------------------')\n    print(stats.normaltest(data1[\"distance_from_JFK_airport\"]))\n    print('------------------------------------------')","a77ea13e":"stats.stats.spearmanr(data1['distance_from_JFK_airport'],data1['minimum_nights'])","cf8ecb4c":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"minimum_nights\",\"distance_from_JFK_airport\", hue=\"neighbourhood_group\", data=data1)","adfd187d":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"minimum_nights\",\"distance_from_JFK_airport\", hue=\"room_type\", data=data1)","fcefa985":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"minimum_nights\",\"distance_from_JFK_airport\", hue=\"All_year_availability\", data=data1)","9c107c7e":"stats.stats.spearmanr(data1['distance_from_JFK_airport'],data1['price_log_10'])","9da8dc5d":"plt.figure(i,figsize=(20,15))\ncorrelation_matrix = data1[[\"price\",'price_log_10',\"minimum_nights\",\"All_year_availability\",\"number_of_reviews\",\"reviews_per_month\",\"distance_from_JFK_airport\"]].corr().round(2)\nsns.heatmap(data=correlation_matrix ,center=0 , linewidths=.7, annot=True)","c663a2ff":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"price_log_10\",\"distance_from_JFK_airport\", hue=\"neighbourhood_group\", data=data1)","d9527683":"sns.set(rc={'figure.figsize':(30,20)})\nsns.lmplot(\"price_log_10\",\"distance_from_JFK_airport\", hue=\"room_type\", data=data1)","1c656bbb":"### realation between minimum_nights & price_log_10","739e6fb8":"### check distribution of price","2af0f1fa":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#read-data\" data-toc-modified-id=\"read-data-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>read data<\/a><\/span><\/li><li><span><a href=\"#check-number-of-records\" data-toc-modified-id=\"check-number-of-records-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>check number of records<\/a><\/span><\/li><li><span><a href=\"#Basic-Stat-Report-from-numeric-Columns\" data-toc-modified-id=\"Basic-Stat-Report-from-numeric-Columns-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>Basic Stat Report from numeric Columns<\/a><\/span><\/li><li><span><a href=\"#Check-Null-Data\" data-toc-modified-id=\"Check-Null-Data-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>Check Null Data<\/a><\/span><\/li><li><span><a href=\"#Data-Cleaning\" data-toc-modified-id=\"Data-Cleaning-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;<\/span>Data Cleaning<\/a><\/span><\/li><li><span><a href=\"#find-outlier-records-in-price\" data-toc-modified-id=\"find-outlier-records-in-price-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;<\/span>find outlier records in price<\/a><\/span><\/li><li><span><a href=\"#check-distribution-of-price\" data-toc-modified-id=\"check-distribution-of-price-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;<\/span>check distribution of price<\/a><\/span><\/li><li><span><a href=\"#Check-Distribution--of-price-in-each-Neighbourhood-group\" data-toc-modified-id=\"Check-Distribution--of-price-in-each-Neighbourhood-group-8\"><span class=\"toc-item-num\">8&nbsp;&nbsp;<\/span>Check Distribution  of price in each Neighbourhood group<\/a><\/span><\/li><li><span><a href=\"#Transfer-price-to-$\\ln^{price}$-to-make-the-dist-,-Normal\" data-toc-modified-id=\"Transfer-price-to-$\\ln^{price}$-to-make-the-dist-,-Normal-9\"><span class=\"toc-item-num\">9&nbsp;&nbsp;<\/span>Transfer price to $\\ln^{price}$ to make the dist , Normal<\/a><\/span><\/li><li><span><a href=\"#Transfer-price-to-$\\log_{10}^{price}$-to-make-the-dist-,-Normal\" data-toc-modified-id=\"Transfer-price-to-$\\log_{10}^{price}$-to-make-the-dist-,-Normal-10\"><span class=\"toc-item-num\">10&nbsp;&nbsp;<\/span>Transfer price to $\\log_{10}^{price}$ to make the dist , Normal<\/a><\/span><\/li><li><span><a href=\"#realation-between-neighbourhood_group-&amp;-price_log_10\" data-toc-modified-id=\"realation-between-neighbourhood_group-&amp;-price_log_10-11\"><span class=\"toc-item-num\">11&nbsp;&nbsp;<\/span>realation between neighbourhood_group &amp; price_log_10<\/a><\/span><\/li><li><span><a href=\"#Anova-test\" data-toc-modified-id=\"Anova-test-12\"><span class=\"toc-item-num\">12&nbsp;&nbsp;<\/span>Anova test<\/a><\/span><\/li><li><span><a href=\"#realation-between-room_type-&amp;-price_log_10\" data-toc-modified-id=\"realation-between-room_type-&amp;-price_log_10-13\"><span class=\"toc-item-num\">13&nbsp;&nbsp;<\/span>realation between room_type &amp; price_log_10<\/a><\/span><\/li><li><span><a href=\"#realation-between-All_year_availability-&amp;-price_log_10\" data-toc-modified-id=\"realation-between-All_year_availability-&amp;-price_log_10-14\"><span class=\"toc-item-num\">14&nbsp;&nbsp;<\/span>realation between All_year_availability &amp; price_log_10<\/a><\/span><\/li><li><span><a href=\"#T-Test\" data-toc-modified-id=\"T-Test-15\"><span class=\"toc-item-num\">15&nbsp;&nbsp;<\/span>T-Test<\/a><\/span><\/li><li><span><a href=\"#realation-between-minimum_nights-&amp;-price_log_10\" data-toc-modified-id=\"realation-between-minimum_nights-&amp;-price_log_10-16\"><span class=\"toc-item-num\">16&nbsp;&nbsp;<\/span>realation between minimum_nights &amp; price_log_10<\/a><\/span><\/li><li><span><a href=\"#Clean-reviews_per_month\" data-toc-modified-id=\"Clean-reviews_per_month-17\"><span class=\"toc-item-num\">17&nbsp;&nbsp;<\/span>Clean reviews_per_month<\/a><\/span><\/li><li><span><a href=\"#realation-between-reviews_per_month-&amp;-neighbourhood_group\" data-toc-modified-id=\"realation-between-reviews_per_month-&amp;-neighbourhood_group-18\"><span class=\"toc-item-num\">18&nbsp;&nbsp;<\/span>realation between reviews_per_month &amp; neighbourhood_group<\/a><\/span><\/li><li><span><a href=\"#realation-between-reviews_per_month-&amp;-price_log_10\" data-toc-modified-id=\"realation-between-reviews_per_month-&amp;-price_log_10-19\"><span class=\"toc-item-num\">19&nbsp;&nbsp;<\/span>realation between reviews_per_month &amp; price_log_10<\/a><\/span><\/li><li><span><a href=\"#find-duplicate-hosts-by-host_id\" data-toc-modified-id=\"find-duplicate-hosts-by-host_id-20\"><span class=\"toc-item-num\">20&nbsp;&nbsp;<\/span>find duplicate hosts by host_id<\/a><\/span><\/li><li><span><a href=\"#Add-new-data-NY-metro-station-location\" data-toc-modified-id=\"Add-new-data-NY-metro-station-location-21\"><span class=\"toc-item-num\">21&nbsp;&nbsp;<\/span>Add new data NY metro station location<\/a><\/span><\/li><li><span><a href=\"#find-distance-of-each-home-from-nearest-metro-enterance\" data-toc-modified-id=\"find-distance-of-each-home-from-nearest-metro-enterance-22\"><span class=\"toc-item-num\">22&nbsp;&nbsp;<\/span>find distance of each home from nearest metro enterance<\/a><\/span><\/li><li><span><a href=\"#realation-between-neighbourhood_group-&amp;-distance_metro_entrance\" data-toc-modified-id=\"realation-between-neighbourhood_group-&amp;-distance_metro_entrance-23\"><span class=\"toc-item-num\">23&nbsp;&nbsp;<\/span>realation between neighbourhood_group &amp; distance_metro_entrance<\/a><\/span><\/li><li><span><a href=\"#realation-between-price_log_10-&amp;-distance_metro_entrance\" data-toc-modified-id=\"realation-between-price_log_10-&amp;-distance_metro_entrance-24\"><span class=\"toc-item-num\">24&nbsp;&nbsp;<\/span>realation between price_log_10 &amp; distance_metro_entrance<\/a><\/span><\/li><li><span><a href=\"#realation-between-minimum_nights-&amp;-distance_metro_entrance\" data-toc-modified-id=\"realation-between-minimum_nights-&amp;-distance_metro_entrance-25\"><span class=\"toc-item-num\">25&nbsp;&nbsp;<\/span>realation between minimum_nights &amp; distance_metro_entrance<\/a><\/span><\/li><li><span><a href=\"#find-distance-from-NY-centeral-Station\" data-toc-modified-id=\"find-distance-from-NY-centeral-Station-26\"><span class=\"toc-item-num\">26&nbsp;&nbsp;<\/span>find distance from NY centeral Station<\/a><\/span><\/li><li><span><a href=\"#realation-between-price_log_10-&amp;-distance_from_central_station\" data-toc-modified-id=\"realation-between-price_log_10-&amp;-distance_from_central_station-27\"><span class=\"toc-item-num\">27&nbsp;&nbsp;<\/span>realation between price_log_10 &amp; distance_from_central_station<\/a><\/span><\/li><li><span><a href=\"#find-distance-from-JFK-airport\" data-toc-modified-id=\"find-distance-from-JFK-airport-28\"><span class=\"toc-item-num\">28&nbsp;&nbsp;<\/span>find distance from JFK airport<\/a><\/span><\/li><li><span><a href=\"#realation-between-minimum_nights-&amp;-distance_from_JFK_airport\" data-toc-modified-id=\"realation-between-minimum_nights-&amp;-distance_from_JFK_airport-29\"><span class=\"toc-item-num\">29&nbsp;&nbsp;<\/span>realation between minimum_nights &amp; distance_from_JFK_airport<\/a><\/span><\/li><li><span><a href=\"#realation-between-price_log_10-&amp;-distance_from_JFK_airport\" data-toc-modified-id=\"realation-between-price_log_10-&amp;-distance_from_JFK_airport-30\"><span class=\"toc-item-num\">30&nbsp;&nbsp;<\/span>realation between price_log_10 &amp; distance_from_JFK_airport<\/a><\/span><\/li><\/ul><\/div>","924d3c3d":"### realation between price_log_10 & distance_metro_entrance","563f1e49":"### realation between neighbourhood_group & price_log_10","f15afc37":"### Transfer price to $\\log_{10}^{price}$ to make the dist , Normal\nwe want to adjust a function to make price data , normal dist.","479bfa6e":"### Add new data NY metro station location ","8875ea1f":"### realation between neighbourhood_group & distance_metro_entrance","cfdd96f0":"### Data Cleaning\nclean records with price = 0","213aba59":"### Transfer price to $\\ln^{price}$ to make the dist , Normal\nwe want to adjust a function to make price data , normal dist.","14a7be5f":"### find distance from JFK airport","b502d2f7":"### Check Null Data","363715ce":"### realation between reviews_per_month & neighbourhood_group","292fe94a":"### find distance from NY centeral Station","bb3be155":"### realation between reviews_per_month & price_log_10","38ef0611":"### realation between minimum_nights & distance_from_JFK_airport","6a61d187":"### Check Distribution  of price in each Neighbourhood group","c9663ddc":"### realation between room_type & price_log_10","c9180cb8":"### realation between price_log_10 & distance_from_JFK_airport","1a73270a":"### Anova test","f03c6c5a":"### find distance of each home from nearest metro enterance\n\nwe save data in distinct csv because this code take 5 hours to run.","2181487b":"### check number of records","3e2c009b":"Define new variable {All_year_availability}\n\nAll_year_availability = $\\begin{cases} 1 ~ if ~ availability365 = 365 \\\\\n0 ~ otherwise\n\\end{cases}$\n\nthis var say that could a person books in all days of year or not","81933525":"### realation between All_year_availability & price_log_10","5f505eb5":"### Basic Stat Report from numeric Columns","f5efd436":"### read data","6d0b0e99":" ### realation between price_log_10 & distance_from_central_station","5135fb80":"### realation between minimum_nights & distance_metro_entrance","5b20e743":"### T-Test","92fdb637":"### find outlier records in price\nif \n\\begin{equation*}\ndata > mean + 3*std \n\\end{equation*}\nwe know it as outlier","0e1392da":"### Clean reviews_per_month\nfill null data with zero","e3df9dff":"### find duplicate hosts by host_id"}}