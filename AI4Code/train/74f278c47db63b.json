{"cell_type":{"d6af5efd":"code","0d12cd04":"code","cde0873d":"code","fa389750":"code","b9251760":"code","064f6eff":"code","4e29b6d4":"code","7e0f8e4a":"code","4fbfd8a2":"code","2c61050d":"code","a4b4919c":"code","cb24f63e":"code","9ba8f321":"code","d0fb81c6":"code","53cbf1ef":"code","12dc937e":"code","8b0ef095":"markdown","1288fabb":"markdown","dfcd3ff8":"markdown","d679cf1c":"markdown","e1ab6ea3":"markdown","76d6ad02":"markdown","3895bf28":"markdown","667922b8":"markdown","96b21b2d":"markdown","65a1a8c8":"markdown","9c310a52":"markdown"},"source":{"d6af5efd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0d12cd04":"# Data Input and Cleaning\n\nfull_data = pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')\nfull_data.head()","cde0873d":"full_data.isnull().sum()","fa389750":"# fill nan values\n\nnan_replacements = {\"children\": 0, \"country\": 0, \"agent\": 0, \"company\": 0}\nfull_data_cln = full_data.fillna(nan_replacements)\nfull_data_cln['meal'].replace('Undefined', 'SC', inplace = True)\n\nzero_guest = list(full_data_cln.loc[full_data_cln['adults'] + full_data_cln['children'] + full_data_cln['babies'] == 0].index)\nfull_data_cln.drop(zero_guest, inplace = True)","b9251760":"# First, let us group the data by hotel and only use the uncanceled data\n\nrh = pd.DataFrame(full_data_cln.loc[(full_data_cln['hotel'] == 'Resort Hotel') & (full_data_cln['is_canceled'] == 0)])\nch = pd.DataFrame(full_data_cln.loc[(full_data_cln['hotel'] == 'City Hotel') & (full_data_cln['is_canceled'] == 0)])\nrh.head(5)","064f6eff":"# sort country data\n\ncountry_data = pd.DataFrame(full_data_cln.loc[full_data_cln[\"is_canceled\"] == 0][\"country\"].value_counts())\ncountry_data.rename(columns = {'country': 'guests number'}, inplace = True)\ncountry_data['country'] = country_data.index\ncountry_data['percent'] = country_data['guests number'] \/ country_data['guests number'].sum()\ncountry_data.head()","4e29b6d4":"# plot\n\nfig = plt.figure(figsize = (16,9))\nax = fig.add_subplot(121)\ncountry_data_plot = country_data.iloc[:10, :]\n\nfont = {'family': 'Times New Roman', 'weight': 'normal', 'size': 20}\nax.set_xlabel('Country', font)\nax.set_ylabel('Number', font)\nax.bar(country_data_plot['country'], country_data_plot['guests number'])\n\nax = fig.add_subplot(122)\ncountry_pie_data = country_data.iloc[:10, :]\nax.pie(x = country_pie_data['guests number'], labels = country_pie_data['country'], autopct = '%.3f%%')\n\nfig.suptitle('The Number of Guests From Different Countries',fontsize = 20)\nax.legend()","7e0f8e4a":"# First let us calculate the average price per person\n\nrh['adrpp'] = rh['adr'] \/ (rh['adults'] + rh['children'])\nch['adrpp'] = ch['adr'] \/ (ch['adults'] + ch['children'])\nprint(\"The price per person of Resort hotel is {:.2f}\".format(rh['adrpp'].mean()))\nprint(\"The price per person of City hotel is {:.2f}\".format(ch['adrpp'].mean()))","4fbfd8a2":"rh_2015 = rh.loc[rh['arrival_date_year'] == 2015][['arrival_date_month', 'adrpp']]\nrh_2016 = rh.loc[rh['arrival_date_year'] == 2016][['arrival_date_month', 'adrpp']]\nrh_2017 = rh.loc[rh['arrival_date_year'] == 2017][['arrival_date_month', 'adrpp']]\n\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n          \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\nrh_2015_plot = pd.DataFrame(columns = {'month', 'adrpp'})\nrh_2016_plot = pd.DataFrame(columns = {'month', 'adrpp'})\nrh_2017_plot = pd.DataFrame(columns = {'month', 'adrpp'})\n\n\nfor i in range(len(months)):\n    adrpp = rh_2015.loc[rh_2015['arrival_date_month'] == months[i]]['adrpp'].mean()\n    rh_2015_plot = rh_2015_plot.append(pd.DataFrame({'month': months[i], 'adrpp': adrpp}, index = [i]), ignore_index = True)\n\nfor i in range(len(months)):\n    adrpp = rh_2016.loc[rh_2016['arrival_date_month'] == months[i]]['adrpp'].mean()\n    rh_2016_plot = rh_2016_plot.append(pd.DataFrame({'month': months[i], 'adrpp': adrpp}, index = [i]), ignore_index = True)\n\nfor i in range(len(months)):\n    adrpp = rh_2017.loc[rh_2017['arrival_date_month'] == months[i]]['adrpp'].mean()\n    rh_2017_plot = rh_2017_plot.append(pd.DataFrame({'month': months[i], 'adrpp': adrpp}, index = [i]), ignore_index = True)\n    \n\nfig = plt.figure(figsize = (16, 9))\nplt.plot(rh_2015_plot['month'], rh_2015_plot['adrpp'], label = 'Price in 2015')\nplt.plot(rh_2016_plot['month'], rh_2016_plot['adrpp'], label = 'Price in 2016')\nplt.plot(rh_2017_plot['month'], rh_2017_plot['adrpp'], label = 'Price in 2017')\nplt.title(\"Room price per night and person over the year [Resort Hotel]\", fontsize=16)\nplt.xlabel(\"Month\", fontsize=16)\nplt.xticks(rotation=45)\nplt.ylabel(\"Price\", fontsize=16)\nplt.ylim(0, 120)\nplt.legend()","2c61050d":"ch_2015 = ch.loc[ch['arrival_date_year'] == 2015][['arrival_date_month', 'adrpp']]\nch_2016 = ch.loc[ch['arrival_date_year'] == 2016][['arrival_date_month', 'adrpp']]\nch_2017 = ch.loc[ch['arrival_date_year'] == 2017][['arrival_date_month', 'adrpp']]\n\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n          \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\nch_2015_plot = pd.DataFrame(columns = {'month', 'adrpp'})\nch_2016_plot = pd.DataFrame(columns = {'month', 'adrpp'})\nch_2017_plot = pd.DataFrame(columns = {'month', 'adrpp'})\n\n\nfor i in range(len(months)):\n    adrpp = ch_2015.loc[ch_2015['arrival_date_month'] == months[i]]['adrpp'].mean()\n    ch_2015_plot = ch_2015_plot.append(pd.DataFrame({'month': months[i], 'adrpp': adrpp}, index = [i]), ignore_index = True)\n\nfor i in range(len(months)):\n    adrpp = ch_2016.loc[ch_2016['arrival_date_month'] == months[i]]['adrpp'].mean()\n    ch_2016_plot = ch_2016_plot.append(pd.DataFrame({'month': months[i], 'adrpp': adrpp}, index = [i]), ignore_index = True)\n\nfor i in range(len(months)):\n    adrpp = ch_2017.loc[ch_2017['arrival_date_month'] == months[i]]['adrpp'].mean()\n    ch_2017_plot = ch_2017_plot.append(pd.DataFrame({'month': months[i], 'adrpp': adrpp}, index = [i]), ignore_index = True)\n    \n\nfig = plt.figure(figsize = (16, 9))\nplt.plot(ch_2015_plot['month'], ch_2015_plot['adrpp'], label = 'Price in 2015')\nplt.plot(ch_2016_plot['month'], ch_2016_plot['adrpp'], label = 'Price in 2016')\nplt.plot(ch_2017_plot['month'], ch_2017_plot['adrpp'], label = 'Price in 2017')\nplt.title(\"Room price per night and person over the year [City Hotel]\", fontsize=16)\nplt.xlabel(\"Month\", fontsize=16)\nplt.xticks(rotation=45)\nplt.ylabel(\"Price\", fontsize=16)\nplt.ylim(0, 120)\nplt.legend()\n\n\n## \u8fd9\u4e00\u5927\u6bb5\u540e\u6765\u770b\u7684\u65f6\u5019\u53d1\u73b0\u7528groupby\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86...\u5c31\u662f\u9700\u8981\u8c03\u6574\u4e0b\u6708\u4efd\u7684\u987a\u5e8f...\u5f53\u65f6\u7ecf\u9a8c\u4e0d\u8db3","a4b4919c":"# The segment proportion of two hotels\n\nfig = plt.figure(figsize = (16, 9))\n\nax = fig.add_subplot(121)\nrh['market_segment'].value_counts()\nrh_segment_pie = pd.DataFrame(rh['market_segment'].value_counts())\nax.set_title('The Market Segment of Resort Hotel', fontsize = 14)\nax = plt.pie(x = rh_segment_pie['market_segment'], labels = rh_segment_pie.index, autopct = '%.3f%%')\n\nax = fig.add_subplot(122)\nch['market_segment'].value_counts()\nch_segment_pie = pd.DataFrame(ch['market_segment'].value_counts())\nax.set_title('The Market Segment of City Hotel', fontsize = 14)\nax = plt.pie(x = ch_segment_pie['market_segment'], labels = ch_segment_pie.index, autopct = '%.3f%%')","cb24f63e":"# The price on different segments\n\nplt.figure(figsize=(16, 9))\nsns.barplot(x=\"market_segment\",\n            y=\"adrpp\",\n            hue = \"reserved_room_type\",\n            data=rh,\n            ci=\"sd\",\n            errwidth=0,\n            capsize=0.1)\nplt.title(\"ADR by market segment and room type [Resort Hotel]\", fontsize=16)\nplt.xlabel(\"Market segment\", fontsize=16)\nplt.xticks(rotation=45)\nplt.ylim(0,300)\nplt.ylabel(\"ADR per person\", fontsize=16)\nplt.legend()\nplt.show()","9ba8f321":"plt.figure(figsize=(16, 9))\nsns.barplot(x=\"market_segment\",\n            y=\"adrpp\",\n            hue=\"reserved_room_type\",\n            data=ch,\n            ci=\"sd\",\n            errwidth=0,\n            capsize=0.1)\nplt.title(\"ADR by market segment and room type [City Hotel]\", fontsize=16)\nplt.xlabel(\"Market segment\", fontsize=16)\nplt.xticks(rotation=45)\nplt.ylabel(\"ADR per person\", fontsize=16)\nplt.legend()\nplt.ylim(0,300)\nplt.show()","d0fb81c6":"aviation = ch.loc[ch['market_segment'] == 'Aviation'][['is_canceled', 'adults', 'children', 'babies', 'lead_time', 'adrpp', 'required_car_parking_spaces']]\naviation.describe()","53cbf1ef":"non_aviation = ch.loc[ch['market_segment'] != 'Aviation'][['is_canceled', 'adults', 'children', 'babies', 'lead_time', 'adrpp', 'required_car_parking_spaces']]\nnon_aviation.describe()","12dc937e":"rh_month_guests = pd.DataFrame(rh['arrival_date_month'].value_counts())\nch_month_guests = pd.DataFrame(ch['arrival_date_month'].value_counts())\nrh_month_guests = rh_month_guests.loc[months]\nch_month_guests = ch_month_guests.loc[months]\n\n\nfig = plt.figure(figsize = (16, 9))\n\nx = list(range(len(months)))\nx_rh = [i-0.2 for i in list(range(len(months)))]\nx_ch = [i+0.2 for i in list(range(len(months)))]\n\nplt.bar(x_rh, rh_month_guests['arrival_date_month'], width = 0.4, label = 'Resort Hotel')\nplt.bar(x_ch, ch_month_guests['arrival_date_month'], width = 0.4, label = 'City Hotel')\nplt.plot(x_rh, rh_month_guests)\nplt.plot(x_ch, ch_month_guests)\nplt.ylabel('Number of Booking', font)\nplt.xlabel('Month', font)\nplt.xticks(x, months, rotation=45)\nplt.title('The Booking Number of different months', font)\nplt.legend()","8b0ef095":"&emsp;&emsp;Sorry that I can't use python to draw a map so I use tableau instead.\n\n[![2VNMin.png](https:\/\/z3.ax1x.com\/2021\/05\/30\/2VNMin.png)](https:\/\/imgtu.com\/i\/2VNMin)","1288fabb":"We can find that the lead time is very short for aviation booking, and the booking often has just one adult but the guests of non aviation booking order seem like families.  ","dfcd3ff8":"### 1. Where do the guests come from?","d679cf1c":"Analysis:  \n&emsp;&emsp;From the pie graphs we can see that the Online TA takes a large part, meaning that Internet booking has been a main current for hotel booking even the whole travel industry since 2015. This inspires merchants that they should expand Internet business and improving corresponding service. But according to my experience, some scenic spots or hotels have no good online software environment and depend on other software like Ctrip or Meituan Greatly.","e1ab6ea3":"Analysis:  \n&emsp;&emsp;From the pictures we can see that most of the guests come from PRT, GBR, FRA or other Europe countries. Here the guests from PRT account for about a third.  \n&emsp;&emsp;But pay attention that we sum all the guests of different hotels together, so I also want to see the differences between the two hotels.","76d6ad02":"# EDA of Hotel Booking Demand\n## Content:\n&emsp;&emsp;Hi, this is my first EDA project. In this project, I refer the questions provided by the most voted project \"EDA of bookings and ML to predict cancelations\" on Kaggle and use my own methods to realize and analyst it again. This is a great experience but due to my poor Python skill I complete it slowly and the codes are very naive. Hoping I can do better work in the future.\n\n&emsp;&emsp;The following preface is copied from Kaggle, I will choose several questions in them.\n\n&emsp;&emsp;The dataset contains data from two different hotels. One Resort hotel and one City hotel.    \n\n&emsp;&emsp;The data contains \"bookings due to arrive between the 1st of July of 2015 and the 31st of August 2017\".  \nNote: For most questions I will only use bookings that were not canceled, to get acutal guest numbers. As you will see, this is quite a big difference.\n\n&emsp;&emsp;Topics covered and questions to answer from the data:  \n\n    Where do the guests come from?\n    How much do guests pay for a room per night?\n    How does the price per night vary over the year?\n    Which are the most busy month?\n    How long do people stay at the hotels?\n    Bookings by market segment\n    How many bookings were canceled?\n    Which month have the highest number of cancelations?","3895bf28":"### 2. How does the price per night vary over the year?","667922b8":"Analysis:  \n&emsp;&emsp;From the pictures we see different trends. For the Resort hotel, the price is regular, which reachs its maximum in September (This is not surprising because September is in summer vacation). For the City hotel, the price has two peaks and one is in May. But the price actually is very stable during thw whole year.  \n&emsp;&emsp;Besides, no matter which hotel, the price is increasing with the year.","96b21b2d":"### 3. Bookings by market segment","65a1a8c8":"### 4. Which are the most busy months?","9c310a52":"We can see that the price of aviation is very high. Now let's find the reason. "}}