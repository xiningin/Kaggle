{"cell_type":{"99735b72":"code","347a2d2c":"code","5fdea4f8":"code","7a7604d3":"code","3b802ac7":"code","0f53d3cd":"code","39f0b127":"code","92fe56f6":"code","d2c3c98b":"code","9247d87d":"code","5d7679b0":"code","0a00a6fc":"code","cb831058":"code","486e1be2":"code","02e4790d":"markdown","604324e2":"markdown","0b57d7aa":"markdown","914a96bd":"markdown","1783f0e5":"markdown","547197c8":"markdown","39e7634a":"markdown","92ca1a90":"markdown","c5ee9c3b":"markdown","5192bd50":"markdown","eea71798":"markdown"},"source":{"99735b72":"#Importing libraries\nimport numpy as np\nimport pandas as pd","347a2d2c":"#Importing dataset\ndf = pd.read_csv('..\/input\/mercedesbenz-greener-manufacturing\/train.csv', usecols=['X1', 'X2'])\ndf.head()","5fdea4f8":"#Let's have a look at unique values in the columns\nfor cols in df:\n    print(df[cols].unique())","7a7604d3":"df['X1'].unique()","3b802ac7":"len(df['X1'].unique())","0f53d3cd":"df['X2'].unique()","39f0b127":"len(df['X2'].unique())","92fe56f6":"df.shape","d2c3c98b":"# let's examine how many columns we will obtain after one hot encoding these variables\npd.get_dummies(df,drop_first=True).shape","9247d87d":"# let's find the top 10 most frequent categories for the variable X2\ndf.X2.value_counts().sort_values(ascending=False).head(20)","5d7679b0":"#Let's make a list with most frequent categories of the variables\n\ntop_10_labels = [y for y in df.X2.value_counts().sort_values(ascending=False).head(10).index]","0a00a6fc":"top_10_labels","cb831058":"# get whole set of dummy variables, for all the categorical variables\ndef one_hot_encoding_top_x(df, variable, top_x_labels):\n    # function to create the dummy variables for the most frequent labels\n    # we can vary the number of most frequent labels that we encode\n    for label in top_x_labels:\n        df[variable+'_'+label] = np.where(df[variable]==label,1,0)","486e1be2":"# read the data again\ndf = pd.read_csv('..\/input\/mercedesbenz-greener-manufacturing\/train.csv', usecols=['X1', 'X2'])\n# encode X2 into the 10 most frequent categories\none_hot_encoding_top_x(df, 'X2', top_10_labels)\ndf.head()","02e4790d":"This involves two steps:\n\nInteger Encoding<br>\nOne-Hot Encoding","604324e2":"Categorical data are variables that contain label values rather than numeric values.\n\nThe number of possible values is often limited to a fixed set.\n\nCategorical variables are often called nominal.\n\nSome examples include:\n\nA \u201cpet\u201d variable with the values: \u201cdog\u201d and \u201ccat\u201c.\nA \u201ccolor\u201d variable with the values: \u201cred\u201c, \u201cgreen\u201d and \u201cblue\u201c.\nA \u201cplace\u201d variable with the values: \u201cfirst\u201d, \u201csecond\u201d and \u201cthird\u201c.\nEach value represents a different category.\n\nSome categories may have a natural relationship to each other, such as a natural ordering.\n\nThe \u201cplace\u201d variable above does have a natural ordering of values. This type of categorical variable is called an ordinal variable.","0b57d7aa":"# What is Categorical Data? ","914a96bd":"1. Nominal Encoding (Rank does not matter)\n    * One Hot Encoding\n    * One Hot Encoding with many categorical values\n    * Mean Encoding    \n2. Ordinal Encoding (Rank matters)\n    * Label Encoding\n    * Target guided ordinal encoding    ","1783f0e5":"# How to Convert Categorical Data to Numerical Data? ","547197c8":"As a first step, each unique category value is assigned an integer value.\n\nFor example, \u201cred\u201d is 1, \u201cgreen\u201d is 2, and \u201cblue\u201d is 3.\n\nThis is called a label encoding or an integer encoding and is easily reversible.\n\nFor some variables, this may be enough.\n\nThe integer values have a natural ordered relationship between each other and machine learning algorithms may be able to understand and harness this relationship.\n\nFor example, ordinal variables like the \u201cplace\u201d example above would be a good example where a label encoding would be sufficient.","39e7634a":"# Types of Encoding ","92ca1a90":"# One Hot Encoding - variables with many categories ","c5ee9c3b":"# Integer Encoding ","5192bd50":"For categorical variables where no such ordinal relationship exists, the integer encoding is not enough.\n\nIn fact, using this encoding and allowing the model to assume a natural ordering between categories may result in poor performance or unexpected results (predictions halfway between categories).\n\nIn this case, a one-hot encoding can be applied to the integer representation. This is where the integer encoded variable is removed and a new binary variable is added for each unique integer value.","eea71798":"We can observe that from with just 2 categorical features we are getting 69 features with the help of one hot encoding.\n\nWhat can we do instead?\n\nIt is preferred to use 10 most frequent labels and convert them into dummy variables using onehotencoding"}}