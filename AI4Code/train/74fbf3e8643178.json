{"cell_type":{"c4a82959":"code","8b33e3cc":"code","0483003d":"code","f0a6a170":"code","f1cc3b5b":"code","2915a7b7":"code","c7d3beaa":"code","89951d07":"code","d24a71be":"code","f6c23bd4":"code","9da511f0":"code","76b4929e":"code","fce057c5":"code","12bb7fce":"code","e61a0df2":"code","2435c68a":"code","7a38609f":"code","7bff27d6":"code","ecef9d17":"code","152b24dc":"code","abcccb12":"code","b16486fc":"code","e6a91d68":"code","57d77d79":"code","9d4d8e84":"code","20955b8c":"code","0c8d9931":"code","b7e591d7":"code","27a55bff":"code","3df7a3c8":"code","135f7afe":"code","9f96b5c2":"code","68d3db6f":"code","095f3284":"code","760a4ff6":"code","5ddb2a6d":"code","202e151f":"code","f139f8df":"code","51ac9c96":"code","ffb7e9b3":"code","06154fa0":"code","43d810d7":"code","cf841dbd":"code","48f46816":"code","27e08261":"code","0cf2cd59":"code","e74054d6":"code","c5e5a900":"code","14f8e8e6":"code","f2c6d9e1":"code","6e415a46":"code","26ca15ca":"code","6e74751e":"code","a0467416":"code","c3b7fef7":"code","264a35ac":"code","b3062ce6":"code","7bc8ef48":"code","c7a0fc4e":"code","2f317c29":"code","b5f69271":"code","689eb574":"code","3e6dbfab":"code","e87eacfd":"code","0b630821":"code","88ddd692":"code","d5d3a991":"code","705f096c":"code","b21199f9":"code","2610a1cb":"code","08754b4a":"code","c0d3ae48":"code","eaa47c8f":"code","8c8f8464":"code","eb4466c0":"markdown","36ddcea5":"markdown","57664fa2":"markdown","14637d82":"markdown","3c803a83":"markdown","dadd1290":"markdown","aa08a1f5":"markdown","d04ba8a2":"markdown","7836b23f":"markdown","0c0b8309":"markdown","b7fc8c67":"markdown","d090b065":"markdown","04cfe16a":"markdown","dae76fc9":"markdown","c34b7781":"markdown","20f0be94":"markdown","8af47b49":"markdown","d214b70a":"markdown","0c4614ab":"markdown","3b79a461":"markdown","986ad4f2":"markdown","1d45da49":"markdown","4d86dc4e":"markdown","b21d1532":"markdown","b8cd47b7":"markdown","6bddeacf":"markdown","396b5766":"markdown","b2917be5":"markdown","350f5442":"markdown","238995ce":"markdown","1172edc4":"markdown","b3482b28":"markdown","4c448978":"markdown","86054be5":"markdown","f61e01d5":"markdown","820ce953":"markdown","a91ec328":"markdown","88e36b61":"markdown","8dbfa2be":"markdown","891546bb":"markdown","6b3f4d4e":"markdown","7ae0c8d5":"markdown"},"source":{"c4a82959":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8b33e3cc":"data = pd.read_csv('\/kaggle\/input\/ibm-hr-analytics-attrition-dataset\/WA_Fn-UseC_-HR-Employee-Attrition.csv')","0483003d":"data.head()","f0a6a170":"data.columns","f1cc3b5b":"plt.figure(figsize=(15,8))\nax = sns.countplot(data.Age)","2915a7b7":"plt.figure(figsize=(8,5))\nax = sns.countplot(data.Attrition)","c7d3beaa":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.BusinessTravel) ","89951d07":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.DailyRate)","d24a71be":"plt.figure(figsize=(10,6))\n\nax = sns.kdeplot(data.DistanceFromHome)","f6c23bd4":"# Right Skew","9da511f0":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.Department) ","76b4929e":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.Education) ","fce057c5":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.EducationField) ","12bb7fce":"data.EmployeeCount.value_counts()","e61a0df2":"# Not useful","2435c68a":"# Not useful ","7a38609f":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.EnvironmentSatisfaction)","7bff27d6":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.Gender) ","ecef9d17":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.HourlyRate)","152b24dc":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.JobInvolvement)","abcccb12":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.JobLevel)","b16486fc":"plt.figure(figsize=(15,6))\nax = sns.countplot(data.JobRole)\nt=plt.xticks(rotation=45) ","e6a91d68":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.JobSatisfaction)","57d77d79":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.MaritalStatus) ","9d4d8e84":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.MonthlyIncome)","20955b8c":"# Right Skew","0c8d9931":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.MonthlyRate)","b7e591d7":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.NumCompaniesWorked)","27a55bff":"data.Over18.value_counts()","3df7a3c8":"# Not useful ","135f7afe":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.OverTime) ","9f96b5c2":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.PercentSalaryHike) ","68d3db6f":"# A little right skew","095f3284":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.PerformanceRating)","760a4ff6":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.RelationshipSatisfaction)","5ddb2a6d":"data.StandardHours.value_counts()","202e151f":"# Not useful ","f139f8df":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.StockOptionLevel)","51ac9c96":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.TotalWorkingYears) ","ffb7e9b3":"# A little right skew","06154fa0":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.TrainingTimesLastYear)","43d810d7":"plt.figure(figsize=(10,6))\nax = sns.countplot(data.WorkLifeBalance)","cf841dbd":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.YearsAtCompany) ","48f46816":"# Right skew","27e08261":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.YearsInCurrentRole)","0cf2cd59":"# There are 2 curves : young people vs older people","e74054d6":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.YearsSinceLastPromotion) ","c5e5a900":"# Right skew","14f8e8e6":"plt.figure(figsize=(10,6))\nax = sns.kdeplot(data.YearsWithCurrManager)","f2c6d9e1":"# Almost the same as YearsInCurrentRole","6e415a46":"g=data.groupby('Age')['YearsAtCompany'].mean().plot()","26ca15ca":"g=data.groupby('Age')['YearsInCurrentRole'].mean().plot()","6e74751e":"# Normalize features columns\n# Models performe better when values are close to normally distributed\nfrom sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()","a0467416":"data['DistanceFromHome'] = scaler.fit_transform(data['DistanceFromHome'].values.reshape(-1, 1))\ndata['MonthlyIncome'] = scaler.fit_transform(data['MonthlyIncome'].values.reshape(-1, 1))\ndata['PercentSalaryHike'] = scaler.fit_transform(data['PercentSalaryHike'].values.reshape(-1, 1))\ndata['TotalWorkingYears'] = scaler.fit_transform(data['TotalWorkingYears'].values.reshape(-1, 1))\ndata['YearsAtCompany'] = scaler.fit_transform(data['YearsAtCompany'].values.reshape(-1, 1))\ndata['YearsSinceLastPromotion'] = scaler.fit_transform(data['YearsSinceLastPromotion'].values.reshape(-1, 1))","c3b7fef7":"# Convert to categorical values\ndata['Attrition'] = data.Attrition.astype('category').cat.codes\ndata['BusinessTravel'] = data.BusinessTravel.astype('category').cat.codes\ndata['Department'] = data.Department.astype('category').cat.codes\ndata['EducationField'] = data.EducationField.astype('category').cat.codes\ndata['Gender'] = data.Gender.astype('category').cat.codes\ndata['JobRole'] = data.JobRole.astype('category').cat.codes\ndata['MaritalStatus'] = data.MaritalStatus.astype('category').cat.codes \ndata['OverTime'] = data.OverTime.astype('category').cat.codes","264a35ac":"# Check NA\ndata.isnull().sum(axis = 0)","b3062ce6":"# Remove columns not useful\ndata = data.drop([\"EmployeeCount\", \"EmployeeNumber\", \"Over18\", \"StandardHours\"], axis=1)","7bc8ef48":"# Get columns with at least 0.1 correlation\ndata_corr = data.corr()['Attrition'] # Attrition : column to predict\ncols = data_corr[abs(data_corr) > 0.1].index.tolist()\ndata = data[cols]","c7a0fc4e":"# plot the heatmap\ndata_corr = data.corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(data_corr, \n        xticklabels=data_corr.columns,\n        yticklabels=data_corr.columns, cmap=sns.diverging_palette(220, 20, n=200))","2f317c29":"data.corr()['Attrition'].sort_values(ascending=False)","b5f69271":"# Check correlations between columns\ndata['JobLevel'].corr(data['MonthlyIncome'])","689eb574":"# Too much correlation","3e6dbfab":"data['YearsAtCompany'].corr(data['YearsWithCurrManager'])","e87eacfd":"data['JobLevel'].corr(data['TotalWorkingYears'])","0b630821":"data['YearsInCurrentRole'].corr(data['YearsWithCurrManager'])","88ddd692":"# Remove columns with too much correlation\ndata = data.drop([\"MonthlyIncome\", \"YearsAtCompany\", \"JobLevel\", \"YearsWithCurrManager\"], axis=1)","d5d3a991":"data.columns","705f096c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import tree\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import GridSearchCV","b21199f9":"X = data.drop(\"Attrition\", axis=1)\nY = data[\"Attrition\"]","2610a1cb":"# Split 20% test, 80% train\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state=0)","08754b4a":"# Logistic Regression\n\nlog = LogisticRegression(max_iter=1000)\nlog.fit(X_train, Y_train)\nY_pred_log = log.predict(X_test)\nacc_log = accuracy_score(Y_pred_log, Y_test)\nacc_log","c0d3ae48":"t = tree.DecisionTreeClassifier()\n\n# search the best params\ngrid = {'min_samples_split': [5, 10, 20, 50, 100]},\n\nclf_tree = GridSearchCV(t, grid, cv=10)\nclf_tree.fit(X_train, Y_train)\n\nY_pred_tree = clf_tree.predict(X_test)\n\n# get the accuracy score\nacc_tree = accuracy_score(Y_pred_tree, Y_test)\nprint(acc_tree)","eaa47c8f":"rf = RandomForestClassifier()\n\n# search the best params\ngrid = {'n_estimators':[100,200], 'max_depth': [2,5,10]}\n\nclf_rf = GridSearchCV(rf, grid, cv=10)\nclf_rf.fit(X_train, Y_train)\n\nY_pred_rf = clf_rf.predict(X_test)\n# get the accuracy score\nacc_rf = accuracy_score(Y_pred_rf, Y_test)\nprint(acc_rf)","8c8f8464":"# The best model is Logistic Regression","eb4466c0":"### Environment Satisfaction","36ddcea5":"### Num Companies Worked","57664fa2":"### Years In Current Role","14637d82":"### Years At Company","3c803a83":"# Correlation","dadd1290":"### Stock Option Level","aa08a1f5":"### Relationship Satisfaction","d04ba8a2":"# Data Exploration","7836b23f":"### Marital Status","0c0b8309":"### EmployeeCount","b7fc8c67":"### Work Life Balance","d090b065":"### Business Travel","04cfe16a":"### Education Field","dae76fc9":"### Age vs YearsAtCompany","c34b7781":"### Performance Rating","20f0be94":"### Percent Salary Hike","8af47b49":"### Gender","d214b70a":"### Monthly Rate","0c4614ab":"### Job Involvement","3b79a461":"### Years Since Last Promotion","986ad4f2":"# Creating the model","1d45da49":"### Over 18","4d86dc4e":"### Job Level","b21d1532":"### Daily Rate","b8cd47b7":"### Hourly Rate","6bddeacf":"### Monthly Income","396b5766":"# Conclusion","b2917be5":"### Attrition","350f5442":"### Job Role","238995ce":"### Department","1172edc4":"### Standard Hours","b3482b28":"### Over Time","4c448978":"# Data Featuring","86054be5":"### Distance From Home","f61e01d5":"### Age vs YearsInCurrentRole","820ce953":"### Age","a91ec328":"### Education","88e36b61":"### Years With Current Manager","8dbfa2be":"### Total Working Years","891546bb":"### Employee Number","6b3f4d4e":"### Job Satisfaction","7ae0c8d5":"### Training Times Last Year"}}