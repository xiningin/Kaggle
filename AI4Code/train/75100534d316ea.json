{"cell_type":{"7d17334b":"code","e55db53a":"code","49db7d5e":"code","c486b351":"code","c3517784":"code","1790208d":"code","e0691898":"code","24312a16":"code","0216fc31":"code","f04aebd2":"code","3544e5f6":"code","077066e3":"code","348ef799":"code","22865b04":"code","6e801863":"code","2b86f40c":"code","2b7b8d31":"code","07a2edea":"code","0ae2effe":"code","90bf1d82":"code","b382da39":"markdown","e28dbe96":"markdown","53849126":"markdown","98eb028a":"markdown","54487157":"markdown","ab94cb32":"markdown"},"source":{"7d17334b":"import pandas as pd\nimport numpy as np","e55db53a":"#Importing the movies database\nmovies_df=pd.read_csv('..\/input\/movies.csv')\nmovies_df.head()","49db7d5e":"#Removing the year from title and inserting as a seperate column\nmovies_df['year']=movies_df.title.str.extract('(\\(\\d\\d\\d\\d\\))',expand=False)\nmovies_df['year']=movies_df.year.str.extract('(\\d\\d\\d\\d)',expand=False)\nmovies_df['title']=movies_df.title.str.replace('(\\(\\d\\d\\d\\d\\))','')\nmovies_df['title']=movies_df['title'].apply(lambda x:x.strip())\nmovies_df.head()","c486b351":"#Splitting the genres into a list\nmovies_df['genres']=movies_df['genres'].str.split('|')\nmovies_df.head()","c3517784":"#Applying One Hot Encoding and changing the genres into numerical values\nmovies=movies_df.copy()\nfor index,row in movies_df.iterrows():\n    for genre in row['genres']:\n        movies.at[index,genre]=1","1790208d":"#Filling the columns with value nan to 0\nmovies=movies.fillna(0)\nmovies.head()","e0691898":"#Getting user ratings\n#Any number of entries can be given here\nuserInput=[\n            {'title':'Just Go with It', 'rating':4.3},\n            {'title':'Crazy Stupid Love', 'rating':4},\n            {'title':'300', 'rating':4.5},\n            {'title':\"Knocked Up\", 'rating':4.5},\n            {'title':'40-Year-Old Virgin, The', 'rating':4.4},\n            {'title': 'The Fault in Our Stars', 'rating':1.5}\n        ]\ninputMovies=pd.DataFrame(userInput)\ninputMovies","24312a16":"#Getting movieId from movies database\ninputId=movies_df[movies_df['title'].isin(inputMovies['title']).tolist()]\ninputMovies=pd.merge(inputId,inputMovies)\ninputMovies","0216fc31":"inputMovies=inputMovies.drop('genres',1).drop('year',1)\n#inputMovies=inputMovies.drop(3).drop(4)\n#inputMovies=inputMovies.reset_index(drop=True)\ninputMovies","f04aebd2":"#Creating a user watched movie table\nuserMovies=movies[movies['movieId'].isin(inputMovies['movieId'].tolist())]\nuserMovies","3544e5f6":"userMovies=userMovies.reset_index(drop=True)\nuserGenres=userMovies.drop('movieId',1).drop('title',1).drop('genres',1).drop('year',1)\nuserGenres","077066e3":"userGenres.transpose()","348ef799":"#Creating a user profile\nuserProfile=userGenres.transpose().dot(inputMovies['rating'])","22865b04":"userProfile","6e801863":"genreTable=movies.set_index(movies['movieId'])\ngenreTable.head()","2b86f40c":"genreTable=genreTable.drop('movieId',1).drop('title',1).drop('genres',1).drop('year',1)\ngenreTable","2b7b8d31":"#Creating the recommendation matrix by multiplying the genre matrix with the user profile matrix and summing and normalizing the result\nrecommendTable=((genreTable*userProfile).sum(axis=1))\/userProfile.sum()\nrecommendTable","07a2edea":"#The recommendation matrix is created with the recommendations for each film in the range [0,1]\nrecommendTable=recommendTable.sort_values(ascending=False)","0ae2effe":"recommendTable.head()","90bf1d82":"#Using the movieId from the recommendation matrix to extract the names of the top 50 recommendations from the movies database\nmovies_df.loc[movies_df['movieId'].isin(recommendTable.head(50).keys())]","b382da39":"# 1. Data Cleaning","e28dbe96":"# Thank You \ud83d\ude4f","53849126":"# Movie Recommendor \ud83c\udfac\ud83c\udf7f\nA content based movie recommendation system that takes the likings and disliking of a user and builds a profile to recommend movies on the basis of their liking of a particular genre.","98eb028a":"### Enjoy the movies","54487157":"# 3. Generating Recommendations","ab94cb32":"# 2. Building User Profile"}}