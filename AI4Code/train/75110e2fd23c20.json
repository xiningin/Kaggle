{"cell_type":{"9e55f6b0":"code","83173d08":"code","5cd4964e":"code","58cacbcd":"code","71f5097f":"code","c4ef9638":"code","559375f1":"code","3ae0ca23":"code","992186bd":"code","f918c17e":"code","d3addd6e":"code","69c5e41b":"code","8bd32d07":"markdown"},"source":{"9e55f6b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83173d08":"# load data\ndf_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","5cd4964e":"# drop some catagorical columns from both data sets\ndf_train.drop(columns = [\"Name\" ,\"Ticket\" , \"Cabin\"], inplace=True)\ndf_test.drop(columns = [\"Name\" ,\"Ticket\" , \"Cabin\"], inplace=True)","58cacbcd":"df_train.columns, df_test.columns","71f5097f":"# missing values\ndf_train.Age.fillna(df_train.Age.dropna().median() , inplace= True)\ndf_test.Age.fillna(df_train.Age.dropna().median() , inplace = True)","c4ef9638":"df_train.loc[df_train[\"Sex\"] == \"male\", \"Sex\"] = 0\ndf_train.loc[df_train[\"Sex\"] == \"female\", \"Sex\"] = 1\ndf_test.loc[df_test[\"Sex\"] == \"male\", \"Sex\"] = 0\ndf_test.loc[df_test[\"Sex\"] == \"female\", \"Sex\"] = 1","559375f1":"df_train[\"Embarked\"] = df_train[\"Embarked\"].fillna(\"S\")\ndf_train.loc[df_train[\"Embarked\"] == \"S\", \"Embarked\"] = 0\ndf_train.loc[df_train[\"Embarked\"] == \"C\", \"Embarked\"] = 1\ndf_train.loc[df_train[\"Embarked\"] == \"Q\", \"Embarked\"] = 2\ndf_test[\"Embarked\"] = df_test[\"Embarked\"].fillna(\"S\")\ndf_test.loc[df_test[\"Embarked\"] == \"S\", \"Embarked\"] = 0\ndf_test.loc[df_test[\"Embarked\"] == \"C\", \"Embarked\"] = 1\ndf_test.loc[df_test[\"Embarked\"] == \"Q\", \"Embarked\"] = 2","3ae0ca23":"df_test.Fare.fillna(df_train.Fare.dropna().median() , inplace = True)","992186bd":"# Feature Selection\ny = df_train[\"Survived\"].values\nx = df_train.drop(columns = [\"Survived\"]).values","f918c17e":"# data splitting\nfrom sklearn.model_selection import train_test_split\ntrain_X, val_X, train_y, val_y = train_test_split(x, y, test_size=0.2, random_state=0)","d3addd6e":"# Classifier ML algorithm\nfrom sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(random_state = 1)\nfitting = classifier.fit(x,y)\npreds_val = classifier.predict(df_test)","69c5e41b":"# export CSV file\ntest_out = pd.DataFrame({\n    'PassengerId': df_test.PassengerId, \n    'Survived': preds_val\n})\ntest_out.to_csv('submission.csv', index=False)","8bd32d07":"# Bulid a model"}}