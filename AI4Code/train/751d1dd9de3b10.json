{"cell_type":{"56ea9291":"code","b8e3bea4":"code","a10f39b0":"code","b1fcbb93":"code","9f528a28":"code","c0d568ed":"code","3fd200c3":"code","213ed4ba":"code","9f9bcd70":"code","268a3c04":"code","76de373e":"code","b3e8ce7b":"code","0e1913b3":"code","4a30cca7":"code","b618733a":"code","e4a8c75f":"code","56f0577a":"code","f57779ba":"code","cc201783":"code","47126623":"code","8086dd23":"code","b95576d0":"code","239fae4c":"code","2fea7ccc":"markdown","e6f2b885":"markdown","7dc043d4":"markdown","e8c6606f":"markdown","6e1a0f85":"markdown","8b482a3c":"markdown","bb765c06":"markdown","50cbc1e8":"markdown","e94c9f91":"markdown","7447e233":"markdown","687096d8":"markdown","d26c4d44":"markdown","d0a01ced":"markdown","c42b129c":"markdown","4094f2ac":"markdown","c7520b49":"markdown","deb45f32":"markdown","a75265d8":"markdown","6bf0011f":"markdown"},"source":{"56ea9291":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import norm\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b8e3bea4":"train_df = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","a10f39b0":"print(len(train_df))\nsummary = pd.DataFrame(train_df.dtypes)\nsummary[\"Null\"] = train_df.isnull().sum()\nsummary[\"first\"] = train_df.loc[0]\nsummary[\"second\"] = train_df.loc[1]\nsummary[\"third\"] = train_df.loc[2]\nsummary[\"unique\"] = train_df.nunique()\nsummary","b1fcbb93":"cat_feats = train_df.select_dtypes(\"object\").columns.to_list()\nnum_feats = [feats for feats in train_df.columns.to_list() if feats not in cat_feats]","9f528a28":"def get_row_col_idx(idx):\n    \"\"\"Return the row index and  col index for plots\"\"\"\n    row_idx = idx\/\/2\n    col_idx = idx%2\n    return (row_idx, col_idx)","c0d568ed":"def write_percentage(train_df, ax):\n    \"\"\"Writes percentage on top of the bars on the plots\"\"\"\n    for patches in ax.patches:\n        height = patches.get_height()\n        width = patches.get_width()\n        x_loc = patches.get_x()\n        values = height\/len(train_df)*100\n        ax.text(x = x_loc , y=height, s = '{:1.1f}%'.format(values), fontsize = 10 )","3fd200c3":"color = [\"red\", \"blue\", \"green\", \"yellow\", \"orange\", \"pink\", \"purple\", \"brown\"]\nfig, ax = plt.subplots(4,2, figsize = (20,20))\nfor idx, cols in enumerate(train_df.columns.to_list()):\n    row_idx, col_idx = get_row_col_idx(idx)\n    col = color[idx]\n    sns.histplot(x = cols, data = train_df, ax = ax[row_idx, col_idx], color = col )\n    write_percentage(train_df, ax[row_idx, col_idx])","213ed4ba":"train_df.columns","9f9bcd70":"\nfig, ax = plt.subplots(1,3,figsize = (20,6))\nsns.barplot(y = \"math score\", x = \"gender\" ,data = train_df, palette='Greens', ax=ax[0])\nsns.barplot(y = \"reading score\", x = \"gender\" ,data = train_df, palette='Greens', ax=ax[1])\nsns.barplot(y = \"writing score\", x = \"gender\" ,data = train_df, palette='Greens', ax=ax[2])","268a3c04":"# train_df[\"total marks\"] = train_df[\"math score\"] + train_df[\"reading score\"] + train_df[\"writing score\"]\nfig, ax = plt.subplots(1,3,figsize = (20,6))\n# for idx,val in enumerate([]):\n#     row_idx, col_idx = get_row_col_idx(idx)\nsns.barplot(y = \"math score\", x = \"race\/ethnicity\" ,data = train_df, palette='Greys', ax=ax[0])\nsns.barplot(y = \"reading score\", x = \"race\/ethnicity\" ,data = train_df, palette='Greys', ax=ax[1])\nsns.barplot(y = \"writing score\", x = \"race\/ethnicity\" ,data = train_df, palette='Greys', ax=ax[2])","76de373e":"\nfig, ax = plt.subplots(1,3,figsize = (20,6))\nsns.barplot(y = \"math score\", x = \"race\/ethnicity\" ,data = train_df, palette='Greens', ax=ax[0], hue = \"gender\")\nsns.barplot(y = \"reading score\", x = \"race\/ethnicity\" ,data = train_df, palette='Greens', ax=ax[1], hue = \"gender\")\nsns.barplot(y = \"writing score\", x = \"race\/ethnicity\" ,data = train_df, palette='Greens', ax=ax[2], hue = \"gender\")\n","b3e8ce7b":"fig, ax = plt.subplots(1,3, figsize = (20,5))\nfor idx, item in enumerate(train_df.columns[-3:]):\n    sns.boxplot(x=train_df[\"lunch\"], y=train_df[item], ax = ax[idx])","0e1913b3":"fig, ax = plt.subplots(1,3, figsize = (20,5))\nfor idx, item in enumerate(train_df.columns[-3:]):\n    sns.boxplot(x=train_df[\"test preparation course\"], y=train_df[item], ax = ax[idx])","4a30cca7":"sns.kdeplot(data=train_df[num_feats],shade=True)","b618733a":"sns.pairplot(hue = \"gender\", data = train_df )","e4a8c75f":"train_df[\"total marks\"] = train_df[\"math score\"] + train_df[\"reading score\"] + train_df[\"writing score\"]\nfig, ax = plt.subplots(2,2,figsize = (20,10))\nfor idx,val in enumerate([\"gender\", \"race\/ethnicity\", \"lunch\", 'test preparation course' ]):\n    row_idx, col_idx = get_row_col_idx(idx)\n    sns.boxplot(x = val, y = 'total marks',data = train_df, palette='Set3', ax=ax[row_idx, col_idx])","56f0577a":"plt.figure(figsize=(20,5))\nsns.boxplot(x = \"parental level of education\", y = \"total marks\", data = train_df)","f57779ba":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor \nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score","cc201783":"target = train_df.pop(\"total marks\")\ntrain_df = pd.get_dummies(train_df[cat_feats])","47126623":"X_train, X_test, y_train, y_test = train_test_split(train_df, target, random_state = 0 )","8086dd23":"target.shape\n# X_test.shape","b95576d0":"lm = LinearRegression()\nlm.fit(X_train, y_train)\nmse = mean_squared_error(lm.predict(X_test), y_test)\nr2 = r2_score(lm.predict(X_test), y_test)\nprint(mse,r2)","239fae4c":"dt = DecisionTreeRegressor()\ndt.fit(X_train, y_train)\nmse = mean_squared_error(dt.predict(X_test), y_test)\nr2_score = r2_score(dt.predict(X_test), y_test)\nprint(mse, r2_score)","2fea7ccc":"##### Data Splitting","e6f2b885":"We could see that there are feature which are object, like gender, race etc. We need to take care of them. Being object there are only few unique values and no null values. In total there are 1000 rows.","7dc043d4":"#### Performance based on gender ","e8c6606f":"There are few obeservations which could be made from this chart:\n\n1. We could see that there are more females in the dataset than the male gender. \n2. The percentage of group A people is least and of group C people is highest.\n3. The population of people having parental education of master's degree is least in the dataset while people having parental education some degree and associate degree is max.\n4. The count of people going for standard lunch is more that the free or reduced lunch.\n5. People who finished their test prep course are less in number than the one's who did not finish.\n6. People having math score of around 65-70 are more than the other ones.\n7. People having reading score of around 70-75 are more than the other ones.\n8. People having writing score of around 70-75 are more than the other ones.\n\nIn general we could say that the writing score, reading score and math score is normally distributed but they are skewed towards left.","6e1a0f85":"Above plots give us a idea that people who are more likely to finish their test, they will perform better than the ones which did not finish their prepration and that makes sense.","8b482a3c":"### Conclusion \nHere is few points at the end:\n1. Parents' education level may affect the performance of students, but not the important one.\n1. Finishing preparation course is beneficial.\n1. Having lunch is important to students, and it is also the most significant one.\n1. Gender has no correlation with the score.\n\nFemales perform better in reading and writing scores so males, get some insights from them and females need to better in math test so they can ask males. All in all, if students want to have good performance, they should have enough nutrient and make effort to prepare the test.","bb765c06":"Above plots tells us that people who are having standard lunch, they will perform better than the ones who did not have standard lunch and rather have reduced\/free lunch.","50cbc1e8":"\nWe can see the skewness in the plot. It is only skewed towards left. It is not highly skewed though.","e94c9f91":"From here we could see that males have scored better in Maths but females have done better than males in reading score and writing score.","7447e233":"Following observation could be made from the above pair plot:\n1. All the scores are increasing linearly with each other and they are increasing with the increase in other score.\n2. In the plot between math score and other scores, we can also see that gender is seperating the dataset.\n3. Most of the score lie betwee 50-100.","687096d8":"#### Feature Classification: Categorical and Numerical Features","d26c4d44":"From this above chart it is evident that group E has performed well in all the tests, be it reading ,writing or maths. On the other hand group A has performed poorly in all the tests. and further we see the plots with respect to ethnicity and in that if we see gender wise performance, we could see that in reading and writing tests, in every group females perform better than males and for the math test, males performs better in each group.","d0a01ced":"##### Getting Target","c42b129c":"From this above plot we could see that the people with their parental level of education having master's degree have performed better than others.Also, people with their parental level of education having high school degree have performed poorly. We could use label encoder to encode the categorical variables","4094f2ac":"#### KDE plot for numerical data","c7520b49":"### Looking forward for your comments so I could imporve! Any feedback will be appeciated!","deb45f32":"### Model Training","a75265d8":"#### Univariate Analysis of all features","6bf0011f":"### Linear Model"}}