{"cell_type":{"710a1e95":"code","f10d1fb5":"code","319a8288":"code","d95f5bdd":"code","5b21c2d1":"code","4963d82a":"code","d9c6d897":"code","2d827d37":"code","05a1cf38":"code","309a6443":"code","3a852973":"code","e8e60151":"code","d00f56f0":"code","b627b7b9":"code","c4a00474":"code","32e5097c":"code","844055b4":"code","e52cd377":"code","83c3bacf":"code","528b9fef":"code","b5d89299":"code","60b303d9":"code","c3e29975":"code","faaff591":"code","2e212aed":"code","f267de5c":"code","3343c233":"code","54c09d53":"code","44067d42":"code","5ce30bab":"code","558330ed":"code","cbc5bd0b":"code","02ee9da0":"code","cf1a6786":"code","b5ac8a20":"code","3c9cd592":"code","6e4ae8a2":"code","2e66995b":"code","d1be7dbf":"code","ed2465b5":"code","fbf38f79":"code","049b63f2":"code","5230e204":"code","ff455460":"code","9882e63c":"code","dc4b4fb3":"code","46aa3799":"code","7ea915e7":"code","25065c1f":"code","29d97303":"code","f220fcf4":"code","e5bece8a":"code","6b12bd62":"code","db525995":"code","21a64b5b":"code","03aa0802":"code","c4979d98":"code","1d117cec":"code","dfd53407":"code","2a87bf38":"code","13da7b0a":"code","a79cbc7a":"code","886ed38b":"code","d4437610":"markdown","42da89db":"markdown","f7738a00":"markdown","4d9b4131":"markdown","09ecc9bf":"markdown","5136d1b9":"markdown","920dcfc0":"markdown"},"source":{"710a1e95":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f10d1fb5":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt","319a8288":"plt.rcParams[\"figure.figsize\"] = (10,6) # define figure size of pyplot","d95f5bdd":"pd.set_option(\"display.max_columns\", 100) # set max columns when displaying pandas DataFrame\npd.set_option(\"display.max_rows\", 200) # set max rows when displaying pandas DataFrame","5b21c2d1":"promosi = pd.read_csv('\/kaggle\/input\/uisummerschool\/Marketing.csv')\noffline = pd.read_csv('\/kaggle\/input\/uisummerschool\/Offline_sales.csv')\nonline = pd.read_csv('\/kaggle\/input\/uisummerschool\/Online_sales.csv')\nproduk = pd.read_csv('\/kaggle\/input\/uisummerschool\/Product.csv')","4963d82a":"promosi","d9c6d897":"promosi.describe()","2d827d37":"promosi['total']=promosi['Offline Spend']+promosi['Online Spend']","05a1cf38":"promosi","309a6443":"promosi.plot(kind='line',x='Date',y='total')","3a852973":"promosi.set_index('Date')[['Offline Spend','Online Spend']].plot()\n# promosi.plot(kind='line',x='Date',y='Offline Spend')\n# promosi.plot(kind='line',x='Date',y='Online Spend')\n# plt.show()","e8e60151":"# import seaborn as sns\n","d00f56f0":"promosi.plot(kind='box',x='Date',y='total')","b627b7b9":"promosi.set_index('Date')[['Offline Spend','Online Spend','total']].plot(kind='box')","c4a00474":"promosi.hist('Offline Spend')\npromosi.hist('Online Spend')\npromosi.hist('total')","32e5097c":"# df = pd.DataFrame('Date')\n# pd.to_datetime('13000101', format='%Y%m%d', errors='ignore')\n# pd.to_datetime('13000101', format='%Y%m%d', errors='coerce')\n# pd.to_datetime(,)","844055b4":"promosi['tanggal'] = pd.to_datetime(promosi['Date']).dt.strftime('%d')\npromosi['bulan'] = pd.to_datetime(promosi['Date']).dt.strftime('%m')\npromosi['tahun'] = pd.to_datetime(promosi['Date']).dt.strftime('%y')","e52cd377":"promosi","83c3bacf":"bof = promosi.groupby('bulan')['Offline Spend'].sum().reset_index(name='monthly offline')\nbon = promosi.groupby('bulan')['Online Spend'].sum().reset_index(name='monthly online')","528b9fef":"bof","b5d89299":"bon","60b303d9":"# total_bulanan = pd.DataFrame(np.array([bof['monthly offline'],bon['monthly online']]))\n# total_bulanan\n# total_bulanan['offline bulanan']=bof('monthly offline')\n# total_bulanan['online bulanan']=bon('monthly online')","c3e29975":"# total_bulanan","faaff591":"promosi.groupby('bulan')['Offline Spend'].sum().reset_index(name='monthly offline').plot(kind='bar')","2e212aed":"offline","f267de5c":"penjualan_offline = offline.groupby(['InvoiceDate'])['Quantity'].sum().reset_index(name='sales_offline')\npenjualan_offline","3343c233":"online","54c09d53":"penjualan_online = online.groupby(['Date'])['Quantity'].sum().reset_index(name='sales_online')\npenjualan_online","44067d42":"import pandas as pd \nimport scipy.stats as stats","5ce30bab":"stats.levene(penjualan_offline.sales_offline.dropna(),penjualan_online.sales_online.dropna())","558330ed":"stats.ttest_ind(penjualan_offline.sales_offline.dropna(),penjualan_online.sales_online.dropna(),equal_var=False)","cbc5bd0b":"produk","02ee9da0":"grouped = online.groupby(['Date'])['Revenue'].sum().reset_index(name='total_revenue')\ngrouped['Date'] = grouped['Date'].astype(str)\ngrouped['Date'] = pd.to_datetime(grouped['Date'])\ngrouped.head()","cf1a6786":"grouped.plot(kind='line',x='Date',y='total_revenue')","b5ac8a20":"grouped.plot(kind='box',x='Date',y='total_revenue')","3c9cd592":"grouped['d1'] = grouped['total_revenue'].shift()\ngrouped['d2'] = grouped['total_revenue'].shift(2)\ngrouped['d3'] = grouped['total_revenue'].shift(3)\ngrouped['d4'] = grouped['total_revenue'].shift(4)","6e4ae8a2":"grouped","2e66995b":"data = grouped[4:]\ndata","d1be7dbf":"y = pd.DataFrame(data, columns = ['total_revenue']) \ntrain_y = y[0:316]\ntrain_y","ed2465b5":"test_y = y[316:]\ntest_y","fbf38f79":"x = pd.DataFrame(data, columns = ['Date','d1', 'd2','d3','d4']) \ntrain_x = x[0:316]\ntrain_x","049b63f2":"test_x = x[316:]\ntest_x","5230e204":"from __future__ import print_function\nimport numpy as np\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nfrom statsmodels.sandbox.regression.predstd import wls_prediction_std","ff455460":"model = sm.OLS(train_y['total_revenue'],train_x[['d1','d2','d3','d4']])\nhasil = model.fit()\nprint(hasil.summary())","9882e63c":"data = grouped[3:]\ndata","dc4b4fb3":"x = pd.DataFrame(data, columns = ['Date','d1', 'd2','d3']) \ntrain_x = x[0:317]\ntrain_x","46aa3799":"test_x = x[317:]\ntest_x","7ea915e7":"y = pd.DataFrame(data, columns = ['total_revenue']) \ntrain_y = y[0:317]\ntrain_y","25065c1f":"test_y = y[317:]\ntest_y","29d97303":"model2 = sm.OLS(train_y['total_revenue'],train_x[['d1','d2','d3']])\nhasil2 = model2.fit()\nprint(hasil2.summary())","f220fcf4":"# model2.predict(test_x[['d1','d2','d3']])","e5bece8a":"from sklearn.linear_model import LinearRegression","6b12bd62":"regresi = LinearRegression()  \nregresi.fit(train_x[['d1','d2','d3']],train_y['total_revenue'])\nprint(model)","db525995":"y_cap = regresi.predict(train_x[['d1','d2','d3']])\ne2_train = train_y['total_revenue']-y_cap","21a64b5b":"prediksi_y = regresi.predict(test_x[['d1','d2','d3']])\nprediksi_y","03aa0802":"e2_test = test_y['total_revenue']-prediksi_y\ne2_test","c4979d98":"mse2_train = (e2_train**2).sum()\/len(e2_train)\nmse2_train","1d117cec":"mse2_test = (e2_test**2).sum()\/len(e2_test)\nmse2_test","dfd53407":"from pandas.plotting import autocorrelation_plot\nfrom matplotlib import pyplot","2a87bf38":"autocorrelation_plot(train_y['total_revenue'])","13da7b0a":"from pandas import read_csv\nfrom pandas import datetime\nfrom pandas import DataFrame\nfrom statsmodels.tsa.arima_model import ARIMA","a79cbc7a":"model3 = ARIMA(train_y['total_revenue'], order=(4,1,0))\nmodel3_fit = model3.fit(disp=0)\nprint(model3_fit.summary())","886ed38b":"e3_train = model3_fit.resid\nmse3_train = (e3_train**2).sum()\/len(e3_train)\nmse3_train","d4437610":"**TIME SERIES FORECASTING**","42da89db":"Tahapan Selanjutnya:\n* Merangkum data hasil penjualan tiap hari\n* Merangkum data hasil penjualan tiap bulan\n* Membuat plot time series dari dua data di atas\n* Merangkum data hasil penjualan dari 10 produk yang penjualannya paling tinggi\n* Merangkum data hasil penjualan dari 10 produk yang penjualannya paling rendah\n* Membuat bar chart dari dua data di atas\n","f7738a00":"Tahapan selanjutnya: Menguji ada tidaknya perbedaan rata-rata promosi bulanan antara offline dan online (menggunakan t-test)","4d9b4131":"Karena hasil pengujian perbedaan rata-rata penjualan offline dan online tidak sama (yaitu lebih besar penjualan offline), maka langkah selanjutnya adalah membuat model regresi linier, dengan variabel berikut:\nY : hasil penjualan offline\nX1: promosi offline\nX2: promosi online","09ecc9bf":"Menguji rata-rata hasil penjualan offline dengan penjualan online sama atau tidak \nTahapan: \nUji homogenitas varians\nUji rata-rata dua populasi independent","5136d1b9":"Tahapan selanjutnya:\n* Merangkum data hasil penjualan tiap hari\n* Merangkum data hasil penjualan tiap bulan\n* Membuat plot time series dari dua data di atas\n* Merangkum data hasil penjualan dari 10 produk yang penjualannya paling tinggi\n* Merangkum data hasil penjualan dari 10 produk yang penjualannya paling rendah\n* Membuat bar chart dari dua data di atas\n\n* Merangkum data dari Product Category (Enhanced E-commerce) berdasarkan quantity\n* Merangkum data dari Product Category (Enhanced E-commerce) berdasarkan total revenue\n* Mengambil 10 nilai terbesar dari keduanya\n* Mengambil 10 nilai terkecil dari keduanya\n* Membuat plot dari 10 nilai terbesar dari keduanya\n* Membuat plot dari 10 nilai terkecil dari keduanya\n\n","920dcfc0":"* Menggabungkan quantity dari offline dan online dari produk yang sama dan membuat bar plot dari 10 data terbesar quantity-nya\n* Merangkum data hasil penjualan tiap hari (dari offline dan online)\n* Membuat plot time series dari data di atas\n* Forecasting data hasil penjualan tiap hari menggunakan metode Naive, Exponential Smoothing, ARIMA, etc."}}