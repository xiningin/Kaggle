{"cell_type":{"cfebf644":"code","f06d6ee1":"code","d033a017":"code","e844b500":"code","7b0997c8":"code","3ba02e4c":"code","cdf3b8d8":"code","6688a89b":"code","237def22":"code","11d33ac2":"code","10c3d284":"code","4eb9b0fa":"code","13b901bf":"code","c98c8289":"markdown","cb312e16":"markdown","b170da95":"markdown","f060f528":"markdown","408d6a08":"markdown","5d87e2b2":"markdown","605b6588":"markdown","bfa996bd":"markdown","99157d89":"markdown","985e50cf":"markdown","c51f05b1":"markdown"},"source":{"cfebf644":"import os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport pydicom as dicom\nimport cv2\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","f06d6ee1":"path = '\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection\/'\nos.listdir(path)","d033a017":"train_data = pd.read_csv(path+'train.csv')\nsamp_subm = pd.read_csv(path+'sample_submission.csv')","e844b500":"print('Number train samples:', len(train_data.index))\nprint('Number test samples:', len(samp_subm.index))","7b0997c8":"fig, ax = plt.subplots(1, 1, figsize=(12, 4))\nx = train_data['class_name'].value_counts().keys()\ny = train_data['class_name'].value_counts().values\nax.bar(x, y)\nax.set_xticklabels(x, rotation=90)\nax.set_title('Distribution of the labels')\nplt.grid()\nplt.show()","3ba02e4c":"idnum = 2\nimage_id = train_data.loc[idnum, 'image_id']\ndata_file = dicom.dcmread(path+'train\/'+image_id+'.dicom')\nimg = data_file.pixel_array","cdf3b8d8":"print(data_file)","6688a89b":"print('Image shape:', img.shape)","237def22":"bbox = [train_data.loc[idnum, 'x_min'],\n        train_data.loc[idnum, 'y_min'],\n        train_data.loc[idnum, 'x_max'],\n        train_data.loc[idnum, 'y_max']]\nfig, ax = plt.subplots(1, 1, figsize=(20, 4))\nax.imshow(img, cmap='gray')\np = matplotlib.patches.Rectangle((bbox[0], bbox[1]),\n                                 bbox[2]-bbox[0],\n                                 bbox[3]-bbox[1],\n                                 ec='r', fc='none', lw=2.)\nax.add_patch(p)\nplt.show()","11d33ac2":"def plot_example(idx_list):\n    fig, axs = plt.subplots(1, 3, figsize=(15, 10))\n    fig.subplots_adjust(hspace = .1, wspace=.1)\n    axs = axs.ravel()\n    for i in range(3):\n        image_id = train_data.loc[idx_list[i], 'image_id']\n        data_file = dicom.dcmread(path+'train\/'+image_id+'.dicom')\n        img = data_file.pixel_array\n        axs[i].imshow(img, cmap='gray')\n        axs[i].set_title(train_data.loc[idx_list[i], 'class_name'])\n        axs[i].set_xticklabels([])\n        axs[i].set_yticklabels([])\n        if train_data.loc[idx_list[i], 'class_name'] != 'No finding':\n            bbox = [train_data.loc[idx_list[i], 'x_min'],\n                    train_data.loc[idx_list[i], 'y_min'],\n                    train_data.loc[idx_list[i], 'x_max'],\n                    train_data.loc[idx_list[i], 'y_max']]\n            p = matplotlib.patches.Rectangle((bbox[0], bbox[1]),\n                                             bbox[2]-bbox[0],\n                                             bbox[3]-bbox[1],\n                                             ec='r', fc='none', lw=2.)\n            axs[i].add_patch(p)\n            \nfor num in range(15):\n    idx_list = train_data[train_data['class_id']==num][0:3].index.values\n    plot_example(idx_list)","10c3d284":"samp_subm.to_csv('submission1.csv', index=False)","4eb9b0fa":"pred_2class = pd.read_csv(\"..\/input\/vinbigdata-2class-prediction\/2-cls test pred.csv\")\nlow_threshold = 0.001\nhigh_threshold = 0.87\npred_2class","13b901bf":"NORMAL = \"14 1 0 0 1 1\"\n\npred_det_df = pd.read_csv(\"..\/input\/vinbigdatastack\/submission_postprocessed.csv\")\nn_normal_before = len(pred_det_df.query(\"PredictionString == @NORMAL\"))\nmerged_df = pd.merge(pred_det_df, pred_2class, on=\"image_id\", how=\"left\")\n\n\nif \"target\" in merged_df.columns:\n    merged_df[\"class0\"] = 1 - merged_df[\"target\"]\n\nc0, c1, c2 = 0, 0, 0\nfor i in range(len(merged_df)):\n    p0 = merged_df.loc[i, \"class0\"]\n    if p0 < low_threshold:\n\n        c0 += 1\n    elif low_threshold <= p0 and p0 < high_threshold:\n\n        merged_df.loc[i, \"PredictionString\"] += f\" 14 {p0} 0 0 1 1\"\n        c1 += 1\n    else:\n\n        merged_df.loc[i, \"PredictionString\"] = NORMAL\n        c2 += 1\n\nn_normal_after = len(merged_df.query(\"PredictionString == @NORMAL\"))\nprint(\n    f\"n_normal: {n_normal_before} -> {n_normal_after} with threshold {low_threshold} & {high_threshold}\"\n)\nprint(f\"Keep {c0} Add {c1} Replace {c2}\")\nsubmission_filepath = str(\"submission2.csv\")\nsubmission_df = merged_df[[\"image_id\", \"PredictionString\"]]\nsubmission_df.to_csv(submission_filepath, index=False)\nprint(f\"Saved to {submission_filepath}\")","c98c8289":"# Path","cb312e16":"# Load Data","b170da95":"#### Solution 2\n","f060f528":"# Libraries","408d6a08":"# Overview","5d87e2b2":"# Intro\nWelcome to the [VinBigData Chest X-ray Abnormalities Detection](https:\/\/www.kaggle.com\/c\/vinbigdata-chest-xray-abnormalities-detection\/data) compedition.\n\n![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/24800\/logos\/header.png)\n\nWe consider 14 critical radiographic findings as listed below (click for further informations):\n\n0 - [Aortic enlargement](https:\/\/en.wikipedia.org\/wiki\/Aortic_aneurysm) <br>\n1 - [Atelectasis](https:\/\/en.wikipedia.org\/wiki\/Atelectasis) <br>\n2 - [Calcification](https:\/\/en.wikipedia.org\/wiki\/Calcification) <br>\n3 - [Cardiomegaly](https:\/\/en.wikipedia.org\/wiki\/Cardiomegaly) <br>\n4 - [Consolidation](https:\/\/en.wikipedia.org\/wiki\/Pulmonary_consolidation) <br>\n5 - [ILD](https:\/\/en.wikipedia.org\/wiki\/Interstitial_lung_disease) <br>\n6 - [Infiltration](https:\/\/en.wikipedia.org\/wiki\/Infiltration_(medical)) <br>\n7 - [Lung Opacity](https:\/\/en.wikipedia.org\/wiki\/Ground-glass_opacity) <br>\n8 - [Nodule\/Mass](https:\/\/en.wikipedia.org\/wiki\/Lung_nodule) <br>\n9 - Other lesion <br>\n10 - [Pleural effusion](https:\/\/en.wikipedia.org\/wiki\/Pleural_effusion) <br>\n11 - [Pleural thickening](https:\/\/en.wikipedia.org\/wiki\/Pleural_thickening) <br>\n12 - [Pneumothorax](https:\/\/en.wikipedia.org\/wiki\/Pneumothorax) <br>\n13 - [Pulmonary fibrosis](https:\/\/en.wikipedia.org\/wiki\/Pulmonary_fibrosis#:~:text=Pulmonary%20fibrosis%20is%20a%20condition,%2C%20pneumothorax%2C%20and%20lung%20cancer.)\n\n<span style=\"color: royalblue;\">Please vote the notebook up if it helps you. Feel free to leave a comment above the notebook. Thank you. <\/span>","605b6588":"# Show Examples\nPlot 3 images of every class with the bounding boxes:","bfa996bd":"# Write Output\n","99157d89":"As we can see the dataset is inbalanced.","985e50cf":"Print meta data of the image:","c51f05b1":"# Read dicom Files"}}