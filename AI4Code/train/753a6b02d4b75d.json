{"cell_type":{"60895e78":"code","b0864491":"code","085eee82":"code","3030de64":"code","e19714dd":"code","e0613e75":"code","73ba7b92":"code","8cb2d43f":"code","6ee77ec2":"code","59faf856":"code","b344eaf1":"code","89deb1a4":"code","1cccdd73":"code","eac3e8e5":"code","7fc84c07":"code","aceb3475":"code","a69a12bc":"code","7611b325":"code","63ccf5d7":"code","bd8a74a0":"code","15723b7f":"code","b551c14d":"code","c05c1b29":"code","cf1ecdeb":"code","a83854a4":"code","278458b8":"code","17fa2beb":"code","2d1732f6":"code","9a3d849a":"code","7bcc1ca1":"code","207badf1":"code","ebc603f8":"markdown","32756e9e":"markdown","8f459ae8":"markdown","58fb6da4":"markdown","63486c13":"markdown","34be8969":"markdown","b86def75":"markdown","cd428c6f":"markdown","97154e33":"markdown","1918e826":"markdown","1b195d51":"markdown","2e01cba3":"markdown","20e282fe":"markdown","23f1e693":"markdown","1abd9e89":"markdown","7e39652c":"markdown","6b3967c6":"markdown","1cc33800":"markdown","29ef9b24":"markdown","620883f9":"markdown","7ecabb70":"markdown","f2ca32ef":"markdown","79983662":"markdown","758fecb5":"markdown"},"source":{"60895e78":"import matplotlib.pyplot as plt","b0864491":"fig = plt.figure(figsize=(10, 10))","085eee82":"ax1 = fig.add_subplot(2, 2, 1)","3030de64":"ax2 = fig.add_subplot(2, 2, 2)\nax3 = fig.add_subplot(2, 2, 3)","e19714dd":"fig, ax = plt.subplots(2, 2, figsize=(10, 10))","e0613e75":"from numpy.random import randn\n\nx = randn(50).cumsum()\nprint(x)\nplt.plot(x, \"k--\")","73ba7b92":"import numpy as np\n\nx = [1, 1, 3, 2, 4, 3]\nprint(x)\n_ = plt.hist(x, bins=20, color=\"g\", alpha=0.5)","8cb2d43f":"import numpy as np\n\n# x = [0, 1, ..., 29]\n# y = x + 3 * noise\nplt.scatter(x=np.arange(30), y=np.arange(30) + 3 * np.random.randn(30), color=\"g\", alpha=0.3)","6ee77ec2":"fig, axes = plt.subplots(2, 2, sharex=True, sharey=True, figsize=(8, 8))\nfor i in range(2):\n    for j in range(2):\n        axes[i, j].hist(randn(500), bins=50, color='k', alpha=0.5)\nplt.subplots_adjust(wspace=0.1, hspace=0.1)","59faf856":"plt.plot(np.random.rand(100).cumsum(), \"g--\")","b344eaf1":"plt.plot(np.random.rand(100).cumsum(), linestyle=\"-\", color=\"black\")","89deb1a4":"plt.plot(np.random.randn(30).cumsum(), 'k*--')","1cccdd73":"plt.plot(np.random.randn(30).cumsum(), color='k', linestyle='--', marker='*')","eac3e8e5":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum())","7fc84c07":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum())\nticks = ax.set_xticks([0, 250, 500, 750, 1000])","aceb3475":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum())\nticks = ax.set_xticks([0, 250, 500, 750, 1000])\nlabels = ax.set_xticklabels(['Nghi', 'Thien', 'Nam', 'Tung', 'Duc'], \n                            rotation=30, fontsize='small')","a69a12bc":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum())\nticks = ax.set_xticks([0, 250, 500, 750, 1000])\nlabels = ax.set_xticklabels(['one', 'two', 'three', 'four', 'five'], \n                            rotation=30, fontsize='small')\n\n\n\n\nax.set_title('My first matplotlib plot')\nax.set_xlabel('Stages')","7611b325":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum(), 'r', label='Nghi')\nax.plot(randn(1000).cumsum(), 'g--', label='Thien')\nax.plot(randn(1000).cumsum(), 'b.', label='Duc')\nax.legend(loc=\"best\")","63ccf5d7":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum())\nticks = ax.set_xticks([0, 250, 500, 750, 1000])\nlabels = ax.set_xticklabels(['one', 'two', 'three', 'four', 'five'], \n                            rotation=30, fontsize='small')\nax.set_title('My first matplotlib plot')\nax.set_xlabel('Stages')\nax.text(300, 0, 'Hello world!',\n        family='monospace', fontsize=10)","bd8a74a0":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum())\nticks = ax.set_xticks([0, 250, 500, 750, 1000])\nlabels = ax.set_xticklabels(['one', 'two', 'three', 'four', 'five'], \n                            rotation=30, fontsize='small')\nax.set_title('My first matplotlib plot')\nax.set_xlabel('Stages')\nax.annotate(\"Giang\", xy=(10, 10), xytext=(10, 20), arrowprops={\"facecolor\": \"black\"},\n            horizontalalignment='left', verticalalignment='top')","15723b7f":"fig = plt.figure(); ax = fig.add_subplot(1, 1, 1)\nax.plot(randn(1000).cumsum())\nticks = ax.set_xticks([0, 250, 500, 750, 1000])\nlabels = ax.set_xticklabels(['one', 'two', 'three', 'four', 'five'], \n                            rotation=30, fontsize='small')\nax.set_title('My first matplotlib plot')\nax.set_xlabel('Stages')\nax.annotate(\"Giang\", xy=(10, 10), xytext=(10, 20), arrowprops={\"facecolor\": \"black\"},\n            horizontalalignment='left', verticalalignment='top')\nplt.savefig(\"ben.svg\")","b551c14d":"import cv2 # OpenCV-version-2\n\npath = \"190805181053-barack-obama-190406-exlarge-169.jpg\"\n\nimage = cv2.imread(path)","c05c1b29":"type(image), image.shape, image.dtype","cf1ecdeb":"import matplotlib.pyplot as plt\n\n# `plt` show R-G-B image. cv2 read image in B-G-R mode\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\nplt.imshow(image)\nplt.show()","a83854a4":"# Output: new window\ncv2.imshow(image)\n\n# Output: console\nplt.imshow(image)","278458b8":"!wget https:\/\/upload.wikimedia.org\/wikipedia\/commons\/8\/85\/Ho_Chi_Minh_City_%28Saigon%29_1980s_government_license_plate.jpg","17fa2beb":"# Th\u01b0 vi\u1ec7n \u0111\u1ec3 \u0111\u1ecdc \u1ea3nh t\u1eeb m\u00e1y t\u00ednh v\u00e0 l\u01b0u trong ch\u01b0\u01a1ng tr\u00ecnh d\u01b0\u1edbi d\u1ea1ng NumPy array\nimport cv2\n\n# Th\u01b0 vi\u1ec7n \u0111\u1ec3 visualize \u1ea3nh v\u00e0 d\u1eef li\u1ec7u\nimport matplotlib.pyplot as plt","2d1732f6":"image = cv2.imread(\"Ho_Chi_Minh_City_(Saigon)_1980s_government_license_plate.jpg\")","9a3d849a":"type(image)","7bcc1ca1":"image.shape, image.dtype","207badf1":"# V\u1ebd \u1ea3nh `image` v\u00e0o subplot\n# Khi m\u1ecdi ng\u01b0\u1eddi d\u00f9ng CV2 \u0111\u1ec3 \u0111\u1ecdc \u1ea3nh th\u00ec \u1ea3nh \u0111\u1ecdc v\u00e0o s\u1ebd c\u00f3 ch\u1ebf \u0111\u1ed9 m\u00e0u BGR (Blue-Green-Red)\n# Trong khi \u1ea3nh ta nh\u00ecn th\u1ea5y l\u00e0 \u1ea3nh RGB (Red-Green-Blue)\n# Ta c\u1ea7n \u0111\u1ea3o l\u1ea1i k\u00eanh m\u00e0u cho \u1ea3nh tr\u01b0\u1edbc khi hi\u1ec3n th\u1ecb \n# Khi n\u00e0o n\u00ean \u0111\u1ea3o k\u00eanh m\u00e0u sang RGB: khi c\u1ea7n hi\u1ec3n th\u1ecb \u1ea3nh\nrevised_image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\nplt.imshow(revised_image)\n\n# Hi\u1ec3n th\u1ecb figure\nplt.show()","ebc603f8":"Let's continue creating two more subplots","32756e9e":"# Other visualization packages\n* Seaborn: used for statistical visualization\n\n<image src=\"https:\/\/miro.medium.com\/max\/2060\/1*3VgCwcZraA0u5hMHpRhJcw.png\" height=\"400px\">\n\n* Pandas: used for interacting with Pandas's `DataFrame`\n\n<image src=\"https:\/\/pythonawesome.com\/content\/images\/2018\/11\/Pandas-Bokeh.jpg\" height=\"500px\">","8f459ae8":"## Saving plots to file\nThe active figure can be saved to file using `plt.savefig`. This method is equivalent to the figure object\u2019s `savefig` instance method","58fb6da4":"Other options for `subplots`\n\n| Argument | Description |\n| --- | --- |\n| `nrows` | Number of rows of subplots |\n| `ncols` | Number of columns of subplots |\n| `sharex` | All subplots use the same X-axis ticks |\n| `sharey` | All subplots use the same Y-axis ticks |","63486c13":"## Figures and subplots\n**Figure**: plots in matplotlib reside within a `Figure` object. You can create a new figure with `plt.figure`\n* `figsize=(w, h)` is the size of the Figure","34be8969":"Other examples","b86def75":"* Annotations can draw both text and arrows arranged appropriately","cd428c6f":"# Example","97154e33":"**Create figure and subplots at the same time**: we can use `plt.subplots(gridsize_w, gridsize_h, figsize)`","1918e826":"**Spacing around subplots**: by default matplotlib leaves a certain amount of padding around the outside of the subplots and spacing between subplots. \n* Spacing method: the spacing is all specified relative to the height and width of the plot\n\n$\\hspace{1.0cm} \\rightarrow$ If you resize the plot either programmatically or manually using the GUI window, the plot will dynamically adjust itself\n* Adjusting subplot spaces: use \n\n```\nsubplots_adjust(left=None, bottom=None, right=None, top=None,\n                wspace=None, hspace=None)\n```\n","1b195d51":"## Read and show images","2e01cba3":"## Ticks, labels, and legends\nThe `pyplot` interface, designed for interactive use, consists of methods like `xlim`, `xticks`, and `xticklabels` . These control the plot range, tick locations, and tick labels, respectively. They can be used in two ways:\n* Called with no arguments returns the current parameter value. For example\n`plt.xlim()` returns the current X axis plotting range\n* Called with parameters sets the parameter value. So `plt.xlim([0, 10])` , sets the X\naxis range to 0 to 10\n\n>**NOTE**: all such methods act on the active or most recently-created `AxesSubplot` . Each of them corresponds to two methods on the `subplot` object itself\n\n$\\hspace{1.0cm} \\rightarrow$ In the case of `xlim` these are `ax.get_xlim` and `ax.set_xlim`\n\n### Setting the title, axis labels, and ticklabels\n\nConsider the following plot without title, ticks and labels","20e282fe":"**Color**:\n* Color abbreviation for common colors: there are a number of color abbreviations provided for commonly-used colors\n    * Example: `g` for green, `b` for blue, `r` for red\n* Custom colors: any color on the spectrum can be used by specifying its RGB value (for example, `#CECECE` ). You can see the full set of linestyles by looking at the docstring for `plot`\n\n**Markers**: used to highlight actual data points\n* Why we use markers: `matplotlib` creates a continuous line plot, interpolating between points\n\n$\\hspace{1.0cm} \\rightarrow$ It can occasionally be unclear where the points lie\n* Example:","23f1e693":"**Simple plot statement**: when you issue a plotting command like `plt.plot([1.5, 3.5, -2, 1.6])` , `matplotlib` draws on the last figure and subplot used (creating one if necessary), thus hiding the figure and subplot creation\n* We use `plt.plot(values)` to plot `values` (y-axis) against the x-axis\n* `k--` (below) indicate black dashed line\n    * `k` means black\n    * `--` means dashed","1abd9e89":"* Full statement example:","7e39652c":"**Subplots**: you can\u2019t make a plot with a blank figure. You have to create one or more `subplots` using`add_subplot`\n\nThe statement below creates a subplot named `ax1`, given that Figure `fig` is divided into $2 \\times 2$ grid, and `ax1` is located at grid 1","6b3967c6":"**Plot title and axis labels**: `set_xlabel` gives a name to the X axis and `set_title` the subplot title","1cc33800":"**Ticks and ticklabels**:\nto change the X axis ticks, it\u2019s easiest to use `set_xticks` and `set_xticklabels`. The former instructs `matplotlib` where to place the ticks along the data range; by default these locations will also be the labels. But we can set any other values as the labels using `set_xticklabels`\n* Example with `set_xticks`:","29ef9b24":"## Annotations and drawing on a subplot\nAnnotations and text can be added using the `text`, `arrow`, and `annotate` functions. \n* `text` draws text at given coordinates (x, y) on the plot with optional custom styling","620883f9":"* Example with `set_xticklabels`","7ecabb70":"**Adding legends**: legends are another critical element for identifying plot elements. There are a couple of ways to add one. The easiest is to pass the label argument when adding each piece of the plot:","f2ca32ef":"* Advantage: more convenient\n\n**Full statement for line styles and colors**: in practice if you were creating plots programmatically you might prefer not to have to munge strings together to create plots with the desired style","79983662":"Making plots and static or interactive visualizations is one of the most important tasks in data analysis. It may be a part of the exploratory process; for example, helping identify outliers, needed data transformations, or coming up with ideas for models\n\n# `matplotlib`\n\n<image src=\"https:\/\/matplotlib.org\/3.1.1\/_static\/logo2_compressed.svg\" height=\"70px\">\n\n`matplotlib` is a (primarily 2D) desktop plotting package designed for creating publication-quality plots. The project was started by John Hunter in 2002 to enable a MATLAB-like plotting interface in Python. He, Fernando P\u00e9rez (of IPython), and others have collaborated for many years since then to make IPython combined with matplotlib a very functional and productive environment for scientific computing. \n\n<image src=\"https:\/\/matplotlib.org\/3.1.1\/_images\/sphx_glr_sample_plots_thumb.png\">\n\n**Features**:\n* When used in tandem with a GUI toolkit (for example, within IPython), `matplotlib` has interactive features like zooming and panning\n* `matplotlib` supports many different GUI backends on all operating systems \n* `matplotlib` can export graphics to all of the common vector and raster graphics formats: PDF, SVG, JPG, PNG, BMP, GIF, etc\n* `matplotlib` has a number of add-on toolkits, \n    * `mplot3d` for 3D plots\n    * `basemap` for mapping and projections\n\n**Start statement**","758fecb5":"## Colors, markers, and line styles\n**Abbreviation for line styles and colors**: `matplotlib`\u2019s main plot function accepts arrays of X and Y coordinates and optionally a string abbreviation indicating color and line style\n* Example: we use `g--` to denote `green` and `dashed`"}}