{"cell_type":{"ea64fd56":"code","e4e98c1c":"code","3eec19fe":"code","b3b21073":"code","3108f6c3":"code","b6001f67":"code","42a46cc6":"code","c384c4d7":"code","95aca40d":"code","73c7fc55":"code","4b712ca3":"code","efb75b9e":"code","ad1806a9":"code","211028ca":"code","964ef41c":"code","e1df793a":"code","5c48af60":"code","5a35ded2":"code","f79a53e0":"code","b8ee05e1":"code","52211884":"code","af8323ab":"code","ad20b63d":"markdown","204c218d":"markdown","145d3e2c":"markdown","e023a271":"markdown","c066d6bd":"markdown","9c92e095":"markdown"},"source":{"ea64fd56":"# basic library\nimport numpy as np\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# visulization library\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# deep learning library\nfrom tensorflow import keras\nimport tensorflow as tf\n\n# preprocessing library\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix, accuracy_score","e4e98c1c":"data = pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","3eec19fe":"data.head()","b3b21073":"data.info()","3108f6c3":"data.isnull().sum()","b6001f67":"print(data['output'].value_counts())\nsns.countplot(x='output', data=data)","42a46cc6":"sns.displot(x='age', data=data, hue='output')","c384c4d7":"fig, ax =plt.subplots(2,2, figsize=(12, 10))\nsns.countplot(x='sex', data=data, ax=ax[0, 0])  # plot sex column \nsns.countplot(x='cp', data=data, ax=ax[0, 1])   # plot cp column\nsns.countplot(x='restecg', data=data, ax=ax[1, 0])  # plot restecg column\nsns.countplot(x='fbs', data=data, ax=ax[1, 1])   # plot fbs column\nfig.show()","95aca40d":"fig, ax =plt.subplots(2,2, figsize=(12,10))\nsns.countplot(x='exng', data=data, ax=ax[0, 0])  # plot exng column \nsns.countplot(x='slp', data=data, ax=ax[0, 1])   # plot slp column\nsns.countplot(x='caa', data=data, ax=ax[1, 0])  # plot caa column\nsns.countplot(x='thall', data=data, ax=ax[1, 1])   # plot thall column\nfig.show()","73c7fc55":"data.corr()","4b712ca3":"plt.figure(figsize=(16,10))\nsns.heatmap(data.corr(), annot=True, cmap='RdYlGn')","efb75b9e":"X = data.drop(['output'], axis=1)\ny = data['output']","ad1806a9":"print(f'X shape : {X.shape}')\nprint(f'y shape : {y.shape}')","211028ca":"X.head()","964ef41c":"y.head()","e1df793a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","5c48af60":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","5a35ded2":"# keras ANN model\n\nmodel = keras.models.Sequential([\n    keras.layers.Flatten(input_shape=(13,)),\n    keras.layers.Dense(50, activation='relu', kernel_initializer=\"he_normal\"),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dense(100, activation='relu', kernel_initializer=\"he_normal\"),\n    keras.layers.Dropout(0.2),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dense(100, activation='relu', kernel_initializer=\"he_normal\"),\n    keras.layers.Dropout(0.2),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dense(50, activation='relu', kernel_initializer=\"he_normal\"),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dense(1, activation='sigmoid')\n])","f79a53e0":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","b8ee05e1":"model.fit(X_train, y_train, epochs=50)","52211884":"y_pred = model.predict(X_test)\ny_pred = y_pred.round().astype(int)","af8323ab":"cm = confusion_matrix(y_test, y_pred)\nprint(\"Confusion Matrix : \")\nsns.heatmap(cm, annot=True, cmap='BuGn')\nplt.show()\nprint(f\"Accuracy Score : {accuracy_score(y_test, y_pred)}\")","ad20b63d":"### Model Creation","204c218d":"### Preprocessing","145d3e2c":"### Reading Dataset","e023a271":"### EDA","c066d6bd":"#### **I hope you find this kernel useful and enjoyable and think that it helped you. PLEASE UPVOTE.**\n#### Your comments and feedback are most welcome.","9c92e095":"### Data vs Target"}}