{"cell_type":{"a2f95873":"code","3477bd07":"code","e0ef0a56":"code","da11b3c2":"code","1840a19f":"code","d33cc327":"code","fa7a8e74":"code","102d2515":"code","becdc266":"code","9319bb23":"code","d7254930":"code","ccecb2a9":"code","8cec25d6":"code","da5a6584":"code","e7b0779f":"code","52625e6a":"code","9a869c74":"code","de9a2d3d":"code","2f184896":"code","1670b765":"code","57e3bdeb":"code","45a36090":"code","95f05410":"code","4d41521f":"code","dcfc043d":"code","b25fffcf":"code","e0966ace":"code","e8994e27":"code","1d48e9a8":"code","706d77c5":"code","659f50a9":"code","d636fe1c":"code","1fb44d73":"code","3cc4ac52":"code","ae0bf3d1":"code","e8cedeed":"code","b1a892df":"code","d0063857":"code","d86bc575":"code","d6f5677f":"code","d2d5a3fb":"code","5e29e4c3":"code","a024b9e5":"code","d0f92088":"code","c85cec4f":"code","17e0a4cd":"code","35d6f738":"code","7331d6c6":"code","d0c0c59b":"code","47595dac":"code","c9d7f4ee":"code","698445b4":"code","4914a046":"code","ef217484":"code","77b8ce9f":"code","25be9947":"code","8cb7ba7a":"code","ca2e165b":"markdown","9fb4068b":"markdown","8e0c6688":"markdown","561d6cb5":"markdown","ff8d1e77":"markdown","e1dc0bb0":"markdown","b4f6183f":"markdown","a10e2f1b":"markdown","362cd206":"markdown","2e1eafad":"markdown","55d121aa":"markdown","a5a42738":"markdown","94825617":"markdown","260ca1ad":"markdown","ae7fa939":"markdown"},"source":{"a2f95873":"#Importing Libraries\nimport pandas as pd\nimport numpy as np","3477bd07":"df = pd.read_csv('..\/input\/income\/income_evaluation.csv')\ndf","e0ef0a56":"df.info()","da11b3c2":"df.describe()","1840a19f":"df.columns","d33cc327":"df = df[['age', ' workclass',  ' education', ' marital-status', ' occupation', ' relationship', ' race', ' sex', \n         ' hours-per-week', ' native-country',\n        ' income']]","fa7a8e74":"df.head()","102d2515":"df = df.rename(columns = {\n    ' workclass' : 'workclass',\n    ' education' : 'education',\n    ' marital-status' : 'maital-status',\n    ' occupation' : 'occupation',\n    ' relationship' : 'relationship',\n    ' race' : 'race',\n    ' sex' : 'sex',\n    ' hours-per-week' :'hours-per-week', \n    ' native-country' : 'native-country',\n        ' income' : 'income'  \n    \n})","becdc266":"df.head()","9319bb23":"from sklearn.preprocessing import LabelEncoder","d7254930":"df['sex'].value_counts()","ccecb2a9":"df['sex'].values","8cec25d6":"df_male = df[df['sex']==' Male']\ndf_male","da5a6584":"df_female = df[df['sex']==' Female']\ndf_female","e7b0779f":"df_male.boxplot(column = ['age'])","52625e6a":"df_male = df_male[df_male['age'] < 73]\ndf_male","9a869c74":"df_male['workclass'].value_counts()","de9a2d3d":"df_male = df_male[df_male['workclass'] != ' ?']","2f184896":"df_male.shape","1670b765":"df_male['education'].value_counts()","57e3bdeb":"df_male['occupation'].value_counts()","45a36090":"df_male = df_male[df_male['occupation'] != ' ?']\ndf_male.shape","95f05410":"df_male['relationship'].value_counts()","4d41521f":"df_male['native-country'].value_counts()","dcfc043d":"df_male = df_male[df_male['native-country'] != ' ?']\ndf_male.shape","b25fffcf":"df_male.boxplot(column = ['hours-per-week'])","e0966ace":"df_male['hours-per-week'].describe()","e8994e27":"Q1 = df_male['hours-per-week'].quantile(0.25)\nQ3 = df_male['hours-per-week'].quantile(0.75)\nQ1,Q3","1d48e9a8":"IQR = Q3 - Q1","706d77c5":"lower_limit = Q1 - 1.5*IQR\nupper_limit = Q3 + 1.5*IQR\nlower_limit, upper_limit","659f50a9":"df_male[(df_male['hours-per-week']<lower_limit)|(df_male['hours-per-week']>upper_limit)]","d636fe1c":"df_no_outlier = df_male[(df_male['hours-per-week']>lower_limit)&(df_male['hours-per-week']<upper_limit)]\ndf_no_outlier","1fb44d73":"df_male = df_no_outlier\ndf_male","3cc4ac52":"df_male.shape, df_female.shape","ae0bf3d1":"df_male = df_male.sample(10771)","e8cedeed":"df_male.shape , df_female.shape","b1a892df":"df = df_male.append(df_female)\ndf.reset_index()","d0063857":"df.set_index('age')","d86bc575":"df.columns\n","d6f5677f":"le = LabelEncoder()\ndf['workclass'] = le.fit_transform(df['workclass'])\ndf['education'] = le.fit_transform(df['education'])\ndf['maital-status'] = le.fit_transform(df['maital-status'])\ndf['relationship'] = le.fit_transform(df['relationship'])\ndf['occupation'] = le.fit_transform(df['occupation'])\ndf['native-country'] = le.fit_transform(df['native-country'])\ndf['income'] = le.fit_transform(df['income'])\ndf['race'] = le.fit_transform(df['race'])","d2d5a3fb":"df","5e29e4c3":"df.reset_index()\ndf","a024b9e5":"df.columns","d0f92088":"from sklearn.model_selection import train_test_split","c85cec4f":"X = df[['age', 'workclass', 'education', 'maital-status', 'occupation',\n       'relationship', 'hours-per-week', 'native-country',\n       'income']].values\nY = df[['sex']].values","17e0a4cd":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y)","35d6f738":"X_train.shape, X_test.shape, Y_train.shape, Y_test.shape","7331d6c6":"from sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier","d0c0c59b":"svc = SVC()","47595dac":"svc","c9d7f4ee":"svc.fit(X_train,Y_train)","698445b4":"rfc = RandomForestClassifier(n_estimators=100)","4914a046":"rfc.fit(X_train, Y_train)","ef217484":"Y_pred_1 = svc.predict(X_test)\nY_pred_2 = rfc.predict(X_test)","77b8ce9f":"from sklearn.metrics import accuracy_score","25be9947":"print(\"Accuracy using SVM is: \",accuracy_score(Y_test, Y_pred_1))","8cb7ba7a":"print(\"Accuracy using Random forest is: \",accuracy_score(Y_test, Y_pred_2))","ca2e165b":"- Removing outliers using IQR:","9fb4068b":"- Undersampling to get balanced dataset","8e0c6688":"Note: Only use under\/over sampling after removing outliers only if you still have imbalanced dataset.","561d6cb5":"- Check if dataset is balanced or not.","ff8d1e77":"- Check for outliers and if it has, start with removing it for balanced dataset.","e1dc0bb0":"- Remove index column :","b4f6183f":"\n\n- Separate Male and female dataset","a10e2f1b":"## Accuracy Score using SVM","362cd206":"- Perform Feature selection first and than handle missing values.","2e1eafad":" Target var = sex","55d121aa":"- Outliers:","a5a42738":"- Now you have sampled dataset :)","94825617":"- approx only around 200 rows are removed.\n- Lets try by removing invalid values in particular columns.","260ca1ad":"## Accuracy Score using Random Forest Classifier","ae7fa939":"- We have so much categorical data, so we need to convert it to numerical data.\n- To do so, we perform LabelEncoding\/OneHotEncoding.\n- When we have few labels it is prefferd to use One hot encoding because it creates different columns for every label.\n  - here we will only perform onehotencoding on column 'race'.\n  - for rest of columns, we will use Labelencoding.\n  "}}