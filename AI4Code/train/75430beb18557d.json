{"cell_type":{"107ba286":"code","e2c0f82f":"code","bea4fbdf":"code","75f0e87a":"code","5b2e773d":"code","6a23d56c":"code","d349840f":"code","84f63f73":"code","de1438b4":"code","9e0cef52":"code","69f5f8c2":"code","302504f2":"code","1310ff6b":"code","053bc842":"code","b137236b":"code","ca601f5c":"code","2e525c25":"code","9474f51b":"code","8edb17fe":"code","c2146bbf":"code","35e6b38b":"code","0779d231":"code","5bbaacff":"code","4b127079":"code","988901f6":"code","7a9ef745":"code","bdfaec3b":"code","d5c6de7f":"code","1f6349af":"code","97d15633":"code","d1c8d575":"code","8bad189d":"code","f3a387c7":"code","023da33e":"code","07c3429f":"code","cf56722f":"code","6d18fe9b":"code","ea019fbd":"code","232f6dbf":"code","9dffc26e":"code","cea86910":"code","a92dcfa7":"code","f2577f99":"code","74f01f7b":"code","72e5f401":"code","70865469":"code","c255b78d":"code","5f4613d4":"code","ba0d970c":"code","2fd124ac":"code","79cfe3ac":"code","8f733202":"code","d322004c":"code","e7c172cd":"code","f9407434":"code","b968491c":"code","c2e1aec5":"code","dbdec66c":"code","7ed5b537":"code","9ea8004f":"code","d4d4ec55":"code","42fac685":"code","40ac43e7":"code","9af9bcc6":"code","02797eda":"code","941ea3f5":"code","bc67f04c":"code","e5960322":"markdown","e5ae1436":"markdown","9735544e":"markdown","fb3b1cdc":"markdown"},"source":{"107ba286":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e2c0f82f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","bea4fbdf":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head()","75f0e87a":"test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","5b2e773d":"train.info()","6a23d56c":"train.describe()","d349840f":"train.isnull().sum()","84f63f73":"train[train['Age'].isnull()]","de1438b4":"train[train['Age'].isnull()]['Pclass'].value_counts()","9e0cef52":"pd.crosstab(train['Pclass'],train['Age'])","69f5f8c2":"train[train['Pclass']==3]['Age'].mean()","302504f2":"train[train['Pclass']==2]['Age'].mean()","1310ff6b":"train[train['Pclass']==1]['Age'].mean()","053bc842":"for i in train[train['Age'].isnull()]['Pclass']==1:\n    train['Age'].fillna(value=38.0,inplace=True)","b137236b":"for i in train[train['Age'].isnull()]['Pclass']==2:\n    train['Age'].fillna(value=30.0,inplace=True)","ca601f5c":"for i in train[train['Age'].isnull()]['Pclass']==3:\n    train['Age'].fillna(value=25.0,inplace=True)","2e525c25":"train[train['Age'].isnull()]['Pclass'].value_counts()","9474f51b":"train.isnull().sum()","8edb17fe":"train[train['Embarked'].isnull()]","c2146bbf":"train[train['Pclass']==1]['Embarked'].value_counts()","35e6b38b":"train['Embarked'].fillna(value='S',inplace=True)","0779d231":"train.isnull().sum()\/len(train)","5bbaacff":"train.drop('Cabin',axis=1,inplace=True)","4b127079":"train.head(2)","988901f6":"train.drop(['Name','Ticket','PassengerId'],axis=1,inplace=True)","7a9ef745":"train.head(2)","bdfaec3b":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","d5c6de7f":"train['Sex']=le.fit_transform(train['Sex'])\ntrain['Embarked']=le.fit_transform(train['Embarked'])","1f6349af":"train.info()","97d15633":"plt.figure(figsize=(15,8))\nsns.heatmap(train.corr(),annot=True,linewidths=0.8)\nplt.show()","d1c8d575":"X=train.drop('Survived',axis=1)\ny=train['Survived']","8bad189d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","f3a387c7":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(max_iter=10000)","023da33e":"lr.fit(X_train,y_train)","07c3429f":"pred=lr.predict(X_test)","cf56722f":"from sklearn.metrics import confusion_matrix,classification_report,accuracy_score,f1_score,accuracy_score","6d18fe9b":"print(\"The Training Score of Logistic Regression is :\",lr.score(X_train,y_train))\nprint(\"The Testing Score of Logistic Regression is :\",lr.score(X_test,y_test))","ea019fbd":"print(\"The Accuracy of Logistic Regression is :\",accuracy_score(y_test,pred))\nprint('\\n')\nprint(\"The Confusion Matrix of Logistic Regression is : \\n \",confusion_matrix(y_test,pred))\nprint('\\n')\nprint(\"The Classification Report of Logistic Regression is : \\n \",classification_report(y_test,pred))\nprint('\\n')\nprint(\"The F1-Score of Logistic Regression is :\",f1_score(y_test,pred))","232f6dbf":"test.info()","9dffc26e":"test.describe()","cea86910":"test.isnull().sum()","a92dcfa7":"test[test['Age'].isnull()]","f2577f99":"test[test['Age'].isnull()]['Pclass'].value_counts()","74f01f7b":"pd.crosstab(test['Pclass'],test['Age'])","72e5f401":"test[test['Pclass']==1]['Age'].mean()","70865469":"test[test['Pclass']==2]['Age'].mean()","c255b78d":"test[test['Pclass']==3]['Age'].mean()","5f4613d4":"for i in test[test['Age'].isnull()]['Pclass']==1:\n    test['Age'].fillna(value=41.0,inplace=True)","ba0d970c":"for i in test[test['Age'].isnull()]['Pclass']==2:\n    test['Age'].fillna(value=29.0,inplace=True)","2fd124ac":"for i in test[test['Age'].isnull()]['Pclass']==3:\n    test['Age'].fillna(value=24.0,inplace=True)","79cfe3ac":"test.isnull().sum()","8f733202":"test[test['Fare'].isnull()]","d322004c":"test[test['Pclass']==3]['Fare'].mean()","e7c172cd":"test['Fare'].fillna(value=12.45,inplace=True)","f9407434":"test.isnull().sum()\/len(test)","b968491c":"test.drop(['Name','Ticket','Cabin'],axis=1,inplace=True)","c2e1aec5":"test.head(2)","dbdec66c":"test['Sex']=le.fit_transform(test['Sex'])\ntest['Embarked']=le.fit_transform(test['Embarked'])","7ed5b537":"c=pd.DataFrame()\nc['PassengerId']=test['PassengerId']","9ea8004f":"test.drop('PassengerId',axis=1,inplace=True)","d4d4ec55":"plt.figure(figsize=(15,8))\nsns.heatmap(test.corr(),annot=True,linewidths=0.8)\nplt.show()","42fac685":"X_test1=test","40ac43e7":"pred_test=lr.predict(X_test1)","9af9bcc6":"dataframe=pd.DataFrame()","02797eda":"dataframe['Survived']=pd.Series(pred_test)","941ea3f5":"final=pd.concat((c,dataframe),axis=1)","bc67f04c":"final.head()","e5960322":"Since the percentage of missing values in Cabin column is more., chose to drop it","e5ae1436":"### Treating of Null Values","9735544e":"Since Name,Ticket and PassengerId are information about the passenger, chose to drop them for model building","fb3b1cdc":"### For Test Data"}}