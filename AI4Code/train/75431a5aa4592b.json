{"cell_type":{"9e2d0f31":"code","820cb8da":"code","910d6a40":"code","53ee0b67":"code","2eab4e4b":"code","4eae6965":"code","ae8b5a97":"code","adec8c03":"code","2c50d8d9":"code","f95ee6ee":"code","e85f3225":"code","83a454d0":"code","93d2b191":"code","70f9196e":"markdown","d04db599":"markdown","fd2d36c0":"markdown","c7997a9e":"markdown","30e1a200":"markdown"},"source":{"9e2d0f31":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","820cb8da":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","910d6a40":"df=pd.read_csv(\"\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")\nprint(df.shape)\nprint(df.head())\ndf = df.drop(['Serial No.'], axis=1)","53ee0b67":"df.info()","2eab4e4b":"plt.figure (figsize=(9,5))\nsns.heatmap(df.corr(),cmap=\"coolwarm\",annot=True,linewidths=.8,linecolor=\"red\")","4eae6965":"for i in df:\n    if i=='Chance of Admit ':\n        break\n    plt.scatter(df[i],df['Chance of Admit '])\n    plt.title(i)\n    plt.ylabel('Chance of Admit')\n    plt.xlabel(i)\n    plt.show()","ae8b5a97":"toppers=df[(df['GRE Score']>=330) & (df['TOEFL Score']>=115) & (df['CGPA']>=9.5)].sort_values(by=['Chance of Admit '],ascending=False)\ntoppers","adec8c03":"X = df.drop(['Chance of Admit '], axis=1).values\ny = df['Chance of Admit '].values","2c50d8d9":"from sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","f95ee6ee":"from sklearn.linear_model import LinearRegression,LogisticRegression\nfrom sklearn.tree import DecisionTreeRegressor,DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestRegressor,RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor,GradientBoostingClassifier\nfrom sklearn.ensemble import AdaBoostRegressor,AdaBoostClassifier\nfrom sklearn.ensemble import ExtraTreesRegressor,ExtraTreesClassifier\nfrom sklearn.neighbors import KNeighborsRegressor,KNeighborsClassifier\nfrom sklearn.svm import SVR,SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score,mean_squared_error","e85f3225":"regressors=[['Linear Regression :',LinearRegression()],\n       ['Decision Tree Regression :',DecisionTreeRegressor()],\n       ['Random Forest Regression :',RandomForestRegressor()],\n       ['Gradient Boosting Regression :', GradientBoostingRegressor()],\n       ['Ada Boosting Regression :',AdaBoostRegressor()],\n       ['Extra Tree Regression :', ExtraTreesRegressor()],\n       ['K-Neighbors Regression :',KNeighborsRegressor()],\n       ['Support Vector Regression :',SVR()]]\nreg_pred=[]\nresult = pd.DataFrame(columns = ['Name', 'RMS'])\nprint('Results...\\n')\nfor name,model in regressors:\n    model=model\n    model.fit(X_train,y_train)\n    predictions = model.predict(X_test)\n    rms=np.sqrt(mean_squared_error(y_test, predictions))\n    reg_pred.append(rms)\n    result = result.append({'Name' : name, 'RMS' : rms}, \n                ignore_index = True)\n    \nresult.sort_values(by=['RMS'],inplace=True)\nresult.style.hide_index()","83a454d0":"y_ax=['Linear Regression' ,'Decision Tree Regression', 'Random Forest Regression','Gradient Boosting Regression', 'Ada Boosting Regression','Extra Tree Regression' ,'K-Neighbors Regression', 'Support Vector Regression' ]\nx_ax=reg_pred","93d2b191":"sns.barplot(x=x_ax,y=y_ax,linewidth=1.5,edgecolor=\"0.1\")","70f9196e":"# Let's import some important libraries","d04db599":"# we find GRE Score, CGPA, TOEFL Score are more relat to Chance of Admit.","fd2d36c0":"# import dataset and see how it look like\n# drop serial no column","c7997a9e":"![stage-4.jpg](attachment:0213bd8a-a8a6-4e96-a439-123d1244a612.jpg)\n# Gradute Admission\n\n","30e1a200":"# let's look at relationship between columns"}}