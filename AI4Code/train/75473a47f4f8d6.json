{"cell_type":{"8a53ed67":"code","34f9aaef":"code","b82a5576":"code","be8470e7":"code","a3074dbb":"code","6b5f6491":"code","296d4951":"code","a1aa532a":"code","e6e16ed9":"code","7949c5a1":"code","65d3513a":"code","0347cff6":"code","d0b0e9a5":"markdown","3b1730d7":"markdown","a345fbff":"markdown","e33f8086":"markdown","102c742a":"markdown","51ae9c4c":"markdown"},"source":{"8a53ed67":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","34f9aaef":"# Read Data\nimport numpy as np     # Linear Algebra (calculate the mean and standard deviation)\nimport pandas as pd    # manipulate data, data processing, load csv file I\/O (e.g. pd.read_csv)\n\n# Visualization\n# Seaborn\nimport seaborn as sns\n# matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Plotly\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n# style\nplt.style.use(\"fivethirtyeight\")\nsns.set_style(\"darkgrid\")\n\n# ML model building; Pre Processing & Evaluation\nfrom sklearn.model_selection import train_test_split    # split  data into training and testing sets\nfrom sklearn.ensemble import RandomForestClassifier     # this will make a Random Forest classificaiton\nfrom sklearn.metrics import confusion_matrix            # this creates a confusion matrix","b82a5576":"df = pd.read_csv(\"\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")\ndf.head()","be8470e7":"df.shape","a3074dbb":"df.info()","6b5f6491":"df.dtypes","296d4951":"df.count()","a1aa532a":"df.isnull().sum()","e6e16ed9":"# A count plot for single categorical variables\nsns.countplot(x='room_type',  data=df)","7949c5a1":"# A count plot for two categorical variables\nsns.countplot(x='room_type', hue=\"neighbourhood_group\", data=df)","65d3513a":"def groupPrice(price):\n    if price < 100:\n        return \"Low Cost\"\n    elif price >=100 and price < 200:\n        return \"Middle Cost\"\n    else:\n        return \"High Cost\"\n      \nprice_group = df['price'].apply(groupPrice)\ndf.insert(10, \"price_group\", price_group, True)\ndf.head(5)","0347cff6":"sns.catplot(x=\"room_type\", hue=\"neighbourhood_group\", col=\"price_group\", data=df, kind=\"count\", height=5, aspect=1)\nplt.show()","d0b0e9a5":"- we have a limited traveling budget and wish to plan for a trip with a low accommodation cost.","3b1730d7":"<h2 style=\"color:blue\" align=\"left\"> 2: Missing Values <\/h2>","a345fbff":"-  Plot shows the **availability of low or middle cost** accommodation in different locations might be useful to plan trip.","e33f8086":"- the room type of **\u201cEntire home\/apt\u201d** is **highly** available in Manhattan\n\n- very **limited** availability of \u201cShared room\u201d in all the neighborhood groups. There is a relatively **lower chance** we can get any shared room.","102c742a":"<h2 style=\"color:blue\" align=\"left\"> 1: Import the modules <\/h2>","51ae9c4c":"<h2 style=\"color:blue\" align=\"left\"> 3: EDA (Exploratory Data Analysis) <\/h2>"}}