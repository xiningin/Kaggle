{"cell_type":{"7efe3c36":"code","b713f258":"code","6b5044bd":"code","b7991ee7":"code","d424be5b":"code","3026091a":"code","1b4dfdd4":"code","af628cec":"code","89c79bb2":"code","2f07cac4":"code","af818642":"code","b89b09a6":"code","11f5e157":"code","2ede05f9":"code","58b891fd":"code","063181ab":"code","1fdbd5ea":"code","2c0de68a":"code","290f84c2":"code","4e70a87f":"code","f29e58bf":"code","890aac50":"code","0ccfc943":"code","be331f30":"code","1c11ac78":"code","98ca9040":"code","fe1a4f58":"code","f6b0ebc9":"code","4d953dee":"code","7f2afc45":"code","941f079d":"code","10d23450":"code","80fe2cb2":"code","457c3204":"code","e903a1ab":"code","94ad9826":"code","68ea6a77":"code","c43adf48":"code","1bef39b3":"code","876355d7":"code","76f826e5":"code","fb3a207a":"code","3338043b":"code","1bcfc435":"code","65286235":"code","ba99f325":"code","9d0e8f3a":"code","b9f2bc4d":"code","844e8894":"code","5cf0e181":"code","82107960":"code","d7322591":"code","3817504a":"code","2247041f":"code","7f660f0f":"code","eb395c5a":"code","a3d48095":"code","c727f975":"code","13f24b6b":"code","428be4a3":"code","a79160be":"code","33b67562":"code","17e018b9":"code","f25e9e2a":"code","c6b0ea62":"code","61c2f51b":"code","5dd8f132":"markdown","cb85424f":"markdown","b07a7d06":"markdown","41f54eeb":"markdown","eb77eb2b":"markdown","b6276796":"markdown","e0486d4c":"markdown","addc17f1":"markdown","14facc6e":"markdown","27f5d046":"markdown","9ec1f23e":"markdown","2bec17c3":"markdown","867df524":"markdown","fa94ea86":"markdown","8794b208":"markdown","bb13ad15":"markdown","bdf806fa":"markdown","3f6a0510":"markdown","577ec34d":"markdown","f8e40b96":"markdown","2910e142":"markdown","5dd9cbd1":"markdown","a0b3169b":"markdown","0cf1fa2e":"markdown","471e8651":"markdown","2d582a4b":"markdown","60359c75":"markdown","a5b1d787":"markdown","0a73abe8":"markdown","fed82dfc":"markdown","4330512f":"markdown","f9a77e77":"markdown","b4201e5e":"markdown","743e3cfb":"markdown","a1bfd61d":"markdown","72021f40":"markdown","f4f8dd95":"markdown","ff403dca":"markdown","a0dcd426":"markdown","e7758f50":"markdown","e6a59816":"markdown","45c30598":"markdown","07a9df2f":"markdown"},"source":{"7efe3c36":"# Importation des premi\u00e8res librairies utiles \u00e0 notre analyse\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\nimport statsmodels.api as sm\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b713f258":"df_conso = pd.read_csv(\"..\/input\/dataset-desaisonnalisation-sarima-predict\/ts_conso_energie_RTE.csv\", \n                       encoding=\"latin_1\", header=0, sep=\";\", parse_dates=[0], index_col=\"Mois\")\ndf_conso.head()","6b5044bd":"df_conso.columns","b7991ee7":"df_conso = df_conso[[\"Territoire\",\"Qualit\u00e9\",\"Consommation totale\"]]\ndf_conso.head()","d424be5b":"df_conso.info()","3026091a":"df_conso.describe(include = \"all\")","1b4dfdd4":"df_conso[\"Territoire\"].unique()","af628cec":"df_conso_france = df_conso[df_conso[\"Territoire\"]==\"France\"]\ndf_conso_regions = df_conso[df_conso[\"Territoire\"]!=\"France\"]","89c79bb2":"# Donn\u00e9es France\ndf_conso_france.head()","2f07cac4":"# Donn\u00e9es R\u00e9gions\ndf_conso_regions.head()","af818642":"#Verification des consommations \u00e0 0\ndf_conso_regions[df_conso_regions[\"Consommation totale\"]==0].groupby(by=\"Mois\").nunique()","b89b09a6":"df_conso_regions = df_conso_regions[df_conso_regions.index.map(pd.to_datetime)>pd.to_datetime('2013-12-01')]\ndf_conso_regions.head()","11f5e157":"fig = plt.figure(figsize=(20,12))\nsns.lineplot(data=df_conso_regions, x=df_conso_regions.index,  y=\"Consommation totale\", hue=\"Territoire\")\nplt.title(\"Evolution de la consommation en \u00e9nergie (en TWh) par R\u00e9gion\", fontsize=22)\nplt.show()","2ede05f9":"fig = plt.figure(figsize=(20,12))\nsns.lineplot(data=df_conso_france, x=df_conso_france.index,  y=\"Consommation totale\", color=\"orange\")\nplt.title(\"Evolution de la consommation en \u00e9nergie (en TWh) en France\", fontsize=22)\nplt.show()","58b891fd":"# On liste l'ensemble des fichiers DJU pr\u00e9sents dans notre r\u00e9pertoire\nlist_dju_file = os.listdir('..\/input\/dataset-desaisonnalisation-sarima-predict\/')\nlist_dju_file.remove('ts_conso_energie_RTE.csv')\nprint(list_dju_file)","063181ab":"#Cr\u00e9ation d'un dataframe global avec les DJU de chaque chef lieu de R\u00e9gion\ndf_dju_full = pd.DataFrame(columns=[\"Annee\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"Region\"])\nfor file in list_dju_file:\n    file_path = \"..\/input\/dataset-desaisonnalisation-sarima-predict\/\"+file\n    region = file[11:-5]\n    df_dju_test = pd.read_excel(file_path, skiprows=10, header=1, converters={'Unnamed: 0':str})\n    df_dju_test = df_dju_test.rename(columns={\"Unnamed: 0\":\"Annee\", \"JAN\":\"1\", \"F\u00c9V\":\"2\", \"MAR\":\"3\", \"AVR\":\"4\", \"MAI\":\"5\", \"JUN\":\"6\", \"JUI\":\"7\", \"AO\u00db\":\"8\", \"SEP\":\"9\", \"OCT\":\"10\", \"NOV\":\"11\", \"D\u00c9C\":\"12\"})\n    df_dju_test = df_dju_test.iloc[:,0:-1]\n    df_dju_test[\"Region\"] = region\n    df_dju_full = pd.concat([df_dju_full,df_dju_test], ignore_index=True)","1fdbd5ea":"df_dju_full.head()","2c0de68a":"# Mise en forme des dates du DataFrame\ndf_dju_full = df_dju_full.melt(id_vars = [\"Annee\",\"Region\"], value_vars=[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"]).rename(\n             columns={\"variable\":\"Mois\", \"value\":\"dju\"})\ndf_dju_full = df_dju_full.sort_values([\"Annee\",\"Mois\"])\ndf_dju_full[\"Jour\"] = \"1\"\ndf_dju_full[\"Periode\"] = df_dju_full[[\"Annee\", \"Mois\", \"Jour\"]].apply(lambda x: \"-\".join(x), axis=1)\ndf_dju_full[\"Periode\"] = df_dju_full[\"Periode\"].apply(pd.to_datetime, format='%Y-%m-%d')\ndf_dju_full = df_dju_full[[\"Region\",\"Periode\",\"dju\"]].sort_values(\"Periode\")\ndf_dju_full.head()","290f84c2":"#Regroupement par la moyenne pour obtenir les donn\u00e9es au niveau National\ndf_dju_full_france = df_dju_full.groupby(by=\"Periode\").mean()\ndf_dju_full_france.head()","4e70a87f":"fig = plt.figure(figsize=(20,12))\nax1 = sns.lineplot(data=df_conso_france, x=df_conso_france.index,  y=\"Consommation totale\", color=\"orange\", alpha=0.7, legend='brief', label=\"Conso\")\nax2 = plt.twinx()\nax2 = sns.lineplot(data=df_dju_full_france, x=df_dju_full_france.index,  y=\"dju\", color=\"purple\", ax=ax2, legend='brief', label=\"DJU France\")\nplt.title(\"Evolution du DJU et consommation en \u00e9nergie France\", fontsize=22)\nplt.show()","f29e58bf":"datas = pd.merge(df_dju_full_france, df_conso_france.reset_index().rename(columns={\"Mois\":\"Periode\"}), on=\"Periode\", how=\"left\").set_index(\"Periode\")\ndatas = datas.rename(columns = {\"Consommation totale\":\"Conso\"})\ndatas.head()","890aac50":"# Description rapide des donn\u00e9es pour trouver d'\u00e9ventuelles erreures\nprint(datas.info())\nprint(datas.describe())","0ccfc943":"fig = plt.figure(figsize=(12,8))\nax = sns.regplot(data=datas, x=\"dju\", y=\"Conso\", robust=True, ci=None, line_kws={\"color\":\"orange\"})\nplt.title(\"R\u00e9gression lin\u00e9aire : Consommation en fonction de DJU\", fontsize=22)\nplt.show()","be331f30":"import statsmodels.formula.api as smf","1c11ac78":"reg_conso = smf.ols('Conso ~ dju', data=datas).fit()\nprint(reg_conso.summary())","98ca9040":"# Les cofficients de regressions a et b sont :\na, b = reg_conso.params\nprint(\"a =\",a,\"| b =\",b)","fe1a4f58":"datas['Conso_ajuste'] = reg_conso.predict()\n\nX_plot = [datas['Conso'].min(), datas['Conso_ajuste'].max()]\n\nfig = plt.figure(figsize=(12,8))\nax = sns.scatterplot(x=\"Conso\", y=\"Conso_ajuste\", data=datas)\nax.set(xlabel='Conso', ylabel='Conso ajust\u00e9e')\nplt.plot(X_plot, X_plot, color='r')\nplt.title(\"Projection des valeurs ajust\u00e9es de la consommation en \u00e9nergie\", fontsize=22)\nplt.show()","f6b0ebc9":"from scipy.stats import norm, shapiro\n\nfig = plt.figure(figsize=(12,8))\nax = sns.distplot(reg_conso.resid, fit=norm)\nplt.xlabel('R\u00e9sidus')\nplt.title(\"Distribution des r\u00e9sidus du mod\u00e8le de r\u00e9gression lin\u00e9aire\", fontsize=22)\nplt.show()","4d953dee":"shapiro_test = shapiro(reg_conso.resid)\nshapiro_test","7f2afc45":"fig = sm.qqplot(reg_conso.resid, fit=True, line=\"45\")\nfig.set_size_inches(12, 8)\nfig.suptitle(\"Diagramme quantile-quantile des r\u00e9sidus avec une loi normale\", fontsize=22)\nplt.show()","941f079d":"# Calcul des donn\u00e9es de consommation ajust\u00e9es des effets de temp\u00e9rature\ndatas['Conso_ajuste'] = datas['Conso'] - (datas['dju']*b)","10d23450":"fig = plt.figure(figsize=(20,12))\nax1 = sns.lineplot(data=datas, x=datas.index,  y=\"Conso\", color=\"orange\", legend='brief', label=\"Consommation r\u00e9elle\")\nax2 = sns.lineplot(data=datas, x=datas.index,  y=\"Conso_ajuste\", color=\"purple\", legend='brief', label=\"Consommation ajust\u00e9e des DJU\")\nplt.title(\"Evolution des consommations France corrig\u00e9es des effets de temp\u00e9rature\", fontsize=22)\nplt.show()","80fe2cb2":"from statsmodels.tsa.seasonal import seasonal_decompose","457c3204":"datas.plot(y=\"Conso_ajuste\", figsize=(14,4))","e903a1ab":"x = datas[\"Conso_ajuste\"]\ny = np.log(x)\ndecomp_y = seasonal_decompose(y,  model='additive')\ndecomp_y.plot()\nplt.show()","94ad9826":"df_decomp_y_seasonal = pd.DataFrame(decomp_y.seasonal)\ny_compl = pd.merge(y, df_decomp_y_seasonal, on=\"Periode\")\ny_compl[\"cvs\"] = np.exp(y_compl[\"Conso_ajuste\"] - y_compl[\"seasonal\"])\ny_compl","68ea6a77":"x.plot(figsize=(14,4))\n#Plot des valeurs obtenues par CVS des moyennes mobiles\ny_compl[\"cvs\"].plot(legend = True, color=\"r\")\nplt.title(\"Projection des consommations ajust\u00e9es CVS\", fontsize=22)\nplt.show()","c43adf48":"#Projetons les 3 timeseries des corrections apport\u00e9es :\ndatas[\"Conso_ajuste_cvs\"] = y_compl[\"cvs\"]\nfig = plt.figure(figsize=(20,12))\nax1 = sns.lineplot(data=datas, x=datas.index,  y=\"Conso\", color=\"orange\", legend='brief', label=\"Consommation r\u00e9elle\")\n#ax1.lines[0].set_linestyle(\"--\")\nax2 = sns.lineplot(data=datas, x=datas.index,  y=\"Conso_ajuste\", color=\"purple\", legend='brief', label=\"Consommation ajust\u00e9e des DJU\")\nax3 = sns.lineplot(data=datas, x=datas.index,  y=\"Conso_ajuste_cvs\", color=\"red\", legend='brief', label=\"Consommation ajust\u00e9e des DJU et CVS\")\nplt.title(\"Evolution des consommations France corrig\u00e9es des effets de temp\u00e9rature et CVS\", fontsize=22)\nplt.show()","1bef39b3":"plt.figure(figsize=(14,6))\nplt.plot(datas['Conso_ajuste'], label='Consommation ajust\u00e9e des effets de temp\u00e9rature')\nplt.title(\"Projection des consommations ajust\u00e9es de l'effet de temp\u00e9rature\", fontsize=22)\nplt.show()","876355d7":"x_train = x[\"2012\":\"2018\"]\nx_test = x[\"2019\"]\ny_train = np.log(x_train)\ny_test = np.log(x_test)","76f826e5":"from statsmodels.tsa.api import ExponentialSmoothing\nhw_ln = ExponentialSmoothing(np.asarray(y_train), seasonal_periods=12, trend='add', seasonal='add').fit()\nhw_pred_ln = hw_ln.forecast(12)","fb3a207a":"print(hw_ln.summary())","3338043b":"plt.figure(figsize=(14,12))\nplt.subplot(211)\nplt.plot(x_train, label='Conso ajust\u00e9e')\nplt.plot(x_test, label='Conso r\u00e9elle test', color=\"g\", linestyle=\"--\")\nplt.plot(y_test.index, np.exp(hw_pred_ln), label='Prediction')\nplt.title(\"Pr\u00e9diction des consommations 2019 ajust\u00e9es de l'effet de temp\u00e9rature - Holt Winters\", fontsize=20)\nplt.legend()\n\n#Zoom\nplt.subplot(212)\nplt.plot(x[\"2019\":], label='Conso ajust\u00e9e')\nplt.plot(x_test, label='Conso r\u00e9elle test', color=\"g\", linestyle=\"--\")\nplt.plot(y_test.index, np.exp(hw_pred_ln), label='Prediction')\nplt.title(\"Pr\u00e9diction des consommations 2019 ajust\u00e9es de l'effet de temp\u00e9rature - Holt Winters\", fontsize=20)\nplt.legend()\n\nplt.show()","1bcfc435":"#Fonction de calculs des metriques importantes MAE, MSE, MAPE, RMSE, R\u00b2\ndef metrics_timeseries(y_true, y_pred):\n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    diff = y_true - y_pred\n    mae = np.mean(abs(diff))\n    mse = np.mean(diff**2)\n    rmse = np.sqrt(mse)\n    mape = np.mean(np.abs(diff \/ y_true)) * 100\n    r2 = 1-(sum(diff**2)\/sum((y_true-np.mean(y_true))**2))\n    dict_metrics = {\"M\u00e9trique\":[\"MAE\", \"MSE\", \"RMSE\", \"MAPE\", \"R\u00b2\"], \"R\u00e9sultats\":[mae, mse, rmse, mape, r2]}\n    df_metrics = pd.DataFrame(dict_metrics)\n    return df_metrics","65286235":"# Calcul des affichage des m\u00e9triques de notre mod\u00e8le HW\ndf_metrics_holt_winters = metrics_timeseries(np.exp(y_test), np.exp(hw_pred_ln))\ndf_metrics_holt_winters","ba99f325":"from statsmodels.tsa.stattools import adfuller, acf, pacf","9d0e8f3a":"#ADF-test(S\u00e9rie originelle)\nres_adf_o = adfuller(x,regression='ct')\nprint('p-value ADF s\u00e9rie originelle :{}'.format(res_adf_o[1]))\n\n#ADF-test(S\u00e9rie diff\u00e9renci\u00e9e)\nres_adf_d = adfuller(x.diff().dropna(),regression='c')\nprint('p-value ADF s\u00e9rie diff\u00e9renci\u00e9e :{}'.format(res_adf_d[1]))","b9f2bc4d":"# Projection des premiers autocorr\u00e9logrammes\nfig,ax = plt.subplots(2,1,figsize=(20,10))\nfig = sm.graphics.tsa.plot_acf(y.diff().dropna(), lags=50, ax=ax[0])\nfig = sm.graphics.tsa.plot_pacf(y.diff().dropna(), lags=50, ax=ax[1])\nplt.show()","844e8894":"y_diff_6 = y.diff(6)","5cf0e181":"fig,ax = plt.subplots(2,1,figsize=(20,10))\nfig = sm.graphics.tsa.plot_acf(y_diff_6.dropna(), lags=50, ax=ax[0])\nfig = sm.graphics.tsa.plot_pacf(y_diff_6.dropna(), lags=50, ax=ax[1])\nplt.show()","82107960":"y_diff_6_12 = y_diff_6.diff(12)","d7322591":"fig,ax = plt.subplots(2,1,figsize=(20,10))\nfig = sm.graphics.tsa.plot_acf(y_diff_6_12.dropna(), lags=50, ax=ax[0])\nfig = sm.graphics.tsa.plot_pacf(y_diff_6_12.dropna(), lags=50, ax=ax[1])\nplt.show()","3817504a":"from statsmodels.tsa.statespace.sarimax import *\nfrom statsmodels.stats.diagnostic import acorr_ljungbox\n\nmodel1 = SARIMAX(np.asarray(y), order=(1,1,0), seasonal_order=(1,1,1,6))\nresults1 = model1.fit()\nresidus1 = results1.resid\nprint(results1.summary())\n\nprint('\\nTEST DE JUNG-BOX - (Test de blancheur)\\n\\nRetard : p-value')\nfor elt in np.arange(6,50,6):\n    print('{} : {}'.format(elt, acorr_ljungbox(results1.resid, lags=elt)[1].mean()))","2247041f":"fig, ax = plt.subplots(2,1,figsize=(20,10))\nfig = sm.graphics.tsa.plot_acf(residus1, lags=50, ax=ax[0])\nfig = sm.graphics.tsa.plot_pacf(residus1, lags=50, ax=ax[1])\nplt.show()","7f660f0f":"def plot_diagnostics(sarima_res, variable=0, lags=10, fig=None, figsize=None):\n        return type(sarima_res.plot_diagnostics(variable, lags, fig, figsize))\nplot_diagnostics(sarima_res = results1, figsize=(20,14), lags=50)    ","eb395c5a":"df_results_gs = pd.DataFrame(columns=[\"Mod\u00e8le\",\"AIC\",\"MAPE\",\"RMSE\",\"MSE\",\"MAE\"])\n\ndef grid_search_sarima(season, y_train, y_test):\n# Define the p, d and q parameters to take any value between 0 and 2\n    configs = list()\n    # Liste des config\n    p_params = [0, 1, 2]\n    d_params = [0, 1]\n    q_params = [0, 1, 2]\n    P_params = [0, 1, 2]\n    D_params = [0, 1]\n    Q_params = [0, 1, 2]\n    m_params = season\n\n    for p in p_params:\n        for d in d_params:\n            for q in q_params:\n                for P in P_params:\n                    for D in D_params:\n                        for Q in Q_params:\n                            for m in m_params:\n                                cfg = [(p,d,q), (P,D,Q,m)]\n                                configs.append(cfg)\n\n    list_model = list()\n    list_aic = list()\n    list_mape = list()\n    list_rmse = list()\n    list_mse = list()\n    list_mae = list()\n\n    for config_sarima in configs:\n        order, seasonal_order = config_sarima\n        try:\n            model = sm.tsa.statespace.SARIMAX(y_train, order=order, seasonal_order=seasonal_order, enforce_stationarity=False, enforce_invertibility=False)\n            results = model.fit(disp=False)\n            pred_model = results.get_forecast(12)\n            pred = pred_model.predicted_mean\n\n            #metriques\n            y_true, y_pred = np.array(np.exp(y_test)), np.array(np.exp(pred))\n            diff = y_true - y_pred\n            mae = np.mean(abs(diff))\n            mse = np.mean(diff**2)\n            rmse = np.sqrt(mse)\n            mape = np.mean(np.abs(diff \/ y_true)) * 100\n            #print('SARIMA{}x{} - AIC:{} - MAPE:{}'.format(order, seasonal_order, results.aic, mape))\n\n            str_model = str(order) + str(seasonal_order)\n            list_model.append(str_model)\n            list_aic.append(results.aic)\n            list_mape.append(mape)\n            list_rmse.append(rmse)\n            list_mse.append(mse)\n            list_mae.append(mae)\n\n        except:\n            continue\n\n    df_results_gs[\"Mod\u00e8le\"] = list_model\n    df_results_gs[\"AIC\"] = list_aic\n    df_results_gs[\"MAPE\"] = list_mape\n    df_results_gs[\"RMSE\"] = list_rmse\n    df_results_gs[\"MSE\"] = list_mse\n    df_results_gs[\"MAE\"] = list_mae\n\n    return df_results_gs","a3d48095":"grid_search_sarima([6,12],y_train,y_test)","c727f975":"df_results_gs.sort_values(by=\"AIC\").head(10)","13f24b6b":"model2 = SARIMAX(np.asarray(y), order=(1,0,1), seasonal_order=(1,0,1,12))\nresults2 = model2.fit()\nresidus2 = results2.resid\nprint(results2.summary())\n\nprint('\\nTEST DE JUNG-BOX - (Test de blancheur)\\n\\nRetard : p-value')\nfor elt in np.arange(6,50,6):\n    print('{} : {}'.format(elt, acorr_ljungbox(results2.resid, lags=elt)[1].mean()))","428be4a3":"fig, ax = plt.subplots(2,1,figsize=(20,10))\nfig = sm.graphics.tsa.plot_acf(residus2, lags=50, ax=ax[0])\nfig = sm.graphics.tsa.plot_pacf(residus2, lags=50, ax=ax[1])\nplt.show()","a79160be":"plot_diagnostics(sarima_res = results2, figsize=(20,14), lags=50)","33b67562":"model_train = SARIMAX(np.asarray(y_train), order=(1,0,1), seasonal_order=(1,0,1,12))\nresults_train = model_train.fit()\npred_model = results_train.get_forecast(12)\npred = pred_model.predicted_mean\n#Intervals de pr\u00e9visions \u00e0 5%\npred_ci = pred_model.conf_int(alpha=0.05)\n\nplt.figure(figsize=(14,12))\nplt.subplot(211)\nplt.plot(x_train, label='Conso ajust\u00e9e')\nplt.plot(y_test.index, np.exp(pred), color='r', label='Prediction')\nplt.plot(np.exp(y_test), label='Conso r\u00e9elle test', color=\"g\", linestyle=\"--\")\nplt.fill_between(y_test.index, np.exp(pred_ci[:,0]), np.exp(pred_ci[:,1]), alpha=0.5, color=\"y\", label=\"Intervalle de confiance\")\nplt.title(\"Pr\u00e9diction des consommations 2019 ajust\u00e9es de l'effet de temp\u00e9rature - SARIMA(1,0,1)(1,0,1,12)\", fontsize=20)\nplt.legend()\n\n#Zoom\nplt.subplot(212)\nplt.plot(x[\"2019\":], label='Conso ajust\u00e9e')\nplt.plot(x_test, label='Conso r\u00e9elle test', color=\"g\", linestyle=\"--\")\nplt.plot(y_test.index, np.exp(pred), color='r', label='Prediction')\nplt.legend()\n\nplt.show()","17e018b9":"df_metrics_SARIMA = metrics_timeseries(np.exp(y_test), np.exp(pred))\ndf_compare_metrics = pd.merge(df_metrics_holt_winters, df_metrics_SARIMA, on=\"M\u00e9trique\").rename(columns={\"R\u00e9sultats_x\":\"R\u00e9sultats HW\",\"R\u00e9sultats_y\":\"R\u00e9sultats SARIMA\"})\ndf_compare_metrics","f25e9e2a":"hw_ln_2020 = ExponentialSmoothing(np.asarray(y), seasonal_periods=12, trend='add', seasonal='add').fit()\nhw_pred_ln_2020 = hw_ln_2020.forecast(12)\n\nplt.figure(figsize=(14,6))\nplt.plot(x, label='Conso ajust\u00e9e')\nplt.plot(pd.date_range(x.index[len(x)-1], periods=12, freq='M'), np.exp(hw_pred_ln_2020), label='Prediction Holt-Winters 2020')\nplt.title(\"Pr\u00e9diction des consommations 2020 ajust\u00e9es de l'effet de temp\u00e9rature - Holt Winters\", fontsize=20)\nplt.legend()\nplt.show()","c6b0ea62":"pred_model_2020 = results2.get_forecast(12)\npred_2020 = pred_model_2020.predicted_mean\n#Intervals de pr\u00e9visions \u00e0 5%\npred_ci_2020 = pred_model_2020.conf_int(alpha=0.05)\n\nplt.figure(figsize=(14,6))\nplt.plot(x, label='Conso ajust\u00e9e')\nplt.plot(pd.date_range(x.index[len(x)-1], periods=12, freq='M'), np.exp(pred_2020), color='r', label='Prediction SARIMA 2020')\nplt.fill_between(pd.date_range(x.index[len(x)-1], periods=12, freq='M'), np.exp(pred_ci_2020[:,0]), \n                 np.exp(pred_ci_2020[:,1]), alpha=0.5, color=\"y\", label=\"Intervalle de confiance\")\nplt.title(\"Pr\u00e9diction des consommations 2020 ajust\u00e9es de l'effet de temp\u00e9rature - SARIMA\", fontsize=20)\nplt.legend()\nplt.show()","61c2f51b":"plt.figure(figsize=(14,12))\nplt.subplot(211)\nplt.plot(x, label='Conso ajust\u00e9e')\nplt.plot(pd.date_range(x.index[len(x)-1], periods=12, freq='M'), np.exp(hw_pred_ln_2020), label='Prediction Holt-Winters 2020')\nplt.plot(pd.date_range(x.index[len(x)-1], periods=12, freq='M'), np.exp(pred_2020), color='r', linestyle=\"--\", label='Prediction SARIMA 2020')\nplt.title(\"Comparaison des pr\u00e9dictions 2020 ajust\u00e9es de l'effet de temp\u00e9rature\", fontsize=20)\nplt.legend()\n\n#Zoom\nplt.subplot(212)\nplt.plot(x[\"2019\":], label='Conso ajust\u00e9e')\nplt.plot(pd.date_range(x.index[len(x)-1], periods=12, freq='M'), np.exp(hw_pred_ln_2020), label='Prediction Holt-Winters 2020')\nplt.plot(pd.date_range(x.index[len(x)-1], periods=12, freq='M'), np.exp(pred_2020), color='r', linestyle=\"--\", label='Prediction SARIMA 2020')\nplt.legend()\n\nplt.show()","5dd8f132":"On rermarque donc ici que **les r\u00e9sidus sont bien un bruit blanc et leur normalit\u00e9 est \u00e9galement valid\u00e9e**. Le mod\u00e8le semble donc performant, mais nous allons r\u00e9aliser une **Grid Search** pour v\u00e9rifier les autres param\u00e8tres avant de pouvoir effectuer nos tests \u00e0 posteriori.\n\n#### <font color=\"brown\">Grid Search des m\u00e9triques SARIMA<\/font>","cb85424f":"On voit ici clairement l'impact des temp\u00e9ratures sur les consommation d'\u00e9nergie au niveau national. Il existe encore sur cette s\u00e9rie temporelle corrig\u00e9e un fort impact saisonnier.\n\nNous allons donc effectuer une **d\u00e9saisonnalisation de la consommation corrig\u00e9e des effets de temp\u00e9rature par la m\u00e9thode des moyennes mobiles**.\n\n## <font color=\"blue\" id=\"moving-average\">D\u00e9saisonnalisation par moyennes mobiles<\/font>\n\nUne moyenne mobile est une **combinaison lin\u00e9aire d'instants pass\u00e9s et futurs de notre s\u00e9rie temporelle**. L'enjeu est de trouver une moyenne mobile qui laisse la **tendance invariante, qui absorbe la saisonnalit\u00e9 et qui r\u00e9duit le r\u00e9sidu** :\n\nNotre s\u00e9rie temporelle :  $X_t = T_t + S_t + \\varepsilon_t$\n\nSi on applique une moyenne mobile $M$ sur la s\u00e9rie, nous obtenons :  $MX_t = MT_t + MS_t + M\\varepsilon_t$ \n\nSes propri\u00e9t\u00e9s id\u00e9ales seront donc :\n\n* $MT_t = T_t$\n* $MS_t = 0$ \n* $M\\varepsilon_t$ faible\n\nIci, nous allons utiliser la fonction **\"seasonal_decompose\" du package statsmodels** :","b07a7d06":"On remarque que les points projet\u00e9s sont **proches de la premi\u00e8re bissectrice**, ce qui nous indique que les valeurs ajust\u00e9es sont proches des valeurs r\u00e9\u00e9lles. Notre mod\u00e8le semble correct.\n\nEnfin, nous allons repr\u00e9senter les r\u00e9sidus, $\\varepsilon$ \u00e9tant un param\u00e8tre de notre mod\u00e8le. **Nous allons v\u00e9rifier qu'ils sont bien centr\u00e9s et de variance constante** :","41f54eeb":"Ce jeu de donn\u00e9es ne semble **pas contenir de *null***, cependant des agglom\u00e9rats semblent \u00eatre pr\u00e9sents *(France)*.    \nLes moyennes, m\u00e9diane et \u00e9cart-type semblent \u00eatre coh\u00e9rents.","eb77eb2b":"Au niveau de test 5%, on ne rejette pas l'hypoth\u00e8se de non-stationnarit\u00e9 de la s\u00e9rie, contrairement \u00e0 la s\u00e9rie diff\u00e9renci\u00e9e.\n**Nous allons donc devoir effectuer une stationnarisation**.\n\n#### <font color=\"brown\" id=\"stationnarisation\">Stationnarisation de la s\u00e9rie<\/font>\nNous allons r\u00e9aliser cette **stationnarisation par diff\u00e9renciation** de mani\u00e8re it\u00e9rative si besoin. Nous allons travailler sur le logarithme de la s\u00e9rie, comme pour la m\u00e9thode de Holt-Winters.","b6276796":"Il existe encore un **probl\u00e8me de stationarit\u00e9 pour les multiples de 12** selon les autocorr\u00e9logrammes. Nous allons donc effectuer une seconde diff\u00e9renciation $(I\u2212B^{12})$ sur cette s\u00e9rie diff\u00e9renci\u00e9e.","e0486d4c":"Comme nous pouvons le voir, les saisonnalit\u00e9s sont tr\u00e8s marqu\u00e9es sur ces donn\u00e9es de consommation. **Les consommations hivernales sont fortement impact\u00e9es par l'effet des chauffages \u00e9l\u00e9ctrique** par exemple. Afin de gommer cet effet, nous allons devoir corriger les consommations gr\u00e2ce aux DJU (Degr\u00e9s Jour Unifi\u00e9s).\n\n### <font color=\"orange\" id=\"cleaning-dju\">Donn\u00e9es m\u00e9t\u00e9o utilis\u00e9es pour corriger les donn\u00e9es de l'effet temp\u00e9rature<\/font>\nCes datasets ont \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9s sur le lien https:\/\/cegibat.grdf.fr\/simulateur\/calcul-dju pour les donn\u00e9es des stations de chaque chef lieu de R\u00e9gion.","addc17f1":"Cette s\u00e9rie temporelle semble \u00eatre un mod\u00e8le additif. Nous allons donc travailler avec le **logarithme de la variable \"Conso_ajuste\"** :","14facc6e":"#### <font color=\"brown\">Pr\u00e9diction avec SARIMA<\/font>","27f5d046":"### <font color=\"orange\" id=\"sarima\">M\u00e9thode SARIMA<\/font>\n\nLes mod\u00e8les SARIMA *(Seasonnal AutoRegressive Integrated Moving Average)* permettent de mod\u00e9liser des s\u00e9ries qui pr\u00e9sentent une saisonnalit\u00e9, comme c'est le cas pour notre dataset.\n\nDans un premier temps, nous allons **tester la stationnarit\u00e9 de notre s\u00e9rie avec le test ADF** *(Augmented Dickey-Fuller)*.\nL'hypoth\u00e8se nulle du test est que la s\u00e9rie temporelle n'est pas stationnaire.","9ec1f23e":"Afin d'avoir une visualisation globale de ces donn\u00e9es r\u00e9gionales, nous allons projeter un **lineplot Seaborn** pour observer l'\u00e9volution des consommations r\u00e9gionales :","2bec17c3":"Comme nous pouvions nous y attendre, nous visualisons **l'effet saisonnier sur la consommation totale**. Les courbes des diff\u00e9rentes r\u00e9gions de France suivent cependant la meme tendance qui semble \u00eatre pl\u00fbtot lin\u00e9aire.\n\n**Nous allons \u00e9galement ploter les donn\u00e9es \"France\"** :","867df524":"On remarque donc que **la distribution des r\u00e9sidus semble centr\u00e9e et suivent une loi gaussienne**. Nous allons r\u00e9aliser un test de **Shapiro-Wilk** pour confirmer ce dernier point :","fa94ea86":"Les donn\u00e9es pour **2012 et 2013 au niveau r\u00e9gionnal sont donc absentes**. Nous allons travailler avec les donn\u00e9es \u00e0 partir de 2014.","8794b208":"#### <font color=\"brown\">Estimation et validation des mod\u00e8les SARIMA<\/font>\nNous allons donc cr\u00e9er notre premier mod\u00e8le SARIMA avec les param\u00e8tres estim\u00e9s ci-dessus. Nous testerons la **blancheur des r\u00e9sidus gr\u00e2ce au test de Jung-Box** :","bb13ad15":"## <font color=\"blue\" id=\"summary\">Sommaire<\/font>\n1. [Nettoyage et description des donn\u00e9es sources](#cleaning)     \n    1.1. [Donn\u00e9es mensuelles de consommation totale d'\u00e9lectricit\u00e9 en \u00e9nergie](#cleaning-conso)     \n    1.2. [Donn\u00e9es m\u00e9t\u00e9o utilis\u00e9es pour corriger les donn\u00e9es de l'effet temp\u00e9rature](#cleaning-dju)\n\n2. [Correction des donn\u00e9es de l'effet temp\u00e9rature - R\u00e9gression lin\u00e9aire simple](#correction-temp)\n\n3. [D\u00e9saisonnalisation par moyennes mobiles](#moving-average)\n\n4. [Pr\u00e9vision de la consommation](#prediction)     \n    4.1. [M\u00e9thode de Holt-Winters (lissage exponentiel)](#holt-winters)     \n    4.2. [M\u00e9thode SARIMA](#sarima)   \n    4.3. [Pr\u00e9diction des consommations ajust\u00e9es pour les 12 prochains mois gr\u00e2ce aux 2 m\u00e9thodes](#final-prediction)\n    \n5. [Conclusion](#conclusion)","bdf806fa":"#### <font color=\"brown\">Comparaison des 2 m\u00e9thodes<\/font>","3f6a0510":"# <font color=\"purple\">Pr\u00e9diction de la consommation d'\u00e9nergie<\/font>\n## <font color=\"blue\">Contexte<\/font>\n\nJe sais ce que vous allez me dire ... les **processus ARMA, la r\u00e9gression lin\u00e9aire**, etc ... c'est d\u00e9pass\u00e9 pour l'analyse des Timeseries ! Mieux vaut utiliser des algorithmes de Deep Learning ou encore Prophet de FB.\n\nSauf que ces techniques de r\u00e9gression lin\u00e9aire, de moyennes mobiles, ARMA, SARIMA sont encore enseign\u00e9es et je pense qu'il est important de les comprendre et de savoir les utiliser.\n\nDans ce Notebook, nous allons effectuer plusieurs approches de traitement des Timeseries :\n* Description rapide des donn\u00e9es utilis\u00e9es.\n* Ajustement des effets de temp\u00e9rature sur la consommation en \u00e9nergie via r\u00e9grssion lin\u00e9aire simple.\n* D\u00e9saisonnalisation par les moyennes mobiles pour obtenir les consommations corrig\u00e9es des variations saisonni\u00e8res (CVS)\n* Mod\u00e9lisation Holt-Winters et SARIMA avec calcul des m\u00e9triques principales (MSE, MAE, RMSE, MAPE ...)\n* Pr\u00e9diction de la consommation sur les 12 prochains mois.\n\nCe Notebook est mon premier sur Kaggle alors n'h\u00e9sitez pas \u00e0 apporter vos observations ou conseils !","577ec34d":"Pour v\u00e9rifier la performance de notre mod\u00e8le, nous allons regarder les valeurs ajust\u00e9es en fonction des valeurs observ\u00e9es :","f8e40b96":"Toujours **en fonction des premiers autocorr\u00e9logrammes et des r\u00e9sultats obtenus dans cette grid search**, Nous allons tester le mod\u00e8les qui semble avoir les meilleures m\u00e9triques et un AIC significatif :\n\n* (1, 0, 1)(1, 0, 1, 12)","2910e142":"Les 2 courbes semblent suivre la **m\u00eame saisonnalit\u00e9** ce qui indique bien que les variations de la courbe de consommation d'\u00e9nergie sont effectivement **globalement li\u00e9es aux \u00e9carts de temp\u00e9ratures**. Il est temps de supprimer cet effet !\n\n## <font color=\"blue\" id=\"correction-temp\">Correction des donn\u00e9es de l'effet temp\u00e9rature<\/font>\nPour traiter les timeseries, nous allons travailler sur les donn\u00e9es France. Nous cr\u00e9ons donc un **dataframe global pour analyse**.","5dd9cbd1":"Pour corriger les donn\u00e9es de consommation mensuelles de l'effet temp\u00e9rature *(dues au chauffage \u00e9lectrique)*, nous allons utiliser une **r\u00e9gression lin\u00e9aire**. Regardons dans un premier temps le scatter plot correspondant \u00e0 :\n\n* $X$  = dju\n* $Y$  = consommation totale\n\nDans ce mod\u00e8le, nous supposons qu'il existe une relation lin\u00e9aire entre la variable \u00e0 expliquer et la variable explicative :\n\n$$Y = a + bX + \\varepsilon$$\n \nNous cherchons donc les param\u00e8tres inconnus  $a$  et  $b$  pour corriger les consommations mensuelles de l'effet de temp\u00e9rature.","a0b3169b":"R\u00e9alisons donc une **description** rapide de ces donn\u00e9es :","0cf1fa2e":"## <font color=\"blue\" id=\"cleaning\">Nettoyage et description des donn\u00e9es sources<\/font>\n### <font color=\"orange\" id=\"cleaning-conso\">Donn\u00e9es mensuelles de consommation totale d'\u00e9lectricit\u00e9 en \u00e9nergie<\/font>\nCes donn\u00e9es sont disponibles sur la page https:\/\/www.rte-france.com\/eco2mix\/telecharger-les-indicateurs.\nNous aurons besoin, dans ce jeu de donn\u00e9es, de la consommation totale en energie.","471e8651":"**Les tests de significativit\u00e9 des param\u00e8tres et de blancheur du r\u00e9sidu sont valid\u00e9s au niveau 5%**. De plus, sur les graphiques ACF et PACF des r\u00e9sidus, il n'y a pas de pics fortement significatifs mais il existe tout de m\u00eame des variations.","2d582a4b":"Nous allons travailler sur la s\u00e9rie de 2012 \u00e0 2018 ***(split Train)*** afin de tenter de pr\u00e9voir l'ann\u00e9e 2019 ***(split Test)*** pour comparer la pr\u00e9vision au donn\u00e9es r\u00e9elles.\nNous utiliserons la fonction **ExponentialSmoothing de Statsmodels**","60359c75":"Les donn\u00e9es CVS calcul\u00e9es et projet\u00e9es nous permettent de voir \u00e9galement que nous n'avons pas d'outliers francs. Nous avons \u00e9galement remarqu\u00e9 2 pics positifs et 1 pic n\u00e9gatif par p\u00e9riode de 12 mois sur le graph de la saisonnalit\u00e9. \n\nToutes ces donn\u00e9es vons pouvoir donner des points de d\u00e9part par exemple pour notre futur mod\u00e8le SARIMA et ses param\u00e8tres p,d,q\n\n## <font color=\"blue\" id=\"prediction\">Pr\u00e9vision de la consommation<\/font>\n\n### <font color=\"orange\" id=\"holt-winters\">M\u00e9thode de Holt-Winters (lissage exponentiel)<\/font>\n\nLa m\u00e9thode de Holt-Winters est une **m\u00e9thode de lissage exponentiel, bas\u00e9 sur les instants pass\u00e9s**. Elle consiste \u00e0 supposer que  $X_t$ est approximable au voisinage de $T$ par $a_T + (t\u2212T)b_T + S_T$. En d\u00e9signant par $s$ la p\u00e9riode du cycle saisonnier de la s\u00e9rie temporelle.\n\nPour cette pr\u00e9vision, **nous allons utiliser la s\u00e9rie corrig\u00e9e des effets de temp\u00e9rature** :","a5b1d787":"Nous allons \u00e0 pr\u00e9sent projeter ces donn\u00e9es avec un lineplot Seaborn pour v\u00e9rifier l'**\u00e9volution de ces donn\u00e9es DJU comparativement aux donn\u00e9es de consommation d'\u00e9nergie** :","0a73abe8":"On remarque **sur ce second mod\u00e8le des indicateurs encore meilleurs que sur le mod\u00e8le 1**. Le test de blancheur pr\u00e9sente des p-values proches de 1 et les indicateurs de performance tels que l'AIC sont satisfaisant. La normalit\u00e9 des r\u00e9sidus est \u00e9galement confirm\u00e9e.     \nNous utiliserons donc le mod\u00e8le 2 pour nos analyses \u00e0 posteriori.\n\n#### <font color=\"brown\">Analyse \u00e0 posteriori<\/font>\nNous allons \u00e0 nouveau utiliser le split de notre s\u00e9rie temporelle pour obtenir un jeu de test et un jeu d'entrainement. Nous pourrons ensuite estimer notre pr\u00e9vision comparativement aux donn\u00e9es r\u00e9elles.","fed82dfc":"Nous allons regarder les m\u00e9triques des **10 mod\u00e8les ayant le meilleur AIC**","4330512f":"Ici, le  $R^2$  *(coefficient de d\u00e9termination - Carr\u00e9 du cofficient de corr\u00e9lation lin\u00e9aire)* est de l'ordre de 0.95, ce qui est relativement \u00e9lev\u00e9 et au vu de la repr\u00e9sentation graphique de notre droite de r\u00e9gression, cela nous indique que le mod\u00e8le est bon.      \nLa **variable \"dju\" est \u00e9galement statistiquement significative au niveau de test 5%**, sa P-value \u00e9tant de 0.","f9a77e77":"Si l'on regarde ces diff\u00e9rentes m\u00e9triques, **le mod\u00e8le SARIMA semble \u00eatre meilleur que le HOLT-WINTERS** pour cette s\u00e9rie temporelle.\n\n### <font color=\"orange\" id=\"final-prediction\">Pr\u00e9diction des consommations ajust\u00e9es pour les 12 prochains mois gr\u00e2ce aux 2 m\u00e9thodes<\/font>\n\nMantenant que nos mod\u00e8les Holt-Winters et SARIMA ont \u00e9t\u00e9 test\u00e9s, nous allons pouvoir effectuer cette pr\u00e9diction pour 2020.\n\n#### <font color=\"brown\">Pr\u00e9diction avec Holt-Winters<\/font>","b4201e5e":"Nous allons ensuite r\u00e9aliser un **groupage par la moyenne pour obtenir les donn\u00e9es liss\u00e9es France**. Nous pourrions \u00e9galement enrichir encore ce jeu de donn\u00e9es avec d'autres stations pour avoir un estimateur encore plus pr\u00e9cis ou traiter les algorithmes au niveau r\u00e9gion. Ici nous avons choisi de traiter les donn\u00e9es nationales :","743e3cfb":"Projetons \u00e0 pr\u00e9sent les **donn\u00e9es corrig\u00e9es des variations saisonni\u00e8res (CVS)** :","a1bfd61d":"On constate clairement une relation lin\u00e9aire des variables DJU et Conso.\nR\u00e9alisons \u00e0 pr\u00e9sent la **r\u00e9gression lin\u00e9aire simple gr\u00e2ce \u00e0 la librairie Statsmodels** :","72021f40":"La P-value est ici non significative au niveau de test 5%. **Les r\u00e9sidus suivent donc une loi normale** comme nous le constatons \u00e9galement sur le QQPlot.\n\n**Les tests sur notre mod\u00e8les de r\u00e9gression lin\u00e9aire \u00e9tant significatifs**, nous allons pouvoir utiliser les coeffiscients obtenus pour corriger notre consommation d'\u00e9nergie des effets de la temp\u00e9rature :\n\n$$Conso_{ajust\u00e9e} = Conso \u2212 (dju \u2217 b)$$","f4f8dd95":"## <font color=\"blue\" id=\"conclusion\">Conclusion<\/font>\n\nOn remarque que les 2 mod\u00e8les de traitement des s\u00e9ries temporelles utilis\u00e9es nous apportent des r\u00e9sultats relativement similaire, ce qui traduit \u00e0 nouveau la bonne performance de ces pr\u00e9dictions.\n\nEncore une fois, ces m\u00e9thodes ne sont plus forcement tr\u00e8s employ\u00e9es pour traiter les timeseries, des mod\u00e8les bien plus puissant et param\u00e9trables \u00e9tant disponibles. Cependant, je pense qu'il est important de pouvoir connaitre ces techniques qui sont encore enseig\u00e9es aujourd'hui et par forcement tr\u00e8s document\u00e9es pour l'apprentissage !\n\n> J'esp\u00e8re que ce Notebook vous a plu !","ff403dca":"Comme on peut le voir, il y a des **pics significatifs dans le graphique ACF au d\u00e9calage 6, 12, 18** ... *(composante saisonni\u00e8re semestrielle)*. Dans le graphique **PACF, les d\u00e9lais sont plus lents \u00e0 se d\u00e9sint\u00e9grer autour de 22, 32**, ainsi que des pics n\u00e9gatifs significatifs.\n\nCes caract\u00e9ristiques sugg\u00e8rent un point de d\u00e9part potentiel des param\u00e8tres de $SARIMA(1,1,0)(1,1,1,6)$ \n\n* $p$ et $P$ sont tous deux \u00e9gaux \u00e0 1 *(Pics positifs significatifs dans les graphiques ACF et PACF)*\n* $d$ et $D$ sont tous deux \u00e9gaux \u00e0 1 *(diff\u00e9renciation a effectuer sur les premiers param\u00e8tres et les saisonniers)*\n* $q$ = 0 et $Q$ = 1 *(pics n\u00e9gatifs significatifs sur le PACF mais pas forcement sur ACF)*\n* $s$ \u00e9gal \u00e0 6 *(composante saisonni\u00e8re semestrielle)*\n\nNous allons effectuer dans un premier temps une diff\u00e9renciation $(I\u2212B^6)$","a0dcd426":"Ce fichier .csv est donc import\u00e9 dans un DataFrame Pandas avec l'attribut **parse_date** sur la colonne 0 afin d'indiquer que notre jeu de donn\u00e9es est bien une Timeserie. Les dates sont ainsi pass\u00e9es en index.\n\nPour ce notebook, nous n'aurons besoin que de la consommation en \u00e9nergie en TWh :","e7758f50":"La pr\u00e9diction pour 2019 avec **la m\u00e9thode de Holt Winters est relativement fid\u00e8le aux donn\u00e9es r\u00e9elles**. La saisonnalit\u00e9 et la tendance sont repr\u00e9sentatives.\n\nA pr\u00e9sent, regardons **les m\u00e9triques principales du mod\u00e8le** qui seront des indicateurs de performance de notre mod\u00e8le et serviront de comparaison avec les autres m\u00e9thodes :\n\n**MAE (Mean Absolute Error) :**     \nMesure la d\u00e9viation absolue moyenne entre une estimation pr\u00e9vue et les donn\u00e9es r\u00e9elles.\n\n**MSE (Mean Squared Error)**     \nLa distance, entre la pr\u00e9vision et l\u2019observation, est ici \u00e9lev\u00e9e au carr\u00e9. La sensibilit\u00e9 \u00e0 l\u2019erreur est meilleure.\n\n**RMSE (Root Mean Squared Error)**     \nC'est la racine carr\u00e9e du MSE, c\u2019est une m\u00e9trique largement utilis\u00e9e.\n\n**MAPE (Mean Absolute Percentage Error)**     \nMoyenne des \u00e9carts en valeur absolue par rapport aux valeurs observ\u00e9es exprim\u00e9e **en pourcentage**","e6a59816":"Nous remarquons dans cette liste des r\u00e9gions repr\u00e9sent\u00e9es que la Corse est absente. L'aglom\u00e9rat France est bien pr\u00e9sent, nous allons donc constituer 2 DataFrames pour s\u00e9parer les donn\u00e9es nationales et r\u00e9gionales.","45c30598":"**Calculons les m\u00e9triques de ce mod\u00e8le SARIMA et comparons les avec les r\u00e9sultats du mod\u00e8le Holt-Winters** :","07a9df2f":"On peut voir sur ce graphique combin\u00e9 la d\u00e9composition de la tendance et de la saisonnalit\u00e9 ainsi que les r\u00e9sidus. Nous allons placer les valeurs de la d\u00e9composition dans un dataframe Pandas :"}}