{"cell_type":{"8b53fe4f":"code","327c50c5":"code","35d58d19":"code","73f896c6":"code","8134a924":"code","3b736f7e":"code","ae363b64":"code","37d33b40":"code","644b99f7":"code","b1d612e7":"code","7ad76581":"code","de4978c7":"code","9219b59c":"code","b7dcffd0":"code","ebd08b38":"code","61b53cd7":"code","1b69b622":"code","ff6a440a":"code","7f1bf899":"code","5e724016":"code","ce25e1fe":"code","30e7428d":"code","af060b93":"code","993c9993":"code","5c34457c":"code","1153cf59":"code","23b36e42":"code","7fa76cf8":"code","4bb3dddd":"markdown","8bccfb54":"markdown","e7850fc5":"markdown","c47c9f7f":"markdown","c7bb1391":"markdown","548254ae":"markdown","a1620736":"markdown","fc3308a0":"markdown","c9c53157":"markdown","144272aa":"markdown","2fbb985f":"markdown","a713c275":"markdown","63fe7677":"markdown","cd9fbef3":"markdown","f2c683e5":"markdown"},"source":{"8b53fe4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","327c50c5":"!pip3 install ktrain","35d58d19":"import numpy as np\nimport pandas as pd\nimport missingno as msno\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport plotly.graph_objects as go\n#import plotly.express as px\nimport matplotlib.pyplot as plt\nimport spacy\nimport tensorflow as tf\nfrom wordcloud import WordCloud, STOPWORDS \nimport ktrain\nfrom ktrain import text\n\nfrom collections import Counter\n%matplotlib inline","73f896c6":"df = pd.read_csv('..\/input\/trip-advisor-hotel-reviews\/tripadvisor_hotel_reviews.csv')\ndf.head()","8134a924":"df.shape","3b736f7e":"df.isnull().sum().any()","ae363b64":"pos = [4, 5]\nneg = [1, 2]\nneu = [3]\n\ndef sentiment(rating):\n  if rating in pos:\n    return 2\n  elif rating in neg:\n    return 0\n  else:\n    return 1  ","37d33b40":"df['Sentiment'] = df['Rating'].apply(sentiment)\ndf.head()","644b99f7":"fig = go.Figure([go.Bar(x=df.Sentiment.value_counts().index, y=df.Sentiment.value_counts().tolist())])\nfig.update_layout(\n    title=\"Values in each Sentiment\",\n    xaxis_title=\"Sentiment\",\n    yaxis_title=\"Values\")\nfig.show()","b1d612e7":"nlp = spacy.load('en')\n\ndef normalize(msg):\n    \n    doc = nlp(msg)\n    res = []\n    \n    for token in doc:\n        if(token.is_stop or token.is_punct or token.is_space):\n            pass\n        else:\n            res.append(token.lemma_.lower())\n            \n    return res","7ad76581":"df['Review'] = df['Review'].apply(normalize)\ndf.head()","de4978c7":"words_collection = Counter([item for sublist in df['Review'] for item in sublist])\nfreq_word_df = pd.DataFrame(words_collection.most_common(15))\nfreq_word_df.columns = ['frequently_used_word','count']\n\nfreq_word_df.style.background_gradient(cmap='PuBuGn', low=0, high=0, axis=0, subset=None)","9219b59c":"word_list = [item for sublist in df['Review'] for item in sublist]\nword_string = \" \".join(word_list)\n\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=60000, \n                      width=1000,\n                      height=650\n                         ).generate(word_string)","b7dcffd0":"plt.figure(figsize=(20,10))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","ebd08b38":"pos_df = df[df['Sentiment'] == 2]\nwords_collection = Counter([item for sublist in pos_df['Review'] for item in sublist])\nfreq_word_df = pd.DataFrame(words_collection.most_common(15))\nfreq_word_df.columns = ['frequently_used_word','count']\n\nfreq_word_df.style.background_gradient(cmap='PuBuGn', low=0, high=0, axis=0, subset=None)","61b53cd7":"word_list_pos = [item for sublist in pos_df['Review'] for item in sublist]\nword_string_pos = \" \".join(word_list)\n\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=40000, \n                      width=1000,\n                      height=650\n                         ).generate(word_string_pos)","1b69b622":"plt.figure(figsize=(20,10))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","ff6a440a":"neu_df = df[df['Sentiment'] == 1]\nwords_collection = Counter([item for sublist in neu_df['Review'] for item in sublist])\nfreq_word_df = pd.DataFrame(words_collection.most_common(15))\nfreq_word_df.columns = ['frequently_used_word','count']\n\nfreq_word_df.style.background_gradient(cmap='PuBuGn', low=0, high=0, axis=0, subset=None)","7f1bf899":"word_list_neu = [item for sublist in neu_df['Review'] for item in sublist]\nword_string_neu = \" \".join(word_list)\n\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=6000, \n                      width=1000,\n                      height=650\n                         ).generate(word_string_neu)","5e724016":"plt.figure(figsize=(20,10))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","ce25e1fe":"neg_df = df[df['Sentiment'] == 0]\nwords_collection = Counter([item for sublist in neg_df['Review'] for item in sublist])\nfreq_word_df = pd.DataFrame(words_collection.most_common(15))\nfreq_word_df.columns = ['frequently_used_word','count']\n\nfreq_word_df.style.background_gradient(cmap='PuBuGn', low=0, high=0, axis=0, subset=None)","30e7428d":"word_list_neg = [item for sublist in neg_df['Review'] for item in sublist]\nword_string_neg = \" \".join(word_list)\n\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=10000, \n                      width=1000,\n                      height=650\n                         ).generate(word_string_neg)","af060b93":"plt.figure(figsize=(20,10))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","993c9993":"df['Review'] = df['Review'].apply(lambda m: \" \".join(m))\ndf.head()","5c34457c":"(x_train, y_train), (x_test, y_test), preproc = text.texts_from_df(df, \n                                                                    'Review',\n                                                                    label_columns=['Sentiment'],\n                                                                    preprocess_mode='bert')","1153cf59":"model = text.text_classifier(name='bert',\n                             train_data=(x_train, y_train),\n                             preproc=preproc)","23b36e42":"learner = ktrain.get_learner(model=model,\n                             train_data=(x_train, y_train),\n                             val_data=(x_test, y_test),\n                             batch_size=6)","7fa76cf8":"learner.fit_onecycle(lr=2e-5,\n                     epochs=1)","4bb3dddd":"Here,\n\n2 - Positive (4, 5)<br>\n1 - Neutral (3)<br>\n0 - Negative (1, 2)\n\nReview distrubution seems more inclined in the positive than the negative. The reason I am not going to neutral is cause that is just one rating whereas positive and negative have two ratings.","8bccfb54":"# Sentiment Visualisation","e7850fc5":"# Packages Required","c47c9f7f":"## Overrall Wordcloud of Reviews ","c7bb1391":"# Final Notes\n\nSlightly lower accuracy when dealing with more clean data in BERT with 83.81% in Training and 86.1% in Validation. <br>\n\nThat's it for now in this notebook. <br><br> Upvotes will be greatly appreciated :)","548254ae":"Some obvious words like \"bad\", \"problem\" can be seen in this wordcloud. Maybe when we expand the vocabulary we can clean the text a little better.","a1620736":"Ah it seems \"problem\" sticks out a little here in the neutral reviews. Another word I managed to look into is \"expensive\". Maybe in future versions we can probably remove the obvious words like hotel and resort.  ","fc3308a0":"Positive words like \"good\", \"love\", \"great\" can be seen from this wordcloud","c9c53157":"As expected, it is a mixture of some good words and not much of the bad reviews. Let's break it down with each sentiment.","144272aa":"## Negative Sentiment Wordcloud","2fbb985f":"# Training BERT model","a713c275":"## Positive Sentiment Wordcloud","63fe7677":"## Wordclouds of each Sentiment\n\nLet us now look at the word distribution overrall and for each sentiment.","cd9fbef3":"The model I am going to be using is the BERT model from the ktrain module. Before we get into the model, we need to turn the lists into strings.","f2c683e5":"## Neutral Sentiment Wordcloud"}}