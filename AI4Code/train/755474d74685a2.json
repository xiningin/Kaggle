{"cell_type":{"c189691d":"code","5e35ada9":"code","aa3cb3e4":"code","05e950e9":"code","cdc192e0":"code","f1b3d296":"code","4ae3e4fd":"code","4ca5b93a":"markdown","b3d2568e":"markdown","c5da0c7b":"markdown","dc0818c3":"markdown","80dc9221":"markdown"},"source":{"c189691d":"!conda install '\/kaggle\/input\/pydicom-conda-helper\/libjpeg-turbo-2.1.0-h7f98852_0.tar.bz2' -c conda-forge -y\n!conda install '\/kaggle\/input\/pydicom-conda-helper\/libgcc-ng-9.3.0-h2828fa1_19.tar.bz2' -c conda-forge -y\n!conda install '\/kaggle\/input\/pydicom-conda-helper\/gdcm-2.8.9-py37h500ead1_1.tar.bz2' -c conda-forge -y\n!conda install '\/kaggle\/input\/pydicom-conda-helper\/conda-4.10.1-py37h89c1867_0.tar.bz2' -c conda-forge -y\n!conda install '\/kaggle\/input\/pydicom-conda-helper\/certifi-2020.12.5-py37h89c1867_1.tar.bz2' -c conda-forge -y\n!conda install '\/kaggle\/input\/pydicom-conda-helper\/openssl-1.1.1k-h7f98852_0.tar.bz2' -c conda-forge -y","5e35ada9":"import pandas as pd\nfrom pathlib import Path\nimport os\nfrom tqdm import tqdm\nimport numpy as np\n\nfrom PIL import Image\n\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\n\n# for .dcm file\nimport pydicom\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut","aa3cb3e4":"submission = pd.read_csv(\"..\/input\/siim-covid19-detection\/sample_submission.csv\")\nif submission.shape[0] == 2477:\n    fast_sub = True\nelse:\n    fast_sub = False","05e950e9":"# extract image pixel data from .dcm\ndef read_xray(path):\n    dicom = pydicom.read_file(path)\n    data = apply_voi_lut(dicom.pixel_array, dicom)\n    \n    if dicom.PhotometricInterpretation == \"MONOCHROME1\":\n        data = np.amax(data) - data\n    data = data - np.min(data)\n    data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n    \n    return data","cdc192e0":"# convert .dcm to .jpg\nos.makedirs('\/kaggle\/tmp\/siim\/images\/test', exist_ok=True)\nfor path in tqdm(Path(\"..\/input\/siim-covid19-detection\/test\").rglob('*.dcm')):\n    xray = read_xray(str(path))\n    im = Image.fromarray(xray)\n    im.save(os.path.join('\/kaggle\/tmp\/siim\/images\/test', path.name.replace('.dcm', '.jpg')))\n    if fast_sub: break","f1b3d296":"# Copy YOLOv5 directory to working directory\n!cp -r \/kaggle\/input\/yolov5\/yolov5 yolov5","4ae3e4fd":"os.chdir('\/kaggle\/working\/yolov5')\n!rm -rf runs\/detect\/\n!rm -rf runs\/test\/\n!python3 detect.py \\\n        --weights ..\/input\/myweight\/best.pt \\\n        --source \/kaggle\/tmp\/siim\/images\/test \\\n        --iou-thres 0.5 \\\n        --save-txt \\\n        --save-conf \\\n        --device 0\nos.chdir('\/kaggle\/working')","4ca5b93a":"## .dcm to .jpg","b3d2568e":"## Load submission file","c5da0c7b":"If submission file is public, just submit fast!","dc0818c3":"## Import","80dc9221":"## Inference YOLOv5"}}