{"cell_type":{"ded8a061":"code","7780136c":"code","707b6b70":"code","a5176125":"code","46248a58":"code","2b06e323":"code","c716710a":"code","c3ba9a30":"code","e2c75cbb":"code","0b9fdbde":"code","7d08f592":"code","831c23e4":"code","888faec6":"code","60f829e7":"code","18a31c78":"markdown","72116108":"markdown","65b81018":"markdown","715ee699":"markdown","d27efc2a":"markdown","e6eb6609":"markdown","66968f12":"markdown","c725c4af":"markdown","162d68d5":"markdown","d4c7fb45":"markdown","a3386ded":"markdown","06b5f1ca":"markdown"},"source":{"ded8a061":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\n\n%matplotlib inline\nplt.rcParams['figure.figsize'] = (9,6)\npd.pandas.set_option('display.max_columns',None)","7780136c":"df = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")\ndf.head()","707b6b70":"df.shape","a5176125":"sns.heatmap(df.isnull())\nplt.show()","46248a58":"df.describe()","2b06e323":"df[\"Class\"].value_counts()","c716710a":"legit = df[df[\"Class\"]== 0]\n\nfraud = df[df[\"Class\"]== 1]\nprint(legit.shape)\nprint(fraud.shape)","c3ba9a30":"legit = legit.sample(n = 492)\nprint(legit.shape)","e2c75cbb":"df_new = pd.concat([legit,fraud],axis =0)\ndf_new.head()","0b9fdbde":"print(df_new.shape)","7d08f592":"x = df_new.drop(columns = \"Class\", axis =1)\ny = df_new[\"Class\"]","831c23e4":"xtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size = 0.1,stratify= y, random_state = 0)","888faec6":"log = LogisticRegression(solver=\"liblinear\")\nrf = RandomForestClassifier()\ndt = DecisionTreeClassifier()\nsvm = SVC(kernel='rbf', C=100)","60f829e7":"def model_training(model,algorithm):\n    model.fit(xtrain,ytrain)\n    xtrain_predict = model.predict(xtrain)\n    training_data_accuracy = accuracy_score(xtrain_predict, ytrain)\n    \n    xtest_predict = model.predict(xtest)\n    test_data_accuracy = accuracy_score(xtest_predict, ytest)\n    \n    print(algorithm,'Accuracy on Training data : ', training_data_accuracy)\n    print(algorithm,'Accuracy on Test data : ', test_data_accuracy)\n    print()\n\n\nmodel_training(log,\"LogisticRegression\")\nmodel_training(rf,\"RandomForestClassifier\")\nmodel_training(dt,\"DecisionTreeClassifier\")\nmodel_training(svm,\"SupportVectorClassifier\")","18a31c78":"0 ===> Legit Transaction\n\n1 ===> Fraud Transaction\n\nThe Dataset is **highly imbalanced**,so we need to balance the dataset.","72116108":"# **Model Training**","65b81018":"# **Train Test Split**","715ee699":"#### **Getting the Dataset**","d27efc2a":"#### **Finding null values in a Dataset**","e6eb6609":"#### **Getting the shape of the Dataset**","66968f12":"# **Importing Libraries**","c725c4af":"# **Exploratory Data Analysis**","162d68d5":"### **Thank You**","d4c7fb45":"#### **Balancing the Dataset**","a3386ded":"#### **Concating the Dataset**\n","06b5f1ca":"#### There are **no null** values in the dataset"}}