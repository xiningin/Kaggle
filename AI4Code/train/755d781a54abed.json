{"cell_type":{"b906e6d3":"code","c3733c9b":"code","757072e3":"code","343f5d2f":"code","84a29db5":"code","f363c8e2":"code","69b2c99d":"code","756a6ba5":"code","c5039016":"code","fbc86818":"code","05dcb7a2":"code","6a95b47c":"code","a371ba8e":"code","ca914b96":"code","7be2dde4":"code","65538cc0":"markdown","3448832a":"markdown","1324d7cb":"markdown","539417bf":"markdown","02027fca":"markdown","3e4b0a22":"markdown","b9d8b761":"markdown","5c0f80b1":"markdown","06e510a2":"markdown","8c83250f":"markdown","46982dbf":"markdown","94b8ffc4":"markdown","05072e60":"markdown","a502caba":"markdown","31fe2f2b":"markdown","3ff5a845":"markdown"},"source":{"b906e6d3":"\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","c3733c9b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n","757072e3":"df=pd.read_csv('\/kaggle\/input\/hmeq-data\/hmeq.csv')","343f5d2f":"df.isna().sum()\ntotalmiss=pd.DataFrame(data=[df.columns,df.isna().sum()\/df.shape[0]])\ntotalmiss\n","84a29db5":"from sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.impute import SimpleImputer\noe=OrdinalEncoder()\nsi=SimpleImputer(strategy='most_frequent')\ndf=pd.DataFrame(si.fit_transform(df),columns=list(df))\ndf=pd.DataFrame(oe.fit_transform(df),columns=list(df))","f363c8e2":"df.info()","69b2c99d":"df.corr()['BAD'].sort_values(ascending=False)","756a6ba5":"x_train=df.drop(columns=['BAD'],axis=1)\ny_train=df['BAD']","c5039016":"q=pd.DataFrame(data=[y_train.value_counts(),y_train.value_counts()\/y_train.shape[0]])\nprint(q)","fbc86818":"from imblearn.over_sampling import SMOTE\nsmt=SMOTE()\nx_train,y_train=smt.fit_resample(x_train,y_train)","05dcb7a2":"q=pd.DataFrame(data=[y_train.value_counts(),y_train.value_counts()\/y_train.shape[0]])\nprint(q)","6a95b47c":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x_train,y_train,test_size=0.2)","a371ba8e":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,f1_score,roc_auc_score,confusion_matrix\nlr=LogisticRegression()\nlr.fit(x_train,y_train)\ny_pred=lr.predict(x_test)\n\nprint('Accuracy Score :',accuracy_score(y_test,y_pred))\nprint('F1_Score :',f1_score(y_test,y_pred))\nprint('ROC_AUC_Score',roc_auc_score(y_test,y_pred))\nprint(confusion_matrix(y_test,y_pred))\n","ca914b96":"import xgboost\nxgb=xgboost.XGBClassifier(max_depth=10,n_estimators=100)\nxgb.fit(x_train,y_train)\ny_pred=xgb.predict(x_test)\n\n\nprint('Accuracy Score :',accuracy_score(y_test,y_pred))\nprint('F1_Score :',f1_score(y_test,y_pred))\nprint('ROC_AUC_Score',roc_auc_score(y_test,y_pred))\nprint(confusion_matrix(y_test,y_pred))","7be2dde4":"import lightgbm\nlgbm=lightgbm.LGBMClassifier()\nlgbm.fit(x_train,y_train)\ny_pred=lgbm.predict(x_test)\n\nprint('Accuracy Score :',accuracy_score(y_test,y_pred))\nprint('F1_Score :',f1_score(y_test,y_pred))\nprint('ROC_AUC_Score',roc_auc_score(y_test,y_pred))\nprint(confusion_matrix(y_test,y_pred))","65538cc0":"The correlation did not entertain much though. There is still a way!","3448832a":"## LightGBM\n","1324d7cb":"Let's try LightGBM as a last method!","539417bf":"This gave a bit low score, but we can consider this amount of precision. \n","02027fca":"## As a sidenote:\nYou can always try the problem without SMOTE and see the changes. In my experiment, the accuracy figures before applying SMOTE to the data were around 0.92 (LightGBM) with a very disappointing f1_score of 0.80 \n","3e4b0a22":" # Preparation","b9d8b761":"## XGBoost","5c0f80b1":"## LogisticRegression","06e510a2":"0.74 is not a good accuracy score !!!","8c83250f":"The data seems balanced! Time for a little preprocessing!","46982dbf":"The problems of categorical data and nan values are solved by now.","94b8ffc4":"The data is enormously skewed. I will be using SMOTE to balance it.","05072e60":"# Analysis","a502caba":"Wow! The accuracy seemed to have skyrocketed! We can trust this figure, as the f1_score also seems pretty good!","31fe2f2b":"Let's check the ratio now.","3ff5a845":"The data seems okay with no much missing features. "}}