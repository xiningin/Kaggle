{"cell_type":{"dcd93d7a":"code","9860a209":"code","6c53950c":"code","3952dde1":"code","fd9c0e6f":"code","86cbd62b":"code","ddd9ffb6":"code","209ec017":"code","532f1f9f":"code","4b61c9c6":"code","de0b41d4":"code","ed0ddbb4":"markdown","079457e1":"markdown","03d3098b":"markdown","fd0d0c70":"markdown","04bfc796":"markdown","b692d00a":"markdown","5659b988":"markdown","a2e5d35c":"markdown","8f960770":"markdown","33c63d17":"markdown","3cd68747":"markdown","d8b50825":"markdown","5394bc06":"markdown","1242562b":"markdown","ac553314":"markdown","283e8026":"markdown","3f350bbc":"markdown","6dd36ad0":"markdown","ceb6353a":"markdown"},"source":{"dcd93d7a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport matplotlib.pyplot as plt\nimport plotly.express as px","9860a209":"data = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')","6c53950c":"data.head()","3952dde1":"data.info()","fd9c0e6f":"data.dropna(how=\"any\",inplace = True)\ndata.info()","86cbd62b":"data.Year = data.Year.astype(int)\ndata.head()","ddd9ffb6":"fig = px.scatter(data, x=\"Year\", y=\"NA_Sales\", \n                 color=\"NA_Sales\",\n                 size='NA_Sales', \n                 hover_data=['Rank','Name', 'Platform', 'Genre', 'Publisher'], \n                 title = \"Sales in North America\")\nfig.show()","209ec017":"import plotly.graph_objects as go\nfig1 = go.Figure()\nfig1.add_trace(go.Scatter(\n    x=data['Year'], y=np.sin(data['EU_Sales']),\n    name='sin',\n    mode='markers',\n    marker_color='rgba(152, 0, 0, .8)'\n))\nfig1.update_traces(mode='markers', marker_line_width=2, marker_size=10)\nfig1.update_layout(title='Sales in Europe',\n                  yaxis_zeroline=False, xaxis_zeroline=False)\n\n\nfig1.show()","532f1f9f":"fig2 = go.Figure(data=go.Scatter(x=data['Year'],\n                                y=data['JP_Sales'],\n                                mode='markers',\n                                marker_color=data['Rank'],\n                                text=data['Name'])) # hover text goes here\n\nfig2.update_layout(title='Sales in Japan')\nfig2.show()","4b61c9c6":"fig3 = go.Figure(data=go.Scatter(\n    y = data['Other_Sales'],\n    mode='markers',\n    marker=dict(\n        size=16,\n        color=data['Rank'], #set color equal to a variable\n        colorscale='Viridis', # one of plotly colorscales\n        showscale=True\n    )\n))\nfig3.update_layout(title='Sales in Other countries')\nfig3.show()","de0b41d4":"fig4 = go.Figure(data=go.Scatter(\n    x=data['Year'],\n    y=data['Global_Sales'],\n    mode='markers',\n    marker=dict(size=[40, 60, 80, 100],\n                color=[0, 1, 2, 3])\n))\nfig4.update_layout(title=\"Sales in GLobal\")\nfig4.show()","ed0ddbb4":"**Set size and color with column names**","079457e1":"Here is the link of understanding : - https:\/\/plotly.com\/python\/line-and-scatter\/#bubble-scatter-plots","03d3098b":"**Bubble Scatter Plots**","fd0d0c70":"Also you can learn this type of plotting by this link : - https:\/\/plotly.com\/python\/line-and-scatter\/#set-size-and-color-with-column-names","04bfc796":"**Data Labels on Hover**","b692d00a":"Here preprocessing is finished.","5659b988":"Here I have done some preprocessing on our dataset.","a2e5d35c":"Here is the link of understanding this type of plotting : -https:\/\/plotly.com\/python\/line-and-scatter\/#data-labels-on-hover","8f960770":"Till then  **Enjoy Machine Learning**","33c63d17":"You can learn this type of plotting by this link : - https:\/\/plotly.com\/python\/line-and-scatter\/#style-scatter-plots","3cd68747":"**Style Scatter Plots**","d8b50825":"Here is the link of this type of plotting : - https:\/\/plotly.com\/python\/line-and-scatter\/#scatter-with-a-color-dimension","5394bc06":"So, **which plot do you like?** Please give me response by comments so that I can do more visualizations ","1242562b":"# Video Games Analysis and Visualization","ac553314":"Note that color and size data are added to hover information. You can add other columns to hover data with the hover_data argument of px.scatter.","283e8026":"**Scatter with a Color Dimension**","3f350bbc":"In this notebook, first I analyze the data and then visualize it.","6dd36ad0":"**Importing Libraries**","ceb6353a":"Let's start making some differnt different visualizations on the given dataset."}}