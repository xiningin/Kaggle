{"cell_type":{"6169f050":"code","2170784d":"code","d7b8177e":"code","560338ea":"code","ba2aebfb":"code","d19270e5":"code","2242bd30":"code","63f094cf":"markdown"},"source":{"6169f050":"# Import all the necessary modules\nimport pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing, model_selection, tree, metrics, ensemble\n","2170784d":"# Read training data and prepare predictor and target variables\ndf_train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n\n# Encode gender\nle = preprocessing.LabelEncoder()\ndf_train['Sex_Coded'] = le.fit_transform(df_train['Sex'])\n\n# Encode title (Mr, Miss etc.)\ndf_train['title'] = \"Others\"\ndf_train.loc[df_train.Name.str.rfind(\"Mr.\")>0,\"title\"] = \"Mister\"\ndf_train.loc[df_train.Name.str.rfind(\"Mrs.\")>0,\"title\"] = \"Missus\"\ndf_train.loc[df_train.Name.str.rfind(\"Miss.\")>0,\"title\"] = \"Miss\"\ndf_train.loc[df_train.Name.str.rfind(\"Master\")>0,\"title\"] = \"Master\"\ndf_train['Title_Coded'] = le.fit_transform(df_train['title'])\n\n# Fill out missing age values and encode them\ndf_train.loc[df_train.loc[df_train.Sex_Coded==0].loc[df_train.Age.isna()].index,'Age']=27.92\ndf_train.loc[df_train.loc[df_train.Sex_Coded==1].loc[df_train.Age.isna()].index,'Age']=30.73\nage_bins = pd.cut(df_train.Age,bins=[0,20,50,100],include_lowest=True,labels=[1,-1,2])\ndf_train['Age_Coded'] = age_bins[0]\n\n# Code Family data (Parent\/Child + Sibling\/Spouse) i.e. Family is more likely to survive cause of prefrence\ndf_train['Family'] = df_train.Parch + df_train.SibSp\ndf_train['Family_Coded'] = pd.cut(df_train.Family,bins=[0,1,4,11],labels=[-1,1,2],include_lowest=True)\n\n# Code Embarkation points \ndf_train['Embarked'] = df_train.Embarked.fillna(-1,inplace=True)\ndf_train['Embarked_Coded'] = le.fit_transform(df_train.Embarked)\n\nX_train = df_train[['Sex_Coded','Title_Coded','Age','Pclass','Family_Coded','Embarked_Coded']]\ny_train = df_train['Survived']\n","d7b8177e":"clf = tree.DecisionTreeClassifier()\nclf.fit(X_train,y_train)\nprint(clf.score(X_train,y_train))\nprint(metrics.confusion_matrix(y_train,clf.predict(X_train)))","560338ea":"# Read test data and preprocess\ndf_test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n\ndf_test['Sex_Coded'] = le.fit_transform(df_test['Sex'])\n\ndf_test['title'] = \"Others\"\ndf_test.loc[df_test.Name.str.rfind(\"Mr.\")>0,\"title\"] = \"Mister\"\ndf_test.loc[df_test.Name.str.rfind(\"Mrs.\")>0,\"title\"] = \"Missus\"\ndf_test.loc[df_test.Name.str.rfind(\"Miss.\")>0,\"title\"] = \"Miss\"\ndf_test.loc[df_test.Name.str.rfind(\"Master\")>0,\"title\"] = \"Master\"\ndf_test['Title_Coded'] = le.fit_transform(df_test['title'])\n\ndf_test.loc[df_test.loc[df_test.Sex_Coded==0].loc[df_test.Age.isna()].index,'Age']=30.27\ndf_test.loc[df_test.loc[df_test.Sex_Coded==1].loc[df_test.Age.isna()].index,'Age']=30.27\n\nage_bins = pd.cut(df_test.Age,bins=[0,20,50,100],include_lowest=True).factorize()\ndf_test['Age_Coded'] = age_bins[0]\n\n# Code Family data (Parent\/Child + Sibling\/Spouse) i.e. Family is more likely to survive cause of prefrence\ndf_test['Family'] = df_test.Parch + df_test.SibSp\ndf_test['Family_Coded'] = pd.cut(df_test.Family,bins=[0,1,4,11],labels=[-1,1,2],include_lowest=True)\n\n# Code Embarkation points \ndf_test['Embarked'] = df_test.Embarked.fillna(-1,inplace=True)\ndf_test['Embarked_Coded'] = le.fit_transform(df_test.Embarked)\n\nX_test = df_test[['Sex_Coded','Title_Coded','Age','Pclass','Family_Coded','Embarked_Coded']]\n\n","ba2aebfb":"y_pred = clf.predict(X_test)\npd.DataFrame(data={'PassengerId':df_test['PassengerId'],'Survived':y_pred}).to_csv(\"my_submission_7.2.csv\",index=False)","d19270e5":"clf = ensemble.RandomForestClassifier()\nclf.fit(X_train,y_train)\nprint(clf.score(X_train,y_train))\nprint(metrics.confusion_matrix(y_train,clf.predict(X_train)))","2242bd30":"y_pred = clf.predict(X_test)\npd.DataFrame(data={'PassengerId':df_test['PassengerId'],'Survived':y_pred}).to_csv(\"\/kaggle\/working\/my_submission_7.3.csv\",index=False)","63f094cf":"This exercise will "}}