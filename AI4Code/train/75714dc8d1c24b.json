{"cell_type":{"aeae7de3":"code","83994bae":"code","2b6156c1":"code","beeb8d6c":"code","a0630022":"code","a31b7d0c":"code","dc8a7103":"code","4f17642e":"code","1bbc6f86":"markdown","3ec595fd":"markdown","6135f04d":"markdown","dae43dcf":"markdown"},"source":{"aeae7de3":"import warnings\nwarnings.simplefilter('ignore', FutureWarning)\n\nimport numpy as np\nimport pandas as pd\n\nfrom tqdm.notebook import tqdm\n\n# + cluster\nfrom sklearn.cluster import KMeans\n\n# plotly\nimport plotly.express as px","83994bae":"r_train = pd.read_csv('..\/input\/lish-moa\/train_features.csv')\nr_test = pd.read_csv('..\/input\/lish-moa\/test_features.csv')\nr_train_target = pd.read_csv('..\/input\/lish-moa\/train_targets_scored.csv')\nr_sub = pd.read_csv('..\/input\/lish-moa\/sample_submission.csv')","2b6156c1":"features_g = [name for name in r_train.columns if name.startswith('g-')]\n\ng_SSE = []\nfor i in tqdm(range(5,250,5)):\n    k_train = r_train[features_g].copy()\n    k_test = r_test[features_g].copy()\n    k_data = pd.concat([k_train, k_test], axis = 0)\n    kmeans = KMeans(n_clusters = i, init='k-means++', n_init=10, max_iter=300, tol=1e-04,random_state = 77)\n    kmeans.fit(k_data)\n    g_SSE.append(kmeans.inertia_)\n    ","beeb8d6c":"df_g = pd.DataFrame({\"gene_SSE\":g_SSE,\n                    'num':list(range(5,250,5))})\ndf_g","a0630022":"fig = px.line(df_g, x = 'num', y = \"gene_SSE\",\n             title = \"gene's SSE of some clusters\")\nfig.show()","a31b7d0c":"features_c = [name for name in r_train.columns if name.startswith('c-')]\n\nc_SSE = []\nfor i in tqdm(range(2,100,2)):\n    k_train = r_train[features_c].copy()\n    k_test = r_test[features_c].copy()\n    k_data = pd.concat([k_train, k_test], axis = 0)\n    kmeans = KMeans(n_clusters = i, init='k-means++', n_init=10, max_iter=300, tol=1e-04,random_state = 77)\n    kmeans.fit(k_data)\n    c_SSE.append(kmeans.inertia_)","dc8a7103":"df_c = pd.DataFrame({\"cell_SSE\":c_SSE,\n                    'num':list(range(2,100,2))})\ndf_c","4f17642e":"fig = px.line(df_c, x = 'num', y = \"cell_SSE\",\n             title = \"cell's SSE of some clusters\")\nfig.show()","1bbc6f86":"## g-","3ec595fd":"## c-","6135f04d":"# Elbow method\n* ref : https:\/\/en.wikipedia.org\/wiki\/Elbow_method_(clustering)\n\n* Search the best parameter in k-means' number of clusters\n* gene and cell","dae43dcf":"## search kmeans' best number of clusters"}}