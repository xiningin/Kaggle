{"cell_type":{"b256eec8":"code","814bfcbe":"code","cfbb6c35":"code","eb2be090":"code","8b014240":"code","421b11a2":"code","d85fa75c":"code","74b05f98":"code","65a6c613":"code","61ad6335":"code","d061a8d0":"code","480b46a8":"code","b7907811":"code","c4fc4fe4":"code","97539f07":"code","baf632cb":"code","ff454e64":"code","f917320f":"code","9a40e07c":"code","a17840be":"markdown","21764109":"markdown"},"source":{"b256eec8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    #for filename in filenames:\n        #print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","814bfcbe":"districts = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")","cfbb6c35":"districts.head()","eb2be090":"districts.shape","8b014240":"districts.info()","421b11a2":"egd1 = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/1000.csv')","d85fa75c":"egd1.head()","74b05f98":"egd1.iloc[egd1['pct_access'].idxmax()]","65a6c613":"sns.displot(data=egd1,x='engagement_index',kind='kde')","61ad6335":"egd1.shape","d061a8d0":"egd1.nunique()","480b46a8":"len(os.listdir('..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data'))","b7907811":"import glob\n\nfiles = glob.glob('..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/*.csv')\nall_districts = None\n\nfor i, f in enumerate (files):\n    if i == 0:\n        all_districts = pd.read_csv(f)\n        all_districts['district_id'] = os.path.basename(f)[:4]\n    else:\n        tmp = pd.read_csv(f)\n        tmp['district_id'] = os.path.basename(f)[:4]\n        all_districts = all_districts.append(tmp)\n","c4fc4fe4":"all_districts.shape","97539f07":"all_districts.head()","baf632cb":"all_districts.isna().sum()","ff454e64":"all_districts.dropna(how='any',inplace=True)","f917320f":"all_districts.shape","9a40e07c":"all_districts.duplicated().sum()","a17840be":"Observation : Just saw the data. The districts data and one file from the engegement data has been seen.The data seems to be highly polluted. i:e: it has so much null values and outliers. We can start with merging all the engagement data to a single dataframe.","21764109":"**Observation:** We have merged all the districts engagement data.Secondly,we have created a column for district ID in order to groupby the column and get more insights. We have also removed null values and we finally have (16945301, 5) data. Anyway we aren't going to take the entire dataset. We will begin our analysis just with a sample of data. From the above command it is evident that there is no duplicate values."}}