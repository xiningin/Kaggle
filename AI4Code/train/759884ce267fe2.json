{"cell_type":{"d6739e06":"code","5316b0af":"code","a9857ccf":"code","fb34a362":"code","6f1a0730":"code","74bcd075":"code","71920050":"code","f62add97":"code","50a6918f":"code","8be8f394":"code","802aa929":"code","c8d81fb1":"code","9d226a1e":"code","85631642":"code","c2edeced":"code","1f3d8b94":"code","90dcc93c":"code","3ba28e4f":"code","a8afd772":"code","6c155747":"code","78faa5d7":"code","49fd541a":"code","b5c610a2":"code","be60de40":"code","8cb441bd":"markdown"},"source":{"d6739e06":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport os","5316b0af":"df = pd.read_csv('..\/input\/data.csv')\ndf.head()","a9857ccf":"df.columns","fb34a362":"df.describe()","6f1a0730":"df.dtypes","74bcd075":"data = df.drop(['Unnamed: 32', 'id'], axis=1)","71920050":"data.head()","f62add97":"data.diagnosis.value_counts().plot(kind = 'pie', figsize=[10,10])","50a6918f":"fig, axes = plt.subplots(15, ncols=2)\nj = 15\nfeatures = X.columns\nfor i in range(15):\n    X[features[i]].plot(ax=axes[i,0] ,kind = 'hist', figsize = (18,30))\n    X[features[j]].plot(ax=axes[i,1], kind = 'hist')\n    j = j+1","8be8f394":"from scipy import stats\nX_zscore = stats.zscore(X)\nzscore_df = pd.DataFrame(X_zscore, columns=X.columns)\nzscore_df.head()","802aa929":"X = data.drop('diagnosis', axis=1)\ny = data.diagnosis","c8d81fb1":"from sklearn.preprocessing import StandardScaler","9d226a1e":"scaler = StandardScaler()\nscaled_df = scaler.fit_transform(X)\nscaled_df = pd.DataFrame(scaled_df, columns=X.columns)","85631642":"scaled_df.head()","c2edeced":"scaled_df.shape","1f3d8b94":"fig, axes = plt.subplots(15, ncols=2)\nj = 15\nfeatures = X.columns\nfor i in range(15):\n    scaled_df[features[i]].plot(ax=axes[i,0] ,kind = 'hist', figsize = (18,30))\n    scaled_df[features[j]].plot(ax=axes[i,1], kind = 'hist')\n    j = j+1","90dcc93c":"from category_encoders import OneHotEncoder\nfrom category_encoders.binary import BinaryEncoder\none_hot = OneHotEncoder()\ny_enoded = one_hot.fit_transform(list(y))\ny_enoded.drop('0_-1', axis=1, inplace= True)","3ba28e4f":"y_enoded.head()","a8afd772":"from sklearn.model_selection import train_test_split\nX_train, X_test,  y_train, y_test = train_test_split(scaled_df, y_enoded, test_size = .20)","6c155747":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\nclf_tree = DecisionTreeClassifier()\nhelp(clf_tree)","78faa5d7":"print(X_train.shape)\nprint(y_train.shape)\n\nprint(X_test.shape)\nprint(y_test.shape)","49fd541a":"clf_tree.fit(X_train, y_train)\ny_train_pred = clf_tree.predict(X_train)\ny_test_pred = clf_tree.predict(X_test)\nprint(\"Train accuracy: \", accuracy_score(y_train, y_train_pred))\nprint(\"Test accuracy: \", accuracy_score(y_test, y_test_pred))","b5c610a2":"y_pred = d_tree.predict(scaled_df)","be60de40":"accuracy_score(y_enoded, y_pred)","8cb441bd":"## Feature scaling is need .. Feature no in proper scale:"}}