{"cell_type":{"8205308c":"code","1e719315":"code","950e31d8":"code","dd0bac87":"code","cdf22459":"code","cdd2ad2c":"code","8efd9d53":"code","bdec8694":"code","4f3dc803":"code","95756ea7":"code","2f1fecb0":"code","f9efb6b0":"code","2707f8cc":"markdown"},"source":{"8205308c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1e719315":"# Importing important libraries\nimport numpy as np\nimport pandas as np \nimport matplotlib.pyplot as plt","950e31d8":"df = pd.read_csv(\"\/kaggle\/input\/50-startups\/50_Startups.csv\")\ndf.head()","dd0bac87":"# checking for null values \nimport seaborn as sns\n\nsns.heatmap(df.isnull(),yticklabels = False, cbar = False, cmap = 'viridis')","cdf22459":"# splitting the data into dependent and independent \n\nX = df.iloc[:, :-1].values\ny = df.iloc[:, -1].values","cdd2ad2c":"# looking the X data\n\nprint(X)","8efd9d53":"# in the above data column 3 have categorical data so we have to encode \n# Encoding categorical data\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder","bdec8694":"ct = ColumnTransformer(transformers=[(\"encoder\", OneHotEncoder(), [3])], remainder=\"passthrough\")","4f3dc803":"X = ct.fit_transform(X)\nX","95756ea7":"# Splitting the dataset into the Training set and Test set\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","2f1fecb0":"# Training the Multiple Linear Regression model on the Training set\n\nfrom sklearn.linear_model import LinearRegression\n\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)","f9efb6b0":"# Predicting the Test set results\n\ny_pred = regressor.predict(X_test)\ny_pred","2707f8cc":"the map is flat that is there is no null value in data "}}