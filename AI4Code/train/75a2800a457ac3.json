{"cell_type":{"1afa5aaa":"code","3a6e69a8":"code","4b6814dc":"code","af6c054a":"code","c98d5d37":"code","c6224118":"code","a42c8b56":"code","983a5846":"code","3b84dd29":"code","b63f4ed2":"code","021ab65b":"code","7191cd4d":"code","a7504f0c":"code","64ed4466":"markdown","278aec24":"markdown","789b31f8":"markdown","17a09e57":"markdown","623fb2aa":"markdown","621ab67d":"markdown","8bca0705":"markdown","ac9be8b2":"markdown","98fc536c":"markdown","749b64da":"markdown","48a551b3":"markdown"},"source":{"1afa5aaa":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt","3a6e69a8":"house_price = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\nstock = pd.read_csv('..\/input\/nyse\/prices.csv')","4b6814dc":"stock['date'] = pd.to_datetime(stock['date'], format='%Y-%m-%d', errors='raise')","af6c054a":"# FAANG\nfacebook = stock[stock['symbol']=='FB']\napple = stock[stock['symbol']=='AAPL']\namazon = stock[stock['symbol']=='AMZN']\nnetflix = stock[stock['symbol']=='NFLX']\ngoogle = stock[stock['symbol']=='GOOGL']\ngoogle.head()","c98d5d37":"fig, ax = plt.subplots(1, 1, figsize=(20, 7), dpi=300)\n\ngoogle_color='#636EFA'\nax.plot(google['date'],google['close'])\n\nplt.show()","c6224118":"fig, ax = plt.subplots(1, 1, figsize=(10, 6), dpi=150)\n\n\nax.plot(facebook['date'],facebook['close'],label='facebook')\nax.plot(apple['date'],apple['close'],label='apple')\nax.plot(amazon['date'],amazon['close'],label='amazon')\nax.plot(netflix['date'],netflix['close'],label='netflix')\nax.plot(google['date'],google['close'],label='google')\n\n\nax.set_title('FAANG Stock Price', loc='left', fontsize=12)\nax.legend()\nplt.show()","a42c8b56":"fig, ax = plt.subplots(1, 1, figsize=(10, 6), dpi=150)\n\n\nax.plot(facebook['date'],facebook['close'],label='facebook')\nax.plot(apple['date'],apple['close'],label='apple', linestyle='-.')\n\n\nax.set_title('FAANG Stock Price', loc='left', fontsize=12)\nax.legend()\nplt.show()","983a5846":"fig, ax = plt.subplots(1, 1, figsize=(10, 6), dpi=150)\n\n\nax.plot(facebook['date'].iloc[-30:],facebook['close'].iloc[-30:],label='facebook', marker='o')\nax.plot(apple['date'].iloc[-30:],apple['close'].iloc[-30:],label='apple', marker='*')\n\n\nax.set_title('Facebook & Apple (last 30 days)', loc='left', fontsize=12)\n\nax.legend()\nplt.show()","3b84dd29":"from scipy.interpolate import make_interp_spline, interp1d\nimport matplotlib.dates as dates\n\nfig, ax = plt.subplots(1, 2, figsize=(20, 7), dpi=300)\n\ndate_np = google['date']\nvalue_np = google['close']\n\ndate_num = dates.date2num(date_np)\n# smooth\ndate_num_smooth = np.linspace(date_num.min(), date_num.max(), 50) \nspl = make_interp_spline(date_num, value_np, k=3)\nvalue_np_smooth = spl(date_num_smooth)\n# print\nax[0].plot(date_np, value_np)\nax[1].plot(dates.num2date(date_num_smooth), value_np_smooth)\n\nplt.show()","b63f4ed2":"import matplotlib.dates as mdates\nimport matplotlib.cbook as cbook\n\nfig, ax = plt.subplots(1, 2, figsize=(20, 7), dpi=300)\n\ngoogle_color='#636EFA'\namazon_color='#EF553B'\n\n# Ax[0]\n\n\nax[0].plot(google['date'],google['close'],\n        color=google_color, label='Google')\n\nax[0].plot(amazon['date'], amazon['close'],\n        color=amazon_color, label='Amazon'\n       )\n\nax[0].set_ylim(0, 1250)\n\n\nax[0].tick_params(axis='both', which='major', labelsize=8)\nax[0].set_title('Google & Amazon Stock Prices', loc='left', y=1.03, fontweight='medium')\n\n\nax[0].legend()\nax[0].grid(linewidth=0.3)\n\n\n\n# Ax[1]\n\nax[1].plot(google['date'],google['close'],\n        linewidth=0.7,\n        color=google_color)\n\nax[1].plot(amazon['date'], amazon['close'],\n        linewidth=0.7,\n        color=amazon_color\n       )\n\n\n\nax[1].text(x=google['date'].iloc[-1]+ pd.DateOffset(30), y=google['close'].iloc[-1]+20, s='Google', \n        va='center', ha='left', \n        bbox=dict(boxstyle='round,pad=0.3', fc=google_color, ec='none', alpha=0.3), \n        color=google_color)\n\nax[1].text(x=amazon['date'].iloc[-1]+ pd.DateOffset(30), y=amazon['close'].iloc[-1]-20, s='Amazone', \n        va='center', ha='left', \n        bbox=dict(boxstyle='round,pad=0.3', fc=amazon_color, ec='none', alpha=0.3), \n        color=amazon_color)\n\n\nax[1].spines['top'].set_visible(False)\nax[1].spines['right'].set_visible(False)\n\n\nax[1].spines['bottom'].set_linewidth(0.3)\nax[1].spines['left'].set_linewidth(0.3)\n\nax[1].tick_params(axis='both', which='major', labelsize=8)\nax[1].set_title('Google & Amazon Stock Prices', loc='left', y=1.03, fontweight='medium')\n\nplt.show()","021ab65b":"x = [2, 3, 5, 7, 9]\ny = [2, 3, 4, 7, 10]\n\nfig, ax = plt.subplots(1, 3, figsize=(13, 4), dpi=150)\nax[0].plot([str(i) for i in x], y)\nax[1].plot(x, y)\nax[2].plot(x, y, marker='o')\n\nplt.show()","7191cd4d":"\nfig, ax1 = plt.subplots(figsize=(12, 7), dpi=150)\n\ncolor = 'tab:blue'\nax1.set_xlabel('date')\nax1.set_ylabel('close price', color=color)  \nax1.plot(google['date'], google['close'], color=color)\nax1.tick_params(axis='y', labelcolor=color)\n\nax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\n\ncolor = 'tab:orange'\nax2.set_ylabel('volume', color=color)  \nax2.plot(google['date'], google['volume'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\nax1.set_title('Google Close Price & Volume', loc='left', fontsize=15)\nplt.show()","a7504f0c":"\nfig, ax = plt.subplots(2, 1, figsize=(12, 11), dpi=150, sharex=True)\n\ncolor = 'tab:blue'\n\nax[0].set_ylabel('close price')  \nax[0].plot(google['date'], google['close'], color=color)\n\ncolor = 'tab:orange'\nax[1].set_xlabel('date')\nax[1].set_ylabel('volume')  \nax[1].plot(google['date'], google['volume'], color=color)\n\n\nax[0].set_title('Google Close Price', loc='right', fontsize=15)\nax[1].set_title('Google Volume', loc='right', fontsize=15)\n\n\nax[0].spines['top'].set_visible(False)\nax[0].spines['right'].set_visible(False)\n\nax[1].spines['top'].set_visible(False)\nax[1].spines['right'].set_visible(False)\n\n\nplt.show()","64ed4466":"## Smoothing\n\nData can be spaced so tightly that it is difficult to spot periodicities or patterns.\n\nIn this case, you can use smoothing to see the overall flow.","278aec24":"## Dual Axis\n\nYou can plot 2 pieces of information with different scales at once using the dual axis.\n\nHowever, it is recommended to plot it separately because it can often lead to errors in interpretation of the causal relationship and, rather, it is less readable.","789b31f8":"## Import Dataset & Preprocessing","17a09e57":"### Line Type","623fb2aa":"## [All About Vis] How to Make the Right Lineplot?\n\nVisualization is a beautiful and insightful discipline and field.\n\nSometimes information is important, and sometimes the aesthetic is important.\n\nHowever, I wrote this notebook because it would be nice to think about the more informational aspect from the standpoint of data analysis.\n\n### Related Notebook\n\n- [[All About Vis] How to Make the Right Barplot?](https:\/\/www.kaggle.com\/subinium\/all-about-vis-how-to-make-the-right-barplot)","621ab67d":"## Simple Chart is Better\n\nWhen it comes to EDA, it's important to see specific information, so Grid can be helpful, but Lineplot is usually a graphical representation to see trends, so simple things are often better.","8bca0705":"### Marker\n\n","ac9be8b2":"## Basic Lineplot","98fc536c":"There are three main ways to change the line plot.\n\n1. Color\n2. Line Type\n3. Marker","749b64da":"### Color","48a551b3":"## Interval\n\nMisunderstanding may occur depending on the X-axis section.\n\n1. When the X-axis section is not regular but expressed regularly -> There is a possibility that the slope information could be misinterpreted\n2. If the X-axis section is not regular and reflects it -> You may be mistaken for missing data points\n\nThe x-axis interval reflects the data as much as possible, and it is recommended to mark the point with data through a marker."}}