{"cell_type":{"6db66de6":"code","4b89a4c6":"code","09c2da29":"code","d959ee92":"code","99bc8252":"code","69b7d229":"code","7da50184":"code","bd71689b":"code","b037a782":"code","7b4dedd8":"code","e5d01362":"code","b666bd76":"code","42c3d565":"code","69000719":"code","f2a4cada":"code","2d95c9da":"code","63cf21b5":"code","308d8a53":"code","aab195b3":"code","7f43aa73":"code","c8fab85a":"code","1df4665b":"code","5d28f88b":"code","f7851134":"code","7ade662b":"code","00755693":"code","bfd186b2":"code","909dab1a":"markdown","d86bdbb1":"markdown","8bf8e493":"markdown","47dcc4f9":"markdown","959bf44d":"markdown","a3017ede":"markdown","d31ead27":"markdown","f5fb28bf":"markdown","8df85183":"markdown"},"source":{"6db66de6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","4b89a4c6":"train = pd.read_csv('\/kaggle\/input\/titanic-machine-learning-from-disaster\/train.csv')","09c2da29":"train.head()","d959ee92":"## Use seaborn to create a simple heatmap to see where we are missing data.\nsns.heatmap(train.isnull(), yticklabels=False, cbar=False, cmap='viridis')","99bc8252":"sns.set_style('whitegrid')\nsns.countplot(x='Survived', data=train, palette='RdBu')","69b7d229":"sns.set_style('whitegrid')\nsns.countplot(x='Survived', hue='Sex', data=train, palette='RdBu')","7da50184":"sns.set_style('whitegrid')\nsns.countplot(x='Survived', hue='Pclass', data=train, palette='rainbow')","bd71689b":"sns.distplot(train['Age'].dropna(), kde=False, color='darkred', bins=30)","b037a782":"train['Age'].hist(bins=30, color='darkred', alpha=0.7)","7b4dedd8":"sns.countplot(x='SibSp', data=train)","e5d01362":"train['Fare'].hist(color='green', bins=40, figsize=(8,4))","b666bd76":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass', y='Age', data=train, palette='winter')","42c3d565":"def impute_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","69000719":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","f2a4cada":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","2d95c9da":"## Drop the Cabin column and the row in Embarked that is NaN.\ntrain.drop('Cabin', axis=1, inplace=True)","63cf21b5":"train.head()","308d8a53":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","aab195b3":"train.info()","7f43aa73":"sex = pd.get_dummies(train['Sex'], drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","c8fab85a":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","1df4665b":"train = pd.concat([train,sex,embark],axis=1)","5d28f88b":"train.head()","f7851134":"## Train Test Split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1),train['Survived'], test_size=0.25, random_state=101)","7ade662b":"## Training and Predicting\nfrom sklearn.linear_model import LogisticRegression\nlm = LogisticRegression()\nlm.fit(X_train, y_train)","00755693":"predictions = lm.predict(X_test)","bfd186b2":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,predictions))","909dab1a":"## Build a Logistic Regression Model","d86bdbb1":"Roughly 20 percent of the Age data is missing. The proportion of Age missing is likely small enough for reasonable replacement with some form of imputation. Looking at the Cabin column, it looks like we are just missing too much of that data to do something useful with at a basic level. We'll probably drop this later, or change it to another feature like \"Cabin Known: 1 or 0\"","8bf8e493":"## Evaluation","47dcc4f9":"## Import Libraries and Data","959bf44d":"## Data Cleaning\nI want to fill in missing age data instead of just dropping the missing age data rows. One way to do this is by filling in the mean age of all the passengers (imputation). However we can be smarter about this and check the average age by passenger class.","a3017ede":"## Convert Categorical Features\nI will convert categorical features to dummy variables using pandas.\nOtherwise machine learning algorithims won't be able to directly take in those features as inputs.","d31ead27":"# Logistic Regression Project\n## Tracy(11\/14\/2019)_Titanic\n\nThis is my project about Logistic Regression. I will predict a classification- survival or deceased.","f5fb28bf":"We can see the wealthier passengers in the higher classes tend to be older, which makes sense. We'll use these average age values to impute based on Pclass for Age.","8df85183":"## Exploratory Data Analysis"}}