{"cell_type":{"db2d1d68":"code","09a20900":"code","01c3d4a7":"code","1a25b246":"code","bae0138a":"code","8118086e":"code","834d9212":"code","14fb22ee":"code","b247218b":"code","287104eb":"code","7e110cbd":"code","671db1e5":"code","3566d298":"code","20af0133":"code","83c67c0d":"code","6b3312e0":"code","c24d260a":"code","ebe6ce04":"code","a2e980c6":"code","32faee40":"code","2ad88b75":"code","2b26d808":"code","dc6e95c7":"code","6e09cb51":"code","b54f729c":"code","118e9767":"code","b7c4372a":"code","1a2aae6f":"code","6302d320":"code","46c56a1d":"code","46342341":"code","8d3f0899":"code","d798b1dd":"code","242a489d":"code","52a530e2":"code","efc6ffb7":"code","42ed4218":"code","7a67143c":"code","4be3973b":"code","f66bc8fc":"code","fa3e5303":"code","63368dd1":"code","0d68d997":"code","1a055f7d":"code","5efa57db":"code","eb6f03ef":"code","75f825a6":"code","59227ced":"code","b9ec2b7b":"code","92b79b4a":"code","3f79063c":"code","6f4aae13":"code","4274b189":"code","2df4b55e":"code","00fececf":"code","5b356e1f":"code","f13d88b7":"code","bae417f1":"code","accf16ea":"code","4be9f19d":"code","c9d960e9":"code","f235c118":"code","c67a6f26":"code","a01ac866":"code","495798bb":"code","f8128b05":"code","da165384":"code","7576a5b8":"code","20bb12c9":"code","2c0174c5":"code","84942446":"code","52dc78db":"code","d19f61a4":"code","dd09e768":"code","a41a4139":"code","763cea26":"code","3a245be2":"code","017da95c":"code","4a79ecee":"code","8395d08d":"code","838bb002":"code","0646c1a2":"code","ed172f8d":"code","8fc95b21":"code","f7d7ffb8":"code","f1591094":"code","b379783e":"code","2a38df3d":"code","563a88e8":"code","04f81aed":"code","8414ed66":"code","336b1aa6":"markdown","0fbd38a6":"markdown","9a5d4718":"markdown","22ff9b06":"markdown","26d20d32":"markdown","019323ad":"markdown","ea98666b":"markdown","f908d62a":"markdown","09631be9":"markdown","7247627c":"markdown","3a4d40f6":"markdown","ca7c8da0":"markdown","a0b436e9":"markdown","0a7685c6":"markdown","77e05970":"markdown","93f20bbf":"markdown","6e95b4e8":"markdown","009a66cd":"markdown","167160ba":"markdown","04b93162":"markdown","c0c53f71":"markdown","f73aceed":"markdown","67a9fd61":"markdown"},"source":{"db2d1d68":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","09a20900":"from pandas import Series, DataFrame\n\n\n#Data Visualization Libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\n#Machine learning Classifiers\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score, cross_val_predict\n\n#data preprocessing libraries\nfrom sklearn.preprocessing import LabelEncoder \nfrom sklearn.preprocessing import MinMaxScaler\n\n#libraries for calculating score and accuracy of model\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import precision_recall_fscore_support","01c3d4a7":"data=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","1a25b246":"data.head()","bae0138a":"data.info()","8118086e":"data.describe()","834d9212":"data.isnull().head()","14fb22ee":"data.isnull().sum()","b247218b":"sns.heatmap(data.isnull(),yticklabels=False)","287104eb":"categorical_feat=['Pclass','Survived','Sex','Embarked','SibSp','Parch']","7e110cbd":"for feature in categorical_feat:\n    sns.catplot(feature,data=data,kind='count')","671db1e5":"numerical_feat=['Fare','Age']","3566d298":"for feature in numerical_feat:\n    plt.hist(data[feature])\n    plt.xlabel(feature)\n    plt.show()","20af0133":"data[['Pclass','Survived']].groupby('Pclass').mean()","83c67c0d":"data[['Parch','Survived']].groupby('Parch').mean()","6b3312e0":"data[['SibSp','Survived']].groupby('SibSp').mean()","c24d260a":"data[['Sex','Survived']].groupby('Sex').mean()","ebe6ce04":"for feature in categorical_feat:\n    if feature!='Survived': \n        sns.catplot(x=feature,y='Survived',kind='bar',data=data)","a2e980c6":"fig=sns.FacetGrid(data,col='Survived')\nfig.map(sns.distplot,'Age')\nplt.show()\n\n","32faee40":"fig=sns.FacetGrid(data,col='Survived')\nfig.map(plt.hist,'Fare')\nplt.show()","2ad88b75":"fig=sns.FacetGrid(data,row='Pclass',col='Survived')\nfig.map(plt.hist,'Age')\nplt.show()","2b26d808":"fig=sns.FacetGrid(data,row='Embarked',col='Survived')\nfig.map(sns.barplot,'Fare')\nplt.show()","dc6e95c7":"sns.heatmap(data[['Age','Pclass','Sex','SibSp','Parch']].corr(),annot=True)","6e09cb51":"sns.boxplot('Pclass',y='Age',data=data)","b54f729c":"data.groupby('Pclass')['Age'].median()","118e9767":"def compute_age(col):\n    Age=col[0]\n    Pclass=col[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 37\n        elif Pclass==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","b7c4372a":"data['Age']=data[['Age','Pclass']].apply(compute_age,axis=1)","1a2aae6f":"data.head()","6302d320":"sns.heatmap(data.isnull(),yticklabels=False)","46c56a1d":"deck1=data['Cabin']\n\nlevels1=[]\nfor level in deck1:\n    if pd.isnull(level)==True:\n        levels1.append('N')\n    else:\n        levels1.append(level[0])\n    \ndata['Cabin']=levels1  ","46342341":"sns.catplot('Cabin',kind='count',data=data)","8d3f0899":"deck=data['Cabin']\n\nlevels=[]\nfor level in deck:\n    if level=='N':\n        levels.append(0)\n    else:\n        levels.append(1)\n    \ndata['Cabin']=levels    \n","d798b1dd":"data['family']=data['Parch']+data['SibSp']\ndata['family'].loc[data['family']>0]=1\ndata['family'].loc[data['family']==0]=0\n\n\n\n","242a489d":"data.head()","52a530e2":"data.isnull().sum()","efc6ffb7":"data.dropna(subset=['Embarked'],inplace=True)","42ed4218":"data.isnull().sum()","7a67143c":"data.drop(['Name','PassengerId','Ticket','Parch','SibSp'],axis=1,inplace=True)","4be3973b":"data=pd.get_dummies(data,prefix=['embarked','family','cabin','sex','pclass'],columns=['Embarked','family','Cabin','Sex','Pclass'],drop_first=True)","f66bc8fc":"data.tail()","fa3e5303":"data_scaled=DataFrame(data[['Age','Fare']])","63368dd1":"data=data.drop(['Age','Fare'],axis=1)","0d68d997":"data.tail()","1a055f7d":"data.isnull().sum()","5efa57db":"model=MinMaxScaler()\nscaled=model.fit_transform(data_scaled)","eb6f03ef":"scaled","75f825a6":"data_scaled=pd.DataFrame(scaled,columns=['Age','Fare'])","59227ced":"data_scaled.shape","b9ec2b7b":"data.shape","92b79b4a":"data.reset_index(drop=True,inplace=True)","3f79063c":"data.isnull().sum()","6f4aae13":"data=pd.concat([data,data_scaled],axis=1)","4274b189":"data.tail()","2df4b55e":"lr=LogisticRegression()\nprint(cross_val_score(lr,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","00fececf":"knn=KNeighborsClassifier()\nprint(cross_val_score(knn,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","5b356e1f":"svm=SVC(probability=True)\nprint(cross_val_score(svm,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","f13d88b7":"dc=DecisionTreeClassifier()\nprint(cross_val_score(dc,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","bae417f1":"rf=RandomForestClassifier()\nprint(cross_val_score(rf,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","accf16ea":"gnb=GaussianNB()\nprint(cross_val_score(gnb,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","4be9f19d":"from xgboost import  XGBClassifier \nxgb=XGBClassifier()\nprint(cross_val_score(xgb,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","c9d960e9":"from sklearn.ensemble import VotingClassifier\nvoting_clf = VotingClassifier(estimators = [('lr',lr),('knn',knn),('rf',rf),('gnb',gnb),('svc',svm),('xgb',xgb)], voting = 'soft')\nprint(cross_val_score(voting_clf,data.drop('Survived',axis=1),data['Survived'],cv=5).mean())\n","f235c118":"grid_params_lr=[\n    {\n    'solver':['newton-cg', 'lbfgs', 'liblinear'],\n    'C':np.logspace(-2,2,20),\n    'penalty':['l1','l2','elasticnet'],\n    'max_iter':[100,1000,2000]\n    }\n]","c67a6f26":"grid_model_lr=GridSearchCV(lr, param_grid=grid_params_lr, cv=5,verbose=True,n_jobs=-1)","a01ac866":"model_lr=grid_model_lr.fit(data.drop('Survived',axis=1),data['Survived'])","495798bb":"model_lr.best_estimator_","f8128b05":"lr=LogisticRegression(C=2.06913808111479, penalty='l1', solver='liblinear')\nprint(cross_val_score(lr,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())\n","da165384":"grid_params_svm=[\n    {'kernel':['rbf', 'linear'], 'C':[0.1,1,10,20],'gamma':['auto','scale'] }\n    \n]","7576a5b8":"grid_model_svm=GridSearchCV(svm,param_grid=grid_params_svm,cv=5,verbose=True,n_jobs=-1)","20bb12c9":"model_svm=grid_model_svm.fit(data.drop('Survived',axis=1),data['Survived'])","2c0174c5":"model_svm.best_estimator_","84942446":"svm=SVC(C=10,gamma='auto')\nprint(cross_val_score(svm,data.drop('Survived',axis=1),data['Survived'],scoring='accuracy').mean())","52dc78db":"grid_params_knn=[\n    {'n_neighbors' : list(np.arange(20)),\n              'weights' : ['uniform', 'distance'],\n              'algorithm' : ['auto', 'ball_tree','kd_tree'],\n              'p' : [1,2]}\n]","d19f61a4":"grid_model_knn=GridSearchCV(knn,param_grid=grid_params_knn,cv=5,verbose=True,n_jobs=-1)","dd09e768":"model_knn=grid_model_knn.fit(data.drop('Survived',axis=1),data['Survived'])","a41a4139":"model_knn.best_estimator_","763cea26":"knn=KNeighborsClassifier(n_neighbors=14, p=1)\nprint(cross_val_score(knn,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","3a245be2":"grid_params_dc =  {\n               'criterion':['gini','entropy'],\n                                  \n                                  'max_depth': [15, 20, 25],\n                                  'max_features': ['auto','sqrt', 10],\n                                  'min_samples_leaf': [2,3],\n                                  'min_samples_split': [2,3]\n}","017da95c":"grid_model_dc=GridSearchCV(dc,param_grid=grid_params_dc,cv=5,verbose=True,n_jobs=-1)","4a79ecee":"model_dc=grid_model_dc.fit(data.drop('Survived',axis=1),data['Survived'])","8395d08d":"model_dc.best_estimator_","838bb002":"dc=DecisionTreeClassifier(ccp_alpha=0.14248185353428888, criterion='entropy',\n                       max_depth=15, max_features='auto', min_samples_leaf=2,\n                       random_state=0)\nprint(cross_val_score(dc,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","0646c1a2":"grid_params_rf =  {\n                'n_estimators':[400,450,500,550],\n               'criterion':['gini','entropy'],\n                                  'bootstrap':[True],\n                                  'max_depth': [15, 20, 25],\n                                  'max_features': ['auto','sqrt', 10],\n                                  'min_samples_leaf': [2,3],\n                                  'min_samples_split': [2,3]\n}","ed172f8d":"grid_model_rf=GridSearchCV(rf,param_grid=grid_params_rf,cv=5,verbose=True,n_jobs=-1)","8fc95b21":"model_rf=grid_model_rf.fit(data.drop('Survived',axis=1),data['Survived'])","f7d7ffb8":"model_rf.best_estimator_","f1591094":"rf=RandomForestClassifier(criterion='entropy', max_depth=15, max_features='sqrt',\n                       min_samples_leaf=2, n_estimators=450)\nprint(cross_val_score(rf,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","b379783e":"grid_params_xgb={\n    'gamma':[0,0.1,0.3,0.4,0.5],\n    'learning_rate':[0.05,0.1,0.2,0.3],\n    'min_child_weight':[1,3,5,7],\n    'max_depth':[4,6,8,10]\n    \n}","2a38df3d":"grid_model_xgb=GridSearchCV(xgb,param_grid=grid_params_xgb,cv=5,verbose=True,n_jobs=-1)","563a88e8":"model_xgb=grid_model_xgb.fit(data.drop('Survived',axis=1),data['Survived'])","04f81aed":"model_xgb.best_estimator_","8414ed66":"xgb=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=1, gamma=0.1, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.3, max_delta_step=0, max_depth=6,\n              min_child_weight=7, monotone_constraints='()',\n              n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=0,\n              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1,\n              tree_method='exact', validate_parameters=1, verbosity=None)\nprint(cross_val_score(xgb,data.drop('Survived',axis=1),data['Survived'],cv=5,scoring='accuracy').mean())","336b1aa6":"k neighbors classifier","0fbd38a6":"**DATA VISUALIZATION**","9a5d4718":"**REPLACING NULL VALUES IN CABIN COLUMN**","22ff9b06":"logistic regression","26d20d32":"suport vector machines","019323ad":"OBSERVATION","ea98666b":"OBSERVATION:","f908d62a":"Decision Tree","09631be9":"**NUMERICAL FEATURES**","7247627c":"**DESCRIBING DATA**","3a4d40f6":"Model Tuning","ca7c8da0":"**READING DATA**","a0b436e9":"**CORRELATION BETWEEN FEATURES**","0a7685c6":"ONE HOT ENCONDING","77e05970":"CHECKING FOR NULL VALUES ","93f20bbf":"**REPLACING NULL VALUES FOR AGE COLUMN**","6e95b4e8":"OBSERVATION:","009a66cd":"**CATEGORICAL FEATURES **","167160ba":"OBSERVATION:","04b93162":"OBSERVATION","c0c53f71":"DATA ANALYSIS","f73aceed":"Baseline Validation Performance","67a9fd61":"**DROPPING NULL VALUES FROM EMBARKED COLUMN**"}}