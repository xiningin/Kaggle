{"cell_type":{"9b249683":"code","1ab07211":"code","e1f542cf":"markdown","3ddf115d":"markdown","b08198da":"markdown","88f1ff99":"markdown"},"source":{"9b249683":"import tensorflow as tf\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport tensorflow_addons as tfa\n\nfrom kaggle_datasets import KaggleDatasets\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ntry:\n    tpu = tf.distribute.cluster_resolver.TPUClusterResolver()\n    print('Device:', tpu.master())\n    tf.config.experimental_connect_to_cluster(tpu)\n    tf.tpu.experimental.initialize_tpu_system(tpu)\n    strategy = tf.distribute.experimental.TPUStrategy(tpu)\nexcept:\n    strategy = tf.distribute.get_strategy()\nprint('Number of replicas:', strategy.num_replicas_in_sync)\n\nAUTOTUNE = tf.data.experimental.AUTOTUNE\n    \nprint(tf.__version__)\n","1ab07211":"GCS_PATH = KaggleDatasets().get_gcs_path()\nMONET_FILENAMES = tf.io.gfile.glob(str(GCS_PATH + '\/monet_tfrec\/*.tfrec'))\nprint('Monet TFRecord Files:', len(MONET_FILENAMES))\n\nPHOTO_FILENAMES = tf.io.gfile.glob(str(GCS_PATH + '\/photo_tfrec\/*.tfrec'))\nprint('Photo TFRecord Files:', len(PHOTO_FILENAMES))","e1f542cf":"Loading the data :\n1- We need a set of real images to give the discriminator a starting point in distinguishing between real and fake images. ","3ddf115d":"# **GAN architecture reamrks : ****\n\n1-*The discriminator model* is a classifier that determines whether a given image looks like a real image from the dataset or like an artificially created image. This is basically a binary classifier that will take the form of a normal convolutional neural network (CNN).\n2-The generator model takes random input values and transforms them into images through a deconvolutional neural network.\n\n3-Over the course of many training iterations, the weights and biases in the discriminator and the generator are trained through backpropagation. The discriminator learns to tell \"real\" images of handwritten digits apart from \"fake\" images created by the generator. At the same time, the generator uses feedback from the discriminator to learn how to produce convincing images that the discriminator can't distinguish from real images.\n\n![image.png](attachment:image.png)","b08198da":"*Generative Adversarial Networks *****: GANs are neural networks that learn to create synthetic data similar to some known input data.\n\n![](http:\/\/)","88f1ff99":"**TensorFlow** :  a deep learning library open-sourced by Google that makes it easy to train neural networks on GPUs.\nIf you're familiar with tensorflow, I recommend reading \"Hello, TensorFlow!\" or watching the \"Hello, Tensorflow!\" interactive tutorial on Safari before proceeding. "}}