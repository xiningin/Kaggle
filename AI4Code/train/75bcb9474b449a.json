{"cell_type":{"5e2b1563":"code","ea7caae6":"code","ab775df6":"code","cfbbfad2":"code","84840fe9":"code","65a14c77":"code","aace4dc7":"code","bc2fab3b":"code","abc5d714":"code","7fb12015":"code","cad2c490":"code","d845498f":"markdown","58488e73":"markdown","59dbb001":"markdown","6f3a78bf":"markdown","941c5855":"markdown","b8ad18c6":"markdown","d057fc63":"markdown","8700b5fa":"markdown"},"source":{"5e2b1563":"import numpy as np\nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import AdaBoostRegressor","ea7caae6":"SEED = 42\nEARLY_STOP_NUM = 5 \nDATA_NUM = 1000 # row number \nCOL_NUM = 5 #column number \nMAX_DEPTH = 2\nMAX_ESTIMATORS = 120","ab775df6":"np.random.seed(SEED)\nX = np.random.rand(DATA_NUM, COL_NUM) - 0.5\ny = 3*X[:, 0]**2 + 0.05 * np.random.randn(DATA_NUM)","cfbbfad2":"X.shape","84840fe9":"X[:5]","65a14c77":"y[:5]","aace4dc7":"X_train, X_val, y_train, y_val = train_test_split(X, y, random_state=SEED)","bc2fab3b":"abr = AdaBoostRegressor(n_estimators=MAX_ESTIMATORS, random_state=SEED)\nabr.fit(X_train, y_train)","abc5d714":"errors = [mean_squared_error(y_val, y_pred)\n          for y_pred in abr.staged_predict(X_val)]\nbst_n_estimators = np.argmin(errors) + 1\nbst_n_estimators","7fb12015":"abr_best = AdaBoostRegressor(n_estimators=bst_n_estimators, random_state=SEED)\nabr_best.fit(X_train, y_train)","cad2c490":"min_error = np.min(errors)\nprint(\"Minimum validation MSE:\", min_error)","d845498f":"# global variables","58488e73":"# import libraries","59dbb001":"# get best n_estimators using staged_predict","6f3a78bf":"# train using best n_estimators","941c5855":"# make data ","b8ad18c6":"# split train set and validation set ","d057fc63":"# get minum validation MSE ","8700b5fa":"# make model using MAX_ESTIMATORS"}}