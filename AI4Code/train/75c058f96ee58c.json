{"cell_type":{"7c54c3d1":"code","8a75f5a8":"code","79252364":"code","cfacfa6a":"code","89e9d6db":"code","9c833744":"code","74ac88c2":"code","50beda1e":"code","b3d41439":"code","9d8b96fd":"code","ebd65865":"code","db7d5560":"code","b32e9158":"code","4a161b09":"code","7ffad19c":"code","02805ac0":"code","1db77f60":"code","faddad57":"code","cc254acb":"code","f736b585":"markdown","1135dbab":"markdown","8b3e8f5e":"markdown","825d1658":"markdown","d887a8e9":"markdown","5fd86ae7":"markdown","f4c10aa3":"markdown","e21ebed7":"markdown","4ef1ed71":"markdown","43ef1d0a":"markdown","600f4bd2":"markdown","a6ff61d8":"markdown","182cb6f5":"markdown","d235ef57":"markdown","dd3e0f4d":"markdown","501fca6b":"markdown","7da021cc":"markdown","7996e382":"markdown","b9539662":"markdown"},"source":{"7c54c3d1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\n\n# read data file using pandas\ntrain_data_path = '..\/input\/song-popularity-prediction\/train.csv'\ntest_data_path = '..\/input\/song-popularity-prediction\/test.csv'\n\nmy_data = pd.read_csv(train_data_path, index_col='id')\ntest_data = pd.read_csv(test_data_path, index_col='id')\n\n# combined train and test dataset\ntt = my_data.append(test_data)\ntt.drop(['song_popularity'], 1, inplace=True)\ntt.tail()","8a75f5a8":"# Shape of dataset\nprint(my_data.shape, \\\n      test_data.shape, \\\n      tt.shape)","79252364":"# unique columns in dataset\nprint(my_data.columns,\\\n      test_data.columns, \\\n      tt.columns)","cfacfa6a":"#birds eye view of data\nmy_data.describe()","89e9d6db":"# Checking missing values\nmy_data.info()","9c833744":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['song_duration_ms'], kde=True)\nax.set_xlabel('Song Duration')\nplt.show()","74ac88c2":"\nfig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['acousticness'], kde=True)\nax.set_xlabel('Accousticness')\nplt.show()","50beda1e":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['danceability'], kde=True)\nax.set_xlabel('Danceability')\nplt.show()","b3d41439":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['energy'], kde=True)\nax.set_xlabel('Energy')\nplt.show()","9d8b96fd":"fig = plt.figure(figsize=(18,10))\ninstrumentalnees_lt_point_one = my_data['instrumentalness'] < 0.1\ninstrumentalnees_gt_point_one = my_data['instrumentalness'] >= 0.1\nprint('Percent of instrumentalness lt 0.1 = {} %'\\\n      .format(100 * instrumentalnees_lt_point_one.sum() \/ len(instrumentalnees_lt_point_one)))\nprint('Percent of instrumentalness gt 0.1 = {} %'\\\n      .format(100 * instrumentalnees_gt_point_one.sum() \/ len(instrumentalnees_gt_point_one)))\nax = sns.distplot(x=my_data[instrumentalnees_lt_point_one]['instrumentalness'], kde=True)\nax.set_xlabel('Instrumentalness')\nfig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data[instrumentalnees_gt_point_one]['instrumentalness'], kde=True)\nax.set_xlabel('Instrumentalness')\nplt.show()","ebd65865":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['key'], kde=True)\nax.set_xlabel('key')\nplt.show()","db7d5560":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['liveness'], kde=True)\nax.set_xlabel('liveness')\nplt.show()","b32e9158":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['loudness'], kde=True)\nax.set_xlabel('loudness')\nplt.show()","4a161b09":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['audio_mode'], kde=True)\nfig = plt.figure(figsize=(18,10))\nax = sns.countplot(x=my_data['audio_mode'])\nax.set_xlabel('audio_mode')\nplt.show()","7ffad19c":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['speechiness'], kde=True)\nax.set_xlabel('speechiness')\nplt.show()","02805ac0":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['tempo'], kde=True, bins=300)\nfig = plt.figure(figsize=(18,10))\nax = sns.kdeplot(x=my_data['tempo'])\nax.set_xlabel('tempo')\nplt.show()","1db77f60":"fig = plt.figure(figsize=(18,10))\nax = sns.distplot(x=my_data['time_signature'], kde=True)\nax.set_xlabel('time_signature')\nfig = plt.figure(figsize=(18,10))\nax = sns.countplot(x=my_data['time_signature'])\nax.set_xlabel('time_signature')\nplt.show()","faddad57":"fig = plt.figure(figsize=(18,10))\nax = sns.displot(my_data, x='audio_valence', hue='song_popularity' )\nplt.show()","cc254acb":"fig = plt.figure(figsize=(18,10))\nax = sns.displot(x=my_data['song_popularity'], kde=True)\nfig = plt.figure(figsize=(18,10))\nax = sns.countplot(x=my_data['song_popularity'])\nax.set_xlabel('song_popularity')\nplt.show()","f736b585":"## Visualization : Independent Features Distribution Analysis","1135dbab":"> Energy feature is not normally distributed with two peaks and left-skewed with long tail on left side.","8b3e8f5e":"> tempo feature distribution not follows normal distribution exactly. But it will be much closer to normal dstribution after fixing the right skewness of the plot. That we can do through log-normal distribution.","825d1658":"> Accoustic feature is not normally distributed. We have to fixed this feature distribution through transformation.","d887a8e9":"### Thanks!\n### *Please UPVOTE, if above visualizations helped in understanding features distributions.*\n\n### *Your upvote will help others to find this notebook and keeps me motivated as well to write more helpful notebooks*","5fd86ae7":"> Liveness feature has a right skewed distribution spread along right side tail. We can transform this distribution into normal distribution through log-normal distribution.","f4c10aa3":"> audio_mode is binary categorical feature as it is having only two values 0 and 1. Countplot clearly depicts that it is a binary feature with values 0 and 1.","e21ebed7":"> Key feature is a ordinal categorical features.","4ef1ed71":"> song_popularity is a binaary target feature which we want to predict from model. There are around 68% of observations for non-popular songs and ~32% of observations are for popular songs. The popular and non-popular records are imbalanced. \n> Although target feature are extremely imbalanced but we can verify if there are improvement in model performance after making target feature more balanced. We can make our dataset more balanced through some advance balancing technique like SMOTE etc.","43ef1d0a":"> Through distribution plot of time_signatures, it appears as a categorical feature.\n> Countplot confirms that it is a categorical feature in which more than 90% of the observation are for 3 and 4.","600f4bd2":"> Instrumentalness feature does not follow a simple feature distribution. Around 83% of values are less than 0.1, 6.47% values are greater than 0.1 that contains two peaks near 0.1 and 0.9. Remaining 10% are NAN values.","a6ff61d8":"> Speechiness feature is clearly right skewed that can fixed through log-nomal transformation.","182cb6f5":"> Looks like a normal distribution with slight skewed on right side.","d235ef57":"##### 1. There are missing values for some of the columns. To be specific there are 8 features out of 14 independent variables with missing values.\n##### 2. All the feature values are numerical in nature. \n##### 3. There are ordinal categorical features such as key, audio_mode and time_signature.","dd3e0f4d":"> Loudness feature is left skewed, that can be fixed after transforming this feature into logarithmic feature by taking log of loudness observations.","501fca6b":"# Song Popularity Prediction dataset Visualizations\n#### 1. In this session we will try to perform the visualization of independent features distributions.\n#### 2. Then we make the observations based on the plotted distribution of each feature.","7da021cc":"> Danceability feature is left skewed. We need to do the transformation to fix feature distribution.","7996e382":"> Audio_valence features represent how much good\/happy listener will feel while listening the song. Audio_valence feature has a widespread of observations along range with observations concentrated on 0.5 to 0.8 and around 0.9","b9539662":"## Some Usual Exploratory Data Anlysis"}}