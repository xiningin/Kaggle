{"cell_type":{"76f868ef":"code","8fffbee0":"code","56835bb1":"code","3c42735b":"code","fd3291a0":"code","20dd1f25":"code","a47bfa1b":"code","b5c1c398":"code","20d3099c":"code","a6876eb6":"code","a3b70969":"code","7c34dcc3":"code","19d7314a":"code","b5b3f40b":"code","8e05ac6f":"code","fc57d903":"code","79f0f48b":"code","7a736bab":"code","f8e50227":"code","41fc147f":"code","b469d981":"code","c8bcfb20":"code","98b899a4":"code","9bab920a":"code","16c269c2":"code","770a2175":"code","dc8df8a0":"code","33dd7571":"code","6b376a34":"code","a959749e":"code","7cb16dac":"markdown","52a36463":"markdown","71528ac5":"markdown","423d2563":"markdown","e8d68f38":"markdown","55f42e31":"markdown","ca605575":"markdown","fc91b33d":"markdown","1d28f67b":"markdown","483ec71e":"markdown","5ecd192d":"markdown","f61f00f4":"markdown","fb712a39":"markdown","23f3c93b":"markdown","e667774e":"markdown","caecb0e6":"markdown","705d1586":"markdown","cdb500a8":"markdown","03978df6":"markdown","3dbcbdf9":"markdown"},"source":{"76f868ef":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('whitegrid')\nfrom sklearn.model_selection import cross_val_score\nfrom statistics import mean\nfrom lightgbm import LGBMClassifier\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import MinMaxScaler","8fffbee0":"df = pd.read_csv('..\/input\/heart.csv')","56835bb1":"df.head()","3c42735b":"df.info()","fd3291a0":"df.describe()","20dd1f25":"df.shape","a47bfa1b":"df.columns","b5c1c398":"pd.isnull(df).sum()","20d3099c":"df.hist(bins=10,figsize=(15,15),color= \"green\", grid=False)\nplt.show()","a6876eb6":"# Matrice couleur des donn\u00e9es\ndef plot_correlation_map( df ):\n    corr = df[['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach', #ou tout simplement: df.corr()\n       'exang', 'oldpeak', 'slope', 'ca', 'thal', 'target']].corr()\n    _ , ax = plt.subplots( figsize =( 12 , 10 ) )\n    cmap = sns.diverging_palette( 220 , 10 , as_cmap = True )\n    _ = sns.heatmap(\n        corr, \n        cmap = cmap,\n        square=True, \n        cbar_kws={ 'shrink' : .9 }, \n        ax=ax, \n        annot = True, \n        annot_kws = { 'fontsize' : 12 }\n    )\nplot_correlation_map(df)","a3b70969":"corr = df.corr()['target'].abs().sort_values()\ncorr","7c34dcc3":"def plot_cat(data, x_axis, y_axis, hue):\n    plt.figure()    \n    sns.barplot(x=x_axis, y=y_axis, hue=hue, data=data)\n    sns.set_context(\"notebook\", font_scale=1.6)\n    plt.legend(loc=\"upper right\", fontsize=\"medium\")\nplot_cat(df,\"sex\", \"target\", None) ","19d7314a":"plot_cat(df,\"fbs\", \"target\", \"sex\") ","b5b3f40b":"X= df.drop('target',axis=1)  # on peut aussi donner les valeurs de x et de y\ny=df['target']","8e05ac6f":"# MinMaxScaler\nX['trestbps'] = MinMaxScaler().fit_transform(X['trestbps'].values.reshape(-1, 1))\nX['chol'] = MinMaxScaler().fit_transform(X['chol'].values.reshape(-1, 1))\nX['thalach'] = MinMaxScaler().fit_transform(X['thalach'].values.reshape(-1, 1))\nX['age'] = MinMaxScaler().fit_transform(X['age'].values.reshape(-1, 1))","fc57d903":"from sklearn.model_selection import train_test_split","79f0f48b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","7a736bab":"clf = LGBMClassifier(n_estimators=200, max_depth=5)","f8e50227":"clf.fit(X_train,y_train)","41fc147f":"scores = cross_val_score(clf,X,y,scoring='roc_auc', cv=5)\nprint('AUC')\nprint(np.mean(scores))\nprint(np.std(scores))","b469d981":"random_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, y_train)\nY_pred = random_forest.predict(X_test)\nrandom_forest.score(X_train, y_train)","c8bcfb20":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nknn = KNeighborsClassifier()\nparams = {'n_neighbors':[i for i in range(1,33,2)]}","98b899a4":"model = GridSearchCV(knn,params,cv=10)","9bab920a":"model.fit(X_train,y_train)\nmodel.best_params_           #print's parameters best values","16c269c2":"predict = model.predict(X_test)","770a2175":"from sklearn.metrics import accuracy_score,confusion_matrix\nprint('Accuracy Score: ',accuracy_score(y_test,predict))\nprint('Using k-NN we get an accuracy score of: ',\n      round(accuracy_score(y_test,predict),5)*100,'%')","dc8df8a0":"cnf_matrix = confusion_matrix(y_test,predict)\ncnf_matrix","33dd7571":"class_names = [0,1]\nfig,ax = plt.subplots()\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks,class_names)\nplt.yticks(tick_marks,class_names)\n\n#create a heat map\nsns.heatmap(pd.DataFrame(cnf_matrix), annot = True, cmap = 'YlGnBu',\n           fmt = 'g')\nax.xaxis.set_label_position('top')\nplt.tight_layout()\nplt.title('Confusion matrix', y = 1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')\nplt.show()","6b376a34":"coef = pd.Series(clf.feature_importances_, index = X.columns)\nimp_coef = coef.sort_values(ascending=False)\nprint(imp_coef)","a959749e":"plt.title(\"Feature Importance in Ensemble model\")\nimp_coef.plot(kind=\"barh\")\nplt.show()","7cb16dac":"### Pr\u00e9cision et Matrice de confusion","52a36463":"##### Dimensions du tableau (nombre de lignes et colonnes)","71528ac5":"##### Nombre de valeurs","423d2563":"### Importation des librairies","e8d68f38":"##### Importance des donn\u00e9es","55f42e31":"Visualisation de l'importance des donn\u00e9es","ca605575":"#### Visualisation des malades par sex","fc91b33d":"###### Analyse rapide (nomnbre, moyenne, \u00e9cart type, minimum, maximum, quartiles)","1d28f67b":"##### Contenu des 5 premi\u00e8res lignes","483ec71e":"## Pr\u00e9diction\n#### On d\u00e9finie la cible \"y\" et les paterns \"x\"","5ecd192d":"#### Choix de l'algorithme","f61f00f4":"#### Importation du dataset","fb712a39":"##### Noms des colonnes","23f3c93b":"##### Information sur les donn\u00e9es","e667774e":"### Matrice de corr\u00e9lation (liens entres donn\u00e9es)","caecb0e6":"##### Valeurs manquantes","705d1586":"### R\u00e9duction de la taille des variables \n\"pour faciliter le travail des algorithmes\"","cdb500a8":"#### On divise en deux le jeu de donn\u00e9es : 80% pour entrainer et 20% pour tester","03978df6":"### Histogrammes par donn\u00e9es","3dbcbdf9":"### Importance des diff\u00e9rentes donn\u00e9es"}}