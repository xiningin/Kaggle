{"cell_type":{"e3dbe8e3":"code","dac93027":"code","5063f4d6":"code","aab00037":"code","3794632c":"code","ba417cf7":"code","ed7eef56":"code","c0ac8cea":"code","9a657026":"code","5b48e0a5":"code","4c9efb30":"code","e81869a1":"code","dd8a3a59":"code","8f24ec60":"code","6d5e7196":"code","f8a630a8":"code","cffe85a6":"code","bb2c0e46":"code","c3c1d545":"code","a3a2e9de":"code","721f1f16":"code","2fb72fb3":"code","b70c4c56":"code","e34e42d3":"code","82178576":"code","fed0c16f":"code","18305907":"code","ad21dd92":"code","f44cda69":"code","ea61ca63":"code","6f01df15":"code","df12ebed":"code","a970c90d":"markdown","0de0583f":"markdown","0f1ca193":"markdown","e31dc561":"markdown","d7981f25":"markdown","6cda879b":"markdown","c1d1f0bb":"markdown","5f80cf68":"markdown","3673cfa3":"markdown","e31e7210":"markdown","c6c29da1":"markdown"},"source":{"e3dbe8e3":"pip install pmdarima","dac93027":"import os \nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline\nfrom matplotlib import pyplot as plt\n\n# LIBRARIES TO BE UTILIZED FOR ARIMA\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.tsa.api import ExponentialSmoothing,SimpleExpSmoothing,Holt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import linear_model\nfrom sklearn.metrics import mean_squared_error\nimport pmdarima as pm\nfrom pmdarima.model_selection import train_test_split\nfrom fbprophet import Prophet\nfrom pandas import to_datetime\nimport itertools\nimport warnings\nimport datetime\nfrom datetime import datetime\nfrom wordcloud import WordCloud\nimport matplotlib.ticker as ticker\nimport plotly\n\nfrom shapely.geometry import Point\nimport geopandas as gpd\nfrom geopandas import GeoDataFrame\n\n","5063f4d6":"pip install --upgrade plotly","aab00037":"warnings.filterwarnings('ignore')","3794632c":"import os\nfor dirname , _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname,filename))\n\ndatafolder ='..\/input\/store-sales-time-series-forecasting\/'","ba417cf7":"oil= pd.read_csv(os.path.join(datafolder,'oil.csv'))\nholidays_events=pd.read_csv(os.path.join(datafolder,'holidays_events.csv'))\nstores= pd.read_csv(os.path.join(datafolder,'stores.csv'))\ntrain= pd.read_csv(os.path.join(datafolder,'train.csv'))\ndf_test= pd.read_csv(os.path.join(datafolder,'test.csv'))\ntransactions= pd.read_csv(os.path.join(datafolder,'transactions.csv'))\nsample_submission=pd.read_csv(os.path.join(datafolder,'sample_submission.csv'))","ed7eef56":"holidays_events.head()","c0ac8cea":"stores.head()","9a657026":"df2=pd.merge(stores,train,on='store_nbr', how=\"right\")","5b48e0a5":"df2","4c9efb30":"stores_transactions=pd.merge(stores,transactions,on='store_nbr',how='left')","e81869a1":"#Checking the number of unique values\nstores_transactions[\"store_nbr\"].nunique()","dd8a3a59":"Train=train","8f24ec60":"# Investigate all the elements within each feature\n\nfor column in Train :\n    unique_vals = np.unique(Train[column])\n    nr_values = len(unique_vals)\n    if nr_values < 30 :\n        print('The number of values for feature{} :{}--{}'.format(column,nr_values,unique_vals))\n    else :\n            print('The number of Values for feature {}:{}'.format(column,nr_values))","6d5e7196":"#Checking the number of unique values\nstores_transactions[\"date\"].value_counts()","f8a630a8":"stores_transactions.isnull().sum()","cffe85a6":"#Checking the number of unique values\nstores_transactions[\"cluster\"].value_counts().plot(kind='bar',figsize=(15,5))","bb2c0e46":"stores_transactions.columns.values","c3c1d545":"#Taking the sum of all transactions over the dates\n\ndate_group = stores_transactions.groupby('date')[\"transactions\"].sum().reset_index()","a3a2e9de":"date_group.head()","721f1f16":"stores_transactions.head()","2fb72fb3":"city_transactions= stores_transactions.groupby(['city','type'])[\"transactions\"].sum().reset_index()","b70c4c56":"city_transactions.head()","e34e42d3":"plt.figure(figsize=(14, 5))\nsns.barplot(x=\"transactions\", y=\"city\",  data=city_transactions)","82178576":"cluster_trans= stores_transactions.groupby(['cluster','type'])[\"transactions\"].sum().reset_index()","fed0c16f":"cluster_trans.head()","18305907":"plt.figure(figsize=(14, 5))\nsns.barplot(x=\"cluster\", y=\"transactions\",  data=cluster_trans)","ad21dd92":"cluster_trans= stores_transactions.groupby(['cluster','type'])[\"transactions\"].sum().reset_index()","f44cda69":"\n\nplt.figure(figsize=(16, 6))\n\nax=sns.lineplot(y=\"transactions\",x=\"date\",data=date_group)\nax.xaxis.set_major_locator(ticker.LinearLocator(10))","ea61ca63":"cluster_sales= df2.groupby(['cluster','type'])[\"sales\"].sum().reset_index()\n\nplt.figure(figsize=(14, 5))\nsns.barplot(x=\"cluster\", y=\"sales\",hue='type' , data=cluster_sales)","6f01df15":"cluster_sales.head()","df12ebed":"city_sales=df2.groupby(['date','city','type'])[\"sales\"].mean().reset_index()\nplt.figure(figsize=(16, 6))\nsns.barplot(y=\"sales\",x=\"type\",hue=\"city\", data=city_sales)","a970c90d":"# Transactions per city","0de0583f":"# Lineplot of the entire data transactions","0f1ca193":"### It seem as though most stores fall under Cluster 3\n### with the least store number categorized as Cluster 5","e31dc561":"### Cluster 14 has the most\/highest sales followed by Cluster 6 and 8 respectively.\n### The one with the least sales being cluster number 9 and 16 respectively , with 9 being the lowest perfomer amongst the 17 clusters.\n### The most common Transaction Type is D followed by A and C, with E being the least\n### Cluster 10 and 6 seems to experience more than one type of transactions.","d7981f25":"# Average sales Per city by type","6cda879b":"### In terms of city transactions, Quito takes it by a margin.\n### Puyo seems to be experiencing the least amount of transactional volumes.\n","c1d1f0bb":"# LOADING THE DATA ","5f80cf68":"# Sales Per Cluster","3673cfa3":"### In terms of number of transaction per cluster, Cluster 14 is the leading one followed by  Cluster 6, 8 and 11 respectively\n### The one with the least transactions is cluster 16 floowed by 12 and 7 respectively.","e31e7210":"### It seems that Quito has the most average sales compared to other cities.\n### The type with the highest average sales is A followed by D respectively\n### Type A is also the least occuring trasanction Type amongst the Cities","c6c29da1":"# Transactions per Cluster"}}