{"cell_type":{"dcee05b1":"code","fe644cb0":"code","3cb0aa93":"code","60928d69":"code","f645946c":"code","e6e14255":"code","fc704c9c":"code","0069c90e":"code","b8cea0c5":"code","8179049e":"markdown"},"source":{"dcee05b1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport itertools\nimport codecs\nimport re\nimport datetime\nimport cairocffi as cairo\nimport editdistance\nfrom scipy import ndimage\nimport pylab\nfrom keras import backend as K\nfrom keras.layers.convolutional import Conv2D, MaxPooling2D\nfrom keras.layers import Input, Dense, Activation\nfrom keras.layers import Reshape, Lambda\nfrom keras.layers.merge import add, concatenate\nfrom keras.models import Model\nfrom keras.layers.recurrent import GRU\nfrom keras.optimizers import SGD\nfrom keras.utils.data_utils import get_file\nfrom keras.preprocessing import image\nimport keras.callbacks","fe644cb0":"# https:\/\/www.kaggle.com\/anokas\/kuzushiji-visualisation\ndf_train = pd.read_csv('..\/input\/train.csv')\ndf_unicode = pd.read_csv('..\/input\/unicode_translation.csv')\ndf_submission = pd.read_csv('..\/input\/sample_submission.csv')\ntrain_image_path = \"..\/input\/train_images\"\ntest_image_path = \"..\/input\/test_images\"\nunicode_map = {codepoint: char for codepoint, char in df_unicode.values}","3cb0aa93":"df_train.head()","60928d69":"df_train['labels'].isna().value_counts()","f645946c":"df_train = df_train.fillna('')","e6e14255":"df_submission.head()","fc704c9c":"for i, row in df_submission.iterrows():\n    samples = df_train.iloc[i%df_train.shape[0]]['labels']\n    result = ''\n    tmp = ''\n    j=0\n    for sample in samples.split(' '):\n        if j == 0:\n            tmp += sample + ' '\n            j += 1\n        elif j == 1:\n            tmp += sample + ' '\n            j += 1\n        elif j == 2:\n            tmp += sample + ' '\n            j += 1\n        elif j == 3:\n            j += 1\n        else:\n            result += tmp\n            tmp = ''\n            j = 0\n\n    if len(result) == 0:\n        df_submission.set_value(i, 'labels', '')\n    else:\n        df_submission.set_value(i, 'labels', result[:-1])","0069c90e":"df_submission.head()","b8cea0c5":"df_submission.to_csv(\"submission.csv\", index=False)","8179049e":"## You should be Careful 2 problems!\n\n### 1. different value nums of label for submission\n\n    train\n    > U+306F 1231 3465 133 53 U+304C 275 1652 84 69 ... <br\/>\n\n    submission\n    > U+003F 1 1 U+FF2F 2 2<br\/>\n\n    Label of train df is consist of 5 values, however, label of submission df needs only 3 values!\n    \n### 2. there is na in labels\n\n    You should fill na!"}}