{"cell_type":{"91c6578f":"code","b54b9ea6":"code","63f85ed0":"code","ac11f9a8":"code","949cf5c1":"code","04b5305e":"code","0ad89547":"code","6aa85aab":"code","0fc10d39":"code","8ca7a1c9":"code","dd2e0ba3":"code","8b60e1cb":"code","eb39b870":"code","60a97256":"code","b4295e07":"code","9b6c2131":"code","ccad436b":"code","be6c7a1e":"code","523442aa":"code","d1f9a8a7":"code","f0dd745b":"code","5d4667b4":"code","17e06dfc":"code","28ff4d2a":"markdown","368cf981":"markdown","50666511":"markdown","670e4bf7":"markdown","b4faeb31":"markdown","ae5af4c8":"markdown","3b8d2c8b":"markdown","05f12fea":"markdown","1ffc8c46":"markdown","fc7f024c":"markdown","10b76a83":"markdown","b8ef2083":"markdown","edc3169f":"markdown","63756d10":"markdown","f6e66049":"markdown","09dc8352":"markdown","ce61b283":"markdown","774df70d":"markdown","1a8ea7ae":"markdown","196ed2e0":"markdown","488bacfe":"markdown","62a411ff":"markdown","c4053a3e":"markdown","2c440796":"markdown","e19d1002":"markdown","76515317":"markdown","f85f58f4":"markdown","1c20e044":"markdown","fbc24290":"markdown","41905da3":"markdown","7956556b":"markdown","0bf0de1b":"markdown","d7dcc113":"markdown"},"source":{"91c6578f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats\n%matplotlib inline\n\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.figure_factory as ff\nfrom plotly import subplots\nfrom plotly.subplots import make_subplots\ninit_notebook_mode(connected=True)\n\nfrom datetime import date, datetime,timedelta\n\npd.set_option('display.max_columns', 100)\npd.set_option('display.max_rows', 100)\nimport os","b54b9ea6":"from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly as py\nimport plotly.graph_objs as go\n\ninit_notebook_mode(connected=True) #do not miss this line","63f85ed0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ac11f9a8":"## The below dataset is the modified version of the originally uploaded initial data\ndf=pd.read_csv('\/kaggle\/input\/final_corona_virus_data.csv')","949cf5c1":"df.head()","04b5305e":"import json\nwith open('\/kaggle\/input\/Geocoding_api_data.json') as f:\n    d = json.load(f)\n","0ad89547":"##Looking at data types\ndf.info()","6aa85aab":"# plot the world data for 22nd January.\n\ndf_22Jan=df[df['Date']=='2020-01-22']","0fc10d39":"df_22Jan","8ca7a1c9":"dates = np.sort(df_22Jan['Date'].unique())\ndata = [go.Scattergeo(\n            locationmode='country names',\n            lon = df_22Jan['lon'],lat = df_22Jan['lat'],\n            text = df_22Jan['Country'] + ', ' + df_22Jan['PS'] +   '-> Deaths: ' + df_22Jan['Deaths'].astype(str) + ' Confirmed: ' + df_22Jan['Confirmed'].astype(str),\n            mode = 'lines+markers',\n            marker=dict(size=(df_22Jan['Confirmed'])**(1\/1.9)+9,color='red')\n\n) ]","dd2e0ba3":"fig = go.Figure(\n    data=data[0],\n    layout=go.Layout(\n        title = {'text': f'[Day -1]Detection of Corona Virus 22nd January','y':0.98,'x':0.5,'xanchor': 'center','yanchor': 'top'},\n        geo = dict(projection_type='robinson',showland = True,landcolor = \"rgb(252, 240, 220)\",showcountries=True,showocean=True,countrycolor = \"rgb(128, 128, 128)\",\n            )),\n    \n    frames=[go.Frame(data=dt, layout=go.Layout(title={'text': f'Corona Virus','y':0.98,'x':0.5,'xanchor': 'center','yanchor': 'top'}))for dt,date in zip(data[1:],dates[1:])])\n\n# fig.show()\npy.offline.iplot(fig)","8b60e1cb":"# plot the world data for 22nd January.\n\ndf_2ndFeb=df[df['Date']=='2020-02-02']","eb39b870":"df_2ndFeb.head()","60a97256":"dates = np.sort(df_2ndFeb['Date'].unique())\ndata = [go.Scattergeo(\n            locationmode='country names',\n            lon = df_2ndFeb['lon'],lat = df_2ndFeb['lat'],\n            text = df_2ndFeb['Country'] + ', ' + df_2ndFeb['PS'] +   '-> Deaths: ' + df_2ndFeb['Deaths'].astype(str) + ' Confirmed: ' + df_2ndFeb['Confirmed'].astype(str),\n            mode = 'lines+markers',\n#             marker = dict(size = (df_22Jan['Confirmed'])**(1\/2.7)+9,opacity = 0.6,reversescale = True,\n#                 autocolorscale = False,line = dict(width=0.5,color='rgba(250, 0, 250)'),cmin=0,color=df_22Jan['Deaths'],\n#                 cmax=df_22Jan['Deaths'].max(),\n#                 colorbar_title=\"Number of Deaths\"\n    \n                          \n#             )\n            marker=dict(size=(df_2ndFeb['Confirmed'])**(1\/2.9)+9,color='red')\n\n) ]","b4295e07":"fig = go.Figure(\n    data=data[0],\n    layout=go.Layout(\n        title = {'text': f'[Last recorded data]Detection of Corona Virus 2nd Feb','y':0.98,'x':0.5,'xanchor': 'center','yanchor': 'top'},\n        geo = dict(projection_type='robinson',showland = True,landcolor = \"rgb(252, 240, 220)\",showcountries=True,showocean=True,countrycolor = \"rgb(128, 128, 128)\",\n            )),\n    \n    frames=[go.Frame(data=dt, layout=go.Layout(title={'text': f'Corona Virus','y':0.98,'x':0.5,'xanchor': 'center','yanchor': 'top'}))for dt,date in zip(data[1:],dates[1:])])\n\nfig.show()","9b6c2131":"dates = np.sort(df['Date'].unique())\ndata = [go.Scattergeo(\n            locationmode='country names',\n            lon = df.loc[df['Date']==dt, 'lon'],\n            lat = df.loc[df['Date']==dt, 'lat'],\n            text = df.loc[df['Date']==dt, 'Country'] + ', ' + df.loc[df['Date']==dt, 'PS'] +   '-> Deaths: ' + df.loc[df['Date']==dt, 'Deaths'].astype(str) + ' Confirmed: ' + df.loc[df['Date']==dt,'Confirmed'].astype(str),\n            mode = 'lines+markers',\n            marker = dict(\n                size = (df.loc[df['Date']==dt,'Confirmed'])**(1\/2.7)+3,\n                reversescale = True,\n                autocolorscale = False,\n                line = dict(\n                    width=0.5,\n                    color='rgba(0, 0, 0)'\n                        ),\n                #colorscale='rdgy', #'jet',rdylbu, 'oryel', \n                cmin=0,\n                color=df.loc[df['Date']==dt,'Deaths'],\n                cmax=df['Deaths'].max(),\n                colorbar_title=\"Number of Deaths\"\n            )) \n        for dt in dates]\n\n\nfig = go.Figure(\n    data=data[0],\n    layout=go.Layout(\n        title = {'text': f'Corona Virus, {dates[0]}',\n                                'y':0.98,\n                                'x':0.5,\n                                'xanchor': 'center',\n                                'yanchor': 'top'},\n        geo = dict(\n            scope='world',\n            projection_type='robinson',\n            showland = True,\n            landcolor = \"rgb(252, 240, 220)\",\n            showcountries=True,\n            showocean=True,\n            countrycolor = \"rgb(128, 128, 128)\"\n            \n            ),\n     updatemenus=[dict(\n            type=\"buttons\",\n            buttons=[dict(label=\"Play\",\n                          method=\"animate\",\n                          args=[None])])]),\n    \n    frames=[go.Frame(data=dt, \n                     layout=go.Layout(\n                          title={'text': f'Corona Virus, {date}',\n                                'y':0.98,\n                                'x':0.5,\n                                'xanchor': 'center',\n                                'yanchor': 'top'}\n                           ))\n            for dt,date in zip(data[1:],dates[1:])])\n\nfig.show()\n","ccad436b":"# For China\nchina=df[df['Country']=='China']\nchina.head()","be6c7a1e":"# For remaining world\nworld=df[df['Country']!='China']\nworld.tail()","523442aa":"W=world.groupby('Date')['Confirmed'].sum()","d1f9a8a7":"C=china.groupby('Date')['Confirmed'].sum()","f0dd745b":"import plotly.graph_objects as go\nimport datetime\n\nX_china = C.index\nX_world = W.index\n\nfig = go.Figure(layout=go.Layout(\n        title = {'text': f'Corona Virus Confirmed cases in China vs Rest World',\n                                'y':0.85,\n                                'x':0.5,\n                                'xanchor': 'center',\n                                'yanchor': 'top'},\n        xaxis_title=\"Virus Spread Dates\",\n        yaxis_title=\"Number of Confirmed infected people\"))\n\nfig.add_trace(go.Scatter(x=X_world, y=W.values,line_color='deepskyblue',name='Rest_World',\n                opacity=0.8))\n\nfig.add_trace(go.Scatter(x=X_china, y=C.values,line_color='red',name='China',\n                opacity=0.6))\nfig.show()","5d4667b4":"# For China\ndeath_c=china.groupby('Date')['Deaths'].sum()\n\n# Rest world\ndeath_w=world.groupby('Date')['Deaths'].sum()","17e06dfc":"X_c = death_c.index\nX_w = death_w.index\n\nfig = go.Figure(layout=go.Layout(\n        title = {'text': f'Number of deaths due to Corona Virus China vs Rest World',\n                                'y':0.85,\n                                'x':0.5,\n                                'xanchor': 'center',\n                                'yanchor': 'top'},\n        xaxis_title=\"Virus Spread Dates\",\n        yaxis_title=\"Number of Deaths\"))\n\nfig.add_trace(go.Scatter(x=X_w, y=death_w.values,line_color='deepskyblue',name='Rest_World',\n                opacity=0.8))\n\nfig.add_trace(go.Scatter(x=X_c, y=death_c.values,line_color='red',name='China',\n                opacity=0.6))\nfig.show()","28ff4d2a":"Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the __common cold__ to more severe diseases such as \n- __Middle East Respiratory Syndrome (MERS-CoV)__ \n- __Severe Acute Respiratory Syndrome (SARS-CoV)__\n\nA novel coronavirus (nCoV) is a new strain that has not been previously identified in humans","368cf981":"<center><img src=\"https:\/\/i2.wp.com\/communalnews.com\/wp-content\/uploads\/2020\/01\/huanan.jpeg?resize=640%2C350&ssl=1&is-pending-load=1\"\/><\/center>\n<center><b>Seafood Market, Wuhan, China<\/b><\/center>\n------","50666511":"__Note__: Despite emerging in humans only recently, the virus has already infected about __2,0000__ people and caused __500+__ deaths in China, while spreading to __25+__ other countries, according to the World Health Organization. \n\n- Most of the initial cases occurred in people who worked at or visited the <font color='blue'>__Huanan seafood market in Wuhan, China__<\/font>, where a variety of wild animals were sold.","670e4bf7":"From the above plot we can simply observe that __Hubei__ is the place in china had the maximum number of confirmend cases of Coronavirus.\n\n- In US there is only 1 reported case.","b4faeb31":"### <center>Number of deaths due to Corona Virus <font color='red'>China vs Rest World<\/font><\/center>","ae5af4c8":"<a id='section1'>\n## 1.Introduction ","3b8d2c8b":"#### 5.2 Current spread of coronavirus through out the world","05f12fea":"<center><img src=\"https:\/\/storage.googleapis.com\/kaggle-datasets-images\/490520\/913071\/6f768170042ff67201713be09e3ad3df\/dataset-cover.jpg?t=2020-01-26-22-15-00\"\/><\/center>","1ffc8c46":"In the given data longitude and latitude is seperately added which is found by using __geocoding__.\n\nCheck more about [geocoding](https:\/\/developers.google.com\/maps\/documentation\/geocoding\/start?utm_source=google&utm_medium=cpc&utm_campaign=FY18-Q2-global-demandgen-paidsearchonnetworkhouseads-cs-maps_contactsal_saf&utm_content=text-ad-none-none-DEV_c-CRE_342710847021-ADGP_Hybrid+%7C+AW+SEM+%7C+SKWS+~+Geocoding+API+BMM-KWID_43700042841957297-kwd-335278985932-userloc_1007765&utm_term=KW_%2Bgeocoder%20%2Bapi-ST_%2Bgeocoder+%2Bapi&gclid=CjwKCAiAyeTxBRBvEiwAuM8dndTZIuREm-2GHB-B5JKDy25-qlqjfZRlyz2X45TxOsexSFYBfEVOaRoCrf0QAvD_BwE)","fc7f024c":"## Table of Contents\n\n1. [Introduction](#Section1)<br>\n2. [Problem Statement](#Section2)<br>\n3. [Importing Libraries](#Section3)<br>\n4. [Data Acquisition & Description](#Section4)<br>\n5. [Exploratory Data Analysis](#Section5)<br>\n","10b76a83":"### <center>Number of Corona Virus confirmed cases <font color='red'>China vs Rest World<\/font><\/center>","b8ef2083":"<center><img src=\"https:\/\/www.who.int\/images\/default-source\/health-topics\/coronavirus\/gettyimages-1181575980.tmb-1024v.jpg?sfvrsn=7ec493b8_4\" height=230 width=500\/><\/center>","edc3169f":"#### 5.1 Origin place of coronavirus\n\n- Coronavirus spread comes in the news since 22nd January.So what we do let's check for the place where it's case were first reported.","63756d10":"### Geocoding_api_data\n\nLet's load the geocoded_api data which is saved in the .json format.","f6e66049":"- What here you see is the pre-processed version of data. Because for this case study our main aim is to show the exploration of data and bringing out a bigger picture.","09dc8352":"## 2. Problem Statement","ce61b283":"Almost 98% reported coronavirus cases are from CHINA.\n- From the Patients past travel data.All the patients who are not from china had recent past travel record to china.\n- And within china most of the confirmed cases are from a place called __Hubei__.","774df70d":"<img src=\"day1.png\" height=450 width=550\/>","1a8ea7ae":"- #### For more information check this [video](https:\/\/www.facebook.com\/interestingengineering\/videos\/474773186523080\/?t=2)","196ed2e0":"## 3. Importing libraries","488bacfe":"| Features | Description |\n| :--| :--| \n| **Province-State(PS)** | Target state in the country |\n| **Country** | Target Country |\n| **Date** | Report Date |\n| **Confirmed** | Accumulated number of confirmed 2019-nCoV cases |\n| **Recovered** | Accumulated number of recovered 2019-nCoV cases |\n| **Deaths** | Accumulated number of deaths due to 2019-nCoV |\n| **lat**|Latitude|\n| **lon**|Longitude|","62a411ff":"### <center>Let's compare the spread of virus in China vs Rest world<\/center>","c4053a3e":"The __2019-nCoV(virus name)__ is a contagious coronavirus that hailed from __Wuhan__, China. This new strain of virus has striked fear in many countries as cities are quarantined and hospitals are overcrowded. \n\n- This dataset will help us understand how __2019-nCoV__ is spread aroud the world.","2c440796":"__C__oronaviruses are __zoonotic__, meaning they are __transmitted__ between <font color='blue'>__Animals and people__<\/font>.  \n\nCoronavirus spreads in __China__ and around the world, scientists are scrambling to find out exactly __where it came from__.\n\n<br><br>\n### <center>What initial research said<\/center>\n<center><img src='https:\/\/raw.githubusercontent.com\/vikramvinay\/Titanic-Machine-Learning-from-Disaster\/master\/bat%20to%20humans.png' height=300 width=550\/><\/center>\n\n\n- Now, a new study provides more clues to the virus' origins, and points to <font color='red'>__bats__<\/font> as the most likely __hosts__.\n\n<br><br>\n\n### <center>New claims<\/center>\n\n<center><img src=\"https:\/\/i.ytimg.com\/vi\/CUCPpYzoETk\/maxresdefault.jpg\" height=250 width=550\/><\/center>","e19d1002":"### What World Health Organization(WHO) said about Coronavirus?","76515317":"This data is till 2nd of Feb as the new data came i will try to merge it with my ongoing case study. For this data set we don't need to predict any thing it's just data exploration.\n\nFinally,For a while the problem is serious but it is also very exaggerated in the media, and people living outside of China have no reason to worry. However, I feel __sorry for China__, because all attention to this virus should focus on this country, not the fears of distant countries. Let's hope that we will soon be able to say that the virus has gone down in history  \ud83d\ude4f \ud83d\ude4f \ud83d\ude4f \ud83d\ude4f \ud83d\ude4f.","f85f58f4":"#### __Question__ : What in this notebook we gonna cover?\n- This notebook tracks the __spread__ of the __novel corona virus__, also known as the __2019-nCoV__. It is a contagious respiratory virus that first started in Wuhan in December 2019.\n\n<font color='blue'>__Note:__<\/font> \n\nMany great kernels have already been posted (even i am taking help from few of them) but i try to bring the complete visualization into one notebook and make it understand the basic traits of visualization for every reader. \n- My goal is to explore the data in a visual font using the __Plotly__, __Folium__ and animation feature in scatter and geo plots!\n\n- This notebook will be a comparative analysis, the main purpose of which is to examine the differences in the spread of the disease in China and other parts of the world.","1c20e044":"#### 5.3 Let's check out the spread of CoronaVirus worldwide through animation.","fbc24290":"> # <center> <font color='red'>**How Coronavirus spread aroud the world**<\/font><\/center>","41905da3":"### 4. Data Loading and data Description","7956556b":"Within 10 days Corona Virus spread to the whole world. Now it became worldwide serious issue.\n\n- Almost 30time confirmed cases of corona all over the world.\n\n<img src=\"2nd feb.png\" height=400 width=500\/>\n- Death toll starts increasing, Only in Hubei 350 people got died due to corona virus.","0bf0de1b":"### 5. Exploratory Data Analysis","d7dcc113":"-------"}}