{"cell_type":{"570bb2ad":"code","908030c0":"code","b15fdd37":"code","71af7dc4":"code","bfb8126f":"code","1d0d5234":"code","e725d48c":"code","4864ed67":"code","d25941d7":"code","07c0d3dd":"code","7b684d7f":"code","47d34831":"code","0fdfab0e":"code","d942b3f2":"code","2d69e23b":"code","1285af3e":"code","698947f2":"code","525676d4":"code","3ff5c01e":"code","d648778c":"code","d2b48a49":"code","e5656db3":"code","d6e3e787":"code","363df2e6":"code","05e20b05":"code","ab5affe6":"code","94963652":"code","0c5c84c4":"code","1a6094e1":"code","3e2d8ff9":"code","5b0fa04f":"code","14e72ba6":"code","2117971d":"code","390201c7":"code","62a1bd44":"markdown"},"source":{"570bb2ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","908030c0":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b15fdd37":"df_train=pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test=pd.read_csv('..\/input\/titanic\/test.csv')","71af7dc4":"PassengerId=df_test['PassengerId']","bfb8126f":"df_train.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)\ndf_test.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","1d0d5234":"df_train.isnull().sum()\/len(df_train)*100","e725d48c":"# Removing Cabin\ndf_train.drop(['Cabin'],axis=1,inplace=True)\ndf_test.drop(['Cabin'],axis=1,inplace=True)","4864ed67":"# Removing rows where embarked is null\n\ndf_train.dropna(subset=['Embarked'],inplace=True)\n\ndf_train['Embarked'].isnull().sum()","d25941d7":"age_train_series=df_train.groupby(['Pclass','Sex'])['Age'].transform('median')","07c0d3dd":"age_test_series=df_test.groupby(['Pclass','Sex'])['Age'].transform('median')","7b684d7f":"df_train['Age']=df_train['Age'].fillna(age_train_series)","47d34831":"df_test['Age']=df_test['Age'].fillna(age_test_series)","0fdfab0e":"df_test.isnull().sum()","d942b3f2":"Fare_test_series=df_test.groupby(['Pclass'])['Fare'].transform('median')\ndf_test['Fare']=df_test['Fare'].fillna(Fare_test_series)","2d69e23b":"df_train=pd.get_dummies(df_train,drop_first=True)\n","1285af3e":"df_test=pd.get_dummies(df_test,drop_first=True)","698947f2":"X=df_train.drop('Survived',axis=1)\ny=df_train['Survived']","525676d4":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)","3ff5c01e":"from sklearn.tree import DecisionTreeClassifier","d648778c":"dt=DecisionTreeClassifier(random_state=42)","d2b48a49":"from sklearn.model_selection import GridSearchCV","e5656db3":"params = {\n    'max_depth': [3,5,8,12,15],\n    'min_samples_leaf': [5,8,12,15,20],\n    'criterion': [\"gini\", \"entropy\"]\n}","d6e3e787":"grid_search = GridSearchCV(estimator=dt, \n                           param_grid=params, \n                           cv=4, n_jobs=-1, verbose=1, scoring = \"accuracy\")","363df2e6":"grid_search.fit(X_train, y_train)","05e20b05":"grid_search.cv_results_","ab5affe6":"score_df = pd.DataFrame(grid_search.cv_results_)\nscore_df.head()","94963652":"score_df.nlargest(5,\"mean_test_score\")","0c5c84c4":"grid_search.best_estimator_","1a6094e1":"dt_best=grid_search.best_estimator_","3e2d8ff9":"from sklearn.metrics import confusion_matrix, accuracy_score","5b0fa04f":"accuracy_score(y_test,dt_best.predict(X_test))","14e72ba6":"# Submission\npredictions=dt_best.predict(df_test)","2117971d":"titanic_3=pd.DataFrame({'PassengerId':PassengerId,'Survived':predictions})\ntitanic_3.to_csv('My_3rd_submission',index=False)","390201c7":"pd.read_csv('My_3rd_submission')","62a1bd44":"### BUILDING DECISION TREE WITH HYPERPARAMETER TUNING"}}