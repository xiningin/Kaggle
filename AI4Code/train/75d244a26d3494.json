{"cell_type":{"42d3d933":"code","da033966":"code","2ac9b72c":"code","3401cc3d":"code","582f7a3e":"code","dbca4eb0":"code","9ee7159f":"code","fabc6f77":"code","9d58612a":"code","6f4640ec":"code","0c7c6cd2":"markdown"},"source":{"42d3d933":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","da033966":"data = pd.read_csv('..\/input\/2015.csv')","2ac9b72c":"data.describe()","3401cc3d":"cols = ['MENTHLTH', 'ADPLEASR', 'ADDOWN', 'ADSLEEP', 'ADENERGY', 'ADEAT1', 'ADFAIL', 'ADTHINK', 'ADMOVE']\n# Section 25: Anxiety and Depression\n# Questions 1 - 8\n# 25.1 - 25.8\n\ndata = pd.DataFrame(data, columns=cols)\n\n# 99, BLANK = No answer\nnulls = [99, 77]\ndata = data[cols].replace(nulls, np.nan)\n# Set values of '99' and '77' to null as it is a \"Refused to Answer\"\/\"Don't know\" response\n\ndata = data[cols].replace(88, 0)\n# Replace values of 88 with 0\n# 88 in handbook is 'None', equivalent of zero days\n# We will be adding the total days later anyway\n\n# Convert DF to True\/False values. Determine if each cell is NULL or not.\nis_null_data = pd.DataFrame(np.where(data.loc[:, 'ADPLEASR':].isnull(), False, True))\n# is_null_data\n\n# Add and apply 'At Least One' column\n# If person answered at least one question\ndata['At Least One'] = is_null_data.any(axis=1)\ndata.iloc[209810:209835] # Print a sample","582f7a3e":"# If all values in row is True, this means every question was answered\n# Else, not all 8 were answered\ndata['All Eight'] = is_null_data.all(axis=1, skipna=False)\ndata[209810:209835] # Print a sample","dbca4eb0":"data['Total Days'] = np.nan # Make new column and set values to NaN\ndata['Total Days'] = data[cols[1:]].sum(axis = 1, min_count = 8)\n# Set values in column to the sum of each row\n# df.sum() performs the sum of each row\n# axis param: Performs the operation across each row\n# min_count param: Requirement to have AT LEAST X amount of valid values\n# Null\/NaN is not considered a valid value\n\ndata[209810:209835]","9ee7159f":"# testing\n\ndata['ADPLEASR'].mean()\n# 4.006002164715143\n\npractice_data = pd.DataFrame(data, columns=['ADPLEASR', 'ADDOWN', 'ADSLEEP'])\n# practice_data['ADPLEASR'].mean()\n\npractice_data = pd.DataFrame(np.where(practice_data['ADPLEASR'].isnull(), practice_data['ADPLEASR'].mean(), data['ADPLEASR']))\npractice_data = practice_data.round(0)\n\n# Sample NaN indexes: 1, 2, 3, 209814, 209816, 209824\nsample_nan = [1, 2, 3, 209814, 209816, 209824]\n\nprint('Original data without mean imputations: ', data['ADPLEASR'].iloc[sample_nan])\nprint('Data with mean imputations: ', practice_data.iloc[sample_nan])","fabc6f77":"# Impute missing data using mean of each column\n\ndata_imputed = pd.DataFrame(data)\n\nfor label in data_imputed.columns[1:9]: # iterate over cols\n    data_imputed[label] = pd.DataFrame(np.where(data_imputed[label].isnull(), data_imputed[label].mean(), data_imputed[label]))\n    # set NaN cells of each column to the column's mean\ndata_imputed = data_imputed.round(0)\n# round float value cells\n\n# data_imputed.iloc[209810:209835]\ndata_imputed.iloc[sample_nan]","9d58612a":"thirty_days = len(data_imputed[data_imputed['MENTHLTH'] == 30].index)\n# thirty_days\n# 22184\n# Total number of respondents who answered '30 days' for MENTHLTH\ntotal_responses = len(data_imputed.index)\n# total_reponses\n# 441456\n\nperc_thirty_menthlth = thirty_days \/ total_responses\nperc_thirty_menthlth\n# 0.05025189373346381\n# 5%","6f4640ec":"x = len(data_imputed[(data_imputed['Total Days'] >= 40) & (data_imputed['MENTHLTH'] == 30)].index)\ny = len(data_imputed[(data_imputed['Total Days'] < 40) & (data_imputed['MENTHLTH'] == 30)].index)\nx\/(x+y) * 100","0c7c6cd2":"# Imputing the Data of BRFSS\n### Focusing on Section 25: Anxiety and Depression\nSpecifically, section 25.1 to 25.8\n\nHandbook: https:\/\/www.cdc.gov\/brfss\/annual_data\/2015\/pdf\/codebook15_llcp.pdf\n\nPage: 95 of 137"}}