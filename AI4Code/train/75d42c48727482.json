{"cell_type":{"29cd088b":"code","903a78cf":"code","fbb75c68":"code","d6982e21":"code","bceb7752":"code","e04ec2f9":"code","5754b207":"code","e5430a79":"code","9c379dc5":"code","bb4b8d9a":"code","3135f854":"code","2c0d434e":"code","192d5d99":"code","507d7dda":"code","e68d1f16":"code","ab8f148e":"code","f4a7dae3":"code","231269af":"code","f847d3b9":"code","5003f0e0":"code","82502a23":"code","884e8764":"code","d88cf8c7":"code","c02c917e":"code","af534ee4":"code","fa9884ef":"code","5d0fefcd":"code","067cd823":"code","0f3f4b78":"code","1b075d9a":"code","41a84dcc":"code","dd2fe846":"code","39f6a6b7":"code","4e370b85":"code","10f4ac07":"code","f9272a23":"code","4f355557":"code","cb860c20":"code","25c440f5":"code","5a43d87f":"code","f3e4b8f2":"code","178d6701":"code","0c520652":"code","1a4108ae":"code","26c84aeb":"markdown","0f3ee275":"markdown","7bf16872":"markdown","ee24c74b":"markdown","32076f13":"markdown","23f49384":"markdown","ffa01eb9":"markdown","8653e09c":"markdown","0f160a5f":"markdown","ec7e8d97":"markdown","bab538ad":"markdown","4f3e01c1":"markdown","90b21e31":"markdown","7804ce4d":"markdown","65716f58":"markdown","89f60fa7":"markdown","c9654a68":"markdown","75fb993f":"markdown","744b43aa":"markdown","6310ffe0":"markdown","72b79df5":"markdown","75f3ab2c":"markdown","cde0684e":"markdown"},"source":{"29cd088b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os       \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport time\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nfrom tensorflow.keras.utils import get_file\nimport matplotlib.pyplot as plt","903a78cf":"# ver todos os arquivos dispon\u00edveis \nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","fbb75c68":"df = pd.read_csv(\"..\/input\/kdd-cup-1999-data\/kddcup.data_10_percent.gz\")\nprint(df)","d6982e21":"print(\"Read {} rows.\".format(len(df)))\ndf.dropna(inplace=True,axis=1) \ndf.columns = [\n    'duration',\n    'protocol_type',\n    'service',\n    'flag',\n    'src_bytes',\n    'dst_bytes',\n    'land',\n    'wrong_fragment',\n    'urgent',\n    'hot',\n    'num_failed_logins',\n    'logged_in',\n    'num_compromised',\n    'root_shell',\n    'su_attempted',\n    'num_root',\n    'num_file_creations',\n    'num_shells',\n    'num_access_files',\n    'num_outbound_cmds',\n    'is_host_login',\n    'is_guest_login',\n    'count',\n    'srv_count',\n    'serror_rate',\n    'srv_serror_rate',\n    'rerror_rate',\n    'srv_rerror_rate',\n    'same_srv_rate',\n    'diff_srv_rate',\n    'srv_diff_host_rate',\n    'dst_host_count',\n    'dst_host_srv_count',\n    'dst_host_same_srv_rate',\n    'dst_host_diff_srv_rate',\n    'dst_host_same_src_port_rate',\n    'dst_host_srv_diff_host_rate',\n    'dst_host_serror_rate',\n    'dst_host_srv_serror_rate',\n    'dst_host_rerror_rate',\n    'dst_host_srv_rerror_rate',\n    'deu_ruim_ou_nao'\n]\npd.set_option('display.max_columns', 5)\npd.set_option('display.max_rows', 5)\n\ndf","bceb7752":"df.info()","e04ec2f9":"with open(\"..\/input\/kdd-cup-1999-data\/training_attack_types\",'r') as attacks:\n    print(attacks.read())","5754b207":"attacks_types = {\n    'normal': 'normal',\n'back': 'dos',\n'buffer_overflow': 'u2r',\n'ftp_write': 'r2l',\n'guess_passwd': 'r2l',\n'imap': 'r2l',\n'ipsweep': 'probe',\n'land': 'dos',\n'loadmodule': 'u2r',\n'multihop': 'r2l',\n'neptune': 'dos',\n'nmap': 'probe',\n'perl': 'u2r',\n'phf': 'r2l',\n'pod': 'dos',\n'portsweep': 'probe',\n'rootkit': 'u2r',\n'satan': 'probe',\n'smurf': 'dos',\n'spy': 'r2l',\n'teardrop': 'dos',\n'warezclient': 'r2l',\n'warezmaster': 'r2l',\n}","e5430a79":"df['Attack Type'] = df.deu_ruim_ou_nao.apply(lambda r:attacks_types[r[:-1]])\ndf['Attack Type'].value_counts()","9c379dc5":"df['deu_ruim_ou_nao'].value_counts()","bb4b8d9a":"df.head()","3135f854":"df.isnull().sum()","2c0d434e":"num_cols = df._get_numeric_data().columns\n\ncate_cols = list(set(df.columns)-set(num_cols))\ncate_cols.remove('deu_ruim_ou_nao')\ncate_cols.remove('Attack Type')\n\ncate_cols","192d5d99":"def bar_graph(feature):\n    df[feature].value_counts().plot(kind=\"bar\")","507d7dda":"bar_graph('protocol_type')","e68d1f16":"plt.figure(figsize=(15,3))\nbar_graph('service')","ab8f148e":"bar_graph('flag')","f4a7dae3":"bar_graph('logged_in')","231269af":"bar_graph('deu_ruim_ou_nao')","f847d3b9":"bar_graph('Attack Type')","5003f0e0":"# drop columns with NaN\ndf = df.dropna('columns')\n\n# keep columns where there are more than 1 unique values\ndf = df[[col for col in df if df[col].nunique() > 1]]\n\ncorr = df.corr()\n\nplt.figure(figsize=(15,12))\n\nsns.heatmap(corr)\n\nplt.show()","82502a23":"df.columns","884e8764":"print(df['num_root'].corr(df['num_compromised']))\nprint(df['srv_serror_rate'].corr(df['serror_rate']))\nprint(df['srv_count'].corr(df['count']))\nprint(df['srv_rerror_rate'].corr(df['rerror_rate']))\nprint(df['dst_host_same_srv_rate'].corr(df['dst_host_srv_count']))\nprint(df['dst_host_srv_serror_rate'].corr(df['dst_host_serror_rate']))\nprint(df['dst_host_same_srv_rate'].corr(df['same_srv_rate']))\nprint(df['dst_host_same_src_port_rate'].corr(df['srv_count']))\nprint(df['dst_host_serror_rate'].corr(df['serror_rate']))\nprint(df['dst_host_serror_rate'].corr(df['srv_serror_rate']))\nprint(df['dst_host_srv_serror_rate'].corr(df['serror_rate']))\nprint(df['dst_host_srv_serror_rate'].corr(df['srv_serror_rate']))\nprint(df['dst_host_rerror_rate'].corr(df['rerror_rate']))\nprint(df['dst_host_rerror_rate'].corr(df['srv_rerror_rate']))\nprint(df['dst_host_srv_rerror_rate'].corr(df['rerror_rate']))\nprint(df['dst_host_srv_rerror_rate'].corr(df['srv_rerror_rate']))","d88cf8c7":"#(Correla\u00e7\u00e3o = 0.9938277978738366)\ndf.drop('num_root',axis = 1,inplace = True)\n\n#(Correla\u00e7\u00e3o = 0.9983615072725952)\ndf.drop('srv_serror_rate',axis = 1,inplace = True)\n\n#(Correla\u00e7\u00e3o = 0.9947309539817937)\ndf.drop('srv_rerror_rate',axis = 1, inplace=True)\n\n#(Correla\u00e7\u00e3o = 0.9993041091850098)\ndf.drop('dst_host_srv_serror_rate',axis = 1, inplace=True)\n\n#(Correla\u00e7\u00e3o = 0.9869947924956001)\ndf.drop('dst_host_serror_rate',axis = 1, inplace=True)\n\n#(Correla\u00e7\u00e3o = 0.9821663427308375)\ndf.drop('dst_host_rerror_rate',axis = 1, inplace=True)\n\n#(Correla\u00e7\u00e3o = 0.9851995540751249)\ndf.drop('dst_host_srv_rerror_rate',axis = 1, inplace=True)\n\n#(Correla\u00e7\u00e3o = 0.9865705438845669)\ndf.drop('dst_host_same_srv_rate',axis = 1, inplace=True)","c02c917e":"df.head()","af534ee4":"df.shape","fa9884ef":"df.columns","5d0fefcd":"df_std = df.std()\ndf_std = df_std.sort_values(ascending = True)\ndf_std","067cd823":"df['protocol_type'].value_counts()","0f3f4b78":"pmap = {'icmp':0,'tcp':1,'udp':2}\ndf['protocol_type'] = df['protocol_type'].map(pmap)","1b075d9a":"df['flag'].value_counts()","41a84dcc":"fmap = {'SF':0,'S0':1,'REJ':2,'RSTR':3,'RSTO':4,'SH':5 ,'S1':6 ,'S2':7,'RSTOS0':8,'S3':9 ,'OTH':10}\ndf['flag'] = df['flag'].map(fmap)","dd2fe846":"df.drop('service',axis = 1,inplace= True)","39f6a6b7":"df.shape","4e370b85":"df.head()","10f4ac07":"df.dtypes","f9272a23":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import accuracy_score","4f355557":"df = df.drop(['deu_ruim_ou_nao',], axis=1)\nprint(df.shape)\n\nY = df[['Attack Type']]\nX = df.drop(['Attack Type',], axis=1)\n\nsc = MinMaxScaler()\nX = sc.fit_transform(X)\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.33, random_state=42)\nprint(X_train.shape, X_test.shape)\nprint(Y_train.shape, Y_test.shape)","cb860c20":"from sklearn.tree import DecisionTreeClassifier","25c440f5":"model = DecisionTreeClassifier(criterion=\"entropy\", max_depth = 4)","5a43d87f":"start_time = time.time()\nmodel.fit(X_train, Y_train.values.ravel())\nend_time = time.time()","f3e4b8f2":"print(\"Tempo de treinamento: \",end_time-start_time)","178d6701":"start_time = time.time()\nY_test_pred2 = model.predict(X_test)\nend_time = time.time()","0c520652":"print(\"Tempo de teste: \",end_time-start_time)","1a4108ae":"print(\"Score de treinamento:\", model.score(X_train, Y_train))\nprint(\"Score de teste:\",model.score(X_test,Y_test))","26c84aeb":"### As vari\u00e1veis com correla\u00e7\u00e3o muito alta precisam ser ignoradas durante a an\u00e1lise para n\u00e3o gerar resultados muito previs\u00edveis","0f3ee275":"### Tipo de ataque\nPego os tipos de ataque no dataset no arquivo \"training_attack_types\"","7bf16872":"### Contar as incid\u00eancias de todos os ataques","ee24c74b":"### Treinar o modelo","32076f13":"### Atribui\u00e7\u00e3o da \u00e1rvore de decis\u00e3o a vari\u00e1vel model","23f49384":"# Trabalho final de M\u00e9todos de Autentica\u00e7\u00e3o e Seguran\u00e7a em Redes\n### Proposta: mecanismo baseado em alguma t\u00e9cnica conhecida para detectar comportamentos an\u00f4malos em um dataset de forma offline.\n### Trabalho baseado nos notebooks:\n#### https:\/\/www.kaggle.com\/abhaymudgal\/intrusion-detection-system-accuracy-99-9\n#### https:\/\/www.kaggle.com\/dincernal\/kdd99-modelgelistirme\n#### https:\/\/github.com\/jeffheaton\/t81_558_deep_learning\/blob\/ef3e8eeb03917603aa0ef6eceda64ed6e8a45e19\/t81_558_class_14_03_anomaly.ipynb\n#### https:\/\/www.geeksforgeeks.org\/intrusion-detection-system-using-machine-learning-algorithms\/\n#### https:\/\/www.kaggle.com\/soujanyag\/good-bad-connections-network-intrusion-tf","ffa01eb9":"### Separar amostra para treino e teste","8653e09c":"## Achar colunas decisivas\n","0f160a5f":"### Tamb\u00e9m precisamos adicionar a colana de tipos de ataques","ec7e8d97":"#### \u00c1rvore de decis\u00e3o","bab538ad":"### Adicionar heads faltantes\nComo observado no input anterior os heads das colunas est\u00e3o faltando, tamb\u00e9m \u00e9 feito remover nos valores faltantes.","4f3e01c1":"### Imprimir tipo de dado e coluna","90b21e31":"### Contar valores e alterar valores nominais para num\u00e9ricos","7804ce4d":"### Contar de incid\u00eancias de ataques","65716f58":"### Modelagem","89f60fa7":"### Ordenar desvio padr\u00e3o","c9654a68":"### Testar o modelo","75fb993f":"### Ler arquivo que cont\u00e9m 10% do datset","744b43aa":"### Visualiza\u00e7\u00e3o","6310ffe0":"### Ver todos arquivos dispon\u00edveis no dataset","72b79df5":"### Analisar correla\u00e7\u00e3o das colunas","75f3ab2c":"### Encontrando valores faltantes de todas as features\nComo n\u00e3o h\u00e1 valores faltantes, podemos continuar!","cde0684e":"### Mapa de calor"}}