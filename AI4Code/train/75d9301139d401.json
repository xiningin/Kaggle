{"cell_type":{"eb9c2b22":"code","77353a1f":"code","b4768345":"code","d6346d7e":"code","8ab5533a":"code","1ac04fbe":"code","d9ae025d":"code","045dacaf":"code","e87fe68b":"code","4ac448b8":"code","221d0531":"code","b306e4fa":"code","f7bc3090":"code","00b7267f":"code","84c8aa0d":"code","78b88cad":"code","91ab8924":"code","8a3df971":"code","ca0a9355":"code","46a9b86b":"code","a3e8940a":"code","e077d122":"code","cd4b7375":"code","097a9167":"code","4b6e7538":"markdown","d613c179":"markdown","4375d87a":"markdown","74a34a59":"markdown","e70cfbbe":"markdown","d75ca9ce":"markdown","002cfc83":"markdown"},"source":{"eb9c2b22":"# Import the libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","77353a1f":"# import the data\ndata = pd.read_csv('..\/input\/social-network-ads\/Social_Network_Ads.csv')\ndata","b4768345":"data.isnull().sum()","d6346d7e":"# independent\nX = data[['Age','EstimatedSalary']]\nX","8ab5533a":"# Dependent\nY = data['Purchased']\nY","1ac04fbe":"X","d9ae025d":"from sklearn.preprocessing import StandardScaler","045dacaf":"sc = StandardScaler()","e87fe68b":"X = sc.fit_transform(X)\nX","4ac448b8":"from sklearn.model_selection import train_test_split","221d0531":"train_x,test_x,train_y,test_y = train_test_split(X, Y, test_size=0.3, random_state=99)","b306e4fa":"train_x.shape, train_y.shape, test_x.shape, test_y.shape","f7bc3090":"from sklearn.linear_model import LogisticRegression","00b7267f":"lr = LogisticRegression()","84c8aa0d":"lr.fit(train_x,train_y)","78b88cad":"y_pred = lr.predict(test_x)\ny_pred","91ab8924":"result = pd.DataFrame({'Actual' : test_y, 'Predicted' : y_pred})\nresult","8a3df971":"lr.score(test_x,test_y)","ca0a9355":"from sklearn.metrics import accuracy_score, confusion_matrix","46a9b86b":"accuracy_score(test_y,y_pred)","a3e8940a":"confusion_matrix(test_y,y_pred)","e077d122":"from matplotlib.colors import ListedColormap\ndef plot(X,y,mset):\n    p=['Not Purchased','Purchased']\n    X1, X2 = np.meshgrid(np.arange(start = X[:, 0].min() - 1, stop = X[:, 0].max() + 1,   step = 0.01),\n                         np.arange(start = X[:, 1].min() - 1, stop = X[:, 1].max() + 1, step = 0.01))\n\n    #To plot boundaries\n    #In general, the space is divided into decision boundaries\n    plt.figure(figsize=(8,6))\n    plt.contourf(X1, X2, lr.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n                 alpha = 0.75, cmap = ListedColormap(('#F1674F', '#BEDDB7')))\n\n    plt.xlim(X1.min(), X1.max())\n    plt.ylim(X2.min(), X2.max())\n\n    for i, j in enumerate(set(y)):\n        plt.scatter(X[y == j, 0], X[y == j, 1],\n                    c = ['#F84C51', '#23807A'][i], label = p[j])\n    plt.title('Logistic Regression ('+mset+')')\n    plt.xlabel('Age')\n    plt.ylabel('Estimated Salary')\n    plt.legend()\n    return plt","cd4b7375":"y_pred=lr.predict(train_x)\nplt.show(plot(train_x,y_pred,'Training Set'))","097a9167":"y_pred=lr.predict(test_x)\nplt.show(plot(test_x,y_pred,'Training Set'))","4b6e7538":"We can see that our values are scaled properly now we will divide the data into training and testing data.","d613c179":"Now we will perform Logistic regression on our data\n","4375d87a":"Now we will check that if there are any null values in the dataset","74a34a59":"We will check the accuracy with the help of score, accuracy score and confusion matrix","e70cfbbe":"There is no null data in the dataset. Now we will divide the data into independent and dependent variable","d75ca9ce":"We are able to see that we have got 86% accuracy . Let us understand the same by visualization","002cfc83":"We can see that there is a lot of difference in the values of Age and EstimatedSalary, so we scale the values using standardscaler, this is done for better model performance , The mean should be near to 0 and standard deviation should be near 1 before training the model which is ensured by this."}}