{"cell_type":{"f6fc6be9":"code","4fbe33f0":"code","0d3bd396":"code","5c4b7c0c":"code","6fb12084":"code","0db5973c":"code","d11622ce":"code","0b3f3cb8":"code","77c64c92":"code","26a852c2":"code","ad92adca":"markdown","c29b5508":"markdown","1dd3ead8":"markdown","5a789973":"markdown","f7d149c5":"markdown","fba5fa91":"markdown","6a48c155":"markdown","c1b6277e":"markdown","d369611c":"markdown"},"source":{"f6fc6be9":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4fbe33f0":"with open(\"..\/input\/glove-global-vectors-for-word-representation\/glove.6B.50d.txt\") as file:\n    data = file.readlines()","0d3bd396":"len(data)","5c4b7c0c":"for i in range(len(data)):\n    data[i] = data[i][:-1]","6fb12084":"data_dict = dict()\n\nfor i in range(len(data)):\n    split_data = data[i].split()\n    data_dict[split_data[0]] = np.array(split_data[1:]).astype('float64')","0db5973c":"data_dict[\"the\"]","d11622ce":"def cosine_similarity(a, b):\n    nominator = np.dot(a, b)\n    \n    a_norm = np.sqrt(np.sum(a**2))\n    b_norm = np.sqrt(np.sum(b**2))\n    \n    denominator = a_norm * b_norm\n    \n    cosine_similarity = nominator \/ denominator\n    \n    return cosine_similarity","0b3f3cb8":"table = data_dict[\"table\"]\ndesk = data_dict[\"desk\"]\nfootball = data_dict[\"football\"]\nbaseball = data_dict[\"baseball\"]\nwater = data_dict[\"water\"]\nfire = data_dict[\"fire\"]\ncomputer = data_dict[\"computer\"]\ncalculator = data_dict[\"calculator\"]\nnumber = data_dict[\"number\"]\nmath = data_dict[\"math\"]\nboy = data_dict[\"boy\"]\ngirl = data_dict[\"girl\"]\nsad = data_dict[\"sad\"]\nhappy = data_dict[\"happy\"]\ngood = data_dict[\"good\"]\nbad = data_dict[\"bad\"]\nturkey = data_dict[\"turkey\"]\ntelevision = data_dict[\"television\"]\nawesome = data_dict[\"awesome\"]\ngreat = data_dict[\"great\"]\ncoffee = data_dict[\"coffee\"]\ngiraffe = data_dict[\"giraffe\"]\ncat = data_dict[\"cat\"]\nbarcelona = data_dict[\"barcelona\"]\nschool = data_dict[\"school\"]\ndisaster = data_dict[\"disaster\"]\n\nprint(f\"Cosine similarity for pair (table, desk) = {cosine_similarity(table, desk)}\")\nprint(f\"Cosine similarity for pair (football, baseball) = {cosine_similarity(football, baseball)}\")\nprint(f\"Cosine similarity for pair (water, fire) = {cosine_similarity(water, fire)}\")\nprint(f\"Cosine similarity for pair (computer, calculator) = {cosine_similarity(computer, calculator)}\")\nprint(f\"Cosine similarity for pair (number, math) = {cosine_similarity(number, math)}\")\nprint(f\"Cosine similarity for pair (boy, girl) = {cosine_similarity(boy, girl)}\")\nprint(f\"Cosine similarity for pair (sad, happy) = {cosine_similarity(sad, happy)}\")\nprint(f\"Cosine similarity for pair (good, bad) = {cosine_similarity(good, bad)}\")\nprint(f\"Cosine similarity for pair (turkey, television) = {cosine_similarity(turkey, television)}\")\nprint(f\"Cosine similarity for pair (awesome, great) = {cosine_similarity(awesome, great)}\")\nprint(f\"Cosine similarity for pair (coffee, giraffe) = {cosine_similarity(coffee, giraffe)}\")\nprint(f\"Cosine similarity for pair (cat, barcelona) = {cosine_similarity(cat, barcelona)}\")\nprint(f\"Cosine similarity for pair (school, disaster) = {cosine_similarity(school, disaster)}\")","77c64c92":"def find_word(a, b, c, data_dict):\n    a, b, c = a.lower(), b.lower(), c.lower()\n    a_vector, b_vector, c_vector = data_dict[a], data_dict[b], data_dict[c]\n    \n    all_words = data_dict.keys()\n    max_cosine_similarity = -1000\n    best_match_word = None\n    \n    for word in all_words:\n        if word in [a, b, c]:\n            continue\n            \n        cos_sim = cosine_similarity(np.subtract(b_vector, a_vector), np.subtract(data_dict[word], c_vector))\n        \n        if cos_sim > max_cosine_similarity:\n            max_cosine_similarity = cos_sim\n            best_match_word = word\n            \n    return best_match_word, cos_sim","26a852c2":"words_bag = [\n    ('boy', 'girl', 'man'),\n    ('bat', 'baseball', 'ball'),\n    ('book', 'library', 'coffee'),\n    ('orange', 'juice', 'apple'),\n    ('turkey', 'turkish', 'colombia')\n]\n\nfor words in words_bag:\n    d, cos_sim = find_word(*words, data_dict)\n    print(\"({}, {}) ----> ({}, {}) with {} difference\".format(*words, d, cos_sim))","ad92adca":"### Word Analogies","c29b5508":"## What is Cosine Similarity?","1dd3ead8":"Now we will try to find a word that associates the other three words according to their analogies. For example; \n<br>\n* (a, b) ---> (c, _) we'll try to find 'd'","5a789973":"### Prepare Data","f7d149c5":"For example 'boy' and 'girl' have very high similarity but 'coffe' and 'giraffe' has almost 0 similarity.","fba5fa91":"Let's say A and B are text vectors then we will calculate the similarity by using formula below.\n<br>\n![image.png](attachment:image.png)","6a48c155":"### Cosine Similarity Example","c1b6277e":"For finding it we'll look if similarities (a,b) is like (c,d) by calculating differences of their similarities.\n<br>\n![image.png](attachment:image.png)\n<br>\n","d369611c":"Cosine similarity intended to formulate the similarity between two different text via the cosine function in trigonometry. In this approach, where the texts are considered as vectors the relationship of the two vectors to each other is expressed at an angle. For two vectors that are completely identical, the cosine similarity will be 1. For vectors that are completely unrelated, this value will be 0. If there is an opposite relationship between the two vectors, this time the cosine similarity value will be -1. (cos0 = 1, cos90 = 0, cos180 = -1)\n<br>\n![image.png](attachment:image.png)"}}