{"cell_type":{"84f9bf42":"code","2a0e2211":"code","273db1fd":"code","600354e9":"code","f9d5f78c":"code","c59abd7d":"code","f49451d4":"code","d210a20f":"code","727ea4b4":"code","accca45e":"code","f2cb42b6":"code","e39c86d1":"code","97211406":"code","cfa0eba6":"code","e45bfb96":"code","7232b8e6":"code","56b0c13b":"code","e5eb3294":"code","181b3a63":"code","35e56670":"code","e08ae3c6":"code","0ef5eb00":"markdown","d2521713":"markdown","3cd166a7":"markdown","8c120f61":"markdown","c1e99ad6":"markdown","b0e3f852":"markdown"},"source":{"84f9bf42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2a0e2211":"#### Read the data\ntrain = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nsubmission = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_categories = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\n","273db1fd":"train.head()","600354e9":"test.head()","f9d5f78c":"items.head()","c59abd7d":"item_categories.head()","f49451d4":"shops.head()","d210a20f":"print(submission.shape)\nsubmission.head()","727ea4b4":"### Import Libraries\n### Importing the libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n%matplotlib inline\n\nfrom  sklearn.model_selection import train_test_split , StratifiedKFold\n\nimport warnings \nwarnings.simplefilter('ignore')","accca45e":"#### Get Basic Details of the data files\nprint('Train data Shape : ' , train.shape)\nprint('Test data Shape : ' , test.shape)\nprint('Submission data Shape : ' , submission.shape)\nprint('shops data Shape : ' , shops.shape)\nprint('items data Shape : ' , items.shape)\nprint('items_categories data Shape : ' , item_categories.shape)\n\nprint('#########################################')\nprint('Null Data Details - Train data')\nprint(train.isnull().sum())\n\nprint('#########################################')\nprint('Null Data Details - Test data')\nprint(test.isnull().sum())\n\nprint('#########################################')\nprint('Null Data Details - shops data')\nprint(shops.isnull().sum())\n\nprint('#########################################')\nprint('Null Data Details - items data')\nprint(items.isnull().sum())\n\nprint('#########################################')\nprint('Null Data Details - item_categories data')\nprint(item_categories.isnull().sum())","f2cb42b6":"print('Train Data Set -- >')\nprint(train.info())\nprint('######################################')\nprint('Test Dataset ====> ')\nprint(test.info())\nprint('######################################')\nprint('shops Dataset ====> ')\nprint(shops.info())\nprint('######################################')\nprint('items Dataset ====> ')\nprint(items.info())\nprint('######################################')\nprint('item_categories Dataset ====> ')\nprint(item_categories.info())\n","e39c86d1":"items_new = items.merge(item_categories , on='item_category_id')\nprint(items_new.shape , items.shape)\nitems_new.head()","97211406":"train_new = train.merge(shops , on='shop_id')\nprint(train_new.shape , train.shape)\ntrain_new = train_new.merge(items_new , on = 'item_id')\nprint(train_new.shape)\ntrain_new.head()\n","cfa0eba6":"test_new = test.merge(shops , on='shop_id')\nprint(test_new.shape , test.shape)\n\ntest_new = test_new.merge(items_new , on = 'item_id')\nprint(test_new.shape)\ntest_new.head()","e45bfb96":"numerical = [features for features in train_new.columns if train_new[features].dtypes != 'O']\ncategorical = [features for features in train_new.columns if train_new[features].dtypes == 'O']\nprint('Numerical features are : \\n' + str(numerical))\nprint('Categorical features are : \\n' + str(categorical))","7232b8e6":"contineous = [features for features in numerical if train_new[features].dtypes == 'float64']\ncontineous","56b0c13b":"Discrete = [features for features in numerical if train_new[features].dtypes == 'int64']\nDiscrete","e5eb3294":"## PLot Histogram for all Numerical features\ndef plt_hist(feature_lst):\n    for feature in feature_lst:\n        plt.hist(train_new[feature])\n        plt.xlabel(feature)\n        plt.ylabel(\"Count of\" + feature)\n        plt.title(feature)\n        plt.show()","181b3a63":"plt_hist(Discrete)","35e56670":"#### PLot the trend chart for the item count - Jan2013 to October 2015\nfig = train_new.groupby(['date_block_num'])['item_cnt_day'].sum().plot(\n    figsize=(14, 8), linewidth=2)\n\nfig.set_title('item_cnt_day in time')\nfig.set_ylabel('item_cnt_day')\nplt.xticks(np.arange(0, 35, 1))\nplt.show()","e08ae3c6":"#### PLot the trend chart for the item count - Jan2013 to October 2015\nfig = train_new.groupby(['date_block_num' , 'shop_name'])['item_cnt_day'].sum().unstack().plot(\n    figsize=(14, 8), linewidth=2)\n\nfig.set_title('item_cnt_day in time')\nfig.set_ylabel('item_cnt_day')\nplt.xticks(np.arange(0, 35, 1))\nplt.show() ","0ef5eb00":"### Observations\n1. Dec 2013 , Dec2014 sale goes very high \n2. As per trend , Sale is decresing every year ","d2521713":"Numerical Data Analysis -->\n","3cd166a7":"In progress... ","8c120f61":"## EDA -->\n#### Feature Type Identification\nLets find numerical and categorical features ","c1e99ad6":"### based on relationship between tables lets merge the dataset \n","b0e3f852":"There are no null records in train or test data set \n### Data Analysis  -->"}}