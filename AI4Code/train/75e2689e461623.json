{"cell_type":{"51c025bc":"code","10f1d5e9":"code","5e653a07":"code","981c7e0e":"code","9a181312":"code","cde1c054":"code","0c9211b6":"code","3308f01c":"code","1c7d936c":"code","1b46a4c4":"code","182f9572":"code","53d397af":"code","d1531df2":"code","c17fadd6":"code","104b27c9":"code","f185b351":"markdown","fc4e05ad":"markdown","a3413ed1":"markdown","cc79cc8b":"markdown","60e2815a":"markdown","081b2746":"markdown","ddc80966":"markdown","0e6e8b15":"markdown","74850e43":"markdown","d1a07a5e":"markdown","acc8f9f1":"markdown","fdac1040":"markdown","6f55d2a5":"markdown"},"source":{"51c025bc":"import numpy as np\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom IPython.display import display, HTML\nimport matplotlib\nimport squarify\nimport matplotlib.pyplot as plt\nimport seaborn as sns","10f1d5e9":"kaggle_survey_df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nkaggle_survey_df.loc[1:,]['Time from Start to Finish (seconds)'] = kaggle_survey_df.loc[1:,]['Time from Start to Finish (seconds)'].astype(float)\nkaggle_survey_datamatrix = kaggle_survey_df.loc[1:,]\nkaggle_survey_datamatrix.head(5)","5e653a07":"column_metadata_df = kaggle_survey_df.head(1).T\ncolumn_metadata_df.reset_index(inplace = True)\ncolumn_metadata_df.rename(columns = {'index':'ColumnName',0:'ColumnInfo'},inplace = True)\n# column_metadata_df","981c7e0e":"plt.figure(figsize=(12,10))\nsns.set_style('whitegrid')\nplt.tight_layout()\nplt.suptitle('Demographics of the Data Science Enthusiasts',fontsize=25, y=1)\n\nplt.subplot(1,2,1);\nax = sns.countplot(y=\"Q1\", data=kaggle_survey_datamatrix.sort_values(by = 'Q1',ascending=True),palette=\"Set3\")\nax.set(ylabel='Age Group', xlabel='Number of Data Science Enthusiasts')\nax.set_title(\"What are the age groups the \\n Data Science Enthusiasts belong to?\",fontsize=15)\nsns.despine(offset=10, trim=True)\n\nplt.subplot(2,2,2);\ngender_dict = kaggle_survey_datamatrix['Q2'].value_counts().to_dict()\nexplode = (0, 0, 0.1, 0.3, 0.6)\nplt.pie(x=gender_dict.values(),colors=sns.color_palette('Set2')[0:len(gender_dict.values())],explode = explode,\n       autopct='%.2f%%', pctdistance=1.1, labeldistance=1.2)\nplt.axis('equal')\nplt.title('What gender do the Data Science Enthusiasts fall into?',fontsize=15)\nplt.legend(labels=gender_dict.keys(),bbox_to_anchor=(1,0.8), loc='upper left',fontsize=10,title = 'Gender')\n\nplt.subplot(2,2,4);\nax = sns.countplot(y=\"Q4\", data=kaggle_survey_datamatrix, palette=\"Set3\")\nax.set(ylabel='Formal Education (Attained or Planned to)', xlabel='Number of Data Science Enthusiasts')\nax.yaxis.tick_right()\nax.set_title(\"How educated are the Data Science Enthusiasts?\", fontsize=15)\nsns.despine(offset=10, trim=True)\n\nplt.subplots_adjust(wspace=0.5)\nplt.show()","9a181312":"plt.figure(figsize=(12,7))\nsns.set_style('whitegrid')\nplt.tight_layout()\nplt.suptitle('Experience of the Data Science Enthusiasts \\n\\n',fontsize=25, y=1)\n\nplt.subplot(1,2,1);\nax = sns.countplot(x=\"Q5\", data=kaggle_survey_datamatrix, palette=\"Set3\")\nax.set(xlabel='Profession', ylabel='Number of Data Science Enthusiasts')\nax.set_title(\"\\n Profession (current or recent if retired)\", fontsize=15)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n\nplt.subplot(1,2,2);\nax = sns.countplot(y=\"Q6\", data=kaggle_survey_datamatrix, palette=\"Set3\")\nax.set(ylabel='Coding\/Programming Experience (in years)', xlabel='Number of Data Science Enthusiasts')\nax.set_title(\"\\n Years of practicing coding or programming\", fontsize=15)\nax.yaxis.tick_right()\n\nplt.subplots_adjust(wspace=0.5)\nplt.show()","cde1c054":"plt.figure(figsize=(15,10))\nsns.set_style('whitegrid')\nplt.tight_layout()\nplt.suptitle('What are the countries our Data Science Enthusiasts belong to?',fontsize=20,fontweight=\"bold\")\nax = sns.countplot(x=\"Q3\", data=kaggle_survey_datamatrix,palette=\"Set3\",\n                  order = kaggle_survey_datamatrix['Q3'].value_counts().index)\nax.set(xlabel='Country', ylabel='Number of Data Enthusiasts')\nax.set_yscale(\"log\")\nax.set_title(\"According to TOI, Data Science has emerged as an attractive career option among the freshers as well as experienced professionals in India.\\nMost of the organizations have been adopting nnew technologies that neccessitates the need to have a data scientist aboard\\nto be able to analyse the data extensively so as to draw meaningful insights.\",fontsize=12)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n# plt.text(20, 5050,\"According to TOI, Data Science has emerged as an attractive career option among the freshers\\nas well as experienced professionals in India. Most of the organizations\\nhave been adopting new technologies that neccessitates the need to\\nhave a data scientist aboard to be able to analyse the data\\nextensively so as to draw meaningful insights.\")\nplt.show()","0c9211b6":"def create_category_wise_countplot_df(df,column_pattern,across_cols = True):\n    if across_cols == True:\n        subset_df = df[df.filter(like = column_pattern).columns].describe()\n        count_df = subset_df.T[['top','count']].reset_index(drop=True).rename(columns = {'top':'index'})\n    else:\n        count_df = df[df.filter(like = column_pattern).columns][column_pattern].value_counts().to_frame().reset_index()\n        count_df.rename(columns={ count_df.columns[1]: \"count\" },inplace = True)\n    return(count_df)","3308f01c":"reg_prog_lang_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q7',across_cols=True)\nfirst_prog_lang_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q8',across_cols=False)\n\nplt.figure(figsize=(12,7))\nsns.set_style('whitegrid')\nplt.tight_layout()\nplt.suptitle('In their words - What is the go-to programming language? \\n\\n',fontsize=25, y=1)\n\nplt.subplot(1,2,1);\ntotal = reg_prog_lang_count_df['count'].sum()\nvalues = reg_prog_lang_count_df.sort_values('index')['count'].astype('int')\ncolors = ['#9ecae1' if (x < max(values)) else '#3182bd' for x in values ]\nax = sns.barplot(x=\"count\", y=\"index\", data=reg_prog_lang_count_df.sort_values('index'),palette=colors)\nax.set(ylabel='Programming Language', xlabel='# Data Science Enthusiasts')\nax.set_title(\"Regularly used Programming Language\", fontsize=15)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_width()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\n\nplt.subplot(1,2,2);\ntotal = first_prog_lang_count_df['count'].sum()\nvalues = first_prog_lang_count_df.sort_values('index')['count'].astype('int')\ncolors = ['#9ecae1' if (x < max(values)) else '#3182bd' for x in values ]\nax = sns.barplot(x=\"count\", y=\"index\", data=first_prog_lang_count_df.sort_values('index'),palette=colors)\nax.set(ylabel='Programming Language', xlabel='# Data Science Enthusiasts')\nax.set_title(\"Recommened Programming Language\", fontsize=15)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n# ax.yaxis.tick_right()\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_width()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\n\nplt.subplots_adjust(wspace=0.5)\nplt.show()","1c7d936c":"plt.figure(figsize=(16,10))\nsns.set_style('whitegrid')\nplt.tight_layout()\nplt.suptitle('C for Code, C for Comfort',fontsize=25, y=1)\n\nide_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q9',across_cols=True)\nnb_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q10',across_cols=True)\n\nplt.subplot(1,2,1);\nide_dict = dict(zip(ide_count_df['index'],ide_count_df['count']))\nsquarify.plot(sizes = ide_dict.values(),label=ide_dict.keys(),color=sns.color_palette('Set2')[0:len(ide_dict.values())],alpha = 0.7,\n             text_kwargs={'rotation':90})\nplt.axis('off')\nplt.title(\"Integrated Development Environments (IDEs) of choice\", fontsize=15)\n\nplt.subplot(1,2,2);\ntotal = nb_count_df['count'].sum()\nax = sns.barplot(x=\"count\", y=\"index\", data=nb_count_df.sort_values('index'),palette='Set3')\nax.set(ylabel='Notebook Product', xlabel='# Data Science Enthusiasts')\nax.set_title('Hosted Notebook Product of choice',fontsize=15)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n# ax.yaxis.tick_right()\nsns.despine(offset=10, trim=True)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_width()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\n\nplt.subplots_adjust(wspace=0.8)\nplt.show()","1b46a4c4":"plt.figure(figsize=(12,10))\nsns.set_style('whitegrid')\nplt.tight_layout()\nplt.suptitle('Computing Platforms and Specialized Hardwares',fontsize=25, y=1)\nplt.title('Not all have access to cloud computing platforms or workstations, and that for simple tasks or day-to-day activities \\nlocal systems are the most prevalent option')\n\ncompute_platform_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q11',across_cols=False)\nspecial_hw_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q12',across_cols=True)\ntpu_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q13',across_cols=False).reindex([0,2,1,3,4])\n\nplt.subplot(1,2,1);\n# total = nb_count_df['count'].sum()\nax = sns.barplot(x=\"count\", y=\"index\", data=compute_platform_count_df.sort_values('index'),palette='Set3')\nax.set(ylabel='Computing Platform', xlabel='# Data Science Enthusiasts')\nax.set_title('Computing Platform preferred',fontsize=15)\nax.set_yticklabels(['A cloud computing platform \\n (AWS, Azure, GCP, hosted notebooks, etc)',\n 'A deep learning workstation \\n (NVIDIA GTX, LambdaLabs, etc)',\n 'A personal computer or laptop',\n 'None',\n 'Other'])\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nsns.despine(offset=10, trim=True)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_width()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\n\nplt.subplot(2,2,2);\nspecial_hw_dict = dict(zip(special_hw_count_df['index'],special_hw_count_df['count']))\nplt.pie(x=special_hw_dict.values(),colors=sns.color_palette('Set2')[0:len(special_hw_dict.values())],\n       autopct='%.2f%%', pctdistance=1.1, labeldistance=1.2)\nplt.axis('equal')\nplt.title('In case, specialized hardwares are used - \\n What are they?',fontsize=15)\nplt.legend(labels=special_hw_dict.keys(),bbox_to_anchor=(1,0.8), loc='upper left',fontsize=10,title = 'Special Hardware')\n\nplt.subplot(2,2,4);\nax = sns.lineplot(data=tpu_count_df, x=\"index\", y=\"count\",sort = False)\nax.set(xlabel='Frequency', ylabel='Number of Data Science Enthusiasts')\nax.set_title(\"If TPUs were used - \\n How many times they were?\", fontsize=15)\nax.set_xticklabels(tpu_count_df['index'], rotation=45)\n\nplt.subplots_adjust(wspace=0.5)\nplt.show()","182f9572":"plt.figure(figsize=(16,10))\nplt.tight_layout()\n\nviz_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q14',across_cols=True)\nviz_dict = dict(zip(viz_count_df['index'],viz_count_df['count']))\nsquarify.plot(sizes = viz_dict.values(),label=viz_dict.keys(),color=sns.color_palette('Set3')[0:len(viz_dict.values())],alpha = 0.7,\n             text_kwargs={'fontweight':'semibold','fontsize':12})\nplt.title(\"Go-to Visualization Libraries \\n\",fontsize=20,fontweight=\"bold\")\nplt.axis('off')\nplt.show()","53d397af":"plt.figure(figsize=(16,10))\nplt.tight_layout()\nplt.suptitle('How much coding experience is required to do ML?',fontsize=25, y=1)\ncoding_ml_exp_df = kaggle_survey_datamatrix.rename(columns = {'Q6':'Coding Experience',\n                                            'Q15':'ML Experience'}).groupby(['Coding Experience',\n                                            'ML Experience']).size().unstack().replace(np.nan, 0).astype('int')\ncoding_ml_exp_df = coding_ml_exp_df.reindex(['< 1 years','1-2 years','3-5 years','5-10 years','10-20 years','20+ years'])\ncol_order = ['Under 1 year','1-2 years','2-3 years','3-4 years','4-5 years','5-10 years','10-20 years','20 or more years','I do not use machine learning methods']\ncoding_ml_exp_df = coding_ml_exp_df[col_order]\nax = sns.heatmap(coding_ml_exp_df, square=True, linewidth=.5, cmap='YlGnBu', cbar=False, annot=True, fmt=\"d\")\nplt.show()","d1531df2":"plt.figure(figsize=(6,8))\nsns.set_style('whitegrid')\nplt.tight_layout()\n\nml_frameworks_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q16',across_cols=True)\n\nax = sns.barplot(x=\"count\", y=\"index\", data=ml_frameworks_count_df.sort_values('count',ascending = False),palette='Set3')\nax.set(ylabel='ML Frameworks', xlabel='# Data Science Enthusiasts')\nax.set_title('What are the preferences in ML Frameworks?',fontsize=15)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nsns.despine(offset=10, trim=True)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_width()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))","c17fadd6":"plt.figure(figsize=(10,10))\nsns.set_style('whitegrid')\nplt.tight_layout()\nplt.suptitle('ML Algorithms & Methods\\n',fontsize=25, y=1)\n\nml_algo_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q17',across_cols=True)\ncomp_vision_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q18',across_cols=True)\nnlp_methods_count_df = create_category_wise_countplot_df(kaggle_survey_datamatrix,'Q19',across_cols=True)\n\nplt.subplot(1,2,1)\ntotal = ml_algo_count_df['count'].sum()\nax = sns.barplot(x=\"count\", y=\"index\", data=ml_algo_count_df.sort_values('index'),palette='Set3')\nax.set(ylabel='ML Algorithms', xlabel='# Data Science Enthusiasts')\nax.set_title('What are the preferred ML Algorithms?',fontsize=15)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nax.set_yticklabels(['Linear or Logistic Regression',\n 'Decision Trees or Random Forests',\n 'Gradient Boosting Machines\\n(xgboost, lightgbm, etc)',\n 'Bayesian Approaches',\n 'Evolutionary Approaches',\n 'Dense Neural Networks (MLPs, etc)',\n 'Convolutional Neural Networks',\n 'Generative Adversarial Networks',\n 'Recurrent Neural Networks',\n 'Transformer Networks\\n(BERT, gpt-3, etc)',\n 'None',\n 'Other'])\nsns.despine(offset=10, trim=True)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_width()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\n        \nplt.subplot(2,2,2)\ncomp_vision_count_dict = dict(zip(comp_vision_count_df['index'],comp_vision_count_df['count']))\nlabels = ['General purpose image\/video tools\\n(PIL, cv2, skimage, etc)', 'Image segmentation methods\\n(U-Net, Mask R-CNN, etc)',\n                 'Object detection methods\\n(YOLOv3, RetinaNet, etc)',\n                 'Image classification and other\\ngeneral purpose networks (VGG, Inception,\\nResNet, ResNeXt, NASNet, EfficientNet, etc)',\n                 'Generative Networks (GAN, VAE, etc)', 'None', 'Other']\nplt.pie(x=comp_vision_count_dict.values(),labels=labels,colors=sns.color_palette('Set2')[0:len(comp_vision_count_dict.values())],\n        labeldistance=1.2,startangle=180)\nplt.axis('equal')\nplt.title('What are the Computer Vision Methods used?',fontsize=15)\n\nplt.subplot(2,2,4)\nnlp_methods_count_df = nlp_methods_count_df.sort_values(by='count')\ndef_range=range(1,len(nlp_methods_count_df.index)+1)\nplt.hlines(y=def_range, xmin=0, xmax=nlp_methods_count_df['count'], color='skyblue')\nplt.plot(nlp_methods_count_df['count'], def_range, \"o\")\nplt.yticks(def_range, ['Other',\n 'Contextualized embeddings\\n(ELMo, CoVe)',\n 'None',\n 'Transformer language models\\n(GPT-3, BERT, XLnet, etc)',\n 'Encoder-decorder models\\n(seq2seq, vanilla transformers)',\n 'Word embeddings\/vectors\\n(GLoVe, fastText, word2vec)'])\nsns.despine(offset=10, trim=True)\nplt.title(\"What are NLP Methods employed?\",fontsize=15)\nplt.xlabel('# Data Science Enthusiasts')\nplt.ylabel('Methods')\n\nplt.subplots_adjust(wspace=1.8)\nplt.show()","104b27c9":"kaggle_survey_datamatrix.rename(columns={'Q20':'Size of the company','Q21':'Folks involved in DS work'}).groupby([\"Size of the company\", \"Folks involved in DS work\"])[\"Size of the company\"].count().to_frame().rename(columns={'Size of the company':'# Data Science Enthusiasts'})","f185b351":"# Anybody can do Data Science!?\n> Data Science has seen a boom in recent years and has become the popular than ever for the fact that it is being applied in pretty much all sorts of industry with the increase in the adoption of cutting-edge technologies which are no longer exclusive to the companies with big names.<br><br>\nAll the domains from business to media to healthcare now revolve around data, and with the tsunami of data one might get drowned, and this where the science to deal with it comes into play... *drum rolls* ***DATA SCIENCE***<br><br>\nGiven how prevalent data has become, the need to potentially analyze and gain actionable insights out of it is crucial. This has lead to an increase in demand for data scientists, And that's how people from all walks of life be it freshers or professionals have stepped up and are exploring the ocean of oppurtunities that Data Science has to offer.\n\n![Image Source: freepik.com](https:\/\/i.imgur.com\/jS1kOS8.jpg)","fc4e05ad":"## What the most used libraries\/packages for data visualization?\n> Given that *Python* is one of the most widely used languages, we clearly see *Matplotlib* and *Seaborn* to be the go-to visualization libraries, followed by *Ggplot* and *Plotly* in R","a3413ed1":"> Observing the distribution based on gender, we find this field of Data Science to be **Male** dominant, *but excuse me:* Neither Women nor others are left far to behind!<br>","cc79cc8b":"## Is experience a must for practicing Data Science?\n> Looking at the professions of the individuals, we see majority of them as *Students*, followed by *Data Scientists* and *Software Engineers*. And, if we were to look at the years of coding or programming experience, we see a lot of them have somewhere ranging from 1 to 5 years, in same place we do see a bunch of them with an experience of 5-10 years and more.<br><br>\n*This conveys the message that one should have the interest and motivation which are the two key driving forces*","60e2815a":"## Work in progress. Feel free to upvote and give feedback.","081b2746":"> Speaking of the educational backgrounds, we see that majority of them have acquired formal education while we do see a lot of them contributing to this field out of curiosity","ddc80966":"## What comes out to be the most preferred programming language out of all?\n> *Python* wins the race!<br><br>","0e6e8b15":"## Loading the dataset","74850e43":"## Which country is leading in the number of Data Science Enthusiasts?\n> *Incredible INDIA!*","d1a07a5e":"## Where do you find the comfort for coding?\n> *Jupyter* and *VSCode* seem to be the go-to IDE among the Data Enthusiasts.<br><br>\nWhile, in terms of Hosted Notebook Product, *Collab* and *Kaggle Notebooks* are leading.","acc8f9f1":"## Machine Learning matters to the future of business\n### *Expect the best. Prepare for the worst. Capitalize on what comes.*\n> The cutting-edge technology is no longer exclusive to the BIG companies rather being adopted widely across all sorts of business. Now, this makes Data Science and Machine Learning to be a necessary skill for someone who aspires to step-in and do wonders.","fdac1040":"## Demographics of the Data Science Enthusiasts\n> Looking at the age groups to which the individuals belong, we see that they are somewhere between 18 to 29. While what's surprising to see is a considerable number of people in the age group more than 60. <br>\n**Age is just a number, guys! And, yes elderly are not boomer!**<br>","6f55d2a5":"## What are the computing platforms and specialized hardwares adopted?\n> We see that most individuals opt for their *personal computer or laptop* as default computing platform, followed by *cloud computing platforms* and *deep learning workstations*.<br>This rightly points us to the inference that not all have access to cloud computing platforms or workstations, and that for simple tasks or day-to-day activities local systems are the most prevalent option. Something that pretty much everyone has access to.<br><br>\nLooking into the specialized hardwares, we see a wide acceptance for *GPUs*"}}