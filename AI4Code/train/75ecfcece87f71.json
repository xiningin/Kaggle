{"cell_type":{"fad9ca87":"code","b6272d66":"code","40a207a6":"code","9ce348cd":"code","54b803a6":"code","f82cf351":"code","74785fa0":"code","0953ec88":"code","eac23a83":"code","0719aa1c":"code","31e51f32":"code","0d1e91f8":"code","6e8e547b":"code","14fc834b":"code","6dda50ba":"code","9155bd6b":"code","842330a5":"code","2102ed1d":"code","f23df6cc":"code","b3d1a282":"code","7ed8a80f":"code","d9e470d9":"code","1cd01517":"code","f02ab6cc":"code","276ee12e":"code","8570b408":"code","7d1ffec1":"code","5494fe39":"code","31fa2e1b":"code","01136ff6":"code","9149b019":"code","d2570884":"code","7d386e8d":"code","f073eb2f":"markdown","72321f30":"markdown","5ebe12a0":"markdown","2f0f2a92":"markdown","5243e856":"markdown","e30b923a":"markdown","d78fdd79":"markdown","3f93a1f3":"markdown","d4f3dc0d":"markdown","2fe2930b":"markdown","0510ab15":"markdown","e4b3d03a":"markdown","147ff51d":"markdown","438f8686":"markdown"},"source":{"fad9ca87":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport spacy\nimport re\nimport matplotlib.pyplot as plt\n!pip install spacytextblob==0.1.7\nfrom spacytextblob.spacytextblob import SpacyTextBlob","b6272d66":"df=pd.read_csv('..\/input\/reddit-vaccine-myths\/reddit_vm.csv')\ndf.head(20)","40a207a6":"df.drop(columns=['url','created','id'], inplace=True)\ndf.dropna(inplace=True)\ndf.head()","9ce348cd":"# Adding the nlp english language corpus\nnlp = spacy.load('en_core_web_sm')","54b803a6":"df['body'] = df['body'].apply(lambda x: re.split('https:\\\/\\\/.*', str(x))[0])","f82cf351":"df.dropna()\ndf.head()","74785fa0":"# Adding spacy textblob\nspacy_text_blob = SpacyTextBlob()\nnlp.add_pipe(spacy_text_blob)","0953ec88":"# print(nlp.pipe_names)\nfor index, row in df.iterrows():\n    text = row.body\n    doc = nlp(text)\n    subjectivity=doc._.sentiment.subjectivity\n    polarity= doc._.sentiment.polarity\n    print(text)\n    print(\"\\nsubjectivity:\", subjectivity)\n    print(\"polarity:\",polarity)\n    print(\"------------------------\")\n    df.loc[index, 'Polarity'] = polarity\n    df.loc[index,'Subjectivity']=subjectivity","eac23a83":"df.tail()","0719aa1c":"# Finding the no. of rows and columns\ndf.shape","31e51f32":"# Extracting a part of the main dataframe for analysis\ndf2=df.iloc[:,3:7]\ndf2.tail()","0d1e91f8":"text1='Earths mechanically rigid outer layer, the lithosphere, is divided into tectonic plates. These plates are rigid segments that move relative to each other at one of three boundaries types: at convergent boundaries, two plates come together; at divergent boundaries, two plates are pulled apart; and at transform boundaries, two plates slide past one another laterally. Along these plate boundaries, earthquakes, volcanic activity, mountain-building, and oceanic trench formation can occur.[115] The tectonic plates ride on top of the asthenosphere, the solid but less-viscous part of the upper mantle that can flow and move along with the plates'\ndoc = nlp(text1)\nsubjectivity=doc._.sentiment.subjectivity\npolarity= doc._.sentiment.polarity\nprint(\"Subjectivity:\",subjectivity,\"\\nPolarity:\",polarity)","6e8e547b":"# Iterating over the rows of new dataframe df2\nfor index, row in df2.iterrows():\n    #print(row.timestamp[0:4])\n    df2.loc[index, 'Year'] = row.timestamp[0:4] # Find the year\n    df2.loc[index,'Month']=row.timestamp[5:7] # Find the month\ndf2.head()","14fc834b":"df2.shape","6dda50ba":"# To remove the cases where subjectivity and polarity are both 0.000\n# Creating a new dataframe d4 (copy of d2)\ndf4=df2.copy()\nc=0;\nfor index, row in df4.iterrows():\n    if(row.Polarity==0.00 and row.Subjectivity==0.00):\n        c+=1\n        \nprint(\"No. of irrelevant values:\",c)","9155bd6b":"for index, row in df4.iterrows():\n    if(row.Polarity==0.00 and row.Subjectivity==0):\n        df4.drop(index, inplace=True)\ndf4.head()","842330a5":"df4.shape\n# It shows the total no. of available datapoints","2102ed1d":"sns.set_theme(style=\"darkgrid\") # Set a theme\nsns.set_palette(\"summer_r\",2) # Color, intensity\nsns.lineplot(x=\"Polarity\", y=\"Subjectivity\",data=df4) \nplt.title(\"Polarity vs Subjectivity\", size=20)\nplt.show()","f23df6cc":"sns.set_palette(\"magma_r\",2) # Color, intensity\nsns.lmplot(x=\"Polarity\", y=\"Subjectivity\",data=df4, line_kws={'color': 'Blue'})\nplt.title(\"Polarity vs Subjectivity\", size=20)\nplt.show()","b3d1a282":"# Creating a new dataframe to store polarity and month \ndf5=df4[['Polarity','Subjectivity','Month']]\ndf5=df4[['Month','Subjectivity','Polarity']].astype('float64')\ndf5.info()\nfig=sns.lmplot(x='Month',y='Polarity',data=df5)\nplt.title(\"Month vs Polarity\", size=20)\nplt.show()","7ed8a80f":"fig, ax = plt.subplots(figsize = ( 20,10 ))\nfig=sns.scatterplot(ax=ax,x='Polarity',y='Month',data=df5)\nplt.title(\"Month vs Polarity\", size=20)\nplt.show()","d9e470d9":"fig=sns.lmplot(x='Month',y='Subjectivity',data=df5)\nplt.title(\"Month vs Subjectivity\", size=20)\nplt.show()","1cd01517":"fig, ax = plt.subplots(figsize = ( 10,5 ))\nsns.scatterplot(ax=ax, x='Polarity', y='Subjectivity', data=df5)\nax.set_xlabel( \"Polarity\" , size = 12 )\nax.set_ylabel( \"Subjectivity\" , size = 12 )\nax.set_title( \"Polarity vs Subjectivity\" , size = 24)\nplt.show()","f02ab6cc":"df5.head()","276ee12e":"def getAnalysis(points):\n  if points<0:\n    return\"Negative\"\n  elif points==0:\n    return \"Neutral\"\n  else:\n    return \"Positive\"","8570b408":"pos=0;neg=0;neu=0\nfor index,row in df4.iterrows():\n    k=getAnalysis(df4.loc[index, 'Polarity'])\n    if(k=='Positive'):\n        pos+=1\n    elif(k=='Negative'):\n        neg+=1\n    else:\n        neu+=1\nprint(\"Positive comments\",pos)\nprint(\"Negative comments\",neg)\nprint(\"Neutral comments\",neu)","7d1ffec1":"df4['Analysis']=df4['Polarity'].apply(getAnalysis)\ndf4.head(10)","5494fe39":"sns.catplot(x='Polarity',y='Subjectivity',data=df4)","31fa2e1b":"sns.countplot(x='Analysis',data=df4)","01136ff6":"df.head()","9149b019":"df.sort_values(by=['comms_num'],ascending=False, inplace=True)\ndf.head(10)","d2570884":"sns.pairplot(df)","7d386e8d":"ax=sns.lineplot(x='score', y='comms_num',data=df)\nax.set(xlabel=\"Upvotes\", ylabel = \"Replies\",title='Representation of counts- Upvotes vs Replies')","f073eb2f":"## Finding the counts of Positive, Negative and Neutral comments","72321f30":"# Perform sentiment analysis","5ebe12a0":"## Visualising polarity vs subjectivity using Seaborn\nPolarity indicates the how positive or negative is the sentecne. It is a float value lying between [-1,1].\nSubjectivity refers to the extent of information it has. It lies between [0,1]. It may be factual information.\nE.g., The sun rises in the east is a subjective sentence\n\n","2f0f2a92":"# Reddit Vaccine Myths Sentiment Analysis","5243e856":"## To find how upvotes affects replies\n","e30b923a":"## Removal of hyperlinks\n Regex is used to remove hyperlinks in the text body","d78fdd79":"## Install the dependencies","3f93a1f3":"# Data Preprocessing\n### Remove the unrequired columns and drop columns with Null values ","d4f3dc0d":"Here, we see that majority of tweets are neutral for each month and the polarity lies around zero (between -0.25 and 0.25) From this we know that Myths revolving around the vaccines are relatively neutral.","2fe2930b":"## Finding post with most replies\nThe column 'comms_num' indicates the number of replies on each post in subreddit r\/VaccnineMyths. <br>\nThe column 'score' determines the number of upvotes to a post","0510ab15":"## Finding customer engagements with reddit comments","e4b3d03a":"## Removing the cases where polarity and subjectivity are irrelevant","147ff51d":"# Visualisations","438f8686":"Remember, df.iterrows() returns a copy of the row over which it is iterated. Any changes made to the row will not be reflected in original dataframe. So, we need to refer to the row with the returned index during iteration.\n\n\nhttps:\/\/stackoverflow.com\/questions\/25478528\/updating-value-in-iterrow-for-pandas"}}