{"cell_type":{"eb7f66d8":"code","9adf4c7c":"code","1b3be779":"code","3a2f41a0":"code","c6b2f43f":"code","ce5de54f":"code","49610c32":"code","2927dfcc":"code","b30a0ab4":"code","4aa4d59d":"code","eeb23572":"code","3586fad3":"code","5b7d83f7":"code","b9ea3283":"code","90402449":"code","7e678ffb":"code","e9b5d1f7":"code","40f4ab41":"code","6a547a7a":"code","1f7c547e":"code","a3bd1412":"code","29579a46":"code","91d4b7b8":"code","3ba856d6":"code","7542b110":"code","05841448":"code","2f32145d":"code","ea20a416":"code","4999d5e0":"code","d714fc43":"markdown","afaee08f":"markdown","2b4cb8cb":"markdown","7bee084b":"markdown","583c4014":"markdown","68a800e4":"markdown","b6d86f60":"markdown","49b6a4ce":"markdown","e6ddca81":"markdown","0ef0fc53":"markdown","09821a69":"markdown","63061786":"markdown","52310772":"markdown","9969da6a":"markdown","fc2bcca3":"markdown","cb602c72":"markdown","0b2e7c0f":"markdown","b0c0a36c":"markdown","7e8e7033":"markdown","c9f4c8a4":"markdown"},"source":{"eb7f66d8":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport numpy as np","9adf4c7c":"tf.__version__","1b3be779":"! pip install split-folders","3a2f41a0":"import splitfolders\n\n# train, test split\nsplitfolders.ratio('..\/input\/brain-mri-images-for-brain-tumor-detection\/brain_tumor_dataset\/', output=\".\/brain_tumor_dataset_split\", ratio=(0.7, 0.3))","c6b2f43f":"train_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\ntraining_set = train_datagen.flow_from_directory('.\/brain_tumor_dataset_split\/train',\n                                                 target_size = (256,256),\n                                                 batch_size = 32,\n                                                 class_mode = 'binary')","ce5de54f":"training_set.class_indices","49610c32":"yes=np.count_nonzero(training_set.classes)\nprint(\"Yes:\",yes)\nprint(\"No:\",176-yes)","2927dfcc":"test_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory('brain_tumor_dataset_split\/val\/',\n                                            target_size = (256, 256),\n                                            batch_size = 32,\n                                            class_mode = 'binary')\n\n","b30a0ab4":"yes_test=np.count_nonzero(test_set.classes)\nprint(\"Yes:\",yes_test)\nprint(\"No:\",77-yes_test)","4aa4d59d":"cnn = tf.keras.models.Sequential()","eeb23572":"cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=7, activation='relu', input_shape=[256,256,3]))","3586fad3":"cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))","5b7d83f7":"cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3,activation='relu'))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))","b9ea3283":"cnn.add(tf.keras.layers.Flatten())","90402449":"cnn.add(tf.keras.layers.Dense(units=128, activation='relu'))","7e678ffb":"cnn.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","e9b5d1f7":"cnn.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","40f4ab41":"cnn.summary()","6a547a7a":"cnn.fit(x = training_set, epochs = 20 ,validation_data=test_set)","1f7c547e":"cnn.evaluate(training_set)","a3bd1412":"cnn.evaluate(test_set)","29579a46":"import numpy as np\nfrom tensorflow.keras.preprocessing import image\n\n\nfrom IPython.display import display, Image\ndisplay(Image(filename='.\/brain_tumor_dataset_split\/val\/no\/no 97.jpg'))\ntest_image = image.load_img('.\/brain_tumor_dataset_split\/val\/no\/no 97.jpg', target_size = (256, 256))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\nif result[0][0] == 1:\n  prediction = 'Yes'\nelse:\n  prediction = 'No'\n\nprint(\"Actual: No\")\nprint(\"Predicted:\", prediction)","91d4b7b8":"import numpy as np\nfrom tensorflow.keras.preprocessing import image\n\n\nfrom IPython.display import display, Image\ndisplay(Image(filename='.\/brain_tumor_dataset_split\/val\/no\/3 no.jpg'))\ntest_image = image.load_img('.\/brain_tumor_dataset_split\/val\/no\/39 no.jpg', target_size = (256, 256))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntraining_set.class_indices\nif result[0][0] == 1:\n  prediction = 'Yes'\nelse:\n  prediction = 'No'\n\nprint(\"Actual: No\")\nprint(\"Predicted:\", prediction)","3ba856d6":"import numpy as np\nfrom tensorflow.keras.preprocessing import image\n\n\nfrom IPython.display import display, Image\ndisplay(Image(filename='.\/brain_tumor_dataset_split\/val\/yes\/Y147.JPG'))\ntest_image = image.load_img('.\/brain_tumor_dataset_split\/val\/yes\/Y147.JPG', target_size = (256, 256))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntraining_set.class_indices\nif result[0][0] == 1:\n  prediction = 'Yes'\nelse:\n  prediction = 'No'\n\nprint(\"Actual: Yes\")\nprint(\"Predicted:\", prediction)","7542b110":"import numpy as np\nfrom tensorflow.keras.preprocessing import image\n\n\nfrom IPython.display import display, Image\ndisplay(Image(filename='.\/brain_tumor_dataset_split\/val\/yes\/Y99.JPG'))\ntest_image = image.load_img('.\/brain_tumor_dataset_split\/val\/yes\/Y99.JPG', target_size = (256, 256))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntraining_set.class_indices\nif result[0][0] == 1:\n  prediction = 'Yes'\nelse:\n  prediction = 'No'\n\nprint(\"Actual: Yes\")\nprint(\"Predicted:\", prediction)","05841448":"import numpy as np\nfrom tensorflow.keras.preprocessing import image\n\n\nfrom IPython.display import display, Image\ndisplay(Image(filename='.\/brain_tumor_dataset_split\/val\/yes\/Y258.JPG'))\ntest_image = image.load_img('.\/brain_tumor_dataset_split\/val\/yes\/Y258.JPG', target_size = (256, 256))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntraining_set.class_indices\nif result[0][0] == 1:\n  prediction = 'Yes'\nelse:\n  prediction = 'No'\n\nprint(\"Actual: Yes\")\nprint(\"Predicted:\", prediction)","2f32145d":"# to get X_test, Y_test from the test_set\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory('brain_tumor_dataset_split\/val\/',\n                                            target_size = (256, 256),\n                                            batch_size = 77,\n                                            class_mode = 'binary')\n\n\n\nX_test, Y_test= next(test_set)\nprint(Y_test.shape)","ea20a416":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nimport warnings\nwarnings.filterwarnings('ignore')\n\nY_pred=cnn.predict_classes(X_test)\nY_pred=tf.reshape(Y_pred, (77,))","4999d5e0":"print(\"Confusion matrix:\")\nprint(confusion_matrix(Y_test,Y_pred))\nprint(\"Test Accuracy:\",accuracy_score(Y_test,Y_pred))\nprint(\"Classification report:\")\nprint(classification_report(Y_test,Y_pred))","d714fc43":"### Step 2 - Pooling","afaee08f":"## Part 4 - Making single predictions","2b4cb8cb":"### Summary of the model","7bee084b":"## Part 5 - Confusion Matrix and Metrics ","583c4014":"### Preprocessing the Training set","68a800e4":"## Part 2 - Building the CNN","b6d86f60":"### Train accuracy","49b6a4ce":"## Part 3 - Training the CNN","e6ddca81":"### Training the CNN on the Training set and evaluating it on the Test set","0ef0fc53":"### Adding a second convolutional layer","09821a69":"### Initialising the CNN","63061786":"### Preprocessing the Test set","52310772":"### Compiling the CNN","9969da6a":"## Part 1 - Data Preprocessing","fc2bcca3":"### Step 3 - Flattening","cb602c72":"### Test accuracy ","0b2e7c0f":"## Easier way to split into train , test data","b0c0a36c":"### Step 4 - Full Connection","7e8e7033":"### Step 5 - Output Layer","c9f4c8a4":"### Step 1 - Convolution"}}