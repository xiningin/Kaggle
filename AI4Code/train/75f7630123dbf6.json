{"cell_type":{"9e372d12":"code","195c5ee2":"code","84980bf5":"code","2a06a6de":"code","e7404d4a":"code","b4dca4e1":"code","8aa3f4d5":"code","58aa1251":"code","ab422d23":"code","2417a1fa":"code","24c40ac1":"code","251a9b48":"code","d544301a":"code","f6e35fd7":"code","2bf509de":"code","fff8ed03":"code","c0babcbc":"code","d0187a8e":"code","a806835b":"code","dee98a26":"code","5c8d4f97":"code","f061bc52":"code","307447d5":"code","1a074e5c":"code","6cfa82fb":"code","73caf2cc":"code","695e16e9":"code","6a5b0024":"code","599660f6":"code","76d1482a":"code","673948b1":"code","15824d7a":"markdown","d5d97394":"markdown","e28b59a0":"markdown","5185b8be":"markdown","5e20c97e":"markdown","37ce270d":"markdown","35be1fc4":"markdown","0b449f3a":"markdown","0d256ef1":"markdown","d1b1abd4":"markdown","533e928a":"markdown","7017998e":"markdown","42edb7e1":"markdown","5aa89e58":"markdown","cae23275":"markdown","6920fcb9":"markdown"},"source":{"9e372d12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn import linear_model\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n#Loading\ndf = pd.read_csv('\/kaggle\/input\/employee-salary-dataset\/employee_data.csv')","195c5ee2":"#check first 5 rows\ndf.head()","84980bf5":"#bottom five\ndf.head()","2a06a6de":"#drop unwanted  columns\ndf = df.drop(['Unnamed: 0'],axis=1)","e7404d4a":"df = df.drop(['id'],axis=1)","b4dca4e1":"#after dropping\ndf.head()","8aa3f4d5":"#check rows and columns\ndf.shape","58aa1251":"#info\ndf.info()","ab422d23":"#get some stat\ndf.describe()","2417a1fa":"df.head()","24c40ac1":"plt.figure(figsize=(15,10))\nsns.scatterplot(x=df['age'],y=df['healthy_eating'],hue=df['active_lifestyle'],palette=\"viridis\",s=500)","251a9b48":"plt.figure(figsize=(10,10))\nsns.scatterplot(x=df['salary'],y=df['healthy_eating'],palette='rocket',s=200)","d544301a":"pd.pivot_table(df, index = 'groups', values = ['salary'], aggfunc='mean')","f6e35fd7":"plt.figure(figsize=(10,10))\nsns.barplot(x=df['groups'],y=df['salary'],palette='Set2')","2bf509de":"plt.figure(figsize=(10,10))\nsns.scatterplot(x=df['salary'],y=df['active_lifestyle'],color='black')","fff8ed03":"plt.figure(figsize=(10,10))\nsns.scatterplot(x=df['age'],y=df['salary'],color='r',s=100)","c0babcbc":"df['healthy_person'] = df.apply(lambda row:1 if row['healthy_eating']&row['active_lifestyle']>=7 else 0, axis=1)","d0187a8e":"plt.figure(figsize=(10,10))\nsns.barplot(x=df['healthy_person'],y=df['salary'],color='r')","a806835b":"df = pd.get_dummies(df,drop_first=True)","dee98a26":"#separate data into x and y \ny = df.salary\nx=df.drop(['salary'],axis=1)","5c8d4f97":"#splitting data into training and testing\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)\n","f061bc52":"#define and fit to data\nbest_features = SelectKBest(chi2,k='all')\nfit = best_features.fit(x_train,y_train)","307447d5":"#get the scores for each variable\nxscores = pd.DataFrame(fit.scores_)\nxcolumns = pd.DataFrame(x_train.columns)\n\n","1a074e5c":"feat_scores = pd.concat([xcolumns,xscores],axis=1)\nfeat_scores.columns = ['Features','scores']","6cfa82fb":"#lets get the best features\nfeat_scores","73caf2cc":"#Feature Scaling\nscaler=StandardScaler()\nscaler.fit(x_train)","695e16e9":"x_train_scaled = scaler.transform(x_train)\nx_test_scaled = scaler.transform(x_test)","6a5b0024":"\n#create instance of random forest\nrf_reg=RandomForestRegressor(random_state=20)","599660f6":"#fit the train data\nrf_reg.fit(x_train_scaled,y_train)","76d1482a":"#predict test data\npred_y = rf_reg.predict(x_test_scaled)","673948b1":"print('r2 of random forest regressor:',np.round(rf_reg.score(x_test_scaled,y_test),2)*100)","15824d7a":"STEPS:\n* 1)EXPLORATORY DATA ANALYSIS AND FEATURE ENGINEERING\n* 2)FEATURE SELECTION AND SCALING\n* 3)MODEL BUILDING\n\nMODEL PERFORMANCE(RANDOM-FOREST)---100% R2 VALUE","d5d97394":"# GOAL:PREDICT THE SALARY OF EMPLOYEE","e28b59a0":"# FEATURE SELECTION AND SCALING","5185b8be":"how does being healthy affect their salary?","5e20c97e":"RANDOM FOREST GAVE R2 OF APPROXIMATELY 100%","37ce270d":"How does age relate with healthy_eating and active_lifestyle?","35be1fc4":"RANDOM FOREST REGRESSOR","0b449f3a":"How does healthy_eating relate with salary?","0d256ef1":"# LOADING AND DATA EXPLORATION","d1b1abd4":"create new feature called healthy_person?","533e928a":"compare the blood groups to their average salary ?","7017998e":"categorical encoding","42edb7e1":"Visualise how groups relate with salary?","5aa89e58":"How does age relate with salary?","cae23275":"# MODEL BUILDING","6920fcb9":"How does active_lifestyle relate with salary?"}}