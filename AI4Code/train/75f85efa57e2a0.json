{"cell_type":{"94940bad":"code","f87468ab":"code","9025516a":"code","ce4e90aa":"code","19fa3f4d":"code","b1a4bdfe":"code","f8ff3504":"code","61b279a1":"code","d317776f":"code","93db1a96":"code","47a806c2":"code","6b1c714e":"code","32f91475":"code","e0304489":"code","b02ec453":"code","d084ffa7":"code","d8944153":"code","b88b1503":"code","5ff8d543":"code","5caca148":"code","169883a3":"code","90623710":"code","fee01165":"code","37721db2":"code","d0ef2bc0":"code","1daa8877":"code","3e5114b0":"code","659d9b1d":"code","c1fc1b1d":"code","8ca810d3":"code","455260ac":"markdown","56cb12d5":"markdown","1eb80003":"markdown","e08330d8":"markdown","89c38248":"markdown","df50057d":"markdown","1c8c6377":"markdown"},"source":{"94940bad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f87468ab":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","9025516a":"df=pd.read_csv(r'\/kaggle\/input\/all-trumps-twitter-insults-20152021\/trump_insult_tweets_2014_to_2021.csv')","ce4e90aa":"df.head()","19fa3f4d":"df.shape#dimension","b1a4bdfe":"df.head()","f8ff3504":"df.drop('Unnamed: 0',axis=1,inplace=True) #dropping unnecessary column","61b279a1":"df.isnull().sum()#checking for null values","d317776f":"df.dropna(how='any',axis=0,inplace=True)#dropping 2 rows which has missing values","93db1a96":"df.dtypes#checking for datatypes","47a806c2":"df['date'] = df['date'].astype('datetime64[ns]')#changing datatype from object to datetime","6b1c714e":"df.dtypes#verifying","32f91475":"df.shape","e0304489":"import re","b02ec453":"tweets=\" \".join(tweet for tweet in df['tweet']) #string containing all the tweets\ntweets[0:1000]","d084ffa7":"#removing all the mentions and users\ntweets=re.sub(r'@\\w+','',tweets)\ntweets[0:1000]","d8944153":"#removing all the urls and replacing it with _URL_\ntweets=re.sub(r'http\\S+','',tweets)\ntweets[0:1000]","b88b1503":"#removing all the #\ntweets=re.sub(r'#','',tweets)\ntweets[0:1000]","5ff8d543":"#converting into lower\ntweets=tweets.lower()\ntweets[0:1000]","5caca148":"#removing all the puntuations\ntweets = re.sub(r'[^\\w\\s]','',tweets)\ntweets[0:1000]","169883a3":"corpus=[]\ntweets=''.join(tweets)\ncorpus.append(tweets)","90623710":"# corpus","fee01165":"df['target'].value_counts().sort_values(ascending=False).head(10).plot(kind='bar',figsize=(12,6))\nplt.xlabel('Target')\nplt.ylabel('Count of tweets')\nplt.title('Top 10 targets of Trump')","37721db2":"from wordcloud import WordCloud\nimport matplotlib.pyplot as plt","d0ef2bc0":"wc = WordCloud(background_color='black',max_words=100)\nfig=plt.figure(figsize=(10,10))\nwc.generate(str(corpus))\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.title('Top words which trump used')\nplt.axis('off')\nplt.show()","1daa8877":"from PIL import Image\nimport numpy as np\nfrom os import path\nmask = np.array(Image.open(path.join( \"\/kaggle\/input\/trump-image\/trump.png\")))","3e5114b0":"wc1 = WordCloud(background_color='black',max_words=200,mask=mask)\nfig=plt.figure(figsize=(10,10))\nwc1.generate(str(corpus))\nplt.imshow(wc1, interpolation=\"bilinear\")\nplt.axis('off')\nplt.show()","659d9b1d":"df['insult'].value_counts().sort_values(ascending=False).head(10).plot(kind='bar',figsize=(12,6))\nplt.xlabel('Insults')\nplt.ylabel('Count of tweets')\nplt.title('Top 10 insults')","c1fc1b1d":"wc = WordCloud(background_color='black',max_words=500)\nfig=plt.figure(figsize=(10,10))\nwc.generate(str(df['insult']))\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.title('Top words used while insulting')\nplt.axis('off')\nplt.show()","8ca810d3":"wc = WordCloud(background_color='black',max_words=500)\nfig=plt.figure(figsize=(10,10))\nwc.generate(str(df['target']))\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.title('Top 200 words used while targeting others')\nplt.axis('off')\nplt.show()","455260ac":"# Visualizations ","56cb12d5":"# **<center>Thank you!<\/center>**","1eb80003":"<center><img src=\"https:\/\/deadline.com\/wp-content\/uploads\/2019\/10\/shutterstock_editorial_10434333bm.jpg\"> <\/center>","e08330d8":"# Preprocessing","89c38248":"Some of the funny insights from the visualizations are,\n1. Trump referred joe biden as sleepy joe\n2. Trump referred hillary clinton as crooked hillary \n","df50057d":"We can see that trump mostly targeted election, frieden, thomas and politicians ","1c8c6377":"We can see that trump mostly used fraud and fool while insulting[](http:\/\/)"}}