{"cell_type":{"d609d9a7":"code","b1dd0286":"code","8a24670d":"code","b7599c5b":"code","4909856c":"code","02d36dd9":"code","1b357e73":"code","5cea4ab4":"code","0f290be6":"code","97b2f241":"code","c17535fe":"code","ec9c5709":"code","22a53895":"code","1e975b9e":"code","ec12eedd":"code","0e7010d3":"code","504c1ac9":"code","bc79d62f":"code","91761625":"code","e402bf2a":"code","979d7cb3":"markdown","5a1d978b":"markdown","489f2b3a":"markdown","e5b56753":"markdown","4446aab2":"markdown","af413651":"markdown","6e18e266":"markdown","283c3a93":"markdown","257d03c3":"markdown","9e3588bc":"markdown","a8a1974e":"markdown","f252bdef":"markdown","89489389":"markdown","c3a12d3f":"markdown"},"source":{"d609d9a7":"import numpy as np ## Linear ALgebra\nimport pandas as pd ## For working with data\nimport plotly.express as px ## Visualization\nimport plotly.graph_objects as go ## Visualization\nimport matplotlib.pyplot as plt ## Visualization\nimport plotly as py ## Visualization\nfrom wordcloud import WordCloud, STOPWORDS ## To create word clouds from script\nimport os","b1dd0286":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\npath = os.path.join(dirname, filename)\n\ndf = pd.read_csv(path)","8a24670d":"df.shape","b7599c5b":"df.isnull().sum()","4909856c":"df.dropna(inplace=True) ## We can drop the null values as they're very less in number.","02d36dd9":"df.head()","1b357e73":"df.info()","5cea4ab4":"df.loc[:,'Release Date'] = pd.to_datetime(df['Release Date'])\n\ndf['Year'] = df['Release Date'].dt.year\ndf['Month'] = df['Release Date'].dt.month\nmonth_mapper = {1:'Jan', 2:'Feb', 3:'Mar', 4:'Apr', 5:'May', 6:'Jun',\n               7:'Jul', 8:'Aug', 9:'Sep', 10:'Oct', 11:'Nov', 12:'Dec'}\ndf.loc[:,'Month'] = df['Month'].map(month_mapper)","0f290be6":"temp = df['Season'].value_counts().reset_index()\ntemp.columns=['Season', 'Counts']\ntemp.sort_values(by='Season', inplace=True)\npx.bar(temp, 'Season', 'Counts', title='Total dialougue counts in season.')","97b2f241":"wordcloud = WordCloud(width = 800, height = 800,stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in df['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","c17535fe":"tyrion_lannister = df[df['Name']=='tyrion lannister']\nwordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in tyrion_lannister['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","ec9c5709":"arya_stark = df[df['Name']=='arya stark']\nwordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in arya_stark['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","22a53895":"daenerys_targaryen = df[df['Name']=='daenerys targaryen']\nwordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in daenerys_targaryen['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","1e975b9e":"temp = df.groupby(by='Season')['Episode'].unique().agg(len).reset_index()\npx.line(temp, 'Season', 'Episode', labels={'Episode':'Number of Episodes'})","ec12eedd":"wordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in df['Episode Title']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","0e7010d3":"print( 'Total number of characters featured in G.O.T.' , len(df['Name'].unique()))","504c1ac9":"temp = df['Name'].value_counts().reset_index()\ntemp.columns=['Character', 'No of Dialouges']\npx.bar(temp.head(10), 'Character', 'No of Dialouges', color='No of Dialouges', title='Characters with most dialouges in G.O.T.')","bc79d62f":"for group,data in df.groupby(by='Season'):\n    print(group, 'Was on air in Year ', data['Year'].unique())","91761625":"temp = df.groupby(by='Season')['Month'].unique().reset_index()\ntemp.columns = ['Season', 'Months']\nmonth_counts = dict()\nfor i in temp['Months']:\n    for j in i:\n        if j not in month_counts :\n            month_counts[j]=1\n        else :\n            month_counts[j]+=1\npx.bar(x=month_counts.keys(), y=month_counts.values(), color=month_counts.values(),\n       labels={'x':'Months', 'y':'Counts'}, title='Months that show was on air in.')","e402bf2a":"df['Last_Name'] = df['Name'].apply(lambda x : str(x).split()[-1])\n\ntemp = df['Last_Name'].value_counts().head(10).reset_index()\ntemp.columns = ['Last Name', 'Counts']\npx.bar(temp, 'Last Name', 'Counts', color='Counts', title='Most populer Last Names in G.O.T.')","979d7cb3":"#### Daenerys targaryen","5a1d978b":"### Characters with most dialouges in G.O.T.","489f2b3a":"### Most Frequent words for episode titles","e5b56753":"## Hello everyone !\n### This is my analysis on 'Game Of Thrones Script' dataset. I am going to do exploratory data analysis on the data and project visualizations.","4446aab2":"### Now, i am going to see what words do my favourite characters use in their dialogue most frequently.","af413651":"### Number of episodes per season","6e18e266":"#### Since my friend is interested in last names, i am going to extract that for her.","283c3a93":"#### Arya Stark","257d03c3":"### Most Frequently used words in dialogues .","9e3588bc":"#### Ttyrion Lannister","a8a1974e":"#### The Date is in string format. It can be more useful for us if we change it into datetime object.","f252bdef":"## Dialouges","89489389":"### For a friend.","c3a12d3f":"### Seasons and their Times"}}