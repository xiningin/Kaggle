{"cell_type":{"040d9dd6":"code","115c0cbb":"code","45183130":"code","9f69aaae":"code","7683d7e5":"code","d786ec21":"code","4fb77145":"code","d0fff075":"code","b4147ec3":"code","d5a18c8a":"code","bbb27c1e":"code","ddd0085b":"code","abe99a6c":"code","4c2d0c77":"code","bb8dea00":"code","2019c869":"code","ac3b176c":"code","b13413df":"code","6c7bf184":"code","5df67a73":"code","ef3bb829":"code","e1da6450":"code","c56cc2fc":"code","599be860":"code","9dc964e5":"code","c9be6d8f":"markdown","5961b59b":"markdown","3956302f":"markdown","8f29fcc5":"markdown","1750460c":"markdown","716ee0bb":"markdown","ab19e550":"markdown","50aab2b1":"markdown","c4470626":"markdown","aff7b65a":"markdown","9cbd3690":"markdown","95acd56e":"markdown","7b3a6a13":"markdown","708c3445":"markdown","5ab2dff2":"markdown","108f8f9c":"markdown","cfec4b06":"markdown","722bb3ba":"markdown","9a790fde":"markdown","d1664ca0":"markdown","d831e0cf":"markdown","b3ebd6c4":"markdown","dbe707cf":"markdown","03d01f12":"markdown","1f84a4b4":"markdown","14642849":"markdown","9f5b5c57":"markdown","fa63f186":"markdown","d671cc19":"markdown","4557cf5f":"markdown","09db113a":"markdown","d74a916b":"markdown","83e6a054":"markdown","1269219f":"markdown","07abaf38":"markdown","6ed91832":"markdown","5b7a0db0":"markdown","ff4319a1":"markdown","1cabed84":"markdown","89bdbcf9":"markdown","3fdb1d98":"markdown","0aaf0b24":"markdown","902443e6":"markdown","f7a568bd":"markdown","81723668":"markdown","a42b642e":"markdown","370565d8":"markdown","6e1b95e5":"markdown","ca207914":"markdown","599ef9e2":"markdown","a2beb3fb":"markdown","347970ca":"markdown","45d39ad0":"markdown","9d90a9c3":"markdown","8281f497":"markdown","ca506d60":"markdown","3f86a671":"markdown","7f541ca2":"markdown","9047bee2":"markdown","d7c1a26d":"markdown","a2a9c438":"markdown","4d895094":"markdown","edf33e8b":"markdown","5393cba0":"markdown","090517a0":"markdown","e275575b":"markdown","ca4cf697":"markdown","ca79dc60":"markdown","64a22a73":"markdown","951e2a8c":"markdown","cac47ae3":"markdown","be38a21e":"markdown","d661031f":"markdown","94c3b0f0":"markdown"},"source":{"040d9dd6":"import numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\ntrain = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n\n#Extract \"Title\", \"Last Name\" and \"First Name\" from \"Name\" and drop the \"Name\" column\ntrain[\"Title\"] = train[\"Name\"].apply(lambda x: str.strip(str.split(str.split(x,\",\")[1],\".\")[0] + \".\"))\ntrain[\"LastName\"] = train[\"Name\"].apply(lambda x: str.strip(str.split(x,\",\")[0]))\ntrain[\"FirstName\"] = train[\"Name\"].apply(lambda x: str.strip(str.split(str.split(x,\",\")[1],\".\")[1]))\ntrain.drop(\"Name\",axis=1,inplace=True) \n\ntrain.head()","115c0cbb":"train.info()","45183130":"fig,axes=plt.subplots(3,3,figsize=(20,10))\nsns.countplot(data=train, x=\"Survived\", ax=axes[0,0])\nsns.countplot(data=train, x=\"Pclass\", ax=axes[0,1])\nsns.countplot(data=train, x=\"Sex\", ax=axes[0,2])\nsns.countplot(data=train, x=\"SibSp\", ax=axes[1,0])\nsns.countplot(data=train, x=\"Parch\", ax=axes[1,1])\nsns.countplot(data=train, x=\"Embarked\", ax=axes[1,2])\nsns.countplot(data=train[(train[\"Title\"]==\"Mr.\")|(train[\"Title\"]==\"Miss.\")|(train[\"Title\"]==\"Mrs.\")|(train[\"Title\"]==\"Master.\")], x=\"Title\", ax=axes[2,0]) #ignoring the rare titles\nsns.distplot(train[\"Age\"], kde=False, ax=axes[2,1])\nsns.distplot(train[\"Fare\"], kde=False, ax=axes[2,2])\nplt.show()","9f69aaae":"train['AgeCat'] = pd.cut(train['Age'], 16, right=False, labels=range(0, 80, 5))\n#train['FareCat'] = pd.cut(train['Fare'], 51, right=False, labels=range(0, 510, 10))\ntrain['FareCat10Q'] = pd.qcut(train['Fare'], q=10, labels=['q1','q2','q3','q4','q5','q6','q7','q8','q9','q10'])\n\nfig,axes=plt.subplots(2,3,figsize=(20,10))\nsns.countplot(data=train, x=\"Pclass\", hue=\"Survived\", ax=axes[0,0])\nsns.countplot(data=train, x=\"Sex\", hue=\"Survived\", ax=axes[0,1])\nsns.countplot(data=train, x=\"AgeCat\", hue=\"Survived\",ax=axes[0,2])\nsns.countplot(data=train, x=\"SibSp\", hue=\"Survived\", ax=axes[1,0])\nsns.countplot(data=train, x=\"Parch\", hue=\"Survived\", ax=axes[1,1])\nsns.countplot(data=train[(train[\"Title\"]==\"Mr.\")|(train[\"Title\"]==\"Miss.\")|(train[\"Title\"]==\"Mrs.\")|(train[\"Title\"]==\"Master.\")], x=\"Title\", hue=\"Survived\", ax=axes[1,2]) #ignoring the rare titles\nplt.show()\n\nfig,axes=plt.subplots(1,2,figsize=(20,4), gridspec_kw={'width_ratios': [1, 2]})\nsns.countplot(data=train, x=\"Embarked\", hue=\"Survived\", ax=axes[0])\nsns.countplot(data=train, x='FareCat10Q', hue='Survived', ax=axes[1])\nplt.show()","7683d7e5":"def transformTitle(title):\n    if(title in ['Mr.','Mrs.','Miss.','Master.']):\n        return title\n    elif (title in  ['Ms.', 'Mme.']):\n        return 'Mrs.'\n    elif(title=='Mlle.'):\n        return 'Miss.'\n    elif(title in  ['Sir', 'Don.', 'Jonkheer.', 'Dr.', 'Col.', 'Capt.', 'Major.', 'Rev.']):\n        return 'HTM.'\n    elif(title in ['Lady.', 'the Countess.']):\n        return 'HTF.'\n\nspecial_titles = train[(train['Title']=='Sir.') | (train['Title']=='Lady.') | (train['Title']=='Don.') | (train['Title']=='Jonkheer.') | (train['Title']=='the Countess.') | (train['Title']=='Dr.') | (train['Title'] == 'Rev.') | (train['Title'] == 'Col.') | (train['Title'] == 'Capt.') | (train['Title'] == 'Major.')]\ntrain[\"Title_\"] = train[\"Title\"].apply(transformTitle)\n\nfig,axes=plt.subplots(1,2,figsize=(20,4))\nsns.countplot(data=train, x=\"Title_\", hue=\"Survived\", ax=axes[0]).set_title('Honorary Titles Survival Chance')\naxes[0].set_xlabel('Title')\nsns.countplot(data=special_titles, x=\"Title\", hue=\"Survived\", ax=axes[1]).set_title('Honorary Titles Survival Chance')\nplt.show()","d786ec21":"Q1 = train['Fare'].quantile(0.25)\nQ3 = train['Fare'].quantile(0.75)\nIQR = Q3 - Q1\nprint('Fare has '+ str(train[(train['Fare']>Q3+1.5*IQR)].shape[0]) + ' \"top\" outliers')\nprint('Fare has '+ str(train[(train['Fare']<Q1-1.5*IQR)].shape[0]) + ' \"bottom\" outliers')","4fb77145":"fig,axes=plt.subplots(1,3,figsize=(20,4))\nsns.boxplot(data=train[train['Pclass']==1], x='Survived', y='Fare', ax=axes[0]).set_title('Pclass=1')\nsns.boxplot(data=train[train['Pclass']==2], x='Survived', y='Fare', ax=axes[1]).set_title('Pclass=2')\nsns.boxplot(data=train[train['Pclass']==3], x='Survived', y='Fare', ax=axes[2]).set_title('Pclass=3')\nplt.show()","d0fff075":"def split_cabin_right(cabin, sep = ' '):\n    if(sep in cabin):\n        cabin = cabin.rsplit(sep,1)[1]\n    if(len(cabin)==1): #just a letter\n        return 0\n    else:\n        return cabin[1:]\n\ntrain['Cabin'] = train['Cabin'].fillna('M')\ntrain.loc[train[train['Cabin']=='T'].index,'Cabin'] = 'M'\ntrain['CabinLetter'] = train['Cabin'].apply(lambda x: x[0])\ntrain['CabinNumber'] = train['Cabin'].apply(split_cabin_right)\n#train[['CabinLetter','CabinNumber']].nunique()\n\n#srA = train[(train['CabinLetter']=='A')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='A')].shape[0]\n#srB = train[(train['CabinLetter']=='B')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='B')].shape[0]\n#srC = train[(train['CabinLetter']=='C')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='C')].shape[0]\n#srD = train[(train['CabinLetter']=='D')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='D')].shape[0]\n#srE = train[(train['CabinLetter']=='E')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='E')].shape[0]\n#srF = train[(train['CabinLetter']=='F')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='F')].shape[0]\n#srG = train[(train['CabinLetter']=='G')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='G')].shape[0]\n#srM = train[(train['CabinLetter']=='M')&(train['Survived']==1)].shape[0]\/train[(train['CabinLetter']=='M')].shape[0]\n#print(\"Survival rate for Cabin A = \" + str(srA) + \" %\")\n#print(\"Survival rate for Cabin B = \" + str(srB) + \" %\")\n#print(\"Survival rate for Cabin C = \" + str(srC) + \" %\")\n#print(\"Survival rate for Cabin D = \" + str(srD) + \" %\")\n#print(\"Survival rate for Cabin E = \" + str(srE) + \" %\")\n#print(\"Survival rate for Cabin F = \" + str(srF) + \" %\")\n#print(\"Survival rate for Cabin G = \" + str(srG) + \" %\")\n#print(\"Survival rate for Cabin M = \" + str(srM) + \" %\")\n\ntrain['CabinGroup'] = train['CabinLetter']\ndi = {'A':'A', 'B':'BDEF', 'C':'C', 'D':'BDEF', 'E':'BDEF', 'F':'BDEF', 'G':'GM', 'M':'GM'}\ntrain.replace({'CabinGroup': di}, inplace=True)\nfig,axes=plt.subplots(1,2,figsize=(20,4))\nsns.countplot(data=train, x='CabinLetter', hue='Survived', ax=axes[0])\nsns.countplot(data=train, x='CabinGroup', hue='Survived', ax=axes[1])\nplt.show()","b4147ec3":"fig,axes=plt.subplots(1,3,figsize=(20,4))\norder=['C','S','Q']\nsns.boxplot(data=train[train['Pclass']==1], x='Embarked', y='Fare', order=order, ax=axes[0]).set_title('Pclass=1')\nsns.boxplot(data=train[train['Pclass']==2], x='Embarked', y='Fare', order=order, ax=axes[1]).set_title('Pclass=2')\nsns.boxplot(data=train[train['Pclass']==3], x='Embarked', y='Fare', order=order, ax=axes[2]).set_title('Pclass=3')\nplt.show()","d5a18c8a":"train.groupby(['Pclass','Embarked']).median()['Fare']","bbb27c1e":"def transformTitle(title):\n    if(title in ['Mr.','Mrs.','Miss.','Master.']):\n        return title\n    elif (title in  ['Ms.', 'Mme.']):\n        return 'Mrs.'\n    elif(title=='Mlle.'):\n        return 'Miss.'\n    elif(title in  ['Sir', 'Don.', 'Jonkheer.', 'Dr.', 'Col.', 'Capt.', 'Major.','Rev.']):\n        return 'Mr.'\n    elif(title in ['Lady.', 'the Countess.']):\n        return 'Mrs.'\n    else:\n        return 'Mr.'\n    \ntrain['Title'] = train['Title'].apply(lambda x: transformTitle(x))\n\nfig,axes=plt.subplots(1,1,figsize=(40,8))\nsns.boxplot(data=train, x=\"Title\", y=\"Age\")\nplt.show()","ddd0085b":"fig,axes=plt.subplots(1,2,figsize=(40,4))\nsns.boxplot(data=train[(train['Title']=='Miss.') & (train['Parch']==0)], x=\"Title\", y=\"Age\", ax=axes[0]).set_title(\"Miss. travelling alone\")\nsns.boxplot(data=train[(train['Title']=='Miss.') & (train['Parch']>0)], x=\"Title\", y=\"Age\", ax=axes[1]).set_title(\"Miss. travelling with their parents\")\nplt.show()","abe99a6c":"fig,axes=plt.subplots(1,4,figsize=(40,8))\nsns.boxplot(data=train, y=\"Age\", ax=axes[0])\nsns.boxplot(data=train, x=\"Pclass\", y=\"Age\", ax=axes[1]).set_title('Regardless of sex')\nsns.boxplot(data=train[train['Sex']=='male'], x='Pclass', y='Age', ax=axes[2]).set_title('Sex = Male')\nsns.boxplot(data=train[train['Sex']=='female'], x='Pclass', y='Age', ax=axes[3]).set_title('Sex = Female') \nplt.show()","4c2d0c77":"train['FamilySize'] = train['SibSp'] + train['Parch'] + 1\n\nfig,axes=plt.subplots(1,1,figsize=(10,4))\nsns.countplot(data=train, x=\"FamilySize\", hue=\"Survived\")\nplt.show()","bb8dea00":"# There are some passengers in the dataset from different families with the same name (e.g. there are 2 families called \"Carter\")\n# To avoid (mitigate?) this issue, we will create a FamilyId with the LastName + FamilySize + Embarked\ntrain['FamilyId']=train['LastName'] + '-' + train['FamilySize'].apply(lambda x: str(x)) + '-' + train['Embarked']\ntrain['NbMembersInTrainSet']=train['FamilyId'].map(train.groupby('FamilyId')['PassengerId'].count())\n\n# family_passengers dataframe has the passengers whose family members are all in the train set\nfamily_passengers = train[(train['FamilySize']==train['NbMembersInTrainSet']) & (train['FamilySize']>1)].copy()\nfamily_passengers['FamilySurvivalRate'] = family_passengers['FamilyId'].map(family_passengers.groupby('FamilyId')['Survived'].mean().round(3))\nfamily_passengers['FamilySurvival'] = family_passengers['FamilySurvivalRate'].map({0: \"all perished\", 1: \"all survived\"}).fillna(\"some perished, some survived\") \n\n# Families dataframe has the passengers whose family members are all in the train set\nfamilies = family_passengers.copy()\nfamilies['FamilySurvivalRate'] = families['FamilyId'].map(families.groupby('FamilyId')['Survived'].mean().round(3))\nfamilies['FamilySurvival'] = families['FamilySurvivalRate'].map({0: \"all perished\", 1: \"all survived\"}).fillna(\"some perished, some survived\") \nfamilies['Sex'] = families['Sex'].apply(lambda x: 1 if x=='male' else 0) # 0 = male, 1 = female\nfamilies['tmp'] = families['FamilyId'].map(families.groupby('FamilyId')['Sex'].mean())\nfamilies['MixedFamily'] = families['tmp'].apply(lambda x: 0 if round(x)==x else 1) # MixedFamily=1 means the family is mixed i.e. composed of male and female.\nfamilies['NbMaleSurvived'] = families['FamilyId'].map(families[(families['Sex']==1) & (families['Survived']==1)].groupby('FamilyId')['Survived'].count()).fillna(0)\nfamilies['NbFemaleSurvived'] = families['FamilyId'].map(families[(families['Sex']==0) & (families['Survived']==1)].groupby('FamilyId')['Survived'].count()).fillna(0)\nfamilies['NbMaleDied'] = families['FamilyId'].map(families[(families['Sex']==1) & (families['Survived']==0)].groupby('FamilyId')['Survived'].count()).fillna(0)\nfamilies['NbFemaleDied'] = families['FamilyId'].map(families[(families['Sex']==0) & (families['Survived']==0)].groupby('FamilyId')['Survived'].count()).fillna(0)\n#families.drop('tmp', axis=1, inplace=True)\n# Let's keep one row per family \nfamilies.drop_duplicates(subset='FamilyId', keep='first', inplace=True)\n# Let's keep only family info\nfamilies = families[['FamilyId', 'MixedFamily', 'FamilySize', 'FamilySurvivalRate', 'FamilySurvival', 'NbMaleSurvived', 'NbFemaleSurvived','NbMaleDied','NbFemaleDied']]\nfamilies.head()","2019c869":"fig,axes=plt.subplots(1,2,figsize=(20,4))\nsns.countplot(data=family_passengers, x='FamilySurvival',ax=axes[0]).set_title('Passengers count')\nsns.countplot(data=families, x='FamilySurvival', ax=axes[1]).set_title('Families count')\nplt.show()","ac3b176c":"sns.countplot(data=families[families['NbMaleSurvived']>0], x='FamilySurvival')\nplt.show()","b13413df":"sns.countplot(data=families[families['NbFemaleDied']>0], x='FamilySurvival')\nplt.show()","6c7bf184":"train_ = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_ = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nfull = pd.concat([train_, test_])\nfull['FamilySize'] = full['SibSp'] + full['Parch'] + 1\nfull['GroupSize'] = full['Ticket'].map(full.groupby('Ticket')['PassengerId'].count())\ntrain_ = full[full['Survived'].isna()==False].copy()\n\nfig,axes=plt.subplots(1,2,figsize=(20,4))\nsns.countplot(data=train_, x='GroupSize', hue='Survived', ax=axes[0]).set_title('Survival rate by group size (families are included into groups)')\nsns.countplot(data=train_[train_['FamilySize']==1], x='GroupSize', hue='Survived', ax=axes[1]).set_title('Survival rate by group size (families are excluded from groups)')\nplt.show()","5df67a73":"train_ = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_ = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nfull = pd.concat([train_, test_])\nfull['FamilySize'] = full['SibSp'] + full['Parch'] + 1\nfull['GroupSize'] = full['Ticket'].map(full.groupby('Ticket')['PassengerId'].count())\ntrain_ = full[full['Survived'].isna()==False].copy()\ntrain_['NbMembersInTrainSet']=train_['Ticket'].map(train.groupby('Ticket')['PassengerId'].count())\n#train_.tail()\n\ngroup_passengers = train_[(train_['GroupSize']>1) & (train_['NbMembersInTrainSet']==train_['GroupSize']) & (train_['FamilySize']==1)].copy()\ngroup_passengers['GroupSurvivalRate'] = group_passengers['Ticket'].map(group_passengers.groupby('Ticket')['Survived'].mean().round(3))\ngroup_passengers['GroupSurvival'] = group_passengers['GroupSurvivalRate'].map({0: \"all perished\", 1: \"all survived\"}).fillna(\"some perished, some survived\") \n#group_passengers.head()\n\n# Groups dataframe has the passengers travelling in groups (e.g. with friends)\ngroups = group_passengers.copy()\ngroups['GroupSurvivalRate'] = groups['Ticket'].map(groups.groupby('Ticket')['Survived'].mean().round(3))\ngroups['GroupSurvival'] = groups['GroupSurvivalRate'].map({0: \"all perished\", 1: \"all survived\"}).fillna(\"some perished, some survived\") \ngroups['Sex'] = groups['Sex'].apply(lambda x: 1 if x=='male' else 0) # 0 = male, 1 = female\ngroups['tmp'] = groups['Ticket'].map(groups.groupby('Ticket')['Sex'].mean())\ngroups['MixedGroup'] = groups['tmp'].apply(lambda x: 0 if round(x)==x else 1) # MixedGroup=1 means the group is mixed i.e. composed of male and female.\ngroups['NbMaleSurvived'] = groups['Ticket'].map(groups[(groups['Sex']==1) & (groups['Survived']==1)].groupby('Ticket')['Survived'].count()).fillna(0)\ngroups['NbFemaleSurvived'] = groups['Ticket'].map(groups[(groups['Sex']==0) & (groups['Survived']==1)].groupby('Ticket')['Survived'].count()).fillna(0)\ngroups['NbMaleDied'] = groups['Ticket'].map(groups[(groups['Sex']==1) & (groups['Survived']==0)].groupby('Ticket')['Survived'].count()).fillna(0)\ngroups['NbFemaleDied'] = groups['Ticket'].map(groups[(groups['Sex']==0) & (groups['Survived']==0)].groupby('Ticket')['Survived'].count()).fillna(0)\n#groups.drop('tmp', axis=1, inplace=True)\n# Let's keep one row per group\ngroups.drop_duplicates(subset='Ticket', keep='first', inplace=True)\n# Let's keep only group info\ngroups = groups[['Ticket', 'MixedGroup', 'GroupSurvivalRate', 'GroupSurvival', 'NbMaleSurvived', 'NbFemaleSurvived','NbMaleDied','NbFemaleDied']]\ngroups.head()","ef3bb829":"groups['GroupSurvival'].value_counts()","e1da6450":"fig,axes=plt.subplots(1,2,figsize=(20,4))\nsns.countplot(data=group_passengers, x='GroupSurvival', ax=axes[0]).set_title('Passengers count')\nsns.countplot(data=groups, x='GroupSurvival', ax=axes[1]).set_title('Groups count')\nplt.show()","c56cc2fc":"train[(train['Title']=='Mr.') | (train['Title']=='Mrs.') | (train['Title']=='Master.')].groupby(['Title','Pclass']).mean()['Age']","599be860":"train[(train['Title']=='Miss.') & (train['Parch']==0)].groupby('Pclass').mean()['Age']","9dc964e5":"train[(train['Title']=='Miss.') & (train['Parch']>0)].groupby('Pclass').mean()['Age']","c9be6d8f":"The graph below shows that: \n- passengers travelling alone (FamilySize=1) had a lower survival chance than passengers travelling in family. \n- passengers travelling in small family (2 to 4 members) had a good chance of survival compared to the ones travelling with a big family (5 or more).","5961b59b":"### Does fare (may) provide additional predictive value than Pclass?","3956302f":"Let's recall the definition of the variables as provided by Kaggle [here](https:\/\/www.kaggle.com\/c\/titanic\/data):\n\n<table width=100%>\n    <thead>\n        <tr>\n            <td style=\"text-align:center\"  width=10%><b>Variable<\/b><\/th>\n            <td style=\"text-align:center\"  width=20%><b>Definition<\/b><\/th>\n            <td style=\"text-align:center\"  width=30%><b>Key<\/b><\/th>\n            <td style=\"text-align:center\"  width=40%><b>Comment<\/b><\/th>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left\">Survived<\/td>\n            <td style=\"text-align:left\">Survival<\/td>\n            <td style=\"text-align:left\">0 = No, 1 = Yes<\/td>\n            <td style=\"text-align:left\"><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Pclass<\/td>\n            <td style=\"text-align:left\">Ticket class<\/td>\n            <td style=\"text-align:left\">1 = 1st, 2 = 2nd, 3 = 3rd<\/td>\n            <td style=\"text-align:left\">A proxy for socio-economic status (SES):<ul><li>1st = Upper<\/li><li>2nd = Middle<\/li><li>3rd = Lowe<\/li><\/ul><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Sex<\/td>\n            <td style=\"text-align:left\">Sex<\/td>\n            <td style=\"text-align:left\"><\/td>\n            <td style=\"text-align:left\"><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Age<\/td>\n            <td style=\"text-align:left\">Age in years<\/td>\n            <td style=\"text-align:left\"><\/td>\n            <td style=\"text-align:left\">Age is fractional if less than 1. If the age is estimated, is it in the form of xx.5<\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">SibSp<\/td>\n            <td style=\"text-align:left\"># of siblings \/ spouses aboard the Titanic<\/td>\n            <td style=\"text-align:left\"><\/td>\n            <td style=\"text-align:left\">The dataset defines family relations in this way...<ul><li>Sibling = brother, sister, stepbrother, stepsister<\/li><li>Spouse = husband, wife (mistresses and fianc\u00e9s were ignored)<\/li><\/ul><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Parch<\/td>\n            <td style=\"text-align:left\"># of parents \/ children aboard the Titanic<\/td>\n            <td style=\"text-align:left\"><\/td>\n            <td style=\"text-align:left\">The dataset defines family relations in this way...<ul><li>Parent = mother, father<\/li><li>Child = daughter, son, stepdaughter, stepson<\/li><li>Some children travelled only with a nanny, therefore parch=0 for them.<\/li><\/ul><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Ticket<\/td>\n            <td style=\"text-align:left\">Ticket number<\/td>\n            <td style=\"text-align:left\"><\/td>\n            <td style=\"text-align:left\"><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Fare<\/td>\n            <td style=\"text-align:left\">Passenger fare<\/td>\n            <td style=\"text-align:left\"><\/td>\n            <td style=\"text-align:left\"><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Cabin<\/td>\n            <td style=\"text-align:left\">Cabin number<\/td>\n            <td style=\"text-align:left\"><\/td>\n            <td style=\"text-align:left\"><\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left\">Embarked<\/td>\n            <td style=\"text-align:left\">Port of Embarkation<\/td>\n            <td style=\"text-align:left\">C = Cherbourg, Q = Queenstown, S = Southampton<\/td>\n            <td style=\"text-align:left\"><\/td>\n        <\/tr>\n    <\/tbody>\n<\/table>","8f29fcc5":"Let's display the head of the dataset. I made one transformation to the original dataset: the \"Name\" column was split into 3 columns \"Title\", \"LastName\" and \"FirstName\". \n\nSo now, the dataset has 13 features and 1 target \"Survived\":\n- Qualitative variables: \"Sex\", \"Pclass\", \"Embarked\" and \"Title\"\n- Quantitative variables: \"SibSp\" (discrete), \"Parch\" (discrete), \"Age\" and \"Fare\"\n- Text: \"FirstName\", \"LastName\", \"Cabin\" and \"Ticket\"\n- PassengerId is a unique identifer assigned to each passenger that brings no useful information. ","1750460c":"# Fare <a id='Fare'><\/a>\n[Go back to the agenda](#Agenda)","716ee0bb":"<div style=\"display:fill; background-color:#000000;border-radius:5px;\">\n    <p style=\"font-size:300%; color:white;text-align:center\";>Groups<\/p>\n<\/div>","ab19e550":"In this section, we'll try to answer the following questions:\n- Why passengers have free tickets? \n- How many outliers?\n- Does fare (may) provide additional predictive value than Pclass?","50aab2b1":"The plots below suggest that, in most cases, entire families had the same fate (all survived or all died) :\n- Among the 138 passengers travelling with their family, 88 had the same fate than their relatives, 54 had different fate.\n- Among the 58 families, 34 survived or perished, 24 had a mixed fate  ","c4470626":"<div style=\"display:fill; background-color:#000000;border-radius:5px;\">\n    <p style=\"font-size:300%; color:white;text-align:center\";>Families<\/p>\n<\/div>","aff7b65a":"# Build groups <a id='Build-groups'><\/a>\n[Go back to the agenda](#Agenda)","9cbd3690":"<div style=\"display:fill; background-color:#000000;border-radius:5px;\">\n    <p style=\"font-size:300%; color:white;text-align:center\";>Strategy for the modeling part<\/p>\n<\/div>","95acd56e":"# Title <a id='Title'><\/a>\n[Go back to the agenda](#Agenda)","7b3a6a13":"<div style=\"display:fill; background-color:#000000;border-radius:5px;\">\n    <p style=\"font-size:300%; color:white;text-align:center\";>Dataset Overview<\/p>\n<\/div>","708c3445":"### What are the different titles?","5ab2dff2":"The average age for 'Mr.', 'Mrs'. and 'Master.' by Plcass are displayed below. I'll use these values to input the missing ages :","108f8f9c":"# Data Dictionary <a id='Data-dictionary'><\/a>\n[Go back to the agenda](#Agenda)","cfec4b06":"# Basic plots : univariate analysis <a id='Basic-plots-1'><\/a>\n[Go back to the agenda](#Agenda)","722bb3ba":"### Did passengers with honorary titles have a better chance of survival than others?","9a790fde":"Fare has many outliers (13% using the outlier detection based on IQR) :","d1664ca0":"# Does the survival of a male implies the survival of all other family members? \n<a id='Male-survived'><\/a>\n[Go back to the agenda](#Agenda)","d831e0cf":"# Family Size (SibSp and Parch) <a id='SibSp-and-Parch'><\/a>\n[Go back to the agenda](#Agenda)","b3ebd6c4":"In this section, I created a dataframe for families. Only the families for which all the members are in the train set have been considered and there are 58 families in this dataframe. Each family has:\n- a FamilyId that is built from the last name, family size and port of embarkment. I found this way of grouping passengers into families pretty satisfactory (though not perfect). \n- a \"MixedFamily\" variable. This variable is set to 0 when all family members are all male or all female, 1 otherwise.\n- a \"FamilySurvivalRate\" variable. This variable is the ratio of survivals to family size.\n- a \"FamilySurvival\" variable which is mapped with \"FamilySurvivalRate\" in an obvious way.\n- 4 variables \"NbMaleSurvived\", \"NbFemaleSurvived\", \"NbMaleDied\", \"NbFemaleDied\".","dbe707cf":"The plots below suggest that passengers in 1st class tend to be older than the ones travelling in 2nd class and those travelling in 2nd class tend to be older than the ones travelling in the 3rd class.","03d01f12":"In this section, we'll just show the correlation between port of embarkment and fare.","1f84a4b4":"Let's merge the titles as suggested above and plot the distribution of Age per Title. ","14642849":"# Display of the 1st few lines <a id='Display-few-lines'><\/a>\n[Go back to the agenda](#Agenda)","9f5b5c57":"In this section, we'll try to answer the following questions:  \n- What's the correlation between Title and Age?\n- What's the age of a Miss. travelling with her parents vs. a Miss. travelling alone?\n- What's the correlation between Pclass and Age?","fa63f186":"# Display dataset info <a id='Display-dataset-info'><\/a>\n[Go back to the agenda](#Agenda)","d671cc19":"There are 17 different titles in the train set with a majority of Mr. (58%), Miss. (20%), Mrs. (14%) and Master. (4%). Master is a title assigned to boys until 12. Miss. is a title assigned to girls or single ladies so Miss. does not give any indication of Age. ","4557cf5f":"Displaying the dataset info brings some basic but useful information :\n- There are 891 records in the train set and 418 in the test set. \n- There are also features with missing values:\n\nThe number of missing values is relatively small with the exception of Age (circa 20% of missing values) and Cabin (circa 77%) :\n- Cabin : 687 in train.csv + 327 in test.csv \n- Age : 177 in train.csv + 86 in test.csv\n- Embarked : 2 in train.csv + 0 in test.csv\n- Fare : 0 in train.csv + 1 in test.csv","09db113a":"In this section, I created a dataframe for groups. Only the groups for which all the members are in the train set have been considered and there is no overlap between groups and families. There are 26 groups in this dataframe. Each group has:\n- a \"Ticket\" variable which is a unique identifier for each group\n- a \"MixedGroup\" variable. This variable is set to 0 when all group members are all male or all female, 1 otherwise.\n- a \"GroupSurvivalRate\" variable. This variable is the ratio of survivals to group size.\n- a \"GroupSurvival\" variable which is mapped with \"GroupSurvivalRate\" in an obvious way.\n- 4 variables \"NbMaleSurvived\", \"NbFemaleSurvived\", \"NbMaleDied\", \"NbFemaleDied\".","d74a916b":"### What's the correlation between Age and Title?","83e6a054":"# Does the death of a female implies the death of all other family members?\n<a id='Female-died'><\/a>\n[Go back to the agenda](#Agenda)","1269219f":"The plots below suggest that : \n- for 1st and 2nd class : paying a higher fare gave (in general) a better chance of survival\n- for the 3rd class, fare had no impact on the survival chance.","07abaf38":"# Do passengers travelling together have the same fate (all survived or all died)? \n<a id='Families-fate'><\/a>\n[Go back to the agenda](#Agenda)","6ed91832":"There are many missing values in this column. It's very tempting to ignore it but give it a chance. Afterall, the cabin numbers are likeky to be grouped in a logical way e.g. one can assume that all cabins starting with the same letter were close and belonged to the same \"part\" of the ship and it may have been more or less easy to \"escape\" depending on the cabin location...\n\nGenerally (there are a few exceptions though) cabins start with a letter A, B, C, D, F or G followed by a number (e.g. A36, C23, C110 and D19). I started by imputing missing values with 'M'. I also replaced the one record where cabin=T with M. Eventually, I split the cabin into 2 columns \"CabinLetter\" and \"CabinNumber\". \n\nAt the end of this process :\n- CabinLetter has 8 different values, from A to G + M for missing\n- CabinNumber has 96 different values. It will be hard to get anything from CabinNumber, I will ignore it. \n\nI created a new feature CabinGroup : \n- G and M belong to the same group \"GM\" as the survival rate for passengers travelling in G and M is very similar (circa. 28%-30%)\n- B, D, E and F belong to the same group \"BDEF\" as the survival rate for passengers travelling in B, D, E and F is very similar (circa. 74%-78%)\n- A is not grouped with any other cabin as the survival rate for passengers travelling in A is not close to any other cabin (47%)\n- C is not grouped with any other cabin as the survival rate for passengers travelling in C is not close to any other cabin (59%)\n","5b7a0db0":"# Cabin <a id='Cabin'><\/a>\n[Go back to the agenda](#Agenda)","ff4319a1":"In this section, we'll try to answer the following question: is there any relevant information to extract from the cabin for our predictive model?","1cabed84":"Detailed agenda of this notebook : <a id='Agenda'><\/a> \n\n- Dataset Overview : \n\n    - [Data dictionary](#Data-dictionary)\n    - [Display of the 1st few lines](#Display-few-lines)\n    - [Display dataset info](#Display-dataset-info)\n    - [Basic plots: univariate analysis](#Basic-plots-1)\n\n\n- Feature Analysis :\n\n    - [Basic plots: feature correlation with the target](#Basic-plots-2)\n    - [Title](#Title)\n    - [Fare](#Fare)\n    - [Cabin](#Cabin)\n    - [Ticket](#Ticket)\n    - [Embarked](#Embarked)\n    - [Age](#Age)\n\n\n- Families :\n\n    - [Family Size (SibSp and Parch)](#SibSp-and-Parch)\n    - [Build families](#Build-families)\n    - [Do passengers travelling together have the same fate (all survived or all died)?](#Families-fate)\n    - [Does the survival of a male implies the survival of all other family members?](#Male-survived)\n    - [Does the death of a female implies the death of all other family members? ](#Female-died)\n\n\n- Groups :\n\n    - [Group Size](#Group-size)\n    - [Do passengers travelling together have the same fate (all survived or all died)?](#Group-fate)\n\n\n- Strategy for the modelling part :\n\n    - [Handling missing variables](#Handling-missing-values)\n    - [Feature Engineering](#Feature-Engineering)\n    ","89bdbcf9":"# Handling missing values \n<a id='Handling-missing-values'><\/a>\n[Go back to the agenda](#Agenda)","3fdb1d98":"### Why passengers have free tickets?","0aaf0b24":"The plot below shows that in most cases the survival of a male implies (with few exceptions) the survival of the entire family:","902443e6":"In this section, you can find some basic plots: countplots and histograms of each feature.\n\nBasic insights :\n- The dataset is quite balanced : 62% of the passengers perished and 38% survived.\n- Most of the travellers were in 3rd class whereas the numbers of passengers in 1st and 2nd class were close\n- There was more male (64%) than female (36%) onboard.\n- We can guess that most passengers travelled alone (without family). This is confirmed later.\n- Most passengers onboarded in Southampton (72%).\n- There are many different titles but 4 are often used \"Mr.\", \"Mrs.\", \"Miss.\" and \"Master.\".\n- The \"Age\" distribution is pretty normal.\n- The \"Fare\" distribution is skewed and has outliers.","f7a568bd":"The plots below suggest that, in most cases, entire groups had the same fate (all survived or all died) :\n- Among the 49 passengers travelling in group, 39 had the same fate than their group fellows, 10 had different fate.\n- Among the 26 groups, 22 survived or perished, 4 had a mixed fate  ","81723668":"# Group Size <a id='Group-size'><\/a>\n[Go back to the agenda](#Agenda)","a42b642e":"# Ticket <a id='Ticket'><\/a>\n[Go back to the agenda](#Agenda)","370565d8":"In this section, I'll just highlight that passengers sharing the same ticket may or may not belong to the same family. E.g.: \n- ticket 1601 is shared between passengers travelling together but from different families \n- ticket CA. 2343 is shared by members of the same family.  \n\nOn the other hand, it happens that members from the same family have different tickets.","6e1b95e5":"# Build families\n<a id='Build-families'><\/a>\n[Go back to the agenda](#Agenda)","ca207914":"In this section, you can find some basic plots again. Now the focus has changed as these plots show the correlation between each variable and the target (\"Survived\").\n\nBasic insights :\n- Passengers in 1st class had the highest survival chance whereas 3rd class passengers had the lowest survival chance.\n- Female had a higher survival chance (74% of female survived) than male (19% of male survived)\n- The young ones (under 5 and to a less extent under 15) had a higher survival chance\n- We can guess that passengers travelling with their family had a higher survival chance than lonely passengers. This will be confirmed later.\n- Mrs, Miss and Masters had a higher survival chance than Mr. which is consistent with the previous findings.\n- Passengers that onboarded in Cherbourg had a higher survival chance than the ones who onboarded in other ports.\n- Passengers with more expensive tickets had a higher chance of survival. The 10% of passengers with the most expensive tickets had a high survival rate while the 40% of the passengers with the cheapest tickets had a low survival rate and the other 40% \"in the middle\" had approximatly the same chance of survival and death.","599ef9e2":"The plot below titled \"Survival rate by group size (families are excluded from groups)\" show that passengers travelling in groups had a higher survival chance than lonely travellers.","a2beb3fb":"<div style=\"display:fill; background-color:#000000;border-radius:5px;\">\n    <p style=\"font-size:300%; color:white;text-align:center\";>Abstract<\/p>\n<\/div>","347970ca":"For \"Miss.\" it makes sense to input different values depending on 'Parch' (we found earlier that in general \"Miss.\" traveling without their parents were older than \"Miss.\" traveling with their parents). I'll use these values to input the missing ages :","45d39ad0":"# Age <a id='Age'><\/a>\n[Go back to the agenda](#Agenda)","9d90a9c3":"I created a new feature 'GroupSize' corresponding to the count of passengers having the same ticket number. I used the full dataset (train + test). In most cases, FamilySize and GroupSize are equals but not always... E.g: \n- PassengerId=0 (Mr. Braund) travelled with his brother but has a unique ticket (A\/5 21171). Therefore his GroupSize=1 and his FamilySize=2. \n- PassengerId=1 (Mrs. Cummings) travelled with her husband and they both had the same ticket number. Therefore her GroupSize=2 and her FamilySize=2.\n- PassengerId=7 (Mr. McCarthy) travelled with a friend and they both had the same ticket number. Therefore his GroupSize=2 and his FamilySize=1.","8281f497":"### What's the correlation between Age and Pclass?","ca506d60":"Reminder, the following variables have missing values :\n- Cabin : 687 in train.csv + 327 in test.csv\n- Age : 177 in train.csv + 86 in test.csv\n- Embarked : 2 in train.csv + 0 in test.csv\n- Fare : 0 in train.csv + 1 in test.csv\n\nI'll use this strategy to fill missing values :  \n- For Cabin, missing values will be replaced by \"M\" for Missing.  \n- For Embarked, missing values will be replaced by \"S\" as most of the passengers embarked in Southampton.  \n- Fare depends on Pclass and Embarked. We will use the median for the corresponding Pclass and Port of Embarkment. Median will be preferred to mean since the fare variable as outliers.  \n- Age is correlated with Title and Pclass. Title \"Master.\" allows to identify the young boys. Combining \"Miss.\" and parch>0 allows to identify the young girls. It's important to correctly make the distinction between youger and older passengers because younger ones have a higher survival rate.","3f86a671":"<div style=\"display:fill; background-color:#000000;border-radius:5px;\">\n    <p style=\"font-size:300%; color:white;text-align:center\";>Agenda<\/p>\n<\/div>","7f541ca2":"There are 15 passengers with free tickets. I made some research and found that most were part of the [\"nine-strong guarantee group\"](https:\/\/en.wikipedia.org\/wiki\/Crew_of_the_Titanic#Guarantee_group), there are also [4 crew members](https:\/\/en.wikipedia.org\/wiki\/Crew_of_the_Titanic#Deck) and 2 guests [\"Mr Harrison and Jonkheer. Reuchlin\"](https:\/\/www.encyclopedia-titanica.org\/).","9047bee2":"### How to merge titles?","d7c1a26d":"This notebook contains my EDA of the famous Titanic dataset. The objective was to get familiar with the dataset and to identify the strategies that are worth testing in the modeling part.  \n\nI started trying to identify patterns in the dataset related to passengers. Then, I created families and groups and tried to identify patterns related to families and groups. \n\nThis notebook is split as follows:\n1. Dataset Overview: what are the variables? which ones have missing values? some simple plots to visualize the distributions...    \n2. Feature Analysis: is the feature correlated to the target? does the feature have outliers?...    \n3. Families & Groups: are there any patterns in family (resp. groups) that may bring additional predicitive power by adding new variables related to passenger's family?\n4. Modelling Strategies : how to impute missing values? what are the new features that are worth adding? how to take into account family & group patterns...  \n\n**The key finding of this EDA is: there are some features with high predicitve power (e.g. Sex, Pclass) in the original dataset but considering family & group patterns may boost the model performance.** \n\n**These family & group patterns are:**  \n**1. Passengers traveling in small groups (family or groups of 2-4 members) have a higher survival rate than passengers traveling alone or in bigger groups**  \n**2. Circa 60% of the families and 85% of the groups shared the same fate (all survived or all perished)**  \n**3. The survival of a male very often implied the survival of the entire family**  \n**4. The death of a female implied the death of the entire family**   \n\nI created a separate notebook for the prediction and I will publish it soon. ","a2a9c438":"# Do passengers travelling together have the same fate (all survived or all died)? \n<a id='Group-fate'><\/a>\n[Go back to the agenda](#Agenda)","4d895094":"<div style=\"display:fill; background-color:#000000;border-radius:5px;\">\n    <p style=\"font-size:300%; color:white;text-align:center\";>Feature Analysis<\/p>\n<\/div>","edf33e8b":"Miss. is used for unmarried women, regardless of their age. There is no distinction like Master. \/ Mr. but one can reasonalbly suppose that young misses travelled with their parents (and thus Parch>0) while older Miss. may have travelled without their parents (and thus Parch=0). The plots below seems to confirm this assumption :","5393cba0":"In this section, let's try to answer the following questions:\n- What are the different titles?\n- How to merge titles?\n- Did passengers with honorary titles have a better chance of survival than others?","090517a0":"### How many outliers?","e275575b":"In the ticket section, we found that families often share the same ticket number but not only... There were also passengers on the Titanic travelling in groups (e.g. a group of friends). Therefore I will build groups using the ticket number and check if there is any pattern that apply to groups.","ca4cf697":"Based of the findings of this EDA, it makes sense to create and test the new features below :\n- \"Title\" will be extracted from \"Name\" and we will group title into 4 categories \"Mr.\", \"Mrs.\", \"Master.\", \"Miss.\"\n- \"AgeCat\" will be created from \"Age\" by grouping close ages into the same category\n- \"FareCat\" will be created from \"Fare\" by grouping close fares into the same category\n- \"CabinGroup\" will be created from \"Cabin\" by grouping cabins as follows : group 'A', group 'BDEF', group 'C' and group 'GM'\n- \"FamilySize\" will be created from \"Parch\" and \"SibSp\" (FamilySize=Parch+SibSp+1) \n- \"FamilyType\" will be created from \"FamilySize\". FamilyType will be set to either alone or small (2-4 members) or big\n- \"GroupSize\" will be created from \"Ticket\" (GroupSize=the number of passengers having the same ticket)\n- \"GroupType\" will be created from \"GroupSize\". GroupType will be set to either alone or small (2-4 members) or big\n\nI will also create the features below for passengers traveling in group (family or group of friends...) and for which there is at least one member of the group in the train set :  \n- \"MixedGroup\" means the Group is mixed i.e. composed of male and female.\n- \"SurvivalRate\" = nb of survivors in the train set \/ nb of passengers in this group\n- \"NbSurvivors\" = nb of survivors in the train set for this group \n- \"NbDead\" = nb of dead in the train set for this group \n- \"NbMaleSurvivors\" = nb of males who survived in the train set for this group \n- \"NbFemaleSurvivors\" = nb of females who survived in the train set for this group \n- \"NbMaleDead\" = nb of males who perished in the train set for this group \n- \"FemaleDead\" = nb of females who perished in the train set for this group ","ca79dc60":"There are possibilities to merge titles. E.g. one merge strategy could be: \n- Mrs. for all Mrs. and Ms. and Mme. (French) \n- Miss. for all Miss. and Mlle. (French) \n- Master. \n- Honorary titles for titles of nobility (Sir. and Lady. and Don. (Spanish) and Jonkheer. (Netherlands) and the Countess) and army ranks (Col. and Capt. and Major.) and doctors (Dr.) and clergy men (Rev.)","64a22a73":"The plots below suggest that fares were higher in Cherbourg than Southampton.","951e2a8c":"# Basic plots : feature correlation with the target <a id='Basic-plots-2'><\/a>\n[Go back to the agenda](#Agenda)","cac47ae3":"# Feature Engineering \n<a id='Feature-Engineering'><\/a>\n[Go back to the agenda](#Agenda)","be38a21e":"# Embarked <a id='Embarked'><\/a>\n[Go back to the agenda](#Agenda)","d661031f":"### What's the age of a Miss. travelling with her parents vs. a Miss. travelling alone?","94c3b0f0":"The table below shows that the death of a female implies the death of all family members:"}}