{"cell_type":{"671be14b":"code","3c37bbeb":"code","ef042609":"code","386fa073":"code","48624d7e":"code","8dda1bbc":"code","0472f68e":"code","b2bdcdc7":"code","e7a06e69":"code","f507c041":"code","9ec9f285":"code","edc06050":"code","9aa5e66e":"code","3d568faa":"code","147b2540":"code","c67c0590":"code","5519096a":"code","8525612f":"code","d6fa9e1f":"code","1dce6ca8":"code","6996f290":"code","f0099e31":"code","a97a9990":"code","6bf47471":"code","4095b09f":"code","83b3db7b":"code","3464d689":"code","70865934":"code","3e587d97":"code","9bbb55e9":"code","6994379c":"markdown","e9525794":"markdown","765eadad":"markdown","e8814d36":"markdown","56f43c4f":"markdown","c866f6ab":"markdown","127fcf89":"markdown","9bfb6ca8":"markdown","64b2c1c0":"markdown","80ea7b35":"markdown","e0b3ab94":"markdown","ef948f4a":"markdown","795b418b":"markdown","eed6a2cc":"markdown","2e855368":"markdown","9b530150":"markdown","86d5f34d":"markdown","8e7b0029":"markdown","1693ddb5":"markdown","50b31e63":"markdown","76eaf2f0":"markdown","72d2c656":"markdown","be4a54db":"markdown","748ed002":"markdown","c27e41e6":"markdown","20675da3":"markdown","ccfc44f5":"markdown","04fd4e94":"markdown"},"source":{"671be14b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3c37bbeb":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom sklearn.cluster import KMeans\nimport warnings\n\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","ef042609":"df1 = pd.read_csv(\"..\/input\/usarrests\/USArrests.csv\")\ndf = df1.copy()\ndf.head()","386fa073":"df = df.rename(columns={'UrbanPop':'Population'})\ndf = df.rename(columns={'Unnamed: 0':'State'})","48624d7e":"df.shape","8dda1bbc":"df.columns","0472f68e":"df.hist(bins=15,figsize=(10,10))\nplt.show()","b2bdcdc7":"plt.figure(figsize=(20,5))\ndf.groupby('State')['Murder'].max().sort_values(ascending=False).plot(color=\"red\", kind='bar')\nplt.show()","e7a06e69":"plt.figure(figsize=(20,5))\ndf.groupby('State')['Assault'].max().sort_values(ascending=False).plot(color=\"black\", kind='bar')\nplt.show()\n","f507c041":"plt.figure(figsize=(20,5))\ndf.groupby('State')['Rape'].max().sort_values(ascending=False).plot(color=\"blue\", kind='bar')\nplt.show()","9ec9f285":"plt.figure(figsize=(20,5))\ndf.groupby('State')['Population'].max().sort_values(ascending=False).plot(color=\"darkred\", kind='bar')\nplt.show()","edc06050":"df.isnull().sum()","9aa5e66e":"df.info()","3d568faa":"df.describe().T","147b2540":"df.describe(include=[np.number])","c67c0590":"def load_house_price():\n    dataframe = pd.read_csv(\"..\/input\/usarrests\/USArrests.csv\")\n    return dataframe","5519096a":"X = df[['Murder','Assault','Population','Rape']]\nsc = MinMaxScaler((0, 1))\ndf_scaled= sc.fit_transform(X)\ndf_scaled[0:5]\n","8525612f":"kmeans = KMeans(n_clusters=4)\nk_fit = kmeans.fit(df_scaled)\nk_fit","d6fa9e1f":"k_fit.n_clusters\nk_fit.cluster_centers_\nk_fit.labels_\ndf_scaled[0:5]","1dce6ca8":"k_means = KMeans(n_clusters=2).fit(df_scaled)\nclusters = k_means.labels_\ntype(df_scaled)\ndf_scaled = pd.DataFrame(df_scaled)\n\nplt.scatter(df_scaled.iloc[:, 0],\n            df_scaled.iloc[:, 1],\n            c=clusters,\n            s=50,\n            cmap=\"viridis\")\nplt.show()\n","6996f290":"centers = k_means.cluster_centers_\n\nplt.scatter(df_scaled.iloc[:, 0],\n            df_scaled.iloc[:, 1],\n            c=clusters,\n            s=50,\n            cmap=\"viridis\")\n\nplt.scatter(centers[:, 0],\n            centers[:, 1],\n            c=\"black\",\n            s=200,\n            alpha=0.5)\nplt.show()","f0099e31":"kmeans = KMeans()\nssd = []\nK = range(1, 30)\nfor k in K:\n    kmeans = KMeans(n_clusters=k).fit(df_scaled)\n    ssd.append(kmeans.inertia_)\n","a97a9990":"plt.plot(K, ssd, \"bx-\")\nplt.xlabel(\"Different K Values vs. Distance Residual Sums\")\nplt.title(\"The elbow method for the optimal number of clusters\")\nplt.show()\n","6bf47471":"kmeans = KMeans()\nvisu = KElbowVisualizer(kmeans, k=(2, 20))\nvisu.fit(df_scaled)\nvisu.show()","4095b09f":"kmeans = KMeans(n_clusters=5).fit(df_scaled)\nclusters = kmeans.labels_","83b3db7b":"df = pd.read_csv(\"..\/input\/usarrests\/USArrests.csv\", index_col=0)\npd.DataFrame({\"States\": df.index, \"Clusters\": clusters})\ndf = df.rename(columns={'UrbanPop':'Population'})\ndf[\"cluster_no\"] = clusters","3464d689":"df.head()","70865934":"df[\"cluster_no\"] = df[\"cluster_no\"] + 1","3e587d97":"df.groupby(\"cluster_no\").agg({\"cluster_no\": \"count\"})\n","9bbb55e9":"df.groupby(\"cluster_no\").agg(np.mean)","6994379c":"This dataset presents arrests per 100,000 people in terms of murder, assault and rape in the states of USA in 1973.  \nIn addition, the dataset includes statistics on the percentage of population in urban areas.","e9525794":"* \u201ck\u201d parameter refers to the number of clusters to detect.","765eadad":"* Rape","e8814d36":"![image.png](attachment:image.png)","56f43c4f":"* Visualizing Clusters","c866f6ab":"The table presents that there are the highest assault arrest rate in North California and \nthe lowest assault arrest rate in North Dakota.","127fcf89":" Data Summary","9bfb6ca8":"* Another way:","64b2c1c0":"# 1. IMPORT SOME NECESSARY LIBRARIES","80ea7b35":"# 3. DATA PREPROCESSING","e0b3ab94":"* K-MEANS","ef948f4a":"* list of Variable\n> State', Murder', 'Assault', 'Population', 'Rape","795b418b":"* Checking missing values","eed6a2cc":"* Highest rape arrest rate:Nevada\n* Lowest rape arrest rate:North Dakota","2e855368":"* Marking centers","9b530150":"* Assault","86d5f34d":"* Murder","8e7b0029":"* Population","1693ddb5":"K-Means clustering is an unsupervised machine learning algorithm. The main goal of this method is to classify\nobjects or customers in multiple clusters (segments).","50b31e63":"# 2. UNDERSTANDING THE DATA-SET","76eaf2f0":"* Murder: The arrest rate for murder (per 100,000)\n* Assault: The arrest rate for assault (per 100,000)\n* UrbanPop: Urban population (percent) \n* Rape Rape: The arrest rate for rape (per 100,000)","72d2c656":"The above table presents that Georgia has the highest murder arrest rate \nand Iowa has the lowest murder arrest rate.","be4a54db":"The description of  variables in this data as follows:","748ed002":"* The optimal number of clusters can be defined as follow:","c27e41e6":"Load Data","20675da3":"There is no missing value in data set.","ccfc44f5":"Renaming the column \"UrbanPop\" as \"Population\". It will be more meaningful.","04fd4e94":"According to the data set, Vermont has the smallest population \nand California has the highest population."}}