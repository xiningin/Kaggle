{"cell_type":{"b9870450":"code","1fe6e592":"code","3716c590":"code","9ce4403c":"code","98b9562d":"code","32243431":"code","4961e5c0":"code","48aa7ac0":"code","e3051e8c":"code","136ed9d2":"code","6ceafb05":"code","8f08d020":"code","ba35241d":"code","d3fc5340":"code","a94c8d8c":"code","148f9aa7":"code","e9697fc2":"code","c422b15f":"code","51defcd1":"code","ac5e1dce":"code","d0f13b05":"code","a454cb89":"code","1d9d0e94":"code","56948d95":"code","ec2c7909":"code","97b33664":"code","b8d0d053":"code","913d2160":"code","25ef74ec":"code","6b3d3f31":"code","70a31951":"code","2703bad9":"code","a8fdf4a9":"code","e359ad28":"code","a8254a98":"code","dac3306a":"code","e75da900":"code","f5769768":"code","5c8cf3e2":"code","6bac370e":"code","cfe6b8cc":"code","dba182e5":"code","abcf9ed9":"code","f1727e82":"code","37868e90":"code","baa48e3b":"code","24c63325":"code","e2b359d9":"code","7a5913d6":"code","8608123a":"code","21920b6c":"code","05e8a67d":"code","e6485283":"code","406946e1":"code","d1b2e923":"code","e2573294":"code","438bdace":"code","6e168e46":"code","b12b8bbd":"code","beb00d8f":"code","f91e031d":"code","3a875295":"code","0eadbfec":"code","c643a9fd":"code","9082cb3d":"code","6375e5b3":"code","baaa49b1":"code","12b061e4":"code","e7c71e2d":"code","44d4b766":"code","1e473ada":"code","896d0baa":"code","fe7b2b5d":"code","51a6de67":"code","efe6fc68":"code","a060439a":"code","329f6731":"code","baf1044a":"code","14d2ba4e":"code","3e5212d5":"code","437d79e8":"code","6edfcc62":"code","10551fed":"code","198e0c80":"code","1c85a349":"code","9eb17520":"code","a6675eee":"code","d8ea072d":"code","ddcd683b":"code","0c6d0aeb":"code","ab82751f":"code","dd5772ec":"code","d7e581cf":"code","3ace9760":"code","6d9bd5aa":"code","a9ab6c13":"code","e88a763d":"code","84c800e1":"code","8618117e":"code","9f20aed0":"code","34a5d27d":"code","d8ffe35d":"code","568eb30d":"code","219e1fd0":"code","c7cf935c":"code","034a1f07":"code","6f3de41e":"code","1fecedb5":"code","7385653e":"code","e1364728":"code","784b6738":"code","7cfcbb05":"code","2b86f3d3":"code","7a872bff":"code","85b20afe":"code","792bb8f8":"code","262537e0":"code","5bd01978":"code","201e0494":"code","084d28b6":"code","e1a8917d":"code","f344f94c":"code","ab762377":"code","b4712cce":"code","12418fac":"code","3e3d1fa0":"code","315f0f22":"code","79d298a3":"code","045d67e4":"code","cdd4d276":"code","77e82ac1":"code","224ca51a":"code","380d56a3":"code","7515d43d":"code","ae4a0420":"code","cfa0acbc":"code","3070a405":"code","5b11357f":"code","ac744011":"code","67021695":"code","b9bd422e":"code","3cd623fc":"code","c627e17e":"code","218312bf":"code","99eeceef":"code","4b39be07":"code","3e980723":"code","390b64c7":"code","e5370c8d":"code","368fe301":"code","e17cf5f2":"code","bd2e87ae":"code","b730e3e5":"code","714d6a60":"code","ecf23f33":"code","d7b197e5":"code","94211138":"code","a92cff2d":"code","52aadeec":"code","23ce57d8":"code","2e8ce2b1":"code","4648bad0":"code","b4b11260":"code","9d1bf932":"code","9fbd14a4":"code","df2bfff4":"code","0291ecfc":"code","1d5492b7":"code","ff7e8c16":"code","ed366042":"code","c8d47df0":"code","05fb4b13":"code","00c65b58":"code","0a0b5ffc":"code","a9278e53":"code","ab8dabbb":"code","027b581a":"code","55c776a4":"code","43b43c4a":"code","58d2d337":"code","765fe227":"code","55edfd58":"code","dc28cf91":"code","aec67456":"markdown","5aee1ff4":"markdown","b4841768":"markdown","77e49fdd":"markdown","83d2bde7":"markdown","17b522c4":"markdown","baf51f0e":"markdown","a89af831":"markdown","d0548084":"markdown","3a593549":"markdown","245af113":"markdown","156297f8":"markdown","d185bb3a":"markdown","5d72ff6a":"markdown","716bd70e":"markdown","047cdf4b":"markdown","af088c51":"markdown","bc39bbdd":"markdown","bc946192":"markdown","3cd684a6":"markdown","2d5051cc":"markdown","9515e78e":"markdown","ce1e64c0":"markdown","1aa03f3a":"markdown","3882509f":"markdown","1fdfe87d":"markdown","42a5585d":"markdown","071828df":"markdown","409f4d87":"markdown","bd7fcc71":"markdown","05aad169":"markdown","6ec3187f":"markdown","bb6a2636":"markdown","777e64d2":"markdown","bf8c8e7d":"markdown","8121397d":"markdown","47b485a7":"markdown","04d3fbfe":"markdown","07ab0b60":"markdown","88a29112":"markdown","09b9e4c0":"markdown","a2d154db":"markdown","35a47b62":"markdown","ab9902ef":"markdown","9aaeec37":"markdown","b067fac6":"markdown","4c70176b":"markdown","992af408":"markdown","968f273e":"markdown","7afaa1f8":"markdown","d37a6579":"markdown","fa167e08":"markdown","44de31d6":"markdown","98ed03b7":"markdown","74db16f7":"markdown","146efedc":"markdown","70a3a1a4":"markdown","160aac2c":"markdown","c6219eb5":"markdown","56ea17ae":"markdown","7a282674":"markdown","e769773f":"markdown","26056fc9":"markdown","2c7feb09":"markdown","981bd4dd":"markdown","d9c28ef8":"markdown","244c34e3":"markdown","e28fd69f":"markdown","84377ad8":"markdown","d0c414f4":"markdown","7a53793b":"markdown","d82ef753":"markdown","54474bd2":"markdown","cd3c8ebc":"markdown","87dd4d16":"markdown","8831ffca":"markdown","b0d3e163":"markdown","dcbe4257":"markdown","12f6b35d":"markdown","4a67096d":"markdown","c5eb2787":"markdown","11984bf3":"markdown","286e7321":"markdown","72489e24":"markdown","56f71745":"markdown","a8041871":"markdown","815c92b0":"markdown","7093b764":"markdown","ce91a60c":"markdown","d18e789e":"markdown","5c270576":"markdown","8d3aa721":"markdown","1fbc233c":"markdown","642a92f9":"markdown","50df614a":"markdown","5b20861a":"markdown","d4423d63":"markdown","c80e2b0a":"markdown","636e9fee":"markdown","0563c231":"markdown","51a0ce59":"markdown","8c079b99":"markdown","983f3947":"markdown","e7034a3b":"markdown","62e5e1d1":"markdown","005bbe26":"markdown","0c4d86f5":"markdown","955bce32":"markdown","d253d017":"markdown","9d6de436":"markdown","37ad7ed0":"markdown","9de20f0b":"markdown","7c51c924":"markdown","7140a80d":"markdown","e2c055af":"markdown","310fe6a9":"markdown","26d61a8b":"markdown","2772fa56":"markdown","7881b68a":"markdown","19920ecb":"markdown","2e30d122":"markdown","d8a3a6e3":"markdown","e38ff951":"markdown","8149ac7c":"markdown","16aa3baf":"markdown","adf5144f":"markdown","6a615d62":"markdown","e89aa3a6":"markdown","4eb99c0b":"markdown","15595819":"markdown","b10bc809":"markdown","7cff9d26":"markdown","9eed39ca":"markdown","04eae92c":"markdown","0c37316a":"markdown","21cd2f63":"markdown","bedda99b":"markdown","f30b1839":"markdown","04801462":"markdown","f67891e4":"markdown","1304e51a":"markdown","64504b74":"markdown","2e285b64":"markdown","5e2b8d33":"markdown","91ab520e":"markdown","6fe0e8e9":"markdown","26463048":"markdown","bfcabc7f":"markdown","8f6f615f":"markdown","f1b4f5b8":"markdown","8556b09e":"markdown","32e68da2":"markdown","c4c75785":"markdown","8cb6c57c":"markdown","01043401":"markdown","ad408c0d":"markdown","49e939e7":"markdown","4ccf1b9e":"markdown","8b590ab3":"markdown","516b512a":"markdown","994f8159":"markdown","22fecd79":"markdown","0d16fa9c":"markdown","6d58a444":"markdown","86754a43":"markdown","03416c8d":"markdown","0237b9d6":"markdown","03f7c114":"markdown","d62897f8":"markdown","01ada15d":"markdown","3d03b3eb":"markdown","bc14d78a":"markdown","1bc4532f":"markdown","8e9703d5":"markdown","45576919":"markdown","7c6f447e":"markdown","ce04c236":"markdown","37bca23a":"markdown"},"source":{"b9870450":"# Code for showing toggle button for showing\/hiding the code\n# While exporting this Jupyter notebook to html for presentation purpose, hide the code for analytical view\nfrom IPython.display import HTML,Image,display\nHTML('''\n<script>\ncode_show=true;\nfunction code_toggle(){\nif (code_show){\n$('div.input').hide();\n$(\"#btn_toggle\").val(\"Show Code\");\n}else{\n$('div.input').show();\n$(\"#btn_toggle\").val(\"Hide Code\");\n}\ncode_show= !code_show;\n}\n<\/script>\n<style>\n.output_png {\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n    }\n<\/style>\n<form action=\"javascript:code_toggle()\">\n<input style = \"float:right\" type=\"submit\" id=\"btn_toggle\" value=\"Hide Code\">\n''')\n","1fe6e592":"#import necessary libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nimport mlxtend\nfrom mlxtend.preprocessing import standardize\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.linear_model import LinearRegression,Lasso,Ridge,ElasticNet\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score","3716c590":"#Visualization settings\nsns.set_style(style='white')\nsns.set(rc={\n    'figure.figsize': (12,7),\n    'axes.facecolor': 'white',\n    'axes.grid': True,\n    'grid.color': '.9',\n    'axes.linewidth': 1.0,\n    'grid.linestyle': u'-'},\n    font_scale=1.5)\ncustom_colors=[\"#3498db\", \"#95a5a6\",\"#34495e\", \"#2ecc71\", \"#e74c3c\"]\nsns.set_palette(custom_colors)","9ce4403c":"environment_dir='..\/input\/house-prices-advanced-regression-techniques\/'","98b9562d":"df_train=pd.read_csv(environment_dir+'train.csv')\nprint (\"Training data loaded\")","32243431":"print (\"Sample dataframe:\\n\")\ndf_train.head(3)","4961e5c0":"print (f\"Initial data frame contains {df_train.shape[0]} rows and {df_train.shape[1]} columns.\")","48aa7ac0":"col_tags =\"<ol>\" + \"\".join([f\"<li><h4>{col}<\/h4><\/li>\" for col in df_train.columns]) + \"<\/ol>\"\ndisplay(HTML('<h3>Feature names:<\/h3>'))\ndisplay(HTML(col_tags))","e3051e8c":"print (\"Dataset summary :\\n\")\ndf_train.info()","136ed9d2":"val=df_train.isnull().sum()\ndf=pd.DataFrame(val,columns=[\"NullCount\"]).query('NullCount != 0')\ndf=pd.DataFrame({\"Features\": df.index,\n             \"NullCount\": df.NullCount.values})\ndf.sort_values(by=\"NullCount\",inplace=True,ascending=False)","6ceafb05":"sns.barplot(data=df,x=\"Features\",y=\"NullCount\");\nplt.xticks(rotation=90);\nplt.title(\"Features having null values\");","8f08d020":"df","ba35241d":"print (f\"Number of features having null values: {df.shape[0]}\")","d3fc5340":"# Function for showing the statistcs and Pie chart for discrete features.\ndef str_discrete_analysis(fld_name):\n    print (\"Value counts: \\n\")\n    print (fld_name.value_counts())\n    plt.pie(fld_name.value_counts(),labels=fld_name.value_counts().index,autopct=lambda x: f'{x: .2f}%');\n    plt.title(fld_name.name + \" -distribution\");\n    print (\"Null value count : \", fld_name.isnull().sum())","a94c8d8c":"def conti_fld_analysis(fld_name):\n    print (fld_name.describe())\n    plt.subplot(2,2,1)\n    plt.hist(fld_name)\n    plt.subplot(2,2,2)\n    sns.boxplot(fld_name)\n    plt.suptitle(fld_name.name + \" -distribution\")\n    print (\"Null value count : \", fld_name.isnull().sum())","148f9aa7":"df_train.SalePrice.describe()","e9697fc2":"plt.figure(figsize=(20,10));\nplt.subplot(2,2,1)\nplt.hist(x=df_train.SalePrice);\nplt.subplot(2,2,2)\nsns.distplot(df_train.SalePrice);\nplt.subplot(2,2,3)\nsns.boxplot(df_train.SalePrice);\nplt.suptitle(\"SalePrice - distribution\");","c422b15f":"print (f\"Skewness in data : {df_train.SalePrice.skew()}\")","51defcd1":"df_train.MSSubClass.value_counts().plot.bar();\nplt.title(\"MSSubClass-value counts\");","ac5e1dce":"df_train.MSZoning.value_counts().plot.bar();\nplt.title(\"MSZoning value counts\");","d0f13b05":"plt.hist(x=df_train.LotFrontage,bins=100);\nplt.title(\"LotFrontage-distribution\");","a454cb89":"print (\"Descriptive statistics:\")\ndf_train.LotFrontage.describe()","1d9d0e94":"df_train.LotArea.describe()","56948d95":"plt.figure(figsize=(20,10));\nplt.subplot(2,2,1);\nplt.hist(df_train.LotArea);\nplt.subplot(2,2,2);\nsns.boxplot(df_train.LotArea);\nplt.suptitle(\"LotArea - distribution\");","ec2c7909":"print (f\"Unique values: \\n\")\nnp.unique(df_train.Street,return_counts=True)","97b33664":"plt.pie(df_train.Street.value_counts(), autopct=lambda s: f'{s:.2f}%',labels=[\"Paved\",\"Gravel\"]);\nplt.title(\"Street- distribution\");","b8d0d053":"print (\"Value counts:\\n\")\ndf_train.Alley.value_counts()","913d2160":"print (\"Value counts:\\n\")\ndf_train.LotShape.value_counts()","25ef74ec":"plt.pie(df_train.LotShape.value_counts(), autopct=lambda s: f'{s:.2f}%',labels=df_train.LotShape.value_counts().index);\nplt.title(\"LotShape - distribution\");","6b3d3f31":"print (\"Value counts:\")\ndf_train.LandContour.value_counts()","70a31951":"plt.pie(df_train.LandContour.value_counts(), autopct=lambda s: f'{s:.2f}%',labels=df_train.LandContour.value_counts().index);\nplt.title(\"LandContour - distribution\");","2703bad9":"print (\"Value Counts:\\n\")\ndf_train.Utilities.value_counts()","a8fdf4a9":"str_discrete_analysis(df_train.LotConfig)","e359ad28":"str_discrete_analysis(df_train.LandSlope)","a8254a98":"df_train.Neighborhood.value_counts().plot.bar();\nplt.title(\"Neighborhood - distribution\");","dac3306a":"str_discrete_analysis(df_train.Condition1)","e75da900":"display (HTML(\"<h3 style='background-color:yellow'>String Discrete variable <\/h3>\"))","f5769768":"str_discrete_analysis(df_train.Condition2)","5c8cf3e2":"str_discrete_analysis(df_train.BldgType)","6bac370e":"str_discrete_analysis(df_train.OverallQual)","cfe6b8cc":"str_discrete_analysis(df_train.OverallCond)","dba182e5":"df_train.YearBuilt.describe()","abcf9ed9":"plt.hist(df_train.YearBuilt);\nplt.title(\"Construction Year - distribution\");","f1727e82":"df_train.YearRemodAdd.describe()","37868e90":"plt.hist(df_train.YearRemodAdd);\nplt.title(\"Remodel date -distribution\");","baa48e3b":"str_discrete_analysis(df_train.RoofStyle)","24c63325":"str_discrete_analysis(df_train.RoofMatl)","e2b359d9":"str_discrete_analysis(df_train.Exterior1st)","7a5913d6":"str_discrete_analysis(df_train.Exterior2nd)","8608123a":"str_discrete_analysis(df_train.MasVnrType)","21920b6c":"conti_fld_analysis(df_train.MasVnrArea)","05e8a67d":"str_discrete_analysis(df_train.ExterQual)","e6485283":"str_discrete_analysis(df_train.ExterCond)","406946e1":"str_discrete_analysis(df_train.Foundation)","d1b2e923":"str_discrete_analysis(df_train.BsmtQual)","e2573294":"str_discrete_analysis(df_train.BsmtCond)","438bdace":"str_discrete_analysis(df_train.BsmtExposure)","6e168e46":"str_discrete_analysis(df_train.BsmtFinType1)","b12b8bbd":"conti_fld_analysis(df_train.BsmtFinSF1)","beb00d8f":"str_discrete_analysis(df_train.BsmtFinType2)","f91e031d":"conti_fld_analysis(df_train.BsmtFinSF2)","3a875295":"conti_fld_analysis(df_train.BsmtUnfSF)","0eadbfec":"conti_fld_analysis(df_train.TotalBsmtSF)","c643a9fd":"df_train.Heating.value_counts()","9082cb3d":"plt.pie(df_train.Heating.value_counts(),autopct=lambda s: f'{s:.2f}%',labels=df_train.Heating.value_counts().index);\nplt.title(\"Heating - distribution\");","6375e5b3":"df_train.HeatingQC.value_counts()","baaa49b1":"plt.pie(df_train.HeatingQC.value_counts(),autopct=lambda s: f'{s:.2f}%', labels=df_train.HeatingQC.value_counts().index);\nplt.title(\"HeatingQC - distribution\");","12b061e4":"str_discrete_analysis(df_train.CentralAir)","e7c71e2d":"str_discrete_analysis(df_train.Electrical)","44d4b766":"conti_fld_analysis(df_train[\"1stFlrSF\"])","1e473ada":"conti_fld_analysis(df_train[\"2ndFlrSF\"])","896d0baa":"df_train.LowQualFinSF.describe()","fe7b2b5d":"plt.subplot(2,2,1)\nplt.hist(df_train.LowQualFinSF);\nplt.subplot(2,2,2)\nplt.boxplot(df_train.LowQualFinSF);\nplt.suptitle(\"Low Quality Fisnished Square feet - distribution\");","51a6de67":"df_train.GrLivArea.describe()","efe6fc68":"plt.hist(df_train.GrLivArea);\nplt.title(\"GrLivArea - distribution\");\nplt.ylabel(\"Count\");","a060439a":"str_discrete_analysis(df_train.BsmtFullBath)","329f6731":"str_discrete_analysis(df_train.BsmtHalfBath)","baf1044a":"str_discrete_analysis(df_train.FullBath)","14d2ba4e":"str_discrete_analysis(df_train.HalfBath)","3e5212d5":"str_discrete_analysis(df_train.BedroomAbvGr)","437d79e8":"str_discrete_analysis(df_train.KitchenAbvGr)","6edfcc62":"df_train.KitchenQual.value_counts()","10551fed":"plt.pie(df_train.KitchenQual.value_counts(),labels=df_train.KitchenQual.value_counts().index,autopct=lambda x: f'{x:.2f}%');\nplt.title(\"Kitchen Quality -distribution\");","198e0c80":"str_discrete_analysis(df_train.TotRmsAbvGrd)","1c85a349":"str_discrete_analysis(df_train.Functional)","9eb17520":"df_train.Fireplaces.describe()","a6675eee":"plt.pie(df_train.Fireplaces.value_counts(),autopct=lambda s : f'{s:.2f}%',labels=df_train.Fireplaces.value_counts().index);\nplt.title(\"Number of Fireplaces  -distribution\");","d8ea072d":"str_discrete_analysis(df_train.FireplaceQu)","ddcd683b":"str_discrete_analysis(df_train.GarageType)","0c6d0aeb":"df_train.GarageYrBlt.describe()","ab82751f":"plt.hist(df_train.GarageYrBlt);\nplt.title(\"GarageYrBlt - distribution\");","dd5772ec":"str_discrete_analysis(df_train.GarageFinish)","d7e581cf":"str_discrete_analysis(df_train.GarageCars)","3ace9760":"conti_fld_analysis(df_train.GarageArea)","6d9bd5aa":"str_discrete_analysis(df_train.GarageQual)","a9ab6c13":"str_discrete_analysis(df_train.GarageCond)","e88a763d":"str_discrete_analysis(df_train.PavedDrive)","84c800e1":"conti_fld_analysis(df_train.WoodDeckSF)","8618117e":"conti_fld_analysis(df_train.OpenPorchSF)","9f20aed0":"df_train.EnclosedPorch.describe()","34a5d27d":"plt.subplot(2,2,1)\nplt.hist(df_train.EnclosedPorch);\nplt.subplot(2,2,2)\nsns.boxplot(df_train.EnclosedPorch);\nplt.suptitle(\"EnclosedPorch - distribution\");\n","d8ffe35d":"conti_fld_analysis(df_train[\"3SsnPorch\"])","568eb30d":"conti_fld_analysis(df_train.ScreenPorch)","219e1fd0":"df_train.PoolArea.describe()","c7cf935c":"plt.subplot(2,2,1)\nplt.hist(df_train.PoolArea, bins=20);\nplt.subplot(2,2,2)\nplt.boxplot(df_train.PoolArea);\nplt.suptitle(\"PoolArea -distribution\");","034a1f07":"str_discrete_analysis(df_train.PoolQC)","6f3de41e":"df_train.Fence.value_counts()","1fecedb5":"str_discrete_analysis(df_train.MiscFeature)","7385653e":"conti_fld_analysis(df_train.MiscVal)","e1364728":"print (f\"Unique values: {df_train.MoSold.unique().tolist()}\")","784b6738":"df_train.YrSold.describe()","7cfcbb05":"plt.hist(df_train.YrSold);\nplt.xticks(df_train.YrSold.unique().tolist());\nplt.title(\"Year Sold - distribution\");","2b86f3d3":"str_discrete_analysis(df_train.SaleType)","7a872bff":"df_train.SaleCondition.value_counts()","85b20afe":"plt.pie(df_train.SaleCondition.value_counts(),autopct=lambda s: f'{s:.2f}%',labels=df_train.SaleCondition.value_counts().index);\nplt.title(\"Sale condition - distribution\");","792bb8f8":"str_discrete_analysis(df_train.HouseStyle)","262537e0":"grp_neighbrhd=df_train.groupby(\"Neighborhood\")","5bd01978":"unique_neighbrhd=df_train.Neighborhood.unique().tolist()","201e0494":"neighbrhd_list, SalePrice_list = [],[]\nfor item in unique_neighbrhd:\n    df = grp_neighbrhd.get_group(item)\n    neighbrhd_list.append(item)\n    SalePrice_list.append(df.SalePrice.mean())","084d28b6":"df_neighbrhd=pd.DataFrame({\"Neighborhood\": neighbrhd_list,\n                          \"SalePrice\": SalePrice_list})\ndf_neighbrhd.sort_values(\"SalePrice\",ascending=False,inplace=True)","e1a8917d":"sns.barplot(data=df_neighbrhd,x=\"Neighborhood\",y=\"SalePrice\");\nplt.xticks(rotation=90);\nplt.ylabel(\"Avg SalePrice\");\nplt.title(\"Average SalePrice based on Neighborhood\");","f344f94c":"del([grp_neighbrhd,df_neighbrhd,df,unique_neighbrhd])","ab762377":"grp_overallqual=df_train.groupby(\"OverallQual\")\nunique_overallqual=df_train.OverallQual.unique()\nsale_price_list,overall_qual=[],[]\nfor item in unique_overallqual:\n    df=grp_overallqual.get_group(item)\n    overall_qual.append(item)\n    sale_price_list.append(df.SalePrice.mean())\ndf_overallqual=pd.DataFrame({\"OverallQual\":overall_qual,\n                            \"SalePrice\": sale_price_list})","b4712cce":"sns.lineplot(data=df_overallqual,x=\"OverallQual\",y=\"SalePrice\");\nplt.title(\"SalePrice based on OverAllQuality\");\nplt.ylabel(\"Average SalePrice\");\nplt.xlabel(\"OverAll Quality\");","12418fac":"del(df,df_overallqual)","3e3d1fa0":"df=df_train.loc[:,[\"YearBuilt\",\"YrSold\",\"SalePrice\"]].copy()","315f0f22":"df[\"Age\"]=df.YrSold-df.YearBuilt","79d298a3":"print (\"House age statistics:\\n\")\ndf.Age.describe()","045d67e4":"grp_age=df.groupby(\"Age\")\nunique_age=df.Age.unique()\nage_list,sale_price_list,count_list=[],[],[]\nfor age in unique_age:\n    df_sale=grp_age.get_group(age)\n    age_list.append(age)\n    sale_price_list.append(df_sale.SalePrice.mean())\n    count_list.append(df_sale.Age.count())","cdd4d276":"df_sale=pd.DataFrame({\"Age\": age_list,\n                     \"SalePrice\": sale_price_list,\n                     \"Count\":count_list})","77e82ac1":"sns.lineplot(data=df_sale,x=\"Age\",y=\"SalePrice\");\nplt.title(\"Age of the house vs. SalePrice\");\nplt.ylabel(\"Average SalePrice\");\n","224ca51a":"sns.lineplot(data=df_sale,x=\"Age\",y=\"Count\");\nplt.xticks(rotation=90);\nplt.title(\"Count of reords\");","380d56a3":"df_input=df_train.copy()","7515d43d":"def process_imputation(df_input):\n    df_input[\"PoolQC\"].fillna(\"NA\",inplace=True)\n    print (\"PoolQC - replaced missing values with NA\")\n    df_input.MiscFeature.fillna(\"NA\",inplace=True)\n    print (\"MiscFeature - replaced missing values with NA\")\n    df_input.Alley.fillna(\"NA\",inplace=True)\n    print (\"Alley - replaced missing values with NA\")\n    df_input.Fence.fillna('NA',inplace=True)\n    print (\"Fence - replaced missing values with NA\")\n    df_input.FireplaceQu.fillna(\"NA\",inplace=True)\n    print (\"FireplaceQuality - replaced missing values with NA\")\n    df_input.LotFrontage.fillna(0,inplace=True)\n    print (\"Lot frontage - replaced missing values with zero\")\n    df_input.GarageType.fillna(\"NA\",inplace=True)\n    print (\"Garage type - replaced missing values with NA\")\n    print (\"GarageYrBlt - Replacing missing value with House built year\")\n    df_input.GarageYrBlt.fillna(df_input.YearBuilt,inplace=True)\n    print (\"GarageFinish - Replacing missing values with NA\")\n    df_input.GarageFinish.fillna('NA',inplace=True)\n    print (\"GarageQual - Replacing missing values with NA\")\n    df_input.GarageQual.fillna('NA',inplace=True)\n    print (\"GarageCond - Replacing missing values with NA\")\n    df_input.GarageCond.fillna('NA',inplace=True)\n    for col in [\"BsmtExposure\",\"BsmtFinType2\",\"BsmtFinType1\",\"BsmtCond\",\"BsmtQual\"]:\n        df_input[col].fillna(\"NA\", inplace=True)\n    print (f\"{col} - replaced missing values with NA\")\n    df_input.MasVnrArea.fillna(0,inplace=True)\n    print (\"MasVnrArea - replaced missing values with 0\")\n    df_input.MasVnrType.fillna(\"None\",inplace=True)\n    print (\"MasVnrType - replaced missing values with None\")\n    df_input.Electrical.fillna(\"NA\",inplace=True)\n    print (\"Electrical - replaced missing values with NA\")\n    print (\"Is there any missing values? \")\n    print (df_input.isnull().any().value_counts().index)\n    return df_input","ae4a0420":"df_input=process_imputation(df_input)","cfa0acbc":"print (f\"Target variable SalepPrice skewness: {df_input.SalePrice.skew()}\")","3070a405":"sns.boxplot(data=df_input,x=\"SalePrice\")\nplt.title(\"SalePrice -original distribution\");","5b11357f":"total = df_input.shape[0]\n#threshold_price=300000\n#cnt=df_input.query(\"SalePrice > @threshold_price\").shape[0]\n#print (\"Target variable having outliers. Let's find how many records are there after\", threshold_price, \" :\",cnt, \" which is \" ,(cnt\/total)*100, \"%\")","ac744011":"#print (\"Removing records with SalePrice > \", threshold_price)\n#df_input.drop(df_input[df_input[\"SalePrice\"]>threshold_price].index,inplace=True)","67021695":"plt.subplot(2,2,1)\nsns.boxplot(data=df_input,x=\"SalePrice\")\nplt.suptitle(\"SalePrice -Ater removing outliers distribution\");\nplt.subplot(2,2,2)\nplt.hist(data=df_input,x=\"SalePrice\");\nprint (\"Skewness\",df_input.SalePrice.skew())","b9bd422e":"print (\"Applying SquareRoot method of Saleprice for reducing the skewness.\")\ndf_input[\"SalePrice_sqrt\"] =np.sqrt(df_input.SalePrice)\nplt.hist(df_input.SalePrice_sqrt);\nplt.title(\"Square root of SalePrice - distribution\");\nprint (\"Skewness: \", df_input.SalePrice_sqrt.skew());","3cd623fc":"def wrangle_data(df):\n    print (f\"Shape of the dataframe before wrangling: {df.shape}\")\n    #Create new feature Age from year built and year sold\n    df[\"Age\"]=df[\"YrSold\"] - df[\"YearBuilt\"]\n    print (\"Created new feature 'Age' using Year sold and Year built\")\n    df.drop([\"YearBuilt\",\"YrSold\"],axis=1,inplace=True)\n    print (\"Removed features - YearBuilt,YrSold\")\n    \n    #Remove features having more missing values\n    df.drop([\"PoolQC\",\"MiscFeature\",\"Alley\"],axis=1,inplace=True)\n        \n    #Below features contains meaningless value or presence of one value dominant.\n    #Hence This features doesn't make any sense.So removing from dataset.\n    del_vars=[\"Street\",\"Utilities\",\"Condition2\",\"RoofMatl\",\"Electrical\",\"Heating\", \"MoSold\",\"Id\"]\n    df.drop(del_vars,inplace=True,axis=1)\n    \n    df[\"BathRooms\"]=df[\"BsmtFullBath\"]+df[\"BsmtHalfBath\"]+df[\"FullBath\"]+df[\"HalfBath\"]\n    df.drop([\"BsmtFullBath\",\"BsmtHalfBath\",\"FullBath\",\"HalfBath\"],axis=1,inplace=True)\n            \n    for var in [\"BsmtFinType1\",\"BsmtFinType2\"]:\n        df[var].replace([\"GLQ\",\"ALQ\",\"BLQ\",\"Rec\",\"LwQ\",\"Unf\",\"NA\"],[6,5,4,3,2,1,0],inplace=True)\n        \n    for var in [\"ExterQual\",\"ExterCond\",\"BsmtCond\",\"HeatingQC\",\"KitchenQual\",\"FireplaceQu\",\"GarageQual\",\"GarageCond\"]:\n        df[var].replace([\"Ex\",\"Gd\",\"TA\",\"Fa\",\"Po\",\"NA\"],[5,4,3,2,1,0],inplace=True)\n        \n    for var in [\"BsmtExposure\"]:\n        df[var].replace([\"Gd\",\"Av\",\"Mn\",\"No\",\"NA\"],[4,3,2,1,0],inplace=True)\n        \n    for var in [\"GarageFinish\"]:\n        df[var].replace([\"Fin\",\"RFn\",\"Unf\",\"NA\"],[3,2,1,0],inplace=True)\n        \n    for var in [\"PavedDrive\"]:\n        df[var].replace([\"Y\",\"P\",\"N\"],[2,1,0],inplace=True)\n    \n    for var in [\"Fence\"]:\n         df[var].replace([\"GdPrv\",\"MnPrv\",\"GdWo\",\"MnWw\",\"NA\"],[4,3,2,1,0],inplace=True)   \n        \n    df[\"BsmtQual\"].replace([\"Ex\",\"Gd\",\"TA\",\"Fa\",\"Po\",\"NA\"],[5,4,3,2,1,0],inplace=True)\n        \n    #Creating new feature FlrSf\n    df[\"FlrSF\"]=df[\"1stFlrSF\"] + df[\"2ndFlrSF\"]\n    df.drop([\"1stFlrSF\",\"2ndFlrSF\"],axis=1,inplace=True)\n            \n    df=pd.get_dummies(df)\n    print (f\"Shape of the dataframe after wrangling {df.shape}\")\n    return df","c627e17e":"df_input=wrangle_data(df_input)","218312bf":"df_input.drop(\"SalePrice\",axis=1,inplace=True)\nprint (\"Removed the feature SalePrice\")","99eeceef":"#Checking for any String fields.\nprint(\"List of any string data?\")\ndf_input.dtypes[df_input.dtypes==\"object\"]","4b39be07":"corr_matrix=df_input.corr()","3e980723":"corr_matrix=pd.DataFrame(corr_matrix['SalePrice_sqrt']).sort_values('SalePrice_sqrt',ascending=False)","390b64c7":"negative_corr_flds=corr_matrix[corr_matrix[\"SalePrice_sqrt\"]<= 0].index.tolist()","e5370c8d":"#Remove negative correlated features\ndf_input.drop(negative_corr_flds,axis=1,inplace=True)","368fe301":"#Removing below derived features from dataset, since they are not present in the final test file.\ndf_input.drop([\"HouseStyle_2.5Fin\",\"Exterior1st_ImStucc\",\"Exterior1st_Stone\",\"Exterior2nd_Other\"],axis=1,inplace=True)\n","e17cf5f2":"corr_matrix_after=df_input.corr()\ncorr_matrix_after=pd.DataFrame(corr_matrix_after['SalePrice_sqrt']).sort_values('SalePrice_sqrt',ascending=False)\nplt.figure(figsize=(3,15));\nsns.heatmap(corr_matrix_after,cmap='inferno');","bd2e87ae":"#Create independent and dependent features for model training.\nx=df_input.drop('SalePrice_sqrt',axis=1)\ny=df_input.SalePrice_sqrt\ntraining_features=x.columns.tolist()","b730e3e5":"#Training and Testing split.\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=1)\nprint (f\"Shape of x train: {x_train.shape}, y train: {y_train.shape},x test: {x_test.shape}, y test: {y_test.shape}\")","714d6a60":"x.columns","ecf23f33":"df_model_results=pd.DataFrame(columns=[\"ModelName\",\"TrainScore\",\"TestScore\"])\n\ndef store_model_results(modl_name,train_score,test_score):\n    global df_model_results\n    row_loc=df_model_results.shape[0]+1\n    df_model_results.loc[row_loc,[\"ModelName\",\"TrainScore\",\"TestScore\"]]=[modl_name,train_score,test_score]\n","d7b197e5":"#Function for providing generalized results for regression model\ndef evaluate_model(model,x_train,y_train,x_test,y_test):\n    model.fit(x_train,y_train)\n    model_name=model.__class__.__name__\n    train_score=model.score(x_train,y_train)\n    test_score=model.score(x_test,y_test)\n    print (f\"Training score: {train_score} \\nTesting score: {test_score}\")\n    \n    store_model_results(model_name,train_score,test_score )\n    y_pred=model.predict(x_test)\n    print(\"Prediction completed\")\n    df=pd.DataFrame({\"Actual\": y_test,\n                     \"Predicted\":y_pred})\n    \n    #Applying square function to transform to original target variable.\n    df=df.apply(np.square)\n    #Finding the difference between original and predicted\n    df[\"difference\"]=df.Predicted-df.Actual\n    df.reset_index(inplace=True)\n    #Plot actual vs predicted\n    plt.figure(figsize=(20,10));\n    sns.scatterplot(data=df,x=\"index\",y=\"Actual\",color='lightgrey',label=[\"Actual\"]);\n    sns.lineplot(data=df,x=\"index\",y=\"Predicted\",color='red',label=[\"Predicted\"]);\n    plt.legend(loc=\"right\",bbox_to_anchor=(1.1,1));\n    plt.title(model_name+\" -Actual vs Predicted\");\n    plt.show()\n    return model\n    ","94211138":"df_model_results=df_model_results.iloc[0:0]\nfor model in  [LinearRegression(),\n               Lasso(),Ridge(),\n               ElasticNet(),\n               XGBRegressor(learning_rate=0.1,\n                            max_depth=3,\n                            colsample_bytree=0.2,\n                            subsample=0.7,\n                            n_estimators=300)]:\n    store_model_results(model.__class__.__name__,\n                       'CrossValidation', \n                       cross_val_score(model,x,y,cv=3).mean(),\n                       )\ndf_model_results.sort_values(\"TestScore\",ascending=False,inplace=True)\ndf_model_results","a92cff2d":" print (f\"Selected model for prediction:\\n {df_model_results.head(1)['ModelName']}\")","52aadeec":"lr_model=evaluate_model(LinearRegression(normalize=True),x_train,y_train,x_test,y_test)","23ce57d8":"lasso_reg=evaluate_model(Lasso(alpha=.01,normalize=True),x_train,y_train,x_test,y_test)","2e8ce2b1":"ridge_reg=evaluate_model(Ridge(normalize=True),x_train,y_train,x_test,y_test)","4648bad0":"el=evaluate_model(ElasticNet(normalize=False),x_train,y_train,x_test,y_test)","b4b11260":"xgb_reg=evaluate_model(XGBRegressor(learning_rate=0.1,\n                            max_depth=3,\n                            colsample_bytree=0.2,\n                            subsample=0.7,\n                            n_estimators=300),x_train,y_train,x_test,y_test)","9d1bf932":"del(df,df_input,df_sale,df_train)","9fbd14a4":"#Train the model estimator with entire training data\nmodel=XGBRegressor(learning_rate=0.1,\n                            max_depth=3,\n                            colsample_bytree=0.2,\n                            subsample=0.7,\n                            n_estimators=300)\nmodel.fit(x,y)","df2bfff4":"df_test=pd.read_csv(environment_dir+\"test.csv\")","0291ecfc":"df_input=df_test.copy()","1d5492b7":"print (\"Shape of test data: \",df_input.shape)","ff7e8c16":"df_input=process_imputation(df_input)","ed366042":"val=df_input.isnull().sum()\ndf=pd.DataFrame(val,columns=[\"NullCount\"]).query('NullCount != 0')\ndf=pd.DataFrame({\"Features\": df.index,\n             \"NullCount\": df.NullCount.values})\ndf.sort_values(by=\"NullCount\",inplace=True,ascending=False)\nprint(\"Fields with missing values:\\n\",df)","c8d47df0":"for col in [\"MSZoning\",\"Utilities\",\"Functional\",\"Exterior1st\",\"Exterior2nd\",\"KitchenQual\",\"SaleType\"]:\n    df_input[col].fillna(\"NA\",inplace=True)\n    print (col,\"Replaced missing values with NA\")\nfor col in [\"BsmtFullBath\",\"BsmtHalfBath\",\"BsmtFinSF1\",\"BsmtFinSF2\",\"BsmtUnfSF\",\"TotalBsmtSF\",\"GarageCars\",\"GarageArea\"]:\n    df_input[col].fillna(0,inplace=True)\n    print (col,\"Replaced missing values with 0\")","05fb4b13":"val=df_input.isnull().sum()\ndf=pd.DataFrame(val,columns=[\"NullCount\"]).query('NullCount != 0')\ndf=pd.DataFrame({\"Features\": df.index,\n             \"NullCount\": df.NullCount.values})\ndf.sort_values(by=\"NullCount\",inplace=True,ascending=False)\nprint(\"Fields with missing values:\\n\",df)","00c65b58":"df_result=pd.DataFrame()\ndf_result[\"Id\"]=df_input.Id","0a0b5ffc":"df_input=wrangle_data(df_input)","a9278e53":"print (\"Any string features: \")\n#Checking for any String fields.\ndf_input.dtypes[df_input.dtypes==\"object\"]","ab8dabbb":"#Remove negative correlated features\ndf_input.drop(negative_corr_flds,axis=1,inplace=True)","027b581a":"test_features=df_input.columns","55c776a4":"print (\"Columns Not present in test_features: \\n\")\nfor x in training_features:\n    if x not in test_features:\n        print (x)\nprint (\"\\nColumns Not present in train_features:\\n\")\nfor x in test_features:\n    if x not in training_features:\n        print (x)       ","43b43c4a":"#Removing below unwanted columns\ndf_input.drop([\"Exterior1st_NA\", \"MSZoning_NA\", \"SaleType_NA\", \"Exterior2nd_NA\",\"Functional_NA\"],axis=1,inplace=True)","58d2d337":"x=df_input\ny_predict=model.predict(x)\ny_predict=np.square(y_predict)","765fe227":"df_result[\"SalePrice\"]=pd.Series(y_predict.tolist())","55edfd58":"df_result","dc28cf91":"print (\"Exporting predicted results\")\ndf_result.to_csv(\"predict_result.csv\",index=False)","aec67456":"### 10. LotConfig      \nLot configuration<br>\n\n       Inside\tInside lot<br>\n       Corner\tCorner lot<br>\n       CulDSac\tCul-de-sac<br>\n       FR2\tFrontage on 2 sides of property<br>\n       FR3\tFrontage on 3 sides of property<br>\n","5aee1ff4":"<h3 style='background-color:yellow'>Continuous variable. <\/h3>","b4841768":"### 9. Utilities\nType of utilities available <br>\n  AllPub\tAll public Utilities (E,G,W,& S)\t<br>\n       NoSewr\tElectricity, Gas, and Water (Septic Tank)<br>\n       NoSeWa\tElectricity and Gas Only<br>\n       ELO\tElectricity only<br>","77e49fdd":"### 66. EnclosedPorch: Enclosed porch area in square feet","83d2bde7":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","17b522c4":"<h3 style='background-color:yellow'>\nCategorical String variable.<br>\n93% houses are Airconditioned.<br>\n<\/h3>","baf51f0e":"### 20. RoofStyle: Type of roof\n\n       Flat\tFlat<br>\n       Gable\tGable<br>\n       Gambrel\tGabrel (Barn)<br>\n       Hip\tHip<br>\n       Mansard\tMansard<br>\n       Shed\tShed<br>","a89af831":"<h3 style='background-color:yellow'>\nCategorical variable.\n<\/h3>","d0548084":"### 44. GrLivArea: Above grade (ground) living area square feet","3a593549":"### 40. Electrical: Electrical system\n\n       SBrkr\tStandard Circuit Breakers & Romex\n       FuseA\tFuse Box over 60 AMP and all Romex wiring (Average)\t\n       FuseF\t60 AMP Fuse Box and mostly Romex wiring (Fair)\n       FuseP\t60 AMP Fuse Box and mostly knob & tube wiring (poor)\n       Mix\tMixed","245af113":"<h3 style='background-color:yellow'>\nOrdinal variable. <br>\nPresence of missing values.\n<\/h3>","156297f8":"### 23. MasVnrType: Masonry veneer type\n\n       BrkCmn\tBrick Common<br>\n       BrkFace\tBrick Face<br>\n       CBlock\tCinder Block<br>\n       None\tNone<br>\n       Stone\tStone<br>","d185bb3a":"### 2. OverAll quality of the house and SalePrice","5d72ff6a":"### 18. YearBuilt: Original construction date","716bd70e":"<h3 style='background-color:yellow'>\nCategorial variable.\n<\/h3>","047cdf4b":"## <center> Data Imputation <\/center>","af088c51":"<h3 style='background-color:yellow'>\nCategorical String variable.\n<\/h3>","bc39bbdd":"### 65. OpenPorchSF: Open porch area in square feet","bc946192":"### 72. MiscFeature: Miscellaneous feature not covered in other categories\n\t\t\n       Elev\tElevator\n       Gar2\t2nd Garage (if not described in garage section)\n       Othr\tOther\n       Shed\tShed (over 100 SF)\n       TenC\tTennis Court\n       NA\tNone","3cd684a6":"### 69. PoolArea: Pool area in square feet","2d5051cc":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","9515e78e":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","ce1e64c0":"<h3 style='background-color:yellow'>\nContinuous variable. <br>\nMissing values present.\n<\/h3>","1aa03f3a":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","3882509f":"### 48. HalfBath: Half baths above grade","1fdfe87d":"<h3 style='background-color:yellow'>\nOrdinal variable\n<\/h3>","42a5585d":"### 23. Exterior2nd: Exterior covering on house (if more than one material)\n\n       AsbShng\tAsbestos Shingles<br>\n       AsphShn\tAsphalt Shingles<br>\n       BrkComm\tBrick Common<br>\n       BrkFace\tBrick Face<br>\n       CBlock\tCinder Block<br>\n       CemntBd\tCement Board<br>\n       HdBoard\tHard Board<br>\n       ImStucc\tImitation Stucco<br>\n       MetalSd\tMetal Siding<br>\n       Other\tOther<br>\n       Plywood\tPlywood<br>\n       PreCast\tPreCast<br>\n       Stone\tStone<br>\n       Stucco\tStucco<br>\n       VinylSd\tVinyl Siding<br>\n       Wd Sdng\tWood Siding<br>\n       WdShing\tWood Shingles<br>","071828df":"### Model: ElasticNet Regression","409f4d87":"<h3 style='background-color:yellow'> String Discrete variable<\/h3>","bd7fcc71":"<h3 style='background-color:yellow'>Continuous variable. <\/h3>","05aad169":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","6ec3187f":"### 23. Exterior1st: Exterior covering on house\n\n       AsbShng\tAsbestos Shingles<br>\n       AsphShn\tAsphalt Shingles<br>\n       BrkComm\tBrick Common<br>\n       BrkFace\tBrick Face<br>\n       CBlock\tCinder Block<br>\n       CemntBd\tCement Board<br>\n       HdBoard\tHard Board<br>\n       ImStucc\tImitation Stucco<br>\n       MetalSd\tMetal Siding<br>\n       Other\tOther<br>\n       Plywood\tPlywood<br>\n       PreCast\tPreCast\t<br>\n       Stone\tStone<br>\n       Stucco\tStucco<br>\n       VinylSd\tVinyl Siding<br>\n       Wd Sdng\tWood Siding<br>\n       WdShing\tWood Shingles<br>","bb6a2636":"### 13. Condition1\nProximity to various conditions <br>\n\t\n       Artery\tAdjacent to arterial street<br>\n       Feedr\tAdjacent to feeder street\t<br>\n       Norm\tNormal\t<br>\n       RRNn\tWithin 200' of North-South Railroad<br>\n       RRAn\tAdjacent to North-South Railroad<br>\n       PosN\tNear positive off-site feature--park, greenbelt, etc.<br>\n       PosA\tAdjacent to postive off-site feature<br>\n       RRNe\tWithin 200' of East-West Railroad<br>\n       RRAe\tAdjacent to East-West Railroad<br>","777e64d2":"<h3 style='background-color:yellow'>\nOrdinal\n  variable.\n<\/h3>","bf8c8e7d":"### 46. BsmtHalfBath: Basement half bathrooms","8121397d":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","47b485a7":"### 16. OverallQual: Rates the overall material and finish of the house\n\n       10\tVery Excellent<br>\n       9\tExcellent<br>\n       8\tVery Good<br>\n       7\tGood<br>\n       6\tAbove Average<br>\n       5\tAverage<br>\n       4\tBelow Average<br>\n       3\tFair<br>\n       2\tPoor<br>\n       1\tVery Poor<br>","04d3fbfe":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","07ab0b60":"### 43. LowQualFinSF: Low quality finished square feet (all floors)","88a29112":"## 4. LotArea\nLot size in square feet","09b9e4c0":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","a2d154db":"## <center> Test file output prediction<\/center>","35a47b62":"### Model: LinearRegression","ab9902ef":"### 27. Foundation: Type of foundation\n\t\t\n       BrkTil\tBrick & Tile\n       CBlock\tCinder Block\n       PConc\tPoured Contrete\t\n       Slab\tSlab\n       Stone\tStone\n       Wood\tWood","9aaeec37":"### 14. Condition2\nProximity to various conditions (if more than one is present)<br>\n\t\t\n       Artery\tAdjacent to arterial street<br>\n       Feedr\tAdjacent to feeder street\t<br>\n       Norm\tNormal\t<br>\n       RRNn\tWithin 200' of North-South Railroad<br>\n       RRAn\tAdjacent to North-South Railroad<br>\n       PosN\tNear positive off-site feature--park, greenbelt, etc.<br>\n       PosA\tAdjacent to postive off-site feature<br>\n       RRNe\tWithin 200' of East-West Railroad<br>\n       RRAe\tAdjacent to East-West Railroad<br>","b067fac6":"### 35. BsmtUnfSF: Unfinished square feet of basement area","4c70176b":"## <center> Data cleaning,manipulation <\/center>","992af408":"<h3 style='background-color:yellow'>\nString Categorical variable.\n<\/h3>","968f273e":"<h3 style='background-color:yellow'> Discrete variable.<\/h3>","7afaa1f8":"### 49. BedroomAbvGr: Bedrooms above grade (does NOT include basement bedrooms)","d37a6579":"### SalePrice - Target Feature","fa167e08":"### 8. LandContour    \n Flatness of the property\n\n       Lvl\tNear Flat\/Level\t <br>\n       Bnk\tBanked - Quick and significant rise from street grade to building<br>\n       HLS\tHillside - Significant slope from side to side<br>\n       Low\tDepression<br>","44de31d6":"### 19. YearRemodAdd: Remodel date (same as construction date if no remodeling or additions)","98ed03b7":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","74db16f7":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","146efedc":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","70a3a1a4":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","160aac2c":"<h3 style='background-color:yellow'>\nString Categorical variable. <br>\nAlmost  99% values are 'Paved'\n<\/h3>","c6219eb5":"<h3 style='background-color:yellow'> \nContinuous variable.\n<\/h3>","56ea17ae":"### 56. GarageType: Garage location\n\t\t\n       2Types\tMore than one type of garage\n       Attchd\tAttached to home\n       Basment\tBasement Garage\n       BuiltIn\tBuilt-In (Garage part of house - typically has room above garage)\n       CarPort\tCar Port\n       Detchd\tDetached from home\n       NA\tNo Garage","7a282674":"## <center> Model Evaluation <\/center>","e769773f":"<h3 style='background-color:yellow'> Ordinal variable<\/h3>","26056fc9":"<h3 style='background-color:yellow'> \n    Missing values removed from dataset.\n    <\/h3>","2c7feb09":"<h3 style='background-color:yellow'>\nContinuous variable\n<\/h3>","981bd4dd":"### 67. 3SsnPorch: Three season porch area in square feet","d9c28ef8":"### 51. KitchenQual: Kitchen quality\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor","244c34e3":"## <center> Features - Exploratory Data Analysis<\/center>","e28fd69f":"### 47. FullBath: Full bathrooms above grade","84377ad8":"### Model: Lasso Regression","d0c414f4":"### 55. FireplaceQu: Fireplace quality\n\n       Ex\tExcellent - Exceptional Masonry Fireplace\n       Gd\tGood - Masonry Fireplace in main level\n       TA\tAverage - Prefabricated Fireplace in main living area or Masonry Fireplace in basement\n       Fa\tFair - Prefabricated Fireplace in basement\n       Po\tPoor - Ben Franklin Stove\n       NA\tNo Fireplace","7a53793b":"### 6. Alley\nType of alley access to property <br>\n   Grvl\tGravel <br>\n       Pave\tPaved<br>\n       NA \tNo alley access<br>\n","d82ef753":"<h3 style='background-color:yellow'> Integer ordinal variable<\/h3>","54474bd2":"# <center>House Prices<\/center>\nWith explanatory variables describing (almost) every aspect of residential homes in Ames, lowa. Using this dataset predict the final price of each home.","cd3c8ebc":"<h3 style='background-color:yellow'>\nOrdinal variable.\n    50% of the houses having average Kitchen.\n    <br> Only 7% having excellent kitchens.\n<\/h3>","87dd4d16":"### 38. HeatingQC: Heating quality and condition\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tAverage\/Typical\n       Fa\tFair\n       Po\tPoor","8831ffca":"### 54. Fireplaces: Number of fireplaces","b0d3e163":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","dcbe4257":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","12f6b35d":"### 52. TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)","4a67096d":"### 60. GarageArea: Size of garage in square feet","c5eb2787":"### 78. HouseStyle\n       1Story\tOne story\n       1.5Fin\tOne and one-half story: 2nd level finished\n       1.5Unf\tOne and one-half story: 2nd level unfinished\n       2Story\tTwo story\n       2.5Fin\tTwo and one-half story: 2nd level finished\n       2.5Unf\tTwo and one-half story: 2nd level unfinished\n       SFoyer\tSplit Foyer\n       SLvl\tSplit Level","11984bf3":"### 17. OverallCond: Rates the overall condition of the house\n\n       10\tVery Excellent<br>\n       9\tExcellent<br>\n       8\tVery Good<br>\n       7\tGood<br>\n       6\tAbove Average\t<br>\n       5\tAverage<br>\n       4\tBelow Average\t<br>\n       3\tFair<br>\n       2\tPoor<br>\n       1\tVery Poor<br>","286e7321":"### 31. BsmtFinType1: Rating of basement finished area\n\n       GLQ\tGood Living Quarters\n       ALQ\tAverage Living Quarters\n       BLQ\tBelow Average Living Quarters\t\n       Rec\tAverage Rec Room\n       LwQ\tLow Quality\n       Unf\tUnfinshed\n       NA\tNo Basement","72489e24":"### 71. Fence: Fence quality\n\t\t\n       GdPrv\tGood Privacy\n       MnPrv\tMinimum Privacy\n       GdWo\tGood Wood\n       MnWw\tMinimum Wood\/Wire\n       NA\tNo Fence","56f71745":"### 12. Neighborhood   \nPhysical locations within Ames city limits<br>\n\n       Blmngtn\tBloomington Heights<br>\n       Blueste\tBluestem<br>\n       BrDale\tBriardale<br>\n       BrkSide\tBrookside<br>\n       ClearCr\tClear Creek<br>\n       CollgCr\tCollege Creek<br>\n       Crawfor\tCrawford<br>\n       Edwards\tEdwards<br>\n       Gilbert\tGilbert<br>\n       IDOTRR\tIowa DOT and Rail Road<br>\n       MeadowV\tMeadow Village<br>\n       Mitchel\tMitchell<br>\n       Names\tNorth Ames<br>\n       NoRidge\tNorthridge<br>\n       NPkVill\tNorthpark Villa<br>\n       NridgHt\tNorthridge Heights<br>\n       NWAmes\tNorthwest Ames<br>\n       OldTown\tOld Town<br>\n       SWISU\tSouth & West of Iowa State University<br>\n       Sawyer\tSawyer<br>\n       SawyerW\tSawyer West<br>\n       Somerst\tSomerset<br>\n       StoneBr\tStone Brook<br>\n       Timber\tTimberland<br>\n       Veenker\tVeenker<br>","a8041871":"### 77. SaleCondition: Condition of sale\n\n       Normal\tNormal Sale\n       Abnorml\tAbnormal Sale -  trade, foreclosure, short sale\n       AdjLand\tAdjoining Land Purchase\n       Alloca\tAllocation - two linked properties with separate deeds, typically condo with a garage unit\t\n       Family\tSale between family members\n       Partial\tHome was not completed when last assessed (associated with New Homes)","815c92b0":"## 21. RoofMatl: Roof material\n\n       ClyTile\tClay or Tile<br>\n       CompShg\tStandard (Composite) Shingle<br>\n       Membran\tMembrane<br>\n       Metal\tMetal<br>\n       Roll\tRoll<br>\n       Tar&Grv\tGravel & Tar<br>\n       WdShake\tWood Shakes<br>\n       WdShngl\tWood Shingles<br>","7093b764":"<h3 style='background-color:yellow'>\nString categorical variable. <br>\n<\/h3>","ce91a60c":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","d18e789e":"## 5. Street\nType of road access to property<br>\n       Grvl\tGravel\t<br>\n       Pave\tPaved","5c270576":"### 41. 1stFlrSF: First Floor square feet","8d3aa721":"<h3 style='background-color:yellow'>\nDiscrete variable.<br>\nAround 300 number of sales happened in year 2006 to 2009. <br>    \n2010 has less selling happened. <br>\n<\/h3>","1fbc233c":"### 11. LandSlope \nSlope of property<br>\n\t\t\n       Gtl\tGentle slope<br>\n       Mod\tModerate Slope\t<br>\n       Sev\tSevere Slope<br>","642a92f9":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","50df614a":"### 76. SaleType: Type of sale\n\t\t\n       WD \tWarranty Deed - Conventional\n       CWD\tWarranty Deed - Cash\n       VWD\tWarranty Deed - VA Loan\n       New\tHome just constructed and sold\n       COD\tCourt Officer Deed\/Estate\n       Con\tContract 15% Down payment regular terms\n       ConLw\tContract Low Down payment and low interest\n       ConLI\tContract Low Interest\n       ConLD\tContract Low Down\n       Oth\tOther","5b20861a":"<h3 style='background-color:yellow'> Discrete variable.<\/h3>","d4423d63":"### 26. ExterCond: Evaluates the present condition of the material on the exterior\n\t\t\n       Ex\tExcellent<br>\n       Gd\tGood<br>\n       TA\tAverage\/Typical<br>\n       Fa\tFair<br>\n       Po\tPoor<br>","c80e2b0a":"### 58. GarageFinish: Interior finish of the garage\n\n       Fin\tFinished\n       RFn\tRough Finished\t\n       Unf\tUnfinished\n       NA\tNo Garage","636e9fee":"<h3 style='background-color:yellow'> \nOrdinal feature.<br>\nMost of the houses having 1 kitchen with above grade.\n<\/h3>","0563c231":"<h3 style='background-color:yellow'>Integer ordinal variable. <\/h3>","51a0ce59":"### 50. KitchenAbvGr: Kitchens above grade","8c079b99":"<h3 style='background-color:yellow'>\nCategorical string values.<br>\nPresence of Null values. <br>\nNull\/Missing value indicates 'No Alley Access'. <br>\nHence most of the observations having 'No Alley Access'.\n<\/h3>","983f3947":"### 28. BsmtQual: Evaluates the height of the basement\n\n       Ex\tExcellent (100+ inches)\t\n       Gd\tGood (90-99 inches)\n       TA\tTypical (80-89 inches)\n       Fa\tFair (70-79 inches)\n       Po\tPoor (<70 inches\n       NA\tNo Basement","e7034a3b":"### 24. MasVnrArea: Masonry veneer area in square feet ","62e5e1d1":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","005bbe26":"### 15. BldgType: Type of dwelling\n\t\t\n       1Fam\tSingle-family Detached\t<br>\n       2FmCon\tTwo-family Conversion; originally built as one-family dwelling<br>\n       Duplx\tDuplex<br>\n       TwnhsE\tTownhouse End Unit<br>\n       TwnhsI\tTownhouse Inside Unit<br>","0c4d86f5":"### Model: Ridge Regression","955bce32":"<h3 style='background-color:yellow'>\nOrdinal variable. <br>\n50% of the houses having good Fireplace quality.\n<\/h3>","d253d017":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","9d6de436":"### 45. BsmtFullBath: Basement full bathrooms","37ad7ed0":"### 32. BsmtFinSF1: Type 1 finished square feet","9de20f0b":"## <center>Feature Relationships<\/center>","7c51c924":"<h3 style='background-color:yellow'>\nCategorical String variable\n<\/h3>","7140a80d":"<h3 style='background-color:yellow'>\nString categorical variable.\n<\/h3>","e2c055af":"<h3 style='background-color:yellow'>\nDiscrete variable <br>\n63% of the houses having Attached Garage<\/h3>","310fe6a9":"<h3 style='background-color:yellow'> Ordinal variable<\/h3>","26d61a8b":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","2772fa56":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","7881b68a":"### 42. 2ndFlrSF: Second floor square feet","19920ecb":"### 37. Heating: Type of heating\n\t\t\n       Floor\tFloor Furnace\n       GasA\tGas forced warm air furnace\n       GasW\tGas hot water or steam heat\n       Grav\tGravity furnace\t\n       OthW\tHot water or steam heat other than gas\n       Wall\tWall furnace","2e30d122":"<h3 style='background-color:yellow'>\nOrdinal variable. <br>\n    Most of the Garage condition is Average.\n<\/h3>","d8a3a6e3":"<h3 style='background-color:yellow'>\n    3 float columns <br>\n    35 integer columns <br>\n    43 String columns\n    <\/h3>","e38ff951":"### 34. BsmtFinSF2: Type 2 finished square feet","8149ac7c":"<h3 style='background-color:yellow'>\nContinuous variable\n<\/h3>","16aa3baf":"<h3 style='background-color:yellow'>\nCategorical String variable.\n<\/h3>","adf5144f":"<h3 style='background-color:yellow'>Ordinal variable <\/h3>","6a615d62":"<h3 style='background-color:yellow'> \nOrdinal variable.<br>\n    56% of the Garages having 2 car capacity.\n<\/h3>","e89aa3a6":"### 2. MSZoning       \nIdentifies the general zoning classification of the sale.\n    A\tAgriculture <br>\n       C\tCommercial<br>\n       FV\tFloating Village Residential<br>\n       I\tIndustrial<br>\n       RH\tResidential High Density<br>\n       RL\tResidential Low Density<br>\n       RP\tResidential Low Density Park <br>\n       RM\tResidential Medium Density<br>","4eb99c0b":"<h3 style='background-color:yellow'>\nIt's clear from the dataset that As the quality of the house increases, Saleprice also increases.\n<\/h3>","15595819":"### 62. GarageCond: Garage condition\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor\n       NA\tNo Garage","b10bc809":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","7cff9d26":"<h3 style='background-color:yellow'>\nString Categorical variable\n<\/h3>","9eed39ca":"### 33. BsmtFinType2: Rating of basement finished area (if multiple types)\n\n       GLQ\tGood Living Quarters\n       ALQ\tAverage Living Quarters\n       BLQ\tBelow Average Living Quarters\t\n       Rec\tAverage Rec Room\n       LwQ\tLow Quality\n       Unf\tUnfinshed\n       NA\tNo Basement","04eae92c":"### 39. CentralAir: Central air conditioning\n\n       N\tNo\n       Y\tYes","0c37316a":"<h3 style='background-color:yellow'>\nOrdinal variable <br>\n    Most of the houses having Paved Driveway.\n<\/h3>","21cd2f63":"<h3 style='background-color:yellow'>\nCategorical String variable.<br>\nMost Sale are 'Normal'\n<\/h3>","bedda99b":"### 1. Sale price based on the Neighborhood","f30b1839":"### 74. MoSold: Month Sold (MM)","04801462":"<h3 style='background-color:yellow'> Most of Garage quality is average.\n    <br> Ordinal variable.\n<\/h3>","f67891e4":"## <center>Dataset description<\/center>","1304e51a":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","64504b74":"### 1. MSSubClass\nIdentifies the type of dwelling involved in the sale.<br>\n 20\t1-STORY 1946 & NEWER ALL STYLES<br>\n        30\t1-STORY 1945 & OLDER<br>\n        40\t1-STORY W\/FINISHED ATTIC ALL AGES<br>\n        45\t1-1\/2 STORY - UNFINISHED ALL AGES<br>\n        50\t1-1\/2 STORY FINISHED ALL AGES<br>\n        60\t2-STORY 1946 & NEWER<br>\n        70\t2-STORY 1945 & OLDER<br>\n        75\t2-1\/2 STORY ALL AGES<br>\n        80\tSPLIT OR MULTI-LEVEL<br>\n        85\tSPLIT FOYER<br>\n        90\tDUPLEX - ALL STYLES AND AGES<br>\n       120\t1-STORY PUD (Planned Unit Development) - 1946 & NEWER<br>\n       150\t1-1\/2 STORY PUD - ALL AGES<br>\n       160\t2-STORY PUD - 1946 & NEWER<br>\n       180\tPUD - MULTILEVEL - INCL SPLIT LEV\/FOYER<br>\n       190\t2 FAMILY CONVERSION - ALL STYLES AND AGES<br>","2e285b64":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","5e2b8d33":"<h3 style='background-color:yellow'> \nMaximum age of the houses in the dataset is 136.<br>    \n    There are 100 number of newly constructed houses are there. <br>\nAverage SalePrice decreases as the age of the house increases.\n<br>\nHowever there is a sudden increae on the price for the houses whose age is 114.\n<\/h3>","91ab520e":"### 64. WoodDeckSF: Wood deck area in square feet","6fe0e8e9":"<h3 style='background-color:yellow'> \nString discrete variable\n<\/h3>","26463048":"<h3 style='background-color:yellow'> String Discrete variable<\/h3>","bfcabc7f":"### 61. GarageQual: Garage quality\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor\n       NA\tNo Garage","8f6f615f":"<h3 style='background-color:yellow'>\nHouses in Northridge got highest average saleprice.<br>\nAnd Meadow Village got the least average saleprice.\n<\/h3>","f1b4f5b8":"<h3 style='background-color:yellow'>\nOrdinal variable\n<\/h3>","8556b09e":"<h3 style='background-color:yellow'>String Discrete variable <\/h3>","32e68da2":"<h3 style='background-color:yellow'>Ordinal variable. <\/h3>","c4c75785":"### 73. MiscVal: $Value of miscellaneous feature","8cb6c57c":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","01043401":"### 36. TotalBsmtSF: Total square feet of basement area","ad408c0d":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","49e939e7":"<h3 style='background-color:yellow'>Ordinal variable. <\/h3>","4ccf1b9e":"<h3 style='background-color:yellow'>\nCategorical variable.\n<\/h3>","8b590ab3":"### 3. LotFrontage    \nLinear feet of street connected to property","516b512a":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","994f8159":"### 25. ExterQual: Evaluates the quality of the material on the exterior \n\t\t\n       Ex\tExcellent<br>\n       Gd\tGood<br>\n       TA\tAverage\/Typical<br>\n       Fa\tFair<br>\n       Po\tPoor<br>","22fecd79":"### 57.  GarageYrBlt: Year garage was built","0d16fa9c":"<h3 style='background-color:yellow'>\nString Categorical variable. <br>\n<\/h3>","6d58a444":"### 70. PoolQC: Pool quality\n\t\t\n       Ex\tExcellent\n       Gd\tGood\n       TA\tAverage\/Typical\n       Fa\tFair\n       NA\tNo Pool","86754a43":"<h3 style='background-color:yellow'>\nContinuous variable <br>\nPositively skewed distribution.<br>\nPresence of outliers.\n<\/h3>","03416c8d":"<h3 style='background-color:yellow'> \nOrdinal variable <br>\nNull values present.    \n<\/h3>","0237b9d6":"### 59. GarageCars: Size of garage in car capacity","03f7c114":"<h3 style='background-color:yellow'>Discrete variable. <br>\nMost of the sales are Warranty Deed -Conventional <\/h3>","d62897f8":"### 3. Age of the house and SalePrice","01ada15d":"### 53. Functional: Home functionality (Assume typical unless deductions are warranted)\n\n       Typ\tTypical Functionality\n       Min1\tMinor Deductions 1\n       Min2\tMinor Deductions 2\n       Mod\tModerate Deductions\n       Maj1\tMajor Deductions 1\n       Maj2\tMajor Deductions 2\n       Sev\tSeverely Damaged\n       Sal\tSalvage only","3d03b3eb":"### 75. YrSold: Year Sold (YYYY)","bc14d78a":"### 63. PavedDrive: Paved driveway\n\n       Y\tPaved \n       P\tPartial Pavement\n       N\tDirt\/Gravel","1bc4532f":"### Model: XtremeGradientBoosting","8e9703d5":"### 30. BsmtExposure: Refers to walkout or garden level walls\n\n       Gd\tGood Exposure\n       Av\tAverage Exposure (split levels or foyers typically score average or above)\t\n       Mn\tMimimum Exposure\n       No\tNo Exposure\n       NA\tNo Basement\n ","45576919":"### 29. BsmtCond: Evaluates the general condition of the basement\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical - slight dampness allowed\n       Fa\tFair - dampness or some cracking or settling\n       Po\tPoor - Severe cracking, settling, or wetness\n       NA\tNo Basement","7c6f447e":"## 7. LotShape\nGeneral shape of property <br>\n\n       Reg\tRegular\t <br>\n       IR1\tSlightly irregular <br>\n       IR2\tModerately Irregular<br>\n       IR3\tIrregular<br>","ce04c236":"### 68. ScreenPorch: Screen porch area in square feet","37bca23a":"<h3 style='background-color:yellow'> Continuous variable.<\/h3>"}}