{"cell_type":{"ad2d795a":"code","f85cd7a5":"code","261b1762":"code","868ada69":"code","c911625a":"code","85045375":"code","ec70dddc":"code","12f45032":"code","76ba7ff8":"code","bf090422":"code","c17af31b":"code","2e27dcc1":"code","11d7c28e":"code","94047416":"code","e9848dd2":"code","02117bc6":"code","d0cb02a0":"code","05a1b955":"code","530d7c48":"code","5340c68a":"code","f16c7ceb":"code","947891e5":"code","0215f307":"code","cc12a7a5":"code","e6084869":"code","1969ff62":"code","d99d0e0a":"code","26f22ba3":"code","881c02b0":"code","21f3458e":"code","c0f3a845":"code","16984d64":"code","c4f3c0f3":"code","cf2ce296":"code","d9562fa0":"code","098a9896":"code","abd90750":"code","edf11483":"code","30597b43":"code","8c836a86":"code","530aa2b2":"code","f438f186":"code","df5a9865":"code","af194a05":"code","5ce11bcb":"code","c7b5f0cf":"code","f1f193bb":"code","48fefc06":"code","f3d63469":"code","d5c1cf6c":"code","ca6668f2":"code","658840a8":"code","b335615a":"code","b8c01995":"code","0f40141b":"code","3bbd947e":"code","d100adef":"code","0096365b":"code","bcd8d220":"code","c7f947a4":"code","eff98235":"code","97187f29":"code","c15853fa":"code","77a8a3c2":"code","e0b2b82e":"code","f0c97fd2":"code","115b66fc":"code","462dac61":"code","f06aaeb6":"code","373b5272":"code","598d59d1":"code","5574282a":"code","cbc43a0d":"code","4dd312b5":"code","f775e416":"code","024e82df":"code","96f96618":"code","7e812472":"code","fa40b04d":"code","710269e5":"code","489b0d64":"code","c7e38f92":"code","9040970b":"code","063d55ef":"code","d1a6da92":"code","634d20b6":"code","b4f10765":"code","f4f5d14c":"code","5f7f8045":"code","b7a028b0":"code","c9b4e4a2":"code","cc9b650c":"code","2624d3e8":"code","c4644948":"code","e317e66c":"code","61898988":"code","7a97e502":"code","19b5fc33":"code","1223c282":"code","b8dfc9a3":"code","12c912ff":"code","8f733ddd":"code","fba5e896":"code","2fef97c9":"code","c7acb4cf":"code","f04b126f":"code","d49382b6":"code","4baf34ad":"code","695e26f3":"code","69cb7034":"code","bde7d3e1":"code","112d1d67":"code","5f2b5c0c":"code","abd080cd":"code","daedbc48":"code","748eee8b":"code","f2e6a4e9":"code","9543dbed":"code","5115b444":"code","9d38f58a":"code","4599f1b7":"code","4b70048f":"code","1e814d6d":"code","4675f52d":"code","29f2e0a0":"code","ec9a8970":"code","84c84618":"code","7362031a":"code","604f5cd3":"code","662b69e5":"code","faff9ba5":"code","b1c9b955":"code","df76c1b9":"code","309c19f4":"code","c3de768c":"code","41f22d37":"code","27c0bdfd":"code","9d61d385":"code","73f7f195":"code","48f401c8":"code","745715af":"code","45db8acc":"code","6319242a":"code","031481ae":"code","9a1baeec":"code","2d1e2920":"code","5eb8464e":"code","8761b94a":"code","fdcc5693":"code","08815a49":"code","dfb08e23":"code","4e340e9b":"code","d6536b32":"code","5beeb3d1":"code","f5e2298c":"code","d9e797fe":"code","0fbf72f6":"code","30d3b88f":"code","a8bb1dc9":"code","debc0a66":"code","fff5d705":"code","2167d103":"code","2756b4b7":"code","6426e318":"code","1faf391c":"code","7616a5dd":"code","ea5d35e7":"code","d725ab35":"code","29436ec9":"code","8498186b":"markdown","0fc99667":"markdown","aa67b02d":"markdown","8605a212":"markdown","8d1ad895":"markdown","c32920fc":"markdown","e2be3154":"markdown","3128b916":"markdown","ee823924":"markdown"},"source":{"ad2d795a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns","f85cd7a5":"train_set=pd.read_csv('..\/input\/loan-statusclassifiaction\/train_loan1.csv')\ntrain_set","261b1762":"test_set=pd.read_csv('..\/input\/test-data\/test_loan1.csv')\ntest_set","868ada69":"train_set.isnull().sum()","c911625a":"test_set.isnull().sum()","85045375":"train_set['Gender'].value_counts()","ec70dddc":"train_set['Married'].value_counts()","12f45032":"train_set['Dependents'].value_counts()","76ba7ff8":"train_set['Dependents']=train_set['Dependents'].str.replace('+','')","bf090422":"train_set['Dependents'].value_counts()","c17af31b":"test_set['Dependents'].value_counts()","2e27dcc1":"test_set['Dependents']=test_set['Dependents'].str.replace('+','')","11d7c28e":"train_set['Education'].value_counts()","94047416":"def a(x):\n    if x=='Graduate':\n        x=2\n    else:\n        x=1\n    return x","e9848dd2":"train_set['Education']=train_set['Education'].apply(a)","02117bc6":"train_set['Education'].value_counts()","d0cb02a0":"test_set['Education']=test_set['Education'].apply(a)","05a1b955":"test_set['Education'].value_counts()","530d7c48":"train_set['Self_Employed'].value_counts()","5340c68a":"train_set['ApplicantIncome'].value_counts()","f16c7ceb":"train_set['CoapplicantIncome'].value_counts()","947891e5":"train_set['CoapplicantIncome'].min()","0215f307":"train_set['CoapplicantIncome'].max()","cc12a7a5":"train_set['ApplicantIncome'].min()","e6084869":"train_set['ApplicantIncome'].max()","1969ff62":"sns.distplot(train_set['ApplicantIncome'])","d99d0e0a":"sns.distplot(train_set['CoapplicantIncome'])","26f22ba3":"train_set['LoanAmount'].value_counts()","881c02b0":"train_set['LoanAmount'].min()","21f3458e":"train_set['LoanAmount'].max()","c0f3a845":"train_set['Credit_History'].value_counts()","16984d64":"def a(x):\n    if x==1.0:\n        x='Yes'\n    else:\n        x='No'\n    return x","c4f3c0f3":"train_set['Credit_History']=train_set['Credit_History'].apply(a)","cf2ce296":"train_set['Credit_History'].value_counts()","d9562fa0":"test_set['Credit_History']=test_set['Credit_History'].apply(a)","098a9896":"test_set['Credit_History'].value_counts()","abd90750":"train_set['Property_Area'].value_counts()","edf11483":"train_set['Loan_Status'].value_counts()","30597b43":"def a(x):\n    if x=='Y':\n        x=1\n    else:\n        x=0\n    return x","8c836a86":"train_set['Loan_Status']=train_set['Loan_Status'].apply(a)","530aa2b2":"train_set['Loan_Status'].value_counts()","f438f186":"train_set['Dependents']=pd.to_numeric(train_set['Dependents'],errors='coerce')","df5a9865":"test_set['Dependents']=pd.to_numeric(test_set['Dependents'],errors='coerce')","af194a05":"train_set['Loan_Amount_Term'].value_counts()","5ce11bcb":"train_set.skew()","c7b5f0cf":"import scipy.stats as st","f1f193bb":"l=['ApplicantIncome','CoapplicantIncome','LoanAmount', 'Loan_Amount_Term']\nl","48fefc06":"for i in l:\n    train_set[i]=st.boxcox(train_set[i]+1)[0]\ntrain_set.skew()","f3d63469":"for i in l:\n        test_set[i]=st.boxcox(test_set[i]+1)[0]\ntest_set.skew()","d5c1cf6c":"train_set.info()","ca6668f2":"test_set.info()","658840a8":"train_set.isnull().sum()[train_set.isnull().sum()!=0]","b335615a":"test_set.isnull().sum()[test_set.isnull().sum()!=0]","b8c01995":"pd.DataFrame(test_set.groupby(['Dependents','Credit_History','Gender','Married'])['Education'].value_counts())","0f40141b":"a=test_set.loc[test_set['Gender'].isnull()]\na","3bbd947e":"pd.DataFrame(a.groupby(['Dependents','Credit_History','Married'])['Education'].value_counts())","d100adef":"test_set.loc[(test_set['Married']=='No')\n             &(test_set['Dependents']==0)\n             &(test_set['Credit_History']=='Yes')\n             &(test_set['Education']==2)\n             &(test_set['Gender'].isnull()), 'Gender']='Male'","0096365b":"test_set['Gender']=test_set['Gender'].fillna('Male')","bcd8d220":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Dependents']==3)\n             &(train_set['Credit_History']=='Yes')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Gender'].isnull()), 'Gender']='Male'","c7f947a4":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Dependents']==2)\n             &(train_set['Credit_History']=='No')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Gender'].isnull()), 'Gender']='Male'","eff98235":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Property_Area']==1)\n             &(train_set['Credit_History']=='Yes')\n             &(train_set['Education']==2)\n             &(train_set['Gender'].isnull()), 'Gender']='Male'","97187f29":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Property_Area']==2)\n             &(train_set['Credit_History']=='No')\n             &(train_set['Education']==2)\n             &(train_set['Gender'].isnull()), 'Gender']='Male'","c15853fa":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Property_Area']==2)\n             &(train_set['Credit_History']=='Yes')\n             &(train_set['Education']==2)\n             &(train_set['Gender'].isnull()), 'Gender']='Male'","77a8a3c2":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Property_Area']==3)\n             &(train_set['Credit_History']=='Yes')\n             &(train_set['Education']==2)\n             &(train_set['Gender'].isnull()), 'Gender']='Male'","e0b2b82e":"train_set['Gender']=train_set['Gender'].fillna('Male')","f0c97fd2":"train_set.isnull().sum()[train_set.isnull().sum()!=0]","115b66fc":"b=train_set.loc[train_set['Married'].isnull()]\nb","462dac61":"pd.DataFrame(b.groupby(['Property_Area','Credit_History','Gender'])['Education'].value_counts())","f06aaeb6":"pd.DataFrame(train_set.groupby(['Property_Area','Credit_History','Gender','Married'])['Education'].value_counts())","373b5272":"train_set['Married']=train_set['Married'].fillna('Yes')","598d59d1":"test_set.isnull().sum()[train_set.isnull().sum()!=0]","5574282a":"c=test_set.loc[test_set['Dependents'].isnull()]\nc","cbc43a0d":"pd.DataFrame(c.groupby(['Property_Area','Gender'])['Credit_History'].value_counts())","4dd312b5":"pd.DataFrame(test_set.groupby(['Property_Area','Gender','Credit_History'])['Dependents'].value_counts())","f775e416":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Gender']=='Male')\n             &(train_set['Dependents'].isnull()), 'Dependents']=0","024e82df":"train_set.loc[(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Gender']=='Male')\n             &(train_set['Dependents'].isnull()), 'Dependents']=0","96f96618":"train_set['Dependents']=train_set['Dependents'].fillna(0)","7e812472":"test_set['Dependents']=test_set['Dependents'].fillna(0)","fa40b04d":"test_set['Married']=test_set['Married'].fillna(0)","710269e5":"d=test_set.loc[test_set['Self_Employed'].isnull()]\nd","489b0d64":"pd.DataFrame(d.groupby(['Property_Area','Gender'])['Credit_History'].value_counts())","c7e38f92":"pd.DataFrame(test_set.groupby(['Property_Area','Gender','Credit_History'])['Self_Employed'].value_counts())","9040970b":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']==1)\n             &(train_set['Gender']=='Male')\n             &(train_set['Self_Employed'].isnull()), 'Self_Employed']='No'","063d55ef":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']==3)\n             &(train_set['Gender']=='Male')\n             &(train_set['Self_Employed'].isnull()), 'Self_Employed']='No'","d1a6da92":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']==2)\n             &(train_set['Gender']=='Female')\n             &(train_set['Self_Employed'].isnull()), 'Self_Employed']='No'","634d20b6":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']==2)\n             &(train_set['Gender']=='Male')\n             &(train_set['Self_Employed'].isnull()), 'Self_Employed']='No'","b4f10765":"train_set['Self_Employed']=train_set['Self_Employed'].fillna('No')","f4f5d14c":"test_set['Self_Employed']=test_set['Self_Employed'].fillna('No')","5f7f8045":"f=test_set.loc[test_set['LoanAmount'].isnull()]\nf","b7a028b0":"pd.DataFrame(f.groupby(['Education','Dependents'])['Property_Area'].value_counts())","c9b4e4a2":"pd.DataFrame(test_set.groupby(['Education','Dependents','Property_Area'])['LoanAmount'].mean())","cc9b650c":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']=='Urban')\n             &(train_set['Gender']=='Male')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Education']==2)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=149.81250","2624d3e8":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']=='Rural')\n             &(train_set['Gender']=='Male')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Education']==1)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=115.77778","c4644948":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']=='Urban')\n             &(train_set['Gender']=='Male')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Education']==1)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=118.250","e317e66c":"train_set.loc[(train_set['Credit_History']=='No')\n             &(train_set['Property_Area']=='Rural')\n             &(train_set['Gender']=='Male')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Education']==2)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=148.722","61898988":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']=='Semiurban')\n             &(train_set['Gender']=='Female')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Education']==2)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=149.57","7a97e502":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']=='Semiurban')\n             &(train_set['Gender']=='Male')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Education']==2)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=146.06","19b5fc33":"train_set.loc[(train_set['Credit_History']=='Yes')\n             &(train_set['Property_Area']=='Urban')\n             &(train_set['Gender']=='Male')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Education']==2)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=149.81250","1223c282":"train_set.loc[(train_set['Credit_History']=='No')\n             &(train_set['Property_Area']=='Urban')\n             &(train_set['Gender']=='Male')\n             &(train_set['Loan_Status']==0)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=142.521739","b8dfc9a3":"train_set.loc[(train_set['Property_Area']=='Urban')\n             &(train_set['Loan_Status']==0)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=139.49","12c912ff":"train_set.loc[(train_set['Property_Area']=='Rural')\n             &(train_set['Loan_Status']==0)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=158.4477","8f733ddd":"train_set.loc[(train_set['Property_Area']=='Rural')\n             &(train_set['Loan_Status']==1)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=147.6656","fba5e896":"train_set.loc[(train_set['Property_Area']=='Semiurban')\n             &(train_set['Loan_Status']==0)\n             &(train_set['LoanAmount'].isnull()), 'LoanAmount']=154.566","2fef97c9":"test_set.loc[(test_set['Property_Area']=='Rural')\n             &(test_set['Dependents']==0)\n             &(test_set['Education']==1)\n             &(test_set['LoanAmount'].isnull()), 'LoanAmount']=127.0000","c7acb4cf":"test_set.loc[(test_set['Property_Area']=='Semiurban')\n             &(test_set['Dependents']==0)\n             &(test_set['Education']==2)\n             &(test_set['LoanAmount'].isnull()), 'LoanAmount']=132.54","f04b126f":"test_set.loc[(test_set['Property_Area']=='Semiurban')\n             &(test_set['Dependents']==1)\n             &(test_set['Education']==2)\n             &(test_set['LoanAmount'].isnull()), 'LoanAmount']=157.56","d49382b6":"test_set.loc[(test_set['Property_Area']=='Urban')\n             &(test_set['Dependents']==1)\n             &(test_set['Education']==2)\n             &(test_set['LoanAmount'].isnull()), 'LoanAmount']=134.5000","4baf34ad":"train_set['LoanAmount']=train_set['LoanAmount'].fillna(train_set['LoanAmount'].mean())","695e26f3":"test_set['LoanAmount']=test_set['LoanAmount'].fillna(test_set['LoanAmount'].mean())","69cb7034":"test_set.isnull().sum()[test_set.isnull().sum()!=0]","bde7d3e1":"train_set.isnull().sum()[train_set.isnull().sum()!=0]","112d1d67":"g=test_set.loc[test_set['Loan_Amount_Term'].isnull()]\ng","5f2b5c0c":"pd.DataFrame(g.groupby(['Married'])['Property_Area'].value_counts())","abd080cd":"pd.DataFrame(train_set.groupby(['Married','Property_Area'])['Loan_Amount_Term'].mean())","daedbc48":"train_set.loc[(train_set['Property_Area']=='Rural')\n             &(train_set['Married']=='No')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=362.5","748eee8b":"train_set.loc[(train_set['Property_Area']=='Urban')\n             &(train_set['Married']=='No')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=351.724","f2e6a4e9":"train_set.loc[(train_set['Property_Area']=='Urban')\n             &(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=334.05","9543dbed":"train_set.loc[(train_set['Property_Area']=='Rural')\n             &(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=335.44","5115b444":"train_set.loc[(train_set['Property_Area']=='Semiurban')\n             &(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==0)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=349.65","9d38f58a":"train_set.loc[(train_set['Property_Area']=='Urban')\n             &(train_set['Married']=='No')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=337.89","4599f1b7":"train_set.loc[(train_set['Property_Area']=='Rural')\n             &(train_set['Married']=='No')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=363.24","4b70048f":"train_set.loc[(train_set['Property_Area']=='Semiurban')\n             &(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=345.81","1e814d6d":"train_set.loc[(train_set['Property_Area']=='Urban')\n             &(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=324.131","4675f52d":"train_set.loc[(train_set['Property_Area']=='Rural')\n             &(train_set['Married']=='Yes')\n             &(train_set['Loan_Status']==1)\n             &(train_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=336.67","29f2e0a0":"train_set['Loan_Amount_Term']=train_set['Loan_Amount_Term'].fillna(train_set['Loan_Amount_Term'].mean())","ec9a8970":"train_set.isnull().sum()[train_set.isnull().sum()!=0]","84c84618":"test_set.loc[(test_set['Property_Area']=='Urban')\n             &(test_set['Married']=='No')\n             &(test_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=343.82","7362031a":"test_set.loc[(test_set['Property_Area']=='Rural')\n             &(test_set['Married']=='No')\n             &(test_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=362.94","604f5cd3":"test_set.loc[(test_set['Property_Area']=='Urban')\n             &(test_set['Married']=='Yes')\n             &(test_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=327.06","662b69e5":"test_set.loc[(test_set['Property_Area']=='Semiurban')\n             &(test_set['Married']=='Yes')\n             &(test_set['Loan_Amount_Term'].isnull()), 'Loan_Amount_Term']=346.57","faff9ba5":"test_set['Loan_Amount_Term']=test_set['Loan_Amount_Term'].fillna(test_set['Loan_Amount_Term'].mean())","b1c9b955":"test_set.isnull().sum()[test_set.isnull().sum()!=0]","df76c1b9":"train_set.head()","309c19f4":"train_set=pd.get_dummies(train_set,columns=['Gender','Married','Self_Employed','Credit_History','Property_Area'])\ntrain_set.shape","c3de768c":"test_set=pd.get_dummies(test_set,columns=['Gender','Married','Self_Employed','Credit_History','Property_Area'])\ntest_set.shape","41f22d37":"train=train_set.drop('Loan_ID',axis=1)","27c0bdfd":"test=test_set.drop('Loan_ID',axis=1)","9d61d385":"train.info()","73f7f195":"X=train.drop('Loan_Status',axis=1)\ny=train['Loan_Status']","48f401c8":"X.info()","745715af":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.pipeline import Pipeline\n#from sklearn.externals import joblib\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nfrom xgboost.sklearn import XGBClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nimport lightgbm as lgb\nfrom sklearn.metrics import classification_report\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom tpot import TPOTClassifier\nfrom scipy.stats import randint as sp_randint\nfrom scipy.stats import uniform as sp_uniform\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import RandomizedSearchCV","45db8acc":"X_train,X_test,y_train,y_test=train_test_split(X,y, test_size=0.2, random_state=0)","6319242a":"pipeline_lr=Pipeline([('scalar1',StandardScaler()),\n                     ('lr',LogisticRegression())])\npipeline_dt=Pipeline([('scaler2',StandardScaler()),\n                     ('dt',DecisionTreeClassifier())])\npipeline_rf=Pipeline([('scalar3',StandardScaler()),\n                     ('rfc',RandomForestClassifier())])\npipeline_knn=Pipeline([('scalar4',StandardScaler()),\n                     ('knn',KNN())])\npipeline_xgbc=Pipeline([('scalar5',StandardScaler()),\n                     ('xgboost',XGBClassifier())])\npipeline_lgbc=Pipeline([('scalar6',StandardScaler()),\n                     ('lgbc',lgb.LGBMClassifier())])\npipeline_ada=Pipeline([('scalar7',StandardScaler()),\n                     ('adaboost',AdaBoostClassifier())])\npipeline_sgdc=Pipeline([('scalar8',StandardScaler()),\n                     ('sgradient',SGDClassifier())])\npipeline_nb=Pipeline([('scalar9',StandardScaler()),\n                     ('nb',GaussianNB())])\npipeline_extratree=Pipeline([('scalar10',StandardScaler()),\n                     ('extratree',ExtraTreesClassifier())])\npipeline_svc=Pipeline([('scalar11',StandardScaler()),\n                     ('svc',SVC())])\npipeline_gbc=Pipeline([('scalar12',StandardScaler()),\n                     ('GBC',GradientBoostingClassifier())])","031481ae":"pipelines=[pipeline_lr,pipeline_dt,pipeline_rf,pipeline_knn,pipeline_xgbc,pipeline_lgbc,pipeline_ada,pipeline_sgdc,pipeline_nb,pipeline_extratree,pipeline_svc,pipeline_gbc]","9a1baeec":"best_accuracy=0.0\nbest_classifier=0\nbest_pipeline=\"\"","2d1e2920":"pipe_dict={0:'Logistic Regression',1:'Random Forest',2:'Decision Tree',3:'KNN',4:'XGBC',5:'LGBC',6:'ADA',7:'SGDC',8:'NB',9:'ExtraTree',10:'SVC',11:'GBC'}","5eb8464e":"sns.countplot(train_set['Loan_Status'])","8761b94a":"from imblearn.over_sampling import SMOTE\nsmote = SMOTE('auto')","fdcc5693":"X_sm, y_sm = smote.fit_sample(X_train,y_train)\nprint(X_sm.shape, y_sm.shape)","08815a49":"for i in pipelines:\n    i.fit(X_sm,y_sm)\n    predictions=i.predict(X_test)\n    print('Classification Report : \\n',(classification_report(y_test,predictions)))","dfb08e23":"for i,model in enumerate(pipelines): print('{} Train Accuracy {}'.format(pipe_dict[i],model.score(X_sm,y_sm)))","4e340e9b":"for i,model in enumerate(pipelines): print('{} Test Accuracy {}'.format(pipe_dict[i],model.score(X_test,y_test)))","d6536b32":"# Create a pipeline\npipe = Pipeline([(\"classifier\", RandomForestClassifier())])\n# Create dictionary with candidate learning algorithms and their hyperparameters\nr_param = [{\"classifier\": [LogisticRegression()],\n                 \"classifier__penalty\": ['l2','l1'],\n                 \"classifier__C\": np.logspace(0, 4, 10)},\n              \n               {\"classifier\": [RandomForestClassifier()],\n                 \"classifier__n_estimators\": [10, 100, 1000],\n                 \"classifier__max_depth\":[5,8,15,25,30,None],\n                 \"classifier__min_samples_leaf\":[1,2,5,10,15,100],\n                 \"classifier__max_leaf_nodes\": [2, 5,10]},\n            {\"classifier\": [LogisticRegression()],\n                 \"classifier__penalty\": ['l2'],\n                 \"classifier__C\": np.logspace(0, 4, 10),\n                 \"classifier__solver\":['newton-cg','saga','sag','liblinear'] ##This solvers don't allow L1 penalty\n                 },\n           \n{\"classifier\": [DecisionTreeClassifier()],\n \"classifier__criterion\":['gini','entropy'], \n \"classifier__max_depth\":[5,8,15,25,30,None],\n \"classifier__min_samples_leaf\":[1,2,5,10,15,100],\n \"classifier__max_leaf_nodes\": [2, 5,10]},\n           \n{'classifier':[lgb.LGBMClassifier()], \n 'classifier__n_estimators':np.arange(50,250,5),\n 'classifier__max_depth':np.arange(2,15,5), \n 'classifier__num_leaves':np.arange(2,60,5)},\n           \n           {'classifier':[XGBClassifier()],\n            \"classifier__learning_rate\" : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30 ] ,\n            \"classifier__max_depth\" : [ 3, 4, 5, 6, 8, 10, 12, 15], \n            \"classifier__min_child_weight\" : [ 1, 3, 5, 7 ], \n            \"classifier__gamma\" : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ], \n            \"classifier__colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7 ]},\n           \n           {'classifier':[SGDClassifier()], ##Stocasticated Gradient decent\n       # \"classifier__C\": [1e-7, 1e-6, 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1e0],\n        \"classifier__penalty\": ['l2']},\n           \n            {\"classifier\":[GradientBoostingClassifier()],\n        \"classifier__learning_rate\":np.arange(0.05,0.5,0.01),\n        \"classifier__n_estimators\":np.arange(50,250,5),\n        'classifier__max_depth':np.arange(4,15,5),\n        #'classifier__num_leaves':np.arange(4,60,5),\n        \"classifier__min_samples_leaf\":[1,2,5,10,15,100],\n        \"classifier__max_leaf_nodes\": [2, 5,10]}\n\n      ]\n           \n           ","5beeb3d1":"import sklearn.metrics\nscorer = sklearn.metrics.make_scorer(sklearn.metrics.f1_score, average = 'micro')","f5e2298c":"rsearch = RandomizedSearchCV(pipe, r_param, cv=5, verbose=0,n_jobs=-1,random_state=0,scoring=scorer)","d9e797fe":"rsearch.fit(X_train,y_train)","0fbf72f6":"print(rsearch.best_estimator_)","30d3b88f":"GBC=GradientBoostingClassifier(ccp_alpha=0.0,\n                                            criterion='friedman_mse', init=None,\n                                            learning_rate=0.22000000000000003,\n                                            loss='deviance', max_depth=4,\n                                            max_features=None, max_leaf_nodes=2,\n                                            min_impurity_decrease=0.0,\n                                            min_impurity_split=None,\n                                            min_samples_leaf=1,\n                                            min_samples_split=2,\n                                            min_weight_fraction_leaf=0.0,\n                                            n_estimators=110,\n                                            n_iter_no_change=None,\n                                            presort='deprecated',\n                                            random_state=None, subsample=1.0,\n                                            tol=0.0001, validation_fraction=0.1,\n                                            verbose=0, warm_start=False)","a8bb1dc9":"GBC=RandomizedSearchCV(estimator=RandomForestClassifier(),\n                   param_distributions=[{'n_estimators': [5, 10,20,50,100],\n                               'max_depth':[5, 10, 15,50,None],\n                               'min_samples_leaf':[1,2,5,10, 50, 100],\n                               'min_samples_split': [2,4,6,10,20,100,200]}])","debc0a66":"GBC_model=GBC.fit(X_train,y_train)","fff5d705":"Score=GBC_model.score(X_train,y_train)\nScore","2167d103":"GBC_predictions=GBC_model.predict(test)\nGBC_predictions.shape","2756b4b7":"sub = pd.DataFrame(GBC_predictions)","6426e318":"def a(x):\n    if x==1:\n        x='Y'\n    else:\n        x='N'\n    return x","1faf391c":"sub=sub.rename(columns={0:'Loan_Status'})\nsub","7616a5dd":"sub['Loan_Status']=sub['Loan_Status'].apply(a)","ea5d35e7":"att=pd.DataFrame(test_set['Loan_ID'])\natt","d725ab35":"final=pd.concat([att,sub],axis=1)\nfinal","29436ec9":"final.to_csv('Submission_loan_status5.csv',index=False)","8498186b":"### Checking for null values:","0fc99667":"### X,y split:","aa67b02d":"### Balancing the unbalanced target variable:","8605a212":"### Data Cleaning:","8d1ad895":"### Encoding catgorical columns to numerical columns:","c32920fc":"### Checking the skewness of the data:","e2be3154":"### Problem Statement:","3128b916":"### Importing necessary libraries:","ee823924":"Build a Classification Model to predict whether a customer is eligible for loan or not on the basis of the 12 input features."}}