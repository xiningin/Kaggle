{"cell_type":{"42870d08":"code","ad8bb694":"code","5de0e134":"code","4e7e1bf8":"code","9fe8abf1":"code","99af1bfa":"code","21402c1d":"code","8c83a2cb":"code","eaf360e9":"code","9e5e7f6f":"code","fbbd9132":"code","ca82b620":"code","50701aae":"code","f20ac030":"code","afc63b59":"code","8ac7b75f":"markdown","a29fdfec":"markdown","d3b90b9f":"markdown","e6601c6b":"markdown","ea178dc7":"markdown","66c07d84":"markdown","2c5f2f3d":"markdown"},"source":{"42870d08":"import pandas as pd\nimport numpy as np\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom statsmodels.api import OLS\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ad8bb694":"data = pd.read_csv('..\/input\/sample-media-spends-data\/Sample Media Spend Data.csv')","5de0e134":"media_columns = ['Overall_Views', \n                 'Google_Impressions', \n                 'Email_Impressions',\n                 'Facebook_Impressions', \n                 'Affiliate_Impressions',\n                 'Paid_Views', \n                 'Organic_Views' \n                ]","4e7e1bf8":"combined_df = pd.DataFrame()\nfor view in media_columns:\n    print(view)\n    temp = pd.DataFrame()\n    for alpha in np.arange(0.1,1,0.2):\n        Adstock_factor = np.round(alpha,1)\n        for lag in [113]:\n            for row in range(len(data)):\n                x = data.loc[row,view]\n                for j in range(1,lag+1):\n                    if j< row:\n                        x = x + (Adstock_factor ** j) * data.loc[row-j,view]\n                        x = x\n                    else:\n                        x = x\n                temp.loc[row,view+str(Adstock_factor)+str(\"_\")+str(\"_113\")] = x\n\n    combined_df = pd.concat([combined_df,temp],axis=1)","9fe8abf1":"combined_df","99af1bfa":"combined_df = pd.concat([data,combined_df],axis=1)","21402c1d":"combined_df","8c83a2cb":"A_Div_Data = combined_df[combined_df.Division=='A']\nplt.figure(figsize=(15,8))\nplt.plot(A_Div_Data.Calendar_Week,A_Div_Data.Google_Impressions,'k',label='Raw Spend')\nsns.barplot(A_Div_Data.Calendar_Week,A_Div_Data['Google_Impressions0.5__113'],label='Ad-stock Spend')\nplt.xticks(rotation=90)\nplt.legend()\nplt.show()","eaf360e9":"combined_df.to_excel('Adstock Combination with beta at overall level.xlsx')","9e5e7f6f":"Division_State_week_level = data.copy()","fbbd9132":"state_level_adstock_df = pd.DataFrame()\n\nfor division in Division_State_week_level.Division.unique():\n    temp = pd.DataFrame()\n    division_data = Division_State_week_level[Division_State_week_level.Division == division]\n    division_data.reset_index(inplace=True)\n    for view in media_columns:\n        for alpha in np.arange(0.1,1,0.3):\n            Adstock_factor = np.round(alpha,1)\n            for lag in [113]:\n                for row in range(len(division_data)):\n                    x = division_data.loc[row,view]\n                    for j in range(1,lag+1):\n                        if j<= row:\n                            x = x + (Adstock_factor ** j) * division_data.loc[row-j,view]\n                        else:\n                            x = x\n                    temp.loc[row,view+str(Adstock_factor)+str(\"_\")+str(lag)] = x              \n    state_level_adstock_df = pd.concat([state_level_adstock_df,temp],axis=0,ignore_index=True)","ca82b620":"state_level_adstock_df = pd.concat([data,state_level_adstock_df],axis=1)","50701aae":"state_level_adstock_df","f20ac030":"N_Div_Data = state_level_adstock_df[state_level_adstock_df.Division=='N']\nplt.figure(figsize=(15,8))\nplt.plot(N_Div_Data.Calendar_Week,N_Div_Data.Facebook_Impressions,'k',label='Raw Spend')\nsns.barplot(N_Div_Data.Calendar_Week,N_Div_Data['Facebook_Impressions0.7_113'],label='Ad-stock Spend')\nplt.xticks(rotation=90)\nplt.legend()\nplt.show()","afc63b59":"state_level_adstock_df.to_excel('Adstock_Combination with State_Division_granularity.xlsx')","8ac7b75f":"## Adstock calculation at Division\/State week granularity","a29fdfec":"## Adstock calculation at Week level Granularity","d3b90b9f":"Plot the difference between Raw Spend vs Ad-stock Spend for any media channel at any Division","e6601c6b":"Same as above, here we just included additional division level granularity. Hence it will treat each division spend as separate entity","ea178dc7":"# **What is Ad-stock and why do we need it ?**\nAd-stock, or goodwill, is the cumulative value of a brand\u2019s advertising at a given point in time. For example, if any company is advertising its product over 10 weeks, then for any given week t spending value would be **X + Past Week Fractional Amount**.\nAd-stock theory states that advertising is not immediate and has diminishing returns, meaning that its influential power decreases over time, even if more money is allocated to it. Therefore, time regression analysis will help marketers to understand the potential timeline for advertising effectiveness and how to optimise the marketing mix to compensate for these factors\n\nPlease follow this PDF for more understanding on mathematical formula - https:\/\/github.com\/yug95\/MachineLearning\/blob\/master\/Market%20mix%20model\/MMX%20Method.pdf","66c07d84":"In this secction, Iterating for all the media channel and then setting up decay rate & Saturation value, ***Decay rate would vary from 0.1 to 1 in interval of 0.1*** Lag defines upto what week you want to consider in 1 go. suppose you are at week 50 and want to calculate ad-stock value for week 51 then upto what week number from week- 50 to 1 you want factors to include. If we consider lag value =2 then at week 51 calculation, it will consider only week 49 & 48 factor.","2c5f2f3d":"Merging Data frame with Original Data columns"}}