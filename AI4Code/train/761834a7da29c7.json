{"cell_type":{"3fcb02dd":"code","fde5e57f":"code","86e0280d":"code","1859708f":"code","8a2377a3":"code","8333f021":"code","5b61f992":"markdown","72764c58":"markdown","50bbdaae":"markdown","881b3ea6":"markdown"},"source":{"3fcb02dd":"KOU Big Data Final\n\nSevde Ka\u015fkaya 150201137\n\nBu \u00e7al\u0131\u015fmada Keras kullanarak dataset \u00fczerinde ma\u011faza ve \u00fcr\u00fcn sat\u0131\u015f bilgileri ile prediction yapmaya \u00e7al\u0131\u015ft\u0131m.","fde5e57f":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport os\n\nfrom keras.layers import Input, Embedding, Flatten, Dense, Concatenate\nfrom keras.models import Model\nfrom sklearn.model_selection import train_test_split\nfrom keras.models import load_model\n\n\ndataset = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\nprint (dataset.head())\nprint (dataset.shape)\n\ntrain, test = train_test_split(dataset, test_size=0.2, random_state=42)\nn_shop = len(dataset.shop_id.unique())\nn_item = len(dataset.item_id.unique())\n\nprint (\"\\n\\n\", \"Shop: \", n_shop, \"\u0130tem: \", n_item)","86e0280d":"shop_input = Input(shape=[1], name=\"Shop-Input\")\nshop_embedding = Embedding(input_dim=150000, output_dim =6, name=\"Shop-Embedding\")(shop_input)\nshop_vec = Flatten(name=\"Flatten-Shop\")(shop_embedding)\n\n\nitem_input = Input(shape=[1], name=\"item-Input\")\nitem_embedding = Embedding(input_dim=150000, output_dim =6,name=\"item-Embedding\")(item_input)\nitem_vec = Flatten(name=\"Flatten-item\")(item_embedding)\n\nconc = Concatenate()([shop_vec, item_vec])","1859708f":"fc1 = Dense(20, activation='relu')(conc)\nfc2 = Dense(10, activation='relu')(fc1)\nout = Dense(1)(fc2)\n\n\nmodel = Model([item_input, shop_input], out)\nmodel.compile('adam', 'mean_squared_error')","8a2377a3":"  if os.path.exists('regression_model2.h5'):\n    model = load_model('regression_model2.h5')\nelse:\n    history = model.fit([train.shop_id, train.item_id], train.item_cnt_day, epochs=5, verbose=1)\n    model.save('regression_model2.h5')\n    plt.plot(history.history['loss'])\n    plt.xlabel(\"Epochs\")\n    plt.ylabel(\"Training Error\")","8333f021":"model.evaluate([test.shop_id, test.item_id], test.item_cnt_day)\npredictions = model.predict([test.shop_id.head(10), test.item_id.head(10)])\n\nprint (\"\\n\\n Model predictions: \\n\")\nfor i in range(0,10):\n\tprint(predictions[i], test.item_cnt_day.iloc[i])","5b61f992":"Model predictions:","72764c58":"Layer ekliyorum ve modeli compile ediyorum:","50bbdaae":"Modeli train ettim:","881b3ea6":"Shop ve Item i\u00e7in vekt\u00f6r olu\u015fturuyorum:"}}