{"cell_type":{"89d9a6b2":"code","7e656627":"code","5f67cb81":"code","838a420d":"code","7b29aa61":"code","1d22d0a0":"code","e2e1370e":"code","621995c3":"code","72fb2948":"code","d1458810":"code","ec8fea9d":"code","efbcbb64":"code","a7117058":"code","4cb47582":"code","8eaeb5be":"code","632748ef":"markdown"},"source":{"89d9a6b2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e656627":"data_path = '..\/input\/dummy-advertising-and-sales-data\/Dummy Data HSS.csv'\nadvertising_data = pd.read_csv(data_path)\n\nadvertising_data.describe()","5f67cb81":"advertising_data.columns","838a420d":"#drop missing values from the data\nadvertising_data = advertising_data.dropna(axis=0)","7b29aa61":"y = advertising_data.Sales","1d22d0a0":"#choosing features for model\nadvertising_features = ['TV', 'Radio', 'Social Media']","e2e1370e":"X = advertising_data[advertising_features]","621995c3":"X.describe()","72fb2948":"X.head()","d1458810":"from sklearn.tree import DecisionTreeRegressor\n\nadvertising_model = DecisionTreeRegressor()\n\nadvertising_model.fit(X, y)","ec8fea9d":"print(X.head())\n\nprint(\"The predictions are\")\n\nprint(advertising_model.predict(X.head()))","efbcbb64":"from sklearn.metrics import mean_absolute_error\n\npredicted_sales = advertising_model.predict(X)\nmean_absolute_error(y, predicted_sales)","a7117058":"from sklearn.model_selection import train_test_split\n\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=0)\n\nadvertising_model = DecisionTreeRegressor()\n\nadvertising_model.fit(train_X, train_y)\nval_predictions = advertising_model.predict(val_X)\n\nprint(mean_absolute_error(val_y, val_predictions))","4cb47582":"from sklearn.metrics import mean_absolute_error\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y):\n    model = DecisionTreeRegressor(max_leaf_nodes = max_leaf_nodes, random_state=0)\n    model.fit(train_X, train_y)\n    preds_val = model.predict(val_X)\n    mae = mean_absolute_error(val_y, preds_val)\n    return(mae)\n","8eaeb5be":"for max_leaf_nodes in [5, 50, 500]:\n    my_mae = get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y)\n    print(\"Max leaf nodes: %d \\t\\t Mean Abosolute Error: %d\" %(max_leaf_nodes, my_mae))","632748ef":"**Calculate the mean absolute error**"}}