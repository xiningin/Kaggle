{"cell_type":{"5c49257b":"code","c997232e":"code","a846eca5":"code","ed42d21a":"code","4bfbad57":"code","327c556f":"code","685d6616":"code","0391b08c":"code","bcb5e811":"code","870f9e51":"markdown","f3f87806":"markdown","358d968d":"markdown","5a4ba39c":"markdown","a44b266f":"markdown","4787d103":"markdown","121da010":"markdown","7597cf4a":"markdown"},"source":{"5c49257b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c997232e":"np.__version__","a846eca5":"pd.__version__","ed42d21a":"df = pd.read_csv('..\/input\/dataset\/data.csv')","4bfbad57":"#average price of BMW cars.\ndf2 = df[df[\"Make\"] == \"BMW\"]\ndf2[\"Make\"].nunique()\ndf2[\"MSRP\"].mean()","327c556f":"#missing values for Engine HP for cars after 2014(excluding)\ndf3 = df[df[\"Year\"] > 2014 ]\ndf3['Engine HP'].isnull().sum(axis = 0)","685d6616":"#average \"Engine HP\" in the dataset\ndf4 = df\nmean_hp_before = df4['Engine HP'].mean()\nprint(round(mean_hp_before))\ndf5 = df4.fillna(value = {'Engine HP':mean_hp_before})\nmean_hp_after = df5['Engine HP'].mean()\nprint(round(mean_hp_after))","0391b08c":"df6 = df[df[\"Make\"] == \"Rolls-Royce\"]\ndf6 = df6.loc[:, df6.columns.intersection([\"Engine HP\", \"Engine Cylinders\", \"highway MPG\"])]\ndf6 = df6.drop_duplicates()\nX = df6.to_numpy()\nXTX = np.matmul((np.transpose(X)),X)\ninv_XTX  = np.linalg.inv(XTX)\nprint(np.sum(inv_XTX))","bcb5e811":"y = [1000, 1100, 900, 1200, 1000, 850, 1300]\nXT = np.transpose(X)\nw = np.matmul((np.matmul(inv_XTX, XT)), y)\nprint(w)\n","870f9e51":"**Q7**","f3f87806":"**Q2**","358d968d":"**Q3**","5a4ba39c":"**Q5**","a44b266f":"**Q4**","4787d103":"**Q1**","121da010":"**Q6**","7597cf4a":"No, the average didn't change!!"}}