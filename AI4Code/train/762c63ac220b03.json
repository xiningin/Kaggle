{"cell_type":{"d66fafec":"code","ebbd043d":"code","cce56521":"code","ee4ed5ba":"code","ce358ccc":"code","bfafaf6d":"code","9dd6d270":"code","a13d4eec":"code","941805d0":"code","774db85d":"code","26d104dc":"code","710ffece":"code","09d197b0":"code","698d612c":"code","594567ca":"markdown"},"source":{"d66fafec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport random\n\nPATH = '..\/input\/champs-scalar-coupling\/'","ebbd043d":"!pip install -i https:\/\/test.pypi.org\/simple\/ xyz2graph","cce56521":"from xyz2graph import MolGraph, to_networkx_graph, to_plotly_figure\nfrom plotly.offline import init_notebook_mode, iplot\nimport networkx as nx\n\n# initiate the Plotly notebook mode\ninit_notebook_mode(connected=True)\n\nstructures = pd.read_csv(PATH + 'structures.csv')\nmol_names = structures.molecule_name.unique()","ee4ed5ba":"def draw_random_mol():\n    \"\"\"Draws a random molecule\"\"\"\n    mol_name = random.choice(mol_names)\n    # Create the MolGraph object\n    mg = MolGraph()\n    # Read the data from the .xyz file\n    mg.read_xyz(f'{PATH}structures\/{mol_name}.xyz')\n    # Create the Plotly figure\n    fig = to_plotly_figure(mg)\n    iplot(fig)\n\ndef draw_random_networx_graph():\n    \"\"\"Draws the NetworkX graph of a random molecule\"\"\"\n    mol_name = random.choice(mol_names)\n    # Create the MolGraph object\n    mg = MolGraph()\n    # Read the data from the .xyz file\n    mg.read_xyz(f'{PATH}structures\/{mol_name}.xyz')\n    # Create the NetworkX figure\n    G = to_networkx_graph(mg)\n    nodes = list(G.nodes(data=True))\n    print('Nodes:')\n    print(nodes[:5])\n    edges = list(G.edges(data=True))\n    print('Edges:')\n    print(print(edges[:5]))\n    nx.draw(G, with_labels=True)","ce358ccc":"draw_random_mol()","bfafaf6d":"draw_random_mol()","9dd6d270":"draw_random_mol()","a13d4eec":"draw_random_mol()","941805d0":"draw_random_mol()","774db85d":"draw_random_mol()","26d104dc":"draw_random_mol()","710ffece":"draw_random_mol()","09d197b0":"draw_random_networx_graph()","698d612c":"draw_random_networx_graph()","594567ca":"# xyz2graph\n[**xyz2graph**](https:\/\/github.com\/zotko\/xyz2graph) is a Python package for reading of .xyz files and constructing of molecular graphs from atomic coordinates. The molecular graph can be converted into [NetworkX](https:\/\/networkx.github.io) graph or [Plotly](https:\/\/plot.ly) figure for 3D visualization in a browser window or in a [Jupyter notebook](https:\/\/jupyter.org)."}}