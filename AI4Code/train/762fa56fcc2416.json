{"cell_type":{"e0cd54c1":"code","6287f9d6":"code","76f1c43c":"code","80e3640a":"code","a464faf9":"code","6d25f3c8":"code","a104c89d":"code","b1de47c8":"code","ba16976f":"code","fc19c9d9":"code","68c1bc57":"code","d1171fba":"code","27d6ff29":"code","bb0c0064":"code","de77517c":"code","997eb45c":"code","c8b55a2d":"code","24f32443":"code","67a90fb2":"code","27f21301":"code","9a8c7767":"code","136a1456":"code","2cdb2bc3":"code","007b7677":"code","547cdd9d":"code","3cc53ef2":"code","f2caaffb":"code","8f760d93":"code","1131968e":"code","70fcb0cd":"code","a048d98c":"code","4824819b":"code","bda51ef9":"code","200e4e29":"code","0e397f15":"code","3e9a8e4c":"code","e9c88b90":"code","6cbc6a1d":"code","59ec3d7f":"code","478a2915":"code","c32da63b":"code","82fdea8c":"code","056c5180":"code","b78780c7":"code","33db1c5e":"code","7d9bf1e7":"code","5d6159ab":"code","7251cbaf":"code","bdcff6de":"code","791aca5c":"code","a5fbb259":"code","046db0c7":"code","f098a3e5":"code","40152c43":"code","8e4f5413":"code","3983b114":"code","adf65e38":"code","abd47436":"code","9f76c8fd":"code","ce581b3d":"code","a02bb269":"code","12580435":"code","15ddc8e6":"code","120110a3":"code","1c6497cf":"code","e4f73b9c":"code","404b7461":"code","05d4727b":"code","3b1a34c0":"code","9ef46878":"code","73c77e10":"markdown","db878819":"markdown","3962fa68":"markdown","32971c8c":"markdown","31af9d23":"markdown","f94d6820":"markdown","44d84d04":"markdown","1a0a8e94":"markdown","52096905":"markdown","ba618746":"markdown","375f2d66":"markdown","7e596213":"markdown","a50c3aed":"markdown","9092ab53":"markdown","54c2bcbd":"markdown","eedc0b72":"markdown","587e2001":"markdown","172431c5":"markdown","906887a8":"markdown","7dd9033b":"markdown","da2719e4":"markdown","58ea7c28":"markdown","1a791f89":"markdown","f5f7640e":"markdown","99304b40":"markdown"},"source":{"e0cd54c1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as mp\nfrom matplotlib import style\nstyle.use('ggplot')\nimport seaborn as sns\nimport plotly as pt\nimport plotly.express as px\nimport plotly.subplots\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport cufflinks as cf\nimport plotly.offline as pyo\nfrom plotly.offline import init_notebook_mode,plot,iplot\nimport folium as flm\n\n\n\n%matplotlib inline","6287f9d6":"pyo.init_notebook_mode(connected = True)\ncf.go_offline()","76f1c43c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","80e3640a":"df = pd.read_csv('..\/input\/marketing-data\/marketing_data.csv')","a464faf9":"df.head()","6d25f3c8":"df.shape","a104c89d":"sns.heatmap(df.isnull() , yticklabels = False , cmap = 'viridis' , cbar = False)","b1de47c8":"df.dtypes","ba16976f":"df.rename(columns={' Income ': 'Income'} , inplace = True)","fc19c9d9":"df['Income'] = df['Income'].str.replace('$', '')\ndf['Income'] = df['Income'].str.replace(',', '')\ndf.Income = df.Income.str.rstrip()\ndf.Income = df.Income.astype(float)\n","68c1bc57":"df['Dt_Customer'] = df['Dt_Customer'].astype('datetime64[ns]')","d1171fba":"print(df.Income.dtypes)\nprint(df.Dt_Customer.dtypes)","27d6ff29":"df.Income.describe()","bb0c0064":"df['Income'] = df['Income'].fillna((df['Income'].mean()))","de77517c":"sns.heatmap(df.isnull() , yticklabels = False , cmap = 'viridis' , cbar = False)","997eb45c":"mp.figure(1 , figsize = (20,20))\n\nmp.subplot(331)\nsns.boxplot(data = df , x = 'ID')\n\nmp.subplot(332)\nsns.boxplot(data = df , x = 'Year_Birth')\n\nmp.subplot(333)\nsns.boxplot(data = df , x = 'Income')\n\nmp.subplot(334)\nsns.boxplot(data = df , x = 'Kidhome')\n\nmp.subplot(335)\nsns.boxplot(data = df , x = 'Teenhome')\n\nmp.subplot(336)\nsns.boxplot(data = df , x = 'Recency')\n\nmp.subplot(337)\nsns.boxplot(data = df ,x = 'Complain')\n\n","c8b55a2d":"df[df.Income > 600000]","24f32443":"df.drop([527] , inplace = True)","67a90fb2":"df[df.Income > 150000]","27f21301":"df[df.Year_Birth<1910]","9a8c7767":"df.drop([513 , 827 , 2232] , inplace = True)","136a1456":"mp.figure(1 , figsize = (20,20))\n\nmp.subplot(231)\nsns.boxplot(data = df , x = 'MntWines')\n\nmp.subplot(232)\nsns.boxplot(data = df , x = 'MntFruits')\n\nmp.subplot(233)\nsns.boxplot(data = df , x = 'MntMeatProducts') \n\nmp.subplot(234)\nsns.boxplot(data = df , x = 'MntFishProducts')\n\nmp.subplot(235)\nsns.boxplot(data = df , x = 'MntSweetProducts')\n\nmp.subplot(236)\nsns.boxplot(data = df , x = 'MntGoldProds')\n","2cdb2bc3":"fig, axs = mp.subplots(1, 9, sharey = True, tight_layout=True , figsize = (20,8))\n\naxs[0].hist(x = df['NumStorePurchases'])\naxs[0].title.set_text('NumStorePurchases')\n\naxs[1].hist(x = df['NumWebVisitsMonth'])\naxs[1].title.set_text('NumWebVisitsMonth')\n\naxs[2].hist(x = df['AcceptedCmp1'])\naxs[2].title.set_text('AcceptedCmp1')\n\naxs[3].hist(x = df['AcceptedCmp2'])\naxs[3].title.set_text('AcceptedCmp2')\n\naxs[4].hist(x = df['AcceptedCmp3'])\naxs[4].title.set_text('AcceptedCmp3')\n\naxs[5].hist(x = df['AcceptedCmp4'])\naxs[5].title.set_text('AcceptedCmp4')\n\naxs[6].hist(x = df['AcceptedCmp5'])\naxs[6].title.set_text('AcceptedCmp5')\n\naxs[7].hist(x = df['Response'])\naxs[7].title.set_text('Response')\n\naxs[8].hist(x = df['Complain'])\naxs[8].title.set_text('Complain')","007b7677":"df['TotalMntSpent'] = df['MntWines'] + df['MntFruits'] + df['MntMeatProducts'] + df['MntSweetProducts'] + df['MntFishProducts'] +df['MntGoldProds']","547cdd9d":"df['TotalChildren'] = df['Kidhome'] + df['Teenhome']","3cc53ef2":"df['TotalPurchases'] = df['NumDealsPurchases'] + df['NumWebPurchases'] + df['NumCatalogPurchases']","f2caaffb":"NumStorePurchases = df.NumStorePurchases.unique()","8f760d93":"NumStorePurchases = np.array([ 6,  7,  5,  2,  3,  9, 10,  0,  8,  4, 13, 12,  1, 11])\nprint(np.sort(NumStorePurchases))","1131968e":"NumStorePurchases_Kidhome = df.groupby('Kidhome').sum()['NumStorePurchases'].reset_index()\nNumStorePurchases_Kidhome","70fcb0cd":"NumStorePurchases_Teenhome = df.groupby('Teenhome').sum()['NumStorePurchases'].reset_index()\nNumStorePurchases_Teenhome","a048d98c":"NumStorePurchases_TotalChildren= df.groupby('TotalChildren').sum()['NumStorePurchases'].reset_index()\nNumStorePurchases_TotalChildren","4824819b":"fig = make_subplots(rows=1, cols=3, shared_yaxes=True  , subplot_titles=(\"Number of Kids at home\", \"Number of Teens at home\", \"Total Children\"))\n\nfig.add_trace(go.Bar(x=NumStorePurchases_Kidhome['Kidhome'], y=NumStorePurchases_Kidhome['NumStorePurchases'],marker=dict(color='darkorange')),1, 1)\n\nfig.add_trace(go.Bar(x=NumStorePurchases_Teenhome['Teenhome'], y=NumStorePurchases_Teenhome['NumStorePurchases'],marker=dict(color='darkorange')),1, 2)\n\nfig.add_trace(go.Bar(x=NumStorePurchases_TotalChildren['TotalChildren'], y=NumStorePurchases_TotalChildren['NumStorePurchases'],marker=dict(color='darkorange')),1, 3)\n\nfig.update_layout(coloraxis=dict(colorscale='Bluered_r') , yaxis_title ='Number of Store Purchases', title_text=\"How number of children at home and their age affect Number of Store Purchases\" ,showlegend=False)\nfig.show()","bda51ef9":"Marital_Status = df.groupby('Marital_Status').sum()['NumStorePurchases'].reset_index()\n\nMarital_Status","200e4e29":"px.bar(Marital_Status ,x = 'Marital_Status' , y = 'NumStorePurchases' , title = 'How marital status affect the number of purschases')","0e397f15":"Education = df.groupby('Education').sum()['NumStorePurchases'].reset_index()\n\nEducation","3e9a8e4c":"px.bar(Education ,x = 'Education' , y = 'NumStorePurchases' , title = 'How Education affect the number of purschases')","e9c88b90":"df.Year_Birth.unique()","6cbc6a1d":"A = df.groupby('Year_Birth').sum()['NumStorePurchases'].reset_index()\n\nA","59ec3d7f":"Year_Birth = df.groupby('Year_Birth')['NumStorePurchases'].sum().sort_values(ascending = False).to_frame()\n\nYear_Birth.style.background_gradient(cmap ='Pastel1_r')","478a2915":"px.bar(A , x = 'Year_Birth' , y = 'NumStorePurchases')","c32da63b":"B = df.groupby('Income').sum()['NumStorePurchases'].reset_index()\n\nB","82fdea8c":"fig = px.scatter(B, x=\"Income\", y ='NumStorePurchases')\nfig.show()","056c5180":"Country = df.groupby('Country').sum()['NumStorePurchases'].reset_index()\n\nCountry","b78780c7":"px.bar(Country , x = 'Country' , y = 'NumStorePurchases')","33db1c5e":"Country_TotalPurchases = df.groupby('Country').sum()['TotalPurchases'].reset_index()\n\nCountry_TotalPurchases","7d9bf1e7":"px.bar(Country_TotalPurchases , x = 'Country' , y = 'TotalPurchases')","5d6159ab":"MntGoldProds= df.groupby('MntGoldProds').sum()['NumStorePurchases'].reset_index()","7251cbaf":"MntGoldProds","bdcff6de":"fig = px.scatter(MntGoldProds , x = 'NumStorePurchases' , y = 'MntGoldProds')\nfig.show()","791aca5c":"MntFishProducts = df.groupby('Education').sum()['MntFishProducts'].reset_index()","a5fbb259":"MntFishProducts","046db0c7":"MntFishProducts.iplot(x = 'Education' , y = 'MntFishProducts' , kind = 'bar')","f098a3e5":"MntFishProducts_Marital_Status =  df.groupby('Marital_Status').sum()['MntFishProducts'].reset_index()","40152c43":"MntFishProducts_Marital_Status","8e4f5413":"MntFishProducts_Marital_Status.iplot(x = 'Marital_Status' , y = 'MntFishProducts' , kind = 'bar')","3983b114":"TotalChildren_MntFishProducts = df.groupby('TotalChildren').sum()['MntFishProducts'].reset_index()\n\nTotalChildren_MntFishProducts","adf65e38":"px.bar(TotalChildren_MntFishProducts , x = 'TotalChildren' , y = 'MntFishProducts' )","abd47436":"px.scatter( df ,x = 'Income' , y = 'MntFishProducts' )","9f76c8fd":"df.Country.unique()","ce581b3d":"AcceptedCmp1 = df.groupby('Country').sum()['AcceptedCmp1'].reset_index()\nAcceptedCmp2 = df.groupby('Country').sum()['AcceptedCmp2'].reset_index()\nAcceptedCmp3 = df.groupby('Country').sum()['AcceptedCmp3'].reset_index()\nAcceptedCmp4 = df.groupby('Country').sum()['AcceptedCmp4'].reset_index()\nAcceptedCmp5 = df.groupby('Country').sum()['AcceptedCmp5'].reset_index()\nResponse = df.groupby('Country').sum()['Response'].reset_index()","a02bb269":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = AcceptedCmp1['Country'], y = AcceptedCmp1['AcceptedCmp1'],\n                        mode = 'lines+markers',\n                        name = 'AcceptedCmp1',\n                        line = dict(color = 'yellowgreen'  ,width = 2)))\n\nfig.add_trace(go.Scatter(x = AcceptedCmp2['Country'], y = AcceptedCmp2['AcceptedCmp2'],\n                        mode = 'lines+markers',\n                        name = 'AcceptedCmp2',\n                        line = dict(color = 'red'  ,width = 2)))\n\nfig.add_trace(go.Scatter(x = AcceptedCmp3['Country'], y = AcceptedCmp3['AcceptedCmp3'],\n                        mode = 'lines+markers',\n                        name = 'AcceptedCmp3',\n                        line = dict(color = 'olive'  ,width = 2)))\n\nfig.add_trace(go.Scatter(x = AcceptedCmp4['Country'], y = AcceptedCmp4['AcceptedCmp4'],\n                        mode = 'lines+markers',\n                        name = 'AcceptedCmp4',\n                        line = dict(color = 'magenta'  ,width = 2)))\n\nfig.add_trace(go.Scatter(x = AcceptedCmp5['Country'], y = AcceptedCmp5['AcceptedCmp5'],\n                        mode = 'lines+markers',\n                        name = 'AcceptedCmp5',\n                        line = dict(color = 'blue'  ,width = 2)))\n\nfig.add_trace(go.Scatter(x = Response['Country'], y = Response['Response'],\n                        mode = 'lines+markers',\n                        name = 'Response',\n                        line = dict(color = 'darkorange'  ,width = 2)))\n\nfig.update_layout(title_text=\"Success of Campaign in different Countries\" , xaxis_title ='Country' ,yaxis_title=\"Total Offers accepted by Customers\")\nfig.show()","12580435":"ac1 = (df.AcceptedCmp1.sum())\nac2 = (df.AcceptedCmp2.sum())\nac3 = (df.AcceptedCmp3.sum())\nac4 = (df.AcceptedCmp4.sum())\nac5 = (df.AcceptedCmp5.sum())\nrsp = (df.Response.sum())","15ddc8e6":"fig  = px.bar(x = ['AcceptedCmp1' , 'AcceptedCmp2' , 'AcceptedCmp3' ,'AcceptedCmp4' , 'AcceptedCmp5' , 'Response'] , \n      y = [ac1 , ac2 , ac3 , ac4 , ac5 , rsp])\n\nfig.update_xaxes(title_text='Marketing Campaign')\nfig.update_yaxes(title_text='Total Offers accepted by Customers')\nfig.update_layout(title = 'Success of Marketing Campaigns')\n\nfig.show()","120110a3":"Wine = df.MntWines.sum()\nFruits = df.MntFruits.sum()\nMeat = df.MntMeatProducts.sum()\nFish = df.MntFishProducts.sum()\nSweet = df.MntSweetProducts.sum()\nGold = df.MntGoldProds.sum()","1c6497cf":"fig = go.Figure(data = go.Scatter(x=['Wine' , 'Fruits' , 'Meat' , 'Fish' , 'Sweet' , 'Gold'],\n                         y=[Wine , Fruits , Meat , Fish , Sweet, Gold],\n                         mode='lines+markers' ,\n                         marker = dict(size = 30)))\n\nfig.update_xaxes(title_text = 'Products')\nfig.update_yaxes(title_text = 'Amount Spent')\n\nfig.update_layout(title = 'Product Performance')","e4f73b9c":"TotalPurchases_Country = df.groupby('Country')['TotalPurchases'].sum().reset_index()","404b7461":"d = {'Country': ['AUS', 'CA' , 'GER' , 'IND' , 'ME' , 'SA' ,'SP' , 'US'],\n     'Latitude': [-25.274398, 56.1304 ,51.1657,20.5937,42.7087,30.5595,40.4637,37.0902],\n    'Longitude' : [133.7751,-106.346771,10.4515,78.9629,19.3744,22.9375,-3.7492,-95.7129]}\nlong_lat = pd.DataFrame(data=d)\nlong_lat","05d4727b":"Country_latlong = pd.merge(TotalPurchases_Country , long_lat , on = 'Country')\n\nCountry_latlong","3b1a34c0":"map = flm.Map(location = [50,50] , zoom_start = 1.5, tiles='Stamenterrain')\n\nfor lat,long,TotalPurchases,name in zip(Country_latlong['Latitude'] , Country_latlong['Longitude'] , Country_latlong['TotalPurchases'] ,Country_latlong['Country']):\n    flm.CircleMarker(\n        \n        [lat , long],\n        radius = TotalPurchases\/200,\n        popup = ('<strong>Country<\/strong>: '+str(name).capitalize()+'<br>''<strong>Total Purchases<\/strong>: '+str(TotalPurchases)+'<br>'),\n        color = 'darkorange',\n        fill_color = 'darkorange',\n        fill_opacity = 0.1).add_to(map)","9ef46878":"map","73c77e10":"# Countries with most Purchases depicted through a Stamen terrain map","db878819":"1. Number of Kids\/Teens\/Total Children at Home","3962fa68":"2. Income","32971c8c":"# An average customer is from Spain, born between the years 1970 and 1980 with a Graduation and married with 0 kids.","31af9d23":"3. Education","f94d6820":"# Relationship between geographical region and success of a campaign","44d84d04":"# Section 02: Statistical Analysis","1a0a8e94":"# Are Married PhD customers buying more Fish Products ?","52096905":"5. Country","ba618746":"# Factors related to the number of store purchases","375f2d66":"# Section 03: Data Visualization","7e596213":"# Best Performing Products","a50c3aed":"2. Marital Status","9092ab53":"4. Income","54c2bcbd":"# Other factors related to amount spent on fish","eedc0b72":"3. Age Group","587e2001":"# Finding Null Values ","172431c5":"# Feature Engineering","906887a8":"# Relationship between Buying Gold and In-Store Purchases","7dd9033b":"# Most Successful Marketing Campaign","da2719e4":"# Map","58ea7c28":"# Finding Outliers","1a791f89":"1. Number of Children at Home","f5f7640e":"# Section 01: Exploratory Data Analysis","99304b40":"# US Purchases vs World Purchases"}}