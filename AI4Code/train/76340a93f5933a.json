{"cell_type":{"8428a710":"code","d4e5eb4e":"code","ef2cdfdf":"code","d8c064c0":"code","ff796768":"code","886720bc":"code","3af75958":"code","81ba62ff":"code","351664f8":"code","66f0a052":"code","1b42c1ba":"code","99c89126":"markdown","339cd5bc":"markdown","9210d616":"markdown","a799288b":"markdown","e75f525b":"markdown"},"source":{"8428a710":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os","d4e5eb4e":"folder = \"..\/input\/crypto-mining-data\/\"\ndataPackage = [ pd.read_csv(folder+file) for file in os.listdir(folder) ]","ef2cdfdf":"def del_cols_with_many_nans(data : pd.DataFrame) -> pd.DataFrame:\n    cols = list(data.columns)\n    new_cols = []\n    data_len = float(len(data))\n    for col in cols:\n        nans_count = float(data[col].isna().sum())\n        if(nans_count\/data_len <= 0.01):\n            new_cols.append(col)\n    return data[new_cols]","d8c064c0":"for i in range(len(dataPackage)):\n    dataPackage[i] = del_cols_with_many_nans(dataPackage[i]).dropna()\n    print( str(i+1) + \"st file\\ncols: \" + str(len(dataPackage[i].columns)) + \" number of object: \" + str(len(dataPackage[i])), end=\"\\n\\n\" )","ff796768":"def select_month(data : pd.DataFrame) -> pd.DataFrame:\n    new_data = data.copy()\n    new_data[\"month\"] = list(range(len(new_data)))\n    for i in new_data.index:\n        new_data[\"month\"][i] = float( new_data[\"date\"][i].split(\"-\")[1])\n    cols = list(new_data.columns)[1:]\n    return new_data[cols].astype(\"float\")\n\ndef select_year(data : pd.DataFrame) -> pd.DataFrame:\n    new_data = data.copy()\n    new_data[\"year\"] = list(range(len(new_data)))\n    for i in new_data.index:\n        new_data[\"year\"][i] = float( new_data[\"date\"][i].split(\"-\")[0])\n    cols = list(new_data.columns)[1:]\n    return new_data[cols].astype(\"float\")","886720bc":"data_per_month = dataPackage.copy()\nfor i in range(len(data_per_month)):\n    data_per_month[i] = select_month(data_per_month[i])\n\ndata_per_year = dataPackage.copy()\nfor i in range(len(data_per_year)):\n    data_per_year[i] = select_year(data_per_year[i])","3af75958":"for i in range(len(data_per_month)):\n    data_per_month[i] = data_per_month[i].groupby(\"month\").mean()\nfor i in range(len(data_per_year)):\n    data_per_year[i] = data_per_year[i].groupby(\"year\").mean()","81ba62ff":"cryptocurrencies = [\n    \"binance coin\",\n    \"bitcoin\",\n    \"bitcoin gold\",\n    \"dash\",\n    \"dogecoin\",\n    \"ethereum\",\n    \"ethereum classic\",\n    \"litecoin\",\n    \"tether\"\n]","351664f8":"def visualize_for_month(data : pd.DataFrame, currency : str):\n    plt.figure(figsize=(13, 13))\n    for col in data.columns:\n        plt.plot(data.index, np.cbrt(np.cbrt(data[col])), label=col)\n    \n    plt.xlabel(\"month\")\n    plt.ylabel(\"root of the 9th degree of mean\")\n    plt.title(currency)\n    plt.legend()\n    plt.show()\ndef visualize_for_year(data : pd.DataFrame, currency : str):\n    global cryptocurrencies\n    \n    plt.figure(figsize=(13, 13))\n    for col in data.columns:\n        plt.plot(data.index, np.cbrt(np.cbrt(data[col])), label=col)\n    \n    plt.xlabel(\"year\")\n    plt.ylabel(\"root of the 9th degree of mean\")\n    plt.title(currency)\n    plt.legend()\n    plt.show()","66f0a052":"for i in range(9):\n    visualize_for_month(data_per_month[i], cryptocurrencies[i])","1b42c1ba":"for i in range(9):\n    visualize_for_year(data_per_year[i], cryptocurrencies[i])","99c89126":"# Part 1\n**Primary preprocessing**","339cd5bc":"Let's clean data from NaN values.","9210d616":"# Part 2\n**Visualization**","a799288b":"# Part 0\n**Data reading and cleaning**","e75f525b":"Visualization for month."}}