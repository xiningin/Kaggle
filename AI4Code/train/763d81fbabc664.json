{"cell_type":{"c882372c":"code","990590b5":"code","ef57a7f8":"code","7f79d131":"code","cc9a1d1d":"code","9861c1b9":"code","34ea4645":"code","ab32ef29":"code","c21d7c46":"code","094398fb":"code","9cc3e984":"code","4498cc41":"code","a772004c":"code","f347107f":"code","dcb84c88":"code","9e98856b":"code","d2985220":"code","d147f010":"code","b1dd179b":"code","2ffef725":"code","c2f02d23":"code","dfc4d8bf":"code","d5e1e17a":"code","834364cf":"code","f47f17f3":"code","40748397":"code","e0356fa7":"code","a952f727":"code","96dcaed7":"markdown","8ff94176":"markdown","b96ac060":"markdown","5b6d26cc":"markdown","d48b2977":"markdown","9bb930f7":"markdown","e395c8d5":"markdown"},"source":{"c882372c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pylab as plt\nimport seaborn as sns\nplt.style.use('ggplot')\npd.set_option('max_columns', 200)","990590b5":"df = pd.read_csv('..\/input\/rollercoaster-database\/coaster_db.csv')","ef57a7f8":"df.shape","7f79d131":"df.head(5)","cc9a1d1d":"df.columns","9861c1b9":"df.dtypes","34ea4645":"df.describe()","ab32ef29":"# Example of dropping columns\n# df.drop(['Opening date'], axis=1)","c21d7c46":"df = df[['coaster_name',\n    # 'Length', 'Speed',\n    'Location', 'Status',\n    # 'Opening date',\n    #   'Type',\n    'Manufacturer',\n#     'Height restriction', 'Model', 'Height',\n#        'Inversions', 'Lift\/launch system', 'Cost', 'Trains', 'Park section',\n#        'Duration', 'Capacity', 'G-force', 'Designer', 'Max vertical angle',\n#        'Drop', 'Soft opening date', 'Fast Lane available', 'Replaced',\n#        'Track layout', 'Fastrack available', 'Soft opening date.1',\n#        'Closing date',\n#     'Opened', \n    # 'Replaced by', 'Website',\n#        'Flash Pass Available', 'Must transfer from wheelchair', 'Theme',\n#        'Single rider line available', 'Restraint Style',\n#        'Flash Pass available', 'Acceleration', 'Restraints', 'Name',\n       'year_introduced',\n        'latitude', 'longitude',\n    'Type_Main',\n       'opening_date_clean',\n    #'speed1', 'speed2', 'speed1_value', 'speed1_unit',\n       'speed_mph', \n    #'height_value', 'height_unit',\n    'height_ft',\n       'Inversions_clean', 'Gforce_clean']].copy()","094398fb":"df['opening_date_clean'] = pd.to_datetime(df['opening_date_clean'])","9cc3e984":"# Rename our columns\ndf = df.rename(columns={'coaster_name':'Coaster_Name',\n                   'year_introduced':'Year_Introduced',\n                   'opening_date_clean':'Opening_Date',\n                   'speed_mph':'Speed_mph',\n                   'height_ft':'Height_ft',\n                   'Inversions_clean':'Inversions',\n                   'Gforce_clean':'Gforce'})","4498cc41":"df.isna().sum()","a772004c":"df.loc[df.duplicated()]","f347107f":"# Check for duplicate coaster name\ndf.loc[df.duplicated(subset=['Coaster_Name'])].head(5)","dcb84c88":"# Checking an example duplicate\ndf.query('Coaster_Name == \"Crystal Beach Cyclone\"')","9e98856b":"df.columns","d2985220":"df = df.loc[~df.duplicated(subset=['Coaster_Name','Location','Opening_Date'])] \\\n    .reset_index(drop=True).copy()","d147f010":"df['Year_Introduced'].value_counts()","b1dd179b":"ax = df['Year_Introduced'].value_counts() \\\n    .head(10) \\\n    .plot(kind='bar', title='Top 10 Years Coasters Introduced')\nax.set_xlabel('Year Introduced')\nax.set_ylabel('Count')","2ffef725":"ax = df['Speed_mph'].plot(kind='hist',\n                          bins=20,\n                          title='Coaster Speed (mph)')\nax.set_xlabel('Speed (mph)')","c2f02d23":"ax = df['Speed_mph'].plot(kind='kde',\n                          title='Coaster Speed (mph)')\nax.set_xlabel('Speed (mph)')","dfc4d8bf":"df['Type_Main'].value_counts()","d5e1e17a":"df.plot(kind='scatter',\n        x='Speed_mph',\n        y='Height_ft',\n        title='Coaster Speed vs. Height')\nplt.show()","834364cf":"ax = sns.scatterplot(x='Speed_mph',\n                y='Height_ft',\n                hue='Year_Introduced',\n                data=df)\nax.set_title('Coaster Speed vs. Height')\nplt.show()","f47f17f3":"sns.pairplot(df,\n             vars=['Year_Introduced','Speed_mph',\n                   'Height_ft','Inversions','Gforce'],\n            hue='Type_Main')\nplt.show()","40748397":"df_corr = df[['Year_Introduced','Speed_mph',\n    'Height_ft','Inversions','Gforce']].dropna().corr()\ndf_corr","e0356fa7":"sns.heatmap(df_corr, annot=True)","a952f727":"ax = df.query('Location != \"Other\"') \\\n    .groupby('Location')['Speed_mph'] \\\n    .agg(['mean','count']) \\\n    .query('count >= 10') \\\n    .sort_values('mean')['mean'] \\\n    .plot(kind='barh', figsize=(12, 5), title='Average Coast Speed by Location')\nax.set_xlabel('Average Coaster Speed')\nplt.show()","96dcaed7":"# Introduction to Exploritary Data Analysis\nUsing Pandas!\n\nThis notebook goes along with a tutorial that can be found on the [Medallion Data Science youtube channel](https:\/\/www.youtube.com\/channel\/UCxladMszXan-jfgzyeIMyvw). Click the link and subscribe for future tutorials.","8ff94176":"# Step 3: Feature Understanding\n(Univariate analysis)\n\n- Plotting Feature Distributions\n    - Histogram\n    - KDE\n    - Boxplot","b96ac060":"## Step 1: Data Understanding\n- Dataframe `shape`\n- `head` and `tail`\n- `dtypes`\n- `describe`\n","5b6d26cc":"# Step 0: Imports and Reading Data","d48b2977":"# Step 2: Data Preperation\n- Dropping irrelevant columns and rows\n- Identifying duplicated columns\n- Renaming Columns\n- Feature Creation","9bb930f7":"# Step 4: Feature Relationships\n- Scatterplot\n- Heatmap Correlation\n- Pairplot\n- Groupby comparisons","e395c8d5":"# Step 5: Ask a Question about the data\n- Try to answer a question you have about the data using a plot or statistic.\n\nWhat are the locations with the fastest roller coasters (minimum of 10)?"}}