{"cell_type":{"aa03a8f1":"code","d2d33018":"code","d2f35497":"code","52990cf3":"code","a653ea26":"code","b4942774":"code","d743d6d9":"code","ed4b872c":"code","52b57743":"code","e1f7e396":"code","b2808d1d":"code","01a00710":"code","6b773378":"code","3497c46e":"code","2b2ce9bf":"code","84fd6ec5":"code","53519da8":"code","8913865b":"code","cafa1682":"code","a4b2798a":"code","44f20b41":"code","dd49e8b2":"code","321b58d3":"code","135506e0":"markdown","c9ef5898":"markdown","4cf14f4e":"markdown","2b67f4ba":"markdown","8be55078":"markdown","2d38fd7f":"markdown","ea5adad2":"markdown","e8d338ef":"markdown","4d6efc1f":"markdown"},"source":{"aa03a8f1":"#import the libraries we need\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nprint(os.listdir(\"..\/input\"))\n","d2d33018":"data = pd.read_csv('..\/input\/san-francisco-crime-data\/Police_Department_Incident_Reports__2018_to_Present.csv')","d2f35497":"data.shape","52990cf3":"data.describe()","a653ea26":"data.head()","b4942774":"data.columns = data.columns.str.strip().str.replace(' ', '_').str.replace('(', '').str.replace(')', '')\n","d743d6d9":"data['Police_District'] = data['Police_District'].str.upper() ","ed4b872c":"data.isnull().sum()\n# there are a lot of null values in the data","52b57743":"new_df = data.fillna({\n    'CAD_Number' : 'NaN',\n    'Filed_Online' : 'NaN',\n    'Incident_Subcategory' : 'NaN',\n    'Incident_Category' : 'NaN',\n    'CNN' : 'NaN',\n    'Intersection' : 'NaN',\n    'Analysis_Neighborhood' : 'NaN',\n    'Supervisor_District' : 'NaN',\n    'Latitude' : 'NaN',\n    'Longitude' : 'NaN',\n    'point' : 'NaN',\n    'SF_Find_Neighborhoods' : 'NaN',\n    'Current_Police_Districts' : 'NaN',\n    'Current_Supervisor_Districts' : 'NaN',\n    'Analysis_Neighborhoods' : 'NaN',\n    'HSOC_Zones_as_of_2018-06-05' : 'NaN',\n    'OWED_Public_Spaces' : 'NaN',\n    'Central_Market\/Tenderloin_Boundary_Polygon_-_Updated' : 'NaN',\n    'Parks_Alliance_CPSI_27+TL_sites' : 'NaN',\n})","e1f7e396":"#Check\nnew_df.isnull().sum()","b2808d1d":"from wordcloud import WordCloud\n\nplt.rcParams['figure.figsize'] = (10, 8)\nplt.style.use('bmh')\nwc = WordCloud(background_color = 'pink', width = 1500, height = 1500).generate(str(data['Incident_Description']))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()","01a00710":"plt.rcParams['figure.figsize'] = (19, 8)\nplt.style.use('ggplot')\n\nsns.countplot(data['Incident_Category'], palette = 'gnuplot')\nplt.title('Crime Category Analysis', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","6b773378":"plt.rcParams['figure.figsize'] = (20, 9)\nplt.style.use('seaborn-bright')\nsns.countplot(data['Incident_Day_of_Week'], palette = 'gnuplot')\nplt.title('Crime Analysis Day wise', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","3497c46e":"plt.rcParams['figure.figsize'] = (20, 9)\nplt.style.use('Solarize_Light2')\nsns.countplot(data['Police_District'], palette = 'gnuplot')\nplt.title('Crime Analysis based on District', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","2b2ce9bf":"\nplt.rcParams['figure.figsize'] = (20, 9)\nplt.style.use('Solarize_Light2')\n\ncolor = plt.cm.ocean(np.linspace(0, 1, 15))\ndata['Intersection'].value_counts().head(10).plot.bar(color = color)\n\nplt.title('Top Intersections in Crime',fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","84fd6ec5":"plt.rcParams['figure.figsize'] = (20, 9)\nplt.style.use('seaborn')\nsns.countplot(data['Resolution'])\nplt.title('Case Status', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","53519da8":"import warnings\nwarnings.filterwarnings('ignore')\n\ncolor = plt.cm.twilight(np.linspace(0, 5, 100))\ndata['Incident_Time'].value_counts().head(20).plot.line(figsize = (15, 9))\nplt.title('Distribution of crime over the day', fontsize = 20)\nplt.show()","8913865b":"#line graph\ndf = pd.crosstab(data['Incident_Category'], data['Police_District'])\ncolor = plt.cm.Greys(np.linspace(0, 1, 10))\ndf.div(df.sum(1).astype(float), axis = 0).plot.line(stacked = True,figsize = (18, 12))\nplt.title('District vs Category of Crime', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","cafa1682":"#bar graph\ndf = pd.crosstab(data['Incident_Category'], data['Police_District'])\ncolor = plt.cm.Greys(np.linspace(0, 1, 10))\ndf.div(df.sum(1).astype(float), axis = 0).plot.bar(color=color, stacked = True,figsize = (18, 12))\nplt.title('District vs Category of Crime', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","a4b2798a":"t = new_df.Police_District.value_counts()","44f20b41":"t","dd49e8b2":"#Creatiing a data frame to get the geospatial distribution based on district\nt = data.Police_District.value_counts()\ndist= pd.DataFrame(data=t.values, index=t.index, columns=['Count'])\ndist.reindex([\"Central\", \"Northern\", \"Park\", \"Southern\", \"Mission\", \"Tenderloin\", \"Richmond\", \"Taraval\", \"Ingleside\", \"Bayview\"])\ndist = dist.reset_index()\ndist.rename({'index': 'District'}, axis='columns', inplace=True)\ndist[:-1]\n","321b58d3":"import folium\n \ngjson = r'https:\/\/cocl.us\/sanfran_geojson'\nSFmap = folium.Map(location = [37.77, -122.42], zoom_start = 12)\n#making a chloropleth map, one can also use plotly, d3js etc.\nSFmap.choropleth(\n    geo_data=gjson,\n    data=dist,\n    columns=['District', 'Count'],\n    key_on='feature.properties.DISTRICT',\n    line_opacity=0.3,\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    legend_name='Crime Rate in San Francisco'\n)\nSFmap","135506e0":"### THE MAIN MAP : Precinct Map","c9ef5898":"Here we are with the geospatial distribution of crime in San Francisco. The heat map for New York City can be found at https:\/\/maps.nyc.gov\/crime\/. Hope you all enjoyed this kernel. \n\nLeave comments on how this could be improved. Have fun!!","4cf14f4e":"Since the geoJSON has the District values in upper case we convert to uppercase as well.","2b67f4ba":"Load the dataset using pandas.","8be55078":"Let's make a word cloud to see the most frequently occuring crimes.","2d38fd7f":"## Visualizations","ea5adad2":"Let's clean the data and give a value'NaN' for the empty entries.","e8d338ef":"Now, since I know the structure and the various features of the data, I can easily generate plots for it.","4d6efc1f":"![](https:\/\/wp.zillowstatic.com\/streeteasy\/2\/SF_vs_NYC-v2-10a7b4.jpg)"}}