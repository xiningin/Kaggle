{"cell_type":{"96f5ae7d":"code","94d1e280":"code","8a688b5a":"code","1dfec506":"markdown","824c51ad":"markdown","3895ea70":"markdown","0e71a127":"markdown"},"source":{"96f5ae7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport keras\nfrom keras.layers import Input, Dense\nfrom keras.models import Model\nfrom matplotlib import pyplot as plt\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport numpy\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","94d1e280":"x_ = numpy.asarray([3.3,4.4,5.5,6.71,6.93,4.168,9.779,6.182,7.59,2.167,\n7.042,10.791,5.313,7.997,5.654,9.27,3.1])\n\ny_ = numpy.asarray([1.7,2.76,2.09,3.19,1.694,1.573,3.366,2.596,2.53,1.221,\n2.827,3.465,1.65,2.904,2.42,2.94,1.3])","8a688b5a":"inputs = Input(shape=(1,))\n\n#For activation function refer: https:\/\/keras.io\/activations\/\npreds = Dense(1,activation='linear')(inputs)\n\nmodel = Model(inputs=inputs,outputs=preds)\nsgd=keras.optimizers.SGD()\nmodel.compile(optimizer=sgd ,loss='mse')\nmodel.fit(x_,y_, batch_size=10, verbose=1, epochs=100, shuffle=False)\nplt.scatter(x_,y_,color='black')\nplt.plot(x_,model.predict(x_), color='blue', linewidth=3)","1dfec506":"Linear Regression is a primitive technique of forecasting in ML, lets try this in Keras\u2026\n\n\nImport Libraries","824c51ad":"Declare parameters","3895ea70":"* Resource article is available from here : http:\/\/www.machineintellegence.com\/331-2\/","0e71a127":"Dense implements the operation: output = activation(dot(input, kernel) + bias) where activation is the element-wise activation function passed as the activation argument, kernel is a weights matrix created by the layer, and bias is a bias vector created by the layer (only applicable if use_bias is True)\n\nNote for detail refer:  https:\/\/keras.io\/layers\/core\/"}}