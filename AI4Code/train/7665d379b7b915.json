{"cell_type":{"f802c3d4":"code","3a0113fb":"code","e3183289":"code","9a97cf8a":"code","77f93b03":"code","fbbc145c":"code","a0f09886":"code","11340e9d":"code","c1ee5399":"code","386c00dc":"markdown","b0d3b291":"markdown","39239785":"markdown"},"source":{"f802c3d4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3a0113fb":"!pip install --upgrade pip\n!pip install --upgrade numpy\n!pip install --upgrade sentence_transformers\n!conda install -c conda-forge hdbscan --y\n!pip install bokeh\n!pip install --upgrade bertopic[visualization]","e3183289":"data=pd.read_csv('\/kaggle\/input\/airplane-crashes-dataset-since-1908\/Airplane_crashes_dataset_since_1908.csv')\ndata.tail()","9a97cf8a":"from bertopic import BERTopic\nimport random\nrandom.seed(42)\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sentence_transformers import SentenceTransformer\nimport sklearn.manifold\n\nfrom bokeh.io import output_file, show\nfrom bokeh.models import ColumnDataSource, HoverTool, LinearColorMapper\nfrom bokeh.palettes import plasma, d3, Turbo256\nfrom bokeh.plotting import figure\nfrom bokeh.transform import transform\nimport bokeh.io\nbokeh.io.output_notebook()\n\nimport bokeh.plotting as bpl\nimport bokeh.models as bmo\nbpl.output_notebook()","77f93b03":"data = data[~data.summary.isna()]\ntext = data.summary.values.tolist()\n\nmodel = BERTopic(language=\"english\", nr_topics=40)\n#model = BERTopic(language=\"english\", nr_topics=\"auto\")\ntopics, probs = model.fit_transform(text)\n\nmodel_st = SentenceTransformer('stsb-distilbert-base')\nembeddings = model_st.encode(text)\nout = sklearn.manifold.TSNE(n_components=2).fit_transform(embeddings)","fbbc145c":"topic_words = ['-1: outlier']\nfor i in range(len(set(topics))-1):\n  tpc = model.get_topic(i)[:7]\n  words = [x[0] for x in tpc]\n  tw = ' '.join([str(i) + ':'] + words)\n  topic_words.append(tw)\n\nexp_topics = [topic_words[x+1] for x in topics]\n\nclrs = random.sample(Turbo256, len(set(topics)))\ncolor_map = bmo.CategoricalColorMapper(factors=topic_words, palette=clrs)","a0f09886":"list_x = out[:,0]\nlist_y = out[:,1]\ndesc = text\n\nsource = ColumnDataSource(data=dict(x=list_x, y=list_y, desc=desc, topic=exp_topics))\nhover = HoverTool(tooltips=[\n    (\"index\", \"$index\"),\n    ('desc', '@desc'),\n    ('topic', '@topic')\n])\n\np = figure(plot_width=800, plot_height=800, tools=[hover], title=\"Crash Summary Clusters\")\np.circle('x', 'y', size=10, source=source,\n         fill_color=transform('topic', color_map),\n         # legend='topic'\n)\n# p.legend.location = \"top_left\"\n# p.legend.click_policy=\"hide\"\n\nbpl.show(p)","11340e9d":"topic_df = model.get_topic_freq()\n\ndef get_keywords(i):\n    if i == -1: return 'outlier'\n    tpc = model.get_topic(i)[:7]\n    words = [x[0] for x in tpc]\n    tw = ' '.join(words)\n    return tw\n\ntopic_df['keywords'] = topic_df['Topic'].apply(get_keywords)\n\ntopic_df","c1ee5399":"model.visualize_topics()","386c00dc":"Let's list topic frequencies and their keywords","b0d3b291":"# Airplane Crashes Dataset Since 1908\n\nThere are 5,008 accidents recorded since 1908 and 17 features in this dataset.\nIt contains crash date, route, flight no, aircraft type, operator, military\/civilan, on board passenger (crew+passengers), how many died in crash and summary which contains brief description of the accident and cause if known. <br>\n\n\nI will try to cluster summary data using BERTopic which is a topic modeling technique that leverages transformers.\n\n\n### Database Format\nDate: Date of accident, in the format - January 01, 2001<br>\nTime: Local time, in 24 hr. format unless otherwise specified<br>\nOperator: Airline or operator of the aircraft<br>\nFlight #: Flight number assigned by the aircraft operator<br>\nRoute: Complete or partial route flown prior to the accident<br>\nAC Type: Aircraft type<br>\nReg: ICAO registration of the aircraft<br>\ncn \/ ln: Construction or serial number \/ Line or fuselage number<br>\nAboard: Total aboard (passengers \/ crew)<br>\nPassengers aboard : Passengers abroad<br>\nCrew aboard : Crew abroad<br>\nAll fatalities : Total fatalities aboard (passengers \/ crew)<br>\nPassenger fatalities: Total Passenger fatalities<br>\nCrew fatalities: Total Crew fatalities<br>\nGround: Total killed on the ground<br>\nSummary: Brief description of the accident and cause if known<br>\n\n\n![](https:\/\/i.imgur.com\/tHiK3qb.png)","39239785":"# Visualize Topics with LDAvis\nWe can visualize the topics that were generated in a way very similar to LDAvis."}}