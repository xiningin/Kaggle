{"cell_type":{"c736c5c9":"code","d491449a":"code","78c84646":"code","c4aaba3c":"code","242a53d7":"code","3b939de2":"code","2e7e1f71":"code","e2153b05":"code","cb1844d2":"markdown","133d5166":"markdown","b26a6d87":"markdown","0fc4c6e7":"markdown","ad99eab2":"markdown","2362dffe":"markdown","5b123dff":"markdown"},"source":{"c736c5c9":"import tensorflow as tf\nprint('TensorFlow Version :',tf.__version__)\nimport numpy as np\nprint('Numpy Version :',np.__version__)\nimport sys\nprint('Python interpreter and version:',sys.version)","d491449a":"string = tf.Variable(\"this is a string\", tf.string) \nnumber = tf.Variable(324, tf.int16)\nfloating = tf.Variable(3.567, tf.float64)","78c84646":"rank1_tensor = tf.Variable([\"Test\"], tf.string) \nrank2_tensor = tf.Variable([[\"test\", \"ok\"], [\"test\", \"yes\"]], tf.string)","c4aaba3c":"tf.rank(rank2_tensor)","242a53d7":"rank2_tensor.shape","3b939de2":"tensor1 = tf.ones([1,2,3])  # tf.ones() creates a shape [1,2,3] tensor full of ones\ntensor2 = tf.reshape(tensor1, [2,3,1])  # reshape existing data to shape [2,3,1]\ntensor3 = tf.reshape(tensor2, [3, -1])  # -1 tells the tensor to calculate the size of the dimension in that place\n                                        # this will reshape the tensor to [3,2]\n                                                                             \n# The numer of elements in the reshaped tensor MUST match the number in the original\nprint(tensor1)\nprint(tensor2)\nprint(tensor3)\n# Notice the changes in shape","2e7e1f71":"# Creating a 2D tensor\nmatrix = [[1,2,3,4,5],\n          [6,7,8,9,10],\n          [11,12,13,14,15],\n          [16,17,18,19,20]]\n\ntensor = tf.Variable(matrix, dtype=tf.int32) \nprint(tf.rank(tensor))\nprint(tensor.shape)","e2153b05":"# Now lets select some different rows and columns from our tensor\n\nthree = tensor[0,2]  # selects the 3rd element from the 1st row\nprint(three)  # -> 3\n\nrow1 = tensor[0]  # selects the first row\nprint(row1)\n\ncolumn1 = tensor[:, 0]  # selects the first column\nprint(column1)\n\nrow_2_and_4 = tensor[1::2]  # selects second and fourth row\nprint(row_2_and_4)\n\ncolumn_1_in_row_2_and_3 = tensor[1:3, 0]\nprint(column_1_in_row_2_and_3)\n","cb1844d2":" **Creating Tensors**","133d5166":" **Rank\/Degree of Tensors**","b26a6d87":"**Changing Shape**","0fc4c6e7":"# # **Learning TensorFlow**\n\n**Importing TensorFlow**","ad99eab2":"**Types of Tensors**\n* Variable\n* Constant\n* Placeholder\n* SparseTensor","2362dffe":"**Slicing Tensors**","5b123dff":"**Shape of Tensors**"}}