{"cell_type":{"c790f448":"code","414befc1":"code","3620fe29":"code","f9287d54":"code","f7f06bd5":"code","fad17b2d":"code","edd774e1":"code","b1e4c27a":"code","804791ab":"code","2e72e5f0":"code","55c8b44e":"code","fd2f721d":"code","a76bb86e":"code","6961b68d":"code","e522f476":"code","7dc29fe5":"code","b81305c9":"code","1fa3d76d":"code","f9d56743":"code","5df4e9cb":"code","73dd9601":"code","beb5dd6b":"code","1bd32dc2":"code","b4eca170":"code","c550facf":"code","0cf609af":"code","b2edee67":"markdown","113cf72c":"markdown","01050fc1":"markdown","accad506":"markdown","9a0f9807":"markdown","e3f77450":"markdown","d6243670":"markdown","a1566d9a":"markdown","05f688b2":"markdown","9fd66bb2":"markdown","033b4ab8":"markdown","5e09c83c":"markdown","48f5c0b5":"markdown","81ebdd0d":"markdown","6c61f5ee":"markdown","a327d661":"markdown","f39b2dbd":"markdown","63766098":"markdown","6c70bd6f":"markdown","3322b0c7":"markdown","ba8658f4":"markdown","e91cddd3":"markdown","cd549d4f":"markdown","846b22a7":"markdown","458c827c":"markdown","97754493":"markdown","36f38db2":"markdown","a8f3a374":"markdown","6839c774":"markdown"},"source":{"c790f448":"#loading libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport missingno as msno\npd.pandas.set_option('display.max_columns',None)\npd.pandas.set_option('display.max_rows',None)","414befc1":"#loading data\ndataset=pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/train.csv')","3620fe29":"df=dataset.copy()","f9287d54":"#number of rows and columns\ndf.shape","f7f06bd5":"df.describe().T","fad17b2d":"#summary of a dataframe\ndf.info()","edd774e1":"#creating list with feature belonging to respective datatype\n\nnumerical_feature=[feature for feature in df.columns if df[feature].dtype !='object']\nprint('There are {} numerical features.'.format(len(numerical_feature)))\n\nyear=[feature for feature in numerical_feature if \"Yr\" in feature or \"Year\" in feature]\n\ndiscrete_feature=[feature for feature in numerical_feature if (df[feature].nunique())<25 and feature not in year+['Id']]\nprint('There are {} are discrete features'.format(len(discrete_feature)) )\n\ncontinuous_feature=[feature for feature in numerical_feature if feature not in discrete_feature and feature not in year+['Id']]\nprint('There are {} are continuous features'.format(len(continuous_feature)) )\n\ncat_feature=[feature for feature in df.columns if df[feature].dtypes=='object']\nprint('There are {} categorical features.'.format(len(cat_feature)))","b1e4c27a":"df['SalePrice'].describe()","804791ab":"null_feature=[]\nnull_values=[]\n\nfor feature in df.columns:\n    if df[feature].isnull().sum()>=1:\n        null_feature.append(feature)\n        null_values.append(df[feature].isnull().sum())\n        \ndf_missing={'Feature':null_feature,'No.of missing values':null_values}\ndata_missing=pd.DataFrame(df_missing)\n\nplt.figure(figsize=(10,6)) \nsns.barplot(x='Feature',y='No.of missing values',data=data_missing,palette='Set1')\nplt.xticks(rotation=90)\nplt.title(\"No. of missing values\")\nsns.set(style=\"whitegrid\")","2e72e5f0":"msno.heatmap(df)","55c8b44e":"df[continuous_feature].hist(bins=25, figsize=(22,8), layout=(2,8));","fd2f721d":"feat=[]\nfor feature in continuous_feature:\n    data=df.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        feat.append(feature)\nnp.log(data[feat]).hist(bins=25, figsize=(20,5), layout=(1,5),color='green');","a76bb86e":"sns.pairplot(np.log(df[feat]))","6961b68d":"corr=np.log(df[continuous_feature]).corr()\ncorr['SalePrice'].sort_values(ascending=False)","e522f476":"def outlier_function(df, col_name):\n    first_quartile = np.percentile(np.array(df[col_name].tolist()), 25)\n    third_quartile = np.percentile(np.array(df[col_name].tolist()), 75)\n    IQR = third_quartile - first_quartile\n                      \n    upper_limit = third_quartile+(3*IQR)\n    lower_limit = first_quartile-(3*IQR)\n    outlier_count = 0\n                      \n    for value in df[col_name].tolist():\n        if (value < lower_limit) | (value > upper_limit):\n            outlier_count +=1\n    return lower_limit, upper_limit, outlier_count\nfor feature in continuous_feature:\n    if outlier_function(df,feature)[2] > 1:\n        print('{}: {} outliers'.format(feature,outlier_function(df,feature)[2]))","7dc29fe5":"corr=df[continuous_feature].corr()\nsns.heatmap(corr)","b81305c9":"sns.pairplot(df[year])","1fa3d76d":"for feature in discrete_feature:\n    if outlier_function(df,feature)[2] > 1:\n        print('{}: {} outliers'.format(feature,outlier_function(df,feature)[2]))","f9d56743":"f = plt.figure(figsize=(20,20))\nfor i in range(len(discrete_feature)):\n    f.add_subplot(6, 3, i+1)\n    g=df.groupby([discrete_feature[i]])['SalePrice'].median().sort_values()\n    ax=sns.boxplot(x=discrete_feature[i],y='SalePrice',data=df,order=list(g.index),palette='Blues')\n    ax=sns.stripplot(x=discrete_feature[i],y='SalePrice',data=df,color='red',jitter=0.2,size=2.5)\n    plt.title(discrete_feature[i],fontsize=15)\n\nplt.tight_layout()\nplt.show()","5df4e9cb":"corr=df[discrete_feature].corr()\nsns.heatmap(corr)\nplt.title('Correlation among discrete variable');","73dd9601":"total_cat=[]\nfor feature in cat_feature:\n        total_cat.append(df[feature].nunique())\n        \ntotal_categories={'Feature':cat_feature,'No.of categories':total_cat}\ntotal_categories=pd.DataFrame(total_categories)\n\nplt.figure(figsize=(14,6)) \nsns.barplot(x='Feature',y='No.of categories',data=total_categories,palette='Set1')\nplt.xticks(rotation=90) \nplt.title(\"Number of Categories per feature\", fontsize= 15)\nsns.set(style=\"whitegrid\")","beb5dd6b":"plt.figure(figsize=(20,6))\ng=df.groupby(['Neighborhood'])['SalePrice'].median().sort_values()\nsns.boxplot(x='Neighborhood', y='SalePrice', data=df,order=list(g.index),palette='cubehelix')\nsns.stripplot(x='Neighborhood', y='SalePrice', data=df,color='orange',jitter=0.2,size=2.5)\nplt.title('Sale Price with respect to Neighbourhood',fontsize=20);","1bd32dc2":"plt.figure(figsize=(18,6))\ng=df.groupby(['Exterior1st'])['SalePrice'].median().sort_values()\nsns.boxplot(x='Exterior1st', y='SalePrice', data=df,order=list(g.index),palette='cubehelix')\nsns.stripplot(x='Exterior1st', y='SalePrice', data=df,color='orange',jitter=0.2,size=2.5)\nplt.title('Sale Price with respect to Exterior covering on house',fontsize=20);","b4eca170":"plt.figure(figsize=(18,6))\ng=df.groupby(['Exterior2nd'])['SalePrice'].median().sort_values()\nsns.boxplot(x='Exterior2nd', y='SalePrice', data=df,order=list(g.index),palette='cubehelix')\nsns.stripplot(x='Exterior2nd', y='SalePrice', data=df,color='orange',jitter=0.2,size=2.5)\nplt.title('Sale Price with respect to Exterior covering on house (if more than one material)',fontsize=20);","c550facf":"cat_f=cat_feature.copy()\ncat_f.remove('Neighborhood')\ncat_f.remove('Exterior1st')\ncat_f.remove('Exterior2nd')","0cf609af":"f = plt.figure(figsize=(20,40))\nfor i in range(len(cat_f)):\n    f.add_subplot(14, 3, i+1)\n    g=df.groupby([cat_f[i]])['SalePrice'].median().sort_values()\n    ax=sns.violinplot(x=cat_f[i],y='SalePrice',data=df,order=list(g.index),palette='BuGn_r')\n    ax=sns.stripplot(x=cat_f[i],y='SalePrice',data=df,jitter=0.1,size=2.5,color='magenta')\n    plt.title(cat_f[i],fontsize=15)\n\nplt.tight_layout()\nplt.show()","b2edee67":"We can observe that features assciated with garage has value of 1 indicating that if one of the garage feature is present others are also most likely to be present.\n\nIn the centre we can see values nearing to 0 inidicating that Garage features has no dependency on missing values of basement features.","113cf72c":"Most number of categories are present within  Neighbourhood followed by Exterior2nd and Exterior 1st. We shall take a closer look at these three features first followed by rest of the 40 features.\n\nAgain we will make use of box plots,violin plots paired with strip plots and shall consider median instead of mean to avoid plots getting affected by outliers if any .","01050fc1":"Number of data points in data: 1460\n\nNumber of features in data: 81","accad506":"Nullity correlation heatmap below will help us identify whether missing value of one feature affects missing values of other value. It ranges from -1 to 1 with 1 indicating that if one variable is present other is likely to be present, 0 indicating no dependence between the occurrence of missing values of two variables.\n\nIf one variable present and other one likely to be missing then value will be closer to -1.","9a0f9807":"###  II.Discrete features","e3f77450":"### Desriptive Statistics","d6243670":"### Target variable ","a1566d9a":"We can observe that skew in the distribution has considerably reduced.","05f688b2":"Dataset comprise of numeric as well well as non numeric object datatypes.\n\nWe shall separate them into their respective data type.","9fd66bb2":"GarageYrBlt is highly correlated with YearBuilt.","033b4ab8":"#### Distribution of observations in continuous numerical features","5e09c83c":"#### Discrete variable with reference to Sale price","48f5c0b5":"Highest selling houses with price ranging from 100000-400000 has exterior covering of Vinyl Siding.\n","81ebdd0d":"We can see that distributions of observations of numeric continuous features are highly skewed. Thus to reduce the skew we shall log transform these values and then see their correlation with respect to each other","6c61f5ee":"We can clearly observe prominent linear relationship between Sale price and Overall quality. It is obvious that houses with over all better quality will be more expensive. Houses with Overall quality of 5-8 are more likely to be considered.\n\nPrice in regard to overall condition of houses seems to be less important as most of the data points are centred at overall condition of 5.\n\nGarage cars also seem to have linear relation with our target variable.\n","a327d661":"Considering MS zoning, Commercial ones have lowest price.\n\nGarage location, more prefenrence is given to attached garage followed by Detached and lastly Builtin. While considering price point, houses with builtin garage are most expensive followed by attached. Houses with carport ones are cheapest.\n\nHouse with Land Contour ,Lvl and utilities with AllPub seems expensive and high selling. Most houses have paved roads.\n\nMost selling houses are present where proximity to various atttributes in normal.\n\nSale price range considering masonry veneer is almost similar.\n\nHouses with foundation of PConc and CBlock are expensive compared to houses with other foundation types.\n\nHighest selling houses has roof type and building type of gable and single family detached respectively.","f39b2dbd":"#### Distribution of observations in continuous numerical features (log transformed)","63766098":"Almost all of the features considered in the pairplot seem to have positive correlation with each other.\n\nLet us now see highly correlated features with reference to Sale Price.","6c70bd6f":"GrLivArea,GarageArea show strong correlation with Sale Price. ","3322b0c7":"As we can see there are outliers in discrete features. Hence while plotting these variables against target variable, Sale Price we shall group this feature by median and not meanas mean will largely get affected by outliers.","ba8658f4":"### Categorical features","e91cddd3":"Now, we shall take a look at categorical features. There are altogether 43 categorical features. First we will see number of categories per feature in the bar plot below.","cd549d4f":"### I.Continuous features","846b22a7":"We shall look at distribution of target variable later","458c827c":"Large number of missing values are present in features namely Alley, PoolQC, Fence and Misc Features","97754493":"We shall now take look at rest of the categorical features.","36f38db2":"NorthRidge, Northridge Heights comprise of moderate to hmost expensive houses.\n\nHighest selling houses are in NAmes with price ranging from 100000-200000.\n\nBriarDale has cheapest houses.","a8f3a374":"## Numerical features","6839c774":"We shall use strip plot along with boxplot as box plot alone will not give us clear cut idea about distribution of data points within the box thus increasing chances of losing some relevant interesting patterns among two features."}}