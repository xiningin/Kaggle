{"cell_type":{"db0fc756":"code","b6a52a80":"code","a4bd8e5e":"code","3e26b3a0":"code","9b9ff596":"code","37e557a9":"code","b6bd2b5f":"code","3d1e8604":"code","a6bff99d":"code","9aa0e3b5":"code","1dfb4e7b":"code","36e8bafe":"code","41fc731f":"code","863767e4":"code","24926908":"code","1eeca74d":"code","43962537":"code","49b0c372":"code","35e0502d":"code","faa07364":"code","c91c7f85":"code","b1a84531":"code","05faa970":"code","a6c43ce0":"code","32385620":"markdown","da607a11":"markdown","11fcdffa":"markdown","08526ef6":"markdown","33f9ff09":"markdown","a9b17b8a":"markdown","c2e76d5b":"markdown","abf2ff04":"markdown","fb50712b":"markdown","8e7122fe":"markdown","b7179ba8":"markdown","8c3c441f":"markdown","44e10106":"markdown","a33e34aa":"markdown","121d16fb":"markdown","49874165":"markdown","9ae17ea9":"markdown","57646689":"markdown","9760d065":"markdown"},"source":{"db0fc756":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas import DataFrame as show \nfrom os import path\nfrom scipy.misc import imread\nimport random","b6a52a80":"df = pd.read_csv(r\"..\/input\/movie_metadata.csv\")","a4bd8e5e":"df.head(5)","3e26b3a0":"df.columns","9b9ff596":"plt.figure(figsize=(20,10))\nprint(df.isnull().sum())\nplt.title('Checking for NaN values')\nsns.heatmap(df.isnull(),annot=False,yticklabels=False,cbar=False,cmap='hot')","37e557a9":"plt.figure(figsize=(15,10))\nplt.subplots_adjust(hspace = .2)\nplt.subplot(2,4,1)\nsns.heatmap(df['gross'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,2)\nsns.heatmap(df['budget'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,3)\nsns.heatmap(df['content_rating'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,4)\nsns.heatmap(df['aspect_ratio'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,5)\nsns.heatmap(df['duration'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.subplot(2,4,6)\nsns.heatmap(df['director_name'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.subplot(2,4,7)\nsns.heatmap(df['color'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.subplot(2,4,8)\nsns.heatmap(df['aspect_ratio'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.plot()\nplt.plot()","b6bd2b5f":"df['color'] = df['color'].fillna(' Black and White')\ndf['duration'] = df['duration'].fillna(df['duration'].mean())\ndf['budget'] = df['budget'].fillna(df['budget'].mean())\ndf['gross'] = df['gross'].fillna(df['gross'].mean())\ndf['director_name'] = df['director_name'].fillna('unknown')\ndf['content_rating'] = df['content_rating'].fillna('PG-13')\ndf['aspect_ratio'] = df['aspect_ratio'].fillna(df['aspect_ratio'].mean())\ndf['title_year'] = df['title_year'].fillna(0)\ndf['country'] = df['country'].fillna('Not defined')\ndf['actor_1_facebook_likes'] = df['actor_1_facebook_likes'].fillna(0)\ndf['actor_2_facebook_likes'] = df['actor_2_facebook_likes'].fillna(0)\ndf['actor_3_facebook_likes'] = df['actor_3_facebook_likes'].fillna(0)\ndf['director_facebook_likes'] = df['director_facebook_likes'].fillna(0)\ndf['actor_1_name'] = df['actor_1_name'].fillna('Not defined')\ndf['actor_2_name'] = df['actor_2_name'].fillna('Not defined')\ndf['actor_3_name'] = df['actor_3_name'].fillna('Not defined')\ndf['language'] = df['language'].fillna('Not defined')\ndf['num_critic_for_reviews'] = df['num_critic_for_reviews'].fillna(df['num_critic_for_reviews'].mean())\nplt.figure(figsize=(15,10))\nplt.subplots_adjust(hspace = .2)\nplt.subplot(2,4,1)\nsns.heatmap(df['gross'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,2)\nsns.heatmap(df['budget'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,3)\nsns.heatmap(df['content_rating'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,4)\nsns.heatmap(df['aspect_ratio'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='plasma')\nplt.subplot(2,4,5)\nsns.heatmap(df['duration'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.subplot(2,4,6)\nsns.heatmap(df['director_name'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.subplot(2,4,7)\nsns.heatmap(df['color'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.subplot(2,4,8)\nsns.heatmap(df['aspect_ratio'].isnull().to_frame(),annot=False,yticklabels=False,cbar=False,cmap='viridis')\nplt.plot()\nplt.plot()","3d1e8604":"df.drop(labels='num_user_for_reviews',inplace = True,axis=1)","a6bff99d":"df.drop(labels='plot_keywords',inplace = True,axis=1)","9aa0e3b5":"df.drop(labels='facenumber_in_poster',inplace = True,axis=1)","1dfb4e7b":"plt.figure(figsize=(10,5))\nplt.title('Checking for NaN values')\nsns.heatmap(df.isnull(),annot=False,yticklabels=False,cbar=False,cmap='hot')","36e8bafe":"Imdb_Sc = df.sort_values(by=['imdb_score'],ascending=False).head(20)\nplt.figure(figsize=(15,12))\nplt.title('Top Movies according to IMDb',fontsize=20)\nplt.xlabel('IMDb Score',fontsize=18)\nplt.ylabel('Movie Title',fontsize=18)\nbar = sns.barplot(y='movie_title',x='imdb_score',data=Imdb_Sc,palette='spring')","41fc731f":"plt.figure(figsize=(15,4))\nplt.subplots_adjust(hspace = .2)\nplt.subplot(1,2,1)\nbar = df['country'].value_counts().head(10).plot(kind = 'bar',cmap='summer')\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70,fontsize=14)\nplt.subplot(1,2,2)\ndf['country'].value_counts().head(10).plot(kind = 'pie',cmap='jet')\nplt.show()","863767e4":"duration_df = df.sort_values(by=['duration'],ascending=False).head(10)\nplt.figure(figsize=(20,8))\nplt.title('Most Lenthy Movies',fontsize=20)\nplt.xlabel('Movie Title',fontsize=18)\nplt.ylabel('Length ( in Minutes )',fontsize=18)\nbar = sns.barplot(x='movie_title',y='duration',data=duration_df,palette='hsv')\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70,fontsize=18)\nplt.show()","24926908":"temp_df = df[df['director_name'] != 'unknown']","1eeca74d":"plt.figure(figsize = (15,6))\nplt.title('Movies directed by most of the Directors')\nbar = temp_df['director_name'].value_counts().head(20).plot(kind = 'bar')\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70,fontsize=14)","43962537":"plt.figure(figsize=(15,4))\nplt.subplots_adjust(hspace = .2)\nplt.subplot(1,2,1)\nplt.title('Actor 1')\nplt.xlabel('Actor 1 name ')\nplt.xticks(np.arange(1, 81, 10))\ndf['actor_1_name'].value_counts().head(10).plot(kind = 'bar',colors = ['purple','indigo','skyblue','darkgreen'])\nplt.subplot(1,2,2)\nplt.title('Actor 2')\nplt.xlabel('Actor 2 name ')\ndf['actor_2_name'].value_counts().head(10).plot(kind = 'bar',colors = ['skyblue','darkgreen','purple','indigo'])\nplt.show()","49b0c372":"Indian = df[df['country'] == 'India' ]\nplt.figure(figsize=(15,6))\nplt.title('Top Indian Directors',fontsize=14)\nplt.xlabel('Names ',fontsize=14)\nbar=Indian['director_name'].value_counts().head(10).plot(kind = 'bar')\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70,fontsize=14)","35e0502d":"plt.figure(figsize = (15,6))\ntemp_df = df[df['language'] != 'Not defined']\nshow(temp_df['language'].value_counts().head(10))","faa07364":"plt.figure(figsize=(10,6))\nbar = temp_df['language'].value_counts().head(10).plot(kind = 'bar',colors = ['skyblue','darkgreen','purple','indigo','darkred'])\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70,fontsize=14)","c91c7f85":"hindi_df = df[df['language'] == 'Hindi']\nshow(hindi_df['movie_title'])","b1a84531":"Imdb_Sc = hindi_df.sort_values(by=['imdb_score'],ascending=False).head(10)\nplt.figure(figsize=(15,6))\nplt.title('Top Movies according to IMDb',fontsize=20)\nplt.xlabel('IMDb Score',fontsize=18)\nplt.ylabel('Movie Title',fontsize=18)\nbar = sns.barplot(x='movie_title',y='imdb_score',data=Imdb_Sc,palette='hsv')\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70,fontsize=14)","05faa970":"like = hindi_df.sort_values(by=['movie_facebook_likes'],ascending=False).head(10)\nplt.figure(figsize=(15,6))\nplt.title('Top Movies according to people',fontsize=20)\nplt.xlabel('Likes',fontsize=18)\nplt.ylabel('Movie Title',fontsize=18)\nbar = sns.barplot(x='movie_title',y='movie_facebook_likes',data=like,palette='gnuplot2')\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70,fontsize=14)","a6c43ce0":"plt.figure(figsize=(15,5))\nImdb_Sc = df.sort_values(by=['movie_facebook_likes'],ascending=False).head(20)\nbar = sns.barplot(x='movie_title',y='movie_facebook_likes',data=Imdb_Sc,palette='hsv')\nbar.set_xticklabels(bar.get_xticklabels(),rotation=70)","32385620":"#### Checking for NaN values","da607a11":"## Indepth Analytics (Indian Movies)","11fcdffa":"### Top Movies According to People","08526ef6":"#### REVENUE BASED ON YEAR","33f9ff09":"#### Most lenghty Movies","a9b17b8a":"#### Top Movies according to movies facebook likes ","c2e76d5b":"### Importing Libraries ","abf2ff04":"### Indian Movies","fb50712b":"#### Most occuring countries ","8e7122fe":"#### Top Indian Movies according to IMDb","b7179ba8":"#### Top Indian Directors","8c3c441f":"#### Droping Unwanted Columns","44e10106":"#### Fetures that contain higher NaN values","a33e34aa":"#### Directors","121d16fb":"#### Importing our Data","49874165":"#### Top Movies according to IMDb Score","9ae17ea9":"#### Actors","57646689":"#### Languages of Movies","9760d065":"#### Filling NaN values with Valid Entity "}}