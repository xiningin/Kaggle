{"cell_type":{"860434ac":"code","7e617294":"code","825ac5df":"code","3f9e33a0":"code","6e2156f2":"code","1615d39c":"code","7c4d1361":"code","6ac0bfdf":"code","0a06344e":"code","3dd8f6f9":"code","582999dc":"code","40ed635d":"code","adf2f2cc":"code","95bda494":"code","48106f91":"code","ecee7237":"code","9e9e10c3":"code","9bb5a1eb":"code","5c227635":"code","61d1869d":"code","2e16c064":"code","17823f52":"code","fb7ad20d":"code","f6ad1777":"code","2cdca431":"code","04a50302":"code","2a798fe5":"code","bb3cd364":"code","f118fbf5":"code","9f90c1f6":"code","4a87a4ca":"code","b043fef9":"markdown","e228cc01":"markdown","10dcf316":"markdown","ab0567a9":"markdown","e0f627a6":"markdown","42bc291b":"markdown","1531dae1":"markdown","8622ae97":"markdown","420277c8":"markdown","f67993ae":"markdown","fc91ae41":"markdown","662e39d6":"markdown","44fb1997":"markdown","7727daad":"markdown","d92aea4d":"markdown","0b9b61ff":"markdown","65779578":"markdown","682e1761":"markdown","f925eb78":"markdown","18f73e19":"markdown","370477b2":"markdown","68bdce8d":"markdown","e16f79df":"markdown","2fa9d7b2":"markdown"},"source":{"860434ac":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate","7e617294":"# bs: batch size\nbs = 64","825ac5df":"# download dataset\npath = untar_data(URLs.PETS)\n# lihat path\npath","3f9e33a0":"# lihat apa saja yang ada di path\npath.ls()","6e2156f2":"path_anno = path\/'annotations'\npath_img = path\/'images'","1615d39c":"fnames = get_image_files(path_img)\nfnames[:5]","7c4d1361":"# set random seed agar dapat diulangi kedepannya\nnp.random.seed(2)\npat = r'\/([^\/]+)_\\d+.jpg$'","6ac0bfdf":"data = ImageDataBunch.from_name_re(path_img, \n                                   fnames, \n                                   pat, \n                                   ds_tfms=get_transforms(), \n                                   size=224, \n                                   bs=bs).normalize(imagenet_stats)","0a06344e":"data.show_batch(rows=3, figsize=(7, 6))","3dd8f6f9":"print(data.c) # banyaknya kelas\nprint(data.classes) # nama nama kelas","582999dc":"learn = cnn_learner(data, models.resnet34, metrics=error_rate, model_dir='\/tmp\/models')","40ed635d":"learn.model","adf2f2cc":"learn.fit_one_cycle(4) # 4 epoch","95bda494":"# save model yang telah dilatih\nlearn.save('stage-1')","48106f91":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses, idxs = interp.top_losses()\n\nlen(data.valid_ds)==len(losses)==len(idxs)","ecee7237":"# plot gambar apa saja yang memiliki loss yang besar\ninterp.plot_top_losses(9, figsize=(15, 11))","9e9e10c3":"# plot confusion matrixnya\ninterp.plot_confusion_matrix(figsize=(12, 12), dpi=60)","9bb5a1eb":"# lihat klasifikasi apa yang paling banyak yang salah\ninterp.most_confused(min_val=2)","5c227635":"learn.unfreeze()","61d1869d":"learn.fit_one_cycle(1)","2e16c064":"# load model\nlearn.load('stage-1')\nlearn.lr_find()","17823f52":"# lihat hasil lr finder\nlearn.recorder.plot()","fb7ad20d":"learn.unfreeze()\nlearn.fit_one_cycle(2, max_lr=slice(1e-6, 1e-4))","f6ad1777":"data = ImageDataBunch.from_name_re(path_img, \n                                   fnames, \n                                   pat, \n                                   ds_tfms=get_transforms(), \n                                   size=299, \n                                   bs=bs\/\/2).normalize(imagenet_stats)","2cdca431":"learn = cnn_learner(data, models.resnet50, metrics=[error_rate, accuracy], model_dir='\/tmp\/models')","04a50302":"# panggil lr finder\nlearn.lr_find()\nlearn.recorder.plot()","2a798fe5":"learn.fit_one_cycle(8)","bb3cd364":"learn.save('stage-1-50')\nlearn.unfreeze()","f118fbf5":"learn.lr_find()\nlearn.recorder.plot()","9f90c1f6":"learn.fit_one_cycle(3, max_lr=slice(1e-5, 1e-4))","4a87a4ca":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.most_confused(min_val=2)","b043fef9":"Kita akan menggunakan sebuah pretrained model resnet34. Resnet43 memiliki 34 layer dan menggunakan _residual block_. Model ini telah dilatih menggunakan dataset imagenet yang dapat mengklasifikasikan 1000 kelas.","e228cc01":"Hanya dengan empat _epoch_ kita bisa memperoleh error yang sangat kecil sebesar 0.065 atau akurasi 1-0.065 = 93.5%. Selannjutnya save model.","10dcf316":"Kelas `ImageDataBunch` merupakan sebuah kelas yang bertujuan untuk mengumpulkan dataset dan melakukan berbagai macam lainnya. Selengkapnya silahkan buka dokumentasi fastai. `from_name_re` digunakan karena kita ingin mengekstrak label dari dataset menggunakan _regular expression (regex)_.\n\nArti tiap parameternya sebagai berikut:\n- `path_img` merupakan path gambar\n- `fnames` merupakan kumpulan nama file\n- `pat` merupakan perintah regex kita\n- `ds_tfms` merupakan transformasi gambar\n- `size` merupakan ukuran input gambar\n- `bs` merupakan ukuran batch size\n\nDataset kemudian di normalisasi menggunakan nilai rataan dan standar deviasi dari imagenet.","ab0567a9":"Perhatikan bahwa di Kaggle saya menambahkan parameter `model_dir`. Parameter tersebut bertujuan agar kita dapat menyimpan model. Kaggle sendiri tidak bisa menjadi tempat penyimpanan maka dari itu kita harus menggunakan parameter tersebut. ","e0f627a6":"Setelah itu, lihat interpretasi model.","42bc291b":"Akurasi model meningkat hingga 93.9%.","1531dae1":"Wow! Akurasi model turun drastis. Error kita sekarang 0.12 yang awalnya 0.065. Hal ini terjadi karena kita melatih pretrained model dengan learning rate yang sama. Padahal untuk layer yang awal, kita tidak usah melakukan perubahan yang berarti. Untuk mengatasi hal ini, pertama mari kita load model kita yang telah jadi lalu mencari learning rate dan melatih ulang model kita menggunakan learning rate yang telah kita peroleh.","8622ae97":"Ambil LR sebelum terjadi peningkatan _loss_","420277c8":"Sekarang mari kita unfreeze pretrained model kita. Sehingga dia akan belajar atau melakukan tuning sedikit agar kita dapat meningkatkan akurasi model kita.","f67993ae":"Untuk saat ini kita tidak menggunakan `max_lr` karena kita tidak melakukan _unfreezing model_. ","fc91ae41":"Terlihat penurunan model kita yang awalnya 0.065 menjadi 0.066. Hal ini menandakan _unfreeze layer_ akan membuat model semakin bagus atau agak jelek sedikit. Ini diserahkan ke pembaca untuk melakukan eksperiment berulang kali.\n\nDari tadi kita menggunakan resnet34. Sekarang mari gunakan resnet50 yang memiliki 50 layer. Karena resnet50 memiliki 50 layer maka resnet50 akan memakan banyak memori. Maka dari itu, mari turunkan nilai _batch size_ dua kali lipat dari sebelumnya. Kita menggunakan dua metrics yaitu akurasi dan nilai eror.","662e39d6":"Lakukan _learning rate finder_ dan tentukan berapa nilai _learning rate_ yang akan digunakan. Ingat, kita tidak ingin menggunakan LR yang nilainya sama. Hal ini karena layer awal model hanya mengenali sudut, garis, dll. Sementara itu untuk layer terakhir kita ingin untuk lebih diupdate.","44fb1997":"Dari grafik di atas, setelah _learning rate_ 1e-03 _loss_ langsung naik. Maka dari itu pilih _learning rate_ sebelum itu. Biasanya akan dipilih 10x lebih rendah dari batas sebagai titik akhir dan 100x dari titik akhir sebagai titik awal.","7727daad":"Data yang digunakan ialah __Oxford-IIIT Pet Dataset__ yang terdiri dari 12 jenis kucing dan 25 jenis anjing. Dari paper mereka di tahun 2012, akurasi tertinggi dari model ialah 59.21%.","d92aea4d":"Nama file memiliki pola. Polanya yaitu jenis lalu diikuti garis bawah lalu nomor dan ekstensi file. Kita dapat mengekstrak\/mengambil jenis anjing\/kucing menggunakan _regular expression_ python. Selengkapnya [cek di sini](https:\/\/docs.python.org\/3.6\/library\/re.html).\n\nNama jenis anjing\/kucing ini selanjutnya kita namakan `label`.","0b9b61ff":"Selanjutnya kita menggunakan __One Cycle Policy__ yang merupakan metode _hyperparameter tuning_ dengan merubah nilai _learning rate_ sehingga dapat melakukan lompatan jauh dan mencapai _flat local minima_. Selengkapnya [baca di sini](https:\/\/sgugger.github.io\/the-1cycle-policy.html)","65779578":"# Materi 1 - Klasifikasi Binatang\n\nDi materi ini kita akan membuat sebuah _classifier_ yang dapat mengklasifikasikan binatang. Kita akan menggunakan _library_ dari fast.ai  dan beberapa _library_ terkenal lainnya.\n\n```python\n%reload_ext autoreload\n%autoreload 2\n```\nadalah _magic commands_ dari jupyter notebook. Bertujuan untuk melakukan _load_ modul sebelum dieksekusi. Lebih lanjutnya silahkan baca [ini](https:\/\/ipython.org\/ipython-doc\/3\/config\/extensions\/autoreload.html).\n\nPerlu diperhatikan fast.ai tidak mengikuti PEP8 dalam materinya. Sehingga akan ada beberapa kode yang _anti pattern_. Salah satu contohnya ialah _import module_.","682e1761":"Gunakan batch size 64. Jika terjadi kasus GPU out of memory maka turunya batch size menjadi 32 lalu 16 lalu 8.","f925eb78":"> The purpose of this notebook and series is to teach Indonesian people about fast.ai deep learning course speficically for those who can't understand English very well.","18f73e19":"Fungsi `get_image_files` dari fastai bertujuan untuk mengambil image file.","370477b2":"Wow! Akurasi kita meningkat hingga 93.7%. Sekarang mari lakukan _unfreeze model_. ","68bdce8d":"Selanjutnya, mari melakukan interpretasi hasil latihan model.","e16f79df":"Lihat dataset beserta labelnya dengan memanggil `show_batch`","2fa9d7b2":"Dataset kita memiliki dua folder yaitu __annotations__ dan __images__. Pathlib python memiliki satu karakter khusus yaitu '\/' untuk membuat sebuah path file. Silahkan kunjungi [ini untuk lebih jelasnya](https:\/\/docs.python.org\/3\/library\/pathlib.html)"}}