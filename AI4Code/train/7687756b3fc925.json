{"cell_type":{"4e0d3d15":"code","2007c148":"code","f7873d36":"code","37b4c88e":"code","25a2e4c7":"code","bc0cabef":"code","9ed592e7":"code","904b03f1":"code","dcc480a7":"code","3ba02429":"code","853f8f8e":"code","c5e33383":"code","e82d786a":"code","349187a6":"code","faa1a323":"code","6d5beb9d":"code","c1536cb5":"code","736706d0":"code","bdc2b3c7":"code","8b07eac8":"code","d2bf7076":"code","abf866a6":"code","5baaed9f":"code","ec8bc0a1":"code","35fdae1b":"code","1375e7a5":"code","a172d68d":"code","ba7f1a89":"code","556aacd4":"code","878a54d3":"code","5c9cb7c2":"code","8880c5a8":"code","be4ef678":"code","1b8f610d":"markdown","f35492db":"markdown","ae54ceab":"markdown","bbf9bc6e":"markdown","12155785":"markdown","5d7886f3":"markdown","5cc02185":"markdown","e82bd306":"markdown","77532741":"markdown","7e3d2aca":"markdown","df73f8bc":"markdown","a353f1bd":"markdown","0395f5a1":"markdown","2110ca08":"markdown","8b734cf9":"markdown","f465249d":"markdown","8c230113":"markdown","009a4775":"markdown","3a92f763":"markdown","8b95067c":"markdown","b20ca40e":"markdown","05572762":"markdown","f5aff2fc":"markdown","5e7fa061":"markdown"},"source":{"4e0d3d15":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2007c148":"house_data = pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\")","f7873d36":"house_data.head()","37b4c88e":"#dropping the id and date column\nhouse_data = house_data.drop(['id','date'], axis = 1)","25a2e4c7":"house_data.head()","bc0cabef":"house_data.shape","9ed592e7":"house_data.info()","904b03f1":"house_data.isnull().any()","dcc480a7":"house_data.describe().T","3ba02429":"data = house_data.copy()","853f8f8e":"data.corr()[\"price\"].sort_values()","c5e33383":"import plotly.express as px\nfig = px.histogram(data, x=\"price\",\n                   marginal=\"box\"\n                  )\nfig.show()","e82d786a":"f,ax = plt.subplots(figsize=(15,10))\nsns.heatmap(data.corr(), cmap=\"Blues\", annot=True, linewidths=0.5, fmt= '.1f',ax=ax)\nplt.show()","349187a6":"h = data.hist(bins=30,figsize=(16,16),xlabelsize='10',ylabelsize='10',xrot=-15)\n","faa1a323":"plt.figure(figsize=(10,8))\nsns.violinplot(x=\"floors\", y=\"price\",data=data, palette = 'magma', inner=\"points\")\nplt.show()","6d5beb9d":"plt.figure(figsize=(10,8))\nsns.violinplot(x=\"waterfront\", y=\"price\",data=data, palette = 'magma', inner=\"points\")\nplt.show()","c1536cb5":"f, ax = plt.subplots(1, 1,figsize=(12.18,5))\nsns.boxplot(x=data['grade'],y=data['price'], ax=ax)\nax.yaxis.tick_left()\nax.set(xlabel='Grade', ylabel='Price');","736706d0":"trace1 = go.Scatter3d(\n    x=data.bathrooms,\n    y=data.bedrooms,\n    z=data.sqft_living,\n    mode='markers',\n    marker=dict(\n        size=8,\n        color='#b167b7',        \n    )\n)\n\ndata_ = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data_, layout=layout)\niplot(fig)","bdc2b3c7":"data.head()","8b07eac8":"x = data.loc[:,\"sqft_living\"].values.reshape(-1,1)\ny = data.loc[:,\"price\"].values.reshape(-1,1)\n\nplt.scatter(x=x,y=y,c=\"#7aa4f5\", alpha=0.4)\nplt.xlabel('sqft_living')\nplt.ylabel('price')\nplt.show()","d2bf7076":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)","abf866a6":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression()\n\n# Fit\nreg.fit(x_train, y_train)\n\n# Predict\npredicted = reg.predict(x_test)\n\n# R^2 \nprint('R^2 score: ',reg.score(x_test, y_test))\n# Plot regression line and scatter\nplt.plot(x_test, predicted, color='#010149', linewidth=3)\nplt.scatter(x=x,y=y,c=\"#7aa4f5\", alpha=0.4)\nplt.xlabel('Sq. Ft. Living')\nplt.ylabel('Price')\nplt.show()","5baaed9f":"x = data.loc[:,[\"sqft_living\",\"grade\",\"sqft_above\",\"sqft_living15\",\"bathrooms\",\"view\"]].values\ny = data.loc[:,\"price\"].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)","ec8bc0a1":"multiple_linear_reg = LinearRegression()\n\n# Fit\nmultiple_linear_reg.fit(x_train,y_train)\n\n# Predicted\npredicted = multiple_linear_reg.predict(x_test)\n\n# R^2 \nprint('R^2 score: ',multiple_linear_reg.score(x_test, y_test))","35fdae1b":"x = data.drop(['price'], axis = 1)\ny = data.loc[:,\"price\"].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)","1375e7a5":"multiple_linear_reg = LinearRegression()\n\n# Fit\nmultiple_linear_reg.fit(x_train,y_train)\n\n# Predicted\npredicted = multiple_linear_reg.predict(x_test)\n\n# R^2 \nprint('R^2 score: ',multiple_linear_reg.score(x_test, y_test))","a172d68d":"x = data.drop(['price'], axis = 1)\ny = data.loc[:,\"price\"].values.reshape(-1,1)\n\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial_reg = PolynomialFeatures(degree = 2)\n\nx_polynomial = polynomial_reg.fit_transform(x)\n\nx_train, x_test, y_train, y_test = train_test_split(x_polynomial, y, test_size = 0.33, random_state = 42)","ba7f1a89":"polynomial_linear_reg = LinearRegression()\n\n# Fit\npolynomial_linear_reg.fit(x_train,y_train)\n\n# Predicted\npredicted = polynomial_linear_reg.predict(x_test)\n\n# R^2 \nprint('R^2 score: ',polynomial_linear_reg.score(x_test, y_test))","556aacd4":"x = data.loc[:,\"grade\"].values.reshape(-1,1)\ny = data.loc[:,\"price\"].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)","878a54d3":"from sklearn.tree import DecisionTreeRegressor\ntree_reg = DecisionTreeRegressor()\n\n# Fit\ntree_reg.fit(x_train,y_train)\n\n# Predict\n\npredicted = tree_reg.predict(x_test)\n\n# R^2 \nprint('R^2 score: ',tree_reg.score(x_test, y_test))","5c9cb7c2":"x = data.drop(['price'], axis = 1)\ny = data.loc[:,\"price\"].values\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)","8880c5a8":"from sklearn.ensemble import RandomForestRegressor\n\nr_forest = RandomForestRegressor(n_estimators = 100, random_state = 42)\nr_forest.fit(x_train,y_train)\n\ntrain_predicted = r_forest.predict(x_train)\ntest_predicted = r_forest.predict(x_test)\n\n\nfrom sklearn.metrics import r2_score\n\n\nprint('R^2 train data: %.3f, R^2 test data: %.3f' % (r2_score(y_train,train_predicted),r2_score(y_test,test_predicted)))","be4ef678":"plt.figure(figsize=(10,6))\n\nplt.scatter(train_predicted,train_predicted - y_train,\n          c = '#b868e7', marker = '*', s = 100, alpha = 0.7,\n          label = 'Train data')\nplt.scatter(test_predicted,test_predicted - y_test,\n          c = '#95c0ed', marker = '*', s = 100, alpha = 0.6,\n          label = 'Test data')\nplt.xlabel('Predicted values')\nplt.ylabel('Result')\nplt.legend(loc = 'upper right')\nplt.hlines(y = 0, xmin = 0, xmax = 7000000, lw = 2, color = '#2f0254')\nplt.show()","1b8f610d":"* sqft_living and grade have the highest correlation with price.","f35492db":"<a id='4'><\/a><br>\n## Multiple Linear Regression \n\nMultiple linear regression attempts to model the relationship between two or more explanatory variables and a response variable by fitting a linear equation to observed data.\n\n\n![image.png](attachment:image.png)","ae54ceab":"<a id='3'><\/a><br>\n## Linear Regression\n\nLinear regression attempts to model the relationship between two variables by fitting a linear equation to observed data. One variable is considered to be an explanatory variable, and the other is considered to be a dependent variable.\n\n![image.png](attachment:image.png)","bbf9bc6e":"# \u270f\ufe0f Introduction \n\nWith the Home Sales dataset in King County, USA, we will create models and evaluate these models using regression algorithms in machine learning to predict home sales prices. \n\n1. [Load and Check Data](#1)\n1. [Regression](#2)\n    * [Linear Regression](#3)\n    * [Multiple Linear Regression](#4)\n    * [Polynomial Linear Regression](#5)\n    * [Decision Tree Regression](#6)\n    * [Random Forest Regression](#7)\n   \n  ","12155785":"<a id='5'><\/a><br>\n## Polynomial Regression\n\nSometimes, a plot of the residuals versus a predictor may suggest there is a nonlinear relationship. One way to try to account for such a relationship is through a polynomial regression model. \n\n![image.png](attachment:image.png)","5d7886f3":"* With this model, the highest result was obtained with the grade variable.","5cc02185":"* Model 2 includes all variables.","e82bd306":"<a id='6'><\/a><br>\n## Decision Tree \n\nDecision tree builds regression or classification models in the form of a tree structure. It breaks down a dataset into smaller and smaller subsets while at the same time an associated decision tree is incrementally developed. ","77532741":"* The price increases in proportion to the grade.","7e3d2aca":"<a id='7'><\/a><br>\n## Random Forest\n\nA Random Forest is an ensemble technique capable of performing both regression and classification tasks with the use of multiple decision trees and a technique called Bootstrap and Aggregation, commonly known as bagging. The basic idea behind this is to combine multiple decision trees in determining the final output rather than relying on individual decision trees.","df73f8bc":"* We see that the price has very outliers, but this may be normal for house prices.","a353f1bd":"* A high result has been achieved with this model.","0395f5a1":"* With the linear regression model created by sqft_living, which has the highest correlation with price, R^2 score of 0.48 was obtained.","2110ca08":"### Model 2","8b734cf9":"* The highest success rate has been achieved.","f465249d":"* Although it is a better result than simple linear regression, it is not sufficient.","8c230113":"* No nan value as we would like.","009a4775":"<a id='2'><\/a><br>\n# Regression\n\nRegression is a set of statistical methods used for the estimation of relationships between a dependent variable and one or more independent variables. It can be utilized to assess the strength of the relationship between variables and for modeling the future relationship between them.","3a92f763":"* Model 1 includes only highly correlated variables.","8b95067c":"* From here, we can see that the price increases as the number of bedrooms and bathrooms increases.","b20ca40e":"### Model 1","05572762":"### Let's learn more about data with visualization.","f5aff2fc":"* Model 2 is more successful than model 1.","5e7fa061":"<a id='1'><\/a><br>\n# Load and Check Data"}}