{"cell_type":{"bae568d9":"code","c756cccb":"code","7c7f12d5":"code","9539915b":"code","cf927007":"code","9caf083f":"code","32fd93ab":"code","fec91b7c":"code","6c62bac2":"code","532bd276":"code","4f933d38":"code","50b53eee":"code","17697d74":"code","39f7a18a":"code","98d5a23c":"code","5237c2a4":"code","73ec9638":"code","5c2d3d6b":"code","e2684c86":"code","7483b917":"code","78b5b7d8":"code","6a23e632":"code","2bc622fa":"code","d4dfa8fb":"code","8dc85b32":"code","5a939aa7":"code","645995ce":"code","a7c2eb2f":"code","72ad0527":"code","dc4b19d4":"code","04eeacbd":"code","4ab35bf4":"code","54953192":"code","f18bd569":"code","5c434d1a":"code","3f211c5b":"code","85db1e68":"code","5022b4fd":"code","c2eae293":"code","0fc8afe6":"code","89b97919":"code","ffae0a5b":"markdown","cccaf109":"markdown","72d2e8d8":"markdown","7e270330":"markdown","cd828cdd":"markdown","8c93b7ca":"markdown","64b4cfeb":"markdown","27b55c54":"markdown","658ad87e":"markdown","fbf43421":"markdown","ca80e2b1":"markdown","e510d6a4":"markdown","1ee07875":"markdown","b75fc090":"markdown","a57c8c35":"markdown","b2895ac4":"markdown","cb46dddb":"markdown","14dc739d":"markdown","0da3fefa":"markdown","a983ae3d":"markdown","afb473e9":"markdown","9312d63d":"markdown","a41868b1":"markdown","9f88b716":"markdown","ddad2430":"markdown","e8e33db3":"markdown","0a9c9036":"markdown","2eb7e3d3":"markdown","b08afdec":"markdown","1778d2c5":"markdown","23294141":"markdown","6804bb6d":"markdown","19a80eb8":"markdown","99f1088a":"markdown","fa219702":"markdown","8caf9d23":"markdown","65304514":"markdown","0b08dded":"markdown","226673a5":"markdown","cab2df4a":"markdown","3e9f8f65":"markdown"},"source":{"bae568d9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.offline as pyo\nimport plotly.graph_objs as go\npyo.init_notebook_mode()\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c756cccb":"data_2002 = pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/National Assembly 2002 - Updated.csv', encoding = 'ISO-8859-1')\ndata_2008 =  pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/National Assembly 2008.csv', encoding = 'ISO-8859-1')\ndata_2013 = pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/National Assembly 2013.csv', encoding = 'ISO-8859-1')\ndata_2018 = pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/NA-Results2018 Ver 2.csv', encoding = 'ISO-8859-1')\n\ndata_2002.head(20)","7c7f12d5":"data_2002.isnull().sum()","9539915b":"data_2002[\"Party\"].replace({\"Pakistan Mulim League(QA)\": \"Pakistan Muslim League(QA)\", \n                            \"Indepndent\": \"Independent\",\n                            \"Pakistan Peoples Party Parliamentarian\": \"Pakistan Peoples Party Parliamentarians\", \n                            \"Pakistan Peoples Party Parlimentarians\": \"Pakistan Peoples Party Parliamentarians\",\n                           \"Pakistan peoples Party Parlimentarians\": \"Pakistan Peoples Party Parliamentarians\"}, inplace=True)","cf927007":"# TODO: optimize the code\nwinner_runnerup_2002 = data_2002.groupby(['Constituency_title'])['Votes'].nlargest(2).reset_index()\n\nsorted_idx = (winner_runnerup_2002.assign(Constituency_title=winner_runnerup_2002.Constituency_title.str.extract(r'(\\d+)$').astype(int))\n         .sort_values(['Constituency_title'])\n         .index)\n\nwinner_runnerup_2002 = winner_runnerup_2002.iloc[sorted_idx]\ndiff = {}\nx = 0\nwhile x < len(winner_runnerup_2002)-1:\n    if (winner_runnerup_2002.iloc[x].Constituency_title == winner_runnerup_2002.iloc[x+1].Constituency_title):\n        diff[winner_runnerup_2002.iloc[x].Constituency_title] = abs(winner_runnerup_2002.iloc[x].Votes - winner_runnerup_2002.iloc[x+1].Votes)\n    else:\n        diff[winner_runnerup_2002.iloc[x].Constituency_title] = winner_runnerup_2002.iloc[x].Votes\n        x = x-1\n    x = x + 2\n    \ndata_2002 = pd.merge(data_2002, pd.DataFrame(diff.items(), columns=['Constituency_title', 'Vote_diff']), on=[\"Constituency_title\"])\n\ndata_2002","9caf083f":"data_2002['votes_diff_vs_rejected_votes'] = data_2002['Vote_diff'] - data_2002['Total_Rejected_Votes']","32fd93ab":"# get list of parties participate in 2002 election:\nparties_list_in_2002 = data_2002.groupby(['Party']).size()\ntotal_parties_in_2002 = len(parties_list_in_2002)\nprint(total_parties_in_2002)","fec91b7c":"# total number of NA seats\nseats_list_in_2002 = data_2002.Constituency_title.unique()\ntotal_na_seats_in_2002 = len(seats_list_in_2002)\nprint(total_na_seats_in_2002)","6c62bac2":"# get the list of candidates per NA seat\nlist_of_candidate_per_seat_2002 = data_2002.groupby(['Constituency_title']).size().reset_index(name='counts')\n\nsorted_idx = (list_of_candidate_per_seat_2002.assign(Constituency_title=list_of_candidate_per_seat_2002.Constituency_title.str.extract(r'(\\d+)$').astype(int))\n         .sort_values(['Constituency_title'])\n         .index)\n\nlist_of_candidate_per_seat_2002 = list_of_candidate_per_seat_2002.iloc[sorted_idx]\nx = list_of_candidate_per_seat_2002.Constituency_title\ny = list_of_candidate_per_seat_2002.counts\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=x, y=y,\n                    mode='lines+markers',\n                    name='lines+markers'))\nfig.show()","532bd276":"list_of_candidate_per_party_2002 = data_2002.groupby(['Party']).size().reset_index(name='counts').sort_values('counts', ascending=False)\n\nfig = px.bar(list_of_candidate_per_party_2002, x='Party', y='counts', height=700)\nfig.show()","4f933d38":"list_of_parties_with_no_votes_2002 = data_2002.groupby(['Party'])['Votes'].sum().reset_index(name='total_votes').sort_values('total_votes', ascending=False)\n\n\nfig = px.pie(list_of_parties_with_no_votes_2002, values='total_votes', names='Party',\n             title='Number of votes VS Party')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","50b53eee":"max_votes_index_2002 = data_2002.groupby(['Constituency_title'])['Votes'].idxmax()\nnumber_of_seats_per_party_2002 = data_2002.iloc[max_votes_index_2002].groupby(['Party']).size().reset_index(name='Seats').sort_values('Seats', ascending=False)\nfig = px.pie(number_of_seats_per_party_2002, values='Seats', names='Party',\n             title='Number of Seats per Party')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","17697d74":"numer_of_parties_in_assembly_2002 = len(number_of_seats_per_party_2002)\nnumer_of_parties_in_assembly_2002","39f7a18a":"list_of_constituencies_having_diff_less_rejected_votes = data_2002[data_2002['votes_diff_vs_rejected_votes'] < 0]\nlist_of_constituencies_having_diff_more_rejected_votes = data_2002[data_2002['votes_diff_vs_rejected_votes'] >= 0]\ntotal_constituencies_having_diff_less_rejected_votes = len(list_of_constituencies_having_diff_less_rejected_votes.Constituency_title.unique())\ntotal_constituencies_having_diff_more_rejected_votes = len(list_of_constituencies_having_diff_more_rejected_votes.Constituency_title.unique())\n\nprint(total_constituencies_having_diff_less_rejected_votes, total_constituencies_having_diff_more_rejected_votes)\n\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=list_of_constituencies_having_diff_less_rejected_votes.Constituency_title, y=list_of_constituencies_having_diff_less_rejected_votes.votes_diff_vs_rejected_votes,\n                marker_color='crimson',\n                name='Rejected votes more then votes diff'))\nfig.add_trace(go.Bar(x=list_of_constituencies_having_diff_more_rejected_votes.Constituency_title, y=list_of_constituencies_having_diff_more_rejected_votes.votes_diff_vs_rejected_votes,\n                marker_color='lightslategrey',\n                name='Rejected votes less then votes diff'\n                ))\n\nfig.show()","98d5a23c":"data_2008","5237c2a4":"data_2008.isnull().sum()","73ec9638":"parties_list_in_2008 = data_2008.Party.unique()\ntotal_parties_in_2008 = len(parties_list_in_2008)\nprint(total_parties_in_2008) # 37 excluding Independents","5c2d3d6b":"seats_list_in_2008 = data_2008.ConstituencyTitle.unique()\ntotal_seats_in_2008 = len(seats_list_in_2008)\nprint(total_seats_in_2008)","e2684c86":"list_of_candidates_per_seat_2008 = data_2008.groupby(['ConstituencyTitle']).size().reset_index(name='candidates')\nsorted_idx = (list_of_candidates_per_seat_2008.assign(ConstituencyTitle=list_of_candidates_per_seat_2008.ConstituencyTitle.str.extract(r'(\\d+)$').astype(int))\n         .sort_values(['ConstituencyTitle'])\n         .index)\nlist_of_candidates_per_seat_2008 = list_of_candidates_per_seat_2008.iloc[sorted_idx]\n\nx = list_of_candidates_per_seat_2008.ConstituencyTitle\ny = list_of_candidates_per_seat_2008.candidates\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=x, y=y,\n                    mode='lines+markers',\n                    name='lines+markers'))\nfig.show()","7483b917":"list_of_candidates_per_party_2008 = data_2008.groupby('Party').size().reset_index(name='candidates').sort_values('candidates', ascending=False)\nfig = px.funnel(list_of_candidates_per_party_2008, x='Party', y='candidates')\nfig.show()","78b5b7d8":"list_of_votes_per_party_2008 = data_2008.groupby(['Party'])['Votes'].sum().reset_index(name='total_votes').sort_values('total_votes', ascending=False)\n\nfig = px.pie(list_of_votes_per_party_2008, names='Party', values='total_votes', title='Number of votes Vs Party')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","6a23e632":"max_votes_index_2008 = data_2008.groupby(['ConstituencyTitle'])['Votes'].idxmax()\nnumber_of_seats_per_party_2008 = data_2008.iloc[max_votes_index_2008].groupby(['Party']).size().reset_index(name='Seats').sort_values('Seats', ascending=False)\nfig = px.pie(number_of_seats_per_party_2008, names='Party', values='Seats', title='Number of seats per party')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","2bc622fa":"number_of_parties_in_assembly_2008 = len(number_of_seats_per_party_2008)\nnumber_of_parties_in_assembly_2008","d4dfa8fb":"data_2013","8dc85b32":"data_2013.isnull().sum()\n","5a939aa7":"list_of_parties_2013 = data_2013.Party.unique()\ntotal_parties_in_2013 = len(list_of_parties_2013)\nprint(total_parties_in_2013)","645995ce":"list_of_seats_2013 = data_2013.ConstituencyTitle.unique()\ntotal_seats_2013 = len(list_of_seats_2013)\nprint(total_seats_2013)","a7c2eb2f":"list_of_candidates_per_na_2013 = data_2013.groupby('ConstituencyTitle').size().reset_index(name='candidates')\n\nsorted_idx = (list_of_candidates_per_na_2013.assign(ConstituencyTitle=list_of_candidates_per_na_2013.ConstituencyTitle.str.extract(r'(\\d+)$').astype(int))\n         .sort_values(['ConstituencyTitle'])\n         .index)\nlist_of_candidates_per_na_2013 = list_of_candidates_per_na_2013.iloc[sorted_idx]\n\nx = list_of_candidates_per_na_2013.ConstituencyTitle\ny = list_of_candidates_per_na_2013.candidates\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=x, y=y,\n                    mode='lines+markers',\n                    name='lines+markers'))\n\nfig.show()","72ad0527":"list_of_candidates_per_party_2013 = data_2013.groupby(['Party']).size().reset_index(name='candidates').sort_values('candidates', ascending=False)\n\nfig = px.funnel(list_of_candidates_per_party_2013, x='Party', y='candidates', height=700)\nfig.show()","dc4b19d4":"list_of_votes_per_party_2013 = data_2013.groupby(['Party'])['Votes'].sum().reset_index(name='total_votes').sort_values('total_votes', ascending=False)\n\nfig = px.pie(list_of_votes_per_party_2013, names='Party', values='total_votes')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","04eeacbd":"max_votes_index_2013 = data_2013.groupby(['ConstituencyTitle'])['Votes'].idxmax()\nnumber_of_seats_per_party_2013 = data_2013.iloc[max_votes_index_2013].groupby(['Party']).size().reset_index(name='Seats').sort_values('Seats', ascending=False)\n\nfig = px.pie(number_of_seats_per_party_2013, names='Party', values='Seats', title='Number of seats per Party')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","4ab35bf4":"number_of_parties_in_assembly_2013 = len(number_of_seats_per_party_2013)\nnumber_of_parties_in_assembly_2013","54953192":"data_2018.rename(columns={\"Part\": \"Party\"}, inplace=True)\nprint(data_2018)\n","f18bd569":"data_2018.isnull().sum()","5c434d1a":"parties_list_in_2018 = data_2018.Party.unique()\ntotal_parties_in_2018 = len(parties_list_in_2018)\n\nprint(total_parties_in_2018)","3f211c5b":"seats_list_in_2018 = data_2018.Constituency_Title.unique()\ntotal_na_seats_in_2018 = len(seats_list_in_2018)\nprint(total_na_seats_in_2018)","85db1e68":"list_of_candidate_per_seat_2018 = data_2018.groupby(['Constituency_Title']).size().reset_index(name='candidates')\n\nsorted_idx = (list_of_candidate_per_seat_2018.assign(Constituency_Title=list_of_candidate_per_seat_2018.Constituency_Title.str.extract(r'(\\d+)$').astype(int))\n         .sort_values(['Constituency_Title'])\n         .index)\n\nlist_of_candidate_per_seat_2018 = list_of_candidate_per_seat_2018.iloc[sorted_idx]\n\nfig = px.bar(list_of_candidate_per_seat_2018, x='Constituency_Title', y='candidates')\nfig.show()","5022b4fd":"list_of_candidates_per_party_2018 = data_2018.groupby('Party').size().reset_index(name='candidates').sort_values('candidates', ascending=False)\nprint(list_of_candidates_per_party_2018)\n\nfig = px.funnel(list_of_candidates_per_party_2018, x='Party', y='candidates')\nfig.show()","c2eae293":"list_of_votes_per_party_2018 = data_2018.groupby('Party')['Votes'].sum().reset_index(name='total_votes').sort_values('total_votes', ascending=False)\nfig = px.pie(list_of_votes_per_party_2018, names='Party', values='total_votes')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","0fc8afe6":"max_votes_index_2018 = data_2018.groupby(['Constituency_Title'])['Votes'].idxmax()\nnumber_of_seats_per_party_2018 = data_2018.iloc[max_votes_index_2018].groupby(['Party']).size().reset_index(name='Seats').sort_values('Seats', ascending=False)\n\nfig = px.pie(number_of_seats_per_party_2018, names='Party', values='Seats', title='Number of seats per Party')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","89b97919":"numer_of_parties_in_assembly_2018 = len(number_of_seats_per_party_2018)\nnumer_of_parties_in_assembly_2018","ffae0a5b":"* **Number of seats won by Parties**","cccaf109":"* **Check for null**","72d2e8d8":"* **Numebr of parties reacehd in Parliment 2018**","7e270330":"> **Get list of parties participate in 2002 election:**","cd828cdd":"* **Get list of parties participate in 2013**","8c93b7ca":"* **List of candidates per party**","64b4cfeb":"* **Get list of candidates per NA seat**","27b55c54":"* **List of Candidates per party**","658ad87e":"* **Number of votes per party**","fbf43421":"* **Create a new column named Vote_diff, that is difference between votes of winner and runnerup.**","ca80e2b1":"> **Total Number of seats**","e510d6a4":"* **Numebr of seats by party**","1ee07875":"* **Get the list of candidates per NA seats**","b75fc090":"* **Number of Seats won by Parties in 2008**","a57c8c35":"# EDA on 2002 Election data","b2895ac4":"* **Create another column that would be the difference between total_votes_rejected and votes_diff**","cb46dddb":"> **Get the list of candidates per NA seats**","14dc739d":"* **Total Number of seats**","0da3fefa":"* **Number of parties reahed in Assembly in 2008**","a983ae3d":"* **Get list of parties participate in 2008 election**","afb473e9":"* **Number of seats won by parties**","9312d63d":"* **Get list of parties in 2018**","a41868b1":"* **Number of votes per party**","9f88b716":"# EDA on 2018 Election Data","ddad2430":"* **Number of votes per party**","e8e33db3":"# EDA on 2008 Election data","0a9c9036":"> **Check number of nulls in data set: and found Zero null**","2eb7e3d3":"* **List of candidates per party**","b08afdec":"* **Votes margin between rejected and votes diff**","1778d2c5":"# EDA on 2013 Election data","23294141":"* **Numebr of parties in Assebmly in 2002**","6804bb6d":"* **Get list of candidates per NA Seat**","19a80eb8":"> **List of candidates per party**","99f1088a":"* **Check number of nulls**","fa219702":"* **Total number of seats**","8caf9d23":"* **Total Number of seats**","65304514":"* **Data cleaning in 2002**","0b08dded":"* **Number of parties reached in parliment 2013**","226673a5":"* **Check for null**","cab2df4a":"# Please Upvote if you find the notebook interesting\nWork is in progress.\nThis notebook is under MIT License Feel free to copy and edit it.","3e9f8f65":"> **Number of votes per party**"}}