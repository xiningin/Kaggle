{"cell_type":{"05728b91":"code","5248ff77":"code","df0e2188":"code","61c355c2":"code","84f3d73b":"code","b3ecb525":"code","60d2d4be":"code","43005e7c":"code","1eea4335":"code","b4753e08":"code","626a69cc":"code","32c927ae":"code","1f8b3293":"code","3b5dc8ed":"code","584541d3":"code","6bb929e4":"code","feedfa9f":"code","e8a4333c":"code","fae768f0":"code","9f087ae9":"code","a249f42d":"code","445f472c":"code","af5cfeb2":"code","e066febf":"code","44c01a65":"code","ba88c696":"code","22c04917":"code","9993596d":"code","4844b9e5":"code","641a655c":"code","ac21a24a":"code","07299914":"code","5d9ea939":"code","47ca1c06":"code","c1dbd6df":"code","2e579e74":"code","01c084a0":"code","4b910ac3":"code","bf598a14":"code","5e5e8a38":"markdown","5481a4fe":"markdown","0ede3685":"markdown","1a44e1ca":"markdown","88b24e31":"markdown","1f56387d":"markdown","5b4407e1":"markdown","678ddfb9":"markdown","b036b1c4":"markdown"},"source":{"05728b91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5248ff77":"df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')","df0e2188":"df.head()","61c355c2":"df.columns","84f3d73b":"#remove show_id & description \ndf = df.drop(labels=['show_id','description'], axis=1)","b3ecb525":"df.head()","60d2d4be":"#import ploting libraries\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nimport seaborn as sns","43005e7c":"sns.heatmap(df.isnull())","1eea4335":"df.shape","b4753e08":"df.isnull().sum()","626a69cc":"df['rating'].value_counts()","32c927ae":"df[df['rating'].isnull()]","1f8b3293":"rating={67:'PG',2359:'TV-13',3660:'TV-13',3736:'UR',3737:'UR',3738:'UR',4323:'PG'}\nfor i, rate in rating.items():\n    df.loc[i,'rating']=rate","3b5dc8ed":"df['country'].value_counts()","584541d3":"#since majority of the items from United staties, lets replace the 507 null values from country as 'Uniter States'\ndf['country']=df['country'].fillna('United States')","6bb929e4":"#split multiple countries as on orgin country based on the first contry in the list\ndf['country']=df['country'].apply(lambda x: x.split(',')[0])","feedfa9f":"df['country'].value_counts()","e8a4333c":"df_types=df['type'].value_counts().T.reset_index()\npx.pie(df_types, values='type', names='index', title='Netflix shows by Movie & TV shows')","fae768f0":"df_country=df[['country','type','title']].groupby(by=['country','type']).count().sort_values(by='title',ascending=False).reset_index()","9f087ae9":"df['country'].value_counts()","a249f42d":"px.bar(df_country.head(10),x='country',y='title',color='type',title='Netflix shows\/movies count from countries by type')","445f472c":"px.scatter(df, x='release_year', color='country', hover_data=['title'])","af5cfeb2":"#movies rating by rating\ndf_rating=df['rating'].value_counts().reset_index()\npx.bar(df_rating, x='index',y='rating', color='index')","e066febf":"df.head()","44c01a65":"df['date_added'].fillna(df['release_year'], inplace=True)","ba88c696":"def convert(x):\n    if len(x)>4:\n        a=x.split(',')\n        #print(a)\n        return int(a[1].strip())\n    return int(x)\n    ","22c04917":"df['year_added']=df['date_added'].apply(lambda x:convert(str(x)))","9993596d":"df.info()","4844b9e5":"df_country_year = df.groupby(by=['country','type','year_added']).count().reset_index()\ndf_country_year['aggregate']=df_country_year.groupby(by=['country'])['title'].cumsum()","641a655c":"px.choropleth(df_country_year.sort_values(by='year_added'), locations='country', title='Movies\/TV shows released by year by country',color='aggregate', locationmode='country names', animation_frame='year_added', range_color=[0,500],\n             )","ac21a24a":"df.head()","07299914":"df['durations_time']=df['duration'].apply(lambda x: x.split()[0]).astype(float)\ndf['release_year']=df['release_year'].astype(int)","5d9ea939":"x=df['durations_time'][df['type']=='Movie']\ny=df['release_year']","47ca1c06":"y","c1dbd6df":"import plotly.figure_factory as ff\nff.create_distplot([x],['duration_time'], curve_type='normal', bin_size=0.7)","2e579e74":"df['genere']=df['listed_in'].apply(lambda x:x.split(',')[0])","01c084a0":"df_genere=df[['genere','release_year','title']].groupby(by=['release_year','genere']).count().reset_index()","4b910ac3":"to_10_genere=df_genere[['genere','title']].groupby(by='genere').sum().sort_values(by='title',ascending=False).reset_index()['genere'].head(5)","bf598a14":"px.sunburst(df_genere[(df_genere['genere'].isin(to_10_genere) )],\n            title='Top 10 genere by year',path=['release_year','genere'],values='title',)","5e5e8a38":"around 69% of Netflix shows are contributed by Movies and TV shows are remaining 31%","5481a4fe":"From the above gap, we understand that US, India, UK are the top contributed to Netflix. \nUnited States has 70% of the productions in Movies & 30% in TV shows\nIndia has 100% productions in Movies\nUnited Kingdome has 70% & 30% in Movies & TV shows respectively\nCanda, France, Spain are following in Movies only. \nJapan & South Korea are mostly on TV shows","0ede3685":"# Column Details\n1. show_id - id of the show tracked in Netflix.\n2. type - type of the show whether it is Movie or TV show.\n3. title - title of the show.\n4. director - director of the show or movie.\n5. cast - cast of the show or Movie.\n6. country - country in with the show\/movie is produced.\n7. date_added - date added to Netflix.\n8. release_year - original realease year of the movie.\n9. rating - rating of the movie Ex: PG, R etc.\n10. duration - duration of the movie\/show.\n11. listed_in - category of the Movie.show\n12. description - discription of the movie. \n\nFrom the above details of the columns, show_id & descriptions can be ignored for anlaysis. rest other columns will give significat contribution for our analysis. ","1a44e1ca":"# check the null or na values in the data","88b24e31":"# Netflix Data Analysis\nNetflix is one of the populart OTT platform. here we are going to analyse the data from Netflix to see the Movies by region, duration etc. ","1f56387d":"Oldest produced movie in Netflix is 'Pioneer: First women flimmaker' released in the year 1925. \nmose of the release movies in Netflix is between later part of 2000 an 2020. ","5b4407e1":"# Read Data & Explore data\nlets us read data and understand details of the columns in the data. ","678ddfb9":"# Exploratory Data Analysis","b036b1c4":"Top 3 rating goes to TV shows & TV-MA has top in the rating count"}}