{"cell_type":{"4c2e1ca8":"code","2a40c1ab":"code","c24bd0b6":"code","cdaf6de8":"code","fbd046f5":"code","a8197974":"markdown","be311d09":"markdown","cd1ab9f8":"markdown","671e9e9c":"markdown","226c9cb5":"markdown","d912b427":"markdown","08872771":"markdown"},"source":{"4c2e1ca8":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport pandas_profiling as pp\nimport seaborn as sns\nimport warnings\nimport os\n\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n\nprint(os.listdir(\"..\/input\"))","2a40c1ab":"df_iris = pd.read_csv('..\/input\/Iris.csv')","c24bd0b6":"df_iris.info()","cdaf6de8":"df_iris.describe()","fbd046f5":"pp.ProfileReport(df_iris)","a8197974":"# Simple Profiling using Pandas\n# You can do EDA using this simple method: Pandas Profiling\n\nGenerates profile reports from a pandas DataFrame. The pandas df.describe() function is great but a little basic for serious exploratory data analysis. pandas_profiling extends the pandas DataFrame with df.profile_report() for quick data analysis.\n\nFor each column the following statistics - if relevant for the column type - are presented in an interactive HTML report:\n\n- **Type inference**: detect the types of columns in a dataframe.\n- **Essentials**: type, unique values, missing values\n- **Quantile statistics** like minimum value, Q1, median, Q3, maximum, range, interquartile range\n- **Descriptive statistics** like mean, mode, standard deviation, sum, median absolute deviation, coefficient of variation, kurtosis, skewness\n- **Most frequent values**\n- **Histogram**\n- **Correlations** highlighting of highly correlated variables, Spearman, Pearson and Kendall matrices\n- **Missing values matrix**, count, heatmap and dendrogram of missing values\n- **Text analysis** learn about categories (Uppercase, Space), scripts (Latin, Cyrillic) and blocks (ASCII) of text data.\n \n ## You can check the documentation through this link:\n\nhttps:\/\/github.com\/pandas-profiling\/pandas-profiling","be311d09":"# Import the dataset","cd1ab9f8":"# Bam! Magic!","671e9e9c":"![](https:\/\/camo.githubusercontent.com\/5915a3ee29e2e8be434e69115b247b9dc04d8b09\/687474703a2f2f70616e6461732d70726f66696c696e672e6769746875622e696f2f70616e6461732d70726f66696c696e672f646f63732f6173736574732f6c6f676f5f6865616465722e706e67)","226c9cb5":"# Import the libraries","d912b427":"To show Pandas Profiling Capabilities, I preferred a simple dataset : Iris Species\n\n![](https:\/\/thegoodpython.com\/assets\/images\/iris-species.png)\n\nYou can download it from https:\/\/www.kaggle.com\/uciml\/iris or you can also find it on the UCI Machine Learning Repository \n( http:\/\/archive.ics.uci.edu\/ml\/index.php )\n\nThe dataset includes three iris species with 50 samples each as well as some properties about each flower. One flower species is linearly separable from the other two, but the other two are not linearly separable from each other.\n\nThe columns in this dataset are:\n\n- Id\n- SepalLengthCm\n- SepalWidthCm\n- PetalLengthCm\n- PetalWidthCm\n- Species\n\n![](https:\/\/www.kaggle.io\/svf\/138327\/e401fb2cc596451b1e4d025aaacda95f\/sepalWidthvsLength.png)\n\nnotes are taken from https:\/\/www.kaggle.com\/uciml\/iris","08872771":"# I try to update it frequently , thank you very much for checking my notebook!"}}