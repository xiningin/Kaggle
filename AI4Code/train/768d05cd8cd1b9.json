{"cell_type":{"0ef3572c":"code","658d6e38":"code","cab42aeb":"code","656f1475":"code","184e3c0b":"code","6646d1e9":"code","e0bd5942":"code","4daa9b09":"code","a6459d0b":"code","7140cf61":"code","b7d06ee6":"code","c20b730c":"code","af292078":"code","5cb22ee8":"code","0e8c1519":"code","ef9122b1":"code","20776a1e":"code","23e0749e":"code","e98435a2":"code","a7bae60c":"code","f2f64281":"code","1dfb4e87":"code","3041fd54":"code","2815c930":"code","9d49a426":"code","28a9669a":"code","5677e611":"code","7f472597":"code","6afae701":"code","05407ff6":"code","1b45ecc2":"code","0314c035":"code","77990b64":"code","d2d888d6":"code","2d980f20":"code","04649923":"code","37a23403":"markdown","a570cd54":"markdown","00bbba08":"markdown","c79e2dae":"markdown","638d3576":"markdown","82d04935":"markdown","d3d38364":"markdown","1379b450":"markdown","7f6adb13":"markdown"},"source":{"0ef3572c":"# Loading libraries for processing data\nimport numpy as np\nimport pandas as pd\n\n# Loading visualization libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Formating the code\nimport warnings\nwarnings.filterwarnings('ignore')","658d6e38":"# reading data\n\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitems_cate = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nsale = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nshop = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')","cab42aeb":"# take a quick look at the data\n\nitems.head()","656f1475":"items.describe().T","184e3c0b":"items_cate.head()","6646d1e9":"items_cate.describe().T","e0bd5942":"sale.head()","4daa9b09":"sale.describe().T","a6459d0b":"shop.head()","7140cf61":"shop.describe().T","b7d06ee6":"test.head()","c20b730c":"test.describe().T","af292078":"# no of items per cate\n\nx = items.groupby(['item_category_id']).count()\nx = x.sort_values(by='item_id', ascending=False)\nx = x.reset_index()\nx.head()","5cb22ee8":"# no of sale by shop\ny = sale.groupby(['shop_id']).sum()\ny = y.reset_index()\ny.head()","0e8c1519":"# no of sale by price range\nz = sale.sort_values('item_price')\nz = z.groupby(pd.cut(z['item_price'], np.arange(z['item_price'].min(), z['item_price'].max(), z['item_price'].max()\/200))).sum()\n\n# bins = np.arange(z['item_price'].min(), z['item_price'].max(), z['item_price'].max()\/100)\n# z = z.groupby('item_price').sum()\n# z = z.reset_index()\n# z.describe()","ef9122b1":"z = z.rename({'item_price': 'price'}, axis=1)\nz = z.iloc[0:20].reset_index()\nz = z.rename({'item_price': 'price_range'}, axis=1)\nz.head()","20776a1e":"z = z.reset_index()\nz","23e0749e":"g = sale.groupby(['date_block_num']).sum()\ng = g.reset_index()\ng.head()","e98435a2":"#visualization \n\nf, axes = plt.subplots(2,2, figsize=(25,15))\n\nsns.barplot(x='item_category_id', y='item_id', data=x, ax=axes[0,0]).set_title('Cate amount')\nsns.barplot(x='shop_id', y='item_cnt_day', data=y, ax=axes[0,1]).set_title('Shop sale')\nsns.barplot(x='index', y='item_cnt_day', data=z, ax=axes[1,0]).set_title('Price range sale')\nsns.barplot(x='date_block_num', y='item_cnt_day', data=g, ax=axes[1,1]).set_title('Monthly sale')","a7bae60c":"plt.figure(figsize=(20,10))\nsns.jointplot(x='item_cnt_day', y='item_price', data=sale)","f2f64281":"a = sale['item_price'].nlargest(50)\na = a.iloc[49,]\na","1dfb4e87":"h = sale.groupby(pd.cut(sale['item_price'], np.arange(sale['item_price'].min(), a, a\/300))).sum()\nh['price_range']=np.arange(len(h))\nh = h.iloc[0:20]","3041fd54":"plt.figure(figsize=(20,10))\nsns.barplot(h.price_range, h.item_cnt_day)","2815c930":"# Join data\n\nfull = sale.join(items, on='item_id', rsuffix='_').join(shop, on='shop_id', rsuffix='_').join(items_cate, on='item_category_id', rsuffix='_').drop(['item_id_', 'shop_id_', 'item_category_id_'], axis=1)\nfull.head()","9d49a426":"full.describe()","28a9669a":"full['revenue'] = full['item_cnt_day'] * full['item_price']\nfull.head()","5677e611":"# full['revenue'] =full['item_price'].apply(lambda x: (x * full['item_cnt_day']))","7f472597":"revenue_month = full.groupby(['date_block_num'], as_index=False).sum()\nrevenue_month.head()","6afae701":"plt.figure(figsize=(20,10))\nsns.barplot(x=full.date_block_num, y=full.revenue).set_title('Monthly Revenue')","05407ff6":"# change time format to do comparison \nfull['year'] = full['date_block_num'].apply(lambda x: ((x\/\/12) + 2013))\nfull['month'] = full['date_block_num'].apply(lambda x: (x %12) +1 )\nfull.head()","1b45ecc2":"full.tail()","0314c035":"month = full[['month', 'year', 'item_cnt_day']]\nmonth = month.sort_values(['month'])\nmonth","77990b64":"month_pivot = month.pivot_table(index='month', columns='year', values='item_cnt_day')\nmonth_pivot","d2d888d6":"full","2d980f20":"revenue_month = full[['month', 'year', 'revenue']]\nrevenue_pivot = revenue_month.pivot_table(index='month', columns='year', values='revenue')\nrevenue_pivot","04649923":"f, axes = plt.subplots(2, 1, figsize=(22,10))\nmonth_pivot.plot(kind='bar', rot=0, ax=axes[0]).set_title('Monthly sale')                                       \nrevenue_pivot.plot(kind='bar', rot=0, ax=axes[1]).set_title('Monthly revenue') ","37a23403":"In order to map the details of the data, I will join small table into a full table.","a570cd54":"### EDA Report from Newcomer","00bbba08":"*Data fields*\n\nID - an Id that represents a (Shop, Item) tuple within the test set\n\nshop_id - unique identifier of a shop\n\nitem_id - unique identifier of a product\n\nitem_category_id - unique identifier of item category\n\nitem_cnt_day - number of products sold. You are predicting a monthly amount of this measure\n\nitem_price - current price of an item\n\ndate - date in format dd\/mm\/yyyy\n\ndate_block_num - a consecutive month number, used for convenience. January 2013 is 0, February 2013 is 1,..., October 2015 is 33\n\nitem_name - name of item\n\nshop_name - name of shop\n\nitem_category_name - name of item category","c79e2dae":"### 2. Understanding the data","638d3576":"By quick look, I assump that price range has outliers, therefore I will remove outliers so that I can have a better view of price range","82d04935":"Hi everyone, I'm new to Data Scientist. This is my work to find insights of a strange dataset. This is not a finished version. Thank for reading","d3d38364":"#### 2.3 Quick visualization for data understanding","1379b450":"#### 2.1 Data hypothesis\n\n- The purpose of this work is to predict monthly amount of item_cnt_day. After having the quick view of the data, there are several ways that we can deepdive into this dataset:\n       1. Which item categories are selling better than others?\n       2. Are there seasons for selling by looking at total sale\/month?\n       3. Which shops are doing good, which are doing badly and in order to increase revenue, should we invest more into profitable ones and shut-down the unprofitable ones?\n       4. Are items price effect the amount of sale and why so?\n       5. Which items are selling better than others? Is the best-seller items changed based on shop or seasons?","7f6adb13":"### 1. Loading dataset"}}