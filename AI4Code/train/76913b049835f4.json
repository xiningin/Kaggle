{"cell_type":{"078b3490":"code","5182fe50":"code","b5e6e249":"code","25258f8d":"code","38e5a87c":"code","d670ada0":"code","1bcd390c":"code","b8519786":"code","e3d14b99":"code","8f5c0ba8":"code","b7369973":"code","a2b2f42c":"code","4cedf55c":"code","ef9dcdc2":"code","bdbff4bb":"code","a76efe6e":"code","c825f032":"code","931fb7ce":"code","af7d09ec":"code","e4a5b821":"code","826a626d":"code","2327a853":"code","bcac2609":"code","50e53564":"code","1acaa12c":"code","42bade88":"code","dd635662":"code","e1befe88":"code","9ad4390f":"code","4906870f":"code","544621d7":"code","3267c7ed":"code","fbf98937":"code","6fb30efc":"code","a2d8c18e":"code","0c11b111":"code","2ecd0159":"code","2736d639":"code","ea59fdc2":"code","a1abb36f":"markdown","843664b3":"markdown","93b1448e":"markdown","22628f35":"markdown","7e5b0b52":"markdown","91213425":"markdown","ed0f4e43":"markdown","06dbcd99":"markdown","946786b7":"markdown","2ed627b7":"markdown","cbc600ba":"markdown","59bd8566":"markdown"},"source":{"078b3490":"from mlxtend.plotting import plot_decision_regions\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n#plt.style.use('ggplot')\n#ggplot is R based visualisation package that provides better graphics with higher level of abstraction","5182fe50":"# veri i\u00e7eri alma\ndiabetes_data = pd.read_csv('..\/input\/diabetes.csv')\n# Pergnancies = gebelik say\u0131s\u0131\n# BloodPressure = Kan Bas\u0131nc\u0131\n# Skin Thickness = Cilt Kal\u0131nl\u0131\u011f\u0131\n# Insulin= \u0130ns\u00fclin \n# BMIBody mass index = K\u00fctle Endeksi \n# Age = Ya\u015f\n# Outcome = 1(Diabet) - 0 (Diabet De\u011fil)","b5e6e249":"# ilk 10 g\u00f6zleme bakarak veri hakk\u0131nda ilk izlenimi olu\u015fturma\ndiabetes_data.head(10)","25258f8d":"diabetes_data.info()\n# 2 adet float  7 adet int dan olu\u015fan veri setine sahibiz ve bo\u015f g\u00f6zlemimiz bulunmamakta","38e5a87c":"diabetes_data.describe().T\n\n","d670ada0":"# 0 de\u011ferleri NA  olarak de\u011fi\u015ftirildi\ndiabetes_data_copy = diabetes_data.copy(deep = True)\ndiabetes_data_copy[['Glucose','BloodPressure','SkinThickness','Insulin','BMI']] = diabetes_data_copy[['Glucose','BloodPressure','SkinThickness','Insulin','BMI']].replace(0,np.NaN)","1bcd390c":"#null de\u011ferler tespit edildi\ndiabetes_data_copy.isnull().sum()","b8519786":"# copy datas\u0131 histogram\u0131\np = diabetes_data_copy.hist(figsize =( 15,15))","e3d14b99":"# datan\u0131n ilk halindeki histogramlar belirlenip aradaki de\u011fi\u015fim g\u00f6zle g\u00f6r\u00fclebilir hale geldi\nr = diabetes_data.hist(figsize = (20,20))","8f5c0ba8":"# u\u00e7 de\u011ferler tespiti ama\u00e7l\u0131 \u00e7al\u0131\u015fma\nsz = (9, 9)\nfig, ax = plt.subplots(figsize=sz)\nsns.boxplot(ax=ax, data=diabetes_data_copy,  orient=\"h\")\n","b7369973":"diabetes_data_copy.describe().T","a2b2f42c":"#\u0130nsulin verisi fazla u\u00e7 ve anlams\u0131z de\u011fer ta\u015f\u0131d\u0131\u011f\u0131ndan analiz g\u00fcvenli\u011fi amac\u0131yla \u00e7\u0131kart\u0131ld\u0131\ndiabetes_data_copy.drop(columns=['Insulin'],axis= 1, inplace=True )","4cedf55c":"diabetes_data_copy.tail()","ef9dcdc2":"diabetes_data_copy['Glucose'].fillna(diabetes_data_copy['Glucose'].mean(), inplace = True)\ndiabetes_data_copy['BloodPressure'].fillna(diabetes_data_copy['BloodPressure'].mean(), inplace = True)\ndiabetes_data_copy['SkinThickness'].fillna(diabetes_data_copy['SkinThickness'].median(), inplace = True)\ndiabetes_data_copy['BMI'].fillna(diabetes_data_copy['BMI'].median(), inplace = True)","bdbff4bb":"#Gl\u00fckoz de\u011ferleri anlaml\u0131 bir ayr\u0131\u015ft\u0131rma sa\u011flamaktad\u0131r\ng = sns.catplot(x=\"Outcome\", y=\"Glucose\", data=diabetes_data_copy,\n                height=6, kind=\"bar\", palette=\"muted\")","a76efe6e":"g = sns.catplot(x=\"Outcome\", y=\"BloodPressure\", data=diabetes_data_copy,\n                height=6, kind=\"bar\", palette=\"muted\")","c825f032":"g = sns.catplot(x=\"Outcome\", y=\"SkinThickness\", data=diabetes_data_copy,\n                height=6, kind=\"bar\", palette=\"muted\")","931fb7ce":"g = sns.catplot(x=\"Outcome\", y=\"BMI\", data=diabetes_data_copy,\n                height=6, kind=\"bar\", palette=\"muted\")","af7d09ec":"g = sns.catplot(x=\"Outcome\", y=\"DiabetesPedigreeFunction\", data=diabetes_data_copy,\n                height=6, kind=\"bar\", palette=\"muted\")","e4a5b821":"g = sns.catplot(x=\"Outcome\", y=\"Age\", data=diabetes_data_copy,\n                height=6, kind=\"bar\", palette=\"muted\")","826a626d":"# Kan bas\u0131nc\u0131 do\u015f\u0131ndaki de\u011fi\u015fkenlerimizde 0 vve 1 baz\u0131ndan anlaml\u0131 ayr\u0131\u015fma g\u00f6zlenmektedir.","2327a853":"from pandas.tools.plotting import scatter_matrix\np=scatter_matrix(diabetes_data,figsize=(25, 25))","bcac2609":"p=sns.pairplot(diabetes_data_copy, hue = 'Outcome')","50e53564":"#korelasyon tespiti ama\u00e7l\u0131 headmap kullan\u0131ld\u0131\nplt.figure(figsize=(12,10))  # on this line I just set the size of figure to 12 by 10.\np=sns.heatmap(diabetes_data_copy.corr(), annot=True,cmap ='RdYlGn')  # seaborn has very simple solution for heatmap\n# en y\u00fcksek korelasyon Gl\u00fckoz ile en d\u00fc\u015f\u00fck korelasyon kan bas\u0131nc\u0131 ile","1acaa12c":"y= diabetes_data_copy.Outcome.values\nx_data = diabetes_data_copy.drop([\"Outcome\"], axis=1)","42bade88":"y","dd635662":"x_data.head()","e1befe88":"#normalizasyon\nx =( x_data - np.min(x_data))\/(np.max(x_data)-np.min(x_data))","9ad4390f":"x.head()","4906870f":"#Train - Test ayr\u0131m\u0131\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(x,y,test_size=1\/3,random_state=44 )","544621d7":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(3)\nknn.fit(X_train,y_train)\nprediction = knn.predict(X_train)\nprint(knn.score(X_train,y_train))","3267c7ed":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(3)\nknn.fit(X_train,y_train)\nprediction = knn.predict(X_test)\nprint(knn.score(X_test,y_test))","fbf98937":"from sklearn.neighbors import KNeighborsClassifier\n\n\ntest_scores = []\ntrain_scores = []\n\nfor i in range(1,15):\n\n    knn = KNeighborsClassifier(i)\n    knn.fit(X_train,y_train)\n    \n    train_scores.append(knn.score(X_train,y_train))\n    test_scores.append(knn.score(X_test,y_test))","6fb30efc":"## score that comes from testing on the same datapoints that were used for training\nmax_train_score = max(train_scores)\ntrain_scores_ind = [i for i, v in enumerate(train_scores) if v == max_train_score]\nprint('Max train score {} % and k = {}'.format(max_train_score*100,list(map(lambda x: x+1, train_scores_ind))))","a2d8c18e":"## score that comes from testing on the datapoints that were split in the beginning to be used for testing solely\nmax_test_score = max(test_scores)\ntest_scores_ind = [i for i, v in enumerate(test_scores) if v == max_test_score]\nprint('Max test score {} % and k = {}'.format(max_test_score*100,list(map(lambda x: x+1, test_scores_ind))))","0c11b111":"plt.figure(figsize=(12,5))\np = sns.lineplot(range(1,15),train_scores,marker='*',label='Train Score')\np = sns.lineplot(range(1,15),test_scores,marker='o',label='Test Score')","2ecd0159":"#Setup a knn classifier with k neighbors\nknn = KNeighborsClassifier(3)\n\nknn.fit(X_train,y_train)\nknn.score(X_test,y_test)","2736d639":"#import confusion_matrix\nfrom sklearn.metrics import confusion_matrix\n#let us get the predictions using the classifier we had fit above\ny_pred = knn.predict(X_test)\nconfusion_matrix(y_test,y_pred)\npd.crosstab(y_test, y_pred, rownames=['True'], colnames=['Predicted'], margins=True)","ea59fdc2":"y_pred = knn.predict(X_test)\nfrom sklearn import metrics\ncnf_matrix = metrics.confusion_matrix(y_test, y_pred)\np = sns.heatmap(pd.DataFrame(cnf_matrix), annot=True, cmap=\"YlGnBu\" ,fmt='g')\nplt.title('Confusion matrix', y=1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')","a1abb36f":"<a id=\"3\"><\/a><br>\n# Veri Haz\u0131rlama ve Train\/Test","843664b3":"#### Pair plot","93b1448e":"<a id=\"4\"><\/a><br>\n# Modelleme - KNN","22628f35":"#### Scatter matrix of uncleaned data","7e5b0b52":"#### En iyi train score 1 en iyi test score 9 olarak belirlenmi\u015ftir.","91213425":"### \u00c7al\u0131\u015fma test verisi \u00fczerinden de\u011ferlendirildi\u011finde  256 test g\u00f6zleminden 99 tanesi Diyabet 157 tanesi diyabet olmayan g\u00f6zlemden olu\u015fmaktad\u0131r.\n### Bunlardan 157 diyabet olmayan g\u00f6zlemin 137 tanesi, 99 diyabetg\u00f6zlemin 60 tanesi do\u011fru s\u0131n\u0131fland\u0131r\u0131lm\u0131\u015ft\u0131r.","ed0f4e43":"## Plotting after Nan removal ","06dbcd99":"# Model Performans\u0131","946786b7":"<a id=\"2\"><\/a><br>\n# Veri Temizleme ve G\u00f6rselle\u015ftirme","2ed627b7":"<a id=\"1\"><\/a><br>\n# Veri Y\u00fckleme ve Tan\u0131ma ","cbc600ba":"# A\u015fa\u011f\u0131da belirtilen 5 s\u00fctunun 0 de\u011feri anlams\u0131z\n\n1. Glucose\n2. BloodPressure\n3. SkinThickness\n4. Insulin\n5. BMI","59bd8566":"## \u00c7al\u0131\u015fma Metodolijisi\n1.  [Veri Y\u00fckleme ve Veri Tan\u0131ma](#1)\n1.  [Veri Temizleme ve G\u00f6rselle\u015ftirme ](#2)\n1.  [Veri Haz\u0131rlama ve Train\/Test ](#3)\n1.  [Modelleme - KNN ](#4)\n"}}