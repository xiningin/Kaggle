{"cell_type":{"9101a98f":"code","708dcf2a":"code","dcbf8cde":"code","046a27c8":"code","54e858dd":"code","7c6fad90":"code","694153f3":"code","8f729b52":"code","2cd4e299":"code","b2f24024":"code","b60b0da3":"code","1f036d8c":"code","e1a059e4":"code","05dcd47f":"code","83789f69":"code","6c06e3b1":"code","979c2e1c":"code","503de7a6":"code","ffbb2f76":"code","8c424cd2":"code","b836c40c":"code","496a15bc":"code","f8a88642":"markdown","b65b6173":"markdown","e3fbcc9d":"markdown","129aff86":"markdown","3179cbbe":"markdown","43556ea0":"markdown","019c3508":"markdown","b5ba972f":"markdown","a6bb4f6f":"markdown","b5b11234":"markdown","a6da20e8":"markdown","034ee9a3":"markdown"},"source":{"9101a98f":"import pandas as pd\nimport numpy as np\nimport folium\nfrom geopy.geocoders import Nominatim\nimport json\nimport requests # library to handle requests\nfrom pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\nimport matplotlib.pyplot as plt\nfrom geopy.extra.rate_limiter import RateLimiter","708dcf2a":"tweets_df=pd.read_csv('..\/input\/covid19-tweets\/covid19_tweets.csv',header=0)","dcbf8cde":"tweets_df.head()","046a27c8":"tweets_df.info()","54e858dd":"tweets_df.describe()","7c6fad90":"tweets_df.dropna(inplace=True,subset=['user_location','hashtags'])\ntweets_df.info()","694153f3":"tweets_df = tweets_df.replace('[^a-zA-Z0-9 ]', '', regex=True)\ntweets_df.head()","8f729b52":"tweets_df.reset_index(inplace=True,drop=True)\ntweets_df.head()","2cd4e299":"\"\"\"geolocator = Nominatim(user_agent=\"ny_explorer\")\ngeocode = RateLimiter(geolocator.geocode, min_delay_seconds=1)\nlongitude=[]\nlatitude=[]\n\n#address=['chennai','dallas','hsjhgdgh','London, UK']\n\nfor i in tweets_df['user_location'].astype(str)[0:10]:\n    location = geolocator.geocode(i)\n    if location:\n        latitude.append(location.latitude)\n        longitude.append(location.longitude)\n    else:\n        latitude.append(np.NaN)\n        longitude.append(np.NaN)\n    \n    \nprint(len(latitude))    \"\"\"","b2f24024":"tweets_df.isnull().any()","b60b0da3":"tweets_df['date']=pd.to_datetime(tweets_df['date'])","1f036d8c":"top_july = tweets_df['user_location'][pd.DatetimeIndex(tweets_df['date']).month == 7].value_counts()","e1a059e4":"top_august = tweets_df['user_location'][pd.DatetimeIndex(tweets_df['date']).month == 8].value_counts()\ntop_all_the_time = (top_august + top_july).sort_values(ascending = False)","05dcd47f":"fig, ax = plt.subplots(figsize = (13,5))\nplt.xlabel(\"Location\", fontsize = 12)\nplt.ylabel(\"NO. Tweets\", fontsize = 12)\ntop_july[0:10].plot(kind='bar', title = \"Top 10 Countries Posting about Covid-19 in July\" )","83789f69":"fig, ax=plt.subplots(figsize=(13,5))\nplt.xlabel(\"Top Locations\")\nplt.ylabel(\"Tweet Count\")\nplt.title(\"Top 10 Countries Posting about Covid-19 in August\")\ntop_august[0:10].plot(kind='bar')","6c06e3b1":"a=tweets_df['source'].value_counts()","979c2e1c":"a[0:5].plot(kind='bar')","503de7a6":"tags=tweets_df['hashtags'].value_counts()","ffbb2f76":"tags[0:10].plot(kind='bar')","8c424cd2":"user_status=tweets_df['user_verified'].value_counts()","b836c40c":"user_status.plot(kind='bar')\nplt.xlabel(\"Account verification status\")\nplt.ylabel(\"Number of tweets\")\nplt.title(\"Verified account tweets vs Unverified account tweets\")\nplt.xticks([False,True],['Unverified','Verified'])","496a15bc":"pwd","f8a88642":"<h2><b>Removing all non alphanumeric characters from the DataFrame<\/b><\/h2>","b65b6173":"<h2><b>Top hashtags used<\/b><\/h2>","e3fbcc9d":"<p1><b>In this note we would be investigating a set of Twitter tweets that uses the hashtag \"COVID19\" and plotting the location of the tweeters in a map. <\/b><\/p1>","129aff86":"<h1><b>Twitter tweet analysis<\/b><\/h1>","3179cbbe":"<h2><b>Top places based on tweets in July<\/b><\/h2>","43556ea0":"<h2><b>Top places based on tweets in August<\/b><\/h2>","019c3508":"<h1><b>End of my basic analysis. Feel free to share your comments!!!!<\/b><\/h1>","b5ba972f":"<b><h2>Lets drop those rows which does not have value for location or hashtags<\/h2><\/b>","a6bb4f6f":"<h2><b>Summary statistics<\/b><\/h2>","b5b11234":"<h2><b>Top sources of tweets<\/b><\/h2>","a6da20e8":"<h2><b>Lets see if there are any null entries in the DataFrame<\/b><\/h2>","034ee9a3":"<p1><b>The below cell is commented as its time consuming process to get the latitude and longitude of each location present in this data set. If suppose we can get this, we can then use Folium to plot the tweet density distribution on a world map to make this more interactive<\/b><p1>"}}