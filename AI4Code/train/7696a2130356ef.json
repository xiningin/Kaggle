{"cell_type":{"5bc78fa5":"code","654b45d8":"code","2bb7ec01":"markdown","12abfa7f":"markdown"},"source":{"5bc78fa5":"import numpy as np\nimport pandas as pd\n\nclass Market :\n    def __init__(self) :\n        pass\n    \n    def move_apprx(self, x, y) :\n        self.dgdp = {'Finland' : 0.973, 'Norway' : 0.92, 'Sweden' : 0.946}\n        for c in x['country'].unique() :\n            for s in x['store'].unique() :\n                for p in x['product'].unique() :\n                    a = x[(x['country'] == c) & (x['store'] == s) & \n                          (x['product'] == p) & (x['year'] == '2018')]['num_sold'].to_numpy(dtype = np.float64)\n                    a = np.concatenate((a[:4], a[5:362], a[361:]), axis = None)\n                    a *= self.dgdp[c]\n                    y.loc[(y['country'] == c) & (y['store'] == s) & (y['product'] == p), 'num_sold'] = a\n                    y[['row_id', 'num_sold']].to_csv('submission.csv', index = False)\n        return y\n                    \n    def pre_processing(self, df) :\n        df = df.drop(df[df['date'] == '2016-02-29'].index)\n        df['year'] = df['date'].map(lambda x : x[:4])\n        return df","654b45d8":"md = Market()\nx = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/train.csv')\ny = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/test.csv')\nx = md.pre_processing(x)\nmd.move_apprx(x, y)","2bb7ec01":"I almost copy & paste 2018 data to 2019. But there are two differences between them.  \nFirst one is that predict data is multiplied by some coefficients (2019's GDP \/ 2018's GDP) for each conutry.  \nSecond one is to offset it one day so that 2018.1.6 - 2018.12.28 matches to 2019.1.5 - 2019.12.28. By doing so, weekend effect can be considered.  \nAlso I remained new and end year because they have very high num_sold.\n","12abfa7f":"### Thank you"}}