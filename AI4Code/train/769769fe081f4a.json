{"cell_type":{"c0a7c786":"code","0a04bebe":"code","ea8c85f8":"code","c319eba3":"code","9e675198":"code","bb37fa7a":"code","84b62327":"code","665e5c52":"code","0c8bd0e9":"code","2d4db03c":"code","972756c2":"code","7ca00d77":"code","79c7ca13":"code","5c8227fd":"code","3028189b":"code","5d710e8b":"code","32833ad3":"code","1c6be39c":"code","8e28efdc":"code","fa13df40":"code","d907bb97":"code","3bccf29e":"code","cade808f":"markdown","b395ff9f":"markdown","6bf96847":"markdown"},"source":{"c0a7c786":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport warnings\nwarnings.filterwarnings(\"ignore\")","0a04bebe":"# load data\ntrain_data = pd.read_csv('..\/input\/leaf-classification\/train.csv.zip', index_col ='id')\ntest_data = pd.read_csv('..\/input\/leaf-classification\/test.csv.zip')","ea8c85f8":"test_ids = test_data.id\ntest_data = test_data.drop(['id'], axis =1)","c319eba3":"train_data.head()","9e675198":"# taking care of missing values\ntrain_data.isnull().any().sum()","bb37fa7a":"test_data.head()","84b62327":"test_data.isnull().any().sum()","665e5c52":"# encoding catagorical\ntrain_data.info()","0c8bd0e9":"test_data.info()","2d4db03c":"train_data.shape","972756c2":"test_data.shape","7ca00d77":"train_data.describe().T","79c7ca13":"test_data.describe().T","5c8227fd":"train_data['species'].nunique()","3028189b":"# IV and DV\nx = train_data.drop('species',axis=1)\ny = train_data['species']","5d710e8b":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\ny_fit = encoder.fit(train_data['species'])\ny_label = y_fit.transform(train_data['species']) \nclasses = list(y_fit.classes_) \nclasses","32833ad3":"# splitting\nfrom sklearn.model_selection import  train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y_label, test_size = 0.2, random_state =1)","1c6be39c":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 40)\nclassifier.fit(x_train, y_train)","8e28efdc":"from sklearn.metrics import classification_report\npredictions = classifier.predict(x_test)\nprint (classification_report(y_test, predictions))","fa13df40":"final_predictions = classifier.predict_proba(test_data)","d907bb97":"submission = pd.DataFrame(final_predictions, columns=classes)\nsubmission.insert(0, 'id', test_ids)\nsubmission.reset_index()","3bccf29e":"submission.to_csv('result.csv', index = False)","cade808f":"# Part 1: Data Preprocessing","b395ff9f":"The target y is the only catagorical column","6bf96847":"# Part 2: Building model"}}