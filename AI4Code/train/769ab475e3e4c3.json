{"cell_type":{"989b84d5":"code","84325020":"code","512040c6":"code","3a9a5367":"code","9e1ac619":"code","0b7463b5":"code","d2df6823":"code","0020c49f":"markdown","3396ba4b":"markdown","63124cb8":"markdown"},"source":{"989b84d5":"!pip install textdistance","84325020":"import pandas as pd\nimport numpy as np\nimport textdistance\nimport re\nfrom collections import Counter\nwords = []\nwith open('..\/input\/training-data\/book.txt', 'r') as f:\n    file_name_data = f.read()\n    file_name_data=file_name_data.lower()\n    words = re.findall('\\w+',file_name_data)\n# This is our vocabulary\nV = set(words)\nprint(f\"The first sixteen words in the text are: \\n{words[0:15]}\")\n","512040c6":"print(f\"There are {len(V)} unique words in the vocabulary.\")","3a9a5367":"word_freq_dict = {}  \nword_freq_dict = Counter(words)\nprint(word_freq_dict.most_common()[0:15])","9e1ac619":"probs = {}     \nTotal = sum(word_freq_dict.values())    \nfor k in word_freq_dict.keys():\n    probs[k] = word_freq_dict[k]\/Total","0b7463b5":"def my_autocorrect(input_word):\n    input_word = input_word.lower()\n    if input_word in V:\n        return('Your word seems to be correct')\n    else:\n        similarities = [1-(textdistance.Jaccard(qval=2).distance(v,input_word)) for v in word_freq_dict.keys()]\n        df = pd.DataFrame.from_dict(probs, orient='index').reset_index()\n        df = df.rename(columns={'index':'Word', 0:'Prob'})\n        df['Similarity'] = similarities\n        output = df.sort_values(['Similarity', 'Prob'], ascending=False).head()\n        return(output)","d2df6823":"my_autocorrect('gaurav')","0020c49f":"# Finding Similar Words","3396ba4b":"Almost every smartphone brand irrespective of its price provides an autocorrect feature in their keyboards today. ","63124cb8":"# Relative Frequency of words"}}