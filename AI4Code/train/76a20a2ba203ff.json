{"cell_type":{"cca4546f":"code","7ace6ecf":"code","beab673a":"code","9ec5a1f8":"code","4533c33f":"code","531d6c7b":"code","05a2b492":"code","ed25ab4e":"code","e7036541":"code","88be52d7":"code","291dcf5d":"code","ca0a1833":"code","ed63ba38":"code","ad024035":"code","9fe1bec6":"code","73839823":"code","64552bb0":"code","8b5ad809":"code","bb81d771":"code","7d02f582":"markdown","47db325b":"markdown","98ff4695":"markdown","f26ab467":"markdown","bec67dff":"markdown","617cfc38":"markdown"},"source":{"cca4546f":"import numpy as np\nfrom tqdm import tqdm\nimport PIL\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nfrom tensorflow.keras.applications.xception import preprocess_input,Xception\nimport math\nfrom sklearn.neighbors import NearestNeighbors\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nfrom sklearn.decomposition import PCA","7ace6ecf":"img_size =224\n\nmodel = Xception(weights='imagenet', include_top=False,input_shape=(img_size, img_size, 3),pooling='max')","beab673a":"batch_size = 64\nroot_dir ='..\/input\/caltech256\/'\n\nimg_gen = ImageDataGenerator(preprocessing_function=preprocess_input)\n\ndatagen = img_gen.flow_from_directory(root_dir,\n                                        target_size=(img_size, img_size),\n                                        batch_size=batch_size,\n                                        class_mode=None,\n                                        shuffle=False)\n\nnum_images = len(datagen.filenames)\nnum_epochs = int(math.ceil(num_images \/ batch_size))\n\nfeature_list = model.predict_generator(datagen, num_epochs,verbose = 1)","9ec5a1f8":"print(\"Total images   = \", len(datagen.classes))\nprint(\"Shape of feature_list = \", feature_list.shape)","4533c33f":"plt.imshow(plt.imread('..\/input\/caltech256\/256_ObjectCategories\/008.bathtub\/008_0002.jpg'))\nplt.show()","531d6c7b":"\nfilenames = [root_dir + '\/' + s for s in datagen.filenames]\n","05a2b492":"neighbors = NearestNeighbors(n_neighbors=6,\n                             algorithm='ball_tree',\n                             metric='euclidean')\nneighbors.fit(feature_list)","ed25ab4e":"img_path ='..\/input\/flower-color-images\/flower_images\/flower_images\/0011.png'\ninput_shape = (img_size, img_size, 3)\nimg = image.load_img(img_path, target_size=(input_shape[0], input_shape[1]))\nimg_array = image.img_to_array(img)\nexpanded_img_array = np.expand_dims(img_array, axis=0)\npreprocessed_img = preprocess_input(expanded_img_array)\npreprocessed_img","e7036541":"plt.imshow(plt.imread('..\/input\/flower-color-images\/flower_images\/flower_images\/0011.png'))\nplt.show()","88be52d7":"test_img_features = model.predict(preprocessed_img, batch_size=1)\n\n_, indices = neighbors.kneighbors(test_img_features)","291dcf5d":"def similar_images(indices):\n    plt.figure(figsize=(15,10))\n    plotnumber = 1    \n    for index in indices:\n        if plotnumber<=len(indices) :\n            ax = plt.subplot(2,3,plotnumber)\n            plt.imshow(mpimg.imread(filenames[index]), interpolation='lanczos') \n            plt.xlabel(img_path.split('.')[0] + 'Similar Image'+str(index)+'\\n',fontsize=20)\n            plotnumber+=1\n    plt.tight_layout()\n\nprint(indices.shape)\n\nplt.imshow(mpimg.imread(img_path), interpolation='lanczos')\nplt.xlabel(img_path.split('.')[0] + '_Original Image',fontsize=20)\nplt.show()\nprint('********* Predictions ***********')\nprint(len(indices[0]))\nsimilar_images(indices[0])","ca0a1833":"pca = PCA(n_components=120)\npca.fit(feature_list)\ncompressed_features = pca.transform(feature_list)","ed63ba38":"neighbors_pca_features = NearestNeighbors(n_neighbors=6,\n                             algorithm='brute',\n                             metric='euclidean').fit(compressed_features)","ad024035":"test_img_compressed = pca.transform(test_img_features)\ndistances, indices = neighbors_pca_features.kneighbors(test_img_compressed)\nprint(indices.shape)\nplt.imshow(mpimg.imread(img_path), interpolation='lanczos')\nplt.xlabel(img_path.split('.')[0] + '_Original Image',fontsize=20)\nplt.show()\nprint('********* Predictions  after PCA ***********')\nsimilar_images(indices[0])","9fe1bec6":"img_path ='..\/input\/cat-and-dog\/training_set\/training_set\/dogs\/dog.1005.jpg'\ninput_shape = (img_size, img_size, 3)\nimg = image.load_img(img_path, target_size=(input_shape[0], input_shape[1]))\nimg_array = image.img_to_array(img)\nexpanded_img_array = np.expand_dims(img_array, axis=0)\npreprocessed_img = preprocess_input(expanded_img_array)","73839823":"plt.imshow(plt.imread('..\/input\/cat-and-dog\/training_set\/training_set\/dogs\/dog.1005.jpg'))\nplt.show()","64552bb0":"test_img_features = model.predict(preprocessed_img, batch_size=1)\n\n_, indices = neighbors.kneighbors(test_img_features)","8b5ad809":"\nplt.imshow(mpimg.imread(img_path), interpolation='lanczos')\nplt.xlabel(img_path.split('.')[0] + '_Original Image',fontsize=20)\nplt.show()\nprint('********* Predictions ***********')\nprint(len(indices[0]))\nsimilar_images(indices[0])","bb81d771":"test_img_compressed = pca.transform(test_img_features)\ndistances, indices = neighbors_pca_features.kneighbors(test_img_compressed)\nprint(indices.shape)\nplt.imshow(mpimg.imread(img_path), interpolation='lanczos')\nplt.xlabel(img_path.split('.')[0] + '_Original Image',fontsize=20)\nplt.show()\nprint('********* Predictions after PCA ***********')\nsimilar_images(indices[0])","7d02f582":"## USING XCEPTION NETWORKS TO PREPROCESS CALTECH DATASET","47db325b":"### FINDING THE IMAGE ON THE BASIS OF SIMILIARITY OF IMAGE MATRIX ON THE DATASET","98ff4695":"### TEST CASE FOR THE DATASET CALTECH IS AN IMAGE FORM FLOWER DATASET","f26ab467":"## DIMENSIONALITY REDUCTION","bec67dff":"## ALGORITHM USED KNN (n=6)","617cfc38":"### CHOOSING AN IMAGE FROM FLOWER-COLOR-IMAGES"}}