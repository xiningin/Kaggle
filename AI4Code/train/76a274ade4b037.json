{"cell_type":{"7a4db919":"code","bfe4e72f":"code","5c81d663":"code","b38c48f4":"code","fccf7ab1":"code","7da07845":"code","a1ee4240":"code","59078dce":"code","56886750":"code","b1e6bc28":"code","b0bab95a":"code","6031b7f2":"markdown","a00538ce":"markdown","2715be47":"markdown"},"source":{"7a4db919":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.preprocessing import StandardScaler , RobustScaler\n\nfrom sklearn.model_selection import GridSearchCV , train_test_split , cross_val_score\n\nfrom sklearn.linear_model import LogisticRegression\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\ntrain = pd.read_csv('..\/input\/train.csv' , index_col = 'id')\ntest = pd.read_csv('..\/input\/test.csv'  , index_col = 'id')\n\nprint(os.listdir(\"..\/input\/\"))\n","bfe4e72f":"y = train['target']\ntrain = train.drop(['target'] , axis = 1)\ntrain.info()","5c81d663":"test.info()","b38c48f4":"train.head()","fccf7ab1":"scaler = StandardScaler()\ntrain = scaler.fit_transform(train)\ntest = scaler.fit_transform(test)\n","7da07845":"clf = LogisticRegression(class_weight='balanced', solver='liblinear', penalty ='l1', C= 0.1, max_iter=10000)\nclf.fit(train, y)\nscores = cross_val_score(clf, train, y, cv=5)\nscores","a1ee4240":"clf.fit(train, y)\nans = clf.predict_proba(test)\nans","59078dce":"submit = pd.read_csv('..\/input\/sample_submission.csv')\nsubmit.head()","56886750":"ans","b1e6bc28":"submit['target'] = ans[:,1]","b0bab95a":"submit.to_csv('submit.csv', index = False)","6031b7f2":"##Importing data","a00538ce":"Required result is stored in second column so, let's extract it .","2715be47":"Create submition file"}}