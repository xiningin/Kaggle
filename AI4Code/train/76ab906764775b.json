{"cell_type":{"5d6f0c85":"code","9c39b183":"code","308c6caf":"code","4b88e40b":"code","70abe6cd":"code","c9570123":"code","b28eb098":"code","d45779d1":"code","dcb0804e":"code","afd5b62e":"code","3c697510":"code","944ecfb3":"code","ba5e5bc8":"code","221e2451":"code","36d745ca":"code","4293de85":"code","54e74649":"code","3ca6b5b0":"code","6a9574f7":"code","68e3f969":"code","ea06e32a":"code","d01a0ffd":"code","72b91627":"code","d08b1bc9":"code","3259c98e":"code","d27c0fdb":"code","8d7ec14c":"code","1f6576fd":"code","461da95d":"code","64ec44cd":"code","489479a1":"code","4df4c6ae":"code","1f4ba691":"code","500c243d":"code","66b1944d":"code","ad563240":"code","8a1b8385":"code","040746d2":"code","62d7c590":"code","08b6a405":"code","4dcb2eb9":"code","59b9ded0":"code","1447c439":"code","8073333b":"code","7cab82cf":"code","29365418":"code","309ab419":"code","e3496070":"code","fa3a3e57":"code","04606abd":"code","5fe0f712":"code","d007b959":"code","a2ade4a6":"code","58d2e3b5":"code","2ba87d4f":"code","577d026e":"code","2f035897":"code","5e1b9149":"code","5fd48bd5":"code","9c4b9b7c":"code","da4d9eff":"code","4522e138":"code","5c355278":"code","905f7e86":"code","c19ecb7e":"code","75b57e1b":"code","56529601":"code","aa50ac06":"code","5b04a811":"code","1b5d3b57":"code","584c99dc":"code","ef20ca40":"code","ee7c0420":"code","cc18187c":"code","f81f739c":"code","ed6a5926":"code","2828c50f":"code","c2fca87c":"code","7784cbb5":"code","f5a07437":"code","6308c6de":"code","ed4b2e68":"markdown","a5c1a09e":"markdown","7b5587ab":"markdown","cb66387e":"markdown","96954c2a":"markdown","4f7e2050":"markdown","9da0bfd7":"markdown","03b5feb9":"markdown","8fc68e97":"markdown","6f0fa470":"markdown","77190fb1":"markdown","c1e714b1":"markdown","eb363d20":"markdown","4862a428":"markdown","087c14a6":"markdown","b6fa4cc4":"markdown","97cc0c96":"markdown","03aedafe":"markdown","02afa4f9":"markdown","f07e9554":"markdown","b822deb5":"markdown","63a7ccb2":"markdown","82f4af26":"markdown","e6aecf1c":"markdown","eceb585f":"markdown","1fdfb352":"markdown","af55b63f":"markdown","1d7659a8":"markdown","3cbcbe64":"markdown","2d9db9d5":"markdown","e522fc5c":"markdown","ec81edad":"markdown","20039c55":"markdown","ef95635e":"markdown","7174e72f":"markdown","d09cc804":"markdown","aaf79932":"markdown","5281cd65":"markdown","1a5b82dc":"markdown","00f46676":"markdown","d2fab463":"markdown","23d5c172":"markdown","b8330222":"markdown","839c2496":"markdown","6df89ab0":"markdown","44769c45":"markdown","7416c899":"markdown","034a8035":"markdown","6a0ac9fc":"markdown","e6ee97f2":"markdown","073920f0":"markdown","3d205126":"markdown","8b9e9229":"markdown","ae31a73b":"markdown","868d839b":"markdown","0c9d11a7":"markdown","a4ea829d":"markdown","2c08ac80":"markdown","87a4b380":"markdown","c6e6ae93":"markdown","8bda52aa":"markdown","f6891b92":"markdown","c37972a7":"markdown","a0fa4b66":"markdown","e8a163cd":"markdown","aaeb8bc1":"markdown","d13a7925":"markdown","fc847f3d":"markdown","ce095e46":"markdown","6597ddf7":"markdown"},"source":{"5d6f0c85":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split ,GridSearchCV ,RandomizedSearchCV","9c39b183":"Data_train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\nData_test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\npredicted=pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\nData_test[\"Survived\"]=predicted[\"Survived\"]\nData=pd.concat([Data_train,Data_test],sort=False)","308c6caf":"Data_train.shape","4b88e40b":"Data_test.shape","70abe6cd":"Data.shape","c9570123":"Data_train.columns.values","b28eb098":"Data[\"Sex\"].value_counts(normalize=False)","d45779d1":"ax=sns.countplot(x=Data.Sex,data=Data)","dcb0804e":"\"the Percentage of Gender who are Survived :\\n\",Data_train[\"Sex\"][Data_train[\"Survived\"]==1].value_counts(normalize=False)","afd5b62e":"\"the Percentage of Gender who are not Survived :\\n\",Data_train[\"Sex\"][Data_train[\"Survived\"]==0].value_counts(normalize=False)","3c697510":"ax=sns.countplot(x=Data_train.Survived,data=Data_train,hue=Data_train.Sex)\nplt.title(\"The proportion of survivors to the number of Females & Males\")","944ecfb3":"Data[\"Pclass\"].value_counts(dropna=False,normalize=True)*100","ba5e5bc8":"ax=sns.countplot(Data[\"Pclass\"])","221e2451":"for p, label in zip(ax.patches, Data[\"Pclass\"].value_counts()):\n    ax.annotate(label, (p.get_x()+0.375, p.get_height()+0.15))","36d745ca":"Classes=np.unique(Data_train[\"Pclass\"])\nData_train[\"Pclass\"][Data_train[\"Sex\"]==\"male\"].value_counts(normalize=True)*100","4293de85":"Data_train[\"Pclass\"][Data_train[\"Sex\"]==\"female\"].value_counts(normalize=True)*100","54e74649":"ax=sns.countplot(x=Data_train.Pclass,data=Data_train,hue=Data_train.Sex)\nplt.title(\"The proportion of males and females \")","3ca6b5b0":"Data_train[\"Sex\"][Data_train[\"Pclass\"]==1].value_counts(normalize=True)*100","6a9574f7":"Data_train[\"Sex\"][Data_train[\"Pclass\"]==2].value_counts(normalize=True)*100","68e3f969":"Data_train[\"Sex\"][Data_train[\"Pclass\"]==3].value_counts(normalize=True)*100","ea06e32a":"ax=sns.countplot(x=Data_train.Sex,data=Data_train,hue=Data_train.Pclass)\nplt.title(\"The proportion of Survivors (male & females) in each class\")","d01a0ffd":"Data_train[(Data_train[\"Survived\"]==1) & (Data_train[\"Sex\"]==\"male\")][\"Pclass\"].value_counts(dropna=False,normalize=True)*100","72b91627":"Data_train[(Data_train[\"Survived\"]==1) & (Data_train[\"Sex\"]==\"female\")][\"Pclass\"].value_counts(dropna=False,normalize=True)*100","d08b1bc9":"sns.catplot(x=\"Survived\", col=\"Pclass\",hue='Sex', col_wrap=3,data=Data_train[Data_train['Pclass'].notnull()],kind=\"count\", height=3, aspect=0.8)","3259c98e":"Data_train[(Data_train[\"Survived\"]==1) & (Data_train[\"Pclass\"]==1)][\"Sex\"].value_counts(dropna=False,normalize=True)*100","d27c0fdb":"Data_train[(Data_train[\"Survived\"]==1) & (Data_train[\"Pclass\"]==2)][\"Sex\"].value_counts(dropna=False,normalize=True)*100","8d7ec14c":"Data_train[(Data_train[\"Survived\"]==1) & (Data_train[\"Pclass\"]==3)][\"Sex\"].value_counts(dropna=False,normalize=True)*100","1f6576fd":"SibSp=np.unique(Data[\"SibSp\"])\nsibsp_males=Data[\"SibSp\"][Data[\"Sex\"]==\"male\"].value_counts(normalize=True)*100\nsibsp_females=Data[\"SibSp\"][Data[\"Sex\"]==\"female\"].value_counts(normalize=True)*100\npd.DataFrame({\"male\":sibsp_males,\"female\":sibsp_females})","461da95d":"Parch_males=Data[\"Parch\"][Data[\"Sex\"]==\"male\"].value_counts(normalize=True)*100\nParch_females=Data[\"Parch\"][Data[\"Sex\"]==\"female\"].value_counts(normalize=True)*100\npd.DataFrame({\"male\":Parch_males,\"female\":Parch_females})","64ec44cd":"Data[\"Embarked\"].value_counts(normalize=True)*100","489479a1":"Data[\"Embarked\"][Data[\"Sex\"]==\"male\"].value_counts(normalize=True)*100","4df4c6ae":"Data[\"Embarked\"][Data[\"Sex\"]==\"female\"].value_counts(normalize=True)*100","1f4ba691":"Embarked = sns.FacetGrid(Data_train, row='Embarked', size=2.2, aspect=1.6)\nEmbarked.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\nEmbarked.add_legend()","500c243d":"Data.describe(include=\"all\")","66b1944d":"Data_train.info()","ad563240":"Data_test.info()","8a1b8385":"Data.isnull().sum().sort_values(ascending=False)","040746d2":"PassengersID_test=Data_test[\"PassengerId\"]\nData_train=Data_train.drop(columns=[\"PassengerId\",\"Ticket\",\"Cabin\"])\nData_test=Data_test.drop(columns=[\"PassengerId\",\"Ticket\",\"Cabin\"])\nData_train.shape","62d7c590":"Data_test.shape","08b6a405":"Data_train.info()","4dcb2eb9":"Data_test.info()","59b9ded0":"Data_train[\"SipSp_Parch\"]=Data_train[\"Parch\"]+Data_train[\"SibSp\"] \nData_test[\"SipSp_Parch\"]=Data_test[\"Parch\"]+Data_train[\"SibSp\"]    \nSibSp_Parch_train= np.unique(Data_train[\"SipSp_Parch\"])\nSibSp_Parch_train","1447c439":"SibSp_Parch_test= np.unique(Data_test[\"SipSp_Parch\"])\nSibSp_Parch_test","8073333b":"Data_test[\"SipSp_Parch\"]=Data_test[\"SipSp_Parch\"].astype(int)","7cab82cf":"Data_train=Data_train.drop(columns=[\"SibSp\",\"Parch\"])\nData_test=Data_test.drop(columns=[\"SibSp\",\"Parch\"])\nsns.catplot(x=\"Sex\", col=\"SipSp_Parch\",hue='Sex', col_wrap=3,data=Data_train[Data_train['SipSp_Parch'].notnull()],kind=\"count\", height=3, aspect=1)","29365418":"freq=Data[\"Embarked\"].dropna().mode()[0]\nfreq","309ab419":"Data_train[\"Embarked\"]=Data_train[\"Embarked\"].fillna(freq)","e3496070":"for data in [Data_train,Data_test]:\n    data[\"Sex\"]=data[\"Sex\"].map({\"female\":1,\"male\":0})\n    data[\"Embarked\"]=data[\"Embarked\"].map({\"S\":0,\"C\":1,\"Q\":2}).astype(int)","fa3a3e57":"grid = sns.FacetGrid(Data_train, row='SipSp_Parch', col='Sex', size=2.2, aspect=1.8)\ngrid.map(plt.hist, 'Age', alpha=.5, bins=20)\ngrid.add_legend()","04606abd":"Data_train[(Data_train[\"Sex\"]==0)&(Data_train[\"SipSp_Parch\"]==10)]","5fe0f712":"ar=np.zeros((2,11))\nfor data in [Data_train,Data_test]:\n    for i in range(0,2):\n        for j in range(0,11):\n            predicted_Age=data[(data[\"Sex\"]==i) & (data[\"SipSp_Parch\"]==j)][\"Age\"].dropna()\n            predicted=predicted_Age.mean()\n            ar[i,j]=round(predicted,1)\n\n        arr=ar[np.logical_not(np.isnan(ar))] # to ignore the nan values in ar\n        print(np.mean(arr))\n\n        \n        for val in ar:\n\n            if np.isnan(np.nan):\n                ar[np.isnan(ar)]=round(np.mean(arr),1)\n\n\n    print(ar)          \n    for i in range(0,2):\n        for j in range(0,11):\n            data.loc[(data.Age.isnull()) & (data.Sex == i) & (data.SipSp_Parch == j),\"Age\"]=ar[i,j]\n            \n       \nfor data in [Data_train,Data_test]:\n    for i in range(0,2):\n        for j in SibSp_Parch_train:\n            data.loc[(data.Age.isnull()) & (data.Sex==i) & (data.SipSp_Parch==j),\"Age\"]=ar[i,j]\n","d007b959":"Data_test[\"Fare\"]=Data_test[\"Fare\"].fillna(np.mean(Data_test.Fare))\nData_test[\"Fare\"]=Data_test[\"Fare\"].astype(int)\nData_train[\"Fare\"]=Data_train[\"Fare\"].astype(int)","a2ade4a6":"Data_train[\"Age_band\"]=pd.cut(Data_train[\"Age\"],[0,16,32,48,64,80],labels=[\"0-16\",\"16-32\",\"32-48\",\"48-64\",\"64-80\"])\nData_test[\"Age_band\"]=pd.cut(Data_train[\"Age\"],[0,16,32,48,64,80],labels=[\"0-16\",\"16-32\",\"32-48\",\"48-64\",\"64-80\"])\nData_train[\"Age_band\"][Data_train[\"Survived\"]==1].value_counts(normalize=True)*100","58d2e3b5":"for i in [\"0-16\",\"16-32\",\"32-48\",\"48-64\",\"64-80\"]:\n    print(\"When ages between {}:\\n{}\".format(i,Data_train[\"Survived\"][Data_train[\"Age_band\"]==i].value_counts(normalize=True)*100))","2ba87d4f":"sns.catplot(x=\"Survived\", col=\"Age_band\", col_wrap=3,data=Data_train,kind=\"count\", height=3, aspect=1)","577d026e":"Data[\"Age\"].describe()","2f035897":"for data in [Data_train,Data_test]:    \n    data.loc[ data['Age'] <= 16, 'Age'] = 0\n    data.loc[(data['Age'] > 16) & (data['Age'] <= 32), 'Age'] = 1\n    data.loc[(data['Age'] > 32) & (data['Age'] <= 48), 'Age'] = 2\n    data.loc[(data['Age'] > 48) & (data['Age'] <= 64), 'Age'] = 3\n    data.loc[(data['Age'] > 64) & (data['Age'] <= 80), 'Age'] = 4  ","5e1b9149":"for data in [Data_train,Data_test]:\n    data[\"Age\"]=data[\"Age\"].astype(int)","5fd48bd5":"Data_train.columns","9c4b9b7c":"Data_train=Data_train.drop(columns=[\"Age_band\"])\nData_test=Data_test.drop(columns=[\"Age_band\"])","da4d9eff":"Data_train.info()","4522e138":"Data_test.info()","5c355278":"Data_train.columns","905f7e86":"features=['Pclass','Sex','Age','Fare','Embarked','SipSp_Parch']\nrows=2\ncols=3\nfig,axes = plt.subplots(rows,cols,figsize=(cols*4,rows*4))\nfor i in range (rows):\n    for j in range(cols):\n        r=i*cols+j\n        ax=axes[i][j]\n        sns.countplot(x=Data_train[features[r]],data=Data_train,hue=Data_train.Survived,ax=ax)","c19ecb7e":"Data_train.info()","75b57e1b":"Data_test.info()","56529601":"for data in [Data_train,Data_test]:\n    data[\"Title\"]=data.Name.str.extract(\"([A-Za-z]+)\\.\",expand=False)\npd.crosstab(Data_train[\"Title\"],Data_train[\"Sex\"])","aa50ac06":"for data in [Data_train,Data_test]:\n    data[\"Title\"]=data[\"Title\"].replace([\"Capt\",\"Col\",\"Don\",\"Dr\",\"Jonkheer\",\"Major\",\"Master\",\"Mr\",\"Rev\",\"Sir\"],\"male\")\n    data[\"Title\"]=data[\"Title\"].replace([\"Countess\",\"Lady\",\"Miss\",\"Mlle\",\"Mme\",\"Mrs\",\"Ms\"],\"female\")\nData_train[\"Title\"].value_counts(dropna=True)","5b04a811":"mapping={\"male\":0,\"female\":1}\nfor data in [Data_train,Data_test]:\n    data[\"Title\"]=data[\"Title\"].map(mapping)\n    data[\"Title\"]=data[\"Title\"].fillna(0)","1b5d3b57":"Data_train.info()","584c99dc":"Data_test.info()","ef20ca40":"Data_train=Data_train.drop([\"Name\"],axis=1)\nData_test=Data_test.drop([\"Name\"],axis=1)","ee7c0420":"Data_train.shape","cc18187c":"Data_test.shape","f81f739c":"corrmat=Data_train.corr()\nk=6\ncols=corrmat.nlargest(k,\"Sex\")[\"Sex\"] \ncols","ed6a5926":"ytrain_validation=Data_train.pop(\"Sex\")\nxtrain_validation=Data_train\nytest=Data_test.pop(\"Sex\")\nxtest=Data_test","2828c50f":"xtrain_validation.shape","c2fca87c":"ytrain_validation.shape","7784cbb5":"xtest.shape","f5a07437":"ytest.shape","6308c6de":"x_train,x_valid,y_train,y_valid=train_test_split(xtrain_validation,ytrain_validation,shuffle=False,test_size=0.2,random_state=2020)","ed4b2e68":"## Some statistics in the trip:","a5c1a09e":"### # We can show the data:","7b5587ab":"---","cb66387e":"---","96954c2a":"### Fill the Embarked feature:\n#### we should at the begining figure out the most frequent in all Data:","4f7e2050":"--- ","9da0bfd7":"## Determine {xtrain,ytest,xtest}:","03b5feb9":"* ### the number of total samples is 1309 so it's about 58 % of total passengers and crew of Titanic ship.\n* ### 40% of them as training data and about 18% as a testing data.\n* ### We have about 68% training data of passengers of Titanic ship and 32% for testing data from the passengers who were in Titanic.","8fc68e97":"### Now we can remove the Parch and SibSp features from train and test data:","6f0fa470":"## Missing data:","77190fb1":"* On April 15, 1912, during her maiden voyage, the Titanic sank after colliding with an iceberg,killing 1502 out of 2224 passengers and crew. Translated 32% survival rate.\n* One of the reasons that the shipwreck led to such loss of life was that there were not enough lifeboats for the passengers and crew.\n* Although there was some element of luck involved in surviving the sinking,some groups of people were more likely to survive than others, such as women, children,and the upper-class.","c1e714b1":"### In dividing the data we should also see the min and max values in data:","eb363d20":"### Convert the Age feature in train and test data into integer:","4862a428":"### Distributions of passengers in each class: \n*          24% in Class_1\n*          21% in Class_2\n*          55% in Class_3 ","087c14a6":"### In this Task we are using Titanic dataset including name feature, but with a little bit changing in the target. we consider the label in this task not Survived like in the famous competition but Sex.So the task is predict the gender of the passangers.","b6fa4cc4":"### we should not forget that in testing data we don't have a survived column so we will use the binifits of this column to create \n### the model , then when we will implement the model for test data , we can remove the survived feature from training data to have the same shape for both (training and testing).","97cc0c96":"### Fill the missing data in both training and testing data and convert the data to integer:","03aedafe":"> I expect the survived feature will have a big affect in prediction the gender of the passenger.","02afa4f9":"### On the other hand, When SipSp_Parch feature =10 in training data, all the corresponding values in Age features are NaN","f07e9554":"### And the gender of percentage in each Class:\n* #### About 60% of all Males and 45% of all females were in Class_3.","b822deb5":"---","63a7ccb2":"### 1- Cabin features has a huge number of null values.\n### 2- Ticket feature describe the number of ticket for each passenger and that is will not contribute directly to determine the gender like PassengerID feature.\n\n### From all before we can see that we can drop a group of features which may not have a corellation with Sex label.","82f4af26":"### By using the Correlation function , we find that Sex features has the largest impact in \"Survived\" label:","e6aecf1c":"---","eceb585f":"* ### And it is clear that the percentage of survivals who their ages were between 16-32 was the highest with 44%. \n* ### But in fact, This number does not reflect reality where 55% of passengers with ages[0-16] survived and 40% for passengers[32-48]\n* ### while only about 37% of passengers[16-32] survived and that is because the almost all passengers were young passengers.\n* ### on the other hand, around 90% of the passengers who had ages between [64-80] died in the accident.","1fdfb352":"# <center>Titanic Sex Label","af55b63f":"---","1d7659a8":"### Fill the Fare feature in test data:","3cbcbe64":"### At the same time also about 84% of males and 62% of females did not have parents and children.","2d9db9d5":"### Almost the males and females in Titanik did not have siblings and spouse. So, about 74% of males and 56% for females were without siblings and spouse.","e522fc5c":"### Divide the training data into validation and train data:","ec81edad":"---","20039c55":"## Libraries:","ef95635e":"## Now, We can continue as the same in previous task \"Titanic Survived Label\".","7174e72f":"### Still have missing data in [Age, Emarked] features (Train data), [Age, Fare] features (Test data). ","d09cc804":"### The range of SibSp_Parch feature is [0-10].","aaf79932":"---","5281cd65":"---","1a5b82dc":"### We can summarize the final data with the label \"Survived\":","00f46676":"### Also maybe these info will help to understand the data more and more , sothat about 67% of survivors in class_1 were females ,80% in Class_2 and 60% with class_3.","d2fab463":"---","23d5c172":"### We can remove Name feature from Training and Testing data :","b8330222":"### We can figure out the percentage number of females survivals and males survivals in each class :\n### we can see from plot that The survivors are distributed in balanced proportions between classes.","839c2496":"---","6df89ab0":"## But as a summary:","44769c45":"## Workflow steps :","7416c899":"### I want to see the effects of processing the text on changing the accuracy. For that, i will use some simple features of NLP to process Name texts.","034a8035":"### Extract the type of the (train and test) data in each column:","6a0ac9fc":"### In our data, we have no missing values and all the features now with integer type except name feature:","e6ee97f2":"### We don't need \"Age_band\" feature in data anymore so we can remove it from both {train,test} data.","073920f0":"### To facilitate the process, we will combine SibSp feature and Parch feature in one column.","3d205126":"# Task definition:","8b9e9229":"##  Extact the information of all dataset(train & test):\n### from this command we found many things:\n* 1- Ticket column combine two types of data(Numerical, Alphanumeric) so the type is object.\n* 2- [PassengerId,Pclass,Age,SibSp,Parch,Fare,Survived,Fare] are integer or float.\n* 3- [Sex,Ticket,Cabin,Embarked] have object types.\n* 4- Age, Cabin, Embarked and Fare features contain a null values in training data. Also, Age and Cabin features have a null values in testing data. ","ae31a73b":"## In this section we will divide the Age feature into 3 bands: [0-16],[16-32],[32-48],[48-64],[64-80].","868d839b":"### # Convert the string values to integers (Encoding):","0c9d11a7":"## Correlations between features:\n### If we start studying the corellation between the features and Sex column, we should realize many things:","a4ea829d":"### 843 males and 466 females were on Titanic ship (About 64% of Passengers males,and 33% were females).","2c08ac80":"### Upload the data and combine train and test data to use it in Preprocessing data:","87a4b380":"### All the features of training set as a list:","c6e6ae93":"---","8bda52aa":"### Embarked takes three possible values. S port used by most passengers: 74 % for males and 63% for females.","f6891b92":"   1. upload the datasets as a training, validation and testing datasets.\n   2. In this step, we will split the tas into two parts (with & without name feature), then continuein next steps.\n   3. Find the correlation between the features (included name feature) and Sex column.\n   4. Prepare the data by converting the text categorical values to numerical values. So, the machine learning algorithms and neural networks require all features to be converted to numerical values. \n   5. Continue preparing dataset by estimate the missing values in features.So, the optimum performance of algorithms require a no missing values.\n   6. scale the datasets and correct and exclude the samples containing the errors by detecting the outliers and remove them to avoid misleading.\n   7. we may need to create a new features when we analyze and divide the categorical features.\n   8. use the right vesualization plots and charts to check the correlation and comparison between categories.\n   9. trying many algorithms to fit the dataset and choose the best algorithm.\n   10. Evaluate the model. ","c37972a7":"### There are 233 females were survived and only 109 males in 891 passengers (training data):","a0fa4b66":"### SibSp and Parch:","e8a163cd":"### Let us now rearrange the result by bundling a group of titles together under one title.","aaeb8bc1":"### 70 % of passengers in Class_3 were Males with 30% for Females:","d13a7925":"### In fact, the name of passenger might the most important information in the data to predict the gender so we will try to extract some features from this column.\n### If we check the name feature we will find that we can split the text into two parts (before the point'.' and after the point ).\n### Actually, we care about the first part which will give us the title of the passenger so it will help to predict the gender.\n### So we will extract these titles and put them in new column called Title.","fc847f3d":"> The information about the Titanic dataset exist in this website:[here](https:\/\/www.kaggle.com\/c\/titanic).","ce095e46":"### We have cleaned and full data in all the features:","6597ddf7":"### the model is ready to train and predict the output. The task is under supervised ML and it is performing a classification task to predict the survivors in Titanic.So the first, we will divide the training dataset into two parts (Train & Validation) data to fit the model many times an choose the appropriate algorithms algorithms. Then we will evaluate the model by using the test dataset to see the final accuracy."}}