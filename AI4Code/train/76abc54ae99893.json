{"cell_type":{"52650833":"code","72c95614":"code","60caec43":"code","4ad62302":"code","17745a53":"code","d08b6d55":"code","6633cd10":"code","8b111a8d":"code","13dab919":"code","aa500022":"code","905966d0":"code","18bb9e41":"code","179f218f":"code","c6b99b53":"code","b1919105":"code","35dfdc77":"code","b4d0f5a5":"code","6272a9da":"code","01c65a5a":"code","cdaa77e1":"code","e3026d14":"markdown","833c748f":"markdown","8557862d":"markdown","222bda76":"markdown","acd85a0a":"markdown"},"source":{"52650833":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","72c95614":"df=pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/train.csv\")\ndf1=pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/test.csv\")\ndf2=pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/gender_submission.csv\")","60caec43":"df1.head()","4ad62302":"df.head()","17745a53":"df.info()","d08b6d55":"df.isnull().sum()","6633cd10":"df.dropna()","8b111a8d":"df.shape","13dab919":"df[[\"Pclass\",\"Survived\"]].groupby(\"Pclass\").mean()","aa500022":"df[[\"Sex\",\"Survived\"]].groupby(\"Sex\").mean()","905966d0":"df[[\"Embarked\",\"Survived\"]].groupby(\"Embarked\").mean()","18bb9e41":"import re as re","179f218f":"def get_title(name):\n\ttitle_search = re.search(' ([A-Za-z]+)\\.', name)\n\t# If the title exists, extract and return it.\n\tif title_search:\n\t\treturn title_search.group(1)\n\treturn \"\"\n\nfor dataset in df:\n    df['Title'] = df['Name'].apply(get_title)\n\nprint(pd.crosstab(df['Title'], df['Sex']))","c6b99b53":"for dataset in df:\n    df['Title'] = df['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\n \t'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n\n    df['Title'] = df['Title'].replace('Mlle', 'Miss')\n    df['Title'] = df['Title'].replace('Ms', 'Miss')\n    df['Title'] = df['Title'].replace('Mme', 'Mrs')\n\nprint (df[['Title', 'Survived']].groupby(['Title'], as_index=False).mean())\n","b1919105":"from sklearn.neighbors import KNeighborsClassifier","35dfdc77":"model=KNeighborsClassifier(n_neighbors=3)","b4d0f5a5":"X=df[[\"Pclass\"]]\ny=df[[\"Survived\"]]","6272a9da":"from sklearn.neighbors import KNeighborsClassifier\nmodel=KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X,y)\n","01c65a5a":"pred=model.predict(df1[[\"Pclass\"]])","cdaa77e1":"print(\"Pclass\",\"Survived\")\nfor i in range(0,100):\n    print(df1[\"Pclass\"].values[i],pred[i])","e3026d14":"# Loading the data and performing the basic analysis","833c748f":"Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton","8557862d":"# We will be using KNN to predict wether the person was able to survive or not","222bda76":"# From the above analysis it is clear that we PClass has the greatest impact on the chances of survival","acd85a0a":"# Now, we are checking for which feature has a good impact on the chances of survival"}}