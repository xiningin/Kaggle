{"cell_type":{"69d16ac2":"code","22f8c56b":"code","8fae9504":"code","310cdfa5":"code","65a8cbb2":"code","6eabbfb2":"code","398d1832":"code","697d3858":"code","febf7a42":"markdown","a6513316":"markdown"},"source":{"69d16ac2":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.express as px\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")","22f8c56b":"data_df = pd.read_csv(\"\/kaggle\/input\/excess-mortality-in-europe-in-20202021\/excess_mortality_eu.csv\")\ncountry_codes_df = pd.read_csv(\"\/kaggle\/input\/iso-country-codes-global\/wikipedia-iso-country-codes.csv\")","8fae9504":"data_df.head()","310cdfa5":"country_codes_df = country_codes_df[[\"English short name lower case\",\"Alpha-2 code\"]]\ncountry_codes_df.columns = [\"Country\", \"country\"]\ncountry_codes_df.head()","65a8cbb2":"data_df = data_df.merge(country_codes_df, how=\"inner\")","6eabbfb2":"data_df.head()","398d1832":"from plotly.validators.scatter.marker import SymbolValidator\n\ndef plot_time_variation_countries_group(data_df, feature, title, countries):\n    data = []\n    for Country in countries:\n        df = data_df.loc[data_df.Country==Country]\n        trace = go.Scatter(\n            x = df['date'],y = df[feature],\n            name=Country,\n            mode = \"markers+lines\",\n            text=df['Country'])\n        data.append(trace)\n    layout = dict(title = title,\n          xaxis = dict(title = 'Date', showticklabels=True,zeroline=True, zerolinewidth=1, zerolinecolor='grey',\n                       showline=True, linewidth=2, linecolor='darkblue', mirror=True,\n                       tickfont=dict(size=10,color='black'),), \n          yaxis = dict(title = feature, gridcolor='lightblue', zeroline=True, zerolinewidth=1, zerolinecolor='grey',\n                       showline=True, linewidth=2, linecolor='darkblue', mirror=True),\n                       plot_bgcolor = 'rgba(0, 0, 0, 0)', paper_bgcolor = 'rgba(0, 0, 0, 0)',\n         hovermode = 'x', \n         height=800\n         )\n    fig = dict(data=data, layout=layout)\n    iplot(fig, filename='all_countries')","697d3858":"countries = list(data_df.Country.unique())\ncountry_groups = [\"EU27_2020\"]\nsel_countries = main_list = np.setdiff1d(countries,country_groups)\nplot_time_variation_countries_group(data_df, 'value', 'Excess Mortality [%] in Europe in 2020-2021', sel_countries)","febf7a42":"# Data visualization\n\nLet's plot the evolution in time of excess mortality (%) between Jan 2020 and the last month for which we have date.","a6513316":"# Introduction\n\nWe will plot the excess mortality in Europe (as percent from normal, pre-pandemic values) in 2020-2021."}}