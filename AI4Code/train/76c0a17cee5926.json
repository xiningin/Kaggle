{"cell_type":{"278a3a37":"code","a94e0f63":"code","3c06df49":"code","d907a51f":"code","3dd7a88c":"code","5eba6a99":"code","88932ec1":"code","0d8a6d11":"code","c407d1d5":"code","5a36f935":"code","99c928d1":"code","42de89e9":"code","0462d67d":"code","a6f7e8a9":"code","d5851eb0":"code","59d4929d":"code","c55cb03f":"code","46d7f1f4":"code","79df1a37":"code","4a817b98":"code","643b59e1":"code","e824b40e":"code","583260e6":"code","c461cdcd":"code","dcab7c9a":"code","ce26715e":"code","b3ba905c":"code","58d68dd7":"code","5d6b290a":"code","367aa90e":"code","1c7b8c54":"code","de106feb":"code","b4831270":"code","20b71e15":"code","1e25cc16":"code","aa4449db":"code","24251d7b":"code","dd521654":"code","952439ca":"code","3753815b":"code","3f937249":"code","61593ce5":"code","efcd765c":"code","471e8a3c":"code","5f734984":"code","c17cc41f":"code","250b5c88":"code","ea8ae067":"code","dd63046a":"code","b8989b40":"markdown","6720fc47":"markdown","e4bda745":"markdown","3210f39d":"markdown"},"source":{"278a3a37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport numpy as py\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a94e0f63":"# Importa\u00e7\u00e3o das bases de dados\ncandidato = pd.read_csv('..\/input\/candidato.csv', sep=';', encoding='latin1')\ndespesas = pd.read_csv('..\/input\/despesas.csv', sep=';', encoding='latin1')\nreceitas = pd.read_csv('..\/input\/receitas.csv', sep=';', encoding='latin1')\nvotos = pd.read_csv('..\/input\/votos.csv', sep=';', encoding='latin1')","3c06df49":"# Dimens\u00f5es das bases de dados\nprint('Dimens\u00f5es - Candidatos: ', candidato.shape)\nprint('Dimens\u00f5es - Despesas: ', despesas.shape)\nprint('Dimens\u00f5es - Receitas: ', receitas.shape)\nprint('Dimens\u00f5es - Votos: ', votos.shape)","d907a51f":"# Base candidato\ncandidato.head()","3dd7a88c":"# Base despesas\ndespesas.head()","5eba6a99":"# Base receitas\nreceitas.head()","88932ec1":"# Base Votos\nvotos.head()","0d8a6d11":"# Base receitas\n\n# Exclus\u00e3o da receita originario conforme atualiza\u00e7\u00e3o efetuada pelo professor em 02\/04\/2019\nreceitas.drop(columns=['SQ_RECEITA', 'VR_RECEITA_ORIGINARIO'],inplace=True)\n\n# Convers\u00e3o do campo VR_RECEITA para ponto flutuante\nreceitas['VR_RECEITA'] = receitas['VR_RECEITA'].str.replace('.','').str.replace(',','.').astype(float)\n# Agrupar\nreceitas = receitas.groupby('SQ_CANDIDATO').sum()\n\n# Exibir\nreceitas.head()","c407d1d5":"# Base despesas\n\n# Convers\u00e3o dos campos Despesa contratada e despesa paga para ponto flutuante\ndespesas['VR_DESPESA_CONTRATADA'] = despesas['VR_DESPESA_CONTRATADA'].str.replace('.','').str.replace(',','.').astype(float)\ndespesas['VR_PAGTO_DESPESA'] = despesas['VR_PAGTO_DESPESA'].str.replace('.','').str.replace(',','.').astype(float)\n\ndespesas.info()","5a36f935":"despesas.head()","99c928d1":"# Base votos\n\n# Convers\u00e3o do campo votos nominais paga para ponto flutuante\nvotos['QT_VOTOS_NOMINAIS'] = votos['QT_VOTOS_NOMINAIS'].str.replace('.','').str.replace(',','.').astype(float)\nvotos.info()","42de89e9":"votos.head()","0462d67d":"# Aplica\u00e7\u00e3o de filtros\n\n# Manuten\u00e7\u00e3o dos candidatos com situa\u00e7\u00e3o APTA\ncandidato = candidato[candidato.CD_SITUACAO_CANDIDATURA == 12]\n\n# Outros filtros podem ser adicionados aqui\n","a6f7e8a9":"# Jun\u00e7\u00e3o das bases \ncand = pd.merge(candidato, despesas, on='SQ_CANDIDATO', how='left')\ncand = pd.merge(cand, receitas, on='SQ_CANDIDATO', how='left')\ncand = pd.merge(cand, votos, on='SQ_CANDIDATO', how='left')","d5851eb0":"# A base a ser utilizada \u00e9 a cand!!!!!\n\ncand.info()","59d4929d":"cand.head()","c55cb03f":"# Correla\u00e7\u00e3o entre as vari\u00e1veis num\u00e9ricas\nf,ax = plt.subplots(figsize=(15,6))\nsns.heatmap(cand.corr(), annot=True, fmt='.2f', ax=ax, linecolor='black', lw=4)\nplt.show()","46d7f1f4":"# Observa-se correla\u00e7\u00e3o positiva entre\n# Votos e receita (0.81)\n# Votos e despesas contratadas (0.78)\n# Votos e despesas pagas (0.74)\n","79df1a37":"# N\u00famero de votos em rela\u00e7\u00e3o \u00e0 despesa\nplt.figure(figsize=(15,5))\nsns.scatterplot(x=cand[cand['DS_CARGO'] == 'DEPUTADO FEDERAL']['VR_DESPESA_CONTRATADA'], y=cand['QT_VOTOS_NOMINAIS'], color=\"magenta\")\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.title(\"Votos em rela\u00e7\u00e3o aos gastos de campanha - DEP.FEDERAL\",color='black')\nplt.xlabel('Despesas')\nplt.ylabel(\"Quantidade de votos\")\nplt.show()","4a817b98":"# N\u00famero de votos em rela\u00e7\u00e3o \u00e0 despesa\nplt.figure(figsize=(15,5))\nsns.scatterplot(x=cand[cand['DS_CARGO'] == 'DEPUTADO ESTADUAL']['VR_DESPESA_CONTRATADA'], y=cand['QT_VOTOS_NOMINAIS'], color=\"magenta\")\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.title(\"Votos em rela\u00e7\u00e3o aos gastos de campanha - DEP.ESTADUAL\",color='black')\nplt.xlabel('Despesas')\nplt.ylabel(\"Quantidade de votos\")\nplt.show()","643b59e1":"# N\u00famero de votos em rela\u00e7\u00e3o \u00e0 despesa\nplt.figure(figsize=(15,5))\nsns.scatterplot(x=cand[cand['DS_CARGO'] == 'GOVERNADOR']['VR_DESPESA_CONTRATADA'], y=cand['QT_VOTOS_NOMINAIS'], color=\"magenta\")\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.title(\"Votos em rela\u00e7\u00e3o aos gastos de campanha - GOVERNADOR\",color='black')\nplt.xlabel('Despesas')\nplt.ylabel(\"Quantidade de votos\")\nplt.show()","e824b40e":"# N\u00famero de votos em rela\u00e7\u00e3o \u00e0 despesa\nplt.figure(figsize=(15,5))\nsns.scatterplot(x=cand[cand['DS_CARGO'] == 'SENADOR']['VR_DESPESA_CONTRATADA'], y=cand['QT_VOTOS_NOMINAIS'], color=\"magenta\")\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.title(\"Votos em rela\u00e7\u00e3o aos gastos de campanha - SENADOR\",color='black')\nplt.xlabel('Despesas')\nplt.ylabel(\"Quantidade de votos\")\nplt.show()","583260e6":"# Despesas por cargo\nplt.figure(figsize=(15,5))\nsns.distplot(cand[cand['DS_CARGO'] == 'DEPUTADO ESTADUAL']['VR_DESPESA_CONTRATADA'].dropna(), color='blue', label='DEPUTADO ESTADUAL')\nplt.title(\"Distribui\u00e7\u00e3o das despesas por cargo\",color='black')\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Cargo\")\nplt.show()","c461cdcd":"plt.figure(figsize=(15,5))\nsns.distplot(cand[cand['DS_CARGO'] == 'DEPUTADO FEDERAL']['VR_DESPESA_CONTRATADA'].dropna(), color='green', label='DEPUTADO FEDERAL')\nplt.title(\"Distribui\u00e7\u00e3o das despesas por cargo\",color='black')\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Cargo\")\nplt.show()","dcab7c9a":"plt.figure(figsize=(15,5))\nsns.distplot(cand[cand['DS_CARGO'] == 'GOVERNADOR']['VR_DESPESA_CONTRATADA'].dropna(), color='purple', label='GOVERNADOR')\nplt.title(\"Distribui\u00e7\u00e3o das despesas por cargo\",color='black')\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Cargo\")\nplt.show()","ce26715e":"plt.figure(figsize=(15,5))\nsns.distplot(cand[cand['DS_CARGO'] == 'SENADOR']['VR_DESPESA_CONTRATADA'].dropna(), color='black', label='SENADOR')\nplt.title(\"Distribui\u00e7\u00e3o das despesas por cargo\",color='black')\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Cargo\")\nplt.show()","b3ba905c":"# Distribui\u00e7\u00e3o dos candidatos por despesas por cargo (boxplot)\nplt.figure(figsize=(12,8))\nsns.boxplot(x='DS_CARGO', y='VR_DESPESA_CONTRATADA', data=cand)\nplt.title(\"Despesas por cargo\",color='black')\nplt.ylabel(\"Despesas\")\nplt.xlabel(\"Cargo\")\nplt.xticks(rotation='vertical')\nplt.show()","58d68dd7":"# Distribui\u00e7\u00e3o dos candidatos por faixa et\u00e1ria (boxplot)\nplt.figure(figsize=(12,8))\nsns.boxplot(x='DS_CARGO', y='NR_IDADE_DATA_POSSE', data=cand)\nplt.title(\"Faixa et\u00e1ria por cargo\",color='black')\nplt.ylabel(\"Faixa et\u00e1ria\")\nplt.xlabel(\"Cargo\")\nplt.xticks(rotation='vertical')\nplt.show()","5d6b290a":"cand.info()","367aa90e":"cand['DS_CARGO'].unique()","1c7b8c54":"# Distribui\u00e7\u00e3o dos candidatos por faixa et\u00e1ria\nplt.figure(figsize=(15,5))\nsns.distplot(cand[cand['DS_CARGO'] == 'DEPUTADO ESTADUAL']['NR_IDADE_DATA_POSSE'].dropna(), color='blue', label='DEPUTADO ESTADUAL')\nsns.distplot(cand[cand['DS_CARGO'] == 'DEPUTADO FEDERAL']['NR_IDADE_DATA_POSSE'].dropna(), color='green', label='DEPUTADO FEDERAL')\nsns.distplot(cand[cand['DS_CARGO'] == '2\u00ba SUPLENTE']['NR_IDADE_DATA_POSSE'].dropna(), color='red', label='2\u00ba SUPLENTE')\nsns.distplot(cand[cand['DS_CARGO'] == '1\u00ba SUPLENTE']['NR_IDADE_DATA_POSSE'].dropna(), color='yellow', label='1\u00ba SUPLENTE')\nsns.distplot(cand[cand['DS_CARGO'] == 'VICE-GOVERNADOR']['NR_IDADE_DATA_POSSE'].dropna(), color='orange', label='VICE-GOVERNADOR')\nsns.distplot(cand[cand['DS_CARGO'] == 'GOVERNADOR']['NR_IDADE_DATA_POSSE'].dropna(), color='purple', label='GOVERNADOR')\nsns.distplot(cand[cand['DS_CARGO'] == 'SENADOR']['NR_IDADE_DATA_POSSE'].dropna(), color='black', label='SENADOR')\nplt.title(\"Distribui\u00e7\u00e3o dos candidatos por faixa et\u00e1ria\",color='black')\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Cargo\")\nplt.xlabel('Idade na data da posse')\nplt.ylabel('Quantidade de candidatos')\nplt.show()","de106feb":"#Pode-se perceber que h\u00e1 semelhan\u00e7a entre os grupos analisados com concentra\u00e7\u00e3o dos candidatos na faixa et\u00e1ria entre 40 e 60 anos.\n# Percebe-se tamb\u00e9m que para 1\u00ba suplente e vice-governador h\u00e1 uma maior concentra\u00e7\u00e3o entre 40 e 50 anos\n# e para senador, governado e 2\u00ba suplente ha uma maior concentra\u00e7\u00e3o entre os 55 e 65","b4831270":"# Distribui\u00e7\u00e3o dos candidatos por g\u00eanero\nplt.figure(figsize=(10,5))\nsns.countplot(x='DS_CARGO', hue='DS_GENERO', data=cand)\nplt.xticks(rotation=90)\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.title(\"Quantidade de candidatos por g\u00eanero\",color='black')\nplt.legend(title=\"Sexo\")\nplt.xlabel('Cargo')\nplt.ylabel(\"Quantidade de candidatos\")\nplt.show()","20b71e15":"# Total de votos em rela\u00e7\u00e3o ao g\u00eanero do candidato\nplt.figure(figsize=(5,10))\nsns.boxplot(x='DS_GENERO', y='QT_VOTOS_NOMINAIS', data=cand)\nplt.title(\"Vota\u00e7\u00e3o por g\u00eanero\",color='black')\nplt.xlabel('G\u00eanero')\nplt.ylabel(\"Quantidade de votos\")\nplt.show()","1e25cc16":"# Distribui\u00e7\u00e3o dos candidatos por forma\u00e7\u00e3o acad\u00eamica\nplt.figure(figsize=(15,5))\nsns.countplot(x='DS_CARGO', hue='DS_GRAU_INSTRUCAO', data=cand)\nplt.title(\"Distribui\u00e7\u00e3o dos candidatos por forma\u00e7\u00e3o acad\u00eamica\",color='black')\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Grau de Instru\u00e7\u00e3o\")\nplt.xlabel('Cargo')\nplt.ylabel(\"Quantidade\")\nplt.show()","aa4449db":"# Total de votos em rela\u00e7\u00e3o ao grau de instru\u00e7\u00e3o\nplt.figure(figsize=(5,10))\nsns.boxplot(x='DS_GRAU_INSTRUCAO', y='QT_VOTOS_NOMINAIS', data=cand)\nplt.xticks(rotation=90)\nplt.title(\"Vota\u00e7\u00e3o por forma\u00e7\u00e3o acad\u00eamica\",color='black')\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.xlabel('Grau de instru\u00e7\u00e3o')\nplt.ylabel(\"Quantidade de votos\")\nplt.show()","24251d7b":"# Distribui\u00e7\u00e3o dos candidatos por ra\u00e7a\nplt.figure(figsize=(10,5))\nsns.countplot(x='DS_CARGO', hue='DS_COR_RACA', data=cand)\nplt.title(\"Quantidade de candidatos por ra\u00e7a\",color='black')\nplt.xticks(rotation=90)\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Ra\u00e7a\")\nplt.xlabel('Cargo')\nplt.ylabel(\"Quantidade\")\nplt.show()","dd521654":"# Distribui\u00e7\u00e3o dos candidatos por estado civil\nplt.figure(figsize=(10,5))\nsns.countplot(x='DS_CARGO', hue='DS_ESTADO_CIVIL', data=cand)\nplt.title(\"Quantidade de candidatos estado civil\",color='black')\nplt.xticks(rotation=90)\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Estado Civil\")\nplt.xlabel('Cargo')\nplt.ylabel(\"Quantidade\")\nplt.show()","952439ca":"# Distribui\u00e7\u00e3o dos candidatos por estado civil\nplt.figure(figsize=(10,5))\nsns.countplot(x='DS_GENERO', hue='DS_NACIONALIDADE', data=cand)\nplt.title(\"Quantidade de candidatos estado civil\",color='black')\nplt.xticks(rotation=90)\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.legend(title=\"Estado Civil\")\nplt.xlabel('Cargo')\nplt.ylabel(\"Quantidade\")\nplt.show()","3753815b":"#Distribui\u00e7\u00e3o do Valor em despesa por cargo por situa\u00e7\u00e3o do turno\nplt.figure(figsize=(15,5))\nsns.barplot(x='DS_CARGO', y='VR_DESPESA_CONTRATADA', hue='DS_SIT_TOT_TURNO', data=cand, ci=None)\nplt.xlabel('Cargo')\nplt.ylabel(\"Valor da despesa (R$)\")\nplt.title(\"Valor em despesa por cargo por situa\u00e7\u00e3o do turno\")\nplt.legend(title=\"Situa\u00e7\u00e3o do turno\")\nplt.axhline(y=cand['VR_DESPESA_CONTRATADA'].mean())","3f937249":"#Distribui\u00e7\u00e3o do Valor em despesa por cargo por situa\u00e7\u00e3o do turno\nplt.figure(figsize=(15,5))\nsns.barplot(x='DS_SIT_TOT_TURNO', y='VR_DESPESA_CONTRATADA', hue='DS_GENERO', data=cand, ci=None)\nplt.xlabel('Cargo')\nplt.ylabel(\"Valor da despesa (R$)\")\nplt.title(\"Valor em despesa por cargo por situa\u00e7\u00e3o do turno\")\nplt.legend(title=\"Situa\u00e7\u00e3o do turno\")\nplt.axhline(y=cand['VR_DESPESA_CONTRATADA'].mean())","61593ce5":"#Distribui\u00e7\u00e3o do Valor em despesa por cargo por situa\u00e7\u00e3o do turno\nplt.figure(figsize=(15,5))\nsns.barplot(x='DS_SIT_TOT_TURNO', y='QT_VOTOS_NOMINAIS', hue='DS_GENERO', data=cand, ci=None)\nplt.xlabel('Cargo')\nplt.ylabel(\"Valor da despesa (R$)\")\nplt.title(\"Valor em despesa por cargo por situa\u00e7\u00e3o do turno\")\nplt.legend(title=\"Situa\u00e7\u00e3o do turno\")\nplt.axhline(y=cand['QT_VOTOS_NOMINAIS'].mean())","efcd765c":"cand['DS_NACIONALIDADE'].unique()","471e8a3c":"cand.columns","5f734984":"# Maiores despesas por partido\n\nsns.countplot(x='SG_PARTIDO', data=cand, order=cand['Winner'].value_counts().index)\nplt.title(\"Despesas por partido\",color='black')\nplt.show()\n\n# Total de gols por sele\u00e7\u00e3o\ndesp_sg_partido = cand.groupby(\"SG_PARTIDO\")[\"VR_DESPESA_CONTRATADA\"].sum().reset_index()\ngols_casa.columns = [\"selecao\",\"gols\"]\ngols[\"gols\"] = gols[\"gols\"].astype(int)\n\nplt.figure(figsize=(15,5))\nsns.barplot(x=\"selecao\",y=\"gols\", data=gols[:10])\nplt.title(\"Sele\u00e7\u00f5es com maior n\u00famero de gols marcados\",color='black')\nplt.show()","c17cc41f":"desp_sg_partido = cand.groupby(\"SG_PARTIDO\")[\"VR_DESPESA_CONTRATADA\"].sum().reset_index()","250b5c88":"desp_sg_partido.info()","ea8ae067":"cand.to_csv('cand_final.csv', sep=';', encoding='latin1', index=False)","dd63046a":"# GERA LINK PARA BAIXAR O CSV SEM PRECISAR COMPILAR\nfrom IPython.display import HTML\ndef create_download_link(title = \"Download CSV file\", filename = \"cand_final.csv\"):  \n    html = '<a href={filename}>{title}<\/a>'\n    html = html.format(title=title,filename=filename)\n    return HTML(html)\n\n# create a link to download the dataframe which was saved with .to_csv method\ncreate_download_link(filename='cand_final.csv')","b8989b40":"#### Vari\u00e1vel despesas","6720fc47":"### Importa\u00e7\u00e3o e tratamento dos dados","e4bda745":"### An\u00e1lise explorat\u00f3ria dos dados","3210f39d":"### Disponibiliza\u00e7\u00e3o do arquivo cand em formato .csv"}}