{"cell_type":{"5a8979fb":"code","4ca55269":"code","d2df4e97":"code","d9637fbc":"code","18516da7":"code","23cc327e":"code","2d97f976":"code","56cb9c49":"code","8785e2d1":"code","9045c2ba":"code","41e89527":"code","9a00754b":"code","acec7a08":"code","6dac44d2":"code","5a4fc368":"code","6c8e4dd8":"code","463376be":"code","b18ddec4":"markdown","e6c127c3":"markdown","6172be78":"markdown","609d6079":"markdown","12a23a22":"markdown","f560b60e":"markdown","b18e250a":"markdown","dbc1c8bf":"markdown","5fcca1a7":"markdown","c230c03a":"markdown","97c3a4d8":"markdown","f82afc1a":"markdown","a6e29292":"markdown","5572a945":"markdown","40b00eca":"markdown","7a559cd4":"markdown","bec7992f":"markdown","538ac562":"markdown"},"source":{"5a8979fb":"import numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom plotly.subplots import make_subplots","4ca55269":"original_data = pd.read_csv('..\/input\/mp-data-cleaning\/imputed_data.csv')\noriginal_data.head()","d2df4e97":"subsetted_data = original_data.drop_duplicates().reset_index().drop('index',axis=1)\n\nprint(\"Original data shape :\",original_data.shape)\nprint(\"Subsetted data shape :\",subsetted_data.shape)","d9637fbc":"# For original dataset\nactiveCase1 = original_data[original_data['corona_result']=='positive'].groupby('test_date').count()['corona_result'].reset_index()\n\n# For subsetted dataset\nactiveCase2 = subsetted_data[subsetted_data['corona_result']=='positive'].groupby('test_date').count()['corona_result'].reset_index()","18516da7":"fig = make_subplots(rows=1, cols=2,\n                    subplot_titles=(\"<b>Original Data<\/b>\", \"<b>Subsetted Data<\/b>\"))\n\nfig.add_trace(\n    go.Scatter(x=activeCase1['test_date'], y=activeCase1['corona_result'],name=\"Original Data\"),\n    row=1, col=1)\n\nfig.add_trace(\n    go.Scatter(x=activeCase2['test_date'], y=activeCase2['corona_result'],name=\"Subsetted Data\"),\n    row=1, col=2)\n\nfig.update_layout(\n    template='plotly_dark',\n    title_text=\"<b>Time series Of Active Covid Positive Cases<\/b>\",\n    title_x=0.5\n)\n\nfig.update_xaxes(title=\"<b>Test Date<\/b>\",title_font={'size':16},tickfont=dict(size=12))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14),gridcolor='White')\n\nfig.show()","23cc327e":"test_indication1 = original_data['test_indication'].value_counts()\ntest_indication2 = subsetted_data['test_indication'].value_counts()\n\nfig = make_subplots(rows=1, cols=2,specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=(\"Original Data\", \"Subsetted Data\"))\n\nfig.add_trace(\n    go.Pie(labels=test_indication1.index.tolist(), values=test_indication1.tolist(),textposition='inside',textinfo='percent',textfont={'size':18},marker_colors=['red','orange','yellow']),\n              row=1, col=1)  \n\nfig.add_trace(\n    go.Pie(labels=test_indication2.index.tolist(), values=test_indication2.tolist(),textposition='inside',textinfo='percent',textfont={'size':18},marker_colors=['red','orange','yellow']),\n              row=1, col=2)\n\nfig.update_layout(\n    template='plotly_dark',\n    title_text=\"<b>Covid Test Indication<\/b>\",\n    title_x=0.5\n)\n\nfig.show()","2d97f976":"fig = px.histogram(original_data, x='corona_result', color=\"gender\", barmode='group',\n             title='<b>Corona Test Result among Gender<\/b><br><br>Original Data',\n             labels={\"corona_result\": \"Corona Result\",\"gender\": \"Gender\"},\n             color_discrete_sequence=[\"blue\", \"magenta\"],\n             template='plotly_dark'\n             )\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    xaxis_title=\"<b>Corona Result<\/b>\",\n    yaxis_title=\"<b>Count<\/b>\",\n    height=490,\n    width=900\n)\n\nfig.update_xaxes(title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\nfig.show()\n\nfig = px.histogram(subsetted_data, x='corona_result', color=\"gender\", barmode='group',\n             title='Subsetted Data',\n             labels={\"corona_result\": \"Corona Result\",\"gender\": \"Gender\"},\n             color_discrete_sequence=[\"blue\", \"magenta\"],\n             template='plotly_dark',\n             )\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    xaxis_title=\"<b>Corona Result<\/b>\",\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=900\n)\n\nfig.update_xaxes(title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()","56cb9c49":"fig = px.histogram(original_data,x='age_60_and_above',color='corona_result',facet_col='gender',title='<b>Covid Patients with Age and Gender Distribution<\/b><br>Original Data<br>',barmode='group',barnorm='percent',color_discrete_sequence=['blue','orange'],template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Age 60 or above<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()\n\nfig = px.histogram(subsetted_data,x='age_60_and_above',color='corona_result',facet_col='gender',title='Subsetted Data',barmode='group',barnorm='percent',color_discrete_sequence=['blue','orange'],template='plotly_dark')\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\nfig.update_xaxes(title=\"<b>Age 60 or above<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()","8785e2d1":"fig = px.histogram(original_data[original_data['fever']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='<b>Count of covid patients having fever as per Gender<\/b><br><br>Original Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#be18f5','orange'],\n                   template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    showlegend=True,\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\nfig.show()\n \nfig = px.histogram(subsetted_data[subsetted_data['fever']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='Subsetted Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#be18f5','orange'],\n                   template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    showlegend=True,\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()","9045c2ba":"fig = px.histogram(original_data[original_data['cough']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='<b>Count of covid patients having Cough as per Gender<\/b><br>Original Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#40eb34','#c6eb34'],\n                   template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\nfig.show()\n\nfig = px.histogram(subsetted_data[subsetted_data['cough']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='Subsetted Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#40eb34','#c6eb34'],\n                   template='plotly_dark')\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()","41e89527":"fig = px.histogram(original_data[original_data['sore_throat']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='<b>Count of covid patients having Sore Throat as per Gender<\/b><br>Original Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#f518e6','#ffff00'],\n                   template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\nfig.show()\n\nfig = px.histogram(subsetted_data[subsetted_data['sore_throat']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='Subsetted Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#f518e6','#ffff00'],\n                   template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()","9a00754b":"fig = px.histogram(original_data[original_data['shortness_of_breath']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='<b>Count of covid patients having Shortness of Breath as per Gender<\/b><br>Original Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['blue','#b5bfff'],\n                   template='plotly_dark'\n                   )\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\nfig.show()  \n\nfig = px.histogram(subsetted_data[subsetted_data['shortness_of_breath']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='Subsetted Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['blue','#b5bfff'],\n                   template='plotly_dark'\n                   )\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()  ","acec7a08":"fig = px.histogram(original_data[original_data['head_ache']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='<b>Count of covid patients having Headache as per Gender<\/b><br>Original Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#ff0000','#ed9200'],\n                   template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\nfig.show()\n\nfig = px.histogram(subsetted_data[subsetted_data['head_ache']==1],x='corona_result',facet_col='gender',color='corona_result',\n                   title='Subsetted Data',\n                   barmode='group',\n                   labels={\n                       'corona_result':'Corona Result',\n                       'gender':'Gender'\n                   },\n                   color_discrete_sequence=['#ff0000','#ed9200'],\n                   template='plotly_dark')\n\nfig.update_layout(\n    title_font_size=18,\n    title_x=0.5,\n    yaxis_title=\"<b>Count<\/b>\",\n    height=450,\n    width=950\n)\n\nfig.update_xaxes(title=\"<b>Corona Result<\/b>\",title_font={'size':16},tickfont=dict(size=16))\nfig.update_yaxes(title_font={'size':16},tickfont=dict(size=14))\n\nfig.show()  ","6dac44d2":"# Splitting Datetime\ndatetime = pd.to_datetime(subsetted_data['test_date'],format='%Y-%m-%d')\nsubsetted_data['year'] = datetime.dt.year\nsubsetted_data['month'] = datetime.dt.month\nsubsetted_data['day'] = datetime.dt.day\n\n# Encoding\nsubsetted_data['corona_result'] = subsetted_data['corona_result'].map({'negative':0,'positive':1})\nsubsetted_data['age_60_and_above'] = subsetted_data['age_60_and_above'].map({'No':0,'Yes':1})\nsubsetted_data['gender'] = subsetted_data['gender'].map({'male':0,'female':1})\nsubsetted_data['test_indication'] = subsetted_data['test_indication'].map({'Other':'contact_with_covid_object','Contact with confirmed':'contact_with_covid_patient','Abroad':'abroad'})\n\n# OneHotEncoding test_indication feature\ntest_indication = pd.get_dummies(subsetted_data['test_indication']).astype(int)\nsubsetted_data = pd.concat([subsetted_data,test_indication],axis=1)\nsubsetted_data.drop(['test_date','test_indication'],axis=1,inplace=True)\n\n# Manipulated data\nmanipulated_data = subsetted_data[['year','month','day','cough','fever','sore_throat','shortness_of_breath','head_ache','age_60_and_above','gender','abroad','contact_with_covid_object','contact_with_covid_patient','corona_result']]\nmanipulated_data.info()","5a4fc368":"datetime = pd.to_datetime(original_data['test_date'],format='%Y-%m-%d')\noriginal_data['month'] = datetime.dt.month","6c8e4dd8":"month1 = original_data[original_data['corona_result']=='positive']['month'].value_counts().sort_index()\nmonth2 = subsetted_data[subsetted_data['corona_result']==1]['month'].value_counts().sort_index()\n\nfig = make_subplots(rows=1, cols=2,specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=(\"<b>Original Data<\/b>\", \"<b>Subsetted Data<\/b>\"))\n\nfig.add_trace(\n    go.Pie(labels=month1.index.tolist(), values=month1.tolist(),textposition='inside',textinfo='percent',textfont={'size':18},marker_colors=px.colors.sequential.Plasma_r),\n              row=1, col=1)  \n\nfig.add_trace(\n    go.Pie(labels=month2.index.tolist(), values=month2.tolist(),textposition='inside',textinfo='percent',textfont={'size':18},marker_colors=px.colors.sequential.Plasma_r),\n              row=1, col=2)\n\nfig.update_layout(\n    template='plotly_dark',\n    title_text=\"<b>Month Wise Active Covid Caes<\/b>\",\n    title_x=0.5\n)\n\nfig.show()","463376be":"manipulated_data.to_csv(\"manipulated_data.csv\",index = False)","b18ddec4":"### Count of Covid Patients having Shortness of Breath w.r.t Gender","e6c127c3":"### Count of Covid Patients having Fever w.r.t Gender","6172be78":"### Count of Covid Patients having Sore Throat w.r.t Gender","609d6079":"### Conclusions\n\n> 1. *There are 26,58,462 duplicate rows in Original Data hence removed the duplicates.*\n> 2. *Compared the Time series of Original data vs Subsetted Data (Subsetted data = Original data after removing duplicates).*\n> 3. *Visualized the symptoms on both datasets*\n> 4. *Maximum Covid - positive patients were found in September month in both dataset*","12a23a22":"### Data Manipulation ","f560b60e":"### Covid Report w.r.t Age and Gender Distribution","b18e250a":"#### Total duplicate records in Original Dataset = 26,58,462","dbc1c8bf":"### Month Wise Active Test Cases","5fcca1a7":"### Corona Test Result based on Gender","c230c03a":"### Data Loading","97c3a4d8":"### Time Series Analysis for both Original & Subsetted Data","f82afc1a":"### Finding the Active cases","a6e29292":"## **Step 2: Data Visualization & Manipulation**\n<br>\n\n> #### By: Rutuja Vaidya","5572a945":"### Count of Covid Patients having Headache w.r.t Gender","40b00eca":"### Count of Covid Patients having Cough w.r.t Gender","7a559cd4":"### Output CSV","bec7992f":"### Test Indication Pie Chart","538ac562":"### Dropping Duplicate rows"}}