{"cell_type":{"9d39ca10":"code","102975ed":"code","21276900":"code","27cd648b":"code","b3aedc96":"code","50cbf00f":"code","bcbcf912":"code","878cb0bf":"code","07df12be":"code","e8f7c7b3":"code","54a1aa33":"code","ebafe78c":"code","fecc97e6":"code","0dcaf04a":"code","fadcc7dc":"code","e4110e1a":"code","870d4046":"code","8bac83ae":"code","e81b4a56":"code","90322da0":"code","7fc6bd2d":"code","df092576":"code","eea6a37a":"code","37fc706f":"code","11a32351":"code","aa1524d0":"code","2ba496f2":"code","22ecfe76":"code","e8a2b094":"code","47f66134":"code","50a2b125":"code","444553be":"markdown","8ebb3b9c":"markdown","bea5a210":"markdown"},"source":{"9d39ca10":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#import numpy as np # linear algebra\n#import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    #for filename in filenames:\n        #print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","102975ed":"import numpy as np\nimport pandas as pd","21276900":"import os\nfrom PIL import Image\nfrom matplotlib import pyplot as plt\nfrom skimage import color\nfrom skimage.feature import hog","27cd648b":"normal_train_folders = os.listdir(\"..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\")\npneumonia_train_folders = os.listdir(\"..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\")","b3aedc96":"normal_train = np.zeros(len(normal_train_folders), dtype=object)\nfor dirname, _, filenames in os.walk(\"..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\"):\n    for i in range(len(filenames)):\n        img = Image.open(os.path.join(dirname, filenames[i]))\n        img = img.resize((80,80), Image.ANTIALIAS)\n        img = np.array(img)\n        img.reshape((80,80,-1))\n        normal_train[i]=img","50cbf00f":"pneumonia_train=np.zeros(len(pneumonia_train_folders),dtype=object)\nfor dirname, _, filenames in os.walk(\"..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\"):\n    for i in range(len(filenames)):\n        img = Image.open(os.path.join(dirname, filenames[i]))\n        img = img.resize((80,80), Image.ANTIALIAS)\n        img = np.array(img)\n        img.reshape((80,80,-1))\n        pneumonia_train[i]=img","bcbcf912":"plt.imshow(normal_train[5])","878cb0bf":"plt.imshow(pneumonia_train[5])","07df12be":"ppc = 8\n\nnormal_hog_train_images = np.zeros(len(normal_train),dtype=object)\nnormal_hog_train_features = np.zeros(len(normal_train),dtype=object)\n\npneumonia_hog_train_images = np.zeros(len(pneumonia_train),dtype=object)\npneumonia_hog_train_features = np.zeros(len(pneumonia_train),dtype=object)\n\n#HOG feature extraction of normal category\n\nfor i in range(len(normal_train)):\n    fd, hog_image = hog(normal_train[i], orientations=8, pixels_per_cell=(ppc, ppc),\n                    cells_per_block=(4, 4), visualize=True)\n    normal_hog_train_images[i] = hog_image\n    normal_hog_train_features[i] = fd\n\n#HOG feature extraction of pneumonia category\n    \nfor i in range(len(pneumonia_train)):\n    fd, hog_image = hog(pneumonia_train[i], orientations=8, pixels_per_cell=(ppc, ppc),\n                    cells_per_block=(4, 4), visualize=True)\n    pneumonia_hog_train_images[i] = hog_image\n    pneumonia_hog_train_features[i] = fd","e8f7c7b3":"plt.imshow(normal_hog_train_images[5], cmap='gray')","54a1aa33":"plt.imshow(pneumonia_hog_train_images[5], cmap='gray')","ebafe78c":"from sklearn import svm\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report,accuracy_score\nfrom sklearn.model_selection import train_test_split","fecc97e6":"training_normal, test_normal = train_test_split(normal_hog_train_images, shuffle=False)","0dcaf04a":"training_pneumonia, test_pneumonia = train_test_split(pneumonia_hog_train_images, shuffle=False)","fadcc7dc":"normal_train_labels = np.array([0 for i in range(len(training_normal))])\npneumonia_train_labels = np.array([1 for i in range(len(training_pneumonia))])\ntrain_labels = np.concatenate((normal_train_labels,pneumonia_train_labels))\n\nnormal_test_labels = np.array([0 for i in range(len(test_normal))])\npneumonia_test_labels = np.array([1 for i in range(len(test_pneumonia))])\ntest_labels = np.concatenate((normal_test_labels,pneumonia_test_labels))","e4110e1a":"training_normal_f, test_normal_f = train_test_split(normal_hog_train_features, shuffle=False)\ntraining_pneumonia_f, test_pneumonia_f = train_test_split(pneumonia_hog_train_features, shuffle=False)","870d4046":"normal_train_Y = np.array([0 for i in range(len(training_normal_f))])\npneumonia_train_Y = np.array([1 for i in range(len(training_pneumonia_f))])\ntrain_Y = np.concatenate((normal_train_Y,pneumonia_train_Y))\n\nnormal_test_Y = np.array([0 for i in range(len(test_normal_f))])\npneumonia_test_Y = np.array([1 for i in range(len(test_pneumonia_f))])\ntest_Y = np.concatenate((normal_test_Y,pneumonia_test_Y))","8bac83ae":"from sklearn.preprocessing import StandardScaler","e81b4a56":"normal_hog_train_features = training_normal_f.tolist()\npneumonia_hog_train_features = training_pneumonia_f.tolist()","90322da0":"scaler = StandardScaler().fit(normal_hog_train_features+pneumonia_hog_train_features)\nnormal_hog_train_features = scaler.transform(normal_hog_train_features)\npneumonia_hog_train_features = scaler.transform(pneumonia_hog_train_features)","7fc6bd2d":"train_set = np.vstack((normal_hog_train_features,pneumonia_hog_train_features))","df092576":"normal_hog_test_features = test_normal_f.tolist()\npneumonia_hog_test_features = test_pneumonia_f.tolist()","eea6a37a":"normal_hog_test_features = scaler.transform(normal_hog_test_features)\npneumonia_hog_test_features = scaler.transform(pneumonia_hog_test_features)","37fc706f":"test_set = np.vstack((normal_hog_test_features,pneumonia_hog_test_features))","11a32351":"clf = SVC(kernel=\"linear\", C=0.1)\nclf.fit(train_set, train_Y)","aa1524d0":"pred_test = clf.predict(test_set)","2ba496f2":"plt.figure(figsize=(10,5))\nplt.hist(test_Y - pred_test)\nplt.yscale('log')\nplt.xlabel('Expected Output Vs. Predicted Output')","22ecfe76":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns","e8a2b094":"cf_matrix = confusion_matrix(test_Y, pred_test)\nprint(cf_matrix)","47f66134":"sns.heatmap(cf_matrix, annot=True)","50a2b125":"from sklearn.metrics import classification_report\nprint(classification_report(test_Y, pred_test, target_names=[\"NORMAL\",\"PNEUMONIA\"]))","444553be":"Model Building with SVC","8ebb3b9c":"Splitting our dataset to train and test","bea5a210":"Creating labels for training"}}