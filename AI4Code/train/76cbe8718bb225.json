{"cell_type":{"f9911c24":"code","dab3b421":"code","75382903":"code","c806aa20":"code","72a49b6e":"code","4d26d28b":"code","05b91dc4":"code","7226137b":"code","c088b4e7":"code","e5883b3f":"code","162a365f":"code","bdb01a80":"code","236aa8a0":"code","53eac86e":"code","e4c09703":"code","8eb0f59f":"code","6722d320":"code","68c3cca5":"code","da0be831":"code","736e6f06":"code","f873dffe":"code","cf50e835":"code","46e13409":"code","a556aca5":"code","0493a503":"code","c3f9f7f4":"code","3f472eed":"code","67327750":"code","ecd66bc2":"code","e18106fb":"code","48dc891f":"code","7dde45c0":"code","b9665900":"code","883037d8":"code","bd4c7216":"code","4ad341fb":"code","f1eb1cf1":"code","bb869b47":"code","8a0ada34":"code","2059c767":"code","6803609a":"code","3c1d9b36":"code","ef858bb0":"code","0e7bba9e":"code","567a2921":"code","87a0026b":"code","a20a728d":"code","462d1fac":"code","8e0ebef3":"code","8458fa2e":"code","b4a078fc":"code","2314582d":"code","f45ae675":"code","260700d5":"code","1041a8b6":"markdown","d5c4d140":"markdown","8bf452f4":"markdown","7292e537":"markdown","6f3da6f6":"markdown","fe8d5012":"markdown"},"source":{"f9911c24":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dab3b421":"import warnings\nwarnings.simplefilter('ignore')\ndf=pd.read_csv('\/kaggle\/input\/entrepreneurial-competency-in-university-students\/data.csv')","75382903":"df.head()","c806aa20":"df.info()","72a49b6e":"import matplotlib.pyplot as plt\nimport seaborn as sns","4d26d28b":"df_n=df[df['y']==0]\ndf_y=df[df['y']==1]","05b91dc4":"df_1=pd.DataFrame(df.groupby('EducationSector')['EducationSector'].count())\ndf_n1=pd.DataFrame(df_n.groupby('EducationSector')['EducationSector'].count())\ndf_y1=pd.DataFrame(df_y.groupby('EducationSector')['EducationSector'].count())\nplt.subplots_adjust(wspace=1, hspace=0.1)\nlabels=['Art, Music or Design','Economic and Businesss','Engineering Sciences','\\n\\n\\nHumanities and Social Sciences','\\n\\nLanguage and Cultural Studies',\n        '\\nMathematics or Natural Sciences','Medicine, Health Sciences','Others','Teaching Degree (e.g., B.Ed)']\nplt.subplot(2,2,1)\nplt.title('EducationSector_All')\ndf_1['EducationSector'].plot.pie(autopct=\"%1.1f%%\",figsize=(12,12),labels=labels,explode=[0, 0, 0.3, 0, 0,0,0,0,0])\n\nplt.subplot(2,2,2)\nplt.title('EducationSector_E\/P_No')\ndf_n1['EducationSector'].plot.pie(autopct=\"%1.1f%%\",labels=labels,explode=[0, 0, 0.3, 0, 0,0,0,0])\n\nplt.subplot(2,2,3)\nplt.title('EducationSector_E\/P_Yes')\ndf_y1['EducationSector'].plot.pie(autopct=\"%1.1f%%\",labels=labels,explode=[0, 0, 0.3, 0, 0,0,0])","7226137b":"df_2=pd.DataFrame(df.groupby('IndividualProject')['IndividualProject'].count())\ndf_n2=pd.DataFrame(df_n.groupby('IndividualProject')['IndividualProject'].count())\ndf_y2=pd.DataFrame(df_y.groupby('IndividualProject')['IndividualProject'].count())\nplt.subplots_adjust(wspace=1, hspace=0.1)\n\nplt.subplot(1,3,1)\nplt.title('IndividualProject_All')\ndf_2['IndividualProject'].plot.pie(autopct=\"%1.1f%%\",figsize=(12,12),explode=[0,0.3])\n\nplt.subplot(1,3,2)\nplt.title('IndividualProject_E\/P_No')\ndf_n2['IndividualProject'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])\n\nplt.subplot(1,3,3)\nplt.title('IndividualProject_E\/P_Yes')\ndf_y2['IndividualProject'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])","c088b4e7":"df_3=pd.DataFrame(df.groupby('City')['City'].count())\ndf_n3=pd.DataFrame(df_n.groupby('City')['City'].count())\ndf_y3=pd.DataFrame(df_y.groupby('City')['City'].count())\nplt.subplots_adjust(wspace=1, hspace=0.1)\n\nplt.subplot(1,3,1)\nplt.title('City_All')\ndf_3['City'].plot.pie(autopct=\"%1.1f%%\",figsize=(12,12),explode=[0,0.3])\n\nplt.subplot(1,3,2)\nplt.title('City_E\/P_No')\ndf_n3['City'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])\n\nplt.subplot(1,3,3)\nplt.title('City_E\/P_Yes')\ndf_y3['City'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])","e5883b3f":"df_4=pd.DataFrame(df.groupby('Gender')['Gender'].count())\ndf_n4=pd.DataFrame(df_n.groupby('Gender')['Gender'].count())\ndf_y4=pd.DataFrame(df_y.groupby('Gender')['Gender'].count())\nplt.subplots_adjust(wspace=1, hspace=0.1)\n\nplt.subplot(1,3,1)\nplt.title('Gender_All')\ndf_4['Gender'].plot.pie(autopct=\"%1.1f%%\",figsize=(12,12),explode=[0,0.3])\n\nplt.subplot(1,3,2)\nplt.title('Gender_E\/P_No')\ndf_n4['Gender'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])\n\nplt.subplot(1,3,3)\nplt.title('Gender_E\/P_Yes')\ndf_y4['Gender'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])","162a365f":"df_5=pd.DataFrame(df.groupby('Age')['Age'].count())\ndf_n5=pd.DataFrame(df_n.groupby('Age')['Age'].count())\ndf_y5=pd.DataFrame(df_y.groupby('Age')['Age'].count())\nplt.subplots_adjust(wspace=1, hspace=0.1)\n\nplt.subplot(1,3,1)\nplt.title('Age_All')\ndf_5['Age'].plot.bar(figsize=(15,5))\n\nplt.subplot(1,3,2)\nplt.title('Age_E\/P_No')\ndf_n5['Age'].plot.bar()\n\nplt.subplot(1,3,3)\nplt.title('Age_E\/P_Yes')\ndf_y5['Age'].plot.bar()","bdb01a80":"df_6=pd.DataFrame(df.groupby('Influenced')['Influenced'].count())\ndf_n6=pd.DataFrame(df_n.groupby('Influenced')['Influenced'].count())\ndf_y6=pd.DataFrame(df_y.groupby('Influenced')['Influenced'].count())\nplt.subplots_adjust(wspace=1, hspace=0.1)\n\nplt.subplot(1,3,1)\nplt.title('Influenced_All')\ndf_6['Influenced'].plot.pie(autopct=\"%1.1f%%\",figsize=(12,12),explode=[0,0.3])\n\nplt.subplot(1,3,2)\nplt.title('Influenced_E\/P_No')\ndf_n6['Influenced'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])\n\nplt.subplot(1,3,3)\nplt.title('Influenced_E\/P_Yes')\ndf_y6['Influenced'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3])","236aa8a0":"df7=df[['Perseverance','DesireToTakeInitiative','Competitiveness','SelfReliance','StrongNeedToAchieve','SelfConfidence','GoodPhysicalHealth','y']]","53eac86e":"df7_n=df7[df7['y']==0]\ndf7_y=df7[df7['y']==1]\ndf7=df7.drop('y',axis=1)\ndf7_n=df7_n.drop('y',axis=1)\ndf7_y=df7_y.drop('y',axis=1)","e4c09703":"df7_mean=pd.DataFrame(df7.mean())\ndf7_n_mean=pd.DataFrame(df7_n.mean())\ndf7_y_mean=pd.DataFrame(df7_y.mean())","8eb0f59f":"plt.subplots_adjust(wspace=1, hspace=0.1)\n\nplt.subplot(1,3,1)\nplt.title('Soft Skill_All')\ndf7_mean[0].plot.bar(figsize=(15,5))\n\nplt.subplot(1,3,2)\nplt.title('Soft_Skill_E\/P_No')\ndf7_n_mean[0].plot.bar()\n\nplt.subplot(1,3,3)\nplt.title('Soft_Skill_E\/P_Yes')\ndf7_y_mean[0].plot.bar()","6722d320":"df_8=pd.DataFrame(df.groupby('KeyTraits')['KeyTraits'].count())\ndf_n8=pd.DataFrame(df_n.groupby('KeyTraits')['KeyTraits'].count())\ndf_y8=pd.DataFrame(df_y.groupby('KeyTraits')['KeyTraits'].count())\nplt.subplots_adjust(wspace=1, hspace=0.1)\n\nplt.subplot(1,3,1)\nplt.title('KeyTraits_All')\ndf_8['KeyTraits'].plot.pie(autopct=\"%1.1f%%\",figsize=(12,12),explode=[0,0.3,0,0,0])\n\nplt.subplot(1,3,2)\nplt.title('KeyTraits_E\/P_No')\ndf_n8['KeyTraits'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3,0,0,0])\n\nplt.subplot(1,3,3)\nplt.title('KeyTraits_E\/P_Yes')\ndf_y8['KeyTraits'].plot.pie(autopct=\"%1.1f%%\",explode=[0,0.3,0,0,0])","68c3cca5":"from nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\nfrom string import punctuation\nimport string\nimport squarify\nimport seaborn as sns\n\nlist_stopwords = set(stopwords.words('english'))","da0be831":"df9=df[['ReasonsForLack']]\ndf9=df9.dropna()","736e6f06":"df9","f873dffe":"df9['ReasonsForLack'] = df9['ReasonsForLack'].str.lower()\ndf9['ReasonsForLack'] = df9['ReasonsForLack'].apply(word_tokenize)\ndf9['ReasonsForLack'] = df9['ReasonsForLack'].apply(lambda x: [word for word in x if word not in list_stopwords])\ndf9['ReasonsForLack'] = df9['ReasonsForLack'].apply(lambda x : [word.translate(str.maketrans('', '', string.punctuation)) for word in x])\ndf9['ReasonsForLack'] = df9['ReasonsForLack'].apply(lambda x : [word for word in x if len(word) > 1])","cf50e835":"df9","46e13409":"df9_e=pd.DataFrame(df9['ReasonsForLack'].explode())","a556aca5":"df9_e","0493a503":"df9_e=pd.DataFrame(df9_e.groupby('ReasonsForLack')['ReasonsForLack'].count().sort_values(ascending=False).head(50))\ndf9_e=df9_e.rename(columns={'ReasonsForLack': 'num'})\n\nx = df9_e['num']\nlabel = df9_e.index\nsquarify.plot(x, label=label,color=sns.color_palette('husl'))\nplt.axis('off')\nplt.show()","c3f9f7f4":"df1=df.drop('ReasonsForLack',axis=1)","3f472eed":"df1=pd.get_dummies(df1)","67327750":"df1","ecd66bc2":"import lightgbm as lgb\nfrom sklearn.metrics import log_loss\nfrom sklearn.model_selection import train_test_split\nfrom matplotlib import pyplot as plt","e18106fb":"X = df1.drop('y',axis=1)\nY = df1['y']","48dc891f":"pd.set_option('display.max_columns', 50)","7dde45c0":"X","b9665900":"X=X.rename(columns={'EducationSector_Art, Music or Design':'Edu_Art Music or Design',\n                  'EducationSector_Economic Sciences, Business Studies, Commerce and Law':'Edu_Eco Business Commerce and Law',\n                  'EducationSector_Medicine, Health Sciences':'Edu_Medi Health',\n                  'EducationSector_Teaching Degree (e.g., B.Ed)':'Edu_Teaching'})","883037d8":"train_X, test_X, train_Y, test_Y = train_test_split(X, Y,test_size=0.3,shuffle=True,random_state=0)","bd4c7216":"lgb_train = lgb.Dataset(train_X, train_Y)\nlgb_test = lgb.Dataset(test_X, test_Y, reference=lgb_train)","4ad341fb":"params = {'objective':'binary', \n              'metric':'binary_logloss', \n              'verbosity': -1}","f1eb1cf1":"lgb_results = {}\nmodel = lgb.train(params=params,\n                  train_set=lgb_train,\n                  valid_sets=[lgb_train, lgb_test],\n                  valid_names=['Train', 'Test'],\n                  num_boost_round=100,\n                  early_stopping_rounds=10,\n                  evals_result=lgb_results)","bb869b47":"X['y']=df1['y']","8a0ada34":"X","2059c767":"from sklearn.cluster import KMeans","6803609a":"pred=KMeans(n_clusters=5,random_state=10).fit_predict(X)","3c1d9b36":"pred","ef858bb0":"X['cluster']=pred\ndf10=pd.DataFrame(X.groupby(['cluster','y'])['y'].count())\ndf10=df10.rename(columns={'y':'num'},index={'y':'y'})\ndf10=df10.reset_index(level='y')","0e7bba9e":"df10","567a2921":"df10.pivot_table(['y', 'num'], index='cluster', columns='y').plot.bar()","87a0026b":"df11=X.groupby('cluster').mean()\ndf12=df11[['Perseverance','DesireToTakeInitiative','Competitiveness','SelfReliance','StrongNeedToAchieve','GoodPhysicalHealth']]","a20a728d":"df12.plot.bar()\nplt.legend(bbox_to_anchor=(0, -0.1), loc='upper left', borderaxespad=0, fontsize=10)","462d1fac":"from sklearn.decomposition import PCA","8e0ebef3":"X1=X.drop('cluster',axis=1)","8458fa2e":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nclustering_sc = sc.fit_transform(X1)","b4a078fc":"x1 = clustering_sc\npca = PCA(n_components=2)\npca.fit(x1)\nx_pca = pca.transform(x1)\ndf13= pd.DataFrame(x_pca)","2314582d":"df13['cluster']=X['cluster']","f45ae675":"df13","260700d5":"for i in X['cluster'].unique():\n    tmp = df13.loc[df13['cluster'] == i]\n    plt.scatter(tmp[0], tmp[1])","1041a8b6":"1. Visualization and EDA","d5c4d140":"3.Trial Prediction Model by LGBM without tuning","8bf452f4":"By PCA, I will get 2 components for clusters.","7292e537":"2. NLP","6f3da6f6":"The outline of features of entrepreneurs\n\n1) Over 60% is Engineering back groud.\n2) Over 60% have individual project.\n3) 78% are male.\n4) 19 to 20 years old, especially 19 year old have more potentials.\n5) Over 85% have influenced person.\n6) Positiity is very important.","fe8d5012":"4. Clustering"}}