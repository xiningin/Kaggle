{"cell_type":{"cda6204e":"code","d08ea57f":"code","364710b9":"code","12f4518d":"code","a5e1ec72":"code","cb3a602c":"code","b1679c1b":"code","3e646c8b":"code","28258a0d":"code","15c346a5":"code","5e2821c4":"code","3d3e9b30":"code","7dd68546":"code","0c3291d2":"code","9aac5f4e":"code","737117ef":"code","cc9a231f":"code","1d047b1d":"code","7d0adc46":"code","9aa2b310":"code","26b86084":"code","fa134c07":"code","afb85e0d":"code","5fc8bc4e":"code","46160373":"code","0963aebc":"code","9eb6ffd1":"code","7859d717":"code","546859fc":"code","f7499fb2":"code","1c4ce3ec":"code","fc5f8dcc":"code","9afabab5":"code","27c3dff7":"code","d4d18457":"markdown","a1628bb6":"markdown","b4a0c8a8":"markdown","4aa464f8":"markdown","f33827a9":"markdown","185f3458":"markdown","f27a3151":"markdown","3b2a5846":"markdown","ddadf006":"markdown","6005fb42":"markdown","9b502e8a":"markdown","9f6a8abd":"markdown","38f5efb4":"markdown","20ebbcc0":"markdown","d2107991":"markdown","5710ff16":"markdown","a3727360":"markdown","20057f8c":"markdown","4b33ffa8":"markdown","e2c69d2e":"markdown","689d1a7e":"markdown"},"source":{"cda6204e":"import pandas as pd\nimport seaborn as sns\nfrom sklearn import preprocessing, ensemble, model_selection\n\n%pylab inline","d08ea57f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","364710b9":"history = pd.read_csv('..\/input\/softserve-ds-hackathon-2020\/history.csv')\nhistory.Date = pd.to_datetime(history.Date)\nhistory.head()","12f4518d":"employees = pd.read_csv('..\/input\/softserve-ds-hackathon-2020\/employees.csv')\nemployees.DismissalDate = pd.to_datetime(employees.DismissalDate)\nemployees.HiringDate = pd.to_datetime(employees.HiringDate)\nemployees.head()","a5e1ec72":"sample = employees.EmployeeID[0]\nemployees[employees.EmployeeID == sample]","cb3a602c":"history[history.EmployeeID == sample]","b1679c1b":"submission = pd.read_csv('..\/input\/softserve-ds-hackathon-2020\/submission.csv')\nsubmission[submission.EmployeeID == sample]","3e646c8b":"history.Date.describe()","28258a0d":"history.dtypes","15c346a5":"employees.shape[0]","5e2821c4":"hired_emplID = employees[employees.DismissalDate.isna()].EmployeeID\nhired_emplID.shape[0]","3d3e9b30":"dismissed_emplID = employees[employees.DismissalDate.notna()].EmployeeID\ndismissed_emplID.shape[0]","7dd68546":"predict_emplID = submission.EmployeeID\nsubmission.shape[0]","0c3291d2":"hired_empl_history = history[history.EmployeeID.isin(hired_emplID.values)].set_index(['EmployeeID', 'Date'])\nhired_empl_history['IsHired'] = True\nhired_empl_history","9aac5f4e":"dismissed_empl_history = history[history.EmployeeID.isin(dismissed_emplID.values)].set_index(['EmployeeID', 'Date'])\ndismissed_empl_history['IsHired'] = False\ndismissed_empl_history.nunique()","737117ef":"countplot_columns = ['PositionLevel', \n                     'IsTrainee', \n                     'LanguageLevelID',\n                     'IsInternalProject', \n                     'OnSite', \n                     'PaymentTypeId',\n                     'FunctionalOfficeID',\n                    ]","cc9a231f":"fig, ax = plt.subplots(3, 3, figsize=(20, 20))\nfor idx, ax in enumerate(ax.flat):\n    sns.countplot(x=countplot_columns[idx], data=dismissed_empl_history, ax=ax) #row=0, col=0\n    if idx == 6:\n        break\nfig.show()","1d047b1d":"hired_data = pd.concat([dismissed_empl_history, hired_empl_history])\nsns.countplot(x='IsTrainee', data=dismissed_empl_history)","7d0adc46":"paiplot_columns = ['IsHired', 'Utilization', 'WageGross', 'MonthOnPosition', 'MonthOnSalary']\npaiplot_data = pd.concat([dismissed_empl_history[paiplot_columns].groupby('EmployeeID').max(),\n                          hired_empl_history[paiplot_columns].groupby('EmployeeID').max()])\n\nplt.figure(figsize=(10,8))\nsns.pairplot(paiplot_data, hue = 'IsHired', hue_order=[True, False], palette = 'muted', diag_kind='kde', vars=paiplot_columns[1:])","9aa2b310":"hist_dates = history.Date.unique()\nhist_dates","26b86084":"agg_funcs = {}\n              \nfor col in concatenate([history.columns[2:8], history.columns[10:]]):\n    agg_funcs[col] = 'mean'\n    if col in ['MonthOnPosition', 'MonthOnSalary', 'IsTrainee','OnSite', 'IsInternalProject', 'LanguageLevelID']:\n        agg_funcs[col] = 'max'\n    if col in ['BonusOneTime', 'HourVacation', 'PositionLevel']:\n        agg_funcs[col] = 'sum'\nagg_funcs","fa134c07":"data_batches = []\nemployeesID = employees.EmployeeID\n# employees.set_index('EmployeeID')\nfor date in hist_dates[2::3]:\n    period_employees = history[history.Date == date].EmployeeID\n    period_data = history[history.EmployeeID.isin(employeesID) & (history.Date <= date)]\n    period_data = period_data.drop(columns=['CustomerID', 'ProjectID', 'Date']).groupby('EmployeeID').agg(agg_funcs)\n    period_data['target'] = 0\n    \n    for employee in period_employees:\n        dismiss_date = employees[employees.EmployeeID == employee].iloc[0].DismissalDate\n        \n        if not pd.isnull(dismiss_date):\n            \n            if (dismiss_date - date) < np.timedelta64(3, 'M'):\n                period_data.at[employee, 'target'] = 1\n    data_batches.append(period_data)\n\nlen(data_batches)","afb85e0d":"data_batches[0].columns","5fc8bc4e":"from sklearn.utils import resample\n\ntrain_data_x = []\ntrain_data_y = []\nfor batch in data_batches[-1:]:\n    batch_minority = batch[batch.target == 1]\n    batch_majority = batch[batch.target == 0]\n    batch_minority_upsampled = resample(batch_minority, replace=True, n_samples=batch.shape[0], random_state=123)\n    batch_balanced = pd.concat([batch_majority, batch_minority_upsampled])\n    train_data_x.append(batch_balanced.drop('target', axis=1))\n    train_data_y.append(batch_balanced.target)\n    \ntrain_data_x = concatenate(train_data_x)\ntrain_data_y = concatenate(train_data_y)\ntrain_data_x.shape, train_data_y.sum()","46160373":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(train_data_x)\ntrain_data_x = scaler.transform(train_data_x)\ntrain_data_x","0963aebc":"np.savetxt('train_data_x.csv', train_data_x, delimiter=',')\nnp.savetxt('train_data_y.csv', train_data_y, delimiter=',')","9eb6ffd1":"employeesID = submission.EmployeeID\ndate = hist_dates[-1]\nsubmit_data_x = history[history.EmployeeID.isin(employeesID)]\nsubmit_data_x = submit_data_x.drop(columns=['CustomerID', 'ProjectID', 'Date']).groupby('EmployeeID').agg(agg_funcs)\nsubmit_data_x = np.array(submit_data_x)\nsubmit_data_x","7859d717":"scaler.fit(submit_data_x)\nsubmit_data_x = scaler.transform(submit_data_x)\nsubmit_data_x","546859fc":"np.savetxt('submit_data_x.csv', submit_data_x, delimiter=',')","f7499fb2":"train_data_x","1c4ce3ec":"submit_data_x","fc5f8dcc":"from sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression(random_state = 0)\nlr.fit(train_data_x, train_data_y)\nsubmit_data_y = lr.predict(submit_data_x)\nlen(submit_data_x), submit_data_y.sum()","9afabab5":"submit_df = pd.read_csv('..\/input\/softserve-ds-hackathon-2020\/submission.csv')\ntest_id = submit_df.EmployeeID","27c3dff7":"submission = pd.DataFrame({'EmployeeID': test_id, 'target':submit_data_y})\nsubmission.target = submission.target.astype(int)\nsubmission.to_csv('my_submission.csv', index=False)","d4d18457":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0432\u043e\u043b\u0438\u043b\u0438\u0441\u044c","a1628bb6":"\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0432\u043e\u043b\u0438\u043b\u0438\u0441\u044c","b4a0c8a8":"\u0414\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 'CustomerID' \u0438 'ProjectID' \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f.","4aa464f8":"\u041a\u0430\u0436\u0434\u0430\u044f \u043f\u0430\u0440\u0442\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0432 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438. \u0412 \u0441\u0442\u043e\u043b\u0431\u0446\u0435 \u0442\u0430\u0440\u0433\u0435\u0442\u0430 1 \u0438\u043b\u0438 0 - \u0443\u0432\u043e\u043b\u0438\u043b\u0441\u044f \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a \u0432 \u043f\u0435\u0440\u0438\u043e\u0434 \u0441\u043b\u0435\u0434 3 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0438\u043b\u0438 \u043d\u0435\u0442. \u041f\u0430\u0440\u0442\u0438\u0438 \u0431\u0435\u0440\u0443\u0442\u0441\u044f \u0441 \u043f\u0435\u0440\u0438\u043e\u0434\u043e\u043c \u0432 3 \u043c\u0435\u0441\u044f\u0446\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441\u043e 2.","f33827a9":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442","185f3458":"\u041e \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u043d\u044b\u0445 200 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430\u0445: These employees are of no interest to risk assessment in terms of this competition due to specific circumstances with their employment that are not reflected in the historical data. Please, consider them as \"still working\" employees","f27a3151":"## \u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","3b2a5846":"\u0412\u044b\u0432\u043e\u0434\u044b:\n1. \u0420\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0438 \u0443\u0432\u043e\u043b\u044c\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u043d\u0430 8-9 \u043c\u0435\u0441\u044f\u0446\u0435 \u043f\u0440\u0435\u0431\u044b\u0432\u0430\u043d\u0438\u044f \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438. \u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u0435\u043e\u0434\u043e\u043b\u0435\u043d\u0438\u044f 10-\u043c\u0435\u0441\u044f\u0447\u043d\u043e\u0433\u043e \u0440\u0443\u0431\u0435\u0436\u0430 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0438 \u0432\u0441\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 \u0441\u043a\u043b\u043e\u043d\u043d\u044b \u0443\u0432\u043e\u043b\u044c\u043d\u044f\u0442\u044c\u0441\u044f.\n2. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u044b, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 WageGross \u0437\u0430 \u043a\u0430\u0440\u044c\u0435\u0440\u0443 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e.","ddadf006":"## \u041f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0442\u0435\u0441\u0442 \u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435","6005fb42":"\u041e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u0437\u0430 \u0432\u0441\u0435 \u0432\u0440\u0435\u043c\u044f","9b502e8a":"\u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0443, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c.","9f6a8abd":"\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435.","38f5efb4":"\u0421\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u043d\u0430\u043c \u0447\u0438\u0441\u043b\u043e \u043f\u0430\u0440\u0442\u0438\u0439 \u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443. \u0411\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u0443\u0435\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u0431\u0443\u0442\u0441\u0442\u0440\u0435\u043f\u043e\u043c. \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0442\u0430\u0440\u0433\u0435\u0442. ","20ebbcc0":"\u0421\u043e\u0445\u0440\u0430\u043d\u044f\u044e \u0441\u0432\u043e\u0438 \u0442\u0440\u0443\u0434\u044b \u0432 \u0444\u0430\u0439\u043b\u0438\u043a\u0438.","d2107991":"\u0422\u0430\u043a \u043a\u0430\u043a \u044f \u043d\u0435 \u0443\u043c\u0435\u044e \u0432 \u0422\u0430\u0439\u043c \u0421\u0435\u0440\u0438\u0435\u0441, \u0431\u0443\u0434\u0443 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442. \u0411\u0443\u0434\u0435\u043c \u0433\u0440\u0443\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430\u043c. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438:","5710ff16":"\u041f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u043c \u0432\u0441\u0435 \u0434\u0430\u0442\u044b","a3727360":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f ","20057f8c":"## \u0413\u0440\u0430\u0444\u0438\u043a\u0438","4b33ffa8":"## Packages","e2c69d2e":"\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442","689d1a7e":"## Overview of the Problem set"}}