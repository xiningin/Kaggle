{"cell_type":{"0142f7a9":"code","272872ea":"code","2a1b109b":"code","b24828d5":"code","47fee0ac":"code","659845ee":"code","75f6a31c":"code","7abd0ef9":"code","4fbe594a":"code","79db1ae1":"code","fffbf8c3":"code","15ea1884":"code","0dad43ed":"code","23dbf3f3":"code","a897b7df":"code","6f98dda1":"code","81085d9f":"code","05e97403":"code","1e7a1c70":"code","1babb3e7":"code","c3ba7d54":"code","362d058e":"code","bf006ad9":"code","d99df27f":"code","7d8e6805":"code","da8086f6":"code","18590107":"markdown"},"source":{"0142f7a9":"import pandas as pd\ndataset=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndataset.head()","272872ea":"dataset.info()","2a1b109b":"dataset.nunique().sort_values(ascending=False)[:5]","b24828d5":"data = dataset.sample(frac=0.8, random_state=42)\ndata_unseen = dataset.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","47fee0ac":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","659845ee":"!pip install pycaret","75f6a31c":"from pycaret.classification import *","7abd0ef9":"numeric_features=data.columns.tolist()\nnumeric_features.remove('label')\nnumeric_features[:5]","4fbe594a":"data.label.value_counts()","79db1ae1":"exp_clf101 = setup(data = data, target = 'label', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                  numeric_imputation='median',\n                  categorical_imputation='mode',\n                   numeric_features=numeric_features)","fffbf8c3":"lightgbm = create_model('lightgbm')","15ea1884":"print(lightgbm)","0dad43ed":"tuned_lightgbm = tune_model(lightgbm,optimize = 'MCC')","23dbf3f3":"plot_model(tuned_lightgbm, plot = 'auc')","a897b7df":"plot_model(tuned_lightgbm, plot = 'pr')","6f98dda1":"plot_model(tuned_lightgbm, plot='feature')","81085d9f":"plot_model(tuned_lightgbm, plot = 'confusion_matrix')","05e97403":"evaluate_model(tuned_lightgbm)","1e7a1c70":"predict_model(tuned_lightgbm)","1babb3e7":"unseen_predictions = predict_model(tuned_lightgbm, data=data_unseen)\nunseen_predictions.head()","c3ba7d54":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","362d058e":"test=pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntest.head()","bf006ad9":"sol = predict_model(tuned_lightgbm, data=test)\nsol.head()","d99df27f":"final=pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nfinal.head()","7d8e6805":"final.Label=sol.Label\nfinal.head()","da8086f6":"final.to_csv('final.csv', index=False)","18590107":"#### Time is constant, so using model which will take less time to execute"}}