{"cell_type":{"01a50453":"code","cb1b9e11":"code","98eb6210":"code","9235e641":"code","b88d86cd":"code","bd980cae":"code","2f4de7d9":"code","b802bdbd":"code","497629c3":"markdown","1ee40c23":"markdown","dd31d9d5":"markdown"},"source":{"01a50453":"from IPython.display import clear_output\n!pip3 install rx\nclear_output()","cb1b9e11":"import rx \nfrom rx import of,operators as op\nfrom rx.subject import AsyncSubject","98eb6210":"DATA1 = \"apple\"\nDATA2 = \"orange\"\nDATA3 = \"melon\"\nDATA4 = \"kiwi\"","9235e641":"subject = AsyncSubject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nprint(\"\")\n\nprint(\"call on_completed()\")\nsubject.on_completed()\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA2)\nprint(\"\")","b88d86cd":"subject = AsyncSubject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nprint(\"\")\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA2)\nprint(\"\")\n\nprint(\"call on_completed()\")\nsubject.on_completed()","bd980cae":"subject = AsyncSubject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nprint(\"\")\n\nprint(\"call on_completed()\")\nsubject.on_completed()\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA2)\nprint(\"\")\n\nprint(\"call on_completed()\")\nsubject.on_completed()","2f4de7d9":"subject = AsyncSubject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nprint(\"\")\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA2)\nprint(\"\")\n\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Park : {0}\".format(x))\n)\n\nprint(\"publish 3\")\nsubject.on_next(DATA3)\nprint(\"\")\n\nprint(\"call on_completed()\")\nsubject.on_completed()","b802bdbd":"subject = AsyncSubject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nsubject.on_next(DATA2)\nprint(\"\")\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA3)\nprint(\"\")\n\nprint(\"call on_completed()\")\nsubject.on_completed()","497629c3":"the last value called is passed to the subscriber, \n \nand \n\n### it will be done \n### only after the complete() method is called.","1ee40c23":"# AsyncSubject","dd31d9d5":"### subject (observable + observer)\n\nA subject is an observable sequence, as well as, an observer."}}