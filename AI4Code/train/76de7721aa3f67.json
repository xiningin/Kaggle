{"cell_type":{"219a05af":"code","80bc731b":"code","fda9d265":"code","444c1de9":"code","0b51d6a0":"code","3041d79c":"code","027eb673":"code","3ce15ffb":"code","f4b91d6d":"code","dbf8f10e":"code","cfc9d8a0":"code","7eba9b84":"code","eba81c88":"code","1155d74a":"code","276cfa14":"code","f7c1afee":"code","a8aedcc6":"code","b30464ca":"code","410ca36a":"code","767c062a":"code","91c6fab2":"code","9c6b2aea":"code","0aaa4d59":"code","b3015df2":"code","bfac4a9c":"markdown","b91a27bd":"markdown","d7a9084b":"markdown","2fa81f18":"markdown","47f28885":"markdown","7483d320":"markdown","25b20ed4":"markdown","7f93bbcc":"markdown","dc51c97b":"markdown","072b1c65":"markdown","008c6d62":"markdown","9b15577e":"markdown","aa4b9264":"markdown","9f736751":"markdown","ec7bf03a":"markdown"},"source":{"219a05af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","80bc731b":"USAhousing = pd.read_csv('..\/input\/USA_Housing.csv')","fda9d265":"USAhousing.info()","444c1de9":"USAhousing.head()","0b51d6a0":"USAhousing.describe()","3041d79c":"USAhousing.columns","027eb673":"sns.pairplot(USAhousing)","3ce15ffb":"sns.distplot(USAhousing['Price'])","f4b91d6d":"sns.barplot","dbf8f10e":"sns.heatmap(USAhousing.corr())","cfc9d8a0":"X = USAhousing[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n               'Avg. Area Number of Bedrooms', 'Area Population']]\ny = USAhousing['Price']","7eba9b84":"from sklearn.model_selection import train_test_split","eba81c88":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)","1155d74a":"from sklearn.linear_model import LinearRegression","276cfa14":"lm = LinearRegression()","f7c1afee":"lm.fit(X_train,y_train)","a8aedcc6":"# print the intercept\nprint(lm.intercept_)","b30464ca":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","410ca36a":"Interpreting the coefficients:\n    ","767c062a":"predictions = lm.predict(X_test)","91c6fab2":"plt.scatter(y_test,predictions)","9c6b2aea":"sns.distplot((y_test-predictions),bins=50);","0aaa4d59":"from sklearn import metrics","b3015df2":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","bfac4a9c":"* Holding all other features fixed, a 1 unit increase in Avg. Area Income is associated with an increase of $21.52.\n* Holding all other features fixed, a 1 unit increase in Avg. Area House Age is associated with an increase of $164883.28.\n* Holding all other features fixed, a 1 unit increase in Avg. Area Number of Rooms is associated with an increase of $122368.67.\n* Holding all other features fixed, a 1 unit increase in Avg. Area Number of Bedrooms is associated with an increase of $2233.80 .\n* Holding all other features fixed, a 1 unit increase in Area Population is associated with an increase of $15.15.\n\n","b91a27bd":"**Train Test Split**","d7a9084b":"**X and y arrays**","2fa81f18":"**Creating and Training the Model**","47f28885":"Now let's split the data into a training set and a testing set. We will train out model on the training set and then use the test set to evaluate the model.","7483d320":"Let's now begin to train out regression model! We will need to first split up our \ndata into an X array that contains the features to train on, and a y array with the target \nvariable, in this case the Price column. We will toss out the Address column because it only\nhas text info that the linear regression model can't use.","25b20ed4":"**EDA**\n* Let's create some simple plots to check out the data!","7f93bbcc":"**Residual Histogram**","dc51c97b":"**Training a Linear Regression Model**","072b1c65":"**Model Evaluation**","008c6d62":"Let's evaluate the model by checking out it's coefficients and how we can interpret them.","9b15577e":"Let's grab predictions off our test set and see how well it did!","aa4b9264":"**Predictions from our Model**","9f736751":"## Regression Evaluation Metrics\n\n\nHere are three common evaluation metrics for regression problems:\n\n**Mean Absolute Error** (MAE) is the mean of the absolute value of the errors:\n\n$$\\frac 1n\\sum_{i=1}^n|y_i-\\hat{y}_i|$$\n\n**Mean Squared Error** (MSE) is the mean of the squared errors:\n\n$$\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2$$\n\n**Root Mean Squared Error** (RMSE) is the square root of the mean of the squared errors:\n\n$$\\sqrt{\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}$$\n\nComparing these metrics:\n\n- **MAE** is the easiest to understand, because it's the average error.\n- **MSE** is more popular than MAE, because MSE \"punishes\" larger errors, which tends to be useful in the real world.\n- **RMSE** is even more popular than MSE, because RMSE is interpretable in the \"y\" units.\n\nAll of these are **loss functions**, because we want to minimize them.","ec7bf03a":"*Check out the Data*"}}