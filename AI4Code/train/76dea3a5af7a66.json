{"cell_type":{"ec0e940f":"code","d252eec8":"code","4551b667":"code","9e073391":"code","4afd8a5b":"code","4f2d7091":"code","ad6304c1":"code","9fc021aa":"code","cade8620":"code","3f5d9a28":"code","b364d872":"code","82d91e2d":"code","e971d500":"code","5707d5f8":"code","4e4dd363":"code","75b8979c":"code","5911413e":"code","d6ddb74d":"code","d4c575d5":"code","18c1e454":"code","423e946b":"code","d05f0b07":"code","66731b57":"code","43fcfcaa":"code","b12ced81":"code","18dff949":"code","36a2959c":"code","7f9d4335":"code","0004791a":"code","98bc6f38":"code","f7f7ac0c":"code","3fe644e1":"code","de5db403":"code","5abb5a3d":"code","8751889d":"code","e609e230":"code","b5e4365d":"code","59b92952":"code","e0cd7700":"code","2accf096":"code","228a2999":"code","fbc30111":"code","5863d5ce":"code","6ad984bc":"code","34f12d59":"code","bbb1e47c":"markdown","df632a9b":"markdown","acfe2fc9":"markdown","3fa91ddc":"markdown","bad1d45c":"markdown","4ce5c321":"markdown","3d951336":"markdown","74499c42":"markdown","42e10bc1":"markdown","3bfec87b":"markdown","e39d5f2e":"markdown","81b09c77":"markdown","057a0f7e":"markdown","92731d4b":"markdown","c00e9945":"markdown","b8d86059":"markdown","ec8067d6":"markdown","03040a98":"markdown","d394c1c1":"markdown","4cd6f439":"markdown"},"source":{"ec0e940f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d252eec8":"import pandas as pd","4551b667":"df = pd.read_csv('\/kaggle\/input\/vehicle-dataset-from-cardekho\/car data.csv')\n\n\n\n\n\n","9e073391":"df.head()","4afd8a5b":"df.isnull().any()","4f2d7091":"df.isnull().sum()","ad6304c1":"import seaborn as sns\nsns.heatmap(df.isnull())","9fc021aa":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","cade8620":"sns.heatmap(df.corr())","3f5d9a28":"plt.scatter(df['Present_Price'],df['Selling_Price'])\nplt.xlabel('Present Price')\nplt.ylabel('Selling Price')","b364d872":"plt.scatter(df['Kms_Driven'],df['Selling_Price'])","82d91e2d":"#list of numerical values\nnumerical_features = [feature for feature in df.columns if df[feature].dtypes != 'O']\n\nprint('number of numerical variables', len(numerical_features))\nprint('total features ',len(df.columns))\n\ndf[numerical_features].head()","e971d500":"df.groupby('Year')['Selling_Price'].median().plot()\nplt.xlabel('Year')\nplt.ylabel('Selling Price')","5707d5f8":"df['year_diff'] = 2020 - df['Year']\ndf = df.drop('Year',axis=1)\ndf.head()","4e4dd363":"plt.scatter(df['year_diff'],df['Selling_Price'])\nplt.xlabel('Year Difference')\nplt.ylabel('Selling Price')","75b8979c":"data = df.copy()\ndata.groupby(df['Owner'])['Selling_Price'].median().plot.bar()\nplt.xlabel('No of owners previously')\nplt.ylabel('Selling price')","5911413e":"continous_feature = [df['Kms_Driven'],df['year_diff'],df['Present_Price']]","d6ddb74d":"df['Kms_Driven'].hist(bins=25)","d4c575d5":"df['year_diff'].hist(bins=25)","18c1e454":"df['Present_Price'].hist(bins=25)","423e946b":"\ndf['Kms_Driven'] = np.log(df['Kms_Driven'])\ndf['Present_Price'] = np.log(df['Present_Price'])","d05f0b07":"df['Kms_Driven'].hist(bins=25)","66731b57":"df['Present_Price'].hist(bins=25)","43fcfcaa":"categorical_features = [feature for feature in df.columns if df[feature].dtypes=='O']","b12ced81":"df[categorical_features].head()","18dff949":"df['Car_Name'].value_counts()\n","36a2959c":"df['Fuel_Type'].value_counts()","7f9d4335":"df['Seller_Type'].value_counts()","0004791a":"df['Transmission'].value_counts()","98bc6f38":"for feature in categorical_features:\n    data = df.copy()\n    data.groupby(feature)['Selling_Price'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('Sale Price')\n    plt.show()","f7f7ac0c":"df = df.drop('Car_Name',axis = 1)","3fe644e1":"df.head()","de5db403":"final_dataset = df","5abb5a3d":"final_dataset = pd.get_dummies(final_dataset,drop_first=True)","8751889d":"final_dataset.head()","e609e230":"final_dataset.columns","b5e4365d":"x = final_dataset[['Present_Price', 'Kms_Driven', 'Owner', 'year_diff',\n       'Fuel_Type_Diesel', 'Fuel_Type_Petrol', 'Seller_Type_Individual',\n       'Transmission_Manual']]\ny = final_dataset['Selling_Price']","59b92952":"x.head()","e0cd7700":"y.head()","2accf096":"from sklearn.model_selection import train_test_split\nx_train , x_test , y_train , y_test = train_test_split(x,y,test_size = 0.25,random_state = 0)","228a2999":"from sklearn.linear_model import LinearRegression\nlinear_model = LinearRegression()\nlinear_model.fit(x_train,y_train)\nprint(linear_model.score(x_test,y_test))","fbc30111":"from sklearn.tree import DecisionTreeRegressor\ntree = DecisionTreeRegressor()\ntree.fit(x_train,y_train)\nprint(tree.score(x_test,y_test))","5863d5ce":"from sklearn.ensemble import RandomForestRegressor\nforest =  RandomForestRegressor()\nforest.fit(x_train,y_train)\nprint(forest.score(x_test,y_test))","6ad984bc":"from sklearn.ensemble import GradientBoostingRegressor\ngrad_boost = GradientBoostingRegressor()\ngrad_boost.fit(x_train,y_train)\nprint(grad_boost.score(x_test,y_test))","34f12d59":"import xgboost\nfrom xgboost import XGBRegressor\nx_model = XGBRegressor()\nx_model.fit(x_train,y_train)\nprint(x_model.score(x_test,y_test))","bbb1e47c":"SOME EDA ON OUR DATASET","df632a9b":"check for if there are empty data or not!","acfe2fc9":"# DISCRETE AND CONTINOUS NUMERICAL FEATURES","3fa91ddc":"but since currently we are in year 2020 so we would just see the year difference and see how prices are varying with the year difference","bad1d45c":"SO this is enough EDA for our dataset , now we would do some feature engineering","4ce5c321":"MODEL","3d951336":"so we have roughly converted our datasets into normally distributes (roughly)","74499c42":"so most of our continous data is not normal , to practice regression we should have normally distributed data!, we would try to covert our skewed data into normal data using log conversions !","42e10bc1":"we can see that dicrete feature in numerical feature is only Owner","3bfec87b":"LINEAR REGRESSION","e39d5f2e":"since our target columns is 'Selling_Price' , we would se how it is affected by other variables","81b09c77":"so we confirmed , we have no missing data","057a0f7e":"YEAR FEATURE","92731d4b":"# FEATURE ENGINNERING","c00e9945":"as we know this is positively co-related data so as the 'present price' is increased thus 'selling price' would also increase ","b8d86059":"# NUMERICAL FEATURES","ec8067d6":"CATEGORICAL FEATURES","03040a98":"visualisng how the years are varying with selling price","d394c1c1":"now we would see continous features ","4cd6f439":"first thing that we dont need here is name of the car "}}