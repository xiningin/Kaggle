{"cell_type":{"44e70094":"code","09a97b1a":"code","fb9f1703":"code","1a25a92e":"code","79c48844":"code","9cf787b0":"code","a25c9e5d":"code","88a87e1b":"code","0b11b442":"code","b1a991d6":"code","5d58f764":"code","f2b41bc3":"code","9117f6cc":"code","d7e35005":"markdown","0a678db9":"markdown","8cd1d470":"markdown","02bb0c9a":"markdown"},"source":{"44e70094":"!pip install BeautifulSoup4","09a97b1a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport cufflinks as cf\ncf.set_config_file(offline=True)\n\nimport lightgbm as lgb\n\nfrom sklearn.metrics import r2_score\n\nimport pickle\n\nfrom datetime import datetime\nimport requests\nfrom bs4 import BeautifulSoup\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","fb9f1703":"df_weather = pd.read_csv('..\/input\/tyra-project-download-data\/weather.csv', index_col='ObsTime', parse_dates=True) \ndf_demand = pd.read_csv('..\/input\/tyra-project-download-data\/demand.csv', index_col='Date', parse_dates=True) \ndf_trend = pd.read_csv('..\/input\/tyra-project-download-data\/GoogleTrend.csv', index_col='date', parse_dates=True) \ndf_holiday_encode = pd.read_csv('..\/input\/tyra-project-download-data\/holiday_encode.csv', index_col='date', parse_dates=True) \n\nLGB_model_demand = pickle.load(open('..\/input\/tyra-project-peak-demand-prediction-model\/LGB_model_demand.pickle', 'rb'))\nLGB_model_supply = pickle.load(open('..\/input\/tyra-project-peak-supply-prediction-model\/LGB_model_supply.pickle', 'rb'))","1a25a92e":"df_meas_TaiPower = pd.DataFrame()\n\nwhile len(df_meas_TaiPower)==0:\n    try:\n        url = 'http:\/\/data.taipower.com.tw\/opendata\/apply\/file\/d006002\/%E6%9C%AC%E5%B9%B4%E5%BA%A6%E6%AF%8F%E6%97%A5%E5%B0%96%E5%B3%B0%E5%82%99%E8%BD%89%E5%AE%B9%E9%87%8F%E7%8E%87.csv'\n        df_meas_TaiPower = pd.read_csv(url)\n        df_meas_TaiPower = df_meas_TaiPower.rename(columns={'\u65e5\u671f':'Date'})\n        df_meas_TaiPower['Date'] = pd.to_datetime(df_meas_TaiPower['Date'])\n        df_meas_TaiPower = df_meas_TaiPower.set_index('Date')\n        df_meas_TaiPower['\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)'] = round(df_meas_TaiPower['\u5099\u8f49\u5bb9\u91cf(\u842c\u74e9)']\/df_meas_TaiPower['\u5099\u8f49\u5bb9\u91cf\u7387(%)']*100, 1)\n        df_meas_TaiPower['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)'] = df_meas_TaiPower['\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)'] + df_meas_TaiPower['\u5099\u8f49\u5bb9\u91cf(\u842c\u74e9)']\n        df_meas_TaiPower = df_meas_TaiPower[['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)', '\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)', '\u5099\u8f49\u5bb9\u91cf\u7387(%)', '\u5099\u8f49\u5bb9\u91cf(\u842c\u74e9)']]\n        time.sleep(1)\n    except:\n         pass\n        \ndf_meas_TaiPower","79c48844":"df_demand = pd.concat([df_demand[['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)', '\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)', '\u5099\u8f49\u5bb9\u91cf\u7387(%)', '\u5099\u8f49\u5bb9\u91cf(\u842c\u74e9)']], df_meas_TaiPower],axis=0)","9cf787b0":"df_pred_TaiPower = pd.DataFrame()\n\nwhile len(df_pred_TaiPower)==0:\n    try:\n        url = 'http:\/\/data.taipower.com.tw\/opendata\/apply\/file\/d006007\/%E5%8F%B0%E7%81%A3%E9%9B%BB%E5%8A%9B%E5%85%AC%E5%8F%B8_%E6%9C%AA%E4%BE%86%E4%B8%80%E9%80%B1%E9%9B%BB%E5%8A%9B%E4%BE%9B%E9%9C%80%E9%A0%90%E6%B8%AC.csv'\n        df_pred_TaiPower = pd.read_csv(url, encoding='big5')\n        df_pred_TaiPower = df_pred_TaiPower.rename(columns={'\u65e5\u671f(\u5e74\/\u6708\/\u65e5)':'Date'})\n        #df_pred_TaiPower.columns = ['Date', '\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)', '\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)', '\u5099\u8f49\u5bb9\u91cf\u7387(%)', '\u5099\u8f49\u5bb9\u91cf(\u842c\u74e9)']\n        df_pred_TaiPower['Date'] = pd.to_datetime(df_pred_TaiPower['Date'])\n        df_pred_TaiPower = df_pred_TaiPower.set_index('Date')\n        time.sleep(1)\n    except:\n         pass\n        \ndf_pred_TaiPower","a25c9e5d":"df_plot = pd.concat([df_demand, df_pred_TaiPower],axis=0)\ndf_plot.iloc[-60:, df_plot.columns.str.contains('\u4f9b\u96fb|\u8ca0\u8f09')].iplot()","88a87e1b":"url = 'https:\/\/www.cwb.gov.tw\/V8\/C\/W\/County\/MOD\/wf7dayNC_NCSEI\/ALL_Week.html'\nr = requests.get(url)\ndf_weatehr_pred = pd.read_html(r.text)[0]\ndf_weatehr_pred.columns = df_weatehr_pred.columns.str.split('\u661f\u671f',expand=True).get_level_values(0)\n\ndf_weatehr_pred = df_weatehr_pred.melt(id_vars=['\u7e23\u5e02', '\u6642\u9593'], var_name='Date')\ndf_weatehr_pred['Date'] = pd.to_datetime(str(datetime.now().year)+'\/'+df_weatehr_pred['Date'])\ndf_weatehr_pred['Temperature_low'] = df_weatehr_pred['value'].str.split(' |-',expand=True).iloc[:, 0].astype('float')\ndf_weatehr_pred['Temperature_high'] = df_weatehr_pred['value'].str.split(' |-',expand=True).iloc[:, 1].astype('float')\ndf_weatehr_pred = df_weatehr_pred.drop('value',axis=1)\n\n\ndf_weatehr_pred","0b11b442":"df_weatehr_pred['Temperature'] = df_weatehr_pred[['Temperature_low','Temperature_high']].mean(axis=1)\ndf_weatehr_pred = df_weatehr_pred.pivot_table(index='Date', columns='\u7e23\u5e02', values='Temperature')\ndf_weatehr_pred","b1a991d6":"df_pred_lgbm = df_weatehr_pred[['\u81fa\u5317\u5e02','\u81fa\u4e2d\u5e02','\u81fa\u5357\u5e02']].rename(columns={'\u81fa\u5317\u5e02':'Temperature_466920_\u81fa\u5317',\n                                                                          '\u81fa\u4e2d\u5e02':'Temperature_467490_\u81fa\u4e2d',\n                                                                          '\u81fa\u5357\u5e02':'Temperature_467410_\u81fa\u5357'}).copy()\ndf_pred_lgbm['weekday'] = df_pred_lgbm.index.weekday\ndf_pred_lgbm = df_pred_lgbm.merge(df_holiday_encode, left_index=True, right_index=True)\ndf_pred_lgbm = pd.concat([df_demand, df_pred_lgbm],axis=0)\n\ndf_pred_lgbm['demand_meas_1d_ago'] = df_pred_lgbm['\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)'].shift(1)\ndf_pred_lgbm['demand_meas_7d_ago'] = df_pred_lgbm['\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)'].shift(7)\ndf_pred_lgbm['demand_meas_14d_ago'] = df_pred_lgbm['\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)'].shift(14)\n\ndf_pred_lgbm['supply_meas_1d_ago'] = df_pred_lgbm['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)'].shift(1)\ndf_pred_lgbm['supply_meas_7d_ago'] = df_pred_lgbm['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)'].shift(7)\ndf_pred_lgbm['supply_meas_14d_ago'] = df_pred_lgbm['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)'].shift(14)\n\ndf_pred_lgbm = df_pred_lgbm.tail(7).dropna(axis=1, how='all')\ndf_pred_lgbm","5d58f764":"for idx_row in df_pred_lgbm.index:\n    df_input = df_pred_lgbm.loc[idx_row, ['weekday',\n                                          'Temperature_466920_\u81fa\u5317','Temperature_467410_\u81fa\u5357','Temperature_467490_\u81fa\u4e2d',\n                                          'holiday_Name','holiday_Type',\n                                          'demand_meas_1d_ago','demand_meas_7d_ago','demand_meas_14d_ago']].copy()\n    \n    if np.isnan(df_input['demand_meas_1d_ago']):\n        df_input['demand_meas_1d_ago'] = demand_pred\n        \n    demand_pred = LGB_model_demand.predict(df_input.values.reshape(1,-1))\n    df_pred_lgbm.loc[idx_row,'\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)_lgbm'] = round(demand_pred[0],1)\n        \nfor idx_row in df_pred_lgbm.index:\n    df_input = df_pred_lgbm.loc[idx_row, ['weekday',\n                                          'Temperature_466920_\u81fa\u5317','Temperature_467410_\u81fa\u5357','Temperature_467490_\u81fa\u4e2d',\n                                          'holiday_Name','holiday_Type',\n                                          'supply_meas_1d_ago','supply_meas_7d_ago','supply_meas_14d_ago']].copy()\n    \n    if np.isnan(df_input['supply_meas_1d_ago']):\n        df_input['supply_meas_1d_ago'] = supply_pred\n        \n    supply_pred = LGB_model_supply.predict(df_input.values.reshape(1,-1))\n    df_pred_lgbm.loc[idx_row,'\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)_lgbm'] = round(supply_pred[0],1)\n    \ndf_pred_lgbm","f2b41bc3":"df_result = df_demand.merge(df_pred_lgbm[['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)_lgbm','\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)_lgbm']], left_index=True, right_index=True, how='outer')\ndf_result = df_result.merge(df_pred_TaiPower, left_index=True, right_index=True, how='outer')\n\ndf_result.iloc[-60:, df_result.columns.str.contains('\u4f9b\u96fb')].iplot()\ndf_result.iloc[-60:, df_result.columns.str.contains('\u8ca0\u8f09')].iplot()","9117f6cc":"df_result = df_result.dropna(subset=['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)_lgbm','\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)_lgbm','\u9810\u4f30\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)','\u9810\u4f30\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)']).dropna(axis=1)\ndf_result = df_result[['\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)_lgbm','\u9810\u4f30\u6de8\u5c16\u5cf0\u4f9b\u96fb\u80fd\u529b(\u842c\u74e9)','\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)_lgbm','\u9810\u4f30\u77ac\u6642\u5c16\u5cf0\u8ca0\u8f09(\u842c\u74e9)']]\ndf_result.to_csv('result.csv')\ndf_result","d7e35005":"# Scrape forecasting weather data from CWB","0a678db9":"# Predict peak demand and supply for the next 7 days !","8cd1d470":"# Scrape forecasting energy data from Taipower","02bb0c9a":"# Load data"}}