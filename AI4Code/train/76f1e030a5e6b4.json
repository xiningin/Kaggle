{"cell_type":{"da65d01f":"code","4cf09f13":"code","56e99dd9":"code","3b03e0f8":"code","43062db0":"code","8ab62dc3":"code","61dc4077":"code","3599727b":"code","9d35794f":"code","657eacf9":"code","cee2daec":"code","e04c599b":"code","2c907fed":"code","bdfda970":"code","1da84569":"code","0d5d7000":"code","688a42ba":"code","1fd6a987":"code","3542ed47":"code","2b802c30":"code","4255c809":"code","25ebe75a":"code","6b8b381f":"code","222d8207":"code","c3fcb8e7":"code","0683f181":"code","a819474e":"code","bd4ab195":"code","a39e5e44":"code","e8c5a483":"code","a0dc7212":"code","a44b3890":"code","d6e53d60":"code","e4712cd7":"code","a32aa831":"markdown","1aa148c4":"markdown","20286083":"markdown","ca6e9a2b":"markdown","cd3aedc8":"markdown","7b8fd937":"markdown","fef3922c":"markdown","ce27db64":"markdown","be27560c":"markdown","c0156b70":"markdown","def31ece":"markdown","4e3b0fd0":"markdown","a9e36a56":"markdown","3eac8d0c":"markdown","f17d6b52":"markdown","75dbd59d":"markdown","91c43aa3":"markdown","188184d0":"markdown","95090a03":"markdown","3410b681":"markdown","aae81344":"markdown","49d03c4a":"markdown","6b67d3ed":"markdown","ace4ee6e":"markdown","988b91d4":"markdown","b499e58e":"markdown","f7ec82ef":"markdown","08725f6c":"markdown","7fbcbf03":"markdown","9f4a1b73":"markdown","292708f9":"markdown","7c93bbf1":"markdown","0b860f56":"markdown","3b2dcfc7":"markdown","290b73cc":"markdown","e005aa7f":"markdown","7b13c881":"markdown","6eb9f752":"markdown","e3fd2605":"markdown","5b83aa5d":"markdown","23672212":"markdown","eba834bf":"markdown","ebfa14b9":"markdown","fde4b187":"markdown","6fdba4b4":"markdown","b1c5787e":"markdown","6a910e42":"markdown","849a3990":"markdown","810eeea1":"markdown","c6ddcd6a":"markdown"},"source":{"da65d01f":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_columns', 100)\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nimport holoviews as hv\nfrom holoviews import opts\nhv.extension('bokeh')\nimport os","4cf09f13":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","56e99dd9":"data = pd.read_csv(\"\/kaggle\/input\/7210_1.csv\")\nprint(f'7210_1.csv : {data.shape}')\ndata.head(3)","3b03e0f8":"data.columns","43062db0":"cols = [\"brand\", \"categories\", \"colors\", \"name\", \"prices.amountMax\", \"prices.currency\"]\ndf = data[cols]\ndf.head(3)","8ab62dc3":"df = df.rename(columns={'prices.amountMax': 'price', 'prices.currency':'currency'})\ndf.head(3)","61dc4077":"df.currency.value_counts()","3599727b":"def curr_processing(x):\n    if x.currency == 'AUD':\n        x.price = x.price * 0.75\n    if x.currency == 'CAD':\n        x.price = x.price * 0.73\n    if x.currency == 'EUR':\n        x.price = x.price * 1.1\n    return x","9d35794f":"df = df.apply(curr_processing, axis=1)\ndf.drop('currency', axis=1, inplace=True)\ndf.head(3)","657eacf9":"df.loc[df['brand'].isin(['PUMA', 'Puma']), 'brand'] = 'PUMA'\ndf.loc[df['brand'].isin(['Lauren Ralph Lauren', 'Ralph Lauren']), 'brand'] = 'Ralph Lauren'\ndf.loc[df['brand'].isin(['MICHAEL Michael Kors', 'Michael Kors']), 'brand'] = 'Michael Kors'\ndf.loc[df['brand'].isin(['Pleaser Shoes', 'PleaserUSA', 'Pleaser']), 'brand'] = 'Pleaser'","cee2daec":"brand_cnt = df['brand'].value_counts() > 150\nhv.Bars(df['brand'].value_counts()[brand_cnt][::-1]).opts(title=\"Brand Count over 150\", color=\"purple\", xlabel=\"Brand\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=600, height=600,tools=['hover'],show_grid=True,invert_axes=True))","e04c599b":"col_cnt = df['colors'].value_counts() > 100\ncol = hv.Bars(df['colors'].value_counts()[col_cnt][::-1]).opts(title=\"Colors Count over 100\", color=\"purple\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':10}))\npr = hv.Distribution(df['price']).opts(title=\"Price Distribution\", color=\"purple\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","2c907fed":"ralph_lauren = df[df.brand == 'Ralph Lauren']\nnovica = df[df.brand == \"Novica\"]\njournee_collection = df[df.brand == \"Journee Collection\"]\npropet = df[df.brand == \"Propet\"]\nnike = df[df.brand == \"Nike\"]\nadidas = df[df.brand == \"Adidas\"]","bdfda970":"rl_col_cnt = ralph_lauren['colors'].value_counts() > 10\ncol = hv.Bars(ralph_lauren['colors'].value_counts()[rl_col_cnt][::-1]).opts(title=\"Ralph Lauren Colors Count over 10\", color=\"green\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':9}))\npr = hv.Distribution(ralph_lauren['price']).opts(title=\"Ralph Lauren Price Distribution\", color=\"green\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","1da84569":"nvc_col_cnt = novica['colors'].value_counts() > 10\ncol = hv.Bars(novica['colors'].value_counts()[nvc_col_cnt][::-1]).opts(title=\"Novica Colors Count over 10\", color=\"green\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':9}))\npr = hv.Distribution(novica['price']).opts(title=\"Novica Price Distribution\", color=\"green\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","0d5d7000":"jnc_col_cnt = journee_collection['colors'].value_counts() > 30\ncol = hv.Bars(journee_collection['colors'].value_counts()[jnc_col_cnt][::-1]).opts(title=\"Journee Collection Colors Count over 30\", color=\"green\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':7}))\npr = hv.Distribution(journee_collection['price']).opts(title=\"Journee Collection Price Distribution\", color=\"green\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=300, height=300,tools=['hover'],show_grid=True,fontsize={'title':9}))\ncol + pr","688a42ba":"nk_col_cnt = nike['colors'].value_counts() > 10\ncol = hv.Bars(nike['colors'].value_counts()[nk_col_cnt][::-1]).opts(title=\"Nike Colors Count over 10\", color=\"green\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(nike['price']).opts(title=\"Nike Price Distribution\", color=\"green\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","1fd6a987":"ad_col_cnt = adidas['colors'].value_counts() > 10\ncol = hv.Bars(adidas['colors'].value_counts()[ad_col_cnt][::-1]).opts(title=\"Adidas Colors Count over 10\", color=\"green\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(adidas['price']).opts(title=\"Adidas Price Distribution\", color=\"green\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","3542ed47":"pp_col_cnt = propet['colors'].value_counts() > 10\ncol = hv.Bars(propet['colors'].value_counts()[pp_col_cnt][::-1]).opts(title=\"Propet Colors Count over 10\", color=\"green\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(propet['price']).opts(title=\"Propet Price Distribution\", color=\"green\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","2b802c30":"col_cnt = df['colors'].value_counts() > 50\nhv.Bars(df['colors'].value_counts()[col_cnt][::-1]).opts(title=\"Colors Count over 50\", color=\"purple\", xlabel=\"Colors\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=600, height=600,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':10}))","4255c809":"black = df[df.colors == \"Black\"]\nwhite = df[df.colors == \"White\"]\nblue = df[df.colors == \"Blue\"]\nbrown = df[df.colors == \"Brown\"]\nred = df[df.colors == \"Red\"]\npink = df[df.colors == \"Pink\"]\nsilver = df[df.colors == \"Silver\"]\norange = df[df.colors == \"Orange\"]","25ebe75a":"bl_br_cnt = black['brand'].value_counts() > 30\nbr = hv.Bars(black['brand'].value_counts()[bl_br_cnt][::-1]).opts(title=\"Brand Count with Black over 30\", color=\"black\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(black['price']).opts(title=\"Price Distribution with Black\", color=\"black\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","6b8b381f":"wh_br_cnt = white['brand'].value_counts() > 10\nbr = hv.Bars(white['brand'].value_counts()[wh_br_cnt][::-1]).opts(title=\"Brand Count with White over 10\", color=\"white\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(white['price']).opts(title=\"Price Distribution with White\", color=\"white\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","222d8207":"bl_br_cnt = blue['brand'].value_counts() > 10\nbr = hv.Bars(blue['brand'].value_counts()[bl_br_cnt][::-1]).opts(title=\"Brand Count with Blue over 10\", color=\"blue\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(blue['price']).opts(title=\"Price Distribution with Blue\", color=\"blue\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","c3fcb8e7":"br_br_cnt = brown['brand'].value_counts() > 10\nbr = hv.Bars(brown['brand'].value_counts()[br_br_cnt][::-1]).opts(title=\"Brand Count with Brown over 10\", color=\"brown\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(brown['price']).opts(title=\"Price Distribution with Brown\", color=\"brown\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","0683f181":"rd_br_cnt = red['brand'].value_counts() > 10\nbr = hv.Bars(red['brand'].value_counts()[rd_br_cnt][::-1]).opts(title=\"Brand Count with Red over 10\", color=\"red\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(red['price']).opts(title=\"Price Distribution with Red\", color=\"red\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","a819474e":"pk_br_cnt = pink['brand'].value_counts() > 10\nbr = hv.Bars(pink['brand'].value_counts()[pk_br_cnt][::-1]).opts(title=\"Brand Count with Pink over 10\", color=\"pink\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(pink['price']).opts(title=\"Price Distribution with Pink\", color=\"pink\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","bd4ab195":"sl_br_cnt = silver['brand'].value_counts() > 10\nbr = hv.Bars(silver['brand'].value_counts()[sl_br_cnt][::-1]).opts(title=\"Brand Count with Silver over 10\", color=\"silver\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(silver['price']).opts(title=\"Price Distribution with Silver\", color=\"silver\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","a39e5e44":"or_br_cnt = orange['brand'].value_counts() > 5\nbr = hv.Bars(orange['brand'].value_counts()[or_br_cnt][::-1]).opts(title=\"Brand Count with Orange over 5\", color=\"orange\", xlabel=\"Brands\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':10}))\npr = hv.Distribution(orange['price']).opts(title=\"Price Distribution with Orange\", color=\"orange\", xlabel=\"Price\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","e8c5a483":"hv.Distribution(df['price']).opts(title=\"Price Distribution\", color=\"purple\", xlabel=\"Price\", ylabel=\"Density\")\\\n                            .opts(opts.Distribution(width=700, height=300,tools=['hover'],show_grid=True,xformatter='$ %d'))","a0dc7212":"#Normal Pricing\ntory_burch = df[df.brand == 'Tory Burch']\ndiane_von_furstenberg = df[df.brand == 'Diane von Furstenberg']\nferragamo = df[df.brand == 'Ferragamo']\n#Premium Anchor\nprada = df[df.brand.isin(['PRADA','Prada'])]\nchristian_louboutian = df[df.brand.isin(['Christian Louboutin'])]\nfendi = df[df.brand.isin(['Fendi'])]\n#Double Dip\nburberry = df[df.brand.isin(['Burberry','BURBERRY'])]\nd_and_g = df[df.brand.isin(['Dolce & Gabbana'])]\nstella = df[df.brand.isin(['Stella McCartney'])]","a44b3890":"tory_burch_g = hv.Distribution(tory_burch['price']).opts(title=\"Tory Burch Price Distribution\", color=\"royalblue\", xlabel=\"Price\", ylabel=\"Density\").opts(xlim=(0, 2500))\ndiane_von_furstenberg_g = hv.Distribution(diane_von_furstenberg['price']).opts(title=\"Diane von Furstenberg Price Distribution\", color=\"royalblue\", xlabel=\"Price\", ylabel=\"Density\")\nferragamo_g = hv.Distribution(ferragamo['price']).opts(title=\"Ferragamo Price Distribution\", color=\"royalblue\", xlabel=\"Price\", ylabel=\"Density\")\n(tory_burch_g + diane_von_furstenberg_g + ferragamo_g).opts(opts.Distribution(width=800, height=200,tools=['hover'],show_grid=True, xformatter='$ %d')).cols(1)","d6e53d60":"prada_g = hv.Distribution(prada['price']).opts(title=\"Prada Price Distribution\", color=\"springgreen\", xlabel=\"Price\", ylabel=\"Density\").opts(xlim=(0, 2500))\nchristian_louboutian_g = hv.Distribution(christian_louboutian['price']).opts(title=\"Christian Louboutin Price Distribution\", color=\"springgreen\", xlabel=\"Price\", ylabel=\"Density\")\nfendi_g = hv.Distribution(fendi['price']).opts(title=\"Fendi Price Distribution\", color=\"springgreen\", xlabel=\"Price\", ylabel=\"Density\")\n(prada_g + christian_louboutian_g + fendi_g).opts(opts.Distribution(width=800, height=200,tools=['hover'],show_grid=True, xformatter='$ %d')).cols(1)","e4712cd7":"burberry_g = hv.Distribution(burberry['price']).opts(title=\"Burberry Price Distribution\", color=\"darkturquoise\", xlabel=\"Price\", ylabel=\"Density\").opts(xlim=(0, 2500))\nd_and_g_g = hv.Distribution(d_and_g['price']).opts(title=\"Dolce & Gabbana Price Distribution\", color=\"darkturquoise\", xlabel=\"Price\", ylabel=\"Density\")\nstella_g = hv.Distribution(stella['price']).opts(title=\"Stella McCartney Price Distribution\", color=\"darkturquoise\", xlabel=\"Price\", ylabel=\"Density\")\n(burberry_g + d_and_g_g + stella_g).opts(opts.Distribution(width=800, height=200,tools=['hover'],show_grid=True, xformatter='$ %d')).cols(1)","a32aa831":"## Price Analysis","1aa148c4":"### Propet","20286083":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","ca6e9a2b":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","cd3aedc8":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","7b8fd937":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","fef3922c":"## Brand Analysis\n><div class=\"alert alert-success\" role=\"alert\">\n><ul>\n>    <li>sport fashion brands such as <u>Nike and Adidas<\/u> is cheaper than popular fashion brands.<\/li>\n>    <li><u>sport fashion brands has more vivid colors<\/u> such as <b>white, red, orange and blue<\/b> compared to high brand's black or brown.<\/li>\n>    <li>some brands'distribution have two peaks, which shows <u>these brands target two market groups such that reasonable and luxurious<\/u>.<\/li>\n><\/ul>\n><\/div>","ce27db64":"### Journee Collection","be27560c":"# 2. Import libraries","c0156b70":"### Orange","def31ece":">Pick up some brands from over 100 counts brands.","4e3b0fd0":"# 4. Pre-processing","a9e36a56":"### Pink","3eac8d0c":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","f17d6b52":"### Silver","75dbd59d":"### Normal Pricing","91c43aa3":"### Premium Anchor","188184d0":"## Brand Normalization\n>normalize brand names((thanks to [this notebook](https:\/\/www.kaggle.com\/srlmayor\/let-s-look-at-some-shoes)))","95090a03":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","3410b681":">There are some currecies other than USD.","aae81344":"### Novica","49d03c4a":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","6b67d3ed":"# Table of Contents<a id='top'><\/a>\n\n>1. [Overview](#1.-Overview)  \n>    * [Project detail](#Project-detail)\n>    * [Goal of this notebook](#Goal-of-this-notebook)\n>1. [Import libraries](#2.-Import-libraries)\n>1. [Load the dataset](#3.-Load-the-dataset)\n>1. [Pre-processing](#4.-Pre-processing)\n>    * [Currency Pre-processing](#Currency-Pre\\-processing)\n>    * [Brand Normalization](#Brand-Normalization)\n>1. [EDA](#5.-EDA)  \n>    * [Brand Analysis](#Brand-Analysis)\n>    * [Color Analysis](#Color-Analysis)\n>    * [Price Analysis](#Price-Analysis)\n>1. [References](#6.-References)","ace4ee6e":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","988b91d4":"### Blue","b499e58e":"# 6. References\n>* **Good EDA notebook**  \n>https:\/\/www.kaggle.com\/srlmayor\/let-s-look-at-some-shoes\n>* **Datafiniti's Report using this dataset**  \nhttps:\/\/datafiniti.co\/cost-of-designer-label\/","f7ec82ef":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","08725f6c":">extract useful columns for analysis","7fbcbf03":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","9f4a1b73":"### White","292708f9":"### Brown","7c93bbf1":"# 5. EDA","0b860f56":"### Black","3b2dcfc7":"### Red","290b73cc":"### Adidas","e005aa7f":">Pick up some famuous and lovely colors from above colors.","7b13c881":"### Double Dip","6eb9f752":">function to convert into USD(thanks to [this notebook](https:\/\/www.kaggle.com\/srlmayor\/let-s-look-at-some-shoes))","e3fd2605":"# 3. Load the dataset","5b83aa5d":"### Ralph Lauren","23672212":"<h2 style=\"text-align:center;font-size:200%;;\">Women's Shoes EDA<\/h2>\n<h3  style=\"text-align:center;\">Keywords : <span class=\"label label-success\">EDA<\/span> <span class=\"label label-success\">Pre-processing<\/span> <span class=\"label label-success\">Sales Analysis<\/span><\/h3>","eba834bf":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","ebfa14b9":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","fde4b187":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","6fdba4b4":"### Nike","b1c5787e":"# 1. Overview\n## Project detail\n>In [this project](https:\/\/www.kaggle.com\/datafiniti\/womens-shoes-prices), the information about shoe brands such as price, color and categories are given by [Datafiniti's Product Database](https:\/\/datafiniti.co\/products\/product-data\/).\n>* id\n>* brand\n>* categories\n>* colors\n>* manufacturer\n>* name\n>* price\n>* imageURL\n\n## Goal of this notebook\n>* Practice EDA technique\n>* Practice visualization technique","6a910e42":"## Color Analysis\n><div class=\"alert alert-success\" role=\"alert\">\n><ul>\n>    <li><u>Black,white and brown<\/u> shoes' price have multiple peaks.<\/li>\n>    <li>High brands such as <b>Ralph Lauren<\/b> have many items of dark colors, which leads an outlier peak.<\/li>\n><\/ul>\n><\/div>","849a3990":"<a href=\"#top\" class=\"btn btn-success btn-sm active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Table of Contents<\/a>","810eeea1":"><div class=\"alert alert-success\" role=\"alert\">\n>According to <a href='https:\/\/datafiniti.co\/cost-of-designer-label\/'>this report<\/a>, brands can be classified into these 3 groups.\n><ul>\n><li><b>Normal Pricing<\/b> : The price bucket counts follow a normal distribution for this brand.<\/li>\n><li><b>Premium Anchor<\/b> : This brand has multiple products priced significantly higher than the largest cluster of prices.<\/li>\n><li><b>Double Dip<\/b> : There are 2 more overlapping normal distributions of prices for this brand.<\/li>\n><\/ul>\n><\/div>","c6ddcd6a":"## Currency Pre-processing"}}