{"cell_type":{"3fe1bd98":"code","cfb4c5da":"code","d072a802":"code","091d4e96":"code","ecdac362":"code","d2a131ce":"code","8497e351":"code","bca91f64":"code","881a5586":"code","916aa25c":"code","5e085b91":"code","cfe93739":"code","50587163":"code","5a1af557":"code","8679aff1":"code","c048768e":"code","1e956ebb":"code","7a03f9cd":"code","5e0706f8":"code","e182b7b0":"code","90415804":"code","c4a78b3d":"code","9bd4b34e":"code","08013999":"code","e6a6f2f3":"code","00f2e736":"code","b60f2b9c":"code","3167ffff":"code","c7c04b60":"code","1ce28e57":"code","d152477e":"code","9a86b87f":"code","0370fe59":"code","78c3d563":"code","d6f6c932":"code","5695d040":"code","c45e69c0":"code","99785c09":"code","a4504867":"markdown","13172531":"markdown","4ffe83e4":"markdown","62cbbf31":"markdown","84789bed":"markdown","370845fe":"markdown","0937e5b5":"markdown","2e7dfc97":"markdown","b33fc719":"markdown","90d10a37":"markdown","0b61c9b1":"markdown","1d870ee5":"markdown","4d031315":"markdown","d8e338b9":"markdown","6fa1cbcf":"markdown","a661e671":"markdown","c9164b5d":"markdown","c7675377":"markdown","89fa57c8":"markdown","ef3d8d95":"markdown","fe88e655":"markdown","a4751131":"markdown","3dea62d6":"markdown","58b44824":"markdown","0eda1764":"markdown","21711fe4":"markdown","43b51389":"markdown","dc692174":"markdown","401d3e64":"markdown"},"source":{"3fe1bd98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cfb4c5da":"df =pd.read_csv(\"\/kaggle\/input\/nobel-laureates\/archive.csv\")\ndf.head()\n","d072a802":"df['Birth Date'].mean()\n","091d4e96":"df['Birth Date'].median()\n","ecdac362":"df['Birth Date'].mode()","d2a131ce":"df['Birth Date'].mode()\n","8497e351":"df['Birth Date'].max()\n","bca91f64":"df['Birth Date'].min()\n","881a5586":"df['Birth Date'].var()\n","916aa25c":"df['Birth Date'].std()","5e085b91":"plt.hist(df['Birth Date'], range=(0,10), bins=10)\n","cfe93739":"df.boxplot(column='Birth Date')","50587163":"df['Death Date'].mean()\n\n","5a1af557":"df['Death Date'].median()\n","8679aff1":"df['Death Date'].mode()","c048768e":"df['Death Date'].mode()\n","1e956ebb":"df['Death Date'].max()\n","7a03f9cd":"df['Death Date'].min()\n","5e0706f8":"df['Death Date'].var()\n","e182b7b0":"df['Death Date'].std()","90415804":"plt.hist(df['Death Date'], range=(0,10), bins=10)\n","c4a78b3d":"df.boxplot(column='Death Date')","9bd4b34e":"df.groupby(by=[\"Birth City\"]).count()\n\n","08013999":"df.groupby('Birth City').count().nlargest()\n","e6a6f2f3":"df.groupby(by=[\"Birth Country\"]).count()\n\n","00f2e736":"df.groupby('Birth Country').count().nlargest()\n","b60f2b9c":"df.groupby(by=[\"Sex\"]).count()\n","3167ffff":"df.groupby('Sex').count().nlargest()\n","c7c04b60":"df.groupby(by=[\"Organization Name\"]).count()\n","1ce28e57":"df.groupby('Organization Name').count().nlargest()\n","d152477e":"df.groupby(by=[\"Organization City\"]).count()\n","9a86b87f":"df.groupby('Organization City').count().nlargest()\n","0370fe59":"df.groupby(by=[\"Organization Country\"]).count()\n","78c3d563":"df.groupby('Organization Country').count().nlargest()\n","d6f6c932":"df.groupby(by=[\"Death City\"]).count()\n","5695d040":"df.groupby(\"Death City\").count().nlargest()\n","c45e69c0":"df.groupby(by=[\"Death Country\"]).count()\n","99785c09":"df.groupby('Death Country').count()","a4504867":"COMENTARIO Organization City","13172531":"CONCLUS\u00c3O:","4ffe83e4":"Qual a dispers\u00e3o?","62cbbf31":"COMENTARIO Organization Name","84789bed":"COMENTARIO Birth Country","370845fe":"Birth City","0937e5b5":"death date","2e7dfc97":"Qual a quantidade agrupada? ","b33fc719":"1-birth date","90d10a37":"Qual a quantidade agrupada? ","0b61c9b1":"Qual a distribui\u00e7\u00e3o?","1d870ee5":"Qual a centralidade?","4d031315":"Qual a quantidade agrupada? organization country","d8e338b9":"COMENTARIO: Birth Date","6fa1cbcf":"COMENTARIO Birth City","a661e671":"COMENTARIO Organization Country","c9164b5d":"Qual a quantidade agrupada? ","c7675377":"Qual a distribui\u00e7\u00e3o?","89fa57c8":"Qual a quantidade agrupada?","ef3d8d95":"Qual a quantidade agrupada? ","fe88e655":"COMENTARIO Sex","a4751131":"Qual a centralidade?","3dea62d6":"Qual a quantidade agrupada? ","58b44824":"INTRODU\u00c7\u00c3O: Essa base de dados diz respeito a ganhadores do premio nobel entre 1901 e 2016. A base de dados foi coletada no Nobel Prize API e publicada originalmente no perfil The Nobel Foundation.\n\nMeu objetivo \u00e9 fazer uma analise exploratoria, analisando a centralidade, dispers\u00e3o, distribui\u00e7\u00e3o e agrupamento de diversas colunas. Como resultado dos meus calculos obtive agrupamentos, tabelas, histogramas e boxplots.\n\n#Which country has won the most prizes in each category? What words are most frequently written in the prize motivation? Can you #predict the age, gender, and nationality of next year's Nobel laureates?\n\n","0eda1764":"COMENTARIO Death City","21711fe4":"Qual a dispers\u00e3o?","43b51389":"Qual a quantidade agrupada? ","dc692174":"COMENTARIO Death Date:","401d3e64":"COMENTARIO Death Country"}}