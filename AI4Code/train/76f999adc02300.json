{"cell_type":{"e1b2fa60":"code","605ab139":"code","d829818f":"code","35eb0ab5":"code","3a3f8643":"code","b09085c7":"code","e9350326":"code","99a0a098":"code","a9696228":"code","75c2d01b":"code","4c518ecd":"code","ae2c467a":"code","d333c8fa":"code","afe96271":"markdown","5c789265":"markdown","089c8b1b":"markdown","2ede5d70":"markdown","d133f87f":"markdown","2cc63a2c":"markdown","0b1722e7":"markdown","e1dee91f":"markdown","8a2af2b1":"markdown","0d436e78":"markdown","cb2c0a92":"markdown","783b2b40":"markdown","2d351e2a":"markdown","cdb05d2d":"markdown","db921b1f":"markdown"},"source":{"e1b2fa60":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\n\nsc = pd.read_csv('..\/input\/suicide-rates-overview-1985-to-2016\/master.csv')\nsc.head()","605ab139":"sgsc = sc.loc[(sc.country=='Singapore') & (sc.age=='15-24 years'), :]\n\nplt.plot('year','suicides\/100k pop', data=sgsc.loc[sgsc.sex=='male',:], c='blue')\nplt.plot('year','suicides\/100k pop', data=sgsc.loc[sgsc.sex=='female',:], c='red')\nplt.legend(('Male','Female'))\nplt.show()","d829818f":"sns.lineplot(x='year', y='suicides\/100k pop', data=sgsc, hue='sex'); # ';' is to avoid extra message before plot","35eb0ab5":"plt.figure(figsize=(10,5)) # Figure size\nsns.lineplot(x='year', y='suicides\/100k pop', data=sgsc, hue='sex', marker='o') # Specify markers with marker argument\nplt.title('Suicide Rate in Singapore Aged 15-24') # Title\nplt.xticks(sgsc.year.unique(), rotation=90) # All values in x-axis; rotate 90 degrees\nplt.show()","3a3f8643":"# print(os.listdir(\"..\/input\/cryptocurrencypricehistory\"))\neth = pd.read_csv('..\/input\/cryptocurrencypricehistory\/ethereum_price.csv', parse_dates=['Date'])\neth.set_index('Date', drop=True, inplace=True)\neth.sort_index(inplace=True)\neth.head()","b09085c7":"plt.plot(eth.Close);","e9350326":"plt.figure(figsize=(8,6))\nplt.plot(eth.asfreq('M').Close, marker='.')\nplt.title('Ethereum Monthly Price')\nplt.xticks(rotation=90)\nplt.show()","99a0a098":"plt.figure(figsize=(10,5))\nplt.plot(eth['2017':].asfreq('W').Close, marker='.') # eth['2017':] returns a subset of eth since 2017\nplt.title('Ethereum Weekly Price Since 2017')\nplt.xticks(rotation=90)\nplt.show()","a9696228":"kiva = pd.read_csv('..\/input\/data-science-for-good-kiva-crowdfunding\/kiva_loans.csv', parse_dates=['posted_time'])\nkiva_v = kiva.loc[kiva.country=='Vietnam',['posted_time','loan_amount','sector','lender_count']]\nkiva_v.set_index('posted_time', inplace=True)\nkiva_v.head()","75c2d01b":"plt.figure(figsize=(9,6))\nplt.plot(kiva_v.resample('M').sum()['loan_amount'])\nplt.title('Kiva Loan Amount in Vietnam')\nplt.xticks(rotation=45) # Rotate 45 degrees\nplt.show()","4c518ecd":"eth.loc[:,'pct_change'] = eth.Close.pct_change()*100\neth.loc['2018':,'pct_change'].plot(kind='bar', color='b')\nplt.xticks([])\nplt.show()","ae2c467a":"# Loading bitcoin data\nbtc = pd.read_csv('..\/input\/cryptocurrencypricehistory\/bitcoin_price.csv', parse_dates=['Date'])\nbtc.set_index('Date', drop=True, inplace=True)\nbtc.sort_index(inplace=True)\nbtc.tail()","d333c8fa":"eth_return = eth['2016-12-31':].Close.pct_change()+1\nbtc_return = btc['2016-12-31':].Close.pct_change()+1\neth_cum = eth_return.cumprod()\nbtc_cum = btc_return.cumprod()\nplt.figure(figsize=(9,6))\nbtc_cum.plot(c='blue')\neth_cum.plot(c='cyan')\nplt.title('Cumulative Return in Cryptocurrency since 2017')\nplt.legend(('Bitcoin','Ethereum'))\nplt.yscale('log')\nplt.show()","afe96271":"To plot a weekly close price since year 2017, use 'W' in .asfreq() method and subset the the time series:","5c789265":"We can plot the monthly close price using **.asfreq() method** with 'M' denoting monthly frequency:","089c8b1b":"For plotting trends by year, we can simply use the **plot() function** putting year as the x-axis. We will use **Suicide Rates Overview dataset** in this example:","2ede5d70":"That's it for now. More plots will be added in the future. Happy plotting!","d133f87f":"We will add the following to the plot:\n- A title\n- Showing markers on each data point\n- Enable every labels on the x-axis be shown vertically\nWe will also plot a larger chart.","2cc63a2c":"## Plotting Change\n\nSometimes we want to visualize the change of one variable over time. the **.pct_change() function** is very useful.","0b1722e7":"Reference:\n- [List of markers](https:\/\/matplotlib.org\/api\/markers_api.html)\n- [seaborn.lineplot()](https:\/\/seaborn.pydata.org\/generated\/seaborn.lineplot.html)","e1dee91f":"## Monthly and Daily Data\n\nWhen we want to plot time series data other than yearly, we need to know how to manipulate time series in Python. In short, we need to (1) **parse the date into Python datetime format** when loading the data; and (2) **set the datetime as the index** of the dataframe. Then plots can be made easily. We will use **ethereum price in Cryptocurrency Historical Prices dataset** as an example:","8a2af2b1":"# Tutorial: Time Series Charts in Python\n\nIn this notebook, we will go through plotting time series data in Python, using Matplotlib and Seaborn. Several datasets will be used, and we will touch upon different formats of time series data. This can be used as a quick reference when you want to plot time series charts.","0d436e78":"## Periodic (e.g. Monthly) Total\n\nFrom the raw data, sometimes we want to know the sum of a certain value (e.g. sales) in a certain period (e.g. monthly). Here can use the **.resample() method** in pandas. We will use **Kiva crowdfunding dataset** as an example. We are going the plot the monthly loan amount for Vietnam:","cb2c0a92":"Another common visualization is the cumulative change over time. For example, if we invest $1,000 in bitcoin and ethereum, how much will they grow since 2016?","783b2b40":"## Simplest Plotting: Plot by Year","2d351e2a":"Please refer to [this part of pandas documentation](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/timeseries.html#dateoffset-objects) for a list of frequency strings. Chris Albon provides a [simple tutorial](https:\/\/chrisalbon.com\/python\/data_wrangling\/pandas_time_series_basics\/) on subsetting time series in various methods.","cdb05d2d":"We will plot the suicide rate (cases per 100K population) for youth 15-24 years old in Singapore. Firstly with Matplotlib and secondly with Seaborn:","db921b1f":"Let's try the simplest plot of close prices:"}}