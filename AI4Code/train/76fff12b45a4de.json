{"cell_type":{"1c69fcf7":"code","2978d7ca":"code","b7f4480e":"code","4ced2abf":"code","e979bc43":"code","b82057a4":"code","12017870":"code","dcd8584c":"code","709a949d":"code","2cb399da":"code","e96dd366":"code","4ece789e":"code","51d5d84b":"code","67c2617d":"code","bbcc6254":"code","980940ad":"code","3538eb4b":"code","40d161ca":"code","5b2545ad":"code","5174ba38":"code","80e6ba58":"markdown","d258b6fe":"markdown","346d711d":"markdown","ede1810c":"markdown","4450a2ae":"markdown","330b8cee":"markdown"},"source":{"1c69fcf7":"# Copy\/type this code into your own notebook\n# To get back to speed with some basic python skills\n# To practice using the Kaggle notebook","2978d7ca":"# import the shapely library and drawing library\nimport shapely.geometry as shg\nimport matplotlib.pyplot as plt\nfrom pylab import rcParams\n\nrcParams['figure.figsize'] = 15, 15 #makes our plots bigger!","b7f4480e":"apoint = (1, 5) #point stored as coordinate pair in a tuple\n\nprint (apoint[0]) #the x value\nprint (apoint[1]) #the y value","4ced2abf":"print (apoint) #print the tuple","e979bc43":"#A line is list of tuples\naline = [(1,1), (7, 2), (9, 6), (11, 8)]","b82057a4":"#to view the line we need lists of x and y values so we use the ZIP command\nxy = list(zip (*aline))\nprint (xy)\nplt.plot(xy[0], xy[1])","12017870":"print(aline)\nprint(aline[0]) #the 1st coordinate\nprint(aline[1], aline[2]) #line segment between 2 and 3rd vertices","dcd8584c":"print(aline[3][0]) #x value of 4th point\nprint(aline[3][1]) #y value of 4th point","709a949d":"#A Polygon looks just the same as a line\np = [(1.0, 1.0), (1.0, 5.0), (5.0, 5.0), (5.0, 1.0), (1.0, 1.0)]\nprint(p)\nprint(p[1])\nprint(p[3][1])\n","2cb399da":"xy = list(zip(*p))\nplt.plot(xy[0], xy[1])","e96dd366":"#The shapely library\np1 = shg.Point(apoint) #Create a point note CAPS on function\np2 = shg.Point((5,9))  #Create another point\nprint(p1.distance(p2)) #Calculate distance between them","4ece789e":"line1 = shg.LineString(aline) #lines are called linestrings in shapely (and elsewhere!)\nprint(line1.length)","51d5d84b":"line2 = shg.LineString([(5, 5), (7, 1), (8, 0)])\nprint(line1.intersects(line2))  # Test do they intersect\nprint(line1.intersection(line2)) # Point of intersection","67c2617d":"#Check visually using the coords.xy function in Shapely to give us lists of x and y values\nplt.plot(line1.coords.xy[0], line1.coords.xy[1])\nplt.plot(line2.coords.xy[0], line2.coords.xy[1])\npt = line1.intersection(line2)                 #get the intersection point\nplt.plot(pt.x, pt.y, 'ro')                     #plot it","bbcc6254":"#Polygons\npol1 = shg.Polygon(p)\npol2 = shg.Polygon([(4,4), (7,4), (7,8), (4,7), (4,4)])\nprint(pol1.area)\nprint(pol1.length)","980940ad":"print(pol1.intersects(pol2))","3538eb4b":"inter = pol1.intersection(pol2)\nprint(inter)","40d161ca":"testpt1 = shg.Point(3,3)\ntestpt2 = shg.Point(7,7)\nprint(pol1.contains(testpt1)) #Point in Polygon test\nprint(pol1.contains(testpt2))","5b2545ad":"#And plotting them\n#Polygons can have holes (interior rings) and the boundary is the exterior ring\nplt.plot(pol1.exterior.xy[0], pol1.exterior.coords.xy[1])\nplt.plot(pol2.exterior.coords.xy[0], pol2.exterior.coords.xy[1])\nplt.fill(inter.exterior.coords.xy[0], inter.exterior.coords.xy[1], color='lightblue')","5174ba38":"A = (1,1)\nB = (5,1)\nC = (2,5)\n\na = shg.Polygon([A, B, C])\nprint (\"The area of the triangle is {} (Shapely calculation)\".format(a.area))\n\n#Carry out the calculation manually\narea1 = A[0]*B[1]-A[1]*B[0]\narea2 = B[0]*C[1]-B[1]*C[0]\narea3 = C[0]*A[1]-C[1]*A[0]\narea = 0.5 * (area1+area2+area3)\nprint (\"the area of the triangle {}, {}, {} is {}\".format(A, B, C, area))\n","80e6ba58":"# [The Shapely Library](https:\/\/shapely.readthedocs.io\/en\/latest\/manual.html)","d258b6fe":"# Some practice\n\n1. Write code to calculate the area of this triangle using the vector product\n\n   Create a shapely polygon to test\n\n   (7, 2), (12, 3), (12, 8)\n\n2. Create a line that goes from (2, 2) to (35, 19) and (42, 29)\n\n   Use shapely to calculate the length\n   \n   Plot the line\n   ","346d711d":"# Area of triangle using vector product\n\n**[Format Command](https:\/\/www.w3schools.com\/python\/ref_string_format.asp)**","ede1810c":"# [Lists in Python](https:\/\/www.w3schools.com\/python\/python_lists.asp)","4450a2ae":"# [The Zip function in Python](https:\/\/www.w3schools.com\/python\/ref_func_zip.asp)","330b8cee":"# [Tuples in Python](https:\/\/www.w3schools.com\/python\/python_tuples.asp)\n"}}