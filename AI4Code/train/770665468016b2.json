{"cell_type":{"271afbab":"code","90bb468d":"code","b90de51a":"code","b2c8a95b":"code","942c77b7":"code","081d112f":"code","784523f6":"code","536ed201":"code","d8f6978b":"markdown","0e58bad2":"markdown"},"source":{"271afbab":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder  ","90bb468d":"train = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/train.csv\", index_col = 'id')\nx_test_data = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/test.csv\")\nx_test_new = x_test_data.iloc[:,1:51]\n\nX = train.drop('target', axis = 1).astype('float32')\nlencoder = LabelEncoder()\ny = pd.DataFrame(lencoder.fit_transform(train['target']).astype('int32'))","b90de51a":"from catboost import CatBoostClassifier,Pool\n\nmodel = CatBoostClassifier(random_seed= 24,task_type=\"GPU\",classes_count=4,loss_function='MultiClass',eval_metric='MultiClass',leaf_estimation_method='Newton')\n\ngrid = {'learning_rate': [0.002, 0.008, 0.01, 0.05, 0.1, 0.2, 0.5, 0.9],\n        'depth': [4,5,6,8,10],\n        'l2_leaf_reg': [0.5, 1, 7, 9, 12,14.6, 50.5],\n        'bagging_temperature':[0,1],\n        'border_count': [30,64,128, 254],\n        'n_estimators': [200,400, 700, 900, 1200, 1500, 1800,2300]}\n\nfrom sklearn.model_selection import RandomizedSearchCV\n\n\nrandm = RandomizedSearchCV(estimator=model, param_distributions = grid,cv = 5, n_iter = 50, n_jobs=-1)\n\n#### Uncomment below to get the random search parameters\n####################################\n#randm.fit(X, y[0])\n#param = randm.best_params_\n#param","b2c8a95b":"param = {'n_estimators': 700,\n 'learning_rate': 0.01,\n 'l2_leaf_reg': 50.5,\n 'depth': 12,\n 'border_count': 50,\n 'bagging_temperature': 1}","942c77b7":"clf = CatBoostClassifier(random_seed= 24,task_type=\"GPU\",classes_count=4,loss_function='MultiClass',eval_metric='MultiClass',leaf_estimation_method='Newton',leaf_estimation_iterations = 10)\nclf.set_params(**param)\n\n%time\nclf.fit(X,y)\n","081d112f":"clf.score(X,y)","784523f6":"y_pred_proba = clf.predict_proba(x_test_new).astype('float32')\noutput_df = pd.DataFrame(y_pred_proba, columns=['class_1', 'class_2', 'class_3', 'class_4'])\noutput_df = pd.concat([x_test_data.id,output_df],axis = 1)\noutput_df.head()","536ed201":"output_df.to_csv('OutputXGB.csv', index=False)","d8f6978b":"There seems to be no correlation across all the features","0e58bad2":"No Missing Values"}}