{"cell_type":{"4ce66431":"code","f9b4c403":"code","0178ff90":"code","23d2c9f1":"code","45c000d0":"code","a91a7bff":"code","e8bc5abd":"code","6337fa2c":"code","866274d2":"markdown","a53fc038":"markdown","6127fbf9":"markdown","cfaefbab":"markdown","69c0dbbe":"markdown","c8690882":"markdown","35a36942":"markdown"},"source":{"4ce66431":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9b4c403":"# Fundamental Libraries\nimport numpy as np\nimport pandas as pd\n\n# Ordinal Encoding and train test split\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.model_selection import train_test_split\n\n# XGB Regressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_error","0178ff90":"train = pd.read_csv(\"\/kaggle\/input\/30daysofmlraw\/train.csv\", index_col=0)\ntest = pd.read_csv(\"\/kaggle\/input\/30daysofmlraw\/test.csv\", index_col=0)\n\n# train.head()","23d2c9f1":"y = train['target']\nX_train_full = train.drop(['target'], axis=1)\n\n# print(y_train)\n# print(X_train)","45c000d0":"object_col = [col for col in X_train_full.columns if 'cat' in col]\n\n# Ordinal Encoding the categorical variable since these are orderly related\nX = X_train_full.copy()\nX_test = test.copy()\noe = OrdinalEncoder()\nX[object_col] = oe.fit_transform(X_train_full[object_col])\nX_test[object_col] = oe.transform(test[object_col])\n\nX.head()","a91a7bff":"X_train, X_valid, y_train, y_valid = train_test_split(X,y, random_state=0)","e8bc5abd":"# XGBRegressor\nmodel = XGBRegressor(n_estimators=1000, learning_rate=0.1, n_jobs=4)\n\nmodel.fit(X_train, y_train, early_stopping_rounds=5, eval_set=[(X_valid, y_valid)], verbose=False)\npreds = model.predict(X_valid)\nprint(mean_squared_error(preds, y_valid, squared=False))","6337fa2c":"preds_2 = model.predict(X_test)\n\n# Save the predictions to CSV file\noutput = pd.DataFrame({'Id': X_test.index,'target': preds_2})\noutput.to_csv('submission.csv', index=False)","866274d2":"**Splitting dataset**","a53fc038":"**Import Essential Libraries**","6127fbf9":"**Handle categorical variables**","cfaefbab":"**Load data**","69c0dbbe":"**Separating target from the feature**","c8690882":"**Generating predictions**\n","35a36942":"**Training a Model**"}}