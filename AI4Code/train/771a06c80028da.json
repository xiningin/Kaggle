{"cell_type":{"0031f491":"code","75e65d61":"code","12e51bfd":"code","1b2729fa":"code","6e7aef42":"code","3f043089":"code","28752364":"code","53ac02d6":"code","22e0684c":"markdown","20c4b1d9":"markdown","f937dfce":"markdown","bf55291a":"markdown","c91af89b":"markdown","d830176a":"markdown","bf2dc004":"markdown","e94b3037":"markdown","1fad4c35":"markdown","6f2f6437":"markdown","22ef6547":"markdown"},"source":{"0031f491":"import numpy as np\nfrom itertools import product\n\ndef show_kernel(kernel, label=True, digits=None, text_size=28):\n    # Format kernel\n    kernel = np.array(kernel)\n    if digits is not None:\n        kernel = kernel.round(digits)\n\n    # Plot kernel\n    cmap = plt.get_cmap('Blues_r')\n    plt.imshow(kernel, cmap=cmap)\n    rows, cols = kernel.shape\n    thresh = (kernel.max()+kernel.min())\/2\n    # Optionally, add value labels\n    if label:\n        for i, j in product(range(rows), range(cols)):\n            val = kernel[i, j]\n            color = cmap(0) if val > thresh else cmap(255)\n            plt.text(j, i, val, \n                     color=color, size=text_size,\n                     horizontalalignment='center', verticalalignment='center')\n    plt.xticks([])\n    plt.yticks([])","75e65d61":"from tensorflow import keras\nfrom tensorflow.keras import layers\n\nmodel = keras.Sequential([\n    layers.Conv2D(filters=64, kernel_size=3), # activation is None\n    # More layers follow\n])","12e51bfd":"model = keras.Sequential([\n    layers.Conv2D(filters=64, kernel_size=3, activation='relu')\n    # More layers follow\n])","1b2729fa":"\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nplt.rc('figure', autolayout=True)\nplt.rc('axes', labelweight='bold', labelsize='large',\n       titleweight='bold', titlesize=18, titlepad=10)\nplt.rc('image', cmap='magma')\n\nimage_path = '..\/input\/computer-vision-resources\/car_feature.jpg'\nimage = tf.io.read_file(image_path)\nimage = tf.io.decode_jpeg(image)\n\nplt.figure(figsize=(6, 6))\nplt.imshow(tf.squeeze(image), cmap='gray')\nplt.axis('off')\nplt.show();","6e7aef42":"import tensorflow as tf\n\nkernel = tf.constant([\n    [-1, -1, -1],\n    [-1,  8, -1],\n    [-1, -1, -1],\n])\n\nplt.figure(figsize=(3, 3))\nshow_kernel(kernel)","3f043089":"# Reformat for batch compatibility.\nimage = tf.image.convert_image_dtype(image, dtype=tf.float32)\nimage = tf.expand_dims(image, axis=0)\nkernel = tf.reshape(kernel, [*kernel.shape, 1, 1])\nkernel = tf.cast(kernel, dtype=tf.float32)","28752364":"image_filter = tf.nn.conv2d(\n    input=image,\n    filters=kernel,\n    # we'll talk about these two in lesson 4!\n    strides=1,\n    padding='SAME',\n)\n\nplt.figure(figsize=(6, 6))\nplt.imshow(tf.squeeze(image_filter))\nplt.axis('off')\nplt.show();","53ac02d6":"image_detect = tf.nn.relu(image_filter)\n\nplt.figure(figsize=(6, 6))\nplt.imshow(tf.squeeze(image_detect))\nplt.axis('off')\nplt.show();","22e0684c":"# Introduction #\n\n\uc9c0\ub09c \uac15\uc758\uc5d0\uc11c \ud569\uc131\uacf1(Convolutional) \ubd84\ub958\uae30\ub294 Convolution **base**\uc640 dense \ub808\uc774\uc5b4\uc758 **head** \ub450 \ubd80\ubd84\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc74c\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 base\uc758 \uc5ed\ud560\uc774 \uc774\ubbf8\uc9c0\uc5d0\uc11c \uc2dc\uac01\uc801 \ud2b9\uc9d5\uc744 \ucd94\ucd9c(Extract visual features)\ud558\ub294 \uac83\uc784\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 Head\uac00 \uc774\ubbf8\uc9c0\ub97c \ubd84\ub958\ud558\ub294 \ub370 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\n\ub2e4\uc74c \uba87 \uac00\uc9c0 \uac15\uc758\ub97c \ud1b5\ud574 \ud569\uc131\uacf1(Convolutional) \uc774\ubbf8\uc9c0 \ubd84\ub958\uae30 base\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c \ucc3e\uc744 \uc218\uc788\ub294 \uac00\uc7a5 \uc911\uc694\ud55c \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \ub808\uc774\uc5b4\uc5d0 \ub300\ud574 \uc54c\uc544\ubcfc \uac83\uc785\ub2c8\ub2e4.\n1. **ReLU \ud65c\uc131\ud654(Activiation)**\uac00 \uc788\ub294 **Convolutional \ub808\uc774\uc5b4**\n2. **Maximum pooling \ub808\uc774\uc5b4**\uc785\ub2c8\ub2e4. \n\n5\uac15\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \ub808\uc774\uc5b4\ub97c \ud2b9\uc131 \ucd94\ucd9c(Feature Extraction)\uc744 \uc218\ud589\ud558\ub294 \ube14\ub85d\uc73c\ub85c \uad6c\uc131\ud558\uc5ec \uc790\uc2e0\ub9cc\uc758 Convnet\uc744 \uc124\uacc4\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.\n\n\uc774 \uac15\uc758\ub294 ReLU \ud65c\uc131\ud654 \uae30\ub2a5\uc774 \uc788\ub294 \ud569\uc131\uacf1 \ub808\uc774\uc5b4(Convolutional layer)\uc5d0 \ub300\ud55c \uac83\uc785\ub2c8\ub2e4.\n\n\n# Feature Extraction #\n\n\ud569\uc131\uacf1(Convolution)\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uae30 \uc804\uc5d0, \uc2e0\uacbd\ub9dd\uc5d0\uc11c \uc774\ub7f0 \ub808\uc774\uc5b4\uc758 *\ubaa9\uc801*\uc5d0 \ub300\ud574 \ud1a0\uc758\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uc138 \uac00\uc9c0 operation\ub4e4\uc744(Convolution, ReLU, \uadf8\ub9ac\uace0 Maximum pooling) \uc0ac\uc6a9\ud558\uc5ec Feature Extraction \uacfc\uc815\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\nBase\uac00 \uc218\ud589\ud558\ub294 **Feature Extraction**\uc740 \uc138 \uac00\uc9c0 \uae30\ubcf8 operation\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4.\n1. **Filter** : \ud558\ub098\uc758 \ud2b9\uc815 feature\uc5d0 \ub300\ud55c \uc774\ubbf8\uc9c0\ub97c \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4. (Convolution)\n2. **Detect** : \ud544\ud130\ub9c1\ub41c \uc774\ubbf8\uc9c0 \ub0b4\uc758 Feature\ub97c \ud0d0\uc9c0\ud569\ub2c8\ub2e4. (ReLU)\n3. **Condense** : Feature \uac15\ud654\ub97c \uc704\ud574 \uc774\ubbf8\uc9c0\ub97c \uc555\ucd95\ud569\ub2c8\ub2e4. (Maximum pooling)\n\n\ub2e4\uc74c \uadf8\ub9bc\uc740 \uc774 \uacfc\uc815\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774 \uc138 \uac00\uc9c0 \uc791\uc5c5\uc774 \uc6d0\ubcf8 \uc774\ubbf8\uc9c0\uc758 \ud2b9\ubcc4\ud55c \ud2b9\uc9d5(\uc774 \uacbd\uc6b0\uc5d0\ub294 \uc218\ud3c9\uc120)\uc744 \ubd84\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n<figure>\n<!-- <img src=\".\/images\/2-show-extraction.png\" width=\"1200\" alt=\"An example of the feature extraction process.\"> -->\n<img src=\"https:\/\/i.imgur.com\/IYO9lqp.png\" width=\"600\" alt=\"An example of the feature extraction process.\">\n<figcaption style=\"textalign: center; font-style: italic\"><center>The three steps of feature extraction.<\/center><\/figcaption>\n<\/figure>\n\n\uc77c\ubc18\uc801\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c\ub294 \ub2e8\uc77c \uc774\ubbf8\uc9c0\uc5d0\uc11c \uc5ec\ub7ec \ucd94\ucd9c\uc744 \ubcd1\ub82c\ub85c \uc218\ud589\ud569\ub2c8\ub2e4. \ud604\ub300\uc758 Convnet\uc5d0\uc11c base\uc758 \ucd5c\uc885 \ub808\uc774\uc5b4\uac00 1,000\uac1c \uc774\uc0c1\uc758 \uace0\uc720\ud55c \uc2dc\uac01\uc801 Feature\ub4e4\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc740 \ub4dc\ubb38 \uc77c\uc774 \uc544\ub2d9\ub2c8\ub2e4.\n\n\n# Filter with Convolution #\n\n\ud569\uc131\uacf1 \ub808\uc774\uc5b4(Convolutional layer)\ub294 \ud544\ud130\ub9c1 \ub2e8\uacc4\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. Keras \ubaa8\ub378\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc774 \ud569\uc131\uacf1 \ub808\uc774\uc5b4\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","20c4b1d9":"\ub808\uc774\uc5b4\uc758 *\uac00\uc911\uce58(Weights)*\uc640 *\ud65c\uc131\ud654(Activiations)*\uc758 \uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uba74 \uc774\ub7ec\ud55c \ud30c\ub77c\ubbf8\ud130\ub4e4\uc744 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc0b4\ud3b4\ubd05\uc2dc\ub2e4.\n\n## Weights ##\n\nConvnet\uc774 \ud559\uc2b5(Training)\ud558\ub294 \ub3d9\uc548 \uc0ac\uc6a9\ud558\ub294 **\uac00\uc911\uce58**\ub294 \uc8fc\ub85c \ud569\uc131\uacf1 \ub808\uc774\uc5b4\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac00\uc911\uce58\ub97c \uc6b0\ub9ac\ub294 **\ucee4\ub110(Kernels)**\uc774\ub77c\uace0 \ubd80\ub985\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc774\uac83\ub4e4\uc744 \uc791\uc740 \ubc30\uc5f4(Arrays)\ub85c \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n<figure>\n<!-- <img src=\".\/images\/3-kernel.png\" width=\"150\" alt=\"A 3x3 kernel.\"> -->\n<img src=\"https:\/\/i.imgur.com\/uJfD9r9.png\" width=\"150\" alt=\"A 3x3 kernel.\">\n<\/figure>\n\n\ucee4\ub110\uc740 \uc774\ubbf8\uc9c0\ub97c \uc2a4\uce94\ud558\uace0 \ud53d\uc140(pixel) \uac12\uc758 *\uac00\uc911 \ud569\uacc4(Weighted sum)*\ub97c \uc0dd\uc131\ud558\uc5ec \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc774\ub7f0 \uc2dd\uc73c\ub85c, \ucee4\ub110\uc740 \ud2b9\uc815 \ud328\ud134\uc758 \uc815\ubcf4\ub97c \uac15\uc870\ud558\uac70\ub098 \uac15\uc870\ud558\uc9c0 \uc54a\ub294 \uc77c\uc885\uc758 \ud3b8\uad11 \ub80c\uc988\ucc98\ub7fc \uc791\ub3d9\ud569\ub2c8\ub2e4.\n\n<figure>\n<!-- <img src=\".\/images\/3-kernel-lens.png\" width=\"400\" alt=\"A kernel acts as a kind of lens.\"> -->\n<img src=\"https:\/\/i.imgur.com\/j3lk26U.png\" width=\"250\" alt=\"A kernel acts as a kind of lens.\">\n<figcaption style=\"textalign: center; font-style: italic\"><center>A kernel acts as a kind of lens.<\/center><\/figcaption>\n<\/figure>\n\n\ucee4\ub110\uc740 \ud569\uc131\uacf1 \ub808\uc774\uc5b4\uac00 \ub2e4\uc74c \ub808\uc774\uc5b4\uc5d0 \uc5f0\uacb0\ub418\ub294 \ubc29\uc2dd\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uc704\uc758 \ucee4\ub110\uc740 \ucd9c\ub825\ub2e8\uc5d0 \uc788\ub294 \uac01 \ub274\ub7f0(neuron)\uc744 9\uac1c\uc758 \uc785\ub825 \ub274\ub7f0\uc5d0 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ucee4\ub110 \ud06c\uae30\ub97c `kernel_size`\ub85c \uc124\uc815\ud558\uba74 Convnet\uc5d0 \uc774\ub7ec\ud55c \uc5f0\uacb0\uc744 \ud615\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\ub824\uc90d\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \ucee4\ub110\uc740 -- `kernel_size = (3, 3)`\ub610\ub294`(5, 5)`\uc640 \uac19\uc740 -- \ud640\uc218 \ucc28\uc6d0\uc744 \uac00\uc9c0\ubbc0\ub85c \ub2e8\uc77c \ud53d\uc140\uc774 \uc911\uc559\uc5d0 \ubc30\uce58\ub418\ub294\ub370 \uc774\ub294 \ud544\uc218 \uc0ac\ud56d\uc740 \uc544\ub2d9\ub2c8\ub2e4.\n\n\ud569\uc131\uacf1 \ub808\uc774\uc5b4\uc758 \ucee4\ub110\uc740 \uc0dd\uc131\ub418\ub294 feature\uc758 \uc885\ub958\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ud559\uc2b5 \ub3d9\uc548\uc5d0 Convnet\uc740 \ubd84\ub958 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294\ub370 \ud544\uc694\ud55c feature\ub4e4\uc744 \ubc30\uc6b0\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ucee4\ub110\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \uac12\uc744 \ucc3e\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.\n\n<!--TODO: Learning a kernel-->\n\n## Activations ##\n\n\uc2e0\uacbd\ub9dd\uc758 \ud65c\uc131\ud654(Activations)\ub294 **Feature Maps**\uc73c\ub85c \ubd80\ub985\ub2c8\ub2e4. \uc774\ub294 \uc774\ubbf8\uc9c0\uc5d0 \ud544\ud130\ub97c \uc801\uc6a9\ud55c \uacb0\uacfc\uc785\ub2c8\ub2e4. \n\n\uc5ec\uae30\uc5d0\ub294 \ucee4\ub110\uc774 \ucd94\ucd9c\ud558\ub294 \uc2dc\uac01\uc801 Feature\ub4e4\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uadf8\ub4e4\uc774 \uc0dd\uc131 \ud55c Feature Map\uc73c\ub85c \ubb18\uc0ac \ub41c \uba87 \uac00\uc9c0 \ucee4\ub110\uc785\ub2c8\ub2e4.\n\n<figure>\n<img src=\"https:\/\/i.imgur.com\/JxBwchH.png\" width=\"800\" alt=\"Three kernels and the feature maps they produce.\"><figcaption style=\"textalign: center; font-style: italic\"><center>Kernels and features.<\/center><\/figcaption>\n<\/figure>\n\n\ucee4\ub110\uc758 \ud328\ud134\uc758 \uc218\ub97c \ud1b5\ud574, \ub2f9\uc2e0\uc740 \ucee4\ub110\uc774 \uc0dd\uc131\ud558\ub294 Feature maps\uc758 \uc885\ub958\ub97c \ub9d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ud569\uc131\uacf1(Convolution)\uc774 \uc785\ub825\uc5d0\uc11c \uac15\uc870\ud558\ub294 \uac83\uc740 \ucee4\ub110\uc758 *pisitive* \uc22b\uc790\ub4e4\uc758 \ubaa8\uc591\uacfc \uc77c\uce58\ud569\ub2c8\ub2e4. \uc704\uc758 \uc67c\ucabd \ubc0f \uc911\uac04 \ucee4\ub110\uc740 \ubaa8\ub450 \uc218\ud3c9 \ubaa8\uc591\uc744 \ud544\ud130\ub9c1 \ud569\ub2c8\ub2e4.\n\n`filters` \ud30c\ub77c\ubbf8\ud130\ub97c \uc0ac\uc6a9\ud574\uc11c \ucd9c\ub825\uc73c\ub85c \uc0dd\uc131\ud560 Feature map\uc774 \uc5bc\ub9c8\ub098 \uc788\ub294\uc9c0 \ud569\uc131\uacf1 \ub808\uc774\uc5b4\uc5d0 \uc54c\ub824\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\n# Detect with ReLU #\n\n\ud544\ud130\ub9c1 \uacfc\uc815 \uc774\ud6c4 Feature map\ub4e4\uc740 \ud65c\uc131\ud654 \ud568\uc218(Activiation Function)\uc744 \ud1b5\uacfc\ud569\ub2c8\ub2e4. **Rectifier Function**\uc740 \uc544\ub798\uc640 \uac19\uc740 \uadf8\ub798\ud504\uc785\ub2c8\ub2e4:\n\n<figure>\n<!-- <img src=\".\/images\/relu.png\" width=\"300\" alt=\"\"> -->\n<img src=\"https:\/\/i.imgur.com\/DxGJuTH.png\" width=\"300\" alt=\"Graph of the ReLU activation function.\">\n<figcaption style=\"textalign: center; font-style: italic\"><center>The graph of the rectifier function looks like a line with the negative part \"rectified\" to 0.<\/center><\/figcaption>\n<\/figure>\n\nRectifier\uac00 \ubd80\ucc29\ub41c \ub274\ub7f0\uc744 *Rectified Linear Unit*\uc774\ub77c\uace0 \ubd80\ub985\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubc30\uacbd\ub54c\ubb38\uc5d0 Rectifier Function\uc744 **ReLU activation** \ud639\uc740 \uc544\uc608 ReLU function\uc73c\ub85c \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4.\n\nReLU \ud65c\uc131\ud654(Activation)\ub294 \uc790\uccb4 `Activation` \ub808\uc774\uc5b4\ub85c \uc815\uc758\ub420 \uc218 \uc788\uc9c0\ub9cc \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 `Conv2D`\uc758 \ud65c\uc131\ud654 \uae30\ub2a5\uc73c\ub85c \ud3ec\ud568\ud569\ub2c8\ub2e4.","f937dfce":"\ub2e4\uc74c\uc740 ReLU \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud55c Detection \ub2e8\uacc4\uc785\ub2c8\ub2e4. \uc774 \ud568\uc218\ub294 \uc124\uc815\ud560 \ud30c\ub77c\ubbf8\ud130\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ud569\uc131\uacf1(Convolution)\ubcf4\ub2e4 \ud6e8\uc52c \uac04\ub2e8\ud569\ub2c8\ub2e4.","bf55291a":"Feature map\uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4! \uc774\uc640 \uac19\uc740 \uc774\ubbf8\uc9c0\ub294 Head\uac00 \ubd84\ub958 \ubb38\uc81c(Classification problem)\ub97c \ud574\uacb0\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud2b9\uc815 Feature\ub294 *\ucc28(Cars)*\uc758 \ud2b9\uc9d5\uc774\uace0 \ub2e4\ub978 Feature\ub294 *\ud2b8\ub7ed(Trucks)*\uc758 \ud2b9\uc9d5 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud559\uc2b5 \uc911 Convnet\uc758 \uc784\ubb34\ub294 \uc774\ub7ec\ud55c \uae30\ub2a5\uc744 \ucc3e\uc744 \uc218\uc788\ub294 \ucee4\ub110\uc744 \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4.\n\n\n# Conclusion #\n\n\uc774 \uac15\uc758\uc5d0\uc11c Convnet\uc774 Feature Extraction\uc744 \uc218\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \ucc98\uc74c \ub450 \ub2e8\uacc4\ub97c \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.\n- `Conv2D` \ub808\uc774\uc5b4\ub85c **filter**\n- `relu` \ud65c\uc131\ud654\ub85c **detect**\n\n\n# Your Turn #\n\n[**2\uac15 \uc2e4\uc804 \ubb38\uc81c**](https:\/\/www.kaggle.com\/kernels\/fork\/11989557)\uc5d0\uc11c 1\uac15\uc5d0\uc11c \uc0ac\uc6a9\ud55c \uc0ac\uc804 \ud6c8\ub828\ub41c VGG16 \ubaa8\ub378\uc758 \ucee4\ub110\uc744 \uc2e4\ud5d8\ud574\ubcfc \uae30\ud68c\uac00 \uc788\uc2b5\ub2c8\ub2e4.","c91af89b":"---\n\uc774 \uae00\uc740 kaggle\uc758 Computer Vision \uac15\uc758\ub97c \ubc88\uc5ed\ud55c \uac83\uc785\ub2c8\ub2e4.\n\n(\uc624\uc5ed \ubc0f \uc798\ubabb\ub41c \ubd80\ubd84\uc774 \ub9ce\uc73c\ub2c8 \ucc38\uace0 \ubc14\ub78d\ub2c8\ub2e4.)\n\n---","d830176a":"<!--TITLE: Convolution and ReLU-->","bf2dc004":"TensorFlow\ub294 `tf.nn` [module](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/nn)\uc5d0 \uc2e0\uacbd\ub9dd\uc774 \uc218\ud589\ud558\ub294 \ub9ce\uc740 \uae30\ubcf8 operation\ub4e4\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\uac00 \uc0ac\uc6a9\ud560 \ub450 \uac00\uc9c0\ub294 `conv2d`\uc640 `relu`\uc785\ub2c8\ub2e4. \uc774\ub4e4\uc740 \ub2e8\uc21c\ud788 Keras \ub808\uc774\uc5b4\uc758 function \ubc84\uc804(\uc5ed\uc8fc: \ud568\uc218\ub85c \uc81c\uacf5\ud55c\ub2e4\ub294 \ub73b)\uc785\ub2c8\ub2e4.\n\n\ub2e4\uc74c hidden cell\uc740 TensorFlow\uc640 \ud638\ud658\ub418\ub3c4\ub85d \ud615\uc2dd\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774 \uc608\uc5d0\uc11c\ub294 \uc138\ubd80 \uc815\ubcf4\uac00 \uc911\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","e94b3037":"---\n\n*\uc9c8\ubb38\uc774\ub098 \ucf54\uba58\ud2b8\uac00 \uc788\ub2e4\uba74, \uc800\uc5d0\uac8c \ubb38\uc758 \uc8fc\uc2dc\uac70\ub098 \ub313\uae00\uc744 \ub0a8\uaca8\uc8fc\uc138\uc694. \ud639\uc740 \ud55c\uad6d [Vision & AI Study(VAIS) \uadf8\ub8f9](https:\/\/v-ais.github.io)\uc5d0\uc11c \uc790\uc720\ub86d\uac8c \ud1a0\ub860\ud574\uc8fc\uc138\uc694.\n\n*\uc6d0\ubb38\uc5d0 \ub300\ud574\uc11c\ub294 [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum)\uc744 \ubc29\ubb38\ud558\uc5ec \ub2e4\ub978 \ud559\uc2b5\uc790\ub4e4\uacfc \ud1a0\ub860\ud574\uc8fc\uc138\uc694.*","1fad4c35":"\ud65c\uc131\ud654 \ud568\uc218(Activation Function)\ub294 \uc911\uc694\ub3c4\uc5d0 \ub530\ub77c \ud53d\uc140 \uac12\uc744 \ucc44\uc810\ud558\ub294 \uac83\uc73c\ub85c \uc0dd\uac01\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ReLU \ud65c\uc131\ud654\ub294 \uc74c\uc218 \uac12\uc774 \uc911\uc694\ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \ub098\ud0c0\ub0b4\ubbc0\ub85c \uc774\ub97c 0\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4 ( \"\uc911\uc694\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uac83\uc740 \ub611\uac19\uc774 \uc911\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\").\n\n\uc704\uc758 Feature map\uc744 \uc801\uc6a9\ud55c ReLU\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. ReLU\uac00 Feature\ub4e4\uc744 \ubd84\ub9ac\ud558\ub294\ub370 \uc5b4\ub5bb\uac8c \uc131\uacf5\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\n\n\n<figure>\n<!-- <img src=\".\/images\/3-relu-and-maps.png\" width=\"800\" alt=\"ReLU applied to feature maps.\"> -->\n<img src=\"https:\/\/i.imgur.com\/dKtwzPY.png\" width=\"800\" alt=\"ReLU applied to feature maps.\">\n<\/figure>\n\n\ub2e4\ub978 \ud65c\uc131\ud654 \ud568\uc218\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c ReLU \ud568\uc218\ub294 **\ube44\uc120\ud615(Non-linear)**\uc785\ub2c8\ub2e4. \ubcf8\uc9c8\uc801\uc73c\ub85c \uc774\uac83\uc740 \uc2e0\uacbd\ub9dd\uc5d0 \ubaa8\ub4e0 \ub808\uc774\uc5b4\uc758 \uc804\uccb4 \ud6a8\uacfc(Total Effect)\uac00 \uadf8\ub0e5 \ubaa8\ub4e0 \ud6a8\uacfc\ub97c \ub354\ud558\uc5ec \uc5bb\uc744 \uc218 \uc788\ub294 \uac83\uacfc \ub2ec\ub77c\uc9c4\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. -- \uc774\uac83\uc740 \ub2e8\uc77c \ub808\uc774\uc5b4(single layer)\ub85c\ub9cc \ub2ec\uc131 \ud560 \uc218\uc788\ub294 \uac83\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ube44\uc120\ud615\uc131\uc740 Feature\uac00 \uc2e0\uacbd\ub9dd \uae4a\uc219\uc774 \uc774\ub3d9\ud560 \ub54c \ud765\ubbf8\ub85c\uc6b4 \ubc29\uc2dd\uc73c\ub85c \uacb0\ud569\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. (5\uac15\uc5d0\uc11c \uc774 \"Feature \ud569\uc131(Feature Compounding)\"\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.)\n\n\n# Example - Apply Convolution and ReLU #\n\n\ud569\uc131\uacf1(Convolutional) \ub808\uc774\uc5b4\uac00 \"\ub4a4\uc5d0\uc11c\" \uc218\ud589\ud558\ub294 \uc791\uc5c5\uc744 \ub354 \uc798 \uc774\ud574\ud558\uae30 \uc704\ud574 \uc544\ub798 \uc608\uc81c\uc5d0\uc11c \uc9c1\uc811 Extraction\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.\n\n\uc774 \uc608\uc81c\uc5d0 \uc0ac\uc6a9\ud560 \uc774\ubbf8\uc9c0\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:","6f2f6437":"\uc774\uc81c \ucee4\ub110\uc744 \uc801\uc6a9\ud558\uace0 \ubb34\uc2a8 \uc77c\uc774 \uc77c\uc5b4\ub098\ub294\uc9c0 \ubd05\uc2dc\ub2e4.","22ef6547":"\ud544\ud130\ub9c1 \ub2e8\uacc4\uc5d0\uc11c\ub294 \ucee4\ub110\uc744 \uc815\uc758\ud55c \ub2e4\uc74c \uc774\uac83\uc744 \ud569\uc131\uacf1(Convolution)\uacfc \ud568\uaed8 \uc801\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ucee4\ub110\uc740 \"Edge Detection\"\ucee4\ub110\uc785\ub2c8\ub2e4. Numpy\uc5d0\uc11c `np.array`\ub85c \ubc30\uc5f4\uc744 \uc815\uc758\ud558\ub294 \uac83\ucc98\ub7fc`tf.constant`\ub85c \uc815\uc758 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 TensorFlow\uac00 \uc0ac\uc6a9\ud558\ub294 \uc885\ub958\uc758 *tensor*\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."}}