{"cell_type":{"06823b45":"code","d6e4ff19":"code","fe6cbcc5":"code","b4b40b6d":"code","3d82b0cb":"code","b9448a12":"code","bba417a9":"code","fcb3857d":"code","09b1782f":"code","b01d2de4":"code","4091eeca":"code","d7c9dcd0":"code","4c05e0c4":"code","c410bbdc":"code","cba9eaf3":"code","453dcf55":"code","5e6443c4":"code","0c4b6c9a":"code","cb61429f":"code","ac6696b3":"code","10a1abdd":"code","34353823":"code","fee77aea":"code","4406a83d":"code","509da221":"code","1884f1bb":"markdown","904de9e2":"markdown","79c38cd5":"markdown","a43793f5":"markdown","51ff49cf":"markdown","a5e4250d":"markdown","0a2dfb92":"markdown","945c550e":"markdown","4247b952":"markdown","46bdb4bb":"markdown","4812d0bd":"markdown","065419d2":"markdown","a81608b3":"markdown","6c10a9a8":"markdown","e69ec23c":"markdown","115a9e99":"markdown","da6425e2":"markdown","f9cf24a5":"markdown","ce655d71":"markdown","b15a2f50":"markdown","d631da9d":"markdown","b4d951ab":"markdown","2d03d80d":"markdown","efade6ae":"markdown","d2b99376":"markdown","de3bc163":"markdown","03a21096":"markdown","574a4b0c":"markdown","e78f25f3":"markdown","2804e565":"markdown"},"source":{"06823b45":"import numpy as np\nimport pandas as pd","d6e4ff19":"df = pd.read_csv('..\/input\/titanic\/train.csv', index_col='PassengerId')\ndf.head()","fe6cbcc5":"df.shape","b4b40b6d":"df.info()","3d82b0cb":"df.describe(include='all')","b9448a12":"dummies = pd.get_dummies(df['Sex'])\ndf['Male'] = dummies['male']\ndf.drop('Sex', axis=1, inplace=True)","bba417a9":"dummies = pd.get_dummies(df['Embarked'])\ndf[['C', 'S']] = dummies[['C','S']]\ndf.drop('Embarked', axis=1, inplace=True)","fcb3857d":"df.drop(['Name', 'Ticket', 'Cabin'], inplace=True, axis=1)\ndf.head()","09b1782f":"df.corr()","b01d2de4":"y = df['Survived']\nX = df.drop(['Survived'], axis=1)","4091eeca":"X.fillna(X['Age'].quantile(.5), inplace=True)","d7c9dcd0":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC","4c05e0c4":"X = StandardScaler().fit(X).transform(X.astype(float))","c410bbdc":"knn = KNeighborsClassifier(n_neighbors=14, n_jobs=-1)\nknn_score = cross_val_score(knn, X, y, cv=4, scoring='accuracy')\nprint('KNN(14) average:', knn_score.mean())\nprint(knn_score)","cba9eaf3":"svc = SVC()\nsvc_score = cross_val_score(svc, X, y, cv=4, scoring='accuracy')\nprint('SVC(rbf):', svc_score.mean())\nprint(svc_score)","453dcf55":"test = pd.read_csv('..\/input\/titanic\/test.csv', index_col='PassengerId')\ntest.head()","5e6443c4":"# Get dummies for Sex\ndummies = pd.get_dummies(test['Sex'])\ntest['Male'] = dummies['male']\ntest.drop('Sex', axis=1, inplace=True)\n\n# Get dummies for Embarked\ndummies = pd.get_dummies(test['Embarked'])\ntest[['C', 'S']] = dummies[['C','S']]\ntest.drop('Embarked', axis=1, inplace=True)\n\n# Drop Name, Ticket and Cabin\ntest.drop(['Name', 'Ticket', 'Cabin'], inplace=True, axis=1)\ntest.head()","0c4b6c9a":"# fill null values\n\ntest.Age.fillna(test['Age'].quantile(.5), inplace=True)\ntest.Fare.fillna(test['Fare'].mean(), inplace=True)\ntest.describe()","cb61429f":"knn.fit(X, y)\nresult = knn.predict(test)\nresult[:10]","ac6696b3":"result_series = pd.Series(result, index=test.index, name='Survived')\nresult_series.head()","10a1abdd":"result_series.to_csv('..\/working\/titanic_result.csv', header='Survived')","34353823":"svc.fit(X,y)\nsvc_result = svc.predict(test)\nsvc_result[:10]","fee77aea":"result_series = pd.Series(svc_result, index=test.index, name='Survived')\nresult_series.head()","4406a83d":"result_series.to_csv('..\/working\/titanic_result2.csv', header='Survived')","509da221":"'''\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: \n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n'''","1884f1bb":"### Age has null values. Fill the null values with the median  <a id='fillna-age'><\/a>","904de9e2":"### Model  <a id='model'><\/a>","79c38cd5":"<br>\n<hr>\n<br>","a43793f5":"SVC: 62% accuracy","51ff49cf":"##### I'll be going with KNN because it's faster than SVC (and it is negligibly less accurate than SVC)","a5e4250d":"<br>\n<hr>\n<br>","0a2dfb92":"### Can we do better?\n\n## Yes, of course","945c550e":"<br>\n<hr>\n<br>","4247b952":"### Import sklearn modules <a id='imp-sk'><\/a>","46bdb4bb":"##### Note: Survival is most correlated to Male, Pclass and Fare. Pclass and Fare are correlated to each other too","4812d0bd":"# BASIC PREDICTION OF TITANIC SURVIVAL","065419d2":"<br>\n<hr>\n<br>","a81608b3":"<br>\n<hr>\n<br>","6c10a9a8":"### Import and prepare test data <a id='imp-test'><\/a>","e69ec23c":"### Content\n<ul>\n    <li><a href='#imp-mod'>Import modules<\/a><\/li>\n    <li><a href='#imp-data'>Import train datasets<\/a><\/li>\n    <li><a href='#get-dummies'>Get dummies for Sex and Embarked<\/a><\/li>\n    <li><a href='#drop'>Drop Name, Ticket, Cabin<\/a><\/li>\n    <li><a href='#corr'>Correlation<\/a><\/li>\n    <li><a href='#set-xy'>Set feature and target as X and y<\/a><\/li>\n    <li><a href='#fillna-age'>Fillna<\/a><\/li>\n    <li><a href='#imp-sk'>Import sklearn modules<\/a><\/li>\n    <li><a href='#scale'>Scale Features<\/a><\/li>\n    <li><a href='#model'>Model<\/a><\/li>\n    <li><a href='#imp-test'>Import and prepare test data<\/a><\/li>\n    <li><a href='#train'>Train and predict<\/a><\/li>\n<\/ul>","115a9e99":"<br>\n<hr>\n<br>","da6425e2":"<br>\n<hr>\n<br>","f9cf24a5":"### Get dummies for Sex and Embarked <a id='get-dummies'><\/a>","ce655d71":"Performance of knn on test data is 60.5%. That's terribly poor. Let's check SVC","b15a2f50":"### Set feature and target as X and y <a id='set-xy'><\/a>","d631da9d":"<br>\n<hr>\n<br>","b4d951ab":"### Scale Features <a id='scale'><\/a>","2d03d80d":"### Train and predict <a id='train'><\/a>","efade6ae":"<br>\n<hr>\n<br>","d2b99376":"### Import modules<a id='imp-mod' class='anchor'><\/a>","de3bc163":"### Drop Name, Ticket, Cabin <a id='drop'><\/a>","03a21096":"<br>\n<hr>\n<br>","574a4b0c":"## Correlation  <a id='corr'><\/a>","e78f25f3":"### Import train datasets<a id='imp-data' class='anchor'><\/a>","2804e565":"##### From analysis not included here, the best performing models have accuracy of about 82% and they are:\n* KNN(k=14)\n* SVC(kernel='rbf')"}}