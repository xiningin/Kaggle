{"cell_type":{"ee69a186":"code","77fa4d4a":"code","0708bf89":"code","cf250883":"code","c7e419fd":"code","22b7e135":"code","931536c8":"code","4fd3cc67":"code","b77f0b9b":"code","79494cbe":"code","9d26a1da":"code","479c368d":"code","ae099aa0":"code","724887f3":"code","5683a1de":"code","45e9eadc":"code","7a896cb6":"code","35cf85b5":"code","8f783aac":"code","fa3f2240":"code","1a045f37":"code","c8bcb3bd":"markdown","4a2a31bb":"markdown","2a1df294":"markdown","d876a0d4":"markdown","39570a87":"markdown","8ac598d0":"markdown","7feb07a3":"markdown","a8d0a660":"markdown","735f56e0":"markdown","889c2ead":"markdown","7e20e7ac":"markdown","17077abb":"markdown","8559f600":"markdown","2f2c8bd1":"markdown","736f33e6":"markdown","bea7821d":"markdown","3b533e26":"markdown"},"source":{"ee69a186":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","77fa4d4a":"db = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')","0708bf89":"db.head()","cf250883":"db.info()","c7e419fd":"X = db.drop(['math score'], axis=1)","22b7e135":"y = db['math score']","931536c8":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX['test preparation course'] = le.fit_transform(X['test preparation course'])\nX['gender'] = le.fit_transform(X['gender'])\nX['race\/ethnicity'] = le.fit_transform(X['race\/ethnicity'])\nX['parental level of education'] = le.fit_transform(X['parental level of education'])\nX['lunch'] = le.fit_transform(X['lunch'])","4fd3cc67":"from sklearn.preprocessing import RobustScaler\nrs = RobustScaler()\nX = rs.fit_transform(X)","b77f0b9b":"from sklearn.model_selection import train_test_split","79494cbe":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1)","9d26a1da":"from sklearn.ensemble import RandomForestRegressor","479c368d":"RF = RandomForestRegressor()","ae099aa0":"RF.fit(X_train, y_train)","724887f3":"RFpred = RF.predict(X_test)","5683a1de":"from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score","45e9eadc":"lineX = [RF.score(X_train, y_train), RF.score(X_test, y_test)]\nlineX","7a896cb6":"MSE = mean_squared_error(y_test,RFpred,squared = True)\nMAE = mean_absolute_error(y_test,RFpred)\nRMSE = mean_squared_error(y_test,RFpred,squared = False)\nR_squared = r2_score(y_test,RFpred)\nprint(\"MSE:\", MSE)\nprint(\"MAE:\", MAE)\nprint(\"RMSE:\", RMSE)\nprint(\"R-squared:\", R_squared)","35cf85b5":"RFdic = {}\nfor md in range(1,16):\n    RFtest = RandomForestRegressor(max_depth=md)\n    RFtest.fit(X_train, y_train)\n    RFtestpred = RFtest.predict(X_test)\n    RFdic[md] = [RFtest.score(X_train, y_train), RFtest.score(X_test, y_test)]\nRFdic","8f783aac":"RFdb = pd.DataFrame(data=RFdic) # set results to dataframe","fa3f2240":"RFdb.rename(index={ 0: 'treino', 1: 'teste'}, inplace=True)\nRFdb = RFdb.T","1a045f37":"\nplt.figure(figsize=(16, 6))\nsns.lineplot(data = RFdb)\nplt.xlabel('max_depth')\nplt.ylabel('R2 Score')","c8bcb3bd":"Scaling values to improve model, Robust Scaler to avoid outliers","4a2a31bb":"Max Depth results with Seaborn Visualization","2a1df294":"Method Used: Random Forest Regressor","d876a0d4":"Formatting dataframe","39570a87":"Evaluation in training and test data, light overfitting.\n\nThe data is better in the training data set.\n","8ac598d0":"Importing Libraries","7feb07a3":"Prediction","a8d0a660":"Data Reading","735f56e0":"Features","889c2ead":"Model Evaluation","7e20e7ac":"Metrics Evaluation","17077abb":"Transformation of categorical variables","8559f600":"The purpose of this notebook is the prediction of a student's performance in mathematics examination from his socio-economic and demographic information.","2f2c8bd1":"Data Division in Training and Tests","736f33e6":"Based on results We observed that the best depth for the tree is 6. (Good Results in Test Data and lower cost than 9)","bea7821d":"Best parameter test Max_depth for random forests. (Maximum depth of the tree)","3b533e26":"Target"}}