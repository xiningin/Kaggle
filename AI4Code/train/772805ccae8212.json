{"cell_type":{"ae726eb1":"code","e687ba55":"code","613176d2":"code","4da6d21f":"code","545620fa":"code","f1ef2b45":"code","1f2f1f91":"markdown","7e98ed70":"markdown","9ef088ea":"markdown","98c4f249":"markdown","06ca7e05":"markdown","d2b34721":"markdown","81c87fb4":"markdown","afceab2b":"markdown","bad9a7d7":"markdown","60118cd9":"markdown"},"source":{"ae726eb1":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib\n\nimport warnings\nwarnings.filterwarnings('ignore')","e687ba55":"gender = pd.read_csv('..\/input\/2020-tokyo-paralympics\/entries-by-discipline.csv')\nathletes = pd.read_csv('..\/input\/2020-tokyo-paralympics\/paralympic-athletes.csv')\nteams = pd.read_csv('..\/input\/2020-tokyo-paralympics\/paralympic-teams.csv')\ncoaches = pd.read_csv('..\/input\/2020-tokyo-paralympics\/paralympic-coaches.csv')\nmedals = pd.read_csv('..\/input\/2020-tokyo-paralympics\/paralympic-medal-tally.csv')","613176d2":"# gender.head(10)\n#gender.shape #(23, 4)\ngender.info()\ngender.describe().T\n\ngender.sort_values(by='Total',inplace=True)\n\n# Gender barplot\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,6), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#ffd514','#ff355d'])\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = gender.plot(x='Discipline',y=['M','F'],kind='barh',ax=ax0,zorder=2,width=0.8) ##plotttt\nax0_sns.set_xlabel('Genders Count',fontsize=4, weight='bold',)\nax0_sns.set_ylabel('Discipline',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\nax0_sns.legend(['Male', 'Female'], ncol=2, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1.01, 1.02), loc='upper right')\n\nfor p in ax0_sns.patches:\n            value = f'{p.get_width():.0f}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 15\n                y = p.get_y() + p.get_height() \/ 2 \n                ax0.text(x, y, value, ha='left', va='center', fontsize=2.3, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0_sns.text(Xend,Yend+0.9, f'Gender Plot', fontsize=6, weight='bold',ha='right')\nax0.text(Xend, Yend+0.6,f'Entries by Discipline and number of females and males taking part in it',fontsize=3,ha='right')\nax0_sns.text(Xend+215,Yend, f'Ankit kalauni', fontsize=6, weight='bold',ha='right',color='w',alpha=0) #ignore this line if you reading this\n\n#ax0.get_xaxis().set_m8ajor_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","4da6d21f":"# athletes.head(10)\n#athletes.shape #(4527, 7)\n# athletes.info()\n# athletes.describe().T\n# athletes.sort_values(by='Total',inplace=True)\ny = athletes.Country.value_counts().index\nx = athletes.Country.value_counts().values\n\n# Athletes barplot with Discipline\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,28), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#ff355d']*1200)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = sns.barplot(data=athletes,y=y,x=x,zorder=2)\nax0_sns.set_xlabel('No of Athletes',fontsize=4, weight='bold')\nax0_sns.set_ylabel('Countries',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\n# ax0_sns.legend(ncol=4, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1.022, 1.005), loc='upper right')\n\nfor p in ax0_sns.patches:\n            value = f'{p.get_width():.0f}'\n            x = p.get_x() + p.get_width() + 10\n            y = p.get_y() + p.get_height() \/ 2 \n            ax0.text(x, y, value, ha='left', va='center', fontsize=3, \n                    bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\n\n# plt.title(f'Athletes Plot',fontdict=dict(fontsize=6,weight='bold',horizontalalignment= 'right'),loc='right')\n\nax0_sns.text(400,45.4, f'Ankit kalauni',alpha=0.01, fontsize=6, weight='bold',ha='right',color='w') #ignore this line if you reading this\n\n\n\nax0_sns.text(262,-1.5, f'Athletes Plot', fontsize=6, weight='bold',ha='right')\nax0.text(262,-1,f'Contains details about the participating Athletes',fontsize=3,ha='right')\n#ax0.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","545620fa":"# teams.head(20)\nteams.describe().T \nteams.info()\n\ny = teams.Sport.value_counts().index\nx = teams.Sport.value_counts().values\n\n# Teams barplot\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,3), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#ff355d']*1200)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = sns.barplot(data=teams,y=y,x=x,zorder=2)\nax0_sns.set_xlabel('No of Teams Country',fontsize=4, weight='bold')\nax0_sns.set_ylabel('Discipline',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\n# ax0_sns.legend(['Country Count'], ncol=2, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1.022, 1.035), loc='upper right')\n\nfor p in ax0_sns.patches:\n            value = f'{p.get_width():.0f}'\n            x = p.get_x() + p.get_width() + 1\n            y = p.get_y() + p.get_height() \/ 2 \n            ax0.text(x, y, value, ha='left', va='center', fontsize=4, \n                    bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\n\n# plt.title(f'Teams Plot',fontdict=dict(fontsize=6,weight='bold',horizontalalignment= 'right'),loc='right')\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0_sns.text(Xend+30,Yend, f'Ankit kalauni',alpha=0.03, fontsize=6, weight='bold',ha='right',color='w') #ignore this line if you reading this\n\n\nax0_sns.text(Xend,Yend-0.3, f'Teams Plot', fontsize=6, weight='bold',ha='right')\nax0.text(Xend,Yend-0.1,f'Contains the details of all the Teams(Country, event, Discipline, Event)',fontsize=3,ha='right')\n#ax0.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","f1ef2b45":"medals.tail(10)\n\nmedals = medals.sort_index(ascending=False)\n\nmedals.describe()\n\nmedals.info()\n\n# Medals barplot\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,30), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#CD7F32','#C0C0C0','#FFD700'])\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = medals.plot(x='Country',y=['Bronze','Silver','Gold'],kind='barh',ax=ax0,zorder=2,width=0.8) ##plotttt\nax0_sns.set_xlabel('Medals Count',fontsize=4, weight='bold',)\nax0_sns.set_ylabel('Team Name',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\nax0_sns.legend(['Bronze','Silver','Gold'], ncol=3, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1, 1.005), loc='upper right')\n\nfor p in ax0_sns.patches:\n        value = f'{p.get_width():.0f}'\n        if value == '0':\n            pass\n        else:\n            x = p.get_x() + p.get_width() + 1\n            y = p.get_y() + p.get_height() \/ 2\n            ax0.text(x, y, value, ha='left', va='center', fontsize=3)\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0_sns.text(Xend-1, Yend+0.71, f'Medals Plot', fontsize=6, weight='bold',ha='right')\nax0.text(Xend-1, Yend+0.48,f'Medals Ranking',fontsize=4,ha='right')\nax0_sns.text(Xend+20,Yend, f'Ankit Kalauni',alpha=0.03, fontsize=6, weight='bold',ha='right',color='w') #ignore this line if you reading this\n\n#ax0.get_xaxis().set_m8ajor_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","1f2f1f91":"# **Table of content**\n* [1. Gender EDA](#1)\n* [2. Athletes EDA](#2)\n* [3. Teams EDA](#3)\n* [4. Medals EDA](#4)\n* [5. Work in progress](#5)\n<a id='0'><\/a>","7e98ed70":"# **Task**\n<h4>EDA on Countries participated, disciplines, events & coaches.<\/h4>\n\n**Check out my other notebook:** [Tokyo Olympic 2021 (Clean EDA)](https:\/\/www.kaggle.com\/ankitkalauni\/tokyo-olympic-2021-clean-edahttps:\/\/www.kaggle.com\/ankitkalauni\/tokyo-olympic-2021-clean-eda)","9ef088ea":"# **3. Teams EDA**\n* There are 57 Countries in the `Swimming` Discipline. which is the maximum number of country participation.\n* There are 8 Countries in `Wheelchair Rugby` & `Football 5-a-side` Discipline. which is the minimum number of team country participation.\n\n<a id='3'><\/a>\n* [Jump top](#0)","98c4f249":"# **Details**\n\nThis a collection of data from the Tokyo Paralympics Games 2020 held at Tokyo, Japan during 24-Aug-2021 to 5-Sep-2021.\n`4426 Athletes`, `212 Teams` from `162 Countries\/NPCs` participated and competed against each other.\n\n# **Dataset Description**\nEach dataset file describes:\n\n`NPCs-list.csv` : National Paralympic Committee's (NPCs) names and their corresponding short codes.\n\n`entries-by-discipline.csv`: Different Sporting events at the Paralympics and their participant's gender counts.\n\n`paralympic-athletes.csv` : List of participating athletes at the Tokyo Paralympics , their representing country and their sport.\n\n`paralympic-coaches.csv` : List of Coaches of the participating teams (Team Sports only).\n\n`paralympic-medal-tally`.csv : Final Medal Tally of the Participating Countries\/NPCs.\n\n`paralympic-medals.csv` : List of Winning Athlete's\/Team's details.\n\n`paralympic-teams.csv` : List of participating Teams of different sports.","06ca7e05":"<div style=\"color:black; display:fill; border-radius:5px;background-color:#ffd514;font-size:160%;font-family:sans-serif;letter-spacing:0.5px\">If you like the work please upvote (\u1557 \u0361\ud83d\udc41\u202f\u035c\u0296 \u0361\ud83d\udc41)\u1557<\/div>","d2b34721":"# **4. Medals EDA**\n**Medals Ranking:**\n\n1. `People's Republic of china`: Gold 96, Silver 60, Bronze 51\n2. `Great Britan`: Gold 96, Silver 60, Bronze 51\n3. `Untied States of America`: Gold 37, Silver 36, Bronze 31\n\n\n24.`India`: Gold 5, Silver 8, Bronze 6\n\n\n<a id='4'><\/a>\n* [Jump top](#0)","81c87fb4":"# **2. Athletes EDA**\n* The maximum number of Athletes is from the `Japan`.\n* The minimum number of Athletes is from `Lebanon`, along with 26 more countries where only 1 Athletes participated.\n<a id='2'><\/a>\n* [Jump top](#0)","afceab2b":"# **5. Work in progress**\n\n<a id='5'><\/a>\n* [Jump top](#0)","bad9a7d7":"# **1. Gender EDA**\n* `Footaball 5-a-side` has no Female Participants.\n* Max number of participants is in the `Athletics` Discipline. **`Male: 653 & Female: 489`**\n* The least number of participants is in the `Taekwondo` Discipline. **`Male: 36 & Female: 35`**\n* `Wheelchair` Rugby has only **4 Female Participants**.\n\n<a id='1'><\/a>\n* [Jump top](#0)","60118cd9":"![olympics](https:\/\/wecapable.com\/wp-content\/uploads\/2021\/01\/paralympics-wheelchair-race-wecapable.jpg)"}}