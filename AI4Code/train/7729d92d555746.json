{"cell_type":{"7aba052a":"code","16bdc65d":"code","d372db88":"code","faa47368":"code","eb1076ec":"code","b974a4c2":"code","de441ced":"code","e52b05ca":"code","d19ab6ac":"code","1ed87075":"code","ce120e22":"code","8a923d97":"code","76c76adc":"code","8f0a290b":"code","fb0069f3":"code","37e4553c":"code","294018b3":"code","4931293e":"code","409ba9e8":"code","cbe758d9":"code","2a88e25a":"code","15c638e0":"code","ea85ef25":"code","9c343982":"code","b129787b":"code","b87c5c38":"code","538fb8b1":"code","38112edc":"code","f5cb1715":"code","eb8da53a":"code","37fbb8d3":"code","b3590fa9":"code","096f8535":"code","03a3dd98":"code","68fb1cc4":"code","85848229":"code","671f2b2b":"code","1c4ae7c6":"code","e1f3b2f0":"code","d0066b94":"code","6408bffe":"code","867ce3f0":"code","ce7db6c3":"code","f79ebc15":"code","02d1902e":"code","861774ac":"code","fba8ac6f":"markdown","51a21f1b":"markdown","9748e5c1":"markdown","184ce171":"markdown"},"source":{"7aba052a":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR","16bdc65d":"import matplotlib.pyplot as plt\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import KFold","d372db88":"train = pd.read_csv('..\/input\/train.csv')\ntrain = train[['Store','Dept','Date','Weekly_Sales','IsHoliday']]","faa47368":"test = pd.read_csv('..\/input\/test.csv')","eb1076ec":"train.head()","b974a4c2":"test.head()","de441ced":"feature = pd.read_csv('..\/input\/features.csv')","e52b05ca":"feature.head()","d19ab6ac":"## we have to merge train already has the isHoliday so we have to drop the isHoliday in feature\nfeature = feature.drop('IsHoliday',1)\n\nstore = pd.read_csv('..\/input\/stores.csv',header=0)","1ed87075":"store.head()","ce120e22":"## merging the train feature and the store\n\ndataset=train.merge(store,how='left').merge(feature,how='left')","8a923d97":"dataset.head()","76c76adc":"def scatter(dataset,column):\n    plt.figure()\n    plt.scatter(dataset[column],dataset['Weekly_Sales'])\n    plt.ylabel('WEEKLY SALES')\n    plt.xlabel(column)\n    ","8f0a290b":"scatter(dataset, 'Fuel_Price')\n","fb0069f3":"def plot(dataset,column):\n    plt.figure()\n    plt.plot(dataset[column],dataset['Weekly_Sales'])\n    plt.ylabel('WEEKLY SALES')\n    plt.xlabel(column)\n    ","37e4553c":"plot(dataset, 'Fuel_Price')","294018b3":"plt.plot(dataset['Weekly_Sales'],dataset['Date'])","4931293e":"## can plot the weekly sales based on the DEPT and The Store\n\ndef feature_based_result_plot(feture1,feture2):\n    \n    ## we plot based every two combination related to weekly sales\n    ## not everything is compltable\n    for x,data in dataset.groupby([feture1,feture2]):\n        plt.title(x)\n        plt.scatter(range(len(data)),group['Weekly_Sales'])\n        plt.show()\n        \n        ","409ba9e8":"#feature_based_result_plot('Store','Dept')","cbe758d9":"## Whats the problm using classification???\n## cause these are continuous value","2a88e25a":"# Data Manupulation\nd={True:1,False:0}","15c638e0":"dataset['IsHoliday']=dataset['IsHoliday'].map(d)","ea85ef25":"dataset.head()","9c343982":"######## very useful\ndataset = pd.get_dummies(dataset, columns=[\"Type\"])","b129787b":"## ok now the markdown is is anothre pain \n## huge ammount of missing data\ndataset[['MarkDown1','MarkDown2','MarkDown3','MarkDown4', 'MarkDown5']] = dataset[['MarkDown1','MarkDown2','MarkDown3','MarkDown4','MarkDown5']].fillna(0)","b87c5c38":"dataset.head()","538fb8b1":"dataset['Month']=pd.to_datetime(dataset['Date']).dt.month","38112edc":"dataset.head()","f5cb1715":"#we gonna drop the Date column its useless now\ndataset = dataset.drop('Date',1)\n\nX = dataset.drop('Weekly_Sales',1)\nY= dataset['Weekly_Sales']","eb8da53a":"X=np.array(X)\nY=np.array(Y)","37fbb8d3":"X_train,X_test,y_train,y_test = train_test_split(X,Y,test_size=0.3)\n## now prepare the test dataset\n","b3590fa9":"dataset_test=test.merge(store,how='left').merge(feature,how='left')","096f8535":"d={True:1,False:0}\ndataset_test['IsHoliday']=dataset_test['IsHoliday'].map(d)","03a3dd98":"dataset_test.head()","68fb1cc4":"dataset_test = pd.get_dummies(dataset_test, columns=[\"Type\"])","85848229":"dataset_test[['MarkDown1','MarkDown2','MarkDown3','MarkDown4', 'MarkDown5']] = dataset_test[['MarkDown1','MarkDown2','MarkDown3','MarkDown4','MarkDown5']].fillna(0)","671f2b2b":"dataset_test['Month']=pd.to_datetime(dataset_test['Date']).dt.month","1c4ae7c6":"dataset_test = dataset_test.drop('Date',1)","e1f3b2f0":"dataset_test.head()","d0066b94":"## this dataset is the all the value except the weekly_sale just train the model and predict the y value with this","6408bffe":"test=np.array(dataset_test)","867ce3f0":"## thats it now apply regression algorithm\nfrom sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor","ce7db6c3":"ML=[]\nM=['SVR','KNeighborsRegressor','MLPRegressor','LinearRegression','RandomForestRegressor']\nZ=[SVR(),KNeighborsRegressor(),MLPRegressor(),LinearRegression(),RandomForestRegressor()]\n","f79ebc15":"for model in Z:\n    model.fit(X_train,y_train)      ## training the model this could take a little time\n    accuracy=model.score(X_test,y_test)    ## comparing result with the test data set\n    ML.append(accuracy)   ## saving the accuracy\n\n","02d1902e":"d={'Accuracy':ML,'Algorithm':M}\ndf1=pd.DataFrame(d)","861774ac":"df1","fba8ac6f":"# This is may be the best feature engineering When you have multiple parameter like you have type A,B,C,D you can do two things either you map them but the best thing is if you have more than two you can convert to the columns like A,B and C columns only  the tru colums have 1 other will have 0\n# very useful","51a21f1b":"  ###                              <h3>train.csv<\/h3>\n<ul>\n    <li>Store - the store number <\/li>\n    <li>Dept - the department number <\/li>\n    <li>Date - the week<\/li>\n    <li>Weekly_Sales -  sales for the given department in the given store<\/li>\n    <li>IsHoliday - whether the week is a special holiday week<\/li>\n    \n<\/ul>\n\n  ###                              <h3>test.csv<\/h3>\n<ul>\n    <li>Store - the store number <\/li>\n    <li>Dept - the department number <\/li>\n    <li>Date - the week<\/li>\n    \n   <li>IsHoliday - whether the week is a special holiday week<\/li>\n    \n<\/ul>\n\n## you have to predict the weekly_Sales\n\n\n###                                    <h3>features.csv<\/h3>\n\nThis file contains additional data related to the store, department, and regional activity for the given dates. It contains the following fields:\n<ul>\n    <li>Store - the store number<\/li>\n    <li>Date - the week<\/li>\n    <li>Temperature - average temperature in the region<\/li>\n    <li>Fuel_Price - cost of fuel in the region<\/li>\n    <li>MarkDown1-5 - anonymized data related to promotional markdowns that Walmart is running. MarkDown data is only available after Nov 2011, and is not available for all stores all the time. Any missing value is marked with an NA.<\/li>\n    <li>CPI - the consumer price index<\/li>\n    <li>Unemployment - the unemployment rate<\/li>\n    <li>IsHoliday - whether the week is a special holiday week<\/li>\n<\/ul>","9748e5c1":"train has very little information feature.csv has more information we have to merge the feature and the train","184ce171":"### now the date is another thing that the ML cant handle. the day we dont care harder to process but we can take the month .so we can extract the month\n### lot of ways to extract we can change it to a time frame and extract the month store the column dataset['Month'] then get rid of the date"}}