{"cell_type":{"6b764234":"code","98faad81":"code","a37d1846":"code","4017d694":"code","d59cf572":"code","125a07a1":"code","f4694a18":"code","884b3d69":"code","49a99eb3":"code","f48bcbe8":"code","6c911f22":"code","a5d0579b":"code","678a8419":"code","64502c3c":"code","9aae6a53":"code","4f9a9d73":"code","2fab17b7":"code","5e9af574":"code","dfe27683":"code","92dbf175":"code","27169770":"code","8364fdfb":"code","5d7e5dcf":"code","7e449769":"code","576e2a7a":"code","eb34733b":"code","77a9b108":"code","2df9c011":"markdown","13216f67":"markdown","bafc76c3":"markdown","47557f06":"markdown"},"source":{"6b764234":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfrom sklearn import *\nimport datetime\nimport nltk\n\n","98faad81":"train = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nsubmission = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_categories = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')","a37d1846":"item_categories.head()","4017d694":"train['date'] = pd.to_datetime(train['date'],format = '%d.%m.%Y')\ntrain['month'] = train['date'].dt.month\ntrain['year'] = train['date'].dt.year\ntrain = train.drop(['date'],axis=1)\n","d59cf572":"train = train.drop(['item_price'],axis=1)","125a07a1":"\ntrain = train.groupby([c for c in train.columns if c not in ['item_cnt_day']],as_index=False)[['item_cnt_day']].sum()","f4694a18":"train = train.rename(columns = {'item_cnt_monnth':'item_cnt_month'})","884b3d69":"train.head()","49a99eb3":"shop_item_mean = train[['shop_id','item_id','item_cnt_month']].groupby(['shop_id','item_id'],as_index=False)['item_cnt_month'].mean()\nshop_item_mean = shop_item_mean.rename(columns={'item_cnt_month':'item_cnt_month_mean'})","f48bcbe8":"train = pd.merge(train,shop_item_mean,how='left',on=['shop_id','item_id'])","6c911f22":"train.head()","a5d0579b":"shop_prev_month = train[train['date_block_num']==33][['shop_id','item_id','item_cnt_month']]\nshop_prev_month = shop_prev_month.rename(columns={'item_cnt_month':'item_cnt_prev_month'})\n\nshop_prev_month.head()","678a8419":"train = pd.merge(train,shop_prev_month,how='left',on=['shop_id','item_id']).fillna(0)","64502c3c":"train = pd.merge(train,items,how='left',on=['item_id'])\n\ntrain = pd.merge(train,item_categories,how='left',on=['item_category_id'])\n\ntrain = pd.merge(train,shops,how='left',on=['shop_id'])","9aae6a53":"train.head()","4f9a9d73":"test['month'] = 11\ntest['year'] = 2015\ntest['date_block_num'] = 34","2fab17b7":"test = pd.merge(test,shop_item_mean,how='left',on=['shop_id','item_id']).fillna(0.)\ntest = pd.merge(test,shop_prev_month,how='left',on=['shop_id','item_id']).fillna(0.)\n\n\ntest = pd.merge(test,items,how='left',on=['item_id'])\n\ntest = pd.merge(test,item_categories,how='left',on=['item_category_id'])\n\ntest = pd.merge(test,shops,how='left',on=['shop_id'])\n\ntest['item_cnt_month'] = 0.\ntest.head()","5e9af574":"for c in ['item_name','shop_name','item_category_name']:\n    \n    lbl = sklearn.preprocessing.LabelEncoder()\n    lbl.fit(list(train[c].unique())+list(test[c].unique()))\n    train[c] = lbl.transform(train[c].astype(str))\n    test[c] = lbl.transform(test[c].astype(str))\n    print(c)\n    \n    ","dfe27683":"train.head()","92dbf175":"# prepare date\ncol = [c for c in train.columns if c not in ['item_cnt_month']]\n\nx1 =  train[train['date_block_num']<33]\ny1 = np.log1p(x1['item_cnt_month'].clip(0.,20.))\nx1 = x1[col]\n\nx2 =  train[train['date_block_num']==33]\ny2 = np.log1p(x2['item_cnt_month'].clip(0.,20.))\nx2 = x2[col]","27169770":"reg = ensemble.ExtraTreesRegressor(n_estimators=30,n_jobs=-1,max_depth=15,random_state=18)","8364fdfb":"reg.fit(x1,y1)\n","5d7e5dcf":"reg.fit(train[col],train['item_cnt_month'].clip(0.,20.))","7e449769":"test['item_cnt_month'] = reg.predict(test[col].clip(0.,20.))","576e2a7a":"test[['ID','item_cnt_month']].to_csv('submission.csv',index=False)","eb34733b":"test['item_cnt_month'] = np.expm1(test['item_cnt_month'])","77a9b108":"test[['ID','item_cnt_month']].to_csv('final_submission.csv',index=False)","2df9c011":"# Test Set","13216f67":"# Preparing Data","bafc76c3":"# Label Encoding","47557f06":"# EXIT"}}