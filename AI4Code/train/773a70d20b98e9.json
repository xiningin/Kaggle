{"cell_type":{"5c989ca2":"code","ffdbe9fc":"code","c6c2473d":"code","812fda59":"code","abcdf9cc":"code","58fb97cb":"code","65fa9fc1":"code","57129360":"code","d322209f":"code","cf103bab":"code","47c63d10":"code","6224e3ab":"code","89e7bba8":"code","1a83e40c":"markdown","1eb676d9":"markdown","749328a5":"markdown"},"source":{"5c989ca2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ffdbe9fc":"#Import related libaries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px","c6c2473d":"#Read data \ndf = pd.read_csv(\"..\/input\/covid19s-impact-on-airport-traffic\/covid_impact_on_airport_traffic.csv\")","812fda59":"#Show first five row of data\ndf.head()","abcdf9cc":"# Information about data\ndf.info()","58fb97cb":"# Check the null values\ndf.isnull().sum()","65fa9fc1":"df['Country'].unique()","57129360":"df1 = df.groupby(\"Country\")['PercentOfBaseline'].mean().sort_values(ascending = False).reset_index()\nsns.set(font_scale = 1.2)\nplt.figure(figsize = [10,7])\nsns.barplot(data = df1, x=  'Country', y = 'PercentOfBaseline',palette = 'GnBu_r')\nplt.ylabel('Percent of baseline')","d322209f":"df1 = df.groupby(\"City\")['PercentOfBaseline'].mean().sort_values(ascending = False).reset_index()\nsns.set(font_scale = 1.2)\nplt.figure(figsize = [10,10])\nsns.barplot(data = df1, x = 'PercentOfBaseline', y ='City',palette = 'GnBu')\nplt.xlabel(\"Percent of baseline\")","cf103bab":"df1 = df.groupby(\"State\")['PercentOfBaseline'].mean().sort_values(ascending = False).reset_index()\nsns.set(font_scale = 1.2)\nplt.figure(figsize = [10,10])\nsns.barplot(data = df1, x = 'PercentOfBaseline', y = 'State',palette = 'Greens')\nplt.xlabel(\"Percent of baseline\")","47c63d10":"df1 = df.groupby(\"AirportName\")['PercentOfBaseline'].mean().sort_values(ascending = False).reset_index()\nsns.set(font_scale =1.2)\nplt.figure(figsize = [10,10])\nsns.barplot(data = df1, x = 'PercentOfBaseline', y = 'AirportName',palette = 'crest')\nplt.xlabel('Percent of baseline')\nplt.ylabel(\"Airport name\")","6224e3ab":"df[\"lon\"] = df.Centroid.apply(lambda x: x.split(\" \")[0].replace(\"POINT(\",\" \"))\ndf[\"lat\"] = df.Centroid.apply(lambda x: x.split(\" \")[1].replace(\")\",\" \"))","89e7bba8":"# Map\ndf1 = df.groupby([\"Country\",\"City\",'lat','lon'])['PercentOfBaseline'].mean().sort_values(ascending = False).reset_index()\nfig = px.scatter_geo(df1,\n                     lat='lat',\n                     lon='lon',\n                     hover_name=\"Country\",\n                     color = 'Country',\n                     hover_data = ['PercentOfBaseline',\"City\"],\n                     labels = {\"PercentOfBaseline\":\"Percent of Baseline\"}\n                     \n                    )\n\nfig.update_geos(showocean = True,\n                oceancolor = 'LightCyan',\n                lakecolor = 'LightSteelBlue',\n                showlakes = True,\n               \n               )\nfig.show()","1a83e40c":"# **<font color = DarkBlue>Thank you for reading!<\/font>**","1eb676d9":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","749328a5":"[Link to My Kaggle](http:\/\/www.kaggle.com\/carriech)"}}