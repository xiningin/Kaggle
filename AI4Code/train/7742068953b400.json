{"cell_type":{"27f39cd7":"code","bab389a6":"code","cfc8fd95":"code","3646e0f6":"code","84d97fe4":"code","0c174cdd":"code","0218fb2b":"code","a9ddbdcb":"code","2aff5481":"code","e0ed77f3":"code","83e802e6":"code","aa9c82f0":"code","9061aecb":"code","b1d80cf8":"code","1895b482":"code","22268920":"code","9213301b":"code","f4d9db22":"code","c22fb279":"code","3a3daea8":"code","cb223594":"code","f94f6c66":"code","d60a284c":"code","a90c4dbd":"code","9e7e9b5d":"code","8fb8168f":"code","e7934098":"code","0c8a1b44":"code","ef7df5d0":"code","81aee02c":"code","940ed114":"code","d2133abc":"code","61b3b1f3":"code","0c4fb542":"code","ac48d1d1":"code","c98b890e":"code","6d3604b1":"code","7f883822":"code","b3f39ece":"code","3bc8770e":"code","9b978cc4":"code","71e44d79":"code","264d14ea":"code","33b9d19c":"code","86689f69":"code","621a3ffc":"code","e53b925c":"code","92239185":"code","d4676155":"code","f5a671f2":"code","00e9d004":"code","52a2e620":"code","69fff702":"code","6fb5654d":"code","3e3c1bbf":"code","3f71526e":"code","eb75aa91":"code","e42319fa":"code","eb9a8549":"code","5e7f58f7":"code","f1047dbb":"code","79ae685f":"code","a49ac5c7":"code","5f80bd71":"code","5b10ce40":"code","315a2d5a":"code","d8e93816":"code","63946f7c":"code","3f87701c":"code","9f7e2b92":"code","472304cc":"code","d6fb0aa2":"code","6412b47c":"code","ef86c131":"code","08159af5":"code","7df18831":"code","9b65ae08":"code","6cbcc9db":"code","b7cbf675":"code","799bc7dc":"code","b00be0fe":"code","11d9d773":"code","e18f6d32":"code","a3c22cfc":"code","cc75fbd1":"code","4a41771b":"code","cb7ce71d":"code","02c95447":"code","c900b998":"code","3ce58e4e":"code","6bed35e5":"code","6a096bd4":"code","e167ea11":"code","d2bc7a2a":"code","d6784ce1":"code","208857a6":"code","6c65f03f":"code","ec737581":"code","1bbb69eb":"code","152b1bee":"code","793b13a0":"code","ec24be9b":"code","34d62130":"code","5dd33d67":"code","c96b51b2":"code","38b7c4b6":"code","2952d797":"code","e95c1ccc":"code","619e4510":"code","95fa142a":"code","a20813d0":"code","143bfe87":"code","a5eb9808":"code","13e9304f":"code","8b22cac5":"code","ef494804":"code","fce3abfd":"code","e4e19405":"code","c4c8116d":"code","ac6d87c3":"code","0f4d4cb7":"code","d20e1a04":"code","0194eeea":"code","1542c6b9":"code","446ddf47":"code","12f1bc26":"code","69121728":"code","177946e8":"code","4c1dd47a":"code","8a66907c":"code","e69b4fb8":"code","f44c41d6":"code","9b9ff3ed":"code","96104190":"code","ef1e371a":"code","f61e42db":"code","2777918d":"code","70df8da4":"code","417ab810":"code","5e253bec":"code","d9b2f9b1":"code","2870038d":"code","319d411f":"code","0ff7e19c":"code","e21e791c":"code","007500e5":"code","d3a12d6e":"code","7bbb7774":"code","d8dbe7e3":"code","530edeff":"code","51f5e65c":"code","a9906422":"code","bcc99e11":"code","60c4f5d3":"code","32d7a01f":"code","40e71f09":"code","ecd5d4fd":"code","92476e56":"markdown","d2d23a68":"markdown","b8cdd997":"markdown","cd733e22":"markdown","1d3e4534":"markdown","d570caea":"markdown","5732e9c7":"markdown","b0a7c46d":"markdown","e572d5e5":"markdown","80c5aa52":"markdown","eb1db4f6":"markdown","f0cbe333":"markdown","ace1c138":"markdown","89a71a8e":"markdown","97512adb":"markdown","7addb2eb":"markdown","7033028d":"markdown","b837daf6":"markdown","e3ba7192":"markdown","fd4b93a6":"markdown","1bc19d87":"markdown","900453af":"markdown","037f8195":"markdown","a98ba499":"markdown","ce2d0ab7":"markdown","81807d53":"markdown","041c87b5":"markdown","9ad11a63":"markdown","aafd00a2":"markdown","acf77dcc":"markdown","6977b055":"markdown","7e397dc7":"markdown","b5c7727f":"markdown"},"source":{"27f39cd7":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfrom mpl_toolkits.mplot3d import Axes3D\nimport statsmodels.api as sm\nimport missingno as msno\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import scale\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom scipy.stats import levene\nfrom scipy.stats import shapiro\nfrom scipy.stats.stats import pearsonr\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn.preprocessing import scale\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\nfrom sklearn import linear_model\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor, GradientBoostingClassifier\nimport xgboost as xgb\nfrom xgboost import XGBRegressor, XGBClassifier\nfrom lightgbm import LGBMRegressor, LGBMClassifier\nfrom catboost import CatBoostRegressor, CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn import tree\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans","bab389a6":"filterwarnings(\"ignore\", category=DeprecationWarning) \nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","cfc8fd95":"CustomerData = pd.read_csv(\"..\/input\/customer-analytics\/Train.csv\")\n# main","3646e0f6":"data = CustomerData.copy()\n# to protect main","84d97fe4":"data.drop(\"ID\",inplace=True,axis=1)","0c174cdd":"data.rename(columns={\"Reached.on.Time_Y.N\":\"On_Time\"},inplace=True)","0218fb2b":"df = data.select_dtypes(include=[\"float64\",\"int64\",\"int32\"])\n# for mathematical analysis, to guarantee even though it is not necessary","a9ddbdcb":"maxCostProduct = data[data[\"Cost_of_the_Product\"] == data[\"Cost_of_the_Product\"].max()]\nmaxPurchases = data[data[\"Prior_purchases\"] == data[\"Prior_purchases\"].max()]\nmaxWeight = data[data[\"Weight_in_gms\"] == data[\"Weight_in_gms\"].max()]","2aff5481":"minCostProduct = data[data[\"Cost_of_the_Product\"] == data[\"Cost_of_the_Product\"].min()]\nminPurchases = data[data[\"Prior_purchases\"] == data[\"Prior_purchases\"].min()]\nminWeight = data[data[\"Weight_in_gms\"] == data[\"Weight_in_gms\"].min()]","e0ed77f3":"print(data.head())","83e802e6":"print(data.shape)","aa9c82f0":"print(data.columns)","9061aecb":"print(data.info())","b1d80cf8":"print(data.describe().T)","1895b482":"print(data.corr())","22268920":"print(data.cov())","9213301b":"print(data.groupby([\"On_Time\"])[\"Prior_purchases\"].mean())","f4d9db22":"print(data.groupby([\"On_Time\"])[\"Cost_of_the_Product\"].mean())","c22fb279":"print(data.groupby([\"On_Time\"])[\"Customer_rating\"].mean())","3a3daea8":"print(data.groupby([\"On_Time\"])[\"Discount_offered\"].mean())","cb223594":"print(data.groupby([\"On_Time\"])[\"Weight_in_gms\"].mean())","f94f6c66":"print(data.groupby([\"On_Time\",\"Mode_of_Shipment\"])[\"Prior_purchases\"].mean())","d60a284c":"print(data.groupby([\"On_Time\",\"Mode_of_Shipment\"])[\"Cost_of_the_Product\"].mean())","a90c4dbd":"print(data.groupby([\"On_Time\",\"Mode_of_Shipment\"])[\"Customer_rating\"].mean())","9e7e9b5d":"print(data.groupby([\"On_Time\",\"Mode_of_Shipment\"])[\"Discount_offered\"].mean())","8fb8168f":"print(data.groupby([\"On_Time\",\"Mode_of_Shipment\"])[\"Weight_in_gms\"].mean())","e7934098":"print(data.groupby([\"On_Time\",\"Warehouse_block\"])[\"Prior_purchases\"].mean())","0c8a1b44":"print(data.groupby([\"On_Time\",\"Warehouse_block\"])[\"Cost_of_the_Product\"].mean())","ef7df5d0":"print(data.groupby([\"On_Time\",\"Warehouse_block\"])[\"Customer_rating\"].mean())","81aee02c":"print(data.groupby([\"On_Time\",\"Warehouse_block\"])[\"Discount_offered\"].mean())","940ed114":"print(data.groupby([\"On_Time\",\"Warehouse_block\"])[\"Weight_in_gms\"].mean())","d2133abc":"maxWeight[\"On_Time\"].value_counts()","61b3b1f3":"maxCostProduct[\"On_Time\"].value_counts()","0c4fb542":"maxPurchases[\"On_Time\"].value_counts()","ac48d1d1":"minWeight[\"On_Time\"].value_counts()","c98b890e":"minCostProduct[\"On_Time\"].value_counts()","6d3604b1":"minPurchases[\"On_Time\"].value_counts()","7f883822":"print(data[\"On_Time\"].value_counts())","b3f39ece":"print(data[\"Warehouse_block\"].value_counts())","3bc8770e":"print(data[\"Mode_of_Shipment\"].value_counts())","9b978cc4":"print(data.duplicated().sum())","71e44d79":"print(data.isnull().all())","264d14ea":"print(data.isnull().sum())","33b9d19c":"corrPearson = data.corr(method=\"pearson\")","86689f69":"corrSpearman = data.corr(method=\"spearman\")","621a3ffc":"figure = plt.figure(figsize=(15,8))\nsns.heatmap(corrPearson,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"red\")\nplt.show()","e53b925c":"figure = plt.figure(figsize=(15,8))\nsns.heatmap(corrSpearman,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"red\")\nplt.show()","92239185":"print(data[\"On_Time\"].corr(data[\"Customer_rating\"],method=\"pearson\"))\nprint(data[\"On_Time\"].corr(data[\"Customer_rating\"],method=\"spearman\"))","d4676155":"print(data[\"On_Time\"].corr(data[\"Cost_of_the_Product\"],method=\"pearson\"))\nprint(data[\"On_Time\"].corr(data[\"Cost_of_the_Product\"],method=\"spearman\"))","f5a671f2":"covariance = data.cov()","00e9d004":"figure = plt.figure(figsize=(15,8))\nsns.heatmap(corrSpearman,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"red\")\nplt.show()","52a2e620":"for i in df.columns:\n    print(i)\n    print(\"---\"*5)\n    print(\"%.4f - %.4f\" % shapiro(data[i]))\n    print(\"---\"*15)","69fff702":"print(\"%.4f - %.4f\" % levene(data[\"Cost_of_the_Product\"],data[\"Customer_rating\"],\n                            data[\"Discount_offered\"],data[\"On_Time\"]))","6fb5654d":"print(\"%.4f - %.4f\" % levene(data[\"Cost_of_the_Product\"],data[\"On_Time\"]))","3e3c1bbf":"print(\"%.4f - %.4f\" % levene(data[\"Customer_rating\"],data[\"On_Time\"]))","3f71526e":"print(\"%.4f - %.4f\" % levene(data[\"Discount_offered\"],data[\"On_Time\"]))","eb75aa91":"encode = LabelEncoder()","e42319fa":"objectcolumns = data.select_dtypes(include=[\"object\"])\nprint(objectcolumns.columns)","eb9a8549":"for a in objectcolumns:\n    data[a] = encode.fit_transform(data[a])","5e7f58f7":"print(data.info())","f1047dbb":"DataForA = data.copy()\n# to protect main","79ae685f":"clf = LocalOutlierFactor()","a49ac5c7":"clf.fit_predict(DataForA)","5f80bd71":"score = clf.negative_outlier_factor_","5b10ce40":"scoreSorted = np.sort(score)","315a2d5a":"print(scoreSorted[0:50])\n# checking outlier, look where the biggest jump took place\n# we can identify 6.index as point","d8e93816":"point = scoreSorted[6]\nprint(point)\nprint(\"---\"*10)\nprint(DataForA[score == point])","63946f7c":"outliers = score < point\nprint(data[outliers])\nprint(\"---\"*20)\nprint(data[outliers].index)","3f87701c":"outliersIndexList = [data[outliers].index]\nprint(type(outliersIndexList))","9f7e2b92":"for d in outliersIndexList:\n    data.drop(index=d,inplace=True)","472304cc":"dataVis = data.copy()\n# to protect main","d6fb0aa2":"dataVis[\"Customer_rating\"] = pd.Categorical(dataVis[\"Customer_rating\"])\ndataVis[\"Product_importance\"] = pd.Categorical(dataVis[\"Product_importance\"])\ndataVis[\"Gender\"] = pd.Categorical(dataVis[\"Gender\"])\ndataVis[\"On_Time\"] = pd.Categorical(dataVis[\"On_Time\"])\ndataVis[\"Warehouse_block\"] = pd.Categorical(dataVis[\"Warehouse_block\"])\ndataVis[\"Mode_of_Shipment\"] = pd.Categorical(dataVis[\"Mode_of_Shipment\"])\ndataVis[\"Customer_care_calls\"] = pd.Categorical(dataVis[\"Customer_care_calls\"])","6412b47c":"data.hist(figsize=(15,11))\nplt.show()","ef86c131":"figure = plt.figure(figsize=(20,20))\nsns.pairplot(dataVis,hue=\"On_Time\",vars=[\"Weight_in_gms\",\"Cost_of_the_Product\",\n                                        \"Discount_offered\"])\nplt.show()","08159af5":"figure = plt.figure(figsize=(15,8))\nsns.scatterplot(x=\"Cost_of_the_Product\",y=\"Discount_offered\",hue=\"On_Time\",style=\"Customer_rating\",\n               data=dataVis)\nplt.show()","7df18831":"figure = plt.figure(figsize=(15,8))\nsns.scatterplot(x=\"Cost_of_the_Product\",y=\"Weight_in_gms\",hue=\"On_Time\",style=\"Customer_rating\",\n               data=dataVis)\nplt.show()","9b65ae08":"figure = plt.figure(figsize=(15,8))\nsns.scatterplot(x=\"On_Time\",y=\"Cost_of_the_Product\",hue=\"Customer_rating\",\n               data=dataVis)\nplt.xticks([0,1])\nplt.show()","6cbcc9db":"figure = plt.figure(figsize=(15,8))\nsns.scatterplot(x=\"On_Time\",y=\"Discount_offered\",hue=\"Customer_rating\",\n               data=dataVis)\nplt.xticks([0,1])\nplt.show()","b7cbf675":"figure = plt.figure(figsize=(15,8))\nsns.scatterplot(x=\"On_Time\",y=\"Weight_in_gms\",hue=\"Customer_rating\",\n               data=dataVis)\nplt.xticks([0,1])\nplt.show()","799bc7dc":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Cost_of_the_Product\",y=\"On_Time\",\n               data=dataVis,color=\"black\",hue=\"Customer_rating\")\nplt.title(\"Customer_rating\")\nplt.legend()\nplt.show()","b00be0fe":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Discount_offered\",y=\"On_Time\",\n               data=dataVis,color=\"black\",hue=\"Customer_rating\")\nplt.title(\"Customer_rating\")\nplt.legend()\nplt.show()","11d9d773":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Weight_in_gms\",y=\"On_Time\",\n               data=dataVis,color=\"black\",hue=\"Customer_rating\")\nplt.title(\"Customer_rating\")\nplt.legend()\nplt.show()","e18f6d32":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Cost_of_the_Product\",y=\"On_Time\",\n               data=dataVis,color=\"red\",hue=\"Warehouse_block\")\nplt.title(\"Warehouse_block\")\nplt.legend()\nplt.show()","a3c22cfc":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Discount_offered\",y=\"On_Time\",\n               data=dataVis,color=\"red\",hue=\"Warehouse_block\")\nplt.title(\"Warehouse_block\")\nplt.legend()\nplt.show()","cc75fbd1":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Weight_in_gms\",y=\"On_Time\",\n               data=dataVis,color=\"red\",hue=\"Warehouse_block\")\nplt.title(\"Warehouse_block\")\nplt.legend()\nplt.show()","4a41771b":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Cost_of_the_Product\",y=\"On_Time\",\n               data=dataVis,color=\"blue\",hue=\"Mode_of_Shipment\")\nplt.title(\"Mode_of_Shipment\")\nplt.legend()\nplt.show()","cb7ce71d":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Discount_offered\",y=\"On_Time\",\n               data=dataVis,color=\"blue\",hue=\"Mode_of_Shipment\")\nplt.title(\"Mode_of_Shipment\")\nplt.legend()\nplt.show()","02c95447":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Weight_in_gms\",y=\"On_Time\",\n               data=dataVis,color=\"blue\",hue=\"Mode_of_Shipment\")\nplt.title(\"Mode_of_Shipment\")\nplt.legend()\nplt.show()","c900b998":"figure = plt.figure(figsize=(15,8))\nsns.lineplot(x=\"Customer_rating\",y=\"Cost_of_the_Product\",hue=\"On_Time\",style=\"Product_importance\",data=dataVis)\nplt.show()","3ce58e4e":"figure = plt.figure(figsize=(15,8))\nsns.lineplot(x=\"Customer_rating\",y=\"Discount_offered\",hue=\"On_Time\",style=\"Product_importance\",data=dataVis)\nplt.show()","6bed35e5":"figure = plt.figure(figsize=(15,8))\nsns.lineplot(x=\"Customer_rating\",y=\"Weight_in_gms\",hue=\"On_Time\",style=\"Product_importance\",data=dataVis)\nplt.show()","6a096bd4":"figure = plt.figure(figsize=(15,8))\nsns.boxplot(x=\"Customer_rating\",y=\"Cost_of_the_Product\",hue=\"On_Time\",color=\"black\",data=dataVis)\nplt.show()","e167ea11":"figure = plt.figure(figsize=(15,8))\nsns.boxplot(x=\"Customer_rating\",y=\"Discount_offered\",hue=\"On_Time\",color=\"black\",data=dataVis)\nplt.show()","d2bc7a2a":"figure = plt.figure(figsize=(15,8))\nsns.boxplot(x=\"Customer_rating\",y=\"Weight_in_gms\",hue=\"On_Time\",color=\"black\",data=dataVis)\nplt.show()","d6784ce1":"figure = plt.figure(figsize=(15,8))\nsns.boxplot(x=\"Customer_rating\",y=\"Cost_of_the_Product\",hue=\"Product_importance\",color=\"black\",data=dataVis)\nplt.legend()\nplt.show()","208857a6":"figure = plt.figure(figsize=(15,8))\nsns.boxplot(x=\"Customer_rating\",y=\"Discount_offered\",hue=\"Product_importance\",color=\"black\",data=dataVis)\nplt.legend()\nplt.show()","6c65f03f":"import statsmodels.stats.api as sms","ec737581":"print(data[\"Customer_rating\"].mode())\nprint(data[\"Customer_rating\"].max())\nprint(data[\"Customer_rating\"].min())\nprint(data[\"Customer_rating\"].mean())\nprint(sms.DescrStatsW(data[\"Customer_rating\"]).tconfint_mean())","1bbb69eb":"def func(x):\n    if x < 2.99:\n        return \"BAD\"\n    else:\n        return \"GOOD\"","152b1bee":"data[\"Customer_rating\"] = data[\"Customer_rating\"].apply(lambda x: func(x))","793b13a0":"print(data[\"Customer_rating\"].value_counts())","ec24be9b":"data[\"Customer_rating\"] = encode.fit_transform(data[\"Customer_rating\"])","34d62130":"print(data[\"Customer_rating\"].value_counts())","5dd33d67":"print(data[\"Discount_offered\"].mode())\nprint(data[\"Discount_offered\"].max())\nprint(data[\"Discount_offered\"].min())\nprint(data[\"Discount_offered\"].mean())\nprint(sms.DescrStatsW(data[\"Discount_offered\"]).tconfint_mean())","c96b51b2":"def funcforD(x):\n    if x < 13.36:\n        return \"LESS\"\n    elif 13.36 < x > 30:\n        return \"NORMAL\"\n    else:\n        return \"TOO MUCH\"","38b7c4b6":"data[\"Discount_offered\"] = data[\"Discount_offered\"].apply(lambda x: funcforD(x))","2952d797":"print(data[\"Discount_offered\"].value_counts())","e95c1ccc":"data[\"Discount_offered\"] = encode.fit_transform(data[\"Discount_offered\"])","619e4510":"print(data[\"Discount_offered\"].value_counts())","95fa142a":"figure = plt.figure(figsize=(15,8))\nsns.boxplot(x=\"Customer_rating\",y=\"Weight_in_gms\",hue=\"Product_importance\",color=\"black\",data=dataVis)\nplt.legend()\nplt.show()","a20813d0":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Product_importance\",y=\"On_Time\",\n               data=data,color=\"green\")\nplt.title(\"Product_importance\")\nplt.legend()\nplt.show()","143bfe87":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Customer_rating\",y=\"On_Time\",\n               data=data,color=\"green\")\nplt.title(\"Customer_rating\")\nplt.legend()\nplt.show()","a5eb9808":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"Mode_of_Shipment\",y=\"On_Time\",\n               data=data,color=\"green\")\nplt.title(\"Mode_of_Shipment\")\nplt.legend()\nplt.show()","13e9304f":"figure = plt.figure(figsize=(15,8))\nsns.histplot(\n    data,\n    x=\"Product_importance\", hue=\"On_Time\",\n    multiple=\"stack\",\n    edgecolor=\".3\",\n    linewidth=.5,\n)\nplt.show()","8b22cac5":"figure = plt.figure(figsize=(15,8))\nsns.histplot(\n    data,\n    x=\"Warehouse_block\", hue=\"On_Time\",\n    multiple=\"stack\",\n    edgecolor=\".3\",\n    linewidth=.5,\n)\nplt.show()","ef494804":"figure = plt.figure(figsize=(20,8))\nsns.distplot(dataVis[dataVis['On_Time'] == 0][\"Customer_rating\"], color='black',label='ON TIME') \nsns.distplot(dataVis[dataVis['On_Time'] == 1][\"Customer_rating\"], color='red',label='NOT ON TIME')\n\nplt.title('On_Time', fontsize=10)\nplt.legend()","fce3abfd":"figure = plt.figure(figsize=(20,8))\nsns.distplot(dataVis[dataVis['On_Time'] == 0][\"Product_importance\"], color='black',label='ON TIME') \nsns.distplot(dataVis[dataVis['On_Time'] == 1][\"Product_importance\"], color='red',label='NOT ON TIME')\n\nplt.title('On_Time', fontsize=10)\nplt.legend()","e4e19405":"figure = plt.figure(figsize=(20,8))\nsns.distplot(dataVis[dataVis['On_Time'] == 0][\"Mode_of_Shipment\"], color='black',label='ON TIME') \nsns.distplot(dataVis[dataVis['On_Time'] == 1][\"Mode_of_Shipment\"], color='red',label='NOT ON TIME')\n\nplt.title('On_Time', fontsize=10)\nplt.legend()","c4c8116d":"figure = plt.figure(figsize=(20,8))\nsns.distplot(dataVis[dataVis['Cost_of_the_Product'] < dataVis['Cost_of_the_Product'].mean()], color='black',label='LESS THAN MEAN') \nsns.distplot(dataVis[dataVis['Cost_of_the_Product'] > dataVis['Cost_of_the_Product'].mean()], color='red',label='MORE THAN MEAN')\n\nplt.xlim([0,620])\nplt.title('Cost_of_the_Product', fontsize=10)\nplt.legend()","ac6d87c3":"figure = plt.figure(figsize=(20,8))\nsns.distplot(dataVis[dataVis['Weight_in_gms'] < dataVis['Weight_in_gms'].mean()], color='black',label='LESS THAN MEAN') \nsns.distplot(dataVis[dataVis['Weight_in_gms'] > dataVis['Weight_in_gms'].mean()], color='red',label='MORE THAN MEAN')\n\nplt.xlim([0,620])\nplt.title('Cost_of_the_Product', fontsize=10)\nplt.legend()","0f4d4cb7":"data['On_Time'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(15,8))\nplt.show()","d20e1a04":"data['Customer_rating'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(15,8))\nplt.show()","0194eeea":"data['Product_importance'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(15,8))\nplt.show()","1542c6b9":"data['Mode_of_Shipment'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(15,8))\nplt.show()","446ddf47":"g = sns.JointGrid(data=data, x=\"Cost_of_the_Product\", y=\"Weight_in_gms\", hue=\"On_Time\", space=0)\ng.plot_joint(sns.kdeplot,cmap=\"rocket\")\nplt.show()","12f1bc26":"g = sns.JointGrid(data=data, x=\"Cost_of_the_Product\", y=\"Weight_in_gms\", hue=\"Customer_rating\", space=0)\ng.plot_joint(sns.kdeplot,cmap=\"rocket\")\nplt.show()","69121728":"x = data.drop([\"On_Time\"],axis=1)\ny = data[\"On_Time\"]","177946e8":"xTrain,xTest,yTrain,yTest = train_test_split(x,y,test_size=0.2,random_state=42)","4c1dd47a":"print(xTrain.columns)","8a66907c":"print(yTrain)","e69b4fb8":"print(xTest.columns)","f44c41d6":"print(yTest)","9b9ff3ed":"lj = LogisticRegression(solver=\"liblinear\").fit(xTrain,yTrain)\ngnb = GaussianNB().fit(xTrain,yTrain)\nknnc = KNeighborsClassifier().fit(xTrain,yTrain)\ncartc = DecisionTreeClassifier(random_state=42).fit(xTrain,yTrain)\nrfc = RandomForestClassifier(random_state=42,verbose=False).fit(xTrain,yTrain)\ngbmc = GradientBoostingClassifier(verbose=False).fit(xTrain,yTrain)\nxgbc = XGBClassifier().fit(xTrain,yTrain)\nlgbmc = LGBMClassifier().fit(xTrain,yTrain)\ncatbc = CatBoostClassifier(verbose=False).fit(xTrain,yTrain)","96104190":"modelsc = [lj,gnb,knnc,cartc,rfc,gbmc,xgbc,lgbmc,catbc]","ef1e371a":"for model in modelsc:\n    name = model.__class__.__name__\n    predict = model.predict(xTest)\n    R2CV = cross_val_score(model,xTest,yTest,cv=10,verbose=False).mean()\n    error = -cross_val_score(model,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n    roc = roc_curve(yTest,predict)\n    print(name + \": \")\n    print(\"-\" * 10)\n    print(\"ACC-->\",accuracy_score(yTest,predict))\n    print(\"R2CV-->\",R2CV)\n    print(\"MEAN SQUARED ERROR-->\",np.sqrt(error))\n    print(\"ROC-->\",roc)\n    print(\"-\" * 30)","f61e42db":"scaler = StandardScaler().fit(xTrain,yTrain)\nxRTrain = scaler.transform(xTrain)\nxRTest = scaler.transform(xTest)","2777918d":"mlpc = MLPClassifier().fit(xRTrain,yTrain)\npredict = mlpc.predict(xRTest)\n\nR2CV = cross_val_score(mlpc,xRTest,yTest,cv=10).mean()\nprint(R2CV)\nerror = -cross_val_score(mlpc,xRTest,yTest,cv=10,scoring=\"neg_mean_squared_error\").mean()\nprint(np.sqrt(error))","70df8da4":"logg = sm.Logit(yTrain,xTrain).fit()\nprint(logg.summary())","417ab810":"paramsLR = {\"learning_rate\": [0.001, 0.01, 0.1, 0.2]}","5e253bec":"cv = GridSearchCV(gbmc,paramsLR,cv=10,verbose=False,n_jobs=-1).fit(xTrain,yTrain)\nprint(cv.best_params_)","d9b2f9b1":"gbmcL = GradientBoostingClassifier(learning_rate=0.1,verbose=False).fit(xTrain,yTrain)\n\nR2CVL = cross_val_score(gbmcL,xTest,yTest,cv=10,verbose=False).mean()\nerrorL = -cross_val_score(gbmcL,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVL)\nprint(np.sqrt(errorL))","2870038d":"paramsMD = {\"max_depth\": [3, 5, 8, 50, 100]}","319d411f":"cvMD = GridSearchCV(gbmc,paramsMD,cv=10,verbose=False,n_jobs=-1).fit(xTrain,yTrain)\nprint(cvMD.best_params_)","0ff7e19c":"gbmcMD = GradientBoostingClassifier(max_depth=3,verbose=False).fit(xTrain,yTrain)\n\nR2CVMD = cross_val_score(gbmcMD,xTest,yTest,cv=10,verbose=False).mean()\nerrorMD = -cross_val_score(gbmcMD,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVMD)\nprint(np.sqrt(errorMD))","e21e791c":"paramsE = {\"n_estimators\": [200, 500, 1000, 2000]}","007500e5":"cvE = GridSearchCV(gbmc,paramsE,cv=10,verbose=False,n_jobs=-1).fit(xTrain,yTrain)\nprint(cvE.best_params_)","d3a12d6e":"gbmcE = GradientBoostingClassifier(n_estimators=200,verbose=False).fit(xTrain,yTrain)\n\nR2CVE = cross_val_score(gbmcE,xTest,yTest,cv=10,verbose=False).mean()\nerrorE = -cross_val_score(gbmcE,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVE)\nprint(np.sqrt(errorE))","7bbb7774":"gbmcGen = GradientBoostingClassifier(n_estimators=200,max_depth=3,learning_rate=0.1,verbose=False).fit(xTrain,yTrain)\n\nR2CGE = cross_val_score(gbmcGen,xTest,yTest,cv=10,verbose=False).mean()\nerrorGE = -cross_val_score(gbmcGen,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CGE)\nprint(np.sqrt(errorGE))","d8dbe7e3":"gparams = {\"learning_rate\": [0.0001, 0.01, 0.1],\n          \"max_depth\": [3, 5, 8],\n          \"n_estimators\": [200, 500, 1000, 2000]}","530edeff":"cvGEN = GridSearchCV(gbmc,gparams,cv=10,verbose=False,n_jobs=-1).fit(xTrain,yTrain)\nprint(cvGEN.best_params_)","51f5e65c":"gbmcLast = GradientBoostingClassifier(n_estimators=200,max_depth=5,learning_rate=0.01,verbose=False).fit(xTrain,yTrain)\n\nR2CVlast = cross_val_score(gbmcLast,xTest,yTest,cv=10,verbose=False).mean()\nerrorlast = -cross_val_score(gbmcLast,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVlast)\nprint(np.sqrt(errorlast))","a9906422":"gbmcH = GradientBoostingClassifier(min_samples_split=500,\n                                   min_samples_leaf=50,\n                                   subsample=0.8,\n                                   max_features=\"sqrt\",n_estimators=200,max_depth=8,learning_rate=0.01,verbose=False).fit(xTrain,yTrain)\n\nR2CVH = cross_val_score(gbmcH,xTest,yTest,cv=10,verbose=False).mean()\nerrorH = -cross_val_score(gbmcH,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVH)\nprint(np.sqrt(errorH))","bcc99e11":"gbmcH2 = GradientBoostingClassifier(min_samples_split=500,\n                                   min_samples_leaf=50,\n                                   subsample=0.8,\n                                   max_features=\"sqrt\",verbose=False).fit(xTrain,yTrain)\n\nR2CVH2 = cross_val_score(gbmcH2,xTest,yTest,cv=10,verbose=False).mean()\nerrorH2 = -cross_val_score(gbmcH2,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVH2)\nprint(np.sqrt(errorH2))","60c4f5d3":"paramtest2 = {'max_depth':range(5,16,2), 'min_samples_split':range(200,1001,200)}","32d7a01f":"cvH = GridSearchCV(gbmc,paramtest2,cv=5,verbose=False,n_jobs=-1,scoring=\"roc_auc\").fit(xTrain,yTrain)\nprint(cvH.best_params_)\nprint(cvH.best_estimator_)\nprint(cvH.best_score_)\nprint(cvH.cv_results_)","40e71f09":"gbmcH3 = GradientBoostingClassifier(min_samples_split=800,\n                                   min_samples_leaf=50,\n                                   subsample=0.8,\n                                   max_features=\"sqrt\",n_estimators=1000,max_depth=5,learning_rate=0.02,verbose=False).fit(xTrain,yTrain)\n\nR2CVH3 = cross_val_score(gbmcH3,xTest,yTest,cv=10,verbose=False).mean()\nerrorH3 = -cross_val_score(gbmcH3,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVH3)\nprint(np.sqrt(errorH3))","ecd5d4fd":"gbmcH4 = GradientBoostingClassifier(min_samples_split=800,\n                                   max_features=\"sqrt\",max_depth=5,verbose=False).fit(xTrain,yTrain)\n\nR2CVH4 = cross_val_score(gbmcH4,xTest,yTest,cv=10,verbose=False).mean()\nerrorH4 = -cross_val_score(gbmcH4,xTest,yTest,cv=10,scoring=\"neg_mean_squared_error\",verbose=False).mean()\n\nprint(R2CVH4)\nprint(np.sqrt(errorH4))","92476e56":"#### HOMOGENEITY","d2d23a68":"#### GENERAL TESTING","b8cdd997":"#### for Discount_offered","cd733e22":"# VISUALIZATION","1d3e4534":"#### WARNINGS","d570caea":"#### we need to make Discount_offered and Customer_rating standardize","5732e9c7":"#### DELETING","b0a7c46d":"# LOGIT","e572d5e5":"#### MAXIMUM VALUES OF SOME IMPORTANT COLUMNS","80c5aa52":"# FEATURES AND INFORMATIONS\n\n\n* ID: ID Number of Customers.\n* Warehouse block: The Company have big Warehouse which is divided in to block such as A,B,C,D,E.\n* Mode of shipment:The Company Ships the products in multiple way such as Ship, Flight and Road.\n* Customer care calls: The number of calls made from enquiry for enquiry of the shipment.\n* Customer rating: The company has rated from every customer. 1 is the lowest (Worst), 5 is the highest (Best).\n* Cost of the product: Cost of the Product in US Dollars.\n* Prior purchases: The Number of Prior Purchase.\n* Product importance: The company has categorized the product in the various parameter such as low, medium, high.\n* Gender: Male and Female.\n* Discount offered: Discount offered on that specific product.\n* Weight in gms: It is the weight in grams.\n* Reached on time: It is the target variable, where 1 Indicates that the product has NOT reached on time and 0 indicates it has reached on time.","eb1db4f6":"#### MINIMUM VALUES OF SOME IMPORTANT COLUMNS","f0cbe333":"# EXPLORATORY DATA ANALYSIS","ace1c138":"# CLASSIFIER MODELS","89a71a8e":"# CNN","97512adb":"# OUTLIER","7addb2eb":"# STANDARDIZATION","7033028d":"# DATA","b837daf6":"#### ANOTHER TESTING","e3ba7192":"# TRAIN & TEST ","fd4b93a6":"#### CORRELATION TYPE","1bc19d87":"#### NORMALITY","900453af":"# PACKAGES AND LIBRARIES","037f8195":"#### for Customer_rating","a98ba499":"# CONTINUE TO VISUALIZE","ce2d0ab7":"#### CORRELATION VISUALIZATION","81807d53":"# CORRELATION - COVARIANCE - NORMALITY - HOMOGENEITY","041c87b5":"# ENCODE","9ad11a63":"#### COVARIANCE VISUALIZATION","aafd00a2":"#### COVARIANCE","acf77dcc":"# GRADIENT BOOST CLASSIFIER TUNING","6977b055":"#### LOCAL TESTING","7e397dc7":"#### CORRELATION BETWEEN SOME FEATURES","b5c7727f":"#### best is GradientBoostingClassifier: \n----------\n* ACC--> 0.70"}}