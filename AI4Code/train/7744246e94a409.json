{"cell_type":{"46461b1b":"code","a1ec16d5":"code","e7770b7b":"code","d3dfeba3":"code","6b9b14a0":"code","93a84325":"code","31462901":"code","641baf60":"code","7aa167bd":"code","cff4fbeb":"code","c38096f7":"code","7a3b5938":"code","d84c1e0f":"code","fef21580":"code","f4e0af03":"code","45a81fa4":"code","98f035b0":"code","8eda2494":"code","3f168fac":"code","7697c337":"code","7dcc459e":"code","d1a4bdc7":"markdown","dffc0cc6":"markdown","9b20ce82":"markdown","0db8e33f":"markdown","ced38188":"markdown","ec5ad10a":"markdown","14e42cc8":"markdown","8b6903a2":"markdown","86aefc09":"markdown","1cf8d1fd":"markdown"},"source":{"46461b1b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(action = 'ignore')\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a1ec16d5":"data = pd.read_csv('\/kaggle\/input\/nyc_taxi_trip_duration.csv')\ndata.head()","e7770b7b":"data.columns","d3dfeba3":"data.shape","6b9b14a0":"data.isna().sum()","93a84325":"data.dtypes","31462901":"data.dtypes[data.dtypes == 'int64']","641baf60":"data.dtypes[data.dtypes == 'float64']","7aa167bd":"data.dtypes[data.dtypes == 'object']","cff4fbeb":"data[['id', 'pickup_datetime', 'dropoff_datetime', 'store_and_fwd_flag']].head()","c38096f7":"data['store_and_fwd_flag'] = data['store_and_fwd_flag'].astype('category')","7a3b5938":"data.dtypes","d84c1e0f":"pickup_date = pd.DatetimeIndex(data['pickup_datetime'])\ndropoff_date = pd.DatetimeIndex(data['dropoff_datetime'])","fef21580":"data['pickup_hour'] = pickup_date.hour\ndata['dropoff_hour'] = dropoff_date.hour\ndata['pickup_dow'] = pickup_date.dayofweek\ndata['dropoff_dow'] = dropoff_date.dayofweek\n# data['pickup_date'] = pickup_date.date\n# data['dropoff_date'] = dropoff_date.date","f4e0af03":"data.drop(columns=['pickup_datetime','dropoff_datetime'], inplace=True)","45a81fa4":"data.dtypes","98f035b0":"data.describe()","8eda2494":"data.columns","3f168fac":"numerical_col = ['vendor_id','passenger_count', 'pickup_longitude', 'pickup_latitude',\n       'dropoff_longitude', 'dropoff_latitude','trip_duration', 'pickup_hour', 'dropoff_hour',\n       'pickup_dow', 'dropoff_dow']","7697c337":"def univariate_analysis(data, column_group):\n    size = len(column_group)\n    plt.figure(figsize=(3*size, 20), dpi=100)\n    for i, col in enumerate(column_group):\n        maxi = data[col].max()\n        mini = data[col].min()\n        st_dev = data[col].std()\n        mean = data[col].mean()\n        median = data[col].median()\n        ran = maxi - mini\n        skew = data[col].skew()\n        kurt = data[col].kurtosis()  \n        points = mean-st_dev, mean+st_dev\n        \n        plt.subplot(4,3, i+1)\n        plt.subplots_adjust(left=None, bottom=2, right=None, top=3,\n                wspace=0.4, hspace=0.6)\n        \n        sns.kdeplot(data[col], shade=True)\n        plt.xlabel('{}'.format(col), fontsize = 20)\n        plt.ylabel('density')\n        plt.title('std_dev = {}; kurtosis = {};\\nskew = {}; range = {}\\nmean = {}; median = {}'.format((round(points[0],2),round(points[1],2)),\n                                                                                                   round(kurt,2),\n                                                                                                   round(skew,2),\n                                                                                                   (round(mini,2),round(maxi,2),round(ran,2)),\n                                                                                                   round(mean,2),\n                                                                                                   round(median,2)), fontsize=20)\n        \n        ","7dcc459e":"univariate_analysis(data, numerical_col)","d1a4bdc7":"# Checking for missing values","dffc0cc6":"# Exploratory Data Analysis","9b20ce82":"> **Insights**\n- vendor id, passenger_count and trip duration is okay to ba a integer","0db8e33f":"# Reading Data","ced38188":"# Seggregating key values from DateTime","ec5ad10a":"## Skewness:\nThe skewness for a normal distribution is **zero**, and any symmetric data should have a skewness near zero. **Negative** values for the skewness indicate data that are skewed **left** and positive values for the skewness indicate data that are skewed **right**. By skewed left, we mean that the left tail is long relative to the right tail. Similarly, skewed right means that the right tail is long relative to the left tail. If the data are multi-modal, then this may affect the sign of the skewness.\n\n## Kurtosis:\nThis definition is used so that the standard normal distribution has a kurtosis of zero. In addition, with the second definition positive kurtosis indicates a \"heavy-tailed\" distribution and negative kurtosis indicates a \"light tailed\" distribution.","14e42cc8":"# Feature Description\n\n- id - a unique identifier for each trip  \n- vendor_id - a code indicating the provider associated with the trip record  \n- pickup_datetime - date and time when the meter was engaged  \n- dropoff_datetime - date and time when the meter was disengaged  \n- passenger_count - the number of passengers in the vehicle (driver entered value)  \n- pickup_longitude - the longitude where the meter was engaged  \n- pickup_latitude - the latitude where the meter was engaged  \n- dropoff_longitude - the longitude where the meter was disengaged  \n- dropoff_latitude - the latitude where the meter was disengaged  \n- store_and_fwd_flag - This flag indicates whether the trip record was held in-vehicle memory before sending to the    vendor because the vehicle did not have a connection to the server (Y=store and forward; N=not a store and forward trip)  \n- trip_duration - (target) duration of the trip in seconds  \n  ","8b6903a2":"> - store_and_fwd_flag is a category :  \n*This flag indicates whether the trip record was held in-vehicle memory before sending to the vendor because the vehicle did not have a connection to the server (Y=store and forward; N=not a store and forward trip)*","86aefc09":"# Variable Identification","1cf8d1fd":"# Univariate Analysis"}}