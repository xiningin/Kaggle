{"cell_type":{"33254e07":"code","82b853eb":"code","888ad6dd":"code","df6c5f72":"code","674c7d35":"code","a5504024":"code","06520025":"code","9e861514":"code","12a0a5d3":"code","d5b05bdb":"code","758f4923":"code","256c54b1":"code","836f7755":"code","e8279f94":"code","9ed157b9":"code","95826e12":"code","70ae632d":"code","ad27cc73":"code","9a916700":"code","79773161":"code","da5ce98a":"code","4460456d":"code","1ee6bb24":"markdown","c89db9c3":"markdown","1d75d6c0":"markdown","e1231912":"markdown","ed7fe92e":"markdown","b54de673":"markdown"},"source":{"33254e07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","82b853eb":"df=pd.read_csv(r'\/kaggle\/input\/pro-overwatch-player-settings\/player_settings.csv')\ndf.head()","888ad6dd":"df1=pd.read_csv(r'\/kaggle\/input\/pro-overwatch-player-settings\/mouse_data.csv')\ndf1.head()","df6c5f72":"df2=pd.read_csv(r'\/kaggle\/input\/pro-overwatch-player-settings\/owl_roster.csv')\ndf2.head()","674c7d35":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Role)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Pastel1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","a5504024":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.Model)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","06520025":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Hero)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","9e861514":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.MouseModel)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='pink', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","12a0a5d3":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.Size)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","d5b05bdb":"#Code by Sandhya S  https:\/\/www.kaggle.com\/sansuthi\/eda-amazon-best-selling-books\/notebook\n\nfig, ax = plt.subplots(1,2, figsize=(15,7))\ndf.Role.value_counts().plot.pie(shadow=True, radius=0.7, autopct='%1.2f%%',\n                       textprops = {\"fontsize\":15}, explode=(0.03, 0, 0.1), ax=ax[0])\nsns.countplot(y=df.DPI, hue=df.Role, ax=ax[1])\nfig.show()\ndf.Role.value_counts().to_frame('Count')","758f4923":"!pip install pywaffle","256c54b1":"#Codes by ask9 https:\/\/www.kaggle.com\/arbazkhan971\/indians-vs-world\/notebook\n\ndef random_colors(number_of_colors):\n    color = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n                 for i in range(number_of_colors)]\n    return color","836f7755":"from pywaffle import Waffle\nimport random\n\nrole = df[\"Role\"].value_counts()\n\nfig = plt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=20,\n    values=role,\n    colors = random_colors(len(role)),\n    title={'label': 'Role Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(role.index, role) ],\n    legend={'loc': 'lower left', 'bbox_to_anchor': (0, -0.4), 'ncol': len(df.groupby(\"Hero\").get_group('Reinhardt')), 'framealpha': 0},\n    font_size=30, \n    icons = 'child',\n    figsize=(12, 5),  \n    icon_legend=True\n)","e8279f94":"sns.set(style=\"ticks\", context=\"talk\", font_scale=1.5)\nplt.style.use(\"dark_background\")","9ed157b9":"#Codes by Alexander Filin https:\/\/www.kaggle.com\/infamous25700\/pornactors-are-among-us-18\n\nfrom pywaffle import Waffle\n\nrole = df[\"Role\"].value_counts()\n\nplt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=role,\n    title={'label': 'Role Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(role.index, role) ],\n    # Set the position of the legend\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    dpi=100,\n    colors = [\"#ffa31a\", \"#D17200\", \"#9c5400\"]\n    #colors = [\"#ffa31a\", \"#D17200\", \"#9c5400\", \"#763f00\", \"#422400\"]\n)\nplt.show()","95826e12":"#Code by Lucas Abrah\u00e3o https:\/\/www.kaggle.com\/lucasabrahao\/trabalho-manufatura-an-lise-de-dados-no-brasil\n\ndf1[\"Size\"].value_counts().plot.barh(color=['red','lime','purple','teal','cyan'], title='Mouse Size',);","70ae632d":"fig,ax = plt.subplots(1,1, figsize=(20,10))\nplot = sns.barplot(x=\"Role\", y=\"MouseWeight\", data=df)\nplot.set_xticklabels(plot.get_xticklabels(), rotation=90);","ad27cc73":"fig,ax = plt.subplots(1,1, figsize=(8,8))\ndegree = df.groupby([\"Role\", \"MouseWeight\"]).size().unstack()#.fillna(0)\ndegree = degree.div(degree.sum(axis=1), axis=0)\nsns.heatmap(degree, cmap='Spectral_r');","9a916700":"#Code by Sandhya S https:\/\/www.kaggle.com\/sansuthi\/eda-amazon-best-selling-books\/comments#1366100\n\nplt.figure(figsize=(15,7))\nsns.scatterplot(df.Hero, df.MouseWeight, hue=df.Role, s=100, palette='viridis')\nplt.yticks(fontsize=12)\nplt.xticks(rotation=45)\nplt.show()","79773161":"df.iloc[4:13].style.set_properties(**{'background-color': '#AFEEEE'})","da5ce98a":"df.Hero.value_counts()","4460456d":"df[df.Hero == 'Reinhardt'].style.set_properties(**{'background-color': '#AFEEEE'}) ","1ee6bb24":"#I'm not sure if it's Mouse\/Model size. Only that's size.","c89db9c3":"#Role has 3 kind (damage, tank, support) hence Explode must have length 3 too.(0.03,0,0.1) ","1d75d6c0":"#Hero Players by Role","e1231912":"#4th column, 12th row.","ed7fe92e":"That's all since I ran out of ideas. Besides, I don't know how those Mouse features work.","b54de673":"#Overwatch\n\nOverwatch is a fiercely competitive game, with one of the most successful Esports leagues in all of gaming. However, it is also a lot of fun for non-professional players. When you\u2019re playing in competitive, you need to look for any opportunity to improve and get ahead. The first step is often with your settings. Overwatch pro settings are the setups used by the top players in the game. These are the settings and sensitivities that you can use to get the bets performance from the game, which can give you a competitive advantage.\n\nhttps:\/\/www.bestoverwatchsettings.com\/pro-settings\/"}}