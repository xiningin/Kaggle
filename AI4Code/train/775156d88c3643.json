{"cell_type":{"4e201dd9":"code","47dad296":"code","3f2b0abe":"code","9da3e76b":"code","1fe0a080":"code","7fd00a2e":"code","dee1a1af":"code","3768f2ed":"code","ee0de714":"code","ce6b2ea2":"code","73ed011e":"code","47fd01c1":"code","13574ba7":"code","e8ef76da":"code","d10c7ea5":"code","d12644ec":"code","95bc6230":"code","39afcbe8":"code","413c9125":"code","58bde8cf":"code","c949bc9c":"markdown","49184bde":"markdown","8c0497ff":"markdown","f3949310":"markdown","bea8b122":"markdown","8f6c7102":"markdown"},"source":{"4e201dd9":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport numpy as np \nimport pandas as pd\nfrom sklearn.feature_extraction.text import TfidfVectorizer\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","47dad296":"data = pd.read_csv(\"\/kaggle\/input\/real-or-fake-fake-jobposting-prediction\/fake_job_postings.csv\")","3f2b0abe":"data.shape","9da3e76b":"data.isnull().sum()","1fe0a080":"cols = [\"title\", \"company_profile\", \"description\", \"requirements\", \"benefits\"]\nfor c in cols:\n    data[c] = data[c].fillna(\"\")\n\ndef extract_features(df):    \n    for c in cols:\n        data[c+\"_len\"] = data[c].apply(lambda x : len(str(x)))\n        data[c+\"_wc\"] = data[c].apply(lambda x : len(str(x.split())))\n\n    \nextract_features(data)","7fd00a2e":"data.head()","dee1a1af":"data['combined_text'] = data['company_profile'] + \" \" + data['description'] + \" \" + data['requirements'] + \" \" + data['benefits']\n\nn_features = {\n    \"title\" : 100,\n    \"combined_text\" : 500\n}\n\nfor c, n in n_features.items():\n    tfidf = TfidfVectorizer(max_features=n, norm='l2', stop_words = 'english')\n    tfidf.fit(data[c])\n    tfidf_train = np.array(tfidf.transform(data[c]).toarray(), dtype=np.float16)\n\n    for i in range(n_features[c]):\n        data[c + '_tfidf_' + str(i)] = tfidf_train[:, i]","3768f2ed":"cat_cols = [\"employment_type\", \"required_experience\", \"required_education\", \"industry\", \"function\"]\n\nfor c in cat_cols:\n    encoded = pd.get_dummies(data[c])\n    data = pd.concat([data, encoded], axis=1)","ee0de714":"drop_cols = ['title', 'location', 'department', 'salary_range', 'company_profile', 'description', 'requirements', 'benefits', 'combined_text']\ndrop_cols += cat_cols\ndata = data.drop(drop_cols, axis = 1)","ce6b2ea2":"train = data.loc[:9000,:]\ntest = data.loc[9000:,:]","73ed011e":"y = train['fraudulent']\nX = train.drop(columns = ['fraudulent'])","47fd01c1":"y_test = test['fraudulent']\nX_test = test.drop(columns = ['fraudulent'])","13574ba7":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import svm\nfrom sklearn.metrics import accuracy_score, classification_report","e8ef76da":"lr = LogisticRegression(solver = 'liblinear', max_iter = 1000)\nmodel_lr = lr.fit(X,y)","d10c7ea5":"pred_lr = model_lr.predict(X_test)","d12644ec":"print(\"Accuracy score (LR) : {:.2f}\".format(accuracy_score(pred_lr, y_test)))","95bc6230":"print(classification_report(pred_lr,y_test))","39afcbe8":"SVC = svm.SVC()\nmodel_SVC = SVC.fit(X,y)","413c9125":"SVC_pred = model_SVC.predict(X_test)","58bde8cf":"print(\"Accuracy score (SVM) : {:.2f}\".format(accuracy_score(SVC_pred, y_test)))","c949bc9c":"Imputing NaNs in text columns with empty strings and creating new columns that indicate length of the text for all those columns","49184bde":"One hot encoding for categorical columns","8c0497ff":"Creating TFidf features","f3949310":"## Support Vector Machines","bea8b122":"Dropping unnecessary columns","8f6c7102":"## Logistic Regression"}}