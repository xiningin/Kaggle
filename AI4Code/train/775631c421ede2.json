{"cell_type":{"fc80c649":"code","de3cab88":"code","472ee836":"code","49eeeb64":"code","33a0499e":"code","648e3fe7":"code","9da4dd4a":"code","7375e4c4":"code","8ad82669":"code","9592956a":"code","66b1884b":"code","01cf069a":"code","076059a3":"code","1816c32a":"code","4e06242f":"code","c7002798":"code","b5ecc765":"code","152c661d":"code","5ddc1498":"code","9e020f5e":"markdown","d0ce79de":"markdown","6069f48c":"markdown","2ede6ad7":"markdown","edb0bc8b":"markdown","dfd49c47":"markdown","1c4a4188":"markdown","87c860d1":"markdown","e08abdfd":"markdown","3286aff8":"markdown","ec6a00ae":"markdown","ea50c33a":"markdown","bed4cf3e":"markdown","a6ab4ad9":"markdown","c0e56e64":"markdown","7ec6e7c7":"markdown","3735eedc":"markdown","f779cfb8":"markdown","956c2ffb":"markdown","78ae25f0":"markdown","6aa0e9db":"markdown","95b79343":"markdown","047491bd":"markdown","fa6e8a25":"markdown","25b5880f":"markdown","311bc071":"markdown"},"source":{"fc80c649":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","de3cab88":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nimport missingno as msno","472ee836":"aq_d = pd.read_csv(\"\/kaggle\/input\/acea-water-prediction\/Aquifer_Doganella.csv\")\naq_a = pd.read_csv(\"\/kaggle\/input\/acea-water-prediction\/Aquifer_Auser.csv\")\naq_p = pd.read_csv(\"\/kaggle\/input\/acea-water-prediction\/Aquifer_Luco.csv\")\naq_l = pd.read_csv(\"\/kaggle\/input\/acea-water-prediction\/Aquifer_Petrignano.csv\")","49eeeb64":"def get_day(x):\n    \n    return x.strftime('%d')\n\ndef get_month(x):\n    \n    return x.strftime('%m')\n\ndef get_month_name(x):\n    \n    return x.strftime('%B')\n\ndef get_year(x):\n    \n    return x.strftime('%Y')\n\naq_d['Date'] = pd.to_datetime(aq_d['Date'], format = \"%d\/%m\/%Y\")\naq_d['Day'] = aq_d['Date'].apply(get_day)\naq_d['Month'] = aq_d['Date'].apply(get_month)\naq_d['Month_name'] = aq_d['Date'].apply(get_month_name)\naq_d['Year'] = aq_d['Date'].apply(get_year)","33a0499e":"# interactive viz functions\n\ndef plot_complete_trend(df, var):\n    \n    fig = go.Figure([\n        go.Scatter(\n            x = df['Date'],\n            y = df[var],\n            line = dict(color = '#000080'))\n    ])\n    \n    return fig\n\ndef plot_yr_avg(df, var):\n    \n    yearly_avg = df.groupby(['Year']).agg({var: 'mean'})\n    fig = px.line(yearly_avg)\n    \n    return fig\n    \ndef plot_mon_avg(df, var):\n    \n    monthly_avg = df.groupby(['Month']).agg({var: 'mean'})\n    fig = px.line(monthly_avg)\n    \n    return fig","648e3fe7":"msno.matrix(aq_d, color = (0, 0, 0.52))\nplt.show()","9da4dd4a":"# check nullity correlation\nmsno.heatmap(aq_d)\nplt.show()","7375e4c4":"temp = aq_d.set_index('Date')\n\nfig, axes = plt.subplots(3, 3, figsize=(15, 15))\nfig.suptitle('Depth to Groundwater(m) in the 9 Wells')\n\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_1'], ax=axes[0, 0], color = '#000080')\naxes[0, 0].set_title('Well 1')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_2'], ax=axes[0, 1], color = '#000080')\naxes[0, 1].set_title('Well 2')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_3'], ax=axes[0, 2], color = '#000080')\naxes[0, 2].set_title('Well 3')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_4'], ax=axes[1, 0], color = '#000080')\naxes[1, 0].set_title('Well 4')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_5'], ax=axes[1, 1], color = '#000080')\naxes[1, 1].set_title('Well 5')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_6'], ax=axes[1, 2], color = '#000080')\naxes[1, 2].set_title('Well 6')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_7'], ax=axes[2, 0], color = '#000080')\naxes[2, 0].set_title('Well 7')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_8'], ax=axes[2, 1], color = '#000080')\naxes[2, 1].set_title('Well 8')\nsns.lineplot(data = temp['Depth_to_Groundwater_Pozzo_9'], ax=axes[2, 2], color = '#000080')\naxes[2, 2].set_title('Well 9')\n\nplt.show()","8ad82669":"temp = aq_d.set_index('Date')\n\nfig, axes = plt.subplots(4, 2, figsize=(15, 15))\nfig.suptitle('Volume of water(m) from drinking water treatment plants')\n\nsns.lineplot(data = temp['Volume_Pozzo_1'], ax=axes[0, 0], color = '#000080')\naxes[0, 0].set_title('Well 1')\nsns.lineplot(data = temp['Volume_Pozzo_2'], ax=axes[0, 1], color = '#000080')\naxes[0, 1].set_title('Well 2')\nsns.lineplot(data = temp['Volume_Pozzo_3'], ax=axes[1, 0], color = '#000080')\naxes[1, 0].set_title('Well 3')\nsns.lineplot(data = temp['Volume_Pozzo_4'], ax=axes[1, 1], color = '#000080')\naxes[1, 1].set_title('Well 4')\nsns.lineplot(data = temp['Volume_Pozzo_5+6'], ax=axes[2, 0], color = '#000080')\naxes[2, 0].set_title('Well 5+6')\nsns.lineplot(data = temp['Volume_Pozzo_7'], ax=axes[2, 1], color = '#000080')\naxes[2, 1].set_title('Well 7')\nsns.lineplot(data = temp['Volume_Pozzo_8'], ax=axes[3, 0], color = '#000080')\naxes[3, 0].set_title('Well 8')\nsns.lineplot(data = temp['Volume_Pozzo_9'], ax=axes[3, 1], color = '#000080')\naxes[3, 1].set_title('Well 9')\n\nplt.show()","9592956a":"fig, axes = plt.subplots(1, 2, figsize=(20, 9))\nfig.suptitle('Temperature(degree celsius) in both areas')\n\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n         \"September\", \"October\", \"November\", \"December\"]\n\ntemp = aq_d.groupby(['Month_name', 'Year'], as_index=False).agg({'Temperature_Monteporzio': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Temperature_Monteporzio'),\n            annot=True, linewidths=.5, cmap=\"bwr\", ax = axes[0])\naxes[0].set_title('Monteporzio')\n\ntemp = aq_d.groupby(['Month_name', 'Year'], as_index=False).agg({'Temperature_Velletri': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Temperature_Velletri'),\n            annot=True, linewidths=.5, cmap=\"bwr\", ax = axes[1])\naxes[1].set_title('Velletri')\n\nplt.show()","66b1884b":"fig, axes = plt.subplots(1, 2, figsize=(20, 9))\nfig.suptitle('Rainfall(mm) in both areas')\n\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n         \"September\", \"October\", \"November\", \"December\"]\n\ntemp = aq_d.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Monteporzio': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Monteporzio'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[0])\naxes[0].set_title('Monteporzio')\n\ntemp = aq_d.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Velletri': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Velletri'),\n            annot=True, linewidths=.5, cmap=\"Blues\", ax = axes[1])\naxes[1].set_title('Velletri')\n\nplt.show()","01cf069a":"aq_a['Date'] = pd.to_datetime(aq_a['Date'], format = \"%d\/%m\/%Y\")\naq_a['Day'] = aq_a['Date'].apply(get_day)\naq_a['Month'] = aq_a['Date'].apply(get_month)\naq_a['Month_name'] = aq_a['Date'].apply(get_month_name)\naq_a['Year'] = aq_a['Date'].apply(get_year)","076059a3":"msno.matrix(aq_a, color = (0, 0, 0.52))\nplt.show()","1816c32a":"# check nullity correlation\nmsno.heatmap(aq_a)\nplt.show()","4e06242f":"temp = aq_a.set_index('Date')\n\nfig, axes = plt.subplots(3, 2, figsize=(15, 15))\nfig.suptitle('Depth to Groundwater(m) in the 5 Wells')\n\nsns.lineplot(data = temp['Depth_to_Groundwater_LT2'], ax=axes[0, 0], color = '#000080')\naxes[0, 0].set_title('Well LT2')\nsns.lineplot(data = temp['Depth_to_Groundwater_SAL'], ax=axes[0, 1], color = '#000080')\naxes[0, 1].set_title('Well SAL')\nsns.lineplot(data = temp['Depth_to_Groundwater_PAG'], ax=axes[1, 0], color = '#000080')\naxes[1, 0].set_title('Well PAG')\nsns.lineplot(data = temp['Depth_to_Groundwater_CoS'], ax=axes[1, 1], color = '#000080')\naxes[1, 1].set_title('Well CoS')\nsns.lineplot(data = temp['Depth_to_Groundwater_DIEC'], ax=axes[2, 0], color = '#000080')\naxes[2, 0].set_title('Well DIEC')\naxes[-1,-1].axis('off')\n\nplt.show()","c7002798":"temp = aq_a.set_index('Date')\n\nfig, axes = plt.subplots(3, 2, figsize=(15, 15))\nfig.suptitle('Volume of water(m) from drinking water treatment plants')\n\nsns.lineplot(data = temp['Volume_POL'], ax=axes[0, 0], color = '#000080')\naxes[0, 0].set_title('POL')\nsns.lineplot(data = temp['Volume_CC1'], ax=axes[0, 1], color = '#000080')\naxes[0, 1].set_title('CC1')\nsns.lineplot(data = temp['Volume_CC2'], ax=axes[1, 0], color = '#000080')\naxes[1, 0].set_title('CC2')\nsns.lineplot(data = temp['Volume_CSA'], ax=axes[1, 1], color = '#000080')\naxes[1, 1].set_title('CSA')\nsns.lineplot(data = temp['Volume_CSAL'], ax=axes[2, 0], color = '#000080')\naxes[2, 0].set_title('CSAL')\naxes[-1,-1].axis('off')\n\nplt.show()","b5ecc765":"fig, axes = plt.subplots(2, 2, figsize=(20, 15))\nfig.suptitle('Temperature(degree celsius)')\n\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n         \"September\", \"October\", \"November\", \"December\"]\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Temperature_Orentano': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Temperature_Orentano'),\n            annot=True, linewidths=.5, cmap=\"bwr\", ax = axes[0,0])\naxes[0,0].set_title('Orentano')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Temperature_Ponte_a_Moriano': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Temperature_Ponte_a_Moriano'),\n            annot=True, linewidths=.5, cmap=\"bwr\", ax = axes[0,1])\naxes[0,1].set_title('Ponte_a_Moriano')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Temperature_Monte_Serra': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Temperature_Monte_Serra'),\n            annot=True, linewidths=.5, cmap=\"bwr\", ax = axes[1,0])\naxes[1,0].set_title('Monte_Serra')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Temperature_Lucca_Orto_Botanico': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Temperature_Lucca_Orto_Botanico'),\n            annot=True, linewidths=.5, cmap=\"bwr\", ax = axes[1,1])\naxes[1,1].set_title('Lucca_Orto_Botanico')\n\nplt.show()","152c661d":"fig, axes = plt.subplots(5, 2, figsize=(20, 35))\nfig.suptitle('Rainfall(mm)')\n\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n         \"September\", \"October\", \"November\", \"December\"]\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Gallicano': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Gallicano'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[0,0])\naxes[0,0].set_title('Gallicano')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Pontetetto': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Pontetetto'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[0,1])\naxes[0,1].set_title('Pontetetto')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Monte_Serra': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Monte_Serra'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[1,0])\naxes[1,0].set_title('Monte_Serra')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Orentano': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Orentano'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[1,1])\naxes[1,1].set_title('Orentano')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Borgo_a_Mozzano': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Borgo_a_Mozzano'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[2,0])\naxes[2,0].set_title('Borgo_a_Mozzano')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Fabbriche_di_Vallico': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Fabbriche_di_Vallico'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[2,1])\naxes[2,1].set_title('Fabbriche_di_Vallico')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Piaggione': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Piaggione'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[3,0])\naxes[3,0].set_title('Piaggione')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Calavorno': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Calavorno'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[3,1])\naxes[3,1].set_title('Calavorno')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Croce_Arcana': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Croce_Arcana'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[4,0])\naxes[4,0].set_title('Croce_Arcana')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Rainfall_Tereglio_Coreglia_Antelminelli': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Rainfall_Tereglio_Coreglia_Antelminelli'),\n            annot=True, fmt = '.2g', linewidths=.5, cmap=\"Blues\", ax = axes[4,1])\naxes[4,1].set_title('Tereglio_Coreglia_Antelminelli')\n\n\nplt.show()","5ddc1498":"\"\"\"\n# Hydrometry groundwater level(m)\n# what are bothe pos and neg values doing?\n\nfig, axes = plt.subplots(1, 2, figsize=(25, 9))\nfig.suptitle('Hydrometry Groundwater Level(m)')\n\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n         \"September\", \"October\", \"November\", \"December\"]\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Hydrometry_Monte_S_Quirico': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Hydrometry_Monte_S_Quirico'),\n            annot=True, fmt = '.1g', linewidths=.5, cmap=\"Blues\", ax = axes[0])\naxes[0].set_title('Monte_S_Quirico')\n\ntemp = aq_a.groupby(['Month_name', 'Year'], as_index=False).agg({'Hydrometry_Piaggione': 'mean'})\ntemp['Month_name'] = pd.Categorical(temp['Month_name'], categories=months, ordered=True)\nsns.heatmap(temp.pivot('Month_name', 'Year', 'Hydrometry_Piaggione'),\n            annot=True, fmt = '.1g', linewidths=.5, cmap=\"Blues\", ax = axes[1])\naxes[1].set_title('Piaggione')\n\nplt.show()\n\"\"\"","9e020f5e":"**\ud83d\udd0e How to interpret the above plot**  \n- Each bar represents a feature\n    - The whitespaces represent missing values\n    - Read it top-down i.e, the highest point is the first observation\n- The spikes on the right depict observation-wise(row-wise) missingness\n\n**\ud83d\udca1 Insights**  \n- The features that are concerned with `Depth_to_Groundwater_Y` and `Volume_Pozzo_K` have the most missing values\n    - It does seem as though there is a relation between the missingness of these features\n- The `Temperature_Z` features seem to have missingness together towards the final observations\n- The `Volume_Pozzo_K` features show an interesting pattern\n    - Though they have very few missing values, it is to be noticed that almost all values for all features are non-missing after a particular date\n        - This might imply that measurement methods were only put into effect from this date onwards","d0ce79de":"## Aquifer Doganella\n\n- Fed by 2 underground aquifers\n    - Upper stratum is a water table of 30m thickness\n    - Semi-confined artesian aquifer with a 50m thickness\n- Has 9 outputs of the format `Depth_to_Groundwater_Pozzo_{n}`, where n is between [1,9]\n- The aquifers are assessed through 9 wells\n- ~80% of drainage comes from the artesian aquifer\n\n**Features Description**  \n\n| Field | Format | Description |  \n| ----- | ------ | ----------- |\n| Date | Date | Primary Key |\n| Rainfall_X | Real number | Qty. of rain(mm) in area X |\n| Depth_to_Groundwater_Pozzo_Y | Real number | Groundwater level(m) from ground, detected by piezometer Y | \n| Temperature_Z | Real Number | Temp(degree celsius), measured by thermometric station Z |\n| Volume_Pozzo_K | Real Number | Vol of water(mc), taken from drinking water treatment plan K |","6069f48c":"## Aquifer Auser\n\n- Consists of 2 subsystems, NORTH and SOUTH\n    - NORTH partly influences the behaviour of SOUTH\n    - NORTH is an unconfined aquifer\n    - SOUTH is a confined aquifer\n- Levels of NORTH represented by SAL, PAG, CoS and DIEC wells\n- Levels of SOUTH represented by LT2\n- Has 5 outputs\n    - Depth_to_Groundwater_SAL\n    - Depth_to_Groundwater_CoS\n    - Depth_to_Groundwater_LT2\n    - Depth_to_Groundwater_PAG\n    - Depth_to_Groundwater_DIEC\n\n**Features Description**  \n\n| Field | Format | Description |  \n| ----- | ------ | ----------- |\n| Date | Date | Primary Key |\n| Rainfall_X | Real number | Qty. of rain(mm) in area X |\n| Depth_to_Groundwater_Y | Real number | Groundwater level(m) from ground, detected by piezometer Y | \n| Temperature_Z | Real Number | Temp(degree celsius), measured by thermometric station Z |\n| Volume_H | Real Number | Vol of water(mc), taken from drinking water treatment plan H |\n| Hydrometry_K | Real Number | Groundwater level(m) detected by hydrometric station K |","2ede6ad7":"**\ud83d\udca1 Insights**  \n\n- Well 1 shows the most changes in volume\n    - Could be attributed to the fact its groundwater level is higher than other wells and easily accessible\n- Volume in well 3 has been decreasing in recent times\n\n**\u2753 Questions**\n\n- It's not yet clear at this point why 5 and 6 are measured together","edb0bc8b":"## Temperatures","dfd49c47":"### Rainfall in Monteporzio and Velletri","1c4a4188":"<h1><center>Exploring Smart Water Analytics<\/center><\/h1>","87c860d1":"## 1. Aquifers\n\nIn this section, we analyze the different aquifer datasets. We have 4 - Doganella, Auser, Luco and Petrignano.  \n\nAn aquifer is an underground layer of water-bearing permeable rock or gravel or sand([Source](https:\/\/en.wikipedia.org\/wiki\/Aquifer)).\n\n![](https:\/\/i.pinimg.com\/originals\/8d\/aa\/da\/8daada2ad12924b9f8d84fab45a3c754.jpg)\n<center><a href=\"https:\/\/i.pinimg.com\/originals\/8d\/aa\/da\/8daada2ad12924b9f8d84fab45a3c754.jpg\">Source<\/a><\/center>","e08abdfd":"**\ud83d\udd0e How to interpret the above plot** \n\n- Each cell represent the average temperature of a region for that month in that year\n- Towards red => Warmer\n\n**\ud83d\udca1 Insights**  \n\n- The temperature patterns of both regions are very similar, that is expected\n- Temperatures in Monteporzio are lower than those in Velletri","3286aff8":"### Temperatures in Monteporzio and Velletri","ec6a00ae":"### Missing Value Analysis","ea50c33a":"\ud83d\udea7 Under construction. Will update this notebook with further work :)","bed4cf3e":"**\ud83d\udca1 Insights**  \n\n- The wells where the depth to groundwater has been decreasing(favourable condition) over the years are LT2 and SAL\n    - There could be an *interesting explanation* to this. Read ahead.\n- Yet, all wells show several trend changes over the past years\n- In terms of when measurement began, the following is the order of the wells (starting with the oldest)\n    - LT2, CoS > SAL > PAG > DIET\n- While LT2 and SAL have had relatively better improvement in increased ground water levels, it is to be noted that these 2 wells still have much lower ground water levels(especially LT2 where there is a clear improvement trend) than the other wells.\n    - So, probably drastic interventions were put in place to improve groundwater levels in LT2\n    - Or maybe I am just being too ambitious here :)","a6ab4ad9":"### Groundwater Level Trends","c0e56e64":"**\ud83d\udca1 Insights**  \n\n- If the negatives confuse you, don't worry. It's because the volume is the volume taken from the pumps and sent to the water treatment plant ([Source](https:\/\/www.kaggle.com\/c\/acea-water-prediction\/discussion\/202675)).\n- CSA and CSAL began doing this only in late 2019","7ec6e7c7":"### Volume of water in the wells","3735eedc":"**\ud83d\udca1 Insights**  \n\n- Each of the 9 wells have a separate pattern among the last 8 years\n- Well 1 has the highest level of groundwater when compared to all other wells over the years\n- Well 3 has the lowest level of groundwater when compared to all other wells over the years\n- Wells where the level of groundwater has been generally decreasing include 1, 2, 4, 6 and 8\n- Wells where the levels have been generally increasing include 3 and 9","f779cfb8":"**\ud83d\udd0e How to interpret the above plot** \n\n- Each cell represent the average rainfall for a region for that month in that year\n- Towards red => Warmer\n\n**\ud83d\udca1 Insights**  \n\n- At this point, it's hard to find something here","956c2ffb":"### Groundwater Level Trends","78ae25f0":"## References\n\n1. https:\/\/dev.to\/thalesbruno\/subplotting-with-matplotlib-and-seaborn-5ei8\n2. https:\/\/thetechbuddies.com\/2019\/06\/25\/annotated-heatmap-visualization-for-weather-data-using-pandas-and-seaborn\/","6aa0e9db":"## Rainfall","95b79343":"### Missing Value Analysis\n\nIt is evident that the Aquifer Doganella dataset has quite a few null values. In this section, I try to ananlyse these missing values. In order to do this, the [missingno package](https:\/\/github.com\/ResidentMario\/missingno) is resourceful.","047491bd":"### Volume of water in wells","fa6e8a25":"## Aim of this Notebook\n\nThe main aim of this notebook is to explore the [Acea Smart water Analytics data](https:\/\/www.kaggle.com\/c\/acea-water-prediction\/data) in preliminary sense. ","25b5880f":"**\ud83d\udd0e How to interpret the above plot**  \n- The plot above is a nullity correlation heatmap\n    - Nullity correlation refers to how strongly the presence or absence of a variable influences the presence or absence of another\n    - A value of 1 indicates that if one is present, other is also present\n    - A value of -1 indicates that if one is present, other is absent\n    - A value of 0 indictaes no correlation\n\n**\ud83d\udca1 Insights**  \n- All the `Volume_Pozzo_K` features have a nullity correlation of 1 with each other; which re-inforces the previous idea we had that measurements only would have begun at a particular date\n- The`Temperature_Z` features have a strong positive nullity correlation of 0.9\n- The `Depth_to_Groundwater_Pozzo_Y` features have strong positive nullity correlations with each other","311bc071":"**\ud83d\udca1 Insights**  \n\n- The nullity correlations between the `Volume_H`, `Depth_to_Groundwater_Y` and `Rainfall_X` are strongly positive"}}