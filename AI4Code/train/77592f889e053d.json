{"cell_type":{"ca0287cf":"code","742aa836":"code","0ba43d09":"code","31f92f31":"code","ab2eae9b":"code","6c8cc7e4":"code","c39d8897":"code","4efc75f0":"code","f0d50a72":"code","8041355f":"code","2fe60eca":"code","2ab9030c":"code","226795e1":"markdown","6229cfbc":"markdown","fa96261a":"markdown","0489d1aa":"markdown"},"source":{"ca0287cf":"from __future__ import absolute_import, division,print_function, unicode_literals\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras as ks\nprint(tf.__version__)","742aa836":"(training_images, training_labels), (test_images, test_labels) = ks.datasets.fashion_mnist.load_data()","0ba43d09":"print('Training Images datasets shape: {}'.format(training_images.shape))\nprint(\"Training labels shape: \", training_labels.shape)\nprint(\"Test images shape: \", test_images.shape)\nprint(\"Test labels shape: \", test_labels.shape)","31f92f31":"training_images = training_images\/255\ntest_images = test_images\/255","ab2eae9b":"input_data_shape = (28,28)\nhidden_activation_function = 'relu'\noutput_activation_function = 'softmax'\nnn_model = ks.models.Sequential()\nnn_model.add(ks.layers.Flatten(input_shape=input_data_shape,name='Input_layer'))\nnn_model.add(ks.layers.Dense(32, activation=hidden_activation_function, name='Hidden_layer'))\nnn_model.add(ks.layers.Dense(10, activation=output_activation_function, name='Output_layer'))\nnn_model.summary()","6c8cc7e4":"optimizer = 'adam'\nloss_function = 'sparse_categorical_crossentropy'\nmetrics = ['accuracy']\nnn_model.compile(optimizer=optimizer,loss=loss_function, metrics=metrics)\nnn_model.fit(training_images, training_labels, epochs=10)","c39d8897":"training_loss, training_accuracy = nn_model.evaluate(training_images, training_labels)\nprint('Training data accuracy {}'.format(round(float(training_accuracy),2)))","4efc75f0":"test_loss, test_accuracy = nn_model.evaluate(test_images, test_labels)\nprint('Test data accuracy {}'.format(round(float(test_accuracy),2)))","f0d50a72":"input_data_shape = (28,28)\nhidden_activation_function = 'relu'\noutput_activation_function = 'softmax'\ndnn_model = ks.models.Sequential()\ndnn_model.add(ks.layers.Flatten(input_shape=input_data_shape, name='Input_layer'))\ndnn_model.add(ks.layers.Dense(192, activation=hidden_activation_function, name='Hidden_layer_1'))\ndnn_model.add(ks.layers.Dense(128, activation=hidden_activation_function, name='Hidden_layer_2'))\ndnn_model.add(ks.layers.Dense(10, activation=output_activation_function, name='Output_layer'))\ndnn_model.summary()\n","8041355f":"optimizer = 'adam'\nloss_function = 'sparse_categorical_crossentropy'\nmetric=['accuracy']\n\ndnn_model.compile(optimizer=optimizer, loss=loss_function, metrics=metric)\ndnn_model.fit(training_images, training_labels, epochs=20)","2fe60eca":"training_loss, training_accuracy = dnn_model.evaluate(training_images, training_labels)\nprint('Training data accuracy {}'.format(round(float(training_accuracy),2)))","2ab9030c":"test_loss, test_accuracy = dnn_model.evaluate(test_images, test_labels)\nprint('Testing data accuracy {}'.format(round(float(test_accuracy),2)))","226795e1":"## Deep neural network","6229cfbc":"## Simple neural network","fa96261a":"lets rescale the pixel values between 0 and 1","0489d1aa":"we will use keras. With a simple one layer."}}