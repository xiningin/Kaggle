{"cell_type":{"953f3a05":"code","8e2108b5":"code","1427e146":"code","8883392c":"code","3f5727fe":"code","1121bfc2":"code","73509944":"code","d6de7bbc":"code","3a3042ff":"code","2225bbcc":"code","e53c6cfb":"code","b220aa82":"code","2c36d26f":"code","6480b919":"code","a905419f":"code","bffc9928":"code","55ac8ea9":"code","80fb6ea7":"code","61ef4a76":"code","34df9324":"markdown","d754ba0b":"markdown","777c84aa":"markdown","44e614bd":"markdown","d1ec9c20":"markdown","9ad2cb75":"markdown"},"source":{"953f3a05":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","8e2108b5":"Netflix = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')","1427e146":"Netflix.head()","8883392c":"Netflix.tail()","3f5727fe":"Netflix.info()","1121bfc2":"Netflix.describe","73509944":"Netflix.dtypes","d6de7bbc":"Netflix.shape","3a3042ff":"plt.rcParams[\"figure.figsize\"] = [10, 10]","2225bbcc":"import math\ndef roundup(x):\n    return 100 + int(math.ceil(x \/ 100.0)) * 100 \nsns.countplot(x='type',data=Netflix)\n# Get current axis on current figure\nax = plt.gca()\n\n# ylim max value to be set\ny_max = Netflix['type'].value_counts().max() \nax.set_ylim([0, 6000])\n\n# Iterate through the list of axes' patches\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d' % int(p.get_height()), \n            fontsize=12, color='black', ha='center', va='bottom')\nplt.title('Comparison of Total TV Shows & Movies',size='15')\nplt.show()","e53c6cfb":"movies = Netflix[Netflix.type == 'Movie']\nshows = Netflix[Netflix.type == 'TV Show']","b220aa82":"movies['release_year'].unique()","2c36d26f":"recent_5yrs = movies[movies.release_year >= 2011]\nsns.countplot(x='release_year',data=recent_5yrs)\n\n# Get current axis on current figure\nax = plt.gca()\n\n# ylim max value to be set\ny_max = recent_5yrs['type'].value_counts().max() \nax.set_ylim([0,1000])\n\n# Iterate through the list of axes' patches\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d' % int(p.get_height()), \n            fontsize=12, color='black', ha='center', va='bottom')\nplt.title('Total Releases of Movies for Last 10 Years ',size='15')    \nplt.show()\n","6480b919":"top_ratings = movies.groupby(['rating'])['show_id'].count().reset_index(name='count').sort_values(by='count',ascending=False)\nfig_dims = (18,7)\nfig, ax = plt.subplots(figsize=fig_dims)  \nsns.pointplot(x='rating',y='count',data=top_ratings,color='purple')\nplt.title('Top Ratings',size='20')\nplt.show()","a905419f":"from wordcloud import WordCloud, STOPWORDS\ntext3 = ' '.join(movies['listed_in'])\nwordcloud2 = WordCloud( background_color='silver').generate(text3)\n# Generate plot\nplt.imshow(wordcloud2)\nplt.axis(\"off\")\nplt.title('Word Cloud for Type of Movie',size='45')\nplt.show()","bffc9928":"top_contributors = movies.groupby(['country'])['show_id'].count().reset_index(name='count').sort_values(by='count',ascending=False)\nsns.barplot(x='country',y='count',data=top_contributors.head(5))\n# Get current axis on current figure\nax = plt.gca()\n\n# ylim max value to be set\ny_max = top_contributors['country'].value_counts().max() \nax.set_ylim([0,2000])\n\n# Iterate through the list of axes' patches\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d' % int(p.get_height()), \n            fontsize=12, color='black', ha='center', va='bottom')\nplt.title('Contribution by country in Movies',size='15')    \nplt.show()\n\n","55ac8ea9":"usa = Netflix[Netflix.country == 'India']\nusa.head()\n","80fb6ea7":"\n\nsns.countplot(x='type',data=usa)\n# Get current axis on current figure\nax = plt.gca()\n\n# ylim max value to be set\ny_max = usa['type'].value_counts().max() \nax.set_ylim([0, 2000])\n# Iterate through the list of axes' patches\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d' % int(p.get_height()), \n            fontsize=12, color='black', ha='center', va='bottom')\nplt.title('Comparison of Total TV Shows & Movies',size='15')\nplt.show()\n\n","61ef4a76":"top_cat = usa.groupby(['listed_in'])['show_id'].count().reset_index(name='count').sort_values(by='count',ascending=False)\nfig_dims = (18,7)\nfig, ax = plt.subplots(figsize=fig_dims)  \nsns.pointplot(x='listed_in',y='count',data=top_cat.head(5),color='green',ax=ax)\nplt.title('Top categories',size='15')\nplt.show()\n","34df9324":"## Total Releases of Movies for last 10 Years","d754ba0b":"# Movies from different countries","777c84aa":"# Analysis of India","44e614bd":"# Thanks!","d1ec9c20":"## MOVIE ANALYSIS","9ad2cb75":"## Top Ratings"}}