{"cell_type":{"68906ba5":"code","92d15df0":"code","2036f62d":"code","6cb985c4":"code","6cc0c203":"code","6081f2e7":"code","82ccdc8d":"code","da14c513":"markdown","92b94558":"markdown","1c5b894a":"markdown","6dcbed81":"markdown"},"source":{"68906ba5":"import os\nimport json\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom pathlib import Path \nfrom keras.preprocessing.image import load_img","92d15df0":"\ndef get_image_from_imgname(imgname):\n    return load_img(\"\/kaggle\/input\/cassava-leaf-disease-classification\/train_images\/\" + imgname)\n    \n    \n    \ndef sample_from_df_by_label(df, label, size_sample):\n    one_label_df = df[df['label_names'] == label]\n    return one_label_df.sample(size_sample)\n    \ndef sample_x_image_from_each_label(DS, x):\n    dict_labels = dict(DS['label_names'].value_counts())\n    \n    samples = []\n    labels = []\n    for label in dict_labels:\n        samples.append(sample_from_df_by_label(DS, label, size_sample))\n        labels.append(label)\n    \n    return samples, labels\n    \ndef show_img_with_title(img, title, ax):\n    ax.imshow(img)\n    ax.title.set_text(title)\n    ax.axis(\"off\")\n    \n    \n    \ndef calc_mean_color_value_of_imgs_ls(imgs_ls, mean_by_axis):\n    red = np.stack([img[:, :, 0].ravel() for img in imgs_ls]).mean(axis=mean_by_axis)\n    green = np.stack([img[:, :, 1].ravel() for img in imgs_ls]).mean(axis=mean_by_axis)\n    blue = np.stack([img[:, :, 2].ravel() for img in imgs_ls]).mean(axis=mean_by_axis)\n    return red, green, blue\n\n\ndef make_ls_of_imgarray_from_sample(sample):\n    imgs =  []\n    for imgname in sample[\"image_id\"]:\n        img = np.array(get_image_from_imgname(imgname))\n        imgs.append(img)\n    return imgs","2036f62d":"BASE_DIR = Path('\/kaggle\/input\/cassava-leaf-disease-classification')\n\n# Reading DataFrame having Labels\nDS = pd.read_csv(BASE_DIR\/'train.csv')\n\n# Label Mappings\nwith open(BASE_DIR\/'label_num_to_disease_map.json') as f:\n    mapping = json.loads(f.read())\n    mapping = {int(k): v for k,v in mapping.items()}\n\nprint(mapping)\n\n\nDS['label_names'] = DS['label'].map(mapping)\nDS.head(255)","6cb985c4":"fig, ax = plt.subplots(figsize = (10,6))\nimage = get_image_from_imgname(DS.loc[21000, \"image_id\"])\nplt.imshow(image)","6cc0c203":"size_sample = 4\nsamples, k = sample_x_image_from_each_label(DS, size_sample)\n\n\nfig, axes = plt.subplots(size_sample ,5 , figsize=(20, size_sample*5))\ncounter_place = 0\n\nfor sample in samples:\n    for i,(_, row) in enumerate(sample.iterrows()):\n        image = get_image_from_imgname(row.image_id)\n        show_img_with_title(image, row.label_names, axes[i, counter_place])\n    counter_place +=1\n    \nfig.tight_layout()\nplt.show()\n","6081f2e7":"fig, ax = plt.subplots(figsize = (10,6))\n\nsns.countplot(y=DS[\"label_names\"], orient='v')\nplt.title('Target distribution')","82ccdc8d":"fig, axs = plt.subplots(1 ,5 , figsize=(20,5)) \n\nsamples, labels= sample_x_image_from_each_label(DS, 2000)\n\n\nfor i in range(len(samples)):\n    imgs_ls = make_ls_of_imgarray_from_sample(samples[i])\n    red, green, blue = calc_mean_color_value_of_imgs_ls(imgs_ls, 0)\n    sns.kdeplot(red, alpha=0.5, color='red', ax=axs[i])\n    sns.kdeplot(green, alpha=0.5, color='green', ax=axs[i])\n    sns.kdeplot(blue, alpha=0.5, color='blue', ax=axs[i])\n    axs[i].set_title(labels[i])","da14c513":"# image dimensions","92b94558":"# Sample photos by category","1c5b894a":"# Distribution of classes in the array","6dcbed81":"# MEAN Color distribution by categories"}}