{"cell_type":{"56a7035d":"code","80912f7e":"code","7d844527":"code","debe3193":"code","fe111121":"code","5e282faa":"code","d242b7c8":"code","67f87551":"code","574bcdd9":"code","ef844b19":"markdown","1d7aba50":"markdown","be2cc610":"markdown","79760ace":"markdown","791fab75":"markdown","6ec395e7":"markdown","159133c0":"markdown","f122b644":"markdown","f0291274":"markdown","71dfae77":"markdown"},"source":{"56a7035d":"import pandas as pd\n\n\ndataframe = pd.read_csv(\"..\/input\/online-data-science-courses\/dataframe.csv\", index_col=0)\n\ndataframe","80912f7e":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nsns.set_theme(style=\"whitegrid\", palette=sns.color_palette(\"Spectral_r\", 10))\n\nvalid_columns = dataframe.count().to_frame()\nvalid_columns.reset_index(inplace=True)\nvalid_columns = valid_columns.sort_values(0)\n\nfig, ax = plt.subplots(1, 1, figsize=(17.55, 12.405))\n\nsns.barplot(x=\"index\", y=0, data=valid_columns, ax=ax)\nax.set_xlabel(\"Feature\")\nax.set_ylabel(\"Valid records count\")\nax.set_title(\"Amount of valid records per feature\")\nplt.show()","7d844527":"quantitative_features = [\"level\", \"platform\", \"free\"]\n\nfig, ax = plt.subplots(1, 3, figsize=(17.55, 12.405))\nfig.tight_layout()\n\ndataframe_quantitative = dataframe.replace(to_replace=[\"Stepik\", \"Alison\", \"FutureLearn\", \"Pluralsight\"],\n                                           value='Other')\n\nfor i, feature in enumerate(quantitative_features):\n    df_feature = dataframe_quantitative[feature].value_counts().to_frame()\n    df_feature.reset_index(inplace=True)\n    df_feature = df_feature.sort_values(feature, ascending=False)\n    \n    ax[i].pie(df_feature[feature], labels=df_feature[\"index\"], autopct='%.0f%%', startangle=90)\n    ax[i].set_title(f\"Values ratio for '{feature}'\")\n\nplt.show()","debe3193":"dataframe_difficulty = dataframe.groupby(['platform', 'level'])\\\n                                .size()\\\n                                .reset_index(name='counts')\n\ng = sns.catplot(\n    data=dataframe_difficulty, kind=\"bar\", x=\"platform\",\n    y=\"counts\", hue=\"level\", ci=\"sd\"\n)\n\ng.figure.set_size_inches(17.55, 12.405)\ng.set_axis_labels(\"Educational platform\", \"Courses per each level\")\ng.legend.set_title(\"Difficulty levels\")\n\nplt.show()","fe111121":"corrected_rating = dataframe[(dataframe.rating > 0.0) & (dataframe.rating is not None)]\n\nfig, ax = plt.subplots(1, 1, figsize=(17.55, 12.405))\n\nsns.boxplot(x=\"platform\", y=\"rating\",\n            data=corrected_rating, ax=ax)\nsns.despine(offset=10, trim=True)\n\nax.set_xlabel(\"Educational platform\")\nax.set_ylabel(\"Courses rating\")\nax.set_title(\"Rating distribution over platforms\")\n\nplt.show()","5e282faa":"import re\n\nfrom wordcloud import WordCloud\nfrom sklearn.feature_extraction import text\n\n\nre_common_line_separator = re.compile(r'[\\n\\r\\t]+')\nre_punctuation = re.compile(r'[!\"#$%&\\(\\)\\*\\+,\\.\/:;<=>?@\\\\^_`{|}~\\[\\]-]+')\nre_non_unicode = re.compile(r'[^\\u0000-\\u007F]+')\nre_digits_in_words = re.compile(r'\\b(\\w)*(\\d)(\\w)*\\b')\nre_redundant_spaces = re.compile(r'[ ]+')\n\n\ndef text_preprocessing(text: str) -> str:\n    steps = [\n        # Convert sentences to lowercase\n        lambda text: text.lower(),\n        # Substitute common line separator symbols [\\n, \\r, \\t] with spaces\n        lambda text: re_common_line_separator.sub(' ', text),\n        # Remove punctuation\n        lambda text: re_punctuation.sub(' ', text),\n        # Remove Unicode symbols\n        lambda text: re_non_unicode.sub(' ', text),\n        # Remove words that contain digits\n        lambda text: re_digits_in_words.sub('', text),\n        # Remove redundant spaces between each word\n        lambda text: re_redundant_spaces.sub(' ', text),\n        # Strip string\n        lambda text: text.strip()\n    ]\n\n    for step in steps:\n        text = step(text)\n\n    return text\n\n\nstop_words = list(text.ENGLISH_STOP_WORDS)\nwc = WordCloud(stopwords=stop_words, background_color=\"white\", colormap=\"Dark2\")\n\ndataframe_rating = dataframe[(dataframe.rating > 0.0) & (dataframe.rating is not None)].copy()\nrating_sub_masks = { f\"{i} star to {i + 1} star\": (dataframe_rating.rating > float(i)) & (dataframe_rating.rating <= float(i + 1)) for i in range(5) }\n    \nfor sub, mask in rating_sub_masks.items():\n    dataframe_rating.loc[mask, [\"rating\"]] = sub\n\ndataframe_rating_agg = dataframe_rating[[\"title\", \"rating\"]].groupby(\"rating\").apply(lambda x: text_preprocessing(\" \".join(x['title']))).to_frame(name='agg_titles')\n\nfig_columns, fig_rows = (3, 2)\nfig, ax = plt.subplots(fig_columns, fig_rows, figsize=(17.55, 12.405))\nfig.delaxes(ax[fig_columns - 1, fig_rows - 1])\nfig.tight_layout()\n\nfor index, row in enumerate(dataframe_rating_agg.iterrows()):\n    category, keywords = row\n\n    wc.generate(keywords['agg_titles'])\n    \n    ax[index \/\/ fig_rows, index % fig_rows].imshow(wc, interpolation=\"bilinear\")\n    ax[index \/\/ fig_rows, index % fig_rows].axis(\"off\")\n    ax[index \/\/ fig_rows, index % fig_rows].set_title(f\"Word distribution for rating '{category}'\")\n    \nplt.show()","d242b7c8":"import numpy as np\n\n\ndataframe_rating = dataframe[(dataframe.rating > 0.0) & (dataframe.rating is not None)].copy()\n\ndataframe_top_distributors = dataframe_rating[[\"author\", \"title\"]].groupby(\"author\").count().sort_values(\n    by=[\"title\"], ascending=[False]\n).iloc[:20]\n\n# TOP-20 organization with the biggest amount of courses available\ntop_distributors = dataframe_top_distributors.index.values\n\ndataframe_top_distributors_rating = dataframe_rating[\n    dataframe_rating[\"author\"].isin(top_distributors)\n].groupby(\"author\").agg(\n    mean=pd.NamedAgg(column=\"rating\", aggfunc=\"mean\"),\n    std=pd.NamedAgg(column=\"rating\", aggfunc=\"std\"),\n).sort_values(by=[\"mean\"], ascending=[True])\n\ndataframe_top_distributors_rating.reset_index(inplace=True)\n\nfig, ax = plt.subplots(1, 1, figsize=(17.55, 12.405))\n\nax.barh(dataframe_top_distributors_rating[\"author\"], dataframe_top_distributors_rating[\"mean\"],\n        xerr=dataframe_top_distributors_rating[\"std\"], align='center', capsize=5, color=sns.color_palette(\"Spectral_r\", 60))\n\nax.set_xlabel(\"Average rating\")\nax.set_ylabel(\"\")\nax.set_title(\"Average rating of TOP-20 organization with the biggest amount of courses available\")\nax.set_xlim(left=0.0, right=5.0)\n\nplt.show()","67f87551":"from sklearn.preprocessing import LabelEncoder\n\n\nencoder = LabelEncoder()\n\ndataframe_rating = dataframe[(dataframe.rating > 0.0) & (dataframe.rating is not None)].copy()\ndataframe_corr = dataframe_rating[[\"rating\", \"students_count\", \"level\", \"duration\", \"free\"]].copy()\n\ndataframe_corr['level'] = encoder.fit_transform(dataframe_corr['level'].values)\ndataframe_corr['free'] = encoder.fit_transform(dataframe_corr['free'].values)\n\nfig, ax = plt.subplots(1, 1, figsize=(17.55, 12.405))\nsns.heatmap(dataframe_corr.corr(), annot=True, ax=ax, cmap=\"Spectral_r\", vmin=-1.0, vmax=1.0)\n\nax.set_title(\"Correlation between course features\")\nplt.show()","574bcdd9":"dataframe_rating = dataframe[(dataframe.rating > 0.0) & (dataframe.rating is not None)].copy()\n\ng = sns.displot(data=dataframe_rating, x=\"rating\", hue=\"free\", kde=True)\n\ng.figure.set_size_inches(17.55, 12.405)\ng.set_axis_labels(\"Rating\", \"Occurence\")\ng.legend.set_title(\"Is free?\")\ng.ax.set_title(\"Kernel density functions for rating distribution\")\n\nplt.show()","ef844b19":"### Insights\n\n 1. The majority of the Data Science courses are dedicated to Beginners;\n 2. The most common keywords in Data Science courses are: `Python`, `Machine learning`, `Data`, `R`, `Deep Learning`, `Statistics`, `TensorFlow` e.t.c.;\n 3. `Udemy` is the most suitable platform for Beginners and General level students, and `Coursera` - for Intermediate and Expert;\n 4. Among platforms with the most significant amount of content, `Coursera` has the highest average rating;\n 5. Top tech organizations that have the highest average rating are `SAS`, `DeepLearning.AI`, `IBM`, and top educational organizations are `The University of Michigan`, `University of California`, `Johns Hopkins University`;\n 6. The rating of the course may indeed depend on whether it is free or not;\n \n### Techstack\n\nWebcrawlers\n\n![Python](https:\/\/img.shields.io\/badge\/Python-3776AB?style=for-the-badge&logo=python&logoColor=white)\n![Selenium](https:\/\/img.shields.io\/badge\/Selenium-43B02A?style=for-the-badge&logo=Selenium&logoColor=white)\n![Zyte](https:\/\/img.shields.io\/badge\/Zyte-E10098?style=for-the-badge&logoColor=white)\n![Scrapy+Splash](https:\/\/img.shields.io\/badge\/Scrapy+Splash-60a839?&style=for-the-badge&logoColor=white)\n\nProcessing pipelines\n\n![Conda](https:\/\/img.shields.io\/badge\/conda-342B029.svg?&style=for-the-badge&logo=anaconda&logoColor=white)\n![Jupyter](https:\/\/img.shields.io\/badge\/Jupyter-F37626.svg?&style=for-the-badge&logo=Jupyter&logoColor=white)\n![Apache Spark](https:\/\/img.shields.io\/badge\/Apache_Spark-FFFFFF?style=for-the-badge&logo=apachespark&logoColor=#E35A16)\n\nDashboard\n\n![Streamlit](https:\/\/img.shields.io\/badge\/Streamlit-FF4B4B?style=for-the-badge&logo=Streamlit&logoColor=white)\n![Plotly](https:\/\/img.shields.io\/badge\/Plotly-239120?style=for-the-badge&logo=plotly&logoColor=white)\n![Pandas](https:\/\/img.shields.io\/badge\/Pandas-2C2D72?style=for-the-badge&logo=pandas&logoColor=white)\n\n\n### Thank you for interest in this topic\n\nThe primary intent of this EDA was to answer popular questions for beginners when choosing a Data Science course. I hope that at least someone who read it found any helpful information! To upvote this notebook or not, it's up to you. Just keep in mind that I'm not an expert; I'm still learning, so if you find any mistake or have a suggestion, leave it in the comments. I'd appreciate any feedback on this work!","1d7aba50":"To make the course grab the student's attention, distributors have to develop relevant titles for the preview. Courses may not meet the user's expectations if they cover topics inappropriate for Data Science, like coding interviews or web development. Indeed, courses with a low rating tend to contain off-topic keywords in the title, like \"Tetris\", \"JS\", \"Web\" e.t.c. And courses with the highest rating include more appropriate keywords, like \"Python\", \"Machine learning\", \"Statistics\" e.t.c.","be2cc610":"### Missing values\n\nSome insights on how many records available per each column. Platforms with *small set* of courses usually **do not provide** additional information about course, like: enrolled students count, lectures durations, e.t.c.","79760ace":"## What depends on the course rating?\n\nThe rating metric may give some insights into the quality of the provided learning material in the course, although it doesn't guarantee an exact quality. Platforms with high content variety tend to record it, so it is missing on Alison and edX. The expected rating is the highest on the Coursera platform, from 4 to 5 stars (without including outliers) and the average value. *So for students, who seek **paid quality content**, Coursera is the best choice.*","791fab75":"The **Beginner** level is the level of most courses, dedicated for students who only started their Data Science journey or for learners who want to try themselves in another field of activity. **Udemy** platform offers the greatest amount of courses for **Beginner** and **General** levels, which are the most suitable levels for the learners' group mentioned above. For more experienced learners, **Coursera** is a better choice in terms of content variety for **Intermediate** and **Advanced** levels.","6ec395e7":"Distributional platform and title relevance may influence the course rating, but they are probably not the only metrics that affect the user experience. These are the following candidates that may also contribute to the course rating with the assumptions:\n- **Active enrolled students** - the higher students amount, the more trust in the course from the community;\n- **Level** - courses with general level may fall into a specific level category;\n- **Duration** - courses with a longer timespan may cover topics not related to the user expectations;\n- **Is the course free?** - if the course has a cost, it may be developed by commercial organizations with a professional approach, resulting in higher quality.","159133c0":"## Which platform is more suitable for a specific level?\n\nThe Data Science field is not a **\"buzzword\"** anymore, nevertheless there are still cases when people switch jobs to become Data Scientists. So it's reasonable to assume that majority of the courses is dedicated to the `Beginners`, which is true according to the difficulty level distribution of the data.\n\nOverviewed educational platforms are the most popular among existing on the Internet. Here is shown which platforms provide more content than others.\n\nThird-party commercial organizations publish most of the courses (like IBM, DeepLearning.AI, e.t.c.), so, as expected, the more significant part of the courses is paid.","f122b644":"Free\/paid and rating are the only metrics with a high enough correlation value to be somehow related. Their moderate negative correlation means that free courses tend to get a lower rating, while paid courses get a higher rating. From the general cases we know, that correlation is not causation. Still, the assumption above explains this moderate relation well. The probability estimation with the \"kernel density\" below supports this assumption (the most probable paid course rating is around 4.5, while free - approximately 3.0).","f0291274":"Remember that platforms are only responsible for distributing the courses, while their creation depends entirely on third-party organizations'. Among the technical organizations with the highest rating, there are SAS, DeepLearning.AI, and IBM. Meanwhile, educational institutes with the highest rating are The University of Michigan, University of California, Johns Hopkins University.","71dfae77":"# [EDA] Which DS online course to take first?\n\n---\n\n[![Source Code](https:\/\/img.shields.io\/badge\/GitHub-100000?style=for-the-badge&logo=github&logoColor=white)](https:\/\/github.com\/antonAce\/data-science-courses)\n[![Kaggle notebook](https:\/\/img.shields.io\/badge\/Kaggle-20BEFF?style=for-the-badge&logo=Kaggle&logoColor=white)](https:\/\/www.kaggle.com\/antonkozyriev\/which-ds-online-course-to-take-first)\n[![Made with StreamLit](https:\/\/img.shields.io\/badge\/Streamlit-FF4B4B?style=for-the-badge&logo=Streamlit&logoColor=white)](https:\/\/data-science-courses.herokuapp.com\/)\n\n\n![nick-morrison-FHnnjk1Yj7Y-unsplash.jpg](attachment:a9b9052d-f5b3-489b-b86f-1e2033985d60.jpg)\n\n*[Image by Nick Morrison from unsplash.com](https:\/\/unsplash.com\/photos\/FHnnjk1Yj7Y)*\n\n\n### Context\n\nNowadays, online educational platforms provide a vast amount of online courses. For self-learning beginners in Data Science, sometimes it's hard to choose an online lecture to start. This EDA intends to answer common questions when choosing a new study like **\"Does a paid course provide higher quality than a free one?\"** or **\"Which platform is the most suitable for beginners?\"**, and also to discover which online platform provides the highest educational quality.\n\n### Acknowledgements\n\nData was collected via web scraping from popular online platforms: [Coursera](https:\/\/www.coursera.org), [Stepik](https:\/\/stepik.org), [Udemy](https:\/\/www.udemy.com), [edX](https:\/\/www.edx.org), [Pluralsight](https:\/\/www.pluralsight.com), [Alison](https:\/\/alison.com), [FutureLearn](https:\/\/www.futurelearn.com), and [Skillshare](https:\/\/www.skillshare.com). From each platform were queried courses only related to the \"Data Science\" topic.\n\n### Data preview\n\nStructure of the collected data."}}