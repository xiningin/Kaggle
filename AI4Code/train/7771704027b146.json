{"cell_type":{"88c000b7":"code","3f1aa67a":"code","41d90a1e":"code","7627e842":"code","765b536e":"code","d4abc938":"code","10ffff69":"code","2c04ada9":"code","b006245d":"code","7b9756c0":"markdown","199133c8":"markdown","3d905d1f":"markdown","f45c197a":"markdown","2329aee7":"markdown","8fcd1eb6":"markdown","34bf7b36":"markdown","7d90c184":"markdown","a9a1f6d6":"markdown","4c60ce09":"markdown","8579387d":"markdown","aa896758":"markdown","49ed267f":"markdown","0802e894":"markdown","f0714bab":"markdown"},"source":{"88c000b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3f1aa67a":"fellowship_of_the_kaggle = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv\")","41d90a1e":"fellowship_of_the_kaggle[\"Q3\"] = fellowship_of_the_kaggle.Q3.apply(lambda x: \"Iran\" if x == \"Iran, Islamic Republic of...\" else x)\nIT = fellowship_of_the_kaggle[(fellowship_of_the_kaggle[\"Q3\"] == \"Iran\") | (fellowship_of_the_kaggle[\"Q3\"] == \"Turkey\")]\n\ncountry=fellowship_of_the_kaggle.Q3.value_counts()\n\nfig = go.Figure(go.Treemap(\n    labels=country.index,\n    parents = [\"World\"]*len(country),\n    values =  country\n))\n\nfig.show()\n","7627e842":"plt.figure(figsize=(15, 8))\n\nax = sns.countplot(x=\"Q1\", hue=\"Q3\", data=IT)\nplt.xlabel(\"Age distribution\")\nplt.xticks(rotation=0, size=13)\n\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), \".0f\"), (p.get_x() + p.get_width() \/ 2. ,p.get_height()), \n              ha=\"center\", va=\"center\", xytext=(0, 10), textcoords = \"offset points\")","765b536e":"fig = make_subplots(rows=1, cols=2, specs=[[{\"type\" : \"pie\"}, {\"type\" : \"pie\"}]], subplot_titles=(\"IRAN\", \"TURKEY\"))\n\nfig.add_trace(\n    go.Pie(labels=IT[IT.Q3 == \"Iran\"].Q2.value_counts()[:2].index, values=IT[IT.Q3 == \"Iran\"].Q2.value_counts()[:2].values),\n    row=1, col=1\n)\n\nfig.add_trace(\n    go.Pie(labels=IT[IT.Q3 == \"Turkey\"].Q2.value_counts()[:2].index, values=IT[IT.Q3 == \"Turkey\"].Q2.value_counts()[:2].values),\n    row=1, col=2\n)\n\nfig.update_layout(height=400, showlegend=True)\nfig.show()","d4abc938":"fig = make_subplots(rows=2, cols=2, specs=[[{\"type\" : \"bar\"}, {\"type\" : \"bar\"}], [{\"type\" : \"bar\"}, {\"type\" : \"bar\"}]]\n                    , subplot_titles=(\"compensation in Iran\", \" compensation in TURKEY\", \" Money Spent in Iran in this field\", \"money Spent in Turkey in this field\"))\n\nfig.add_trace(\n    go.Bar(x=IT[IT.Q3 == \"Iran\"].Q10.value_counts().index, y=IT[IT.Q3 == \"Iran\"].Q10.value_counts().values, name=\"Iran\"),\n    row=1, col=1\n)\n\nfig.add_trace(\n    go.Bar(x=IT[IT.Q3 == \"Turkey\"].Q10.value_counts().index, y=IT[IT.Q3 == \"Turkey\"].Q10.value_counts().values, name=\"Turkey\"),\n    row=1, col=2\n)\n\nfig.add_trace(\n    go.Bar(x=IT[IT.Q3 == \"Iran\"].Q11.value_counts().index, y=IT[IT.Q3 == \"Iran\"].Q11.value_counts().values, name=\"Iran\"),\n    row=2, col=1\n)\n\nfig.add_trace(\n    go.Bar(x=IT[IT.Q3 == \"Turkey\"].Q11.value_counts().index, y=IT[IT.Q3 == \"Turkey\"].Q11.value_counts().values, name=\"Turkey\"),\n    row=2, col=2\n)\n\nfig.update_layout(height=800, showlegend=False )\nfig.show()","10ffff69":"fig = make_subplots(rows=2, cols=2, specs=[[{\"type\" : \"pie\"}, {\"type\" : \"pie\"}], [{\"type\" : \"pie\"}, {\"type\" : \"pie\"}]]\n                    , subplot_titles=(\"background coding in analyse (IRAN)\", \" background coding in analyse(Turkey)\", \"background coding in Machine Learning(Iran)\", \"background coding in Machine Learning(Turkey)\"))\n\nfig.add_trace(\n    go.Pie(labels=IT[IT.Q3 == \"Iran\"].Q15.value_counts().index, values=IT[IT.Q3 == \"Iran\"].Q15.value_counts().values, name=\"Iran\"),\n    row=1, col=1\n)\n\nfig.add_trace(\n    go.Pie(labels=IT[IT.Q3 == \"Turkey\"].Q15.value_counts().index, values=IT[IT.Q3 == \"Turkey\"].Q15.value_counts().values, name=\"Turkey\"),\n    row=1, col=2\n)\n\nfig.add_trace(\n    go.Pie(labels=IT[IT.Q3 == \"Iran\"].Q23.value_counts().index, values=IT[IT.Q3 == \"Iran\"].Q23.value_counts().values, name=\"Iran\"),\n    row=2, col=1\n)\n\nfig.add_trace(\n    go.Pie(labels=IT[IT.Q3 == \"Turkey\"].Q23.value_counts().index, values=IT[IT.Q3 == \"Turkey\"].Q23.value_counts().values, name=\"Turkey\"),\n    row=2, col=2\n)\n\nfig.update_layout(height=800, showlegend=True )\nfig.show()","2c04ada9":"iran_df = IT[IT.Q3 == \"Iran\"].Q14.value_counts()\nturkey_df = IT[IT.Q3 == \"Turkey\"].Q14.value_counts()\n\nfig = go.Figure(data=[\n    go.Bar(x=iran_df.index[:2],y=iran_df.values[:2],name=\"IRAN\"),\n    go.Bar(x=turkey_df.index[:2],y=turkey_df.values[:2],name=\"Turkey\")\n])\nfig.update_layout(barmode='group', height=400)\nfig.show()","b006245d":"lang = {}\nlang['Python']=IT[IT.Q3 == \"Iran\"].Q18_Part_1.value_counts().sum()\nlang['R']=IT[IT.Q3 == \"Iran\"].Q18_Part_2.value_counts().sum()\nlang['SQL']=IT[IT.Q3 == \"Iran\"].Q18_Part_3.value_counts().sum()\nlang['C']=IT[IT.Q3 == \"Iran\"].Q18_Part_4.value_counts().sum()\nlang['C++']=IT[IT.Q3 == \"Iran\"].Q18_Part_5.value_counts().sum()\nlang['Java']=IT[IT.Q3 == \"Iran\"].Q18_Part_6.value_counts().sum()\nlang['Javascript']=IT[IT.Q3 == \"Iran\"].Q18_Part_7.value_counts().sum()\nlang['TypeScript']=IT[IT.Q3 == \"Iran\"].Q18_Part_8.value_counts().sum()\nlang['Bash']=IT[IT.Q3 == \"Iran\"].Q18_Part_9.value_counts().sum()\nlang['MATLAB']=IT[IT.Q3 == \"Iran\"].Q18_Part_10.value_counts().sum()\nlang['None']=IT[IT.Q3 == \"Iran\"].Q18_Part_11.value_counts().sum()\nlang['Other']=IT[IT.Q3 == \"Iran\"].Q18_Part_12.value_counts().sum()\n\niran_lang_df = pd.DataFrame(lang.items(), columns=[\"Language\", \"Count\"])\n\nlang2 = {}\nlang2['Python']=IT[IT.Q3 == \"Turkey\"].Q18_Part_1.value_counts().sum()\nlang2['R']=IT[IT.Q3 == \"Turkey\"].Q18_Part_2.value_counts().sum()\nlang2['SQL']=IT[IT.Q3 == \"Turkey\"].Q18_Part_3.value_counts().sum()\nlang2['C']=IT[IT.Q3 == \"Turkey\"].Q18_Part_4.value_counts().sum()\nlang2['C++']=IT[IT.Q3 == \"Turkey\"].Q18_Part_5.value_counts().sum()\nlang2['Java']=IT[IT.Q3 == \"Turkey\"].Q18_Part_6.value_counts().sum()\nlang2['Javascript']=IT[IT.Q3 == \"Turkey\"].Q18_Part_7.value_counts().sum()\nlang2['TypeScript']=IT[IT.Q3 == \"Turkey\"].Q18_Part_8.value_counts().sum()\nlang2['Bash']=IT[IT.Q3 == \"Turkey\"].Q18_Part_9.value_counts().sum()\nlang2['MATLAB']=IT[IT.Q3 == \"Turkey\"].Q18_Part_10.value_counts().sum()\nlang2['None']=IT[IT.Q3 == \"Turkey\"].Q18_Part_11.value_counts().sum()\nlang2['Other']=IT[IT.Q3 == \"Turkey\"].Q18_Part_12.value_counts().sum()\n\nturkey_lang_df = pd.DataFrame(lang2.items(), columns=[\"Language\", \"Count\"])\n\n\nfig = make_subplots(rows=1, cols=2, specs=[[{\"type\" : \"pie\"},{\"type\" : \"pie\"}]], subplot_titles=('IRAN',\"Turkey\"))\n\nfig.add_trace(go.Pie(labels=iran_lang_df.Language, values=iran_lang_df.Count, name=\"Iran\"), row=1, col=1)\nfig.add_trace(go.Pie(labels=turkey_lang_df.Language, values=turkey_lang_df.Count, name=\"Turkey\"), row=1, col=2)\n\nfig.update_layout(height=800, showlegend=True)\n\nfig.update_traces(hole=.4)# to create donut like pie chart\n\nfig.show()","7b9756c0":"## 4. It's about MONEY","199133c8":"## 1. let's see how is the distribution of users in all over the world","3d905d1f":"![machineLearning enginners analysis](https:\/\/www.google.com\/url?sa=i&source=images&cd=&ved=2ahUKEwi8jP-voY_mAhWyY98KHU4HCDgQjRx6BAgBEAQ&url=https%3A%2F%2Fnorthconcepts.com%2Fblog%2F2017%2F11%2F30%2Fmachine-learning-artificial-intelligence-conferences%2F&psig=AOvVaw2fB7ZLsiT6H6hINCP5mIa0&ust=1575110319422465)\n\n\nkaggle published 2019 Kaggle ML & DS Survey. So many usefull info to mine. <br> <br>\nI decided to check about my region and see how are other kagglers working. In this notebook I compared Iranian kagglers and Turkish kagglers.","f45c197a":"as expected men are more. ","2329aee7":"as we see there are many ML giants like India, Usa, ... . middle east countries are there too : <br>\n* Egypt : 122 \n* Pakistan : 210\n* Iran : 91\n* Turkey : 288\n* Saudi Arabia : 50\n* Israel : 104","8fcd1eb6":"## 3. gender ratio","34bf7b36":"## 2. compare age of kagglers","7d90c184":"## 5. let's check coding background of kagglers","a9a1f6d6":"huge difference in  **compensation** .<br> <br> but you must get the point. Iran's Rial (iran's Monetary unit) is really really really really cheap ( bad for us ). so now you can guess why there is this much difference.","4c60ce09":"Both prefer local enviremnet\nas I checked [Sahib singh](https:\/\/www.kaggle.com\/sahib12) notebook in India and USA we had same result","8579387d":"## 6. environmenets we use","aa896758":"## 7. At Last, Programming Language","49ed267f":"as we can see most of engineers have less than 5years of experience. (just like me)<br>\nbut be aware, this field is new somehow.","0802e894":"I could guess Python be first<br><br><br>\n\n\n\nAT ALL, When I checked other users notebooks there was same results in many cases, just in some fileds because of political and weird situation of some countries ( like my country :D ) something were different(for example everything about money).\n<br>\n\n\nthanks for reading.","f0714bab":"good data. as we see 20-30 has most kagglers. <br>\n40-49 in turkey kagglers was amazing for me there are 33 engineers."}}