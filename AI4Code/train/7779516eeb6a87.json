{"cell_type":{"aae45812":"code","b6181650":"code","13fb1706":"code","031c59f9":"code","efc79f65":"code","8170d870":"code","3004e581":"code","d68453d7":"code","0c0e61dd":"code","ab3b267c":"code","a90edf67":"code","5b0250d8":"markdown","d12e5e60":"markdown","2d1d92fd":"markdown","122cd786":"markdown","043fc402":"markdown","b108cffd":"markdown","fa5ed923":"markdown","9ff1dbdb":"markdown","a5cc9bde":"markdown","d84763a0":"markdown","29dc1866":"markdown"},"source":{"aae45812":"import numpy as np\nimport pandas as pd\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Dropout\n\ndata = pd.read_csv('..\/input\/mobile-price-classification\/train.csv')\ndata.head()","b6181650":"data.describe()","13fb1706":"data.isna().sum()","031c59f9":"data.isnull().sum()","efc79f65":"import math\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\ndef make_box_plots(df, cols=4, rows=-1):\n    if (rows == -1):\n        rows = math.ceil(len(df.columns)\/cols)\n    fig = make_subplots(\n        rows,\n        cols,\n        subplot_titles = df.columns\n    )\n\n    i = 1\n    j = 1\n\n    for col in df.columns:\n        fig.append_trace(go.Box(y=df[:][col]), i, j)\n        if j < cols:\n            j += 1\n        else:\n            j = 1\n            i += 1\n    fig.update_layout(\n        autosize=False,\n        width=1200,\n        height=2000,\n        margin=dict(\n            l=50,\n            r=50,\n            b=100,\n            t=100,\n            pad=4\n        ),\n        paper_bgcolor=\"LightSteelBlue\",\n    )\n    fig.show()\n    \nmake_box_plots(data)","8170d870":"fig = make_subplots(rows=10, cols=3)\n\nfor i, col in enumerate(data.columns):\n    fig.add_trace(go.Histogram(x=data[col], name=col), row=(i\/\/3)+1, col=(i%3)+1)\n    \nfig.update_layout(height=900,)\n    \nfig.show()\n","3004e581":"corr = data.corr()\ncorr.style.background_gradient(cmap='plasma').set_precision(2)","d68453d7":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\n#columnSet = set(data.columns)\n#selectedFeatures = {\"battery_power\",\"px_width\",\"ram\"}\n#result = columnSet.difference(columnsToLeave)\n\nY = data['price_range']\nX = data[[\"battery_power\",\"px_width\",\"ram\", \"px_height\"]]\n\nscaled_data = pd.DataFrame(scaler.fit_transform(X, Y), columns=X.columns)\nscaled_data.head()","0c0e61dd":"num_classes = 4\nY = keras.utils.to_categorical(Y, num_classes)\ninput_shape = (4)\n\nmodel = keras.Sequential(\n    [\n        keras.Input(shape=input_shape),\n        #layers.Flatten(),\n        layers.Dense(200, activation=\"relu\"),\n        layers.Dense(num_classes, activation=\"softmax\"),\n    ]\n)\nmodel.build(input_shape)\nmodel.summary()","ab3b267c":"model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","a90edf67":"history = model.fit(X, Y, epochs=10, batch_size=250, verbose=1, validation_split=0.4)","5b0250d8":"### Histograms","d12e5e60":"# Mobile Price Classification","2d1d92fd":"### Check for null and NaN values","122cd786":"### Statistical Description","043fc402":"## Neural Network","b108cffd":"## Data Load","fa5ed923":"### Box Plots","9ff1dbdb":"### Compilation","a5cc9bde":"## Scaling","d84763a0":"### Correlation Matrix","29dc1866":"## Data Analysis"}}