{"cell_type":{"68eff2a1":"code","954c22d7":"code","da8ce692":"code","dd9716ea":"code","a9e8ef58":"code","3a7cbd26":"code","71869d25":"code","fad0f6ac":"code","154551d3":"code","0fe0ef00":"code","78667c55":"code","0aa4cd22":"code","ac132f58":"code","7572db42":"code","e5d160e6":"code","f9301458":"code","17cc4074":"code","bde8ee0c":"code","5f36c836":"code","5dbe9cf0":"code","f5bf340a":"code","190943f7":"code","833ca8bb":"code","f2987d5d":"code","95cd4df1":"code","1459e190":"code","768d09b8":"code","bc2b2a7a":"code","5518c9fe":"code","42125a75":"code","eb2c5c81":"code","b2a19f34":"code","6f6c0449":"code","09859264":"code","22cb70cf":"code","af9b6758":"code","2b78b366":"code","59f20c98":"code","f7e439df":"code","be2cc42d":"code","9ed088ec":"code","98c5f43f":"markdown","5d9e7194":"markdown","385d11ed":"markdown","d9cfee3d":"markdown","cb6068e9":"markdown","d4a1e1c0":"markdown","ae6270d7":"markdown","3b825914":"markdown","e0aa7bea":"markdown","e2dc2ad9":"markdown","970dd2ca":"markdown","f3e0cd91":"markdown","626d6086":"markdown","2a7a86f8":"markdown","f56619d9":"markdown","740c0eac":"markdown","3c87fda9":"markdown","6d7e14ff":"markdown","ee9fb561":"markdown","6af9a2b9":"markdown"},"source":{"68eff2a1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport missingno as msno\nfrom plotly import __version__\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\nimport plotly.graph_objs as go \ninit_notebook_mode(connected=True) \nimport calendar\nimport os\nimport glob\nimport sys\nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")","954c22d7":"df_district = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")","da8ce692":"df_district.head()","dd9716ea":"df_district[\"district_id\"]=df_district[\"district_id\"].astype(\"int32\")","a9e8ef58":"msno.bar(df_district,figsize=(5,2),sort=\"ascending\",color=\"#cc99ff\",fontsize=9)","3a7cbd26":"def avg_col(x):\n    try:\n        x_avg=sum(list(map(float,x.strip(\"[\").split(\", \"))))\/2\n        return x_avg\n    except:\n        return x\ndf_district[\"avg_pct_black\/hispanic\"] = df_district[\"pct_black\/hispanic\"].apply(avg_col) \ndf_district[\"avg_pct_free\/reduced\"] = df_district[\"pct_free\/reduced\"].apply(avg_col)\ndf_district[\"avg_pp_total_raw\"] = df_district[\"pp_total_raw\"].apply(avg_col)\nsns.heatmap(data=df_district[[\"avg_pct_black\/hispanic\",\"avg_pct_free\/reduced\",\"avg_pp_total_raw\"]].corr(),annot=True)","71869d25":"def func_plot(df,col1):\n    fig,ax = plt.subplots(1,2,figsize=(10,3))\n    sns.countplot(data=df,y=col1,ax=ax[0],order=df[col1].value_counts().index,orient=\"v\")\n    ax[0].set_title(col1)\n    ax[1].pie(x=df[col1].value_counts(),labels=df[col1].value_counts().index,autopct='%1.0f%%')\n    ax[1].set_title(col1)\nprint(\"Percentage of total number of districts having different pct_black\/hisponic,pct_free\/reduced,county_connections_ratio\")\nfunc_plot(df_district,\"pct_black\/hispanic\")\nfunc_plot(df_district,\"pct_free\/reduced\")\nfunc_plot(df_district,\"county_connections_ratio\")    ","fad0f6ac":"print(\"Percentage of total number of districts having different pp_total_raw\")\nfig,ax = plt.subplots(1,1,figsize=(5,5))\nexplode = (0.01, 0.05, 0.05, 0.05,0.01,0.05,0.05,1,1,1,1)\ncolors= (\"cyan\",\"orange\",\"lightgreen\",\"yellow\")\nax.pie(x=df_district[\"pp_total_raw\"].value_counts(),labels=df_district[\"pp_total_raw\"].value_counts().index,autopct='%1.1f%%',explode=explode,colors=colors)\nax.set_title(\"pp_total_raw\")\n# 25.4% districts have per pupil total expenditure in the range of [8000,10000) . There is only one district in state whose per pupil expenditure is in the range of [32000, 34000).\ndf_district[df_district[\"pp_total_raw\"]==\"[32000, 34000[\"].style.applymap(lambda x: 'color:red;')","154551d3":"fig,ax = plt.subplots(1,1,figsize=(5,5))\nexplode = (0.05, 0.05, 0.05, 0.05)\ncolors=([\"#d45d00\",\"#ff9100\",\"#eaaa00\",\"#6d6875\"])\nax.pie(x=df_district.locale.value_counts().values,explode=explode,labels=df_district.locale.value_counts().index,autopct='%1.0f%%',colors=colors)\nax.set_title(\"dis_locale\")","0fe0ef00":"def local_count(df,col1,col2):\n    fig,ax=plt.subplots(figsize=(10,3))\n    plt.suptitle(f\"{col2} distributed districts in every locale areas\")\n    sns.countplot(data=df,x=col1,hue=col2,order=df[col1].value_counts().index,palette=\"tab10\",orient=\"v\")\n    ax.grid(color='b', alpha=0.5, linestyle='dashed', linewidth=0.5)\n    plt.legend(bbox_to_anchor=(1,0), loc=\"lower left\")\nlocal_count(df_district,\"locale\",\"pct_black\/hispanic\")\nlocal_count(df_district,\"locale\",\"pct_free\/reduced\")\nlocal_count(df_district,\"locale\",\"pp_total_raw\")\nprint(\"pct_black\/hispanic in every locale area\")","78667c55":"fig,ax=plt.subplots(figsize=(8,5))\nsns.countplot(data=df_district,y=\"state\",order=df_district.state.value_counts().index,palette=\"rainbow\",orient=\"v\")\nfig.suptitle(\"Number of districts in each state whose data is given\")\ntotal=df_district[\"state\"].value_counts().sum()\nfor i,v in enumerate(df_district[\"state\"].value_counts().sort_values(ascending=False).values):\n    frac1 = (v\/total)*100\n    frac = \"{:.2f}\".format(frac1)\n    v1 = str(v)+' ('+str(frac)+'%)'\n    ax.text(v*1.01, i, v1,fontsize=10,color='black',weight='bold')","0aa4cd22":"def state_pivot(df,col1,col2,col3):\n    pv=pd.pivot_table(data=df,index=[col3],aggfunc=[len],values=[col2],columns=[col1],fill_value=0)\n    pv.plot.bar(figsize=(10,3)).legend(bbox_to_anchor=(1.02, 1),title=f\"Total number of districts having different {col1}\",fontsize='large')\nstate_pivot(df_district,\"pct_black\/hispanic\",\"district_id\",\"state\")\nstate_pivot(df_district,\"pct_free\/reduced\",\"district_id\",\"state\")\nstate_pivot(df_district,\"pp_total_raw\",\"district_id\",\"state\")","ac132f58":"df_district[\"state\"].value_counts().index","7572db42":"df_product = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\ndf_product.head()","e5d160e6":"df_product=df_product.rename(columns={\"LP ID\":\"lp_id\"})\nmsno.bar(df_product,figsize=(3,2),sort=\"ascending\",color=\"#b4f0a7\",fontsize=9)","f9301458":"plt.figure(figsize=(7,5))\nsns.countplot(data=df_product,y=\"Provider\/Company Name\",orient=\"v\",order=df_product[\"Provider\/Company Name\"].value_counts().head(14).index)\nprint(\"Name of Companies having maximum products\")","17cc4074":"fig,ax=plt.subplots(figsize=(8,2))\nsns.countplot(data=df_product,y=\"Sector(s)\",order=df_product[\"Sector(s)\"].value_counts().index,orient=\"v\")","bde8ee0c":"def func(x):\n    try:\n        if x[:2]==\"LC\":\n            return \"LC\"\n        elif x[:2]==\"CM\":\n            return \"CM\"\n        elif x[:3]==\"SDO\":\n            return \"SDO\"\n    except:\n        return x\ndf_product[\"Primary_essential_func\"]=df_product[\"Primary Essential Function\"].apply(func)\nfig,ax=plt.subplots(1,2,figsize=(10,5))\nexplode=(0.05,0.05,0.05)\nax[1].pie(x=df_product[\"Primary_essential_func\"].value_counts(),colors=[\"#ffb789\",\"#18ff8f\",\"#1cfbff\"],labels=df_product[\"Primary_essential_func\"].value_counts().index,explode=explode,autopct=\"%1.0f%%\")\nsns.countplot(data=df_product,x=\"Primary_essential_func\",orient=\"v\",ax=ax[0],palette=\"rainbow\")","5f36c836":"def sub_func(x):\n    try:\n        if x[:2]==\"LC\":\n            return x[3:]\n        elif x[:2]==\"CM\":\n            return x[3:]\n        elif x[:3]==\"SDO\":\n            return x[4:]\n    except:\n        return x\ndf_product[\"Primary_essential_subfunc\"]=df_product[\"Primary Essential Function\"].apply(sub_func)   \nplt.figure(figsize=(12,7))\nsns.countplot(data=df_product,y=\"Primary_essential_subfunc\",orient=\"v\",palette=\"rainbow\",order=df_product[\"Primary_essential_subfunc\"].value_counts().index)\nplt.suptitle(\"Primary_essential_subfunction\")","5dbe9cf0":"plt.figure(figsize=(14,3))\nsns.countplot(data=df_product,x=\"Sector(s)\",hue=\"Primary_essential_func\",palette=\"rainbow\")\nplt.legend(loc=1)","f5bf340a":"path='..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data'\n\nos.chdir(path)\n\nextension = 'csv'\n\nall_filenames = [i for i in glob.glob(\"*.{}\".format(extension))]\nall_filenames=all_filenames[:-1]\nlst = []\nfor file_name in all_filenames:\n    df = pd.read_csv(file_name)\n    df[\"district_id\"] = int(file_name[:-4]) \n    lst.append(df)\ndata=pd.concat(lst)\ndf_engagement=data.reset_index(drop=True)\ndf_engagement.head()","190943f7":"df_engagement[\"time\"]=pd.to_datetime(df_engagement[\"time\"])\ndf_engagement['month_name'] = df_engagement['time'].dt.month_name()\nplt.figure(figsize=(12,3))\nsns.scatterplot(x=\"pct_access\",y=\"engagement_index\",data=df_engagement)","833ca8bb":"fig,ax=plt.subplots(1,2,figsize=(16,3))\ndef group_func(dataframe,col1,col2,y,i):\n    dfr = dataframe.groupby(col1)[[col2]].sum()\n    dfr[col2].plot(ax=ax[i])\n    ax[i].set_title(f\" sum of {col2} everyday\")\n    ax[i].text(\"2020-05-15\",y,\"May be Summer break\", bbox=dict(facecolor='#b4f0a7', alpha=0.3),)\n    ax[i].text(\"2020-09-15\",y*2,\"at peak\", bbox=dict(facecolor='YELLOW', alpha=0.5))\ngroup_func(df_engagement,\"time\",\"pct_access\",37000,0)\ngroup_func(df_engagement,\"time\",\"engagement_index\",11000000,1)","f2987d5d":"new_order = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August', 'September', 'October', 'November', 'December']\ndf1=df_engagement.groupby(\"month_name\").mean()[[\"pct_access\",\"engagement_index\"]]\ndf1=df1.reindex(new_order)\nfig,ax=plt.subplots(1,2,figsize=(10,3))\ndf1[\"pct_access\"].plot.bar(ax=ax[0],title=\"mean_pct_access of each month\",color=\"#b4f0a7\")\ndf1[\"engagement_index\"].plot.bar(ax=ax[1],color=\"gray\",title=\"mean_engagement_index of each month\")","95cd4df1":"df_engagement_district= pd.merge(df_engagement,df_district,on=\"district_id\",how='inner',)\ndf_engagement_district.head()","1459e190":"us_state_to_abbrev = {\"Arizona\": \"AZ\",\"California\": \"CA\",\"Connecticut\": \"CT\",\"Florida\": \"FL\",\"Illinois\": \"IL\",\n                      \"Indiana\": \"IN\",\"Massachusetts\": \"MA\",\"Michigan\": \"MI\",\"Minnesota\": \"MN\",\"Missouri\": \"MO\",\n                      \"New Hampshire\": \"NH\",\"New Jersey\": \"NJ\",\"New York\": \"NY\",\"North Carolina\": \"NC\",\n                      \"North Dakota\": \"ND\",\"Ohio\": \"OH\",\"Tennessee\": \"TN\",\"Texas\": \"TX\",\"Utah\": \"UT\",\n                      \"Virginia\": \"VA\",\"Washington\": \"WA\",\"Wisconsin\": \"WI\",\"District Of Columbia\": \"DC\"}\ndef state_desc(df,col1,col2,col3,col4,col5):\n    state_desc = df.groupby([col1]).mean().sort_values(col2,ascending=False).drop([col3,col4,col5],axis=1)\n    plt.figure(figsize=(10,3))\n    plt.xticks(rotation=70)\n    plt.ylabel(\"Mean engagement index of every state\")\n    sns.barplot(x=state_desc.index,y=col2,data=state_desc)\n    state_desc[\"state_ab\"]=state_desc.index.map(us_state_to_abbrev)\n    data = dict(type = 'choropleth',\n        locationmode = 'USA-states',\n        locations = state_desc[\"state_ab\"],\n        z = state_desc[col2],\n        text = state_desc.index,\n        colorscale= 'Portland',\n        colorbar = {'title' : col2})\n    layout = dict(title = col2,\n              geo = {'scope':'usa'})\n    choromap = go.Figure(data = [data],layout = layout)\n    iplot(choromap,validate=False)","768d09b8":"state_desc(df_engagement_district,\"state\",\"engagement_index\",\"lp_id\",\"pct_access\",\"district_id\")","bc2b2a7a":"all_state_names=df_engagement_district[df_engagement_district[\"state\"].notnull()][\"state\"].unique()\npv=pd.pivot_table(data=df_engagement_district,index=\"time\",aggfunc=\"mean\",values=\"engagement_index\",columns=\"state\",fill_value=0)\npv.plot(figsize=(19,6)).legend(bbox_to_anchor=(1.02, 1))","5518c9fe":"fig,ax=plt.subplots(2,2,figsize=(15,7))\ndef district_engagement(df,col1,col2,color,i,j):\n    \n    df.groupby(col1).mean()[[col2]].sort_values(col2,ascending=False).plot.bar(color=color,ax=ax[i,j])\n    ax[i,j].set_title(f\"mean of engagement_index of districts having different {col1}\")\n    ax[i,j].set_ylabel(\"mean of engagement_index\")\n    ax[i,j].tick_params(axis='x', rotation=45)\n    fig.tight_layout(pad=3.0)\ndistrict_engagement(df_engagement_district,\"pct_free\/reduced\",\"engagement_index\",\"lightyellow\",0,0)\ndistrict_engagement(df_engagement_district,\"pct_black\/hispanic\",\"engagement_index\",\"lightblue\",0,1)\ndistrict_engagement(df_engagement_district,\"pp_total_raw\",\"engagement_index\",\"gray\",1,0)\ndistrict_engagement(df_engagement_district,\"locale\",\"engagement_index\",\"orange\",1,1)","42125a75":"def state_eng_mean(dataframe1,dataframe2,dataframe3,col1,col2):\n    dfr1 = dataframe1.groupby(col1)[[col2]].mean().sort_values(by=col2,ascending=False)\n    dfr2 = dataframe2.groupby(col1)[[col2]].mean().sort_values(by=col2,ascending=False)\n    dfr3 = dataframe3.groupby(col1)[[col2]].mean().sort_values(by=col2,ascending=False)\n    fig,ax=plt.subplots(1,3,figsize=(10,2))\n    dfr1[col2].plot.bar(ax=ax[0],color=\"black\")\n    dfr2[col2].plot.bar(ax=ax[1],color=\"gray\")\n    dfr3[col2].plot.bar(ax=ax[2],color=\"lightgray\")\n    ax[0].set_title(state_names[i])\n    ax[1].set_title(state_names[i+1])\n    ax[2].set_title(state_names[i+2])\n    \n    \nstate_names = ['Connecticut', 'Missouri', 'Illinois', 'Utah', 'Indiana','New York', 'Virginia', 'California', 'Washington']\nfor i in range(0,len(state_names),3):\n    df1=df_engagement_district[df_engagement_district[\"state\"]==state_names[i]]\n    df2=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+1]]\n    df3=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+2]]\n    state_eng_mean(df1,df2,df3,\"pct_free\/reduced\",\"engagement_index\")","eb2c5c81":"def mean_engagement_func_group(df,col1,color):\n    df.pivot_table(index=\"time\",aggfunc=\"mean\",values=\"engagement_index\",columns=col1,fill_value=0).plot(title=state_names[i],color=color,ax=ax[i])\n\nfig,ax=plt.subplots(1,2,figsize=(12,3))\nstate_names = [\"Indiana\",'New York']\n\nfor i in range(len(state_names)):\n    df=df_engagement_district[df_engagement_district[\"state\"]==state_names[i]]\n    mean_engagement_func_group(df,\"pct_free\/reduced\",[\"brown\",\"gray\",\"lightblue\"])\n","b2a19f34":"state_names = ['Connecticut', 'Missouri', 'Illinois', 'Utah', 'Indiana','New York', 'Virginia', 'California', \n               'Washington','New Hampshire', 'Massachusetts', 'Ohio', 'District Of Columbia', 'Wisconsin','Tennessee','Florida','New Jersey', 'Arizona']\nfor i in range(0,len(state_names),3):\n    df1=df_engagement_district[df_engagement_district[\"state\"]==state_names[i]]\n    df2=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+1]]\n    df3=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+2]]\n    state_eng_mean(df1,df2,df3,\"pct_black\/hispanic\",\"engagement_index\")","6f6c0449":"fig,ax=plt.subplots(2,2,figsize=(15,7))\ndef district_engagement_sum(df,col1,col2,color,i,j):\n    \n    df.groupby(col1).sum()[[col2]].sort_values(col2,ascending=False).plot.bar(color=color,ax=ax[i,j])\n    ax[i,j].set_title(f\"sum of engagement_index of districts having different {col1}\")\n    ax[i,j].set_ylabel(\"sum of engagement_index\")\n    ax[i,j].tick_params(axis='x', rotation=45)\n    fig.tight_layout(pad=3.0)\ndistrict_engagement_sum(df_engagement_district,\"pct_free\/reduced\",\"engagement_index\",\"lightyellow\",0,0)\ndistrict_engagement_sum(df_engagement_district,\"pct_black\/hispanic\",\"engagement_index\",\"lightblue\",0,1)\ndistrict_engagement_sum(df_engagement_district,\"pp_total_raw\",\"engagement_index\",\"gray\",1,0)\ndistrict_engagement_sum(df_engagement_district,\"locale\",\"engagement_index\",\"#FFA07A\",1,1)","09859264":"def sum_engagement_func_group(df,col1,color):\n    df.pivot_table(index=\"time\",aggfunc=\"sum\",values=\"engagement_index\",columns=col1,fill_value=0).plot(title=f\"sum of engagement in {state_names[i]}\",color=color,ax=ax)\n\nfig,ax=plt.subplots(1,1,figsize=(12,3))\nstate_names = ['New York']\n\nfor i in range(len(state_names)):\n    df=df_engagement_district[df_engagement_district[\"state\"]==state_names[i]]\n    sum_engagement_func_group(df,\"pct_free\/reduced\",[\"brown\",\"gray\",\"lightblue\"])\n","22cb70cf":"def state_eng_sum(dataframe1,dataframe2,dataframe3,col1,col2):\n    dfr1 = dataframe1.groupby(col1)[[col2]].sum().sort_values(by=col2,ascending=False)\n    dfr2 = dataframe2.groupby(col1)[[col2]].sum().sort_values(by=col2,ascending=False)\n    dfr3 = dataframe3.groupby(col1)[[col2]].sum().sort_values(by=col2,ascending=False)\n    fig,ax=plt.subplots(1,3,figsize=(10,2))\n    dfr1[col2].plot.bar(ax=ax[0],color=\"#CD5C5C\")\n    dfr2[col2].plot.bar(ax=ax[1],color=\"#F08080\")\n    dfr3[col2].plot.bar(ax=ax[2],color=\"#FFA07A\")\n    ax[0].set_title(state_names[i])\n    ax[1].set_title(state_names[i+1])\n    ax[2].set_title(state_names[i+2])\n    \n    \nstate_names = ['Connecticut', 'Missouri', 'Illinois', 'Utah', 'Indiana','New York', 'Virginia', 'California', \n               'Washington','New Hampshire', 'Massachusetts', 'Ohio', 'District Of Columbia', 'Wisconsin','Tennessee','Florida','New Jersey', 'Arizona']\nfor i in range(0,len(state_names),3):\n    df1=df_engagement_district[df_engagement_district[\"state\"]==state_names[i]]\n    df2=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+1]]\n    df3=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+2]]\n    state_eng_sum(df1,df2,df3,\"pct_black\/hispanic\",\"engagement_index\")","af9b6758":"state_names = ['Connecticut', 'Missouri', 'Illinois', 'Utah', 'Indiana','New York', 'Virginia', 'California', 'Washington']\nfor i in range(0,len(state_names),3):\n    df1=df_engagement_district[df_engagement_district[\"state\"]==state_names[i]]\n    df2=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+1]]\n    df3=df_engagement_district[df_engagement_district[\"state\"]==state_names[i+2]]\n    state_eng_sum(df1,df2,df3,\"pct_free\/reduced\",\"engagement_index\")","2b78b366":"df_engagement_district_product= pd.merge(df_engagement_district,df_product,on=\"lp_id\",how='inner')","59f20c98":"fig,ax=plt.subplots(1,2,figsize=(23,3))\ndef top_6_company_name(df,col1,col2,text,i,color):\n    Top_6_company_name=df.groupby(col1).sum()[[col2]].sort_values(col2,ascending=False).head(6)\n    ax[i].set_xticklabels(ax[i].get_xticks(),rotation=70)\n    ax[i].set_title(text)\n    sns.barplot(x=Top_6_company_name.index,y=col2,data=Top_6_company_name,color=color,ax=ax[i])\ntop_6_company_name(df_engagement_district_product,\"Provider\/Company Name\",\"engagement_index\",\"Top 6 Companies names  whose products has maximum load events during pandemic\",0,\"lightgreen\")\ntop_6_company_name(df_engagement_district_product,\"Provider\/Company Name\",\"pct_access\",\"Top 6 Companies names  whose products are mostly accessed by students during pandemic\",1,\"purple\")","f7e439df":"fig,ax=plt.subplots(1,2,figsize=(16,3))\ndef Top10_Products(df1,df2,col1,col2,col3,i,text):\n    Top10_product = df1.groupby([col1]).sum().sort_values(col2,ascending=False).head(10)\n    top_10_product = pd.merge(Top10_product,df2,how=\"left\", left_on=Top10_product.index,right_on=col1)[[col1,col3,col2]]\n    ax[i].set_xticklabels(ax[i].get_xticks(),rotation=70)\n    ax[i].set_title(text)\n    sns.barplot(x=col3,y=col2,data=top_10_product,ax=ax[i])\nTop10_Products(df_engagement,df_product,\"lp_id\",\"engagement_index\",\"Product Name\",0,\"Top 10 Products having maximum total page-load events\")\nTop10_Products(df_engagement,df_product,\"lp_id\",\"pct_access\",\"Product Name\",1,\"Top 10 products accessed by students\")","be2cc42d":"fig,ax=plt.subplots(1,1,figsize=(10,3))\ndf_engagement_district_product.groupby(\"Primary_essential_subfunc\").sum()[[\"engagement_index\"]].sort_values(\"engagement_index\",ascending=False).head(10).plot.bar(color=\"lightblue\",ax=ax)\nax.set_title(f\"mean engagement_index of products used for different Primary_essential_subfunc\")\nax.set_ylabel(\"sum of engagement_index\")","9ed088ec":"# I want the dataframe where primary essential subfunctions are Top 5 i.e.content creation,LMS, digital learning platform,site resource,study tools.\ndf_top_5_subfunction=df_engagement_district_product[df_engagement_district_product[\"Primary_essential_subfunc\"].isin(df_engagement_district_product.groupby(\"Primary_essential_subfunc\").sum()[[\"engagement_index\"]].sort_values(\"engagement_index\",ascending=False).head(5).index)]\ntop_5_subfunction_pivot=pd.pivot_table(data=df_top_5_subfunction,index=\"time\",aggfunc=\"sum\",values=\"engagement_index\",columns=\"Primary_essential_subfunc\",fill_value=0)\ntop_5_subfunction_pivot.plot(color=[\"purple\",\"lightblue\",\"red\",\"gray\",\"yellow\"],figsize=(19,6),title=\"sum of the engagement_index of products on daily basis used for top 5 sub-funtionality\",ylabel=\"sum of engagement_index\").legend(bbox_to_anchor=(1.02, 1))","98c5f43f":"### In the month of June and July ,less percentage of students loaded the page and total page-load events are also minimum at this time. But after August, the graph is again increasing and digital connectivity is more after August and students are more engaged in e-learning platform.","5d9e7194":"### Product information data\nThe product file `products_info.csv` includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy. Data were labeled by our team. Some products may not have labels due to being duplicate, lack of accurate url or other reasons.\n\n| Name | Description |\n| :--- | :----------- |\n| LP ID| The unique identifier of the product |\n| URL | Web Link to the specific product |\n| Product Name | Name of the specific product |\n| Provider\/Company Name | Name of the product provider |\n| Sector(s) | Sector of education where the product is used |\n| Primary Essential Function | The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled |","385d11ed":"#### It seems so pct_black\/hispanic and pct_free\/reduced are correlated.Let's find how are districts distributed according to pct_black\/hisponic,pct_free\/reduced,county_connections_ratio.","d9cfee3d":"### According to the graph, Mostly products are used for Content creation, LMS and digital learning platform","cb6068e9":"##  If we take sum of engagement index in different situation","d4a1e1c0":"### From above graph we found that people in every state are more engaged after July in digital learning.","ae6270d7":"### Engagement data\nThe engagement data are aggregated at school district level, and each file in the folder `engagement_data` represents data from one school district. The 4-digit file name represents `district_id` which can be used to link to district information in `district_info.csv`. The `lp_id` can be used to link to product information in `product_info.csv`.\n\n| Name | Description |\n| :--- | :----------- |\n| time | date in \"YYYY-MM-DD\" |\n| lp_id | The unique identifier of the product |\n| pct_access | Percentage of students in the district have at least one page-load event of a given product and on a given day |\n| engagement_index | Total page-load events per one thousand students of a given product and on a given day |","3b825914":"###  States in descending order of  engagement index in year 2020  means The name of state in which students have loaded maximum page events, will come first.","e0aa7bea":"### It seems so \"pct_access\" and \"engagement_index\" are highly correlated.","e2dc2ad9":"It means districts having pct_black\/hispanic=(0,0.2)(66% districts), pct_free\/reduced =(0, 0.2)(31% districts) has highest \nsum of engagement index. These district's people are more financial established as well as highest in numbers. \n<br>\n<br>\n\"Suburb\" locales (59% districts) has more sum of page load events than City,Rural,Town and students in suburb areas are more dependent on digital learning as these districts are highest in numbers.","970dd2ca":"Merge the dataframe df_engagement and df_district","f3e0cd91":"### Most of the products are used for digital learning Platform","626d6086":"### It means 82% of the products are used for \"LC\" functionality.","2a7a86f8":"#### From the above result we can conclude, The Prek-12 sector used maximum products at covid time.","f56619d9":"### Evaluate the number of products used in LC,CM,SDO Functinality.","740c0eac":"**pct_black\/hispanic(0.8,1) group of state \"New York\" has highest mean engagement index more than 1000 in comaprison of other state.**","3c87fda9":"It means districts having pct_black\/hispanic=(0.8,1)(5% districts), pct_free\/reduced =(0.8,1)(3% districts) has highest \nmean engagement index. It seems so the goverment and people are helping high poverty categories (pct_free\/reduced =(0.8,1)) of people in e-learning and digital platform.\n<br>\n<br>\nOn the other side districts having pct_black\/hispanic=(0,0.2), pct_free\/reduced =(0,0.2) have also good mean enagegement index that means less students are eligible for free lunch and these district's people are more financial established so they can spend money for digital and e-learning platform or may be the other reason.\n<br>\n<br>\n\"Rural\" locales has more mean page load events than City,suburb,Town and students in Rural areas are more dependent on digital learning\n<br>\n<br>\nMean engagement index of every state after August is more than or equal to before June in every state. Arizona is the state  whose mean_engagement_index has increased more than double from earlier between August and September.\n<br>\n<br>\nThere is only one district whose per pupil expenditure(pp_total_raw) is [32000,34000) and this district has maximum mean page load events.\n<br>\n<br>\nMean engagement index of 80\/100% high poverty group (pct_free\/reduced) in states New york and Indiana have unusual trends and their mean page load events are  less than before June.District of columbia has sudden increment in August.\n<br>\n<br>\n**Note: I am taking mean engagement index not sum of engagement index**","6d7e14ff":"### District information data\n\nThe district file `districts_info.csv` includes information about the characteristics of school districts, including data from [NCES](https:\/\/nces.ed.gov\/) (2018-19), [FCC](https:\/\/www.fcc.gov\/) (Dec 2018), and [Edunomics Lab](https:\/\/edunomicslab.org\/). In this data set, we removed the identifiable information about the school districts. We also used an open source tool [ARX](https:\/\/arx.deidentifier.org\/) [(Prasser et al. 2020)](https:\/\/onlinelibrary.wiley.com\/doi\/full\/10.1002\/spe.2812) to transform several data fields and reduce the risks of re-identification. For data generalization purposes some data points are released with a range where the actual value falls under. Additionally, there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset. \n\n| Name | Description |\n| :--- | :----------- |\n| district_id | The unique identifier of the school district |\n| state | The state where the district resides in |\n| locale | NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. See [Locale Boundaries User's Manual](https:\/\/eric.ed.gov\/?id=ED577162) for more information. |\n| pct_black\/hispanic | Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data |\n| pct_free\/reduced | Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data |\n| county_connections_ratio | `ratio` (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version). See [FCC data](https:\/\/www.fcc.gov\/form-477-county-data-internet-access-services) for more information. |\n| pp_total_raw | Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project. The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district. |","ee9fb561":"### Let's see how each state engaged in e-learning platform during pandemic ","6af9a2b9":"### After comparing the graph of mean engagement_index of every states, we found that state \"Arizona\" has maximum page load_events."}}