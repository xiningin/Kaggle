{"cell_type":{"41e76df1":"code","f20934d6":"code","1f58270f":"code","a40dd24a":"code","a01dab8a":"code","8e9c3eb9":"code","f0d08bb4":"code","471994c4":"code","c64963ee":"code","982e4757":"code","bd6dbab8":"code","a0200ddf":"code","0da8733b":"code","56e963b5":"code","9311ec38":"code","cd5c406f":"code","0fb0d85e":"code","3ec5a0a7":"code","de40c73a":"code","048e2e0b":"code","15d43a37":"code","b5954468":"code","d47386c7":"code","a3582491":"code","ee3e11b1":"code","8d424c90":"code","747642d8":"code","ab544c2e":"code","b16e8363":"code","c357e24e":"code","92711fff":"code","8e16296b":"code","4e373fdb":"code","c73f0912":"markdown","93771325":"markdown","11061a1e":"markdown","4f8fca4f":"markdown","0fc9a777":"markdown","d10a3f31":"markdown","a89cfb4a":"markdown","8101b84c":"markdown","63086ad6":"markdown","7a93a359":"markdown","81aa1b54":"markdown","78df2285":"markdown","6ce8c138":"markdown","dd185c3f":"markdown","f8460f8a":"markdown","2660ffdc":"markdown","a4914d27":"markdown","e35582fc":"markdown","65b9aad5":"markdown","b4094ffa":"markdown"},"source":{"41e76df1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f20934d6":"train_df = pd.read_csv(\"..\/input\/winequality-red.csv\")\ntrain_df.sample(5)","1f58270f":"train_df.isnull().sum()","a40dd24a":"train_df.describe()","a01dab8a":"plt.figure(figsize=(15,15))\nsns.heatmap(train_df.corr(),color = \"k\", annot=True)","8e9c3eb9":"sns.countplot(x='quality', data=train_df)","f0d08bb4":"plt.figure(figsize=(15,5))\nsns.swarmplot(x= \"quality\", y=\"fixed acidity\" , data = train_df) \nplt.title('fixed acidity and quality')","471994c4":"plt.figure(figsize=(15,5))\nsns.boxplot(x=\"quality\", y=\"fixed acidity\",   data=train_df )","c64963ee":"train_df.groupby('quality')['fixed acidity'].mean().plot.line()\nplt.ylabel(\"fixed acidity\")","982e4757":"plt.figure(figsize=(10,4))\nsns.barplot(x=\"quality\", y=\"volatile acidity\",   data=train_df )","bd6dbab8":"train_df.groupby('quality')['volatile acidity'].mean().plot.line()\nplt.ylabel(\"volatile acidity\")","a0200ddf":"plt.figure(figsize=(10,4))\nsns.barplot(x=\"quality\", y=\"sulphates\",   data=train_df )","0da8733b":"train_df.groupby('quality')['sulphates'].mean().plot.line()\nplt.ylabel(\"sulphates\")","56e963b5":"sns.boxplot(x=\"quality\", y=\"sulphates\",   data=train_df )","9311ec38":"sns.boxplot(x=\"quality\", y=\"pH\",   data=train_df )","cd5c406f":"train_df.groupby('quality')['pH'].mean().plot.line()\nplt.ylabel(\"pH\")","0fb0d85e":"sns.lmplot(x=\"fixed acidity\", y=\"pH\", data=train_df)","3ec5a0a7":"sns.lmplot(y=\"fixed acidity\", x=\"citric acid\", data=train_df)","de40c73a":"reviews = []\nfor i in train_df['quality']:\n    if i >= 1 and i <= 3:\n        reviews.append('1')\n    elif i >= 4 and i <= 7:\n        reviews.append('2')\n    elif i >= 8 and i <= 10:\n        reviews.append('3')\ntrain_df['Reviews'] = reviews\ntrainX = train_df.drop(['quality', 'Reviews'] , axis = 1)\ntrainy = train_df['Reviews']","048e2e0b":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix, classification_report, accuracy_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n%matplotlib inline","15d43a37":"scaler = StandardScaler()\nX_train, X_test, y_train, y_test = train_test_split(trainX, trainy, test_size = 0.2, random_state = 42)\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.fit_transform(X_test)\nscore = {}","b5954468":"rfc = RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train, y_train)\npredicted_rfc = rfc.predict(X_test)\nprint(classification_report(y_test, predicted_rfc))","d47386c7":"rfc_conf_matrix = confusion_matrix(y_test, predicted_rfc)\nrfc_acc_score = accuracy_score(y_test, predicted_rfc)\nprint(rfc_conf_matrix)\nprint(rfc_acc_score*100)\nscore.update({'Random_forest_classifier': rfc_acc_score*100})","a3582491":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(X_train, y_train)\npredicted_lr = lr.predict(X_test)\nprint(classification_report(y_test, predicted_lr))","ee3e11b1":"lr_conf_matrix = confusion_matrix(y_test, predicted_lr)\nlr_acc_score = accuracy_score(y_test, predicted_lr)\nprint(lr_conf_matrix)\nprint(lr_acc_score*100)\nscore.update({'logistic_regressor': lr_acc_score*100})","8d424c90":"svc =  SVC()\nsvc.fit(X_train, y_train)\npredicted_svc = svc.predict(X_test)\nprint(classification_report(y_test, predicted_svc))","747642d8":"svc_conf_matrix = confusion_matrix(y_test, predicted_svc)\nsvc_acc_score = accuracy_score(y_test, predicted_svc)\nprint(svc_conf_matrix)\nprint(svc_acc_score*100)\nscore.update({'SVC': svc_acc_score*100})","ab544c2e":"dt = DecisionTreeClassifier()\ndt.fit(X_train,y_train)\npredicted_dt = dt.predict(X_test)\nprint(classification_report(y_test, predicted_dt))","b16e8363":"dt_conf_matrix = confusion_matrix(y_test, predicted_dt)\ndt_acc_score = accuracy_score(y_test, predicted_dt)\nprint(dt_conf_matrix)\nprint(dt_acc_score*100)\nscore.update({'DecisionTreeClassifier': dt_acc_score*100})","c357e24e":"gb = GaussianNB()\ngb.fit(X_train,y_train)\npredicted_gb = gb.predict(X_test)\nprint(classification_report(y_test, predicted_gb))","92711fff":"gb_conf_matrix = confusion_matrix(y_test, predicted_gb)\ngb_acc_score = accuracy_score(y_test, predicted_gb)\nprint(gb_conf_matrix)\nprint(gb_acc_score*100)\nscore.update({'GaussianNB': gb_acc_score*100})","8e16296b":"model_acc = pd.DataFrame()\nmodel_acc['Models'] = score.keys() \nmodel_acc['Accuracy'] = score.values()\nmodel_acc","4e373fdb":"from matplotlib.pyplot import xticks\nsns.lineplot(x='Models', y='Accuracy',data=model_acc)\nxticks(rotation=90)","c73f0912":"*statistical summary, excluding NaN values*","93771325":"**Comparison Between Different Classifier**","11061a1e":"*Relations between fixed acidity and quality*\n\nDifferent Plots","4f8fca4f":"*RandomForestClassifier*","0fc9a777":"**Glimpse of the Data** ","d10a3f31":"*Is there null element in the data ?*","a89cfb4a":"**Different Classifier**","8101b84c":"**categorising wine quality**","63086ad6":"*Realtion between quality and pH*","7a93a359":"*Relation between quality and sulphates*","81aa1b54":"*Relations between volatile acidity and quality*","78df2285":"*Realtion between fixed acidity and pH*","6ce8c138":"*Standardize the Data*","dd185c3f":"*The following features are relatively  correlated:*\n\ntotal sulfur dioxide with free sulfur dioxide;\nfixed acidity with density and citric acid;\nalcohol with quality \n\n*The following features are inversely  correlated:*\n\nfixed acidity with pH\ncitric acid with pH and volatile acidity\n\n\n**Quality of the Wine**(from the Data)\n","f8460f8a":"**SVC**","2660ffdc":"*Realtion between fixed acidity and citric acid*","a4914d27":"*GaussianNB*","e35582fc":"*LogisticRegression*","65b9aad5":"**Exploratory Data Analysis**\n\nCorrelations between different features ","b4094ffa":"*Decision Tree Classifier*"}}