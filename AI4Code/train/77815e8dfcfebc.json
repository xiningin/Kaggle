{"cell_type":{"ac089023":"code","e5b40a01":"code","602dcda8":"code","deee739a":"code","6062d499":"code","9b48ff09":"code","ebd68272":"code","d1c2c3bb":"code","8f2f2085":"code","969c7fab":"code","8e9ea0cc":"code","d1a2f288":"code","d801574d":"code","e864f171":"code","2037012f":"code","3f918f3e":"code","52721c4e":"code","27fe2f21":"markdown","c7962fc8":"markdown","7f714478":"markdown","1520d55a":"markdown","2ceeeec8":"markdown","b9e3c3a2":"markdown","79e43a7d":"markdown","56b36982":"markdown","d2f3f0b5":"markdown","69d395d9":"markdown","a0c9c2ee":"markdown","2f92aa55":"markdown","614a1ac0":"markdown","4643f5b0":"markdown","cfed3b49":"markdown","a29c9f19":"markdown","4a942363":"markdown","bc5b2d3e":"markdown","7c34e313":"markdown","7ebe4c1f":"markdown","a04574b5":"markdown","9507c2b6":"markdown","947def5c":"markdown","28e3a8e5":"markdown","613bd2d0":"markdown"},"source":{"ac089023":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","e5b40a01":"train_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\",index_col=\"Id\")\ntrain_df.head()","602dcda8":"test_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\",index_col=\"Id\")\ntest_df.head()","deee739a":"plt.hist(train_df[\"SalePrice\"])\nplt.xlabel(\"House Prices\")\nplt.ylabel(\"No. of houses\")\nplt.title(\"Distribution of House prices in Ames, Iowa\")\nplt.show()","6062d499":"train_df.dropna(axis=0,subset=[\"SalePrice\"],inplace=True)  #drop rows with no sale price\ny_train=train_df.SalePrice  #define the target variable\nX_train=train_df.drop(\"SalePrice\",axis=1)  #drop sale price from predictor df","9b48ff09":"#Columns with numerical data\nnum_cols=[col for col in X_train.columns if X_train[col].dtype in [\"int64\",\"float64\"]]\nprint(\"There are \"+str(len(num_cols))+\" numerical columns.\")\nnum_cols","ebd68272":"#Columns with categorical data\ncat_cols=[col for col in X_train.columns if X_train[col].dtype==\"object\"]\nprint(\"There are \"+str(len(cat_cols))+\" categorical columns.\")\ncat_cols","d1c2c3bb":"X_train[cat_cols].nunique()","8f2f2085":"cols=num_cols+cat_cols\nX_train=X_train[cols]\nX_test=test_df[cols]","969c7fab":"from sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\n\nnum_transformer=SimpleImputer(strategy=\"median\")\n\ncat_transformer=Pipeline(steps=[\n    (\"impute\",SimpleImputer(strategy=\"most_frequent\")),\n    (\"onehot\",OneHotEncoder(handle_unknown=\"ignore\",sparse=False))\n])\n\npreprocessor=ColumnTransformer(transformers=[\n    (\"num\",num_transformer,num_cols),\n    (\"cat\",cat_transformer,cat_cols)\n])","8e9ea0cc":"from xgboost import XGBRegressor\n\nmodel=XGBRegressor(n_estimators=1000,learning_rate=0.05,random_state=0)","d1a2f288":"pipe=Pipeline(steps=[\n    (\"preprocessor\",preprocessor),\n    (\"model\",model)\n])","d801574d":"pipe.fit(X_train,y_train)","e864f171":"from sklearn.model_selection import cross_val_score\n\nscores=-cross_val_score(pipe,X_train,y_train,cv=5,scoring=\"neg_mean_absolute_error\") #The negative sign is used because negative mse is calculated\nprint(\"The average mean absolute error is \"+str(scores.mean()))","2037012f":"preds=pipe.predict(X_test)","3f918f3e":"output_df=pd.DataFrame({\"Id\":X_test.index,\"SalePrice\":preds})\noutput_df.head()","52721c4e":"output_df.to_csv(\"test_predictions.csv\",index=False)","27fe2f21":"Lets separate the training dataframe into the features and the targets.","c7962fc8":"We will have to perform one hot encoding on the numerical columns.  Lets see the number of unique categories in each column.","7f714478":"## Cross Validation","1520d55a":"## Final Predictions","2ceeeec8":"Let's use our model to predict the sale price of houses in the test set.","b9e3c3a2":"Finally, let's convert the dataframe into a corresponding csv file.","79e43a7d":"Lets first import the necessary libraries.","56b36982":"# Housing Price Predictions in Ames, Iowa","d2f3f0b5":"Let's convert our results into a dataframe with Id of the houses and their predicted prices.","69d395d9":"The histogram makes it clear that the majority of houses were sold in the range of $100,000-200,000.","a0c9c2ee":"Lets separate the columns that deal with numerical and categorical data respectively. ","2f92aa55":"## Data Preprocessing","614a1ac0":"We will deal with missing values by imputing the missing values and we will use one hot encoding on the categorical columns.  To make the code cleaner and more compact, we will use pipelines.","4643f5b0":"## Conclusion","cfed3b49":"Let's fit the overall model to the training data.","a29c9f19":"The purpose of this project was to build an accurate predictor for house prices in Ames, Idaho.  By using **imputation** and **one-hot encoding**, we were able to preprocess the data so that it can be used in a standard model.  Then we built and trained a model which uses **gradient boosting** and then evaluated the model's performance using **cross validation**.  Finally, we were able to predict house sale prices using the model.","4a942363":"The data for this project was obtained from the **Kaggle** links https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/download\/train.csv and https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/download\/test.csv for the train set and test set respectively.  Additionally, you can go to https:\/\/storage.googleapis.com\/kaggle-competitions-data\/kaggle\/5407\/205873\/data_description.txt?GoogleAccessId=web-data@kaggle-161607.iam.gserviceaccount.com&Expires=1572954709&Signature=sYEzPiNPFc%2Bq8wiQWT3WpeYQTStONcL%2FIHg0%2FVDmJ4XH3UecbgJB%2Bzr4gj%2FmdD7NOt6OHpsRP9tKWlGzbWzYTQ4QbfVXAtZt%2FMV6NOe2LVFQUcPQwQnM9ZBAnPAWUu6bZRRfOpGxENlPD4oDPA8Xmfod94G5BUOaL1JPOuPU%2Bkcv2UHEeffpAQxUK5%2B%2BcRhJMl68VDtxsuOkjfKj3D98Gl9FvOiioGdcRTE0L0h4i0RJQAp821g2MF5XqznbDpqDjpm6e7HhNDwkIvktBEBdwVYPE73BlpeRH%2B2awizGZIoVaCrliNIOcHyGCki8PqsK15AXr05Tt%2BVdZQKEr0KgxQ%3D%3D to get a description of the features used in the data.","bc5b2d3e":"The aim of the project is to build an accurate predictor of house prices in Ames, Iowa.  This can be very helpful for people who are either trying to sell their house and are looking a fair evaluation of it's price or for people looking to buy a house to get some insights into the factors that play a key role in determing the house prices.  We will use advanced regression techniques such as **Gradient Boosting** to make these predictions.  This project is based on the **Kaggle** competition **House Prices: Advanced Regression Techniques**.","7c34e313":"The model we will use in this case is the **XGBoost**.  It stands for extreme gradient boosting and is extremely efficient.","7ebe4c1f":"## Modeling","a04574b5":"Now lets build a pipeline which connects the preprocessor and the model.","9507c2b6":"## Getting the data","947def5c":"Lets visualize the distribution of the sale prices of the houses.","28e3a8e5":"We will use cross validation with 5 folds to evaluate our model's performance.  The metric we will use is the mean absolute error.","613bd2d0":"Lets load the data now.  The csv files have been uploaded as train.csv and test.csv."}}