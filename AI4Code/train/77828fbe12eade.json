{"cell_type":{"bbe76f33":"code","05a4b1aa":"code","3a5cdf81":"code","30f933ad":"code","87379af6":"code","bf05acd0":"code","c0fc445e":"markdown","fdf31429":"markdown","9dc28483":"markdown"},"source":{"bbe76f33":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","05a4b1aa":"import random\nimport pandas as pd\nimport numpy as np\nimport dill\nimport tensorflow as tf\nfrom tensorflow import keras","3a5cdf81":"feature_cols = dill.load(open('\/kaggle\/input\/jmarket-rnn-with-keras\/feature_cols.dill','rb'))\nmodel = tf.keras.models.load_model('\/kaggle\/input\/jmarket-rnn-with-keras\/train_model.hdf5')","30f933ad":"n_steps = 10","87379af6":"import janestreet\nenv = janestreet.make_env() # initialize the environment\niter_test = env.iter_test() # an iterator which loops over the test set\nX = None\nfor (test_df, sample_prediction_df) in iter_test:\n    \n    if test_df.iloc[0].weight != 0:\n        test_df.fillna(0,inplace=True)\n        data = test_df[feature_cols].values\n        if X is None:\n            X = np.concatenate([data for _ in range(n_steps)],axis=0)\n        X = np.concatenate([X[1:],data] ,axis=0)\n    \n        action = model(X[np.newaxis,:],training=False).numpy()[0,0] > 0.5\n        action = int(action)\n    else:\n        action = 0\n    \n    sample_prediction_df.action = action\n    env.predict(sample_prediction_df)","bf05acd0":"#pd.read_csv('.\/submission.csv')","c0fc445e":"# Generate submission","fdf31429":"### This notebook is only dedicated to submitting. The model training is made in : [JMarket: RNN with keras](https:\/\/www.kaggle.com\/tchaye59\/jmarket-rnn-with-keras)","9dc28483":"# Load model and other files"}}