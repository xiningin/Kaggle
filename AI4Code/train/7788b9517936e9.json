{"cell_type":{"a6983886":"code","d79cc241":"code","63c355dd":"code","2c8461b3":"code","1ee458c9":"code","c7b965ad":"code","330d9c45":"code","27dd0145":"code","586456b2":"code","22015bc0":"code","71c1733d":"code","454dccff":"code","b22f482e":"code","aafff693":"code","5342012b":"code","a0c9bd23":"markdown","4140339d":"markdown","9bc30302":"markdown"},"source":{"a6983886":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d79cc241":"# General libraries\nimport re, os, string\nimport pandas as pd\n\n# Scikit-learn importings\nfrom sklearn.feature_extraction.text import TfidfVectorizer","63c355dd":"def get_stopwords_list(stop_file_path):\n    \"\"\"load stop words \"\"\"\n    \n    with open(stop_file_path, 'r', encoding=\"utf-8\") as f:\n        stopwords = f.readlines()\n        stop_set = set(m.strip() for m in stopwords)\n        return list(frozenset(stop_set))","2c8461b3":"def clean_text(text):\n    \"\"\"Doc cleaning\"\"\"\n    \n    # Lowering text\n    text = text.lower()\n    \n    # Removing punctuation\n    text = \"\".join([c for c in text if c not in PUNCTUATION])\n    \n    # Removing whitespace and newlines\n    text = re.sub('\\s+',' ',text)\n    \n    return text","1ee458c9":"def sort_coo(coo_matrix):\n    \"\"\"Sort a dict with highest score\"\"\"\n    tuples = zip(coo_matrix.col, coo_matrix.data)\n    return sorted(tuples, key=lambda x: (x[1], x[0]), reverse=True)\n\ndef extract_topn_from_vector(feature_names, sorted_items, topn=10):\n    \"\"\"get the feature names and tf-idf score of top n items\"\"\"\n    \n    #use only topn items from vector\n    sorted_items = sorted_items[:topn]\n\n    score_vals = []\n    feature_vals = []\n    \n    # word index and corresponding tf-idf score\n    for idx, score in sorted_items:\n        \n        #keep track of feature name and its corresponding score\n        score_vals.append(round(score, 3))\n        feature_vals.append(feature_names[idx])\n\n    #create a tuples of feature, score\n    results= {}\n    for idx in range(len(feature_vals)):\n        results[feature_vals[idx]]=score_vals[idx]\n    \n    return results","c7b965ad":"def get_keywords(vectorizer, feature_names, doc):\n    \"\"\"Return top k keywords from a doc using TF-IDF method\"\"\"\n\n    #generate tf-idf for the given document\n    tf_idf_vector = vectorizer.transform([doc])\n    \n    #sort the tf-idf vectors by descending order of scores\n    sorted_items=sort_coo(tf_idf_vector.tocoo())\n\n    #extract only TOP_K_KEYWORDS\n    keywords=extract_topn_from_vector(feature_names,sorted_items,TOP_K_KEYWORDS)\n    \n    return list(keywords.keys())","330d9c45":"# Constants\nPUNCTUATION = \"\"\"!\"#$%&'()*+,-.\/:;<=>?@[\\]^_`{|}~\"\"\" \nTOP_K_KEYWORDS = 10 # top k number of keywords to retrieve in a ranked document\nSTOPWORD_PATH = \"\/kaggle\/input\/stopwords\/stopwords.txt\"\nrohingya_path = \"\/kaggle\/input\/its-controversial\/The_Rohingya_Genocide.csv\"","27dd0145":"data = pd.read_csv(rohingya_path)\ndata.head()","586456b2":"data.dropna(subset=['tweets'], inplace=True)","22015bc0":"data['tweets'] = data['tweets'].apply(clean_text)","71c1733d":"data.head()","454dccff":"corpora = data['tweets'].to_list()","b22f482e":"#load a set of stop words\nstopwords=get_stopwords_list(STOPWORD_PATH)\n\n# Initializing TF-IDF Vectorizer with stopwords\nvectorizer = TfidfVectorizer(stop_words=stopwords, smooth_idf=True, use_idf=True)\n\n# Creating vocab with our corpora\n# Exlcluding first 10 docs for testing purpose\nvectorizer.fit_transform(corpora[10::])\n\n# Storing vocab\nfeature_names = vectorizer.get_feature_names()","aafff693":"result = []\nfor doc in corpora[0:10]:\n    df = {}\n    df['tweets'] = doc\n    df['sentiment'] = get_keywords(vectorizer, feature_names, doc)\n    result.append(df)\n    \nfinal = pd.DataFrame(result)\nfinal","5342012b":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke Was here' )","a0c9bd23":"AID FOR STRANDED ROHINGYA\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcR2CxsH8jEoPk4YKfaqG3Y7xV7C-f3jY-DgkQ&usqp=CAU)islamic-relief.org","4140339d":"#Script by Rohit Swami https:\/\/www.kaggle.com\/rowhitswami\/keywords-extraction-using-tf-idf-method","9bc30302":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">The Rohingya Genocide<\/h3>\n\nThe Rohingya genocide is a series of ongoing persecutions by the Myanmar (formerly Burmese) government of the Rohingya people.\n\nThe genocide has consisted of two phases to date: the first occurred from October 2016 to January 2017 and the second has been occurring since August 2017.\n\nThe crisis forced over a million Rohingya to flee to other countries. Most fled to Bangladesh, while others escaped to India, Thailand, Malaysia, and other parts of South and Southeast Asia.\nhttps:\/\/en.wikipedia.org\/wiki\/Rohingya_genocide"}}