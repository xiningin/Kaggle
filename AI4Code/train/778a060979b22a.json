{"cell_type":{"70a5812f":"code","1ff7f21b":"code","9e74a4ac":"code","669c3f93":"code","a1bc6a2a":"code","5b8f0276":"code","7a293815":"code","1fd70dd1":"code","0d8c3690":"code","1d5fc656":"code","28ac10cb":"code","c743f327":"code","f83883e4":"code","a8043133":"code","05065971":"code","98187075":"code","25200fc8":"code","3cc84949":"code","da346902":"code","902f0a52":"code","de4bfc0f":"code","68dd8bbd":"code","0967f98f":"code","05caab38":"code","8726e6ff":"code","3908d291":"code","9e08bd94":"code","06c6cdeb":"code","3ea4d498":"code","b628c176":"code","dac09975":"code","17500511":"code","9c9e70d4":"code","32ec5f08":"code","9f407a7f":"code","77f0b0f8":"code","0b311b5d":"code","65cfdf83":"code","afa56c55":"code","67ea2d0e":"code","5f9ce2f3":"code","20030810":"code","c3e39002":"code","da627bdf":"code","87605f0b":"code","5bab8667":"code","5704778e":"code","a7775f2e":"code","5dbfdda6":"code","402b8ca4":"code","0a00eccd":"code","a3cf5432":"code","d09eda99":"code","387004d4":"code","59800e4e":"code","b5607682":"code","eab5b3f3":"code","482ac4c8":"code","7de27abc":"code","8a574bac":"code","825cca69":"code","b318bba5":"code","1144acec":"code","5a30e9a7":"code","378c8f2b":"code","0baf9a85":"code","4e61fe91":"code","b57f5a25":"code","2f5b7969":"code","c5efd784":"code","a3d88ac5":"code","ffba9928":"code","91f3ce7d":"code","49b8990c":"code","b65bcb03":"code","6bc2c725":"code","af03e734":"code","111e0e60":"code","47a0dd39":"code","39f0fac4":"code","c083de65":"code","d6eb8426":"code","ff8bde12":"code","0d2d0e56":"code","c8c2bd43":"code","72834e92":"code","d67786a6":"code","76ae0399":"code","c38e36b8":"code","d12f77ac":"code","db545474":"code","c98ba4b0":"code","3b43bedc":"code","7c6fad3d":"code","35e4a692":"code","d835c7df":"code","b2006d49":"code","19ef93ed":"code","cfe2259b":"code","e463e850":"code","edbb97a5":"code","1b52d533":"code","3ab6ae1e":"code","619735dd":"code","3a1a6b10":"code","eca93041":"code","848577e4":"code","b5473ba8":"code","cae7ae4a":"code","5a985aef":"code","aca8d121":"code","cb1e34ce":"code","65528875":"code","09b205ab":"code","0bbf97e6":"code","20586e47":"code","457b0643":"code","d9ea96de":"code","fb9874e5":"code","0c37b434":"code","d9f6da07":"code","eea5dde6":"code","e11d1abd":"code","8d133578":"code","e80128d9":"code","95efcf5a":"code","13ebc70a":"code","def3ba93":"code","12cadde7":"code","e472db5e":"code","47f2aaa4":"code","c8577c08":"code","d4a501cf":"code","7105e898":"code","abc04ac7":"code","54a37948":"code","fdffbdbf":"code","0c865c8a":"code","56d125fe":"code","eaa2d00c":"code","7fd34868":"code","04a1b187":"code","99baed27":"code","f0e71784":"code","d14ec302":"code","fba8b416":"code","0c342001":"code","35803044":"code","8c7f9dcd":"code","bbc9e809":"markdown","f911b292":"markdown","34e48171":"markdown","37d07728":"markdown","e058e150":"markdown","b9f442e4":"markdown","a8bb186d":"markdown","37d8267f":"markdown","889cdfca":"markdown","4598f087":"markdown","5ae0f781":"markdown","9dbb939e":"markdown","bcadf4e4":"markdown","70cec8cb":"markdown","dd1e1010":"markdown","bcc7b236":"markdown","e7830c8f":"markdown","23f1371b":"markdown","0399aca8":"markdown","7699c7ab":"markdown","420550ad":"markdown","cc7bbb61":"markdown","24534088":"markdown","6a6c5e68":"markdown","21b21d97":"markdown","ffe1456e":"markdown","4d98b757":"markdown","d37b441a":"markdown","acdd496d":"markdown","18c1f238":"markdown","261ea88f":"markdown","1153c3e7":"markdown","f8b18562":"markdown","01c9f8e2":"markdown","9eeb7dc8":"markdown","6521296c":"markdown","e03bd9d5":"markdown","ed62332a":"markdown","496e46dd":"markdown","1ed4e42d":"markdown","097cb8ca":"markdown","4f746a33":"markdown","05846c35":"markdown","3ce5ed32":"markdown","f3081e15":"markdown","b0595b43":"markdown","573e6639":"markdown","3a6800d2":"markdown","2c793da9":"markdown","d1370ed8":"markdown","92990e6e":"markdown","11122760":"markdown","45d741d9":"markdown","a4c3f5a2":"markdown","f2505ad7":"markdown","98b89c78":"markdown","699c691c":"markdown","6f930b51":"markdown","4d60c063":"markdown","1cd3783b":"markdown","701f6002":"markdown","df824b55":"markdown","670508d8":"markdown","99a1288b":"markdown","c0274722":"markdown","efe9c4ad":"markdown","fee23fd7":"markdown","223e1c7d":"markdown","60c7f98e":"markdown","e64ab495":"markdown","68baf3e2":"markdown","b1dade26":"markdown","00296154":"markdown","80ed6ee3":"markdown","56087556":"markdown","8d9e7143":"markdown","fd4a503d":"markdown","59ada844":"markdown","5dee129d":"markdown","ee7d3493":"markdown","342150e1":"markdown","ccf54cd1":"markdown","258fcf4d":"markdown","cb2707fa":"markdown","d6e3917b":"markdown","c7d61bb9":"markdown","5f753e0f":"markdown","24e23576":"markdown","7f99443d":"markdown","5ee3b56e":"markdown","95416fe8":"markdown","25031115":"markdown","9c1a4d69":"markdown","0fbe1d2a":"markdown","eac15a5d":"markdown","909ad165":"markdown","f7dda16e":"markdown","fbdf20b2":"markdown","6495cd32":"markdown","71894a91":"markdown","a0ed4c0c":"markdown","42941597":"markdown","fff7314c":"markdown","c871c166":"markdown","3b4ebc97":"markdown","2d538981":"markdown","640e9e8e":"markdown","08a6c88b":"markdown","67a0d20d":"markdown","6895c850":"markdown","8a7febf6":"markdown","f9c040c0":"markdown","049090be":"markdown","32c42f0f":"markdown","252a91b9":"markdown","c87b4b63":"markdown","5c150f20":"markdown","7611725c":"markdown","dde69903":"markdown","ed688020":"markdown","8b65d236":"markdown","50e0ff28":"markdown","c6d45f35":"markdown","f39632ca":"markdown","4806757c":"markdown","040e224c":"markdown","57856325":"markdown","f84f634c":"markdown","e4b17cec":"markdown","eb8b74ba":"markdown","7237caa1":"markdown","a0905d81":"markdown"},"source":{"70a5812f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nfrom folium.plugins import HeatMap\nimport pandas_profiling\nimport plotly.express as px\n\nfrom sklearn import preprocessing\nimport datetime as dt    # for linear reg.\n\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler\nfrom xgboost import XGBClassifier\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn import metrics\n#from sklearn.metrics import r2_score,mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\n","1ff7f21b":"data = pd.read_csv(\"..\/input\/crimes-in-boston\/crime.csv\", encoding = \"latin1\")","9e74a4ac":"# data.profile_report()  \n#It takes a lot of time, don't run it each time","669c3f93":"data.info()","a1bc6a2a":"print(data.isnull().sum(), end = '\\n\\n')\nprint(data[(data['Lat'].isnull()) | (data['Long'].isnull())]['Location'].unique())","5b8f0276":"data.head()","7a293815":"data.info()","1fd70dd1":"data.describe().T","0d8c3690":"# rename columns\ndata.rename(columns = {\"INCIDENT_NUMBER\": \"Incident_Number\", \n                     \"OFFENSE_CODE\":\"Offense_Code\",\"OFFENSE_CODE_GROUP\":\"Offense_Code_Group\",\"OFFENSE_DESCRIPTION\":\"Offense_Description\",\n                     \"DISTRICT\": \"District\",\"REPORTING_AREA\": \"Reporting_Area\",\"SHOOTING\": \"Shooting\",\n                     \"OCCURRED_ON_DATE\": \"Occurred_On_Date\",\"YEAR\": \"Year\",\"MONTH\": \"Month\",\n                     \"DAY_OF_WEEK\": \"Day_Of_Week\",\"HOUR\": \"Hour\",\"UCR_PART\": \"Ucr_Part\",\n                     \"STREET\": \"Street\"\n                     }, \n                                 inplace = True) ","1d5fc656":"data[\"Occurred_On_Date\"] = data[\"Occurred_On_Date\"].apply(pd.to_datetime, errors='coerce')\ndata[\"Occurred_On_Date\"] = data[\"Occurred_On_Date\"].dt.date","28ac10cb":"data[\"Occurred_On_Date\"] = data[\"Occurred_On_Date\"].apply(pd.to_datetime, errors='coerce')","c743f327":"sns.heatmap(data.isnull(), cbar=False)","f83883e4":"#missing data\ntotal = data.isnull().sum().sort_values(ascending=False)\npercent = (data.isnull().sum()\/data.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(8)","a8043133":"data.Shooting.fillna('N', inplace=True)","05065971":"# 319073 entriesden 296573' a d\u00fc\u015ft\u00fc.\ndata=data.dropna()","98187075":"data.columns","25200fc8":"off_code = data.groupby('Offense_Code_Group')['Offense_Code'].nunique().sort_values(ascending = False)\noff_code.to_frame().reset_index()","3cc84949":"print(data[\"Ucr_Part\"].unique())","da346902":"def getSeason(month):\n    if (month == 12 or month == 1 or month == 2):\n       return \"Winter\"\n    elif(month == 3 or month == 4 or month == 5):\n       return \"Spring\"\n    elif(month ==6 or month==7 or month == 8):\n       return \"Summer\"\n    else:\n       return \"Fall\"","902f0a52":"data['Season'] = data.Month.apply(getSeason)","de4bfc0f":"data['Day'] = 0\ndata['Night'] = 0\n# Day or night for 1st month\ndata['Day'].loc[(data['Hour'] >= 6) & (data['Hour'] <= 18)] = 1","68dd8bbd":"data['Night'].loc[data['Day']==0]=1","0967f98f":"plt.figure(figsize=(16,8))\ndata['Night'].value_counts().plot.bar()\nplt.show()","05caab38":"year_count = []\n\nfor i in data.Year.unique():\n    year_count.append(len(data[data['Year']==i]))\n\nplt.figure(figsize=(12,5))\nsns.pointplot(x=data.Year.unique(),y=year_count,color='blue',alpha=0.8)\nplt.xlabel('Year',fontsize = 15)\nplt.xticks(rotation=45)\nplt.ylabel('Crime Count',fontsize = 15)\nplt.title('Crime Counts Per Year',fontsize = 15)\nplt.grid()\nplt.show()","8726e6ff":"sns.countplot(data=data, x=\"Year\",palette='YlGnBu')\nplt.title('Number Of Crimes Each Year')","3908d291":"season_counts = data.groupby('Season').count()['Incident_Number'].to_frame().reset_index()\nax = sns.barplot(x = 'Season' , y=\"Incident_Number\", data = season_counts, palette='YlGnBu')\nplt.title('Number Of Crimes Each Season')","9e08bd94":"month_counts = data.groupby('Month').count()['Incident_Number'].to_frame().reset_index()\nax = sns.barplot(x = 'Month' , y=\"Incident_Number\", data = month_counts, palette='YlGnBu')\nplt.title('Number Of Crimes Each Month')","06c6cdeb":"day_counts = data.groupby('Day_Of_Week').count()['Incident_Number'].to_frame().reset_index()\nax = sns.barplot(x = 'Day_Of_Week' , y=\"Incident_Number\", data = day_counts, palette='YlGnBu')\nplt.title('Number Of Crimes Each Day_of_Week')\nprint(day_counts)","3ea4d498":"plt.figure(figsize=(15,7))\ndata.groupby(['Year','Month']).count()['Incident_Number'].plot.bar()\nplt.title('Crime counts per year and month')","b628c176":"fig, ax = plt.subplots(figsize=(17,8))\n# with sns.color_palette(\"RdGy\", 10):\nmontyearAggregated = pd.DataFrame(data.groupby([\"Month\",\"Year\"])[\"Incident_Number\"].count()).reset_index()\na=sns.barplot(data=montyearAggregated,x=\"Month\", y=\"Incident_Number\",hue = 'Year', palette='YlGnBu')\na.set_title(\"Crimes by Month of Year\",fontsize=12)\nplt.legend(loc='upper right')\nplt.show()","dac09975":"hour_nums = data.groupby(['Hour']).count()['Incident_Number'].to_frame().reset_index()\nax = sns.barplot(x = 'Hour' , y=\"Incident_Number\", data = hour_nums,  palette='YlGnBu')","17500511":"df_year_new=data.groupby([\"Year\",\"Month\"])[\"Incident_Number\"].count().reset_index()\ndf_year_filter=df_year_new[~df_year_new['Month'].isin(['1','2','3','4','5','11','12'])]\nfig = plt.figure(figsize=(8,8))\nwith sns.color_palette(\"BrBG\",4):\n    ctplt2=sns.catplot(x=\"Year\", y=\"Incident_Number\",kind=\"box\", data=df_year_new,size=5, aspect=2)\n    plt.ylabel('Count')\n    plt.show();","9c9e70d4":"plt.title('Incident Number vs Year')\nyear_counts = data.groupby('Year').count()['Incident_Number'].to_frame().reset_index()\nprint(data.groupby('Year').count()['Incident_Number'])\nax = sns.barplot(x = 'Year' , y=\"Incident_Number\", data = year_counts, palette='YlGnBu')","32ec5f08":"print('Count of Months Per Year:\\n',data.groupby('Year')['Month'].nunique())\nav_month = (data.groupby('Year').count()['Incident_Number'] \/ data.groupby('Year')['Month'].nunique()).to_frame().reset_index()\n\nprint('\\nAverage monthly incident per year:\\n',av_month)\nav_month.rename(columns = {0:'Incident_n-Number'}, inplace = True)\n","9f407a7f":"print(\"Min date:  \", data.min()['Occurred_On_Date'])\nprint(\"Max date:  \", data.max()['Occurred_On_Date'])\nprint(\"--------------------------------------------\")\ndata['Occurred_On_Date'] = pd.to_datetime(data['Occurred_On_Date'])\nyearly_counts = data.groupby('Year').count()['Incident_Number'].to_numpy()\ndays = [(data[data['Year'] == year].Occurred_On_Date.max() - data[data['Year'] == year].Occurred_On_Date.min()).days for year in data.Year.sort_values().unique()]\naverage_daily_incidents = yearly_counts\/days\nprint(\"Average Daily Crimes:  \")\nprint([str(year)+\": \"+str(avg)[:4] for year, avg in enumerate(average_daily_incidents, 2015)])","77f0b0f8":"d_avg = pd.DataFrame(data = average_daily_incidents, index = av_month.index)\nd_avg.rename(columns = {0:'counts'}, inplace = True)\nplt.title('Avg. Daily Incidents')\n\nax = sns.barplot(x = d_avg.index , y=\"counts\", data = d_avg,palette='YlGnBu' )\nax.set_xticklabels(data.Year.sort_values().unique())","0b311b5d":"weekend = data[(data['Day_Of_Week'] == 'Saturday') | (data['Day_Of_Week'] == 'Sunday')]\nweekday = data[(data['Day_Of_Week']!= 'Saturday') & (data['Day_Of_Week'] != 'Sunday')]\n\nweekday_year = weekday.groupby('Year').count()['Incident_Number'].to_frame()\nweekend_year = weekend.groupby('Year').count()['Incident_Number'].to_frame()\nplt.title('Incidents for weekend')\n\nax = sns.barplot(x = weekend_year.index , y=\"Incident_Number\", data = weekend_year,palette='YlGnBu')","65cfdf83":"plt.title('Incidents for weekday')\nax = sns.barplot(x = weekday_year.index , y=\"Incident_Number\", data = weekday_year,palette='YlGnBu')","afa56c55":"plt.title('Filtered by non-null months')\nmonthCrimes = df_year_new[~df_year_new['Month'].isin(['1','2','3','4','5','11','12'])]\nyearly_counts = monthCrimes.groupby('Year').count()['Incident_Number'].to_numpy()\nax = sns.barplot(x = [2015, 2016, 2017, 2018] , y=yearly_counts,palette='YlGnBu')","67ea2d0e":"sns.catplot(x='Hour',\n           kind='count',\n            height=4, \n            aspect=3,\n            palette='BrBG',\n            #color='BrBG',\n           data=data)\nplt.title('Number Of Crimes Each Hour')\nplt.xticks(size=10)\nplt.yticks(size=10)\nplt.xlabel('Hour', fontsize=15)\nplt.ylabel('Count', fontsize=15)","5f9ce2f3":"plt.figure(figsize=(20,8))\ndata.groupby(['Year','Day_Of_Week']).count()['Incident_Number'].plot.bar(color = ['sienna', 'darkolivegreen', 'chocolate', 'seagreen'])","20030810":"plt.title(\"Crime Amount By Year(all data)\")\nyears = data.groupby('Year').count()['Incident_Number'].to_frame().reset_index()\nax = sns.barplot(x = 'Year' , y=\"Incident_Number\", data = years, palette='YlGnBu')","c3e39002":"fig,axes= plt.subplots(2,2)\nfig.set_size_inches(16,12)\nwith sns.color_palette('BrBG',4):\n  a=sns.countplot(x=\"Day_Of_Week\",order=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],data=data,ax=axes[0, 0],palette='YlGnBu')\n  a.set(xlabel='Dayofweek', ylabel='Total Crime')\n  a.set_title(\"Crime Amount By Weekday\",fontsize=10)\n\n  b=sns.countplot(x=\"Month\",data=data,ax=axes[0, 1],palette='YlGnBu')\n  b.set(xlabel='Month', ylabel='Total Crime')\n  b.set_title(\"Crime Amount By Month\",fontsize=10)\n\n  c=sns.countplot(x=\"Season\",data=data,ax=axes[1, 0])\n  c.set(xlabel='Season', ylabel='Total Crime')\n  c.set_title(\"Crime Amount By Season\",fontsize=10)\n\n\n   \n  #df_year_new=data.groupby([\"Year\",\"Month\"])[\"Incident_Number\"].count().reset_index()\n  #df_year_filter=df_year_new[~df_year_new['Month'].isin(['1','2','3','4','5','11','12'])]\n  d=sns.countplot(x=\"Year\",data=df_year_filter,ax=axes[1, 1])\n  d.set(xlabel='Year', ylabel='Total Crime')\n  d.set(xlabel='Year', ylabel='Total Crime')\n  d.set_title(\"Crime Amount By Year(filtered by missing months)\",fontsize=10);\n","da627bdf":"ten_freq_crimes = data[\"Offense_Code_Group\"].value_counts()[:12]\ndf_top_crimes = data[data[\"Offense_Code_Group\"].isin(ten_freq_crimes.index)]\ndf_tp = df_top_crimes.pivot_table(index=df_top_crimes[\"Occurred_On_Date\"],\n                                                      columns=[\"Offense_Code_Group\"],aggfunc=\"size\", fill_value=0).resample(\"M\").sum()\n\n#palette = plt.get_cmap('Set2')\nnum=0\nax,fix = plt.subplots(figsize=(15,7))\nfor column in df_tp:\n    num+=1\n    plt.subplot(3,4, num)\n    for v in df_tp:\n        plt.plot(df_tp.index,v,data=df_tp,marker='', color='grey', linewidth=0.9, alpha=0.3)\n        plt.tick_params(labelbottom=False)\n        plt.plot(df_tp.index,column, data=df_tp,color=\"green\", linewidth=2.4, alpha=0.75, label=column)\n        plt.title(column, loc='left', fontsize=12, fontweight=0, color=\"black\", alpha=0.75)\nax.text(x=0.05,y=0.95,s=\"Timeline of the most frequent crimes(2015-2018).\",alpha=0.75, fontsize=22)","87605f0b":"plt.subplots(figsize=(15,6))\nsns.countplot('District',palette='BrBG',data=data,edgecolor=sns.color_palette('YlGnBu',20),order=data['District'].value_counts().index)\nplt.xticks(rotation=90)\nplt.title('Number Of Crimes By District')\nplt.show()","5bab8667":"plt.figure(figsize=(20,8))\ndata.groupby(['District','Year']).count()['Incident_Number'].plot.bar(color = ['sienna', 'darkolivegreen', 'chocolate', 'seagreen'])","5704778e":"fig = plt.figure(figsize=(12,5))\ncrime_street = data.groupby('Street')['Incident_Number'].count().nlargest(10)\ncrime_street.plot(kind='bar', color =\"saddlebrown\")\nplt.xlabel(\"Street\")\nplt.ylabel(\"Offense Amount\")\nplt.show()","a7775f2e":"(data.groupby('District')['Street'].nunique().sort_values(ascending = False).to_frame()).head()","5dbfdda6":"((data.groupby([\"Lat\",\"Long\"]).count()[['Incident_Number']]).reset_index()).head()","402b8ca4":"plt.figure(figsize=(7,7))\nsp = data[(data['Lat'] != -1) & (data['Long'] != -1)]\nsns.scatterplot(x=\"Lat\", y=\"Long\",hue='District',data=sp)","0a00eccd":"plt.subplots(figsize=(15,6))\nsns.countplot('Offense_Code_Group',palette='BrBG',data=data,edgecolor=sns.color_palette('YlGnBu',20),order=data['Offense_Code_Group'].value_counts().index)\nplt.xticks(rotation=90)\nplt.title('Types of serious crimes')\nplt.show()","a3cf5432":"fig = plt.figure(figsize=(20,10))\norder2 = data['Offense_Code_Group'].value_counts().head(6).index\nsns.countplot(data = data, x='Offense_Code_Group',hue='District', order = order2,palette='BrBG' );\nplt.ylabel(\"Offense Amount\");","d09eda99":"# import plotly.express as px\nds = data.dropna(subset = ['Lat','Long','District'])\nds = ds[ds['Offense_Code_Group'] == 'Motor Vehicle Accident Response']\nlocation = pd.DataFrame(data =(ds.groupby([\"Lat\",\"Long\"]).count()[['Incident_Number']]).reset_index().values, columns=[\"Lat\",\"Long\",\"Incident_Number\"])\nx,y = location['Long'], location['Lat']\nfig = px.density_mapbox(location,lat=\"Lat\",lon=\"Long\",z=\"Incident_Number\",radius=10,center=dict(lat=42.32475, lon=-71.076),zoom=10,mapbox_style=\"stamen-terrain\",height=500,width=1450)\nfig.show()","387004d4":"ds = data.dropna(subset = ['Lat','Long','District'])\nds = ds[ds['Offense_Code_Group'] == 'Larceny']\nlocation = pd.DataFrame(data =(ds.groupby([\"Lat\",\"Long\"]).count()[['Incident_Number']]).reset_index().values, columns=[\"Lat\",\"Long\",\"Incident_Number\"])\nx,y = location['Long'], location['Lat']\nfig = px.density_mapbox(location,lat=\"Lat\",lon=\"Long\",z=\"Incident_Number\",radius=10,center=dict(lat=42.32475, lon=-71.076),zoom=10,mapbox_style=\"stamen-terrain\",height=500,width=1450)\nfig.show()","59800e4e":"ds = data.dropna(subset = ['Lat','Long','District'])\nds = ds[ds['Offense_Code_Group'] == 'Medical Assistance']\nlocation = pd.DataFrame(data =(ds.groupby([\"Lat\",\"Long\"]).count()[['Incident_Number']]).reset_index().values, columns=[\"Lat\",\"Long\",\"Incident_Number\"])\nx,y = location['Long'], location['Lat']\nfig = px.density_mapbox(location,lat=\"Lat\",lon=\"Long\",z=\"Incident_Number\",radius=10,center=dict(lat=42.32475, lon=-71.076),zoom=10,mapbox_style=\"stamen-terrain\",height=500,width=1450)\nfig.show()","b5607682":"shtng = data[(data.Shooting == 'Y') & (data.District.notnull())]\n\nimport folium\nimport folium.plugins as plugins\n\nlatitude = list(shtng.Lat)[1] # This is to initiate the latitude start point for the map\nlongitude = list(shtng.Long)[1] # This is to initiate the longitude start point for the map\n\nlatitudes = list(shtng.Lat) #create the list of all reported latitudes\nlongitudes = list(shtng.Long) #create the list of all reported longitudes\n\nshooting_map = folium.Map(location = [latitude, longitude], zoom_start = 12) # instantiate a folium.map object\n\nshooting = plugins.MarkerCluster().add_to(shooting_map) # instantiate a mark cluster object for the incidents in the dataframe\n\n# loop through the dataframe and add each data point to the mark cluster\nfor lat, lng, label, in zip(shtng.Lat, shtng.Long, shtng.District):\n    if (not np.isnan(lat)) & (not np.isnan(lng)): # also, we check a non-nullness of the coordinates\n        folium.Marker(\n            location=[lat, lng],\n#             icon=None,\n            popup=label,\n            icon=folium.Icon(icon='exclamation-sign')\n        ).add_to(shooting)\n\n# display the map\nshooting_map","eab5b3f3":"# Folium crime map\ncrime_map = folium.Map(location=[42.3125,-71.0875], \n                      zoom_start = 13)\n\n# y\u0131l filtrelemek i\u00e7in: \n# data_heatmap = data[data.Year ==  2016]   \n\ndata_heatmap = data[['Lat','Long']]\ndata_heatmap = data.dropna(axis=0, subset=['Lat','Long'])\ndata_heatmap = [[row['Lat'],row['Long']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\ncrime_map","482ac4c8":"# if Shooting is No =  0, Yes = 1 .\ndef isShooting(dataFrame):\n    dataFrame[\"Shooting\"] = dataFrame[\"Shooting\"].apply(lambda x: 1 if x == \"Y\" else 0)\n    return dataFrame\ndata = isShooting(data)","7de27abc":"data[\"DayOfWeek\"] = data[\"Day_Of_Week\"].map({\n    \"Monday\":1,\n    \"Tuesday\":2,\n    \"Wednesday\":3,\n    \"Thursday\":4,\n    \"Friday\":5,\n    \"Saturday\":6,\n    \"Sunday\":7\n})","8a574bac":"# Fall:0 , Spring: 1 , Summer: 2 , Winter:3\nle = preprocessing.LabelEncoder()\ndata['Seasons'] = le.fit_transform(data['Season'])","825cca69":"data = data.drop(\"Season\", axis = 1)","b318bba5":"# 'Part One', 'Part Three', 'Part Two', 'Other' lerin anlaml\u0131 olarak de\u011fi\u015fmesini istedi\u011fim i\u00e7in label encodingle de\u011fil mapleyerek olu\u015fturdum.\ndata[\"Ucr_Parts\"] = data[\"Ucr_Part\"].map({\n    \"Part One\":1,\n    \"Part Two\":2,\n    \"Part Three\":3,\n    \"Other\":0\n})","1144acec":"data = data.drop(\"Ucr_Part\", axis = 1)","5a30e9a7":"data.columns","378c8f2b":"# sort\ndata = data.sort_values(by =['Occurred_On_Date'], ascending=False)\ndata[[  'District', 'Shooting','Occurred_On_Date', 'Year', 'Month', 'Day_Of_Week', 'Hour',  'Night', 'DayOfWeek', 'Seasons','Ucr_Parts']]","0baf9a85":"data","4e61fe91":"dataR = pd.DataFrame(data.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataR.tail()","b57f5a25":"dataR.Occurred_On_Date.nunique()   # her g\u00fcn e\u015fsiz","2f5b7969":"\"\"\"\ndataR[\"Hour\"] = data[\"Hour\"]\ndataR[\"Hour\"] = dataR[\"Hour\"].fillna((dataR[\"Hour\"].mean()))\ndataR[\"Ucr_Parts\"] = data[\"Ucr_Parts\"]\ndataR[\"Ucr_Parts\"] = dataR[\"Ucr_Parts\"].fillna((dataR[\"Ucr_Parts\"].mean()))\n\"\"\"\n# bu iki feature scorumu art\u0131rmad\u0131, complexityi art\u0131rmamas\u0131 i\u00e7in modele dahil etmedim.","c5efd784":"dataR","a3d88ac5":"dataR.isnull().sum()   #we have 1113 null value on day feature if we get day column from original dataset, so we can create from occured_on_dae","ffba9928":"dataR['Day'] = dataR['Occurred_On_Date'].dt.dayofweek\ndays = ( 1,2,3,4,5,6,7) # starts w monday\ndataR['Day'] = dataR['Day'].apply(lambda x: days[x])","91f3ce7d":"# rename for clarity\ndataR.rename(columns={'Occurred_On_Date': 'OccuredDate', 'Incident_Number': 'CaseCount', 'Day': 'DayOfWeek'}, inplace=True)","49b8990c":"dataR","b65bcb03":"dataR = pd.concat([dataR,pd.get_dummies(dataR['District'], prefix='D')],axis=1)\n\n# now drop the original 'country' column (you don't need it anymore)\ndataR.drop(['District'],axis=1, inplace=True)","6bc2c725":"dataR","af03e734":"# dataR.loc[:,\"D_A1\":\"D_E5\"][1150:1200]","111e0e60":"dataR[\"D_A1\"] = np.int64(dataR[\"D_A1\"])                      # convert uint8 to int64\ndataR[\"D_A15\"] = np.int64(dataR[\"D_A15\"])\ndataR[\"D_A7\"] = np.int64(dataR[\"D_A7\"])\ndataR[\"D_B2\"] = np.int64(dataR[\"D_B2\"])\ndataR[\"D_B3\"] = np.int64(dataR[\"D_B3\"])\ndataR[\"D_C11\"] = np.int64(dataR[\"D_C11\"])\ndataR[\"D_C6\"] = np.int64(dataR[\"D_C6\"])\ndataR[\"D_D14\"] = np.int64(dataR[\"D_D14\"])\ndataR[\"D_D4\"] = np.int64(dataR[\"D_D4\"])\ndataR[\"D_E13\"] = np.int64(dataR[\"D_E13\"])\ndataR[\"D_E18\"] = np.int64(dataR[\"D_E18\"])\ndataR[\"D_E5\"] = np.int64(dataR[\"D_E5\"])","47a0dd39":"dataR.info()","39f0fac4":"# import datetime as dt                                                                    # convert date to ordinal for linear regression \ndataR['OccuredDate'] = pd.to_datetime(dataR['OccuredDate'])\ndataR['OccuredDate'] = dataR['OccuredDate'].map(dt.datetime.toordinal)\n# \"TypeError: invalid type promotion\" ","c083de65":"dataR['OccuredDate'].head()           ","d6eb8426":"dataR[\"OccuredDate\"].nunique()  \n# date format\u0131yla ayn\u0131 say\u0131da unique de\u011fere sahip, her g\u00fcn i\u00e7in 1 sat\u0131r.                                 ","ff8bde12":"dataR","0d2d0e56":"# importings moved up to importings part \n\"\"\"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn import metrics\n#from sklearn.metrics import r2_score,mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\"\"\"","c8c2bd43":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(dataR.drop(columns=[\"CaseCount\"]), dataR[\"CaseCount\"], random_state = 42)  ","72834e92":"lr = LinearRegression().fit(x_train,y_train)\n\ny_train_pred = lr.predict(x_train)\ny_test_pred = lr.predict(x_test)\n\nprint(lr.score(x_test,y_test))","d67786a6":"ax = sns.regplot(x=y_test, y=y_test_pred, color=\"g\")","76ae0399":"print(\"R2 Score: \",r2_score(y_test, y_test_pred))\nprint(\"MAE:\", metrics.mean_absolute_error(y_test, y_test_pred))\nprint('MSE:', metrics.mean_squared_error(y_test, y_test_pred))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_test_pred)))                    ","c38e36b8":"ucr_counts = data.groupby('Ucr_Parts').count()['Incident_Number'].to_frame().reset_index()\nax = sns.barplot(x = 'Ucr_Parts' , y=\"Incident_Number\", data = ucr_counts,palette='BrBG')\nprint(ucr_counts)","d12f77ac":"data[\"District\"].unique()","db545474":"dataD4 = data.loc[data['District'] == \"D4\"]\ndataD4 = dataD4.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataD4 = pd.DataFrame(dataD4.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataD4.rename(columns={ 'Incident_Number': 'countD4','Occurred_On_Date': \"DateD4\"}, inplace=True)\ndataD4 = dataD4.drop(\"District\",axis = 1)","c98ba4b0":"dataD14 = data.loc[data['District'] == \"D14\"]\ndataD14 = dataD14.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataD14 = pd.DataFrame(dataD14.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataD14.rename(columns={ 'Incident_Number': 'countD14','Occurred_On_Date': \"DateD14\"}, inplace=True)\ndataD14 = dataD14.drop(\"District\",axis = 1)","3b43bedc":"dataC11 = data.loc[data['District'] == \"C11\"]\ndataC11 = dataC11.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataC11 = pd.DataFrame(dataC11.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataC11.rename(columns={ 'Incident_Number': 'countC11','Occurred_On_Date': \"DateC11\"}, inplace=True)\ndataC11 = dataC11.drop(\"District\",axis = 1)","7c6fad3d":"dataB3 = data.loc[data['District'] == \"B3\"]\ndataB3 = dataB3.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataB3 = pd.DataFrame(dataB3.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataB3.rename(columns={ 'Incident_Number': 'countB3', 'Occurred_On_Date': \"DateB3\"}, inplace=True)\ndataB3 = dataB3.drop(\"District\",axis = 1)","35e4a692":"dataB2 = data.loc[data['District'] == \"B2\"]\ndataB2 = dataB2.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataB2 = pd.DataFrame(dataB2.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataB2.rename(columns={ 'Incident_Number': 'countB2','Occurred_On_Date': \"DateB2\"}, inplace=True)\ndataB2 = dataB2.drop(\"District\",axis = 1)","d835c7df":"dataC6 = data.loc[data['District'] == \"C6\"]\ndataC6 = dataC6.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataC6 = pd.DataFrame(dataC6.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataC6.rename(columns={ 'Incident_Number': 'countC6','Occurred_On_Date': \"DateC6\"}, inplace=True)\ndataC6 = dataC6.drop(\"District\",axis = 1)","b2006d49":"dataA1 = data.loc[data['District'] == \"A1\"]\ndataA1 = dataA1.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataA1 = pd.DataFrame(dataA1.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataA1.rename(columns={ 'Incident_Number': 'countA1','Occurred_On_Date': \"DateA1\"}, inplace=True)\ndataA1 = dataA1.drop(\"District\",axis = 1)","19ef93ed":"dataE5 = data.loc[data['District'] == \"E5\"]\ndataE5 = dataE5.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataE5 = pd.DataFrame(dataE5.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataE5.rename(columns={ 'Incident_Number': 'countE5','Occurred_On_Date': \"DateE5\"}, inplace=True)\ndataE5 = dataE5.drop(\"District\",axis = 1)","cfe2259b":"dataA7 = data.loc[data['District'] == \"A7\"]\ndataA7 = dataA7.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataA7 = pd.DataFrame(dataA7.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataA7.rename(columns={ 'Incident_Number': 'countA7','Occurred_On_Date': \"DateA7\"}, inplace=True)\ndataA7 = dataA7.drop(\"District\",axis = 1)","e463e850":"dataE13 = data.loc[data['District'] == \"E13\"]\ndataE13 = dataE13.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataE13 = pd.DataFrame(dataE13.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataE13.rename(columns={ 'Incident_Number': 'countE13','Occurred_On_Date': \"DateE13\"}, inplace=True)\ndataE13 = dataE13.drop(\"District\",axis = 1)","edbb97a5":"dataE18 = data.loc[data['District'] == \"E18\"]\ndataE18 = dataE18.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataE18 = pd.DataFrame(dataE18.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataE18.rename(columns={ 'Incident_Number': 'countE18', 'Occurred_On_Date': \"DateE18\"}, inplace=True)\ndataE18 = dataE18.drop(\"District\",axis = 1)","1b52d533":"dataA15 = data.loc[data['District'] == \"A15\"]\ndataA15 = dataA15.loc[:, [\"Incident_Number\",'Offense_Code_Group', 'District', 'Occurred_On_Date']]\ndataA15 = pd.DataFrame(dataA15.groupby([\"Occurred_On_Date\",\"District\"])[\"Incident_Number\"].count()).reset_index()\ndataA15.rename(columns={ 'Incident_Number': 'countA15','Occurred_On_Date': \"DateA15\"}, inplace=True)\ndataA15 = dataA15.drop(\"District\",axis = 1)","3ab6ae1e":"dataE18","619735dd":"dataUCR = data.loc[data['Ucr_Parts'] == 3]\ndataUCR = dataUCR.loc[:, [\"Incident_Number\", 'Ucr_Parts', 'Occurred_On_Date']]\ndataUCR = pd.DataFrame(dataUCR.groupby([\"Occurred_On_Date\",\"Ucr_Parts\"])[\"Incident_Number\"].count()).reset_index()\ndataUCR.rename(columns={ 'Incident_Number': 'countUCR','Occurred_On_Date': \"DateUCR\"}, inplace=True)\ndataUCR = dataUCR.drop(\"Ucr_Parts\",axis = 1)\n","3a1a6b10":"dataUCR","eca93041":"result = pd.concat([dataUCR,dataD14, dataC11, dataD4, dataB3,dataB2,dataC6, dataA1, dataE5, dataA7, dataE13,\n       dataE18, dataA15], axis=1, sort=False)","848577e4":"result = result.drop([\"DateUCR\",'DateC11','DateD4', 'DateB3',  'DateB2','DateC6',  'DateA1', 'DateE5',  'DateA7',  'DateE13','DateE18',  'DateA15'] ,axis = 1)","b5473ba8":"result.isnull().sum()","cae7ae4a":"result[\"countA15\"] = result[\"countA15\"].fillna(result[\"countA15\"].mean())","5a985aef":"result['DayofMonth'] = result['DateD14'].dt.day\nresult['Month'] = result['DateD14'].dt.month\nresult['Weekday'] = result['DateD14'].dt.weekday","aca8d121":"result","cb1e34ce":"result.isnull().sum()","65528875":"result","09b205ab":"result['DateD14'] = pd.to_datetime(result['DateD14'])\nresult['DateD14'] = result['DateD14'].map(dt.datetime.toordinal)","0bbf97e6":"x_trainUCR, x_testUCR, y_trainUCR, y_testUCR = train_test_split(result.drop(columns=[\"countUCR\"]), result[\"countUCR\"], random_state = 42)  ","20586e47":"lr = LinearRegression().fit(x_trainUCR,y_trainUCR)\n\ny_train_predUCR = lr.predict(x_trainUCR)\ny_test_predUCR = lr.predict(x_testUCR)\n\nprint(lr.score(x_testUCR,y_testUCR))","457b0643":"print(\"R2 Score: \",r2_score(y_testUCR, y_test_predUCR))\nprint(\"MAE:\", metrics.mean_absolute_error(y_testUCR, y_test_predUCR))\nprint('MSE:', metrics.mean_squared_error(y_testUCR, y_test_predUCR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_testUCR, y_test_predUCR)))   ","d9ea96de":"ax = sns.regplot(x=y_testUCR, y=y_test_predUCR, color=\"g\")","fb9874e5":"dataD2 = data[['Offense_Code_Group', 'District',   'Year', 'Seasons', 'Hour', 'Shooting', 'DayOfWeek',\"Ucr_Parts\",\"Lat\",\"Long\"]]\ndataD2['Offense_Code_Group'] = le.fit_transform(dataD2['Offense_Code_Group'])","0c37b434":"X_train_xgb2, X_test_xgb2, y_train_xgb2, y_test_xgb2 = train_test_split(dataD2.drop([\"District\"], axis = 1), dataD2[\"District\"], test_size=0.20, random_state=42)","d9f6da07":"scaler = StandardScaler()\nscaler.fit(X_train_xgb2)\nX_train = scaler.transform(X_train_xgb2)\nX_test = scaler.transform(X_test_xgb2)","eea5dde6":"xgB2 = XGBClassifier(learning_rate=0.1, n_estimators=140, max_depth=5, random_state=0)\nxgB2.fit(X_train_xgb2, y_train_xgb2)","e11d1abd":"y_predXG2 = xgB2.predict(X_test_xgb2)\ncmXG =confusion_matrix(y_test_xgb2, y_predXG2)\nprint(classification_report(y_test_xgb2, y_predXG2))","8d133578":"from xgboost import plot_importance\nplot_importance(xgB2).set_yticklabels([\"Offense_Code_Group\",\"Year\",\"Seasons\",\"Hour\",\"Shooting\",\"DayOfWeek\",\"Ucr_Parts\",\"Lat\",\"Long\"])","e80128d9":"data['DayofMonth'] = data['Occurred_On_Date'].dt.day","95efcf5a":"data.columns","13ebc70a":"dataD = data[['Offense_Code_Group', 'District',   'Year', 'Seasons', 'Hour', 'Shooting', 'DayOfWeek',\"Ucr_Parts\",\"DayofMonth\",\"Night\"]]","def3ba93":"dataD[\"DayofMonth\"].nunique()","12cadde7":"dataD['Offense_Code_Group'] = le.fit_transform(dataD['Offense_Code_Group'])\n# dataD['Reporting_Area'] = le.fit_transform(dataD['Reporting_Area'])     # Reporting areay\u0131 modele dahil edince 0.97 accuracy \u00e7\u0131k\u0131yor.\n# dataD = data[['Offense_Code_Group', 'District',   'Year', 'Seasons', 'Hour', 'Shooting', 'DayOfWeek',\"Ucr_Parts\",'Year', 'Month', 'Night']]\n# 'Year', 'Month', 'Night' columnlar\u0131n\u0131 eklersek modelin accuracysi yine 0.20'de kal\u0131yor. De\u011fi\u015ftirmiyor.","e472db5e":"data.columns","47f2aaa4":"dataD","c8577c08":"X_train, X_test, y_train, y_test = train_test_split(dataD.drop([\"District\"], axis = 1), dataD[\"District\"], test_size=0.20, random_state=42)","d4a501cf":"# from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","7105e898":"# from xgboost import XGBClassifier\n\nxgB = XGBClassifier(learning_rate=0.1, n_estimators=140, max_depth=5, random_state=0)\nxgB.fit(X_train, y_train)","abc04ac7":"# from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, confusion_matrix, classification_report\n\ny_predXG = xgB.predict(X_test)\ncmXG =confusion_matrix(y_test, y_predXG)\nprint(classification_report(y_test, y_predXG))","54a37948":"# Feature Importance ile sonucumuza en \u00e7ok katk\u0131 sa\u011flayan featurelar\u0131 g\u00f6rebiliriz. Gelecekteki modelleri buna g\u00f6re kurabiliriz.\nplot_importance(xgB).set_yticklabels([\"Offense_Code_Group\",\"Year\",\"Seasons\",\"Hour\",\"Shooting\",\"DayOfWeek\",\"Ucr_Parts\",\"DayofMonth\",\"Night\"])","fdffbdbf":"dataD = data[['Offense_Code_Group', 'District',   'Year', 'Seasons', 'Hour', 'Shooting', 'DayOfWeek',\"Ucr_Parts\",\"DayofMonth\",\"Night\"]]","0c865c8a":"dataD","56d125fe":"dataD3 = data[['Offense_Code_Group','District', 'Year', 'Seasons', 'Hour', 'Shooting', 'DayOfWeek',\"Ucr_Parts\",\"DayofMonth\",\"Night\"]]","eaa2d00c":"dataD3['Offense_Code_Group'] = le.fit_transform(dataD3['Offense_Code_Group'])","7fd34868":"plt.figure(figsize=(7,7))\nsp = data[(data['Lat'] != -1) & (data['Long'] != -1)]\nsns.scatterplot(x=\"Lat\", y=\"Long\",hue='District',data=sp)\n\n# for d name https:\/\/mikethemadbiologist.com\/2013\/06\/29\/why-are-bostons-police-districts-named-so-bizarrely\/","04a1b187":"dataD3[\"District\"] = dataD3[\"District\"].map({\n    \n    \"E18\":1,\n    \"E5\":1,\n    \"E13\":1,\n    \"B3\":1,\n    \n    \"D4\":2,\n    \"B2\":2,\n    \"C11\":2,\n    \"C6\":2,\n    \n    \"A15\":3,\n    \"A1\":3,\n    \"A7\":3,\n    \"D14\":3,\n    \n})                         # 3 gruba ay\u0131r\u0131nca %49 accuracy \u00e7\u0131k\u0131yor.","99baed27":"\"\"\"dataD3[\"District\"] = dataD3[\"District\"].map({\n    \"B2\":3,\n    \"E18\":2,\n    \"C11\":3,\n    \"A1\":1,\n    \"D4\":4,\n    \"C6\":4,\n    \"B3\":2,\n    \"A15\":1,\n    \"D14\":4,\n    \"E13\":3,\n    \"A7\":1,\n    \"E5\":2,\n    \n})\"\"\"      \n# acccuracy 0.38","f0e71784":"dataD3","d14ec302":"X_train_xgb3, X_test_xgb3, y_train_xgb3, y_test_xgb3 = train_test_split(dataD3.drop([\"District\"], axis = 1), dataD3[\"District\"], test_size=0.20, random_state=42)","fba8b416":"scaler = StandardScaler()\nscaler.fit(X_train_xgb3)\nX_train = scaler.transform(X_train_xgb3)\nX_test = scaler.transform(X_test_xgb3)","0c342001":"xgB3 = XGBClassifier(learning_rate=0.1, n_estimators=50, max_depth=5, random_state=0)\nxgB3.fit(X_train_xgb3, y_train_xgb3)","35803044":"y_predXG3 = xgB3.predict(X_test_xgb3)\ncmXG3 =confusion_matrix(y_test_xgb3, y_predXG3)\nprint(classification_report(y_test_xgb3, y_predXG3))","8c7f9dcd":"plot_importance(xgB3).set_yticklabels([\"Offense_Code_Group\",\"Year\",\"Seasons\",\"Hour\",\"Shooting\",\"DayOfWeek\",\"Ucr_Parts\",\"DayofMonth\",\"Night\"])","bbc9e809":"When we look at feature importance, we can see how much latitude and longitude values affect our estimation.","f911b292":"<a id=\"section-2one\"><\/a>\n# Create new vars (Season, Day& Night)","34e48171":"Let's build the model.","37d07728":"<a id=\"section-2two\"><\/a>\n# Q1: How has crime changed over the years?","e058e150":"<a id=\"section-2four\"><\/a>\n\n# Q3: What can you say about the distribution of different offenses over the city?","b9f442e4":"<a id=\"section-2threewhenanswer\"><\/a>\n## Q2: Answer ","a8bb186d":"We can see relationship between districts and shooting like that most shooting occur in B2 district. The number of shooting is high near Dorchester ave Roxbury. We can see other cases on the map.","37d8267f":"**Shooting** ","889cdfca":"This time in our dataset we have Hour, Ucr_Part,Offense_Code_Group,Shooting,... columns. \n\nWe will try to classify the district groups.","4598f087":"We have missing data in the A15 district. Let's fill this with average.","5ae0f781":"* **Crime counts per year**","9dbb939e":"We get the daily crime numbers in each district and the crime numbers in Ucr_Part 3.","bcadf4e4":"Let's look at the years by filtering only the months for which data were entered in all months. In the \"Crime Amount by Year\" graph (in question 2) , we can see that the average of the crime amounts is closer. We must pay attention to the missing months to avoid making wrong assumptions.","70cec8cb":"Since the linear regression does not take a date variable, we convert the OccuredDate to ordinal from date.","dd1e1010":"**Feature Importance**","bcc7b236":"* We'll create the day of week column to increase the accuracy.","e7830c8f":"<a id=\"section-3B\"><\/a>\n# Model 3: Predict district& location","23f1371b":"In the previous model, we made an estimate for all Ucr_Parts. We are now customizing the model. Ucr_Part 3 is the Ucr part type with the highest number of crimes. Therefore, we will try to estimate how many crimes can be committed from Ucr_Part 3 in the future.\n\npart1 : 0.42\npart2: 0.57","0399aca8":"Q: *What are the most common crimes?*\n\n\nAccording to the graph below, the most common crimes are motor vehicle accident and larcency.\n","7699c7ab":"As we can guess from the seasons, it seems more crime in June, July and August.","420550ad":"<a id=\"section-2threewhen\"><\/a>\n## **Q2: When?**","cc7bbb61":" * The most crimes seem to be on Friday. The months with the most crimes appear to be July and August (Crime Amount By Month chart), which coincides with the summer season in the Crime Amount By Season chart.\n\n* When we plot again by taking only the months of data entered, we can see that the crime entries are close in the chart called Crime Amount By Year and 2018 is lower than the others.","24534088":"More crime appears in all districts in 2016 and 2017. It was no surprise.","6a6c5e68":"Why did I choose R-squared as the metric?\n\n\nBecause R-squared tells us how much of variance can be explained by the linear model.\nR-squared is conveniently scaled between 0 and 1 and it can be compared with accuracy.\nBetter the model, higher the r2 value.\n ","21b21d97":"# Model 3 without Lat and Long","ffe1456e":"<a id=\"section-1two\"><\/a>\n\n# Imports","4d98b757":"* Crime Numbers of Districts by Years","d37b441a":"**Feature Importance**","acdd496d":" If we add the Ucr_part and Hour features, they do not increase the score of our model. We do not include these to reduce complexity.","18c1f238":"Let's remember the Ucr Parts.","261ea88f":"<a id=\"section-2two1\"><\/a>\n## Q1: Analyze","1153c3e7":"According to the chart below, we do not have data for the first 5 months of 2015 and the last 3 months of 2018. When we look at the number of crimes committed by years, we see that there were fewer crimes in 2015 and 2018 for this reason.","f8b18562":"**Inc\u0131dent Number**","01c9f8e2":"Lat and Long columns produce the Location column. But like the others, Location has no null values. When we print the unique values Location has for Lat or Long being null, we can see that the value was given 0 which also is kind of null for Location. So we we can accept it null.","9eeb7dc8":"Let's try our model without latitude and longitude values.","6521296c":"<a id=\"section-one\"><\/a>\n\n# Intro","e03bd9d5":"Check for null values.","ed62332a":"While predicting the districts, our model was not successful enough. The reasons for this may be the following.\n\n* Districts are close to each other and have no clear boundaries.\n* We have a large number of districts.\n* We don't have enough data.","496e46dd":"The model groups the days according to the district 12 times. This means 12 repetitions each day. This can cause data leakage. Therefore, we will do a more detailed study.","1ed4e42d":"*Why didn't I want to apply time series?*\n\n\nBecause my goal is to predict multiple variables together, it can be difficult for timeseries models. The forecast is determined only by the past behavior of the variable in timeseries. ARIMA is a univariate model (working with one variable only) and hence cannot exploit the leading indicators or explanatory variables.ARIMA requires a lot of time series observations in this dataset.But if we want to handle single variable we can use ARIMA. Our data has a time dimension so we can apply time series.","097cb8ca":"**Seasons**\n\nWe have years and months in our data, but we create the seasons column to see seasonality.","4f746a33":"<a id=\"section-2four2\"><\/a>\n* **Offense Code Group by districts**","05846c35":"We are changing the name again. We give clear names for this model. Case Count returns the total number of cases that were in that district that day.","3ce5ed32":"* **Location**","f3081e15":"Ucr Part is the most general category that defines crimes. UCR is published by the FBI and  stands for uniform crime reports. UCR Part 1 represents the most important\/dangerous crimes.","b0595b43":"<a id=\"section-2five\"><\/a>\n# Feature Encoding","573e6639":"We filled in the  null-values in the Shooting column with N. Because we assumed nulls were not shooting.","3a6800d2":"**Day Of Week**\n\nWe encode days of week with mapping.","2c793da9":"* **Number Of Crimes Each Season**","d1370ed8":"Now, we want to predict the region. If we can predict in which region the crime will occur, the police can work by focusing on the regions.\nIt can help us plan and guide patrol cars. Patrol cars can route in busy places during peak hours.\n\nIn other words, it is important to predict in which district a crime may occur in order to prevent crime.","92990e6e":"Let's add  DayofMonth, Month and Weekday features to our data. Maybe it will help.","11122760":"<a id=\"section-2six\"><\/a>\n#  **Conclusions for Q1,Q2& Q3**","45d741d9":"![Boston1](https:\/\/images.unsplash.com\/photo-1506551907304-60bb62ffc9b0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80)","a4c3f5a2":"We can guess the districts and streets. Classification will be useful here. But we have too many streets, that could be a problem.\n* We can say that the most crimes occur in the B2 district.\n* We can see the streets with the most crime.\n* We can see how the offense code groups are distributed to districts.\n* We can find crime centers with clustering method. We can use these as police stations.","f2505ad7":"\n\n\n**Q1.   How has crime changed over the years?**\n\n* When we look at the number of crimes committed by years, we see that there were fewer crimes in 2015 and 2018.There are 6 missing months in 2015 and 3 months for 2018. So, the significant decrease in this year is most probably cause by these missing values. If we look at it by filtering it according to the months we have data, we can say that the distribution of crimes by years is close.\n\n\n\n**Q2. Is it possible to predict where or when a crime will be committed?**\n\n * The most crimes seem to be on Friday. The months with the most crimes appear to be July and August (Crime Amount By Month chart), which coincides with the summer season in the Crime Amount By Season chart.\n\n* We see that the most crimes occur around  17: 00 ,  18: 00  and  12: 00 . This may be because students \/ staff coincide with departure times and breaks. The number of crimes is likely to increase with the increasing number of people on the street.\n\n\n* From the graph above, we can say that the most crimes occur in the B2 district.\n*  Washington St  is the most criminal street, it is Blue Hill Ave and Boylston St. is following.\n\n*  So, assuming that the next crimes follow the same pattern as the crimes in 2015-2018, based on our analysis, we can speculate which crime could be committed in which region in the future.\n\n\n\n\n\n\n\n**Q3. What can you say about the distribution of different offenses over the city?**\n\n\n*   The most common crimes are motor vehicle accident and larceny.\n \n*   We can say that larceny crime was mostly seen in the D4 district, and the crimes in the motor vehicle accident group were seen in the B2 district.\n\n\n*  By looking at the heat map, we can speculate when crimes are concentrated in the city.\n\n* There is no homogeneous distribution over the Boston city. Crimes are most likely committed in the central areas.\n\n\n\n\n\n\n\n\n\n\n\n\n","98b89c78":"After EDA, we learned about how data is. In line with our main goal, we will make predictions about when and where crimes may occur.","699c691c":"From the graph above, we can say that the most crimes occur in the B2 district.","6f930b51":" <a id=\"section-3A2\"><\/a>\n # A.2.Model 1: Predict for each day (Base-model)","4d60c063":"Let's remember how the districts are distributed within the city.","1cd3783b":"<a id=\"section-1four\"><\/a>\n\n# Missing Value Analyze","701f6002":"Season names can be challenging while developing models. Instead, we will use the numbers below.\n* Fall:0 \n* Spring: 1 \n* Summer: 2 \n* Winter:3","df824b55":"<a id=\"section-two\"><\/a>\n# Exploratory Data Analysis 101","670508d8":"![Districts](https:\/\/i.pinimg.com\/originals\/73\/00\/d7\/7300d79ca2fed818119719fba67d9a50.jpg)","99a1288b":"# Table of Contents\n\n1. [Intro](#section-one)\n \n   1.1.  [Imports](#section-1two)\n   \n   1.2.  [Renaming and Changing Dtype](#section-1three)\n\n   1.3.  [Missing Value Analyze](#section-1four)\n   \n\n2.  [Exploratory Data Analysis 101](#section-two)\n\n      2.1.[Create new vars (Season, Day& Night)](#section-2one)\n\n      2.2. [Q1: How has crime changed over the years?](#section-2two)\n       * [Q1: Analyze](#section-2two1)\n       * [Q1: Answer](#section-2two2)\n    \n     2.3.[Q2: Is it possible to predict where or when a crime will be committed?](#section-2three)\n       * [Q2: When?](#section-2threewhen)\n       * [Q2: Answer](#section-2threewhenanswer)\n       * [Q2: Where?](#section-2threewhere)\n       * [Q2: Answer](#section-2threewhereanswer)\n    \n     2.4. [Q3: What can you say about the distribution of different offenses over the city?](#section-2four)\n       * [Let's handle crime types](#section-2four1)\n       * [Offense Code Group by districts](#section-2four2)\n       * [Let's look at how the 3 most committed crimes spread to the city](#section-2four3)\n       * [Let's handle shooting column](#section-2four4)\n       * [General distribution of crimes with heat map](#section-2four5)\n    \n     2.5. [Feature Encoding](#section-2five)\n\n     2.6. [Conclusions for Q1,Q2& Q3](#section-2six)\n     \n\n3. [Models](#section-3)\n\n     3.1. [A. Predict crime numbers](#section-3A)\n      * [A.1. Prepare for model](#section-3A1)\n      * [A.2.Model 1: Predict crime numbers for each day (Base-model)](#section-3A2)\n      * [A.3.Model 2: Predict crime numbers for each day for Ucr Part 3](#section-3A3)\n      \n   3.2. [B. Predict district](#section-3B)\n      * [B.1. Prepare for model](#section-3B1)\n     \n         \n \n","c0274722":"We will feed our model with the number of crimes happening in the districts.","efe9c4ad":"* **Street**","fee23fd7":"Our first goal is to predict the number of crimes that may occur in the future. \nWhy is this important? \nBecause if we know the number of crimes that can be committed, we can take action.\n* If more crimes are to be committed, a more intense shift may be applied that day.\n* The Police Department can focus on the day.\n* Equipment can be supplied according to the number of crimes.","223e1c7d":"<a id=\"section-2threewhereanswer\"><\/a>\n## Answer","60c7f98e":"We divided the districts into 3 groups according to their proximity.","e64ab495":"More crimes were committed on Fridays, but there is not much difference between the numbers.","68baf3e2":"We created the days of the week column starting with Monday.","b1dade26":"Our data set showing how many cases occur in each district for each day is ready. We're going to **encode** the District column.","00296154":"We see that average daily casesare quite close to each other. The daily average increases a couple of incidents from 2015 to 2016 and increase a couple from 2016 to 2017 as well while there is around 7 incident decrease from 2017 to 2018.","80ed6ee3":"As a result, there are months in our data with missing data. However, if we go deeper and look on a day basis, we see that there is no significant difference. We have to care about missing data in our analysis.","56087556":"* **Crimes by Month of Year**","8d9e7143":"* **Incident counts per week day per year**","fd4a503d":" <a id=\"section-3B1\"><\/a>\n# Prep for Model 3","59ada844":"\n* Accuracy is 0.99 because we gave the location while estimating the regions. Now we need to take the columns out of the model and try.","5dee129d":"**Season**","ee7d3493":"We used the Offense_Code_Group, Year, Seasons, Hour, Shooting, DayOfWeek, Ucr_Parts, Lat, Long features in the first model to predict the districts. However, when we got 99% accuracy, we noticed that Lat and Long columns negatively affected our model. Let's examine.","342150e1":"* **Number Of Crimes Each Month**","ccf54cd1":"<a id=\"section-1three\"><\/a>\n\n# Renaming and Changing Dtype","258fcf4d":"As seen in the graphs below, there is no significant difference in the number of cases on weekdays and weekends.","cb2707fa":"Let's group them together to see how many unique Offense_Code there are for each Offense_Code_Group. For example, Drug Violation Offense_Code_Group  has 26 Offense_Code underneath it","d6e3917b":"In the beginning, we renamed our columns for clarity.\n","c7d61bb9":"According to the graph below, we see an increase in crime during the summer season. Is there seasonality in crimes?\nThe answer is in the Crimes by Month of Year graph. During the summer months, data were entered for all years, so it is normal to see more crime in these months. This does not mean seasonality.\n","5f753e0f":"We encoded the shooting column to use it in models. We changed it to 0 if there is no shooting, and 1 if there is.","24e23576":"<a id=\"section-2four1\"><\/a>\n* **Let's handle crime types**","7f99443d":"We will trying predict how much case will occure a day.","5ee3b56e":"\nQ: *How is the relationship between districts and shooting?*\n\n","95416fe8":"# Model 3 with Grouped Districts","25031115":"And our final data for the model.","9c1a4d69":"Crimes can behave differently over the years. We can say that the  Medical Assistance crimes saw a rise over the years. We can observe a similar trend with the Investigate Person crime type.\n","0fbe1d2a":"<a id=\"section-3\"><\/a>\n\n# Models","eac15a5d":"**Weekend vs. Weekday**","909ad165":"**Day & Night**","f7dda16e":"<a id=\"section-2four3\"><\/a>\n\n* **Let's look at how the 3 most committed crimes spread to the city.**","fbdf20b2":"![Boston](https:\/\/images.unsplash.com\/photo-1501979376754-2ff867a4f659?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80)","6495cd32":"To look at crimes committed in a specific area, a heat map can be useful. We can use latitude and longitude values.By zooming in on the map, we can see which streets and intersections are intense. By looking at the heat map, we can speculate when crimes are concentrated in the city.","71894a91":"Here we see how many streets a district has.","a0ed4c0c":"<a id=\"section-2two2\"><\/a>\n\n## Q1: Answer","42941597":"**Ucr Parts**","fff7314c":"It is important to take action where the crime may occur.\nWe will try to guess at which districts the crime that occurs in this model. We will be using XGB Classifier for its ease of use and predictive power.","c871c166":"<a id=\"section-2four4\"><\/a>\n\n* **Let's handle shooting column**","3b4ebc97":"In the plot above, we can see the streets with the most crime. According to the chart, Washington St is the street with the most crime, it is Blue Hill Ave and Boylston St. is following.","2d538981":" <a id=\"section-3A3\"><\/a>\n\n# A.3.Model 2: Predict for each day for Ucr Part 3","640e9e8e":"We will create with dataframe included district, occured on date, incident number (counted by days& district),day of week for modelling. ","08a6c88b":"<a id=\"section-2threewhere\"><\/a>\n## **Q2: Where?**","67a0d20d":"* **Number Of Crimes By District**","6895c850":"<a id=\"section-3A\"><\/a>\n\n# **A. Predict crime numbers**","8a7febf6":"# Model 3","f9c040c0":"<a id=\"section-2three\"><\/a>\n\n# Q2: Is it possible to predict where or when a crime will be committed?","049090be":"* **Number Of Crimes Each Day_of_Week**","32c42f0f":"The aim of this study is to examine how crimes have changed over the years, whether it is possible to predict where and when a crime will be committed, and the distribution of crimes across the city. Crimes in Boston data were used in the study. Data contains information about the crime such as date, location, crime group, crime code.","252a91b9":"In the chart below, we see the sums of the number of crimes committed each year. Could crime have increased this much in 2016 and 2017? It looks a little odd.","c87b4b63":"We convert the Occurred_On_Date feature from datetime to date. Because we will handle the dates in our study.","5c150f20":"In the chart above, we see that the most crimes occur around 17:00, 18:00 and 12:00. The reason for this may be that students \/ employees coincide with work hours and breaks. The number of crimes is likely to increase with the increasing number of people on the street.","7611725c":"* Let's see how much of the data is null. 99% of the Shooting column consists of null values. Assuming these mean no, we can replace it with N. (Yes = there is shooting, No = no shooting)\n* Also, 0.06% of the Lat and Long values are missing. Since we have a small number of null values compared to our data, we can remove them. \n* Let's remove the remaining missing values from our data.","dde69903":"After preparing our data, we will try to estimate the number of crimes that will occur per day. Here we will start by using linear regression as it is simple, easy to understand, easy to implement.","ed688020":"In this section, we will examine how crimes are distributed in the city. Since there are many streets and reporting arenas, we will look at the districts. We have 12 different districts.","8b65d236":"<a id=\"section-3A1\"><\/a>\n\n#  **A.1. Prepare for model**","50e0ff28":"<a id=\"section-2four5\"><\/a>\n\n* **General distribution of crimes with heat map**","c6d45f35":"We can predict possible crimes based on historical data. We can use different time zones such as day and night to strengthen our forecast. I think we can try answering questions like the ones below.Methods such as classification, ARIMA and regression can be used.\n* What is the time of the crime?\n* How many crimes happen in an hour?\n* How many crimes will happen next week?\n* How many crimes occur in a particular area?","f39632ca":"When we look at the distribution of the crime over the years, we see that there were more crimes in 2016 and 2017 than in other years. Let's look in more detail to understand the reason for this. We may have missing data.","4806757c":"For this reason, we will try to model the districts by grouping them among themselves. So I aim for better prediction.","040e224c":"**Features:**\n\n**INCIDENT_NUMBER:** The id of the crime committed. It is unique value for each crime.\n\n**OFFENSE_CODE:** It shows code of crime types.\n\n**OFFENSE_CODE_GROUP:** General crime types.\n\n**OFFENSE_DESCRIPTION:** Detailed explanation of the crime.\n\n**DISTRICT:** District name where the crime occurred.\n\n**REPORTING_AREA:** Area number that crime reported.\n\n**SHOOTING:** It shows with 'Y',  if the crime included shooting.\n\n**OCCURRED_ON_DATE:** the date& time that crime occured.\n\n**YEAR:** the year that crime occured. (2015,2016,2017,2018)\n\n**MONTH:** the month that crime occured.\n\n**DAY OF WEEK:** the week that crime occured.\n\n**HOUR:** the hour that crime occured.\n\n**UCR_PART:** Uniform Crime Reporting Offence types. Part 1 contains the most dangerous and important crimes.\n\n**STREET:** the street  where crime occured.\n\n**LAT:**  the latitude where the crime occurred.\n\n**LONG:**  the longitude where the crime occurred.\n\n**LOCATION:** the location where the crime occurred.(include latitude and longitude)","57856325":"We changed the data types for the required columns.","f84f634c":"We gave the location values that make up our predicted value to the model. And our accuracy is 0.99.","e4b17cec":"Let's look at the relationship between Offense_Code_Group and District.\nAccording to the graph below, the most larceny crime occurred in D4 district.","eb8b74ba":"Let's consider our data on a daily basis to make the most accurate assumptions.","7237caa1":"In this graph, we can see the distribution of crimes by districts. We can interpret that theft crime was mostly seen in the D4 region, and the crimes in the motor vehicle accident group were seen in the B2 district. By looking at which time, which street, which crime was most committed in which district, etc., we can speculate on where and when the possible crimes will be committed.","a0905d81":"We removed the remaining Null\/NaN  values. Because it was a small part of the crime data set."}}