{"cell_type":{"6acf61e2":"code","9eb906bd":"code","64a7163d":"code","3c4c2bcc":"code","b5030a8a":"code","59c9346d":"code","112bb6cb":"code","c77e2d4e":"code","04d21fe5":"code","91130bc4":"code","957a38e3":"code","24ac8222":"code","656b19fb":"code","11ebc121":"code","7c2e64a3":"code","0154a836":"code","1be94342":"code","f01001f7":"code","f285b7d4":"code","f208a4e5":"code","2cf727cb":"code","1a167472":"code","3c54697e":"markdown"},"source":{"6acf61e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9eb906bd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import classification_report\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder\nda=pd.read_csv(\"..\/input\/indian-liver-patient-records\/indian_liver_patient.csv\")\nda.head()","64a7163d":"da.sample(10)","3c4c2bcc":"da.info()\nda.head(5)","b5030a8a":"#Describe gives statistical information about NUMERICAL columns in the dataset\nda.describe(include='all')\n","59c9346d":"da.columns\n#showing columns\n","112bb6cb":"\nda.isnull().sum()\n#finding null values","c77e2d4e":"#finding frequency of items in a column mssm\nsns.countplot(x='Dataset',data=da,label=\"count\",palette=\"Set3\")\n#number of patients with liver disease is 1#n\n","04d21fe5":"da['Gender'].value_counts()","91130bc4":"#number of patients\nsns.countplot(x='Gender',data=da,label='count',palette=\"Set3\")","957a38e3":"da[['Gender','Age','Dataset']].groupby(['Dataset','Gender']).count()\n","24ac8222":"da[['Gender','Age','Dataset']].groupby(['Dataset','Gender']).mean()\n","656b19fb":"sns.pairplot(da,hue=\"Dataset\",height=2.5)","11ebc121":"p=sns.FacetGrid(da,row=\"Dataset\",col=\"Gender\",margin_titles=True)\np.map(plt.hist,\"Age\",color=\"Green\")","7c2e64a3":"#using decisiontree\n\n ","0154a836":"da.head()","1be94342":"plt.hist(da['Alkaline_Phosphotase'])\n\n#label encoding before scaling to convert categotrical  to numerical values Here is GEnder column\n\n#gender is two value binary we use Label Binarizer\nfrom sklearn.preprocessing import LabelBinarizer\n\nlb=LabelBinarizer()\n\nda['Gender']=lb.fit_transform(da['Gender'])\n\n\nda.head()","f01001f7":"#input and output dataset\n\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler\n\nX=da.drop('Dataset',axis=1)\ny_output=da['Dataset']\n\n\n\n\n\n\n","f285b7d4":"\navgAGR=X['Albumin_and_Globulin_Ratio'].mean()\n\n\n#filling na value with mean\nX['Albumin_and_Globulin_Ratio'].fillna(avgAGR,inplace=True)\nX['Albumin_and_Globulin_Ratio'].isnull().any()\navgAGR","f208a4e5":"#standard scalar\n\nss=StandardScaler()\ndf=pd.DataFrame(ss.fit_transform(X),columns=X.columns,index=X.index)\ndf.head()\ndf.loc[2]","2cf727cb":"#MACHINE LEARNING USING RANDOM TREE\ntree=DecisionTreeClassifier()\ntree.fit(df,y_output)\n#print(df.shape)\n#print(pd.DataFrame(df.iloc[1,:]).shape)\npredict=tree.predict(df)\n\nprint(classification_report(y_output,predict))","1a167472":"#machine learning using random forest","3c54697e":"DISEASE PREDICTION USING MACHINE LEARNING"}}