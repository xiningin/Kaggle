{"cell_type":{"ca7a73cf":"code","b3fe39c6":"code","462990fd":"code","cae0f4d7":"code","760491ae":"code","c0ad4197":"code","1faf5a40":"code","f570761f":"code","d9a36e00":"code","af339fa0":"code","4d7a5da3":"code","52919b35":"code","086afae6":"code","4a95648f":"code","9fdf5f0b":"code","c346ba0e":"code","d5005501":"code","1a74398b":"code","30983034":"code","d415a2f8":"code","849f9d12":"code","1360b81c":"code","f4525b29":"code","33ea1e35":"code","005f96d2":"code","8cd191c7":"code","22eaab59":"code","68a879e9":"code","cded0d71":"code","0ba68f61":"code","8513ee69":"code","05aee7d0":"code","7636a1f1":"code","a6d26bac":"code","202741a6":"code","9081e78c":"code","951dea55":"code","90046b74":"code","cbe2adaa":"code","c2fd5c46":"code","e0d5ee5f":"code","13f4f932":"code","91066758":"code","256e28c1":"code","b06348e9":"code","53b43a7b":"code","5a21f1d0":"code","9c175f12":"code","4feed98d":"code","bae53068":"markdown","b45d86a3":"markdown","2a674f58":"markdown","9096b495":"markdown","162fa70d":"markdown","b91b70d5":"markdown","d1ec24dd":"markdown","28e21af3":"markdown","b63a4325":"markdown","f95669d6":"markdown","3e8b3ddb":"markdown","9ecaeee3":"markdown","c462578e":"markdown","851413af":"markdown","1214e3d7":"markdown","526eed46":"markdown","dc843f39":"markdown","65b001a4":"markdown","ba329612":"markdown","9bd8895d":"markdown","01c5c9a2":"markdown","d43b953a":"markdown","27a8dc0b":"markdown","8809bb00":"markdown","b759dfb9":"markdown","43fb7e72":"markdown","06f002d3":"markdown","97fa6ac6":"markdown","0f5130b4":"markdown","990083e1":"markdown","a6ccc60d":"markdown","76715a2e":"markdown","6f88f6e1":"markdown","5c9feb22":"markdown","3762e737":"markdown","2b34c9fd":"markdown","7f60fb0e":"markdown","418b741c":"markdown"},"source":{"ca7a73cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b3fe39c6":"import matplotlib.pyplot as plt\nimport seaborn as sns \n%matplotlib inline","462990fd":"file_path = '..\/input\/videogamesales\/vgsales.csv'\ndf = pd.read_csv(file_path)\ndf.head()","cae0f4d7":"df.info()","760491ae":"df.shape","c0ad4197":"df.isnull().sum()","1faf5a40":"len(df[df['Year'].isnull() | df['Publisher'].isnull()])\/ len(df) * 100","f570761f":"df.dropna(inplace=True)","d9a36e00":"df.info()","af339fa0":"df['Year'] = df['Year'].astype(int)","4d7a5da3":"df.columns","52919b35":"df['Platform'].value_counts().to_dict().keys()","086afae6":"platforms = list(df['Platform'].value_counts()[:5].to_dict().keys())\nsales_cols = ['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']\nglobal_sales = []\nna_sales = []\neu_sales = []\njp_sales = []\nother_sales = []\nfor platform in platforms:\n  global_sales.append(df[df['Platform'] == platform]['Global_Sales'].sum())\n  na_sales.append(df[df['Platform'] == platform]['NA_Sales'].sum())\n  eu_sales.append(df[df['Platform'] == platform]['EU_Sales'].sum())\n  jp_sales.append(df[df['Platform'] == platform]['JP_Sales'].sum())\n  other_sales.append(df[df['Platform'] == platform]['Other_Sales'].sum())\n  ","4a95648f":"explode = [0.1,0.1,0.1,0.1,0.1]\ncolors = ['lightseagreen', 'mediumpurple', 'aquamarine', 'lawngreen', 'mediumorchid']\ndef platform_pie(title, sales):\n  plt.title(title)\n  plt.pie(sales, \n          labels = platforms,\n          wedgeprops=dict(width=0.2),\n          shadow = True,\n          colors = colors, \n          explode = explode, \n          startangle = 90, \n          autopct='%1.1f%%');","9fdf5f0b":"plt.figure(figsize= (10,10), dpi = 100)\n\nplt.subplot(2,2,1)\nplatform_pie('Sales in North America'.upper(), na_sales)\n\nplt.subplot(2,2,2)\nplatform_pie('Sales in Europe'.upper(), eu_sales)\n\nplt.subplot(2,2,3)\nplatform_pie('Sales in Japan'.upper(), jp_sales)\n\nplt.subplot(2,2,4)\nplatform_pie('Sales in Other countries'.upper(), other_sales)","c346ba0e":"plt.figure(figsize= (5,5), dpi = 100)\nplatform_pie('Global Sales'.upper(), global_sales)","d5005501":"plt.figure(figsize= (7,5), dpi= 100)\nplt.xticks(rotation = 90)\nsns.countplot(x = 'Year', data = df);","1a74398b":"# let's define a function to plot the graphs\ndef Year_plots(title, sales, color):\n  plt.figure(figsize = (7,5), dpi= 100)\n  plt.title(title)\n  plt.xticks(rotation = 90)\n  sns.lineplot(x = 'Year', \n              y = sales,\n              color = color, \n              data = df)","30983034":"Year_plots('Year v\/s JP Sales', 'JP_Sales', 'red')","d415a2f8":"Year_plots('Year v\/s EU Sales', 'EU_Sales', 'blue')","849f9d12":"Year_plots('Year v\/s NA Sales', 'NA_Sales', 'green')","1360b81c":"Year_plots('Year v\/s Other Sales', 'Other_Sales', 'black')","f4525b29":"Year_plots('Year v\/s Global Sales', 'Global_Sales', 'purple')","33ea1e35":"plt.figure(figsize=(7,5), dpi = 100)\nplt.xticks(rotation = 90)\nsns.countplot(x = 'Genre', data = df);","005f96d2":"# function to plot graphs \ndef genre_plots(title, sales, palette):\n  plt.figure(figsize = (7,5), dpi= 100)\n  plt.title(title)\n  plt.xticks(rotation = 90)\n  sns.barplot(x = 'Genre', \n              y = sales,\n              data = df, \n              palette = palette)","8cd191c7":"genre_plots('Sales in Japan as per Genres', 'JP_Sales', 'flare')","22eaab59":"genre_plots('Sales in North America as per Different Genres', 'NA_Sales', 'husl')","68a879e9":"genre_plots('Sales in Europe as per different genres', 'EU_Sales', 'pastel')","cded0d71":"genre_plots('Sales in other regions as per genres', 'Other_Sales', 'Set2')","0ba68f61":"df['Publisher'].value_counts()[:10]","8513ee69":"len(df['Publisher'].unique())","05aee7d0":"# lets take a look at the total and average global sales figures of top 10 publishers\npublishers = list(df['Publisher'].value_counts()[:10].to_dict().keys())\ntotal_sales = []\naverage_sales = []\nfor publisher in publishers:\n  total_sales.append(df[df['Publisher'] == publisher]['Global_Sales'].sum())\n  average_sales.append(df[df['Publisher'] == publisher]['Global_Sales'].mean())\nmy_dict = {\n    'publishers': publishers,\n    'total_sales': total_sales,\n    'average_sales': average_sales\n}\n\npublisher_df = pd.DataFrame(my_dict)\npublisher_df","7636a1f1":"plt.figure(figsize= (7,5), dpi = 100)\n\nplt.title('Top 10 publishers and their total sales')\nplt.xticks(rotation = 90)\nsns.barplot(x = 'publishers',\n            y = 'total_sales', \n            data = publisher_df,\n            palette = 'flare');","a6d26bac":"plt.figure(figsize= (7,5), dpi = 100)\nplt.title('Top 10 publishers and their average sales')\nplt.xticks(rotation = 90)\nsns.barplot(x = 'publishers',\n            y = 'average_sales', \n            data = publisher_df,\n            palette = 'husl');","202741a6":"sales_cols = ['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']\ntotal = []\naverage = []\nfor sales_col in sales_cols:\n  total.append(df[sales_col].sum())\n  average.append(df[sales_col].mean())","9081e78c":"explode = [0.1,0.0,0,0]\nplt.figure(figsize=(7,5), dpi = 100)\n\n\nbbox_props = dict(boxstyle=\"square,pad=0.3\", fc=\"w\", ec=\"k\", lw=0.72)\n\ncolors = ['darkturquoise', 'darkviolet', 'navy', 'orange']\nplt.title('Total Sales per region'.upper())\nplt.pie(total, \n        labels = [i.upper() for i in sales_cols], \n        explode = explode, \n        shadow = True,\n        colors = colors, \n        wedgeprops=dict(width=0.2),\n        autopct='%1.1f%%');","951dea55":"# let's define a function for it \n# this function will return a dataframe containing the highest saling video games in each genre for a given region \ndef highest_genre(df,region_sales): \n  name_list = []\n  genre_list = list(df['Genre'].value_counts().to_dict().keys())\n  sale_list = []\n\n  for genre in genre_list: \n    name_list.append(df[df['Genre'] == genre][['Name', region_sales]].sort_values(region_sales, ascending = True)['Name'].iloc[-1])\n    sale_list.append(df[df['Genre'] == genre][['Name', region_sales]].sort_values(region_sales, ascending = True)[region_sales].iloc[-1])\n\n  gs_dict = {\n      'Name': name_list,\n      'Genre': genre_list,\n      'Sales': sale_list\n  }\n\n  return pd.DataFrame(gs_dict, index= list(range(1, len(genre_list) + 1)))","90046b74":"print('The highest saling video games in each genre for every region are: \\n'.upper())\nregions = ['North America', 'Europe', 'Japan', 'Other regions']\ni = 0\nfor col in sales_cols:\n  print(regions[i])\n  i = i + 1\n  print(highest_genre(df, col))\n  print('\\n')","cbe2adaa":"genre_table = pd.pivot_table(df, \n                             index = 'Platform', \n                             columns = ['Genre'],\n                             values= ['NA_Sales','JP_Sales', 'EU_Sales', 'Other_Sales', 'Global_Sales'], \n                             aggfunc= np.sum)\ngenre_table.dropna(inplace = True)\n# print(list(genre_table.index))","c2fd5c46":"# this function is similar to highest_genre() function\ndef highest_platform(df, region_sales):\n  name_list = []\n  genre_list = list(df['Genre'].value_counts().to_dict().keys())\n  sale_list = []\n\n  for genre in genre_list: \n    name_list.append(df[df['Genre'] == genre][['Platform', region_sales]].sort_values(region_sales, ascending = True)['Platform'].iloc[-1])\n    sale_list.append(df[df['Genre'] == genre][['Platform', region_sales]].sort_values(region_sales, ascending = True)[region_sales].iloc[-1])\n\n  gs_dict = {\n          'Platform': name_list,\n          'Genre': genre_list,\n          region_sales: sale_list\n      }\n\n  return pd.DataFrame(gs_dict, index= list(range(1, len(genre_list) + 1)))","e0d5ee5f":"i = 0\nprint('The platforms which made highest sales for each genre in each region: \\n'.upper())\nfor col in sales_cols:\n  print(regions[i])\n  i = i + 1\n  print(highest_platform(df,col))\n  print('\\n')","13f4f932":"year_2009_df = df[df['Year'] == 2009] \nyear_2009_df","91066758":"plt.figure(figsize= (7,5), dpi = 100)\nplt.title('Global sales made per genre in the year 2009')\nplt.xticks(rotation = 60)\nsns.barplot(x = 'Genre', \n            y = 'Global_Sales', \n            data = year_2009_df);","256e28c1":"df['Publisher'].value_counts()[:10]","b06348e9":"ea_df = df[df['Publisher'] == 'Electronic Arts']\nea_df","53b43a7b":"sales_cols\ntotal_sales = []\naverage_sales = []\nfor col in sales_cols:\n  total_sales.append(ea_df[col].sum())\n  average_sales.append(ea_df[col].mean())\nprint(total_sales)\nprint(average_sales)","5a21f1d0":"plt.figure(figsize= (7,5), dpi = 100)\nplt.title(\"Total Sales made by Electronic Arts in each region\")\ncolors = ['mediumblue', 'darkmagenta', 'aquamarine', 'red', 'lime']\nplt.pie(total_sales, \n        labels = sales_cols,\n        wedgeprops=dict(width=0.2),\n        shadow = True,\n        colors = colors,\n        startangle = 90, \n        autopct='%1.1f%%');","9c175f12":"ea_df.groupby('Genre')[sales_cols + ['Global_Sales']].mean()","4feed98d":"ea_df.groupby('Genre')[sales_cols + ['Global_Sales']].sum()","bae53068":"**North America region has the highest number of total sales and highest average number of sales as well**","b45d86a3":"# Asking and Answering questions","2a674f58":"**Nintendo, Take-Two Interactive and Sony Computer Entertainment are the top three companies with highest average sales**","9096b495":"\n\n---\n\n","162fa70d":"**Which platforms have sold video games of all the genre types?**","b91b70d5":"##References\n* https:\/\/pandas.pydata.org\/docs\/\n* https:\/\/numpy.org\/doc\/\n* https:\/\/matplotlib.org\/stable\/contents.html\n* https:\/\/seaborn.pydata.org\/\n","d1ec24dd":"* NES and GB are two dominant platforms overall\n* among these two, NES has more sales than GB in North America and Japan, whereas GB has more sales in Europe","28e21af3":"### Year","b63a4325":"\n\n---\n\n---\n\n\n\n","f95669d6":"## Numerical Varibles","3e8b3ddb":"**There are total of 31 platforms**\n**let's take a look at the top five platforms**","9ecaeee3":"**The platforms which made highest sales for each genre in each region and how much**","c462578e":"### Publisher","851413af":"**More sales in all the categories were made in the years 1984, 1985, 1988,1989,1990 and 1992**","1214e3d7":"**Let's see in which year most sales were made**","526eed46":"**The sales in Europe as similar to sales in North America. 'Platform' and 'Shooter' genre have made more sales than other genres**","dc843f39":"### Platform","65b001a4":"**In other regions, genres 'Shooter' and 'Racing' have more sales**","ba329612":"**lets take a look at the total and average global sales figures of top 10 publishers**","9bd8895d":"\n\n---\n\n","01c5c9a2":"**Video games of Genre 'Role-Playing' has made the most sales in Japan**","d43b953a":"**Electronic Arts is the company with most number of games sold in the dataset.**\n**Let's explore this company's sales**","27a8dc0b":"**In case of North America, the genres 'Platform' and 'Shooter' as have made more sales than other genres**","8809bb00":"\n\n---\n\n","b759dfb9":"**which are the top-selling games in each genre in each region and globally?**","43fb7e72":"\n\n---\n\n","06f002d3":"\n\n---\n\n","97fa6ac6":"## Variable identification\n\n**Categorical variables**\n  * Platform\n  * Year\n  * Genre\n  * Publisher\n\n**Numerical variables**\n  * NA_Sales\n  * EU_Sales\n  * JP_Sales\n  * Other_Sales\n  * Global_Sales\n","0f5130b4":"**Let's take a look at which region has the highest total sales**","990083e1":"**Most no. of games were sold in the year 2009. let's explore that year**","a6ccc60d":"### Genre\n","76715a2e":"* **The genre 'Shooter' has made the highest average sales in each region and globally as well**\u00a0\n* **The genre 'Sports' has made the highest total sales in every region and globally as well.**\n* **No games were sold by Electronic Arts by the genre 'Puzzle' in Japan**\n* **In North America, the genre 'Adventure' made the lowest total sales and the genre 'Platform' made the lowest average sales.**\n* **In Europe, the genre 'Strategy' made the lowest sales.**","6f88f6e1":"**We have more number of games from the genres 'Action' and 'Sports' in our dataset**","5c9feb22":"**There are 576 publishers in total**","3762e737":"**Let's plot some graphs to know the sales figures for the top five platform**","2b34c9fd":"**The platforms which have sold the video games of all the genres are:**\n* 3DS\n* DS\n* GBA\n* GC\n* N64\n* PC\n* PS\n* PS2\n* PS3\n* PS4\n* PSP\n* PSV\n* SAT\n* SNES\n* Wii\n* WiiU\n* X360\n* XB","7f60fb0e":"**Nintendo, Electronic Arts and Activision are the top three companies with highest total sales**","418b741c":"**Year has the dtype as float, so we will convert that to int**"}}