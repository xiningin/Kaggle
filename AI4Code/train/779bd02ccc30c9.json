{"cell_type":{"41c66e29":"code","91cb51a2":"code","340099da":"code","2a2e4cd1":"code","e71538aa":"code","3c5dbf0b":"code","4ac476bf":"code","eac3c24a":"code","b5bb3050":"code","56b0229a":"code","08f84950":"code","e2b07c50":"code","ebe5f03e":"code","b2711a8d":"code","65241756":"code","85a706d0":"code","60dae8cb":"markdown","3b1f0f1a":"markdown","d1db5045":"markdown","8ffec8ce":"markdown","53ed2754":"markdown","315cfd24":"markdown"},"source":{"41c66e29":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","91cb51a2":"import pandas as pd\ndf=pd.read_csv('\/kaggle\/input\/..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf","340099da":"df.isna().sum()","2a2e4cd1":"df.sort_values('Author', inplace=True)\ndf","e71538aa":"df.drop_duplicates(subset=\"Name\", keep=False, inplace=True)\ndf","3c5dbf0b":"#First we will calculate the top ratings books.\ndf.sort_values('User Rating', ascending=False, inplace=True)\ndf\n#This result states that the highest rating is 4.9","4ac476bf":"df1=df.groupby('User Rating')\ndf1","eac3c24a":"df2=df1.get_group(4.9)\ndf2\n","b5bb3050":"df3=df.sort_values(['Year','User Rating'], ascending=False)\ndf3","56b0229a":"df3=df.Author.value_counts()\ndf3.head(5)","08f84950":"import matplotlib.pyplot as plt\n%matplotlib inline","e2b07c50":"values=[12,9,7,6,5]\nnames=['Jeff Kinney',  'Rick Riordan',  'Stephenie Meyer',   'J.K. Rowling',   'John Grisham']\nplt.xlabel(\"Author's Names\" )\nplt.ylabel(\"NO. of books published\")\nplt.bar(names,values,align='center',width=0.4)\nplt.figsize=(40,10)\n","ebe5f03e":"\nplt.figure(figsize=(8,5))\nMean_Price_Per_Year=df.groupby(['Year']).mean().Price\nMean_Price_Per_Year.plot(kind='line', color='Red')\nplt.ylabel('MEAN PRICE PER YEAR')\n","b2711a8d":"a=df.Genre.str.count(\"Non Fiction\").sum()\nprint(a)","65241756":"#fiction = 255-139=116\nNon_fiction = 139\nfiction = 116","85a706d0":"x=[116,139]\nplt.title('No. of books published')\nplt.pie(x,labels=['Fiction', 'NON-Fiction'],autopct='%1.0f%%')","60dae8cb":"##  1. I have figured out top 21 books which got the highest ratings.\n##  2. I have Analyzed and figured out the top 5 authors with maximum no. of books published.\n##  3. I also reprsented the change in the price of books over the years.\n##  4. At last I have also represented between the popularity of fiction and Non fiction on the criteria of no. of books published. ","3b1f0f1a":"# MEAN PRICE OF BOOKS IN EACH YEAR \n","d1db5045":"# Top 21 Books which gets the highest User Ratings along with their Authors","8ffec8ce":"   # EVALUATION","53ed2754":"# TOP 5 AUTHOR'S WHICH PUBLISHED MAXIMUM NO. OF BOOKS","315cfd24":"# ****** 'FICTION'   VS   'NON-FICTION' ******"}}