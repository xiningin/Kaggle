{"cell_type":{"bab0a9ae":"code","fd9985f2":"code","2744844a":"code","cbe9b16c":"code","64966faf":"markdown","1e41df23":"markdown"},"source":{"bab0a9ae":"from keras import backend as K\nimport tensorflow as tf\n\ndef KerasFocalLoss(target, input):\n    \n    gamma = 2.\n    input = tf.cast(input, tf.float32)\n    \n    max_val = K.clip(-input, 0, 1)\n    loss = input - input * target + max_val + K.log(K.exp(-max_val) + K.exp(-input - max_val))\n    invprobs = tf.log_sigmoid(-input * (target * 2.0 - 1.0))\n    loss = K.exp(invprobs * gamma) * loss\n    \n    return K.mean(K.sum(loss, axis=1))","fd9985f2":"import numpy as np\nfrom fastai.conv_learner import *\nfrom fastai.dataset import *\n\n\n# credits: https:\/\/www.kaggle.com\/iafoss\/pretrained-resnet34-with-rgby-0-448-public-lb#\n# credits originally: https:\/\/becominghuman.ai\/investigating-focal-and-dice-loss-for-the-kaggle-2018-data-science-bowl-65fb9af4f36c\n\nclass FocalLoss(nn.Module):\n    def __init__(self, gamma=2):\n        super().__init__()\n        self.gamma = gamma\n        \n    def forward(self, input, target):\n\n        if not (target.size() == input.size()):\n            raise ValueError(\"Target size ({}) must be the same as input size ({})\"\n                             .format(target.size(), input.size()))\n\n        max_val = (-input).clamp(min=0)\n        loss = input - input * target + max_val + ((-max_val).exp() + (-input - max_val).exp()).log()\n        invprobs = F.logsigmoid(-input * (target * 2.0 - 1.0))\n        loss = (invprobs * self.gamma).exp() * loss\n        \n        return loss.sum(dim=1).mean()","2744844a":"# define some results\nY_true = np.array([[0, 1, 0, 1, 0], [1, 0, 1, 0, 1]])\nY_pred = np.array([[0.1, 0.2, 0.3, 0.4, 0.5], [0.6, 0.7, 0.8, 0.9, 1]], dtype=np.float32)","cbe9b16c":"fc = FocalLoss()\n\nprint(fc.forward(torch.from_numpy(Y_pred), torch.from_numpy(Y_true.astype(np.float32))))\nprint(K.eval(KerasFocalLoss(Y_true, Y_pred)))","64966faf":"# Sanity check\n\nCheck that my Keras implementation returns same values.","1e41df23":"This [great kernel](https:\/\/www.kaggle.com\/iafoss\/pretrained-resnet34-with-rgby-0-448-public-lb#) uses FocalLoss written for PyTorch and has a success with it. In case you'd like to use same loss function in Keras, I've rewritten it here.\n\nThere is [another good implementation of FocalLoss here](https:\/\/github.com\/mkocabas\/focal-loss-keras), but it differs for the one used by lafoss.\nThis kernel is aimed for people who would like to replicate his results step by step in Keras."}}