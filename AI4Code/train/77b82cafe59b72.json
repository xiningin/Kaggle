{"cell_type":{"04632872":"code","f1fe9762":"code","88c2c819":"code","b57c6f87":"code","3eb8ecf0":"code","ece28f33":"code","72673f7c":"code","0af44185":"code","24083dff":"code","182137c5":"code","562763d2":"code","f178d46b":"code","7184a89e":"code","85fb6b32":"code","20f45681":"code","bf3023e2":"code","4878ec47":"code","2dcc9b61":"code","57257a17":"code","0da98aaa":"code","3f94a6d6":"code","e11ad298":"code","008bc5dc":"code","1e64c2a8":"code","b8865764":"code","86240e0a":"code","ed34e2db":"code","480b1ea4":"code","365ae039":"code","987ec5c0":"code","fa0fa9f7":"code","26658dc5":"code","78792c94":"code","65765a28":"code","6bb97112":"code","e77f1b44":"code","8b72749e":"code","1a0aedfd":"markdown","2cdeb840":"markdown","730c55a9":"markdown","53efa312":"markdown","7506ee39":"markdown","990701fc":"markdown","65e98dd7":"markdown","13dc3cf3":"markdown","8282027a":"markdown","818da805":"markdown","b1f09b3a":"markdown","7220f646":"markdown","17c72c8b":"markdown"},"source":{"04632872":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f1fe9762":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report","88c2c819":"df = pd.read_csv(\"\/kaggle\/input\/dataisbeautiful\/r_dataisbeautiful_posts.csv\")","b57c6f87":"# look dataframe\ndf.head()","3eb8ecf0":"fig, ax = plt.subplots(figsize=(14,10))\nsns.heatmap(df.isnull(), cbar=False, cmap=\"YlGnBu_r\")\nplt.show()","ece28f33":"del df[\"author_flair_text\"]\ndel df[\"removed_by\"]\ndel df[\"total_awards_received\"]\ndel df[\"awarders\"]\ndel df[\"created_utc\"]\ndel df[\"full_link\"]\ndel df[\"id\"]","72673f7c":"df.head()","0af44185":"df.info()","24083dff":"df.title.fillna(\" \",inplace = True)","182137c5":"print(df[\"over_18\"].value_counts())\nsns.barplot(df[\"over_18\"].value_counts().index, df[\"over_18\"].value_counts().values)\nprint(round(df[\"over_18\"][df[\"over_18\"] == True].shape[0]\/len(df), 2))","562763d2":"import string\n# realization preprocessing\ndef preprocess(doc):\n    # lower the text\n    doc = doc.lower()\n    # remove punctuation, spaces, etc.\n    for p in string.punctuation + string.whitespace:\n        doc = doc.replace(p, ' ')\n    # remove extra spaces, merge back\n    doc = doc.strip()\n    doc = ' '.join([w for w in doc.split(' ') if w != ''])\n    return doc","f178d46b":"for colname in df.select_dtypes(include= np.object).columns:\n    df[colname] = df[colname].map(preprocess)\ndf.head()","7184a89e":"df['over_18'] = df['over_18'].map({True: 1, False: 0}).values","85fb6b32":"df.head()","20f45681":"lenTrue = int(1\/3*df.over_18.value_counts().values[0])\nlenTrue","bf3023e2":"df.over_18.value_counts()","4878ec47":"df2 = df[df['over_18'] == 1].sample(n = 60982, replace=True)","2dcc9b61":"df = df.append(df2, ignore_index=True)","57257a17":"df.head()","0da98aaa":"df.over_18.value_counts()","3f94a6d6":"df = df.sample(frac=1).reset_index(drop=True)","e11ad298":"df.head()","008bc5dc":"y = df['over_18'].map({True: 1, False: 0}).values\ny","1e64c2a8":"df.drop(['over_18'], axis = 1, inplace=True)\ndf.head()","b8865764":"X = df","86240e0a":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, stratify = y)","ed34e2db":"X_train.shape, X_test.shape","480b1ea4":"y_train.shape, y_test.shape","365ae039":"X_train","987ec5c0":"from sklearn.feature_extraction.stop_words import ENGLISH_STOP_WORDS\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nvectorizer = TfidfVectorizer(stop_words = ENGLISH_STOP_WORDS, ngram_range=(1, 2)).fit(df['title'])\n\nX_train_vectors = vectorizer.transform(X_train['title'])\nX_test_vectors = vectorizer.transform(X_test['title'])","fa0fa9f7":"X_train_vectors.shape, X_test_vectors.shape","26658dc5":"num = 65\nX_train_vectors[num].data","78792c94":"vectorizer.inverse_transform(X_train_vectors[num])[0][np.argsort(X_train_vectors[num].data)]","65765a28":"knn = KNeighborsClassifier().fit(X_train_vectors, y_train)","6bb97112":"predicts = knn.predict((X_test_vectors))\nprint(classification_report(y_test, predicts))","e77f1b44":"clf = MultinomialNB().fit(X_train_vectors, y_train)","8b72749e":"predicts = clf.predict((X_test_vectors))\nprint(classification_report(y_test, predicts))","1a0aedfd":"### Look null values in dataframe","2cdeb840":"### Multinomial Naive Bayes","730c55a9":"Data isn't balanced.","53efa312":"## TF-IDF","7506ee39":"#### Check DataFrame","990701fc":"### Sample new values","65e98dd7":"### kNN","13dc3cf3":"## Download dataset from Kaggle","8282027a":"### Train-test split","818da805":"### Lower the text","b1f09b3a":"### Delete unnecessary columns","7220f646":"#### Check TF-IDF","17c72c8b":"# Preprocessing"}}