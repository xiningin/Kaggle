{"cell_type":{"60aa04a3":"code","7ac84b67":"code","f88c7efc":"code","9c39713a":"code","b9759ade":"code","1093e838":"code","03770098":"code","1c00396e":"code","783ffc08":"code","2bd9eaea":"code","144ab9f4":"code","ce777e87":"code","c781592a":"code","e33f4d89":"code","599c60e9":"code","a59ddd0f":"code","92b55849":"code","2c506923":"code","3bf2a125":"code","1f98cfcd":"code","0ace6a45":"code","c2b1bff5":"code","32aa7c20":"code","28996bf6":"code","97c8f140":"code","cf7e63cb":"code","64484155":"code","cea5c71d":"markdown","7b623d33":"markdown","bd50ba92":"markdown","35ed654d":"markdown","6358b5f2":"markdown","759e324f":"markdown","9aeed62f":"markdown","61ff6642":"markdown","13bbc648":"markdown","ef97ddf0":"markdown","9e7643e4":"markdown","893511ae":"markdown","f5c64deb":"markdown","b0a16cbf":"markdown","affa7da4":"markdown"},"source":{"60aa04a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7ac84b67":"dataset = pd.read_csv(\"..\/input\/titanic\/train.csv\", index_col='PassengerId')\ndataset.head()","f88c7efc":"def clean_titanic_dataset(df):\n    # Filling the missing values in Age with the medians of Sex and Pclass groups\n    df['Age'] = df.groupby(['Sex', 'Pclass'])['Age'].apply(lambda x: x.fillna(x.median()))\n    \n    # Filling the missing values in Embarked with S\n    df['Embarked'] = df['Embarked'].fillna('S')\n    \n    # Filling the missing value in Fare with the median Fare of 3rd class alone passenger\n    med_fare = df.groupby(['Pclass', 'Parch', 'SibSp']).Fare.median()[3][0][0]\n    df['Fare'] = df['Fare'].fillna(med_fare)\n    \n    # Creating a new Deck column from the Cabin column\n    df['Deck'] = df['Cabin'].apply(lambda s: s[0] if pd.notnull(s) else 'M')\n    \n    # Passenger in the T deck is changed to A\n    idx = df[df['Deck'] == 'T'].index\n    df.loc[idx, 'Deck'] = 'A'\n    \n    df['Deck'] = df['Deck'].replace(['A', 'B', 'C'], 'ABC')\n    df['Deck'] = df['Deck'].replace(['D', 'E'], 'DE')\n    df['Deck'] = df['Deck'].replace(['F', 'G'], 'FG')\n    \n    return df","9c39713a":"clean_dataset = clean_titanic_dataset(dataset.copy())\nclean_dataset.info()","b9759ade":"clean_dataset.drop('Cabin', axis=1, inplace=True)","1093e838":"target = clean_dataset['Survived']\nclean_dataset.drop(['Ticket', 'Name'], axis=1, inplace=True)\nclean_dataset.head()","03770098":"import seaborn as sns\nfrom matplotlib import pyplot as plt\n\n%matplotlib inline","1c00396e":"sns.catplot(x='Sex', y='Age', hue='Survived', kind='violin', data=clean_dataset)","783ffc08":"sns.countplot(x='Pclass', hue='Survived', data=clean_dataset)","2bd9eaea":"clean_dataset['Relationships'] = clean_dataset['SibSp'] + clean_dataset['Parch']","144ab9f4":"fig, axes = plt.subplots(1, 3, figsize=(15, 5))\nax1, ax2, ax3 = axes.ravel()\n\nsns.countplot(ax=ax1, x='SibSp', hue='Survived', data=clean_dataset)\nsns.countplot(ax=ax2, x='Parch', hue='Survived', data=clean_dataset)\nsns.countplot(ax=ax3, x='Relationships', hue='Survived', data=clean_dataset)","ce777e87":"clean_dataset.drop(['SibSp', 'Parch'], axis=1, inplace=True)","c781592a":"sns.catplot(x='Deck', col='Pclass', hue='Survived', kind='count', data=clean_dataset)","e33f4d89":"clean_dataset.drop('Deck', axis=1, inplace=True)","599c60e9":"sns.catplot(x='Embarked', y='Fare', col='Survived', kind='box', data=clean_dataset)","a59ddd0f":"clean_dataset['Sex'] = clean_dataset['Sex'].replace({'male': 1, 'female': 0})\nclean_dataset['Embarked'] = clean_dataset['Embarked'].replace({'C': 0, 'Q': 1, 'S': 2})\nclean_dataset.head()","92b55849":"def prepare_dataset_for_model(df):\n    df = clean_titanic_dataset(df)\n    df['Relationships'] = df['SibSp'] + df['Parch']\n    \n    drop_cols = ['Cabin', 'Deck', 'SibSp', 'Parch', 'Name', 'Ticket']\n    \n    if 'Survived' in df.columns:\n        drop_cols += ['Survived']\n    \n    df.drop(drop_cols, axis=1, inplace=True)\n    \n    df['Sex'] = df['Sex'].replace({'male': 1, 'female': 0})\n    df['Embarked'] = df['Embarked'].replace({'C': 0, 'Q': 1, 'S': 2})\n    \n    return df","2c506923":"dataset = prepare_dataset_for_model(dataset)","3bf2a125":"dataset.head()","1f98cfcd":"from sklearn.ensemble import RandomForestClassifier","0ace6a45":"rf_clf = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=0)","c2b1bff5":"rf_clf.fit(dataset, target)","32aa7c20":"test_set = pd.read_csv(\"..\/input\/titanic\/test.csv\", index_col='PassengerId')\ntest_set.head()","28996bf6":"test_set = prepare_dataset_for_model(test_set)","97c8f140":"predictions = rf_clf.predict(test_set)","cf7e63cb":"indexes = np.array(test_set.index)\nsurvived = predictions\n\nsubmission = pd.DataFrame(data=indexes, columns=['PassengerId'])\nsubmission['Survived'] = survived\nsubmission","64484155":"submission.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","cea5c71d":"### 4. Relationship between the Deck and the Pclass and its effect on the survival rate?\n","7b623d33":"Let's now load the test dataset","bd50ba92":"### 5. Relationship between the `Fare` and the `Embarked` with those who survived?","35ed654d":"Let's clearly explain what's really happening on this plots... the A, B & C Decks are the decks where the majority of the first class passengers, the D & E Decks contains most of the second class passengers and the F & G Decks for the thrid class passengers... The M Deck are the missing Decks from the dataset... but we can tell obviously from this graphs that majority of the missing decks comes from the thrid class passengers.\n\nGiven this relationship and the ammount of missing decks let's drop the deck column to avoid any confusion when the model is set","6358b5f2":"**Yo!!!!**\n\n# The Model\n\nNow we can go on to creating the model, training it and making predictions","759e324f":"Given that zero (0) represents those who didn't survive... we can tell from the graph above that majority of the male and female who didn't survive are mostly in their 20's.\n\n### 2. How does the passenger class affect the rate of survival?","9aeed62f":"# The Titanic Dataset\n\n### Following the 30 days of ML with kaggle\n\nThis is my notebook for the first day of the 30 days of ML organized by kaggle, please leave an upvote if you find this notebook inciteful \ud83d\ude42.","61ff6642":"# Data Cleaning\n\nTo save time on cleaning the data I will just make use of the functions I carved out after studying the [**notebook**](https:\/\/www.kaggle.com\/gunesevitan\/titanic-advanced-feature-engineering-tutorial) written by kaggle GrandMaster [**Gunes Evitan**](https:\/\/www.kaggle.com\/gunesevitan). You could check out the details on how the data is being cleaned [here](https:\/\/www.kaggle.com\/gunesevitan\/titanic-advanced-feature-engineering-tutorial#1.-Exploratory-Data-Analysis)!","13bbc648":"**Cool!!!** Now we can go on to see relationships between the various features. Let's start by stating the various relationship we that are possible between the various features and the survival before going on to visualize them.\n\n1. How does the Age and Sex affect the rate of survival?\n2. How does the passenger class affect the rate of survival?\n3. Does having a relationship `SibSp` & `Parch` have any effect on the rate of survival?\n4. Relationship between the `Deck` and the `Pclass` and its effect on the survival rate?\n5. Relationship between the `Fare` and the `Embarked` with those who survived?\n\n### 1. How does the Age and Sex affect the rate of survival?","ef97ddf0":"Across all plots we can see that there's a lower chance of survival among those with fewer relationships (probably because we are able to fight death because of those dear to us).\n\nGoing forward we will discard of the `SibSp` and `Parch` columns which will be replaced by the `Relationships` columns.","9e7643e4":"# EDA on the Titanic Dataset\n\nHere i will just perform a simple exploratory data analysis of the various features contained in this dataset. First let's examine the various features - what they represent.\n\n- PassengerId: is the unique id of the passenger. It has no effect on our target (`Survived`)\n- Survived: is the target variable which we're to predict (0 or 1):\n  - 1 = Survived\n  - 0 = Not Survived\n- Pclass (Passenger Class): is the socio-economic status of the passenger and it is a categorical ordinal feature which has 3 unique values (1, 2 or 3):\n  - 1 = Upper Class\n  - 2 = Middle Class\n  - 3 = Lower Class\n- SibSp: is the total number of the passengers' siblings and spouse\n- Parch: is the total number of the passengers' parents and children\n\n> (In order words `SibSp` & `Parch` shows each passengers relationships - family ties)\n\n- Ticket: is the ticket number of the passenger\n- Fare: is the passenger fare\n- Cabin: is the cabin number of the passenger\n- Embarked: is port of embarkation and it is a categorical feature which has 3 unique values (C, Q or S):\n  - C = Cherbourg\n  - Q = Queenstown\n  - S = Southampton\n- Name, Sex and Age are self-explanatory\n\nFrom the get-go, we can already see that there are two (2) columns which are unneccessary to the overall objective of this assignment. There are the `Ticket` & `Name` columns... let's drop those and seperate the survived column (target column) from the rest.","893511ae":"Those who paid higher fares from the Southampton (S) & Cherbourg (C) ports embarkations have a higher probability of survival. hmm...\n\nSo with this few analysis that have been examined we can decide that a Random Forest Model will work perfectly for out clean dataset, but before this let's perform some feature engineering on datasets.\n\n# Feature Engineering\n\nExcluding the `Survived` column from the `clean_dataset` we are left with six (6) other columns `['Pclass', 'Sex', 'Age', 'Fare', 'Embarked', 'Relationships']`.\n\nWe need to convert the `['Sex', 'Embarked']` columns values to numeric values the model can work with!","f5c64deb":"from the graph above we can tell there's a higher probability of survival for first class passengers compared to thrid class passengers.\n\n### 3. Does having a relationship SibSp & Parch have any effect on the rate of survival?\n\nLet's create a now column containing the sum of relations from the `SibSp` and `Parch` columns.","b0a16cbf":"We can see that there are no null column all except from the `cabin` column which can be adequately replace by the `deck` column since the first letter of the `Cabin` represents the `Deck` in which the `Cabin` is located and these decks seperates passengers of different class ~[**Gunes Evitan**](https:\/\/www.kaggle.com\/gunesevitan).\n\nThus we can drop out the `Cabin` column before heading to an **Exploratory Data Analysis (EDA)**","affa7da4":"Hmm... we aren't quite done yet, we need to create a function to prepare the data for the model"}}