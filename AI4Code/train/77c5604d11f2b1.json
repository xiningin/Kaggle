{"cell_type":{"ba61dc24":"code","a5dd2ea4":"code","5f584458":"code","c7190cfc":"code","5cbd7cbb":"code","1b346d2d":"code","7a752653":"code","99c652c1":"code","c3c5e4fd":"code","d713e8d1":"code","b1859359":"code","dd067278":"code","c3236bb7":"code","7c0c6da1":"code","e8e6b2c9":"code","ea300bdc":"code","6c6e3646":"code","cd6716b7":"code","10ee12b4":"code","81d641b8":"code","c8bf34af":"code","d8001d96":"code","ded9fdce":"code","1bcd1e76":"code","967643c1":"code","a3202f6f":"code","dc59b443":"code","82103090":"code","b2c957f7":"code","70cd4b0c":"markdown","88023ee0":"markdown","f3421783":"markdown","ddff8ec1":"markdown","255fe02f":"markdown","d6fa16d9":"markdown","903ef15a":"markdown","765e8dba":"markdown","95f2fda0":"markdown","367e58a2":"markdown"},"source":{"ba61dc24":"!pip3 install pyjanitor orjson --quiet","a5dd2ea4":"import pandas as pd\nimport numpy as np\nimport janitor\nimport missingno as msno\nimport warnings\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\n\nfrom scipy.stats import skew, kurtosis\n\n# Plot Template & Color\npio.templates.default = 'plotly_white'\nlight_gray = '#DEDEDE'\nhoney_orange = '#EBA937'\ncobalt_blue = '#1143a6'\n\n# Other settings\nwarnings.filterwarnings(action='ignore')\npd.set_option('display.max_columns', 50)","5f584458":"def figure_show(plot, static: bool, **kwargs)-> go.Figure:\n    \"\"\"\n    Sets figure with custom layout parameters\n    \"\"\"\n    config = {'staticPlot': True}\n    plot.update_layout(\n        **kwargs,\n        font=dict(color='Dark Gray', size=10),\n        margin=dict(pad=10),\n        width=780)\n    \n    if static:\n        return plot.show(config=config)\n    else:\n        return plot.show()\n\n\nfp = '..\/input\/data-science-and-stem-salaries\/Levels_Fyi_Salary_Data.csv'\ndef load_data(path:str=fp) -> pd.DataFrame:\n    \"\"\"\n    Load and cleans data\n    \"\"\"\n    df = pd.read_csv(path)\n    df = df.remove_empty()\\\n        .clean_names()\\\n        .drop('rownumber', axis=1)\n\n    return df","c7190cfc":"# Load Data using defined function\ndf = load_data()\n\n# Check for missing data\nmsno.matrix(df, figsize=(13, 5), fontsize=11, color=(0., 0.1, 0.6));","5cbd7cbb":"# The data\ndf.head()","1b346d2d":"# Data Basic Info\ndf.info()","7a752653":"df.timestamp = pd.to_datetime(df.timestamp)\ndf.timestamp","99c652c1":"year = df.timestamp.dt.year\nyear_counts = year.value_counts()\nyear_counts","c3c5e4fd":"def plot_year_counts(x, y, title, highlight_bar) -> go.Figure:\n    \"\"\"\n    Plots total count of available data that year.\n    \"\"\"\n    plot_color = ['#DEDEDE'] * 6\n    plot_color[highlight_bar] = cobalt_blue\n    year_fig = px.bar(x=x, y=y, text=y)\n    year_fig.update_layout(title=f'<b>{title}<\/b>')\n    year_fig.update_yaxes(title='Count')\n    year_fig.update_xaxes(title='Year', tickmode='linear')\n    year_fig.update_traces(marker_color=plot_color)\n\n    return figure_show(year_fig, static=False)\n\nplot_year_counts(\n    x=year_counts.index, \n    y=year_counts.values, \n    title='Data Available: Year',\n    highlight_bar=0)","d713e8d1":"print('\\n', 'min: ', df.timestamp.min(), '\\n', 'max: ', df.timestamp.max())","b1859359":"print(f\"\"\"\n> Summary\n{'-' * 40}\n> The Dataset has {df.shape[0]} entries and {df.shape[1]} features.\n> There's a total of {df.isna().sum().sum()} missing entries\/observations.\n    - Gender, Other Details, Race, and Education compromise the majority of the missing values.\n> The start date is {df.timestamp.min()} and ends on {df.timestamp.max()}.\n> The dataset is compromise of dtypes: float64(6), int64(12), object(10)\n    - 10 of wich are binary features specifiying feature Race and Education.\n\"\"\")","dd067278":"df.company.value_counts()","c3236bb7":"# Filter\ncompany = df.company.value_counts()[df.company.value_counts() >= 100]\ncompany = company[:12]","7c0c6da1":"def plot_company(x, y, title, highlight_bar) -> go.Figure:    \n    \"\"\"\n    Plot companies included in Data\n    \"\"\"\n    fig = go.Figure()\n    company_plot_color = [light_gray] * 30\n    company_plot_color[highlight_bar] = cobalt_blue\n    fig.add_trace(go.Bar(x=x, y=y, orientation='h'))\n    fig.update_traces(marker_color=company_plot_color)\n    fig.update_layout(title=f'<b>{title}<\/b>')\n    \n    return figure_show(fig, static=False)\n\nplot_company(\n    x=company.values, \n    y=company.index, \n    title='Data Available: Companies',\n    highlight_bar=0)","e8e6b2c9":"df.title.value_counts()","ea300bdc":"data_scientist = df[df.title.str.contains('Data Scientist')]\nbusiness_analyst = df[df.title.str.contains('Business Analyst')]\ndata = pd.concat([data_scientist, business_analyst], axis=0)\ndata.head()","6c6e3646":"data['timestamp'] = pd.to_datetime(data.timestamp)\nyear = data.timestamp.dt.year\nyear_new_counts = year.value_counts()\nyear_new_counts","cd6716b7":"plot_year_counts(\n    x=year_new_counts.index, \n    y=year_new_counts.values, \n    title='Data Scientist and Business Analyst Roles',\n    highlight_bar=0)","10ee12b4":"# Filter\ncompany = data.company.value_counts()[data.company.value_counts() >= 20]\nplot_company(\n    x=company.values, \n    y=company.index, \n    title='Data Scientist and Business Analyst: Companies',\n    highlight_bar=0)","81d641b8":"def plot_title_counts() -> go.Figure:\n    \"\"\"\n    Plots a Bar Graph Count of Data Scientist and Business Analyst.\n    \"\"\"\n    counts = data.title.value_counts()\n    fig = px.bar(x=counts.index, y=counts.values, text=counts.values)\n    fig.update_layout(title='<b>Position\/Title:<\/b> Counts')\n    fig.update_yaxes(title='Count')\n    fig.update_xaxes(title='Position')\n    fig.update_traces(marker_color=[cobalt_blue, honey_orange])\n    return figure_show(fig, static=False)\n\nplot_title_counts()","c8bf34af":"# Simplify and Rename columns\ndata = data.rename(columns={\n        'totalyearlycompensation': 'yearly_compensation',\n        'yearsofexperience': 'experience_years',\n        'yearsatcompany': 'employed_years'})\n\ndata['employed_bin_years'] = pd.cut(data.employed_years, bins=8,\n    labels=[\n        '0-3 Yrs.',\n        '3-6 Yrs.',\n        '6-9 Yrs.',\n        '9-12 Yrs.',\n        '12-15 Yrs.',\n        '15-18 Yrs.',\n        '18-21 Yrs.',\n        '21-24 Yrs.'])\n\n# Feature Compensation and Years Employed\ncomp_and_employed = data[['yearly_compensation', 'employed_years', 'title', 'employed_bin_years']]\\\n    .sort_values(by='employed_bin_years')\n\n\n# Feature Compensation and Employee Work Experience\ncomp_and_experience = data[['yearly_compensation', 'experience_years', 'title']]\\\n    .sort_values(by='experience_years')","d8001d96":"data.yearly_compensation\\\n    .describe()\\\n    .to_frame()","ded9fdce":"skew_comp = skew(data.yearly_compensation)\nkurt_comp = kurtosis(data.yearly_compensation)\nprint(f\"\"\"\nskew: {skew_comp}\nkurt: {kurt_comp}\n\"\"\")","1bcd1e76":"data_science_comp = data[data.title == 'Data Scientist']\\\n    [['yearly_compensation', 'employed_bin_years']]\n\n# Sort data naturally to avoid plotting misplacements with plotly\ndata_science_comp = data_science_comp.sort_naturally('employed_bin_years')\n\nbusiness_analyst_comp = data[data.title == 'Business Analyst']\\\n    [['yearly_compensation', 'employed_bin_years']]","967643c1":"def plot_title_comp_box() -> go.Figure:\n    \"\"\"\n    Plots a Box chart for the yearly \n        compensation of Data Scientist and Business Analyst.\n    \"\"\"\n    fig = go.Figure()\n\n    fig.add_trace(go.Box(\n        x=data_science_comp.yearly_compensation,\n        marker_color=cobalt_blue,\n        name='Data Science'))\n\n    fig.add_trace(go.Box(\n        x=business_analyst_comp.yearly_compensation, \n        marker_color=honey_orange,\n        name='Business Analyst'))\n\n    fig.update_layout(title='<b>Yearly Compensation:<\/b> Data Science and Business Analyst')\n    fig.update_xaxes(title='Total Compensation ($)')\n    return figure_show(fig, static=False)\n\nplot_title_comp_box()","a3202f6f":"comp_and_employed","dc59b443":"def plot_comp_emp() -> go.Figure:    \n    \"\"\"\n    Plots a Scatter Plot for the yearly compensation of\n        Data Scientist and Business Analyst.\n    \"\"\"\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(\n        y=data_science_comp.yearly_compensation,\n        x=data_science_comp.employed_bin_years, \n        mode='markers',\n        name='Data Scientist',\n        marker_color=cobalt_blue))\n    \n    fig.add_trace(go.Scatter(\n        y=business_analyst_comp.yearly_compensation,\n        x=business_analyst_comp.employed_bin_years,\n        mode='markers',\n        name='Business Analyst',\n        marker_color=honey_orange))\n    \n    \n    fig.update_layout(title='<b>Years Employed & Compensation<\/b>')\n    fig.update_traces(opacity=0.8)\n    fig.update_yaxes(title='Yearly Compensation ($)')\n    fig.update_xaxes(title='Total No. of years Employed')\n    \n    return figure_show(fig, static=False)\n\nplot_comp_emp()","82103090":"def plot_comp_emp():\n    \n    fig = px.box(comp_and_employed, y='yearly_compensation', x='employed_bin_years')\n    fig.update_layout(\n        title='<b>Years Employed & Compensation:<\/b><br> Combined - Data Scientist and Business Analyst')\n    fig.update_yaxes(title='Yearly Compensation ($)')\n    fig.update_xaxes(title='No. of Years Employed')\n    fig.update_traces(marker_color='Gray')\n    \n    return figure_show(fig, static=False)\n\nplot_comp_emp()","b2c957f7":"def plot_comp_exp():    \n    \n    fig = px.histogram(x=comp_and_experience.experience_years, y=comp_and_experience.yearly_compensation)\n    fig.update_layout(title='<b>Compensation and Experience<\/b>')\n    fig.update_traces(marker_color='Gray')\n    fig.update_yaxes(title='Yearly Compensation ($)')\n    fig.update_xaxes(title='Experience in yrs.')\n    return figure_show(fig, static=False)\n\nplot_comp_exp()","70cd4b0c":"This analysis will only include companies that has samples >= 100.","88023ee0":"## Time Feature","f3421783":"We'll be filtering out all other positiions\/title other than data scientist and business analyst. The analysis will be aims to to compare\nboth groups.","ddff8ec1":"### Work Experience and Yearly Compensation\n\n---","255fe02f":"# The Dataset\n\n---","d6fa16d9":"### No. of years Employed and Compensation\n\n---","903ef15a":"## Zooming in: Data Scientist and Business Analyst\n\n---","765e8dba":"## Yearly Compensation\n---","95f2fda0":"## Company & Title\n\n---","367e58a2":"### Distribution\n---"}}