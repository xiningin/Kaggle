{"cell_type":{"a50d3143":"code","9ca5dc16":"code","7ab1711e":"code","95e2b8eb":"code","0d4c2111":"code","4d2123ea":"code","c0f5147d":"code","7d51c0a3":"code","757fbaa6":"code","59020174":"code","a7baca30":"code","9c9c5a45":"code","1e533a4d":"code","af32c141":"code","faed7162":"code","2c187e09":"code","a4172ebd":"code","a82d49f5":"code","2f70e6ef":"code","c555f06b":"code","320f5a5d":"code","0bda21a9":"code","b1da09f3":"code","91230e3e":"code","65afc866":"code","59b58026":"code","6036d954":"code","fb05396d":"code","cb8a036e":"code","0275a839":"code","36744ef4":"code","a1adee37":"code","f7a55468":"code","b830a26a":"code","d95b4090":"code","6760fbe2":"code","f3c454e9":"markdown","5762b706":"markdown","aa949f48":"markdown","aba590e7":"markdown","5d736280":"markdown","75f93e18":"markdown","e94c4d0c":"markdown"},"source":{"a50d3143":"import numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport random\nimport cv2","9ca5dc16":"dir = '..\/input\/animals10\/raw-img'","7ab1711e":"classes = ['cane', 'cavallo', 'elefante', 'farfalla', 'gallina', 'gatto', 'mucca', 'pecora', 'ragno', 'scoiattolo']","95e2b8eb":"for cl in classes:\n    path = os.path.join(dir, cl)\n    for im_path in os.listdir(path):\n        img = cv2.imread(os.path.join(path, im_path))\n        plt.imshow(img)\n        break\n    break","0d4c2111":"img.shape","4d2123ea":"dataset = []\nfor cl in classes:\n    cls_num = classes.index(cl)\n    path = os.path.join(dir, cl)\n    for img in os.listdir(path):\n        try:\n            img = cv2.imread(os.path.join(path, img))\n            resized_img = cv2.resize(img, (224,224))\n            dataset.append([resized_img, cls_num])\n        except Exception as e:\n            pass","c0f5147d":"len(dataset)","7d51c0a3":"random.shuffle(dataset)\nfor i in dataset[:10]:\n    print(classes[i[1]])","757fbaa6":"x =  []\ny = []\nfor pic, label in dataset:\n    x.append(pic)\n    y.append(label)","59020174":"x = np.array(x)","a7baca30":"y = np.array(y)","9c9c5a45":"print(type(x),x.shape)\nprint(type(y),y.shape)","1e533a4d":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.layers import AveragePooling2D\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Input\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.vgg16 import preprocess_input\nfrom tensorflow.keras.preprocessing.image import img_to_array\nfrom tensorflow.keras.preprocessing.image import load_img\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report","af32c141":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","faed7162":"print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)","2c187e09":"translate = [\"dog\", \"horse\", \"elephant\", \"butterfly\", \"chicken\", \"cat\", \"cow\", \"sheep\", \"spider\", \"squirrel\"]","a4172ebd":"def img_show(pic, label, index):\n    plt.figure(figsize=(15,2))\n    plt.imshow(pic[index])\n    plt.xlabel(translate[label[index]], fontsize=10)","a82d49f5":"img_show(x_test, y_test, 8)","2f70e6ef":"IMAGE_SHAPE = [224, 224]","c555f06b":"vgg = VGG16(input_shape= IMAGE_SHAPE + [3], weights='imagenet', include_top=False)","320f5a5d":"for layer in vgg.layers:\n    layer.trainable = False","0bda21a9":"x = Flatten()(vgg.output)\npredictions = Dense(10, activation='softmax')(x)","b1da09f3":"model = Model(inputs = vgg.input, outputs = predictions)","91230e3e":"model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","65afc866":"model.fit(x_train, y_train, epochs=10, batch_size=32)","59b58026":"model.save('animal10.hdf5')","6036d954":"from tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.models import load_model\nimg1 = image.load_img('..\/input\/animals10\/raw-img\/farfalla\/OIP--4zW12JF-JpwKcDtEK7thgHaLC.jpeg', target_size= (224, 224))\nplt.imshow(img1)\nimg1 = image.img_to_array(img1)\nimg1 = np.expand_dims(img1,axis=0)\nmodel = load_model('.\/animal10.hdf5')\nresult_b = model.predict(img1)\ntranslate[np.argmax(result_b[0])]","fb05396d":"img2 = image.load_img('..\/input\/animals10\/raw-img\/cane\/OIP--2uTtzjaszBfEMCROuLN3wHaLH.jpeg', target_size= (224, 224))\nplt.imshow(img2)\nimg2 = image.img_to_array(img2)\nimg2 = np.expand_dims(img2,axis=0)\nresult_d = model.predict(img2)\ntranslate[np.argmax(result_d[0])]","cb8a036e":"img3 = image.load_img('..\/input\/animals10\/raw-img\/cavallo\/OIP--DjA-ZGzy7HvZtP0KyVSqgHaGi.jpeg', target_size= (224, 224))\nplt.imshow(img3)\nimg3 = image.img_to_array(img3)\nimg3 = np.expand_dims(img3,axis=0)\nresult_h = model.predict(img3)\ntranslate[np.argmax(result_h[0])]","0275a839":"img4 = image.load_img('..\/input\/animals10\/raw-img\/elefante\/OIP--NZ5o2aTrJ9SOjtMv4ZxewHaFP.jpeg', target_size= (224, 224))\nplt.imshow(img4)\nimg4 = image.img_to_array(img4)\nimg4 = np.expand_dims(img4,axis=0)\nresult_e = model.predict(img4)\ntranslate[np.argmax(result_e[0])]","36744ef4":"img5 = image.load_img('..\/input\/animals10\/raw-img\/gallina\/1010.jpeg', target_size= (224, 224))\nplt.imshow(img5)\nimg5 = image.img_to_array(img5)\nimg5 = np.expand_dims(img5,axis=0)\nresult_ch = model.predict(img5)\ntranslate[np.argmax(result_ch[0])]","a1adee37":"img6 = image.load_img('..\/input\/animals10\/raw-img\/gatto\/1005.jpeg', target_size= (224, 224))\nplt.imshow(img6)\nimg6 = image.img_to_array(img6)\nimg6 = np.expand_dims(img6,axis=0)\nresult_c = model.predict(img6)\ntranslate[np.argmax(result_c[0])]","f7a55468":"img7 = image.load_img('..\/input\/animals10\/raw-img\/mucca\/OIP--FJF1fAEKYhaAYF7cVpHNgHaFj.jpeg', target_size= (224, 224))\nplt.imshow(img7)\nimg7 = image.img_to_array(img7)\nimg7 = np.expand_dims(img7,axis=0)\nresult_cw = model.predict(img7)\ntranslate[np.argmax(result_cw[0])]","b830a26a":"img8 = image.load_img('..\/input\/animals10\/raw-img\/pecora\/OIP--S44hiu6-CBwY5MH11WF-QHaEK.jpeg', target_size= (224, 224))\nplt.imshow(img8)\nimg8 = image.img_to_array(img8)\nimg8 = np.expand_dims(img8,axis=0)\nresult_sh = model.predict(img8)\ntranslate[np.argmax(result_sh[0])]","d95b4090":"img9 = image.load_img('..\/input\/animals10\/raw-img\/ragno\/OIP--8CNJSaiNQEfqsZDtw-TvQAAAA.jpeg', target_size= (224, 224))\nplt.imshow(img9)\nimg9 = image.img_to_array(img9)\nimg9 = np.expand_dims(img9,axis=0)\nresult_sp = model.predict(img9)\ntranslate[np.argmax(result_sp[0])]","6760fbe2":"img10 = image.load_img('..\/input\/animals10\/raw-img\/scoiattolo\/OIP--DrDALaoxXONuIOVq3YyOwHaD3.jpeg', target_size= (224, 224))\nplt.imshow(img10)\nimg10 = image.img_to_array(img10)\nimg10 = np.expand_dims(img10,axis=0)\nresult_sq = model.predict(img10)\ntranslate[np.argmax(result_sq[0])]","f3c454e9":"# Setting the remaining layer as non-trainable","5762b706":"# Saving the model","aa949f48":"# Splitting the dataset into training and testing set","aba590e7":"# Training our model","5d736280":"# Importing libraries","75f93e18":"# Importing our Transfer learning Model and remove the output layer","e94c4d0c":"# Predicting by passing random images"}}