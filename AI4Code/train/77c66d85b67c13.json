{"cell_type":{"217cd8d1":"code","adaf3d5f":"code","2e3f2746":"code","42d08915":"code","6bb2271f":"code","cfb3a65a":"code","ef58d6f1":"code","4523939d":"code","0e39f2fb":"markdown","38daf7ea":"markdown"},"source":{"217cd8d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","adaf3d5f":"\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport bokeh\nfrom bokeh.plotting import figure\nfrom bokeh.io import output_file, show\nfrom bokeh.models import ColumnDataSource, Legend, HoverTool\nfrom bokeh.palettes import Spectral10","2e3f2746":"sns.set_style(\"whitegrid\")\nbokeh.plotting.output_notebook()","42d08915":"data = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-1\/train.csv\")","6bb2271f":"time_country_data = data[(data.ConfirmedCases>100) &\\\n                         (data[\"Country\/Region\"]!= \"China\")]\\\n                             .groupby([\"Country\/Region\", \"Date\"])\\\n                                  [[\"ConfirmedCases\", \"Fatalities\"]].sum().reset_index()","cfb3a65a":"time_country_data[\"Date\"] = pd.to_datetime(time_country_data.Date, format=\"%Y\/%m\/%d\")\nhover = HoverTool(tooltips = [\n    (\"Date\", \"@Date{%F}\"),\n    (\"Country\", \"@{Country\/Region}\"),\n    (\"Fatalities\", \"@Fatalities\"),\n    (\"ConfirmedCases\", \"@ConfirmedCases\")],\n                  formatters={'Date': 'datetime'})","ef58d6f1":"p = figure(title = \"The Progression\",\n          x_axis_label=\"Date\",\n          y_axis_label=\"ConfirmedCases\", x_axis_type=\"datetime\", tools='pan,box_zoom')\np.add_tools(hover)\n\n\nlegend_lt = []\n\nfor i, country in enumerate(time_country_data[\"Country\/Region\"].unique().tolist()):\n    cds_time_data = ColumnDataSource(time_country_data[time_country_data[\"Country\/Region\"] == country])\n    c = p.line(\"Date\", \"ConfirmedCases\",source=cds_time_data,color=Spectral10[i%10])\n    legend_lt.append((country, [c]))\n\nlegend = Legend(items=legend_lt, location=(0, 0))\np.add_layout(legend, 'right')\nshow(p)","4523939d":"q = figure(title = \"Compare Countries from beginning\",\n          x_axis_label=\"Days\",\n          y_axis_label=\"ConfirmedCases\", tools='pan,box_zoom', tooltips=[('country', '@country')])\n\nlegend_lt = []\n\nfor i, country in enumerate(time_country_data[\"Country\/Region\"].unique().tolist()):\n    rolling = time_country_data[time_country_data[\"Country\/Region\"] == country].rolling(7, min_periods=1)\\\n        [\"ConfirmedCases\"].mean().tolist()\n    \n    rolling_cdf = ColumnDataSource({\"index\": range(len(rolling)), \"rolling\": rolling, \n                                    \"country\": [country for c in range(len(rolling))]})\n\n    c = q.line(\"index\", \"rolling\", source=rolling_cdf, color=Spectral10[i%10])\n    legend_lt.append((country, [c]))\n\nlegend = Legend(items=legend_lt, location=(0, 0))\nq.add_layout(legend, 'right')\nshow(q)","0e39f2fb":"### The Progression - Look at South Korea","38daf7ea":"### Comparing Countries from Day 0 - United States seems to be the worse."}}