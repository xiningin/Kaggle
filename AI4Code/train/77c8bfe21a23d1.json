{"cell_type":{"a5bb1bcf":"code","906ba7e6":"code","79bed269":"code","06a7aa7f":"code","6eb6c888":"code","0f9012c6":"code","ea173f27":"code","2140b136":"code","70415ee6":"code","fbec61a2":"code","e5b41ab9":"code","e66a4d84":"code","83d531aa":"code","8851eb00":"code","5dc12d32":"code","cd2c0013":"code","73c70160":"code","623ef170":"code","1e0dc043":"code","ca2d02b9":"code","ff936933":"code","f499bd0a":"code","660be12d":"code","af994b73":"code","6b0d8879":"code","33fb3ca1":"code","c493ba57":"code","57392495":"code","e1aeea79":"code","39aa09a3":"markdown","39c2b46f":"markdown","4795d1ed":"markdown","62da99e6":"markdown","f6a385b5":"markdown","deef4461":"markdown","19dbfe29":"markdown","d32bb556":"markdown"},"source":{"a5bb1bcf":"!apt-get install -y libsndfile1","906ba7e6":"import numpy as np\nimport pandas as pd\nimport cffi\nimport torchvision\nimport joblib\nimport librosa\nimport jieba\n\nfrom sklearn.model_selection import train_test_split\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","79bed269":"!git clone https:\/\/github.com\/OpenNMT\/OpenNMT-py\n!mkdir \/kaggle\/working\/data\n!mkdir \/kaggle\/working\/output","06a7aa7f":"train_count = 1000000\nval_count = 5000\ntest_count = 5000","6eb6c888":"with open('\/kaggle\/input\/zh-ru-parallel-corpus\/un_ru.txt', mode='r', encoding='utf-8') as ru_in, open('\/kaggle\/working\/data\/sent_ru_train.txt', mode='w', encoding='utf-8') as ru_out_train, \\\n     open('\/kaggle\/working\/data\/sent_ru_val.txt', mode='w', encoding='utf-8') as ru_out_val, open('\/kaggle\/working\/data\/sent_ru_test.txt', mode='w', encoding='utf-8') as ru_out_test:\n    \n    for i in range(train_count):\n        if i < train_count-1:\n            ru_out_train.write(ru_in.readline().strip() + '\\n')\n        else:\n            ru_out_train.write(ru_in.readline().strip())\n        \n    for i in range(val_count):\n        if i < val_count-1:\n            ru_out_val.write(ru_in.readline().strip() + '\\n')\n        else:\n            ru_out_val.write(ru_in.readline().strip())\n        \n    for i in range(test_count):\n        if i < test_count-1:\n            ru_out_test.write(ru_in.readline().strip() + '\\n')\n        else:\n            ru_out_test.write(ru_in.readline().strip())    ","0f9012c6":"with open('\/kaggle\/input\/zh-ru-parallel-corpus\/un_zh.txt', mode='r', encoding='utf-8') as zh_in, open('\/kaggle\/working\/data\/sent_zh_train.txt', mode='w', encoding='utf-8') as zh_out_train, \\\n     open('\/kaggle\/working\/data\/sent_zh_val.txt', mode='w', encoding='utf-8') as zh_out_val, open('\/kaggle\/working\/data\/sent_zh_test.txt', mode='w', encoding='utf-8') as zh_out_test:\n    \n    for i in range(train_count):\n        if i < train_count-1:\n            zh_out_train.write(zh_in.readline().strip() + '\\n')\n        else:\n            zh_out_train.write(zh_in.readline().strip())\n        \n    for i in range(val_count):\n        if i < val_count-1:\n            zh_out_val.write(zh_in.readline().strip() + '\\n')\n        else:\n            zh_out_val.write(zh_in.readline().strip())\n        \n    for i in range(test_count):\n        if i < test_count-1:\n            zh_out_test.write(zh_in.readline().strip() + '\\n')\n        else:\n            zh_out_test.write(zh_in.readline().strip())   ","ea173f27":"!python \/kaggle\/working\/OpenNMT-py\/tools\/learn_bpe.py -i \/kaggle\/working\/data\/sent_zh_train.txt -o \/kaggle\/working\/data\/src.code -s 36000","2140b136":"!python \/kaggle\/working\/OpenNMT-py\/tools\/learn_bpe.py -i \/kaggle\/working\/data\/sent_ru_train.txt -o \/kaggle\/working\/data\/trg.code -s 30000","70415ee6":"!python \/kaggle\/working\/OpenNMT-py\/tools\/apply_bpe.py -c \/kaggle\/working\/data\/src.code -i \/kaggle\/working\/data\/sent_zh_train.txt -o \/kaggle\/working\/data\/src-train-bpe.txt\n\n!python \/kaggle\/working\/OpenNMT-py\/tools\/apply_bpe.py -c \/kaggle\/working\/data\/src.code -i \/kaggle\/working\/data\/sent_zh_val.txt -o \/kaggle\/working\/data\/src-val-bpe.txt\n\n!python \/kaggle\/working\/OpenNMT-py\/tools\/apply_bpe.py -c \/kaggle\/working\/data\/src.code -i \/kaggle\/working\/data\/sent_zh_test.txt -o \/kaggle\/working\/data\/src-test-bpe.txt\n\n!python \/kaggle\/working\/OpenNMT-py\/tools\/apply_bpe.py -c \/kaggle\/working\/data\/trg.code -i \/kaggle\/working\/data\/sent_ru_train.txt -o \/kaggle\/working\/data\/tgt-train-bpe.txt\n\n!python \/kaggle\/working\/OpenNMT-py\/tools\/apply_bpe.py -c \/kaggle\/working\/data\/trg.code -i \/kaggle\/working\/data\/sent_ru_val.txt -o \/kaggle\/working\/data\/tgt-val-bpe.txt","fbec61a2":"!python \/kaggle\/working\/OpenNMT-py\/preprocess.py -train_src \/kaggle\/working\/data\/src-train-bpe.txt -train_tgt \/kaggle\/working\/data\/tgt-train-bpe.txt \\\n    -valid_src \/kaggle\/working\/data\/src-val-bpe.txt -valid_tgt \/kaggle\/working\/data\/tgt-val-bpe.txt -save_data \/kaggle\/working\/data\/ondatr \\\n    -src_vocab_size 36000 -tgt_vocab_size 30000","e5b41ab9":"#!python \/kaggle\/working\/OpenNMT-py\/train.py -data \/kaggle\/working\/data\/ondatr -save_model \/kaggle\/working\/data\/ondatr-trans -world_size 1 -gpu_rank 0 --train_steps 60000 -save_checkpoint_steps 20000 --keep_checkpoint 1","e66a4d84":"# !python \/kaggle\/working\/OpenNMT-py\/train.py -data \/kaggle\/working\/data\/ondatr -save_model \/kaggle\/working\/data\/ondatr-trans -layers 6 -rnn_size 512 \\\n#     -word_vec_size 512 -transformer_ff 2048 -heads 8 -encoder_type transformer -decoder_type transformer -position_encoding \\\n#     -train_steps 10000 -max_generator_batches 2 -dropout 0.1 -batch_size 4096 -batch_type tokens -normalization tokens \\\n#     -accum_count 2 -optim adam -adam_beta2 0.998 -decay_method noam -warmup_steps 8000 -learning_rate 2 -max_grad_norm 0 \\\n#     -param_init 0 -param_init_glorot -label_smoothing 0.1 -valid_steps 1000 -save_checkpoint_steps 10000 -world_size 1 -gpu_rank 0 --keep_checkpoint 1","83d531aa":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_80000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred80.bpe -replace_unk -verbose","8851eb00":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_90000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred90.bpe -replace_unk -verbose","5dc12d32":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_100000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred100.bpe -replace_unk -verbose","cd2c0013":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_110000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred110.bpe -replace_unk -verbose","73c70160":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_120000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred120.bpe -replace_unk -verbose","623ef170":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_130000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred130.bpe -replace_unk -verbose","1e0dc043":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_140000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred140.bpe -replace_unk -verbose","ca2d02b9":"# !python \/kaggle\/working\/OpenNMT-py\/translate.py -model \/kaggle\/working\/data\/ondatr-trans_step_150000.pt -src \/kaggle\/input\/opennmtpretrained\/src-test-bpe.txt \\\n#     -output \/kaggle\/working\/output\/pred150.bpe -replace_unk -verbose","ff936933":"# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred80.bpe\n# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred90.bpe\n# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred100.bpe\n# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred110.bpe\n# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred120.bpe\n# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred130.bpe\n# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred140.bpe\n# !sed -i \"s\/@@ \/\/g\" \/kaggle\/working\/output\/pred150.bpe","f499bd0a":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred80.bpe","660be12d":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred90.bpe","af994b73":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred100.bpe","6b0d8879":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred110.bpe","33fb3ca1":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred120.bpe","c493ba57":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred130.bpe","57392495":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred140.bpe","e1aeea79":"# !perl \/kaggle\/working\/OpenNMT-py\/tools\/multi-bleu.perl \/kaggle\/working\/data\/sent_ru_test.txt < \/kaggle\/working\/output\/pred150.bpe","39aa09a3":"# BLEU","39c2b46f":"# Translate","4795d1ed":"# Train & test split","62da99e6":"# Preprocessing","f6a385b5":"# Make dictionary","deef4461":"# Train","19dbfe29":"# BPE","d32bb556":"# Detokenization"}}