{"cell_type":{"88fd941d":"code","a5c766f4":"code","ba3ea10a":"code","61c66222":"code","af52f397":"code","90747207":"code","c9e4bb10":"code","ac26ec78":"code","50805e85":"code","ebadf8f0":"code","81cba987":"code","493d6f8a":"code","5ba7666b":"code","187c2ff3":"code","2d5a05b6":"code","4b7dbd3a":"markdown","2b91549d":"markdown","7553b09c":"markdown","a3de4a60":"markdown","62aed6b6":"markdown","8c3fd8b2":"markdown"},"source":{"88fd941d":"import numpy as np \nimport pandas as pd \n\nimport sklearn.model_selection as model_selection\n\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_transformer\n\n#For Missing Value Treatment\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.impute import KNNImputer\n\n#For Binning and creating Dummy Variables\nfrom sklearn.feature_selection import SelectKBest, chi2\nfrom sklearn.preprocessing import KBinsDiscretizer, OneHotEncoder\nfrom sklearn.preprocessing import QuantileTransformer\n\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn.metrics import mean_squared_error","a5c766f4":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ba3ea10a":"train = pd.read_csv('\/kaggle\/input\/restaurant-revenue-prediction\/train.csv.zip')\nsub_test = pd.read_csv('\/kaggle\/input\/restaurant-revenue-prediction\/test.csv.zip')","61c66222":"train.head()","af52f397":"y = train['revenue']\nX = train.drop(['revenue','Id'], axis = 1)","90747207":"X_train, X_test, y_train, y_test = model_selection.train_test_split(X,y,test_size=0.2, random_state = 200)","c9e4bb10":"#Condidering Numerical Features only\nnumerical_features = [c for c, dtype in zip(X.columns, X.dtypes) if dtype.kind in ['i','f'] ]\n\nprint('Numerical : ' + str(numerical_features))","ac26ec78":"#Data Processing Steps\npreprocessor = make_column_transformer(\n    \n    (make_pipeline(\n    KNNImputer(n_neighbors=10),\n    KBinsDiscretizer(n_bins = 6),\n    SelectKBest(chi2, k=15),\n    ), numerical_features)\n    \n)","50805e85":"#Model Steps\nregModel = make_pipeline(preprocessor, LinearRegression())","ebadf8f0":"regModel.fit(X_train, y_train)","81cba987":"train_score = regModel.score(X_train,y_train)\ntest_score = regModel.score(X_test,y_test)\n\nprint(f'Train Accuracy : {train_score:.3f}')\nprint(f'Test Accuracy : {test_score:.3f}')","493d6f8a":"#Check RMSE\ny_pred = regModel.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","5ba7666b":"y_sub_pred = regModel.predict(sub_test.drop(['Id'], axis = 1))","187c2ff3":"submission_df = pd.DataFrame({'Id' : sub_test['Id'], 'Prediction' : y_sub_pred})","2d5a05b6":"submission_df.to_csv('Reg_Model_Pipeline.csv', index = False)\nsubmission_df.head()","4b7dbd3a":"# Make a Submission","2b91549d":"# Check Accuracy","7553b09c":"# Split Data into Train and Test","a3de4a60":"# Import Libraries","62aed6b6":"# Import Data","8c3fd8b2":"# Build Pipeline"}}