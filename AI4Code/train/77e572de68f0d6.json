{"cell_type":{"ccb0c2d3":"code","bc6b866a":"code","8fd10d1c":"code","c5650b22":"code","92753e40":"code","b37b3da5":"code","42d22f0e":"code","adb8c23c":"code","da3c9f5d":"code","2a01eb43":"code","be13fabb":"code","5db05acc":"code","b56795b4":"code","19640a8e":"code","3dbaf520":"code","4715549a":"code","b72a8415":"code","f08b16f4":"code","f90c5c39":"code","84635df4":"code","8575cfc9":"code","4f1d7e04":"code","31fd3d53":"code","5bf58c79":"code","47e7a2c5":"code","9b726f22":"code","566d75f0":"code","01fbce6a":"code","f96dc1b4":"code","b00e1191":"code","c70e55ed":"code","ce208bca":"code","30557a1a":"code","f8b094f3":"code","2a8ae434":"code","e486d6a1":"code","7ce75ae6":"code","7bfef10a":"code","7bf1cf66":"code","6b9a58af":"code","6d3a491e":"code","9a7ce448":"code","e27d1918":"code","5aef3761":"code","a5e7ebbc":"code","09a6509a":"code","97e6ace1":"code","6aac07a6":"code","53c4e2c2":"code","3639bbda":"code","0844af54":"code","af2d5411":"code","1a4dce37":"code","8ff6c67a":"code","25bb9fe6":"code","06a82856":"code","d3d7aa0a":"code","7df3fbee":"code","87b4dae0":"code","3a463a30":"code","e1391388":"code","8cebb9cd":"code","191cfd1d":"code","0caf9a45":"code","7a646353":"code","bbee8faa":"code","276e3113":"code","45009919":"code","6b6ec628":"code","ff7a2902":"code","c5056c24":"code","e95f15dd":"code","52e5a95b":"code","5b2a1894":"code","b9618a23":"code","5713f3a8":"code","d8dba3d2":"code","d5db92dc":"code","6875f3c3":"code","d6f897c0":"code","d7baf30c":"code","48accb35":"code","c90dd6b0":"code","a338dfe6":"code","37c24ec1":"code","57abeac3":"code","556e1bf1":"code","dfa50cdb":"code","00515978":"code","139d5c62":"code","f45205b3":"code","da00768a":"code","25fe88c7":"code","b2a91a8d":"code","5922851a":"code","ef8d1dbe":"code","16bad204":"code","e91e3755":"code","56cd5866":"code","8ee7666a":"code","7d6367fb":"code","d1b54749":"code","b509b963":"code","ae4b195d":"code","2c9c445c":"code","b2018ab2":"code","51084c37":"code","daf3a285":"code","55a750a4":"code","91767b70":"code","9246ac0b":"code","9d6897ce":"code","9d571cf9":"code","2bbebca4":"code","cc75bb46":"code","c7d631c4":"code","b6e5d64c":"code","939b3fc6":"code","ceab8cc8":"code","1294b19d":"code","97bea3be":"code","a4310f40":"code","dcb4f601":"code","a501cb44":"code","d08acfb2":"code","8ef19701":"code","90b7936e":"code","bcabe93a":"code","08cc12c6":"code","6e4be99d":"code","e88fbd38":"code","aad64fcc":"code","e4b6d42a":"code","f0c5b467":"code","c842043f":"code","4f74d485":"code","aed7c417":"code","2a32641a":"code","e15520a8":"code","3e1a3a1c":"code","2aa579b2":"code","b0611139":"code","c124b1b2":"markdown","3d4ac00e":"markdown","4a37a352":"markdown","3b695ca4":"markdown","ff80563b":"markdown","59ec352c":"markdown","df8a43ae":"markdown","8fc49991":"markdown","de0b7978":"markdown","f97a3bde":"markdown","2092841c":"markdown","9247d72a":"markdown","230d98a7":"markdown","41d9c8dc":"markdown","1e49e4b9":"markdown","736b0436":"markdown","f2ebfa01":"markdown","30a9d7bf":"markdown","b7708304":"markdown","86287ea5":"markdown","c557d731":"markdown","48ce302d":"markdown","490d446b":"markdown","7c5741d1":"markdown","525a20fa":"markdown","55b4893e":"markdown","3e7a8510":"markdown","f7a917dd":"markdown","f78cb8ff":"markdown","07003912":"markdown","a86d5283":"markdown","0ff53874":"markdown","0f4eadf9":"markdown","19807d66":"markdown","e8474544":"markdown","9c386cd7":"markdown"},"source":{"ccb0c2d3":"import warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd","bc6b866a":"df1 = pd.read_csv('\/kaggle\/input\/bigmart-sales-dataset\/Train_UWu5bXk.txt',sep=',')","8fd10d1c":"df1.head()","c5650b22":"df1.shape","92753e40":"df1.columns","b37b3da5":"df1.isnull().sum()","42d22f0e":"df1['Item_Type_Category'] = df1['Item_Identifier'].apply(lambda x: x[0:2])","adb8c23c":"df1['Item_Type_Category'] = df1['Item_Type_Category'].map({'FD' : 'FOOD','NC' : 'Non-Consumable','DR' : 'Drinks'})","da3c9f5d":"df1['data']  = 'Train'","2a01eb43":"df1.columns","be13fabb":"df2 = pd.read_csv('\/kaggle\/input\/bigmart-sales-dataset\/Test_u94Q5KV.txt',sep=',')","5db05acc":"df2['Item_Type_Category'] = df2['Item_Identifier'].apply(lambda x: x[0:2])\n","b56795b4":"df2['Item_Type_Category'] = df2['Item_Type_Category'].map({'FD' : 'FOOD','NC' : 'Non-Consumable','DR' : 'Drinks'})","19640a8e":"df2['data'] = 'Test'","3dbaf520":"df2.columns","4715549a":"#df2['Item_Outlet_Sales'] = np.nan","b72a8415":"df = pd.concat([df1,df2],axis = 0)","f08b16f4":"df = df.drop(['Item_Identifier','Item_Type'],axis = 1)","f90c5c39":"df.columns","84635df4":"df.Item_Visibility = df.Item_Visibility.replace(0,np.mean(df.Item_Visibility))","8575cfc9":"df.shape","4f1d7e04":"num_var = [key for key in dict(df.dtypes) if dict(df.dtypes)[key] in ['int64','float64']]\ncat_var = [key for key in dict(df.dtypes) if dict(df.dtypes)[key] in ['object']]","31fd3d53":"print(num_var)\nprint(cat_var)","5bf58c79":"df.columns","47e7a2c5":"df[num_var].isnull().sum()","9b726f22":"df.Item_Weight = df.Item_Weight.fillna(df.Item_Weight.mean())","566d75f0":"df[num_var].isnull().sum()","01fbce6a":"df[cat_var].isnull().sum()","f96dc1b4":"df.Outlet_Size.mode().iloc[0]","b00e1191":"df.Outlet_Size = df.Outlet_Size.fillna(df.Outlet_Size.mode().iloc[0])","c70e55ed":"df[cat_var].isnull().sum()","ce208bca":"df[cat_var].columns","30557a1a":"df.columns","f8b094f3":"df[cat_var].columns","2a8ae434":"for i in df[cat_var].columns:\n    print(df[i].unique())","e486d6a1":"df['Item_Fat_Content'].loc[(df['Item_Fat_Content']=='low fat') | (df['Item_Fat_Content']=='LF')] = 'Low Fat'","7ce75ae6":"df['Item_Fat_Content'].loc[(df['Item_Fat_Content']=='reg')] = \"Regular\"","7bfef10a":"df.Item_Fat_Content.unique()","7bf1cf66":"df[cat_var].head()","6b9a58af":"df.columns","6d3a491e":"df['No_Of_Years_Before_Established'] = 2019 - df.Outlet_Establishment_Year","9a7ce448":"df = df.drop('Outlet_Establishment_Year',axis = 1)","e27d1918":"cat_var = [key for key in dict(df.dtypes) if dict(df.dtypes)[key] in ['object']]","5aef3761":"df[cat_var].columns[:-1]","a5e7ebbc":"df = pd.get_dummies(df,columns = df[cat_var].columns[:-1],drop_first = True)","09a6509a":"df.columns","97e6ace1":"df_train = df[df['data'] == 'Train']","6aac07a6":"df_train = df_train.drop('data',axis = 1)","53c4e2c2":"df_test = df[df['data']== 'Test']","3639bbda":"df_test = df_test.drop('data',axis = 1)","0844af54":"df_test = df_test.drop('Item_Outlet_Sales',axis = 1)","af2d5411":"X = df_train.drop('Item_Outlet_Sales',axis =1)","1a4dce37":"y = df_train.Item_Outlet_Sales","8ff6c67a":"from sklearn.model_selection import train_test_split","25bb9fe6":"X_train,X_val,y_train,y_val = train_test_split(X,y,test_size = 0.3,random_state=1)","06a82856":"from sklearn.linear_model import LinearRegression,Ridge,Lasso","d3d7aa0a":"lm = LinearRegression()","7df3fbee":"lm.fit(X_train,y_train)","87b4dae0":"y_pred = lm.predict(X_val)","3a463a30":"from sklearn.metrics import mean_squared_error,r2_score","e1391388":"np.sqrt(mean_squared_error(y_val,y_pred))","8cebb9cd":"r2_score(y_val,y_pred)","191cfd1d":"predict = lm.predict(X_train)","0caf9a45":"r2_score(y_train,predict)","7a646353":"#r2_score(y_val,RFE_y_pred)","bbee8faa":"#predict = rfe_6.predict(X_train)","276e3113":"#r2_score(y_train,predict)","45009919":"from sklearn.model_selection import GridSearchCV","6b6ec628":"lambdas = np.linspace (1,100,100)\nparams = {'alpha':lambdas}\nmodel = Ridge(fit_intercept = True)","ff7a2902":"Ridge = GridSearchCV(model,param_grid = params , cv = 10, scoring = 'neg_mean_absolute_error')","c5056c24":"Ridge.fit(X_train,y_train)","e95f15dd":"Ridge.best_estimator_","52e5a95b":"Ridge_model = Ridge.best_estimator_","5b2a1894":"Ridge_y_pred = Ridge_model.predict(X_val)","b9618a23":"np.sqrt(mean_squared_error(y_val,Ridge_y_pred))","5713f3a8":"r2_score(y_val,Ridge_y_pred)","d8dba3d2":"predict = Ridge_model.predict(X_train)","d5db92dc":"r2_score(y_train,predict)","6875f3c3":"lambdas = np.linspace (1,100,100)\nparams = {'alpha':lambdas}\nmodel_1 = Lasso(fit_intercept = True)","d6f897c0":"Lasso = GridSearchCV(model_1,param_grid = params , cv = 10, scoring = 'neg_mean_absolute_error')","d7baf30c":"Lasso.fit(X_train,y_train)","48accb35":"Lasso_model = Lasso.best_estimator_","c90dd6b0":"Lasso_y_pred = Lasso_model.predict(X_val)","a338dfe6":"np.sqrt(mean_squared_error(y_val,Lasso_y_pred))","37c24ec1":"r2_score(y_val,Lasso_y_pred)","57abeac3":"predict = Lasso_model.predict(X_train)","556e1bf1":"r2_score(y_train,predict)","dfa50cdb":"from sklearn import tree","00515978":"reg = tree.DecisionTreeRegressor(max_depth=3)\nreg.fit(X_train,y_train)","139d5c62":"y_pred = reg.predict(X_val)","f45205b3":"np.sqrt(mean_squared_error(y_val,y_pred))","da00768a":"r2_score(y_val,y_pred)","25fe88c7":"predict = reg.predict(X_train)","b2a91a8d":"r2_score(y_train,predict)","5922851a":"param_grid = {'criterion':['mse','mae'],\n             'min_samples_split':[2,10,20],\n             'max_depth':[None,2,5,10],\n             'min_samples_leaf':[1,5,10],\n             'max_leaf_nodes':[None,5,10,20]}","ef8d1dbe":"from sklearn.model_selection import GridSearchCV\ndt = tree.DecisionTreeRegressor()\nreg = GridSearchCV(dt,param_grid , cv=2)\nreg.fit(X_train,y_train)","16bad204":"reg.best_estimator_","e91e3755":"DT_model = reg.best_estimator_","56cd5866":"dt_y_pred = DT_model.predict(X_val)","8ee7666a":"np.sqrt(mean_squared_error(y_val,dt_y_pred))","7d6367fb":"r2_score(y_val,dt_y_pred)","d1b54749":"predict = DT_model.predict(X_train)","b509b963":"r2_score(y_train,predict)","ae4b195d":"from sklearn.ensemble import RandomForestRegressor","2c9c445c":"reg = RandomForestRegressor()\nreg.fit(X_train,y_train)","b2018ab2":"RF_y_pred = reg.predict(X_val)","51084c37":"np.sqrt(mean_squared_error(y_val,RF_y_pred))","daf3a285":"r2_score(y_val,RF_y_pred)","55a750a4":"predict = reg.predict(X_train)","91767b70":"r2_score(y_train,predict)","9246ac0b":"lambdas = np.arange(1,1000,100)","9d6897ce":"param_grid = {'n_estimators': lambdas,\n              'max_features': ['auto','sqrt']}\n             ","9d571cf9":"from sklearn.model_selection import GridSearchCV\nrf = RandomForestRegressor()\n","2bbebca4":"reg = GridSearchCV(rf,param_grid , cv=2)\nreg.fit(X_train,y_train)","cc75bb46":"model = reg.best_estimator_","c7d631c4":"model.fit(X_train,y_train)","b6e5d64c":"RF_y_pred = model.predict(X_val)","939b3fc6":"np.sqrt(mean_squared_error(y_val,RF_y_pred))","ceab8cc8":"r2_score(y_val,RF_y_pred)","1294b19d":"predict = model.predict(X_train)","97bea3be":"r2_score(y_train,predict)","a4310f40":"from sklearn.neighbors import KNeighborsRegressor","dcb4f601":"model = KNeighborsRegressor()\nmodel.fit(X_train,y_train)","a501cb44":"KNN_y_pred = model.predict(X_val)","d08acfb2":"r2_score(y_val,KNN_y_pred)","8ef19701":"predict = model.predict(X_train)","90b7936e":"r2_score(y_train,predict)","bcabe93a":"params = np.arange(1,101,10)\n\nparam_grid = {'n_neighbors':params,\n             'metric':['minkowski','manhattan','euclidean']}\n\n","08cc12c6":"knn = KNeighborsRegressor()","6e4be99d":"reg = GridSearchCV(knn,param_grid , cv=2)\nreg.fit(X_train,y_train)","e88fbd38":"model = reg.best_estimator_","aad64fcc":"model.fit(X_train,y_train)","e4b6d42a":"KNN_y_pred = model.predict(X_val)","f0c5b467":"r2_score(y_val,KNN_y_pred)","c842043f":"predict = model.predict(X_train)","4f74d485":"r2_score(y_train,predict)","aed7c417":"df_test.head()","2a32641a":"Linear_Ridge = Ridge_model.predict(df_test)","e15520a8":"DT_GridSearch = DT_model.predict(df_test)","3e1a3a1c":"Test_predicted = (Linear_Ridge+DT_GridSearch)\/2","2aa579b2":"df_train.Item_Outlet_Sales.mean()","b0611139":"Test_predicted.mean()","c124b1b2":"np.sqrt(mean_squared_error(y_val,RFE_y_pred))","3d4ac00e":"# GridsearchCV","4a37a352":"from sklearn.feature_selection import RFE\n\nlm = LinearRegression()\nrfe_6 = RFE(lm, 6)\n\n# fit with 15 features\nrfe_6.fit(X_train,y_train)\nI = rfe_6.get_support(1) #the most important features\nF = df_train[df_train.columns[f]] # final features\n","3b695ca4":"# GridsearchCV","ff80563b":"## Train r2 score","59ec352c":"## Validate r2 score","df8a43ae":"## Train r2 score","8fc49991":"## Train r2 score","de0b7978":"## Validate r2 score","f97a3bde":"## Train r2 score","2092841c":"# KNN","9247d72a":"## Validate r2 score","230d98a7":"## Train r2 score","41d9c8dc":"## Validate r2 score","1e49e4b9":"# Recursive Feature Elimination","736b0436":"## Train r2 score","f2ebfa01":"# GridsearchCV","30a9d7bf":"F.columns","b7708304":"# Passing to Test Data","86287ea5":"RFE_y_pred = rfe_6.predict(X_val)","c557d731":"# Random Forest","48ce302d":"# Ridge","490d446b":"# Linear Regression","7c5741d1":"# Decision Tree","525a20fa":"## Validate r2 score","55b4893e":"## Validate r2 score","3e7a8510":"## Train r2 score","f7a917dd":"# Lasso","f78cb8ff":"## Train r2 score","07003912":"## Train r2 score","a86d5283":"## Train r2 score","0ff53874":"# Modeling","0f4eadf9":"## validate r2 score","19807d66":"## validate r2 score","e8474544":"## Validate r2 score","9c386cd7":"## validate r2 score"}}