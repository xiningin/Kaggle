{"cell_type":{"674fd02f":"code","65ba30cb":"code","7c45ed32":"code","1e52773b":"code","22c2d494":"code","51c210d5":"code","54293ff8":"code","76dc67be":"code","c4620948":"markdown","b3950b2e":"markdown","b617ab89":"markdown","c8883923":"markdown"},"source":{"674fd02f":"import numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.simplefilter(\"ignore\")\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\npd.set_option(\"display.max_rows\",1000)","65ba30cb":"target=\"HasDetections\"\nsubmission_id_col=\"MachineIdentifier\"\n\nSEED_TRAIN=100\nSEED_SAMPLE=100\nSEED_CV=42\nSEED_DEFAULT=42\nSAMPLE_ROWS=200000\n\nCV_SPLITS=5\nCV_REPEATS=30\n\nnp.random.seed(SEED_DEFAULT)","7c45ed32":"df_kaggle_train = pd.read_hdf(\n         '..\/input\/save-hdf-train-1m-sample\/train_sample.hdf',\n         key=\"train_sample\"\n)","1e52773b":"df_kaggle_train.shape","22c2d494":"from lightgbm import LGBMClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.pipeline import Pipeline\n\npipeline=LGBMClassifier(random_state=SEED_TRAIN,n_jobs=1 )\n\ndf_train=df_kaggle_train.sample(SAMPLE_ROWS,random_state=SEED_SAMPLE)\n\nlist_results=[]\nif __name__ == \"__main__\":\n    for i_feature in df_kaggle_train.columns.values:\n        if i_feature not in [submission_id_col,target]:\n            from sklearn.model_selection import cross_val_score,RepeatedStratifiedKFold\n\n            rskf = RepeatedStratifiedKFold(n_splits=CV_SPLITS, n_repeats=CV_REPEATS,\n                                           random_state=SEED_CV)\n\n            X_train=df_train[[i_feature]]\n            y_train=df_train[target]\n            \n            cv=cross_val_score(pipeline,X_train,y_train,n_jobs=-1,cv=rskf)\n            plt.hist(cv,color=\"blue\")\n            \n            # Permute (remove any feature signal)\n            X_train[i_feature]=np.random.permutation(X_train[i_feature].values)\n            if X_train[i_feature].dtype==\"object\":\n                X_train[i_feature]=X_train[i_feature].astype(\"category\")  \n                \n            rskf = RepeatedStratifiedKFold(n_splits=CV_SPLITS, \n                                           n_repeats=CV_REPEATS,random_state=SEED_CV)\n\n            cv_random=cross_val_score(pipeline,X_train,y_train,n_jobs=-1,cv=rskf)\n            plt.hist(cv_random,color=\"gray\")\n            \n            plt.title(f\"{i_feature}:{np.round(np.mean(cv)*100,3)} vs {np.round(np.mean(cv_random)*100,3)}\")\n            plt.show()\n            \n            list_results.append(pd.DataFrame({\"feature\":i_feature,\n                                              \"cv_score\":cv,\n                                              \"cv_score_random\":cv_random,\n                                              \"improved\":cv-cv_random}).reset_index())\n","51c210d5":"df_results=pd.concat(list_results)\ndf_results","54293ff8":"df_results.groupby(\"feature\")[[\"improved\"]].mean().sort_values(\"improved\",ascending=False)","76dc67be":"df_results.to_csv(\"classification_auc_per_feature.csv\",index=False)","c4620948":"# Save results for later reuse","b3950b2e":"# Eval single feature models (single feature model  vs random permuted feature)\n","b617ab89":"# Params","c8883923":"\n# Read Data"}}