{"cell_type":{"c6751b42":"code","77f76a17":"code","bb2902f3":"code","8554b07d":"code","25dc9019":"code","df7ddca1":"code","6f0d3cf7":"code","08acecef":"code","b6bdd339":"code","79cb3894":"markdown","615dc495":"markdown"},"source":{"c6751b42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","77f76a17":"data_1 = pd.read_csv(\"..\/input\/7210_1.csv\")\ndata_2 = pd.read_csv(\"..\/input\/Datafiniti_Womens_Shoes_Jun19.csv\")\ndata_3 = pd.read_csv(\"..\/input\/Datafiniti_Womens_Shoes.csv\")","bb2902f3":"data_2.drop(['imageURLs', 'manufacturerNumber', 'prices.condition', 'prices.dateAdded', 'prices.merchant','asins','dimension','manufacturer','prices.isSale', 'prices.returnPolicy', 'prices.shipping'], axis=1,inplace = True)","8554b07d":"#Visualization of statistical Data Set value\ndata_1.describe().plot(kind = \"area\",fontsize=27, figsize = (20,10), table = True,colormap=\"rainbow\")\nplt.xlabel('Statistics')\nplt.ylabel('Value')\nplt.title(\"General Data Set Values\")\n\n","25dc9019":"#Correlation matrix\ncorrmat = data_2.corr()\n#f, ax = plt.subplots(figsize=(15, 10))\nsns.heatmap(corrmat, square=True);","df7ddca1":"plt.figure(figsize=(25,15))\ndata_2.brand.value_counts()[:50].plot(kind='barh')","6f0d3cf7":"def prices(price):\n    a = ''\n    if (price <= 100):\n        a = 'cheap'\n    elif (price <= 300):\n        a = 'mid-range'\n    else:\n        a = 'expensive'\n    return a\n\ndata_2['prices.amountMax'] = data_2['prices.amountMax'].map(prices)\ndata_2['prices.amountMin'] = data_2['prices.amountMin'].map(prices)","08acecef":"fig, ax = plt.subplots(figsize=(25,12))\ndata_2.groupby(['brand','prices.amountMax']).count()['prices.availability'].unstack().plot(ax=ax)\nplt.title(\"Brand(Alphabtically) and its product price vs availability\")","b6bdd339":"plt.figure(figsize=(10, 6))\nplt.title(\"Price of product vs availability\")\nsns.barplot(y=data_2['prices.availability'],x=data_2['prices.amountMax'],hue= data_2['prices.amountMin'])","79cb3894":"This shows that normally expensive product is less available","615dc495":"Most public known brand"}}