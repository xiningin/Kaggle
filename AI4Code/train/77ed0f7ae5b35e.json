{"cell_type":{"a5baa79d":"code","48081e37":"code","cc64721c":"code","85b9492e":"code","d7e6f5fa":"code","443e7624":"code","010dffd9":"code","f86d73e7":"code","9fba3557":"code","8ad7872c":"code","44de07cf":"code","d04ef811":"code","0c72675c":"code","b6fa59a3":"code","9cbe47f7":"code","73ea794f":"code","1d4adeb3":"code","fbe3c085":"code","f4ca3feb":"code","9b2a1156":"code","4219680c":"code","f898f4ff":"code","27e25212":"code","0961707b":"code","ac38c147":"code","f2a07292":"code","01bb56ef":"code","9586781f":"code","d9c659e5":"code","907c21d5":"code","44e1f13e":"code","44444704":"code","5f784c42":"code","d6a7b2e8":"code","85d44d66":"code","3d6d2a4b":"markdown","bf7cd051":"markdown","0cce3e44":"markdown","97e23333":"markdown","97e294bc":"markdown","b280cb76":"markdown","35681c4c":"markdown","a82ff28d":"markdown"},"source":{"a5baa79d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom itertools import cycle\nimport math\n\nfrom sklearn import svm, datasets\nfrom sklearn.metrics import roc_curve, auc\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import label_binarize\nfrom sklearn.multiclass import OneVsRestClassifier\nfrom scipy import interp\nfrom sklearn.metrics import roc_auc_score\n%matplotlib inline","48081e37":"data=pd.read_csv('..\/input\/iris\/Iris.csv')\ndata","cc64721c":"data2=pd.get_dummies(data, columns=['Species'])\ndata2","85b9492e":"data2.columns","d7e6f5fa":"X=data2.drop(['Id','Species_Iris-setosa', 'Species_Iris-versicolor','Species_Iris-virginica'],axis=1)\ny=data2[['Species_Iris-setosa', 'Species_Iris-versicolor','Species_Iris-virginica']]\nName=[ 'Species_Iris-setosa', 'Species_Iris-versicolor','Species_Iris-virginica']\ncols=['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']","443e7624":"for i in range(4):\n    item=cols[i]\n    fig,ax = plt.subplots(figsize=(6,6))\n    ax.set_title('Iris-setosa '+item+' Distribution',fontsize=16)\n    ax.set_xlabel('Species_Iris-setosa',fontsize=12)\n    ax.set_ylabel(item,fontsize=12)\n    ax.scatter(data2['Species_Iris-setosa'],data2[item])","010dffd9":"# Add noisy features to make the problem harder\nrandom_state = np.random.RandomState(0)\nn_samples, n_features = X.shape\nX = np.c_[X, random_state.randn(n_samples, 200 * n_features)]","f86d73e7":"# shuffle and split training and test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=0)\n\n# Learn to predict each class against the other\nclassifier = OneVsRestClassifier(\n    svm.SVC(kernel=\"linear\", probability=True, random_state=random_state)\n)\ny_score = classifier.fit(X_train, y_train).decision_function(X_test)","9fba3557":"y_test=np.array(y_test)","8ad7872c":"# Compute ROC curve and ROC area for each class\nfpr = dict()\ntpr = dict()\nth = dict()\nroc_auc = dict()\nn_classes=3\n\nfor i in range(n_classes):\n    fpr[i], tpr[i], th[i] = roc_curve(y_test[:, i], y_score[:, i])\n    roc_auc[i] = auc(fpr[i], tpr[i])","44de07cf":"iris0=pd.DataFrame(columns=['fpr','tpr','th'])\niris0['fpr']=fpr[0]\niris0['tpr']=tpr[0]\niris0['th']=th[0]\niris0","d04ef811":"iris0['dist']=iris0['fpr']**2+(1-iris0['tpr'])**2\niris0","0c72675c":"iris0[iris0['dist']==iris0['dist'].min()]\n# cutoff value of thresholds = -0.110889","b6fa59a3":"plt.figure()\nlw = 2\nplt.plot(\n    fpr[0],tpr[0],color=\"darkorange\",lw=lw,\n    label=\"ROC curve (area = %0.2f)\" % roc_auc[0],\n)\n\nplt.plot([0, 1], [0, 1], color=\"navy\", lw=lw, linestyle=\"--\")\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title('ROC of ' + Name[0])\nplt.legend(loc=\"lower right\")\nplt.show()","9cbe47f7":"data2","73ea794f":"data3a=data2[['SepalLengthCm','Species_Iris-setosa']]\ndata3a=data3a.sort_values('SepalLengthCm').reset_index(drop=True)\nirism1=pd.DataFrame(columns=['fpr','tpr','th'])\nth1=list(range(1,100))\nirism1['th']=th1\nirism1['th']=irism1['th']\/10\nlen(irism1)","1d4adeb3":"for i in range(99):\n    s=irism1.loc[i,'th']\n    tp=len(data3a[data3a['SepalLengthCm']<=s][data3a['Species_Iris-setosa']==1])  # true positive\n    fn=len(data3a[data3a['SepalLengthCm']<=s][data3a['Species_Iris-setosa']==0])  # false negative\n    fp=len(data3a[data3a['SepalLengthCm']>s][data3a['Species_Iris-setosa']==1])  # false positive\n    tn=len(data3a[data3a['SepalLengthCm']>s][data3a['Species_Iris-setosa']==0])  # true negative\n    if fp+tn!=0 and tp+fn!=0:\n        irism1.loc[i,'fpr']=fp\/(fp+tn)\n        irism1.loc[i,'tpr']=tp\/(tp+fn)\n        \nirism1=irism1.fillna('N')        \nirism1=irism1[irism1['fpr']!='N'][irism1['tpr']!='N']\nirism1","fbe3c085":"irism1['dist']=irism1['fpr']**2+(1-irism1['tpr'])**2\nirism1","f4ca3feb":"irism1[irism1['dist']==irism1['dist'].min()]\n# cutoff value of SepalLengthCm = 5.4","9b2a1156":"plt.figure()\nlw = 2\nplt.plot(\n    irism1['fpr'],irism1['tpr'],color=\"darkorange\",lw=lw,\n    #label=\"ROC curve (area = %0.2f)\" % irism1['th'],\n)\n\nplt.plot([0, 1], [0, 1], color=\"navy\", lw=lw, linestyle=\"--\")\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title('ROC of ' + Name[0])\nplt.legend(loc=\"lower right\")\nplt.show()","4219680c":"data3b=data2[['SepalWidthCm','Species_Iris-setosa']]\ndata3b=data3b.sort_values('SepalWidthCm').reset_index(drop=True)\nirism2=pd.DataFrame(columns=['fpr','tpr','th'])\nth2=list(range(1,100))\nirism2['th']=th2\nirism2['th']=irism2['th']\/10\nlen(irism2)","f898f4ff":"for i in range(99):\n    s=irism2.loc[i,'th']\n    tp=len(data3b[data3b['SepalWidthCm']>s][data3b['Species_Iris-setosa']==1])\n    fn=len(data3b[data3b['SepalWidthCm']>s][data3b['Species_Iris-setosa']==0])\n    fp=len(data3b[data3b['SepalWidthCm']<=s][data3b['Species_Iris-setosa']==1])\n    tn=len(data3b[data3b['SepalWidthCm']<=s][data3b['Species_Iris-setosa']==0])\n    if fp+tn!=0 and tp+fn!=0:\n        irism2.loc[i,'fpr']=fp\/(fp+tn)\n        irism2.loc[i,'tpr']=tp\/(tp+fn)\n        \nirism2=irism2.fillna('N')        \nirism2=irism2[irism2['fpr']!='N'][irism2['tpr']!='N']\nirism2","27e25212":"irism2['dist']=irism2['fpr']**2+(1-irism2['tpr'])**2\nirism2","0961707b":"irism2[irism2['dist']==irism2['dist'].min()]\n# cutoff value of SepalWidthCm = 3.3","ac38c147":"plt.figure()\nlw = 2\nplt.plot(\n    irism2['fpr'],irism2['tpr'],color=\"darkorange\",lw=lw,\n    #label=\"ROC curve (area = %0.2f)\" % irism1['th'],\n)\n\nplt.plot([0, 1], [0, 1], color=\"navy\", lw=lw, linestyle=\"--\")\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title('ROC of ' + Name[0])\nplt.legend(loc=\"lower right\")\nplt.show()","f2a07292":"data3c=data2[['PetalLengthCm','Species_Iris-setosa']]\ndata3c=data3c.sort_values('PetalLengthCm').reset_index(drop=True)\nirism3=pd.DataFrame(columns=['fpr','tpr','th'])\nth3=list(range(1,100))\nirism3['th']=th3\nirism3['th']=irism3['th']\/10","01bb56ef":"for i in range(99):\n    s=irism3.loc[i,'th']\n    tp=len(data3c[data3c['PetalLengthCm']<=s][data3c['Species_Iris-setosa']==1])\n    fn=len(data3c[data3c['PetalLengthCm']<=s][data3c['Species_Iris-setosa']==0])\n    fp=len(data3c[data3c['PetalLengthCm']>s][data3c['Species_Iris-setosa']==1])\n    tn=len(data3c[data3c['PetalLengthCm']>s][data3c['Species_Iris-setosa']==0])\n    if fp+tn!=0 and tp+fn!=0:\n        irism3.loc[i,'fpr']=fp\/(fp+tn)\n        irism3.loc[i,'tpr']=tp\/(tp+fn)\n        \nirism3=irism3.fillna('N')        \nirism3=irism3[irism3['fpr']!='N'][irism3['tpr']!='N']\nirism3","9586781f":"irism3['dist']=irism3['fpr']**2+(1-irism3['tpr'])**2\nirism3","d9c659e5":"irism3[irism3['dist']==irism3['dist'].min()]\n# cutoff value of PetalLengthCm = 1.9~2.9","907c21d5":"plt.figure()\nlw = 2\nplt.plot(\n    irism3['fpr'],irism3['tpr'],color=\"darkorange\",lw=lw,\n    #label=\"ROC curve (area = %0.2f)\" % irism1['th'],\n)\n\nplt.plot([0, 1], [0, 1], color=\"navy\", lw=lw, linestyle=\"--\")\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title('ROC of ' + Name[0])\nplt.legend(loc=\"lower right\")\nplt.show()","44e1f13e":"data3d=data2[['PetalWidthCm','Species_Iris-setosa']]\ndata3d=data3d.sort_values('PetalWidthCm').reset_index(drop=True)\nirism4=pd.DataFrame(columns=['fpr','tpr','th'])\nth4=list(range(1,100))\nirism4['th']=th4\nirism4['th']=irism4['th']\/10\nirism4","44444704":"for i in range(99):\n    s=irism4.loc[i,'th']\n    tp=len(data3d[data3d['PetalWidthCm']<=s][data3d['Species_Iris-setosa']==1])\n    fn=len(data3d[data3d['PetalWidthCm']<=s][data3d['Species_Iris-setosa']==0])\n    fp=len(data3d[data3d['PetalWidthCm']>s][data3d['Species_Iris-setosa']==1])\n    tn=len(data3d[data3d['PetalWidthCm']>s][data3d['Species_Iris-setosa']==0])\n    if fp+tn!=0 and tp+fn!=0:\n        irism4.loc[i,'fpr']=fp\/(fp+tn)\n        irism4.loc[i,'tpr']=tp\/(tp+fn)\n        \nirism4=irism4.fillna('N')        \nirism4=irism4[irism4['fpr']!='N'][irism4['tpr']!='N']\nirism4","5f784c42":"irism4['dist']=irism4['fpr']**2+(1-irism4['tpr'])**2\nirism4","d6a7b2e8":"irism4[irism4['dist']==irism4['dist'].min()]\n# cutoff value of PetalWidthCm = 0.6~0.9","85d44d66":"plt.figure()\nlw = 2\nplt.plot(\n    irism4['fpr'],irism4['tpr'],color=\"darkorange\",lw=lw,\n    #label=\"ROC curve (area = %0.2f)\" % irism1['th'],\n)\n\nplt.plot([0, 1], [0, 1], color=\"navy\", lw=lw, linestyle=\"--\")\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title('ROC of ' + Name[0])\nplt.legend(loc=\"lower right\")\nplt.show()","3d6d2a4b":"## create ROC curve for Species_Iris-setosa","bf7cd051":"## 3.PetalLengthCm","0cce3e44":"# Iris: ROC curves and cutoff values\nhttps:\/\/scikit-learn.org\/stable\/auto_examples\/model_selection\/plot_roc.html","97e23333":"# A. ROC curve created by OneVsRestClassifier","97e294bc":"## 4.PetalWidthCm","b280cb76":"# B. Hand-made ROC curve","35681c4c":"## 2.SepalWidthCm","a82ff28d":"## 1.SepalLengthCm"}}