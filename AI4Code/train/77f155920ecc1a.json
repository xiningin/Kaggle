{"cell_type":{"51ba9ebb":"code","482e0ed5":"code","2dedf321":"code","e703fe4d":"code","2303c95c":"code","e366ab6b":"code","5fb47a5a":"code","df254f9e":"code","4bcd5c78":"code","2d8f4030":"code","a93cc891":"code","6c4aa915":"code","1c5e0af4":"code","d3c9f454":"code","89dbd4f2":"code","5c2fae38":"code","60be0490":"code","cb82c44c":"markdown","f3ac5b5e":"markdown","424ca601":"markdown","636cb17c":"markdown","947f9a2a":"markdown","1370b971":"markdown","c14bc557":"markdown","272def2f":"markdown"},"source":{"51ba9ebb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","482e0ed5":"trump_data = pd.read_csv(\"\/kaggle\/input\/all-trumps-twitter-insults-20152021\/trump_insult_tweets_2014_to_2021.csv\")\ntrump_data.head()","2dedf321":"trump_data['tweet'].describe()","e703fe4d":"trump_data['insult'].describe()","2303c95c":"trump_data['target'].describe()","e366ab6b":"trump_data['tweet_len'] =  trump_data['tweet'].apply(len)\n\nsns.distplot(trump_data['tweet_len'])","5fb47a5a":"trump_data['tweet_len'].plot(kind=\"hist\")","df254f9e":"trump_data['date'] = pd.to_datetime(trump_data['date'])\ntrump_data['year'] = trump_data['date'].dt.year\ntrump_data['month'] = trump_data['date'].dt.month\ntrump_data['day'] =  trump_data['date'].dt.day\ntrump_data.head()\n\n","4bcd5c78":"trump_data.shape","2d8f4030":"trump_data.groupby(['month'])['tweet'].agg('count').plot(kind=\"bar\")\n# number tweets group by months","a93cc891":"plt.figure(figsize=(16,8))\ntrump_data.groupby(['year'])['tweet'].agg('count').plot(kind=\"bar\")","6c4aa915":"data_2020 = trump_data[trump_data['year']==2020]","1c5e0af4":"data_2020.groupby(['month'])['tweet'].agg('count').plot(kind=\"bar\")","d3c9f454":"trump_data['target'].value_counts()[:10].sort_values(ascending=False).plot(kind=\"pie\")\n# .sort_values(ascending=False).plot(kind=\"pie\")","89dbd4f2":"trump_data['insult'].value_counts()[:10].sort_values(ascending=False).plot(kind=\"pie\")\n# .sort_values(ascending=False).plot(kind=\"pie\")","5c2fae38":"trump_data.groupby(\"target\")[\"insult\"].count().sort_values(ascending=False)","60be0490":"import string \nfrom nltk.corpus import stopwords\n\ntweet_text = ' '.join(trump_data['tweet'].dropna().tolist())\n\n\nplt.subplots(figsize=(12,6))\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nstopwords=set(STOPWORDS)\nwordcloud = WordCloud(stopwords=stopwords).generate(tweet_text)\n\n\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()\n\n    ","cb82c44c":"EDA based on insult","f3ac5b5e":"EDA of Trump Analysis","424ca601":"which day has most of the tweets about trump","636cb17c":"EDA based on target","947f9a2a":"Top 10 tweet target","1370b971":"check null values","c14bc557":"generate wordcloud","272def2f":"based on the year most of tweets are from 2020\n"}}