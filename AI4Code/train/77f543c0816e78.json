{"cell_type":{"bb791811":"code","218cfa06":"code","eef9848f":"code","0590c9ae":"code","796fb312":"code","f28f17df":"code","695252e9":"markdown","3244c6b1":"markdown","be7c1978":"markdown"},"source":{"bb791811":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","218cfa06":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\n","eef9848f":"home_data = pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/train.csv')\n\ny=home_data.SalePrice\n## Below is the list of specific features which were not numeric but they are essential.\nl = ['ExterQual','ExterCond','CentralAir','BsmtQual','BsmtCond','HeatingQC','KitchenQual',\n     'FireplaceQu','GarageQual','GarageCond','PavedDrive','PoolQC',\n     'BsmtExposure','BsmtFinType1','BsmtFinType2','GarageFinish','Fence'] \n## I have converted each of the above mentioned feature's string value into a numeric scale of 0 to 5 accordingly. \nfor i in l:\n    for j in range(len(home_data[i])):\n        if home_data[i][j] in {'Ex','GLQ','Fin'}:\n            home_data.at[j,i]=5\n        if home_data[i][j] in {'Gd','ALQ','GdPrv'}:\n            home_data.at[j,i]=4\n        if home_data[i][j] in {'TA','Av','BLQ','MnPrv'}:\n            home_data.at[j,i]=3\n        if home_data[i][j] in {'Fa','Mn','Rec','RFn','GdWo'}:\n            home_data.at[j,i]=2\n        if home_data[i][j]in {'Po','LwQ','MnWw'}:\n            home_data.at[j,i]=1\n        if home_data[i][j] in {'N','No','Unf'}:\n            home_data.at[j,i]=0\n        if home_data[i][j]== 'Y':\n            home_data.at[j,i]=1\n        if home_data[i][j] == 'P':\n            home_data.at[j,i]=0.5    \n            \nfeatures = ['MSSubClass','LotArea', 'OverallQual', 'OverallCond',\n     'YearBuilt', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF','FullBath',\n     'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr','TotRmsAbvGrd', 'Fireplaces', \n     'WoodDeckSF', 'OpenPorchSF','EnclosedPorch', '3SsnPorch', 'ScreenPorch',\n     'PoolArea','MiscVal','MoSold', 'YrSold','YearRemodAdd','GrLivArea',\n     'ExterQual','ExterCond','CentralAir','BsmtQual','BsmtCond','HeatingQC','KitchenQual',\n     'FireplaceQu','GarageQual','GarageCond','PavedDrive','PoolQC','BsmtExposure','BsmtFinType1','BsmtFinType2','GarageFinish','Fence']\nX = home_data[features]\nX = X.replace(np.nan,0) ## replacing nan values with 0\n","0590c9ae":"model = RandomForestRegressor(random_state=2)\nmodel.fit(X, y)","796fb312":"home_data=pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/test.csv')\nfor i in l:\n    for j in range(len(home_data[i])):\n        if home_data[i][j] == 'P':\n            home_data.at[j,i]=0.5\n        if home_data[i][j] in {'Ex','GLQ','Fin'}:\n            home_data.at[j,i]=5\n        if home_data[i][j] in {'Gd','ALQ','GdPrv'}:\n            home_data.at[j,i]=4\n        if home_data[i][j] in {'TA','Av','BLQ','MnPrv'}:\n            home_data.at[j,i]=3\n        if home_data[i][j] in {'Fa','Mn','Rec','RFn','GdWo'}:\n            home_data.at[j,i]=2\n        if home_data[i][j]in {'Po','LwQ','MnWw'}:\n            home_data.at[j,i]=1\n        if home_data[i][j] in {'N','No','Unf'}:\n            home_data.at[j,i]=0\n        if home_data[i][j]== 'Y':\n            home_data.at[j,i]=1\n        if home_data[i][j] == 'P':\n            home_data.at[j,i]=0.5    \nY = home_data                        \nY=Y[features]\nY = Y.replace(np.nan, 0)\npred=model.predict(Y)\n","f28f17df":"output = pd.DataFrame({'Id': home_data.Id,\n                       'SalePrice': pred})\noutput.to_csv('submission.csv', index=False)\n","695252e9":"**Training the model on whole train data set**","3244c6b1":"**Submission**","be7c1978":"**Making prediction on test data set**"}}