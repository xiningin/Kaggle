{"cell_type":{"242dbbf2":"code","0f165930":"code","58a1bf11":"code","cd47487d":"code","2a5b6c51":"code","337024b7":"code","71ebc99e":"markdown","89ad40c2":"markdown","d883d38c":"markdown","39c77e8c":"markdown","9d9765f7":"markdown","9f8f3989":"markdown","b15c73c0":"markdown","bb7c7c77":"markdown"},"source":{"242dbbf2":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\ntrain_df = pd.read_csv('..\/input\/train.csv', index_col='Id')","0f165930":"train_df.head()","58a1bf11":"train_df.info()","cd47487d":"train_df.describe()","2a5b6c51":"train_df.MSZoning.value_counts()","337024b7":"import matplotlib.pyplot as plt\ntrain_df.hist(bins=20, figsize=(30,30))\nplt.show()","71ebc99e":"## .info()\nThe info() method is useful to get a quick description of the data, in particular the total number of rows, and each attribute\u2019s type and number of non-null values.","89ad40c2":"## .value_counts()\nAs we've already seen, there are numerical and non-numerical columns in the dataset. Columns like *MSZoning*'s type is *object*, so it could hold any kind of Python object, but since we loaded the data from a CSV file we know that it probably a test attribute. When we looked at the top five rows via *head()* method, we probably noticed that the values in that columns were repetitive, which means that it is probably a *categorical* attribute. We can find out what categories exist and how many groups belongs to each category by using the *value_counts()* method.","d883d38c":"There are 1460 instances in the dataset, which means that it is failt small by Machine Learning standards. There are some columns (e.g. Alley, BsmtCond,...) which have less than 1460 non-null values, meaning that we have missing values in those columns.","39c77e8c":"## .hist()\nAnother quick way to get a feel of the type of data you are dealing with is to plot a histogram for each numerical attribute. A histogram shows the number of instances (on the vertical axis) that have a given value range (on the horizontal axis). You can either plot this one attribute at a time, or you can call the hist() method on the whole dataset, and it will plot a histogram for each numerical attribute.","9d9765f7":"## Load Data and packages","9f8f3989":"## .head()\nLet\u2019s take a look at the top five rows using the DataFrame\u2019s head() method","b15c73c0":"Rows like count, mean, min and max are self-explanatory. Note that the null values are ignored. *std* rows shows the standard deviation and 25,50 and 75% rows show the corresponding percentiles.","bb7c7c77":"## .describe()\nThe *descibe()* method shows a summary of the numerical attributes."}}