{"cell_type":{"129d82f3":"code","f12b25dc":"code","13928b87":"code","63e32cdb":"code","911186d4":"code","293661d0":"code","c769d863":"code","fb0ff432":"code","60781fce":"code","f0083a63":"code","d518fd1b":"code","4309116c":"code","c263753e":"code","6b24b89a":"markdown","55605fda":"markdown","10a88472":"markdown","160847a6":"markdown","0bfcde12":"markdown","6d3f7e25":"markdown","c8a0c0ae":"markdown","cbf91f12":"markdown","eff27dbb":"markdown","c58155b5":"markdown","de7a4116":"markdown"},"source":{"129d82f3":"!pip install xlrd # Dependency for autoviz class\n!pip install autoviz","f12b25dc":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom autoviz.AutoViz_Class import AutoViz_Class # AutoViz\nfrom sklearn.preprocessing import LabelEncoder","13928b87":"TRAIN_PATH = \"\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv\"\nTEST_PATH = \"\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv\"\nSUBMISSION = \"\/kaggle\/input\/tabular-playground-series-feb-2021\/sample_submission.csv\"\n\nAUTO_VIZ_FILENAME = \"\"\nAUTO_VIZ_SEP = \",\"\nAUTO_VIZ_DEP_VAR = \"target\"\nAUTO_VIZ_HEADER = 0\nAUTO_VIZ_VERBOSE = 1\nAUTO_VIZ_LOWESS = False\nAUTO_VIZ_CHAR_FORMAT = \"svg\"\nAUTO_VIZ_MAX_ROWS_ANALYZED = 30000\nAUTO_VIZ_MAX_COLS_ANALYZED = 30","63e32cdb":"train = pd.read_csv(TRAIN_PATH, index_col='id')\ntrain.head()","911186d4":"submission = pd.read_csv(SUBMISSION, index_col='id')","293661d0":"train.columns","c769d863":"test = pd.read_csv(TEST_PATH, index_col='id')","fb0ff432":"test.columns","60781fce":"test.head()","f0083a63":"for c in train.columns:\n    if train[c].dtype == 'object':\n        lbl = LabelEncoder()\n        lbl.fit(list(train[c].values) + list(test[c].values))\n        \n        train[c] = lbl.transform(train[c].values)\n        test[c] = lbl.transform(test[c].values)","d518fd1b":"AV = AutoViz_Class()","4309116c":"%%time\ndft = AV.AutoViz(filename=AUTO_VIZ_FILENAME, \n\t\t\t\t\tsep=AUTO_VIZ_SEP, \n\t\t\t\t\tdepVar=AUTO_VIZ_DEP_VAR, \n\t\t\t\t\tdfte=train, \n\t\t\t\t\theader=AUTO_VIZ_HEADER, \n\t\t\t\t\tverbose=AUTO_VIZ_VERBOSE,\n                    lowess=AUTO_VIZ_LOWESS,\n                    chart_format=AUTO_VIZ_CHAR_FORMAT,\n                    max_rows_analyzed=AUTO_VIZ_MAX_ROWS_ANALYZED,\n                    max_cols_analyzed=AUTO_VIZ_MAX_COLS_ANALYZED)","c263753e":"from sklearn.ensemble import RandomForestRegressor\n\ntarget = train.pop(\"target\")\ntarget = target.values\n\nmodel = RandomForestRegressor(n_estimators=50, n_jobs=-1)\nmodel.fit(train, target)\nsubmission['target'] = model.predict(test)\nsubmission.to_csv('random_forest.csv')","6b24b89a":"## Import Libs","55605fda":"## If you liked this interactive visualization, do not forget to like the notebook. Thanks! :)\n\nYou can check my others notebooks about automatic EDA too:\n\n* https:\/\/www.kaggle.com\/rapela\/tps-02-21-sweet-visualization\n* https:\/\/www.kaggle.com\/rapela\/jane-street-sweet-visualization\n* https:\/\/www.kaggle.com\/rapela\/jane-street-autoviz","10a88472":"## Install autoviz inside kaggle notebook","160847a6":"## Label Encoding \n\n* Encode categorical data","0bfcde12":"## Create autoviz object","6d3f7e25":"Hello, I am sharing this automatic visualization notebook to help data understanding without much effort. \n\n![AutoViz](https:\/\/github.com\/AutoViML\/AutoViz\/raw\/master\/logo.png)\n\n> Automatically Visualize any dataset, any size with a single line of code. AutoViz performs automatic visualization of any dataset with one line. Give any input file (CSV, txt or json) and AutoViz will visualize it.\n\n\n### For more information: [AutoViz](https:\/\/github.com\/AutoViML\/AutoViz)","c8a0c0ae":"## Read train data","cbf91f12":"## Automatic Visualization with AutoViz (Tabular Playground Series - Feb 2021)","eff27dbb":"## Let's see the magic! (Train Data)","c58155b5":"## Parameters","de7a4116":"## Here I will test a model :) "}}