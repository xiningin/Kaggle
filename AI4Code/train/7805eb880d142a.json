{"cell_type":{"832b7732":"code","e795023e":"code","39aef81b":"code","501ed225":"code","e0bd25f5":"code","54de46ea":"code","360dea30":"code","3ebb5238":"code","b03669a5":"code","3e8ec161":"code","e87aa971":"code","84669465":"code","295d5a75":"code","29c944b8":"code","a2fefa1c":"code","edb84895":"code","df9d89f9":"code","817d776b":"code","efce6692":"code","caa15489":"code","c7cb9723":"code","2238bff1":"code","430450e1":"code","d5351938":"code","b14c6d74":"code","691f747d":"code","5a1a7930":"code","bcb75d1f":"code","3295c9fe":"code","ce7d6727":"code","2ec36582":"code","17e939d5":"code","01e4bd30":"code","73a67cae":"code","276ffcfc":"code","e695e544":"code","aab8de22":"code","69924635":"code","6ad56680":"code","75428362":"code","b5e5a65b":"code","15c47fd8":"code","cc3643b3":"code","cef3f39d":"code","5262050c":"code","90b5e6f3":"code","c5ec1fdb":"code","ee51edb7":"code","0042d46a":"code","93d618e6":"code","0c73e6c7":"code","df0666f7":"code","8902eedd":"code","4e909425":"code","869fdd74":"code","cc796165":"code","54516ee6":"code","41bbb812":"code","152c7a3f":"code","adf082c3":"code","241cbf3a":"code","885e3a89":"code","0d133029":"code","3eb1f2b2":"code","b9610633":"code","ec6bffa7":"code","a1a82546":"code","608b9295":"code","c72d5dfe":"code","220b4329":"code","882701e8":"code","e9ccc922":"code","8ccf734d":"code","6c457d0a":"code","d871ea5c":"code","98b7a204":"code","5ed66155":"code","4d832526":"code","ae9c26b1":"code","0b41c767":"code","7a330fb0":"code","136fb3a1":"code","29e7b9d0":"code","9ee37279":"code","38f61fef":"code","56fc9019":"code","320a0912":"markdown","d36dcec0":"markdown","96e3639b":"markdown","93db2cd5":"markdown","ac1ba868":"markdown","b13eb782":"markdown","0413d321":"markdown","817bafe7":"markdown","c71319b0":"markdown","f9c79c57":"markdown","1c447b94":"markdown","abb8d813":"markdown","e1d40f5a":"markdown","d63e9b79":"markdown","ba9ab8b3":"markdown","a1bfe54f":"markdown","1a594f7f":"markdown","bc9d723e":"markdown","ac827d74":"markdown","eff51c60":"markdown","63b9a955":"markdown","1334dac2":"markdown","df93f1cd":"markdown","50bc8fee":"markdown","90e1d755":"markdown","9c023092":"markdown","6f7a4f3b":"markdown","1668cc5c":"markdown","a13d41c6":"markdown","e6c0b00c":"markdown","49ec02b4":"markdown","a816a3fe":"markdown","47148902":"markdown","df9c94ed":"markdown","cf258f45":"markdown","cef2eb8d":"markdown","7820be3a":"markdown","ddfc7eff":"markdown","348bce7a":"markdown","c48b1e97":"markdown","cd864b42":"markdown","536f8596":"markdown","f9df42d4":"markdown","e6e74c65":"markdown","432e4afd":"markdown","d2b1b8d0":"markdown","4e2401da":"markdown","e66da819":"markdown","e6932ea6":"markdown","637b40e0":"markdown","d32fce26":"markdown","9e99b01e":"markdown","b9745d50":"markdown"},"source":{"832b7732":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e795023e":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5)\nimport missingno as msno\n\n# ignore warning\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","39aef81b":"## Data Load - Pandas \uc0ac\uc6a9 \ubc0f shape, head \ubc0f columns methods","501ed225":"df_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')","e0bd25f5":"df_train.describe()","54de46ea":"# train, test \ub370\uc774\ud130 shape\ndf_train.shape, df_test.shape","360dea30":"'''\ncolumn(feature)\ub294 \ucd1d 12\uac1c\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc73c\uba70\n\ud559\uc2b5\uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud560 feature\ub294 11\uac1c\uc774\ub2e4.\n\uc608\uce21\ud574\uc57c \ud560 feature\ub294 survived\uc774\ub2e4.\n'''\n\ncolumns = df_train.columns\ncolumns","3ebb5238":"df_train.head()","b03669a5":"df_test.head()","3e8ec161":"df_train.dtypes # dtype\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4","e87aa971":"df_train.describe()","84669465":"df_test.describe()","295d5a75":"df_train.isnull().sum()","29c944b8":"df_train.shape[0]","a2fefa1c":"df_train.isnull().sum() \/ df_train.shape[0]","edb84895":"# test set\ub3c4 \ud655\uc778\ud574\ubcf4\uc790\ndf_test.isnull().sum() \/ df_test.shape[0]","df9d89f9":"df_train['Survived'].value_counts()","817d776b":"'''\ntarget label\uc758 \ubd84\ud3ec\uac00 \uc81c\ubc95 \uade0\uc77c(balanced)\ud558\ub2e4.\n\ubd88\uade0\uc77c\ud55c \uacbd\uc6b0, \uc608\ub97c \ub4e4\uc5b4 100\uc911 1\uc774 99, 0\uc774 1\uac1c\uc778 \uacbd\uc6b0\uc5d0\ub294 \n\ub9cc\uc57d \ubaa8\ub378\uc774 \ubaa8\ub4e0 \uac83\uc744 1\uc774\ub77c\uace0 \ud574\ub3c4 \uc815\ud655\ub3c4\ub294 99%\uac00 \ub41c\ub2e4.\n0\uc744 \ucc3e\ub294 \ubb38\uc81c\ub77c\uba74 \uc774 \ubaa8\ub378\uc740 \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \uc904 \uc218 \uc5c6\uac8c \ub41c\ub2e4\n\n\uc9c0\uae08 \ubb38\uc81c\uc5d0\uc11c\ub294 \ubb38\uc81c\ub418\uc9c0 \uc54a\uae30\uc5d0 \uacc4\uc18d \uc9c4\ud589\ud55c\ub2e4\n'''","efce6692":"# Pclass \uadf8\ub8f9 \ubcc4 \ub370\uc774\ud130 \uce74\uc6b4\ud2b8\ndf_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).count()\n# Pclassdhk Survived \ub370\uc774\ud130\ub97c \uac00\uc838\uc628 \ub4a4 Pclass\ub85c groupby\ub97c \ud55c\ub2e4\n# class\uc758 \uadf8\ub8f9\ub9c8\ub2e4 \uc22b\uc790\ub97c \uce74\uc6b4\ud305 \ud558\uae30 \uc704\ud574 count()\ud568\uc218\ub97c \uc0ac\uc6a9\ud55c\ub2e4","caa15489":"# Pclass \uadf8\ub8f9 \ubcc4 \uc0dd\uc874\uc790 \uc218 \ud569\ndf_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).sum()","c7cb9723":"# \uc704\uc640 \uac19\uc740 \uc791\uc5c5\uc744 crosstab\ub85c \ud3b8\ud558\uac8c \ud560 \uc218\ub3c4 \uc788\ub2e4\npd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True)","2238bff1":"# mean\uc740 \uc0dd\uc874\ub960\uc744 \uad6c\ud558\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ndf_train[['Pclass', 'Survived']].groupby(['Pclass'],as_index=True).mean()","430450e1":"# \uc774\ub97c \uc2dc\uac01\ud654 \ud574\ubcf4\uaca0\ub2e4\ndf_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).mean().plot.bar()","d5351938":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\ndf_train[['Sex','Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('sex: Survived vs Dead')\nplt.show()","b14c6d74":"# sns.factorplot('Pclass', 'Survived', hue='Sex', data=df_train,\n#                size=6, aspect=1.5)\n\nsns.factorplot('Pclass', 'Survived', hue='Sex', data=df_train, \n               size=6, aspect=1.5)","691f747d":"# print('Oldest : {:.1f} Years'.format(df_train['Age'].max()))\n# print('Youngest : {:.1f} Years'.format(df_train['Age'].min()))\n# print('Average : {:.1f} Years'.format(df_train['Age'].mean()))\n\n\nprint('Oldest : {:.1f} Years'.format(df_train['Age'].max()))\nprint('Youngest : {:.1f} Years'.format(df_train['Age'].min()))\nprint('Average : {:.1f} Years'.format(df_train['Age'].mean()))","5a1a7930":"fig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[df_train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","bcb75d1f":"# Age distribution withing classes\nplt.figure(figsize=(8, 6))\ndf_train['Age'][df_train['Pclass'] == 1].plot(kind='kde')\ndf_train['Age'][df_train['Pclass'] == 2].plot(kind='kde')\ndf_train['Age'][df_train['Pclass'] == 3].plot(kind='kde')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class', '2nd Class', '3rd Class'])","3295c9fe":"df_train['Embarked'].unique()\n","ce7d6727":"f, ax = plt.subplots(1, 1, figsize=(7, 7))\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax)","2ec36582":"f,ax=plt.subplots(2, 2, figsize=(20,15))\nsns.countplot('Embarked', data=df_train, ax=ax[0,0])\nax[0,0].set_title('(1) No. Of Passengers Boarded')\nsns.countplot('Embarked', hue='Sex', data=df_train, ax=ax[0,1])\nax[0,1].set_title('(2) Male-Female Split for Embarked')\nsns.countplot('Embarked', hue='Survived', data=df_train, ax=ax[1,0])\nax[1,0].set_title('(3) Embarked vs Survived')\nsns.countplot('Embarked', hue='Pclass', data=df_train, ax=ax[1,1])\nax[1,1].set_title('(4) Embarked vs Pclass')\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()\n","17e939d5":"df_train['FamilySize'] = df_train['SibSp'] + df_train['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud569\ub2c8\ub2e4\ndf_test['FamilySize'] = df_test['SibSp'] + df_test['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud569\ub2c8\ub2e4","01e4bd30":"print(\"Maximum size of Family: \", df_train['FamilySize'].max())\nprint(\"Minimum size of Family: \", df_train['FamilySize'].min())\n","73a67cae":"f,ax=plt.subplots(1, 3, figsize=(40,10))\nsns.countplot('FamilySize', data=df_train, ax=ax[0])\nax[0].set_title('(1) No. Of Passengers Boarded', y=1.02)\n\nsns.countplot('FamilySize', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('(2) Survived countplot depending on FamilySize',  y=1.02)\n\ndf_train[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived rate depending on FamilySize',  y=1.02)\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","276ffcfc":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness : {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","e695e544":"df_test.isnull().sum() \/ df_test.shape[0]\n#df_test.isnull().sum() \/ len(df_test)","aab8de22":"# \ud2b9\uc774\ud558\uae30\ub3c4 train set \ub9d0\uace0 test set\uc5d0 Fare \ud53c\uccd0\uc5d0 \ub110 \uac12\uc774 \ud558\ub098 \uc874\uc7ac\ud558\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.\n# \uadf8\ub798\uc11c \ud3c9\uade0 \uac12\uc73c\ub85c \ud574\ub2f9 \ub110\uac12\uc744 \ub123\uc5b4\uc90d\ub2c8\ub2e4.\ndf_test.loc[df_test.Fare.isnull(), 'Fare'] = df_test['Fare'].mean() # testset \uc5d0 \uc788\ub294 nan value \ub97c \ud3c9\uade0\uac12\uc73c\ub85c \uce58\ud658\ud569\ub2c8\ub2e4.","69924635":"df_train['Fare'] = df_train['Fare'].map(lambda i: np.log(i) if i > 0 else 0)\ndf_test['Fare'] = df_test['Fare'].map(lambda i: np.log(i) if i > 0 else 0)","6ad56680":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness : {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","75428362":"df_train[\"Cabin\"].isnull().sum() \/ df_train.shape[0]","b5e5a65b":"df_train.head()[[\"PassengerId\", \"Cabin\"]]\n","15c47fd8":"df_train['Ticket'].value_counts()\n","cc3643b3":"df_train[\"Age\"].isnull().sum()\n","cef3f39d":"df_train['Initial']= df_train.Name.str.extract('([A-Za-z]+)\\.') #lets extract the Salutations\ndf_test['Initial']= df_test.Name.str.extract('([A-Za-z]+)\\.') #lets extract the Salutations","5262050c":"pd.crosstab(df_train['Initial'], df_train['Sex']).T.style.background_gradient(cmap='summer_r') #Checking the Initials with the Sex","90b5e6f3":"df_train['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)\n\ndf_test['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)","c5ec1fdb":"df_train.groupby('Initial').mean()\n","ee51edb7":"df_train.groupby('Initial')['Survived'].mean().plot.bar()","0042d46a":"df_train.groupby('Initial').mean()\n","93d618e6":"df_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mr'),'Age'] = 33\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mrs'),'Age'] = 36\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Master'),'Age'] = 5\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Miss'),'Age'] = 22\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Other'),'Age'] = 46\n\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Mr'),'Age'] = 33\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Mrs'),'Age'] = 36\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Master'),'Age'] = 5\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Miss'),'Age'] = 22\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Other'),'Age'] = 46","0c73e6c7":"df_train.isnull().sum()[df_train.isnull().sum() > 0]","df0666f7":"df_test.isnull().sum()[df_test.isnull().sum() > 0]","8902eedd":"print('Embarked has ', sum(df_train['Embarked'].isnull()), ' Null values')","4e909425":"df_train['Embarked'].fillna('S', inplace=True)\n","869fdd74":"df_train.isnull().sum()[df_train.isnull().sum() > 0]","cc796165":"def category_age(x):\n    if x < 10:\n        return 0\n    elif x < 20:\n        return 1\n    elif x < 30:\n        return 2\n    elif x < 40:\n        return 3\n    elif x < 50:\n        return 4\n    elif x < 60:\n        return 5\n    elif x < 70:\n        return 6\n    else:\n        return 7    \n    \ndf_train['Age_cat'] = df_train['Age'].apply(category_age)\ndf_test['Age_cat'] = df_test['Age'].apply(category_age)","54516ee6":"df_train.groupby(['Age_cat'])['PassengerId'].count()","41bbb812":"df_train['Initial'] = df_train['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})\ndf_test['Initial'] = df_test['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})","152c7a3f":"df_train['Embarked'] = df_train['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","adf082c3":"df_train['Sex'] = df_train['Sex'].map({'female': 0, 'male': 1})\ndf_test['Sex'] = df_test['Sex'].map({'female': 0, 'male': 1})","241cbf3a":"heatmap_data = df_train[['Survived', 'Pclass', 'Sex', 'Fare', 'Embarked', 'FamilySize', 'Initial', 'Age_cat', 'Age']] \n\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(14, 12))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={\"size\": 16})\n\ndel heatmap_data","885e3a89":"df_train = pd.get_dummies(df_train, columns=['Initial'], prefix='Initial')\ndf_test = pd.get_dummies(df_test, columns=['Initial'], prefix='Initial')","0d133029":"df_train.head()\n","3eb1f2b2":"df_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')","b9610633":"df_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\ndf_test.drop(['PassengerId', 'Name',  'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\n","ec6bffa7":"df_train.head()\n","a1a82546":"df_train.dtypes\n","608b9295":"df_test.head()\n","c72d5dfe":"df_test.dtypes\n","220b4329":"#import all the required ML packages\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics # \ubaa8\ub378 \ud3c9\uac00\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4\nfrom sklearn.model_selection import train_test_split # training set\uc744 \uc27d\uac8c \ub098\ub220\uc8fc\ub294\ud568\uc218\uc774\ub2e4","882701e8":"X_train = df_train.drop('Survived', axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","e9ccc922":"X_train.shape, X_test.shape","8ccf734d":"X_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size=0.2, random_state=2018)\ny_tr.shape, y_vld.shape","6c457d0a":"from sklearn.tree import DecisionTreeClassifier\n\nclf = DecisionTreeClassifier(random_state=201) # clf(classifier)\ub97c DecisionTree\ub85c \uc124\uc815\ud574\uc900\ub2e4\nclf.fit(X_tr, y_tr)\nclf_prediction = clf.predict(X_vld)\n\nfrom sklearn.metrics import accuracy_score, f1_score, classification_report, confusion_matrix","d871ea5c":"print(\"Accuracy is \", accuracy_score(clf_prediction, y_vld))","98b7a204":"print(classification_report(clf_prediction, y_vld))","5ed66155":"confusion_matrix(clf_prediction, y_vld)\n","4d832526":"from sklearn.model_selection import GridSearchCV\n\nparameters = {'min_samples_split': range(5,300,20),'max_depth': range(1,20,2)}\nclf_tree=DecisionTreeClassifier()\nclf=GridSearchCV(clf_tree,parameters)\nclf","ae9c26b1":"clf.fit(X_tr,y_tr)\nclf_prediction = clf.predict(X_vld)","0b41c767":"print(\"Accuracy is \", accuracy_score(clf_prediction, y_vld))\n","7a330fb0":"print(classification_report(clf_prediction, y_vld))","136fb3a1":"confusion_matrix(clf_prediction, y_vld)\n","29e7b9d0":"submission = pd.read_csv('..\/input\/sample_submission.csv')\nsubmission.head()","9ee37279":"submission.shape","38f61fef":"prediction = clf.predict(X_test)\nsubmission['Survived']= prediction","56fc9019":"submission.to_csv('.\/YJ_fin_submission.csv', index=False)","320a0912":"# 4. \ubaa8\ub378 \uac1c\ubc1c \ubc0f \ud559\uc2b5(\ub4dc\ub514\uc5b4!)","d36dcec0":"\uc5ec\uc790\uac00 \uc0dd\uc874\ud560 \ud655\ub960\uc774 \ub192\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4\nPclass\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, Sex\ub3c4 \uc608\uce21 \ubaa8\ub378\uc5d0 \uc4f0\uc77c \uc911\uc694\ud55c feature\uc784\uc744 \uc54c \uc218 \uc788\ub2e4","96e3639b":"## 3.1 Fill Null\n### 3.1.1 Fill Null in Age using title\u00b6\n","93db2cd5":"\uc774\uc81c \uac01 feature \uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ud55c\ubc88 \uc54c\uc544\ubcf4\uc790.\n\n\ub450 \ubcc0\uc218\uac04\uc758 Pearson correlation \uc744 \uad6c\ud558\uba74 (-1, 1) \uc0ac\uc774\uc758 \uac12\uc744 \uc5bb\uc744 \uc218 \uc788\ub2e4.\n\n-1\ub85c \uac08\uc218\ub85d \uc74c\uc758 \uc0c1\uad00\uad00\uacc4,\n\n1\ub85c \uac08\uc218\ub85d \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc758\ubbf8\ud558\uba70\n\n0\uc740 \uc0c1\uad00\uad00\uacc4\uac00 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4.\n\n\ub530\ub85c \uc218\uc2dd\uc740 \uc801\uc9c0 \uc54a\ub3c4\ub85d \ud558\uaca0\ub2e4. \uac80\uc0c9\ub9cc \ud558\uc154\ub3c4 \uc218\uc2dd\uc740 \ub9ce\uc774 \ub098\uc624\ub2c8\n\n\uad81\uae08\ud558\uc2dc\uba74 \uacf5\ubd80\ud574\ubcf4\uc2dc\uac78 \ucd94\ucc9c\ud55c\ub2e4!","ac1ba868":"## 2.4 Age","b13eb782":"Age \ub294 \ud604\uc7ac continuous feature \uc774\ub2e4. \uc774\ub300\ub85c \uc368\ub3c4 \ubaa8\ub378\uc744 \uc138\uc6b8 \uc218 \uc788\uc9c0\ub9cc, Age \ub97c \uba87\uac1c\uc758 group \uc73c\ub85c \ub098\ub204\uc5b4 category \ud654 \uc2dc\ucf1c\uc904 \uc218 \ub3c4 \uc788\ub2e4.\n\ncontinuous \ub97c categorical \ub85c \ubc14\uafb8\uba74 \uc790\uce6b information loss \uac00 \uc0dd\uae38 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4\ub9cc, \ubcf8 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc18c\uac1c\ud558\ub294 \uac83\uc774 \ubaa9\uc801\uc774\ubbc0\ub85c \uc9c4\ud589\ud558\ub3c4\ub85d \ud558\uaca0\ub2e4.\n\n\ubc29\ubc95\uc740 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\ub2e4.\n\ndataframe \uc758 indexing \ubc29\ubc95\uc778 loc \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c1\uc811\ud574\uc904 \uc218 \uc788\uace0,\n\n\uc544\ub2c8\uba74 apply \ub97c \uc0ac\uc6a9\ud574 \ud568\uc218\ub97c \ub123\uc5b4\uc904 \uc218 \uc788\ub2e4.\n\n\uc5ec\uae30\uc5d0\uc120 apply\ub97c \uc0ac\uc6a9\ud574 \ubcf4\ub3c4\ub85d \ud558\uaca0\ub2e4.\n","0413d321":"* \ubaa8\ub378\uc774 \ud559\uc2b5\ud558\uc9c0 \uc54a\uc558\ub358(\ubcf4\uc9c0 \ubabb\ud588\ub358) \ud14c\uc2a4\ud2b8\uc14b\uc744 \ubaa8\ub378\uc5d0 \uc8fc\uc5b4\uc11c \uc0dd\uc874 \uc5ec\ubd80\ub97c \uc608\uce21\ud574\ubcf4\uc790\n* \uacb0\uacfc\ub294 \uc2e4\uc81c\ub85c submission(\uc81c\ucd9c\uc6a9) \uc774\ubbc0\ub85c leaderboard\uc5d0\uc11c \ud655\uc778 \ud560 \uc218 \uc788\ub2e4\n* \uce90\uae00\uc5d0\uc11c \uc900 \ud30c\uc77c, gender_submission.csv \ud30c\uc77c\uc744 \uc77d\uc5b4\uc11c \uc81c\ucd9c \uc900\ube44\ub97c \ud574\ubcf4\uc790!","817bafe7":"Figure (1) - \uac00\uc871\ud06c\uae30\uac00 1~11\uae4c\uc9c0 \uc788\uc74c\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84 1\uba85\uc774\uace0 \uadf8 \ub2e4\uc74c\uc73c\ub85c 2, 3, 4\uba85\uc785\ub2c8\ub2e4.\n\nFigure (2), (3) - \uac00\uc871 \ud06c\uae30\uc5d0 \ub530\ub978 \uc0dd\uc874\ube44\uad50\uc785\ub2c8\ub2e4. \uac00\uc871\uc774 4\uba85\uc778 \uacbd\uc6b0\uac00 \uac00\uc7a5 \uc0dd\uc874\ud655\ub960\uc774 \ub192\uc2b5\ub2c8\ub2e4,\n\n\uac00\uc871\uc218\uac00 \ub9ce\uc544\uc9c8\uc218\ub85d, (5, 6, 7, 8, 11) \uc0dd\uc874\ud655\ub960\uc774 \ub0ae\uc544\uc9c0\ub124\uc694.\n\n\uac00\uc871\uc218\uac00 \ub108\ubb34 \uc791\uc544\ub3c4(1), \ub108\ubb34 \ucee4\ub3c4(5, 6, 8, 11) \uc0dd\uc874 \ud655\ub960\uc774 \uc791\ub124\uc694. 3~4\uba85 \uc120\uc5d0\uc11c \uc0dd\uc874\ud655\ub960\uc774 \ub192\uc740 \uac78 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","c71319b0":"## 3.2 Change Age(continuous to categorical)","f9c79c57":"\uc218\uce58\ud654\uc2dc\ud0a8 \uce74\ud14c\uace0\ub9ac \ub370\uc774\ud130\ub97c \uadf8\ub300\ub85c \ub123\uc5b4\ub3c4 \ub418\uc9c0\ub9cc,\n\n\ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc774\uae30 \uc704\ud574 one-hot encoding\uc744 \ud574\uc904 \uc218 \uc788\ub2e4.\n\n\uc218\uce58\ud654\ub294 \uac04\ub2e8\ud788 Master == 0, Miss == 1, Mr == 2, Mrs == 3, Other == 4 \ub85c \ub9e4\ud551\ud574\uc8fc\ub294 \uac83\uc744 \ub9d0\ud55c\ub2e4.\n\nOne-hot encoding \uc740 \uc704 \uce74\ud14c\uace0\ub9ac\ub97c \uc544\ub798\uc640 \uac19\uc774 (0, 1) \ub85c \uc774\ub8e8\uc5b4\uc9c4 5\ucc28\uc6d0\uc758 \ubca1\ud130\ub85c \ub098\ud0c0\ub0b4\ub294 \uac83\uc744 \ub9d0\ud55c\ub2e4.","1c447b94":"### Pruning\uc744 \ud1b5\ud574 \uc131\ub2a5\uc744 \ub192\uc5ec\ubcf4\uc790!","abb8d813":"## 3.4 One-hot encoding on Initial and Embarked","e1d40f5a":"## 2.9 Ticket","d63e9b79":"## 1-2 Target Label, Survived \ud655\uc778\n* target label\uc774 \uc5b4\ub5a4 distribution\uc744 \uac00\uc9c0\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud574 \ubd10\uc57c\ud55c\ub2e4\n* \uc9c0\uae08 \uac19\uc740 binary classification \ubb38\uc81c\uc758 \uacbd\uc6b0\n0\uacfc 1\uc758 \ubd84\ud3ec\uac00 \uc5b4\ub5a0\ub0d0\uc5d0 \ub530\ub77c \ubaa8\ub378\uc758 \ud3c9\uac00 \ubc29\ubc95\uc774 \ub2ec\ub77c\uc9c8 \uc218 \uc788\ub2e4.","ba9ab8b3":"## 3.5 Drop columns\n\ub9c8\uc9c0\ub9c9\uc73c\ub85c \ud544\uc694\uc5c6\ub294 \ud53c\uccd0\ub97c \uc5c6\uc560\ubc84\ub9b4 \ucc28\ub840\ub2e4!!","a1bfe54f":"#  1-1 Null check","1a594f7f":"## 2.6 Family - SibSp(\ud615\uc81c \uc790\ub9e4) + Parch(\ubd80\ubaa8, \uc790\ub140)","bc9d723e":"\uc774 feature \ub294 NaN \uc740 \uc5c6\ub2e4. \uc77c\ub2e8 string data \uc774\ubbc0\ub85c \uc6b0\ub9ac\uac00 \uc5b4\ub5a4 \uc791\uc5c5\ub4e4\uc744 \ud574\uc8fc\uc5b4\uc57c \uc2e4\uc81c \ubaa8\ub378\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c\ub41c\ub2e4.\n\uc774\ub97c \uc704\ud574\uc120 \uc0ac\uc2e4 \uc544\uc774\ub514\uc5b4\uac00 \ud544\uc694\ud558\ub2e4","ac827d74":"\uc9c0\uae08 \ud0c0\uc774\ud0c0\ub2c9 \ubb38\uc81c\ub294 target class(survived)\uac00 \uc788\uc73c\uba70, target class \ub294 0, 1\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc73c\ubbc0\ub85c(binary)\n\nbinary classfication \ubb38\uc81c\uc774\ub2e4.\n\n\uc6b0\ub9ac\uac00 \uc9c0\uae08 \uac00\uc9c0\uace0 \uc788\ub294 train set \uc758 survived\ub97c \uc81c\uc678\ud55c input \uc744 \uac00\uc9c0\uace0\n\n\ubaa8\ub378\uc744 \ucd5c\uc801\ud654\uc2dc\ucf1c\uc11c \uac01 \uc0d8\ud50c(\ud0d1\uc2b9\uac1d)\uc758 \uc0dd\uc874\uc720\ubb34\ub97c \ud310\ub2e8\ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uc5b4 \ub0bc \uac83\uc774\ub2e4.\n\n\uadf8 \ud6c4 \ubaa8\ub378\uc774 \ud559\uc2b5\ud558\uc9c0 \uc54a\uc558\ub358 test set \uc744 input \uc73c\ub85c \uc8fc\uc5b4\uc11c test set \uc758 \uac01 \uc0d8\ud50c(\ud0d1\uc2b9\uac1d)\uc758 \uc0dd\uc874 \uc720\ubb34\ub97c \uc608\uce21\ud574\ubcf8\ub2e4.\n\ntrain dataset\uc5d0\ub294 target class(survived)\uac00 \uc788\ub2e4.\ntrain set\uc5d0\uc11c survived\ub97c \uc81c\uc678\ud55c input\uc744 \uac00\uc9c0\uace0 \ubaa8\ub378\uc744 \ucd5c\uc801\ud654 \uc2dc\ucf1c\uc11c \ud0d1\uc2b9\uac1d\uc758 \uc0dd\uc874 \uc720\ubb34\ub97c \ud310\ub2e8\ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4e4 \uac83\uc774\ub2e4\n\ud559\uc2b5\uc2dc\ud0a8 \ubaa8\ub378\uc744 test set\uc5d0 \ud559\uc2b5\uc2dc\ucf1c\uc11c test set\uc758 \ud0d1\uc2b9\uac1d\uc758 \uc0dd\uc874 \uc720\ubb34\ub97c \uc608\uce21\ud574\ubcf8\ub2e4","eff51c60":"## \uc6b0\ub9ac\uac00 \ub2e4\ub8e8\ub294 \ubb38\uc81c\uc5d0\uc11c feature\ub294 Pclass, Age, Sibsp, Parch, Fare\uc774\uba70 \uc608\uce21\ud558\ub824\ub294 target label\uc740 Survived\uc785\ub2c8\ub2e4.\n\n* survival - \uc0dd\uc874\uc720\ubb34, target \uac12. (0 = \uc0ac\ub9dd, 1 = \uc0dd\uc874)\n\n* pclass - \ud2f0\ucf13 \ud074\ub798\uc2a4. (1 = 1st, 2 = 2nd, 3 = 3rd)\n\n* sex - \uc131\ubcc4\n\n* Age - \ub098\uc774(\uc138)\n\n* sibsp - \ud568\uaed8 \ud0d1\uc2b9\ud55c \ud615\uc81c\uc790\ub9e4, \ubc30\uc6b0\uc790 \uc218 \ucd1d\ud569\n\n* parch - \ud568\uaed8 \ud0d1\uc2b9\ud55c \ubd80\ubaa8, \uc790\ub140 \uc218 \ucd1d\ud569\n\n* ticket - \ud2f0\ucf13 \ub118\ubc84\n\n* fare - \ud0d1\uc2b9 \uc694\uae08\n\n* cabin - \uac1d\uc2e4 \ub118\ubc84\n\n* embarked - \ud0d1\uc2b9 \ud56d\uad6c\n\n","63b9a955":"## 2. \ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d (EDA, Exploratory Data Analysis)","1334dac2":"\uc6b0\ub9ac\ub294 \uc0dd\uc874\uc5d0 Pclass \uac00 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\uace0 \uc0dd\uac01\ud574\ubcfc \uc218 \uc788\uc73c\uba70,\n\n\ub098\uc911\uc5d0 \ubaa8\ub378\uc744 \uc138\uc6b8 \ub54c \uc774 feature \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc744 \uac83\uc774\ub77c \ud310\ub2e8\ud560 \uc218 \uc788\ub2e4.","df93f1cd":"## Count\uac00 \ub2e4\ub978 feature\uac00 \uc874\uc7ac \ud55c\ub2e4\ub294 \uac83\uc740 Null\uac12\uc774 \uc874\uc7ac\ud55c \ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4\n## Null\uac12\uc758 \uc720\ubb34\ub97c \ud655\uc778\ud574\ubcf4\uc790!(insull, sum)","50bc8fee":"## dtypes\uc640 describe\uc0ac\uc6a9","90e1d755":"* test_set\uc5d0 \ub300\ud558\uc5ec \uc608\uce21\uc744 \ud558\uace0, \uacb0\uacfc\ub97c csv\ud30c\uc77c\ub85c \uc800\uc7a5\ud574 \ubcf4\uaca0\ub2e4","9c023092":"## 2.2 sex","6f7a4f3b":"* Figure(1) - \uc804\uccb4\uc801\uc73c\ub85c \ubd24\uc744 \ub54c, S \uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc0ac\ub78c\uc774 \ud0d1\uc2b9\ud588\uc2b5\ub2c8\ub2e4.\n\n* Figure(2) - C\uc640 Q \ub294 \ub0a8\ub140\uc758 \ube44\uc728\uc774 \ube44\uc2b7\ud558\uace0, S\ub294 \ub0a8\uc790\uac00 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.\n\n* Figure(3) - \uc0dd\uc874\ud655\ub960\uc774 S \uacbd\uc6b0 \ub9ce\uc774 \ub0ae\uc740 \uac78 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc774\uc804 \uadf8\ub798\ud504\uc5d0\uc11c \ubd24\uc5c8\uc2b5\ub2c8\ub2e4)\n\n* Figure(4) - Class \ub85c split \ud574\uc11c \ubcf4\ub2c8, C\uac00 \uc0dd\uc874\ud655\ub960\uc774 \ub192\uc740\uac74 \ud074\ub798\uc2a4\uac00 \ub192\uc740 \uc0ac\ub78c\uc774 \ub9ce\uc774 \ud0c0\uc11c \uadf8\ub807\uc2b5\ub2c8\ub2e4. S\ub294 3rd class \uac00 \ub9ce\uc544\uc11c \uc0dd\uc874\ud655\ub960\uc774 \ub0ae\uac8c \ub098\uc635\ub2c8\ub2e4.","1668cc5c":"\ud0d1\uc2b9\ud55c \uacf3\uc5d0 \ub530\ub77c \uc0dd\uc874\ub960\uc758 \ucc28\uc774\uac00 \ub9ce\uc544 \ubcf4\uc774\uc9c0\ub294 \uc54a\ub294\ub2e4\n\uadf8\ub798\ub3c4 \ucc28\uc774\uac00 \uc870\uae08 \uc788\uc73c\ub2c8 \ud53c\ucc98\ub85c \uc0ac\uc6a9\ud55c\ub2e4\n\ub2e4\ub978 \ud53c\ucc98\uc640\uc758 \uc0c1\uad00\uad00\uacc4\ub3c4 \ud55c\ubc88 \uc54c\uc544\ubcf4\uc790","a13d41c6":"Embarked \ub294 Null value \uac00 2\uac1c\uc774\uace0, S \uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud0d1\uc2b9\uac1d\uc774 \uc788\uc5c8\uc73c\ubbc0\ub85c, \uac04\ub2e8\ud558\uac8c Null \uc744 S\ub85c \ucc44\uc6b0\uaca0\ub2e4.\n\ndataframe \uc758 fillna method \ub97c \uc774\uc6a9\ud558\uba74 \uc27d\uac8c \ucc44\uc6b8 \uc218 \uc788\ub2e4.\n\n\uc5ec\uae30\uc11c inplace=True \ub85c \ud558\uba74 df_train \uc5d0 fillna \ub97c \uc2e4\uc81c\ub85c \uc801\uc6a9\ud558\uac8c \ub41c\ub2e4","e6c0b00c":"## train.csv\n* \uc608\uce21 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ud559\uc2b5\uc14b\uc785\ub2c8\ub2e4\n* \uac01 \ud0d1\uc2b5\uac1d\uc758 \uc2e0\uc0c1\uc815\ubcf4\uc640 ground truth(\uc0dd\uc874\uc720\ubb34)\uac00 \uc8fc\uc5b4\uc9c0\uba70,\n* \uc2e0\uc0c1\uc815\ubcf4 \ubc0f \ud30c\uc0dd\ubcc0\uc218\ub97c \ud1a0\ub300\ub85c \uc0dd\uc874\uc720\ubb34\ub97c \uc608\uce21\ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4ed\ub2c8\ub2e4.\n\n## test.csv\n* \ud559\uc2b5\uc14b\uc73c\ub85c \ub9cc\ub4e0 \ubaa8\ub378\uc744 \uac00\uc9c0\uace0 \uc608\uce21\ud560 \ud0d1\uc2b9\uac1d \uc815\ubcf4\uac00 \ub2f4\uae34 \ud14c\uc2a4\ud2b8\uc14b\uc785\ub2c8\ub2e4","49ec02b4":"\uc774\uc81c \ubcf8\uaca9\uc801\uc73c\ub85c Null \uc744 \ucc44\uc6b8 \uac83\ub2e4. null data \ub97c \ucc44\uc6b0\ub294 \ubc29\ubc95\uc740 \uc815\ub9d0 \ub9ce\uc774 \uc874\uc7ac\ud55c\ub2e4.\nstatistics \ub97c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95\ub3c4 \uc788\uace0, null data \uac00 \uc5c6\ub294 \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uc0c8\ub85c\uc6b4 \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc744 \ub9cc\ub4e4\uc5b4 \uc608\uce21\ud574\uc11c \ucc44\uc6cc\ub123\ub294 \ubc29\uc2dd\ub3c4 \uc788\ub2e4\n\uc5ec\uae30\uc11c\ub294 statistics\ub97c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud560 \uac83\uc774\ub2e4\nstatistics\ub294 train data\uc758 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4","a816a3fe":"## 4.2 Model generation and prediction\n","47148902":"## 2.3 Both Sex and Pclass","df9c94ed":"## 4.1 Preparation - Split dataset into train, valid(dev), test set","cf258f45":"\ud574\ub2f9 \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \ubcf4\uc2dc\uba74 \uc5b4\ub9b0 \ub098\uc774(\uc57d 15\uc138 \ubbf8\ub9cc) \uad6c\uac04\uc5d0\uc11c\n\n\uc0dd\uc874\ub960\uc774 \uc0c1\ub300\uc801\uc73c\ub85c \ub192\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4","cef2eb8d":"\ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c female \uc774 \uc0b4 \ud655\ub960\uc774 male \ubcf4\ub2e4 \ub192\uc740 \uac78 \uc54c \uc218 \uc788\ub2e4.\n\n","7820be3a":"# Decision Tree\ub85c \uc608\uce21\uc744 \ud574\ubcf4\uc790!","ddfc7eff":"Age \uc5d0\ub294 null data\uac00 177\uac1c\ub098 \uc788\ub2e4. \uc774\ub97c \ucc44\uc6b8 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc544\uc774\ub514\uc5b4\uac00 \uc788\uc744 \uac83\uc778\ub370,\n\n\uc5ec\uae30\uc11c \uc6b0\ub9ac\ub294 title + statistics \ub97c \uc0ac\uc6a9\ud574 \ubcf4\uaca0\ub2e4.\n\n\uc601\uc5b4\uc5d0\uc11c\ub294 Miss, Mrr, Mrs \uac19\uc740 title\uc774 \uc874\uc7ac\ud55c\ub2e4.\n\n\uac01 \ud0d1\uc2b9\uac1d\uc758 \uc774\ub984\uc5d0\ub294 \uaf2d \uc774\ub7f0 title \uc774 \ub4e4\uc5b4\uac00\uac8c \ub418\ub294\ub370 \uc774\ub97c \uc0ac\uc6a9\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\npandas series \uc5d0\ub294 data \ub97c string \uc73c\ub85c \ubc14\uafd4\uc8fc\ub294 str method,\n\n\uac70\uae30\uc5d0 \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \uc801\uc6a9\ud558\uac8c \ud574\uc8fc\ub294 extract method\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec title \uc744 \uc27d\uac8c \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. title\uc744 Initial column\uc5d0 \uc800\uc7a5\ud558\uaca0\uc2b5\ub2c8\ub2e4","348bce7a":"\uac00\uc7a5 \uba3c\uc800! \ud559\uc2b5\uc5d0 \uc4f0\uc77c \ub370\uc774\ud130\uc640 target label(Survived)\ub97c \ubd84\ub9ac\ud55c\ub2e4\ndrop\uc744 \uc0ac\uc6a9\ud574 \uac04\ub2e8\ud788 \ud560 \uc218 \uc788\ub2e4","c48b1e97":"## Features\n* survival - \uc0dd\uc874\uc720\ubb34, target \uac12. (0 = \uc0ac\ub9dd, 1 = \uc0dd\uc874)\n* pclass - \ud2f0\ucf13 \ud074\ub798\uc2a4. (1 = 1st, 2 = 2nd, 3 = 3rd)\n* sex - \uc131\ubcc4\n* Age - \ub098\uc774(\uc138)\n* sibsp- \ud568\uaed8 \ud0d1\uc2b9\ud55c \ud615\uc81c\uc790\ub9e4, \ubc30\uc6b0\uc790 \uc218 \ucd1d\ud569\n* parch - \ud568\uaed8 \ud0d1\uc2b9\ud55c \ubd80\ubaa8, \uc790\ub140 \uc218 \ucd1d\ud569\n* ticket - \ud2f0\ucf13 \ub118\ubc84\n* fare - \ud0d1\uc2b9 \uc694\uae08\n* cabin - \uac1d\uc2e4 \ub118\ubc84\n* embarked - \ud0d1\uc2b9 \ud56d\uad6c","cd864b42":"\ud604\uc7ac Initial \uc740 Mr, Mrs, Miss, Master, Other \ucd1d 5\uac1c\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub2e4.\n\n\uc774\ub7f0 \uce74\ud14c\uace0\ub9ac\ub85c \ud45c\ud604\ub418\uc5b4\uc838 \uc788\ub294 \ub370\uc774\ud130\ub97c \ubaa8\ub378\uc5d0 \uc778\ud48b\uc73c\ub85c \ub123\uc5b4\uc904 \ub54c\n\n\uc6b0\ub9ac\uac00 \ud574\uc57c\ud560 \uac83\uc740 \uba3c\uc800 \ucef4\ud4e8\ud130\uac00 \uc778\uc2dd\ud560 \uc218 \uc788\ub3c4\ub85d \uc218\uce58\ud654 \uc2dc\ucf1c\uc57c \ud55c\ub2e4..\n\nmap method \ub97c \uac00\uc9c0\uace0 \uac04\ub2e8\ud788 \ud560 \uc218 \uc788\ub2e4.\n\n\uc0ac\uc804 \uc21c\uc11c\ub300\ub85c \uc815\ub9ac\ud558\uc5ec mapping \ud558\uaca0\ub2e4","536f8596":"## \ub370\uc774\ud130 \ubd84\uc11d\uc5d0 \ud544\uc694\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c Import\ud55c\ub2e4","f9df42d4":"* train set\uc740  Age \ud53c\ucc98\uc5d0 \uc57d 20%\uc758 \uacb0\uce21\uce58\uac00 \uc874\uc7ac\ud55c\ub2e4.\n\ub610\ud55c Cabin \ud53c\uccd0\uc5d0 \uc57d 80%\uc758 \uacb0\uce21\uce58\uac00 \uc874\uc7ac\ud55c\ub2e4","e6e74c65":"## 3.1.2 Filll Null in Embarked","432e4afd":"## 2.8 Cabin\n\uc774 feature \ub294 NaN \uc774 \ub300\ub7b5 80% \uc774\ubbc0\ub85c, \uc0dd\uc874\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc911\uc694\ud55c \uc815\ubcf4\ub97c \uc5bb\uc5b4\ub0b4\uae30\uac00 \uc27d\uc9c0\ub294 \uc54a\ub2e4.\n\n\ub530\ub77c\uc11c \uc6b0\ub9ac\uac00 \uc138\uc6b0\ub824\ub294 \ubaa8\ub378\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\uc9c0 \uc54a\ub3c4\ub85d \ud558\uaca0\ub2e4.\n\n","d2b1b8d0":"## 2.7 Fare","4e2401da":"## 3.3 Change Initial, Embarked and Sex (string to numerical)","e66da819":"* test set\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\ub85c Age \ud53c\uccd0\uc5d0 \uc57d 20%\uc758 \uacb0\uce21\uce58\uac00 \uc874\uc7ac\ud55c\ub2e4.\nCabin \ud53c\uccd0\ub3c4 \uc57d 80%\uc758 \uacb0\uce21\uce58\uac00 \uc874\uc7ac\ud55c\ub2e4","e6932ea6":"\ub05d!","637b40e0":"## Embarked\nEmbarked\ub294 \ud0d1\uc2b9\ud55c \ud56d\uad6c\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\n","d32fce26":"\uc6b0\ub9ac\uac00 EDA\uc5d0\uc11c \uc0b4\ud3b4\ubd24\ub4ef\uc774,\n\nSex \uc640 Pclass \uac00 Survived \uc5d0 \uc0c1\uad00\uad00\uacc4\uac00 \uc5b4\ub290 \uc815\ub3c4 \uc788\uc74c\uc744 \ubcfc \uc218 \uc788\ub2e4.\n\n\uc0dd\uac01\ubcf4\ub2e4 fare \uc640 Embarked \ub3c4 \uc0c1\uad00\uad00\uacc4\uac00 \uc788\uc74c\uc744 \ubcfc \uc218 \uc788\ub2e4.\n\n\ub610\ud55c \uc6b0\ub9ac\uac00 \uc5ec\uae30\uc11c \uc5bb\uc744 \uc218 \uc788\ub294 \uc815\ubcf4\ub294\n\n\uc11c\ub85c \uac15\ud55c \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\ub294 feature\ub4e4\uc774 \uc5c6\ub2e4\ub294 \uac83\uc774\ub2e4.\n\n(Age\uc640 Age_cat \uc81c\uc678..) \uc774\uac83\uc740 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud560\uae4c?\n\n\uc774\uac83\uc740 \uc6b0\ub9ac\uac00 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0ac \ub54c, \ubd88\ud544\uc694\ud55c feature \uac00 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4.\n\n1 \ub610\ub294 -1 \uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c4 feature A, B \uac00 \uc788\ub2e4\uba74, \uc6b0\ub9ac\uac00 \uc5bb\uc744 \uc218 \uc788\ub294 \uc815\ubcf4\ub294 \uc0ac\uc2e4 \ud558\ub098\uc774\uae30 \ub54c\ubb38\uc774\ub2e4\n\n\uc774\uc81c \uc2e4\uc81c\ub85c \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc55e\uc11c\uc11c data preprocessing (\uc804\ucc98\ub9ac)\uc744 \uc9c4\ud589\ud574\ubcf4\uaca0\ub2e4.\n\n\uac70\uc758 \ub2e4\uc640\uac04\ub2e4 \ud798\ub0b4\uc790!!!","9e99b01e":"## \ub05d\uc774 \uc544\ub2c8\uc5c8\ub2e4...\n\n\n# 5. Prediction on Test set","b9745d50":"## 2.1 Pclass\n\n\uba3c\uc800 Pclass \uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4\ubcf4\uaca0\ub2e4.\n\nPclass\ub294 **\uc11c\uc218\ud615 \ub370\uc774\ud130**\uc774\ub2e4.\n\n\uc989, \uce74\ud14c\uace0\ub9ac\uc774\uba74\uc11c \uc21c\uc11c\uac00 \uc788\ub294 \ub370\uc774\ud130 \ud0c0\uc785\uc774\ub2e4.\n\n\uba3c\uc800 Pclass \uc5d0 \ub530\ub978 \uc0dd\uc874\ub960\uc758 \ucc28\uc774\ub97c \uc0b4\ud3b4\ubcf4\uaca0\ub2e4.\n\n\uc5d1\uc140\uc758 \ud53c\ubc97 \ucc28\ud2b8\uc640 \uc720\uc0ac\ud55c \uc791\uc5c5\uc744 \ud558\uac8c \ub418\ub294\ub370,\n\npandas dataframe \uc5d0\uc11c\ub294 groupby \ub97c \uc0ac\uc6a9\ud558\uba74 \uc27d\uac8c \ud560 \uc218 \uc788\ub2e4.\n\n\ub610\ud55c pivot \uc774\ub77c\ub294 \uba54\uc18c\ub4dc\ub3c4 \uc788\ub2e4.\n\nPclass,Survived \ub97c \uac00\uc838\uc628 \ud6c4, pclass \ub85c \ubb36\ub294\ub2e4.\n\n\uadf8\ub7ec\uace0 \ub098\uba74 \uac01 pclass \ub9c8\ub2e4 0, 1 \uc774 count\uac00 \ub418\ub294\ub370,\n\n\uc774\ub97c \ud3c9\uade0\ub0b4\uba74 \uac01 pclass \ubcc4 \uc0dd\uc874\ub960\uc774 \ub098\uc628\ub2e4\n\n\uc544\ub798\uc640 \uac19\uc774 count() \ub97c \ud558\uba74, \uac01 class \uc5d0 \uba87\uba85\uc774 \uc788\ub294 \uc9c0\n\n\ud655\uc778\ud560 \uc218 \uc788\uc73c\uba70, sum() \uc744 \ud558\uba74, 216 \uba85\uc911 \uc0dd\uc874\ud55c(survived=1)\n\n\uc0ac\ub78c\uc758 \ucd1d\ud569\uc744 \uc8fc\uac8c \ub41c\ub2e4"}}