{"cell_type":{"b0ab9705":"code","56962db5":"code","cd2832c3":"code","46d8413f":"code","44fcd868":"code","706486e9":"code","ccd73b6d":"code","1dcdd7b7":"code","e96b82fe":"code","52d68802":"code","ccd49bf6":"code","442df569":"code","4c8bc7cf":"code","edfcef92":"code","8b0fd539":"code","0c08e3e6":"code","306eb1c8":"markdown","5fb8de65":"markdown","13dbe953":"markdown","37cc0a56":"markdown","76b17034":"markdown","204bdd07":"markdown","83ce6dd8":"markdown","343e194d":"markdown"},"source":{"b0ab9705":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nsns.set(style=\"darkgrid\")\n\nimport folium\nimport geopandas","56962db5":"df = pd.read_csv('\/kaggle\/input\/covid19spain\/covid19_Spain.csv', parse_dates = [7])","cd2832c3":"df.head()","46d8413f":"df.isna().sum()","44fcd868":"df.dtypes","706486e9":"plt.figure(figsize = (10,10))\nsns.lineplot(x='Date', y='Total Infected',\n             hue='CCAA',\n             data=df)\nplt.title('CCAA: Total Cases')","ccd73b6d":"plt.figure(figsize = (10,10))\nsns.lineplot(x='Date', y='UCI',\n             hue='CCAA',\n             data=df)\nplt.title('CCAA: Total UCI')","1dcdd7b7":"plt.figure(figsize = (10,10))\nsns.lineplot(x='Date', y='Hospitalized',\n             hue='CCAA',\n             data=df)\nplt.title('CCAA: Total in Hospitals')","e96b82fe":"plt.figure(figsize = (10,10))\nsns.lineplot(x='Date', y='Death',\n             hue='CCAA',\n             data=df)\nplt.title('CCAA: Total Deaths')","52d68802":"plt.figure(figsize = (10,10))\nsns.lineplot(x='Date', y='IA',\n             hue='CCAA',\n             data=df)\nplt.title('CCAA: Total Deaths')","ccd49bf6":"df_last = df[df['Date'] == df['Date'].max()]","442df569":"df_last = df_last.sort_values(by='IA', ascending = False)","4c8bc7cf":"ccaa = df_last['CCAA'].head(5)","edfcef92":"print('The top 5 affected CCAA according to IA are: ',ccaa.values)","8b0fd539":"df_last['Home'] = df_last['Total Infected']-df_last['Hospitalized']-df_last['UCI'] - df_last['Death']","0c08e3e6":"# Pie chart\nlabels =list(['Home', 'Death', 'UCI','Hospitalized'])\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99','#fccf99']\n\nfor ca in ccaa:\n    sizes = df_last[df_last['CCAA']==ca][labels].values[0]\n    fig1, ax1 = plt.subplots()\n    patches, texts, autotexts = ax1.pie(sizes, colors = colors,labels =labels, autopct='%1.1f%%', startangle=90)\n    for text in texts:\n        text.set_color('grey')\n    for autotext in autotexts:\n        autotext.set_color('grey')\n    # Equal aspect ratio ensures that pie is drawn as a circle\n    ax1.axis('equal')  \n    plt.title(ca)\n    plt.tight_layout()\n    plt.show()","306eb1c8":"We will use IA as parameter to choose the top 5 affected CCAA","5fb8de65":"To be continued...","13dbe953":"# COVID-19 ANALYSIS IN SPAIN","37cc0a56":"## Data Preparation","76b17034":"First of all we check if there is any missing value.","204bdd07":"## Libraries","83ce6dd8":"## General Data Visualization","343e194d":"---\n## Analysis of Top 5 affected CCAA"}}