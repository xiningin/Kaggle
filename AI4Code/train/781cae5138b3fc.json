{"cell_type":{"6f577a18":"code","a4ce80a7":"code","4dda31c1":"code","09bc9f7e":"code","8ccd5986":"code","8d2ba951":"code","a7afa63e":"code","c7712865":"code","04c15d04":"code","717e69e7":"code","a66c117e":"code","a0546e56":"code","141e5dc7":"code","fb318aba":"code","418711e5":"code","301e8cdd":"code","0b1a6dd5":"code","3b84ad79":"code","d8c66192":"code","1dc18cce":"code","6b2c4211":"code","2cb737f1":"code","cd102aa8":"code","41d7a591":"code","f5bc4f41":"code","39b3b9eb":"code","849afb7f":"code","cd4d4783":"code","ce5f9195":"code","fb6bd9e7":"code","385a992f":"markdown","5c838250":"markdown","f355323e":"markdown"},"source":{"6f577a18":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport gc\n\nfrom sklearn.metrics import mean_squared_error as msq\nimport h2o\nfrom h2o.automl import H2OAutoML\n\nprint(os.listdir(\"..\/input\"))","a4ce80a7":"DEBUG = True\n\nROW_SAMPLE = 9123456\n\nif DEBUG == True:\n    ROW_SAMPLE =    1234 ","4dda31c1":"train = pd.read_csv('..\/input\/train.csv', nrows = ROW_SAMPLE)\ntest = pd.read_csv('..\/input\/test.csv')","09bc9f7e":"train.drop('key',axis=1,inplace=True)\n# train.pop('pickup_datetime')\ngc.collect()","8ccd5986":"kID = test['key']\n# test.pop('pickup_datetime')","8d2ba951":"# Clean dataset from https:\/\/www.kaggle.com\/gunbl4d3\/xgboost-ing-taxi-fares\n# train = train[train['fare_amount']>0]\n# train = train[train['fare_amount']<300]\n\ndef clean_df(df):\n    return df[(df.fare_amount > 0) &  (df.fare_amount < 400) &\n            (df.pickup_longitude > -80) & (df.pickup_longitude < -70) &\n            (df.pickup_latitude > 35) & (df.pickup_latitude < 45) &\n            (df.dropoff_longitude > -80) & (df.dropoff_longitude < -70) &\n            (df.dropoff_latitude > 35) & (df.dropoff_latitude < 45)]\n\ntrain = clean_df(train)","a7afa63e":"train.shape","c7712865":"train.isnull().values.any()","04c15d04":"train.dropna(inplace=True)\ntrain.shape","717e69e7":"test.isnull().values.any()","a66c117e":"print(train.isnull().sum())","a0546e56":"# y = train.pop('fare_amount') # pop also removes the column","141e5dc7":"train.head()","fb318aba":"val = train.shape[0]\ntest.shape, train.shape","418711e5":"# train = pd.concat([train,test])\n# pas = train['passenger_count']\n# train.shape","301e8cdd":"# changed\/simplified code\n# the other variables calced here are also likley relevant. skip for now, as I want an exact comparison with the naive distance baseline\n\ndef get_dist(df):\n    R = 6373.0\n\n#     dlon = df['dropoff_longitude'] - df['pickup_longitude']\n#     dlat =  df['dropoff_latitude'] - df['pickup_latitude']\n    lat1 = train['pickup_latitude']\n    lon1 = train['pickup_longitude']\n    lat2 = train['dropoff_latitude']\n    lon2 = train['dropoff_longitude']\n    dlon = lon2 - lon1\n    dlat = lat2 - lat1\n    a = ((np.sin(dlat\/2.0))**2) + (np.cos(lat1) * np.cos(lat2) * (np.sin(dlon\/2.0))**2)\n    c = 2.0 * np.arctan2(np.sqrt(a), np.sqrt(1-a))\n    distance = R * c\n#     del R,c,a,dlon,dlat\n#     distance.shape\n    return distance","0b1a6dd5":"train[\"distance\"] = get_dist(train)\ntest[\"distance\"] = get_dist(test)","3b84ad79":"# train.to_csv(\"train_9m_fares_dist.csv.gz\",index=False,compression=\"gzip\")\n# test.to_csv(\"test_fares_dist.csv.gz\",index=False,compression=\"gzip\")","d8c66192":"h2o.init(max_mem_size = 9)\nh2o.remove_all()","1dc18cce":"train.head()","6b2c4211":"tr = h2o.H2OFrame(train[[\"passenger_count\",\"distance\",\"fare_amount\"]].values)","2cb737f1":"tr.head(3)","cd102aa8":"ts = h2o.H2OFrame(test[[\"passenger_count\",\"distance\"]].values)","41d7a591":"ts.head(3)","f5bc4f41":"model = H2OAutoML()","39b3b9eb":"model.train(ts.col_names, 'C3', tr)","849afb7f":"pred = model.predict(ts)","cd4d4783":"pred = pred.as_data_frame()","ce5f9195":"pred.head()","fb6bd9e7":"submission = pd.DataFrame({\n        \"key\": kID,\n#         \"fare_amount\": pred.values\n    \"fare_amount\": pred.predict\n})\n\nsubmission.to_csv('FARES.csv',index=False)","385a992f":"### \n* forked from:  https:\/\/www.kaggle.com\/i150077\/automl-pred","5c838250":"# Export our \"small\" data sample","f355323e":"## import H2o and build a model on the numerics:\n"}}