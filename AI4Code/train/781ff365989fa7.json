{"cell_type":{"2ad18e6b":"code","02df60b6":"code","1accfe2e":"code","90abe89c":"code","e79a3e2d":"code","f1557dac":"code","23f12b0b":"code","60a9248c":"code","fdd7d989":"code","a0075048":"code","2cb17f7a":"code","c035a747":"code","17a85cc1":"code","655f80c5":"code","ebd91fc1":"code","0a3d72f6":"code","1d406b71":"markdown","25386058":"markdown","d6285af5":"markdown","e0c476eb":"markdown","8b7a3b3b":"markdown","7f1e274e":"markdown","31b095cd":"markdown"},"source":{"2ad18e6b":"import pandas as pd\nfrom sklearn.model_selection import (GroupKFold, KFold, ShuffleSplit,\n                                     StratifiedKFold,RepeatedKFold)","02df60b6":"df = pd.DataFrame()\ndf['y'] = [\n    0, 0, 0,\n    1, 1, 1,\n]\n\ndf['sex'] = [\n    'male', 'female',\n    'male', 'female',\n    'male', 'female',\n]\n\ndf['rank'] = [\n    1,1,\n    2,2,\n    3,3,\n]\n\ndf","1accfe2e":"X = df[['sex', 'rank']]\ny = df[['y']]","90abe89c":"# check data order and class blance\n# Provides train\/test indices to split data in train\/test sets.\n# Split dataset into k consecutive folds (without shuffling by default).\nkf = KFold(n_splits=3)\n\nfor train_index, valid_index in kf.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","e79a3e2d":"# check data order\n# Provides train\/test indices to split data in train\/test sets.\n# Split dataset into k consecutive folds (without shuffling by default).\nkf = KFold(n_splits=3,\n           random_state=0)\n\nfor train_index, valid_index in kf.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","f1557dac":"# with shuffling\nkf = KFold(n_splits=3,\n           random_state=0,\n           shuffle=True)\n\nfor train_index, valid_index in kf.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","23f12b0b":"skf = StratifiedKFold(n_splits=3,\n                      random_state=0,\n                      shuffle=True)\n\nfor train_index, valid_index in skf.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","60a9248c":"gkf = GroupKFold(n_splits=2)\n\ngroups = [0, 1,\n          0, 1,\n          0, 1]\n\nfor train_index, valid_index in gkf.split(X, y, groups):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","fdd7d989":"# grouping male\/female \ngkf = GroupKFold(n_splits=3)\n\ngroups = [0, 0,\n          1, 1,\n          2, 2]\n\nfor train_index, valid_index in gkf.split(X, y, groups):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","a0075048":"X","2cb17f7a":"gkf = GroupKFold(n_splits=2)\n\nrank_groups = [\n    0,1,2,\n    0,1,2,\n]\n\nfor train_index, valid_index in gkf.split(X, y, groups=rank_groups):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","c035a747":"ss = ShuffleSplit(n_splits=2, \n                  train_size=0.50,\n                  random_state=0)\n\nfor train_index, valid_index in ss.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","17a85cc1":"ss = ShuffleSplit(n_splits=3, \n                  train_size=0.50,\n                  random_state=0)\n\nfor train_index, valid_index in ss.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","655f80c5":"ss = ShuffleSplit(n_splits=2,\n                  train_size=0.67,\n                  random_state=0)\n\nfor train_index, valid_index in ss.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","ebd91fc1":"rkf = RepeatedKFold(n_splits=3,\n                    n_repeats=1,\n                    random_state=0)\n\nfor train_index, valid_index in rkf.split(X, y):\n    print(train_index, valid_index)\n    print(df.iloc[train_index])\n    print('------------------')","0a3d72f6":"rkf = RepeatedKFold(n_splits=3,\n                    n_repeats=2,\n                    random_state=0)\n\nfor train_index, valid_index in rkf.split(X, y):\n    print(train_index, valid_index)\n    print('------------------')","1d406b71":"# GroupKFold","25386058":"# KFold\n- \u6319\u52d5\n    - \u524d\u304b\u3089\u9806\u306b\u5207\u3063\u3066\u3044\u304f\n    - shuffle\u3057\u305f\u5834\u5408\u306f\u6df7\u3056\u308b\n    - valid\u3067\u306e\u91cd\u8907\u306f**\u8d77\u3053\u3089\u306a\u3044**\n- \u554f\u984c\u304c\u8d77\u3053\u308b\u5834\u5408\n    - \u30af\u30e9\u30b9\u30d0\u30e9\u30f3\u30b9\u306e\u504f\u308a\n","d6285af5":"# Data Preparation","e0c476eb":"# Cross validation strategies with sklearn\n## References\n- [validation\u306e\u5207\u308a\u65b9\u3044\u308d\u3044\u308d\uff08sklearn\u306e\u95a2\u6570\u307e\u3068\u3081\uff09\u3010kaggle Advent Calendar 4\u65e5\u76ee\u3011 - u++\u306e\u5099\u5fd8\u9332](https:\/\/upura.hatenablog.com\/entry\/2018\/12\/04\/224436)\n    - It's so helpful to understand how to split data with each strategies!\n- [3.1. Cross-validation: evaluating estimator performance \u2014 scikit-learn 0.21.2 documentation](https:\/\/scikit-learn.org\/stable\/modules\/cross_validation.html#multimetric-cross-validation)\n- [API Reference \u2014 scikit-learn 0.21.2 documentation](https:\/\/scikit-learn.org\/stable\/modules\/classes.html#module-sklearn.model_selection)\n","8b7a3b3b":"# StratifiledKFold","7f1e274e":"# RepeatedKFold","31b095cd":"# ShuffleSplit"}}