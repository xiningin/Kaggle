{"cell_type":{"ef87bd27":"code","0479f67d":"code","7aa1d4d7":"code","d31cfc9c":"code","5ccf9b52":"code","2e5d523f":"code","b631733c":"code","22b328da":"code","9d2f03d2":"code","3cbe9793":"code","854b6ce3":"code","06411c64":"code","23a118ee":"code","d1ae8644":"code","d6de6fd0":"code","5dcec92a":"markdown","fff7da28":"markdown","d25d44a7":"markdown"},"source":{"ef87bd27":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0479f67d":"trade_df = pd.read_csv('..\/input\/india-trade-data\/2018-2010_export.csv')\ntrade_df.head()","7aa1d4d7":"trade_df.info()","d31cfc9c":"trade_df['value'].isnull().sum()","5ccf9b52":"trade_df[\"value\"].fillna(trade_df.groupby('Commodity')['value'].transform('mean'),inplace = True)","2e5d523f":"trade_df['value'].isnull().sum()","b631733c":"yearly_export = trade_df.groupby('year')['value'].sum()\nplt.figure(figsize=(15, 6))\nax = sns.lineplot(x=yearly_export.index,y=yearly_export)\nax.set_title('Total exporting in the last 8 years')","22b328da":"importer_lists = []\nfor i in trade_df['year'].unique():\n    importer_lists.extend(trade_df[trade_df['year'] == i][['country','value']].groupby(['country']).sum().sort_values(by = 'value', ascending = False).iloc[0:3,:].index)","9d2f03d2":"from collections import Counter\nfavor_importer = Counter(importer_lists).most_common(3)\n\nplt.figure(figsize=(12, 5))\nfor country, count in favor_importer:\n    importer = trade_df[trade_df['country'] == country][['year','value','country']].groupby(['year']).sum()\n    ax = sns.lineplot(x= importer.index, y= importer['value'])\nax.set_title('Top 3 favourite importers')","3cbe9793":"trade_partners = trade_df[['country','value']].groupby(['country']).sum().sort_values(by = 'value', ascending = False).head()","854b6ce3":"plt.figure(figsize=(15, 6))\nax = sns.barplot(trade_partners.index, trade_partners.value, palette='Blues_d')\nax.set_title('Top 5 exporting partners')","06411c64":"trade_commodities = trade_df[['Commodity','value']].groupby(['Commodity']).sum().sort_values(by = 'value', ascending = False).head()\ntrade_commodities","23a118ee":"ax = sns.barplot(trade_commodities.value,trade_commodities.index, palette='Reds_d')\nax.set_title('Top 5 exporting commodities')","d1ae8644":"exporting_products = []\nfor i in trade_df['year'].unique():\n    exporting_products.extend(trade_df[trade_df['year'] == i][['Commodity','value']].groupby(['Commodity']).sum().sort_values(by = 'value', ascending = False).iloc[0:3,:].index)","d6de6fd0":"from collections import Counter\nfavor_products = Counter(exporting_products).most_common(3)\n\nplt.figure(figsize=(12, 5))\nfor product, count in favor_products:\n    products = trade_df[trade_df['Commodity'] == product][['year','value','country']].groupby(['year']).sum()\n    ax = sns.lineplot(x= products.index, y= products['value'])\n    print(product)\nax.set_title('Top 3 favourite products')","5dcec92a":"We will replace the missing datas of the value column with their means grouped by the commodity","fff7da28":"Great! No missing value is left in our dataset. Let's head on to analyze","d25d44a7":"The value column has 14038 missing values"}}