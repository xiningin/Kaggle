{"cell_type":{"50eea217":"code","db092f87":"code","9a1421a3":"code","90eda239":"code","8751957a":"code","6862062f":"code","165dd050":"code","ed806f69":"code","a7b30ae7":"code","fbf0a9b1":"code","459185ce":"code","dadc885e":"code","354bc2d6":"code","99564aa5":"markdown","a48c678e":"markdown"},"source":{"50eea217":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db092f87":"import yfinance as yf\nimport os, contextlib","9a1421a3":"! mkdir hist","90eda239":"#parameters for downloading stock data using yfinance\noffset = 0\nlimit = None\nperiod = 'max'\n\n#get the avaliable stocks at NASDAQ\ndata = pd.read_csv(\"http:\/\/www.nasdaqtrader.com\/dynamic\/SymDir\/nasdaqtraded.txt\", sep='|')\ndata_clean = data[data['Test Issue'] == 'N']\nsymbols = data_clean['NASDAQ Symbol'].tolist()\n\n#chech the paramets and declear placeholders\nlimit = limit if limit else len(symbols)\nend = min(offset + limit, len(symbols))\nis_valid = [False] * len(symbols)\n\n#retrive all stocks and store it in hist dir\nwith open(os.devnull, 'w') as devnull:\n    with contextlib.redirect_stdout(devnull):\n        for i in range(offset, end):\n            s = symbols[i]\n            data = yf.download(s, period=period)\n            if len(data.index) == 0:\n                continue\n        \n            is_valid[i] = True\n            data.to_csv('hist\/{}.csv'.format(s))\n\nprint('Total number of valid symbols downloaded = {}'.format(sum(is_valid)))\n\n#save valid stocks to csv file\nvalid_data = data_clean[is_valid]\nvalid_data.to_csv('symbols_valid_meta.csv', index=False)","8751957a":"!mkdir stocks\n!mkdir etfs","6862062f":"etfs = valid_data[valid_data['ETF'] == 'Y']['NASDAQ Symbol'].tolist()\nstocks = valid_data[valid_data['ETF'] == 'N']['NASDAQ Symbol'].tolist()","165dd050":"import shutil\nfrom os.path import isfile, join\n\n#split stocks and etfs into seprate folders\ndef move_symbols(symbols, dest):\n    for s in symbols:\n        filename = '{}.csv'.format(s)\n        shutil.move(join('hist', filename), join(dest, filename))\n  \nmove_symbols(stocks, \"stocks\")\nmove_symbols(etfs, \"etfs\")","ed806f69":"import glob\nimport csv\nfrom csv import writer","a7b30ae7":"#create csv file with the latest prices of all stocks\n\n#create csv file with headers\nwith open('stock_prices.csv', 'w') as f_object:\n    fieldnames = ['Symbol', 'Date', 'Open', 'High', 'Low', 'Adj Close', 'Volume']\n    writer = csv.DictWriter(f_object, fieldnames=fieldnames)\n    writer.writeheader()\n    \nf_object.close()\n\n#move the latest price to the csv file\nfiles = glob.glob('F:\\\\Courses\\\\NU\\\\Semester7\\\\1.Data Analysis\\\\Project\\\\stocks\\\\*.csv', recursive = True)\nrows = []\nwith open('stock_prices.csv', 'a', newline='') as f_object:\n    writer_object = writer(f_object)\n    for name in files:\n        with open(name,'r') as file: \n            data = file.readlines()\n            \n        symbol = name.split('\\\\')[-1].split('.')[0] + ','\n        \n        lastRow = data[-1].split('\\n')[0]\n        lastRow = symbol + lastRow\n        lastRow = lastRow.split(',')\n        \n        rows.append(lastRow)\n        \n\n    writer_object.writerows(rows)\n\n\nf_object.close()\n","fbf0a9b1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport shutil","459185ce":"df = pd.read_csv('stock_prices.csv')\narr = np.arange(1,5882)\nplt.scatter(arr,df['Close'],alpha=0.3)\nplt.show();","dadc885e":"#choosing the stock prices that is between 50 and 100\ndf1 = df[df['Close'] < 100]\ndf2 = df1[df1['Close'] > 50]\ndf2.to_csv('selected_stocks.csv', index = False)","354bc2d6":"selected_files = df2['Symbol'].value\n#move selected files to seprate folder\npath = 'F:\\\\Courses\\\\NU\\\\Semester7\\\\1.Data Analysis\\\\Project\\\\'\nfor file in selected_files:\n    shutil.copy(path+'stocks\\\\'+file+'.csv', path+'selected_stocks')","99564aa5":"**Data Aquasition from NASDAQ**","a48c678e":"**Choosing the stock prices disered to work on**"}}