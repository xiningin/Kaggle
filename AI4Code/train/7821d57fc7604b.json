{"cell_type":{"aa1ae501":"code","96b4a983":"code","e3340a30":"code","f0b91c06":"code","e0ae3c64":"code","c3e525e9":"code","5c369b95":"code","589c2d0a":"code","b35a79f6":"code","6b678555":"markdown","fc7ca454":"markdown","c82b8320":"markdown","ab570e39":"markdown","cf0c2dd3":"markdown","2d8859bd":"markdown","bc220cdf":"markdown","8e9da970":"markdown","8ed69cf5":"markdown","4d8b454a":"markdown","049a035c":"markdown","89d65b21":"markdown","0a0759b0":"markdown","eace1d9c":"markdown","4ff55b3f":"markdown","41a73be1":"markdown","3c55a4aa":"markdown","eefc7eb4":"markdown","a58b54f2":"markdown","4e791119":"markdown","c42d5767":"markdown","dee13c21":"markdown","015cf494":"markdown","3fcb8aa5":"markdown","b25767b0":"markdown","3c80466d":"markdown","031fc0e7":"markdown","b8722198":"markdown","4e431407":"markdown","9240503f":"markdown","c9e2a480":"markdown","65104770":"markdown","77de379d":"markdown","12cbec90":"markdown","be853411":"markdown","24ec7f6d":"markdown","4f1a8ec5":"markdown","813ae500":"markdown","e423c85e":"markdown","35f54f81":"markdown","020257e4":"markdown","491f3d72":"markdown","434aff00":"markdown","61c4d2dd":"markdown","818a5a17":"markdown","3c4d4f22":"markdown","f0f4d777":"markdown"},"source":{"aa1ae501":"\"\"\"\n`esc` + `y` + `enter` = \u5207\u5165\u4ee3\u7801\u7f16\u8f91\u6a21\u5f0f    \n`shift + enter` = \u8fd0\u884c\u672cCell\uff08\u5355\u5143\u683c\uff09\n\"\"\"\n","96b4a983":"# \u7528 `cmd` + `\/` = \u5c06\u4ee3\u7801\u53d8\u6210\u975e\u6267\u884c\u5185\u5bb9\n# \u91cd\u590d cmd` + `\/` = \u5c06\u4ee3\u7801\u53d8\u6210\u53ef\u6267\u884c\u5185\u5bb9","e3340a30":"# \u5f15\u5165\u5e93\nfrom fastai.vision import *","f0b91c06":"?ImageDataBunch","e0ae3c64":"??ImageDataBunch","c3e525e9":"doc(ImageDataBunch)","5c369b95":"%matplotlib inline\n%reload_ext autoreload\n%autoreload 2","589c2d0a":"a = 1\nb = a + 1\nc = b + a + 1\nd = c + b + a + 1\na, b, c ,d\n\nplt.plot([a,b,c,d])\nplt.show()","b35a79f6":"%timeit [i+1 for i in range(1000)]","6b678555":"---","fc7ca454":"<kbd>Shift<\/kbd>+<kbd>M<\/kbd>: \u5408\u5e76\u5355\u5143\u683c    \n<kbd>Shift<\/kbd>+<kbd>control<\/kbd>+<kbd>-<\/kbd>: \u5207\u5206\u5355\u5143\u683c","c82b8320":"`?function-name`: \u663e\u793a\u51fd\u6570\u57fa\u672c\u4fe1\u606f","ab570e39":"`%timeit`: \u4e3a\u4ee3\u7801\u8ba1\u65f6","cf0c2dd3":"\u5982\u4f55\u94fe\u63a5\u5176\u4ed6Notebook\u4ee5\u53ca\u6307\u5b9a\u7ae0\u8282\uff1f\n```\n[other notes](other_notebooks.ipynb)\n[a specific chapter](lesson1-pets-Copy2.ipynb#Unfreezing,-fine-tuning,-and-learning-rates)\n```","2d8859bd":"`cmd + c` = \u5728\u4e00\u4e2aNb\u4e2d\u590d\u5236     \n`cmd + v` = \u5728\u53e6\u4e00\u4e2aNb\u4e2d\u7c98\u8d34\u5373\u53ef","bc220cdf":"#  <span id=\"1\"><\/span> \u4e3a\u4ec0\u4e48Jupyter Notebook","8e9da970":"```python\nfor i in range(1000):\n    a = i+1\n    b = 'string'\n    c = b+1\n```","8ed69cf5":"`%debug`: \u7ed9\u4ee3\u7801\u627e\u9519 [Python debugger](https:\/\/docs.python.org\/3\/library\/pdb.html).","4d8b454a":"# <span id=\"4\"><\/span> \u4e09\u884c\u4ee3\u7801","049a035c":"<hr\/>\n# <span id=\"0\"><\/span> **Jupypter Notebook \u6280\u5de7\u6c47\u603b**\n\n[**\u6e90\u81ea fast.ai v3 2019\u8bfe\u7a0b\u4e2d\u6587\u7b14\u8bb0**](https:\/\/forums.fast.ai\/t\/fast-ai-v3-2019\/39325)\uff0c[**\u83b7\u53d6\u66f4\u591a\u8bfe\u7a0bNotebooks\u7684\u4e2d\u6587\u7248**](https:\/\/forums.fast.ai\/t\/fast-ai-v3-2019-notebook-kaggle-kernel\/39722)\n<hr\/>\n\n1. [\u4e3a\u4ec0\u4e48Jupyter Notebook](#1)\n1. [\u6700\u5e38\u7528\u6280\u80fd](#2)\n1. [\u63a2\u79d8\u51fd\u6570](#3)\n1. [\u4e09\u884c\u4ee3\u7801](#4)\n1. [\u5728Nb\u4e4b\u95f4\u590d\u5236\u7c98\u8d34](#nbcp)\n1. [\u4ee3\u7801\u8ba1\u65f6](#5)\n1. [\u4ee3\u7801\u627e\u9519](#6)\n","89d65b21":"`esc` + \u4e0a\u7bad\u5934 = \u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a\u5355\u5143\u683c     \n`esc` + \u4e0b\u7bad\u5934 = \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u5143\u683c","0a0759b0":"\u5927\u5bb6\u73b0\u5728\u770b\u5230\u7684\u5c31\u662f\u4e00\u4e2anotebook\uff0c\u5f53\u524d\u6587\u5b57\u6240\u5728\u65b9\u6846\uff0c\u88ab\u79f0\u4e3a`Cell` \u3002`Cell`\u6709\u4e24\u7c7b\uff0c\u4e00\u7c7b\u53eb`markdown cell` \u7528\u4f5c\u6587\u672c\u8bb0\u5f55\uff1b\u53e6\u4e00\u7c7b\u53eb`code cell`\uff0c\u7528\u6765\u5199\u4ee3\u7801\u3002","eace1d9c":"`shift + arrow` = \u591aCell\u9009\u62e9    \n`ctrl\/cmd + c` = \u590d\u5236    \n`ctrl\/cmd + v` = \u7c98\u8d34\u5230\u53e6\u4e00\u4e2aNb    ","4ff55b3f":"# <span id=\"3\"><\/span> \u63a2\u79d8\u51fd\u6570","41a73be1":"[\u8fd4\u56de](#0)","3c55a4aa":"\u8fd9\u6837\u7684\u6587\u672c+\u4ee3\u7801\u6a21\u5f0f\u975e\u5e38\u9002\u5408\u505a\u5b9e\u9a8c\u7814\u7a76\u3002\u6587\u5b57\u5e2e\u52a9\u89e3\u8bfb\uff0c\u4ee3\u7801\u751f\u6210\u5e76\u5c55\u793a\u7ed3\u679c\u3002fast.ai\u8bfe\u7a0b\u5168\u90e8\u901a\u8fc7notebook\u5f62\u5f0f\u8fd0\u884c\uff0c\u65b9\u4fbf\u5927\u5bb6\u5b66\u4e60\u548c\u5b9e\u9a8c\u3002\n\n\u77e5\u540d\u5b66\u754c\u4ea7\u4e1a\u754c\u673a\u6784\uff0c\u5982Google, Microsoft, IBM, Bloomberg, Berkeley \u4ee5\u53ca NASA \u7b49\u7b49\uff0c\u90fd\u91c7\u7528Jupyter Notebook\u3002\u751a\u81f3\u8bfa\u5956\u7ecf\u6d4e\u5f97\u4e3b\u4e5f\u91c7\u7528[notebook](https:\/\/paulromer.net\/jupyter-mathematica-and-the-future-of-the-research-paper\/)\u6765\u505a\u5b9e\u9a8c\uff0c\u8fd8\u6709\u4eba\u63d0\u51fa\u5c06\u6765notebook\u5c06\u6210\u4e3a[\u8bba\u6587\u5b66\u672f\u62a5\u544a\u7684\u8f7d\u4f53](https:\/\/www.theatlantic.com\/science\/archive\/2018\/04\/the-scientific-paper-is-obsolete\/556676\/)\u3002","eefc7eb4":"`??function-name`: \u663e\u793a\u51fd\u6570\u6e90\u4ee3\u7801","a58b54f2":"`esc` + `o` = \u6536\u8d77\u5f53\u524d\u5355\u5143\u683c\u7684\u8f93\u51fa\u9ed1\u4f53\u5c55\u793a\u533a\u57df","4e791119":"\u4ee5\u4e0b\u4e09\u884c\u4ee3\u7801\u9002\u7528\u4e8e\u6240\u6709\u7684Jupyter notebook","c42d5767":"\u539f[notebook](https:\/\/github.com\/fastai\/course-v3\/blob\/master\/nbs\/dl1\/00_notebook_tutorial.ipynb)\u6765\u81eafastai-v3 repo\uff0c\u8fd9\u91cc\u662f\u539fNotebook\u7684\u7b80\u6613\u4e2d\u6587\u7248\uff0c\u76ee\u7684\u662f\u5e2e\u52a9\u5927\u5bb6\u5feb\u901f\u4e0a\u624bJupyter Notebook\uff0c\u540c\u65f6\u6301\u7eed\u66f4\u65b0\u66f4\u591a\u5b9e\u7528\u6280\u5de7","dee13c21":"`%matplotlib inline`: \u5c06\u4f5c\u56fe\u663e\u793a\u9644\u7740\u5728\u5355\u5143\u683c\u4e0a","015cf494":"[\u8fd4\u56de](#0)","3fcb8aa5":"\u5149\u6807\u95ea\u52a8\uff0c\u610f\u5473\u7740\u4f60\u5904\u4e8e\u5f53\u524d\u5355\u5143\u683c\uff08Cell\uff09     \n`esc` + `m`  + `enter` = \u5207\u5165\u6587\u672c\u7f16\u8f91\u6a21\u5f0f    \n`shift + enter` = \u8fd0\u884c\u672cCell\uff08\u5355\u5143\u683c\uff09","b25767b0":"\u5982\u4f55\u5feb\u6377debug\n```py\nsticky # \u770b\u5230\u5168\u5c40\u4ee3\u7801\nll # \u4ecedebug\u8df3\u56de\u5230\u5168\u5c40\u4ee3\u7801\n# l 20\n# l 1, 20: see line from 1 to 20\ns # step into a function\nn # \u8fd0\u884c\u4e0b\u4e00\u884c\nw # call stack, where I started and where I am in source code, d go down a stack, u to go up a stack\nb 88 # \u8fd0\u884c\u523088\u884c\uff0c\u6682\u505c\n# b file.py:41 or b func_name\n# b 11, this_year==2017: conditional breakpoint, at line 11 to breakpoint, if this_year == 2017\ncl 1 # \u5220\u9664\u7b2c\u4e00\u4e2abreakpoint\nr # \u8fd0\u884c\u6240\u5728 function\nc # \u8fd0\u884c\u76f4\u5230\u7ed3\u675f\nq # \u7ec8\u6b62\n? # \u67e5\u770b\u6587\u6863\n\n##### .pdbrc\nalias dr pp dir(%1) # \u67e5\u770beverything underneath the object\nalias dt pp %1.__dict__ # \u67e5\u770bobject's dictionaries\nalias pdt for k, v in %1.items(): print(k, \": \", v) # \u67e5\u770b\u4e00\u4e2a\u7eaf python dictionary\nalias loc locals().keys() # local variables\nalias doc from inspect import getdoc; from pprint import pprint; pprint(getdoc(%1)) # documents\nalias sources from inspect import getsourcelines; from pprint import pprint; pprint(getsourcelines(%1)) # source code\nalias module from inspect import getmodule; from pprint import pprint; pprint(getmodule(%1)) # module name\nalias fullargs from inspect import getfullargspec; from pprint import pprint; pprint(getfullargspec(%1)) # all arguments names\nalias opt_param optimizer.param_groups[0]['params'][%1] # all parameters\nalias opt_grad optimizer.param_groups[0]['params'][%1].grad # all gradients of parameters\n```","3c80466d":"# <span id=\"5\"><\/span> \u5982\u4f55\u7ed9\u4ee3\u7801\u8ba1\u65f6","031fc0e7":"# <span id='nbcp'><\/span> \u5982\u4f55\u5728Nb\u4e4b\u95f4\u7c98\u8d34\u590d\u5236","b8722198":"`doc(function-name)`: \u5c55\u793a\u51fd\u6570\u6587\u6863\u53ca\u94fe\u63a5","4e431407":"[\u8fd4\u56de](#0)","9240503f":"**\u7c97\u4f53**    \n*\u659c\u4f53*     \n`\u6587\u672c\u4e2d\u5199\u4ee3\u7801`     \n[\u94fe\u63a5](https:\/\/forums.fast.ai\/t\/fast-ai-v3-2019\/39325?u=daniel)     ","c9e2a480":"`%reload_ext autoreload`    \n`%autoreload 2`\n\n\u5f53\u5e93\u53d1\u751f\u4fee\u6539\u65f6\uff0c\u81ea\u52a8\u66f4\u65b0","65104770":"how to run codes line by line\n```python\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n1. ```","77de379d":"# <span id=\"6\"><\/span> \u5982\u4f55\u7ed9\u4ee3\u7801\u627e\u9519","12cbec90":"`%`, magics, \u53ef\u4ee5\u7406\u89e3\u4e3aJupyter Notebook\u81ea\u5df1\u7279\u5236\u51fd\u6570","be853411":"\u4efb\u52a1\u5217\u8868\n\n- [x] Learn Jupyter Notebooks\n    - [x] Writing\n    - [x] Modes\n    - [x] Other Considerations\n- [ ] Change the world","24ec7f6d":"`0` + `0` = \u91cd\u542fkernel      \n`s` = \u4fdd\u5b58","4f1a8ec5":"[\u8fd4\u56de](#0)","813ae500":"\u672cnotebook\u7684\u76ee\u7684\u662f\u6559\u4f1a\u5927\u5bb6\u5982\u4f55\u9ad8\u6548\u4f7f\u7528Jupyter Notebook. \u7b2c\u4e00\u8282\uff0c\u662f\u57fa\u7840\u5e94\u7528\u6280\u5de7\uff1b\u7b2c\u4e8c\u8282\uff0c\u5e2e\u52a9\u63d0\u5347\u5de5\u4f5c\u6548\u7387\u3002","e423c85e":"`esc` + `c` = \u590d\u5236\u5f53\u524d\u5355\u5143\u683c     \n`esc` + `x` = \u526a\u5207\u5f53\u524d\u5355\u5143\u683c     \n`esc` + `v` = \u7c98\u8d34\u5355\u5143\u683c\uff0c\u5230\u5f53\u524d\u5355\u5143\u683c\u4e0b\u9762     \n`esc` + `a` = \u65b0\u5efa\u5355\u5143\u683c\uff0c\u5230\u5f53\u524d\u5355\u5143\u683c\u4e0a\u9762     \n`esc` + `b` = \u65b0\u5efa\u5355\u5143\u683c\uff0c\u5230\u5f53\u524d\u5355\u5143\u683c\u4e0b\u9762     ","35f54f81":"`%debug`","020257e4":"`untar_data()` \u5149\u6807\u653e\u5728\u62ec\u53f7\u5185\uff1a    \n<kbd>Shift<\/kbd>+<kbd>Tab<\/kbd>: [\u4e00\u6b21] \u5c55\u793a\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u57fa\u672c\u7ec6\u8282      \n<kbd>Shift<\/kbd>+<kbd>Tab<\/kbd>: [\u4e09\u6b21] \u5c55\u793a\u5168\u90e8\u7ec6\u8282","491f3d72":"# \u7b2c\u4e00\u6807\u9898\n## \u7b2c\u4e8c\u6807\u9898\n### \u7b2c\u4e09\n\n* \u65e0\u5e8f\u5217\u8868\n* \u65e0\u5e8f\u5217\u8868\n* \u65e0\u5e8f\u5217\u8868\n\n\n1. \u6709\u5e8f\n1. \u6709\u5e8f\n    1. \u6709\n1. \u6709\u5e8f\n    1. you\n    \n> \u5f15\u7528","434aff00":"[\u8fd4\u56de](#0)","61c4d2dd":"[\u8fd4\u56de](#0)","818a5a17":"<kbd>Shift<\/kbd>+<kbd>Arrow up\/Arrow down<\/kbd>: \u5411\u4e0a\u5411\u4e0b\uff0c\u9009\u4e2d\u591a\u4e2a\u5355\u5143\u683c","3c4d4f22":"# <span id=\"2\"><\/span> \u6700\u5e38\u7528\u6280\u80fd","f0f4d777":"[\u8fd4\u56de](#0)"}}