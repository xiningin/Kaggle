{"cell_type":{"f84f50c7":"code","871da134":"code","17dde2ff":"code","755cf480":"code","29787d97":"code","153b5ab9":"code","32400a75":"code","f717e6ce":"code","7b5cd61d":"code","f734ed42":"code","2b0f2595":"code","8aeca789":"code","59d0b1a5":"code","36c23300":"code","02c9e361":"code","a56d09a9":"code","933178b3":"code","1f1fc756":"code","aa43ff0d":"code","7afc08b5":"markdown","bde33b36":"markdown","8992e633":"markdown","a4a26885":"markdown","dd2ea42f":"markdown","e89a33a7":"markdown","49866fed":"markdown","c9afeb1a":"markdown","29b5959c":"markdown","b44a4920":"markdown","ee7e27db":"markdown","a9659723":"markdown","d70eba66":"markdown","be5f6c92":"markdown","ce4eeb00":"markdown","00299f63":"markdown","cb426fca":"markdown","4aad1fb8":"markdown","7b64e51c":"markdown","8740483a":"markdown","684bebce":"markdown"},"source":{"f84f50c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","871da134":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","17dde2ff":"dataset = pd.read_csv('..\/input\/Social_Network_Ads.csv')","755cf480":"dataset.info()","29787d97":"dataset.describe()","153b5ab9":"dataset.describe(include = ['O'])","32400a75":"dataset['Gender'] = dataset['Gender'].map({'Male':1,'Female':0})","f717e6ce":"x = dataset.iloc[:,1:4]\ny = dataset.iloc[:,4:]","7b5cd61d":"def normalise(x):\n    return ((x - np.min(x))\/(np.max(x)-np.min(x)))\n\nx.iloc[:,2:] = x.iloc[:,2:].apply(normalise)","f734ed42":"from sklearn.model_selection import train_test_split\nx_train,x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=100)","2b0f2595":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(x_train,y_train)\ny_pred_lr = lr.predict(x_test)","8aeca789":"c = [i for i in range(120)]\nplt.figure()\nplt.scatter(c,y_test,color='green',label='original')\nplt.scatter(c,y_pred_lr)","59d0b1a5":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred_lr)\ncm","36c23300":"from sklearn.neighbors import KNeighborsClassifier\nlr_knn = KNeighborsClassifier(n_neighbors=5,metric='minkowski',p=2)\nlr_knn.fit(x_train,y_train)\ny_pred_knn = lr_knn.predict(x_test)\ncm = confusion_matrix(y_test,y_pred_knn)\ncm","02c9e361":"from sklearn.svm import SVC\nlr_svc = SVC(kernel='linear',random_state=0)\nlr_svc.fit(x_train,y_train)\ny_pred_svc = lr_svc.predict(x_test)\ncm = confusion_matrix(y_test,y_pred_svc)\ncm","a56d09a9":"from sklearn.svm import SVC\nlr_ksvc = SVC(kernel = 'rbf')\nlr_ksvc.fit(x_train,y_train)\ny_pred_ksvc = lr_ksvc.predict(x_test)\ncm = confusion_matrix(y_test, y_pred_ksvc)\ncm","933178b3":"from sklearn.naive_bayes import GaussianNB\nlr_nb = GaussianNB()\nlr_nb.fit(x_train,y_train)\ny_pred_nb = lr_nb.predict(x_test)\ncm = confusion_matrix(y_test,y_pred_nb)\ncm","1f1fc756":"from sklearn.tree import DecisionTreeClassifier\nlr_dtc = DecisionTreeClassifier()\nlr_dtc.fit(x_train,y_train)\ny_pred_dtc = lr_dtc.predict(x_test)\ncm = confusion_matrix(y_test,y_pred_dtc)\ncm","aa43ff0d":"from sklearn.ensemble import RandomForestClassifier\nlr_rfc = RandomForestClassifier()\nlr_rfc.fit(x_train,y_train)\ny_pred_rfc = lr_rfc.predict(x_test)\ncm = confusion_matrix(y_test,y_pred_rfc)\ncm","7afc08b5":"21 Wrong predictions...","bde33b36":"21 wrong predictions out of total 120 test values","8992e633":"18 wrong predictions out of total 120 total predictions...","a4a26885":"15 wrong predictions ... ","dd2ea42f":"**Random Forest Classifier**","e89a33a7":"**Importing Dataset **","49866fed":"**Getting the information related to Dataset**","c9afeb1a":"**Naive_bayes Algorithm **","29b5959c":"> **UPVOTE IF YOU LIKE THIS...**","b44a4920":"17 wrong predictions...","ee7e27db":"**Kernel SVM**","a9659723":"**Support Vector Algorithm**","d70eba66":"16 wrong predictions...","be5f6c92":"**Decision tree classifier**","ce4eeb00":"**Importing Libraries **","00299f63":"**Seperating in training and testing set**","cb426fca":"13 wrong predictions...","4aad1fb8":"**K Nearest Neighbors**","7b64e51c":"**Logistic Regression**","8740483a":"**Normalising...**","684bebce":"**Best predictions : Random Forest Classification with 13 wrong predictions in total 120 predictions...**"}}