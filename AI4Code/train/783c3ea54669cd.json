{"cell_type":{"d83f1d8d":"code","907e50db":"code","026ef18f":"code","2c3f82b6":"code","66b03f39":"code","2bcc7f7d":"code","43d93767":"code","07ebeef1":"code","61dc2c0d":"code","125f31cb":"code","95e739dc":"code","52f98c26":"code","50d73f4d":"code","a4997622":"code","19a4d910":"code","b2f7da1a":"code","afc22ee8":"code","102e035d":"code","3fce6c56":"code","6d187006":"code","17c8398b":"code","00b9f5ec":"code","ba8005b4":"code","a99b916c":"code","a996dd3b":"code","21cdb23f":"code","90a9bfb6":"code","e2b044b7":"code","37ef88af":"code","c453d314":"code","30816ce7":"code","375f982a":"code","74061cfe":"code","2be13d08":"code","57ef97b9":"code","fed7462d":"code","c9289723":"code","a230edb3":"code","f47076f7":"code","467f6a10":"code","7ee9a846":"code","16090223":"code","24c33527":"code","81562113":"code","5ef0d88e":"code","9e5c19f9":"code","08cea47b":"code","16469031":"code","9a39efe9":"code","510e8788":"code","cbcdb10a":"code","d0470067":"code","0a860566":"code","6a45c769":"code","50be1c09":"code","5283a3ae":"code","5e13ffa2":"code","ed12d733":"code","d6efbac3":"code","63a1f84c":"code","83587d5c":"code","e5351fd0":"code","65c0da2c":"code","4c0cb396":"code","2195b3b3":"code","29c63f99":"code","3a57f5df":"code","93ecdf61":"code","76083605":"code","6a9b4ac8":"code","415fe507":"code","ed39b1b0":"code","fe6cf3e4":"code","9cdce2ed":"markdown","00ace6b1":"markdown","a3485f34":"markdown","716c5a6e":"markdown","0b092fa3":"markdown","111c13fb":"markdown","be449fb4":"markdown","a61ff5de":"markdown","90efdb49":"markdown","bde3c432":"markdown","ac73a985":"markdown","554dced2":"markdown","339d0879":"markdown","10602eca":"markdown","0ecd7b52":"markdown","7f2592e0":"markdown","6a920241":"markdown","e1ee17ec":"markdown","15566e20":"markdown","e8a28dbd":"markdown","75ba6660":"markdown","334808a8":"markdown","c30a854b":"markdown","21289251":"markdown","06393ac3":"markdown","3ab7615e":"markdown","08a63ce9":"markdown","4a83b251":"markdown","20a94948":"markdown","3e545206":"markdown","9c693d02":"markdown","1b7e8842":"markdown","d21c0a4c":"markdown","9a15ade4":"markdown"},"source":{"d83f1d8d":"import numpy as np\nimport pandas as pd","907e50db":"files_path = '\/kaggle\/input\/av-healthcare-analytics-ii\/'\ntrain_df = pd.read_csv('{}healthcare\/train_data.csv'.format(files_path))\ntest_df = pd.read_csv('{}healthcare\/test_data.csv'.format(files_path))\ny_test_df = pd.read_csv('{}healthcare\/sample_sub.csv'.format(files_path))\ndata_dict = pd.read_csv('{}healthcare\/train_data_dictionary.csv'.format(files_path))","026ef18f":"train_df.head()","2c3f82b6":"pd.set_option('display.max_colwidth', None)\ndata_dict.head(18)","66b03f39":"train_df.info()","2bcc7f7d":"test_df.head()","43d93767":"y_test_df.head()","07ebeef1":"train_df.Stay.value_counts()","61dc2c0d":"train_df.Stay.nunique()","125f31cb":"y_test_df.Stay.value_counts()","95e739dc":"y_test_df.shape","52f98c26":"# merge test features and labeles\ntest_df = test_df.merge(y_test_df, how='inner', left_on=['case_id'], right_on=['case_id'])","50d73f4d":"test_df.info()","a4997622":"# create new dataframe contains train and test datasets\ndf = train_df.append(test_df)","19a4d910":"# check fro duplicates in case_id\ndf.case_id.is_unique","b2f7da1a":"# replace spaces with \"-\"\ndf.columns = df.columns.str.replace(' ','_')\ndf.info()","afc22ee8":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","102e035d":"count = 1","3fce6c56":"eda_df = df.copy()","6d187006":"plot_df = eda_df.Stay.value_counts().sort_values(ascending=False)\nfig = px.bar(plot_df, x=plot_df.index, y=plot_df, color='Stay',\n             labels={'index':'Duration', 'y':'Count'}, height=500, width=900, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title=\"Count of patients in each duration category\")\nfig.show()\n\n","17c8398b":"stay_values_mapping = {\n '11-20': '11-30',\n '21-30': '11-30',\n '31-40': '30+',\n '41-50': '30+',\n '51-60': '30+',\n '61-70': '30+',\n '71-80': '30+',\n '81-90': '30+',\n '91-100': '30+',\n 'More than 100 Days': '30+'\n}","00b9f5ec":"grouped_duration = eda_df.copy()\ngrouped_duration.Stay.replace(stay_values_mapping, inplace=True)","ba8005b4":"plot_df = grouped_duration.Stay.value_counts().sort_values(ascending=False)\nfig = px.bar(plot_df, x=plot_df.index, y=plot_df, color='Stay',\n             labels={'index':'Duration', 'y':'Count'}, height=400, width=600, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title=\"Count of patients in each duration category\")\nfig.show()\n\n","a99b916c":"fig = px.sunburst(eda_df, path=['Severity_of_Illness'], height=600, width=600)\nfig.update_layout(title='Severity of Illness')\nfig.update_traces(textinfo='label+percent entry')\nfig.show()\n\n\n","a996dd3b":"fig = px.sunburst(eda_df, path=['Type_of_Admission'], height=600, width=600)\nfig.update_layout(title='Type of Admission')\nfig.update_traces(textinfo='label+percent entry')\nfig.show()\n\n","21cdb23f":"plot_df = eda_df.Department.value_counts(normalize=True).sort_values(ascending=False) * 100\nfig = px.bar(plot_df, x=plot_df.index, y=plot_df, color='Department',\n             labels={'index':'Department', 'y':'Percentage'}, height=500, width=900, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title=\"Percentage of patients admitted in each department\")\nfig.show()\n\n","90a9bfb6":"fig = px.sunburst(grouped_duration, path=['Stay', 'Severity_of_Illness'], height=600, width=600)\nfig.update_layout(title='Severity of Illness vs Duration')\nfig.update_traces(textinfo='label+percent parent')\nfig.show()\n\n","e2b044b7":"fig = px.sunburst(eda_df, path=['Type_of_Admission', 'Severity_of_Illness'], height=600, width=600)\nfig.update_layout(title='Severity of Illness vs Type of Admission')\nfig.update_traces(textinfo='label+percent parent')\nfig.show()\n\n","37ef88af":"plot_df = df.Age.value_counts().sort_index()\nfig = px.bar(plot_df, x=plot_df.index, y=plot_df, color='Age',\n             labels={'y': 'Count', 'index':'Age'}, height=400, width=800, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title=\"Count of patients in each age category\")\nfig.show()\n\n","c453d314":"age_mapping = {\n'0-10': '0-30',\n'11-20': '0-30',\n'21-30': '0-30',\n'31-40': '31-60',\n'41-50': '31-60',\n'51-60': '31-60',\n'61-70': '61-100',\n'71-80': '61-100',\n'81-90': '61-100',\n'91-100':'61-100'\n}\n\ngrouped_age_duration = grouped_duration.copy()\ngrouped_age_duration.Age.replace(age_mapping, inplace=True)","30816ce7":"fig = px.sunburst(grouped_age_duration, path=['Stay', 'Age'], height=600, width=600)\nfig.update_layout(title='Age vs Stay Duration')\nfig.update_traces(textinfo='label+percent parent')\nfig.show()\n\n","375f982a":"plot_df = df.groupby('Department')['Visitors_with_Patient'].mean()\nfig = px.bar(plot_df, x=plot_df.index, y=plot_df, color='Visitors_with_Patient',\n             labels={'y': 'Visitors Average'}, height=400, width=700, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title='Visitors average in each department')\nfig.show()\n\n","74061cfe":"plot_df = eda_df.groupby('Department')['Available_Extra_Rooms_in_Hospital'].mean()\nfig = px.bar(plot_df, x=plot_df.index, y=plot_df, color='Available_Extra_Rooms_in_Hospital',\n             labels={'y': 'Extra Rooms Average'}, height=400, width=800, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title='Extra rooms average in each department')\nfig.show()\n\n","2be13d08":"eda_df.Admission_Deposit.describe()","57ef97b9":"eda_df.Admission_Deposit.mode()[0]","fed7462d":"x = eda_df.Admission_Deposit\nfig = px.histogram(x=x, histnorm='percent', template='ggplot2', height=400, width=700, labels={'x': 'Admission_Deposit'})\nfig.update_layout(title='Admission Deposit Histogram')\nfig.show()\n\n","c9289723":"eda_df.Visitors_with_Patient.describe()","a230edb3":"eda_df.Visitors_with_Patient.mode()[0]","f47076f7":"x = eda_df.Visitors_with_Patient\nfig = px.histogram(x=x, histnorm='percent', template='ggplot2', height=400, width=700, labels={'x': 'Visitors_with_Patient'})\nfig.update_layout(title='Visitors Histogram')\nfig.show()\n\n","467f6a10":"eda_df.Available_Extra_Rooms_in_Hospital.describe()","7ee9a846":"eda_df.Available_Extra_Rooms_in_Hospital.mode()[0]","16090223":"x = eda_df.Available_Extra_Rooms_in_Hospital\nfig = px.histogram(x=x, histnorm='percent', template='ggplot2', height=400, width=700, labels={'x': 'Available_Extra_Rooms_in_Hospital'})\nfig.update_layout(title='Extra Rooms Histogram')\nfig.show()\n\n","24c33527":"set(train_df.Stay.values)","81562113":"df.Stay.value_counts()","5ef0d88e":"stay_values_mapping = {\n '11-20': '11-30',\n '21-30': '11-30',\n '31-40': '30+',\n '41-50': '30+',\n '51-60': '30+',\n '61-70': '30+',\n '71-80': '30+',\n '81-90': '30+',\n '91-100': '30+',\n 'More than 100 Days': '30+'\n}","9e5c19f9":"df.Stay.replace(stay_values_mapping, inplace=True)","08cea47b":"# check missing values\ndf.isnull().sum()","16469031":"# missing value heat map\nsns.heatmap(df.isnull(), cbar=False)\n\n","9a39efe9":"(df.City_Code_Patient.isnull().sum() \/ df.shape[0]) * 100","510e8788":"df.shape[0] - df.dropna().shape[0]","cbcdb10a":"df.dropna().shape[0] \/ df.shape[0]","d0470067":"# drop missing values\ndf = df.dropna()\ndf.isna().sum()","0a860566":"from sklearn.preprocessing import LabelEncoder","6a45c769":"object_cols = df.select_dtypes(include='object').columns.to_list()\nnum_cols = df.drop(object_cols, axis=1).columns\nobject_cols.remove('Stay')","50be1c09":"# convert object data to numerical using label encoding\nles = {}\nfor col in object_cols:\n  les[col] = LabelEncoder()\n  data = df[col].values\n  df[col]  = les[col].fit_transform(data)\n  print(\"{}: {} \\n\".format(col, les[col].classes_))","5283a3ae":"fig, ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(ax=ax, data=df.corr(), cmap=\"YlGnBu\", annot=True, cbar=False)\n\n","5e13ffa2":"from sklearn.preprocessing import RobustScaler","ed12d733":"df.describe().T","d6efbac3":"x = df.drop(['Stay', 'case_id', 'patientid'], axis=1)\ny = df.Stay","63a1f84c":"x[x.columns] = RobustScaler().fit_transform(x[x.columns].values)","83587d5c":"from sklearn.model_selection import train_test_split","e5351fd0":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3, stratify=y)","65c0da2c":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom time import time","4c0cb396":"values= [RandomForestClassifier(random_state=42), KNeighborsClassifier(), XGBClassifier(random_state=42), MLPClassifier(random_state=42)]\n\nkeys= ['RandomForsetClassifier',\n      'KNeighborsClassifier',\n      'XGBClassifier',\n      'MLPClassifier']\n\nmodels= dict(zip(keys,values))\naccuracy_scores=[]\ntrain_times=[]\n\nfor key,value in models.items():\n  t = time()\n  value.fit(x_train,y_train)\n  duration = (time() - t) \/ 60\n  y_pred= value.predict(x_test)\n  accuracy= accuracy_score(y_test, y_pred)\n  accuracy_scores.append(accuracy)\n  train_times.append(duration)   \n  print(key)\n  print(accuracy)","2195b3b3":"fig = px.bar(accuracy_scores, x=keys, y=accuracy_scores, color=accuracy_scores,\n             labels={'x': '', 'y':'Scores %', 'color':''}, height=400, width=500, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title='Classifiers Accuracy Scores')\nfig.show()\n\n","29c63f99":"fig = px.bar(train_times, x=keys, y=train_times, color=train_times,\n             labels={'x': '', 'y':'Train Times (min)', 'color':''}, height=400, width=500, color_continuous_scale=px.colors.sequential.Sunset)\nfig.update_layout(title='Classifiers Trainig Times')\nfig.show()\n\n","3a57f5df":"params= {'max_depth': [7,8], 'max_features':[8,9,10,11]}\n\nxgb= XGBClassifier(random_state=42)\ngrid= RandomizedSearchCV(xgb, cv=3, verbose=3,param_distributions= params, n_iter=5)\ngrid.fit(x_train,y_train)","93ecdf61":"grid.best_score_","76083605":"grid.best_estimator_","6a9b4ac8":"y_pred= grid.best_estimator_.predict(x_test)\nprint(accuracy_score(y_test,y_pred))","415fe507":"print(classification_report(y_test,y_pred))","ed39b1b0":"def f_importances(coef, names, top=-1):\n    imp = coef\n    imp, names = zip(*sorted(list(zip(imp, names))))\n\n    # Show all features\n    if top == -1:\n        top = len(names)\n\n    plt.barh(range(top), imp[::-1][0:top], align='center')\n    plt.yticks(range(top), names[::-1][0:top])\n    plt.title('feature importances for dt')\n    plt.show()","fe6cf3e4":"# whatever your features are called\nfeatures_names = x_train.columns\nf_importances(abs(grid.best_estimator_.feature_importances_), features_names, top=7)","9cdce2ed":"## Merge Datasets","00ace6b1":"# Colclusion\n> it seems like the significant and busiest units of the hospital, where the MAJORITY of patients stay for care, are missing, so this dataset is incomplete, so building a model to predict LOS using it will lead to poor trainig performance","a3485f34":"$\\color{green}{\\text{\n35% of patients stay up to 10\n}}$","716c5a6e":"$\\color{green}{\\text{\nmost number of extra rooms between 2 and 4\n}}$","0b092fa3":"$\\color{green}{\\text{\nmost admission deposits are between 3k and 6k\n}}$","111c13fb":"## Correlation Matrix","be449fb4":"## Regroup 'Stay' labeles","a61ff5de":"1. $\\color{green}{\\text{\npercentage of patients between 61-100 years old increases in saty duration more than 30 days slightly\n}}$\n\n1. $\\color{green}{\\text{\npercentage of patients between 0-30 years old decreases by the same amount\n}}$\n\n1. $\\color{green}{\\text{\npercentage of patients between 31-60 years is constant over all stay duration categories\n}}$","90efdb49":"$\\color{green}{\\text{\nmost number of visitors between 2 and 4\n}}$","bde3c432":"## Missing Values","ac73a985":"$\\color{green}{\\text{\neach department has in average 3 extra rooms at admission time\n}}$","554dced2":"$\\color{green}{\\text{'Stay' labeles are in 11 imbalanced classes, which will reduce model training performance}}$","339d0879":"# Introduction\n> Recent Covid-19 Pandemic has raised alarms over one of the most overlooked area to focus: Healthcare Management. While healthcare management has various use cases for using data science, patient length of stay is one critical parameter to observe and predict if one wants to improve the efficiency of the healthcare management in a hospital.\nThis parameter helps hospitals to identify patients of high LOS risk (patients who will stay longer) at the time of admission. Once identified, patients with high LOS risk can have their treatment plan optimized to miminize LOS and lower the chance of staff\/visitor infection. Also, prior knowledge of LOS can aid in logistics such as room and bed allocation planning.","10602eca":"$\\color{green}{\\text{\n78% of patients admitted in gynecology department\n}}$","0ecd7b52":"# Scaling","7f2592e0":"in order to perform better analysis, stay durations will be regrouped into 3 durations","6a920241":"## Label Encoding","e1ee17ec":"$\\color{green}{\\text{\nmisisng values are 1.4% of data, so it will be removed\n}}$","15566e20":"$\\color{green}{\\text{\n  patients in all departments have visitors of 3 in average\n}}$","e8a28dbd":"$\\color{green}{\\text{\nDurations are regrouped in almost balanced three categories\n}}$","75ba6660":"# Exploratory DA","334808a8":"$\\color{green}{\\text{\nmost of admitted patients are between 31 and 50 years old\n}}$","c30a854b":"# Train-Test split","21289251":"$\\color{green}{\\text{\n55% of patients admitted in moderate severity of illness\n}}$","06393ac3":"$\\color{green}{\\text{\ntest data is really large amount of data, so it will be merged with train data to be split before model train\n}}$","3ab7615e":"$\\color{red}{\\text{\ntrain data has 11 classes while test data has only 1 class\n}}$","08a63ce9":"$\\color{green}{\\text{\n  some columns names contain spaces which can't be accessed by dot notation\n}}$","4a83b251":"$\\color{green}{\\text{\n48% of patients in trauma admission\n}}$","20a94948":"# Repair data\n\n*   Merge all data sets in one data frame\n*   Replace spaces in columns","3e545206":"$\\color{green}{\\text{\nseverity of illnes is distriputed over durations and type of admission almost as it is distriputed over all data\n}}$","9c693d02":"# Import Dataframes","1b7e8842":"# Data Preprocessing\n\n> Missing values, label encoding\n\n","d21c0a4c":"# Classification","9a15ade4":"## Repair Columns Names\n\n\n> replace spaces in columns names with undescore \"_\" so it can be accessed by dot notation \".\"\n\n"}}