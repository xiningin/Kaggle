{"cell_type":{"5495fed3":"code","2178cb58":"code","99266a51":"code","45e56e08":"code","8775ab41":"code","a9ae912a":"code","129aec5e":"code","07a1c1c4":"code","bc92514c":"code","9f8d49c1":"code","11ca6804":"code","324662a7":"code","a895dc0f":"code","1a472900":"code","3aa1179c":"code","091b1add":"code","9cc41c87":"code","bc27b574":"markdown","994d2c16":"markdown","904949b8":"markdown","ee2b598e":"markdown","a94e75f7":"markdown","eb466fbc":"markdown","af766118":"markdown","26b90011":"markdown","49dd8790":"markdown","701d9ead":"markdown","376eecab":"markdown","d47ed6c9":"markdown"},"source":{"5495fed3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2178cb58":"import seaborn as sns\nimport matplotlib.pyplot as plt","99266a51":"data = pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndata.head()","45e56e08":"data.info()","8775ab41":"data.describe()","a9ae912a":"#check missing values\ndata.isnull().sum()","129aec5e":"#countplot \nsns.countplot(x='Outcome',data = data)\ny = data.Outcome\nND,D = y.value_counts()\nprint('Number of non diabetic patients :', ND)\nprint('Number of diabetic patients :' , D)","07a1c1c4":"x=data.drop('Outcome',axis=1)\nx.head()","bc92514c":"data = pd.melt(data,id_vars=\"Outcome\",\n                    var_name=\"features\",\n                    value_name='value')\nplt.figure(figsize=(10,10))\nsns.swarmplot(x=\"features\", y=\"value\", hue=\"Outcome\", data=data)\n\nplt.xticks(rotation=90)","9f8d49c1":"#corrlation heat map\nf,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(x.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)","11ca6804":"#train-test split\nfrom sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=2021)","324662a7":"# data standardization with  sklearn\nfrom sklearn.preprocessing import StandardScaler\n\n# fit on training data column\nscale = StandardScaler().fit(x_train)\n    \n# transform the training data column\nx_train = scale.transform(x_train)\n    \n # transform the testing data column\nx_test = scale.transform(x_test)","a895dc0f":"from sklearn.linear_model import LogisticRegression","1a472900":"model = LogisticRegression()\nmodel.fit(x_train,y_train)\nprediction=model.predict(x_test)","3aa1179c":"from sklearn import metrics","091b1add":"print('The accuracy of the Logistic Regression is',metrics.accuracy_score(prediction,y_test))","9cc41c87":"print('The classification report:\\n',metrics.classification_report(prediction,y_test))","bc27b574":"# **EDA**","994d2c16":"## **Data Preprocessing**","904949b8":"The data is not balanced.","ee2b598e":"## **Model Evaluaion**","a94e75f7":"No missing values to handle.","eb466fbc":"# **Model Fitting**","af766118":"**From the above plot we can see that from the columns of pregnencies, glucose, insulin, BMI and skin thickness we can easily segregate the diabetic ones from those who are not.That means these features can serve as good explanatory variables.**","26b90011":"**Therefore, the logistic regression model gives an accuracy of approx 77.7% .**","49dd8790":"## **Logistic Regression**","701d9ead":"The correlation between age and pregnancies is 0.5,i.e , there is a potential correlation between them.","376eecab":"It is better to fit the scaler on the training data and then use it to transform the testing data. This would avoid any data leakage during the model testing process.","d47ed6c9":"Here, I only tested the model with Logistic Regression, I will post an updated work comparing different ML algorithms to the data."}}