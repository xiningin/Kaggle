{"cell_type":{"98bb84fe":"code","1103219b":"code","3df2df27":"code","3ff22bdf":"code","13e15736":"code","c335ae48":"code","c8435d3f":"code","dd666033":"code","8a26bb15":"code","6d8e1ab4":"code","7bfb91e7":"code","51bb1693":"code","00a29a82":"code","652d0560":"code","5298e894":"markdown","230f8e35":"markdown"},"source":{"98bb84fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1103219b":"# Seed set for reproducibility\nnp.random.seed(0) \n\n# Read in all data\nfootprints_data = pd.read_csv(\"..\/input\/philadelphia-buildings-database\/PHL_BUILDING_FOOTPRINTS.csv\")\nproperties_data = pd.read_csv(\"..\/input\/philadelphia-buildings-database\/PHL_OPA_PROPERTIES.csv\")\n","3df2df27":"# Check first five entries in footprint dataset\nfootprints_data.head()","3ff22bdf":"\n# Count missing entries\nmissing_f_values_count = footprints_data.isnull().sum()","13e15736":"# How many total missing values do we have?\ntotal_cells = np.product(footprints_data.shape)\ntotal_missing = missing_f_values_count.sum()\n\npercent_missing = (total_missing\/total_cells) * 100\nprint('Percent of data that is missing: ', percent_missing)","c335ae48":"missing_f_values_count","c8435d3f":"# Drop missing values\ncolumns_with_na_dropped = footprints_data.dropna()","dd666033":"# Just how much data did we lose?\nprint(\"Columns in original dataset: %d \\n\" % footprints_data.shape[1])\nprint(\"Columns with na's dropped: %d\" % columns_with_na_dropped.shape[1])","8a26bb15":"# Check first five entries in properties dataset\nproperties_data.head()","6d8e1ab4":"# Count missing entries\nmissing_p_values_count = properties_data.isnull().sum()","7bfb91e7":"# How many total missing values do we have?\ntotal_cells = np.product(properties_data.shape)\ntotal_missing = missing_p_values_count.sum()\n\npercent_missing = (total_missing\/total_cells) * 100\nprint('Percent of properties data that is missing: ', percent_missing)","51bb1693":"missing_p_values_count","00a29a82":"# Drop missing values\ncolumns_with_na_dropped = properties_data.dropna(axis=1)","652d0560":"# Just how much data did we lose?\nprint(\"Columns in original dataset: %d \\n\" % properties_data.shape[1])\nprint(\"Columns with na's dropped: %d\" % columns_with_na_dropped.shape[1])","5298e894":"# Explore Building Footprints Dataset","230f8e35":"# Explore Property Dataset"}}