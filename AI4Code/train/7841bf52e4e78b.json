{"cell_type":{"0d1cd9b2":"code","81c4234e":"code","35d1c018":"code","d5c8f3c9":"code","ed0aa88c":"code","f762c200":"code","e1f955f2":"code","ab98aec6":"code","3080d896":"code","31287494":"code","31f4bc70":"code","a517ab26":"code","fc79b9f4":"code","0f992653":"code","9c1f0227":"code","2aa94112":"code","288aa3b2":"code","03f532fc":"code","978ff34f":"code","58481675":"code","d952458c":"code","81399daa":"code","f5881864":"code","4320c985":"code","65f5014c":"code","df1e1fa1":"code","ab8dae28":"code","33eefdd5":"code","be7f090b":"code","874a9855":"code","090f9b89":"code","fafeb4dd":"code","246bff69":"code","e302af59":"code","57373da1":"code","6d6c655a":"code","3f2c3242":"code","97412da5":"code","aba33352":"code","0d7f30f6":"code","52231f9a":"code","eb8a392d":"code","db72694c":"code","bcebaa0e":"code","26e758b2":"code","2d238fe1":"code","564b0add":"code","06d148f0":"code","470c5291":"code","0f011e5a":"code","85bffec9":"code","4eec3b5f":"code","36185332":"code","2edcf67e":"code","1c414cc2":"code","c8c2369d":"code","e9b01176":"code","0493b9f2":"code","88e60bef":"code","f5b21043":"code","7154fd04":"code","821c9955":"code","dd6d9b4f":"code","f27ad459":"code","5f4e8d68":"code","4bcaac17":"code","d75fee1d":"code","420076e5":"code","0bfab9e0":"code","93fe1fa6":"code","11ae8924":"code","63bc0fc9":"code","46f76b12":"code","d6059c80":"code","69a8a819":"code","26c286a3":"code","9b147ba1":"code","956b9533":"markdown","ddacfd81":"markdown","8095d0a3":"markdown","b8bcb82b":"markdown","ce671a94":"markdown","fb908fde":"markdown","65f4cde1":"markdown","ffbfcf8b":"markdown","41ad639e":"markdown","99317407":"markdown","3b881277":"markdown","ec2f659c":"markdown","810e46e5":"markdown","4562e516":"markdown","7a6b8e44":"markdown","17042dca":"markdown","bf3f070b":"markdown","2c76e9bd":"markdown","2c0fb576":"markdown","ec4c60c5":"markdown","e949e5ba":"markdown","cb8c5656":"markdown","22213866":"markdown","c0f78d00":"markdown","c7d0d1ff":"markdown","c83289fa":"markdown","36d4f8a2":"markdown","707149c9":"markdown","3b961cea":"markdown","edc50fd3":"markdown","7e7fcbeb":"markdown","bb97d44b":"markdown","2a0dcd36":"markdown","46c46a34":"markdown","24acb549":"markdown","4941274f":"markdown","51b68b13":"markdown","61843127":"markdown","1965fef2":"markdown","f63ae8b9":"markdown","abaf922f":"markdown","71732fd5":"markdown","15bd8d61":"markdown","18e63974":"markdown","d27ab998":"markdown","f4a365b5":"markdown","1dd8d54c":"markdown","3d3b6a0b":"markdown","2cc54a27":"markdown","e49685ac":"markdown","5506d2da":"markdown","54177492":"markdown","162b26c5":"markdown","2f1be0f9":"markdown"},"source":{"0d1cd9b2":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","81c4234e":"import pandas as pd  # data processing\nimport numpy as np # linear algebra \n\n# For Visualisation\nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport missingno as msno\nimport copy\nimport itertools\n\n# For scaling the data\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\n\n# To perform K-means clustering\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\n#To perform hierarchical clustering\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\n\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n\npd.set_option('display.max_rows', None )\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.max_colwidth', -1)","35d1c018":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d5c8f3c9":"# Importing Country-data.csv\ncountry = pd.read_csv('\/kaggle\/input\/country\/Country-data.csv')\ncountry.head()","ed0aa88c":"# Importing data-dictionary+.csv\ndictionary = pd.read_csv('\/kaggle\/input\/country\/data-dictionary.csv')\ndictionary","f762c200":"#Shape of dataset\nprint(\"There are {} countries and {} features: \".format(country.shape[0],country.shape[1]))","e1f955f2":"country.info()","ab98aec6":"# Display null value percentage of country data\ndisplay(round(100*(country.isnull().sum()\/len(country.index)), 2))","3080d896":"#finding duplicates\na = str(len(country[country.duplicated()]))\nprint('There are ' + a +' duplicates in dataset')","31287494":"country['exports'] = country['exports']*country['gdpp']\/100\ncountry['imports'] = country['imports']*country['gdpp']\/100\ncountry['health'] = country['health']*country['gdpp']\/100\nprint('After Conversion')\ncountry.head()","31f4bc70":"# Checking outliers at 1%, 5%, 10%, 25%,50%,75%,90%,95% and 99%\ncountry.describe(percentiles=[.01,.05,.1,.25,.5,.75,.90,.95,.99])","a517ab26":"plt.figure(figsize=(15,10))\nsns.heatmap(country.corr(),annot=True, linewidths=.5, cmap=\"YlGnBu\")\nplt.show()","fc79b9f4":"country.columns","0f992653":"a = ['child_mort', 'exports', 'health', 'imports', 'income',\n       'inflation', 'life_expec', 'total_fer', 'gdpp']\nfig = plt.figure(figsize =(15,15))\nsns.set(style=\"whitegrid\")\nfor i in enumerate(a):\n    plt.subplot(3,3, i[0]+1)\n    ax = sns.violinplot(x= i[1], data = country,  palette=\"Set2\",scale=\"count\", inner=\"quartile\", orient = 'v')\nplt.show()","9c1f0227":"a = ['child_mort', 'exports', 'health', 'imports', 'income',\n       'inflation', 'life_expec', 'total_fer', 'gdpp']\nfig = plt.figure(figsize =(15,15))\nfor i,j in itertools.zip_longest(a, range(len(a))):\n    plt.subplot(3,3,j+1)\n    ax = sns.distplot(country[i])","2aa94112":"# To keep original dataframe\ncountry_original = country.copy()","288aa3b2":"# Checking head of data\ncountry_original.head()","03f532fc":"# Checking column names\ncountry.columns","978ff34f":"gdpp_q4 = country['gdpp'].quantile(0.95)\nfer_q4 = country['total_fer'].quantile(0.95)\n#inflation_q4 = country['inflation'].quantile(0.95)\nincome_q4 = country['income'].quantile(0.95)\nimports_q4 = country['imports'].quantile(0.95)\nhealth_q4 = country['health'].quantile(0.95)\nexports_q4 = country['exports'].quantile(0.95)\n\n\ncountry['gdpp'][country['gdpp']>= gdpp_q4 ] = gdpp_q4\ncountry['total_fer'][country['total_fer']>= fer_q4] = fer_q4\n#country['inflation'][country['inflation']>= inflation_q4] = inflation_q4\ncountry['income'][country['income']>= income_q4] = income_q4\ncountry['imports'][country['imports']>= imports_q4 ] = imports_q4\ncountry['health'][country['health']>= health_q4 ] = health_q4\ncountry['exports'][country['exports']>= exports_q4 ] = exports_q4","58481675":"# Checking outliers at 1%, 5%, 10%, 25%,50%,75%,90%,95% and 99%\ncountry.describe(percentiles=[.01,.05,.1,.25,.5,.75,.90,.95,.99])","d952458c":"# Checking outliers at 1%, 5%, 10%, 25%,50%,75%,90%,95% and 99%\ncountry_original.describe(percentiles=[.01,.05,.1,.25,.5,.75,.90,.95,.99])","81399daa":"fig = plt.figure(figsize =(25,25))\nsns.pairplot(data=country, corner=True, diag_kind='kde')\nplt.show()","f5881864":"# rescaling\ncountry_df = country[['child_mort', 'exports', 'health', 'imports', 'income',\n       'inflation', 'life_expec', 'total_fer', 'gdpp']]\n\n# instantiate\nscaler = StandardScaler()\n\n# fit_transform\ncountry_df_scaled = scaler.fit_transform(country_df)\ncountry_df_scaled.shape","4320c985":"country_df_scaled = pd.DataFrame(country_df_scaled)\ncountry_df_scaled.columns = ['child_mort', 'exports', 'health', 'imports', 'income',\n       'inflation', 'life_expec', 'total_fer', 'gdpp']\ncountry_df_scaled.head()","65f5014c":"# Checking outliers at 1%, 5%, 10%, 25%,50%,75%,90%,95% and 99%\ncountry_df_scaled.describe()","df1e1fa1":" def hopkins(X):\n    d = X.shape[1]\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","ab8dae28":"#Use the Hopkins Statistic function by passing the above dataframe as a paramter\nhopkins(country_df_scaled)","33eefdd5":"# elbow-curve\/SSD\nks=list(range(2,10))\nplt.figure(figsize=(10,5))\nssd = []\nfor num_clusters in ks:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(country_df_scaled)   \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.title('Elbow Method',fontsize=15)\nplt.xlabel('Number of clusters',fontsize=15)\nplt.ylabel('Sum of Squared distance',fontsize=15)\nplt.plot(ks,ssd, marker='o')\nplt.show()","be7f090b":"# silhouette analysis\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(country_df_scaled)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(country_df_scaled, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))\n    ","874a9855":"# k-means with some arbitrary k\nkmeans = KMeans(n_clusters=4, max_iter=300, random_state = 50)\nkmeans.fit(country_df_scaled)","090f9b89":"kmeans.labels_","fafeb4dd":"# assign the label\ncountry['cluster_id4'] = kmeans.labels_\ncountry.head()","246bff69":"plt.figure(figsize=(15,5))\nplt.subplot(121)\nsns.countplot(x= \"cluster_id4\" ,data = country)\nplt.subplot(122)\ncountry[\"cluster_id4\"].value_counts().plot.pie(autopct = \"%1.1f%%\",startangle = 60,\n                                              labels=[\"cluster_0\",\"cluster_1\",\"cluster_2\", \"cluster_3\"])\nplt.title(\"Distribution of countries based on clusters\")\nplt.show()","e302af59":"# box plot\nplt.figure(figsize=(15,5))\nplt.subplot(131)\nsns.boxplot(x='cluster_id4', y='gdpp', data=country)\nplt.subplot(132)\nsns.boxplot(x='cluster_id4', y='income', data=country)\nplt.subplot(133)\nsns.boxplot(x='cluster_id4', y='child_mort', data=country)\nplt.show()","57373da1":"fig = plt.figure(figsize =(20,20))\nsns.pairplot(data=country,diag_kind='kde',vars=[\"child_mort\",\"income\",\"gdpp\"],hue='cluster_id4',palette=\"husl\")\nplt.show()","6d6c655a":"plt.figure(figsize=(15,6))\nplt.subplot(131)\nsns.barplot(x= \"cluster_id4\", y = \"gdpp\" ,data = country)\nplt.subplot(132)\nsns.barplot(x= \"cluster_id4\", y = \"income\" ,data = country)\nplt.subplot(133)\nsns.barplot(x= \"cluster_id4\", y = \"child_mort\" ,data = country)\nplt.show()","3f2c3242":"# final model with k=3\nkmeans = KMeans(n_clusters=3, max_iter=300, random_state = 50)\nkmeans.fit(country_df_scaled)","97412da5":"kmeans.labels_","aba33352":"# assign the label\ncountry['cluster_id'] = kmeans.labels_\ncountry.head()","0d7f30f6":"plt.figure(figsize=(15,5))\nplt.subplot(121)\nsns.countplot(x= \"cluster_id\" ,data = country)\nplt.subplot(122)\ncountry[\"cluster_id\"].value_counts().plot.pie(autopct = \"%1.1f%%\",startangle = 60,\n                                              labels=[\"cluster_0\",\"cluster_1\",\"cluster_2\"])\nplt.title(\"Distribution of countries based on clusters\")\nplt.show()","52231f9a":"# box plot\nplt.figure(figsize=(15,5))\nplt.subplot(131)\nsns.boxplot(x='cluster_id', y='gdpp', data=country)\nplt.subplot(132)\nsns.boxplot(x='cluster_id', y='income', data=country)\nplt.subplot(133)\nsns.boxplot(x='cluster_id', y='child_mort', data=country)\nplt.show()","eb8a392d":"fig = plt.figure(figsize =(20,20))\nsns.pairplot(data=country,diag_kind='kde',vars=[\"child_mort\",\"income\",\"gdpp\"],hue='cluster_id',palette=\"husl\")\nplt.show()","db72694c":"plt.figure(figsize=(15,6))\nplt.subplot(131)\nsns.barplot(x= \"cluster_id\", y = \"gdpp\" ,data = country)\nplt.subplot(132)\nsns.barplot(x= \"cluster_id\", y = \"income\" ,data = country)\nplt.subplot(133)\nsns.barplot(x= \"cluster_id\", y = \"child_mort\" ,data = country)\nplt.show()","bcebaa0e":"plt.figure(figsize=(15,5))\ngdp_developed1=country[country['cluster_id']== 1].sort_values(by='gdpp',ascending=False)\nsns.barplot(x='country',y='gdpp',data=gdp_developed1)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","26e758b2":"plt.figure(figsize=(15,5))\nincome_developed1=country[country['cluster_id']== 1].sort_values(by='income',ascending=False)\nsns.barplot(x='country',y='income',data=income_developed1)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","2d238fe1":"plt.figure(figsize=(15,5))\nchild_developed1=country[country['cluster_id']== 1].sort_values(by='child_mort',ascending=False)\nsns.barplot(x='country',y='child_mort',data=child_developed1)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","564b0add":"#top 5 developed countries based on GDPP\nprint('top 5 developed countries based on high GDPP\\n')\nfor countries in gdp_developed1.country[:5]:\n    print(countries)\n\n#top 5 developed countries based on income\nprint('\\ntop 5 developed countries based on high income\\n')\nfor countries in income_developed1.country[:5]:\n    print(countries)\n    \n#top 10 developed countries based on childmort\nprint('\\ntop 5 developed countries based on child low mortality\\n')\nfor countries in child_developed1.country[:5]:\n    print(countries)","06d148f0":"plt.figure(figsize=(16,5))\ngdp_developing1=country[country['cluster_id']== 0].sort_values(by='gdpp',ascending=False)\nsns.barplot(x='country',y='gdpp',data=gdp_developing1)\nplt.xticks(rotation =90,fontsize =9)\nplt.show()","470c5291":"plt.figure(figsize=(16,5))\nincome_developing1=country[country['cluster_id']== 0].sort_values(by='income',ascending=False)\nsns.barplot(x='country',y='income',data=income_developing1)\nplt.xticks(rotation =90,fontsize =9)\nplt.show()","0f011e5a":"plt.figure(figsize=(16,5))\nchild_developing1=country[country['cluster_id']== 0].sort_values(by='child_mort',ascending=False)\nsns.barplot(x='country',y='child_mort',data=child_developing1)\nplt.xticks(rotation =90,fontsize =9)\nplt.show()","85bffec9":"#top 5 developing countries based on GDPP\nprint('top 5 developing countries based on high GDPP\\n')\nfor countries in gdp_developing1.country[:5]:\n    print(countries)\n\n#top 5 developed countries based on income\nprint('\\ntop 5 developing countries based on high income\\n')\nfor countries in income_developing1.country[:5]:\n    print(countries)\n    \n#top 5 developed countries based on childmort\nprint('\\ntop 5 developing countries based on child low mortality\\n')\nfor countries in child_developing1.country[:5]:\n    print(countries)","4eec3b5f":"plt.figure(figsize=(15,5))\ngdp_underdeveloped1=country[country['cluster_id']== 2].sort_values(by='gdpp',ascending=False)\nsns.barplot(x='country',y='gdpp',data=gdp_underdeveloped1)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","36185332":"plt.figure(figsize=(15,5))\nincome_underdeveloped1=country[country['cluster_id']== 2].sort_values(by='income',ascending=False)\nsns.barplot(x='country',y='income',data=income_underdeveloped1)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","2edcf67e":"plt.figure(figsize=(15,5))\nchild_underdeveloped1=country[country['cluster_id']== 2].sort_values(by='child_mort',ascending=False)\nsns.barplot(x='country',y='child_mort',data=child_underdeveloped1)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","1c414cc2":"#top 5 underdeveloped countries based on GDPP\nprint('top 5 underdeveloped countries based on high GDPP\\n')\nfor countries in gdp_underdeveloped1.country[:5]:\n    print(countries)\n\n#top 5 underdeveloped countries based on income\nprint('\\ntop 5 underdeveloped countries based on high income\\n')\nfor countries in income_underdeveloped1.country[:5]:\n    print(countries)\n    \n#top 5 underdeveloped countries based on childmort\nprint('\\ntop 10 underdeveloped countries based on child low mortality\\n')\nfor countries in child_underdeveloped1.country[:5]:\n    print(countries)","c8c2369d":"country_df_scaled.head()","e9b01176":"country.head()","0493b9f2":"# single linkage\nplt.figure(figsize=(15,7))\nsns.set(style='white')\nmergings = linkage(country_df_scaled, method=\"single\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","88e60bef":"# complete linkage\nplt.figure(figsize=(15,7))\nsns.set(style='white')\nmergings = linkage(country_df_scaled, method=\"complete\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","f5b21043":"# 3 clusters\ncluster_labels = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels","7154fd04":"# assign cluster labels\ncountry['cluster_labels'] = cluster_labels\ncountry.head()","821c9955":"plt.figure(figsize=(15,5))\nplt.subplot(121)\nsns.countplot(x= \"cluster_labels\" ,data = country)\nplt.subplot(122)\ncountry[\"cluster_labels\"].value_counts().plot.pie(autopct = \"%1.1f%%\",startangle = 60,\n                                              labels=[\"cluster_0\",\"cluster_1\",\"cluster_2\"])\nplt.title(\"Distribution of countries based on clusters\")\nplt.show()","dd6d9b4f":"# box plot\nplt.figure(figsize=(16,5))\nplt.subplot(131)\nsns.boxplot(x='cluster_labels', y='gdpp', data=country)\nplt.subplot(132)\nsns.boxplot(x='cluster_labels', y='income', data=country)\nplt.subplot(133)\nsns.boxplot(x='cluster_labels', y='child_mort', data=country)\nplt.show()","f27ad459":"fig = plt.figure(figsize =(20,20))\nsns.pairplot(data=country,diag_kind='kde',vars=[\"child_mort\",\"income\",\"gdpp\"],hue='cluster_labels',palette=\"husl\")\nplt.show()","5f4e8d68":"plt.figure(figsize=(15,6))\nplt.subplot(131)\nsns.barplot(x= \"cluster_labels\", y = \"gdpp\" ,data = country)\nplt.subplot(132)\nsns.barplot(x= \"cluster_labels\", y = \"income\" ,data = country)\nplt.subplot(133)\nsns.barplot(x= \"cluster_labels\", y = \"child_mort\" ,data = country)\nplt.show()","4bcaac17":"plt.figure(figsize=(16,5))\ngdp_developing2=country[country['cluster_id']== 1].sort_values(by='gdpp',ascending=False)\nsns.barplot(x='country',y='gdpp',data=gdp_developing2)\nplt.xticks(rotation =90,fontsize =9)\nplt.show()","d75fee1d":"plt.figure(figsize=(16,5))\nincome_developing2=country[country['cluster_id']== 1].sort_values(by='income',ascending=False)\nsns.barplot(x='country',y='income',data=income_developing2)\nplt.xticks(rotation =90,fontsize =9)\nplt.show()","420076e5":"plt.figure(figsize=(16,5))\nchild_developing2=country[country['cluster_id']== 0].sort_values(by='child_mort',ascending=False)\nsns.barplot(x='country',y='child_mort',data=child_developing2)\nplt.xticks(rotation =90,fontsize =9)\nplt.show()","0bfab9e0":"#top 5 developing countries based on GDPP\nprint('top 5 developing countries based on high GDPP\\n')\nfor countries in gdp_developing2.country[:5]:\n    print(countries)\n\n#top 5 developing countries based on income\nprint('\\ntop 5 developing countries based on high income\\n')\nfor countries in income_developing2.country[:5]:\n    print(countries)\n    \n#top 5 developing  countries based on childmort\nprint('\\ntop 5 developing countries based on child low mortality\\n')\nfor countries in child_developing2.country[:5]:\n    print(countries)","93fe1fa6":"plt.figure(figsize=(15,5))\ngdp_underdeveloped2=country[country['cluster_id']== 0].sort_values(by='gdpp',ascending=False)\nsns.barplot(x='country',y='gdpp',data=gdp_underdeveloped2)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","11ae8924":"plt.figure(figsize=(15,5))\nincome_underdeveloped2=country[country['cluster_id']== 2].sort_values(by='income',ascending=False)\nsns.barplot(x='country',y='income',data=income_underdeveloped2)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","63bc0fc9":"plt.figure(figsize=(15,5))\nchild_underdeveloped2=country[country['cluster_id']== 0].sort_values(by='child_mort',ascending=False)\nsns.barplot(x='country',y='child_mort',data=child_underdeveloped2)\nplt.xticks(rotation =90,fontsize =10)\nplt.show()","46f76b12":"#top 5 underdeveloped countries based on GDPP\nprint('top 5 underdeveloped countries based on high GDPP\\n')\nfor countries in gdp_underdeveloped2.country[:5]:\n    print(countries)\n\n#top 5 underdeveloped countries based on income\nprint('\\ntop 5 underdeveloped countries based on high income\\n')\nfor countries in income_underdeveloped2.country[:5]:\n    print(countries)\n    \n#top 5 underdeveloped countries based on childmort\nprint('\\ntop 5 underdeveloped countries based on child low mortality\\n')\nfor countries in child_underdeveloped2.country[:5]:\n    print(countries)","d6059c80":"k_needy= country[country['cluster_id']== 2]\nk_needy=k_needy.sort_values(by=['gdpp','income','child_mort'],ascending=[True,True,False])\n#Top 10 countries having dire need of aid based on overall conditions\nprint('\\nTop 5 countries having dire need of aid based on overall conditions\\n')\nfor countries in k_needy.country[:5]:\n    print(countries)","69a8a819":"k_needy.shape","26c286a3":"h_needy=country[country['cluster_labels']== 0]\nh_needy=h_needy.sort_values(by=['gdpp','income','child_mort'],ascending=[True,True,False])\n#Top 10 countries having dire need of aid based on overall conditions\nprint('\\nTop 5 countries having dire need of aid based on overall conditions\\n')\nfor countries in h_needy.country[:5]:\n    print(countries)","9b147ba1":"h_needy.shape","956b9533":"###  silhouette analysis","ddacfd81":"## 2.3 Data Conversion ","8095d0a3":"### Bivariate Analysis - Scatterplot","b8bcb82b":"# 1. Load libraries and read the data","ce671a94":"# 2. Exploratory Data Analysis","fb908fde":"###  Elbow Method","65f4cde1":"### 3. Under-Developed Countries","ffbfcf8b":"###  K-Means with 4 clusters","41ad639e":"**Bivariate Analysis**\n1. Linear relation is found between gdpp-income,imports-exports,total_fer-child_mort\n2. Rectangular hyperbola curve is generated by gdpp-child_mort.\n3. If gdpp is HIGH:\n     - child mortality is LOW\n     - income is HIGH\n     - inflation is LOW\n     - life expectancy is HIGH\n     - total fertility is LOW\n     - health, imports and exports are MEDIUM","99317407":"## 2.6  Univariate & Bivariate Analysis","3b881277":"## 3. Scaling Data with StandardScaler","ec2f659c":"## Top Direst Needy Countries\n- As per K-Means\n- As per HIERARCHICAL CLUSTERING","810e46e5":"# Clustering Assignment","4562e516":"### 2. Developing Countries","7a6b8e44":"#  Modelling","17042dca":"**From above plots, we can conclude that clusters are not proper, as it is overlapping.\nSo we will choose 3 clusters for further analysis**","bf3f070b":"## Conclusion","2c76e9bd":"## 1.2  Read the data","2c0fb576":"From above correleation heatmap, we can get the following insights:\n\n- exports is highly correlated with imports.\n- health, exports, income,imports are highly correlated with gdpp.\n- child_mort is having high negative correlation with life_expec.\n- total_fer is highly positively correlated with child_mort and negatively correlated with life_expec","ec4c60c5":"## 1.1  Load libraries","e949e5ba":"### From the above plot, I conclude the following points:","cb8c5656":"## Business Objectives\n- Our main task is to cluster the countries by the factors mentioned above and then present your solution and recommendations to the CEO.\n","22213866":"### 3. Under-Developed Countries","c0f78d00":"### Univariate Analysis - distplot for each Numerical Variable","c7d0d1ff":" ### Single Linkage","c83289fa":"### Submitted By:\nSanskriti Kumari","36d4f8a2":"### Univariate Analysis - Violinplot for each Numerical Variable","707149c9":"- **From above datatype information all the data types are in correct format.**","3b961cea":"Converting exports, health and imports variables into specified percentages of GDPP","edc50fd3":"I Choose K-Means Clustering Algorithm over Hierarchical Clustering Algorithm because:\n- The clusterID value counts were properly divided and visualizing each cluster was possible\n- Here, the countries are categorised into list of developed countries, developing countries and under-developed countries.\n\n- In Developed countries, we can see the GDP per capita and income is high where as Death of children under 5 years of age per 1000 live births i.e. child-mort is very low, which is expected.\n\n- In Developing countries and Under-developed countries, the GDP per capita and income are low and child-mort is high. Specially, for under-developed countries, the death rate of children is very high.","7e7fcbeb":"### 1. K-Means","bb97d44b":"### 2. Developing Countries","2a0dcd36":"## 2.5 Correlation Heatmap","46c46a34":"###  K-Means with 3 clusters","24acb549":"## Business Understanding\n- HELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\n- After the recent funding programmes, they have been able to raise around $10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n\n- Our job is to categorise the countries using some socio-economic and health factors that determine the overall development of the country. Then we need to suggest the countries which the CEO needs to focus on the most. ","4941274f":"## 4. K Means Clustering","51b68b13":"##  HIERARCHICAL CLUSTERING","61843127":"## 2.1 Shape and Datatype of data ","1965fef2":"## Recommendations\n- From bar chats, we can clearly see the socio-economic and heath situation of the under developed countries.\n- In countries like Haiti, Sierra Leone, Chad, etc., the death rate of children under 5 years of age per 1000 (child-mort) is high.\n- Countries like Burundi, Congo, Niger, etc., GDP per capita is very low & the income per person is also low. So, these countries are considered as Poor countries.\n- If Child Mortality Rate is decreased and GDPP , Income is increased in Under-developed countries, the need will be resolved.","f63ae8b9":"## 2.4 Describing Data","abaf922f":"###  Hopkins Statistics:","71732fd5":"##### As per above diagrams, let's selects no. of clusters as 3","15bd8d61":"**Above bar chart shows that:**\n- All the developed countries are having high GDP per capita values, developing countries are having average GDP per capita values and poor countries are having the least GDPP values.\n- All the developed countries are having high income per person, developing countries are having average income per person and poor countries are having the least income per person.\n- All the developed countries are having low number of death of children under 5 years of age per 1000 live births, developing countries are having average death rate and poor countries are having the least death rate.","18e63974":"From above three plots , we can say that\n- Countries with high gdpp and low child mortality are Developed countries : cluster1\n- Countries with low gdpp and low child mortality are Developing countries : cluster0\n- Countries with low gdpp and high child mortality are Under-developing countries : cluster2","d27ab998":"###  1. Developed Countries","f4a365b5":"## 2.2  Missing and Duplicate Values","1dd8d54c":"**Univariate analysis**\n1. Only Inflation is right-skewed whereas all the rest features are left-skewed.\n2. total_fer and gdpp are bimodal whereas all the rest features are unimodal.","3d3b6a0b":"## Bar Charts of clustered countries wrt gdpp, income, child mortality\n- Developed Countries: cluster_id =1\n- Developing Countries: cluster_id =0\n- Under-Developed Countries: cluster_id =2","2cc54a27":"### 1. Hierarchical Clustering","e49685ac":"From the above table, I conclude the following points:\n\n- There is atleast one outlier in all the features\n- In case of gdpp and health, there are too many outliers.\n- Since we have limited number of countries(167), removing these outliers would shrink the shape of data and the under-developed countries which are in actual dire need may not contribute to the dataset.\n- There could be a possibility in child_mort's subplot where those outliered-countries could be the needy ones because of the high child-mortality rate.\n- Removing outliers is not a good option as per the above conditions. Hence, I choose to Cap outliers for further analysis.","5506d2da":"- **The above list shows no missing values**","54177492":"**By comparing averages of K-means and Hierarchical Clustering, we can conclude that**\n\n- Cluster 0 belongs to Under-Developed Countries,\n- Cluster 2 belongs to Developed Countries\n- Cluster 1 belongs to Developing Countries.","162b26c5":"**From above scatter plot**\n\n- In gdpp x child_mort, there is some clustering where gdpp is more, there child-mort is low, which is a FACT.\n- In gdpp x income, there is some clustering where gdpp is more, then income is also more.\n- In income x child_mort, there is some clustering where if child_mort is more, then income is less.","2f1be0f9":"## 2.7 Outliers Treatment"}}