{"cell_type":{"f82fbc36":"code","48b891eb":"code","62f49311":"code","8a748d5d":"code","90e35d95":"code","a36709d6":"code","cb4c9ea2":"code","48ff2406":"code","d36f4444":"code","bcb3df95":"code","7bd94fbf":"code","9a9b33c1":"code","baf1f525":"code","dce3156d":"code","29994e08":"markdown","a3489df7":"markdown","5f9d4d02":"markdown","4452c028":"markdown","26791b8e":"markdown","f4bf88c0":"markdown","b5329a92":"markdown","437488c5":"markdown","e579b203":"markdown","d191a6b2":"markdown","b548ba87":"markdown"},"source":{"f82fbc36":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","48b891eb":"df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","62f49311":"df.describe()","8a748d5d":"df.head(10)","90e35d95":"#missing data\nnull_total = df.isnull().sum().sort_values(ascending=False)\nnull_percentage = (null_total\/df.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([null_total, null_percentage], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(10)","a36709d6":"# Lets drop those features\n\ndf = df.drop(['PoolQC','MiscFeature','Alley','Fence'],axis = 1)","cb4c9ea2":"# importing some necesaary stuff\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ncorr = df.corr()\nf, ax = plt.subplots(figsize=(15, 12))\nsns.heatmap(corr, vmax=.8, square=True);","48ff2406":"k = 10 #This is for determining top 10 important features\ncols = corr.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(df[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","d36f4444":"df_train = df[['OverallQual','TotalBsmtSF','1stFlrSF','GrLivArea','FullBath','GarageCars','GarageArea','YearBuilt','TotRmsAbvGrd']]","bcb3df95":"print(df.shape)\ndf.head(10)","7bd94fbf":"xtrain = df_train\nytrain = df['SalePrice']","9a9b33c1":"xtrain.head(5)","baf1f525":"ytrain.head(5)","dce3156d":"print(xtrain.shape)\nprint(ytrain.shape)","29994e08":"Now, lets update data_frame and see how it looks. we will do necessary changes if our performance metric is low.","a3489df7":"So, xtrain contains all the important features we computed before and ytrain contains corresponding SalePrice of house.","5f9d4d02":"Oh ! Seems we missed out a couple of things. Year built and TotRmsAbvGrd. Cool !!!","4452c028":"Okay !! Now lets try to concentrate on some useful stuff for our salesprice. The best way to do it is to use seaborn HEAT MAPS.","26791b8e":"QUICk!!! Lets complete loading data.","f4bf88c0":"OOPS ! Seems Like there are lot of null values. Lets have a detailed look at features having lot of null values.","b5329a92":"So far good. Now lets do some renaming and Modelling stuff.","437488c5":"Seems some people have to say goodbye to data !! I have decided to remove features like PoolQC,Misc Feature,Alley and Fence whose missing value percentage is greater than 50 percent !! ","e579b203":"Now we have to do similar stuff for test data. Lets see modelling in other notebook.\n\nMean while, if you like this basic analysis, please upvote!! That would keep me motivated.","d191a6b2":"Cmon Quick !!! we have got some important features to notedown. Its simple, color closer to white w.r.t sales price is important feature in determining sales price. color closer to black is to be ignored. \n\nwe can observe that OverallQual,TotalBsmtSF,1stflrSF,GrLivArea,FullBath,GarageCars,GarageArea are very very important features. \n\nOKAY !! So, what are we waiting for lets observe them more closely and print them.","b548ba87":"Lets do some formalities :)"}}