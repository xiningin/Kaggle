{"cell_type":{"6df2a396":"code","ab2a712c":"code","ee618d4f":"code","5324f33d":"code","96562428":"code","18d4cd0b":"code","83c35d78":"code","9c38eb01":"code","d248267a":"code","de33b4ff":"code","994be65c":"code","414ca06c":"code","d32aaed0":"code","c4f28d1b":"code","ec4ad11f":"code","e1e346d9":"code","b4768a91":"code","63d8660b":"code","751c3bf4":"code","f60e5231":"code","450a9d9e":"code","887bfb36":"code","d638e6da":"code","afe076da":"code","aae0fb1b":"code","4db7c4dd":"code","1cb3f744":"code","95aaf126":"markdown","027c8a3a":"markdown","01f9f4cd":"markdown","a2f0ffc2":"markdown","9757daf3":"markdown","70ccb89f":"markdown","45ccb610":"markdown","ee3d4fdc":"markdown","d2c09ca0":"markdown","03059349":"markdown","edc9fbf9":"markdown","72f52614":"markdown","f6d13106":"markdown","c95e9990":"markdown","66d95a1c":"markdown","91c74720":"markdown","7afff143":"markdown","3ec28635":"markdown","3d16d3e4":"markdown","556195fd":"markdown","96d18b83":"markdown","0d71690e":"markdown","77855512":"markdown","61409bd9":"markdown","b6ab7ffb":"markdown","ca7c8363":"markdown","3206502d":"markdown","bfcb7910":"markdown","56c14625":"markdown","dc04dc30":"markdown","3b6d9833":"markdown","af61afce":"markdown","443e298f":"markdown"},"source":{"6df2a396":"import pandas as pd\nimport numpy as np\n%matplotlib inline","ab2a712c":"import plotly.offline as pyo\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff","ee618d4f":"df = pd.read_csv(\"..\/input\/schoolearnings\/schoolearnings.csv\")\n\ntable = ff.create_table(df)\npyo.iplot(table)","5324f33d":"num = 100\nx = np.random.randn(num)\ny = np.random.randn(num)\n\n# Create a trace\n\ntrace = go.Scatter(\n    x = x,\n    y = y,\n    mode = 'markers'\n)\n\ndata = [trace]\n \nfig = go.Figure(data=data)\nfig.show()","96562428":"sales = pd.read_excel('..\/input\/superstore-sales\/Sample - Superstore Sales.xls',0)\nsales.head()","18d4cd0b":"trace0= go.Scatter(\n        x = sales['Sales'],\n        y = sales['Profit'],\n        mode ='markers',\n        marker= dict(\n                size=15,\n                color= 'rgb(150,120,180)',\n                symbol= 'square'\n        ))\n\ndata=[trace0]\nlay = go.Layout(title='Sales vs Profit')\n\nfig= go.Figure(data=data,layout= lay)\nfig.show()","83c35d78":"fifa = pd.read_csv('..\/input\/fifa-world-cup\/WorldCupMatches.csv')","9c38eb01":"fifa.head()","d248267a":"fifa.columns","de33b4ff":"fifa_avg = pd.pivot_table(fifa,values='Home Team Goals',index='Year')\nfifa_avg.head()","994be65c":"trace0= go.Scatter(\n        x = fifa_avg.index,\n        y = fifa_avg['Home Team Goals'],\n        mode ='lines',\n        name = 'Home Team Goals'\n)\n\ndata=[trace0]\nlayout = go.Layout(title='Home Team Goals')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","414ca06c":"fifa_avg = pd.pivot_table(fifa,values=['Home Team Goals','Away Team Goals'],index='Year')\nfifa_avg.head()","d32aaed0":"trace0= go.Scatter(\n        x = fifa_avg.index,\n        y = fifa_avg['Away Team Goals'],\n        mode ='lines+markers',\n        name = 'Away Team Goals'\n)\n\ntrace1 = go.Scatter(\n        x = fifa_avg.index,\n        y = fifa_avg['Home Team Goals'],\n        mode ='lines+markers',\n        name = 'Home Team Goals'\n)\n\ndata=[trace0,trace1]\nlayout = go.Layout(title='Average Away and Home Team Goals Per Year')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","c4f28d1b":"order_priority = pd.pivot_table(sales,index= 'Order Priority',values='Sales')\norder_priority.head()","ec4ad11f":"trace0 = go.Bar(\n         x = order_priority.index,\n         y = order_priority['Sales'],\n         marker =dict(color='rgb(130,220,300)'),\n         name = \"Order Priority\"\n)\n\ndata=[trace0]\nlayout= go.Layout(title='Order Priority')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","e1e346d9":"trace0= go.Bar(\n        x = fifa_avg.index,\n        y = fifa_avg['Away Team Goals'],\n        marker =dict(color='rgb(10,20,30)')\n)\n\ntrace1 = go.Bar(\n        x = fifa_avg.index,\n        y = fifa_avg['Home Team Goals']\n)\n\ndata=[trace0,trace1]\nlayout = go.Layout(title='Average Away and Home Team Goals Per Year')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","b4768a91":"trace0= go.Bar(\n        x = fifa_avg.index,\n        y = fifa_avg['Away Team Goals'],\n)\n\ntrace1 = go.Bar(\n        x = fifa_avg.index,\n        y = fifa_avg['Home Team Goals'],\n)\n\ndata=[trace0,trace1]\nlayout = go.Layout(title='Average Away and Home Team Goals Per Year',barmode='stack')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","63d8660b":"trace0= go.Scatter(\n        x = fifa_avg.index,\n        y = fifa_avg['Away Team Goals'],\n        mode = 'lines',\n        marker = dict(color= 'rgb(20,30,40)'),\n        name='Away Team Goals'\n)\n\ntrace1 = go.Bar(\n        x = fifa_avg.index,\n        y = fifa_avg['Home Team Goals'],\n        marker = dict(color= 'rgb(10,150,120)'),\n        name= 'Home Team Goals'\n        \n)\n\ndata=[trace0,trace1]\nlayout = go.Layout(title='Average Away and Home Team Goals Per Year')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","751c3bf4":"trace0= go.Scatter(\n        x = sales['Sales'],\n        y = sales['Profit'],\n        text = sales['Customer Name'],\n        mode = 'markers',\n        marker = dict(size=100 * sales['Discount'],color='rgb(220,110,120)')\n)\n\ndata= [trace0]\n\nlayout = go.Layout(\n        title ='Sales vs Profit',\n        xaxis = dict(title='Sales'),\n        yaxis = dict(title='Profit'),\n        hovermode = 'closest'\n        )\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","f60e5231":"sales['Ship Mode'].value_counts()","450a9d9e":"trace = go.Pie(labels = ['Regular Air','Delivery Truck','Express Air'], values = sales['Ship Mode'].value_counts(), \n               textfont=dict(size=15), opacity = 0.8,\n               marker=dict(colors=['pink', 'purple'], \n               line=dict(color='#000000', width=1.5)))\n           \n\nlayout= go.Layout(\n        title={\n        'text': \"Ship Modes\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig = go.Figure(data = [trace], layout=layout)\nfig.show()","887bfb36":"trace0 = go.Histogram(\n         x = sales['Sales'],\n         name= 'Sales',\n         opacity =0.5\n)\n\ntrace1 = go.Histogram(\n         x = sales['Profit'],\n         name= 'Profit',\n         opacity =0.5\n)\n\ndata= [trace0,trace1]\nlayout = go.Layout(title='Sales vs Profit Distribution')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","d638e6da":"sales['Customer Segment'].value_counts()","afe076da":"corp = sales['Sales'][sales['Customer Segment']=='Corporate']\nhome_office = sales['Sales'][sales['Customer Segment']=='Home Office']\ncons = sales['Sales'][sales['Customer Segment']=='Consumer']\nsmall_business = sales['Sales'][sales['Customer Segment']=='Small Business']","aae0fb1b":"trace0 = go.Box(\n         y = corp,\n         name = 'Corporate'\n)\n\ntrace1 = go.Box(\n         y = home_office,\n         name = 'Home Office'\n)\n\ntrace2 = go.Box(\n         y = cons,\n         name = 'Consumer'\n)\n\ntrace3 = go.Box(\n         y = small_business,\n         name = 'Small Business'\n)","4db7c4dd":"data =[trace0,trace1,trace2,trace3]\nlayout = go.Layout(title='Distribution of Customer Segment')\n\nfig = go.Figure(data=data,layout=layout)\nfig.show()","1cb3f744":"x = np.random.randn(500)\ndata = [x]\nlabel = ['DISTPLOT'] \n \nfig = ff.create_distplot(data, label)\nfig.show()","95aaf126":"## REFERENCES\n\n* https:\/\/www.youtube.com\/watch?v=NPznsxeL3FM&list=PLH6mU1kedUy9HTC1n9QYtVHmJRHQ97DBa\n* https:\/\/www.askpython.com\/python-modules\/python-plotly-tutorial\n* https:\/\/plotly.com\/python\/ipython-notebook-tutorial\/","027c8a3a":"<a id='5'><a>\n## IMPORTING LIBRARIES","01f9f4cd":"![Thank-you-bar-chart-.png](attachment:Thank-you-bar-chart-.png)","a2f0ffc2":" <a id='1'><a>\n## INTRODUCTION","9757daf3":"<a id='6'><a>\n## BASIC CHARTS IN PLOTLY","70ccb89f":"<a id='7'><a>\n### 1) SCATTER PLOT","45ccb610":"<a id='17'><a>\n\n### 2) BOX PLOT","ee3d4fdc":"## **TABLE OF CONTENTS**\n\n* [INTRODUCTION](#1)\n\n* [ADVANTAGES AND DISADVANTAGES OF PLOTLY](#2)\n\n* [STEPS FOR USING PLOTLY](#3)\n\n* [IMPORTING LIBRARIES](#4)\n\n* [INSTALLATION](#5)\n\n* [BASIC CHARTS IN PLOTLY](#6)\n\n    * [SCATTER PLOT](#7)\n    \n    * [LINE-SCATTER PLOT](#8)\n    \n    * [MULTI-LINE PLOT](#9)\n    \n    * [BUBBLE CHART](#14)\n    \n    * [BAR CHART](#10)\n    \n    * [PIE CHART](#19)\n    \n         * [GROUPED BAR CHART](#11)\n      \n         * [STACK BAR CHART](#12)\n      \n         * [LINE BAR CHART](#13)\n             \n    \n*  [STATISTICAL CHARTS](#15)\n\n     * [HISTOGRAM](#16)\n     \n     * [BOX PLOT](#17)\n     \n     * [DISTPLOT](#18)","d2c09ca0":"<a id='13'><a>\n### 4C) LINE BAR CHART","03059349":"<a id='8'><a>\n### 2) LINE-SCATTER PLOT","edc9fbf9":"<a id='3'><a>\n## STEPS FOR USING PLOTLY","72f52614":"<a id='9'><a>\n### 3) MULTI-LINE PLOT","f6d13106":"<a id='11'><a>\n\n### 4A) GROUPED BAR CHART","c95e9990":"#### The Average Sales is maximum for \"Low\" Order priorities when compared to others.","66d95a1c":"### * pip install plotly==4.5.0\n### * pip install chart_studio","91c74720":"<a id='12'><a>\n### 4B) STACK BAR CHART","7afff143":"<a id='15'><a>\n## STATISTICAL CHARTS","3ec28635":"<a id='19'><a>\n### 6) PIE CHART","3d16d3e4":"![d076c072-a8d5-4316-9d87-be7d7109cf43_social+media+logo-01.png](attachment:d076c072-a8d5-4316-9d87-be7d7109cf43_social+media+logo-01.png)","556195fd":"## DISADVANTAGES:\n\n* The plots made using plotly community version are always public and can be viewed by anyone.\n* For plotly community version, there is an upper limit on the API calls per day.\n* There are also limited  number of color Palettes available in community version which acts as an upper bound on the coloring options.","96d18b83":"<a id='2'><a>\n## ADVANTAGES AND DISADVANTAGES OF PLOTLY","0d71690e":"## ADVANTAGES:\n    \n* It lets you create interactive visualizations built using D3.js without even having to know D3.js.\n* It provides compatibility with number of different languages\/ tools like R, Python, MATLAB, Perl, Julia, Arduino.\n* Using plotly, interactive plots can easily be shared online with multiple people.\n* Plotly can also be used by people with no technical background for creating interactive plots by uploading the data and using plotly GUI.\n* Plotly is compatible with ggplots in R and Python.\n* It allows to embed interactive plots in  projects or websites using iframes or html.\n* The syntax for creating interactive plots using plotly is very simple as well.","77855512":"<a id='4'><a>\n## INSTALLATION","61409bd9":"A trace is just the name we give a collection of data and the specifications of which we want that data plotted. Notice that a trace will also be an object itself, and these will be named according to how you want the data displayed on the plotting surface","b6ab7ffb":"<a id='16'><a>\n### 1) HISTOGRAM","ca7c8363":"<a id='10'><a>\n\n### 4) BAR CHART","3206502d":"## What is Plotly?\nThe Plotly Python library is an interactive, open-source plotting library that supports over 40 unique chart types covering a wide range of statistical, financial, geographic, scientific and 3-dimensional use-cases.Plotly is one of the finest data visualization tools available built on top of visualization library D3.js, HTML and CSS. It is created using Python and the Django framework.  One can choose to create interactive data visualizations online or use the libraries that plotly offers to create these visualizations in the language\/ tool of choice. It is compatible with a number of languages\/ tools: R, Python, MATLAB, Perl, Julia, Arduino.","bfcb7910":"The 'color' property is a color and may be specified as:\n- A hex string (e.g. '#ff0000')\n- An rgb\/rgba string (e.g. 'rgb(255,0,0)')\n- An hsl\/hsla string (e.g. 'hsl(0,100%,50%)')\n- An hsv\/hsva string (e.g. 'hsv(0,100%,100%)')\n- A named CSS color: aliceblue, antiquewhite, aqua, aquamarine, azure,beige, bisque, black, blanchedalmond, blue,blueviolet, brown, burlywood, cadetblue,chartreuse, chocolate, coral, cornflowerblue,cornsilk, crimson, cyan, darkblue, darkcyan,darkgoldenrod, darkgray, darkgrey, darkgreen,darkkhaki, darkmagenta, darkolivegreen, darkorange,darkorchid, darkred, darksalmon, darkseagreen,darkslateblue, darkslategray, darkslategrey,darkturquoise, darkviolet, deeppink, deepskyblue,dimgray, dimgrey, dodgerblue, firebrick,floralwhite, forestgreen, fuchsia, gainsboro,ghostwhite, gold, goldenrod, gray, grey, green,greenyellow, honeydew, hotpink, indianred, indigo,ivory, khaki, lavender, lavenderblush, lawngreen,lemonchiffon, lightblue, lightcoral, lightcyan,lightgoldenrodyellow, lightgray, lightgrey,lightgreen, lightpink, lightsalmon, lightseagreen,lightskyblue, lightslategray, lightslategrey,lightsteelblue, lightyellow, lime, limegreen,linen, magenta, maroon, mediumaquamarine,mediumblue, mediumorchid, mediumpurple,mediumseagreen, mediumslateblue, mediumspringgreen,mediumturquoise, mediumvioletred, midnightblue,mintcream, mistyrose, moccasin, navajowhite, navy,oldlace, olive, olivedrab, orange, orangered,orchid, palegoldenrod, palegreen, paleturquoise,palevioletred, papayawhip, peachpuff, peru, pink,plum, powderblue, purple, red, rosybrown,royalblue, rebeccapurple, saddlebrown, salmon,sandybrown, seagreen, seashell, sienna, silver,skyblue, slateblue, slategray, slategrey, snow,springgreen, steelblue, tan, teal, thistle, tomato,turquoise, violet, wheat, white, whitesmoke,yellow, yellowgreen\n                        \n- A number that will be interpreted as a color\n        according to bar.marker.colorscale\n- A list or array of any of the above","56c14625":"## STEPS PERFORMED IN PLOTLY:\n\nData visualization is an art with no hard and fast rules.\n\nOne simply should do what it takes to convey the message to the audience. Here is a series of typical steps for creating interactive plots using plotly\n\n* Getting the data to be used for creating visualization and preprocesisng it to convert it into the desired format.\n\n* Calling the plotly API in the language\/ tool of your choice.\n\n* Creating the plot by specifying objectives like the data that is to be represented at each axis of the plot, most appropriate plot type (like histogram, boxplots, 3D surfaces), color of data points or line in the plot and other features. Here\u2019s a generalized format for basic plotting in R and Python:\n\n**In R:**\n\nplot_ly( x , y ,type,mode,color ,size )\n\n**In Python:**\n\nplotly.plotly([plotly.graph_objs .type(x ,y ,mode , marker = dict(color ,size ))]\n\nWhere:\n\n   * size= values for same length as x, y and z that represents the size of datapoints or lines in plot.\n   * x =  values for x-axis\n   * y = values for y-axis\n   * type = to specify the plot that you want to create like \u201chistogram\u201d, \u201csurface\u201d , \u201cbox\u201d, etc.\n   * mode = format in which you want data to be represented in the plot. Possible values are \u201cmarkers\u201d, \u201clines, \u201cpoints\u201d.\n   * color = values of same length as x, y and z that represents the color of datapoints or lines in plot.\n\n*  Adding the layout fields like plot title axis title\/ labels, axis title\/ label fonts,etc.\n\nIn R:\n\nlayout(plot ,title , xaxis = list(title ,titlefont ), yaxis = list(title ,titlefont ))\nIn Python:\n\nplotly.plotly.iplot( plot, plotly.graph_objs.Layout(title , xaxis = dict( title ,titlefont ), yaxis = dict( title ,titlefont)))\nWhere\n\n   * plot = the plotly object to be displayed\n   * title = string containing the title of the plot\n   * xaxis : title = title\/ label for x-axis\n   * xaxis : titlefont = font for title\/ label of x-axis\n   * yaxis : title = title\/ label for y-axis\n   * yaxis : titlefont = font for title\/ label of y-axis","dc04dc30":"If you observe the medians of all the segments seem to be equal but when you hover over the box plots of each segment you can see the medians vary by less difference.","3b6d9833":"<a id='14'><a>\n### 5) BUBBLE CHART","af61afce":"**object.Scatter()** is used to provide dimensional values i.e. create a trace and is useful to set other attributes that we feel like adding to the graph.\n\nThe x and y parameters contain the values to be plotted on the x and y-axis.\n\nThe parameter mode determines the mode of representation of Scatter Plot. It can have any of the following values:\n\n* lines \n* markers \n* lines+markers \n* lines+markers+text\n* none\n\n**lines** plot values through lines as a drawing mode.\n\n**markers** would plot value by marking the un-segregated data as points.\n\nplotly.offline enables the programmer to plot the values in an offline manner and save it. It accepts a filename as an argument which is the .html page that would display the offline plotting of the data.","443e298f":"<a id='18'><a>\n\n### 3) DISTPLOT"}}