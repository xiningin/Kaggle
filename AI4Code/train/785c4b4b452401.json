{"cell_type":{"d0801dd6":"code","82f1fdea":"code","3c779dd0":"code","41828689":"code","7dfd0a19":"code","09efaa15":"code","b5aca157":"code","fc5a68b3":"code","d23393e4":"code","719a4615":"code","ed38e1b8":"code","7ba69eed":"code","d17e681a":"code","f128d450":"code","e9f5fa23":"code","c1c8d240":"code","3c7db853":"code","d7595ab6":"code","2dac36f4":"code","cc83e1b3":"code","24de358b":"code","c46a3487":"code","3dd6fb55":"code","4818696e":"code","5470eb9e":"code","0a25e075":"code","b49dc178":"code","34506cf4":"code","ad86d221":"code","0c6192c0":"code","38d5622b":"code","b7836e31":"code","1b6db58d":"code","cb249da7":"markdown","97116ff3":"markdown","7f66b06f":"markdown","76af4dc0":"markdown","78f1960e":"markdown","4b4d1663":"markdown","ea7c0acd":"markdown","fe6af1e9":"markdown","d4876c6c":"markdown","d1ee3ae7":"markdown","fe1ea2a0":"markdown","48b28ac7":"markdown","f0d44d73":"markdown","3a8ea5e0":"markdown","07d2a98a":"markdown","87ded1ff":"markdown","d4deb02a":"markdown","50d11b8a":"markdown","e4b697ba":"markdown","af23a8e2":"markdown","0802234b":"markdown","bb60d613":"markdown","9e5501bf":"markdown","492ef533":"markdown","711e39a3":"markdown","8646f76c":"markdown","6aa1f661":"markdown","97880665":"markdown","aaae9d33":"markdown","2ae12a31":"markdown","c2e1b91d":"markdown","8951ef72":"markdown","94760e87":"markdown","6d681468":"markdown","380ec410":"markdown","e65ad590":"markdown","385a8420":"markdown","13ebc335":"markdown","822a280c":"markdown","2fb7c670":"markdown","8aaf28c3":"markdown","0bdb922e":"markdown","6c4d545d":"markdown"},"source":{"d0801dd6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","82f1fdea":"import pandas as pd\n# Load the dataset into a pandas dataframe.\ndata = pd.read_csv('\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv')","3c779dd0":"\n# Google file system\n#from google.colab import drive\n#drive.mount('\/content\/drive')","41828689":"#extract the text file\n#File='\/drive\/My Drive\/Colab Notebooks\/houses_to_rent_v2.csv'","7dfd0a19":"import pandas as pd\n# Load the dataset into a pandas dataframe.\n#data = pd.read_csv('\/content\/drive\/My Drive\/Colab Notebooks\/houses_to_rent_v2.csv')","09efaa15":"data","b5aca157":"data.isna().sum()","fc5a68b3":"data[['area', 'rooms', 'bathroom', 'parking spaces', 'floor' ,'hoa (R$)', 'rent amount (R$)', 'property tax (R$)', 'fire insurance (R$)', 'total (R$)']].describe()","d23393e4":"data['rent-class'] = pd.cut(x=data['rent amount (R$)'], bins=[450, 1530, 2661, 5000, 45000], labels=['cheap', 'average', 'expensive', 'very expensive'], include_lowest=True)","719a4615":"data.animal.unique()","ed38e1b8":"data.city.unique()","7ba69eed":"data.furniture.unique()","d17e681a":"data.info()","f128d450":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nax = data['rent-class'].value_counts().sort_values().plot(kind=\"barh\")\ntotals= []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n     ax.text(i.get_width()+.3, i.get_y()+.20, \n     str(round((i.get_width()\/total)*100, 2))+'%', \n     fontsize=10, color='black')\nax.grid(axis=\"x\")\nplt.suptitle('rent-class', fontsize=20)\nplt.show()","e9f5fa23":"\nplt.figure(figsize=(15, 6))\nplt.title('Rent amount (R$) distribution')\nsns.distplot(data['rent amount (R$)'])\nplt.xticks(np.arange(data['rent amount (R$)'].min(), data['rent amount (R$)'].max(), step=3000));","c1c8d240":"plt.figure(figsize=(15,6))\nplt.title('Rent amount (R$) distribution by rent class and city')\nsns.violinplot(x=data['city'], y=data['rent amount (R$)'], hue=data['rent-class'])","3c7db853":"k=max(data['rent amount (R$)'])\nname=data[data['rent amount (R$)']==k].index\n","d7595ab6":"data.drop(name, inplace=True)","2dac36f4":"sns.catplot(x ='bathroom', y ='rent amount (R$)', data = data, height=5, aspect=3)\nplt.title(\"Relationship between rent and number of bathrooms\", size=17)","cc83e1b3":"sns.catplot(x ='rooms', y ='rent amount (R$)', data = data, height=5, aspect=3)\nplt.title(\"Relationship between rent and number of rooms\", size=17)","24de358b":"plt.figure(figsize=(15,6))\nsns.countplot(x ='rooms' , hue = data['city'], data = data)","c46a3487":"sns.catplot(x ='area', y ='rent amount (R$)', data = data, height=5, aspect=3)\nplt.title(\"Relationship between rent and house area\", size=17)","3dd6fb55":"import plotly.express as px\nfig = px.scatter(data, x=\"rent amount (R$)\",\n                y=\"fire insurance (R$)\", \n                color=\"city\"          \n                 )\nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=1, color='LightSkyBlue')),\n                  selector=dict(mode='markers'))\nfig.show(renderer='colab')","4818696e":"plt.figure(figsize=(15,6))\nsns.countplot(x ='animal', hue = data['city'], data = data)","5470eb9e":"plt.figure(figsize=(15,6))\nsns.countplot(x ='furniture',  data = data)","0a25e075":"plt.figure(figsize=(15,6))\nplt.title('Rent amount (R$) distribution by rent class and city')\nsns.violinplot(x=data['furniture'], y=data['rent amount (R$)'], hue=data['city'])","b49dc178":"#we will locate our independent variables (predictors)\nX = data.iloc[:,[0,1,2,3,6,7]].values\n#Here we try to locate our target variable\ny = data.iloc[:,13].values","34506cf4":"# encoding categorical data e.g. gender as a dummy variable\nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder_X = LabelEncoder()\nX[:,0] = labelencoder_X.fit_transform(X[:,0])\nX[:,4] = labelencoder_X.fit_transform(X[:,4])\nX[:,5] = labelencoder_X.fit_transform(X[:,5])\n#X[:,0] = labelencoder_X.fit_transform(X[:,0])\n# encoding categorical data e.g. disease outcome as a dummy variable\ny,class_names = pd.factorize(y)","ad86d221":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20)","0c6192c0":"# Fitting Classifier to the Training Set\nfrom sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(criterion='entropy',max_depth=3)\nclassifier.fit(X_train, y_train)","38d5622b":"# Model performance on training set\ny_pred_train =classifier.predict(X_train)\n","b7836e31":"from sklearn import metrics\nfrom sklearn.metrics import confusion_matrix, classification_report\n\naccuracy = metrics.accuracy_score(y_train, y_pred_train)\nprint(\"Accuracy: {:.2f}\".format(accuracy))","1b6db58d":"from sklearn.metrics import classification_report, confusion_matrix\n#print(confusion_matrix(y_train, y_pred_train))\nprint(classification_report(y_train, y_pred_train))","cb249da7":"Before proceeding with the training of machine learning models, we are interested in getting some insights about the data at hand. In particular, it would be interesting to know how different variables affect the price of the rent, to understand their potential quality as predictors.","97116ff3":"### **Insight about categorical data**","7f66b06f":"# Uploading  Data (google colab)\n","76af4dc0":"Display the metrics and the model accuracy","78f1960e":"### **Relationship between rent and numerical variables**","4b4d1663":"Finally, we will try to see the general informations about the dataset.","ea7c0acd":"In order to have a clear look on the whole values, we decided to plot an interactive scatter plot allowing us to zoom in on the range of interest.","fe6af1e9":"# Data Cleaning","d4876c6c":"There is more houses that accept pets in the dataset then the ones that don't. Sao Paulo and Rio de Janeiro has the largest count.","d1ee3ae7":"Here we compare the distribution of rent amount of each group (city + rent class). We notice that there is a high probability  for the rent amount values in the case of  cheap and average rent-class to fluctuate around the median for  all the cities. \nWe can also observe that The VERY-EXPENSIVE rent-class show outliers in the city of Sao Paulo.","fe1ea2a0":"Does most houses accept animals or not? what's their distribution in the diferrent cities","48b28ac7":"We will split our dataset into 2 sets: 80% for training and 20% for testing.","f0d44d73":"# Exploratory Data Analysis: ","3a8ea5e0":"**Correlation between fire insurance and rent**\n\n\n","07d2a98a":"Before starting to work with the data, we will proceed to clean the dataset. Although the data is relatively clean, we will add a rent category to classify the rent into: cheap, average, expensive and very expensive.","87ded1ff":"We will try to classify rent in different cities of Brazil using categorical variables. This dataset contains 16079 houses to rent with 13 diferent features. \nThe rent classes that we're trying to predict do not exist in the original dataset. We will create our target variable using the rent amount variable.","d4deb02a":"There is a low correlation between area and rent-amount. There are small houses with probably one room and have a high rent-amount due to their location in the city center (for example).","50d11b8a":"More than 50% of the houses in the dataset are not furnishured.","e4b697ba":"Note: To use this notebook in google colab, upload the data using the section below.","af23a8e2":"### **Rent amount (R$) distribution by rent class and city**","0802234b":"**Are most houses in different cities furnished or not?**","bb60d613":"After the Exploratory data analysis, we will proceed to apply our model.","9e5501bf":"Encoding categorical variables to binary variables.","492ef533":"We will display the descriptive statistics of numerical variables:","711e39a3":" The peaks of the graph shows where values of \"Rent amount (R$) are concentrated over the interval.","8646f76c":"The decision tree model has an accuracy of 54% which means that the model did not predict accurately the rent classes.","6aa1f661":"There is a high correlation between the fire insurance and rent amount. If the fire insurance amount of a house increases, it rental increases.","97880665":"Below, we will try  to see the different and unique values of the categorical variables:","aaae9d33":"# Problem description","2ae12a31":"From this plot, we conclude that there is no relationship between the rent amount and the number of bathrooms in the house.  ","c2e1b91d":"# Uploading data (Kaggle)","8951ef72":"From above, we can say that the dataset do not contain NaN values","94760e87":"We will delete the highest value of the rent amount attribute as it represent an outlier before proceeding to the next analysis.","6d681468":"### **Rent amount (R$) Distribution**\n\n","380ec410":"# Predictive Analysis","e65ad590":"We notice that approximatively each rent class represente 1\/4 of the rent class of the whole dataset","385a8420":"Again, no relationship between number of rooms and high or low rent amount. this makes us ask the fellewing questions:\n\n\n*   how many rooms people ask for in a house to be rented?\n*   Is there a relationship between number of rooms and cities?\n\n","13ebc335":"Using the descriptive statistics of rent amount variable, we will create our target variable : **rent-class**.\nIt categorize the rent amount into: cheap, average, expensive and very expensive.","822a280c":"In general, violin plots can be considered a combination of the box plot with a kernel density plot. they provide us information about the median (a white dot on the violin plot), the interquartile range (the black bar in the center of violin) and the lower\/upper adjacent values .\nWe chooses this type of graph to  observe the distribution of rent amount, and make a comparison of it distribution between different cities and according to the different rent class.","2fb7c670":"According to this graph, 1 room to 3 rooms are of high demand in people looking for rent with a highest demand on one room houses. Sao Paulo contains the majority of the houses despite de number of rooms.","8aaf28c3":"Wee will be looking at the univariate distribution of variables. First, we will display the frequency of the target variable (rent-class).","0bdb922e":"Here, we will use the Decision Tree classifier on the training set","6c4d545d":"we check if any of the attributes contain NaN values."}}