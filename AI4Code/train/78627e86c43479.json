{"cell_type":{"ff3de0d2":"code","2becfd91":"code","a254495e":"code","06182908":"code","4e4ee7ae":"code","840d9254":"markdown"},"source":{"ff3de0d2":"## IMPORT PACKAGES\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np","2becfd91":"## READ CONTROL CHART DATA\n\nraw = pd.read_csv('..\/input\/test_data.csv')\narr = np.array(raw)","a254495e":"## ADD CALCULATED COLUMNS\n\nratio = np.array((arr[:,2]\/arr[:,3])*100).reshape(-1,1)\nvals = np.hstack((arr,ratio))","06182908":"## DETERMINE CHART PARAMETERS\n\ncenter = np.mean(vals[:,-1])\nprint('Mean is: ' + str(center))\nsd = np.std(vals[:,-1])\nprint('Standard deviation is: ' + str(sd))\nlim_upper = center + sd*3\nprint('Upper control limit is: ' + str(lim_upper))\nlim_lower = center - sd*3\nprint ('Lower control limit is: ' + str(lim_lower))\nmnth = vals[:,1]\npct = vals[:,-1]","4e4ee7ae":"## CREATE PLOT\n\nplt.clf()\nplt.figure(2, figsize = [15,10])\nplt.grid(which = 'major', axis = 'y')\ndata = plt.scatter(mnth, pct, marker = 'D', color = 'b')\nucl = plt.axhline(lim_upper, linestyle = '--', color = 'r', linewidth = 2)\nctr = plt.axhline(center, color = 'r', linewidth = 2)\nlcl = plt.axhline(lim_lower, linestyle = '--', color = 'r', linewidth = 2)\nplt.xticks(rotation = 90)\nplt.ylim(0,120)\nplt.legend((data, ctr, ucl),('Monthly Percent Compliance','Baseline Averages','Control Limits'), loc = 'center')\nplt.show()","840d9254":"**Automation of Control Charts Using Python**\n\nUsing dummy time-series data, Python will compute standard deviation and control limits. Then the data is graphed using matplotlib. Next steps are to write a function that takes data input for any process and aggregates charts monthly. A function is necessary because there will be different control parameters and nuances (e.g. shifts, trends, etc.) for different processes. I would like to standardize the script as much as possible.\n\noneill.evan.r@gmail.com\n"}}