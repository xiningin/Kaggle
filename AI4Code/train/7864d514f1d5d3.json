{"cell_type":{"8a4644e4":"code","eade14a6":"code","7853a922":"code","f7bd7db3":"code","862d8da0":"code","bda2de00":"code","5fb2fdcb":"code","92b3e12a":"code","e1bd75bb":"code","3f359ebd":"code","563e3f69":"code","c31bf76e":"code","d2f12cf9":"code","66cc1d58":"code","d17265b2":"code","c42f2cc3":"code","9bf628cb":"code","d8bea8e8":"code","72f20f06":"code","e404c9ea":"code","f5865bd2":"code","50cd2a24":"code","b082d6e2":"code","1700b17f":"code","487a4ed4":"code","b4f4b68d":"code","65d04964":"code","ceffd563":"code","42919957":"code","188ce321":"code","364294b6":"code","8231cd25":"markdown","d8edea3c":"markdown","c9aea8a8":"markdown","9e023ff9":"markdown","e2aa2553":"markdown","9b65749d":"markdown","5f9e8ca6":"markdown","73fb3d1b":"markdown","8c40bfb5":"markdown","981c64a9":"markdown","0186013a":"markdown","6fdda911":"markdown","fe0587f4":"markdown","e66a5977":"markdown","90cb717f":"markdown","a715cf8c":"markdown","f0331eca":"markdown","a400b91a":"markdown","3fd50211":"markdown","d6e10ad4":"markdown","452391c4":"markdown","c7a4ac31":"markdown","ce7ee4f6":"markdown","ab2b790f":"markdown","7101ec6c":"markdown","66d46fc6":"markdown","caae2be1":"markdown","c7c11b12":"markdown","3ad76799":"markdown","442c4f8b":"markdown","a764f778":"markdown","d9dee618":"markdown","b8d374a8":"markdown","34b3f14a":"markdown","e350cbf0":"markdown","0cd79419":"markdown","3eedd561":"markdown","4c410df6":"markdown","3c9ab4ce":"markdown","360cd1fd":"markdown","12910f9b":"markdown","59721311":"markdown","588adbbe":"markdown","57304a4c":"markdown"},"source":{"8a4644e4":"import numpy as np\nimport pandas as pd\n\n# we don't like warnings\n# you can comment the following 2 lines if you'd like to\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Matplotlib forms basis for visualization in Python\nimport matplotlib.pyplot as plt\n\n# We will use the Seaborn library\nimport seaborn as sns\nsns.set()\n\n# Graphics in retina format are more sharp and legible\n%config InlineBackend.figure_format = 'retina'","eade14a6":"data=pd.read_csv('..\/input\/edadata\/telecom_churn.csv')","7853a922":"data.head()","f7bd7db3":"data.shape","862d8da0":"data.info()","bda2de00":"features = ['Total day minutes', 'Total intl calls']","5fb2fdcb":"data[features].describe()","92b3e12a":"plt.rcParams['figure.figsize']=(10,7)\nsns.boxplot('Total day minutes',data=data)","e1bd75bb":"plt.rcParams['figure.figsize']=(10,7)\nsns.boxplot('Total intl calls',data=data)","3f359ebd":"plt.rcParams['figure.figsize']=(10,7)\ndata[features].hist();","563e3f69":"data[features].plot(kind='density', subplots=True, layout=(1, 2), \n                  sharex=False, figsize=(10, 7));","c31bf76e":"sns.distplot(data['Total intl calls']);","d2f12cf9":"data['Churn'].value_counts()","66cc1d58":"_, axes = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))\n\nsns.countplot(x='Churn', data=data, ax=axes[0]);\nsns.countplot(x='Customer service calls', data=data, ax=axes[1]);","d17265b2":"num = list(set(data.columns) - \n                 set(['State', 'International plan', 'Voice mail plan', \n                      'Area code', 'Churn', 'Customer service calls']))\n\n# Calculate and plot\ncorr_matrix = data[num].corr()\nsns.heatmap(corr_matrix);","c42f2cc3":"num=list(set(num)-set(['Total day charge','Total night charge','Total eve charge','Total intl charge']))","9bf628cb":"plt.scatter(data['Total day minutes'],data['Customer service calls']);","d8bea8e8":"sns.jointplot(x='Total day minutes', y='Customer service calls', \n              data=data, kind='scatter');","72f20f06":"sns.jointplot('Total day minutes', 'Customer service calls', data=data,\n              kind=\"kde\", color=\"g\");","e404c9ea":"sns.countplot(x='Voice mail plan', hue='Churn', data=data);\nplt.title('Loyal & Churned with the Voice Mail Plan')","f5865bd2":"pd.crosstab(data['Voice mail plan'], data['Churn'],normalize=True)","50cd2a24":"sns.lmplot('Total day minutes', 'Total night minutes', data=data, hue='Churn', fit_reg=False);","b082d6e2":"_, axes = plt.subplots(1, 2, sharey=True, figsize=(10, 4))\n\nsns.boxplot(x='Churn', y='Total day minutes', data=data, ax=axes[0]);\nsns.violinplot(x='Churn', y='Total day minutes', data=data, ax=axes[1]);","1700b17f":"sns.catplot(x='Churn', y='Total day minutes', col='Customer service calls',\n               data=data[data['Customer service calls'] < 8], kind=\"box\",\n               col_wrap=6, height=5, aspect=.8);","487a4ed4":"%config InlineBackend.figure_format = 'png'\nsns.pairplot(data[num]);","b4f4b68d":"from sklearn.manifold import TSNE\nfrom sklearn.preprocessing import StandardScaler","65d04964":"ok=data.drop(['Churn','State'],axis=1)\nok['International plan']=ok['International plan'].map({'Yes':1,'No':0})\nok['Voice mail plan']=ok['Voice mail plan'].map({'Yes':1,'No':0})","ceffd563":"scaler = StandardScaler()\nscaled = scaler.fit_transform(ok)","42919957":"tsne=TSNE(random_state=18)\ntsne_repr = tsne.fit_transform(scaled)","188ce321":"plt.scatter(tsne_repr[:, 0], tsne_repr[:, 1], alpha=.5);","364294b6":"_, axes = plt.subplots(1, 2, sharey=True, figsize=(14, 8))\n\nfor i, name in enumerate(['International plan', 'Voice mail plan']):\n    axes[i].scatter(tsne_repr[:, 0], tsne_repr[:, 1], \n                    c=data[name].map({'Yes': 'orange', 'No': 'blue'}), alpha=.5);\n    axes[i].set_title(name);","8231cd25":"So the users on average lie between 175-180.Maximum usage is upto 350 as can be seen as outliers starting from roughly 325-330.Almost minimal day minutes are less than 40 as seen in the plot.","d8edea3c":"This is a more smoothed version of the jointplot.We can also observe from the densities that people are patient enough to talk with the customer service numbers for upto 4 calls.","c9aea8a8":"Dataset consists of 3333 rows and 20 columns in all.","9e023ff9":"To view the statistics visually we can use box plot.\n","e2aa2553":"**Visual exploration of data using popular libraries such as pandas, matplotlib and seaborn and find it amazing how much insight can be gained from seemingly simple charts created with available visualization tools.**","9b65749d":"**Numeric-numeric**","5f9e8ca6":"The histograms are normalized with height of the bins shown as examples with distplot()","73fb3d1b":"**For categorical variables.**","8c40bfb5":"We also need to normalize the data. For this, we will subtract the mean from each variable and divide it by its standard deviation. All of this can be done with StandardScaler.","981c64a9":"Create a tsne object followed by a representation.","0186013a":"We have to drop the object data types and map the plans with pandas.series mapping object.","6fdda911":"**Categorical-categorical**","fe0587f4":"First of all we import the libraries for initializing the enviroment.","e66a5977":"Another example can be the pairplot.","90cb717f":"**The starting example can the correlation matrix itself.**","a715cf8c":"Now we would see the relationship between 2 numeric variables using scatter plot.","f0331eca":"# Whole Dataset Visualization","a400b91a":"People mostly dissatisfied with International Plan can be observed in large blue clusters have churned out reasonoably.\nAlthough that is not the case with voice mail plan.","3fd50211":"# Multivariate Visualization-comparing 2 or more variables at a time.","d6e10ad4":"There are some dependent variables like Total day charge,Total night charge,Total eve charge,Total international charge which can be computed from their minutes spent respectively.So we will get rid of them.","452391c4":"Churn which is a binary feature is the target one which depicts whether the company has lost its client or nature.","c7a4ac31":"From the above plot we can gather that as the number of calls increases , clients tend to be irritated by that and accordingly minutes decrease leading to higher churn rates.","ce7ee4f6":"Let us have a look at the data.","ab2b790f":"**For numeric variables.**","7101ec6c":"We can use lmplot to compare categorical and numeric variables which is quite similar to a scatter plot with another dimension.\nHere, we can see that more the minutes being spent behind calls , people churned out more as compared to night minutes.","66d46fc6":"One of the best ways to compare 2 categorical variables is the crosstab whose visualization we have done above.\nPercentage wise contigency table shows out of 25% clients opting for the voice mail plan ,only 2% have churned out.","caae2be1":"Most international calls start beyond 10 till the maximum 20.On average 4-4.5 is done normally.","c7c11b12":"We can see the distribution of churned and loyal clients.","3ad76799":"To compare 2 non-numeric features , we can start with a count plot.\nHere, we can see that the voice mail plan is not a bad plan as such considering the churn rate.","442c4f8b":"** t-distributed Stohastic Neighbor Embedding(t-SNE)**-find a projection for a high-dimensional feature space onto a plane (or a 3D hyperplane, but it is almost always 2D) such that those points that were far apart in the initial n-dimensional space will end up far apart on the plane. Those that were originally close would remain close to each other.","a764f778":"To check the density wise distribution  of the histograms we can use density plots.","d9dee618":"There are 16 columns that are numeric, 3 categorical and 1 boolean.No presence of null values can be seen.","b8d374a8":"We can observe from both the plots that customers who speak more over the phone in daytime tend to be disloyal.","34b3f14a":"In many cases , good amount of infromation could be drawn. Here, there are no surprises as such.","e350cbf0":"The bis of the histogram are no longer there with these Kernel Density Plots with bins smoothed out.","0cd79419":"catplot provides us with an intersting feature.We can now see that total day minutes is not solely responsible for churning of customers.\nRather we see that anything beyond 4 customer calls referring customers with problems are not being answered properly after repeated calls causing them to leave.","3eedd561":"The above distribution can be visualized accurately with countplot().For customer sewrvice calls we can see that maximum count of 1 call are done with a minimal count of 7.","4c410df6":"This is a scatter plot using seaborn known as jointplot().","3c9ab4ce":"We can also go for violin plots which smoothes out the box at the maximum density , however information obtained from boxplot leaves the violin plot data redundant.","360cd1fd":"We can see the correlation between each and every numerical variables using correlation matrix.For that first we need to remove the non-numeric variables.","12910f9b":"# Univariate Visualization-visualizing one feature at a time.","59721311":"**Numeric-categorical**","588adbbe":"Creating the datatframe.","57304a4c":"Total day minutes is distributed almost normally. The tail of Total International calls is skewed towards right though."}}