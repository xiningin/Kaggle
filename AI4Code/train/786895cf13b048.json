{"cell_type":{"57c61e9d":"code","9c47c05b":"code","5166490b":"code","9ac00654":"code","76c612f9":"code","b8adf2f8":"code","63e0e7a2":"code","f6716807":"code","7330b11b":"code","5f7862a6":"code","ac5c601b":"code","7ebc3066":"code","a6f70d1a":"markdown","c4fa0efb":"markdown"},"source":{"57c61e9d":"!pip install simpletransformers","9c47c05b":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nimport re\nfrom simpletransformers.classification import ClassificationModel, ClassificationArgs","5166490b":"data_train_1 = pd.read_csv('..\/input\/offensive\/offensive\/train_text.txt', error_bad_lines=False, names=['Offensive'])\ndata_train_2 = pd.read_csv('..\/input\/offensive\/offensive\/train_labels.txt', error_bad_lines=False, names=['Label']) \nData_train = data_train_1.copy()\nData_train['Label'] = data_train_2['Label']\n\ndata_train_3 = pd.read_csv('..\/input\/offensive\/offensive\/val_text.txt', error_bad_lines=False, names=['Offensive'])\ndata_train_4 = pd.read_csv('..\/input\/offensive\/offensive\/val_labels.txt', error_bad_lines=False, names=['Label']) \nData_val = data_train_3.copy()\nData_val['Label'] = data_train_4['Label']\n\ndata_train_5 = pd.read_csv('..\/input\/offensive\/offensive\/test_text.txt', error_bad_lines=False, names=['Offensive'])\ndata_train_6 = pd.read_csv('..\/input\/offensive\/offensive\/train_labels.txt', error_bad_lines=False, names=['Label']) \nData_test = data_train_5.copy()\nData_test['Label'] = data_train_6['Label']","9ac00654":"print(Data_train.info())\nprint(Data_train.head())","76c612f9":"print(Data_val.info())\nprint(Data_val.head())","b8adf2f8":"print(Data_test.info())\nprint(Data_test.head())","63e0e7a2":"# 0 -> not-offensive\n# 1 -> offensive\n\nplt.figure(figsize=(17,5))\nplt.subplot(1,3,1)\nplt.title('Train Data')\nsns.countplot(Data_train.Label)\nplt.subplot(1,3,2)\nplt.title('Val Data')\nsns.countplot(Data_val.Label)\nplt.subplot(1,3,3)\nplt.title('Test Data')\nsns.countplot(Data_test.Label)","f6716807":"\ndef text_preprocessing(text):\n    text = re.sub(r'(@.*?)[\\s]', ' ', str(text))\n    text = re.sub(r'[0-9]+' , '' ,str(text))\n    text = re.sub(r'\\s([@][\\w_-]+)', '', str(text)).strip()\n    text = re.sub(r'&amp;', '&',str(text))\n    text = re.sub(r'\\s+', ' ', str(text)).strip()\n    text = text.replace(\"#\" , \" \")\n    encoded_string = text.encode(\"ascii\", \"ignore\")\n    decode_string = encoded_string.decode()\n    return decode_string\n\nData_train['Offensive'] = text_preprocessing(Data_train['Offensive'])\nData_val['Offensive'] = text_preprocessing(Data_val['Offensive'])\nData_test['Offensive'] = text_preprocessing(Data_test['Offensive'])","7330b11b":"model_args = ClassificationArgs()\nmodel_args.num_train_epochs = 5\nmodel_args.learning_rate = 1e-4\nmodel_args.evaluate_during_training = True\nmodel_args.reprocess_input_data = True\nmodel_args.overwrite_output_dir = True\nmodel_args.train_batch_size = 64\nmodel_args.eval_batch_size = 64\n\nmodel = ClassificationModel(\"roberta\", \"roberta-base\", num_labels=3, use_cuda=True, args=model_args)","5f7862a6":"model.train_model(Data_train,output_dir= '.\/model.h5', eval_df = Data_val, acc=sklearn.metrics.accuracy_score)","ac5c601b":"result, model_outputs, wrong_predictions = model.eval_model(Data_test, acc=sklearn.metrics.accuracy_score)","7ebc3066":"print('Test Accuracy:',result)","a6f70d1a":"# Offensive Language Identification using Bert (RoBERTa-Base)","c4fa0efb":"## Test Accuracy Achieved: 65.81%"}}