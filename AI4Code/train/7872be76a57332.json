{"cell_type":{"51b1527a":"code","a479f64f":"code","8c9392b4":"code","33ca836b":"code","2fd63c7a":"code","0f640d89":"code","09c50320":"code","c1b76bf8":"code","b18e5f47":"code","b113d17b":"code","9eb5ed74":"code","84b30b64":"code","b41b938e":"code","386de1e9":"code","0e6f8690":"code","e8179777":"code","a197b2fb":"code","6d726510":"markdown","d49e3c18":"markdown","e6599f97":"markdown","8622df5f":"markdown","cd06771f":"markdown"},"source":{"51b1527a":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a479f64f":"#Install Viz Library\n!pip install autoviz","8c9392b4":"from autoviz.AutoViz_Class import AutoViz_Class","33ca836b":"df = pd.read_csv('\/kaggle\/input\/running-log-insight\/activity_log.csv')\nprint(df.shape)\ndf.head()","2fd63c7a":"df['Date'] = pd.to_datetime(df['Date'])\ndf.dtypes","0f640d89":"time_cols = ['Time','Avg Pace','Best Pace','Best Lap Time']","09c50320":"for time_loc in time_cols:\n    df.loc[df[time_loc]=='--',time_loc] = '0.0'","c1b76bf8":"import tqdm\nfrom tqdm import tqdm","b18e5f47":"for time_col in time_cols:\n    df[time_col] = df[time_col].map(lambda x: int(x.split(\":\")[1])+int(x.split(\":\")[2])\/60 if len(\n        x.split(\":\"))==3 else (int(x.split(\":\")[0])+int(x.split(\":\")[1].split(\".\")[0]) if len(x.split(\":\"))==2 else int(x.split(\".\")[0])))","b113d17b":"df.dtypes","9eb5ed74":"int_cols = ['Calories','Avg HR','Max HR','Avg Run Cadence','Max Run Cadence','Elev Gain','Elev Loss']","84b30b64":"for int_loc in int_cols:\n    df.loc[df[int_loc]=='--',int_loc] = '0'","b41b938e":"for int_col in int_cols:\n    df[int_col] = df[int_col].map(lambda x: int(x) if len(x.split(\",\"))==1 else int(x.split(\",\")[0]))","386de1e9":"df.dtypes","0e6f8690":"AV = AutoViz_Class()","e8179777":"target = 'Best Lap Time'","a197b2fb":"dft = AV.AutoViz(filename='', sep=',', depVar=target, dfte=df, header=0, verbose=1)","6d726510":"## Import data","d49e3c18":"for index, row in tqdm(df.iterrows(), total=df.shape[0]):\n    try:\n        #\n        row['Time'] = int(row['Time'].split(\":\")[1]) + int(row['Time'].split(\":\")[2])\/60\n    except:\n        print(\"index\",index)\n        print(\"row\",row['Time'])\n","e6599f97":"## Summarize Information","8622df5f":"## This is a Modification of a fantastic notebook that Analyzes Running Log using AutoViz","cd06771f":"https:\/\/www.kaggle.com\/funxexcel\/analyzing-a-running-log-with-autoviz\nThanks to Kunaal Naik for the original notebook!"}}