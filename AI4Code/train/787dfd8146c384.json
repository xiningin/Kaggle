{"cell_type":{"a2965b08":"code","785c37f6":"code","100526c5":"code","9a4d08e1":"code","06b27e79":"code","95552609":"code","ba102acf":"code","3110aae4":"code","f4c5982c":"code","538c45a9":"code","0ede6fa0":"code","6939861c":"code","ae77839b":"code","2f9eed52":"code","3741131e":"code","a474e479":"code","b2c4a50d":"markdown","e85a5733":"markdown","cc1e7e8b":"markdown","014b6f41":"markdown","188f8487":"markdown","b6dd8cfe":"markdown","87653cb6":"markdown","037d6942":"markdown","673d50f5":"markdown","33221d85":"markdown","87a08ac8":"markdown","cd42fba2":"markdown","a69a034a":"markdown","e8274226":"markdown","c8668ac9":"markdown","b89df018":"markdown","1ac172d2":"markdown","c14ff8ad":"markdown","4915fdc4":"markdown","6c84f1e4":"markdown","e37261ad":"markdown","6728e3af":"markdown","ebfacdfa":"markdown","fa261ee8":"markdown","8fc23a72":"markdown","5012c107":"markdown","dcd669ee":"markdown","51ed518b":"markdown","da61791a":"markdown","914be663":"markdown","9b9f038f":"markdown"},"source":{"a2965b08":"#Install the library\n!pip3 install cutecharts","785c37f6":"import numpy as np \nimport pandas as pd \nimport cutecharts.charts as ctc\n\n#For displaying visualizations\n\nfrom cutecharts.globals import use_jupyter_lab; use_jupyter_lab()\n\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')","100526c5":"df = pd.read_csv('..\/input\/2020-it-salary-survey-for-eu-region\/IT Salary Survey EU  2020.csv')\ndf.dropna(inplace=True)\ndf.head()\n\n","9a4d08e1":"gender = df['Gender'].value_counts().to_frame(name=\"values\")\ngender","06b27e79":"chart = ctc.Pie(\"Gender of Respondents\")\nchart.set_options(\n labels=list(gender.index),\n inner_radius=0,\n    colors=['#FFF1C1','#F7B7A3','#EA5F89'],\n )\nchart.add_series(list(gender['values'])) \n\n \n    ","95552609":"chart.load_javascript() # required only for the first time","ba102acf":"chart.render_notebook()","3110aae4":"cities = df['City'].value_counts()[:5].to_frame(name='values')\ncities","f4c5982c":"chart = ctc.Pie(\"Top 5 cities by the number of respondents\")\nchart.set_options(\n labels=list(cities.index),\n inner_radius=0.5,\n    colors=['#FFF1C5','#F7B7A3','#EA5F89','#9B3192','#57167E','#47B39C','#00529B'],\n )\nchart.add_series(list(cities['values'])) \nchart.render_notebook()","538c45a9":"chart = ctc.Bar(\"Cities\")\nchart.set_options(\n    labels=list(cities.index),\n    x_label='City',\n    y_label='No. of Respondents',\n    colors=['#FFF1C5','#F7B7A3','#EA5F89','#9B3192','#57167E','#47B39C','#00529B'],\n )\nchart.add_series('Count',list(cities['values'])) \nchart.render_notebook()","0ede6fa0":"#Filtering salaryand experience details of only Software Engineers\nse = df[df['Position '] == 'Software Engineer']\nse.rename(columns = {'Yearly brutto salary (without bonus and stocks) in EUR': 'Salary'}, inplace=True)\n\nsalary_exp = se.groupby(['Total years of experience'])['Salary'].median().to_frame().reset_index()\nsalary_exp[['Total years of experience','Salary']] = salary_exp[['Total years of experience','Salary']].astype(int)\nsalary_exp.sort_values('Total years of experience',inplace=True)\nsalary_exp[:5]","6939861c":"chart = ctc.Line(\"Median compensation by years of experience\")\nchart.set_options(\n labels=list(salary_exp['Total years of experience']), \n x_label=\"Experience in Years\",\n y_label=\"Salary in EUR\",\n colors=['#EA5F89'])\nchart.add_series(\"Salary\", list(salary_exp['Salary'])) \nchart.render_notebook()","ae77839b":"chart = ctc.Scatter(\"Median compensation by years of experience\")\nchart.set_options(\n    x_label=\"Experience in Years\",\n    y_label=\"Salary in USD\",\n    x_tick_count=4,\n    y_tick_count=3,\n    dot_size=1,\n    colors=['#47B39C'])\n\nchart.add_series(\"Salary\",[(z[0], z[1]) for z in list(zip(salary_exp['Total years of experience'],salary_exp['Salary']))])\nchart.render_notebook()","2f9eed52":"se.rename(columns = {'Yearly bonus + stocks in EUR': 'Salary with Stocks'}, inplace=True)","3741131e":"se['Salary with Stocks'] = se['Salary with Stocks'].astype(int)\nsalary_exp2 = se.groupby(['Total years of experience'])['Salary with Stocks'].median().to_frame().reset_index()\nsalary_exp2[['Total years of experience','Salary with Stocks']] = salary_exp2[['Total years of experience','Salary with Stocks']].astype(int)\nsalary_exp2.sort_values('Total years of experience',inplace=True)\nsalary_exp2;","a474e479":"chart = ctc.Radar(\"Median compensation by years of experience\")\nchart.set_options(\n labels=list(salary_exp[:5]['Total years of experience'])\n)\n \nchart.add_series(\"Salary\", list(salary_exp[:5]['Salary'])) \nchart.add_series(\"Salary with Stocks\", list(salary_exp2[:5]['Salary with Stocks'])) \nchart.render_notebook()","b2c4a50d":"## Analysing Gender of respondents\n\nLet's start with a pie chart to analyse the gender of the respondents. We\u2019ll first calculate the count using pandas.","e85a5733":"![](https:\/\/miro.medium.com\/max\/700\/1*Iic_5nmDTJ-E84zS4RVgjA.gif)","cc1e7e8b":"## 3. Bar Charts","014b6f41":"![](https:\/\/miro.medium.com\/max\/700\/1*-OyKwWByToPBf6-uLq-cuQ.gif)","188f8487":"Creating a doughnut chart from a pie chart is very straightforward. Give a value to the  `inner_radius`  parameter greater than zero, and a doughnut chart is formed.","b6dd8cfe":"## Median compensation of Software Engineers by years of experience\n\nThe above information can also be readily displayed via a scatter plot.","87653cb6":"### Importing the necessary libraries\n\n\n\n","037d6942":"## 6. Radar Charts","673d50f5":"A Pie\/Doughnut chart may not be the best way to display the city-wise breakup, especially if the number of cities increases. A bar chart would be the preferred choice.","33221d85":"A line chart is ideal for showing a trend in the data; hence we\u2019ll use it to show the salary comparison of software engineers in the region. This salary is without bonus and stocks.","87a08ac8":"![](https:\/\/miro.medium.com\/max\/700\/1*t_Y6HEDj-fmNWUlbfLg8MQ.gif)","cd42fba2":"In this notebook, we'll look at a way to explore the dataset using a library called cutecharts. [Cutecharts](https:\/\/github.com\/cutecharts\/cutecharts.py) is a Python library that renders interactive and hand-drawn charts in Python. The library doesn\u2019t have many options and only supports a few types of visualizations. However, it does render some unique and visually pleasing charts.\n\nYou may want to refer to the repository for the latest information:  [https:\/\/github.com\/cutecharts\/cutecharts.py](https:\/\/github.com\/cutecharts\/cutecharts.py).\n\n\n\n### Note: For some reason the charts are not rendering in the kaggle environment. While I resolve that issue, I have added the screenshots and Gifs so that you know how they would render.\n\n","a69a034a":"## Top 5 cities by the number of respondents\n\nLet\u2019s calculate and visualize the top five cities by the number of respondents in the survey.","e8274226":"We will use the year 2020 dataset. The dataset contains rich information about the salary patterns among the IT professionals in the EU region. However, the emphasis of this article will be more on showcasing the library and less on exploratory data visualization.","c8668ac9":"## Conclusion\n\nIn the above article, we saw how to create javascript inspired hand-drawn charts in Python. The author\u2019s idea behind this tool is not only to help you make these xkcd type charts but also to showcase how easy it is to create a similar project. It is always a good idea to look at the source code of an open-source project. In this way, you\u2019ll be able to understand and contribute to the current project and derive ideas to create something useful of your own. This is the beauty of open source.\n","b89df018":"> A  **radar chart**  is a  [graphical method](https:\/\/en.wikipedia.org\/wiki\/List_of_graphical_methods)  of displaying  [multivariate](https:\/\/en.wikipedia.org\/wiki\/Multivariate_statistics)  [data](https:\/\/en.wikipedia.org\/wiki\/Data)  in the form of a two-dimensional  [chart](https:\/\/en.wikipedia.org\/wiki\/Chart)  of three or more quantitative variables represented on axes starting from the same point.\n\nFor our example, we\u2019ll compare the salaries of software engineers with and without stocks. Note that we have already calculated the salary without bonus and stocks in the earlier sections and saved it as a dataframe called  `salary_exp.` In this section. we'll create another dataframe called  `salary_exp2` containing the field  `Yearly bonus + stocks in EUR.`","1ac172d2":"# 1. Pie Chart ","c14ff8ad":"## Customize the chart by defining options\n\n-   **legend_pos:** specify where you want to place the legend. (default is  `upLeft)`. Possible values are \u2014  `upLeft`,  `upRight`,  `downLeft`  and  `downRight`.\n-   **colors:** List of colors for different sectors of the pie chart. Optional.\n-   **inner_radius**: Default is 0.\n-   **labels**: labels to be seen during mouse hover.\n\nMost of these parameters are common for all the charts baring a few exceptions.","4915fdc4":"### Comparison of Salary with and without Stocks","6c84f1e4":"Most of the parameters in the bar chart are self-explanatory. You can also customize the color of each bar or leave the parameter as default. In that case, all the bars will display a single color.","e37261ad":"![](https:\/\/miro.medium.com\/max\/700\/1*pjMhnVB3fOeX-_74JhrGvw.gif)","6728e3af":"# 5. Scatter Plot","ebfacdfa":"Here you can adjust the `x_tick_count` and `y_tick_count` as well as the `dot_size` of the plot.","fa261ee8":"### Importing the dataset","8fc23a72":"Let's draw the different kinds of charts available in the cutecharts library.","5012c107":"![](https:\/\/miro.medium.com\/max\/700\/1*sR8EmtPadju6FnDmZHETYg.gif)","dcd669ee":"<center>\n<h1>Salary survey of European IT Professionals in 2020<\/h1>\n<br>\n<a href='https:\/\/towardsdatascience.com\/increase-the-cuteness-quotient-of-your-charts-fda960d84bee?sk=23debff855c99f18757c6e4d60b25791'>\n        <img src='https:\/\/img.shields.io\/badge\/Medium-grey?logo=medium'>\n    <\/a>\n<a href='https:\/\/twitter.com\/pandeyparul'>\n        <img src='https:\/\/img.shields.io\/twitter\/follow\/pandeyparul'>\n<\/a>\n<\/center>\n","51ed518b":"## 4. Line Chart","da61791a":"![](https:\/\/miro.medium.com\/max\/700\/1*hN7M-5Yw_SZq6uk6Sinvdw.gif)","914be663":"# 2. Doughnut chart","9b9f038f":"## Median compensation of Software Engineers by years of experience"}}