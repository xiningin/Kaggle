{"cell_type":{"c11fdc09":"code","0fe6c6a9":"code","24411c0f":"code","1543f996":"code","e36904ca":"code","5bd01309":"code","11af43e7":"code","3c734057":"code","ab072316":"code","8aa9b459":"code","7c8c752f":"code","383759d4":"code","05ff195f":"code","850f41b0":"code","26a56ffe":"code","2cab2218":"markdown","d18e8820":"markdown","909481e4":"markdown","b2b75629":"markdown","9dbf2d09":"markdown","203960cc":"markdown","94951646":"markdown","66367110":"markdown","1ac27804":"markdown"},"source":{"c11fdc09":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0fe6c6a9":"from sklearn.linear_model import LinearRegression\nimport pandas as pd\nimport matplotlib.pyplot as plt\n","24411c0f":"df = pd.read_csv(\"..\/input\/insurance\/insurance.csv\")","1543f996":"df","e36904ca":"df.head()","5bd01309":"y= df.charges","11af43e7":"x = df.iloc[:,0:1].values","3c734057":"y_predict = model.predict(x)","ab072316":"model = LinearRegression()\nmodel.fit(x,y)","8aa9b459":"y_predict = model.predict(x)\ny_predict","7c8c752f":"m = model.coef_\nm","383759d4":"c = model.intercept_\nc","05ff195f":"ypredict = m*x + c\nypredict","850f41b0":"x1 = 20\nx2 = 30\nw = model.predict([[x1],[x2]])\nw","26a56ffe":"plt.xlabel(\"Age\")\nplt.ylabel(\"Charges\")\nplt.scatter(x,y, color = \"green\")\nplt.plot(x,y_predict, c= \"red\")\nplt.scatter([x1,x2], w , color= \"blue\")","2cab2218":"y = mx + c\nthe linear relation of dependent variable with independent variable\nhere m is the slope or rate of change of y with respect to x\nc is the intercept","d18e8820":"predicting dependent variable or creating a best fit line","909481e4":"reading and storing data csv data in a variable\nThe data has been uploaded from my PC.","b2b75629":"importing python libraries","9dbf2d09":"plotting the dependent variable against independent one as scatter plot\nand prected one in line form which gives the best fit line through the scatter plot","203960cc":"Training the machine with the dependent and independent variable so that it can predict value for an unknown independent variable  ","94951646":"verifying that  predicted value of y works the same way as decided by mathematical relation","66367110":"taking independent variable out of the training set","1ac27804":"deciding upon dependent and independent variables .Dependent variable is one whose value is to be predicted based on independent data "}}