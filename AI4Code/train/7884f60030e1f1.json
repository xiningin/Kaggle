{"cell_type":{"a2361a05":"code","035d547e":"code","14c652fa":"code","4ca3d858":"code","fe7b3cf3":"code","ab719703":"code","c30c1f80":"code","ea09c700":"code","5b6928c6":"code","0a09f086":"code","dcd6b88c":"code","5cb3f92c":"code","98f96c27":"code","d8d893eb":"code","91125d3c":"code","9e7209b9":"code","c70feac2":"code","486ace8a":"code","8258e6da":"code","46e2a29b":"code","7d064760":"code","5783813f":"code","eb07d9fb":"code","65baac0b":"code","8c1bfee7":"code","61c9097e":"code","cac38571":"code","c4e03119":"code","4eb1c6d4":"code","b2ac6080":"code","a8003f62":"code","bae3ee2a":"code","94b1400b":"code","72c7c91b":"code","33339587":"code","2b431479":"code","7ab90db3":"code","6d848778":"code","3ece8780":"code","c246df41":"code","81369498":"code","c571b5c4":"code","ba47f7d9":"code","3e89902b":"code","2b1d254f":"code","a3911298":"code","6d2020e6":"code","c91e6b72":"code","f0c0b087":"code","1eaeedcd":"code","878f64c8":"code","022b7fbc":"code","f2f16c30":"code","b8a4e76b":"code","1ee04404":"code","15e55b8c":"code","29639948":"code","1265f17f":"code","0469039f":"code","92811ff2":"code","434a6bf5":"code","ae83baa7":"code","ab5c558e":"code","ccba7789":"code","bbce2877":"code","d6e9ad15":"code","9958e403":"code","fda2768b":"code","de610970":"markdown","aae420d8":"markdown","d29f7a21":"markdown","28c3ebc4":"markdown","d582b2ee":"markdown","c0266325":"markdown","61b5aa6a":"markdown","6c08e705":"markdown","af56818e":"markdown","a3b07ca9":"markdown","5ea2d2ed":"markdown","56281767":"markdown","64175086":"markdown","9e39f86f":"markdown","fd2ccada":"markdown","b5a9abdf":"markdown","7697dc1f":"markdown","5af29eda":"markdown","07d3cb97":"markdown","c398d082":"markdown","a15e0e4e":"markdown","f26b032f":"markdown","92125a95":"markdown","6e5056a9":"markdown"},"source":{"a2361a05":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\npd.set_option('Display.max_columns',None)","035d547e":"df = pd.read_csv('..\/input\/mushroom-classification\/mushrooms.csv')","14c652fa":"df","4ca3d858":"df.isnull().sum()","fe7b3cf3":"for feature in df.columns:\n    df[feature].value_counts().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('counts')\n    plt.show()","ab719703":"df.drop('veil-type',axis=1,inplace=True)","c30c1f80":"df['stalk-root'].unique()","ea09c700":"df['stalk-root'] = np.where(df['stalk-root']=='?','o',df['stalk-root'])","5b6928c6":"df.rename(columns={'class':'poisonous'},inplace=True)","0a09f086":"df['poisonous'].value_counts()","dcd6b88c":"df['poisonous'] = np.where(df['poisonous']=='p',1,0)","5cb3f92c":"df['poisonous'].value_counts()","98f96c27":"features = [ feature for feature in df.columns if feature != 'poisonous' ]","d8d893eb":"for feature in features:\n    sns.countplot(x=feature,data=df,hue='poisonous')\n    plt.show()\n    ","91125d3c":"for feature in features:\n    df.groupby(feature)['poisonous'].mean().plot.bar()\n    plt.xlabel(feature)\n    plt.show()","9e7209b9":"df.groupby(['stalk-color-above-ring'])['poisonous'].mean().sort_values()","c70feac2":"for feature in features:\n    ordered_labels = df.groupby([feature])['poisonous'].mean().sort_values().index\n    ordinal_label = {k:i for i,k in enumerate(ordered_labels,0)}\n    df[feature] = df[feature].map(ordinal_label)\n    ","486ace8a":"df.groupby(['stalk-color-above-ring'])['poisonous'].mean().sort_values()","8258e6da":"df","46e2a29b":"for feature in features:\n    df.groupby([feature])['poisonous'].mean().plot()\n    plt.show()","7d064760":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2","5783813f":"selectk = SelectKBest(score_func=chi2,k=12)","eb07d9fb":"feature_scores = selectk.fit(df.drop('poisonous',axis=1),df['poisonous'])","65baac0b":"feature_scores.scores_","8c1bfee7":"scores_df = pd.DataFrame(feature_scores.scores_)\nfeatures_df = pd.DataFrame(features)\nfeature_scores_df = pd.concat([features_df,scores_df],axis=1) \nfeature_scores_df.columns = ['feature','score']","61c9097e":"feature_scores_df.sort_values(by='score',ascending=False,inplace=True)","cac38571":"feature_scores_df","c4e03119":"feature_scores_df['score'].plot(kind='bar')","4eb1c6d4":"Best_features = feature_scores_df[feature_scores_df['score']>800]","b2ac6080":"Best_features","a8003f62":"sns.barplot(x='feature',y='score',data=Best_features)","bae3ee2a":"Best_features = Best_features['feature'].values","94b1400b":"Best_features","72c7c91b":"plt.figure(figsize=(20,20))\nsns.heatmap(df.corr(),annot=True)","33339587":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(df[Best_features],df['poisonous'],test_size = 0.2,random_state=0 )","2b431479":"X_train","7ab90db3":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","6d848778":"from sklearn.metrics import confusion_matrix,accuracy_score,roc_auc_score","3ece8780":"model = KNeighborsClassifier()","c246df41":"model.fit(X_train,y_train)","81369498":"y_predict = model.predict(X_test)","c571b5c4":"y_pred_proba0 = model.predict_proba(X_train)","ba47f7d9":"y_pred_proba1 = model.predict_proba(X_test)","3e89902b":"roc_auc_score(y_train,y_pred_proba0[:,1])","2b1d254f":"roc_auc_score(y_test,y_pred_proba1[:,1])","a3911298":"confusion_matrix(y_test,y_predict)","6d2020e6":"accuracy_score(y_test,y_predict)","c91e6b72":"from sklearn.model_selection import cross_val_score\ncross_val_score(model,df[Best_features].sample(frac=1,random_state=0),df['poisonous'].sample(frac=1,random_state=0),cv=5)","f0c0b087":"model = DecisionTreeClassifier()","1eaeedcd":"model.fit(X_train,y_train)","878f64c8":"y_predict = model.predict(X_test)","022b7fbc":"y_pred_proba0 = model.predict_proba(X_train)","f2f16c30":"y_pred_proba1 = model.predict_proba(X_test)","b8a4e76b":"roc_auc_score(y_train,y_pred_proba0[:,1])","1ee04404":"roc_auc_score(y_test,y_pred_proba1[:,1])","15e55b8c":"confusion_matrix(y_test,y_predict)","29639948":"accuracy_score(y_test,y_predict)","1265f17f":"from sklearn.model_selection import cross_val_score\ncross_val_score(model,df[Best_features].sample(frac=1,random_state=0),df['poisonous'].sample(frac=1,random_state=0),cv=5)","0469039f":"model = RandomForestClassifier()","92811ff2":"model.fit(X_train,y_train)","434a6bf5":"y_predict = model.predict(X_test)","ae83baa7":"y_pred_proba0 = model.predict_proba(X_train)","ab5c558e":"y_pred_proba1 = model.predict_proba(X_test)","ccba7789":"roc_auc_score(y_train,y_pred_proba0[:,1])","bbce2877":"roc_auc_score(y_test,y_pred_proba1[:,1])","d6e9ad15":"confusion_matrix(y_test,y_predict)","9958e403":"accuracy_score(y_test,y_predict)","fda2768b":"from sklearn.model_selection import cross_val_score\ncross_val_score(model,df[Best_features].sample(frac=1,random_state=0),df['poisonous'].sample(frac=1,random_state=0),cv=5)","de610970":"we are changing (poisonous) 'p' to 1  and (eatable) 'e' to 0.","aae420d8":"We are using Target guided encoding for handling categorical features because it gives us monotonic relationship with output variable.\n\nWe can also use mean encoding.\n\n","d29f7a21":"From above,\n\n           1 : In most of the features, the small amount categories holding more information regarding output variable.\n           2 : odor feature is higly correlated with output variable. ","28c3ebc4":"Visualising for better understanding.","d582b2ee":"Analysing every feature with count plot for better understanding of the data. ","c0266325":"Dataset is balanced. Which is positive sign. ","61b5aa6a":"We are selecting those features which are scored more than 800 ","6c08e705":"In this way for every feature, we can easily predict whether if value is less than threshold value than it is treated is eatable (0) else poisonous (1)    ","af56818e":"We are renaming output variable(class) to 'poisonous' for our convenience.","a3b07ca9":"From above,\n\n        1 : 'veil-type' has single label.So, we are droping it.\n        2 : 'stalk-root' has '?' label. we will change it to 'o'(other)\n        3 : There are many features having One or Two pre-dominant labels.\n        \n        ","5ea2d2ed":"#### Good Feature engineering, Feature selection and Balanced Dataset we got Maximum accuracy for all the above models.","56281767":"Now we will analyse each feature","64175086":"#### I hope you learned some new things.","9e39f86f":"Monotonic relationship between every feature and Target feature.\n\nHence,This is the reason why we used Target guided encoding.","fd2ccada":"for Feature selection we are using SelectKBest, chi2 (chi square). ","b5a9abdf":"We obtained scores related to every feature with respect to output variable.","7697dc1f":"From above, there are no Nan values present in Dataset.","5af29eda":"We are directly mapping ordinal numbers to the labels accordingly.   ","07d3cb97":"We are splitting our Dataset into training and testing with the help of train_test_split","c398d082":"#### Thank You...","a15e0e4e":"From above, we can notice that odor, gill-color, ring-type, spore-print-color are correlated more than 60% with respect to output variable.","f26b032f":"We are mapping each feature with respect to its score.","92125a95":"From above,\n\n       1 : There are one or more categories in each feature having mean = 1 and mean = 0\n           Which helps to easily classify the Mushroooms.\n        \n       2 : Again odor feature holding more information regarding output.","6e5056a9":"First we will check is there any nan values present in the Dataset."}}