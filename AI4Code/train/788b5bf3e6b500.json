{"cell_type":{"8e3bbe1a":"code","7dccec3e":"code","cd484fae":"code","b771d664":"code","233099da":"code","531db9ce":"code","6268a834":"code","0fd6e3f8":"code","1bdab566":"code","a9c5bb12":"code","3ca675bb":"markdown","8decb8a5":"markdown","1a16061d":"markdown","13b69fc5":"markdown","30b159cc":"markdown","c35eecc9":"markdown","ec9f82b5":"markdown","2dc7a979":"markdown","605e00bb":"markdown"},"source":{"8e3bbe1a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7dccec3e":"food = pd.read_csv(\"..\/input\/world-food-facts\/en.openfoodfacts.org.products.tsv\", sep='\\t')","cd484fae":"food.head()","b771d664":"food.shape","233099da":"len(food.columns)","531db9ce":"food.columns","6268a834":"food.columns[104]","0fd6e3f8":"food.dtypes['-glucose_100g']","1bdab566":"food.index","a9c5bb12":"food.iloc[18, 7]","3ca675bb":"### What is the product name of the 19th observation?","8decb8a5":"### What is the number of observations in the dataset?","1a16061d":"### Use the tsv file and assign it to a dataframe called food","13b69fc5":"### What is the name of 105th column?","30b159cc":"### Print the name of all the columns.","c35eecc9":"### See the first 5 entries","ec9f82b5":"### How is the dataset indexed?","2dc7a979":"### What is the number of columns in the dataset?","605e00bb":"### What is the type of the observations of the 105th column?"}}