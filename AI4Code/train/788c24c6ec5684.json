{"cell_type":{"1d97d4c7":"code","39e4fbd6":"code","29fe966e":"code","138033cd":"code","30421763":"code","b77fa81f":"code","b86c1b8b":"code","e94fee6d":"code","a5063332":"code","c56ced07":"code","77ba0118":"code","65f423c8":"code","60bcc133":"code","44c6ccf3":"code","dbcf4de3":"code","b3e906ec":"code","0d0ff73c":"code","c2500566":"code","757c5a2b":"code","86782f4d":"code","ae57ff31":"code","b640a025":"code","00de5463":"code","79ba3e6f":"code","903eaadc":"code","7458609a":"code","722aebf6":"code","a9438387":"markdown","b570177f":"markdown","9da57ca6":"markdown","af6874f8":"markdown","c7c1bc88":"markdown","69128612":"markdown","c796c128":"markdown","8d38e043":"markdown","c68593cd":"markdown","1f5be480":"markdown","beaf6eaf":"markdown","7727d586":"markdown","b0264b21":"markdown","2a854013":"markdown","f02d392c":"markdown","b8f18871":"markdown","851e1be4":"markdown","6a114a8b":"markdown","37b0d792":"markdown","1eb0b6b5":"markdown","36ce4534":"markdown","e4dc2b32":"markdown"},"source":{"1d97d4c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","39e4fbd6":"# Reading the csv file\ndf = pd.read_csv(\"\/kaggle\/input\/temperature-readings-iot-devices\/IOT-temp.csv\")\n# Printing the first 5 entries in the Dataframe\ndf.head()","29fe966e":"# Getting the number of rows and columns\ndf.shape","138033cd":"# Getting the dimensions of the Dataframe\ndf.ndim","30421763":"# Information regarding the dataset\ndf.info()","b77fa81f":"# Getting the unique values from the id columns\nunique_id = df['id'].unique()\nprint(len(unique_id))","b86c1b8b":"unique_room_id = df['room_id\/id'].unique()\nprint(unique_room_id)","e94fee6d":"df.describe()","a5063332":"data = df.iloc[:,3:]\ndata.head()","c56ced07":"data.shape","77ba0118":"from sklearn.preprocessing import LabelEncoder\nlec = LabelEncoder()\ndata['out\/in'] = lec.fit_transform(data['out\/in'])\ndata.head()","65f423c8":"import seaborn as sns\nsns.pairplot(data = data , hue = 'out\/in')","60bcc133":"import matplotlib.pyplot as plt\nplt.scatter(data['temp'],data['out\/in'])\nplt.title('Temperatur Scatter Plot')\nplt.xlabel('Temperature')\nplt.ylabel('IN\/OUT')\nplt.show()","44c6ccf3":"X = data['temp'].values\nprint(X[0:5])","dbcf4de3":"Y = data['out\/in'].values\nprint(Y[0:5])","b3e906ec":"X.shape\nX = X.reshape(-1,1)\nX.shape","0d0ff73c":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler().fit(X)\nX = sc.transform(X)\nprint(X[0:5])","c2500566":"from sklearn.model_selection import train_test_split\nX_train , x_test , Y_train , y_test = train_test_split(X,Y,test_size = 0.3)\nprint(X_train[0:5])","757c5a2b":"print(len(X_train))","86782f4d":"print(len(x_test))","ae57ff31":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(solver = 'liblinear')\nclassifier.fit(X_train,Y_train)","b640a025":"from sklearn.model_selection import cross_validate\nresults = cross_validate(classifier , X , Y , cv=5)\nprint(results)","00de5463":"y_pred = classifier.predict(x_test)","79ba3e6f":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_pred,y_test))","903eaadc":"from sklearn.svm import SVC\nclassifier2 = SVC(gamma = 'auto')\nclassifier2.fit(X_train,Y_train)","7458609a":"SVM_results = cross_validate(classifier2 , X, Y , cv=5)\nprint(SVM_results)","722aebf6":"y_pred_classifier2 = classifier2.predict(x_test)\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_pred_classifier2,y_test)","a9438387":"Splitting data into training and testing","b570177f":"I know that the data is not large, but the data has some temp reading that are corresponding to both in and out, so to split them, we have to introduce a kernel for that we use SVM.","9da57ca6":"Predicting and checking the accuracy score of our SVM model","af6874f8":"As their is a diversity between input and output variables or we can say dependent and independent variables, we standardize the data to get better results","c7c1bc88":"Converting the data into numpy array","69128612":"As we can see SVM performed better then Logistic Regression as the their were some observations that fell into both classes , due to the hyperplane technique of SVM. it was able to classify the temp is of what class , if it would have been a clear classification problem Logistic Regression would have performed well on this dataset.\nSo the final conclusion is we can assure a 80% accuracy from SVM and a 76% accuracy from Logistic Regression.","c796c128":"We can't work with text data so we encode it to get it in integer format","8d38e043":"Finding the accuracy score of our classifier","c68593cd":"Getting the userful data into the \"data\" dataframe","1f5be480":"Reshaping the data, becuase after converting into numpy it will convert the dataframe into an array of values,\nso we will have to reshape it to be rows x columns","beaf6eaf":"Cross validating the classifier on different partitions of data","7727d586":"Training our model on SVM","b0264b21":"Training our classifier on Logistic Regression as this is a cassification problem and we don't have diverse data","2a854013":"Confirming the dimensions of the data, as we can see we have 97606 rows and 2 columns","f02d392c":"Plotting a scatter plot of temperature against the class","b8f18871":"Cross Validating the SVM classifier on different distributions of data","851e1be4":"Plotting the pair plot of the data","6a114a8b":"Decribing our dataset to get the insights of dataset.","37b0d792":"**Here '0' means 'in' and '1' means 'out'.**","1eb0b6b5":"**Predicting the given temperature as temperature in the room or temperature outside the room.**\n\n\nAs we can see we have many variables but we are not concerned above the variables like \"id\" , \"room_id\/id\" , \"noted_date\" because this are classified as noisy or\nwe can say un-useful data because they don't have any impact on the class of our output.\nWe can consider \"noted_date\" as a parameter but we will not in our example as it will increase the complexity of the algorithm.\n","36ce4534":"> **Using Support Vector Machine for Classification**","e4dc2b32":"Predicting the values for x_test"}}