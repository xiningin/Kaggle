{"cell_type":{"5005ead5":"code","1e769777":"code","3660dd4a":"code","9f8b829a":"code","773bee5e":"code","5eba76bb":"code","5825295a":"code","e9db4273":"code","6fd03141":"code","71ba911c":"code","c29037da":"code","be239511":"code","ca4851e0":"code","2014ff51":"code","0505a18e":"code","02276550":"code","1db63c1e":"code","d0b8499d":"code","f7e12909":"code","7cc0a7a5":"code","c5f6ac84":"code","399dc9bc":"code","f4950aa7":"code","19d02f62":"code","971a30b8":"code","863a9dbb":"code","40377399":"markdown","a9a60a51":"markdown","7731f4b2":"markdown","f9ae9a8c":"markdown","793604cc":"markdown"},"source":{"5005ead5":"#All the required imports \n\nimport pandas as pd\nfrom glob import glob\nfrom matplotlib import pyplot as plt\nfrom PIL import Image as im\nfrom array import *\nimport math\nimport os\nimport cv2\nfrom sklearn import preprocessing\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport os,random\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom matplotlib.colors import ListedColormap","1e769777":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directorys\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3660dd4a":"#train and test dir in google drive \ntrain_dir='..\/input\/drive-retinal-vessel-segmentation-pixelwise\/DRIVE_Modified\/Modified_dataset_train'\ntest_dir='..\/input\/drive-retinal-vessel-segmentation-pixelwise\/DRIVE_Modified\/Modified_dataset_test'\n\ntraining_data = (glob(train_dir+'\/img*.csv'))\ntesting_data = (glob(test_dir+'\/img*.csv'))\n\n\n  ","9f8b829a":"print('Number of training imgs= '+str(len(training_data)) +'\\t'+'Number of testing imgs= '+str(len(testing_data)))","773bee5e":"#test and train file iterator \nfinal_training_data = pd.concat((pd.read_csv(file).assign(filename = file) \n                                for file in training_data), ignore_index = True)\nfinal_testing_data = pd.concat((pd.read_csv(file).assign(filename = file) \n                                for file in testing_data), ignore_index = True)","5eba76bb":"x_train=final_training_data[['R','G','B']].values\ny_train = (final_training_data['truth labels'].values\/255)\nx_test=final_testing_data[['R','G','B']].values\ny_test = (final_testing_data['truth labels'].values\/255)","5825295a":"\nx_train_scaled = x_train\/255\nx_test_scaled = x_test\/255\n","e9db4273":"test_file_img_pth='\/content\/drive\/MyDrive\/Datasets\/DRIVE_Modified\/Modified_dataset_test\/img1.csv'\ntrain_file_img_pth='\/content\/drive\/MyDrive\/Datasets\/DRIVE_Modified\/Modified_dataset_train\/img1.csv'\n\n\n\ntest_img=pd.read_csv(test_file_img_pth)\nprint(test_img.shape)\ntrain_img=pd.read_csv(train_file_img_pth)\nprint(train_img.shape)\n\ntest_img_1=test_img[['R','G','B']].values\ntest_img_1_scaled=test_img_1\/255\ntrain_img_1=train_img[['R','G','B']].values\ntrain_img_1_scaled=train_img_1\/255\n\ntest_img_1_label=(test_img['truth labels'].values\/255)\n\ntrain_img_1_label=(train_img['truth labels'].values)\/255\n\n","6fd03141":"!pip install -U imbalanced-learn","71ba911c":"import imblearn\nimblearn.__version__\n","c29037da":"from imblearn.over_sampling import ADASYN\nfrom imblearn.over_sampling import SMOTE\nadasyn = ADASYN()\nsmote=SMOTE()\nx_train_scaled_oversampled, y_train = smote.fit_resample(x_train_scaled, y_train)\nx_train_scaled_oversampled_1, y_train_1 = adasyn.fit_resample(train_img_1_scaled, train_img_1_label)","be239511":"#oversampling on one img data\nfrom imblearn.over_sampling import ADASYN\nadasyn = ADASYN()\nx_train_scaled_oversampled_1, y_train_1 = adasyn.fit_resample(train_img_1_scaled, train_img_1_label)","ca4851e0":"import xgboost as xgb\n\ndtrain = xgb.DMatrix(x_train_scaled_oversampled_1, label=y_train_1)\ndtest = xgb.DMatrix(test_img_1_scaled, label=test_img_1_label)","2014ff51":"evallist = [(dtest, 'eval'), (dtrain, 'train')]","0505a18e":"param = {'max_depth': 20, 'eta': 0.4, 'objective': 'binary:hinge','eval_metric':['auc','error'],'verbosity':1,'use_rmm':'true','seed':69420,'validate_parameters':'true','min_child_weight':3,'sampling_method':'gradient_based'}\n","02276550":"num_round = 100\nbst = xgb.train(param, dtrain, num_round, evallist)","1db63c1e":"bst.save_model('0001.model')","d0b8499d":"ypred = bst.predict(dtest)","f7e12909":"test_prediction = ypred.reshape((584,565),order='C')\nplt.imshow(test_prediction,cmap='gray')","7cc0a7a5":"import matplotlib.image as mpimg\ntest1_img = mpimg.imread('\/content\/drive\/MyDrive\/Datasets\/DRIVE\/test\/images\/01_test.tif')\nplt.imshow(test1_img)","c5f6ac84":"param = {'max_depth': 100, 'eta': 0.4, 'objective': 'binary:hinge','eval_metric':['auc','error'],'verbosity':1,'use_rmm':'true','seed':69420,'validate_parameters':'true','min_child_weight':5,'sampling_method':'gradient_based','gamma':10}\n","399dc9bc":"dtrain_full = xgb.DMatrix(x_train_scaled_oversampled, label=y_train)\ndtest_full = xgb.DMatrix(x_test_scaled, label=y_test)\n","f4950aa7":"num_round = 16\nbst_full_data = xgb.train(param, dtrain_full, num_round, evallist)","19d02f62":"ypred = bst_full_data.predict(dtest)","971a30b8":"ypred","863a9dbb":"test_prediction = ypred.reshape((584,565),order='C')\nplt.imshow(test_prediction,cmap='gray')","40377399":"## Trained on only 1 training image pixels \n","a9a60a51":"# oversampling the data","7731f4b2":"## XGBoost trained on all training images","f9ae9a8c":"# XGboost Model","793604cc":"plt.imshow(test_img['truth labels'].to_numpy().reshape((584,565),order='C'),cmap='gray')"}}