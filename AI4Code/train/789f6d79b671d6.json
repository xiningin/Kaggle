{"cell_type":{"45373817":"code","1f37f9b0":"code","b25b9f0c":"code","8319d9ac":"code","32f4686c":"code","ae96957b":"code","441b9500":"code","2bb8dec5":"code","5698d0c0":"code","42c64665":"code","46116539":"code","110d2250":"code","406371cb":"code","b706c4e3":"code","2076b989":"code","751fc1f2":"code","f3b3c3f8":"code","993af96c":"code","3ba90781":"markdown","3edfc31e":"markdown","0132ea6f":"markdown","4a324824":"markdown","626459c0":"markdown","a67a2cda":"markdown","74df8d32":"markdown"},"source":{"45373817":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1f37f9b0":"#Modules for EDA\nimport numpy as np \nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","b25b9f0c":"df = pd.read_csv('..\/input\/smart-cities-index-datasets\/Smart_City_index_headers.csv')\ndf.shape","8319d9ac":"df.columns","32f4686c":"df.head()","ae96957b":"df.drop('Id',axis=1,inplace=True)\ndf.head()","441b9500":"plt.figure(figsize=(7,7))\nsns.countplot(y=df['Country'])\nplt.title('Frequency of each country')\nplt.show()","2bb8dec5":"def getTop10Cities(category,retunData=False):\n    plt.figure(figsize=(7,7))\n    top10 = df[['City',category]].sort_values(by=category, ascending=False).head(10)\n    g=sns.barplot(data=top10,y='City',x=category)\n    #Add (hue='Country') parameter to see which city belong to which country\n    plt.title(f'Top 10 cities in {category}')\n    plt.show()\n\n    if retunData:\n        return top10","5698d0c0":"for col in df.columns[2:]:\n    getTop10Cities(col)\n    print('\\n')","42c64665":"plt.figure(figsize=(7,7))\nsns.pairplot(df,hue='Country')\nplt.show()","46116539":"countries = df.groupby('Country')\ncountry_names = df['Country'].unique()\ncolumns = df.columns[2:]","110d2250":"country_names","406371cb":"for country in country_names:\n    plt.figure(figsize=(7,7))\n    sns.barplot(x=countries.get_group(country)[columns].sum().values,y=columns)\n    plt.title(f'Overall Data of {country} country')\n    plt.show()","b706c4e3":"def overallRankings(category,retunData=False):\n    plt.figure(figsize=(9,9))\n    ranks = df[['Country',category]].sort_values(by=category, ascending=False)\n    g=sns.barplot(data=ranks,y='Country',x=category)\n    plt.title(f'Countries Overall Rankings in {category}')\n    plt.show()\n\n    if retunData:\n        return top10","2076b989":"for column in columns:\n    overallRankings(column)\n    print('\\n')","751fc1f2":"country_total=[]\nfor country in country_names:\n    total=countries.get_group(country)[columns].sum().sum()\n    country_total.append(total)","f3b3c3f8":"country_ranks = pd.DataFrame({'Country':country_names,'Total':country_total})\ncountry_ranks.sort_values(by='Total',ascending=False,inplace=True)","993af96c":"plt.figure(figsize=(15,9))\nsns.barplot(data=country_ranks, y='Country', x='Total')\nplt.title(\"Country Rankings.\")\nplt.show()","3ba90781":"# **Country Overall Stats**","3edfc31e":"# **Pair Plot**","0132ea6f":"# **Country Overall Rankings in each category**","4a324824":"# **Total Countries**","626459c0":"# **Ranking the countries**","a67a2cda":"# **Top 10 Cities in each category**","74df8d32":"# **Frequency of each country**"}}