{"cell_type":{"7ea5ab5c":"code","124987a9":"code","b0848ee4":"code","c5a11605":"code","9fe5a395":"code","184ab0d7":"code","5926a67b":"code","6dfb84a5":"code","15d1dea1":"code","140569bb":"code","9cc5a816":"code","b7c732f9":"code","88deefa0":"code","6fababdf":"code","d6556bea":"code","2f22c983":"code","c243b4b6":"code","6afbf29f":"code","1b2ca2ac":"markdown","dc8063c4":"markdown","95c985d3":"markdown","8e363aa4":"markdown","1148fba8":"markdown","36d7a11f":"markdown","5b49c7fc":"markdown","4612597d":"markdown","6e14d64c":"markdown","97709297":"markdown","31253e67":"markdown","c927d484":"markdown","fc525916":"markdown","0501fccf":"markdown","0f028fe8":"markdown","36cff777":"markdown","b565aa37":"markdown","701054da":"markdown","0fbab305":"markdown","b86c56ce":"markdown","7825157f":"markdown"},"source":{"7ea5ab5c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n%matplotlib inline\nsb.set_theme()\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","124987a9":"data = pd.read_csv('..\/input\/coursera-course-dataset\/coursea_data.csv',thousands=',')\n","b0848ee4":"data.drop_duplicates()\nprint(data.shape)\nprint(data.dtypes)\nprint(data.head())","c5a11605":"# first  i will see the distribution of course_rating \nplt.figure(figsize=[10,5])\nplt.hist(data = data , x = 'course_rating')\nplt.xlabel(\"ratings\")\nplt.ylabel(\"counts\")\nplt.title(\"the distribution of rating\");","9fe5a395":"plt.boxplot(data =data , x = 'course_rating');\nplt.xlabel(\"ratings\")\nplt.ylabel(\"counts\")\nplt.title(\"the distribution of rating\");","184ab0d7":"sb.countplot(data = data , x = 'course_Certificate_type')\nplt.xlabel(\"cirtification type\")\nplt.ylabel(\"count\")\nplt.title(\"count of course Certificate type\");","5926a67b":"sb.countplot(data = data , x = 'course_difficulty')\nplt.xlabel(\"difficulty\")\nplt.ylabel(\"count\")\nplt.title(\"count of course_difficulty\");","6dfb84a5":"## get the top 10 organization that published courses\nplt.figure(figsize = [12,5])\ntop_org = pd.DataFrame(data['course_organization'].value_counts()).head(10)\nsb.barplot(x = top_org.index , y = top_org.course_organization)\nplt.title(\"see the top 10 organization the published courses\")\nplt.xticks(rotation = 90);\n# top_org","15d1dea1":"data.course_students_enrolled = [float(str(i[:-1])) for i in data.course_students_enrolled]","140569bb":"palette = ['rocket_r','viridis','magma','crest']\n\n\ndef my_plot():\n    cat_data = ['course_Certificate_type' , 'course_difficulty']\n    num_data = ['course_rating','course_students_enrolled']\n    pal_index = 0\n    for i in num_data:\n        for j in cat_data:\n            avg = data.groupby(j)[i].mean().reset_index(name = 'avg')\n            sb.barplot(data = avg , x = j , y = 'avg' , palette = palette[pal_index])\n            plt.xticks(rotation = 15)\n            plt.title(\"see the average of {} for each {} \".format(i,j));\n            pal_index +=1\n            yield\n            \nmyplot = my_plot()\nnext(myplot)","9cc5a816":"next(myplot)","b7c732f9":"next(myplot)","88deefa0":"next(myplot)","6fababdf":"sb.countplot(data = data , x = 'course_Certificate_type' , hue = 'course_difficulty')\nplt.xticks(rotation = 15)","d6556bea":"top_rate = pd.DataFrame(data.sort_values(by = 'course_rating' , ascending = False))[['course_title','course_rating']].head(6)\nsb.barplot(data = top_rate , x = 'course_rating' , y = 'course_title')\nplt.title('top courses rated in coursera');","2f22c983":"top_enroll = pd.DataFrame(data.sort_values(by = 'course_students_enrolled' , \n                                           ascending = False)).head(6)\n# top_enroll\nprint(data.groupby(\"course_title\")['course_students_enrolled'].sum().sort_values(ascending = False))\n# data[data['course_title'] == \"Machine Learning\"]\nsb.barplot(data = top_enroll , x = 'course_students_enrolled' , y = 'course_title' , palette = 'rocket')\nplt.xlabel(\"course_students_enrolled in k\")\nplt.title('top courses enrolled by student in coursera');","c243b4b6":"plt.figure(figsize = [14,8])\nsb.stripplot(data = data , x = 'course_difficulty',y = 'course_rating', hue = 'course_Certificate_type',jitter = 0.35 , dodge = True)","6afbf29f":"plt.figure(figsize = [14,8])\nsb.stripplot(data = data , x = 'course_difficulty',y = 'course_students_enrolled', hue = 'course_Certificate_type',jitter = 0.35 , dodge = True)\nplt.ylim([0,400])","1b2ca2ac":"> as wee see all data is object and there is only one float (unnamed will not effect to our data so we will not use it)","dc8063c4":">  **i make it from 0 to 400 to see the data better that to 800 most of them are less than 400k student**","95c985d3":"# conclusion","8e363aa4":"> first we want to change the students enrolled number  to make it float ","1148fba8":"> as wee see here in the bigenner for exmaple the normal courses have most rate and number of courses than other and professional have high rate also but lower number of courses","36d7a11f":"> **as wee see from the two plots that there is outliers in the rating course and the most of rating between 4.25 to 5**","5b49c7fc":"> as wee see that the most type is normal courses and the professional is the less one","4612597d":"# Explore the data","6e14d64c":"> here the biginner courses are the most courses in our data and advanced are the less one between them ","97709297":"# Multivariate Exploration","31253e67":"# Univariate Exploration","c927d484":"#### now let't see how many certification type for each difficulty","fc525916":"> see the data types of each column in our data","0501fccf":"# Bivariate Exploration","0f028fe8":"### now let's see the count of course difficulty","36cff777":"#### now let's get top courses based on rating and based on student enroll","b565aa37":"1. In this dataset i found that the most popular courses is normal courses\n2. the Beginner courses are the most popular courses in coursera\n3. But the professional courses type are the most type of courses that student enrolled in it \n4. then the mixed difficulty type of courses also the most that student enrolled then the beginner courses\n5. the most organization published courses in coursera is University of Pennsylvania ","701054da":"> as wee see that the **normal course** include the four type of difficulty and **professional** have beginner and intemediate only and have a small number of these types finally **specialization** have 3 difficulty type","0fbab305":"> **let's see same plot but with certificate type and difficulty by enrolled student**","b86c56ce":"# Read Data","7825157f":"### now let's explore and know the count of course cirtification type"}}