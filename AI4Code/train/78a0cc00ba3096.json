{"cell_type":{"f8649452":"code","86b841d0":"code","9607c307":"code","930e9617":"code","c2f15765":"code","12173d05":"code","72e72bd8":"code","f3cd4839":"code","413e509a":"code","a5a7e1e6":"markdown","48c8ba2c":"markdown"},"source":{"f8649452":"import datetime\nstart_time = datetime.datetime.now()\n\nimport pandas as pd\nimport numpy as np\nimport os\nimport torch\nimport imagehash\nimport glob\nimport matplotlib.pyplot as plt\n\nfrom tqdm.auto import  tqdm\nfrom PIL import Image","86b841d0":"TRAIN_DIR = '..\/input\/cassava-leaf-disease-classification\/train_images\/'\nTRAIN_CSV_PATH = '..\/input\/cassava-leaf-disease-classification\/train.csv'","9607c307":"train = pd.read_csv(TRAIN_CSV_PATH)\n","930e9617":"funcs = [\n        imagehash.average_hash,\n        imagehash.phash,\n        imagehash.dhash,\n        imagehash.whash,\n    ]\nimage_ids = []\nhashes = []\n\nfor path in tqdm(glob.glob(TRAIN_DIR + '*.jpg' )):\n    image = Image.open(path)\n    image_id = os.path.basename(path)\n    image_ids.append(image_id)\n    hashes.append(np.array([f(image).hash for f in funcs]).reshape(256))\n\nhashes_all = np.array(hashes)","c2f15765":"hashes_all = torch.Tensor(hashes_all.astype(int)).cuda()","12173d05":"sims = np.array([(hashes_all[i] == hashes_all).sum(dim=1).cpu().numpy()\/256 for i in range(hashes_all.shape[0])])","72e72bd8":"indices1 = np.where(sims > 0.9)\nindices2 = np.where(indices1[0] != indices1[1])\nimage_ids1 = [image_ids[i] for i in indices1[0][indices2]]\nimage_ids2 = [image_ids[i] for i in indices1[1][indices2]]\ndups = {tuple(sorted([image_id1,image_id2])):True for image_id1, image_id2 in zip(image_ids1, image_ids2)}\nprint('found %d duplicates' % len(dups))","f3cd4839":"duplicate_image_ids = sorted(list(dups))\n\nfig, axs = plt.subplots(2, 2, figsize=(15,15))\n\nfor row in range(2):\n        for col in range(2):\n            img_id = duplicate_image_ids[row][col]\n            img = Image.open(TRAIN_DIR + img_id)\n            label =str(train.loc[train['image_id'] == img_id].label.values[0])\n            axs[row, col].imshow(img)\n            axs[row, col].set_title(\"image_id : \"+ img_id + \"  label : \" + label)\n            axs[row, col].axis('off')","413e509a":"end_time = datetime.datetime.now()\nprint(end_time - start_time)","a5a7e1e6":"### There seems to be duplicate images in train_images\n- ('1562043567.jpg', '3551135685.jpg') and ('2252529694.jpg', '911861181.jpg')\n- 1562043567.jpg and 3551135685.jpg seem to be given different labels.\n\n### This notebook is based on [Let's find out duplicate images with imagehash](https:\/\/www.kaggle.com\/appian\/let-s-find-out-duplicate-images-with-imagehash)","48c8ba2c":"Thank you for reading."}}