{"cell_type":{"3807b7ec":"code","e4ea340b":"code","b458a03f":"code","ca06aefd":"code","c7bb3c78":"code","0ba1f737":"code","197801f4":"code","8797dcf4":"code","682bdc67":"code","c6396c66":"code","9f8d3fe2":"code","3287abda":"code","2c8e8218":"markdown","1be99e50":"markdown","4434961e":"markdown","0f46a56c":"markdown"},"source":{"3807b7ec":"import numpy as np\nimport pandas as pd\n\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.io as pio\nfrom plotly.offline import init_notebook_mode, iplot\npio.templates.default = \"plotly_dark\"\nfrom plotly.subplots import make_subplots","e4ea340b":"cleaned_data = pd.read_csv('..\/input\/corona-virus-report\/covid_19_clean_complete.csv', parse_dates=['Date'])","b458a03f":"cleaned_data.rename(columns={'ObservationDate': 'date', \n                     'Province\/State':'state',\n                     'Country\/Region':'country',\n                     'Last Update':'last_updated',\n                     'Confirmed': 'confirmed',\n                     'Deaths':'deaths',\n                     'Recovered':'recovered'\n                    }, inplace=True)\n\n# cases \ncases = ['confirmed', 'deaths', 'recovered', 'active']\n\n# Active Case = confirmed - deaths - recovered\ncleaned_data['active'] = cleaned_data['confirmed'] - cleaned_data['deaths'] - cleaned_data['recovered']\n\n# replacing Mainland china with just China\ncleaned_data['country'] = cleaned_data['country'].replace('Mainland China', 'China')\ncleaned_data['country'] = cleaned_data['country'].replace('Korea, South', 'South Korea')\n\n# filling missing values \ncleaned_data[['state']] = cleaned_data[['state']].fillna('')\ncleaned_data[cases] = cleaned_data[cases].fillna(0)\ncleaned_data.rename(columns={'Date':'date'}, inplace=True)\n\ndata = cleaned_data\n\ndata['mortality rate'] = (100.* (data['deaths']\/data['confirmed'])).round(1)","ca06aefd":"grouped_china = data[data['country'] == \"China\"].reset_index()\ngrouped_china_date = grouped_china.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_china_date = grouped_china_date[grouped_china_date ['confirmed']>= 100]\ngrouped_china_date['Day']=np.arange(len(grouped_china_date))\n\ngrouped_italy = data[data['country'] == \"Italy\"].reset_index()\ngrouped_italy_date = grouped_italy.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_italy_date = grouped_italy_date[grouped_italy_date ['confirmed']>= 100]\ngrouped_italy_date['Day']=np.arange(len(grouped_italy_date))\n\ngrouped_spain = data[data['country'] == \"Spain\"].reset_index()\ngrouped_spain_date = grouped_spain.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_spain_date = grouped_spain_date[grouped_spain_date ['confirmed']>= 100]\ngrouped_spain_date['Day']=np.arange(len(grouped_spain_date))\n\ngrouped_uk = data[data['country'] == \"United Kingdom\"].reset_index()\ngrouped_uk_date = grouped_uk.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_uk_date = grouped_uk_date[grouped_uk_date ['confirmed']>= 100]\ngrouped_uk_date['Day']=np.arange(len(grouped_uk_date))\n\ngrouped_us = data[data['country'] == \"US\"].reset_index()\ngrouped_us_date = grouped_us.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_us_date = grouped_us_date[grouped_us_date ['confirmed']>= 100]\ngrouped_us_date['Day']=np.arange(len(grouped_us_date))\n\ngrouped_india = data[data['country'] == \"India\"].reset_index()\ngrouped_india_date = grouped_india.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_india_date = grouped_india_date[grouped_india_date ['confirmed']>= 100]\ngrouped_india_date['Day']=np.arange(len(grouped_india_date))\n\ngrouped_france = data[data['country'] == \"France\"].reset_index()\ngrouped_france_date = grouped_france.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_france_date = grouped_france_date[grouped_france_date ['confirmed']>= 100]\ngrouped_france_date['Day']=np.arange(len(grouped_france_date))\n\ngrouped_germany = data[data['country'] == \"Germany\"].reset_index()\ngrouped_germany_date = grouped_germany.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_germany_date = grouped_germany_date[grouped_germany_date ['confirmed']>= 100]\ngrouped_germany_date['Day']=np.arange(len(grouped_germany_date))\n\ngrouped_brazil = data[data['country'] == \"Brazil\"].reset_index()\ngrouped_brazil_date = grouped_brazil.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_brazil_date = grouped_brazil_date[grouped_brazil_date ['confirmed']>= 100]\ngrouped_brazil_date['Day']=np.arange(len(grouped_brazil_date))\n\ngrouped_russia = data[data['country'] == \"Russia\"].reset_index()\ngrouped_russia_date = grouped_russia.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()\ngrouped_russia_date = grouped_russia_date[grouped_russia_date ['confirmed']>= 100]\ngrouped_russia_date['Day']=np.arange(len(grouped_russia_date))","c7bb3c78":"grouped_china_date['mortality_rate']= (100. * (grouped_china_date['deaths']\/ grouped_china_date['confirmed'])).round(1)\ngrouped_italy_date['mortality_rate']= (100. * (grouped_italy_date['deaths']\/ grouped_italy_date['confirmed'])).round(1)\ngrouped_spain_date['mortality_rate']= (100. * (grouped_spain_date['deaths']\/ grouped_spain_date['confirmed'])).round(1)\ngrouped_uk_date['mortality_rate']= (100. * (grouped_uk_date['deaths']\/ grouped_uk_date['confirmed'])).round(1)\ngrouped_us_date['mortality_rate']= (100. * (grouped_us_date['deaths']\/ grouped_us_date['confirmed'])).round(1)\ngrouped_india_date['mortality_rate']= (100. * (grouped_india_date['deaths']\/ grouped_india_date['confirmed'])).round(1)\ngrouped_france_date['mortality_rate']= (100. * (grouped_france_date['deaths']\/ grouped_france_date['confirmed'])).round(1)\ngrouped_germany_date['mortality_rate']= (100. * (grouped_germany_date['deaths']\/ grouped_germany_date['confirmed'])).round(1)\ngrouped_brazil_date['mortality_rate']= (100. * (grouped_brazil_date['deaths']\/ grouped_brazil_date['confirmed'])).round(1)\ngrouped_russia_date['mortality_rate']= (100. * (grouped_russia_date['deaths']\/ grouped_russia_date['confirmed'])).round(1)","0ba1f737":"total_days = (data['date'].max() - data['date'].min()).days\ntemp =100\n\ntheoretical_3 = [temp]\ndays_3= []\n\nfor x in range(0,total_days,3):\n        days_3.append(x)\n        temp = temp * 2\n        theoretical_3.append(temp)","197801f4":"temp =100\n\ntheoretical_7 = [temp]\ndays_7= []\n\nfor x in range(0,total_days,7):\n        days_7.append(x)\n        temp = temp * 2\n        theoretical_7.append(temp)","8797dcf4":"print(\"External Data\")\nprint(f\"Earliest Entry: {data['date'].min()}\")\nprint(f\"Last Entry:     {data['date'].max()}\")\nprint(f\"Total Days:     {data['date'].max() - data['date'].min()}\")","682bdc67":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x= grouped_china_date.Day, y= grouped_china_date.confirmed, name ='China',\n                         line=dict(color='firebrick', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_russia_date.Day, y= grouped_russia_date.confirmed, name ='Russia',\n                         line=dict(color='royalblue', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_spain_date.Day, y= grouped_spain_date.confirmed, name='Spain',\n                         line=dict(color='yellow', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_uk_date.Day, y= grouped_uk_date.confirmed, name='UK',\n                         line=dict(color='goldenrod', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_brazil_date.Day, y= grouped_brazil_date.confirmed, name='Brazil',\n                         line=dict(color='pink', width=4)))\n\n\nfig.add_trace(go.Scatter(x= grouped_us_date.Day, y= grouped_us_date.confirmed, name='US',\n                         line=dict(color='green', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_india_date.Day, y= grouped_india_date.confirmed, name='India',\n                         line=dict(color='orange', width=4)))\n\n#fig.add_trace(go.Scatter(x= days_3, y= theoretical_3, name='cases doubling every 3 days',\n #                        line=dict(color='white', width=4, dash= 'dot')))\n\n#fig.add_trace(go.Scatter(x= days_7, y= theoretical_7, name='cases doubling every 7 days',\n #                        line=dict(color='white', width=4, dash= 'dot')))\n\nfig.update_layout(title='Curve comparing COVID-19 in different countries',\n                   xaxis_title='Day',\n                   yaxis_title='Confirmed Cases')\n\nfig.update_yaxes(type=\"log\")\n\nfig.show()","c6396c66":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x= grouped_china_date.Day, y= grouped_china_date.mortality_rate, name ='China',\n                         line=dict(color='firebrick', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_italy_date.Day, y= grouped_italy_date.mortality_rate, name ='Italy',\n                         line=dict(color='royalblue', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_spain_date.Day, y= grouped_spain_date.mortality_rate, name='Spain',\n                         line=dict(color='yellow', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_germany_date.Day, y= grouped_germany_date.mortality_rate, name='Germany',\n                         line=dict(color='purple', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_uk_date.Day, y= grouped_uk_date.mortality_rate, name='UK',\n                         line=dict(color='goldenrod', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_france_date.Day, y= grouped_france_date.mortality_rate, name='France',\n                         line=dict(color='pink', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_us_date.Day, y= grouped_us_date.mortality_rate, name='US',\n                         line=dict(color='green', width=4)))\n\nfig.add_trace(go.Scatter(x= grouped_india_date.Day, y= grouped_india_date.mortality_rate, name='India',\n                         line=dict(color='orange', width=4)))\n\nfig.update_layout(title='Curve comparing mortality rates across different countries',\n                   xaxis_title='Day',\n                   yaxis_title='Mortality rates')\n\n#fig.update_yaxes(type=\"log\")\n\nfig.show()","9f8d3fe2":"mortality_data = data[data['date']== data['date'].max()]\nmortality_data = mortality_data.groupby('country')['confirmed','deaths'].sum().reset_index()\nmortality_data ['mortality rate']= (100. * (mortality_data['deaths']\/ mortality_data['confirmed'])).round(1)\nmortality_data = mortality_data.sort_values(by=['confirmed'], ascending = False)","3287abda":"fig = px.bar(mortality_data.head(10), x='country', y ='mortality rate', height= 500, text = 'mortality rate')\nfig.update_traces(textposition = 'outside')\nfig.show()","2c8e8218":"# Curve comparing COVID-19 in different countries","1be99e50":"# Information about the Dataset","4434961e":"# Comparing the trend of Mortality rates across countries","0f46a56c":"# Comparing Mortality rates of different countries"}}