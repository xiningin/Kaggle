{"cell_type":{"39d9f416":"code","70589f07":"code","0f7fc292":"code","5089b052":"code","5949f415":"code","eb8037a4":"code","f637c5c6":"code","025bdd0f":"code","04cd6a0d":"code","90c46795":"code","77374383":"code","ba814a66":"code","d6a8934e":"code","877805f6":"code","9bcec671":"code","e55227ca":"code","886e0cfe":"code","20d6c58a":"code","90d16e4f":"code","7875ad1a":"code","92db9727":"code","a9ea94aa":"code","96381ca4":"code","27f6e30e":"code","6d9a1bc1":"code","327d72d9":"code","6cd7df16":"code","74db5aad":"code","98bbfea6":"code","a3ddfeca":"code","d0e3e66e":"code","b68d8304":"code","a49d7fed":"code","85383742":"code","3f5eb0ac":"code","6ab28552":"code","f3399ced":"code","5d63d40a":"code","e52f58a9":"markdown","cd902cf1":"markdown","6438d9f5":"markdown","c5208b9e":"markdown","e3da0a5c":"markdown","6fbd6760":"markdown","db8abe3c":"markdown","3814edde":"markdown","eea0999b":"markdown","4a48e8a2":"markdown","96dfeb87":"markdown","4d0762aa":"markdown","8e85f19c":"markdown","648568eb":"markdown","bbeee883":"markdown","6b08a320":"markdown","ced85e8a":"markdown","575ff64a":"markdown","6fae61bc":"markdown","e00bec01":"markdown","1b6b31a9":"markdown","21dfcb48":"markdown","de4c398b":"markdown","e1d6c97c":"markdown","38607202":"markdown"},"source":{"39d9f416":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","70589f07":"df=pd.read_csv('\/kaggle\/input\/real-estate-price-prediction\/Real estate.csv')","0f7fc292":"df.head()","5089b052":"df.tail()","5949f415":"df.describe()","eb8037a4":"df.info()","f637c5c6":"df.shape","025bdd0f":"df.corr()","04cd6a0d":"plt.figure(figsize=(12,5))\nsns.displot(x=df['Y house price of unit area'], kde=True, aspect=2, color='green')\nplt.xlabel('House Price ')","90c46795":"ax = sns.heatmap(df.corr(),annot=True,linewidths=.7,cmap='coolwarm')","77374383":"sns.pairplot(df)","ba814a66":"X= df.drop('Y house price of unit area', axis=1)\ny=df['Y house price of unit area']","d6a8934e":"X.shape,y.shape","877805f6":"from sklearn.preprocessing import PolynomialFeatures\npolynomial_converter= PolynomialFeatures(degree=3, include_bias=False)\npoly_features= polynomial_converter.fit_transform(X)\npoly_features.shape","9bcec671":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","e55227ca":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()\nscaler.fit(X_train)","886e0cfe":"X_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)\n\nX_train,y_train,X_test,y_test","20d6c58a":"from sklearn.linear_model import Ridge\nridge_model= Ridge(alpha=10)\nridge_model.fit(X_train, y_train)","90d16e4f":"y_pred= ridge_model.predict(X_test)","7875ad1a":"from sklearn.metrics import mean_absolute_error, mean_squared_error\n\nMAE= mean_absolute_error(y_test, y_pred)\nMSE= mean_squared_error(y_test, y_pred)\nRMSE= np.sqrt(MSE)","92db9727":"from sklearn.linear_model import RidgeCV\nridge_cv_model=RidgeCV(alphas=(0.1, 1.0, 10.0), scoring='neg_mean_absolute_error')\nridge_cv_model.fit(X_train, y_train)\n","a9ea94aa":"ridge_cv_model.alpha_","96381ca4":"y_pred_ridge= ridge_cv_model.predict(X_test)","27f6e30e":"MAE_ridge= mean_absolute_error(y_test, y_pred_ridge)\nMSE_ridge= mean_squared_error(y_test, y_pred_ridge)\nRMSE_ridge= np.sqrt(MSE_ridge)","6d9a1bc1":"pd.DataFrame([MAE_ridge, MSE_ridge, RMSE_ridge], index=['MAE', 'MSE', 'RMSE'], columns=['Ridge Metrics'])","327d72d9":"ridge_cv_model.coef_","6cd7df16":"from sklearn.linear_model import LassoCV\nlasso_cv_model= LassoCV(eps=0.01, n_alphas=100, cv=5)\nlasso_cv_model.fit(X_train, y_train)\n","74db5aad":"lasso_cv_model.alpha_","98bbfea6":"y_pred_lasso= lasso_cv_model.predict(X_test)","a3ddfeca":"MAE_Lasso= mean_absolute_error(y_test, y_pred_lasso)\nMSE_Lasso= mean_squared_error(y_test, y_pred_lasso)\nRMSE_Lasso= np.sqrt(MSE_Lasso)","d0e3e66e":"pd.DataFrame([MAE_Lasso, MSE_Lasso, RMSE_Lasso], index=['MAE', 'MSE', 'RMSE'], columns=['Lasso Metrics'])","b68d8304":"lasso_cv_model.coef_","a49d7fed":"from sklearn.linear_model import ElasticNetCV\nelastic_model= ElasticNetCV(l1_ratio=[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1],cv=5, max_iter=150000)\nelastic_model.fit(X_train, y_train)\n","85383742":"elastic_model.l1_ratio_","3f5eb0ac":"y_pred_elastic=elastic_model.predict(X_test)","6ab28552":"MAE_Elastic= mean_absolute_error(y_test, y_pred_elastic)\nMSE_Elastic= mean_squared_error(y_test, y_pred_elastic)\nRMSE_Elastic= np.sqrt(MSE_Elastic)","f3399ced":"pd.DataFrame([MAE_Elastic, MSE_Elastic, RMSE_Elastic], index=['MAE', 'MSE', 'RMSE'], columns=['Elastic Metrics'])","5d63d40a":"elastic_model.coef_","e52f58a9":"![5.png](attachment:083f9da0-57a5-4529-bf6e-a95c0b3aa186.png)","cd902cf1":"![1.png](attachment:bab6d64b-dc24-4afb-9399-9aba525997a9.png)","6438d9f5":"# Regularization","c5208b9e":"# Import Data","e3da0a5c":"# Metrics","6fbd6760":"![1.png](attachment:8e5eb074-dc90-421a-8010-6409fbf6a6fc.png)","db8abe3c":"![3.png](attachment:00989d64-443b-4f80-be7f-fadbb4cdb091.png)","3814edde":"# Metrics","eea0999b":"![1.png](attachment:6e861fe4-5e51-4c13-897b-5b53371091cd.png)","4a48e8a2":"![3.png](attachment:b0c348c7-6e67-43fc-b966-1b1292fa3589.png)","96dfeb87":"# Model Evaluation","4d0762aa":"# Data Overview","8e85f19c":"# Import libraries","648568eb":"![1.png](attachment:b4d28c58-bf77-4739-b1d7-60b90243c3dd.png)","bbeee883":"#  Determine Features and Label","6b08a320":"![2.png](attachment:5948ea53-6120-4169-b2a9-c4013ea7f7e0.png)","ced85e8a":"# Ridge Regression_Alpha value with Cross-validation","575ff64a":"# Metrics","6fae61bc":"# Metrics","e00bec01":"# Exploratory Data Analysis","1b6b31a9":"# Preprocessing","21dfcb48":"pd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['metrics'])","de4c398b":"# Scalling DATA","e1d6c97c":"![3.png](attachment:f0f3864a-e58f-471d-b22b-fb3829d4ef40.png)","38607202":"# Split Data to Train and Test"}}