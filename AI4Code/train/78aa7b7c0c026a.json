{"cell_type":{"4e89b5e7":"code","344125e0":"code","25a9585d":"code","b959c4d8":"code","d1a12bcb":"code","aa495b91":"code","612381d0":"code","426479e7":"code","7147ea32":"code","b0c5d82d":"code","f295a7fc":"code","e1edfe3f":"code","1ac9aa23":"code","cc5cc91c":"code","f2b8a626":"markdown","18d1403c":"markdown","2ca2bd1f":"markdown"},"source":{"4e89b5e7":"# from IPython.display import HTML\n# HTML('''\n# <script>\n#   function code_toggle() {\n#     if (code_shown){\n#       $('div.input').hide('500');\n#       $('#toggleButton').val('Show Code')\n#     } else {\n#       $('div.input').show('500');\n#       $('#toggleButton').val('Hide Code')\n#     }\n#     code_shown = !code_shown\n#   }\n\n#   $( document ).ready(function(){\n#     code_shown=false;\n#     $('div.input').hide()\n#   });\n# <\/script>\n# <form action=\"javascript:code_toggle()\"><input type=\"submit\" id=\"toggleButton\" value=\"Show Code\"><\/form>''')","344125e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n\n# Any results you write to the current directory are saved as output.","25a9585d":"import warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(\"..\/input\/data.csv\")\ndf = df.drop('Unnamed: 0', axis=1)\ndf.head()","b959c4d8":"import matplotlib.pyplot as plt\nplt.hist(df['Age'])\nplt.xlabel('Players Age')\nplt.ylabel('Number of players')\nplt.show()\noldest = df.loc[df['Age'].idxmax()]\nprint(\"The oldest player in FIFA 19 is\", df['Age'].max(), \"years old. His name is\", oldest['Name'], \n      'he is from',oldest['Nationality'],'and plays for',oldest['Club'],'.')\nprint('The median age of a player on FIFA 19 is', np.mean(df['Age']))\nyoungest = df.loc[df['Age'].idxmin()]\nprint('The youngest players is',df['Age'].min(), \"years old. His name is\", youngest['Name'], \n      'he is from',youngest['Nationality'],'and plays for',youngest['Club'],'.')","d1a12bcb":"import matplotlib.pyplot as plt\nplt.hist(df['Overall'])\nplt.xlabel('Players Rating')\nplt.ylabel('Number of players')\nplt.show()\nbest = df.loc[df['Overall'].idxmax()]\nprint(\"The best player in FIFA 19 is\", df['Overall'].max(), \"overall. His name is\", best['Name'], \n      'he is from',best['Nationality'],'and plays for',best['Club'],'.')\nprint('The median rating of a player on FIFA 19 is', np.mean(df['Overall']))\nworst = df.loc[df['Overall'].idxmin()]\nprint('The worst players is',df['Overall'].min(), \"overall. His name is\", worst['Name'], \n      'he is from',worst['Nationality'],'and plays for',worst['Club'],'.')","aa495b91":"import matplotlib.pyplot as plt\nplt.hist(df['Potential'])\nplt.xlabel('Players Potential')\nplt.ylabel('Number of players')\nplt.show()\nbestp = df.loc[df['Potential'].idxmax()]\nprint(\"The best potential player in FIFA 19 is\", df['Potential'].max(), \"overall. His name is\", bestp['Name'], \n      'he is from',bestp['Nationality'],'and plays for',bestp['Club'],'.')\nprint('The median potential rating of a player on FIFA 19 is', np.mean(df['Potential']))\nworstp = df.loc[df['Potential'].idxmin()]\nprint('The worst potential player is',df['Potential'].min(), \"overall. His name is\", worstp['Name'], \n      'he is from',worstp['Nationality'],'and plays for',worstp['Club'],'.')","612381d0":"import seaborn as sns\nplt.figure(figsize=(20, 15))\nsns.regplot(df['Age'] , df['Overall'])\nplt.title('Age vs Overall rating')\nplt.show()","426479e7":"#Creating Dateframe with playars above 88 overall\ndf1 = df.query(\"Overall>=88\")\ndf1.head()","7147ea32":"plt.hist(df1.Age)\nplt.xlabel('Age')\nplt.ylabel('Number df players')\nplt.title('Number of Players with Rating greater than 90')","b0c5d82d":"import seaborn as sns\nplt.figure(figsize=(10,8))\nsns.heatmap(df1.corr(),linewidths=4)\nplt.title('Dataset Heatmap')\nplt.show()","f295a7fc":"#Getting rid of all the elements that makes difficult to convert the different columns datatypes\ndf1['Value'] = df1['Value'].str.replace('\u20ac', '')\n#df1['Value'] = df1['Value'].str.replace('K', '000')\ndf1['Value'] = df1['Value'].str.replace('M', '')\ndf1['Wage'] = df1['Wage'].str.replace('\u20ac', '')\ndf1['Wage'] = df1['Wage'].str.replace('K', '')\n\n# Changing the datatypes of the selected columns\ndf1.Value = df1.Value.astype('float')\ndf1.Wage = df1.Wage.astype('int')\ndf1.Name = df1.Name.astype('category')","e1edfe3f":"plt.figure(figsize=(10, 10))\ndf2 = df1.sort_values(['Value'])\nsns.barplot(x = \"Name\" , y  = 'Value', data = df2 ,order = df2['Name'], \n             palette = 'rocket')\nplt.title(\"Value of players (In millions)\")\nplt.xticks(rotation = 90)","1ac9aa23":"plt.figure(figsize=(10, 10))\ndf2 = df1.sort_values(['Wage'])\nsns.barplot(x = \"Name\" , y  = 'Wage', data = df2 ,order = df2['Name'], \n             palette = 'rocket')\nplt.title(\"Wage Of players (In K)\")\nplt.xticks(rotation = 90)","cc5cc91c":"import matplotlib.pyplot as plt; plt.rcdefaults()\n\ndf_best_players = pd.DataFrame.copy(df.sort_values(by = 'Overall' , \n                                                   ascending = False ).head(22))\n\nplt.figure(figsize=(35, 10))\nplt.bar('Name' , 'Overall' , data = df_best_players, width=0.7)\nplt.xlabel('Players names', fontsize=20) \nplt.xticks(rotation = 90,fontsize=20, fontname='monospace')\nplt.ylabel('Overall Rating', fontsize=20)\nplt.title('Top 22 players Overall Rating', fontsize=25)\nplt.ylim(87 , 95)\nplt.show()","f2b8a626":"**Data Visualization**","18d1403c":"**FIFA 19 Dataset Analysis**","2ca2bd1f":"**Data Preprocessing**"}}