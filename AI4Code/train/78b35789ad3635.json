{"cell_type":{"4cef5be9":"code","1fdda648":"code","5171a989":"code","0975ac91":"code","e498c374":"code","c6892fba":"code","5c46ebcd":"code","dbbdc662":"code","d4a0feee":"code","fb41c8c8":"code","68ecf19a":"code","308ed82f":"code","1355a6c1":"code","913b769f":"code","4525c1df":"code","3ca930f2":"code","2205b0c3":"code","def26932":"code","7725e2b9":"code","03a55e32":"code","5c7d5466":"code","471cafa4":"code","4acf173c":"code","b37bc29a":"code","453e2e1c":"code","fdc0d929":"code","11e09ea5":"code","c615f5d3":"code","e547b54d":"code","dd9b67b3":"code","2f4c31b3":"code","7000ff8a":"code","e65abbf9":"code","cde5fd1f":"code","d62e5f9c":"code","6c97fd1b":"code","028e8afc":"code","ddcce18e":"code","854c729f":"code","65530d27":"code","0e771ee9":"code","c5dba28f":"code","6769f58d":"markdown","d939f71a":"markdown","18b7534a":"markdown","101c01f0":"markdown","cbb46f8f":"markdown","100a8c34":"markdown","cc952fe2":"markdown","7b232f0a":"markdown","b864cd87":"markdown","c5c1a477":"markdown","8f6a36ec":"markdown","0f74e764":"markdown","65447ace":"markdown","4a3415bf":"markdown","fd0718e0":"markdown"},"source":{"4cef5be9":"import folium\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport tensorflow as tf\nfrom folium import plugins\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport folium.plugins as plugins\nfrom folium.plugins import HeatMap\nfrom folium.plugins import MarkerCluster\nfrom folium.plugins import FastMarkerCluster\nfrom folium import Choropleth, Circle, Marker\nfrom plotly.offline import init_notebook_mode,iplot","1fdda648":"temp = house_df = pd.read_csv('..\/input\/miami-housing-dataset\/miami-housing.csv', encoding = 'ISO-8859-1')\nhouse_df","5171a989":"house_df.info()","0975ac91":"house_df.describe()\n","e498c374":"fig, ax = plt.subplots(figsize=(12,4))\nsns.boxplot(x = 'SALE_PRC', data = house_df, orient = 'h', width = 0.8, \n                 fliersize = 3, showmeans=True, ax = ax)\nplt.show()","c6892fba":"sns.jointplot(x=\"LND_SQFOOT\", y=\"SALE_PRC\", data=house_df, kind = 'reg', size = 10)\nplt.show()","5c46ebcd":"ax = sns.pairplot(house_df, y_vars='SALE_PRC', x_vars=['age', 'structure_quality'], height=5)\nax.fig.suptitle('Dispers\u00e3o entre as Vari\u00e1veis', fontsize=20, y=1.05)\nax;","dbbdc662":"sns.heatmap(house_df.isnull());","d4a0feee":"fig2 = px.histogram(house_df,x='avno60plus',color='avno60plus',template='plotly_dark')\nfig2.show()","fb41c8c8":"fig2 = px.histogram(house_df,x='structure_quality',color='structure_quality',template='plotly_dark')\nfig2.show()","68ecf19a":"fig2 = px.histogram(house_df,x='month_sold',color='month_sold',template='plotly_dark')\nfig2.show()","308ed82f":"fig2 = px.histogram(house_df,x='age',color='age',template='plotly_dark')\nfig2.show()","1355a6c1":"fig2 = px.histogram(house_df,x='SALE_PRC',color='SALE_PRC',template='plotly_dark')\nfig2.show()","913b769f":"f, ax = plt.subplots(figsize = (15, 15))\nsns.heatmap(house_df.corr(), annot = True);","4525c1df":"house_df.hist(bins = 20, figsize = (20,20), color = 'b');","3ca930f2":"ax = sns.distplot(house_df['SALE_PRC'])\nax.figure.set_size_inches(20,6)\nax.set_title('Distribui\u00e7\u00e3o de Frequ\u00eancias', fontsize=20)\nax.set_xlabel('log do Pre\u00e7o dos Im\u00f3veis', fontsize=16)\nax;","2205b0c3":"map_1 = folium.Map(location=[25.7751, -80.2105], tiles='cartodbpositron', zoom_start=10)\nHeatMap(data=house_df[['LATITUDE', 'LONGITUDE']], radius=10).add_to(map_1)\nmap_1","def26932":"f = folium.Figure(width=1200, height=750)\nmiami_map = folium.Map(location = [house_df['LATITUDE'].mean(), \n                                  house_df['LONGITUDE'].mean()], \n                      zoom_start = 10).add_to(f)\nprice=folium.map.FeatureGroup()\nprice=plugins.MarkerCluster().add_to(miami_map)\nfor lat,lon,label in zip(house_df.LATITUDE,house_df.LONGITUDE,house_df.SALE_PRC):\n    folium.Marker(location=[lat,lon],icon=None,popup=label).add_to(price)\nmiami_map.add_child(price)\nmiami_map","7725e2b9":"f = folium.Figure(width=1200, height=750)\nmiami_map = folium.Map(location = [house_df['LATITUDE'].mean(), \n                                  house_df['LONGITUDE'].mean()], \n                      zoom_start = 10,  tiles='CartoDB dark_matter').add_to(f)\nprice=folium.map.FeatureGroup()\nprice=plugins.MarkerCluster().add_to(miami_map)\nfor lat,lon,label in zip(house_df.LATITUDE,house_df.LONGITUDE,house_df.age):\n    folium.Marker(location=[lat,lon],icon=None,popup=label).add_to(price)\nmiami_map.add_child(price)\nmiami_map","03a55e32":"selected_features = ['SALE_PRC', 'LND_SQFOOT', 'TOT_LVG_AREA', 'SPEC_FEAT_VAL', 'RAIL_DIST', 'OCEAN_DIST', 'WATER_DIST', 'CNTR_DIST', 'SUBCNTR_DI', 'HWY_DIST', 'age', 'avno60plus', 'month_sold', 'structure_quality']\nX = house_df[selected_features]\nX","5c7d5466":"y = house_df['SALE_PRC']\ny.head()","471cafa4":"print(X.shape, y.shape)","4acf173c":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nX_scaled = scaler.fit_transform(X)","b37bc29a":"X_scaled","453e2e1c":"X_scaled.shape","fdc0d929":"y = y.values.reshape(-1,1)","11e09ea5":"y.shape","c615f5d3":"y_scaled = scaler.fit_transform(y)","e547b54d":"y_scaled","dd9b67b3":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_scaled, y_scaled, test_size = 0.25)","2f4c31b3":"print(X_train.shape, X_test.shape )","7000ff8a":"model = tf.keras.models.Sequential()\nmodel.add(tf.keras.layers.Dense(units=100, activation='relu', input_shape=(14, )))\nmodel.add(tf.keras.layers.Dense(units=100, activation='relu'))\nmodel.add(tf.keras.layers.Dense(units=100, activation='relu'))\nmodel.add(tf.keras.layers.Dense(units=1, activation='linear')) ","e65abbf9":"model.summary()","cde5fd1f":"model.compile(optimizer='Adam', loss='mean_squared_error')","d62e5f9c":"epochs_hist = model.fit(X_train, y_train, epochs = 10, batch_size = 50, validation_split = 0.2)","6c97fd1b":"plt.plot(epochs_hist.history['loss'])\nplt.plot(epochs_hist.history['val_loss'])\nplt.title('Model Loss Progress During Training')\nplt.ylabel('Training and Validation Loss')\nplt.xlabel('Epoch number')\nplt.legend(['Training Loss', 'Validation Loss']);","028e8afc":"y_predict = model.predict(X_test)\nplt.plot(y_test, y_predict, \"^\", color = 'r')\nplt.xlabel(\"Model Predictions\")\nplt.ylabel(\"True Value (ground Truth)\")\nplt.title('Linear Regression Predictions')\nplt.show()","ddcce18e":"y_predict_orig = scaler.inverse_transform(y_predict)\ny_test_orig = scaler.inverse_transform(y_test)","854c729f":"plt.plot(y_test_orig, y_predict_orig, \"^\", color = 'r')\nplt.xlabel('Model Predictions')\nplt.ylabel('True Values')\nplt.xlim(0, 5000000)\nplt.ylim(0, 3000000);","65530d27":"k = X_test.shape[1]\nn = len(X_test)\nn","0e771ee9":"k","c5dba28f":"from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error\nfrom math import sqrt\n\nRMSE = float(format(np.sqrt(mean_squared_error(y_test_orig, y_predict_orig)),'.3f'))\nMSE = mean_squared_error(y_test_orig, y_predict_orig)\nMAE = mean_absolute_error(y_test_orig, y_predict_orig)\nr2 = r2_score(y_test_orig, y_predict_orig)\nadj_r2 = 1-(1-r2)*(n-1)\/(n-k-1)\n\nprint('RMSE =',RMSE, '\\nMSE =',MSE, '\\nMAE =',MAE, '\\nR2 =', r2, '\\nAdjusted R2 =', adj_r2) ","6769f58d":"# Initial Processing","d939f71a":"**A detail that caught my attention is that on the edge of Miami Beach there are no properties for sale.\nBefore the start of the pandemic I had the opportunity to stay for 10 days on Collins Avenue, close to 7th Street, I noticed many empty properties nearby and also closed.\nI wonder why you don't have properties for sale in that region when there are so many empty and closed properties.**","18b7534a":"# SUMMARY OF GRAPHICS","101c01f0":"**Heat map, where most properties are found.**","cbb46f8f":"no null data","100a8c34":"# DATA","cc952fe2":"# **Content**\nThe dataset contains information on 13,932 single-family homes sold in Miami .\n\n# **Content**\nThe dataset contains the following columns:\n\nPARCELNO: unique identifier for each property. About 1% appear multiple times.\n\nSALE_PRC: sale price ($)\n\nLND_SQFOOT: land area (square feet)\n\nTOTLVGAREA: floor area (square feet)\n\nSPECFEATVAL: value of special features (e.g., swimming pools) ($)\n\nRAIL_DIST: distance to the nearest rail line (an indicator of noise) (feet)\n\nOCEAN_DIST: distance to the ocean (feet)\n\nWATER_DIST: distance to the nearest body of water (feet)\n\nCNTR_DIST: distance to the Miami central business district (feet)\n\nSUBCNTR_DI: distance to the nearest subcenter (feet)\n\nHWY_DIST: distance to the nearest highway (an indicator of noise) (feet)\n\nage: age of the structure\n\navno60plus: dummy variable for airplane noise exceeding an acceptable level\n\nstructure_quality: quality of the structure\n\nmonth_sold: sale month in 2016 (1 = jan)\n\nLATITUDE\nLONGITUDE\n\nhttps:\/\/www.kaggle.com\/deepcontractor\/miami-housing-dataset\n\n","7b232f0a":"# Libraries","b864cd87":"# Maps","c5c1a477":"# GRAPHICS WITH RAW DATA","8f6a36ec":"# EXPLORATION","0f74e764":" **Cluster map, if we get closer and closer it will open up until we can see the location of the property, clicking on the location will be possible to see the value of each property.**","65447ace":"In this map below I put it in dark just for visual effect, but approaching and leaning on the buildings you can see the age of each one of them.","4a3415bf":"# Conclusion\n\n**By the analysis of the Adjusted R2, all the added features were useful for the analysis of the algorithm;**","fd0718e0":"# Training"}}