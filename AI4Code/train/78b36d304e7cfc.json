{"cell_type":{"2c39c163":"code","fceec2dc":"code","8d6c4eb4":"code","4d9ff98a":"code","df11296e":"code","1d6dd554":"code","3d9786bd":"code","bab8e1b4":"code","c9350809":"code","76574a97":"code","620d92df":"code","a2e82db8":"code","b6ceac7a":"code","faf28d28":"markdown","ef1ec9ff":"markdown","1e2c643d":"markdown","f61dd06f":"markdown","bd3b664f":"markdown","5655a003":"markdown","9bc3a5b7":"markdown","0fde5b15":"markdown","1c72dab6":"markdown","0efeba47":"markdown","6a78131a":"markdown","5cb98da3":"markdown","3cb670a0":"markdown","323ad842":"markdown","342e3234":"markdown","4b13e45f":"markdown","8d01bd2e":"markdown","7b300baf":"markdown","afe11891":"markdown"},"source":{"2c39c163":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","fceec2dc":"dataset = pd.read_csv('..\/input\/position-salaries\/Position_Salaries.csv')\nX = dataset.iloc[:, 1:-1].values # level in dataset\ny = dataset.iloc[:, -1].values # salary in dataset","8d6c4eb4":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(X, y) # linear reg model fitted on level and salary","4d9ff98a":"X","df11296e":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 4)\n# degree meaning to the power if 4 then there will be 5 columns column 1 is all ones\n# column 2 is of same number X\n# column 3 is of number X^2(X to the power 2) i.e. X.X\n# column 4 is of number X^3(X to the power 3) i.e. X.X.X\n# column 5 is of number X^4(X to the power 4) i.e. X.X.X.X\n# here we are giving the features which are in the polynomial increasing order \n# But the model is still the linear Regression so some call it as polynomial linear regression\nX_poly = poly_reg.fit_transform(X)\nlin_reg_2 = LinearRegression()\nlin_reg_2.fit(X_poly, y)","1d6dd554":"X_poly \n# u can see the array with X^0, X^1, X^2, X^3, X^4\n# 2.401e+03 it means (2.401 * 10^3)","3d9786bd":"plt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg.predict(X), color = 'blue')\nplt.title('Truth or Bluff (Linear Regression)')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')\nplt.show()","bab8e1b4":"plt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')\n\n'''\n poly_reg.fit_transform - it gives us a numpy array of 5 columns in a observation.\ni.e X^0, X^1, X^2, X^3, X^4\nlin_reg_2.predict - it takes the values mentioned above and predicts a single value, salary.\nonce we have defined a model and used to predict some values out of it,\nwe need to give features of same order i.e lin_reg_2.predict takes \nvalues which have 5 columns and it should be a numpy array.\nif we give any data which doesn't have 5 columns or less than or more than the model will \ngive u an error because the model is trained on the specific data.\n\n'''\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","c9350809":"X_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, lin_reg_2.predict(poly_reg.fit_transform(X_grid)), color = 'blue')\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","76574a97":"lin_reg.predict([[6.5]])\n\n# simple linear regression model takes only the 2 dimensional array","620d92df":"lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))\n\n# polynomial reg model takes the polynomial features only to predict.","a2e82db8":"print(lin_reg_2.coef_)\n","b6ceac7a":"print(lin_reg.coef_)","faf28d28":"The model has predicted a salary of 330K but the value should be in between 150k and 200K","ef1ec9ff":"For better understanding of current notebook for beginners go through the links:\n\n [1.1 Data Preprocessing](http:\/\/www.kaggle.com\/saikrishna20\/data-preprocessing-tools)\n\n\n[1.2 Simple linear Regression](https:\/\/www.kaggle.com\/saikrishna20\/1-2-simple-linear-regression) \n\n\n[1.3 Multiple linear Regression with Backward Elimination](http:\/\/www.kaggle.com\/saikrishna20\/1-3-multiple-linear-regression-backward-eliminat)\n\n\nIt basically tells u about the preprocessing & Linear Regression which will help u in understanding this notebook better","1e2c643d":"# Polynomial Regression","f61dd06f":"## Visualising the Polynomial Regression results (for higher resolution and smoother curve)","bd3b664f":"Predict the salary of person who is said to in between level 6 and level 7","5655a003":"## Predicting a new result with Polynomial Regression","9bc3a5b7":"These are the values of b0, b1, b2, b3, b4 of polynomial linear regression.","0fde5b15":"From this we can say that a person in between level 6 &7 will a salary of 158k ","1c72dab6":"## Visualising the Polynomial Regression results","0efeba47":"## Visualising the Linear Regression results","6a78131a":"## Training the Polynomial Regression model on the whole dataset","5cb98da3":"From the graph we can see the real salary is red dots and predicted salary is a Blue straight line.\n\nour model has not really predicted values close to real values and the linear regression model is of no use now.\n\nso let's try the polynomial linear regression","3cb670a0":"## Importing the dataset","323ad842":"These are the values of b0 of linear regression.","342e3234":"y = b0 +b1X1 +b2* X1^1+ b3 * X1^2........ +bn* X1^n\n\n\nThe feature X1 is increased in the polynomial order.\n","4b13e45f":"## Importing the libraries","8d01bd2e":"# Like this notebook then upvote it.\n\n\n# Need to improve it then comment below.\n\n\n# Enjoy Machine Learning.","7b300baf":"## Training the Linear Regression model on the whole dataset","afe11891":"## Predicting a new result with Linear Regression"}}