{"cell_type":{"e9d5c51c":"code","5cdf50f4":"code","1ff31968":"code","6df76bf0":"code","2c1afdcc":"code","216a5f0e":"code","7e62ba4a":"code","db81ee08":"code","ab581aee":"code","f0f87b07":"code","d0d1b7d7":"code","50c67859":"code","166038ac":"code","68a5a89b":"code","9aa2811e":"code","c760e2ae":"code","a4e518f9":"code","4bff7952":"markdown","a8ee39c1":"markdown","85eaffb6":"markdown","6c04c9d7":"markdown","edf35ec9":"markdown","afd0c3a8":"markdown","71c1a040":"markdown","476cf842":"markdown","75df7c8c":"markdown","bac580e7":"markdown","adce93a6":"markdown","593957a2":"markdown","94d796b6":"markdown","7217589e":"markdown","60d603f0":"markdown","fc0f90e7":"markdown","9c718506":"markdown"},"source":{"e9d5c51c":"import gc\nimport numpy as np\nimport pandas as pd","5cdf50f4":"train = pd.read_csv('..\/input\/ion-switch-model-ready-data-frame-to-work-locally\/train_ion_switch.csv')\ntest  = pd.read_csv('..\/input\/ion-switch-model-ready-data-frame-to-work-locally\/test_ion_switch.csv')","1ff31968":"train_sample = train.sample(frac=0.005, random_state=25)","6df76bf0":"del train\ngc.collect()","2c1afdcc":"!pip install pycaret","216a5f0e":"from pycaret.classification import *","7e62ba4a":"clf1 = setup(data = train_sample, \n             target = 'open_channels',\n             silent = True,\n             remove_outliers = True,\n             feature_selection = True)","db81ee08":"lgbm  = create_model('lightgbm')   ","ab581aee":"tuned_lightgbm = tune_model('lightgbm')","f0f87b07":"evaluate_model(tuned_lightgbm)","d0d1b7d7":"xgb   = create_model('xgboost') ","50c67859":"tuned_xgb = tune_model('xgboost')","166038ac":"evaluate_model(tuned_xgb)","68a5a89b":"pred_lgbm = predict_model(tuned_lightgbm, data=test)\npred_lgbm['open_channels'] = pred_lgbm['Label']\n\npred_xgb = predict_model(tuned_xgb, data=test)\npred_xgb['open_channels'] = pred_xgb['Label']","9aa2811e":"blend = blend_models(estimator_list = [tuned_lightgbm,tuned_xgb])\npred_blend = predict_model(blend, data=test)\n#pred_blend.to_csv('pred_blend.csv',index=False)\npred_blend.head()","c760e2ae":"sub = pd.read_csv(\"..\/input\/liverpool-ion-switching\/sample_submission.csv\")\n\nsubmission = pd.DataFrame()\nsubmission['time']  = sub['time']\nsubmission['open_channels'] = pred_lgbm['open_channels']\nsubmission['open_channels'] = submission['open_channels'].round(decimals=0)\nsubmission['open_channels'] = submission['open_channels'].astype(int)\nsubmission.to_csv('submission_lgbm.csv', float_format='%0.4f', index = False)","a4e518f9":"sub = pd.read_csv(\"..\/input\/liverpool-ion-switching\/sample_submission.csv\")\n\nsubmission = pd.DataFrame()\nsubmission['time']  = sub['time']\nsubmission['open_channels'] = pred_xgb['open_channels']\nsubmission['open_channels'] = submission['open_channels'].round(decimals=0)\nsubmission['open_channels'] = submission['open_channels'].astype(int)\nsubmission.to_csv('submission_xgb.csv', float_format='%0.4f', index = False)","4bff7952":"# A SIMPLE BLEND","a8ee39c1":"# XGBOOST","85eaffb6":"# Import Classification","6c04c9d7":"# EVALUATING LGBM","edf35ec9":"# TUNING LGBM","afd0c3a8":"# Conclusion\n\n - PyCaret is convenient to see general image but it takes too much time when using compare and evaluation.\n - I had to use a very small fraction just to see it.","71c1a040":"# Setup","476cf842":"# LGBM SUBMISSION","75df7c8c":"# TUNING XGBOOST","bac580e7":"# Installing PyCaret","adce93a6":"# Random Sample","593957a2":"# LGBM","94d796b6":"# Imports","7217589e":"# EVALUATING XGBOOST","60d603f0":"# PREDICTIONS","fc0f90e7":"# XGB SUBMISSION","9c718506":"# Files"}}