{"cell_type":{"ee6fec41":"code","18d18363":"code","81087b5d":"code","36d0da3c":"code","dbb4edd7":"code","97e6af43":"code","575f23b9":"code","f73dec01":"code","02b2fb19":"code","4564e6b5":"code","a5c5f341":"markdown","72778ea1":"markdown","81e1994b":"markdown","cd5ef8e2":"markdown","0a86d54d":"markdown","782a0633":"markdown"},"source":{"ee6fec41":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import linear_model\nimport os\nimport math\nfrom sklearn.metrics import roc_auc_score\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","18d18363":"#predsA = pd.read_csv(\"\")\n#test_predsA = pd.read_csv(\"\")\n\npredsB = pd.read_csv(\"\/kaggle\/input\/ieee-pipeline-2-b-model-b-random-forest\/predsB.csv\")\ntest_predsB = pd.read_csv(\"\/kaggle\/input\/ieee-pipeline-2-b-model-b-random-forest\/test_predsB.csv\")\n\npredsC = pd.read_csv(\"\/kaggle\/input\/ieee-pipeline-2-c-model-c-xgboost\/predsC.csv\")\ntest_predsC = pd.read_csv(\"\/kaggle\/input\/ieee-pipeline-2-c-model-c-xgboost\/test_predsC.csv\")\n\npredsB.head()","81087b5d":"def auc(x,y): \n    return roc_auc_score(x,y)\ndef print_score(m):\n    res = [auc(m.predict(train_X), train_y), auc(m.predict(val_X), val_y)]\n    print(res)","36d0da3c":"stacked_predictions = np.column_stack((predsB, predsC))\nstacked_predictions = pd.DataFrame({'predsB': stacked_predictions[:, 0],\n                                    'predsC': stacked_predictions[:, 1]})\n\nstacked_test_predictions = np.column_stack((test_predsB, test_predsC))\nstacked_test_predictions = pd.DataFrame({'test_predsB': stacked_test_predictions[:, 0],\n                                         'test_predsC': stacked_test_predictions[:, 1]})\n\nstacked_predictions.head()","dbb4edd7":"meta_model = linear_model.LogisticRegression()","97e6af43":"val_y = pd.read_csv(\"\/kaggle\/input\/ieee-pipeline-1-create-validation-set\/val_y.csv\")\nval_y.head()","575f23b9":"meta_model.fit(stacked_predictions, val_y)","f73dec01":"#final_predictions = meta_model.predict(stacked_test_predictions)  ## Or Lower AUC even though individual models score higher\nfinal_predictions = meta_model.predict_proba(stacked_test_predictions)[:,1]   ## Probabilities generally imporove AUC","02b2fb19":"submission = pd.read_csv('\/kaggle\/input\/ieee-fraud-detection\/sample_submission.csv')\nsubmission.head()","4564e6b5":"submission['isFraud'] = final_predictions \nsubmission.to_csv('meta_stacking_v1.csv', index=False)","a5c5f341":"Input - Val & test preds from single models, validation set, sample_submission CSV\n- https:\/\/www.kaggle.com\/priteshshrivastava\/ieee-pipeline-2-a-model-a-catboost-feat-sel\n- https:\/\/www.kaggle.com\/priteshshrivastava\/ieee-pipeline-2-b-model-b-random-forest\n- https:\/\/www.kaggle.com\/priteshshrivastava\/ieee-pipeline-2-c-model-c-xgboost\n\nOutput - Competition submission file","72778ea1":"### Form a new dataset for validation & test by stacking the predictions","81e1994b":"### Use meta model to make preditions on the stacked predictions of test set","cd5ef8e2":"### Defining function to calculate the evaluation metric","0a86d54d":"### Specify meta model & fit it on stacked validation set predictions","782a0633":"### Submit predictions"}}