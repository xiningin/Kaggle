{"cell_type":{"e43b3af9":"code","444cea75":"code","e8050335":"code","a0c651c0":"code","f31504ef":"code","d5edb908":"code","ce595791":"code","daa38dd1":"code","a605845a":"code","bac8762e":"code","adba45cb":"code","4b6f19f0":"code","659119cf":"code","4f84a924":"code","a33f5697":"code","b9661679":"code","77820b5e":"code","5e1bafce":"markdown","0a6f64e8":"markdown","38c19fbe":"markdown","ba9dd800":"markdown","6caa8c28":"markdown","196fbf20":"markdown","12256da6":"markdown","b0a23aaf":"markdown","25b98942":"markdown","34b04f9c":"markdown","af913fed":"markdown","ec8b8b2e":"markdown"},"source":{"e43b3af9":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport os\nimport time\n\nseed = 47\nnp.random.seed(seed)\npd.set_option('chained_assignment',None)\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","444cea75":"def mean_absolute_percentage_error(y_true, y_pred):\n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true)) * 100","e8050335":"train = pd.read_csv('\/kaggle\/input\/TTiDS20\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/TTiDS20\/test_no_target.csv')\nzips = pd.read_csv('\/kaggle\/input\/TTiDS20\/zipcodes.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/TTiDS20\/sample_submission.csv')\n\nzips = zips.drop_duplicates(subset='zipcode')\n\ntrain=train.drop(labels=['Unnamed: 0'], axis=1)\ntest=test.drop(labels=['Unnamed: 0'], axis=1)\n\nprint(train.info())","a0c651c0":"train.head()","f31504ef":"for col in train.columns:\n    print(col, train[col].dtype)\nprint('\\n')\nobject_cols=[]\nfor col in train.columns:\n    if train[col].dtype=='object':\n        print(col, train[col].nunique())\n        object_cols.append(col)","d5edb908":"def mean_count_plot(column):\n    f, axes = plt.subplots(2, figsize=(9, 9))\n    mean_value=train.groupby(column)['price'].mean()\n    mean_count=train.groupby(column)['price'].count()\n    sns.barplot(x=mean_value.keys(), y=mean_value.values,\n                    ax=axes[0]).set_title('mean_value')\n    sns.barplot(x=mean_count.keys(), y=mean_count.values,\n                    ax=axes[1]).set_title('mean_count')\n    plt.show()","ce595791":"col='fuel'\n\nfor df in [train, test]:\n    df['gearbox']=df['gearbox'].fillna('manual')\n    df['fuel']=df['fuel'].fillna('empty')\n\n    fuel_dict = {'diesel':'diesel', 'compressed natural gas':'another','empty':'another', 'gasoline':'another',\n                    'liquefied petroleum gas':'another', 'other':'another'}\n    df['fuel'] = df['fuel'].map(fuel_dict)\n\n    df['type']=df['type'].fillna('empty')\n    type_dict = {'bus':'bus', 'convertible':'coup\u00e9','coup\u00e9':'coup\u00e9', 'empty':'wagon',\n                    'limousine':'limousine', 'other':'small car', 'small car':'small car', 'station wagon':'wagon'}\n    df['type'] = df['type'].map(type_dict)\n\n\nmean_count_plot(col)","daa38dd1":"def corr_matrix(matrix):\n    corr = matrix.corr()\n    plt.subplots(figsize=(10,8))\n    sns.heatmap(corr,\n                xticklabels=corr.columns.values,\n                yticklabels=corr.columns.values,\n                cmap=sns.diverging_palette(0, 200, n=200), annot=True) \n    plt.title('Correlation Heatmap of Numeric Features')","a605845a":"import category_encoders as ce\nfrom sklearn import preprocessing\n\ncat_cols=['model','type','gearbox','fuel','brand']\ntarget_enc = ce.CatBoostEncoder(cols=cat_cols)\ntarget_enc.fit(train[cat_cols], train['price'])\n\ntrain = train.join(target_enc.transform(train[cat_cols]).add_suffix('_cb'))\ntest = test.join(target_enc.transform(test[cat_cols]).add_suffix('_cb'))\n\ntrain=train.drop(labels=cat_cols, axis=1)\ntest=test.drop(labels=cat_cols, axis=1)","bac8762e":"test_na = test.dropna(subset=['damage', 'insurance_price'])\ntrain_na = train.drop(labels=['price'], axis=1).dropna(subset=['damage', 'insurance_price'])\ntotal_df = pd.concat([train_na, test_na], ignore_index=True)\n\ndf = pd.concat([train,test], ignore_index=True)\n\nfor col in df.columns:\n    mean = df[col].mean()\n    df[col] = df[col].fillna(mean)\n\ntrain = df[:len(train.index)]\ntest = df[len(train.index):]","adba45cb":"corr_matrix(total_df)","4b6f19f0":"from catboost import CatBoostRegressor\nfrom lightgbm import LGBMRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import KFold\n\nkfold = KFold(n_splits=5, shuffle=True, random_state=seed)\n\nxgb = XGBRegressor(random_state=seed)\n\ntrain_num = train.drop(labels=['price','zipcode', 'engine_capacity','gearbox_cb'], axis=1)\ntest_num = test.drop(labels=['price','zipcode', 'engine_capacity','gearbox_cb'], axis=1)\n\ntarget = train['price']","659119cf":"def feature_selection(train_num,model):\n\n    from tqdm import tqdm\n\n    kfold = KFold(n_splits=5, shuffle=True, random_state=seed)\n    train_copy = train_num.copy()\n    res_base=[]\n\n    for i, (tdx, vdx) in enumerate(kfold.split(train_copy, target)):\n        X_train, X_valid, y_train, y_valid = train_copy.iloc[tdx], train_copy.iloc[vdx], target.iloc[tdx], target.iloc[vdx]\n        model.fit(X_train, y_train)\n        preds=model.predict(X_valid)\n        res_base.append(mean_absolute_percentage_error(y_valid,preds))\n\n    baseline = np.mean(res_base)\n\n    while True:\n        cols = list(train_copy.columns)\n        drop_rmse = []\n        for drop_col in tqdm(cols):\n\n            train_drop = train_copy.drop(labels=[drop_col], axis=1)\n            res=[]\n\n            for i, (tdx, vdx) in enumerate(kfold.split(train_copy, target)):\n                X_train, X_valid, y_train, y_valid = train_drop.iloc[tdx], train_drop.iloc[vdx], target.iloc[tdx], target.iloc[vdx]\n                model.fit(X_train, y_train)\n                preds=model.predict(X_valid)\n                res.append(mean_absolute_percentage_error(y_valid,preds))\n            \n            drop_rmse.append(np.mean(res))\n        drop_df = pd.DataFrame(list(zip(drop_rmse, cols)), columns =['MAPE', 'Column'])\n        drop_df=drop_df.sort_values(by=['MAPE'], ascending=True)\n        print(drop_df.head())\n\n        if baseline > drop_df.iloc[0, 0]:\n            baseline = drop_df.iloc[0, 0]\n            train_copy = train_copy.drop(labels=[drop_df.iloc[0, 1]], axis=1)\n            print(f\"MAPE: {round(baseline,8)}, num_cols:{len(train_copy.columns)}, dropped:{list(set(train_num.columns) - set(train_copy.columns))}\") \n        else:\n            print('nothing better')\n            break","4f84a924":"#feature_selection(train_num,xgb)","a33f5697":"from sklearn.model_selection import cross_val_predict\ny_pred = cross_val_predict(xgb, train_num, target, cv=5)\n\nfig, ax = plt.subplots()\nax.scatter(y=target,x=y_pred)\nax.set_xlabel('Predicted value')\nax.set_ylabel('True value')\nminimum = np.min([ax.get_xlim(), ax.get_ylim()])\nmaximum = np.max([ax.get_xlim(), ax.get_ylim()])\nlims = [minimum, maximum]\nk=25000\nax.plot(lims, lims, 'k-', alpha=0.7)\nax.plot([minimum, maximum-k], [minimum+k, maximum], 'g-')\nax.plot([minimum+k, maximum], [minimum, maximum-k], 'g-')\n\nprint(round(mean_absolute_percentage_error(target,y_pred),2))\nmask = np.absolute(y_pred-target)<k\nprint(mask.value_counts())","b9661679":"sns.distplot(target)","77820b5e":"probs = pd.DataFrame()\n\ntrain_num=train_num.loc[mask].reset_index().drop(labels=['index'], axis=1)\ntarget=target.loc[mask].reset_index()\n\na = 0\nres=[]\nfor r in range(8):\n\n    kfold = KFold(n_splits=5, shuffle=True, random_state=r+seed)        \n    for i, (tdx, vdx) in enumerate(kfold.split(train_num, target)):\n        X_train, X_valid = train_num.iloc[tdx], train_num.iloc[vdx]\n        y_train, y_valid = target.iloc[tdx,1], target.iloc[vdx,1]#\n        xgb.fit(X_train, np.log(y_train))\n        preds=xgb.predict(X_valid)\n        oof_predict = xgb.predict(test_num)\n        probs[f'fold_{a}'] = np.exp(oof_predict)\n        res.append(mean_absolute_percentage_error(y_valid,np.exp(preds)))\n        a=a+1\nprint(f\"res:{round(np.mean(res),2)}\")\n\nprobs['res_xgb'] = probs.mean(axis=1)\n\nsample_submission['Predicted'] = probs['res_xgb']\nsample_submission.to_csv('submission.csv', index=False)\n","5e1bafce":"\u041d\u0430\u0447\u0430\u043b \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0440\u0440 \u043c\u0430\u0442\u0440\u0438\u0446\u0443, \u0447\u0442\u043e \u043d\u0435 \u0434\u0430\u043b\u043e \u0436\u0435\u043b\u0430\u0435\u043c\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0438\u0437-\u0437\u0430 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0445 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439. \u0411\u044b\u043b\u0430 \u0438\u0434\u0435\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: \u043d\u0430\u0439\u0442\u0438 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u043e\u0447\u0435\u043d\u044c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043d\\\u0430, \u043e\u0442 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u0434\u0440\u0443\u0433\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430, \u0433\u0434\u0435 \u043c\u044b \u0438 \u0445\u043e\u0442\u0438\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u0410 \u0434\u0430\u043b\u044c\u0448\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0435\u0439, \u0442\u0435\u043c \u0441\u0430\u043c\u044b\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u044f \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a.","0a6f64e8":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u043d\u0430\u0447\u0430\u043b\u0435 \u0431\u044b\u043b\u0430 \u0438\u0434\u0435\u044f \u0437\u0430\u043a\u043e\u043d\u043a\u0430\u0442\u0438\u0442\u044c \u0437\u0438\u043f\u043a\u043e\u0434\u044b \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442 \u0441\u0435\u0442\u0430\u043c\u0438, \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0434\u0440\u043e\u043f\u043d\u0443\u0432 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b \u0432 \u0437\u0438\u043f \u043a\u043e\u0434\u0430\u0445, \u043d\u043e \u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043b\u0438\u0447\u043d\u043e \u043c\u043d\u0435 \u043d\u0435 \u0434\u0430\u043b\u0438 \u043d\u0438\u0447\u0435\u0433\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0433\u043e \u0438 \u044f \u043e\u0442\u043b\u043e\u0436\u0438\u043b \u044d\u0442\u0443 \u0438\u0434\u0435\u044e.","38c19fbe":"\u041d\u0430\u0447\u0430\u043b \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438 \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u0438\u0445 \u0442\u0438\u043f\u043e\u0432, \u0438 \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u0442\u043e \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0430\u043c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439.","ba9dd800":"\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0435 \u043a\u043e\u0434\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f \u043d\u0430 \u0434\u0432\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0430: \u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u043b \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0430\u0440\u0433\u0435\u0442\u0430, \u0435\u0441\u043b\u0438 \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435, \u0432\u0442\u043e\u0440\u043e\u0439 - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0441\u0435\u0442\u0435.\n\n\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0438\u0434\u0435\u044f \u0431\u044b\u043b\u0430 \u0443\u0431\u0440\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u043d\u0430\u043c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u043e \u0440\u0430\u0437, \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0432 \u0438\u0445 \u0441 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0445\u043e\u0436\u0438\u043c\u0438 \u043f\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0442\u0430\u0440\u0433\u0435\u0442\u0430.","6caa8c28":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0443\u044e \u041a\u0412 \u043d\u0430 5 \u0444\u043e\u043b\u0434\u043e\u0432 \u0438 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439 \u0445\u0436\u0431\u0443\u0441\u0442.","196fbf20":"\u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0441\u0438\u0434, \u0447\u0442\u043e \u0431\u044b \u043d\u0435 \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445 \u043f\u0440\u0438 \u043f\u0440\u043e\u0433\u043e\u043d\u0435 \u0438\u0437 \u0440\u0430\u0437\u0430 \u0432 \u0440\u0430\u0437. \u0422\u0430\u043a \u0436\u0435 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0441\u0442\u044b\u0434\u043d\u043e \u0437\u0430 \u0442\u043e, \u0447\u0442\u043e \u043d\u0435 \u0441\u043c\u043e\u0433 \u0438\u0437\u0431\u0430\u0432\u0438\u0442\u0441\u044f \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043e\u0442 'SettingwithCopyWarning' \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043b \u0432 \u043d\u0430\u0447\u0430\u043b\u0435, \u0447\u0442\u043e \u0431\u044b \u043e\u043d \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f.","12256da6":"\u041f.\u0421 \u041a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c? \u0418\u0437 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e\u0433\u043e - \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0432 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c. \u042d\u0442\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043c\u0430 \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 \u0433\u043e\u0434, \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c. \u0422\u0430\u043a \u0436\u0435 \u043d\u0430\u0434\u043e \u0431\u044b\u043b\u043e \u043f\u043e-\u0443\u043c\u043d\u0435\u0435 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0438\u043d\u0442\u043e\u0432\u044b\u0445 \u0438 \u0444\u043b\u043e\u0430\u0442 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445...","b0a23aaf":"\u0414\u0430\u043b\u0435\u0435 \u0443\u0436\u0435 \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u041a\u0412 \u043f\u043e \u043d\u0430\u0448\u0438\u043c \u043a\u0444\u043e\u043b\u0434\u0430\u043c, \u043f\u0435\u0440\u0435\u0434 \u044d\u0442\u0438\u043c \u043d\u0430\u043b\u043e\u0436\u0438\u0432 \u043c\u0430\u0441\u043a\u0443 \u0430\u0443\u0442\u043b\u0430\u0435\u0440\u043e\u0432. \u0422\u0430\u043a \u0436\u0435 \u0434\u0435\u043b\u0430\u043b \u043f\u0440\u043e\u0433\u043e\u043d \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0430 5 \u0444\u043e\u043b\u0434\u043e\u0432, \u0430 \u043d\u0430 40, \u0447\u0442\u043e \u0431\u044b \u0443\u0441\u0440\u0435\u0434\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n\n\u0413\u0440\u0438\u0434 \u0441\u0451\u0440\u0447 \u043f\u043e \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043d\u0435 \u0434\u0430\u043b.\n\n\u041e\u0447\u0435\u043d\u044c \u043f\u043e\u043c\u043e\u0433\u043b\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u0438\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u0438\u0431\u043e, \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0432\u0438\u0434\u0435\u0442\u044c \u043f\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0443, \u043e\u043d \u0443\u0436 \u0431\u043e\u043b\u044c\u043d\u043e \u043d\u0435\u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d. ","25b98942":"\u0414\u0430\u043d\u043d\u044b\u0439 \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u041a\u0412 \u043f\u043e \u0432\u0441\u0435\u043c\u0443 \u0441\u0435\u0442\u0443, \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u044b, \u0430 \u0434\u0430\u043b\u044c\u0448\u0435 \u044f \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u044b\u0431\u0438\u0440\u0430\u044e \u0430\u0443\u0442\u043b\u0430\u0435\u0440\u044b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u044e \u0438\u0445 \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0440\u0430\u0437\u043d\u0438\u0446\u044b \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0430 \u0438 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0415\u0441\u043b\u0438 \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 25\u043a, \u0442\u043e \u044d\u0442\u043e \u0430\u0443\u0442\u043b\u0430\u0435\u0440 \u0438 \u0435\u0433\u043e \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c \u0438\u0437 \u0441\u0435\u0442\u0430. \u0418\u0431\u043e \u043c\u0435\u0442\u043e\u0434\u0438\u043a\u0430 \u0431\u044b\u043b\u0430 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0431\u044b \u043b\u0443\u0447\u0448\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438 \u043d\u0435 \u043e\u0442\u0432\u043b\u0435\u043a\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u0435.","34b04f9c":"# \u0418\u0441\u0442\u043e\u0440\u0438\u044f \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u043d\u0430 \u0448\u0435\u0439\u043a\u0430\u043f \u043d\u0430\u0434\u0435\u044f\u043b\u0441\u044f","af913fed":"\u0414\u0430\u043b\u044c\u0448\u0435 \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u043a\u0430\u043b \u0444\u0438\u0447\u0438 \u044f \u0437\u0430\u043a\u0438\u0434\u044b\u0432\u0430\u043b \u0432 \u041a\u0435\u0442\u0411\u0443\u0441\u0442 \u044d\u043d\u043a\u043e\u0434\u0435\u0440 \u0438 \u043e\u043d \u0438\u0445 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u043b \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u043d\u0438\u044f \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e.","ec8b8b2e":"\u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0431\u044b\u043b\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u0440\u0430\u043d\u0435\u0435, \u043c\u0431 \u043e\u043d\u0430 \u043d\u0435 \u0448\u0438\u0431\u043a\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0431\u0430\u043d\u0430\u043b\u044c\u043d\u0430, \u043d\u043e \u0432\u043e\u0442 \u0441\u0443\u0442\u044c - \u0434\u0440\u043e\u043f\u0430\u0435\u043c \u043f\u043e \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435, \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u041a\u0412, \u0438\u0434\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435. \u0422\u0430\u043a \u0438\u0449\u0435\u0442 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043d\u0435 \u043c\u0435\u0448\u0430\u044e\u0442. "}}