{"cell_type":{"e6af7d76":"code","7bd07d57":"code","9d01d1ac":"code","3377a1ca":"code","5fe04a1c":"code","98258470":"code","446c26a5":"code","0ad45431":"code","efb90317":"code","c907eb16":"code","81609499":"code","d2e36264":"code","bd01c3dd":"code","17a49540":"markdown"},"source":{"e6af7d76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7bd07d57":"#imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn import linear_model","9d01d1ac":"#read dataset\ndf = pd.read_csv(\"\/kaggle\/input\/canada-per-capita-income-single-variable-data-set\/canada_per_capita_income.csv\")\ndf.head()","3377a1ca":"df = df.rename(columns={'per capita income (US$)': 'Income'})","5fe04a1c":"df.head()","98258470":"#plot\nplt.figure(figsize=(10,7))\nplt.xlabel('Year',fontsize=15)\nplt.ylabel('per capita income (US$)',fontsize=15)\nplt.scatter(df.year,df.Income,color='red',marker='*')","446c26a5":"#training the linear_model based on given data\nreg = linear_model.LinearRegression()\nreg.fit(df[['year']],df.Income)","0ad45431":"reg.predict([[2020]])","efb90317":"#for year 2021\nreg.predict([[2021]])","c907eb16":"m=reg.coef_\nm","81609499":"c = reg.intercept_\nc","d2e36264":"#income- dependent variable and year- independent variable\nincome = m * 2021 + c\nprint(income)","bd01c3dd":"plt.figure(figsize=(10,7))\nplt.xlabel('year',fontsize=15)\nplt.ylabel('per capita income (US$)',fontsize=15)\nplt.scatter (df.year , df.Income, color = 'red',marker='*' )\nplt.plot(df.year , reg.predict(df[['year']]) , color='blue')","17a49540":"or #reg.predict(np.array(2020).reshape(-1,1)"}}