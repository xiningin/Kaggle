{"cell_type":{"61af4259":"code","c38ce2e3":"code","5b9b2109":"code","7251183c":"code","0bf6d2a3":"code","bec4882f":"code","3a834839":"code","f0757973":"code","b02229dc":"code","8134ff4b":"code","6aaaff38":"code","79ed81b5":"code","4668ea98":"code","c2a66fff":"code","e6ef788f":"code","58c50b13":"code","e3278590":"code","09016eed":"code","7659a38f":"code","b5dc5c39":"code","c042b150":"code","e176af9d":"code","4655bc4e":"code","454cc170":"code","d8ae8830":"code","47630d81":"code","a38bc498":"code","75343675":"code","77d8c035":"code","febd7530":"code","d45e12cc":"code","801977c0":"code","26d311ed":"code","c9fb8433":"code","7eaa68dc":"code","6b7502f9":"code","8e4ad02c":"code","6effa165":"code","8923066c":"code","03b5be94":"code","f8745b75":"code","1553e865":"code","f16fd6ea":"code","241741c6":"code","ce87e2e5":"code","ec3bd4c4":"code","7493a84f":"code","64e66796":"markdown","7350e7f2":"markdown"},"source":{"61af4259":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os #operating system \nfor dirname, _, filenames in os.walk('\/kaggle\/input'):   \n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c38ce2e3":"for a in os.walk('\/kaggle\/input'):\n    print(a)  #extracts a tuple ","5b9b2109":"for a, b, c in os.walk('\/kaggle\/input'):\n    print(a,b,c) #extracts what is inside the tuple. ","7251183c":"for a, b, c in os.walk('\/kaggle\/input'):\n    print(c)","0bf6d2a3":"for a,b,c in os.walk('\/kaggle\/input'):\n    for d in c: #for loop in a for loop \n        print(d)","bec4882f":"#profversion\nfor a, b, c in os.walk('\/kaggle\/input'):\n    print(a,b,c)\n    for d in c:\n        print(d)\n","3a834839":"df=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv',low_memory=False)","f0757973":"df\n#various PlayId in one GameId. ","b02229dc":"df.head()","8134ff4b":"df.tail(10)","6aaaff38":"df.info()","79ed81b5":"df['PlayerHeight']","4668ea98":"df[['PlayerHeight','PlayerWeight']]","c2a66fff":"df.iloc[0:20]","e6ef788f":"df.loc[0] #the first row ","58c50b13":"df.isnull()","e3278590":"df.isnull().sum()","09016eed":"#grouping\ng=df.groupby('GameId')","7659a38f":"g.size() #we have 512 games and we have number of plays in each game.","b5dc5c39":"g['PlayId']","c042b150":"import matplotlib.pylab as plt","e176af9d":"df.groupby('PlayId').first()['Yards'].plot(kind='hist',\n            figsize=(15,5),\n            bins=100,\n            title ='Distributions of Yards Gained (Target)')\nplt.show()","4655bc4e":"train=df.select_dtypes(include='number') #only the numeric data","454cc170":"train #now we only have 25 columns ","d8ae8830":"Y=train.pop('Yards') #popping the 'Yards' column from the train data","47630d81":"Y","a38bc498":"train #'Yards'is popped out so now we have 24 columns this will be the shape of the input later on. ","75343675":"import tensorflow as tf","77d8c035":"my_model=tf.keras.Sequential([\n    tf.keras.layers.Dense(1, input_shape=[24])\n])\n#we made a very\/extremely simple model with a dense layer with one node","febd7530":"my_model.compile(\n    loss='mse',\n    optimizer='adam'\n)","d45e12cc":"my_model.fit(train,Y,epochs=1) \n#loss:nan there is something wrong! \n#we had a lot of missing data it is simply impossible to fit a model with missing data","801977c0":"train=train.dropna()","26d311ed":"Y = train.pop('Yards')\ndf","c9fb8433":"train = df.select_dtypes(include='number')","7eaa68dc":"train.info()","6b7502f9":"train=train.dropna()","8e4ad02c":"Y = train.pop('Yards')","6effa165":"train.info()","8923066c":"my_model.fit(train, Y, epochs=1)\n","03b5be94":"train.pop('GameId')\n","f8745b75":"train.pop('PlayId')\n","1553e865":"my_model.fit(train, Y, epochs = 1)\n#we popped out 2 columns input shape must be edited","f16fd6ea":"my_model = tf.keras.Sequential([\n    tf.keras.layers.Dense(1, input_shape=[22])\n])","241741c6":"my_model.compile(\n    loss = 'mse',\n    optimizer = 'adam'\n)","ce87e2e5":"my_model.fit(train, Y, epochs = 1)\n","ec3bd4c4":"my_model_2 = tf.keras.Sequential([\n    tf.keras.layers.Dense(512, input_shape=[22], activation='relu'),\n    tf.keras.layers.Dense(1)\n])\n\nmy_model_2.compile(\n    loss = 'mse',\n    optimizer = 'adam'\n)","7493a84f":"my_model_2.fit(train, Y, epochs = 10)","64e66796":"1. **\/kaggle\/input ['nfl-big-data-bowl-2020'] [] **: *first directory is \/kaggle\/input and its name is ['nfl-big-data-bowl-2020']  and there is no file in that directory. * \n2. **\/kaggle\/input\/nfl-big-data-bowl-2020 ['kaggle'] ['train.csv']**: *what is inside the previous directory ['nfl-big-data-bowl-2020'] in this directory path it has directory named ['kaggle'] and it has  ['train.csv'] in it* \ntrain.csv\n3. **\/kaggle\/input\/nfl-big-data-bowl-2020\/kaggle ['competitions'] []** :*again, in the previous directory ['kaggle'] , there is  ['competitions'] directory with no file in it. * \n4. **\/kaggle\/input\/nfl-big-data-bowl-2020\/kaggle\/competitions ['nflrush'] []** : *in the previous ['competitions'] directory there is ['nflrush'] directory with no file in it* \n5. **\/kaggle\/input\/nfl-big-data-bowl-2020\/kaggle\/competitions\/nflrush [] ['test.csv.encrypted', 'sample_submission.csv.encrypted', '__init__.py', 'competition.cpython-36m-x86_64-linux-gnu.so'] **: * in the previous ['nflrush'] no there is no more directory but there exists 4 files in it*","7350e7f2":"cf StadiumType               476828 non-null object <--empty data what should we do with this\n\nPlayerHeight              509762 non-null object<-- height a string?? probably we will have to convert to a number(integer)\n\n\nPlayerWeight              509762 non-null int64"}}