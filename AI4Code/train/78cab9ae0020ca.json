{"cell_type":{"558ee490":"code","56b206ed":"code","93cab130":"code","500676e3":"code","bb3db622":"code","b060c576":"code","6a2e21a0":"code","b9171d9c":"code","c8878a5f":"code","970bb242":"code","847208b6":"code","722d6ea8":"code","ffeecba2":"code","e1dbd3e8":"code","6ededdd1":"code","38c99d53":"code","f34cf48f":"code","01776e0a":"code","a4a8cf6c":"code","3e9e7ec3":"code","109c9517":"code","5a16b56f":"markdown","9159abea":"markdown","f462aae2":"markdown","7a8b1202":"markdown","fe96953b":"markdown","a126c01f":"markdown","a6c6316a":"markdown","355188c2":"markdown","e8eec2f6":"markdown","beaed856":"markdown"},"source":{"558ee490":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import AdaBoostClassifier, BaggingClassifier, GradientBoostingClassifier, RandomForestClassifier","56b206ed":"data = pd.read_csv('..\/input\/daily-power-generation-in-india-20172020\/file_02.csv')","93cab130":"data","500676e3":"data.info()","bb3db622":"data = data.drop('index', axis=1)","b060c576":"data.isna().mean()","6a2e21a0":"for column in ['Nuclear Generation Actual (in MU)', 'Nuclear Generation Estimated (in MU)']:\n    data[column] = data[column].fillna(data[column].mean())","b9171d9c":"print(\"Total missing values:\", data.isna().sum().sum())","c8878a5f":"data","970bb242":"data['Year'] = data['Date'].apply(lambda x: np.int(x[0:4]))\ndata['Month'] = data['Date'].apply(lambda x: np.int(x[5:7]))\n\ndata = data.drop('Date', axis=1)","847208b6":"for column in ['Thermal Generation Actual (in MU)', 'Thermal Generation Estimated (in MU)']:\n    data[column] = data[column].apply(lambda x: np.float(x.replace(',', '')))","722d6ea8":"data","ffeecba2":"label_encoder = LabelEncoder()\n\ndata['Region'] = label_encoder.fit_transform(data['Region'])","e1dbd3e8":"data","6ededdd1":"data.dtypes","38c99d53":"y = data['Region'].copy()\nX = data.drop('Region', axis=1).copy()","f34cf48f":"scaler = StandardScaler()\n\nX = scaler.fit_transform(X)","01776e0a":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7)","a4a8cf6c":"models = [\n    LogisticRegression(),\n    SVC(),\n    MLPClassifier(),\n    DecisionTreeClassifier(),\n    AdaBoostClassifier(),\n    BaggingClassifier(),\n    GradientBoostingClassifier(),\n    RandomForestClassifier()\n]\n\nmodel_names = [\n    \"         Logistic Regression\",\n    \"      Support Vector Machine\",\n    \"              Neural Network\",\n    \"               Decision Tree\",\n    \"         AdaBoost Classifier\",\n    \"          Bagging Classifier\",\n    \"Gradient Boosting Classifier\",\n    \"    Random Forest Classifier\"\n]","3e9e7ec3":"results = []\n\nfor i in range(len(models)):\n    models[i].fit(X_train, y_train)\n    results.append(models[i].score(X_test, y_test))","109c9517":"for i in range(len(models)):\n    print(model_names[i] + \": {:.5f}\".format(results[i]))","5a16b56f":"# Dropping Index Column\/Checking Missing Values","9159abea":"# Modeling\/Training","f462aae2":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/1KVRzz8jtMk","7a8b1202":"# Results","fe96953b":"# Getting Started","a126c01f":"# Removing Commas From Thermal Columns","a6c6316a":"# Encoding Labels","355188c2":"# Splitting\/Scaling","e8eec2f6":"# Task for Today  \n\n***\n\n## India Power Generation Region Prediction  \n\nGiven *data about daily power generation in India*, let's try to predict what **region** a given report is from.  \n  \nWe will use eight different models to make our predictions.","beaed856":"# Creating Year and Month Columns"}}