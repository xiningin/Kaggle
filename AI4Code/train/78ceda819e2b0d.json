{"cell_type":{"7ff779c6":"code","053dd65b":"code","507e0817":"code","39c44bef":"code","a73475bb":"code","e0f62189":"code","3a45e617":"code","b8718a5b":"code","06cbb927":"code","3dc91443":"markdown","afc50eef":"markdown","4c1c0907":"markdown","36dbdc87":"markdown","a171d196":"markdown","44b7e285":"markdown","0c2a2edc":"markdown","fbf9eea9":"markdown"},"source":{"7ff779c6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndataset = pd.read_csv('..\/input\/framingham.csv')\ndataset.head()","053dd65b":"count=0\nfor i in dataset.isnull().sum(axis=1):\n    if i>0:\n        count=count+1\nif count>0:\n    print(count, 'Rows(or', round((count\/len(dataset.index))*100), '%) with missing values are dropped out of total', str(len(dataset.index)))\n    dataset.dropna(axis=0,inplace=True)\n    print('Now dataset has', len(dataset.index),' rows')","507e0817":"X = dataset.iloc[:,:-1].values\ny = dataset.iloc[:,-1].values\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","39c44bef":"plt.figure(figsize = (20,10))\nfor i in dataset.columns:\n    plt.hist(dataset[i], bins=2, alpha =0.2, label=i)\nplt.legend()\nplt.title(\"Data Distribution\")","a73475bb":"def plot_hists(dataframe, features, rows, cols):\n    fig=plt.figure(figsize=(20,20))\n    \n    for i, feature in enumerate(features):\n        ax=fig.add_subplot(rows,cols,i+1)\n        dataframe[feature].hist(bins=20,ax=ax,facecolor='midnightblue')\n        ax.set_title(feature+\" Distribution\",color='DarkRed')\n        \n    fig.tight_layout()  \n    plt.show()\nplot_hists(dataset,dataset.columns,5,4)","e0f62189":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression()\n\nclassifier.fit(X_train, y_train)","3a45e617":"y_pred = classifier.predict(X_test)","b8718a5b":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)","06cbb927":"from sklearn.metrics import accuracy_score as score\nprint('Accuracy')\nprint(score(y_test,y_pred)*100)","3dc91443":"**Confusion matrix**","afc50eef":"**Removing the rows with missing values**","4c1c0907":"**Visualising the data distribution**","36dbdc87":"**Predicting output**","a171d196":"**Training the Logistic Regression**","44b7e285":"**Accuracy**","0c2a2edc":"**Splitting the data into training and test sets**","fbf9eea9":"**Importing libraries and dataset**"}}