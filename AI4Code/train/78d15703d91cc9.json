{"cell_type":{"e3a56ca2":"code","807bd0a9":"code","7776e4a0":"code","6f1a7d1e":"code","84c4800e":"code","eaf24001":"code","72f9cff3":"code","50f539d2":"code","d1c0a80d":"code","c752ed36":"code","14ea6e42":"code","072005a0":"code","18c40821":"code","78552bd1":"code","00e0b1f6":"code","b915c6c2":"code","1aa44661":"code","4a5f4202":"code","ac044908":"code","35877861":"code","90f3dfea":"markdown","f96c2fe2":"markdown","6a1cd756":"markdown","50014e6d":"markdown","48d82a54":"markdown","ed713ec7":"markdown","1792ca64":"markdown","a9039a4c":"markdown","be0a9e71":"markdown","06afb666":"markdown","d68b8fd5":"markdown","2602fcde":"markdown","abf2a214":"markdown","9d9d3332":"markdown","61c064cd":"markdown","529220a7":"markdown","b4473b0e":"markdown","b5d20ce5":"markdown","501b3ee1":"markdown","7031b6df":"markdown","365798ed":"markdown"},"source":{"e3a56ca2":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport numpy as np # \u884c\u5217\u6f14\u7b97\nimport pandas as pd # \u30c6\u30fc\u30d6\u30eb\u30c7\u30fc\u30bf\u3092\u6271\u3046\npd.set_option(\"display.max_columns\", 100) # \u30ab\u30e9\u30e0\u6570\u8868\u793a\u306e\u4e0a\u9650\u3092100\u306b\u7de9\u548c\n\nimport matplotlib.pyplot as plt # \u53ef\u8996\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\nplt.style.use('ggplot')\n%matplotlib inline\n\nfrom category_encoders import CountEncoder # \u30ab\u30c6\u30b4\u30ea\u3092\u6570\u5024\u306b\u5909\u63db\uff08\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\uff09\nfrom sklearn.feature_extraction.text import TfidfVectorizer # scikit-learn\u3000python\u3067ML\u3084\u308b\u4e0a\u3067\u306e\u30c7\u30d5\u30a1\u30af\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import KFold\n\nfrom tqdm.notebook import tqdm # \u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\nfrom xgboost import XGBRegressor # \u5b66\u7fd2\u5668\uff08\u5f37\u3044\u3084\u3064\uff09\nimport cv2 #opencv, \u753b\u50cf\u30c7\u30fc\u30bf\u306e\u5404\u7a2e\u51e6\u7406\u306b\u4f7f\u3046","807bd0a9":"# \u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30e1\u30a4\u30f3\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u898b\u307e\u3059\u3000\n# parse_dates=[]\u3067\u305d\u306e\u30ab\u30e9\u30e0(\u9805\u76ee\uff09\u306f\u65e5\u6642\u3068\u3057\u3066\u8a8d\u8b58\u3057\u307e\u3059\ndf_train = pd.read_csv('\/kaggle\/input\/data-science-autumn-2021\/train.csv', parse_dates=['latest_saledate'])\ndf_test = pd.read_csv('\/kaggle\/input\/data-science-autumn-2021\/test.csv', parse_dates=['latest_saledate'])","7776e4a0":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u305d\u308c\u305e\u308c\u306e\u884c\u6570\u3068\u5217\u6570\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\ndf_train.shape, df_test.shape","6f1a7d1e":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u5148\u982d\uff15\u884c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\n# \u3056\u3063\u3068\u307f\u305f\u3068\u3053\u308d\u3067\u306f\u3001\u6570\u5024\u3001\u30ab\u30c6\u30b4\u30ea\u3001\u65e5\u4ed8\u306e\u4ed6\u306b\u3001\u30c6\u30ad\u30b9\u30c8\uff08description\uff09\u3001\u5730\u7406\u7a7a\u9593\uff08latitude\/longitude\u306a\u3069\uff09\u3001\u753b\u50cf(homeImage)\u304c\u542b\u307e\u308c\u308b\u3088\u3046\u3067\u3059\u306d\u3002\n# \u753b\u50cf\u306ffile path\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\ndf_train.head()","84c4800e":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5148\u982d\uff15\u884c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\ndf_test.head()","eaf24001":"df_train['homeImage'] # Series","72f9cff3":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u5bfe\u5fdc\u3059\u308b\u753b\u50cf\u3092\u5148\u982d12\u679a\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# \u7dba\u9e97\u306a\u304a\u5bb6\u3067\u3059\u306d\u3002\u65e5\u672c\u3067\u306f\u306a\u304b\u306a\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nn=12\nfiles = df_train['homeImage'].values[:n]\n\nplt.figure(figsize=[30,30])\nfor i, file in enumerate(files):\n    plt.subplot(n\/\/3,3,i+1)\n    img = cv2.imread('\/kaggle\/input\/data-science-autumn-2021\/train\/%s'%file)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    plt.title(file)\n    plt.imshow(img)\nplt.show()","50f539d2":"# \u8aac\u660e\u5909\u6570\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u5909\u6570\u306b\u5206\u5272\u3057\u3066\u304a\u304d\u307e\u3059\n# \u30c6\u30ad\u30b9\u30c8\u3068\u753b\u50cf\u4e00\u65e6\u9664\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u3089\u306e\u6271\u3044\u306b\u3064\u3044\u3066\u306f\u672c\u30b3\u30f3\u30da\u3092\u901a\u3058\u3066\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u307e\u305f\u3001\u65e5\u4ed8\u3082year\u3068month\u304c\u65e2\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u4e00\u65e6\u4f7f\u308f\u306a\u3044\u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\ny_train = df_train.latestPrice\nX_train = df_train.drop(['latestPrice', 'description', 'homeImage', 'latest_saledate'], axis=1)\nX_test = df_test.drop(['description', 'homeImage', 'latest_saledate'], axis=1)","d1c0a80d":"# \u4e0a\u8a18\u304c\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u307e\u3059\u3002\u2460\u2461\u306e\u64cd\u4f5c\u3092\u3057\u3066\u3044\u308c\u3070X_train[\"latest_saledate\"] \u304c\u8ffd\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\nX_train.head()","c752ed36":"# dtype\u304cobject\uff08\u6570\u5024\u3067\u306a\u3044\u3082\u306e\uff09\u306e\u30ab\u30e9\u30e0\u540d\u3068\u30e6\u30cb\u30fc\u30af\u6570\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# streetAddress\u304c\u30e6\u30cb\u30fc\u30af\u306b\u8fd1\u3044\u3067\u3059\u306d\u3002\ncats = []\nfor col in X_train.columns:\n    if X_train[col].dtype == 'object':\n        cats.append(col)\n        \n        print(col, X_train[col].nunique())","14ea6e42":"# streetAddress\u3082\u3042\u3068\u3067\u8003\u3048\u308b\u3053\u3068\u306b\u3057\u3066\u4e00\u65e6\u9664\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n# 2\u5ea6\u3042\u308b\u3053\u3068\u306f3\u5ea6\u3042\u308b\u65b9\u5f0f\u3067\u5b66\u7fd2\u3059\u308b\u306e\u304c\u6a5f\u68b0\u5b66\u7fd2\u3067\u3059\u306e\u3067\u3001\u5168\u90e81\u56de\u3057\u304b\u89b3\u6e2c\u3055\u308c\u306a\u3044\u73fe\u72b6\u306e\u307e\u307e\u3067\u306f\u76f4\u63a5\u306f\u610f\u5473\u3092\u306a\u3055\u306a\u3044\u304b\u3089\u3067\u3059\u3002\nX_train = X_train.drop(['streetAddress'], axis=1)\nX_test = X_test.drop(['streetAddress'], axis=1)","072005a0":"# \u305d\u306e\u4ed6\u306b\u3082\u8272\u3005\u3084\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u3082\u3046\u4e00\u62ec\u3057\u3066\u30a8\u30a4\u30e4\u3067Count Encoding\u3057\u3066\u3057\u307e\u3044\u307e\u3059\ncats = []\n\nfor col in X_train.columns:\n    if X_train[col].dtype == 'object':\n        cats.append(col)\n        \nce = CountEncoder(cols=cats)\n\nX_train = ce.fit_transform(X_train)\nX_test = ce.transform(X_test)","18c40821":"# \u4e8b\u524d\u6e96\u5099\u306e\u7d50\u679c\u30c7\u30fc\u30bf\u304c\u6570\u5b57\u3060\u3089\u3051\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nX_train.head()","78552bd1":"# \uff15\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u3067\u4e88\u6e2c\u30b9\u30b3\u30a2\u3092\u898b\u7a4d\u3082\u3063\u3066\u307f\u307e\u3057\u3087\u3046\nscores = []\n\ncv = KFold(n_splits=5, random_state=71, shuffle=True)\n\nfor i, (train_ix, val_ix) in tqdm(enumerate(cv.split(X_train, y_train))):\n    X_train_, y_train_ = X_train.iloc[train_ix], y_train.iloc[train_ix]\n    X_val, y_val = X_train.iloc[val_ix], y_train.iloc[val_ix]\n \n    model = XGBRegressor(n_estimators=9999, learning_rate=0.05, random_state=71)\n    model.fit(X_train_, y_train_, eval_set=[(X_val, y_val)], eval_metric='mae', early_stopping_rounds=30)\n    y_pred = model.predict(X_val)\n    score = mean_absolute_error(y_val, y_pred)\n    scores.append(score)\n    print('CV Score of Fold_%d is %f' % (i, score))","00e0b1f6":"# \u5e73\u5747\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\nnp.array(scores).mean()","b915c6c2":"# \u3067\u306f\u3001\u5168\u30c7\u30fc\u30bf\u3067\u518d\u5b66\u7fd2\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n# \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u6570\u306f\u5148\u307b\u3069\u306e\u6700\u9069\u5024\u3092\u7528\u3044\u3066\u307f\u307e\u3059\nbest_iter = model.best_iteration\nmodel = XGBRegressor(learning_rate=0.05, n_estimators=best_iter, random_state=71)\nmodel.fit(X_train, y_train)","1aa44661":"# \u3044\u3088\u3044\u3088\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e88\u6e2c\u3057\u307e\u3059\ny_pred_test = model.predict(X_test)\ny_pred_test","4a5f4202":"# \u63d0\u51fa\u7528\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u4e88\u6e2c\u5024\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\nsubmission = pd.read_csv('\/kaggle\/input\/data-science-autumn-2021\/sample_submission.csv', index_col=0)\nsubmission.latestPrice = y_pred_test","ac044908":"submission","35877861":"# csv\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\nsubmission.to_csv('submission.csv')","90f3dfea":"discussion\u3067\u7686\u3055\u3093\u306b\u6319\u3052\u3066\u9802\u3044\u3066\u308b\u30cd\u30bf\u3067\u3059\n\nhttps:\/\/www.kaggle.com\/c\/data-science-autumn-2021\/discussion\/276902","f96c2fe2":"# \u7b2c\uff14\u56de\u3067\u597d\u8a55\u3067\u3057\u305f\u306e\u3067\u3001\u8abf\u3079\u305f\u3053\u3068\u3084\u601d\u3063\u305f\u3053\u3068\u3092\u521d\u5fc3\u8005\u4e8b\u52d9\u5c40\u76ee\u7dda\u3067\u8ffd\u8a18\u3057\u3066\u307e\u3059\u3002","6a1cd756":"# 3.  \u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u78ba\u8a8d","50014e6d":"****\u4eca\u56de\u306f'description', 'homeImage', 'latest_saledate\u2019\u306e\u30ab\u30e9\u30e0\uff08\u9805\u76ee\uff09\u3092\u9664\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u3061\u3089\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u30b9\u30b3\u30a2\u30a2\u30c3\u30d7\u306b\u3064\u306a\u304c\u308b\u304b\u3082\uff1f****","48d82a54":"X_train[\"latest_saledate\"] = X_train.latest_saledate.apply(datetime_)\nX_test[\"latest_saledate\"] = X_test.latest_saledate.apply(datetime_)","ed713ec7":"# 6. \u4e88\u6e2c\uff0b\u30c7\u30fc\u30bf\u4fdd\u5b58","1792ca64":"def datetime_(date):\n    try:\n        d = pd.to_datetime('2021-10-01') - date\n        d \/= pd.Timedelta('1d')\n    except:\n        d = -9999\n    return d","a9039a4c":"# 2. \u30c7\u30fc\u30bf\u306e\u547c\u3073\u51fa\u3057","be0a9e71":"# 1. \u8a2d\u5b9a\u3000\u307e\u305a\u521d\u3081\u306b\u307e\u3068\u3081\u3066\u3053\u306e\u30b3\u30fc\u30c9\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002","06afb666":"### \u2193\u3053\u3053\u304b\u3089\u306f\u4e00\u6c17\u306b\u6587\u5b57\u306e\u30c7\u30fc\u30bf\u3092\u6570\u5024\u5316\u3059\u308b\n\"cats=[]\"\u3067\u7a7a\u306e\u914d\u5217\u3092\u4f5c\u3063\u3066\u3001\u305d\u3053\u306b\"dtype(\u30c7\u30fc\u30bf\u578b)\"\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8(\u6570\u5024\u3058\u3083\u306a\u3044)\u306e\u3082\u306e\u3092\u5165\u308c\u3066\u3044\u304f(\"append\")\n\"CountEncoder\"\u3067\u30a8\u30f3\u30b3\u30fc\u30c9(\u6570\u5024\u5316)\u3059\u308b\u914d\u5217(cols)\u3092\u6307\u5b9a(\"cols=cats\")\u3057\u3066\nce\u3063\u3066\u3044\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3057\u3066\u304a\u304f\u3002\u305d\u308c\u3092\"fit_transform\",\"transform\"\u3067\u6570\u5024\u306e\u5165\u3063\u305f\u884c\u5217\u306b\u5909\u63db","d68b8fd5":"# \u2460 'latest_saledate'\u306f\u4f7f\u7528\u3057\u305f\u3044\u306e\u3067\u3001\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u9664\u304f\u306e\u3092\u3084\u3081\u308b\n# \u2461\u63b2\u8f09\u3055\u308c\u3066\u306e\u304c\u4f55\u65e5\u524d\u304b\u78ba\u8a8d\u3057\u3066\u307f\u308b","2602fcde":"# 5. \u6a5f\u68b0\u5b66\u7fd2","abf2a214":"**\u4e0b\u8a18\u2460\u2461\u306bdiscussion\u3067\u7686\u3055\u3093\u306b\u6319\u3052\u3066\u9802\u3044\u305f\u30cd\u30bf\u3082\u5c11\u3057\u3092\u5b9f\u88c5\u3057\u3066\u307e\u3059\u3002\u624b\u3092\u52d5\u304b\u305b\u3066\u9802\u304f\u3068\u30b9\u30b3\u30a2\u30a2\u30c3\u30d7\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002**\n\n\u203bSwag Baseline\u306f\u8d85\u3048\u308c\u306a\u3044\u306e\u3067\u3001Swag Baseline\u8cde\u72d9\u3044\u306e\u65b9\u306f\uff0b\u03b1\u3000\u9811\u5f35\u3063\u3066\u304f\u3060\u3055\u3044\uff01","9d9d3332":"## **for\u6587\u3000\u51fa\u3066\u304d\u305f\uff08\u7b2c4\u56de\u306e\u9ad8\u7530\u3055\u3093\u30e1\u30e2\u3088\u308a\uff09**\n\u6700\u521d\u306b\"cats=[]\"\u3067\u7a7a\u306e\u30ea\u30b9\u30c8(\u3068\u3044\u3046\u3089\u3057\u3044)\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f   \n**for \"\u5909\u6570\" in \"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\":**   \n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9577\u3055\u3060\u3051\u305d\u306e\u4e0b\u306e\u52d5\u4f5c\u3092\u7e70\u308a\u8fd4\u3059   \n\u305d\u306e\u969b\u306b\u5909\u6570\u306f1\u305a\u3064\u5897\u3048\u3066\u3044\u304f   \n\u2193\u306e\u5834\u5408\u306f\"X_train.columns\"(\u5217\u306e\u9577\u3055\u5206)\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3059   \n**if** \u3082\u51fa\u3066\u304d\u3066\u3044\u3066\u3001X_train[\"\u30e9\u30d9\u30eb\u540d\"] **.dtype**   \n\".dtype\"\u306f\u305d\u306e\u5217\u306e\u30c7\u30fc\u30bf\u578b\u3092\u53d6\u5f97\u3059\u308b\u9053\u5177   \n\"col\"\u5217\u306e\u30c7\u30fc\u30bf\u578b\u304c **\"'object'\"** (\u6570\u5024\u3058\u3083\u306a\u3044\u3082\u306e\u3063\u3066\u3044\u3046\u610f\u5473)   \n\u3060\u3063\u305f\u3089\u3001\"cats\"\u306e\u30ea\u30b9\u30c8\u306b\"col\"\u3092\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u3092\u3057\u3066\u3044\u308b   \n\".append\"\u306f\u30ea\u30b9\u30c8\u306b\u8981\u7d20(\u4eca\u56de\u306f\"col\")\u3092\u8ffd\u52a0\u3059\u308b\u9053\u5177   \n\u203bcats\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\u7406\u7531\u304c\u826f\u304f\u308f\u304b\u3063\u3066\u307e\u305b\u3093\u3002\u5b9a\u578b\u6587\u307f\u305f\u3044\u306a\u3082\u3093\u3067\u3057\u3087\u3046\u304b   \n\u3042\u3068\u306f\u4e0b\u8a18\u306b\u3042\u308b\u901a\u308a\u3001   \n\u6570\u5024\u3067\u306a\u3044\u5217\u306e\u30e9\u30d9\u30eb\u540d(\u30ab\u30e9\u30e0\u540d)\u3068\u30e6\u30cb\u30fc\u30af\u6570\u3092\u51fa\u529b\u3057\u3066\u3044\u308b   \n**\".nunique()\"** \u3067\u305d\u306e\u30ea\u30b9\u30c8\u306e\u4e2d\u306e\u300c\u91cd\u8907\u3059\u308b\u5185\u5bb9\u300d\u3092\u9664\u3044\u305f\u30c7\u30fc\u30bf\u6570\u304c\u53d6\u5f97\u3067\u304d\u308b   \n[\u3042\u3001\u3044\u3001\u3046\u3001\u3044\u3001\u3048\u3001\u3048\u3001\u3042\u3001\u304a\u3001]\u3063\u3066\u3044\u3046\u30c7\u30fc\u30bf\u304c8\u500b\u3042\u308b\u30ea\u30b9\u30c8\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3001   \n\u91cd\u8907\u3092\u9664\u304f\u3068\u3001\u300c\u3042\u3001\u3044\u3001\u3046\u3001\u3048\u3001\u304a\u300d\u306e5\u6587\u5b57\u306b\u306a\u308b\u306e\u3067\u3001\"5\"\u304c\u51fa\u529b\u3055\u308c\u308b   \n\u305d\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u8272\u3005\u3042\u308b\u30c7\u30fc\u30bf\u3092\u4e00\u5b9a\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u5206\u3051\u305f\u3044\u3068\u601d\u3063\u3066\u78ba\u8a8d\u3057\u3066\u3044\u308b(\u305f\u3076\u3093)   \n\u3058\u3083\u306a\u3044\u3068\u6a5f\u68b0\u5074\u3067\u5b66\u7fd2\u3067\u304d\u306a\u3044\u304b\u3089\u3002","61c064cd":"### \u4ea4\u5dee\u691c\u5b9a \nk(\u4eca\u56de\u306f5)\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u6cd5\u306f\u8a13\u7df4\u30c7\u30fc\u30bf\u3092k\u500b\u306b\u5206\u5272\u3057\u3066   \nn\u500b\u3092\u8a13\u7df4\u3001k-n\u500b\u3092\u30c6\u30b9\u30c8\u306b\u4f7f\u3046\u5b66\u7fd2\u65b9\u6cd5\u306e\u3053\u3068   \n[\u30cd\u30c3\u30c8\u304b\u3089\u5f15\u7528]   \nk-\u5206\u5272\u4ea4\u5dee\u691c\u8a3c\u306f\u3001\u30c7\u30fc\u30bf\u3092k\u500b\u306b\u5206\u5272\u3057\u3066\u3001n\u500b\u3092\u8a13\u7df4\u7528\u306bk-n\u500b\u3092\u30c6\u30b9\u30c8\u7528\u306b\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u3092\u3001   \n\u5206\u3051\u3089\u308c\u305fk\u500b\u306e\u30c7\u30fc\u30bf\u304c\u5fc5\u305a1\u56de\u306f\u30c6\u30b9\u30c8\u7528\u306b\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002   \n- n_split\uff1a\u30c7\u30fc\u30bf\u306e\u5206\u5272\u6570\uff0e\u3064\u307e\u308ak\uff0e\u691c\u5b9a\u306f\u3053\u3053\u3067\u6307\u5b9a\u3057\u305f\u6570\u5024\u306e\u56de\u6570\u304a\u3053\u306a\u308f\u308c\u308b\uff0e\n- shuffle\uff1aTrue\u306a\u3089\u9023\u7d9a\u3059\u308b\u6570\u5b57\u3067\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u305b\u305a\uff0c\u30e9\u30f3\u30c0\u30e0\u306b\u30c7\u30fc\u30bf\u3092\u9078\u629e\u3059\u308b\uff0e\n- random_state\uff1a\u4e71\u6570\u306e\u30b7\u30fc\u30c9\u3092\u6307\u5b9a\u3067\u304d\u308b = \u30d1\u30e9\u30e1\u30fc\u30bf(\u3053\u308c\u304c\u540c\u3058\u3060\u3068\u3044\u3064\u3082\u540c\u3058\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u306a\u308b)\u3000 \n**\"cv.split\"** \u3067\"X_train\"\u3068\"y_train\"\u3092\u8a13\u7df4\u7528\"train_ix\"\u306e\u884c(\u30c7\u30fc\u30bf\u7fa4)\u3068\"val_ix\"\u306e\u884c\u306b\u5206\u5272\u3059\u308b   \n\u2192\u305d\u308c\u3092\u5404\u3005\"X_train_\",\"y_train_\"\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u3001\"X_val\",\"y_val\"\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u3066\u5b66\u7fd2\u3055\u305b\u3066\u3044\u308b ","529220a7":"### df_train\u3084df_test\u3000\u306f\u547c\u3073\u51fa\u3057\u305f\u307e\u307e\u89e6\u3089\u306a\u3044!\n\u4e2d\u8eab\u3092\u30b3\u30d4\u30fc\u3057\u305fX_train\u3084X_test\u306e\u30c7\u30fc\u30bf\u3092\u4e8b\u524d\u6e96\u5099\u3067\u89e6\u3063\u3066\u3044\u304d\u307e\u3059","b4473b0e":"**streetAddress(\u4f4f\u6240)\u306e\u30c7\u30fc\u30bf\u306f\u7269\u4ef6\u306e\u4fa1\u683c\u306b\u5f71\u97ff\u3042\u308a\u305d\u3046\u306a\u306e\u3067\u4f7f\u3048\u305d\u3046\u3067\u3059\u306d\u3002\u9664\u3044\u3066\u3057\u307e\u3063\u305f\u30c7\u30fc\u30bf\u306e\u6d3b\u7528\u3092\u662f\u975e\u691c\u8a0e\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044** ","b5d20ce5":"# 4. \u6a5f\u68b0\u5b66\u7fd2\u306e\u4e8b\u524d\u6e96\u5099","501b3ee1":"## \u9ad8\u7530\u3055\u3093\u30e1\u30e2\n\u2193LightGBM,XGBoost\u306e\u9055\u3044\u306b\u3064\u3044\u3066   \nhttps:\/\/www.codexa.net\/lightgbm-beginner\/   \n\u2193\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u3001\u6c7a\u5b9a\u6728\u3068\u304b\u306b\u95a2\u3057\u3066   \nhttps:\/\/qiita.com\/takuya_tsurumi\/items\/23fdc43ee0e54ec7c87e   \n\u4eca\u56de\u306f\"XGBRegressor\"\u3063\u3066\u3044\u3046\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u3002   \nhttps:\/\/www.codexa.net\/hyperparameter-tuning-python\/   \n- n_estimators : \u4f55\u56de\u7e70\u308a\u8fd4\u3059\u304b\n- learning_rate\uff1a\u3069\u308c\u304f\u3089\u3044\u5b66\u7fd2\u7d50\u679c\u306b\u9069\u5fdc\u3059\u308b\u304b\u307f\u305f\u3044\u306a\u3002\u203b\u5927\u304d\u3059\u304e\u308b\u3068\u904e\u5b66\u7fd2\u306b\u306a\u308b\n- random_stat\uff1a\u4e0a\u306e\u65b9\u3067\u3082\u66f8\u3044\u305f\u3001\u30e9\u30f3\u30c0\u30e0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\"\n\".fit\"\u3063\u3066\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u5b66\u7fd2\u306e\u90e8\u5206   \n\".fit(\u5b66\u7fd2\u30c7\u30fc\u30bf\u3001\u7d50\u679c(Score)\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fb\u30fb\u30fb)\"\u3068\u306a\u308b   \n- eval_set\uff1a\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\n- eval_metric\uff1a\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u8a55\u4fa1\u6307\u6a19(\u4eca\u56de\u306frmse\u203b2\u4e57\u5e73\u5747\u5e73\u65b9\u6839\u8aa4\u5dee)\n- early_stopping_round\uff1a\u3053\u306e\u56de\u6570\u5b66\u7fd2\u7d50\u679c\u306e\u6539\u5584\u304c\u306a\u304b\u3063\u305f\u3089\u5b66\u7fd2\u6253\u3061\u5207\u308a","7031b6df":"\uff1c\u30b3\u30fc\u30c9\u306e\u69cb\u6210\uff1e\n1. \u8a2d\u5b9a\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3053\u306e\u30e2\u30c7\u30eb\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u547c\u3070\u308c\u308b\u8a08\u7b97\u3084\u6a5f\u68b0\u5b66\u7fd2\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u308b\u7269\u547c\u3073\u51fa\u3057\n2. \u30c7\u30fc\u30bf\u306e\u547c\u3073\u51fa\u3057\u3000\u3000\u3000\u3000\u3000\u3000\u4eca\u56de\u306f\u30b3\u30f3\u30da\u3067\u63d0\u4f9b\u9802\u3044\u305f\u30c7\u30fc\u30bf\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\n3. \u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u78ba\u8a8d\u3000\u3000\u3000   \u3000 \u521d\u53c2\u52a0\u306e\u65b9\u5411\u3051\u306e\u4e8b\u524d\u8aac\u660e\u4f1a\u306e\u4f8b\u3067\u8a00\u3046\u3068train\u30c7\u30fc\u30bf\uff081\u5e741\u7d44\u306e\u751f\u5f92\u306e\u30c7\u30fc\u30bf\uff09\u30fbtest\u30c7\u30fc\u30bf\uff081\u5e742\u7d44\u306e\u30c7\u30fc\u30bf\uff09\u30fb\u753b\u50cf\uff08\u89aa\u306e\u5199\u771f\uff09\n4. \u6a5f\u68b0\u5b66\u7fd2\u306e\u524d\u51e6\u7406\u30fb\u4e8b\u524d\u6e96\u5099) \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u304c\u6a5f\u68b0\u5b66\u7fd2\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3000\u3000\u8a00\u8449\u306f\u6570\u5b57\u5316\uff08\u6b63\u898f\u5206\u5e03\u3059\u308b\u30c7\u30fc\u30bf\u306b\u5909\u63db\uff09\n5. \u6a5f\u68b0\u5b66\u7fd2\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u4eca\u56de\u306fxgboost\u3068\u3044\u3046\u6c7a\u5b9a\u6728\u3068\u547c\u3070\u308c\u308b\u624b\u6cd5\u3092\u3057\u3088\u3046\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u3000\u3000\u3000\u3000\n6. \u4e88\u6e2c\uff0b\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u3000\u3000\u3000\u3000\u3000\u4eca\u56de\u4f5c\u3063\u305f\u30e2\u30c7\u30ebsubmit\u7528\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3000\u4e8b\u524d\u8aac\u660e\u4f1a\u306e\u4f8b\u3067\u8a00\u3046\u30681\u5e742\u7d44\u306e\u51fa\u5e2d\u756a\u53f7\u3068\u4f53\u91cd\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u307e\u3059","365798ed":"## \u7c73\u672c\u3055\u3093\uff08\u65b0\u5165\u793e\u54e1\u306e\u65b9\u3067\u3059\u304c\u3001\u30c0\u30a4\u30cf\u30c4\u30b3\u30f3\u30da\u306e\u5e2b\u5320\u7684\u5b58\u5728\uff09\u304c\u4f5c\u6210\u3057\u3066\u304f\u308c\u305f\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3059\u308b\n\u2193\u306e\u30b3\u30fc\u30c9\u3092\u53f3\u30af\u30ea\u30c3\u30af\u21d2\uff3bChange to Code Cell Type]\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066Markdown\u21d2Code\u306b\u5909\u63db\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30fc\u30bf\u3092\u6bd4\u7387\u306b\u3057\u305f\u7279\u5fb4\u91cf\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30b9\u30b3\u30a2\u30a2\u30c3\u30d7\u3057\u307e\u3059"}}