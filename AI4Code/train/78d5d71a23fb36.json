{"cell_type":{"8bc541c7":"code","7e4ad4d9":"code","8c1f4f97":"code","1c83700d":"code","a8f76acf":"code","767095f3":"code","7e3ecb8d":"code","80b0ba30":"code","d12b5c9b":"code","c78db1f6":"code","cbfe053b":"code","856c17ed":"code","f2cddf80":"code","16796805":"code","d5226c91":"code","472c5151":"code","b3803c9b":"code","48ee4445":"code","08093e6f":"code","3bbdc595":"code","b2637810":"code","12d1d5ee":"code","b9f5adf7":"code","0e800a32":"code","edf973b3":"code","06723a66":"code","a624c000":"code","5fa11960":"code","2d73dd6a":"code","63a5cf74":"code","ed378735":"code","055ab4d2":"code","d5df8dad":"code","33a05710":"code","cd12a681":"code","3083adb1":"code","3f39a035":"code","c134b494":"code","6d82b808":"code","77d974ae":"code","1e7748a9":"code","c592f540":"code","72bb977f":"code","de54a22d":"code","7631cf74":"code","6ee443c8":"code","554db4b7":"code","bdf9a0ad":"code","18f292b7":"code","ae13b2cd":"code","511adb12":"code","12444d2e":"code","09998f65":"code","3d4f2c07":"code","9f5e4dc4":"code","d12fb089":"code","0f89a149":"code","afebf71f":"code","630a0553":"code","35adf33b":"code","b1f2205d":"code","5a8e5383":"code","2f8505af":"code","b1c716eb":"code","7e5e9cdd":"code","26a6d7ee":"code","86660109":"code","cb13a204":"code","e408ade2":"code","7fbe49db":"code","37dffcf2":"code","7d381928":"code","3442613a":"code","33f50942":"code","660447c8":"code","0bcb2ef6":"code","2ecde7d1":"code","cde997b9":"code","45276573":"code","7bd0e281":"code","37f96051":"code","8e193255":"code","12c379a3":"code","e0dcbeef":"markdown","256c2739":"markdown","e35a69c7":"markdown","67a5243d":"markdown","fbe7a040":"markdown","04cfaa98":"markdown","f7bedd5f":"markdown","42544378":"markdown","0dab5dbb":"markdown","ed7d69a4":"markdown","fbc3758d":"markdown","ef0712e8":"markdown","aae35881":"markdown","0a7b4759":"markdown","46bc25a6":"markdown","94e0a52a":"markdown","ebae0a17":"markdown","bd0db871":"markdown","91dde1f5":"markdown","81680ff7":"markdown","03fe3a91":"markdown","774704a8":"markdown","952339fa":"markdown","5e7c1f68":"markdown","e75e7b37":"markdown","e0df048a":"markdown","ed39841d":"markdown","cd3778d6":"markdown","bfba021c":"markdown","395d8f9e":"markdown","2520a3e4":"markdown","123a477c":"markdown","b22e9d3f":"markdown","6dbccfe2":"markdown","cd5d54d5":"markdown","fba0367e":"markdown","e0ec221d":"markdown","702b84c1":"markdown","01116023":"markdown","276d602c":"markdown","bc026d67":"markdown","9ffb90c4":"markdown","8f5ba8df":"markdown","34029406":"markdown","990b48ce":"markdown","006471db":"markdown","eae7e680":"markdown","44248adc":"markdown","1c0fb018":"markdown","feca66c6":"markdown","9f4506e9":"markdown","2ce0e4c8":"markdown","669f7566":"markdown","bf5c1ebb":"markdown","f8132364":"markdown","2f45b0b3":"markdown","175da1b0":"markdown","df659cd2":"markdown","98433994":"markdown","093e8686":"markdown","02ad9a3d":"markdown","81995cb8":"markdown","be09f233":"markdown","730dd782":"markdown"},"source":{"8bc541c7":"# \uc2dc\uc791 \uc804, \ud328\ud0a4\uc9c0 \uc784\ud3ec\ud2b8\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom collections import Counter\n\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier, ExtraTreesClassifier, VotingClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import GridSearchCV, cross_val_score, StratifiedKFold, learning_curve\n\nsns.set(style='white', context='notebook', palette='deep')\n\nimport warnings\nwarnings.filterwarnings(action='ignore')","7e4ad4d9":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\n##### \ud6c8\ub828 \ub370\uc774\ud130 \ubc0f \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\n\ntrain = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\nIDtest = test[\"PassengerId\"]","8c1f4f97":"train.head(5)","1c83700d":"test.head(5)","a8f76acf":"IDtest.head(5)","767095f3":"# \uc774\uc0c1 \ud0d0\uc9c0\ub97c \uc704\ud55c \ud568\uc218 \uc791\uc131\n\ndef detect_outliers(df,n,features):\n    \"\"\"\n    \ub370\uc774\ud130\ud504\ub808\uc784 df\ub97c \ucde8\ud558\uace0\n    Tukey \ubc29\ubc95\uc5d0 \ub530\ub77c n\uac1c \uc774\uc0c1\uc758 \ud2b9\uc774\uce58\ub97c \ud3ec\ud568\ud558\ub294\n    \uad00\uce21\uce58\uc5d0 \ud574\ub2f9\ud558\ub294 \uc9c0\uc218 \ubaa9\ub85d\uc744 \ubc18\ud658\ud558\ub294 \ud568\uc218\n    \"\"\"\n    outlier_indices = []\n    \n    # features(columns) \ubc18\ubcf5\n    for col in features:\n        # 1st quartile (25%)\n        Q1 = np.percentile(df[col], 25)\n        # 3rd quartile (75%)\n        Q3 = np.percentile(df[col],75)\n        # Interquartile range (IQR)\n        IQR = Q3 - Q1\n        \n        # outlier step\n        outlier_step = 1.5 * IQR\n        \n        # col\uc5d0 \ub300\ud55c \ud2b9\uc774\uce58 \ub9ac\uc2a4\ud2b8 \uacb0\uc815\n        outlier_list_col = df[(df[col] < Q1 - outlier_step) | (df[col] > Q3 + outlier_step )].index\n        \n        # \ubc1c\uacac\ub41c \ud2b9\uc774\uac12 \uc0c9\uc778\uc744 \ud2b9\uc774\uac12 \ubaa9\ub85d\uc5d0 \ucd94\uac00 \n        outlier_indices.extend(outlier_list_col)\n        \n    # \ub450 \uac1c \uc774\uc0c1\uc758 \ud2b9\uc774\uce58\ub97c \ud3ec\ud568\ud558\ub294 \uad00\uce21\uce58 \uc120\ud0dd\n    outlier_indices = Counter(outlier_indices)        \n    multiple_outliers = list( k for k, v in outlier_indices.items() if v > n )\n    \n    return multiple_outliers","7e3ecb8d":"# Age, SibSp , Parch, Fare\uc5d0 \ub300\ud55c \uc774\uc0c1\uac12 \ud0d0\uc9c0\nOutliers_to_drop = detect_outliers(train,2,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])\nOutliers_to_drop","80b0ba30":"# Show the outliers rows\ntrain.loc[Outliers_to_drop]","d12b5c9b":"# \uc774\uc0c1\uac12 \uc81c\uac70\ntrain = train.drop(Outliers_to_drop, axis = 0).reset_index(drop=True)","c78db1f6":"## \ubc94\uc8fc\ud615 \ubcc0\ud658 \uc911\uc5d0 \ub3d9\uc77c\ud55c \uc218\uc758 feature\ub97c \uc5bb\uae30 \uc704\ud574 \ud6c8\ub828 \ub370\uc774\ud130\uc640 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \ubd99\uc785\ub2c8\ub2e4.\n\ntrain_len = len(train)\ndataset =  pd.concat(objs=[train, test], axis=0).reset_index(drop=True)","cbfe053b":"# NaN \uac12 \ubc0f \uacb0\uce21 \uac12\uc5d0 NaN\uc73c\ub85c \ucc44\uc6c1\ub2c8\ub2e4.\ndataset = dataset.fillna(np.nan)\n\n# Null\uac12\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.\ndataset.isnull().sum()","856c17ed":"# Infos\ntrain.info()\ntrain.isnull().sum()","f2cddf80":"train.dtypes","16796805":"### \ub370\uc774\ud130 \uc694\uc57d\n# \ub370\uc774\ud130 \uc694\uc57d \ubc0f \ud1b5\uacc4\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.\ntrain.describe()","d5226c91":"# \uc218\uce58 \uac12(SibSp, Parch, Age, Fare)\uacfc Survived \uac12 \uc0ac\uc774\uc758 \uc0c1\uad00 \ud589\ub82c\ng = sns.heatmap(train[[\"Survived\",\"SibSp\",\"Parch\",\"Age\",\"Fare\"]].corr(),annot=True, fmt = \".2f\", cmap = \"coolwarm\")","472c5151":"# SibSp vs Survived\ng = sns.factorplot(x=\"SibSp\",y=\"Survived\",data=train,kind=\"bar\", size = 6 , \npalette = \"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","b3803c9b":"# Parch vs Survived\ng  = sns.factorplot(x=\"Parch\",y=\"Survived\",data=train,kind=\"bar\", size = 6 , \npalette = \"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","48ee4445":"# Age vs Survived\ng = sns.FacetGrid(train, col='Survived')\ng = g.map(sns.distplot, \"Age\")","08093e6f":"# Age \ubd84\ud3ec \ubcf4\uae30\ng = sns.kdeplot(train[\"Age\"][(train[\"Survived\"] == 0) & (train[\"Age\"].notnull())], color=\"Red\", shade = True)\ng = sns.kdeplot(train[\"Age\"][(train[\"Survived\"] == 1) & (train[\"Age\"].notnull())], ax =g, color=\"Blue\", shade= True)\ng.set_xlabel(\"Age\")\ng.set_ylabel(\"Frequency\")\ng = g.legend([\"Not Survived\",\"Survived\"])","3bbdc595":"dataset[\"Fare\"].isnull().sum()","b2637810":"# Fare \uac12\uc5d0 \ube48 \uac12\uc740 \uc911\uc559\uac12\uc73c\ub85c \ucc44\uc6c1\ub2c8\ub2e4.\ndataset[\"Fare\"] = dataset[\"Fare\"].fillna(dataset[\"Fare\"].median())","12d1d5ee":"# Fare \ubd84\ud3ec \ubcf4\uae30\ng = sns.distplot(dataset[\"Fare\"], color=\"m\", label=\"Skewness : %.2f\"%(dataset[\"Fare\"].skew()))\ng = g.legend(loc=\"best\")","b9f5adf7":"# \ubd84\ud3ec\uc758 \uc65c\uace1\uc744 \uc904\uc774\uae30 \uc704\ud574 Fare \uac12\uc5d0 \ub300\ud574 \ub85c\uadf8 \ubcc0\ud658\uc744 \uc2dc\ud589\ud569\ub2c8\ub2e4.\ndataset[\"Fare\"] = dataset[\"Fare\"].map(lambda i: np.log(i) if i > 0 else 0)","0e800a32":"g = sns.distplot(dataset[\"Fare\"], color=\"b\", label=\"Skewness : %.2f\"%(dataset[\"Fare\"].skew()))\ng = g.legend(loc=\"best\")","edf973b3":"g = sns.barplot(x=\"Sex\",y=\"Survived\",data=train)\ng = g.set_ylabel(\"Survival Probability\")","06723a66":"train[[\"Sex\",\"Survived\"]].groupby('Sex').mean()","a624c000":"# Pclass vs Survived\ng = sns.factorplot(x=\"Pclass\",y=\"Survived\",data=train,kind=\"bar\", size = 6 , \npalette = \"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","5fa11960":"# Pclass vs Survived by Sex\ng = sns.factorplot(x=\"Pclass\", y=\"Survived\", hue=\"Sex\", data=train,\n                   size=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","2d73dd6a":"dataset[\"Embarked\"].isnull().sum()","63a5cf74":"# Embarked\uc758 \ucd5c\ube48\uac12\uc778 'S'\ub85c NaN \uac12\uc744 \ucc44\uc6c1\ub2c8\ub2e4.\ndataset[\"Embarked\"] = dataset[\"Embarked\"].fillna(\"S\")","ed378735":"# Embarked vs Survived \ng = sns.factorplot(x=\"Embarked\", y=\"Survived\",  data=train,\n                   size=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","055ab4d2":"# Pclass vs Embarked \ng = sns.factorplot(\"Pclass\", col=\"Embarked\",  data=train,\n                   size=6, kind=\"count\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"Count\")","d5df8dad":"# Age vs Sex, Parch, Pclass, SibSp\ng = sns.factorplot(y=\"Age\",x=\"Sex\",data=dataset,kind=\"box\")\ng = sns.factorplot(y=\"Age\",x=\"Sex\",hue=\"Pclass\", data=dataset,kind=\"box\")\ng = sns.factorplot(y=\"Age\",x=\"Parch\", data=dataset,kind=\"box\")\ng = sns.factorplot(y=\"Age\",x=\"SibSp\", data=dataset,kind=\"box\")","33a05710":"# Sex\uc5d0 \ub300\ud574, \ub0a8\uc131\uc758 \uacbd\uc6b0 0, \uc5ec\uc131\uc758 \uacbd\uc6b0 1\uc758 \ubc94\uc8fc\ud615 \uac12\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\ndataset[\"Sex\"] = dataset[\"Sex\"].map({\"male\": 0, \"female\":1})","cd12a681":"g = sns.heatmap(dataset[[\"Age\",\"Sex\",\"SibSp\",\"Parch\",\"Pclass\"]].corr(),cmap=\"BrBG\",annot=True)","3083adb1":"# Age\uc758 \uacb0\uce21\uac12 \ucc44\uc6b0\uae30\n\n## Pclass, Parch, Sibsp\uc5d0 \ub530\ub77c Age\ub97c \uc720\uc0ac\ud55c \ud589\uc758 \uc911\uc704 \uc5f0\ub839\uc73c\ub85c \ucc44\uc6c1\ub2c8\ub2e4.\n# Index of NaN age rows\nindex_NaN_age = list(dataset[\"Age\"][dataset[\"Age\"].isnull()].index)\n\nfor i in index_NaN_age :\n    age_med = dataset[\"Age\"].median()\n    age_pred = dataset[\"Age\"][((dataset['SibSp'] == dataset.iloc[i][\"SibSp\"]) & (dataset['Parch'] == dataset.iloc[i][\"Parch\"]) & (dataset['Pclass'] == dataset.iloc[i][\"Pclass\"]))].median()\n    if not np.isnan(age_pred) :\n        dataset['Age'].iloc[i] = age_pred\n    else :\n        dataset['Age'].iloc[i] = age_med","3f39a035":"g = sns.factorplot(x=\"Survived\", y = \"Age\",data = train, kind=\"box\")\ng = sns.factorplot(x=\"Survived\", y = \"Age\",data = train, kind=\"violin\")","c134b494":"dataset[\"Name\"].head()","6d82b808":"# Name\uc73c\ub85c\ubd80\ud130 Title \ubf51\uc544\ub0b4\uae30\ndataset_title = [i.split(\",\")[1].split(\".\")[0].strip() for i in dataset[\"Name\"]]\ndataset[\"Title\"] = pd.Series(dataset_title)\ndataset[\"Title\"].head()","77d974ae":"g = sns.countplot(x=\"Title\",data=dataset)\ng = plt.setp(g.get_xticklabels(), rotation=45) ","1e7748a9":"# Title\uc744 \ubc94\uc8fc\ud615 \uac12\uc73c\ub85c \ubd84\ub958\ud558\uae30 \ndataset[\"Title\"] = dataset[\"Title\"].replace(['Lady', 'the Countess','Countess','Capt', 'Col','Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\ndataset[\"Title\"] = dataset[\"Title\"].map({\"Master\":0, \"Miss\":1, \"Ms\" : 1 , \"Mme\":1, \"Mlle\":1, \"Mrs\":1, \"Mr\":2, \"Rare\":3})\ndataset[\"Title\"] = dataset[\"Title\"].astype(int)","c592f540":"g = sns.countplot(dataset[\"Title\"])\ng = g.set_xticklabels([\"Master\",\"Miss\/Ms\/Mme\/Mlle\/Mrs\",\"Mr\",\"Rare\"])","72bb977f":"g = sns.factorplot(x=\"Title\",y=\"Survived\",data=dataset,kind=\"bar\")\ng = g.set_xticklabels([\"Master\",\"Miss-Mrs\",\"Mr\",\"Rare\"])\ng = g.set_ylabels(\"survival probability\")","de54a22d":"# Name \ubcc0\uc218 \uc81c\uac70\ndataset.drop(labels = [\"Name\"], axis = 1, inplace = True)","7631cf74":"dataset[\"Fsize\"] = dataset[\"SibSp\"] + dataset[\"Parch\"] + 1","6ee443c8":"g = sns.factorplot(x=\"Fsize\",y=\"Survived\",data = dataset)\ng = g.set_ylabels(\"Survival Probability\")","554db4b7":"# family size\uc758 4\uac00\uc9c0 \ubc94\uc8fc \ub9cc\ub4e4\uae30\ndataset['Single'] = dataset['Fsize'].map(lambda s: 1 if s == 1 else 0)\ndataset['SmallF'] = dataset['Fsize'].map(lambda s: 1 if  s == 2  else 0)\ndataset['MedF'] = dataset['Fsize'].map(lambda s: 1 if 3 <= s <= 4 else 0)\ndataset['LargeF'] = dataset['Fsize'].map(lambda s: 1 if s >= 5 else 0)","bdf9a0ad":"g = sns.factorplot(x=\"Single\",y=\"Survived\",data=dataset,kind=\"bar\")\ng = g.set_ylabels(\"Survival Probability\")\ng = sns.factorplot(x=\"SmallF\",y=\"Survived\",data=dataset,kind=\"bar\")\ng = g.set_ylabels(\"Survival Probability\")\ng = sns.factorplot(x=\"MedF\",y=\"Survived\",data=dataset,kind=\"bar\")\ng = g.set_ylabels(\"Survival Probability\")\ng = sns.factorplot(x=\"LargeF\",y=\"Survived\",data=dataset,kind=\"bar\")\ng = g.set_ylabels(\"Survival Probability\")","18f292b7":"# Title, Embarked\uc5d0 \ub300\ud574 \uc6d0\ud56b \uc778\ucf54\ub529(One-Hot encoding) \uc2e4\ud589 \ndataset = pd.get_dummies(dataset, columns = [\"Title\"])\ndataset = pd.get_dummies(dataset, columns = [\"Embarked\"], prefix=\"Em\")","ae13b2cd":"dataset.head()","511adb12":"dataset[\"Cabin\"].head()","12444d2e":"dataset[\"Cabin\"].describe()","09998f65":"dataset[\"Cabin\"].isnull().sum()","3d4f2c07":"dataset[\"Cabin\"][dataset[\"Cabin\"].notnull()].head()","9f5e4dc4":"# Cabin\uc5d0\uc11c \uacb0\uce21\uac12\uc5d0\ub294 'X'\ub77c\uace0 \ud45c\uc2dc\ndataset[\"Cabin\"] = pd.Series([i[0] if not pd.isnull(i) else 'X' for i in dataset['Cabin'] ])","d12fb089":"g = sns.countplot(dataset[\"Cabin\"],order=['A','B','C','D','E','F','G','T','X'])","0f89a149":"g = sns.factorplot(y=\"Survived\",x=\"Cabin\",data=dataset,kind=\"bar\",order=['A','B','C','D','E','F','G','T','X'])\ng = g.set_ylabels(\"Survival Probability\")","afebf71f":"dataset = pd.get_dummies(dataset, columns = [\"Cabin\"],prefix=\"Cabin\")","630a0553":"dataset[\"Ticket\"].head()","35adf33b":"## Ticket\uc5d0\uc11c \uc811\ub450\uc0ac\ub97c \ucd94\ucd9c(\uc811\ub450\uc0ac\uac00 \uc5c6\uc73c\uba74 X\ub97c \ubc18\ud658)\n\nTicket = []\nfor i in list(dataset.Ticket):\n    if not i.isdigit() :\n        Ticket.append(i.replace(\".\",\"\").replace(\"\/\",\"\").strip().split(' ')[0]) #Take prefix\n    else:\n        Ticket.append(\"X\")\n        \ndataset[\"Ticket\"] = Ticket\ndataset[\"Ticket\"].head()","b1f2205d":"dataset = pd.get_dummies(dataset, columns = [\"Ticket\"], prefix=\"T\")","5a8e5383":"# Pclass\uc5d0 \ub300\ud574 \uce74\ud14c\uace0\ub9ac\ud654\ndataset[\"Pclass\"] = dataset[\"Pclass\"].astype(\"category\")\ndataset = pd.get_dummies(dataset, columns = [\"Pclass\"],prefix=\"Pc\")","2f8505af":"# \uc4f8\ubaa8\uc5c6\ub294 \ubcc0\uc218 \uc81c\uac70 \ndataset.drop(labels = [\"PassengerId\"], axis = 1, inplace = True)","b1c716eb":"dataset.head()","7e5e9cdd":"## \ud6c8\ub828 \ub370\uc774\ud130\uc640 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubd84\ub9ac\n\ntrain = dataset[:train_len]\ntest = dataset[train_len:]\ntest.drop(labels=[\"Survived\"],axis = 1,inplace=True)","26a6d7ee":"## \ud6c8\ub828 \ub370\uc774\ud130\uc5d0\uc11c \ub77c\ubca8 \ubd84\ub9ac\n\ntrain[\"Survived\"] = train[\"Survived\"].astype(int)\nY_train = train[\"Survived\"]\nX_train = train.drop(labels = [\"Survived\"],axis = 1)","86660109":"# K-fold \uad50\ucc28\uac80\uc99d \ubaa8\ub378 \uc791\uc131\nkfold = StratifiedKFold(n_splits=10)","cb13a204":"# Modeling step Test differents algorithms \nrandom_state = 2\nclassifiers = []\nclassifiers.append(SVC(random_state=random_state))\nclassifiers.append(DecisionTreeClassifier(random_state=random_state))\nclassifiers.append(AdaBoostClassifier(DecisionTreeClassifier(random_state=random_state),random_state=random_state,learning_rate=0.1))\nclassifiers.append(RandomForestClassifier(random_state=random_state))\nclassifiers.append(ExtraTreesClassifier(random_state=random_state))\nclassifiers.append(GradientBoostingClassifier(random_state=random_state))\nclassifiers.append(MLPClassifier(random_state=random_state))\nclassifiers.append(KNeighborsClassifier())\nclassifiers.append(LogisticRegression(random_state = random_state))\nclassifiers.append(LinearDiscriminantAnalysis())","e408ade2":"# n_jobs = 2\uc77c \ub54c\ncv_results = []\nfor classifier in classifiers :\n    cv_results.append(cross_val_score(classifier, X_train, y = Y_train, scoring = \"accuracy\", cv = kfold, n_jobs=2))\ncv_means = []\ncv_std = []\nfor cv_result in cv_results:\n    cv_means.append(cv_result.mean())\n    cv_std.append(cv_result.std())\n\ncv_res_2 = pd.DataFrame({\"CrossValMeans\":cv_means,\"CrossValerrors\": cv_std,\"Algorithm\":[\"SVC\",\"DecisionTree\",\"AdaBoost\",\n\"RandomForest\",\"ExtraTrees\",\"GradientBoosting\",\"MultipleLayerPerceptron\",\"KNeighboors\",\"LogisticRegression\",\"LinearDiscriminantAnalysis\"]})\ncv_res_2","7fbe49db":"# n_jobs = 4\uc77c \ub54c\ncv_results = []\nfor classifier in classifiers :\n    cv_results.append(cross_val_score(classifier, X_train, y = Y_train, scoring = \"accuracy\", cv = kfold, n_jobs=4))\ncv_means = []\ncv_std = []\nfor cv_result in cv_results:\n    cv_means.append(cv_result.mean())\n    cv_std.append(cv_result.std())\n\ncv_res_4 = pd.DataFrame({\"CrossValMeans\":cv_means,\"CrossValerrors\": cv_std,\"Algorithm\":[\"SVC\",\"DecisionTree\",\"AdaBoost\",\n\"RandomForest\",\"ExtraTrees\",\"GradientBoosting\",\"MultipleLayerPerceptron\",\"KNeighboors\",\"LogisticRegression\",\"LinearDiscriminantAnalysis\"]})\ncv_res_4","37dffcf2":"cv_res = cv_res_4\ng = sns.barplot(\"CrossValMeans\",\"Algorithm\",data = cv_res, palette=\"Set3\",orient = \"h\",**{'xerr':cv_std})\ng.set_xlabel(\"Mean Accuracy\")\ng = g.set_title(\"Cross validation scores\")","7d381928":"### a. SVC\nSVMC = SVC(probability=True)\nsvc_param_grid = {'kernel': ['rbf'], \n                  'gamma': [ 0.001, 0.01, 0.1, 1],\n                  'C': [1, 10, 50, 100,200,300, 1000]}\ngsSVMC = GridSearchCV(SVMC,param_grid = svc_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsSVMC.fit(X_train,Y_train)\nSVMC_best = gsSVMC.best_estimator_\n# Best score\ngsSVMC.best_score_","3442613a":"### b. Random Forest \nRFC = RandomForestClassifier()\n## Search grid for optimal parameters\nrf_param_grid = {\"max_depth\": [None],\n              \"max_features\": [1, 3, 10],\n              \"min_samples_split\": [2, 3, 10],\n              \"min_samples_leaf\": [1, 3, 10],\n              \"bootstrap\": [False],\n              \"n_estimators\" :[100,300],\n              \"criterion\": [\"gini\"]}\ngsRFC = GridSearchCV(RFC,param_grid = rf_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs=4, verbose = 1)\ngsRFC.fit(X_train,Y_train)\nRFC_best = gsRFC.best_estimator_\n# Best score\ngsRFC.best_score_","33f50942":"### c. Gradient boosting\nGBC = GradientBoostingClassifier()\ngb_param_grid = {'loss' : [\"deviance\"],\n              'n_estimators' : [100,200,300],\n              'learning_rate': [0.1, 0.05, 0.01],\n              'max_depth': [4, 8],\n              'min_samples_leaf': [100,150],\n              'max_features': [0.3, 0.1]}\ngsGBC = GridSearchCV(GBC,param_grid = gb_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsGBC.fit(X_train,Y_train)\nGBC_best = gsGBC.best_estimator_\n# Best score\ngsGBC.best_score_","660447c8":"### d-1. Extra Trees \nExtC = ExtraTreesClassifier()\n## Search grid for optimal parameters\nex_param_grid = {\"max_depth\": [None],\n              \"max_features\": [1, 3, 10],\n              \"min_samples_split\": [2, 3, 10],\n              \"min_samples_leaf\": [1, 3, 10],\n              \"bootstrap\": [False],\n              \"n_estimators\" :[100,300],\n              \"criterion\": [\"gini\"]}\ngsExtC = GridSearchCV(ExtC,param_grid = ex_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs=4, verbose = 1)\ngsExtC.fit(X_train,Y_train)\nExtC_best = gsExtC.best_estimator_\n# Best score\ngsExtC.best_score_","0bcb2ef6":"### d-2. Adaboost\nDTC = DecisionTreeClassifier()\nadaDTC = AdaBoostClassifier(DTC, random_state=7)\nada_param_grid = {\"base_estimator__criterion\" : [\"gini\", \"entropy\"],\n              \"base_estimator__splitter\" :   [\"best\", \"random\"],\n              \"algorithm\" : [\"SAMME\",\"SAMME.R\"],\n              \"n_estimators\" :[1,2],\n              \"learning_rate\":  [0.0001, 0.001, 0.01, 0.1, 0.2, 0.3,1.5]}\ngsadaDTC = GridSearchCV(adaDTC,param_grid = ada_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsadaDTC.fit(X_train,Y_train)\nada_best = gsadaDTC.best_estimator_\n# best score\ngsadaDTC.best_score_","2ecde7d1":"### e-1. Logistic Regression\nLRC = LogisticRegression()\nlr_param_grid = {'penalty': ['l1','l2'],\n                 'C': np.logspace(0, 4, 10),\n                 'solver' : ['liblinear']}\ngsLRC = GridSearchCV(LRC, param_grid = lr_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsLRC.fit(X_train,Y_train)\ngsLRC_best = gsLRC.best_estimator_\n# Best score\ngsLRC.best_score_","cde997b9":"def plot_learning_curve(estimator, title, X, y, ylim=None, cv=None,\n                        n_jobs=-1, train_sizes=np.linspace(.1, 1.0, 5)):\n    \"\"\"\ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubc0f \ud559\uc2b5 \ub370\uc774\ud130 \uace1\uc120\uc758 \uac04\ub2e8\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\"\"\"\n    plt.figure()\n    plt.title(title)\n    if ylim is not None:\n        plt.ylim(*ylim)\n    plt.xlabel(\"Training examples\")\n    plt.ylabel(\"Score\")\n    train_sizes, train_scores, test_scores = learning_curve(\n        estimator, X, y, cv=cv, n_jobs=n_jobs, train_sizes=train_sizes)\n    train_scores_mean = np.mean(train_scores, axis=1)\n    train_scores_std = np.std(train_scores, axis=1)\n    test_scores_mean = np.mean(test_scores, axis=1)\n    test_scores_std = np.std(test_scores, axis=1)\n    plt.grid()\n\n    plt.fill_between(train_sizes, train_scores_mean - train_scores_std,\n                     train_scores_mean + train_scores_std, alpha=0.1,\n                     color=\"r\")\n    plt.fill_between(train_sizes, test_scores_mean - test_scores_std,\n                     test_scores_mean + test_scores_std, alpha=0.1, color=\"g\")\n    plt.plot(train_sizes, train_scores_mean, 'o-', color=\"r\",\n             label=\"Training score\")\n    plt.plot(train_sizes, test_scores_mean, 'o-', color=\"g\",\n             label=\"Cross-validation score\")\n\n    plt.legend(loc=\"best\")\n    return plt","45276573":"g = plot_learning_curve(gsSVMC.best_estimator_,\"SVC learning curves\",X_train,Y_train,cv=kfold)\ng = plot_learning_curve(gsRFC.best_estimator_,\"RF mearning curves\",X_train,Y_train,cv=kfold)\ng = plot_learning_curve(gsGBC.best_estimator_,\"GradientBoosting learning curves\",X_train,Y_train,cv=kfold)\ng = plot_learning_curve(gsExtC.best_estimator_,\"ExtraTrees learning curves\",X_train,Y_train,cv=kfold)\ng = plot_learning_curve(gsadaDTC.best_estimator_,\"AdaBoost learning curves\",X_train,Y_train,cv=kfold)\ng = plot_learning_curve(gsLRC.best_estimator_,\"Linear Regression curves\",X_train,Y_train,cv=kfold)","7bd0e281":"nrows = ncols = 2\nfig, axes = plt.subplots(nrows = nrows, ncols = ncols, sharex=\"all\", figsize=(15,15))\nnames_classifiers = [(\"RandomForest\",RFC_best),(\"GradientBoosting\",GBC_best),\n                     (\"ExtraTrees\",ExtC_best),(\"AdaBoosting\",ada_best)]\nnclassifier = 0\nfor row in range(nrows):\n    for col in range(ncols):\n        name = names_classifiers[nclassifier][0]\n        classifier = names_classifiers[nclassifier][1]\n        indices = np.argsort(classifier.feature_importances_)[::-1][:40]\n        g = sns.barplot(y=X_train.columns[indices][:40],x = classifier.feature_importances_[indices][:40] , orient='h',ax=axes[row][col])\n        g.set_xlabel(\"Relative importance\",fontsize=12)\n        g.set_ylabel(\"Features\",fontsize=12)\n        g.tick_params(labelsize=9)\n        g.set_title(name + \" feature importance\")\n        nclassifier += 1","37f96051":"test_Survived_SVMC = pd.Series(SVMC_best.predict(test), name=\"SVC\")\ntest_Survived_RFC = pd.Series(RFC_best.predict(test), name=\"RFC\")\ntest_Survived_GBC = pd.Series(GBC_best.predict(test), name=\"GBC\")\ntest_Survived_ExtC = pd.Series(ExtC_best.predict(test), name=\"ExtC\")\ntest_Survived_AdaC = pd.Series(ada_best.predict(test), name=\"Ada\")\ntest_Survived_LRC = pd.Series(gsLRC_best.predict(test), name=\"LRC\")\n\n# Concatenate all classifier results\nensemble_results = pd.concat([test_Survived_SVMC,test_Survived_RFC,test_Survived_GBC,\n                              test_Survived_ExtC,test_Survived_AdaC,test_Survived_LRC],axis=1)\ng= sns.heatmap(ensemble_results.corr(),annot=True)","8e193255":"votingC = VotingClassifier(estimators=[('svc',SVMC_best),('rfc',RFC_best),('gbc',GBC_best),\n                                       ('extc',ExtC_best),('adac',ada_best),('LRC', gsLRC_best)],\n                           voting='soft', n_jobs=4)\nvotingC = votingC.fit(X_train, Y_train)","12c379a3":"test_Survived = pd.Series(votingC.predict(test), name=\"Survived\")\nresults = pd.concat([IDtest,test_Survived],axis=1)\nresults.to_csv(\"ensemble_python_voting.csv\",index=False)","e0dcbeef":"n_jobs \uc778\uc218\ub294 CPU \ucf54\uc5b4 \uc218\uc5d0 \ub530\ub77c \uc18d\ub3c4\uac00 \ubc14\ub01d\ub2c8\ub2e4.<br>\n\uadf8\ub7f0\ub370 \ubcf8\uc778\uc758 CPU \ucf54\uc5b4 \uc218\uac00 2\ub77c\uba74 2\uc5d0 \ub9de\ucd94\ub294 \uac83\ubcf4\ub2e8 \uadf8\ub0e5 \uc801\uc808\ud55c \uac12\uc778 4\ub85c \ub9de\ucd94\ub294\uac8c \uc88b\uc544\ubcf4\uc785\ub2c8\ub2e4.","256c2739":"\ud615\uc81c\uc790\ub9e4\uac00 \ub9ce\uc740 \uc2b9\uac1d\ub4e4\uc740 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \uc801\uc740 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n1\uc778\uc2b9(SibSp : 0) \ub610\ub294 2\uc778\uc2b9(SibSp : 1 or 2)\uc774 \uc0dd\uc874\ud560 \uc218 \uc788\ub294 \uae30\ud68c\uac00 \ub354 \ub9ce\uc740 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc774 \uad00\ucc30\uc740 \ub9e4\uc6b0 \ud765\ubbf8\ub85c\uc6b4\ub370, \uc6b0\ub9ac\ub294 \uc774\ub7ec\ud55c \ubc94\uc8fc\ub97c \uc124\uba85\ud558\ub294 \uc0c8\ub85c\uc6b4 \ud2b9\uc9d5\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","e35a69c7":"- Embarked","67a5243d":"\uc0c1\uad00 \uad00\uacc4 \ud589\ub82c\uc740 Parch\ub97c \uc81c\uc678\ud55c \uc694\uc778 \uadf8\ub9bc \uad00\uce21\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.\n\nAge\ub294 Sex\uc640\ub294 \uc0c1\uad00\uad00\uacc4\uac00 \uc5c6\uc9c0\ub9cc Pclass, Parch, SibSp \ub4f1\uacfc \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\nParch\uc5d0\uc11c\uc758 Age \uadf8\ub798\ud504\uc5d0\uc11c, \ub098\uc774\ub294 \ubd80\ubaa8\/\uc790\uc2dd\uc758 \uc218\uc5d0 \ub530\ub77c \uc131\uc7a5\ud558\uace0 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc77c\ubc18\uc801\uc73c\ub85c \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\uc5d0 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uadf8\ub798\uc11c \uc800\uc790\ub294 Age\uc758 \uacb0\uce21\uac12\uc744 \ucc44\uc6b0\uae30 \uc704\ud574 SibSP, Parch, Pclass\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \ud569\ub2c8\ub2e4.<br>\nPclass, Parch, Sibsp\uc5d0 \ub530\ub77c Age\ub97c \uc720\uc0ac\ud55c \ud589\uc758 \uc911\uc704 \uc5f0\ub839\uc73c\ub85c \ucc44\uc6b0\ub294 \uc804\ub7b5\uc785\ub2c8\ub2e4.","fbe7a040":"- Pclass","04cfaa98":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"12\"><\/a> <br>\n### 5.4 Ticket","f7bedd5f":"[\ubaa9\ucc28\ub85c](#0)\n\n------------------------------------------------------------------------------------------------\n<a id=\"9\"><\/a> <br>\n## 5. Feature engineering\n### 5.1 Name\/Title","42544378":"<\uc800\uc790 \uc785\uc7a5><br>\nGradientBoosting\uacfc Adaboost \ubd84\ub958\uae30\ub294 \ud6c8\ub828 \ub370\uc774\ud130\uc5d0 \uc9c0\ub098\uce58\uac8c \ub9de\ub294 \uacbd\ud5a5\uc774 \uc788\uc2b5\ub2c8\ub2e4.<br>\n\uad50\ucc28 \uac80\uc99d \uace1\uc120\uc774 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c GradientBoosting\uacfc Adaboost\ub294 \ub354 \ub9ce\uc740 \ud6c8\ub828 \ub370\uc774\ud130\ub85c \ub354 \ub098\uc740 \uc131\uacfc\ub97c \ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br>\nSVC\uc640 ExtraTree \ubd84\ub958\uae30\ub294 \ud6c8\ub828 \uace1\uc120\uacfc \uad50\ucc28 \uac80\uc99d \uace1\uc120\uc774 \uc11c\ub85c \uac00\uae5d\uae30 \ub54c\ubb38\uc5d0 \uc608\uce21\uc744 \ub354 \uc798 \uc77c\ubc18\ud654\ud558\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n<\ubcf8\uc778 \uc785\uc7a5><br>\nGradientBoosting\uacfc Extra Trees \ubd84\ub958\uae30\uac00 \ud6c8\ub828 \ub370\uc774\ud130\uc5d0 \uc9c0\ub098\uce58\uac8c \ub9de\ub294 \uacbd\ud5a5\uc774 \uc788\uc2b5\ub2c8\ub2e4.<br>\n\uad50\ucc28 \uac80\uc99d \uace1\uc120\uc774 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c \ub450 \ubd84\ub958\uae30\ub294 \ub354 \ub9ce\uc740 \ud6c8\ub828 \ub370\uc774\ud130\ub85c \ub354 \ub098\uc740 \uc131\uacfc\ub97c \ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br>\n\ubc18\uba74 Adaboost\ub294 \uad50\ucc28 \uac80\uc99d \uace1\uc120\uacfc \ud6c8\ub828 \uace1\uc120\uc774 \ud070 \ucc28\uc774\ub97c \ubcf4\uc774\uace0 \uc788\uc2b5\ub2c8\ub2e4.","0dab5dbb":"\"\uc5ec\uc790\uc640 \uc544\uc774 \uba3c\uc800!\" \n\n\ud76c\uadc0\ud55c \uc9c1\ud568\uc744 \uac00\uc9c4 \uc2b9\uac1d\ub4e4\uc774 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \ub354 \ub9ce\ub2e4\ub294 \uac83\uc740 \ud765\ubbf8\ub86d\uc2b5\ub2c8\ub2e4.","ed7d69a4":"Cabin \uc5f4\uc5d0\ub294 292\uac1c\uc758 \uac12\uacfc 1007\uac1c\uc758 \uacb0\uce21\uac12\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc800\uc790\ub294 \uc120\uc2e4\uc774 \uc5c6\ub294 \uc2b9\uac1d\ub4e4\uc740 \uc120\uc2e4 \ubc88\ud638 \ub300\uc2e0 \ub204\ub77d\ub41c \uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.","fbc3758d":"\ub450 \uac1c\uc758 \ub204\ub77d\ub41c \uac12\uc744 \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, Embarked\uc758 \ucd5c\ube48\uac12\uc778 'S'\ub97c \ucc44\uc6b0\uae30\ub85c \uacb0\uc815\ud588\uc2b5\ub2c8\ub2e4.","ef0712e8":"Age\uc640 Cabin\uc740 \ub204\ub77d\ub41c \uac12\uc758 \uc911\uc694\ud55c \ubd80\ubd84\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n\n**\uc0dd\uc874 \ub204\ub77d \uac12\uc740 \uacb0\ud569 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc138\ud2b8\uc5d0 \ud574\ub2f9\ub428(\uc0dd\uc874 \uc5f4\uc740 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\uba70, \ud6c8\ub828 \ubc0f \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \uc5f0\uacb0\ud560 \ub54c NaN \uac12\uc73c\ub85c \ub300\uccb4\ub428)**","aae35881":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"11\"><\/a> <br>\n### 5.3 Cabin","0a7b4759":"\uc800\uc790\ub294 \uc559\uc0c1\ube14 \ubaa8\ub378\ub9c1\uc744 \uc704\ud574 SVC, AdaBoost, RandomForest, ExtraTrees, GradientBoosting \ubd84\ub958\uae30\ub97c \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4\ub9cc,<br>\n\ubcf8\uc778\uc740 SVC, GradientBoosting, RandomForest, LogisticRegression, LinearDiscriminantAnalysis\ub97c \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4.","46bc25a6":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"7\"><\/a> <br>\n### 3.2 \uce74\ud14c\uace0\ub9ac \uac12 \ubd84\uc11d\n- Sex","94e0a52a":"<a id=\"15\"><\/a> <br>\n#### 6.1.2 \ucd5c\uace0\uc758 \ubaa8\ub378\uc5d0 \ub300\ud55c \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd\n\n\ubcf8\uc778\uc740 \uc704 \ub2e4\uc12f \ubd84\ub958\uae30\uc5d0 \ub300\ud55c \uadf8\ub9ac\ub4dc \uac80\uc0c9 \ucd5c\uc801\ud654\ub97c \uc218\ud589\ud560 \uac83\uc785\ub2c8\ub2e4.(\uc800\uc790\uc640\uc758 \ube44\uad50\ub3c4 \ud560 \uac83\uc785\ub2c8\ub2e4.)\n\n\uc774\ub54c \"n_jobs\" \ub9e4\uac1c \ubcc0\uc218\ub294 4\ub85c \uc124\uc815\ud560\uac74\ub370, \uc800\uc790\ub294 4\uac1c\uc758 CPU\ub97c, \uc800\ub294 2\uac1c\uc758 CPU\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n\uc774\ub97c \uc801\uc808\ud788 \uc870\uc808\ud558\uba74 \uacc4\uc0b0 \uc2dc\uac04\uc774 \ubd84\uba85\ud788 \ub2e8\ucd95\ub420 \uac83\uc785\ub2c8\ub2e4.\n\n\ud558\uc9c0\ub9cc \uc774 \ub2e8\uacc4\ub294 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc800\uc790\ub294 \ucd1d 4\uac1c\uc758 cpu\uc5d0 15\ubd84\uc774 \uac78\ub838\ub2e4\uace0 \ud569\ub2c8\ub2e4.\n\n\uc800\uc790\uc640 \ubcf8\uc778\uc740 \uacf5\ud1b5\uc801\uc73c\ub85c SVC, RandomForest, GradientBoosting\uc774 \uc788\uc73c\uba70\n\uc800\uc790\ub294 ExtraTrees, AdaBoost \/ \ubcf8\uc778\uc740 LogisticRegression, LinearDiscriminantAnalysis\ub97c \ubcc4\ub3c4\ub85c \uc120\ud0dd\ud569\ub2c8\ub2e4.\n\na. SVC<br>\nb. Random Forest<br>\nc. Gradient Boosting<br>\nd-1. Extra Trees<br>\nd-2. AdaBoost<br>\ne-1. Logistic Regression<br>\ne-2. Linear Discriminant Analysis","ebae0a17":"\uc18c\uac00\uc871\uc740 \ub2e8\uc77c(Parch : 0), \uc911\uac04(Parch : 3 or 4) \ubc0f \ub300\uac00\uc871(Parch : 5 or 6)\ubcf4\ub2e4 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \ub354 \ub9ce\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n3\uba85\uc758 \ubd80\ubaa8\/\uc790\ub140\uac00 \uc788\ub294 \uc2b9\uac1d\uc758 \uc0dd\uc874\uc5d0 \uc911\uc694\ud55c \ud45c\uc900 \ud3b8\ucc28\uac00 \uc788\uc74c\uc744 \uc8fc\uc758\ud574\uc57c \ud569\ub2c8\ub2e4.","bd0db871":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"10\"><\/a> <br>\n### 5.2 Family size\n\n\ub300\uac00\uc871\uc774 \ub300\ud53c\ud558\ub294 \ub3d9\uc548 \uc790\ub9e4\/\ud615\uc81c\/\ubd80\ubaa8\ub4e4\uc744 \ucc3e\uc544 \ub300\ud53c\ud558\ub294 \ub370 \ub354 \ub9ce\uc740 \uc5b4\ub824\uc6c0\uc744 \uacaa\uc744 \uac83\uc774\ub77c\uace0 \uc0c1\uc0c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br>\n\uadf8\ub798\uc11c SibSp+Parch+1(\uc2b9\uac1d \ud3ec\ud568)\uc744 \uc758\ubbf8\ud558\ub294 \"Fsize\"(Family size)\uc744 \ub9cc\ub4ed\ub2c8\ub2e4.","91dde1f5":"Age \ubd84\ud3ec\ub294 \ub0a8\uc131\uacfc \uc5ec\uc131\uc758 \ud558\uc704 \ubaa8\uc9d1\ub2e8\uc5d0\uc11c \ub3d9\uc77c\ud55c \uac83\uc73c\ub85c \ubcf4\uc5ec, Sex\uac00 Age\ub97c \uc608\uce21\ud558\ub294 \ub370 \uc720\uc6a9\ud558\uc9c0 \uc54a\uc544 \ubcf4\uc785\ub2c8\ub2e4.\n\n\uadf8\ub7ec\ub098 1\ub4f1 \uc2b9\uac1d\uc740 3\ub4f1 \uc2b9\uac1d\ubcf4\ub2e4 \ub098\uc774\uac00 \ub9ce\uc740 2\ub4f1 \uc2b9\uac1d\ubcf4\ub2e4\ub3c4 \ub098\uc774\uac00 \ub9ce\uc2b5\ub2c8\ub2e4.\n\n\uac8c\ub2e4\uac00, \ub098\uc774\uac00 \ub9ce\uc744\uc218\ub85d \ubd80\ubaa8\/\uc790\uc2dd\uc774 \ub9ce\uace0, \ud615\uc81c\/\uc790\ub9e4\uac00 \ub9ce\uc744\uc218\ub85d \uc80a\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","81680ff7":"\uc800\uc790 \ub9d0 : \ub9cc\uc57d \ub2f9\uc2e0\uc774 \uc774 \uacf5\ucc45\uc744 \uc720\uc6a9\ud558\ub2e4\uace0 \uc0dd\uac01\ud558\uac70\ub098 \uc88b\uc544\ud55c\ub2e4\uba74, \uba87\uba87 \ud22c\ud45c\uc790\ub4e4\uc740 \ub9e4\uc6b0 \uac10\uc0ac\ud560 \uac83\uc774\uace0, \ub098\uc5d0\uac8c\ub3c4 \ub3d9\uae30\ubd80\uc5ec\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. :)","03fe3a91":"[\ubaa9\ucc28\ub85c](#0)\n\n------------------------------------------------------------------------------------------------\n<a id=\"8\"><\/a> <br>\n## 4. \uacb0\uce21\uce58 \ucc44\uc6b0\uae30\n### 4.1 Age\n\nAge \uc5f4\uc5d0\ub294 \uc804\uccb4 \ub370\uc774\ud130\uc14b \uc911 256\uac1c\uc758 \uacb0\uce21\uac12\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc0dd\uc874 \uac00\ub2a5\uc131\uc774 \ub354 \ub9ce\uc740 \ud558\uc704 \uc778\uad6c(\uc608\ub97c \ub4e4\uc5b4 \uc5b4\ub9b0\uc774)\uac00 \uc788\uae30 \ub54c\ubb38\uc5d0,<br>\n\uc5f0\ub839 \ud2b9\uc131\uc744 \uc720\uc9c0\ud558\uace0 \ub204\ub77d\ub41c \uac12\uc744 \uadc0\uc18d\uc2dc\ud0a4\ub294 \uac83\uc774 \ubc14\ub78c\uc9c1\ud569\ub2c8\ub2e4.\n\n\uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574, \uc800\uc790\ub294 Age\uc640 \uac00\uc7a5 \uc0c1\uad00\uad00\uacc4\uac00 \uc788\ub294 \ubcc0\uc218\ub4e4(Sex, Parch , Pclass, SibSP)\uc744 \uc0b4\ud3b4\ubcf4\uc558\uc2b5\ub2c8\ub2e4.","774704a8":"- SibSp","952339fa":"\ub0a8\uc790\uac00 \uc5ec\uc790\ubcf4\ub2e4 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \uc801\ub2e4\ub294 \uac83\uc740 \uba85\ubc31\ud574 \ubcf4\uc785\ub2c8\ub2e4.<br>\n\uadf8\ub798\uc11c Sex\ub294 \uc0dd\uc874\uc744 \uc608\uce21\ud558\ub294 \ub370 \uc911\uc694\ud55c \uc5ed\ud560\uc744 \ud560\uc9c0\ub3c4 \ubaa8\ub985\ub2c8\ub2e4.\n\n\ud0c0\uc774\ud0c0\ub2c9 \uc601\ud654(1997\ub144)\ub97c \ubcf8 \uc0ac\ub78c\ub4e4\uc774\ub77c\uba74 \uc774 \ubb38\uc7a5\uc744 \uae30\uc5b5\ud560 \uac83\uc785\ub2c8\ub2e4.\n\n\"\uc5ec\uc790\uc640 \uc544\uc774\ub4e4 \uba3c\uc800!\"","5e7c1f68":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"3\"><\/a> <br>\n### 2.2 \uc774\uc0c1 \ud0d0\uc9c0","e75e7b37":"\uc120\uc2e4\uc758 \uccab \ubc88\uc9f8 \uae00\uc790\ub294 Desk\ub97c \uac00\ub9ac\ud0a4\uba70, \ub098\ub294 \ud0c0\uc774\ud0c0\ub2c9\uc5d0 \ud0d1\uc2b9\ud55c \uc2b9\uac1d\uc758 \uc704\uce58\ub97c \ud45c\uc2dc\ud558\uae30 \ub54c\ubb38\uc5d0 \uc774 \uc815\ubcf4\ub9cc\uc744 \ubcf4\uad00\ud558\ub3c4\ub85d \uc120\ud0dd\ud569\ub2c8\ub2e4.","e0df048a":"[\ubaa9\ucc28\ub85c](#0)\n\n------------------------------------------------------------------------------------------------\n<a id=\"1\"><\/a> <br>\n# 1. \uc18c\uac1c\n\nYassine Ghouzam, PhD\uac00 \ucc98\uc74c \uc791\uc131\ud558\ub294 \ucee4\ub110\uc774\uba70, \ubcf8\uc778\uc774 3\ubc88\uc9f8 \ubc88\uc5ed\ud55c \ucee4\ub110\uc785\ub2c8\ub2e4.<br>\n\uc800\uc790\ub294 feature engineering\uacfc ensemble modeling\uc744 \uc18c\uac1c\ud558\ub294 \uc88b\uc740 \ubc29\ubc95\uc778 \ud0c0\uc774\ud0c0\ub2c9 \ub300\ud68c\ub97c \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\n\uba3c\uc800, feature engineering\uc5d0 \uc798\ubabb \ucd08\uc810\uc744 \ub9de\ucd98 \uba87 \uac00\uc9c0 feature analysis\ub97c \ud45c\uc2dc\ud560 \uac83\uc785\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 \ubd80\ubd84\uc740 \ud22c\ud45c \uc808\ucc28\ub97c \uc774\uc6a9\ud558\uc5ec \ud0c0\uc774\ud0c0\ub2c9\uc758 \uc0dd\uc874\uc744 \ubaa8\ub378\ub9c1\ud558\uace0 \uc608\uce21\ud558\ub294 \uac83\uc5d0 \uad00\ud55c \uac83\uc785\ub2c8\ub2e4.\n\n\uc774 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc138 \uac00\uc9c0 \uc8fc\uc694 \ubd80\ubd84\uc744 \ub530\ub985\ub2c8\ub2e4.\n\n- feature analysis\n- feature engineering\n- modeling","ed39841d":"\ub370\uc774\ud130\uc14b\uc5d0\ub294 17\uac1c\uc758 Title\uc774 \uc788\ub294\ub370, \ub300\ubd80\ubd84\uc740 \ub9e4\uc6b0 \ub4dc\ubb3c\uba70 \uc6b0\ub9ac\ub294 4\uac1c\uc758 \ubc94\uc8fc\ub85c \ubd84\ub958\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","cd3778d6":"Age \ubd84\ud3ec\ub294 \uaf2c\ub9ac\ub97c \uac00\uc9c4 \ubd84\ud3ec, \uc5b4\uca4c\uba74 \uac00\uc6b0\uc2a4 \ubd84\ud3ec\uc778 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n\uc6b0\ub9ac\ub294 Age \ubd84\ud3ec\uac00 \uc0dd\uc874 \uc778\uad6c\uc5d0\uc11c \uac19\uc9c0 \uc54a\uace0 \uc0dd\uc874 \ud558\uc704 \uc778\uad6c\uc5d0\uc11c\ub3c4 \ub3d9\uc77c\ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \uc54c\uc544\ucc58\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c\ub85c, \uc80a\uc740 \uc2b9\uac1d\ub4e4\uc5d0 \ub300\ud55c \ubd09\uc6b0\ub9ac\uac00 \uc788\ub294\ub370, \uc774\ub4e4\uc740 \uc0b4\uc544\ub0a8\uc558\uc2b5\ub2c8\ub2e4. \ub610\ud55c 60-80\uc138 \uc0ac\uc774\uc758 \uc2b9\uac1d\ub4e4\uc774 \ub35c \uc0b4\uc544\ub0a8\uc558\ub2e4\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\ub530\ub77c\uc11c, \"Age\"\uac00 \"Survived\"\uc640 \uc0c1\uad00\uad00\uacc4\uac00 \uc5c6\ub2e4\uace0 \ud574\ub3c4, \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \uac70\uc758 \uc5c6\ub294 \uc2b9\uac1d\uc758 \uc5f0\ub839 \ubc94\uc8fc\uac00 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\ubcc4\ub3c4\ub85c \uc544\uc8fc \uc5b4\ub9b0 \uc2b9\uac1d\ub4e4\uc774 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \ub354 \ub9ce\uc740 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","bfba021c":"\ub85c\uadf8 \ubcc0\ud658 \ud6c4 \uc65c\ub3c4\uac00 \ud655\uc2e4\ud788 \uac10\uc18c\ub418\uc5c8\uc2b5\ub2c8\ub2e4.","395d8f9e":"<a id=\"16\"><\/a> <br>\n#### 6.1.3 Plot learning curves\n\n\ud559\uc2b5 \uace1\uc120\uc740 \ud6c8\ub828 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc624\ubc84\ud54f \ud6a8\uacfc\uc640 \ud6c8\ub828 \ud06c\uae30\uac00 \uc815\ud655\ub3c4\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4.","2520a3e4":"- Parch","123a477c":"4\uac1c\uc758 \ud2b8\ub9ac \uae30\ubc18 \ubd84\ub958\uae30(Adaboost, ExtraTree, RandomForest \ubc0f GradientBoosting)\uc5d0 \ub300\ud55c \ud2b9\uc9d5\uc801 \uc911\uc694\ub3c4\ub97c \ud45c\uc2dc\ud588\uc2b5\ub2c8\ub2e4.\n\n\uc6b0\ub9ac\ub294 \uc774 \ub124 \uac00\uc9c0 \ubd84\ub958\uae30\uac00 \uc0c1\ub300\uc801 \uc911\uc694\ub3c4\uc5d0 \ub530\ub77c \uc0c1\uc774\ud55c \ucd5c\uc0c1\uc704 \ud2b9\uc9d5\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc8fc\ubaa9\ud574\uc57c \ud569\ub2c8\ub2e4.<br>\n\uadf8\ub4e4\uc758 \uc608\uce21\uc774 \uac19\uc740 \ud2b9\uc9d5\uc5d0 \uadfc\uac70\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0, \uadf8\ub4e4\uc740 \ubd84\ub958\ub97c \uc704\ud55c \uba87 \uac00\uc9c0 \uacf5\ud1b5\uc801\uc778 \uc911\uc694\ud55c \ubcc0\uc218('Fare', 'Title_2', 'Age', 'Sex')\ub4e4\uc744 \uacf5\uc720\ud569\ub2c8\ub2e4.\n\nTitle_2 \ub294 Mrs\/Mlle\/Mme\/Miss\/Ms \ubc94\uc8fc\ub97c \ub098\ud0c0\ub0b4\ub294 \uac83\uc73c\ub85c Sex\uc640 \ub9e4\uc6b0 \uad00\ub828\uc774 \uae4a\uc2b5\ub2c8\ub2e4.\n\n\uc6b0\ub9ac\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ub9d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n- Pc_1, Pc_2, Pc_3 \ubc0f Fare\ub294 \uc2b9\uac1d\uc758 \uc77c\ubc18\uc801\uc778 \uc0ac\ud68c\uc801 \uc9c0\uc704\ub97c \ub9d0\ud569\ub2c8\ub2e4.\n\n- Sex, Title_2(Mrs\/Mlle\/Mme\/Miss\/Ms), Title_3(Mr)\uc740 \uc131\ubcc4\uc744 \uac00\ub9ac\ud0b5\ub2c8\ub2e4.\n\n- Age, Title_1(Master)\uc740 \uc2b9\uac1d\uc758 \ub098\uc774\ub97c \ub9d0\ud569\ub2c8\ub2e4.\n\n- Fsize, LargeF, MedF, Single\uc740 \uc2b9\uac1d\uc758 \uac00\uc871\uc758 \ud06c\uae30\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4.\n\n**\uc774 4\uac00\uc9c0 \ubd84\ub958\uc790\uc758 \ud2b9\uc9d5\uc801 \uc911\uc694\ub3c4\uc5d0 \ub530\ub77c \uc0dd\uc874\uc758 \uc608\uce21\uc740 \ubc30 \uc548\uc758 \uc704\uce58\ubcf4\ub2e4 \uc2b9\uac1d\ub4e4\uc758 \uc5f0\ub839, \uc131\ubcc4, \uac00\uc871 \uaddc\ubaa8, \uc0ac\ud68c\uc801 \uc9c0\uc704\uc640 \ub354 \uad00\ub828\uc774 \uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uc785\ub2c8\ub2e4.**","b22e9d3f":"[\ubaa9\ucc28\ub85c](#0)\n\n------------------------------------------------------------------------------------------------\n<a id=\"6\"><\/a> <br>\n## 3. \ubcc0\uc218 \ubd84\uc11d\n### 3.1 \uc218\uce58\uac12 \ubd84\uc11d","6dbccfe2":"\uccb4\ub974\ubd80\ub974(Cherbourg)\uc5d0\uc11c \uc624\ub294 \uc2b9\uac1d\uc740 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \ub354 \ub9ce\uc740 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n\uc800\uc790 \uc0dd\uac01\uc5d0, 1\ub4f1 \uc2b9\uac1d\uc758 \ube44\uc728\uc774 \ud038\uc2a4\ud0c0\uc6b4(Q), \uc0ac\uc6b0\uc0d8\ud504\ud134(S)\ubcf4\ub2e4 \uccb4\ub974\ubd80\ub974(C)\uc5d0\uc11c \uc628 \uc2b9\uac1d\uc758 \ube44\uc728\uc774 \ub354 \ub192\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.\n\nPclass\uc640 Embarked\uc758 \ubd84\ud3ec\ub97c \ubd05\uc2dc\ub2e4.","cd5d54d5":"\ubcf8\uc778 \ucef4\ud4e8\ud130 \uae30\uc900\uc73c\ub85c \uc694\uc57d\ud558\uc790\uba74,<br>\na. SVC : 0.8331441543700341, \uc57d 46\ucd08 \uc18c\uc694<br>\nb. Random Forest : 0.8365493757094211, \uc57d 1\ubd84 42\ucd08 \uc18c\uc694<br>\nc. Gradient Boosting : 0.8331441543700341, \uc57d 51\ucd08 \uc18c\uc694<br>\nd-1. Extra Trees : 0.8308740068104427, \uc57d 1\ubd84 30\ucd08 \uc18c\uc694<br>\nd-2. AdaBoost : 0.8240635641316686, \uc57d 11\ucd08 \uc18c\uc694<br>\ne-1. Logistic Regression : 0.8286038592508513, \uc57d 6\ucd08 \uc18c\uc694<br>\ne-2. Linear Discriminant Analysis : x","fba0367e":"-----------------------------------------------------------------------------------------------------------\n<a id=\"0\"><\/a> <br>\n# \ubaa9\ucc28\n1. [\uc18c\uac1c](#1)\n<br><br>\n1. [\ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \ud655\uc778](#2)\n    1. [\ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30](#2)\n    1. [\uc774\uc0c1 \ud0d0\uc9c0](#3)\n    1. [\ud6c8\ub828 \ub370\uc774\ud130 \ubc0f \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubd99\uc774\uae30](#4)\n    1. [\uacb0\uce21\uac12 \ubc0f Null\uac12 \ucc3e\uc544\ub0b4\uae30](#5)\n<br><br>\n1. [\ubcc0\uc218 \ubd84\uc11d](#6)\n    1. [\uc218\uce58\uac12 \ubd84\uc11d](#6)\n    1. [\uce74\ud14c\uace0\ub9ac\uac12 \ubd84\uc11d](#7)\n<br><br>\n1. [\uacb0\uce21\uce58 \ucc44\uc6b0\uae30](#8)\n    1. [Age](#8)\n<br><br>\n1. [Feature engineering](#9)\n    1. [Name\/Title](#9)\n    1. [Family Size](#10)\n    1. [Cabin](#11)\n    1. [Ticket](#12)\n<br><br>\n1. [\ubaa8\ub378 \uc0dd\uc131](#13)\n    1. [Simple modeling](#14)\n        * [6.1.1 \uad50\ucc28 \uac80\uc99d \ubaa8\ub378](#14)\n        * [6.1.2 \ucd5c\uace0\uc758 \ubaa8\ub378\uc5d0 \ub300\ud55c \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd](#15)\n        * [6.1.3 Plot learning curves](#16)\n        * [6.1.4 Feature importance of the tree based classifiers](#17)\n    1. [Ensemble modeling](#18)\n        * [6.2.1 Combining models](#18)\n    1. [Prediction](#19)\n        * [6.3.1 Predict and Submit results](#19)","e0ec221d":"# <div align=\"center\">Level 1. Titanic: Machine Learning form Disaster<\/div>\n## <div align=\"center\">3. Titanic Top 4% with ensemble modeling<\/div>\n### <div align=\"center\"> \uc81c\uc791\uc790 : \uae40\uaddc\ub3d9 <\/div>\n### <div align=\"center\"> \uc81c\uc791 \uc2dc\uc791 : 2020. 1. 14. 20:00 PM <br> \ucd5c\uc885 \uc218\uc815 : 2019. 1. 15. 00:30 AM<\/div>","702b84c1":"\uc120\uc2e4\uc774 \uc788\ub294 \uc2b9\uac1d\uc758 \uc218\uac00 \uc801\uae30 \ub54c\ubb38\uc5d0 \uc0dd\uc874 \ud655\ub960\uc740 \uc911\uc694\ud55c \ud45c\uc900 \ud3b8\ucc28\ub97c \uac00\uc9c0\uace0 \uc788\uace0, \uc6b0\ub9ac\ub294 \ub2e4\ub978 Desk\uc5d0 \uc788\ub294 \uc2b9\uac1d\uc758 \uc0dd\uc874 \ud655\ub960\uc744 \uad6c\ubcc4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\n\uadf8\ub7ec\ub098 \uc6b0\ub9ac\ub294 \uc120\uc2e4\uc744 \uac00\uc9c4 \uc2b9\uac1d\ub4e4\uc774 \uc120\uc2e4\uc774 \uc5c6\ub294(X) \uc2b9\uac1d\ub4e4\ubcf4\ub2e4 \uc77c\ubc18\uc801\uc73c\ub85c \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \ub354 \ub9ce\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.(\ud2b9\ud788 B, C, D, E, F\uc758 \uacbd\uc6b0)","01116023":"\uc694\uae08 \ubd84\ud3ec\ub294 \ub9e4\uc6b0 \uc65c\uace1\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud06c\uae30\ub97c \uc870\uc815\ud558\ub354\ub77c\ub3c4 \ubaa8\ub378\uc5d0\uc11c \ub9e4\uc6b0 \ub192\uc740 \uac12\uc744 \ucd08\uacfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc774 \uacbd\uc6b0, \ub85c\uadf8 \uae30\ub2a5\uc73c\ub85c \ubcc0\ud658\ud558\uc5ec \uc774 \uc65c\ub3c4\ub97c \uc904\uc774\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","276d602c":"[\ubaa9\ucc28\ub85c](#0)\n\n------------------------------------------------------------------------------------------------\n<a id=\"13\"><\/a> <br>\n## 6. MODELING","bc026d67":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"18\"><\/a> <br>\n### 6.2 Ensemble modeling\n#### 6.2.1 Combining models\n\n\uc800\uc790\ub294 6\uac1c \ubd84\ub958\uae30\uc5d0\uc11c \ub098\uc624\ub294 \uc608\uce21\uc744 \uacb0\ud569\ud558\uae30 \uc704\ud574 \ud22c\ud45c \ubd84\ub958\uae30\ub97c \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4.\n\n\uac01 \ud22c\ud45c\uc758 \ud655\ub960\uc744 \uace0\ub824\ud558\uae30 \uc704\ud574 \"\ubd80\ub4dc\ub7ec\uc6b4\" \uc8fc\uc7a5\uc744 \ud22c\ud45c \ub9e4\uac1c\ubcc0\uc218\uc5d0 \uc804\ub2ec\ud558\ub294 \uac83\uc744 \uc120\ud638\ud588\uc2b5\ub2c8\ub2e4.","9ffb90c4":"##### e-2. Linear Discriminant Analysis\n\uc774\uc5d0 \ub300\ud55c \uadf8\ub9ac\ub4dc \uc11c\uce58 \ubc29\ubc95\uc740 \ucc3e\uc744 \uc218 \uc5c6\uc5c8\ub2e4. ","8f5ba8df":"\uc2b9\uac1d \uc0dd\uc874\uc740 3\uac1c \ub4f1\uae09\uc5d0\uc11c \uac19\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc77c\ub4f1\uc11d \uc2b9\uac1d\uc740 \uc774\ub4f1\uc11d, \uc0bc\ub4f1\uc11d \uc2b9\uac1d\ubcf4\ub2e4 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.\n\n\uc774\ub7ec\ud55c \uacbd\ud5a5\uc740 \uc6b0\ub9ac\uac00 \ub0a8\ub140 \uc2b9\uac1d \ubaa8\ub450\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4.","34029406":"- Fare","990b48ce":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"5\"><\/a> <br>\n### 2.4 \uacb0\uce21\uac12 \ubc0f Null\uac12 \ucc3e\uc544\ub0b4\uae30","006471db":"\ud558\ub098\uc758 \ub204\ub77d\ub41c \uac12\uc744 \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc800\uc790\ub294 \uc774\ub97c \uc608\uce21\uc5d0 \uc911\uc694\ud55c \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub294 \uc911\uc559\uac12\uc73c\ub85c \ucc44\uc6b0\uae30\ub85c \uacb0\uc815\ud588\uc2b5\ub2c8\ub2e4.","eae7e680":"<a id=\"17\"><\/a> <br>\n#### 6.1.4 Feature importance of tree based classifiers\n\n\uc2b9\uac1d \uc0dd\uc874 \uc608\uce21\uc744 \uc704\ud55c \uac00\uc7a5 \uc720\uc775\ud55c \uae30\ub2a5\uc744 \ubcf4\uae30 \uc704\ud574, 4\uac1c\uc758 \ud2b8\ub9ac \uae30\ubc18 \ubd84\ub958\uae30\uc5d0 \ub300\ud55c \ud2b9\uc9d5\uc758 \uc911\uc694\ub3c4\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.","44248adc":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"19\"><\/a> <br>\n### 6.3 Prediction\n#### 6.3.1 Predict and Submit results","1c0fb018":"[\ubaa9\ucc28\ub85c](#0)\n\n------------------------------------------------------------------------------------------------\n<a id=\"2\"><\/a> <br>\n## 2. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \ud655\uc778\n\n### 2.1 \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","feca66c6":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"14\"><\/a> <br>\n### 6.1 Simple modeling\n#### 6.1.1 \uad50\ucc28 \uac80\uc99d \ubaa8\ub378\n\n\uc800\uc790\ub294 10\uac1c\uc758 \uc778\uae30 \ubd84\ub958\uae30\ub97c \ube44\uad50\ud558\uace0 \uce35\ud654\ub41c k\ud3f4\ub4dc \uad50\ucc28 \uac80\uc99d \uc808\ucc28\uc5d0 \uc758\ud574 \uac01\uac01\uc758 \ud3c9\uade0 \uc815\ud655\ub3c4\ub97c \ud3c9\uac00\ud558\uc600\uc2b5\ub2c8\ub2e4.\n\n* SVC\n* Decision Tree(\uc758\uc0ac\uacb0\uc815\ub098\ubb34)\n* AdaBoost \n* Random Forest\n* Extra Trees\n* Gradient Boosting\n* Multiple layer perceprton (neural network)\n* KNN\n* Logistic regression(\ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0)\n* Linear Discriminant Analysis\n\n\uc5ec\uae30\ubd80\ud130\ub294 \uc800\uc790\uc758 \uacb0\uacfc\uc640 \ubcf8\uc778\uc758 \uacb0\uacfc\uac00 \ub2e4\ub974\uac8c \ub098\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","9f4506e9":"\uc800\uc790\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c AdaBoost\ub97c \ub2e4\ub978 \ubd84\ub958\uae30\uc640 \ube44\uad50\ud588\uc744 \ub54c\ub97c \uc81c\uc678\ud558\uba74 6\uac1c \ubd84\ub958\uae30\uc5d0\uc11c\ub294 \uc608\uce21\uc774 \uc0c1\ub2f9\ud788 \ube44\uc2b7\ud55c \uac83\uc73c\ub85c \ubcf4\uc785\ub2c8\ub2e4.<br>\n6\uac1c\uc758 \ubd84\ub958\uc790\ub4e4\uc740 \uac70\uc758 \uac19\uc740 \uc608\uce21\uc744 \ud558\uc9c0\ub9cc \uc57d\uac04\uc758 \ucc28\uc774\uac00 \uc788\uc2b5\ub2c8\ub2e4.<br>\n6\uac1c \ubd84\ub958\uc790 \uc608\uce21 \uac04\uc758 \ub17c\uc81c \ucc28\uc774\ub294 \ud569\ub2f9\ud55c \ud22c\ud45c\ub97c \uace0\ub824\ud558\uae30\uc5d0 \ucda9\ubd84\ud569\ub2c8\ub2e4.","2ce0e4c8":"Fare\ub9cc\uc774 \uc0dd\uc874 \ud655\ub960\uacfc \uc758\ubbf8 \uc788\ub294 \uc0c1\uad00\uad00\uacc4\uac00 \uc788\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n\uc774\ub294 \ub2e4\ub978 \ud2b9\uc9d5\ub4e4\uc774 \uc644\uc804\ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.<br>\n\uc774\ub7ec\ud55c \ud2b9\uc9d5\uc758 \ud558\uc704 \uc9d1\ub2e8\uc740 \uc0dd\uc874\uacfc \uc5f0\uad00\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc744 \uacb0\uc815\ud558\uae30 \uc704\ud574, \uc6b0\ub9ac\ub294 \uc774 \ud2b9\uc9d5\ub4e4\uc744 \uc790\uc138\ud788 \ud0d0\uad6c\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.","669f7566":"\uac00\uc871\uc758 \ud06c\uae30\uac00 \uc911\uc694\ud55c \uc5ed\ud560\uc744 \ud558\ub294 \uac83 \uac19\uc544 \ubcf4\uc785\ub2c8\ub2e4. \uc0dd\uc874 \ud655\ub960\uc740 \ub300\uac00\uc871\uc774 \uc81c\uc77c \uc791\uc2b5\ub2c8\ub2e4.\n\n\uc800\uc790\ub294 \uac00\uc871 \ud06c\uae30\uc758 4\uac00\uc9c0 \ubc94\uc8fc\ub97c \ub9cc\ub4e4\uae30\ub85c \uacb0\uc815\ud569\ub2c8\ub2e4.","bf5c1ebb":"[\ubaa9\ucc28\ub85c](#0)\n<a id=\"4\"><\/a> <br>\n### 2.3 \ud6c8\ub828 \ub370\uc774\ud130\uc640 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubd99\uc774\uae30","f8132364":"\ucd1d 10\uac1c\uc758 \uc774\uc0c1\uce58\ub97c \ud0d0\uc9c0\ud588\uc2b5\ub2c8\ub2e4.\n\n28, 89, 342\ubc88\uc758 \ud0d1\uc2b9\uac1d\ub4e4\uc774 \ub192\uc740 \ud2f0\ucf13 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \ub098\uba38\uc9c0 7\uba85\uc758 \ud0d1\uc2b9\uac1d\uc740 \ub9e4\uc6b0 \ub192\uc740 \uac12\uc758 SibSp\ub97c \uac00\uc9d1\ub2c8\ub2e4.","2f45b0b3":"Name\uc5d0\ub294 \uc2b9\uac1d\uc758 \uc81c\ubaa9\uc5d0 \ub300\ud55c \uc815\ubcf4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n\n\ub300\ud53c \uc911\uc5d0\ub294 \uc9c1\ud568\uc774 \ubcc4\ub3c4\ub85c \uc874\uc7ac\ud558\ub294 \uc2b9\uac1d\uc744 \uc120\ud638\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ubaa8\ub378\uc5d0 \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc88b\uc544 \ubcf4\uc785\ub2c8\ub2e4.","175da1b0":"\ud2b9\uc774\uce58\ub294 \uc608\uce21\uc5d0 \uadf9\uc801\uc778 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0(\ud2b9\ud788 \ud68c\uadc0 \ubb38\uc81c\uc5d0 \ub300\ud574) \uc800\uc790\ub294 \uc774\ub97c \uad00\ub9ac\ud558\uae30 \uc704\ud574 \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4.\n\n\uc800\uc790\ub294 \ubd84\ubc30 \uac12(IQR)\uc758 1\ubd84\uc704\uc640 3\ubd84\uc704\uc218 \uc0ac\uc774\uc5d0 \uad6c\uc131\ub41c \uc0ac\ubd84\uc704\uac04 \ubc94\uc704\ub97c \uc815\uc758\ud558\ub294 outlier\ub97c \uac80\ucd9c\ud558\uae30 \uc704\ud574 Tukey \ubc29\ubc95(Tukey JW, 1977)\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.<br>\n\ud2b9\uc774\uce58\ub780 \ud615\uc0c1 \uac12\uc774 \ud2b9\uc774\uce58 \uc2a4\ud15d(IQR +- \ud2b9\uc774\uce58 \uc2a4\ud15d) \uc678\ubd80\uc5d0 \uc788\ub294 \ud589\uc785\ub2c8\ub2e4.\n\n\uc800\uc790\ub294 \uc22b\uc790 \uac12\uc758 \ud2b9\uc9d5(Age, SibSp, Sarch, Fare)\uc5d0\uc11c \ud2b9\uc774\uce58\ub97c \uac80\ucd9c\ud558\uae30\ub85c \uacb0\uc815\ud588\uc2b5\ub2c8\ub2e4.<br>\uadf8\ub9ac\uace0 \ud2b9\uc774\uce58\ub97c \ucd5c\uc18c \ub450 \uac1c\uc758 \ub3cc\ucd9c\ub41c \uc22b\uc790 \uac12\uc744 \uac00\uc9c4 \ud589\uc73c\ub85c \uac04\uc8fc\ud588\uc2b5\ub2c8\ub2e4.","df659cd2":"\ub450 \ubd84\ud3ec\ub97c \uacb9\uccd0 \ubcfc \ub54c, \uc6b0\ub9ac\ub294 \uc601\uc720\uc544\ub4e4(Age : 0 ~ 5)\uc758 \ubd09\uc6b0\ub9ac\uac00 \uc11c\ub85c \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","98433994":"\uc0dd\uc874\ud55c \uc5f0\ub839\uc758 \uc911\uac04\uac12\uacfc \ud558\uc704 \uc778\uad6c\uc5d0\uc11c \uc0b4\uc544\ub0a8\uc9c0 \ubabb\ud55c \uc5f0\ub839\uc758 \ucc28\uc774\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.\n\n\ud558\uc9c0\ub9cc \uc0b4\uc544\ub0a8\uc740 \uc2b9\uac1d\ub4e4\uc758 \ubc14\uc774\uc62c\ub9b0 \uadf8\ub798\ud504\ub97c \ud1b5\ud574, \uc5ec\uc804\ud788 \ub9e4\uc6b0 \uc5b4\ub9b0 \uc2b9\uac1d\ub4e4\uc774 \uc0dd\uc874\uc728\uc774 \ub192\ub2e4\ub294 \uac83\uc744 \uc54c\uc544\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","093e8686":"Family size\uc758 \uc694\uc778 \uadf8\ub9bc\uc740 \uc911\uc18c\uac00\uc871\uc774 \ub2e8\uc77c \uc2b9\uac1d\uc774\ub098 \ub300\uac00\uc871\ubcf4\ub2e4 \uc0dd\uc874\ud560 \uae30\ud68c\uac00 \ub354 \ub9ce\ub2e4\ub294 \uac83\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.","02ad9a3d":"\uc5ec\uae30\uae4c\uc9c0\ub294 \ub370\uc774\ud130\uc14b\uc5d0 22\uac00\uc9c0 \ubcc0\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.","81995cb8":"\uac19\uc740 \uc811\ub450\uc0ac\ub97c \uacf5\uc720\ud558\ub294 Ticket\uc774 \ud568\uaed8 \ubc30\uce58\ub420 \uc218 \uc788\ub2e4\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc120\ubc15 \ub0b4 \uc120\uc2e4\ub4e4\uc774 \uc2e4\uc81c\ub85c \uac19\uc774 \ubc30\uce58\ub418\ub294 \uac83\uc73c\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\ub2e4.\n\n\uc811\ub450\uc0ac\uac00 \uac19\uc740 Ticket\uc740 \ube44\uc2b7\ud55c \ub4f1\uae09\uacfc \uc0dd\uc874\uc744 \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uadf8\ub798\uc11c \uc800\uc790\ub294 Ticket \uc5f4\uc744 \uc811\ub450\uc0ac\ub9cc \ubf51\uc544 \ubc14\uafb8\uae30\ub85c \ud588\uace0, \uadf8\uac8c \ub354 \uc720\uc775\ud560\uc9c0\ub3c4 \ubaa8\ub978\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.","be09f233":"\uc2e4\uc81c\ub85c 3\ub4f1\uc11d\uc740 \uc0ac\uc6b0\uc0d8\ud504\ud134(S)\uacfc \ud038\uc2a4\ud0c0\uc6b4(Q)\uc5d0\uc11c \uc624\ub294 \uc2b9\uac1d\uc774 \uac00\uc7a5 \ub9ce\uc740 \ubc18\uba74, \uccb4\ub974\ubd80\ub974\ud06c \uc2b9\uac1d\uc740 \uc0dd\uc874\uc728\uc774 \uac00\uc7a5 \ub192\uc740 1\ub4f1\uc11d\uc5d0 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc774\ucbe4 \ub418\uba74 \uc77c\ub4f1\uc11d\uc758 \uc0dd\uc874\uc728\uc774 \ub192\uc740 \uc774\uc720\ub97c \uc124\uba85\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\n\uc800\uc790\ub294 \uc77c\ub4f1\uc11d \uc2b9\uac1d\ub4e4\uc774 \uadf8\ub4e4\uc758 \uc601\ud5a5\ub825\uc73c\ub85c \uc778\ud574, \ub300\ud53c\ud558\ub294 \ub3d9\uc548 \uc6b0\uc120\uc21c\uc704\ub97c \uc815\ud588\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.","730dd782":"- Age"}}