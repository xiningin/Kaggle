{"cell_type":{"483b996b":"code","a05e160d":"code","e7190401":"code","7dae17d5":"code","116324b8":"code","26210641":"code","310a4d79":"code","21f46467":"code","3f272ae0":"code","d13db187":"code","3678fa78":"code","10a5bbce":"code","13c838f4":"code","67d4e45d":"code","4ebcc89b":"code","508bd642":"code","41a693f2":"code","909c797c":"code","7c0c00f6":"code","42e17e1d":"code","301c7a7f":"code","037373ea":"code","aea6c35d":"code","367e4a30":"code","cd55ab47":"code","b0441775":"code","36544ea1":"code","bbefd241":"code","da06f7f3":"code","a85156cf":"code","e554126c":"code","d3ad2113":"code","db99eed1":"code","bb9124a5":"code","ac96679b":"code","8345296f":"code","3820622a":"code","ab8d9566":"code","85f12727":"code","969dfc3c":"code","a60da6ec":"code","cbeb89ef":"code","3905ef4e":"code","fe933498":"code","3f7a91ac":"code","e13fef71":"code","6d15e7f4":"code","d417737c":"code","62de4f1e":"code","5252430a":"code","61caf3c2":"code","359d90b4":"code","a52c238e":"code","c4717f2a":"code","5750670a":"code","498b2304":"code","f2bab7f2":"code","c1fed687":"code","826a86eb":"code","59d98cb0":"code","9536520f":"code","b523b0a0":"code","6dd4389a":"code","0f704269":"code","90d3bc2c":"code","0e1b7f52":"code","3667d9c4":"code","cccf2300":"code","12af5710":"code","f9ea36c7":"code","45ad5b7b":"code","41d7a160":"code","cc956603":"code","7d988a45":"code","1cf6ecf5":"code","8f2e62e8":"code","bf9a0bf9":"code","19dd0008":"code","e6c34787":"code","6971c287":"code","54cc552c":"code","a0adba08":"code","af495abb":"code","dc5b296b":"code","018cc780":"code","a7f3915b":"code","07ddfd91":"code","4281b5fc":"markdown","37298f3a":"markdown","d57a219e":"markdown","bfa39d54":"markdown","f238b39d":"markdown","35e5672c":"markdown","00b90087":"markdown","19d952c4":"markdown","122d8909":"markdown","d3bec21d":"markdown","b0646dd7":"markdown","39440e68":"markdown","87faef95":"markdown","c049c55a":"markdown","38ef84a3":"markdown","447f6cf2":"markdown","9d88a936":"markdown","e5a181a9":"markdown","dfe7086e":"markdown","556c8181":"markdown","b85aef54":"markdown","a58ecf56":"markdown"},"source":{"483b996b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a05e160d":"# \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435:\ndf = pd.read_csv('\/kaggle\/input\/kepler-exoplanet-search-results\/cumulative.csv', delimiter=',')\ndf.head(10)","e7190401":"nRow, nCol = df.shape\nprint(f'\u0412 \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 {nRow} \u0441\u0442\u0440\u043e\u043a \u0438 {nCol} \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432')","7dae17d5":"# \u0420\u0430\u0437\u0431\u0435\u0440\u0451\u043c\u0441\u044f, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0438\u0437 \u0441\u0435\u0431\u044f \u043d\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430\u0448\u0438\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432:\ndf.dtypes\n","116324b8":"# \u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\nCategorical_cols = list(set(df.columns) - set(df._get_numeric_data().columns))\nCategorical_cols","26210641":"df[[\"kepler_name\", \"koi_disposition\", 'koi_pdisposition']].head(20)\n","310a4d79":"df = df.drop('kepler_name', 1, errors='ignore')\ndf","21f46467":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 koi_pdisposition \u0438 koi_disposition:\ndf.assign(n=0).groupby(['koi_pdisposition']).n.count()","3f272ae0":"df.assign(n=0).groupby(['koi_disposition']).n.count()","d13db187":"import seaborn as sns\nsns.set()\n\nwith sns.color_palette(\"YlGnBu\", 3):\n    sns.barplot(df['koi_pdisposition'].value_counts().index, df['koi_pdisposition'].value_counts().values)\n","3678fa78":" with sns.color_palette(\"YlGnBu\", 3):\n        sns.barplot(df['koi_disposition'].value_counts().index, df['koi_disposition'].value_counts().values)","10a5bbce":"# \u0422\u0430\u043a\u0436\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 koi_tce_delivname:\ndf[\"koi_tce_delivname\"].head(5)","13c838f4":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0435 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:\ndf[\"koi_tce_delivname\"].unique()\n","67d4e45d":"# Threshold Crossing Event - \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0440\u043e\u0433\u0430.\n# \u0412\u044b\u0448\u0435 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u044b \u0438\u043c\u0435\u043d\u0430 \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u0432 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0430\u043a\u0436\u0435 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u043d\u0430 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u043c \u0441\u0430\u0439\u0442\u0435\n# NASA Exoplanet Science Institute. \u0414\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043e\u043d\u0438 \u0442\u0430\u043a\u0436\u0435 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u0430\u0436\u043d\u044b.\ndf = df.drop('koi_tce_delivname', 1, errors='ignore')\ndf","4ebcc89b":"import matplotlib.pyplot as plt\n\nconfirmed = df[df.koi_disposition == 'CONFIRMED']\n\nra, dec = df.ra, df.dec\nra_c, dec_c = confirmed.ra, confirmed.dec\n\nfig = plt.figure(figsize=(12, 12))\n\nplt.scatter(ra, dec, s=3, label='Candidates')\nplt.scatter(ra_c, dec_c, s=3, label=\"Confirmed\")\n\nplt.xlabel(\"Right Ascension\")\nplt.ylabel(\"Declination\")\n\nplt.legend()","508bd642":"ax = confirmed.koi_period.hist(bins=100, figsize=(12, 8))\nax.set_xlabel(\"\u041e\u0440\u0431\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442, (\u0434\u043d\u0438)\")","41a693f2":"\nax = confirmed.koi_slogg.hist(bins=100, figsize=(12, 8))\nax.set_xlabel(\"$\\log{g}$\")\nax.set_title(\"\u041f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u043d\u0430\u044f \u0433\u0440\u0430\u0432\u0438\u0442\u0430\u0446\u0438\u044f \u0437\u0432\u0435\u0437\u0434, \u0438\u043c\u0435\u044e\u0449\u0438\u0445 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\")","909c797c":"ax = confirmed.koi_kepmag.hist(bins=100, figsize=(12, 8))\nax.set_xlabel(\"\u0417\u0432\u0451\u0437\u0434\u043d\u0430\u044f \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430 (\u0447\u0435\u043c \u043d\u0438\u0436\u0435, \u0442\u0435\u043c \u044f\u0440\u0447\u0435)\")\nax.set_title(\"\u0421onfirmed\")","7c0c00f6":"# \u041f\u0435\u0440\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\n\nfrom sklearn import preprocessing\n\n# \u041d\u0430\u043f\u0438\u0448\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 DataFrame, \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n# \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 DataFrame \u0438 \u0441\u0430\u043c\u0438 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438.\ndef nef(init_df):\n    result = init_df.copy() # \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448\u0443 \u0438\u0441\u0445\u043e\u0434\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443\n    encoders = {}\n    for column in result.columns:\n        if result.dtypes[column] == np.object: # np.object -- \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \/ \u0435\u0441\u043b\u0438 \u0442\u0438\u043f \u0441\u0442\u043e\u043b\u0431\u0446\u0430 - \u0441\u0442\u0440\u043e\u043a\u0430, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0435\u0433\u043e \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n            encoders[column] = preprocessing.LabelEncoder() # \u0434\u043b\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 column \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\n            result[column] = encoders[column].fit_transform(result[column]) # \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a \u043a \u0441\u0442\u043e\u043b\u0431\u0446\u0443 \u0438 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446\n    return result, encoders\n\nencoded_data, encoders = nef(df) # \u0422\u0435\u043f\u0435\u0440\u044c encoded data \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043a\u0430\u0442. \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \nencoded_data.head() ","42e17e1d":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439:\n\nplt.subplots(figsize=(20,20))\nsns.heatmap(encoded_data.corr(), square=True, cmap=\"YlGnBu\")\nplt.show()","301c7a7f":"encoded_data[['kepid', 'dec']].head(20)\n","037373ea":"# \u041d\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0432 \u0434\u0432\u043e\u0439\u043d\u043e\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0430\u0448\u0438\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.\n# \u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 dec:\nencoded_data = encoded_data.drop('kepid', 1, errors='ignore')\nencoded_data","aea6c35d":"print(encoded_data['koi_teq_err1'].unique())\nprint(encoded_data['koi_teq_err2'].unique())","367e4a30":"encoded_data.drop(['koi_teq_err1', 'koi_teq_err2'], 1, errors='ignore', inplace = True)\nencoded_data","cd55ab47":"# \u0422\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u0438\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 koi_disposition, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0438\u0442\u043e\u0433\u043e\u0432\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438 - \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430\u043c\u0438.\n# \u041e\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043d\u0430 CANDIDATE \u0438\u043b\u0438 FALSE POSITIVE.\n# \u041a \u0442\u043e\u043c\u0443 \u0436\u0435, \u0434\u0430\u043d\u043d\u044b\u0435 koi_pdisposition \u0438 koi_disposition \u0432 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0442 \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439.\n# \u0422\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b rowid \u0438 kepoi_name (\u043d\u043e\u043c\u0435\u0440\u0430 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0438 \u0438\u043c\u0435\u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432).\n\nencoded_data.drop(['koi_disposition', 'rowid', 'kepoi_name'], 1, errors='ignore', inplace = True)\nencoded_data","b0441775":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u0435\u043b\u0438\u0447\u0438\u043d \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c \u0432 \u043d\u0430\u0448\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n\nfig = plt.figure(figsize=(20,20))\ncols = 5\n\nrows = np.ceil(float(encoded_data.shape[1]) \/ cols)\nfor i, column in enumerate(encoded_data.columns):\n    ax = fig.add_subplot(rows, cols, i + 1)\n    ax.set_title(column)\n    encoded_data[column].hist(axes=ax)\n    plt.xticks(rotation=\"vertical\")","36544ea1":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u043d\u0430\u0448\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445:\nfig, ax = plt.subplots(figsize=(9,5))\nsns.heatmap(encoded_data.isnull(), cbar=False, cmap=\"YlGnBu_r\")\nplt.show()","bbefd241":"missing_val_count_by_column = encoded_data.isnull().sum()\nprint(missing_val_count_by_column[missing_val_count_by_column > 0])","da06f7f3":"# \u0412\u043d\u0430\u0447\u0430\u043b\u0435 \u0443\u0434\u0430\u043b\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u044b:\nencoded_data['koi_tce_plnt_num'].unique()\n","a85156cf":"encoded_data.drop('koi_tce_plnt_num', 1, errors='ignore', inplace = True)\n","e554126c":"encoded_data['koi_score']","d3ad2113":"encoded_data.drop('koi_score', 1, errors='ignore', inplace = True)","db99eed1":"# \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u0438 \u0431\u0443\u043b\u0435\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\nencoded_data.drop(['koi_fpflag_nt', 'koi_fpflag_ss', 'koi_fpflag_co', 'koi_fpflag_ec'], 1, errors='ignore', inplace = True)\nencoded_data","bb9124a5":"# \u041d\u0430\u0448\u0430 \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f - koi_pdisposition \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439.\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\nenc1 = encoders['koi_pdisposition'].transform(['FALSE POSITIVE'])\nenc2 = encoders['koi_pdisposition'].transform(['CANDIDATE'])\nprint(f'\u0421\u0442\u0430\u0442\u0443\u0441 CANDIDATE \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d \u043a\u0430\u043a {enc1}')\nprint(f'\u0421\u0442\u0430\u0442\u0443\u0441 FALSE POSITIVE \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d \u043a\u0430\u043a {enc2}')    ","ac96679b":"# \u0412\u044b\u0434\u0435\u043b\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f koi_pdisposition \u0438 \u0443\u0434\u0430\u043b\u0438\u043c \u0435\u0451 \u0438\u0437 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438:\ny = np.array(encoded_data['koi_pdisposition'].astype('int64'))\nencoded_data.drop('koi_pdisposition', 1, errors='ignore', inplace = True)\nencoded_data","8345296f":"# \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430 \u0437\u0430\u043f\u0438\u0448\u0435\u043c \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e dummies_columns\ndummies_columns = list(encoded_data.columns)\nprint(dummies_columns)\n","3820622a":"# \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0434\u043b\u044f Imputation:\nfrom sklearn.impute import SimpleImputer\nmy_imputer = SimpleImputer()","ab8d9566":"data_with_imputed_values = my_imputer.fit_transform(encoded_data)\ndata_with_imputed_values.shape","85f12727":"# \u0417\u0430\u043f\u0438\u0448\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0432 \u043d\u0430\u0448 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c:\nencoded_data=pd.DataFrame(data_with_imputed_values)\nencoded_data.head(5)","969dfc3c":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0451 \u0440\u0430\u0437 \u043d\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445:\nmissing_val_count_by_column = encoded_data.isnull().sum()\nprint(missing_val_count_by_column[missing_val_count_by_column > 0])","a60da6ec":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u0425:\nX = np.array(encoded_data[encoded_data._get_numeric_data().columns])\nX","cbeb89ef":"# \u041f\u0435\u0440\u0435\u043c\u0435\u0448\u0430\u0435\u043c \u0438 \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u0443\u0435\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0443.\n# \u041d\u0430\u0439\u0434\u0435\u043c \u043f\u043e y \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a \u043a\u043b\u0430\u0441\u0441\u0443 FALSE POSITIVE \u0438, \u043f\u0435\u0440\u0435\u043c\u0435\u0448\u0430\u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0443, \u043e\u0431\u0440\u0435\u0436\u0435\u043c \u0435\u0435 \u0434\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 CANDIDATE.\nFALSE_POSITIVE = np.argwhere(y == 1).flatten()\nprint('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e FALSE POSITIVE', len(FALSE_POSITIVE))\nFALSE_POSITIVE","3905ef4e":"# \u041f\u0435\u0440\u0435\u043c\u0435\u0448\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c random state (\u0447\u0442\u043e\u0431 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0443 \u043d\u0430\u0441 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u043b\u0438 \u0432\u044b\u0431\u043e\u0440\u043a\u0438);\n# \u0412\u044b\u0431\u0435\u0440\u0435\u043c \u0432 \u043d\u0435\u043c \"\u043b\u0438\u0448\u043d\u0438\u0435\" id FALSE POSITIVE (\u043a\u0442\u043e \u043f\u043e\u0440\u0442\u0438\u0442 \u043d\u0430\u043c \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430).\n# \u041a\u043e\u043b-\u0432\u043e \"\u043b\u0438\u0448\u043d\u0438\u0445\" = \u043a\u043e\u043b-\u0432\u043e FALSE POSITIVE - \u043a\u043e\u043b-\u0432\u043e CANDIDATE.\n\nfrom sklearn.utils import shuffle\n\nFALSE_POSITIVE = shuffle(FALSE_POSITIVE, random_state = 42)\n# \u043d\u0430\u0439\u0434\u0435\u043c \"\u043b\u0438\u0448\u043d\u0438\u0445\", \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u0440\u0435\u0436\u0435\u043c \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 id \u043d\u0430 \u043a\u043e\u043b-\u0432\u043e CANDIDATE (\u0432\u043d\u0443\u0442\u0440\u0438 len)\nFALSE_POSITIVE = FALSE_POSITIVE[:len(np.argwhere(y == 0).flatten())]\nprint(len(FALSE_POSITIVE))\n# \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c \u043a\u043e\u043b-\u0432\u043e \u0438 \u0441\u0430\u043c\u0438 id, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u043a\u0438\u043d\u0443\u0442\u044c\nFALSE_POSITIVE","fe933498":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b \u043b\u0438 \u043a\u043b\u0430\u0441\u0441\u044b. \u041a\u043e\u043b-\u0432\u043e (\u0443\u0448\u0435\u0434\u0448\u0438\u0445) = (\u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f):\nlen(np.argwhere(y == 0).flatten()) == len(FALSE_POSITIVE)","3f7a91ac":"# \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0443\u0436\u043d\u044b\u0435 id \u0441 y = 0 \u0438 1:\nX = X[np.append(FALSE_POSITIVE, np.argwhere(y == 0).flatten())]\ny = y[np.append(FALSE_POSITIVE, np.argwhere(y == 0).flatten())]","e13fef71":"# \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043c \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\nX.shape, y.shape","6d15e7f4":"pd.Series(y).value_counts()","d417737c":"y = np.array(y, int)\ny","62de4f1e":"# \u041d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043d\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435:\nfrom sklearn.preprocessing import scale\nX_scaled = scale(np.array(X, dtype='float'), with_std=True, with_mean=True)\nX_scaled","5252430a":"X_scaled.shape, y.shape","61caf3c2":"# \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e (15%) \u0438 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e (85%)\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(X_scaled, y, test_size = 0.15, random_state = 0)\n\nprint(\"Shape of x_train :\", x_train.shape)\nprint(\"Shape of y_train :\", y_train.shape)\nprint(\"Shape of x_test :\", x_test.shape)\nprint(\"Shape of y_test :\", y_test.shape)","359d90b4":"from sklearn.neighbors import KNeighborsClassifier\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\nknn = KNeighborsClassifier()\n\n# \u0412 sklearn \u0435\u0441\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0435\u0439\nfrom sklearn.model_selection import GridSearchCV\n\n# \u0417\u0430\u0434\u0430\u0434\u0438\u043c \u0441\u0435\u0442\u043a\u0443 - \u0441\u0440\u0435\u0434\u0438 \u043a\u0430\u043a\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440.\nknn_grid = {'n_neighbors': np.array(np.linspace(1, 100, 10), dtype='int')} # \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 <<n_neighbors>>, \u043f\u043e \u0441\u0435\u0442\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 np.linspace(2, 100, 10)\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\ngs = GridSearchCV(knn, knn_grid, cv=5)\n\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u0435\u0433\u043e\ngs.fit(x_train, y_train)","a52c238e":"# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0438 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432\ndef grid_plot(x, y, x_label, title, y_label='cross_val, accuracy'):\n    # \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u0433\u0440\u0430\u0444\u0438\u043a\u0430\n    plt.figure(figsize=(12, 6))\n    # \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0441\u0435\u0442\u043a\u0443 \u043d\u0430 \u0444\u043e\u043d\n    plt.grid(True)\n    # \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u043f\u043e \u0445 - \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0435\u0434\u0435\u0439, \u043f\u043e y - \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\n    plt.plot(x, y, 'go-')\n    # \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0438 \u043e\u0441\u0435\u0439 \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0430\n    plt.xlabel(x_label)\n    plt.ylabel(y_label)\n    plt.title(title)","c4717f2a":"# \u0421\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0442 \u0447\u0438\u0441\u043b\u0430 \u0441\u043e\u0441\u0435\u0434\u0435\u0439\ngrid_plot(knn_grid['n_neighbors'], gs.cv_results_['mean_test_score'], 'n_neighbors', 'KNeighborsClassifier')","5750670a":"# \u041b\u0443\u0447\u0448\u0438\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440:\ngs.best_params_, gs.best_score_","498b2304":"# \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0432\u044b\u0432\u043e\u0434, \u0447\u0442\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043b\u0435\u0436\u0430\u0442 +- \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 15-30 \u0441\u043e\u0441\u0435\u0434\u0435\u0439, \u0438\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435 \u0432 \u044d\u0442\u043e\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435","f2bab7f2":"# \u0417\u0430\u0434\u0430\u0434\u0438\u043c \u0441\u0435\u0442\u043a\u0443 - \u0441\u0440\u0435\u0434\u0438 \u043a\u0430\u043a\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440.\nknn_grid = {'n_neighbors': list(range(15, 30))} # \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 <<n_neighbors>>, \u043f\u043e \u0441\u0435\u0442\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 np.linspace(2, 100, 10)\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\ngs = GridSearchCV(knn, knn_grid, cv=5)\n\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u0435\u0433\u043e\ngs.fit(x_train, y_train)","c1fed687":"grid_plot(knn_grid['n_neighbors'], gs.cv_results_['mean_test_score'], 'n_neighbors', 'KNeighborsClassifier')","826a86eb":"# \u0418\u0437 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0441\u0430\u043c\u043e\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0435\u0434\u0435\u0439 - 5, \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043c \u043b\u0443\u0447\u0448\u0438\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\ngs.best_params_, gs.best_score_","59d98cb0":"# \u041f\u043e\u043b\u0443\u0447\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430\npredictions = gs.predict(x_test)\npredictions","9536520f":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u0447\u0435\u0440\u0435\u0437 classification report\nfrom sklearn import metrics\nclf_knn = knn.fit(x_train, y_train)\ny_knn = clf_knn.predict(x_test)\nprint(metrics.classification_report(y_test, y_knn))","b523b0a0":"# confusion matrix\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\ncm = confusion_matrix(predictions, y_test)\n\nplt.rcParams['figure.figsize'] = (6, 6)\nsns.heatmap(cm ,annot = True)","6dd4389a":"# \u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f - 1 \u0446\u0438\u0444\u0440\u0430 \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.\nfrom sklearn.linear_model import LogisticRegression","0f704269":"# \u0441\u0438\u043b\u0430 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0442\u0438\u043f \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u0438 (\u0441\u043c. \u043d\u043e\u0440\u043c\u044b \u0432 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0435)\ngrid={\"C\": np.logspace(-2, 4, 20), \"penalty\":[\"l1\",\"l2\"] }\n# \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\nlogreg = LogisticRegression()\n# \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0430 1 \u0446\u0438\u0444\u0440\u0430 1 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\nlogreg_cv = GridSearchCV(logreg, grid, cv=5)\n# \u043e\u0431\u0443\u0447\u0430\u0435\u043c\u0441\u044f\nlogreg_cv.fit(x_train, y_train)\n\nlogreg_cv.best_params_, logreg_cv.best_score_","90d3bc2c":"grid_plot(logreg_cv.cv_results_['param_C'][:10], logreg_cv.cv_results_['mean_test_score'][:10], 'regularization strength', 'Logistit regr')","0e1b7f52":"# \u041f\u043e\u043b\u0443\u0447\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f:\npredictions = logreg_cv.predict(x_test)\npredictions","3667d9c4":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c ROC-\u043a\u0440\u0438\u0432\u0443\u044e:\nfrom sklearn.metrics import roc_curve\n\nfpr, tpr,_= roc_curve(predictions, y_test, drop_intermediate=False)\n\nplt.figure()\n##Adding the ROC\nplt.plot(fpr, tpr, color='red',\n lw=2, label='ROC curve')\n##Random FPR and TPR\nplt.plot([0, 1], [0, 1], color='blue', lw=2, linestyle='--')\n##Title and label\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.title('ROC curve')\nplt.show()","cccf2300":"# confusion matrix\n\ncm = confusion_matrix(predictions, y_test)\nplt.rcParams['figure.figsize'] = (6, 6)\nsns.heatmap(cm ,annot = True)\n\n# classification report\ncr = classification_report(predictions, y_test)\nprint(cr)","12af5710":"# \u0414\u0435\u0440\u0435\u0432\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0439 - 1 \u0446\u0438\u0444\u0440\u0430 \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.\nfrom sklearn import tree","f9ea36c7":"# knn_grid = {'n_neighbors': np.array(np.linspace(1, 100, 100), dtype='int')}\n\nparam_grid = {'min_samples_split': [i for i in range(2, 100)] }\nalg = tree.DecisionTreeClassifier()\ngs = GridSearchCV(alg, param_grid, cv=10)\ngs.fit(x_train, y_train)\n\n# best_params_ \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, best_score_ \u043b\u0443\u0447\u0448\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e\ngs.best_params_, gs.best_score_","45ad5b7b":"grid_plot(param_grid['min_samples_split'], gs.cv_results_['mean_test_score'], 'min_samples_split', 'tree')","41d7a160":"predictions = gs.predict(x_test)\npredictions","cc956603":"cm = confusion_matrix(predictions, y_test)\nplt.rcParams['figure.figsize'] = (6, 6)\nsns.heatmap(cm ,annot = True)\n\n# classification report\ncr = classification_report(predictions, y_test)\nprint(cr)","7d988a45":"# \u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441 - 1 \u0446\u0438\u0444\u0440\u0430 \u043d\u0430 1 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.\nfrom sklearn.ensemble import RandomForestClassifier","1cf6ecf5":"# \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0433\u043b\u0443\u0431\u0438\u043d\u0443\n# \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u0438\u043d \u043a\u043e\u043b-\u0432\u043e \u0434\u043b\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f\n# \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438\nparam_grid = {'max_depth': [i for i in range(2, 15)],\n              'min_samples_split': [i for i in range(2, 10)],\n              'max_features': [2, len(x_train[0])-1]\n              }\n\n# \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441 \u0441 \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u043e\u043c \u043f\u043e \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b \u043d\u0430 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u0448\u0435 \u043f\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\nalg = RandomForestClassifier()\ngs = GridSearchCV(RandomForestClassifier(), param_grid, cv=5)\ngs.fit(x_train, y_train)\n\n# best_params_ \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, best_score_ \u043b\u0443\u0447\u0448\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e\nprint()\ngs.best_params_, gs.best_score_","8f2e62e8":"# \u041f\u043e\u043b\u0443\u0447\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f:\npredictions = gs.predict(x_test)\npredictions","bf9a0bf9":"cm = confusion_matrix(predictions, y_test)\nplt.rcParams['figure.figsize'] = (6, 6)\nsns.heatmap(cm ,annot = True)\n\n# classification report\ncr = classification_report(predictions, y_test)\nprint(cr)","19dd0008":"def plot_feature_importances(model, columns):\n    # \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n    nr_f = 10\n    # \u0431\u0435\u0440\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0433\u0440\u0430\u0444\u0438\u043a\u0430\n    # \u0431\u0435\u0440\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0441 \u043b\u0443\u0447\u0448\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n    # \u043f\u043e \u0445 \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044f \u0414\u0436\u0438\u043d\u0438, \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0438\u0445 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e\n    imp = pd.Series(data = model.best_estimator_.feature_importances_, \n                    index=columns).sort_values(ascending=False)\n    # \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0444\u0438\u0433\u0443\u0440\u0443\n    plt.figure(figsize=(7,5))\n    # \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\n    plt.title(\"\u0412\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 | Feature importance\")\n    # \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 10 \u0441\u0430\u043c\u044b\u0445 \u0432\u0430\u0436\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n    ax = sns.barplot(y=imp.index[:nr_f], x=imp.values[:nr_f], orient='h')\n","e6c34787":"# \u0432\u044b\u0437\u0432\u0430\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0430\u043c\u044b\u0445 \u0432\u0430\u0436\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nplot_feature_importances(gs, dummies_columns)","6971c287":"# \u041d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u044c.\n# \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c\nfrom keras.models import Sequential\n# \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0441\u043b\u043e\u0439 \u043f\u043e\u043b\u043d\u043e\u0441\u0432\u044f\u0437\u043d\u043e\u0439 \u0441\u0435\u0442\u0438\nfrom keras.layers import Dense","54cc552c":"model = Sequential()\nmodel.add(Dense(128, input_dim=35, activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(1, activation='sigmoid'))","a0adba08":"# model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\nmodel.compile(loss=\"mean_squared_error\",optimizer='adam', metrics=[\"binary_accuracy\"]) ","af495abb":"# \u043e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u0441 \u0431\u0430\u0442\u0447\u0435\u043c \u0432 32, \u0437\u0430 50 \u044d\u043f\u043e\u0445\u0430\u0445, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043f\u043e \u0442\u0435\u0441\u0442\u0443\nhistory = model.fit(x_train, y_train,\n                    validation_data = (x_test, y_test),\n                    epochs=50,\n                    batch_size=32)\n# \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\nresults = model.evaluate(x_test, y_test)\nprint(\"\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 loss \u0438 accuracy\", results)","dc5b296b":"# \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e \u044d\u043f\u043e\u0445\u0435\nplt.clf()\nhistory_dict = history.history\n# \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0441 \u0438\u0441\u0442\u043e\u0440\u0438\u0435\u0439\nloss_values = history_dict['loss']\nval_loss_values = history_dict['val_loss']\nepochs = range(1, (len(history_dict['loss']) + 1))\nplt.plot(epochs, loss_values, 'r', label='loss \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439')\nplt.plot(epochs, val_loss_values, 'b', label='loss \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439')\nplt.title('\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0439 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 loss')\nplt.xlabel('\u042d\u043f\u043e\u0445\u0438')\nplt.ylabel('Loss')\nplt.legend()\nplt.show()","018cc780":"print(history.history.keys())","a7f3915b":"# accuracy \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435\nplt.clf()\n# \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0441 \u0438\u0441\u0442\u043e\u0440\u0438\u0435\u0439\nacc_values = history.history['binary_accuracy']\nval_acc_values = history_dict['val_binary_accuracy']\nepochs = range(1, (len(history_dict['binary_accuracy']) + 1))\n# \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u043f\u043e accuracy \u043d\u0430 train \u0438 val\nplt.plot(epochs, acc_values, 'r', label='accuracy \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439')\nplt.plot(epochs, val_acc_values, 'b', label='accuracy \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439')\nplt.title('\u0422\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0430\u044f \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f accuracy')\nplt.xlabel('\u042d\u043f\u043e\u0445\u0438')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()","07ddfd91":"# \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0442 \u043d\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043f\u043e \u043c\u043e\u0434\u0435\u043b\u0438\npredictions = model.predict(x_test)\nprint('\u0421\u044b\u0440\u043e\u0439 \u0432\u0438\u0434 \u043d\u0430\u0448\u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439')\n# \u043e\u043a\u0440\u0443\u0433\u043b\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 0 \u0438\u043b\u0438 1, \u0441\u0440\u0430\u0432\u043d\u0438\u0432 \u0441 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439\nprint(classification_report(y_test, np.around(predictions)))","4281b5fc":"# **\u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442 \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430 \"\u041a\u0435\u043f\u043b\u0435\u0440\u0430\".**\n\n\u0414\u0430\u043d\u043d\u044b\u0435 NASA, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0441 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430 Kepler.\n\nhttps:\/\/exoplanetarchive.ipac.caltech.edu\/cgi-bin\/TblView\/nph-tblView?app=ExoTbls&config=koi\n\n\u041e\u0440\u0431\u0438\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0441\u0435\u0440\u0432\u0430\u0442\u043e\u0440\u0438\u044f Kepler \u0431\u044b\u043b\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u0430 7 \u043c\u0430\u0440\u0442\u0430 2009 \u0433\u043e\u0434\u0430 \u0438 \u043f\u0440\u0435\u043a\u0440\u0430\u0442\u0438\u043b\u0430 \u0441\u0432\u043e\u044e \u0440\u0430\u0431\u043e\u0442\u0443 15 \u043d\u043e\u044f\u0431\u0440\u044f 2018 \u0433\u043e\u0434\u0430.\n\u042d\u0442\u043e\u0442 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f \u0431\u044b\u043b \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442 (\u043f\u043b\u0430\u043d\u0435\u0442 \u0432\u043d\u0435 \u0421\u043e\u043b\u043d\u0435\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u2014 \u0443 \u0434\u0440\u0443\u0433\u0438\u0445 \u0437\u0432\u0451\u0437\u0434), \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0417\u0435\u043c\u043b\u0435. \u00ab\u041a\u0435\u043f\u043b\u0435\u0440\u00bb \u0432\u0440\u0430\u0449\u0430\u043b\u0441\u044f \u0432\u043e\u043a\u0440\u0443\u0433 \u0421\u043e\u043b\u043d\u0446\u0430 \u0438 \u0431\u044b\u043b \u043d\u0430\u0446\u0435\u043b\u0435\u043d \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0439 \u0443\u0447\u0430\u0441\u0442\u043e\u043a \u043d\u0435\u0431\u0430 \u2014 \u0432\u0434\u043e\u043b\u044c \u043a\u0430\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043a \u043d\u0430\u0448\u0435\u043c\u0443 \u0440\u0443\u043a\u0430\u0432\u0443 \u0413\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0438, \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u043f\u0435\u0440\u043f\u0435\u043d\u0434\u0438\u043a\u0443\u043b\u044f\u0440\u043d\u043e \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u043a \u0435\u0451 \u0446\u0435\u043d\u0442\u0440\u0443, \u043d\u043e \u0447\u0443\u0442\u044c \u0432\u044b\u0448\u0435 \u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u0438 \u0413\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0438. \u0422\u0435\u043b\u0435\u0441\u043a\u043e\u043f \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043b \u044d\u0442\u043e\u0442 \u0443\u0447\u0430\u0441\u0442\u043e\u043a, \u043d\u0430\u0445\u043e\u0434\u044f \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442\u044b \u043f\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c \u0438\u043d\u0442\u0435\u043d\u0441\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0437\u0432\u0435\u0437\u0434\u044b.\n\n\u041f\u043e\u043b\u0435 \u0437\u0440\u0435\u043d\u0438\u044f \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430 \u00ab\u041a\u0435\u043f\u043b\u0435\u0440\u00bb \u0431\u044b\u043b\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e \u043d\u0435\u0431\u0435\u0441\u043d\u043e\u0439 \u0441\u0444\u0435\u0440\u044b \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e 105 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432, \u0447\u0442\u043e \u0440\u0430\u0432\u043d\u043e \u0432\u0441\u0435\u0433\u043e \u043b\u0438\u0448\u044c \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0432\u0441\u0435\u0439 \u043d\u0435\u0431\u0435\u0441\u043d\u043e\u0439 \u0441\u0444\u0435\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 41253 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0433\u0440\u0430\u0434\u0443\u0441\u0430. \u0423\u0447\u0430\u0441\u0442\u043e\u043a \u043d\u0435\u0431\u0430, \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0432\u0448\u0438\u0439\u0441\u044f \u00ab\u041a\u0435\u043f\u043b\u0435\u0440\u043e\u043c\u00bb, \u043b\u0435\u0433\u043a\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 \u0437\u0432\u0451\u0437\u0434\u043d\u043e\u043c \u043d\u0435\u0431\u0435. \u041e\u043d \u0441\u0432\u044f\u0437\u0430\u043d \u0441 \u041b\u0435\u0442\u043d\u0435-\u043e\u0441\u0435\u043d\u043d\u0438\u043c \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0437\u0430\u043c\u0435\u0442\u043d\u044b\u043c \u0430\u0441\u0442\u0435\u0440\u0438\u0437\u043c\u043e\u043c \u0421\u0435\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u0443\u0448\u0430\u0440\u0438\u044f \u043d\u0435\u0431\u0435\u0441\u043d\u043e\u0439 \u0441\u0444\u0435\u0440\u044b, \u0445\u043e\u0440\u043e\u0448\u043e \u0432\u0438\u0434\u043d\u044b\u0439 \u043b\u0435\u0442\u043e\u043c \u0438 \u043e\u0441\u0435\u043d\u044c\u044e \u0432 \u0441\u0440\u0435\u0434\u043d\u0438\u0445 \u0448\u0438\u0440\u043e\u0442\u0430\u0445 \u0421\u0435\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u0443\u0448\u0430\u0440\u0438\u044f \u0417\u0435\u043c\u043b\u0438 (\u0412\u0435\u0433\u0430, \u0414\u0435\u043d\u0435\u0431 \u0438 \u0410\u043b\u044c\u0442\u0430\u0438\u0440).\n\n\u0426\u0435\u043b\u044c \u043c\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b - \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u044b\u0435 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b \u0441\u0440\u0435\u0434\u0438 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u043c\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442. \u0422\u0430\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0445 \u043e\u0440\u0431\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043c\u0438\u0441\u0441\u0438\u0439 \u043f\u043e \u043f\u043e\u0438\u0441\u043a\u0443 \u043f\u043b\u0430\u043d\u0435\u0442 \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u0437\u0432\u0451\u0437\u0434\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445, \u0442\u0430\u043a\u0438\u0445, \u043a\u0430\u043a \u043e\u0440\u0431\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f TESS, \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0439 18.04.2018\u0433.\n\n\u041e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442 \u0432 \u0433\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0435 \u041c\u043b\u0435\u0447\u043d\u044b\u0439 \u041f\u0443\u0442\u044c, \u0432 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f, \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0447\u0435\u043c \u0432 100 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u043e\u0432, \u0438\u0437 \u043d\u0438\u0445 ~ \u043e\u0442 5 \u0434\u043e 20 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u043e\u0432, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u00ab\u0437\u0435\u043c\u043b\u0435\u043f\u043e\u0434\u043e\u0431\u043d\u044b\u043c\u0438\u00bb. \u0422\u0430\u043a\u0436\u0435, \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u043e\u0446\u0435\u043d\u043a\u0430\u043c, \u043e\u043a\u043e\u043b\u043e 34 % \u0441\u043e\u043b\u043d\u0446\u0435\u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0437\u0432\u0451\u0437\u0434 \u0438\u043c\u0435\u044e\u0442 \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b, \u0441\u0440\u0430\u0432\u043d\u0438\u043c\u044b\u0435 \u0441 \u0417\u0435\u043c\u043b\u0451\u0439. \u0410 \u044d\u0442\u043e \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c\u0441\u044f.","37298f3a":"\u041c\u044b \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0442\u043e\u0431\u0435\u0446 \u0441\u043e\u0436\u0435\u0440\u0436\u0438\u0442, \u0432 \u043e\u0431\u0449\u0435\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438, 9564 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n\n**koi_pdisposition** \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f CANDIDATE \u0438 FALSE POSITIVE.\n\n**koi_disposition** \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f CANDIDATE, CONFIRMED \u0438 FALSE POSITIVE.\n\n\u041c\u044b \u0442\u0430\u043a\u0436\u0435 \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e 45 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u043b\u0438 \u0441\u0432\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 CANDIDATE, \u0438 \u043f\u0435\u0440\u0435\u0448\u043b\u0438 \u0432 \u0441\u0442\u0430\u0442\u0443\u0441 FALSE POSITIVE.\n\n2248 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u0432 \u043d\u0435\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043d\u043d\u043e\u043c \u0441\u0442\u0430\u0442\u0443\u0441\u0435, \u0442\u043e \u0435\u0441\u0442\u044c, CANDIDATE.\n","d57a219e":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/2\/28\/MilkywaykeplerfovbyCRoberts.jpg)\n\u0423\u0447\u0430\u0441\u0442\u043e\u043a \u043d\u0435\u0431\u0435\u0441\u043d\u043e\u0439 \u0441\u0444\u0435\u0440\u044b, \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0439\u0441\u044f \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u043e\u043c \u00ab\u041a\u0435\u043f\u043b\u0435\u0440\u00bb.\n","bfa39d54":"\u041c\u044b \u0432\u0438\u0434\u0438\u043c \u0440\u0435\u0437\u043a\u043e\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043e\u043a\u043e\u043b\u043e 16-\u0439 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u044b. \u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u044d\u0442\u043e \u043f\u0440\u0435\u0434\u0435\u043b, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0448\u0443\u043c \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u043c, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u043e\u0432 \u0432 \u043f\u043b\u0430\u043d\u0435\u0442\u044b.","f238b39d":"***\u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0451\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:***\n\nhttps:\/\/exoplanetarchive.ipac.caltech.edu\/docs\/API_tce_columns.html\n\n**kepoi_name:** \u0447\u0438\u0441\u043b\u043e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0435 \u0434\u043b\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430 Kepler (KOI). KOI - \u044d\u0442\u043e \u0446\u0435\u043b\u044c, \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u041f\u0440\u043e\u0435\u043a\u0442\u043e\u043c \u041a\u0435\u043f\u043b\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043e\u0434\u043d\u0443 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043e\u043f\u043e\u0434\u043e\u0431\u043d\u0443\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0444\u043e\u0442\u043e\u043c\u0435\u0442\u0440\u0438\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0440\u044f\u0434\u043e\u0432 \u041a\u0435\u043f\u043b\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f, \u043f\u043e-\u0432\u0438\u0434\u0438\u043c\u043e\u043c\u0443, \u0438\u043c\u0435\u0435\u0442 \u0430\u0441\u0442\u0440\u043e\u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0438 \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u043e\u0433\u043b\u0430\u0441\u0443\u0435\u0442\u0441\u044f \u0441 \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0440\u043d\u043e\u0433\u043e \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u0430. \u0418\u043c\u044f KOI \u0438\u043c\u0435\u0435\u0442 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0438 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 KNNNNN.DD. \u0426\u0435\u043b\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u0437\u0432\u0435\u0437\u0434\u0443; \u0434\u0432\u0443\u0437\u043d\u0430\u0447\u043d\u0430\u044f \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0439 \u0441 \u044d\u0442\u043e\u0439 \u0437\u0432\u0435\u0437\u0434\u043e\u0439. \u042d\u0442\u043e \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0440\u043d\u044b\u0439 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432 \u044d\u0442\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432 \u043e\u0442\u0447\u0435\u0442\u0435 DV, \u0438 \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043e\u043d \u043d\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u043e\u0442 \u0437\u0432\u0435\u0437\u0434\u044b-\u0445\u043e\u0437\u044f\u0438\u043d\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n\n**kepler_name:** \u0438\u043c\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0432 \u0432\u0438\u0434\u0435 \u00ab\u041a\u0435\u043f\u043b\u0435\u0440-\u041d\u00bb \u043f\u043b\u044e\u0441 \u0441\u0442\u0440\u043e\u0447\u043d\u0430\u044f \u0431\u0443\u043a\u0432\u0430, \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0443. \u0412 \u0446\u0435\u043b\u043e\u043c, \u044d\u0442\u0438 \u0446\u0438\u0444\u0440\u044b \u043b\u0435\u0433\u0447\u0435 \u0437\u0430\u043f\u043e\u043c\u043d\u0438\u0442\u044c, \u0447\u0435\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f KOI \u0438\u043b\u0438 KIC \/ KepID, \u0438 \u043e\u043d\u0438 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u044b \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0447\u0435\u0442\u043a\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u044b \u0438\u043b\u0438 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u044b \u043a\u0430\u043a \u043f\u043b\u0430\u043d\u0435\u0442\u044b - \u043d\u0430 \u0448\u0430\u0433 \u0432\u044b\u0448\u0435, \u0447\u0435\u043c \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430 \u043d\u0430 \u043f\u043b\u0430\u043d\u0435\u0442\u0443.\n\n**koi_disposition:** \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442\u044b. \u041e\u0434\u0438\u043d \u0438\u0437 \u041a\u0410\u041d\u0414\u0418\u0414\u0410\u0422\u041e\u0412, \u041b\u041e\u0416\u041d\u041e-\u041f\u041e\u041b\u041e\u0416\u0418\u0422\u0415\u041b\u042c\u041d\u042b\u0425, \u041d\u0415 \u0420\u0410\u0421\u041f\u041e\u041b\u041e\u0416\u0415\u041d\u041d\u042b\u0425 \u0438\u043b\u0438 \u041f\u041e\u0414\u0422\u0412\u0415\u0420\u0416\u0414\u0415\u041d\u041d\u042b\u0425 (\u0430\u043d\u0433\u043b. CANDIDATE, FALSE POSITIVE, NOT DISPOSITIONED or CONFIRMED).\n\n*\u041e\u0431\u044a\u0435\u043a\u0442\u044b \u043c\u0430\u0440\u043a\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043a\u0430\u043a CANDIDATE, \u0442\u0430\u043a \u043a\u0430\u043a \u0434\u043b\u044f  \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043c\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043d\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0438\u0445 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0430\u0437\u0435\u043c\u043d\u044b\u0445 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u043e\u0432. \u041f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0438\u043c \u0434\u0430\u0451\u0442\u0441\u044f \u0441\u0442\u0430\u0442\u0443\u0441 CONFIRMED. \u0421\u0442\u0430\u0442\u0443\u0441 NOT DISPOSITIONED \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0443 \u043f\u043e\u043a\u0430 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e.*\n\n**koi_pdisposition:** \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0435 \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430 \u041a\u0435\u043f\u043b\u0435\u0440\u0430. \u0422\u0438\u043f\u0438\u0447\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f: \u041b\u041e\u0416\u041d\u041e-\u041f\u041e\u041b\u041e\u0416\u0418\u0422\u0415\u041b\u042c\u041d\u041e\u0415, \u041d\u0415 \u0420\u0410\u0421\u041f\u041e\u041b\u041e\u0416\u0415\u041d\u041d\u041e\u0415 \u0438 \u041a\u0410\u041d\u0414\u0418\u0414\u0410\u0422 (\u0430\u043d\u0433\u043b. FALSE POSITIVE, NOT DISPOSITIONED and CANDIDATE). \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0444\u043b\u0430\u0433\u0430 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043e\u0446\u0435\u043d\u043a\u0430 KOI \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043a \u0431\u043e\u043b\u0435\u0435 \u0433\u043b\u0443\u0431\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u044f\u043c \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0438\u043a\u0441\u0435\u043b\u0435\u0439 \u0438 \u043a\u0440\u0438\u0432\u043e\u0439 \u0431\u043b\u0435\u0441\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u0430 \u041a\u0435\u043f\u043b\u0435\u0440\u0430 \u0438\u043b\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439. \u041d\u0415 \u0420\u0410\u0421\u041f\u041e\u041b\u041e\u0416\u0415\u041d\u041d\u041e\u0415 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u0441\u043f\u044b\u0442\u0430\u043d\u0438\u044f \u043f\u043e \u0443\u0442\u0438\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0435\u0449\u0435 \u043d\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u044b. \u041b\u041e\u0416\u041d\u041e-\u041f\u041e\u041b\u041e\u0416\u0418\u0422\u0415\u041b\u042c\u041d\u042b\u0419 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u0432 Batalha et al. (2012). \u041f\u043b\u0430\u043d\u0435\u0442\u0430\u0440\u043d\u044b\u0439 \u041a\u0410\u041d\u0414\u0418\u0414\u0410\u0422 \u043f\u0440\u043e\u0448\u0435\u043b \u0432\u0441\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0442\u0435\u0441\u0442\u044b, \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043b\u043e\u0436\u043d\u043e\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432, \u0445\u043e\u0442\u044f \u044d\u0442\u043e \u0430\u043f\u0440\u0438\u043e\u0440\u0438 \u043d\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u044b\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u044b \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b. \u0411\u0443\u0434\u0443\u0449\u0438\u0439 \u0442\u0435\u0441\u0442 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u044d\u0442\u043e\u0442 KOI \u043a\u0430\u043a \u043b\u043e\u0436\u043d\u044b\u0439 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041b\u043e\u0436\u043d\u044b\u0435 \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0442\u044c, \u043a\u043e\u0433\u0434\u0430:\n\n1) KOI \u0432 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0434\u0432\u043e\u0439\u043d\u0443\u044e \u0437\u0432\u0435\u0437\u0434\u0443 \u0432 \u0437\u043e\u043d\u0435 \u0437\u0430\u0442\u043c\u0435\u043d\u0438\u044f *(\u0437\u0430\u0442\u0435\u043c\u043d\u0435\u043d\u043d\u0443\u044e \u0434\u0432\u043e\u0439\u043d\u0443\u044e, \u0442\u043e \u0435\u0441\u0442\u044c, \u0442\u0430\u043a\u0443\u044e \u0437\u0432\u0451\u0437\u0434\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043e\u0434\u043d\u0430 \u0438\u0437 \u0437\u0432\u0451\u0437\u0434 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0442\u0440\u0435\u0437\u043a\u0435 \u043c\u0435\u0436\u0434\u0443 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0432\u0435\u0437\u0434\u043e\u0439 \u0438 \u0437\u0435\u043c\u043d\u044b\u043c \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u0435\u043b\u0435\u043c)*,\n\n2) \u043a\u0440\u0438\u0432\u0430\u044f \u0431\u043b\u0435\u0441\u043a\u0430 \u041a\u0435\u043f\u043b\u0435\u0440\u0430 \u0437\u0430\u0433\u0440\u044f\u0437\u043d\u0435\u043d\u0430 \u0434\u0432\u043e\u0439\u043d\u044b\u043c \u0444\u043e\u043d\u043e\u0432\u044b\u043c \u0437\u0430\u0442\u043c\u0435\u043d\u0438\u0435\u043c *(\u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442, \u043a\u043e\u0433\u0434\u0430 \u0433\u043b\u0430\u0432\u044b\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0435 \u0432 \u0437\u043e\u043d\u0435 \u0434\u0432\u043e\u0439\u043d\u043e\u0433\u043e \u0437\u0430\u0442\u043c\u0435\u043d\u0438\u044f, \u043d\u043e \u0435\u0433\u043e \u043a\u0440\u0438\u0432\u0430\u044f \u0441\u0432\u0435\u0442\u0430 \u043f\u0440\u043e\u044f\u0432\u043b\u044f\u0435\u0442 \u043d\u0435\u0433\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0444\u043e\u0440\u043c\u044b \u0437\u0430\u0442\u043c\u0435\u043d\u0438\u044f; \u0444\u043e\u0440\u043c\u044b \u0442\u0430\u043a\u0438\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0435\u0440\u0430\u0437\u043b\u0438\u0447\u0438\u043c\u044b \u0438\u0437-\u0437\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0441\u0438\u0433\u043d\u0430\u043b \/ \u0448\u0443\u043c \u043d\u0430 \u0442\u043e\u0447\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445)*,\n\n3) \u0438\u0437\u043c\u0435\u043d\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u0437\u0432\u0435\u0437\u0434 \u0437\u0430\u043f\u0443\u0442\u0430\u043d\u0430 \u0434\u043b\u044f \u043a\u043e\u0433\u0435\u0440\u0435\u043d\u0442\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0440\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043e\u0432,\n\n4) \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0430\u0440\u0442\u0435\u0444\u0430\u043a\u0442\u044b \u043f\u0443\u0442\u0430\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0440\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043e\u0432.\n\n\n**koi_tce_delivname** - \u0418\u043c\u044f \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u0432 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u043e\u0431\u044b\u0442\u0438\u0438 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0440\u043e\u0433\u0430 (TCE), \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0434\u0430\u043d\u043d\u044b\u043c TCE, \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0432 KOI.\n\n\u0422\u0430\u043a\u0436\u0435 \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u0434\u0435\u043b\u0435\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 **koi_score**:\n\n\u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 0 \u0438 1, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u041a\u041e\u0418. \u0414\u043b\u044f \u041a\u0410\u041d\u0414\u0418\u0414\u0410\u0422\u041e\u0412 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0432 \u0435\u0433\u043e \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u0434\u043b\u044f \u041b\u041e\u0416\u041d\u041e-\u041f\u041e\u041b\u041e\u0416\u0418\u0422\u0415\u041b\u042c\u041d\u042b\u0425 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043c\u0435\u043d\u044c\u0448\u0435\u0435 \u0434\u043e\u0432\u0435\u0440\u0438\u0435 \u043a \u044d\u0442\u043e\u043c\u0443 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044e.\n\n","35e5672c":"# \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 \u043f\u043e \u043a\u0443\u0440\u0441\u0443 DS4","00b90087":"\u0418\u0437 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u0438\u043c\u0435\u043d\u0430 (**kepler_name**) \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 - \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043d\u043d\u044b\u0445 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u043e\u0432 (CONFIRMED) \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442. \u0423 \u0442\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0433\u0434\u0435 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442 \u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043e, \u0438\u043c\u0435\u043d\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 (NaN). \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c.\n\n\u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 **kepler_name** \u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c - \u043e\u043d \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f.","19d952c4":"\u0413\u0440\u0430\u0432\u0438\u0442\u0430\u0446\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 3,5...5 *g* *(log(9,81) \u043f\u0435\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0440\u0430\u0432\u0435\u043d 1)*.","122d8909":"\u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0440\u0435\u0448\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0442\u043e \u0435\u0441\u0442\u044c, \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043a \u043a\u043b\u0430\u0441\u0441\u0443 CANDIDATE \u0438\u043b\u0438 FALSE POSITIVE.","d3bec21d":"\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0443\u0434\u0430\u0447\u043d\u044b\u043c\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430\u043c\u0438 \u0434\u043b\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f: \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f, \u0434\u0435\u0440\u0435\u0432\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0439, \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441, \u043c\u0435\u0442\u043e\u0434 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 (KNN). \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0441 \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c OneHot - \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u044b \u043d\u0435 \u0431\u0443\u0434\u0435\u043c, \u0442.\u043a. \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435 \u0441\u0442\u0430\u043b\u043e\u0441\u044c. \u0415\u0441\u043b\u0438 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0441\u044c \u043d\u0430\u0431\u043e\u0440, \u043e\u0431\u044a\u0451\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u043c.","b0646dd7":"# \u0421\u0434\u0435\u043b\u0430\u0435\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439 \u0438\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (\u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0447\u0443\u0436\u043e\u0433\u043e \u043a\u043e\u0434\u0430):\nhttps:\/\/www.kaggle.com\/ezietsman\/kepler-dataset-exploratory-analysis\n\nThanks :)","39440e68":"\u0422\u0430\u043a\u0436\u0435 \u0443 \u0434\u0432\u0443\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 **koi_teq_err1, koi_teq_err2** \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442. \u0423\u0434\u0430\u043b\u0438\u043c \u044d\u0442\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u044b.","87faef95":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0451 \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n\nkoi_fpflag_nt, koi_fpflag_ss``, koi_fpflag_co``, koi_fpflag_ec``: \u0434\u0438\u0441\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0438\u0435, \u043f\u0440\u043e\u0448\u0435\u043b \u043b\u0438 KOI \u0442\u0435\u0441\u0442, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 fpflag. \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f 0 \u0438 1.\n\n\u041f\u0440\u043e\u0431\u043e\u0432\u0430\u043b\u0430 \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u044d\u0442\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u043b\u0441\u044f \u043f\u043e\u0434\u043e\u0437\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u0441\u043e\u043a\u0438\u0439 accuracy: \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c 0.9723, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f 0.9844.\n\n![image.png](attachment:image.png)","c049c55a":"\u0414\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0438\u043c\u043f\u0443\u0442\u0430\u0446\u0438\u044e. \u0418\u043c\u043f\u0443\u0442\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c. \u0412 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0432\u043c\u0435\u043d\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c, \u043d\u043e \u043e\u0431\u044b\u0447\u043d\u043e \u043e\u043d\u043e \u0434\u0430\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0447\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u0447\u0435\u043c \u043f\u043e\u043b\u043d\u043e\u0435 \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u0430.","38ef84a3":"# \u0415\u0441\u0442\u044c 2 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f.\n\n1. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 **koi_pdisposition** \u0438 \u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043d\u0430\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u0442\u044c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u044b\u0435 CANDIDATE - \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438, \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c, \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0430\u0437\u0435\u043c\u043d\u044b\u0435 \u043e\u0431\u0441\u0435\u0440\u0432\u0430\u0442\u043e\u0440\u0438\u0438.\n\n2. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 **koi_disposition** \u0438 \u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043d\u0430\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u0442\u044c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u044b\u0435 CONFIRMED - \u043e\u0431\u044a\u0435\u043a\u0442\u044b.\n\n\u0422\u0430\u043a \u043a\u0430\u043a \u0434\u043e\u043b\u044f \u043f\u043e\u0433\u0440\u0435\u0448\u043d\u043e\u0441\u0442\u0438 \u043c\u0435\u0436\u0434\u0443 CANDIDATE \u0438 CONFIRMED \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043c\u0430\u043b\u0430 *(45\/(2293+45))\u0445100%=1,92%*,\n\u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0435 1. \u0412\u0435\u0434\u044c \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 CONFIRMED, \u0432 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439.","447f6cf2":"**KNN - 1 \u0446\u0438\u0444\u0440\u0430 \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.**","9d88a936":"\n\u041f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u0437\u0432\u0435\u0437\u0434 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443, \u0442\u043e \u0435\u0441\u0442\u044c \u0431\u043b\u0438\u0436\u0435 \u043a \u0432\u044b\u043f\u0443\u043a\u043b\u043e\u0441\u0442\u0438 \u041c\u043b\u0435\u0447\u043d\u043e\u0433\u043e \u041f\u0443\u0442\u0438. \u0417\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u043a \u0444\u043e\u0442\u043e \u0432 \u0441\u0430\u043c\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0441\u043d\u0438\u043c\u043e\u043a \u0441 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u043c \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430.\n\n\u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e, \u0441 \u043d\u0430\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u0435\u043c \u043f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0437\u0432\u0451\u0437\u0434 \u0432 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435 (\u0431\u043b\u0438\u0436\u0435 \u043a \u0446\u0435\u043d\u0442\u0440\u0443 \u0440\u0443\u043a\u0430\u0432\u0430 \u041c\u043b\u0435\u0447\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438), \u043f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043d\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 \u043d\u0435 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f. \u0421\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u044d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441\u043e \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439 \u0432 \u0431\u043e\u043b\u0435\u0435 \u043f\u043b\u043e\u0442\u043d\u043e\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0435 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430.","e5a181a9":"\u0418\u0437 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439 \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e **kepid** \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u0435\u0442 \u0441 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c **dec**.\n\n**dec** - KIC (Kepler Input Catalog) Declination - \u0412\u0445\u043e\u0434\u043d\u043e\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u041a\u0435\u043f\u043b\u0435\u0440\u0430: \u0444\u043e\u0442\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u0430\u043b\u0438\u0431\u0440\u043e\u0432\u043a\u0430 \u0438 \u0437\u0432\u0435\u0437\u0434\u043d\u0430\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f.","dfe7086e":"\u041c\u044b \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u043c\u043d\u043e\u0433\u0438\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u041f\u043e \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0447\u0430\u0441\u0442\u0438, \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u043d\u044b \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 **koi_score**. \u041a\u0430\u043a \u043c\u044b \u043f\u043e\u043c\u043d\u0438\u043c \u0438\u0437 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f, \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 0 \u0438 1, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430 \"\u041a\u0435\u043f\u043b\u0435\u0440\u0430\". \u0414\u043b\u044f \u041a\u0410\u041d\u0414\u0418\u0414\u0410\u0422\u041e\u0412 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0432 \u0435\u0433\u043e \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u0434\u043b\u044f \u041b\u041e\u0416\u041d\u041e-\u041f\u041e\u041b\u041e\u0416\u0418\u0422\u0415\u041b\u042c\u041d\u042b\u0425 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043c\u0435\u043d\u044c\u0448\u0435\u0435 \u0434\u043e\u0432\u0435\u0440\u0438\u0435 \u043a \u044d\u0442\u043e\u043c\u0443 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044e. \u041f\u043e \u0441\u0443\u0442\u0438, \u044d\u0442\u043e \u0438 \u0435\u0441\u0442\u044c \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043e\u0442\u043d\u043e\u0441\u044f\u0442 \u043a \u041a\u0410\u041d\u0414\u0418\u0414\u0410\u0422\u0410\u041c \u0438\u043b\u0438 \u041b\u041e\u0416\u041d\u041e-\u041f\u041e\u041b\u041e\u0416\u0418\u0422\u0415\u041b\u042c\u041d\u042b\u041c. \u0415\u0433\u043e \u0441\u0442\u043e\u0438\u0442 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430.\n\n**koi_tce_plnt_num** - \u043d\u043e\u043c\u0435\u0440 \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442\u044b, \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0442\u0430\u043a\u0436\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c.\n\n\u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 - \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f (\u043f\u0440\u043e\u0435\u0446\u0438\u0440\u0443\u0435\u043c\u043e\u0435 \u043d\u0430 \u043d\u0435\u0431\u043e \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0446\u0435\u043d\u0442\u0440\u043e\u043c \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0433\u043e \u0434\u0438\u0441\u043a\u0430 \u0438 \u0446\u0435\u043d\u0442\u0440\u043e\u043c \u0434\u0438\u0441\u043a\u0430 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0432 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438, \u043d\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043f\u043e \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u043c\u0443 \u0440\u0430\u0434\u0438\u0443\u0441\u0443), \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u0430\u044f \u0433\u043b\u0443\u0431\u0438\u043d\u0430, \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0440\u043d\u044b\u0439 \u0440\u0430\u0434\u0438\u0443\u0441, \u043f\u043e\u0442\u043e\u043a \u0438\u043d\u0441\u043e\u043b\u044f\u0446\u0438\u0438, \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u044b\u0439 \u0441\u0438\u0433\u043d\u0430\u043b-\u0448\u0443\u043c, \u0444\u043e\u0442\u043e\u0441\u0444\u0435\u0440\u043d\u0430\u044f \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u0437\u0432\u0435\u0437\u0434\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0441\u0442\u0435\u0439.\n","556c8181":"# \u041f\u043e\u0434\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0438\u0442\u043e\u0433\u043e\u0432.\n\n\u0412\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0438 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438.\n\n\u041b\u0443\u0447\u0448\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b - \u0443 Random Forest (0.8352), \u0437\u0430\u0442\u0435\u043c \u0438\u0434\u0435\u0442 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f (0.8055).\n\u041d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u044c \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c 0.8139. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, binary_accuracy \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u043b\u0430 0.9632 \u043d\u0430 47 \u044d\u043f\u043e\u0445\u0435.","b85aef54":"\u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 \u0438\u043c\u0435\u044e\u0442 \u0431\u043e\u043b\u0435\u0435 \u043d\u0438\u0437\u043a\u0438\u0435 \u043e\u0440\u0431\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0438\u043e\u0434\u044b. \u042d\u0442\u043e \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b, \u0447\u0435\u043c \u0431\u043b\u0438\u0436\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u043a \u0441\u0432\u043e\u0435\u0439 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0437\u0432\u0435\u0437\u0434\u0435, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043e\u043d\u0430 \u0437\u0430\u0442\u043c\u0438\u0442 \u0435\u0435 (\u0438, \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u0441 \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c\u044e \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c\u0441\u044f).","a58ecf56":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430 \"\u041a\u0435\u043f\u043b\u0435\u0440\u0430\" \u0432 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435.\n\n![](https:\/\/keplerscience.arc.nasa.gov\/images\/kepler-fov-full.jpg)\n\n\u041d\u0430 \u0444\u043e\u0442\u043e - \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \"\u041a\u0435\u043f\u043b\u0435\u0440\u0430\".\n\n\n"}}