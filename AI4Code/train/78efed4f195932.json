{"cell_type":{"c4f0212e":"code","43c917e8":"code","7b781a81":"code","87c3bc09":"code","1031bc7b":"code","39bcca66":"code","e9d68d18":"code","4090d695":"code","df17d29c":"code","78faada7":"code","f60025e2":"code","d710f271":"code","21e8e7c2":"code","6da3ed8e":"code","32c2a129":"code","f86857b7":"code","2a1ce133":"code","87c37912":"code","a46f4a84":"code","61255274":"markdown","3eb7acf5":"markdown","3ec3973c":"markdown"},"source":{"c4f0212e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nfrom wordcloud import WordCloud\n\nimport warnings\nwarnings.filterwarnings('ignore')","43c917e8":"data = pd.read_csv(\"..\/input\/top-spotify-songs-from-20102019-by-year\/top10s.csv\", encoding='ISO-8859-1') ","7b781a81":"data.head()","87c3bc09":"# Drop the unnamed column\n\ndata.drop('Unnamed: 0', axis=1, inplace=True)","1031bc7b":"data.columns","39bcca66":"msno.matrix(data)","e9d68d18":"# Renaming few columns to make more sense\n\ndata.rename(columns = {'top genre': 'top_genre', 'bpm': 'beats_per_minute', 'nrgy': 'energy', \n                       'dnce': 'danceability', 'dB': 'loudness(dB)', 'live': 'liveness', \n                       'val': 'valence', 'dur': 'length', 'acous': 'acousticness', \n                       'spch': 'speechiness', 'pop': 'popularity'}, inplace=True)","4090d695":"data.dtypes","df17d29c":"corr = data.corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nf, ax = plt.subplots(figsize=(15, 14))\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","78faada7":"sns.lineplot(x=\"energy\", y=\"acousticness\", data=data)","f60025e2":"sns.catplot(y=\"liveness\", x=\"loudness(dB)\", kind=\"swarm\", data=data)","d710f271":"sns.catplot(y=\"beats_per_minute\", x=\"year\", kind=\"boxen\", data=data)","21e8e7c2":"f, ax = plt.subplots(figsize=(6, 6))\ncmap = sns.cubehelix_palette(as_cmap=True, dark=0, light=1, reverse=True)\nsns.kdeplot(data.danceability, data.popularity, cmap=cmap, n_levels=60, shade=True);","6da3ed8e":"g = sns.jointplot(x=data.speechiness, y=data.length, data=data, kind=\"kde\", color=\"k\")\ng.plot_joint(plt.scatter, c=\"w\", s=30, linewidth=1, marker=\"+\")\ng.ax_joint.collections[0].set_alpha(0)\ng.set_axis_labels(\"$Speechiness$\", \"$Length$\")","32c2a129":"sns.jointplot(x=data.valence, y=data.popularity, data=data, kind=\"kde\");","f86857b7":"wordcloud = WordCloud(width = 1000, height = 600, max_font_size = 200, max_words = 150,\n                      background_color='white').generate(\" \".join(data.top_genre))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","2a1ce133":"data['top_genre'].value_counts().head(10).plot.pie(figsize=(15,10), autopct='%1.0f%%')","87c37912":"plt.figure(figsize=(16,8))\nplt.title('Most frequent Artist',fontsize=30)\nplt.xlabel('Artist', fontsize=20)\nplt.ylabel('Count', fontsize=20)\n\nsns.countplot(data.artist,order=pd.value_counts(data.artist).iloc[:15].index,palette=sns.color_palette(\"coolwarm\", 15))\n\nplt.xticks(size=20,rotation=90)\nplt.yticks(size=20)\nsns.despine(bottom=True, left=True)\nplt.show()","a46f4a84":"plt.figure(figsize=(16,8))\nplt.title('Most frequent Titles',fontsize=30)\nplt.xlabel('Title', fontsize=25)\nplt.ylabel('Count', fontsize=25)\n\nsns.countplot(data.title,order=pd.value_counts(data.title).iloc[:25].index,palette=sns.color_palette(\"magma\", 25))\n\nplt.xticks(size=20,rotation=90)\nplt.yticks(size=20)\nsns.despine(bottom=True, left=True)\nplt.show","61255274":"There are two types of features we have in our data which are:\n* Categorical\n* Numerical\n\nFirst we will see numerical features:","3eb7acf5":"**I hope you like this kernel and if you do then kindly upvote it!!**\n","3ec3973c":"Now we will move on to our categorical features:"}}