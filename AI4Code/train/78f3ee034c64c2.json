{"cell_type":{"1956a776":"code","13303afb":"code","afa94279":"code","b4c8ba58":"code","251ade6e":"code","7224d51b":"code","c0088f1e":"code","e5b0eea5":"code","33d982f8":"code","a4ed79ec":"code","cb561a2b":"code","13f0be9c":"code","cf0b7968":"code","51e03b52":"code","e0abf325":"code","70b015fd":"code","fe416033":"code","2b2f9240":"code","1f3868a5":"code","87ae7088":"code","20a2f886":"code","0cf65813":"code","39977263":"code","e59bddb1":"code","9537aa07":"code","bac8c56d":"code","359f0d72":"code","55426189":"code","471d00d5":"code","26eaefe6":"code","f28fe570":"code","89111310":"code","2812d2d3":"code","90cdb155":"code","d4542f44":"code","85fb60fd":"code","c56265e9":"code","9dfbb665":"markdown","803534e2":"markdown","5a060d06":"markdown","8357f987":"markdown","b3890f90":"markdown","56d4c86a":"markdown","1f59989b":"markdown","ae2ee703":"markdown","e50cd18a":"markdown","756f2df9":"markdown","84425abe":"markdown","1e5ffc54":"markdown","f4e52669":"markdown","8f8d6842":"markdown","57a21c93":"markdown","41b6bbfe":"markdown","186223b8":"markdown","e790c463":"markdown","5d062e70":"markdown","cb9bcad3":"markdown","0158e36d":"markdown","225cea95":"markdown","a8d33a73":"markdown","d8575b85":"markdown","9a1c4260":"markdown","5dd305ab":"markdown","726862e4":"markdown","6b9f9029":"markdown","8381332b":"markdown","8148db6e":"markdown","76375324":"markdown","5ac29e14":"markdown","ded94f99":"markdown","af4d8a79":"markdown","601f7047":"markdown","a20ebc47":"markdown","eb5ad1e5":"markdown","9b860efc":"markdown","224860c4":"markdown","b10df7ea":"markdown","9acfe2b5":"markdown","ba2c76c2":"markdown","b44438f5":"markdown","67f41757":"markdown","3d103d36":"markdown","76ebf188":"markdown","aaa950a3":"markdown","df8c344e":"markdown","13d6c0ff":"markdown","4ee34f5d":"markdown","7a3f44d1":"markdown","5eabe482":"markdown","070d4348":"markdown","8f92ec4a":"markdown"},"source":{"1956a776":"# importing necessary libraries for my exploration\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n%matplotlib inline","13303afb":"#loading data\ndf = pd.read_csv('..\/input\/noshowappointments\/KaggleV2-May-2016.csv')\n#show the first 3 rows\ndf.head(3)","afa94279":"#getting start information about the data using .info() \ndf.info()","b4c8ba58":"# getting some statistical information about the data using .describe()\ndf.describe()","251ade6e":"#checking the null values\ndf.isna().sum()","7224d51b":"# checking the duplicated values\ndf.duplicated().sum()","c0088f1e":"# remove age with negative sign\nfalse_item=df[df['Age'] < 0 ].index\nfalse_item\ndf.drop(index=false_item, inplace=True)","e5b0eea5":"# checking if the negative value still on the data\ndf[df.Age < 0]","33d982f8":"# remove none necessary columns for my analysis\ndf.drop(columns=['PatientId','AppointmentID','ScheduledDay', 'Alcoholism' ] , inplace=True)","a4ed79ec":"#checking new data shape\ndf.shape","cb561a2b":"# rename no-show column to Show and set up the right values to match the new meaning \ndf['show'] = pd.get_dummies(df['No-show']).No","13f0be9c":"df.head(1)","cf0b7968":"# drop the no-show column \ndf.drop(columns=['No-show'] , inplace=True)\n\n#checking \ndf.columns","51e03b52":"# turn every column name to lower case \ndf.columns = [i.lower() for i in df.columns]\n\n# checking \ndf.columns","e0abf325":"# extract days from appointment day column\n\n# 1 changing appointmentday to datetime\ndf.appointmentday = pd.to_datetime(df.appointmentday)\n\n# 2 create the new column for the week day \ndf['day']=df.appointmentday.dt.day_name()\n\n# 3- checking\ndf.columns","70b015fd":"# new data shape\ndf.shape","fe416033":"sns.countplot(x=df.show)","2b2f9240":"# distribution of age \nsns.displot(data = df, x='age')","1f3868a5":"# making the distribution of age more readable by increasing the bin size a bit\nbins = np.arange(0, 115+5, 5)\nsns.displot(data = df, x='age', bins= bins)\nplt.xticks(ticks=[0,10,20,30,40,50,60,70,80,90,110],labels=[0,10,20,30,40,50,60,70,80,90,110]);","87ae7088":"day_order =['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']\nsns.countplot(x=df.day, order =day_order )\n\nlocs, labels = plt.xticks() \n\ntype_counts = df['day'].value_counts()\n# there is 0 appointments done on sunday\n# adding sunday value so i can plot it \ntype_counts['Sunday'] = 0\n\n# loop through each pair of locations and labels\nfor loc, label in zip(locs, labels):\n\n    # get the text property for the label to get the correct count\n    count = type_counts[label.get_text()]\n    pct_string = '{:0.0f}'.format(count)\n\n    # print the annotation just below the top of the bar\n    plt.text(loc, count+2, pct_string, ha = 'center', color = 'black')","20a2f886":"sns.countplot(x=df.gender);","0cf65813":"plt.figure(figsize=(20,15))\nsns.countplot(x=df.neighbourhood, order= df.neighbourhood.value_counts().index)\nplt.xticks(rotation = 90);","39977263":"sns.countplot(x=df.scholarship)","e59bddb1":"sns.countplot(x=df.sms_received)","9537aa07":"fig , ax = plt.subplots(figsize=(7,10),nrows=2 )\n\n# ploting by the count of attending on each day of the week\n\nax[0].set_title(\"count of attendance based on day\")\nsns.countplot(data = df, x='day', order = day_order, hue='show', ax=ax[0])\n# ax[0].tick_params(rotation=10)\n\n# ploting by the percent of attending on each day of the week\n\nax[1].set_title(\"percent of attendance based on day\")\n# percent of attending on each day\nper_day=df.query('show == 1').day.value_counts()\/df.day.value_counts()\nsns.barplot(x=per_day.index, y=per_day.values, order=day_order, ax=ax[1])\n\nplt.tight_layout(h_pad=3)\n","bac8c56d":"sns.violinplot(data = df, x='show',y='age', inner='quartile')","359f0d72":"fig , ax = plt.subplots(figsize=(15,7),ncols=2 )\n\n# ploting by the count of attending for each gender\n\nax[0].set_title(\"count of attendance based on gender\")\nsns.countplot(data = df, x='gender', hue='show', ax=ax[0])\n# ax[0].tick_params()\n\n# ploting by the percent of attending for each gender\n\nax[1].set_title(\"percent of attendance based on gender\")\n# percent of attending for each gender\nperc_gender=df.query('show == 1').gender.value_counts()\/df.gender.value_counts()\nsns.barplot(x=perc_gender.index, y=perc_gender.values, ax=ax[1], color=sns.color_palette()[0])\nax[1].set_xlabel('gender');\n","55426189":"fig , ax = plt.subplots(figsize=(15,7),ncols=2 )\n\n# ploting by the count of attending based on having scholarship or no\n\nax[0].set_title(\"count of attendance based on having scholarship or no\")\nsns.countplot(data = df, x='scholarship', hue='show', ax=ax[0])\n# ax[0].tick_params()\n\n# ploting by the percent of attending based on having scholarship or no\n\nax[1].set_title(\"percent of attendance based on having scholarship or no\")\n\n# percent of attending based on having scholarship or no\nperc_scholarship=df.query('show == 1').scholarship.value_counts()\/df.scholarship.value_counts()\nsns.barplot(x=perc_scholarship.index, y=perc_scholarship.values, ax=ax[1], color=sns.color_palette()[0])\nax[1].set_xlabel('scholarship');\n","471d00d5":"fig , ax = plt.subplots(figsize=(15,7),ncols=2 )\n\n# ploting by the count of attending baesed on sms_received\n\nax[0].set_title(\"count of attendance based on sms_received\")\nsns.countplot(data = df, x='sms_received', hue='show', ax=ax[0])\n# ax[0].tick_params()\n\n# ploting by the percent of attending based on sms_received\n\nax[1].set_title(\"percent of attendance based on sms_received\")\n# percent of attending based on sms_received \nperc_sms_received=df.query('show == 1').sms_received.value_counts()\/df.sms_received.value_counts()\nsns.barplot(x=perc_sms_received.index, y=perc_sms_received.values, ax=ax[1], color=sns.color_palette()[0]);\nax[1].set_xlabel('sms_received');\nperc_sms_received, df.sms_received.value_counts()","26eaefe6":"fig , ax = plt.subplots(figsize=(20,20),nrows=2 )\n\n# ploting by the count of attending based on neighbourhood\n\nax[0].set_title(\"count of attendance based on neighbourhood\")\nsns.countplot(data = df, x='neighbourhood', hue='show', ax=ax[0], order =df.neighbourhood.value_counts().index )\nax[0].tick_params(rotation=90)\n\n# ploting by the percent of attending based on neighbourhood\n\nax[1].set_title(\"percent of attendance based on neighbourhood\")\n\n# percent of attending based on neighbourhood\nperc_neighbourhood=df.query('show == 1').neighbourhood.value_counts()\/df.neighbourhood.value_counts()\nsns.barplot(x=perc_neighbourhood.index, y=perc_neighbourhood.values, ax=ax[1], color=sns.color_palette()[0],order =df.neighbourhood.value_counts().index)\nax[1].set_xlabel('neighbourhood');\nax[1].tick_params(rotation=90)\nplt.tight_layout(h_pad=5)\n\n","f28fe570":"fig , ax = plt.subplots(figsize=(15,7),ncols=2 )\n\n# ploting by the count of attending baesed on having hipertension\n\nax[0].set_title(\"count of attendance based on having hypertension\")\nsns.countplot(data = df, x='hipertension', hue='show', ax=ax[0])\n# ax[0].tick_params()\n\n# ploting by the percent of attending based on having hipertension\n\nax[1].set_title(\"percent of attendance based on having hypertension\")\n# percent of attending based on having hipertension\nperc_hipertension=df.query('show == 1').hipertension.value_counts()\/df.hipertension.value_counts()\nsns.barplot(x=perc_hipertension.index, y=perc_hipertension.values, ax=ax[1], color=sns.color_palette()[0]);\nax[1].set_xlabel('hipertension');\ndf.hipertension.value_counts(), perc_hipertension ","89111310":"fig , ax = plt.subplots(figsize=(15,7),ncols=2 )\n\n# ploting by the count of attending baesed on having diabetes\n\nax[0].set_title(\"count of attendance based on having diabetes\")\nsns.countplot(data = df, x='diabetes', hue='show', ax=ax[0])\n# ax[0].tick_params()\n\n# ploting by the percent of attending based on having diabetes\n\nax[1].set_title(\"percent of attendance based on having diabetes\")\n# percent of attending based on having diabetes\nperc_diabetes=df.query('show == 1').diabetes.value_counts()\/df.diabetes.value_counts()\nsns.barplot(x=perc_diabetes.index, y=perc_diabetes.values, ax=ax[1], color=sns.color_palette()[0]);\nax[1].set_xlabel('diabetes');\ndf.diabetes.value_counts(), perc_diabetes ","2812d2d3":"# ploting by the percent of attending based on having handicap\n\nplt.title(\"percent of attendance based on having handicap\")\n# percent of attending based on having handicap\nperc_handicap=df.query('show == 1').handcap.value_counts()\/df.handcap.value_counts()\nsns.barplot(x=perc_handicap.index, y=perc_handicap.values, color=sns.color_palette()[0]);\nplt.xlabel('handicap');\nperc_handicap ","90cdb155":"plt.figure(figsize=(10,7))\nsns.violinplot(data = df, x='show', y='age', hue='gender', inner = 'quartile')\n# plt.legend(loc=(1,.5))","d4542f44":"plt.figure(figsize=(10,7))\nsns.violinplot(data = df, x='show', y='age', hue='scholarship', inner ='quartile' )\n# plt.legend(loc=(1,.5))","85fb60fd":"plt.figure(figsize=(10,7))\nsns.violinplot(data = df, x='show', y='age', hue='hipertension', inner = 'quartile')\n# plt.legend(loc=(1,.5))","c56265e9":"plt.figure(figsize=(10,7))\n\nsns.violinplot(data = df, x='show', y='age', hue='diabetes', inner = 'quartile')\n# plt.legend(loc=(1,.5))","9dfbb665":"## What is the main goal from using this dataset? \n#### My main goal is to see if there is any feature that makes the patient decide to attend the appointment day or no","803534e2":"### What is the difference in number of patients who have received SMS and who didn't ?\n","5a060d06":"#### III- If the patient is handicap","8357f987":"### Is there any difference in appointment count based on neighbourhood?","b3890f90":"### Is there any difference in appointment count based on weekday?","56d4c86a":"> patients with age of 60 on average they are more likely to have Hypertension","1f59989b":"## Data Cleaning","ae2ee703":"### Is there any difference in appointment count based on gender?\n","e50cd18a":"### Is receiving SMS affect the attendance?\n","756f2df9":"### Do age and having hypertension illness together affect the attendance rate ?","84425abe":"> no segnificant difference in attending based on each gender.","1e5ffc54":"> males on young age from 1 to age of 13 they tend to attend the appointment dates more than females\n\n> females start to be more active at caring for their health from the age of 20 and after ","f4e52669":"> from here it seems that the attendance from each neighbourhood is approximately very close to each other ( around 80% arrendance rate)\n\n> that doesn't give a big clue for attending based on the neighbourhood ","8f8d6842":"### Do age and having diabetes illness together affect the attendance rate ?","57a21c93":"### Do the age affect the attendance ?","41b6bbfe":"### What is the number of patient who did show and who didn't show on the appointment day ?\n","186223b8":"> we can see that the number of patients who didn't receive SMS is more than who have received SMS","e790c463":"> 7943 of the patients have diabetes and around 82% of them attend the appointment day\n\n> 102583 of the patients don't have diabetes and around 79% of them attend the appointment day\n\n> from this it seems that this gives us a big clue that if the patient is affected by diabetes,\n> there is a very high chance (82%) that this patient will attend the appointment date","5d062e70":"> the result is interesting maybe there is a reason for the whether the patient will attend or no","cb9bcad3":"# Exploratory Data Analysis","0158e36d":"> 21801 of the patients have hipertension and around 83% of them attend the appointment day\n\n> 88725 of the patients don't have hipertension and 79% of them attend the appointment day\n\n> from this it seems that this gives us a big clue that if the patient is affected by hipertension,\n> there is a very high chance (83%) that this patient will attend the appointment date\n","225cea95":"### no duplicated values found","a8d33a73":"> from here we see over the differente handicap levels there is a very high chance(82%, 80%, 77%, 67%) of attending the appointment day\n\n> this tells us that a patient with handicap level specially level 1,2 and 3 are most likely to attend on the appointment day ","d8575b85":"### Do neighbourhood affect the attendance?\n","9a1c4260":"### What is the number of making an appointment based on Age?\n","5dd305ab":"> From here we can see that the more the age increases the less it get to make an appointment \n\n> also seems that age around 1-5 years got the most appointments , then around age of 60 the appointments increase again.\n\n> around the age of 12-15 seems that the appointment times decrease a bit ","726862e4":"> we can see that Jaroim Camburi and Maria Ortiz neighbourhoods have the most appointment dates ","6b9f9029":"> we can see that the number of patients who don't have a scholarship is more than who have scholarship","8381332b":"#### I- If the patient have hypertension.","8148db6e":"## Univariate_Exploration","76375324":"### Do the gender affect the attendance ?\n","5ac29e14":"### now let's see if there is something affect the attendance of patients in the appointment day","ded94f99":"## General Properties","af4d8a79":"### Do age and scholarship together affect the attendance rate ?","601f7047":"### Do scholarship affect the attendance ?\n","a20ebc47":"## Multivariate_Exploration\n#### The main thing I want to explore in this part of the analysis is how [gender, scholarship, hipertension, diabetes ] play into the relationship between Show and Age.","eb5ad1e5":"# Medical Appointment No Shows\n","9b860efc":"> from here we see there is (0) appointment date on Sunday and only (39) appointment date on Saturday they could be very special cases only\n\n> that tells us that there is no appointment dates are made on Sunday or Saturday\n\n> most busy days are Wednesday and Tuesday","224860c4":"## Bivariate_Exploration","b10df7ea":"> no segnificant difference in attending based on each day of the week.","9acfe2b5":"# Data Wrangling","ba2c76c2":"### Do gender and age together affect the attendance rate ?\n","b44438f5":"#### so over all from the 3 steps above we see that if the patient have either hypertension or diabetes or handicap, this will make this patient decide to attend the appointment day","67f41757":"## What is the structure of the dataset?\n> There are 110526 patient in the dataset with 11 feature (gender, appointmentday, age, neighbourhood, scholarship,\n       hipertension, diabetes, handcap, sms_received, show, day). Most variables are qualitative ","3d103d36":"> patients with age of 60 on average they are more likely to have Diabetes","76ebf188":"#### II- If the patient have diabetes","aaa950a3":"### What is the difference in number of patients who have scholarship and who don't have?","df8c344e":"> based on this plot we can see that females care more for their health than males","13d6c0ff":"> from 75044 patient who didn't receive sms there is 83% of them attend the appointment day\n\n> from 35482 patient who received sms there is 72% of them attend the appointment day\n\n> this can help us to say whether if this patient will show or no based on recieving sms or no ","4ee34f5d":"### Do the day of the week affect the attendance ?","7a3f44d1":"> it seems that age affect the likelihood of attending the appointment day\n\n> around 20 years old patients got the most none show number \n\n> around 10 years old patients tends to attend more and around 60 years old too","5eabe482":"### no null values found","070d4348":"### Do health condition affect the attendance rate","8f92ec4a":"> it seems that patients with no scholarship tend to attend the appointments more than those with scholarship\n\n> having scholarship or no might help us to tell if the patient will attend or no"}}