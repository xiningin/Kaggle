{"cell_type":{"29f6ccba":"code","b0d5c1f5":"code","8cb3e9ef":"code","2e232cbe":"code","fefc2b2f":"code","a4febd5e":"code","f6bc8c74":"code","d1b3f0a1":"code","dd7c5a08":"code","cd5c8a46":"code","9a69f875":"code","6da6a3f1":"code","6f184580":"code","7dc56e14":"code","1b4a4a7c":"code","31efb626":"code","be734f35":"code","774d6db5":"code","b6fd72c6":"code","411dd750":"code","3f74610b":"code","1180464f":"code","79e141ab":"code","035b7442":"code","60808074":"code","d4e31373":"code","117f9f35":"code","ae67ea2a":"code","73ff3abf":"code","78cabbca":"code","598661b7":"code","415f5d5b":"code","32b3409c":"code","8d6f44d6":"code","2f3b3ed6":"code","0b206b85":"code","1f219121":"code","ad2e8c7a":"code","9b75aace":"code","2eb568e6":"code","0ddf73a3":"code","95f6d8e0":"code","63f409d9":"code","8baa0a6e":"code","d43a2f16":"code","30573644":"code","b454244d":"code","f7be5c66":"code","2f12d1bf":"code","ab184544":"code","d571ca0f":"code","76d8bf5a":"code","cf76c8ab":"code","37f2277f":"code","3d73538a":"code","f426f63d":"code","f7c1c6c2":"code","0e55bdc2":"code","672d0611":"code","591431d5":"code","1ea038a6":"code","cc6dc3c3":"markdown","f3bd71c2":"markdown","7bf50e24":"markdown","35fb0073":"markdown","ddbac830":"markdown","0da349c4":"markdown","f4578fb4":"markdown","3ae72676":"markdown","7fffe075":"markdown","caca6fc6":"markdown","bc1f95b7":"markdown"},"source":{"29f6ccba":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","b0d5c1f5":"df = pd.read_csv(\"..\/input\/fifa-2018-match-statistics\/FIFA 2018 Statistics.csv\")\ndf.head()","8cb3e9ef":"df.shape","2e232cbe":"df.describe()","fefc2b2f":"df.describe(include='O')","a4febd5e":"df.isnull().sum()","f6bc8c74":"df.drop(['Own goals','Own goal Time','Date'],axis=1, inplace=True)","d1b3f0a1":"df['1st Goal'] = df['1st Goal'].fillna(df['1st Goal'].mean())","dd7c5a08":"df.isnull().sum()","cd5c8a46":"df.info()","9a69f875":"plt.figure(figsize=(8,8))\nsns.countplot(y=df['Team'])","6da6a3f1":"plt.figure(figsize=(8,8))\nsns.countplot(y=df['Opponent'])","6f184580":"sns.histplot(df['Goal Scored'])","7dc56e14":"sns.histplot(df['Ball Possession %'])","1b4a4a7c":"sns.histplot(df['Attempts'])","31efb626":"sns.histplot(df['On-Target'])","be734f35":"sns.distplot(df['1st Goal'])","774d6db5":"from sklearn.preprocessing import LabelEncoder\nLE = LabelEncoder()","b6fd72c6":"df['Man of the Match'] = LE.fit_transform(df['Man of the Match'])\ndf['PSO'] = LE.fit_transform(df['PSO'])","411dd750":"round_value = df['Round'].unique()","3f74610b":"df.head()","1180464f":"round_mapping = {label: index for index, label in enumerate(round_value)}\nround_mapping","79e141ab":"df['Round'] = df['Round'].apply(lambda x: round_mapping[x])","035b7442":"df.head()","60808074":"df['Opponent'] = df['Opponent'].apply(lambda x: \"app_\"+ x)","d4e31373":"team = pd.get_dummies(df['Team'],drop_first=True)\nopponent = pd.get_dummies(df['Opponent'],drop_first=True)","117f9f35":"df = pd.concat([df,team,opponent],axis=1)","ae67ea2a":"df.head()","73ff3abf":"df = df.drop(['Team','Opponent'],axis=1)","78cabbca":"df.columns","598661b7":"from sklearn.preprocessing import RobustScaler\nRBS = RobustScaler()","415f5d5b":"X = df.drop('Man of the Match',axis=1)\ny = df['Man of the Match']","32b3409c":"X = pd.DataFrame(RBS.fit_transform(X),columns=X.columns)","8d6f44d6":"X.head()","2f3b3ed6":"from sklearn.model_selection import train_test_split","0b206b85":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=42)","1f219121":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neural_network import MLPClassifier","ad2e8c7a":"LR = LogisticRegression()\nRFC = RandomForestClassifier()\nMPC = MLPClassifier(hidden_layer_sizes=(32,32))","9b75aace":"LR.fit(X_train,y_train)","2eb568e6":"print(LR.score(X_test,y_test))","0ddf73a3":"y_predLR = LR.predict(X_test)","95f6d8e0":"from sklearn.metrics import f1_score,classification_report,confusion_matrix","63f409d9":"print(confusion_matrix(y_test,y_predLR))\nprint(classification_report(y_test,y_predLR))","8baa0a6e":"print(f1_score(y_test,y_predLR))","d43a2f16":"RFC.fit(X_train,y_train)","30573644":"print(RFC.score(X_test,y_test))","b454244d":"y_predRFC = RFC.predict(X_test)","f7be5c66":"print(confusion_matrix(y_test,y_predRFC))","2f12d1bf":"print(classification_report(y_test,y_predRFC))","ab184544":"print(f1_score(y_test,y_predRFC))","d571ca0f":"MPC.fit(X_train,y_train)","76d8bf5a":"print(MPC.score(X_test,y_test))","cf76c8ab":"y_predMPC = MPC.predict(X_test)","37f2277f":"print(confusion_matrix(y_test,y_predMPC))","3d73538a":"print(classification_report(y_test,y_predMPC))","f426f63d":"print(f1_score(y_test,y_predMPC))","f7c1c6c2":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","0e55bdc2":"Input = tf.keras.Input(shape=(83,))\nx = tf.keras.layers.Dense(32,activation='relu')(Input)\nx = tf.keras.layers.Dense(32,activation='relu')(x)\nOutput = tf.keras.layers.Dense(2,activation='relu')(x)\n\ntf_model = tf.keras.Model(inputs=Input,outputs=Output)","672d0611":"tf_model.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","591431d5":"tf_model.fit(X_train,y_train,batch_size=32,epochs=10,validation_split=0.2)","1ea038a6":"tf_model.evaluate(X_test,y_test)","cc6dc3c3":"# Using Label Encoder and One Hot Encoder","f3bd71c2":"# Using Robust Scaler","7bf50e24":"# Using Random Forest Classifier","35fb0073":"# Using Logistic Regression","ddbac830":"# check Null values","0da349c4":"# Importing Libraries","f4578fb4":"# Using Multi-Perceptron Classifier","3ae72676":"# Splitting Data","7fffe075":"# Using Tensorflow","caca6fc6":"# Loading Dataset","bc1f95b7":"# Exploratory Data Analysis"}}