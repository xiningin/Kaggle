{"cell_type":{"e5211bfd":"code","247ac071":"code","20f0179c":"code","fb5e5e45":"code","e5381b8f":"code","986ab5d5":"code","49ebab1b":"code","189a7e1d":"code","68f02996":"code","6a466f12":"code","cbbfe5ff":"code","5af70b84":"code","e5fb35d7":"code","e2c46855":"code","782d9f49":"code","fd2894fe":"code","33017b7e":"code","fed5f70f":"code","958f5aa1":"code","f22f04cc":"code","0e30a866":"code","84d808ee":"code","c2349362":"code","d143e64f":"code","56c254ce":"code","cfe3cef7":"code","7c70ffc8":"code","dedc5d95":"code","74de8f92":"code","baf8f075":"code","d2680dff":"code","355e2e48":"code","cdf2338d":"code","adf9d6f9":"code","bd129912":"code","b565ffc9":"code","03fb2d54":"code","89742e2e":"code","86a54e90":"code","25e7e7d5":"code","ce5bf58c":"code","4fed7f8f":"code","a74df352":"code","d5924410":"code","03076a90":"code","b524d3f9":"code","7d5b409a":"code","f61df065":"code","c8aa8514":"code","7fe3a2b6":"code","a7cfb742":"code","e4eb2c3f":"code","6148693a":"code","183c7180":"code","ffb00426":"code","f698a16f":"code","9a9a650d":"code","40d6153a":"code","307c549c":"code","6c892648":"code","8cb9ca6e":"code","00ec56e8":"markdown","9011efed":"markdown","8fc01936":"markdown","3916d95d":"markdown","780ab8bd":"markdown","44eb11b7":"markdown","1db4f8d5":"markdown","2117fb5a":"markdown","bc83672f":"markdown","716fae47":"markdown","c76c9689":"markdown","aceb9228":"markdown","e17d1e01":"markdown","0b9fc473":"markdown","7908d7ac":"markdown","a570d6ab":"markdown","c5133fb0":"markdown","9a8de610":"markdown","1960f7e6":"markdown","a1594373":"markdown","fe03d2f4":"markdown","eab26e6e":"markdown","41bd81bb":"markdown","b47a5cde":"markdown","3bbce15c":"markdown","0e3a55c0":"markdown","50918f2d":"markdown","4719655e":"markdown","c61d3cb1":"markdown","f87f10a3":"markdown","95451799":"markdown","eb1ffa40":"markdown","cc82963c":"markdown","b8a00f32":"markdown","c0b74b1f":"markdown"},"source":{"e5211bfd":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\nimport math\nimport numpy as np\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegressionCV, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neighbors import NearestNeighbors\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\nimport itertools\nimport scipy.stats\nfrom scipy import stats\nimport math as mth","247ac071":"heart_disease_df = pd.read_csv('..\/input\/heart.csv', sep = ',',error_bad_lines = False)","20f0179c":"heart_disease_df.info()\nprint('Data shape: ', heart_disease_df.shape)","fb5e5e45":"heart_disease_df.head()","e5381b8f":"heart_disease_df[['age', 'trestbps', 'chol', 'thalach', 'oldpeak']].describe()","986ab5d5":"plt.figure(figsize = (20, 40))\nplt.suptitle('Qualitative features exploration', y = 0.90, fontsize = 16)\ngs = gridspec.GridSpec(5, 2)\n\nplt.subplot(gs[0, :])\nax = sns.countplot(heart_disease_df['target'].replace({1 : 'Yes', 0 : 'No'}), palette = 'mako', order = ['Yes', 'No'])\nplt.xlabel('Heart disease')\nplt.ylabel('Count')\nplt.title('Distribution of diagnosis')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 0])\nax = sns.countplot(heart_disease_df['sex'].replace({1: 'Male', 0: 'Female'}), palette = 'mako')\nplt.xlabel('Sex')\nplt.ylabel('Count')\nplt.title('Distribution of sex')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 1])\nax = sns.countplot(heart_disease_df.cp, palette = 'mako', order = [0, 2, 1, 3])\nplt.xlabel('Chest pain type')\nplt.ylabel('Count')\nplt.title('Distribution of chest pain type')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[2, 0])\nax = sns.countplot(heart_disease_df['fbs'].replace({1 : 'Yes', 0 : 'No'}), palette = 'mako', order = ('No', 'Yes'))\nplt.xlabel('Fasting blood sugar (>120 mg\/dl)')\nplt.ylabel('Count')\nplt.title('Distribution of fasting blood sugar')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[2, 1])\nax = sns.countplot(heart_disease_df['restecg'], palette = 'mako', order = [1, 0, 2])\nplt.xlabel('Resting electrocardiographic results')\nplt.ylabel('Count')\nplt.title('Distribution of resting electrocardiographic results')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[3, 0])\nax = sns.countplot(heart_disease_df['exang'].replace({1: 'Yes', 0: 'No'}), palette = 'mako')\nplt.xlabel('Exercise induced angina')\nplt.ylabel('Count')\nplt.title('Distribution of exercise induced angina')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[3, 1])\nax = sns.countplot(heart_disease_df['slope'], palette = 'mako', order = [2, 1, 0])\nplt.xlabel('The slope of the peak exercise ST segment')\nplt.ylabel('Count')\nplt.title('Distribution of slope of the peak exercise ST segment')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[4, 0])\nax = sns.countplot(heart_disease_df['ca'], palette = 'mako')\nplt.xlabel('CA')\nplt.ylabel('Count')\nplt.title('Distribution ca')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[4, 1])\nax = sns.countplot(heart_disease_df['thal'], palette = 'mako', order = [2, 3, 1, 0])\nplt.xlabel('Thal')\nplt.ylabel('Count')\nplt.title('Distribution of thal')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","49ebab1b":"plt.figure(figsize = (20, 40))\nplt.suptitle('Quantitative features exploration', y = 0.90, fontsize = 16)\ngs = gridspec.GridSpec(5, 2)\n\nplt.subplot(gs[0, 0])\nax = sns.distplot(heart_disease_df['age'], color = '#3daea5')\nplt.xlabel('Age')\nplt.title('Age distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[0, 1])\nax = sns.distplot(heart_disease_df['trestbps'], color = '#3daea5')\nplt.xlabel('Resting blood pressure')\nplt.title('Resting blood pressure distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 0])\nax = sns.distplot(heart_disease_df['chol'], color = '#3daea5')\nplt.xlabel('Serum cholestoral in mg\/dl')\nplt.title('Serum cholestoral in mg\/dl distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 1])\nax = sns.distplot(heart_disease_df['thalach'], color = '#3daea5')\nplt.xlabel('Maximum heart rate achieved')\nplt.title('Maximum heart rate achieved distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[2, 0])\nax = sns.distplot(heart_disease_df['oldpeak'], color = '#3daea5')\nplt.xlabel('ST depression induced by exercise relative to rest')\nplt.title('ST depression induced by exercise relative to rest distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","189a7e1d":"plt.figure(figsize = (20, 40))\nplt.suptitle('Target exploration (qualitative features)', y = 0.90, fontsize = 16)\ngs = gridspec.GridSpec(5, 2)\n\nplt.subplot(gs[0, 0])\nax = sns.countplot(heart_disease_df['sex'].replace({0: 'F', 1: 'M'}), palette = 'mako', hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('Sex')\nplt.ylabel('Count')\nplt.title('Distribution of diagnosis')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[0, 1])\nax = sns.countplot(heart_disease_df.cp, palette = 'mako', order = [0, 2, 1, 3], hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('Chest pain type')\nplt.ylabel('Count')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nplt.title('Distribution of chest pain type')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 0])\nax = sns.countplot(heart_disease_df['fbs'].replace({1 : 'Yes', 0 : 'No'}), palette = 'mako', order = ('No', 'Yes'), hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('Fasting blood sugar (>120 mg\/dl)')\nplt.ylabel('Count')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nplt.title('Distribution of fasting blood sugar')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 1])\nax = sns.countplot(heart_disease_df['restecg'], palette = 'mako', order = [1, 0, 2], hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('Resting electrocardiographic results')\nplt.ylabel('Count')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nplt.title('Distribution of resting electrocardiographic results')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[2, 0])\nax = sns.countplot(heart_disease_df['exang'].replace({1: 'Yes', 0: 'No'}), palette = 'mako', hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('Exercise induced angina')\nplt.ylabel('Count')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nplt.title('Distribution of exercise induced angina')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[2, 1])\nax = sns.countplot(heart_disease_df['slope'], palette = 'mako', order = [2, 1, 0], hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('The slope of the peak exercise ST segment')\nplt.ylabel('Count')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nplt.title('Distribution of slope of the peak exercise ST segment')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[3, 0])\nax = sns.countplot(heart_disease_df['ca'], palette = 'mako', hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('CA')\nplt.ylabel('Count')\nplt.title('Distribution ca')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[3, 1])\nax = sns.countplot(heart_disease_df['thal'], palette = 'mako', order = [2, 3, 1, 0], hue = heart_disease_df['target'].replace({0:'No', 1:'Yes'}))\nplt.xlabel('Thal')\nplt.ylabel('Count')\nplt.legend(title = 'Heart disease', loc = 1, frameon = False)\nplt.title('Distribution of thal')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","68f02996":"plt.figure(figsize = (20, 40))\nplt.suptitle('Target exploration (quantitative features)', y = 0.90, fontsize = 16)\ngs = gridspec.GridSpec(5, 2)\n\nplt.subplot(gs[0, 0])\nsns.boxplot(heart_disease_df['target'].replace({0:'No', 1:'Yes'}), heart_disease_df['age'], palette = 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('Age')\n\nplt.subplot(gs[0, 1])\nsns.boxplot(heart_disease_df['target'].replace({0:'No', 1:'Yes'}), heart_disease_df['chol'], palette = 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('Serum cholestoral in mg\/dl')\n\nplt.subplot(gs[1, 0])\nsns.boxplot(heart_disease_df['target'].replace({0:'No', 1:'Yes'}), heart_disease_df['thalach'], palette = 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('Maximum heart rate achieved')\n\n\nplt.subplot(gs[1, 1])\nsns.boxplot(heart_disease_df['target'].replace({0:'No', 1:'Yes'}), heart_disease_df['oldpeak'], palette = 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('ST depression induced by exercise relative to rest')","6a466f12":"plt.figure(figsize = (20, 40))\nplt.suptitle('Sex exploration (qualitative features)', y = 0.90, fontsize = 16)\ngs = gridspec.GridSpec(5, 2)\n\nplt.subplot(gs[0, 0])\nax = sns.countplot(heart_disease_df['target'].replace({0:'No', 1:'Yes'}), palette = 'mako', hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('Heart disease')\nplt.ylabel('Count')\nplt.title('Distribution of diagnosis')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[0, 1])\nax = sns.countplot(heart_disease_df.cp, palette = 'mako', order = [0, 2, 1, 3], hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('Chest pain type')\nplt.ylabel('Count')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nplt.title('Distribution of chest pain type')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 0])\nax = sns.countplot(heart_disease_df['fbs'].replace({1 : 'Yes', 0 : 'No'}), palette = 'mako', order = ('No', 'Yes'), hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('Fasting blood sugar (>120 mg\/dl)')\nplt.ylabel('Count')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nplt.title('Distribution of fasting blood sugar')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 1])\nax = sns.countplot(heart_disease_df['restecg'], palette = 'mako', order = [1, 0, 2], hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('Resting electrocardiographic results')\nplt.ylabel('Count')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nplt.title('Distribution of resting electrocardiographic results')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[2, 0])\nax = sns.countplot(heart_disease_df['exang'].replace({1: 'Yes', 0: 'No'}), palette = 'mako', hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('Exercise induced angina')\nplt.ylabel('Count')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nplt.title('Distribution of exercise induced angina')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[2, 1])\nax = sns.countplot(heart_disease_df['slope'], palette = 'mako', order = [2, 1, 0], hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('The slope of the peak exercise ST segment')\nplt.ylabel('Count')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nplt.title('Distribution of slope of the peak exercise ST segment')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[3, 0])\nax = sns.countplot(heart_disease_df['ca'], palette = 'mako', hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('CA')\nplt.ylabel('Count')\nplt.title('Distribution ca')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[3, 1])\nax = sns.countplot(heart_disease_df['thal'], palette = 'mako', order = [2, 3, 1, 0], hue = heart_disease_df['sex'].replace({0: 'F', 1: 'M'}))\nplt.xlabel('Thal')\nplt.ylabel('Count')\nplt.legend(title = 'Sex', loc = 1, frameon = False)\nplt.title('Distribution of thal')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","cbbfe5ff":"plt.figure(figsize = (20, 40))\nplt.suptitle('Sex exploration (quantitative features)', y = 0.90, fontsize = 16)\ngs = gridspec.GridSpec(5, 2)\n\nplt.subplot(gs[0, 0])\nax = sns.boxplot(heart_disease_df['sex'].replace({0:'F', 1:'M'}), heart_disease_df['age'], palette = 'mako')\nplt.xlabel('Sex')\nplt.ylabel('Age')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[0, 1])\nax = sns.boxplot(heart_disease_df['sex'].replace({0:'F', 1:'M'}), heart_disease_df['chol'], palette = 'mako')\nplt.xlabel('Sex')\nplt.ylabel('Serum cholestoral in mg\/dl')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 0])\nax = sns.boxplot(heart_disease_df['sex'].replace({0:'F', 1:'M'}), heart_disease_df['thalach'], palette = 'mako')\nplt.xlabel('Sex')\nplt.ylabel('Maximum heart rate achieved')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 1])\nax = sns.boxplot(heart_disease_df['sex'].replace({0:'F', 1:'M'}), heart_disease_df['oldpeak'], palette = 'mako')\nplt.xlabel('Sex')\nplt.ylabel('ST depression induced by exercise relative to rest')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","5af70b84":"def chi2_test(df, features_list, feature_name_2):\n    result = []\n    for feature in features_list:\n        if feature == feature_name_2:\n            continue\n        else:\n            chi_2_test_array = []\n            array = np.array(pd.crosstab(df[feature], df[feature_name_2]))\n            lenght = array.shape[0]\n            for i in range(lenght):\n                chi_2_test_array.append(array[i, :])\n            chi_2, p_val, dof , ex = stats.chi2_contingency(chi_2_test_array, lambda_=\"log-likelihood\")    \n            row = [feature + ' - ' + feature_name_2,'{0:.3f}'.format(chi_2), dof, '{0:.3f}'.format(p_val)]\n            result.append(row)\n    chi_2_test_df = pd.DataFrame(result, columns = ['Features', 'chi_2', 'dof', 'p_val'])\n    chi_2_test_df['p_val'] = chi_2_test_df['p_val'].astype('float64')\n    return chi_2_test_df","e5fb35d7":"def color_p_val_red(val):\n    if val > 0.01:\n         color = 'red'\n    else:\n        color = 'black'\n    return 'color: %s' % color","e2c46855":"def color_negative_pos_red(val):\n    if val < 0:\n         color = 'red'\n    else:\n        color = 'green'\n    return 'color: %s' % color","782d9f49":"features_list = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal', 'target']\nchi2_test_target_df = chi2_test(heart_disease_df, features_list, 'target')\nchi2_test_target_df.style.applymap(color_p_val_red,  subset = ['p_val'])","fd2894fe":"chi2_test_sex_df = chi2_test(heart_disease_df, features_list, 'sex')\nchi2_test_sex_df.style.applymap(color_p_val_red,  subset = ['p_val'])","33017b7e":"chi2_test_cp_df = chi2_test(heart_disease_df, features_list, 'cp')\nchi2_test_cp_df.style.applymap(color_p_val_red,  subset = ['p_val'])","fed5f70f":"chi2_test_fbs_df = chi2_test(heart_disease_df, features_list, 'fbs')\nchi2_test_fbs_df.style.applymap(color_p_val_red,  subset = ['p_val'])","958f5aa1":"chi2_test_fbs_df = chi2_test(heart_disease_df, features_list, 'restecg')\nchi2_test_fbs_df.style.applymap(color_p_val_red,  subset = ['p_val'])","f22f04cc":"chi2_test_fbs_df = chi2_test(heart_disease_df, features_list, 'thal')\nchi2_test_fbs_df.style.applymap(color_p_val_red,  subset = ['p_val'])","0e30a866":"heart_disease_df_0 = heart_disease_df[heart_disease_df['target'] == 0]\nheart_disease_df_1 = heart_disease_df[heart_disease_df['target'] == 1]\nheart_disease_df_0.drop('target', axis = 1, inplace = True)\nheart_disease_df_1.drop('target', axis = 1, inplace = True)","84d808ee":"drop_list = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal']\nheart_disease_df_0.drop(drop_list, axis = 1, inplace = True)\nheart_disease_df_1.drop(drop_list, axis = 1, inplace = True)","c2349362":"result = []\nfor column in heart_disease_df_0.columns:\n    ttest, p_val = stats.ttest_ind(heart_disease_df_0[column], heart_disease_df_1[column])\n    row = [column, ttest, '{0:.3f}'.format(p_val)]\n    result.append(row)\nt_test_df = pd.DataFrame(result, columns = ['Features', 'ttest', 'p_val'])\nt_test_df['p_val'] = t_test_df['p_val'].astype('float64') \nt_test_df.style.applymap(color_p_val_red,  subset = ['p_val'])","d143e64f":"plt.figure(figsize = (20,20))\nplt.suptitle('Confidence intervals', y = 0.90, fontsize = 16)\n\nplt.subplot(321)\nax = sns.pointplot(x = heart_disease_df['target'].replace({0:'No', 1:'Yes'}), y = heart_disease_df['age'], join= False, capsize= 0.1, palette= 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('Age')\nplt.title('p_val: 0')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(322)\nax = sns.pointplot(x = heart_disease_df['target'].replace({0:'No', 1:'Yes'}), y = heart_disease_df['trestbps'], join= False, capsize= 0.1, palette= 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('Resting blood pressure')\nplt.title('p_val: 0.012')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(323)\nax = sns.pointplot(x = heart_disease_df['target'].replace({0:'No', 1:'Yes'}), y = heart_disease_df['chol'], join= False, capsize= 0.1, palette= 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('Serum cholestoral in mg\/dl')\nplt.title('p_val: 0.139')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(324)\nax = sns.pointplot(x = heart_disease_df['target'].replace({0:'No', 1:'Yes'}), y = heart_disease_df['thalach'], join= False, capsize= 0.1, palette= 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('Maximum heart rate achieved')\nplt.title('p_val: 0')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(325)\nax = sns.pointplot(x = heart_disease_df['target'].replace({0:'No', 1:'Yes'}), y = heart_disease_df['oldpeak'], join= False, capsize= 0.1, palette= 'mako')\nplt.xlabel('Heart disease')\nplt.ylabel('ST depression induced by exercise relative to rest')\nplt.title('p_val: 0')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","56c254ce":"plt.figure(figsize = (20, 30))\nplt.suptitle('Quantitative features exploration', y = 0.90, fontsize = 16)\ngs = gridspec.GridSpec(5, 4)\n\nplt.subplot(gs[0, 0])\nax = sns.distplot(heart_disease_df['age'], color =  \"#3498db\")\nplt.xlabel('Age')\nplt.title('Age distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[0, 1])\nax = sns.distplot(heart_disease_df['trestbps'], color = \"#3498db\")\nplt.xlabel('Resting blood pressure')\nplt.title('Resting blood pressure distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 0])\nax = sns.distplot(heart_disease_df['chol'], color = \"#3498db\")\nplt.xlabel('Serum cholestoral in mg\/dl')\nplt.title('Serum cholestoral in mg\/dl distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 1])\nax = sns.distplot(heart_disease_df['thalach'], color = \"#3498db\")\nplt.xlabel('Maximum heart rate achieved')\nplt.title('Maximum heart rate achieved distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n\nplt.subplot(gs[0, 2])\nax = sns.distplot(np.log(heart_disease_df['age']), color =  \"#e74c3c\")\nplt.xlabel('Age')\nplt.title('Age distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[0, 3])\nax = sns.distplot(np.log(heart_disease_df['trestbps']), color = \"#e74c3c\")\nplt.xlabel('Resting blood pressure')\nplt.title('Resting blood pressure distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 2])\nax = sns.distplot(np.log(heart_disease_df['chol']), color = \"#e74c3c\")\nplt.xlabel('Serum cholestoral in mg\/dl')\nplt.title('Serum cholestoral in mg\/dl distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.subplot(gs[1, 3])\nax = sns.distplot(np.log(heart_disease_df['thalach']), color = \"#e74c3c\")\nplt.xlabel('Maximum heart rate achieved')\nplt.title('Maximum heart rate achieved distribution')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","cfe3cef7":"heart_disease_df['age'] = np.log(heart_disease_df['age'])\nheart_disease_df['trestbps'] = np.log(heart_disease_df['trestbps'])\nheart_disease_df['chol'] = np.log(heart_disease_df['chol'])\nheart_disease_df['thalach'] = np.log(heart_disease_df['thalach'])","7c70ffc8":"features_list = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal']\nfor feature in features_list:\n    heart_disease_df[feature] = heart_disease_df[feature].astype('object')    ","dedc5d95":"drop_list = ['sex', 'fbs', 'trestbps', 'chol']\nheart_disease_df.drop(drop_list, axis = 1, inplace = True)","74de8f92":"heart_disease_df = pd.get_dummies(heart_disease_df, prefix = ['cp_', 'restecg_', 'exang_', 'slope_', 'ca_', 'thal_'])","baf8f075":"X = heart_disease_df.drop('target', axis = 1)\nY = heart_disease_df['target']","d2680dff":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 17)","355e2e48":"d_tree = DecisionTreeClassifier(max_depth = 10, random_state = 17) ","cdf2338d":"d_tree.fit(X_train, Y_train)","adf9d6f9":"Y_predict = d_tree.predict(X_test)","bd129912":"print(classification_report(Y_test, Y_predict))","b565ffc9":"data = {'Test_values' : np.array(Y_test),'Predicted_values' : Y_predict}\ncm = pd.DataFrame(data, columns = ['Test_values', 'Predicted_values'])","03fb2d54":"plt.figure(figsize = (15, 10))\nsns.heatmap(pd.crosstab(cm['Test_values'], cm['Predicted_values'], rownames=['Actual'], colnames=['Predicted']), annot=True, cmap = 'mako')","89742e2e":"plt.figure(figsize = (15, 10))\nax = sns.barplot(d_tree.feature_importances_, X_test.columns, palette = 'mako_r')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","86a54e90":"r_forest = RandomForestClassifier(max_depth = 10, min_samples_split = 10, max_features = 5, n_estimators = 1000, n_jobs = -1)","25e7e7d5":"r_forest.fit(X_train, Y_train)","ce5bf58c":"Y_predict = r_forest.predict(X_test)","4fed7f8f":"print(classification_report(Y_test, Y_predict))","a74df352":"data = {'Test_values' : np.array(Y_test),'Predicted_values' : Y_predict}\ncm = pd.DataFrame(data, columns = ['Test_values', 'Predicted_values'])","d5924410":"plt.figure(figsize = (15, 10))\nsns.heatmap(pd.crosstab(cm['Test_values'], cm['Predicted_values'], rownames=['Actual'], colnames=['Predicted']), annot=True, cmap = 'mako')","03076a90":"plt.figure(figsize = (15, 10))\nax = sns.barplot(d_tree.feature_importances_, X_test.columns, palette = 'mako_r')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","b524d3f9":"knn = KNeighborsClassifier(n_neighbors = 2, n_jobs = -1, weights = 'distance', algorithm = 'brute')","7d5b409a":"knn.fit(X_train, Y_train)","f61df065":"Y_predict = knn.predict(X_test)","c8aa8514":"print(classification_report(Y_test, Y_predict))","7fe3a2b6":"data = {'Test_values' : np.array(Y_test),'Predicted_values' : Y_predict}\ncm = pd.DataFrame(data, columns = ['Test_values', 'Predicted_values'])","a7cfb742":"plt.figure(figsize = (15, 10))\nsns.heatmap(pd.crosstab(cm['Test_values'], cm['Predicted_values'], rownames=['Actual'], colnames=['Predicted']), annot=True, cmap = 'mako')","e4eb2c3f":"log_reg = LogisticRegressionCV(cv = 5, max_iter = 500, n_jobs = -1, refit = True, random_state = 17)","6148693a":"log_reg.fit(X_test, Y_test)","183c7180":"Y_predict = log_reg.predict(X_test)","ffb00426":"print(classification_report(Y_test, Y_predict))","f698a16f":"data = {'Test_values' : np.array(Y_test),'Predicted_values' : Y_predict}\ncm = pd.DataFrame(data, columns = ['Test_values', 'Predicted_values'])","9a9a650d":"plt.figure(figsize = (15, 10))\nsns.heatmap(pd.crosstab(cm['Test_values'], cm['Predicted_values'], rownames=['Actual'], colnames=['Predicted']), annot=True, cmap = 'mako')","40d6153a":"features_list = ['age', 'thalach', 'oldpeak', 'cp__0', 'cp__1', 'cp__2', 'cp__3',\n       'restecg__0', 'restecg__1', 'restecg__2', 'exang__0', 'exang__1',\n       'slope__0', 'slope__1', 'slope__2', 'ca__0', 'ca__1', 'ca__2', 'ca__3',\n       'ca__4', 'thal__0', 'thal__1', 'thal__2', 'thal__3']","307c549c":"result = []\ni = 0\nfor feature in features_list:\n    row = [feature, log_reg.coef_[0, i]]\n    result.append(row)\n    i = i + 1","6c892648":"log_reg_coef_df = pd.DataFrame(result, columns = ['feature', 'coef'])","8cb9ca6e":"log_reg_coef_df.style.applymap(color_negative_pos_red, subset = ['coef'])","00ec56e8":"Next features has no influence on target variable: trestbps, chol.","9011efed":"## <a id='6'>6. Model selection and explanation<\/a> ","8fc01936":"#### <a id='4.1.2'>4.1.2. Tests<\/a> ","3916d95d":"## <a id='3'>3. Data exploration<\/a> ","780ab8bd":"### <a id='3.1'>3.1. Data overview<\/a> ","44eb11b7":"### <a id='6.5'>6.5. Logistic Regression<\/a> ","1db4f8d5":"Statistical tests - what for? They can help as to find influence between features, find out features that have no influence at all. Also statistical tests can help as to explain results","2117fb5a":"## Table of contents\n- <a href='#0'>Introduction<\/a>\n- <a href='#1'>1. Importing libraries<\/a>\n- <a href='#2'>2. Attribute information<\/a>\n- <a href='#3'>3. Data exploration<\/a>\n    - <a href='#3.1'>3.1. Data overview<\/a>\n    - <a href='#3.2'>3.2. Qualitative features exploration<\/a>\n    - <a href='#3.3'>3.3. Quantitative features exploration<\/a>\n    - <a href='#3.4'>3.4. Target exploration<\/a>\n    - <a href='#3.5'>3.5. Sex exploration<\/a>\n- <a href='#4'>4. Statistical exploration<\/a>\n    - <a href='#4.1'>4.1. Statistical exploration of qualitative features<\/a>\n        - <a href='#4.1.1'>4.1.1. Functions<\/a>\n        - <a href='#4.1.2'>4.1.2. Tests<\/a>\n    - <a href='#4.2'>4.2. Statistical exploration of quantitative features<\/a>\n- <a href='#5'>5. Data preparation<\/a>\n    - <a href='#5.1'>5.1. Long-tail distribution correction<\/a>\n    - <a href='#5.2'>5.2. Transformation qualitative features<\/a>\n    - <a href='#5.3'>5.3. Dropping noisy features and dummy variable encoding<\/a>\n- <a href='#6'>6. Model selection and explanation<\/a>\n    - <a href='#6.1'>6.1. Train - test splitting<\/a>\n    - <a href='#6.2'>6.2. Decision Tree Classifier<\/a>\n    - <a href='#6.3'>6.3. Random Forest Classifier<\/a>\n    - <a href='#6.4'>6.4. Nearest Neighbors<\/a>\n    - <a href='#6.5'>6.5. Logistic Regression<\/a>\n- <a href='#7'>7. Conclusion<\/a>   ","bc83672f":"## <a id='0'>Introduction<\/a> ","716fae47":"### <a id='3.5'>3.5. Sex exploration<\/a> ","c76c9689":"### <a id='5.2'>5.2. Transformation qualitative features<\/a> ","aceb9228":"## <a id='1'>1. Importing libraries<\/a> ","e17d1e01":"### <a id='6.2'>6.2. Decision Tree Classifier<\/a> ","0b9fc473":"\n<img src='https:\/\/i.redd.it\/jnhpmbz0u2f11.jpg' width=\"500\" height=\"500\" title=\"mad professor\" alt=\"mad\">\n","7908d7ac":"### <a id='4.2'>4.2. Statistical exploration of quantitative features<\/a> ","a570d6ab":"### <a id='4.1'>4.1. Statistical exploration of qualitative features<\/a> ","c5133fb0":"## <a id='2'>2. Attribute information<\/a> \n<ol>\n <li> <b>age<\/b> - person's age in years; <\/li>\n <li> <b>sex<\/b> - person's sex (1 = male, 0 = female); <\/li>\n <li> <b>cp<\/b> - chest pain type (4 values);<\/li> \n <li> <b>trestbps<\/b> - resting blood pressure; <\/li>\n <li> <b>chol<\/b> - serum cholestoral in mg\/dl; <\/li>\n <li> <b>fbs<\/b> - fasting blood sugar > 120 mg\/dl;<\/li>\n <li> <b>restecg<\/b> -  resting electrocardiographic results (values 0,1,2);<\/li>\n <li> <b>thalach<\/b> - maximum heart rate achieved; <\/li>\n <li> <b>exang<\/b> - exercise induced angina; <\/li>\n <li> <b>oldpeak<\/b> - ST depression induced by exercise relative to rest;<\/li> \n <li> <b>slope<\/b> - the slope of the peak exercise ST segment;<\/li>\n <li> <b>ca<\/b> -  number of major vessels (0-3) colored by flourosopy;<\/li> \n <li> <b>thal<\/b> - thal:<\/li>\n     <ol>\n     <li>3 = normal;<\/li> \n     <li>6 = fixed defect;<\/li> \n     <li>7 = reversable defect.<\/li>\n     <\/ol>\n<\/ol>","9a8de610":"### <a id='3.3'>3.3. Quantitative features exploration<\/a> ","1960f7e6":"It's very strange, but restecg__2 and thal__0 are 0. Maybe these features has no influence on target variable.","a1594373":"### <a id='3.4'>3.4. Target exploration<\/a> ","fe03d2f4":"\nToday we will explore Heart Disease UCI data set. Why it's interesting and important, and how ML can help doctors and surgeons? Answer is really simple:\n<ol>\n    <li>rapid diagnosis;<\/li>\n    <li>fast service;<\/li>\n    <li>less mistakes.<\/li>\n<\/ol>\nIs it good goal? Yes!!! And let's do some good analysis!","eab26e6e":"### <a id='6.3'>6.3. Random Forest Classifier<\/a>  ","41bd81bb":"Blue - before, red - after log transform","b47a5cde":"### <a id='6.1'>6.1. Train - test splitting<\/a> ","3bbce15c":"Health care - good field fo ML and data science. Nowaday we can mix traditional diagnostic methods with moder methods of ML and DL. This collaboration can change medicine!","0e3a55c0":"## <a id='4'>4. Statistical exploration<\/a> ","50918f2d":"<font size = '3'>\nAs we can see, some features has long-tailed distribution. We will correct them later.\n<\/font>","4719655e":"#### <a id='4.1.1'>4.1.1. Functions<\/a> ","c61d3cb1":"### <a id='3.2'>3.2. Qualitative features exploration<\/a> ","f87f10a3":"As we can see, next features has no influence on target variable: sex, fbs.","95451799":"### <a id='6.4'>6.4. Nearest Neighbors<\/a>","eb1ffa40":"## <a id='7'>7. Conclusion<\/a> ","cc82963c":"## <a id='5'>5. Data preparation<\/a> ","b8a00f32":"### <a id='5.1'>5.1. Correction long tail distribution <\/a> ","c0b74b1f":"### <a id='5.3'>5.3. Dropping noisy features and dummy variable encoding<\/a> "}}