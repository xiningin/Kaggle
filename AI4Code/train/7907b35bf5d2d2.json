{"cell_type":{"691ddcc7":"code","ef154662":"code","94f42e0f":"code","5ce3b112":"code","d3d19e25":"code","6358d394":"code","ec295c95":"code","f7e99850":"code","3cc239e0":"markdown","d404aa75":"markdown","8addef97":"markdown"},"source":{"691ddcc7":"str1 = 'abcdef'\nstr2 = 'azced'","ef154662":"arr = [[None for _ in range(len(str1)+1)] for _ in range(len(str2)+1)]","94f42e0f":"for i in range(len(str2)+1):\n    arr[i][0] = i\n\nfor j in range(1, len(str1)+1):\n    arr[0][j] = j\n    arr[1][j] = j-1","5ce3b112":"arr","d3d19e25":"for i in range(2, len(str2)+1):\n    for j in range(1, len(str1)+1):\n\n        if str1[j-1] == str2[i-1]:\n            arr[i][j] = arr[i-1][j-1]\n\n        else:\n            arr[i][j] = min(arr[i-1][j], arr[i-1][j-1], arr[i][j-1]) + 1","6358d394":"arr","ec295c95":"levenshtein_dist = arr[-1][-1]","f7e99850":"levenshtein_dist","3cc239e0":"Watch the following video for the explanation.","d404aa75":"https:\/\/youtu.be\/We3YDTzNXEk","8addef97":" Levenshtein Distance : Minimum number of edits (insertion, deletion, or replacement) to tranform str1 to str2."}}