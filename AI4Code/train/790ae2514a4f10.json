{"cell_type":{"1ec83be7":"code","c87f14fc":"code","e194711b":"code","a914e30c":"code","38654354":"code","fb03cd8b":"code","08b026a9":"code","05ab6f7f":"code","82ec0002":"code","20ffc6ad":"code","6d383273":"code","a5d4b953":"code","fab3b978":"code","9f6c5a3c":"code","96b43863":"code","ca308e9d":"code","ddac79bb":"code","b83c68d5":"code","83b43f30":"code","2f3338e1":"code","a6ec4a7e":"code","f382b378":"code","e8054968":"code","6cd28e28":"code","31124089":"code","96d467cd":"code","52dcaafa":"code","1bd195a2":"code","ffe6117b":"code","724e943e":"code","32ad42b9":"code","fb44fa46":"code","6ade45ce":"code","c2f154f5":"code","525d2afd":"code","0a3ce0ca":"code","beb65557":"code","40a99f05":"code","055cfb34":"code","41de28f4":"code","36cc6b12":"code","6add03ad":"code","a12f48d9":"code","98333809":"code","75ce9659":"code","c881af13":"code","540b4311":"code","9304e4a0":"code","31462c5a":"code","9a9be744":"code","892b872e":"code","d75cef55":"code","489118df":"code","ce42021f":"code","699a66f7":"code","a6d30323":"code","80d0a38b":"code","7405b9a0":"code","aca138ba":"code","0a88477d":"code","be1f09a7":"code","24077018":"code","b46946bf":"code","baa40279":"code","82d0b9ad":"code","3c7c2986":"code","949b22ae":"code","cefe1c9c":"code","f1d410db":"code","333c83cc":"code","736ad5b8":"code","65dcc67d":"code","41cc1d2d":"code","c4a5cd97":"code","2478401b":"code","c4fdbff5":"code","c2c2d850":"code","883a5ebe":"markdown","99e2f99a":"markdown","4dd3445f":"markdown","cc0ce759":"markdown","30a9a264":"markdown","2bf77413":"markdown","1fbe9402":"markdown","902d99a2":"markdown","ffbef539":"markdown","b3a102bc":"markdown","98b20e6b":"markdown"},"source":{"1ec83be7":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nimport datetime\nfrom plotly.subplots import make_subplots","c87f14fc":"data = pd.read_csv('..\/input\/crimes-in-boston\/crime.csv',encoding='latin')\n","e194711b":"data.head()","a914e30c":"def treemap(categories,title,path,values):\n    fig = px.treemap(categories, path=path, values=values, height=700,\n                 title=title, color_discrete_sequence = px.colors.sequential.RdBu)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n","38654354":"def histogram(data,path,color,title,xaxis,yaxis):\n    fig = px.histogram(data, x=path,color=color)\n    fig.update_layout(\n        title_text=title,\n        xaxis_title_text=xaxis, \n        yaxis_title_text=yaxis, \n        bargap=0.2, \n        bargroupgap=0.1\n    )\n    fig.show()\n","fb03cd8b":"def bar(categories,x,y,color,title,xlab,ylab):\n    fig = px.bar(categories, x=x, y=y,\n             color=color,\n             height=400)\n    fig.update_layout(\n    title_text=title, \n    xaxis_title_text=xlab, \n    yaxis_title_text=ylab,\n    bargap=0.2, \n    bargroupgap=0.1\n    )\n    fig.show()\n","08b026a9":"Number_crimes = data['OFFENSE_CODE_GROUP'].value_counts()\nvalues = Number_crimes.values\ncategories = pd.DataFrame(data=Number_crimes.index, columns=[\"OFFENSE_CODE_GROUP\"])\ncategories['values'] = values","05ab6f7f":"treemap(categories,'Major Crimes in Boston',['OFFENSE_CODE_GROUP'],categories['values'])\n","82ec0002":"histogram(data,\"OFFENSE_CODE_GROUP\",\"OFFENSE_CODE_GROUP\",'Major Crimes in Boston','Crime','Count')","20ffc6ad":"bar(categories,categories['OFFENSE_CODE_GROUP'][0:10],categories['values'][0:10]\n    ,categories['OFFENSE_CODE_GROUP'][0:10],'Top 10 Major Crimes in Boston','Crime','Count')","6d383273":"Number_crimes_year = data['YEAR'].value_counts()\nyears = pd.DataFrame(data=Number_crimes_year.index, columns=[\"YEAR\"])\nyears['values'] = Number_crimes_year.values","a5d4b953":"\nfig = px.pie(years, values='values', names='YEAR', color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()\n","fab3b978":"Number_crimes_month = data['MONTH'].value_counts()\nmonths = pd.DataFrame(data=Number_crimes_month.index, columns=[\"MONTH\"])\nmonths['values'] = Number_crimes_month.values","9f6c5a3c":"fig = go.Figure(go.Bar(\n            x=months['values'],\n            y=months['MONTH'],\n        marker=dict(\n            color='rgb(13,143,129)',\n\n        ),\n            orientation='h'))\nfig.update_layout(\n    title_text='Major Crimes in Boston per month', \n    xaxis_title_text='Count',\n    yaxis_title_text='Month', \n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()","96b43863":"Number_crimes_days = data['DAY_OF_WEEK'].value_counts()\ndays = pd.DataFrame(data=Number_crimes_days.index, columns=[\"DAY_OF_WEEK\"])\ndays['values'] = Number_crimes_days.values","ca308e9d":"fig = px.histogram(data, y=\"DAY_OF_WEEK\",color=\"DAY_OF_WEEK\")\nfig.update_layout(\n    title_text='Crime count on each day', \n    xaxis_title_text='Day',\n    yaxis_title_text='Crimes Count', \n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()\n","ddac79bb":"fig = go.Figure(data=[go.Pie(labels=days['DAY_OF_WEEK'], values=days['values'], hole=.4)])\nfig.update_layout(\n    title_text='Crime count on each day',\n)\nfig.show()","b83c68d5":"histogram(data,\"HOUR\",\"HOUR\",'Crime count on each Hour','Hour','Count')","83b43f30":"histogram(data,\"YEAR\",\"MONTH\",'Crime count on each year per month','Year','Crimes Count')","2f3338e1":"Number_crimes_street = data['STREET'].value_counts()\nstreet = pd.DataFrame(data=Number_crimes_street.index, columns=[\"STREET\"])\nstreet['values'] = Number_crimes_street.values","a6ec4a7e":"bar(street,street['STREET'][0:10],street['values'][0:10]\n    ,street['STREET'][0:10],'Top 10 Crime count on each Street','Street',' Crime Count')","f382b378":"histogram(data,\"OFFENSE_CODE_GROUP\",\"YEAR\",'Crime count per Category on each Year','Category','Crimes Count on each Year')","e8054968":"histogram(data,\"OFFENSE_CODE_GROUP\",\"MONTH\",'Crime count per Category on each Month','Category','Crimes Count on each Month')","6cd28e28":"histogram(data,\"MONTH\",\"DAY_OF_WEEK\",'Crime count per Month on each Day','Month','Crimes Count on each Day')","31124089":"histogram(data,\"DAY_OF_WEEK\",\"HOUR\",'Crime count per Day on each Hour','Day','Crimes Count on each Hour')","96d467cd":"Data_2015 = data [(data['YEAR'] == 2015) ].reset_index(drop=True)","52dcaafa":"Number_crimes_2015 = Data_2015['OFFENSE_CODE_GROUP'].value_counts()\ncategories_2015 = pd.DataFrame(data=Number_crimes_2015.index, columns=[\"OFFENSE_CODE_GROUP\"])\ncategories_2015['values'] = Number_crimes_2015.values","1bd195a2":"treemap(categories_2015,'Major Crimes in Boston in 2015',['OFFENSE_CODE_GROUP'],categories_2015['values'])\n","ffe6117b":"histogram(Data_2015,\"OFFENSE_CODE_GROUP\",\"OFFENSE_CODE_GROUP\",'Major Crimes in Boston in 2015','Crime','Count')","724e943e":"fig = px.bar(categories_2015, x=categories_2015['OFFENSE_CODE_GROUP'][0:10], y=categories_2015['values'][0:10],\n             color=categories_2015['OFFENSE_CODE_GROUP'][0:10],\n             labels={'pop':'population of Canada'}, height=400)\nfig.update_layout(\n    title_text='Top 10 Major Crimes in Boston in 2015', # title of plot\n    xaxis_title_text='Crime', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()\n","32ad42b9":"Number_crimes_month_2015 = Data_2015['MONTH'].value_counts()\nmonths_2015 = pd.DataFrame(data=Number_crimes_month_2015.index, columns=[\"MONTH\"])\nmonths_2015['values'] = Number_crimes_month_2015.values\n","fb44fa46":"fig = go.Figure(go.Bar(\n            y=months_2015['values'],\n            x=months_2015['MONTH'],\n        marker=dict(\n            color='green',\n\n        ),\n            orientation='v'))\nfig.update_layout(\n    title_text='Major Crimes in Boston per month in 2015', # title of plot\n    xaxis_title_text='Month', # xaxis label\n    yaxis_title_text='Count ', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()","6ade45ce":"Number_crimes_days_2015 = Data_2015['DAY_OF_WEEK'].value_counts()\ndays_2015 = pd.DataFrame(data=Number_crimes_days_2015.index, columns=[\"DAY_OF_WEEK\"])\ndays_2015['values'] = Number_crimes_days_2015.values","c2f154f5":"histogram(Data_2015,\"DAY_OF_WEEK\",\"DAY_OF_WEEK\",'Crime count on each day in 2015','Day','Crimes Count')","525d2afd":"fig = go.Figure(data=[go.Pie(labels=days_2015['DAY_OF_WEEK'], values=days_2015['values'], hole=.4)])\nfig.update_layout(\n    title_text='Crime count on each day in 2015', # title of plot\n)\nfig.show()","0a3ce0ca":"histogram(Data_2015,\"OFFENSE_CODE_GROUP\",\"MONTH\",'Crime count per Category on each Month in 2015','Category','Crimes Count on each Month')","beb65557":"histogram(Data_2015,\"MONTH\",\"DAY_OF_WEEK\",'Crime count per Month on each Day in 2015','Month','Crimes Count on each Day')","40a99f05":"histogram(Data_2015,\"DAY_OF_WEEK\",\"HOUR\",'Crime count per Day on each Hour in 2015','Day','Crimes Count on each Hour')","055cfb34":"Data_2016 = data [(data['YEAR'] == 2016) ].reset_index(drop=True)","41de28f4":"Number_crimes_2016 = Data_2016['OFFENSE_CODE_GROUP'].value_counts()\ncategories_2016 = pd.DataFrame(data=Number_crimes_2016.index, columns=[\"OFFENSE_CODE_GROUP\"])\ncategories_2016['values'] = Number_crimes_2016.values","36cc6b12":"treemap(categories_2016,'Major Crimes in Boston in 2016',['OFFENSE_CODE_GROUP'],categories_2016['values'])\n","6add03ad":"histogram(Data_2016,\"OFFENSE_CODE_GROUP\",\"OFFENSE_CODE_GROUP\",'Major Crimes in Boston in 2016','Crime','Count')","a12f48d9":"fig = px.bar(categories_2016, x=categories_2016['OFFENSE_CODE_GROUP'][0:10], y=categories_2016['values'][0:10],\n             color=categories_2016['OFFENSE_CODE_GROUP'][0:10],\n             labels={'pop':'population of Canada'}, height=400)\nfig.update_layout(\n    title_text='Top 10 Major Crimes in Boston in 2016', # title of plot\n    xaxis_title_text='Crime', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()","98333809":"Number_crimes_month_2016 = Data_2016['MONTH'].value_counts()\nmonths_2016 = pd.DataFrame(data=Number_crimes_month_2016.index, columns=[\"MONTH\"])\nmonths_2016['values'] = Number_crimes_month_2016.values","75ce9659":"fig = go.Figure(go.Bar(\n            y=months_2016['values'],\n            x=months_2016['MONTH'],\n        marker=dict(\n            color='green',\n\n        ),\n            orientation='v'))\nfig.update_layout(\n    title_text='Major Crimes in Boston per month in 2016', # title of plot\n    xaxis_title_text='Month', # xaxis label\n    yaxis_title_text='Count ', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()\n","c881af13":"Number_crimes_days_2016 = Data_2016['DAY_OF_WEEK'].value_counts()\ndays_2016= pd.DataFrame(data=Number_crimes_days_2016.index, columns=[\"DAY_OF_WEEK\"])\ndays_2016['values'] = Number_crimes_days_2016.values\n","540b4311":"histogram(Data_2016,\"DAY_OF_WEEK\",\"DAY_OF_WEEK\",'Crime count on each day in 2016','Day','Crimes Count')","9304e4a0":"fig = go.Figure(data=[go.Pie(labels=days_2016['DAY_OF_WEEK'], values=days_2016['values'])])\nfig.update_layout(\n    title_text='Crime count on each day in 2016', # title of plot\n)\nfig.show()\n","31462c5a":"histogram(Data_2016,\"OFFENSE_CODE_GROUP\",\"MONTH\",'Crime count per Category on each Month in 2016','Category','Crimes Count on each Month')","9a9be744":"histogram(Data_2016,\"MONTH\",\"DAY_OF_WEEK\",'Crime count per Month on each Day in 2016','Month','Crimes Count on each Day')","892b872e":"histogram(Data_2016,\"DAY_OF_WEEK\",\"HOUR\",'Crime count per Day on each Hour in 2016','Day','Crimes Count on each Hour')","d75cef55":"Data_2017 = data [(data['YEAR'] == 2017) ].reset_index(drop=True)","489118df":"Number_crimes_2017 = Data_2017['OFFENSE_CODE_GROUP'].value_counts()\ncategories_2017 = pd.DataFrame(data=Number_crimes_2017.index, columns=[\"OFFENSE_CODE_GROUP\"])\ncategories_2017['values'] = Number_crimes_2017.values","ce42021f":"treemap(categories_2017,'Major Crimes in Boston in 2017',['OFFENSE_CODE_GROUP'],categories_2017['values'])\n","699a66f7":"histogram(Data_2017,\"OFFENSE_CODE_GROUP\",\"OFFENSE_CODE_GROUP\",'Major Crimes in Boston in 2017','Crime','Count')","a6d30323":"fig = px.bar(categories_2017, x=categories_2017['OFFENSE_CODE_GROUP'][0:10], y=categories_2017['values'][0:10],\n             color=categories_2017['OFFENSE_CODE_GROUP'][0:10],\n             labels={'pop':'population of Canada'}, height=400)\nfig.update_layout(\n    title_text='Top 10 Major Crimes in Boston in 2017', \n    xaxis_title_text='Crime', \n    yaxis_title_text='Count', \n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()","80d0a38b":"Number_crimes_month_2017 = Data_2017['MONTH'].value_counts()\nmonths_2017 = pd.DataFrame(data=Number_crimes_month_2017.index, columns=[\"MONTH\"])\nmonths_2017['values'] = Number_crimes_month_2017.values","7405b9a0":"fig = go.Figure(go.Bar(\n            y=months_2017['values'],\n            x=months_2017['MONTH'],\n        marker=dict(\n            color='green',\n\n        ),\n            orientation='v'))\nfig.update_layout(\n    title_text='Major Crimes in Boston per month in 2017',\n    xaxis_title_text='Month', \n    yaxis_title_text='Count ',\n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()","aca138ba":"Number_crimes_days_2017 = Data_2017['DAY_OF_WEEK'].value_counts()\ndays_2017= pd.DataFrame(data=Number_crimes_days_2017.index, columns=[\"DAY_OF_WEEK\"])\ndays_2017['values'] = Number_crimes_days_2017.values","0a88477d":"histogram(Data_2017,\"DAY_OF_WEEK\",\"DAY_OF_WEEK\",'Crime count on each day in 2017','Day','Crimes Count')","be1f09a7":"fig = go.Figure(data=[go.Pie(labels=days_2017['DAY_OF_WEEK'], values=days_2017['values'])])\nfig.update_layout(\n    title_text='Crime count on each day in 2017', # title of plot\n)\nfig.show()","24077018":"histogram(Data_2017,\"OFFENSE_CODE_GROUP\",\"MONTH\",'Crime count per Category on each Month in 2017','Category','Crimes Count on each Month')","b46946bf":"histogram(Data_2017,\"MONTH\",\"DAY_OF_WEEK\",'Crime count per Month on each Day in 2017','Month','Crimes Count on each Day')","baa40279":"histogram(Data_2017,\"DAY_OF_WEEK\",\"HOUR\",'Crime count per Day on each Hour in 2017','Day','Crimes Count on each Hour')","82d0b9ad":"Data_2018 = data [(data['YEAR'] == 2018) ].reset_index(drop=True)","3c7c2986":"Number_crimes_2018 = Data_2018['OFFENSE_CODE_GROUP'].value_counts()\ncategories_2018 = pd.DataFrame(data=Number_crimes_2018.index, columns=[\"OFFENSE_CODE_GROUP\"])\ncategories_2018['values'] = Number_crimes_2018.values","949b22ae":"treemap(categories_2018,'Major Crimes in Boston in 2018',['OFFENSE_CODE_GROUP'],categories_2018['values'])\n","cefe1c9c":"histogram(Data_2018,\"OFFENSE_CODE_GROUP\",\"OFFENSE_CODE_GROUP\",'Major Crimes in Boston in 2018','Crime','Count')","f1d410db":"fig = px.bar(categories_2018, x=categories_2018['OFFENSE_CODE_GROUP'][0:10], y=categories_2018['values'][0:10],\n             color=categories_2018['OFFENSE_CODE_GROUP'][0:10],\n             labels={'pop':'population of Canada'}, height=400)\nfig.update_layout(\n    title_text='Top 10 Major Crimes in Boston in 2018', # title of plot\n    xaxis_title_text='Crime', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()","333c83cc":"Number_crimes_month_2018 = Data_2018['MONTH'].value_counts()\nmonths_2018 = pd.DataFrame(data=Number_crimes_month_2018.index, columns=[\"MONTH\"])\nmonths_2018['values'] = Number_crimes_month_2018.values","736ad5b8":"fig = go.Figure(go.Bar(\n            y=months_2018['values'],\n            x=months_2018['MONTH'],\n        marker=dict(\n            color='blue',\n\n        ),\n            orientation='v'))\nfig.update_layout(\n    title_text='Major Crimes in Boston per month in 2018', # title of plot\n    xaxis_title_text='Month', # xaxis label\n    yaxis_title_text='Count ', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1\n)\nfig.show()","65dcc67d":"Number_crimes_days_2018= Data_2018['DAY_OF_WEEK'].value_counts()\ndays_2018= pd.DataFrame(data=Number_crimes_days_2018.index, columns=[\"DAY_OF_WEEK\"])\ndays_2018['values'] = Number_crimes_days_2018.values","41cc1d2d":"histogram(Data_2018,\"DAY_OF_WEEK\",\"DAY_OF_WEEK\",'Crime count on each day in 2018','Day','Crimes Count')","c4a5cd97":"fig = go.Figure(data=[go.Pie(labels=days_2018['DAY_OF_WEEK'], values=days_2018['values'])])\nfig.update_layout(\n    title_text='Crime count on each day in 2018', # title of plot\n)\nfig.show()","2478401b":"histogram(Data_2018,\"OFFENSE_CODE_GROUP\",\"MONTH\",'Crime count per Category on each Month in 2018','Category','Crimes Count on each Month')","c4fdbff5":"histogram(Data_2018,\"MONTH\",\"DAY_OF_WEEK\",'Crime count per Month on each Day in 2018','Month','Crimes Count on each Day')","c2c2d850":"histogram(Data_2018,\"DAY_OF_WEEK\",\"HOUR\",'Crime count per Day on each Hour in 2018','Day','Crimes Count on each Hour')","883a5ebe":"Number of crimes per year","99e2f99a":"<a id='Gen'><\/a>\n#  <font color='red'> **General Analysis** <\/font>","4dd3445f":"<a id='Gen2017'><\/a>\n#  <font color='red'> **2017 Crimes Analysis** <\/font>","cc0ce759":"<a id='Gen2015'><\/a>\n#  <font color='red'> **2015 Crimes Analysis** <\/font>","30a9a264":"#  <font color='red'> Boston Crime Analysis With Plotly <\/font>","2bf77413":"<a id='Gen208'><\/a>\n#  <font color='red'> **2018 Crimes Analysis** <\/font>","1fbe9402":"Number of crimes per category","902d99a2":"# I hope you find this kernel useful\n\n# Your  <font color='red'> UPVOTES <\/font>  would be highly appreciated\n","ffbef539":"\n#  <font color='red'>Table of contents<\/font>\n1.  <a href='#Gen'>General Analysis<\/a>\n1.  <a href='#Gen2015'>2015 Crimes Analysis<\/a>\n1.  <a href='#Gen2016'>2016 Crimes Analysis<\/a>\n1.  <a href='#Gen2017'>2017 Crimes Analysis<\/a>\n1.  <a href='#Gen2018'>2018 Crimes Analysis<\/a>","b3a102bc":"<a id='Gen2016'><\/a>\n#  <font color='red'> **2016 Crimes Analysis** <\/font>","98b20e6b":"#  <font color='red'> **Data Visualisation with Plotly** <\/font>"}}