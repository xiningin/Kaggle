{"cell_type":{"c7aab459":"code","5218c945":"code","4aab302f":"code","614719f4":"code","ee07cc23":"code","1b895de9":"code","5c604ff4":"code","efb69931":"code","ca7678e5":"code","eb615fc7":"code","a7bd81d8":"code","47a58b38":"code","99a748a0":"code","85098874":"code","f001431f":"code","143c54d9":"code","01cbed25":"code","7a08022c":"code","8919addd":"markdown","59493eae":"markdown","ccdbb5e2":"markdown","f4e4467d":"markdown","4bfc3fb7":"markdown","320bc25d":"markdown","bdfdd6b5":"markdown"},"source":{"c7aab459":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split, cross_val_score","5218c945":"import os\nfor dirname, _, filenames in os.walk('..\/input\/competitive-data-science-predict-future-sales\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4aab302f":"item_categories = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nsale_item = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nshop_name = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ntrain_data = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ntest_data = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')","614719f4":"train_data.head()","ee07cc23":"test_data.head()","1b895de9":"train_Data = train_data.copy()\ntrain_Data.isna().sum()","5c604ff4":"def month_column(col):\n    temp = col.split('.')[1]\n    return temp\ntrain_Data['Month'] = train_Data['date'].apply(month_column)\n\ndef year_column(col):\n    temp = col.split('.')[2]\n    return temp\ntrain_Data['Year'] = train_Data['date'].apply(year_column)\n\ntrain_Data['Sales'] = train_Data['item_price'] * train_Data['item_cnt_day']\n\nitem_categories = []\nfor i in train_Data['item_id']:\n    item_categories.append(sale_item['item_category_id'].iloc[i])\n\ntrain_Data['item_categories'] = item_categories\n\n# Add the item_id_categories columns\ntrain_Data['item_id_categories'] = train_Data['item_id'].apply(str) + ',' +train_Data['item_categories'].apply(str)","efb69931":"train_Data.head()","ca7678e5":"train_Data = train_Data[train_Data['Month'] == '11']\ntraining_data = train_Data.drop(columns = ['date', 'date_block_num', 'item_price', 'Month', 'Year','Sales', \n                                           'item_id_categories', 'item_cnt_day'])\ntraining_target = train_Data['item_cnt_day']","eb615fc7":"training_data = np.array(training_data)\ntraining_target = np.array(training_target)","a7bd81d8":"training_data.shape","47a58b38":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.utils import plot_model","99a748a0":"model = Sequential()\nmodel.add(Dense(4, activation = 'sigmoid', input_dim = training_data.shape[1]))\nmodel.add(Dense(2, activation = 'relu'))\nmodel.add(Dense(1, activation = 'sigmoid'))\nmodel.compile(optimizer= 'adam', \n              loss = 'mse', \n              metrics = ['mse', 'mae'])\nhistory = model.fit(training_data, training_target, epochs = 5, batch_size = 256, validation_split = 0.2)","85098874":"test_data.head()","f001431f":"test_Data = test_data.copy()\n\nitem_categor = []\nfor i in test_Data['item_id']:\n    item_categor.append(sale_item['item_category_id'].iloc[i])\n\ntest_Data['item_categories'] = item_categor","143c54d9":"test_Data = test_Data.drop(columns = 'ID')\ntest_Data = np.array(test_Data)\ntest_data['item_cnt_month'] = model.predict(test_Data)","01cbed25":"submission = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nsubmission['item_cnt_month'] = model.predict(test_Data)\nsubmission.to_csv('submission.csv', index = False)","7a08022c":"submission","8919addd":"## Data Exploration..","59493eae":"# THE END..!!","ccdbb5e2":"## Apply train test split..","f4e4467d":"## Test Data..","4bfc3fb7":"## Import Libraries..","320bc25d":"# Deep Learning","bdfdd6b5":"## Read Data.."}}