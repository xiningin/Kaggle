{"cell_type":{"c4fc7a93":"code","b281d475":"code","0165a453":"code","9569477a":"markdown","bb7eec50":"markdown","8fab303a":"markdown"},"source":{"c4fc7a93":"# Monte Carlo method. Find the volume of a sphere with radius equal to 1. The volume of a sphere is 4\/3\ud835\udf45R**3\n\nfrom random import random","b281d475":"# N is the number of points to be generated. In order to have a good approximation, N has to be very large, at least 1x10**6\nN=1000000\ncount=0\n\n# N random points P in the cartesian space (x,y,z) are generated. All the random points that fall within the volume of the sphere are counted\nfor i in range(N):\n    P=(random(), random(), random())\n    if P[0]**2 + P[1]**2 + P[2]**2 < 1:\n        count+=1","0165a453":"# the volume of 1\/8 of the sphere is the fraction of points inside the sphere times the volume of the unit cube, which is 1.\nv=float(count)\/float(N)*1\n\n# The volume of the whole sphere is 8 times previous result\nvolume=8*v\nprint(volume)\n\n#which is close to 4\/3\ud835\udf45R**3, where  R=1","9569477a":"This is for beginners to Python and Monte Carlo methods.\n\nSay you have an odd shape, and you want to find\nits area. One Monte Carlo technique for finding this area would be to\nsurround the shape with a shape of known area (a rectangle, perhaps) and\nthen generate a large number of random points within the known area. The\narea of the shape is approximately the fraction of the points that fall within\nthe shape, times the known area surrounding the shape.","bb7eec50":"** Here is what the 1\/8 of a unit sphere looks like **\n![](http:\/\/)![Webp.net-resizeimage.jpg](attachment:Webp.net-resizeimage.jpg)","8fab303a":"We will use random() to keep things simple, and we will exploit the simmetry of the problem. Remember, random() \ngenerates random numbers in the range from 0 to 1. So all random numbers will be  0<x<1, 0<y<1, 0<z<1, inside a unit cube.Therefore,\nonly 1\/8 of the sphere is within the unit cube. See the Figure below."}}