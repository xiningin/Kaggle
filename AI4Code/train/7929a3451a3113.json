{"cell_type":{"ba9a2f79":"code","3bc7510d":"code","f94c15ae":"code","f7925454":"code","ca8cf8e0":"code","d9d6e28a":"code","855dc806":"code","538b7543":"code","ce2266e3":"code","cc2eb983":"code","df07f702":"code","32a67218":"code","18e11f63":"code","bcfb1e6f":"code","ff2e2beb":"code","d1db036a":"markdown","ccbdb277":"markdown","c400474d":"markdown","44f914ee":"markdown","f3128780":"markdown","41f5f70c":"markdown","92cc5e5a":"markdown","e194a000":"markdown","cf84cc19":"markdown","5b020910":"markdown","9bf027c3":"markdown","34c1ee98":"markdown","8969dd28":"markdown","fb27e48c":"markdown","e922a892":"markdown"},"source":{"ba9a2f79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3bc7510d":"import matplotlib.pyplot as plt","f94c15ae":"dfx = [0,6,7,11,17,21]    # x axis\ndfy = [6,11,15,20,22,30]  # y axis\n\nplt.plot(dfx,dfy)\nplt.show()","f7925454":"dfx = [0,6,7,11,17,21]    # x axis\ndfy = [6,11,15,20,22,30]  # y axis\n\n# color of line, width of line, style of line, marker of line\nplt.plot(dfx,dfy,color = 'red',linewidth= 1.5,linestyle='-',marker = '*') \nplt.show()","ca8cf8e0":"dfx = [0,6,7,11,17,21]     # x axis\ndfy = [6,11,15,20,22,30]   # y axis\n\n# 'r-*'=> color,style and marker of line\n# color,style and marker of line, width of line, size of marker, label of legend\nplt.plot(dfx,dfy,'r-*',linewidth= 1.5,markersize = 10 ,label ='label')\n\n# name of title, font size of title, color of title\nplt.title(\"Sample\",fontsize = 18, color = 'Darkred') \nplt.xlabel(\"X\",fontsize = 14)   # name of x axis's title, font size of x axis's title  \nplt.ylabel(\"Y\",fontsize = 14 )  # name of y axis's title, font size of y axis's title\n\n# color,style,width and alpha of grid  \nplt.grid(color = 'grey',ls=':',lw=1,alpha=0.5) \nplt.legend()    ","d9d6e28a":"# First line \ndf1x = [0,6,7,11,17,21]   # x axis \ndf1y = [6,11,15,20,22,30] # y axis \n\n# color,style and marker of line, width of line, size of marker, label of legend\nplt.plot(df1x,df1y, 'r-s', linewidth= 1.5,markersize = 8 ,label ='line1')\n\n# Second line\ndf2x = [0,5,9,15,19,25]   # x axis\ndf2y = [8,13,18,22,30,32] # y axis \n\n# color,style and marker of line, width of line, size of marker, label of legend\nplt.plot(df2x,df2y, 'c-*', linewidth= 1.5,markersize = 8 ,label ='line2')  \n\n# Third line\ndf3x = [0,7,11,18,21,27]  # x axis\ndf3y = [4,10,19,21,25,29] # y axis\n\n# color,style and marker of line, width of line, size of marker, label of legend\nplt.plot(df3x,df3y, 'g-*', linewidth= 1.5,markersize = 8 ,label ='line3') \nplt.legend()  \n\nplt.title(\"Sample\",fontsize = 20, color = 'Darkred')  # name, font size, color of title \nplt.xlabel(\"X\",fontsize = 14)   # name of x axis's title, font size of x axis's title \nplt.ylabel(\"Y\",fontsize = 14 )  # name of y axis's title, font size of y axis's title\n\n# color,style,width and alpha of grid \nplt.grid(color = 'SlateGray',linestyle=':',linewidth=1,alpha=0.5)\nplt.show()","855dc806":"# data\ndfw = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\ndfy = [10,20,30,40,50,60,70]\n\n# width of bar, color of bar\nplt.bar(dfw,dfy, width = 0.5, color = ['LightCoral','LightSalmon','Violet','LightSteelBlue']) \nplt.title(\"Sample\", color = 'DarkRed', fontsize = 20) # name, font size, color of title\nplt.xlabel(\"Week\", fontsize = 14)   # name of x axis's title, font size of x axis's title \nplt.ylabel(\"Count\", fontsize = 14)  # name of y axis's title, font size of y axis's title\nplt.xticks(rotation=45)  # rotation angle of x axis's label\nplt.show()","538b7543":"# data \ndfw = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\ndfy = [10,20,30,40,50,60,70]\n\n#  height of bar, color of bar\nplt.barh(dfw,dfy, height = 0.5, color = ['LightCoral','LightSalmon','Violet','LightSteelBlue'])\nplt.title(\"Sample\", color = 'DarkRed', fontsize = 20)  # name, font size, color of title\nplt.xlabel(\"Count\", fontsize = 14)  # name of x axis's title, font size of x axis's title\nplt.ylabel(\"Week\", fontsize = 14)   # name of y axis's title, font size of y axis's title\nplt.show()","ce2266e3":"# data \ndfw = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\ndf1 = [10,20,30,40,50,60,70]\ndf2 = [30,40,50,60,70,80,90]\n\n#Fisrt bar=> width of bar,color of bar, label of legend  \nplt.bar(dfw,dfy, width = 0.5, color = 'LightCoral',label = 'First')\n\n#Second bar=> wifth of bar, color of bar, label of legend\nplt.bar(dfw,dfy, width = 0.5, color = 'LightSteelBlue',label = 'Second',  \n        bottom = df1) # bottom => start point of second bar's y-coordinate\nplt.legend()  \n\nplt.title(\"Sample\", color = 'DarkRed', fontsize = 20)  # name, font size, color of title \nplt.xlabel(\"Week\", fontsize = 14)  # name of x axis's title, font size of x axis's title\nplt.ylabel(\"Count\", fontsize = 14) # name of y axis's title, font size of y axis's title\nplt.xticks(rotation=45)  # rotation angle of x axis's label\nplt.show()","cc2eb983":"width = 0.4 # width of bar\n\n# data\ndfw = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\ndf1 = [10,20,30,40,50,60,70]\ndf2 = [30,40,50,60,70,80,90]\n\nplt.bar(np.arange(len(df1)),df1,color='LightCoral',width=width,label = 'First') \nplt.bar(np.arange(len(df2))+width,df2,color='LightSteelBlue',width=width,label = 'Second')\nplt.legend()  \n\nplt.xticks(range(len(dfw)),dfw)                        # label of x axis\nplt.title(\"Sample\", color = 'DarkRed', fontsize = 20)  # name, font size, color of title \nplt.xlabel(\"Week\", fontsize = 14)  # name of x axis's title, font size of x axis's title\nplt.ylabel(\"Count\", fontsize = 14) # name of y axis's title, font size of y axis's title\nplt.xticks(rotation=45)  # rotation angle of x axis's label\nplt.show()","df07f702":"plt.figure(figsize = [7,7])  # size of figure\n\n# data \nsizes = [10,30,45,50,70]\nweekday = ['Monday','Tuesday','Wednesday','Thursday','Friday']\n#color of each block \ncolor = ['LightCoral','LightSalmon','Violet','LightSteelBlue','LightGreen',]\nexplode = (0,0,0,0,0.2)  # set protruding block(s)\n\nplt.pie(sizes , \n        labels = weekday, \n        explode = explode,    # the position of the protruding block(s) \n        autopct='%2.1f%%',    # set decimal places\n        colors = color,       # set color \n        # the distance between the percentage(value) and the center of pie  \n        pctdistance = 0.5,    \n        textprops = {\"fontsize\" : 12},   # font size of pie\n        shadow=True)\n\nplt.legend(loc = \"upper right\")  # the position of legend\nplt.title(\"Sample\",fontsize = 20,color = 'Darkblue') # name, font size, color of title\nplt.show()","32a67218":"plt.figure(figsize = [6,5])     # size of figure\n\n#data\ndfx = [10, 13, 15, 17, 19]\ndfy = [11, 15, 18, 22, 25]\n\nplt.scatter(dfx, \n            dfy, \n            color ='RosyBrown', # color of marker\n            marker = 's',       # style of marker \n            alpha = 0.7,        # alpha of marker \n            s = 300)            # size of marker\n\nplt.show() ","18e11f63":"plt.figure(figsize = [8,6])      # size of figure\ndfx = [10, 13, 15, 17, 19]\ndfy = [11, 15, 18, 22, 25]\n\nplt.subplot(221)\nplt.scatter(dfx, dfy, \n            color ='RosyBrown',  # color of marker\n            marker = 's',        # style of marker\n            alpha = 0.7,         # alpha of marker \n            s = 400)             # size of marker\n\nplt.subplot(222)\nplt.scatter(dfx, dfy, \n            color ='CornflowerBlue',  # color of marker\n            marker = 'o',             # style of marker\n            alpha = 0.7,              # alpha of marker \n            s = 300)                  # size of marker\n\nplt.subplot(223)\nplt.scatter(dfx, dfy, \n            color ='MediumSeaGreen',  # color of marker\n            marker = '*',             # style of marker\n            alpha = 0.7,              # alpha of marker\n            s = 200)                  # size of marker\n\nplt.subplot(224)\nplt.scatter(dfx, dfy, \n            color ='red',  # color of marker\n            marker = '+',  # style of marker\n            alpha = 0.7,   # alpha of marker \n            s = 100)       # size of marker\nplt.show()","bcfb1e6f":"plt.figure(figsize = [6,4])      # size of figure \ndfx = [10, 13, 15, 17, 19]\ndfy = [11, 15, 18, 22, 25]\n\n# Figure A\nplt.axes([0,0,1,1])              # the position of Figure A\nplt.scatter(dfx, dfy, \n            color ='RosyBrown',  # color of marker\n            marker = 's',        # style of marker\n            alpha = 0.7,         # alpha of marker \n            s = 400)             # size of marker\n\n# Figure B \nplt.axes([0.55,0.1,0.3,0.3])          # the position of Figure B\nplt.scatter(dfx, dfy, \n            color ='CornflowerBlue',  # color of marker\n            marker = 'o',             # style of marker\n            alpha = 0.7,              # alpha of marker \n            s = 300)                  # size of marker\n\n\nplt.show()","ff2e2beb":"fig,ax1 = plt.subplots(figsize = [10,7])  # size of figure \n\n# data \ndfw = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\ndf1 = [10,8,18,35,50,40,45]\ndf2 = [30,20,70,75,45,80,90]\n\n# Fisrt Line chart \nplt.title('Sample',size = 26, color = 'Darkred')\nax1.set_xlabel('Week',fontsize = 16)\nax1.set_ylabel(\"Sales of Papaya\",fontsize = 16,color = 'tab:purple')\nax1.plot(dfw,df1,color = 'tab:purple')\nax1.tick_params(axis = 'x',rotation = 45)\nax1.tick_params(axis = 'y',labelcolor = 'tab:purple')\nax2 = ax1.twinx()\n\n#Second Line Chart\nax2.set_xlabel('Week',fontsize = 16)\nax2.set_ylabel('Sales of Banana',fontsize = 16,color = 'tab:red')\nax2.plot(dfw,df2,color = 'tab:red')\nax2.tick_params(axis = 'x',rotation = 45)\nax2.tick_params(axis = 'y',labelcolor = 'tab:red')\n\nplt.show()","d1db036a":"[Link to My Kaggle](http:\/\/www.kaggle.com\/carriech)","ccbdb277":"**<font color =MidnightBlue  size =5>Thank you for reading!<\/font>**","c400474d":"**<font color =MidnightBlue  size =5>Bar Charts<\/font>**","44f914ee":"**<font color =MediumBlue  size =4>Stacked Bar Chart<\/font>**","f3128780":"**<font color =MediumBlue  size =4 >Simple Line Charts<\/font>**","41f5f70c":"**<font color =MediumBlue  size =4>Clustered Bar Chart<\/font>**","92cc5e5a":"**<font color =MidnightBlue  size =5>Scatter Plots\/Figure<\/font>**","e194a000":"**<font color =MidnightBlue  size =5>Pie Chart<\/font>**","cf84cc19":"**<font color =MediumBlue  size =4 >Multiple Line Plots<\/font>**","5b020910":"**<font color =MidnightBlue  size =5>Double y-axis Line Chart<\/font>**","9bf027c3":"**<font color =MediumBlue  size =4>Barh<\/font>**","34c1ee98":"**<font color=MidnightBlue size = 5>Import library-Matplotlib<\/font>**","8969dd28":"**<font color =MediumBlue  size =4 >Bar<\/font>**","fb27e48c":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","e922a892":"**<font color =MidnightBlue  size =5>Line Charts<\/font>**"}}