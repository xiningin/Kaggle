{"cell_type":{"7713a402":"code","cbd90a5b":"code","29990cad":"code","f683b34a":"code","58d77627":"code","57c64c6a":"code","566f4ae5":"code","7440c90a":"code","6768bf0e":"code","b05ad664":"code","e7121fce":"code","7e494488":"markdown"},"source":{"7713a402":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Conv2D, MaxPooling2D, Flatten,BatchNormalization\nfrom keras.optimizers import Adam,Adagrad #optimizers\nfrom keras.datasets import mnist #Import datasets from inbulit Keras Datasets\n\n# Any results you write to the current directory are saved as output.","cbd90a5b":"# Load the data\ntrain = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\n","29990cad":"s=np.array(train)\nlabels=s[:,0]\npixels=s[:,1:785]\nlabels=keras.utils.to_categorical(labels,10)\n#Data Reshaping\npixels=pixels.reshape(42000,28,28,1);\npixels=pixels\/255\nfor i in range(10):\n    print(\"label is:\",labels[i])\n    plt.imshow(pixels[i])\n    plt.show()\n\n\n\n","f683b34a":"from sklearn.model_selection import train_test_split\nX_train,X_test,label_train,label_test=train_test_split(pixels,labels,test_size=0.2,random_state=0)","58d77627":"model=Sequential()\nmodel.add(Conv2D(64,kernel_size=(3,3),padding='Same',activation='relu',input_shape=(28,28,1,)))\nmodel.add(Conv2D(32,kernel_size=(2,2),padding='Same',activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))\nmodel.add(Dropout(0.3))\nmodel.add(Conv2D(64,kernel_size=(3,3),padding='Same',activation='relu'))\nmodel.add(Conv2D(32,kernel_size=(2,2),padding='Same',activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.3))\nmodel.add(Conv2D(24,kernel_size=(3,3),padding='Same',activation='relu'))\nmodel.add(Conv2D(12,kernel_size=(2,2),padding='Same',activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))\nmodel.add(Dropout(0.3))\nmodel.add(Flatten())\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dense(10,activation='softmax'))\nmodel.summary()","57c64c6a":"model.compile(loss=\"categorical_crossentropy\",optimizer=Adam(),metrics=['accuracy'])\nmodel.fit(X_train,label_train,batch_size=64,epochs=40,validation_data=(X_test,label_test))","566f4ae5":"for i in range(20):\n    print(model.predict(pixels[i].reshape(1,28,28,1)).argmax())\n    plt.imshow(pixels[i].reshape(28,28))\n    plt.show()\n    ","7440c90a":"s1=np.array(test)\npixels1=s1[:,0:784]\n#Data Reshaping\npixels1=pixels1.reshape(28000,28,28,1);\npixels1=pixels1\/255","6768bf0e":"mad=[0]*28000\nsid=[0]*28000\nfor i in range(28000):\n    #print(model.predict(pixels1[i].reshape(1,28,28,1)).argmax(),\" \",i+1)\n    mad[i]=model.predict(pixels1[i].reshape(1,28,28,1)).argmax()\n    sid[i]=i+1\n","b05ad664":"np.array(mad)\nnp.array(sid)\n\n\n","e7121fce":"my_sub=pd.DataFrame({\"ImageId\":sid,\"Label\":mad})\nmy_sub.to_csv('submission.csv', index=False)","7e494488":" **MNIST Classifier USING KERAS CNN **\n> The following kernel is a machine learning model based on convolutional networks architecture  used to classify Handwritten digits from the MNIST dataset.\n\nThe kernel is divided into -- main parts.\n1. Importing Necessary Libraries (keras,numpy,pandas,matplotlib)\n2. Data Preprocessing\n3. Splitting into Train-Test Split\n4. Model Selection\n5. Checking Model Effectiveness."}}