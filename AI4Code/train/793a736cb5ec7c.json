{"cell_type":{"800af6f9":"code","90c00cbb":"code","6842dbdd":"code","d034cbb3":"code","5f5a84a4":"code","f812e993":"code","0386ff55":"code","44ecca61":"code","c3c32ed0":"code","34464e52":"code","d69ce83e":"code","32726422":"code","3e44175d":"code","068ff6aa":"markdown"},"source":{"800af6f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","90c00cbb":"# Creating the folder to load the pre-trained weights\n!mkdir -p \/root\/.cache\/torch\/checkpoints\n!cp ..\/input\/resnet50\/resnet50-19c8e357.pth \/root\/.cache\/torch\/checkpoints\/resnet50-19c8e357.pth","6842dbdd":"# Importing the required dependencies\n\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","d034cbb3":"path = '\/kaggle\/input\/painting-vs-photograph-classification-dataset'\n\n#ImageDataBunch is a method to make a pytorch dataloader from folder\ndata = ImageDataBunch.from_folder(path, size=224, bs=16, \n                                  ds_tfms=get_transforms()\n                                 ).normalize(imagenet_stats)","5f5a84a4":"data.show_batch(rows=3, figsize=(7,7))","f812e993":"print(data.classes) # Printing the distinct classes\nlen(data.classes), data.c ","0386ff55":"learn = cnn_learner(data, models.resnet50, metrics=error_rate) \n# You can try with different pretrained models\n\nlearn.model","44ecca61":"#Training the model using the fit one cycle approach\nlearn.fit_one_cycle(4)","c3c32ed0":"learn.recorder.plot_losses()","34464e52":"learn.unfreeze()","d69ce83e":"learn.fit_one_cycle(2, max_lr=slice(5e-6 ,2e-5))","32726422":"interp = ClassificationInterpretation.from_learner(learn)\nlosses,idxs = interp.top_losses()","3e44175d":"interp.plot_top_losses(9, figsize=(15,11))","068ff6aa":"For more information about the method is given in the following [link](http:\/\/)"}}