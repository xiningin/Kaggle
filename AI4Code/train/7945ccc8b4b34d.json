{"cell_type":{"1cf7132e":"code","0b8cf96c":"code","5ebf69c3":"code","bdf53425":"code","f0b4832a":"code","698ea037":"code","349e1c0b":"code","20119656":"code","ee54b003":"code","b55858a5":"code","7d7b3804":"code","c2ea00f7":"code","e2861906":"code","6357452d":"code","d4ec7306":"code","9a35bc9e":"code","8ab33451":"code","f29eefa4":"code","f23d88d6":"code","6d21e983":"code","06e130ad":"code","dfe93b7f":"code","fedd14b2":"code","fe8da323":"code","b01b4ad2":"code","dabecdeb":"code","fb5973a6":"code","56a1f47d":"code","70656ff2":"code","ea130ad2":"code","98413984":"code","36bdf989":"code","92c69735":"code","3f8a2440":"code","81faaa57":"code","ccc5a30c":"code","f3d6ce94":"code","63516c45":"code","7fb83df6":"code","f4ac7def":"code","93a2999e":"code","686d7866":"code","1d12f986":"code","da7bbd9a":"code","f0498634":"code","61a113d3":"code","969b9737":"code","432bc047":"code","7e6097c0":"code","5c6a7a43":"code","e32bfce5":"code","b6b21441":"code","f7ed5b2f":"code","d3ca57e9":"code","04969c42":"code","8d8c7c89":"code","b2a0862d":"code","586eb4a3":"code","9a83c5d0":"code","b3ed7f79":"code","ad0b8b60":"markdown","cde3ff15":"markdown","98a62fdb":"markdown","0d1e22c2":"markdown","0ae8f0fa":"markdown","b4f7b3ab":"markdown","8761939e":"markdown","1fa4154d":"markdown","e5b78a87":"markdown","1fe53ef2":"markdown","2d3307b7":"markdown","04df9521":"markdown","c0a088b6":"markdown","33edb6a8":"markdown","d3f68d35":"markdown","6cc50cb0":"markdown","bfac11b3":"markdown","bf864877":"markdown","4a6e9dbc":"markdown","8a2792eb":"markdown","f9a7ee4b":"markdown","5c8dada7":"markdown","3f9f5c36":"markdown","540579b1":"markdown","f81471ed":"markdown","c869efea":"markdown","4bff9040":"markdown","5abad7ba":"markdown","8adc9eaa":"markdown","6ee70c25":"markdown","f7b04c70":"markdown","da28b002":"markdown","6b4bbcc1":"markdown","6a2244ba":"markdown","4e084756":"markdown","5baa9dc5":"markdown","9f41ef75":"markdown","be28104d":"markdown","2d72f95e":"markdown","e5e34af3":"markdown","0b6f6e55":"markdown","f72ff5b3":"markdown","30d4c404":"markdown","723521e9":"markdown","a6e4870d":"markdown","b4dc2482":"markdown","2c387c5e":"markdown","59f433da":"markdown","8a19041d":"markdown","b7214144":"markdown","141a8aae":"markdown","0ad4a09e":"markdown","cfc1dce7":"markdown","2166d0b1":"markdown"},"source":{"1cf7132e":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","0b8cf96c":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5ebf69c3":"# visulaisation\nfrom matplotlib.pyplot import xticks\n%matplotlib inline","bdf53425":"# Data display coustomization\npd.set_option('display.max_columns', None)\npd.set_option('display.max_colwidth', -1)","f0b4832a":"# To perform Hierarchical clustering\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.cluster import KMeans","698ea037":"# import all libraries and dependencies for machine learning\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.decomposition import IncrementalPCA\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nfrom math import isnan","349e1c0b":"ngo= pd.read_csv(r\"\/kaggle\/input\/help-international\/Country-data.csv\")\nngo.head()","20119656":"word=pd.read_csv(r\"\/kaggle\/input\/help-international\/data-dictionary.csv\")\nword.head(len(word))","ee54b003":"ngo_dub = ngo.copy()\n\n# Checking for duplicates and dropping the entire duplicate row if any\nngo_dub.drop_duplicates(subset=None, inplace=True)\n","b55858a5":"ngo_dub.shape","7d7b3804":"ngo.shape","c2ea00f7":"ngo.shape","e2861906":"ngo.info()","6357452d":"ngo.describe()","d4ec7306":"(ngo.isnull().sum() * 100 \/ len(ngo)).value_counts(ascending=False)","9a35bc9e":"ngo.isnull().sum().value_counts(ascending=False)","8ab33451":"(ngo.isnull().sum(axis=1) * 100 \/ len(ngo)).value_counts(ascending=False)","f29eefa4":"ngo.isnull().sum(axis=1).value_counts(ascending=False)","f23d88d6":"# Converting exports,imports and health spending percentages to absolute values.\n\nngo['exports'] = ngo['exports'] * ngo['gdpp']\/100\nngo['imports'] = ngo['imports'] * ngo['gdpp']\/100\nngo['health'] = ngo['health'] * ngo['gdpp']\/100","6d21e983":"ngo.head()","06e130ad":"# Child Mortality Rate : Death of children under 5 years of age per 1000 live births\nplt.figure(figsize = (30,5))\nchild_mort = ngo[['country','child_mort']].sort_values('child_mort', ascending = False)\nax = sns.barplot(x='country', y='child_mort', data= child_mort)\nax.set(xlabel = '', ylabel= 'Child Mortality Rate')\nplt.xticks(rotation=90)\nplt.show()","dfe93b7f":"plt.figure(figsize = (10,5))\nchild_mort_top10 = ngo[['country','child_mort']].sort_values('child_mort', ascending = False).head(10)\nax = sns.barplot(x='country', y='child_mort', data= child_mort_top10)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Child Mortality Rate')\nplt.xticks(rotation=90)\nplt.show()","fedd14b2":"# Fertility Rate: The number of children that would be born to each woman if the current age-fertility rates remain the same\nplt.figure(figsize = (30,5))\ntotal_fer = ngo[['country','total_fer']].sort_values('total_fer', ascending = False)\nax = sns.barplot(x='country', y='total_fer', data= total_fer)\nax.set(xlabel = '', ylabel= 'Fertility Rate')\nplt.xticks(rotation=90)\nplt.show()\n","fe8da323":"plt.figure(figsize = (10,5))\ntotal_fer_top10 = ngo[['country','total_fer']].sort_values('total_fer', ascending = False).head(10)\nax = sns.barplot(x='country', y='total_fer', data= total_fer_top10)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Fertility Rate')\nplt.xticks(rotation=90)\nplt.show()","b01b4ad2":"# Life Expectancy: The average number of years a new born child would live if the current mortality patterns are to remain same\nplt.figure(figsize = (32,5))\nlife_expec = ngo[['country','life_expec']].sort_values('life_expec', ascending = True)\nax = sns.barplot(x='country', y='life_expec', data= life_expec)\nax.set(xlabel = '', ylabel= 'Life Expectancy')\nplt.xticks(rotation=90)\nplt.show()","dabecdeb":"plt.figure(figsize = (10,5))\nlife_expec_bottom10 = ngo[['country','life_expec']].sort_values('life_expec', ascending = True).head(10)\nax = sns.barplot(x='country', y='life_expec', data= life_expec_bottom10)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Life Expectancy')\nplt.xticks(rotation=90)\nplt.show()","fb5973a6":"# Health :Total health spending as %age of Total GDP.\nplt.figure(figsize = (32,5))\nhealth = ngo[['country','health']].sort_values('health', ascending = True)\nax = sns.barplot(x='country', y='health', data= health)\nax.set(xlabel = '', ylabel= 'Health')\nplt.xticks(rotation=90)\nplt.show()","56a1f47d":"plt.figure(figsize = (10,5))\nhealth_bottom10 = ngo[['country','health']].sort_values('health', ascending = True).head(10)\nax = sns.barplot(x='country', y='health', data= health_bottom10)\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Health')\nplt.xticks(rotation=90)\nplt.show()","70656ff2":"# The GDP per capita : Calculated as the Total GDP divided by the total population.\nplt.figure(figsize = (32,5))\ngdpp = ngo[['country','gdpp']].sort_values('gdpp', ascending = True)\nax = sns.barplot(x='country', y='gdpp', data= gdpp)\nax.set(xlabel = '', ylabel= 'GDP per capita')\nplt.xticks(rotation=90)\nplt.show()","ea130ad2":"plt.figure(figsize = (10,5))\ngdpp_bottom10 = ngo[['country','gdpp']].sort_values('gdpp', ascending = True).head(10)\nax = sns.barplot(x='country', y='gdpp', data= gdpp_bottom10)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'GDP per capita')\nplt.xticks(rotation=90)\nplt.show()","98413984":"# Per capita Income : Net income per person\nplt.figure(figsize = (32,5))\nincome = ngo[['country','income']].sort_values('income', ascending = True)\nax = sns.barplot(x='country', y='income', data=income)\nax.set(xlabel = '', ylabel= 'Per capita Income')\nplt.xticks(rotation=90)\nplt.show()","36bdf989":"plt.figure(figsize = (10,5))\nincome_bottom10 = ngo[['country','income']].sort_values('income', ascending = True).head(10)\nax = sns.barplot(x='country', y='income', data= income_bottom10)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Per capita Income')\nplt.xticks(rotation=90)\nplt.show()","92c69735":"# Inflation: The measurement of the annual growth rate of the Total GDP\nplt.figure(figsize = (32,5))\ninflation = ngo[['country','inflation']].sort_values('inflation', ascending = False)\nax = sns.barplot(x='country', y='inflation', data= inflation)\nax.set(xlabel = '', ylabel= 'Inflation')\nplt.xticks(rotation=90)\nplt.show()","3f8a2440":"plt.figure(figsize = (10,5))\ninflation_top10 = ngo[['country','inflation']].sort_values('inflation', ascending = False).head(10)\nax = sns.barplot(x='country', y='inflation', data= inflation_top10)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Inflation')\nplt.xticks(rotation=90)\nplt.show()","81faaa57":"# Exports: Exports of goods and services. Given as %age of the Total GDP\nplt.figure(figsize = (32,5))\nexports = ngo[['country','exports']].sort_values('exports', ascending = True)\nax = sns.barplot(x='country', y='exports', data= exports)\nax.set(xlabel = '', ylabel= 'Exports')\nplt.xticks(rotation=90)\nplt.show()","ccc5a30c":"plt.figure(figsize = (10,5))\nexports_bottom10 = ngo[['country','exports']].sort_values('exports', ascending = True).head(10)\nax = sns.barplot(x='country', y='exports', data= exports_bottom10)\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Exports')\nplt.xticks(rotation=90)\nplt.show()","f3d6ce94":"# Imports: Imports of goods and services. Given as %age of the Total GDP\nplt.figure(figsize = (32,5))\nimports = ngo[['country','imports']].sort_values('imports', ascending = True)\nax = sns.barplot(x='country', y='imports', data= imports)\nax.set(xlabel = '', ylabel= 'Imports')\nplt.xticks(rotation=90)\nplt.show()","63516c45":"plt.figure(figsize = (10,5))\nimports_bottom10 = ngo[['country','imports']].sort_values('imports', ascending = True).head(10)\nax = sns.barplot(x='country', y='imports', data= imports_bottom10)\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Imports')\nplt.xticks(rotation=90)\nplt.show()","7fb83df6":"fig, axs = plt.subplots(3,3,figsize = (18,18))\n\n# Child Mortality Rate : Death of children under 5 years of age per 1000 live births\n\ntop5_child_mort = ngo[['country','child_mort']].sort_values('child_mort', ascending = False).head()\nax = sns.barplot(x='country', y='child_mort', data= top5_child_mort, ax = axs[0,0])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Child Mortality Rate')\n\n# Fertility Rate: The number of children that would be born to each woman if the current age-fertility rates remain the same\ntop5_total_fer = ngo[['country','total_fer']].sort_values('total_fer', ascending = False).head()\nax = sns.barplot(x='country', y='total_fer', data= top5_total_fer, ax = axs[0,1])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Fertility Rate')\n\n# Life Expectancy: The average number of years a new born child would live if the current mortality patterns are to remain same\n\nbottom5_life_expec = ngo[['country','life_expec']].sort_values('life_expec', ascending = True).head()\nax = sns.barplot(x='country', y='life_expec', data= bottom5_life_expec, ax = axs[0,2])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Life Expectancy')\n\n# Health :Total health spending as %age of Total GDP.\n\nbottom5_health = ngo[['country','health']].sort_values('health', ascending = True).head()\nax = sns.barplot(x='country', y='health', data= bottom5_health, ax = axs[1,0])\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Health')\n\n# The GDP per capita : Calculated as the Total GDP divided by the total population.\n\nbottom5_gdpp = ngo[['country','gdpp']].sort_values('gdpp', ascending = True).head()\nax = sns.barplot(x='country', y='gdpp', data= bottom5_gdpp, ax = axs[1,1])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'GDP per capita')\n\n# Per capita Income : Net income per person\n\nbottom5_income = ngo[['country','income']].sort_values('income', ascending = True).head()\nax = sns.barplot(x='country', y='income', data= bottom5_income, ax = axs[1,2])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Per capita Income')\n\n\n# Inflation: The measurement of the annual growth rate of the Total GDP\n\ntop5_inflation = ngo[['country','inflation']].sort_values('inflation', ascending = False).head()\nax = sns.barplot(x='country', y='inflation', data= top5_inflation, ax = axs[2,0])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Inflation')\n\n\n# Exports: Exports of goods and services. Given as %age of the Total GDP\n\nbottom5_exports = ngo[['country','exports']].sort_values('exports', ascending = True).head()\nax = sns.barplot(x='country', y='exports', data= bottom5_exports, ax = axs[2,1])\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Exports')\n\n\n# Imports: Imports of goods and services. Given as %age of the Total GDP\n\nbottom5_imports = ngo[['country','imports']].sort_values('imports', ascending = True).head()\nax = sns.barplot(x='country', y='imports', data= bottom5_imports, ax = axs[2,2])\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', ylabel= 'Imports')\n\nfor ax in fig.axes:\n    plt.sca(ax)\n    plt.xticks(rotation = 90)    \nplt.tight_layout()\nplt.savefig('EDA')\nplt.show()","f4ac7def":"# Let's check the correlation coefficients to see which variables are highly correlated\n\nplt.figure(figsize = (10, 10))\nsns.heatmap(ngo.corr(), annot = True, cmap=\"rainbow\")\nplt.savefig('Correlation')\nplt.show()","93a2999e":"sns.pairplot(ngo,corner=True,diag_kind=\"kde\")\nplt.show()","686d7866":"# Data before Outlier Treatment \nngo.describe()","1d12f986":"f, axes = plt.subplots(3, 3, figsize=(20, 15))\ns=sns.violinplot(y=ngo.child_mort,ax=axes[0, 0])\naxes[0, 0].set_title('Child Mortality Rate')\ns=sns.violinplot(y=ngo.exports,ax=axes[0, 1])\naxes[0, 1].set_title('Exports')\ns=sns.violinplot(y=ngo.health,ax=axes[0, 2])\naxes[0, 2].set_title('Health')\n\ns=sns.violinplot(y=ngo.imports,ax=axes[1, 0])\naxes[1, 0].set_title('Imports')\ns=sns.violinplot(y=ngo.income,ax=axes[1, 1])\naxes[1, 1].set_title('Income per Person')\ns=sns.violinplot(y=ngo.inflation,ax=axes[1, 2])\naxes[1, 2].set_title('Inflation')\n\ns=sns.violinplot(y=ngo.life_expec,ax=axes[2, 0])\naxes[2, 0].set_title('Life Expectancy')\ns=sns.violinplot(y=ngo.total_fer,ax=axes[2, 1])\naxes[2, 1].set_title('Total Fertility')\ns=sns.violinplot(y=ngo.gdpp,ax=axes[2, 2])\naxes[2, 2].set_title('GDP per Capita')\ns.get_figure().savefig('boxplot subplots.png')\nplt.show()","da7bbd9a":"plt.figure(figsize = (20,20))\nfeatures=['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\nfor i in enumerate(features):\n    plt.subplot(4,3,i[0]+1)\n    sns.distplot(ngo[i[1]])","f0498634":"Q3 = ngo.exports.quantile(0.99)\nQ1 = ngo.exports.quantile(0.01)\nngo['exports'][ngo['exports']<=Q1]=Q1\nngo['exports'][ngo['exports']>=Q3]=Q3","61a113d3":"Q3 = ngo.imports.quantile(0.99)\nQ1 = ngo.imports.quantile(0.01)\nngo['imports'][ngo['imports']<=Q1]=Q1\nngo['imports'][ngo['imports']>=Q3]=Q3","969b9737":"Q3 = ngo.health.quantile(0.99)\nQ1 = ngo.health.quantile(0.01)\nngo['health'][ngo['health']<=Q1]=Q1\nngo['health'][ngo['health']>=Q3]=Q3","432bc047":"Q3 = ngo.income.quantile(0.99)\nQ1 = ngo.income.quantile(0.01)\nngo['income'][ngo['income']<=Q1]=Q1\nngo['income'][ngo['income']>=Q3]=Q3","7e6097c0":"Q3 = ngo.inflation.quantile(0.99)\nQ1 = ngo.inflation.quantile(0.01)\nngo['inflation'][ngo['inflation']<=Q1]=Q1\nngo['inflation'][ngo['inflation']>=Q3]=Q3","5c6a7a43":"Q3 = ngo.life_expec.quantile(0.99)\nQ1 = ngo.life_expec.quantile(0.01)\nngo['life_expec'][ngo['life_expec']<=Q1]=Q1\nngo['life_expec'][ngo['life_expec']>=Q3]=Q3","e32bfce5":"Q3 = ngo.child_mort.quantile(0.99)\nQ1 = ngo.child_mort.quantile(0.01)\nngo['child_mort'][ngo['child_mort']<=Q1]=Q1\nngo['child_mort'][ngo['child_mort']>=Q3]=Q3","b6b21441":"Q3 = ngo.total_fer.quantile(0.99)\nQ1 = ngo.total_fer.quantile(0.01)\nngo['total_fer'][ngo['total_fer']<=Q1]=Q1\nngo['total_fer'][ngo['total_fer']>=Q3]=Q3","f7ed5b2f":"Q3 = ngo.gdpp.quantile(0.99)\nQ1 = ngo.gdpp.quantile(0.01)\nngo['gdpp'][ngo['gdpp']<=Q1]=Q1\nngo['gdpp'][ngo['gdpp']>=Q3]=Q3","d3ca57e9":"# Data sfter Outlier Treatment \nngo.describe()","04969c42":"f, axes = plt.subplots(3, 3, figsize=(20, 15))\ns=sns.violinplot(y=ngo.child_mort,ax=axes[0, 0])\naxes[0, 0].set_title('Child Mortality Rate')\ns=sns.violinplot(y=ngo.exports,ax=axes[0, 1])\naxes[0, 1].set_title('Exports')\ns=sns.violinplot(y=ngo.health,ax=axes[0, 2])\naxes[0, 2].set_title('Health')\n\ns=sns.violinplot(y=ngo.imports,ax=axes[1, 0])\naxes[1, 0].set_title('Imports')\ns=sns.violinplot(y=ngo.income,ax=axes[1, 1])\naxes[1, 1].set_title('Income per Person')\ns=sns.violinplot(y=ngo.inflation,ax=axes[1, 2])\naxes[1, 2].set_title('Inflation')\n\ns=sns.violinplot(y=ngo.life_expec,ax=axes[2, 0])\naxes[2, 0].set_title('Life Expectancy')\ns=sns.violinplot(y=ngo.total_fer,ax=axes[2, 1])\naxes[2, 1].set_title('Total Fertility')\ns=sns.violinplot(y=ngo.gdpp,ax=axes[2, 2])\naxes[2, 2].set_title('GDP per Capita')\ns.get_figure().savefig('boxplot subplots.png')\nplt.show()","8d8c7c89":"FinalList=ngo.sort_values(by = ['child_mort','income','gdpp',], ascending = [False, True, True]).head()\nFinalList['country']\nFinalList.reset_index(drop=True).country[:5]","b2a0862d":"# BarPlot for Child Mortality of countries which are in need of aid\ndf_list_cm = pd.DataFrame(FinalList.groupby(['country'])['child_mort'].mean().sort_values(ascending = False))\nax=df_list_cm.plot(kind = 'bar',figsize = (10,5))\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.title('Country and Child Mortality')\nplt.xlabel(\"Country\",fontweight = 'bold')\nplt.ylabel(\"Child Mortality\", fontsize = 12, fontweight = 'bold')\nplt.show()","586eb4a3":"# BarPlot for Per Capita Income of countries which are in need of aid\n\ndf_list_in = pd.DataFrame(FinalList.groupby(['country'])['income'].mean().sort_values(ascending = True))\nax=df_list_in.plot(kind = 'bar',figsize = (10,5))\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.title('Country and Per Capita Income')\nplt.xlabel(\"Country\",fontweight = 'bold')\nplt.ylabel(\"Per Capita Income\", fontsize = 12, fontweight = 'bold')\nplt.show()","9a83c5d0":"# BarPlot for GDP of countries which are in need of aid\n\ndf_list_gdp =pd.DataFrame(FinalList.groupby(['country'])['gdpp'].mean().sort_values(ascending = True))\nax=df_list_gdp.plot(kind = 'bar',figsize = (10,5))\nfor p in ax.patches:\n    ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.01 , p.get_height() * 1.01))\n\nplt.title('Country and GDP per capita')\nplt.xlabel(\"Country\",fontweight = 'bold')\nplt.ylabel(\"GDP per capita\", fontsize = 12, fontweight = 'bold')\nplt.show()","b3ed7f79":"# Final countries list\nFinalList.reset_index(drop=True).country","ad0b8b60":"This problem is solved using EDA only.\nAdvaced topic like PCA,K-means &  Hierarchical are not used here.\n\nYou can view notebooks where \n1. Clustering using K-means + Hierarchical + PCA : https:\/\/www.kaggle.com\/gauravduttakiit\/clustering-using-k-means-hierarchical-pca\n2. Categorize countries using K-means + PCA : https:\/\/www.kaggle.com\/gauravduttakiit\/categorize-countries-using-k-means-pca\n3. Categorize countries using Hierarchical + PCA : https:\/\/www.kaggle.com\/gauravduttakiit\/categorize-countries-using-hierarchical-pca","cde3ff15":"### Null Count: Rows","98a62fdb":"## Data Dictionary","0d1e22c2":"### Null Percentage: Rows","0ae8f0fa":"## Duplicate Check","b4f7b3ab":"From the business understanding we have learnt that Child_Mortality, Income, Gdpp are some important factors which decides the development of any country. Hence, we will proceed with analyzing these 3 components to build some meaningful clusters.","8761939e":"### Plot histogram for each continous variables","1fa4154d":"Top 10 Countries having lowest Per capita Income are from East Africa","e5b78a87":"We are able to see how Fertility Rate is distributed across the all countries.","1fe53ef2":"Top 10 Countries having lowest GDP per capita are from East Africa","2d3307b7":"# Data Collected \/ Received","04df9521":"# Data Preparation","c0a088b6":"We are able to see how Child Mortality Rate is distributed across the all countries. Focus on the objective of the task.","33edb6a8":"We are able to see how Exports is distributed across the all countries. Focus on the objective of the task.","d3f68d35":"### Null Count: Columns","6cc50cb0":"Top 10 Countries having lowest health spending are mix bag of countries where per Capita income is very high or involved in unrest activities.","bfac11b3":"We are able to see how GDP per capita is distributed across the all countries. Focus on the objective of the task.","bf864877":"Visualization each columns using violinplot","4a6e9dbc":"Top 10 Countries having lowest Exports are from mostly from underdeveloped \/ developing countries ","8a2792eb":"We are able to see how Imports is distributed across the all countries. Focus on the objective of the task.","f9a7ee4b":"We are able to see how Per capita Income is distributed across the all countries. Focus on the objective of the task.","5c8dada7":"5 reasons why we used a violin graph over boxplot\n- Violin graph is like box plot, but better\n- Violin graph is like density plot, but much useful\n- Violin graph is visually intuitive and attractive\n- Violin graph is non-parametric\n- There are many ways to use violin graphs","3f9f5c36":"My main task is to cluster the countries by the factors mentioned above and then present the solution. The following approach is suggested :\n\n- Start off with the necessary data inspection and EDA tasks suitable for this dataset - data cleaning, univariate analysis, bivariate analysis etc.\n\n\n\n\n- **Outlier Analysis:** We must perform the Outlier Analysis on the dataset. However, We do have the flexibility of not removing the outliers if it suits the business needs or a lot of countries are getting removed. Hence, all we need to do is find the outliers in the dataset, and then choose whether to keep them or remove them depending on the results We get.\n\n\n- Try both K-means and Hierarchical clustering(both single and complete linkage) on this dataset to create the clusters. [Note that both the methods may not produce identical results and We might have to choose one of them for the final list of countries.]\n\n\n- Analyse the clusters and identify the ones which are in dire need of aid. We can analyse the clusters by comparing how these three variables - [**gdpp, child_mort and income**] vary for each cluster of countries to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries.\n\n\n- Also, We need to perform visualisations on the clusters that have been formed.  We can do this by choosing any two of the three variables mentioned above on the X-Y axes and plotting a scatter plot of all the countries and differentiating the clusters. Make sure We create visualisations for all the three pairs. We can also choose other types of plots like boxplots, etc. \n\n\n- Both K-means and Hierarchical may give different results because of previous analysis (whether We chose to keep or remove the outliers, how many clusters We chose,  etc.) Hence, there might be some subjectivity in the final number of countries that We think should be reported back to the CEO since they depend upon the preceding analysis as well. Here, make sure that We report back at least 5 countries which are in direst need of aid from the analysis work that we perform.","540579b1":"**HELP International** is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\n \n\nAfter the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n\n\n\nAnd this is where I come in as a data analyst. My job is to categorise the countries using some socio-economic and health factors that determine the overall development of the country. Then I  need to suggest the countries which the CEO needs to focus on the most. ","f81471ed":"## Univariate Analysis","c869efea":"## Outlier Analysis","4bff9040":"## Data Loading","5abad7ba":"Deducing imports,exports and health spending from percentage values to actual values of their GDP per capita .Because the percentage values don't give a clear picture of that country. For example few coutries Austria and Belarus have almost same exports % but their gdpp has a huge gap which doesn't give an accurate idea of which country is more developed than the other.","8adc9eaa":"### Null Percentage: Columns","6ee70c25":"Top 10 Countries having highest Inflation are from countries where there is social \/ political unrest in progress","f7b04c70":"## Data Inspection","da28b002":"Top 10 Countries having lowest Life Expectancy are places where healthcare system is not available or efficient.","6b4bbcc1":"The shape after running the drop duplicate command is same as the original dataframe.\n\nHence we can conclude that there were zero duplicate values in the dataset.","6a2244ba":"####  We will have a look on the lowest 5 countries for each factor. ","4e084756":"We are able to see how Life Expectancy is distributed across the all countries. Focus on the objective of the task.","5baa9dc5":"We need to choose the countries that are in the direst need of aid. Hence, we need to identify those countries with using some socio-economic and health factors that determine the overall development of the country.\n","9f41ef75":"# Objectives","be28104d":"# Introduction ","2d72f95e":"We are able to see how Inflation is distributed across the all countries. Focus on the objective of the task.","e5e34af3":"We are able to see how Total health spending is distributed across the all countries. Focus on the objective of the task.","0b6f6e55":"There are no missing \/ Null values either in columns or rows","f72ff5b3":"The datasets containing those socio-economic factors and the corresponding data dictionary are provided.","30d4c404":"Top 10 Countries having highest Fertility Rate are places where people are poorest in all.","723521e9":"It's not always we need to make model \/ML  to get a solution, Simple EDA has power to sugget solution which can be accepted by stakeholders. ","a6e4870d":"There is atleast one outlier in all the features\n- In case of gdpp and health, there are too many outliers.\n- Since we have limited number of countries(167), removing these outliers would shrink the shape of data and the under-developed countries which are in actual dire need may not contribute to the dataset.","b4dc2482":"- child_mortality and life_expentency are highly correlated with correlation of -0.89\n- child_mortality and total_fertility are highly correlated with correlation of 0.85\n- imports and exports are highly correlated with correlation of 0.99\n- life_expentency and total_fertility are highly correlated with correlation of -0.76","2c387c5e":"Top 10 Countries having lowest Imports are from mostly from Developed nations who are **Atma-Nirbhar** aka Self-Reliant, who manufacture locally to support own market or the underdeveloped \/ developing countries who are poor to afford imports due to political \/ economical turmoil","59f433da":"Top 10 Countries having highest Child Mortality Rate are present in **Africa** having poor healthcare facilities.","8a19041d":"**We use Percentile Capping (Winsorization) for outliers handling**\n- Winsorizing or winsorization is the transformation of statistics by limiting extreme values in the statistical data to reduce the effect of possibly spurious outliers.\n- In layman's terms, Winsorization (Winsorizing) at 1st and 99th percentile implies values that are less than the value at 1st percentile are replaced by the value at 1st percentile, and values that are greater than the value at 99th percentile are replaced by the value at 99th percentile. \n","b7214144":"## Data Cleaning","141a8aae":"# Final List of countries which are in need of the aid based on socio-economic factors.","0ad4a09e":"## Data Preparation","cfc1dce7":"### Derived Metrices","2166d0b1":"# Exploratory Data Analytics"}}