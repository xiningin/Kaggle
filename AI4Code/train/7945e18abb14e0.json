{"cell_type":{"6fc3eda3":"code","718c4d63":"code","beb10c66":"code","4a841f96":"code","42f03bf1":"code","63d369c5":"code","c10d6ef8":"code","88401f36":"code","52f33ea7":"code","bb2ca6b3":"code","1ed2050a":"code","8be8eaee":"code","71bd6647":"code","8f391f21":"code","46ddbe8c":"code","35d68832":"code","626b4736":"code","e44dc138":"code","5cbd347d":"code","78a031a3":"code","dadf8ffd":"code","9288b2f6":"code","09d1edbe":"code","be9da0d3":"code","f51962d7":"code","83a12033":"code","d1e6f6bf":"code","c7480eb8":"code","73d43bf4":"code","dab709a9":"code","fbaf3beb":"code","c3f3a220":"code","f1ce944f":"code","645fa1e7":"code","4c64381c":"code","942ac19e":"code","a2baf462":"code","baa6f6c4":"code","d899a15c":"code","f81b1f88":"code","9a3186ba":"code","a47223f5":"code","394ba6df":"code","be523028":"code","32053d2f":"code","70a8532a":"code","2c95cc46":"code","757adf1f":"code","2704beb6":"code","beeafb00":"code","a2db2912":"code","c2f0be0f":"code","09cd250c":"code","e581b022":"code","6a2fa57a":"code","b4bdb956":"markdown","feab2dff":"markdown","7aa6210b":"markdown","acf7aef2":"markdown","6c2fbde1":"markdown","2c32fc13":"markdown","6f976584":"markdown","e4f3f5a2":"markdown","951496fe":"markdown","da36e5d1":"markdown","d496d44d":"markdown","7e5fd4b8":"markdown","c14172bc":"markdown","21a65986":"markdown","f41b5c51":"markdown","a14f3b59":"markdown","7fe3ef2d":"markdown","e61a78ee":"markdown","d367847b":"markdown","fc0069de":"markdown","2f4f6d34":"markdown","952ac70d":"markdown","6b8e81b0":"markdown","1d4074b6":"markdown","b5cd0cc1":"markdown","b48d8410":"markdown","87fc986e":"markdown"},"source":{"6fc3eda3":"import pandas as pd\ntrain = pd.read_csv('..\/input\/train.csv', index_col=\"PassengerId\")\nprint(train.shape)    \ntrain.head()","718c4d63":"test = pd.read_csv('..\/input\/test.csv', index_col=\"PassengerId\")\nprint(test.shape)    \ntest.head()","beb10c66":"%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","4a841f96":"sns.countplot(data=train, x='Sex', hue='Survived')","42f03bf1":"pd.pivot_table(train, index=\"Sex\", values=\"Survived\")","63d369c5":"sns.countplot(data=train, x=\"Pclass\", hue=\"Survived\")","c10d6ef8":"pd.pivot_table(train, index=\"Pclass\", values='Survived')","88401f36":"sns.countplot(data=train, x=\"Embarked\", hue='Survived')","52f33ea7":"pd.pivot_table(train, index=\"Embarked\", values=\"Survived\")","bb2ca6b3":"sns.lmplot(data=train, x=\"Age\", y='Fare', hue=\"Survived\", fit_reg=False)","1ed2050a":"low_fare = train[train[\"Fare\"] < 500]  # Remove Outlier\ntrain.shape, low_fare.shape","8be8eaee":"sns.lmplot(data=low_fare, x=\"Age\", y=\"Fare\", hue=\"Survived\", fit_reg=False)","71bd6647":"low_low_fare = train[train[\"Fare\"] < 100]  # Remove Outlier","8f391f21":"train.shape, low_fare.shape, low_low_fare.shape   #Compare the number of rows","46ddbe8c":"sns.lmplot(data=low_low_fare, x=\"Age\", y=\"Fare\", hue=\"Survived\", fit_reg=False)","35d68832":"train[\"FamilySize\"] = train[\"SibSp\"] + train[\"Parch\"] + 1   #Including self\nprint(train.shape)\ntrain[[\"SibSp\", \"Parch\", \"FamilySize\"]].head()","626b4736":"sns.countplot(data=train, x=\"FamilySize\", hue=\"Survived\")","e44dc138":"# Grouping by FamilySize\ntrain.loc[train[\"FamilySize\"] == 1, \"FamilyType\"] = \"Single\"\ntrain.loc[(train[\"FamilySize\"] > 1) & (train[\"FamilySize\"] < 5), \"FamilyType\"] = \"Nuclear\"\ntrain.loc[train[\"FamilySize\"] >= 5, \"FamilyType\"] = \"Big\"\nprint(train.shape)\ntrain[[\"FamilySize\", \"FamilyType\"]].head()","5cbd347d":"sns.countplot(data=train, x=\"FamilyType\", hue=\"Survived\")","78a031a3":"pd.pivot_table(data=train, index=\"FamilyType\", values=\"Survived\")","dadf8ffd":"train[\"Name\"].head()","9288b2f6":"def get_title(name):\n    return name.split(\", \")[1].split('. ')[0]\ntrain[\"Name\"].apply(get_title).unique()","09d1edbe":"train.loc[train[\"Name\"].str.contains(\"Mr\"), \"Title\"] = \"Mr\"\ntrain.loc[train[\"Name\"].str.contains(\"Miss\"), \"Title\"] = \"Miss\"\ntrain.loc[train[\"Name\"].str.contains(\"Mrs\"), \"Title\"] = \"Mrs\"\ntrain.loc[train[\"Name\"].str.contains(\"Master\"), \"Title\"] = \"Master\"\nprint(train.shape)\ntrain[[\"Name\", \"Title\"]].head(10)","be9da0d3":"sns.countplot(data=train, x=\"Title\", hue=\"Survived\")","f51962d7":"pd.pivot_table(train, index=\"Title\", values=\"Survived\")","83a12033":"train.loc[train[\"Sex\"] == \"male\", \"Sex_encode\"] = 0\ntrain.loc[train[\"Sex\"] == \"female\", \"Sex_encode\"] = 1\nprint(train.shape)\ntrain[[\"Sex\", \"Sex_encode\"]].head()","d1e6f6bf":"test.loc[test[\"Sex\"] == \"male\", \"Sex_encode\"] = 0\ntest.loc[test[\"Sex\"] == \"female\", \"Sex_encode\"] = 1\nprint(test.shape)\ntest[[\"Sex\", \"Sex_encode\"]].head()","c7480eb8":"train[train[\"Fare\"].isnull()]","73d43bf4":"test[test[\"Fare\"].isnull()]","dab709a9":"train[\"Fare_fillin\"] = train[\"Fare\"]\nprint(train.shape)\ntrain[[\"Fare\", \"Fare_fillin\"]].head()","fbaf3beb":"test[\"Fare_fillin\"] = test[\"Fare\"]\nprint(test.shape)\ntest[[\"Fare\", \"Fare_fillin\"]].head()","c3f3a220":"train[\"Fare\"].mean()","f1ce944f":"test.loc[test[\"Fare\"].isnull(), \"Fare_fillin\"] = 32\ntest.loc[test[\"Fare\"].isnull(), [\"Fare\", \"Fare_fillin\"]]","645fa1e7":"train[\"Embarked_C\"] = train[\"Embarked\"] == \"C\"\ntrain[\"Embarked_S\"] = train[\"Embarked\"] == \"S\"\ntrain[\"Embarked_Q\"] = train[\"Embarked\"] == \"Q\"\nprint(train.shape)\ntrain[[\"Embarked\", \"Embarked_C\", \"Embarked_S\", \"Embarked_Q\"]].head()","4c64381c":"test[\"Embarked_C\"] = test[\"Embarked\"] == \"C\"\ntest[\"Embarked_S\"] = test[\"Embarked\"] == \"S\"\ntest[\"Embarked_Q\"] = test[\"Embarked\"] == \"Q\"\nprint(test.shape)\ntest[[\"Embarked\", \"Embarked_C\", \"Embarked_S\", \"Embarked_Q\"]].head()","942ac19e":"train[\"Child\"] = train[\"Age\"] < 15\nprint(train.shape)\ntrain[[\"Age\", \"Child\"]].head()","a2baf462":"test[\"Child\"] = test[\"Age\"] < 15\nprint(test.shape)\ntest[[\"Age\", \"Child\"]].head()","baa6f6c4":"train[[\"SibSp\", \"Parch\", \"FamilySize\"]].head()","d899a15c":"test[\"FamilySize\"] = test[\"SibSp\"] + test[\"Parch\"] + 1\nprint(test.shape)\ntest[[\"SibSp\", \"Parch\", \"FamilySize\"]].head()","f81b1f88":"train[\"Single\"] = train[\"FamilySize\"] == 1\ntrain[\"Nuclear\"] = (train[\"FamilySize\"] > 1) & (train[\"FamilySize\"] < 5)\ntrain[\"Big\"] = train[\"FamilySize\"] >= 5\nprint(train.shape)\ntrain[[\"FamilySize\", \"Single\", \"Nuclear\", \"Big\"]].head()","9a3186ba":"test[\"Single\"] = test[\"FamilySize\"] == 1\ntest[\"Nuclear\"] = (test[\"FamilySize\"] > 1) & (test[\"FamilySize\"] < 5)\ntest[\"Big\"] = test[\"FamilySize\"] >= 5\nprint(test.shape)\ntest[[\"FamilySize\", \"Single\", \"Nuclear\", \"Big\"]].head()","a47223f5":"train[\"Master\"] = train[\"Name\"].str.contains(\"Master\")\nprint(train.shape)\ntrain[[\"Name\", \"Master\"]].head(10)","394ba6df":"test[\"Master\"] = test[\"Name\"].str.contains(\"Master\")\nprint(test.shape)\ntest[[\"Name\", \"Master\"]].head(10)","be523028":"feature_names = [\"Pclass\", \"Sex_encode\", \"Fare_fillin\",\n                 \"Embarked_C\", \"Embarked_S\", \"Embarked_Q\",\n                 \"Child\", \"Single\", \"Nuclear\", \"Big\", \"Master\"]\nfeature_names","32053d2f":"label_name = \"Survived\"\nlabel_name","70a8532a":"X_train = train[feature_names]\nprint(X_train.shape)\nX_train.head()","2c95cc46":"X_test = test[feature_names]\nprint(X_test.shape)\nX_test.head()","757adf1f":"y_train = train[label_name]\nprint(y_train.shape)\ny_train.head()","2704beb6":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier(max_depth=8, random_state=0)\nmodel","beeafb00":"model.fit(X_train, y_train)","a2db2912":"import graphviz\nfrom sklearn.tree import export_graphviz\ndot_tree = export_graphviz(model,\n                           feature_names=feature_names,\n                           class_names=[\"Perish\", \"Survived\"],\n                           out_file=None)\ngraphviz.Source(dot_tree)","c2f0be0f":"predictions = model.predict(X_test)\nprint(predictions.shape)\npredictions[0:10]","09cd250c":"submission = pd.read_csv(\"..\/input\/gender_submission.csv\")\nprint(submission.shape)\nsubmission.head()","e581b022":"submission[\"Survived\"] = predictions\nprint(submission.shape)\nsubmission.head()","6a2fa57a":"submission = pd.DataFrame({\"PassengerId\": submission.PassengerId, \"Survived\": submission.Survived})\nsubmission.to_csv(\"submission.csv\", index=False)","b4bdb956":"## 2-1. Sex","feab2dff":"## 3-3. Encode Embarked","7aa6210b":"## 3-5. Family Size","acf7aef2":"## 3-6. Name","6c2fbde1":"### From this data, the higher class is higher survival rate.","2c32fc13":"## 3-2. Fill in missing fare","6f976584":"# **3. Preprocessing**","e4f3f5a2":"### Accoding to the result, Female's survival rate is higher than male. Female's survival rate is 74.2% and Male's survival rate is 18.9% . It means 'Sex' is very important in this data. \n### Plus, I think I should explore how to find living men. Because most of men died. So, From below I will concentrate on finding men's survival as well as important value.","951496fe":"## 3-1. Encode Sex","da36e5d1":"## 2-3. Embarked","d496d44d":"# **7. Predict** ","7e5fd4b8":"# **1. Load Dataset**","c14172bc":"# ** 6. Visuallize**","21a65986":"## 3-4. Age","f41b5c51":"## 2-5. SibSp, Parch","a14f3b59":"### If on board alone (FamilySize = 1) or too large(FamilySize>5), survival rate is very low.\n### If suitable family member (2 < = FamilySize <= 4) get on, the probability of survival is relatively high.","7fe3ef2d":"## 2-6. Name","e61a78ee":"# **2. Data explore**","d367847b":"### If get on C, It's most likely to be survived. On the other hand, if get on S, the highest number of passengers from S. But also have the highest death rate.","fc0069de":"## 2-4. Age&Fare","2f4f6d34":"# **8. Submit**","952ac70d":"# ** 5.Use Decision Tree **","6b8e81b0":"### Althogh 'Master' is a male title, Survival rate is 57.5%.","1d4074b6":"### If 'Nuclear', the survival rate is relatively high with 57.8%.","b5cd0cc1":"# **4. Train**","b48d8410":"### I can find that passengers under the age of 15 are more likely to survive, especially those who have paid less than $20 for fares.","87fc986e":"## 2-2. Pclass"}}