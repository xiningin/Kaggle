{"cell_type":{"013863e2":"code","a3f61616":"code","1944b2ab":"code","d3fc9f89":"code","384d9a6c":"code","fdf068e8":"code","5f6d286a":"code","30b553c9":"code","088e4a86":"code","25983195":"code","e16eabe4":"code","210ecb31":"code","1ce1c542":"code","4cd72267":"code","81ba1e67":"code","c9497041":"code","ebc2b4ce":"code","e9050cb6":"code","9fa516fc":"code","9fb301b7":"code","8435975f":"code","2524d610":"code","47222f43":"markdown","54f8defa":"markdown","e298c8d4":"markdown","8d8d9af5":"markdown","6cea01af":"markdown","41ebeb3e":"markdown","76c27afb":"markdown","d9b8632e":"markdown","8a6cedc6":"markdown","eacad001":"markdown","0178a186":"markdown","6d4f6d41":"markdown","badab548":"markdown","e0059700":"markdown","e760e8fa":"markdown","5585ecbc":"markdown","7d3629e6":"markdown","1ea27710":"markdown","3ae2ed1d":"markdown","03a127ca":"markdown","452c1bc7":"markdown","249924be":"markdown","cf94970b":"markdown","5ca765ac":"markdown","e35601aa":"markdown","e06d74b2":"markdown","0388b16c":"markdown","5740685d":"markdown","c6863d1b":"markdown","208d77ec":"markdown"},"source":{"013863e2":"# data manipulation\nimport pandas as pd\nimport numpy as py\n\n# data viz\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","a3f61616":"f50 = pd.read_csv('..\/input\/restaurant-business-rankings-2020\/Future50.csv')\ni100 = pd.read_csv('..\/input\/restaurant-business-rankings-2020\/Independence100.csv')\nt250 = pd.read_csv('..\/input\/restaurant-business-rankings-2020\/Top250.csv')","1944b2ab":"fig, ax = plt.subplots(1,3, figsize=(23,5))\n\nsns.heatmap(f50.isnull(), ax=ax[0])\nsns.heatmap(i100.isnull(), ax=ax[1])\nsns.heatmap(t250.isnull(), ax=ax[2])\n\nplt.show()","d3fc9f89":"display(t250.head(20))","384d9a6c":"t250.drop(['Headquarters'], axis=True, inplace=True)\nt250.drop(['Content'], axis=True, inplace=True)","fdf068e8":"display(f50.head(3))\ndisplay(i100.head(3))\ndisplay(t250.head(3))","5f6d286a":"# city and state\nf50['City'] = f50['Location'].str.split(',', expand=True)[0].str.strip()\nf50['State'] = f50['Location'].str.split(',', expand=True)[1].str.strip()\nf50.drop(['Location'], axis=1, inplace=True)\n\n# & symbol\nf50['YOY_Sales'] = f50['YOY_Sales'].str.replace('%', '').astype(float)\nf50['YOY_Units'] = f50['YOY_Units'].str.replace('%', '').astype(float)\nf50.rename(columns={'YOY_Sales':'YOY_Sales (%)', 'YOY_Units':'YOY_Units (%)'}, inplace=True)\n\nf50.tail(5)","30b553c9":"i100.head()","088e4a86":"t250['YOY_Sales'] = t250['YOY_Sales'].str.replace('%','').astype(float)\nt250['YOY_Units'] = t250['YOY_Units'].str.replace('%','').astype(float)","25983195":"t250.head()","e16eabe4":"# Numbers\n\nfig = make_subplots(rows=6, cols=2)\n\nfig.update_layout({'title': {'text':\n    'Plots of restaurant sales',\n    'x': 0.5, 'y': 0.96}})\n\nfig.add_trace(go.Histogram(x=f50['Sales'], nbinsx=10, name='Sales', marker_color='rgb(0, 71, 119)', opacity=0.5), row=1, col=1)\nfig.add_trace(go.Box(x=f50['Sales'], name='Sales', marker_color='rgb(0, 71, 119)'), row=2, col=1)\n\nfig.add_trace(go.Histogram(x=f50['YOY_Sales (%)'], nbinsx=10, name='YOY_Sales (%)', marker_color='rgb(163, 0, 0)', opacity=0.5), row=1, col=2)\nfig.add_trace(go.Box(x=f50['YOY_Sales (%)'], name='YOY_Sales (%)', marker_color='rgb(163, 0, 0)'), row=2, col=2)\n\nfig.add_trace(go.Histogram(x=f50['Units'], nbinsx=10, name='Units', marker_color='rgb(255, 119, 0)', opacity=0.5), row=3, col=1)\nfig.add_trace(go.Box(x=f50['Units'], name='Units', marker_color='rgb(255, 119, 0)'), row=4, col=1)\n\nfig.add_trace(go.Histogram(x=f50['YOY_Units (%)'], nbinsx=10, name='YOY_Units (%)', marker_color='rgb(239, 210, 141)', opacity=0.5), row=3, col=2)\nfig.add_trace(go.Box(x=f50['YOY_Units (%)'], name='YOY_Units (%)', marker_color='rgb(239, 210, 141)'), row=4, col=2)\n\nfig.add_trace(go.Histogram(x=f50['Unit_Volume'], nbinsx=10, name='Unit_Volume', marker_color='rgb(0, 175, 181)', opacity=0.5), row=5, col=1)\nfig.add_trace(go.Box(x=f50['Unit_Volume'], name='Unit_Volume', marker_color='rgb(0, 175, 181)'), row=6, col=1)\n\nfig.update_layout(\n    autosize=False,\n    width=1200,\n    height=1000,\n    margin=dict(\n        l=50,\n        r=50,\n        b=100,\n        t=100))\n\nfig.show()\n","210ecb31":"cr = f50.corr()\n\nfig = go.Figure(go.Heatmap(\n        x=cr.columns,\n        y=cr.columns,\n        z=cr.values.tolist(),\n        colorscale='RdBu', zmin=-1, zmax=1))\nfig.show()","1ce1c542":"fig = px.scatter(data_frame=f50, x='YOY_Units (%)', y='YOY_Sales (%)',\n                 hover_data=['Restaurant','City', 'State'],\n                color='Franchising',\n                size='Units',\n                color_discrete_sequence=['rgb(163, 0, 0)','rgb(0, 71, 119)'])\n\nrank1 = {\n    'x': 116.7, 'y': 130.5,\n    'showarrow': True,'arrowhead': 3,\n    'text': \"Rank 1\",\n    'font' : {'size': 15, 'color': 'black'}}\n\nrank50 = {\n    'x': 7.7, 'y': 14.4,\n    'showarrow': True,'arrowhead': 3,\n    'text': \"Rank 50\",\n    'font' : {'size': 15, 'color': 'black'}}\n\nfig.update_layout({'annotations': [rank1, rank50]})\n\nfig.show()","4cd72267":"fig = px.treemap(data_frame=f50, path=['State'], values='Units', color_continuous_scale='RdBu', color='Rank')\nfig.show()","81ba1e67":"# Numbers\n\nfig = make_subplots(rows=6, cols=2)\n\nfig.update_layout({'title': {'text':\n    'Numbers distribution',\n    'x': 0.5, 'y': 0.96}})\n\nfig.add_trace(go.Histogram(x=i100['Sales'], nbinsx=10, name='Sales', marker_color='rgb(0, 71, 119)', opacity=0.5), row=1, col=1)\nfig.add_trace(go.Box(x=i100['Sales'], name='Sales', marker_color='rgb(0, 71, 119)'), row=2, col=1)\n\nfig.add_trace(go.Histogram(x=i100['Average Check'], nbinsx=10, name='Average Check', marker_color='rgb(163, 0, 0)', opacity=0.5), row=1, col=2)\nfig.add_trace(go.Box(x=i100['Average Check'], name='Average Check', marker_color='rgb(163, 0, 0)'), row=2, col=2)\n\nfig.add_trace(go.Histogram(x=i100['Meals Served'], nbinsx=10, name='Meals Served', marker_color='rgb(255, 119, 0)', opacity=0.5), row=3, col=1)\nfig.add_trace(go.Box(x=i100['Meals Served'], name='Meals Served', marker_color='rgb(255, 119, 0)'), row=4, col=1)\n\nfig.update_layout(\n    autosize=False,\n    width=1200,\n    height=800)","c9497041":"cr = i100.corr()\n\nfig = go.Figure(go.Heatmap(\n        x=cr.columns,\n        y=cr.columns,\n        z=cr.values.tolist(),\n        colorscale='RdBu', zmin=-1, zmax=1))\nfig.show()","ebc2b4ce":"fig = px.scatter(data_frame=i100, x='Rank', y='Sales', size='Average Check',opacity=0.5, hover_data=['Restaurant','City', 'State'],\n                color_discrete_sequence=['rgb(163, 0, 0)','rgb(0, 71, 119)'])\n\nfig.show()","e9050cb6":"fig = px.treemap(data_frame=i100, path=['State'], values='Sales', color_continuous_scale='RdBu', color='Rank')\nfig.show()","9fa516fc":"fig = make_subplots(rows=4, cols=2)\n\nfig.update_layout({'title': {'text':\n    'Plots of restaurant sales',\n    'x': 0.5, 'y': 0.96}})\n\nfig.add_trace(go.Histogram(x=t250['Sales'], nbinsx=10, name='Sales', marker_color='rgb(0, 71, 119)', opacity=0.5), row=1, col=1)\nfig.add_trace(go.Box(x=t250['Sales'], name='Sales', marker_color='rgb(0, 71, 119)'), row=2, col=1)\n\nfig.add_trace(go.Histogram(x=t250['YOY_Sales'], nbinsx=10, name='YOY_Sales', marker_color='rgb(163, 0, 0)', opacity=0.5), row=1, col=2)\nfig.add_trace(go.Box(x=t250['YOY_Sales'], name='YOY_Sales', marker_color='rgb(163, 0, 0)'), row=2, col=2)\n\nfig.add_trace(go.Histogram(x=t250['Units'], nbinsx=10, name='Units', marker_color='rgb(255, 119, 0)', opacity=0.5), row=3, col=1)\nfig.add_trace(go.Box(x=t250['Units'], name='Units', marker_color='rgb(255, 119, 0)'), row=4, col=1)\n\nfig.add_trace(go.Histogram(x=t250['YOY_Units'], nbinsx=10, name='YOY_Units', marker_color='rgb(239, 210, 141)', opacity=0.5), row=3, col=2)\nfig.add_trace(go.Box(x=t250['YOY_Units'], name='YOY_Units', marker_color='rgb(239, 210, 141)'), row=4, col=2)\n\nfig.update_layout(\n    autosize=False,\n    width=1200,\n    height=600)","9fb301b7":"cr = t250.corr()\n\nfig = go.Figure(go.Heatmap(\n        x=cr.columns,\n        y=cr.columns,\n        z=cr.values.tolist(),\n        colorscale='RdBu', zmin=-1, zmax=1))\nfig.show()","8435975f":"fig = px.scatter(data_frame=t250, x='Units', y='Sales', hover_data=['Rank','Restaurant', 'Segment_Category'],\n                color_discrete_sequence=['rgb(163, 0, 0)','rgb(0, 71, 119)'])\n\nrank1 = {\n    'x': 13846, 'y': 40412,\n    'showarrow': True,'arrowhead': 3,\n    'text': \"Rank 1\",\n    'font' : {'size': 15, 'color': 'black'}}\n\nrank50 = {\n    'x': 40, 'y': 126,\n    'showarrow': True,'arrowhead': 3,\n    'text': \"Rank 250\",\n    'font' : {'size': 15, 'color': 'black'}}\n\nfig.update_layout({'annotations': [rank1, rank50]})\n\n\nfig.show()","2524d610":"fig = px.treemap(data_frame=t250, path=['Segment_Category'], values='Sales', color_continuous_scale='RdBu', color='Units')\nfig.show()","47222f43":"So where are this restaurants?","54f8defa":"# 3. Independence 100","e298c8d4":"luckilly, 'YOY_Sales (%)' and 'YOY_Units (%)' correlate well, let's dive into the plot","8d8d9af5":"- We see a clear dominance of New York and Illinois in total sales per state and rank","6cea01af":"t250 has a lot of missing values on the 'Content' and 'Headquarters' columns. Let's check them and decide wheter to drop them or not","41ebeb3e":"- From the scatter plot we can see that 'Sales', again, is the absolute factor determining the rank of the restaurants\n- In rank 1 we can find McDonald's\n- Rank 250 belongs to Jollibee","76c27afb":"# 1. Data Loading and Data Cleaning","d9b8632e":"# 2. Future 50","8a6cedc6":"## 1.1 future 50\n- For this dataframe, we are going to eliminate the simbol '$' from the 'YOY_Sales' and 'YOY_Units' values\n- then we are going to create a state column from the location, this is done by separating the column ","eacad001":"- All of the distributions have a normal shape with no so many outliers\n- 'Meals Served' is the one that has the most outliers with 7","0178a186":"- Finally, we can see that the segment that sells the most is 'Quick Service & Burger' where McDonald's belongs, without having most of the units\n- 'Quick Servic & Coffee Cafe' has the second position in sales with almost having the highest amount of units, 'Quick Service & Sandwich' has more\n- 'Quick Service & Chicken' has the third place without having a lot of units, in comparisson with other segments","6d4f6d41":"- We can see that, indeed, sales plays an absolute role in the list\n- in Rank 1, we can find Carmine's restaurant located in New york\n- Rank 100 belongs to Virgil's real barbecue, located in Las Vegas\n- The size of the bubles represent the avarage check. We don't see any decreasing or increasing trend, which means that being number doesn't imply to be expensinve or the other way around.","badab548":"- California, New York and North Carolina have the most restaurants. Not a surprise since these states are innovation hubs.","e0059700":"let's first check if there any missing values in one of the three datasets","e760e8fa":"# 4. top 250","5585ecbc":"- We can see a lot of outliers in every distribution of this dataframe. This means that restaurants in this list are being separated by large values, outsanding restaurants are part of this list","7d3629e6":"- 'Headquarters' would be valuable if most of the restaurants had it so we could implement some data wrangling, but since there are so little, we are going to drop it.","1ea27710":"Let's now clean each dataframe, adjusting their data types, eliminating symbols creating new columns","3ae2ed1d":"We are ready to inspect each list one by one","03a127ca":"- Most of the features present a normal distribution with no so many outliers.\n- Important to notice that, in this case, outliers are our friends since they provide important information: 'YOY_Sales (%)' and 'YOY_Units (%)' outliers show the restaurants with the highest rank.\n- 'YOY_Sales (%)' and 'YOY_Units (%)' are key features in the list, since the rank is based on this values: the higher the value, the better the rank. ","452c1bc7":"Let's now check our three datasets and see what we are going to face","249924be":"- We see that a higher 'YOY_Sales (%)' and 'YOY_Units (%)' yields a better rank, we can see in the plot rank 1 and 50 in opposing corners\n- The size of the bubbles represent the number of premises per restaurant. Interesting to see how rank one has a few premises in comparisson with the other restaurants. This is because of the nature of the list, rank 1 is there because is growing fast and not because is already big\n- rank 1 is not franchising and is still growing really fast, if we hove over, we can see that the restaurant is Evergreens. Would be interesting to analyze the growing strategy from this restaurant and its value proposal, taking into account that most of the restaurant in this list are franchising, implying a relationship between growth and this business model","cf94970b":"- We are going to make use of the almost perfectly correlated 'Sales'-'Rank' relationship to build our scatterplot\n- It's pretty ovbios that the most relevant desicion factor in this list is the number of Sales: the higher the sales, the better the rank","5ca765ac":"Let's begin by describing the numbers distributions","e35601aa":"## 1.2 independence 100\n- The indpendence 100 list doesn't have much to further expand the dataframe, let's give it a quick look and continue","e06d74b2":"Let's see how the features correlate so we can build a nice scatter plot","0388b16c":"Let's start describing the data","5740685d":"## 1.3 top 250\n- this list has some special characters that have to be removed to analyze numbers.","c6863d1b":"- YOY_Sales and YOY_Units are not correlated at all with Rank, which means that wath matters in this list is the actual position of the restaurants\n- Let's build the scatter plot with Units against Sales: the strongest relationship","208d77ec":"# Introduction\nThe data was obtained by means of web scraping, i.e. data download with the use of programming code based on the website code. In this case, the \"rvest\" package from the R programming language was used along with the \"SelectorGadet\" browser add-on to facilitate work with the website.\n\nThe data was downloaded from www.restaurantbusinessonline.com on January 30, 2021 with three plants describing 3 rankings: top 250, top 100 indenents and future 50 thus creating 3 tables, where the restaurant is described by several variables in each row.\n\n# Purpose\nThe purpose of this notebook is to explore the plotly library and tell a visual story of the data.\n\nThe goal is to be as visual as possible, so we are going to limit the dataframes and calculations to the very minimum, they are going to be used mostly by cleaning the data and creating features\n\n## Table of Contents\n1. [Data Loading and Data Cleaning](#1.-Data-Loading-and-Data-Cleaning)\n2. [Future 50](#2.-Future-50)\n3. [Independence 100](#3.-Independence-100)\n4. [top 250](#4.-top-250)\n\n# Features\n## future 50\n\"Future ranking\" of 50 restuarants from 2020\n- **Rank**: Position in ranking\n- **Restaurant**: Name of restaurant\n- **Location**: Location of origin of the restaurant\n- **Sales**: 2019 Systemwide Sales (000000)\n- **YOY_Sales**: Year on year sales increase in %\n- **Units**: Number of premises\n- **YOY_Units**: Year on year premises increase in %\n- **Unit_Volume**: 2019 Average Unit Volume (000)\n- **Franchising**: Is the restaurant a franchise? (Y\/N)\n\n## independence 100\n- **Rank**: Position in ranking\n- **Restaurant**: Name of restaurant\n- **Sales**: Annual sales\n- **Average Check**: Average client expenses per visit (sales \/ number of visits)\n- **City**: City of origin of the restaurant\n- **State**: State of origin of the restaurant\n- **Meals Served**: Number of meals served in 202\n\n## top 250\n- **Rank**: Position in ranking\n- **Restaurant**: Name of restaurant\n- **Content Description**: only for certain restaurants\n- **Sales**: in 2019 (000000)\n- **YOY_Sales**: Year on year sales increase in %\n- **Units**: Number of premises in US\n- **YOY_Units**: Year on year premises increase in %\n- **Headquarters**: Place of the restaurant's headquarters\n- **Segment_Category**: Menu type and \/ or industry segment"}}