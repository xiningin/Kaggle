{"cell_type":{"19bff36d":"code","c070685c":"code","43e6f82a":"code","9cfcf45a":"code","aa2d543a":"code","51d623ba":"code","d1cf5375":"code","20076f78":"code","5db83a48":"code","0fc3391e":"code","0a57151f":"code","cd793b00":"code","0cecfd24":"code","6e629b14":"code","217ee5ca":"code","8675c1c9":"code","cbb622b6":"code","23bc50c8":"code","d4c2a042":"code","b1850711":"code","83052cd8":"code","cf9b4fa0":"code","9ddf15b8":"code","3d3a94c1":"code","ece07176":"code","dfc13f2b":"code","1786106b":"code","512592e7":"code","8e878580":"markdown","53c39d08":"markdown","e6f0cfa4":"markdown","3fdfbea0":"markdown","5213202f":"markdown","353838c7":"markdown","eb661976":"markdown","13c91d78":"markdown"},"source":{"19bff36d":"!pip install pmdarima","c070685c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nimport statsmodels.api as sm\nimport pmdarima as pm\nwarnings.filterwarnings('ignore')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","43e6f82a":"filepath = '\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2021-03-31.csv'\n\ndf = pd.read_csv(filepath)\ndf.head(5)","9cfcf45a":"df.info()","aa2d543a":"df['Timestamp'] = pd.to_datetime(df['Timestamp'],unit = 's')\ndf.info()\ndf.tail()","51d623ba":"sns.heatmap(df.isna())","d1cf5375":"df.isna().sum()","20076f78":"df.index = df.Timestamp","5db83a48":"df_daily = df.resample('D').mean()\ndf_daily.head(3)","0fc3391e":"df_monthly = df.resample('M').mean()\ndf_monthly.head(3)","0a57151f":"df_yearly = df.resample('A-DEC').mean()\ndf_yearly.head(3)","cd793b00":"df_quarterly = df.resample('Q-DEC').mean()\ndf_quarterly.head(3)","0cecfd24":"df_list = [df_daily,df_monthly,df_yearly,df_quarterly]\nplt.style.use('ggplot')\n\nfig, axs = plt.subplots(2,2,figsize = (15,15))\naxs[0,0].plot(df_daily.Weighted_Price)\naxs[0,0].set_title('Daily')\naxs[0,1].plot(df_monthly.Weighted_Price)\naxs[0,1].set_title('Monthly')\naxs[1,0].plot(df_yearly.Weighted_Price)\naxs[1,0].set_title('Yearly')\naxs[1,1].plot(df_quarterly.Weighted_Price)\naxs[1,1].set_title('Quarterly')\n    \n    ","6e629b14":"df_monthly['Weighted_Price_Box'], lmbda = stats.boxcox(df_monthly['Weighted_Price'])\n\nprint('Adfuller P Value is = ' + str(sm.tsa.stattools.adfuller(df_monthly.Weighted_Price_Box)[1]))","217ee5ca":"df_monthly['Weighted_Price_Seasonal'] = df_monthly['Weighted_Price_Box'] - df_monthly['Weighted_Price_Box'].shift(12)\nprint('Adfuller P Value is = ' + str(sm.tsa.stattools.adfuller(df_monthly.Weighted_Price_Seasonal[12:])[1]))","8675c1c9":"df_monthly['Weighted_Price_Diff'] = df_monthly['Weighted_Price_Seasonal'] - df_monthly['Weighted_Price_Seasonal'].shift(1)\nprint('Adfuller P Value is = ' + str(sm.tsa.stattools.adfuller(df_monthly.Weighted_Price_Diff[13:])[1]))","cbb622b6":"plt.figure(figsize = (15,15))\n\nsm.tsa.seasonal_decompose(df_monthly.Weighted_Price_Diff[13:]).plot()\n\nplt.show()","23bc50c8":"fig, axs = plt.subplots(1,2, figsize = (15,15))\nsm.graphics.tsa.plot_acf(df_monthly.Weighted_Price_Diff[13:].values.squeeze(), lags = 48 ,ax = axs[0],zero = False )\nsm.graphics.tsa.plot_pacf(df_monthly.Weighted_Price_Diff[13:].values.squeeze(), lags = 48 ,ax = axs[1],zero = False )\n\nplt.show()","d4c2a042":"\n\ndf = df_monthly.Weighted_Price_Diff[13:]\ndf","b1850711":"model = pm.auto_arima(df,\n                      \n                     seasonal = True,\n                     m = 12,\n                     d = 1, D = 1,\n                     start_p = 1,start_q = 1,\n                     max_p = 4, max_q = 4,\n                     max_P = 4, max_Q = 4,\n                     trace = True,\n                     error_action='ignore',\n                      suppress_warnings=True)","83052cd8":"model.summary()","cf9b4fa0":"model = sm.tsa.statespace.SARIMAX(df,order = (1,1,1), seasonal_order = (3,1,1,12))\nresults = model.fit()\n","9ddf15b8":"\n\nresults.plot_diagnostics(figsize = (15,15))\nplt.show()","3d3a94c1":"#Prediction","ece07176":"# Inverse Box-Cox Transformation Function\ndef invboxcox(y,lmbda):\n    if lmbda == 0:\n        return(np.exp(y))\n    else:\n        return(np.exp(np.log(lmbda*y+1)\/lmbda))","dfc13f2b":"df_monthly['Forecastll'] = invboxcox(results.predict(end = -1),lmbda)","1786106b":"df_monthly.Weighted_Price_Diff.plot()\ndf_monthly.Forecastll.plot(color='b', ls='--', label='Predicted Weighted_Price')\nplt.legend()\nplt.title('Bitcoin exchanges, by months')\nplt.ylabel('mean USD')\nplt.show()","512592e7":"print('Please add your observation as a comment :) ')","8e878580":"P value is < 0.05, H0 could not rejected, Data is now stationary","53c39d08":"Seasonal Transformation","e6f0cfa4":"\nBox - Cox Transformation","3fdfbea0":"In correlogram chart, KDE and N(0,1) should be plotted similar but it is my first Time Series Notebook, next time i will tunning my model.\n\nAdditionally, Q-Q Chart has a little bit problem \n\n\nFrom the model.summary Prob(Q) and Prob(JB) gave that information. ","5213202f":"**Conclusion**\n\nIt was my first Notebook for Time Series and clearly observe that next time i will pay attention to model validation, Prob(Q) and Prob(JB)","353838c7":"P value is > 0.05, H0 has rejected, Data is not stationary","eb661976":"The count of missing values are same for all columns. ","13c91d78":"P value is > 0.05, H0 has rejected, Data is not stationary"}}