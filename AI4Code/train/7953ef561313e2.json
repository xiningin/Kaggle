{"cell_type":{"9f63aab5":"code","0e1a3852":"code","63ba6d05":"code","15803499":"code","00509c26":"code","f63bed60":"code","383de060":"code","ae48fc86":"code","07ae1d57":"code","168fb624":"code","c5620112":"code","cfc5f3c9":"code","b3f39db9":"code","b401baa5":"code","56174de9":"code","92a55a3d":"code","c6b02fbd":"code","95e47ffb":"code","1db40851":"code","1aa2c984":"code","02bd89f2":"code","6a2c79d9":"code","1060ea73":"code","b8d15dc5":"code","83100ab5":"code","792d20c5":"code","98049258":"code","43b97436":"markdown","1c4aed23":"markdown","7a65817f":"markdown","f2fcd09c":"markdown","0694144a":"markdown","b3166d8b":"markdown","51e767b4":"markdown","f7b4536f":"markdown","4d50a576":"markdown","e8043f54":"markdown","56dc280b":"markdown","1ebe63cb":"markdown","5a62acb2":"markdown","25f12a08":"markdown"},"source":{"9f63aab5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","0e1a3852":"dataset = pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","63ba6d05":"dataset.head()","15803499":"print(f\"The shape of given data is {dataset.shape}\")\nprint(f'The different column label:  {list(dataset.columns)}')\nprint(f\"The Sample Data coinsist of people of age between {dataset['age'].min()} to {dataset['age'].max()}\")","00509c26":"dataset.describe()","f63bed60":"print(\"The categorial cols are : \", ['sex','exng','caa','cp','fbs','restecg','slp','thall', 'output'])\nprint(\"The non categorial cols are : \", [\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\"])","383de060":"dataset.isna().sum()","ae48fc86":"dataset.dtypes","07ae1d57":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfig = make_subplots(\n    rows=2, cols=4,\n    subplot_titles=(\"Blood sugar\", \"Included engina\",\"Sex\", \"Electrocardiographic results\", \"Slope\", \"Target\", \"Chest pain type\", \"Number of major vessels\"),\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}, {\"type\": \"domain\"}, {\"type\": \"domain\"}],\n           [{\"type\": \"domain\"}, {\"type\": \"domain\"}, {\"type\": \"domain\"}, {\"type\": \"domain\"}]]\n)\nfig.add_trace(\n    go.Pie(labels=['True', 'False'], values=[(dataset['fbs'] == 1).sum(), (dataset['fbs'] == 0).sum()]),\n    row=1, col=1\n)\nfig.add_trace(\n    go.Pie(labels=['Yes', 'No'], values=[(dataset['exng'] == 1).sum(), (dataset['exng'] == 0).sum()]),\n    row=1, col=2\n)\nfig.add_trace(\n    go.Pie(labels=['T-T wave normality', 'Normal', 'Left ventricular hypertrophy'], values=[(dataset['restecg'] == 1).sum(), (dataset['restecg'] == 0).sum(), (dataset['restecg'] == 2).sum()]),\n    row=1, col=4\n)\nfig.add_trace(\n    go.Pie(labels=['Male', 'Female'], values=[(dataset['sex'] == 1).sum(), (dataset['sex'] == 0).sum()]),\n    row=1, col=3\n)\nfig.add_trace(\n    go.Pie(labels=['Atypical Angina', 'Typical Angina', 'Non-anginal Pain', 'Asymptomatic'], values=[(dataset['cp'] == 1).sum(), (dataset['cp'] == 0).sum(), (dataset['cp'] == 2).sum(), (dataset['cp'] == 3).sum()]),\n    row=2, col=3\n)\nfig.add_trace(\n    go.Pie(labels=['Yes', 'No'], values=[(dataset['slp'] == 1).sum(), (dataset['slp'] == 0).sum()]),\n    row=2, col=1\n)\nfig.add_trace(\n    go.Pie(labels=['Have diseases', 'Does not have diseases'], values=[(dataset['output'] == 1).sum(), (dataset['output'] == 0).sum()]),\n    row=2, col=2\n)\nfig.add_trace(\n    go.Pie(labels=['1', '0', '2', '3', '4'], values=[(dataset['caa'] == 1).sum(), (dataset['output'] == 0).sum(), (dataset['caa'] == 2).sum(), (dataset['caa'] == 3).sum(), (dataset['caa'] == 4).sum()]),\n    row=2, col=4\n)\n\nfig.update_layout(height=800, width=1100, title_text=\"Distribuation of Categorial Values\", showlegend=False)\nfig.show()","168fb624":"fig = make_subplots(\n    rows=2, cols=2,\n)\nfig.add_trace(go.Histogram(x=dataset.age, name='Age of the patient'),\n              row=1, col=1)\nfig.add_trace(go.Histogram(x=dataset.trtbps, name='Resting blood pressure'),\n              row=1, col=2)\nfig.add_trace(go.Histogram(x=dataset.chol, name=' Cholestoral'),\n              row=2, col=1)\nfig.add_trace(go.Histogram(x=dataset.thalachh, name='Maximum heart rate'),\n              row=2, col=2)\n\nfig.update_xaxes(title_text=\"age\", row=1, col=1)\nfig.update_xaxes(title_text=\"trtbps\", row=1, col=2)\nfig.update_xaxes(title_text=\"chol\", row=2, col=1)\nfig.update_xaxes(title_text=\"thalachh\", row=2, col=2)\n\nfig.update_yaxes(title_text=\"count\", row=1, col=1)\nfig.update_yaxes(title_text=\"count\", row=1, col=2)\nfig.update_yaxes(title_text=\"count\", row=2, col=1)\nfig.update_yaxes(title_text=\"count\", row=2, col=2)\n\nfig.update_layout(title_text=\"Distribution of Continuous features\", showlegend=False)\n\nfig.show()","c5620112":"import matplotlib.pyplot as plt\nfrom seaborn.matrix import heatmap\nplt.figure(figsize=(17,9))\nheatmap(dataset.corr(), cmap='Blues', annot=True)\nplt.title('Correlation Matrix');","cfc5f3c9":"fig = make_subplots(\n    rows=2, cols=4,\n)\nfig.add_trace(go.Bar(x=dataset.cp,y=dataset.output, name='Chest pain'),\n              row=1, col=1)\nfig.add_trace(go.Bar(x=dataset.sex,y=dataset.output, name='Sex of the patient'),\n              row=1, col=2)\nfig.add_trace(go.Bar(x=dataset.exng,y=dataset.output, name='Exercise induced angina'),\n              row=1, col=3)\nfig.add_trace(go.Bar(x=dataset.fbs,y=dataset.output, name='fasting blood sugar'),\n              row=1, col=4)\nfig.add_trace(go.Bar(x=dataset.caa,y=dataset.output, name='Number of major vessels'),\n              row=2, col=1)\nfig.add_trace(go.Bar(x=dataset.slp,y=dataset.output, name='Slope'),\n              row=2, col=2)\nfig.add_trace(go.Bar(x=dataset.restecg,y=dataset.output, name='Resting electrocardiographic'),\n              row=2, col=3)\nfig.add_trace(go.Bar(x=dataset.thall,y=dataset.output, name='Thalium Stress Test result'),\n              row=2, col=4)\nfig.update_layout(height=800, width=1100, title_text=\"Distribution of categorical features according to target variable\", showlegend=False)\n\nfig.update_xaxes(title_text=\"cp\", row=1, col=1)\nfig.update_xaxes(title_text=\"sex\", row=1, col=2)\nfig.update_xaxes(title_text=\"exng\", row=1, col=3)\nfig.update_xaxes(title_text=\"fbs\", row=1, col=4)\nfig.update_xaxes(title_text=\"caa\", row=2, col=1)\nfig.update_xaxes(title_text=\"slp\", row=2, col=2)\nfig.update_xaxes(title_text=\"restecg\", row=2, col=3)\nfig.update_xaxes(title_text=\"thall\", row=2, col=4)\n\nfig.update_yaxes(title_text=\"Number of Target patient\", row=1, col=1)\nfig.update_yaxes(title_text=\"Number of Target patient\", row=2, col=1)\n\n\nfig.show()","b3f39db9":"import seaborn as sns\nsns.pairplot(dataset,hue='output')\nplt.show()","b401baa5":"#Encoding\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\n\n## Models\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\n## Model evaluators\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score\nfrom sklearn.metrics import plot_roc_curve","56174de9":"X = dataset.drop('output', axis=1)\ny = dataset.output","92a55a3d":"#Encoding\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\n\ncat_feature = ['sex','exng','caa','cp','fbs','restecg','slp','thall']\n\none_hot = OneHotEncoder()\n\ntransformer = ColumnTransformer([('one_hot', one_hot, cat_feature)],\n                                remainder='passthrough')\ntransformed_X = transformer.fit_transform(X)\npd.DataFrame(transformed_X)","c6b02fbd":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(transformed_X, y, test_size = 0.3)","95e47ffb":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","1db40851":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB","1aa2c984":"model = {'LogisticRegression' : LogisticRegression(),\n         'KNeighborsClassifier': KNeighborsClassifier(),\n         \n         'DecisionTreeClassifier': DecisionTreeClassifier(),\n         'RandomForestClassifier' : RandomForestClassifier(),\n         'Native_Bayes': GaussianNB()}\n\ndef model_fit_score(model, X_train, X_test, y_train, y_test):\n  model_score = {}\n  for name, model in model.items():\n    model.fit(X_train, y_train) \n    y_pred_proba = model.predict_proba(X_test)\n    y_pred = np.argmax(y_pred_proba,axis=1)\n    model_score[name] = model.score(X_test, y_test)\n  return model_score  ","02bd89f2":"model_fit_score(model, X_train, X_test, y_train, y_test)","6a2c79d9":"from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import train_test_split\ngrid = {\"n_estimators\": [10, 100, 200, 500, 1000, 1200],\n         \"max_depth\": [None, 5, 10, 20, 30],\n         \"max_features\": [\"auto\", \"sqrt\"],\n         \"min_samples_split\": [2,4,6],\n         \"min_samples_leaf\": [1, 2, 4]}\nnp.random.seed(42)\nclf = RandomForestClassifier(n_jobs=-1)\nrs_clf = RandomizedSearchCV(estimator=clf,\n                            param_distributions = grid,\n                            n_iter=30,\n                            cv = 5,\n                            verbose = 2)\nrs_clf.fit(X_train, y_train);","1060ea73":"rs_clf.best_params_","b8d15dc5":"def evaluate_preds(y_true, y_preds):\n  accuracy = accuracy_score(y_true, y_preds)\n  precision = precision_score(y_true, y_preds)\n  recall = recall_score(y_true, y_preds)\n  f1 = f1_score(y_true, y_preds)\n  print(f\"Acc : {round(accuracy, 2) * 100:.2f}%\")\n  print(f\"Precision : {round(precision, 2):.2f}\")\n  print(f\"recall : {round(recall, 2):.2f}\")\n  print(f\"F1 score {round(f1, 2):.2f}\")\n\n   ","83100ab5":"evaluate_preds(y_test, rs_clf.predict(X_test))","792d20c5":"from sklearn.metrics import  roc_curve\n\n# Make prediction with probability \ny_probs = rs_clf.predict_proba(X_test)\n\ny_probs_positive = y_probs[:, 1] #axis = 1\n\nfpr, tpr, threshold = roc_curve(y_test, y_probs_positive)\n\nfpr","98049258":"import matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.plot(fpr, tpr)\nax.plot([0,1], [0,1])\nax.set(title=\"ROC Curve\",\n        xlabel=\"fpr\",\n        ylabel=\"tpr\",)\nplt.show()","43b97436":"## 3.5 Pairplot","1c4aed23":"# 1. Introduction\n","7a65817f":"## 2.3 Undestanding Dataset","f2fcd09c":"## 3.2 Data visual of non categorical data ","0694144a":"## 5.1 Importing Packages\n","b3166d8b":"# 3 Exploratory data analysis","51e767b4":"## Importing library","f7b4536f":"## 3.3 Correlation matrix\n","4d50a576":"# 5 Modeling","e8043f54":"## 3.4 Count of target variable according to continuous features","56dc280b":"## 3.1 Data visual of categorical data","1ebe63cb":"# 4 Observation and Conclusion from data exploring and EDA\n\n","5a62acb2":"## From 2.3 Data understanding\n1. There are no missing values in the data therefore we can fit model directly without any imputation to missing data.\n\n2. There are no alphabetical data and model will fit directly scikit learn classification model required only numerical data.\n\n3. There are some categorical data column therefore we will use Encoder to preprocess the data, its very important (we will use data with and without encoding to see the result)\n","25f12a08":"## From EDA\n1. There is no linear correlation between continuous variable according to the heatmap.\n\n2. The scatterplot heatmap matrix suggests that there might be some correlation between output and cp, output and thalachh, output and slp\n\n3. According to the 3.4 distribution plot.\n\n  * People with Non-Anginal chest pain, that is with cp = 2 have higher number of heart attack case.\n\n  * People with sex = 1 have higher number of heart attack case.\n\n  * People with no exercise induced angina, that is with exng = 0 have higher number of heart attack case.\n\n  * People with 0 major vessels, that is with caa = 0 have number of heart attack case.\n\n  * People with thall = 2 have much higher number of heart attack case.\n"}}