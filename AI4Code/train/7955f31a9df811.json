{"cell_type":{"b361f166":"code","7382aadc":"code","d9c28feb":"code","191f31c5":"code","a69c5ce1":"code","1346b4d8":"code","556f894a":"code","d99d7025":"code","66f63dac":"code","cb8fabbd":"code","b11307ee":"code","25c1495f":"code","973fa0c6":"code","3215aa83":"code","e8f11b9a":"code","4f862ca3":"code","9e7dbf42":"code","effa3d39":"code","38c97c13":"code","b7f4ed1e":"code","297f5819":"code","27018d35":"code","8233a356":"code","6a25eb67":"code","ec4caf2f":"code","b4fb36af":"code","e1e93f1c":"code","0bec11c7":"code","33bdd58f":"code","533c7269":"code","2de0abf8":"code","4fbfa12d":"code","a2842f4b":"code","6512ee4a":"code","25483530":"code","d04fd768":"code","f16e4cdd":"code","54250304":"code","2579d430":"code","1fde6bc1":"code","1bdd53e3":"code","f9c52e1f":"code","6835e1a5":"code","a7ece99d":"code","117b9db3":"code","732e3b57":"code","d29353b9":"code","fbe1f34d":"code","ec6d9fa9":"code","fcdbc18c":"code","55817184":"code","3a58a20c":"code","65b6f3a0":"code","39e7de56":"code","7676c296":"code","fe215152":"code","b92640ea":"code","0da9ce3e":"code","e43b518f":"code","fe868936":"code","86d9ae9e":"code","d60b8ded":"code","57ee03a6":"code","03d1274a":"code","ff2e197c":"code","e3212eb9":"code","4787ae02":"code","bfeecb62":"code","b2f316d4":"code","fa30d55b":"code","51bfca47":"code","59d526f2":"code","bf88faa5":"code","f4a1f208":"code","93a1af7d":"code","f50a8e64":"code","60c8fe43":"code","4519d52a":"markdown","a4c4136e":"markdown","8712ad72":"markdown","5288f051":"markdown","9f2edc14":"markdown","92789c8b":"markdown","4fe47c03":"markdown","6b04d5dd":"markdown","c45ae32a":"markdown","946d36ae":"markdown","95432ec3":"markdown","2e48e2c4":"markdown","7ea2e144":"markdown","115e8103":"markdown","67a28708":"markdown","0dcff52a":"markdown","ca17b2fd":"markdown","b9104a5c":"markdown","8e90e965":"markdown","06d1901c":"markdown","88e175a6":"markdown","057862e1":"markdown","f5de1dbf":"markdown","434f7363":"markdown","3a94f7e2":"markdown","70834535":"markdown","79c1d96c":"markdown","efd45abb":"markdown","6c34ff06":"markdown","c4b17f60":"markdown","04744381":"markdown","5c7d7e23":"markdown","30afd8c4":"markdown","fe3810a3":"markdown","9aac6a1b":"markdown","40bb6ebc":"markdown","609590ef":"markdown","b6f85db0":"markdown","9259745e":"markdown","746da275":"markdown","6470df55":"markdown","bf1c59ed":"markdown","27dd2286":"markdown","3a01bd81":"markdown","fa2f6300":"markdown","9fb6f4e3":"markdown","cc6d5b06":"markdown","5691c0d7":"markdown","c3a15457":"markdown","d1921157":"markdown","79700421":"markdown","893c519c":"markdown"},"source":{"b361f166":"import pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport plotly.express as px\nimport plotly.graph_objs as go","7382aadc":"import altair as alt\nalt.data_transformers.disable_max_rows()","d9c28feb":"data_dictionary=pd.read_csv(\"..\/input\/loan-eligibility-dataset\/Data_Description.csv\")\nfig = go.Figure(data=[go.Table(columnwidth = [50,170,350],\n    header=dict(values=list(data_dictionary.columns),\n                fill_color='lightblue',\n                line_color='black',\n                align='center'),\n    cells=dict(values=[data_dictionary.S_No,\n                       data_dictionary['Attributes'],\n                       data_dictionary['Description']],\n                       fill_color='plum',\n                       line_color='black',\n                       align='left'))])\nfig.show()","191f31c5":"train=pd.read_csv(\"..\/input\/loan-eligibility-dataset\/LoansTraining.csv\")","a69c5ce1":"train.head()","1346b4d8":"sum_stat=train.describe()\nsum_stat.T.style.bar(subset=['mean'],color='#ff944d')\\\n.background_gradient(subset=['std'],cmap='RdPu')\\\n.background_gradient(subset=['50%'],cmap='YlOrBr')","556f894a":"total_missing=train.isnull().sum().sort_values(ascending=False)\npercent=(train.isnull().sum()\/train.isnull().count()).sort_values(ascending=False)\nmissing_data=pd.concat([total_missing,percent],axis=1,keys=['Missing_Total','Percent']).head(10)\nmissing_data.style.bar(subset=['Percent'],color='orange')\\\n.background_gradient(subset=['Missing_Total'],cmap='Reds')","d99d7025":"numeric_data = train.select_dtypes(include=[np.number])\ncategorical_data = train.select_dtypes(exclude=[np.number])\nprint(\"Numeric_Column_Count =\", numeric_data.shape)\nprint(\"Categorical_Column_Count =\", categorical_data.shape)","66f63dac":"skewness=numeric_data.skew().to_frame(name='Skewness_Value')\nkurtosis=numeric_data.kurt().to_frame(name='Kurtosis_Value')\nmeasures=skewness.merge(kurtosis,left_index=True,right_index=True)\nmeasures.style.background_gradient(subset=['Skewness_Value'],cmap='BuPu')\\\n                        .background_gradient(subset=['Kurtosis_Value'],cmap='cool')","cb8fabbd":"def correlation_heatmap(df):\n    _ , ax = plt.subplots(figsize =(14, 12))\n    colormap = sns.diverging_palette(220, 10, as_cmap = True)\n    \n    _ = sns.heatmap(\n        df.corr(), \n        cmap = colormap,\n        square=True, \n        cbar_kws={'shrink':.9 }, \n        ax=ax,\n        annot=True, \n        linewidths=0.1,vmax=1.0, linecolor='white',\n        annot_kws={'fontsize':12 }\n    )\n    \n    plt.title('Pearson Correlation of Features', y=1.05, size=15)\n\ncorrelation_heatmap(numeric_data)","b11307ee":"for k, v in numeric_data.items():\n    q1 = v.quantile(0.25)\n    q3 = v.quantile(0.75)\n    irq = q3 - q1\n    v_col = v[(v <= q1 - 1.5 * irq) | (v >= q3 + 1.5 * irq)]\n    perc = np.shape(v_col)[0] * 100.0 \/ np.shape(numeric_data)[0]\n    print(\"Column %s outliers = %.2f%%\" % (k, perc))","25c1495f":"Q1 = train.quantile(0.25)\nQ3 = train.quantile(0.75)\nIQR = Q3 - Q1\nIQR","973fa0c6":"train = train[~((train < (Q1 - 1.5 * IQR)) |(train > (Q3 + 1.5 * IQR))).any(axis=1)]\ntrain.shape","3215aa83":"IQR=IQR.to_frame(name='IQR_Value')\nIQR","e8f11b9a":"import scipy\nfrom scipy import stats\nnum_data = train.select_dtypes(include=[np.number])\nX=pd.DataFrame(num_data)\nY=scipy.stats.normaltest(X,nan_policy='omit')\nZ=pd.DataFrame(Y)\nZ= Z.rename(columns={0:'Current Loan Amount',1:'Credit Score',2:'Annual Income',3:'Years of Credit History',\n                     4:'Months since last delinquent',5:'Number of Open Accounts',6:'Number of Credit Problems',\n                     7:'Current Credit Balance',8:'Bankruptcies',9:'Tax Liens'},index={0:'Z-Statistics',1:'P-Value'},inplace=False)\n#Z=Z.drop([11],axis=1,inplace=False)\ndisplay(Z.T)","4f862ca3":"plt.figure(figsize=(7,5))\ntarget_count = train[\"Loan Status\"].value_counts()\nsns.set(style=\"darkgrid\")\nsns.barplot(target_count.index, target_count.values, alpha=1,edgecolor='k',palette='autumn')\nplt.title('Frequency Distribution showing if Loan Was Given or Not')\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('target', fontsize=10)\nplt.xticks((0,1),('Loan Given', 'Loan Refused'))\nplt.show()","9e7dbf42":"plt.figure(figsize=(8,6))\ntarget_count = train[\"Term\"].value_counts()\nsns.set(style=\"darkgrid\")\nsns.barplot(target_count.index, target_count.values, alpha=1,edgecolor='k',palette='winter')\nplt.title('Frequency Distribution showing if Loan given was Short Term or Long Term')\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('target', fontsize=12)\nplt.xticks((0,1),('Short Term', 'Long Term'))\nplt.show()","effa3d39":"colors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen']\nx=train['Years in current job'].value_counts()\nx=pd.DataFrame(x).reset_index()\nx=x.rename(columns={'index':'Years','Years in current job':'Count'})\nimport plotly.express as px\nfig = go.Figure(data=[go.Pie(labels=x['Years'],values=x['Count'],hole=0.5)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=15,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='<b>Data Distribution based on Years of Experience <b>',title_x=0.5)\nfig.show()","38c97c13":"def loan_bucket(x):\n    if 0 <= x <=23822.000000:\n        return 'Low Amount'\n    return 'High Amount'\ntrain['Loan_Segment'] = train['Current Loan Amount'].apply(loan_bucket)","b7f4ed1e":"colors = ['gold', 'mediumturquoise']\nx=train['Loan_Segment'].value_counts()\nx=pd.DataFrame(x).reset_index()\nx=x.rename(columns={'index':'Loan_Amt_Type','Loan_Segment':'Count'})\nimport plotly.express as px\nfig = go.Figure(data=[go.Pie(labels=x['Loan_Amt_Type'],values=x['Count'],hole=0.5)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=15,\n                 marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='<b>Data Distribution based on Current Loan Amount<b>',title_x=0.5)\nfig.show()","297f5819":"train['Monthly Debt']=train['Monthly Debt'].str.replace('$','').astype(float)","27018d35":"fig, ax = plt.subplots(figsize=(12, 5))\nsns.distplot(train['Monthly Debt'], hist=True, kde=False, bins=int(180\/5), color = 'orange',hist_kws={'edgecolor':'black'})\n# Add labels\nplt.title('Histogram of Monthly Debt')\nplt.xlabel('Monthly Debt')\nplt.ylabel('Count')","8233a356":"plt.figure(figsize=(16,6))\nplt.style.use('fivethirtyeight')\nplt.hist(train[\"Current Loan Amount\"], edgecolor = \"black\", color = 'crimson',bins=20, label='Annual Income')\nplt.xlabel (\"Current Loan Amount\")\nplt.ylabel (\"Count\")\nplt.title (\"Distribution of Current Loan Amount after dropping Outliers\")","6a25eb67":"plt.figure(figsize=(16,6))\nplt.style.use('fivethirtyeight')\nplt.hist(train[\"Annual Income\"], edgecolor = \"black\", color = 'pink',bins=20, label='Annual Income')\nplt.xlabel (\"Annual Income\")\nplt.ylabel (\"Count\")\nplt.title (\"Distribution of Annual Income after dropping Outliers\")","ec4caf2f":"plt.figure(figsize=(16,6))\nplt.style.use('fivethirtyeight')\nplt.hist(train[\"Current Credit Balance\"], edgecolor = \"black\", color = 'teal',bins=20, label='Annual Income')\nplt.xlabel (\"Current Credit Balance\")\nplt.ylabel (\"Count\")\nplt.title (\"Distribution of Current Credit Balance after dropping Outliers\")","b4fb36af":"train['Maximum Open Credit']=train['Maximum Open Credit'].str.replace('#VALUE!','0').astype(float)","e1e93f1c":"pd.crosstab(train['Loan Status'],train['Years in current job'],margins=True).style.background_gradient(cmap='viridis')","0bec11c7":"c = pd.crosstab(train['Loan Status'],train['Years in current job']).apply(lambda x: x\/x.sum(), axis=1)\nc=c.T\nc[\"Odds\"]=c[\"Loan Given\"]\/c[\"Loan Refused\"]\n#c[\"odds\"] = c.loc[:, 1] \/ c.loc[:, 0]\nc.style.background_gradient(subset=['Odds'],cmap='copper')","33bdd58f":"p = sns.pairplot(train, x_vars=['Current Loan Amount', 'Credit Score', 'Monthly Debt', 'Maximum Open Credit'], \n                 y_vars='Annual Income', size=5, aspect=0.5,kind='reg',plot_kws={'line_kws':{'color':'red'}})","533c7269":"g = sns.factorplot(y=\"Monthly Debt\",x=\"Years in current job\",data=train,kind=\"box\",aspect = 2)\ng.set_xticklabels(labels=['< 1 year', '10+ years', '9 years', '3 years', '2 years',\n       '7 years', '6 years', '1 year', '5 years', '4 years', '8 years'], rotation=30)","2de0abf8":"g = sns.factorplot(y=\"Annual Income\",x=\"Years in current job\",data=train,kind=\"box\",aspect = 2)\ng.set_xticklabels(labels=['< 1 year', '10+ years', '9 years', '3 years', '2 years',\n       '7 years', '6 years', '1 year', '5 years', '4 years', '8 years'], rotation=30)","4fbfa12d":"train.groupby(['Years in current job','Loan Status']).size().unstack().plot(figsize=(15,8),kind='bar',stacked=True,\n                                                                            color=['blue', 'cyan'],edgecolor='black', linestyle='--', linewidth=3,  alpha=0.7)\nplt.ylabel('Count')\nplt.show()","a2842f4b":"pip install missingpy","6512ee4a":"import sys\nimport sklearn.neighbors._base\nsys.modules['sklearn.neighbors.base'] = sklearn.neighbors._base","25483530":"from missingpy import MissForest","d04fd768":"X=train[[\"Current Loan Amount\",\"Annual Income\",\"Monthly Debt\",\"Maximum Open Credit\",\"Credit Score\",\n         \"Number of Open Accounts\"]]","f16e4cdd":"imputer = MissForest()\nX_imputed = imputer.fit_transform(X)","54250304":"rf_imputation=pd.DataFrame(X_imputed,columns=X.columns)","2579d430":"train=train.drop([\"Current Loan Amount\",\"Annual Income\",\"Monthly Debt\",\"Maximum Open Credit\",'Credit Score',\n         \"Number of Open Accounts\"],axis=1)","1fde6bc1":"train=train.reset_index()","1bdd53e3":" train_new=train.merge(rf_imputation,left_index=True, right_index=True)","f9c52e1f":"train_new.shape","6835e1a5":"train_new=train_new.reset_index()","a7ece99d":"train_new=train_new.drop(['index','level_0'],axis=1)\ntrain_new.head()","117b9db3":"train_new[\"Months since last delinquent\"]=train_new[\"Months since last delinquent\"].fillna(0)","732e3b57":"train_new[\"Bankruptcies\"]=train_new[\"Years in current job\"].fillna(train_new['Years in current job'].mode()[0])","d29353b9":"train_new[\"Tax Liens\"] = train_new['Tax Liens'].fillna(method='ffill', inplace=False)","fbe1f34d":"train_new=train_new.drop([\"Loan ID\",\"Customer ID\",\"Bankruptcies\"],axis=1) #Dropping Unwanted Columns","ec6d9fa9":"def credit_bucket(x):\n    if  x < 580:\n        return 'Poor'\n    elif 580 <= x < 669:\n        return 'Fair'\n    elif 669 <= x < 739:\n        return 'Good'\n    elif  739 <= x < 799:\n        return 'Very Good'\n    else:\n        return 'Exceptional'\ntrain_new['Cred_Segment'] = train_new['Credit Score'].apply(credit_bucket)","fcdbc18c":"colors = ['gold', 'mediumturquoise']\nx=train_new['Cred_Segment'].value_counts()\nx=pd.DataFrame(x).reset_index()\nx=x.rename(columns={'index':'Rating','Cred_Segment':'Count'})\nimport plotly.express as px\nfig = go.Figure(data=[go.Pie(labels=x['Rating'],values=x['Count'],hole=0.5)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=15,\n                 marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='<b>Data Distribution based on Rating<b>',title_x=0.5)\nfig.show()","55817184":"g = sns.kdeplot(train_new[\"Annual Income\"][(train_new[\"Cred_Segment\"] == \"Good\") & (train_new[\"Annual Income\"].notnull())], color=\"Red\", shade = True)\ng = sns.kdeplot(train_new[\"Annual Income\"][(train_new[\"Cred_Segment\"] == \"Exceptional\") & (train_new[\"Annual Income\"].notnull())], ax =g, color=\"Blue\", shade= True)\ng = sns.kdeplot(train_new[\"Annual Income\"][(train_new[\"Cred_Segment\"] == \"Very Good\") & (train_new[\"Annual Income\"].notnull())], ax =g, color=\"Orange\", shade= True)\ng = sns.kdeplot(train_new[\"Annual Income\"][(train_new[\"Cred_Segment\"] == \"Fair\") & (train_new[\"Annual Income\"].notnull())], ax =g, color=\"teal\", shade= True)\ng.set_xlabel(\"Annual Income\")\ng.set_ylabel(\"Frequency\")\ng = g.legend([\"Good\",\"Exceptional\",\"Very Good\",\"Fair\"])","3a58a20c":"# alt.Chart(train_new).mark_bar().encode(\n#     x='Cred_Segment',\n#     y='count(Annual Income)',\n#     color='Loan Status'\n# ).properties(\n#     width=500,\n#     height=200,title=\"Loan Status as Per FICO Segment\"\n# )","65b6f3a0":"train_new['DTI']=(train_new['Monthly Debt']\/(train_new['Annual Income']\/12))*100","39e7de56":"train_new['DTI'].isna().sum()","7676c296":"train_new['DTL']=(train_new['Current Credit Balance']\/(train_new['Maximum Open Credit']))*100","fe215152":"train_new['DTL'].isna().sum()","b92640ea":"train_new['DTL']=train_new['DTL'].fillna(0)","0da9ce3e":"columns=train_new[['Purpose','Loan_Segment','Cred_Segment','Term','Years in current job']]\ncategorical_data=pd.get_dummies(columns,drop_first=True).astype(int)","e43b518f":"train_new=train_new.drop(['Purpose','Loan_Segment','Cred_Segment','Term','Years in current job'],axis=1)","fe868936":"def func(x):\n    if  x == 'Rent' :\n        return 1\n    elif  x == 'Own Home':\n        return 2\n    return 0\ntrain_new['Home Ownership'] = train_new['Home Ownership'].apply(func)","86d9ae9e":"def func(x):\n    if  x == 'Loan Given' :\n        return 1\n    return 0\ntrain_new['Loan Status'] = train_new['Loan Status'].apply(func)","d60b8ded":"display(np.any(np.isnan(X)))\ndisplay(np.all(np.isfinite(X)))","57ee03a6":"train_new=train_new.replace([np.inf, -np.inf], 0, inplace=False)","03d1274a":"np.where(train_new.values >= np.finfo(np.float64).max)","ff2e197c":"X=train_new.drop(['Loan Status','Home Ownership'],axis=1)\nY=train_new['Loan Status']","e3212eb9":"from sklearn.preprocessing import MinMaxScaler\nscaled_features = MinMaxScaler().fit_transform(X.values)","4787ae02":"scaled_features_df = pd.DataFrame(scaled_features,index=X.index, columns=X.columns)","bfeecb62":"train_new=train_new.drop(['Years of Credit History', 'Months since last delinquent',\n       'Number of Credit Problems', 'Current Credit Balance', 'Tax Liens',\n       'Current Loan Amount', 'Annual Income', 'Monthly Debt',\n       'Maximum Open Credit', 'Credit Score', 'Number of Open Accounts', 'DTI',\n       'DTL'],axis=1)","b2f316d4":"train_new.shape","fa30d55b":"train_new=pd.concat([train_new,scaled_features_df], axis=1).reindex(train_new.index)","51bfca47":"train_new=pd.concat([train_new,categorical_data], axis=1).reindex(train_new.index)","59d526f2":"#train_new=train_new.drop(train_new.columns[[0]],axis = 1)","bf88faa5":"x=train_new.drop(['Loan Status'],axis=1)\ny=train_new['Loan Status']","f4a1f208":"from statsmodels.tools.tools import add_constant\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nX_vif = add_constant(x)\nvif = pd.Series([variance_inflation_factor(X_vif.values, i) \n               for i in range(X_vif.shape[1])], \n              index=X_vif.columns)","93a1af7d":"display(vif.sort_values(ascending = False).round(2).head(10).to_frame(name='VIF Score'))","f50a8e64":"train_new=train_new.drop(['Cred_Segment_Very Good','Monthly Debt','Purpose_Debt Consolidation'],axis=1)","60c8fe43":"train_new['Loan Status'].value_counts()","4519d52a":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='4'>4. Correlation<\/a><\/h1>","a4c4136e":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            This process of looping through missing data points repeats several times, each iteration improving on better and better data. It\u2019s like standing on a pile of rocks while continually adding more to raise yourself: the model uses its current position to elevate itself further.The model may decide in the following iterations to adjust predictions or to keep them the same.\n        <\/p>\n    <\/div>\n\n![1_6Q3r3_tSadmQ0_JuVpDBUQ.png](attachment:1_6Q3r3_tSadmQ0_JuVpDBUQ.png)","8712ad72":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">II. Loan Term<\/h1>","5288f051":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='6'>6. Normality Test<\/a><\/h1>\n\n <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            This function tests the null hypothesis that a sample comes from a normal distribution. It is based on D\u2019Agostino and Pearson\u2019s             test that combines skew and kurtosis to produce an omnibus test of normality.\n        <\/p>\n    <\/div>","9f2edc14":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">III. Years of Experience<\/h1>","92789c8b":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">V. Monthly Debt<\/h1>","4fe47c03":"<h1 style=\"font-family:cursive; font-size:18px;background-color: #70dbdb;color:black;text-align:center;padding: 8px\">Uni-Variate Analysis<\/h1>","6b04d5dd":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">VII. Annual Income<\/h1>","c45ae32a":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">VIII. Current Credit Balance<\/h1>","946d36ae":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">1. Credit Score<\/h1>","95432ec3":"![FICO-Scores-0474cc0ca87b4b58b9391f065f623c0f-2.jpg](attachment:FICO-Scores-0474cc0ca87b4b58b9391f065f623c0f-2.jpg)","2e48e2c4":"<h1 style=\"font-family:cursive; font-size:18px;background-color: #33cccc;color:black;text-align:center;padding: 8px\">Importing Libraries & Files<\/h1>","7ea2e144":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='7'>7. Exploratory Data Analysis<\/a><\/h1>","115e8103":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='12'>12. Variance Inflation Factor<\/a><\/h1>","67a28708":"### <a id='0'>Content<\/a>\n\n- <a href='#1'>1. Summary Statistics<\/a>  \n- <a href='#2'>2. Missing Value<\/a>  \n- <a href='#3'>3. Skewness & Kurtosis<\/a>   \n- <a href='#4'>4. Correlation<\/a>\n- <a href='#5'>5. Outliers Detection & Removal<\/a>\n- <a href='#6'>6. Normality Test<\/a>  \n- <a href='#7'>7. Exploratory Data Analysis<\/a>\n- <a href='#8'>8. Bi-Variate Exploratory Data Analysis<\/a>\n- <a href='#9'>9. Missing Value Treatment<\/a>\n- <a href='#10'>10. Feature Engineering<\/a>  \n- <a href='#11'>11. Feature Scaling<\/a>\n- <a href='#12'>12. Variance Inflation Factor<\/a>","0dcff52a":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            People with More number of Experience or people with experience with less than 3 years covers 55% of the data and these are the people who have applied for the loan.\n        <\/p>\n    <\/div>","ca17b2fd":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            Insights: <br>\n            1. Spread of Data for Current Loan Amount, Current Credit Balance, Credit Score, Annual Income is very large. Which says majority of Datapoint falls away from mean.\n        <\/p>\n    <\/div>","b9104a5c":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">IV. Checking Loan Amount <\/h1>","8e90e965":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            Z-statistic: s^2 + k^2, where s is the z-score returned by skewtest and k is the z-score returned by kurtosistest.<br>\n            pvalue: A 2-sided chi squared probability for the hypothesis test.\n        <\/p>\n    <\/div>","06d1901c":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            87.5% people who have applied for loan falls under low Amount Bucket & 12.5 % in High Bucket. i.e high Loan Amount.\n        <\/p>\n    <\/div>","88e175a6":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">I. Loan Status<\/h1>\n <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            Showing the Counts of Target Variable. Seems for the number People who have applied for loan the Load Accepted is 4 time more than The Loan Rejected.\n        <\/p>\n    <\/div>","057862e1":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='2'>2. Missing Value<\/a><\/h1>","f5de1dbf":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">3. Debt to Limit ratio<\/h1>","434f7363":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">4. Converting Categorical to Numeric Features<\/h1>","3a94f7e2":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">Annual Incme vs Year in Current Job<\/h1>","70834535":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='5'>5. Outliers Detection & Removal<\/a><\/h1>","79c1d96c":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='1'>1. Summary Statistics<\/a><\/h1>","efd45abb":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            More than 50% of people falls under Monthly Debt bucket of 0 to 2000. \n        <\/p>\n    <\/div>","6c34ff06":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            Using Inter Quartile Range method to detect and remove outliers.\n        <\/p>\n    <\/div>","c4b17f60":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='3'>3. Skewness & Kurtosis<\/a><\/h1>","04744381":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">Monthly Debt VS Years in Current Job<\/h1>","5c7d7e23":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">Loan Status\u200b vs Year in Current Job<\/h1>","30afd8c4":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='9'>9. Missing Value Treatment<\/a><\/h1>","fe3810a3":"<img src=\"https:\/\/cdn.dribbble.com\/users\/6238\/screenshots\/1646680\/money.gif\" class=\"center\"\/>","9aac6a1b":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">II. Treating Missing by replacing NaN with 0<\/h1>","40bb6ebc":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            Variance inflation factor (VIF) is a measure of the amount of multicollinearity in a set of multiple regression variables. Mathematically, the VIF for a regression model variable is equal to the ratio of the overall model variance to the variance of a model that includes only that single independent variable. This ratio is calculated for each independent variable. A high VIF indicates that the associated independent variable is highly collinear with the other variables in the model.<br>\n            1. Multicollinearity does not reduce the explanatory power of the model, it does reduce the statistical significance of the independent variables.<br>\n            2. A large variance inflation factor (VIF) on an independent variable indicates a highly collinear relationship to the other variables that should be considered or adjusted for in the structure of the model and selection of independent variables.\n        <\/p>\n    <\/div>","609590ef":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            To detrermine whether or not to grant the loan based on likelihood of the loan being repaid. Implement a model that predicts if a loan should be granted to an indivudial based on data provided.\n        <\/p>\n    <\/div>","b6f85db0":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">Loan Status vs Years in Current Job<\/h1>","9259745e":"<h1 style=\"font-family:cursive; font-size:18px;background-color: #70dbdb;color:black;text-align:center;padding: 8px\">Loan Eligibility Prediction<\/h1>","746da275":"To be Contd...","6470df55":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='10'>10. Feature Engineering<\/a><\/h1>","bf1c59ed":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">IV. Treating Missing by replacing NaN with Forward Fill<\/h1>","27dd2286":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            MissForest is  machine learning-based data imputation algorithm that operates on the Random Forest algorithm.First, the missing values are filled in using median\/mode imputation. Then, we mark the missing values as \u2018Predict\u2019 and the others as training rows, which are fed into a Random Forest model trained to predict\n        <\/p>\n    <\/div>\n    \n![1_m_z8E4HrFtCnHBoDANauTQ.png](attachment:1_m_z8E4HrFtCnHBoDANauTQ.png)","3a01bd81":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='11'>11. Feature Scaling<\/a><\/h1>","fa2f6300":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            Reason for accepting and approving loan could be the Duration\/ Period of loan. We can see that people with short term loan is more in numbers than with Long Term Loan. \n        <\/p>\n    <\/div>","9fb6f4e3":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">I. Random Forest Imputation using Missingpy Library<\/h1>","cc6d5b06":" <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:80%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n        <p style=\"padding: 10px;\n              color:white;\">\n            1. Log odd for the loan being accepted for the people above 10 y of exp. in current company and people with experience of 1-2 years is high.<br>\n            2. Wheras people with Experience between 3 to 10 years ion current company have least chance of loan getting accepted.\n        <\/p>\n    <\/div>","5691c0d7":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">2. Debt to Income Ratio<\/h1>","c3a15457":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">III. Treating Missing by replacing NaN with Mode<\/h1>","d1921157":"<h1 style=\"font-family:cursive; font-size:14px;color:#008080;text-align:left;padding: 4px\"><a id='8'>8. Bi-Variate Exploratory Data Analysis<\/a><\/h1>","79700421":"<h1 style=\"font-family:cursive; font-size:10px;color:#008080;text-align:left;padding: 4px\">VI. Loan Amount<\/h1>","893c519c":"##### Checking For Categorical & Numeric Columns"}}