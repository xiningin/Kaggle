{"cell_type":{"cdbea5a6":"code","24453e18":"code","c516b09a":"code","dbb4f45e":"code","d82d7106":"code","ea1d17c6":"code","4c95a2fc":"code","72b9893d":"code","84a59d4f":"code","a7b9f9d3":"code","8471c85c":"code","f967a886":"markdown","3889f4e2":"markdown","1ff06a8f":"markdown","133c9ed1":"markdown","0481134f":"markdown","396ff93a":"markdown","16bdb047":"markdown","824ca23f":"markdown"},"source":{"cdbea5a6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\nimport pydicom as dcm\nfrom pydicom.pixel_data_handlers.util import apply_modality_lut","24453e18":"import matplotlib.pyplot as plt\nfrom skimage.segmentation import clear_border\nfrom skimage.measure import label, regionprops\nfrom skimage.morphology import disk, dilation, binary_erosion, binary_closing\nfrom skimage.filters import roberts, sobel\nimport cv2\nfrom scipy import ndimage as ndi\n\ndef get_segmented_lungs(im2, plot=False):\n    im = im2.copy()\n    # Step 1: Convert into a binary image.\n    binary = im < -400\n    \n    if plot:\n        plt.imshow(binary)\n        plt.show()\n        \n    # Step 2: Remove the blobs connected to the border of the image.\n    cleared = clear_border(binary)\n    \n    if plot:\n        plt.imshow(cleared)\n        plt.show()    \n        \n    # Step 3: Label the image.\n    label_image = label(cleared)\n    \n    if plot:\n        plt.imshow(label_image)\n        plt.show()    \n        \n    # Step 4: Keep the labels with 2 largest areas.\n    areas = [r.area for r in regionprops(label_image)]\n    areas.sort()\n    if len(areas) > 0:\n        for region in regionprops(label_image):\n            if region.area < areas[0]:\n                for coordinates in region.coords:\n                       label_image[coordinates[0], coordinates[1]] = 0\n    binary = label_image > 0\n    \n    if plot:\n        plt.imshow(binary)\n        plt.show()  \n        \n    # Step 5: Erosion operation with a disk of radius 2. This operation is seperate the lung nodules attached to the blood vessels.\n    selem = disk(2)\n    binary = binary_erosion(binary, selem)\n    \n    if plot:\n        plt.imshow(binary)\n        plt.show()  \n        \n    # Step 6: Closure operation with a disk of radius 10. This operation is to keep nodules attached to the lung wall.\n    selem = disk(10) # CHANGE BACK TO 10\n    binary = binary_closing(binary, selem)\n    \n    if plot:\n        plt.imshow(binary)\n        plt.show() \n        \n    # Step 7: Fill in the small holes inside the binary mask of lungs.\n    edges = roberts(binary)\n    \n    if plot:\n        plt.imshow(edges)\n        plt.show() \n        \n    binary = ndi.binary_fill_holes(edges)\n    \n    if plot:\n        plt.imshow(binary)\n        plt.show() \n        \n    # Step 8: Superimpose the binary mask on the input image.\n    selem = disk(4)\n    binary = dilation(binary, selem)\n    get_high_vals = binary == 0\n    im[get_high_vals] = -2000\n    \n    if plot:\n        plt.imshow(im)\n        plt.show()\n        \n    return im, binary","c516b09a":"train = pd.read_csv(\"..\/input\/rsna-str-pulmonary-embolism-detection\/train.csv\")","dbb4f45e":"train.head()","d82d7106":"data_path = \"..\/input\/rsna-str-pulmonary-embolism-detection\/train\/\"\n\nstudyID, SeriesID, SOPID = train.loc[50,['StudyInstanceUID','SeriesInstanceUID','SOPInstanceUID']].values","ea1d17c6":"dicom = data_path+studyID+\"\/\"+SeriesID+\"\/\"+SOPID+\".dcm\"\nimg = dcm.dcmread(dicom)\nimg_data = img.pixel_array # Read the pixel value\nhu = apply_modality_lut(img_data, img) # Transform to HU value\nlung_seg, _ = get_segmented_lungs(hu)","4c95a2fc":"plt.figure(figsize = (10,10))\nplt.subplot(121)\nplt.imshow(hu)\nplt.subplot(122)\nplt.imshow(lung_seg)\nplt.show()","72b9893d":"one_series_path = data_path+studyID+\"\/\"+SeriesID+\"\/\"\none_series = []\none_series_seg = []\n\nfor i in os.listdir(one_series_path):\n    dicom_path = one_series_path+\"\/\"+i\n    img = dcm.dcmread(dicom_path)\n    img_data = img.pixel_array\n    hu = apply_modality_lut(img_data, img)\n    img_seg, _ = get_segmented_lungs(hu)\n    length = int(img.InstanceNumber)\n    one_series.append((length, img_data))\n    one_series_seg.append((length, img_seg))\n\none_series.sort()\none_series_seg.sort()\none_series_seg = [s[1] for s in one_series_seg]\none_series = [s[1] for s in one_series]","84a59d4f":"from matplotlib import animation, rc\nrc('animation', html='jshtml')\n\ndef animate(ims,ims_seg):\n    fig , (ax1, ax2) = plt.subplots(1,2,figsize=(15,8))\n    ax1.axis('off')\n    ax2.axis('off')\n    im = ax1.imshow(ims[0])\n    im2 = ax2.imshow(ims_seg[0])\n\n    def animate_func(i):\n        im.set_data(ims[i])\n        im2.set_data(ims_seg[i])\n        return [im,im2]\n\n    anim = animation.FuncAnimation(fig, animate_func, frames = len(ims), interval = 1000\/\/24)\n    \n    return anim\n","a7b9f9d3":"movie = animate(one_series,one_series_seg)","8471c85c":"movie","f967a886":"### Choose one CT image to check the segment result","3889f4e2":"### Load Module","1ff06a8f":"### Get Segmented Lungs\n#### Step:\n* Covert into binary image (theshold set HU -400), [HU threshold information](https:\/\/en.wikipedia.org\/wiki\/Hounsfield_scale)\n* Remove the blobs connect to the border of the image\n* label the image\n* Keep the all labels.\n* Erosion operation with a disk of radius 2. This operation is seperate the lung nodules attached to the blood vessels.\n* Closure operation with a disk of radius 10. This operation is to keep nodules attached to the lung wall.\n* Fill in the small holes inside the binary mask of lungs.\n* Superimpose the binary mask on the input image.","133c9ed1":"### Load one series and segment lung ","0481134f":"## Animation\n* reference by @isaienkov greate [notebooks](https:\/\/www.kaggle.com\/isaienkov\/pulmonary-embolism-detection-eda\/comments)","396ff93a":"### Read the train file","16bdb047":"* Not sure lung segmentation is useful in this competition or not, just sharing how I processing lung CT in my work\n\n### Thanks for watch !!","824ca23f":"## This notebooks shows how to use Skimage method to segment Lung part only\n* Fast way to segment lung part only in CT by using Skimage"}}