{"cell_type":{"69dc45f7":"code","ace1f20a":"code","757a305d":"code","3c9e63ca":"code","0faff6ad":"code","6c53361d":"code","8b3f04bd":"code","16e4867e":"code","0f47ab2e":"code","6f1f1868":"code","afb2607c":"code","35c80a51":"code","4f90732b":"code","1f34bc35":"code","c7686920":"code","941d2c36":"code","e92d7301":"code","92117ddc":"code","070c1baf":"code","af0525de":"code","60d48a2a":"markdown","9ee49002":"markdown","6efa6d73":"markdown"},"source":{"69dc45f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ace1f20a":"data=pd.read_csv('\/kaggle\/input\/indian-startup-funding\/startup_funding.csv')","757a305d":"import numpy as np \n\n# for dataframe operations\nimport pandas as pd \n\n# for data visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# lets select  a background style\nplt.style.use('fivethirtyeight')\nplt.rcParams['figure.figsize'] = (16, 7)\n\n# for interactivity\nimport ipywidgets as widgets\nfrom ipywidgets import interact\nfrom ipywidgets import interact_manual","3c9e63ca":"# lets import the data\n\n# changing the names of the columns inside the data\ndata.columns = [\"SNo\", \"Date\", \"StartupName\", \"IndustryVertical\", \"SubVertical\",\n                        \"City\", \"InvestorsName\", \"InvestmentType\", \"AmountInUSD\", \"Remarks\"]\n\n# lets clean the strings\ndef clean_string(x):\n    return str(x).replace(\"\\\\xc2\\\\xa0\",\"\").replace(\"\\\\\\\\xc2\\\\\\\\xa0\", \"\")\n\n# lets apply the function to clean the data\nfor col in [\"StartupName\", \"IndustryVertical\", \"SubVertical\", \"City\", \n            \"InvestorsName\", \"InvestmentType\", \"AmountInUSD\", \"Remarks\"]:\n    data[col] = data[col].apply(lambda x: clean_string(x))\n    \n# lets check the head of the data\ndata.head()","0faff6ad":"data[data['StartupName']=='LimeRoad.com']","6c53361d":"# missing data \n\n# lets import warnings module\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# lets calculate the total missing values in the data\ntotal = data.isnull().sum().sort_values(ascending = False)\n\n# lets calculate the percentage of missing values in the data\npercent = ((data.isnull().sum()\/data.isnull().count())*100).sort_values(ascending = False)\n\n# lets store the above two values in a dataset called missing data\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent %'])\n\n# lets check the head of the data\nmissing_data","8b3f04bd":"data['Remarks'].value_counts()","16e4867e":"# lets remove Remarks column, as it contains a lot of nans, and high cardinal column\n\ndata = data.drop(['Remarks'], axis = 1)\n\n# lets check the column names after removing the Remarks Column, as it having \ndata.columns","0f47ab2e":"# lets convert the amount column into numerical, so that we can analyze the values inside it\n\n# function to clean the AmounInUsd Column\ndef clean_amount(x):\n    x = ''.join([c for c in str(x) if c in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']])\n    x = str(x).replace(\",\",\"\").replace(\"+\",\"\")\n    x = str(x).lower().replace(\"undisclosed\",\"\")\n    x = str(x).lower().replace(\"n\/a\",\"\")\n    if x == '':\n        x = '-999'\n    return x\n\n# lets apply the function on the column\ndata[\"AmountInUSD\"] = data[\"AmountInUSD\"].apply(lambda x: float(clean_amount(x)))\n\n# lets check the head of the column after cleaning it\nplt.rcParams['figure.figsize'] = (15, 3)\ndata['AmountInUSD'].plot(kind = 'line', color = 'black')\nplt.title('Distribution of Amount', fontsize = 15)\nplt.show()","6f1f1868":"## Cleaning the dates\n\ndata['Date'][data['Date']=='12\/05.2015'] = '12\/05\/2015'\ndata['Date'][data['Date']=='13\/04.2015'] = '13\/04\/2015'\ndata['Date'][data['Date']=='15\/01.2015'] = '15\/01\/2015'\ndata['Date'][data['Date']=='22\/01\/\/2015'] = '22\/01\/2015'\ndata['Date'][data['Date']=='05\/072018'] = '05\/07\/2018'\ndata['Date'][data['Date']=='01\/07\/015'] = '01\/07\/2015'\ndata['Date'][data['Date']=='\\\\\\\\xc2\\\\\\\\xa010\/7\/2015'] = '10\/07\/2015'","afb2607c":"# some of the date formats are written wrongly so we have to clean them thoroughly so that we can analyze these values\n\n# converting them into a Datetime object\ndata[\"yearmonth\"] = (pd.to_datetime(data['Date'],\n         format='%d\/%m\/%Y').dt.year*100)+(pd.to_datetime(data['Date'],format='%d\/%m\/%Y').dt.month)\n\n\ntemp = data['yearmonth'].value_counts().sort_values(ascending = False).head(10)\nprint(\"Number of funding per month in decreasing order(Top 10)\\n\",temp)\nyear_month = data['yearmonth'].value_counts()\n\n# lets plot the data\nplt.rcParams['figure.figsize'] = (15, 7)\nsns.barplot(year_month.index, year_month.values, palette = 'copper')\nplt.xticks(rotation = 90)\nplt.xlabel('Year-Month of transaction', fontsize=12)\nplt.ylabel('Number of fundings made', fontsize=12)\nplt.title(\"Year-Month Distribution\", fontsize=16)\nplt.show()","35c80a51":"# lets check the Maximum funding of a startup\nprint(\"Maximum funding to a Startups is : \", data[\"AmountInUSD\"].dropna().sort_values().max())","4f90732b":"# lets check the startups with more than 50crore+ funding\n\n@interact\ndef check(column = 'AmountInUSD', x = 500000000): # 50 crore funding of startups\n    return data[data[column] > x].sort_values(by = 'AmountInUSD', ascending = False)","1f34bc35":"data[data['AmountInUSD'] == -999.0].shape","c7686920":"# Average Funding\nprint(\"On Average indian startups got funding of : \", data[\"AmountInUSD\"].dropna().sort_values().mean())","941d2c36":"# lets check the no. of funding each startsup got\n\nprint(\"Total startups funded : \", len(data[\"StartupName\"].unique()))\nprint(data[\"StartupName\"].value_counts().head(10))\nstartupname = data['StartupName'].value_counts().head(20)\n\n# lets plot the data\nplt.rcParams['figure.figsize'] = (12, 15)\nsns.barplot(y = startupname.index, x = startupname.values, alpha=0.9, palette = 'Dark2')\nplt.xticks(rotation='vertical')\nplt.xlabel('Startup Name', fontsize=12)\nplt.ylabel('Number of fundings made', fontsize=12)\nplt.title(\"Number of fundings Startups Have\", fontsize=16)\nplt.show()","e92d7301":"# lets analyze the Industry of the Startups\n\n# data cleaning\ndata['IndustryVertical'] = data['IndustryVertical'].replace('nan', 'Consumer Technology')\n\nindustry = data['IndustryVertical'].value_counts().head(10)\nprint(industry)\n\n# lets plot the data\nplt.rcParams['figure.figsize'] = (15, 5)\nsns.barplot(industry.index, industry.values, palette = 'autumn')\nplt.xticks(rotation='vertical')\nplt.xlabel('Industry vertical of startups', fontsize=12)\nplt.ylabel('Number of fundings made', fontsize=12)\nplt.title(\"Industry vertical of startups with number of funding\", fontsize=16)\nplt.show()","92117ddc":"from wordcloud import WordCloud\n\nnames = data[\"InvestorsName\"][~pd.isnull(data[\"InvestorsName\"])]\nwordcloud = WordCloud(max_font_size=50, width=600, height=300, background_color = 'cyan').generate(' '.join(names))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud)\nplt.title(\"Wordcloud for Investor Names\", fontsize=35)\nplt.axis(\"off\")\nplt.show()","070c1baf":"# analyzing the effect of Cities on a Startup\n\n# lets clean the data for better analysis\ndata['City'] = data['City'].replace(('Bengaluru', 'nan'),('Bangalore', 'Bangalore'))\n\ncity = data['City'].value_counts().head(10)\nprint(city)\n\n# lets plot the data\nsns.barplot(city.index, city.values, palette = 'Wistia')\nplt.xticks(rotation='vertical')\nplt.xlabel('city location of startups', fontsize=12)\nplt.ylabel('Number of fundings made', fontsize=12)\nplt.title(\"city location of startups with number of funding\", fontsize=16)\nplt.show()","af0525de":"# lets analyze the investors on startups\n\n# lets clean the dataset\ndata['InvestorsName'][data['InvestorsName'] == 'Undisclosed investors'] = 'Undisclosed Investors'\ndata['InvestorsName'][data['InvestorsName'] == 'undisclosed Investors'] = 'Undisclosed Investors'\ndata['InvestorsName'][data['InvestorsName'] == 'undisclosed investors'] = 'Undisclosed Investors'\ndata['InvestorsName'][data['InvestorsName'] == 'Undisclosed investor'] = 'Undisclosed Investors'\ndata['InvestorsName'][data['InvestorsName'] == 'Undisclosed Investor'] = 'Undisclosed Investors'\ndata['InvestorsName'][data['InvestorsName'] == 'Undisclosed'] = 'Undisclosed Investors'\ndata['InvestorsName'][data['InvestorsName'] == 'nan'] = 'Undisclosed Investors'\n\n# lets check the value counts\ninvestors = data['InvestorsName'].value_counts().head(10)\nprint(investors)\n\n# lets plot the data\nsns.barplot(investors.index, investors.values, palette = 'cool')\nplt.xticks(rotation='vertical')\nplt.xlabel('Investors Names', fontsize=12)\nplt.ylabel('Number of fundings made', fontsize=12)\nplt.title(\"Investors Names with number of funding\", fontsize=16)\nplt.show()","60d48a2a":"### Data Cleaning","9ee49002":"## Searching my own","6efa6d73":"## Lets Understand some of the most Interesting Patterns of Funding and Startups.\n\n* **How Does the Funding Ecosystem changes with respect to Time?**\n* **What is the General Amount that Startups get in India?**\n* **Which Kind of Industries are more preferred for Startups?**\n* **Does Location also play a role, In determining the Growth of a Startup?**\n* **Who plays the main role in Indian Startups Ecosystem?**\n* **What are the different Types of Funding for Startups?**"}}