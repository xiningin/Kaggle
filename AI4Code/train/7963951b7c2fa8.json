{"cell_type":{"cf12875b":"code","576fc58b":"code","c104e7ce":"code","a52f8df1":"code","774da0de":"code","5cc71fc8":"code","5f165287":"code","d9770b0e":"markdown"},"source":{"cf12875b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px #plotly graph\nimport plotly.io as pio #plotly graph\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","576fc58b":"#Reading data from dataset\ncovid_data = pd.read_csv('\/kaggle\/input\/covid19-bangladesh-dataset\/COVID-19-Bangladesh.csv', parse_dates=['Date'])\n#Print raw dataset\ncovid_data.head()","c104e7ce":"# Active Case = confirmed - deaths - recovered\ncovid_data['active'] = covid_data['Confirmed'].cumsum() - covid_data['Deaths'].cumsum() - covid_data['Recovered'].cumsum()\n\n# Quarantine cases \nq_cases = ['Quarantine', 'Released From Quarantine']\ncovid_data[q_cases] = covid_data[q_cases].fillna(0).astype(int)\n\n#print dataset with active cases\ncovid_data.tail()","a52f8df1":"#theme customization\npio.templates.default = \"plotly_dark\"\n\n#Groping of Confirmed, Recovered, Deaths and active cases by Date\ngroup = covid_data.groupby('Date')['Date', 'Confirmed', 'Recovered', 'Deaths', 'active'].sum().reset_index()\n\n#Plotting Confirmed cases\nfig = px.line(group, x=\"Date\", y=\"Confirmed\", \n              title=\"National Confirmed Cases Over Time\")\n\nfig.show()\n\n#Plotting Recovered cases\nfig = px.line(group, x=\"Date\", y=\"Recovered\", \n              title=\"National Recovered Cases Over Time\")\n\nfig.show()\n\n#Plotting Death cases\nfig = px.line(group, x=\"Date\", y=\"Deaths\", \n              title=\"National Deaths Over Time\")\n\nfig.show()\n\n#Plotting Active cases\nfig = px.line(group, x=\"Date\", y=\"active\", \n              title=\"National Active Cases Over Time\")\n\nfig.show()","774da0de":"#Bangladesh Population Number(Source: Worldometer)\nbd_population = 164286984\n\n#Calculating infectionRate, mortalityRate and recoveryRate accross Population\ncovid_data['infectionRate'] = round((covid_data['Confirmed'].cumsum()\/bd_population)*100, 5)\ncovid_data['mortalityRate'] = round((covid_data['Deaths'].cumsum()\/covid_data['Confirmed'].cumsum())*100, 2)\ncovid_data['recoveryRate'] = round((covid_data['Recovered'].cumsum()\/covid_data['Confirmed'].cumsum())*100, 2)\n\n#Printing formatted dataset\ncovid_data.tail()","5cc71fc8":"#Groping of infectionRate, mortalityRate, recoveryRate by Date\ngroup = covid_data.groupby('Date')['infectionRate', 'mortalityRate', 'recoveryRate'].sum().reset_index()\n\n#Plotting infectionRate cases\nfig = px.line(group, x=\"Date\", y=\"infectionRate\", \n              title=\"National Infection Rate Over Time\")\n\nfig.show()\n\n#Plotting mortalityRate cases\nfig = px.line(group, x=\"Date\", y=\"mortalityRate\", \n              title=\"National Mortality Rate Over Time\")\n\nfig.show()\n\n#Plotting recoveryRate cases\nfig = px.line(group, x=\"Date\", y=\"recoveryRate\", \n              title=\"National Recovery Rate Over Time\")\n\nfig.show()","5f165287":"#formatted dataset details\ncovid_data.info()","d9770b0e":"# **Import Required Packages**"}}