{"cell_type":{"e7b4d35b":"code","98ab8fa8":"code","cea9d103":"code","94480d66":"code","46eb7ffc":"code","e230e3a1":"code","8c9b333f":"markdown","0f99c71a":"markdown"},"source":{"e7b4d35b":"import numpy as np\nimport pandas as pd\n\nfrom pandas import Series, DataFrame","98ab8fa8":"DF_obj = DataFrame({'column 1': [1, 1, 2, 2, 3, 3, 3],\n                  'column 2': ['a', 'a', 'b', 'b', 'c', 'c', 'c'],\n                  'column 3': ['A', 'A', 'B', 'B', 'C', 'C', 'C']})\nDF_obj","cea9d103":"# object_name.duplicated()\n# The .duplicated() method searches each row in the DataFrame, and returns a True or False value to \n#indicate whether it is a duplicate of another row found earlier in the DataFrame.\nDF_obj.duplicated()","94480d66":"# object_name.drop_duplicates()\n# To drop all duplicate rows, just call the drop_duplicates() method off of the DataFrame.\nDF_obj.drop_duplicates()","46eb7ffc":"DF_obj = DataFrame({'column 1': [1, 1, 2, 2, 3, 3, 3],\n                  'column 2': ['a', 'a', 'b', 'b', 'c', 'c', 'c'],\n                  'column 3': ['A', 'A', 'B', 'B', 'C', 'D', 'C']})\nDF_obj","e230e3a1":"# object_name.drop_duplicates(['column_name'])\n# To drop the rows that have duplicates in only one column Series, just call the drop_duplicates() \n# method off of the DataFrame, and pass in the label-index of the column you want the de-duplication \n# to be based on. This method will drops all rows that have duplicates in the column you specify.\nDF_obj.drop_duplicates(['column 3'])","8c9b333f":"# Chapter 1 - Data Munging Basics\n## Segment 3 - Removing duplicates","0f99c71a":"### Removing duplicates"}}