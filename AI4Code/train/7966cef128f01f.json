{"cell_type":{"14989d59":"code","86dcaf1e":"code","61bf07d6":"code","c707e958":"code","2fa74b56":"code","b80fcacc":"code","43ab9d5d":"code","8d382dfe":"code","b59b8e55":"code","01fc439e":"code","418ccc01":"code","0b44463b":"code","986d7b87":"code","2a002d6c":"code","514a9304":"code","43a4c0ca":"code","0b2f43d7":"code","76912e26":"code","bc436b9c":"code","d749a019":"code","b502a676":"code","07cfaef9":"code","de0a6543":"code","9181434d":"code","97e1c717":"code","0b5431ac":"code","98bbc029":"code","2a380b31":"code","67d2788e":"code","9956c73a":"code","3564cc40":"markdown","b94449f7":"markdown","cb28a012":"markdown","f0317f26":"markdown","d131179a":"markdown","773b6dcc":"markdown","59f6904b":"markdown","6e95b533":"markdown","ef75b345":"markdown","c09e12f6":"markdown","809a2197":"markdown","2bde8533":"markdown","4c746341":"markdown","9d7c0fd3":"markdown","4cdacb13":"markdown","4b406827":"markdown","26087f54":"markdown","da17f652":"markdown","510dccd9":"markdown","f1822e1f":"markdown","d00317d7":"markdown","2fb25b3c":"markdown"},"source":{"14989d59":"import numpy as np # matris i\u015flemleri\nimport pandas as pd # veri man\u00fcpilasyonlar\u0131\nimport seaborn as sns # g\u00f6rselle\u015ftirme i\u015flemleri\nimport matplotlib.pyplot as plt # g\u00f6rselle\u015ftirme i\u015flemleri\nimport missingno as msno # eksik de\u011ferlerin g\u00f6rselle\u015ftirilmesi\nfrom sklearn import preprocessing # de\u011fi\u015fken i\u015flemleri\nfrom sklearn.neighbors import LocalOutlierFactor # \u00e7ok de\u011fi\u015fkenli ayk\u0131r\u0131 g\u00f6zlem incelemesi\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict # do\u011frulama i\u015flemi\nfrom scipy.stats import shapiro # hipotez testleri\nfrom scipy.stats import stats # istatistiksel analizler\nimport statsmodels.api as sm # model do\u011frusall\u0131\u011f\u0131n\u0131n incelenmesi\nfrom sklearn.linear_model import LinearRegression # Do\u011frusal Regresyon\nfrom sklearn.linear_model import Ridge, RidgeCV # Ridge Regresyon\nfrom sklearn.linear_model import Lasso, LassoCV # Lasso Regresyon\nfrom sklearn.linear_model import ElasticNet, ElasticNetCV # ElasticNet Regresyon \nfrom sklearn.metrics import mean_squared_error, r2_score # rmse ve r2 de\u011ferini kullanarak de\u011ferlendirme\nfrom sklearn.model_selection import GridSearchCV # ElasticNet Tuning","86dcaf1e":"# hata g\u00f6stergelerinin gizlenmesi\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","61bf07d6":"# veri setinin elde edilmesi\nadv = pd.read_csv(\"..\/input\/advertisingcsv\/Advertising.csv\", usecols=[1,2,3,4])\ndf = adv.copy()\ndf.head()","c707e958":"# de\u011fi\u015fkenlere genel bak\u0131\u015f\ndf.info()","2fa74b56":"# tan\u0131mlay\u0131c\u0131 istatistiklerin incelenmesi\ndf.describe().T","b80fcacc":"# TV de\u011fi\u015fkeninin yo\u011funluk grafi\u011fi\nsns.kdeplot(df.TV, shade=True);","43ab9d5d":"# Radio de\u011fi\u015fkeninin yo\u011funluk grafi\u011fi\nsns.kdeplot(df.Radio, shade=True);","8d382dfe":"# Newspaper de\u011fi\u015fkeninin yo\u011funluk grafi\u011fi\nsns.kdeplot(df.Newspaper, shade=True);","b59b8e55":"# Sales de\u011fi\u015fkeninin yo\u011funluk grafi\u011fi\nsns.kdeplot(df.Sales, shade=True);","01fc439e":"# normallik kontrol\u00fc\n\npvalue_TV = shapiro(df[\"TV\"])[1]\nprint(\"p-value: %.4f\" % pvalue_TV)\n\npvalue_Sales = shapiro(df[\"Sales\"])[1]\nprint(\"p-value: %.4f\" % pvalue_Sales)\n\npvalue_Sales = shapiro(df[\"Newspaper\"])[1]\nprint(\"p-value: %.4f\" % pvalue_Sales)\n\npvalue_Sales = shapiro(df[\"Radio\"])[1]\nprint(\"p-value: %.4f\" % pvalue_Sales)","418ccc01":"cor = df.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.Reds)\nplt.show();","0b44463b":"# korelasyon anlaml\u0131l\u0131\u011f\u0131\n\npvalue_corr = stats.spearmanr(df[\"TV\"], df[\"Sales\"])[1]\nprint(\"p-value: %.4f\" % pvalue_corr)","986d7b87":"# Boxplot kullan\u0131larak TV de\u011fi\u015fkeninin ayk\u0131r\u0131 de\u011ferlerinin incelenmesi\nsns.boxplot(x=df[\"TV\"], orient=\"v\");","2a002d6c":"# Boxplot kullan\u0131larak Radio de\u011fi\u015fkeninin ayk\u0131r\u0131 de\u011ferlerinin incelenmesi\nsns.boxplot(x=df[\"Radio\"], orient=\"v\");","514a9304":"# Boxplot kullan\u0131larak Newspaper de\u011fi\u015fkeninin ayk\u0131r\u0131 de\u011ferlerinin incelenmesi\nsns.boxplot(x=df[\"Newspaper\"], orient=\"v\");","43a4c0ca":"# Boxplot kullan\u0131larak Sales de\u011fi\u015fkeninin ayk\u0131r\u0131 de\u011ferlerinin incelenmesi\nsns.boxplot(x=df[\"Sales\"], orient=\"v\");","0b2f43d7":"# \u00fcst s\u0131n\u0131r de\u011ferinin bulunmas\u0131 ve df i\u00e7erisinde g\u00f6sterilmesi\nQ1 = df.Newspaper.quantile(0.25)\nQ3 = df.Newspaper.quantile(0.75)\nIQR = Q3 - Q1\nust_sinir = Q3 + 1.5 * IQR\ndf[df[\"Newspaper\"] > ust_sinir]","76912e26":"news_aykiri = df[\"Newspaper\"] > ust_sinir\ndf.loc[news_aykiri, \"Newspaper\"] = ust_sinir\ndf[news_aykiri]","bc436b9c":"# Newspaper de\u011fi\u015fkeninin ayk\u0131r\u0131 de\u011fer do\u011frulu\u011fu\nsns.boxplot(x=df[\"Newspaper\"], orient=\"v\");","d749a019":"y = df[\"Sales\"]\nX = df.drop(\"Sales\", axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\nX_train_cons = sm.add_constant(X_train)\nlm = sm.OLS(y_train, X_train_cons)\nmodel = lm.fit()\nprint(\"p-value %.4f\" % model.f_pvalue)","b502a676":"y = df[\"Sales\"]\nX = df.drop(\"Sales\", axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\nreg_model = LinearRegression()\nreg_model.fit(X_train, y_train)\ny_pred = reg_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","07cfaef9":"cd_reg_rmse = np.sqrt(-cross_val_score(reg_model, \n                         X_test, \n                         y_test, \n                         cv=10, \n                         scoring=\"neg_mean_squared_error\").mean())\n\ncd_reg_rmse","de0a6543":"y = df[\"Sales\"]\nX = df.drop(\"Sales\", axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\nridge_model = Ridge().fit(X_train,y_train)\ny_pred = ridge_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","9181434d":"np.random.seed(46)\nalpha_ = 10 ** np.linspace(10, -2, 100) * 0.5\n\nridge_cv = RidgeCV(alphas = alpha_, scoring = \"neg_mean_squared_error\", cv = 10, normalize = True)\nridge_cv.fit(X_train,y_train)\nridge_tuned=Ridge(alpha=ridge_cv.alpha_).fit(X_train,y_train)\ny_pred=ridge_tuned.predict(X_test)\nridge_reg_rmse = np.sqrt(mean_squared_error(y_test, y_pred))\nridge_reg_rmse","97e1c717":"y = df[\"Sales\"]\nX = df.drop(\"Sales\", axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\nlasso_model = Lasso().fit(X_train, y_train)\ny_pred = lasso_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","0b5431ac":"np.random.seed(46)\nalphas_ = 10 ** np.linspace(10, -2, 100) * 0.5\n\nlasso_cv_model = LassoCV(alphas = alphas_, cv = 10).fit(X_train, y_train)\nlasso_tuned = Lasso(alpha = lasso_cv_model.alpha_).fit(X_train, y_train)\ny_pred = lasso_tuned.predict(X_test)\nlasso_reg_rmse = np.sqrt(mean_squared_error(y_pred,y_test))\nlasso_reg_rmse","98bbc029":"y = df[\"Sales\"]\nX = df.drop(\"Sales\", axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\nenet_model = ElasticNet().fit(X_train, y_train)\ny_pred = enet_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","2a380b31":"enet_params = {\"l1_ratio\": [0,0.01,0.05,0.1,0.2,0.4,0.5,0.6,0.8,1],\n               \"alpha\":[0.1,0.01,0.001,0.2,0.3,0.5,0.8,0.9,1,2,5,7,10,13,20,45,99,100]}\n\nenet_model = ElasticNet().fit(X_train, y_train)\ngs_cv_enet = GridSearchCV(enet_model, enet_params, cv = 10).fit(X_train, y_train)\nenet_tuned = ElasticNet(**gs_cv_enet.best_params_).fit(X_train, y_train)\ny_pred = enet_tuned.predict(X_test)\nenet_reg_rmse = np.sqrt(mean_squared_error(y_test, y_pred))\nenet_reg_rmse","67d2788e":"# en k\u00fc\u00e7\u00fck rmse de\u011ferini bulma\nrmse_list = {\"\u00c7oklu Do\u011frusal Regresyon\": round(cd_reg_rmse, 4),\n             \"Ridge Regresyon\": round(ridge_reg_rmse, 4),\n             \"Lasso Regresyon\": round(lasso_reg_rmse, 4),\n             \"ElasticNet Regresyon\": round(enet_reg_rmse, 4)}\nrmse_list","9956c73a":"print(\"Sabit de\u011fer: %.4f\" % lasso_model.intercept_)\nprint(X_train.columns)\nprint(\"Katsay\u0131lar: \" + str(np.around(lasso_model.coef_, 4)))","3564cc40":"p-value de\u011feri incelendi\u011finde H0 hipoetezi **reddedilmektedir.** Buna g\u00f6re *TV* ve *Sales* de\u011fi\u015fkenleri aras\u0131nda anlaml\u0131 ve orta derecede g\u00fc\u00e7l\u00fc bir ili\u015fki mevcut oldu\u011fu s\u00f6ylenebilir.","b94449f7":"p-value de\u011feri incelendi\u011finde H0 de\u011ferinin reddedildi\u011fi g\u00f6r\u00fclmektedir. Yani do\u011frusal model anlaml\u0131l\u0131\u011f\u0131 mevcuttur. Sonu\u00e7 olarak bu veri seti \u00fczerinde do\u011frusal s\u0131n\u0131fland\u0131rma y\u00f6ntemlerinin ger\u00e7ekle\u015ftirilebilecektir. Ger\u00e7ekle\u015ftirilecek ve kar\u015f\u0131la\u015ft\u0131r\u0131lacak do\u011frusal s\u0131n\u0131fland\u0131rma y\u00f6ntemleri a\u015fa\u011f\u0131da verilmi\u015ftir:\n\n* \u00c7oklu Do\u011frusal Regresyon\n* Ridge Regresyon\n* Lasso Regresyon\n* ElasticNet Regresyon\n\n## \u00c7oklu Do\u011frusal Regresyon","cb28a012":"## Ridge Regresyon","f0317f26":"S\u00f6z konusu de\u011ferler i\u00e7in bask\u0131lama y\u00f6ntemi kullan\u0131lm\u0131\u015ft\u0131r.","d131179a":"Is\u0131 haritas\u0131 incelendi\u011finde, y\u00fcksek korelasyonun **Sales** ile **TV** de\u011fi\u015fkenleri aras\u0131nda oldu\u011fu g\u00f6r\u00fclmektedir. Bu korelasyonun istatistiksel anlamda anlaml\u0131 olup olmad\u0131\u011f\u0131 incelenecektir.\n\n* H0: **Sales** ile **TV** de\u011fi\u015fkenleri aras\u0131nda anlaml\u0131 bir korelasyon yoktur.\n* H1: **Sales** ile **TV** de\u011fi\u015fkenleri aras\u0131nda anlaml\u0131 bir korelasyon vard\u0131r.\n\nYukar\u0131da her bir de\u011fi\u015fkenin normallik testi yap\u0131ld\u0131. Bu sonuca g\u00f6re korelasyon analizini parametrik olmayan y\u00f6ntem olan **Spearman Korelasyon Analizi** y\u00f6ntemi kullan\u0131lm\u0131\u015ft\u0131r.","773b6dcc":"### ElasticNet Regresyon","59f6904b":"### Model Tuning","6e95b533":"## Veri \u00d6n \u0130\u015fleme\n\n### Ayk\u0131r\u0131 De\u011ferlerin \u0130ncelenmesi","ef75b345":"Genel anlamda incelendi\u011finde, ba\u011f\u0131ms\u0131z de\u011fi\u015fken olarak kabul edilen (TV, Radyo, Gazete) katsay\u0131lar\u0131na ili\u015fkin yay\u0131l\u0131m\u0131n\u0131n geni\u015f oldu\u011fu g\u00f6zlenmekte ancak her bir ba\u011f\u0131ms\u0131z de\u011fi\u015fkenin ortalama ve medyan de\u011ferlerinin birbirlerine neredeyse yak\u0131n oldu\u011fu g\u00f6r\u00fclmektedir. Anla\u015f\u0131l\u0131r yorum a\u00e7\u0131s\u0131ndan de\u011fi\u015fkenlerin g\u00f6rselle\u015ftirilmesi \u00f6nem arz etmektedir.","c09e12f6":"# Veri Giri\u015fi","809a2197":"Kutu grafikleri incelendi\u011finde yaln\u0131zca **Newspaper** de\u011fi\u015fkeninde ayk\u0131r\u0131 de\u011ferlerin oldu\u011fu g\u00f6r\u00fclmektedir. S\u00f6z konusu g\u00f6zlemler a\u015fa\u011f\u0131da incelenmi\u015ftir.","2bde8533":"### Model Validation","4c746341":"De\u011ferler incelendi\u011finde b\u00fct\u00fcn p-value de\u011ferleri 0,05'ten k\u00fc\u00e7\u00fck oldu\u011fu i\u00e7in H0 hipotezi **reddedilir.** Sonu\u00e7 olarak b\u00fct\u00fcn de\u011fi\u015fkenlerin normal da\u011f\u0131lmad\u0131\u011f\u0131 g\u00f6r\u00fclmektedir.","9d7c0fd3":"Veri setinde 200 g\u00f6zlem birimi mevcut. Toplamda 4 de\u011fi\u015fken olup b\u00fct\u00fcn de\u011fi\u015fkenlerin de\u011feri s\u00fcrekli de\u011fer (ya da ondal\u0131k say\u0131 tipinde) oldu\u011fu g\u00f6r\u00fclmektedir. Ayr\u0131ca hi\u00e7bir de\u011fi\u015fkende eksik de\u011fer g\u00f6r\u00fclmemektedir.","4cdacb13":"### Model Tuning","4b406827":"Gerekli bask\u0131lama i\u015flemleri ger\u00e7ekle\u015fti\u011finde Newspaper de\u011fi\u015fkenindeki ayk\u0131r\u0131 de\u011ferin giderildi\u011fi g\u00f6r\u00fclmektedir.\n\n# Modelleme\n\n## Do\u011frusall\u0131k \u0130ncelemesi\n\nDo\u011frusal modellerde anlaml\u0131l\u0131k varsay\u0131m\u0131 istatistiksel olarak kontrol\u00fc yap\u0131lm\u0131\u015ft\u0131r.\n\n* H0: G\u00f6zlenen noktalar\u0131n regresyon do\u011frusuna uyumu **\u00f6nemsizdir.**\n* H1: G\u00f6zlenen noktalar\u0131n regresyon do\u011frusuna uyumu **\u00f6nemlidir.**","26087f54":"### Model Tuning","da17f652":"# Giri\u015f\n\nBu \u00e7al\u0131\u015fmada Regresyon ve Kuzenleri ile reklam sat\u0131\u015f tahmini yap\u0131lm\u0131\u015ft\u0131r. S\u00f6z konusu \u00e7al\u0131\u015fman\u0131n teorik k\u0131sm\u0131 Mustafa Vahit Keskin'in [Udemy E\u011fitiminden](https:\/\/www.udemy.com\/share\/101YLIAkcTdVZWRXQ=\/) al\u0131nm\u0131\u015f olup, orada anlat\u0131lan Veri Bilimi Proje d\u00f6ng\u00fcs\u00fcnde bulunan i\u015flemlerce incelenmi\u015ftir.\n\n# De\u011fi\u015fkenleri Anlama\n\nKullan\u0131lan veri seti Advertising veri seti olup de\u011fi\u015fkenleri ile ilgili k\u0131sa a\u00e7\u0131klama a\u015fa\u011f\u0131dad\u0131r. *(**Not:** \u00c7al\u0131\u015fma i\u00e7erisindeki yorumlar ki\u015fiseldir. Herhangi bir kaynak kullan\u0131lmam\u0131\u015ft\u0131r. De\u011fi\u015fken a\u00e7\u0131klamalar\u0131 da \u00e7al\u0131\u015fma i\u00e7erisindeki yoruma g\u00f6re olu\u015fturulmu\u015ftur.)*\n\n* TV: Bir para birimi (pb) ba\u015f\u0131na TV reklamlar\u0131n\u0131n etki de\u011feri\n* radio: Bir para birimi (pb) ba\u015f\u0131na radyo reklamlar\u0131n\u0131n etki de\u011feri\n* newspaper: Bir para birimi (pb) ba\u015f\u0131na gazete reklamlar\u0131n\u0131n etki de\u011feri\n* sale: Sat\u0131\u015f de\u011feri x1000pb (Yorum yapabilmek i\u00e7in \u00f6rnek olarak kullan\u0131lm\u0131\u015ft\u0131r.)\n\n# Gerekli K\u00fct\u00fcphanelerin Y\u00fcklenmesi","510dccd9":"# Ke\u015fif\u00e7i Veri Analizi","f1822e1f":"Yo\u011funluk grafikleri incelendi\u011finde;\n\n* **TV** ve **Radio** de\u011fi\u015fkenlerinin iki tepeli bir da\u011f\u0131l\u0131ma sahip oldu\u011fu,\n* **Newspaper** de\u011fi\u015fkeninin sola \u00e7arp\u0131k da\u011f\u0131l\u0131m g\u00f6sterdi\u011fi, \n* **Sales** de\u011fi\u015fkeninin ise neredeyse normal da\u011f\u0131l\u0131m g\u00f6sterdi\u011fi g\u00f6r\u00fclmektedir.\n\nBu sebepten dolay\u0131 her bir de\u011fi\u015fkenin normallik durumu istatistiksel olarak incelenecektir. Her bir de\u011fi\u015fken i\u00e7in hipotez testi:\n\n* H0: \u00d6rnek da\u011f\u0131l\u0131m\u0131 ile teorik normal da\u011f\u0131l\u0131m aras\u0131nda istatistiksel olarak anlaml\u0131 bir fark **yoktur.**\n* H1: \u00d6rnek da\u011f\u0131l\u0131m\u0131 ile teorik normal da\u011f\u0131l\u0131m aras\u0131nda istatistiksel olarak anlaml\u0131 bir fark **vard\u0131r.**","d00317d7":"\u00c7al\u0131\u015fmada model ba\u015far\u0131s\u0131 olarak *RMSE de\u011ferinin d\u00fc\u015f\u00fck olmas\u0131* ele al\u0131nm\u0131\u015ft\u0131r. S\u00f6z konusu de\u011ferin en k\u00fc\u00e7\u00fck oldu\u011fu y\u00f6ntem **Lasso Regresyon** y\u00f6ntemi olup a\u015fa\u011f\u0131da olu\u015fturulan model ile bundan sonraki sat\u0131\u015f tahminleri olu\u015fturulabilir.\n\n$Sales = 2.9649 + TV \\times 0.0461 + Radio \\times 0.1842 + Newspaper \\times 0.0022$","2fb25b3c":"## Lasso Regresyon"}}