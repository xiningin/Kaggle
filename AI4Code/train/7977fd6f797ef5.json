{"cell_type":{"24ab1de7":"code","6cec0b02":"code","3a72126a":"code","07705a23":"code","dd683262":"code","4a3407a9":"code","5afe025d":"code","1f29d4bc":"code","adbcc099":"code","8e7d92f7":"code","969c764c":"code","d0934f93":"code","7194cabb":"code","62a82259":"code","0463aaea":"code","571341d2":"code","1f27ea15":"code","a49ac964":"code","ec07174d":"code","27a3c0a1":"code","a09d7f28":"code","d6fd3fa3":"code","83f8b002":"code","f42221c3":"code","b6861ac1":"code","1d0850c4":"code","07735d06":"code","b9ce2069":"code","ac9a8c45":"code","f5fc49d5":"code","d556ce83":"code","61f4abda":"code","1535fcdd":"code","3004d558":"code","eea8417e":"code","57bf64f5":"code","f71f5706":"code","a10d7d5a":"code","09b51341":"code","d93d0016":"code","b3027606":"code","515e4d69":"code","8c63b7cb":"code","ea4b4557":"code","4dd320e7":"markdown","b616eb07":"markdown","64e044f4":"markdown","19db4654":"markdown","6bce9060":"markdown","e9c58414":"markdown","e00d0990":"markdown","98b18998":"markdown","e0065d67":"markdown","f578f342":"markdown","92db81ac":"markdown","7da8febe":"markdown","003b77ad":"markdown","c34f8804":"markdown","8b4bccb2":"markdown","ddaf0172":"markdown","7b99bfe1":"markdown","86dbabd3":"markdown","764fdd4b":"markdown","a68d282a":"markdown","8f15046a":"markdown","e4c73ab5":"markdown","7e89fd8f":"markdown","15c7ffba":"markdown"},"source":{"24ab1de7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport math\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\nPATH_TO_CSV_FILE = os.path.join('..', 'input', 'daily-power-generation-in-india-20172020')\nfor dirname, _, filenames in os.walk(PATH_TO_CSV_FILE):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6cec0b02":"SMALL_SIZE = 8\nMEDIUM_SIZE = 10\nBIGGER_SIZE = 12\n\nplt.rc('font', size=SMALL_SIZE)          # controls default text sizes\nplt.rc('axes', titlesize=SMALL_SIZE)     # fontsize of the axes title\nplt.rc('axes', labelsize=MEDIUM_SIZE)    # fontsize of the x and y labels\nplt.rc('xtick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\nplt.rc('legend', fontsize=SMALL_SIZE)    # legend fontsize\nplt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title","3a72126a":"CSV_FILE_LIST = ['State_Region_corrected.csv', 'file.csv']\n\nstate_wise_area_share_df = pd.read_csv(os.path.join(PATH_TO_CSV_FILE, CSV_FILE_LIST[0]))\npower_generation_df = pd.read_csv(os.path.join(PATH_TO_CSV_FILE, CSV_FILE_LIST[1]))\n\nstate_wise_area_share_df.head(10)","07705a23":"power_generation_df.head(10)","dd683262":"POWER_GENERATION_SHAPE = power_generation_df.shape\nSTATE_WISE_AREA_SHARE_SHAPE = state_wise_area_share_df.shape\n\nprint(\"State Wise Power Share Dataset:\")\nprint(f\"Number of Rows: {STATE_WISE_AREA_SHARE_SHAPE[0]}\")\nprint(f\"Number of Columns: {STATE_WISE_AREA_SHARE_SHAPE[1]}\")\nprint()\n\nprint(\"Power Generation Dataset:\")\nprint(f\"Number of Rows: {POWER_GENERATION_SHAPE[0]}\")\nprint(f\"Number of Columns: {POWER_GENERATION_SHAPE[1]}\")","4a3407a9":"state_wise_area_share_df['Region'].unique()","5afe025d":"power_generation_df['Region'].unique()","1f29d4bc":"state_wise_area_share_df['State \/ Union territory (UT)'].unique()","adbcc099":"# States in the North Region\nNORTH_REGION_STATES = [\n    'Ladakh',\n    'Himachal Pradesh',\n    'Uttarakhand',\n    'Punjab',\n    'Haryana',\n    'Jammu and Kashmir',\n    'Rajasthan',\n    'Delhi',\n    'Chandigarh',\n    'Uttar Pradesh',\n]\n\n# States in the North Eastern Region\nNORTH_EASTERN_REGION_STATES = [  \n    'Arunachal Pradesh',\n    'Assam',\n    'Meghalaya',\n    'Manipur',\n    'Mizoram',\n    'Nagaland',\n    'Tripura',\n]\n\n\n# States in the South Region\nSOUTH_REGION_STATES = [\n    'Tamil Nadu',\n    'Telangana',\n    'Kerala',\n    'Karnataka',\n    'Andhra Pradesh',\n    'Puducherry',\n]\n\n# States in the West Region\nWEST_REGION_STATES = [\n    'Maharashtra',\n    'Gujarat',\n    'Madhya Pradesh',\n    'Dadra and Nagar Haveli and Daman and Diu',\n    'Chhattisgarh',\n    'Goa',\n]\n\n# States in the East Region\nEAST_REGION_STATES = [\n    'Odisha',\n    'Bihar',\n    'West Bengal',\n    'Jharkhand',\n    'Sikkim',\n]","8e7d92f7":"REGION_NAMES = {'N': 'Northern', 'W': 'Western', 'S': 'Southern', 'E': 'Eastern', 'NE': 'NorthEastern'}\n\nstate_wise_area_share_df.loc[state_wise_area_share_df['State \/ Union territory (UT)'].isin(NORTH_REGION_STATES), 'Region'] = REGION_NAMES['N']\nstate_wise_area_share_df.loc[state_wise_area_share_df['State \/ Union territory (UT)'].isin(SOUTH_REGION_STATES), 'Region'] = REGION_NAMES['S']\nstate_wise_area_share_df.loc[state_wise_area_share_df['State \/ Union territory (UT)'].isin(EAST_REGION_STATES), 'Region'] = REGION_NAMES['E']\nstate_wise_area_share_df.loc[state_wise_area_share_df['State \/ Union territory (UT)'].isin(WEST_REGION_STATES), 'Region'] = REGION_NAMES['W']\nstate_wise_area_share_df.loc[state_wise_area_share_df['State \/ Union territory (UT)'].isin(NORTH_EASTERN_REGION_STATES), 'Region'] = REGION_NAMES['NE']\n\nstate_wise_area_share_df['Region'].unique()","969c764c":"state_wise_area_share_df.head(10)","d0934f93":"COLUMN_HEADERS = power_generation_df.columns\n\nCOLUMN_HEADERS","7194cabb":"power_generation_df.dtypes","62a82259":"for column_name in COLUMN_HEADERS:\n    if column_name in ['Thermal Generation Actual (in MU)', 'Thermal Generation Estimated (in MU)']:\n        power_generation_df[column_name] = power_generation_df[column_name].str.replace(',', '')\n        power_generation_df[column_name] = pd.to_numeric(power_generation_df[column_name])\n\n\npower_generation_df.head(10)","0463aaea":"power_generation_df[['Thermal Generation Actual (in MU)', 'Nuclear Generation Actual (in MU)', 'Hydro Generation Actual (in MU)']].sum(axis=1)","571341d2":"# This also gives the same result as the previous cell\n# power_generation_df.loc[:, ['Thermal Generation Actual (in MU)', 'Nuclear Generation Actual (in MU)', 'Hydro Generation Actual (in MU)']].sum(axis=1)","1f27ea15":"power_generation_df['Total Power Generation Actual (in MU)'] = power_generation_df[\n                                                                                    [\n                                                                                        'Thermal Generation Actual (in MU)',\n                                                                                        'Nuclear Generation Actual (in MU)',\n                                                                                        'Hydro Generation Actual (in MU)',\n                                                                                    ]\n                                                                                   ].sum(axis=1)","a49ac964":"power_generation_df['Total Power Generation Estimated (in MU)'] = power_generation_df[\n                                                                                        [\n                                                                                            'Thermal Generation Estimated (in MU)',\n                                                                                            'Nuclear Generation Estimated (in MU)',\n                                                                                            'Hydro Generation Estimated (in MU)',\n                                                                                        ]\n                                                                                      ].sum(axis=1)","ec07174d":"power_generation_df.head(10)","27a3c0a1":"CHECKS = [\n    math.isclose(624.23 + 30.36 + 273.27, 927.86),\n    math.isclose(1106.89 + 25.17 + 72.00, 1204.06),\n    math.isclose(576.66 + 62.73 + 111.57, 750.96),\n]\n\n\nif all(CHECKS):\n    print('Looking Good!')\nelse:\n    print('Something went wrong!!')","a09d7f28":"CHECKS = [\n    math.isclose(484.21 + 35.57 + 320.81, 840.59),\n    math.isclose(1024.33 + 3.81 + 21.53, 1049.67),\n    math.isclose(578.55 + 49.80 + 64.78, 693.13),\n]\n\n\nif all(CHECKS):\n    print('Looking Good!')\nelse:\n    print('Something went wrong!!')","d6fd3fa3":"power_generation_df['Date'] = pd.to_datetime(power_generation_df['Date'], format='%Y-%m-%d')\n\npower_generation_df.head(10)","83f8b002":"power_generation_df.dtypes","f42221c3":"power_generation_df.isnull()","b6861ac1":"# power_generation_df.isnull().values","1d0850c4":"# type(power_generation_df.isnull().values)  # Converts the DataFrame into a numpy array","07735d06":"# power_generation_df.isnull().values.ravel()  # Flattens the 2D array into a 1D array","b9ce2069":"NO_OF_NAN_VALUES = np.count_nonzero(power_generation_df.isnull().values.ravel())\nprint(f\"The number of NaN values in the dataset is: {NO_OF_NAN_VALUES}\")","ac9a8c45":"NO_OF_ROWS_WITH_NAN_VALUES = power_generation_df.shape[0] - power_generation_df.dropna().shape[0]\nprint(f\"The number of rows with NaN values are: {NO_OF_ROWS_WITH_NAN_VALUES}\")","f5fc49d5":"AVG_NO_OF_NANs_PER_ROW = np.count_nonzero(power_generation_df.isnull().values.ravel()) \/ (power_generation_df.shape[0] - power_generation_df.dropna().shape[0])\nprint(f\"So there are about {AVG_NO_OF_NANs_PER_ROW} NaN values per row\")","d556ce83":"power_generation_df.isnull().any()","61f4abda":"power_generation_df[['Region', 'Nuclear Generation Actual (in MU)', 'Nuclear Generation Estimated (in MU)']].groupby('Region').sum()","1535fcdd":"power_generation_df.columns","3004d558":"pd.DatetimeIndex(power_generation_df[\"Date\"]).year.unique()","eea8417e":"power_generation_df[['Region', 'Nuclear Generation Actual (in MU)', 'Nuclear Generation Estimated (in MU)']].groupby('Region').sum()","57bf64f5":"power_generation_df.fillna(0.0, inplace=True)","f71f5706":"power_generation_df","a10d7d5a":"power_generation_df.describe()","09b51341":"power_generation_df.groupby('Region').describe().stack()","d93d0016":"power_generation_df.groupby('Region').sum().reset_index()","b3027606":"power_generation_df.groupby('Region').sum()[\"Total Power Generation Actual (in MU)\"]\n# power_generation_df.groupby('Region').sum()[\"Total Power Generation Estimated (in MU)\"]","515e4d69":"power_generation_df.groupby('Region').sum().index.values","8c63b7cb":"power_generation_df.groupby('Region').sum()[[\"Total Power Generation Actual (in MU)\", \"Total Power Generation Estimated (in MU)\"]]","ea4b4557":"TEMP = power_generation_df.groupby('Region').sum()[[\"Total Power Generation Actual (in MU)\", \"Total Power Generation Estimated (in MU)\"]]\n\nax = plt.figure(figsize=(4,3), dpi=150)\nplt.title(\"Actual Vs Estimated\\nPower Generation per Region\", y=1.08, fontsize=12)\nTEMP.plot.bar(rot=75, ax=plt.gca(), width=.75)\nplt.legend(fancybox=True, shadow=True, bbox_to_anchor=(1, 0.5), loc='center left')\nplt.ylabel('Power Generated in Mega Units (MU)')\n\nplt.show()","4dd320e7":"## What are the missing values indicating??\n\nSo before we conclude that the `NaN` values in our dataset are from missing data and blame the dataset and their creators, we need to take a closer look as to what data is missing and why it could possibly be missing.","b616eb07":"### What are the State \/ Union territory (UT) of India, according to the dataset?\n#### This data will also give us an idea of how accurate\/up-to-date this dataset is","64e044f4":"The above statistic is not correct with regards to the `Nuclear Generation` columns, as the values for mean, std etc, include the values from the **Eastern** and **NorthEastern** regions, which do not have any nuclear power plants (atleast no active ones). So the values from those regions are 0, and hence they would skew the stats for these columns.\n\nWe can correct this by producing these stats for every region separately...","19db4654":"### Let's check if the values in the `Total Power Generation Actual (in MU)` column are correct","6bce9060":"# Question 1\n## a. What is the comparision between the Actual and Estimated Power Generated per *Region*?","e9c58414":"# Questions:\n1. What is the comparision between the Actual and Estimated Power Generated?\n    - Per `Region`\n    - Per type of power generation technique\n    - Per Year\n2. What is the distribution of electricity (in terms of MU\/10km2) in a particular region?\n    - Per power generation technique\n    - All power generation techniques taken together for that region\n3. Which power generation technique dominates which region of India?\n4. What is the: **percentage of power generation from each region** ***Vs*** **percentage of area occupied by that region**\n    - Create a stacked bar chart containing the state-wise breakup of every region's area\n5. What is the region-wise break up of the area occupied by the corresponding state\/union territory?","e00d0990":"So it looks like values seem to be missing only in two columns `Nuclear Generation Actual (in MU)` and `Nuclear Generation Estimated (in MU)`, so I feel that the possible reasons for this could be:\n1. Data is missing\n    1. This is always our first instinct, but this can only be concluded if all the other hypothesis fail\n2. Maybe the Nuclear plants were down for maintenance or some reason and hence did not produce any electrity on those days to record\n3. Maybe there are no Nuclear plants in some regions meaning that there are no values to record there\n\nNow, the most easiest hypothesis to try out is, whether or not there are any nuclear plants in some region(s)","98b18998":"## b. What is the comparision between the Actual and Estimated Power Generated per *type of power generation technique*?","e0065d67":"---","f578f342":"# Configuring the setting for the Plots","92db81ac":"## c. What is the comparision between the Actual and Estimated Power Generated per *Year*?","7da8febe":"## Observations:\n- The set of regions in the two DataFrames are not exactly the same.\n- Other than the *Northern*, *Western*, *Southern* and *Eastern* values (similar to the regular *North*, *South*, *East* and *West*), we also have a common value called *Northeastern*, which refers to the famously known *'Seven Sisterly States'* otherwise called the *'Seven Sisters'*, which are the Eight North-East states of India:\n    1. Arunachal Pradesh\n    2. Assam\n    3. Manipur\n    4. Meghalaya\n    5. Mizoram\n    6. Nagaland\n    7. Sikkim\n    8. Tripura\n\n\n- It's great to see that the dataset shows Telangana **and** Andhra Pradesh and not one unified states which shows the data is quite up to date. [More information here (Wikipedia)](https:\/\/en.wikipedia.org\/wiki\/Andhra_Pradesh#Post-independence)\n\n- Similarly, the mention of Ladakh and Jammu and Kashmir in the dataset also shows that the dataset is quite up to date, with the recent changes in the country. [More information here (Wikipedia)](https:\/\/en.wikipedia.org\/wiki\/Jammu_and_Kashmir_(union_territory))\n\n---\n\n### Here is an image of India with the regions and state boundaries highlighted:\n\n![Map of India with regions and state boundaries highlighted](https:\/\/i.imgur.com\/U1unVf4.png)\n\n**Note:** This image was taken from [National Power Portal Dashboard](https:\/\/npp.gov.in\/dashBoard\/cp-map-dashboard)\n\n---\n\n### How do we handle the value of *Central*?\nThe best way to handle rows with the value *Central* in the `Region` column is by replacing those values with either the value: *Northern*, *Western*, *Southern*, *Eastern* or *NorthEastern* based on the state present in that row. \n\nNow, the data in the `power_generation_df` DataFrame which only has either the values: *Northern*, *Western*, *Southern*, *Eastern* or *NorthEastern* in its `Region` column, was got from the [National Power Portal Dashboard](https:\/\/npp.gov.in\/dashBoard\/cp-map-dashboard), so let's use the dashboard's classification of *Northern*, *Western*, *Southern*, *Eastern* and *NorthEastern* states, to classify the states in the `state_wise_area_share_df` DataFrame which contains the extra *central* value in the `Region` column.\n\nLet's do this now...","003b77ad":"# So let's start answering the questions, we had set out to solve...","c34f8804":"# Let's take a look at the shape of the Dataset","8b4bccb2":"We notice something interesting here, which is that:\nThere is *no nuclear power being generated* in the **Eastern** and **NorthEastern** regions, for over **4 years**.\n\nNow, its highly unlikely that for 4 years the nuclear plants there have not produced any electricity due to maintenance or other such reasons. \nSo it is plausible that there are no nuclear power plants or at least no active nuclear power plants in the **Eastern** and **NorthEastern** regions of India.","ddaf0172":"---","7b99bfe1":"### Let's check if the values in the `Total Power Generation Estimated (in MU)` column are correct","86dbabd3":"---","764fdd4b":"# Our First Look at the Data","a68d282a":"# Reviewing and Cleaning the Dataset","8f15046a":"### Firstly, what are the regions of India according to the dataset? Is it just *North*, *South*, *East* and *West* or is it more detailed?","e4c73ab5":"# Loading in the Necessary Modules and Taking a Look at the Dataset Folder","7e89fd8f":"### We can confirm this hypothesis by looking at the map of power generation plants in India\n#### Here is an image of India with the regions and state boundaries highlighted:\n\n![Map of India with regions and state boundaries highlighted](https:\/\/i.imgur.com\/U1unVf4.png)\n\n**Note:** This image was taken from [National Power Portal Dashboard](https:\/\/npp.gov.in\/dashBoard\/cp-map-dashboard)\n\n\n### Conclusion:\nWe observe that there are no nuclear power plants in the **Eastern** and **NorthEastern** regions of India, confirming our initial hypothesis.\n\n### What do we do with these columns?\nThe right thing to do would be to fill the `NaN` values with 0 as that would show that no nuclear power is being generated in the **Eastern** and **NorthEatern** regions over the course of the 4 years of data we have.\n\nWe cannot remove the rows outright as that would remove the data regarding the other power generation techniques in the **Eastern** and **NorthEatern** regions of India.","15c7ffba":"---"}}