{"cell_type":{"92a4ef2c":"code","9be1903f":"code","ca5ebfb9":"code","1f05c051":"code","67ae209d":"code","68a268f8":"code","ab046e24":"code","20055f41":"code","405653ec":"code","7f52d8f6":"code","3e085653":"code","bb757bd5":"code","222173c6":"code","ca70ccb4":"code","71fa095f":"code","6849d7ec":"code","916e746a":"code","0e54e008":"code","a87098ec":"code","2619601a":"code","53cd596f":"code","acc7dd5f":"code","60df5ebe":"code","903c3acf":"code","bb846118":"code","ddae57a5":"code","658000d6":"code","66cf8e50":"code","e8df8638":"code","10dbda13":"markdown","09143d72":"markdown","041c7773":"markdown","21a36345":"markdown","33766ab1":"markdown","748d29d4":"markdown","ec20dd47":"markdown","f94481b8":"markdown"},"source":{"92a4ef2c":"#import useful libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","9be1903f":"# Path of datasets\ntrain_forest_path = \"\/kaggle\/input\/tabular-playground-series-dec-2021\/train.csv\"\ntest_forest_path = \"\/kaggle\/input\/tabular-playground-series-dec-2021\/test.csv\"\nsample_submission_path = \"..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv\"","ca5ebfb9":"# load train and test dataset in train_forest and test_forest variable.\ntrain_forest = pd.read_csv(train_forest_path)\ntest_forest = pd.read_csv(test_forest_path)\nsubmission = pd.read_csv(sample_submission_path)","1f05c051":"#print first 5 rows of train dataset\ntrain_forest.head()","67ae209d":"#print first 5 rows of test dataset\ntest_forest.head()","68a268f8":"# shape of train dataset\nprint(f\"Number of rows are\",train_forest.shape[0])\nprint(f\"Number of columns are\",train_forest.shape[1])","ab046e24":"# Name of columns\ntrain_forest.columns","20055f41":"# quick info of our data\ntrain_forest.info()","405653ec":"# statistical view of our data\ntrain_forest.describe(include ='all')","7f52d8f6":"# look for null value\ntrain_forest.isnull().sum()    # no null values, that's good thing haha","3e085653":"\n#sns.heatmap(train_forest.isnull())","bb757bd5":"# check for duplicates values\ntrain_forest.duplicated().sum()","222173c6":"\nplt.hist(train_forest['Cover_Type'],density = True)\nplt.xlabel('Cover Type')","ca70ccb4":"numeric_features = train_forest.describe().columns","71fa095f":"'''for i in numeric_features:\n    fig = plt.figure(figsize=(8,8))\n    ax = fig.gca()\n    train_forest[i].hist(ax=ax)\n    ax.set_title(i)\n    ax.axvline(train_forest[i].mean(),color = 'red', linestyle = 'dashed',linewidth = 2)\n    ax.axvline(train_forest[i].median(), color = 'yellow', linestyle = 'dashed', linewidth = 2)\nplt.show()'''","6849d7ec":"independent_variable = train_forest.drop('Cover_Type', axis = 1)\ndependent_variable = train_forest['Cover_Type']","916e746a":"independent_variable.columns","0e54e008":"X = independent_variable.copy()\ny = dependent_variable.copy()","a87098ec":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.2, random_state = 0)","2619601a":"print(X_train.shape, X_test.shape)\nprint(y_train.shape, y_test.shape)","53cd596f":"# from sklearn.linear_model import LinearRegression\n# reg = LinearRegression()\n# reg.fit(X_train, y_train)","acc7dd5f":"from sklearn.ensemble import RandomForestClassifier\nreg_r = RandomForestClassifier()\nreg_r.fit(X_train, y_train)","60df5ebe":"y_predict = reg_r.predict(X_test)","903c3acf":"from sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error,accuracy_score","bb846118":"r2_score(y_test, y_predict)","ddae57a5":"test_predict = reg_r.predict(test_forest)","658000d6":"pd.DataFrame(test_predict).value_counts()","66cf8e50":"submission['Cover_Type'] = test_predict","e8df8638":"submission.to_csv(\"random_forest_submission.csv\",index=False)","10dbda13":"# Data Visulization","09143d72":"### Findings\n- All features are int type datatype.\n- We will dealing with numerical columns, quite good. No need of encoder :)","041c7773":"## Check for null values","21a36345":"# Explore Training Dataset","33766ab1":"### Findings\n- No null values\n- No duplicates values\n- And that thing is very good. Haha","748d29d4":"# Exploring Datasets","ec20dd47":"## Check for Duplicates","f94481b8":"# Submission"}}