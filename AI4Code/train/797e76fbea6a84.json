{"cell_type":{"b6f3a6b0":"code","a8d44e6d":"code","582f456f":"code","1c9776bd":"code","b672d579":"code","93800125":"code","fe9a9bdf":"code","bacb4bf6":"code","0da4bb0f":"code","e9d3ac3e":"code","45b20b2c":"code","3b9a9df4":"code","e57f39e9":"code","ab42f3a3":"code","ffe8d0fd":"code","32e99805":"code","856efe0f":"code","186ee679":"code","50403055":"code","4930aa4b":"code","1f771857":"code","dab526f0":"code","03e59101":"code","637348ed":"code","eca0bcee":"code","bc7e994d":"code","0d14e7f1":"code","647f835d":"code","2930df84":"code","73839134":"code","ee1a6f56":"code","d6a4127c":"code","711e515e":"code","d82021c4":"code","57a7e0d8":"code","d679e188":"code","04adff5e":"code","0b1b274d":"code","71abc136":"markdown","36874dcd":"markdown","668b6128":"markdown","3d7f1cd6":"markdown","46b51dbb":"markdown","1d43dae5":"markdown"},"source":{"b6f3a6b0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nimport tensorflow as tf","a8d44e6d":"data = pd.read_csv('..\/input\/av-healthcare-analytics-ii\/healthcare\/train_data.csv')","582f456f":"data","1c9776bd":"data.isnull().sum()","b672d579":"def impute_missing_values(data, columns):\n    for column in columns:\n        data[column] = data[column].fillna(data[column].mean())","93800125":"impute_columns = ['Bed Grade', 'City_Code_Patient']\n\nimpute_missing_values(data, impute_columns)","fe9a9bdf":"data.isnull().sum()","bacb4bf6":"data.dtypes","0da4bb0f":"def get_categorical_uniques(data):\n    categorical_columns = [column for column in data.dtypes.index if data.dtypes[column] == 'object']\n    categorical_uniques = {column: data[column].unique() for column in categorical_columns}\n    \n    return categorical_uniques","e9d3ac3e":"get_categorical_uniques(data)","45b20b2c":"pd.get_dummies(data['Department'])","3b9a9df4":"def onehot_encode(data, columns):\n    for column in columns:\n        dummies = pd.get_dummies(data[column])\n        data = pd.concat([data, dummies], axis=1)\n        data.drop(column, axis=1, inplace=True)\n    return data","e57f39e9":"onehot_columns = ['Hospital_type_code', 'Hospital_region_code', 'Department', 'Ward_Type', 'Ward_Facility_Code']","ab42f3a3":"data = onehot_encode(data, onehot_columns)","ffe8d0fd":"data","32e99805":"categorical_uniques = get_categorical_uniques(data)\nget_categorical_uniques(data)","856efe0f":"for column in categorical_uniques:\n    categorical_uniques[column] = sorted(categorical_uniques[column])","186ee679":"categorical_uniques","50403055":"unique_list = categorical_uniques['Type of Admission']\nunique_list.insert(0, unique_list.pop(unique_list.index('Urgent')))\nunique_list.insert(0, unique_list.pop(unique_list.index('Trauma')))\n\nunique_list = categorical_uniques['Severity of Illness']\nunique_list.insert(0, unique_list.pop(unique_list.index('Moderate')))\nunique_list.insert(0, unique_list.pop(unique_list.index('Minor')))","4930aa4b":"categorical_uniques","1f771857":"stay_mappings = {value: index for index, value in enumerate(categorical_uniques['Stay'])}\nstay_mappings","dab526f0":"def ordinal_encode(data, uniques):\n    for column in uniques:\n        data[column] = data[column].apply(lambda x: uniques[column].index(x))","03e59101":"data['Stay']","637348ed":"ordinal_encode(data, categorical_uniques)\ndata['Stay']","eca0bcee":"(data.dtypes == 'object').sum()","bc7e994d":"data","0d14e7f1":"data.set_index('case_id', inplace=True)","647f835d":"y = data['Stay']\nX = data.drop('Stay', axis=1)","2930df84":"scaler = StandardScaler()\n\nX = pd.DataFrame(scaler.fit_transform(X), index=X.index, columns=X.columns)","73839134":"X","ee1a6f56":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8)","d6a4127c":"log_model = LogisticRegression()\nlog_model.fit(X_train, y_train)","711e515e":"inputs = tf.keras.Input(shape=(38,))\nx = tf.keras.layers.Dense(16, activation='relu')(inputs)\nx = tf.keras.layers.Dense(16, activation='relu')(x)\noutputs = tf.keras.layers.Dense(11, activation='softmax')(x)\n\nnn_model = tf.keras.Model(inputs=inputs, outputs=outputs)","d82021c4":"nn_model.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n)","57a7e0d8":"batch_size = 32\nepochs = 10\n\nhistory = nn_model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    batch_size=batch_size,\n    epochs=epochs,\n)","d679e188":"print(f\"Logistic Regression Acc: {log_model.score(X_test, y_test)}\")\nprint(f\"     Neural Netowrk Acc: {nn_model.evaluate(X_test, y_test, verbose=0)[1]}\")","04adff5e":"plt.figure(figsize=(14, 10))\n\nplt.plot(range(epochs), history.history['loss'], label=\"Training Loss\")\nplt.plot(range(epochs), history.history['val_loss'], label=\"Validation Loss\")\n\nplt.xlabel(\"Epoch\")\nplt.ylabel(\"Loss\")\nplt.legend(loc='upper right')\n\nplt.show()","0b1b274d":"np.argmin(history.history['val_loss']) + 1","71abc136":"## Encoding","36874dcd":"## Missing Values","668b6128":"# Preprocessing","3d7f1cd6":"## Scaling","46b51dbb":"# Getting Started","1d43dae5":"# Training"}}