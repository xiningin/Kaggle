{"cell_type":{"28228671":"code","42f43c62":"code","ebc520b8":"code","a86954ae":"code","96012bc2":"code","8e7ad9ca":"code","58403a49":"code","115509e2":"code","91bf7fd6":"code","840a4125":"code","961efb10":"code","2a2c19b1":"code","04482600":"code","8a8bad75":"code","c09c8e49":"code","ae5ed9c1":"code","32934e81":"code","2c458789":"code","db6dfea1":"code","f49d589d":"code","8ddaa1c0":"code","903f60e9":"code","d1656ac2":"code","5d2c6a7f":"code","d9ca80ea":"code","26b304b5":"code","c5010706":"code","77e3f9aa":"code","25940636":"code","3eb5cc4c":"code","b2287655":"code","3a269cdf":"code","0b6caba0":"code","8bae1d73":"code","905563f7":"code","77215aa9":"code","35b6accf":"code","f2418efd":"code","9414754e":"code","fda76814":"code","e385dea1":"code","d52202e1":"code","76ef1144":"code","112eedd7":"code","8944d4cf":"code","61fe2835":"code","c76757f5":"code","1bfa8117":"markdown","a64deb34":"markdown","b107147a":"markdown","2899567a":"markdown","4136d422":"markdown","8a2de2a7":"markdown","48c83438":"markdown","7077e216":"markdown","fb7d5df7":"markdown","3deacf28":"markdown","9a24b539":"markdown","f6d1d8b2":"markdown","6cf0da5f":"markdown","d615cea7":"markdown","0ab887d4":"markdown","3e55ec33":"markdown","df3159b2":"markdown","39f68999":"markdown","a63bb998":"markdown","d7079920":"markdown","4a395c03":"markdown","ce78a5c6":"markdown"},"source":{"28228671":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","42f43c62":"data = pd.read_csv('..\/input\/insurance.csv')","ebc520b8":"data.info()","a86954ae":"data.columns","96012bc2":"data.corr()","8e7ad9ca":"f,ax = plt.subplots(figsize = (15,15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)\nplt.show()","58403a49":"data.head(10)","115509e2":"data.age.plot(kind='line', color='g', label='Age', linewidth=1, alpha=0.5, grid=True, linestyle='-')\ndata.bmi.plot(kind='line', color='r', label='BMI', linewidth=1, alpha=0.5, grid=True, linestyle=':')\nplt.legend('upper left')\nplt.xlabel('age')\nplt.ylabel('bmi')\nplt.title('Line Plot')\nplt.show()","91bf7fd6":"data.plot(kind='scatter', x='age', y='children',alpha = 0.5,color = 'red')\nplt.xlabel('Age')              \nplt.ylabel('Children')\nplt.title('Age Children Scatter Plot')  \nplt.show()","840a4125":"data.charges.plot(kind='hist', bins=50, figsize=(10,10))\nplt.show()","961efb10":"data1=data['sex']=='female'\ndata_female=data[data1]\ndata2=data['sex']=='male'\ndata_male=data[data2]","2a2c19b1":"data_female.charges.plot(kind='hist', bins=50, figsize=(10,10))\nplt.show()","04482600":"data_male.charges.plot(kind='hist', bins=50, figsize=(10,10))\nplt.show()","8a8bad75":"data4=(data['sex']=='female') & (data['smoker']=='yes') & (data['children']>0)\ndata[data4]","c09c8e49":"data3=(data['sex']=='male') & (data['smoker']=='yes') & (data['children']>0)\ndata[data3]","ae5ed9c1":"average_bmi=sum(data.bmi)\/len(data.bmi)\ndata['bmi_level']=['high' if i>average_bmi else 'low' for i in data.bmi]\ndata.loc[:10,[\"bmi_level\",\"bmi\"]] # we will learn loc more detailed later\n","32934e81":"data.shape","2c458789":"data.tail()","db6dfea1":"print(data.region.value_counts(dropna = False))","f49d589d":"data.describe()","8ddaa1c0":"data.boxplot(column='age',by = 'children')","903f60e9":"data_new=data.head()\ndata_new","d1656ac2":"melted=pd.melt(frame=data_new,id_vars='age',value_vars=['children','bmi_level',])\nmelted","5d2c6a7f":"melted.pivot(index='age',columns='variable',values='value')","d9ca80ea":"data_h=data.head()\ndata_t=data.tail()\nconc_data_row=pd.concat([data_h,data_t],axis=0,ignore_index=True)\nconc_data_row","26b304b5":"data_1=data['region'].head()\ndata_2=data['smoker'].head()\nconc_data_col=pd.concat([data_1,data_2],axis=1)\nconc_data_col","c5010706":"data.dtypes","77e3f9aa":"data['charges']=data['charges'].astype('category')\ndata['bmi_level']=data['bmi_level'].astype('object')\ndata.dtypes","25940636":"assert 1==1","3eb5cc4c":"assert data.age.dtypes == np.int","b2287655":"data.plot(subplots=True)\nplt.show()","3a269cdf":"data['charges']=data['charges'].astype('float')","0b6caba0":"data.plot(kind = \"hist\",y = \"charges\",bins = 50,range= (0,25000),normed = True)\nplt.show()","8bae1d73":"fig, axes = plt.subplots(nrows=1,ncols=2)\ndata.plot(kind = \"hist\",y = \"charges\",bins = 150,range= (0,25000),normed = True,ax = axes[0])\ndata.plot(kind = \"hist\",y = \"charges\",bins = 150,range= (0,25000),normed = True,ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt","905563f7":"time_list = [\"1997-07-04\",\"1995-10-05\"]\nprint(type(time_list[1]))\n\ndatetime_object=pd.to_datetime(time_list)\nprint(type(datetime_object))","77215aa9":"data5=data.head()\ndate_list=[\"1997-01-10\",\"1997-02-10\",\"1997-02-15\",\"1997-03-10\",\"1997-03-11\"]\ndatetime_object = pd.to_datetime(date_list)\ndata5[\"date\"] = datetime_object\ndata5=data5.set_index('date')\ndata5","35b6accf":"print(data5.loc[\"1997-03-10\"])\nprint(data5.loc[\"1997-02-10\":\"1997-03-16\"])","f2418efd":"data5.resample(\"A\").mean()","9414754e":"data5.resample(\"M\").mean()","fda76814":"data5.resample(\"M\").mean().interpolate(\"linear\")","e385dea1":"data.loc[10:1:-1,\"age\":\"children\"]","d52202e1":"boolean = (data.age<20) & (data.children>0) & (data.bmi>30)\ndata[boolean]","76ef1144":"data.age[data.bmi<18]","112eedd7":"print(data.index.name)\ndata.index.name=\"index_name\"\ndata.head()","8944d4cf":"data_c=data.copy()\ndata_c.index=range(1,1339,1)\ndata_c.head()","61fe2835":"data6 = data.set_index([\"smoker\",\"region\"])\ndata6.head(50)","c76757f5":"data.groupby(\"region\").mean()","1bfa8117":"By scatter plot, it can be said that people who are younger than **40** have more child than people who are older than **40**.","a64deb34":"**Moms win! Smokers fathers are more than smoker mothers.**\n","b107147a":"Through the ***matplotlib*** library, the histogram can be created about datasets.","2899567a":"It is the visualization relationship between age and bmi with **Line Plot**.","4136d422":"In this work, firstly we're going to add some libraries which are helpful for analysing our data.","8a2de2a7":"Also, we can filter our data like that:","48c83438":"Let's look the dataset a little.","7077e216":"We can see number of columns and rows with **shape** method. Also with **tail** method shows that information from data of last.","fb7d5df7":"Another nice method is **describe** . It calculates the number of numeric element's rows and statistical analysis.","3deacf28":"In this data, we have 62 smoker mother.\nLet's look at the male.","9a24b539":"Now, we will read dataset's path with pandas library function.","f6d1d8b2":"The **data.columns**  method gives specified information about columns.","6cf0da5f":"There is another useful function: **corr()**. This function can do correlation between data for us.","d615cea7":"We can see our dataset's \n* class,\n* columns,\n* data types,\n* memory usage\nso clearly and easliy with using **info()** function.\n","0ab887d4":"Matplot library has the **boxplot** that shows relation between two elements.","3e55ec33":"Then, we can see the relationship between age and children with **Scatter Plot**.","df3159b2":"If you want to use specific elements, you can melt the data like that:\n    First let's take a glace at data.","39f68999":"And now,the ***seaborn***  library's function that **heatmap()** visualizes the corr function's outputs.\nRelationship between data increases as color opens and value approaches **1.0**.","a63bb998":"We can said that  female's charges less than male's charges between 20000 and 50000.","d7079920":"Let's look female and male people.For this issue we will create frames and use some plots for visualization.","4a395c03":"The **value_counts** method counts a certain column's objects and **dropna** is dropping missing values. It has so many parametres, you can reach them from pandas website and  [there](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.dropna.html).","ce78a5c6":"Let's get some information about medical cost personal."}}