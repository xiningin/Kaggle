{"cell_type":{"38ce913c":"code","d5b1e539":"code","410347f6":"code","83449099":"code","56c13476":"code","bfbfdd3c":"code","1dd1f996":"code","ae0bf633":"code","eebd37bc":"code","d649a056":"code","e2e3767f":"code","30b5f974":"code","9e9746a0":"code","017dc2d5":"code","0a77aee4":"code","3eb76a63":"code","49f3ffea":"code","ae049356":"code","aefa96ab":"code","8fa9df3b":"code","2975e624":"code","095a81b2":"code","3eade4a3":"code","aa77f975":"code","40a55c55":"code","4c97ed99":"code","243853b5":"code","651b1b59":"code","faf45d8c":"code","2b1344d6":"code","d0421be4":"code","7a06f528":"code","bcd63974":"code","81995300":"code","a3292c3e":"code","5000236e":"code","d5d48964":"code","9d80ee2a":"code","d04d04d7":"code","892dc319":"code","3e452e01":"code","1bb56ffb":"code","ec6f07b5":"code","1dfee85d":"code","fbec6f03":"code","c9ecb6d8":"code","c38b8521":"code","be9ab54b":"code","72de2758":"code","2db36643":"code","286efb25":"code","5b0701ed":"code","f89692d2":"code","a2f336d0":"code","e94f0eea":"code","a3596090":"code","229d1314":"code","bbe881db":"code","4c566974":"code","20ad8272":"code","8617e415":"code","14512a7d":"code","87b074f7":"code","49bde45f":"code","62d6ea1f":"code","5c78be06":"code","7e80b4fa":"code","798665d5":"code","a3163bfe":"code","cf783cee":"code","c4aca4c6":"code","28ff45b9":"code","0d8ee87e":"code","aa2cd3e6":"code","15dc1cbb":"code","6bdcff25":"code","b64f1f83":"code","90f4c3ec":"markdown","d22505f1":"markdown","7dfc757b":"markdown","ae06a61d":"markdown","d6f00140":"markdown","13555b3d":"markdown","50f92aa5":"markdown","7bb4c560":"markdown","7742ef5c":"markdown","54918847":"markdown","bcef3700":"markdown","d61fd804":"markdown","b7bb08d7":"markdown","72939ff1":"markdown","0eb22032":"markdown","dd75dcf3":"markdown","819d431a":"markdown","bc417f2f":"markdown","98943052":"markdown","08e53ee5":"markdown","f4c3349c":"markdown","f8a13e8b":"markdown"},"source":{"38ce913c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","d5b1e539":"dataset = pd.read_csv('..\/input\/predict-loan-approval-problem\/train_u6lujuX_CVtuZ9i.csv')\nprint('dataset :\\n',dataset.head(5))\nprint('-----------------------------------------------------------------------')\nprint('shape :',dataset.shape)\nprint('-----------------------------------------------------------------------')\nprint('columns in dataset')\nprint('-----------------------------------------------------------------------')\nfor cols in dataset.columns:\n    print(cols)","410347f6":"dataset.drop(['Loan_ID'],axis=1,inplace=True)\nprint('dataset :\\n',dataset.head(5))","83449099":"success = dataset[dataset['Loan_Status'].isin(['Y'])]\nrejected = dataset[dataset['Loan_Status'].isin(['N'])]\nprint('success data : \\n',success.head(5))\nprint('-----------------------------------------------------------------------')\nprint('rejected data \\n',rejected.head(5))","56c13476":"split = dataset.Loan_Status\nsuccess , rejected = split.value_counts()\nprint('success :',success)\nprint('rejected :',rejected)\nax = sns.countplot(split,data=dataset,label='counts')  ","bfbfdd3c":"g = dataset.Gender\nmale,female = g.value_counts()\nprint('male :',male)\nprint('female :',female)\nax = sns.countplot(g,data=dataset,label='counts') ","1dd1f996":"plt.figure(figsize=(8,5))\nax = sns.countplot(x='Gender',hue='Loan_Status',data=dataset)\nplt.show()\n\n## It is clear that this feature does not have a specific pattern\n## Not Pattern","ae0bf633":"m = dataset.Married\nmarried,not_married = m.value_counts()\nprint('married :', married)\nprint('not_married :', not_married)\nax = sns.countplot(m,data= dataset,label='counts')","eebd37bc":"plt.figure(figsize=(8,5))\nax = sns.countplot(x='Married',hue='Loan_Status',data=dataset)\nplt.show()\n\n# Good Feature ","d649a056":"ed = dataset.Education\neducation,not_education = ed.value_counts()\nprint('education :', education)\nprint('not_education :', not_education)\nax = sns.countplot(ed,data= dataset,label='counts')","e2e3767f":"plt.figure(figsize=(8,5))\nax = sns.countplot(x='Education',hue='Loan_Status',data=dataset)\nplt.show()\n\n# Not Pattern","30b5f974":"plt.figure(figsize=(15,5))\nsns.countplot(x='Credit_History', hue='Loan_Status', data=dataset);\n\n# important feature","9e9746a0":"plt.figure(figsize=(15,5))\nsns.countplot(x='Property_Area', hue='Loan_Status', data=dataset)\n\n# important feature","017dc2d5":"sns.pairplot(dataset,hue='Loan_Status')","0a77aee4":"dataset.var()","3eb76a63":"dataset.std()","49f3ffea":"dataset.corr()","ae049356":"sns.heatmap(dataset.corr(),annot=True)","aefa96ab":"dataset.corr()['ApplicantIncome']","8fa9df3b":"dataset.corr()['ApplicantIncome'].plot(kind='bar')","2975e624":"dataset.isnull().sum()","095a81b2":"import missingno as msngo\nmsngo.bar(dataset,figsize=(8,5))","3eade4a3":"import statistics\ndataset['Gender'] = dataset['Gender'].replace(np.nan,statistics.mode(dataset[\"Gender\"]))\ndataset['Married'] = dataset['Married'].replace(np.nan,statistics.mode(dataset[\"Married\"]))\ndataset['Dependents'] = dataset['Dependents'].replace(np.nan,statistics.mode(dataset[\"Dependents\"]))\ndataset['Self_Employed'] = dataset['Self_Employed'].replace(np.nan,statistics.mode(dataset[\"Self_Employed\"]))\ndataset['Credit_History'] = dataset['Credit_History'].replace(np.nan,statistics.mode(dataset[\"Credit_History\"]))\n\ndataset['LoanAmount'] = dataset['LoanAmount'].replace(np.nan,dataset['LoanAmount'].median())\ndataset['Loan_Amount_Term'] = dataset['Loan_Amount_Term'].replace(np.nan,dataset['Loan_Amount_Term'].median())","aa77f975":"num = dataset.select_dtypes('number').columns.to_list()\ncat = dataset.select_dtypes('object').columns.to_list()\nloan_num =  dataset[num]\nloan_cat =  dataset[cat]\n\nprint('numerical columns:')\nfor cols in loan_num.columns:\n  print(cols)\n\nprint('********************************************************************** ')\n\nprint('categorical columns: ')\nfor cols2 in loan_cat.columns:\n  print(cols2)","40a55c55":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ndataset['Gender'] = dataset['Gender'].map({'Male':1,'Female':0}) \ndataset['Married'] = dataset['Married'].map({'Yes':1,'No':0}) \ndataset['Education'] = dataset['Education'].map({'Graduate':1,'Not Graduate':0}) \ndataset['Self_Employed'] = dataset['Self_Employed'].map({'Yes':1,'No':0}) \ndataset['Loan_Status'] = dataset['Loan_Status'].map({'Y':1,'N':0}) \ndataset['Property_Area'] = dataset['Property_Area'].map({'Rural':0,'Urban':1,'Semiurban':2}) \n\ndataset['Dependents'] = le.fit_transform(dataset['Dependents'])","4c97ed99":"dataset = pd.concat([dataset, pd.get_dummies(dataset['Dependents'], prefix='Dependents')], axis=1)\ndataset = pd.concat([dataset, pd.get_dummies(dataset['Property_Area'], prefix='Property_Area')], axis=1)","243853b5":"dataset.drop(['Dependents','Property_Area'],axis=1,inplace=True)","651b1b59":"y = dataset['Loan_Status'].values\ndataset = dataset.drop('Loan_Status',axis=1,inplace=False)\nX = dataset.values","faf45d8c":"y=np.reshape(y,(y.shape[0],1))","2b1344d6":"print(X.shape)\nprint(y.shape)","d0421be4":"from sklearn.feature_selection import SelectPercentile\nfrom sklearn.feature_selection import chi2\nprint('X Shape :',X.shape)\nFeatureSelection = SelectPercentile(score_func = chi2,percentile=60)\nX = FeatureSelection.fit_transform(X,y)\nprint('X Shape :',X.shape)\nprint('Feature Selected',FeatureSelection.get_support())","7a06f528":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)\nprint(X[:6,:])","bcd63974":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=22)\nprint('X_Train')\nprint(X_train[:3,:])\nprint('****************************')\nprint('X_test')\nprint(X_test[:3,:])\nprint(X_test.shape)\nprint('****************************')\nprint('Y_train')\nprint(y_train[:3,:])\nprint('****************************')\nprint('Y_test')\nprint(y_test[:3,:])","81995300":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\n\n\nlg=LogisticRegression(random_state=22)\nCrossValidateValues = cross_validate(lg,X_train,y_train,cv=6,return_train_score = True)\n# Showing Results\nprint('Train Score Value : ', CrossValidateValues['train_score'])\nprint('Test Score Value : ', CrossValidateValues['test_score'])\nprint('-----------------------------------------------------------------------------------')\n\n# Showing Results\nscore_train = cross_val_score(estimator = lg, X = X_train, y = y_train, cv = 6)\nprint(\"Cross validation Score is\",np.mean(score_train)*100)","a3292c3e":"lg.fit(X_train,y_train)","5000236e":"y_pred_LR=lg.predict(X_test)\nprint('Y Test   : ',y_test[:5,:].ravel())\nprint('Y Predict :',y_pred_LR[:5])","d5d48964":"from sklearn.metrics import accuracy_score\naccuracy_lg=accuracy_score(y_test,y_pred_LR)\nprint(accuracy_lg)","9d80ee2a":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred_LR)\nprint(cm)\nsns.heatmap(cm,center=True,annot=True)\nplt.show","d04d04d7":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred_LR)\nprint(cr)","892dc319":"from sklearn.metrics import roc_curve,auc\nLR_tpr,LR_fpr,threshold=roc_curve(y_test,y_pred_LR)\nLR_auc = auc(LR_tpr, LR_fpr)\nprint('LR_tpr: ',LR_tpr)\nprint('LR_fpr: ',LR_fpr)\nprint('threshold: ',threshold)\n\n#Draw ROC Curve && AUC [Area Under The Curve]\nplt.figure(figsize=(9, 8))\nplt.plot(LR_tpr, LR_fpr, marker='o', label='Logistic Regression (auc = %0.3f)' % LR_auc)\nplt.ylabel('True Positive Rate -->')\nplt.xlabel('False Positive Rate -->')\n\nplt.legend()\n\nplt.show()","3e452e01":"from sklearn.svm import SVC\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\n\ns_v_c = SVC(C = 1, kernel='rbf' , random_state=22)\nCrossValidateValues_svc = cross_validate(s_v_c,X_train,y_train,cv=8,return_train_score = True)\n\n# Showing Results\nprint('train Score Value : ', CrossValidateValues_svc['train_score'])\nprint('Test Score Value : ', CrossValidateValues_svc['test_score'])\n#print('\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/')\n\n# Showing Results\nscore2_train = cross_val_score(estimator = s_v_c, X = X_train, y = y_train, cv = 8)\nprint(\"Cross validation is\",np.mean(score2_train)*100)","1bb56ffb":"s_v_c.fit(X_train,y_train)","ec6f07b5":"y_pred_svc=s_v_c.predict(X_test)\nprint('Y Test: ',y_test[:5,:])\nprint('Y Predict: ,',y_pred_svc[:5,])","1dfee85d":"from sklearn.metrics import accuracy_score\naccuracy_s=accuracy_score(y_test,y_pred_svc)\nprint(accuracy_s)","fbec6f03":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred_svc)\nprint(cm)\nplt.figure(figsize=(9,5))\nsns.heatmap(cm,center=True,annot=True)\nplt.show()","c9ecb6d8":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred_svc)\nprint(cr)","c38b8521":"from sklearn.metrics import roc_curve,auc\nsvm_tpr,svm_fpr,threshold=roc_curve(y_test,y_pred_svc)\nsvm_auc=auc(svm_tpr,svm_fpr)\nprint('svm_tpr',svm_tpr)\nprint('svm_fpr',svm_fpr)\nprint('threshold',threshold)\n\n\n#Draw ROC Curve && AUC [Area Under The Curve]\nplt.figure(figsize=(9, 5))\nplt.plot(svm_tpr, svm_fpr, linestyle=':', label='SVM (auc = %0.3f)' % svm_auc)\n\nplt.xlabel('False Positive Rate -->')\nplt.ylabel('True Positive Rate -->')\n\nplt.legend()\n\nplt.show()","be9ab54b":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\n\nknn = KNeighborsClassifier(n_neighbors = 15,weights='uniform')\nCrossValidateValues_knn = cross_validate(knn,X_train,y_train,cv = 6,return_train_score = True) \n\nprint('train Score Value : ', CrossValidateValues_knn['train_score'])\nprint('Test Score Value : ', CrossValidateValues_knn['test_score'])\n\n\n# Showing Results\n\n# Showing Results\nscore3_train = cross_val_score(estimator = knn, X = X_train, y = y_train, cv = 6)\nprint(\"Cross validation is\",np.mean(score3_train)*100)\n","72de2758":"knn.fit(X_train,y_train)","2db36643":"y_pred_knn=knn.predict(X_test)\nprint('Y Test:',y_test[:5,:])\nprint('Y Predict:',y_pred_knn[:5,])","286efb25":"from sklearn.metrics import accuracy_score\naccuracy_knn=accuracy_score(y_test,y_pred_knn)\nprint('Accuracy Score:',accuracy_knn)","5b0701ed":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred_knn)\nprint(cm)\nplt.figure(figsize=(9,5))\nsns.heatmap(cm,center=True,annot=True)\nplt.show()","f89692d2":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred_knn)\nprint(cr)","a2f336d0":"from sklearn.metrics import roc_curve,auc\nknn_tpr,knn_fpr,threshold=roc_curve(y_test,y_pred_knn)\nknn_auc=auc(knn_tpr,knn_fpr)\nprint('knn_tpr',knn_tpr)\nprint('knn_fpr',knn_fpr)\nprint('threhold',threshold)\n\nplt.figure(figsize=(9,5))\nplt.plot(knn_tpr,knn_fpr,linestyle='-', label='KNN (auc = %0.3f)' % knn_auc)\n\nplt.xlabel('False Positive Rate -->')\nplt.ylabel('True Positive Rate -->')\n\nplt.legend()\n\nplt.show()","e94f0eea":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\n\ndt=DecisionTreeClassifier(criterion = 'gini',random_state=22,max_depth=3)\nCrossValidateValues_dt = cross_validate(dt,X_train,y_train,cv =6,return_train_score = True) \n\nprint('train Score Value : ', CrossValidateValues_dt['train_score'])\nprint('Test Score Value : ', CrossValidateValues_dt['test_score'])\n\n#print('\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/')\n\n# Showing Results\n\n# Showing Results\nscore4_train = cross_val_score(estimator = dt, X = X_train, y = y_train, cv = 6)\nprint(\"Cross validation is\",np.mean(score4_train)*100)","a3596090":"dt.fit(X_train,y_train)","229d1314":"y_pred_dt=dt.predict(X_test)\nprint('Y Test: ',y_test[:5,:])\nprint('Y Pred',y_pred_dt[:5,])","bbe881db":"from sklearn.metrics import accuracy_score\naccuracy_dt=accuracy_score(y_test,y_pred_dt)\nprint('Accuracy Score',accuracy_dt)","4c566974":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred_dt)\nprint(cm)\nplt.figure(figsize=(9,5))\nsns.heatmap(cm,center=True,annot=True)\nplt.show()","20ad8272":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred_dt)\nprint(cr)","8617e415":"from sklearn.metrics import roc_curve,auc\ndt_tpr,dt_fpr,threshold=roc_curve(y_test,y_pred_dt)\ndt_auc=auc(dt_tpr,dt_fpr)\nprint('dt_tpr Value  : ', dt_tpr)\nprint('dt_fpr Value  : ', dt_fpr)\nprint('thresholds Value  : ', threshold)\n\n#Draw ROC Curve && AUC [Area Under The Curve]\n\nplt.figure(figsize=(5, 5), dpi=100)\nplt.plot(dt_tpr, dt_fpr, linestyle='--', label='DecisionTree (auc = %0.3f)' % dt_auc)\n\nplt.xlabel('True Positive Rate -->')\nplt.ylabel('False Positive Rate -->')\n\nplt.legend()\nplt.show()","14512a7d":"from sklearn.ensemble import RandomForestClassifier \nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\n\nrf=RandomForestClassifier(criterion = 'entropy',random_state=22,max_depth=3,n_estimators = 100)\nCrossValidateValues_rf = cross_validate(rf,X_train,y_train,cv = 6,return_train_score = True) \n\nprint('train Score Value : ', CrossValidateValues_rf['train_score'])\nprint('Test Score Value : ', CrossValidateValues_rf['test_score'])\n\n#print('\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/')\n\n# Showing Results\n\n# Showing Results\nscore5_train = cross_val_score(estimator =rf, X = X_train, y = y_train, cv = 6)\nprint(\"Cross validation is\",np.mean(score5_train)*100)","87b074f7":"rf.fit(X_train,y_train)","49bde45f":"y_pred_rf=rf.predict(X_test)\nprint('Y Test: ',y_test[:5,:])\nprint('Y Pred',y_pred_rf[:5,])","62d6ea1f":"from sklearn.metrics import accuracy_score\naccuracy_rf=accuracy_score(y_test,y_pred_rf)\nprint('Accuracy Score',accuracy_rf)","5c78be06":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred_rf)\nprint(cm)\nplt.figure(figsize=(9,5))\nsns.heatmap(cm,center=True,annot=True)\nplt.show()","7e80b4fa":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred_rf)\nprint(cr)","798665d5":"from sklearn.metrics import roc_curve,auc\nrf_tpr,rf_fpr,threshold=roc_curve(y_test,y_pred_rf)\nrf_auc=auc(rf_tpr,rf_fpr)\nprint('rf_tpr Value  : ', rf_tpr)\nprint('rf_fpr Value  : ', rf_fpr)\nprint('thresholds Value  : ', threshold)\n\n#Draw ROC Curve && AUC [Area Under The Curve]\n\nplt.figure(figsize=(5, 5), dpi=100)\nplt.plot(rf_tpr, rf_fpr, linestyle='-', label='Random Force (auc = %0.3f)' % rf_auc)\n\nplt.xlabel('True Positive Rate -->')\nplt.ylabel('False Positive Rate -->')\n\nplt.legend()\nplt.show()","a3163bfe":"from sklearn.naive_bayes import BernoulliNB\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\n\nNB=BernoulliNB()\nCrossValidateValues_nb = cross_validate(NB,X_train,y_train,cv = 5,return_train_score = True) \n\nprint('train Score Value : ', CrossValidateValues_nb['train_score'])\nprint('Test Score Value : ', CrossValidateValues_nb['test_score'])\n\n#print('\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/')\n\n# Showing Results\n\n# Showing Results\nscore6_train = cross_val_score(estimator =NB, X = X_train, y = y_train, cv = 6)\nprint(\"Cross validation is\",np.mean(score6_train)*100)","cf783cee":"NB.fit(X_train,y_train)","c4aca4c6":"y_pred_NB = NB.predict(X_test)\ny_pred_prob = NB.predict_proba(X_test)\ny_pred_prob=y_pred_prob.astype(int)\nprint('Y Test \\n' ,y_test[:10,:])\nprint('Predicted Value for BernoulliNBModel is :\\n ' , y_pred_NB[:10,])\nprint('Prediction Probabilities Value for BernoulliNBModel is : \\n' , y_pred_prob[:10,:])","28ff45b9":"from sklearn.metrics import accuracy_score\naccuracy_nb=accuracy_score(y_test,y_pred_NB)\nprint(accuracy_nb)","0d8ee87e":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred_NB)\nprint(cm)\nplt.figure(figsize=(9,5))\nsns.heatmap(cm,center=True,annot=True)\nplt.show()","aa2cd3e6":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred_NB)\nprint(cr)","15dc1cbb":"from sklearn.metrics import roc_curve,auc\nnb_tpr,nb_fpr,threshold=roc_curve(y_test,y_pred_NB)\nnb_auc=auc(nb_tpr,nb_fpr)\nprint('nb_tpr Value  : ', nb_tpr)\nprint('nb_fpr Value  : ', nb_fpr)\nprint('thresholds Value  : ', threshold)\n\n#Draw ROC Curve && AUC [Area Under The Curve]\n\nplt.figure(figsize=(5, 5), dpi=100)\nplt.plot(rf_tpr, rf_fpr, linestyle='-', label='Naive Basye (auc = %0.3f)' % nb_auc)\n\nplt.xlabel('True Positive Rate -->')\nplt.ylabel('False Positive Rate -->')\n\nplt.legend()\nplt.show()","6bdcff25":"from sklearn.metrics import roc_curve, auc\n\nLR_tpr,LR_fpr,threshold=roc_curve(y_test,y_pred_LR)\nLR_auc = auc(LR_tpr, LR_fpr)\n\nsvm_fpr, svm_tpr, threshold = roc_curve(y_test, y_pred_svc)\nauc_svm = auc(svm_fpr, svm_tpr)\n\nknn_fpr, knn_tpr, threshold = roc_curve(y_test, y_pred_knn)\nauc_knn = auc(knn_fpr, knn_tpr)\n\ndt_fpr, dt_tpr, threshold = roc_curve(y_test, y_pred_dt)\nauc_dt = auc(dt_fpr, dt_tpr)\n\nrf_fpr, rf_tpr, threshold = roc_curve(y_test, y_pred_rf)\nauc_rf = auc(rf_fpr, rf_tpr)\n\n\nnb_fpr, nb_tpr, threshold = roc_curve(y_test, y_pred_NB)\nauc_nb = auc(nb_fpr, nb_tpr)\n\nplt.figure(figsize=(9, 5))\nplt.plot(LR_tpr, LR_fpr, marker='o', label='Logistic Regression (auc = %0.3f)' % LR_auc)\nplt.plot(svm_fpr, svm_tpr, linestyle='--', label='SVM (auc = %0.3f)' % auc_svm)\nplt.plot(knn_fpr, knn_tpr, linestyle=':', label='KNN (auc = %0.3f)' % auc_knn)\nplt.plot(dt_fpr, dt_tpr, linestyle='-', label='DT (auc = %0.3f)' % auc_dt)\nplt.plot(rf_fpr, rf_tpr, linestyle='-', label='RF (auc = %0.3f)' % auc_rf)\nplt.plot(nb_fpr, nb_tpr, linestyle='--', label='NB (auc = %0.3f)' % auc_nb)\n\n\n\nplt.xlabel('False Positive Rate -->')\nplt.ylabel('True Positive Rate -->')\n\nplt.legend()","b64f1f83":"models = pd.DataFrame({\n    'Model': ['Logistic Regression','Support Vector Machines', 'KNN','Decision Tree', \n              'Random Forest', 'Naive Bayes'],\n    'Score': [accuracy_lg, accuracy_s, accuracy_knn, \n              accuracy_dt, accuracy_rf, accuracy_nb]})\nmodels.sort_values(by='Score', ascending=False)","90f4c3ec":" A financing company that deals in all real estate loans. They have a presence in all urban, semi-urban and rural areas. The customer first applies for a housing loan after the company verifies the customer's eligibility for the loan.","d22505f1":"**What is mean Data Pre-processing ? and why you use it?**","7dfc757b":"**The Algorithms used in the Project : -**\n\n\n\n\n1.   Logistic Regression\n2.   Support Vector Machine [ SVM ]\n3.   K Nearest Neighbors [ KNN ]\n4.   Decision Tree\n5.   Random Force\n5.   Naive Bayes\n","ae06a61d":"# Project Name: Predict Loan Approval Problem\n\n---\n\n","d6f00140":"> Show us how spread out the data is about their mean","13555b3d":"\n\n> Drop Unless Columns\n\n","50f92aa5":"\n\n> Importing The Dataset\n\n","7bb4c560":"1-Importing The Libraries\n\n2-Importing The Dataset\n\n3-Missing Data\n\n4-Encoding categorical data\n\n5-Feature Selection\n\n6-Feature Scaling\n\n7-Splitting the dataset into the Training set and Test set","7742ef5c":"> Feature Selection","54918847":">  First of all, we must work to show and understand the data correctly before entering it into the machine learning model","bcef3700":"**What are the Data Pre-processing steps?**","d61fd804":"1- An introduction to the possibility of accepting or rejecting the loan\n\n","b7bb08d7":"> Missing Dataset","72939ff1":"**Compare all the algorithm of the AUC**","0eb22032":"\n\n> Importing The Libraries\n\n","dd75dcf3":"> Encoding categorical data","819d431a":"There are other things that you should know :-\n\nVariance in data\nCorrelation in data","bc417f2f":"Data Pre-processing it is one of the most important steps data mining.The way you collect data is often controlled incorrectly, result out of range for example: income= -100 , or impossible data for example: gender:male -> prednant:yes , or missing data. Analyzing data that has not been examined carefully can lead to misleading or illogical results. If a lot of data is irrelevant or unorganized. discovered during training take large amount of processing time so we uesd data preprocessing","98943052":"In the beginning I will talk about the Introduction to Possibility of loan approval \nSecond, we will explain what it is Data Preprocessing and why you use it ? and what are the Data Preprocessing steps?\nFinally, we will talk about the algorithms used in the project","08e53ee5":"> Correlation In Data","f4c3349c":"**Evaluation Classification Methods Performance : - [ Metrics Model ]**\n1. Confusion Matrix\n2. Classification Report\n  - Recall \n  - Precision\n  - F1 Score\n3. ROC Curve && AUC [ Area Under The Curve ]","f8a13e8b":"\n\n> Simple look on the data\n\n"}}