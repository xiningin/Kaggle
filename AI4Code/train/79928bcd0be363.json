{"cell_type":{"334cbb26":"code","6d6ae28f":"code","dd853dba":"code","d2041d18":"code","0a89a241":"code","99dac4c1":"code","f623f5a2":"code","9a9229a2":"code","7a54cb07":"code","6a1934c4":"code","6417577a":"code","07f81df6":"code","2b305cf2":"code","bd61ea29":"code","0837b0fc":"code","72378d3d":"code","03eb3065":"code","54cb7dc6":"code","78421f88":"code","3d1c4d55":"markdown","a7df98ef":"markdown","f5835fe2":"markdown","d22fc835":"markdown","6ecaaee4":"markdown","a12935f9":"markdown","aecaba7a":"markdown","111b9119":"markdown","b66a0d15":"markdown","b4aa41ac":"markdown","a20fff71":"markdown","3f3884e3":"markdown"},"source":{"334cbb26":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os, time, math, random\nimport seaborn as sns","6d6ae28f":"# Commenting out unnecessary inputs...\n\n    \n### Data inputs:\n## World Inequality Database on Education (WIDE): WIDE_2019-01-23.csv; Description: WIDE_metadata_2019-01-22.csv\n!wget https:\/\/us-east-1-unesco-wide.s3.amazonaws.com\/WIDE_2019-01-23.csv -q --show-progress\n!wget https:\/\/us-east-1-unesco-wide.s3.amazonaws.com\/WIDE_metadata_2019-01-22.csv -q --show-progress\n    \n### NOT USED-------------------------------\n# Digital agenda scorecard: digital-agenda-scoreboard-key-indicators.csv\n\n\"\"\"!wget https:\/\/digital-agenda-data.eu\/download\/digital-agenda-scoreboard-key-indicators.csv.zip\n#!unzip digital-agenda-scoreboard-key-indicators.csv.zip\"\"\"\n\n# Global education statistics: ..\/input\/global-education-statistics","dd853dba":"import pandas as pd\n# Database includes differences in reading, math, and science levels for each wealth, sex, and ethnic demographic in every nation.\npd.read_csv('WIDE_2019-01-23.csv')\n# Notice the myriad missing values; analysis code later will automatically select rows without empty values.","d2041d18":"WIDE = pd.read_csv('WIDE_2019-01-23.csv')\nprint(\"Num_vals_total:\", len(WIDE))\nprint(\"Differences:\\n\",set(WIDE['category']))","0a89a241":"# Hyperparams\nimport scipy\nfrom scipy import stats\nwide = WIDE.copy()\nYEAR = 2015\nEXPLORED_DIFFERENCE = 'Wealth'\nwide = wide[wide['year'] == YEAR]\nwide = wide[wide['category'] == EXPLORED_DIFFERENCE]\nprint(\"Number of distinct groups analyzed: \",len(wide))\nnations = set(wide['country'])\n\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=RuntimeWarning) \n\nnation_inequalities = {}\nfor nation in nations:\n    #print(nation)\n    subset_wide = wide[wide['country'] == nation].copy()\n    divisions = [subset_wide[subset_wide['survey'] == survey] for survey in set(subset_wide['survey'])]\n    #if nation == 'Colombia':\n        #break\n        #print([survey for survey in subset_wide['survey']])\n    gross_inequality = []\n    for division in divisions:\n        #scipy.stats.variation()\n        n_subset_wide = division.dropna(axis=1).select_dtypes(exclude='object').drop(['year'],axis=1)\n        if len(n_subset_wide.columns) > 0:\n            for indicator in n_subset_wide:\n                if pd.isnull(scipy.stats.variation(n_subset_wide[indicator])): # drop Nan values\n                    continue\n                \n                # PICK ONLY MEAN ACADEMIC SCORE INDICATORS!\n                if \"_m\" in indicator: \n                    gross_inequality.append(scipy.stats.variation(n_subset_wide[indicator]))\n            #print(\"Gross Inequality: \",gross_inequality)\n    if len(gross_inequality) > 0: gross_inequality = np.mean(gross_inequality)\n    #print(gross_inequality)\n    nation_inequalities[nation] = gross_inequality","99dac4c1":"sorted_nation_inequalities = {k: v for k, v in sorted(nation_inequalities.items(), key=lambda item: item[1], reverse=True)}\ninverse_sorted_nation_inequalities = {k: v for k, v in sorted(nation_inequalities.items(), key=lambda item: item[1])}\nsorted_nation_inequalities","f623f5a2":"x, y = list(inverse_sorted_nation_inequalities.keys()), list(inverse_sorted_nation_inequalities.values())\nfig, ax = plt.subplots(figsize=(10,15))\nplt.title(\"Gross Inequality By Nation -- Which countries are most equal? (Inequality by Wealth)\\n (Smaller values = Less Inequality)\")\nplt.ylabel(\"Nation\")\nplt.xlabel(\"Gross Inequality Index\")\nsns.barplot(x=y,y=x, ax=ax, orient='h')\nplt.savefig('gross_inequality_by_nation.png', dpi=800)\nplt.show()","9a9229a2":"import scipy\nwide = WIDE.copy()\nYEAR = 2015\nEXPLORED_DIFFERENCE = 'Wealth'\nnation_to_explore = 'Dominican Rep.'\nwide = wide[wide['year'] == YEAR]\nwide = wide[wide['category'] == EXPLORED_DIFFERENCE]\nwide = wide[wide['country'] == nation_to_explore]\n#scipy.stats.variation()\nwide = wide[wide['survey'] == 'PISA']\nwide.dropna(axis=1)\ngross_inequality = []\nsubset_wide =  wide.dropna(axis=1).select_dtypes(exclude='object').drop(['year'],axis=1)\nfor indicator in subset_wide:\n    if pd.isnull(scipy.stats.variation(subset_wide[indicator])): \n        #print(scipy.stats.variation(subset_wide[indicator]).dtype)\n        continue\n    if \"_m\" in indicator:\n        #print(indicator, scipy.stats.variation(subset_wide[indicator]))\n        gross_inequality.append(scipy.stats.variation(subset_wide[indicator]))\n        #print(wide['Wealth'],subset_wide[indicator])\n        splot = sns.barplot(x=[1,2,3,4,5],y=subset_wide[indicator])\n        plt.title(\"Dominican Republic Student performance on \"+indicator+\" by income quintile.\")\n        plt.xlabel('Quintile'); plt.ylabel('Percentage reaching standard.')\n        for p in splot.patches: # Annotate bars\n            splot.annotate(format(p.get_height(), '.3f'), \n                           (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                           ha = 'center', va = 'center', \n                           xytext = (0, 9), \n                           textcoords = 'offset points')\n        plt.show()\n#print(scipy.stats.variation(subset_wide[indicator]))\nif len(gross_inequality) > 0:\n    gross_inequality = np.mean(gross_inequality)\nprint(\"Gross Inequality:\",gross_inequality)","7a54cb07":"import scipy\nwide = WIDE.copy()\nYEAR = 2015\nEXPLORED_DIFFERENCE = 'Wealth'\nnation_to_explore = 'Macao, China'\nwide = wide[wide['year'] == YEAR]\nwide = wide[wide['category'] == EXPLORED_DIFFERENCE]\nwide = wide[wide['country'] == nation_to_explore]\n#scipy.stats.variation()\nwide = wide[wide['survey'] == 'PISA']\nwide.dropna(axis=1)\ngross_inequality = []\nsubset_wide =  wide.dropna(axis=1).select_dtypes(exclude='object').drop(['year'],axis=1)\nfor indicator in subset_wide:\n    if pd.isnull(scipy.stats.variation(subset_wide[indicator])): \n        #print(scipy.stats.variation(subset_wide[indicator]).dtype)\n        continue\n    if \"_m\" in indicator:\n        gross_inequality.append(scipy.stats.variation(subset_wide[indicator]))\n        splot = sns.barplot(x=[1,2,3,4,5],y=subset_wide[indicator])\n        plt.title(\"Macao Student performance on \"+indicator+\" by income quintile.\")\n        plt.xlabel('Quintile'); plt.ylabel('Percentage reaching standard.')\n        for p in splot.patches: # Annotate bars\n            splot.annotate(format(p.get_height(), '.3f'), \n                           (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                           ha = 'center', va = 'center', \n                           xytext = (0, 9), \n                           textcoords = 'offset points')\n        plt.savefig(\"Macao_Student_performance_on_\"+indicator+\"_by_income_quintile.png\", dpi=800)\n        plt.show()\n#print(scipy.stats.variation(subset_wide[indicator]))\nif len(gross_inequality) > 0:\n    gross_inequality = np.mean(gross_inequality)\nprint(gross_inequality)","6a1934c4":"import scipy\nwide = WIDE.copy()\nYEAR = 2015\nEXPLORED_DIFFERENCE = 'Wealth'\nnation_to_explore = 'United States'\nwide = wide[wide['year'] == YEAR]\nwide = wide[wide['category'] == EXPLORED_DIFFERENCE]\nwide = wide[wide['country'] == nation_to_explore]\n#scipy.stats.variation()\nwide = wide[wide['survey'] == 'PISA']\nwide.dropna(axis=1)\ngross_inequality = []\nsubset_wide =  wide.dropna(axis=1).select_dtypes(exclude='object').drop(['year'],axis=1)\nfor indicator in subset_wide:\n    if pd.isnull(scipy.stats.variation(subset_wide[indicator])): \n        #print(scipy.stats.variation(subset_wide[indicator]).dtype)\n        continue\n    if \"_m\" in indicator:\n        print(indicator, scipy.stats.variation(subset_wide[indicator]))\n        gross_inequality.append(scipy.stats.variation(subset_wide[indicator]))\n        print(wide['Wealth'],subset_wide[indicator])\n        sns.scatterplot(x=[1,2,3,4,5],y=subset_wide[indicator]); plt.show()\n#print(scipy.stats.variation(subset_wide[indicator]))\nif len(gross_inequality) > 0:\n    gross_inequality = np.mean(gross_inequality)\nprint(gross_inequality)","6417577a":"# Nations found in both WIDE and Pisa Datasets\n# We can only analyze these nations because the data for other nations are incomplete.\ncommon_nations = ['Slovenia',\n 'Sweden',\n 'Chile',\n 'Iceland',\n 'Estonia',\n 'Poland',\n 'New Zealand',\n 'Spain',\n 'Netherlands',\n 'United States',\n 'Greece',\n 'France',\n 'Belgium',\n 'Luxembourg',\n 'Lithuania',\n 'Canada',\n 'Finland',\n 'Ireland',\n 'Colombia',\n 'Australia',\n 'Italy',\n 'Germany',\n 'Israel',\n 'Mexico',\n 'Austria',\n 'Portugal',\n 'Latvia',\n 'Japan',\n 'Denmark',\n 'Turkey',\n 'Switzerland',\n 'Norway',\n 'Hungary']\nprint(\"Nations examined: \",len(common_nations))","07f81df6":"#xl = pd.ExcelFile('..\/input\/pisa02\/IDEExcelExport-Jan102021-0340AM.xls')\nxl = pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls')\n#xl = pd.ExcelFile('..\/input\/pisa04\/IDEExcelExport-Jan162021-0313AM.xls')\nprint(xl.sheet_names)  # see all sheet names\nR_THRESHOLD = 0.0\nVERBOSE = 0\nDROP_THRESHOLD = 5\n\ncorrelations_of_note = []\nfor sheet_name in xl.sheet_names:\n    whole_dataset = xl.parse(sheet_name)  # read a specific sheet to DataFrame\n    desc, year = whole_dataset.values[7,1], whole_dataset.values[11,1]\n    print(\"\",desc)\n    col1, col2 = whole_dataset.values[10,3], whole_dataset.values[10,4]\n    pisa = {}\n\n    pisa[col1] = whole_dataset.values[11:, 3]\n    pisa[col2] = whole_dataset.values[11:, 4]\n    pisa = pd.DataFrame(pisa)\n    pisa.index = whole_dataset.values[11:,2]\n    pisa = pisa.loc[common_nations]\n    \n    num_dropped = 0\n    for i in pisa.iloc:\n        try: \n            float(i['Average'])\n            float(i['Standard Error'])\n        except: \n            if VERBOSE: print('Dropping %s because of invalid data...'%i.name)\n            num_dropped += 1\n            pisa.drop(i.name, inplace=True)\n    if num_dropped > DROP_THRESHOLD: continue\n        \n    gross_inequalities, pisa_indicator = [],[]\n    for nation in pisa.index:\n        gross_inequalities.append(nation_inequalities[nation])\n        pisa_indicator.append(pisa['Average'].loc[nation])\n    \n    try: slope, intercept, r_value, p_value, std_err = scipy.stats.linregress(gross_inequalities, pisa_indicator)\n    except: print(pisa_indicator)\n    #print(r_value)\n    # Storing strong correlations in correlations_of_note.\n    if math.fabs(r_value) > R_THRESHOLD: correlations_of_note.append((gross_inequalities,pisa_indicator,desc, r_value, (slope, intercept)))","2b305cf2":"# Print correlations\n[print(corr[2], '\\n',corr[3]) for corr in correlations_of_note]\npass","bd61ea29":"# Visualizing correlations\nimport seaborn as sns\nfor gross_inequalities,pisa_indicator,desc, r_value, (slope, intercept) in correlations_of_note:\n    print(desc)\n    print(\"r-value:\", round(r_value,3))\n    print(\"Slope:\",round(slope,3)); print(\"Intercept:\",round(intercept,3))\n    sns.set(style=\"darkgrid\")\n    g = sns.jointplot(x=pisa_indicator, y=gross_inequalities,\n                      kind=\"reg\", truncate=False,\n                      color=\"m\", height=7)\n    plt.title(\"Linear Regression: GI Score vs PISA Indicator\")\n    plt.xlabel(desc)\n    plt.ylabel(\"GI (Gross Inequality) Score\")\n    plt.savefig(desc+'_plot.png', dpi=800, bbox_inches=\"tight\") # Save image as .png.\n    plt.show()\n    sns.residplot(x=pisa_indicator, y=gross_inequalities,color=\"m\")\n    plt.title(\"Residual plot: GI Score vs PISA Indicator\")\n    plt.xlabel(desc)\n    plt.ylabel(\"GI (Gross Inequality) Score\")\n    plt.savefig(desc+'_residual.png', dpi=800, bbox_inches=\"tight\")\n    plt.show()","0837b0fc":"# Reading data\n\nteacher_participation = pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls').sheet_names[8]\n\nbelonging = (pd.ExcelFile('..\/input\/pisa04\/IDEExcelExport-Jan162021-0313AM.xls'),pd.ExcelFile('..\/input\/pisa04\/IDEExcelExport-Jan162021-0313AM.xls').sheet_names[1])\nschool_size = (pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls'),pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls').sheet_names[2])\nclass_size = (pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls'),pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls').sheet_names[3])\nspecial_needs_proportion = (pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls'),pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls').sheet_names[4])\n\ncorrelations_of_note = []\n\nother_factors = [belonging, school_size, class_size, special_needs_proportion]\n\nteacher_ds = pd.ExcelFile('..\/input\/pisa03\/IDEExcelExport-Jan162021-0250AM.xls').parse(teacher_participation)  # read a specific sheet to DataFrame\ndesc, year = teacher_ds.values[7,1], teacher_ds.values[11,1]\n\ncol1, col2 = teacher_ds.values[10,3], teacher_ds.values[10,4]\nteacher_pisa = {}\n\n# Extracting data from excel dataframe:\nteacher_pisa[col1] = teacher_ds.values[11:, 3]\nteacher_pisa[col2] = teacher_ds.values[11:, 4]\nteacher_pisa = pd.DataFrame(teacher_pisa)\nteacher_pisa.index = teacher_ds.values[11:,2]\nteacher_pisa = teacher_pisa.loc[common_nations]\n\n# Drop malformed data\nnum_dropped = 0\nfor i in teacher_pisa.iloc:\n    try: \n        float(i['Average'])\n        float(i['Standard Error'])\n    except: \n        if VERBOSE: print('Dropping %s because of invalid data...'%i.name)\n        num_dropped += 1\n        pisa.drop(i.name, inplace=True)\n            \n# Doing same steps as above but for all factors other than teacher participation:\nfor f in other_factors:\n    sheet, factor = f[0],f[1]\n    whole_ds = sheet.parse(factor) \n    desc, year = whole_ds.values[7,1], whole_ds.values[11,1]\n    print(\"Parsing...\",desc)\n    col1, col2 = whole_ds.values[10,3], whole_ds.values[10,4]\n    pisa = {}\n\n    pisa[col1] = whole_ds.values[11:, 3]\n    pisa[col2] = whole_ds.values[11:, 4]\n    pisa = pd.DataFrame(pisa)\n    pisa.index = whole_ds.values[11:,2]\n    pisa = pisa.loc[common_nations]\n\n    num_dropped = 0\n    for i in pisa.iloc:\n        try: \n            float(i['Average'])\n            float(i['Standard Error'])\n        except: \n            if VERBOSE: print('Dropping %s because of invalid data...'%i.name)\n            num_dropped += 1\n            pisa.drop(i.name, inplace=True)\n\n    teacher_agency, pisa_indicator = [],[]\n    for nation in pisa.index:\n        teacher_agency.append(teacher_pisa['Average'].loc[nation])\n        pisa_indicator.append(pisa['Average'].loc[nation])\n\n    try: slope, intercept, r_value, p_value, std_err = scipy.stats.linregress(teacher_agency, pisa_indicator)\n    except: print(\"Error! \",pisa_indicator)\n    #print(r_value)\n    \n    # Store data for all strong correlations in correlations_of_note\n    if math.fabs(r_value) > R_THRESHOLD: correlations_of_note.append((teacher_agency,pisa_indicator,desc, r_value, (slope, intercept)))","72378d3d":"# Print pisa indicators and the r-value of their correlation w\/ teacher agency\n[print(corr[2], '\\n',corr[3]) for corr in correlations_of_note]\npass","03eb3065":"# Visualizing the correlations between Teacher Participation & other educational factors\n\nimport seaborn as sns\n\n# Fix for formatting super long axis titles\ndef nice_formatting(string):\n    reformatted_string = []\n    for index, word in enumerate(string.split(' ')):\n        reformatted_string.append(word)\n        if (index+1) % 8 == 0: reformatted_string.append('\\n')\n    return ' '.join(reformatted_string)\n    \nfor teacher_agency,pisa_indicator,desc, r_value, (slope, intercept) in correlations_of_note:\n    print(desc)\n    print(\"r-value:\", round(r_value,3))\n    print(\"Slope:\",round(slope,3)); print(\"Intercept:\",round(intercept,3))\n    sns.set(style=\"darkgrid\")\n    g = sns.jointplot(y=pisa_indicator, x=teacher_agency,\n                      kind=\"reg\", truncate=False,\n                      color=\"m\", height=7)\n    plt.title(\"Teacher Participation (PISA) vs additional PISA Indicator\")\n    plt.ylabel(nice_formatting(desc))\n    plt.xlabel(\"Teacher Participation Index\")\n    plt.savefig('teacher_participation_'+desc+'_plot.png', dpi=800, bbox_inches=\"tight\")\n    plt.show()\n    sns.residplot(y=pisa_indicator, x=teacher_agency,color=\"m\")\n    plt.title(\"Residual Plot: Teacher Participation (PISA) vs additional PISA Indicator\")\n    plt.ylabel(nice_formatting(desc))\n    plt.xlabel(\"Teacher Participation Index\")\n    plt.savefig('teacher_participation_'+desc+'_residual.png', dpi=800, bbox_inches=\"tight\")\n    plt.show()","54cb7dc6":"import pickle as pkl\nfh = open(\"correlations_of_note.pkl\", 'wb') \npkl.dump(correlations_of_note, fh)","78421f88":"import pickle as pkl\nwith open('correlations_of_note.pkl','rb') as fh:\n    n_correlations_of_note = pkl.load(fh)","3d1c4d55":"### Relating teacher participation index scores with other equity factors:","a7df98ef":"### Auxiliary functions\nStoring data...","f5835fe2":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/9\/9f\/Flag_of_the_Dominican_Republic.svg\/255px-Flag_of_the_Dominican_Republic.svg.png)\n### Case Study:\n1. The Dominican Republic, found to have the most educational inequality by wealth of any nation.\n>     - What makes it so unequal?\n>         - It seems that low educational quality overall is linked to high educational inequality. \n>         - In places where most schools are inadequate, the rich can afford to send their children to decent programs, while the poor cannot.","d22fc835":"Note: We're looking at 2015 Educational statistics while using laptop availability scores from 2015. This is to maximize the amount of data we have.\n\nPISA Indicators:\n```Measures: PISA Reading Scale: Overall Reading, PISA Mathematics Scale: Overall Mathematics, PISA Science Scale: Overall Science, Attitudes towards computers: Limitations, Attitudes towards computers: Tool for learning, Index use of ICT at school in general, Count ICT: Availability at home, Count ICT: Availability at school, Student-computer ratio: Portable computers, Index ICT as a topic in Social Interaction, Student-computer ratio: Computers for teachers with internect connection```","6ecaaee4":"### Finding correlations...","a12935f9":"Loading stored data...","aecaba7a":"## WIDE (World Inequality Database on Education)\n\n[Data Description](https:\/\/us-east-1-unesco-wide.s3.amazonaws.com\/About%20WIDE.pdf)","111b9119":"### Downloading data...\n\n#### **Sources**:\n- [World Inequality Database on Education (WIDE)](https:\/\/www.education-inequalities.org\/)\n![](http:\/\/www.oecd.org\/media\/oecdorg\/satellitesites\/pisa\/New%20web%20banner_1.png)\n- [OECD's Programme for International Student Assessment (PISA) Database](http:\/\/www.oecd.org\/pisa\/) \n![image.png](attachment:image.png)","b66a0d15":"## PISA Data\n\nUsing linear regression to find the correlation between PISA indicators and the Gross Inequality Index (calculated by taking the mean of academic performance variances between wealth brackets.)","b4aa41ac":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/6\/63\/Flag_of_Macau.svg\/255px-Flag_of_Macau.svg.png)\n### Case Study:\n\n2. Macao, China, found to have the most educational equality by wealth of any nation.\n>         - It seems that individuals perform well regardless of their wealth bracket. This points to an egalitarian education system that provides a high bottom line for even the worst-off learners.\n>         - The fact that most parents send their children to private schools in Macao probably means that quality education's relatively affordable there.","a20fff71":"### Graphing correlations (showing regression & residual plots)","3f3884e3":"### Poor people fall in lower quintiles."}}