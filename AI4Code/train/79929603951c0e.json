{"cell_type":{"dc0508e6":"code","0bfcb9ca":"code","213d7535":"code","147976c6":"code","218273e1":"code","4e737e71":"code","c228471a":"code","7de14866":"code","84f195b2":"code","c8bc9e6b":"code","7f04a0ff":"code","069c5feb":"code","64ff2dce":"code","beebf3d0":"code","f347c771":"code","6a37ba89":"code","48e27678":"code","e6dbe602":"code","01b260de":"code","61e8a7f1":"code","2a581479":"code","e4c46773":"code","e5e1eb56":"code","caf47f1e":"code","32c02d15":"code","dff7743b":"code","f5c72250":"code","a6b19cf3":"code","8a04e56d":"code","bee5e20d":"code","99ee3e67":"code","ad496f1c":"code","a1c444e2":"code","928735ac":"code","1ee0f1a6":"markdown"},"source":{"dc0508e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0bfcb9ca":"train_labels=pd.read_csv('..\/input\/data-science-bowl-2019\/train_labels.csv')\nlabels_map = dict(train_labels.groupby('title')['accuracy_group'].agg(lambda x:x.value_counts().index[0])) # get the mode\nlabels_map","213d7535":"import matplotlib.pylab as plt\n\ntest = pd.read_csv('..\/input\/data-science-bowl-2019\/test.csv')\ntest.groupby('installation_id') \\\n    .count()['event_id'] \\\n    .sort_values() \\\n    .plot(kind='bar',\n         figsize=(15, 5),\n         title='Count of Events for each install')\nplt.show()\n","147976c6":"\ntrain = pd.read_csv('..\/input\/data-science-bowl-2019\/train.csv')\n\ntrain_event_cnt=train.groupby('installation_id') \\\n    .count()['event_id'] \n \ntrain_event_cnt.head()","218273e1":"train_labels = pd.read_csv('..\/input\/data-science-bowl-2019\/train_labels.csv')","4e737e71":"train_labels.head()","c228471a":"df1=train_labels.merge(train_event_cnt, how='inner', on=None,  left_on='installation_id', right_index=True )\ndf1.head()","7de14866":"train_event_cnt.head()","84f195b2":"df1.groupby('accuracy_group').mean()","c8bc9e6b":"train_game_cnt=train[train.type=='Game'].groupby('installation_id') \\\n    .count()['event_id'] ","7f04a0ff":"train_game_cnt.head()","069c5feb":"df2=train_labels.merge(train_game_cnt, how='inner', on=None,  left_on='installation_id', right_index=True )\ndf2.head()","64ff2dce":"df2.groupby('accuracy_group').mean()","beebf3d0":"ax = df2[df2.accuracy_group==3]['event_id'].plot.hist(bins=12, alpha=0.5)","f347c771":"ax = df2[df2.accuracy_group==2]['event_id'].plot.hist(bins=12, alpha=0.5)","6a37ba89":"ax = df2[df2.accuracy_group==1]['event_id'].plot.hist(bins=12, alpha=0.5)","48e27678":"ax = df2[df2.accuracy_group==0]['event_id'].plot.hist(bins=12, alpha=0.5)","e6dbe602":"df2[df2.event_id<500].accuracy_group.mean()","01b260de":"df2[df2.event_id>500].accuracy_group.mean()","61e8a7f1":"df2[df2.event_id<100].accuracy_group.mean()","2a581479":"df2[df2.event_id<10].accuracy_group.mean()","e4c46773":"df2[df2.event_id>1000].accuracy_group.mean()","e5e1eb56":"df2.accuracy_group.mean()","caf47f1e":"submission = pd.read_csv('..\/input\/data-science-bowl-2019\/sample_submission.csv')\n\nsubmission['accuracy_group'] = test.groupby('installation_id').last()['title'].map(labels_map).reset_index(drop=True)\n","32c02d15":"submission.head()","dff7743b":"submission.shape","f5c72250":"test_game_cnt=test[test.type=='Game'].groupby('installation_id') \\\n    .count()['event_id'] ","a6b19cf3":"submission2=submission.merge(test_game_cnt, how='left', on=None,  left_on='installation_id', right_index=True )\nsubmission2.head()","8a04e56d":"def f(row):\n    if (row['event_id'] <10) & (row['accuracy_group']==3):\n        val = 2\n    else:\n        val = row['accuracy_group']\n    return val\n\nsubmission2['accuracy_group2'] = submission2.apply(f, axis=1)","bee5e20d":"\ndf3 = submission2.drop(['event_id', 'accuracy_group'], axis=1)\n\ndf3.rename(columns={\"accuracy_group2\": \"accuracy_group\"})\n\ndf3.head()","99ee3e67":"df3 = df3.rename(columns={\"accuracy_group2\": \"accuracy_group\"})\n","ad496f1c":"df3.head()","a1c444e2":"df3.shape","928735ac":"df3.to_csv('submission.csv', index=None)","1ee0f1a6":"This is based on https:\/\/www.kaggle.com\/mhviraf\/a-baseline-for-dsb-2019 for me to understand the data and the objective. I added one more step based on the assumption that if an install played games for fewer than 100 times they are less likely to get it right the first time. \n\nThis small step seems to improve the score marginally (or not lol)."}}