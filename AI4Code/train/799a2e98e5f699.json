{"cell_type":{"7a33b4aa":"code","067646bd":"code","d90b6512":"code","d164705e":"code","2243c277":"code","63e4a6c4":"code","507b627b":"code","7903cdd1":"code","a9281c9b":"code","c1444a08":"code","66fb0757":"code","804095b1":"code","e7c196bc":"code","6e79ff0c":"code","493511ac":"code","09f635e7":"code","9bdf158d":"code","b8605cbb":"code","b9ff3461":"code","98cc7be2":"code","56e4dbcc":"markdown","1650cc78":"markdown","1d494097":"markdown","d374cf79":"markdown","4863a597":"markdown","b213adcc":"markdown","7859c72a":"markdown","883178a9":"markdown","4fff1f01":"markdown","eca357c8":"markdown","3c375f0f":"markdown","92229cc3":"markdown","aa665fb0":"markdown","8134589d":"markdown","b05d9156":"markdown","489ec3e4":"markdown"},"source":{"7a33b4aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","067646bd":"data = pd.read_csv('\/kaggle\/input\/coursera-course-dataset\/coursea_data.csv')\n# Y\u00fckledi\u011fimiz veriyi inceleyelim\ndata.head()","d90b6512":"data.info()","d164705e":"data[\"course_rating\"] # Series\ndata[[\"course_rating\"]] # Data Frames","2243c277":"data = data.rename(columns = {'Unnamed: 0' : 'id'})\n# De\u011fi\u015fip de\u011fi\u015fmedi\u011fini kontrol edelim\ndata.head()","63e4a6c4":"# id kolonundaki say\u0131lar d\u00fczensiz \u015fekilde ilerledi\u011fi i\u00e7in  ba\u015fka bir dataframe \u00fczerinde \u00f6rnek olarak index de\u011fi\u015fikli\u011fi yapt\u0131k.\ndata_ornek = data.set_index('id')\n# Kontrol\ndata_ornek.head()","507b627b":"data.index.name = 'index_name'","7903cdd1":"data[['course_title','course_difficulty']].head()","a9281c9b":"# k\u00f6\u015feli parentez ile\ndata['course_title'][1]","c1444a08":"# loc ile \ndata.loc[1,['course_title']]","66fb0757":"data.loc[1:5,'course_title':'course_rating']","804095b1":"data.loc[5:1:-1,'course_title':'course_rating']","e7c196bc":"data.loc[1:10,'course_rating':]","6e79ff0c":"data_boolean = data.course_rating > 4.5\ndata[data_boolean]","493511ac":"first_filter = data.course_rating>4.5\nsecond_filter = data.course_Certificate_type == 'SPECIALIZATION'\nthird_filter = data.course_difficulty == 'Beginner'\ndata[first_filter & second_filter & third_filter].head(10)","09f635e7":"data[first_filter & second_filter & third_filter].course_title.head(10)","9bdf158d":"def minus_rating(x):\n    return x-1\n\ndata.course_rating.apply(minus_rating)","b8605cbb":"data.course_rating.apply(lambda n: n+1)","b9ff3461":"data_hierarchical_indexing = data.set_index(['course_rating','course_students_enrolled'])\ndata_hierarchical_indexing.head(10)","98cc7be2":"data.groupby('course_students_enrolled').course_rating.mean().head(10)","56e4dbcc":"Bir h\u00fccredeki veriyi \u00e7ekmek istedi\u011fimizde ise, a\u015fa\u011f\u0131daki 2 y\u00f6ntem de bize ayn\u0131 sonucu verecektir.","1650cc78":"## Transforming Data ##\n","1d494097":"## Hierarchical Indexing","d374cf79":"Peki filter sonucu gelen veride sadece belirli bir kolonu \u00e7ekmek istedi\u011fimizde ? ","4863a597":"Burada ise data i\u00e7erisindeki kolonlar\u0131 kullanarak indexleme i\u015flemini nas\u0131l yapaca\u011f\u0131m\u0131za bakal\u0131m. ","b213adcc":"## Filtering Data Frames\nData i\u00e7erisinde olu\u015fturaca\u011f\u0131m\u0131z filtreye uyan veriyi listeyelim.","7859c72a":"## Index kolonunu de\u011fi\u015ftirme\n\u0130lk yapaca\u011f\u0131m\u0131z i\u015flen 'Unnamed: 0' kolonumuzun ismini de\u011fi\u015ftirmek olacak.","883178a9":"\u00c7\u0131kan sonuca bakt\u0131\u011f\u0131m\u0131zda g\u00f6rd\u00fc\u011f\u00fcm\u00fcz gibi \u00f6nce veriyi 1. index de\u011feri '**course_rating**' e g\u00f6re grupland\u0131rd\u0131 ard\u0131ndan 2. index de\u011feri olan '**course_students_enrolled**' a g\u00f6re de bir i\u00e7 grupland\u0131rma yapt\u0131.","4fff1f01":"Index olarak kulland\u0131\u011f\u0131m\u0131z kolonun ad\u0131n\u0131 de\u011fi\u015ftirelim.","eca357c8":"Birden fazla filtre olu\u015fturup data \u00fczerinde kullanal\u0131m.","3c375f0f":"Birinci kolondan ba\u015flay\u0131p geri kalan b\u00fct\u00fcn kolonlar\u0131 listeleyelim.","92229cc3":"## Belirli verilere eri\u015fme\nSadece belirli kolonlar\u0131 \u00e7ekmek istedi\u011fimizde:","aa665fb0":"\u0130lk 5 veriyi tersten listeleyelim.","8134589d":"Elimizdeki **id** isimli kolonu **index** olarak kullanmak i\u00e7in: ","b05d9156":"## Slicing Data Frames\nTan\u0131mlad\u0131\u011f\u0131m\u0131z birinci kolon ile ikinci kolon aras\u0131ndaki ilk 5 veriyi listeleyelim.","489ec3e4":"## Categoricals and Groupby"}}