{"cell_type":{"7d48cbd2":"code","a86ed992":"code","ad0f08a7":"code","fb2aa054":"code","6e5aa65a":"code","d710be1c":"code","78d2aa31":"code","93a1a7b2":"code","6d3d53b4":"code","21eff854":"code","395b78b6":"code","7b52def2":"code","23842a92":"markdown","374ca630":"markdown","fe6832a2":"markdown","ef64a7c9":"markdown","34516a66":"markdown","978073da":"markdown","804dd633":"markdown","c863ae6f":"markdown","082ad4f6":"markdown","e767da21":"markdown"},"source":{"7d48cbd2":"\nimport numpy as np \nimport pandas as pd\nfrom sklearn import metrics\nimport lightgbm as lgb\nfrom xgboost import XGBRegressor\n\ntrain = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\n\ntrain_con = train.groupby(['Country\/Region']).sum()\n\ndaily = train_con.iloc[:,2:].copy()\n\ndaily = daily.sort_values(by=daily.columns[-1:].tolist(), ascending=False)\n\ndaily = daily[daily>400]\n\ndaily10 = daily.head(30)\ndaily10 = daily10.transpose()\n\ns = 7\ncase0 = daily10[:-s]\ncase7 = daily10[s:]\n\nR7 = (case7.values-case0)\/case0.values\n\nR7_x = R7.reset_index().drop(['index'],axis=1)\n\nfor col in R7_x:\n    x=R7[col].values\n    x = x[~np.isnan(x)]\n    R7_x[col]=np.nan\n    R7_x[col][:len(x)]=x\n    \n\ndaily10_x = daily10.reset_index().drop(['index'],axis=1)\n\nfor col in daily10_x:\n    x=daily10[col].values\n    x = x[~np.isnan(x)]\n    daily10_x[col]=np.nan\n    daily10_x[col][:len(x)]=x\n\n\ndaily10 = daily10_x.copy()\nR7 = R7_x.copy() \n\n\ndef com_model(N0,ra,rc,af0,aft,sep,na0):\n\n    rb=1-ra-rc\n    \n    Na = [na0]\n    Nb = [rb*N0]\n    Nc = [rc*N0]\n    \n    day = 100\n    for i in range(0,day):\n        if i >= sep:\n            af = af0*np.exp(-(i-sep)\/aft)\n        else:\n            af = af0\n        Na1 = Na[i]+ra*Nb[i]*(1+af)+ra*af*Nc[i]\n        Nb1 = Nb[i]*(1+af)*rb+rb*af*Nc[i]\n        Nc1 = Nb[i]*(1+af)*rc+Nc[i]*6\/7+rc*af*Nc[i]\n        \n        Na.append(Na1)\n        Nb.append(Nb1)\n        Nc.append(Nc1)\n    \n    Na = np.array(Na)\n    Nb = np.array(Nb)\n    Nc = np.array(Nc)\n    \n    total_NO = pd.DataFrame()\n    \n    total_NO['Na'] = Na\n    total_NO['Nb'] = Nb\n    total_NO['Nc'] = Nc\n    \n    s = 7\n    case0 = total_NO[:-s]\n    case7 = total_NO[s:]\n    \n    R7_model = (case7.values-case0)\/case0.values\n    return total_NO, R7_model\n\n\n\n\naaf1 = [1000.0, 0.18073303474021774, 0.6280982274084522, 5.71892473354724]\ndaily10_model, R7_model = com_model(aaf1[0],aaf1[1],0.25,aaf1[2],aaf1[3],3.5,433)\n\n\n\naaf2 = [1370.4678055543616, 0.1838035946577493, 0.478029454040578, 27.6993430169006]\ndaily10_model_2, R7_model_2 = com_model(aaf2[0],aaf2[1],0.25,aaf2[2],aaf2[3],8,453)\n\n#Germany\naaf3 = [865.2796397013346, 0.11261479700447499, 0.5390848997603882, 4.913298085389435]\ndaily10_model_3, R7_model_3 = com_model(aaf3[0],aaf3[1],0.25,aaf3[2],aaf3[3],10.5,482)\n\n\n#Spain\naaf5 = [1339.8537548059298, 0.19098358950663832, 0.7647970998427716, 10.865896088753793]\ndaily10_model_5, R7_model_5 = com_model(aaf5[0],aaf5[1],0.25,aaf5[2],aaf5[3],2.5,500)\n\n#France\naaf6 = [1805.3490537183832, 0.11822501182971824, 0.4469633683947488, 19.194623547613222]\ndaily10_model_6, R7_model_6 = com_model(aaf6[0],aaf6[1],0.25,aaf6[2],aaf6[3],5,656)\n\n#Japan\naaf7 = [2429.4807472136063, 0.03302756790866209, 0.1195843026300669, 8580.06536922646]\ndaily10_model_7, R7_model_7 = com_model(aaf7[0],aaf7[1],0.25,aaf7[2],aaf7[3],1.5,420)\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\n#plt.figure(0)\n","a86ed992":"daily10[['Korea, South','Italy','Germany']][:30].plot(style='o')\ndaily10_model['Na'][:30].plot(style='-',label='Korea_simulation')\ndaily10_model_2['Na'][:30].plot(style='-',label='Italy_simulation')\ndaily10_model_3['Na'][:30].plot(style='-',label='Germany_simulation')\n\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\nplt.legend()\n#plt.yscale('log')\nplt.show()\n\ndaily10[['Spain','France','Japan']][:30].plot(style='o')\ndaily10_model_5['Na'][:30].plot(style='-',label='Spian_simulation')\ndaily10_model_6['Na'][:30].plot(style='-',label='France_simulation')\ndaily10_model_7['Na'][:30].plot(style='-',label='Japan_simulation')\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\nplt.legend()\n#plt.yscale('log')\nplt.show()","ad0f08a7":"R7[['Korea, South','Italy','Germany']][:30].plot(style='o')\nR7_model['Na'][:30].plot(style='-',label='Korea_simulation')\nR7_model_2['Na'][:30].plot(style='-',label='Italy_simulation')\nR7_model_3['Na'][:30].plot(style='-',label='Germany_simulation')\nplt.xlabel('Time (Days)')\nplt.ylabel('R7')\nplt.legend()\n#plt.yscale('log')\nplt.show()\n\n\nR7[['Spain','France','Japan']][:30].plot(style='o')\nR7_model_5['Na'][:30].plot(style='-',label='Spian_simulation')\nR7_model_6['Na'][:30].plot(style='-',label='France_simulation')\nR7_model_7['Na'][:30].plot(style='-',label='Japan_simulation')\nplt.xlabel('Time (Days)')\nplt.ylabel('R7')\nplt.legend()\n#plt.yscale('log')\nplt.show()","fb2aa054":"\ndef com_model(N0,ra,rc,af0,aft,sep,na0,rca):\n\n    rb=1-ra-rc\n    \n    Na = [na0]\n    Nb = [rb*N0]\n    Nc = [rc*N0]\n    \n    day = 60\n    for i in range(0,day):\n        if i >= sep:\n            af = af0*np.exp(-(i-sep)\/aft)\n        else:\n            af = af0\n        Na1 = Na[i]+ra*Nb[i]*(1+af)+ra*af*Nc[i]+ra*Nc[i]*(1+af)*rca\/2\n        Nb1 = Nb[i]*(1+af)*rb+rb*af*Nc[i]\n        Nc1 = Nb[i]*(1+af)*rc+Nc[i]*6\/7+rc*af*Nc[i]-ra*Nc[i]*(1+af)*rca\/2\n        \n        Na.append(Na1)\n        Nb.append(Nb1)\n        Nc.append(Nc1)\n    \n    Na = np.array(Na)\n    Nb = np.array(Nb)\n    Nc = np.array(Nc)\n    \n    total_NO = pd.DataFrame()\n    \n    total_NO['Na'] = Na\n    total_NO['Nb'] = Nb\n    total_NO['Nc'] = Nc\n    \n    s = 7\n    case0 = total_NO[:-s]\n    case7 = total_NO[s:]\n    \n    R7_model = (case7.values-case0)\/case0.values\n    return total_NO, R7_model[['Na']]\n\ndaily10_model, R7_model = com_model(1500,0.14,0.25,0.5,20,7,0,0)\n\ndef take_data(daily_data):\n    daily_array_10 = [daily_data[10],daily_data[20],daily_data[30],daily_data[40],daily_data[50],daily_data[60]]\n    return np.array(daily_array_10).astype(int)\n\naa = take_data(daily10_model['Na'].values)\nfinal = pd.DataFrame()\nfinal['Demo']=aa","6e5aa65a":"\ndaily10_model.plot(style='-')\nplt.title('Demo: confirmed (Na), symptomatic (Nb), and asymptomatic (Nc)')\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\n#plt.yscale('log')\nplt.show()","d710be1c":"daily10_model, R7_model = com_model(1500,0.14,0.25,0.5,20,0,0,0)\ndaily10_model.plot(style='-')\nplt.title('Early shun down (at day 0)')\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\n#plt.yscale('log')\nplt.show()\n\naa = take_data(daily10_model['Na'].values)\nfinal['Early shun down']=aa","78d2aa31":"daily10_model, R7_model = com_model(1500,0.21,0.25,0.5,20,7,0,0)\ndaily10_model.plot(style='-')\nplt.title('50% increase in test rate')\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\n#plt.yscale('log')\nplt.show()\n\naa = take_data(daily10_model['Na'].values)\nfinal['50% increase in test rate']=aa","93a1a7b2":"daily10_model, R7_model = com_model(1500,0.14,0.25,0.5,20,7,0,1)\ndaily10_model.plot(style='-')\nplt.title('Try to find asymptomatic')\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\n#plt.yscale('log')\nplt.show()\n\naa = take_data(daily10_model['Na'].values)\nfinal['Try to find asymptomatic']=aa","6d3d53b4":"daily10_model, R7_model = com_model(1500,0.14,0.25,0.5,5,7,0,0)\ndaily10_model.plot(style='-')\nplt.title('Strict implementation of shut down')\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\n#plt.yscale('log')\nplt.show()\n\naa = take_data(daily10_model['Na'].values)\nfinal['Strict implementation of shut down']=aa","21eff854":"daily10_model, R7_model = com_model(1500,0.21,0.25,0.5,5,0,0,1)\ndaily10_model.plot(style='-')\nplt.title('All the above strategies')\nplt.xlabel('Time (Days)')\nplt.ylabel('Confirmed cases')\n#plt.yscale('log')\nplt.show()\n\naa = take_data(daily10_model['Na'].values)\nfinal['All the above strategies']=aa","395b78b6":"final.index = [10,20,30,40,50,60]\nfinal","7b52def2":"\nfinal_ratio = final.copy()\nfor col in final:\n    final_ratio[col] = final_ratio[col]\/final['Demo']\nfinal_ratio    ","23842a92":"**Ratio**","374ca630":"# Early shun down (at day 0)","fe6832a2":"# All the above strategies","ef64a7c9":"# Try to find asymptomatic\n*Suppose test rate is half of those with symptoms*","34516a66":"# SUMMARY\n\nThe table is the number of confirmed diagnoses for all the above strategies after 10, 20, 30, 40, 50, 60 days.\n\nI believe that the actual situation must be more complicated, but maybe this model can lead to some useful ideas. Let the disaster end soon.","978073da":"# **Next, I want to know the impact of various strategies on confirmed cases.**\n\nLet's take the average of Korean and Italian parameters to make a demo model.\n\ni.e. the initial case = 1500, test rate = 0.14, initial groth rate = 0.5, decay constant = 20, \n     and take 'shut down' at day 7\n\n# Demo","804dd633":"# **First, I used this model to simulate real cases (South Korea, Italy, Germany, Spain, France, and Japan).**\n\nFor the reliability of the model, the parameters need to coincide with \"Confirmed cases\" and \"R7\"\n\n,where R7 = (confirmed case at day 7-confirmed case at day 0) \/ confirmed case at day 0\n\n\nThe result looks like a good fit.\n\nSince I am not an expert in infectious diseases, I will not interpret the parameters too much here.","c863ae6f":"# 50% increase in test rate","082ad4f6":"# Strict implementation of shut down\n*decay constant = 5*\n\n*note: the value for fit with Korea' data is 5.7*","e767da21":"# COVID-19 _ A model for correation between confirmed number and mitigation\n\nHere, I would propose a simple model for understanding the correation between the total confirmed number and types of mitigation.\n\nIn this model, we classify infected people into three categories: confirmed (Na), symptomatic (Nb), and asymptomatic (Nc).\nFor a newly infected person, a certain percentage will be detected, and a certain percentage will not be detected immediately. Also, we assume that 25% is asymptomatic but has infectivity in the first seven days. \n\nWith daily changes, Na will no longer infect other people (diagnosed patients are properly isolated), and Nb and Nc will infect others with a percentage. In addition, Nb may show symptoms and be detected. Nc will not be detected but it will recover on its own and lose its infection.\n\nThere are two methods that can be taken. The first is to shut down (reduce people's contact) and the second is to increase the test rate.\n\n\n**In this model.**\n\n**When we use 'shut down,' the infection rate will change from a constant to an exponential decline.**\n\n**When we increase the test rate, we increase the proportion of infected people on the confirmed list.**\n\n\n"}}