{"cell_type":{"86edf8e4":"code","de28d54f":"code","206947b7":"code","5485941e":"code","3ed8b525":"code","d6c0f855":"code","ddfb9f81":"code","27ba3abe":"code","ab2711e1":"code","bbcde0ec":"code","39d24980":"code","9de4735b":"code","2b19d2b2":"code","8003264b":"code","61138b8a":"code","828f37f1":"code","198aa6f2":"code","c1a97ada":"code","df4ed331":"code","0dbb569b":"code","a5fb05ef":"code","b13d0ef3":"markdown","9e5d22c6":"markdown","c199f123":"markdown"},"source":{"86edf8e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","de28d54f":"# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","206947b7":"df = pd.read_csv(\"\/kaggle\/input\/voicegender\/voice.csv\")","5485941e":"df.head().T","3ed8b525":"df.columns","d6c0f855":"from IPython.core.display import HTML # permet d'afficher du code html dans jupyter\ndisplay(HTML(df.head(10).to_html()))","ddfb9f81":"df.shape","27ba3abe":"df.describe()","ab2711e1":"sns.pairplot(df, hue = \"label\")","bbcde0ec":"df['label'] = df['label'].map({\"male\":1, \"female\":0})","39d24980":"y = df['label'].values\nX = df.drop(['label'], axis=1).values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","9de4735b":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","2b19d2b2":"model = Sequential()\nmodel.add(Dense(1, activation=\"sigmoid\"))","8003264b":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","61138b8a":"train = model.fit(X_train , y_train , validation_data=(X_test,y_test), epochs=150, verbose=1)","828f37f1":"y_ann = model.predict(X_test).flatten()","198aa6f2":"for i in range(len(y_ann)):\n    if y_ann[i] > 0.5:\n        y_ann[i] = 1\n    else:\n        y_ann[i] = 0\n","c1a97ada":"accuracy_score(y_test, y_ann)","df4ed331":"confusion_matrix(y_test, y_ann)","0dbb569b":"def plot_scores(train) :\n    accuracy = train.history['accuracy']\n    val_accuracy = train.history['val_accuracy']\n    epochs = range(len(accuracy))\n    plt.plot(epochs, accuracy, 'b', label='Score apprentissage')\n    plt.plot(epochs, val_accuracy, 'r', label='Score validation')\n    plt.title('Scores')\n    plt.legend()\n    plt.show()","a5fb05ef":"plot_scores(train)","b13d0ef3":"# Deep Learning","9e5d22c6":"***Preparing data to be used***","c199f123":"# Visualisations"}}