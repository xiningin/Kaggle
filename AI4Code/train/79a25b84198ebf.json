{"cell_type":{"cde6fe4d":"code","7432a083":"code","eb1b4bb2":"code","bf91cfb1":"code","d7b1a71b":"code","e6d5a0ec":"code","0659e2f7":"code","86a8dc55":"code","47af4df6":"code","7ac8c7c1":"code","46d70f80":"code","42c035aa":"code","d6cb3223":"code","eebf35cc":"code","90eda237":"code","6ecaebdd":"code","8e08a0fe":"code","c712d0e6":"code","1af46261":"code","cab8c98b":"code","04f9ec29":"code","2a554913":"code","795048b6":"code","c1aaf9a0":"code","476b2835":"code","e4ff2fc5":"code","32dd0714":"code","ba178797":"code","667a118e":"code","608096bf":"code","c2030a2b":"code","7c7620a3":"markdown","e0215dcf":"markdown","51f6b045":"markdown","10dee0fa":"markdown","65d0aa83":"markdown","771bfbf9":"markdown","0c5b749d":"markdown"},"source":{"cde6fe4d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7432a083":"data = pd.read_csv('..\/input\/worldwide-deaths-by-risk-factors\/number-of-deaths-by-risk-factor.csv')\ndata","eb1b4bb2":"data.shape #Prints the rows and columns in the dataframe","bf91cfb1":"#Checking first n rows of the dataframe\ndata.head(7) # head() reads first n rows of the dataframe","d7b1a71b":"#Similarly we can read last n rows of the dataframe using tail()\n\ndata.tail(10)","e6d5a0ec":"#Lets check what all features\/columns we have in the dataframe\n\ndata.columns","0659e2f7":"#lets check what type of present in each feature\/columns\n\ndata.info() #So from the below output we know that our data contains 1-object,1-int,29-float type data","86a8dc55":"#lets check the count of unique values present in Entity column\n\ndata['Entity'].unique()\n","47af4df6":"data['Year'].nunique() #Printing the count of unique values in Year column","7ac8c7c1":"#lets check null values in each columns\n\ndata.isnull().sum()","46d70f80":"data['High total cholesterol'] = data['High total cholesterol'].fillna(value=data['High total cholesterol'].mean())\ndata['Outdoor air pollution'] = data['Outdoor air pollution'].fillna(value=data['Outdoor air pollution'].mean())","42c035aa":"#Lets check again for null values in the data\n\ndata.isnull().sum()","d6cb3223":"#Now from the above output we can say our data does not contains any null values\n\n#Lets copy clean data to new variable\n\nclean_data = data.copy()","eebf35cc":"clean_data.head()","90eda237":"clean_data.shape","6ecaebdd":"#Lets check describe function on data\n\nclean_data.describe()","8e08a0fe":"#Since we have more columns lets transpose it.\nclean_data.describe().transpose()","c712d0e6":"#creating a dataframe which contains only india data.\n\nindia = clean_data[clean_data['Entity']=='India']\nindia","1af46261":"#Lets check Average Deaths due to each Risk factor\n\nrisk_factors = [rf for rf in india.columns if rf not in ['Entity','Year']]\nrisk_factors","cab8c98b":"#Lets calculate the average deaths for each risk factor\naverage_deaths = []\n\nfor rf in risk_factors:\n    average_deaths.append(india[rf].mean())\naverage_deaths","04f9ec29":"#making a dataframe to store riskfactors and average deaths\ndf = pd.DataFrame(list(zip(risk_factors,average_deaths)),columns=['Risk Factor','Avg. Deaths']).sort_values(by='Avg. Deaths',ascending=False)","2a554913":"#lets Plot the Graph to undestand the Deaths for each risk factor\n\nplt.figure(figsize=(8,8),dpi=300)\nsns.barplot(y='Risk Factor',x='Avg. Deaths',data=df)\nplt.title('Avg. Deaths due to Each Risk Factor - INDIA')\nplt.xlabel('Avg. Deaths (in. lakhs)')\nplt.show()","795048b6":"#Lets check deaths in india due to Air pollution\nplt.figure(figsize=(10,8))\nsns.barplot(x='Year',y='Air pollution',data=india,palette='viridis')\nplt.xticks(rotation=90)\nplt.title('Deaths due to Air pollution - INDIA')\nplt.ylim(800000,1250000)\nplt.ylabel('Deaths by Air pollution (in lakhs.)')\nplt.show()","c1aaf9a0":"plt.figure(figsize=(10,10),tight_layout=True)\ne=[0 if i<27 else 1 for i in range(28)]\nplt.pie(india['Smoking'],labels=india.Year,autopct='%.2f%%',pctdistance=0.9,explode=e)\nplt.title('Percentage of Deaths by Smoking - INDIA')\nplt.show()","476b2835":"plt.figure(figsize=(10,8))\nplt.plot(india.Year,india['Smoking'],label='Air pollution')\nplt.plot(india.Year,india['Air pollution'],label='Smoking')\nplt.plot(india.Year,india['High systolic blood pressure'],label='HS-blood pressure')\nplt.legend()\nplt.xlabel('Year')\nplt.ylabel('Deaths  (in. lakhs)')\nplt.title('Deaths each Year in India')\nplt.show()","e4ff2fc5":"# Lets get the world data in a new variable\n\nworld = clean_data[clean_data['Entity']=='World']\nworld","32dd0714":"#Lets plot each risk factor\n\nrisk_factors = [rf for rf in india.columns if rf not in ['Entity','Year']]\n\nplt.figure(figsize=(18,50))\n\nfor index,rf in enumerate(risk_factors):\n    plt.subplot(10,3,index+1)\n    plt.bar(world['Year'],world[rf],label=rf)\n    plt.title(rf)\n    plt.ylabel('Deaths')\n    plt.xlabel('Year')\n\nplt.show()","ba178797":"#Comparison of Average Deaths in INDIA v\/s World each Year\n\nindia_world = clean_data[(clean_data['Entity']=='India') | (clean_data['Entity']=='World')]\nindia_world","667a118e":"ad_india = []\nad_world = []\n\nfor i in ['India','World']:\n    df = india_world[india_world['Entity']==i]\n    \n    if i=='India':\n        for rf in risk_factors:\n            ad_india.append(df[rf].mean())\n    else:\n        for rf in risk_factors:\n            ad_world.append(df[rf].mean())\n\ndf1 = pd.DataFrame(list(zip(risk_factors,ad_india)),columns=['Risk Factor','Avg. Deaths']).sort_values(by='Avg. Deaths',ascending=False)\ndf2 = pd.DataFrame(list(zip(risk_factors,ad_world)),columns=['Risk Factor','Avg. Deaths']).sort_values(by='Avg. Deaths',ascending=False)","608096bf":"fig,axes = plt.subplots(1,2,sharey=True,figsize=(12,6),tight_layout=True,dpi=300)\nfig.suptitle('Comparision of Average Deaths in INDIA v\/s World')\nsns.barplot(ax=axes[0],y='Risk Factor',x='Avg. Deaths',data=df1,palette='viridis')\naxes[0].set_title('Avg. Deaths in INDIA')\naxes[0].set_xlabel('Deaths  (in lakhs.)')\nsns.barplot(ax=axes[1],y='Risk Factor',x='Avg. Deaths',data=df2,palette='viridis')\naxes[1].set_title('Avg. Deaths in WORLD')\naxes[1].set_xlabel('Deaths  (in lakhs.)')\naxes[1].set_ylabel('')\nplt.show()","c2030a2b":"fig,axes = plt.subplots(2,1,figsize=(15,15),tight_layout=True)\naxes[0].pie(df1['Avg. Deaths'][:15],labels=df1['Risk Factor'][:15],autopct='%.1f%%',pctdistance=0.8)\naxes[0].set_title('Average %Deaths in INDIA')\naxes[1].pie(df2['Avg. Deaths'][:15],labels=df2['Risk Factor'][:15],autopct='%.1f%%',pctdistance=0.8)\naxes[1].set_title('Average %Deaths in World')\nplt.show()","7c7620a3":"# Data Visualization","e0215dcf":"### INDIA - Deaths Analysis","51f6b045":"Observations:  \n\n---> From the Above Chart we can say Highest Deaths due to Air pollution is in 2017 and lowest in 2004\n","10dee0fa":"'''\nObservations : \n\n\n-->From the above chart we can say that top 5 major risk factors for deaths in India are \nAir pollution,High systolic blood pressure,Smoking,Unsafe water source and High fasting plasma glucose.\n\n--> From the chart we can say least deaths are due to Discontinued breastfeeding\n\n--> Highest due to Air pollution,High systolic blood pressure,Smoking\n\n'''","65d0aa83":"# 'World' Death Analysis","771bfbf9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c5b749d":"Observations:\n\n--->From the above chart we can say that highest deaths due to Smoking is in the Year - 2017 and Lowest deaths in the Year - 1990\n"}}