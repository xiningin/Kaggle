{"cell_type":{"4f44b369":"code","71e12646":"code","889f11ee":"code","5e67e4d6":"code","1cf03c1b":"code","e0f5803f":"code","66329cfb":"code","401fc668":"code","5b253540":"code","6d3d883e":"code","db9f9e47":"code","bf5093e9":"code","e8999341":"code","b6bfc4e8":"code","34fc5b6a":"markdown","3946601c":"markdown","f1412bf8":"markdown","6c24706c":"markdown","da44f460":"markdown"},"source":{"4f44b369":"# packages\n\n# standard\nimport numpy as np\nimport pandas as pd\nimport time\n\n# plots\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns","71e12646":"# show files\n!ls -l '..\/input\/g-research-crypto-forecasting\/'","889f11ee":"# load asset details table\ndf_assets = pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv')\ndf_assets","5e67e4d6":"# plot asset weights\nplt.bar(height=df_assets.Weight, x=df_assets.Asset_Name)\nplt.title('Asset Weights')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","1cf03c1b":"# load training data (takes some time...)\nt1 = time.time()\ndf_train = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv')\nt2 = time.time()\nprint('Elapsed time [s]: ', np.round(t2-t1,2))","e0f5803f":"# preview\ndf_train.head()","66329cfb":"# data frame structure\ndf_train.info(verbose=True, show_counts=True)","401fc668":"# plot target\ndf_train.Target.plot(kind='hist', bins=100)\nplt.title('Target (histogram)')\nplt.grid()\nplt.show()","5b253540":"# plot target\ndf_train.Target.plot(kind='box', vert=False)\nplt.title('Target (boxplot)')\nplt.grid()\nplt.show()","6d3d883e":"# basic stats\ndf_train.Target.describe(percentiles=[0.01,0.1,0.25,0.5,0.75,0.9,0.99])","db9f9e47":"for my_id in range(0,14):\n    df_select = df_train[df_train.Asset_ID==my_id]\n    plt.figure(figsize=(14,4))\n    plt.scatter(df_select.timestamp, df_select.VWAP, s=1)\n    my_title='Asset ID: ' + str(my_id) + ' - ' + df_assets[df_assets.Asset_ID==my_id].reset_index().Asset_Name[0]\n    plt.title(my_title)\n    plt.grid()\n    plt.show()","bf5093e9":"for my_id in range(0,14):\n    df_select = df_train[df_train.Asset_ID==my_id]\n    plt.figure(figsize=(14,4))\n    plt.scatter(df_select.timestamp, df_select.Target, s=1)\n    my_title='Asset ID: ' + str(my_id) + ' - ' + df_assets[df_assets.Asset_ID==my_id].reset_index().Asset_Name[0]\n    plt.title(my_title)\n    plt.grid()\n    plt.show()","e8999341":"plt.figure(figsize=(14,6))\nsns.violinplot(data=df_train, x='Asset_ID', y='Target')\nplt.show()","b6bfc4e8":"plt.figure(figsize=(14,6))\nsns.violinplot(data=df_train, x='Asset_ID', y='Target')\nplt.ylim(-0.02,0.02)\nplt.show()","34fc5b6a":"# Target distribution by asset","3946601c":"#### Zoom in:","f1412bf8":"### Target","6c24706c":"### Volume Weighted Asset Price","da44f460":"# Plot each asset"}}