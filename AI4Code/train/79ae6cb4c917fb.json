{"cell_type":{"b98556fe":"code","66d26788":"code","2213a7f7":"code","f87e9a93":"code","2c7ee97a":"code","656fb881":"code","16973d0b":"code","1e4b2bf2":"code","c4584dab":"code","f5ccaa8d":"code","762b8593":"code","688c370d":"code","dd7a19ed":"code","ebf9052d":"code","dc2380fb":"code","ba21ae48":"markdown","3a977675":"markdown","66cc8475":"markdown","250fbc16":"markdown","546f7eec":"markdown","66be9028":"markdown","5ee7ea8f":"markdown","62f81709":"markdown","58436533":"markdown"},"source":{"b98556fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #import matplot libary\nimport seaborn as sns #import seaborn\nimport warnings \nwarnings.filterwarnings(\"ignore\") #Ignore and not displays the warning alerts \nfrom PIL import Image #import the libary to create images \nimport pandas_profiling #import pandas profiling\nsns.color_palette(\"Spectral\", as_cmap=True); #set the seaborn color palette\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66d26788":"fitnessData = pd.read_csv(\"\/kaggle\/input\/cardiogoodfitness\/CardioGoodFitness.csv\") #load the csv file with the data\nfitnessData.index = fitnessData[\"Product\"] #Set the Indexer of the dataset","2213a7f7":"fitnessData.isnull().sum() #check if is any null on the dataset.","f87e9a93":"fitnessData.describe() #show me the summary of the dataframe","2c7ee97a":"fitnessData.sort_values(\"Usage\", ascending=False ).head(10) #Sort the list TOP 10 by usage","656fb881":"plt.figure(figsize=(15,8)) #set the image size \nsns.distplot(fitnessData.Age, kde=True); #Univariate product usage per age.\nplt.axvline(x=fitnessData.Age.mean(), linewidth=1, color='blue', label=\"mean\", alpha=0.8); #show a green line where in the plot should be the mean\nplt.axvline(x=fitnessData.Age.median(), linewidth=1, color='green', label=\"median\", alpha=0.8); #show a blue line where in the plot should be the median\n\nplt.legend([\"mean\", \"median\"]); #the plot legend for eman and meadian","16973d0b":"plt.figure(figsize=(15,8)) #set the image size \nsns.distplot(x=fitnessData.Income) #Univariate product usage per income.\nplt.show();","1e4b2bf2":"sns.catplot(x='Product', y='Age', hue='Gender', kind='bar', data=fitnessData);\n#Seaborn catplot. product on y axel and the age for each customer gender on x axel","c4584dab":"sns.displot(x='Usage', hue='Product', kind='kde', data=fitnessData);\n#Uni-variate of the products by usage","f5ccaa8d":"sns.jointplot(x='Usage', y='Income', data=fitnessData);# Seaborn joinplot. product on y axel and the age for each customer gender on x axel","762b8593":"plt.figure(figsize=(15,8)) #set the image size \nsns.swarmplot(data = fitnessData, x='Usage', y='Income', hue='Fitness'); #seaborn swarmplot ","688c370d":"sns.pairplot(fitnessData,  hue=\"Product\"); #seaborn pairplot to show the relationship in a dataset. ","dd7a19ed":"plt.figure(figsize=(10,7)) #set the image size \nsns.heatmap(fitnessData.corr(), annot=True); #seaborn heatmap with the correlation amount the data in the dataset. use the parameter annot to display annotation for each square.","ebf9052d":"plt.figure(figsize=(15,8)) #set the image size \nax = sns.barplot(x='Fitness', y='Income', data = fitnessData, hue='Product') #barplot showing the Fitness vs income for each product. ","dc2380fb":"plt.figure(figsize=(10,5)) #set the image size \nsns.pointplot(x='Fitness', y='Usage', hue='Product', data=fitnessData) #The pointplot to show how change the produt usage for each fitness session by product.\n\nplt.show()","ba21ae48":"The univariate plot by income. ","3a977675":"Using the swarmplot we can visualize a multivariate plot. Usage vs Income vs Fitness. ","66cc8475":"This plot show the product consumption by fitness category and Income ","250fbc16":"The heatmap show the correlation among the dataset.","546f7eec":"On This plot we can notice that the product TM195 has the highest count while the product TM798 are usaged more frequently ","66be9028":"On This Point Plot we can have the visualization by product, the fitness and income for all data","5ee7ea8f":"# Customer Profile \n\n\nI want to show the correlation between Age and income and see the separated plots at the univarante plots.\n\nAlso, we can see it is right skewed. Indicate that our main focus should be on on young adults between middle 20's to 30 years old.","62f81709":"Usage vs Income.  People with hightest income use more than the avarage people. ","58436533":"**Charactiristic of a customer of the different products**"}}