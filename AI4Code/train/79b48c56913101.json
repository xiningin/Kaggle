{"cell_type":{"708c4a2a":"code","7e517974":"code","d0ea6eb8":"code","e7f81266":"code","35faa660":"code","6e5e1b7c":"code","71bdee1c":"code","23de79b3":"code","4b3c514e":"code","ab2c4ed9":"code","25a2e34a":"code","03a8b033":"code","0ada912e":"code","b39af66f":"code","4dbe4af8":"code","b63a0bb1":"code","8224bdec":"code","8b8d2efa":"code","d9830964":"code","ec114cc2":"code","aeaea753":"code","e398eaa4":"code","1aaba08c":"code","79debf55":"code","7b516433":"code","04386668":"markdown","7d49260f":"markdown","6057427b":"markdown","6c35f882":"markdown","24d91d38":"markdown","61331852":"markdown","f0e9be28":"markdown","5d9a82bd":"markdown","190408fa":"markdown","b98b9684":"markdown","77f7ed59":"markdown","b00a1a5b":"markdown","95641729":"markdown","f49c4181":"markdown"},"source":{"708c4a2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7e517974":"from sqlalchemy import create_engine\n\nimport plotly.express as px\nimport plotly.io as pio\n\n\npio.templates.default = \"plotly_dark\"\n\n\nimport json","d0ea6eb8":"filename_train = '\/kaggle\/input\/covid19-global-forecasting-week-4\/train.csv'\n\n\ntrain_df = pd.read_csv(filename_train)\n\nengine = create_engine('sqlite:\/\/', echo=False)\ntrain_df.to_sql('train', con=engine)","e7f81266":"table = 'train'\n\nquery = \"\"\"\n    SELECT Country_Region AS country,\n            Date,\n            SUM(ConfirmedCases) AS confirmed,\n            SUM(Fatalities) AS death\n    FROM {0}\n    GROUP BY Date, Country_Region\n    ORDER BY Country_Region, Date\n\"\"\".format(table)\n\nprint(query)\n\nsum_world = pd.read_sql(query, engine)\n\nsum_world['size_confirmed'] = sum_world['confirmed'].pow(0.3)\nsum_world['size_death'] = sum_world['death'].pow(0.3)\n\nsum_world.head()","35faa660":"fig = px.scatter_geo(sum_world, locations='country',\n                    locationmode='country names', color='confirmed',\n                    size='size_confirmed', hover_name='country', range_color=[1, 1500],\n                    projection='natural earth', animation_frame='Date',\n                    title='Accumulated Confirmed Cases Over Time', color_continuous_scale=\"portland\")\n\nfig.show()","6e5e1b7c":"\nfig = px.line(sum_world,\n               x='Date', y='confirmed',\n               color='country',\n               title='Accumulated Confirmed Cases Over The World')\n\nfig.show()","71bdee1c":"fig = px.scatter_geo(sum_world, locations='country',\n                    locationmode='country names', color='death',\n                    size='size_confirmed', hover_name='country', range_color=[1, 1500],\n                    projection='natural earth', animation_frame='Date',\n                    title='COVID-19: Death Over Time', color_continuous_scale=\"portland\")\n\nfig.show()","23de79b3":"\nfig = px.line(sum_world,\n               x='Date', y='death',\n               color='country',\n               title='Accumulated Death Toll Over The World')\n\nfig.show()","4b3c514e":"table = 'train'\ncountry = 'US'\n\nquery = \"\"\"\n    SELECT t.Province_State AS state,\n            t.Date,\n            SUM(ConfirmedCases) AS confirmed,\n            SUM(Fatalities) AS death\n    FROM {0} AS t\n    GROUP BY t.Date, t.Province_State HAVING t.Country_Region = \\'{1}\\'\n    ORDER BY t.Province_State, t.Date\n\"\"\".format(table, country)\n\nprint(query)\n\nsum_us = pd.read_sql(query, engine)\n\nsum_us.head()","ab2c4ed9":"\nfig = px.line(sum_us,\n               x='Date', y='confirmed',\n               color='state',\n               title='Accumulated Confirmed Cases in the US')\n\nfig.show()","25a2e34a":"\nfig = px.line(sum_us,\n               x='Date', y='death',\n               color='state',\n               title='Accumulated Confirmed Cases in the US')\n\nfig.show()","03a8b033":"yesterday = sum_us['Date'].max()\n\nsum_yesterday_us = sum_us[sum_us['Date'] == yesterday]\n\nsum_yesterday_us.head()","0ada912e":"us_states_json = json.loads(\"\"\"\n{\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n} \n\"\"\")\n    \n# switch key\/value from code\/state to state\/code.\nus_states = {state: abbrev for abbrev, state in us_states_json.items()}\n    \n    \n# add state code column\nsum_yesterday_us['code'] = sum_yesterday_us['state'].map(us_states)","b39af66f":"fig = px.choropleth(sum_yesterday_us, locations='code',\n                   locationmode='USA-states', color='confirmed',\n                   hover_name='state', range_color=[1, 10000],\n                   scope='usa',\n                    color_continuous_scale='portland',\n                   title='Confirmed Cases on {}'.format(yesterday))\n\nfig.show()","4dbe4af8":"fig = px.choropleth(sum_yesterday_us, locations='code',\n                   locationmode='USA-states', color='death',\n                   hover_name='state', range_color=[1, 1000],\n                   scope='usa',\n                    color_continuous_scale='portland',\n                   title='Death Toll on {}'.format(yesterday))\n\nfig.show()","b63a0bb1":"table = 'train'\n\nquery = \"\"\"\n    WITH summary AS (\n        SELECT t.*,\n                SUM(t.ConfirmedCases) AS confirmed,\n                SUM(t.Fatalities) AS death\n        FROM {0} AS t\n        GROUP BY t.Date, t.Country_Region\n    )\n    \n    SELECT s.Country_Region AS country,\n            s.Date,\n            s.confirmed,\n            s.death,\n            s.confirmed - LAG(s.confirmed) OVER (PARTITION BY s.Country_Region ORDER BY s.Date) AS daily_confirmed,\n            s.death - LAG(s.death) OVER (PARTITION BY s.Country_Region ORDER BY s.Date) AS daily_death\n    FROM summary AS s\n    ORDER BY s.Country_Region\n\"\"\".format(table)\n\nprint(query)\n\ndaily_world = pd.read_sql(query, engine)\n\ndaily_world['size_daily_confirmed'] = daily_world['daily_confirmed'].pow(0.3)\ndaily_world['size_daily_death'] = daily_world['daily_death'].pow(0.3)\n\ndaily_world = daily_world.fillna(0)\n\n\ndaily_world.head()","8224bdec":"fig = px.scatter_geo(daily_world, locations='country',\n                    locationmode='country names', color='daily_confirmed',\n                    size='size_daily_confirmed', hover_name='country', range_color=[0, 1500],\n                    projection='natural earth', animation_frame='Date',\n                    title='Daily New Confirmed Cases', color_continuous_scale=\"portland\")\n\nfig.show()","8b8d2efa":"\nfig = px.line(daily_world, \n              x='Date', y='daily_confirmed',\n             color='country',\n             title='Daily Confirmed Cases Over Time')\n\nfig.show()","d9830964":"\nfig = px.line(daily_world, \n              x='Date', y='daily_death',\n             color='country',\n             title='Daily Death Toll Over Time')\n\nfig.show()","ec114cc2":"table = 'train'\ncountry = 'US'\n\nquery = \"\"\"\n    WITH us AS (\n        SELECT t.*\n        FROM {0} AS t\n        WHERE t.Country_Region = \\'{1}\\'\n    )\n    \n    SELECT u.Country_Region AS country,\n            u.Province_State AS state,\n            u.Date,\n            u.ConfirmedCases AS confirmed,\n            u.Fatalities AS death,\n            u.ConfirmedCases - LAG(u.ConfirmedCases) OVER (PARTITION BY u.Province_State ORDER BY u.Date) AS daily_confirmed,\n            u.Fatalities - LAG(u.Fatalities) OVER (PARTITION BY u.Province_State ORDER BY u.Date) AS daily_death\n    FROM us AS u\n\"\"\".format(table, country)\n\nprint(query)\n\ndaily_us = pd.read_sql(query, engine)\n\ndaily_us.head()","aeaea753":"\nfig = px.line(daily_us, \n              x='Date', y='daily_confirmed',\n             color='state',\n             title='Daily New Confirmed Cases Over Time in US')\n\nfig.show()","e398eaa4":"# add state code column\ndaily_us['code'] = daily_us['state'].map(us_states)","1aaba08c":"yesterday = daily_us['Date'].max()\ndaily_yesterday_us = daily_us[daily_us['Date'] == yesterday]\n\nfig = px.choropleth(daily_yesterday_us, locations='code',\n                   locationmode='USA-states', color='daily_confirmed',\n                   hover_name='state', range_color=[1, 1000],\n                   scope='usa',\n                    color_continuous_scale='portland',\n                   title='Daily Confrimed Case on {}'.format(yesterday))\n\nfig.show()","79debf55":"\nfig = px.line(daily_us, \n              x='Date', y='daily_death',\n             color='state',\n             title='Daily Death Toll Over Time in US')\n\nfig.show()","7b516433":"yesterday = daily_us['Date'].max()\ndaily_yesterday_us = daily_us[daily_us['Date'] == yesterday]\n\nfig = px.choropleth(daily_yesterday_us, locations='code',\n                   locationmode='USA-states', color='daily_death',\n                   hover_name='state', range_color=[1, 100],\n                   scope='usa',\n                    color_continuous_scale='portland',\n                   title='Daily Death Toll on {}'.format(yesterday))\n\nfig.show()","04386668":"### Accumulated Confirmed Cases in the US","7d49260f":"## Daily Confirmed Cases Over The World","6057427b":"### Accumulated Death Toll in the US","6c35f882":"# Daily Cases in the US","24d91d38":"# Accumulated Data Over The World","61331852":"# Accumulated Data in the US","f0e9be28":"## Daily Death Toll Over The World","5d9a82bd":"## Accumulated Confirmed *Cases* Over The World","190408fa":"## Daily Death Toll in US","b98b9684":"## Daily Confirmed Cases in US","77f7ed59":"# Daily Cases Over The World","b00a1a5b":"## Accumlated Death Toll Over The World","95641729":"## Heat Map of Yesterday's Data in US","f49c4181":"This notebook is reference Abhinand's great work Based on his tremendous effort, I add daily death toll and confirmed cases using SQL."}}