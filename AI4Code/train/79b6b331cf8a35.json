{"cell_type":{"505c3a78":"code","6427fe88":"code","8daa9140":"code","30cbdb18":"code","aed372ce":"code","49024e26":"code","3a83006b":"code","b1f792d2":"code","7d3db934":"code","5a5b687f":"code","40238392":"code","65e4c0a8":"code","f997e000":"code","714b4e23":"code","d02be093":"code","e200dbc4":"code","b4a32504":"code","21404ef2":"code","14430ba5":"code","b22143e9":"code","57f61143":"code","61a91b66":"code","af32747f":"code","38a1288a":"code","df81f048":"code","b7b5ec28":"code","edfa7969":"code","04d4107a":"code","eb303a30":"code","fee08e65":"code","bbb855e5":"code","0bef1825":"code","96ec2792":"code","32ce64fc":"code","dba274f3":"code","600d27e7":"code","9f35e734":"code","0c7a05fe":"code","0398b26b":"code","10241d3d":"code","32ad497a":"code","ceddab5b":"markdown","11758b17":"markdown","213fd1a7":"markdown","9fa0cc94":"markdown","3eab8b22":"markdown","87f127a2":"markdown","eeebd618":"markdown","15178954":"markdown","1549023b":"markdown","8dfdd4a1":"markdown","e3883b49":"markdown","fe43c390":"markdown","06933ea0":"markdown","29ab8093":"markdown","9251172a":"markdown","e489e2ba":"markdown","90e5f7bc":"markdown","fea73ac3":"markdown","04a85a99":"markdown","bef99f17":"markdown"},"source":{"505c3a78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6427fe88":"df = pd.read_csv('\/kaggle\/input\/top-spotify-songs-from-20102019-by-year\/top10s.csv',encoding='ISO-8859-1')","8daa9140":"df.head()","30cbdb18":"df.info()","aed372ce":"df.describe().T","49024e26":"df.shape","3a83006b":"df.isnull().sum()","b1f792d2":"df.drop('Unnamed: 0', axis =1, inplace=True)","7d3db934":"import seaborn as sns\nimport matplotlib.pyplot as plt","5a5b687f":"import plotly.express as px","40238392":"df.rename(columns={'title':'song', 'artist':'artist', 'top genre':'genre', 'year':'year', 'bpm':'beats_per_minute','nrgy':'energy',\n                    'dnce':'danceability','dB':'loudness','live':'liveness', 'val':'valence', 'dur':'length', 'acous':'acousticness',\n                    'spch':'speechiness','pop':'popularity'}, inplace=True)","65e4c0a8":"df.columns","f997e000":"df['genre'].nunique()","714b4e23":"df['genre'].value_counts().head(10)","d02be093":"df['genre'].value_counts().head(10).plot.pie(figsize=(10,10),autopct='%1.1f%%')\nplt.title('Top 10 genre of 2010-2019')","e200dbc4":"df['artist'].nunique()","b4a32504":"df['artist'].value_counts().head(10)","21404ef2":"df['artist'].value_counts().head(10).plot.bar()","14430ba5":"fig,axes = plt.subplots(nrows=4, ncols=3, figsize=(14,10))\nplt.tight_layout()\naxes[0][0].plot(df['beats_per_minute'].value_counts().sort_index())\naxes[0][0].set_title('bpm')\naxes[0][1].plot(df['energy'].value_counts().sort_index())\naxes[0][1].set_title('Energy')\naxes[0][2].plot(df['danceability'].value_counts().sort_index())\naxes[0][2].set_title('Danceability')\n\naxes[1][0].plot(df['liveness'].value_counts().sort_index())\naxes[1][0].set_title('liveness')\naxes[1][1].plot(df['valence'].value_counts().sort_index())\naxes[1][1].set_title('valence')\naxes[1][2].plot(df['length'].value_counts().sort_index())\naxes[1][2].set_title('length')\n\naxes[2][0].plot(df['loudness'].value_counts().sort_index())\naxes[2][0].set_title('loudness')\naxes[2][1].plot(df['acousticness'].value_counts().sort_index())\naxes[2][1].set_title('acousticness')\n\naxes[3][0].plot(df['speechiness'].value_counts().sort_index())\naxes[3][0].set_title('speechiness')\naxes[3][1].plot(df['popularity'].value_counts().sort_index())\naxes[3][1].set_title('popularity')","b22143e9":"fig,axes = plt.subplots(nrows=4, ncols=3, figsize=(14,10))\nplt.tight_layout()\nsns.distplot(df['beats_per_minute'], color='r', ax=axes[0][0])\nsns.distplot(df['energy'], color='b', ax=axes[0][1])\nsns.distplot(df['danceability'], color='r', ax=axes[0][2])\nsns.distplot(df['liveness'], color='b', ax=axes[1][0])\nsns.distplot(df['valence'], color='r', ax=axes[1][1])\nsns.distplot(df['length'], color='b', ax=axes[1][2])\nsns.distplot(df['loudness'], color='r', ax=axes[2][0])\nsns.distplot(df['speechiness'], color='b', ax=axes[2][1])\nsns.distplot(df['length'], color='r', ax=axes[2][2]) \nsns.distplot(df['popularity'], color='b', ax=axes[3][1])","57f61143":"fig,axes = plt.subplots(nrows=4, ncols=3, figsize=(14,10))\nplt.tight_layout()\nsns.boxplot(df['beats_per_minute'], color='r', ax=axes[0][0])\nsns.boxplot(df['energy'], color='b', ax=axes[0][1])\nsns.boxplot(df['danceability'], color='r', ax=axes[0][2])\nsns.boxplot(df['liveness'], color='b', ax=axes[1][0])\nsns.boxplot(df['valence'], color='r', ax=axes[1][1])\nsns.boxplot(df['length'], color='b', ax=axes[1][2])\nsns.boxplot(df['loudness'], color='r', ax=axes[2][0])\nsns.boxplot(df['speechiness'], color='b', ax=axes[2][1])\nsns.boxplot(df['length'], color='r', ax=axes[2][2]) \nsns.boxplot(df['popularity'], color='b', ax=axes[3][1])","61a91b66":"df.beats_per_minute.describe()","af32747f":"def grouping(x):\n    if x<100:\n        return '<100'\n    elif x<=150:\n        return '101-150'\n    elif x<=200:\n        return '151-200'\n    else:\n        return '>200'\n\ngroupes = df.beats_per_minute.apply(grouping)\nvalues= groupes.value_counts()\nlabels= values.index\nfig = px.pie(values = values,names= labels)\nfig.update_layout(title = 'bpm_distribution')\nfig.show()","38a1288a":"df[df['beats_per_minute']>200]","df81f048":"#fig = px.scatter(df[df['beats_per_minute']>200], y=\"beats_per_minute\", x=\"popularity\", hover_name='song', color='beats_per_minute', size='acousticness')\n#fig.show()","b7b5ec28":"fig=px.violin(df, y='danceability', color='year', points='all', hover_name='song', hover_data=['artist'])\nfig.show()","edfa7969":"fig=px.violin(df, y = 'popularity', points ='all',color='year',hover_name='song',hover_data=['artist'])\nfig.show()","04d4107a":"fig=px.violin(df, y = 'energy', points ='all',color='year',hover_name='song',hover_data=['artist'])\nfig.show()","eb303a30":"fig = px.scatter(df,x='danceability', y='energy',color='energy',hover_name='song',hover_data=['artist','year'])\nfig.show()","fee08e65":"fig = px.scatter(df,x='popularity', y='length',color='length',hover_name='song',hover_data=['artist','year'])\nfig.show()","bbb855e5":"fig = px.scatter(df,x='popularity', y='speechiness',color='speechiness',hover_name='song',hover_data=['artist','year'])\nfig.show()","0bef1825":"fig = px.scatter(df.query('year==2019'), y='popularity', x='artist', hover_name='song', color='popularity' )\nfig.show()","96ec2792":"df[df['genre'].str.contains('pop')]","32ce64fc":"fig = px.scatter(df[df['genre'].str.contains('pop')], x='artist', y='popularity', hover_name='song', hover_data=['year','artist'] )\nfig.show()","dba274f3":"df['artist'].value_counts().head(10)","600d27e7":"kp = df[df['artist']=='Katy Perry']\nkp","9f35e734":"df[df['artist']=='Katy Perry']['year'].value_counts()","0c7a05fe":"fig=px.scatter(df[df['artist']=='Katy Perry'], y='popularity', x= 'year', hover_name='song', hover_data=['artist','year'])\nfig.show()","0398b26b":"df.sort_values(by='acousticness', ascending = False).head(10)[['song','artist','genre','year','acousticness']]","10241d3d":"df.sort_values(by='liveness',ascending=False).head(10)[['song','artist','genre','year','liveness']]","32ad497a":"corrr = df.corr()\nfig=plt.figure(figsize=(10,8))\nsns.heatmap(corrr, annot=True,cmap='GnBu_r', center=1)","ceddab5b":"Insights:\nThe most popular songs contain less spoken words\n\nThe song with more spoken words is \"How ya doin'?\" by Little Mix feauturing Missy Elliot.","11758b17":"# **Distribution of featuers****","213fd1a7":"Insights:\nMost of the popular songs are with duration less than 4 minutes(250 seconds)\n\nThe song with highest duration is \"TKO\" by Justin Timberlake which is 7 minutes(424 seconds)\n\nThe song with least duration is \"Mark my words\" by Justin Bieber which is just 2.2 minutes(134 seconds)","9fa0cc94":"3. Energy","3eab8b22":"Insights:\nDanceability increases as energy increases.\n\n\"Pom Poms\" by Jonas Brothers is the song with highest energy among the top songs during this period.\n\nEven though the energy is less than half of the top songs, Bad Liar by Imagine Dragons is the song with highest danceability during 2010-19.","87f127a2":"Lets have alook at 2019 data","eeebd618":"2. Popularity","15178954":"Let's look into the relationships between different variables","1549023b":"# **List of cool insights:**\n\n\nThere are 50 unique genres in the top spotify songs from 2010-19.\n\nDuring this timeperiod, most of the top songs belongs to the pop genre.\n\nAnd in particular, dance-pop is the top genre on Spotify during this period.\n\nThere are 184 unique artists whose songs reached top in the charts on Spotify in the timeperiod of 2010-19.\n\nKaty Perry has most number of top songs on Spotify in the period of 2010-19 followed by Justin Bieber .\n\nMost of the top songs are having 100-150 beats per minute(bpm)\n\nVery few songs are having bpm > 200\n\nOnly 3 songs are having bpm > 200 (you can see the value if you hover the pie chart above)\n\nJust out of curiosity, Let's see what are those 3 songs with bpm>200\n\nRihanna's FourFiveSeconds is the song with highest bpm\n\nThe two songs which are easier to dance are of two female hiphop artists, Nicki Minaj and CardiB.\n\nCardiB's \"Drip\" released in 2018 is the song with highest danceability followed by Nicki Minaj's \"Anaconda\" in 2014.\n\nImagine Dragon's \"Bad Liar\" ia also the song with danceability equal to Drip, thus there are two songs with highest danceablity.\n\nMaroon5's \"Memories\" is the most popular song during the period of 2010-19.\n\nThe most energetic song during this period is \"Hello\" by French DJ, Martin Solveig.\n\nDanceability increases as energy increases.\n\n\"Pom Poms\" by Jonas Brothers is the song with highest energy among the top songs during this period.\n\nEven though the energy is less than half of the top songs, Bad Liar by Imagine Dragons is the song with highest danceability during 2010-19.\n\nThe most of the popular songs are with duration less than 4 minutes(250 seconds)\n\nThe song with highest duration is \"TKO\" by Justin Timberlake which is 7 minutes(424 seconds)\n\nThe song with least duration is \"Mark my words\" by Justin Bieber which is just 2.2 minutes(134 seconds)\n\nThe most popular songs contain less spoken words\n\nThe song with more spoken words is \"How ya doin'?\" by Little Mix featuring Missy Elliot.\n\nMaroon5's \"Memories\" is the most popular song in 2019.\n\nEdSheeran has 5 top songs in 2019.\n\nMy bad, only 14 hiphop songs :(\n\nThe most popular hip hop song on Spotify during 2010-19 was Eminem's \"Love the way you lie\".\n\nIt seems that 2015 is very lucky for Justin Bieber as he had 9 top singles.","8dfdd4a1":"Let's get some insights from a particular artist","e3883b49":"Insights:\n#### Most of the top songs are having 100-150 beats per minute(bpm)\n#### Very few songs(only 3) are having bpm > 200","fe43c390":"Insights:\nThe most energetic song during this period is \"Pom Pom\" by Jonas Brothers","06933ea0":"Lets look at Pop genre","29ab8093":"Insights:\nMaroon5's \"Memories\" is the most popular song in 2019.\n\nEdSheeran has 5 top songs in 2019.","9251172a":"Let's look into some good features, year wise\n1. Danceability","e489e2ba":"**Artists**","90e5f7bc":"The most popular Pop song on Spotify during 2010-19 was Maroon 5's Memories.","fea73ac3":"Let's look into top songs based on different features\n\nTop 10 songs based on acousticness","04a85a99":"Insights:\n\nThe two songs which are easier to dance are of two female hiphop artists, Nicki Minaj and CardiB.\nCardiB's \"Drip\" released in 2018 is the song with highest danceability followed by Nicki Minaj's \"Anaconda\" in 2014.\n\nImagine Dragon's \"Bad Liar\" ia also the song with danceability equal to Drip, thus there are two songs with highest danceablity.","bef99f17":"Insights:\nIt is very clear that Maroon5's \"Memories\" is the most popular song during the period of 2010-19."}}