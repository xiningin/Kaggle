{"cell_type":{"bb947574":"code","1169905f":"code","0feacd4e":"code","c995d38b":"code","1fa6e189":"code","a013d7a8":"code","6708894c":"code","bcaa0ec5":"code","20507ea6":"code","4bfe6e81":"code","3b705ca3":"code","6ebd99f8":"code","e82d1323":"code","a57761f2":"code","ef85498d":"code","49aaeb87":"code","ac7746a6":"code","9b89d671":"code","6080463a":"code","125b1eab":"code","443d3752":"code","0d985416":"code","8bfdf102":"markdown","59a1e757":"markdown","c68e8b05":"markdown","8f2e284b":"markdown","ac00e9e5":"markdown","9afe0a7f":"markdown"},"source":{"bb947574":"#import the libraries\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","1169905f":"#import the dataset\n\ndf = pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/CAR DETAILS FROM CAR DEKHO.csv')\ndf.head()","0feacd4e":"#Looking at the shape of the dataset\n\ndf.shape","c995d38b":"#Drop the null rows\ndf = df.dropna()\ndf.shape","1fa6e189":"#Check whether there are missing values in any columns\n\ndf.isnull().sum()","a013d7a8":"#Check the data types of every column\ndf.info()","6708894c":"#select all the categorical columns\ncategorical = df.select_dtypes('object').columns\ncategorical","bcaa0ec5":"def check_category(df, columns):\n    for var in columns:\n        print(df[var].value_counts())\n    \ncategorical = df.select_dtypes('object').columns\ncheck_category(df,categorical)","20507ea6":"#Find the correlation between the numeric columns\nplt.figure(figsize=(12,8))\nsns.heatmap(df.corr(), annot=True)\nplt.title('Correlation')","4bfe6e81":"plt.figure(figsize=(16,10))\nsns.pairplot(data=df)","3b705ca3":"#As there are many types of model of the cars we can select the cars which frequency is greater than 10\ndf = df.groupby('name').filter(lambda x: len(x)>10)\ndf.shape","6ebd99f8":"df.head()","e82d1323":"print('Value Counts of Name Column: ', df.name.value_counts())\nprint('\\n')\nprint('Value Counts of Fuel Column: ', df.fuel.value_counts())\nprint('\\n')\nprint('Value Counts of Sellet_type Column: ', df.seller_type.value_counts())\nprint('\\n')\nprint('Value Counts of Transmission Column: ', df.transmission.value_counts())\nprint('\\n')\nprint('Value Counts of Owner Column: ', df.owner.value_counts())","a57761f2":"from sklearn.preprocessing import LabelEncoder\ndf[['fuel','transmission']] = df[['fuel','transmission']].apply(LabelEncoder().fit_transform)\ndf.head()","ef85498d":"#Changing Other categorical Columns to Numeric Value\ncat_to_num = {\"seller_type\": {\"Individual\":1, \"Dealer\":2, \"Trustmark Dealer\":3},\n              \"owner\": {\"First Owner\": 1, \"Second Owner\":2, \"Third Owner\":3, \"Fourth & Above Owner\": 4}\n                }\nprint(cat_to_num)\nprint('\\n')\ndf.replace(cat_to_num, inplace=True)\ndf.head()","49aaeb87":"print('Value Counts of Fuel Column: ', df.fuel.value_counts())\nprint('\\n')\nprint('Value Counts of Sellet_type Column: ', df.seller_type.value_counts())\nprint('\\n')\nprint('Value Counts of Transmission Column: ', df.transmission.value_counts())\nprint('\\n')\nprint('Value Counts of Owner Column: ', df.owner.value_counts())","ac7746a6":"#Drop the name column and the take the X and y parts\nX = df.drop(['name','selling_price'], axis=1)\nX.shape","9b89d671":"y = df.selling_price","6080463a":"#First split the dataset into training and testing subset\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, random_state=2)","125b1eab":"#First apply Linear Regression to predict the price\nfrom sklearn.linear_model import LinearRegression\nlinreg = LinearRegression()\nlinreg.fit(X_train,y_train)\nlinreg.score(X_test,y_test)","443d3752":"#Now do the same with Random Forest Tree Classifier\nfrom sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(random_state=123)\nmodel.fit(X_train,y_train)\nmodel.score(X_test, y_test)","0d985416":"#Now do the same with cross validation \nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(linreg, X, y, cv=10)\nscore.mean()","8bfdf102":"### Preprocessing the data","59a1e757":"**We can see the given dataset has no null values**","c68e8b05":"**now we inspect the categorical columns and find out how many category these columns have**","8f2e284b":"### here we can see we have got the predicted correlation between year vs selling_price and km_driven vs selling_price","ac00e9e5":"Most of the cars run by Diesel and petrol fuel. Only one car can be drived by electricity.\nMost of the transmission is manual\nHere we can see there are different types of cars enlisted","9afe0a7f":"# Visualization"}}