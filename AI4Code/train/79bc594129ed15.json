{"cell_type":{"b79b527b":"code","32450849":"code","85f7245f":"code","c54ef23c":"code","e86cab98":"code","dc66ddf5":"code","9864f14d":"code","6199bf62":"code","d06e52a9":"code","9ad16a69":"code","1f7bfe63":"code","c792bc8c":"code","9e205556":"code","cc764b39":"code","be6a7b21":"code","7002451d":"code","797443fb":"code","9b1d024c":"code","8522dbc0":"code","214fd646":"code","03e9cd78":"code","03c8a695":"code","eaf9332d":"code","96120feb":"code","32455342":"code","b31543e9":"code","8b348ee3":"code","2bb5bade":"code","4eee44b9":"code","a1180d74":"code","2642dd47":"code","6937fa1c":"code","ca7b3a6b":"code","ddc0ecd9":"code","ce4eaa64":"code","e151df5e":"code","4969add4":"code","076988ce":"code","c645909e":"code","ad519d6b":"code","a75ab94b":"code","524ec48c":"code","738d5494":"code","ce66aad9":"code","188f1f05":"code","c4a53d7a":"markdown","77c92ec2":"markdown","77b45945":"markdown","ecfc0a0a":"markdown","3ad37566":"markdown","037aea81":"markdown","ebde3108":"markdown","f1d7a260":"markdown","771e931d":"markdown","9b60d7dc":"markdown","b771208d":"markdown","1b7ee9a1":"markdown","85eae8a3":"markdown","78ca4445":"markdown","2dec8999":"markdown","7e4fdc8e":"markdown","3e36ecac":"markdown","19a5fd5e":"markdown","8328df78":"markdown"},"source":{"b79b527b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport math \nimport seaborn as sns\nimport missingno\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.impute import SimpleImputer\nimport itertools\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","32450849":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","85f7245f":"train.head(30)","c54ef23c":"train.describe()\n","e86cab98":"test.head()","dc66ddf5":"test.describe()","9864f14d":"print(\"A base de treino possui:\")\nprint(train.memory_usage().sum(),\"Bytes ou \")\nprint(train.memory_usage().sum()\/1024,\"KBytes ou \")\nprint(train.memory_usage().sum()\/1024\/1024,\"MBytes\")","6199bf62":"print(\"E a base de teste... :\")\nprint(test.memory_usage().sum(),\"Bytes ou \")\nprint(test.memory_usage().sum()\/1024,\"KBytes ou \")\nprint(test.memory_usage().sum()\/1024\/1024,\"MBytes\")","d06e52a9":"print(\"Informa\u00e7\u00f5es acerca de Train\")\nprint(\"_\"*40)\ntrain.info()","9ad16a69":"print(\"Informa\u00e7\u00f5es acerca de Test\")\nprint(\"_\"*40)\ntest.info()","1f7bfe63":"print(\"Dimens\u00f5es de Train\")\nprint(\"Linhas, Colunas\")\nprint(train.shape)","c792bc8c":"print(\"Dimens\u00f5es de Test\")\nprint(\"Linhas, Colunas\")\nprint(test.shape)","9e205556":"print(\"Essas s\u00e3o todas as vari\u00e1veis presentes: \", list(train))\nprint(\"_\"*142)\nprint(\"|\"*142)\nprint(\"_\"*142)\nprint(\"Feita uma pequena an\u00e1lise, percebe-se que algumas s\u00e3o mais promissoras que outras, ent\u00e3o \"\n      +\"separamos algumas para verificar possiveis conjutos\")\n\ncont = 0\nwhile cont<8:\n    cont = cont+1\n    for i in itertools.combinations(list(train[[\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"]]),cont):\n        print(i)","cc764b39":"\nvariaveis = [\"SexBinario\", \"SibSpSex\",\"Pclass\"]","be6a7b21":"def SexBinario(valor):\n    if valor == \"female\":\n        return 1\n    else:\n        return 0\n    \ndef EmbarkedNumerico(valor):\n    if valor == \"S\":\n        return 1\n    elif valor == \"C\":\n        return 2\n    else:\n        return 3\n    \ndef GrupoIdade(idade):\n    if idade>=65 :\n        return 3\n    elif idade < 65 and idade >=18 :\n        return 2\n    else:\n        return 1\n\ndef SibSpBinario(sibsp):\n    if sibsp != 1:\n        return 0\n    else:\n        return 1\n    \ndef CategFare(valor):\n    if valor <= 100:\n        return 0\n    elif valor >100:\n        return 1\n    \ndef AgeBinario(valor):\n    if valor<7:\n        return 1\n    else:\n        return 0\n    \ndef MenorDe7Anos(valor):\n    if valor<7:\n        return 1\n    else:\n        return 0\ndef SibSpSex(c):\n    if c.Sex == \"female\" and c.SibSp <4:\n        return 1\n    else:\n        return 0\n    \n","7002451d":"train[\"EmbarkedNumerico\"] = train[\"Embarked\"].map(EmbarkedNumerico)\ntrain[\"SexBinario\"] = train[\"Sex\"].map(SexBinario)\ntrain[\"GrupoAge\"] = train[\"Age\"].map(GrupoIdade)\ntrain[\"SibSpBinario\"] = train[\"SibSp\"].map(SibSpBinario)\ntrain[\"CategFare\"] = train[\"Fare\"].map(CategFare)\ntrain[\"AgeBinario\"] = train[\"Age\"].map(AgeBinario)\ntrain[\"MenorDe7Anos\"] = train[\"Age\"].map(MenorDe7Anos)\ntrain[\"SibSpSex\"] = train.apply(SibSpSex, axis=1)\n\n\nvivos = train[train[\"Survived\"] == 1]\n\n\ntest[\"EmbarkedNumerico\"] = test[\"Embarked\"].map(EmbarkedNumerico)\ntest[\"SexBinario\"] = test[\"Sex\"].map(SexBinario)\ntest[\"GrupoAge\"] = test[\"Age\"].map(GrupoIdade)\ntest[\"SibSpBinario\"] = test[\"SibSp\"].map(SibSpBinario)\ntest[\"CategFare\"] = test[\"Fare\"].map(CategFare)\ntest[\"AgeBinario\"] = test[\"Age\"].map(AgeBinario)\ntest[\"MenorDe7Anos\"] = test[\"Age\"].map(MenorDe7Anos)\ntest[\"SibSpSex\"] = test.apply(SibSpSex, axis=1)\nvivos","797443fb":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"male\"], hue=\"Survived\",y=\"Pclass\")","9b1d024c":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"male\"], hue=\"Survived\",y=\"Sex\")","8522dbc0":"plt.figure(figsize=(16,16))\nsns.countplot(data=train[train[\"Sex\"] == \"male\"], hue=\"Survived\",y=\"Age\")","214fd646":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"male\"], hue=\"Survived\",y=\"SibSp\")","03e9cd78":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"male\"], hue=\"Survived\",y=\"Parch\")","03c8a695":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"male\"], hue=\"Survived\",y=\"CategFare\")","eaf9332d":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"male\"], hue=\"Survived\",y=\"EmbarkedNumerico\")","96120feb":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"female\"], hue=\"Survived\",y=\"Pclass\")","32455342":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"female\"], hue=\"Survived\",y=\"Sex\")","b31543e9":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"female\"], hue=\"Survived\",y=\"Age\")","8b348ee3":"plt.figure(figsize=(16,8))\nsns.countplot(data=train[train[\"Sex\"] == \"female\"], hue=\"Survived\",y=\"SibSp\")","2bb5bade":"plt.figure(figsize=(16,8))\nplt.title(\"Sobrevivencia por SibSpSex\")\nsns.countplot(data=train, hue=\"Survived\",y=\"SibSpSex\")","4eee44b9":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de Idade por Local de Embarque\")\nsns.countplot(data=train, hue=\"GrupoAge\",y=\"Embarked\")","a1180d74":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de Survived por Pclass\")\nsns.countplot(data=train, hue=\"Survived\",y=\"Pclass\")","2642dd47":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de Survived por Embarked\")\nsns.countplot(data=train, hue=\"Survived\",y=\"Embarked\")","6937fa1c":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de idade por Survived\")\nsns.countplot(data=train, hue=\"Survived\",y=\"GrupoAge\")","ca7b3a6b":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de Parch por Survived\")\nsns.countplot(data=train, hue=\"Survived\",y=\"Parch\")","ddc0ecd9":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de SibSp por Survived\")\nsns.countplot(data=train, hue=\"Survived\",y=\"SibSp\")","ce4eaa64":"plt.figure(figsize=(16,16))\nplt.title(\"Idade por Survived\")\nsns.countplot(data=train, hue=\"Survived\",y=\"Age\")","e151df5e":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de Survived por Sex\")\nsns.countplot(data=train, hue=\"Survived\",y=\"Sex\")","4969add4":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de Survived por Embarked\")\nsns.countplot(data=train, hue=\"Survived\",y=\"Pclass\")","076988ce":"plt.figure(figsize=(16,8))\nplt.title(\"Grupo de Survived por CategFare\")\nsns.countplot(data=train, hue=\"Survived\",y=\"CategFare\")","c645909e":"X = train[variaveis]\ny = train[\"Survived\"]\nX_prev = test[variaveis]","ad519d6b":"X = X.fillna(-1)\nX_prev = X_prev.fillna(-1)","a75ab94b":"titanic_model = RandomForestClassifier(n_estimators=100,n_jobs=1,random_state=0)","524ec48c":"titanic_model.fit(X,y)","738d5494":"p = titanic_model.predict(X_prev)","ce66aad9":"p","188f1f05":"sub = pd.Series(p, index=test['PassengerId'],name=\"Survived\" )\nsub.to_csv(\"\/kaggle\/working\/modelo_titanic_29.csv\")","c4a53d7a":"# Machine Learning\n\nComo dito anteriormente, somos 2 estudantes buscando aprofundar nossos conhecimentos em machine learning e data science.\nSendo assim, vamos a parte que interessa","77c92ec2":"O gigantesco array visto ai encima \u00e9 o resultado da predi\u00e7\u00e3o. Para submeter ao kaggle, precisamos formata-lo, de modo que o mesmo fa\u00e7a parte de uma coluna, chamada de \"Survived\", juntamente com o \"PassengerId\" como index","77b45945":"### Hist\u00f3rico de Vers\u00f5es\nV1 - 01\/06\/2020","ecfc0a0a":"Por\u00e9m, para utilizar-mos a RandomForest, precisamos de dados num\u00e9ricos, e, como \u00e9 poss\u00edvel de se perceber, Sex e Embarked s\u00e3o campos textuais. Sendo assim, vamos criar 2 fun\u00e7\u00f5es que visam transforma-los em n\u00fameros. Note que, isso s\u00f3 \u00e9 recomendado porque n\u00e3o existem campos vazios na coluna \"Sex\" e nem na coluna \"Embarked\"<br>\n<br>\nPara a coluna \"Age\", vamos fazer um pequeno teste, imputando o valor mediano nos campos vazios","3ad37566":"# Observa\u00e7\u00f5es e Teorias\n\n-Provavelmente mulheres e crian\u00e7as foram evacuadas do navio antes dos homens, o que sugere que a vari\u00e1vel de idade (<b>Age<\/b>) e de sexo (<b>Sex<\/b>) podem ser importantes\n\n-Um dos motivos que gerou indigna\u00e7\u00e3o ap\u00f3s o naufr\u00e1gio do Titanic foi o descaso para com as classes socioecon\u00f4micas inferiores, o que sugere que mais indiv\u00edduos das classes altas sobreviveram, tornando <b>Pclass<\/b> uma vari\u00e1vel interessante\n\n-Existe uma boa chance de indiv\u00edduos que embarcaram em localidades diferentes terem sido alocados em cabines em regi\u00f5es diferentes, o que sugere que talvez algum dos locais de embarque estivesse mais pr\u00f3ximo de botes ou em uma regi\u00e3o que demorou para afundar ou quebrar no navio, atribuindo assim valor a variavel <b>Embarked<\/b>\n\n-Possuir pais ou filhos presentes tamb\u00e9m no navio pode implicar em a pessoa ser crian\u00e7a ou estar acompanhada de crian\u00e7as. Tamb\u00e9m \u00e9 possivel que, indiv\u00edduos sem dados de idade mas com dados de familia e sobrevivencia tem maior chance de serem crian\u00e7as","037aea81":"# Gr\u00e1ficos - Mulheres","ebde3108":"# Definindo Vari\u00e1veis\n<body style=\"background-color:blue\">\nAp\u00f3s uma breve an\u00e1lise, escolhemos algumas vari\u00e1veis que apresentam maior potencial<br>\n-Sex<br>\n-Age<br>\n-Embarked<br>\n<br>\n<br>\n\u00c9 poss\u00edvel perceber que a coluna Age apresenta campos vazios, sendo assim, vamos fazer um pequeno teste, imputando o valor mediano nos campos vazios\n<\/body>","f1d7a260":"# Definindo modelo e vari\u00e1veis de treino\n\nAgora que temos as colunas com as vari\u00e1veis desejadas, precisamos organiza-las em 2 vari\u00e1veis, sendo uma delas para o treinamento, e a outra com as respostas desse treinamento. Dessa forma, o modelo que iremos criar ter\u00e1 uma base de como deve se parecer certos dados para que eles resultem em certas respostas","771e931d":"### Importando os dados\n\nAqui importamos as bases de dados que ser\u00e3o utilizadas para treinar e testar o modelo, respectivamente","9b60d7dc":"Como conven\u00e7\u00e3o, utilizamos a vari\u00e1vel X para designar os dados para o calculo, y para designar as respostas corretas para esses calculos. X_prev age como a vari\u00e1vel dos dados do arquivo de teste, o qual vamos ter que descobrir, por meio do machine learning, quais os resultados corretos.\nVale ressaltar tamb\u00e9m que, algumas entradas relacionadas a idade (age) ainda precisam ser tratadas, uma vez que apresentam campos NaN. Faremos isso a seguir","b771208d":"# Graficos - Geral","1b7ee9a1":"# Treinando o Modelo\n\nAgora finalmente chegou a hora de treinar o modelo, em breve teremos um csv \"quentinho\" pra submiss\u00e3o","85eae8a3":"### Criando novas colunas\n\nAgora que criamos as fun\u00e7\u00f5es capazes de transformar os campos Sex em bin\u00e1rio e os campos Embarked em num\u00e9rico, vamos adicionar 2 colunas, com os valores transformados, nas tabelas de test e train","78ca4445":"### Averiguando os dados\n\nAqui optamos por expor algumas das informa\u00e7\u00f5es sobre as bases de dados, para que seja mais f\u00e1cil de se ter uma ideia de com o que estamos trabalhando","2dec8999":"# Contexto\n\nEsse \u00e9 um projeto de machine learning desenvolvido em dupla, sendo o primeiro projeto de ambos os membros. Com o objetivo de aprender sobre data science e machine learning, resolvemos nos unir e trabalhar em uma das competi\u00e7\u00f5es propostas pela Kaggle.\n\n\n#### Sobre o naufr\u00e1gio do Titanic\n\nO RMS Titanic, ou s\u00f3 Titanic, como \u00e9 popularmente conhecido, foi um navio de passageiros de origem brit\u00e2nica. Tido como \"inafund\u00e1vel\", foi projetado para ser o navio mais seguro de sua \u00e9poca, o que pode ter gerado demasiada seguran\u00e7a por parte de sua tripula\u00e7\u00e3o e piloto, uma vez que, em sua viagem inalgural, o Titanic encontrou seu tr\u00e1gico fim.\nNa noite de 14 de abril de 1912, ap\u00f3s se chocar com um iceberg, iniciou-se uma das maiores trag\u00e9dias conhecidas popularmente, o naufr\u00e1gio do titanic. \nParte do que comp\u00f4s sua trag\u00e9dia foi a aus\u00eancia de botes salva-vidas o suficiente para as pessoas a bordo (um total de 2208), o que causou indigna\u00e7\u00e3o nos sobreviventes, e foi o estopim para a cria\u00e7\u00e3o, em 1914, da Conven\u00e7\u00e3o Internacional para a Salvaguarda da Vida Humana no Mar(SOLAS, em ingl\u00eas).\nAtualmente, o Titanic encontra-se no fundo do Atl\u00e2ntico Norte, em constante corros\u00e3o causada pelo sal presente na \u00e1gua.","7e4fdc8e":"# Gr\u00e1ficos - Homens","3e36ecac":"Modelo treinado!<br>\nVamos agora predizer X_prev","19a5fd5e":"### Importando as bibliotecas\n\nIniciamos com a importa\u00e7\u00e3o das bibliotecas que ser\u00e3o utilizadas no projeto de machine learning","8328df78":"E por fim, instanciamos o modelo. RandomForestClassifier \u00e9 o objeto que estamos utilizando para fazer nossa predi\u00e7\u00e3o."}}