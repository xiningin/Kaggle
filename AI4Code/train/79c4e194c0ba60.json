{"cell_type":{"04bb212b":"code","a9cc8966":"code","eb2a3cd2":"code","5d582d58":"code","e3f14204":"code","4d67a3e4":"code","e47c1118":"code","ec2e2a36":"code","e6112688":"code","336bae89":"code","7bcd73bf":"code","d4d08036":"code","e1b5e567":"code","ffbaaab8":"code","7b128ce4":"code","627dc3fd":"code","9b11fd44":"code","254392e4":"code","6ee50716":"code","ecf295ba":"code","43426a57":"code","d51fdc54":"code","301a9f9d":"code","27d24776":"code","9b97e0f6":"code","571406cf":"code","50c19e55":"code","93239fd3":"code","09d8f574":"code","68dc651b":"code","be706d0f":"code","3468cc43":"code","ad9880f4":"code","1e16dcc3":"code","39ff07c8":"code","74c37e35":"code","5e7b985d":"code","ea1e2e47":"code","3fa10b97":"code","7e04515f":"code","3dae8561":"code","b19567fb":"code","ac4ec646":"code","b99eecbb":"code","0800c42f":"code","7b3f1288":"code","edf7fe79":"code","09c6afbd":"code","59b98fb1":"code","7c98bf5a":"code","85ccc4c4":"code","342368dc":"code","84e75eaa":"code","54e5e0a5":"code","0737294b":"code","065aba8e":"code","d533a83a":"code","62eb6189":"code","b7d3ec32":"code","51dc24eb":"code","74ec1d8c":"code","854f1bc0":"code","a570ab09":"code","620396b0":"code","ff9d4b2e":"code","060773a9":"code","5fa17eba":"code","8b040f70":"code","5e166125":"code","b89f122a":"code","2797997e":"code","e408c4b9":"code","84c21884":"code","7888ffe2":"code","1360d9a4":"code","b6d50f2e":"code","265421c9":"code","53963435":"code","6497d979":"code","457d9f20":"code","bdb6b8a4":"code","a90c902a":"code","92744ced":"code","ad9a770b":"code","7e02656e":"code","eb5134dd":"code","b50b4246":"code","1c4c7289":"code","46b66c23":"markdown","0bde5c03":"markdown","196286a8":"markdown","d1907e11":"markdown","951254be":"markdown","bdef9bd8":"markdown","c5422a13":"markdown","3646639b":"markdown","3891ecab":"markdown","390d1514":"markdown","4e4d7c9b":"markdown","c0919890":"markdown","9e72ecea":"markdown","3033c4a9":"markdown","164013c7":"markdown","34fbeddf":"markdown","1ac66fe7":"markdown","ebf909e6":"markdown","f4e27d67":"markdown","8fdb9de2":"markdown","a642c7fa":"markdown","3d63fda6":"markdown","7eaaa3d4":"markdown","e37ffe4b":"markdown","fcd30e25":"markdown","22999da3":"markdown","82aecc20":"markdown","9de50b16":"markdown","5c5d82d9":"markdown","66c23d90":"markdown","cf2b60a2":"markdown","9ce53eae":"markdown","83148724":"markdown","4040a1e1":"markdown","a68df575":"markdown","bcfc01f7":"markdown","f80990aa":"markdown","1e519d82":"markdown","3ddad21a":"markdown","fb1233fd":"markdown","3d5be88b":"markdown","9d897843":"markdown","2cd4b9a7":"markdown","8e4ce1af":"markdown","697c2a81":"markdown","d74d1d35":"markdown","a8917ed9":"markdown","d1266bce":"markdown","6f398808":"markdown","7e070f85":"markdown","d4b7f1e0":"markdown","3d359b05":"markdown","72de38f2":"markdown","9347956d":"markdown","b3ecf7a0":"markdown","cb33897d":"markdown","eb8a918e":"markdown","d738e63d":"markdown","afe233c4":"markdown","f023754b":"markdown","2b739920":"markdown","bdead04a":"markdown","14a68caa":"markdown","43007478":"markdown","2d8de75e":"markdown","29d59bb5":"markdown","6cf715c6":"markdown","5544c7ab":"markdown","8697f4e9":"markdown","7130c16c":"markdown","7fd7656c":"markdown","b03e5c23":"markdown","d64441dd":"markdown","9bbe41ba":"markdown","077f561c":"markdown","d5083805":"markdown"},"source":{"04bb212b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom IPython.display import Image\nimport missingno as msno","a9cc8966":"pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.float_format', lambda x: '%.3f' % x)\npd.set_option('display.width', 500)","eb2a3cd2":"df_=pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')","5d582d58":"df=df_.copy()","e3f14204":"df.sample(10)","4d67a3e4":"print(\"The dataset has {} rows and {} columns.\".format(df.shape[0],df.shape[1]),end=\"\\n\\n\")\nprint(\"Names of variables in the dataset:\" )\nfor col in df.columns:\n      print(col,end=\"  \")\nprint(end=\"\\n\\n\")\nprint(\"Index information in the dataset:\" )\nprint(df.index,end=\"\\n\\n\")\nprint(\"Data type of variables in dataset :\")\nprint(df.dtypes,end=\"\\n\\n\")\nprint(\"Missing values of variables in the dataset: \")\nprint(df.isnull().sum(),end=\"\\n\\n\")\nprint(\"The total number of missing values in the dataset: \")\nprint(df.isnull().sum().sum(),end=\"\\n\\n\")\nprint(\"Memory usage of label values (index\/columns) in the dataset: \" )\nprint(df.memory_usage())","e47c1118":"def grab_col_names(dataframe,cat_th=10,car_th=20):\n    #Kategorik degiskenler \n    cat_cols=[i for i in df.columns if df[i].dtypes=='O']\n    num_but_cat=[i for i in df.columns if df[i].dtypes!='O' and df[i].nunique()<cat_th]\n    cat_but_car=[i for i in df.columns if df[i].dtypes=='O' and df[i].nunique()>car_th]\n    cat_cols=cat_cols+num_but_cat\n    cat_cols=[i for i in cat_cols if i not in cat_but_car]\n    #Sayisal Degiskenler\n    num_cols=[i for i in df.columns if df[i].dtypes!='O']\n    num_cols=[i for i in num_cols if i not in num_but_cat]\n    \n    print('Number of Observations : {}'.format(dataframe.shape[0]))\n    print('Number of Variables    : {}'.format(dataframe.shape[1]))\n    print('Number of Categorical Variables : {}'.format(len(cat_cols)))\n    print('Number of Numerical Variables : {}'.format(len(num_cols)))\n    print('Number of Numerical but Categorical Variables : {}'.format(len(num_but_cat)))\n    print('Number of Categorical but Cardinal Variables : {}'.format(len(cat_but_car)))\n    \n    return cat_cols,num_cols,cat_but_car\n                 ","ec2e2a36":"cat_cols,num_cols,cat_but_car=grab_col_names(df)\nprint(cat_cols)\nprint(num_cols)\nprint(cat_but_car)","e6112688":"df[num_cols].describe().T","336bae89":"imposible_conditions=['Glucose','BloodPressure','SkinThickness','Insulin','BMI']\nfor i in imposible_conditions:\n    print(i[0]+str(df[i].sort_values().loc[df[i].sort_values().values!=0].values[:10]))","7bcd73bf":"for i in cat_cols:\n    print(df[i].value_counts())\n    df[i].value_counts().plot(kind='pie',y='points',autopct='%1.1f%%')","d4d08036":"for i in num_cols:\n    print(df.groupby('Outcome').agg({i:'mean'}),end='\\n\\n\\n') \n    df.groupby('Outcome').agg({i:'mean'}).plot(kind='bar',rot=0)\n    plt.show()","e1b5e567":"df.corr()","ffbaaab8":"plt.figure(figsize=(16,10))\nsns.heatmap(df.corr(),annot=True)","7b128ce4":"df.corr()['Outcome'].nlargest(len(df.corr().columns))[1:]","627dc3fd":"print('Missing Number of Observation Units in the Data Set  : {}'.format(df.isnull().sum().sum()))","9b11fd44":"imposible_conditions","254392e4":"for i in imposible_conditions:\n    print(\"There are \"+str(len(df.loc[(df[i]==0),i]))+\" amounts of value 0 in \"+i+\" variable.\")    ","6ee50716":"for i in imposible_conditions:\n    df.loc[(df[i]==0),i]=np.NaN","ecf295ba":"print('Missing Number of Observation Units on the basis of Variables in the Data Set :'+\"\\n\"+str(df.isnull().sum()),end='\\n\\n\\n')\nprint(df[imposible_conditions].min())","43426a57":"msno.heatmap(df)","d51fdc54":"#df.dropna(inplace=True)","301a9f9d":"df.groupby('Outcome')[imposible_conditions].mean()","27d24776":"for i in imposible_conditions:\n    df.loc[(df[i].isnull()) & (df['Outcome']==0),i] = df.groupby('Outcome')[i].mean()[0]\n    df.loc[(df[i].isnull()) & (df['Outcome']==1),i] = df.groupby('Outcome')[i].mean()[1]","9b97e0f6":"def outlier_thresholds(dataframe,col,q1=0.25,q3=0.75):\n    quartile1=dataframe[col].quantile(q1)\n    quartile3=dataframe[col].quantile(q3)\n    inter_quartile_range=quartile3-quartile1\n    down_limit=quartile1-(1.5*(inter_quartile_range))\n    up_limit=quartile3 +(1.5*(inter_quartile_range))\n    \n    return down_limit,up_limit ","571406cf":"for i in num_cols:\n    print(i+\":\"+str(outlier_thresholds(df,i)))","50c19e55":"def check_outlier(dataframe,col):\n    down_limit,up_limit=outlier_thresholds(dataframe,col)\n    if dataframe[((dataframe[col]<down_limit) | (dataframe[col]>up_limit))].any(axis=None):\n        return True\n    else:\n        return False","93239fd3":"for i in num_cols:\n    print(i+\":\"+str(check_outlier(df,i)))","09d8f574":"def grab_outliers(dataframe,col,table=False,index=False):\n    down,up=outlier_thresholds(dataframe,col)\n    if table:\n        if dataframe[((dataframe[col]<down) | (dataframe[col]>up))].any(axis=None):\n            print(dataframe[((dataframe[col]<down) | (dataframe[col]>up))])\n    if index:\n        outliers_index=dataframe[((dataframe[col]<down) | (dataframe[col]>up))].index\n        return outliers_index","68dc651b":"for i in num_cols:\n    print(i+\": \"+str(grab_outliers(df,i,False,True)),end='\\n\\n\\n')\n    outliers_index=grab_outliers(df,i,False,True)\n    print(\"Outliers :\"+\"\\n\"+str(df[i][outliers_index]),end='\\n\\n\\n')\n                                 ","be706d0f":"def replace_with_thresholds(dataframe,col):\n    down_limit,up_limit=outlier_thresholds(dataframe,col)\n    dataframe.loc[(dataframe[col]<down_limit),col]=down_limit\n    dataframe.loc[(dataframe[col]>up_limit),col]=up_limit","3468cc43":"for i in num_cols:\n    print(i+\":\"+str(check_outlier(df,i)))","ad9880f4":"for i in num_cols:\n    replace_with_thresholds(df,i)","1e16dcc3":"for i in num_cols:\n    print(i+\":\"+str(check_outlier(df,i)))","39ff07c8":"plt.figure(figsize=(16,10))\nsns.heatmap(df.corr(),annot=True)","74c37e35":"df['Categorical_Age']=pd.cut(df['Age'],bins=[20,35,50,df['Age'].max()],labels=['young','mature','senior'])","5e7b985d":"df.groupby('Categorical_Age')['Age'].describe()","ea1e2e47":"df['Categorical_BMI']=pd.cut(df['BMI'],bins=[0,18.4,24.9,29.9,34.9,39.9,df['BMI'].max()]\n                             ,labels=['Under_weight','Normal_weight','Pre-obesity','Obesity_class_I','Obesity_class_II',\n                                      'Obesity_class_III'])\n","3fa10b97":"df.groupby('Categorical_BMI')['BMI'].describe()","7e04515f":"df['Categorical_Glucose']=pd.cut(df['Glucose'],bins=[0,140,200,df['Insulin'].max()]\n                                 ,labels=['Normal','Prediabetes','Diabetes'])","3dae8561":"df.groupby('Categorical_Glucose')['Glucose'].describe()","b19567fb":"df['Categorical_BloodPressure'] = pd.cut(df['BloodPressure'], bins = [0,80, 90, 120,200], \n                                         labels=[\"Normal\", \"Hypertension_Stage1\",\"Hypertension_Stage2\", \n                                          \"Hypertensive_Crisis\"])","ac4ec646":"df.groupby('Categorical_BloodPressure')['BloodPressure'].describe()","b99eecbb":"df['Categorical_Insulin']=pd.cut(df['Insulin'],bins=[0,100,126,df['Insulin'].max()],\n                                 labels=['Low_Anormal','Normal','High_Anormal'])","0800c42f":"df.groupby('Categorical_Insulin')['Insulin'].describe()","7b3f1288":"from sklearn.preprocessing import StandardScaler","edf7fe79":"scaler=StandardScaler()","09c6afbd":"df['Feature_Coef']=1\nfor i in df.columns:\n    if not i.startswith('Categorical') and i!='Outcome':\n        df[['Feature_Coef']]*=scaler.fit_transform(df[[i]])","59b98fb1":"df['Pregnancy_Per_Glucose']=df['Pregnancies']\/df['Glucose']","7c98bf5a":"df.groupby('Pregnancies')['Pregnancy_Per_Glucose'].mean()","85ccc4c4":"df['Insulin_Per_Pregnancy']=df['Insulin']\/df['Pregnancies']","342368dc":"with pd.option_context('mode.use_inf_as_na', True):\n    df = df.dropna(subset=['Insulin_Per_Pregnancy'], how='all')","84e75eaa":"df.groupby('Pregnancies')['Insulin_Per_Pregnancy'].describe()","54e5e0a5":"df['BMI_Per_SkinThickness']=df['BMI']\/df['SkinThickness']","0737294b":"df.groupby('Categorical_BMI')['BMI_Per_SkinThickness'].describe()","065aba8e":"df['BloodPressure_Per_BMI']=df['BloodPressure']\/df['BMI']","d533a83a":"df.groupby('Categorical_BMI')['BloodPressure'].describe()","62eb6189":"df['Glucose_per_BMI']=df['Glucose']\/df['BMI']","b7d3ec32":"df.groupby('Categorical_BMI')['Glucose'].describe()","51dc24eb":"df['BloodPressure_per_Glucose']=df['BloodPressure']\/df['Glucose']","74ec1d8c":"df.groupby('Categorical_Glucose')['BloodPressure'].describe()","854f1bc0":"df['BMI_Per_Age']=df['BMI']\/df['Age']","a570ab09":"df.groupby('Categorical_BMI')['Age'].describe()","620396b0":"df['Glucose_Per_Age']=df['Glucose']\/df['Age']","ff9d4b2e":"df.groupby('Categorical_Glucose')['Age'].describe()","060773a9":"df['Insulin_Per_Age']=df['Insulin']\/df['Age']","5fa17eba":"df.groupby('Categorical_Insulin')['Age'].describe()","8b040f70":"cat_cols,num_cols,cat_but_car=grab_col_names(df)","5e166125":"binary_columns=[i for i in cat_cols if df[i].nunique()==2]\nbinary_columns","b89f122a":"from sklearn.preprocessing import LabelEncoder","2797997e":"lbe=LabelEncoder()","e408c4b9":"df['Categorical_Glucose']=lbe.fit_transform(df['Categorical_Glucose'])","84c21884":"df['Categorical_Glucose'].unique()","7888ffe2":"one_hot_cols=[i for i in cat_cols if 10>=df[i].nunique()>2]\none_hot_cols","1360d9a4":"def one_hot_encoder(dataframe,col):\n    dataframe=pd.get_dummies(data=dataframe,columns=one_hot_cols,drop_first=True)\n    return dataframe","b6d50f2e":"df=one_hot_encoder(df,one_hot_cols)","265421c9":"df.head()","53963435":"cat_cols,num_cols,cat_but_car=grab_col_names(df)","6497d979":"def rare_analyser(dataframe, target, cat_cols):\n    for col in cat_cols:\n        print(col, \":\", len(dataframe[col].value_counts()))\n        print(pd.DataFrame({\"COUNT\": dataframe[col].value_counts(),\n                            \"RATIO\": dataframe[col].value_counts() \/ len(dataframe),\n                            \"TARGET_MEAN\": dataframe.groupby(col)[target].mean()}), end=\"\\n\\n\\n\")\n\nrare_analyser(df, \"Outcome\", cat_cols)","457d9f20":"from sklearn.preprocessing import StandardScaler","bdb6b8a4":"num_cols","a90c902a":"scaler=StandardScaler()","92744ced":"df[num_cols]=scaler.fit_transform(df[num_cols])","ad9a770b":"corr_Series=df.corr()['Outcome'].nlargest(len(df.columns))\ncorr_Series","7e02656e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plot\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier","eb5134dd":"primitive_success=[]\nmodel_names=[]\ny=df['Outcome']\nX=df.drop('Outcome',axis=1)\n# Orjinal Veri Setinden E\u011fitim Seti ve Test Seti Olu\u015fturma\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=42)\n\ndef ML(algName):\n\n    # Model Olusturma \/ E\u011fitme\n    model=algName().fit(X_train,y_train)\n    model_name=algName.__name__\n    model_names.append(model_name)\n    # Tahmin\n    y_pred=model.predict(X_test)\n    # ilkel-Ba\u015far\u0131 \/ Do\u011frulama Skoru\n    from sklearn.metrics import accuracy_score\n    primitiveSuccess=accuracy_score(y_test,y_pred)\n    primitive_success.append(primitiveSuccess)\n    return  primitive_success,model_names,model\n","b50b4246":"models=[KNeighborsClassifier,SVC,MLPClassifier,DecisionTreeClassifier,\n        RandomForestClassifier,GradientBoostingClassifier,XGBClassifier,LGBMClassifier]\nfor i in models:\n    ML(i)\n\n\nclassification_Data=pd.DataFrame( primitive_success,columns=['accuracy_Score'],index=[model_names]).sort_values(by='accuracy_Score',ascending=False)\nclassification_Data\n\n","1c4c7289":"primitive_success=[]\nmodel_names=[]\ny=df['Outcome']\nX=df.drop('Outcome',axis=1)\n# Orjinal Veri Setinden E\u011fitim Seti ve Test Seti Olu\u015fturma\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=42)\n\nmodel=XGBClassifier().fit(X_train,y_train)\n\ndef plot_importance(model, features, num=len(X), save=False):\n    feature_imp = pd.DataFrame({'Value': model.feature_importances_, 'Feature': features.columns})\n    plt.figure(figsize=(10, 10))\n    sns.set(font_scale=1)\n    sns.barplot(x=\"Value\", y=\"Feature\", data=feature_imp.sort_values(by=\"Value\",\n                                                                      ascending=False)[0:num])\n    plt.title('Features')\n    plt.tight_layout()\n    plt.show()\n    if save:\n        plt.savefig('importances.png')\n\n\nplot_importance(model, X_train)","46b66c23":"#### Detecting the Presence of Outlier Observation Units","0bde5c03":"### Variables Classification","196286a8":"- Since glucose permeability and intake is high during pregnancy, gestational diabetes occurs and increases over time.\n  Therefore, if the number of pregnancies increases\n  * glucose increases\n  * insulin resistance is also reduced\n    \n\n- As the glucose value increases, the mass index also increases. The increase in the mass index occurs as a result of the increase in weight.\n  If weight increases, cholesterol increases, hardening occurs in the veins, so blood pressure also increases.\n  \n- If the body mass index increases, the skin thickness also increases, and even vascular access cannot be found.\n   \n- As a person gets older, his vital functions also slow down, so the pancreas becomes unable to break down glucose with the hormone insulin.\n- As the age progresses, the energy taken with glucose cannot be burned because the mobility is reduced, so an increase in the body mass index is           observed. ","d1907e11":"As the number of pregnancies increases, insulin resistance will decrease. ","951254be":"### Encoding","bdef9bd8":"#### The Relationship of the Target Variable with Other Variables ","c5422a13":"# Let's Get to Know the Variables ","3646639b":"Insulin and SkinTickness variables have missing observation units that occur simultaneously in a high correlation. ","3891ecab":"Since the outlier observation units are reassigned to the closest threshold value, the proportionality may be distorted after the saturation point. ","390d1514":"After standardizing each variable, I want to generate a coefficient as a result of their interaction with each other. ","4e4d7c9b":"![z_skoru.PNG](attachment:1c1b14fb-4f71-42c7-bafb-655de32511d4.PNG)","c0919890":"I accepted min values of the observation unit of each variable as 0 in order not to reject the hypothesis I created. So, I wanted to examine the 10 smallest min values.","9e72ecea":"#### Categorical BMI","3033c4a9":"During pregnancy, glucose permeability and glucose uptake will increase and gestational diabetes occurs. ","164013c7":"# Loading Related Libraries ","34fbeddf":"### Outlier Observation Unit Analysis ","1ac66fe7":"As can be seen, the values are quite far from zero, so the 0 state of the observation units is evaluated as NaN. ","ebf909e6":"#### BloodPressure_per_Glucose","f4e27d67":"#### Categorical Blood Pressure","8fdb9de2":"As the glucose value increases, the mass index also increases. The increase in the mass index occurs as a result of the increase in weight. If weight increases, cholesterol increases, hardening occurs in the veins.Therefore, blood pressure also increases. ","a642c7fa":"#### Calculating Threshold Values for Outlier Observations as Lower Limit and Upper Limit ","3d63fda6":"#### Feature_Coef","7eaaa3d4":"#### Analysis of the Target Variable with Numerical Variables ","e37ffe4b":"### Examining Descriptive Statistics of Numerical Variables ","fcd30e25":"### Feature Engineering ","22999da3":"# Dataset Story ","82aecc20":"If the body mass index increases, so does the glucose. ","9de50b16":"Outlier observation units:\n\n* It is deleted from the data set by the drop method.\n* It is reassigned to the closest threshold value. ","5c5d82d9":"Using data from the World Health Organization\n* I will create new variables by dividing numeric variables into segments\n* I will create new variables according to the logical relations between the variables. ","66c23d90":"### Examination of Missing Observation Units ","cf2b60a2":"#### Glucose_Per_Age","9ce53eae":"#### Insulin_Per_Pregnancy","83148724":"![OGTT.png](attachment:de83d98d-f3ad-4ed1-a374-fc92595f1209.png)","4040a1e1":"![box-plot.png](attachment:98f48978-66f4-4494-b529-becd69882638.png)","a68df575":"If the body mass index increases, the skin thickness will also increase.","bcfc01f7":"#### Categorical \u0130nsulin","f80990aa":"#### Rare Encoder","1e519d82":"The dataset is part of the large dataset held at the National Institutes of Diabetes-Digestive-Kidney Diseases in the USA.\n\nData used for diabetes research on Pima Indian women aged 21 and over living in Phoenix, the 5th largest city of the State of Arizona in the USA. \n\nThe target variable is specified as \"outcome\"\n\n1 means the diabetes test is positive and 0 means negative. ","3ddad21a":"#### Categorical Glucose","fb1233fd":"### Model","3d5be88b":"#### BMI_Per_SkinThickness","9d897843":"#### Solving Outlier Observation Units Problems ","2cd4b9a7":"NOTE:\n\nSince missing observation units are expressed with zero, if I perform the analysis of outlier observation units first, there will be variables that accept zero as outlier observation units. Thus, instead of NaN, the lower bound or upper bound value in the reassignment method will be assigned to the nearest threshold value.","8e4ce1af":"When the correlation is examined in case of missing observation units and outliers:\n\n* There is a high correlation between the age of women and the number of conceptions. \n  As a woman's age increases, so does the number of times she gets pregnant.\n  \n* A high correlation relationship between glucose and diabetes\n  The higher the glucose, the higher a woman's rate of diabetes.\n  \n* There is a high correlation between insulin and the skin thickness. \n","697c2a81":"### Variables and Significance Levels ","d74d1d35":"#### Medical Informations\n","a8917ed9":"- When glucose increases, weight gain occurs, so body mass index increases.\n- Weight gain causes hardening of the arteries and cholesterol occurs.\n- Cholesterol also increases blood pressure.\n- If glucose increases, blood pressure also increases indirectly. ","d1266bce":"The number of categorical variables is 1 in total.\nThe categorical variable is the target\/dependent ('Outcome') variable. ","6f398808":"### Feature Scaling ","7e070f85":"#### Re-assignment with Tresholds ","d4b7f1e0":"* If the Glucose value is 2 hours --> Fullness\n* If the Glucose value is 8 hours --> Fasting Status ","3d359b05":"# Let's Get To Know The Dataset. ","72de38f2":"After missing observation units were dropped and outlier observation units were assigned to the closest threshold values, the existing correlation structure changed. Correlation rates also increased.\n  \n \n* The correlation between the age of the women and the number of conceptions increased.\n* The correlation between Glucose and Diabetes has increased.\n* The correlation between Glucose and Diabetes has increased.\n* The correlation between skin thickness and body mass index increased.","9347956d":"#### Glucose_per_BMI","b3ecf7a0":"**My LinkedIn Address** :\n\n<a href=\"https:\/\/www.linkedin.com\/in\/ibrahim-turkoglu-102a3a211\/\">LinkedIn<\/a>\n\n**My Medium   Address** :\n\n<a href=\"https:\/\/medium.com\/@trkglu.ibrahim\">Medium<\/a>\n\n**My Github   Address** :\n\n<a href=\"https:\/\/github.com\/ibrahimturkoglu\">Github<\/a>\n","cb33897d":"#### One-Hot Encoding","eb8a918e":"![Pima Indian women_.jpg](attachment:9c0d0b61-4a7b-4093-af60-acec905e64aa.jpg)","d738e63d":"#### BloodPressure_Per_BMI","afe233c4":"![diastolic_blood_pressure.jpeg](attachment:a77165c3-7e77-446c-bfb1-efbb8b5de0a4.jpeg)","f023754b":"It can be interpreted as glucose, body mass index and age are the most important factors in the formation of diabetes. ","2b739920":"Observation Units to Be Considered:\n\nIn a human\n* the state of 0 glucose in the blood\n* the state of having a blood pressure of 0\n* the state of skin thickness being 0\n* body mass index being 0\n\nit is not possible. Therefore, we can interpret that 0-shaped observation units represent missing observation units. ","bdead04a":"### Correlation Analysis ","14a68caa":"#### Insulin_Per_Age","43007478":"I will not use a rare encoder because I cannot observe a class value with a rare frequency. ","2d8de75e":"#### Pregnancy_Per_Glucose","29d59bb5":"### Examining the Target Variable ","6cf715c6":"Per Age \n* Body Mass Index\n* Glucose\n* Insulin\n\nwill be interpreted as follows.\n\nAs the age progresses, the energy taken with glucose becomes impossible to burn because the mobility is reduced.\n\n- Glucose increases as it is stored and not burned.\n- Body mass index increases\n- Insulin resistance decreases. ","5544c7ab":"#### Label Encoding","8697f4e9":"#### BMI_Per_Age","7130c16c":"Comparing The Classes Of Categorical Variables With The Target Variable ","7fd7656c":"#### Accessing The Index Information Of Outlier Observation Units ","b03e5c23":"# Dataset Display Settings ","d64441dd":"To solve the problem of missing observation unit\n* Drop\n* Filling with a specific statistical metric\nmethods are used\n\nIf a product emerges when you want to develop a project in the health sector, in case of lack of data:\nThe method of filling in the missing data can lead to the diagnosis that will damage the vital functions of people if the variables have fragile classes.\nThe method of deleting the missing data will cause many data loss, but the product that will emerge will positively affect human life at the highest performance.\n\nThese are my thoughts. Since I will not produce a product as a result of my project or create any document that will affect the vital functions of individuals, I want to develop a model on excess data, so I prefer the method of filling in missing data with a statistical metric. ","9bbe41ba":"#### Categorical Age","077f561c":"### **If you want to interact with me\u00a0:**","d5083805":"![body_mass_index.png](attachment:b3c4273c-1713-4e18-a262-e790d6a35f86.png)"}}