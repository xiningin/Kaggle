{"cell_type":{"503335ef":"code","c6597703":"code","5b01acee":"code","2b40dfef":"code","f760f50c":"code","569649ef":"code","29f0eb76":"code","fc22f49d":"code","38afd8df":"code","d57d49da":"code","d0aa5a97":"code","84edb1e8":"code","8e3d27be":"code","c0d214a6":"code","edd37a1b":"code","662ef90c":"code","d0e6117f":"code","bc303f08":"code","5b93fa39":"code","6ee1d546":"code","70f7ddef":"code","67959c88":"code","96e45465":"code","55b5d00d":"code","5d70897e":"code","35c9e705":"code","301e1124":"code","31af5f6d":"code","14b299c2":"code","d1977eac":"code","1aa15a0b":"code","b6fd28bf":"code","6f42921b":"code","193e95db":"code","9012c945":"code","58833e17":"code","5e18673f":"code","f4d42703":"code","0ed8beb3":"code","c7732ce8":"code","84e5fa70":"code","3ba42f17":"code","4e124338":"code","c07d359b":"code","07c57186":"code","5827dfe1":"code","d126396d":"code","d93669db":"code","95d8e202":"code","1ce71d4a":"markdown","7c0087bd":"markdown","f5202fd4":"markdown","49ecc878":"markdown","9b6523fb":"markdown","f9418a37":"markdown","8eda88c3":"markdown","1048352c":"markdown","591ba233":"markdown","9311e115":"markdown","87b45d70":"markdown","5f631c4b":"markdown","ee3bf173":"markdown","6fd8b448":"markdown","34649cbb":"markdown","af9c69e6":"markdown","5a5ab07b":"markdown","c613a43f":"markdown","f07588f8":"markdown","82a98afd":"markdown","d3f6cbdc":"markdown","d5234e4a":"markdown","9506c25d":"markdown","20b61724":"markdown","9a1d359b":"markdown","a0adcb06":"markdown","e64c59b1":"markdown","9a8058eb":"markdown","c86bbbdb":"markdown","ea9f0846":"markdown","89d2a980":"markdown","1c09b5ef":"markdown","f4de644a":"markdown","751ecfaf":"markdown","043d35f5":"markdown","52f0df03":"markdown","b86004ab":"markdown","e924b4aa":"markdown","a7aac597":"markdown","c0178264":"markdown","2504e685":"markdown","8f052f6f":"markdown","39955345":"markdown","7e9c7dd4":"markdown","9228cd50":"markdown","7c8cf77e":"markdown","6d937b08":"markdown","489d5c1e":"markdown","b77185c8":"markdown","8de67516":"markdown","9aca5ff4":"markdown","0b8ae533":"markdown","37ed7ccc":"markdown"},"source":{"503335ef":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib\n# Visualisation libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport pycountry\npy.init_notebook_mode(connected=True)\nimport folium \nfrom folium import plugins","c6597703":"data=pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\",skiprows=1)\nprint(\"Number of columns in data:\",data.shape[1])\nprint(\"Number of rows in data:\",data.shape[0])\ndata.head(3)","5b01acee":"df = data[data.columns[1:21]] #we take subset of data\ndf.head()","2b40dfef":"colors1 = ['dodgerblue', 'plum', '#F0A30A','#8c564b'] \ncounts = data['What is your gender? - Selected Choice'].value_counts(sort=True)\nlabels = counts.index\nvalues = counts.values\n\npie = go.Pie(labels=labels, values=values, marker=dict(colors=colors1,line=dict(color='#000000', width=1)))\nlayout = go.Layout(title='Gender Distribution in 2020')\n\nfig = go.Figure(data=[pie], layout=layout)\npy.iplot(fig)","f760f50c":"fig = go.Figure(go.Bar(\n            y=df['What is your age (# years)?'].values,\n            x=df['What is your age (# years)?'].value_counts(sort=True).values,\n            orientation='h',\n            marker=dict(color='rgba(246, 78, 139, 0.6)',\n            line=dict(color='rgba(246, 78, 139, 1.0)', width=3))))\n                \nfig.show()","569649ef":"labels=['18-21',\n '22-24',\n '25-29',\n '30-34',\n '35-39',\n '40-44',\n '45-49',\n '50-54',\n '55-59',\n '60-69',\n '70+']\nvalues=df['What is your age (# years)?'].value_counts(sort=True).values\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","29f0eb76":"male = df[df['What is your gender? - Selected Choice']=='Man']\nfemale = df[df['What is your gender? - Selected Choice']=='Woman']\n\n\n\ncount_male = male['What is your age (# years)?'].value_counts().reset_index()\ncount_female = female['What is your age (# years)?'].value_counts().reset_index()\n\npie_men = go.Pie(labels=count_male['index'],values=count_male['What is your age (# years)?'],name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\n\npie_women = go.Pie(labels=count_female['index'],values=count_female['What is your age (# years)?'],name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'Age group', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Male', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='Female', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","fc22f49d":"male = df[df['What is your gender? - Selected Choice']=='Man']\nfemale = df[df['What is your gender? - Selected Choice']=='Woman']\n\n\n\ncount_male = male['For how many years have you been writing code and\/or programming?'].value_counts().reset_index()\ncount_female = female['For how many years have you been writing code and\/or programming?'].value_counts().reset_index()\n\npie_men = go.Pie(labels=count_male['index'],values=count_male['For how many years have you been writing code and\/or programming?'],name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\n\npie_women = go.Pie(labels=count_female['index'],values=count_female['For how many years have you been writing code and\/or programming?'],name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'Writing Code Experience', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Male', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='Female', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","38afd8df":"df['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'].value_counts()","d57d49da":"labels =['Masters degree','Bachelors degree','Doctoral degree','Some college\/university study without earning a bachelor\u00e2\u20ac\u2122s degree','Professional degree','I prefer not to answer','No formal education past high school']\nvalues =df['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'].value_counts()\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","d0aa5a97":"male=data[data['What is your gender? - Selected Choice']=='Man']\nfemale=data[data['What is your gender? - Selected Choice']=='Woman']","84edb1e8":"count_male = male['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'].value_counts().reset_index()\ncount_female = female['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'].value_counts().reset_index()\n\npie_men = go.Pie(labels=count_male['index'],values=count_male['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'],name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\n\npie_women = go.Pie(labels=count_female['index'],values=count_female['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'],name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'highest level of formal education', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Male', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='female', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","8e3d27be":"import plotly.express as px\ncountry_wise_distribution=data['In which country do you currently reside?'].value_counts()\nfig = px.choropleth(country_wise_distribution.values, locations=country_wise_distribution.index,\n                    locationmode='country names',\n                    color=country_wise_distribution.values,\n                    color_continuous_scale=px.colors.sequential.OrRd)\nfig.update_layout(title=\"Country_wise Distribution of Data Scientists\")\nfig.show()","c0d214a6":"topn=20\ncount_male = male['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_female = female['In which country do you currently reside?'].value_counts()[:topn].reset_index()\n\npie_men = go.Pie(labels=count_male['index'],values=count_male['In which country do you currently reside?'],name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\n\npie_women = go.Pie(labels=count_female['index'],values=count_female['In which country do you currently reside?'],name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'Country_wise_male and female ', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Male', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='female', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","edd37a1b":"from wordcloud import WordCloud\n\n# Thanks : https:\/\/www.kaggle.com\/aashita\/word-clouds-of-various-shapes ##\ndef plot_wordcloud(text, mask=None, max_words=200, max_font_size=100, figure_size=(14.0,16.0), \n                   title = None, title_size=40, image_color=False):\n    \n\n    wordcloud = WordCloud(background_color='black',max_words = max_words,\n                    max_font_size = max_font_size, \n                    random_state = 42,\n                    width=800, \n                    height=400,\n                    mask = mask)\n    wordcloud.generate(str(text))\n    \n    plt.figure(figsize=figure_size)\n    if image_color:\n        image_colors = ImageColorGenerator(mask);\n        plt.imshow(wordcloud.recolor(color_func=image_colors), interpolation=\"bilinear\");\n        plt.title(title, fontdict={'size': title_size,  \n                                  'verticalalignment': 'bottom'})\n    else:\n        plt.imshow(wordcloud);\n        plt.title(title, fontdict={'size': title_size, 'color': 'black', \n                                  'verticalalignment': 'bottom'})\n    plt.axis('off');\n    plt.tight_layout()  \n    \nplot_wordcloud(df[\"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\"], title=\"Word Cloud of current_role\")","662ef90c":"trace1 = go.Bar(\n                    x =df.index,\n                    y =df[\"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\"],\n                    orientation='h',\n                    marker = dict(color='skyblue',\n                                 line=dict(color='skyblue',width=1)),\n                    text = df.index)\ndata = [trace1]\nlayout = go.Layout(barmode = \"group\",title=\"current role_title\",width=800, height=500, \n                       xaxis= dict(title=\"current role_title\"),\n                       yaxis=dict(autorange=\"reversed\"),\n                       showlegend=False)\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","d0e6117f":"count_male = male['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].value_counts().reset_index()\ncount_female = female['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].value_counts().reset_index()\n\npie_men = go.Pie(labels=count_male['index'],values=count_male['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'],name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\n\npie_women = go.Pie(labels=count_female['index'],values=count_female['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'],name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'Current_Role', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Male', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='female', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","bc303f08":"labels = ['Python','R','SQL','C','C++','Java','Javascript','Julia','Swift','Bash','MATLAB','None','Other']\nvalues = [15530,4277,7535,3315,3827,3367,2995,262,198,1776,2217,206,1945]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","5b93fa39":"from plotly.subplots import make_subplots\nPython=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - Python']=='Python']\nR=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - R']=='R']\nC=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - C']=='C']\nSQL=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - SQL']=='SQL']\nJava=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - Java']=='Java']\nJavascript=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - Javascript']=='Javascript']\nJulia=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - Julia']=='Julia']\nSwift=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - Swift']=='Swift']\nMATLAB=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - MATLAB']=='MATLAB']\nBASH=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - Bash']=='Bash']\n          \n          \n          \ntopn = 7\ncount_Python = Python['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_R = R['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_C = C['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_SQL = SQL['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_Java = Java['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_Javascript = Javascript['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_Julia = Julia['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_Swift = Swift['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_MATLAB=MATLAB['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_Bash=BASH['In which country do you currently reside?'].value_counts()[:topn].reset_index()\n\n\n\n\n\nfig = make_subplots(rows=5, cols=5, specs=[[{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'},{'type':'domain'}],\n        [{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'},{'type':'domain'}],\n        [{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'},{'type':'domain'}],\n        [{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'},{'type':'domain'}],\n        [{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'},{'type':'domain'}]],subplot_titles=('Python',' ',' ',' ','R', \n                                                                                                                     \" \",'C',' ','SQL',' ',\n                                                                                                                     'Java',' ',' ',' ',' ','Java-script',\n                                                                                                                     ' ','Julia',' ','Swift','',\n                                                                                                                     'Matlab',' ',' ',' ','Bash'))\nfig.add_trace(go.Pie(labels=count_Python['index'], values=count_Python['In which country do you currently reside?'],name=\"Python\",hole=0.6,domain={'x': [0,0.46]}), 1, 1)\nfig.add_trace(go.Pie(labels=count_R['index'], values=count_R['In which country do you currently reside?'],name=\"R\",hole=0.4,domain={'x': [0.52,1]}), 1, 5)\nfig.add_trace(go.Pie(labels=count_C['index'], values=count_C['In which country do you currently reside?'],name=\"C\",hole=0.4,domain={'x': [0,0.46]}), 2, 2)\nfig.add_trace(go.Pie(labels=count_SQL['index'], values=count_SQL['In which country do you currently reside?'],name=\"SQL\",hole=0.4,domain={'x': [0,0.46]}), 2, 4)\nfig.add_trace(go.Pie(labels=count_Java['index'], values=count_Java['In which country do you currently reside?'],name=\"Java\",hole=0.5,domain={'x': [0.52,1]}),3, 1)\nfig.add_trace(go.Pie(labels=count_Javascript['index'], values=count_Javascript['In which country do you currently reside?'],name=\"J-script\",hole=0.4,domain={'x': [0,0.46]}),3, 5)\nfig.add_trace(go.Pie(labels=count_Julia['index'], values=count_Julia['In which country do you currently reside?'],name=\"Julia\",hole=0.4,domain={'x': [0,0.46]}),4, 2)\nfig.add_trace(go.Pie(labels=count_Swift['index'], values=count_Swift['In which country do you currently reside?'],name=\"Swift\",hole=0.4,domain={'x': [0,0.46]}),4, 4)\nfig.add_trace(go.Pie(labels=count_MATLAB['index'], values=count_MATLAB['In which country do you currently reside?'],name='MATLAB',hole=0.4,domain={'x': [0,0.46]}),5, 1)\nfig.add_trace(go.Pie(labels=count_Bash['index'], values=count_Bash['In which country do you currently reside?'],name=\"Bash\",hole=0.4,domain={'x': [0,0.46]}),5, 5)\n\n\n\nfig.update_traces(hole=.6, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Language popularity in different countries\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='', x=0.027, y=1.10, font_size=20, showarrow=False),\n                dict(text='', x=0.27, y=0.85, font_size=20, showarrow=False),\n                dict(text='', x=0.75, y=0.85, font_size=20, showarrow=False),\n                dict(text='', x=0.95, y=1.10, font_size=20, showarrow=False),\n                dict(text='', x=0.04, y=0.65, font_size=20, showarrow=False),\n                dict(text='', x=0.65, y=0.4, font_size=20, showarrow=False),\n                dict(text='', x=0.35, y=0.4, font_size=20, showarrow=False),\n                dict(text='', x=0.99, y=0.65, font_size=20, showarrow=False),\n                dict(text='', x=0.027, y=0.15, font_size=20, showarrow=False),\n                dict(text='', x=0.95, y=0.15, font_size=20, showarrow=False),])\nfig.show()\n\n\n","6ee1d546":"Python=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - Python']=='Python']\nR=df[df['What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice - R']=='R']\n \ntopn = 10\ncount_Python = Python['What is your gender? - Selected Choice'].value_counts()[:topn].reset_index()\ncount_R = R['What is your gender? - Selected Choice'].value_counts()[:topn].reset_index()\n\npie_python = go.Pie(labels=count_Python['index'],values=count_Python['What is your gender? - Selected Choice'],name=\"Python\",hole=0.4,domain={'x': [0,0.46]})\n\npie_r = go.Pie(labels=count_R['index'],values=count_R['What is your gender? - Selected Choice'],name=\"R\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'Python or R', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Python', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='R', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_python, pie_r], layout=layout)\npy.iplot(fig)","70f7ddef":"count_male = male['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'].value_counts().reset_index()\ncount_female = female['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'].value_counts().reset_index()\n\npie_men = go.Pie(labels=count_male['index'],values=count_male['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\n\npie_women = go.Pie(labels=count_female['index'],values=count_female['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'Language_selction', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Male', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='female', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","67959c88":"data=pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\")\ndata.drop(data.index[0],inplace=True)\ndf2=data","96e45465":"df2['Q37_Part_3'].replace({'Kaggle Learn Courses':'Kaggle'},inplace=True)\ndf2['Q37_Part_10'].replace({'University Courses (resulting in a university degree)':'University Courses'},inplace=True)\ndf2['Q37_Part_9'].replace({'Cloud-certification programs (direct from AWS, Azure, GCP, or similar)':'Cloud-certification'},inplace=True)","55b5d00d":"import operator\nmooc={} # dictionary is seems to be very helpful for analyzing where we have more than one choice for selection.\nfor i in range(10):\n    value=df2['Q37_Part_'+str(i+1)].value_counts().values[0]\n    text=df2['Q37_Part_'+str(i+1)].value_counts().index[0]\n    mooc[text]=value\nmooc=dict(sorted(mooc.items(), key=operator.itemgetter(1)))\n\nx=list(mooc.keys())\ny=list(mooc.values())\n\nfig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"xy\"},{\"type\": \"domain\"}]],\n)\n\nfig.add_trace(go.Bar(x=x, y=y),\n              row=1, col=1)\nfig.add_trace(go.Pie(labels=x,values=y),\n              row=1, col=2)\nfig.update_layout(height=600, showlegend=False)\nfig.show()","5d70897e":"wordcloud = WordCloud(background_color='white',\n                      width=1500,\n                      height=1000\n                      ).generate_from_frequencies(mooc)\nplt.figure(figsize=(9,6))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","35c9e705":"male = df2[df2['Q2']=='Man']\nfemale = df2[df2['Q2']=='Woman']\n#create dictionary here\nman={}\nwoman={}\nfor i in range(10):\n    count_male_value = male['Q37_Part_'+str(i+1)].value_counts().values[0]\n    count_male_index = male['Q37_Part_'+str(i+1)].value_counts().index[0]\n    count_female_value = female['Q37_Part_'+str(i+1)].value_counts().values[0]\n    count_female_index = female['Q37_Part_'+str(i+1)].value_counts().index[0]\n    man[count_male_index]=count_male_value\n    woman[count_female_index]=count_female_value\nman=dict(sorted(man.items(), key=operator.itemgetter(1))) #here key is mooc course name and value is how much male people took\nwoman=dict(sorted(woman.items(), key=operator.itemgetter(1)))\n\n#Visualization\nx_man=list(man.keys())\ny_man=list(man.values())\nx_woman=list(woman.keys())\ny_woman=list(woman.values())\n\n\npie_men = go.Pie(labels=x_man,values=y_man,name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\npie_women = go.Pie(labels=x_woman,values=y_woman,name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\nlayout = dict(title = 'MOOC_COURSESR_DISTRIBUTION', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Man', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='Woman', showarrow=False, font=dict(size=20)) ])\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","301e1124":"labels =df2['Q38'].value_counts().index\nvalues =df2['Q38'].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","31af5f6d":"x_man_data_analysis=male['Q38'].value_counts().index\ny_man_data_analysis=male['Q38'].value_counts().values\n\nx_woman_data_analysis=female['Q38'].value_counts().index\ny_woman_data_analysis=female['Q38'].value_counts().values\n\npie_man_data_analysis = go.Pie(labels=x_man_data_analysis,values=y_man_data_analysis,name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\npie_woman_data_analysis = go.Pie(labels=x_woman_data_analysis,values=y_woman_data_analysis,name=\"Woman\",hole=0.4,domain={'x': [0.46,1]})\nlayout = dict(title = 'Data Analysis Tools', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Man', showarrow=False, font=dict(size=20)),\n                             dict(x=0.75, y=0.5, text='Woman', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_man_data_analysis,pie_woman_data_analysis], layout=layout)\npy.iplot(fig)","14b299c2":"from plotly.subplots import make_subplots\nmedia,man_media,woman_media={},{},{}\nfor i in range(10):\n    values=df2['Q39_Part_'+str(i+1)].value_counts().values[0]\n    index=df2['Q39_Part_'+str(i+1)].value_counts().index[0]\n    media[index]=values\n    count_male_media_values=male['Q39_Part_'+str(i+1)].value_counts().values[0]\n    count_male_media_index=male['Q39_Part_'+str(i+1)].value_counts().index[0]\n    man_media[count_male_media_index]=count_male_media_values\n    count_female_media_values=female['Q39_Part_'+str(i+1)].value_counts().values[0]\n    count_female_media_index=female['Q39_Part_'+str(i+1)].value_counts().index[0]\n    woman_media[count_female_media_index]=count_female_media_values\nmedia=dict(sorted(media.items(), key=operator.itemgetter(1)))\nman_media=dict(sorted(man_media.items(), key=operator.itemgetter(1)))\nwoman_media=dict(sorted(woman_media.items(), key=operator.itemgetter(1)))\n\n#for media\nx_media_values=list(media.keys())\ny_media_values=list(media.values())\n#for man\nx_man_media=list(man_media.keys())\ny_man_media=list(man_media.values())\n#for woman\nx_woman_media=list(woman_media.keys())\ny_woman_media=list(woman_media.values())\n\n\nfig = make_subplots(\n    rows=2, cols=2,\n    specs=[[{\"type\": \"xy\"},{\"type\": \"domain\"}],[{\"type\": \"domain\"},{\"type\": \"domain\"}]],\n)\n\nfig.add_trace(go.Bar(x=x_media_values, y=y_media_values),\n              row=1, col=1)\nfig.add_trace(go.Pie(labels=x_media_values,values=y_media_values),\n              row=2, col=2)\nfig.update_layout(height=800, showlegend=False)\nfig.show()","d1977eac":"pie_men_media = go.Pie(labels=x_man_media,values=y_man_media,name=\"Men\",hole=0.4,domain={'x': [0,0.46]})\npie_women_media = go.Pie(labels=x_woman_media,values=y_woman_media,name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\nlayout = dict(title = 'Media', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Man', showarrow=False, font=dict(size=20)),\n                             dict(x=0.78, y=0.5, text='Woman', showarrow=False, font=dict(size=20)) ])\nfig = dict(data=[pie_men_media, pie_women_media], layout=layout)\npy.iplot(fig)","1aa15a0b":"public_share_man,public_share_woman={},{}\nfor i in range(8):\n    values_male=male['Q36_Part_'+str(i+1)].value_counts().values[0]\n    index=male['Q36_Part_'+str(i+1)].value_counts().index[0]\n    values_female=female['Q36_Part_'+str(i+1)].value_counts().values[0]\n    index=female['Q36_Part_'+str(i+1)].value_counts().index[0]\n    public_share_man[index]=values_male\n    public_share_woman[index]=values_female\npublic_share_man=dict(sorted(public_share_man.items(),key=operator.itemgetter(1)))\npublic_share_woman=dict(sorted(public_share_woman.items(),key=operator.itemgetter(1)))","b6fd28bf":"x_man_share=list(public_share_man.keys())\ny_man_share=list(public_share_man.values())\nx_woman_share=list(public_share_woman.keys())\ny_woman_share=list(public_share_woman.values())\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    y=x_man_share,\n    x=y_man_share,\n    name='MAN',\n    orientation='h',\n    marker=dict(\n        color='rgb(0,0,128)',\n        line=dict(color='rgb(0,0,128)', width=3)\n    )\n))\nfig.add_trace(go.Bar(\n    y=x_woman_share,\n    x=y_woman_share,\n    name='WOMAN',\n    orientation='h',\n    marker=dict(\n        color='rgb(255,0,255)',\n        line=dict(color='rgb(255,0,255)', width=3)\n    )\n))\n\nfig.update_layout(barmode='stack')\nfig.show()","6f42921b":"viz={}\nviz_man,viz_woman={},{}\nfor i in range(8):\n    values=df2['Q14_Part_'+str(i+1)].value_counts().values[0]\n    index=df2['Q14_Part_'+str(i+1)].value_counts().index[0]\n    values_male=male['Q14_Part_'+str(i+1)].value_counts().values[0]\n    index_male=male['Q14_Part_'+str(i+1)].value_counts().index[0]\n    values_female=female['Q14_Part_'+str(i+1)].value_counts().values[0]\n    index_female=female['Q14_Part_'+str(i+1)].value_counts().index[0]\n    viz_man[index]=values_male\n    viz[index]=values\n    viz_woman[index]=values_female\n    \nviz=dict(sorted(viz.items(),key=operator.itemgetter(1)))\nviz_man=dict(sorted(viz_man.items(),key=operator.itemgetter(1)))\nviz_woman=dict(sorted(viz_woman.items(),key=operator.itemgetter(1)))\n\n","193e95db":"x_man_viz=list(viz_man.keys())\ny_man_viz=list(viz_man.values())\nx_woman_viz=list(viz_woman.keys())\ny_woman_viz=list(viz_woman.values())\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    y=x_man_viz,\n    x=y_man_viz,\n    name='MAN',\n    orientation='h',\n    marker=dict(\n        color='rgba(246, 78, 139, 0.6)',\n        line=dict(color='rgba(246, 78, 139, 1.0)', width=3)\n    )\n))\nfig.add_trace(go.Bar(\n    y=x_woman_viz,\n    x=y_woman_viz,\n    name='WOMAN',\n    orientation='h',\n    marker=dict(\n        color='rgba(58, 71, 80, 0.6)',\n        line=dict(color='rgba(58, 71, 80, 1.0)', width=3)\n    )\n))\n\nfig.update_layout(barmode='stack')\nfig.show()\n","9012c945":"ml_algo={}\nfor i in range(11):\n    count_ml_algo_values=df2['Q17_Part_'+str(i+1)].value_counts().values[0]\n    count_ml_algo_index=df2['Q17_Part_'+str(i+1)].value_counts().index[0]\n    ml_algo[count_ml_algo_index]=count_ml_algo_values\nml_algo=dict(sorted(ml_algo.items(), key=operator.itemgetter(1)))\ncv={}\nfor i in range(6):\n    count_cv_values=df2['Q18_Part_'+str(i+1)].value_counts().values[0]\n    count_cv_index=df2['Q18_Part_'+str(i+1)].value_counts().index[0]\n    cv[count_cv_index]=count_cv_values\ncv=dict(sorted(cv.items(), key=operator.itemgetter(1)))\nnlp={}\nfor i in range(4):\n    count_nlp_values=df2['Q19_Part_'+str(i+1)].value_counts().values[0]\n    count_nlp_index=df2['Q19_Part_'+str(i+1)].value_counts().index[0]\n    nlp[count_nlp_index]=count_nlp_values\nnlp=dict(sorted(nlp.items(), key=operator.itemgetter(1)))","58833e17":"fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=[36, 10])\nwordcloud1 = WordCloud( background_color='Black',\n                        width=600,\n                        height=500,relative_scaling=0.5,normalize_plurals=False).generate_from_frequencies(ml_algo)\nax1.imshow(wordcloud1)\nax1.axis('off')\nax1.set_title('Machine-Learning-Algorithm',fontsize=40);\n\nwordcloud2 = WordCloud( background_color='Black',\n                        width=600,\n                        height=500,relative_scaling=0.5,normalize_plurals=False).generate_from_frequencies(cv)\nax2.imshow(wordcloud2)\nax2.axis('off')\nax2.set_title('Computer-Vision',fontsize=40);\n\nwordcloud3 = WordCloud( background_color='Black',\n                        width=600,\n                        height=500,relative_scaling=0.5,normalize_plurals=False).generate_from_frequencies(nlp)\nax3.imshow(wordcloud3)\nax3.axis('off')\nax3.set_title('NLP',fontsize=40);","5e18673f":"ml_algo={}\nman_ml_algo,woman_ml_algo={},{}\n#Machine-learning\nfor i in range(11):\n    count_ml_algo_values=df2['Q17_Part_'+str(i+1)].value_counts().values[0]\n    count_ml_algo_index=df2['Q17_Part_'+str(i+1)].value_counts().index[0]\n    count_man_ml_algo_values=male['Q17_Part_'+str(i+1)].value_counts().values[0]\n    count_man_ml_algo_index=male['Q17_Part_'+str(i+1)].value_counts().index[0]\n    count_woman_ml_algo_values=female['Q17_Part_'+str(i+1)].value_counts().values[0]\n    count_woman_ml_algo_index=female['Q17_Part_'+str(i+1)].value_counts().index[0]\n    ml_algo[count_ml_algo_index]=count_ml_algo_values\n    man_ml_algo[count_man_ml_algo_index]=count_man_ml_algo_values\n    woman_ml_algo[count_woman_ml_algo_index]=count_woman_ml_algo_values\n    \nml_algo=dict(sorted(ml_algo.items(), key=operator.itemgetter(1)))\nman_ml_algo=dict(sorted(man_ml_algo.items(), key=operator.itemgetter(1)))\nwoman_ml_algo=dict(sorted(woman_ml_algo.items(), key=operator.itemgetter(1)))\n#Computer vision\ncv={}\nman_cv,woman_cv={},{}\nfor i in range(6):\n    count_cv_values=df2['Q18_Part_'+str(i+1)].value_counts().values[0]\n    count_cv_index=df2['Q18_Part_'+str(i+1)].value_counts().index[0]\n    count_man_cv_values=male['Q18_Part_'+str(i+1)].value_counts().values[0]\n    count_man_cv_index=male['Q18_Part_'+str(i+1)].value_counts().index[0]\n    count_woman_cv_values=female['Q18_Part_'+str(i+1)].value_counts().values[0]\n    count_woman_cv_index=female['Q18_Part_'+str(i+1)].value_counts().index[0]\n    cv[count_cv_index]=count_cv_values\n    man_cv[count_man_cv_index]=count_man_cv_values\n    woman_cv[count_woman_cv_index]=count_woman_cv_values\n    \ncv=dict(sorted(cv.items(), key=operator.itemgetter(1)))\nman_cv=dict(sorted(man_cv.items(), key=operator.itemgetter(1)))\nwoman_cv=dict(sorted(woman_cv.items(), key=operator.itemgetter(1)))\n\n#Natural language programming\nnlp={}\nman_nlp,woman_nlp={},{}\nfor i in range(4):\n    count_nlp_values=df2['Q19_Part_'+str(i+1)].value_counts().values[0]\n    count_nlp_index=df2['Q19_Part_'+str(i+1)].value_counts().index[0]\n    count_man_nlp_values=male['Q19_Part_'+str(i+1)].value_counts().values[0]\n    count_man_nlp_index=male['Q19_Part_'+str(i+1)].value_counts().index[0]\n    count_woman_nlp_values=female['Q19_Part_'+str(i+1)].value_counts().values[0]\n    count_woman_nlp_index=female['Q19_Part_'+str(i+1)].value_counts().index[0]\n    nlp[count_nlp_index]=count_nlp_values\n    man_nlp[count_man_nlp_index]=count_man_nlp_values\n    woman_nlp[count_woman_nlp_index]=count_woman_nlp_values\n    \nnlp=dict(sorted(nlp.items(), key=operator.itemgetter(1)))\nman_nlp=dict(sorted(man_nlp.items(), key=operator.itemgetter(1)))\nwoman_nlp=dict(sorted(woman_nlp.items(), key=operator.itemgetter(1)))","f4d42703":"\nx_ml_algo=list(ml_algo.keys())\ny_ml_algo=list(ml_algo.values())\nfig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"xy\"},{\"type\": \"domain\"}]])\n\nfig.add_trace(go.Bar(x=x_ml_algo, y=y_ml_algo),\n              row=1, col=1)\nfig.add_trace(go.Pie(labels=x_ml_algo,values=y_ml_algo),\n              row=1, col=2)\nfig.update_layout(title = 'Machine-learning-Algorithm-',height=600,showlegend=False)\nfig.show()","0ed8beb3":"x_man_ml_algo=list(man_ml_algo.keys())\ny_man_ml_algo=list(man_ml_algo.values())\n\nx_woman_ml_algo=list(woman_ml_algo.keys())\ny_woman_ml_algo=list(woman_ml_algo.values())\n\nfig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"xy\"},{\"type\": \"xy\"}]],subplot_titles=('Male preferences on ML Models','Female preferences on ML Models'))\n\nfig.add_trace(go.Bar(x=x_man_ml_algo, y=y_man_ml_algo),\n              row=1, col=1)\nfig.add_trace(go.Bar(x=x_woman_ml_algo,y=y_woman_ml_algo),\n              row=1, col=2)\nfig.update_layout(title = 'Machine-learning-Algorithm',height=600,showlegend=False)\nfig.show()","c7732ce8":"ml_algo={}\nfor i in range(11):\n    count_ml_algo_values=df2['Q17_Part_'+str(i+1)].value_counts().values[0]\n    count_ml_algo_index=df2['Q17_Part_'+str(i+1)].value_counts().index[0]\n    ml_algo[count_ml_algo_index]=count_ml_algo_values\nml_algo=dict(sorted(ml_algo.items(), key=operator.itemgetter(1)))\ncv={}\nfor i in range(6):\n    count_cv_values=df2['Q18_Part_'+str(i+1)].value_counts().values[0]\n    count_cv_index=df2['Q18_Part_'+str(i+1)].value_counts().index[0]\n    cv[count_cv_index]=count_cv_values\ncv=dict(sorted(cv.items(), key=operator.itemgetter(1)))\nnlp={}\nfor i in range(4):\n    count_nlp_values=df2['Q19_Part_'+str(i+1)].value_counts().values[0]\n    count_nlp_index=df2['Q19_Part_'+str(i+1)].value_counts().index[0]\n    nlp[count_nlp_index]=count_nlp_values\nnlp=dict(sorted(nlp.items(), key=operator.itemgetter(1)))","84e5fa70":"x_cv=list(cv.keys())\ny_cv=list(cv.values())\nx_man_cv=list(man_cv.keys())\ny_man_cv=list(man_cv.values())\n\nx_woman_cv=list(woman_cv.keys())\ny_woman_cv=list(woman_cv.values())\n\nx_nlp=list(nlp.keys())\ny_nlp=list(nlp.values())\n\nx_man_nlp=list(man_nlp.keys())\ny_man_nlp=list(man_nlp.values())\n\nx_woman_nlp=list(woman_nlp.keys())\ny_woman_nlp=list(woman_nlp.values())","3ba42f17":"stages = x_nlp\ndf_mtl = pd.DataFrame(dict(number=y_man_nlp, stage=stages))\ndf_mtl['Gender'] = 'Man'\ndf_toronto = pd.DataFrame(dict(number=y_woman_nlp, stage=stages))\ndf_toronto['Gender'] = 'Woman'\ndf = pd.concat([df_mtl, df_toronto], axis=0)\nfig = px.funnel(df, x='number', y='stage', color='Gender')\nfig.show()","4e124338":"stages = x_cv\ndf_mtl = pd.DataFrame(dict(number=y_man_cv, stage=stages))\ndf_mtl['Gender'] = 'Man'\ndf_toronto = pd.DataFrame(dict(number=y_woman_cv, stage=stages))\ndf_toronto['Gender'] = 'Woman'\ndf = pd.concat([df_mtl, df_toronto], axis=0)\nfig = px.funnel(df, x='number', y='stage', color='Gender')\nfig.show()","c07d359b":"\nide_male,ide_female=[],[]\nide_val_male,ide_val_female=[],[]\nfor i in range(10):\n    value_male=male['Q9_Part_'+str(i+1)].value_counts().values[0]\n    text_male=male['Q9_Part_'+str(i+1)].value_counts().index[0]\n    value_female=female['Q9_Part_'+str(i+1)].value_counts().values[0]\n    text_female=female['Q9_Part_'+str(i+1)].value_counts().index[0]\n    ide_male.append(text_male)\n    ide_val_male.append(value_male)\n    ide_female.append(text_female)\n    ide_val_female.append(value_female)\n    \ndata_ide_tuples_male = list(zip(ide_male,ide_val_male))\ndata_ide_tuples_female = list(zip(ide_female,ide_val_female))\n\ndf_male=pd.DataFrame(data_ide_tuples_male, columns=['IDE','Male'])\ndf_female=pd.DataFrame(data_ide_tuples_female, columns=['IDE','Female'])\n\ndf_ide=df_male.merge(df_female,on='IDE')\ndf_ide","07c57186":"vis_male,vis_female=[],[]\nvis_val_male,vis_val_female=[],[]\nfor i in range(10):\n    value_male=male['Q14_Part_'+str(i+1)].value_counts().values[0]\n    text_male=male['Q14_Part_'+str(i+1)].value_counts().index[0]\n    value_female=female['Q14_Part_'+str(i+1)].value_counts().values[0]\n    text_female=female['Q14_Part_'+str(i+1)].value_counts().index[0]\n    vis_male.append(text_male)\n    vis_val_male.append(value_male)\n    vis_female.append(text_female)\n    vis_val_female.append(value_female)\n    \ndata_vis_tuples_male = list(zip(vis_male,vis_val_male))\ndata_vis_tuples_female = list(zip(vis_female,vis_val_female))\n\ndf_male=pd.DataFrame(data_vis_tuples_male, columns=['VIS','Male'])\ndf_female=pd.DataFrame(data_vis_tuples_female, columns=['VIS','Female'])\n\ndf_vis=df_male.merge(df_female,on='VIS')\ndf_vis","5827dfe1":"fig = make_subplots(rows=1, cols=2, specs=[[{\"type\": \"scatter\"},{\"type\": \"scatter\"}]],subplot_titles=('Integrated Development Environments','Visualization Library'))\nfig.add_trace(go.Scatter(\n    x=df_vis['VIS'].values,\n    y=df_vis['Male'].values,\n    name = 'Vis_Male'\n),row=1,col=2)\nfig.add_trace(go.Scatter(\n    x=df_vis['VIS'].values,\n    y=df_vis['Female'].values,\n    name='Vis_Female',\n),row=1,col=2)\n\n\nfig.add_trace(go.Scatter(\n    x=df_ide['IDE'].values,\n    y=df_ide['Male'].values,\n    name = 'Ide_Male'\n),row=1,col=1)\nfig.add_trace(go.Scatter(\n    x=df_ide['IDE'].values,\n    y=df_ide['Female'].values,\n    name='Ide_Female',\n),row=1,col=1)\n\nfig['layout'].update( height=500,width=1000)\npy.offline.iplot(fig)\n","d126396d":"hrd_male,hrd_female=[],[]\nhrd_val_male,hrd_val_female=[],[]\nfor i in range(3):\n    value_male=male['Q12_Part_'+str(i+1)].value_counts().values[0]\n    text_male=male['Q12_Part_'+str(i+1)].value_counts().index[0]\n    value_female=female['Q12_Part_'+str(i+1)].value_counts().values[0]\n    text_female=female['Q12_Part_'+str(i+1)].value_counts().index[0]\n    hrd_male.append(text_male)\n    hrd_val_male.append(value_male)\n    hrd_female.append(text_female)\n    hrd_val_female.append(value_female)\n\ndata_hrd_tuples_male = list(zip(hrd_male,hrd_val_male))\ndata_hrd_tuples_female = list(zip(hrd_female,hrd_val_female))\n\ndf_female=pd.DataFrame(data_hrd_tuples_female, columns=['HRD','Male'])\ndf_male=pd.DataFrame(data_hrd_tuples_male, columns=['HRD','Female'])\ndf_hrd=df_female.merge(df_male,on='HRD')\n#df_hrd\n\nTpu_index_male=male['Q13'].value_counts().index\nTpu_values_male=male['Q13'].value_counts().values\n\nTpu_index_female=female['Q13'].value_counts().index\nTpu_values_female=female['Q13'].value_counts().values\n\nfrom plotly.subplots import make_subplots\nfig = make_subplots(\n    rows=2, cols=2,\n    specs=[[{\"type\": \"xy\"},{\"type\": \"xy\"}],\n         \n          [ {\"type\": \"scatter\",\"colspan\":2},None]],subplot_titles=(\"TPU_USUAGE\",\"ML_METHODS_EXPEROENCE\",\"Specialized Hardware\")\n)\n\nfig.add_trace(go.Bar(x=Tpu_index_male,\n                y=Tpu_values_male,\n                name='Male',\n                marker_color='rgb(55, 83, 109)'\n                ),row=1, col=1)\nfig.add_trace(go.Bar(x=Tpu_index_female,\n                y=Tpu_values_female,\n                name='Female',\n                marker_color='rgb(26, 118, 255)'\n                ),row=1, col=1)\n\n\nfig.add_trace(go.Bar(x=male['Q6'].value_counts().index,\n                y=male['Q6'].value_counts().values,\n                name='Male',\n                marker_color='rgb(55, 83, 109)'\n                ),row=1, col=2)\nfig.add_trace(go.Bar(x=female['Q6'].value_counts().index,\n                y=female['Q6'].value_counts().values,\n                name='2019',\n                marker_color='rgb(26, 118, 255)'\n                ),row=1, col=2)\n\nfig.add_trace(go.Scatter(\n    x=df_hrd['HRD'].values,\n    y=df_hrd['Male'].values,\n    name = 'Male'\n),row=2,col=1)\nfig.add_trace(go.Scatter(\n    x=df_hrd['HRD'].values,\n    y=df_hrd['Female'].values,\n    name='Female',\n),row=2,col=1)\n\n\n\nfig.update_layout(height=800, showlegend=False,\n    title='Experience_Distribution',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Count',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=1,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, \n    bargroupgap=0.1 \n)\n#fig.update_layout(height=900, showlegend=False)\nfig.show()","d93669db":"y_salary=df2['Q24'].value_counts().index\ny_male=male['Q24'].value_counts().values\ny_female=female['Q24'].value_counts().values\n\nfig = go.Figure(go.Bar(x=y_salary, y=y_male, name='Man'))\nfig.add_trace(go.Bar(x=y_salary, y=y_female, name='Woman'))\n\n\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'total descending'})\nfig.show()","95d8e202":"#which degree people earning more salary in Data Science.\nsalary_values=df2['Q24'].fillna(\"not-diclosed\").value_counts().values\nsalary_index=df2['Q24'].fillna(\"not-diclosed\").value_counts().index\n\nbachelors=df2[df2['Q4']==\"Bachelor\u2019s degree\"]\nmasters=df2[df2['Q4']==\"Master\u2019s degree\"]\ndoctoral=df2[df2['Q4']==\"Doctoral degree\"]\nprofessional=df2[df2['Q4']==\"Professional degree\"]\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=salary_index,\n    y=masters['Q24'].fillna(\"not-diclosed\").value_counts().values,\n    name='Master\u2019s degree',\n    marker_color='rgba(255, 0, 0, 0.8)'\n))\nfig.add_trace(go.Bar(\n    x=salary_index,\n    y=bachelors['Q24'].fillna(\"not-diclosed\").value_counts().values,\n    name='Bachelor\u2019s degree',\n    marker_color='rgba(255, 0, 0, 0.6)'\n))\nfig.add_trace(go.Bar(\n    x=salary_index,\n    y=doctoral['Q24'].fillna(\"not-diclosed\").value_counts().values,\n    name='Doctoral degree',\n    marker_color='rgba(255, 0, 0, 0.4)'\n))\n\nfig.add_trace(go.Bar(\n    x=salary_index,\n    y=professional['Q24'].fillna(\"not-diclosed\").value_counts().values,\n    name='Professional degree',\n    marker_color='rgba(255, 0, 0, 0.2)'\n))\nfig.update_layout(barmode='group', xaxis_tickangle=55,height=600,width=1000,title='Salary according to highest education',xaxis_title='Salary',yaxis_title='Number of people')\nfig.show()","1ce71d4a":"1. Female in india is landing more compared to male whereas in Japan male are more compared to female ","7c0087bd":"<a id=\"section-zero\"><\/a>\n# Basic Exploratory Data Analysis","f5202fd4":"## Data visualization libraries or tools","49ecc878":"<a id=\"media\"><\/a>\n# Media sources Data Science Topics:","9b6523fb":"<a id=\"Plateform\"><\/a>\n# Publicly share Plateforms for data analysis or machine learning applications:","f9418a37":"**Check it my another notebook**: Do you feel Data Science is growing(2019-2020)?\nhttps:\/\/www.kaggle.com\/krishna1997gopal\/do-you-feel-data-science-is-growing-2019-2020?rvi=1","8eda88c3":"* So salary distribution also point out us to think about participation of women and men in data science.\n* Clearly we can see there are hardly women who's salary more than $500000. As we know this filed is growing more and more so there are many fresher's people who show and contribute there knowledge in this filed and earing salary $0-999.\n","1048352c":"<a id=\"section-four\"><\/a>\n# Salary Distribution:","591ba233":"<a id=\"education\"><\/a>\n# Highest level of Formal Education.","9311e115":"<a id=\"plateform\"><\/a>\n# Platforms Popularity for data science courses.\n> There are many plateform exist from where people learn data science courses like python,machine-learning,etc. As Data science is in demand and many peoples are doing well in this field.So let's see which plateform in trends and then we see how male and female responds to that plateforms.","87b45d70":"Above visualization makes us clear about selction of programming language across gender.","5f631c4b":"<a id=\"role\"><\/a>\n# Current role:","ee3bf173":"# Conclusion:\n![image.png](attachment:image.png)\n\nData is highly imbalnced across gender group.\n* It's over responsibilty to make women aware about data science and make them motivate to participate in this field. We know we can explore more about new ideas of data science if female contribution also will increase.\n* The people who are palnning to come in data science and have master's in there hand are the people who going to rule later in this field.\n* If you know python then it's more than enough as we see number of people's who know python and other languages above.But having knowledge of Python,SQL,R will be a good combination.\n* In therms of colab and kaggle almost they both look like brother and people are using equally.\n* Most intersting that Youtube gaining importance compared to blog where this result is oppsite in 2019.\n* People loves courseera content more comapred to other mooc courses.\n* I hope when we will do this compition in 2021 we wish to see this gender gap reduced atleast compared to 2020.\n\nCommon girls! It's your time to come and take stand in Data science.","6fd8b448":"* Near about 23.4% male and 22.9% female are using Coursera for there learning.\n* From university courses more females are there compare to male, may be the reason females do there work with perfection(my-opinion) compare to male so they can easily getting degree from university whereas males have to study hard for getting degree.\n* There are more number of females in DATACAMP compared to males.\n\nso mostly we found females have higher chances to complete data science course from university and DataCamp comapred to males","34649cbb":"# \"Data Scientist: The Sexiest Job of the 21st Century\"\nIn this case study we try to analyze how 2020 year was important for data scientist. we try to visualize what are the tools and techniques people are following.\n\nWith this analysis we try to come up with some insights of data which we  will definitely recommend to follow.\nThis data analysis definitely help to distinguish between Myth and Reality of data scientist.\nI am super excited as this is my first notebook in kaggle which going to be public .\n\n# IF YOU LIKE THIS NOTEBOOK. PLEASE UPVOTE IT \n Also **Check my another notebook**: Do you feel Data Science is growing(2019-2020)?\nhttps:\/\/www.kaggle.com\/krishna1997gopal\/do-you-feel-data-science-is-growing-2019-2020?rvi=1\n\n","af9c69e6":"* We are not comparing here male and female because here also same story will going to repeat of imbalanced but on other sides if we look women mostly like Bayesian approch and it's good to see there contriution on Transformer Networks like BERT also.\n  where looking both the graph we can say mostly peoples still beleive Linear or logistic Regresson works farily well but according to me it's all about data, there is nothing like favourite algorithm , Its all about hit and trial and choose best ","5a5ab07b":"<a id=\"lan\"><\/a>\n# Languages programming which use on a regular basis:","c613a43f":"# If you like my notebook please UPVOTE it.\n**THANKS FOR READING**","f07588f8":"# Read the data","82a98afd":"Interesting facts:\n1. Kaggle is famous to learn ,read, and implement as well share with people whatever you are learning so definatley Kaggle is leading in data science compare to all other media plateform.\n2. People are learning and share through video content there learning and due to this Youtube is in trending for learning.\n3. Blogs one of the most important and necessary step to continue journey in data science.\n4. But there is no too much difference in Twitter,Email Newsletters and journel publication.\n\nMost imporatnt learning concept is if you are learning then you should share and there is responsibility of others people also who ever read should learn something from it...","d3f6cbdc":"* We know this data is imbalanced but still it's look good the females which are doing participation,they try to give best, yes we can tell in very less number but they are trying whereas contribution from male is upto mark in all the field of natural language processing and computer vision","d5234e4a":"* Talking about IDE mostly peoples are used Jupyter notebooks one of the beginer's favourite and easy to learn in starting. So both male and female like this compared to all other ide we have but it quite intersting to see many males peoples changes there choice according to experience or work but females looks quite same in using of IDE.\n* Matplotlib won race if we talk about visualization library followed by seaborn then ggplot gaining popularity in both of gender male and female","9506c25d":"Github is one of the famous plateform where we share whatever we learned.As men using more github same for women also.","20b61724":"1. India is the country from where lot's of data scientist are coming in the world.","9a1d359b":"AS we come to our tilte of notebook, there are 80.7% male people know python where 77.1%  Male people know  R.\nfor male Python is pretty famous and used in there work while compare to female 21.2% knows R and only 17.6% knows python\nfor female R is leading to Python.","a0adcb06":"1. Most women have coding experience of 1-2 years where man have 3-5 years of writing code.\n2. writing more and more code will really helpful to land ourself as Data scientist.\n3. 19.5% womans have experience of less than one year of writing code where this number is only 16.9% in case of man..","e64c59b1":"<a id=\"tool\"><\/a>\n# Tools to analyze data:\nData analysis is the most imporatant concepts if we are talking about Data science, there are different tools exist to analyze data according to peoples choice","9a8058eb":"<a id=\"gender\"><\/a>\n# Gender distribution:\nAs we going to analyze how many man and womens are there which want to land thereself as Data Scientist.\nFor gender feature , I am doing univariate analysis so I came up with pie chart","c86bbbdb":"1. Coursera is in trending, there are 22.3% people using coursera for learning data science. As we know the famous \"Andrew Yan-Tak Ng\" how smoothly he explained machine learning in his course. Also he was the founder of Coursera.\n2. After that kaggle learn courses really helpful for quick learn and implement what ever you learned.Majority people love to see in reality what ever concept they learned.\n3. why udemy comes on third favourite mooc plateform?\n   I think udemy really attract peoples by giving sales for small period of time again and again.\n   and to clear basics udemy is really great plateform to start anything from scratch in your data science journey.\n4. Peoples who are pursuing there studies from univerity also come with great research work in data science.","ea9f0846":"1. Masters degree people are landing thereself more in kaggle compare to bachelor's people.\n2. Kaggle is a community which always motivate us to read, practice and learn then apply, Many masters people have to write there own thesis in that kaggle definately help them.\n3. There are the peoples who not have any formal education but they still are there in kaggle, it can show us how much high level of interest peple have to learn data science","89d2a980":"<a id=\"country\"><\/a>\n# Country:","1c09b5ef":"<a id=\"code\"><\/a>\n# Coding-Experience:","f4de644a":"* There are lot of people who not want to disclosed there salary.It's okay no worry.\n* In all our education degree the people who pursuing there masters or completed there masters have higher salary comapred to all other degree.\nif you are planning to learn data science better to do masters as they have more salary and proper knowledge in one field.\n* After master's yes the chances for bachelor's people are there as they just pass out from college and as fresher's they can learn more and more stuff.","751ecfaf":"<a id=\"section-one\"><\/a>\n# Characterstics Distribution based on Gender:","043d35f5":" Women are leading men in Basic statistical software and Business intelligence software also in Advanced statistical software.Or we can also tell women like to analyze and visualize data more comapre to men in this 2020.","52f0df03":"Okya!! There are many peoples who are doing work on mostly jupiyter and Rstudio as we know both plateform are used by all level of peoples and mostly they are very easy for beginners so that we can see there are 46%people near about using it in place of other plateforms.\nData science is all about how you understand data and to understand data we should know how data is handle by statistcal software and in this task EXCEL perfoem well.But what is interesting here? we know people nowdays deploying there models by using clouds but that people atleast more than intermedite level so percentage of cloud based data software is less upto this time but as the data science increase to grow may be they service also will grow.","b86004ab":"<a id=\"section-two\"><\/a>\n# Preferenc Based on Gender Distribution","e924b4aa":" I read somewhere Women likes reading more and more compared to men and that what we are seeing here, Women reading blogs are more compared to men.\n And with respect to others plateforms all most participation is equal from both end...","a7aac597":"<a id=\"section-three\"><\/a>\n# Machine Learning Analysis:","c0178264":"1. Doctoral degree contains more females compared to male. As we see many females choose to pursue higher degree compared to  male in there life.\n2. There are people who still not earn bachelor's degree are paricipating.","2504e685":"1. So people are using Python is the most than sql than R.\n\n2. There is always war happen when anyone want to start learning Data science, we confused what to learn first \"Python\" or \"R\".But according to 2020 SQL coming after python because a Data scientist should know how to store data in database. so we should choose sql also when we are talking between python and R","8f052f6f":"#India\n1. Most people from india know C very well as it is basic language and people start learning this language in there school, so C language is the most famous and regualr basis language in India even compare to Python.\n2. Popularity of SQL is more in india compare to R.\n3. Even India is leading in JULIA also, which is famous for fastest calculation.","39955345":"1. Clearly we can see that huge gender  imbalance still there.\n2. There are 78.8% men and 19.4% are women, It will directly impact the field of AI.\n","7e9c7dd4":"<a id=\"visualization\"><\/a>\n# Visualization Libraries or IDE:","9228cd50":"<a id=\"age\"><\/a>\n# Age_distribution:","7c8cf77e":"1. Number of females using ggplot library of R is more comapred to plotly in Python.\n2. As we know there are more women who are using R for data analysis so may be the reasopn ","6d937b08":"<a id=\"ML-Hardware\"><\/a>\n# Hardware and Experience:","489d5c1e":"0. [Basic exploratory data analysis](#section-zero)\n    - [5.1 Load library](#load)\n    - [5.2 Read Dataset](#read-dataset)\n1. [Characterstics Distribution Based on Gender](#section-one)\n     - [Gender Distribution](#gender)\n     - [Age Distribution](#age)\n     - [Coding Experience](#code)\n     - [Country](#country)\n     - [Education](#education)\n     - [Current-role](#role)\n2. [Preferences based on Gender](#section-two)\n     - [Programming Language](#lan)\n     - [MOOC-Courses](#plateform)\n     - [Tool](#tool)\n     - [Media Sources](#media)\n     - [Plateform for Sharing Work](#Plateform)\n3. [Machine Learning Analysis](#section-three)\n     - [ML-Algorithm](#ML-algorithm)\n     - [Popular IDE and Visualization](#visualization)\n     - [Hardware and Experience](#ML-Hardware)\n4. [Salary Distribution](#section-four)\n    ","b77185c8":"1. There are peoples who's age lies between 18-21 years are maximum in numers where as 70+ are very less(obvious 70+ people are more intersting to read others documentation(\"personal opinion\") or they just make  chill out in the life).\n2. overall we can tell 18 to 34 years people are in majority. As with this age group people mostly contains students and working people so they are mostly active peoples who spend there time in kaggle to learn and contribute to community.\n\nso better we analyze the age distribution across male and female","8de67516":"1. There are 22.8% woman are in age group of 22-24 is mostly active in kaggle where same age group of men is only 18%. \n2. Mostly man who are in there 25-29 are most active age group where in woman 22-24 age group is most active age group.","9aca5ff4":"<a id=\"ML-algorithm\"><\/a>\n# Machine Learning Algorithms:","0b8ae533":"1. So overall in 2020 Peoples are more familar with Machine learning algorithms like decision tree, linear and logistic regression \n2. Word cloud showing the currently many peoples become more familar with NLP compare to Computer vision wordcloud.\n\nNow Let's analyze how's male and female making there contribution in machine learning","37ed7ccc":"* TPU is new entry in hardware after GPU came so there are lot's of people never used TPU upto this time that we can see easily in our data also but there are some male who used TPU more than 25 times but hardly we can see there any women. overall TPU is still new and will use as we grow in  data science faster.\n* Talking about ML methods used on regular basis we can see female are more who have 1-2 years of experience and there are more male who have 3-5 years of experience \n* . There are very less number of people who are using machine learning more than 20 years\n* . As Data Science is in trend so there are many begginers in this field so under 1 year this number is high\n* . Interesting there are people who do not use machine learning methods "}}