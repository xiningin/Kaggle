{"cell_type":{"556d06f7":"code","8181cbce":"code","c35cb40f":"code","92d6d286":"code","053ca08e":"code","ce0a542e":"code","69030d38":"code","855ec422":"code","d35666e6":"code","ae35f7d0":"code","0a77e918":"code","c0015f25":"code","ac1c42c3":"code","31f67f17":"code","44e29a1d":"code","afbf6b44":"code","6d9bb283":"code","5f7d0a40":"code","6b97f3a2":"code","ae322414":"code","c0291199":"code","6bf7ccc9":"code","4bd3db04":"markdown","36eef8a5":"markdown","d9f93eef":"markdown","bf36b417":"markdown","c5a462e4":"markdown"},"source":{"556d06f7":"import pandas as pd \nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn.tree import DecisionTreeClassifier \nfrom sklearn import svm \nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier  \nfrom sklearn import metrics ","8181cbce":"data=pd.read_csv('..\/input\/iris\/Iris.csv')","c35cb40f":"data.head()","92d6d286":"data.tail()","053ca08e":"data.shape","ce0a542e":"data.info()","69030d38":"data.isna().sum()","855ec422":"data.describe().T","d35666e6":"plt.figure(figsize=(5,5))\ncor=data.corr()\nsns.heatmap(cor,annot=True)","ae35f7d0":"data[\"Species\"].value_counts()","0a77e918":"sns.pairplot(data,hue='Species')","c0015f25":"fig = data[data.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='orange', label='Setosa')\ndata[data.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='blue', label='versicolor',ax=fig)\ndata[data.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Sepal Length\")\nfig.set_ylabel(\"Sepal Width\")\nfig.set_title(\"Sepal Length VS Width\")\nplt.legend()","ac1c42c3":"fig = data[data.Species=='Iris-setosa'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='orange', label='Setosa')\ndata[data.Species=='Iris-versicolor'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=fig)\ndata[data.Species=='Iris-virginica'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\"Petal Length VS Width\")\nplt.legend()","31f67f17":"data.hist()\nfig=plt.gcf()\nfig.set_size_inches(14,8)\nplt.show()","44e29a1d":"x = data.drop(['Id', 'Species'], axis=1)\ny = data['Species']\nprint(x.shape)\nprint(y.shape)","afbf6b44":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=100)","6d9bb283":"logr=LogisticRegression(solver=\"lbfgs\")\nlogr.fit(X_train,y_train)\ny_pred = logr.predict(X_test)\nlogacc = metrics.accuracy_score(y_pred,y_test)\nprint('The accuracy of the Logistic Regression is: ', logacc)","5f7d0a40":"dt = DecisionTreeClassifier()\ndt.fit(X_train,y_train)\ny_pred = dt.predict(X_test)\ndtacc = metrics.accuracy_score(y_pred,y_test)\nprint('The accuracy of the Decision Tree is: ', dtacc)","6b97f3a2":"knn = KNeighborsClassifier(n_neighbors=3) #\nknn.fit(X_train,y_train)\ny_pred = knn.predict(X_test)\nknnacc = metrics.accuracy_score(y_pred,y_test)\nprint('The accuracy of the KNN is', knnacc)","ae322414":"sv = svm.SVC()\nsv.fit(X_train,y_train) \ny_pred = sv.predict(X_test) \nsvmacc = metrics.accuracy_score(y_pred,y_test)\nprint('The accuracy of the SVM is:', svmacc)","c0291199":"models=pd.DataFrame({'Models':['Logistic Regression','Decision Tree','K-NN','SVM'],'Accuracies':[logacc,dtacc,knnacc,svmacc]})","6bf7ccc9":"models.sort_index(1)","4bd3db04":"### Model Building","36eef8a5":"### Decision Tree","d9f93eef":"### SVM","bf36b417":"### Logistic Regression","c5a462e4":"### KNN"}}