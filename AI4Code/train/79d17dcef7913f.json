{"cell_type":{"0f917ef3":"code","ee74aeb4":"code","1f45fa3f":"code","98bd5ce6":"code","9ba8867c":"code","e0f03850":"code","92876efb":"code","c47283fc":"markdown","ce750521":"markdown","95925a96":"markdown","62cf42fa":"markdown","9e9a1909":"markdown","4587fa33":"markdown","d6738335":"markdown","d60e0fc1":"markdown"},"source":{"0f917ef3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures,StandardScaler\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score","ee74aeb4":"data_loc = r\"\/kaggle\/input\/best-regression-model\/Data.csv\"\n\ndf = pd.read_csv(data_loc)\nX = df.iloc[:,:-1].values\ny = df.iloc[:,-1].values","1f45fa3f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","98bd5ce6":"pf = PolynomialFeatures(degree=10)\nX_train_poly = pf.fit_transform(X_train)\n\nsc_X = StandardScaler()\nX_train_norm = sc_X.fit_transform(X_train)\n\nsc_y = StandardScaler()\ny_train_norm = sc_y.fit_transform(y_train.reshape(len(y_train),1))","9ba8867c":"regressor_simple = LinearRegression()\nregressor_simple.fit(X_train, y_train)\n\nregressor_poly = LinearRegression()\nregressor_poly.fit(X_train_poly,y_train)\n\nregressor_svr = SVR(kernel = 'rbf')\nregressor_svr.fit(X_train_norm,y_train_norm.ravel())\n\nregressor_tree = DecisionTreeRegressor(random_state=0)\nregressor_tree.fit(X_train,y_train)\n\nregressor_forest = RandomForestRegressor(n_estimators=10, random_state=0)\nregressor_forest.fit(X_train,y_train)","e0f03850":"y_pred_simple = regressor_simple.predict(X_test)\ny_pred_poly = regressor_poly.predict(pf.transform(X_test))\ny_pred_svr = sc_y.inverse_transform(regressor_svr.predict(sc_X.transform(X_test)))\ny_pred_tree = regressor_tree.predict(X_test)\ny_pred_forest = regressor_forest.predict(X_test)\n\ny_pred = pd.DataFrame({'simple':y_pred_simple,'poly':y_pred_poly,'svr':y_pred_svr,'tree':y_pred_tree,'forest':y_pred_forest},index=y_test)\nprint(y_pred)","92876efb":"r2_simple = r2_score(y_test,y_pred_simple)\nr2_poly = r2_score(y_test,y_pred_poly)\nr2_svr = r2_score(y_test,y_pred_svr)\nr2_tree = r2_score(y_test,y_pred_tree)\nr2_forest = r2_score(y_test,y_pred_forest)\n\nr2_scores = pd.DataFrame({'simple':r2_simple,'poly':r2_poly,'svr':r2_svr,'tree':r2_tree,'forest':r2_forest},index=['r2'])\nprint(r2_scores)","c47283fc":"### Predicting on the test set","ce750521":"# Regression Model Selector","95925a96":"### Creating and training the models","62cf42fa":"### Splitting the dataset into train and test","9e9a1909":"- Simple Linear Regression\n- Polynomial Linear Regression\n- Support Vector Regressiion\n- Decision Tree Regression\n- Random Forest Regression","4587fa33":"### Importing relevant libraries","d6738335":"### Reading the dataset","d60e0fc1":"### Data preprocessing"}}