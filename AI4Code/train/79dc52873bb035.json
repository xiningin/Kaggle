{"cell_type":{"8399a63a":"code","665929ce":"code","7112fba9":"code","f30f2881":"code","65d95927":"code","d112f6fe":"code","5cad2cb5":"code","6fe5e724":"code","10e30036":"markdown","0c871085":"markdown","fbb2b195":"markdown","4e4f0c20":"markdown","80168ecc":"markdown","1821021d":"markdown","18140727":"markdown","32eb04cc":"markdown","3590a59d":"markdown","991d43e4":"markdown"},"source":{"8399a63a":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.metrics import r2_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n","665929ce":"datasetFile = \"..\/input\/housedata\/data.csv\"\n\nD = pd.read_csv(datasetFile,encoding=\"utf8\")\nD.info()","7112fba9":"print(D.shape,\"\\n\",D.describe())","f30f2881":"import seaborn as sns\nimport matplotlib\n# Set text size\nmatplotlib.rcParams['font.size'] = 18\n\nsns.pairplot(D)\n","65d95927":"X = D.iloc[:,2:]\nX = X.drop([\"street\",\"statezip\"],axis=1)\ny= D.loc[:,[\"price\"]]\n\nfor col in X.columns:\n    if X.dtypes[col] == \"object\":\n        print(\"column>\",col,\" shape=>\",X[col].shape,\"\\n\",X[col].value_counts())\n        print(\"*\"*100)\n\n      ","d112f6fe":"X_dummies = pd.get_dummies(X,columns=[\"city\",\"country\"] )\nX_train, X_test, y_train, y_test = train_test_split(X_dummies,y, test_size=.3, random_state=101)","5cad2cb5":"model = LinearRegression()\nmodel.fit(X_train,y_train)\nprint(\"Test score: {:.2f}\".format(model.score(X_test, y_test)))","6fe5e724":"print(r2_score(model.predict(X_train), y_train))\n","10e30036":"# Our Model is making predictions with 36% accuracy .\n# To check if dataset is having Linear relationshhip, we can look at the Least square error -","0c871085":"> # Importing necessary packages","fbb2b195":"[!] SELECT MODEL AND FITTING THE DATA AND CALCULATING TEST SCORE ==>","4e4f0c20":"> # Clearly, above plots tell that input features have not much linear relationship with target variable.\n> # Separating the input and target features","80168ecc":"> Some more in-depth overview of dataset -->","1821021d":"we chosen our test size as 30% of training data and setting random_state to 101 for keeping the randomly assigned pattern of dataset consistent during all runs of the model","18140727":"# > Bsed on above analysis we may encode most frequent categories ( City, Country) to make it suitable for processing to feed our model -","32eb04cc":"# Negative score means our dataset DONT has a linear relationship.","3590a59d":"# [!] We can explore the dataset features relationship as following-","991d43e4":"#  Getting overview of dataset to look for following-\n> *  nulls  \n> *  data types and \n> *  categorical columns (object type)"}}