{"cell_type":{"13c0f2f6":"code","e5fafadc":"code","ac7d69ef":"code","3a755806":"code","aea14573":"code","b5e7f99d":"code","2a877fa8":"code","750706da":"code","61910cb0":"code","f8dff9c9":"code","410b6cd1":"code","ec3dddb7":"code","be9a84c9":"code","4ca1680c":"code","9751caf4":"code","45dadebe":"code","719c7a71":"code","66852633":"code","49071829":"code","d90850cf":"code","f1fe309d":"code","6af34ad0":"code","9c29bddc":"code","2f8cc4a4":"code","2d5ad254":"code","011984a8":"code","badaa310":"code","1d9cbb99":"code","c5abc6a5":"code","0b838646":"code","ca7ef295":"code","fcf6b5d1":"code","e477542e":"code","48844f0c":"code","0b4ad48f":"code","cf5efbb7":"code","ed429e61":"markdown","efa24c68":"markdown"},"source":{"13c0f2f6":"# Import necessary libraries\nimport numpy as np\nimport pandas as pd\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nsns.set(style='ticks')\n\n# Customize colors\nflatui = [\"#9b59b6\", \"#3498db\", \"#95a5a6\", \"#e74c3c\", \"#34495e\", \"#2ecc71\"] # defining the colour palette\nflatui = sns.color_palette(flatui)","e5fafadc":"from wordcloud import WordCloud  ","ac7d69ef":"# Read the dataset\ndf = pd.read_csv(\"..\/input\/fifa-2019\/FIFA_data.csv\")\ndf.head()","3a755806":"df.info()","aea14573":"print(df.columns)","b5e7f99d":"df.shape","2a877fa8":"def print_full(x):\n    pd.set_option('display.max_rows', len(x))\n    print(x)\n    pd.reset_option('display.max_rows')","750706da":"all = df.isnull().sum()\nprint_full(all)","61910cb0":"import missingno as msno\nmsno.matrix(df)","f8dff9c9":"#msno.heatmap(df.sample(1000))","410b6cd1":"# Plot the heatmap of the correlation between columns\nfig, ax = plt.subplots(figsize=(25,25))\nsns.heatmap(df.corr(), annot = True, linewidths=0.5, linecolor=\"green\", fmt = '.1f', ax=ax)\nplt.show()","ec3dddb7":"# plot the word cloud for nationality of players\nplt.subplots(figsize=(25,15))\n\nwordcloud = WordCloud(\n                        background_color=\"white\",\n                        width = 1920,\n                        height = 1080,\n                        ).generate(\" \".join(df.Nationality))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\nplt.show()","be9a84c9":"# impute missing values\ndf['Club'].fillna('No Club', inplace=True)\ndf['Position'].fillna('ST', inplace=True)","4ca1680c":"# Impute missing values by mean\nmissing_by_mean = df.loc[:, ['Crossing', 'Finishing', 'HeadingAccuracy',\n                                 'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'FKAccuracy',\n                                 'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed',\n                                 'Agility', 'Reactions', 'Balance', 'ShotPower', 'Jumping',\n                                 'Stamina', 'Strength', 'LongShots', 'Aggression', 'Interceptions',\n                                 'Positioning', 'Vision', 'Penalties', 'Composure', 'Marking',\n                                 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling',\n                                 'GKKicking', 'GKPositioning', 'GKReflexes']]\nmissing_by_mean[:5]","9751caf4":"for i in missing_by_mean.columns:\n    df[i].fillna(df[i].mean(), inplace=True)","45dadebe":"# Impute missing values in categorical variables by mode\nmissing_by_mode = df.loc[: , ['Body Type','International Reputation', 'Height', 'Weight', 'Preferred Foot','Jersey Number']]\nfor i in missing_by_mode.columns:\n    df[i].fillna(df[i].mode()[0], inplace=True)","719c7a71":"# impute other variable, discrete and continuous with median\nimpute_by_median = df.loc[: , ['Weak Foot', 'Skill Moves']]\n\nfor i in impute_by_median.columns:\n    df[i].fillna(df[i].median(), inplace=True)","66852633":"df.columns[df.isnull().any()]","49071829":"df.fillna(0, inplace = True) # Filling the remaining  missing values with zero\ndf.isnull().all().sum()","d90850cf":"# functions to get the rounded values from different columns\ndef defending(data):\n    return int(round((data[['Marking', 'StandingTackle','SlidingTackle']].mean()).mean()))\n\ndef general(data):\n    return int(round((data[['HeadingAccuracy', 'Dribbling', 'Curve', \n                               'BallControl']].mean()).mean()))\n\ndef mental(data):\n    return int(round((data[['Aggression', 'Interceptions', 'Positioning', \n                               'Vision','Composure']].mean()).mean()))\n\ndef passing(data):\n    return int(round((data[['Crossing', 'ShortPassing', \n                               'LongPassing']].mean()).mean()))\n\ndef mobility(data):\n    return int(round((data[['Acceleration', 'SprintSpeed', \n                               'Agility','Reactions']].mean()).mean()))\ndef power(data):\n    return int(round((data[['Balance', 'Jumping', 'Stamina', \n                               'Strength']].mean()).mean()))\n\ndef rating(data):\n    return int(round((data[['Potential', 'Overall']].mean()).mean()))\n\ndef shooting(data):\n    return int(round((data[['Finishing', 'Volleys', 'FKAccuracy', \n                               'ShotPower','LongShots', 'Penalties']].mean()).mean()))","f1fe309d":"# Rename columns\ndf.rename(columns = {'Club Logo': 'Club_Logo'}, inplace=True)","6af34ad0":"# adding new columns to the data\n\ndf['Defending'] = df.apply(defending, axis=1)\ndf['General'] = df.apply(general, axis=1)\ndf['Mental'] = df.apply(mental, axis=1)\ndf['Passing'] = df.apply(passing, axis=1)\ndf['Mobility'] = df.apply(mobility, axis=1)\ndf['Power'] = df.apply(power, axis=1)\ndf['Rating'] = df.apply(rating, axis=1)\ndf['Shooting'] = df.apply(shooting, axis=1)\n","9c29bddc":"# creating the players dataset\nplayers = df[['Name','Defending','General','Mental','Passing',\n                'Mobility','Power','Rating','Shooting','Flag','Age',\n                'Nationality', 'Photo', 'Club_Logo', 'Club']]\n\nplayers.head(20)","2f8cc4a4":"# Different position taken be players\n\nplt.figure(figsize=(18,8))\nplt.style.use(\"fivethirtyeight\")\nax = sns.countplot('Position', data=df, palette='dark')\nax.set_xlabel(\"Different positions in football\")\nax.set_ylabel(\"Count of players\")\nax.set_title(\"Comparision of positions and players\")\nplt.show()","2d5ad254":"# Plot count of players based on their heights\n\nplt.figure(figsize=(18,8))\nax = sns.countplot('Height', data=df, palette='bone')\nax.set_xlabel(\"Height of players\")\nax.set_ylabel(\"Count of players\")\nax.set_title(\"Number of players and their height\")\nplt.show()","011984a8":"# Plot count of players based on their work rates\n\nplt.figure(figsize=(18,8))\nax = sns.countplot('Work Rate', data=df, palette='bone')\nax.set_xlabel(\"Different work rates of the players\")\nax.set_ylabel(\"Count of players\")\nax.set_title(\"Work rate of the players\")\nplt.show()","badaa310":"Total_players = df.groupby(\"Nationality\")[\"ID\"].count().sort_values(ascending=False).head(10)\nTotal_players = pd.DataFrame(Total_players)\nTotal_players.rename(columns = {\"ID\":\"Number\"}, inplace=True)\nTotal_players","1d9cbb99":"# Plot count of players based on their work rates\n\nplt.figure(figsize=(18,8))\nax = sns.barplot(x = Total_players.index, y=\"Number\", data=Total_players, palette='bone')\nax.set_xlabel(\"Nationality\")\nax.set_ylabel(\"Count of players\")\nax.set_title(\"Number of players\")\nplt.show()","c5abc6a5":"Top_ratings = df.groupby(['Club'])[\"Rating\"].mean().sort_values(ascending=False)[:10]\nTop_ratings = pd.DataFrame(Top_ratings)\nTop_ratings","0b838646":"# Plot group with top ratings\n\nplt.figure(figsize=(18,8))\nax = sns.lineplot(x = Top_ratings.index, y=\"Rating\", data=Top_ratings, palette='bone')\nax.set_xlabel(\"Groups\")\nax.set_ylabel(\"Ratings\")\nax.set_title(\"Ratings by groups\")\nplt.show()","ca7ef295":"print(df.columns)\ndf.head()","fcf6b5d1":"penalty = df.groupby(\"Name\")[\"Penalties\"].count().sort_values(ascending=False)[:10]\npenalty = pd.DataFrame(penalty)\npenalty","e477542e":"# Plot the number of penalties\n\nplt.figure(figsize=(18,8))\nax = sns.barplot(x = penalty.index, y=\"Penalties\", data=penalty, palette='bone')\nax.set_xlabel(\"Name\")\nax.set_ylabel(\"Penalties\")\nax.set_title(\"Top penalties\")\nplt.show()","48844f0c":"penalty","0b4ad48f":"# showing the name of the players which occurs the most number of times from the first 20 names\nplt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Name[0:20]))\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('players.png')\nplt.show()","cf5efbb7":"# checking which clubs have been mentioned the most\nplt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Club))\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('players.png')\nplt.show()","ed429e61":"Juventus was the highest rated group.","efa24c68":"Most of the players are from England, germany, Argentina, Spain and Europeon regions."}}