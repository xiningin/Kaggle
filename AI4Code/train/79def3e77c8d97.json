{"cell_type":{"6034ffe9":"code","c1edf555":"code","7cb53411":"code","bd3a3df5":"code","a400d505":"code","a24bd28d":"code","6995f5c0":"code","b6cc59bf":"code","b647ba09":"code","62f54578":"code","8cc5dc6b":"code","48f1f276":"code","6b673c4c":"code","84b8484b":"code","334b97ca":"code","61aa418d":"code","1ac0a64d":"code","b49ad6ce":"code","e5679730":"code","5bfbcc8c":"code","2a64a4d8":"code","438c7178":"code","4be7d40e":"code","20b05119":"code","0d49406d":"code","b61964e2":"code","ca9022c8":"code","0462a40e":"code","6e9bf8c0":"code","949d5790":"code","7360b655":"code","4300b41e":"code","2c9bf0d3":"code","40347b18":"code","5dd8cb19":"code","1bf03701":"markdown","5719ed23":"markdown","63dd1bb5":"markdown","c89b4088":"markdown","4aeb6aa5":"markdown","4f7e15ed":"markdown","d5c21a29":"markdown","37ba658b":"markdown","32bfb479":"markdown","1e812100":"markdown","00e15d4e":"markdown","107865cd":"markdown","7eaac5b9":"markdown","0ec5f030":"markdown"},"source":{"6034ffe9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c1edf555":"# Standard plotly imports\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot, init_notebook_mode\n\nimport plotly.express as px\nimport plotly.io as pio\n\n# Using plotly + cufflinks in offline mode\nimport cufflinks\ncufflinks.go_offline(connected=True)\ninit_notebook_mode(connected=True)","7cb53411":"# read clean datatset that is updated every 24 hours\nclean_data = pd.read_csv('\/kaggle\/input\/corona-virus-report\/covid_19_clean_complete.csv',parse_dates=['Date'])","bd3a3df5":"# rename column\nclean_data = clean_data.rename(columns={'Country\/Region':'Country'})","a400d505":"# overall cases growth \noverall_cases_death = clean_data.groupby('Date')['Date','Confirmed','Deaths','Recovered'].sum().reset_index()\nindia_cases_death = clean_data[clean_data.Country == 'India'].groupby('Date')['Date','Confirmed','Deaths','Recovered'].sum().reset_index()\nrest_of_world_cases_death  = clean_data[clean_data.Country != 'India'].groupby('Date')['Date','Confirmed','Deaths','Recovered'].sum().reset_index()\nitaly_cases_death = clean_data[clean_data.Country == 'Italy'].groupby('Date')['Date','Confirmed','Deaths','Recovered'].sum().reset_index()","a24bd28d":"# plot overall confirmed cases\ntrace1 = go.Scatter(\n                    x = overall_cases_death.Date,\n                    y = overall_cases_death.Confirmed,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Confirmed Cases',\n                    line=dict(color='#4cff00', width=2),\n                    fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = {'text':'Growth of Confirmed Cases - Overall'},font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","6995f5c0":"# India \ntrace1 = go.Scatter(\n                    x = india_cases_death.Date,\n                    y = india_cases_death.Confirmed,\n                    mode = \"lines\",\n                    name = \"India\",\n                    text = 'Confirmed Cases',\n                    line=dict(color='#00ccff', width=2),\n                    fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Growth of Confirmed Cases - India',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\nfig = dict(data = data, layout = layout)\niplot(fig)","b6cc59bf":"# Italy\ntrace1 = go.Scatter(\n                    x = italy_cases_death.Date,\n                    y = italy_cases_death.Confirmed,\n                    mode = \"lines\",\n                    name = \"Italy\",\n                    text = 'Confirmed Cases',\n                    line=dict(color='#ff3300', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Growth of Confirmed Cases - Italy',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n        \nfig = dict(data = data, layout = layout)\niplot(fig)","b647ba09":"# top countries 10 countries with maximum confirmed cases \nlast_date =  clean_data[clean_data.Date == max(clean_data.Date)]\ntop_10_countries_confirmed_cases = last_date.groupby('Country')['Confirmed','Deaths'].sum().reset_index().sort_values('Confirmed',ascending=False)[:10]","62f54578":"# Creating two subplots\nfrom plotly.subplots import make_subplots\n\nfig = make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                    shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(go.Bar(\n    x=top_10_countries_confirmed_cases[::-1].Confirmed,\n    y=top_10_countries_confirmed_cases[::-1].Country,\n    marker=dict(\n        color='rgba(50, 171, 96, 0.6)',\n        line=dict(\n            color='rgba(50, 171, 96, 1.0)',\n            width=1),\n    ),\n    name='Total Number of Confirmed Cases',\n    orientation='h',\n), 1, 1)\n\nfig.append_trace(go.Scatter(\n    x=top_10_countries_confirmed_cases[::-1].Deaths, y=top_10_countries_confirmed_cases[::-1].Country,\n    mode='lines+markers',\n    line_color='rgb(128, 0, 128)',\n    name='Total Number of Deaths',\n), 1, 2)\n\nfig.update_layout(\n    title='Covid-19 : Confirmed Cases & Total Deaths',\n    yaxis=dict(\n        showgrid=False,\n        showline=False,\n        showticklabels=True,\n        domain=[0, 0.85],\n    ),\n    yaxis2=dict(\n        showgrid=False,\n        showline=True,\n        showticklabels=False,\n        linecolor='rgba(102, 102, 102, 0.8)',\n        linewidth=2,\n        domain=[0, 0.85],\n    ),\n    xaxis=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0, 0.42],\n    ),\n    xaxis2=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0.47, 1],\n        side='top',\n        dtick=1000,\n    ),\n    legend=dict(x=0.029, y=1.038, font_size=10),\n    margin=dict(l=100, r=20, t=70, b=70),\n    paper_bgcolor='rgb(248, 248, 255)',\n    plot_bgcolor='rgb(248, 248, 255)',\n)\n\nannotations = []\n\ny_s = np.round(top_10_countries_confirmed_cases.Confirmed, decimals=0)\ny_nw = np.rint(top_10_countries_confirmed_cases.Deaths)\n\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, top_10_countries_confirmed_cases.Country):\n    # labeling the scatter deaths\n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xd, x=ydn + 250,\n                            text='{:,.0f}'.format(ydn),\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(128, 0, 128)'),\n                            showarrow=False))\n    # labeling the bar confirmed cases\n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd + 5000,\n                            text='{:,.0f}'.format(yd),\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(50, 171, 96)'),\n                            showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\nfig.show()","8cc5dc6b":"# plot overall confirmed fatalities\ntrace1 = go.Scatter(\n                    x = overall_cases_death.Date,\n                    y = overall_cases_death.Deaths,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Confirmed Fatalities', line=dict(color='#4cff00', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Growth of Confirmed Fatalities - Overall',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\niplot(fig)","48f1f276":"# plot India fatalities\ntrace1 = go.Scatter(\n                    x = india_cases_death.Date,\n                    y = india_cases_death.Deaths,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Confirmed Fatalities',line=dict(color='#00ccff', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Growth of Confirmed Fatalities - India',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\niplot(fig)","6b673c4c":"# plot Italy fatalities\ntrace1 = go.Scatter(\n                    x = italy_cases_death.Date,\n                    y = italy_cases_death.Deaths,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Confirmed Fatalities', line=dict(color='#ff3300', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Growth of Confirmed Fatalities - Italy',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\nfig = dict(data = data, layout = layout)\niplot(fig)","84b8484b":"latest_deaths = clean_data[clean_data.Date == max(clean_data.Date)]\ntop_10_countries_confirmed_deaths = latest_deaths.groupby('Country')['Deaths'].sum().reset_index().sort_values('Deaths', ascending=False)[:10]","334b97ca":"fig = px.bar(top_10_countries_confirmed_deaths[::-1], x= 'Deaths', y='Country', orientation='h',text='Deaths',\n             title='Confirmed Fatalities - Top 10 Countries',template=\"plotly_dark\")\nfig.show()","61aa418d":"# plot overall recovered cases\ntrace1 = go.Scatter(\n                    x = overall_cases_death.Date,\n                    y = overall_cases_death.Recovered,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Recoveries',line=dict(color='#4cff00', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Recovered Cases - Overall',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\niplot(fig)","1ac0a64d":"# plot recovered cases in India\ntrace1 = go.Scatter(\n                    x = india_cases_death.Date,\n                    y = india_cases_death.Recovered,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Recoveries',line=dict(color='#00ccff', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Recovered Cases - India',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\niplot(fig)","b49ad6ce":"# plot recovered cases in Italy\ntrace1 = go.Scatter(\n                    x = italy_cases_death.Date,\n                    y = italy_cases_death.Recovered,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Recoveries',line=dict(color='#ff3300', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Recovered Cases - Italy',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\niplot(fig)","e5679730":"last_recovery = clean_data[clean_data.Date == max(clean_data.Date)]\ntop_10_countries_recovery = last_recovery.groupby('Country')['Recovered'].sum().reset_index().sort_values('Recovered', ascending=False)[:10]","5bfbcc8c":"fig = px.bar(top_10_countries_recovery[::-1], x= 'Recovered', y='Country', orientation='h',text='Recovered',\n             title='Confirmed Recoveries - Top 10 Countries',template=\"plotly_dark\")\nfig.show()","2a64a4d8":"# add active cases columns\nclean_data['Active'] = clean_data['Confirmed'] - (clean_data['Recovered'] + clean_data['Deaths'])","438c7178":"# active cases growth\nactive_case_growth = clean_data.groupby('Date')['Active'].sum().reset_index()","4be7d40e":"# plot active case growth\ntrace1 = go.Scatter(\n                    x = active_case_growth.Date,\n                    y = active_case_growth.Active,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Active Cases',line=dict(color='#4cff00', width=2),fill='tozeroy')\n\ndata = [trace1]\n\nlayout = dict(title = 'Active Case Growth - Overall',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\niplot(fig)","20b05119":"india_active_cases = clean_data[clean_data.Country == 'India'].groupby('Date')['Active'].sum().reset_index()\nitaly_active_cases = clean_data[clean_data.Country == 'Italy'].groupby('Date')['Active'].sum().reset_index()\nchina_active_cases = clean_data[clean_data.Country == 'China'].groupby('Date')['Active'].sum().reset_index()","0d49406d":"# plot active case growth - India\ntrace1 = go.Scatter(\n                    x = india_active_cases.Date,\n                    y = india_active_cases.Active,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Active Cases', line=dict(color='#00ccff', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Active Case Growth - India',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\nfig = dict(data = data, layout = layout)\niplot(fig)","b61964e2":"# plot active case growth - Italy\ntrace1 = go.Scatter(\n                    x = italy_active_cases.Date,\n                    y = italy_active_cases.Active,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Active Cases', line=dict(color='#ff3300', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Active Case Growth - Italy',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\n\n\nfig = dict(data = data, layout = layout)\niplot(fig)","ca9022c8":"# plot active case growth - India\ntrace1 = go.Scatter(\n                    x = china_active_cases.Date,\n                    y = china_active_cases.Active,\n                    mode = \"lines\",\n                    name = \"\",\n                    text= 'Active Cases', line=dict(color='#F1C40F', width=2),fill='tozeroy')\n\ndata = [trace1]\nlayout = dict(title = 'Active Case Growth - China',font=dict(color='white',family='Arial'),\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False,showgrid= False),\n              yaxis =  {'showgrid': False},paper_bgcolor='#273746',\n              plot_bgcolor='#273746')\nfig = dict(data = data, layout = layout)\niplot(fig)","0462a40e":"last_rec_death = clean_data[clean_data.Date == max(clean_data.Date)]\nrecovery_death_rates = last_rec_death.groupby('Country')['Confirmed','Deaths','Recovered'].sum().reset_index()","6e9bf8c0":"# add death rate and recovery rate\nrecovery_death_rates['Death_Rate'] = (recovery_death_rates['Deaths']\/recovery_death_rates['Confirmed']) * 100\nrecovery_death_rates['Recovery_Rate'] = (recovery_death_rates['Recovered']\/recovery_death_rates['Confirmed']) * 100","949d5790":"top_10_death_rates = recovery_death_rates.sort_values('Confirmed', ascending=False)[:10]\ntop_10_recovery_rates = recovery_death_rates.sort_values('Confirmed', ascending=False)[:10]","7360b655":"# countries with recovery rates\n\nfig = make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                    shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(go.Bar(\n    x=top_10_recovery_rates[::-1].Confirmed,\n    y=top_10_recovery_rates[::-1].Country,\n    marker=dict(\n        color='rgba(50, 171, 96, 0.6)',\n        line=dict(\n            color='rgba(50, 171, 96, 1.0)',\n            width=1),\n    ),\n    name='Total Number of Confirmed Cases',\n    orientation='h',\n), 1, 1)\n\nfig.append_trace(go.Scatter(\n    x=top_10_recovery_rates[::-1].Recovery_Rate, \n    y=top_10_recovery_rates[::-1].Country,\n    mode='lines+markers',\n    line_color='rgb(128, 0, 128)',\n    name='Recovery Rate',\n), 1, 2)\n\nfig.update_layout(\n    title='Covid-19 : Confirmed Cases & Recovery Rates',\n    yaxis=dict(\n        showgrid=False,\n        showline=False,\n        showticklabels=True,\n        domain=[0, 0.85],\n    ),\n    yaxis2=dict(\n        showgrid=False,\n        showline=True,\n        showticklabels=False,\n        linecolor='rgba(102, 102, 102, 0.8)',\n        linewidth=2,\n        domain=[0, 0.85],\n    ),\n    xaxis=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0, 0.42],\n    ),\n    xaxis2=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0.47, 1],\n        side='top',\n        dtick=20,\n    ),\n    legend=dict(x=0.029, y=1.038, font_size=10),\n    margin=dict(l=100, r=20, t=70, b=70),\n    paper_bgcolor='rgb(248, 248, 255)',\n    plot_bgcolor='rgb(248, 248, 255)',\n)\n\nannotations = []\n\ny_s = np.round(top_10_recovery_rates.Confirmed, decimals=0)\ny_nw = np.rint(top_10_recovery_rates.Recovery_Rate)\n\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, top_10_countries_confirmed_cases.Country):\n    # labeling the scatter deaths\n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xd, x=ydn + 10,\n                            text= str(ydn) + '%',\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(128, 0, 128)'),\n                            showarrow=False))\n    # labeling the bar confirmed cases\n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd + 5000,\n                            text='{:,.0f}'.format(yd),\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(50, 171, 96)'),\n                            showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\nfig.show()","4300b41e":"# confirmed cases & mortality rates\n\nfig = make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                    shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(go.Bar(\n    x=top_10_death_rates[::-1].Confirmed,\n    y=top_10_death_rates[::-1].Country,\n    marker=dict(\n        color='rgba(50, 171, 96, 0.6)',\n        line=dict(\n            color='rgba(50, 171, 96, 1.0)',\n            width=1),\n    ),\n    name='Total Number of Confirmed Cases',\n    orientation='h',\n), 1, 1)\n\nfig.append_trace(go.Scatter(\n    x=top_10_death_rates[::-1].Death_Rate, \n    y=top_10_death_rates[::-1].Country,\n    mode='lines+markers',\n    line_color='rgb(128, 0, 128)',\n    name='Recovery Rate',\n), 1, 2)\n\nfig.update_layout(\n    title='Covid-19 : Confirmed Cases & Mortality Rates',\n    yaxis=dict(\n        showgrid=False,\n        showline=False,\n        showticklabels=True,\n        domain=[0, 0.85],\n    ),\n    yaxis2=dict(\n        showgrid=False,\n        showline=True,\n        showticklabels=False,\n        linecolor='rgba(102, 102, 102, 0.8)',\n        linewidth=2,\n        domain=[0, 0.85],\n    ),\n    xaxis=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0, 0.42],\n    ),\n    xaxis2=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0.47, 1],\n        side='top',\n        dtick=2,\n    ),\n    legend=dict(x=0.029, y=1.038, font_size=10),\n    margin=dict(l=100, r=20, t=70, b=70),\n    paper_bgcolor='rgb(248, 248, 255)',\n    plot_bgcolor='rgb(248, 248, 255)',\n)\n\nannotations = []\n\ny_s = np.round(top_10_death_rates.Confirmed, decimals=0)\ny_nw = np.rint(top_10_death_rates.Death_Rate)\n\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, top_10_death_rates.Country):\n    # labeling the scatter deaths\n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xd, x=ydn + 0.8,\n                            text= str(ydn) + '%',\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(128, 0, 128)'),\n                            showarrow=False))\n    # labeling the bar confirmed cases\n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd + 5000,\n                            text='{:,.0f}'.format(yd),\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(50, 171, 96)'),\n                            showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\nfig.show()","2c9bf0d3":"# best recovery rates - more than 100 cases \nbest_rec_rate = recovery_death_rates[recovery_death_rates.Confirmed >= 100].sort_values('Recovery_Rate', ascending=False)[:10]\nbest_rec_rate['Recovery_Rate'] = np.round(best_rec_rate['Recovery_Rate'],1)\n\n# Worst Mortality Rates\nworst_mort_rate = recovery_death_rates[recovery_death_rates.Confirmed >= 100].sort_values('Death_Rate', ascending=False)[:10]\nworst_mort_rate['Death_Rate'] = np.round(worst_mort_rate['Death_Rate'],1)","40347b18":"fig = px.bar(best_rec_rate[::-1], x= 'Recovery_Rate', y='Country', \n             orientation='h',text='Recovery_Rate',title='Countries with best recovery rates (> 100 Confirmed Cases)',\n             labels={'Recovery_Rate':'Recovery Rate %'}, template=\"plotly_dark\")\nfig.show()","5dd8cb19":"fig = px.bar(worst_mort_rate[::-1], x= 'Death_Rate', y='Country', orientation='h',text='Death_Rate',\n             title='Countries with worst mortality rates (> 100 Confirmed Cases)', \n             labels={'Death_Rate':'Mortality Rate %'}, template=\"plotly_dark\")\nfig.show()","1bf03701":"* The confirmed number of fatalities is also growing across the globe and the rise again is exponential, which is concerning. \n* Italy has the most cases of deaths and has been in the news for this reason unfortunately.\n* India has so far reported only 7 deaths, not so alarming quite yet, but need to see what happens in the next few weeks.","5719ed23":"**Conclusions**\n\nThe number of active cases is most likely expected to increase in the coming weeks, especially in countries like India and the US as they increase testing. Also, countries like India have imposed mandatory curfews to break the chain. So it may help flatten the curve to a certain extent as evidenced by the drop in cases in China.\n\nThe recovery rates have been significant in China and the cruise ship. This is a positive sign that things will turn around eventually.\n\nThe next steps will be to analyze coutry specific data (I am inetersted in India and US) and also study the impact of demography on the recovery and mortatlity rates.","63dd1bb5":"* The overall number of confirmed cases has been on the rise steadily across the globe. We have already crossed the 330K mark and the increase has been exponential. This is expected to increase more as testing increases in countries like India and US increase.\n* China has the most number of reported cases followed by Italy and the US. \n* The number of deaths in China is condiderably lower than that of Italy. The US has reported 417 deaths already.","c89b4088":"# Recoveries","4aeb6aa5":"# Confirmed Cases","4f7e15ed":"Active cases are all confirmed cases without the recovered cases and deaths.","d5c21a29":"* San Marino (12.5%) has the worst mortality rate followed by Indonesia and Italy (9.3%). \n* China has a mind-boggling recvovery rate of 89%. Sonething is going to right for them.\n* Surprisingly the cruise ship Diamond Princess also had a significant 45.6% recovery rate. So all hope is not lost. ","37ba658b":"* The numnber of recoevries has also been on the rise, which gives us some hope that we can ride this tide.\n* The number of recoveries in China is quite outstanding. Wonder if they have a vaacine already?","32bfb479":"# Confirmed Fatalities","1e812100":"There has been only one thing on everyone's mind for the last few weeks - COVID-19. It has been hard to miss all the disucssions surrounding it. There has been a lot of panic and some of them are justifibale. The downside is there has been a lot of rumor mongerinmg as well. This is a very basic exploratory data analysis that will be built upon in the coming weeks. \n\nThe primary source for the data is from : https:\/\/www.kaggle.com\/imdevskp\/corona-virus-report. More infiormation about the dataset is also available at the same link.","00e15d4e":"![Virus](https:\/\/behavioralscientist.org\/wp-content\/uploads\/2020\/03\/coronavirus_links.png)\n","107865cd":"# Active Cases","7eaac5b9":"# Recovery & Death Rates","0ec5f030":"* As stated earlier the number of active cases will increase once countries like India and US start to increase their testing.\n* On the other hand, countries like India have imposed mandatory country-wide lockdowns on March 25th and maybe the curve will flatten in the coming weeks. It will be intresting to watch. \n* The number of active cases in China has dropped significantly in the last few weeks. This is a positive sign that policies such as social distancing do break the chain and will stop the spread of the infection."}}