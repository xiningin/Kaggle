{"cell_type":{"9be8707f":"code","5ea62a97":"code","45ebe471":"code","cacc62be":"code","bf4ebe8e":"code","44a4133a":"code","62a37e26":"code","0c6cfc66":"code","58f99123":"code","401b6dd4":"code","05b2e9d3":"code","21211d32":"code","6c426f98":"code","7792f294":"markdown","e93879c9":"markdown","7ec8c74b":"markdown","feec0e0a":"markdown"},"source":{"9be8707f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ea62a97":"df = pd.read_csv('..\/input\/bank-note-authentication-uci-data\/BankNote_Authentication.csv')","45ebe471":"df","cacc62be":"X = df.iloc[:,:-1]\ny = df.iloc[:,-1]","bf4ebe8e":"X.head()","44a4133a":"y.head()","62a37e26":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)","0c6cfc66":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier()\nclassifier.fit(X_train,y_train)\n","58f99123":"## Prediction\ny_pred=classifier.predict(X_test)","401b6dd4":"### Check Accuracy\nfrom sklearn.metrics import accuracy_score\nscore=accuracy_score(y_test,y_pred)","05b2e9d3":"score","21211d32":"### Create a Pickle file using serialization \nimport pickle\npickle_out = open(\"classifier.pkl\",\"wb\")\npickle.dump(classifier, pickle_out)\npickle_out.close()","6c426f98":"classifier.predict([[2,3,4,1]])","7792f294":"### Independent and Dependent variable","e93879c9":"## Random Forest Classifier","7ec8c74b":"# Bank Note Authentication\nData were extracted from images that were taken from genuine and forged banknote-like specimens. For digitization, an industrial camera usually used for print inspection was used. The final images have 400x 400 pixels. Due to the object lens and distance to the investigated object gray-scale pictures with a resolution of about 660 dpi were gained. Wavelet Transform tool were used to extract features from images.","feec0e0a":"## Train Test split"}}