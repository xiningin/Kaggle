{"cell_type":{"c2ed3835":"code","be5872a1":"code","04de24ef":"code","b7924b3d":"code","bf1f3932":"code","ca5599a3":"code","8ffd5bc1":"code","5ead5f18":"code","b83255ba":"code","c55f5528":"code","1e39b3fa":"code","e733d395":"markdown"},"source":{"c2ed3835":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be5872a1":"train = pd.read_csv('..\/input\/titanic\/train.csv')","04de24ef":"train.describe()","b7924b3d":"train.isna().sum()","bf1f3932":"train.head()","ca5599a3":"fare_survive = train.Fare[train['Survived'] == 1]\nfare_no_survive = train.Fare[train['Survived'] == 0]","8ffd5bc1":"fare_mean_survive = np.mean(fare_survive)\nfare_mean_no_survive = np.mean(fare_no_survive)\nfare_mean_survive - fare_mean_no_survive","5ead5f18":"fare_mean_survive = np.mean(fare_survive)\nfare_mean_no_survive = np.mean(fare_no_survive)\nfare_mean_survive - fare_mean_no_survive","b83255ba":"fare_median_survive = np.median(fare_survive)\nfare_median_no_survive = np.median(fare_no_survive)\nfare_median_survive - fare_median_no_survive","c55f5528":"fig = plt.figure(figsize = (20,30))\nax = fig.add_subplot(211)\nax = sns.boxplot(data = train, x = 'Survived', y = 'Fare')","1e39b3fa":"fig = plt.figure(figsize = (20,30))\nax = fig.add_subplot(212)\nax = plt.hist(fare_survive, color=\"blue\", label=\"Survived\", alpha=0.5)\nax = plt.hist(fare_no_survive, color=\"red\", label=\"Died\", alpha=0.5)\nax = plt.legend()","e733d395":"**Here, we'll see the difference between fare mean of survivors and no survivors, therefore we'll see the median and finally the boxplot and histogram**"}}