{"cell_type":{"f6ae03c1":"code","891261f4":"code","11cf9548":"code","728eafa1":"code","22e1ba55":"code","d92ab50d":"code","bec931ac":"code","68bb3fa8":"code","91145add":"code","b5b2488d":"code","8556df05":"code","9464a3e1":"code","d0b5ce30":"code","967592b0":"markdown","f0f0700c":"markdown","f8e65bf2":"markdown","368f1a84":"markdown","167d2e94":"markdown"},"source":{"f6ae03c1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import LabelEncoder\n\nimport xgboost as XGB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","891261f4":"train=pd.read_csv('..\/input\/av-janatahack-healthcare-hackathon-ii\/Data\/train.csv',index_col=['case_id'])\ntest=pd.read_csv('..\/input\/av-janatahack-healthcare-hackathon-ii\/Data\/test.csv',index_col=['case_id'])\ntrain.shape,test.shape","11cf9548":"# Number of Null Values\ndisplay(train.isna().sum())\ndisplay(test.isna().sum())\n\n# Unique Values in Each Column\ndisplay(train.nunique())\ndisplay(test.nunique())","728eafa1":"# Viewing 1st five rows of training dataset\ntrain.head()","22e1ba55":"# displaying Unique Values in each columns\nfor col in train.columns:\n    print(col,\":\",train[col].unique())\n    print(\"___________________________\")\nprint(\"  \")    \nprint(\"  \")\nprint(\"*****************************\")\nprint(\"*****************************\")\nprint(\"*****************************\")\nprint(\"  \")    \nprint(\"  \")\nfor col in test.columns:\n    print(col,\":\",test[col].unique())\n    print(\"___________________________\")","d92ab50d":"# Selecting Categorical Columns for Label Encoding\ncat_train=train.select_dtypes(include=['object'])\ncat_col=list(cat_train.columns)\ncat_col_test=['Hospital_type_code', 'Hospital_region_code', 'Department', 'Ward_Type', 'Ward_Facility_Code', 'Type of Admission', 'Severity of Illness', 'Age']","bec931ac":"# Label encoding\nle=LabelEncoder()\nfor cat_column in cat_col_test:\n    train[cat_column]=le.fit_transform(train[cat_column])\n    test[cat_column]=le.transform(test[cat_column])\ntrain['Stay']=le.fit_transform(train['Stay'])\nprint(le.inverse_transform([0,1,2,3,4,5,6,7,8,9,10,]))","68bb3fa8":"# Datatype of Train Dataset\ntrain.info()","91145add":"X_train[0]","b5b2488d":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\nfrom tensorflow.keras.optimizers import Adam\n\n# intializing X and Y \nX=train.drop(['Stay'],axis=1)\ny=train['Stay']\n\n# train test split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)\n\nX_train=X_train.to_numpy()\n\nmodel=Sequential()\nmodel.add(Dense(1200,activation='tanh',input_shape=(16,)))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(600,activation='tanh'))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(300,activation='relu'))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(11,activation='softmax'))\n\nmodel.compile(optimizer='Adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])\nmodel.fit(X_train,y_train,epochs=5,validation_split=0.2)","8556df05":"test.shape","9464a3e1":"# intializing X and Y \nX=train.drop(['Stay'],axis=1)\ny=train['Stay']\n\n# train test split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)\n\n# XGB Classifier\nclf=XGB.XGBClassifier(learning_rate =0.1,\n n_estimators=1000,\n max_depth=5,)\nclf.fit(X_train,y_train)\n\n# Predict the values\ny_predict=clf.predict(X_test)\ntest['Stay']=clf.predict(test)\n\ntest['Stay1']=test['Stay']\n\ntest['Stay']=test['Stay'].map({0:'0-10',1:'11-20',2:'21-30',3:'31-40',4:'41-50',5:'51-60',6:'61-70',7:'71-80',8:'81-90',9:'91-100',10:'More than 100 Days'})\n\n# Accuracy Score\nacc=accuracy_score(y_test,y_predict)\nprint(acc)","d0b5ce30":"# output file\ntest['Stay'].head()\ntest['Stay'].to_csv('output.csv')","967592b0":"# Label Encoder","f0f0700c":"# Reading Files","f8e65bf2":"# Importing Libraries","368f1a84":"# Neural Network","167d2e94":"# XGBoost"}}