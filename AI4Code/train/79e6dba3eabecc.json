{"cell_type":{"663f8d52":"code","d5b1f343":"code","146bf9af":"code","004c90e9":"code","cffa16d3":"code","15c81101":"code","676a7746":"code","0527d2c9":"code","9b6fa461":"code","946b4610":"code","5921147b":"code","cc704f79":"code","e1b854f4":"code","80c599c8":"code","e18d90fa":"markdown","c92d4aa9":"markdown"},"source":{"663f8d52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d5b1f343":"df = pd.read_excel('\/kaggle\/input\/corona-virus\/route.xls')\ndf.head()","146bf9af":"df.dtypes","004c90e9":"from wordcloud import WordCloud, STOPWORDS\nstopwords = set(STOPWORDS)\n\ndef show_wordcloud(data, title = None):\n    wordcloud = WordCloud(\n        background_color='black',\n        stopwords=stopwords,\n        max_words=200,\n        colormap='Set3',\n        max_font_size=40, \n        scale=3,\n        random_state=1 # chosen at random by flipping a coin; it was heads\n).generate(str(data))\n\n    fig = plt.figure(1, figsize=(15, 15))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize=20)\n        fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()\n\nshow_wordcloud(df['city'])","cffa16d3":"fig = px.pie( values=df.groupby(['visit']).size().values,names=df.groupby(['visit']).size().index)\nfig.update_layout(\n    title = \"Visit\",\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )   \n    \npy.iplot(fig)","15c81101":"df1 = pd.read_excel('\/kaggle\/input\/corona-virus\/patient.xls')\ndf1.head()","676a7746":"df1.dtypes","0527d2c9":"fig = px.pie( values=df1.groupby(['infection_reason']).size().values,names=df1.groupby(['infection_reason']).size().index)\nfig.update_layout(\n    title = \"Infection Reason\",\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )   \n    \npy.iplot(fig)","9b6fa461":"cnt_srs = df1['birth_year'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Blues',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"birth_year\")","946b4610":"fig = px.histogram(df1[df1.infection_reason.notna()],x=\"infection_reason\",marginal=\"box\",nbins=10)\nfig.update_layout(\n    title = \"Infection Reason\",\n    xaxis_title=\"infection-reason\",\n    yaxis_title=\"disease\",\n    barmode=\"group\",\n    bargap=0.1,\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 0,\n        dtick = 10),\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )\npy.iplot(fig)","5921147b":"df2 = pd.read_excel('\/kaggle\/input\/corona-virus\/trend.xls')\ndf2.head()","cc704f79":"df2.dtypes","e1b854f4":"fig = px.pie( values=df2.groupby(['pneumonia']).size().values,names=df2.groupby(['pneumonia']).size().index)\nfig.update_layout(\n    title = \"Pneumonia\",\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )   \n    \npy.iplot(fig)","80c599c8":"fig = px.histogram(df2[df2.coronavirus.notna()],x=\"coronavirus\",marginal=\"box\",nbins=10)\nfig.update_layout(\n    title = \"Coronavirus\",\n    xaxis_title=\"coronavirus\",\n    yaxis_title=\"date\",\n    barmode=\"group\",\n    bargap=0.1,\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 0,\n        dtick = 10),\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )\npy.iplot(fig)","e18d90fa":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","c92d4aa9":"They are younger than me (1962)."}}