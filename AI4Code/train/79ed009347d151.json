{"cell_type":{"c6c0b61c":"code","8ed41420":"code","4550ec4e":"code","72bff687":"code","c81a43f0":"code","2bf58607":"code","e9e8096b":"code","2d3084e4":"code","09d17b80":"code","3bf276a3":"code","0370838c":"code","6e77413c":"code","d1058d5c":"code","5e40c0e5":"code","ab30d1f5":"code","0a14a6a3":"code","4e8da228":"code","ec07f5a7":"code","3752d042":"code","459ee106":"code","af90c084":"code","cd0620f4":"code","cdd382c8":"code","a0e5d061":"code","480e4689":"code","4dcef25a":"code","3223d1a1":"code","7028da2d":"code","a37cc559":"code","ab6788bc":"markdown","5d754561":"markdown","75762982":"markdown","79abe0d2":"markdown","9c5444e5":"markdown"},"source":{"c6c0b61c":"import pandas as pd\nimport numpy as np\nfrom sklearn.cluster import KMeans, MeanShift, AffinityPropagation, AgglomerativeClustering\nfrom sklearn import metrics\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8ed41420":"rent = pd.read_csv('..\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv')\nrent['furniture'] = pd.get_dummies(rent.furniture)['furnished']\nrent['animal'] = pd.get_dummies(rent.animal)['acept']\n\nrent.columns = ['Cidade','Area', 'Quartos', 'Banheiros', 'Vagas', 'Andar', 'Permite Animal', 'Mobiliado', 'Condominio', 'Aluguel', 'IPTU', 'Seguro', 'Total']","4550ec4e":"rent['Tx. IPTU'] = 100*rent['IPTU']\/rent['Aluguel']\nrent['Tx. Seguro'] = 100*rent['Seguro']\/rent['Aluguel']\nrent","72bff687":"print('Tipo dos dados: ')\nrent.info()","c81a43f0":"def muda_tipo(s):\n    try:\n        return int(s)\n    except:\n        return 0\nrent.Andar = rent.Andar.map(muda_tipo)","2bf58607":"plt.figure(figsize=(16, 12))\ng = sns.FacetGrid(rent, row=\"Cidade\", height=1.7, aspect=4,)\ng.map(sns.distplot, \"Area\")","e9e8096b":"plt.figure(figsize=(16, 12))\ng = sns.FacetGrid(rent, col=\"Cidade\")\ng.map(sns.countplot, \"Mobiliado\")","2d3084e4":"plt.figure(figsize=(16, 12))\ng = sns.FacetGrid(rent, col=\"Cidade\")\ng.map(sns.countplot, \"Permite Animal\")","09d17b80":"plt.figure(figsize=(16, 12))\ng = sns.FacetGrid(rent, row=\"Cidade\", height=1.7, aspect=4,)\ng.map(sns.countplot, \"Quartos\")","3bf276a3":"rent.describe()","0370838c":"def remove_outliers(data, label):\n    #calculate the IQR\n    IQR = data[label].quantile(0.75) - data[label].quantile(0.25)\n    \n    #calculate the boundries\n    lower = data[label].quantile(0.25) - (IQR * 1.5)\n    upper = data[label].quantile(0.75) + (IQR * 1.5)\n    \n    # find the outliers\n    outliers = np.where(data[label] > upper, True, np.where(data[label] < lower, True, False))\n    \n    # remove outliers from data.\n    return data.loc[~outliers]","6e77413c":"for label in ['Area', 'Aluguel', 'Quartos', 'Andar', 'IPTU','Condominio']:\n    rent = remove_outliers(rent, label)","d1058d5c":"rent.describe()","5e40c0e5":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nplt.figure(figsize=(16, 12))\nsns.heatmap(rent.corr(), annot=True, fmt='.2f', vmax=0.8, vmin=-0.8)\nplt.show()","ab30d1f5":"sns.jointplot(y= rent['Aluguel'],x = rent['IPTU'],kind ='reg')","0a14a6a3":"sns.jointplot(y= rent['Aluguel'],x = rent['Condominio'],kind ='reg')","4e8da228":"sns.jointplot(y= rent['Aluguel'],x = rent['Seguro'],kind ='reg')","ec07f5a7":"sns.jointplot(y= rent['Quartos'],x = rent['Area'],kind ='reg')","3752d042":"rent.query('Aluguel > 1500.0').sort_values('Aluguel')","459ee106":"rent.drop(columns=['Cidade','Permite Animal', 'IPTU', 'Seguro', 'Total'], inplace=True, errors='ignore')\nrent.dropna(inplace=True)\nrent","af90c084":"def clustering_algorithm(n_clusters, dataset):\n    kmeans = KMeans(n_clusters=n_clusters, n_init=10, max_iter=300)\n    labels = kmeans.fit_predict(dataset)\n    s = metrics.silhouette_score(dataset, labels, metric='euclidean')\n    dbs = metrics.davies_bouldin_score(dataset, labels)\n    calinski = metrics.calinski_harabasz_score(dataset, labels)\n    return s, dbs, calinski, labels","cd0620f4":"s, dbs, calinski, labels = clustering_algorithm(3, rent)\nprint('Silhoutte: ', s, 'Davies-Bouldin: ', dbs, 'Calinski-Harabasz: ', calinski)","cdd382c8":"plt.figure(figsize=(16, 12))\nplt.scatter(rent['Area'], rent['Aluguel'], c=labels, s=3, cmap='rainbow')\nplt.xlabel(\"Area total\")\nplt.ylabel(\"Valor do aluguel\")\nplt.show()","a0e5d061":"def clustering_algorithm(n_clusters, dataset):\n    kmeans = KMeans(n_clusters=n_clusters)\n    labels = kmeans.fit_predict(dataset)\n    s = metrics.silhouette_score(dataset, labels, metric='euclidean')\n    dbs = metrics.davies_bouldin_score(dataset, labels)\n    calinski = metrics.calinski_harabasz_score(dataset, labels)\n    return s, dbs, calinski, labels","480e4689":"s, dbs, calinski, labels = clustering_algorithm(3, rent[rent.columns[1:]])\nprint('Silhoutte: ', s, 'Davies-Bouldin: ', dbs, 'Calinski-Harabasz: ', calinski)","4dcef25a":"unique, counts = np.unique(labels, return_counts=True)\ndict(zip(unique, counts))","3223d1a1":"s2, dbs2, calinski2, labels2 = clustering_algorithm(5, rent[rent.columns[1:]])\nprint('Silhoutte: ', s2, 'Davies-Bouldin: ', dbs2, 'Calinski-Harabasz: ', calinski2)","7028da2d":"unique, counts = np.unique(labels2, return_counts=True)\ndict(zip(unique, counts))","a37cc559":"plt.figure(figsize=(16, 12))\nplt.scatter(rent['Andar'], rent['Aluguel'], c=labels, s=3, cmap='rainbow')\nplt.xlabel(\"Area total\")\nplt.ylabel(\"Valor do aluguel\")\nplt.show()","ab6788bc":"\nNesse Notebook eu fa\u00e7o uma explora\u00e7\u00e3o dos dados de um dataset de valores de aluguel de imoveis.\n\nFazendo uma analise vou tentar devendar:\n\n* Quais parametros mais influenciam no pre\u00e7o do aluguel.","5d754561":"## Conclus\u00e3o\n\nNos gr\u00e1ficos acima n\u00e3o consegui ver uma rela\u00e7\u00e3o direta entre IPTU e condominio, mas o seguro contra incendio mostrou grande correla\u00e7\u00e3o. Isso pode ser devido ao fato que o pre\u00e7o possa estar mais relacionado com o valor do apartamento.","75762982":"# Analise da rela\u00e7\u00e3o do aluguel com outros valores pagos.\n\nQuero analisar a rela\u00e7\u00e3o do valor do aluguel com outros valores pagos, ou seja a taxa de consominio, o IPTU e o seguro contra incendio\n","79abe0d2":"# Criando cluster","9c5444e5":"# Lidando com outliers"}}