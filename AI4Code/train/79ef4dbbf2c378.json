{"cell_type":{"84e4d86f":"code","98a4df67":"code","bec1dddb":"code","23c0dcbd":"code","d4de6872":"code","935eeb7f":"code","fc2bbd5a":"code","c89452ee":"code","20edf275":"code","1e2b258f":"code","cd88b820":"code","cc7778f5":"code","68571d7c":"code","9fa842c0":"code","f4f9910a":"code","82e9a6b2":"code","e6dc2b39":"code","36a18bfe":"code","cc6dfef2":"code","899612c9":"code","93f0c175":"code","72ec2fb3":"code","90615172":"code","06f1fee2":"code","a64dd2ae":"code","c040778b":"code","69e91ce6":"code","465408de":"code","c951fbf5":"code","0b6388fa":"code","7f36a160":"code","3a1daf42":"markdown","4cf68281":"markdown","8b4e42b5":"markdown","de6d0426":"markdown","f3b60d18":"markdown"},"source":{"84e4d86f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","98a4df67":"import seaborn as sns \nimport matplotlib.pyplot as plt\nimport matplotlib\nimport warnings\nfrom scipy import stats\n\nwarnings.filterwarnings(\"ignore\")\nmatplotlib.rcParams[\"figure.figsize\"] = (10, 9)\nsns.set_theme(\"notebook\");","bec1dddb":"data = pd.read_csv(\"\/kaggle\/input\/videogamesales\/vgsales.csv\")\ndata.head()","23c0dcbd":"data.columns = data.columns.str.lower()","d4de6872":"data.info()","935eeb7f":"data.describe()","fc2bbd5a":"data.isnull().sum()","c89452ee":"# Check for outliers to impute missing values\nyear_quartiles = np.percentile(data['year'].dropna(), [25, 50, 75])\nmax_iqr = year_quartiles[2] + 1.5 * (year_quartiles[2] - year_quartiles[0])\nmin_iqr = year_quartiles[0] - 1.5 * (year_quartiles[2] - year_quartiles[0])\nmax_iqr, min_iqr","20edf275":"data.shape","1e2b258f":"sns.countplot(x='genre', data=data)\nplt.xticks(rotation=90);","cd88b820":"ax = sns.factorplot(data=data, y='year', kind='box')\nplt.hlines(xmin=-0.5, xmax=0.5, y=max_iqr, color='red', ls='dashed')\nplt.hlines(xmin=-0.5, xmax=0.5, y=min_iqr, color='red', ls='dashed')","cc7778f5":"# Those outliers cannot be removed\ndata['year'].fillna(np.mean(data['year']), inplace=True)","68571d7c":"data.isnull().sum()","9fa842c0":"data['publisher'].value_counts()","f4f9910a":"data['publisher'].fillna(stats.mode(data['publisher'])[0][0], inplace=True)","82e9a6b2":"data.isnull().sum()","e6dc2b39":"data['year'] = data['year'].apply(lambda x: int(x))","36a18bfe":"# Finding the region which has performed the best in terms of overall sales\nsales_columns = data.columns[data.columns.str.contains('sales')]\nsales_by_year = data.groupby(['year']).sum()[sales_columns].reset_index()","cc6dfef2":"sales_by_year.head(5)","899612c9":"# plt.figure(figsize=(20, 18))\nax = sns.catplot(data=data, x='year', kind='count', height=7)\nplt.xticks(rotation=90);","93f0c175":"overall_sales = sales_by_year.sum(axis=0).drop('year')\noverall_sales","72ec2fb3":"colors = sns.color_palette('pastel')[0:overall_sales.shape[0]]\nplt.pie(overall_sales.drop('global_sales'), labels=overall_sales.drop('global_sales').index, colors=colors, autopct='%.0f%%');","90615172":"data['platform'].value_counts()","06f1fee2":"# What are the top 10 games making the most sales globally?\nsales_by_year","a64dd2ae":"overall_sales_wrt_game = data.pivot_table('global_sales', 'name', aggfunc='sum').reset_index().sort_values(by='global_sales', ascending=False)\nax = sns.barplot(data=overall_sales_wrt_game[0:10], x='name', y='global_sales')\nplt.xticks(rotation=90);","c040778b":"# Are there any games that have performed well regionally but not globally? What are they?\n# To answer this, we can create columns with the contribution of each region's sales to global sales and set a threshold (i.e if percentage \n# is greater than 99% of overall sales, it will mean that the game performed well regionally, but not globally).\n\nfor i in sales_columns.drop('global_sales'):\n    data[f\"{i}_percentage\"] = np.round(data[i] * 100 \/ data['global_sales'], decimals=2)\ndata.head()","69e91ce6":"def get_regional_leaders(df, region, threshold, sort=True):\n    col = f\"{region}_sales_percentage\"\n    temp_df = data[data[col] >= threshold][['name', col]]\n    if sort:\n        return temp_df.sort_values(by=col, ascending=False)\n    return temp_df","465408de":"fig, axes = plt.subplots(2, 2, figsize=(20, 16), sharey=True)\nfig.text(0.09, 0.5, 'Percentage in dominating region', va='center', rotation='vertical', size=20)\nregions = [\"na\", \"eu\", \"jp\", \"other\"]\nfig.subplots_adjust(hspace=0.8, wspace=0.1)\n\nfor i, ax in enumerate(axes.flat):\n    leaders = get_regional_leaders(df=data, region=regions[i], threshold=90, sort=False)\n    ax.bar(leaders['name'][0:12], leaders[f'{regions[i]}_sales_percentage'][0:12])\n    ax.set_title(f\"Regional Leaders \u2013\u00a0{regions[i]} Region\", size=15)\n    ax.set_xticklabels(leaders['name'][0:12].transform(lambda x: x[0:35]), rotation=90, size=12)","c951fbf5":"# Are there any games with release year older than 2000 that are still making high sales? What are they?\nbins = np.percentile(data['global_sales'], [0, 25, 50, 75, 100])\nlabels = ['Low', 'Medium', 'High', 'Very High']\ndata['global_sales_bins'] = pd.cut(data['global_sales'], bins, labels=labels, include_lowest=True)\ndata.head()","0b6388fa":"games_released_in_2020 = data.query('year <= 2000')['name'].value_counts().index.to_numpy()\nmost_recent = data[(data['name'].isin(games_released_in_2020))].sort_values(by='year', ascending=False)[0:5]\nmost_recent","7f36a160":"# Old games with top recent sales\nmost_sales = most_recent[most_recent['global_sales_bins'].isin(['High', 'Very High'])]\nsns.barplot(x='name', y='global_sales', data=most_sales)\nplt.title(\"Games with the most sales after 2012 released before 2000\", size=15);","3a1daf42":"No more missing values.","4cf68281":"**To be continued**. *Comments are very welcome :)*","8b4e42b5":"The most popular is \"Electronic Arts\", so we can use it to impute missing values.","de6d0426":"Wii sports is the most popular game, followed by Grand Theft Auto V.","f3b60d18":"'na_sales' contributed the most in overall sales."}}