{"cell_type":{"fa4e562e":"code","803b1063":"code","d2df32cc":"code","9c564290":"code","b2c99669":"code","0a10b4bf":"code","3bff675e":"code","a9c32bc2":"code","8fff7bfe":"code","4671fd92":"code","493addb3":"code","10369910":"code","61cf6c99":"code","5b4af470":"code","b9665836":"code","488221ed":"code","1f43f985":"code","85826b93":"code","7424c9e9":"code","09585f3b":"code","410e5f19":"code","52b4e3bb":"code","9e5e3aa3":"code","88bc73ef":"code","29203aca":"code","85f341e0":"code","398459df":"code","b9bfa843":"code","06b8259e":"code","5a74eb9e":"code","f1976fd0":"code","53c3d4fb":"code","5f9f680f":"code","3bd5a03f":"code","66327a5e":"code","7207bc4d":"code","b3173e58":"code","80f652f8":"code","554f4366":"code","cb2a9617":"code","da674870":"code","09beaaef":"code","32c9ada8":"code","3707809a":"code","9276f02b":"code","2d0acc35":"code","f4513213":"code","18974274":"code","91dee5b9":"code","e86fbc4c":"code","9c6ab364":"code","9dd56d7e":"code","f5234c82":"code","ae69a358":"code","76f9fe49":"code","4817ba0e":"code","16ca5af7":"code","832cce4e":"code","36df3946":"code","ef1728bd":"code","27616deb":"code","b9b863a9":"code","4b988f73":"code","3ce89700":"code","5a188037":"code","35a21860":"code","42ed3d4d":"code","cc8e79b2":"code","8a3ecf0d":"code","57584711":"code","af00477d":"code","f1ec5444":"code","32aab3bd":"code","1a3fb621":"code","084069d6":"code","db17dd2c":"code","9a4f1a22":"code","2ba603a7":"code","6f0d62c5":"code","49819fc5":"code","0efaf523":"code","c7bda5e5":"code","7eacab62":"code","01530bd4":"code","124ef123":"code","3a90e46e":"code","519bcec7":"code","38eba995":"code","c56c4388":"code","cde81b14":"code","b0fc5000":"code","77c7dba3":"code","91b5f48d":"code","22349090":"code","925c4046":"code","c4c7248e":"code","b573810c":"code","e0ebb12c":"code","003eba37":"code","89e919a3":"code","24905dc8":"code","68790c4f":"code","03b6948f":"code","237841e3":"code","18103e01":"code","33319823":"code","af35d779":"code","977317cd":"code","dae0af27":"code","eded70a9":"code","b7cc40b2":"code","082acc65":"code","307f91df":"code","01aae453":"code","e99b62b0":"code","d47e97a0":"code","9ae03f9d":"code","6cdffa7c":"code","3ce4421b":"code","f4c951fc":"code","423583e4":"code","ec5bf08e":"code","b5c10f09":"code","1825f392":"code","b09b438b":"code","04227d75":"code","270ecbc9":"code","755509d9":"code","fef0ac1d":"code","9dd7d3ca":"code","d934e3ec":"code","e6e66ca8":"code","a0d9245c":"code","6a9c3f1e":"code","15deae46":"code","647f597d":"code","7e90496a":"code","ece885ed":"code","55b71e78":"code","35fb9318":"code","6b2bb011":"code","36e745ba":"code","a893e941":"code","7eb039c9":"code","a40252d2":"code","fef4bdac":"code","74dea723":"code","8d2e4577":"code","1e93933f":"markdown","17e51b94":"markdown","7d6d93cd":"markdown","948629cd":"markdown","c57e423d":"markdown","5702cc8d":"markdown","21dbdfcd":"markdown","12a0fa63":"markdown","de9a1331":"markdown","e3914036":"markdown","8c589d49":"markdown","99c8f464":"markdown","cab8414f":"markdown","2aea8ec5":"markdown","cd7bc706":"markdown","a3e97dfe":"markdown","4609f0f4":"markdown","a9d8af4f":"markdown","418dfa83":"markdown","e7aff1cf":"markdown","840ba464":"markdown","362765a8":"markdown","dd1c27e3":"markdown","8b8ebbb3":"markdown","31a0646f":"markdown","bc9b6d9d":"markdown","bcc16c30":"markdown","2aa30d8d":"markdown","a3cb98f8":"markdown","77c35517":"markdown","49ec6620":"markdown","bd80149b":"markdown","e7c529f4":"markdown","b89d92f6":"markdown","2a227d47":"markdown","67507298":"markdown","0af3491c":"markdown","3517d3c0":"markdown","0b23ac15":"markdown"},"source":{"fa4e562e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import r2_score\n\n\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","803b1063":"data = pd.read_csv(\"..\/input\/eergy-efficiency-dataset\/ENB2012_data.csv\")","d2df32cc":"data.columns = [\"Relative Compactness\", \"Surface Area\", \"Wall Area\", \"Roof Area\", \"Overall Height\",\n               \"Orientation\", \"Glazing Area\", \"Glazing Area Distribution\", \"Heating Load\", \n                \"Cooling Load\"]","9c564290":"data","b2c99669":"data.info()","0a10b4bf":"# Check missing values\ndata.isnull().sum()","3bff675e":"data.shape","a9c32bc2":"# Summary statistics\ndata.describe()","8fff7bfe":"data['Relative Compactness'].unique().size","4671fd92":"sns.boxplot(x = data['Relative Compactness'], color = \"slateblue\")","493addb3":"## sebaran data berdasarkan atribut heating load pada Relative Compactness\nx = data['Relative Compactness']\ny = data['Heating Load']\nplt.scatter(x, y, color = \"crimson\")\nplt.xlabel('Relative Compactness')\nplt.ylabel('Heating Load')\nplt.show","10369910":"## sebaran data berdasarkan atribut cooling load pada Relative Compactness\nx = data['Relative Compactness']\ny = data['Cooling Load']\nplt.scatter(x, y, color = \"deepskyblue\")\nplt.xlabel('Relative Compactness')\nplt.ylabel('Cooling Load')\nplt.show","61cf6c99":"data['Surface Area'].unique().size","5b4af470":"sns.boxplot(x = data['Surface Area'], color = \"gold\")","b9665836":"## sebaran data berdasarkan atribut heating load pada Surface Area\nx = data['Surface Area']\ny = data['Heating Load']\nplt.scatter(x, y, color =\"crimson\")\nplt.xlabel('Surface Area')\nplt.ylabel('Heating Load')\nplt.show","488221ed":"## sebaran data berdasarkan atribut cooling load pada Surface Area\nx = data['Surface Area']\ny = data['Cooling Load']\nplt.scatter(x, y, color =\"deepskyblue\")\nplt.xlabel('Surface Area')\nplt.ylabel('Cooling Load')\nplt.show","1f43f985":"data['Wall Area'].unique().size","85826b93":"sns.boxplot(x = data['Surface Area'], color = \"coral\")","7424c9e9":"## sebaran data berdasarkan atribut heating load pada Wall Area\nx = data['Wall Area']\ny = data['Heating Load']\nplt.scatter(x, y, color =\"crimson\")\nplt.xlabel('Wall Area')\nplt.ylabel('Heating Load')\nplt.show","09585f3b":"## sebaran data berdasarkan atribut cooling load pada Wall Area\nx = data['Wall Area']\ny = data['Cooling Load']\nplt.scatter(x, y, color =\"deepskyblue\")\nplt.xlabel('Wall Area')\nplt.ylabel('Cooling Load')\nplt.show","410e5f19":"data['Roof Area'].unique().size","52b4e3bb":"sns.boxplot(x = data['Roof Area'], color = \"lawngreen\")","9e5e3aa3":"## sebaran data berdasarkan atribut heating load pada Roof Area\nx = data['Roof Area']\ny = data['Heating Load']\nplt.scatter(x, y, color = \"crimson\")\nplt.xlabel('Roof Area')\nplt.ylabel('Heating Load')\nplt.show","88bc73ef":"## sebaran data berdasarkan atribut cooling load pada Roof Area\nx = data['Roof Area']\ny = data['Cooling Load']\nplt.scatter(x, y, color = \"deepskyblue\")\nplt.xlabel('Roof Area')\nplt.ylabel('Cooling Load')\nplt.show","29203aca":"data['Overall Height'].unique().size","85f341e0":"sns.boxplot(x = data['Overall Height'], color = \"darksalmon\")","398459df":"## sebaran data berdasarkan atribut heating load pada Overall Height\nx = data['Overall Height']\ny = data['Heating Load']\nplt.scatter(x, y, color = \"crimson\")\nplt.xlabel('Overall Height')\nplt.ylabel('Heating Load')\nplt.show","b9bfa843":"## sebaran data berdasarkan atribut cooling load pada Overall Height\nx = data['Overall Height']\ny = data['Cooling Load']\nplt.scatter(x, y, color = \"deepskyblue\")\nplt.xlabel('Overall Height')\nplt.ylabel('Cooling Load')\nplt.show","06b8259e":"data['Orientation'].unique().size","5a74eb9e":"sns.boxplot(x = data['Orientation'], color = \"lightseagreen\")","f1976fd0":"## sebaran data berdasarkan atribut heating load pada Orientation\nx = data['Orientation']\ny = data['Heating Load']\nplt.scatter(x, y, color = \"crimson\")\nplt.xlabel('Orientation')\nplt.ylabel('Heating Load')\nplt.show","53c3d4fb":"## sebaran data berdasarkan atribut cooling load pada Orientation\nx = data['Orientation']\ny = data['Cooling Load']\nplt.scatter(x, y, color = \"deepskyblue\")\nplt.xlabel('Orientation')\nplt.ylabel('Cooling Load')\nplt.show","5f9f680f":"data['Glazing Area'].unique().size","3bd5a03f":"sns.boxplot(x = data['Glazing Area'], color = \"darkorchid\")","66327a5e":"## sebaran data berdasarkan atribut heating load pada Glazing Area\nx = data['Glazing Area']\ny = data['Heating Load']\nplt.scatter(x, y, color = \"crimson\")\nplt.xlabel('Glazing Area')\nplt.ylabel('Heating Load')\nplt.show","7207bc4d":"## sebaran data berdasarkan atribut cooling load pada Glazing Area\nx = data['Glazing Area']\ny = data['Cooling Load']\nplt.scatter(x, y, color = \"deepskyblue\")\nplt.xlabel('Glazing Area')\nplt.ylabel('Cooling Load')\nplt.show","b3173e58":"data['Glazing Area Distribution'].unique().size","80f652f8":"sns.boxplot(x = data['Glazing Area Distribution'], color = \"skyblue\")","554f4366":"## sebaran data berdasarkan atribut heating load pada Glazing Area Distribution\nx = data['Glazing Area Distribution']\ny = data['Heating Load']\nplt.scatter(x, y, color = \"crimson\")\nplt.xlabel('Glazing Area Distribution')\nplt.ylabel('Heating Load')\nplt.show","cb2a9617":"## sebaran data berdasarkan atribut cooling load pada Glazing Area Distribution\nx = data['Glazing Area Distribution']\ny = data['Cooling Load']\nplt.scatter(x, y, color = \"deepskyblue\")\nplt.xlabel('Glazing Area Distribution')\nplt.ylabel('Cooling Load')\nplt.show","da674870":"data['Heating Load'].unique().size","09beaaef":"sns.boxplot(x = data['Heating Load'], color = \"r\")","32c9ada8":"plt.hist(data['Heating Load'], bins = 10, edgecolor = 'black', color = \"lightsalmon\")\nplt.show()","3707809a":"data['Cooling Load'].unique().size","9276f02b":"sns.boxplot(x = data['Cooling Load'], color = \"dodgerblue\")","2d0acc35":"plt.hist(data['Cooling Load'], bins = 10, edgecolor = 'black', color = \"royalblue\")\nplt.show()","f4513213":"plt.hist(data['Heating Load'], bins = 10, edgecolor = 'black')\nplt.hist(data['Cooling Load'], bins = 10, edgecolor = 'black', alpha = 0.5)\nplt.show()","18974274":"plt.figure(figsize = (15, 10))\nsns.heatmap(data.corr(), annot = True)","91dee5b9":"x = data['Relative Compactness']\ny = data['Surface Area']\nplt.scatter(x,y)\nplt.show","e86fbc4c":"x = data['Relative Compactness'].values.reshape(-1,1)\ny = data['Surface Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","9c6ab364":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","9dd56d7e":"# accuracy score\n\nlin_reg.score(x_test, y_test)","f5234c82":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Relative Compactness')\nplt.ylabel('Surface Area')\nplt.title('Relative Compactness vs Surface Area')","ae69a358":"x = data['Relative Compactness']\ny = data['Roof Area']\nplt.scatter(x,y)\nplt.show","76f9fe49":"x = data['Relative Compactness'].values.reshape(-1,1)\ny = data['Roof Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","4817ba0e":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","16ca5af7":"# accuracy score\n\nlin_reg.score(x_test, y_test)","832cce4e":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Relative Compactness')\nplt.ylabel('Roof Area')\nplt.title('Relative Compactness vs Roof Area')","36df3946":"x = data['Relative Compactness']\ny = data['Wall Area']\nplt.scatter(x,y)\nplt.show","ef1728bd":"x = data['Relative Compactness'].values.reshape(-1,1)\ny = data['Wall Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","27616deb":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","b9b863a9":"# accuracy score\n\nlin_reg.score(x_test, y_test)","4b988f73":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Relative Compactness')\nplt.ylabel('Wall Area')\nplt.title('Relative Compactness vs Wall Area')","3ce89700":"x = data['Relative Compactness']\ny = data['Overall Height']\nplt.scatter(x,y)\nplt.show","5a188037":"x = data['Relative Compactness'].values.reshape(-1,1)\ny = data['Overall Height'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","35a21860":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","42ed3d4d":"# accuracy score\n\nlin_reg.score(x_test, y_test)","cc8e79b2":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Relative Compactness')\nplt.ylabel('Overall Height')\nplt.title('Relative Compactness vs Overall Height')","8a3ecf0d":"x = data['Surface Area']\ny = data['Wall Area']\nplt.scatter(x,y)\nplt.show","57584711":"x = data['Surface Area'].values.reshape(-1,1)\ny = data['Wall Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","af00477d":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","f1ec5444":"# accuracy score\n\nlin_reg.score(x_test, y_test)","32aab3bd":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Surface Area')\nplt.ylabel('Wall Area')\nplt.title('Surface Area vs Wall Area')","1a3fb621":"x = data['Surface Area']\ny = data['Roof Area']\nplt.scatter(x,y)\nplt.show","084069d6":"x = data['Surface Area'].values.reshape(-1,1)\ny = data['Roof Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","db17dd2c":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","9a4f1a22":"# accuracy score\n\nlin_reg.score(x_test, y_test)","2ba603a7":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Surface Area')\nplt.ylabel('Roof Area')\nplt.title('Surface Area vs Roof Area')","6f0d62c5":"x = data['Surface Area']\ny = data['Overall Height']\nplt.scatter(x,y)\nplt.show","49819fc5":"x = data['Surface Area'].values.reshape(-1,1)\ny = data['Overall Height'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","0efaf523":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","c7bda5e5":"# accuracy score\n\nlin_reg.score(x_test, y_test)","7eacab62":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Surface Area')\nplt.ylabel('Overall Height')\nplt.title('Surface Area vs Overall Height')","01530bd4":"x = data['Wall Area']\ny = data['Roof Area']\nplt.scatter(x,y)\nplt.show","124ef123":"x = data['Wall Area'].values.reshape(-1,1)\ny = data['Roof Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","3a90e46e":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","519bcec7":"# accuracy score\n\nlin_reg.score(x_test, y_test)","38eba995":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Wall Area')\nplt.ylabel('Roof Area')\nplt.title('Wall Area vs Roof Area')","c56c4388":"x = data['Wall Area']\ny = data['Overall Height']\nplt.scatter(x,y)\nplt.show","cde81b14":"x = data['Wall Area'].values.reshape(-1,1)\ny = data['Overall Height'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","b0fc5000":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","77c7dba3":"# accuracy score\n\nlin_reg.score(x_test, y_test)","91b5f48d":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Wall Area')\nplt.ylabel('Overall Height')\nplt.title('Wall Area vs Overall Height')","22349090":"x = data['Roof Area']\ny = data['Overall Height']\nplt.scatter(x,y)\nplt.show","925c4046":"x = data['Roof Area'].values.reshape(-1,1)\ny = data['Overall Height'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","c4c7248e":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","b573810c":"# accuracy score\n\nlin_reg.score(x_test, y_test)","e0ebb12c":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Roof Area')\nplt.ylabel('Overall Height')\nplt.title('Roof Area vs Overall Height')","003eba37":"x = data['Glazing Area']\ny = data['Glazing Area Distribution']\nplt.scatter(x,y)\nplt.show","89e919a3":"x = data['Glazing Area'].values.reshape(-1,1)\ny = data['Glazing Area Distribution'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","24905dc8":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","68790c4f":"# accuracy score\n\nlin_reg.score(x_test, y_test)","03b6948f":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Glazing Area')\nplt.ylabel('Glazing Area Distribution')\nplt.title('Glazing Area vs Glazing Area Distribution')","237841e3":"x = data['Heating Load']\ny = data['Roof Area']\nplt.scatter(x,y)\nplt.show","18103e01":"x = data['Heating Load'].values.reshape(-1,1)\ny = data['Roof Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","33319823":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","af35d779":"# accuracy score\n\nlin_reg.score(x_test, y_test)","977317cd":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Heating Load')\nplt.ylabel('Roof Area')\nplt.title('Heating Load vs Roof Area')","dae0af27":"x = data['Heating Load']\ny = data['Overall Height']\nplt.scatter(x,y)\nplt.show","eded70a9":"x = data['Heating Load'].values.reshape(-1,1)\ny = data['Overall Height'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","b7cc40b2":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","082acc65":"# accuracy score\n\nlin_reg.score(x_test, y_test)","307f91df":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Heating Load')\nplt.ylabel('Overall Height')\nplt.title('Heating Load vs Overall Height')","01aae453":"x = data['Cooling Load']\ny = data['Roof Area']\nplt.scatter(x,y)\nplt.show","e99b62b0":"x = data['Cooling Load'].values.reshape(-1,1)\ny = data['Roof Area'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","d47e97a0":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","9ae03f9d":"# accuracy score\n\nlin_reg.score(x_test, y_test)","6cdffa7c":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Cooling Load')\nplt.ylabel('Roof Area')\nplt.title('Cooling Load vs Roof Area')","3ce4421b":"x = data['Cooling Load']\ny = data['Overall Height']\nplt.scatter(x,y)\nplt.show","f4c951fc":"x = data['Cooling Load'].values.reshape(-1,1)\ny = data['Overall Height'].values.reshape(-1,1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","423583e4":"# Visualisasi pakai linier regression\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\n\n# nilai slope\/koefisien dan intercept\n\nprint(lin_reg.coef_)\nprint(lin_reg.intercept_)","ec5bf08e":"# accuracy score\n\nlin_reg.score(x_test, y_test)","b5c10f09":"y_prediksi = lin_reg.predict(x_test)\nplt.scatter(x_test, y_test)\nplt.plot(x_test, y_prediksi, c = 'r')\nplt.xlabel('Cooling Load')\nplt.ylabel('Overall Height')\nplt.title('Cooling Load vs Overall Height')","1825f392":"X = data[[\"Relative Compactness\", \"Surface Area\", \"Wall Area\", \"Roof Area\" , \"Overall Height\"]]\nY = data[[\"Heating Load\", \"Cooling Load\"]]","b09b438b":"X.head()","04227d75":"Y.head()","270ecbc9":"X_train, X_test , Y_train, Y_test = train_test_split(X,Y, test_size= 0.2, random_state = None)","755509d9":"standard = StandardScaler()","fef0ac1d":"x_train = standard.fit_transform(X_train)\ny_train = standard.fit_transform(Y_train)\nx_test = standard.fit_transform(X_test)\ny_test = standard.fit_transform(Y_test)","9dd7d3ca":"x_train\ny_train\nx_test\ny_test","d934e3ec":"dt_regressor = DecisionTreeRegressor(random_state = 0)","e6e66ca8":"dt_regressor.fit(X_train, Y_train)","a0d9245c":"y_early_dt = dt_regressor.predict(X_train)","6a9c3f1e":"r2_score(Y_train, y_early_dt)","15deae46":"y_after_dt = dt_regressor.predict(X_test)","647f597d":"r2_score(Y_test, y_after_dt)","7e90496a":"# Create random forest model \nrf_regressor = RandomForestRegressor(n_estimators = 20, random_state = None)","ece885ed":"# Apply the model\nrf_regressor.fit(X_train, Y_train)","55b71e78":"# Early Predicted value\ny_early = rf_regressor.predict(X_train)","35fb9318":"r2_score(Y_train, y_early)","6b2bb011":"y_after = rf_regressor.predict(X_test)","36e745ba":"r2_score(Y_test, y_after)","a893e941":"# Create KNN Model \nknn = KNeighborsRegressor(n_neighbors=5)","7eb039c9":"# Apply the model\nknn.fit(X_train, Y_train)","a40252d2":"# Train Predicted Value\ny_knn = knn.predict(X_train)","fef4bdac":"# Train Model Score\nr2_score(Y_train, y_knn)","74dea723":"# Test Predicted Value\ny_pred_knn = knn.predict(X_test)","8d2e4577":"# Test Model Score\nr2_score(Y_test, y_pred_knn)","1e93933f":" **Heating Load vs Overall Height**","17e51b94":"**Wall Area vs Overall Height**","7d6d93cd":"## Visualisasi atribut yang berkaitan","948629cd":"**Wall Area vs Roof Area**","c57e423d":"## Standarisasi","5702cc8d":"Kesimpulan sementara :\n* Tidak terdapat missing value\n* Tidak terdapat outliers\n\n* X1 berbanding terbalik dgn X2. Nilai korelasi -0.99 (korelasi negatif)\n* X2 berbanding lurus dgn X3. Nilai korelasi 0.2 (korelasi rendah, positif\n* X2 berbanding lurus dgn X4. Nilai korelas 0.88 (korelasi positif)\n* X3 berbanding terbalik dgn X4. Nilai korelasi -0.29 (korelasi rendah, negatif)\n* X4 berbanding terbalik dgn X5. Nilai korelasi -0.97 (korelasi negatif)\n* X7 berbanding lurus dgn X8. Nilai korelasi 0.21 (korelasi rendah, positif)\n* Y1 berbanding terbalik dgn X4. Nilai korelasi -0.86 (korelasi negatif)\n* Y1 berbanding lurus dgn X5. Nilai korelasi 0.89 (korelasi positif)\n* Y2 berbanding terbalik dgn X4. Nilai korelasi -0.86 (korelasi negatif)\n* Y2 berbanding terbalik dgn X5. Nilai korelasi 0.9 (korelasi positif)","21dbdfcd":"**Cooling Load vs Roof Area**","12a0fa63":"**Heating Load**","de9a1331":"## Data Exploration","e3914036":"**Surface Area**","8c589d49":"**Relative Compactness vs Overall Height**","99c8f464":" **Heating Load vs Roof Area**","cab8414f":"**Relative Compactness vs Roof Area**","2aea8ec5":"**Roof Area**","cd7bc706":"### Load the data","a3e97dfe":"**Surface Area vs Roof Area**","4609f0f4":"**Roof Area vs Overall Height**","a9d8af4f":"**Surface Area vs Wall Area**","418dfa83":"**Relative Compactness**","e7aff1cf":"**Relative Compactness vs Wall Area**","840ba464":"## Correlations","362765a8":"**Relative Compactness vs Surface Area**","dd1c27e3":"**Glazing Area**","8b8ebbb3":"**Cooling Load**","31a0646f":"## Data Modelling","bc9b6d9d":"## Visualisasi heating dan cooling load","bcc16c30":"**Random Forest**","2aa30d8d":"**Glazing Area Distribution**","a3cb98f8":"## Model","77c35517":"### Data type","49ec6620":"**Surface Area vs Overall Height**","bd80149b":"**Wall Area**","e7c529f4":"**Orientation**","b89d92f6":"**Decision Tree**","2a227d47":" **Glazing Area vs Glazing Area Distribution**","67507298":"**Cooling Load vs Overall Height**","0af3491c":"**K-Neirest Neighbors**","3517d3c0":"**Overall Height**","0b23ac15":"### Data Preprocessing"}}