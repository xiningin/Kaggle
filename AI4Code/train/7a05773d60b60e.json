{"cell_type":{"c9281c4f":"code","4e7e13ae":"code","9b2f756f":"code","17ffb9df":"code","42e0a3c2":"code","721db20f":"code","9b5a03a5":"code","0739c5bb":"code","6033ce4a":"code","f0843256":"code","dcf2b154":"code","934cb94d":"code","7fc3d39a":"code","479b9404":"code","0423e55b":"code","bd650552":"code","010ce2f2":"code","a85f1765":"code","cce6c404":"code","b6c6a5c7":"code","c69ade4a":"code","d9b08bcc":"code","ab456b6d":"code","7a890f61":"code","bbfd2fe0":"markdown","4d0fdbd9":"markdown","141203a1":"markdown","01c2f85f":"markdown","2ff4a352":"markdown","8385b3c4":"markdown","898331f3":"markdown","73d32d97":"markdown","c8e6bffa":"markdown","2bd50cd3":"markdown","3d66b598":"markdown","db39a0fe":"markdown","d9ea1e2c":"markdown","73f6dbd8":"markdown","6d1f3ef6":"markdown","cfbac814":"markdown","993c6e6a":"markdown","fa9bf201":"markdown","c75b6f81":"markdown","b36cf4c8":"markdown"},"source":{"c9281c4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4e7e13ae":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas.plotting import scatter_matrix\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import mutual_info_classif\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nimport warnings  \nwarnings.filterwarnings('ignore')","9b2f756f":"heart_attack = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\nheart_attack","17ffb9df":"#check for null values\nheart_attack.isnull().sum()\n#no null values","42e0a3c2":"#check dtypes\nheart_attack.dtypes\n#all numeric type\n#but some features must be categorical, so the data is cleaned and changed to numeric\n#must find which features are categorical\n","721db20f":"#Since the data is already cleaned and no null-values, we can go straight to EDA and build predictive model later\n#we would be able to know which feature is categorical and numerical through  features explanation\n#but we can also make sure of it by showing each features cardinality\n#categorical data will have low cardinality, and doing this will also helps us in building predictive model later\n\nheart_attack.nunique()\n\n\n#there are 303 rows, and these are health informations of each sample\n\n#age : numerical\n#sex : categorical\n#cp (chest pain) : categorical (1: typical angina,  2: atypical angina,  3: non-anginal pain,  4: asymptomatic)\n#trtbps (resting blood pressure) : numerical\n# chol (cholesterol) : numerical\n# fbs (fasting blood sugar) : categorical ((fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false))\n# restecg (resting electrocardiographic results) :  categorical \n#thalachh (maximum heart rate achieve) : numerical\n#exng (exercise induce angina) : categorical\n#oldpeak (ST depression induced by exercise relative to rest) : numerical\n#slp (slope, slope of the peak exercise ST segment (1 = upsloping; 2 = flat; 3 = downsloping)) : categorical\n#caa ( number of major vessels): categorical\n#thal : categorical\n\n\n#output is the target (0: low heart attack risk, 1: high heart attack risk)","9b5a03a5":"#classify the features \n\nnumerical_features = ['age', 'trtbps', 'chol', 'thalachh', 'oldpeak']\n\ncategorical_features = ['sex', 'cp', 'fbs', 'restecg', 'exng', 'slp', 'caa', 'thall']\n\ntarget = heart_attack['output']\n\nheart_attack =  heart_attack.drop(['output'], axis=1)\n","0739c5bb":"# Descriptive statistic\n# numerical features only\nheart_attack[numerical_features].describe()","6033ce4a":"#histogram to see our distribution\nheart_attack[numerical_features].hist(bins=30, figsize= (10, 7))\nplt.show()","f0843256":"fig, ax = plt.subplots(figsize=(8, 5))\n#for i in list(heart_attack[numerical_features].columns):\nheart_attack[numerical_features].boxplot()\n#ax.set_xticklabels(list(heart_attack[numerical_features].columns))\nplt.show()","dcf2b154":"#fig, ax = plt.subplots(figsize=(10, 8))\n\ntranslate_output = {'output' : {1: 'High Heart Attack Risk',  0 : 'Low Heart Attack Risk'}}\n\n# Pie chart\nlabels = list(target.value_counts().reset_index()['index'])\nlabels = [translate_output['output'][i] for i in labels]\nsizes = list(target.value_counts().reset_index()['output'])\n\n#colors\ncolors = ['#ff9999','#66b3ff']\n#explsion\nexplode = (0.05,0.05)\nfig, ax = plt.subplots(figsize=(8, 5)) \nax.pie(sizes, colors = colors, labels=labels, autopct='%1.1f%%', startangle=90, pctdistance=0.85, explode = explode)\n#draw circle\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax.axis('equal')  \nplt.tight_layout()\nplt.show()","934cb94d":"#Categorical features \n#starts with this question, what is the dominant value of each cat features?\n\n\ntranslate_values = {'sex' : {0: 'Female', 1:'Male'},\n                   'cp' : {0: 'typical angina', 1: 'atypical angina', 2: 'non-anginal pain', 3: 'asymptomatic'}, \n                   'fbs': {0: 'Low FBS (<120 mg\/dl)', 1: 'High FBS (>120 mg\/dl)'}, \n                   'restecg': {0 : 'Normal', 1 : 'ST-T wave abnormality', 2: 'left ventricular hypertrophy'}, \n                   'exng' : {0: 'Other Angina Reason', 1 : 'Exercise Induce Angina'}, \n                   'slp' : {0: 'upsloping', 1 : 'flat', 2: 'downsloping'}, \n                   'caa' : {0:1, 1:2, 2:3, 3:4, 4:5},\n                   'thall': {0:0, 1:1, 2:2, 3:3}}\n\n\n\nfig = plt.figure(figsize=(15, 20))\nfor x in range(len(list(heart_attack[categorical_features].columns))):\n    labels = list(heart_attack[categorical_features][categorical_features[x]].value_counts().reset_index()['index'])\n    translated_label = [translate_values[categorical_features[x]][i] for i in labels] #translate label for readability\n    sizes = [i for i in list(heart_attack[categorical_features][categorical_features[x]].value_counts().reset_index()[categorical_features[x]])]\n    size_true = [int(i\/sum(sizes)*100) for i in sizes]\n    explode = tuple([0.05 for i in range(len(labels))])\n    ax = plt.subplot(4, 2, x+1)\n    ax.pie(size_true, labels=translated_label, autopct='%1.1f%%', startangle=90, pctdistance=0.85 , explode = explode) #, textprops={'fontsize': 20}\n    centre_circle = plt.Circle((0,0),0.70,fc='white')\n    centre_circle = plt.Circle((0,0),0.70,fc='white')\n    fig = plt.gcf()\n    fig.gca().add_artist(centre_circle)\n    ax.axis('equal') \n    plt.title(categorical_features[x], fontsize=30)\n    plt.tight_layout()\n#fig.suptitle(year[x], fontsize=16, y=1.03)\nplt.show()","7fc3d39a":"#try to use pairplot\nfig1 = plt.figure(figsize=(16,16))\nsns.pairplot(pd.concat([heart_attack[numerical_features], target], axis=1), hue='output')\nplt.show()","479b9404":"#heatmap\nfig, ax = plt.subplots(figsize=(15,10))\nsns.heatmap(pd.concat([heart_attack[numerical_features], target], axis=1).corr(),annot=True,cmap=\"Oranges\",ax=ax)\nplt.show()","0423e55b":"#try to use pairplot\nfig1 = plt.figure(figsize=(16,16))\nsns.pairplot(pd.concat([heart_attack[categorical_features], target], axis=1), hue='output')\nplt.show()\n","bd650552":"def mi_scores(dataset, target):\n    mutual_class = mutual_info_classif(dataset, target, random_state=42)\n    mutual_class = pd.Series(mutual_class, name=\"mutual information scores\", index=dataset.columns)\n    mutual_class = mutual_class.sort_values(ascending=False)\n    return mutual_class\n\nmutual_info_score = mi_scores(heart_attack, target)\nmutual_info_score # show a few features with their MI scores","010ce2f2":"plt.figure(dpi=100, figsize=(8, 5))\nmutual_info_score = mutual_info_score.sort_values(ascending=True)\nwidth = np.arange(len(mutual_info_score))\nticks = list(mutual_info_score.index)\nplt.barh(width, mutual_info_score, color= '#ff9999')\nplt.yticks(width, ticks)\nplt.title(\"Mutual Information Scores\")\n","a85f1765":"#before we go any further, \n#i want to Standardize and transform our numerical feature so it will be more gaussian like\n\nrobust_scale = RobustScaler()\npower = PowerTransformer()\ndata_trans = robust_scale.fit_transform(heart_attack[numerical_features])\ndata_trans = power.fit_transform(data_trans)\ndf = pd.DataFrame(data_trans, columns=heart_attack[numerical_features].columns)\nax = df.hist(figsize=(10, 7))\nplt.show()","cce6c404":"#replace old value with new value\nheart_attack2 =heart_attack.copy()\nheart_attack2.drop(labels=numerical_features, axis=1, inplace=True)\nheart_attack2[numerical_features] = df[numerical_features]\nheart_attack2","b6c6a5c7":"#perform ONE-Hot Encoding for our Categorical feature\n#all our categorical features has cardinality less than 5, so OHE would be ideal\nOH_encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)\ndata_trans2 = pd.DataFrame(OH_encoder.fit_transform(heart_attack2[categorical_features]))\ndata_trans2.index = heart_attack2.index\nheart_attack2 = heart_attack2.drop(categorical_features, axis=1)\nheart_attack2 = pd.concat([heart_attack2, data_trans2], axis=1)\n#now our dataset is ready for any machine learning model\nheart_attack2","c69ade4a":"x_train, x_valid, y_train, y_valid = train_test_split(heart_attack2, target, train_size=0.8, test_size=0.2, random_state=0)","d9b08bcc":"#KNN\nknn = KNeighborsClassifier(n_neighbors=10)\n\n# Train the model using the training sets\nknn.fit(x_train,y_train)\n\n#Predict Output\ny_pred = knn.predict(x_valid)\nknn_score = metrics.accuracy_score(y_valid, y_pred)\nprint(\"Accuracy:\", knn_score)","ab456b6d":"# creating Random Forest Classifier Object\nrfc = RandomForestClassifier(n_estimators = 100, random_state=42)  \n  \n# Training the model \nrfc.fit(x_train, y_train)\n  \n#prediction using validation set\ny_pred = rfc.predict(x_valid)\n  \nrfc_score = metrics.accuracy_score(y_valid, y_pred)\n  \n# accuracy\nprint(\"ACCURACY OF THE MODEL: \", rfc_score)","7a890f61":"score = pd.DataFrame({'KNN': [knn_score], 'Random Forest Classifier' : [rfc_score]})\nscore","bbfd2fe0":"### Building Machine Learning Model","4d0fdbd9":"## Univariate Analysis\n\n### Numerical Data","141203a1":"### All analysis is based on dataset\n    1. Sex : There are more Male than Female in our dataset\n    2. Chest pain : 48% chest pain is caused by typical angina \n    3. Fbs : 85.9% sample has normal blood sugar level (<120mg\/dl)\n    4. Restecg : 48.5% has normal heartwave, 50.5 has ST-T wave abnormality\n    5. Exng : 67.7% has Angina caused by other reasons than exercise","01c2f85f":"## Bivariate Analysis","2ff4a352":"### age\n    mean of age is 54\n    minimum age is 29, so no children, teen or early adult data\n    maximum age is 77 years old\n    median is 55 years old, close to our mean, there are probably no outliers, \n        but we still have to check for outliers with histogram or distribution plot later \n        standard deviation is 9, it means if our dataset distribution is normal, 68% of age values wil be around 45-63 \n        years old and 95% of age values will be around 36-72years old\n\n#### resting blood pressure\n    it seems only systolic is recorded\n    mean and median is close to each other 131 and 130, so probably no outliers\n        this considered as high value because normal people trtbps is below 120\/80 Mmhg and above 90\/60 Mmhg\n        but we have to check the correlation with age, because older people then to have higher trtbs\n    minimum trtbs value is 94, the minimum value recorded in dataset  (healthy value)\n    maximum value is 200, it's hypertension, and people who have this high blood pressure\n        will experience chest pain, headache, shortness of breath or blood in the urine\n        it is the the highest trtbps in our dataset\n    standard deviation is 17, with our means of 131 (assuming no outliers and bell-shaped distribution),\n        68% of trtbps values will be around 114-148\n      \n#### cholesterol\n    mean and median is still pretty close at 241 and 246 , but there maybe small amounts of outliers\n    these numbers are not good numbers\n    Total cholesterol levels less than 200 milligrams per deciliter (mg\/dL) are considered desirable for adults. \n    A reading between 200 and 239 mg\/dL is considered borderline high\n    and a reading of 240 mg\/dL and above is considered high\n    minimum and maximum values are 126 and 564, \n        126 is borderline low (too low can lead to another type of health risk, but we wouldn't explain it further)\n        564 is too high  (this might be sign of obesity , and can cause symptoms; angina and chest pain)\n    standard deviation is 51, assuming no outliers (removing or transform) and bell-shape distribution,\n        68% of chol values is around 190-297\n    \n    \n####  thalachh (maximum heart rate achieved)\n     mean and median 149-153, there maybe small amount of outliers\n         according to heart.org, good heart rate per person is vary depend on age (220-age)\n     standard deviation 22 (68% of data will be around 127-175)\n     min and max values are 71 and 202\n\n#### oldpeak (ST depression induced by exercise relative to rest)\n    still have not idea what this feature means, but it is in our dataset\n    so this must be important value to determine the risk ofheart attack\n    we can understand this further later in bivariate analysis and features importance\n        ","8385b3c4":"### Mutual Information Score","898331f3":"### Score Summary KNN VS Random Forest Classifier","73d32d97":"#### Distribution Analysis\n    Age and Thallach seems to follow normal distribution\n    Cholesterol has outliers and skewed to the right\n    Trtbps has few outliers\n    Oldpeak is highly skewed to the right with long tail\n    \n    Since i will use KNN classifier later, it is necessary to transform these numerical features","c8e6bffa":"### Categorical Data","2bd50cd3":"#### No strong correlation\n    Cp, thalachh, and slp show positive correlation but close to 0 rather than 1","3d66b598":"### Random Forest Classifier","db39a0fe":"### so since the data is already cleaned, we can just start the EDA\n#### first analze each features and later, their coorelation with our target\n\n#### 1. Age : \n    does certain age range has higher heart attack risk? \n    from our dataset, visualize 0 and 1 (target) and compare the age range\n\n#### 2. Sex (0=Female 1=Male) :\n    Does one gender has higer risk of heart attack over ther other?\n    \n\n#### EXNG (exercise induce angina) : \n    angina is chest pain or pressure, usually due to insufficient blood flow to the heart muscle\n    in the dataset value 1 if angina is caused by exercise and 0 if caused by other reason \n\n#### CA: number of major vessels\n        Does low or high number has a correlation to higher heart attack risk?\n        \n#### Chest Pain : the most important feature i think   \n    Value 1: typical angina\n    Value 2: atypical angina\n    Value 3: non-anginal pain\n    Value 4: asymptomatic\n    \n    Visualize between 0 and 1, and put hue = cp, so we can see in comparison\n     in higher chance of heart attack (1 in our target), which chest pain value is most dominan\n     in lower chance (0 in our target) which cp value is more dominan\n     in here we can see which value is more likely linked to higher heart attack risk\n\n#### trtbps : resting blood pressure (in mm Hg)\n    usually resting blood pressure is denoted as systolic\/diatolic (e.g. 120\/80 Mmhg)\n    but in our dataset it seems only the systolic part is recorded\n    normal trtbps for nomal perso is  below 120\/80 mm Hg and above 90\/60 mm Hg in an adult. \n    does higher trtbps result in higher risk oh Heart attack?\n    visualize the target and trtbps and AGE, usually older people tend to have higher trtbps.\n        \n    \"As you age, the vascular system changes. This includes your heart and blood vessels. \n    In the blood vessels, there\u2019s a reduction in elastic tissue in your arteries, \n    causing them to become stiffer and less compliant. As a result, your blood pressure increases\". \n    as describe from nakano in healthline.com \n        \n    we have to find if the high risk group is dominantly occupied by old people (above 40) and have high blood pressure, \n    visualize this for easier initial analysis\n        \n#### chol : cholestoral in mg\/dl fetched via BMI sensor\n\n    it is well known that High cholesterol can limit blood flow, increasing the risk of a heart attack or stroke. \n    Total cholesterol levels less than 200 milligrams per deciliter (mg\/dL) are considered desirable for adults.\n    A reading between 200 and 239 mg\/dL is considered borderline high and a reading of 240 mg\/dL and above is considered \n    high\n    \n    need to confirm if high chol results in higher heart attack risk\n    again, visualize the target with our chol feature, in high risk group what is the most common range of cholestrol\n    also, cholestrol has higher chance of being high for old people\n \n#### fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n    fasting blood sugar is the level of blood sugar taken after a patient has fast for certain amount period of time. \n    Does high blood sugar level (more than 120 mg\/dl) has higher chance for a heart attack?\n\n#### rest_ecg : resting electrocardiographic results\n    Value 0: normal\n    Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n    \n    resting ecg taken while the patient rest (there is also ecg taken while the patient is running on treadmill)\n    \n    does higher rest_ecg result (0, 1, 2) has higher chance of heart attack?\n    \n#### thalach : maximum heart rate achieved\n      does higher thalach result in higher risk?\n       \n#### thall - 3 = normal; 6 = fixed defect; 7 = reversable defect\n\n#### oldpeak - ST depression induced by exercise relative to rest\n#### slope - the slope of the peak exercise ST segment (1 = upsloping; 2 = flat; 3 = downsloping)\n\n#### Target (0 = Low Heart attack risk, 1=high attack risk)","d9ea1e2c":"### Analysis\n    fromm scatterplot above, we only see  positive correlation between age and cholesterol, looks like older people tend to have higher cholesterol","73f6dbd8":"### Categorical ","6d1f3ef6":"#### Mutual information analysis\n    Thall, caa and cp have the strongest relationship with our target\n    fbs, trtbps, and age has low relationship with our target\n    meanwhile sex is independen and doesn't show any relationship with our target","cfbac814":"### KNN","993c6e6a":"### Heart Attack EDA and ML model building\n    First time analyzing and building ML model in kaggle\n    Hope i can improve over time\n    Any critics helps","fa9bf201":"### Numerical Features","c75b6f81":"   54.5% sample in the dataset has high chance of heart attack","b36cf4c8":"### Normalize and Transform Features"}}