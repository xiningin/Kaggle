{"cell_type":{"9dd29a4d":"code","98146625":"code","21cbb4c8":"code","eefa3d46":"code","8eb20762":"code","2888925d":"code","5765939e":"code","54a44dfe":"code","cd264ec0":"code","e6458685":"code","721d1cb0":"code","4a013c5a":"code","e2113c2a":"code","15b20857":"code","775696f4":"markdown","4a03e73d":"markdown","29e624d6":"markdown","e1c048b8":"markdown"},"source":{"9dd29a4d":"import numpy as np\nimport pandas as pd\nimport json\nimport seaborn as sns\nfrom matplotlib import pyplot\nimport matplotlib.pyplot as plt\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nPALETTE = ['#00d27a','#b88121', '#838280', '#8e5b3d', 'black']\n\ndf = pd.read_csv('..\/input\/LANL agg LBs.csv', sep=';', index_col=0, parse_dates=['First step', 'Last step'])\ndf['activ'] = (df['Last step'] - df['First step']).astype('timedelta64[D]').astype(int)\ndf['strt activ'] = (df['First step'] - df['First step'].min()).astype('timedelta64[D]').astype(int)\ndf['end activ'] = (df['Last step'] - df['First step'].min()).astype('timedelta64[D]').astype(int)\n\ndf.head()","98146625":"sns.palplot(sns.color_palette(PALETTE))","21cbb4c8":"f, ax = plt.subplots(figsize=(16, 16))\n\ng = sns.kdeplot(df['PVT rank'], df['PUB rank'], ax=ax, shade=True, n_levels=30)\nsns.scatterplot(data=df, x='PVT rank', y='PUB rank', hue='Medal', palette=PALETTE, \n                  linewidth=0, alpha=0.7, size='Medal', sizes=[150, 100, 50, 50, 10], ax=ax)\n\nfor i, j in enumerate([5, 19, 227, 454]):\n    plt.plot([0, 4539], [j, j], color=PALETTE[i])","eefa3d46":"sns.set(rc={'figure.figsize':(15,15)})\n\ntmp = plt.subplot2grid((3, 2), (0, 0), colspan=2, rowspan=2)\nsns.scatterplot(data=df[:-7], x='PVT Score', y='PUB Score', hue='Medal', palette=PALETTE, \n                  linewidth=0, alpha=0.7, size='Medal', sizes=[150, 100, 50, 50, 5])\n\n\nplt.subplot2grid((3, 2), (2, 0))\nsns.scatterplot(data=df[df['PVT rank'] < 455], x='PVT Score', y='PUB Score', hue='Medal', palette=PALETTE[:-1], \n                  linewidth=0, alpha=0.7, size='Medal', sizes=[150, 100, 50, 50])\nplt.title('**only medalists**')\n\nplt.subplot2grid((3, 2), (2, 1))\nsns.distplot(df[:-7]['PUB Score'], bins=150)\nsns.distplot(df[:-7]['PVT Score'], bins=150)\nplt.xlabel('PVT\/PUB Score')\nplt.legend(labels=['PUB', 'PVT'])\n\ntmp.get_figure().subplots_adjust(hspace=0.5)","8eb20762":"for i,j in enumerate(['PUB rank','PUB Score','PVT rank','PVT Score']):\n    tmp = plt.subplot(2, 2, i+1)\n    sns.scatterplot(data=df[:-15], x=j, y='Sh-up', hue='Medal', palette=PALETTE, \n                  linewidth=0, alpha=0.7, size='Medal', sizes=[150, 100, 50, 50, 5])\n\n\ntmp.get_figure().subplots_adjust(wspace=0.3)","2888925d":"f, ([ax_box1, ax_box2], [ax_hist1, ax_hist2]) = plt.subplots(2, 2, sharex=False, gridspec_kw={\"height_ratios\": (.15, .85)})\nsns.boxplot(df[\"Sh-up\"], ax=ax_box1)\nsns.distplot(df[\"Sh-up\"], bins=50, kde=False, ax=ax_hist1)\nsns.boxplot(df[\"Sh-up\"].abs(), ax=ax_box2)\nsns.distplot(df[\"Sh-up\"].abs(), bins=25, kde=False, ax=ax_hist2)\n\nax_box1.set(xlabel='')\nax_box2.set(xlabel='')\nax_hist2.set(xlabel='abs Sh-up')\nf.subplots_adjust(hspace=0)\nf.set_size_inches(15,5)","5765939e":"pd.crosstab(df['Team Size'], df['Medal'], margins=True)[['G+', 'G', 'S', 'B', '-', 'All']]","54a44dfe":"fig, ax = plt.subplots(3, 2)\ny = [['Entries', 'activ'], ['Pub score step', 'PUB rank'], ['strt activ', 'end activ']]\nfor j in range(len(ax)):\n    for i in range(len(ax[j])):\n        sns.catplot(y=y[j][i], x='Team Size', data=df, kind=\"boxen\", ax=ax[j][i])\n        plt.close(2)","cd264ec0":"fig, ax = plt.subplots(3, 2)\ny = [['Entries', 'activ'], ['Pub score step', 'PUB rank'], ['strt activ', 'end activ']]\nfor j in range(len(ax)):\n    for i in range(len(ax[j])):\n        sns.catplot(y=y[j][i], x='Medal', data=df, kind=\"boxen\", palette=PALETTE, ax=ax[j][i])\n        plt.close(2)\n","e6458685":"plt.vlines(x=df['PVT rank'].iloc[:454], ymin=df['strt activ'].iloc[:454], ymax=df['end activ'].iloc[:454], color='b', alpha=0.2)\n\nax = sns.scatterplot(data=df.iloc[:454], x='PVT rank', y='end activ', hue='Medal', palette=PALETTE[:-1], \n                  linewidth=0, alpha=1, size='Medal', sizes=[150, 100, 50, 50])\n\n\nax.set(ylabel='number of days since the beginning of the competition', title='Medalists activity')\nplt.show()","721d1cb0":"for i, x in enumerate(['PVT Score', 'PUB Score']):\n    for j, y in enumerate(['Pub score step', 'Entries', 'activ']):\n        plt.subplot(3, 2, 2*j+i+1)\n        sns.scatterplot(data=df[:-7], x=x, y=y, hue='Medal', palette=PALETTE, \n                          linewidth=0, alpha=0.7, size='Medal', sizes=[150, 100, 50, 50, 5])","4a013c5a":"for i, x in enumerate(['PVT Score', 'PUB Score']):\n    for j, y in enumerate(['Pub score step', 'Entries', 'activ']):\n        plt.subplot(3, 2, 2*j+i+1)\n        ax = sns.scatterplot(data=df[((df['PVT rank'] < 455) | (df['PUB rank'] < 455))], x=x, y=y, hue='Medal', \n                        palette=PALETTE, \n                          linewidth=0, alpha=0.7, size='Medal', sizes=[200, 100, 50, 25, 5])","e2113c2a":"for i, x in enumerate(['Pub score step', 'Entries', 'activ', 'Team Size', 'strt activ', 'end activ']):\n    plt.subplot(3, 2, i+1)\n    sns.scatterplot(data=df, x=x, y='Sh-up', hue='Medal', palette=PALETTE, \n                      linewidth=0, alpha=0.7, size='Medal', sizes=[150, 100, 50, 50, 5])","15b20857":"for i, x in enumerate(['Pub score step', 'Entries', 'activ', 'Team Size', 'strt activ', 'end activ']):\n    plt.subplot(3, 2, i+1)\n    sns.scatterplot(data=df[((df['PVT rank'] < 455) | (df['PUB rank'] < 455))], x=x, y='Sh-up', hue='Medal', palette=PALETTE, \n                      linewidth=0, alpha=0.7, size='Medal', sizes=[150, 100, 50, 50, 5])","775696f4":"Full team - the best choice for medals? Teams of 7 people are not popular and failed in this competition(see below).","4a03e73d":"I processed [LANL Earthquake Prediction](http:\/\/https:\/\/www.kaggle.com\/c\/LANL-Earthquake-Prediction\/overview) LBs in order to improve my skills in working with sns, parsing html data, and just for fun. Maybe the result will be interesting or useful for someone.\n\nParsed LBs - https:\/\/www.kaggle.com\/parushkin\/lanl-lb\n\n\nAll graphs are clear (as i think). Questions may arise about the meaning of the following columns: \n\n* 'Has personal commits' - number of members of the command that made the commit outside the team,\n* 'Pub score step' - number of commits that increase public score\n* 'First step' - Date and time of the first commit (made by team or team member)\n* 'Last step' - Date and time of the last commit that increase public score\n* 'activ' - days number between 'Last step'and 'First step'\n* 'strt activ' - days number between 'First step' and beginning of the competition\n\nThe 'Teammates' column contains a JSON representation of the list of team members.","29e624d6":"Below are the sets of joint distributions for all participants (except for the last seven) and for those who are in the medal area in public or private leaderboards. It is not difficult to find on them some personalities \/ teams. \n\n","e1c048b8":"Here it is necessary to clarify.\nVertical lines - the period of medalists activity. It is assumed that the team on the last day of its activity commits the kernel which improves its public score. (unfortunately there is no other sign of the last activity)"}}