{"cell_type":{"3aa11b7c":"code","51d9e72e":"code","23764104":"code","dd4a1a5e":"code","13778223":"code","fbfc78b9":"code","06b3648d":"code","df101def":"code","5e156525":"code","f343b0b5":"code","23c73ecd":"code","a9ecfe26":"code","f251b236":"code","587c280d":"code","79d67c01":"code","d8586f2c":"code","f274514e":"code","0b06db24":"code","7729053f":"code","b1eaf74c":"code","168eaab0":"code","d3044d23":"code","b9bc8cdb":"code","f6a2cf58":"code","f0cf4fd1":"code","0e8dfb67":"code","ab238e20":"markdown","67017ef2":"markdown","ef9d3456":"markdown","445f3f29":"markdown","3dd48a4e":"markdown","d9756773":"markdown","735b234e":"markdown","668401cb":"markdown","811f159c":"markdown","655d027e":"markdown","65aef863":"markdown"},"source":{"3aa11b7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n\n\n# Any results you write to the current directory are saved as output.","51d9e72e":"data = pd.read_csv('..\/input\/Iris.csv')","23764104":"#Information Data (Veri ile ilgili bilgi)\ndata.info()","dd4a1a5e":"#Correlation (Korelasyon yani ili\u015fkileri g\u00f6sterir)\ndata.corr()","13778223":"#Correlation Map (Korelasyon Haritas\u0131n\u0131 G\u00f6sterir)\nf,ax = plt.subplots(figsize=(8,5)) \nsns.heatmap(data.corr(), annot=True, linewidths=.2, fmt= '.3f',ax=ax)\nplt.show()\n","fbfc78b9":"#Line Plot (\u00c7izgi Grafi\u011fi)\ndata.SepalLengthCm.plot(kind = 'line', color = 'blue',label = 'Sepal Length',linewidth=1,alpha = 1.7,grid = True,linestyle = ':')\ndata.PetalLengthCm.plot(color='black',label = 'Petal Length',linewidth=1, alpha = 1.7,grid = True,linestyle = '-.')\nplt.legend(loc='lower right')\nplt.xlabel(\"x axis(x ekseni)\",color=\"purple\")\nplt.ylabel(\"y axis(y ekseni)\",color=\"green\")\nplt.title('Line Plot (\u00c7izgi Grafi\u011fi)',color=\"yellow\")\n","06b3648d":"#Scatter Plot (Sa\u00e7\u0131l\u0131m Grafi\u011fi)\ndata.plot(kind=\"scatter\", x=\"SepalWidthCm\", y=\"PetalWidthCm\",alpha = 0.99,color = \"blue\")\nplt.xlabel(\"Sepal Width\",color=\"orange\")             \nplt.ylabel(\"Petal Width\",color=\"green\")\nplt.title(\"Sepal and Petal Scatter Plot (Sepal ve Petal'in Sa\u00e7\u0131l\u0131m Grafi\u011fi)\",color=\"yellow\")  ","df101def":"#Histogram\ndata.SepalWidthCm.plot(kind=\"hist\",bins=30,color=\"Orange\")\nplt.title(\"Sepal Width Histogram\",color=\"green\")\n","5e156525":"import pandas as pd\ndata=pd.read_csv(\"..\/input\/Iris.csv\")","f343b0b5":"#Filter Pandas  data frame (pandas da data frame filtreleme)\ndata[(data[\"SepalLengthCm\"]>6) & (data[\"PetalLengthCm\"]>5.5)] \n","23c73ecd":"i = 1\nwhile i !=12 :\n    print(\"i is:\",i)\n    i += 1\nprint(i,\"is equal to 12\")\n\n","a9ecfe26":"xyz = [1,2,3,4,5,6,7,8,9,10]\nfor i in xyz:\n    print(\"i is:\",i)\nprint(\"\")    ","f251b236":"data = pd.read_csv(\"..\/input\/Iris.csv\")\ndata.head() #First 5 rows (ilk 5 sat\u0131r)","587c280d":"data.tail() #Last 5 rows (son 5 sat\u0131r)","79d67c01":"data.columns #columns gives column namesof features (s\u00fctun isimlerini verir)","d8586f2c":"data.shape #shape gives number of rows and columns in a tuble (ka\u00e7 sat\u0131r ka\u00e7 s\u00fctun oldu\u011funu g\u00f6sterir)","f274514e":"data.info() #info gives type like dataframe, number of sample or row, number of feature or column, feature types etc. (bize dataframeler, sat\u0131r s\u00fctundaki bilgileri verir )","0b06db24":"print(data[\"Species\"].value_counts(dropna=False))\n#value_counts **  data frequency list (verideki s\u0131kl\u0131k listesini verir)**","7729053f":"data.describe()\n#shows us count,std,min,median etc. (bize toplam,meydan,ortalama,\u00e7eyrekleri g\u00f6sterir)","b1eaf74c":"# Black line at top is max ( \u00fcstteki siyah \u00e7izgi en b\u00fcy\u00fck de\u011fer)\n# Blue line at top is 75% (\u00fcstteki mavi \u00e7izgi 3.\u00c7eyrek)\n# Red line is median (50%) (K\u0131rm\u0131z\u0131 \u00e7izgi medyan(ortanca))\n# Blue line at bottom is 25% (alttaki mavi \u00e7izgi 1.\u00e7eyrek)\n# Black line at bottom is min (alttaki siyah \u00e7izgi en k\u00fc\u00e7\u00fck de\u011fer)\ndata.boxplot(column=\"SepalLengthCm\",by = \"Species\")","168eaab0":"data_new =data.head()  \ndata_new\n#Firstly I creating new dataset from Iris data to explain melt nore easily.(\u00f6ncelikle kolayca melt yapmak i\u00e7in yeni veriseti olu\u015fturuyorum)","d3044d23":"melted = pd.melt(frame=data_new,id_vars = 'Species', value_vars= [\"PetalWidthCm\",\"PetalLengthCm\"])\nmelted\n#lets melt (hadi melt yapal\u0131m)\n#id_vars =what we dont wish to melt (melt yapmak istemedi\u011fimiz yer)\n#value_vars= what we want to melt (melt yapmak istedi\u011fimiz yer)","b9bc8cdb":"data.dtypes\n#shows us data types (bize de\u011fi\u015fkenlerin veri tiplerini g\u00f6sterir)","f6a2cf58":"#lets convert object (object) to categorical and int to float.(bject veri tipini kategorik yapal\u0131m)\ndata[\"Species\"] = data[\"Species\"].astype(\"category\")\n","f0cf4fd1":"data.dtypes\n#yes we did it! (evet yapt\u0131k!)","0e8dfb67":"data.info() \n#we have not nAn data so we can pass this. (bo\u015f g\u00f6zlemimiz yok bu y\u00fczden buray\u0131 ge\u00e7ebiliriz)","ab238e20":"**3.CLEANING DATA (VER\u0130 D\u00dcZENLEME)**","67017ef2":"### VISUAL EXPLORATORY DATA ANALYSIS (G\u00d6RSELLE\u015eT\u0130RME \u0130LE VER\u0130 ANAL\u0130Z\u0130)","ef9d3456":"### TIDY DATA (VER\u0130 TEM\u0130ZLEME)","445f3f29":"### EXPLORATORY DATA ANALYSIS","3dd48a4e":"**MATPLOT**","d9756773":"**PANDAS LIBRARY (PANDAS K\u00dcT\u00dcPHANES\u0130) **","735b234e":"**1.INTRODUCTION TO PYTHON (PYTHON'A G\u0130R\u0130\u015e)**","668401cb":"### DIAGNOSE DATA for CLEANING (VER\u0130Y\u0130 D\u00dcZENLEMEK \u0130\u00c7\u0130N TE\u015eH\u0130S ETME)\n","811f159c":"### DATA TYPES(VER\u0130 T\u0130PLER\u0130)","655d027e":"### MISSING DATA and TESTING WITH ASSERT (KAYIP G\u00d6ZLEM ve \u0130DD\u0130A \u0130LE TEST ETMEK)","65aef863":"**WHILE and FOR LOOPS (WHILE ve FOR D\u00f6ng\u00fcleri)**"}}