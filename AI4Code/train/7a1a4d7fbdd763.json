{"cell_type":{"31b149e5":"code","67d49863":"code","de08913c":"code","ce50229e":"code","32c9f980":"code","18a8e187":"code","33861343":"code","a341672d":"code","ad925228":"code","742e3281":"code","1db15ba0":"code","c6e0da7c":"code","2184ebac":"code","9f630e98":"code","fb21409e":"code","cdf3aa55":"code","bb5bc14b":"code","472bfda3":"code","1d3877cb":"markdown"},"source":{"31b149e5":"import tensorflow as tf\nfrom tensorflow import keras\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n\n%matplotlib inline\nplt.style.use(\"ggplot\")","67d49863":"df_train = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ndf_test = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")","de08913c":"df_train.head()","ce50229e":"print(df_train.shape)\nprint(df_test.shape)","32c9f980":"plt.figure(figsize=(10,5))\nsns.countplot(df_train[\"label\"])\nplt.show()","18a8e187":"X = df_train.iloc[:,1:]\ny = df_train.iloc[:,:1]","33861343":"print(X.shape)\nprint(y.shape)","a341672d":"X = X \/ 255.0\ndf_test = df_test \/ 255.0","ad925228":"X.head(2)","742e3281":"## Reshape The Data\nX = X.values.reshape(-1,28,28,1)\ndf_test = df_test.values.reshape(-1,28,28,1)","1db15ba0":"y.head()","c6e0da7c":"y = keras.utils.to_categorical(y,num_classes=10)\ny","2184ebac":"## Split The Data into X_train, X_test, y_train, y_test\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.1)","9f630e98":"print(f\"X_train.shape : {X_train.shape}\")\nprint(f\"X_test.shape : {X_test.shape}\")\nprint(f\"y_train.shape : {y_train.shape}\")\nprint(f\"y_test.shape : {y_test.shape}\")","fb21409e":"model = keras.Sequential([\n    keras.layers.Conv2D(32,(3,3),input_shape=(28,28,1)),\n    keras.layers.MaxPooling2D(2,2),\n    \n    keras.layers.Conv2D(64,(3,3),activation=\"relu\"),\n    keras.layers.MaxPooling2D(2,2),\n    \n    keras.layers.Conv2D(64,(3,3),activation=\"relu\"),\n    keras.layers.MaxPooling2D(2,2),\n    \n    keras.layers.Dropout(0.25),\n    \n    keras.layers.Flatten(),\n    keras.layers.Dense(128,activation=\"relu\"),\n    keras.layers.Dropout(0.5),\n    keras.layers.Dense(10,activation=\"softmax\")\n])","cdf3aa55":"model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","bb5bc14b":"best_model = keras.callbacks.ModelCheckpoint(\"best_model.h5\",save_best_only=True)\nhistory = model.fit(X_train,y_train,epochs=50,verbose=1,validation_data=(X_test,y_test),callbacks=[best_model])","472bfda3":"plt.figure(figsize=(10,5))\n\nacc = history.history[\"accuracy\"]\nval_acc = history.history[\"val_accuracy\"]\nloss = history.history[\"loss\"]\nval_loss = history.history[\"val_loss\"]\n\nepochs = range(len(acc))\n\nplt.plot(epochs,acc,\"r\",label=\"Training Accuracy\")\nplt.plot(epochs,val_acc,\"b\",label=\"Validation Accuracy\")\n\nplt.legend()\nplt.figure()\n\nplt.figure(figsize=(10,5))\n\nplt.plot(epochs,loss,\"r\",label=\"Training Loss\")\nplt.plot(epochs,val_loss,\"b\",label=\"Validation Loss\")\n\nplt.legend()\nplt.show()","1d3877cb":"## Define The Model"}}