{"cell_type":{"ff664d0f":"code","04fc90c6":"code","11d7d527":"code","20e9f5c9":"code","9237455d":"code","06c6b698":"code","9c4a4ae9":"code","a557ae36":"code","26e90ec6":"code","46c2007b":"code","c6bbb91a":"code","2815f234":"code","827a735d":"code","e924a7d5":"code","60b65a0b":"code","c9cf18cf":"code","3b96b6c5":"code","923536f0":"code","a3f3d432":"code","68b29e2c":"code","baec1eef":"code","691fcfb1":"code","359669cd":"code","27bc4519":"code","aadb4e3a":"code","daa52f6d":"markdown","8eb13415":"markdown","6a8a9ccc":"markdown","73dc1775":"markdown"},"source":{"ff664d0f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.metrics import confusion_matrix,accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier","04fc90c6":"dtrain=pd.read_csv(r'..\/input\/titanic\/train.csv')\ndtest = pd.read_csv(r'..\/input\/titanic\/test.csv')","11d7d527":"dtrain.head()","20e9f5c9":"X=dtrain[['Name','Pclass','Age','Embarked','SibSp','Sex','Parch','Fare','Cabin']]\ny=dtrain.Survived\nX_test=dtest[['Name','Pclass','Age','Embarked','SibSp','Sex','Parch','Fare','Cabin']]","9237455d":"#Add Family coulmn by adding SibSp and Parch\n#X['name_len'] = X.Name.apply(lambda x:len(x)%25)\nX['Family']=X['SibSp']+X['Parch']+1\nX = X.drop(columns=['SibSp','Parch'])","06c6b698":"#Add Title as Type of Person \nX['Title']= X['Name'].str.extract('([A-Za-z]+\\.)',expand=False)\nX['Title'].unique()\nX['Title'].value_counts(normalize=True)*100","9c4a4ae9":"X['Title'] = X['Title'].replace(['Don.', 'Rev.', 'Dr.','Major.', 'Lady.', 'Sir.', 'Col.', 'Capt.','Countess.', 'Jonkheer.'],'Rare.')\nX['Title'] = X['Title'].replace('Mlle.', 'Miss.')\nX['Title'] = X['Title'].replace('Ms.', 'Miss.')\nX['Title'] = X['Title'].replace('Mme.', 'Mrs.')\n\nmappings_title={\"Mr.\": 1, \"Miss.\": 2, \"Mrs.\": 3, \"Master.\": 4, \"Rare.\": 5}\nX['Title'] = X['Title'].map(mappings_title)\nX['Title'].fillna(0)\nX['Title'].value_counts()","a557ae36":"X=X.drop(columns=['Name'])\nX","26e90ec6":"X.loc[X.Cabin.isnull(),'HasCabin']  = 0\nX.loc[X.Cabin.notnull(),'HasCabin'] = 1\nX = X.drop(columns=['Cabin'],axis=1)","46c2007b":"X['Embarked'] = X.Embarked.fillna('S')\nX['Fare'] = X.Fare.fillna(X.Fare.median())","c6bbb91a":"\n# mappings_title={\"Mr.\": 1, \"Miss.\": 2, \"Mrs.\": 3, \"Master.\": 4, \"Rare.\": 5}\nfor i in range(0,6):\n    X.loc[(X.Age.isnull())&(X.Title==i),'Age'] = X[X[\"Title\"]==i].Age.dropna().median()","2815f234":"X.loc[:,'Embarked'] = X.Embarked.map({'S':1,'C':2,'Q':3})\nX.loc[:,'Sex'] = X.Sex.map({'male':1,'female':2})\nX.isnull().sum()","827a735d":"X_train,X_valid,y_train,y_valid = train_test_split(X,y,test_size=0.2,random_state=17,train_size=0.8)","e924a7d5":"categorical_cols = [cname for cname in X_train.columns if X_train[cname].dtype == \"object\"]\n\n# Select numerical columns\nnumerical_cols = [cname for cname in X_train.columns if X_train[cname].dtype in ['int64', 'float64']]","60b65a0b":"categorical_cols,numerical_cols","c9cf18cf":"from sklearn.model_selection import cross_val_score\nmodel = RandomForestClassifier(n_estimators = 200,criterion='gini', max_depth=12, max_features='auto')\n# from xgboost import XGBClassifier \n#model = XGBClassifier()\nmodel.fit(X_train,y_train)","3b96b6c5":"pred_valid = model.predict(X_valid)\ncm = confusion_matrix(pred_valid,y_valid)\nacc = accuracy_score(pred_valid,y_valid)\nprint(cm,acc)","923536f0":"X_test=dtest[['Name','Pclass','Age','Embarked','SibSp','Sex','Parch','Fare','Cabin']]\n#Add Family coulmn by adding SibSp and Parch\n#X_test['name_len'] = X_test.Name.apply(lambda x:len(x)%25)\nX_test['Family']=X_test['SibSp']+X_test['Parch']+1\nX_test = X_test.drop(columns=['SibSp','Parch'])","a3f3d432":"X_test['Title']= X_test['Name'].str.extract('([A-Za-z]+\\.)',expand=False)\nX_test['Title'].value_counts()","68b29e2c":"\nX_test['Title'] = X_test['Title'].replace(['Dona.','Don.', 'Rev.', 'Dr.','Major.', 'Lady.', 'Sir.', 'Col.', 'Capt.','Countess.', 'Jonkheer.'],'Rare.')\nX_test['Title'] = X_test['Title'].replace('Mlle.', 'Miss.')\nX_test['Title'] = X_test['Title'].replace('Ms.', 'Miss.')\nX_test['Title'] = X_test['Title'].replace('Mme.', 'Mrs.')\n\nmappings_title={\"Mr.\": 1, \"Miss.\": 2, \"Mrs.\": 3, \"Master.\": 4, \"Rare.\": 5}\nX_test['Title'] = X_test['Title'].map(mappings_title)\nX_test['Title'].fillna(0)\nX_test['Title'].isnull()\n","baec1eef":"X_test.loc[X_test.Cabin.isnull(),'HasCabin']  = 0\nX_test.loc[X_test.Cabin.notnull(),'HasCabin'] = 1\nX_test = X_test.drop(columns=['Cabin','Name'],axis=1)","691fcfb1":"X['Fare'] = X.Fare.fillna(X.Fare.median())\nX_test.loc[:,'Embarked'] = X_test.loc[:,'Embarked'].fillna('S')\nfor i in range(0,6):\n    X_test.loc[(X_test.Age.isnull())&(X_test.Title==i),'Age'] = X_test[X_test['Title']==i].Age.dropna().median()","359669cd":"X_test.loc[:,'Embarked'] = X_test.Embarked.map({'S':1,'C':2,'Q':3})\nX_test.loc[:,'Sex'] = X_test.Sex.map({'male':1,'female':2})\nX_test.isnull().sum()","27bc4519":"X_test['Fare'] = X_test.Fare.fillna(X_test.Fare.mean())\nX_test.isnull().sum()","aadb4e3a":"results = model.predict(X_test)\noutput = pd.DataFrame({'PassengerId': dtest.PassengerId,\n                       'Survived': results})\noutput.to_csv('submission.csv', index=False)","daa52f6d":"# SUBMISSION","8eb13415":" **<h1>MODEL<\/h1>**","6a8a9ccc":"# TITANIC : ML Prediction","73dc1775":"**<h1>Feature Engineering<\/h1>**"}}