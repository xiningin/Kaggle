{"cell_type":{"92b7e98c":"code","7016e127":"code","14964cfc":"code","c8fe01e7":"code","3219a774":"code","54e875e6":"code","53759d20":"code","d737d2a1":"code","1c55a52f":"code","346f2dc7":"code","a0ad5773":"markdown","4d034c40":"markdown","27353cda":"markdown","465d1bae":"markdown","2f7d4565":"markdown","d1741b89":"markdown"},"source":{"92b7e98c":"import json\n\nfilename_train = '..\/input\/whats-cooking-kernels-only\/train.json'\nfilename_test  = '..\/input\/whats-cooking-kernels-only\/test.json'\n\nwith open(filename_train, 'r') as f:\n    dict_train = json.load(f)\n    \nwith open(filename_test, 'r') as f:\n    dict_test = json.load(f)","7016e127":"ingredients_train = [ ' '.join(d['ingredients']).lower() for d in dict_train ]\ningredients_test  = [ ' '.join(d['ingredients']).lower() for d in dict_test  ]","14964cfc":"from sklearn.feature_extraction.text import TfidfVectorizer\n\nvectorizer = TfidfVectorizer()\n\nX_train = vectorizer.fit_transform(ingredients_train).toarray()\nX_train","c8fe01e7":"X_test = vectorizer.transform(ingredients_test).toarray()\nX_test","3219a774":"from sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ny_train = [ d['cuisine'] for d in dict_train ]\ny_train = label_encoder.fit_transform(y_train)\ny_train","54e875e6":"import numpy as np\nimport lightgbm as lgb\n\nlgb_train = lgb.Dataset(X_train, y_train)\n\nparams = {\n    'objective': 'multiclass',    \n    'num_class': len(np.unique(y_train)),\n    'metric': 'multi_logloss',\n}\n\ncv_rslt = lgb.cv(params, \n                 lgb_train, \n                 nfold=5, \n                 num_boost_round=10000, \n                 early_stopping_rounds=20,\n                 return_cvbooster=True)","53759d20":"import pandas as pd\n\ncvbooster = cv_rslt['cvbooster']\ny_preds = cvbooster.predict(X_test, num_iteration=cvbooster.best_iteration)\ny_pred = np.mean(y_preds, axis=0).argmax(axis=-1)\ny_pred = label_encoder.inverse_transform(y_pred)\ny_pred = pd.Series(y_pred, name='cuisine')\ny_pred","d737d2a1":"indices = pd.Series([ d['id'] for d in dict_test ], name='id')\nindices","1c55a52f":"answer = pd.concat([indices, y_pred], axis=1)\nanswer","346f2dc7":"filename_output = '.\/submission.csv'\nanswer.to_csv(filename_output, index=False)","a0ad5773":"# Label Encoding","4d034c40":"# Load files","27353cda":"# Prediction","465d1bae":"# Save Output","2f7d4565":"# Vectorize ingredients","d1741b89":"# Modeling"}}