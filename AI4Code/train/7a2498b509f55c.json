{"cell_type":{"775c0be8":"code","2f55f2f0":"code","3bd71a98":"code","bd06ffa4":"code","2d3d4ae7":"code","dc64bb5d":"code","5058922a":"code","41fd734d":"code","51cd8ead":"code","1088907c":"code","2844aee1":"code","dc1a9a78":"code","f69f2079":"code","683a83f3":"code","609f3261":"code","9a5ce61b":"code","8aaaee30":"code","1ad0c07a":"code","578a03c0":"code","5c21e152":"markdown","69c85a2d":"markdown","c3adebf1":"markdown","619fdc9a":"markdown","ff2657b3":"markdown","c902922c":"markdown","894e129f":"markdown","d2237326":"markdown","1ecfc7fe":"markdown","4e1997fd":"markdown","e1da2985":"markdown"},"source":{"775c0be8":"import os, time, sys, gc, pickle, warnings\nfrom tqdm.notebook import tqdm as tqdm\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#wave analysis\nimport pywt\nimport librosa\nfrom statsmodels.robust import mad\n#import statsmodels.api as sm\nimport scipy\nfrom scipy import stats\nfrom scipy.stats.kde import gaussian_kde\nfrom scipy import signal\nfrom scipy.signal import hann, hilbert, convolve, butter, deconvolve\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import StratifiedKFold, KFold, GroupKFold\nfrom bokeh.plotting import figure, show, output_file\nfrom bokeh.layouts import gridplot, column, layout, row\nfrom bokeh.io import output_notebook, curdoc, push_notebook\nfrom bokeh.models import ColumnDataSource, FixedTicker, PrintfTickFormatter, Select, CustomJS, HoverTool\nfrom bokeh.models import ColumnDataSource, Label, LabelSet, Range1d\nimport colorcet as cc\n#import lightgbm as lgb\n#import xgboost as xgb\nfrom sklearn.metrics import f1_score\nwarnings.filterwarnings('ignore')\nfrom tsfresh.feature_extraction import feature_calculators","2f55f2f0":"output_notebook()","3bd71a98":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bd06ffa4":"%%time\nINPUTDIR = '\/kaggle\/input\/data-without-drift\/'\nINPUTDIR2 = '\/kaggle\/input\/liverpool-ion-switching\/'\nNROWS = None\ndf_train = pd.read_csv(f'{INPUTDIR}\/train_clean.csv', nrows=NROWS, dtype={'time':np.float32, 'signal':np.float32})\ndf_test = pd.read_csv(f'{INPUTDIR}\/test_clean.csv', nrows=NROWS, dtype={'time':np.float32, 'signal':np.float32})\nsub_df = pd.read_csv(f'{INPUTDIR2}\/sample_submission.csv', nrows=NROWS)","2d3d4ae7":"%%time\ndf_train['open_channels_lag_1'] = df_train['open_channels'].shift(1).fillna(method='bfill')\ndf_train['transition'] =  df_train['open_channels_lag_1'].astype(int).astype(str) + '-'  + df_train['open_channels'].astype(str)\ndf_train.head()","dc64bb5d":"df_train_agg = df_train.groupby('transition')['signal'].count()","5058922a":"list(df_train_agg.index)","41fd734d":"df_train.index = ((df_train.time * 10_000) - 1).values\ndf_test.index = ((df_test.time * 10_000) - 1).values\ndf_train['GRP'] = 1+(df_train.index \/\/ 50_0000)\ndf_train['GRP'] = df_train['GRP'].astype('int16')\ndf_test.index = ((df_test.time * 10_000)).values-1\ndf_test['GRP'] = 1+(df_test.index \/\/ 50_0000)\ndf_test['GRP'] = df_test['GRP'].astype('int16')","51cd8ead":"labels = transitions = df_train.groupby('transition')['signal'].count().index\ntm1 = sorted(set([int(i.split('-')[0]) for i in transitions]))\nlabels = [[ str(x)+'-'+str(y) for y in \\\n          sorted(set([int(i.split('-')[1]) for i in transitions if int(i.split('-')[0]) == x]))]\\\n            for x in tm1]","1088907c":"for label in labels:\n    counts = [pd.DataFrame(df_train_agg).loc[i,'signal'] for i in label]\n    plot_size_and_tools = {'plot_height': 300, 'plot_width': 1800,\n                            'tools':['box_zoom', 'reset', 'crosshair','help']}\n    p = figure(x_range=label, plot_height=250, title=f\"Transition Counts {label}\",\n               toolbar_location=None, tools=\"\")\n    p.vbar(x=label, top=counts, width=0.9)\n    p.add_tools(HoverTool())\n    p.xgrid.grid_line_color = None\n    p.y_range.start = 0\n\n    show(p)","2844aee1":"for b in range(10):\n    BATCH = b+1\n    transitions = df_train.query(f'GRP=={BATCH}').groupby('transition')['signal'].count().index\n    tm1 = sorted(set([int(i.split('-')[0]) for i in transitions]))\n    labels = [[ str(x)+'-'+str(y) for y in \\\n              sorted(set([int(i.split('-')[1]) for i in transitions if int(i.split('-')[0]) == x]))]\\\n                for x in tm1]\n    for label in labels:\n        counts = [pd.DataFrame(df_train.query(f'GRP=={BATCH}').groupby('transition')['signal'].count()).loc[i,'signal'] for i in label]\n        plot_size_and_tools = {'plot_height': 300, 'plot_width': 1800,\n                                'tools':['box_zoom', 'reset', 'crosshair','help']}\n        p = figure(x_range=label, plot_height=250, title=f\"Transition Counts {label} in Batch #{BATCH}\",\n                   toolbar_location=None, tools=\"\")\n        p.vbar(x=label, top=counts, width=0.9)\n        p.add_tools(HoverTool())\n        p.xgrid.grid_line_color = None\n        p.y_range.start = 0\n\n        show(p)","dc1a9a78":"df_train['transition_diff'] = df_train['transition'].apply(lambda x: int(x.split('-')[1])-int(x.split('-')[0]))\ndf_train['signal_diff_1'] = df_train['signal'].diff().fillna(method='bfill')\ndf_train.head()","f69f2079":"plot_size_and_tools = {'plot_height': 600, 'plot_width': 600,\n                                'tools':['box_zoom', 'reset', 'crosshair','help']}\np = figure(title=f\"Signal vs. Channel Transition Difference\",\n                   toolbar_location='right', **plot_size_and_tools)\n\np.scatter(df_train.signal.values, df_train.transition_diff.values, \n          fill_color='blue', fill_alpha=0.6,\n          line_color=None)\np.xaxis.axis_label = 'Signal'\np.yaxis.axis_label = 'Channel Transition Difference'\n#p.add_tools(HoverTool())\nshow(p)","683a83f3":"plot_size_and_tools = {'plot_height': 600, 'plot_width': 600,\n                                'tools':['box_zoom', 'reset', 'crosshair','help']}\np = figure(title=f\"Signal Diff vs. Channel Transition Difference\",\n                   toolbar_location='right', **plot_size_and_tools)\n\np.scatter(df_train.signal_diff_1.values, df_train.transition_diff.values, \n          fill_color='purple', fill_alpha=0.6,\n          line_color=None)\np.xaxis.axis_label = 'Signal Diff'\np.yaxis.axis_label = 'Channel Transition Difference'\n#p.add_tools(HoverTool())\nshow(p)","609f3261":"palette = [cc.rainbow[i*15] for i in range(15)]\nx = np.linspace(-11,11, 500)\nplot_size_and_tools = {'plot_height': 800, 'plot_width': 700,\n                        'tools':['box_zoom', 'reset', 'crosshair','help']}\np1 = figure(y_range=(-7, 9),  x_range=(-11, 11), toolbar_location='above', **plot_size_and_tools)\nfor i in range(13):\n    diff = i-6\n    pdf = gaussian_kde(df_train.query(f'transition_diff=={diff}')['signal_diff_1'].values)\n    y = pdf(x) - 6 +i\n    source = ColumnDataSource(data=dict(x=x, y=y))\n    p1.patch('x', 'y', line_width=1, alpha = 0.6, color=palette[i], source=source, line_color='black')\np1.xaxis.ticker = FixedTicker(ticks=list(range(-11, 11, 1)))\np1.xaxis.axis_label = 'Signal Diff Lag1'\np1.yaxis.axis_label = 'Channel Transition Difference'\nshow(p1)","9a5ce61b":"diff_dict = {}\nfor i in range(15):\n    diff = i-6\n    diff_dict[diff] = df_train.query(f'transition_diff=={diff}')['signal_diff_1'].describe()\n\nDiff = pd.DataFrame(diff_dict)","8aaaee30":"Diff","1ad0c07a":"label = list(pd.DataFrame(df_train.groupby('transition_diff')['signal'].count()).index)\ncounts = [pd.DataFrame(df_train.groupby('transition_diff')['signal'].count()).loc[i,'signal'] for i in label]\nplot_size_and_tools = {'plot_height': 300, 'plot_width': 600,\n                        'tools':['box_zoom', 'reset', 'crosshair','help']}\np = figure( title=f\"Transition Counts {label}\",\n           toolbar_location='right',  **plot_size_and_tools)\np.vbar(x=label, top=counts, width=0.5)\np.add_tools(HoverTool())\np.xgrid.grid_line_color = None\np.xaxis.ticker = FixedTicker(ticks=list(range(-8, 8, 1)))\np.y_range.start = 0\n\nshow(p)","578a03c0":"for b in range(10):\n    BATCH = b+1\n    label = list(pd.DataFrame(df_train.query(f'GRP=={BATCH}').groupby('transition_diff')['signal'].count()).index)\n    counts = [pd.DataFrame(df_train.query(f'GRP=={BATCH}').groupby('transition_diff')['signal'].count()).loc[i,'signal'] for i in label]\n    plot_size_and_tools = {'plot_height': 300, 'plot_width': 600,\n                            'tools':['box_zoom', 'reset', 'crosshair','help']}\n    p = figure( title=f\"Transition Counts {label} in Batch #{BATCH}\",\n               toolbar_location='right',  **plot_size_and_tools)\n    p.vbar(x=label, top=counts, width=0.5)\n    p.add_tools(HoverTool())\n    p.xgrid.grid_line_color = None\n    p.xaxis.ticker = FixedTicker(ticks=list(range(-8, 8, 1)))\n    p.y_range.start = 0\n\n    show(p)","5c21e152":"# Signal Diffrence for all batches","69c85a2d":"# How open each open channel transition happens\n\n**If my understand is correct, the open channel follows markovian process which means the previous state is important. I'd like to simply show in this notebook that how frequent each open channel transition (i.e. Open Channel 0 ==> Open Channel 1; denoted as '0-1' in this notebook) happens. Another notebook using Bokeh library for EDA is [here](https:\/\/www.kaggle.com\/shinsei66\/useful-eda-dashboard-by-bokeh). If you find useful, please upvote ;)**","c3adebf1":"# Import Libraries","619fdc9a":"# Findings\n- The open channel is more likely to stay same state.\n- The transtion distribution histgrams have gaussian shape, but some of them are slightly skewed.\n- The larger the open channel is, the more transition to other states will happen.\n- The maximam open channel transition gap is 6 (i.e. '9-3', '8-2')\n- The weird thing is that there is neither '2-9' transition nor '3-9' transition, anything wrong with me? ","ff2657b3":"# Findings\n- There are transitions only between open channels 0 and 1 for batch 1, 2, 3 and 7 except a few outliers \n- There are not transition from open channel 0 for batch 5 and 10","c902922c":"# Event Count for Each Transitions","894e129f":"# Signal Diffrence for by batches","d2237326":"## By Batches","1ecfc7fe":"## All Batches","4e1997fd":"# Import Data","e1da2985":"# The Difference of open channels of a Transtion"}}