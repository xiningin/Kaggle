{"cell_type":{"9eb51dba":"code","998419e4":"code","aa1765b5":"code","f90a74eb":"code","5494017e":"code","6f8c35c3":"code","a674cbf8":"markdown","933513f7":"markdown","70204925":"markdown"},"source":{"9eb51dba":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n# apply ignore\nimport warnings\nwarnings.filterwarnings('ignore')","998419e4":"#load train data\ntrain_data = pd.read_csv('..\/input\/learn-together\/train.csv')\ntrain_data.head()","aa1765b5":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\ny = train_data.Cover_Type\n","f90a74eb":"from sklearn import tree\nimport graphviz\n\nselected_features = ['Elevation', 'Horizontal_Distance_To_Roadways', 'Wilderness_Area4']\n\nX1 = train_data[selected_features]\ntrain_X, val_X, train_y, val_y = train_test_split(X1, y, random_state=1)\ntree_model = DecisionTreeClassifier(random_state=0, max_depth=5, min_samples_split=5).fit(train_X, train_y)\n\n# shrink names\nselected_features = ['Elv', 'HDRoad', 'WildA4']\n\ntree_graph = tree.export_graphviz(tree_model, out_file=None, feature_names=selected_features)\ngraphviz.Source(tree_graph)","5494017e":"from matplotlib import pyplot as plt\nfrom pdpbox import pdp, get_dataset, info_plots\n\n# 'Id' is a false feature, although adding it makes smaller mse error\nfeature_names = [cname for cname in train_data.columns if cname not in ['Id','Cover_Type']]\nX = train_data[feature_names]\n\n# Build Random Forest model\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\nrf_model = RandomForestClassifier(random_state=0).fit(train_X, train_y)\n\nfeature_to_plot = 'Elevation'\npdp_dist = pdp.pdp_isolate(model=rf_model, dataset=val_X, model_features=feature_names, feature=feature_to_plot)\n\npdp.pdp_plot(pdp_dist, feature_to_plot)\nplt.show()","6f8c35c3":"# use pdp_interact and pdp_interact_plot \n# 'Elevation', 'Horizontal_Distance_To_Roadways', 'Wilderness_Area4'\nfeatures_to_plot = ['Horizontal_Distance_To_Roadways', 'Wilderness_Area4']\ninter1  =  pdp.pdp_interact(model=rf_model, dataset=val_X, model_features=feature_names, features=features_to_plot)\n\npdp.pdp_interact_plot(pdp_interact_out=inter1, feature_names=features_to_plot, plot_type='contour', plot_pdp=True)\nplt.show()","a674cbf8":"- The y axis is interpreted as change in the prediction from what it would be predicted at the baseline or leftmost value.\n- A blue shaded area indicates level of confidence","933513f7":"**Build Model**","70204925":"### 2D Partial Dependence Plots"}}