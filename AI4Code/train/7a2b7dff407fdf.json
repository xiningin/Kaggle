{"cell_type":{"ab1a17a5":"code","5fe5d9be":"code","4451728b":"code","37935914":"code","3da9853f":"code","ef446ce3":"markdown","e79b677d":"markdown","2fe3073a":"markdown"},"source":{"ab1a17a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5fe5d9be":"train_data = pd.read_csv(\"..\/input\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/test.csv\")\n\nlabels = train_data[\"label\"]\nfeatures = train_data[train_data.columns[1:]].values\/255\ntest = test_data.values\/255","4451728b":"train_input_fn = tf.estimator.inputs.numpy_input_fn(\n        x={\"pixels\": features},\n        y=labels,\n        batch_size=100,\n        num_epochs=3,\n        shuffle=True)\nfeature_columns = [tf.feature_column.numeric_column(\"pixels\", shape=784)]\nclassifier = tf.estimator.LinearClassifier(\n                feature_columns=feature_columns,\n                n_classes=10\n                )\nclassifier.train(input_fn=train_input_fn)\n\npredict_input_fn = tf.estimator.inputs.numpy_input_fn(\n        x={'pixels': test},\n        batch_size=1,\n        num_epochs=1,\n        shuffle=False)\npredictions = classifier.predict(input_fn=predict_input_fn)","37935914":"predicted_classes = [int(prediction['classes'][0]) for prediction in predictions]\nindex = list(range(1,28001))\npd.DataFrame({\"ImageId\":index,\"Label\":predicted_classes}).to_csv(\"sample_submission.csv\",index=False)","3da9853f":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nfor i in range(1,10):\n    img = np.reshape(test[i],(28,28))\n    plt.figure()\n    plt.title(\"labeled class {}\".format(predicted_classes[i]))\n    plt.imshow(img, 'gray')","ef446ce3":"**Training model and prediting**","e79b677d":"**Data Preprocess**","2fe3073a":"**Output**"}}