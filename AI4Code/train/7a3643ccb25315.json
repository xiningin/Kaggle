{"cell_type":{"eb6bd730":"code","62b3805b":"code","bf80ff19":"code","1ffeffa4":"code","ded29733":"code","b8f091c1":"code","c952b1e0":"code","72c1a331":"code","b279dcad":"code","ab3908a8":"code","592a982c":"code","5f1370e4":"code","eb45eb3f":"code","59e934b6":"code","9f11dc0e":"code","b585cbf3":"code","7cee944b":"code","db953c13":"code","edd269d3":"code","072d7803":"code","514776a3":"markdown"},"source":{"eb6bd730":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tesla-share\/TSLA (1).csv')\nnetflix.head()","62b3805b":"netflix=netflix[['Date','Close']]\nnetflix.head()","bf80ff19":"netflix.info()","1ffeffa4":"!pip install pycaret-ts-alpha","ded29733":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","b8f091c1":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","c952b1e0":"netflix = netflix.asfreq('d')\nnetflix.index","72c1a331":"netflix.head()","b279dcad":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","ab3908a8":"data=netflix.Close\ndata","592a982c":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","5f1370e4":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","eb45eb3f":"## Create a model manually\nmodel = exp.create_model(\"knn_cds_dt\")\nmodel","59e934b6":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","9f11dc0e":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","b585cbf3":"tuned_model = exp.tune_model(model)\ntuned_model","7cee944b":"exp.predict_model(tuned_model)","db953c13":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","edd269d3":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","072d7803":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","514776a3":"# "}}