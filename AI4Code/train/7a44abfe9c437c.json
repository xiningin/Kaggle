{"cell_type":{"36016a80":"code","cc0c50bb":"code","d4c7a2f0":"code","d16b6915":"code","fcd7f4ee":"code","412ab067":"code","0ee082f9":"code","8eeb7b33":"code","799965e3":"code","1a74f0d4":"code","bbbc7c34":"code","aa867a7f":"code","52e9e409":"code","fea26d54":"code","4ec8f40e":"code","b319e23d":"code","8811cdd9":"code","bc077d84":"code","8f9a1d67":"markdown","f2a680be":"markdown","ee4636b0":"markdown","7d77b1ea":"markdown","34de0110":"markdown","8e87b7eb":"markdown","025d3a2d":"markdown","c688c4be":"markdown","d823eb79":"markdown","d1f71856":"markdown","bb85ad5f":"markdown","df51cfaa":"markdown","4203dd87":"markdown","fbc428fb":"markdown","a267c926":"markdown","3ba7ae98":"markdown"},"source":{"36016a80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cc0c50bb":"import matplotlib.pyplot as plt\n\n\nplt.style.use('fivethirtyeight')\n%matplotlib inline","d4c7a2f0":"# DATA FROM https:\/\/finance.yahoo.com\/\n\n# IMPORT \n\nbenchmark = pd.read_csv(\"\/kaggle\/input\/data-from-httpsfinanceyahoocom\/GSPC.csv\")\n\ngoogle = pd.read_csv(\"\/kaggle\/input\/data-from-httpsfinanceyahoocom\/GOOG.csv\")\n\nnetflix = pd.read_csv(\"\/kaggle\/input\/data-from-httpsfinanceyahoocom\/NFLX.csv\")","d16b6915":"benchmark.info()","fcd7f4ee":"benchmark.head()","412ab067":"benchmark = benchmark[['Date', 'Adj Close']]\n\nbenchmark.head()","0ee082f9":"benchmark = benchmark.set_index('Date')\nbenchmark.head()","8eeb7b33":"data = [google, netflix]\nstocks = pd.DataFrame()","799965e3":"for idx, stock in enumerate(data):\n    stock = stock[['Date', 'Adj Close', 'Volume']]\n    names = [names+str(idx) for names in stock.columns]\n    stock = stock.set_index('Date')\n    stock.columns = names[1:]\n    stocks = stocks.join(stock, how = 'right')","1a74f0d4":"google_netflix_price = stocks[['Adj Close0', 'Adj Close1']]\ngoogle_netflix_price.head()","bbbc7c34":"price = google_netflix_price.rename(columns = {\"Adj Close0\":\"Google\",\"Adj Close1\":\"Netflix\"})\nprice.tail()","aa867a7f":"google_netflix_volume =  stocks[['Volume0', 'Volume1']]\ngoogle_netflix_volume","52e9e409":"volume = google_netflix_volume.rename(columns = {\"Volume0\":\"Google\",\"Volume1\":\"Netflix\"})\nvolume.head()","fea26d54":"price.plot(title = 'Google & Netflix', subplots = True)\nbenchmark.plot(title  = 'S&P 500', subplots = True)","4ec8f40e":"price.describe()\nbenchmark.describe()","b319e23d":"stocks_returns = price.pct_change()\nstocks_returns.head()","8811cdd9":"benchmark_return = benchmark.pct_change()\nbenchmark_return.head()","bc077d84":"stocks_returns.plot(title = ' Returns - Google & Netflix', subplots = True)\nbenchmark_return.plot(title = ' Return - S&P 500', subplots = True)","8f9a1d67":"creating \"data\" and \"stocks\" -  will be used in the next step","f2a680be":"info() - function is used to get a concise summary of the dataframe","ee4636b0":"**for loops** in order to join the two files and leave the necessary data for further calculations","7d77b1ea":"head() - function is used to get the first n rows","34de0110":"creating dataset *google_netflix_price*","8e87b7eb":"pct_change() function calculates the percentage change between the current and a prior element","025d3a2d":"describe() is used to view some basic statistical details like percentile, mean, std etc. of a data frame or a series of numeric values","c688c4be":"renaming columns ","d823eb79":"\n **S&P 500, Google, Netflix **\n","d1f71856":"Import pandas, numpy, matplotlib.pyplot\n\n* pandas is a fast, powerful, flexible and easy to use open source data analysis  and manipulation tool\n\n* numPy is a python library used for working with arrays\n\n* matplotlib. pyplot is a collection of functions that make matplotlib work like MATLAB\n\n","bb85ad5f":"creating plot","df51cfaa":"Import Data ","4203dd87":"creating dataset \"benchmark\" with column: Date and Adj Close","fbc428fb":"setting index","a267c926":"renaming columns ","3ba7ae98":"creating *google_netflix_volume*"}}