{"cell_type":{"5e219a55":"code","7b43c710":"code","5fe1a1fc":"code","a9ebef89":"code","f562a777":"code","37d964e4":"code","4ad2a7a7":"code","16bd8b2f":"code","ceaa4e7b":"code","0451a205":"code","e45f83a1":"code","0ac1b11c":"code","40fb7a21":"code","2e9872c8":"code","acb7ff8f":"code","7b2c3ee5":"code","7f18eb95":"code","7bc4b258":"code","b0b10399":"code","84ea7a55":"code","163cbecc":"code","0dbc902a":"code","41904c1a":"code","308b9f34":"code","9e74a90c":"code","c7b7ea29":"code","abceea6b":"code","beb70c9d":"code","1a9d764b":"code","6a59719e":"code","8c2d58c3":"code","7068494d":"code","8345e55f":"code","72993a2d":"code","fdbc19ba":"code","7cd595e3":"code","b7db11e7":"code","eb2cfbe0":"code","d5dd6940":"code","2828a397":"code","879f8074":"code","b9d8498d":"code","20a122fa":"code","1f23fca1":"code","2d1359f8":"code","3a2e109c":"code","bc4d2cfa":"code","020873c3":"code","4f8a4ea9":"code","1592cdf1":"code","2cb61880":"code","113d180e":"code","d573960d":"code","64527f75":"code","18fce145":"code","fb4c8a32":"code","29f5676f":"code","c5fcad08":"code","7f082c6a":"code","1396ef62":"code","fbd0f81c":"code","1253b071":"code","ffbd1b57":"code","19a2b116":"code","4a87f9d0":"code","54ee6be7":"code","be9aeaae":"code","5b55d50f":"code","f61fc218":"code","4140c1e7":"code","1263e9c8":"code","8107e6bf":"code","bbbb1cc2":"code","7f8b090f":"code","71d88f97":"code","f976e38c":"code","482d56c0":"code","4194d280":"code","974b40b4":"code","977dfcca":"code","4a2bb420":"code","7d6b21b9":"code","cf27ef24":"code","9cf5f4c0":"code","71f0f540":"code","bac8d591":"code","070bd0f0":"code","71808a8d":"code","13d83dbe":"code","552a925c":"code","3f6beb27":"code","0144ac5f":"code","138c2a60":"code","774ae254":"code","2f0f3601":"code","5d035b61":"code","ba808e03":"code","1aa94b48":"code","5412bd2b":"code","04f24d13":"code","3a86ade1":"code","83140cbf":"code","57c4d941":"code","6b42c0f9":"code","efee7f63":"code","7670c69e":"code","df30b0fe":"code","a73ecc8f":"code","137addfe":"code","5adcfa69":"code","3bd7253d":"code","a92898c4":"code","82634d49":"code","10dec0c7":"code","d2586745":"code","25a5d18d":"code","bf71e9cb":"markdown","83bea614":"markdown","f9c46e42":"markdown","0c13fa2e":"markdown","75a9ba6b":"markdown","452fb3e8":"markdown","e131f901":"markdown","d08649a8":"markdown","42f77e61":"markdown","1b78bdcc":"markdown","9efbdeb2":"markdown","73b4a1c4":"markdown","3595377d":"markdown","e47087d0":"markdown","e05a1948":"markdown","b285f327":"markdown","a1f6f35c":"markdown","90bf4bf8":"markdown","d7a0e095":"markdown","cd7227fb":"markdown","54c6f826":"markdown","4a544396":"markdown","f44a3c9c":"markdown","7a264a2d":"markdown","a3229eab":"markdown","543ac781":"markdown","0901eef5":"markdown","2b5db9ec":"markdown","6374de4c":"markdown","ddd1c7ec":"markdown","deb4d9c5":"markdown","1e424751":"markdown","cb555bf8":"markdown"},"source":{"5e219a55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7b43c710":"df = pd.read_csv('\/kaggle\/input\/arsenal-data\/Arsenal.csv')","5fe1a1fc":"df.head()","a9ebef89":"count_10 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '10\/11':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_10+=1\ncount_11 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '11\/12':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_11+=1\ncount_12 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '12\/13':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_12+=1\ncount_13 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '13\/14':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_13+=1\ncount_14 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '14\/15':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_14+=1\n    \ncount_15 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '15\/16':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_15+=1\ncount_16 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '16\/17':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_16+=1\ncount_17 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '17\/18':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_17+=1\ncount_18 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '18\/19':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_18+=1\ncount_19 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '19\/20':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_19+=1\ncount_20 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '20\/21':\n        if df['Winner'].iloc[i] == 'Arsenal':\n            count_20+=1\n\n    \n    \n    \n    ","f562a777":"wins = [count_10,count_11,count_12,count_13,count_14,count_15,count_16,count_17,count_18,count_19,count_20]","37d964e4":"wins","4ad2a7a7":"count_10 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '10\/11':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_10+=1\ncount_11 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '11\/12':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_11+=1\ncount_12 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '12\/13':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_12+=1\ncount_13 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '13\/14':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_13+=1\ncount_14 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '14\/15':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_14+=1\n    \ncount_15 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '15\/16':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_15+=1\ncount_16 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '16\/17':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_16+=1\ncount_17 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '17\/18':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_17+=1\ncount_18 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '18\/19':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_18+=1\ncount_19 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '19\/20':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_19+=1\ncount_20 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '20\/21':\n        if (df['Winner'].iloc[i] != 'Arsenal') & (df['Winner'].iloc[i] !='Draw'):\n            count_20+=1\n\n    \n    \n    \n    ","16bd8b2f":"losses = [count_10,count_11,count_12,count_13,count_14,count_15,count_16,count_17,count_18,count_19,count_20]\nlosses","ceaa4e7b":"count_10 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '10\/11':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_10+=1\ncount_11 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '11\/12':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_11+=1\ncount_12 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '12\/13':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_12+=1\ncount_13 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '13\/14':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_13+=1\ncount_14 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '14\/15':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_14+=1\n    \ncount_15 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '15\/16':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_15+=1\ncount_16 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '16\/17':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_16+=1\ncount_17 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '17\/18':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_17+=1\ncount_18 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '18\/19':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_18+=1\ncount_19 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '19\/20':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_19+=1\ncount_20 = 0\nfor i in range(len(df['away_team'])):\n    if df['season'].iloc[i] == '20\/21':\n        if df['Winner'].iloc[i] == 'Draw':\n            count_20+=1\n\n    \n    \n    \n    ","0451a205":"draws = [count_10,count_11,count_12,count_13,count_14,count_15,count_16,count_17,count_18,count_19,count_20]\ndraws","e45f83a1":"seasons = ['10\/11','11\/12','12\/13','13\/14','14\/15','15\/16','16\/17','17\/18','18\/19','19\/20','20\/21']\n\n","0ac1b11c":"import matplotlib.pyplot as plt\nimport numpy as np\nplt.figure(figsize=(20,6))\nplt.rcParams[\"figure.figsize\"] = (20,6)\n\n\nlabels = seasons\nwins = wins\nlosses = losses\ndraws = draws\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, wins, width, label='Wins')\nrects2 = ax.bar(x , losses, width, label='Losses')\nrects3 = ax.bar(x+ width\/2,draws,width,label='Draws')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Season')\nax.set_title('Wins loses and Draws')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\nax.bar_label(rects3,padding=3)\n\nfig.tight_layout()\n\n#plt.show()\n#plt.savefig('gbars.jpeg')\n","40fb7a21":"x = np.array([sum(wins)\/407,sum(draws)\/407,sum(losses)\/407])\nlabels = ['Wins','Draws','Loses']\nplt.pie(x,labels=labels)\n#plt.savefig('pie_10')","2e9872c8":"df.head()","acb7ff8f":"df['home_goals_fulltime'] = df['result_full'].str.split('-').str[0]\ndf['away_goals_fulltime'] = df['result_full'].str.split('-').str[1]\ndf['home_goals_halftime'] = df['result_ht'].str.split('-').str[0]\ndf['away_goals_halftime'] = df['result_ht'].str.split('-').str[1]","7b2c3ee5":"df.head()","7f18eb95":"goals_home_10 = 0\ngoals_away_10 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '10\/11':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_10 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_10 += (df['away_goals_fulltime'].iloc[i])\n        ","7bc4b258":"goals_home_11 = 0\ngoals_away_11 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '11\/12':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_11 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_11 += (df['away_goals_fulltime'].iloc[i])\n            \ngoals_home_12 = 0\ngoals_away_12 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '12\/13':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_12 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_12 += (df['away_goals_fulltime'].iloc[i])\n        \n        \ngoals_home_13 = 0\ngoals_away_13 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '13\/14':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_13 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_13 += (df['away_goals_fulltime'].iloc[i])\n        \ngoals_home_14 = 0\ngoals_away_14 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '14\/15':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_14 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_14 += (df['away_goals_fulltime'].iloc[i])\n        \ngoals_home_15 = 0\ngoals_away_15 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '15\/16':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_15 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_15 += (df['away_goals_fulltime'].iloc[i])\n        \n        \ngoals_home_16 = 0\ngoals_away_16 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '16\/17':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_16 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_16 += (df['away_goals_fulltime'].iloc[i])\n        \ngoals_home_17 = 0\ngoals_away_17 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '17\/18':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_17 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_17 += (df['away_goals_fulltime'].iloc[i])\n        \n\ngoals_home_18 = 0\ngoals_away_18 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '18\/19':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_18 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_18 += (df['away_goals_fulltime'].iloc[i])\n        \n\n        \ngoals_home_19 = 0\ngoals_away_19 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '19\/20':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_19 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_19 += (df['away_goals_fulltime'].iloc[i])\n        \ngoals_home_20 = 0\ngoals_away_20 = 0\ndf['home_goals_fulltime']  = df['home_goals_fulltime'].astype(int)\ndf['away_goals_fulltime'] = df['away_goals_fulltime'].astype(int)\nfor i in range(len(df['season'])):\n    if df['season'].iloc[i] == '20\/21':\n        if df['home_team'].iloc[i] == 'Arsenal':\n            goals_home_20 += (df['home_goals_fulltime'].iloc[i])\n        elif df['away_team'].iloc[i] == 'Arsenal':\n            goals_away_20 += (df['away_goals_fulltime'].iloc[i])\n        \n        ","b0b10399":"home_goals = [goals_home_10,goals_home_11,goals_home_12,goals_home_13,goals_home_14,goals_home_15,goals_home_16,goals_home_17,goals_home_18,goals_home_19,goals_home_20]","84ea7a55":"away_goals = [goals_away_10,goals_away_11,goals_away_12,goals_away_13,goals_away_14,goals_away_15,goals_away_16,goals_away_17,goals_away_18,goals_away_19,goals_away_20]","163cbecc":"import matplotlib.pyplot as plt\nimport numpy as np\nplt.figure(figsize=(20,6))\nplt.rcParams[\"figure.figsize\"] = (20,6)\n\n\nseasons = ['10\/11','11\/12','12\/13','13\/14','14\/15','15\/16','16\/17','17\/18','18\/19','19\/20','20\/21']\n\n\nlabels = seasons\nhome_goals = home_goals\naway_goals = away_goals\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, home_goals, width, label='Home Goals')\nrects2 = ax.bar(x , away_goals, width, label='Away Goals')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Season')\nax.set_title('Home_Away_Goals_Scored')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nfig.tight_layout()\n\n#plt.show()\n#plt.savefig('home_away_scored.jpeg')\n","0dbc902a":"total_goals = sum(away_goals) + sum(home_goals)\nx = np.array([sum(home_goals)\/total_goals,sum(away_goals)\/total_goals])\nlabels = ['Home Goals','Away Goals']\nplt.pie(x,labels=labels)\n#plt.savefig('pieHOMEAWAY.jpeg')","41904c1a":"import seaborn as sns\nsns.histplot(home_goals)\n#plt.savefig('home_hist')","308b9f34":"sns.boxplot(home_goals)\n#plt.savefig('home_box')","9e74a90c":"import seaborn as sns\nsns.histplot(away_goals,color='r')\n#plt.savefig('away_hist')","c7b7ea29":"sns.boxplot(away_goals,color='r')\n#plt.savefig('away_box.jpeg')","abceea6b":"df.head()","beb70c9d":"home_conceded_10 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '10\/11':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_10+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_11 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '11\/12':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_11+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_12 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '12\/13':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_12+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_13 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '13\/14':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_13+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_14 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '14\/15':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_14+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_15 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '15\/16':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_15+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_16 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '16\/17':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_16+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_17 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '17\/18':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_17+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_18 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '18\/19':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_18+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_19 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '19\/20':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_19+= df['away_goals_fulltime'].iloc[i]\nhome_conceded_20 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '20\/21':\n        if df['home_team'][i] == 'Arsenal':\n            home_conceded_20+= df['away_goals_fulltime'].iloc[i]","1a9d764b":"home_conceded = [home_conceded_10,home_conceded_11,home_conceded_12,home_conceded_13,home_conceded_14,home_conceded_15,home_conceded_16,home_conceded_17,home_conceded_18,home_conceded_19,home_conceded_20]","6a59719e":"home_conceded","8c2d58c3":"away_conceded_10 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '10\/11':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_10+= df['home_goals_fulltime'].iloc[i]\naway_conceded_11 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '11\/12':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_11+= df['home_goals_fulltime'].iloc[i]\naway_conceded_12 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '12\/13':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_12+= df['home_goals_fulltime'].iloc[i]\naway_conceded_13 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '13\/14':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_13+= df['home_goals_fulltime'].iloc[i]\naway_conceded_14 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '14\/15':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_14+= df['home_goals_fulltime'].iloc[i]\naway_conceded_15 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '15\/16':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_15+= df['home_goals_fulltime'].iloc[i]\naway_conceded_16 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '16\/17':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_16+= df['home_goals_fulltime'].iloc[i]\naway_conceded_17 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '17\/18':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_17+= df['home_goals_fulltime'].iloc[i]\naway_conceded_18 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '18\/19':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_18+= df['home_goals_fulltime'].iloc[i]\naway_conceded_19 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '19\/20':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_19+= df['home_goals_fulltime'].iloc[i]\naway_conceded_20 = 0\nfor i in range(len(df['home_team'])):\n    if df['season'].iloc[i] == '20\/21':\n        if df['away_team'][i] == 'Arsenal':\n            away_conceded_20+= df['home_goals_fulltime'].iloc[i]","7068494d":"away_conceded = [away_conceded_10,away_conceded_11,away_conceded_12,away_conceded_13,away_conceded_14,away_conceded_15,away_conceded_16,away_conceded_17,away_conceded_18,away_conceded_19,away_conceded_20]","8345e55f":"away_conceded","72993a2d":"total_goals_concede = sum(home_conceded) + sum(away_conceded)\nx = np.array([sum(home_conceded)\/total_goals_concede,sum(away_conceded)\/total_goals_concede])\nlabels = ['Home Concede','Away Concede']\nplt.pie(x,labels=labels)\n#plt.savefig('pieConceded.jpeg')","fdbc19ba":"import matplotlib.pyplot as plt\nimport numpy as np\nplt.figure(figsize=(20,6))\nplt.rcParams[\"figure.figsize\"] = (20,6)\n\n\nseasons = ['10\/11','11\/12','12\/13','13\/14','14\/15','15\/16','16\/17','17\/18','18\/19','19\/20','20\/21']\n\n\nlabels = seasons\nhome_conceded = home_conceded\naway_conceded = away_conceded\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, home_conceded, width, label='Home Conceded')\nrects2 = ax.bar(x , away_conceded, width, label='Away Concede')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Season')\nax.set_title('Home_Away_Goals_Conceded')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nfig.tight_layout()\n\n#plt.show()\n#plt.savefig('home_away_conceded.jpeg')\n","7cd595e3":"sns.lineplot(seasons,home_goals,label='Scored at Home')\nsns.lineplot(seasons,home_conceded,label='Conceded at Home')\nplt.xlabel('Seasons')\nplt.ylabel('Goals')\nplt.title('Goals scored and conceded at home')\n#plt.savefig('homescoreconcede.jpeg')","b7db11e7":"sns.lineplot(seasons,away_goals,label='Scored at Away')\nsns.lineplot(seasons,away_conceded,label='Conceded at Away')\nplt.xlabel('Seasons')\nplt.ylabel('Goals')\nplt.title('Goals scored and conceded at Away')\n#plt.savefig('awayscoreconcede.jpeg')","eb2cfbe0":"import seaborn as sns\nsns.histplot(home_conceded)\n#plt.savefig('home_conceded_hist')","d5dd6940":"sns.boxplot(home_conceded)\n#plt.savefig('homeconcedbox')","2828a397":"sns.histplot(away_conceded,color='red')\n#plt.savefig('awayhist')","879f8074":"sns.boxplot(away_conceded,color='red')\n#plt.savefig('awaybox')","b9d8498d":"df['Manager'] = ''","20a122fa":"for i in range(len(df['date'])):\n    if df['date'].iloc[i]<='2018-05-18':\n        df['Manager'].iloc[i] = 'Arsene Wenger'\n    elif (df['date'].iloc[i]>='2018-05-23') and (df['date'].iloc[i]<='2019-11-29'):\n        df['Manager'].iloc[i] = 'Unai Emery'\n    elif (df['date'].iloc[i]>='2019-11-29') and (df['date'].iloc[i]<='2019-12-21'):\n        df['Manager'].iloc[i] = 'Freddie Ljungberg'\n    elif df['date'].iloc[i]>='2019-12-22':\n        df['Manager'].iloc[i] = 'Mikel Arteta'\n        ","1f23fca1":"df['Manager'].value_counts()","2d1359f8":"def countis(df,manager):\n    wins = 0\n    loss = 0\n    draw = 0\n    for i in range(len(df)):\n        if df['Manager'].iloc[i]==manager:\n            if df['Winner'].iloc[i]=='Arsenal':\n                wins+=1\n            elif df['Winner'].iloc[i] != 'Arsenal' and df['Winner'].iloc[i] != 'Draw':\n                loss+=1\n            elif df['Winner'].iloc[i]=='Draw':\n                draw+=1\n    return [wins,loss,draw]\n    \n            ","3a2e109c":"arsene = countis(df,'Arsene Wenger')","bc4d2cfa":"unai = countis(df,'Unai Emery')","020873c3":"mikel = countis(df,'Mikel Arteta')","4f8a4ea9":"freddie = countis(df,'Freddie Ljungberg')","1592cdf1":"sum(arsene),arsene","2cb61880":"total_matches = sum(arsene)\n#x = ([arsene[0]\/total_matches,arsene[1]\/total_matches],arsene[2]\/total_matches)\nlabels = ['Wins','Loss','Draw']\nplt.pie([arsene[0]\/sum(arsene),arsene[1]\/sum(arsene),arsene[2]\/sum(arsene)\n],labels=labels)\n#plt.savefig('Arsene.jpeg')","113d180e":"sum(unai),unai","d573960d":"sum(mikel),mikel","64527f75":"pd.set_option('display.max_columns', None)\ndf.head()","18fce145":"big_chances_created = [99,97,70,62,66,88,55,81,72,48,45]\npasses = [20150,20613,21110,21561,20527,21249,21394,23524,20805,18649,20126]\npass_acc = [84,85,86,86,84,84,84,84,83,84,85]\ncrosses = [928,896,951,753,866,754,697,572,605,699,751]\ncross_acc = [19,22,19,22,20,25,22,21,21,20,21]","fb4c8a32":"len(cross_acc)","29f5676f":"def shots_count(df,season):\n    count=0\n    for i in range(len(df)):\n        if (df['home_team'].iloc[i] == 'Arsenal') and (df['season'].iloc[i] == season) :\n            count+= df['home_shots'].iloc[i]\n        elif (df['away_team'].iloc[i] == 'Arsenal') and (df['season'].iloc[i]==season):\n            count+= df['away_shots'].iloc[i]\n    return count","c5fcad08":"shots_count(df,'10\/11')","7f082c6a":"def shots_target_count(df,season):\n    count=0\n    for i in range(len(df)):\n        if (df['home_team'].iloc[i] == 'Arsenal') and (df['season'].iloc[i] == season) :\n            count+= df['home_shots_on_target'].iloc[i]\n        elif (df['away_team'].iloc[i] == 'Arsenal') and (df['season'].iloc[i]== season):\n            count+= df['away_shots_on_target'].iloc[i]\n    return count","1396ef62":"shots = []\nfor i in seasons:\n    shots.append(shots_count(df,i))","fbd0f81c":"shots","1253b071":"shots_on_target = []\nfor i in seasons:\n    shots_on_target.append(shots_target_count(df,i))\nshots_on_target","ffbd1b57":"goals_per_season = []\nfor i in range(len(seasons)):\n    goals_per_season.append(home_goals[i]+away_goals[i])\ngoals_per_season","19a2b116":"import matplotlib.pyplot as plt\nimport numpy as np\nplt.figure(figsize=(20,6))\nplt.rcParams[\"figure.figsize\"] = (20,6)\n\n\nseasons = ['10\/11','11\/12','12\/13','13\/14','14\/15','15\/16','16\/17','17\/18','18\/19','19\/20','20\/21']\n\n\nlabels = seasons\ntotal_goals = goals_per_season\ntotal_shots = shots\nshots_on_target = shots_on_target\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, total_goals, width, label='Total Goals')\nrects2 = ax.bar(x , shots_on_target, width, label='Shots on Target')\nrects3 = ax.bar(x+width\/2,total_shots,width,label='Total Shots')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Season')\nax.set_title('Goals vs Shots')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\nax.bar_label(rects3,padding=3)\n\nfig.tight_layout()\n\n#plt.show()\n#plt.savefig('shotsandgoals2.jpeg')\n","4a87f9d0":"succesful_shots = [0]*len(shots)\nfor i in range(len(shots)):\n    succesful_shots[i] = shots_on_target[i]\/shots[i]","54ee6be7":"succesful_shots","be9aeaae":"shots_match = [0]*len(shots)\nsog_match = [0]*len(shots)\nshoot_acc_match = [0]*len(shots)\ngoals_match = [0]*len(shots)\nfor i in range(len(shots)):\n    shots_match[i] = shots[i]\/38\n    sog_match[i] = shots_on_target[i]\/38\n    goals_match[i] = goals_per_season[i]\/38\n    shoot_acc_match[i] = sog_match[i]\/shots_match[i]","5b55d50f":"sns.lineplot(sog_match,goals_match)\nplt.xlabel('Avg Shots on Target per match')\nplt.ylabel('Avg Goals per match')\nplt.savefig('shots-goals2')","f61fc218":"sns.lineplot(shots_match,shoot_acc_match)\nplt.xlabel('SHOTS PER MATCH avg')\nplt.ylabel('Shooting Accuracy')\nplt.savefig('Shots-shooting2')","4140c1e7":"sns.lineplot(shots_match,sog_match)\nplt.xlabel('ShotsperMatch')\nplt.ylabel('ShotsOntarget')\nplt.savefig('shotsvstargetpermatch')","1263e9c8":"df.head()","8107e6bf":"df_vis = df[['home_team','away_team','home_shots','away_shots','away_shots_on_target','home_shots_on_target','home_goals_fulltime','away_goals_fulltime','Winner']]","bbbb1cc2":"#df_vis","7f8b090f":"df_vis['total_shots'] = 0\ndf_vis['total_goals'] = 0\ndf_vis['total_shots_on_target'] = 0\ndf_vis.head()\n","71d88f97":"for i in range(len(df_vis)):\n    if df_vis['home_team'].iloc[i] == 'Arsenal':\n        df_vis['total_shots'].iloc[i] += df_vis['home_shots'].iloc[i]\n    else:\n        df_vis['total_shots'].iloc[i]+=df_vis['away_shots'].iloc[i]","f976e38c":"for i in range(len(df_vis)):\n    if df_vis['home_team'].iloc[i] == 'Arsenal':\n        df_vis['total_goals'].iloc[i] += df_vis['home_goals_fulltime'].iloc[i]\n    else:\n        df_vis['total_goals'].iloc[i]+=df_vis['away_goals_fulltime'].iloc[i]\n        \nfor i in range(len(df_vis)):\n    if df_vis['home_team'].iloc[i] == 'Arsenal':\n        df_vis['total_shots_on_target'].iloc[i] += df_vis['home_shots_on_target'].iloc[i]\n    else:\n        df_vis['total_shots_on_target'].iloc[i]+=df_vis['away_shots_on_target'].iloc[i]","482d56c0":"df_vis.head()","4194d280":"from scipy.stats import pearsonr\n","974b40b4":"#co relation between goals and shots on target\npearsonr(df_vis['total_shots_on_target'],df_vis['total_goals'])","977dfcca":"pearsonr(df_vis['total_shots'],df_vis['total_goals'])","4a2bb420":"df_vis['sucss_shots'] = df_vis['total_shots_on_target']\/df_vis['total_shots']\npearsonr(df_vis['sucss_shots'],df_vis['total_goals'])","7d6b21b9":"x = df_vis[['total_shots_on_target','total_shots','sucss_shots']]\ny = df_vis['total_goals']","cf27ef24":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.1)","9cf5f4c0":"from sklearn.linear_model import LinearRegression\nlin = LinearRegression()\nlin.fit(x_train,y_train)\nlin.score(x_test,y_test)","71f0f540":"coef = [lin.coef_]\n","bac8d591":"from sklearn.ensemble import GradientBoostingRegressor\nboost = GradientBoostingRegressor()\nboost.fit(x_train,y_train)\nboost.score(x_test,y_test)","070bd0f0":"boost.feature_importances_","71808a8d":"df.head()","13d83dbe":"plt.bar(seasons,passes)\nplt.xlabel('Season')\nplt.ylabel('Passes')\n#plt.savefig('season-passes')","552a925c":"pass_acc","3f6beb27":"import matplotlib.pyplot as plt\nimport numpy as np\nplt.figure(figsize=(20,6))\nplt.rcParams[\"figure.figsize\"] = (20,6)\n\n\nseasons = ['10\/11','11\/12','12\/13','13\/14','14\/15','15\/16','16\/17','17\/18','18\/19','19\/20','20\/21']\n\n\nlabels = seasons\npasses = passes\npass_acc = pass_acc\nshots = shots_on_target\ngoals = goals_per_season\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, passes, width, label='Passes')\nrects2 = ax.bar(x ,pass_acc, width, label='Pass Accuracy')\nrects3 = ax.bar(x+width\/2,shots,width,label='Shots On Target')\nrects4 = ax.bar(x+width,goals,width,label='Goals')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Season')\nax.set_title('Passes')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\nax.bar_label(rects3, padding=3)\nax.bar_label(rects3, padding=3)\n\nfig.tight_layout()\n\n#plt.show()\n#plt.savefig('pga.jpeg')\n","0144ac5f":"pass_match = [0]*len(passes)\nfor i in range(len(passes)):\n    pass_match[i] = passes[i]\/38\n    ","138c2a60":"sns.lineplot(pass_match,shots)\nplt.xlabel('Average Passes in a game')\nplt.ylabel('Average Goals per match')\n#plt.savefig('goal-match-avg')","774ae254":"#plt.bar(pass_acc,shots_on_target)","2f0f3601":"df_vis['passes'] = 0","5d035b61":"df.head()","ba808e03":"for i in range(len(df)):\n    if df['home_team'].iloc[i] == 'Arsenal':\n        df_vis['passes'].iloc[i]+= df['home_passes'].iloc[i]\n    elif df['away_team'].iloc[i] == 'Arsenal':\n        df_vis['passes'].iloc[i]+= df['away_passes'].iloc[i]","1aa94b48":"df_vis.head()","5412bd2b":"sns.histplot(df_vis['passes'])\nplt.savefig('distplot')","04f24d13":"sns.lineplot(df_vis['passes'],df_vis['total_goals'],label='Total Goals')\nsns.lineplot(df_vis['passes'],df_vis['total_shots_on_target'],label='Total Shots on Target')\nplt.savefig('pass-goal-shots')","3a86ade1":"plt.boxplot(df_vis['passes'])\nplt.savefig('box-passes')","83140cbf":"df_vis.head()","57c4d941":"x = df_vis[['total_shots','total_shots_on_target','sucss_shots','passes']]\ny = df_vis['total_goals']","6b42c0f9":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.1)","efee7f63":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(x_train,y_train)\n","7670c69e":"lr.score(x_test,y_test)","df30b0fe":"lr.coef_","a73ecc8f":"from sklearn.ensemble import GradientBoostingRegressor\ngbr = GradientBoostingRegressor()\ngbr.fit(x_train,y_train)","137addfe":"gbr.score(x_test,y_test)","5adcfa69":"gbr.feature_importances_","3bd7253d":"df_vis['possesion'] = 0\nfor i in range(len(df)):\n    if df['home_team'].iloc[i] == 'Arsenal':\n        df_vis['possesion'].iloc[i]+= df['home_possession'].iloc[i]\n    elif df['away_team'].iloc[i] == 'Arsenal':\n        df_vis['possesion'].iloc[i]+= df['away_possession'].iloc[i]","a92898c4":"df_vis['touches'] = 0\nfor i in range(len(df)):\n    if df['home_team'].iloc[i] == 'Arsenal':\n        df_vis['touches'].iloc[i]+= df['home_touches'].iloc[i]\n    elif df['away_team'].iloc[i] == 'Arsenal':\n        df_vis['touches'].iloc[i]+= df['away_touches'].iloc[i]","82634d49":"df_vis.head()","10dec0c7":"sns.histplot(df_vis['touches'])","d2586745":"plt.boxplot(df_vis['touches'])","25a5d18d":"plt.plot(df_vis['touches'],df_vis['total_goals'])","bf71e9cb":"Pearson Corr","83bea614":"# DAY 2","f9c46e42":"REGRESSION ANALYSIS","0c13fa2e":"NOTE : for 20\/21 season Matches were recorded only uptil 6th March 2021","75a9ba6b":"# EACH MANAGER PERFORMANCE","452fb3e8":"WINS LOSES AND DRAWS FOR ARSENAL IN LAST TEN YEARS","e131f901":"ANALYSING PER MATCH DATA","d08649a8":"QUANTIFYING RELATIONS","42f77e61":"I will be taking data from https:\/\/www.premierleague.com\/clubs\/1\/Arsenal\/stats?se=20 for parameters [6,10] for last 10 seasons","1b78bdcc":"The purpose of passing is to keep possession of the ball by maneuvering it on the ground between different players with the objective of advancing it up the playing field. Passing brings an advantage in that the team secures possession of the ball, without allowing the opposition an opportunity to attack.","9efbdeb2":"ENSEMBLE LEARNING","73b4a1c4":"These two analysis were based on seasons\n\nGAME WISE ANALYSIS","3595377d":"Merging Coach with Every Season will be very helpful so that we can start getting an indepth analysis of team performance with managers","e47087d0":"HALFTIME SCORES AND COMPARISON WITH FULL TIME SCORES","e05a1948":"# TOTAL GOALS SCORED BY ARSENAL and other aspects of scoring","b285f327":"# UNDERSTANDING PASSES","a1f6f35c":"# DAY 4","90bf4bf8":"DRAWS","d7a0e095":"Evaluating Performance of Managers","cd7227fb":"# GOALS CONCEDED","54c6f826":"# REGRESSION ANALYSIS ","4a544396":"UNDERSTANDING THESE DATA POINTS","f44a3c9c":"NOW WE WILL START GETTING DEEPER INTO OUR ANALYSIS AND SEE WHAT PARAMETERS ARE AFFECTING PERFORMANCE TO WHAT EXTEND \nFIRST WE WILL SEE ATTACKING PATTERNS AND AGGRESSION PLAY FROM ARSENAL ","7a264a2d":"DAILY MATCH ANALYSIS","a3229eab":"Let us look at SHOTS","543ac781":"LOSSES OF ARSENAL","0901eef5":"# DAY 6","2b5db9ec":"# ANALYSIS","6374de4c":"We will be looking at these ATTACKING PARAMETERS:\n\n1.SHOTS\n\n2.SHOTS ON TARGET\n\n3.PASSES\n\n4.POSSESION\n\n5.CORNERS\n\n6.BIG CHANCES CREATED\n\n7.PASSES\n\n8.PASS ACCURACY\n\n9.CROSSES\n\n10.CROSS ACCURACY\n","ddd1c7ec":"# DAY 5","deb4d9c5":"# UNDERSTANDING RELATION BETWEEN SHOTS AND SHOTS ON TARGET","1e424751":"THIS IS NOTEBOOK FOR CASE STUDY OF ARSENAL PERFORMANCE \nYOU CAN READ MY DOCUMENTATION OF CASE STUDY : https:\/\/docs.google.com\/document\/d\/1K4gfrim-I4_3ooJskgg8MUiWgMT7ROfPsbsqCSlBBcY\/edit?usp=sharing","cb555bf8":"# TOUCHES AND POSSESION"}}