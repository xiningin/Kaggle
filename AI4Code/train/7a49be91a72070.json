{"cell_type":{"04943595":"code","60d05ef6":"code","09d9ec7a":"code","84c312fc":"code","0cc4aa1f":"code","df6e5fc3":"code","2228e061":"code","ff825124":"code","1dcfde47":"code","358e8121":"code","5777d2be":"markdown","a03a7c8c":"markdown","d0c57df0":"markdown","66527229":"markdown","83afcce9":"markdown","58025b58":"markdown","c36e99bd":"markdown"},"source":{"04943595":"import numpy as np\nimport matplotlib.pyplot as plt","60d05ef6":"!ls ..\/input","09d9ec7a":"# Load the data\n\n# the images for training\nX_train = np.load('..\/input\/uci-math-10-winter2020\/kmnist-train-imgs.npz')['X'] \n\n# the labels (category) for images \ny_train = np.load('..\/input\/uci-math-10-winter2020\/kmnist-train-labels.npz')['y']\n\n# the images for competition (you want to use your model to predict the labels)\nX_test = np.load('..\/input\/uci-math-10-winter2020\/kmnist-test-imgs.npz')['X'] ","84c312fc":"# verifying the shapes\nprint(f\"The shapes of train, test set are {X_train.shape}, {X_test.shape}.\")","0cc4aa1f":"fig, axes = plt.subplots(4,5, figsize=(12, 12))\naxes = axes.reshape(-1)\nnp.random.seed(1)\nidx = np.random.choice(X_train.shape[0], size=20)\n\nfor i in range(20):\n    axes[i].axis('off') # hide the axes ticks\n    axes[i].imshow(X_train[idx[i]], cmap = 'gray')\n    axes[i].set_title(str(y_train[idx[i]]), color= 'black', fontsize=25)\nplt.show()","df6e5fc3":"# Flatten images\nX_train = np.reshape(X_train, (-1, 784))\nX_test = np.reshape(X_test, (-1, 784))\nprint(f\"Shapes: {X_train.shape}, {X_test.shape}\")","2228e061":"from sklearn.neighbors import KNeighborsClassifier","ff825124":"clf = KNeighborsClassifier(n_neighbors=5, weights='distance')\nclf.fit(X_train, y_train)","1dcfde47":"y_pred = clf.predict(X_test) # knn should take a long time","358e8121":"solutions = np.zeros((X_test.shape[0], 2))\nsolutions[:,0] = np.arange(1,X_test.shape[0]+1)\nsolutions[:,1] = y_pred\nsolutions = solutions.astype(int)\nnp.savetxt(\"solutions-yournames.csv\", solutions, \n           fmt='%s', header = 'Id,Category', delimiter = ',', comments='')","5777d2be":"## Load the data from Kaggle\nFirst download the data file in `.npz` format (native Numpy format) from [Kaggle competition website](https:\/\/www.kaggle.com\/c\/uci-math-10-winter2020), put them in the same folder with this notebook. The following cell will load the file as numpy arrays.\n\nIf you can directly using Kaggle kernel from cloud, the dataset is already added to the path accessible to your notebook, and it is in locally `..\/input\/uci-math-10-winter2020` directory.","a03a7c8c":"## Visualizing samples\nNotice `X_train` and `X_test` are numpy arrays with dimensions `(42000, 28, 28)` and `(28000, 28, 28)`, so that `X_train[i]` and `X_test[i]` represent images for training and testing, respectively. We can plot by randomly choosing 20 samples from the `X_train` (a 28x28 grayscale image), and we make the title as their label (which category they belong) as follows: for example, in the plotted images, the first image in the first row is of category 9.\n\nReference:\n\n| ID | Category |\n|---|-------|\n| 0 | \u304a |\n| 1 |  \u304d |\n| 2 | \u3059      |\n| 3 |   \u3064    |\n| 4 |    \u306a    |\n| 5 |  \u306f     |\n| 6 |   \u307e     |\n| 7 |   \u3084     |\n| 8 |  \u308c     |\n| 9 |  \u3092    |","d0c57df0":"# Export your solutions and upload to Kaggle\nThe result predicted by your model can be named to `y_pred`, and be exported to a `.csv` file using the `np.savetxt()` function provided in the cell below. Your `y_pred` should be of a dimension `(28000,)` numpy array. Rename the resulting `solutions-yournames.csv` by replacing `yournames` by your team members' initials connected by hyphen and then upload to Kaggle. If you are using Kaggle cloud kernel, the solution can be submitted directly from the output tab of a committed notebook.","66527229":"## Pre-preprocessing\n\n### Flatten the images for your model(s)\nTo apply the algorithms we learn in class to train an image classifier, we need first cleaning the data to flatten every 28 by 28 gray scale image to a 784 array. We rename these flattened data as capital `X_train` and `X_test`.\n\n### Some remarks\nAs we can see, for some characters it is a mixed of Hiragana and Katagana, which looks completely different yet sharing the same label, further making the prediction difficult.","83afcce9":"# Choose model(s) and algorithm(s)\n\n## A benchmark simple model\nIn Kaggle competition's leaderboard, there is a benchmark entry with about 90% accuracy using K-nearest neighbors (KNN) with `k=5` and inverse distance weighting trained by all data as follows. You should choose model(s) we have learned in class, and in general, the model of your choice should exceed the benchmark's performance.","58025b58":"# Test your trained model\nAfter your model has been trained using all or selected samples from `X_train` and `y_train`. You should obtain a solution of the prediction of the labels by your model using the testing data `X_test`, for example, scikit learn's KNN object's [`predict` function](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeighborsClassifier.predict).\n\n## Cross-validation:\nIn the starter code, no cross-validation technique is used. However for the final project, you are expected to use the cross-validation technique featured in class to choose your models.\n\nSince you do not have access to `y_test`, to cross-validate your model, you should split the training samples to two sets using the techniques learned in class: one is training dataset, the other is your cross-validation dataset (so that you have access to the `y` label of this set). This routine is usually used for Kaggle competitions.","c36e99bd":"# UC Irvine MATH 10 Winter 2020 Final project starter code\n\nYou can download this stater as a Jupyter notebook. Upon submitting your code on Canvas, please type the names of the team members here:\n\nDo not forget to change the filename with team member names intials replacing yourteam, separated by hyphens, in alpahbetical order by last names\n\nFor example a team with Carl Friedrich Gauss, Leonard Euler, and Henri Poincare should rename this file to `math10-finalproj-le-cg-hp.ipynb`.\n\n## Q&A:\nFor questions you can post in the discussion board, or directly email: shuhao.cao@uci.edu."}}