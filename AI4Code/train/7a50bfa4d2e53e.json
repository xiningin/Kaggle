{"cell_type":{"6683b733":"code","b65e1ef1":"code","4688bbbe":"code","de5f8e5d":"code","2405589a":"code","e56ae869":"code","d49e0d7b":"code","77bd6007":"code","0779ba64":"code","3b24733e":"code","e5c7b848":"code","68ccb685":"code","db1f83e1":"code","cd56dc22":"code","770f99f1":"code","e3a0e48a":"code","32a2337f":"markdown","2043e811":"markdown","47065a04":"markdown","fe44f20c":"markdown","7d5c66a6":"markdown","c65aa18a":"markdown","0d0e4084":"markdown"},"source":{"6683b733":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b65e1ef1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","4688bbbe":"h1 = pd.read_csv(\"\/kaggle\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv\")\nh1.head()","de5f8e5d":"import missingno as msno\nmsno.bar(h1)","2405589a":"corr_m = h1.corr()\ncorr_m[\"target\"].sort_values(ascending= False)","e56ae869":"sns.countplot(x= 'sex', data= h1)\nplt.show()","d49e0d7b":"sns.barplot(x= 'sex', y= 'age', data= h1, palette= 'magma')\nplt.show()","77bd6007":"from pandas.plotting import scatter_matrix\nattr = [\"cp\", 'thalach', 'slope', 'restecg']\nscatter_matrix(h1[attr], figsize= (12, 8))","0779ba64":"x = h1.iloc[:, :-1].values\ny = h1.iloc[:, -1].values\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)","3b24733e":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","e5c7b848":"import tensorflow as tf\nann = tf.keras.models.Sequential()","68ccb685":"ann.add(tf.keras.layers.Dense(units= 6, activation= 'relu'))\nann.add(tf.keras.layers.Dense(units= 6, activation= 'relu'))\nann.add(tf.keras.layers.Dense(units= 1, activation= 'sigmoid'))","db1f83e1":"ann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","cd56dc22":"ann.fit(X_train, y_train, batch_size = 32, epochs = 100)","770f99f1":"y_pred = ann.predict(X_test)\ny_pred = (y_pred > 0.5)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","e3a0e48a":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)","32a2337f":"**Men are more prone Heart deaths**","2043e811":"**ANN Model for Classification**","47065a04":"**Common in Older Age group** ","fe44f20c":"**cp, thalach, slope and restecg are dependent on Target value.**","7d5c66a6":"**Feature Scaling**","c65aa18a":"**We see here that there are no Null values.**","0d0e4084":"**Splitting dataset**"}}