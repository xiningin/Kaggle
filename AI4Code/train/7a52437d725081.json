{"cell_type":{"c359d163":"code","3fe2915d":"code","2eea3319":"code","b2827593":"code","1bb2fa8a":"code","db02e2dc":"code","3b6594b7":"code","db8db1e9":"code","ed232203":"code","83475473":"code","67bb699e":"code","323cb9b7":"code","5b5cbe00":"code","ad1056c6":"code","a0827e5d":"code","4929177a":"code","0cf110b5":"code","fc60a146":"code","e2696972":"code","e6a8e633":"code","84a337bb":"markdown","b566eeb0":"markdown","f6ae099d":"markdown","e8c0a651":"markdown","45c67dcb":"markdown","69646cd9":"markdown","d219c6a1":"markdown","7c7a5663":"markdown","d5abebae":"markdown","e4c623c3":"markdown"},"source":{"c359d163":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nfrom folium import plugins\n\nplt.rcParams['figure.figsize'] = (15, 6)\nplt.rcParams['font.size'] = 12\nplt.style.use('fivethirtyeight')\nimport warnings\nwarnings.filterwarnings('ignore')","3fe2915d":"january = pd.read_csv('\/kaggle\/input\/citibike-bike-sharingnewyork-cityjan-to-apr-2021\/CitiBike_Trip_Data\/2021\/January2021.csv')\nfebruary = pd.read_csv('\/kaggle\/input\/citibike-bike-sharingnewyork-cityjan-to-apr-2021\/CitiBike_Trip_Data\/2021\/February2021.csv')\nmarch = pd.read_csv('\/kaggle\/input\/citibike-bike-sharingnewyork-cityjan-to-apr-2021\/CitiBike_Trip_Data\/2021\/March2021.csv')\napril = pd.read_csv('\/kaggle\/input\/citibike-bike-sharingnewyork-cityjan-to-apr-2021\/CitiBike_Trip_Data\/2021\/April2021.csv')","2eea3319":"january['starttime'] = pd.to_datetime(january['starttime'], format=\"%Y\/%m\/%d %H:%M:%S\")\njanuary['stoptime'] = pd.to_datetime(january['stoptime'], format=\"%Y\/%m\/%d %H:%M:%S\")\n\nfebruary['starttime'] = pd.to_datetime(february['starttime'], format=\"%Y\/%m\/%d %H:%M:%S\")\nfebruary['stoptime'] = pd.to_datetime(february['stoptime'], format=\"%Y\/%m\/%d %H:%M:%S\")\n\nmarch['starttime'] = pd.to_datetime(march['starttime'], format=\"%Y\/%m\/%d %H:%M:%S\")\nmarch['stoptime'] = pd.to_datetime(march['stoptime'], format=\"%Y\/%m\/%d %H:%M:%S\")\n\napril['starttime'] = pd.to_datetime(april['starttime'], format=\"%Y\/%m\/%d %H:%M:%S\")\napril['stoptime'] = pd.to_datetime(april['stoptime'], format=\"%Y\/%m\/%d %H:%M:%S\")","b2827593":"january['tripduration'] = january['tripduration'] \/ 60\n\nfebruary['tripduration'] = february['tripduration'] \/ 60\n\nmarch['tripduration'] = march['tripduration'] \/ 60\n\napril['tripduration'] = april['tripduration'] \/ 60","1bb2fa8a":"january.head()","db02e2dc":"print(f\"January max: {january['tripduration'].max()}\\n\\\nFebruary max: {february['tripduration'].max()}\\n\\\nMarch max: {march['tripduration'].max()}\\n\\\nApril max: {april['tripduration'].max()}\")","3b6594b7":"fig, ax = plt.subplots(4, figsize=(12, 15))\n\nsns.histplot(x=january['tripduration'], ax=ax[0], bins=np.logspace(0, 6, 100))\nax[0].set_xscale(\"log\")\nax[0].set_title(\"January\", fontsize=14)\n\nsns.histplot(x=february['tripduration'], ax=ax[1], bins=np.logspace(0, 6, 100))\nax[1].set_xscale(\"log\")\nax[1].set_title(\"February\", fontsize=14)\n\nsns.histplot(x=march['tripduration'], ax=ax[2], bins=np.logspace(0, 6, 100))\nax[2].set_xscale(\"log\")\nax[2].set_title(\"March\", fontsize=14)\n\nsns.histplot(x=april['tripduration'], ax=ax[3], bins=np.logspace(0, 6, 100))\nax[3].set_xscale(\"log\")\nax[3].set_title(\"April\", fontsize=14)\n\nfig.suptitle(\"Histograms of Trip Durations in Minutes for Each Month\", fontsize=16)\nplt.tight_layout()\nplt.show()","db8db1e9":"january['startweekday'] = january['starttime'].dt.day_name()\njanuary['stopweekday'] = january['stoptime'].dt.day_name()\n\nfebruary['startweekday'] = february['starttime'].dt.day_name()\nfebruary['stopweekday'] = february['stoptime'].dt.day_name()\n\nmarch['startweekday'] = march['starttime'].dt.day_name()\nmarch['stopweekday'] = march['stoptime'].dt.day_name()\n\napril['startweekday'] = april['starttime'].dt.day_name()\napril['stopweekday'] = april['stoptime'].dt.day_name()","ed232203":"fig, ax = plt.subplots(4, figsize=(12, 15))\n\nsns.countplot('startweekday', data=january, order=january['startweekday'].value_counts().index, palette='flare', ax=ax[0])\nax[0].set_title(\"January\", fontsize=14)\n\nsns.countplot('startweekday', data=february, order=february['startweekday'].value_counts().index, palette='flare', ax=ax[1])\nax[1].set_title(\"February\", fontsize=14)\n\nsns.countplot('startweekday', data=march, order=march['startweekday'].value_counts().index, palette='flare', ax=ax[2])\nax[2].set_title(\"March\", fontsize=14)\n\nsns.countplot('startweekday', data=april, order=april['startweekday'].value_counts().index, palette='flare', ax=ax[3])\nax[3].set_title(\"April\", fontsize=14)\n\nfig.suptitle(\"Usages Each Day of Week\", fontsize=16)\nplt.tight_layout()\nplt.show()","83475473":"fig, ax = plt.subplots(4, figsize=(12, 15))\n\nsns.countplot('start station name', data=january, order=january['start station name'].value_counts().index[:15], palette='flare', ax=ax[0])\nax[0].set_title(\"January\", fontsize=14)\nax[0].tick_params(labelsize=10, labelrotation=45)\n\nsns.countplot('start station name', data=february, order=february['start station name'].value_counts().index[:15], palette='flare', ax=ax[1])\nax[1].set_title(\"February\", fontsize=14)\nax[1].tick_params(labelsize=10, labelrotation=45)\n\nsns.countplot('start station name', data=march, order=march['start station name'].value_counts().index[:15], palette='flare', ax=ax[2])\nax[2].set_title(\"March\", fontsize=14)\nax[2].tick_params(labelsize=10, labelrotation=45)\n\nsns.countplot('start station name', data=april, order=april['start station name'].value_counts().index[:15], palette='flare', ax=ax[3])\nax[3].set_title(\"April\", fontsize=14)\nax[3].tick_params(labelsize=10, labelrotation=45)\n\nfig.suptitle(\"Starts of Trips for Top 15 Stations\", fontsize=16)\nplt.tight_layout()\nplt.show()","67bb699e":"tmp = january.groupby(['start station latitude', 'start station longitude', 'start station name']).size().to_frame('size').reset_index()\nlats = tmp['start station latitude']\nlongs = tmp['start station longitude']\nnames = tmp['start station name']\nsize = tmp['size']\ncolors = pd.cut(tmp['size'], bins=4, labels=['orange', 'lightred', 'red', 'darkred'])\nplaces = [[x[0],x[1]] for x in zip(lats,longs)]\n\nm = folium.Map(places[0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>January<\/b><\/h3>'))\nfor i, loc in enumerate(places[1:]):\n    folium.Marker(loc, icon=folium.Icon(color=colors[i]), popup=f\"Station {names[i]}\\nUsage in a month:\\n{size[i]}\").add_to(m)\nm","323cb9b7":"tmp = february.groupby(['start station latitude', 'start station longitude', 'start station name']).size().to_frame('size').reset_index()\nlats = tmp['start station latitude']\nlongs = tmp['start station longitude']\nnames = tmp['start station name']\nsize = tmp['size']\ncolors = pd.cut(tmp['size'], bins=4, labels=['orange', 'lightred', 'red', 'darkred'])\nplaces = [[x[0],x[1]] for x in zip(lats,longs)]\n\nm = folium.Map(places[0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>February<\/b><\/h3>'))\nfor i, loc in enumerate(places[1:]):\n    folium.Marker(loc, icon=folium.Icon(color=colors[i]), popup=f\"Station {names[i]}\\nUsage in a month:\\n{size[i]}\").add_to(m)\nm","5b5cbe00":"tmp = march.groupby(['start station latitude', 'start station longitude', 'start station name']).size().to_frame('size').reset_index()\nlats = tmp['start station latitude']\nlongs = tmp['start station longitude']\nnames = tmp['start station name']\nsize = tmp['size']\ncolors = pd.cut(tmp['size'], bins=4, labels=['orange', 'lightred', 'red', 'darkred'])\nplaces = [[x[0],x[1]] for x in zip(lats,longs)]\n\nm = folium.Map(places[0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>March<\/b><\/h3>'))\nfor i, loc in enumerate(places[1:]):\n    folium.Marker(loc, icon=folium.Icon(color=colors[i]), popup=f\"Station {names[i]}\\nUsage in a month:\\n{size[i]}\").add_to(m)\nm","ad1056c6":"tmp = april.groupby(['start station latitude', 'start station longitude', 'start station name']).size().to_frame('size').reset_index()\nlats = tmp['start station latitude']\nlongs = tmp['start station longitude']\nnames = tmp['start station name']\nsize = tmp['size']\ncolors = pd.cut(tmp['size'], bins=4, labels=['orange', 'lightred', 'red', 'darkred'])\nplaces = [[x[0],x[1]] for x in zip(lats,longs)]\n\nm = folium.Map(places[0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>April<\/b><\/h3>'))\nfor i, loc in enumerate(places[1:]):\n    folium.Marker(loc, icon=folium.Icon(color=colors[i]), popup=f\"Station {names[i]}\\nUsage in a month:\\n{size[i]}\").add_to(m)\nm","a0827e5d":"tmp = january.groupby(['start station latitude', 'end station latitude', 'start station name', 'start station longitude', 'end station longitude', 'end station name']).size().nlargest(18).to_frame('size').reset_index()\nlatstart = tmp['start station latitude']\nlongstart = tmp['start station longitude']\nnamestart = tmp['start station name']\nlatsend = tmp['end station latitude']\nlongsend = tmp['end station longitude']\nnameend = tmp['end station name']\nsize = tmp['size']\ncolors = ['red', 'blue', 'green', 'purple', 'orange', 'darkred',\\\n          'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue',\\\n          'darkpurple', 'pink', 'lightblue', 'lightgreen', 'gray', 'black', 'lightgray']\nplacestart = [[x[0],x[1]] for x in zip(latstart, longstart)]\nplacesend = [[x[0],x[1]] for x in zip(latsend, longsend)]\nplaces = list(zip(placestart, placesend))\n\nm = folium.Map(places[0][0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>January<\/b><\/h3>'))\nfor i, pair in enumerate(places):\n    marker_cluster = plugins.MarkerCluster().add_to(m)\n    folium.Marker(pair[0], icon=folium.Icon(color=colors[i]), popup=f\"Start {namestart[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.Marker(pair[1], icon=folium.Icon(color=colors[i]), popup=f\"End {nameend[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.PolyLine(pair, color=colors[i]).add_to(m)\nm","4929177a":"tmp = february.groupby(['start station latitude', 'end station latitude', 'start station name', 'start station longitude', 'end station longitude', 'end station name']).size().nlargest(18).to_frame('size').reset_index()\nlatstart = tmp['start station latitude']\nlongstart = tmp['start station longitude']\nnamestart = tmp['start station name']\nlatsend = tmp['end station latitude']\nlongsend = tmp['end station longitude']\nnameend = tmp['end station name']\nsize = tmp['size']\ncolors = ['red', 'blue', 'green', 'purple', 'orange', 'darkred',\\\n          'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue',\\\n          'darkpurple', 'pink', 'lightblue', 'lightgreen', 'gray', 'black', 'lightgray']\nplacestart = [[x[0],x[1]] for x in zip(latstart, longstart)]\nplacesend = [[x[0],x[1]] for x in zip(latsend, longsend)]\nplaces = list(zip(placestart, placesend))\n\nm = folium.Map(places[0][0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>February<\/b><\/h3>'))\nfor i, pair in enumerate(places):\n    marker_cluster = plugins.MarkerCluster().add_to(m)\n    folium.Marker(pair[0], icon=folium.Icon(color=colors[i]), popup=f\"Start {namestart[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.Marker(pair[1], icon=folium.Icon(color=colors[i]), popup=f\"End {nameend[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.PolyLine(pair, color=colors[i]).add_to(m)\nm","0cf110b5":"tmp = march.groupby(['start station latitude', 'end station latitude', 'start station name', 'start station longitude', 'end station longitude', 'end station name']).size().nlargest(18).to_frame('size').reset_index()\nlatstart = tmp['start station latitude']\nlongstart = tmp['start station longitude']\nnamestart = tmp['start station name']\nlatsend = tmp['end station latitude']\nlongsend = tmp['end station longitude']\nnameend = tmp['end station name']\nsize = tmp['size']\ncolors = ['red', 'blue', 'green', 'purple', 'orange', 'darkred',\\\n          'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue',\\\n          'darkpurple', 'pink', 'lightblue', 'lightgreen', 'gray', 'black', 'lightgray']\nplacestart = [[x[0],x[1]] for x in zip(latstart, longstart)]\nplacesend = [[x[0],x[1]] for x in zip(latsend, longsend)]\nplaces = list(zip(placestart, placesend))\n\nm = folium.Map(places[0][0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>March<\/b><\/h3>'))\nfor i, pair in enumerate(places):\n    marker_cluster = plugins.MarkerCluster().add_to(m)\n    folium.Marker(pair[0], icon=folium.Icon(color=colors[i]), popup=f\"Start {namestart[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.Marker(pair[1], icon=folium.Icon(color=colors[i]), popup=f\"End {nameend[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.PolyLine(pair, color=colors[i]).add_to(m)\nm","fc60a146":"tmp = april.groupby(['start station latitude', 'end station latitude', 'start station name', 'start station longitude', 'end station longitude', 'end station name']).size().nlargest(18).to_frame('size').reset_index()\nlatstart = tmp['start station latitude']\nlongstart = tmp['start station longitude']\nnamestart = tmp['start station name']\nlatsend = tmp['end station latitude']\nlongsend = tmp['end station longitude']\nnameend = tmp['end station name']\nsize = tmp['size']\ncolors = ['red', 'blue', 'green', 'purple', 'orange', 'darkred',\\\n          'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue',\\\n          'darkpurple', 'pink', 'lightblue', 'lightgreen', 'gray', 'black', 'lightgray']\nplacestart = [[x[0],x[1]] for x in zip(latstart, longstart)]\nplacesend = [[x[0],x[1]] for x in zip(latsend, longsend)]\nplaces = list(zip(placestart, placesend))\n\nm = folium.Map(places[0][0], tiles='OpenStreetMap', zoom_start=12)\nm.get_root().html.add_child(folium.Element('<h3 align=\"center\" style=\"font-size:16px\"><b>April<\/b><\/h3>'))\nfor i, pair in enumerate(places):\n    marker_cluster = plugins.MarkerCluster().add_to(m)\n    folium.Marker(pair[0], icon=folium.Icon(color=colors[i]), popup=f\"Start {namestart[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.Marker(pair[1], icon=folium.Icon(color=colors[i]), popup=f\"End {nameend[i]}\\nUsage in a month:\\n{size[i]}\").add_to(marker_cluster)\n    folium.PolyLine(pair, color=colors[i]).add_to(m)\nm","e2696972":"print(f\"Customer&Subscriber trips in\\nJanuary 2021:\\n{january.groupby('usertype').size()}\\n\\\nFebruary 2021:\\n{february.groupby('usertype').size()}\\n\\\nMarch 2021:\\n{march.groupby('usertype').size()}\\n\\\nApril 2021:\\n{april.groupby('usertype').size()}\")","e6a8e633":"fig, ax = plt.subplots(4, 2, figsize=(12, 15))\nsns.histplot(x=january[january.usertype=='Customer']['tripduration'], ax=ax[0][0], bins=np.logspace(0, 6, 100))\nax[0][0].set_xscale(\"log\")\nax[0][0].set_title(\"Customers in January\", fontsize=14)\n\nsns.histplot(x=january[january.usertype=='Subscriber']['tripduration'], ax=ax[0][1], bins=np.logspace(0, 6, 100))\nax[0][1].set_xscale(\"log\")\nax[0][1].set_title(\"Subscribers in January\", fontsize=14)\n\nsns.histplot(x=february[february.usertype=='Customer']['tripduration'], ax=ax[1][0], bins=np.logspace(0, 6, 100))\nax[1][0].set_xscale(\"log\")\nax[1][0].set_title(\"Customers in February\", fontsize=14)\n\nsns.histplot(x=february[february.usertype=='Subscriber']['tripduration'], ax=ax[1][1], bins=np.logspace(0, 6, 100))\nax[1][1].set_xscale(\"log\")\nax[1][1].set_title(\"Subscribers in February\", fontsize=14)\n\nsns.histplot(x=march[march.usertype=='Customer']['tripduration'], ax=ax[2][0], bins=np.logspace(0, 6, 100))\nax[2][0].set_xscale(\"log\")\nax[2][0].set_title(\"Customers in March\", fontsize=14)\n\nsns.histplot(x=march[march.usertype=='Subscriber']['tripduration'], ax=ax[2][1], bins=np.logspace(0, 6, 100))\nax[2][1].set_xscale(\"log\")\nax[2][1].set_title(\"Subscribers in March\", fontsize=14)\n\nsns.histplot(x=april[april.usertype=='Customer']['tripduration'], ax=ax[3][0], bins=np.logspace(0, 6, 100))\nax[3][0].set_xscale(\"log\")\nax[3][0].set_title(\"Customers in April\", fontsize=14)\n\nsns.histplot(x=april[april.usertype=='Subscriber']['tripduration'], ax=ax[3][1], bins=np.logspace(0, 6, 100))\nax[3][1].set_xscale(\"log\")\nax[3][1].set_title(\"Subcribers in April\", fontsize=14)\n\nfig.suptitle(\"Histograms of Trip Durations in Minutes for Each Month\", fontsize=16)\nplt.tight_layout()\nplt.show()","84a337bb":"## Popular Stations <a class=\"anchor\" id=\"chap23\"><\/a>","b566eeb0":"## Duration of Trips <a class=\"anchor\" id=\"chap21\"><\/a>","f6ae099d":">Citi Bike is a privately owned public bicycle sharing system serving the New York City boroughs of the Bronx, Brooklyn, Manhattan, and Queens, as well as Jersey City, New Jersey. Named after lead sponsor Citigroup, it is operated by Motivate (formerly Alta Bicycle Share), with former Metropolitan Transportation Authority CEO Jay Walder as chief executive until September 30, 2018 when the company was acquired by Lyft. The system's bikes and stations use BIXI-branded technology from PBSC Urban Solutions.\n\nThe goal of this notebook is data visualization for January-April 2021.","e8c0a651":"## Most Popular Routes <a class=\"anchor\" id=\"chap25\"><\/a>","45c67dcb":"# Visual Data Analysis <a class=\"anchor\" id=\"chap2\"><\/a>","69646cd9":"## Customer Visualization <a class=\"anchor\" id=\"chap26\"><\/a>","d219c6a1":"# Data Preparation <a class=\"anchor\" id=\"chap1\"><\/a>","7c7a5663":"## Popular Stations on Maps <a class=\"anchor\" id=\"chap24\"><\/a>","d5abebae":"## Weekly Usage <a class=\"anchor\" id=\"chap22\"><\/a>","e4c623c3":"### Table of Contents\n* [Data Preparation](#chap1)\n* [Visual Data Analysis](#chap2)\n    * [Duration of Trips](#chap21)\n    * [Weekly Usage](#chap22)\n    * [Popular Stations](#chap23)\n    * [Popular Stations on Maps](#chap24)\n    * [Most Popular Routes](#chap25)\n    * [Customer Visualization](#chap26)\n"}}