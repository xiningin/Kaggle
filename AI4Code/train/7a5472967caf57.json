{"cell_type":{"91809680":"code","6c93eab1":"code","10fda3fd":"code","487f6643":"code","f6bb495b":"code","3eee2b3b":"code","ad3dd5f5":"code","1e785b20":"code","e98a6a5d":"code","fd1e399f":"code","2a6d5a45":"code","52328f0d":"code","aa81e92d":"code","59d151e0":"code","3a9d13d5":"code","e53d2196":"code","8b960a71":"code","7f907644":"code","05acd4e3":"code","64d86053":"code","096e73df":"code","50c60190":"code","a1cc6372":"code","313da2eb":"code","7f5b7067":"code","ff46db13":"code","c9fbda3a":"code","23548720":"code","025d1eac":"code","668d9b8f":"code","9a6f54cc":"code","985d1248":"code","d7dcfe57":"code","ab5d67c1":"code","4979b46c":"code","6d2204de":"code","46383f02":"code","2822add6":"code","715521f2":"code","77ba3d9b":"code","65cc1f82":"code","e4a3bd3d":"code","5da80ed2":"markdown","43c458bf":"markdown","36daff5a":"markdown","b444b34b":"markdown","ba86b6fe":"markdown","c6eadc2b":"markdown","67267e9e":"markdown","b3c51909":"markdown","f29c9117":"markdown","7aeae6bc":"markdown","60b4bc77":"markdown","f129bf86":"markdown","96278888":"markdown","1c1f9f83":"markdown","ee1ca49d":"markdown","ce9d7db5":"markdown","c556849c":"markdown","66723258":"markdown","9e23cf3c":"markdown","99b98cc7":"markdown","e8926090":"markdown","f06ec12d":"markdown","198e322d":"markdown","ac33ccf6":"markdown","c845f55a":"markdown","4ca7d643":"markdown","820e0fcf":"markdown","b8a1ce4d":"markdown","d2d8b412":"markdown","ca586f52":"markdown","cf43039e":"markdown","6c22d253":"markdown","1ca88502":"markdown","f9994442":"markdown","c63c3a7f":"markdown","4947256e":"markdown","fe483c50":"markdown"},"source":{"91809680":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport re","6c93eab1":"df = pd.read_csv(\"..\/input\/spacelaunches\/clean_launch_data.csv\")\ndf.head()","10fda3fd":"df.describe()","487f6643":"df.info()","f6bb495b":"df[\"nation\"] = df[\"nation\"].fillna(\"unknown\")","3eee2b3b":"df[\"equipment\"].dropna().value_counts().head(30)\n#Best stay away from this for now!","ad3dd5f5":"#Fixing the type \/ application column\ndf[\"type\"] = df[\"type \/ application\"].fillna(\"\").astype(str)  +df[\"type, application\"].fillna(\"\").astype(str) \ndf = df.drop([\"type \/ application\",\"type, application\"], axis = 1)\ndf.head()\n\ndf[\"date\"] = pd.to_datetime(df[\"date\"])\ndf[\"year\"] = df[\"date\"].dt.year\ndf[\"month\"] = df[\"date\"].dt.month","1e785b20":"#on \"id\" we have the id of the launch. We'll only keep those two columns, and drop the duplicates to get the unique launches each year.\nper_year_df = df[ [\"year\",\"id\"] ].drop_duplicates()\n#Now, we group by year, get the size, and with that plot the number of launches.\nper_year_df.groupby(\"year\").size().plot(kind=\"line\",figsize=(16,4))","e98a6a5d":"per_year_df.hist(bins=[1960,1970,1980,1990,2000,2010,2020])","fd1e399f":"#Failure Rate, another plot in the same showing failure trend\nper_year_df = df[ [\"year\",\"id\",\"failed\"] ].drop_duplicates()\nper_year_df.head()","2a6d5a45":"failures_per_year = per_year_df.groupby([\"year\",\"failed\"]).size().unstack().reset_index();\nfailures_per_year[\"success\"] = (failures_per_year[False])\nfailures_per_year[\"failures\"] = (failures_per_year[True])\nfailures_per_year[\"total_launches\"] = (failures_per_year[True]+failures_per_year[False])\nfailures_per_year[\"success_rate\"] = 100*failures_per_year[False]\/failures_per_year[\"total_launches\"]\nfailures_per_year = failures_per_year[ [\"year\",\"success\",\"failures\",\"total_launches\",\"success_rate\"] ]\n\n#failures_per_year.tail(10)\n\nsuccess_year= pd.melt(failures_per_year,id_vars=[\"year\"],value_vars=[\"total_launches\",\"failures\",\"success_rate\"],var_name=\"variable\")\n\n#success_year.tail(10)","52328f0d":"facets = sns.FacetGrid(success_year, col=\"variable\",sharex=False,sharey=False)\nfacets.map(sns.lineplot,\"year\",\"value\")","aa81e92d":"sites = pd.read_json(\"..\/input\/spacelaunches\/sites.json\")\nsites.head(25)","59d151e0":"df[\"site_code\"] = df[\"site\"].apply(lambda x: x.split(\" \")[0]).astype(\"string\")\nprint(\"Has null values? \", len(df[\"site_code\"])!=len(df[\"site_code\"].dropna()))\nsites.set_index(\"code\",inplace=True)","3a9d13d5":"#Check different values for the site codes.\nlaunch_site_codes = set(df[\"site_code\"].unique())\nsite_codes = set(sites.index.unique())\nunmatched_codes = list(launch_site_codes-site_codes)\nunmatched_codes","e53d2196":"def clean_site_code(raw_site):\n    return re.sub(\"@|,|-.*\",\"\",raw_site.split(\" \")[0]).strip()\n\ndef unmatched_codes(launch_site_codes,site_codes):\n    unmatched_code_list = list(set(launch_site_codes)-set(site_codes))\n    return unmatched_code_list","8b960a71":"df[\"site_code\"] = df[\"site\"].apply(clean_site_code).astype(\"string\")\nunmatched = unmatched_codes(df[\"site_code\"].unique(),sites.index.unique())\ndf[df[\"site_code\"].isin(unmatched)][\"site_code\"].value_counts()","7f907644":"#What payloads have incorrect launch sites (besides CCK)? With the year of the launch site, we'll revisit our source of the data.\n\ndf[ (df[\"site_code\"].isin(unmatched)) & ( df[\"site_code\"] != \"CCK\")][[\"year\",\"site_code\",\"site\"]]","05acd4e3":"new_sites = [\n    [\"USA\",\"NASA John F. Kennedy Space Center, Cape Canaveral, Florida, USA\",\"orb\",\"NASA John F. Kennedy Space Center, Cape Canaveral, Florida, USA\"],\n    [\"China\",\"Unknown, China\",\"orb\",\"Unknown, China\"]\n]\ncck_ys = pd.DataFrame(new_sites\n                   ,columns=[\"country\",\"raw\",\"details\",\"name\"],\n                   index=[\"CCK\",\"YS\"])\n\nsites = sites.append(cck_ys)\n\nunmatched = unmatched_codes(df[\"site_code\"].unique(),sites.index.unique())\ndf[df[\"site_code\"].isin(unmatched)][[\"year\",\"site_code\"]]\n\n#df.loc[df[\"site\"]==\"LC-1\/5\", \"site_code\" ] = \"CC\"\ndf.loc[df[\"site_code\"]==\"\", \"site_code\" ] = \"CC\"\ndf.loc[df[\"site_code\"]==\"SLC\", \"site_code\" ] = \"CC\"\ndf.loc[df[\"site_code\"]==\"BaS\", \"site_code\" ] = \"Ba\"\n#df[df[\"site_code\"]==\"SLC\"]\n\nprint(\"Number of unmatched site codes: \", len(df[df[\"site_code\"].isin(unmatched)][[\"year\",\"site_code\",\"site\"]]))","64d86053":"joined = df.join(sites, on=\"site_code\", lsuffix=\"site__\")\njoined.head()\n","096e73df":"ussr_df = df[(df[\"nation\"] == \"russia\") | (df[\"nation\"] == \"ussr\")][ [\"year\",\"nation\"] ]\ngrid = sns.FacetGrid(ussr_df,col=\"nation\")\ngrid.map(plt.hist,\"year\")","50c60190":"sites.reset_index().head()\n#sites[sites[\"country\"].str.contains(\"USSR\") | sites[\"country\"].str.contains(\"Uzb\")]\nsites.reset_index().groupby(\"index\").filter(lambda x: len(x) > 1)\n","a1cc6372":"sites.reset_index(inplace=True)\nsites.head()\n","313da2eb":"sites.at[123,\"index\"] = \"Sin-2\"\nsites.at[195,\"index\"] = \"W-MARS\"\n\n\nsites.groupby(\"index\").filter(lambda x: len(x) > 1)\nsites.set_index(\"index\",inplace=True)","7f5b7067":"sites.head()\n\nambiguous_sites = sites[ sites[\"country\"]==\"USSR \/ Russia\" ]\n\ndf.loc[ (df[\"year\"]<1992) & (df[\"site_code\"].isin(ambiguous_sites.index) ), \"site_code\" ] = df[\"site_code\"] + \"-USSR\"\n\nambiguous_sites.index = ambiguous_sites.index + \"-USSR\"\nsites = sites.append(ambiguous_sites)\n\n","ff46db13":"sites.tail()","c9fbda3a":"joined = df.join(sites, on=\"site_code\")\n#print(\"Joined dataframe length: \",len(joined))\njoined.head(10)","23548720":"unique_launches = joined.groupby(\"id\",as_index=False).agg({'nation': 'nunique', \n                                                           'type': 'nunique', 'year': 'first', 'month': 'first', \n                                                           'country': 'first',\"site\":\"first\", \"power\":\"count\",\"vehicle\":\"first\",\"date\":\"first\",\"failed\":\"first\",\"equipment\":\"count\"})\n\nunique_launches.loc[ (unique_launches[\"year\"]>=1992) & (unique_launches[\"country\"]==\"USSR \/ Russia\" ), \"country\" ] = \"Russia\"\n\nunique_launches = unique_launches.rename(columns={\"power\":\"launches\",\"equipment\":\"payload_total\"})\n\nagg_map = {\"country\":\"nunique\",\"type\":\"nunique\",\"launches\":\"count\",\"nation\":\"sum\",\"vehicle\":\"nunique\",\"failed\":\"sum\",\"payload_total\":\"sum\"}\ncountries_year = unique_launches.groupby(\"year\",as_index=False).agg(agg_map)\nsuccessful_countries_year = unique_launches[unique_launches[\"failed\"]==False].groupby(\"year\",as_index=False).agg(agg_map)\n\ncountries_year[\"success_rate\"] = 100 - 100*(countries_year[\"failed\"] \/ countries_year[\"launches\"])\ncountries_year[\"countries_per_launch\"] = 100*(countries_year[\"country\"] \/ countries_year[\"launches\"])\ncountries_year[\"nations_per_launch\"] = 100*(countries_year[\"nation\"] \/ countries_year[\"launches\"])\n\ncountries_year.head()","025d1eac":"nations_year_month = joined.groupby([\"year\",\"month\"],as_index=False).agg({'nation': 'nunique'})","668d9b8f":"#Add color map.\nfrom matplotlib.colors import ListedColormap\ncmap = ListedColormap(sns.color_palette(\"RdYlGn\",10))","9a6f54cc":"#Let's analize the error\/success rate each year\nfig = plt.figure(figsize=(20,6))\n\nax = sns.barplot(x=\"year\",y=\"launches\",data=countries_year,color=\"green\")\nsns.barplot(x=\"year\",y=\"failed\",data=countries_year,color=\"red\",ax=ax)\n\n#ax.legend(countries_year,[\"A\",\"B\"])\nax.set_xticklabels([year if year%5==0 else \"\" for year in countries_year[\"year\"]])\nax.set_title(\"Number of space launches each year (successful and unsuccessful)\", fontsize=20)","985d1248":"print(df[\"nation\"].value_counts())\nprint(df[\"nation\"].value_counts().tail(40))","d7dcfe57":"#df[ df[\"nation\"].fillna(\"unknown\").str.contains(\"\u2192\") ].count()\nmulti_ownership = df[ df[\"nation\"].str.count(\",\") > 0 ]\ntransferred = df[ df[\"nation\"].str.count(\"\u2192\") > 0 ]\n\nprint(\"Satellites with multiple owners: \", len(multi_ownership) )\nprint(\"Transferred satellites: \", len(transferred) )\n\n\ndf[\"country_count\"] = 1 + df[\"nation\"].str.count(\",\")\n\nfix, axes = plt.subplots(3,1,figsize=(10,10))\n\naxes[0].set_title(\"Country count\")\naxes[1].set_title(\"Payloads with multi-ownership\")\naxes[2].set_title(\"Payloads with multi-ownership\")\n\ndf.hist(\"country_count\",ax=axes[0])\ndf[ df[\"country_count\"] > 1 ].hist(\"country_count\",ax=axes[1])\ndf[ df[\"country_count\"] > 2 ].hist(\"country_count\",ax=axes[2])","ab5d67c1":"def clean_country(x):\n    return x.strip();\n\ndef build_clean_map():\n    words_to_remove = [\"\\d+\",\"\\(.*?\\)\",\"\\(\",\"\\)\",\"\u2192.*\"]\n\n    clean_map = {word:\"\" for word in words_to_remove}\n    return clean_map\n\nclean_map = build_clean_map();\n\n#joined[\"second_nation\"] = joined[\"nation\"].apply(lambda x: x.split(\",\")[1] if (x.count(\",\") > 0) else None)\n#joined[\"first_nation\"] = joined[\"nation\"].apply(lambda x: x.split(\",\")[0]);\n\njoined[\"second_nation\"] = joined[\"nation\"].apply(lambda x: x.strip()).replace(clean_map,regex=True).apply(lambda x: x.strip());\njoined[\"first_nation\"] = joined[\"second_nation\"].apply(lambda x: x.split(\",\")[0])\njoined[\"second_nation\"] = joined[\"second_nation\"].apply(lambda x: x.split(\",\")[1] if (x.count(\",\") > 0) else None)\n\nnation_payloads_year = joined.groupby(\"year\")[\"first_nation\",\"second_nation\"].apply(lambda x: len(pd.unique(x.values.ravel()).tolist()))\n\n#joined[\"first_nation\"].concat(joined[\"second_nation\"]).unique()\n\n#clean_country(\"monaco\")","4979b46c":"launches_per_month = unique_launches.groupby( [\"year\",\"month\"] ).agg({\"country\":\"count\"}).reset_index()\n\ncountries_per_month = unique_launches.groupby( [\"year\",\"month\"] ).agg({\"country\":\"nunique\"}).reset_index()\ncountries_per_month.head()\ncountry_month_pivot_table = countries_per_month.pivot(\"month\",\"year\",\"country\").fillna(0)\n\nlaunches_per_month = unique_launches.groupby( [\"year\",\"month\"] ).agg({\"country\":\"count\"}).reset_index()\nlaunches_month_pivot_table = countries_per_month.pivot(\"month\",\"year\",\"country\").fillna(0)\n\n#We transform both columns, first nation and second nation into a single list, and count the unique values with len. pd.unique(x.values.ravel()) \nnation_payloads_year = joined.groupby(\"year\")[\"first_nation\",\"second_nation\"].apply(lambda x: len(pd.unique(x.values.ravel()).tolist())).reset_index().rename({0:\"nation\"},axis=1)\n#nation_payloads_year = joined.groupby([\"year\"],as_index=False).agg({'first_nation': 'nunique'})\n\nfig,(ax,ax2) = plt.subplots(2,1,figsize=(16,8))\nsns.heatmap(country_month_pivot_table,ax=ax, square=True,yticklabels=False)\nsns.lineplot(x=\"year\",y=\"nation\",data=nation_payloads_year[ nation_payloads_year[\"year\"]<2020 ],ax=ax2,legend=\"full\")\n\nax.set_xticklabels([year if year%5==0 else \"\" for year in countries_year[\"year\"]])\nax.set_title(\"Number of different countries launching to space each month\",fontsize=20)\nax.set_yticklabels([0, 1,2,3,4,5,6,7,8])\nax.yaxis.set_ticks([ 0, 1,2,3,4,5,6,7,8])\n\nax2.set_title(\"Different nations putting payloads in orbit each year\",fontsize=20)\n\n","6d2204de":"country_launches = unique_launches.groupby(\"country\").agg({\"year\":[\"min\", \"max\"],\"type\":\"count\"}).reset_index()\ncountry_launches.columns = ['-'.join(col) for col in country_launches.columns.values]\ncountry_launches = country_launches.rename({\"type-count\":\"launches\",\"country-\":\"country\",\"year-min\":\"first_launch_year\",\"year-max\":\"last_launch_year\"},axis=1)\ncountry_launches[\"yearly_rate_since_first\"] = country_launches[\"launches\"] \/ (2020-country_launches[\"first_launch_year\"])\ncountry_launches.sort_values(\"first_launch_year\",ascending=False)","46383f02":"country_launches.sort_values(\"last_launch_year\",ascending=False)","2822add6":"#Pace of launches for selected countries\n#\n#country_and_month = unique_launches.groupby( [\"country\",\"year\",\"month\"] ).size().reset_index()\n#\n#countries = []\n#\n#country = country_and_month[ country_and_month[\"country\"]==\"China\" ].pivot(\"year\",\"month\",0).fillna(0)\n#\n#sns.heatmap(country,cmap=\"coolwarm\")\n\n\n\nargentina = joined[ joined[\"nation\"]==\"argentina\" ].groupby([\"year\",\"month\"] ,as_index=False).agg({'nation': 'count'})\n\nargentina.pivot(\"year\",\"month\",\"nation\").fillna(0)","715521f2":"decade_tables = []\nyears = [1950,1975,2000]\nfig, axes = plt.subplots(len(years),1,figsize=(20,20))\n\nfor i,year in enumerate(years):\n    decade_group = unique_launches[ (unique_launches[\"year\"]>=year) & (unique_launches[\"year\"]<year+25) ].groupby([\"country\",\"year\"])\n    decade_pivot_table = decade_group.agg({\"month\":\"count\"}).reset_index().pivot(\"country\",\"year\",\"month\")\n    decade_tables.append( decade_pivot_table.fillna(0 ) )\n    sns.heatmap(decade_pivot_table.fillna(0),ax=axes[i], cmap=\"coolwarm\")                                                                     \n\n","77ba3d9b":"countries = unique_launches.groupby( [\"year\",\"country\"] ).size().reset_index().rename({0:\"launches\"},axis=1)\ntop_countries = countries.groupby(\"country\").mean().sort_values(\"launches\", ascending=False).head(8).index\n\ncountries[\"is_top\"] =  countries[\"country\"].isin(top_countries)\n\nother_countries = countries[ countries[\"is_top\"]==False ].groupby(\"year\").sum().reset_index()[ [\"year\",\"launches\"] ]\nother_countries[\"country\"] = \"Other\"\n\nall_countries = pd.concat( [ countries[ countries[\"country\"].isin(top_countries) ][ [\"year\",\"launches\",\"country\"] ],other_countries] )\n\nfig, axes = plt.subplots(2,1,figsize=(20,20))\n\naxes[0].set_title(\"Number of launches by country\",fontsize=30)\naxes[1].set_title(\"Number of launches by country, 2010 onwards\",fontsize=30)\nsns.lineplot(x=\"year\",y=\"launches\",hue=\"country\",data=all_countries,ax=axes[0], lw=3)\nsns.lineplot(x=\"year\",y=\"launches\",hue=\"country\",data=all_countries[ (all_countries[\"year\"]>2010) & (all_countries[\"year\"]<2020)] ,ax=axes[1], lw=3)\n\n","65cc1f82":"fig, (ax) = plt.subplots(1,1,figsize=(20,6))\n#sns.scatterplot(x=\"year\",y=\"country\", size=\"country\", hue=\"nation\", data=countries_year)\nax.set_title(\"Number of launches per year, with total number of payloads\",fontsize=30)\nsns.scatterplot(x=\"year\",y=\"launches\", size=\"payload_total\", color=\"green\", palette=\"coolwarm\", data=countries_year,ax=ax, sizes=(1,600), marker=\"o\")\nfig.show()\n","e4a3bd3d":"#Let's start plotting the number of launches we had each year, and how many different countries launched into space.\n#We'll also plot how many different vehicles were used each year.\nfig, (ax,ax2) = plt.subplots(2,1,figsize=(20,6))\n#sns.scatterplot(x=\"year\",y=\"country\", size=\"country\", hue=\"nation\", data=countries_year)\nax.set_title(\"Number of satellites\/payload put in orbit per year\")\nsuccessful_countries_year[\"payload_per_launch_avg\"] = successful_countries_year[\"payload_total\"] \/ successful_countries_year[\"launches\"]\n\nchart = sns.barplot(x=\"year\",y=\"payload_total\", data=successful_countries_year,ax=ax,color=\"#8080DA\")\nax.set_xticklabels([year if year%5==0 else \"\" for year in countries_year[\"year\"]])\n\nax2.set_title(\"Average number of satellites\/payloads per launch\")\nchart = sns.barplot(x=\"year\",y=\"payload_per_launch_avg\", data=successful_countries_year,ax=ax2,color=\"#8080DA\")\nax2.set_xticklabels([year if year%5==0 else \"\" for year in countries_year[\"year\"]])\n\nfig.show()\n","5da80ed2":"## Success rate","43c458bf":"There's a bit of a situation here. Launchpads that are in what was the Soviet Union are listed twice apparently. Ideally, we'd like to consider the country as \"USSR\" if the launch was before it collapsed. We'll need to determine when our data first registers \"Russia\" or another ex-USSR country, establish that as the \"collapse_date\" of the Soviet Union, and modify our sites dataset accordingly.","36daff5a":"A perhaps better way to visualize this is to plot the payload divided by the number of launches. ","b444b34b":"The only useful information right now is in the country and the code, in order to join them to our launch dataset. We'll keep those columns, and build a new dataframe with the launch data. Tweaking the site column in our main dataframe will be necessary since it includes the launch pad (Ba LC 1\/5, for instance)","ba86b6fe":"We found some other issues as well: There seems to be a duplicate value for North Korea (a temporary site, that became permanent later?), and a misscategorized one in the USA (Wallops Flight Facility).","c6eadc2b":"Apparently that won't do. Some satellites are considered to be from \"Russia\" in the the 80s, and some are considered soviet well into the 90s. Remember, the data isn't perfect. So we'll say the launch sites belong to the USSR for dates before the dissolution of the Soviet Union. Another thing to do is finding other ambiguous site codes and fix them.","67267e9e":"0 unmatched site codes. Everything is in order to join both datasets.","b3c51909":" \"Melt\" is used to unpivot our data, turning \"success\",\"failures\", and \"success_rate\" columns to values of a single column, named variable, in order to use a grid and analyze each of these variables separately.\n","f29c9117":"Time to look at the data but grouping by country: let's see what countries have launched to space in the different decades. We'll draw several heatmaps, one for each quarter century, and see how the information has changed over time.","7aeae6bc":"Now, plot them to see the percentage of successful launches each year. For that it will be necessary to re-arrange our data set, and add a success rate column.","60b4bc77":"# Access to space\n\nNow, to visualize how access to space has grown lately, let's go back to our original table, group by month and year and count the different countries that launched to space in that month. After that, we'll build a pivot table, and plot the different countries launching from their soil in a heatmap, and the number of nations puting satellites in orbit.\n\nLet's first take a look the nation column to see the different nations launching to space.","f129bf86":"For each payload, the row indicates what country it belongs to (\"nation\"). But that's not necessarily the country from where the payload was launched. That information is part of the \"site\" column. More information here: the vehicle that was used in the launch, and if the launch was successful.\n\nBesides that, we know the type of the satellite, contractor, configuration, mass, the equipment the satellite carries, the propulsion method it uses, how it is powered, its expected lifetime, and mass. Many of the columns need some cleaning so we won't concern ourselves a lot with them. Let's see which of the columns will be most useful","96278888":"As we gathered from peeking at the first rows, most of the columns need more cleaning in order to be useful: there are many unique values (power, contractor, type of the satellite), so we won't be able to make much sense of them without more work: there seem to be 349 different types of propulsion and power configurations, the \"type \/ application column\" seems to be indicated as \"type , application\" in some cases and as \"type \/ application\" in others. \n\nLooking at the equipment column, it's easy to tell it needs much more work. It won't used for now. Instead, we'll focus on columns regarding the launch to get a sense of long term trends in the access countries have been gaining to space, and leave the information about individual payloads for some other time.\n","1c1f9f83":"# Launch Sites - Cleaning, and joining\n\nLet's now take a look at our site information. It indicates the country where the launch site is located, it has a code, and a \"details\" column. \"suo\" indicates it's a Suborbital Launch Site, and orb that it is an orbital launch site. The \"t\" at the end indicates the launch site (https:\/\/space.skyrocket.de\/directories\/launchsites.htm) The rest is probable left over html from web scrapping.","ee1ca49d":"# Visualizations\n\nNow that most of the data has been processed and is in a usable form, it is time to start visualizing some of it, using Seaborn. \nWe are mainly concerned with the data summarized by year. ","ce9d7db5":"# Space Launches Dataset Exploration\n\nThe number of space launches and satellites in orbit has increased drastically in the last few years, and we would like to see how marked that trend is compared to previous decades.\n\nWe'll be exploring launch data from the [Gunter Space Page](https:\/\/space.skyrocket.de\/directories\/chronology.htm), that Gunter kindly authorized me for using. In the Chronology section, we have every space launch for the year, with a list of payloads the launch carried. After a quick analysis of the columns in the dataset and some cleaning on the columns with useful information, we'll create some visualizations and answer some questions.\n\nEach of our rows of our dataset will have a \"payload\" (something that was put in orbit, hopefully, or was lost if the launch failed), in a launch. Each launch has a unique ID. Let's see what other columns we have. (this dataset was partially cleaned for simplicity beforehand)","c556849c":"I went back to explore the source of the data, and checked the years with problematic launch sites. (https:\/\/space.skyrocket.de\/doc_chr\/lau2019.htm, https:\/\/space.skyrocket.de\/doc_chr\/lau1998.htm, etc) . CCK seems to correspond to Cape Canaveral. Since the \"CCK\" is listed as a Launch Site different from \"CC\", I'll manually add it to our sites list. There are only a few sites, it's reasonable to go over them one by one and review the other problematic launch codes. Remember the goal is to determine which country they belong to. \"LC-1\/5\" and \"SLC-x\", appear to be space lauch complexes in Cape Canaveral. BaS seems to be Ba, and YS is China, not completely sure where. We'll add an entry for that site as well.","66723258":"## Launch vehicles, number of satellites per launch\n\nOne last look at our data: what about the number of satellites being put to space? Let's try visualizing how many satellites get to space each year. We'll plot the number of launches, the year, and the total number of satellites each year, and also visualize the number of different space vehicles employed each year. That will give us some insight about how the private sector is beginning to form the space industry","9e23cf3c":"The nation column has some missing values. Not a lot (some 0.5% of all data), but that column will be useful later. There is no reasonable way of inferring the nation that owns the payload in rows that don't have that information available, so we'll complete with \"Unknown\".","99b98cc7":"We can see the trend we saw earlier reflected here as well: before the collapse of the Soviet Union, a great number of launches that died down. The number of launches from the US stays steady, and China really picks up the pace late this past decade. If the countries are grouped more conveniently, it's possible to plot this in a line chart to see the countries with the most launches more clearly.","e8926090":"Interestingly enough, launches have indeed become more frequent lately, but are still far from the peak in the Cold War. If we plot the total number of launches each decade, the 70s and 80s are the most active. That information seems to make sense. We also see that for 2020 we have a drop in the number of launches, since the year is not done yet.","f06ec12d":"Let us start working with the date and the failed column. First, take a look at how many launches we had every year. Launches have been more frequent these last few years, and we'd expect to see that reflected in the data. We'll be using the \"failed\" column to see how many launches were successful; the \"site\" column, that denotes the launch site for the launches (and indirectly, the country); and the nation column: what country the payload being put in orbit belongs to.\n\nFirst, let's extract the year and the month of each launch, and calculate the launch success rate each year. After some quick visualizations, both to get a sense of the data and to find some trends that seem evident, we'll be in position to answer a few questions.","198e322d":"Furthermore, we create a table with nation information summarized by year and month.\n","ac33ccf6":"Let's see how many different countries have launched from their territory, and how often:\n","c845f55a":"There was some increase before the introduction of Starlink by SpaceX, but so far in 2020, the difference has been staggering.","4ca7d643":"Most countries don't seem to stick to their programs, or develop their acquired capabilities, since many countries in this list only have a handful of launches . Algeria stopped being a French colony in 1962, but maybe the launches in '65 were from a French site? That requires some research. What about the last time a country launched to space?\n","820e0fcf":"Some are empty, some have commas, others seem to have capitalization issues, other include a @. Let's define a function to replace our simple \"split\" operation then, since the cleaning operation won't be as simple as we thought. We'll apply that function to the site column, and check again for unmatched values.","b8a1ce4d":"# Exploring the country data\n\n\nWe'll aggregate the data we have with the agg function, which is more flexible than .count(), or .sum(), and allows us to specify what to do with each column: Nation has the country the individual payload belongs to.\n \nWith that we can begin answering some questions, such as how many nations put payloads in space each year, how many countries have launch capabilities, and how many payloads are placed into space with each launch.\n","d2d8b412":"# What we've learned, and what's next\n\nAfter putting our data in order, we extracted a few interesting insights:\n\n* We learned that peak of launches happened in the Cold War, driven mainly by the then USSR.\n* Launches have increased in pace this past decade, with China specially active.\n* Not many other countries have acquired launch capabilities. Only Iran, South Korea, and New Zealand, since the year 2000. (The Marshall islands launch site belongs to the United States). \n* Many countries are unable to sustain the pace of launches once they get to orbit. However, more research and domain knowledge is needed there: after further research, the 1997 launch from Spain consisted in launching a rocket from an aircraft, that took off from Gran Canaria. There might be some other cases similar to that one.\n* However, the number of different countries placing payloads in orbit increased markedly, specially in these past 15 years. The last few years saw 50 different countries consistently putting at least a satellite in orbit.\n\nWhat would we like to find out next? There are many interesting questions that can answer with this data, if we properly handle the columns that were disregarded. Furthermore, after our initial dive, some other questions arise:\n\n* What's the use of the satellites currently in space? (military, techonology)\n* What's the average mass of the payloads in orbit? Satellites supposedly got smaller these last few years.\n* What about private companies? Can we tell when they started launching into space?\n* What's the most reliable launch vehicle?\n* It would be nice to visualize some of this information in a map.\n* Do we have any information about humans in space in our data?\n* What about the launch vehicles employed? What are the different methods of launching payloads to space?","ca586f52":"Let's now join again, and plot the launches for each year, by country.","cf43039e":"# First analysis - number of launches, and success rate\n\nWe'll plot how many launches took place each year, regardless of how many payloads it was carrying, to see if the data makes sense. For that, since the dataset has a row for each payload, we'll first grab the year and id column, and determine the number of separate space launches each year using groupby.","6c22d253":"Ownership of satellites does not seem so simple. Some satellites belong to several countries, and after some research some seem to be transfered while in orbit (denoted by the arrow -> in the field). We'll clean this column before ploting. Let's see how many nations own a single satellite, and how many have been transfered.","1ca88502":"Almost done, but more information is needed about that CCK site, since it accounts for almost all of our missing values. Also, it's necessary to check for the rest of the missing values by visiting the page of the launch year.","f9994442":"Our goal is to get a sense of how many nations have reached space with a satellite, Many satellites are apparently owned by two nations, but after that. We'll deal with this adding a \"second_nation\" column, leave the \"nation\" column for the first nation, and disregard the few cases with more than three owners.\nAs for satellites that have been transfered, we'll only consider the first nation at launch as the owner nation.","c63c3a7f":"As one would expect, success rate has increased a lot since the first few years, and is around 90-95% in these last few years. With our first global view done, let's try and turn our attention to this same information, but looking at the countries launching these satellites, and taking a closer look at the payload being put into orbit.","4947256e":"Let's take a closer look now at the success and the failures of the launches. For that, we'll grab the id and failed column of our dataset, and add the number of items launched into space, using size and groupby. ","fe483c50":"In order to properly join both datasets, we need to see if the site launch codes specified in our launch data matches the site code. "}}