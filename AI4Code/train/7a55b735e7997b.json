{"cell_type":{"be7c81ea":"code","218ce327":"code","5011a535":"code","630966f5":"code","6775d2c7":"code","67911826":"code","2f7cd57a":"code","6f1251a7":"markdown"},"source":{"be7c81ea":"# install d2l library\n!pip -q install d2l","218ce327":"%matplotlib inline\nfrom d2l import mxnet as d2l\nfrom mxnet import gluon, image, np, npx\nimport os\n\nnpx.set_np()","5011a535":"data_dir = '..\/input\/bananas-bounding-boxes\/bananas\/'\nedge_size = 256","630966f5":"#@save\ndef load_data_bananas(batch_size, data_dir, edge_size=256):\n    \"\"\"Load the bananas dataset.\"\"\"\n    train_iter = image.ImageDetIter(\n        path_imgrec=os.path.join(data_dir, 'train.rec'),\n        path_imgidx=os.path.join(data_dir, 'train.idx'),\n        batch_size=batch_size,\n        # The shape of the output image\n        data_shape=(3, edge_size, edge_size),\n                    shuffle=True,\n                    rand_crop=1,\n                    min_object_covered=0.95, max_attempts=200)\n    val_iter = image.ImageDetIter(\n        path_imgrec=os.path.join(data_dir, 'val.rec'), batch_size=batch_size,\n        data_shape=(3, edge_size, edge_size), shuffle=False)\n    return train_iter, val_iter","6775d2c7":"train_iter, val_iter = load_data_bananas(32, data_dir)","67911826":"batch = train_iter.next()\nbatch.data[0].shape, batch.label[0].shape","2f7cd57a":"imgs = (batch.data[0][0:10].transpose(0, 2, 3, 1)) \/ 255\naxes = d2l.show_images(imgs, 2, 5, scale=2)\nfor ax, label in zip(axes, batch.label[0][0:10]):\n    d2l.show_bboxes(ax, [label[0][1:5] * edge_size], colors=['w'])","6f1251a7":"# Bounding Boxes Startup Notebook"}}