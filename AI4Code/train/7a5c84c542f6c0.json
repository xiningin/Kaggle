{"cell_type":{"fe3f45be":"code","57fbd500":"code","c524c33e":"code","c806fa8c":"code","ae8f3e53":"code","b4b7a57c":"code","cbe402fb":"code","308b560c":"code","a4ed7c9f":"code","17e452e0":"code","fc288bba":"code","85faec7e":"code","9d90935a":"code","566f71b2":"code","a006c5e4":"code","0e0dfa31":"code","04666319":"code","549508a4":"code","ade3d24c":"code","01ac2622":"code","216f57d2":"code","5ceee102":"code","61a72bcb":"code","99f1b095":"code","1010a3a4":"code","09c6f0d9":"code","6276ed9a":"code","a83205a9":"code","5f74b62c":"code","82dfa357":"markdown","e3d9552d":"markdown","82b2eec1":"markdown","6c9e2c46":"markdown","ffdc1c1f":"markdown","67057c23":"markdown","f4c78fe0":"markdown","35a1d709":"markdown"},"source":{"fe3f45be":"import numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import *\nimport seaborn as sns\nimport matplotlib.pyplot as plt","57fbd500":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv\")\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')","c524c33e":"np.sum(train.isnull())","c806fa8c":"train.shape","ae8f3e53":"test.tail()","b4b7a57c":"train.info()","cbe402fb":"sns.pairplot(train.sample(1000))","308b560c":"sample_submission['target'].value_counts()","a4ed7c9f":"train.corr().style.background_gradient(cmap='orange')","17e452e0":"train.describe","fc288bba":"train.describe(exclude=[np.number])","85faec7e":"%%capture\n!pip install category-encoders\nimport category_encoders as ce\nencoder = ce.OrdinalEncoder()\ntrain_encode = encoder.fit_transform(train)","9d90935a":"encoder = ce.OrdinalEncoder()\ntest_encode = encoder.fit_transform(test)","566f71b2":"train_encode.head()","a006c5e4":"test_encode.head()","0e0dfa31":"sample_submission.tail()","04666319":"cat_col = [col for col in train.columns if train[col].dtype=='O']\ncat_col","549508a4":"from sklearn.model_selection import train_test_split\n\nX = train_encode.drop('target', axis=1)\ny = train_encode.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","ade3d24c":"cat_col = [col for col in train.columns if train[col].dtype=='O']\ncat_col","01ac2622":"categorical = train[cat_col]\n\ncategorical_dum = pd.get_dummies(categorical)\ncategorical_dum","216f57d2":"from sklearn.ensemble import RandomForestRegressor\n\nrfr = RandomForestRegressor()\nrfr.fit(X_train, y_train)","5ceee102":"preds = rfr.predict(X_test)\npreds[-4: ]","61a72bcb":"from sklearn.metrics import mean_absolute_error\nmean_absolute_error(y_test, preds)","99f1b095":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test, preds)","1010a3a4":"from sklearn.neighbors import KNeighborsRegressor\n\nknn = KNeighborsRegressor(n_neighbors=4)\nknn.fit(X_train, y_train)","09c6f0d9":"acc_knn = r2_score(y_test, pred_knn)\nacc_knn","6276ed9a":"pred_knn = knn.predict(X_test)\npred_knn","a83205a9":"test_preds = rfr.predict(test_encode)\ntest_preds[-4: ]","5f74b62c":"sample_submission['target'] = test_preds\nsample_submission.to_csv('submission.csv', index=False)","82dfa357":"# ****K-Neighbors Regressor ::","e3d9552d":"### Load data...","82b2eec1":"# ****Random Forest Regressor ::","6c9e2c46":"# Do your stuff...\n\n### Deleverables\n- EDA\n    - What's going on?\n    - Show me the data...\n    - Bonus: Other \/ Etc...\n- Model\n    - [RandomForestRegressor()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestRegressor.html)\n    - Bonus: [KNeighborsRegressor()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsRegressor.html)\n    - Bonus: Other \/ Etc...\n- Evaluation\n    - mean_squared_error()\n    - Bonus: Other \/ Etc...\n- RAPIDS Bonus\n    - Apply RAPIDS ([Starter Notebook](https:\/\/www.kaggle.com\/tunguz\/tps-feb-2021-rapids-starter))\n    - Replace pandas with cuDF & sklearn with cuML","ffdc1c1f":"# ****Evalation ::","67057c23":"### Look at data...","f4c78fe0":"# **Model ::**","35a1d709":"# ****EDA ::"}}