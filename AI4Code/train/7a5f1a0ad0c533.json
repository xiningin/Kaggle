{"cell_type":{"92bf7f5f":"code","b909084c":"code","47aef041":"code","b488116a":"code","d155da3d":"code","da6e5337":"code","0a54170a":"code","8fc1842a":"code","896a90ec":"code","c94638a6":"code","29eaf52a":"code","037911f5":"code","2e719d09":"code","4908ec71":"code","8ff6b08e":"code","f622e134":"code","3ac0da36":"code","71b9a4e0":"code","64628f13":"code","84128143":"code","aeefee2a":"code","9dd61d3f":"code","dc4dd29c":"code","138e97c0":"code","d2a1f5fc":"code","e019ca75":"code","42606059":"code","9442f77f":"code","9c6e82d0":"code","4c930cca":"code","086f781f":"code","98480ce4":"code","72eaf67f":"code","f453081b":"code","b73fd148":"code","a14dc6f0":"code","59358a07":"code","7830cfb5":"code","0b433742":"code","5cb1c7e0":"code","dcfb9c96":"code","099d317d":"code","8b553454":"code","b9b0897c":"code","c3965363":"code","c0d3a7d8":"code","571021fe":"code","63aab269":"code","ae5d22da":"code","8d21df6c":"code","2d037998":"code","055cb3e3":"code","24d3cddd":"code","1030d238":"code","6f59fc11":"code","043a0272":"code","43fcc252":"code","3c0cba24":"markdown","b590eace":"markdown","70bed0e7":"markdown","2087e29b":"markdown","370fe357":"markdown","fdc21dc1":"markdown","9bc5b952":"markdown","8cbfa57e":"markdown","27952f69":"markdown","4860c64e":"markdown","d9f2c8da":"markdown","0092758d":"markdown","3cb14cf4":"markdown","75ce7571":"markdown","3bc08f54":"markdown","58a68408":"markdown","2eedf7ad":"markdown","f21a2b73":"markdown","a0d242bd":"markdown","206bbf08":"markdown","d78f54be":"markdown","ca7ed60e":"markdown","7919d997":"markdown","53697ea9":"markdown","4f9b23d1":"markdown","a089d393":"markdown","e5dc3f42":"markdown","6bfcc8f2":"markdown","f5df4d68":"markdown","95dd13cd":"markdown","d7d362d9":"markdown","ea266fbe":"markdown","d641c36f":"markdown","18342998":"markdown","6b97c9b3":"markdown","67aa188a":"markdown","72a80988":"markdown","0aeb1a29":"markdown","c85d8966":"markdown","c1dc3e7f":"markdown","b613c4de":"markdown","db4ca347":"markdown"},"source":{"92bf7f5f":"import numpy as np\nimport pylab as pl\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport wordcloud\nfrom wordcloud import WordCloud,STOPWORDS\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom sklearn.utils import shuffle\n\n\n# Plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport colorlover as cl\nfrom plotly.subplots import make_subplots","b909084c":"data = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ndata\n","47aef041":"# Convert Date column to date type and fill Missing Value\n\ndata[\"date\"] = pd.to_datetime(data[\"date\"], format = '%Y-%m-%d')\ndata = data.replace([np.inf, -np.inf], np.nan)\ndata = data.fillna(0)\ndata","b488116a":"display(data[data[\"vaccines\"]==\"Pfizer\/BioNTech\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))","d155da3d":"display(data[data[\"vaccines\"]==\"Sputnik V\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","da6e5337":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","0a54170a":"display(data[data[\"vaccines\"]==\"Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","8fc1842a":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca, Sputnik V\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","896a90ec":"display(data[data[\"vaccines\"]==\"Pfizer\/BioNTech, Sinopharm\/Beijing, Sputnik V\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","c94638a6":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca, Sinovac\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","29eaf52a":"display(data[data[\"vaccines\"]==\"Sinopharm\/Beijing\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","037911f5":"display(data[data[\"vaccines\"]==\"Moderna, Pfizer\/BioNTech\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","2e719d09":"display(data[data[\"vaccines\"]==\"Pfizer\/BioNTech, Sinovac\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","4908ec71":"display(data[data[\"vaccines\"]==\"Sinopharm\/Beijing, Sinopharm\/Wuhan, Sinovac\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","8ff6b08e":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca, Pfizer\/BioNTech\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","f622e134":"display(data[data[\"vaccines\"]==\"Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech, Sinopharm\/Beijing, Sputnik V\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","3ac0da36":"display(data[data[\"vaccines\"]==\"Covaxin, Oxford\/AstraZeneca\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","71b9a4e0":"display(data[data[\"vaccines\"]==\"Sinovac\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","64628f13":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca, Pfizer\/BioNTech, Sputnik V\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","84128143":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca, Sinopharm\/Beijing\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","aeefee2a":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca, Sinopharm\/Beijing, Sputnik V\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","9dd61d3f":"display(data[data[\"vaccines\"]==\"Johnson&Johnson\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","dc4dd29c":"display(data[data[\"vaccines\"]==\"Oxford\/AstraZeneca, Pfizer\/BioNTech, Sinopharm\/Beijing, Sinopharm\/Wuhan, Sputnik V\"][['country','iso_code','date','vaccines','total_vaccinations','people_vaccinated','people_fully_vaccinated','daily_vaccinations_raw','daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million','source_name']].sort_values(by=\"total_vaccinations\", ascending= False).head(10).style.background_gradient(cmap=\"CMRmap_r\"))\n","138e97c0":"Country = pd.DataFrame(list(zip(data.country.value_counts().index,data.country.value_counts())), columns=['country','count'], index=None)","d2a1f5fc":"sns.factorplot(x=\"count\", y=\"country\",  data =Country , kind=\"bar\", size=10, aspect=1.90, palette='PuBuGn_d')","e019ca75":"continents= pd.read_csv('..\/input\/country-mapping-iso-continent-region\/continents2.csv')\ncontinents","42606059":"data1=data.copy()\ndata1['name']=data1['country']","9442f77f":"region = data1.merge(continents, on=[\"name\"], how='left')\nregion ","9c6e82d0":"region [\"day\"] = region [\"date\"].dt.day\nregion [\"month\"] =region [\"date\"].dt.month\nregion [\"year\"] = region [\"date\"].dt.year","4c930cca":"# Figure layout #https:\/\/www.kaggle.com\/andradaolteanu\/plotly-advanced-global-warming-analysis\n\nfig = make_subplots(rows=2, cols=2, insets=[{'cell': (1,1), 'l': 0.7, 'b': 0.3}])\nfig.update_layout(title=\"Continents: total_vaccinations\", title_font_size = 12,\n                  font=dict( family=\"Courier New, monospace\", size=20,color=\"#7f7f7f\"),\n                  template = \"ggplot2\", hovermode= 'closest')\nfig.update_xaxes(showline=True, linewidth=3, linecolor='gray')\nfig.update_yaxes(showline=True, linewidth=3, linecolor='gray')\n\n#============================= Scatter =============================\nfig.add_trace(go.Scatter(x = region[region['region'] == 'Europe']['year'], y = region[region['region'] == 'Europe']['total_vaccinations'], mode = 'lines',\n                        name = 'Europe', marker_color='rgb(128, 0, 0)'), row = 1, col = 1)\nfig.add_trace(go.Scatter(x = region[region['region'] == 'Americas']['year'], y = region[region['region'] == 'Americas']['total_vaccinations'], mode = 'lines',\n                        name = 'Americas', marker_color='rgb(210,105,30)'), row = 1, col = 1)\nfig.add_trace(go.Scatter(x = region[region['region'] == 'Asia']['year'], y = region[region['region'] == 'Asia']['total_vaccinations'], mode = 'lines',\n                        name = 'Asia', marker_color='rgb(135,206,235)'), row = 1, col = 1)\nfig.add_trace(go.Scatter(x = region[region['region'] == 'Africa']['year'], y = region[region['region'] == 'Africa']['total_vaccinations'], mode = 'lines',\n                        name = 'Africa', marker_color='rgb(107,142,35)'), row = 1, col = 1)\nfig.add_trace(go.Scatter(x = region[region['region'] == 'Oceania']['year'], y = region[region['region'] == 'Oceania']['total_vaccinations'], mode = 'lines',\n                        name = 'Oceania', marker_color='rgb(70,130,180)'), row = 1, col = 1)\n\n#============================= Bar =============================\ny1 = np.round(region.groupby(by = 'region')['total_vaccinations'].mean().tolist(), 1)\ny2 = np.round(region.groupby(by = 'region')['total_vaccinations'].max().tolist(), 1)\n\nfig.add_trace(go.Bar(x = region['region'].unique(), y = region.groupby(by = 'region')['total_vaccinations'].mean().tolist(), \n                     name = 'Mean total_vaccinations', marker_color = 'rgb(188,143,143)', text = y1, textposition = 'auto'), row = 1, col = 2)\nfig.add_trace(go.Bar(x = region['region'].unique(), y = region.groupby(by = 'region')['total_vaccinations'].max().tolist(), \n                     name = 'Max total_vaccinations', marker_color = 'rgb(222,184,135)', text = y2, textposition = 'auto'),row = 1, col = 2)","086f781f":"# we need iso alpha-3 codes ##https:\/\/www.kaggle.com\/andradaolteanu\/plotly-advanced-global-warming-analysis\nmap_countries = region.dropna(axis = 0).groupby(by = ['region', 'country', 'year','alpha-3']).mean().reset_index()\n\nmap_countries['total_vaccinations_per_hundred'] = map_countries['total_vaccinations_per_hundred'] + 6\n\nfig = px.scatter_geo(map_countries, locations='alpha-3', color='region',\n                     color_discrete_sequence = ('rgb(128,0,0)','rgb(210,105,30)','rgb(135,206,235)','rgb(107,142,35)'),\n                     hover_name=\"country\", size=\"total_vaccinations\", size_max=15, opacity = 0.8,\n                     animation_frame=\"year\",\n                     projection=\"natural earth\", title='Interactive Globe Map - total_vaccinations_per_hundred')\nfig.show()","98480ce4":"\ncrossing1 = data[['date', 'total_vaccinations']].groupby('date').sum()\ntseries = data.groupby(['date'])['total_vaccinations'].agg(\n    ['sum']).reset_index().rename(columns={'sum': 'total_vaccinations'})\n\ntseries = tseries.set_index('date')\n\nfig = plt.subplots(figsize=(30, 15))\n\ng = sns.lineplot(x=tseries.index, y='total_vaccinations',\n                 data=tseries, label=\"Actual Time Series\")\n\nrmean = crossing1.rolling(12, win_type='triang').mean()\n\ng = sns.lineplot(x=rmean.index, y='total_vaccinations',\n                 data=rmean, label=\"Rolling Mean 12 Months\")\n\nplt.legend(fontsize='xx-large')\nplt.show()","72eaf67f":"data[\"day\"] = data[\"date\"].dt.day\ndata[\"month\"] =data[\"date\"].dt.month\ndata[\"year\"] = data[\"date\"].dt.year","f453081b":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"people_vaccinated\"], hue = data[\"day\"], palette = \"mako\")\n\nax.set_title(\"Seasonal people_vaccinated\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"people_vaccinated\")","b73fd148":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"people_vaccinated\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"people_vaccinated - Trend\")\n\nsns.boxplot(data[\"month\"], data[\"people_vaccinated\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"people_vaccinated - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"people_vaccinated\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"people_vaccinated - Seasonality\")","a14dc6f0":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"people_fully_vaccinated\"], hue = data[\"day\"], palette = \"mako\")\n\nax.set_title(\"Seasonal people_fully_vaccinated\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"people_fully_vaccinated\")","59358a07":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"people_fully_vaccinated\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"people_fully_vaccinated - Trend\")\n\nsns.boxplot(data[\"month\"], data[\"people_fully_vaccinated\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"people_fully_vaccinated - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"people_fully_vaccinated\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"people_fully_vaccinated - Seasonality\")","7830cfb5":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"daily_vaccinations_raw\"], hue = data[\"day\"], palette = \"mako\")\n\nax.set_title(\"Seasonal daily_vaccinations_raw\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"daily_vaccinations_raw\")","0b433742":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"daily_vaccinations_raw\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"daily_vaccinations_raw - Trend\")\n\nsns.boxplot(data[\"month\"], data[\"daily_vaccinations_raw\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"daily_vaccinations_raw - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"daily_vaccinations_raw\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"daily_vaccinations_raw - Seasonality\")","5cb1c7e0":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"daily_vaccinations\"], hue = data[\"day\"], palette = \"mako\")\n\nax.set_title(\"Seasonal daily_vaccinations\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"daily_vaccinations\")","dcfb9c96":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"daily_vaccinations\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"daily_vaccinations - Trend\")\n\nsns.boxplot(data[\"month\"], data[\"daily_vaccinations\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"daily_vaccinations - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"daily_vaccinations\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"daily_vaccinations - Seasonality\")","099d317d":"ttl_vaccination= data.sort_values(by='total_vaccinations', ascending=False)[:7000]\nfigure = plt.figure(figsize=(15,10))\nsns.barplot(y=ttl_vaccination.country, x=ttl_vaccination.total_vaccinations)\nplt.xticks()\nplt.xlim(xmin=0.8)\nplt.xlabel('total_vaccinations')\nplt.ylabel('COUNTRY')\nplt.title('Countplot of country by total_vaccinations')\nplt.show()","8b553454":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"total_vaccinations\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"total_vaccinations - Trend\")\n\nsns.boxplot(data[\"month\"], data[\"total_vaccinations\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"total_vaccinations - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"total_vaccinations\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"total_vaccinations - Seasonality\")","b9b0897c":"people_vaccinated =data['people_vaccinated']\npeople_fully_vaccinated =data['people_fully_vaccinated']\n#plot the people vaccinated and people fully vaccinated\nplt.figure(figsize=(20, 6))\nplt.plot(people_vaccinated, linewidth =3,label = \"people_vaccinated\",c = \"blue\", linestyle = '--')\nplt.plot(people_fully_vaccinated,linewidth = 2,label = \"people_fully_vaccinated\",c=\"red\")\nplt.xlabel('Date')\nplt.ylabel('Total')\nplt.title(\"comparison between people vaccinated and people fully vaccinated\")\nplt.legend()","c3965363":"ttl_vaccinations_per_hundred= data.sort_values(by='total_vaccinations_per_hundred', ascending=False)[:7000]\nfigure = plt.figure(figsize=(15,10))\nsns.barplot(y=ttl_vaccinations_per_hundred.country, x=ttl_vaccinations_per_hundred.total_vaccinations_per_hundred)\nplt.xticks()\nplt.xlim(xmin=0.8)\nplt.xlabel('total_vaccinations_per_hundred')\nplt.ylabel('COUNTRY')\nplt.title('Countplot of country by total_vaccinations_per_hundred')\nplt.show()","c0d3a7d8":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"total_vaccinations_per_hundred\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"total_vaccinations_per_hundred - Trend\")\n\nsns.boxplot(data[\"month\"], data[\"total_vaccinations_per_hundred\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"total_vaccinations_per_hundred - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"total_vaccinations_per_hundred\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"total_vaccinations_per_hundred - Seasonality\")","571021fe":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"total_vaccinations_per_hundred\"], hue = data[\"day\"], palette = \"magma\")\n\nax.set_title(\"Seasonal total_vaccinations_per_hundred\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"total_vaccinations_per_hundred\")","63aab269":"ttl_people_vaccinated_per_hundred= data.sort_values(by='people_vaccinated_per_hundred', ascending=False)[:7000]\nfigure = plt.figure(figsize=(15,10))\nsns.barplot(y=ttl_people_vaccinated_per_hundred.country, x=ttl_people_vaccinated_per_hundred.people_vaccinated_per_hundred)\nplt.xticks()\nplt.xlim(xmin=0.8)\nplt.xlabel('people_vaccinated_per_hundred')\nplt.ylabel('COUNTRY')\nplt.title('Countplot of country by people_vaccinated_per_hundred')\nplt.show()","ae5d22da":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"people_vaccinated_per_hundred\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"people_vaccinated_per_hundred - Trend\")\n\nsns.boxplot(data[\"month\"], data[\"people_vaccinated_per_hundred\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"people_vaccinated_per_hundred - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"people_vaccinated_per_hundred\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"people_vaccinated_per_hundred - Seasonality\")","8d21df6c":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"people_vaccinated_per_hundred\"], hue = data[\"day\"], palette = \"magma\")\n\nax.set_title(\"Seasonal people_vaccinated_per_hundred\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"people_vaccinated_per_hundred\")","2d037998":"ttl_people_fully_vaccinated_per_hundred= data.sort_values(by='people_fully_vaccinated_per_hundred', ascending=False)[:7000]\nfigure = plt.figure(figsize=(15,10))\nsns.barplot(y=ttl_people_fully_vaccinated_per_hundred.country, x=ttl_people_fully_vaccinated_per_hundred.people_fully_vaccinated_per_hundred)\nplt.xticks()\nplt.xlim(xmin=0.8)\nplt.xlabel('people_fully_vaccinated_per_hundred')\nplt.ylabel('COUNTRY')\nplt.title('Countplot of country by people_fully_vaccinated_per_hundred')\nplt.show()","055cb3e3":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"people_fully_vaccinated_per_hundred\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"people_fully_vaccinated_per_hundred\")\n\nsns.boxplot(data[\"month\"], data[\"people_fully_vaccinated_per_hundred\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"people_fully_vaccinated_per_hundred - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"people_fully_vaccinated_per_hundred\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"people_fully_vaccinated_per_hundred - Seasonality\")","24d3cddd":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"people_fully_vaccinated_per_hundred\"], hue = data[\"day\"], palette = \"magma\")\n\nax.set_title(\"Seasonal people_fully_vaccinated_per_hundred\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"people_fully_vaccinated_per_hundred\")","1030d238":"ttl_daily_vaccinations_per_million= data.sort_values(by='daily_vaccinations_per_million', ascending=False)[:7000]\nfigure = plt.figure(figsize=(15,10))\nsns.barplot(y=ttl_daily_vaccinations_per_million.country, x=ttl_daily_vaccinations_per_million.daily_vaccinations_per_million)\nplt.xticks()\nplt.xlim(xmin=0.8)\nplt.xlabel('daily_vaccinations_per_million')\nplt.ylabel('COUNTRY')\nplt.title('Countplot of country by daily_vaccinations_per_million')\nplt.show()","6f59fc11":"# box plot to check the seasonality year, month , day\nfig, ax = plt.subplots(nrows = 3, ncols = 1, figsize = (20, 25))\nplt.xticks(rotation=90)\nsns.boxplot(data[\"year\"], data[\"daily_vaccinations_per_million\"], ax = ax[0])\nax[0].set_title(\"Yearly Box Plot - Trend\")\nax[0].set_xlabel(\"Year\")\nax[0].set_ylabel(\"daily_vaccinations_per_million\")\n\nsns.boxplot(data[\"month\"], data[\"daily_vaccinations_per_million\"], ax = ax[1])\nax[1].set_title(\"Montly Box Plot - Seasonality\")\nax[1].set_xlabel(\"Month\")\nax[1].set_ylabel(\"daily_vaccinations_per_million - Seasonality\")\n\n\nsns.boxplot(data[\"day\"], data[\"daily_vaccinations_per_million\"], ax = ax[2])\nax[2].set_title(\"Dayly Box Plot - Seasonality\")\nax[2].set_xlabel(\"Day\")\nax[2].set_ylabel(\"daily_vaccinations_per_million - Seasonality\")","043a0272":"fig, ax = plt.subplots(figsize = (15, 6))\n\nsns.lineplot(data[\"month\"], data[\"daily_vaccinations_per_million\"], hue = data[\"day\"], palette = \"magma\")\n\nax.set_title(\"Seasonal daily_vaccinations_per_million\")\nax.set_xlabel(\"day\")\nax.set_ylabel(\"daily_vaccinations_per_million\")","43fcc252":"display(data[['country','vaccines','total_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','daily_vaccinations_per_million',]].groupby(['country','vaccines']).agg([\"max\",'mean',\"min\"]).style.background_gradient(cmap=\"CMRmap_r\"))","3c0cba24":"# 3. Comparing data: get the max, min, and avg group by country\n\n* 'total_vaccinations_per_hundred',\n* 'people_vaccinated_per_hundred',\n* 'people_fully_vaccinated_per_hundred',\n* 'daily_vaccinations_per_million' each country'","b590eace":"### 2.1.6. Pfizer\/BioNTech, Sinopharm\/Beijing, Sputnik V\n","70bed0e7":"### 2.3.4. daily_vaccinations_per_million\n\nDaily vaccinations per million - ratio (in ppm) between vaccination number and total population for the current date in the country;\n","2087e29b":"#### 2.2.3.4. daily_vaccinations\n\nfor a certain data entry, the number of vaccination for that date\/country;","370fe357":"### 2.1.17. Oxford\/AstraZeneca, Sinopharm\/Beijing\n","fdc21dc1":"### 2.1.8. Sinopharm\/Beijing\n","9bc5b952":"<center>\n<img src=\"https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/images\/vaccines\/vtf-icon-vaccine-mask-soap-distance.png\" width='400'>\n    \n","8cbfa57e":"### 2.1.2. Sputnik V\n","27952f69":"### 2.1.12. Oxford\/AstraZeneca, Pfizer\/BioNTech\n","4860c64e":"#### 2.2.3.2. people_fully_vaccinated\n\nThis is the number of people that received the entire set of immunization according to the immunization scheme (typically 2); at a certain moment in time, there might be a certain number of people that received one vaccine and another number (smaller) of people that received all vaccines in the scheme;","d9f2c8da":"* [1. Information](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#1.-The-data-contains-the-following-information:)\n* [2. Track the progress of COVID-19 vaccination\n](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.-Track-the-progress-of-COVID-19-vaccination)     [ 2.1. What vaccines are used and in which countries?](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.-What-vaccines-are-used-and-in-which-countries?)\n    * [2.1.1. Pfizer\/BioNTech](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.1.-Pfizer\/BioNTech)\n    * [2.1.2. Sputnik V](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.2.-Sputnik-V)\n    * [2.1.3. Oxford\/AstraZeneca](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.3.-Oxford\/AstraZeneca)\n    * [2.1.4. Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.4.-Moderna,-Oxford\/AstraZeneca,-Pfizer\/BioNTech)\n    * [2.1.5. Oxford\/AstraZeneca, Sputnik V](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.5.-Oxford\/AstraZeneca,-Sputnik-V)\n    * [2.1.6. Pfizer\/BioNTech, Sinopharm\/Beijing, Sputnik V](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.6.-Pfizer\/BioNTech,-Sinopharm\/Beijing,-Sputnik-V)\n    * [2.1.7. Oxford\/AstraZeneca, Sinovac](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.7.-Oxford\/AstraZeneca,-Sinovac)\n    * [2.1.8. Sinopharm\/Beijing](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.8.-Sinopharm\/Beijing)\n    * [2.1.9. Moderna, Pfizer\/BioNTech](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.9.-Moderna,-Pfizer\/BioNTech)\n    * [2.1.10.Pfizer\/BioNTech, Sinovac](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.10.Pfizer\/BioNTech,-Sinovac)\n    * [2.1.11. Sinopharm\/Beijing, Sinopharm\/Wuhan, Sinovac](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.11.-Sinopharm\/Beijing,-Sinopharm\/Wuhan,-Sinovac)\n    * [2.1.12. Oxford\/AstraZeneca, Pfizer\/BioNTech](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.12.-Oxford\/AstraZeneca,-Pfizer\/BioNTech)\n    * [2.1.13. Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech, Sinopharm\/Beijing, Sputnik V](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.13.-Moderna,-Oxford\/AstraZeneca,-Pfizer\/BioNTech,-Sinopharm\/Beijing,-Sputnik-V)\n    * [2.1.14. Covaxin, Oxford\/AstraZeneca](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.14.-Covaxin,-Oxford\/AstraZeneca\/)\n    * [ 2.1.15. Sinovac](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.15.-Sinovac)\n    * [2.1.16. Oxford\/AstraZeneca, Pfizer\/BioNTech, Sputnik V](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.16.-Oxford\/AstraZeneca,-Pfizer\/BioNTech,-Sputnik-V)\n    * [2.1.17. Oxford\/AstraZeneca, Sinopharm\/Beijing](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.17.-Oxford\/AstraZeneca,-Sinopharm\/Beijing)\n    * [2.1.18. Oxford\/AstraZeneca, Sinopharm\/Beijing, Sputnik V](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.18.-Oxford\/AstraZeneca,-Sinopharm\/Beijing,-Sputnik-V)\n    * [2.1.19. Johnson&Johnson](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.19.-Johnson&Johnson)\n    * [2.1.20. Oxford\/AstraZeneca, Pfizer\/BioNTech, Sinopharm\/Beijing, Sinopharm\/Wuhan, Sputnik V](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.1.20.-Oxford\/AstraZeneca,-Pfizer\/BioNTech,-Sinopharm\/Beijing,-Sinopharm\/Wuhan,-Sputnik-V)\n* [2.2. What country is vaccinated more people?](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.-What-country-is-vaccinated-more-people?)\n    * [2.2.1. Country ](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.1.-Country)\n    * [2.2.2. Inspecting time series and rolling mean](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.2.-Inspecting-time-series-and-rolling-mean:)\n    * [2.2.3.  Segregation of day, month, year in the original dataset to check the seasonality](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.3.--Segregation-of-day,-month,-year-in-the-original-dataset-to-check-the-seasonality)\n        * [2.2.3.1. people_fully_vaccinated](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.3.1.-people_vaccinated)\n        * [2.2.3.2. daily_vaccinations_raw](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.3.2.-people_fully_vaccinated)\n        * [2.2.3.3. daily_vaccinations](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.3.3.-daily_vaccinations_raw)\n        * [2.2.3.4. total_vaccinations](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.3.4.-daily_vaccinations)\n        * [2.2.3.5. comparison between people vaccinated and people fully vaccinated](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.2.3.5.-comparison_between_people_vaccinated_and_people_fully_vaccinated)\n\n* [2.3 What country is vaccinated a larger percent from its population?](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.3.-What-country-is-vaccinated-a-larger-percent-from-its-population?)\n    * [2.3.1. total_vaccinations_per_hundred](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.3.1.-total_vaccinations_per_hundred)\n    * [2.3.2. people_vaccinated_per_hundred](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.3.2.-people_vaccinated_per_hundred)\t\n    * [2.3.3. people_fully_vaccinated_per_hundred](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.3.3.-people_fully_vaccinated_per_hundred)\t\n    * [ 2.3.4. daily_vaccinations_per_million](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#2.3.4.-daily_vaccinations_per_million)\n* [3. Comparing data: get the max, min, and avg group by country\n](https:\/\/www.kaggle.com\/khotijahs1\/analysis-covid-19-world-vaccination-progress#3.-Comparing-data:-get-the-max,-min,-and-avg-group-by-country)\n","0092758d":"### 2.1.19. Johnson&Johnson\n","3cb14cf4":"### 2.1.14. Covaxin, Oxford\/AstraZeneca\n","75ce7571":"### 2.1.4. Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech\n","3bc08f54":"##  2.3. What country is vaccinated a larger percent from its population?","58a68408":"##  2.2. What country is vaccinated more people?","2eedf7ad":"#### 2.2.3.5. comparison between people vaccinated and people fully vaccinated\n\n","f21a2b73":"# 1. The data contains the following information:\n\n\n\n* Country- this is the country for which the vaccination information is provided;\n* Country ISO Code - ISO code for the country;\n* Date - date for the data entry; for some of the dates we have only the daily vaccinations, for others, only the (cumulative) total;\n* Total number of vaccinations - this is the absolute number of total immunizations in the country;\n* Total number of people vaccinated - a person, depending on the immunization scheme, will receive one or more (typically 2) vaccines; at a certain moment, the number of vaccination might be larger than the number of people;\n* Total number of people fully vaccinated - this is the number of people that received the entire set of immunization according to the immunization scheme (typically 2); at a certain moment in time, there might be a certain number of people that received one vaccine and another number (smaller) of people that received all vaccines in the scheme;\n* Daily vaccinations (raw) - for a certain data entry, the number of vaccination for that date\/country;\n* Daily vaccinations - for a certain data entry, the number of vaccination for that date\/country;\n* Total vaccinations per hundred - ratio (in percent) between vaccination number and total population up to the date in the country;\n* Total number of people vaccinated per hundred - ratio (in percent) between population immunized and total population up to the date in the country;\n* Total number of people fully vaccinated per hundred - ratio (in percent) between population fully immunized and total population up to the date in the country;\n* Number of vaccinations per day - number of daily vaccination for that day and country;\n* Daily vaccinations per million - ratio (in ppm) between vaccination number and total population for the current date in the country;\n* Vaccines used in the country - total number of vaccines used in the country (up to date);\n* Source name - source of the information (national authority, international organization, local organization etc.);\n* Source website - website of the source of information;","a0d242bd":"### 2.3.2. people_vaccinated_per_hundred\t\n\nTotal number of people vaccinated per hundred - ratio (in percent) between population immunized and total population up to the date in the country;\n","206bbf08":"### 2.2.1. Country ","d78f54be":"### 2.1.15. Sinovac\n","ca7ed60e":"# 2. Track the progress of COVID-19 vaccination\n\n","7919d997":"### 2.1.7. Oxford\/AstraZeneca, Sinovac\n","53697ea9":"### 2.1.10.Pfizer\/BioNTech, Sinovac\n","4f9b23d1":"## 2.1. What vaccines are used and in which countries?","a089d393":"### 2.2.3.  Segregation of day, month, year in the original dataset to check the seasonality\n","e5dc3f42":"#### 2.2.3.3. daily_vaccinations_raw\n\nFor a certain data entry, the number of vaccination for that date\/country;","6bfcc8f2":"### 2.1.9. Moderna, Pfizer\/BioNTech\n","f5df4d68":"### 2.1.3. Oxford\/AstraZeneca\n","95dd13cd":"### 2.3.1. total_vaccinations_per_hundred\n\nTotal vaccinations per hundred - ratio (in percent) between vaccination number and total population up to the date in the country;\n","d7d362d9":"### 2.1.11. Sinopharm\/Beijing, Sinopharm\/Wuhan, Sinovac\n","ea266fbe":"### 2.1.1. Pfizer\/BioNTech","d641c36f":"### 2.1.13. Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech, Sinopharm\/Beijing, Sputnik V\n","18342998":"### 2.3.3. people_fully_vaccinated_per_hundred\t\n\nTotal number of people fully vaccinated per hundred - ratio (in percent) between population fully immunized and total population up to the date in the country;\n","6b97c9b3":"### 2.1.18. Oxford\/AstraZeneca, Sinopharm\/Beijing, Sputnik V\n","67aa188a":"<center>\n\n#    Analysis  COVID-19 World Vaccination Progress using Data Visualization\n    \n    \n    \n    \n ","72a80988":"### 2.1.16. Oxford\/AstraZeneca, Pfizer\/BioNTech, Sputnik V\n","0aeb1a29":"### 2.2.2. Inspecting time series and rolling mean:\n\nRolling means (or moving averages) are generally used to smooth out short-term fluctuations in time series data and highlight long-term trends.\n","c85d8966":"* ###  total_vaccinations\n\nthis is the absolute number of total immunizations in the country;","c1dc3e7f":"#### 2.2.3.1. people_vaccinated","b613c4de":"### 2.1.5. Oxford\/AstraZeneca, Sputnik V\n","db4ca347":"### 2.1.20. Oxford\/AstraZeneca, Pfizer\/BioNTech, Sinopharm\/Beijing, Sinopharm\/Wuhan, Sputnik V"}}