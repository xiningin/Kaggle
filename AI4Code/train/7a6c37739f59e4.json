{"cell_type":{"2c15e1f6":"code","0aa7801e":"code","e998b548":"code","5151e1ef":"code","9e992921":"code","db4a74c7":"code","b4df5280":"code","7fc30c38":"code","43d243ea":"code","7a4e3061":"code","83afb3d4":"code","a84293f9":"code","032b0809":"code","f0a145c4":"code","cd2d239e":"code","58cfc9ad":"code","557357b4":"code","9e519452":"code","40e11183":"code","619a4eea":"code","0e49309b":"code","42c62dfa":"code","39961489":"code","59fcc659":"code","b13aeed4":"code","3526cfba":"code","32ab7f0b":"code","b4067ddd":"code","2d03e79d":"code","f7b1199e":"code","94760667":"code","d4b3107e":"code","46a129f9":"code","faa34c56":"code","0f5a6335":"code","19640b50":"code","acf99f00":"code","d17d9f08":"code","4aa9230b":"code","87c8dfde":"code","1582a0b3":"code","5710acbf":"code","eb572fba":"code","ecaca7cc":"code","756649e5":"code","68ab847f":"code","a9ba3cf2":"code","75ef29ea":"code","6314d311":"code","22dfbc5f":"code","68f6cad3":"code","a0c0db09":"code","3bfdfb33":"code","78a6b704":"code","9bd42f76":"code","a1298ce1":"code","5a085261":"code","125edffe":"code","62caeef5":"code","2303fe33":"code","8b955f0b":"code","b3f47691":"code","2cda2537":"code","f3de7236":"code","9a7daae1":"code","c79b0b13":"code","05cf9053":"code","b97d4945":"code","c602870b":"code","a8a3fc63":"code","4cfc5ef1":"code","00025510":"code","91457f59":"code","2b881b8e":"code","d02112f5":"code","0bcb52f5":"markdown","2d94e3ab":"markdown","9c4b8125":"markdown","75fd709e":"markdown","4da153c6":"markdown","e71f678d":"markdown","fca267ee":"markdown","e0310d12":"markdown","4ea732d0":"markdown","b4b607b2":"markdown"},"source":{"2c15e1f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0aa7801e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n#plotly\nimport plotly.express as px\n\n# warning\nimport warnings\nwarnings.filterwarnings('ignore')\n# clustering\nfrom sklearn import preprocessing \nimport scipy.cluster.hierarchy as sch\nfrom sklearn.cluster import AgglomerativeClustering \n# standarization\nfrom sklearn.preprocessing import StandardScaler, normalize\n\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import silhouette_score\nimport scipy.cluster.hierarchy as shc\n#plotly \nimport plotly.offline as py\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\ninit_notebook_mode(connected=True)\nimport plotly.figure_factory as ff\nimport plotly.express as px","e998b548":"df=pd.read_csv('..\/input\/well-clustered-data\/filename.csv')\ndf.head()","5151e1ef":"df['State'].value_counts()","9e992921":"c1=df[df['cluster']==0]\nc2=df[df['cluster']==1]\nc3=df[df['cluster']==2]\nc4=df[df['cluster']==3]\nc5=df[df['cluster']==4]\nc6=df[df['cluster']==5]\nc7=df[df['cluster']==6]","db4a74c7":"c3['State'].value_counts()","b4df5280":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c3['Well Depth'], fill=True, hue=c3['State'])\nplt.show()","7fc30c38":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c3[c3['State']=='Maharashtra']['Well Depth'], fill=True, hue=c3['State'])\nplt.show()","43d243ea":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c3[c3['State']=='Karnataka']['Well Depth'], fill=True, hue=c3['State'])\nplt.show()","7a4e3061":"plt.figure(figsize=(10, 5))\nsns.kdeplot(np.log(c3['Well Depth']), fill=True, hue=c3['State'])\nplt.show()","83afb3d4":"c3[c3['State']=='Karnataka']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975])","a84293f9":"c3[c3['State']=='Maharashtra']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975])","032b0809":"import scipy.stats as st\nfrom scipy import stats\n\n#create 95% confidence interval for population mean weight\nst.norm.interval(alpha=0.95, loc=np.mean(c3[c3['State']=='Maharashtra']['Well Depth']), scale=st.sem(c3[c3['State']=='Maharashtra']['Well Depth']))","f0a145c4":"st.norm.interval(alpha=0.95, loc=np.mean(c3[c3['State']=='Karnataka']['Well Depth']), scale=st.sem(c3[c3['State']=='Karnataka']['Well Depth']))","cd2d239e":"c3[c3['Well Depth']>67.3]['State'].value_counts()","58cfc9ad":"c3[c3['Well Depth']>16.22]['State'].value_counts()","557357b4":"c2['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975])\n","9e519452":"c2['State'].value_counts()","40e11183":"c2[c2['Well Depth']>23.636]['State'].value_counts()","619a4eea":"x=c2[c2['Well Depth']>23.636]","0e49309b":"plt.figure(figsize=(15, 10))\nsns.scatterplot(x=x['Latitude'], y=x['Longitude'], hue=x['State'])\nplt.legend(loc=\"best\")\nplt.show()","42c62dfa":"c4['State'].value_counts()","39961489":"c4['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975])\n","59fcc659":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c4['Well Depth'], fill=True, hue=c4['State'])\nplt.show()","b13aeed4":"plt.figure(figsize=(10, 5))\nsns.kdeplot(np.log(c4['Well Depth']), fill=True, hue=c4['State'])\nplt.show()","3526cfba":"c4[c4['State']=='Rajasthan']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975])\n","32ab7f0b":"st.norm.interval(alpha=0.95, loc=np.mean(c4[c4['State']=='Rajasthan']['Well Depth']), scale=st.sem(c4[c4['State']=='Rajasthan']['Well Depth']))","b4067ddd":"c4[c4['Well Depth']>46.341]['State'].value_counts()","2d03e79d":"c4[c4['State']=='Haryana']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975])\n","f7b1199e":"st.norm.interval(alpha=0.95, loc=np.mean(c4[c4['State']=='Haryana']['Well Depth']), scale=st.sem(c4[c4['State']=='Haryana']['Well Depth']))","94760667":"c4[c4['Well Depth']>60.257]['State'].value_counts()","d4b3107e":"pip install rich","46a129f9":"from rich import print\n\nprint(\"Hello, [bold magenta]World[\/bold magenta]!\", \":vampire:\", locals())","faa34c56":"from rich import pretty\npretty.install()","0f5a6335":"from rich.console import Console\n\nconsole = Console()","19640b50":"console.print(\"Hello\", \"World!\")","acf99f00":"console.print(\"Hello\", \"World!\", style=\"bold red\")\n","d17d9f08":"console.print(\"Where there is a [bold cyan]Will[\/bold cyan] there [u]is[\/u] a [i]way[\/i].\")\n","4aa9230b":"my_list = [\"foo\", \"bar\"]\nfrom rich import inspect\ninspect(my_list, methods=True)","87c8dfde":"c5.head()","1582a0b3":"print(c5['State'].value_counts())","5710acbf":"print(c5['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","eb572fba":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c5['Well Depth'], fill=True, hue=c5['State'])\nplt.show()","ecaca7cc":"print(c5['State'].value_counts())","756649e5":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c5[c5['State']=='Gujarat']['Well Depth'], fill=True, hue=c5['State'])\nplt.show()","68ab847f":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c5[c5['State']=='Rajasthan']['Well Depth'], fill=True, hue=c5['State'])\nplt.show()","a9ba3cf2":"print(c5[c5['State']=='Rajasthan']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","75ef29ea":"st.norm.interval(alpha=0.95, loc=np.mean(c5[c5['State']=='Rajasthan']['Well Depth']), scale=st.sem(c5[c5['State']=='Rajasthan']['Well Depth']))","6314d311":"print(c5[c5['Well Depth']>71.428]['State'].value_counts())","22dfbc5f":"print(c5[c5['State']=='Gujarat']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","68f6cad3":"st.norm.interval(alpha=0.95, loc=np.mean(c5[c5['State']=='Gujarat']['Well Depth']), scale=st.sem(c5[c5['State']=='Gujarat']['Well Depth']))","a0c0db09":"print(c5[c5['Well Depth']>128.007]['State'].value_counts())","3bfdfb33":"print(c6['State'].value_counts())","78a6b704":"print(c6['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","9bd42f76":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c6['Well Depth'], fill=True, hue=c6['State'])\nplt.show()","a1298ce1":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c6[c6['State']=='Karnataka']['Well Depth'], fill=True, hue=c6['State'])\nplt.show()","5a085261":"print(c6[c6['State']=='Karnataka']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","125edffe":"st.norm.interval(alpha=0.95, loc=np.mean(c6[c6['State']=='Karnataka']['Well Depth']), scale=st.sem(c6[c6['State']=='Karnataka']['Well Depth']))","62caeef5":"print(c6[c6['Well Depth']>97.85]['State'].value_counts())","2303fe33":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c6[c6['State']=='Maharashtra']['Well Depth'], fill=True, hue=c6['State'])\nplt.show()","8b955f0b":"print(c6[c6['State']=='Maharashtra']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","b3f47691":"st.norm.interval(alpha=0.95, loc=np.mean(c6[c6['State']=='Maharashtra']['Well Depth']), scale=st.sem(c6[c6['State']=='Maharashtra']['Well Depth']))","2cda2537":"print(c6[c6['Well Depth']>17.331]['State'].value_counts())","f3de7236":"print(c7['State'].value_counts())","9a7daae1":"print(c7['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","c79b0b13":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c7['Well Depth'], fill=True, hue=c7['State'])\nplt.show()","05cf9053":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c7[c7['State']=='Madhya Pradesh']['Well Depth'], fill=True, hue=c7['State'])\nplt.show()","b97d4945":"print(c7[c7['State']=='Madhya Pradesh']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","c602870b":"st.norm.interval(alpha=0.95, loc=np.mean(c7[c7['State']=='Madhya Pradesh']['Well Depth']), scale=st.sem(c7[c7['State']=='Madhya Pradesh']['Well Depth']))","a8a3fc63":"print(c7[c7['Well Depth']>18.83]['State'].value_counts())","4cfc5ef1":"plt.figure(figsize=(10, 5))\nsns.kdeplot(c7[c7['State']=='Uttar Pradesh']['Well Depth'], fill=True, hue=c7['State'])\nplt.show()","00025510":"print(c7[c7['State']=='Uttar Pradesh']['Well Depth'].describe(percentiles=[ 0.25,0.5, 0.75,0.8, 0.9, 0.95, 0.975]))","91457f59":"st.norm.interval(alpha=0.95, loc=np.mean(c7[c7['State']=='Uttar Pradesh']['Well Depth']), scale=st.sem(c7[c7['State']=='Uttar Pradesh']['Well Depth']))","2b881b8e":"print(c7[c7['Well Depth']>14.29]['State'].value_counts())","d02112f5":"console.print(\":smiley: :vampire: :pile_of_poo: :thumbs_up: :raccoon:\")","0bcb52f5":"# Obs\n* still we can see that the distribution far from the normal distribution.\n* After the transformation we can see that it is still not gaussian","2d94e3ab":"# C2 analysis","9c4b8125":"# Obs\n* as we can see that the distribution is almost gaussian \n","75fd709e":"# C4","4da153c6":"# C7","e71f678d":"# C6","fca267ee":"# Obs\n* The distribution is almost normal ","e0310d12":"# Obs\n* I have assumed that both  the distribution is almost gaussian.","4ea732d0":"# C5","b4b607b2":"# C3"}}