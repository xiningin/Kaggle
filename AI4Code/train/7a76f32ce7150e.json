{"cell_type":{"fd54502d":"code","d2d43dd7":"code","53164d78":"code","65f13b9f":"code","8cfad6b5":"code","061e96b7":"code","acfd7669":"code","616f4d7f":"code","0d0f96e8":"code","2f3cbc37":"code","0d200c54":"code","3cc5184d":"code","4913d817":"code","12403ef5":"code","3afa0c20":"code","75e700ae":"code","a5842149":"code","ff81d823":"code","7b74f924":"code","8250e078":"code","6cbc021d":"code","76da83d0":"markdown","b75b1358":"markdown","4e9c6007":"markdown","5d911ce9":"markdown","d2113421":"markdown","a4f04f76":"markdown","c75e1257":"markdown","43563708":"markdown","2bef9e09":"markdown","c92912c2":"markdown","5d771226":"markdown","798e2f09":"markdown","682a81eb":"markdown","311034e9":"markdown","89d0f486":"markdown","a9b469fe":"markdown","0e2d6201":"markdown","56a9df8a":"markdown","dbde5b8d":"markdown","386fd183":"markdown","659bd09b":"markdown","fba05efd":"markdown","cef0e21d":"markdown","83551382":"markdown","5cc41c48":"markdown","00024681":"markdown","c49c1c8e":"markdown"},"source":{"fd54502d":"# syntex of range() --> range(start_number, end_number)\n# here we are creating list from 1 to 10. \n# PS: last element wount count in list so if i want list till n number then, you have to write n+1 in range function.\n\nnum = list(range(1, 11))\nprint(num)\n\n# output\n# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","d2d43dd7":"\nprogramming_languages = ['python', 'java', 'c']\n\nfor programming_language in programming_languages: \n\tprint(\"I know how to code in \" + programming_language.title() + \" programming language.\")\n  \n# output\n# I know how to code in Python programming language.\n# I know how to code in Java programming language.\n# I know how to code in C programming language.","53164d78":"for i in range(1,11):\n\tprint(i)\n\n# output\n# 1\n# 2\n# 3\n# 4\n# 5\n# 6\n# 7\n# 8\n# 9\n# 10","65f13b9f":"num = list(range(1,11))\n\nprint(num)\n# output\n# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nprint(min(num))\n# output\n# 1\n\nprint(max(num))\n# output\n# 10\n\nprint(sum(num))\n# output\n# 55","8cfad6b5":"# without list comprehension\ncubes = []\n\nfor i in range(1,11):\n\tcube = i ** 3\n\tcubes.append(cube)\n\nprint(cubes)\n\n# output\n# [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]","061e96b7":"\n# with list comprehension\n\ncubes = [cube ** 3 for cube in range(1,11)]\nprint(cubes)\n\n# output\n# [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]","acfd7669":"languages = ['English', 'Hindi', 'Chinese', 'Spanish', 'Bengali', 'Russian', 'Arabic', 'Portuguese']\n\n# print list containing - english, hindi, chinese, spanish and bengali\nprint(languages[0:5])\n# output\n# ['English', 'Hindi', 'Chinese', 'Spanish', 'Bengali']\n\n# print list contains bengali,russian and arabic\nprint(languages[4:7])\n# output\n# ['Bengali', 'Russian', 'Arabic']\n\n# if you want to slice list from starting then no need to mention index because python automatically start from the beginning.\nprint(languages[:3])\n# output\n# ['English', 'Hindi', 'Chinese']\n\n# similarly if you want to slice till the end then ignore mentioning index for last element\nprint(languages[4:])\n# output\n# ['Bengali', 'Russian', 'Arabic', 'Portuguese']","616f4d7f":"languages = ['English', 'Hindi', 'Chinese', 'Spanish', 'Bengali', 'Russian', 'Arabic', 'Portuguese']\n\nfor language in languages[:5]:\n  print(language)\n\n# output\n# English\n# Hindi\n# Chinese\n# Spanish\n# Bengali","0d0f96e8":"languages = ['English', 'Hindi', 'Chinese', 'Spanish', 'Bengali', 'Russian', 'Arabic', 'Portuguese']\n\ncopy_languages = languages[:]\n\nprint(languages)\n# output\n# ['English', 'Hindi', 'Chinese', 'Spanish', 'Bengali', 'Russian', 'Arabic', 'Portuguese']\n\nprint(copy_languages)\n# output\n# ['English', 'Hindi', 'Chinese', 'Spanish', 'Bengali', 'Russian', 'Arabic', 'Portuguese']\n","2f3cbc37":"\nmy_car = ['audi', 'bmw', 'tesla']\nneighbour_car = my_car[:]\n\ndel my_car[2]\nneighbour_car.append('toyota')\n\nprint('My cars are : ')\nprint(my_car)\n# output\n# My cars are :\n# ['audi', 'bmw']\n\nprint('\\nMy neighbour\\'s cars are : ')\nprint(neighbour_car)\n# output\n# My neighbour's cars are :\n# ['audi', 'bmw', 'tesla', 'toyota']","0d200c54":"dimensions = (100, 20)\n\nprint(dimensions[0])\n# output\n# 100\n\nprint(dimensions[1])\n# output\n# 20","3cc5184d":"dimensions = (100, 20)\nprint(dimensions)\n# output\n# (100, 20)\n\n# assign new values to tuple\ndimensions = (500, 100)\nprint(dimensions)\n# output\n# (500, 100)","4913d817":"\ndimensions = (100, 20)\n\nfor dimension in dimensions:\n  print(dimension)\n\n# output\n# 100\n# 20","12403ef5":"my_information = { 'name': 'Durgesh', 'age': 28 }\n\nprint(my_information['name'])\n# output\n# Durgesh\n\nprint(my_information['age'])\n# output\n# 28","3afa0c20":"\npersonal = { 'fname' : 'Durgesh', 'lname' : 'Samariya', 'age' : 28 }\n\nprint(personal)\n# output\n# {'fname': 'Durgesh', 'lname': 'Samariya', 'age': 28}\n\n# change fname and lname\n\npersonal['fname'] = 'Hello'\npersonal['lname'] = 'World'\n\n# output\n# {'fname': 'Hello', 'lname': 'World', 'age': 28}\n\n# add city as key and Melbourne as value\npersonal['city'] = 'Melbourne'\n\n# output\n# {'fname': 'Hello', 'lname': 'World', 'age': 28, 'city': 'Melbourne'}","75e700ae":"personal = { 'fname' : 'Durgesh', 'lname' : 'Samariya', 'age' : 28, 'city':'Melbourne'}\n\nprint(personal)\n# output\n# {'fname': 'Durgesh', 'lname': 'Samariya', 'age': 28, 'city':'Melbourne'} \n\n# remove city information\ndel personal['city']\n\n# output\n# {'fname': 'Durgesh', 'lname': 'Samariya', 'age': 28} ","a5842149":"\npersonal = { 'fname' : 'Durgesh', 'lname' : 'Samariya', 'age' : 28 }\n\nfor key,value in personal.items():\n  print(key)\n  print(value)\n  \n# output\n# fname\n# Durgesh\n# lname\n# Samariya\n# age\n# 28","ff81d823":"personal = { 'fname' : 'Durgesh', 'lname' : 'Samariya', 'age' : 28 }\n\nfor key in personal.keys():\n  print(key)\n  \n# output\n# fname\n# lname\n# age\n\nfor value in personal.values():\n  print(value)\n  \n# output\n# Durgesh\n# Samariya\n# 28","7b74f924":"\nperson1 = {'name':'Person1', 'age':28}\nperson2 = {'name':'Person2', 'age':15}\nperson3 = {'name':'Person3', 'age':40}\n\npersons = [person1, person2, person3]\n\nfor person in persons:\n  print(person)\n  \n# output\n# {'name': 'Person1', 'age': 28}\n# {'name': 'Person2', 'age': 15}\n# {'name': 'Person3', 'age': 40}","8250e078":"person = {'name':['Durgesh', 'Samariya'], 'age': 27}\n\nfor key,value in person.items():\n  print(key)\n  print(value)\n\n# output\n# name\n# ['Durgesh', 'Samariya']\n# age\n# 27","6cbc021d":"movies = {\n  'avatar': {\n    'year': 2009,\n    'rating': 5\n  },\n  'inception' :\n  {\n    'year': 2010,\n    'rating': 5\n  },\n  'joker' :\n  {\n    'year': 2019,\n    'rating': 4.5\n  }\n}\n\nprint(movies['avatar'])\n# output\n# {'year': 2009, 'rating': 5}\n\nprint(movies['avatar']['year'])\n# output\n# 2009","76da83d0":"## Content\n- Working with Lists\n- List comprehension\n- Advance list operations: Slicing list, Looping through Sliced list, Copying a List\n- Tuples\n- Basic tuple operations: Modify tuple, Looping trough all tuple values\n- Dictionaries\n- Basic Dictionary operations: Modifying dictionary, removing key- value from a dictionary\n- Looping through dictionary\n- Nested Dictionary\n","b75b1358":"Now let\u2019s have a look at how to create lists in dictionaries.","4e9c6007":"In dictionaries, you can loop through keys or values only. Let\u2019s have a look at code.","5d911ce9":"Today we learned the Basics of python from Python Crash Course book (Chapter 4 and 6). My goal for this 100 Days of Machine Learning Challenge is to learn machine learning from scratch and help others who want to start their journey in machine learning. Many concepts are known to me, but I am starting from scratch to help beginners of the Machine Learning community and revise concepts.\nThanks for reading.","d2113421":"Now let\u2019s make the same list using list comprehension.","a4f04f76":"Now we have two lists, and we can modify them according to our needs. Let\u2019s apply basic operations that we have learned in the previous blog.\n","c75e1257":"Tuples are simple data structures compared to the list. They are mostly used when programmers want to store some value that can not be changed throughout the program.","43563708":"### Basic statistics with List\nYou can perform simple statistics with lists such as min(), max(), and sum().\n","2bef9e09":"### Range() function with for loop\nWe can use `range()` function with for loop as well \u2014 sometimes it\u2019s required to loop through series of numbers. Let\u2019s have a look at code.","c92912c2":"### Looping trough all tuple values\nIn python, we can loop through tuples as we did with a list.","5d771226":"## Working with Lists\n### Making Number list\nIn python, we can create a series of numbers using `range()` function. Let\u2019s have a look at how to create a list using `range()` function.","798e2f09":"Even you can store a dictionary in the dictionary.\n","682a81eb":"## Nested Dictionary\nIn python, you can store dictionaries in the list or vice versa. First, let\u2019s have a look at how to create a list of dictionaries.","311034e9":"### Looping through Sliced list\nPreviously, we have seen how to loop through the list and how to slice list. Even we can loop through the slice list. Let\u2019s see how to do that.","89d0f486":"Previous Stories\n[Introduction to Challenge](https:\/\/medium.com\/the-innovation\/100-days-of-machine-learning-code-a9074e1c42c3)\nDay 1 : [Python Basics \u2014 1](https:\/\/medium.com\/the-innovation\/python-basics-variables-data-types-and-list-59cea3dfe10f)","a9b469fe":"## Tuples\nLike lists, tuples are collection types in python. However, Tuples are immutable, which means the value of immutable lists cannot change. In python, tuple use parentheses \u201c(\u201c. Let\u2019s have a look at how to define tuples in python.","0e2d6201":"## Basic Dictionary operations\n### Modifying Dictionary\nLike list data collection methods, we can modify dictionaries as well. Let\u2019s have a look at code.","56a9df8a":"## <font color='red'> I hope you enjoyed this kernel , Please don't forget to appreciate me with an Upvote. <\/font>","dbde5b8d":"### Copying a List\nWhile doing data analysis, it might require to work on the existing list and copy of the existing list. Let\u2019s see how we can copy the list.","386fd183":"## Basic Tuple operation\n### Modify tuple\nAs we know, the tuple is an immutable list type, which means it can not be modified. However, we can overwrite tuple, which means we can completely change tuple values.","659bd09b":"## Looping through dictionary\nLike lists and tuples, we can use a loop to check each key and value of the dictionary.","fba05efd":"### Removing key-value from Dictionary\nWe can remove unwanted information from the dictionary.","cef0e21d":"## Dictionaries\nIn python, Dictionaries are a collection of key and value pairs. In Dictionaries, each key is associated\/connected with values. To access any value, we have to use the key, which is associated with value. We can use any data object as key or value in dictionaries. Let\u2019s create a simple dictionary.","83551382":"## List comprehension\nList comprehension is an advanced approach to generating lists. List comprehension allows you to combine for loop to create a list. Assume that you\u2019ve to create a list that contains a cube of 1 to 10. First, let\u2019s see how to do that without list comprehension.","5cc41c48":"### Looping through lists\nIn data analysis, you often need to run through each item in a list. Let\u2019s have a look.","00024681":"## Advance List Operations\n### Slicing List\nTo slice a list, you have to pass the starting index and last element index. Like range() function, slice also stops before one element. If you want element from starting to 5th elements, you have to pass 0 (first element index) to 5 (sixth element index). Let\u2019s have a look at how to do it in code.","c49c1c8e":"# Python Basics 2 \u2014 Working with List, Tuples, Dictionaries\n## Day 2 of 100 Days of Machine Learning Code"}}