{"cell_type":{"053c7512":"code","6955176a":"code","b817eb55":"code","dc05dab6":"code","e79edcee":"code","406812eb":"code","8764f873":"code","8c56d261":"code","34007e14":"code","a10a16d1":"code","cbec02e0":"code","77167276":"code","f64d91a6":"code","1b43e913":"code","f088dc76":"code","39b640f0":"code","b7371bac":"code","f89e7a08":"code","78482aaf":"code","2d02ec57":"code","2d021aaf":"code","09a6d26d":"code","9ef6009f":"code","99e6d9f2":"code","e22350ea":"code","eb8b15d7":"markdown","6e6881b1":"markdown","dc9ae92f":"markdown","14dbbdb5":"markdown","97bde870":"markdown"},"source":{"053c7512":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport cufflinks as clf\n\n%matplotlib inline\nclf.go_offline()\n#import os\n#print(os.listdir(\"..\/input\"))\n","6955176a":"data = pd.read_json('..\/input\/train.json')\nprint(data.shape)\ndata.iloc[:1,:]","b817eb55":"test = pd.read_json('..\/input\/test.json')\nprint(test.shape)\ntest.iloc[:1,:]","dc05dab6":"#check is there any null values ??\ndata[data['ingredients'].isnull()]","e79edcee":"def extract_ingredients(serie):\n    list_ingredients=[]\n    for lista in serie:\n        for element in lista:\n            if element in list_ingredients:\n                pass\n            elif element not in list_ingredients:\n                list_ingredients.append(element)\n            else:\n                pass\n        \n    return list_ingredients ","406812eb":"ingredients = extract_ingredients(data['ingredients'])","8764f873":"print(len(ingredients))","8c56d261":"cuisines = data['cuisine'].unique()\nprint(cuisines.shape)","34007e14":"for ingredient in ingredients:\n    data[ingredient]=np.zeros(len(data[\"ingredients\"]))","a10a16d1":"for ingredient in ingredients:\n    test[ingredient]=np.zeros(len(test[\"ingredients\"]))","cbec02e0":"def ohe(serie, dtframe):    \n    ind=0\n    for lista in serie:\n        \n        for ingredient in lista:\n            if ingredient in ingredients:\n                dtframe.loc[ind,ingredient]=1\n            else:\n                pass\n        ind +=1","77167276":"ohe(data['ingredients'], data)","f64d91a6":"ohe(test['ingredients'], test)","1b43e913":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import *","f088dc76":"predict = ingredients\nfeature = data['cuisine']","39b640f0":"X = data[predict]\ny = feature","b7371bac":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","f89e7a08":"log_reg = LogisticRegression(C=1)","78482aaf":"log_reg.fit(X_train, y_train)","2d02ec57":"y_predicted = log_reg.predict(X_test)\ny_predicted","2d021aaf":"accuracy_score(y_test, y_predicted)","09a6d26d":"pd.DataFrame(confusion_matrix(y_test, y_predicted, labels=cuisines), index=cuisines, columns=cuisines)","9ef6009f":"y_final_prediction = log_reg.predict(test[predict])","99e6d9f2":"output = test['id']\noutput = pd.DataFrame(output)\noutput['cuisine'] = pd.Series(y_final_prediction)","e22350ea":"output.to_csv('sample_submission.csv', index=False)","eb8b15d7":"## Accuracy of Model","6e6881b1":"## One Hot Encoding","dc9ae92f":"## Logistic Regression","14dbbdb5":"## Submission File","97bde870":"## How many type of CUISINE Present ????"}}