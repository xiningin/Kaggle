{"cell_type":{"a8d25206":"code","3a5cb39a":"code","9f8440d9":"code","02a9bac5":"code","d20ae022":"code","326b5d6e":"code","649766ef":"code","f12739f2":"code","c1ba8f6f":"code","3fa3f34a":"code","88dbe6aa":"code","b7f265d5":"code","b9e45d54":"code","33a65421":"code","be461482":"code","5398b5da":"code","cbda1c3a":"markdown","65280376":"markdown","ae2a9f6e":"markdown","306d7b2a":"markdown","e6d60237":"markdown","ce86a3b0":"markdown","5c1d2f6b":"markdown","c80d0d53":"markdown","cafd3297":"markdown","a62fd95e":"markdown","01b936af":"markdown","19f518ed":"markdown","70a76b89":"markdown","fc3d30e7":"markdown","99c49d35":"markdown","9e744040":"markdown"},"source":{"a8d25206":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a5cb39a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","9f8440d9":"data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\", sep=\",\")\ndata.head(5)","02a9bac5":"data.Survived.value_counts()","d20ae022":"data.info()","326b5d6e":"data.dtypes","649766ef":"data.shape","f12739f2":"data.describe().T","c1ba8f6f":"data.count()","3fa3f34a":"data.isnull().sum()","88dbe6aa":"bar = sns.barplot(x = 'Sex', y = 'Survived', hue = 'Sex', data = data)\nbar.set_title('Cinsiyete Gore Hayatta Kalanlar')","b7f265d5":"sns.catplot(x = 'Pclass', y = 'Fare', kind = 'violin', hue = 'Pclass', col = 'Sex', orient = 'v', \n            data = data)","b9e45d54":"sns.catplot(x=\"Pclass\", y=\"Fare\", kind=\"bar\", hue=\"Pclass\", col=\"Sex\", orient=\"v\", data=data);","33a65421":"sns.displot(data.Pclass)","be461482":"sns.pairplot(data)","5398b5da":"corr = data.corr()\nplt.figure(figsize = (8,8))\nsns.heatmap(corr, vmax = .8, linewidths = 0.05, square = True, annot = True, linecolor = 'purple')","cbda1c3a":"Yukarda verimizin icinde kac adet eksik gozlem oldugunu ve bu gozlemlerin nerede ne kadar oldugunu goruyoruz.","65280376":"### Yukarda veriye bir goz gezdirdigimizde, 12 adet farkli degisken tipleri goruyoruz. Simdi bunlarin tam olarak neyi ifade ettigine bir bakalim.\n- PassengerId = Yolcu ID\n- Survived = Hayatta kalanlar(hayatta kalanlar 1, olenler 0)\n- Pclass = Ekonomi Sinifi\n- Name = Yolcu isimleri\n- Sex = Cinsiyet\n- Age = Yas\n- SibSp = abi\/abla(1,0)\n- Parch = ebeveyn\/cocuk(1,0)\n- Ticket = Bilet Numaralari\n- Fare = Bilet Fiyati\n- Cabin = Kabin Numarasi\n- Embarked = Liman Isimleri","ae2a9f6e":"Datasetimizin bir DataFrame oldugunu ve 891 adet gozlemimizin oldugunu goruyoruz.","306d7b2a":"### PairPlot \n- Degiskenlerin birbirleri ile olan korelasyonunu gormek icin kullandigimiz bir grafik.","e6d60237":"# Veriye bakis","ce86a3b0":"### Simdi degisken tiplerine hizlica bir goz atalim.","5c1d2f6b":"Yukarda gordugumuz gibi 0 yani olenlerin sayisi 549 ve ayni sekilde 1 yani hayatta kalmayi basaranlarin sayisi 342.","c80d0d53":"# HeatMap","cafd3297":"# SEABORN ILE VERI GORSELLESTIRME","a62fd95e":"# Kutuphanelerin yuklenmesi","01b936af":"### Catplot-Bar Graph","19f518ed":"shape yardimi ile verimizin, 891 gozlem ve 12 adet degiskene sahip oldugunu goruyoruz.","70a76b89":"Yukarida kullandigimiz Heatmap yardimi ile korelasyonu rahatlikla yorumlayabiliriz.","fc3d30e7":"## Barplot Graph","99c49d35":"### Displot","9e744040":"### Catplot- Violin Graph"}}