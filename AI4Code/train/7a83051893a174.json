{"cell_type":{"d6e2281f":"code","c4f28bea":"code","d5659ac5":"code","6fc8cc6f":"code","58e96c59":"code","dd1d3338":"code","3f49ef0b":"code","170eac7a":"code","5b6b7218":"code","dd133f3f":"code","f55cfbcb":"code","79e7292d":"code","9776c7a2":"code","d11ff6a5":"code","1d075940":"code","af17fe29":"code","e0b107c4":"code","2e71d788":"code","e2f98259":"code","8f73f5a6":"code","de199b3c":"code","7eec4a5e":"code","1c247749":"code","46481562":"code","02629df0":"code","537fb29d":"code","b6bc7c2b":"code","91684d3c":"code","f570bfc1":"code","1978665d":"code","3f14abac":"code","4e3dce73":"code","d43892ee":"code","9f3b0267":"code","b45f3a9f":"code","4efbf2d6":"code","87bf85d4":"code","5904ebef":"code","7230478b":"code","6ed52420":"code","9626b56f":"markdown","46d6f1f4":"markdown","5f9a5072":"markdown","15fd212a":"markdown","8c2274d2":"markdown","595651b0":"markdown","b2c897f0":"markdown","d89370ea":"markdown","dfc701e7":"markdown","df67981b":"markdown","4f3da8d3":"markdown","87e8f582":"markdown","df7ca9c0":"markdown","306ec1e9":"markdown","4080e898":"markdown","52d73b5a":"markdown"},"source":{"d6e2281f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4f28bea":"import numpy as np\nimport seaborn as sns\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d5659ac5":"dataset = pd.read_csv('\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","6fc8cc6f":"dataset","58e96c59":"id\tgender\tage\thypertension\theart_disease\tever_married\twork_type\tResidence_type\tavg_glucose_level\tbmi\tsmoking_status\tstroke\n0\t9046\tMale\t67.0\t0\t1\tYes\tPrivate\tUrban\t228.69\t36.6\tformerly smoked\t1\n1\t51676\tFemale\t61.0\t0\t0\tYes\tSelf-employed\tRural\t202.21\tNaN\tnever smoked\t1\n2\t31112\tMale\t80.0\t0\t1\tYes\tPrivate\tRural\t105.92\t32.5\tnever smoked\t1\n3\t60182\tFemale\t49.0\t0\t0\tYes\tPrivate\tUrban\t171.23\t34.4\tsmokes\t1\n4\t1665\tFemale\t79.0\t1\t0\tYes\tSelf-employed\tRural\t174.12\t24.0\tnever smoked\t1\n...\t...\t...\t...\t...\t...\t...\t...\t...\t...\t...\t...\t...\n5105\t18234\tFemale\t80.0\t1\t0\tYes\tPrivate\tUrban\t83.75\tNaN\tnever smoked\t0\n5106\t44873\tFemale\t81.0\t0\t0\tYes\tSelf-employed\tUrban\t125.20\t40.0\tnever smoked\t0\n5107\t19723\tFemale\t35.0\t0\t0\tYes\tSelf-employed\tRural\t82.99\t30.6\tnever smoked\t0\n5108\t37544\tMale\t51.0\t0\t0\tYes\tPrivate\tRural\t166.29\t25.6\tformerly smoked\t0\n5109\t44679\tFemale\t44.0\t0\t0\tYes\tGovt_job\tUrban\t85.28\t26.2\tUnknown\t0","dd1d3338":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5110 entries, 0 to 5109\nData columns (total 12 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   id                 5110 non-null   int64  \n 1   gender             5110 non-null   object \n 2   age                5110 non-null   float64\n 3   hypertension       5110 non-null   int64  \n 4   heart_disease      5110 non-null   int64  \n 5   ever_married       5110 non-null   object \n 6   work_type          5110 non-null   object \n 7   Residence_type     5110 non-null   object \n 8   avg_glucose_level  5110 non-null   float64\n 9   bmi                4909 non-null   float64\n 10  smoking_status     5110 non-null   object \n 11  stroke             5110 non-null   int64  \ndtypes: float64(3), int64(4), object(5)\nmemory usage: 479.2+ KB","3f49ef0b":"dataset.isnull().sum() ","170eac7a":"id                     0\ngender                 0\nage                    0\nhypertension           0\nheart_disease          0\never_married           0\nwork_type              0\nResidence_type         0\navg_glucose_level      0\nbmi                  201\nsmoking_status         0\nstroke                 0\ndtype: int64","5b6b7218":"dataset.bmi.replace(to_replace=np.nan, value=dataset.bmi.mean(), inplace=True)","dd133f3f":"dataset.isnull().sum()","f55cfbcb":"id                   0\ngender               0\nage                  0\nhypertension         0\nheart_disease        0\never_married         0\nwork_type            0\nResidence_type       0\navg_glucose_level    0\nbmi                  0\nsmoking_status       0\nstroke               0\ndtype: int64","79e7292d":"dataset.describe()","9776c7a2":"id\tage\thypertension\theart_disease\tavg_glucose_level\tbmi\tstroke\ncount\t5110.000000\t5110.000000\t5110.000000\t5110.000000\t5110.000000\t5110.000000\t5110.000000\nmean\t36517.829354\t43.226614\t0.097456\t0.054012\t106.147677\t28.893237\t0.048728\nstd\t21161.721625\t22.612647\t0.296607\t0.226063\t45.283560\t7.698018\t0.215320\nmin\t67.000000\t0.080000\t0.000000\t0.000000\t55.120000\t10.300000\t0.000000\n25%\t17741.250000\t25.000000\t0.000000\t0.000000\t77.245000\t23.800000\t0.000000\n50%\t36932.000000\t45.000000\t0.000000\t0.000000\t91.885000\t28.400000\t0.000000\n75%\t54682.000000\t61.000000\t0.000000\t0.000000\t114.090000\t32.800000\t0.000000\nmax\t72940.000000\t82.000000\t1.000000\t1.000000\t271.740000\t97.600000\t1.000000","d11ff6a5":"dataset.corr()","1d075940":"\tid\tage\thypertension\theart_disease\tavg_glucose_level\tbmi\tstroke\nid\t1.000000\t0.003538\t0.003550\t-0.001296\t0.001092\t0.002999\t0.006388\nage\t0.003538\t1.000000\t0.276398\t0.263796\t0.238171\t0.325942\t0.245257\nhypertension\t0.003550\t0.276398\t1.000000\t0.108306\t0.174474\t0.160189\t0.127904\nheart_disease\t-0.001296\t0.263796\t0.108306\t1.000000\t0.161857\t0.038899\t0.134914\navg_glucose_level\t0.001092\t0.238171\t0.174474\t0.161857\t1.000000\t0.168751\t0.131945\nbmi\t0.002999\t0.325942\t0.160189\t0.038899\t0.168751\t1.000000\t0.038947\nstroke\t0.006388\t0.245257\t0.127904\t0.134914\t0.131945\t0.038947\t1.000000","af17fe29":"# Compute the correlation matrix\ncorr = dataset.corr()\n\n# Generate a mask for the upper triangle\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0, square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","e0b107c4":"<AxesSubplot:>","2e71d788":"print(dataset.gender.value_counts())\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(data=dataset, x=\"gender\")\nplt.show()","e2f98259":"Female    2994\nMale      2115\nOther        1\nName: gender, dtype: int64","8f73f5a6":"print(dataset.hypertension.value_counts())\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(data=dataset, x=\"hypertension\")\nplt.show()","de199b3c":"0    4612\n1     498\nName: hypertension, dtype: int64","7eec4a5e":"print(dataset.ever_married.value_counts())\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(data=dataset, x=\"ever_married\")\nplt.show()","1c247749":"Yes    3353\nNo     1757\nName: ever_married, dtype: int64","46481562":"print(dataset.work_type.value_counts())\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(data=dataset, x=\"work_type\")\nplt.show()","02629df0":"Private          2925\nSelf-employed     819\nchildren          687\nGovt_job          657\nNever_worked       22\nName: work_type, dtype: int64","537fb29d":"print(dataset.Residence_type.value_counts())\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(data=dataset, x=\"Residence_type\")\nplt.show()","b6bc7c2b":"Urban    2596\nRural    2514\nName: Residence_type, dtype: int64","91684d3c":"print(dataset.smoking_status.value_counts())\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(data=dataset, x=\"smoking_status\")\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nplt.tight_layout()\nplt.show()","f570bfc1":"never smoked       1892\nUnknown            1544\nformerly smoked     885\nsmokes              789\nName: smoking_status, dtype: int64","1978665d":"print(dataset.stroke.value_counts())\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(data=dataset, x=\"stroke\")\nplt.show()","3f14abac":"0    4861\n1     249\nName: stroke, dtype: int64","4e3dce73":"fig = plt.figure(figsize=(7,7))\nsns.distplot(dataset.avg_glucose_level, color=\"green\", label=\"avg_glucose_level\", kde= True)\nplt.legend()","d43892ee":"<matplotlib.legend.Legend at 0x7f024dbc2050>","9f3b0267":"fig = plt.figure(figsize=(7,7))\nsns.distplot(dataset.bmi, color=\"orange\", label=\"bmi\", kde= True)\nplt.legend()","b45f3a9f":"<matplotlib.legend.Legend at 0x7f024dd7b150>","4efbf2d6":"plt.figure(figsize=(12,10))\n\nsns.distplot(dataset[dataset['stroke'] == 0][\"bmi\"], color='green') # No Stroke - green\nsns.distplot(dataset[dataset['stroke'] == 1][\"bmi\"], color='red') # Stroke - Red\n\nplt.title('No Stroke vs Stroke by BMI', fontsize=15)\nplt.xlim([10,100])\nplt.show()","87bf85d4":"plt.figure(figsize=(12,10))\n\nsns.distplot(dataset[dataset['stroke'] == 0][\"avg_glucose_level\"], color='green') # No Stroke - green\nsns.distplot(dataset[dataset['stroke'] == 1][\"avg_glucose_level\"], color='red') # Stroke - Red\n\nplt.title('No Stroke vs Stroke by Avg. Glucose Level', fontsize=15)\nplt.xlim([30,330])\nplt.show()","5904ebef":"plt.figure(figsize=(12,10))\n\nsns.distplot(dataset[dataset['stroke'] == 0][\"age\"], color='green') # No Stroke - green\nsns.distplot(dataset[dataset['stroke'] == 1][\"age\"], color='red') # Stroke - Red\n\nplt.title('No Stroke vs Stroke by Age', fontsize=15)\nplt.xlim([18,100])\nplt.show()\n","7230478b":"fig = plt.figure(figsize=(7,7))\ngraph = sns.scatterplot(data=dataset, x=\"age\", y=\"bmi\", hue='gender')\ngraph.axhline(y= 25, linewidth=4, color='r', linestyle= '--')\nplt.show()","6ed52420":"fig = plt.figure(figsize=(7,7))\ngraph = sns.scatterplot(data=dataset, x=\"age\", y=\"avg_glucose_level\", hue='gender')\ngraph.axhline(y= 150, linewidth=4, color='r', linestyle= '--')\nplt.show()","9626b56f":"![image.png](attachment:image.png)","46d6f1f4":"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv","5f9a5072":"![image.png](attachment:image.png)","15fd212a":"![image.png](attachment:image.png)","8c2274d2":"![image.png](attachment:image.png)","595651b0":"![image.png](attachment:image.png)","b2c897f0":"![image.png](attachment:image.png)","d89370ea":"![image.png](attachment:image.png)","dfc701e7":"![image.png](attachment:image.png)","df67981b":"![image.png](attachment:image.png)","4f3da8d3":"![image.png](attachment:image.png)","87e8f582":"![image.png](attachment:image.png)","df7ca9c0":"![image.png](attachment:image.png)","306ec1e9":"![image.png](attachment:image.png)","4080e898":"![image.png](attachment:image.png)","52d73b5a":"![image.png](attachment:image.png)"}}