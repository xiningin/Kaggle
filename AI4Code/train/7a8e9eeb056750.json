{"cell_type":{"372745a1":"code","9d915baa":"code","d3d59ab8":"code","a59ac8fc":"code","86809c5e":"markdown","448dbb6b":"markdown","8c5a6620":"markdown","ee932537":"markdown","748bc512":"markdown"},"source":{"372745a1":"!pip install dash\n!pip install jupyter_Dash\n!pip install jupyter-dash pyngrok -q\n!pip install dash-cytoscape==0.2.0","9d915baa":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d3d59ab8":"from pyngrok import ngrok\ntunnel = ngrok.connect(8050)","a59ac8fc":"import datetime\nfrom jupyter_dash import JupyterDash  # pip install dash\nimport dash_cytoscape as cyto  # pip install dash-cytoscape==0.2.0 or higher\nimport dash_html_components as html\nimport dash_core_components as dcc\nfrom dash.dependencies import Output, Input\nimport pandas as pd  # pip install pandas\nimport plotly.express as px\nimport math\nfrom dash import no_update\nimport dash\nfrom dash.dependencies import Input, Output, State\nimport dash_core_components as dcc\nimport dash_html_components as html\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow.keras import datasets, layers, models\nimport numpy as np\nimport PIL\nfrom PIL import Image\nimport base64\n\ncnnmodel=models.load_model(\"..\/input\/image-classifier-model\/image_classifier.h5\")\nexternal_stylesheets = ['https:\/\/codepen.io\/chriddyp\/pen\/bWLwgP.css']\n\napp = JupyterDash(__name__, external_stylesheets=external_stylesheets,server_url=tunnel.public_url)\n\napp.layout = html.Div([\n    html.H1(\"Image Recognizer\" , style={\"margin-top\":'2%',\"textAlign\": \"center\",'color':'#800000'}),\n    html.Br(),\n    html.H4(\"Please Drag\/Drop Or Select Image You Wish To Recognise\",style={\"textAlign\": \"center\",'color':'black'}),\n    html.Br(),\n    dcc.Upload(\n        id='upload-image',\n        children=html.Div([\n            'Drag and Drop or ',\n            html.A('Select Files')\n        ]),\n        style={\n            'width': '100%',\n            'height': '75px',\n   \n            'lineHeight': '60px',\n            'borderWidth': '1px',\n            'borderStyle': 'dashed',\n            'borderRadius': '5px',\n            'textAlign': 'center',\n        },\n    ),\n    \n    html.Button('Recognize', id='recog', n_clicks=0,style={'margin-left': '42%',\n    'margin-top': '2%',\n    'height': '5rem',\n    'width': '20rem',\n    'color': 'white',\n    'background': '#800000',\n    'font-weight': 'bold',\n     'cursor': 'grab',\n    'font-size': '20px'}),\n    html.Br(),\n    html.Div(id='output-image-upload',style={'margin-top':\"2%\",'height':'300px'}),\n    \n])\n\ndef getpred(img):\n    imgdata = base64.b64decode(img)\n    imgf = Image.frombytes(mode='RGB',size=(32,32),data=imgdata)\n    x = np.array(imgf)\n    x = 2. * x \/ 255. - 1\n    x = np.reshape(x, (1,32,32,3))\n    classes = [\"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\"]\n    prob=cnnmodel.predict(x)\n    y_class = [np.argmax(element) for element in prob]\n    return str(classes[y_class[0]])\n\n@app.callback(Output('output-image-upload', 'children'),\n              Input('upload-image', 'contents'),\n              Input('recog', 'n_clicks'),)\ndef parse_contents(img,n_clicks):\n    if(n_clicks):\n        ans=getpred(img)\n        op=\"This is \"+ ans\n        return html.Div([\n            html.Img(src=img,style={'margin-left':'33%','margin-top':'2%','height':\"300px\"}),\n            html.H3(op,style={\"width\":'100%',\"textAlign\": \"center\",'color':'#800000','font-size': '30px','background':'#FFA500'}),\n        ],style={'width':'100%'})\n\n\napp.run_server(mode='external')","86809c5e":"**Installing All Important Libraires**","448dbb6b":"# In This Notebook I Have Used The Dash FrameWork In Kaggle.\n**Specifically this is my frontEnd Part for the Image Recogniser Model by CNN**","8c5a6620":"# Making the Main Front End DashBoard","ee932537":"**Connecting to the Tunnel via ngrok to open Dash- Dashboard**","748bc512":"**Getting Saved Model from One of my file**"}}