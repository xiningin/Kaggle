{"cell_type":{"18735b16":"code","e68e2cba":"code","ed1c834f":"code","65303a94":"code","aef203d3":"code","8c7a0496":"code","3b3ed6c9":"code","da030f08":"code","882a3be9":"code","f99430b7":"code","ae313226":"code","7a6a145d":"code","f9e38c82":"code","003860e4":"code","cf30c74f":"code","9f79cc4f":"code","e4fc0d4c":"code","ef9999b8":"code","ee194b1b":"code","f3342144":"code","c66cf3e2":"code","24440a3e":"code","12cfc0ad":"code","e7fcee7d":"code","b076beca":"code","2ec6216a":"code","5e0a4a3f":"code","4a48327a":"code","96637026":"code","667ba1fc":"code","afdcedad":"code","5c1afaee":"code","a8bd1657":"code","a26fba05":"code","d083bfef":"code","04944f87":"code","de83e3c1":"code","78d96a08":"code","6db236bc":"code","bb44acc7":"code","4f5a3f81":"code","ffff16c9":"code","b5bd8415":"code","8f7daaff":"code","fc0cff30":"code","0d9de2fb":"code","d1c3431b":"code","0c4a67da":"code","9f5f1534":"code","676e605a":"code","aeed542f":"code","d20deeb1":"code","c3f3d16e":"code","f220fde3":"code","147e5f1a":"code","0a30ac0f":"code","7b408b1c":"code","ee61dd9e":"code","6fffbbdb":"code","afd10f1a":"code","f0c5e505":"markdown","9f9da2b4":"markdown","4d348042":"markdown","34619281":"markdown","8ffb21da":"markdown","b7d413b1":"markdown","486e6a0c":"markdown"},"source":{"18735b16":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nimport copy\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e68e2cba":"df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","ed1c834f":"df.shape","65303a94":"df.head()","aef203d3":"df.info()","8c7a0496":"df.isna().sum()","3b3ed6c9":"df.Survived.value_counts().plot(kind = 'bar')","da030f08":"t = df['Sex'].value_counts().reset_index()\nt['Sex'] = round((t['Sex'] \/ t['Sex'].sum()) * 100,2)\nt\ncolors = sns.color_palette('pastel')[0:5]\n\nplt.pie(t.Sex, labels = t['index'], colors = colors, autopct='%.0f%%')\nplt.show()","882a3be9":"df.groupby(['Sex'])['Survived'].mean().reset_index()","f99430b7":"df[df.Survived == 1].Sex.value_counts(normalize=True) * 100","ae313226":"sns.displot(df, x=\"Age\", hue=\"Sex\", multiple=\"stack\")","7a6a145d":"sns.displot(df, x=\"Age\", hue=\"Survived\", multiple=\"stack\")","f9e38c82":"df.Age = df.Age.fillna(df.Age.mean())","003860e4":"df['age_binned']=pd.cut(x=df['Age'], bins=[0,10,20,40,85])","cf30c74f":"df.head()","9f79cc4f":"sns.displot(df,x = 'Pclass',hue = 'Survived', multiple=\"stack\")","e4fc0d4c":"df.groupby('Pclass')['Fare'].mean()","ef9999b8":"df.corr()","ee194b1b":"df.head()","f3342144":"df[df.Pclass == 1]['Cabin'].unique()","c66cf3e2":"df[df.Pclass == 2]['Cabin'].unique()","24440a3e":"df[df.Pclass == 3]['Cabin'].unique()","12cfc0ad":"df.head()","e7fcee7d":"df['has_family'] = np.where((df.Parch >0) | (df.SibSp > 0),1,0)","b076beca":"df.head(3)","2ec6216a":"df.drop(['PassengerId','Name','Ticket','Cabin'],axis = 1,inplace = True)","5e0a4a3f":"df.head()","4a48327a":"df.isna().sum()","96637026":"df.Embarked = df.Embarked.fillna(df.Embarked.mode())","667ba1fc":"df.isna().sum()","afdcedad":"df.dropna(inplace = True)","5c1afaee":"df.head()","a8bd1657":"df2 = df.copy(deep = True)","a26fba05":"# df2.drop(['Fare'],axis = 1, inplace=True)","d083bfef":"df2 = pd.get_dummies(df2, drop_first = True)","04944f87":"df2.head()","de83e3c1":"y = df2.Survived\nX = df2.drop(['Survived'],axis = 1)","78d96a08":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)\n","6db236bc":"X_train.head()","bb44acc7":"X_train.info()","4f5a3f81":"lr = LogisticRegression(solver='liblinear',random_state=0)","ffff16c9":"y_hat = lr.fit(X_train,y_train).predict(X_test)","b5bd8415":"accuracy_score(y_test, y_hat)","8f7daaff":"importance = lr.coef_[0]\n# summarize feature importance\nfor i,v in enumerate(importance):\n    print('Feature: %0d, Score: %.5f' % (i,v))\n# plot feature importance\nplt.bar([x for x in range(len(importance))], importance)\nplt.show()","fc0cff30":"X_train.head(2)","0d9de2fb":"# \/kaggle\/input\/titanic\/test.csv\n# \/kaggle\/input\/titanic\/gender_submission.csv\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","d1c3431b":"df2.head(2)","0c4a67da":"test.head()","9f5f1534":"test.drop(['PassengerId','Name','Ticket','Cabin'],axis = 1, inplace = True)","676e605a":"test['age_binned']=pd.cut(x=test['Age'], bins=[0,10,20,40,85])","aeed542f":"# test.drop(['Age'],axis = 1, inplace = True)","d20deeb1":"test = pd.get_dummies(test, drop_first=True)","c3f3d16e":"test.Fare = test.Fare.fillna(df2.Fare.mean())","f220fde3":"test.Age = test.Age.fillna(df2.Age.mean())","147e5f1a":"test['has_family'] = np.where((test.Parch >0) | (test.SibSp > 0),1,0)","0a30ac0f":"test.isna().sum()","7b408b1c":"submission = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","ee61dd9e":"y_final = lr.fit(df2.drop(['Survived'],axis =1),df2.Survived).predict(test)","6fffbbdb":"submission['Survived'] = y_final\n","afd10f1a":"submission.to_csv('submission_titanic.csv', index=False)","f0c5e505":"# What % of females and males survived","9f9da2b4":"# What is the Fare distribution across Pclass\n","4d348042":"# What is the distribution of Age.","34619281":"# Out of survived, what % is male and female","8ffb21da":"survival\tSurvival\t0 = No, 1 = Yes\npclass\tTicket class\t1 = 1st, 2 = 2nd, 3 = 3rd\nsex\tSex\t\nAge\tAge in years\t\nsibsp\t# of siblings \/ spouses aboard the Titanic\t\nparch\t# of parents \/ children aboard the Titanic\t\nticket\tTicket number\t\nfare\tPassenger fare\t\ncabin\tCabin number\t\nembarked\tPort of Embarkation\tC = Cherbourg, Q = Queenstown, S = Southampton","b7d413b1":"# Modeling","486e6a0c":"# test"}}