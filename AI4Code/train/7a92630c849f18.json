{"cell_type":{"883ad392":"code","30225d5b":"code","49678100":"code","e8dd4615":"code","da40a638":"code","4d2f4ee4":"code","6d450d5e":"code","c3f18e06":"code","3163f9af":"code","a855f32f":"code","28d009ec":"code","35bdabd2":"code","a098ae77":"code","f2e82d2b":"code","c492141f":"code","cd09accf":"markdown","72d4acbd":"markdown","2c2ad9a2":"markdown","3256bfbf":"markdown","45da4573":"markdown","a3b9658f":"markdown","28e0b1a4":"markdown","6c9a7e2a":"markdown"},"source":{"883ad392":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","30225d5b":"Netflix_data = '\/kaggle\/input\/netflix-shows\/netflix_titles.csv'\nData = pd.read_csv(Netflix_data) \nData.head()","49678100":"missing_data = Data.isna().sum().sort_values(ascending= False) ","e8dd4615":"missing_data[missing_data != 0].plot(kind='bar') \n","da40a638":"missing_data_per = missing_data[missing_data != 0]\/len(Data) \n\nmissing_data_per\n","4d2f4ee4":"Data.shape\n\n","6d450d5e":"Data.dropna(inplace=True) ","c3f18e06":"Data.isna().sum()","3163f9af":"Data.info()","a855f32f":"Data.head(50) \n","28d009ec":"Data.set_index('show_id', inplace=True) \n","35bdabd2":"Data['date_added']=pd.to_datetime(Data.date_added)","a098ae77":"movies = Data[Data.type == 'Movie']\n\nlen(movies) \n","f2e82d2b":"tv_show = Data[Data.type=='TV Show']\nlen(tv_show) \n","c492141f":"Data['rating'].unique()","cd09accf":"# Extracting Dataset of Netflix TV Shows and Movies\n","72d4acbd":"## No. TV Shows","2c2ad9a2":"## Ratings of movies and tv shows","3256bfbf":"## No. of movies available in Netflix","45da4573":"# Data Cleaning\n\n1. Missing data in columns\n2. Percentage of missing value\n3. Check_Columns in Dataframe\n     where vaule are missing\n4. Drop missing rows","a3b9658f":"# Summery\n\n1. There are total 5377 movies      ,whereas 2410 TV Shows were      available on Netflix in 2019","28e0b1a4":"# Ask questions \n\n1. Are there any missing values    in any columns? If it so,        then in what ratio the          dataset contains missing        values? \n \n2. How many columns contains the    numeric values? \n\n3. Should we convert the Date      into numeric form? \n4. Since we have Full Date          column, should we drop          Release_year column? \n","6c9a7e2a":"# Data Exploratory Analysis\n\n1. Check if there is any columns    that contains any numeric        values. \n\n2. Analyze the datas : Type,        Title, Cast,                    Listed_in,Ratings                Country, Date Added\n\n       "}}