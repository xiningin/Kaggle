{"cell_type":{"2e14e1ce":"code","41f93b52":"code","0fd17a40":"code","c72904cf":"code","a1e658ac":"code","946c0e0e":"code","da5e2551":"code","d8378972":"code","0df2e92b":"code","6a9f207e":"code","d7924ab2":"code","252e4a04":"code","8aa5ab47":"code","826b73d0":"code","fe60abc3":"code","56911989":"code","4be90148":"code","a542769d":"code","e67a38f7":"code","499d987a":"code","e032e5c8":"code","0473e3ea":"code","d0d3d615":"code","9616c3d8":"code","90b81885":"code","77b36ed0":"code","029b2981":"code","700cf274":"code","4a23f377":"code","7629ff1a":"markdown","0f9c73cc":"markdown","c32b6a40":"markdown"},"source":{"2e14e1ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport keras\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41f93b52":"df = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')","0fd17a40":"df.head()","c72904cf":"df.info()","a1e658ac":"df.shape","946c0e0e":"df.columns","da5e2551":"from sklearn.preprocessing import StandardScaler","d8378972":"df['Amount(Normalized)'] = StandardScaler().fit_transform(df['Amount'].values.reshape(-1,1))","0df2e92b":"df.loc[:,['Amount', 'Amount(Normalized)']].head()","6a9f207e":"df = df.drop(columns = ['Amount', 'Time'], axis=1)","d7924ab2":"X = df.drop('Class', axis=1)","252e4a04":"y = df['Class']","8aa5ab47":"from sklearn.model_selection import train_test_split","826b73d0":"from imblearn.over_sampling import SMOTE","fe60abc3":"X_smote, y_smote = SMOTE().fit_sample(X, y)","56911989":"X_smote = pd.DataFrame(X_smote)\ny_smote = pd.DataFrame(y_smote)","4be90148":"y_smote.iloc[:,0].value_counts()","a542769d":"X_train, X_test, y_train, y_test = train_test_split(X_smote, y_smote, test_size=0.2, random_state=0)","e67a38f7":"X_train = np.array(X_train)\nX_test = np.array(X_test)\ny_train = np.array(y_train)\ny_test = np.array(y_test)","499d987a":"from keras.models import Sequential\nfrom keras.layers import Dense, Dropout","e032e5c8":"model = Sequential([\n    Dense(units=20, input_dim = X_train.shape[1], activation='relu'),\n    Dense(units=24, activation='relu'),\n    Dropout(0.5),\n    Dense(units=20, activation='relu'),\n    Dense(units=24, activation='relu'),\n    Dense(1, activation='sigmoid')\n])","0473e3ea":"model.summary()","d0d3d615":"model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\nmodel.fit(X_train, y_train, batch_size=30, epochs=5)","9616c3d8":"score = model.evaluate(X_test, y_test)\nprint('Test Accuracy: {:.2f}%\\nTest Loss: {}'.format(score[1]*100,score[0]))","90b81885":"from sklearn.metrics import confusion_matrix, classification_report","77b36ed0":"y_pred = model.predict(X)\ny_test = pd.DataFrame(y)\ncm2 = confusion_matrix(y_test, y_pred.round())\nsns.heatmap(cm2, annot=True, fmt='.0f')\nplt.show()","029b2981":"score_new = model.evaluate(X, y)\nprint('Test Accuracy: {:.2f}%\\nTest Loss: {}'.format(score_new[1]*100, score_new[0]))","700cf274":"print(classification_report(y_test, y_pred.round()))","4a23f377":"Thank you!","7629ff1a":"Artificial Neural Networks","0f9c73cc":"SMOTE Sampling to deal with imbalanced data","c32b6a40":"Normalized"}}