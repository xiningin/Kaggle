{"cell_type":{"7634211e":"code","bd2ce000":"code","e02321e0":"code","2d7df562":"code","77867c8f":"code","f7e17ec8":"code","6dd57bd7":"code","c94c2f15":"code","99b5db06":"code","60b3502a":"code","bea34f36":"code","8bab65e2":"code","b09190f5":"code","ac1e88c8":"code","1e382f2c":"code","a2bed5d4":"code","3d594c01":"code","3b0f67af":"code","50fe88f1":"code","5c58d7f7":"code","388e2025":"code","bea89cfc":"code","a2e3f593":"code","7e63207d":"code","85ab97c5":"code","e3d4c998":"code","30f9ca2a":"code","2e0fc55e":"code","842e5e2d":"code","fe035788":"code","80c1f9c5":"code","88cbd4cd":"code","f287c9dc":"code","2a11ae4d":"code","db181f87":"code","6036ab7d":"code","c807179b":"code","20e8d5d1":"code","596182e6":"code","6eedb7ec":"code","3cca9152":"code","8153ea09":"code","a18c8c98":"code","9cf883c3":"code","a996c6a5":"code","371a0996":"code","7d877442":"code","2a3ece0f":"code","344ec645":"code","f0d95aab":"code","236e38a1":"code","9aafa07b":"code","d897cbb6":"code","eb35b38f":"code","dbdb908b":"code","e39b6500":"code","cf76d850":"code","c4d3f171":"markdown","d13c2a81":"markdown","36b22398":"markdown","1040f3fb":"markdown","073eb991":"markdown","1570abe3":"markdown","36d4649b":"markdown","e66eba55":"markdown","f2d22392":"markdown","0fcf6c26":"markdown","c247112e":"markdown","653b733d":"markdown","a3c03c3e":"markdown","42a5fbc9":"markdown","fc82eef1":"markdown","161c4383":"markdown","2aba682e":"markdown","93c7c39e":"markdown","4d61eb46":"markdown","64005555":"markdown","d951ca9d":"markdown","31e36681":"markdown","311e9778":"markdown","4c389767":"markdown","86195e00":"markdown","3be57fb0":"markdown","404e974e":"markdown","52793c1b":"markdown","e219cb76":"markdown","a3954cdf":"markdown","4462d853":"markdown","409d37a0":"markdown","437d1b03":"markdown","71878622":"markdown","c5c19a6b":"markdown"},"source":{"7634211e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bd2ce000":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sn\nfrom statsmodels.stats import diagnostic as diag\nfrom statsmodels.stats.outliers_influence import  variance_inflation_factor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score,mean_absolute_error","e02321e0":"data = pd.read_csv(r\"\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\")","2d7df562":"data.head() # Reture 1st (5) Rows","77867c8f":"data.tail()  # Return Last (5) Rows","f7e17ec8":"data.shape","6dd57bd7":"data.info() # To showcast which variable contain which type of Datatype","c94c2f15":"data.columns","99b5db06":"data.describe()","60b3502a":"missing_value_presentage =round(data.isnull().sum()*100\/len(data),2).reset_index()\nmissing_value_presentage.columns = ['column_name','missing_value_presentage']\nmissing_value_presentage = missing_value_presentage.sort_values('missing_value_presentage',ascending =False)\nmissing_value_presentage","bea34f36":"data['salary'].fillna(data['salary'].mean(),inplace =True)","8bab65e2":"missing_value_presentage =round(data.isnull().sum()*100\/len(data),2).reset_index()\nmissing_value_presentage.columns = ['column_name','missing_value_presentage']\nmissing_value_presentage = missing_value_presentage.sort_values('missing_value_presentage',ascending =False)\nmissing_value_presentage","b09190f5":"data_num =data[data.select_dtypes(include=[np.number]).columns.tolist()]","ac1e88c8":"data_num.describe()","1e382f2c":"# take out our String columns\ndata_str = data[data.select_dtypes(exclude=[np.number]).columns.tolist()]","a2bed5d4":"data_str.describe(include ='all')","3d594c01":"from sklearn.preprocessing import LabelEncoder\n# Label Encoder Perform on all the Varaible which contains the (Object Datatype)","3b0f67af":"data_str.gender =(LabelEncoder().fit_transform(data_str.gender))\ndata_str.ssc_b =(LabelEncoder().fit_transform(data_str.ssc_b))\ndata_str.hsc_b =(LabelEncoder().fit_transform(data_str.hsc_b))\ndata_str.hsc_s =(LabelEncoder().fit_transform(data_str.hsc_s))\ndata_str.degree_t =(LabelEncoder().fit_transform(data_str.degree_t))\ndata_str.workex =(LabelEncoder().fit_transform(data_str.workex))\ndata_str.specialisation=(LabelEncoder().fit_transform(data_str.specialisation))\ndata_str.status =(LabelEncoder().fit_transform(data_str.status))","50fe88f1":"dataset = pd.concat([data_str,data_num],axis = 1)","5c58d7f7":"dataset.head()","388e2025":"#  Outliers Detection\ncont_vars =list(dataset.columns)[:]\ndef outlier_visual(dataset):\n    plt.figure(figsize=(16,35))\n    i = 0\n    for col in cont_vars:\n        i+= 1\n        plt.subplot(15,2,i)\n        plt.boxplot(dataset[col])\n        plt.title('{} boxplot'.format(col))\n        i += 1\n        plt.subplot(15,2,i)\n        plt.hist(dataset[col])\n        plt.title('{} histogram'.format(col))\n    plt.show()\noutlier_visual(dataset)\n","bea89cfc":"############################# hsc_p #########################\nq1 = dataset['hsc_p'].quantile(0.25)\nq3 = dataset['hsc_p'].quantile(0.75)\niqr = q3-q1 #Interquartile range\nlow  = q1-1.5*iqr #acceptable range\nhigh = q3+1.5*iqr #acceptable range\nlow,high","a2e3f593":"dataset['hsc_p']=np.where(dataset['hsc_p'] > high,high,dataset['hsc_p']) # upper limit\ndataset['hsc_p']=np.where(dataset['hsc_p'] < low,low,dataset['hsc_p']) # low limit","7e63207d":"############################# Salary ########################################\nq1 = dataset['salary'].quantile(0.25)\nq3 = dataset['salary'].quantile(0.75)\niqr = q3-q1 #Interquartile range\nlow  = q1-1.5*iqr #acceptable range\nhigh = q3+1.5*iqr #acceptable range\nlow,high","85ab97c5":"dataset['salary']=np.where(dataset['salary'] > high,high,dataset['salary']) # upper limit","e3d4c998":"outlier_visual(dataset)","30f9ca2a":"def plot(dataset,x,y):\n    plt.Figure(figsize =(10,10))\n    sns.boxplot(x = data[x],y= data[y])\n    g = sns.FacetGrid(data, row = y)\n    g = g.map(plt.hist,x)\n    plt.show()","2e0fc55e":"plot(dataset,\"salary\",\"gender\")","842e5e2d":"sns.countplot(dataset['status'],hue=dataset['gender'])","fe035788":"plot(dataset,\"salary\",\"ssc_b\")","80c1f9c5":"sns.countplot(dataset['status'],hue=dataset['ssc_b'])","88cbd4cd":"plot(dataset,\"salary\",\"hsc_b\")","f287c9dc":"sns.catplot(x=\"status\", y=\"ssc_p\", data=data,kind=\"swarm\",hue='gender')\nsns.catplot(x=\"status\", y=\"hsc_p\", data=data,kind=\"swarm\",hue='gender')\nsns.catplot(x=\"status\", y=\"degree_p\", data=data,kind=\"swarm\",hue='gender')","2a11ae4d":"sns.violinplot(x=\"degree_t\", y=\"salary\", data=data)\nsns.stripplot(x=\"degree_t\", y=\"salary\", data=data,hue='status')","db181f87":"    X = dataset.drop('salary', axis = 1)\n    Y = dataset[['salary']]\n    # Split X and y into X_\n    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.20, random_state=1)","6036ab7d":"# Correlation Matrix \ndataset_exp =pd.concat([y_train,X_train],axis = 1)","c807179b":"# calculate the correlation matrix\ncorr = dataset_exp.corr()\ndisplay(corr)\n# plot the correlation heatmap\nsns.heatmap(corr,annot =True)","20e8d5d1":"import statsmodels.api as sm\nX_1 = sm.add_constant(X_train)\n# create a OLS model\nmodel = sm.OLS(y_train, X_1).fit()\nprint(model.summary())","596182e6":"X1=dataset.drop(['salary'],axis=1)\n# the VFI does expect a constant term in the data, \n#so we need to add one using the add_constant method\n#X1 = sm.add_constant(econ_df_before)\nseries_before = pd.Series([variance_inflation_factor(X1.values, i) \n                           for i in range(X1.shape[1])], index=X1.columns)\nseries_before","6eedb7ec":"X = dataset.drop('salary', axis = 1)\ny = dataset['salary']","3cca9152":"#Backward Elimination\ncols = list(X.columns) # all column present  in x  \npmax = 1\nwhile (len(cols)>0):  # count of variable should be greater than zero\n    p= []\n    X_1 = X[cols]  # all column we are assign in x_1\n    X_1 = sm.add_constant(X_1)# adding a column with value 1\n    final_model = sm.OLS(y,X_1).fit() # Regression model\n    p = pd.Series(final_model.pvalues.values[1:],index = cols) \n    # to get p-values for all variable only     \n    pmax = max(p)  # select a max P-value \n    feature_with_p_max = p.idxmax()   \n    # idmax is used to display the variable name which has max P-value\n    if(pmax>0.05):\n        cols.remove(feature_with_p_max)\n    else:\n        break\nselected_features_BE = cols\nprint(selected_features_BE)","8153ea09":"final_model.summary()","a18c8c98":"X1=dataset.loc[:,['gender', 'degree_t', 'status', 'etest_p', 'mba_p']]\nseries_before = pd.Series([variance_inflation_factor(X1.values, i) \n                           for i in range(X1.shape[1])], index=X1.columns)\nseries_before","9cf883c3":"import pylab\n# check for the normality of the residuals\nsm.qqplot(final_model.resid, line='s')\npylab.show()","a996c6a5":"Data=pd.concat([X_train,y_train],axis=1)","371a0996":"Data['Fitted_value']=final_model.fittedvalues\nData['Residual']=final_model.resid","7d877442":"p = Data.plot.scatter(x='Fitted_value',y='Residual')\nplt.xlabel('Fitted values')\nplt.ylabel('Residuals')\np = plt.title('Residuals vs fitted values plot for homoscedasticity check')\nplt.show()","2a3ece0f":"Data['Residual'].plot.hist()","344ec645":"X_test2 = X_test[['gender', 'degree_t', 'status', 'etest_p', 'mba_p']]","f0d95aab":"X_test2 = sm.add_constant(X_test2)","236e38a1":"X_test2.head()","9aafa07b":"y_predict=final_model.predict(X_test2)","d897cbb6":"test=pd.concat([X_test,y_test],axis=1)","eb35b38f":"test['Predicted']=y_predict","dbdb908b":"test.head()","e39b6500":"import math\n# calculate the mean squared error\nmodel_mse = mean_squared_error(test['salary'], test['Predicted'])\n# calculate the mean absolute error\nmodel_mae = mean_absolute_error(test['salary'], test['Predicted'])\n# calulcate the root mean squared error\nmodel_rmse = math.sqrt(model_mse)\n# display the output\nprint(\"MSE {:.3}\".format(model_mse))\nprint(\"MAE {:.3}\".format(model_mae))\nprint(\"RMSE {:.3}\".format(model_rmse))","cf76d850":"import math\n# calculate the mean squared error\nmodel_mse = mean_squared_error(Data['salary'], Data['Fitted_value'])\n# calculate the mean absolute error\nmodel_mae = mean_absolute_error(Data['salary'], Data['Fitted_value'])\n# calulcate the root mean squared error\nmodel_rmse = math.sqrt(model_mse)\n# display the output\nprint(\"MSE {:.3}\".format(model_mse))\nprint(\"MAE {:.3}\".format(model_mae))\nprint(\"RMSE {:.3}\".format(model_rmse))","c4d3f171":"# Once again Run the Same Code","d13c2a81":"# Checking the Missing Values","36b22398":"The stream in which the students mostly get placed are Commucation and management , also science and technology students are mostly getting placed and other stream students are not getting that much placements due to less number of students...","1040f3fb":"# To get placed in a company with high package which board should I choose (Central or State board) in 10th?","073eb991":"# Performance on Test Data set","1570abe3":"# Which stream students are getting more placed and which stream students are mostly not placed?","36d4649b":" # Multicolinearity (with the help of VIF)","e66eba55":"We are going to remove the outliers using the IQR","f2d22392":"# Vif of Model","0fcf6c26":"# Normality","c247112e":"# Who is getting more placements girls or boys?","653b733d":"- The Range of salary is high for central board students with the median of 2.5 Lakhs per annum\n- The Median salary for other board students is 2.3 Lakhs per annum\n- The highest package is offered to a central board student which is nearly 10 Lakhs per annum and as per our previous finding the student is a boy\n- The highest package offered for other board students is 5 Lakhs per annum\n- Total number central board students not placed are 27 and Total number of other board student not placed are 37","a3c03c3e":"# AS u can see Only Two columns contain the Outliers (hsc_p & Salary)","42a5fbc9":"# Find which varaibles contain whic type of data type?","fc82eef1":"Hello Everyone!I am a Beginner in this Field ! I am used Python Language to Predict the Dependent Variable(Salary) to see which varialbes have most relationship will dependent variable(Multiple linear Regression)\nUse various Machine learning too and Libraries!\n- Numpy ,Pandas , matplotlib ,seaborn!\n- Missing Values\n- Detecting Outliers\n- Multiple Linear Regression (Backward Elimination)\n- Assumption on Linear Regression\n- Prediction on Test dataset ","161c4383":" As u can see that  Boys have got the more number of placement !! Ratio is also more great 100:50","2aba682e":" # Performance on Training Data set","93c7c39e":"# Who is mostly not getting placed?","4d61eb46":" # Homoscedasicity","64005555":"# Data Types and Shape of the Dataset","d951ca9d":"# Model Error are IID","31e36681":"#  Backward Elimination Method[****](http:\/\/)","311e9778":"# Importing our Dataset","4c389767":"# Data Partition","86195e00":"# Detection of Outlier (Boxplot &Barplot)","3be57fb0":"# For the Object variables U First have to make all the variables into the Numeric format using the  ( LabelEncoder)","404e974e":"# Data Visualization","52793c1b":"# Assumption of Model\n\n* Linearity\n* Normality\n* Homoscedasicity\n* Model Error has to be independently identificaly Distibuted","e219cb76":"# Import our Libraries","a3954cdf":"# Prediction on Test Data (unseen data)","4462d853":"The students who have scored less than 60 percent in 10th or 12th or degree are mostly not getting placed because they don't even have basic eligibility(more than 60 percent in 10th,12th and degree)","409d37a0":"# As we all can see only the Salary varaible contain the Missing values : 31.16 % with is not less then the 50%. So we can replace the missing values by (Mean)","437d1b03":"- The Range of salary is high for boys with the median of 2.5 Lakhs per annum\n- The Median salary for girls is 2.1 Lakhs per annum\n- The highest package is offered to a boy which is nearly 10 Lakhs per annum\n- The highest package offered for girls is 7 Lakhs per annum\n- Total number girls not placed are 30 and Total number of boys not placed are 40","71878622":"# Model Building","c5c19a6b":"# To get placed in a company with high package which board should I choose (Central or State board) in 12th?"}}