{"cell_type":{"f4daad01":"code","ca376316":"code","a1dfd5c0":"code","9702a27b":"markdown","3baf5dee":"markdown"},"source":{"f4daad01":"import numpy as np\nimport time\nfrom random import randint\nimport matplotlib.pyplot as plt\nfrom scipy.interpolate import interp1d\nfrom scipy.signal import savgol_filter","ca376316":"def GetArr(M, N):\n    Arr = np.random.randint(-100, 100, size=(M, N))\n    return Arr\n\ndef GetEigenValues(Arr):\n    start = time.perf_counter()\n    w,v = np.linalg.eig(Arr)\n    finish = time.perf_counter()\n    if(len(Arr) < 100):\n        print(Arr)\n#         print(w)\n    print(f\"\\nExecuting time for {np.linalg.matrix_rank(Arr)}th rank matrix is {finish - start:0.4f} seconds\\n\")\n    return finish - start\n\ndata = {\"x\":[], \"y\":[], \"label\":[]}\nsize = [5,10,100,500,1000]\n\nfor i in size:\n    arr = GetArr(i,i)\n    t = GetEigenValues(arr)\n    data[\"x\"].append(f\"{t:0.4f}\")\n    data[\"y\"].append(t)\n    data[\"label\"].append(f\"{i}x{i}\")\n\n# display scatter plot data\nplt.figure(figsize=(10,8))\nplt.title('Scatter Plot', fontsize=20)\nplt.xlabel('x', fontsize=15)\nplt.ylabel('y', fontsize=15)\n# w=np.hanning(5)\n# y2=np.convolve(w\/w.sum(),data[\"y\"],mode='same')\n# plt.plot(x,y2)\nplt.plot(data[\"x\"], data[\"y\"], marker = 'o')\n\n# add labels\nfor label, x, y in zip(data[\"label\"], data[\"x\"], data[\"y\"]):\n    plt.annotate(label, xy = (x, y))\n\n# def smooth(y, box_pts):\n#     box = np.ones(box_pts)\/box_pts\n#     y_smooth = np.convolve(y, box, mode='same')\n#     return y_smooth\n\n# yhat = savgol_filter(data[\"y\"], len(data[\"x\"]), len(data[\"x\"])-1) # window size 51, polynomial order 3\n# plt.plot(data[\"x\"], yhat, marker = 'o')\n# plt.plot(data[\"x\"], smooth(data[\"y\"],2), marker = 'o')","a1dfd5c0":"def GetArr(M, N):\n    Arr = np.random.randint(-100, 100, size=(M, N))\n    return Arr\n\ndef FindValues(Arr, x, er):\n    val = []\n    start = time.perf_counter()\n    for i in range(len(Arr)):\n        for j in range(len(Arr[i])):\n            if(Arr[i][j] >= (x-er) and (Arr[i][j]) <= (x+er)):\n                val.append(Arr[i][j])\n    finish = time.perf_counter()\n    if(len(Arr) < 100):\n        print(\"Matrix:\")\n        print(Arr)\n        print(val)\n    print(f\"\\nValues with x = {x} and error {er}: {len(val)}\")\n    print(f\"\\nExecuting time for {np.linalg.matrix_rank(Arr)}th rank matrix is {finish - start:0.4f} seconds\\n\")\n    return finish - start\n\ndata = {\"x\":[], \"y\":[], \"label\":[]}\nsize = [5,10,100,500,1000]\n\nfor i in size:\n    arr = GetArr(i,i)\n    t = FindValues(arr, 20, 5)\n    t = FindValues(arr, 20, 50)\n    data[\"x\"].append(f\"{t:0.4f}\")\n    data[\"y\"].append(t)\n    data[\"label\"].append(f\"{i}x{i}\")","9702a27b":"# \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430 \u21161\n**\u0417\u0430\u0432\u0434\u0430\u043d\u043d\u044f**\n\n\u0421\u0444\u043e\u0440\u043c\u0443\u0432\u0430\u0442\u0438 \u043c\u0430\u0442\u0440\u0438\u0446\u0456 \u0440\u0456\u0437\u043d\u043e\u0457 \u0440\u043e\u0437\u043c\u0456\u0440\u043d\u043e\u0441\u0442\u0456 \u0437 \u0434\u043e\u0432\u0456\u043b\u044c\u043d\u0438\u043c\u0438 \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438: \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, 5\u04455, 10\u044510 \u0456 \u043f\u043e\u0431\u0443\u0434\u0443\u0432\u0430\u0442\u0438 \u0433\u0440\u0430\u0444\u0456\u043a\u0438 \u0437\u043c\u0456\u043d\u0438 \u0447\u0430\u0441\u0443 \u0440\u043e\u0431\u043e\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u043e\u0440\u0430 \u0434\u043b\u044f\n\n\u0430) \u0437\u043d\u0430\u0445\u043e\u0434\u0436\u0435\u043d\u043d\u044f \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u0447\u0438\u0441\u0435\u043b \u043c\u0430\u0442\u0440\u0438\u0446\u044c \u0440\u0456\u0437\u043d\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443\n\n\u0431) \u0444\u043e\u0440\u043c\u0443\u0432\u0430\u043d\u043d\u044f (\u0432\u0438\u0431\u0440\u0430\u043d\u0438\u0445 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u043e \u0434\u043e \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0445 \u0441\u0430\u043c\u043e\u0441\u0442\u0456\u0439\u043d\u043e \u0456 \u043f\u043e\u0433\u043e\u0434\u0436\u0435\u043d\u0438\u0445 \u0437 \u0432\u0438\u043a\u043b\u0430\u0434\u0430\u0447\u0435\u043c \u043f\u0440\u0430\u0432\u0438\u043b-\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0456\u0432) \u043f\u0456\u0434\u043c\u0430\u0441\u0438\u0432\u0456\u0432 \u0434\u0430\u043d\u0438\u0445 \u0440\u0456\u0437\u043d\u043e\u0457 \u0440\u043e\u0437\u043c\u0456\u0440\u043d\u043e\u0441\u0442\u0456 \u0437 \u043c\u0430\u0442\u0440\u0438\u0446\u044c  \u0440\u0456\u0437\u043d\u043e\u0457 \u0440\u043e\u0437\u043c\u0456\u0440\u043d\u043e\u0441\u0442\u0456.\n","3baf5dee":"# \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430 \u21162\n**\u0417\u0430\u0432\u0434\u0430\u043d\u043d\u044f**\n\n\u0414\u043b\u044f \u0434\u043e\u0432\u0456\u043b\u044c\u043d\u043e\u0457 \u0441\u0444\u043e\u0440\u043c\u043e\u0432\u0430\u043d\u043e\u0457 \u043c\u0430\u0442\u0440\u0438\u0446\u0456 (\u0454\u0434\u0438\u043d\u0435 \u043e\u0431\u043c\u0435\u0436\u0435\u043d\u043d\u044f: \u043d\u0430\u044f\u0432\u043d\u0456\u0441\u0442\u044c \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u043e\u0445 \u043e\u0434\u043d\u0430\u043a\u043e\u0432\u0438\u0445 \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0456\u0432 \u0456 \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u043e\u0445 \u0431\u043b\u0438\u0437\u044c\u043a\u0438\u0445 \u0434\u043e \u043d\u0438\u0445 \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044e \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0456\u0432)  30\u044530 \u0432\u0438\u0431\u0440\u0430\u0442\u0438 \u043e\u0434\u043d\u0430\u043a\u043e\u0432\u0456 \u0456 \u0431\u043b\u0438\u0437\u044c\u043a\u0456 \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0438 \u0456 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438, \u0437\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u0432\u0448\u0438 \u0432\u0438\u0431\u0440\u0430\u043d\u0438\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c, \u0441\u043f\u0456\u043b\u044c\u043d\u0456 \u043e\u0437\u043d\u0430\u043a\u0438 \u0430\u0431\u043e \u043e\u0437\u043d\u0430\u043a\u0443 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: \u0440\u043e\u0437\u0442\u0430\u0448\u0443\u0432\u0430\u043d\u043d\u044f, \u0440\u0456\u0437\u043d\u0438\u0446\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u044c, \u0432\u0456\u0434\u043c\u0456\u043d\u043d\u0456\u0441\u0442\u044c \u0432\u0456\u0434 \u0434\u0435\u044f\u043a\u043e\u0433\u043e \u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430  \u0442\u0430 \u0456\u043d.)\n"}}