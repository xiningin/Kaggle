{"cell_type":{"d78053a1":"code","c06cf524":"code","7efb792d":"code","4fc3477b":"code","6694b171":"code","194f534c":"code","b34c3fa2":"code","f94e2f00":"code","3bb939a9":"code","a47a4f68":"code","f463e556":"code","5b242e7d":"code","ea76a791":"code","f8e562a2":"code","b93186fc":"code","20deeb6a":"code","f25d7664":"code","4bda651b":"code","3a5e1395":"code","cdc20d97":"code","3e5d9e5d":"code","a78da7e9":"code","70ac4d7c":"code","848b4b9b":"code","4aea3a86":"code","ab0aaa5a":"markdown","6544b039":"markdown","03e39587":"markdown","2ac5d44f":"markdown","0f44797f":"markdown","2e406f59":"markdown","0ae76a59":"markdown","b4865bf7":"markdown","39deb808":"markdown","c0a4ee3d":"markdown","96c86d6f":"markdown"},"source":{"d78053a1":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns\nplt.style.use ('dark_background')\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report,confusion_matrix","c06cf524":"data_train = pd.read_csv('..\/input\/cardiac-risk-prediction\/Train.csv')\ndata_train","7efb792d":"data_test = pd.read_csv('..\/input\/cardiac-risk-prediction\/Test.csv')\ndata_test","4fc3477b":"data_train.info()\ndata_train.nunique()","6694b171":"data_train.isna().sum()","194f534c":"data_train.describe()","b34c3fa2":"LE = LabelEncoder ()\ndata_train['UnderRisk'] = LE.fit_transform(data_train['UnderRisk'])\ndata_train.UnderRisk","f94e2f00":"sns.countplot(data_train['UnderRisk'])","3bb939a9":"sns.pairplot(data_train)","a47a4f68":"plt.figure(figsize=(15, 12))\nmatrix = np.triu(data_train.corr())\nsns.heatmap(data_train.corr(), annot=True, linewidth=.10, mask=matrix, cmap=\"rocket\");","f463e556":"plt.figure(figsize=(15, 12))\nsns.heatmap(data_test)","5b242e7d":"X = data_train.iloc[:,:-1].values\nX","ea76a791":"Y = data_train.iloc[:,-1].values\nY","f8e562a2":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)","b93186fc":"X_train","20deeb6a":"X_test","f25d7664":"Y_train","4bda651b":"Y_test","3a5e1395":"SC = StandardScaler ()\nX_train[:,:] = SC.fit_transform (X_train[:,:])\nX_test[:,:] = SC.fit_transform (X_test[:,:])","cdc20d97":"svc = SVC()\nsvc.fit(X_train, Y_train)\nY_pred = svc.predict(X_test)\nprint(Y_pred)","3e5d9e5d":"print(classification_report(Y_test,Y_pred))","a78da7e9":"df_comp = pd.DataFrame({'Actual':Y_test , 'Predict':Y_pred})\ndf_comp","70ac4d7c":"print ('y_test = ',df_comp.Actual.sum())\nprint ('y_pred = ',df_comp.Predict.sum())","848b4b9b":"sns.heatmap(df_comp)","4aea3a86":"plt.figure(figsize=(10, 7))\ndata = [35,143]\nnames = ['UnderRisk','Not UnderRisk']\nplt.title (' UnderRisk & Not UnderRisk (Y_Train) ',color = 'red')\nplt.pie (data,labels = names,labeldistance = 1.1,startangle = 90,colors = ['blue','red'],autopct = '%1.0f%%',)","ab0aaa5a":"# **#Importing Libraries#**","6544b039":"# **#Predicting Data#**","03e39587":"# **#Data Visualization#**","2ac5d44f":"# **#Encoding object data with Label Encoder#**","0f44797f":"# **#Reading Data#**","2e406f59":"# **#Splitting dataset into Training and Testing set#**\n","0ae76a59":"# **#Classification Report#**","b4865bf7":"# **#data splitting#**","39deb808":"# **#Compare between Actual Data & Predicted Data#**","c0a4ee3d":"# **#Scaling data#**","96c86d6f":"# **#Data Information#** "}}