{"cell_type":{"05cd85bc":"code","2fde98a3":"code","96ca3687":"code","57a74f67":"code","86a5b59d":"code","ac08b801":"code","9faf9619":"code","ef10c99d":"code","e126ab8c":"code","62821134":"code","aacf2c60":"code","571baf43":"code","04c9abf3":"code","ec87bd31":"code","7e009037":"code","1fd08062":"code","bb4e6d73":"code","2cf56ca7":"code","9d59e041":"code","840a9656":"code","f9f0e9cb":"code","13aa68a8":"code","784cd600":"code","aeae4011":"code","8fb8a006":"code","557cf759":"code","3cbae4f8":"code","3f2afaa7":"code","7d2b9b1a":"code","286a4819":"code","79b29a22":"code","4dc2cefb":"code","445e7b96":"code","de000b87":"code","e0b12985":"code","1496e6ec":"code","e63ecd15":"code","28084572":"code","fde3668a":"code","fa3011e7":"code","319f2b25":"code","da6ea4b5":"code","9f1d1a8d":"code","42561047":"code","34bcfbde":"code","c47c9496":"code","817038c7":"code","c6d97c3f":"code","19a38d1f":"code","0322df7c":"code","d381f4ff":"code","de642dba":"code","48705535":"code","3f23d6ae":"code","cd7a8599":"code","8333c29d":"code","51641bf7":"code","9519c6ef":"code","f9e83981":"code","d247ab2a":"code","21367679":"code","783b6086":"code","29103f54":"markdown","f501fa93":"markdown"},"source":{"05cd85bc":"import numpy as np\nimport pandas as pd\nimport seaborn as sb\nfrom matplotlib import pyplot as plt\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import KFold,cross_val_score,GridSearchCV\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\n","2fde98a3":"\ntrain_df  = pd.read_csv('..\/input\/titanic\/train.csv')","96ca3687":"test_df = pd.read_csv('..\/input\/titanic\/test.csv')","57a74f67":"test_df","86a5b59d":"train_df.dtypes","ac08b801":"plt.figure(figsize=(16,9))\nsb.heatmap(train_df.isna())","9faf9619":"train_df.drop(['Cabin'],axis=1,inplace=True)","ef10c99d":"train_df.dtypes","e126ab8c":"categorical_data = train_df.select_dtypes('object')","62821134":"categorical_data","aacf2c60":"numeric_data = train_df.select_dtypes(['int64','float64'])","571baf43":"def encode_not_null(col:pd.Series):\n    ord_enc = OrdinalEncoder()\n    data = categorical_data[col].dropna().values.reshape(-1,1)\n    data_encoded = np.squeeze(ord_enc.fit_transform(data))\n    categorical_data.loc[categorical_data[col].notnull(),col] = data_encoded","04c9abf3":"for col in categorical_data.columns:\n    encode_not_null(col)","ec87bd31":"categorical_data","7e009037":"categorical_data.drop(['Name','Ticket'],axis=1,inplace=True)","1fd08062":"numeric_data.drop(['PassengerId'],axis=1,inplace=True)","bb4e6d73":"agg_train_data = pd.concat([numeric_data,categorical_data],axis=1)","2cf56ca7":"agg_train_data","9d59e041":"for strategy in ['mean','median','most_frequent','constant']:\n    cv=KFold(n_splits=10)\n    if strategy == 'constant':\n        pipe = Pipeline([('imp',SimpleImputer(missing_values=np.nan,strategy=strategy,fill_value=0)),('log_reg',LogisticRegression(max_iter=1000))])\n        #agg_train_data = agg_train_data.astype('int64')\n        X=agg_train_data.loc[:,agg_train_data.columns!='Survived']\n        Y=agg_train_data['Survived']\n        print(f'{strategy} {cross_val_score(pipe,X,Y,cv=cv).mean()}')\n    else:\n        pipe = Pipeline([('imp',SimpleImputer(missing_values=np.nan,strategy=strategy)),('log_reg',LogisticRegression(max_iter=1000))])\n        #agg_train_data = agg_train_data.astype('int64')\n        X=agg_train_data.loc[:,agg_train_data.columns!='Survived']\n        Y=agg_train_data['Survived']\n        print(f'{strategy} {cross_val_score(pipe,X,Y,cv=cv).mean()}')","840a9656":"agg_train_data.isna().sum()","f9f0e9cb":"smp_imp = SimpleImputer(missing_values=np.nan,strategy='mean')","13aa68a8":"agg_train_data = pd.DataFrame(np.round(smp_imp.fit_transform(agg_train_data)),columns=agg_train_data.columns)","784cd600":"agg_train_data = agg_train_data.astype('int64')","aeae4011":"agg_train_data","8fb8a006":"X=agg_train_data.loc[:,agg_train_data.columns!='Survived']\nY=agg_train_data['Survived']","557cf759":"#cv=KFold(n_splits=10)","3cbae4f8":"# from statistics import mean\n# accuracy=[]\n# for train_index,test_index in cv.split(X):\n#     x_train,y_train = X.iloc[train_index,:],Y.iloc[train_index]\n#     x_test,y_test = X.iloc[test_index,:],Y.iloc[test_index]\n#     lm = LogisticRegression(max_iter=10000)\n#     fitted_model = lm.fit(x_train,y_train)\n#     y_hat = fitted_model.predict(x_test)\n#     accuracy.append(accuracy_score(y_test,y_hat))\n# print(mean(accuracy))","3f2afaa7":"lm = LogisticRegression(max_iter=1000)\n\n","7d2b9b1a":"fitted_model = lm.fit(X,Y)","286a4819":"test_df","79b29a22":"test_df.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)","4dc2cefb":"test_df.isna().sum()","445e7b96":"test_df.dtypes","de000b87":"categorical_test_data = test_df.select_dtypes('object')\nnumeric_test_data = test_df.select_dtypes(['int64','float64'])","e0b12985":"categorical_test_data","1496e6ec":"def not_null_encoder(col): \n    ord_enc = OrdinalEncoder()\n    not_null = categorical_test_data[col].dropna().values.reshape(-1,1)\n    categorical_test_data.loc[categorical_test_data[col].notna(),col] = np.squeeze(ord_enc.fit_transform(not_null))","e63ecd15":"for col in categorical_test_data:\n    not_null_encoder(col)","28084572":"categorical_test_data","fde3668a":"plt.figure(figsize=(16,9))\nsb.heatmap(test_df.isna())","fa3011e7":"categorical_test_data","319f2b25":"agg_test_data = pd.concat([categorical_test_data,numeric_test_data],axis=1)","da6ea4b5":"agg_test_data = pd.DataFrame(np.round(smp_imp.fit_transform(agg_test_data)),columns=agg_test_data.columns)","9f1d1a8d":"agg_test_data = agg_test_data.astype('int64')","42561047":"agg_test_data","34bcfbde":"Y_PRED = fitted_model.predict(agg_test_data)","c47c9496":"Y_PRED","817038c7":"test_df = pd.read_csv('..\/input\/titanic\/test.csv')\ntest_df","c6d97c3f":"pass_id = test_df['PassengerId']","19a38d1f":"survived = pd.DataFrame({'Survived':Y_PRED})","0322df7c":"result = pd.concat([pass_id,survived],axis=1)","d381f4ff":"result['Survived'].value_counts()","de642dba":"result.to_csv('.\/result.csv',index=False)","48705535":"#rf = RandomForestClassifier(max_depth=7, n_estimators=500)","3f23d6ae":"# rf_trained_model = rf.fit(X,Y)\n# classification_report(Y,rf_trained_model.predict(X))","cd7a8599":"# cross_val_score(rf,X,Y,cv=cv).mean()","8333c29d":"# grid =  {'n_estimators': [200, 500],\n#     'max_features': ['auto', 'sqrt', 'log2'],\n#     'max_depth' : [4,5,6,7,8],\n#     'criterion' :['gini', 'entropy']}","51641bf7":"# gv = GridSearchCV(rf,grid,cv=5,verbose=10)","9519c6ef":"# gv.fit(X,Y)","f9e83981":"# gv.best_estimator_","d247ab2a":"# Y_PRED = pd.Series(rf_trained_model.predict(agg_test_data))","21367679":"# survived = pd.DataFrame({'Survived':Y_PRED})\n# result = pd.concat([pass_id,survived],axis=1)\n# result['Survived'].value_counts()","783b6086":"# result.to_csv('titanic\/result_RF.csv',index=False)","29103f54":"<!-- ### Random Forest -->","f501fa93":"### TEST DATASET PREPARATION"}}