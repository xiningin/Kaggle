{"cell_type":{"577b0238":"code","fb8a34fc":"code","3699171c":"code","5f2763c7":"code","c7d6c0c8":"code","ca890046":"code","6b1a78b8":"code","229f659d":"code","2a93a0b5":"code","5f860319":"code","97158d4d":"code","db026803":"code","4f378a83":"code","5a300c28":"code","324c2d8f":"code","8eceff69":"code","61848205":"code","09c5b4fb":"code","163d166c":"code","7c4faf89":"code","3dcad43a":"code","d2ddf100":"code","a65df5a1":"code","fc2e26cb":"code","de4f53c1":"code","973341f8":"code","7bb410ec":"code","a65a6c69":"code","16076c40":"code","eeb0ca99":"code","48e597bc":"code","90a8146e":"code","df35057b":"code","65a1e2a9":"code","4b81a631":"code","ac8fe834":"code","dcda412d":"code","2c19cb54":"code","72a8a928":"code","77501cd4":"code","6e8a368b":"code","76bef014":"code","1963b0b1":"code","dd35c427":"code","db4824eb":"code","92ccaace":"code","e13420b0":"code","f572cccf":"markdown","39d489b9":"markdown","d4f75053":"markdown","cf74b359":"markdown","ada53a06":"markdown","f5b3a909":"markdown","eacf0a0c":"markdown","87ab446d":"markdown","dd3f3c90":"markdown"},"source":{"577b0238":"import numpy as np\nimport pandas as pd\nfrom sklearn import preprocessing\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBRegressor\nimport sklearn.metrics as metrics\nimport math\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestRegressor\nfrom lightgbm import LGBMRegressor\nfrom catboost import CatBoostRegressor","fb8a34fc":"train_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","3699171c":"train_df.head()","5f2763c7":"test_df.head()","c7d6c0c8":"train_df.shape, test_df.shape","ca890046":"train_df['SalePrice'].describe()","6b1a78b8":"sns.distplot(train_df['SalePrice'])","229f659d":"labels = train_df['SalePrice']\nlabels","2a93a0b5":"train_df.drop(['SalePrice'], axis=1, inplace=True)","5f860319":"train_idx = train_df.shape[0]\ntrain_idx","97158d4d":"new_df = pd.concat([train_df, test_df], ignore_index=True, axis=0)","db026803":"new_df.head()","4f378a83":"new_df.shape","5a300c28":"nan_pct = [new_df[col].isna().sum() * 100\/new_df.shape[0] for col in new_df.columns]\nnan_df = pd.DataFrame(columns=['column', 'percentage'])\nnan_df['column'] = new_df.columns\nnan_df['percentage'] = nan_pct\nnan_df[nan_df['percentage'] > 50]","324c2d8f":"new_df['Alley'].unique(), new_df['PoolQC'].unique(), new_df['Fence'].unique(), new_df['MiscFeature'].unique()","8eceff69":"new_df.drop(nan_df[nan_df['percentage'] > 50]['column'].unique(), axis=1, inplace=True)","61848205":"nan_df[(nan_df['percentage'] < 50) & (nan_df['percentage'] > 5)]","09c5b4fb":"new_df['FireplaceQu'].unique()","163d166c":"new_df.drop(['FireplaceQu'], axis=1, inplace=True)","7c4faf89":"nan_feel_cols = nan_df[(nan_df['percentage'] < 45) & (nan_df['percentage'] > 0)]['column'].unique()","3dcad43a":"obj_cols = new_df[nan_feel_cols].select_dtypes(include=['object']).columns\nfloat_cols = new_df[nan_feel_cols].select_dtypes(include=['float']).columns","d2ddf100":"new_df[obj_cols] = new_df[obj_cols].fillna('None')","a65df5a1":"for col in float_cols:\n    new_df[col] = new_df[col].fillna(new_df[col].mode().iloc[0])","fc2e26cb":"new_df.head()","de4f53c1":"# All houses sold between 2006-2010, with significant drop in 2010\nsns.countplot(new_df['YrSold']);","973341f8":"# Most of the houses are built after 1950, with significant rise in 2000\nsns.distplot(new_df['YearBuilt']);","7bb410ec":"sns.distplot(new_df['LotFrontage']);","a65a6c69":"sns.distplot(new_df['LotArea']);","16076c40":"for obj in obj_cols:\n    print(obj)\n    print(new_df[obj].unique())","eeb0ca99":"new_df_1 = pd.get_dummies(new_df)","48e597bc":"new_df_1.head()","90a8146e":"train_df_1 = new_df_1[:train_idx]\ntest_df_1 = new_df_1[train_idx:]","df35057b":"rf = RandomForestRegressor(max_depth=40, min_samples_leaf=3, min_samples_split=8,\n                           n_estimators=5000, random_state=17)","65a1e2a9":"rf.fit(train_df_1, labels)","4b81a631":"lgbm = LGBMRegressor(bagging_fraction=0.75, bagging_freq=5, bagging_seed=7,\n               feature_fraction=0.4, learning_rate=0.01, max_bin=200,\n               n_estimators=5000, num_leaves=8, objective='regression')","ac8fe834":"lgbm.fit(train_df_1, labels, eval_metric='rmse')","dcda412d":"model = CatBoostRegressor(random_seed=17, depth=6, iterations=5000, learning_rate=0.01)","2c19cb54":"model.fit(train_df_1, labels)","72a8a928":"xgb = XGBRegressor(booster='gbtree', colsample_bylevel=1,\n             colsample_bynode=1, colsample_bytree=0.6, gamma=0,\n             importance_type='gain', max_delta_step=0,\n             n_jobs=1, nthread=None, objective='reg:squarederror',\n             reg_alpha=0.6, reg_lambda=0.6, scale_pos_weight=1, \n             silent=None, subsample=0.8, verbosity=1, learning_rate=0.1,\n             n_estimators=2500)","77501cd4":"xgb.fit(train_df_1, labels)","6e8a368b":"preds1 = rf.predict(test_df_1)","76bef014":"pred2 = lgbm.predict(test_df_1)","1963b0b1":"pred3 = model.predict(test_df_1)","dd35c427":"pred4 = xgb.predict(test_df_1)","db4824eb":"preds = (preds1 + pred2 + pred3 + pred4) \/ 4","92ccaace":"sub_csv = pd.DataFrame({\n        \"Id\": test_df[\"Id\"],\n        \"SalePrice\": preds\n    })","e13420b0":"sub_csv.to_csv('submission.csv', index=False)","f572cccf":"Let's plot co-relation between labels and some features","39d489b9":"Below parameters are set after grid search","d4f75053":"# Let's try different regression models with GridsearchCV","cf74b359":"Let's check what values are available in these columns","ada53a06":"# Let's look through data","f5b3a909":"Let's drop these columns","eacf0a0c":"# Predict","87ab446d":"   # Let's check out the NaN values from each column","dd3f3c90":"Separate out 'SalePrice' column as labels and concat 2 dataframes and preprocess together."}}