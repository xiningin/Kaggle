{"cell_type":{"7c65ddb4":"code","99f93e60":"code","aa5c849d":"code","5d6cc584":"code","615a08c5":"code","b2e50aa1":"code","bc30c3a1":"code","919213c2":"markdown","22963c04":"markdown","f59076d0":"markdown","56650cca":"markdown","685ffd95":"markdown","98a6d798":"markdown","488442b0":"markdown","6b99dfdc":"markdown","4c364e27":"markdown"},"source":{"7c65ddb4":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex3 import *\nprint(\"Setup Complete\")","99f93e60":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"hacker_news\" dataset\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"comments\" table\ntable_ref = dataset_ref.table(\"comments\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"comments\" table\nclient.list_rows(table, max_results=5).to_dataframe()","aa5c849d":"# Query to select prolific commenters and post counts\n\nprolific_commenters_query = \"\"\"\n                            SELECT author, COUNT(1) AS NumPosts\n                            FROM `bigquery-public-data.hacker_news.comments`\n                            GROUP BY author\n                            HAVING COUNT(1) > 10000\n                            \"\"\" # Your code goes here\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(prolific_commenters_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nprolific_commenters = query_job.to_dataframe()\n\n# View top few rows of results\nprint(prolific_commenters.head())\n\n# Check your answer\nq_1.check()","5d6cc584":"q_1.solution()","615a08c5":"# Write your query here and figure out the answer\n# Query to determine how many posts were deleted\ndeleted_posts_query = \"\"\"\n                      SELECT COUNT(1) AS num_deleted_posts\n                      FROM `bigquery-public-data.hacker_news.comments`\n                      WHERE deleted = True\n                      \"\"\"\n\n# Set up the query\nquery_job = client.query(deleted_posts_query)\n\n# API request - run the query, and return a pandas DataFrame\ndeleted_posts = query_job.to_dataframe()\n\n# View results\nprint(deleted_posts)","b2e50aa1":"num_deleted_posts = 227736 # Put your answer here  \n\n# Check your answer\nq_2.check()","bc30c3a1":"q_2.solution()","919213c2":"**This notebook is an exercise in the [SQL](https:\/\/www.kaggle.com\/learn\/intro-to-sql) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/dansbecker\/group-by-having-count).**\n\n---\n","22963c04":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161314) to chat with other Learners.*","f59076d0":"### 2) Deleted comments\n\nHow many comments have been deleted? (If a comment was deleted, the `deleted` column in the comments table will have the value `True`.)","56650cca":"# Introduction\n\nQueries with **GROUP BY** can be powerful. There are many small things that can trip you up (like the order of the clauses), but it will start to feel natural once you've done it a few times. Here, you'll write queries using **GROUP BY** to answer questions from the Hacker News dataset.\n\nBefore you get started, run the following cell to set everything up:","685ffd95":"The code cell below fetches the `comments` table from the `hacker_news` dataset.  We also preview the first five rows of the table.","98a6d798":"# Exercises\n\n### 1) Prolific commenters\n\nHacker News would like to send awards to everyone who has written more than 10,000 posts. Write a query that returns all authors with more than 10,000 posts as well as their post counts. Call the column with post counts `NumPosts`.\n\nIn case sample query is helpful, here is a query you saw in the tutorial to answer a similar question:\n```\nquery = \"\"\"\n        SELECT parent, COUNT(1) AS NumPosts\n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY parent\n        HAVING COUNT(1) > 10\n        \"\"\"\n```","488442b0":"For the solution, uncomment the line below.","6b99dfdc":"For the solution, uncomment the line below.","4c364e27":"# Keep Going\n**[Click here](https:\/\/www.kaggle.com\/dansbecker\/order-by)** to move on and learn about the **ORDER BY** clause."}}