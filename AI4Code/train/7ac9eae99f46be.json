{"cell_type":{"b92ecf50":"code","3e2dc2a7":"code","de710ca5":"code","f8f103e4":"code","5eb3437a":"code","75c3ad45":"code","976b4f82":"code","d1eb37c4":"markdown","71ce4082":"markdown","a709fc02":"markdown"},"source":{"b92ecf50":"!pip install nyaggle\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom nyaggle.experiment import run_experiment\nfrom tqdm.notebook import tqdm\nimport os\n%matplotlib inline\n","3e2dc2a7":"train = pd.read_csv('\/kaggle\/input\/seti-breakthrough-listen\/train_labels.csv')\ntest = pd.read_csv('\/kaggle\/input\/seti-breakthrough-listen\/sample_submission.csv')\n\ndef get_file_path(image_id: str, train_or_test: str, data_dir: str = '\/kaggle\/input\/seti-breakthrough-listen\/') -> str:\n    return os.path.join(data_dir, train_or_test, image_id[0], f\"{image_id}.npy\")\n\ntrain['type'] = 'train'\ntest['type'] = 'test'\n#train = train[:100]\n#test = test[:100]\ndf = pd.concat([train, test]).reset_index(drop=True)\nmean = []\nstd = []\nminv = []\nmaxv = []\nnuniq = []\n\nfor i, row in tqdm(df.iterrows()):\n    arr = np.load(get_file_path(row.id, row.type))[[0,2,4],:,:].astype(float)\n    mean.append(np.mean(arr))\n    std.append(np.std(arr))\n    minv.append(np.min(arr))\n    maxv.append(np.max(arr))\n    nuniq.append(len(np.unique(arr)))\n    \ndf['mean'] = mean\ndf['std'] = std\ndf['min'] = minv\ndf['max'] = maxv\ndf['nuniq'] = nuniq\n\ndf.to_csv('seti-stats.csv', index=False)","de710ca5":"fig, axes = plt.subplots(1, 2, figsize=(16,7))\n\naxes[0].set_xlim(-0.0001, 0.0001)\naxes[0].set_title('mean of image')\naxes[1].set_xlim(0.99998, 1.00002)\naxes[1].set_title('std of image')\n\nsns.distplot(df[df['type']=='train']['mean'], label='train', ax=axes[0])\nsns.distplot(df[df['type']=='test']['mean'], label='test', ax=axes[0])\n\nsns.distplot(df[df['type']=='train']['std'], label='train', ax=axes[1])\nsns.distplot(df[df['type']=='test']['std'], label='test', ax=axes[1])\n\nplt.legend()","f8f103e4":"fig, axes = plt.subplots(1, 2, figsize=(16,7))\n\naxes[0].set_xlim(-10, 1)\naxes[0].set_title('min of image')\naxes[1].set_xlim(-5, 50)\naxes[1].set_title('max of image')\n\nsns.distplot(df[df['type']=='train']['min'], label='train', ax=axes[0])\nsns.distplot(df[df['type']=='test']['min'], label='test', ax=axes[0])\n\nsns.distplot(df[df['type']=='train']['max'], label='train', ax=axes[1])\nsns.distplot(df[df['type']=='test']['max'], label='test', ax=axes[1])\n\nplt.legend()","5eb3437a":"fig, axes = plt.subplots(1, 2, figsize=(16,7))\n\naxes[0].set_xlim(8000, 20000)\naxes[0].set_title('nuniq of image')\n\nsns.distplot(df[df['type']=='train']['nuniq'], label='train', ax=axes[0])\nsns.distplot(df[df['type']=='test']['nuniq'], label='test', ax=axes[0])\n\n\nplt.legend()","75c3ad45":"params = {\n    'objective': 'binary',\n    'metrics': 'auc',\n    'n_estimators': 300\n}\nfeatures = ['mean', 'std', 'min', 'max', 'nuniq']\n\nX_train = df[features]\n\ny_train = np.zeros(len(df))\ny_train[df['type'] == 'test']=1\nX_test = df[df['type'] == 'test'][features]\nresult = run_experiment(params, X_train, y_train, X_test, fit_params={'verbose': 50})","976b4f82":"print(f'OOF SCORE: {result.metrics[-1]}')","d1eb37c4":"# Train vs. Test lightGBM\n\nIn this notebook I showed simple statistical features can discriminate train and test set (ROC: 0.85).\n\nI used the idea and code from these Notebook and discussion\n* https:\/\/www.kaggle.com\/c\/seti-breakthrough-listen\/discussion\/254441\n* https:\/\/www.kaggle.com\/nyanpn\/yet-another-leakage-lb0-995","71ce4082":"## Modeling","a709fc02":"## Visualize basic statistics"}}