{"cell_type":{"5a4c7889":"code","06d6687b":"code","b2a7a04f":"code","6b8ee505":"code","5276c9fb":"code","d234581c":"code","0520e86a":"code","8740010d":"code","c8b3fca8":"code","232ff863":"code","531c47f2":"code","219f6c8e":"code","4422c64f":"code","127b7628":"markdown","bbaef8f4":"markdown","c61ce9dd":"markdown","1f055331":"markdown","e2982d5f":"markdown"},"source":{"5a4c7889":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","06d6687b":"import pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\nimport tifffile as tiff\nimport os\n","b2a7a04f":"train = pd.read_csv('\/kaggle\/input\/hubmap-kidney-segmentation\/train.csv')\ntrain.head()","6b8ee505":"data_info = pd.read_csv('\/kaggle\/input\/hubmap-kidney-segmentation\/HuBMAP-20-dataset_information.csv')\ndata_info.head()","5276c9fb":"sns.countplot(data_info['race'])\nplt.show()","d234581c":"sns.countplot(data_info['laterality'])\nplt.show()","0520e86a":"sns.countplot(data_info['ethnicity'])\nplt.show()","8740010d":"sns.distplot(data_info['age'])\nplt.show()","c8b3fca8":"sns.distplot(data_info['weight_kilograms'])\nplt.show()","232ff863":"sns.distplot(data_info['height_centimeters'])\nplt.show()","531c47f2":"sns.distplot(data_info['bmi_kg\/m^2'])\nplt.show()","219f6c8e":"data_info.corr()","4422c64f":"img = tiff.imread('..\/input\/hubmap-kidney-segmentation\/train\/aaa6a05cc.tiff')\nimg_array = np.array(img)\nplt.imshow(img) ","127b7628":"## correlation matrix","bbaef8f4":"# To be cont... ","c61ce9dd":"## CSV file exploration\n`train.csv `contains the unique IDs for each image, as well as an RLE-encoded representation of the mask for the objects in the image. See the evaluation tab for details of the RLE encoding scheme.","1f055331":"## EDA ","e2982d5f":"`HuBMAP-20-dataset_information.csv` this csv file contains all the information about the images and dataset, Let us see some here  "}}