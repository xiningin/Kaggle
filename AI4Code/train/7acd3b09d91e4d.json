{"cell_type":{"46f53769":"code","c412e28d":"code","ba94920b":"code","05e341e5":"code","28d75025":"code","3983a663":"code","ddcddab8":"code","73eac632":"code","86218c43":"code","71c2cc32":"code","a8e5d35d":"code","449a7ae8":"code","26eb9d6e":"code","8f4293fd":"code","a4cba174":"code","a0f78e65":"code","9f6fd459":"code","c7fdece2":"code","a9faa65b":"code","d38b759a":"code","6c45816d":"code","cede903b":"code","ee5a8ed4":"code","98a079d3":"code","779f98e1":"code","904c8274":"code","5e54e79a":"code","e006fba6":"code","772cedc5":"code","4bf65fb6":"code","389b42f3":"code","4fd58fb6":"markdown","8cd57b0d":"markdown","57981b9b":"markdown","f06ffeb4":"markdown","1cefa500":"markdown","d0fffaf8":"markdown","09552628":"markdown","cfeaa8a5":"markdown","9f0e34f2":"markdown","d0df02e1":"markdown","ef60da97":"markdown","61b87946":"markdown","54d071c6":"markdown","64b0c69b":"markdown","9aa9cf88":"markdown","f890d1e9":"markdown","725253b4":"markdown","a20b864c":"markdown","920487e0":"markdown","42446fe6":"markdown","fc1d21f7":"markdown","59792938":"markdown","30fb6793":"markdown","1822ba9f":"markdown","ac8f74cb":"markdown","4e12f934":"markdown","188df361":"markdown","50637087":"markdown","28e712c3":"markdown","4de30cba":"markdown","56da5f2e":"markdown","c63ca232":"markdown","0d60e655":"markdown","918815d2":"markdown","214f4876":"markdown","3b52bd45":"markdown","52d161b4":"markdown","c8fcb7ae":"markdown","64917095":"markdown","268e044c":"markdown","5027de28":"markdown","7e1999c4":"markdown","5cedf43b":"markdown","53eb30ea":"markdown","c853bd48":"markdown","819d1616":"markdown","531a9c20":"markdown","59fa121b":"markdown","0eee73bf":"markdown","28627ab8":"markdown","bc197f5f":"markdown","f5feccb5":"markdown"},"source":{"46f53769":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c412e28d":"data = pd.read_excel ('\/kaggle\/input\/ipl-2020-dataset-dubai\/Ipl_2020.xlsx')","ba94920b":"data.head()","05e341e5":"print(\"Rows = {0}, Columns = {1}\".format(data.shape[0],data.shape[1]))","28d75025":"data.describe()","3983a663":"data.info()","ddcddab8":"data=data.rename(columns={'Match No':'Match_No','Match in FullForm': 'Match_FullForm','Time India (IST)':'Time_India(IST)','Time UAE':'Time_UAE','Toss Winner':'Toss_Winner','Toss Decision':'Toss_Decision',\"Team-1\":\"Team1\",\"Team-2\":\"Team2\"})\ndata.columns","73eac632":"data.isnull().sum()","86218c43":"data.columns","71c2cc32":"for col in data:\n    print(data[col].unique())","a8e5d35d":"plt.figure(figsize=(12,5))\nsns.heatmap(data.isnull(),yticklabels=False, annot=True)\nplt.xticks(size=15)\nplt.show()","449a7ae8":"plt.figure(figsize=(12,7))\nax = sns.countplot(\"winner\", data = data,order = data['winner'].value_counts().index,palette='viridis')\nplt.title(\"Total number of wins by each team till 2020\",size=18)\nplt.xticks(rotation=45, ha = 'right',size=13)\nplt.yticks(np.arange(13, step=2),size=13)\nplt.xlabel('Teams',size=15)\nplt.ylabel('Number of matches',size=15)\n\n\ndef annotation_plot(ax,w,h):                                    # function to add data to plot\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    for p in ax.patches:\n        ax.annotate('{0:.1f}'.format(p.get_height()), (p.get_x()+w, p.get_height()+0.2))\nannotation_plot(ax,0.08,1)\n\nplt.show()\n","26eb9d6e":"plt.figure(figsize=(15,8))\nax = sns.countplot(\"Venue\", data = data,hue='winner',palette='rocket',saturation=60.75)\nplt.title(\"Winning rate of each team in different Venues\",size=18)\nplt.xticks(rotation=45, ha = 'right',size=13)\nplt.yticks(size=13)\nplt.xlabel('Venue',size=15)\nplt.ylabel('Winning rate',size=15)\n\ndef annotation_plot1(ax,w,h):                                    # function to add data to plot\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    for p in ax.patches:\n        ax.annotate('{0:.1f}'.format(p.get_height()), (p.get_x(), p.get_height()+0.1))\nannotation_plot1(ax,3.28,1)\n\nplt.grid()\nplt.show()","8f4293fd":"plt.figure(figsize=(4,4))\nplt.title(\"Occurance of Super Over in IPL Venues\",size=18)\nsns.barplot(x='Venue',y='Super Over',hue='Venue',data=data,palette='cool');\nplt.yticks(np.arange(0.5, step=0.1),size=12)\nplt.xticks(size=10)\nplt.ylabel('No of Super Over',size=12)\nplt.xlabel('Venue',size=12)\nplt.grid()\nplt.xticks(rotation=45, ha = 'right')\nplt.show()","a4cba174":"team_wins = data['Toss_Winner'].value_counts()\n\nteam_wins_df = pd.DataFrame(columns=[\"team\", \"tosswins\"])\nfor items in team_wins.iteritems():\n    temp_df1 = pd.DataFrame({\n        'team':[items[0]],\n        'tosswins':[items[1]]\n    })\n    team_wins_df = team_wins_df.append(temp_df1, ignore_index=True)","a0f78e65":"team_wins_df","9f6fd459":"plt.figure(figsize=(12,7))\nplt.title(\"Team wise total toss wins\",size=20)\nax=sns.barplot(x='team', y='tosswins', data=team_wins_df, palette='inferno',saturation=90.75)\nplt.xlabel('Teams',size=15)\nplt.ylabel('No of Toss wins',size=15)\nplt.yticks(np.arange(12, step=1),size=13)\nplt.xticks(size=13)\ndef annotation_plot(ax,w,h):                                    # function to add data to plot\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    for p in ax.patches:\n        ax.annotate('{0:.0f}'.format(p.get_height()), (p.get_x()+w, p.get_height()+0.2))\nannotation_plot(ax,0.19,1)\n\nplt.grid()\nplt.show()","c7fdece2":"mvp_ser = data['player_of_the_match'].value_counts()\n\nmvp_ten_df = pd.DataFrame(columns=[\"player\", \"wins\"])\ncount = 0\nfor items in mvp_ser.iteritems():\n    temp_df2 = pd.DataFrame({\n            'player':[items[0]],\n            'wins':[items[1]]\n        })\n    mvp_ten_df = mvp_ten_df.append(temp_df2, ignore_index=True)                        #Gets Players details based No of times Player of match title\n    count += 1    ","a9faa65b":"#mvp_ten_df","d38b759a":"plt.figure(figsize=(12,12))\nplt.title(\"Players who won 'Player of the Match'\",size=20)\nax=sns.barplot(x='wins', y='player', data=mvp_ten_df, palette='magma',saturation=20.75);\nplt.xticks(np.arange(4, step=1),size=15)\nplt.xlabel(\"No of Man of the match\",size=15)\nplt.yticks(size=13)\nplt.ylabel(\"Players\",size=15)\n\nplt.grid()\nplt.show()","6c45816d":"mvp_ser = data['player_of_the_match'].value_counts()  \n\nmvp_ten_df = pd.DataFrame(columns=[\"player\", \"wins\"])\ncount = 0\nfor items in mvp_ser.iteritems():\n    if count>9:\n        break\n    else:\n        temp_df2 = pd.DataFrame({\n                'player':[items[0]],\n                'wins':[items[1]]\n            })\n        mvp_ten_df = mvp_ten_df.append(temp_df2, ignore_index=True)                             #Gets Top 10 Players based No of Time Player of match title\n        count += 1   ","cede903b":"plt.figure(figsize=(12,7))\nplt.title(\"Top 10 Best Performer in 2020 IPL\",size=20)\nsns.barplot(x='wins', y='player', data=mvp_ten_df, palette='magma',saturation=20.75);\nplt.xticks(np.arange(4, step=1),size=13)\nplt.yticks(size=13)\nplt.xlabel(\"No of Man of the match\",size=1)\n\nplt.ylabel(\"Players\",size=15)\n\nplt.grid()\nplt.show()","ee5a8ed4":"plt.figure(figsize=(13,7))\nax = sns.countplot(\"winner\", data = data, hue = 'Toss_Decision',order = data['winner'].value_counts().index,palette='Greens_d',saturation=100.75)\nplt.title(\"Rate of winning based on the toss decision(Field\/Bat)\",size=20)\nplt.xticks(rotation=45, ha = 'right',size=15)\nplt.yticks(np.arange(6, step=1),size=13)\nplt.ylabel('Winning Rate',size=20)\nplt.xlabel('Teams',size=20)\n\nannotation_plot(ax,0.03,1)\nplt.show()","98a079d3":"plt.figure(figsize=(7,4))\nsns.boxplot(x='winner', y='win_by_runs', data=data,palette='viridis')\nplt.title(\"Each team Won by Runs\",size=20)\nplt.xticks(rotation=45, ha = 'right',size=15)\nplt.xlabel('Teams',size=20)\nplt.show()","779f98e1":"plt.figure(figsize=(7,4))\nsns.boxplot(x='winner', y='win_by_wickets', data=data,palette='YlOrBr')\nplt.title(\"Each team Won by wickets\",size=20)\nplt.xticks(rotation=45, ha = 'right',size=15)\nplt.xlabel('Teams',size=20)\nplt.show()","904c8274":"plt.figure(figsize=(15,5))\nsns.set(style=\"darkgrid\",palette='deep')\nsns.violinplot(x=\"winner\", y='win_by_runs', data=data,inner=None, color=\".8\")\na=sns.stripplot(x=\"winner\", y=\"win_by_wickets\",hue=\"win_by_wickets\",data=data,size = 9,jitter=0.25)\na.legend(title=\"win by wickets\",loc=\"center\", bbox_to_anchor=(1.06, 0.73), ncol=1)\nplt.xticks(rotation=45, ha = 'right',size=15)\nplt.yticks(size=15)\nplt.xlabel('Teams',size=17)\nplt.ylabel('win_by_runs',size=17)\nplt.title('Win by Runs and Win by Wickets Team wise',size=20)\nplt.show()","5e54e79a":"h2h_counts= data.groupby('Match').apply(lambda x:x['Match'].count()).reset_index(name='Match Counts')\ntop_h2h_order=h2h_counts.sort_values(by='Match Counts',ascending=False)\ntop_h2h=top_h2h_order[:10]\n#print('Head to Head Rivalry\\n',top_h2h)\nplt.figure(figsize=(7,7))\nplt.pie(top_h2h['Match Counts'],labels=top_h2h['Match'],autopct='%1.1f%%', startangle=30)\nplt.axis('on')\nplt.title('Top 10 most head to head Rivalry Matches Played',size=20)\n\nplt.show()","e006fba6":"a_list = data['win_by_runs'].tolist()#win_by_runs\na_list=[x + 80 for x in a_list]\nplt.figure(figsize=(12,10))\nax = sns.scatterplot(x=\"Match_No\",y='Match',s=200,data = data,hue=\"winner\",palette='viridis')\nax.text(60.7,50, \"IPL 2020 Final Match(MI vs DC)\", horizontalalignment='left', size='medium', color='black', weight='semibold')\nax.text(56.7,52, \"Eliminator Match(RCB vs SRH)\", horizontalalignment='left', size='medium', color='black', weight='semibold')\nax.text(50,27, \"Qualifer 1 Match(DC vs MI)\", horizontalalignment='left', size='medium', color='black', weight='semibold')\nax.text(48,11, \"Qualifer 2 Match(DC vs SRH)\", horizontalalignment='left', size='medium', color='black', weight='semibold')\nplt.title(\"Match wise analysis of match results\",size=18)\nplt.xticks(np.arange(60, step=2),size=15)\nplt.yticks(size=10)\nplt.xlabel('Match No',size=15)\nplt.ylabel('Matchs',size=15)\nax.legend(loc=\"center\", bbox_to_anchor=(1.08, 0.33), ncol=1)\nplt.show()\n","772cedc5":"plt.figure(figsize=(15,7))\nax = sns.lineplot(x=\"Match\",y='Match_No',data = data,hue=\"winner\",style=\"Super Over\",palette='magma',markers=True,markersize=12,dashes=False,err_style=\"bars\")\nax.text(24.7,61, \"IPL 2020 Final Match(MI vs DC)\", horizontalalignment='left', size='medium', color='green', weight='semibold')\nax.text(7,59.9, \"Qualifer 2 Match(DC vs SRH)\", horizontalalignment='left', size='medium', color='darkblue', weight='semibold')\nax.text(45.9,58, \"Eliminator Match(RCB vs SRH)\", horizontalalignment='left', size='medium', color='red', weight='semibold')\nax.text(28.7,50, \"Qualifer 1 Match(DC vs MI)\", horizontalalignment='left', size='medium', color='blue', weight='semibold')\nax.text(48.7,5, \"X is Super Over\", horizontalalignment='left', size='medium', color='black', weight='semibold')\nplt.title(\"Complete Report of the IPL 2020 Tournment\",size=18)\nplt.xticks(rotation=45, ha = 'right',size=10)\nplt.yticks(np.arange(60, step=5),size=15)\nplt.xlabel('Matchs',size=15)\nplt.ylabel('Match no',size=15)\nax.legend(title=\"win by wickets\",loc=\"center\", bbox_to_anchor=(1.06, 0.53), ncol=1)\nplt.show()\n","4bf65fb6":"match=data.groupby(['Match','winner']).apply(lambda x:x['winner'].count()).reset_index(name='Match Wins')\nmatch_pvt=pd.pivot(match,values='Match Wins',index='Match',columns='winner')\nmatch_pvt.replace(np.NaN,0)\nplt.figure(figsize=(10,12))\nhtmp=sns.heatmap(match_pvt,annot=True,fmt='g',cmap='plasma')\nplt.xlabel('Teams',size=17)\nplt.ylabel('Matches',size=25)\nplt.title('Match results with win count Team wise',size=20)\nplt.show()","389b42f3":"venue_win=data.groupby(['Venue','winner']).apply(lambda x:x['winner'].count()).reset_index(name='Match Wins')\nvenue_win_pvt=pd.pivot(venue_win,values='Match Wins',index='Venue',columns='winner')\nvenue_win_pvt.replace(np.NaN,0)\nplt.figure(figsize=(20,6))\nhtmp=sns.heatmap(venue_win_pvt,annot=True,fmt='g',cmap='inferno_r')\nplt.xticks(size=13)\nplt.yticks(size=13)\nplt.xlabel('Teams',size=17)\nplt.ylabel('Venues',size=17)\nplt.title('Team wise win count at the Venues',size=20)\n\nplt.show()","4fd58fb6":"###### <font color='blue'>Observation : A Violin Plot is used to visualise the distribution of the data and its probability density.Violin plot is similar to Box Plot, and strip plot is scattering data in graph.In the above graph scatter plot is representing win by wickets and violin plot is for representing win by runs.","8cd57b0d":"# Unique data of each column for better understanding the dataset","57981b9b":"# Scatter Plot : Match Results analysis ","f06ffeb4":"# HeatMap : Team wise win count at the Venues","1cefa500":"###### <font color='blue'>Observation : Top most qaurtile called Third qaurtile(Q3)\/75th Percentile is representing maximum number of winning runs or wickets, at bottom first quartile(Q1)\/25th Percentile is least number of winning runs or wickets and Middle enlongated part is called interquartile range(IQR)\/Q2\/50th Percentile representing the median of dataset that it is it gives stats of 50 percentile(middle values) of your whole dataset, IQR lie 25th to the 75th percentile.","d0fffaf8":"# Renaming the columns name","09552628":"# Columns Description","cfeaa8a5":"# Bar Plot : Players who won 'Player of the Match' and it's count","9f0e34f2":"# Bar Plot : Top 10 Best Performer in 2020 IPL","d0df02e1":"# Countplot : Winning rate of each team in different Venues.","ef60da97":"# Boxplot : Each team Won by Runs  & Won by Wickets","61b87946":"# <font color='red'> Importing libraries, Loading data, and Cleaning data<\/font> ","54d071c6":"###### <font color='blue'>Observation :MI vs DC, DC vs SRH, RCB vs SRH has high rate of head to head match played each other in this season.","64b0c69b":"# Count plot : Analysing team with the most number of wins in IPL season 13.","9aa9cf88":"# <font color='red'>Wrap Up<\/font>\n\n### <i>Let's summarize key observations & interesting insights we made during Exploratory Data Analysis:<\/i>\n\n\n### <i> Mumbai Indians(MI) is the team with most number of wins in the season 13, followed by Delhi Capitals(DC) at second                        position <\/i>\n\n### <i> Abu Dhabi has more winning rate, MI has highest and SRH has lowest win rate.<\/i>\n   ### <i> In Dubai RR has lowest winning rate.<\/i>\n   ### <i> In Sharjah CSK leads the winning rate and DC has lowest win rate.<\/i>\n  \n### <i> Dubai Stadium has witnessed highest number of Super Over and Sharjah being the least.<\/i>\n\n### <i> SRH has won the most number of toss.<\/i>\n\n### <i> KL Rahul, Ruturaj Gaikwad and AB de villiers has won maximum number of player of match award.<\/i>\n\n### <i> SRH has high rate of win when they choose to bat first.<\/i>\n\n### <i> MI vs DC, DC vs SRH, RCB vs SRH has high rate of head to head match played each other in this season.<\/i>\n\n### <i> In AbuDhabi MI has highest win count(6 wins) and KXIP has least win count(0 wins).<\/i>\n\n### <i> In Dubai RR has Least win record (1 win) and KKR  is second least win count holder(2 wins<\/i>\n\n### <i> In Sharjah CSK and KKR has Least win count(0 wins) and DC is the highest win count holder(3 wins)<\/i>","f890d1e9":"# Shape of the Data","725253b4":" #   Data description","a20b864c":"##### The <a href=\"https:\/\/www.kaggle.com\/rakshit17p\/ipl-2020-dataset-dubai\"> dataset <\/a> consist of data about IPL match played in 2020. IPL is a professional Twenty20 cricket league founded by the Board of Control for Cricket in India (BCCI) in 2008. \n\n##### The league consists of 8 teams representing 8 different Indian cities or states, also has  tremendous popularity all over the world.","920487e0":"###### <font color='blue'>Observation : We used Heat map here to see the win count of Team when it's played on other teams. As we can see there are many 1's that indicates team 1(X axis) has beaten team 2 once when there was a match team 1 vs team 2(Yaxis) and there are few 2's that indicates team 1 has won twice when team 1 vs team 2 was played.","42446fe6":"#  Top 5 rows","fc1d21f7":"###### <font color='blue'>Observation :This is Complete Statistic Report contains most of information insights, we have plotted in on basis of winner in the partcular match, each team contains unique colors,from the start of the season to knockout and knockout to final match results being analysed.Note: X represent Super Over match","59792938":"# Loading the data                              ","30fb6793":"###### <font color='blue'>Observation : In the above Scatterplot the data is distributed for analysis of match results with respect to the match number and Team1 vs Team2","1822ba9f":"# Pie Graph : Top Rivalry Matches analysis ","ac8f74cb":"# Importing the libraries","4e12f934":"###### <font color='blue'>Observation : In the above analysis, KXIP,RR,CSK has consistent rate of winning irrecpective of what they choose in toss though their rate of winning is low, but SRH has high variant when they choose to bat the rate of win is high compare to the matches they fielded first, same goes with DC, RCB has high win rate when they choose to bat first.","188df361":"# Data Info","50637087":"###### <font color='blue'>Observation : It is always better to check the null values before we proceed further, if the null values exists then we need to drop that values or replace with average value with respect to the data in the column. Here in this dataset we don't have null values","28e712c3":"# Retrieve column names","4de30cba":"###### <font color='blue'>Observation: In the above heatmap we can see there is no null values in any attribute of the dataset<\/font>","56da5f2e":"# BarPlot : Occurance of Super Over in IPL Venues","c63ca232":"###### <font color='blue'>Observation : In the above graph x axis presenting number of times the player has won player of match award and y axis presenting player names, in this analysis players named KL Rahul, Ruturaj Gaikwad and AB de villiers has maximum number of player of match award( ie 4 times) and followed by SuryaKumar Yadav, Shikar Dhawan, Ben Stokes, Anrich Nortje,Quinton de kock, Marcus stonis, Yuzvendra Chahal and Sanju Samson has won second highest times(ie 3 times) and rest players has got atmost 1 time.","0d60e655":"# <font color='red'>Exploratory Analysis and Visualization<\/font>\n## Now that our data set has under gone data preprocessing & ready to be used for analysis and visualization.","918815d2":"###### <font color='blue'>Observation : Toss plays vital role in any matches considering dew factor, By above bar graph, it's clear that SRH team has been lucky this season, as they are highest toss winner and KXIP are least times toss winner.","214f4876":"# Count plot : Rate of winning based on the toss decision(Field\/Bat)","3b52bd45":"# By <br>Thanuj Kumar S","52d161b4":"###### <font color='blue'>Observation : We can clearly see that Mumbai Indians(MI) is the team with most number of wins in the season 13, followed by Delhi Capitals(DC) at second position","c8fcb7ae":"# Violinplot and Stripplot: Analysis of Win by Runs and Win by Wickets Team wise \n","64917095":"# Heat Map: Match results with win count ","268e044c":"# Checking null value","5027de28":"### <font color='red'>The dataset has 19 columns<\/font>\n\n<b><font color='red'>Match_No<\/font>  : Number of Matches <br>\n<font color='red'>Match<\/font> : Which team verses which team(Shortform) <br>\n<font color='red'>Match_FullForm<\/font> : Which team verses which team(Fullform) <br>\n<font color='red'>Date<\/font> : Date of match played <br>\n<font color='red'>Day<\/font> : Day of match played <br>\n<font color='red'>Time_India (IST)<\/font> : Match Time in Indian standard time <br>\n<font color='red'>Time_UAE<\/font> : Match Time in United Arab Emirates <br>\n<font color='red'>Venue<\/font> :  Venue(Stadium) where matches played\t <br>\n<font color='red'>Team1<\/font> : One of the current IPL Team \t <br>\n<font color='red'>Team2<\/font> :\tOne of the current IPL Team  <br>\n<font color='red'>Toss_Winner<\/font>: Team which won the toss <br>\n<font color='red'>Toss_Decision<\/font> : Toss winner's decision to Bat\/Field\t <br>\n<font color='red'>dl_applied<\/font> : (1 or 0)indicates whether the Duckworth-Lewis rule was applied or not. <br>\n<font color='red'>winner<\/font> :  The winner of the match. <br>\n<font color='red'>win_by_wickets<\/font> : Provides the number of wickets by which the team batting second won. <br>\n<font color='red'>win_by_runs<\/font>\t: Provides the runs by which the team batting first won <br>\n<font color='red'>player_of_the_match<\/font> : Game Changing play from player gets this award <br>\n<font color='red'>Result<\/font> : The result of the match (\u2018normal\u2019, \u2018tie\u2019) <br>\n<font color='red'>Super Over<\/font> : One Over Eliminator,determine the winner of a limited-overs match in case the scores of both teams at the end of the match are tied<br>","7e1999c4":"###### <font color='blue'>Observation : Dubai Stadium has witnessed highest number of Super Over and Sharjah being the least.","5cedf43b":"###### <font color='blue'>Observation : Abu Dhabi has more winning rate, MI has highest and SRH has lowest win rate in Abu Dhabi,In Dubai all the teams has in average same winning rate except RR, RR has lowest win rate in Dubai,coming to Sharjah CSK leads the winning rate and all other teams has same winning rate, but DC has lowest win rate.<\/font>","53eb30ea":"### Boxplots are a standardized way of displaying the distribution of data based quartile (\u201cminimum\u201d, first quartile (Q1), median, third quartile (Q3), and \u201cmaximum\u201d).","c853bd48":"# BarPlot : Total toss won by Teams","819d1616":"# Author details \n\n## Author : Thanuj Kumar S\n## GitHub :  <a href=\"https:\/\/github.com\/MrThanuj\">My GitHub<\/a> \n## Linkedin :  <a href=\"https:\/\/www.linkedin.com\/in\/thanujkumar\/ \">My LinkedIn <\/a>\n## Instagram :<a href=\"https:\/\/www.instagram.com\/thanujkumar_s\/\">My Instagram <\/a>\n\n# <center><font color='green'>Happy Learning!!<\/font><\/center>","531a9c20":"###### <font color='blue'>Observation : Top 10 Best player is consider based on the frequently received player of match award. In the above graph x axis presenting number of times the player has won player of match award and y axis presenting player names, in this analysis players named KL Rahul, Ruturaj Gaikwad and AB de villiers has most number of player of match award( ie 4 times) and followed by SuryaKumar Yadav, Shikar Dhawan, Ben Stokes, Anrich Nortje,Quinton de kock, Marcus stonis, Yuzvendra Chahal and Sanju Samson has won second highest times(ie 3 times) ","59fa121b":"# Heat Map : Null values","0eee73bf":"#   <font color='blue'>                               <center>Exploratory Data Analysis of Indian Premier League 2020<\/center><\/font>\n","28627ab8":"### The 2020 Indian Premier League, also known as IPL 13 and branded as Dream11 Indian Premier League 2020, was the thirteenth season of the IPL, a professional Twenty20 cricket (T20) league established by the Board of Control for Cricket in India (BCCI) in 2007.\n### The tournament was played between 19 September 2020 to 10 November 2020 in the United Arab Emirates.","bc197f5f":"# LinePlot : Complete Report of the IPL 2020 Tournment","f5feccb5":"###### <font color='blue'>Observation : This Heat map clear insights on how many times the particular team as won in various Venues, in the graph there are three Venues and 8 teams, each team's win count is being analysed in individual Venues. \n<font color='blue'><b><i>AbuDhabi : MI has highest win count(6 wins) and KXIP has least win count(0 wins).<br>\nDubai  :  RR has Least win record (1 win) and KKR being second least win count holder(2 wins)<br>\nSharjah : CSK and KKR has Least win count(0 wins) and DC being the highest win count holder(3 wins)<\/i><\/font><\/b>\n"}}