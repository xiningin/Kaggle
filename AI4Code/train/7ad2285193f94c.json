{"cell_type":{"0665817f":"code","bd5f8959":"code","2faa2d81":"code","7207ec44":"code","f3253510":"code","af654858":"code","f8610394":"code","5e856418":"code","f33ae9c0":"code","24b063fa":"code","81249129":"code","2748ab30":"code","cbc8a127":"code","91ce9546":"code","c8e9ddc9":"code","14430e1d":"code","80bc87a8":"code","c47e8838":"code","0f1e6ff9":"code","1d9953a4":"code","f23dbc23":"code","1cccabe5":"code","b15e21fd":"code","d45bad46":"code","0947931a":"code","ce499740":"code","e55891c7":"code","e9693727":"code","e4b9ff47":"code","9b1fa612":"code","d69aa215":"markdown","46e455c4":"markdown","e4760540":"markdown","7d306be5":"markdown","f25fbd7d":"markdown","e04bf194":"markdown","9859341d":"markdown","f3558db3":"markdown","a0bb6502":"markdown","f4ee661e":"markdown","2739b3f7":"markdown","c23ed6ae":"markdown","4793eb11":"markdown","9f4b13b3":"markdown","51121024":"markdown","7370ede2":"markdown","17b9694f":"markdown","646569a3":"markdown","d06f70e8":"markdown","6a7a7cd7":"markdown","5fe332b3":"markdown","c299413e":"markdown","a45c2e43":"markdown","2dec81ca":"markdown","49066d6d":"markdown","350830f4":"markdown","4a57f940":"markdown"},"source":{"0665817f":"import pandas as pd \nimport seaborn as sns\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score, mean_squared_error","bd5f8959":"# import the data\ncars_data = pd.read_csv('\/kaggle\/input\/aqalds\/AQA-large-data-set.csv')\n\n# check the data has imported\ncars_data","2faa2d81":"# get the data types\ncars_data.info()","7207ec44":"# the PropulsionTypeId field is overwritten with the values from the list using the replace command\n# the replace list uses a colon to indicate what is to be replaced and a commas to separate the items\ncars_data['PropulsionType'] = cars_data['PropulsionTypeId'].replace({1: 'Petrol',\n                                                                       2: 'Diesel',\n                                                                       3: 'Electric', \n                                                                       7: 'Gas\/Petrol', \n                                                                       8: 'Electric\/Petrol'})\ncars_data","f3253510":"# use describe to check the CO2 feature\ncars_data['CO2'].describe()","af654858":"# display rows where CO2 is 0\ncars_data[cars_data['CO2']==0]","f8610394":"# Remove the zero rows by copying when it is not equal to 0\ncars_data=cars_data[cars_data['CO2']!=0].copy()\n\n# check the data\ncars_data","5e856418":"# display rows where EngineSize OR Mass is 0\ncars_data[(cars_data['EngineSize']==0) |(cars_data['Mass']==0)]","f33ae9c0":"# Removing these rows\ncars_data=cars_data[(cars_data['EngineSize']!=0) & (cars_data['Mass']!=0)].copy()\n\n# check the data\ncars_data","24b063fa":"# plot all possible scatter diagrams\nsns.pairplot(cars_data, x_vars=['EngineSize', 'Mass', 'CO', 'NOX', 'part', 'hc'], y_vars=['CO2']);","81249129":"# create a list for the target and define y\ntarget = 'CO2'\ny = cars_data[target]\n\n# create an array of all the input features and define the X\nall_features=['EngineSize', 'Mass', 'CO', 'NOX', 'part', 'hc']\nX_all=cars_data[all_features]\n\n# perform the training-testing split\nX_all_train, X_all_test, y_all_train, y_all_test = train_test_split(X_all, y, train_size=0.8, random_state=1)\n\n# display the length of the lists to check \nprint(\"Size of X_all_train: \",X_all_train.shape)\nprint(\"Length of y_all_train: \",len(y_all_train))\nprint(\"Size of X_all_test: \",X_all_test.shape)\nprint(\"Length of y_all_test: \",len(y_all_test))","2748ab30":"# Define the input features\ninput_features=['EngineSize']\n\n# create the model\nlinear_model_engine = LinearRegression().fit(X_all_train[input_features], y_all_train)\n\n# display the parameters - output the coefficients and y-intercept\nprint('Coefficients: ', linear_model_engine.coef_)\nprint('Intercept: ', linear_model_engine.intercept_)","cbc8a127":"# create a list of the predictions\ny_pred = linear_model_engine.predict(X_all_test[input_features])\n\n# give the R\u00b2 score and MSE for the predictions\nprint('R\u00b2: ',r2_score(y_all_test, y_pred))\nprint('RMSE: ',mean_squared_error(y_all_test, y_pred, squared=False))","91ce9546":"# Define the input features\ninput_features=['Mass']\n\n# create the model\n\n\n# display the parameters - output the coefficients and y-intercept\n","c8e9ddc9":"# create a list of the predictions\n\n\n# give the R\u00b2 score and MSE for the predictions\n","14430e1d":"# Define the input features\ninput_features=['EngineSize','Mass']\n\n# create the model\n\n\n# display the parameters - output the coefficients and y-intercept\n\n\n","80bc87a8":"# create a list of the predictions\n\n\n# give the R\u00b2 score and MSE for the predictions\n","c47e8838":"sns.relplot(data=cars_data, x=\"Mass\", y=\"CO2\", hue=\"PropulsionType\", aspect=2);","0f1e6ff9":"# plot a scatter diagram with a third variable for hue\nsns.relplot(data=cars_data, x=\"EngineSize\", y=\"CO2\", hue=\"PropulsionType\", aspect=2);","1d9953a4":"sns.relplot(data=cars_data, x=\"Mass\", y=\"CO2\", hue=\"YearRegistered\", aspect=2);","f23dbc23":"sns.relplot(data=cars_data, x=\"EngineSize\", y=\"CO2\", hue=\"YearRegistered\", aspect=2);","1cccabe5":"# create a new data set called petrol_data where the PropulsionType value is 'Petrol'\n# adding .copy() to the command informs pandas to create a copy first - this is not essential in this example but is good practice in general when \"slicing\" a data set. \npetrol_16_data = cars_data[(cars_data['PropulsionType'] == 'Petrol') & (cars_data['YearRegistered'] == 2016)].copy()\n\n# display the data set to show that it has been created correctly\npetrol_16_data","b15e21fd":"# plot all possible scatter diagrams\nsns.pairplot(petrol_16_data, x_vars=['EngineSize', 'Mass', 'CO', 'NOX', 'part', 'hc'], y_vars=['CO2']);","d45bad46":"# create a list for the target and define y\ntarget = 'CO2'\ny = petrol_16_data[target]\n\n# create an array of all the input features and define the X\nall_features=['EngineSize', 'Mass', 'CO', 'NOX', 'part', 'hc']\nX_petrol=petrol_16_data[all_features]\n\n# peform the training-testing split\nX_petrol_train, X_petrol_test, y_petrol_train, y_petrol_test = train_test_split(X_petrol, y, train_size=0.8, random_state=1)\n\n# display the length of the lists to check \nprint(\"Size of X_petrol_train: \",X_petrol_train.shape)\nprint(\"Length of y_petrol_train: \",len(y_petrol_train))\nprint(\"Size of X_petrol_test: \",X_petrol_test.shape)\nprint(\"Length of y_petrol_test: \",len(y_petrol_test))","0947931a":"# Define the input features\ninput_features=['EngineSize']\n\n# create the model\nlinear_model_petrol_16_engine = LinearRegression().fit(X_petrol_train[input_features], y_petrol_train)\n\n# display the parameters - output the coefficients and y-intercept\nprint('Coefficients: ', linear_model_petrol_16_engine.coef_)\nprint('Intercept: ', linear_model_petrol_16_engine.intercept_)","ce499740":"# create a list of the predictions\ny_pred = linear_model_petrol_16_engine.predict(X_petrol_test[input_features])\n\n# give the R\u00b2 score and MSE for the predictions\nprint('R\u00b2: ',r2_score(y_petrol_test, y_pred))\nprint('RMSE: ',mean_squared_error(y_petrol_test, y_pred, squared=False))","e55891c7":"# Define the input features\n\n\n# create the model\n\n\n# display the parameters - output the coefficients and y-intercept\n\n","e9693727":"# create a list of the predictions\n\n\n# give the R\u00b2 score and MSE for the predictions\n","e4b9ff47":"# Define the input features\n\n\n# create the model\n\n\n# display the parameters - output the coefficients and y-intercept\n\n","9b1fa612":"# create a list of the predictions\n\n\n# give the R\u00b2 score and MSE for the predictions\n","d69aa215":"<a id=\"model2engine\"><\/a>\n## Building a linear model using `EngineSize`\n**(1) Define the input features and create the model**","46e455c4":"<a id=\"preprocessing2\"><\/a>\n# Pre-processing the data (2): Creating a slice for petrol cars from 2016\nBoth `PropulsionType` and `YearRegistered` appear to be distinct on these diagrams. You can take a slice of the data for the petrol cars from 2016 and build a model based on this subset of the data.","e4760540":"In the data you can see values for the EngineSize and Mass that are 0. You can check if there are any other row where the EngineSize or Mass are 0.","7d306be5":"<a id=\"preprocessing\"><\/a>\n# Pre-processing the data\n<a id=\"addcategory\"><\/a>\n## Adding text for a categorical feature\nThe data type for `PropulsionTypeId` is an integer. It will be useful to create a new feature with the relevant text values.","f25fbd7d":"<a id=\"model1mass\"><\/a>\n## Building a linear model using `Mass`\n**(1) Define the input features and create the model**","e04bf194":"**(2) Measure the model**","9859341d":"<a id=\"model1enginemass\"><\/a>\n## Building a linear model using `EngineSize` and `Mass`\n**(1) Define the input features and create the model** ","f3558db3":"There are a further 92 rows that have either EngineSize or Mass of 0. These can be removed from the data set.","a0bb6502":"<a id=\"model2mass\"><\/a>\n## Building a linear model using `Mass`\n**(1) Define the input features and create the model**","f4ee661e":"The minimum of 0 is worth investigating further. You can display the rows where CO2 is 0.","2739b3f7":"<a id=\"model1engine\"><\/a>\n## Building a linear model using `EngineSize`\n**(1) Define the input features and create the model**","c23ed6ae":"<a id=\"introduction\"><\/a>\n# Predicting CO<sub>2<\/sub> emissions - modelling with linear regression\nThe CO<sub>2<\/sub> emissions from transport account for approximately a quarter of all CO2 emissions from energy production and of this about half is from cars and buses (https:\/\/ourworldindata.org\/co2-emissions-from-transport).\n\nThe amount of CO<sub>2<\/sub> produced differs for different cars. In this notebook you will explore which features of cars can be used to build a linear model to predict the CO2 emissions.\n\n<a id=\"import\"><\/a>\n## Importing libraries and data","4793eb11":"# MEI Data Science Taught Course - Lesson 7 - Modelling with data (2)\n# Table of Contents\n\n* [Introduction](#introduction) \n - [Importing libraries and data](#import)\n* [Pre-processing the data](#preprocessing)\n    - [Adding text for a categorical feature](#addcategory)\n    - [Removing zero entries](#remove0)\n* [Exploratory data analysis (1): Using pairplot](#eda1)\n* [Building a model (1): Using ALL the data](#model1)\n    - [Performing the training-test split](#split1)\n    - [Building a linear model using *EngineSize*](#model1engine)\n    - [Building a linear model using *Mass*](#model1mass)\n    - [Building a linear model using *EngineSize* and *Mass*](#model1enginemass)\n* [Exploratory data analysis (2): Exploring possible slices](#eda2)\n* [Pre-processing the data (2): Creating a slice for petrol cars from 2016](#preprocessing2)\n* [Building a model (2): Using the data for petrol cars from 2016](#model2)\n    - [Performing the training-test split](#split2)\n    - [Building a linear model using *EngineSize*](#model2engine)\n    - [Building a linear model using *Mass*](#model2mass)\n    - [Building a linear model using *EngineSize* and *Mass*](#model2enginemass)\n* [Pre-processing the data (3): Creating a slice for diesel cars from 2016](#preprocessing3)\n* [Building a model (3): Using the data for diesel cars from 2016](#model3)","9f4b13b3":"<a id=\"remove0\"><\/a>\n## Removing zero entries\nIn this task you will be trying to find a model to preduct CO<sub>2<\/sub> emissions. You can start by exploring the CO<sub>2<\/sub> feature to check the values.","51121024":"<a id=\"model1\"><\/a>\n# Building a model (1): Using ALL the data\n<a id=\"split1\"><\/a>\n## Performing the training-test split","7370ede2":"**(2) Measure the model**","17b9694f":"<a id=\"model2\"><\/a>\n# Building a model (2): Using the data for petrol cars from 2016\n<a id=\"split2\"><\/a>\n## Performing the training-test split","646569a3":"**(2) Measure the model**","d06f70e8":"**(2) Measure the model**","6a7a7cd7":"<a id=\"preprocessing2\"><\/a>\n# Pre-processing the data(3): Creating a slice for diesel cars from 2016\nYou can now explore the data for diesel cars from 2016.","5fe332b3":"**(2) Measure the model**","c299413e":"`EngineSize` and `Mass` are both displaying some association.","a45c2e43":"The electric car has a `CO2` value of 0. This can be removed so that we are only building a model for non-electric cars. \n\nA `CO2` value of 0 for a petrol car is unlikely. The can be removed too.","2dec81ca":"<a id=\"eda1\"><\/a>\n# Exploratory data analysis (1)\nYou can now use this data set to explore whether any of the other numerical features are associated with CO2 emissions. \n\nA pairplot will show any associations.","49066d6d":"<a id=\"model2enginemass\"><\/a>\n## Building a linear model using `EngineSize` and `Mass`\n**(1) Define the input features and create the model** ","350830f4":"<a id=\"eda2\"><\/a>\n# Exploratory data analysis (2): Exploring possible slices\nThere are various categorical features in the data set. You can explore if there is a difference in CO<sub>2<\/sub> emissions for different groups of the cars by plotting scatter diagrams with a third, categorical feature. The features explored here are `PropulsionType` and `YearRegistered`. The scatter diagrams for both `Mass` and `EngineSize` are plotted for each of these.","4a57f940":"<a id=\"model3\"><\/a>\n# Building a model (3): Using the data for diesel cars from 2016"}}