{"cell_type":{"97d7c554":"code","36f323eb":"code","2785eb97":"code","732c657b":"code","8a46ad69":"code","b8325103":"code","e1f4b79f":"code","ce62eb89":"code","3572bfcc":"code","e0512ff2":"code","84a1a537":"code","03c57b89":"code","42f16b60":"code","64981be7":"markdown","2fbec10b":"markdown","820d864f":"markdown","9b0a7cb1":"markdown","7fae2414":"markdown"},"source":{"97d7c554":"import torch\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import make_classification\nfrom sklearn import metrics\nimport seaborn as sb\nimport scikitplot as skplt\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","36f323eb":"class CustomDataset:\n    def __init__(self,data,targets):\n        self.data=data\n        self.targets=targets\n        \n    def __len__(self):\n        return(self.data.shape[0])\n    \n    def __getitem__(self,idx):\n        cur_sample = self.data[idx,:]\n        cur_target = self.targets[idx]\n        return{'x':torch.tensor(cur_sample,dtype=torch.float),'y':torch.tensor(cur_target,dtype=torch.long)}","2785eb97":"data,targets = make_classification(n_samples=1000)\ntrain_x,test_x,train_y,test_y = train_test_split(data,targets,stratify = targets)","732c657b":"train_dataset = CustomDataset(train_x,train_y)\ntest_dataset = CustomDataset(test_x,test_y)","8a46ad69":"train_loader = torch.utils.data.DataLoader(train_dataset,batch_size=4,num_workers=2)\ntest_loader = torch.utils.data.DataLoader(test_dataset,batch_size=4,num_workers=2)","b8325103":"model = lambda x,m,c : torch.matmul(x,m) + c","e1f4b79f":"train_x.shape","ce62eb89":"m = torch.randn(20,1, requires_grad = True)\nc = torch.randn(1,requires_grad = True)\nlearning_rate =0.001\n\nfor epoch in range(10):\n    epoch_loss=0\n    counter = 0\n    for data in train_loader:\n        xtrain = data['x']\n        ytrain = data['y']\n        \n        output = model(xtrain,m,c)\n        loss = torch.mean((ytrain.view(-1)-output.view(-1))**2)\n        epoch_loss += loss.item()\n        loss.backward()\n        \n        with torch.no_grad():\n            m = m - learning_rate*m.grad\n            c = c - learning_rate*c.grad\n            \n        m.requires_grad_(True)\n        c.requires_grad_(True)\n        counter+=1\n        \n    print(epoch,epoch_loss\/counter)","3572bfcc":"print(c)","e0512ff2":"sb.scatterplot(train_x[:,3],train_x[:,1],hue=train_y)\nplt.title('random data')\nplt.show()","84a1a537":"outputs =[]\nlabels =[]\nwith torch.no_grad():\n    for data in test_loader:\n        xtest = data['x']\n        ytest = data['y']\n        \n        output = model(xtest,m,c)\n        for i,j in zip(ytest.numpy(),output.numpy()):\n            labels.append(i)\n            outputs.append(j[0])","03c57b89":"fpr, tpr, _ = metrics.roc_curve(labels,outputs)\nauc = metrics.roc_auc_score(labels,outputs)\nplt.plot(fpr,tpr,label=\"data 1, auc=\"+str(auc))\nplt.title('ROC curve')\nplt.legend(loc=4)\nplt.show()","42f16b60":"print('accuracy :',metrics.roc_auc_score(labels,outputs))","64981be7":"## If you like, an upvote would be deeply appreciated. Thanks! :)","2fbec10b":"![](https:\/\/miro.medium.com\/max\/1400\/1*AsfV2NelG1Ta5F-0kr727w.gif)","820d864f":"## The model predicts with good accuracy\n\n## Looks like our model has correctly figured out the linear relation between our dependent and independent variables.","9b0a7cb1":"### Train Test Split\n##### Now let's split the data into a training set and a testing set. We will train out model on the training set and then use the test set to evaluate the model.","7fae2414":"# Linear Regression using PyTorch\n\n## Linear Regression is an approach that tries to find a linear relationship between a dependent variable and an independent variable by minimizing the distance as shown below.\nLinear Regression is a statistical method that allows us to summarize and study relationships between a target variable (also known as dependent variable) on one or more predictors (also known as independent variables).\nThe objective is to estimate and\/or predict the mean value of the dependent variable (continuous) on the basis of the known values of the independent variables. And try to minimize the error as much as possible.\n\nIn statistics, linear regression is a linear approach to modelling the relationship between a scalar response and one or more explanatory variables (also known as dependent and independent variables).\n![](https:\/\/miro.medium.com\/max\/1400\/1*F4JzgiTIUfFePLBj4A_JPw.jpeg)\n## Regression Equation\n![](https:\/\/miro.medium.com\/max\/788\/1*wdhvF5Vax_9FULipI4N6Eg.png)\n#### Let\u2019s consider a very basic linear equation i.e., y=mx+c. Here, \u2018x\u2019 is the independent variable and y is the dependent variable. We\u2019ll use this equation to create a dummy dataset which will be used to train this linear regression model. Following is the code for creating the dataset.\n\n"}}