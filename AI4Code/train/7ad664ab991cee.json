{"cell_type":{"911ef38c":"code","ff8d96d6":"code","08207d6d":"code","2ea240b6":"code","9a707a81":"code","56b5c855":"code","b85db254":"code","7139f336":"code","a923c94c":"code","89749fe0":"code","fb8f1673":"code","52d61cf4":"code","11eb7065":"markdown","fd5e1122":"markdown","b30aee57":"markdown","783ceb63":"markdown","13d95cd0":"markdown"},"source":{"911ef38c":"import pandas as pd","ff8d96d6":"targets_scored = pd.read_csv('..\/input\/lish-moa\/train_targets_scored.csv')\n\ntargets_scored.shape","08207d6d":"targets_scored.head()","2ea240b6":"train_features = pd.read_csv('..\/input\/lish-moa\/train_features.csv')\n\ntrain_features.shape","9a707a81":"train_features.head()","56b5c855":"train_features.cp_type.unique().tolist()","b85db254":"trt_cp_idx = train_features[train_features.cp_type == 'trt_cp'].index","7139f336":"targets_scored = targets_scored.iloc[trt_cp_idx.values.tolist()]\n\ntargets_scored.shape","a923c94c":"import sys\nsys.path.append('..\/input\/iterative-stratification\/iterative-stratification-master')\nfrom iterstrat.ml_stratifiers import MultilabelStratifiedKFold","89749fe0":"targets_scored.loc[:, 'fold'] = -1 # Create a new column `fold` containing `-1`s.\ntargets_scored = targets_scored.sample(frac=1).reset_index(drop=True) # Shuffle the rows.\ntargets = targets_scored.drop('sig_id', axis=1).values # Extract the targets as an array.","fb8f1673":"%%capture\nmskf = MultilabelStratifiedKFold(n_splits=5)","52d61cf4":"for fold_, (train_, valid_) in enumerate(mskf.split(X=targets_scored, y=targets)):\n    targets_scored.loc[valid_, 'fold'] = fold_\n    \ntargets_scored.to_csv('.\/targets_with_folds.csv', index=False)","11eb7065":"Let's take a look at the discrete levels of `cp_type`.","fd5e1122":"The number of rows has reduced from `23814` to `21948`.\n\nNext, let's generate our `5` folds.","b30aee57":"It is mentioned in the <a href=\"https:\/\/www.kaggle.com\/c\/lish-moa\/data\" target=\"_blank\">competition page<\/a> that when `cp_type` is `'ctl_vehicle'`, the MoAs are always `0`. Hence, let's remove the rows in which `cp_type` is `'ctl_vehicle'`.\n\n**Post-processing tip:** After generating the `submission` data frame, find the rows in which `cp_type` is `'ctl_vehicle'`, and set the predictions to `0`.","783ceb63":"We can now use the folds contained in `'targets_with_folds.csv'` across all our models.\n\nTo download \/ use the file, see the **Output** section of this notebook.","13d95cd0":"**Credits:** <a href=\"https:\/\/www.kaggle.com\/abhishek\" target=\"_blank\">Abhishek Thakur<\/a> and <a href=\"https:\/\/www.kaggle.com\/artgor\" target=\"_blank\">Andrew Lukyanenko<\/a>."}}