{"cell_type":{"af779c49":"code","4d3901dc":"code","6ed0505a":"markdown"},"source":{"af779c49":"# Cell shows operations on dataset with ascending order (it is supposed in learntools)\nimport pandas as pd\n\ncolumns = ['year', 'num_trips']\nascending_data = [\n    [2013, 1000],\n    [2014, 1001],\n    [2015, 1002],\n    [2016, 1003]\n]\nascending_df = pd.DataFrame(data=ascending_data, columns=columns)\nascending_result = ascending_df.loc[ascending_df['year'] == 2013]['num_trips']\nascending_value = ascending_result[0]\nprint(ascending_result)\nprint(ascending_value)","4d3901dc":"# Cell shows operations on dataset with descending order (it is not supposed in learntools)\nimport pandas as pd\n\ndescending_data = [\n    [2016, 1003],\n    [2015, 1002],\n    [2014, 1001],\n    [2013, 1000]\n]\ndescending_df = pd.DataFrame(data=descending_data, columns=columns)\ndescending_result = descending_df.loc[descending_df['year'] == 2013]['num_trips']\n# Here you should use iloc[0] instead of [0]. See explanation below\ndescending_value = descending_result.iloc[0]\nprint(descending_result)\nprint(descending_value)","6ed0505a":"As described in pandas docs [https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/indexing.html](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/indexing.html):\n> Allowed inputs for loc are:\nA single label, e.g. 5 or 'a' (Note that 5 is interpreted as a label of the index. This use is not an integer position along the index.).\n\nI think [] is kind of loc. So you should use iloc for position indexing.\n"}}