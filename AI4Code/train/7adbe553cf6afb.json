{"cell_type":{"35d8303d":"code","e98f9cf3":"code","0e759e1d":"code","b616b0f9":"code","5548279b":"code","c678a5bc":"code","74a91207":"code","bf35b7e9":"markdown","e1f9304a":"markdown","7ed2abf8":"markdown","50cfb786":"markdown"},"source":{"35d8303d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e98f9cf3":"import os\nimport re\nimport numpy as np\nimport pandas as pd\nfrom PIL import Image\nfrom matplotlib import pyplot as plt\nfrom glob import glob\nfrom tqdm.auto import tqdm\nimport cv2\nimport random\nimport shutil\nimport json","0e759e1d":"arthropod_categories = [\"Araneae\",\"Coleoptera\",\"Diptera\",\"Hemiptera\",\"Hymenoptera\",\"Lepidoptera\",\"Odonata\"]\n\nfile_path = \"\/kaggle\/input\/arthropod-taxonomy-orders-object-detection-dataset\/ArTaxOr\/\"\nif(os.path.exists(\".\/arthropod_images\")):\n    pass\nelse:\n    os.mkdir(\".\/arthropod_images\")\n\nfor cat in tqdm(arthropod_categories,total=len(arthropod_categories)):\n    if(os.path.exists(os.path.join(\".\/arthropod_images\",cat))):\n        pass\n    else:\n        folder_path = os.path.join(\".\/arthropod_images\",cat)\n        os.mkdir(folder_path)\n    #os.mkdir(\".\/arthropod\/\"+cat)\n    annotations_file = glob(file_path+cat+\"\/annotations\/*.json\")\n    with open(random.choice(annotations_file)) as f:\n        data = json.load(f)\n        image_file_name = data['asset']['name']\n        \n        # bounding box co-ordinates\n        \n        x1 = data['regions'][0]['points'][0].get('x')\n        y1 = data['regions'][0]['points'][0].get('y')\n\n        x2 = data['regions'][0]['points'][1].get('x')\n        y2 = data['regions'][0]['points'][1].get('y')\n\n        x3 = data['regions'][0]['points'][2].get('x')\n        y3 = data['regions'][0]['points'][2].get('y')\n\n        x4 = data['regions'][0]['points'][3].get('x')\n        y4 = data['regions'][0]['points'][3].get('y')\n        \n    files = glob(file_path+cat+\"\/\"+image_file_name)\n    for file in files[0:1]:\n        img = Image.open(file)\n        img1 = img.crop((x1,y1,x3,y3))\n        img1 = np.array(img1)\/255.0\n        fig, (ax1, ax2) = plt.subplots(1, 2,figsize=(8,8))\n        fig.suptitle(cat)\n        ax1.imshow(img)\n        ax1.axis(\"off\")\n        ax2.imshow(img1)\n        ax2.axis(\"off\")","b616b0f9":"arthropod_categories = [\"Araneae\",\"Coleoptera\",\"Diptera\",\"Hemiptera\",\"Hymenoptera\",\"Lepidoptera\",\"Odonata\"]\n\nfile_path = \"\/kaggle\/input\/arthropod-taxonomy-orders-object-detection-dataset\/ArTaxOr\/\"\nif(os.path.exists(\".\/arthropod_images\")):\n    pass\nelse:\n    os.mkdir(\".\/arthropod_images\")\n\nfor cat in tqdm(arthropod_categories,total=len(arthropod_categories)):\n    folder_path = os.path.join(\".\/arthropod_images\",cat)\n    if(os.path.exists(folder_path)):\n        pass\n    else:\n        os.mkdir(folder_path)\n    annotations_file = glob(file_path+cat+\"\/annotations\/*.json\")\n    for i in range(len(annotations_file[0:200])):\n        with open(annotations_file[i]) as f:\n            data = json.load(f)\n            image_file_name = data['asset']['name']\n        \n            # bounding box co-ordinates\n        \n            x1 = data['regions'][0]['points'][0].get('x')\n            y1 = data['regions'][0]['points'][0].get('y')\n\n            x2 = data['regions'][0]['points'][1].get('x')\n            y2 = data['regions'][0]['points'][1].get('y')\n\n            x3 = data['regions'][0]['points'][2].get('x')\n            y3 = data['regions'][0]['points'][2].get('y')\n\n            x4 = data['regions'][0]['points'][3].get('x')\n            y4 = data['regions'][0]['points'][3].get('y')\n        \n        files = glob(file_path+cat+\"\/\"+image_file_name)\n        for file in files:\n            file1 = file.split(\"\/\")[6]\n            img = Image.open(file)\n            img1 = img.crop((x1,y1,x3,y3))\n            img2 = img1.resize((500,500))\n            file_name = os.path.join(folder_path,file1)\n            img2.save(file_name)","5548279b":"# Use this code if you want to delete directory\n#shutil.rmtree(\".\/arthropod_images\")","c678a5bc":"!tar -zcvf arthropod_images.tar.gz \/kaggle\/working","74a91207":"!zip -r arthropod_images.zip \/kaggle\/working\/","bf35b7e9":"### Cropping the images with respect to the co-ordinates of the bounding box taken from the respective annotation file.","e1f9304a":"### Importing required packages for analysis","7ed2abf8":"### Code to save the cropped image in the destination folder","50cfb786":"### Use this code to download the cropped images in zipped folder"}}