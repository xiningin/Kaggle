{"cell_type":{"5c7ebc5c":"code","968e7f67":"code","707e0782":"code","5fb5d730":"code","5b9d5832":"code","e7060d4a":"code","cb533830":"code","d622fa2c":"code","8d7b391a":"code","47dabd5a":"code","e089b943":"code","aef4936f":"code","b75fef80":"code","38094895":"code","b6b73be7":"code","24d00e25":"code","c3184811":"code","e7995797":"code","6e6960fd":"code","0ec803b5":"code","3b0437a6":"code","b6501508":"code","a06b41ad":"code","f25d3d43":"code","4190a1fd":"code","8daccd48":"code","5e875459":"code","4937ca26":"code","194977b5":"code","a8d4c4bc":"code","2efe87ba":"code","e6f23903":"code","f612014b":"code","83fa299b":"code","31972b74":"code","32eab6b6":"code","243d9d8f":"code","6e4dd931":"code","048a42f1":"code","3a6e4f7d":"code","8a62b6a8":"code","92e8509b":"code","e7b3bbb2":"code","8990536a":"code","2b505581":"code","0d1a985f":"code","e9dde9d4":"code","578210c4":"code","cf41f61e":"code","2e66216c":"code","e86e84ae":"code","4e36958b":"code","3bd80e01":"code","e13390da":"code","4f01dc94":"code","689e4a00":"code","130d6aa9":"code","e13dac86":"code","29d9f849":"code","6869e6c5":"code","e9605014":"code","880ca511":"code","76b8bc82":"code","cff3a228":"code","caa88fb5":"code","cb8c2f2d":"code","4338b3ae":"code","59c34e04":"code","74855626":"code","b9adae45":"markdown","ccd095cf":"markdown","8e5f8de4":"markdown","4f181c1a":"markdown","0fad610b":"markdown","212a98b7":"markdown","d692e950":"markdown","1591d4b0":"markdown","47580ca3":"markdown","629d71dc":"markdown","2b0705e9":"markdown","63b535ef":"markdown","950087a7":"markdown","928c24e7":"markdown","caab972d":"markdown","5344aa50":"markdown","17cc32d6":"markdown","34bb5716":"markdown","94ab729a":"markdown","2080c59a":"markdown","97ba631b":"markdown","eda6ddb4":"markdown","67c0e17f":"markdown","7c1e1c08":"markdown","d8688b83":"markdown","a7e1714b":"markdown","c6af46fc":"markdown"},"source":{"5c7ebc5c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","968e7f67":"from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neural_network import MLPClassifier","707e0782":"data = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","5fb5d730":"data.info()","5b9d5832":"data.isnull().sum()","e7060d4a":"data","cb533830":"data.nunique()","d622fa2c":"sns.set_style('whitegrid')\nplt.figure(figsize=(12,6))\nsns.countplot(data['output'])","8d7b391a":"plt.figure(figsize=(16,8))\nsns.heatmap(data.corr(), annot=True)","47dabd5a":"sns.countplot(data['output'], hue=data['cp'])","e089b943":"sns.countplot(data['output'], hue=data['thalachh']>140)","aef4936f":"sns.countplot(data['output'], hue=data['slp'])","b75fef80":"sns.boxplot(y=data['age'])","38094895":"sns.boxplot(y=data['trtbps'])","b6b73be7":"sns.boxplot(y=data['chol'])","24d00e25":"sns.boxplot(y=data['thalachh'])","c3184811":"sns.boxplot(y=data['oldpeak'])","e7995797":"X = data.drop('output',axis=1)\ny = data['output']","6e6960fd":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)","0ec803b5":"methods = [DecisionTreeClassifier, SVC, GaussianNB, KNeighborsClassifier, RandomForestClassifier]\nResult_outliers_NOscaler = {}\nfor method in methods:\n    model = method()\n    model.fit(X_train,y_train)\n    Result_outliers_NOscaler[model] = model.score(X_test,y_test)","3b0437a6":"Cross_outliers_NOscaler = {}\nfor method in methods:\n    model = method()\n    model.fit(X,y)\n    Cross_outliers_NOscaler[model] = cross_val_score(model, X, y, cv=5).mean()","b6501508":"Result_outliers_NOscaler","a06b41ad":"Cross_outliers_NOscaler","f25d3d43":"data[data['trtbps']>170]","4190a1fd":"trtbpsMean = data['trtbps'].mean()\ntrtbpsMean","8daccd48":"data['trtbps'].replace([172,174,178,180,192,200], trtbpsMean, inplace=True)","5e875459":"data[data['trtbps']>170]","4937ca26":"sns.boxplot(y=data['trtbps'])","194977b5":"data[data['chol']>390]","a8d4c4bc":"cholMean = data['chol'].mean()\ncholMean","2efe87ba":"data['chol'].replace([394,417, 564, 407, 409], cholMean, inplace=True)\nsns.boxplot(y=data['chol'])","e6f23903":"data[data['thalachh']<95]","f612014b":"thalachhMean = data['thalachh'].mean()\nthalachhMean","83fa299b":"data['thalachh'].replace([71,88, 90], thalachhMean, inplace=True)","31972b74":"sns.boxplot(data['thalachh'])","32eab6b6":"data[data['oldpeak']>4]","243d9d8f":"oldpeakMean = data['oldpeak'].mean()\noldpeakMean","6e4dd931":"data['oldpeak'].replace([4.2,6.2,5.6,4.2,4.4], 1.0, inplace=True)","048a42f1":"sns.boxplot(y=data['oldpeak'])","3a6e4f7d":"plt.figure(figsize=(16,8))\nsns.countplot(data['oldpeak'], hue=data['output'])","8a62b6a8":"plt.figure(figsize=(16,8))\nsns.countplot(data['output'], hue=data['oldpeak'])\nplt.legend()","92e8509b":"sns.countplot(data['restecg'], hue=data['output'])","e7b3bbb2":"sns.countplot(data['chol']>120, hue=data['output'])","8990536a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)","2b505581":"methods = [DecisionTreeClassifier, SVC, GaussianNB, KNeighborsClassifier, RandomForestClassifier]\nResults_NOoutliers_NOscaler = {}\nfor method in methods:\n    model = method()\n    model.fit(X_train,y_train)\n    Results_NOoutliers_NOscaler[model] = model.score(X_test,y_test)","0d1a985f":"Cross_NOoutliers_NOscaler = {}\nfor method in methods:\n    model = method()\n    Cross_NOoutliers_NOscaler[model] = cross_val_score(model, X, y, cv=5).mean()","e9dde9d4":"Results_NOoutliers_NOscaler","578210c4":"Cross_NOoutliers_NOscaler","cf41f61e":"from sklearn.preprocessing import StandardScaler\nSS = StandardScaler()","2e66216c":"X = SS.fit_transform(X)\nX","e86e84ae":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)","4e36958b":"methods = [DecisionTreeClassifier, SVC, GaussianNB, KNeighborsClassifier, RandomForestClassifier]\nResults_NOoutliers_scaled = {}\nfor method in methods:\n    model = method()\n    model.fit(X_train,y_train)\n    Results_NOoutliers_scaled[model] = model.score(X_test,y_test)","3bd80e01":"Cross_NOoutliers_scaled = {}\nfor method in methods:\n    model = method()\n    Cross_NOoutliers_scaled[model] = cross_val_score(model, X, y, cv=5).mean()","e13390da":"Results_NOoutliers_scaled","4f01dc94":"Cross_NOoutliers_scaled","689e4a00":"MLP = MLPClassifier(hidden_layer_sizes=(8,8), max_iter=2000, random_state=1)\nMLP.fit(X_train,y_train)\nMLP.score(X_test,y_test)","130d6aa9":"MLP = MLPClassifier(hidden_layer_sizes=(8,8), max_iter=2000)\nCross_NOoutliers_scaled[MLP] = cross_val_score(MLP, X, y, cv=5).mean()","e13dac86":"Cross_NOoutliers_scaled","29d9f849":"pred = cross_val_predict(RandomForestClassifier(), X, y, cv=5)","6869e6c5":"from sklearn.metrics import classification_report","e9605014":"print(classification_report(y,pred))","880ca511":"data = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","76b8bc82":"X = data.drop('output',axis=1)\ny = data['output']","cff3a228":"X = SS.fit_transform(X)\nX","caa88fb5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)","cb8c2f2d":"methods = [DecisionTreeClassifier, SVC, GaussianNB, KNeighborsClassifier, RandomForestClassifier]\nResult_outliers_scaled = {}\nfor method in methods:\n    model = method()\n    model.fit(X_train,y_train)\n    Result_outliers_scaled[model] = model.score(X_test,y_test)","4338b3ae":"Cross_outliers_scaled = {}\nfor method in methods:\n    model = method()\n    Cross_outliers_scaled[str(model)] = cross_val_score(model, X, y, cv=5).mean()","59c34e04":"Result_outliers_scaled","74855626":"Cross_outliers_scaled","b9adae45":"Naive Bayes and Random Forest seems to have the best result in this condition","ccd095cf":"### Cross Validation","8e5f8de4":"### Testing models with outliers and unscaled data","4f181c1a":"Little more heart attacks for cholestoral above 120 mg\/dl ","0fad610b":"Bigger difference at maximum heart rate achieved > 140","212a98b7":"## Setup size of hidden layers","d692e950":"Random Forest seems to have the best results under the conditions presented.","1591d4b0":"High number of heart attacks when you have non-anginal pain","47580ca3":"### Replacing outliers\/inconsistent values by average values","629d71dc":"rest_ecg : resting electrocardiographic results\n\nValue 0: normal\n\nValue 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n\nValue 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n\nValue 1 tend to have more heart attack than others.","2b0705e9":"### Cross Validation","63b535ef":"## Testing Models after replacing outliers, data still unscaled","950087a7":"### Testing with outliers and scaled data.","928c24e7":"### Cross Validation","caab972d":"### Importing Libraries","5344aa50":"## Scaling data","17cc32d6":" correlation of heart attacks with chest pain and thalachh","34bb5716":"### We can see better results in all models with scaled data. Now let's test the data on neural networks","94ab729a":"![image.png](attachment:image.png)\nAlpha selected = 2","2080c59a":"### Random Forest model had the best classification result, 0.82","97ba631b":"oldpeak: ST depression induced by exercise relative to rest\n\nLow levels of oldpeak tend to have more heart attacks than high levels","eda6ddb4":"### Visibly, the DB does not have missing values.","67c0e17f":"### Unique values for each column","7c1e1c08":"### Reading data and looking at values","d8688b83":"### Cross Validation","a7e1714b":"## Searching for Outliers","c6af46fc":"cp : Chest Pain type chest pain type\n\nValue 0: typical angina\n\nValue 1: atypical angina\n\nValue 2: non-anginal pain\n\nValue 3: asymptomatic\n"}}