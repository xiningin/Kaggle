{"cell_type":{"de6d96fa":"code","038e6134":"code","68f22d5b":"code","bcda4b9b":"code","915f8c06":"code","54ca95d7":"code","471271ce":"code","16aae561":"code","15c4b521":"code","3d9a7ad8":"code","43aba100":"code","dac9d8f7":"code","e6425874":"code","52b8dcf5":"markdown","5b0e7c97":"markdown","a8f700dd":"markdown","fbaa4bfa":"markdown","0c04e639":"markdown","de1c16b7":"markdown","2e3e0916":"markdown","8285e7cd":"markdown","a2888621":"markdown","1ffadf00":"markdown","94bf7ae0":"markdown"},"source":{"de6d96fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\nwarnings.filterwarnings('ignore')","038e6134":"df_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')\ndf_merchants = pd.read_csv('..\/input\/merchants.csv')\ndf_hist_trans = pd.read_csv('..\/input\/historical_transactions.csv')\ndf_new_merchant_trans = pd.read_csv('..\/input\/new_merchant_transactions.csv')","68f22d5b":"print(\"Training Data Sample\");display(df_train.head())\nprint(\"Test Data Sample\");display(df_test.head())\nprint(\"Merchant Data Sample\");display(df_merchants.head())\nprint(\"Historical Transactions Sample\");display(df_hist_trans.head())\nprint(\"New Merchant Transactions Sample\");display(df_new_merchant_trans.head())","bcda4b9b":"df_test.dtypes","915f8c06":"df_train['first_active_month'] = pd.to_datetime(df_train['first_active_month'])\ndf_test['first_active_month'] = pd.to_datetime(df_test['first_active_month'])","54ca95d7":"f, axes = plt.subplots(1, 2, figsize=(12,6))\nsns.distplot( df_train.feature_1,ax=axes[0], kde = False, color = 'green', bins=10).set_title(\"Train Data\")\n\nsns.distplot( df_test.feature_1,ax=axes[1], kde = False, color = 'red', bins=10).set_title(\"Test Data\") \naxes[0].set(ylabel='Card Counts')\nf.suptitle('feture_1 Distributions: Training Data and Test Data')\naxes[0].set_xticks(np.arange(1,6,1))\naxes[1].set_xticks(np.arange(1,6,1))\nplt.show()","471271ce":"f, axes = plt.subplots(1, 2, figsize=(12,6))\nsns.distplot( df_train.feature_2,ax=axes[0], kde = False, color = 'green', bins=10).set_title(\"Train Data\")\n\nsns.distplot( df_test.feature_2,ax=axes[1], kde = False, color = 'red', bins=10).set_title(\"Test Data\") \naxes[0].set(ylabel='Card Counts')\nf.suptitle('feture_2 Distributions: Training Data and Test Data')\naxes[0].set_xticks(np.arange(1,4,1))\naxes[1].set_xticks(np.arange(1,4,1))\nplt.show()","16aae561":"f, axes = plt.subplots(1, 2, figsize=(12,6))\nsns.distplot( df_train.feature_3,ax=axes[0], kde = False, color = 'green', bins=10).set_title(\"Train Data\")\n\nsns.distplot( df_test.feature_3,ax=axes[1], kde = False, color = 'red', bins=10).set_title(\"Test Data\") \naxes[0].set(ylabel='Card Counts')\nf.suptitle('feture_3 Distributions: Training Data and Test Data')\naxes[0].set_xticks(np.arange(1,2,1))\naxes[1].set_xticks(np.arange(1,2,1))\nplt.show()","15c4b521":"f, axes = plt.subplots(1, 2, figsize=(12,6))\ndf_test['first_active_month'] = df_test['first_active_month'] .fillna(axis=0, method='ffill')\nsns.distplot( df_train.first_active_month,ax=axes[0], kde = False, color = 'green', bins=20).set_title(\"Train Data\")\nsns.distplot( df_test.first_active_month,ax=axes[1], kde = False, color = 'red', bins=20).set_title(\"Test Data\") \naxes[0].set(ylabel='Card Counts')\nf.suptitle('first_active_month Distributions: Training Data and Test Data')\n\nplt.show()","3d9a7ad8":"plt.figure(figsize=(12,8))\nsns.pairplot(df_train.loc[:,df_train.columns != 'card_id'])","43aba100":"latest_date = max(df_train['first_active_month'])\ndf_train['customer_age'] = (latest_date - df_train['first_active_month']).astype('timedelta64[D]')\ndf_test['customer_age'] = (latest_date - df_test['first_active_month']).astype('timedelta64[D]')\nsns.pairplot(df_train.loc[:,df_train.columns != 'card_id'])","dac9d8f7":"# split the training set into training set and validation set \n# We are not going to do K-fold cross validation for now. We will do that in a later model\n\nX_train, X_val, y_train, y_val = train_test_split(df_train[['feature_1','feature_2','feature_3','customer_age']],df_train['target'], test_size=0.1, random_state=42)\n#X_train.shape, X_val.shape, y_train.shape, y_val.shape\nlinear_model = LinearRegression().fit(X_train,y_train)\ny_pred = linear_model.predict(X_val)\nprint(\"Root Mean squared error: %.2f\" % np.sqrt(mean_squared_error(y_val, y_pred)))","e6425874":"y_test = linear_model.predict(df_test[['feature_1', 'feature_2', 'feature_3','customer_age']])\nlinear_submission = pd.DataFrame({\"card_id\": df_test[\"card_id\"].values})\nlinear_submission['target'] = y_test\nlinear_submission.to_csv('linear_submission.csv',index=False)","52b8dcf5":"### Display the data frames with titles. ","5b0e7c97":"**From the above, it looks like the customer age feature ma have some correlation with the target variable after all. **\n\n**Let us generate a linear model and submit it, as a first step. **","a8f700dd":"### Let us first understand the training data & test data","fbaa4bfa":"<font color='red'>In progress. More to come.. <\/font>","0c04e639":"### Goal of this notebook is to do some basic EDA of Elo-Recommendations Data and start developing basic models, step by step.  \n\n**This notebook will be in progress at least till 12\/15\/2018**. So please excuse the typos and other rough edges. ","de1c16b7":"### It can be seen that feature_1, feature_2, feature_3 and first_active month have similar distributions in the train and test data.\n\n### Now, let us use a the seaborn pairplot to quickly check if any of the input variables in the training data are clearly correlated with the target variable. ","2e3e0916":"## Submit the best model so far","8285e7cd":"From the above figure, it is not immediately clear if any of the feature_1, feature_2, feature_3 are correlated with the target variable. \n\n### Let us start with a linear model\n\nSince time stamps are more dificult to work with for linear models, let us start convert the first_active_moth feature, into a customer age feaure, which just returns the number of days since the customer first registered. ","a2888621":"It looks like the first_active_month is stored as a string type. Let us change it to datetime format","1ffadf00":"### Let us first read the input data","94bf7ae0":"First, let us look at the training and test data distributions to check if they are similar. "}}