{"cell_type":{"193985f3":"code","848627fb":"code","13ffbc48":"code","1ebd2633":"code","8b9d2efd":"code","4d380058":"code","5539cf35":"code","a46ca92a":"code","f629386d":"code","ef48539f":"code","da3a1f57":"code","a7cc8ba1":"code","d72e754b":"code","b8c43f4b":"code","3459cd45":"code","f156a45e":"code","54d23ea6":"code","f1ee0434":"code","153e9433":"code","f919c815":"code","4e73ab0f":"code","466b721d":"code","d18a2c6b":"code","ee31b377":"code","f6d6737e":"code","2bfb69c6":"code","1adf1e88":"code","ea112075":"code","41a02ebe":"code","e1a4c4c5":"code","e4864bed":"code","cbed3231":"code","602e2370":"markdown","1958e027":"markdown","63e2e226":"markdown","bf5895d9":"markdown","440c02f2":"markdown","bc5448ad":"markdown","5ab502b5":"markdown","13a3f19b":"markdown","84decb0e":"markdown"},"source":{"193985f3":"import numpy as np\nimport pandas as pd\npd.options.mode.chained_assignment = None\nfrom datetime import datetime, timedelta\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","848627fb":"from kaggle.competitions import twosigmanews\nenv = twosigmanews.make_env()","13ffbc48":"(market_train_df, news_train_df) = env.get_training_data()\nmarket_train_df['date'] = pd.to_datetime(market_train_df.time.dt.date)","1ebd2633":"apple = market_train_df[market_train_df['assetCode'] == 'AAPL.O']\nax = apple.plot(kind='line',x='date',y='open',figsize=(12,6))","8b9d2efd":"appleNews = news_train_df[news_train_df['assetName'] == 'Apple Inc']\nlist(appleNews[(appleNews['headline'].str.contains('stock split')) & (appleNews['relevance'] >= 0.6)].head()['headline'])","4d380058":"apple[(apple['time'] > '2014-06-01') & (apple['time'] < '2014-06-16')][['time','close']]","5539cf35":"apple['adjOpen'] = np.where(apple['time'] < '2014-06-09',apple['open']\/7.0,apple['open'])\napple['MA10'] = apple['adjOpen'].rolling(window=10).mean()\napple['MA50'] = apple['adjOpen'].rolling(window=50).mean()\napple['MA200'] = apple['adjOpen'].rolling(window=200).mean()\nax = apple.plot(kind='line',x='date',y=['adjOpen','MA10','MA50','MA200'], figsize=(16,6))","a46ca92a":"split_news = news_train_df[(news_train_df['headline'].str.contains('stock split'))  & \\\n                           (news_train_df['headline'].str.contains('-for-')) & \\\n                           (news_train_df['relevance'] >= 0.6)]\nsplit_news.shape","f629386d":"split_news['date'] = pd.to_datetime(split_news.time.dt.date)","ef48539f":"split_news[['date','headline']].head()","da3a1f57":"assetCodes = split_news.assetCodes.astype(str).apply(eval).apply(list)","a7cc8ba1":"# eliminate irrelevant exchanges\nexchanges = {'N', 'O', 'A'} # , 'OQ', 'P', 'OB'} # take only the top exchanges\nassetCodes = assetCodes.apply(lambda assetCode: [c for c in assetCode if '.' in c and c.split('.')[1] in exchanges])","d72e754b":"assetCodes.apply(len).value_counts()","b8c43f4b":"# just take the first one\nassetCodes = assetCodes.apply(lambda x: x[0])\nassetCodes.head()","3459cd45":"split_news.assetCodes = assetCodes","f156a45e":"# remove duplicate news announcements \nsplit_news.drop_duplicates(subset=['date','assetCodes'], inplace=True)\nsplit_news.shape","54d23ea6":"split_news[['date','assetCodes','headline']].head(10)","f1ee0434":"split_news[split_news.assetCodes=='AAPL.O'][['headline']].iloc[0][0]","153e9433":"# make sure the word2number package is installed\n# !pip install word2number","f919c815":"from word2number import w2n\nsplit_from = split_news.headline.apply(lambda x: x.split('-for-')[0].rsplit(' ')[-1])\nsplit_from = split_from.apply(w2n.word_to_num)","4e73ab0f":"split_from.value_counts()","466b721d":"split_to = split_news.headline.apply(lambda x: x.split('-for-')[1].rsplit(' ')[0])\nsplit_to = split_to.apply(w2n.word_to_num)\nsplit_to.value_counts()","d18a2c6b":"split_news['split_from'] = split_from\nsplit_news['split_to'] = split_to","ee31b377":"split_news[['date','assetCodes','split_from','split_to']].head(10)","f6d6737e":"# market_train_df[market_train_df.assetCode == 'ZOLL.O']\nmarket_splits = list(set(split_news.assetCodes.unique()).intersection(set(market_train_df.assetCode.unique())))","2bfb69c6":"split_news = split_news[split_news.assetCodes.isin(market_splits)]\nsplit_news.shape","1adf1e88":"%%time\n# determine if the stock split occurs in the market_train date range\nfor idx, r in split_news.iterrows():\n    if market_train_df[(market_train_df.assetCode == r.assetCodes) & (market_train_df.date == r.date)].shape[0] > 0:\n        split_news.loc[idx,'traded'] = True\n    else:\n        split_news.loc[idx,'traded'] = False","ea112075":"split_news[split_news.traded == True].shape","41a02ebe":"split_news[['time','assetCodes','traded']].head()","e1a4c4c5":"market_split_news = split_news[split_news.traded == True]","e4864bed":"threshold = 0.2 # + or - window around price differential on the open of the day of the split\nfor idx, r in market_split_news.iterrows():\n    s = market_train_df[(market_train_df.assetCode == r.assetCodes) & \n                    (market_train_df.date > r.date) &\n                    (market_train_df.date < r.date+pd.DateOffset(months=3))]\n    s = s.set_index('date')\n    found_it = False\n    prevday = s.index[0]\n    for day, r2 in s.iloc[1:].iterrows():  # minus a day\n        prevopen = s.iloc[s.index.get_loc(day)-1].open\n\n        if abs(round(r2.returnsOpenPrevRaw1,2) \/ round(((r2.open-prevopen)\/prevopen),2)) < threshold :\n            found_it = True\n            break\n        prevday = day\n    if found_it:\n        market_split_news.loc[idx,'split_day'] = prevday\n    else:\n        market_split_news.loc[idx,'split_day'] = pd.NaT\n\nprint('found the date to ',market_split_news.split_day.notnull().sum(),' of ',market_split_news.shape[0],' splits.')","cbed3231":"for idx, r in market_split_news.iterrows():\n    print(r.headline, flush=True)\n    s = market_train_df[(market_train_df.assetCode == r.assetCodes) & \n                    (market_train_df.date > r.date-pd.DateOffset(months=1)) &\n                    (market_train_df.date < r.date+pd.DateOffset(months=3))]\n    s = s.set_index('date')\n    s.close.plot(figsize=(12,3))\n    plt.title(r.assetCodes+' '+str(r.split_from)+'-for-'+str(r.split_to))\n    plt.axvline(r.date,c='g')\n    if r.split_day is not pd.NaT:\n        plt.axvline(r.split_day,c='r')\n    plt.show()","602e2370":"# Cleaning up market data stock splits\n---\n\nThis notebook takes the next step in [cleaning up the market data](https:\/\/www.kaggle.com\/danielson\/cleaning-up-market-data-errors-and-stock-splits) by [Danielson](https:\/\/www.kaggle.com\/danielson\/) and tries to find all the market splits.  The goal is to have an original open or close price adjusted for splits so that derived features can be built from it.\n\nWe find:\n- 447 split announcements\n- of which 224 were for stocks in the market_train data\n- of which 126 were in the market_train trading window (the relevant set)\n- of which I could find **105** what I think are the **actual stock split dates**\n\nNow, if you could only find the exact date of the split for the **remaining 21** for me, or somehow determine that the split was not a real announcement or never took place \u2026 :-)\n","1958e027":"Let's reduce the assetCodes in news_train_df to just one asset","63e2e226":"Find the date of the split","bf5895d9":"## Done ","440c02f2":"Apple's 7-to-1 stock split occurred on 2014-06-09.  It's worth noting that while the `open` and `close` columns don't take into account the stock split, the returns columns do (see excerpt below).","bc5448ad":"Since it appears there's no issues with the return columns, if you're not planning on calculating any new features using the `open` and `close` columns, then you shouldn't need to worry about stock splits.\n\nHowever, I am interested in trying to create some new features from these columns (e.g. moving averages), so I'm looking at adjusting historical stock prices like Apple's to account for splits.  Below is a graph showing an adjusted view of Apple's `open` price along with some handy moving averages.","5ab502b5":"Visualize the date of the announcement (in green) and the date of the split (in red)","13a3f19b":"So let's find all the places in the news where there was a stock split announcement.  Let's only take those that determine what the actual split will be (e.g. two-for-one), for better certainty that it is a real one.","84decb0e":"From the graph it looks like Apple's stock plummeted in June 2014, but acutally the stock just split.  There is commentary about this event in the news data..."}}