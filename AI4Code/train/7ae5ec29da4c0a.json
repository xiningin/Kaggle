{"cell_type":{"40897c8c":"code","94696cec":"code","2510c739":"code","987cbbcb":"code","06b92993":"code","f3d52428":"code","4420ed38":"code","2d7371ae":"code","50b21165":"code","58be363a":"code","277aefea":"code","942ac88f":"code","a2f2ee7b":"code","7fad0574":"code","734762a7":"code","f9dc225d":"code","e58c6202":"code","8040441f":"code","aacc0e23":"code","9b6cf621":"code","5f01143b":"code","c320b4fc":"code","76ff2e5f":"markdown","86f95c26":"markdown","bd7fa568":"markdown","cbdc2d74":"markdown","7ab2d48b":"markdown","4ea612c9":"markdown","fd06ccd0":"markdown","e0aa6e5d":"markdown","36bf91cc":"markdown","df7db9fb":"markdown","3e888e67":"markdown","df44a1aa":"markdown","a06113f1":"markdown"},"source":{"40897c8c":"\n#import required libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt","94696cec":"#Reading csv(comma separated values) file.......\niris=pd.read_csv(\"..\/input\/Iris.csv\")","2510c739":"\n#Check dataset.......\niris.head()\n\n","987cbbcb":"#Checking the dimensions....\niris.shape\n","06b92993":"\n#checking whether a dataset contain a missing value or not\/.....\niris.isnull().sum()","f3d52428":"\n'''checking if there is any inconsistency in the dataset as we see there \nare no null values in the dataset, so the data can be processed.....\/'''\niris.info()","4420ed38":"#Checkig the unique values in species column which is our target variable..\niris[\"Species\"].unique()","2d7371ae":"'''dropping the Id column as it is unnecessary, axis=1 specifies that \nit should be column wise, inplace =1 means \nthe changes should be reflected into the dataframe'''\niris.drop('Id',axis=1,inplace=True)\n","50b21165":"\n#checking data after droping \"ID column\".....\niris.head()","58be363a":"\n'''Some Exploratory Data Analysis With Iris'''\n\nfig = iris[iris.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='orange', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='blue', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Sepal Length\")\nfig.set_ylabel(\"Sepal Width\")\nfig.set_title(\"Sepal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()\nfig.savefig(\"Sepal Length VS Width.png\")","277aefea":"\n'''Some Exploratory Data Analysis With Iris'''\nfig = iris[iris.Species=='Iris-setosa'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='orange', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\" Petal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()\nfig.savefig(\"Petal Length VS Width.png\")\n","942ac88f":"\n'''let us see how are the length and width are distributed'''\niris.hist(edgecolor='Yellow', linewidth=1.2)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()","a2f2ee7b":"\n'''Let us see how the length and width vary according to the species'''\nplt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=iris)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=iris)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=iris)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=iris)\nfig.savefig(\"variable with species.png\")\n","7fad0574":"plt.figure(figsize=(7,4)) #7 is the size of the width and 4 is parts.... \nsns.heatmap(iris.corr(),annot=True,cmap='cubehelix_r') #draws  heatmap with input as the correlation matrix calculted by(iris.corr())\nplt.show()","734762a7":"\n#Separating dependent and independent values..\nX=iris.iloc[:, :-1].values\nX\n","f9dc225d":" \ny=iris.iloc[:, -1].values\ny\n","e58c6202":"#splitting into training set and test.\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.2, random_state = 123)\n","8040441f":"# Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","aacc0e23":"# Fitting Random Forest Classification to the Training set\nfrom sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)\n","9b6cf621":"# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n","5f01143b":"# Making the Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm\n","c320b4fc":"\nfrom sklearn import metrics #for checking the model accuracy\nprint('The accuracy of the Random forest is:',metrics.accuracy_score(y_pred,y_test))","76ff2e5f":"# ||Goal||--# \nPredict the species of an iris using the measurements.","86f95c26":"![](https:\/\/i0.wp.com\/analyticsdefined.com\/wp-content\/uploads\/2018\/01\/random-forests.png?fit=1965%2C942&ssl=1)","bd7fa568":"# ||Visualize Petal Length VS Petal Width||","cbdc2d74":"# ||Step 1-Data Preprocessing||#","7ab2d48b":"# ||Random forest algorthim||-#","4ea612c9":"# ||Look something like this||...#","fd06ccd0":"# ||Exercise|| #","e0aa6e5d":"Random Forest is a **flexible**, **easy** to use machine learning algorithm that produces, even without hyper-parameter tuning, a great result most of the time. It is also one of the most used algorithms, because it\u2019s simplicity and the fact that it can be used for both classification and regression tasks.","36bf91cc":"# ||Visualize Sepal Length VS Sepal Width||","df7db9fb":"\n'''Now, when we train any algorithm, the number of features and \ntheir correlation plays an important role. \nIf there are features and many of the features are highly correlated,\nthen training an algorithm with all the featues will reduce the accuracy. \nThus features selection should be done carefully. \nThis dataset has less featues but still we will see the correlation.'''","3e888e67":"# ||Step 2-Building a model||","df44a1aa":"# ||About the Dataset:-||#\n\n* There are 150 observations with 4 features each (sepal length, sepal width, petal length, petal width).\n* There are no null values, so we don't have to worry about that.\n* There are 50 observations of each species (setosa, versicolor, virginica).","a06113f1":"**Hi,folks**......Hope you are doing well!\n\nToday I wanna work on random forest using iris dataset.\n"}}